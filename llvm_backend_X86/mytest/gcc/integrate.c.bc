; ModuleID = 'integrate.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct._IO_FILE = type opaque
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type { i32, i32, %struct.initial_value_pair* }
%struct.initial_value_pair = type { %struct.rtx_def*, %struct.rtx_def* }
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.lang_decl = type opaque
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.param_info = type { i8*, i32, i8* }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i1 (%union.tree_node*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void ()*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)* }
%struct.inline_remap = type { i32, %union.tree_node*, %struct.rtx_def*, %struct.varray_head_tag*, %struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**, i32, i32, %struct.varray_head_tag*, i32, %struct.rtx_def*, %struct.rtvec_def*, %struct.rtvec_def*, %struct.rtvec_def*, %struct.rtx_def*, i8*, %struct.rtx_def**, i32, [30 x %struct.equiv_table], %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.equiv_table = type { %struct.rtx_def*, %struct.rtx_def* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.realvaluetype = type { [3 x i64] }
%struct.mem_attrs = type { i64, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32 }

@targetm = external global %struct.gcc_target
@compiler_params = external global %struct.param_info*
@optimize_size = external global i32
@.str = private unnamed_addr constant [26 x i8] c"function cannot be inline\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@cfun = external global %struct.function*
@.str1 = private unnamed_addr constant [34 x i8] c"varargs function cannot be inline\00", align 1
@.str2 = private unnamed_addr constant [39 x i8] c"function using alloca cannot be inline\00", align 1
@.str3 = private unnamed_addr constant [39 x i8] c"function using setjmp cannot be inline\00", align 1
@.str4 = private unnamed_addr constant [34 x i8] c"function uses __builtin_eh_return\00", align 1
@.str5 = private unnamed_addr constant [48 x i8] c"function with nested functions cannot be inline\00", align 1
@.str6 = private unnamed_addr constant [65 x i8] c"function with label addresses used in initializers cannot inline\00", align 1
@.str7 = private unnamed_addr constant [32 x i8] c"function too large to be inline\00", align 1
@.str8 = private unnamed_addr constant [58 x i8] c"inline functions not supported for this return value type\00", align 1
@.str9 = private unnamed_addr constant [57 x i8] c"function with varying-size return value cannot be inline\00", align 1
@.str10 = private unnamed_addr constant [54 x i8] c"function with varying-size parameter cannot be inline\00", align 1
@.str11 = private unnamed_addr constant [58 x i8] c"function with transparent unit parameter cannot be inline\00", align 1
@rtx_class = external constant [153 x i8]
@.str12 = private unnamed_addr constant [42 x i8] c"function with computed jump cannot inline\00", align 1
@.str13 = private unnamed_addr constant [45 x i8] c"function with nonlocal goto cannot be inline\00", align 1
@.str14 = private unnamed_addr constant [61 x i8] c"function with target specific attribute(s) cannot be inlined\00", align 1
@flag_no_inline = external global i32
@parmdecl_map = internal unnamed_addr global %union.tree_node** null, align 8
@.str15 = private unnamed_addr constant [12 x i8] c"integrate.c\00", align 1
@__FUNCTION__.save_for_inline = private unnamed_addr constant [16 x i8] c"save_for_inline\00", align 1
@in_nonparm_insns = internal unnamed_addr global i1 false
@write_symbols = external global i32
@__FUNCTION__.expand_inline_function = private unnamed_addr constant [23 x i8] c"expand_inline_function\00", align 1
@const_int_rtx = external global [129 x %struct.rtx_def*]
@.str16 = private unnamed_addr constant [10 x i8] c"block_map\00", align 1
@global_const_equiv_varray = common global %struct.varray_head_tag* null, align 8
@global_rtl = external global [11 x %struct.rtx_def*]
@inlining = internal unnamed_addr global %struct.function* null, align 8
@target_flags = external global i32
@mode_bitsize = external constant [59 x i16]
@inline_function_decl = external global %union.tree_node*
@current_function_decl = external global %union.tree_node*
@flag_test_coverage = external global i32
@input_filename = external global i8*
@lineno = external global i32
@rtx_equal_function_value_matters = external global i32
@mode_class = external constant [59 x i32]
@__FUNCTION__.copy_rtx_and_substitute = private unnamed_addr constant [24 x i8] c"copy_rtx_and_substitute\00", align 1
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@debug_hooks = external global %struct.gcc_debug_hooks*
@do_nothing_debug_hooks = external global %struct.gcc_debug_hooks
@mode_size = external constant [59 x i8]
@__FUNCTION__.subst_constants = private unnamed_addr constant [16 x i8] c"subst_constants\00", align 1
@__FUNCTION__.copy_insn_list = private unnamed_addr constant [15 x i8] c"copy_insn_list\00", align 1
@static_chain_incoming_rtx = external global %struct.rtx_def*

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_label_from_map(%struct.inline_remap* nocapture readonly %map, i32 %i) #0 {
entry:
  %idxprom = sext i32 %i to i64
  %label_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 5
  %0 = load %struct.rtx_def*** %label_map, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.rtx_def** %0, i64 %idxprom
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !7
  %cmp = icmp eq %struct.rtx_def* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_label_rtx() #4
  %2 = load %struct.rtx_def*** %label_map, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.rtx_def** %2, i64 %idxprom
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx3, align 8, !tbaa !7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %x.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %1, %entry ]
  ret %struct.rtx_def* %x.0
}

declare %struct.rtx_def* @gen_label_rtx() #1

; Function Attrs: nounwind uwtable
define zeroext i1 @function_attribute_inlinable_p(%union.tree_node* %fndecl) #0 {
entry:
  %attributes = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 16
  %a.027 = load %union.tree_node** %attributes, align 8
  %tobool28 = icmp eq %union.tree_node* %a.027, null
  br i1 %tobool28, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %.pre = load %struct.attribute_spec** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 4), align 8, !tbaa !8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc11
  %0 = phi %struct.attribute_spec* [ %.pre, %for.body.lr.ph ], [ %7, %for.inc11 ]
  %a.029 = phi %union.tree_node* [ %a.027, %for.body.lr.ph ], [ %a.0, %for.inc11 ]
  %purpose = getelementptr inbounds %union.tree_node* %a.029, i64 0, i32 0, i32 1
  %1 = load i8** %purpose, align 8
  %2 = bitcast i8* %1 to %union.tree_node*
  %name224 = getelementptr inbounds %struct.attribute_spec* %0, i64 0, i32 0
  %3 = load i8** %name224, align 8, !tbaa !14
  %cmp25 = icmp eq i8* %3, null
  br i1 %cmp25, label %for.inc11, label %for.body3

for.cond1:                                        ; preds = %for.body3
  %4 = load %struct.attribute_spec** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 4), align 8, !tbaa !8
  %name2 = getelementptr inbounds %struct.attribute_spec* %4, i64 %indvars.iv.next, i32 0
  %5 = load i8** %name2, align 8, !tbaa !14
  %cmp = icmp eq i8* %5, null
  br i1 %cmp, label %for.inc11, label %for.body3

for.body3:                                        ; preds = %for.body, %for.cond1
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond1 ], [ 0, %for.body ]
  %6 = phi i8* [ %5, %for.cond1 ], [ %3, %for.body ]
  %call = tail call i32 @is_attribute_p(i8* %6, %union.tree_node* %2) #4
  %tobool7 = icmp eq i32 %call, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool7, label %for.cond1, label %if.then14

for.inc11:                                        ; preds = %for.cond1, %for.body
  %7 = phi %struct.attribute_spec* [ %0, %for.body ], [ %4, %for.cond1 ]
  %chain = getelementptr inbounds %union.tree_node* %a.029, i64 0, i32 0, i32 0, i32 0
  %a.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %a.0, null
  br i1 %tobool, label %return, label %for.body

if.then14:                                        ; preds = %for.body3
  %8 = load i1 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 8), align 8, !tbaa !16
  %call15 = tail call zeroext i1 %8(%union.tree_node* %fndecl) #4
  br label %return

return:                                           ; preds = %for.inc11, %entry, %if.then14
  %retval.0 = phi i1 [ %call15, %if.then14 ], [ true, %entry ], [ true, %for.inc11 ]
  ret i1 %retval.0
}

declare i32 @is_attribute_p(i8*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define i8* @function_cannot_inline_p(%union.tree_node* %fndecl) #0 {
entry:
  %type = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !17
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %1 = load i8** %values, align 8
  %2 = bitcast i8* %1 to %union.tree_node*
  %call = tail call %union.tree_node* @tree_last(%union.tree_node* %2) #4
  %inline_flag = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 5
  %3 = bitcast i48* %inline_flag to i64*
  %bf.load = load i64* %3, align 8
  %bf.cast = and i64 %bf.load, 2048
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %4 = load %struct.param_info** @compiler_params, align 8, !tbaa !7
  %value = getelementptr inbounds %struct.param_info* %4, i64 0, i32 1
  %5 = load i32* %value, align 4, !tbaa !19
  %arguments = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 10
  %6 = load %union.tree_node** %arguments, align 8, !tbaa !21
  %call3 = tail call i32 @list_length(%union.tree_node* %6) #4
  %mul = shl i32 %call3, 3
  %add = add nsw i32 %mul, %5
  br label %cond.end17

cond.false:                                       ; preds = %entry
  %7 = load i32* @optimize_size, align 4, !tbaa !24
  %tobool4 = icmp eq i32 %7, 0
  %arguments7 = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 10
  %8 = load %union.tree_node** %arguments7, align 8, !tbaa !21
  %call8 = tail call i32 @list_length(%union.tree_node* %8) #4
  br i1 %tobool4, label %cond.false11, label %cond.true5

cond.true5:                                       ; preds = %cond.false
  %mul9 = mul nsw i32 %call8, 3
  %div = sdiv i32 %mul9, 2
  %add10 = add nsw i32 %div, 1
  br label %cond.end17

cond.false11:                                     ; preds = %cond.false
  %add15 = shl i32 %call8, 3
  %mul16 = add i32 %add15, 64
  br label %cond.end17

cond.end17:                                       ; preds = %cond.true5, %cond.false11, %cond.true
  %cond18 = phi i32 [ %add, %cond.true ], [ %add10, %cond.true5 ], [ %mul16, %cond.false11 ]
  %bf.load20 = load i64* %3, align 8
  %bf.cast23 = and i64 %bf.load20, 68719476736
  %tobool24 = icmp eq i64 %bf.cast23, 0
  br i1 %tobool24, label %if.end, label %return

if.end:                                           ; preds = %cond.end17
  %tobool25 = icmp eq %union.tree_node* %call, null
  br i1 %tobool25, label %lor.lhs.false, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %value26 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2
  %9 = bitcast i32* %value26 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !25
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !7
  %cmp = icmp eq %union.tree_node* %10, %11
  br i1 %cmp, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %12 = load %struct.function** @cfun, align 8, !tbaa !7
  %varargs = getelementptr inbounds %struct.function* %12, i64 0, i32 56
  %13 = bitcast i24* %varargs to i32*
  %bf.load27 = load i32* %13, align 8
  %bf.clear29 = and i32 %bf.load27, 65536
  %tobool30 = icmp eq i32 %bf.clear29, 0
  br i1 %tobool30, label %if.end32, label %return

if.end32:                                         ; preds = %lor.lhs.false
  %bf.clear35 = and i32 %bf.load27, 64
  %tobool36 = icmp eq i32 %bf.clear35, 0
  br i1 %tobool36, label %if.end38, label %return

if.end38:                                         ; preds = %if.end32
  %bf.clear41 = and i32 %bf.load27, 16
  %tobool42 = icmp eq i32 %bf.clear41, 0
  br i1 %tobool42, label %if.end44, label %return

if.end44:                                         ; preds = %if.end38
  %bf.clear47 = and i32 %bf.load27, 128
  %tobool48 = icmp eq i32 %bf.clear47, 0
  br i1 %tobool48, label %if.end50, label %return

if.end50:                                         ; preds = %if.end44
  %bf.clear53 = and i32 %bf.load27, 1024
  %tobool54 = icmp eq i32 %bf.clear53, 0
  br i1 %tobool54, label %if.end56, label %return

if.end56:                                         ; preds = %if.end50
  %expr = getelementptr inbounds %struct.function* %12, i64 0, i32 2
  %14 = load %struct.expr_status** %expr, align 8, !tbaa !27
  %x_forced_labels = getelementptr inbounds %struct.expr_status* %14, i64 0, i32 5
  %15 = load %struct.rtx_def** %x_forced_labels, align 8, !tbaa !30
  %tobool57 = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool57, label %if.end59, label %return

if.end59:                                         ; preds = %if.end56
  %cannot_inline = getelementptr inbounds %struct.function* %12, i64 0, i32 16
  %16 = load i8** %cannot_inline, align 8, !tbaa !32
  %tobool60 = icmp eq i8* %16, null
  br i1 %tobool60, label %if.end63, label %return

if.end63:                                         ; preds = %if.end59
  %call64 = tail call i32 @get_max_uid() #4
  %mul65 = mul nsw i32 %cond18, 3
  %cmp66 = icmp sgt i32 %call64, %mul65
  br i1 %cmp66, label %return, label %if.end68

if.end68:                                         ; preds = %if.end63
  %17 = load %struct.function** @cfun, align 8, !tbaa !7
  %returns_pcc_struct = getelementptr inbounds %struct.function* %17, i64 0, i32 56
  %18 = bitcast i24* %returns_pcc_struct to i32*
  %bf.load69 = load i32* %18, align 8
  %bf.clear71 = and i32 %bf.load69, 2
  %tobool72 = icmp eq i32 %bf.clear71, 0
  br i1 %tobool72, label %if.end74, label %return

if.end74:                                         ; preds = %if.end68
  %19 = load %union.tree_node** %type, align 8, !tbaa !17
  %type78 = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 0, i32 1
  %20 = load %union.tree_node** %type78, align 8, !tbaa !17
  %code = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 0, i32 2
  %bf.load80 = load i32* %code, align 8
  %bf.clear81 = and i32 %bf.load80, 255
  %cmp82 = icmp eq i32 %bf.clear81, 5
  br i1 %cmp82, label %if.end91, label %land.lhs.true83

land.lhs.true83:                                  ; preds = %if.end74
  %call88 = tail call i64 @int_size_in_bytes(%union.tree_node* %20) #4
  %cmp89 = icmp slt i64 %call88, 0
  br i1 %cmp89, label %return, label %if.end91

if.end91:                                         ; preds = %if.end74, %land.lhs.true83
  %arguments93 = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 10
  %parms.0220 = load %union.tree_node** %arguments93, align 8
  %tobool94221 = icmp eq %union.tree_node* %parms.0220, null
  br i1 %tobool94221, label %for.end, label %for.body

for.body:                                         ; preds = %if.end91, %for.inc
  %parms.0222 = phi %union.tree_node* [ %parms.0, %for.inc ], [ %parms.0220, %if.end91 ]
  %type96 = getelementptr inbounds %union.tree_node* %parms.0222, i64 0, i32 0, i32 0, i32 1
  %21 = load %union.tree_node** %type96, align 8, !tbaa !17
  %call97 = tail call i64 @int_size_in_bytes(%union.tree_node* %21) #4
  %cmp98 = icmp slt i64 %call97, 0
  br i1 %cmp98, label %return, label %if.else

if.else:                                          ; preds = %for.body
  %22 = load %union.tree_node** %type96, align 8, !tbaa !17
  %code103 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %bf.load104 = load i32* %code103, align 8
  %bf.clear105 = and i32 %bf.load104, 255
  %cmp106 = icmp eq i32 %bf.clear105, 21
  br i1 %cmp106, label %land.lhs.true107, label %for.inc

land.lhs.true107:                                 ; preds = %if.else
  %type110 = bitcast %union.tree_node* %22 to %struct.tree_type*
  %transparent_union_flag = getelementptr inbounds %struct.tree_type* %type110, i64 0, i32 6
  %bf.load111 = load i32* %transparent_union_flag, align 4
  %bf.clear113 = and i32 %bf.load111, 524288
  %tobool114 = icmp eq i32 %bf.clear113, 0
  br i1 %tobool114, label %for.inc, label %return

for.inc:                                          ; preds = %land.lhs.true107, %if.else
  %chain = getelementptr inbounds %union.tree_node* %parms.0222, i64 0, i32 0, i32 0, i32 0
  %parms.0 = load %union.tree_node** %chain, align 8
  %tobool94 = icmp eq %union.tree_node* %parms.0, null
  br i1 %tobool94, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end91
  %call119 = tail call i32 @get_max_uid() #4
  %cmp120 = icmp sgt i32 %call119, %cond18
  br i1 %cmp120, label %if.then121, label %if.end141

if.then121:                                       ; preds = %for.end
  %call122 = tail call %struct.rtx_def* @get_first_nonparm_insn() #4
  %tobool124215 = icmp ne %struct.rtx_def* %call122, null
  %cmp125216 = icmp sgt i32 %cond18, 0
  %or.cond217 = and i1 %tobool124215, %cmp125216
  br i1 %or.cond217, label %for.body126, label %for.end136

for.body126:                                      ; preds = %if.then121, %for.body126
  %ninsns.0219 = phi i32 [ %inc.ninsns.0, %for.body126 ], [ 0, %if.then121 ]
  %insn.0218 = phi %struct.rtx_def* [ %25, %for.body126 ], [ %call122, %if.then121 ]
  %23 = getelementptr inbounds %struct.rtx_def* %insn.0218, i64 0, i32 0
  %bf.load127 = load i32* %23, align 8
  %bf.clear128 = and i32 %bf.load127, 65535
  %idxprom213 = zext i32 %bf.clear128 to i64
  %arrayidx129 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom213
  %24 = load i8* %arrayidx129, align 1, !tbaa !33
  %cmp130 = icmp eq i8 %24, 105
  %inc = zext i1 %cmp130 to i32
  %inc.ninsns.0 = add nsw i32 %inc, %ninsns.0219
  %arrayidx135 = getelementptr inbounds %struct.rtx_def* %insn.0218, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %tobool124 = icmp ne %struct.rtx_def* %25, null
  %cmp125 = icmp slt i32 %inc.ninsns.0, %cond18
  %or.cond = and i1 %tobool124, %cmp125
  br i1 %or.cond, label %for.body126, label %for.end136

for.end136:                                       ; preds = %for.body126, %if.then121
  %cmp125.lcssa = phi i1 [ %cmp125216, %if.then121 ], [ %cmp125, %for.body126 ]
  br i1 %cmp125.lcssa, label %if.end141, label %return

if.end141:                                        ; preds = %for.end136, %for.end
  %26 = load %struct.function** @cfun, align 8, !tbaa !7
  %has_computed_jump = getelementptr inbounds %struct.function* %26, i64 0, i32 56
  %27 = bitcast i24* %has_computed_jump to i32*
  %bf.load142 = load i32* %27, align 8
  %bf.clear144 = and i32 %bf.load142, 2048
  %tobool145 = icmp eq i32 %bf.clear144, 0
  br i1 %tobool145, label %if.end147, label %return

if.end147:                                        ; preds = %if.end141
  %bf.clear150 = and i32 %bf.load142, 512
  %tobool151 = icmp eq i32 %bf.clear150, 0
  br i1 %tobool151, label %if.end153, label %return

if.end153:                                        ; preds = %if.end147
  %result = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 11
  %28 = load %union.tree_node** %result, align 8, !tbaa !34
  %rtl = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 17
  %29 = load %struct.rtx_def** %rtl, align 8, !tbaa !35
  %cmp156 = icmp eq %struct.rtx_def* %29, null
  br i1 %cmp156, label %if.end185, label %cond.end177

cond.end177:                                      ; preds = %if.end153
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load179 = load i32* %30, align 8
  %bf.clear180 = and i32 %bf.load179, 65535
  %cmp181 = icmp eq i32 %bf.clear180, 39
  br i1 %cmp181, label %return, label %if.end185

if.end185:                                        ; preds = %if.end153, %cond.end177
  %attributes.i = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 16
  %a.027.i = load %union.tree_node** %attributes.i, align 8
  %tobool28.i = icmp eq %union.tree_node* %a.027.i, null
  br i1 %tobool28.i, label %return, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end185
  %.pre.i = load %struct.attribute_spec** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 4), align 8, !tbaa !8
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc11.i, %for.body.lr.ph.i
  %31 = phi %struct.attribute_spec* [ %.pre.i, %for.body.lr.ph.i ], [ %38, %for.inc11.i ]
  %a.029.i = phi %union.tree_node* [ %a.027.i, %for.body.lr.ph.i ], [ %a.0.i, %for.inc11.i ]
  %purpose.i = getelementptr inbounds %union.tree_node* %a.029.i, i64 0, i32 0, i32 1
  %32 = load i8** %purpose.i, align 8
  %33 = bitcast i8* %32 to %union.tree_node*
  %name224.i = getelementptr inbounds %struct.attribute_spec* %31, i64 0, i32 0
  %34 = load i8** %name224.i, align 8, !tbaa !14
  %cmp25.i = icmp eq i8* %34, null
  br i1 %cmp25.i, label %for.inc11.i, label %for.body3.i

for.cond1.i:                                      ; preds = %for.body3.i
  %35 = load %struct.attribute_spec** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 4), align 8, !tbaa !8
  %name2.i = getelementptr inbounds %struct.attribute_spec* %35, i64 %indvars.iv.next.i, i32 0
  %36 = load i8** %name2.i, align 8, !tbaa !14
  %cmp.i = icmp eq i8* %36, null
  br i1 %cmp.i, label %for.inc11.i, label %for.body3.i

for.body3.i:                                      ; preds = %for.body.i, %for.cond1.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.cond1.i ], [ 0, %for.body.i ]
  %37 = phi i8* [ %36, %for.cond1.i ], [ %34, %for.body.i ]
  %call.i = tail call i32 @is_attribute_p(i8* %37, %union.tree_node* %33) #4
  %tobool7.i = icmp eq i32 %call.i, 0
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %tobool7.i, label %for.cond1.i, label %if.then14.i

for.inc11.i:                                      ; preds = %for.cond1.i, %for.body.i
  %38 = phi %struct.attribute_spec* [ %31, %for.body.i ], [ %35, %for.cond1.i ]
  %chain.i = getelementptr inbounds %union.tree_node* %a.029.i, i64 0, i32 0, i32 0, i32 0
  %a.0.i = load %union.tree_node** %chain.i, align 8
  %tobool.i = icmp eq %union.tree_node* %a.0.i, null
  br i1 %tobool.i, label %return, label %for.body.i

if.then14.i:                                      ; preds = %for.body3.i
  %39 = load i1 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 8), align 8, !tbaa !16
  %call15.i = tail call zeroext i1 %39(%union.tree_node* %fndecl) #4
  %phitmp = select i1 %call15.i, i8* null, i8* getelementptr inbounds ([61 x i8]* @.str14, i64 0, i64 0)
  br label %return

return:                                           ; preds = %land.lhs.true107, %for.body, %for.inc11.i, %if.then14.i, %if.end185, %cond.end177, %if.end147, %if.end141, %for.end136, %land.lhs.true83, %if.end68, %if.end63, %if.end59, %if.end56, %if.end50, %if.end44, %if.end38, %if.end32, %lor.lhs.false, %land.lhs.true, %cond.end17
  %retval.0 = phi i8* [ getelementptr inbounds ([26 x i8]* @.str, i64 0, i64 0), %cond.end17 ], [ getelementptr inbounds ([34 x i8]* @.str1, i64 0, i64 0), %land.lhs.true ], [ getelementptr inbounds ([34 x i8]* @.str1, i64 0, i64 0), %lor.lhs.false ], [ getelementptr inbounds ([39 x i8]* @.str2, i64 0, i64 0), %if.end32 ], [ getelementptr inbounds ([39 x i8]* @.str3, i64 0, i64 0), %if.end38 ], [ getelementptr inbounds ([34 x i8]* @.str4, i64 0, i64 0), %if.end44 ], [ getelementptr inbounds ([48 x i8]* @.str5, i64 0, i64 0), %if.end50 ], [ getelementptr inbounds ([65 x i8]* @.str6, i64 0, i64 0), %if.end56 ], [ %16, %if.end59 ], [ getelementptr inbounds ([32 x i8]* @.str7, i64 0, i64 0), %if.end63 ], [ getelementptr inbounds ([58 x i8]* @.str8, i64 0, i64 0), %if.end68 ], [ getelementptr inbounds ([57 x i8]* @.str9, i64 0, i64 0), %land.lhs.true83 ], [ getelementptr inbounds ([32 x i8]* @.str7, i64 0, i64 0), %for.end136 ], [ getelementptr inbounds ([42 x i8]* @.str12, i64 0, i64 0), %if.end141 ], [ getelementptr inbounds ([45 x i8]* @.str13, i64 0, i64 0), %if.end147 ], [ getelementptr inbounds ([58 x i8]* @.str8, i64 0, i64 0), %cond.end177 ], [ %phitmp, %if.then14.i ], [ null, %if.end185 ], [ null, %for.inc11.i ], [ getelementptr inbounds ([58 x i8]* @.str11, i64 0, i64 0), %land.lhs.true107 ], [ getelementptr inbounds ([54 x i8]* @.str10, i64 0, i64 0), %for.body ]
  ret i8* %retval.0
}

declare %union.tree_node* @tree_last(%union.tree_node*) #1

declare i32 @list_length(%union.tree_node*) #1

declare i32 @get_max_uid() #1

declare i64 @int_size_in_bytes(%union.tree_node*) #1

declare %struct.rtx_def* @get_first_nonparm_insn() #1

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @copy_decl_for_inlining(%union.tree_node* %decl, %union.tree_node* readnone %from_fn, %union.tree_node* %to_fn) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -35
  %switch = icmp ult i32 %bf.clear.off, 2
  br i1 %switch, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %0 = load %union.tree_node** %name, align 8, !tbaa !36
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !17
  %call = tail call %union.tree_node* @build_decl(i32 34, %union.tree_node* %0, %union.tree_node* %1) #4
  %bf.load9 = load i32* %code, align 8
  %bf.clear10 = and i32 %bf.load9, 1024
  %addressable_flag12 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %bf.load13 = load i32* %addressable_flag12, align 8
  %bf.clear14 = and i32 %bf.load13, -1025
  %bf.set = or i32 %bf.clear14, %bf.clear10
  store i32 %bf.set, i32* %addressable_flag12, align 8
  %bf.load16 = load i32* %code, align 8
  %bf.clear18 = and i32 %bf.load16, 4096
  %bf.clear24 = and i32 %bf.set, -4097
  %bf.set25 = or i32 %bf.clear24, %bf.clear18
  store i32 %bf.set25, i32* %addressable_flag12, align 8
  %bf.load27 = load i32* %code, align 8
  %bf.clear29 = and i32 %bf.load27, 2048
  %bf.clear35 = and i32 %bf.set25, -2049
  %bf.set36 = or i32 %bf.clear35, %bf.clear29
  store i32 %bf.set36, i32* %addressable_flag12, align 8
  br label %if.end51

if.else:                                          ; preds = %entry
  %call37 = tail call %union.tree_node* @copy_node(%union.tree_node* %decl) #4
  %lang_specific = getelementptr inbounds %union.tree_node* %call37, i64 0, i32 0, i32 24
  %2 = load %struct.lang_decl** %lang_specific, align 8, !tbaa !37
  %tobool = icmp eq %struct.lang_decl* %2, null
  br i1 %tobool, label %if.end, label %if.then39

if.then39:                                        ; preds = %if.else
  tail call void @copy_lang_decl(%union.tree_node* %call37) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then39
  %code41 = getelementptr inbounds %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 2
  %bf.load42 = load i32* %code41, align 8
  %bf.clear43 = and i32 %bf.load42, 255
  %cmp44 = icmp eq i32 %bf.clear43, 31
  br i1 %cmp44, label %if.then45, label %if.end51

if.then45:                                        ; preds = %if.end
  %bf.clear49 = and i32 %bf.load42, -1025
  store i32 %bf.clear49, i32* %code41, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.end, %if.then45, %if.then
  %bf.load60 = phi i32 [ %bf.set36, %if.then ], [ %bf.clear49, %if.then45 ], [ %bf.load42, %if.end ]
  %copy.0 = phi %union.tree_node* [ %call, %if.then ], [ %call37, %if.then45 ], [ %call37, %if.end ]
  %abstract_origin = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %3 = load %union.tree_node** %abstract_origin, align 8, !tbaa !38
  %tobool53 = icmp eq %union.tree_node* %3, null
  %decl. = select i1 %tobool53, %union.tree_node* %decl, %union.tree_node* %3
  %abstract_origin57 = getelementptr inbounds %union.tree_node* %copy.0, i64 0, i32 0, i32 13
  store %union.tree_node* %decl., %union.tree_node** %abstract_origin57, align 8, !tbaa !38
  %rtl = getelementptr inbounds %union.tree_node* %copy.0, i64 0, i32 0, i32 17
  store %struct.rtx_def* null, %struct.rtx_def** %rtl, align 8, !tbaa !35
  %used_flag = getelementptr inbounds %union.tree_node* %copy.0, i64 0, i32 0, i32 0, i32 2
  %bf.set62 = or i32 %bf.load60, 65536
  store i32 %bf.set62, i32* %used_flag, align 8
  %context = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %4 = load %union.tree_node** %context, align 8, !tbaa !39
  %tobool64 = icmp ne %union.tree_node* %4, null
  %cmp69 = icmp eq %union.tree_node* %4, %from_fn
  %or.cond = and i1 %tobool64, %cmp69
  br i1 %or.cond, label %if.else71, label %if.end83

if.else71:                                        ; preds = %if.end51
  %bf.load73 = load i32* %code, align 8
  %bf.clear75 = and i32 %bf.load73, 262144
  %tobool76 = icmp eq i32 %bf.clear75, 0
  br i1 %tobool76, label %if.else78, label %if.end83

if.else78:                                        ; preds = %if.else71
  %context80 = getelementptr inbounds %union.tree_node* %copy.0, i64 0, i32 0, i32 9
  store %union.tree_node* %to_fn, %union.tree_node** %context80, align 8, !tbaa !39
  br label %if.end83

if.end83:                                         ; preds = %if.end51, %if.else71, %if.else78
  ret %union.tree_node* %copy.0
}

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @copy_node(%union.tree_node*) #1

declare void @copy_lang_decl(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @save_for_inline(%union.tree_node* nocapture %fndecl) #0 {
entry:
  %0 = load i32* @flag_no_inline, align 4, !tbaa !24
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !7
  %x_max_parm_reg = getelementptr inbounds %struct.function* %1, i64 0, i32 37
  %2 = load i32* %x_max_parm_reg, align 4, !tbaa !40
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 3
  %call = tail call noalias i8* @xmalloc(i64 %mul) #4
  %3 = bitcast i8* %call to %union.tree_node**
  store %union.tree_node** %3, %union.tree_node*** @parmdecl_map, align 8, !tbaa !7
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = load %struct.function** @cfun, align 8, !tbaa !7
  %x_return_label = getelementptr inbounds %struct.function* %4, i64 0, i32 24
  %5 = load %struct.rtx_def** %x_return_label, align 8, !tbaa !41
  %cmp = icmp eq %struct.rtx_def* %5, null
  br i1 %cmp, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %call3 = tail call %struct.rtx_def* @gen_label_rtx() #4
  %6 = load %struct.function** @cfun, align 8, !tbaa !7
  %x_return_label4 = getelementptr inbounds %struct.function* %6, i64 0, i32 24
  store %struct.rtx_def* %call3, %struct.rtx_def** %x_return_label4, align 8, !tbaa !41
  %7 = load %struct.function** @cfun, align 8, !tbaa !7
  %x_return_label5 = getelementptr inbounds %struct.function* %7, i64 0, i32 24
  %8 = load %struct.rtx_def** %x_return_label5, align 8, !tbaa !41
  %call6 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %8) #4
  br label %if.end7

if.end7:                                          ; preds = %if.then2, %if.end
  %9 = load i32* @flag_no_inline, align 4, !tbaa !24
  %tobool8 = icmp eq i32 %9, 0
  br i1 %tobool8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end7
  %10 = load %union.tree_node*** @parmdecl_map, align 8, !tbaa !7
  %11 = bitcast %union.tree_node** %10 to i8*
  %12 = load %struct.function** @cfun, align 8, !tbaa !7
  %x_max_parm_reg.i = getelementptr inbounds %struct.function* %12, i64 0, i32 37
  %13 = load i32* %x_max_parm_reg.i, align 4, !tbaa !40
  %conv.i = zext i32 %13 to i64
  %mul.i = shl nuw nsw i64 %conv.i, 3
  tail call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 %mul.i, i32 1, i1 false) #4
  %arguments.i = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 10
  %14 = load %union.tree_node** %arguments.i, align 8, !tbaa !21
  %call.i = tail call i32 @list_length(%union.tree_node* %14) #4
  %call1.i = tail call %struct.rtvec_def* @rtvec_alloc(i32 %call.i) #4
  %parms.0108.i = load %union.tree_node** %arguments.i, align 8
  %tobool109.i = icmp eq %union.tree_node* %parms.0108.i, null
  br i1 %tobool109.i, label %initialize_for_inline.exit, label %for.body.i

for.body.i:                                       ; preds = %if.then9, %if.end80.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %if.end80.i ], [ 0, %if.then9 ]
  %parms.0111.i = phi %union.tree_node* [ %parms.0.i, %if.end80.i ], [ %parms.0108.i, %if.then9 ]
  %rtl.i = getelementptr inbounds %union.tree_node* %parms.0111.i, i64 0, i32 0, i32 17
  %15 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !35
  %tobool5.i = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool5.i, label %cond.false.i, label %cond.end.i

cond.false.i:                                     ; preds = %for.body.i
  tail call void @make_decl_rtl(%union.tree_node* %parms.0111.i, i8* null) #4
  %16 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !35
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %for.body.i
  %cond.i = phi %struct.rtx_def* [ %16, %cond.false.i ], [ %15, %for.body.i ]
  %17 = getelementptr inbounds %struct.rtx_def* %cond.i, i64 0, i32 0
  %bf.load.i = load i32* %17, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 66
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %cond.end.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %cond.i, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !7
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load11.i = load i32* %19, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  %cmp13.i = icmp eq i32 %bf.clear12.i, 70
  br i1 %cmp13.i, label %land.lhs.true15.i, label %if.end.i

land.lhs.true15.i:                                ; preds = %land.lhs.true.i
  %arrayidx20.i = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtx21.i = bitcast %union.rtunion_def* %arrayidx20.i to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx21.i, align 8, !tbaa !7
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load22.i = load i32* %21, align 8
  %bf.clear23.i = and i32 %bf.load22.i, 65535
  %cmp24.i = icmp eq i32 %bf.clear23.i, 66
  %.cond.i = select i1 %cmp24.i, %struct.rtx_def* %20, %struct.rtx_def* %cond.i
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true15.i, %land.lhs.true.i, %cond.end.i
  %p.0.i = phi %struct.rtx_def* [ %cond.i, %land.lhs.true.i ], [ %cond.i, %cond.end.i ], [ %.cond.i, %land.lhs.true15.i ]
  %arrayidx32.i = getelementptr inbounds %struct.rtvec_def* %call1.i, i64 0, i32 1, i64 %indvars.iv.i
  store %struct.rtx_def* %p.0.i, %struct.rtx_def** %arrayidx32.i, align 8, !tbaa !7
  %22 = getelementptr inbounds %struct.rtx_def* %p.0.i, i64 0, i32 0
  %bf.load33.i = load i32* %22, align 8
  %bf.clear34.i = and i32 %bf.load33.i, 65535
  switch i32 %bf.clear34.i, label %if.end80.i [
    i32 61, label %if.then37.i
    i32 65, label %if.then46.i
  ]

if.then37.i:                                      ; preds = %if.end.i
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %p.0.i, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx39.i to i32*
  %23 = load i32* %rtuint.i, align 4, !tbaa !24
  %idxprom40.i = zext i32 %23 to i64
  %24 = load %union.tree_node*** @parmdecl_map, align 8, !tbaa !7
  %arrayidx41.i = getelementptr inbounds %union.tree_node** %24, i64 %idxprom40.i
  store %union.tree_node* %parms.0111.i, %union.tree_node** %arrayidx41.i, align 8, !tbaa !7
  br label %if.end80.i

if.then46.i:                                      ; preds = %if.end.i
  %arrayidx48.i = getelementptr inbounds %struct.rtx_def* %p.0.i, i64 0, i32 1, i64 0
  %rtx49.i = bitcast %union.rtunion_def* %arrayidx48.i to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx49.i, align 8, !tbaa !7
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load50.i = load i32* %26, align 8
  %bf.lshr.i = lshr i32 %bf.load50.i, 16
  %bf.clear51.i = and i32 %bf.lshr.i, 255
  %call52.i = tail call %struct.rtx_def* @gen_realpart(i32 %bf.clear51.i, %struct.rtx_def* %p.0.i) #4
  %27 = getelementptr inbounds %struct.rtx_def* %call52.i, i64 0, i32 0
  %bf.load53.i = load i32* %27, align 8
  %bf.lshr54.i = lshr i32 %bf.load53.i, 16
  %bf.clear55.i = and i32 %bf.lshr54.i, 255
  %call56.i = tail call %struct.rtx_def* @gen_imagpart(i32 %bf.clear55.i, %struct.rtx_def* %p.0.i) #4
  %bf.load57.i = load i32* %27, align 8
  %bf.clear58.i = and i32 %bf.load57.i, 65535
  %cmp59.i = icmp eq i32 %bf.clear58.i, 61
  br i1 %cmp59.i, label %if.then61.i, label %if.end67.i

if.then61.i:                                      ; preds = %if.then46.i
  %arrayidx63.i = getelementptr inbounds %struct.rtx_def* %call52.i, i64 0, i32 1, i64 0
  %rtuint64.i = bitcast %union.rtunion_def* %arrayidx63.i to i32*
  %28 = load i32* %rtuint64.i, align 4, !tbaa !24
  %idxprom65.i = zext i32 %28 to i64
  %29 = load %union.tree_node*** @parmdecl_map, align 8, !tbaa !7
  %arrayidx66.i = getelementptr inbounds %union.tree_node** %29, i64 %idxprom65.i
  store %union.tree_node* %parms.0111.i, %union.tree_node** %arrayidx66.i, align 8, !tbaa !7
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.then61.i, %if.then46.i
  %30 = getelementptr inbounds %struct.rtx_def* %call56.i, i64 0, i32 0
  %bf.load68.i = load i32* %30, align 8
  %bf.clear69.i = and i32 %bf.load68.i, 65535
  %cmp70.i = icmp eq i32 %bf.clear69.i, 61
  br i1 %cmp70.i, label %if.then72.i, label %if.end80.i

if.then72.i:                                      ; preds = %if.end67.i
  %arrayidx74.i = getelementptr inbounds %struct.rtx_def* %call56.i, i64 0, i32 1, i64 0
  %rtuint75.i = bitcast %union.rtunion_def* %arrayidx74.i to i32*
  %31 = load i32* %rtuint75.i, align 4, !tbaa !24
  %idxprom76.i = zext i32 %31 to i64
  %32 = load %union.tree_node*** @parmdecl_map, align 8, !tbaa !7
  %arrayidx77.i = getelementptr inbounds %union.tree_node** %32, i64 %idxprom76.i
  store %union.tree_node* %parms.0111.i, %union.tree_node** %arrayidx77.i, align 8, !tbaa !7
  br label %if.end80.i

if.end80.i:                                       ; preds = %if.then72.i, %if.end67.i, %if.then37.i, %if.end.i
  %readonly_flag.i = getelementptr inbounds %union.tree_node* %parms.0111.i, i64 0, i32 0, i32 0, i32 2
  %bf.load81.i = load i32* %readonly_flag.i, align 8
  %bf.set.i = or i32 %bf.load81.i, 4096
  store i32 %bf.set.i, i32* %readonly_flag.i, align 8
  %chain.i = getelementptr inbounds %union.tree_node* %parms.0111.i, i64 0, i32 0, i32 0, i32 0
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %parms.0.i = load %union.tree_node** %chain.i, align 8
  %tobool.i = icmp eq %union.tree_node* %parms.0.i, null
  br i1 %tobool.i, label %initialize_for_inline.exit, label %for.body.i

initialize_for_inline.exit:                       ; preds = %if.end80.i, %if.then9
  %phitmp = bitcast %struct.rtvec_def* %call1.i to i8*
  br label %if.end11

if.end11:                                         ; preds = %if.end7, %initialize_for_inline.exit
  %argvec.0 = phi i8* [ %phitmp, %initialize_for_inline.exit ], [ null, %if.end7 ]
  %call12 = tail call %struct.rtx_def* @get_insns() #4
  %tobool1349 = icmp eq %struct.rtx_def* %call12, null
  br i1 %tobool1349, label %for.end, label %for.body

for.body:                                         ; preds = %if.end11, %for.inc
  %insn.050 = phi %struct.rtx_def* [ %35, %for.inc ], [ %call12, %if.end11 ]
  %33 = getelementptr inbounds %struct.rtx_def* %insn.050, i64 0, i32 0
  %bf.load = load i32* %33, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp14 = icmp eq i32 %bf.clear, 37
  br i1 %cmp14, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.050, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %34 = load i32* %rtint, align 4, !tbaa !24
  %cmp16 = icmp eq i32 %34, -80
  br i1 %cmp16, label %if.then18, label %for.inc

if.then18:                                        ; preds = %land.lhs.true
  %call19 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %insn.050) #4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then18
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %insn.050, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %tobool13 = icmp eq %struct.rtx_def* %35, null
  br i1 %tobool13, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end11
  %call23 = tail call %struct.rtx_def* @get_insns() #4
  %36 = getelementptr inbounds %struct.rtx_def* %call23, i64 0, i32 0
  %bf.load24 = load i32* %36, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 37
  br i1 %cmp26, label %if.end29, label %if.then28

if.then28:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 472, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.save_for_inline, i64 0, i64 0)) #7
  unreachable

if.end29:                                         ; preds = %for.end
  %37 = load i32* @flag_no_inline, align 4, !tbaa !24
  %tobool30 = icmp eq i32 %37, 0
  br i1 %tobool30, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end29
  %call32 = tail call %struct.rtx_def* @get_first_nonparm_insn() #4
  store i1 false, i1* @in_nonparm_insns, align 1
  tail call fastcc void @save_parm_insns(%struct.rtx_def* %call23, %struct.rtx_def* %call32)
  %call33 = tail call i32 @max_label_num() #4
  %38 = load %struct.function** @cfun, align 8, !tbaa !7
  %inl_max_label_num = getelementptr inbounds %struct.function* %38, i64 0, i32 49
  store i32 %call33, i32* %inl_max_label_num, align 4, !tbaa !42
  %x_last_parm_insn = getelementptr inbounds %struct.function* %38, i64 0, i32 36
  %39 = load %struct.rtx_def** %x_last_parm_insn, align 8, !tbaa !43
  %inl_last_parm_insn = getelementptr inbounds %struct.function* %38, i64 0, i32 48
  store %struct.rtx_def* %39, %struct.rtx_def** %inl_last_parm_insn, align 8, !tbaa !44
  %40 = load %struct.function** @cfun, align 8, !tbaa !7
  %original_arg_vector = getelementptr inbounds %struct.function* %40, i64 0, i32 46
  store i8* %argvec.0, i8** %original_arg_vector, align 8, !tbaa !45
  br label %if.end34

if.end34:                                         ; preds = %if.end29, %if.then31
  %initial = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 12
  %41 = load %union.tree_node** %initial, align 8, !tbaa !46
  %42 = load %struct.function** @cfun, align 8, !tbaa !7
  %original_decl_initial = getelementptr inbounds %struct.function* %42, i64 0, i32 47
  store %union.tree_node* %41, %union.tree_node** %original_decl_initial, align 8, !tbaa !47
  %43 = load i32* @write_symbols, align 4, !tbaa !33
  %cmp35 = icmp eq i32 %43, 0
  %conv36 = zext i1 %cmp35 to i32
  %44 = load %struct.function** @cfun, align 8, !tbaa !7
  %no_debugging_symbols = getelementptr inbounds %struct.function* %44, i64 0, i32 45
  store i32 %conv36, i32* %no_debugging_symbols, align 4, !tbaa !48
  %f = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 19, i32 0
  store %struct.function* %44, %struct.function** %f, align 8, !tbaa !7
  %45 = load i32* @flag_no_inline, align 4, !tbaa !24
  %tobool38 = icmp eq i32 %45, 0
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.end34
  %46 = load %union.tree_node*** @parmdecl_map, align 8, !tbaa !7
  %47 = bitcast %union.tree_node** %46 to i8*
  tail call void @free(i8* %47)
  br label %if.end40

if.end40:                                         ; preds = %if.end34, %if.then39
  ret void
}

declare noalias i8* @xmalloc(i64) #1

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #1

declare %struct.rtx_def* @get_insns() #1

declare %struct.rtx_def* @delete_related_insns(%struct.rtx_def*) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @save_parm_insns(%struct.rtx_def* readonly %insn, %struct.rtx_def* readnone %first_nonparm_insn) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %insn, null
  br i1 %cmp, label %for.end40, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %insn.addr.0.in.in55 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 2
  %insn.addr.0.in56 = bitcast %union.rtunion_def* %insn.addr.0.in.in55 to %struct.rtx_def**
  %insn.addr.057 = load %struct.rtx_def** %insn.addr.0.in56, align 8
  %tobool58 = icmp eq %struct.rtx_def* %insn.addr.057, null
  br i1 %tobool58, label %for.end40, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.cond.backedge
  %insn.addr.059 = phi %struct.rtx_def* [ %insn.addr.0, %for.cond.backedge ], [ %insn.addr.057, %for.cond.preheader ]
  %cmp1 = icmp eq %struct.rtx_def* %insn.addr.059, %first_nonparm_insn
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %for.body
  store i1 true, i1* @in_nonparm_insns, align 1
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %for.body
  %0 = getelementptr inbounds %struct.rtx_def* %insn.addr.059, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom53 = zext i32 %bf.clear to i64
  %arrayidx4 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom53
  %1 = load i8* %arrayidx4, align 1, !tbaa !33
  %cmp5 = icmp eq i8 %1, 105
  br i1 %cmp5, label %if.then7, label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.end3, %land.lhs.true, %if.then7, %for.cond23.preheader
  %insn.addr.0.in.in = getelementptr inbounds %struct.rtx_def* %insn.addr.059, i64 0, i32 1, i64 2
  %insn.addr.0.in = bitcast %union.rtunion_def* %insn.addr.0.in.in to %struct.rtx_def**
  %insn.addr.0 = load %struct.rtx_def** %insn.addr.0.in, align 8
  %tobool = icmp eq %struct.rtx_def* %insn.addr.0, null
  br i1 %tobool, label %for.end40, label %for.body

if.then7:                                         ; preds = %if.end3
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %insn.addr.059, i64 0, i32 1, i64 3
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx10, align 8, !tbaa !7
  tail call void @note_stores(%struct.rtx_def* %2, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @note_modified_parmregs, i8* null) #4
  %bf.load11 = load i32* %0, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 34
  br i1 %cmp13, label %land.lhs.true, label %for.cond.backedge

land.lhs.true:                                    ; preds = %if.then7
  %3 = load %struct.rtx_def** %rtx10, align 8, !tbaa !7
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load18 = load i32* %4, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 141
  br i1 %cmp20, label %for.cond23.preheader, label %for.cond.backedge

for.cond23.preheader:                             ; preds = %land.lhs.true
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx33, align 8, !tbaa !7
  tail call fastcc void @save_parm_insns(%struct.rtx_def* %5, %struct.rtx_def* %first_nonparm_insn)
  %6 = load %struct.rtx_def** %rtx10, align 8, !tbaa !7
  %arrayidx32.1 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtx33.1 = bitcast %union.rtunion_def* %arrayidx32.1 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx33.1, align 8, !tbaa !7
  tail call fastcc void @save_parm_insns(%struct.rtx_def* %7, %struct.rtx_def* %first_nonparm_insn)
  %8 = load %struct.rtx_def** %rtx10, align 8, !tbaa !7
  %arrayidx32.2 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 2
  %rtx33.2 = bitcast %union.rtunion_def* %arrayidx32.2 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx33.2, align 8, !tbaa !7
  tail call fastcc void @save_parm_insns(%struct.rtx_def* %9, %struct.rtx_def* %first_nonparm_insn)
  br label %for.cond.backedge

for.end40:                                        ; preds = %for.cond.backedge, %for.cond.preheader, %entry
  ret void
}

declare i32 @max_label_num() #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #3

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_inline_function(%union.tree_node* nocapture readonly %fndecl, %union.tree_node* readonly %parms, %struct.rtx_def* %target, i32 %ignore, %union.tree_node* %type, %struct.rtx_def* %structure_value_addr) #0 {
entry:
  %new_decl_rtl.i = alloca %struct.rtx_def*, align 8
  %stack_save = alloca %struct.rtx_def*, align 8
  %temp = alloca %struct.rtx_def*, align 8
  %unsignedp = alloca i32, align 4
  %f = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 19, i32 0
  %0 = load %struct.function** %f, align 8, !tbaa !7
  %emit = getelementptr inbounds %struct.function* %0, i64 0, i32 3
  %1 = load %struct.emit_status** %emit, align 8, !tbaa !49
  %x_first_insn = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 2
  %2 = load %struct.rtx_def** %x_first_insn, align 8, !tbaa !50
  %inl_last_parm_insn = getelementptr inbounds %struct.function* %0, i64 0, i32 48
  %3 = load %struct.rtx_def** %inl_last_parm_insn, align 8, !tbaa !44
  %tobool = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool, label %cond.end, label %cond.true

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.rtx_def* [ %4, %cond.true ], [ %2, %entry ]
  %x_first_label_num = getelementptr inbounds %struct.emit_status* %1, i64 0, i32 1
  %5 = load i32* %x_first_label_num, align 4, !tbaa !52
  %inl_max_label_num = getelementptr inbounds %struct.function* %0, i64 0, i32 49
  %6 = load i32* %inl_max_label_num, align 4, !tbaa !42
  store %struct.rtx_def* null, %struct.rtx_def** %stack_save, align 8, !tbaa !7
  %original_arg_vector = getelementptr inbounds %struct.function* %0, i64 0, i32 46
  %7 = load i8** %original_arg_vector, align 8, !tbaa !45
  %8 = bitcast i8* %7 to %struct.rtvec_def*
  %9 = load %struct.emit_status** %emit, align 8, !tbaa !49
  %x_reg_rtx_no = getelementptr inbounds %struct.emit_status* %9, i64 0, i32 0
  %10 = load i32* %x_reg_rtx_no, align 4, !tbaa !53
  %add = add nsw i32 %10, 3
  %cmp = icmp slt i32 %add, 53
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 686, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %cond.end
  %decl4 = getelementptr inbounds %struct.function* %0, i64 0, i32 6
  %11 = load %union.tree_node** %decl4, align 8, !tbaa !54
  %arguments = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 10
  %12 = load %union.tree_node** %arguments, align 8, !tbaa !21
  %call = call i32 @list_length(%union.tree_node* %12) #4
  %13 = load %struct.function** @cfun, align 8, !tbaa !7
  %preferred_stack_boundary = getelementptr inbounds %struct.function* %13, i64 0, i32 53
  %14 = load i32* %preferred_stack_boundary, align 4, !tbaa !55
  %preferred_stack_boundary6 = getelementptr inbounds %struct.function* %0, i64 0, i32 53
  %15 = load i32* %preferred_stack_boundary6, align 4, !tbaa !55
  %cmp7 = icmp slt i32 %14, %15
  br i1 %cmp7, label %if.then8, label %for.cond.preheader

if.then8:                                         ; preds = %if.end
  store i32 %15, i32* %preferred_stack_boundary, align 4, !tbaa !55
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then8, %if.end
  %formal.01587 = load %union.tree_node** %arguments, align 8
  %tobool141588 = icmp eq %union.tree_node* %formal.01587, null
  br i1 %tobool141588, label %for.cond44.preheader, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %16 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !7
  br label %for.body

for.cond44.preheader:                             ; preds = %for.inc, %for.cond.preheader
  %actual.0.lcssa = phi %union.tree_node* [ %parms, %for.cond.preheader ], [ %26, %for.inc ]
  %tobool451585 = icmp eq %union.tree_node* %actual.0.lcssa, null
  br i1 %tobool451585, label %for.end62, label %for.body46

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %formal.01590 = phi %union.tree_node* [ %formal.01587, %for.body.lr.ph ], [ %formal.0, %for.inc ]
  %actual.01589 = phi %union.tree_node* [ %parms, %for.body.lr.ph ], [ %26, %for.inc ]
  %cmp15 = icmp eq %union.tree_node* %actual.01589, null
  br i1 %cmp15, label %return, label %if.end17

if.end17:                                         ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %actual.01589, i64 0, i32 0, i32 2
  %17 = bitcast i32* %value to %union.tree_node**
  %18 = load %union.tree_node** %17, align 8, !tbaa !25
  %initial = getelementptr inbounds %union.tree_node* %formal.01590, i64 0, i32 0, i32 12
  %19 = load %union.tree_node** %initial, align 8, !tbaa !46
  %type19 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %mode20 = getelementptr inbounds %struct.tree_type* %type19, i64 0, i32 6
  %bf.load = load i32* %mode20, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %cmp21 = icmp eq %union.tree_node* %18, %16
  br i1 %cmp21, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end17
  %type22 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 1
  %20 = load %union.tree_node** %type22, align 8, !tbaa !17
  %type23 = bitcast %union.tree_node* %20 to %struct.tree_type*
  %mode24 = getelementptr inbounds %struct.tree_type* %type23, i64 0, i32 6
  %bf.load25 = load i32* %mode24, align 4
  %bf.lshr26 = lshr i32 %bf.load25, 9
  %bf.clear27 = and i32 %bf.lshr26, 127
  %cmp28 = icmp eq i32 %bf.clear, %bf.clear27
  br i1 %cmp28, label %lor.lhs.false29, label %return

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %cmp30 = icmp eq i32 %bf.clear, 51
  br i1 %cmp30, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %lor.lhs.false29
  %21 = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 15
  %22 = load %union.tree_node** %21, align 8, !tbaa !56
  %type35 = getelementptr inbounds %union.tree_node* %formal.01590, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type35, align 8, !tbaa !17
  %24 = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 15
  %25 = load %union.tree_node** %24, align 8, !tbaa !56
  %cmp38 = icmp eq %union.tree_node* %22, %25
  br i1 %cmp38, label %for.inc, label %return

for.inc:                                          ; preds = %land.lhs.true, %lor.lhs.false29
  %chain = getelementptr inbounds %union.tree_node* %formal.01590, i64 0, i32 0, i32 0, i32 0
  %chain43 = getelementptr inbounds %union.tree_node* %actual.01589, i64 0, i32 0, i32 0, i32 0
  %26 = load %union.tree_node** %chain43, align 8, !tbaa !58
  %formal.0 = load %union.tree_node** %chain, align 8
  %tobool14 = icmp eq %union.tree_node* %formal.0, null
  br i1 %tobool14, label %for.cond44.preheader, label %for.body

for.body46:                                       ; preds = %for.cond44.preheader, %for.body46
  %actual.11586 = phi %union.tree_node* [ %31, %for.body46 ], [ %actual.0.lcssa, %for.cond44.preheader ]
  %value48 = getelementptr inbounds %union.tree_node* %actual.11586, i64 0, i32 0, i32 2
  %27 = bitcast i32* %value48 to %union.tree_node**
  %28 = load %union.tree_node** %27, align 8, !tbaa !25
  %29 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !7
  %type52 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 0, i32 1
  %30 = load %union.tree_node** %type52, align 8, !tbaa !17
  %type53 = bitcast %union.tree_node* %30 to %struct.tree_type*
  %mode54 = getelementptr inbounds %struct.tree_type* %type53, i64 0, i32 6
  %bf.load55 = load i32* %mode54, align 4
  %bf.lshr56 = lshr i32 %bf.load55, 9
  %bf.clear57 = and i32 %bf.lshr56, 127
  %call58 = call %struct.rtx_def* @expand_expr(%union.tree_node* %28, %struct.rtx_def* %29, i32 %bf.clear57, i32 0) #4
  %chain61 = getelementptr inbounds %union.tree_node* %actual.11586, i64 0, i32 0, i32 0, i32 0
  %31 = load %union.tree_node** %chain61, align 8, !tbaa !58
  %tobool45 = icmp eq %union.tree_node* %31, null
  br i1 %tobool45, label %for.end62, label %for.body46

for.end62:                                        ; preds = %for.body46, %for.cond44.preheader
  %conv = sext i32 %call to i64
  %mul = shl nsw i64 %conv, 3
  %call63 = call noalias i8* @xmalloc(i64 %mul) #4
  %32 = bitcast i8* %call63 to %struct.rtx_def**
  %call66 = call noalias i8* @xmalloc(i64 %mul) #4
  %33 = bitcast i8* %call66 to %union.tree_node**
  %formal.11580 = load %union.tree_node** %arguments, align 8
  %tobool701581 = icmp eq %union.tree_node* %formal.11580, null
  br i1 %tobool701581, label %for.end281, label %for.body71.lr.ph

for.body71.lr.ph:                                 ; preds = %for.end62
  %elem = getelementptr inbounds i8* %7, i64 8
  %34 = bitcast i8* %elem to [1 x %struct.rtx_def*]*
  %cmp192 = icmp eq %struct.rtx_def* %target, null
  br label %for.body71

for.body71:                                       ; preds = %for.body71.lr.ph, %for.inc276
  %indvars.iv1593 = phi i64 [ 0, %for.body71.lr.ph ], [ %indvars.iv.next1594, %for.inc276 ]
  %formal.11584 = phi %union.tree_node* [ %formal.11580, %for.body71.lr.ph ], [ %formal.1, %for.inc276 ]
  %actual.21583 = phi %union.tree_node* [ %parms, %for.body71.lr.ph ], [ %56, %for.inc276 ]
  %type74 = getelementptr inbounds %union.tree_node* %formal.11584, i64 0, i32 0, i32 0, i32 1
  %35 = load %union.tree_node** %type74, align 8, !tbaa !17
  %value76 = getelementptr inbounds %union.tree_node* %actual.21583, i64 0, i32 0, i32 2
  %36 = bitcast i32* %value76 to %union.tree_node**
  %37 = load %union.tree_node** %36, align 8, !tbaa !25
  %call77 = call %union.tree_node* @convert(%union.tree_node* %35, %union.tree_node* %37) #4
  %38 = load %union.tree_node** %type74, align 8, !tbaa !17
  %type81 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %mode82 = getelementptr inbounds %struct.tree_type* %type81, i64 0, i32 6
  %bf.load83 = load i32* %mode82, align 4
  %bf.lshr84 = lshr i32 %bf.load83, 9
  %bf.clear85 = and i32 %bf.lshr84, 127
  %arrayidx86 = getelementptr inbounds %union.tree_node** %33, i64 %indvars.iv1593
  store %union.tree_node* %call77, %union.tree_node** %arrayidx86, align 8, !tbaa !7
  %arrayidx88 = getelementptr inbounds [1 x %struct.rtx_def*]* %34, i64 0, i64 %indvars.iv1593
  %39 = load %struct.rtx_def** %arrayidx88, align 8, !tbaa !7
  %40 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load89 = load i32* %40, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 66
  br i1 %cmp91, label %land.lhs.true93, label %if.then123

land.lhs.true93:                                  ; preds = %for.body71
  %arrayidx95 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 0
  %rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx96, align 8, !tbaa !7
  %42 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 0
  %bf.load97 = load i32* %42, align 8
  %bf.clear98 = and i32 %bf.load97, 65535
  %cmp99 = icmp eq i32 %bf.clear98, 61
  br i1 %cmp99, label %land.lhs.true101, label %if.end180.thread

land.lhs.true101:                                 ; preds = %land.lhs.true93
  %arrayidx106 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx106 to i32*
  %43 = load i32* %rtuint, align 4, !tbaa !24
  %cmp107 = icmp ugt i32 %43, 57
  br i1 %cmp107, label %if.then109, label %if.else

if.then109:                                       ; preds = %land.lhs.true101
  %type111 = getelementptr inbounds %union.tree_node* %call77, i64 0, i32 0, i32 0, i32 1
  %44 = load %union.tree_node** %type111, align 8, !tbaa !17
  %call112 = call %struct.rtx_def* @assign_temp(%union.tree_node* %44, i32 1, i32 1, i32 1) #4
  %call113 = call %struct.rtx_def* @store_expr(%union.tree_node* %call77, %struct.rtx_def* %call112, i32 0) #4
  %arrayidx115 = getelementptr inbounds %struct.rtx_def* %call112, i64 0, i32 1, i64 0
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx116, align 8, !tbaa !7
  %arrayidx118 = getelementptr inbounds %struct.rtx_def** %32, i64 %indvars.iv1593
  store %struct.rtx_def* %45, %struct.rtx_def** %arrayidx118, align 8, !tbaa !7
  br label %if.end180

if.else:                                          ; preds = %land.lhs.true101
  br i1 %cmp91, label %if.end180.thread, label %if.then123

if.then123:                                       ; preds = %for.body71, %if.else
  %bf.lshr125 = lshr i32 %bf.load89, 16
  %bf.clear126 = and i32 %bf.lshr125, 255
  %type128 = getelementptr inbounds %union.tree_node* %call77, i64 0, i32 0, i32 0, i32 1
  %46 = load %union.tree_node** %type128, align 8, !tbaa !17
  %type129 = bitcast %union.tree_node* %46 to %struct.tree_type*
  %mode130 = getelementptr inbounds %struct.tree_type* %type129, i64 0, i32 6
  %bf.load131 = load i32* %mode130, align 4
  %bf.lshr132 = lshr i32 %bf.load131, 9
  %bf.clear133 = and i32 %bf.lshr132, 127
  %cmp134 = icmp eq i32 %bf.clear126, %bf.clear133
  br i1 %cmp134, label %if.else171, label %if.then136

if.then136:                                       ; preds = %if.then123
  %unsigned_flag = getelementptr inbounds %union.tree_node* %38, i64 0, i32 0, i32 0, i32 2
  %bf.load140 = load i32* %unsigned_flag, align 8
  %bf.lshr141 = lshr i32 %bf.load140, 13
  %bf.clear142 = and i32 %bf.lshr141, 1
  store i32 %bf.clear142, i32* %unsignedp, align 4, !tbaa !24
  %bf.load147 = load i32* %mode82, align 4
  %bf.lshr148 = lshr i32 %bf.load147, 9
  %bf.clear149 = and i32 %bf.lshr148, 127
  %call152 = call i32 @promote_mode(%union.tree_node* %38, i32 %bf.clear149, i32* %unsignedp, i32 0) #4
  %bf.load153 = load i32* %40, align 8
  %bf.lshr154 = lshr i32 %bf.load153, 16
  %bf.clear155 = and i32 %bf.lshr154, 255
  %cmp156 = icmp eq i32 %bf.clear155, %call152
  br i1 %cmp156, label %if.end159, label %if.then158

if.then158:                                       ; preds = %if.then136
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 775, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  unreachable

if.end159:                                        ; preds = %if.then136
  %47 = load %union.tree_node** %type128, align 8, !tbaa !17
  %type162 = bitcast %union.tree_node* %47 to %struct.tree_type*
  %mode163 = getelementptr inbounds %struct.tree_type* %type162, i64 0, i32 6
  %bf.load164 = load i32* %mode163, align 4
  %bf.lshr165 = lshr i32 %bf.load164, 9
  %bf.clear166 = and i32 %bf.lshr165, 127
  %call167 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call77, %struct.rtx_def* null, i32 %bf.clear85, i32 1) #4
  %48 = load i32* %unsignedp, align 4, !tbaa !24
  %call168 = call %struct.rtx_def* @convert_modes(i32 %call152, i32 %bf.clear166, %struct.rtx_def* %call167, i32 %48) #4
  %arrayidx170 = getelementptr inbounds %struct.rtx_def** %32, i64 %indvars.iv1593
  store %struct.rtx_def* %call168, %struct.rtx_def** %arrayidx170, align 8, !tbaa !7
  br label %if.end180

if.else171:                                       ; preds = %if.then123
  %call172 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call77, %struct.rtx_def* null, i32 %bf.clear85, i32 1) #4
  %arrayidx174 = getelementptr inbounds %struct.rtx_def** %32, i64 %indvars.iv1593
  store %struct.rtx_def* %call172, %struct.rtx_def** %arrayidx174, align 8, !tbaa !7
  br label %if.end180

if.end180.thread:                                 ; preds = %if.else, %land.lhs.true93
  %arrayidx178 = getelementptr inbounds %struct.rtx_def** %32, i64 %indvars.iv1593
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx178, align 8, !tbaa !7
  br label %for.inc276

if.end180:                                        ; preds = %if.else171, %if.end159, %if.then109
  %49 = phi %struct.rtx_def* [ %45, %if.then109 ], [ %call168, %if.end159 ], [ %call172, %if.else171 ]
  %invisiref.0 = phi i32 [ 1, %if.then109 ], [ 0, %if.end159 ], [ 0, %if.else171 ]
  %arrayidx182 = getelementptr inbounds %struct.rtx_def** %32, i64 %indvars.iv1593
  %cmp183 = icmp eq %struct.rtx_def* %49, null
  br i1 %cmp183, label %for.inc276, label %land.lhs.true185

land.lhs.true185:                                 ; preds = %if.end180
  %readonly_flag = getelementptr inbounds %union.tree_node* %formal.11584, i64 0, i32 0, i32 0, i32 2
  %bf.load187 = load i32* %readonly_flag, align 8
  %bf.clear189 = and i32 %bf.load187, 4096
  %tobool190 = icmp eq i32 %bf.clear189, 0
  br i1 %tobool190, label %if.then229, label %lor.lhs.false191

lor.lhs.false191:                                 ; preds = %land.lhs.true185
  %tobool195 = icmp ne i32 %invisiref.0, 0
  %or.cond = or i1 %cmp192, %tobool195
  %.pre1608 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 0
  br i1 %or.cond, label %lor.lhs.false222, label %land.lhs.true196

land.lhs.true196:                                 ; preds = %lor.lhs.false191
  %bf.load199 = load i32* %.pre1608, align 8
  %bf.clear200 = and i32 %bf.load199, 65535
  switch i32 %bf.clear200, label %lor.lhs.false222 [
    i32 61, label %land.lhs.true217
    i32 63, label %land.lhs.true217
    i32 66, label %land.lhs.true217
  ]

land.lhs.true217:                                 ; preds = %land.lhs.true196, %land.lhs.true196, %land.lhs.true196
  %call220 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %49, %struct.rtx_def* %target) #4
  %tobool221 = icmp eq i32 %call220, 0
  br i1 %tobool221, label %lor.lhs.false222, label %if.then229

lor.lhs.false222:                                 ; preds = %lor.lhs.false191, %land.lhs.true196, %land.lhs.true217
  %bf.load225 = load i32* %.pre1608, align 8
  %bf.clear226 = and i32 %bf.load225, 65535
  %cmp227 = icmp eq i32 %bf.clear226, 63
  br i1 %cmp227, label %if.then229, label %if.end238

if.then229:                                       ; preds = %land.lhs.true217, %land.lhs.true185, %lor.lhs.false222
  %bf.load230 = load i32* %40, align 8
  %bf.lshr231 = lshr i32 %bf.load230, 16
  %bf.clear232 = and i32 %bf.lshr231, 255
  %call235 = call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear232, %struct.rtx_def* %49) #4
  store %struct.rtx_def* %call235, %struct.rtx_def** %arrayidx182, align 8, !tbaa !7
  br label %if.end238

if.end238:                                        ; preds = %if.then229, %lor.lhs.false222
  %50 = phi %struct.rtx_def* [ %call235, %if.then229 ], [ %49, %lor.lhs.false222 ]
  %cmp241 = icmp eq %struct.rtx_def* %50, null
  br i1 %cmp241, label %for.inc276, label %land.lhs.true243

land.lhs.true243:                                 ; preds = %if.end238
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load246 = load i32* %51, align 8
  %bf.clear247 = and i32 %bf.load246, 65535
  %cmp248 = icmp eq i32 %bf.clear247, 61
  br i1 %cmp248, label %land.lhs.true250, label %for.inc276

land.lhs.true250:                                 ; preds = %land.lhs.true243
  %52 = load %union.tree_node** %type74, align 8, !tbaa !17
  %code = getelementptr inbounds %union.tree_node* %52, i64 0, i32 0, i32 0, i32 2
  %bf.load254 = load i32* %code, align 8
  %bf.clear255 = and i32 %bf.load254, 255
  switch i32 %bf.clear255, label %for.inc276 [
    i32 13, label %if.then267
    i32 15, label %if.then267
  ]

if.then267:                                       ; preds = %land.lhs.true250, %land.lhs.true250
  %type273 = getelementptr inbounds %union.tree_node* %52, i64 0, i32 0, i32 0, i32 1
  %53 = load %union.tree_node** %type273, align 8, !tbaa !17
  %align = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 7
  %54 = bitcast %union.tree_node** %align to i32*
  %55 = load i32* %54, align 4, !tbaa !59
  call void @mark_reg_pointer(%struct.rtx_def* %50, i32 %55) #4
  br label %for.inc276

for.inc276:                                       ; preds = %if.end180.thread, %if.end180, %land.lhs.true250, %if.end238, %land.lhs.true243, %if.then267
  %chain278 = getelementptr inbounds %union.tree_node* %formal.11584, i64 0, i32 0, i32 0, i32 0
  %chain280 = getelementptr inbounds %union.tree_node* %actual.21583, i64 0, i32 0, i32 0, i32 0
  %56 = load %union.tree_node** %chain280, align 8, !tbaa !58
  %indvars.iv.next1594 = add nuw nsw i64 %indvars.iv1593, 1
  %formal.1 = load %union.tree_node** %chain278, align 8
  %tobool70 = icmp eq %union.tree_node* %formal.1, null
  br i1 %tobool70, label %for.end281, label %for.body71

for.end281:                                       ; preds = %for.inc276, %for.end62
  %call282 = call noalias i8* @xcalloc(i64 1, i64 648) #4
  %57 = bitcast i8* %call282 to %struct.inline_remap*
  %fndecl283 = getelementptr inbounds i8* %call282, i64 8
  %58 = bitcast i8* %fndecl283 to %union.tree_node**
  store %union.tree_node* %11, %union.tree_node** %58, align 8, !tbaa !60
  %call284 = call %struct.varray_head_tag* @varray_init(i64 10, i64 8, i8* getelementptr inbounds ([10 x i8]* @.str16, i64 0, i64 0)) #4
  %block_map = getelementptr inbounds i8* %call282, i64 24
  %59 = bitcast i8* %block_map to %struct.varray_head_tag**
  store %struct.varray_head_tag* %call284, %struct.varray_head_tag** %59, align 8, !tbaa !61
  %conv285 = sext i32 %add to i64
  %call286 = call noalias i8* @xcalloc(i64 %conv285, i64 8) #4
  %60 = bitcast i8* %call286 to %struct.rtx_def**
  %reg_map = getelementptr inbounds i8* %call282, i64 32
  %61 = bitcast i8* %reg_map to %struct.rtx_def***
  store %struct.rtx_def** %60, %struct.rtx_def*** %61, align 8, !tbaa !62
  %conv287 = sext i32 %6 to i64
  %mul288 = shl nsw i64 %conv287, 3
  %call289 = call noalias i8* @xmalloc(i64 %mul288) #4
  %62 = bitcast i8* %call289 to %struct.rtx_def**
  %label_map = getelementptr inbounds i8* %call282, i64 40
  %63 = bitcast i8* %label_map to %struct.rtx_def***
  store %struct.rtx_def** %62, %struct.rtx_def*** %63, align 8, !tbaa !1
  %local_return_label = getelementptr inbounds i8* %call282, i64 112
  %64 = bitcast i8* %local_return_label to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %64, align 8, !tbaa !63
  %65 = load %struct.emit_status** %emit, align 8, !tbaa !49
  %x_cur_insn_uid = getelementptr inbounds %struct.emit_status* %65, i64 0, i32 6
  %66 = load i32* %x_cur_insn_uid, align 4, !tbaa !64
  %add291 = add nsw i32 %66, 1
  %conv292 = sext i32 %add291 to i64
  %call293 = call noalias i8* @xcalloc(i64 %conv292, i64 8) #4
  %67 = bitcast i8* %call293 to %struct.rtx_def**
  %insn_map = getelementptr inbounds i8* %call282, i64 48
  %68 = bitcast i8* %insn_map to %struct.rtx_def***
  store %struct.rtx_def** %67, %struct.rtx_def*** %68, align 8, !tbaa !65
  %min_insnno = getelementptr inbounds i8* %call282, i64 56
  %69 = bitcast i8* %min_insnno to i32*
  store i32 0, i32* %69, align 4, !tbaa !66
  %max_insnno = getelementptr inbounds i8* %call282, i64 60
  %70 = bitcast i8* %max_insnno to i32*
  store i32 %add291, i32* %70, align 4, !tbaa !67
  %integrating = bitcast i8* %call282 to i32*
  store i32 1, i32* %integrating, align 4, !tbaa !68
  %compare_src = getelementptr inbounds i8* %call282, i64 632
  %71 = bitcast i8* %compare_src to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %71, align 8, !tbaa !69
  %compare_mode = getelementptr inbounds i8* %call282, i64 640
  %72 = bitcast i8* %compare_mode to i32*
  store i32 0, i32* %72, align 4, !tbaa !70
  %call294 = call i32 @max_reg_num() #4
  %mul296 = mul nsw i32 %call, 15
  %add295 = add i32 %10, -40
  %add297 = add i32 %add295, %mul296
  %add298 = add i32 %add297, %call294
  %conv299 = sext i32 %add298 to i64
  %call300 = call %struct.varray_head_tag* @varray_init(i64 %conv299, i64 16, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #4
  %const_equiv_varray = getelementptr inbounds i8* %call282, i64 64
  %73 = bitcast i8* %const_equiv_varray to %struct.varray_head_tag**
  store %struct.varray_head_tag* %call300, %struct.varray_head_tag** %73, align 8, !tbaa !71
  %const_age = getelementptr inbounds i8* %call282, i64 72
  %74 = bitcast i8* %const_age to i32*
  store i32 0, i32* %74, align 4, !tbaa !72
  %call301 = call %struct.rtx_def* @get_last_insn() #4
  %insns_at_start = getelementptr inbounds i8* %call282, i64 16
  %75 = bitcast i8* %insns_at_start to %struct.rtx_def**
  store %struct.rtx_def* %call301, %struct.rtx_def** %75, align 8, !tbaa !73
  %cmp303 = icmp eq %struct.rtx_def* %call301, null
  br i1 %cmp303, label %if.then305, label %if.end308

if.then305:                                       ; preds = %for.end281
  %call306 = call %struct.rtx_def* @emit_note(i8* null, i32 -99) #4
  store %struct.rtx_def* %call306, %struct.rtx_def** %75, align 8, !tbaa !73
  br label %if.end308

if.end308:                                        ; preds = %if.then305, %for.end281
  %76 = load %struct.emit_status** %emit, align 8, !tbaa !49
  %regno_pointer_align = getelementptr inbounds %struct.emit_status* %76, i64 0, i32 10
  %77 = load i8** %regno_pointer_align, align 8, !tbaa !74
  %regno_pointer_align310 = getelementptr inbounds i8* %call282, i64 120
  %78 = bitcast i8* %regno_pointer_align310 to i8**
  store i8* %77, i8** %78, align 8, !tbaa !75
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %76, i64 0, i32 12
  %79 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !76
  %x_regno_reg_rtx312 = getelementptr inbounds i8* %call282, i64 128
  %80 = bitcast i8* %x_regno_reg_rtx312 to %struct.rtx_def***
  store %struct.rtx_def** %79, %struct.rtx_def*** %80, align 8, !tbaa !77
  %outgoing_args_size = getelementptr inbounds %struct.function* %0, i64 0, i32 11
  %81 = load i32* %outgoing_args_size, align 4, !tbaa !78
  %82 = load %struct.function** @cfun, align 8, !tbaa !7
  %outgoing_args_size313 = getelementptr inbounds %struct.function* %82, i64 0, i32 11
  %83 = load i32* %outgoing_args_size313, align 4, !tbaa !78
  %cmp314 = icmp sgt i32 %81, %83
  br i1 %cmp314, label %if.then316, label %if.end319

if.then316:                                       ; preds = %if.end308
  store i32 %81, i32* %outgoing_args_size313, align 4, !tbaa !78
  br label %if.end319

if.end319:                                        ; preds = %if.then316, %if.end308
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %0, i64 0, i32 56
  %84 = bitcast i24* %uses_pic_offset_table to i32*
  %bf.load320 = load i32* %84, align 8
  %bf.clear322 = and i32 %bf.load320, 2097152
  %tobool323 = icmp eq i32 %bf.clear322, 0
  br i1 %tobool323, label %if.end328, label %if.then324

if.then324:                                       ; preds = %if.end319
  %uses_pic_offset_table325 = getelementptr inbounds %struct.function* %82, i64 0, i32 56
  %85 = bitcast i24* %uses_pic_offset_table325 to i32*
  %bf.load326 = load i32* %85, align 8
  %bf.set = or i32 %bf.load326, 2097152
  store i32 %bf.set, i32* %85, align 8
  %bf.load329.pre = load i32* %84, align 8
  br label %if.end328

if.end328:                                        ; preds = %if.end319, %if.then324
  %bf.load329 = phi i32 [ %bf.load320, %if.end319 ], [ %bf.load329.pre, %if.then324 ]
  %bf.clear331 = and i32 %bf.load329, 8
  %tobool332 = icmp eq i32 %bf.clear331, 0
  br i1 %tobool332, label %if.end335, label %if.then333

if.then333:                                       ; preds = %if.end328
  %call334 = call %struct.rtx_def* @lookup_static_chain(%union.tree_node* %11) #4
  br label %if.end335

if.end335:                                        ; preds = %if.end328, %if.then333
  %static_chain_value.0 = phi %struct.rtx_def* [ %call334, %if.then333 ], [ null, %if.end328 ]
  %86 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load336 = load i32* %86, align 8
  %bf.clear337 = and i32 %bf.load336, 65535
  %cmp338 = icmp eq i32 %bf.clear337, 37
  br i1 %cmp338, label %land.lhs.true340, label %for.cond359.preheader

land.lhs.true340:                                 ; preds = %if.end335
  %arrayidx342 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx342 to i32*
  %87 = load i32* %rtint, align 4, !tbaa !24
  %cmp343 = icmp sgt i32 %87, 0
  br i1 %cmp343, label %if.then345, label %for.cond359.preheader

if.then345:                                       ; preds = %land.lhs.true340
  %arrayidx347 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx347 to i8**
  %88 = load i8** %rtstr, align 8, !tbaa !7
  %call351 = call %struct.rtx_def* @emit_note(i8* %88, i32 %87) #4
  %tobool352 = icmp eq %struct.rtx_def* %call351, null
  br i1 %tobool352, label %for.cond359.preheader, label %if.then353

if.then353:                                       ; preds = %if.then345
  %89 = getelementptr inbounds %struct.rtx_def* %call351, i64 0, i32 0
  %bf.load354 = load i32* %89, align 8
  %bf.set356 = or i32 %bf.load354, 1073741824
  store i32 %bf.set356, i32* %89, align 8
  br label %for.cond359.preheader

for.cond359.preheader:                            ; preds = %if.then345, %if.then353, %land.lhs.true340, %if.end335
  %cmp3601578 = icmp sgt i32 %call, 0
  br i1 %cmp3601578, label %for.body362.lr.ph, label %for.end572

for.body362.lr.ph:                                ; preds = %for.cond359.preheader
  %elem366 = getelementptr inbounds i8* %7, i64 8
  %90 = bitcast i8* %elem366 to [1 x %struct.rtx_def*]*
  %f525 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 19, i32 0
  br label %for.body362

for.body362:                                      ; preds = %for.body362.lr.ph, %for.inc570
  %indvars.iv1591 = phi i64 [ 0, %for.body362.lr.ph ], [ %indvars.iv.next1592, %for.inc570 ]
  %arrayidx364 = getelementptr inbounds %struct.rtx_def** %32, i64 %indvars.iv1591
  %91 = load %struct.rtx_def** %arrayidx364, align 8, !tbaa !7
  %arrayidx367 = getelementptr inbounds [1 x %struct.rtx_def*]* %90, i64 0, i64 %indvars.iv1591
  %92 = load %struct.rtx_def** %arrayidx367, align 8, !tbaa !7
  %93 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 0
  %bf.load368 = load i32* %93, align 8
  %bf.clear369 = and i32 %bf.load368, 65535
  switch i32 %bf.clear369, label %if.else565 [
    i32 66, label %land.lhs.true372
    i32 61, label %if.then536
    i32 65, label %if.then542
  ]

land.lhs.true372:                                 ; preds = %for.body362
  %arrayidx374 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 1, i64 0
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %94 = load %struct.rtx_def** %rtx375, align 8, !tbaa !7
  %95 = getelementptr inbounds %struct.rtx_def* %94, i64 0, i32 0
  %bf.load376 = load i32* %95, align 8
  %bf.clear377 = and i32 %bf.load376, 65535
  %cmp378 = icmp eq i32 %bf.clear377, 61
  br i1 %cmp378, label %land.lhs.true380, label %if.then522

land.lhs.true380:                                 ; preds = %land.lhs.true372
  %arrayidx385 = getelementptr inbounds %struct.rtx_def* %94, i64 0, i32 1, i64 0
  %rtuint386 = bitcast %union.rtunion_def* %arrayidx385 to i32*
  %96 = load i32* %rtuint386, align 4, !tbaa !24
  %cmp387 = icmp ugt i32 %96, 57
  br i1 %cmp387, label %if.then389, label %if.else517

if.then389:                                       ; preds = %land.lhs.true380
  %97 = getelementptr inbounds %struct.rtx_def* %91, i64 0, i32 0
  %bf.load390 = load i32* %97, align 8
  %bf.clear391 = and i32 %bf.load390, 65535
  %cmp392 = icmp eq i32 %bf.clear391, 61
  br i1 %cmp392, label %if.end507, label %if.then394

if.then394:                                       ; preds = %if.then389
  %call395 = call %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def* %91) #4
  store %struct.rtx_def* %call395, %struct.rtx_def** %temp, align 8, !tbaa !7
  %bf.load396 = load i32* %97, align 8
  %bf.clear397 = and i32 %bf.load396, 65535
  switch i32 %bf.clear397, label %if.end506 [
    i32 67, label %if.then474
    i32 68, label %if.then474
    i32 54, label %if.then474
    i32 55, label %if.then474
    i32 58, label %if.then474
    i32 134, label %if.then474
    i32 56, label %if.then474
    i32 140, label %if.then474
    i32 75, label %land.lhs.true440
  ]

land.lhs.true440:                                 ; preds = %if.then394
  %arrayidx442 = getelementptr inbounds %struct.rtx_def* %91, i64 0, i32 1, i64 1
  %rtx443 = bitcast %union.rtunion_def* %arrayidx442 to %struct.rtx_def**
  %98 = load %struct.rtx_def** %rtx443, align 8, !tbaa !7
  %99 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 0
  %bf.load444 = load i32* %99, align 8
  %bf.clear445 = and i32 %bf.load444, 65535
  %cmp446 = icmp eq i32 %bf.clear445, 54
  br i1 %cmp446, label %land.lhs.true448, label %if.end506

land.lhs.true448:                                 ; preds = %land.lhs.true440
  %arrayidx450 = getelementptr inbounds %struct.rtx_def* %91, i64 0, i32 1, i64 0
  %rtx451 = bitcast %union.rtunion_def* %arrayidx450 to %struct.rtx_def**
  %100 = load %struct.rtx_def** %rtx451, align 8, !tbaa !7
  %101 = getelementptr inbounds %struct.rtx_def* %100, i64 0, i32 0
  %bf.load452 = load i32* %101, align 8
  %bf.clear453 = and i32 %bf.load452, 65535
  %cmp454 = icmp eq i32 %bf.clear453, 61
  br i1 %cmp454, label %land.lhs.true456, label %if.end506

land.lhs.true456:                                 ; preds = %land.lhs.true448
  %arrayidx461 = getelementptr inbounds %struct.rtx_def* %100, i64 0, i32 1, i64 0
  %rtuint462 = bitcast %union.rtunion_def* %arrayidx461 to i32*
  %102 = load i32* %rtuint462, align 4, !tbaa !24
  %.off1571 = add i32 %102, -53
  %103 = icmp ult i32 %.off1571, 5
  br i1 %103, label %if.then474, label %if.end506

if.then474:                                       ; preds = %land.lhs.true456, %if.then394, %if.then394, %if.then394, %if.then394, %if.then394, %if.then394, %if.then394, %if.then394
  %arrayidx476 = getelementptr inbounds %struct.rtx_def* %call395, i64 0, i32 1, i64 0
  %rtuint477 = bitcast %union.rtunion_def* %arrayidx476 to i32*
  %104 = load i32* %rtuint477, align 4, !tbaa !24
  %conv478 = zext i32 %104 to i64
  %105 = load %struct.varray_head_tag** %73, align 8, !tbaa !71
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %105, i64 0, i32 0
  %106 = load i64* %num_elements, align 8, !tbaa !79
  %cmp480 = icmp ult i64 %conv478, %106
  br i1 %cmp480, label %if.end498, label %if.then482

if.then482:                                       ; preds = %if.then474
  %107 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %cmp484 = icmp eq %struct.varray_head_tag* %107, %105
  %add490 = add i32 %104, 1
  %conv491 = zext i32 %add490 to i64
  %call492 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %105, i64 %conv491) #4
  store %struct.varray_head_tag* %call492, %struct.varray_head_tag** %73, align 8, !tbaa !71
  br i1 %cmp484, label %if.then495, label %if.end498

if.then495:                                       ; preds = %if.then482
  store %struct.varray_head_tag* %call492, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  br label %if.end498

if.end498:                                        ; preds = %if.then474, %if.then482, %if.then495
  %108 = phi %struct.varray_head_tag* [ %105, %if.then474 ], [ %call492, %if.then482 ], [ %call492, %if.then495 ]
  %109 = load %struct.rtx_def** %temp, align 8, !tbaa !7
  %arrayidx500 = getelementptr inbounds %struct.rtx_def* %109, i64 0, i32 1, i64 0
  %rtuint501 = bitcast %union.rtunion_def* %arrayidx500 to i32*
  %110 = load i32* %rtuint501, align 4, !tbaa !24
  %idxprom502 = zext i32 %110 to i64
  %rtx505 = getelementptr inbounds %struct.varray_head_tag* %108, i64 0, i32 4, i32 0, i64 %idxprom502, i32 0
  store %struct.rtx_def* %91, %struct.rtx_def** %rtx505, align 8, !tbaa !82
  %age = getelementptr inbounds %struct.varray_head_tag* %108, i64 0, i32 4, i32 0, i64 %idxprom502, i32 1
  store i32 -1, i32* %age, align 4, !tbaa !84
  %.pre1607 = load %struct.rtx_def** %temp, align 8, !tbaa !7
  br label %if.end506

if.end506:                                        ; preds = %if.then394, %if.end498, %land.lhs.true456, %land.lhs.true448, %land.lhs.true440
  %111 = phi %struct.rtx_def* [ %call395, %if.then394 ], [ %.pre1607, %if.end498 ], [ %call395, %land.lhs.true456 ], [ %call395, %land.lhs.true448 ], [ %call395, %land.lhs.true440 ]
  %.pre1605 = load %struct.rtx_def** %rtx375, align 8, !tbaa !7
  %arrayidx512.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre1605, i64 0, i32 1, i64 0
  %rtuint513.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx512.phi.trans.insert to i32*
  %.pre1606 = load i32* %rtuint513.phi.trans.insert, align 4, !tbaa !24
  br label %if.end507

if.end507:                                        ; preds = %if.then389, %if.end506
  %112 = phi i32 [ %.pre1606, %if.end506 ], [ %96, %if.then389 ]
  %copy.0 = phi %struct.rtx_def* [ %111, %if.end506 ], [ %91, %if.then389 ]
  %idxprom514 = zext i32 %112 to i64
  %113 = load %struct.rtx_def*** %61, align 8, !tbaa !62
  %arrayidx516 = getelementptr inbounds %struct.rtx_def** %113, i64 %idxprom514
  store %struct.rtx_def* %copy.0, %struct.rtx_def** %arrayidx516, align 8, !tbaa !7
  br label %for.inc570

if.else517:                                       ; preds = %land.lhs.true380
  switch i32 %bf.clear369, label %if.else565 [
    i32 66, label %if.then522
    i32 61, label %if.then536
    i32 65, label %if.then542
  ]

if.then522:                                       ; preds = %land.lhs.true372, %if.else517
  %114 = load %struct.function** %f525, align 8, !tbaa !7
  %args_size = getelementptr inbounds %struct.function* %114, i64 0, i32 9
  %115 = load i32* %args_size, align 4, !tbaa !85
  %cmp526 = icmp eq i32 %115, 0
  br i1 %cmp526, label %for.inc570, label %if.then528

if.then528:                                       ; preds = %if.then522
  %116 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !7
  %call529 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %116, %struct.inline_remap* %57, i32 0)
  br label %for.inc570

if.then536:                                       ; preds = %for.body362, %if.else517
  call fastcc void @process_reg_param(%struct.inline_remap* %57, %struct.rtx_def* %92, %struct.rtx_def* %91)
  br label %for.inc570

if.then542:                                       ; preds = %for.body362, %if.else517
  %arrayidx544 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 1, i64 0
  %rtx545 = bitcast %union.rtunion_def* %arrayidx544 to %struct.rtx_def**
  %117 = load %struct.rtx_def** %rtx545, align 8, !tbaa !7
  %118 = getelementptr inbounds %struct.rtx_def* %117, i64 0, i32 0
  %bf.load546 = load i32* %118, align 8
  %bf.lshr547 = lshr i32 %bf.load546, 16
  %bf.clear548 = and i32 %bf.lshr547, 255
  %call549 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear548, %struct.rtx_def* %92) #4
  %119 = load %struct.rtx_def** %rtx545, align 8, !tbaa !7
  %120 = getelementptr inbounds %struct.rtx_def* %119, i64 0, i32 0
  %bf.load553 = load i32* %120, align 8
  %bf.lshr554 = lshr i32 %bf.load553, 16
  %bf.clear555 = and i32 %bf.lshr554, 255
  %call556 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear555, %struct.rtx_def* %92) #4
  %121 = getelementptr inbounds %struct.rtx_def* %call549, i64 0, i32 0
  %bf.load557 = load i32* %121, align 8
  %bf.lshr558 = lshr i32 %bf.load557, 16
  %bf.clear559 = and i32 %bf.lshr558, 255
  %call560 = call %struct.rtx_def* @gen_realpart(i32 %bf.clear559, %struct.rtx_def* %91) #4
  %122 = getelementptr inbounds %struct.rtx_def* %call556, i64 0, i32 0
  %bf.load561 = load i32* %122, align 8
  %bf.lshr562 = lshr i32 %bf.load561, 16
  %bf.clear563 = and i32 %bf.lshr562, 255
  %call564 = call %struct.rtx_def* @gen_imagpart(i32 %bf.clear563, %struct.rtx_def* %91) #4
  call fastcc void @process_reg_param(%struct.inline_remap* %57, %struct.rtx_def* %call549, %struct.rtx_def* %call560)
  call fastcc void @process_reg_param(%struct.inline_remap* %57, %struct.rtx_def* %call556, %struct.rtx_def* %call564)
  br label %for.inc570

if.else565:                                       ; preds = %for.body362, %if.else517
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 964, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  unreachable

for.inc570:                                       ; preds = %if.then522, %if.end507, %if.then536, %if.then542, %if.then528
  %indvars.iv.next1592 = add nuw nsw i64 %indvars.iv1591, 1
  %123 = trunc i64 %indvars.iv.next1592 to i32
  %cmp360 = icmp slt i32 %123, %call
  br i1 %cmp360, label %for.body362, label %for.end572

for.end572:                                       ; preds = %for.inc570, %for.cond359.preheader
  %124 = load %struct.function** @inlining, align 8, !tbaa !7
  store %struct.function* %0, %struct.function** @inlining, align 8, !tbaa !7
  %formal.21573 = load %union.tree_node** %arguments, align 8
  %tobool5761574 = icmp eq %union.tree_node* %formal.21573, null
  br i1 %tobool5761574, label %for.end637, label %for.body577.lr.ph

for.body577.lr.ph:                                ; preds = %for.end572
  %elem579 = getelementptr inbounds i8* %7, i64 8
  %125 = bitcast i8* %elem579 to [1 x %struct.rtx_def*]*
  br label %for.body577

for.body577:                                      ; preds = %for.body577.lr.ph, %for.inc633
  %indvars.iv = phi i64 [ 0, %for.body577.lr.ph ], [ %indvars.iv.next, %for.inc633 ]
  %formal.21576 = phi %union.tree_node* [ %formal.21573, %for.body577.lr.ph ], [ %formal.2, %for.inc633 ]
  %arrayidx580 = getelementptr inbounds [1 x %struct.rtx_def*]* %125, i64 0, i64 %indvars.iv
  %126 = load %struct.rtx_def** %arrayidx580, align 8, !tbaa !7
  %127 = getelementptr inbounds %struct.rtx_def* %126, i64 0, i32 0
  %bf.load581 = load i32* %127, align 8
  %bf.clear582 = and i32 %bf.load581, 65535
  %cmp583 = icmp eq i32 %bf.clear582, 66
  br i1 %cmp583, label %land.lhs.true585, label %for.inc633

land.lhs.true585:                                 ; preds = %for.body577
  %arrayidx587 = getelementptr inbounds %struct.rtx_def* %126, i64 0, i32 1, i64 0
  %rtx588 = bitcast %union.rtunion_def* %arrayidx587 to %struct.rtx_def**
  %128 = load %struct.rtx_def** %rtx588, align 8, !tbaa !7
  %129 = getelementptr inbounds %struct.rtx_def* %128, i64 0, i32 0
  %bf.load589 = load i32* %129, align 8
  %bf.clear590 = and i32 %bf.load589, 65535
  %cmp591 = icmp eq i32 %bf.clear590, 61
  br i1 %cmp591, label %land.lhs.true593, label %if.then602

land.lhs.true593:                                 ; preds = %land.lhs.true585
  %arrayidx598 = getelementptr inbounds %struct.rtx_def* %128, i64 0, i32 1, i64 0
  %rtuint599 = bitcast %union.rtunion_def* %arrayidx598 to i32*
  %130 = load i32* %rtuint599, align 4, !tbaa !24
  %cmp600 = icmp ugt i32 %130, 57
  br i1 %cmp600, label %for.inc633, label %if.then602

if.then602:                                       ; preds = %land.lhs.true593, %land.lhs.true585
  %filename = getelementptr inbounds %union.tree_node* %formal.21576, i64 0, i32 0, i32 1
  %131 = load i8** %filename, align 8, !tbaa !86
  %linenum = getelementptr inbounds %union.tree_node* %formal.21576, i64 0, i32 0, i32 2
  %132 = load i32* %linenum, align 4, !tbaa !87
  %call606 = call %struct.rtx_def* @emit_note(i8* %131, i32 %132) #4
  %tobool607 = icmp eq %struct.rtx_def* %call606, null
  br i1 %tobool607, label %if.end612, label %if.then608

if.then608:                                       ; preds = %if.then602
  %133 = getelementptr inbounds %struct.rtx_def* %call606, i64 0, i32 0
  %bf.load609 = load i32* %133, align 8
  %bf.set611 = or i32 %bf.load609, 1073741824
  store i32 %bf.set611, i32* %133, align 8
  br label %if.end612

if.end612:                                        ; preds = %if.then602, %if.then608
  %call613 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %126, %struct.inline_remap* %57, i32 1)
  store %struct.rtx_def* %call613, %struct.rtx_def** %temp, align 8, !tbaa !7
  call fastcc void @subst_constants(%struct.rtx_def** %temp, %struct.rtx_def* null, %struct.inline_remap* %57, i32 1)
  %call614 = call i32 @apply_change_group() #4
  %134 = load %struct.rtx_def** %temp, align 8, !tbaa !7
  %135 = getelementptr inbounds %struct.rtx_def* %134, i64 0, i32 0
  %bf.load615 = load i32* %135, align 8
  %bf.lshr616 = lshr i32 %bf.load615, 16
  %bf.clear617 = and i32 %bf.lshr616, 255
  %arrayidx619 = getelementptr inbounds %struct.rtx_def* %134, i64 0, i32 1, i64 0
  %rtx620 = bitcast %union.rtunion_def* %arrayidx619 to %struct.rtx_def**
  %136 = load %struct.rtx_def** %rtx620, align 8, !tbaa !7
  %call621 = call i32 @memory_address_p(i32 %bf.clear617, %struct.rtx_def* %136) #4
  %tobool622 = icmp eq i32 %call621, 0
  %137 = load %struct.rtx_def** %temp, align 8, !tbaa !7
  br i1 %tobool622, label %if.then623, label %if.end628

if.then623:                                       ; preds = %if.end612
  %arrayidx625 = getelementptr inbounds %struct.rtx_def* %137, i64 0, i32 1, i64 0
  %rtx626 = bitcast %union.rtunion_def* %arrayidx625 to %struct.rtx_def**
  %138 = load %struct.rtx_def** %rtx626, align 8, !tbaa !7
  %call627 = call %struct.rtx_def* @change_address(%struct.rtx_def* %137, i32 0, %struct.rtx_def* %138) #4
  store %struct.rtx_def* %call627, %struct.rtx_def** %temp, align 8, !tbaa !7
  br label %if.end628

if.end628:                                        ; preds = %if.end612, %if.then623
  %139 = phi %struct.rtx_def* [ %call627, %if.then623 ], [ %137, %if.end612 ]
  %arrayidx630 = getelementptr inbounds %union.tree_node** %33, i64 %indvars.iv
  %140 = load %union.tree_node** %arrayidx630, align 8, !tbaa !7
  %call631 = call %struct.rtx_def* @store_expr(%union.tree_node* %140, %struct.rtx_def* %139, i32 0) #4
  br label %for.inc633

for.inc633:                                       ; preds = %for.body577, %land.lhs.true593, %if.end628
  %chain635 = getelementptr inbounds %union.tree_node* %formal.21576, i64 0, i32 0, i32 0, i32 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %formal.2 = load %union.tree_node** %chain635, align 8
  %tobool576 = icmp eq %union.tree_node* %formal.2, null
  br i1 %tobool576, label %for.end637, label %for.body577

for.end637:                                       ; preds = %for.inc633, %for.end572
  %inline_target = getelementptr inbounds i8* %call282, i64 80
  %141 = bitcast i8* %inline_target to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %141, align 8, !tbaa !88
  %result = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 11
  %142 = load %union.tree_node** %result, align 8, !tbaa !34
  %rtl = getelementptr inbounds %union.tree_node* %142, i64 0, i32 0, i32 17
  %143 = load %struct.rtx_def** %rtl, align 8, !tbaa !35
  %type665 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode666 = getelementptr inbounds %struct.tree_type* %type665, i64 0, i32 6
  %bf.load667 = load i32* %mode666, align 4
  %bf.lshr668 = lshr i32 %bf.load667, 9
  %bf.clear669 = and i32 %bf.lshr668, 127
  %cmp670 = icmp eq i32 %bf.clear669, 0
  br i1 %cmp670, label %if.end1088, label %if.else673

if.else673:                                       ; preds = %for.end637
  %144 = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 0
  %bf.load674 = load i32* %144, align 8
  %bf.clear675 = and i32 %bf.load674, 65535
  %cmp676 = icmp eq i32 %bf.clear675, 66
  br i1 %cmp676, label %if.then678, label %if.else844

if.then678:                                       ; preds = %if.else673
  %arrayidx680 = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 1, i64 0
  %rtx681 = bitcast %union.rtunion_def* %arrayidx680 to %struct.rtx_def**
  %145 = load %struct.rtx_def** %rtx681, align 8, !tbaa !7
  %146 = getelementptr inbounds %struct.rtx_def* %145, i64 0, i32 0
  %bf.load682 = load i32* %146, align 8
  %bf.clear683 = and i32 %bf.load682, 65535
  %cmp684 = icmp eq i32 %bf.clear683, 70
  br i1 %cmp684, label %if.then686, label %if.else689

if.then686:                                       ; preds = %if.then678
  %call687 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %143, %struct.inline_remap* %57, i32 1)
  store %struct.rtx_def* %call687, %struct.rtx_def** %temp, align 8, !tbaa !7
  call fastcc void @subst_constants(%struct.rtx_def** %temp, %struct.rtx_def* null, %struct.inline_remap* %57, i32 1)
  %call688 = call i32 @apply_change_group() #4
  %147 = load %struct.rtx_def** %temp, align 8, !tbaa !7
  br label %if.end1088

if.else689:                                       ; preds = %if.then678
  %tobool690 = icmp eq %struct.rtx_def* %structure_value_addr, null
  br i1 %tobool690, label %if.then696, label %lor.lhs.false691

lor.lhs.false691:                                 ; preds = %if.else689
  %call694 = call i32 @aggregate_value_p(%union.tree_node* %142) #4
  %tobool695 = icmp eq i32 %call694, 0
  br i1 %tobool695, label %if.then696, label %if.end697

if.then696:                                       ; preds = %lor.lhs.false691, %if.else689
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1027, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  unreachable

if.end697:                                        ; preds = %lor.lhs.false691
  %148 = load %struct.rtx_def** %rtx681, align 8, !tbaa !7
  %149 = getelementptr inbounds %struct.rtx_def* %148, i64 0, i32 0
  %bf.load701 = load i32* %149, align 8
  %bf.clear702 = and i32 %bf.load701, 65535
  %cmp703 = icmp eq i32 %bf.clear702, 61
  br i1 %cmp703, label %if.then705, label %if.else838

if.then705:                                       ; preds = %if.end697
  %call706 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %structure_value_addr, %struct.rtx_def* null) #4
  store %struct.rtx_def* %call706, %struct.rtx_def** %temp, align 8, !tbaa !7
  %150 = load i32* @target_flags, align 4, !tbaa !24
  %and = lshr i32 %150, 25
  %151 = and i32 %and, 1
  %152 = or i32 %151, 4
  %call709 = call %struct.rtx_def* @force_reg(i32 %152, %struct.rtx_def* %call706) #4
  store %struct.rtx_def* %call709, %struct.rtx_def** %temp, align 8, !tbaa !7
  %arrayidx711 = getelementptr inbounds %struct.rtx_def* %call709, i64 0, i32 1, i64 0
  %rtuint712 = bitcast %union.rtunion_def* %arrayidx711 to i32*
  %153 = load i32* %rtuint712, align 4, !tbaa !24
  %.off = add i32 %153, -53
  %154 = icmp ult i32 %.off, 5
  br i1 %154, label %if.then721, label %if.end726

if.then721:                                       ; preds = %if.then705
  %155 = load i32* @target_flags, align 4, !tbaa !24
  %and722 = lshr i32 %155, 25
  %156 = and i32 %and722, 1
  %157 = or i32 %156, 4
  %call725 = call %struct.rtx_def* @copy_to_mode_reg(i32 %157, %struct.rtx_def* %call709) #4
  store %struct.rtx_def* %call725, %struct.rtx_def** %temp, align 8, !tbaa !7
  br label %if.end726

if.end726:                                        ; preds = %if.then721, %if.then705
  %158 = phi %struct.rtx_def* [ %call725, %if.then721 ], [ %call709, %if.then705 ]
  %159 = load %struct.rtx_def** %rtx681, align 8, !tbaa !7
  %arrayidx731 = getelementptr inbounds %struct.rtx_def* %159, i64 0, i32 1, i64 0
  %rtuint732 = bitcast %union.rtunion_def* %arrayidx731 to i32*
  %160 = load i32* %rtuint732, align 4, !tbaa !24
  %idxprom733 = zext i32 %160 to i64
  %161 = load %struct.rtx_def*** %61, align 8, !tbaa !62
  %arrayidx735 = getelementptr inbounds %struct.rtx_def** %161, i64 %idxprom733
  store %struct.rtx_def* %158, %struct.rtx_def** %arrayidx735, align 8, !tbaa !7
  %162 = getelementptr inbounds %struct.rtx_def* %structure_value_addr, i64 0, i32 0
  %bf.load736 = load i32* %162, align 8
  %bf.clear737 = and i32 %bf.load736, 65535
  switch i32 %bf.clear737, label %if.end1088 [
    i32 67, label %if.then799
    i32 68, label %if.then799
    i32 54, label %if.then799
    i32 55, label %if.then799
    i32 58, label %if.then799
    i32 134, label %if.then799
    i32 56, label %if.then799
    i32 140, label %if.then799
    i32 70, label %if.then799
    i32 75, label %land.lhs.true785
  ]

land.lhs.true785:                                 ; preds = %if.end726
  %fld786 = getelementptr inbounds %struct.rtx_def* %structure_value_addr, i64 0, i32 1
  %rtx788 = bitcast [1 x %union.rtunion_def]* %fld786 to %struct.rtx_def**
  %163 = load %struct.rtx_def** %rtx788, align 8, !tbaa !7
  %164 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !7
  %cmp789 = icmp eq %struct.rtx_def* %163, %164
  br i1 %cmp789, label %land.lhs.true791, label %if.end1088

land.lhs.true791:                                 ; preds = %land.lhs.true785
  %arrayidx793 = getelementptr inbounds %struct.rtx_def* %structure_value_addr, i64 0, i32 1, i64 1
  %rtx794 = bitcast %union.rtunion_def* %arrayidx793 to %struct.rtx_def**
  %165 = load %struct.rtx_def** %rtx794, align 8, !tbaa !7
  %166 = getelementptr inbounds %struct.rtx_def* %165, i64 0, i32 0
  %bf.load795 = load i32* %166, align 8
  %bf.clear796 = and i32 %bf.load795, 65535
  %cmp797 = icmp eq i32 %bf.clear796, 54
  br i1 %cmp797, label %if.then799, label %if.end1088

if.then799:                                       ; preds = %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %if.end726, %land.lhs.true791
  %167 = load %struct.rtx_def** %temp, align 8, !tbaa !7
  %arrayidx802 = getelementptr inbounds %struct.rtx_def* %167, i64 0, i32 1, i64 0
  %rtuint803 = bitcast %union.rtunion_def* %arrayidx802 to i32*
  %168 = load i32* %rtuint803, align 4, !tbaa !24
  %conv804 = zext i32 %168 to i64
  %169 = load %struct.varray_head_tag** %73, align 8, !tbaa !71
  %num_elements806 = getelementptr inbounds %struct.varray_head_tag* %169, i64 0, i32 0
  %170 = load i64* %num_elements806, align 8, !tbaa !79
  %cmp807 = icmp ult i64 %conv804, %170
  br i1 %cmp807, label %if.end826, label %if.then809

if.then809:                                       ; preds = %if.then799
  %171 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %cmp812 = icmp eq %struct.varray_head_tag* %171, %169
  %add818 = add i32 %168, 1
  %conv819 = zext i32 %add818 to i64
  %call820 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %169, i64 %conv819) #4
  store %struct.varray_head_tag* %call820, %struct.varray_head_tag** %73, align 8, !tbaa !71
  br i1 %cmp812, label %if.then823, label %if.end826

if.then823:                                       ; preds = %if.then809
  store %struct.varray_head_tag* %call820, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  br label %if.end826

if.end826:                                        ; preds = %if.then799, %if.then809, %if.then823
  %172 = phi %struct.varray_head_tag* [ %169, %if.then799 ], [ %call820, %if.then809 ], [ %call820, %if.then823 ]
  %173 = load %struct.rtx_def** %temp, align 8, !tbaa !7
  %arrayidx828 = getelementptr inbounds %struct.rtx_def* %173, i64 0, i32 1, i64 0
  %rtuint829 = bitcast %union.rtunion_def* %arrayidx828 to i32*
  %174 = load i32* %rtuint829, align 4, !tbaa !24
  %idxprom830 = zext i32 %174 to i64
  %rtx835 = getelementptr inbounds %struct.varray_head_tag* %172, i64 0, i32 4, i32 0, i64 %idxprom830, i32 0
  store %struct.rtx_def* %structure_value_addr, %struct.rtx_def** %rtx835, align 8, !tbaa !82
  %age836 = getelementptr inbounds %struct.varray_head_tag* %172, i64 0, i32 4, i32 0, i64 %idxprom830, i32 1
  store i32 -1, i32* %age836, align 4, !tbaa !84
  br label %if.end1088

if.else838:                                       ; preds = %if.end697
  %call839 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %143, %struct.inline_remap* %57, i32 1)
  store %struct.rtx_def* %call839, %struct.rtx_def** %temp, align 8, !tbaa !7
  call fastcc void @subst_constants(%struct.rtx_def** %temp, %struct.rtx_def* null, %struct.inline_remap* %57, i32 0)
  %call840 = call i32 @apply_change_group() #4
  %175 = load %struct.rtx_def** %temp, align 8, !tbaa !7
  %call841 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %175, %struct.rtx_def* %structure_value_addr) #4
  br label %if.end1088

if.else844:                                       ; preds = %if.else673
  %tobool845 = icmp eq i32 %ignore, 0
  br i1 %tobool845, label %if.else847, label %if.end1088

if.else847:                                       ; preds = %if.else844
  switch i32 %bf.clear675, label %if.else1083 [
    i32 61, label %if.then852
    i32 65, label %if.then986
  ]

if.then852:                                       ; preds = %if.else847
  %tobool862 = icmp eq %struct.rtx_def* %143, null
  br i1 %tobool862, label %cond.false868, label %cond.end875

cond.false868:                                    ; preds = %if.then852
  call void @make_decl_rtl(%union.tree_node* %142, i8* null) #4
  %176 = load %union.tree_node** %result, align 8, !tbaa !34
  %rtl874 = getelementptr inbounds %union.tree_node* %176, i64 0, i32 0, i32 17
  %177 = load %struct.rtx_def** %rtl874, align 8, !tbaa !35
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %177, i64 0, i32 0
  %bf.load877.pre = load i32* %.phi.trans.insert, align 8
  br label %cond.end875

cond.end875:                                      ; preds = %if.then852, %cond.false868
  %178 = phi %union.tree_node* [ %176, %cond.false868 ], [ %142, %if.then852 ]
  %bf.load877 = phi i32 [ %bf.load877.pre, %cond.false868 ], [ %bf.load674, %if.then852 ]
  %179 = phi %struct.rtx_def* [ %177, %cond.false868 ], [ %143, %if.then852 ]
  %bf.lshr878 = lshr i32 %bf.load877, 16
  %bf.clear879 = and i32 %bf.lshr878, 255
  %cmp880 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp880, label %if.then893, label %lor.lhs.false882

lor.lhs.false882:                                 ; preds = %cond.end875
  %180 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load883 = load i32* %180, align 8
  %bf.clear884 = and i32 %bf.load883, 65535
  %cmp885 = icmp eq i32 %bf.clear884, 61
  br i1 %cmp885, label %lor.lhs.false887, label %if.then893

lor.lhs.false887:                                 ; preds = %lor.lhs.false882
  %bf.lshr889 = lshr i32 %bf.load883, 16
  %bf.clear890 = and i32 %bf.lshr889, 255
  %cmp891 = icmp eq i32 %bf.clear890, %bf.clear669
  br i1 %cmp891, label %if.end947, label %if.then893

if.then893:                                       ; preds = %lor.lhs.false887, %lor.lhs.false882, %cond.end875
  %cmp894 = icmp eq i32 %bf.clear669, 51
  br i1 %cmp894, label %if.then896, label %if.end945

if.then896:                                       ; preds = %if.then893
  %tobool901 = icmp eq %struct.rtx_def* %179, null
  br i1 %tobool901, label %cond.false907, label %cond.end914

cond.false907:                                    ; preds = %if.then896
  call void @make_decl_rtl(%union.tree_node* %178, i8* null) #4
  %181 = load %union.tree_node** %result, align 8, !tbaa !34
  %rtl913 = getelementptr inbounds %union.tree_node* %181, i64 0, i32 0, i32 17
  %182 = load %struct.rtx_def** %rtl913, align 8, !tbaa !35
  %.phi.trans.insert1597 = getelementptr inbounds %struct.rtx_def* %182, i64 0, i32 0
  %bf.load916.pre = load i32* %.phi.trans.insert1597, align 8
  br label %cond.end914

cond.end914:                                      ; preds = %if.then896, %cond.false907
  %183 = phi %union.tree_node* [ %181, %cond.false907 ], [ %178, %if.then896 ]
  %bf.load916 = phi i32 [ %bf.load916.pre, %cond.false907 ], [ %bf.load877, %if.then896 ]
  %184 = phi %struct.rtx_def* [ %182, %cond.false907 ], [ %179, %if.then896 ]
  %bf.clear917 = and i32 %bf.load916, 65535
  %cmp918 = icmp eq i32 %bf.clear917, 61
  br i1 %cmp918, label %if.then920, label %if.else943

if.then920:                                       ; preds = %cond.end914
  %tobool925 = icmp eq %struct.rtx_def* %184, null
  br i1 %tobool925, label %cond.false931, label %cond.end938

cond.false931:                                    ; preds = %if.then920
  call void @make_decl_rtl(%union.tree_node* %183, i8* null) #4
  %185 = load %union.tree_node** %result, align 8, !tbaa !34
  %rtl937 = getelementptr inbounds %union.tree_node* %185, i64 0, i32 0, i32 17
  %186 = load %struct.rtx_def** %rtl937, align 8, !tbaa !35
  %.phi.trans.insert1599 = getelementptr inbounds %struct.rtx_def* %186, i64 0, i32 0
  %bf.load940.pre = load i32* %.phi.trans.insert1599, align 8
  br label %cond.end938

cond.end938:                                      ; preds = %if.then920, %cond.false931
  %bf.load940 = phi i32 [ %bf.load940.pre, %cond.false931 ], [ %bf.load916, %if.then920 ]
  %bf.lshr941 = lshr i32 %bf.load940, 16
  %bf.clear942 = and i32 %bf.lshr941, 255
  br label %if.end945

if.else943:                                       ; preds = %cond.end914
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1112, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  unreachable

if.end945:                                        ; preds = %cond.end938, %if.then893
  %departing_mode.0 = phi i32 [ %bf.clear942, %cond.end938 ], [ %bf.clear669, %if.then893 ]
  %arriving_mode.0 = phi i32 [ %bf.clear942, %cond.end938 ], [ %bf.clear879, %if.then893 ]
  %call946 = call %struct.rtx_def* @gen_reg_rtx(i32 %departing_mode.0) #4
  br label %if.end947

if.end947:                                        ; preds = %lor.lhs.false887, %if.end945
  %target.addr.0 = phi %struct.rtx_def* [ %call946, %if.end945 ], [ %target, %lor.lhs.false887 ]
  %departing_mode.1 = phi i32 [ %departing_mode.0, %if.end945 ], [ %bf.clear669, %lor.lhs.false887 ]
  %arriving_mode.1 = phi i32 [ %arriving_mode.0, %if.end945 ], [ %bf.clear879, %lor.lhs.false887 ]
  %cmp948 = icmp eq i32 %arriving_mode.1, %departing_mode.1
  br i1 %cmp948, label %if.end966, label %if.then950

if.then950:                                       ; preds = %if.end947
  %idxprom951 = sext i32 %arriving_mode.1 to i64
  %arrayidx952 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom951
  %187 = load i16* %arrayidx952, align 2, !tbaa !89
  %conv953 = zext i16 %187 to i32
  %188 = load i32* @target_flags, align 4, !tbaa !24
  %and954 = lshr i32 %188, 20
  %189 = and i32 %and954, 32
  %190 = add i32 %189, 32
  %cmp957 = icmp ugt i32 %conv953, %190
  br i1 %cmp957, label %if.then959, label %if.else962

if.then959:                                       ; preds = %if.then950
  %call960 = call %struct.rtx_def* @gen_reg_rtx(i32 %arriving_mode.1) #4
  %call961 = call %struct.rtx_def* @gen_lowpart(i32 %departing_mode.1, %struct.rtx_def* %call960) #4
  br label %if.end966

if.else962:                                       ; preds = %if.then950
  %call963 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %arriving_mode.1, %struct.rtx_def* %target.addr.0, i32 0) #4
  br label %if.end966

if.end966:                                        ; preds = %if.end947, %if.then959, %if.else962
  %target.addr.1 = phi %struct.rtx_def* [ %call961, %if.then959 ], [ %target.addr.0, %if.else962 ], [ %target.addr.0, %if.end947 ]
  %reg_to_map.0 = phi %struct.rtx_def* [ %call960, %if.then959 ], [ %call963, %if.else962 ], [ %target.addr.0, %if.end947 ]
  %bf.load967 = load i32* %144, align 8
  %bf.clear969 = and i32 %bf.load967, 1073741824
  %tobool970 = icmp eq i32 %bf.clear969, 0
  br i1 %tobool970, label %if.else973, label %if.then971

if.then971:                                       ; preds = %if.end966
  store %struct.rtx_def* %reg_to_map.0, %struct.rtx_def** %141, align 8, !tbaa !88
  br label %if.end1088

if.else973:                                       ; preds = %if.end966
  %arrayidx975 = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 1, i64 0
  %rtuint976 = bitcast %union.rtunion_def* %arrayidx975 to i32*
  %191 = load i32* %rtuint976, align 4, !tbaa !24
  %idxprom977 = zext i32 %191 to i64
  %192 = load %struct.rtx_def*** %61, align 8, !tbaa !62
  %arrayidx979 = getelementptr inbounds %struct.rtx_def** %192, i64 %idxprom977
  store %struct.rtx_def* %reg_to_map.0, %struct.rtx_def** %arrayidx979, align 8, !tbaa !7
  br label %if.end1088

if.then986:                                       ; preds = %if.else847
  %tobool998 = icmp eq %struct.rtx_def* %143, null
  br i1 %tobool998, label %cond.false1004, label %cond.end1011

cond.false1004:                                   ; preds = %if.then986
  call void @make_decl_rtl(%union.tree_node* %142, i8* null) #4
  %193 = load %union.tree_node** %result, align 8, !tbaa !34
  %rtl1010 = getelementptr inbounds %union.tree_node* %193, i64 0, i32 0, i32 17
  %194 = load %struct.rtx_def** %rtl1010, align 8, !tbaa !35
  %.phi.trans.insert1601 = getelementptr inbounds %struct.rtx_def* %194, i64 0, i32 0
  %bf.load1013.pre = load i32* %.phi.trans.insert1601, align 8
  br label %cond.end1011

cond.end1011:                                     ; preds = %if.then986, %cond.false1004
  %bf.load1013 = phi i32 [ %bf.load1013.pre, %cond.false1004 ], [ %bf.load674, %if.then986 ]
  %bf.lshr1014 = lshr i32 %bf.load1013, 16
  %bf.clear1015 = and i32 %bf.lshr1014, 255
  %cmp1016 = icmp eq i32 %bf.clear669, %bf.clear1015
  br i1 %cmp1016, label %if.end1019, label %if.then1018

if.then1018:                                      ; preds = %cond.end1011
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1154, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  unreachable

if.end1019:                                       ; preds = %cond.end1011
  %fld1020 = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 1
  %rtx1022 = bitcast [1 x %union.rtunion_def]* %fld1020 to %struct.rtx_def**
  %195 = load %struct.rtx_def** %rtx1022, align 8, !tbaa !7
  %196 = getelementptr inbounds %struct.rtx_def* %195, i64 0, i32 0
  %bf.load1023 = load i32* %196, align 8
  %bf.clear1024 = and i32 %bf.load1023, 65535
  %cmp1025 = icmp eq i32 %bf.clear1024, 61
  br i1 %cmp1025, label %lor.lhs.false1027, label %if.then1035

lor.lhs.false1027:                                ; preds = %if.end1019
  %arrayidx1029 = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 1, i64 1
  %rtx1030 = bitcast %union.rtunion_def* %arrayidx1029 to %struct.rtx_def**
  %197 = load %struct.rtx_def** %rtx1030, align 8, !tbaa !7
  %198 = getelementptr inbounds %struct.rtx_def* %197, i64 0, i32 0
  %bf.load1031 = load i32* %198, align 8
  %bf.clear1032 = and i32 %bf.load1031, 65535
  %cmp1033 = icmp eq i32 %bf.clear1032, 61
  br i1 %cmp1033, label %if.end1036, label %if.then1035

if.then1035:                                      ; preds = %lor.lhs.false1027, %if.end1019
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1157, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  unreachable

if.end1036:                                       ; preds = %lor.lhs.false1027
  %cmp1037 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp1037, label %if.then1050, label %lor.lhs.false1039

lor.lhs.false1039:                                ; preds = %if.end1036
  %199 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load1040 = load i32* %199, align 8
  %bf.clear1041 = and i32 %bf.load1040, 65535
  %cmp1042 = icmp eq i32 %bf.clear1041, 61
  br i1 %cmp1042, label %lor.lhs.false1044, label %if.then1050

lor.lhs.false1044:                                ; preds = %lor.lhs.false1039
  %bf.lshr1046 = lshr i32 %bf.load1040, 16
  %bf.clear1047 = and i32 %bf.lshr1046, 255
  %cmp1048 = icmp eq i32 %bf.clear1047, %bf.clear669
  br i1 %cmp1048, label %if.end1052, label %if.then1050

if.then1050:                                      ; preds = %lor.lhs.false1044, %lor.lhs.false1039, %if.end1036
  %call1051 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear669) #4
  %.phi.trans.insert1603 = getelementptr inbounds %struct.rtx_def* %call1051, i64 0, i32 0
  %bf.load1053.pre = load i32* %.phi.trans.insert1603, align 8
  br label %if.end1052

if.end1052:                                       ; preds = %lor.lhs.false1044, %if.then1050
  %bf.load1053 = phi i32 [ %bf.load1053.pre, %if.then1050 ], [ %bf.load1040, %lor.lhs.false1044 ]
  %target.addr.2 = phi %struct.rtx_def* [ %call1051, %if.then1050 ], [ %target, %lor.lhs.false1044 ]
  %bf.clear1054 = and i32 %bf.load1053, 65535
  %cmp1055 = icmp eq i32 %bf.clear1054, 65
  br i1 %cmp1055, label %if.end1058, label %if.then1057

if.then1057:                                      ; preds = %if.end1052
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1167, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  unreachable

if.end1058:                                       ; preds = %if.end1052
  %fld1059 = getelementptr inbounds %struct.rtx_def* %target.addr.2, i64 0, i32 1
  %rtx1061 = bitcast [1 x %union.rtunion_def]* %fld1059 to %struct.rtx_def**
  %200 = load %struct.rtx_def** %rtx1061, align 8, !tbaa !7
  %201 = load %struct.rtx_def** %rtx1022, align 8, !tbaa !7
  %arrayidx1066 = getelementptr inbounds %struct.rtx_def* %201, i64 0, i32 1, i64 0
  %rtuint1067 = bitcast %union.rtunion_def* %arrayidx1066 to i32*
  %202 = load i32* %rtuint1067, align 4, !tbaa !24
  %idxprom1068 = zext i32 %202 to i64
  %203 = load %struct.rtx_def*** %61, align 8, !tbaa !62
  %arrayidx1070 = getelementptr inbounds %struct.rtx_def** %203, i64 %idxprom1068
  store %struct.rtx_def* %200, %struct.rtx_def** %arrayidx1070, align 8, !tbaa !7
  %arrayidx1072 = getelementptr inbounds %struct.rtx_def* %target.addr.2, i64 0, i32 1, i64 1
  %rtx1073 = bitcast %union.rtunion_def* %arrayidx1072 to %struct.rtx_def**
  %204 = load %struct.rtx_def** %rtx1073, align 8, !tbaa !7
  %205 = load %struct.rtx_def** %rtx1030, align 8, !tbaa !7
  %arrayidx1078 = getelementptr inbounds %struct.rtx_def* %205, i64 0, i32 1, i64 0
  %rtuint1079 = bitcast %union.rtunion_def* %arrayidx1078 to i32*
  %206 = load i32* %rtuint1079, align 4, !tbaa !24
  %idxprom1080 = zext i32 %206 to i64
  %207 = load %struct.rtx_def*** %61, align 8, !tbaa !62
  %arrayidx1082 = getelementptr inbounds %struct.rtx_def** %207, i64 %idxprom1080
  store %struct.rtx_def* %204, %struct.rtx_def** %arrayidx1082, align 8, !tbaa !7
  br label %if.end1088

if.else1083:                                      ; preds = %if.else847
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1173, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.expand_inline_function, i64 0, i64 0)) #7
  unreachable

if.end1088:                                       ; preds = %if.end726, %if.else844, %if.else838, %if.end826, %land.lhs.true791, %land.lhs.true785, %if.then686, %if.end1058, %if.else973, %if.then971, %for.end637
  %target.addr.3 = phi %struct.rtx_def* [ %target, %for.end637 ], [ %147, %if.then686 ], [ %target, %if.end826 ], [ %target, %land.lhs.true791 ], [ %target, %land.lhs.true785 ], [ %target, %if.else838 ], [ %target, %if.else844 ], [ %target.addr.1, %if.then971 ], [ %target.addr.1, %if.else973 ], [ %target.addr.2, %if.end1058 ], [ %target, %if.end726 ]
  %call1089 = call %struct.rtx_def* @get_exception_pointer(%struct.function* %0) #4
  store %struct.rtx_def* %call1089, %struct.rtx_def** %temp, align 8, !tbaa !7
  %tobool1090 = icmp eq %struct.rtx_def* %call1089, null
  br i1 %tobool1090, label %if.end1099, label %if.then1091

if.then1091:                                      ; preds = %if.end1088
  %208 = load %struct.function** @cfun, align 8, !tbaa !7
  %call1092 = call %struct.rtx_def* @get_exception_pointer(%struct.function* %208) #4
  %209 = load %struct.rtx_def** %temp, align 8, !tbaa !7
  %arrayidx1094 = getelementptr inbounds %struct.rtx_def* %209, i64 0, i32 1, i64 0
  %rtuint1095 = bitcast %union.rtunion_def* %arrayidx1094 to i32*
  %210 = load i32* %rtuint1095, align 4, !tbaa !24
  %idxprom1096 = zext i32 %210 to i64
  %211 = load %struct.rtx_def*** %61, align 8, !tbaa !62
  %arrayidx1098 = getelementptr inbounds %struct.rtx_def** %211, i64 %idxprom1096
  store %struct.rtx_def* %call1092, %struct.rtx_def** %arrayidx1098, align 8, !tbaa !7
  br label %if.end1099

if.end1099:                                       ; preds = %if.end1088, %if.then1091
  %idxprom1100 = sext i32 %5 to i64
  %212 = load %struct.rtx_def*** %63, align 8, !tbaa !1
  %arrayidx1102 = getelementptr inbounds %struct.rtx_def** %212, i64 %idxprom1100
  %213 = bitcast %struct.rtx_def** %arrayidx1102 to i8*
  %sub1103 = sub nsw i32 %6, %5
  %conv1104 = sext i32 %sub1103 to i64
  %mul1105 = shl nsw i64 %conv1104, 3
  call void @llvm.memset.p0i8.i64(i8* %213, i8 0, i64 %mul1105, i32 1, i1 false)
  store %union.tree_node* %11, %union.tree_node** @inline_function_decl, align 8, !tbaa !7
  %214 = load %union.tree_node** %arguments, align 8, !tbaa !21
  %215 = bitcast %struct.rtx_def** %new_decl_rtl.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %215) #4
  %tobool9.i = icmp eq %union.tree_node* %214, null
  br i1 %tobool9.i, label %integrate_parm_decls.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end1099, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %if.end1099 ]
  %tail.011.i = phi %union.tree_node* [ %220, %for.body.i ], [ %214, %if.end1099 ]
  %216 = load %union.tree_node** %58, align 8, !tbaa !60
  %217 = load %union.tree_node** @current_function_decl, align 8, !tbaa !7
  %call.i = call %union.tree_node* @copy_decl_for_inlining(%union.tree_node* %tail.011.i, %union.tree_node* %216, %union.tree_node* %217) #4
  %arrayidx.i = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 %indvars.iv.i
  %218 = load %struct.rtx_def** %arrayidx.i, align 8, !tbaa !7
  %call1.i = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %218, %struct.inline_remap* %57, i32 1) #4
  store %struct.rtx_def* %call1.i, %struct.rtx_def** %new_decl_rtl.i, align 8, !tbaa !7
  call fastcc void @subst_constants(%struct.rtx_def** %new_decl_rtl.i, %struct.rtx_def* null, %struct.inline_remap* %57, i32 1) #4
  %call2.i = call i32 @apply_change_group() #4
  %219 = load %struct.rtx_def** %new_decl_rtl.i, align 8, !tbaa !7
  %rtl.i = getelementptr inbounds %union.tree_node* %call.i, i64 0, i32 0, i32 17
  store %struct.rtx_def* %219, %struct.rtx_def** %rtl.i, align 8, !tbaa !35
  %chain.i = getelementptr inbounds %union.tree_node* %tail.011.i, i64 0, i32 0, i32 0, i32 0
  %220 = load %union.tree_node** %chain.i, align 8, !tbaa !58
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %tobool.i = icmp eq %union.tree_node* %220, null
  br i1 %tobool.i, label %integrate_parm_decls.exit, label %for.body.i

integrate_parm_decls.exit:                        ; preds = %for.body.i, %if.end1099
  call void @llvm.lifetime.end(i64 8, i8* %215) #4
  %original_decl_initial = getelementptr inbounds %struct.function* %0, i64 0, i32 47
  %221 = load %union.tree_node** %original_decl_initial, align 8, !tbaa !47
  %call1108 = call fastcc %union.tree_node* @integrate_decl_tree(%union.tree_node* %221, %struct.inline_remap* %57)
  %abstract_origin = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 13
  %222 = load %union.tree_node** %abstract_origin, align 8, !tbaa !38
  %tobool1110 = icmp eq %union.tree_node* %222, null
  %. = select i1 %tobool1110, %union.tree_node* %11, %union.tree_node* %222
  %223 = getelementptr inbounds %union.tree_node* %call1108, i64 0, i32 0, i32 6, i32 0
  %cond1116.c = ptrtoint %union.tree_node* %. to i64
  store i64 %cond1116.c, i64* %223, align 8, !tbaa !91
  store %union.tree_node* null, %union.tree_node** @inline_function_decl, align 8, !tbaa !7
  call void @expand_start_bindings_and_block(i32 0, %union.tree_node* %call1108) #4
  %224 = load %struct.varray_head_tag** %59, align 8, !tbaa !61
  %data1120 = getelementptr inbounds %struct.varray_head_tag* %224, i64 0, i32 4
  %225 = bitcast %union.varray_data_tag* %data1120 to i8*
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %224, i64 0, i32 1
  %226 = load i64* %elements_used, align 8, !tbaa !93
  %conv1123 = trunc i64 %226 to i32
  call void @specqsort(i8* %225, i32 %conv1123, i32 8, i32 (...)* bitcast (i32 (i8*, i8*)* @compare_blocks to i32 (...)*)) #4
  call void @emit_queue() #4
  call void @do_pending_stack_adjust() #4
  %227 = load %struct.varray_head_tag** %73, align 8, !tbaa !71
  store %struct.varray_head_tag* %227, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %bf.load1125 = load i32* %84, align 8
  %bf.clear1127 = and i32 %bf.load1125, 64
  %tobool1128 = icmp eq i32 %bf.clear1127, 0
  br i1 %tobool1128, label %if.end1130, label %if.then1129

if.then1129:                                      ; preds = %integrate_parm_decls.exit
  call void @emit_stack_save(i32 0, %struct.rtx_def** %stack_save, %struct.rtx_def* null) #4
  br label %if.end1130

if.end1130:                                       ; preds = %integrate_parm_decls.exit, %if.then1129
  %.idx = getelementptr %struct.function* %0, i64 0, i32 17
  %.idx.val = load %struct.initial_value_struct** %.idx, align 8, !tbaa !94
  %cmp.i = icmp eq %struct.initial_value_struct* %.idx.val, null
  br i1 %cmp.i, label %setup_initial_hard_reg_value_integration.exit, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end1130
  %num_entries.i = getelementptr inbounds %struct.initial_value_struct* %.idx.val, i64 0, i32 0
  %228 = load i32* %num_entries.i, align 4, !tbaa !95
  %cmp11.i = icmp sgt i32 %228, 0
  br i1 %cmp11.i, label %for.body.lr.ph.i1565, label %setup_initial_hard_reg_value_integration.exit

for.body.lr.ph.i1565:                             ; preds = %for.cond.preheader.i
  %entries.i = getelementptr inbounds %struct.initial_value_struct* %.idx.val, i64 0, i32 2
  br label %for.body.i1569

for.body.i1569:                                   ; preds = %for.body.i1569, %for.body.lr.ph.i1565
  %indvars.iv.i1566 = phi i64 [ 0, %for.body.lr.ph.i1565 ], [ %indvars.iv.next.i1568, %for.body.i1569 ]
  %229 = load %struct.function** @cfun, align 8, !tbaa !7
  %230 = load %struct.initial_value_pair** %entries.i, align 8, !tbaa !97
  %hard_reg.i = getelementptr inbounds %struct.initial_value_pair* %230, i64 %indvars.iv.i1566, i32 0
  %231 = load %struct.rtx_def** %hard_reg.i, align 8, !tbaa !98
  %call.i1567 = call %struct.rtx_def* @get_func_hard_reg_initial_val(%struct.function* %229, %struct.rtx_def* %231) #4
  %232 = load %struct.initial_value_pair** %entries.i, align 8, !tbaa !97
  %pseudo.i = getelementptr inbounds %struct.initial_value_pair* %232, i64 %indvars.iv.i1566, i32 1
  %233 = load %struct.rtx_def** %pseudo.i, align 8, !tbaa !100
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %233, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx5.i to i32*
  %234 = load i32* %rtuint.i, align 4, !tbaa !24
  %idxprom6.i = zext i32 %234 to i64
  %235 = load %struct.rtx_def*** %61, align 8, !tbaa !62
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def** %235, i64 %idxprom6.i
  store %struct.rtx_def* %call.i1567, %struct.rtx_def** %arrayidx7.i, align 8, !tbaa !7
  %indvars.iv.next.i1568 = add nuw nsw i64 %indvars.iv.i1566, 1
  %236 = load i32* %num_entries.i, align 4, !tbaa !95
  %237 = trunc i64 %indvars.iv.next.i1568 to i32
  %cmp1.i = icmp slt i32 %237, %236
  br i1 %cmp1.i, label %for.body.i1569, label %setup_initial_hard_reg_value_integration.exit

setup_initial_hard_reg_value_integration.exit:    ; preds = %for.body.i1569, %if.end1130, %for.cond.preheader.i
  call fastcc void @copy_insn_list(%struct.rtx_def* %cond, %struct.inline_remap* %57, %struct.rtx_def* %static_chain_value.0)
  %call1131 = call i32 @duplicate_eh_regions(%struct.function* %0, %struct.inline_remap* %57) #4
  call fastcc void @copy_insn_notes(%struct.rtx_def* %cond, %struct.inline_remap* %57, i32 %call1131)
  %238 = load %struct.rtx_def** %64, align 8, !tbaa !63
  %tobool1133 = icmp eq %struct.rtx_def* %238, null
  br i1 %tobool1133, label %if.end1137, label %if.then1134

if.then1134:                                      ; preds = %setup_initial_hard_reg_value_integration.exit
  %call1136 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %238) #4
  br label %if.end1137

if.end1137:                                       ; preds = %setup_initial_hard_reg_value_integration.exit, %if.then1134
  %bf.load1139 = load i32* %84, align 8
  %bf.clear1141 = and i32 %bf.load1139, 64
  %tobool1142 = icmp eq i32 %bf.clear1141, 0
  br i1 %tobool1142, label %if.end1144, label %if.then1143

if.then1143:                                      ; preds = %if.end1137
  %239 = load %struct.rtx_def** %stack_save, align 8, !tbaa !7
  call void @emit_stack_restore(i32 0, %struct.rtx_def* %239, %struct.rtx_def* null) #4
  br label %if.end1144

if.end1144:                                       ; preds = %if.end1137, %if.then1143
  %240 = load %struct.function** @cfun, align 8, !tbaa !7
  %x_whole_function_mode_p = getelementptr inbounds %struct.function* %240, i64 0, i32 56
  %241 = bitcast i24* %x_whole_function_mode_p to i32*
  %bf.load1145 = load i32* %241, align 8
  %bf.clear1147 = and i32 %bf.load1145, 262144
  %tobool1148 = icmp eq i32 %bf.clear1147, 0
  br i1 %tobool1148, label %if.then1149, label %if.else1150

if.then1149:                                      ; preds = %if.end1144
  call void @insert_block(%union.tree_node* %call1108) #4
  br label %if.end1161

if.else1150:                                      ; preds = %if.end1144
  %242 = load %union.tree_node** @current_function_decl, align 8, !tbaa !7
  %initial1152 = getelementptr inbounds %union.tree_node* %242, i64 0, i32 0, i32 12
  %243 = load %union.tree_node** %initial1152, align 8, !tbaa !46
  %chain1154 = getelementptr inbounds %union.tree_node* %243, i64 0, i32 0, i32 0, i32 0
  %244 = load %union.tree_node** %chain1154, align 8, !tbaa !58
  %chain1156 = getelementptr inbounds %union.tree_node* %call1108, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %244, %union.tree_node** %chain1156, align 8, !tbaa !58
  %245 = load %union.tree_node** @current_function_decl, align 8, !tbaa !7
  %initial1158 = getelementptr inbounds %union.tree_node* %245, i64 0, i32 0, i32 12
  %246 = load %union.tree_node** %initial1158, align 8, !tbaa !46
  %chain1160 = getelementptr inbounds %union.tree_node* %246, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call1108, %union.tree_node** %chain1160, align 8, !tbaa !58
  br label %if.end1161

if.end1161:                                       ; preds = %if.else1150, %if.then1149
  call void @expand_end_bindings(%union.tree_node* null, i32 1, i32 1) #4
  %247 = load i32* @flag_test_coverage, align 4, !tbaa !24
  %tobool1162 = icmp eq i32 %247, 0
  br i1 %tobool1162, label %if.end1165, label %if.then1163

if.then1163:                                      ; preds = %if.end1161
  %call1164 = call %struct.rtx_def* @emit_note(i8* null, i32 -84) #4
  br label %if.end1165

if.end1165:                                       ; preds = %if.end1161, %if.then1163
  %248 = load i8** @input_filename, align 8, !tbaa !7
  %249 = load i32* @lineno, align 4, !tbaa !24
  %call1166 = call %struct.rtx_def* @emit_line_note(i8* %248, i32 %249) #4
  %tobool1167 = icmp eq %struct.rtx_def* %target.addr.3, null
  br i1 %tobool1167, label %if.end1193, label %land.lhs.true1168

land.lhs.true1168:                                ; preds = %if.end1165
  %type1170 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %250 = load %union.tree_node** %type1170, align 8, !tbaa !17
  %type1172 = getelementptr inbounds %union.tree_node* %250, i64 0, i32 0, i32 0, i32 1
  %251 = load %union.tree_node** %type1172, align 8, !tbaa !17
  %type1173 = bitcast %union.tree_node* %251 to %struct.tree_type*
  %mode1174 = getelementptr inbounds %struct.tree_type* %type1173, i64 0, i32 6
  %bf.load1175 = load i32* %mode1174, align 4
  %bf.clear1177 = and i32 %bf.load1175, 65024
  %cmp1178 = icmp eq i32 %bf.clear1177, 26112
  br i1 %cmp1178, label %land.lhs.true1180, label %if.end1193

land.lhs.true1180:                                ; preds = %land.lhs.true1168
  %call1185 = call i32 @aggregate_value_p(%union.tree_node* %251) #4
  %tobool1186 = icmp eq i32 %call1185, 0
  br i1 %tobool1186, label %if.then1187, label %if.end1193

if.then1187:                                      ; preds = %land.lhs.true1180
  %252 = load %union.tree_node** %type1170, align 8, !tbaa !17
  %type1191 = getelementptr inbounds %union.tree_node* %252, i64 0, i32 0, i32 0, i32 1
  %253 = load %union.tree_node** %type1191, align 8, !tbaa !17
  %call1192 = call %struct.rtx_def* @copy_blkmode_from_reg(%struct.rtx_def* null, %struct.rtx_def* %target.addr.3, %union.tree_node* %253) #4
  br label %if.end1193

if.end1193:                                       ; preds = %land.lhs.true1180, %if.end1165, %if.then1187, %land.lhs.true1168
  %target.addr.4 = phi %struct.rtx_def* [ %target.addr.3, %land.lhs.true1180 ], [ %call1192, %if.then1187 ], [ %target.addr.3, %land.lhs.true1168 ], [ null, %if.end1165 ]
  %tobool1194 = icmp eq %struct.rtx_def* %structure_value_addr, null
  br i1 %tobool1194, label %if.end1208, label %if.then1195

if.then1195:                                      ; preds = %if.end1193
  %bf.load1198 = load i32* %mode666, align 4
  %bf.lshr1199 = lshr i32 %bf.load1198, 9
  %bf.clear1200 = and i32 %bf.lshr1199, 127
  %call1206 = call %struct.rtx_def* @memory_address(i32 %bf.clear1200, %struct.rtx_def* %structure_value_addr) #4
  %call1207 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear1200, %struct.rtx_def* %call1206) #4
  call void @set_mem_attributes(%struct.rtx_def* %call1207, %union.tree_node* %type, i32 1) #4
  br label %if.end1208

if.end1208:                                       ; preds = %if.end1193, %if.then1195
  %target.addr.5 = phi %struct.rtx_def* [ %call1207, %if.then1195 ], [ %target.addr.4, %if.end1193 ]
  %tobool1209 = icmp eq i8* %call289, null
  br i1 %tobool1209, label %do.body, label %if.then1210

if.then1210:                                      ; preds = %if.end1208
  call void @free(i8* %call289)
  br label %do.body

do.body:                                          ; preds = %if.end1208, %if.then1210
  %254 = load %struct.varray_head_tag** %73, align 8, !tbaa !71
  %tobool1213 = icmp eq %struct.varray_head_tag* %254, null
  br i1 %tobool1213, label %do.end, label %if.then1214

if.then1214:                                      ; preds = %do.body
  %255 = bitcast %struct.varray_head_tag* %254 to i8*
  call void @free(i8* %255)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** %73, align 8, !tbaa !71
  br label %do.end

do.end:                                           ; preds = %do.body, %if.then1214
  %256 = load %struct.rtx_def*** %61, align 8, !tbaa !62
  %257 = bitcast %struct.rtx_def** %256 to i8*
  call void @free(i8* %257)
  %258 = load %struct.varray_head_tag** %59, align 8, !tbaa !61
  %tobool1221 = icmp eq %struct.varray_head_tag* %258, null
  br i1 %tobool1221, label %do.end1226, label %if.then1222

if.then1222:                                      ; preds = %do.end
  %259 = bitcast %struct.varray_head_tag* %258 to i8*
  call void @free(i8* %259)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** %59, align 8, !tbaa !61
  br label %do.end1226

do.end1226:                                       ; preds = %do.end, %if.then1222
  %260 = load %struct.rtx_def*** %68, align 8, !tbaa !65
  %261 = bitcast %struct.rtx_def** %260 to i8*
  call void @free(i8* %261)
  call void @free(i8* %call282)
  call void @free(i8* %call63)
  call void @free(i8* %call66)
  store %struct.function* %124, %struct.function** @inlining, align 8, !tbaa !7
  br label %return

return:                                           ; preds = %if.end17, %lor.lhs.false, %land.lhs.true, %for.body, %do.end1226
  %retval.0 = phi %struct.rtx_def* [ %target.addr.5, %do.end1226 ], [ inttoptr (i64 -1 to %struct.rtx_def*), %for.body ], [ inttoptr (i64 -1 to %struct.rtx_def*), %land.lhs.true ], [ inttoptr (i64 -1 to %struct.rtx_def*), %lor.lhs.false ], [ inttoptr (i64 -1 to %struct.rtx_def*), %if.end17 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @expand_expr(%union.tree_node*, %struct.rtx_def*, i32, i32) #1

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #1

declare %struct.rtx_def* @assign_temp(%union.tree_node*, i32, i32, i32) #1

declare %struct.rtx_def* @store_expr(%union.tree_node*, %struct.rtx_def*, i32) #1

declare i32 @promote_mode(%union.tree_node*, i32, i32*, i32) #1

declare %struct.rtx_def* @convert_modes(i32, i32, %struct.rtx_def*, i32) #1

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) #1

declare void @mark_reg_pointer(%struct.rtx_def*, i32) #1

declare noalias i8* @xcalloc(i64, i64) #1

declare %struct.varray_head_tag* @varray_init(i64, i64, i8*) #1

declare i32 @max_reg_num() #1

declare %struct.rtx_def* @get_last_insn() #1

declare %struct.rtx_def* @emit_note(i8*, i32) #1

declare %struct.rtx_def* @lookup_static_chain(%union.tree_node*) #1

declare %struct.rtx_def* @copy_addr_to_reg(%struct.rtx_def*) #1

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %orig, %struct.inline_remap* %map, i32 %for_lhs) #0 {
entry:
  %cmp = icmp eq %struct.rtx_def* %orig, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  switch i32 %bf.clear, label %sw.epilog [
    i32 61, label %sw.bb
    i32 63, label %sw.bb252
    i32 70, label %sw.bb270
    i32 48, label %sw.bb365
    i32 49, label %sw.bb365
    i32 37, label %sw.bb390
    i32 36, label %sw.bb397
    i32 67, label %sw.bb414
    i32 59, label %return
    i32 69, label %return
    i32 54, label %return
    i32 56, label %return
    i32 68, label %sw.bb480
    i32 55, label %sw.bb519
    i32 58, label %sw.bb543
    i32 41, label %sw.bb550
    i32 50, label %sw.bb609
    i32 47, label %sw.bb695
    i32 66, label %sw.bb765
  ]

sw.bb:                                            ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !24
  %cmp3 = icmp slt i32 %1, 58
  br i1 %cmp3, label %if.then5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %integrating = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 0
  %2 = load i32* %integrating, align 4, !tbaa !68
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end194, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %fndecl = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 1
  %3 = load %union.tree_node** %fndecl, align 8, !tbaa !60
  %f = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 19, i32 0
  %4 = load %struct.function** %f, align 8, !tbaa !7
  %internal_arg_pointer = getelementptr inbounds %struct.function* %4, i64 0, i32 15
  %5 = load %struct.rtx_def** %internal_arg_pointer, align 8, !tbaa !101
  %cmp4 = icmp eq %struct.rtx_def* %5, %orig
  br i1 %cmp4, label %if.then5, label %if.end194

if.then5:                                         ; preds = %land.lhs.true, %sw.bb
  %idxprom = sext i32 %1 to i64
  %reg_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 4
  %6 = load %struct.rtx_def*** %reg_map, align 8, !tbaa !62
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %6, i64 %idxprom
  %7 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !7
  %cmp7 = icmp eq %struct.rtx_def* %7, null
  br i1 %cmp7, label %if.else, label %return

if.else:                                          ; preds = %if.then5
  switch i32 %1, label %lor.lhs.false80 [
    i32 54, label %if.then13
    i32 53, label %if.else.if.then91_crit_edge
  ]

if.else.if.then91_crit_edge:                      ; preds = %if.else
  %fndecl95.phi.trans.insert = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 1
  %.pre = load %union.tree_node** %fndecl95.phi.trans.insert, align 8, !tbaa !60
  %f98.phi.trans.insert = getelementptr inbounds %union.tree_node* %.pre, i64 0, i32 0, i32 19, i32 0
  %.pre1477 = load %struct.function** %f98.phi.trans.insert, align 8, !tbaa !7
  br label %if.then91

if.then13:                                        ; preds = %if.else
  %fndecl14 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 1
  %8 = load %union.tree_node** %fndecl14, align 8, !tbaa !60
  %f17 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 19, i32 0
  %9 = load %struct.function** %f17, align 8, !tbaa !7
  %call = call i64 @get_func_frame_size(%struct.function* %9) #4
  %conv = trunc i64 %call to i32
  %10 = load %union.tree_node** %fndecl14, align 8, !tbaa !60
  %f21 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 19, i32 0
  %11 = load %struct.function** %f21, align 8, !tbaa !7
  %stack_alignment_needed = getelementptr inbounds %struct.function* %11, i64 0, i32 52
  %12 = load i32* %stack_alignment_needed, align 4, !tbaa !102
  %div = sdiv i32 %12, 8
  %.off = add i32 %12, 7
  %13 = icmp ugt i32 %.off, 14
  br i1 %13, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.then13
  %add = add i32 %conv, -1
  %sub = add i32 %add, %div
  %neg = sub i32 0, %div
  %and = and i32 %sub, %neg
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.then13
  %size.0 = phi i32 [ %and, %if.then23 ], [ %conv, %if.then13 ]
  call void @start_sequence() #4
  %conv26 = sext i32 %size.0 to i64
  %call27 = call %struct.rtx_def* @assign_stack_temp(i32 51, i64 %conv26, i32 1) #4
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %call27, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %call31 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %14, i64 %conv26) #4
  %15 = load i32* @target_flags, align 4, !tbaa !24
  %and32 = lshr i32 %15, 25
  %16 = and i32 %and32, 1
  %17 = or i32 %16, 4
  %call34 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call31, %struct.rtx_def* null) #4
  %call35 = call %struct.rtx_def* @force_reg(i32 %17, %struct.rtx_def* %call34) #4
  %18 = load %struct.rtx_def*** %reg_map, align 8, !tbaa !62
  %arrayidx38 = getelementptr inbounds %struct.rtx_def** %18, i64 %idxprom
  store %struct.rtx_def* %call35, %struct.rtx_def** %arrayidx38, align 8, !tbaa !7
  %19 = load %struct.rtx_def*** %reg_map, align 8, !tbaa !62
  %arrayidx41 = getelementptr inbounds %struct.rtx_def** %19, i64 %idxprom
  %20 = load %struct.rtx_def** %arrayidx41, align 8, !tbaa !7
  %21 = load i32* @target_flags, align 4, !tbaa !24
  %and42 = lshr i32 %21, 20
  %22 = and i32 %and42, 32
  %23 = add i32 %22, 32
  call void @mark_reg_pointer(%struct.rtx_def* %20, i32 %23) #4
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %call35, i64 0, i32 1, i64 0
  %rtuint47 = bitcast %union.rtunion_def* %arrayidx46 to i32*
  %24 = load i32* %rtuint47, align 4, !tbaa !24
  %conv48 = zext i32 %24 to i64
  %const_equiv_varray = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9
  %25 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %25, i64 0, i32 0
  %26 = load i64* %num_elements, align 8, !tbaa !79
  %cmp49 = icmp ult i64 %conv48, %26
  br i1 %cmp49, label %if.end67, label %if.then51

if.then51:                                        ; preds = %if.end25
  %27 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %cmp53 = icmp eq %struct.varray_head_tag* %27, %25
  %add59 = add i32 %24, 1
  %conv60 = zext i32 %add59 to i64
  %call61 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %25, i64 %conv60) #4
  store %struct.varray_head_tag* %call61, %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br i1 %cmp53, label %if.then64, label %if.end67

if.then64:                                        ; preds = %if.then51
  store %struct.varray_head_tag* %call61, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %.pre1479 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br label %if.end67

if.end67:                                         ; preds = %if.end25, %if.then51, %if.then64
  %28 = phi %struct.varray_head_tag* [ %25, %if.end25 ], [ %call61, %if.then51 ], [ %.pre1479, %if.then64 ]
  %29 = load i32* %rtuint47, align 4, !tbaa !24
  %idxprom71 = zext i32 %29 to i64
  %rtx74 = getelementptr inbounds %struct.varray_head_tag* %28, i64 0, i32 4, i32 0, i64 %idxprom71, i32 0
  store %struct.rtx_def* %call31, %struct.rtx_def** %rtx74, align 8, !tbaa !82
  %age = getelementptr inbounds %struct.varray_head_tag* %28, i64 0, i32 4, i32 0, i64 %idxprom71, i32 1
  store i32 -1, i32* %age, align 4, !tbaa !84
  %call75 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  %insns_at_start = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 2
  %30 = load %struct.rtx_def** %insns_at_start, align 8, !tbaa !73
  %call76 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call75, %struct.rtx_def* %30) #4
  br label %return

lor.lhs.false80:                                  ; preds = %if.else
  %integrating81 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 0
  %31 = load i32* %integrating81, align 4, !tbaa !68
  %tobool82 = icmp eq i32 %31, 0
  br i1 %tobool82, label %if.else158, label %land.lhs.true83

land.lhs.true83:                                  ; preds = %lor.lhs.false80
  %fndecl84 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 1
  %32 = load %union.tree_node** %fndecl84, align 8, !tbaa !60
  %f87 = getelementptr inbounds %union.tree_node* %32, i64 0, i32 0, i32 19, i32 0
  %33 = load %struct.function** %f87, align 8, !tbaa !7
  %internal_arg_pointer88 = getelementptr inbounds %struct.function* %33, i64 0, i32 15
  %34 = load %struct.rtx_def** %internal_arg_pointer88, align 8, !tbaa !101
  %cmp89 = icmp eq %struct.rtx_def* %34, %orig
  br i1 %cmp89, label %if.then91, label %if.else158

if.then91:                                        ; preds = %if.else.if.then91_crit_edge, %land.lhs.true83
  %35 = phi %struct.function* [ %.pre1477, %if.else.if.then91_crit_edge ], [ %33, %land.lhs.true83 ]
  %args_size = getelementptr inbounds %struct.function* %35, i64 0, i32 9
  %36 = load i32* %args_size, align 4, !tbaa !85
  call void @start_sequence() #4
  %conv99 = sext i32 %36 to i64
  %call100 = call %struct.rtx_def* @assign_stack_temp(i32 51, i64 %conv99, i32 1) #4
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %call100, i64 0, i32 1, i64 0
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx103, align 8, !tbaa !7
  %38 = load i32* @target_flags, align 4, !tbaa !24
  %and104 = lshr i32 %38, 25
  %39 = and i32 %and104, 1
  %40 = or i32 %39, 4
  %call107 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %37, %struct.rtx_def* null) #4
  %call108 = call %struct.rtx_def* @force_reg(i32 %40, %struct.rtx_def* %call107) #4
  %41 = load %struct.rtx_def*** %reg_map, align 8, !tbaa !62
  %arrayidx111 = getelementptr inbounds %struct.rtx_def** %41, i64 %idxprom
  store %struct.rtx_def* %call108, %struct.rtx_def** %arrayidx111, align 8, !tbaa !7
  %42 = load %struct.rtx_def*** %reg_map, align 8, !tbaa !62
  %arrayidx114 = getelementptr inbounds %struct.rtx_def** %42, i64 %idxprom
  %43 = load %struct.rtx_def** %arrayidx114, align 8, !tbaa !7
  %44 = load i32* @target_flags, align 4, !tbaa !24
  %and115 = lshr i32 %44, 20
  %45 = and i32 %and115, 32
  %46 = add i32 %45, 32
  call void @mark_reg_pointer(%struct.rtx_def* %43, i32 %46) #4
  %arrayidx120 = getelementptr inbounds %struct.rtx_def* %call108, i64 0, i32 1, i64 0
  %rtuint121 = bitcast %union.rtunion_def* %arrayidx120 to i32*
  %47 = load i32* %rtuint121, align 4, !tbaa !24
  %conv122 = zext i32 %47 to i64
  %const_equiv_varray123 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9
  %48 = load %struct.varray_head_tag** %const_equiv_varray123, align 8, !tbaa !71
  %num_elements124 = getelementptr inbounds %struct.varray_head_tag* %48, i64 0, i32 0
  %49 = load i64* %num_elements124, align 8, !tbaa !79
  %cmp125 = icmp ult i64 %conv122, %49
  br i1 %cmp125, label %if.end144, label %if.then127

if.then127:                                       ; preds = %if.then91
  %50 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %cmp130 = icmp eq %struct.varray_head_tag* %50, %48
  %add136 = add i32 %47, 1
  %conv137 = zext i32 %add136 to i64
  %call138 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %48, i64 %conv137) #4
  store %struct.varray_head_tag* %call138, %struct.varray_head_tag** %const_equiv_varray123, align 8, !tbaa !71
  br i1 %cmp130, label %if.then141, label %if.end144

if.then141:                                       ; preds = %if.then127
  store %struct.varray_head_tag* %call138, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %.pre1478 = load %struct.varray_head_tag** %const_equiv_varray123, align 8, !tbaa !71
  br label %if.end144

if.end144:                                        ; preds = %if.then91, %if.then127, %if.then141
  %51 = phi %struct.varray_head_tag* [ %48, %if.then91 ], [ %call138, %if.then127 ], [ %.pre1478, %if.then141 ]
  %52 = load i32* %rtuint121, align 4, !tbaa !24
  %idxprom148 = zext i32 %52 to i64
  %rtx153 = getelementptr inbounds %struct.varray_head_tag* %51, i64 0, i32 4, i32 0, i64 %idxprom148, i32 0
  store %struct.rtx_def* %37, %struct.rtx_def** %rtx153, align 8, !tbaa !82
  %age154 = getelementptr inbounds %struct.varray_head_tag* %51, i64 0, i32 4, i32 0, i64 %idxprom148, i32 1
  store i32 -1, i32* %age154, align 4, !tbaa !84
  %call155 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  %insns_at_start156 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 2
  %53 = load %struct.rtx_def** %insns_at_start156, align 8, !tbaa !73
  %call157 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call155, %struct.rtx_def* %53) #4
  br label %return

if.else158:                                       ; preds = %lor.lhs.false80, %land.lhs.true83
  %bf.clear161 = and i32 %bf.load, 1073741824
  %tobool162 = icmp eq i32 %bf.clear161, 0
  br i1 %tobool162, label %return, label %if.then163

if.then163:                                       ; preds = %if.else158
  %inline_target = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 11
  %54 = load %struct.rtx_def** %inline_target, align 8, !tbaa !88
  %cmp164 = icmp eq %struct.rtx_def* %54, null
  br i1 %cmp164, label %if.then166, label %if.else174

if.then166:                                       ; preds = %if.then163
  %55 = load i32* @rtx_equal_function_value_matters, align 4, !tbaa !24
  %tobool167 = icmp eq i32 %55, 0
  br i1 %tobool167, label %return, label %if.then168

if.then168:                                       ; preds = %if.then166
  %call172 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear2, i32 %1) #4
  br label %return

if.else174:                                       ; preds = %if.then163
  %56 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load176 = load i32* %56, align 8
  %bf.lshr177 = lshr i32 %bf.load176, 16
  %bf.clear178 = and i32 %bf.lshr177, 255
  %cmp179 = icmp eq i32 %bf.clear178, 51
  %cmp186 = icmp eq i32 %bf.clear2, %bf.clear178
  %or.cond1443 = or i1 %cmp179, %cmp186
  br i1 %or.cond1443, label %return, label %if.then188

if.then188:                                       ; preds = %if.else174
  %call190 = call %struct.rtx_def* @gen_lowpart(i32 %bf.clear2, %struct.rtx_def* %54) #4
  br label %return

if.end194:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %idxprom195 = sext i32 %1 to i64
  %reg_map196 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 4
  %57 = load %struct.rtx_def*** %reg_map196, align 8, !tbaa !62
  %arrayidx197 = getelementptr inbounds %struct.rtx_def** %57, i64 %idxprom195
  %58 = load %struct.rtx_def** %arrayidx197, align 8, !tbaa !7
  %cmp198 = icmp eq %struct.rtx_def* %58, null
  br i1 %cmp198, label %if.then200, label %if.end248

if.then200:                                       ; preds = %if.end194
  %call201 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear2) #4
  %59 = load %struct.rtx_def*** %reg_map196, align 8, !tbaa !62
  %arrayidx204 = getelementptr inbounds %struct.rtx_def** %59, i64 %idxprom195
  store %struct.rtx_def* %call201, %struct.rtx_def** %arrayidx204, align 8, !tbaa !7
  %bf.load205 = load i32* %0, align 8
  %bf.clear207 = and i32 %bf.load205, 134217728
  %60 = load %struct.rtx_def*** %reg_map196, align 8, !tbaa !62
  %arrayidx210 = getelementptr inbounds %struct.rtx_def** %60, i64 %idxprom195
  %61 = load %struct.rtx_def** %arrayidx210, align 8, !tbaa !7
  %62 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 0
  %bf.load211 = load i32* %62, align 8
  %bf.clear212 = and i32 %bf.load211, -134217729
  %bf.set = or i32 %bf.clear212, %bf.clear207
  store i32 %bf.set, i32* %62, align 8
  %bf.load213 = load i32* %0, align 8
  %bf.clear215 = and i32 %bf.load213, 268435456
  %63 = load %struct.rtx_def*** %reg_map196, align 8, !tbaa !62
  %arrayidx218 = getelementptr inbounds %struct.rtx_def** %63, i64 %idxprom195
  %64 = load %struct.rtx_def** %arrayidx218, align 8, !tbaa !7
  %65 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 0
  %bf.load219 = load i32* %65, align 8
  %bf.clear222 = and i32 %bf.load219, -268435457
  %bf.set223 = or i32 %bf.clear222, %bf.clear215
  store i32 %bf.set223, i32* %65, align 8
  %bf.load224 = load i32* %0, align 8
  %bf.clear226 = and i32 %bf.load224, 67108864
  %66 = load %struct.rtx_def*** %reg_map196, align 8, !tbaa !62
  %arrayidx229 = getelementptr inbounds %struct.rtx_def** %66, i64 %idxprom195
  %67 = load %struct.rtx_def** %arrayidx229, align 8, !tbaa !7
  %68 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 0
  %bf.load230 = load i32* %68, align 8
  %bf.clear233 = and i32 %bf.load230, -67108865
  %bf.set234 = or i32 %bf.clear233, %bf.clear226
  store i32 %bf.set234, i32* %68, align 8
  %x_regno_reg_rtx = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 17
  %69 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !77
  %arrayidx236 = getelementptr inbounds %struct.rtx_def** %69, i64 %idxprom195
  %70 = load %struct.rtx_def** %arrayidx236, align 8, !tbaa !7
  %71 = getelementptr inbounds %struct.rtx_def* %70, i64 0, i32 0
  %bf.load237 = load i32* %71, align 8
  %tobool239 = icmp slt i32 %bf.load237, 0
  br i1 %tobool239, label %if.then240, label %if.end248

if.then240:                                       ; preds = %if.then200
  %72 = load %struct.rtx_def*** %reg_map196, align 8, !tbaa !62
  %arrayidx243 = getelementptr inbounds %struct.rtx_def** %72, i64 %idxprom195
  %73 = load %struct.rtx_def** %arrayidx243, align 8, !tbaa !7
  %regno_pointer_align = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 16
  %74 = load i8** %regno_pointer_align, align 8, !tbaa !75
  %arrayidx245 = getelementptr inbounds i8* %74, i64 %idxprom195
  %75 = load i8* %arrayidx245, align 1, !tbaa !33
  %conv246 = zext i8 %75 to i32
  call void @mark_reg_pointer(%struct.rtx_def* %73, i32 %conv246) #4
  br label %if.end248

if.end248:                                        ; preds = %if.then200, %if.then240, %if.end194
  %76 = load %struct.rtx_def*** %reg_map196, align 8, !tbaa !62
  %arrayidx251 = getelementptr inbounds %struct.rtx_def** %76, i64 %idxprom195
  %77 = load %struct.rtx_def** %arrayidx251, align 8, !tbaa !7
  br label %return

sw.bb252:                                         ; preds = %if.end
  %fld253 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1
  %rtx255 = bitcast [1 x %union.rtunion_def]* %fld253 to %struct.rtx_def**
  %78 = load %struct.rtx_def** %rtx255, align 8, !tbaa !7
  %call256 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %78, %struct.inline_remap* %map, i32 %for_lhs)
  %bf.load257 = load i32* %0, align 8
  %bf.lshr258 = lshr i32 %bf.load257, 16
  %bf.clear259 = and i32 %bf.lshr258, 255
  %79 = load %struct.rtx_def** %rtx255, align 8, !tbaa !7
  %80 = getelementptr inbounds %struct.rtx_def* %79, i64 0, i32 0
  %bf.load263 = load i32* %80, align 8
  %bf.lshr264 = lshr i32 %bf.load263, 16
  %bf.clear265 = and i32 %bf.lshr264, 255
  %arrayidx267 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 1
  %rtuint268 = bitcast %union.rtunion_def* %arrayidx267 to i32*
  %81 = load i32* %rtuint268, align 4, !tbaa !24
  %call269 = call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear259, %struct.rtx_def* %call256, i32 %bf.clear265, i32 %81) #4
  br label %return

sw.bb270:                                         ; preds = %if.end
  %fld271 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1
  %rtx273 = bitcast [1 x %union.rtunion_def]* %fld271 to %struct.rtx_def**
  %82 = load %struct.rtx_def** %rtx273, align 8, !tbaa !7
  %call274 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %82, %struct.inline_remap* %map, i32 %for_lhs)
  %arrayidx276 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 2
  %rttree = bitcast %union.rtunion_def* %arrayidx276 to %union.tree_node**
  %83 = load %union.tree_node** %rttree, align 8, !tbaa !7
  %call277 = call %struct.rtx_def* @gen_rtx_fmt_eit(i32 70, i32 %bf.clear2, %struct.rtx_def* %call274, i32 0, %union.tree_node* %83) #4
  %arrayidx279 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 1
  %rtuint280 = bitcast %union.rtunion_def* %arrayidx279 to i32*
  %84 = load i32* %rtuint280, align 4, !tbaa !24
  %idxprom281 = sext i32 %84 to i64
  %reg_map282 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 4
  %85 = load %struct.rtx_def*** %reg_map282, align 8, !tbaa !62
  %arrayidx283 = getelementptr inbounds %struct.rtx_def** %85, i64 %idxprom281
  %86 = load %struct.rtx_def** %arrayidx283, align 8, !tbaa !7
  %tobool284 = icmp eq %struct.rtx_def* %86, null
  br i1 %tobool284, label %if.else292, label %if.then285

if.then285:                                       ; preds = %sw.bb270
  %arrayidx290 = getelementptr inbounds %struct.rtx_def* %86, i64 0, i32 1, i64 0
  %rtuint291 = bitcast %union.rtunion_def* %arrayidx290 to i32*
  %87 = load i32* %rtuint291, align 4, !tbaa !24
  br label %if.end361

if.else292:                                       ; preds = %sw.bb270
  %cmp293 = icmp sgt i32 %84, 57
  br i1 %cmp293, label %if.then295, label %if.end361

if.then295:                                       ; preds = %if.else292
  %88 = load %struct.rtx_def** %rtx273, align 8, !tbaa !7
  %89 = getelementptr inbounds %struct.rtx_def* %88, i64 0, i32 0
  %bf.load299 = load i32* %89, align 8
  %bf.lshr300 = lshr i32 %bf.load299, 16
  %bf.clear301 = and i32 %bf.lshr300, 255
  %call302 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear301) #4
  %90 = load %struct.rtx_def*** %reg_map282, align 8, !tbaa !62
  %arrayidx305 = getelementptr inbounds %struct.rtx_def** %90, i64 %idxprom281
  store %struct.rtx_def* %call302, %struct.rtx_def** %arrayidx305, align 8, !tbaa !7
  %bf.load306 = load i32* %89, align 8
  %bf.clear308 = and i32 %bf.load306, 134217728
  %91 = load %struct.rtx_def*** %reg_map282, align 8, !tbaa !62
  %arrayidx311 = getelementptr inbounds %struct.rtx_def** %91, i64 %idxprom281
  %92 = load %struct.rtx_def** %arrayidx311, align 8, !tbaa !7
  %93 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 0
  %bf.load312 = load i32* %93, align 8
  %bf.clear315 = and i32 %bf.load312, -134217729
  %bf.set316 = or i32 %bf.clear315, %bf.clear308
  store i32 %bf.set316, i32* %93, align 8
  %bf.load317 = load i32* %89, align 8
  %bf.clear319 = and i32 %bf.load317, 268435456
  %94 = load %struct.rtx_def*** %reg_map282, align 8, !tbaa !62
  %arrayidx322 = getelementptr inbounds %struct.rtx_def** %94, i64 %idxprom281
  %95 = load %struct.rtx_def** %arrayidx322, align 8, !tbaa !7
  %96 = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 0
  %bf.load323 = load i32* %96, align 8
  %bf.clear326 = and i32 %bf.load323, -268435457
  %bf.set327 = or i32 %bf.clear326, %bf.clear319
  store i32 %bf.set327, i32* %96, align 8
  %bf.load328 = load i32* %89, align 8
  %bf.clear330 = and i32 %bf.load328, 67108864
  %97 = load %struct.rtx_def*** %reg_map282, align 8, !tbaa !62
  %arrayidx333 = getelementptr inbounds %struct.rtx_def** %97, i64 %idxprom281
  %98 = load %struct.rtx_def** %arrayidx333, align 8, !tbaa !7
  %99 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 0
  %bf.load334 = load i32* %99, align 8
  %bf.clear337 = and i32 %bf.load334, -67108865
  %bf.set338 = or i32 %bf.clear337, %bf.clear330
  store i32 %bf.set338, i32* %99, align 8
  %x_regno_reg_rtx340 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 17
  %100 = load %struct.rtx_def*** %x_regno_reg_rtx340, align 8, !tbaa !77
  %arrayidx341 = getelementptr inbounds %struct.rtx_def** %100, i64 %idxprom281
  %101 = load %struct.rtx_def** %arrayidx341, align 8, !tbaa !7
  %102 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 0
  %bf.load342 = load i32* %102, align 8
  %tobool344 = icmp slt i32 %bf.load342, 0
  br i1 %tobool344, label %if.then345, label %if.end353

if.then345:                                       ; preds = %if.then295
  %103 = load %struct.rtx_def*** %reg_map282, align 8, !tbaa !62
  %arrayidx348 = getelementptr inbounds %struct.rtx_def** %103, i64 %idxprom281
  %104 = load %struct.rtx_def** %arrayidx348, align 8, !tbaa !7
  %regno_pointer_align350 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 16
  %105 = load i8** %regno_pointer_align350, align 8, !tbaa !75
  %arrayidx351 = getelementptr inbounds i8* %105, i64 %idxprom281
  %106 = load i8* %arrayidx351, align 1, !tbaa !33
  %conv352 = zext i8 %106 to i32
  call void @mark_reg_pointer(%struct.rtx_def* %104, i32 %conv352) #4
  br label %if.end353

if.end353:                                        ; preds = %if.then345, %if.then295
  %107 = load %struct.rtx_def*** %reg_map282, align 8, !tbaa !62
  %arrayidx356 = getelementptr inbounds %struct.rtx_def** %107, i64 %idxprom281
  %108 = load %struct.rtx_def** %arrayidx356, align 8, !tbaa !7
  %arrayidx358 = getelementptr inbounds %struct.rtx_def* %108, i64 0, i32 1, i64 0
  %rtuint359 = bitcast %union.rtunion_def* %arrayidx358 to i32*
  %109 = load i32* %rtuint359, align 4, !tbaa !24
  br label %if.end361

if.end361:                                        ; preds = %if.else292, %if.end353, %if.then285
  %regno.0 = phi i32 [ %87, %if.then285 ], [ %109, %if.end353 ], [ %84, %if.else292 ]
  %arrayidx363 = getelementptr inbounds %struct.rtx_def* %call277, i64 0, i32 1, i64 1
  %rtuint364 = bitcast %union.rtunion_def* %arrayidx363 to i32*
  store i32 %regno.0, i32* %rtuint364, align 4, !tbaa !24
  br label %return

sw.bb365:                                         ; preds = %if.end, %if.end
  %arrayidx367 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 0
  %rtx368 = bitcast %union.rtunion_def* %arrayidx367 to %struct.rtx_def**
  %110 = load %struct.rtx_def** %rtx368, align 8, !tbaa !7
  %cmp369 = icmp eq i32 %bf.clear, 49
  %conv370 = zext i1 %cmp369 to i32
  %call371 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %110, %struct.inline_remap* %map, i32 %conv370)
  %111 = getelementptr inbounds %struct.rtx_def* %call371, i64 0, i32 0
  %bf.load372 = load i32* %111, align 8
  %bf.clear373 = and i32 %bf.load372, 65535
  %cmp374 = icmp eq i32 %bf.clear373, 63
  br i1 %cmp374, label %land.lhs.true376, label %if.end388

land.lhs.true376:                                 ; preds = %sw.bb365
  %112 = load %struct.rtx_def** %rtx368, align 8, !tbaa !7
  %113 = getelementptr inbounds %struct.rtx_def* %112, i64 0, i32 0
  %bf.load380 = load i32* %113, align 8
  %bf.clear381 = and i32 %bf.load380, 65535
  %cmp382 = icmp eq i32 %bf.clear381, 63
  br i1 %cmp382, label %if.end388, label %if.then384

if.then384:                                       ; preds = %land.lhs.true376
  %arrayidx386 = getelementptr inbounds %struct.rtx_def* %call371, i64 0, i32 1, i64 0
  %rtx387 = bitcast %union.rtunion_def* %arrayidx386 to %struct.rtx_def**
  %114 = load %struct.rtx_def** %rtx387, align 8, !tbaa !7
  br label %if.end388

if.end388:                                        ; preds = %land.lhs.true376, %if.then384, %sw.bb365
  %copy.0 = phi %struct.rtx_def* [ %114, %if.then384 ], [ %call371, %land.lhs.true376 ], [ %call371, %sw.bb365 ]
  %call389 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 %bf.clear, i32 0, %struct.rtx_def* %copy.0) #4
  br label %return

sw.bb390:                                         ; preds = %if.end
  %arrayidx392 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx392 to i32*
  %115 = load i32* %rtint, align 4, !tbaa !24
  %cmp393 = icmp eq i32 %115, -88
  br i1 %cmp393, label %sw.bb397, label %sw.epilog

sw.bb397:                                         ; preds = %sw.bb390, %if.end
  %bf.clear400 = and i32 %bf.load, 268435456
  %arrayidx402 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 5
  %rtint403 = bitcast %union.rtunion_def* %arrayidx402 to i32*
  %116 = load i32* %rtint403, align 4, !tbaa !24
  %idxprom.i1455 = sext i32 %116 to i64
  %label_map.i1456 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 5
  %117 = load %struct.rtx_def*** %label_map.i1456, align 8, !tbaa !1
  %arrayidx.i1457 = getelementptr inbounds %struct.rtx_def** %117, i64 %idxprom.i1455
  %118 = load %struct.rtx_def** %arrayidx.i1457, align 8, !tbaa !7
  %cmp.i1458 = icmp eq %struct.rtx_def* %118, null
  br i1 %cmp.i1458, label %if.then.i1461, label %get_label_from_map.exit1463

if.then.i1461:                                    ; preds = %sw.bb397
  %call.i1459 = call %struct.rtx_def* @gen_label_rtx() #4
  %119 = load %struct.rtx_def*** %label_map.i1456, align 8, !tbaa !1
  %arrayidx3.i1460 = getelementptr inbounds %struct.rtx_def** %119, i64 %idxprom.i1455
  store %struct.rtx_def* %call.i1459, %struct.rtx_def** %arrayidx3.i1460, align 8, !tbaa !7
  br label %get_label_from_map.exit1463

get_label_from_map.exit1463:                      ; preds = %sw.bb397, %if.then.i1461
  %x.0.i1462 = phi %struct.rtx_def* [ %call.i1459, %if.then.i1461 ], [ %118, %sw.bb397 ]
  %120 = getelementptr inbounds %struct.rtx_def* %x.0.i1462, i64 0, i32 0
  %bf.load405 = load i32* %120, align 8
  %bf.clear408 = and i32 %bf.load405, -268435457
  %bf.set409 = or i32 %bf.clear408, %bf.clear400
  store i32 %bf.set409, i32* %120, align 8
  %121 = load i32* %rtint403, align 4, !tbaa !24
  %idxprom.i1446 = sext i32 %121 to i64
  %122 = load %struct.rtx_def*** %label_map.i1456, align 8, !tbaa !1
  %arrayidx.i1448 = getelementptr inbounds %struct.rtx_def** %122, i64 %idxprom.i1446
  %123 = load %struct.rtx_def** %arrayidx.i1448, align 8, !tbaa !7
  %cmp.i1449 = icmp eq %struct.rtx_def* %123, null
  br i1 %cmp.i1449, label %if.then.i1452, label %return

if.then.i1452:                                    ; preds = %get_label_from_map.exit1463
  %call.i1450 = call %struct.rtx_def* @gen_label_rtx() #4
  %124 = load %struct.rtx_def*** %label_map.i1456, align 8, !tbaa !1
  %arrayidx3.i1451 = getelementptr inbounds %struct.rtx_def** %124, i64 %idxprom.i1446
  store %struct.rtx_def* %call.i1450, %struct.rtx_def** %arrayidx3.i1451, align 8, !tbaa !7
  br label %return

sw.bb414:                                         ; preds = %if.end
  %bf.clear417 = and i32 %bf.load, 134217728
  %tobool418 = icmp eq i32 %bf.clear417, 0
  %arrayidx423 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 0
  %rtx424 = bitcast %union.rtunion_def* %arrayidx423 to %struct.rtx_def**
  %125 = load %struct.rtx_def** %rtx424, align 8, !tbaa !7
  br i1 %tobool418, label %cond.false, label %cond.end

cond.false:                                       ; preds = %sw.bb414
  %arrayidx426 = getelementptr inbounds %struct.rtx_def* %125, i64 0, i32 1, i64 5
  %rtint427 = bitcast %union.rtunion_def* %arrayidx426 to i32*
  %126 = load i32* %rtint427, align 4, !tbaa !24
  %idxprom.i = sext i32 %126 to i64
  %label_map.i = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 5
  %127 = load %struct.rtx_def*** %label_map.i, align 8, !tbaa !1
  %arrayidx.i = getelementptr inbounds %struct.rtx_def** %127, i64 %idxprom.i
  %128 = load %struct.rtx_def** %arrayidx.i, align 8, !tbaa !7
  %cmp.i = icmp eq %struct.rtx_def* %128, null
  br i1 %cmp.i, label %if.then.i, label %cond.end

if.then.i:                                        ; preds = %cond.false
  %call.i = call %struct.rtx_def* @gen_label_rtx() #4
  %129 = load %struct.rtx_def*** %label_map.i, align 8, !tbaa !1
  %arrayidx3.i = getelementptr inbounds %struct.rtx_def** %129, i64 %idxprom.i
  store %struct.rtx_def* %call.i, %struct.rtx_def** %arrayidx3.i, align 8, !tbaa !7
  br label %cond.end

cond.end:                                         ; preds = %if.then.i, %cond.false, %sw.bb414
  %cond429 = phi %struct.rtx_def* [ %125, %sw.bb414 ], [ %call.i, %if.then.i ], [ %128, %cond.false ]
  %call430 = call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %bf.clear2, %struct.rtx_def* %cond429) #4
  %bf.load431 = load i32* %0, align 8
  %bf.clear433 = and i32 %bf.load431, 268435456
  %130 = getelementptr inbounds %struct.rtx_def* %call430, i64 0, i32 0
  %bf.load434 = load i32* %130, align 8
  %bf.clear437 = and i32 %bf.load434, -268435457
  %bf.set438 = or i32 %bf.clear437, %bf.clear433
  store i32 %bf.set438, i32* %130, align 8
  %bf.load439 = load i32* %0, align 8
  %bf.clear441 = and i32 %bf.load439, 134217728
  %tobool442 = icmp eq i32 %bf.clear441, 0
  br i1 %tobool442, label %land.end462, label %land.rhs

land.rhs:                                         ; preds = %cond.end
  %arrayidx444 = getelementptr inbounds %struct.rtx_def* %call430, i64 0, i32 1, i64 0
  %rtx445 = bitcast %union.rtunion_def* %arrayidx444 to %struct.rtx_def**
  %131 = load %struct.rtx_def** %rtx445, align 8, !tbaa !7
  %arrayidx447 = getelementptr inbounds %struct.rtx_def* %131, i64 0, i32 1, i64 5
  %rtint448 = bitcast %union.rtunion_def* %arrayidx447 to i32*
  %132 = load i32* %rtint448, align 4, !tbaa !24
  %call449 = call i32 @get_first_label_num() #4
  %cmp450 = icmp slt i32 %132, %call449
  br i1 %cmp450, label %land.end462, label %land.rhs452

land.rhs452:                                      ; preds = %land.rhs
  %133 = load %struct.rtx_def** %rtx445, align 8, !tbaa !7
  %arrayidx457 = getelementptr inbounds %struct.rtx_def* %133, i64 0, i32 1, i64 5
  %rtint458 = bitcast %union.rtunion_def* %arrayidx457 to i32*
  %134 = load i32* %rtint458, align 4, !tbaa !24
  %call459 = call i32 @max_label_num() #4
  %phitmp = icmp sge i32 %134, %call459
  br label %land.end462

land.end462:                                      ; preds = %land.rhs452, %land.rhs, %cond.end
  %135 = phi i1 [ false, %cond.end ], [ true, %land.rhs ], [ %phitmp, %land.rhs452 ]
  %land.ext = zext i1 %135 to i32
  %bf.load463 = load i32* %130, align 8
  %bf.shl465 = shl nuw nsw i32 %land.ext, 27
  %bf.clear466 = and i32 %bf.load463, -134217729
  %bf.set467 = or i32 %bf.clear466, %bf.shl465
  store i32 %bf.set467, i32* %130, align 8
  %bf.load468 = load i32* %0, align 8
  %bf.clear470 = and i32 %bf.load468, 134217728
  %tobool471 = icmp eq i32 %bf.clear470, 0
  %brmerge = or i1 %tobool471, %135
  br i1 %brmerge, label %return, label %if.then477

if.then477:                                       ; preds = %land.end462
  %136 = load %struct.function** @cfun, align 8, !tbaa !7
  %x_function_call_count = getelementptr inbounds %struct.function* %136, i64 0, i32 18
  %137 = load i32* %x_function_call_count, align 4, !tbaa !103
  %inc = add nsw i32 %137, 1
  store i32 %inc, i32* %x_function_call_count, align 4, !tbaa !103
  br label %return

sw.bb480:                                         ; preds = %if.end
  %bf.clear483 = and i32 %bf.load, 67108864
  %tobool484 = icmp eq i32 %bf.clear483, 0
  br i1 %tobool484, label %return, label %if.then485

if.then485:                                       ; preds = %sw.bb480
  %138 = load %struct.function** @inlining, align 8, !tbaa !7
  %tobool487 = icmp ne %struct.function* %138, null
  %139 = load %struct.function** @cfun, align 8, !tbaa !7
  %cond491 = select i1 %tobool487, %struct.function* %138, %struct.function* %139
  %call492 = call %struct.rtx_def* @get_pool_constant_for_function(%struct.function* %cond491, %struct.rtx_def* %orig) #4
  %call493 = call i32 @get_pool_mode_for_function(%struct.function* %cond491, %struct.rtx_def* %orig) #4
  %140 = load %struct.function** @inlining, align 8, !tbaa !7
  %tobool494 = icmp eq %struct.function* %140, null
  br i1 %tobool494, label %if.else502, label %if.then495

if.then495:                                       ; preds = %if.then485
  %call497 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %call492, %struct.inline_remap* %map, i32 0)
  %call498 = call %struct.rtx_def* @force_const_mem(i32 %call493, %struct.rtx_def* %call497) #4
  %arrayidx500 = getelementptr inbounds %struct.rtx_def* %call498, i64 0, i32 1, i64 0
  %rtx501 = bitcast %union.rtunion_def* %arrayidx500 to %struct.rtx_def**
  %141 = load %struct.rtx_def** %rtx501, align 8, !tbaa !7
  br label %return

if.else502:                                       ; preds = %if.then485
  %142 = getelementptr inbounds %struct.rtx_def* %call492, i64 0, i32 0
  %bf.load503 = load i32* %142, align 8
  %bf.clear504 = and i32 %bf.load503, 65535
  %cmp505 = icmp eq i32 %bf.clear504, 67
  br i1 %cmp505, label %if.then507, label %return

if.then507:                                       ; preds = %if.else502
  %bf.load508 = load i32* %0, align 8
  %bf.lshr509 = lshr i32 %bf.load508, 16
  %bf.clear510 = and i32 %bf.lshr509, 255
  %call511 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %call492, %struct.inline_remap* %map, i32 %for_lhs)
  %call512 = call %struct.rtx_def* @force_const_mem(i32 %bf.clear510, %struct.rtx_def* %call511) #4
  %arrayidx514 = getelementptr inbounds %struct.rtx_def* %call512, i64 0, i32 1, i64 0
  %rtx515 = bitcast %union.rtunion_def* %arrayidx514 to %struct.rtx_def**
  %143 = load %struct.rtx_def** %rtx515, align 8, !tbaa !7
  br label %return

sw.bb519:                                         ; preds = %if.end
  %idxprom5231442 = zext i32 %bf.clear2 to i64
  %arrayidx524 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom5231442
  %144 = load i32* %arrayidx524, align 4, !tbaa !33
  %cmp525 = icmp eq i32 %144, 2
  %rtwint = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 1, i32 0
  br i1 %cmp525, label %do.body, label %if.else535

do.body:                                          ; preds = %sw.bb519
  %tmpcast = bitcast i64* %rtwint to %struct.realvaluetype*
  %call534 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %tmpcast, i32 %bf.clear2) #4
  br label %return

if.else535:                                       ; preds = %sw.bb519
  %145 = load i64* %rtwint, align 8, !tbaa !104
  %rtwint541 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 2, i32 0
  %146 = load i64* %rtwint541, align 8, !tbaa !104
  %call542 = call %struct.rtx_def* @immed_double_const(i64 %145, i64 %146, i32 0) #4
  br label %return

sw.bb543:                                         ; preds = %if.end
  %bf.clear546 = and i32 %bf.load, 1073741824
  %tobool547 = icmp eq i32 %bf.clear546, 0
  br i1 %tobool547, label %sw.epilog, label %if.then548

if.then548:                                       ; preds = %sw.bb543
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 2202, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.copy_rtx_and_substitute, i64 0, i64 0)) #7
  unreachable

sw.bb550:                                         ; preds = %if.end
  %orig_asm_operands_vector = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 12
  %147 = load %struct.rtvec_def** %orig_asm_operands_vector, align 8, !tbaa !105
  %arrayidx552 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 3
  %rtvec = bitcast %union.rtunion_def* %arrayidx552 to %struct.rtvec_def**
  %148 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !7
  %cmp553 = icmp eq %struct.rtvec_def* %147, %148
  br i1 %cmp553, label %if.then555, label %sw.epilog

if.then555:                                       ; preds = %sw.bb550
  %fld551 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1
  %call556 = call %struct.rtx_def* @rtx_alloc(i32 41) #4
  %bf.load557 = load i32* %0, align 8
  %bf.clear559 = and i32 %bf.load557, 134217728
  %149 = getelementptr inbounds %struct.rtx_def* %call556, i64 0, i32 0
  %bf.load560 = load i32* %149, align 8
  %bf.clear563 = and i32 %bf.load560, -134217729
  %bf.set564 = or i32 %bf.clear563, %bf.clear559
  store i32 %bf.set564, i32* %149, align 8
  %bf.load565 = load i32* %0, align 8
  %bf.clear567 = and i32 %bf.load565, 16711680
  %bf.clear571 = and i32 %bf.set564, -16711681
  %bf.set572 = or i32 %bf.clear571, %bf.clear567
  store i32 %bf.set572, i32* %149, align 8
  %rtstr = bitcast [1 x %union.rtunion_def]* %fld551 to i8**
  %150 = load i8** %rtstr, align 8, !tbaa !7
  %151 = getelementptr inbounds %struct.rtx_def* %call556, i64 0, i32 1, i64 0, i32 0
  %.c1437 = ptrtoint i8* %150 to i64
  store i64 %.c1437, i64* %151, align 8, !tbaa !7
  %arrayidx579 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 1
  %rtstr580 = bitcast %union.rtunion_def* %arrayidx579 to i8**
  %152 = load i8** %rtstr580, align 8, !tbaa !7
  %153 = getelementptr inbounds %struct.rtx_def* %call556, i64 0, i32 1, i64 1, i32 0
  %.c1438 = ptrtoint i8* %152 to i64
  store i64 %.c1438, i64* %153, align 8, !tbaa !7
  %arrayidx585 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 2
  %rtint586 = bitcast %union.rtunion_def* %arrayidx585 to i32*
  %154 = load i32* %rtint586, align 4, !tbaa !24
  %arrayidx588 = getelementptr inbounds %struct.rtx_def* %call556, i64 0, i32 1, i64 2
  %rtint589 = bitcast %union.rtunion_def* %arrayidx588 to i32*
  store i32 %154, i32* %rtint589, align 4, !tbaa !24
  %copy_asm_operands_vector = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 13
  %155 = load %struct.rtvec_def** %copy_asm_operands_vector, align 8, !tbaa !106
  %156 = getelementptr inbounds %struct.rtx_def* %call556, i64 0, i32 1, i64 3, i32 0
  %.c1439 = ptrtoint %struct.rtvec_def* %155 to i64
  store i64 %.c1439, i64* %156, align 8, !tbaa !7
  %copy_asm_constraints_vector = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 14
  %157 = load %struct.rtvec_def** %copy_asm_constraints_vector, align 8, !tbaa !107
  %158 = getelementptr inbounds %struct.rtx_def* %call556, i64 0, i32 1, i64 4, i32 0
  %.c1440 = ptrtoint %struct.rtvec_def* %157 to i64
  store i64 %.c1440, i64* %158, align 8, !tbaa !7
  %arrayidx597 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 5
  %rtstr598 = bitcast %union.rtunion_def* %arrayidx597 to i8**
  %159 = load i8** %rtstr598, align 8, !tbaa !7
  %160 = getelementptr inbounds %struct.rtx_def* %call556, i64 0, i32 1, i64 5, i32 0
  %.c1441 = ptrtoint i8* %159 to i64
  store i64 %.c1441, i64* %160, align 8, !tbaa !7
  %arrayidx603 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 6
  %rtint604 = bitcast %union.rtunion_def* %arrayidx603 to i32*
  %161 = load i32* %rtint604, align 4, !tbaa !24
  %arrayidx606 = getelementptr inbounds %struct.rtx_def* %call556, i64 0, i32 1, i64 6
  %rtint607 = bitcast %union.rtunion_def* %arrayidx606 to i32*
  store i32 %161, i32* %rtint607, align 4, !tbaa !24
  br label %return

sw.bb609:                                         ; preds = %if.end
  %fld611 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1
  %rtx613 = bitcast [1 x %union.rtunion_def]* %fld611 to %struct.rtx_def**
  %162 = load %struct.rtx_def** %rtx613, align 8, !tbaa !7
  %163 = getelementptr inbounds %struct.rtx_def* %162, i64 0, i32 0
  %bf.load614 = load i32* %163, align 8
  %bf.lshr615 = lshr i32 %bf.load614, 16
  %bf.clear616 = and i32 %bf.lshr615, 255
  %arrayidx621 = getelementptr inbounds %struct.rtx_def* %162, i64 0, i32 1, i64 0
  %rtx622 = bitcast %union.rtunion_def* %arrayidx621 to %struct.rtx_def**
  %164 = load %struct.rtx_def** %rtx622, align 8, !tbaa !7
  %call623 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %164, %struct.inline_remap* %map, i32 0)
  %call624 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear616, %struct.rtx_def* %call623) #4
  %165 = load %struct.rtx_def** %rtx613, align 8, !tbaa !7
  %166 = getelementptr inbounds %struct.rtx_def* %165, i64 0, i32 0
  %bf.load628 = load i32* %166, align 8
  %bf.clear630 = and i32 %bf.load628, 134217728
  %167 = getelementptr inbounds %struct.rtx_def* %call624, i64 0, i32 0
  %bf.load631 = load i32* %167, align 8
  %bf.clear634 = and i32 %bf.load631, -134217729
  %bf.set635 = or i32 %bf.clear634, %bf.clear630
  store i32 %bf.set635, i32* %167, align 8
  %168 = load %struct.rtx_def** %rtx613, align 8, !tbaa !7
  %169 = getelementptr inbounds %struct.rtx_def* %168, i64 0, i32 0
  %bf.load639 = load i32* %169, align 8
  %bf.clear641 = and i32 %bf.load639, 268435456
  %bf.clear645 = and i32 %bf.set635, -268435457
  %bf.set646 = or i32 %bf.clear645, %bf.clear641
  store i32 %bf.set646, i32* %167, align 8
  %170 = load %struct.rtx_def** %rtx613, align 8, !tbaa !7
  %171 = getelementptr inbounds %struct.rtx_def* %170, i64 0, i32 0
  %bf.load650 = load i32* %171, align 8
  %bf.lshr651 = and i32 %bf.load650, -2147483648
  %bf.clear655 = and i32 %bf.set646, 2147483647
  %bf.set656 = or i32 %bf.clear655, %bf.lshr651
  store i32 %bf.set656, i32* %167, align 8
  %172 = load %struct.rtx_def** %rtx613, align 8, !tbaa !7
  %173 = getelementptr inbounds %struct.rtx_def* %172, i64 0, i32 0
  %bf.load660 = load i32* %173, align 8
  %bf.clear662 = and i32 %bf.load660, 67108864
  %bf.clear666 = and i32 %bf.set656, -67108865
  %bf.set667 = or i32 %bf.clear666, %bf.clear662
  store i32 %bf.set667, i32* %167, align 8
  %174 = load %struct.rtx_def** %rtx613, align 8, !tbaa !7
  %175 = getelementptr inbounds %struct.rtx_def* %174, i64 0, i32 0
  %bf.load671 = load i32* %175, align 8
  %bf.clear673 = and i32 %bf.load671, 16777216
  %bf.clear677 = and i32 %bf.set667, -16777217
  %bf.set678 = or i32 %bf.clear677, %bf.clear673
  store i32 %bf.set678, i32* %167, align 8
  %176 = load %struct.rtx_def** %rtx613, align 8, !tbaa !7
  %arrayidx683 = getelementptr inbounds %struct.rtx_def* %176, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx683 to %struct.mem_attrs**
  %177 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !7
  %178 = getelementptr inbounds %struct.rtx_def* %call624, i64 0, i32 1, i64 1, i32 0
  %.c1430 = ptrtoint %struct.mem_attrs* %177 to i64
  store i64 %.c1430, i64* %178, align 8, !tbaa !7
  %bf.load687 = load i32* %0, align 8
  %bf.lshr688 = lshr i32 %bf.load687, 16
  %bf.clear689 = and i32 %bf.lshr688, 255
  %arrayidx691 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 1
  %rtx692 = bitcast %union.rtunion_def* %arrayidx691 to %struct.rtx_def**
  %179 = load %struct.rtx_def** %rtx692, align 8, !tbaa !7
  %call693 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %179, %struct.inline_remap* %map, i32 0)
  %call694 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 50, i32 %bf.clear689, %struct.rtx_def* %call624, %struct.rtx_def* %call693) #4
  br label %return

sw.bb695:                                         ; preds = %if.end
  %fld696 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1
  %rtx698 = bitcast [1 x %union.rtunion_def]* %fld696 to %struct.rtx_def**
  %180 = load %struct.rtx_def** %rtx698, align 8, !tbaa !7
  %181 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !7
  %cmp699 = icmp eq %struct.rtx_def* %180, %181
  %182 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8
  %cmp705 = icmp eq %struct.rtx_def* %180, %182
  %or.cond1444 = or i1 %cmp699, %cmp705
  br i1 %or.cond1444, label %if.then707, label %if.else755

if.then707:                                       ; preds = %sw.bb695
  %call711 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %180, %struct.inline_remap* %map, i32 %for_lhs)
  %183 = load %struct.rtx_def** %rtx698, align 8, !tbaa !7
  %arrayidx716 = getelementptr inbounds %struct.rtx_def* %183, i64 0, i32 1, i64 0
  %rtuint717 = bitcast %union.rtunion_def* %arrayidx716 to i32*
  %184 = load i32* %rtuint717, align 4, !tbaa !24
  %idxprom718 = zext i32 %184 to i64
  %reg_map719 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 4
  %185 = load %struct.rtx_def*** %reg_map719, align 8, !tbaa !62
  %arrayidx720 = getelementptr inbounds %struct.rtx_def** %185, i64 %idxprom718
  %186 = load %struct.rtx_def** %arrayidx720, align 8, !tbaa !7
  %arrayidx722 = getelementptr inbounds %struct.rtx_def* %186, i64 0, i32 1, i64 0
  %rtuint723 = bitcast %union.rtunion_def* %arrayidx722 to i32*
  %187 = load i32* %rtuint723, align 4, !tbaa !24
  %idxprom724 = zext i32 %187 to i64
  %const_equiv_varray725 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9
  %188 = load %struct.varray_head_tag** %const_equiv_varray725, align 8, !tbaa !71
  %rtx729 = getelementptr inbounds %struct.varray_head_tag* %188, i64 0, i32 4, i32 0, i64 %idxprom724, i32 0
  %189 = load %struct.rtx_def** %rtx729, align 8, !tbaa !82
  %190 = getelementptr inbounds %struct.rtx_def* %189, i64 0, i32 0
  %bf.load730 = load i32* %190, align 8
  %bf.clear731 = and i32 %bf.load730, 65535
  %cmp732 = icmp eq i32 %bf.clear731, 61
  br i1 %cmp732, label %cond.end742, label %cond.false735

cond.false735:                                    ; preds = %if.then707
  %arrayidx737 = getelementptr inbounds %struct.rtx_def* %189, i64 0, i32 1, i64 1
  %rtx738 = bitcast %union.rtunion_def* %arrayidx737 to %struct.rtx_def**
  %191 = load %struct.rtx_def** %rtx738, align 8, !tbaa !7
  %rtwint741 = getelementptr inbounds %struct.rtx_def* %191, i64 0, i32 1, i64 0, i32 0
  %192 = load i64* %rtwint741, align 8, !tbaa !104
  br label %cond.end742

cond.end742:                                      ; preds = %if.then707, %cond.false735
  %cond743 = phi i64 [ %192, %cond.false735 ], [ 0, %if.then707 ]
  %arrayidx748 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 1
  %rtx749 = bitcast %union.rtunion_def* %arrayidx748 to %struct.rtx_def**
  %193 = load %struct.rtx_def** %rtx749, align 8, !tbaa !7
  %call750 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %193, %struct.inline_remap* %map, i32 0)
  %sub751 = sub nsw i64 0, %cond743
  %call752 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call750, i64 %sub751) #4
  %call753 = call %struct.rtx_def* @force_operand(%struct.rtx_def* %call752, %struct.rtx_def* null) #4
  %call754 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %183, %struct.rtx_def* %call753) #4
  br label %return

if.else755:                                       ; preds = %sw.bb695
  %call759 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %180, %struct.inline_remap* %map, i32 1)
  %arrayidx761 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 1
  %rtx762 = bitcast %union.rtunion_def* %arrayidx761 to %struct.rtx_def**
  %194 = load %struct.rtx_def** %rtx762, align 8, !tbaa !7
  %call763 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %194, %struct.inline_remap* %map, i32 0)
  %call764 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call759, %struct.rtx_def* %call763) #4
  br label %return

sw.bb765:                                         ; preds = %if.end
  %195 = load %struct.function** @inlining, align 8, !tbaa !7
  %tobool766 = icmp eq %struct.function* %195, null
  br i1 %tobool766, label %sw.bb765.if.end838_crit_edge, label %land.lhs.true767

sw.bb765.if.end838_crit_edge:                     ; preds = %sw.bb765
  %fld839.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1
  %rtx841.phi.trans.insert = bitcast [1 x %union.rtunion_def]* %fld839.phi.trans.insert to %struct.rtx_def**
  %.pre1480 = load %struct.rtx_def** %rtx841.phi.trans.insert, align 8, !tbaa !7
  br label %if.end838

land.lhs.true767:                                 ; preds = %sw.bb765
  %arrayidx769 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 0
  %rtx770 = bitcast %union.rtunion_def* %arrayidx769 to %struct.rtx_def**
  %196 = load %struct.rtx_def** %rtx770, align 8, !tbaa !7
  %197 = getelementptr inbounds %struct.rtx_def* %196, i64 0, i32 0
  %bf.load771 = load i32* %197, align 8
  %198 = and i32 %bf.load771, 67174399
  %199 = icmp eq i32 %198, 67108932
  br i1 %199, label %if.then783, label %if.end838

if.then783:                                       ; preds = %land.lhs.true767
  %call788 = call i32 @get_pool_mode_for_function(%struct.function* %195, %struct.rtx_def* %196) #4
  %200 = load %struct.function** @inlining, align 8, !tbaa !7
  %201 = load %struct.rtx_def** %rtx770, align 8, !tbaa !7
  %call793 = call %struct.rtx_def* @get_pool_constant_for_function(%struct.function* %200, %struct.rtx_def* %201) #4
  %call794 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %call793, %struct.inline_remap* %map, i32 0)
  %202 = getelementptr inbounds %struct.rtx_def* %call794, i64 0, i32 0
  %bf.load795 = load i32* %202, align 8
  %bf.clear796 = and i32 %bf.load795, 65535
  switch i32 %bf.clear796, label %return [
    i32 67, label %if.end835
    i32 68, label %if.end835
    i32 54, label %if.end835
    i32 55, label %if.end835
    i32 58, label %if.end835
    i32 134, label %if.end835
    i32 56, label %if.end835
    i32 140, label %if.end835
  ]

if.end835:                                        ; preds = %if.then783, %if.then783, %if.then783, %if.then783, %if.then783, %if.then783, %if.then783, %if.then783
  %call836 = call %struct.rtx_def* @force_const_mem(i32 %call788, %struct.rtx_def* %call794) #4
  %call837 = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call836) #4
  br label %return

if.end838:                                        ; preds = %land.lhs.true767, %sw.bb765.if.end838_crit_edge
  %203 = phi %struct.rtx_def* [ %.pre1480, %sw.bb765.if.end838_crit_edge ], [ %196, %land.lhs.true767 ]
  %call842 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %203, %struct.inline_remap* %map, i32 0)
  %call843 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear2, %struct.rtx_def* %call842) #4
  %bf.load844 = load i32* %0, align 8
  %bf.clear846 = and i32 %bf.load844, 134217728
  %204 = getelementptr inbounds %struct.rtx_def* %call843, i64 0, i32 0
  %bf.load847 = load i32* %204, align 8
  %bf.clear850 = and i32 %bf.load847, -134217729
  %bf.set851 = or i32 %bf.clear850, %bf.clear846
  store i32 %bf.set851, i32* %204, align 8
  %bf.load852 = load i32* %0, align 8
  %bf.clear854 = and i32 %bf.load852, 268435456
  %bf.clear858 = and i32 %bf.set851, -268435457
  %bf.set859 = or i32 %bf.clear858, %bf.clear854
  store i32 %bf.set859, i32* %204, align 8
  %bf.load860 = load i32* %0, align 8
  %bf.lshr861 = and i32 %bf.load860, -2147483648
  %bf.clear865 = and i32 %bf.set859, 2147483647
  %bf.set866 = or i32 %bf.clear865, %bf.lshr861
  store i32 %bf.set866, i32* %204, align 8
  %bf.load867 = load i32* %0, align 8
  %bf.clear869 = and i32 %bf.load867, 67108864
  %bf.clear873 = and i32 %bf.set866, -67108865
  %bf.set874 = or i32 %bf.clear873, %bf.clear869
  store i32 %bf.set874, i32* %204, align 8
  %bf.load875 = load i32* %0, align 8
  %bf.clear877 = and i32 %bf.load875, 16777216
  %bf.clear881 = and i32 %bf.set874, -16777217
  %bf.set882 = or i32 %bf.clear881, %bf.clear877
  store i32 %bf.set882, i32* %204, align 8
  %arrayidx884 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 1
  %rtmem885 = bitcast %union.rtunion_def* %arrayidx884 to %struct.mem_attrs**
  %205 = load %struct.mem_attrs** %rtmem885, align 8, !tbaa !7
  %206 = getelementptr inbounds %struct.rtx_def* %call843, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.mem_attrs* %205 to i64
  store i64 %.c, i64* %206, align 8, !tbaa !7
  %207 = load %struct.function** @inlining, align 8, !tbaa !7
  %tobool889 = icmp eq %struct.function* %207, null
  %tobool891 = icmp ne i32 %for_lhs, 0
  %or.cond = or i1 %tobool889, %tobool891
  br i1 %or.cond, label %return, label %if.then892

if.then892:                                       ; preds = %if.end838
  %bf.clear894 = and i32 %bf.set882, -67108865
  store i32 %bf.clear894, i32* %204, align 8
  br label %return

sw.epilog:                                        ; preds = %sw.bb390, %sw.bb543, %if.end, %sw.bb550
  %call896 = call %struct.rtx_def* @rtx_alloc(i32 %bf.clear) #4
  %208 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 0
  %bf.load897 = load i32* %208, align 8
  %bf.shl899 = shl nuw nsw i32 %bf.clear2, 16
  %bf.clear900 = and i32 %bf.load897, -16711681
  %bf.set901 = or i32 %bf.clear900, %bf.shl899
  store i32 %bf.set901, i32* %208, align 8
  %bf.load902 = load i32* %0, align 8
  %bf.clear904 = and i32 %bf.load902, 268435456
  %bf.clear908 = and i32 %bf.set901, -268435457
  %bf.set909 = or i32 %bf.clear908, %bf.clear904
  store i32 %bf.set909, i32* %208, align 8
  %bf.load910 = load i32* %0, align 8
  %bf.clear912 = and i32 %bf.load910, 134217728
  %bf.clear916 = and i32 %bf.set909, -134217729
  %bf.set917 = or i32 %bf.clear916, %bf.clear912
  store i32 %bf.set917, i32* %208, align 8
  %bf.load918 = load i32* %0, align 8
  %bf.clear920 = and i32 %bf.load918, 67108864
  %bf.clear924 = and i32 %bf.set917, -67108865
  %bf.set925 = or i32 %bf.clear924, %bf.clear920
  store i32 %bf.set925, i32* %208, align 8
  %bf.clear9311468 = and i32 %bf.load897, 65535
  %idxprom93214321469 = zext i32 %bf.clear9311468 to i64
  %arrayidx9331470 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom93214321469
  %209 = load i8* %arrayidx9331470, align 1, !tbaa !33
  %cmp9351472 = icmp eq i8 %209, 0
  br i1 %cmp9351472, label %for.end1069, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %arrayidx929 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom93214321469
  %210 = load i8** %arrayidx929, align 8, !tbaa !7
  %insn_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc1067
  %indvars.iv1475 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1476, %for.inc1067 ]
  %format_ptr.01473 = phi i8* [ %210, %for.body.lr.ph ], [ %incdec.ptr, %for.inc1067 ]
  %incdec.ptr = getelementptr inbounds i8* %format_ptr.01473, i64 1
  %211 = load i8* %format_ptr.01473, align 1, !tbaa !33
  %conv937 = sext i8 %211 to i32
  switch i32 %conv937, label %sw.default1065 [
    i32 48, label %sw.bb938
    i32 101, label %sw.bb947
    i32 117, label %sw.bb957
    i32 69, label %sw.bb971
    i32 119, label %sw.bb1029
    i32 105, label %sw.bb1038
    i32 115, label %sw.bb1047
    i32 116, label %sw.bb1056
  ]

sw.bb938:                                         ; preds = %for.body
  %rtwint942 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv1475, i32 0
  %212 = load i64* %rtwint942, align 8, !tbaa !104
  %rtwint946 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 %indvars.iv1475, i32 0
  store i64 %212, i64* %rtwint946, align 8, !tbaa !104
  br label %for.inc1067

sw.bb947:                                         ; preds = %for.body
  %arrayidx950 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv1475
  %rtx951 = bitcast %union.rtunion_def* %arrayidx950 to %struct.rtx_def**
  %213 = load %struct.rtx_def** %rtx951, align 8, !tbaa !7
  %call952 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %213, %struct.inline_remap* %map, i32 %for_lhs)
  %214 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 %indvars.iv1475, i32 0
  %call952.c = ptrtoint %struct.rtx_def* %call952 to i64
  store i64 %call952.c, i64* %214, align 8, !tbaa !7
  br label %for.inc1067

sw.bb957:                                         ; preds = %for.body
  %arrayidx960 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv1475
  %rtx961 = bitcast %union.rtunion_def* %arrayidx960 to %struct.rtx_def**
  %215 = load %struct.rtx_def** %rtx961, align 8, !tbaa !7
  %arrayidx963 = getelementptr inbounds %struct.rtx_def* %215, i64 0, i32 1, i64 0
  %rtint964 = bitcast %union.rtunion_def* %arrayidx963 to i32*
  %216 = load i32* %rtint964, align 4, !tbaa !24
  %idxprom965 = sext i32 %216 to i64
  %217 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !65
  %arrayidx966 = getelementptr inbounds %struct.rtx_def** %217, i64 %idxprom965
  %218 = load %struct.rtx_def** %arrayidx966, align 8, !tbaa !7
  %219 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 %indvars.iv1475, i32 0
  %.c1436 = ptrtoint %struct.rtx_def* %218 to i64
  store i64 %.c1436, i64* %219, align 8, !tbaa !7
  br label %for.inc1067

sw.bb971:                                         ; preds = %for.body
  %arrayidx974 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv1475
  %rtvec975 = bitcast %union.rtunion_def* %arrayidx974 to %struct.rtvec_def**
  %220 = load %struct.rtvec_def** %rtvec975, align 8, !tbaa !7
  %arrayidx978 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 %indvars.iv1475
  %rtvec979 = bitcast %union.rtunion_def* %arrayidx978 to %struct.rtvec_def**
  %221 = getelementptr inbounds %union.rtunion_def* %arrayidx978, i64 0, i32 0
  %.c1435 = ptrtoint %struct.rtvec_def* %220 to i64
  store i64 %.c1435, i64* %221, align 8, !tbaa !7
  %222 = load %struct.rtvec_def** %rtvec975, align 8, !tbaa !7
  %cmp984 = icmp eq %struct.rtvec_def* %222, null
  br i1 %cmp984, label %for.inc1067, label %land.lhs.true986

land.lhs.true986:                                 ; preds = %sw.bb971
  %num_elem = getelementptr inbounds %struct.rtvec_def* %222, i64 0, i32 0
  %223 = load i32* %num_elem, align 4, !tbaa !108
  %cmp991 = icmp eq i32 %223, 0
  br i1 %cmp991, label %for.inc1067, label %if.then993

if.then993:                                       ; preds = %land.lhs.true986
  %call999 = call %struct.rtvec_def* @rtvec_alloc(i32 %223) #4
  %call999.c = ptrtoint %struct.rtvec_def* %call999 to i64
  store i64 %call999.c, i64* %221, align 8, !tbaa !7
  %num_elem10091464 = getelementptr inbounds %struct.rtvec_def* %call999, i64 0, i32 0
  %224 = load i32* %num_elem10091464, align 4, !tbaa !108
  %cmp10101465 = icmp sgt i32 %224, 0
  br i1 %cmp10101465, label %for.body1012, label %for.inc1067

for.body1012:                                     ; preds = %if.then993, %for.body1012
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body1012 ], [ 0, %if.then993 ]
  %225 = load %struct.rtvec_def** %rtvec975, align 8, !tbaa !7
  %arrayidx1018 = getelementptr inbounds %struct.rtvec_def* %225, i64 0, i32 1, i64 %indvars.iv
  %226 = load %struct.rtx_def** %arrayidx1018, align 8, !tbaa !7
  %call1019 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %226, %struct.inline_remap* %map, i32 %for_lhs)
  %227 = load %struct.rtvec_def** %rtvec979, align 8, !tbaa !7
  %arrayidx1026 = getelementptr inbounds %struct.rtvec_def* %227, i64 0, i32 1, i64 %indvars.iv
  store %struct.rtx_def* %call1019, %struct.rtx_def** %arrayidx1026, align 8, !tbaa !7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %228 = load %struct.rtvec_def** %rtvec979, align 8, !tbaa !7
  %num_elem1009 = getelementptr inbounds %struct.rtvec_def* %228, i64 0, i32 0
  %229 = load i32* %num_elem1009, align 4, !tbaa !108
  %230 = trunc i64 %indvars.iv.next to i32
  %cmp1010 = icmp slt i32 %230, %229
  br i1 %cmp1010, label %for.body1012, label %for.inc1067

sw.bb1029:                                        ; preds = %for.body
  %rtwint1033 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv1475, i32 0
  %231 = load i64* %rtwint1033, align 8, !tbaa !104
  %rtwint1037 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 %indvars.iv1475, i32 0
  store i64 %231, i64* %rtwint1037, align 8, !tbaa !104
  br label %for.inc1067

sw.bb1038:                                        ; preds = %for.body
  %arrayidx1041 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv1475
  %rtint1042 = bitcast %union.rtunion_def* %arrayidx1041 to i32*
  %232 = load i32* %rtint1042, align 4, !tbaa !24
  %arrayidx1045 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 %indvars.iv1475
  %rtint1046 = bitcast %union.rtunion_def* %arrayidx1045 to i32*
  store i32 %232, i32* %rtint1046, align 4, !tbaa !24
  br label %for.inc1067

sw.bb1047:                                        ; preds = %for.body
  %arrayidx1050 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv1475
  %rtstr1051 = bitcast %union.rtunion_def* %arrayidx1050 to i8**
  %233 = load i8** %rtstr1051, align 8, !tbaa !7
  %234 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 %indvars.iv1475, i32 0
  %.c1434 = ptrtoint i8* %233 to i64
  store i64 %.c1434, i64* %234, align 8, !tbaa !7
  br label %for.inc1067

sw.bb1056:                                        ; preds = %for.body
  %arrayidx1059 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 %indvars.iv1475
  %rttree1060 = bitcast %union.rtunion_def* %arrayidx1059 to %union.tree_node**
  %235 = load %union.tree_node** %rttree1060, align 8, !tbaa !7
  %236 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 %indvars.iv1475, i32 0
  %.c1433 = ptrtoint %union.tree_node* %235 to i64
  store i64 %.c1433, i64* %236, align 8, !tbaa !7
  br label %for.inc1067

sw.default1065:                                   ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 2387, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.copy_rtx_and_substitute, i64 0, i64 0)) #7
  unreachable

for.inc1067:                                      ; preds = %for.body1012, %if.then993, %land.lhs.true986, %sw.bb971, %sw.bb938, %sw.bb947, %sw.bb957, %sw.bb1029, %sw.bb1038, %sw.bb1047, %sw.bb1056
  %indvars.iv.next1476 = add nuw nsw i64 %indvars.iv1475, 1
  %bf.load930 = load i32* %208, align 8
  %bf.clear931 = and i32 %bf.load930, 65535
  %idxprom9321432 = zext i32 %bf.clear931 to i64
  %arrayidx933 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom9321432
  %237 = load i8* %arrayidx933, align 1, !tbaa !33
  %conv934 = zext i8 %237 to i32
  %238 = trunc i64 %indvars.iv.next1476 to i32
  %cmp935 = icmp slt i32 %238, %conv934
  br i1 %cmp935, label %for.body, label %for.end1069

for.end1069:                                      ; preds = %for.inc1067, %sw.epilog
  %cmp1070 = icmp eq i32 %bf.clear, 41
  br i1 %cmp1070, label %land.lhs.true1072, label %return

land.lhs.true1072:                                ; preds = %for.end1069
  %orig_asm_operands_vector1073 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 12
  %239 = load %struct.rtvec_def** %orig_asm_operands_vector1073, align 8, !tbaa !105
  %cmp1074 = icmp eq %struct.rtvec_def* %239, null
  br i1 %cmp1074, label %if.then1076, label %return

if.then1076:                                      ; preds = %land.lhs.true1072
  %arrayidx1078 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 3
  %rtvec1079 = bitcast %union.rtunion_def* %arrayidx1078 to %struct.rtvec_def**
  %240 = load %struct.rtvec_def** %rtvec1079, align 8, !tbaa !7
  store %struct.rtvec_def* %240, %struct.rtvec_def** %orig_asm_operands_vector1073, align 8, !tbaa !105
  %arrayidx1082 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 3
  %rtvec1083 = bitcast %union.rtunion_def* %arrayidx1082 to %struct.rtvec_def**
  %241 = load %struct.rtvec_def** %rtvec1083, align 8, !tbaa !7
  %copy_asm_operands_vector1084 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 13
  store %struct.rtvec_def* %241, %struct.rtvec_def** %copy_asm_operands_vector1084, align 8, !tbaa !106
  %arrayidx1086 = getelementptr inbounds %struct.rtx_def* %call896, i64 0, i32 1, i64 4
  %rtvec1087 = bitcast %union.rtunion_def* %arrayidx1086 to %struct.rtvec_def**
  %242 = load %struct.rtvec_def** %rtvec1087, align 8, !tbaa !7
  %copy_asm_constraints_vector1088 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 14
  store %struct.rtvec_def* %242, %struct.rtvec_def** %copy_asm_constraints_vector1088, align 8, !tbaa !107
  br label %return

return:                                           ; preds = %if.then.i1452, %get_label_from_map.exit1463, %if.else174, %for.end1069, %land.lhs.true1072, %if.then1076, %if.then892, %if.end838, %if.then783, %if.else502, %sw.bb480, %if.end, %if.end, %if.end, %if.end, %if.then477, %land.end462, %if.else158, %if.then166, %if.then5, %entry, %if.end835, %if.else755, %cond.end742, %sw.bb609, %if.then555, %if.else535, %do.body, %if.then507, %if.then495, %if.end388, %if.end361, %sw.bb252, %if.end248, %if.then188, %if.then168, %if.end144, %if.end67
  %retval.0 = phi %struct.rtx_def* [ %call837, %if.end835 ], [ %call754, %cond.end742 ], [ %call764, %if.else755 ], [ %call694, %sw.bb609 ], [ %call556, %if.then555 ], [ %call534, %do.body ], [ %call542, %if.else535 ], [ %141, %if.then495 ], [ %143, %if.then507 ], [ %call389, %if.end388 ], [ %call277, %if.end361 ], [ %call269, %sw.bb252 ], [ %call35, %if.end67 ], [ %call108, %if.end144 ], [ %call172, %if.then168 ], [ %call190, %if.then188 ], [ %77, %if.end248 ], [ null, %entry ], [ %7, %if.then5 ], [ %orig, %if.then166 ], [ %orig, %if.else158 ], [ %call430, %land.end462 ], [ %call430, %if.then477 ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %if.end ], [ %orig, %sw.bb480 ], [ %orig, %if.else502 ], [ %call794, %if.then783 ], [ %call843, %if.end838 ], [ %call843, %if.then892 ], [ %call896, %if.then1076 ], [ %call896, %land.lhs.true1072 ], [ %call896, %for.end1069 ], [ %54, %if.else174 ], [ %call.i1450, %if.then.i1452 ], [ %123, %get_label_from_map.exit1463 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @process_reg_param(%struct.inline_remap* nocapture %map, %struct.rtx_def* nocapture readonly %loc, %struct.rtx_def* %copy) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %copy, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.then [
    i32 61, label %land.lhs.true7
    i32 63, label %if.end121
  ]

land.lhs.true7:                                   ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %loc, i64 0, i32 0
  %bf.load8 = load i32* %1, align 8
  %bf.clear9 = and i32 %bf.load8, 134217728
  %tobool = icmp ne i32 %bf.clear9, 0
  %bf.clear13 = and i32 %bf.load, 134217728
  %tobool14 = icmp eq i32 %bf.clear13, 0
  %or.cond = and i1 %tobool, %tobool14
  br i1 %or.cond, label %if.then, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %land.lhs.true7
  %arrayidx = getelementptr inbounds %struct.rtx_def* %copy, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !24
  %cmp20 = icmp ult i32 %2, 53
  br i1 %cmp20, label %if.then, label %if.end121

if.then:                                          ; preds = %entry, %land.lhs.true7, %land.lhs.true19
  %3 = getelementptr inbounds %struct.rtx_def* %loc, i64 0, i32 0
  %bf.load21 = load i32* %3, align 8
  %bf.lshr22 = lshr i32 %bf.load21, 16
  %bf.clear23 = and i32 %bf.lshr22, 255
  %call = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear23, %struct.rtx_def* %copy) #4
  %bf.load24 = load i32* %3, align 8
  %bf.clear26 = and i32 %bf.load24, 134217728
  %4 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load27 = load i32* %4, align 8
  %bf.clear28 = and i32 %bf.load27, -134217729
  %bf.set = or i32 %bf.clear28, %bf.clear26
  store i32 %bf.set, i32* %4, align 8
  %bf.load29 = load i32* %0, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  switch i32 %bf.clear30, label %if.end121 [
    i32 67, label %if.then93
    i32 68, label %if.then93
    i32 54, label %if.then93
    i32 55, label %if.then93
    i32 58, label %if.then93
    i32 134, label %if.then93
    i32 56, label %if.then93
    i32 140, label %if.then93
    i32 75, label %land.lhs.true64
  ]

land.lhs.true64:                                  ; preds = %if.then
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %copy, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load67 = load i32* %6, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  %cmp69 = icmp eq i32 %bf.clear68, 54
  br i1 %cmp69, label %land.lhs.true70, label %if.end121

land.lhs.true70:                                  ; preds = %land.lhs.true64
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %copy, i64 0, i32 1, i64 0
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx73, align 8, !tbaa !7
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load74 = load i32* %8, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  %cmp76 = icmp eq i32 %bf.clear75, 61
  br i1 %cmp76, label %land.lhs.true77, label %if.end121

land.lhs.true77:                                  ; preds = %land.lhs.true70
  %arrayidx82 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint83 = bitcast %union.rtunion_def* %arrayidx82 to i32*
  %9 = load i32* %rtuint83, align 4, !tbaa !24
  %.off = add i32 %9, -53
  %10 = icmp ult i32 %.off, 5
  br i1 %10, label %if.then93, label %if.end121

if.then93:                                        ; preds = %land.lhs.true77, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then
  %arrayidx95 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtuint96 = bitcast %union.rtunion_def* %arrayidx95 to i32*
  %11 = load i32* %rtuint96, align 4, !tbaa !24
  %conv = zext i32 %11 to i64
  %const_equiv_varray = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9
  %12 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 0
  %13 = load i64* %num_elements, align 8, !tbaa !79
  %cmp97 = icmp ult i64 %conv, %13
  br i1 %cmp97, label %if.end113, label %if.then99

if.then99:                                        ; preds = %if.then93
  %14 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %cmp101 = icmp eq %struct.varray_head_tag* %14, %12
  %add = add i32 %11, 1
  %conv107 = zext i32 %add to i64
  %call108 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %12, i64 %conv107) #4
  store %struct.varray_head_tag* %call108, %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br i1 %cmp101, label %if.then111, label %if.end113

if.then111:                                       ; preds = %if.then99
  store %struct.varray_head_tag* %call108, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %.pre = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br label %if.end113

if.end113:                                        ; preds = %if.then93, %if.then99, %if.then111
  %15 = phi %struct.varray_head_tag* [ %12, %if.then93 ], [ %call108, %if.then99 ], [ %.pre, %if.then111 ]
  %16 = load i32* %rtuint96, align 4, !tbaa !24
  %idxprom = zext i32 %16 to i64
  %rtx119 = getelementptr inbounds %struct.varray_head_tag* %15, i64 0, i32 4, i32 0, i64 %idxprom, i32 0
  store %struct.rtx_def* %copy, %struct.rtx_def** %rtx119, align 8, !tbaa !82
  %age = getelementptr inbounds %struct.varray_head_tag* %15, i64 0, i32 4, i32 0, i64 %idxprom, i32 1
  store i32 -1, i32* %age, align 4, !tbaa !84
  br label %if.end121

if.end121:                                        ; preds = %entry, %land.lhs.true64, %land.lhs.true70, %land.lhs.true77, %if.end113, %if.then, %land.lhs.true19
  %copy.addr.0 = phi %struct.rtx_def* [ %copy, %land.lhs.true19 ], [ %call, %if.then ], [ %call, %if.end113 ], [ %call, %land.lhs.true77 ], [ %call, %land.lhs.true70 ], [ %call, %land.lhs.true64 ], [ %copy, %entry ]
  %arrayidx123 = getelementptr inbounds %struct.rtx_def* %loc, i64 0, i32 1, i64 0
  %rtuint124 = bitcast %union.rtunion_def* %arrayidx123 to i32*
  %17 = load i32* %rtuint124, align 4, !tbaa !24
  %idxprom125 = zext i32 %17 to i64
  %reg_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 4
  %18 = load %struct.rtx_def*** %reg_map, align 8, !tbaa !62
  %arrayidx126 = getelementptr inbounds %struct.rtx_def** %18, i64 %idxprom125
  store %struct.rtx_def* %copy.addr.0, %struct.rtx_def** %arrayidx126, align 8, !tbaa !7
  ret void
}

declare %struct.rtx_def* @gen_realpart(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_imagpart(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @subst_constants(%struct.rtx_def** %loc, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 %memonly) #0 {
entry:
  %inner = alloca %struct.rtx_def*, align 8
  %0 = load %struct.rtx_def** %loc, align 8, !tbaa !7
  %call = call i32 @num_validated_changes() #4
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 59, label %if.end771
    i32 54, label %if.end771
    i32 55, label %if.end771
    i32 56, label %if.end771
    i32 68, label %if.end771
    i32 58, label %if.end771
    i32 67, label %if.end771
    i32 25, label %if.end771
    i32 48, label %sw.bb1
    i32 49, label %sw.bb1
    i32 61, label %sw.bb10
    i32 63, label %sw.bb35
    i32 66, label %sw.bb68
    i32 47, label %sw.bb91
  ]

sw.bb1:                                           ; preds = %entry, %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load2 = load i32* %3, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp = icmp eq i32 %bf.clear3, 66
  br i1 %cmp, label %if.then, label %if.end771

if.then:                                          ; preds = %sw.bb1
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  call fastcc void @subst_constants(%struct.rtx_def** %rtx9, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 0)
  br label %if.end771

sw.bb10:                                          ; preds = %entry
  %tobool = icmp eq i32 %memonly, 0
  br i1 %tobool, label %if.then11, label %if.end771

if.then11:                                        ; preds = %sw.bb10
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx13 to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !24
  %cmp14 = icmp sgt i32 %4, 52
  %bf.clear16 = and i32 %bf.load, 134217728
  %tobool17 = icmp eq i32 %bf.clear16, 0
  %or.cond974 = or i1 %cmp14, %tobool17
  br i1 %or.cond974, label %land.lhs.true18, label %if.end771

land.lhs.true18:                                  ; preds = %if.then11
  %conv = sext i32 %4 to i64
  %const_equiv_varray = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9
  %5 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 0
  %6 = load i64* %num_elements, align 8, !tbaa !79
  %cmp19 = icmp ult i64 %conv, %6
  br i1 %cmp19, label %land.lhs.true21, label %if.end771

land.lhs.true21:                                  ; preds = %land.lhs.true18
  %rtx24 = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 4, i32 0, i64 %conv, i32 0
  %7 = load %struct.rtx_def** %rtx24, align 8, !tbaa !82
  %cmp25 = icmp eq %struct.rtx_def* %7, null
  br i1 %cmp25, label %if.end771, label %land.lhs.true27

land.lhs.true27:                                  ; preds = %land.lhs.true21
  %age = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 4, i32 0, i64 %conv, i32 1
  %8 = load i32* %age, align 4, !tbaa !84
  %const_age = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 10
  %9 = load i32* %const_age, align 4, !tbaa !72
  %cmp28 = icmp ult i32 %8, %9
  br i1 %cmp28, label %if.end771, label %if.then30

if.then30:                                        ; preds = %land.lhs.true27
  %call32 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %7, i32 1) #4
  br label %if.end771

sw.bb35:                                          ; preds = %entry
  %tobool36 = icmp eq i32 %memonly, 0
  br i1 %tobool36, label %land.lhs.true37, label %sw.epilog

land.lhs.true37:                                  ; preds = %sw.bb35
  %fld38 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx40 = bitcast [1 x %union.rtunion_def]* %fld38 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx40, align 8, !tbaa !7
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load41 = load i32* %11, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 61
  br i1 %cmp43, label %if.then45, label %sw.epilog

if.then45:                                        ; preds = %land.lhs.true37
  store %struct.rtx_def* %10, %struct.rtx_def** %inner, align 8, !tbaa !7
  call fastcc void @subst_constants(%struct.rtx_def** %inner, %struct.rtx_def* null, %struct.inline_remap* %map, i32 0)
  %bf.load50 = load i32* %1, align 8
  %bf.lshr51 = lshr i32 %bf.load50, 16
  %bf.clear52 = and i32 %bf.lshr51, 255
  %12 = load %struct.rtx_def** %inner, align 8, !tbaa !7
  %13 = load %struct.rtx_def** %rtx40, align 8, !tbaa !7
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load56 = load i32* %14, align 8
  %bf.lshr57 = lshr i32 %bf.load56, 16
  %bf.clear58 = and i32 %bf.lshr57, 255
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtuint61 = bitcast %union.rtunion_def* %arrayidx60 to i32*
  %15 = load i32* %rtuint61, align 4, !tbaa !24
  %call62 = call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear52, %struct.rtx_def* %12, i32 %bf.clear58, i32 %15) #4
  %tobool63 = icmp eq %struct.rtx_def* %call62, null
  br i1 %tobool63, label %if.else, label %if.then64

if.then64:                                        ; preds = %if.then45
  %call65 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %call62, i32 1) #4
  br label %if.end771

if.else:                                          ; preds = %if.then45
  call void @cancel_changes(i32 %call) #4
  br label %if.end771

sw.bb68:                                          ; preds = %entry
  %arrayidx70 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  call fastcc void @subst_constants(%struct.rtx_def** %rtx71, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 0)
  %tobool72 = icmp eq i32 %memonly, 0
  %cmp74 = icmp ne %struct.rtx_def* %insn, null
  %or.cond = and i1 %tobool72, %cmp74
  br i1 %or.cond, label %land.lhs.true76, label %if.end771

land.lhs.true76:                                  ; preds = %sw.bb68
  %call77 = call i32 @num_validated_changes() #4
  %cmp78 = icmp eq i32 %call77, %call
  br i1 %cmp78, label %if.end771, label %land.lhs.true80

land.lhs.true80:                                  ; preds = %land.lhs.true76
  %bf.load81 = load i32* %1, align 8
  %bf.lshr82 = lshr i32 %bf.load81, 16
  %bf.clear83 = and i32 %bf.lshr82, 255
  %16 = load %struct.rtx_def** %rtx71, align 8, !tbaa !7
  %call87 = call i32 @memory_address_p(i32 %bf.clear83, %struct.rtx_def* %16) #4
  %tobool88 = icmp eq i32 %call87, 0
  br i1 %tobool88, label %if.then89, label %if.end771

if.then89:                                        ; preds = %land.lhs.true80
  call void @cancel_changes(i32 %call) #4
  br label %if.end771

sw.bb91:                                          ; preds = %entry
  %fld92 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx94 = bitcast [1 x %union.rtunion_def]* %fld92 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx94, align 8, !tbaa !7
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx97, align 8, !tbaa !7
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load98 = load i32* %19, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 74
  br i1 %cmp100, label %if.then102, label %if.end131

if.then102:                                       ; preds = %sw.bb91
  %bf.lshr107 = lshr i32 %bf.load98, 16
  %bf.clear108 = and i32 %bf.lshr107, 255
  %idxprom109971 = zext i32 %bf.clear108 to i64
  %arrayidx110 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom109971
  %20 = load i32* %arrayidx110, align 4, !tbaa !33
  %cmp111 = icmp eq i32 %20, 4
  br i1 %cmp111, label %if.then113, label %if.end131

if.then113:                                       ; preds = %if.then102
  %fld114 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1
  %rtx116 = bitcast [1 x %union.rtunion_def]* %fld114 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx116, align 8, !tbaa !7
  %22 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 0
  %bf.load117 = load i32* %22, align 8
  %bf.lshr118 = lshr i32 %bf.load117, 16
  %bf.clear119 = and i32 %bf.lshr118, 255
  %cmp120 = icmp eq i32 %bf.clear119, 0
  br i1 %cmp120, label %if.then122, label %if.end131

if.then122:                                       ; preds = %if.then113
  %arrayidx124 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 1
  %rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx125, align 8, !tbaa !7
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load126 = load i32* %24, align 8
  %bf.lshr127 = lshr i32 %bf.load126, 16
  %bf.clear128 = and i32 %bf.lshr127, 255
  br label %if.end131

if.end131:                                        ; preds = %if.then102, %if.then122, %if.then113, %sw.bb91
  %compare_mode.0 = phi i32 [ %bf.clear128, %if.then122 ], [ %bf.clear119, %if.then113 ], [ 0, %if.then102 ], [ 0, %sw.bb91 ]
  call fastcc void @subst_constants(%struct.rtx_def** %rtx97, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 %memonly)
  %25 = load %struct.rtx_def** %rtx97, align 8, !tbaa !7
  br label %while.cond

while.cond:                                       ; preds = %if.end161, %if.end131
  %dest_loc.0 = phi %struct.rtx_def** [ %rtx94, %if.end131 ], [ %rtx164, %if.end161 ]
  %26 = load %struct.rtx_def** %dest_loc.0, align 8, !tbaa !7
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load138 = load i32* %27, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  switch i32 %bf.clear139, label %if.end173 [
    i32 133, label %if.then154
    i32 63, label %if.end161
    i32 64, label %if.end161
    i32 66, label %if.then169
  ]

if.then154:                                       ; preds = %while.cond
  %arrayidx156 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 1
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  call fastcc void @subst_constants(%struct.rtx_def** %rtx157, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 %memonly)
  %28 = load %struct.rtx_def** %dest_loc.0, align 8, !tbaa !7
  %arrayidx159 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 2
  %rtx160 = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**
  call fastcc void @subst_constants(%struct.rtx_def** %rtx160, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 %memonly)
  %.pre1002 = load %struct.rtx_def** %dest_loc.0, align 8, !tbaa !7
  br label %if.end161

if.end161:                                        ; preds = %while.cond, %while.cond, %if.then154
  %29 = phi %struct.rtx_def* [ %.pre1002, %if.then154 ], [ %26, %while.cond ], [ %26, %while.cond ]
  %arrayidx163 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0
  %rtx164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.rtx_def**
  br label %while.cond

if.then169:                                       ; preds = %while.cond
  %arrayidx171 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**
  call fastcc void @subst_constants(%struct.rtx_def** %rtx172, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 0)
  br label %if.end173

if.end173:                                        ; preds = %while.cond, %if.then169
  %30 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load174 = load i32* %30, align 8
  %bf.clear175 = and i32 %bf.load174, 65535
  %cmp176 = icmp eq i32 %bf.clear175, 63
  br i1 %cmp176, label %land.lhs.true178, label %if.end234

land.lhs.true178:                                 ; preds = %if.end173
  %bf.lshr180 = lshr i32 %bf.load174, 16
  %bf.clear181 = and i32 %bf.lshr180, 255
  %idxprom182969 = zext i32 %bf.clear181 to i64
  %arrayidx183 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom182969
  %31 = load i8* %arrayidx183, align 1, !tbaa !33
  %conv184 = zext i8 %31 to i32
  %32 = load i32* @target_flags, align 4, !tbaa !24
  %and = lshr i32 %32, 23
  %33 = and i32 %and, 4
  %34 = add i32 %33, 4
  %cmp186 = icmp ugt i32 %conv184, %34
  br i1 %cmp186, label %if.end234, label %land.lhs.true188

land.lhs.true188:                                 ; preds = %land.lhs.true178
  %arrayidx190 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx191, align 8, !tbaa !7
  %36 = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 0
  %bf.load192 = load i32* %36, align 8
  %bf.lshr193 = lshr i32 %bf.load192, 16
  %bf.clear194 = and i32 %bf.lshr193, 255
  %idxprom195970 = zext i32 %bf.clear194 to i64
  %arrayidx196 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom195970
  %37 = load i8* %arrayidx196, align 1, !tbaa !33
  %conv197 = zext i8 %37 to i32
  %cmp201 = icmp ugt i32 %conv197, %34
  %cmp219 = icmp ugt i8 %37, %31
  %or.cond975 = or i1 %cmp201, %cmp219
  br i1 %or.cond975, label %if.end234, label %land.lhs.true221

land.lhs.true221:                                 ; preds = %land.lhs.true188
  %call228 = call %struct.rtx_def* @gen_lowpart_if_possible(i32 %bf.clear194, %struct.rtx_def* %25) #4
  %tobool229 = icmp eq %struct.rtx_def* %call228, null
  br i1 %tobool229, label %if.end234, label %if.then230

if.then230:                                       ; preds = %land.lhs.true221
  %38 = load %struct.rtx_def** %rtx191, align 8, !tbaa !7
  br label %if.end234

if.end234:                                        ; preds = %land.lhs.true221, %land.lhs.true188, %land.lhs.true178, %if.then230, %if.end173
  %dest.0 = phi %struct.rtx_def* [ %38, %if.then230 ], [ %17, %land.lhs.true221 ], [ %17, %land.lhs.true188 ], [ %17, %land.lhs.true178 ], [ %17, %if.end173 ]
  %src.0 = phi %struct.rtx_def* [ %call228, %if.then230 ], [ %25, %land.lhs.true221 ], [ %25, %land.lhs.true188 ], [ %25, %land.lhs.true178 ], [ %25, %if.end173 ]
  %num_sets = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 18
  %39 = load i32* %num_sets, align 4, !tbaa !110
  %cmp235 = icmp slt i32 %39, 30
  br i1 %cmp235, label %land.lhs.true237, label %if.end771

land.lhs.true237:                                 ; preds = %if.end234
  %40 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 0
  %bf.load238 = load i32* %40, align 8
  %bf.clear239 = and i32 %bf.load238, 65535
  switch i32 %bf.clear239, label %lor.lhs.false394 [
    i32 67, label %if.then410
    i32 68, label %if.then410
    i32 54, label %if.then410
    i32 55, label %if.then410
    i32 58, label %if.then410
    i32 134, label %if.then410
    i32 56, label %if.then410
    i32 140, label %if.then410
    i32 61, label %land.lhs.true282
    i32 75, label %land.lhs.true299
    i32 74, label %if.then410
  ]

land.lhs.true282:                                 ; preds = %land.lhs.true237
  %arrayidx284 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 1, i64 0
  %rtuint285 = bitcast %union.rtunion_def* %arrayidx284 to i32*
  %41 = load i32* %rtuint285, align 4, !tbaa !24
  %.off = add i32 %41, -53
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then410, label %lor.lhs.false394

land.lhs.true299:                                 ; preds = %land.lhs.true237
  %fld300 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 1
  %rtx302 = bitcast [1 x %union.rtunion_def]* %fld300 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx302, align 8, !tbaa !7
  %43 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load303 = load i32* %43, align 8
  %bf.clear304 = and i32 %bf.load303, 65535
  %cmp305 = icmp eq i32 %bf.clear304, 61
  br i1 %cmp305, label %land.lhs.true307, label %lor.lhs.false394

land.lhs.true307:                                 ; preds = %land.lhs.true299
  %arrayidx312 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 1, i64 0
  %rtuint313 = bitcast %union.rtunion_def* %arrayidx312 to i32*
  %44 = load i32* %rtuint313, align 4, !tbaa !24
  %.off979 = add i32 %44, -53
  %switch980 = icmp ult i32 %.off979, 2
  br i1 %switch980, label %land.lhs.true325, label %lor.lhs.false389

land.lhs.true325:                                 ; preds = %land.lhs.true307
  %arrayidx327 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 1, i64 1
  %rtx328 = bitcast %union.rtunion_def* %arrayidx327 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx328, align 8, !tbaa !7
  %46 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 0
  %bf.load329 = load i32* %46, align 8
  %bf.clear330 = and i32 %bf.load329, 65535
  switch i32 %bf.clear330, label %lor.lhs.false389 [
    i32 67, label %if.then410
    i32 68, label %if.then410
    i32 54, label %if.then410
    i32 55, label %if.then410
    i32 58, label %if.then410
    i32 134, label %if.then410
    i32 56, label %if.then410
    i32 140, label %if.then410
  ]

lor.lhs.false389:                                 ; preds = %land.lhs.true307, %land.lhs.true325
  %cmp392 = icmp eq i32 %bf.clear239, 74
  br i1 %cmp392, label %if.then410, label %lor.lhs.false394

lor.lhs.false394:                                 ; preds = %land.lhs.true237, %land.lhs.true282, %land.lhs.true299, %lor.lhs.false389
  %47 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !7
  %cmp395 = icmp eq %struct.rtx_def* %dest.0, %47
  br i1 %cmp395, label %land.lhs.true397, label %if.end771

land.lhs.true397:                                 ; preds = %lor.lhs.false394
  %cmp398 = icmp eq %struct.rtx_def* %src.0, %dest.0
  br i1 %cmp398, label %if.then410, label %switch.early.test

switch.early.test:                                ; preds = %land.lhs.true397
  switch i32 %bf.clear239, label %if.end771 [
    i32 67, label %if.then410
    i32 51, label %if.then410
  ]

if.then410:                                       ; preds = %land.lhs.true237, %land.lhs.true237, %land.lhs.true237, %land.lhs.true237, %land.lhs.true237, %land.lhs.true237, %land.lhs.true237, %land.lhs.true237, %land.lhs.true237, %switch.early.test, %switch.early.test, %land.lhs.true397, %land.lhs.true282, %land.lhs.true325, %land.lhs.true325, %land.lhs.true325, %land.lhs.true325, %land.lhs.true325, %land.lhs.true325, %land.lhs.true325, %land.lhs.true325, %lor.lhs.false389
  %call411 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %src.0) #4
  %48 = load i32* %num_sets, align 4, !tbaa !110
  %idxprom413 = sext i32 %48 to i64
  %equiv = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %idxprom413, i32 1
  store %struct.rtx_def* %call411, %struct.rtx_def** %equiv, align 8, !tbaa !111
  %49 = load i32* %num_sets, align 4, !tbaa !110
  %inc = add nsw i32 %49, 1
  store i32 %inc, i32* %num_sets, align 4, !tbaa !110
  %idxprom416 = sext i32 %49 to i64
  %dest419 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %idxprom416, i32 0
  store %struct.rtx_def* %dest.0, %struct.rtx_def** %dest419, align 8, !tbaa !113
  %cmp420 = icmp eq i32 %compare_mode.0, 0
  br i1 %cmp420, label %if.end771, label %land.lhs.true422

land.lhs.true422:                                 ; preds = %if.then410
  %bf.load423 = load i32* %40, align 8
  %bf.clear424 = and i32 %bf.load423, 65535
  %cmp425 = icmp eq i32 %bf.clear424, 74
  br i1 %cmp425, label %land.lhs.true427, label %if.end771

land.lhs.true427:                                 ; preds = %land.lhs.true422
  %bf.lshr429 = lshr i32 %bf.load423, 16
  %bf.clear430 = and i32 %bf.lshr429, 255
  %idxprom431968 = zext i32 %bf.clear430 to i64
  %arrayidx432 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom431968
  %50 = load i32* %arrayidx432, align 4, !tbaa !33
  %cmp433 = icmp eq i32 %50, 4
  br i1 %cmp433, label %land.lhs.true435, label %if.end771

land.lhs.true435:                                 ; preds = %land.lhs.true427
  %fld436 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 1
  %rtx438 = bitcast [1 x %union.rtunion_def]* %fld436 to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx438, align 8, !tbaa !7
  %52 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 0
  %bf.load439 = load i32* %52, align 8
  %bf.clear441 = and i32 %bf.load439, 16711680
  %cmp442 = icmp eq i32 %bf.clear441, 0
  br i1 %cmp442, label %land.lhs.true444, label %if.end771

land.lhs.true444:                                 ; preds = %land.lhs.true435
  %arrayidx446 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 1, i64 1
  %rtx447 = bitcast %union.rtunion_def* %arrayidx446 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx447, align 8, !tbaa !7
  %54 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 0
  %bf.load448 = load i32* %54, align 8
  %bf.clear450 = and i32 %bf.load448, 16711680
  %cmp451 = icmp eq i32 %bf.clear450, 0
  br i1 %cmp451, label %if.then453, label %if.end771

if.then453:                                       ; preds = %land.lhs.true444
  %compare_src = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 21
  store %struct.rtx_def* %call411, %struct.rtx_def** %compare_src, align 8, !tbaa !69
  %compare_mode454 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 22
  store i32 %compare_mode.0, i32* %compare_mode454, align 4, !tbaa !70
  br label %if.end771

sw.epilog:                                        ; preds = %sw.bb35, %entry, %land.lhs.true37
  %idxprom457972 = zext i32 %bf.clear to i64
  %arrayidx458 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom457972
  %55 = load i8** %arrayidx458, align 8, !tbaa !7
  %56 = load i8* %55, align 1, !tbaa !33
  %cmp460 = icmp eq i8 %56, 101
  br i1 %cmp460, label %if.then462, label %if.end469

if.then462:                                       ; preds = %sw.epilog
  %arrayidx464 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx465 = bitcast %union.rtunion_def* %arrayidx464 to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx465, align 8, !tbaa !7
  %58 = getelementptr inbounds %struct.rtx_def* %57, i64 0, i32 0
  %bf.load466 = load i32* %58, align 8
  %bf.lshr467 = lshr i32 %bf.load466, 16
  %bf.clear468 = and i32 %bf.lshr467, 255
  br label %if.end469

if.end469:                                        ; preds = %if.then462, %sw.epilog
  %op0_mode.0 = phi i32 [ %bf.clear468, %if.then462 ], [ 59, %sw.epilog ]
  %arrayidx471 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom457972
  %59 = load i8* %arrayidx471, align 1, !tbaa !33
  %cmp473993 = icmp eq i8 %59, 0
  br i1 %cmp473993, label %for.end524, label %for.body

for.body:                                         ; preds = %if.end469, %for.inc522.for.body_crit_edge
  %60 = phi i8 [ %.pre1001, %for.inc522.for.body_crit_edge ], [ %56, %if.end469 ]
  %indvars.iv996 = phi i64 [ %indvars.iv.next997, %for.inc522.for.body_crit_edge ], [ 0, %if.end469 ]
  %format_ptr.0994 = phi i8* [ %incdec.ptr, %for.inc522.for.body_crit_edge ], [ %55, %if.end469 ]
  %incdec.ptr = getelementptr inbounds i8* %format_ptr.0994, i64 1
  %conv475 = sext i8 %60 to i32
  switch i32 %conv475, label %sw.default520 [
    i32 48, label %for.inc522
    i32 101, label %sw.bb476
    i32 117, label %for.inc522
    i32 105, label %for.inc522
    i32 115, label %for.inc522
    i32 119, label %for.inc522
    i32 110, label %for.inc522
    i32 116, label %for.inc522
    i32 69, label %sw.bb489
  ]

sw.bb476:                                         ; preds = %for.body
  %arrayidx479 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 %indvars.iv996
  %rtx480 = bitcast %union.rtunion_def* %arrayidx479 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx480, align 8, !tbaa !7
  %tobool481 = icmp eq %struct.rtx_def* %61, null
  br i1 %tobool481, label %for.inc522, label %if.then482

if.then482:                                       ; preds = %sw.bb476
  call fastcc void @subst_constants(%struct.rtx_def** %rtx480, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 %memonly)
  br label %for.inc522

sw.bb489:                                         ; preds = %for.body
  %arrayidx492 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 %indvars.iv996
  %rtvec = bitcast %union.rtunion_def* %arrayidx492 to %struct.rtvec_def**
  %62 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !7
  %cmp493 = icmp eq %struct.rtvec_def* %62, null
  br i1 %cmp493, label %for.inc522, label %land.lhs.true495

land.lhs.true495:                                 ; preds = %sw.bb489
  %num_elem = getelementptr inbounds %struct.rtvec_def* %62, i64 0, i32 0
  %63 = load i32* %num_elem, align 4, !tbaa !108
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %for.body511, label %for.inc522

for.body511:                                      ; preds = %land.lhs.true495, %for.body511
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body511 ], [ 0, %land.lhs.true495 ]
  %65 = phi %struct.rtvec_def* [ %66, %for.body511 ], [ %62, %land.lhs.true495 ]
  %arrayidx517 = getelementptr inbounds %struct.rtvec_def* %65, i64 0, i32 1, i64 %indvars.iv
  call fastcc void @subst_constants(%struct.rtx_def** %arrayidx517, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 %memonly)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %66 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !7
  %num_elem508 = getelementptr inbounds %struct.rtvec_def* %66, i64 0, i32 0
  %67 = load i32* %num_elem508, align 4, !tbaa !108
  %68 = trunc i64 %indvars.iv.next to i32
  %cmp509 = icmp slt i32 %68, %67
  br i1 %cmp509, label %for.body511, label %for.inc522

sw.default520:                                    ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 2710, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.subst_constants, i64 0, i64 0)) #7
  unreachable

for.inc522:                                       ; preds = %for.body511, %land.lhs.true495, %sw.bb476, %sw.bb489, %for.body, %if.then482, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %indvars.iv.next997 = add nuw nsw i64 %indvars.iv996, 1
  %conv472 = zext i8 %59 to i32
  %69 = trunc i64 %indvars.iv.next997 to i32
  %cmp473 = icmp slt i32 %69, %conv472
  br i1 %cmp473, label %for.inc522.for.body_crit_edge, label %for.end524

for.inc522.for.body_crit_edge:                    ; preds = %for.inc522
  %.pre1001 = load i8* %incdec.ptr, align 1, !tbaa !33
  br label %for.body

for.end524:                                       ; preds = %for.inc522, %if.end469
  %tobool525 = icmp eq i32 %memonly, 0
  br i1 %tobool525, label %land.lhs.true526, label %if.end771

land.lhs.true526:                                 ; preds = %for.end524
  %arrayidx528 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom457972
  %70 = load i8* %arrayidx528, align 1, !tbaa !33
  %cmp530 = icmp eq i8 %70, 99
  %cmp533 = icmp eq i32 %bf.clear, 102
  %or.cond772 = or i1 %cmp530, %cmp533
  %cmp536 = icmp eq i32 %bf.clear, 103
  %or.cond773 = or i1 %or.cond772, %cmp536
  br i1 %or.cond773, label %land.lhs.true538, label %if.then628

land.lhs.true538:                                 ; preds = %land.lhs.true526
  %fld539 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx541 = bitcast [1 x %union.rtunion_def]* %fld539 to %struct.rtx_def**
  %71 = load %struct.rtx_def** %rtx541, align 8, !tbaa !7
  %72 = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 0
  %bf.load542 = load i32* %72, align 8
  %bf.clear543 = and i32 %bf.load542, 65535
  switch i32 %bf.clear543, label %if.then628 [
    i32 67, label %land.lhs.true602
    i32 68, label %land.lhs.true602
    i32 54, label %land.lhs.true602
    i32 55, label %land.lhs.true602
    i32 58, label %land.lhs.true602
    i32 134, label %land.lhs.true602
    i32 56, label %land.lhs.true602
    i32 140, label %land.lhs.true602
  ]

land.lhs.true602:                                 ; preds = %land.lhs.true538, %land.lhs.true538, %land.lhs.true538, %land.lhs.true538, %land.lhs.true538, %land.lhs.true538, %land.lhs.true538, %land.lhs.true538
  %arrayidx604 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx605 = bitcast %union.rtunion_def* %arrayidx604 to %struct.rtx_def**
  %73 = load %struct.rtx_def** %rtx605, align 8, !tbaa !7
  %74 = getelementptr inbounds %struct.rtx_def* %73, i64 0, i32 0
  %bf.load606 = load i32* %74, align 8
  %bf.clear607 = and i32 %bf.load606, 65535
  %cmp608 = icmp eq i32 %bf.clear607, 54
  br i1 %cmp608, label %if.then628, label %if.then610

if.then610:                                       ; preds = %land.lhs.true602
  %call621 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx541, %struct.rtx_def* %73, i32 1) #4
  %call625 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx605, %struct.rtx_def* %71, i32 1) #4
  br label %if.then628

if.then628:                                       ; preds = %if.then610, %land.lhs.true602, %land.lhs.true538, %land.lhs.true526
  %conv631 = sext i8 %70 to i32
  switch i32 %conv631, label %if.end771 [
    i32 49, label %sw.bb632
    i32 60, label %sw.bb644
    i32 50, label %sw.bb668
    i32 99, label %sw.bb668
    i32 98, label %sw.bb679
    i32 51, label %sw.bb679
  ]

sw.bb632:                                         ; preds = %if.then628
  %cmp633 = icmp eq i32 %op0_mode.0, 59
  br i1 %cmp633, label %if.then635, label %if.end636

if.then635:                                       ; preds = %sw.bb632
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 2731, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.subst_constants, i64 0, i64 0)) #7
  unreachable

if.end636:                                        ; preds = %sw.bb632
  %bf.load637 = load i32* %1, align 8
  %bf.lshr638 = lshr i32 %bf.load637, 16
  %bf.clear639 = and i32 %bf.lshr638, 255
  %arrayidx641 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx642 = bitcast %union.rtunion_def* %arrayidx641 to %struct.rtx_def**
  %75 = load %struct.rtx_def** %rtx642, align 8, !tbaa !7
  %call643 = call %struct.rtx_def* @simplify_unary_operation(i32 %bf.clear, i32 %bf.clear639, %struct.rtx_def* %75, i32 %op0_mode.0) #4
  br label %if.end767

sw.bb644:                                         ; preds = %if.then628
  %fld645 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx647 = bitcast [1 x %union.rtunion_def]* %fld645 to %struct.rtx_def**
  %76 = load %struct.rtx_def** %rtx647, align 8, !tbaa !7
  %77 = getelementptr inbounds %struct.rtx_def* %76, i64 0, i32 0
  %bf.load648 = load i32* %77, align 8
  %bf.lshr649 = lshr i32 %bf.load648, 16
  %bf.clear650 = and i32 %bf.lshr649, 255
  %cmp651 = icmp eq i32 %bf.clear650, 0
  %arrayidx655 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx656 = bitcast %union.rtunion_def* %arrayidx655 to %struct.rtx_def**
  %78 = load %struct.rtx_def** %rtx656, align 8, !tbaa !7
  br i1 %cmp651, label %if.then653, label %if.end660

if.then653:                                       ; preds = %sw.bb644
  %79 = getelementptr inbounds %struct.rtx_def* %78, i64 0, i32 0
  %bf.load657 = load i32* %79, align 8
  %bf.lshr658 = lshr i32 %bf.load657, 16
  %bf.clear659 = and i32 %bf.lshr658, 255
  br label %if.end660

if.end660:                                        ; preds = %sw.bb644, %if.then653
  %op_mode.0 = phi i32 [ %bf.clear659, %if.then653 ], [ %bf.clear650, %sw.bb644 ]
  %call667 = call %struct.rtx_def* @simplify_relational_operation(i32 %bf.clear, i32 %op_mode.0, %struct.rtx_def* %76, %struct.rtx_def* %78) #4
  br label %if.end767

sw.bb668:                                         ; preds = %if.then628, %if.then628
  %bf.load669 = load i32* %1, align 8
  %bf.lshr670 = lshr i32 %bf.load669, 16
  %bf.clear671 = and i32 %bf.lshr670, 255
  %fld672 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx674 = bitcast [1 x %union.rtunion_def]* %fld672 to %struct.rtx_def**
  %80 = load %struct.rtx_def** %rtx674, align 8, !tbaa !7
  %arrayidx676 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx677 = bitcast %union.rtunion_def* %arrayidx676 to %struct.rtx_def**
  %81 = load %struct.rtx_def** %rtx677, align 8, !tbaa !7
  %call678 = call %struct.rtx_def* @simplify_binary_operation(i32 %bf.clear, i32 %bf.clear671, %struct.rtx_def* %80, %struct.rtx_def* %81) #4
  br label %if.end767

sw.bb679:                                         ; preds = %if.then628, %if.then628
  %cmp680 = icmp eq i32 %op0_mode.0, 59
  br i1 %cmp680, label %if.then682, label %if.end683

if.then682:                                       ; preds = %sw.bb679
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 2772, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.subst_constants, i64 0, i64 0)) #7
  unreachable

if.end683:                                        ; preds = %sw.bb679
  %cmp684 = icmp eq i32 %bf.clear, 72
  %fld687 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx689 = bitcast [1 x %union.rtunion_def]* %fld687 to %struct.rtx_def**
  br i1 %cmp684, label %if.then686, label %if.then751

if.then686:                                       ; preds = %if.end683
  %82 = load %struct.rtx_def** %rtx689, align 8, !tbaa !7
  %83 = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 0
  %bf.load690 = load i32* %83, align 8
  %bf.clear691 = and i32 %bf.load690, 65535
  %idxprom692973 = zext i32 %bf.clear691 to i64
  %arrayidx693 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom692973
  %84 = load i8* %arrayidx693, align 1, !tbaa !33
  %cmp695 = icmp eq i8 %84, 60
  %bf.clear700 = and i32 %bf.load690, 16711680
  %cmp701 = icmp eq i32 %bf.clear700, 0
  %or.cond978 = and i1 %cmp695, %cmp701
  br i1 %or.cond978, label %land.lhs.true703, label %if.then751

land.lhs.true703:                                 ; preds = %if.then686
  %call704 = call i32 @side_effects_p(%struct.rtx_def* %82) #4
  %tobool705 = icmp eq i32 %call704, 0
  br i1 %tobool705, label %land.lhs.true706, label %if.then751

land.lhs.true706:                                 ; preds = %land.lhs.true703
  %fld707 = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 1
  %rtx709 = bitcast [1 x %union.rtunion_def]* %fld707 to %struct.rtx_def**
  %85 = load %struct.rtx_def** %rtx709, align 8, !tbaa !7
  %compare_src710 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 21
  %86 = load %struct.rtx_def** %compare_src710, align 8, !tbaa !69
  %cmp711 = icmp eq %struct.rtx_def* %85, %86
  br i1 %cmp711, label %land.lhs.true713, label %if.then751

land.lhs.true713:                                 ; preds = %land.lhs.true706
  %arrayidx715 = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 1, i64 1
  %rtx716 = bitcast %union.rtunion_def* %arrayidx715 to %struct.rtx_def**
  %87 = load %struct.rtx_def** %rtx716, align 8, !tbaa !7
  %88 = getelementptr inbounds %struct.rtx_def* %87, i64 0, i32 0
  %bf.load717 = load i32* %88, align 8
  %bf.clear719 = and i32 %bf.load717, 16711680
  %cmp720 = icmp eq i32 %bf.clear719, 0
  br i1 %cmp720, label %if.then722, label %if.then751

if.then722:                                       ; preds = %land.lhs.true713
  %bf.load723 = load i32* %83, align 8
  %bf.clear724 = and i32 %bf.load723, 65535
  %compare_mode725 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 22
  %89 = load i32* %compare_mode725, align 4, !tbaa !70
  %call732 = call %struct.rtx_def* @simplify_relational_operation(i32 %bf.clear724, i32 %89, %struct.rtx_def* %85, %struct.rtx_def* %87) #4
  %90 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !7
  %cmp733 = icmp eq %struct.rtx_def* %call732, %90
  br i1 %cmp733, label %if.then735, label %if.else739

if.then735:                                       ; preds = %if.then722
  %arrayidx737 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 2
  br label %if.end749

if.else739:                                       ; preds = %if.then722
  %91 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !7
  %cmp740 = icmp eq %struct.rtx_def* %call732, %91
  br i1 %cmp740, label %if.then742, label %if.then751

if.then742:                                       ; preds = %if.else739
  %arrayidx744 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  br label %if.end749

if.end749:                                        ; preds = %if.then742, %if.then735
  %new.0.in.in = phi %union.rtunion_def* [ %arrayidx737, %if.then735 ], [ %arrayidx744, %if.then742 ]
  %new.0.in = bitcast %union.rtunion_def* %new.0.in.in to %struct.rtx_def**
  %new.0 = load %struct.rtx_def** %new.0.in, align 8
  %tobool750 = icmp eq %struct.rtx_def* %new.0, null
  br i1 %tobool750, label %if.then751, label %if.then769

if.then751:                                       ; preds = %if.end683, %if.then686, %land.lhs.true706, %land.lhs.true713, %if.else739, %land.lhs.true703, %if.end749
  %bf.load752 = load i32* %1, align 8
  %bf.lshr753 = lshr i32 %bf.load752, 16
  %bf.clear754 = and i32 %bf.lshr753, 255
  %92 = load %struct.rtx_def** %rtx689, align 8, !tbaa !7
  %arrayidx759 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx760 = bitcast %union.rtunion_def* %arrayidx759 to %struct.rtx_def**
  %93 = load %struct.rtx_def** %rtx760, align 8, !tbaa !7
  %arrayidx762 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 2
  %rtx763 = bitcast %union.rtunion_def* %arrayidx762 to %struct.rtx_def**
  %94 = load %struct.rtx_def** %rtx763, align 8, !tbaa !7
  %call764 = call %struct.rtx_def* @simplify_ternary_operation(i32 %bf.clear, i32 %bf.clear754, i32 %op0_mode.0, %struct.rtx_def* %92, %struct.rtx_def* %93, %struct.rtx_def* %94) #4
  br label %if.end767

if.end767:                                        ; preds = %if.end636, %if.end660, %sw.bb668, %if.then751
  %new.1 = phi %struct.rtx_def* [ %call764, %if.then751 ], [ %call678, %sw.bb668 ], [ %call667, %if.end660 ], [ %call643, %if.end636 ]
  %tobool768 = icmp eq %struct.rtx_def* %new.1, null
  br i1 %tobool768, label %if.end771, label %if.then769

if.then769:                                       ; preds = %if.end749, %if.end767
  %new.1988 = phi %struct.rtx_def* [ %new.1, %if.end767 ], [ %new.0, %if.end749 ]
  %call770 = call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %new.1988, i32 1) #4
  br label %if.end771

if.end771:                                        ; preds = %for.end524, %if.then628, %switch.early.test, %if.then11, %land.lhs.true27, %land.lhs.true21, %sw.bb10, %if.end767, %land.lhs.true80, %land.lhs.true76, %if.then410, %if.end234, %lor.lhs.false394, %if.then453, %land.lhs.true444, %land.lhs.true435, %land.lhs.true427, %land.lhs.true422, %if.then89, %sw.bb68, %if.then64, %if.else, %if.then30, %land.lhs.true18, %sw.bb1, %if.then, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %if.then769
  ret void
}

declare i32 @apply_change_group() #1

declare i32 @memory_address_p(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @change_address(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare i32 @aggregate_value_p(%union.tree_node*) #1

declare %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_reg_rtx(i32) #1

declare %struct.rtx_def* @gen_lowpart(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @get_exception_pointer(%struct.function*) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @integrate_decl_tree(%union.tree_node* %let, %struct.inline_remap* %map) #0 {
entry:
  %r = alloca %struct.rtx_def*, align 8
  %call = call %union.tree_node* @make_node(i32 4) #4
  %block_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 3
  %0 = load %struct.varray_head_tag** %block_map, align 8, !tbaa !61
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 1
  %1 = load i64* %elements_used, align 8, !tbaa !93
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 0
  %2 = load i64* %num_elements, align 8, !tbaa !79
  %cmp = icmp ult i64 %1, %2
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %mul = shl i64 %2, 1
  %call5 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %0, i64 %mul) #4
  store %struct.varray_head_tag* %call5, %struct.varray_head_tag** %block_map, align 8, !tbaa !61
  %elements_used8.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call5, i64 0, i32 1
  %.pre = load i64* %elements_used8.phi.trans.insert, align 8, !tbaa !93
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %3 = phi i64 [ %1, %entry ], [ %.pre, %if.then ]
  %4 = phi %struct.varray_head_tag* [ %0, %entry ], [ %call5, %if.then ]
  %elements_used8 = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 1
  %inc = add i64 %3, 1
  store i64 %inc, i64* %elements_used8, align 8, !tbaa !93
  %data = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %3
  store %union.tree_node* %call, %union.tree_node** %arrayidx, align 8, !tbaa !7
  %vars11 = getelementptr inbounds %union.tree_node* %let, i64 0, i32 0, i32 2
  %5 = bitcast i32* %vars11 to %union.tree_node**
  %t.0137 = load %union.tree_node** %5, align 8
  %tobool138 = icmp eq %union.tree_node* %t.0137, null
  br i1 %tobool138, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %vars = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2
  %6 = bitcast i32* %vars to %union.tree_node**
  %fndecl = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end68
  %t.0140 = phi %union.tree_node* [ %t.0137, %for.body.lr.ph ], [ %t.0, %if.end68 ]
  %next.0139 = phi %union.tree_node** [ %6, %for.body.lr.ph ], [ %chain, %if.end68 ]
  %7 = load %union.tree_node** %fndecl, align 8, !tbaa !60
  %8 = load %union.tree_node** @current_function_decl, align 8, !tbaa !7
  %call12 = call %union.tree_node* @copy_decl_for_inlining(%union.tree_node* %t.0140, %union.tree_node* %7, %union.tree_node* %8)
  %rtl = getelementptr inbounds %union.tree_node* %t.0140, i64 0, i32 0, i32 17
  %9 = load %struct.rtx_def** %rtl, align 8, !tbaa !35
  %cmp13 = icmp eq %struct.rtx_def* %9, null
  br i1 %cmp13, label %if.end68, label %cond.end

cond.end:                                         ; preds = %for.body
  %call22 = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %9, %struct.inline_remap* %map, i32 1)
  %rtl24 = getelementptr inbounds %union.tree_node* %call12, i64 0, i32 0, i32 17
  store %struct.rtx_def* %call22, %struct.rtx_def** %rtl24, align 8, !tbaa !35
  %tobool27 = icmp eq %struct.rtx_def* %call22, null
  br i1 %tobool27, label %cond.false31, label %cond.end34

cond.false31:                                     ; preds = %cond.end
  call void @make_decl_rtl(%union.tree_node* %call12, i8* null) #4
  %10 = load %struct.rtx_def** %rtl24, align 8, !tbaa !35
  br label %cond.end34

cond.end34:                                       ; preds = %cond.end, %cond.false31
  %cond35 = phi %struct.rtx_def* [ %10, %cond.false31 ], [ %call22, %cond.end ]
  store %struct.rtx_def* %cond35, %struct.rtx_def** %r, align 8, !tbaa !7
  call fastcc void @subst_constants(%struct.rtx_def** %r, %struct.rtx_def* null, %struct.inline_remap* %map, i32 1)
  %11 = load %struct.rtx_def** %r, align 8, !tbaa !7
  store %struct.rtx_def* %11, %struct.rtx_def** %rtl24, align 8, !tbaa !35
  %12 = load %struct.rtx_def** %r, align 8, !tbaa !7
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load = load i32* %13, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end66 [
    i32 61, label %if.then39
    i32 65, label %if.then45
  ]

if.then39:                                        ; preds = %cond.end34
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx40 to i32*
  %14 = load i32* %rtuint, align 4, !tbaa !24
  %idxprom = zext i32 %14 to i64
  %15 = load %struct.function** @cfun, align 8, !tbaa !7
  %emit = getelementptr inbounds %struct.function* %15, i64 0, i32 3
  %16 = load %struct.emit_status** %emit, align 8, !tbaa !49
  %regno_decl = getelementptr inbounds %struct.emit_status* %16, i64 0, i32 11
  %17 = load %union.tree_node*** %regno_decl, align 8, !tbaa !114
  %arrayidx41 = getelementptr inbounds %union.tree_node** %17, i64 %idxprom
  store %union.tree_node* %call12, %union.tree_node** %arrayidx41, align 8, !tbaa !7
  br label %if.end66

if.then45:                                        ; preds = %cond.end34
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtuint50 = bitcast %union.rtunion_def* %arrayidx49 to i32*
  %19 = load i32* %rtuint50, align 4, !tbaa !24
  %idxprom51 = zext i32 %19 to i64
  %20 = load %struct.function** @cfun, align 8, !tbaa !7
  %emit52 = getelementptr inbounds %struct.function* %20, i64 0, i32 3
  %21 = load %struct.emit_status** %emit52, align 8, !tbaa !49
  %regno_decl53 = getelementptr inbounds %struct.emit_status* %21, i64 0, i32 11
  %22 = load %union.tree_node*** %regno_decl53, align 8, !tbaa !114
  %arrayidx54 = getelementptr inbounds %union.tree_node** %22, i64 %idxprom51
  store %union.tree_node* %call12, %union.tree_node** %arrayidx54, align 8, !tbaa !7
  %23 = load %struct.rtx_def** %r, align 8, !tbaa !7
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 1
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx57, align 8, !tbaa !7
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0
  %rtuint60 = bitcast %union.rtunion_def* %arrayidx59 to i32*
  %25 = load i32* %rtuint60, align 4, !tbaa !24
  %idxprom61 = zext i32 %25 to i64
  %26 = load %struct.function** @cfun, align 8, !tbaa !7
  %emit62 = getelementptr inbounds %struct.function* %26, i64 0, i32 3
  %27 = load %struct.emit_status** %emit62, align 8, !tbaa !49
  %regno_decl63 = getelementptr inbounds %struct.emit_status* %27, i64 0, i32 11
  %28 = load %union.tree_node*** %regno_decl63, align 8, !tbaa !114
  %arrayidx64 = getelementptr inbounds %union.tree_node** %28, i64 %idxprom61
  store %union.tree_node* %call12, %union.tree_node** %arrayidx64, align 8, !tbaa !7
  br label %if.end66

if.end66:                                         ; preds = %cond.end34, %if.then45, %if.then39
  %call67 = call i32 @apply_change_group() #4
  br label %if.end68

if.end68:                                         ; preds = %for.body, %if.end66
  store %union.tree_node* %call12, %union.tree_node** %next.0139, align 8, !tbaa !7
  %chain = getelementptr inbounds %union.tree_node* %call12, i64 0, i32 0, i32 0, i32 0
  %chain70 = getelementptr inbounds %union.tree_node* %t.0140, i64 0, i32 0, i32 0, i32 0
  %t.0 = load %union.tree_node** %chain70, align 8
  %tobool = icmp eq %union.tree_node* %t.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %if.end68, %if.end
  %29 = getelementptr inbounds %union.tree_node* %let, i64 0, i32 0, i32 4
  %t.1133 = load %union.tree_node** %29, align 8
  %tobool75134 = icmp eq %union.tree_node* %t.1133, null
  br i1 %tobool75134, label %for.end84, label %for.body76.lr.ph

for.body76.lr.ph:                                 ; preds = %for.end
  %30 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 4
  br label %for.body76

for.body76:                                       ; preds = %for.body76.lr.ph, %for.body76
  %t.1136 = phi %union.tree_node* [ %t.1133, %for.body76.lr.ph ], [ %t.1, %for.body76 ]
  %next.1135 = phi %union.tree_node** [ %30, %for.body76.lr.ph ], [ %chain80, %for.body76 ]
  %call77 = call fastcc %union.tree_node* @integrate_decl_tree(%union.tree_node* %t.1136, %struct.inline_remap* %map)
  store %union.tree_node* %call77, %union.tree_node** %next.1135, align 8, !tbaa !7
  %supercontext = getelementptr inbounds %union.tree_node* %call77, i64 0, i32 0, i32 5
  %31 = bitcast i48* %supercontext to %union.tree_node**
  store %union.tree_node* %call, %union.tree_node** %31, align 8, !tbaa !115
  %32 = load %union.tree_node** %next.1135, align 8, !tbaa !7
  %chain80 = getelementptr inbounds %union.tree_node* %32, i64 0, i32 0, i32 0, i32 0
  %chain83 = getelementptr inbounds %union.tree_node* %t.1136, i64 0, i32 0, i32 0, i32 0
  %t.1 = load %union.tree_node** %chain83, align 8
  %tobool75 = icmp eq %union.tree_node* %t.1, null
  br i1 %tobool75, label %for.end84, label %for.body76

for.end84:                                        ; preds = %for.body76, %for.end
  %used_flag = getelementptr inbounds %union.tree_node* %let, i64 0, i32 0, i32 0, i32 2
  %bf.load86 = load i32* %used_flag, align 8
  %bf.clear87 = and i32 %bf.load86, 65536
  %used_flag89 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %bf.load90 = load i32* %used_flag89, align 8
  %bf.clear91 = and i32 %bf.load90, -65537
  %bf.set = or i32 %bf.clear91, %bf.clear87
  store i32 %bf.set, i32* %used_flag89, align 8
  %33 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 6, i32 0
  %let.c = ptrtoint %union.tree_node* %let to i64
  store i64 %let.c, i64* %33, align 8, !tbaa !91
  ret %union.tree_node* %call
}

declare void @expand_start_bindings_and_block(i32, %union.tree_node*) #1

declare void @specqsort(i8*, i32, i32, i32 (...)*) #1

; Function Attrs: nounwind readonly uwtable
define internal i32 @compare_blocks(i8* nocapture readonly %v1, i8* nocapture readonly %v2) #5 {
entry:
  %0 = bitcast i8* %v1 to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !7
  %2 = bitcast i8* %v2 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !7
  %abstract_origin = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 6
  %4 = bitcast %union.anon* %abstract_origin to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !91
  %abstract_origin2 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 6
  %6 = bitcast %union.anon* %abstract_origin2 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !91
  %cmp = icmp eq %union.tree_node* %5, %7
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp3 = icmp ult %union.tree_node* %5, %7
  %cond = select i1 %cmp3, i32 -1, i32 1
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %cond, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

declare void @emit_queue() #1

declare void @do_pending_stack_adjust() #1

declare void @emit_stack_save(i32, %struct.rtx_def**, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_insn_list(%struct.rtx_def* %insns, %struct.inline_remap* %map, %struct.rtx_def* %static_chain_value) #0 {
entry:
  %tobool744 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool744, label %for.end572, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %orig_asm_operands_vector = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 12
  %inline_target = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 11
  %reg_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 4
  %const_equiv_varray = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9
  %insn_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 6
  %integrating = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 0
  %last_pc_value = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 20
  %local_return_label = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 15
  %label_map.i = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 5
  %const_age = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 10
  %block_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end562
  %static_chain_value.addr.0752 = phi %struct.rtx_def* [ %static_chain_value, %for.body.lr.ph ], [ %static_chain_value.addr.2741, %if.end562 ]
  %insn.0747 = phi %struct.rtx_def* [ %insns, %for.body.lr.ph ], [ %121, %if.end562 ]
  %static_chain_mem.0745 = phi %struct.rtx_def* [ null, %for.body.lr.ph ], [ %static_chain_mem.2740, %if.end562 ]
  store %struct.rtvec_def* null, %struct.rtvec_def** %orig_asm_operands_vector, align 8, !tbaa !105
  %0 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb329
    i32 34, label %sw.bb367
    i32 36, label %sw.bb446
    i32 35, label %sw.bb457
    i32 37, label %sw.bb459
  ]

sw.bb:                                            ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %2 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 32), align 1, !tbaa !33
  %cmp = icmp eq i8 %2, 105
  %3 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  br i1 %cmp, label %cond.true, label %cond.end20

cond.true:                                        ; preds = %sw.bb
  %bf.load8 = load i32* %3, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 47
  br i1 %cmp10, label %cond.end20, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.0747, %struct.rtx_def* %1) #4
  br label %cond.end20

cond.end20:                                       ; preds = %sw.bb, %cond.true, %cond.false
  %cond21 = phi %struct.rtx_def* [ %1, %cond.true ], [ %call, %cond.false ], [ null, %sw.bb ]
  %bf.load22 = load i32* %3, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 48
  br i1 %cmp24, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %cond.end20
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx28, align 8, !tbaa !7
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load29 = load i32* %5, align 8
  %6 = and i32 %bf.load29, 1073807359
  %7 = icmp eq i32 %6, 1073741885
  br i1 %7, label %if.end562, label %if.end

if.end:                                           ; preds = %land.lhs.true, %cond.end20
  %8 = load %struct.rtx_def** %inline_target, align 8, !tbaa !88
  %cmp40 = icmp eq %struct.rtx_def* %8, null
  %cmp43 = icmp ne %struct.rtx_def* %cond21, null
  %or.cond = and i1 %cmp40, %cmp43
  br i1 %or.cond, label %land.lhs.true45, label %if.else133

land.lhs.true45:                                  ; preds = %if.end
  %fld46 = getelementptr inbounds %struct.rtx_def* %cond21, i64 0, i32 1
  %rtx48 = bitcast [1 x %union.rtunion_def]* %fld46 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx48, align 8, !tbaa !7
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load49 = load i32* %10, align 8
  %11 = and i32 %bf.load49, 1073807359
  %12 = icmp eq i32 %11, 1073741885
  br i1 %12, label %if.then61, label %if.else133

if.then61:                                        ; preds = %land.lhs.true45
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %cond21, i64 0, i32 1, i64 1
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx64, align 8, !tbaa !7
  %call65 = tail call i32 @volatile_refs_p(%struct.rtx_def* %13) #4
  %tobool66 = icmp eq i32 %call65, 0
  br i1 %tobool66, label %if.else, label %if.then67

if.then67:                                        ; preds = %if.then61
  %call68 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %1, %struct.inline_remap* %map, i32 0)
  %call69 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call68) #4
  %14 = getelementptr inbounds %struct.rtx_def* %call69, i64 0, i32 0
  %bf.load70 = load i32* %14, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  %idxprom72722 = zext i32 %bf.clear71 to i64
  %arrayidx73 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom72722
  %15 = load i8* %arrayidx73, align 1, !tbaa !33
  %cmp75 = icmp eq i8 %15, 105
  br i1 %cmp75, label %cond.true77, label %if.then101

cond.true77:                                      ; preds = %if.then67
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %call69, i64 0, i32 1, i64 3
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx80, align 8, !tbaa !7
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load81 = load i32* %17, align 8
  %bf.clear82 = and i32 %bf.load81, 65535
  %cmp83 = icmp eq i32 %bf.clear82, 47
  br i1 %cmp83, label %cond.end97, label %cond.false89

cond.false89:                                     ; preds = %cond.true77
  %call93 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call69, %struct.rtx_def* %16) #4
  br label %cond.end97

cond.end97:                                       ; preds = %cond.true77, %cond.false89
  %cond98 = phi %struct.rtx_def* [ %call93, %cond.false89 ], [ %16, %cond.true77 ]
  %cmp99 = icmp eq %struct.rtx_def* %cond98, null
  br i1 %cmp99, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.then67, %cond.end97
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1373, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.copy_insn_list, i64 0, i64 0)) #7
  unreachable

if.end102:                                        ; preds = %cond.end97
  %arrayidx104 = getelementptr inbounds %struct.rtx_def* %cond98, i64 0, i32 1, i64 0
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx105, align 8, !tbaa !7
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load106 = load i32* %19, align 8
  %bf.lshr107 = lshr i32 %bf.load106, 16
  %bf.clear108 = and i32 %bf.lshr107, 255
  %call109 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear108) #4
  %20 = getelementptr inbounds %union.rtunion_def* %arrayidx104, i64 0, i32 0
  %call109.c = ptrtoint %struct.rtx_def* %call109 to i64
  store i64 %call109.c, i64* %20, align 8, !tbaa !7
  br label %if.end328

if.else:                                          ; preds = %if.then61
  %21 = load %struct.rtx_def** %rtx48, align 8, !tbaa !7
  %22 = load %struct.rtx_def** %rtx64, align 8, !tbaa !7
  %call119 = tail call i32 @rtx_equal_p(%struct.rtx_def* %21, %struct.rtx_def* %22) #4
  %tobool120 = icmp eq i32 %call119, 0
  br i1 %tobool120, label %if.end562, label %land.lhs.true121

land.lhs.true121:                                 ; preds = %if.else
  %arrayidx123 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 6
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx124, align 8, !tbaa !7
  %cmp125 = icmp eq %struct.rtx_def* %23, null
  br i1 %cmp125, label %if.end562, label %if.then127

if.then127:                                       ; preds = %land.lhs.true121
  %call128 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %1, %struct.inline_remap* %map, i32 0)
  %call129 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call128) #4
  br label %if.end328

if.else133:                                       ; preds = %land.lhs.true45, %if.end
  %cmp140 = icmp eq i32 %bf.clear23, 49
  %or.cond762 = and i1 %cmp40, %cmp140
  br i1 %or.cond762, label %land.lhs.true142, label %if.else159

land.lhs.true142:                                 ; preds = %if.else133
  %arrayidx144 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx145, align 8, !tbaa !7
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load146 = load i32* %25, align 8
  %26 = and i32 %bf.load146, 1073807359
  %27 = icmp eq i32 %26, 1073741885
  br i1 %27, label %if.end562, label %if.else159

if.else159:                                       ; preds = %land.lhs.true142, %if.else133
  %cmp160 = icmp ne %struct.rtx_def* %static_chain_value.addr.0752, null
  %or.cond573 = and i1 %cmp160, %cmp43
  br i1 %or.cond573, label %land.lhs.true165, label %if.else249

land.lhs.true165:                                 ; preds = %if.else159
  %28 = load %struct.rtx_def** @static_chain_incoming_rtx, align 8, !tbaa !7
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load166 = load i32* %29, align 8
  %bf.clear167 = and i32 %bf.load166, 65535
  %cmp168 = icmp eq i32 %bf.clear167, 66
  br i1 %cmp168, label %land.lhs.true170, label %land.lhs.true203

land.lhs.true170:                                 ; preds = %land.lhs.true165
  %fld171 = getelementptr inbounds %struct.rtx_def* %cond21, i64 0, i32 1
  %rtx173 = bitcast [1 x %union.rtunion_def]* %fld171 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx173, align 8, !tbaa !7
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load174 = load i32* %31, align 8
  %bf.clear175 = and i32 %bf.load174, 65535
  %cmp176 = icmp eq i32 %bf.clear175, 61
  br i1 %cmp176, label %land.lhs.true178, label %if.else197.land.lhs.true203_crit_edge

land.lhs.true178:                                 ; preds = %land.lhs.true170
  %arrayidx180 = getelementptr inbounds %struct.rtx_def* %cond21, i64 0, i32 1, i64 1
  %rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx181, align 8, !tbaa !7
  %arrayidx183 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx184, align 8, !tbaa !7
  %call185 = tail call i32 @rtx_equal_p(%struct.rtx_def* %32, %struct.rtx_def* %33) #4
  %tobool186 = icmp eq i32 %call185, 0
  br i1 %tobool186, label %if.else197.land.lhs.true203_crit_edge, label %if.then187

if.then187:                                       ; preds = %land.lhs.true178
  %34 = load %struct.rtx_def** @static_chain_incoming_rtx, align 8, !tbaa !7
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load188 = load i32* %35, align 8
  %bf.lshr189 = lshr i32 %bf.load188, 16
  %bf.clear190 = and i32 %bf.lshr189, 255
  %36 = load %struct.rtx_def** %rtx173, align 8, !tbaa !7
  %call194 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear190, %struct.rtx_def* %36) #4
  %call195 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %1, %struct.inline_remap* %map, i32 0)
  %call196 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call195) #4
  br label %if.end328

if.else197.land.lhs.true203_crit_edge:            ; preds = %land.lhs.true170, %land.lhs.true178
  %.pre = load %struct.rtx_def** @static_chain_incoming_rtx, align 8, !tbaa !7
  br label %land.lhs.true203

land.lhs.true203:                                 ; preds = %if.else197.land.lhs.true203_crit_edge, %land.lhs.true165
  %37 = phi %struct.rtx_def* [ %.pre, %if.else197.land.lhs.true203_crit_edge ], [ %28, %land.lhs.true165 ]
  %arrayidx205 = getelementptr inbounds %struct.rtx_def* %cond21, i64 0, i32 1, i64 0
  %rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx206, align 8, !tbaa !7
  %call207 = tail call i32 @rtx_equal_p(%struct.rtx_def* %38, %struct.rtx_def* %37) #4
  %tobool208 = icmp eq i32 %call207, 0
  br i1 %tobool208, label %lor.lhs.false, label %if.end562

lor.lhs.false:                                    ; preds = %land.lhs.true203
  %tobool209 = icmp eq %struct.rtx_def* %static_chain_mem.0745, null
  br i1 %tobool209, label %land.lhs.true223, label %land.lhs.true210

land.lhs.true210:                                 ; preds = %lor.lhs.false
  %39 = load %struct.rtx_def** %rtx206, align 8, !tbaa !7
  %call214 = tail call i32 @rtx_equal_p(%struct.rtx_def* %39, %struct.rtx_def* %static_chain_mem.0745) #4
  %tobool215 = icmp eq i32 %call214, 0
  br i1 %tobool215, label %land.lhs.true223, label %if.end562

land.lhs.true223:                                 ; preds = %lor.lhs.false, %land.lhs.true210
  %arrayidx225 = getelementptr inbounds %struct.rtx_def* %cond21, i64 0, i32 1, i64 1
  %rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx226, align 8, !tbaa !7
  %41 = load %struct.rtx_def** @static_chain_incoming_rtx, align 8, !tbaa !7
  %call227 = tail call i32 @rtx_equal_p(%struct.rtx_def* %40, %struct.rtx_def* %41) #4
  %tobool228 = icmp eq i32 %call227, 0
  br i1 %tobool228, label %lor.lhs.false229, label %if.then237

lor.lhs.false229:                                 ; preds = %land.lhs.true223
  br i1 %tobool209, label %if.else249, label %land.lhs.true231

land.lhs.true231:                                 ; preds = %lor.lhs.false229
  %42 = load %struct.rtx_def** %rtx226, align 8, !tbaa !7
  %call235 = tail call i32 @rtx_equal_p(%struct.rtx_def* %42, %struct.rtx_def* %static_chain_mem.0745) #4
  %tobool236 = icmp eq i32 %call235, 0
  br i1 %tobool236, label %if.else249, label %if.then237

if.then237:                                       ; preds = %land.lhs.true231, %land.lhs.true223
  %43 = load %struct.rtx_def** %rtx206, align 8, !tbaa !7
  %call241 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %43, %struct.inline_remap* %map, i32 1)
  %call242 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call241, %struct.rtx_def* %static_chain_value.addr.0752) #4
  %44 = load %struct.rtx_def** @static_chain_incoming_rtx, align 8, !tbaa !7
  %45 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 0
  %bf.load243 = load i32* %45, align 8
  %bf.clear244 = and i32 %bf.load243, 65535
  %cmp245 = icmp eq i32 %bf.clear244, 66
  %static_chain_value.addr.0. = select i1 %cmp245, %struct.rtx_def* %static_chain_value.addr.0752, %struct.rtx_def* null
  br label %if.end328

if.else249:                                       ; preds = %if.else159, %land.lhs.true231, %lor.lhs.false229
  br i1 %cmp43, label %land.lhs.true252, label %if.else320

land.lhs.true252:                                 ; preds = %if.else249
  %fld253 = getelementptr inbounds %struct.rtx_def* %cond21, i64 0, i32 1
  %rtx255 = bitcast [1 x %union.rtunion_def]* %fld253 to %struct.rtx_def**
  %46 = load %struct.rtx_def** %rtx255, align 8, !tbaa !7
  %47 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !7
  %call256 = tail call i32 @rtx_equal_p(%struct.rtx_def* %46, %struct.rtx_def* %47) #4
  %tobool257 = icmp eq i32 %call256, 0
  br i1 %tobool257, label %if.else320, label %if.then258

if.then258:                                       ; preds = %land.lhs.true252
  %48 = load %struct.rtx_def** %rtx255, align 8, !tbaa !7
  %arrayidx263 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx263 to i32*
  %49 = load i32* %rtuint, align 4, !tbaa !24
  %idxprom264 = zext i32 %49 to i64
  %50 = load %struct.rtx_def*** %reg_map, align 8, !tbaa !62
  %arrayidx265 = getelementptr inbounds %struct.rtx_def** %50, i64 %idxprom264
  %51 = load %struct.rtx_def** %arrayidx265, align 8, !tbaa !7
  %arrayidx267 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 0
  %rtuint268 = bitcast %union.rtunion_def* %arrayidx267 to i32*
  %52 = load i32* %rtuint268, align 4, !tbaa !24
  %idxprom269 = zext i32 %52 to i64
  %53 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  %rtx271 = getelementptr inbounds %struct.varray_head_tag* %53, i64 0, i32 4, i32 0, i64 %idxprom269, i32 0
  %54 = load %struct.rtx_def** %rtx271, align 8, !tbaa !82
  %55 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !7
  %call272 = tail call i32 @rtx_equal_p(%struct.rtx_def* %54, %struct.rtx_def* %55) #4
  %tobool273 = icmp eq i32 %call272, 0
  br i1 %tobool273, label %if.else275, label %if.end302

if.else275:                                       ; preds = %if.then258
  %56 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load276 = load i32* %56, align 8
  %bf.clear277 = and i32 %bf.load276, 65535
  %cmp278 = icmp eq i32 %bf.clear277, 75
  br i1 %cmp278, label %land.lhs.true280, label %if.else300

land.lhs.true280:                                 ; preds = %if.else275
  %fld281 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1
  %rtx283 = bitcast [1 x %union.rtunion_def]* %fld281 to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx283, align 8, !tbaa !7
  %58 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !7
  %call284 = tail call i32 @rtx_equal_p(%struct.rtx_def* %57, %struct.rtx_def* %58) #4
  %tobool285 = icmp eq i32 %call284, 0
  br i1 %tobool285, label %if.else300, label %land.lhs.true286

land.lhs.true286:                                 ; preds = %land.lhs.true280
  %arrayidx288 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1, i64 1
  %rtx289 = bitcast %union.rtunion_def* %arrayidx288 to %struct.rtx_def**
  %59 = load %struct.rtx_def** %rtx289, align 8, !tbaa !7
  %60 = getelementptr inbounds %struct.rtx_def* %59, i64 0, i32 0
  %bf.load290 = load i32* %60, align 8
  %bf.clear291 = and i32 %bf.load290, 65535
  %cmp292 = icmp eq i32 %bf.clear291, 54
  br i1 %cmp292, label %if.then294, label %if.else300

if.then294:                                       ; preds = %land.lhs.true286
  %rtwint = getelementptr inbounds %struct.rtx_def* %59, i64 0, i32 1, i64 0, i32 0
  %61 = load i64* %rtwint, align 8, !tbaa !104
  br label %if.end302

if.else300:                                       ; preds = %land.lhs.true280, %land.lhs.true286, %if.else275
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1474, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.copy_insn_list, i64 0, i64 0)) #7
  unreachable

if.end302:                                        ; preds = %if.then258, %if.then294
  %offset.0 = phi i64 [ %61, %if.then294 ], [ 0, %if.then258 ]
  %arrayidx304 = getelementptr inbounds %struct.rtx_def* %cond21, i64 0, i32 1, i64 1
  %rtx305 = bitcast %union.rtunion_def* %arrayidx304 to %struct.rtx_def**
  %62 = load %struct.rtx_def** %rtx305, align 8, !tbaa !7
  %63 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !7
  %call306 = tail call i32 @rtx_equal_p(%struct.rtx_def* %62, %struct.rtx_def* %63) #4
  %tobool307 = icmp eq i32 %call306, 0
  %64 = load %struct.rtx_def** %rtx305, align 8, !tbaa !7
  br i1 %tobool307, label %if.else312, label %if.end318

if.else312:                                       ; preds = %if.end302
  %sub = sub nsw i64 0, %offset.0
  %call316 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %64, i64 %sub) #4
  %call317 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call316, %struct.rtx_def* null) #4
  br label %if.end318

if.end318:                                        ; preds = %if.end302, %if.else312
  %temp.0 = phi %struct.rtx_def* [ %call317, %if.else312 ], [ %64, %if.end302 ]
  %65 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !tbaa !7
  %call319 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %65, %struct.rtx_def* %temp.0) #4
  br label %if.end328

if.else320:                                       ; preds = %land.lhs.true252, %if.else249
  %call321 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %1, %struct.inline_remap* %map, i32 0)
  %call322 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call321) #4
  br label %if.end328

if.end328:                                        ; preds = %if.then237, %if.end318, %if.else320, %if.then187, %if.end102, %if.then127
  %copy.0 = phi %struct.rtx_def* [ %call69, %if.end102 ], [ %call129, %if.then127 ], [ %call196, %if.then187 ], [ %call319, %if.end318 ], [ %call322, %if.else320 ], [ %call242, %if.then237 ]
  %static_chain_mem.1 = phi %struct.rtx_def* [ %static_chain_mem.0745, %if.end102 ], [ %static_chain_mem.0745, %if.then127 ], [ %call194, %if.then187 ], [ %static_chain_mem.0745, %if.end318 ], [ %static_chain_mem.0745, %if.else320 ], [ %static_chain_mem.0745, %if.then237 ]
  %static_chain_value.addr.1 = phi %struct.rtx_def* [ %static_chain_value.addr.0752, %if.end102 ], [ %static_chain_value.addr.0752, %if.then127 ], [ %static_chain_value.addr.0752, %if.then187 ], [ %static_chain_value.addr.0752, %if.end318 ], [ %static_chain_value.addr.0752, %if.else320 ], [ %static_chain_value.addr.0., %if.then237 ]
  tail call void @try_constants(%struct.rtx_def* %copy.0, %struct.inline_remap* %map)
  br label %sw.epilog

sw.bb329:                                         ; preds = %for.body
  %66 = load i32* %integrating, align 4, !tbaa !68
  %tobool330 = icmp eq i32 %66, 0
  br i1 %tobool330, label %if.else343, label %land.lhs.true331

land.lhs.true331:                                 ; preds = %sw.bb329
  %call332 = tail call i32 @returnjump_p(%struct.rtx_def* %insn.0747) #4
  %tobool333 = icmp eq i32 %call332, 0
  br i1 %tobool333, label %if.else343, label %if.then334

if.then334:                                       ; preds = %land.lhs.true331
  %67 = load %struct.rtx_def** %local_return_label, align 8, !tbaa !63
  %cmp335 = icmp eq %struct.rtx_def* %67, null
  br i1 %cmp335, label %if.then337, label %if.end340

if.then337:                                       ; preds = %if.then334
  %call338 = tail call %struct.rtx_def* @gen_label_rtx() #4
  store %struct.rtx_def* %call338, %struct.rtx_def** %local_return_label, align 8, !tbaa !63
  br label %if.end340

if.end340:                                        ; preds = %if.then337, %if.then334
  %68 = phi %struct.rtx_def* [ %call338, %if.then337 ], [ %67, %if.then334 ]
  %call342 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %68) #4
  br label %if.end348

if.else343:                                       ; preds = %land.lhs.true331, %sw.bb329
  %arrayidx345 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 3
  %rtx346 = bitcast %union.rtunion_def* %arrayidx345 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx346, align 8, !tbaa !7
  %call347 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %69, %struct.inline_remap* %map, i32 0)
  br label %if.end348

if.end348:                                        ; preds = %if.else343, %if.end340
  %pattern.0 = phi %struct.rtx_def* [ %call342, %if.end340 ], [ %call347, %if.else343 ]
  %call349 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %pattern.0) #4
  tail call void @try_constants(%struct.rtx_def* %call349, %struct.inline_remap* %map)
  %call350 = tail call i32 @any_condjump_p(%struct.rtx_def* %insn.0747) #4
  %tobool351 = icmp eq i32 %call350, 0
  br i1 %tobool351, label %sw.epilog, label %land.lhs.true352

land.lhs.true352:                                 ; preds = %if.end348
  %call353 = tail call i32 @onlyjump_p(%struct.rtx_def* %insn.0747) #4
  %tobool354 = icmp eq i32 %call353, 0
  br i1 %tobool354, label %sw.epilog, label %land.lhs.true355

land.lhs.true355:                                 ; preds = %land.lhs.true352
  %70 = load %struct.rtx_def** %last_pc_value, align 8, !tbaa !116
  %tobool356 = icmp eq %struct.rtx_def* %70, null
  br i1 %tobool356, label %sw.epilog, label %if.then357

if.then357:                                       ; preds = %land.lhs.true355
  %71 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !7
  %cmp359 = icmp eq %struct.rtx_def* %70, %71
  br i1 %cmp359, label %if.then361, label %if.else363

if.then361:                                       ; preds = %if.then357
  %call362 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call349) #4
  br label %if.end562

if.else363:                                       ; preds = %if.then357
  %call364 = tail call %struct.rtx_def* @emit_barrier() #4
  br label %sw.epilog

sw.bb367:                                         ; preds = %for.body
  %arrayidx369 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 3
  %rtx370 = bitcast %union.rtunion_def* %arrayidx369 to %struct.rtx_def**
  %72 = load %struct.rtx_def** %rtx370, align 8, !tbaa !7
  %73 = getelementptr inbounds %struct.rtx_def* %72, i64 0, i32 0
  %bf.load371 = load i32* %73, align 8
  %bf.clear372 = and i32 %bf.load371, 65535
  %cmp373 = icmp eq i32 %bf.clear372, 141
  br i1 %cmp373, label %for.cond376.preheader, label %if.end407

for.cond376.preheader:                            ; preds = %sw.bb367
  %arrayidx387 = getelementptr inbounds %struct.rtx_def* %72, i64 0, i32 1, i64 0
  %rtx388 = bitcast %union.rtunion_def* %arrayidx387 to %struct.rtx_def**
  %74 = load %struct.rtx_def** %rtx388, align 8, !tbaa !7
  %tobool389 = icmp eq %struct.rtx_def* %74, null
  br i1 %tobool389, label %for.inc, label %if.then390

if.then390:                                       ; preds = %for.cond376.preheader
  tail call void @start_sequence() #4
  tail call fastcc void @copy_insn_list(%struct.rtx_def* %74, %struct.inline_remap* %map, %struct.rtx_def* %static_chain_value.addr.0752)
  %call391 = tail call %struct.rtx_def* @get_insns() #4
  tail call void @end_sequence() #4
  %.pre758 = load %struct.rtx_def** %rtx370, align 8, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %for.cond376.preheader, %if.then390
  %75 = phi %struct.rtx_def* [ null, %for.cond376.preheader ], [ %call391, %if.then390 ]
  %76 = phi %struct.rtx_def* [ %72, %for.cond376.preheader ], [ %.pre758, %if.then390 ]
  %arrayidx387.1 = getelementptr inbounds %struct.rtx_def* %76, i64 0, i32 1, i64 1
  %rtx388.1 = bitcast %union.rtunion_def* %arrayidx387.1 to %struct.rtx_def**
  %77 = load %struct.rtx_def** %rtx388.1, align 8, !tbaa !7
  %tobool389.1 = icmp eq %struct.rtx_def* %77, null
  br i1 %tobool389.1, label %for.inc.1, label %if.then390.1

if.end407:                                        ; preds = %sw.bb367
  %call411 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %72, %struct.inline_remap* %map, i32 0)
  %call412 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call411) #4
  %bf.load413 = load i32* %0, align 8
  %bf.clear415 = and i32 %bf.load413, 16777216
  %78 = getelementptr inbounds %struct.rtx_def* %call412, i64 0, i32 0
  %bf.load416 = load i32* %78, align 8
  %bf.clear417 = and i32 %bf.load416, -16777217
  %bf.set = or i32 %bf.clear417, %bf.clear415
  store i32 %bf.set, i32* %78, align 8
  %bf.load418 = load i32* %0, align 8
  %bf.clear420 = and i32 %bf.load418, 67108864
  %bf.clear424 = and i32 %bf.set, -67108865
  %bf.set425 = or i32 %bf.clear424, %bf.clear420
  store i32 %bf.set425, i32* %78, align 8
  %arrayidx427 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 7
  %rtx428 = bitcast %union.rtunion_def* %arrayidx427 to %struct.rtx_def**
  %79 = load %struct.rtx_def** %rtx428, align 8, !tbaa !7
  %call429 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %79, %struct.inline_remap* %map, i32 0)
  %80 = getelementptr inbounds %struct.rtx_def* %call412, i64 0, i32 1, i64 7, i32 0
  %call429.c = ptrtoint %struct.rtx_def* %call429 to i64
  store i64 %call429.c, i64* %80, align 8, !tbaa !7
  tail call void @try_constants(%struct.rtx_def* %call412, %struct.inline_remap* %map)
  %81 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %if.end407
  %index = phi i64 [ 0, %if.end407 ], [ %index.next, %vector.body ]
  %broadcast.splatinsert = insertelement <4 x i64> undef, i64 %index, i32 0
  %broadcast.splat = shufflevector <4 x i64> %broadcast.splatinsert, <4 x i64> undef, <4 x i32> zeroinitializer
  %induction = add <4 x i64> %broadcast.splat, <i64 0, i64 1, i64 2, i64 3>
  %82 = getelementptr inbounds %struct.varray_head_tag* %81, i64 0, i32 4, i32 0, i64 %index, i32 0
  %83 = extractelement <4 x i64> %induction, i32 1
  %84 = getelementptr inbounds %struct.varray_head_tag* %81, i64 0, i32 4, i32 0, i64 %83, i32 0
  %85 = extractelement <4 x i64> %induction, i32 2
  %86 = getelementptr inbounds %struct.varray_head_tag* %81, i64 0, i32 4, i32 0, i64 %85, i32 0
  %87 = extractelement <4 x i64> %induction, i32 3
  %88 = getelementptr inbounds %struct.varray_head_tag* %81, i64 0, i32 4, i32 0, i64 %87, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %82, align 8, !tbaa !82
  store %struct.rtx_def* null, %struct.rtx_def** %84, align 8, !tbaa !82
  store %struct.rtx_def* null, %struct.rtx_def** %86, align 8, !tbaa !82
  store %struct.rtx_def* null, %struct.rtx_def** %88, align 8, !tbaa !82
  %index.next = add i64 %index, 4
  %89 = icmp eq i64 %index.next, 52
  br i1 %89, label %for.body436, label %vector.body, !llvm.loop !117

for.body436:                                      ; preds = %vector.body, %for.body436
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body436 ], [ 52, %vector.body ]
  %rtx442 = getelementptr inbounds %struct.varray_head_tag* %81, i64 0, i32 4, i32 0, i64 %indvars.iv, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %rtx442, align 8, !tbaa !82
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond, label %sw.epilog, label %for.body436, !llvm.loop !120

sw.bb446:                                         ; preds = %for.body
  %arrayidx448 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 5
  %rtint = bitcast %union.rtunion_def* %arrayidx448 to i32*
  %90 = load i32* %rtint, align 4, !tbaa !24
  %idxprom.i = sext i32 %90 to i64
  %91 = load %struct.rtx_def*** %label_map.i, align 8, !tbaa !1
  %arrayidx.i = getelementptr inbounds %struct.rtx_def** %91, i64 %idxprom.i
  %92 = load %struct.rtx_def** %arrayidx.i, align 8, !tbaa !7
  %cmp.i = icmp eq %struct.rtx_def* %92, null
  br i1 %cmp.i, label %if.then.i, label %get_label_from_map.exit

if.then.i:                                        ; preds = %sw.bb446
  %call.i = tail call %struct.rtx_def* @gen_label_rtx() #4
  %93 = load %struct.rtx_def*** %label_map.i, align 8, !tbaa !1
  %arrayidx3.i = getelementptr inbounds %struct.rtx_def** %93, i64 %idxprom.i
  store %struct.rtx_def* %call.i, %struct.rtx_def** %arrayidx3.i, align 8, !tbaa !7
  br label %get_label_from_map.exit

get_label_from_map.exit:                          ; preds = %sw.bb446, %if.then.i
  %x.0.i = phi %struct.rtx_def* [ %call.i, %if.then.i ], [ %92, %sw.bb446 ]
  %call450 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %x.0.i) #4
  %arrayidx452 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 6
  %rtstr = bitcast %union.rtunion_def* %arrayidx452 to i8**
  %94 = load i8** %rtstr, align 8, !tbaa !7
  %95 = getelementptr inbounds %struct.rtx_def* %call450, i64 0, i32 1, i64 6, i32 0
  %.c720 = ptrtoint i8* %94 to i64
  store i64 %.c720, i64* %95, align 8, !tbaa !7
  %96 = load i32* %const_age, align 4, !tbaa !72
  %inc456 = add i32 %96, 1
  store i32 %inc456, i32* %const_age, align 4, !tbaa !72
  br label %sw.epilog

sw.bb457:                                         ; preds = %for.body
  %call458 = tail call %struct.rtx_def* @emit_barrier() #4
  br label %sw.epilog

sw.bb459:                                         ; preds = %for.body
  %arrayidx461 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 4
  %rtint462 = bitcast %union.rtunion_def* %arrayidx461 to i32*
  %97 = load i32* %rtint462, align 4, !tbaa !24
  switch i32 %97, label %if.then497 [
    i32 -88, label %if.then465
    i32 -91, label %if.end562
    i32 -87, label %if.end562
    i32 -99, label %if.end562
  ]

if.then465:                                       ; preds = %sw.bb459
  %arrayidx467 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 5
  %rtint468 = bitcast %union.rtunion_def* %arrayidx467 to i32*
  %98 = load i32* %rtint468, align 4, !tbaa !24
  %idxprom.i727 = sext i32 %98 to i64
  %99 = load %struct.rtx_def*** %label_map.i, align 8, !tbaa !1
  %arrayidx.i729 = getelementptr inbounds %struct.rtx_def** %99, i64 %idxprom.i727
  %100 = load %struct.rtx_def** %arrayidx.i729, align 8, !tbaa !7
  %cmp.i730 = icmp eq %struct.rtx_def* %100, null
  br i1 %cmp.i730, label %if.then.i733, label %get_label_from_map.exit735

if.then.i733:                                     ; preds = %if.then465
  %call.i731 = tail call %struct.rtx_def* @gen_label_rtx() #4
  %101 = load %struct.rtx_def*** %label_map.i, align 8, !tbaa !1
  %arrayidx3.i732 = getelementptr inbounds %struct.rtx_def** %101, i64 %idxprom.i727
  store %struct.rtx_def* %call.i731, %struct.rtx_def** %arrayidx3.i732, align 8, !tbaa !7
  br label %get_label_from_map.exit735

get_label_from_map.exit735:                       ; preds = %if.then465, %if.then.i733
  %x.0.i734 = phi %struct.rtx_def* [ %call.i731, %if.then.i733 ], [ %100, %if.then465 ]
  %call470 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %x.0.i734) #4
  %arrayidx472 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 3
  %rtstr473 = bitcast %union.rtunion_def* %arrayidx472 to i8**
  %102 = load i8** %rtstr473, align 8, !tbaa !7
  %103 = getelementptr inbounds %struct.rtx_def* %call470, i64 0, i32 1, i64 6, i32 0
  %.c719 = ptrtoint i8* %102 to i64
  store i64 %.c719, i64* %103, align 8, !tbaa !7
  %104 = load i32* %const_age, align 4, !tbaa !72
  %inc478 = add i32 %104, 1
  store i32 %inc478, i32* %const_age, align 4, !tbaa !72
  br label %sw.epilog

if.then497:                                       ; preds = %sw.bb459
  %arrayidx499 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 3
  %rtstr500 = bitcast %union.rtunion_def* %arrayidx499 to i8**
  %105 = load i8** %rtstr500, align 8, !tbaa !7
  %call504 = tail call %struct.rtx_def* @emit_note(i8* %105, i32 %97) #4
  %tobool505 = icmp eq %struct.rtx_def* %call504, null
  br i1 %tobool505, label %if.end562, label %land.lhs.true506

land.lhs.true506:                                 ; preds = %if.then497
  %arrayidx508 = getelementptr inbounds %struct.rtx_def* %call504, i64 0, i32 1, i64 4
  %rtint509 = bitcast %union.rtunion_def* %arrayidx508 to i32*
  %106 = load i32* %rtint509, align 4, !tbaa !24
  %107 = and i32 %106, -2
  %switch = icmp eq i32 %107, -98
  br i1 %switch, label %land.lhs.true518, label %land.lhs.true539

land.lhs.true518:                                 ; preds = %land.lhs.true506
  %rttree = bitcast %union.rtunion_def* %arrayidx499 to %union.tree_node**
  %108 = load %union.tree_node** %rttree, align 8, !tbaa !7
  %tobool521 = icmp eq %union.tree_node* %108, null
  br i1 %tobool521, label %land.lhs.true539, label %if.then522

if.then522:                                       ; preds = %land.lhs.true518
  %109 = bitcast %union.tree_node* %108 to i8*
  %110 = load %struct.varray_head_tag** %block_map, align 8, !tbaa !61
  %data526 = getelementptr inbounds %struct.varray_head_tag* %110, i64 0, i32 4
  %111 = bitcast %union.varray_data_tag* %data526 to i8*
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %110, i64 0, i32 1
  %112 = load i64* %elements_used, align 8, !tbaa !93
  %call529 = tail call i8* @bsearch(i8* %109, i8* %111, i64 %112, i64 8, i32 (i8*, i8*)* @find_block) #4
  %tobool530 = icmp eq i8* %call529, null
  br i1 %tobool530, label %if.then531, label %if.else532

if.then531:                                       ; preds = %if.then522
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1671, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.copy_insn_list, i64 0, i64 0)) #7
  unreachable

if.else532:                                       ; preds = %if.then522
  %113 = bitcast i8* %call529 to %union.tree_node**
  %114 = load %union.tree_node** %113, align 8, !tbaa !7
  %115 = getelementptr inbounds %struct.rtx_def* %call504, i64 0, i32 1, i64 3, i32 0
  %.c = ptrtoint %union.tree_node* %114 to i64
  store i64 %.c, i64* %115, align 8, !tbaa !7
  br label %sw.epilog

land.lhs.true539:                                 ; preds = %land.lhs.true518, %land.lhs.true506
  %cmp543 = icmp eq i32 %106, -79
  br i1 %cmp543, label %if.then545, label %sw.epilog

if.then545:                                       ; preds = %land.lhs.true539
  %rtx548 = bitcast %union.rtunion_def* %arrayidx499 to %struct.rtx_def**
  %116 = load %struct.rtx_def** %rtx548, align 8, !tbaa !7
  %call549 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %116, %struct.inline_remap* %map, i32 0)
  %117 = getelementptr inbounds %struct.rtx_def* %call504, i64 0, i32 1, i64 3, i32 0
  %call549.c = ptrtoint %struct.rtx_def* %call549 to i64
  store i64 %call549.c, i64* %117, align 8, !tbaa !7
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0), i32 1686, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.copy_insn_list, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %for.body436, %land.lhs.true355, %land.lhs.true352, %if.end348, %land.lhs.true539, %if.then545, %if.else532, %if.else363, %get_label_from_map.exit735, %sw.bb457, %get_label_from_map.exit, %for.inc.2, %if.end328
  %copy.1 = phi %struct.rtx_def* [ %call470, %get_label_from_map.exit735 ], [ %call504, %if.else532 ], [ %call504, %if.then545 ], [ %call504, %land.lhs.true539 ], [ %call458, %sw.bb457 ], [ %call450, %get_label_from_map.exit ], [ %call406, %for.inc.2 ], [ %call349, %if.else363 ], [ %call349, %land.lhs.true355 ], [ %call349, %land.lhs.true352 ], [ %call349, %if.end348 ], [ %copy.0, %if.end328 ], [ %call412, %for.body436 ]
  %static_chain_mem.2 = phi %struct.rtx_def* [ %static_chain_mem.0745, %get_label_from_map.exit735 ], [ %static_chain_mem.0745, %if.else532 ], [ %static_chain_mem.0745, %if.then545 ], [ %static_chain_mem.0745, %land.lhs.true539 ], [ %static_chain_mem.0745, %sw.bb457 ], [ %static_chain_mem.0745, %get_label_from_map.exit ], [ %static_chain_mem.0745, %for.inc.2 ], [ %static_chain_mem.0745, %if.else363 ], [ %static_chain_mem.0745, %land.lhs.true355 ], [ %static_chain_mem.0745, %land.lhs.true352 ], [ %static_chain_mem.0745, %if.end348 ], [ %static_chain_mem.1, %if.end328 ], [ %static_chain_mem.0745, %for.body436 ]
  %static_chain_value.addr.2 = phi %struct.rtx_def* [ %static_chain_value.addr.0752, %get_label_from_map.exit735 ], [ %static_chain_value.addr.0752, %if.else532 ], [ %static_chain_value.addr.0752, %if.then545 ], [ %static_chain_value.addr.0752, %land.lhs.true539 ], [ %static_chain_value.addr.0752, %sw.bb457 ], [ %static_chain_value.addr.0752, %get_label_from_map.exit ], [ %static_chain_value.addr.0752, %for.inc.2 ], [ %static_chain_value.addr.0752, %if.else363 ], [ %static_chain_value.addr.0752, %land.lhs.true355 ], [ %static_chain_value.addr.0752, %land.lhs.true352 ], [ %static_chain_value.addr.0752, %if.end348 ], [ %static_chain_value.addr.1, %if.end328 ], [ %static_chain_value.addr.0752, %for.body436 ]
  %tobool557 = icmp eq %struct.rtx_def* %copy.1, null
  br i1 %tobool557, label %if.end562, label %if.then558

if.then558:                                       ; preds = %sw.epilog
  %118 = getelementptr inbounds %struct.rtx_def* %copy.1, i64 0, i32 0
  %bf.load559 = load i32* %118, align 8
  %bf.set561 = or i32 %bf.load559, 1073741824
  store i32 %bf.set561, i32* %118, align 8
  br label %if.end562

if.end562:                                        ; preds = %land.lhs.true, %land.lhs.true142, %if.then497, %sw.bb459, %sw.bb459, %sw.bb459, %land.lhs.true210, %land.lhs.true203, %if.else, %land.lhs.true121, %if.then361, %sw.epilog, %if.then558
  %static_chain_value.addr.2741 = phi %struct.rtx_def* [ %static_chain_value.addr.2, %sw.epilog ], [ %static_chain_value.addr.2, %if.then558 ], [ %static_chain_value.addr.0752, %if.then361 ], [ %static_chain_value.addr.0752, %land.lhs.true121 ], [ %static_chain_value.addr.0752, %if.else ], [ %static_chain_value.addr.0752, %land.lhs.true203 ], [ %static_chain_value.addr.0752, %land.lhs.true210 ], [ %static_chain_value.addr.0752, %land.lhs.true ], [ %static_chain_value.addr.0752, %land.lhs.true142 ], [ %static_chain_value.addr.0752, %sw.bb459 ], [ %static_chain_value.addr.0752, %sw.bb459 ], [ %static_chain_value.addr.0752, %sw.bb459 ], [ %static_chain_value.addr.0752, %if.then497 ]
  %static_chain_mem.2740 = phi %struct.rtx_def* [ %static_chain_mem.2, %sw.epilog ], [ %static_chain_mem.2, %if.then558 ], [ %static_chain_mem.0745, %if.then361 ], [ %static_chain_mem.0745, %land.lhs.true121 ], [ %static_chain_mem.0745, %if.else ], [ %static_chain_mem.0745, %land.lhs.true203 ], [ %static_chain_mem.0745, %land.lhs.true210 ], [ %static_chain_mem.0745, %land.lhs.true ], [ %static_chain_mem.0745, %land.lhs.true142 ], [ %static_chain_mem.0745, %sw.bb459 ], [ %static_chain_mem.0745, %sw.bb459 ], [ %static_chain_mem.0745, %sw.bb459 ], [ %static_chain_mem.0745, %if.then497 ]
  %copy.1739 = phi %struct.rtx_def* [ null, %sw.epilog ], [ %copy.1, %if.then558 ], [ null, %if.then361 ], [ null, %land.lhs.true121 ], [ null, %if.else ], [ null, %land.lhs.true203 ], [ null, %land.lhs.true210 ], [ null, %land.lhs.true ], [ null, %land.lhs.true142 ], [ null, %sw.bb459 ], [ null, %sw.bb459 ], [ null, %sw.bb459 ], [ null, %if.then497 ]
  %fld563 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1
  %rtint565 = bitcast [1 x %union.rtunion_def]* %fld563 to i32*
  %119 = load i32* %rtint565, align 4, !tbaa !24
  %idxprom566 = sext i32 %119 to i64
  %120 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !65
  %arrayidx567 = getelementptr inbounds %struct.rtx_def** %120, i64 %idxprom566
  store %struct.rtx_def* %copy.1739, %struct.rtx_def** %arrayidx567, align 8, !tbaa !7
  %arrayidx570 = getelementptr inbounds %struct.rtx_def* %insn.0747, i64 0, i32 1, i64 2
  %rtx571 = bitcast %union.rtunion_def* %arrayidx570 to %struct.rtx_def**
  %121 = load %struct.rtx_def** %rtx571, align 8, !tbaa !7
  %tobool = icmp eq %struct.rtx_def* %121, null
  br i1 %tobool, label %for.end572, label %for.body

for.end572:                                       ; preds = %if.end562, %entry
  ret void

if.then390.1:                                     ; preds = %for.inc
  tail call void @start_sequence() #4
  tail call fastcc void @copy_insn_list(%struct.rtx_def* %77, %struct.inline_remap* %map, %struct.rtx_def* %static_chain_value.addr.0752)
  %call391.1 = tail call %struct.rtx_def* @get_insns() #4
  tail call void @end_sequence() #4
  %.pre759 = load %struct.rtx_def** %rtx370, align 8, !tbaa !7
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then390.1, %for.inc
  %122 = phi %struct.rtx_def* [ %call391.1, %if.then390.1 ], [ null, %for.inc ]
  %123 = phi %struct.rtx_def* [ %.pre759, %if.then390.1 ], [ %76, %for.inc ]
  %arrayidx387.2 = getelementptr inbounds %struct.rtx_def* %123, i64 0, i32 1, i64 2
  %rtx388.2 = bitcast %union.rtunion_def* %arrayidx387.2 to %struct.rtx_def**
  %124 = load %struct.rtx_def** %rtx388.2, align 8, !tbaa !7
  %tobool389.2 = icmp eq %struct.rtx_def* %124, null
  br i1 %tobool389.2, label %for.inc.2, label %if.then390.2

if.then390.2:                                     ; preds = %for.inc.1
  tail call void @start_sequence() #4
  tail call fastcc void @copy_insn_list(%struct.rtx_def* %124, %struct.inline_remap* %map, %struct.rtx_def* %static_chain_value.addr.0752)
  %call391.2 = tail call %struct.rtx_def* @get_insns() #4
  tail call void @end_sequence() #4
  %.pre760 = load %struct.rtx_def** %rtx370, align 8, !tbaa !7
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then390.2, %for.inc.1
  %125 = phi %struct.rtx_def* [ %call391.2, %if.then390.2 ], [ null, %for.inc.1 ]
  %126 = phi %struct.rtx_def* [ %.pre760, %if.then390.2 ], [ %123, %for.inc.1 ]
  %arrayidx399 = getelementptr inbounds %struct.rtx_def* %126, i64 0, i32 1, i64 3
  %rtx400 = bitcast %union.rtunion_def* %arrayidx399 to %struct.rtx_def**
  %127 = load %struct.rtx_def** %rtx400, align 8, !tbaa !7
  %call401 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %127, %struct.inline_remap* %map, i32 0)
  %call405 = tail call %struct.rtx_def* @gen_rtx_fmt_uuuu(i32 141, i32 0, %struct.rtx_def* %75, %struct.rtx_def* %122, %struct.rtx_def* %125, %struct.rtx_def* %call401) #4
  %call406 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call405) #4
  br label %sw.epilog
}

declare i32 @duplicate_eh_regions(%struct.function*, %struct.inline_remap*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @copy_insn_notes(%struct.rtx_def* readonly %insns, %struct.inline_remap* %map, i32 %eh_region_offset) #0 {
entry:
  %note = alloca %struct.rtx_def*, align 8
  %const_age = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 10
  %0 = load i32* %const_age, align 4, !tbaa !72
  %inc = add i32 %0, 1
  store i32 %inc, i32* %const_age, align 4, !tbaa !72
  %tobool135 = icmp eq %struct.rtx_def* %insns, null
  br i1 %tobool135, label %for.end110, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %insn_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 6
  %conv49 = sext i32 %eh_region_offset to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc106
  %insn.0136 = phi %struct.rtx_def* [ %insns, %for.body.lr.ph ], [ %27, %for.inc106 ]
  %1 = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom132 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom132
  %2 = load i8* %arrayidx, align 1, !tbaa !33
  %cmp = icmp eq i8 %2, 105
  br i1 %cmp, label %if.end, label %for.inc106

if.end:                                           ; preds = %for.body
  %fld = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %3 = load i32* %rtint, align 4, !tbaa !24
  %idxprom3 = sext i32 %3 to i64
  %4 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !65
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %4, i64 %idxprom3
  %5 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !7
  %tobool5 = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool5, label %for.inc106, label %if.end7

if.end7:                                          ; preds = %if.end
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %tobool10 = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool10, label %if.end56, label %if.then11

if.then11:                                        ; preds = %if.end7
  %call = call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %6, %struct.inline_remap* %map, i32 0)
  store %struct.rtx_def* %call, %struct.rtx_def** %note, align 8, !tbaa !7
  call fastcc void @subst_constants(%struct.rtx_def** %note, %struct.rtx_def* null, %struct.inline_remap* %map, i32 0)
  %call15 = call i32 @apply_change_group() #4
  %7 = load %struct.rtx_def** %note, align 8, !tbaa !7
  %8 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 6, i32 0
  %.c = ptrtoint %struct.rtx_def* %7 to i64
  store i64 %.c, i64* %8, align 8, !tbaa !7
  %.pr = load %struct.rtx_def** %note, align 8, !tbaa !7
  %tobool20133 = icmp eq %struct.rtx_def* %.pr, null
  br i1 %tobool20133, label %if.end56.loopexit, label %for.body21

for.body21:                                       ; preds = %if.then11, %for.inc
  %9 = phi %struct.rtx_def* [ %10, %for.inc ], [ %.pr, %if.then11 ]
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx24, align 8, !tbaa !7
  %11 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load25 = load i32* %11, align 8
  %bf.lshr = lshr i32 %bf.load25, 16
  %bf.clear26 = and i32 %bf.lshr, 255
  switch i32 %bf.clear26, label %for.inc [
    i32 13, label %if.then29
    i32 23, label %land.lhs.true
  ]

if.then29:                                        ; preds = %for.body21
  call void @remove_note(%struct.rtx_def* %5, %struct.rtx_def* %9) #4
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body21
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx37, align 8, !tbaa !7
  %rtwint = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, i32 0
  %13 = load i64* %rtwint, align 8, !tbaa !104
  %cmp40 = icmp sgt i64 %13, 0
  br i1 %cmp40, label %if.then42, label %for.inc

if.then42:                                        ; preds = %land.lhs.true
  %add = add nsw i64 %13, %conv49
  %call50 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add) #4
  %14 = load %struct.rtx_def** %note, align 8, !tbaa !7
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0, i32 0
  %call50.c = ptrtoint %struct.rtx_def* %call50 to i64
  store i64 %call50.c, i64* %15, align 8, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %for.body21, %if.then29, %if.then42, %land.lhs.true
  store %struct.rtx_def* %10, %struct.rtx_def** %note, align 8, !tbaa !7
  %tobool20 = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool20, label %if.end56.loopexit, label %for.body21

if.end56.loopexit:                                ; preds = %for.inc, %if.then11
  %bf.load57.pre = load i32* %1, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.end56.loopexit, %if.end7
  %bf.load57 = phi i32 [ %bf.load57.pre, %if.end56.loopexit ], [ %bf.load, %if.end7 ]
  %bf.clear58 = and i32 %bf.load57, 65535
  %cmp59 = icmp eq i32 %bf.clear58, 34
  br i1 %cmp59, label %land.lhs.true61, label %if.end84

land.lhs.true61:                                  ; preds = %if.end56
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1, i64 3
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx64, align 8, !tbaa !7
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load65 = load i32* %17, align 8
  %bf.clear66 = and i32 %bf.load65, 65535
  %cmp67 = icmp eq i32 %bf.clear66, 141
  br i1 %cmp67, label %for.cond70.preheader, label %if.end84

for.cond70.preheader:                             ; preds = %land.lhs.true61
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx80, align 8, !tbaa !7
  call fastcc void @copy_insn_notes(%struct.rtx_def* %18, %struct.inline_remap* %map, i32 %eh_region_offset)
  %19 = load %struct.rtx_def** %rtx64, align 8, !tbaa !7
  %arrayidx79.1 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 1
  %rtx80.1 = bitcast %union.rtunion_def* %arrayidx79.1 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx80.1, align 8, !tbaa !7
  call fastcc void @copy_insn_notes(%struct.rtx_def* %20, %struct.inline_remap* %map, i32 %eh_region_offset)
  %21 = load %struct.rtx_def** %rtx64, align 8, !tbaa !7
  %arrayidx79.2 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 2
  %rtx80.2 = bitcast %union.rtunion_def* %arrayidx79.2 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx80.2, align 8, !tbaa !7
  call fastcc void @copy_insn_notes(%struct.rtx_def* %22, %struct.inline_remap* %map, i32 %eh_region_offset)
  %bf.load85.pre = load i32* %1, align 8
  br label %if.end84

if.end84:                                         ; preds = %for.cond70.preheader, %land.lhs.true61, %if.end56
  %bf.load85 = phi i32 [ %bf.load85.pre, %for.cond70.preheader ], [ %bf.load57, %land.lhs.true61 ], [ %bf.load57, %if.end56 ]
  %bf.clear86 = and i32 %bf.load85, 65535
  %cmp87 = icmp eq i32 %bf.clear86, 33
  br i1 %cmp87, label %land.lhs.true89, label %for.inc106

land.lhs.true89:                                  ; preds = %if.end84
  %arrayidx91 = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1, i64 3
  %rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx92, align 8, !tbaa !7
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load93 = load i32* %24, align 8
  %bf.clear94 = and i32 %bf.load93, 65535
  %cmp95 = icmp eq i32 %bf.clear94, 53
  br i1 %cmp95, label %if.then97, label %for.inc106

if.then97:                                        ; preds = %land.lhs.true89
  %arrayidx99 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 3
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx100, align 8, !tbaa !7
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 0
  %rtint103 = bitcast %union.rtunion_def* %arrayidx102 to i32*
  %26 = load i32* %rtint103, align 4, !tbaa !24
  %add104 = add nsw i32 %26, %eh_region_offset
  store i32 %add104, i32* %rtint103, align 4, !tbaa !24
  br label %for.inc106

for.inc106:                                       ; preds = %if.end, %if.end84, %land.lhs.true89, %if.then97, %for.body
  %arrayidx108 = getelementptr inbounds %struct.rtx_def* %insn.0136, i64 0, i32 1, i64 2
  %rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx109, align 8, !tbaa !7
  %tobool = icmp eq %struct.rtx_def* %27, null
  br i1 %tobool, label %for.end110, label %for.body

for.end110:                                       ; preds = %for.inc106, %entry
  ret void
}

declare void @emit_stack_restore(i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare void @insert_block(%union.tree_node*) #1

declare void @expand_end_bindings(%union.tree_node*, i32, i32) #1

declare %struct.rtx_def* @emit_line_note(i8*, i32) #1

declare %struct.rtx_def* @copy_blkmode_from_reg(%struct.rtx_def*, %struct.rtx_def*, %union.tree_node*) #1

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @memory_address(i32, %struct.rtx_def*) #1

declare void @set_mem_attributes(%struct.rtx_def*, %union.tree_node*, i32) #1

declare i64 @get_func_frame_size(%struct.function*) #1

declare void @start_sequence() #1

declare %struct.rtx_def* @assign_stack_temp(i32, i64, i32) #1

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare %struct.rtx_def* @gen_sequence() #1

declare void @end_sequence() #1

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_eit(i32, i32, %struct.rtx_def*, i32, %union.tree_node*) #1

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_u00(i32, i32, %struct.rtx_def*) #1

declare i32 @get_first_label_num() #1

declare %struct.rtx_def* @get_pool_constant_for_function(%struct.function*, %struct.rtx_def*) #1

declare i32 @get_pool_mode_for_function(%struct.function*, %struct.rtx_def*) #1

declare %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8, i32) #1

declare %struct.rtx_def* @immed_double_const(i64, i64, i32) #1

declare %struct.rtx_def* @rtx_alloc(i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @validize_mem(%struct.rtx_def*) #1

declare %struct.rtvec_def* @rtvec_alloc(i32) #1

; Function Attrs: nounwind uwtable
define void @try_constants(%struct.rtx_def* %insn, %struct.inline_remap* %map) #0 {
entry:
  %num_sets = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 18
  store i32 0, i32* %num_sets, align 4, !tbaa !110
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  tail call fastcc void @subst_constants(%struct.rtx_def** %rtx, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 1)
  %call = tail call i32 @apply_change_group() #4
  tail call fastcc void @subst_constants(%struct.rtx_def** %rtx, %struct.rtx_def* %insn, %struct.inline_remap* %map, i32 0)
  %call4 = tail call i32 @apply_change_group() #4
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  tail call void @note_stores(%struct.rtx_def* %0, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @mark_stores, i8* null) #4
  %last_pc_value = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 20
  store %struct.rtx_def* null, %struct.rtx_def** %last_pc_value, align 8, !tbaa !116
  %1 = load i32* %num_sets, align 4, !tbaa !110
  %cmp158 = icmp sgt i32 %1, 0
  br i1 %cmp158, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %const_equiv_varray = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9
  %const_age = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 10
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %dest = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %indvars.iv, i32 0
  %2 = load %struct.rtx_def** %dest, align 8, !tbaa !113
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp10 = icmp eq i32 %bf.clear, 61
  br i1 %cmp10, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !24
  %conv = sext i32 %4 to i64
  %5 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 0
  %6 = load i64* %num_elements, align 8, !tbaa !79
  %cmp17 = icmp ult i64 %conv, %6
  br i1 %cmp17, label %if.end29, label %if.then19

if.then19:                                        ; preds = %if.then
  %7 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %cmp21 = icmp eq %struct.varray_head_tag* %7, %5
  %add = add nsw i32 %4, 1
  %conv24 = sext i32 %add to i64
  %call25 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %5, i64 %conv24) #4
  store %struct.varray_head_tag* %call25, %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br i1 %cmp21, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.then19
  store %struct.varray_head_tag* %call25, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %.pre = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br label %if.end29

if.end29:                                         ; preds = %if.then, %if.then19, %if.then27
  %8 = phi %struct.varray_head_tag* [ %5, %if.then ], [ %call25, %if.then19 ], [ %.pre, %if.then27 ]
  %rtx33 = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 4, i32 0, i64 %conv, i32 0
  %9 = load %struct.rtx_def** %rtx33, align 8, !tbaa !82
  %cmp34 = icmp eq %struct.rtx_def* %9, null
  br i1 %cmp34, label %if.then47, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end29
  %equiv = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %indvars.iv, i32 1
  %10 = load %struct.rtx_def** %equiv, align 8, !tbaa !111
  %call45 = tail call i32 @rtx_equal_p(%struct.rtx_def* %9, %struct.rtx_def* %10) #4
  %tobool46 = icmp eq i32 %call45, 0
  br i1 %tobool46, label %lor.lhs.false.if.then47_crit_edge, label %for.inc

lor.lhs.false.if.then47_crit_edge:                ; preds = %lor.lhs.false
  %.pre160 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br label %if.then47

if.then47:                                        ; preds = %lor.lhs.false.if.then47_crit_edge, %if.end29
  %11 = phi %struct.varray_head_tag* [ %.pre160, %lor.lhs.false.if.then47_crit_edge ], [ %8, %if.end29 ]
  %12 = load %struct.rtx_def** %dest, align 8, !tbaa !113
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtuint54 = bitcast %union.rtunion_def* %arrayidx53 to i32*
  %13 = load i32* %rtuint54, align 4, !tbaa !24
  %conv55 = zext i32 %13 to i64
  %num_elements57 = getelementptr inbounds %struct.varray_head_tag* %11, i64 0, i32 0
  %14 = load i64* %num_elements57, align 8, !tbaa !79
  %cmp58 = icmp ult i64 %conv55, %14
  br i1 %cmp58, label %if.end81, label %if.then60

if.then60:                                        ; preds = %if.then47
  %15 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %cmp63 = icmp eq %struct.varray_head_tag* %15, %11
  %add73 = add i32 %13, 1
  %conv74 = zext i32 %add73 to i64
  %call75 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %11, i64 %conv74) #4
  store %struct.varray_head_tag* %call75, %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br i1 %cmp63, label %if.then78, label %if.end81

if.then78:                                        ; preds = %if.then60
  store %struct.varray_head_tag* %call75, %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %.pre161 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !71
  br label %if.end81

if.end81:                                         ; preds = %if.then47, %if.then60, %if.then78
  %16 = phi %struct.varray_head_tag* [ %11, %if.then47 ], [ %call75, %if.then60 ], [ %.pre161, %if.then78 ]
  %17 = load %struct.rtx_def** %dest, align 8, !tbaa !113
  %arrayidx87 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtuint88 = bitcast %union.rtunion_def* %arrayidx87 to i32*
  %18 = load i32* %rtuint88, align 4, !tbaa !24
  %idxprom89 = zext i32 %18 to i64
  %equiv97 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %indvars.iv, i32 1
  %19 = load %struct.rtx_def** %equiv97, align 8, !tbaa !111
  %rtx98 = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 4, i32 0, i64 %idxprom89, i32 0
  store %struct.rtx_def* %19, %struct.rtx_def** %rtx98, align 8, !tbaa !82
  %20 = load i32* %const_age, align 4, !tbaa !72
  %age = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 4, i32 0, i64 %idxprom89, i32 1
  store i32 %20, i32* %age, align 4, !tbaa !84
  br label %for.inc

if.else:                                          ; preds = %for.body
  %21 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !7
  %cmp104 = icmp eq %struct.rtx_def* %2, %21
  br i1 %cmp104, label %if.then106, label %for.inc

if.then106:                                       ; preds = %if.else
  %equiv110 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 19, i64 %indvars.iv, i32 1
  %22 = load %struct.rtx_def** %equiv110, align 8, !tbaa !111
  store %struct.rtx_def* %22, %struct.rtx_def** %last_pc_value, align 8, !tbaa !116
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false, %if.end81, %if.then106, %if.else
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %23 = load i32* %num_sets, align 4, !tbaa !110
  %24 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %24, %23
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @mark_stores(%struct.rtx_def* nocapture readonly %dest, %struct.rtx_def* nocapture readnone %x, i8* nocapture readnone %data) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end116 [
    i32 61, label %if.then
    i32 63, label %land.lhs.true
  ]

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !24
  br label %if.end45

land.lhs.true:                                    ; preds = %entry
  %fld6 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld6 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load8 = load i32* %3, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 61
  br i1 %cmp10, label %if.then11, label %if.end116

if.then11:                                        ; preds = %land.lhs.true
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint17 = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %4 = load i32* %rtuint17, align 4, !tbaa !24
  %cmp18 = icmp slt i32 %4, 53
  br i1 %cmp18, label %if.then19, label %cond.end96

if.then19:                                        ; preds = %if.then11
  %bf.lshr30 = lshr i32 %bf.load8, 16
  %bf.clear31 = and i32 %bf.lshr30, 255
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1, i64 1
  %rtuint34 = bitcast %union.rtunion_def* %arrayidx33 to i32*
  %5 = load i32* %rtuint34, align 4, !tbaa !24
  %bf.lshr36 = lshr i32 %bf.load, 16
  %bf.clear37 = and i32 %bf.lshr36, 255
  %call = tail call i32 @subreg_regno_offset(i32 %4, i32 %bf.clear31, i32 %5, i32 %bf.clear37) #4
  %add = add i32 %call, %4
  %.pre = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre, i64 0, i32 0
  %bf.load41.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.then19, %if.then
  %bf.load.sink = phi i32 [ %bf.load, %if.then ], [ %bf.load41.pre, %if.then19 ]
  %regno.1 = phi i32 [ %1, %if.then ], [ %add, %if.then19 ]
  %bf.lshr = lshr i32 %bf.load.sink, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %cmp46 = icmp sgt i32 %regno.1, -1
  br i1 %cmp46, label %if.then47, label %if.end116

if.then47:                                        ; preds = %if.end45
  %cmp48 = icmp ugt i32 %regno.1, 52
  br i1 %cmp48, label %cond.end96, label %cond.false

cond.false:                                       ; preds = %if.then47
  %6 = and i32 %regno.1, -8
  %7 = icmp eq i32 %6, 8
  %regno.1.off = add i32 %regno.1, -21
  %8 = icmp ult i32 %regno.1.off, 8
  %or.cond = or i1 %7, %8
  %regno.1.off152 = add i32 %regno.1, -45
  %9 = icmp ult i32 %regno.1.off152, 8
  %or.cond159 = or i1 %or.cond, %9
  %regno.1.off153 = add i32 %regno.1, -29
  %10 = icmp ult i32 %regno.1.off153, 8
  %or.cond161 = or i1 %or.cond159, %10
  br i1 %or.cond161, label %cond.true63, label %cond.false69

cond.true63:                                      ; preds = %cond.false
  %idxprom156 = zext i32 %bf.clear2 to i64
  %arrayidx64 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom156
  %11 = load i32* %arrayidx64, align 4, !tbaa !33
  %cmp65 = icmp eq i32 %11, 5
  br i1 %cmp65, label %cond.end92, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true63
  %cmp68 = icmp eq i32 %11, 6
  %phitmp = select i1 %cmp68, i32 2, i32 1
  br label %cond.end92

cond.false69:                                     ; preds = %cond.false
  switch i32 %bf.clear2, label %cond.false79 [
    i32 18, label %cond.true71
    i32 24, label %cond.true75
  ]

cond.true71:                                      ; preds = %cond.false69
  %12 = load i32* @target_flags, align 4, !tbaa !24
  %and = lshr i32 %12, 25
  %13 = and i32 %and, 1
  %14 = xor i32 %13, 3
  br label %cond.end92

cond.true75:                                      ; preds = %cond.false69
  %15 = load i32* @target_flags, align 4, !tbaa !24
  %and76 = lshr i32 %15, 24
  %16 = and i32 %and76, 2
  %17 = xor i32 %16, 6
  br label %cond.end92

cond.false79:                                     ; preds = %cond.false69
  %idxprom80154 = zext i32 %bf.clear2 to i64
  %arrayidx81 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom80154
  %18 = load i8* %arrayidx81, align 1, !tbaa !33
  %conv = zext i8 %18 to i32
  %19 = load i32* @target_flags, align 4, !tbaa !24
  %and82 = lshr i32 %19, 23
  %20 = and i32 %and82, 4
  %21 = add i32 %20, 4
  %add85 = add i32 %conv, -1
  %sub = add i32 %add85, %21
  %div = sdiv i32 %sub, %21
  br label %cond.end92

cond.end92:                                       ; preds = %cond.true63, %lor.rhs, %cond.true71, %cond.false79, %cond.true75
  %cond93 = phi i32 [ %14, %cond.true71 ], [ %17, %cond.true75 ], [ %div, %cond.false79 ], [ 2, %cond.true63 ], [ %phitmp, %lor.rhs ]
  %add94 = add i32 %regno.1, -1
  %sub95 = add i32 %add94, %cond93
  br label %cond.end96

cond.end96:                                       ; preds = %if.then11, %if.then47, %cond.end92
  %regno.1171 = phi i32 [ %regno.1, %cond.end92 ], [ %regno.1, %if.then47 ], [ %4, %if.then11 ]
  %cond97 = phi i32 [ %sub95, %cond.end92 ], [ %regno.1, %if.then47 ], [ %4, %if.then11 ]
  %regno.1.off155 = add i32 %regno.1171, -53
  %regno.1.cmp = icmp ult i32 %regno.1.off155, 2
  %cmp104164 = icmp ugt i32 %regno.1171, %cond97
  %or.cond174 = or i1 %regno.1.cmp, %cmp104164
  br i1 %or.cond174, label %if.end116, label %for.body

for.body:                                         ; preds = %cond.end96, %for.inc
  %i.0165 = phi i32 [ %inc, %for.inc ], [ %regno.1171, %cond.end96 ]
  %conv106 = zext i32 %i.0165 to i64
  %22 = load %struct.varray_head_tag** @global_const_equiv_varray, align 8, !tbaa !7
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %22, i64 0, i32 0
  %23 = load i64* %num_elements, align 8, !tbaa !79
  %cmp107 = icmp ult i64 %conv106, %23
  br i1 %cmp107, label %if.then109, label %for.inc

if.then109:                                       ; preds = %for.body
  %rtx113 = getelementptr inbounds %struct.varray_head_tag* %22, i64 0, i32 4, i32 0, i64 %conv106, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %rtx113, align 8, !tbaa !82
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then109
  %inc = add i32 %i.0165, 1
  %cmp104 = icmp ugt i32 %inc, %cond97
  br i1 %cmp104, label %if.end116, label %for.body

if.end116:                                        ; preds = %for.inc, %cond.end96, %entry, %land.lhs.true, %if.end45
  ret void
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @set_decl_origin_self(%union.tree_node* %decl) #0 {
entry:
  %abstract_origin = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %0 = load %union.tree_node** %abstract_origin, align 8, !tbaa !38
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.then, label %if.end19

if.then:                                          ; preds = %entry
  store %union.tree_node* %decl, %union.tree_node** %abstract_origin, align 8, !tbaa !38
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp4 = icmp eq i32 %bf.clear, 30
  br i1 %cmp4, label %if.then5, label %if.end19

if.then5:                                         ; preds = %if.then
  %arguments = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 10
  %arg.030 = load %union.tree_node** %arguments, align 8
  %tobool31 = icmp eq %union.tree_node* %arg.030, null
  br i1 %tobool31, label %for.end, label %for.body

for.body:                                         ; preds = %if.then5, %for.body
  %arg.032 = phi %union.tree_node* [ %arg.0, %for.body ], [ %arg.030, %if.then5 ]
  %abstract_origin8 = getelementptr inbounds %union.tree_node* %arg.032, i64 0, i32 0, i32 13
  store %union.tree_node* %arg.032, %union.tree_node** %abstract_origin8, align 8, !tbaa !38
  %chain = getelementptr inbounds %union.tree_node* %arg.032, i64 0, i32 0, i32 0, i32 0
  %arg.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %arg.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then5
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %1 = load %union.tree_node** %initial, align 8, !tbaa !46
  %cmp11 = icmp eq %union.tree_node* %1, null
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp14 = icmp eq %union.tree_node* %1, %2
  %or.cond = or i1 %cmp11, %cmp14
  br i1 %or.cond, label %if.end19, label %if.then15

if.then15:                                        ; preds = %for.end
  tail call fastcc void @set_block_origin_self(%union.tree_node* %1)
  br label %if.end19

if.end19:                                         ; preds = %for.end, %if.then, %if.then15, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_block_origin_self(%union.tree_node* %stmt) #0 {
entry:
  %abstract_origin = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 6
  %0 = bitcast %union.anon* %abstract_origin to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !91
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.anon* %abstract_origin, i64 0, i32 0
  %stmt.c = ptrtoint %union.tree_node* %stmt to i64
  store i64 %stmt.c, i64* %2, align 8, !tbaa !91
  %vars = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 2
  %3 = bitcast i32* %vars to %union.tree_node**
  %local_decl.027 = load %union.tree_node** %3, align 8
  %cmp428 = icmp eq %union.tree_node* %local_decl.027, null
  br i1 %cmp428, label %for.end, label %for.body

for.body:                                         ; preds = %if.then, %set_decl_origin_self.exit
  %local_decl.029 = phi %union.tree_node* [ %local_decl.0, %set_decl_origin_self.exit ], [ %local_decl.027, %if.then ]
  %abstract_origin.i = getelementptr inbounds %union.tree_node* %local_decl.029, i64 0, i32 0, i32 13
  %4 = load %union.tree_node** %abstract_origin.i, align 8, !tbaa !38
  %cmp.i = icmp eq %union.tree_node* %4, null
  br i1 %cmp.i, label %if.then.i, label %set_decl_origin_self.exit

if.then.i:                                        ; preds = %for.body
  store %union.tree_node* %local_decl.029, %union.tree_node** %abstract_origin.i, align 8, !tbaa !38
  %code.i = getelementptr inbounds %union.tree_node* %local_decl.029, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp4.i = icmp eq i32 %bf.clear.i, 30
  br i1 %cmp4.i, label %if.then5.i, label %set_decl_origin_self.exit

if.then5.i:                                       ; preds = %if.then.i
  %arguments.i = getelementptr inbounds %union.tree_node* %local_decl.029, i64 0, i32 0, i32 10
  %arg.0.i24 = load %union.tree_node** %arguments.i, align 8
  %tobool.i25 = icmp eq %union.tree_node* %arg.0.i24, null
  br i1 %tobool.i25, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.then5.i, %for.body.i
  %arg.0.i26 = phi %union.tree_node* [ %arg.0.i, %for.body.i ], [ %arg.0.i24, %if.then5.i ]
  %abstract_origin8.i = getelementptr inbounds %union.tree_node* %arg.0.i26, i64 0, i32 0, i32 13
  store %union.tree_node* %arg.0.i26, %union.tree_node** %abstract_origin8.i, align 8, !tbaa !38
  %chain.i = getelementptr inbounds %union.tree_node* %arg.0.i26, i64 0, i32 0, i32 0, i32 0
  %arg.0.i = load %union.tree_node** %chain.i, align 8
  %tobool.i = icmp eq %union.tree_node* %arg.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i, %if.then5.i
  %initial.i = getelementptr inbounds %union.tree_node* %local_decl.029, i64 0, i32 0, i32 12
  %5 = load %union.tree_node** %initial.i, align 8, !tbaa !46
  %cmp11.i = icmp eq %union.tree_node* %5, null
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp14.i = icmp eq %union.tree_node* %5, %6
  %or.cond.i = or i1 %cmp11.i, %cmp14.i
  br i1 %or.cond.i, label %set_decl_origin_self.exit, label %if.then15.i

if.then15.i:                                      ; preds = %for.end.i
  tail call fastcc void @set_block_origin_self(%union.tree_node* %5) #4
  br label %set_decl_origin_self.exit

set_decl_origin_self.exit:                        ; preds = %for.body, %if.then.i, %for.end.i, %if.then15.i
  %chain = getelementptr inbounds %union.tree_node* %local_decl.029, i64 0, i32 0, i32 0, i32 0
  %local_decl.0 = load %union.tree_node** %chain, align 8
  %cmp4 = icmp eq %union.tree_node* %local_decl.0, null
  br i1 %cmp4, label %for.end, label %for.body

for.end:                                          ; preds = %set_decl_origin_self.exit, %if.then
  %7 = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 4
  %subblock.021 = load %union.tree_node** %7, align 8
  %cmp722 = icmp eq %union.tree_node* %subblock.021, null
  br i1 %cmp722, label %if.end, label %for.body8

for.body8:                                        ; preds = %for.end, %for.body8
  %subblock.023 = phi %union.tree_node* [ %subblock.0, %for.body8 ], [ %subblock.021, %for.end ]
  tail call fastcc void @set_block_origin_self(%union.tree_node* %subblock.023)
  %chain11 = getelementptr inbounds %union.tree_node* %subblock.023, i64 0, i32 0, i32 0, i32 0
  %subblock.0 = load %union.tree_node** %chain11, align 8
  %cmp7 = icmp eq %union.tree_node* %subblock.0, null
  br i1 %cmp7, label %if.end, label %for.body8

if.end:                                           ; preds = %for.body8, %for.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @set_decl_abstract_flags(%union.tree_node* nocapture %decl, i32 %setting) #0 {
entry:
  %abstract_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %0 = bitcast i48* %abstract_flag to i64*
  %1 = zext i32 %setting to i64
  %bf.load = load i64* %0, align 8
  %bf.value = shl nuw nsw i64 %1, 15
  %bf.shl = and i64 %bf.value, 32768
  %bf.clear = and i64 %bf.load, -32769
  %bf.set = or i64 %bf.clear, %bf.shl
  store i64 %bf.set, i64* %0, align 8
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load2 = load i32* %code, align 8
  %bf.clear3 = and i32 %bf.load2, 255
  %cmp = icmp eq i32 %bf.clear3, 30
  br i1 %cmp, label %if.then, label %if.end22

if.then:                                          ; preds = %entry
  %arguments = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 10
  %arg.032 = load %union.tree_node** %arguments, align 8
  %tobool33 = icmp eq %union.tree_node* %arg.032, null
  br i1 %tobool33, label %for.end, label %for.body

for.body:                                         ; preds = %if.then, %for.body
  %arg.034 = phi %union.tree_node* [ %arg.0, %for.body ], [ %arg.032, %if.then ]
  %abstract_flag6 = getelementptr inbounds %union.tree_node* %arg.034, i64 0, i32 0, i32 5
  %2 = bitcast i48* %abstract_flag6 to i64*
  %bf.load7 = load i64* %2, align 8
  %bf.clear10 = and i64 %bf.load7, -32769
  %bf.set11 = or i64 %bf.clear10, %bf.shl
  store i64 %bf.set11, i64* %2, align 8
  %chain = getelementptr inbounds %union.tree_node* %arg.034, i64 0, i32 0, i32 0, i32 0
  %arg.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %arg.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %3 = load %union.tree_node** %initial, align 8, !tbaa !46
  %cmp15 = icmp eq %union.tree_node* %3, null
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp18 = icmp eq %union.tree_node* %3, %4
  %or.cond = or i1 %cmp15, %cmp18
  br i1 %or.cond, label %if.end22, label %if.then19

if.then19:                                        ; preds = %for.end
  tail call fastcc void @set_block_abstract_flags(%union.tree_node* %3, i32 %setting)
  br label %if.end22

if.end22:                                         ; preds = %for.end, %if.then19, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @set_block_abstract_flags(%union.tree_node* nocapture %stmt, i32 %setting) #0 {
entry:
  %abstract_flag = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 1
  %0 = bitcast i8** %abstract_flag to i32*
  %bf.load = load i32* %0, align 8
  %bf.value = shl i32 %setting, 1
  %bf.shl = and i32 %bf.value, 2
  %bf.clear = and i32 %bf.load, -3
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %0, align 8
  %vars = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 2
  %1 = bitcast i32* %vars to %union.tree_node**
  %local_decl.024 = load %union.tree_node** %1, align 8
  %cmp25 = icmp eq %union.tree_node* %local_decl.024, null
  br i1 %cmp25, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %2 = zext i32 %setting to i64
  %bf.value.i = shl nuw nsw i64 %2, 15
  %bf.shl.i = and i64 %bf.value.i, 32768
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %set_decl_abstract_flags.exit
  %local_decl.026 = phi %union.tree_node* [ %local_decl.024, %for.body.lr.ph ], [ %local_decl.0, %set_decl_abstract_flags.exit ]
  %abstract_flag.i = getelementptr inbounds %union.tree_node* %local_decl.026, i64 0, i32 0, i32 5
  %3 = bitcast i48* %abstract_flag.i to i64*
  %bf.load.i = load i64* %3, align 8
  %bf.clear.i = and i64 %bf.load.i, -32769
  %bf.set.i = or i64 %bf.clear.i, %bf.shl.i
  store i64 %bf.set.i, i64* %3, align 8
  %code.i = getelementptr inbounds %union.tree_node* %local_decl.026, i64 0, i32 0, i32 0, i32 2
  %bf.load2.i = load i32* %code.i, align 8
  %bf.clear3.i = and i32 %bf.load2.i, 255
  %cmp.i = icmp eq i32 %bf.clear3.i, 30
  br i1 %cmp.i, label %if.then.i, label %set_decl_abstract_flags.exit

if.then.i:                                        ; preds = %for.body
  %arguments.i = getelementptr inbounds %union.tree_node* %local_decl.026, i64 0, i32 0, i32 10
  %arg.0.i21 = load %union.tree_node** %arguments.i, align 8
  %tobool.i22 = icmp eq %union.tree_node* %arg.0.i21, null
  br i1 %tobool.i22, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.then.i, %for.body.i
  %arg.0.i23 = phi %union.tree_node* [ %arg.0.i, %for.body.i ], [ %arg.0.i21, %if.then.i ]
  %abstract_flag6.i = getelementptr inbounds %union.tree_node* %arg.0.i23, i64 0, i32 0, i32 5
  %4 = bitcast i48* %abstract_flag6.i to i64*
  %bf.load7.i = load i64* %4, align 8
  %bf.clear10.i = and i64 %bf.load7.i, -32769
  %bf.set11.i = or i64 %bf.clear10.i, %bf.shl.i
  store i64 %bf.set11.i, i64* %4, align 8
  %chain.i = getelementptr inbounds %union.tree_node* %arg.0.i23, i64 0, i32 0, i32 0, i32 0
  %arg.0.i = load %union.tree_node** %chain.i, align 8
  %tobool.i = icmp eq %union.tree_node* %arg.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i, %if.then.i
  %initial.i = getelementptr inbounds %union.tree_node* %local_decl.026, i64 0, i32 0, i32 12
  %5 = load %union.tree_node** %initial.i, align 8, !tbaa !46
  %cmp15.i = icmp eq %union.tree_node* %5, null
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp18.i = icmp eq %union.tree_node* %5, %6
  %or.cond.i = or i1 %cmp15.i, %cmp18.i
  br i1 %or.cond.i, label %set_decl_abstract_flags.exit, label %if.then19.i

if.then19.i:                                      ; preds = %for.end.i
  tail call fastcc void @set_block_abstract_flags(%union.tree_node* %5, i32 %setting) #4
  br label %set_decl_abstract_flags.exit

set_decl_abstract_flags.exit:                     ; preds = %for.body, %for.end.i, %if.then19.i
  %chain = getelementptr inbounds %union.tree_node* %local_decl.026, i64 0, i32 0, i32 0, i32 0
  %local_decl.0 = load %union.tree_node** %chain, align 8
  %cmp = icmp eq %union.tree_node* %local_decl.0, null
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %set_decl_abstract_flags.exit, %entry
  %7 = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 4
  %subblock.018 = load %union.tree_node** %7, align 8
  %cmp419 = icmp eq %union.tree_node* %subblock.018, null
  br i1 %cmp419, label %for.end9, label %for.body5

for.body5:                                        ; preds = %for.end, %for.body5
  %subblock.020 = phi %union.tree_node* [ %subblock.0, %for.body5 ], [ %subblock.018, %for.end ]
  tail call fastcc void @set_block_abstract_flags(%union.tree_node* %subblock.020, i32 %setting)
  %chain8 = getelementptr inbounds %union.tree_node* %subblock.020, i64 0, i32 0, i32 0, i32 0
  %subblock.0 = load %union.tree_node** %chain8, align 8
  %cmp4 = icmp eq %union.tree_node* %subblock.0, null
  br i1 %cmp4, label %for.end9, label %for.body5

for.end9:                                         ; preds = %for.body5, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define void @output_inline_function(%union.tree_node* %fndecl) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !7
  %1 = load i32* @write_symbols, align 4, !tbaa !33
  %2 = load %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !7
  %f1 = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 19, i32 0
  %3 = load %struct.function** %f1, align 8, !tbaa !7
  store %struct.function* %3, %struct.function** @cfun, align 8, !tbaa !7
  store %union.tree_node* %fndecl, %union.tree_node** @current_function_decl, align 8, !tbaa !7
  tail call void @clear_emit_caches() #4
  %inl_max_label_num = getelementptr inbounds %struct.function* %3, i64 0, i32 49
  %4 = load i32* %inl_max_label_num, align 4, !tbaa !42
  tail call void @set_new_last_label_num(i32 %4) #4
  %defer_output = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 5
  %5 = bitcast i48* %defer_output to i64*
  %bf.load = load i64* %5, align 8
  %bf.clear = and i64 %bf.load, -262145
  store i64 %bf.clear, i64* %5, align 8
  %no_debugging_symbols = getelementptr inbounds %struct.function* %3, i64 0, i32 45
  %6 = load i32* %no_debugging_symbols, align 4, !tbaa !48
  %tobool = icmp eq i32 %6, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* @write_symbols, align 4, !tbaa !33
  store %struct.gcc_debug_hooks* @do_nothing_debug_hooks, %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !7
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  tail call void @rest_of_compilation(%union.tree_node* %fndecl) #4
  %bf.load4 = load i64* %5, align 8
  %bf.clear5 = and i64 %bf.load4, -2049
  store i64 %bf.clear5, i64* %5, align 8
  store %struct.function* %0, %struct.function** @cfun, align 8, !tbaa !7
  %tobool6 = icmp eq %struct.function* %0, null
  br i1 %tobool6, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end
  %decl7 = getelementptr inbounds %struct.function* %0, i64 0, i32 6
  %7 = load %union.tree_node** %decl7, align 8, !tbaa !54
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %union.tree_node* [ %7, %cond.true ], [ null, %if.end ]
  store %union.tree_node* %cond, %union.tree_node** @current_function_decl, align 8, !tbaa !7
  store i32 %1, i32* @write_symbols, align 4, !tbaa !33
  store %struct.gcc_debug_hooks* %2, %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !7
  ret void
}

declare void @clear_emit_caches() #1

declare void @set_new_last_label_num(i32) #1

declare void @rest_of_compilation(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_hard_reg_initial_reg(%struct.function* nocapture readonly %fun, %struct.rtx_def* %reg) #0 {
entry:
  %hard_reg_initial_vals = getelementptr inbounds %struct.function* %fun, i64 0, i32 17
  %0 = load %struct.initial_value_struct** %hard_reg_initial_vals, align 8, !tbaa !94
  %cmp = icmp eq %struct.initial_value_struct* %0, null
  br i1 %cmp, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %num_entries = getelementptr inbounds %struct.initial_value_struct* %0, i64 0, i32 0
  %1 = load i32* %num_entries, align 4, !tbaa !95
  %cmp112 = icmp sgt i32 %1, 0
  br i1 %cmp112, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %entries = getelementptr inbounds %struct.initial_value_struct* %0, i64 0, i32 2
  br label %for.body

for.cond:                                         ; preds = %for.body
  %2 = load i32* %num_entries, align 4, !tbaa !95
  %3 = trunc i64 %indvars.iv.next to i32
  %cmp1 = icmp slt i32 %3, %2
  br i1 %cmp1, label %for.body, label %return

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %4 = load %struct.initial_value_pair** %entries, align 8, !tbaa !97
  %pseudo = getelementptr inbounds %struct.initial_value_pair* %4, i64 %indvars.iv, i32 1
  %5 = load %struct.rtx_def** %pseudo, align 8, !tbaa !100
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %5, %struct.rtx_def* %reg) #4
  %tobool = icmp eq i32 %call, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool, label %for.cond, label %if.then2

if.then2:                                         ; preds = %for.body
  %6 = load %struct.initial_value_pair** %entries, align 8, !tbaa !97
  %hard_reg = getelementptr inbounds %struct.initial_value_pair* %6, i64 %indvars.iv, i32 0
  %7 = load %struct.rtx_def** %hard_reg, align 8, !tbaa !98
  br label %return

return:                                           ; preds = %for.cond, %for.cond.preheader, %entry, %if.then2
  %retval.0 = phi %struct.rtx_def* [ %7, %if.then2 ], [ null, %entry ], [ null, %for.cond.preheader ], [ null, %for.cond ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @has_func_hard_reg_initial_val(%struct.function* nocapture readonly %fun, %struct.rtx_def* %reg) #0 {
entry:
  %hard_reg_initial_vals = getelementptr inbounds %struct.function* %fun, i64 0, i32 17
  %0 = load %struct.initial_value_struct** %hard_reg_initial_vals, align 8, !tbaa !94
  %cmp = icmp eq %struct.initial_value_struct* %0, null
  br i1 %cmp, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %num_entries = getelementptr inbounds %struct.initial_value_struct* %0, i64 0, i32 0
  %1 = load i32* %num_entries, align 4, !tbaa !95
  %cmp112 = icmp sgt i32 %1, 0
  br i1 %cmp112, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %entries = getelementptr inbounds %struct.initial_value_struct* %0, i64 0, i32 2
  br label %for.body

for.cond:                                         ; preds = %for.body
  %2 = load i32* %num_entries, align 4, !tbaa !95
  %3 = trunc i64 %indvars.iv.next to i32
  %cmp1 = icmp slt i32 %3, %2
  br i1 %cmp1, label %for.body, label %return

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %4 = load %struct.initial_value_pair** %entries, align 8, !tbaa !97
  %hard_reg = getelementptr inbounds %struct.initial_value_pair* %4, i64 %indvars.iv, i32 0
  %5 = load %struct.rtx_def** %hard_reg, align 8, !tbaa !98
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %5, %struct.rtx_def* %reg) #4
  %tobool = icmp eq i32 %call, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool, label %for.cond, label %if.then2

if.then2:                                         ; preds = %for.body
  %6 = load %struct.initial_value_pair** %entries, align 8, !tbaa !97
  %pseudo = getelementptr inbounds %struct.initial_value_pair* %6, i64 %indvars.iv, i32 1
  %7 = load %struct.rtx_def** %pseudo, align 8, !tbaa !100
  br label %return

return:                                           ; preds = %for.cond, %for.cond.preheader, %entry, %if.then2
  %retval.0 = phi %struct.rtx_def* [ %7, %if.then2 ], [ null, %entry ], [ null, %for.cond.preheader ], [ null, %for.cond ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_func_hard_reg_initial_val(%struct.function* nocapture %fun, %struct.rtx_def* %reg) #0 {
entry:
  %hard_reg_initial_vals = getelementptr inbounds %struct.function* %fun, i64 0, i32 17
  %0 = load %struct.initial_value_struct** %hard_reg_initial_vals, align 8, !tbaa !94
  %cmp.i = icmp eq %struct.initial_value_struct* %0, null
  br i1 %cmp.i, label %if.then1, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %entry
  %num_entries.i = getelementptr inbounds %struct.initial_value_struct* %0, i64 0, i32 0
  %1 = load i32* %num_entries.i, align 4, !tbaa !95
  %cmp112.i = icmp sgt i32 %1, 0
  br i1 %cmp112.i, label %for.body.lr.ph.i, label %if.end6

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %entries.i = getelementptr inbounds %struct.initial_value_struct* %0, i64 0, i32 2
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %2 = load i32* %num_entries.i, align 4, !tbaa !95
  %3 = trunc i64 %indvars.iv.next.i to i32
  %cmp1.i = icmp slt i32 %3, %2
  br i1 %cmp1.i, label %for.body.i, label %if.end6

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i ]
  %4 = load %struct.initial_value_pair** %entries.i, align 8, !tbaa !97
  %hard_reg.i = getelementptr inbounds %struct.initial_value_pair* %4, i64 %indvars.iv.i, i32 0
  %5 = load %struct.rtx_def** %hard_reg.i, align 8, !tbaa !98
  %call.i = tail call i32 @rtx_equal_p(%struct.rtx_def* %5, %struct.rtx_def* %reg) #4
  %tobool.i = icmp eq i32 %call.i, 0
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %tobool.i, label %for.cond.i, label %has_func_hard_reg_initial_val.exit

has_func_hard_reg_initial_val.exit:               ; preds = %for.body.i
  %6 = load %struct.initial_value_pair** %entries.i, align 8, !tbaa !97
  %pseudo.i = getelementptr inbounds %struct.initial_value_pair* %6, i64 %indvars.iv.i, i32 1
  %7 = load %struct.rtx_def** %pseudo.i, align 8, !tbaa !100
  %tobool = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool, label %if.end6, label %return

if.then1:                                         ; preds = %entry
  %call2 = tail call noalias i8* @xmalloc(i64 16) #4
  %8 = bitcast i8* %call2 to %struct.initial_value_struct*
  store %struct.initial_value_struct* %8, %struct.initial_value_struct** %hard_reg_initial_vals, align 8, !tbaa !94
  %num_entries = bitcast i8* %call2 to i32*
  store i32 0, i32* %num_entries, align 4, !tbaa !95
  %max_entries = getelementptr inbounds i8* %call2, i64 4
  %9 = bitcast i8* %max_entries to i32*
  store i32 5, i32* %9, align 4, !tbaa !121
  %call5 = tail call noalias i8* @xmalloc(i64 80) #4
  %10 = bitcast i8* %call5 to %struct.initial_value_pair*
  %entries = getelementptr inbounds i8* %call2, i64 8
  %11 = bitcast i8* %entries to %struct.initial_value_pair**
  store %struct.initial_value_pair* %10, %struct.initial_value_pair** %11, align 8, !tbaa !97
  br label %if.end6

if.end6:                                          ; preds = %for.cond.i, %has_func_hard_reg_initial_val.exit, %for.cond.preheader.i, %if.then1
  %ivs.0 = phi %struct.initial_value_struct* [ %8, %if.then1 ], [ %0, %for.cond.preheader.i ], [ %0, %has_func_hard_reg_initial_val.exit ], [ %0, %for.cond.i ]
  %num_entries7 = getelementptr inbounds %struct.initial_value_struct* %ivs.0, i64 0, i32 0
  %12 = load i32* %num_entries7, align 4, !tbaa !95
  %max_entries8 = getelementptr inbounds %struct.initial_value_struct* %ivs.0, i64 0, i32 1
  %13 = load i32* %max_entries8, align 4, !tbaa !121
  %cmp9 = icmp slt i32 %12, %13
  br i1 %cmp9, label %if.end6.if.end16_crit_edge, label %if.then10

if.end6.if.end16_crit_edge:                       ; preds = %if.end6
  %entries18.phi.trans.insert = getelementptr inbounds %struct.initial_value_struct* %ivs.0, i64 0, i32 2
  %.pre54 = load %struct.initial_value_pair** %entries18.phi.trans.insert, align 8, !tbaa !97
  br label %if.end16

if.then10:                                        ; preds = %if.end6
  %add = add nsw i32 %13, 5
  store i32 %add, i32* %max_entries8, align 4, !tbaa !121
  %entries12 = getelementptr inbounds %struct.initial_value_struct* %ivs.0, i64 0, i32 2
  %14 = load %struct.initial_value_pair** %entries12, align 8, !tbaa !97
  %15 = bitcast %struct.initial_value_pair* %14 to i8*
  %conv = sext i32 %add to i64
  %mul = shl nsw i64 %conv, 4
  %call14 = tail call i8* @xrealloc(i8* %15, i64 %mul) #4
  %16 = bitcast i8* %call14 to %struct.initial_value_pair*
  store %struct.initial_value_pair* %16, %struct.initial_value_pair** %entries12, align 8, !tbaa !97
  %.pre = load i32* %num_entries7, align 4, !tbaa !95
  br label %if.end16

if.end16:                                         ; preds = %if.end6.if.end16_crit_edge, %if.then10
  %17 = phi %struct.initial_value_pair* [ %.pre54, %if.end6.if.end16_crit_edge ], [ %16, %if.then10 ]
  %18 = phi i32 [ %12, %if.end6.if.end16_crit_edge ], [ %.pre, %if.then10 ]
  %idxprom = sext i32 %18 to i64
  %entries18 = getelementptr inbounds %struct.initial_value_struct* %ivs.0, i64 0, i32 2
  %hard_reg = getelementptr inbounds %struct.initial_value_pair* %17, i64 %idxprom, i32 0
  store %struct.rtx_def* %reg, %struct.rtx_def** %hard_reg, align 8, !tbaa !98
  %19 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %19, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call19 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #4
  %20 = load i32* %num_entries7, align 4, !tbaa !95
  %idxprom21 = sext i32 %20 to i64
  %21 = load %struct.initial_value_pair** %entries18, align 8, !tbaa !97
  %pseudo = getelementptr inbounds %struct.initial_value_pair* %21, i64 %idxprom21, i32 1
  store %struct.rtx_def* %call19, %struct.rtx_def** %pseudo, align 8, !tbaa !100
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %num_entries7, align 4, !tbaa !95
  br label %return

return:                                           ; preds = %has_func_hard_reg_initial_val.exit, %if.end16
  %retval.0 = phi %struct.rtx_def* [ %call19, %if.end16 ], [ %7, %has_func_hard_reg_initial_val.exit ]
  ret %struct.rtx_def* %retval.0
}

declare i8* @xrealloc(i8*, i64) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_hard_reg_initial_val(i32 %mode, i32 %regno) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !7
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %regno) #4
  %call1 = tail call %struct.rtx_def* @get_func_hard_reg_initial_val(%struct.function* %0, %struct.rtx_def* %call)
  ret %struct.rtx_def* %call1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @has_hard_reg_initial_val(i32 %mode, i32 %regno) #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !7
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %regno) #4
  %hard_reg_initial_vals.i = getelementptr inbounds %struct.function* %0, i64 0, i32 17
  %1 = load %struct.initial_value_struct** %hard_reg_initial_vals.i, align 8, !tbaa !94
  %cmp.i = icmp eq %struct.initial_value_struct* %1, null
  br i1 %cmp.i, label %has_func_hard_reg_initial_val.exit, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %entry
  %num_entries.i = getelementptr inbounds %struct.initial_value_struct* %1, i64 0, i32 0
  %2 = load i32* %num_entries.i, align 4, !tbaa !95
  %cmp112.i = icmp sgt i32 %2, 0
  br i1 %cmp112.i, label %for.body.lr.ph.i, label %has_func_hard_reg_initial_val.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %entries.i = getelementptr inbounds %struct.initial_value_struct* %1, i64 0, i32 2
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %3 = load i32* %num_entries.i, align 4, !tbaa !95
  %4 = trunc i64 %indvars.iv.next.i to i32
  %cmp1.i = icmp slt i32 %4, %3
  br i1 %cmp1.i, label %for.body.i, label %has_func_hard_reg_initial_val.exit

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i ]
  %5 = load %struct.initial_value_pair** %entries.i, align 8, !tbaa !97
  %hard_reg.i = getelementptr inbounds %struct.initial_value_pair* %5, i64 %indvars.iv.i, i32 0
  %6 = load %struct.rtx_def** %hard_reg.i, align 8, !tbaa !98
  %call.i = tail call i32 @rtx_equal_p(%struct.rtx_def* %6, %struct.rtx_def* %call) #4
  %tobool.i = icmp eq i32 %call.i, 0
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %tobool.i, label %for.cond.i, label %if.then2.i

if.then2.i:                                       ; preds = %for.body.i
  %7 = load %struct.initial_value_pair** %entries.i, align 8, !tbaa !97
  %pseudo.i = getelementptr inbounds %struct.initial_value_pair* %7, i64 %indvars.iv.i, i32 1
  %8 = load %struct.rtx_def** %pseudo.i, align 8, !tbaa !100
  br label %has_func_hard_reg_initial_val.exit

has_func_hard_reg_initial_val.exit:               ; preds = %for.cond.i, %entry, %for.cond.preheader.i, %if.then2.i
  %retval.0.i = phi %struct.rtx_def* [ %8, %if.then2.i ], [ null, %entry ], [ null, %for.cond.preheader.i ], [ null, %for.cond.i ]
  ret %struct.rtx_def* %retval.0.i
}

; Function Attrs: nounwind uwtable
define void @mark_hard_reg_initial_vals(%struct.function* nocapture readonly %fun) #0 {
entry:
  %hard_reg_initial_vals = getelementptr inbounds %struct.function* %fun, i64 0, i32 17
  %0 = load %struct.initial_value_struct** %hard_reg_initial_vals, align 8, !tbaa !94
  %cmp = icmp eq %struct.initial_value_struct* %0, null
  br i1 %cmp, label %for.end, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %num_entries = getelementptr inbounds %struct.initial_value_struct* %0, i64 0, i32 0
  %1 = load i32* %num_entries, align 4, !tbaa !95
  %cmp127 = icmp sgt i32 %1, 0
  br i1 %cmp127, label %do.body.lr.ph, label %for.end

do.body.lr.ph:                                    ; preds = %for.cond.preheader
  %entries = getelementptr inbounds %struct.initial_value_struct* %0, i64 0, i32 2
  br label %do.body

do.body:                                          ; preds = %do.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %do.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %2 = load %struct.initial_value_pair** %entries, align 8, !tbaa !97
  %hard_reg = getelementptr inbounds %struct.initial_value_pair* %2, i64 %indvars.iv, i32 0
  %3 = load %struct.rtx_def** %hard_reg, align 8, !tbaa !98
  %cmp2 = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp2, label %do.body5, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %4 = bitcast %struct.rtx_def* %3 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %4) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then3, label %do.body5

if.then3:                                         ; preds = %land.lhs.true
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %3) #4
  br label %do.body5

do.body5:                                         ; preds = %land.lhs.true, %do.body, %if.then3
  %5 = load %struct.initial_value_pair** %entries, align 8, !tbaa !97
  %pseudo = getelementptr inbounds %struct.initial_value_pair* %5, i64 %indvars.iv, i32 1
  %6 = load %struct.rtx_def** %pseudo, align 8, !tbaa !100
  %cmp10 = icmp eq %struct.rtx_def* %6, null
  br i1 %cmp10, label %for.inc, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %do.body5
  %7 = bitcast %struct.rtx_def* %6 to i8*
  %call12 = tail call i32 @ggc_set_mark(i8* %7) #4
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %if.then14, label %for.inc

if.then14:                                        ; preds = %land.lhs.true11
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %6) #4
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true11, %do.body5, %if.then14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = load i32* %num_entries, align 4, !tbaa !95
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp1 = icmp slt i32 %9, %8
  br i1 %cmp1, label %do.body, label %for.end

for.end:                                          ; preds = %for.inc, %for.cond.preheader, %entry
  ret void
}

declare i32 @ggc_set_mark(i8*) #1

declare void @ggc_mark_rtx_children(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @emit_initial_value_sets() #0 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !7
  %hard_reg_initial_vals = getelementptr inbounds %struct.function* %0, i64 0, i32 17
  %1 = load %struct.initial_value_struct** %hard_reg_initial_vals, align 8, !tbaa !94
  %cmp = icmp eq %struct.initial_value_struct* %1, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call void @start_sequence() #4
  %num_entries = getelementptr inbounds %struct.initial_value_struct* %1, i64 0, i32 0
  %2 = load i32* %num_entries, align 4, !tbaa !95
  %cmp114 = icmp sgt i32 %2, 0
  br i1 %cmp114, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %entries = getelementptr inbounds %struct.initial_value_struct* %1, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %3 = load %struct.initial_value_pair** %entries, align 8, !tbaa !97
  %pseudo = getelementptr inbounds %struct.initial_value_pair* %3, i64 %indvars.iv, i32 1
  %4 = load %struct.rtx_def** %pseudo, align 8, !tbaa !100
  %hard_reg = getelementptr inbounds %struct.initial_value_pair* %3, i64 %indvars.iv, i32 0
  %5 = load %struct.rtx_def** %hard_reg, align 8, !tbaa !98
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %4, %struct.rtx_def* %5) #4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32* %num_entries, align 4, !tbaa !95
  %7 = trunc i64 %indvars.iv.next to i32
  %cmp1 = icmp slt i32 %7, %6
  br i1 %cmp1, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.end
  %call5 = tail call %struct.rtx_def* @get_insns() #4
  tail call void @end_sequence() #4
  %call6 = tail call %struct.rtx_def* @get_insns() #4
  %call7 = tail call %struct.rtx_def* @emit_insns_after(%struct.rtx_def* %call5, %struct.rtx_def* %call6) #4
  br label %return

return:                                           ; preds = %entry, %for.end
  ret void
}

declare %struct.rtx_def* @emit_insns_after(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind readnone uwtable
define void @allocate_initial_values(%struct.rtx_def** nocapture %reg_equiv_memory_loc) #6 {
entry:
  ret void
}

declare i32 @subreg_regno_offset(i32, i32, i32, i32) #1

declare i32 @num_validated_changes() #1

declare i32 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i32) #1

declare void @cancel_changes(i32) #1

declare %struct.rtx_def* @gen_lowpart_if_possible(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_unary_operation(i32, i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @simplify_relational_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_binary_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_ternary_operation(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare %union.tree_node* @make_node(i32) #1

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @volatile_refs_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #1

declare i32 @returnjump_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #1

declare i32 @any_condjump_p(%struct.rtx_def*) #1

declare i32 @onlyjump_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_barrier() #1

declare %struct.rtx_def* @emit_call_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_uuuu(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare i8* @bsearch(i8*, i8*, i64, i64, i32 (i8*, i8*)*) #1

; Function Attrs: nounwind readonly uwtable
define internal i32 @find_block(i8* readnone %v1, i8* nocapture readonly %v2) #5 {
entry:
  %0 = bitcast i8* %v2 to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !7
  %abstract_origin = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 6
  %2 = bitcast %union.anon* %abstract_origin to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !91
  %4 = bitcast %union.tree_node* %3 to i8*
  %cmp = icmp eq i8* %4, %v1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp ugt i8* %4, %v1
  %cond = select i1 %cmp1, i32 -1, i32 1
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %cond, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @note_modified_parmregs(%struct.rtx_def* nocapture readonly %reg, %struct.rtx_def* nocapture readnone %x, i8* nocapture readnone %data) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  %.b = load i1* @in_nonparm_insns, align 1
  %or.cond = and i1 %cmp, %.b
  br i1 %or.cond, label %land.lhs.true1, label %if.end

land.lhs.true1:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !24
  %2 = load %struct.function** @cfun, align 8, !tbaa !7
  %x_max_parm_reg = getelementptr inbounds %struct.function* %2, i64 0, i32 37
  %3 = load i32* %x_max_parm_reg, align 4, !tbaa !40
  %cmp2 = icmp ult i32 %1, %3
  %cmp7 = icmp ugt i32 %1, 52
  %or.cond25 = and i1 %cmp2, %cmp7
  br i1 %or.cond25, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %land.lhs.true1
  %idxprom = zext i32 %1 to i64
  %4 = load %union.tree_node*** @parmdecl_map, align 8, !tbaa !7
  %arrayidx12 = getelementptr inbounds %union.tree_node** %4, i64 %idxprom
  %5 = load %union.tree_node** %arrayidx12, align 8, !tbaa !7
  %cmp13 = icmp eq %union.tree_node* %5, null
  br i1 %cmp13, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true8
  %readonly_flag = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load19 = load i32* %readonly_flag, align 8
  %bf.clear20 = and i32 %bf.load19, -4097
  store i32 %bf.clear20, i32* %readonly_flag, align 8
  br label %if.end

if.end:                                           ; preds = %land.lhs.true8, %if.then, %land.lhs.true1, %entry
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !6, i64 40}
!2 = metadata !{metadata !"inline_remap", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !3, i64 56, metadata !3, i64 60, metadata !6, i64 64, metadata !3, i64 72, metadata !6, i64 80, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !3, i64 136, metadata !4, i64 144, metadata !6, i64 624, metadata !6, i64 632, metadata !4, i64 640}
!3 = metadata !{metadata !"int", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!7 = metadata !{metadata !6, metadata !6, i64 0}
!8 = metadata !{metadata !9, metadata !6, i64 256}
!9 = metadata !{metadata !"gcc_target", metadata !10, i64 0, metadata !12, i64 168, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !6, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !6, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !13, i64 328, metadata !13, i64 329, metadata !6, i64 336}
!10 = metadata !{metadata !"asm_out", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !11, i64 24, metadata !11, i64 56, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !6, i64 152, metadata !6, i64 160}
!11 = metadata !{metadata !"asm_int_op", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24}
!12 = metadata !{metadata !"sched", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64}
!13 = metadata !{metadata !"_Bool", metadata !4, i64 0}
!14 = metadata !{metadata !15, metadata !6, i64 0}
!15 = metadata !{metadata !"attribute_spec", metadata !6, i64 0, metadata !3, i64 8, metadata !3, i64 12, metadata !13, i64 16, metadata !13, i64 17, metadata !13, i64 18, metadata !6, i64 24}
!16 = metadata !{metadata !9, metadata !6, i64 288}
!17 = metadata !{metadata !18, metadata !6, i64 8}
!18 = metadata !{metadata !"tree_common", metadata !6, i64 0, metadata !6, i64 8, metadata !4, i64 16, metadata !3, i64 17, metadata !3, i64 17, metadata !3, i64 17, metadata !3, i64 17, metadata !3, i64 17, metadata !3, i64 17, metadata !3, i64 17, metadata !3, i64 17, metadata !3, i64 18, metadata !3, i64 18, metadata !3, i64 18, metadata !3, i64 18, metadata !3, i64 18, metadata !3, i64 18, metadata !3, i64 18, metadata !3, i64 18, metadata !3, i64 19, metadata !3, i64 19, metadata !3, i64 19, metadata !3, i64 19, metadata !3, i64 19, metadata !3, i64 19, metadata !3, i64 19, metadata !3, i64 19}
!19 = metadata !{metadata !20, metadata !3, i64 8}
!20 = metadata !{metadata !"param_info", metadata !6, i64 0, metadata !3, i64 8, metadata !6, i64 16}
!21 = metadata !{metadata !22, metadata !6, i64 88}
!22 = metadata !{metadata !"tree_decl", metadata !18, i64 0, metadata !6, i64 24, metadata !3, i64 32, metadata !3, i64 36, metadata !6, i64 40, metadata !4, i64 48, metadata !3, i64 49, metadata !3, i64 49, metadata !3, i64 49, metadata !3, i64 49, metadata !3, i64 49, metadata !3, i64 49, metadata !3, i64 49, metadata !3, i64 49, metadata !3, i64 50, metadata !3, i64 50, metadata !3, i64 50, metadata !3, i64 50, metadata !3, i64 50, metadata !3, i64 50, metadata !3, i64 50, metadata !3, i64 50, metadata !3, i64 51, metadata !3, i64 51, metadata !3, i64 51, metadata !3, i64 51, metadata !3, i64 51, metadata !4, i64 51, metadata !3, i64 51, metadata !3, i64 52, metadata !3, i64 52, metadata !3, i64 52, metadata !3, i64 52, metadata !3, i64 52, metadata !3, i64 52, metadata !3, i64 52, metadata !3, i64 53, metadata !3, i64 53, metadata !3, i64 53, metadata !3, i64 53, metadata !3, i64 53, metadata !4, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !6, i64 152, metadata !4, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !23, i64 192, metadata !6, i64 200}
!23 = metadata !{metadata !"long long", metadata !4, i64 0}
!24 = metadata !{metadata !3, metadata !3, i64 0}
!25 = metadata !{metadata !26, metadata !6, i64 32}
!26 = metadata !{metadata !"tree_list", metadata !18, i64 0, metadata !6, i64 24, metadata !6, i64 32}
!27 = metadata !{metadata !28, metadata !6, i64 16}
!28 = metadata !{metadata !"function", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !3, i64 64, metadata !3, i64 68, metadata !3, i64 72, metadata !3, i64 76, metadata !6, i64 80, metadata !29, i64 88, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !3, i64 152, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !23, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !3, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !3, i64 328, metadata !3, i64 332, metadata !3, i64 336, metadata !6, i64 344, metadata !3, i64 352, metadata !3, i64 356, metadata !6, i64 360, metadata !6, i64 368, metadata !6, i64 376, metadata !3, i64 384, metadata !3, i64 388, metadata !6, i64 392, metadata !3, i64 400, metadata !3, i64 404, metadata !6, i64 408, metadata !6, i64 416, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 424, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 425, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426, metadata !3, i64 426}
!29 = metadata !{metadata !"ix86_args", metadata !3, i64 0, metadata !3, i64 4, metadata !3, i64 8, metadata !3, i64 12, metadata !3, i64 16, metadata !3, i64 20, metadata !3, i64 24}
!30 = metadata !{metadata !31, metadata !6, i64 32}
!31 = metadata !{metadata !"expr_status", metadata !3, i64 0, metadata !3, i64 4, metadata !3, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40}
!32 = metadata !{metadata !28, metadata !6, i64 136}
!33 = metadata !{metadata !4, metadata !4, i64 0}
!34 = metadata !{metadata !22, metadata !6, i64 96}
!35 = metadata !{metadata !22, metadata !6, i64 144}
!36 = metadata !{metadata !22, metadata !6, i64 72}
!37 = metadata !{metadata !22, metadata !6, i64 200}
!38 = metadata !{metadata !22, metadata !6, i64 112}
!39 = metadata !{metadata !22, metadata !6, i64 80}
!40 = metadata !{metadata !28, metadata !3, i64 304}
!41 = metadata !{metadata !28, metadata !6, i64 200}
!42 = metadata !{metadata !28, metadata !3, i64 384}
!43 = metadata !{metadata !28, metadata !6, i64 296}
!44 = metadata !{metadata !28, metadata !6, i64 376}
!45 = metadata !{metadata !28, metadata !6, i64 360}
!46 = metadata !{metadata !22, metadata !6, i64 104}
!47 = metadata !{metadata !28, metadata !6, i64 368}
!48 = metadata !{metadata !28, metadata !3, i64 356}
!49 = metadata !{metadata !28, metadata !6, i64 24}
!50 = metadata !{metadata !51, metadata !6, i64 8}
!51 = metadata !{metadata !"emit_status", metadata !3, i64 0, metadata !3, i64 4, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !3, i64 40, metadata !3, i64 44, metadata !6, i64 48, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80}
!52 = metadata !{metadata !51, metadata !3, i64 4}
!53 = metadata !{metadata !51, metadata !3, i64 0}
!54 = metadata !{metadata !28, metadata !6, i64 48}
!55 = metadata !{metadata !28, metadata !3, i64 404}
!56 = metadata !{metadata !57, metadata !6, i64 128}
!57 = metadata !{metadata !"tree_type", metadata !18, i64 0, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !3, i64 56, metadata !3, i64 60, metadata !4, i64 61, metadata !3, i64 62, metadata !3, i64 62, metadata !3, i64 62, metadata !3, i64 62, metadata !3, i64 62, metadata !3, i64 62, metadata !3, i64 62, metadata !3, i64 63, metadata !3, i64 63, metadata !3, i64 63, metadata !3, i64 63, metadata !3, i64 63, metadata !3, i64 63, metadata !3, i64 63, metadata !3, i64 63, metadata !3, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !4, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !23, i64 152, metadata !6, i64 160}
!58 = metadata !{metadata !18, metadata !6, i64 0}
!59 = metadata !{metadata !57, metadata !3, i64 64}
!60 = metadata !{metadata !2, metadata !6, i64 8}
!61 = metadata !{metadata !2, metadata !6, i64 24}
!62 = metadata !{metadata !2, metadata !6, i64 32}
!63 = metadata !{metadata !2, metadata !6, i64 112}
!64 = metadata !{metadata !51, metadata !3, i64 40}
!65 = metadata !{metadata !2, metadata !6, i64 48}
!66 = metadata !{metadata !2, metadata !3, i64 56}
!67 = metadata !{metadata !2, metadata !3, i64 60}
!68 = metadata !{metadata !2, metadata !3, i64 0}
!69 = metadata !{metadata !2, metadata !6, i64 632}
!70 = metadata !{metadata !2, metadata !4, i64 640}
!71 = metadata !{metadata !2, metadata !6, i64 64}
!72 = metadata !{metadata !2, metadata !3, i64 72}
!73 = metadata !{metadata !2, metadata !6, i64 16}
!74 = metadata !{metadata !51, metadata !6, i64 64}
!75 = metadata !{metadata !2, metadata !6, i64 120}
!76 = metadata !{metadata !51, metadata !6, i64 80}
!77 = metadata !{metadata !2, metadata !6, i64 128}
!78 = metadata !{metadata !28, metadata !3, i64 76}
!79 = metadata !{metadata !80, metadata !81, i64 0}
!80 = metadata !{metadata !"varray_head_tag", metadata !81, i64 0, metadata !81, i64 8, metadata !81, i64 16, metadata !6, i64 24, metadata !4, i64 32}
!81 = metadata !{metadata !"long", metadata !4, i64 0}
!82 = metadata !{metadata !83, metadata !6, i64 0}
!83 = metadata !{metadata !"const_equiv_data", metadata !6, i64 0, metadata !3, i64 8}
!84 = metadata !{metadata !83, metadata !3, i64 8}
!85 = metadata !{metadata !28, metadata !3, i64 68}
!86 = metadata !{metadata !22, metadata !6, i64 24}
!87 = metadata !{metadata !22, metadata !3, i64 32}
!88 = metadata !{metadata !2, metadata !6, i64 80}
!89 = metadata !{metadata !90, metadata !90, i64 0}
!90 = metadata !{metadata !"short", metadata !4, i64 0}
!91 = metadata !{metadata !92, metadata !6, i64 56}
!92 = metadata !{metadata !"tree_block", metadata !18, i64 0, metadata !3, i64 24, metadata !3, i64 24, metadata !3, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72}
!93 = metadata !{metadata !80, metadata !81, i64 8}
!94 = metadata !{metadata !28, metadata !6, i64 144}
!95 = metadata !{metadata !96, metadata !3, i64 0}
!96 = metadata !{metadata !"initial_value_struct", metadata !3, i64 0, metadata !3, i64 4, metadata !6, i64 8}
!97 = metadata !{metadata !96, metadata !6, i64 8}
!98 = metadata !{metadata !99, metadata !6, i64 0}
!99 = metadata !{metadata !"initial_value_pair", metadata !6, i64 0, metadata !6, i64 8}
!100 = metadata !{metadata !99, metadata !6, i64 8}
!101 = metadata !{metadata !28, metadata !6, i64 128}
!102 = metadata !{metadata !28, metadata !3, i64 400}
!103 = metadata !{metadata !28, metadata !3, i64 152}
!104 = metadata !{metadata !23, metadata !23, i64 0}
!105 = metadata !{metadata !2, metadata !6, i64 88}
!106 = metadata !{metadata !2, metadata !6, i64 96}
!107 = metadata !{metadata !2, metadata !6, i64 104}
!108 = metadata !{metadata !109, metadata !3, i64 0}
!109 = metadata !{metadata !"rtvec_def", metadata !3, i64 0, metadata !4, i64 8}
!110 = metadata !{metadata !2, metadata !3, i64 136}
!111 = metadata !{metadata !112, metadata !6, i64 8}
!112 = metadata !{metadata !"equiv_table", metadata !6, i64 0, metadata !6, i64 8}
!113 = metadata !{metadata !112, metadata !6, i64 0}
!114 = metadata !{metadata !51, metadata !6, i64 72}
!115 = metadata !{metadata !92, metadata !6, i64 48}
!116 = metadata !{metadata !2, metadata !6, i64 624}
!117 = metadata !{metadata !117, metadata !118, metadata !119}
!118 = metadata !{metadata !"llvm.vectorizer.width", i32 1}
!119 = metadata !{metadata !"llvm.vectorizer.unroll", i32 1}
!120 = metadata !{metadata !120, metadata !118, metadata !119}
!121 = metadata !{metadata !96, metadata !3, i64 4}
