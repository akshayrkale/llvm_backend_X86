; ModuleID = 'ggc-common.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ggc_root = type { %struct.ggc_root*, i8*, i32, i32, void (i8*)* }
%struct.d_htab_root = type { %struct.d_htab_root*, %struct.htab*, i32 (i8*)*, void (i8*)* }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i32 }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.ggc_statistics = type { [256 x i32], [256 x i64], [256 x i32], [256 x i64], i64, i64, i32, i32 }
%struct.label_node = type opaque
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type opaque
%struct.lang_decl = type opaque
%struct.hash_table = type { %struct.hash_entry**, i32, %struct.hash_entry* (%struct.hash_entry*, %struct.hash_table*, i8*)*, i64 (i8*)*, i1 (i8*, i8*)*, %struct.obstack }
%struct.hash_entry = type { %struct.hash_entry*, i8*, i64 }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.mem_attrs = type { i64, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct._IO_FILE = type opaque

@roots = internal unnamed_addr global %struct.ggc_root* null, align 8
@.str = private unnamed_addr constant [13 x i8] c"ggc-common.c\00", align 1
@__FUNCTION__.ggc_del_root = private unnamed_addr constant [13 x i8] c"ggc_del_root\00", align 1
@d_htab_roots = internal unnamed_addr global %struct.d_htab_root* null, align 8
@.str1 = private unnamed_addr constant [18 x i8] c"ggc_pending_trees\00", align 1
@ggc_pending_trees = common global %struct.varray_head_tag* null, align 8
@ggc_stats = internal unnamed_addr global %struct.ggc_statistics* null, align 8
@.str2 = private unnamed_addr constant [22 x i8] c"\0A%-17s%10s %16s %10s\0A\00", align 1
@.str3 = private unnamed_addr constant [5 x i8] c"Tree\00", align 1
@.str4 = private unnamed_addr constant [7 x i8] c"Number\00", align 1
@.str5 = private unnamed_addr constant [6 x i8] c"Bytes\00", align 1
@.str6 = private unnamed_addr constant [8 x i8] c"% Total\00", align 1
@.str7 = private unnamed_addr constant [25 x i8] c"%-17s%10u%16ld%c %10.3f\0A\00", align 1
@tree_code_name = external global [256 x i8*]
@.str8 = private unnamed_addr constant [18 x i8] c"%-17s%10u%16ld%c\0A\00", align 1
@.str9 = private unnamed_addr constant [6 x i8] c"Total\00", align 1
@.str10 = private unnamed_addr constant [4 x i8] c"RTX\00", align 1
@rtx_name = external constant [153 x i8*]
@lang_mark_false_label_stack = common global void (%struct.label_node*)* null, align 8
@tree_code_type = external global [256 x i8]
@tree_code_length = external global [256 x i32]
@rtx_format = external constant [153 x i8*]

; Function Attrs: nounwind uwtable
define void @ggc_add_root(i8* %base, i32 %nelt, i32 %size, void (i8*)* %cb) #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 32) #4
  %0 = bitcast i8* %call to %struct.ggc_root*
  %1 = load %struct.ggc_root** @roots, align 8, !tbaa !1
  %next = bitcast i8* %call to %struct.ggc_root**
  store %struct.ggc_root* %1, %struct.ggc_root** %next, align 8, !tbaa !5
  %base1 = getelementptr inbounds i8* %call, i64 8
  %2 = bitcast i8* %base1 to i8**
  store i8* %base, i8** %2, align 8, !tbaa !8
  %nelt2 = getelementptr inbounds i8* %call, i64 16
  %3 = bitcast i8* %nelt2 to i32*
  store i32 %nelt, i32* %3, align 4, !tbaa !9
  %size3 = getelementptr inbounds i8* %call, i64 20
  %4 = bitcast i8* %size3 to i32*
  store i32 %size, i32* %4, align 4, !tbaa !10
  %cb4 = getelementptr inbounds i8* %call, i64 24
  %5 = bitcast i8* %cb4 to void (i8*)**
  store void (i8*)* %cb, void (i8*)** %5, align 8, !tbaa !11
  store %struct.ggc_root* %0, %struct.ggc_root** @roots, align 8, !tbaa !1
  ret void
}

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind uwtable
define void @ggc_add_rtx_root(%struct.rtx_def** %base, i32 %nelt) #0 {
entry:
  %0 = bitcast %struct.rtx_def** %base to i8*
  %call.i = tail call noalias i8* @xmalloc(i64 32) #4
  %1 = bitcast i8* %call.i to %struct.ggc_root*
  %2 = load %struct.ggc_root** @roots, align 8, !tbaa !1
  %next.i = bitcast i8* %call.i to %struct.ggc_root**
  store %struct.ggc_root* %2, %struct.ggc_root** %next.i, align 8, !tbaa !5
  %base1.i = getelementptr inbounds i8* %call.i, i64 8
  %3 = bitcast i8* %base1.i to i8**
  store i8* %0, i8** %3, align 8, !tbaa !8
  %nelt2.i = getelementptr inbounds i8* %call.i, i64 16
  %4 = bitcast i8* %nelt2.i to i32*
  store i32 %nelt, i32* %4, align 4, !tbaa !9
  %size3.i = getelementptr inbounds i8* %call.i, i64 20
  %5 = bitcast i8* %size3.i to i32*
  store i32 8, i32* %5, align 4, !tbaa !10
  %cb4.i = getelementptr inbounds i8* %call.i, i64 24
  %6 = bitcast i8* %cb4.i to void (i8*)**
  store void (i8*)* @ggc_mark_rtx_ptr, void (i8*)** %6, align 8, !tbaa !11
  store %struct.ggc_root* %1, %struct.ggc_root** @roots, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ggc_mark_rtx_ptr(i8* nocapture readonly %elt) #0 {
entry:
  %0 = bitcast i8* %elt to %struct.rtx_def**
  %1 = load %struct.rtx_def** %0, align 8, !tbaa !1
  %cmp = icmp eq %struct.rtx_def* %1, null
  br i1 %cmp, label %do.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = bitcast %struct.rtx_def* %1 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %2) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load.i = load i32* %3, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %bf.clear.off.i = add i32 %bf.clear.i, -32
  %switch.i = icmp ult i32 %bf.clear.off.i, 6
  br i1 %switch.i, label %sw.bb.i, label %ggc_mark_rtx_children.exit

sw.bb.i:                                          ; preds = %if.then
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %i.026.i = load %struct.rtx_def** %rtx.i, align 8
  %cmp27.i = icmp eq %struct.rtx_def* %i.026.i, null
  br i1 %cmp27.i, label %ggc_mark_rtx_children.exit, label %land.lhs.true.i

for.cond7.preheader.i:                            ; preds = %for.inc.i, %land.lhs.true.i
  %i.0.lcssa.i.ph = phi %struct.rtx_def* [ null, %for.inc.i ], [ %i.028.i, %land.lhs.true.i ]
  %i.123.i.pre = load %struct.rtx_def** %rtx.i, align 8
  %cmp824.i = icmp eq %struct.rtx_def* %i.123.i.pre, %i.0.lcssa.i.ph
  br i1 %cmp824.i, label %ggc_mark_rtx_children.exit, label %for.body.i

land.lhs.true.i:                                  ; preds = %sw.bb.i, %for.inc.i
  %i.028.i = phi %struct.rtx_def* [ %i.0.i, %for.inc.i ], [ %i.026.i, %sw.bb.i ]
  %4 = bitcast %struct.rtx_def* %i.028.i to i8*
  %call.i = tail call i32 @ggc_set_mark(i8* %4) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %for.inc.i, label %for.cond7.preheader.i

for.inc.i:                                        ; preds = %land.lhs.true.i
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %i.028.i, i64 0, i32 1, i64 2
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i to %struct.rtx_def**
  %i.0.i = load %struct.rtx_def** %rtx3.i, align 8
  %cmp.i = icmp eq %struct.rtx_def* %i.0.i, null
  br i1 %cmp.i, label %for.cond7.preheader.i, label %land.lhs.true.i

for.body.i:                                       ; preds = %for.cond7.preheader.i, %for.body.i
  %i.125.i = phi %struct.rtx_def* [ %i.1.i, %for.body.i ], [ %i.123.i.pre, %for.cond7.preheader.i ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.125.i) #4
  %arrayidx11.i = getelementptr inbounds %struct.rtx_def* %i.125.i, i64 0, i32 1, i64 2
  %rtx12.i = bitcast %union.rtunion_def* %arrayidx11.i to %struct.rtx_def**
  %i.1.i = load %struct.rtx_def** %rtx12.i, align 8
  %cmp8.i = icmp eq %struct.rtx_def* %i.1.i, %i.0.lcssa.i.ph
  br i1 %cmp8.i, label %ggc_mark_rtx_children.exit, label %for.body.i

ggc_mark_rtx_children.exit:                       ; preds = %for.body.i, %sw.bb.i, %if.then, %for.cond7.preheader.i
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %1) #4
  br label %do.end

do.end:                                           ; preds = %land.lhs.true, %entry, %ggc_mark_rtx_children.exit
  ret void
}

; Function Attrs: nounwind uwtable
define void @ggc_add_tree_root(%union.tree_node** %base, i32 %nelt) #0 {
entry:
  %0 = bitcast %union.tree_node** %base to i8*
  %call.i = tail call noalias i8* @xmalloc(i64 32) #4
  %1 = bitcast i8* %call.i to %struct.ggc_root*
  %2 = load %struct.ggc_root** @roots, align 8, !tbaa !1
  %next.i = bitcast i8* %call.i to %struct.ggc_root**
  store %struct.ggc_root* %2, %struct.ggc_root** %next.i, align 8, !tbaa !5
  %base1.i = getelementptr inbounds i8* %call.i, i64 8
  %3 = bitcast i8* %base1.i to i8**
  store i8* %0, i8** %3, align 8, !tbaa !8
  %nelt2.i = getelementptr inbounds i8* %call.i, i64 16
  %4 = bitcast i8* %nelt2.i to i32*
  store i32 %nelt, i32* %4, align 4, !tbaa !9
  %size3.i = getelementptr inbounds i8* %call.i, i64 20
  %5 = bitcast i8* %size3.i to i32*
  store i32 8, i32* %5, align 4, !tbaa !10
  %cb4.i = getelementptr inbounds i8* %call.i, i64 24
  %6 = bitcast i8* %cb4.i to void (i8*)**
  store void (i8*)* @ggc_mark_tree_ptr, void (i8*)** %6, align 8, !tbaa !11
  store %struct.ggc_root* %1, %struct.ggc_root** @roots, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ggc_mark_tree_ptr(i8* nocapture readonly %elt) #0 {
entry:
  %0 = bitcast i8* %elt to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %do.end8, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = bitcast %union.tree_node* %1 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %2) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %do.body1, label %do.end8

do.body1:                                         ; preds = %land.lhs.true
  %3 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 1
  %4 = load i64* %elements_used, align 8, !tbaa !12
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 0
  %5 = load i64* %num_elements, align 8, !tbaa !15
  %cmp2 = icmp ult i64 %4, %5
  br i1 %cmp2, label %if.end, label %if.then3

if.then3:                                         ; preds = %do.body1
  %mul = shl i64 %5, 1
  %call5 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %3, i64 %mul) #4
  store %struct.varray_head_tag* %call5, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used6.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call5, i64 0, i32 1
  %.pre = load i64* %elements_used6.phi.trans.insert, align 8, !tbaa !12
  br label %if.end

if.end:                                           ; preds = %do.body1, %if.then3
  %6 = phi i64 [ %4, %do.body1 ], [ %.pre, %if.then3 ]
  %7 = phi %struct.varray_head_tag* [ %3, %do.body1 ], [ %call5, %if.then3 ]
  %elements_used6 = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 1
  %inc = add i64 %6, 1
  store i64 %inc, i64* %elements_used6, align 8, !tbaa !12
  %data = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %6
  store %union.tree_node* %1, %union.tree_node** %arrayidx, align 8, !tbaa !1
  br label %do.end8

do.end8:                                          ; preds = %land.lhs.true, %entry, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define void @ggc_add_rtx_varray_root(%struct.varray_head_tag** %base, i32 %nelt) #0 {
entry:
  %0 = bitcast %struct.varray_head_tag** %base to i8*
  %call.i = tail call noalias i8* @xmalloc(i64 32) #4
  %1 = bitcast i8* %call.i to %struct.ggc_root*
  %2 = load %struct.ggc_root** @roots, align 8, !tbaa !1
  %next.i = bitcast i8* %call.i to %struct.ggc_root**
  store %struct.ggc_root* %2, %struct.ggc_root** %next.i, align 8, !tbaa !5
  %base1.i = getelementptr inbounds i8* %call.i, i64 8
  %3 = bitcast i8* %base1.i to i8**
  store i8* %0, i8** %3, align 8, !tbaa !8
  %nelt2.i = getelementptr inbounds i8* %call.i, i64 16
  %4 = bitcast i8* %nelt2.i to i32*
  store i32 %nelt, i32* %4, align 4, !tbaa !9
  %size3.i = getelementptr inbounds i8* %call.i, i64 20
  %5 = bitcast i8* %size3.i to i32*
  store i32 8, i32* %5, align 4, !tbaa !10
  %cb4.i = getelementptr inbounds i8* %call.i, i64 24
  %6 = bitcast i8* %cb4.i to void (i8*)**
  store void (i8*)* @ggc_mark_rtx_varray_ptr, void (i8*)** %6, align 8, !tbaa !11
  store %struct.ggc_root* %1, %struct.ggc_root** @roots, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ggc_mark_rtx_varray_ptr(i8* nocapture readonly %elt) #0 {
entry:
  %0 = bitcast i8* %elt to %struct.varray_head_tag**
  %1 = load %struct.varray_head_tag** %0, align 8, !tbaa !1
  tail call void @ggc_mark_rtx_varray(%struct.varray_head_tag* %1)
  ret void
}

; Function Attrs: nounwind uwtable
define void @ggc_add_tree_varray_root(%struct.varray_head_tag** %base, i32 %nelt) #0 {
entry:
  %0 = bitcast %struct.varray_head_tag** %base to i8*
  %call.i = tail call noalias i8* @xmalloc(i64 32) #4
  %1 = bitcast i8* %call.i to %struct.ggc_root*
  %2 = load %struct.ggc_root** @roots, align 8, !tbaa !1
  %next.i = bitcast i8* %call.i to %struct.ggc_root**
  store %struct.ggc_root* %2, %struct.ggc_root** %next.i, align 8, !tbaa !5
  %base1.i = getelementptr inbounds i8* %call.i, i64 8
  %3 = bitcast i8* %base1.i to i8**
  store i8* %0, i8** %3, align 8, !tbaa !8
  %nelt2.i = getelementptr inbounds i8* %call.i, i64 16
  %4 = bitcast i8* %nelt2.i to i32*
  store i32 %nelt, i32* %4, align 4, !tbaa !9
  %size3.i = getelementptr inbounds i8* %call.i, i64 20
  %5 = bitcast i8* %size3.i to i32*
  store i32 8, i32* %5, align 4, !tbaa !10
  %cb4.i = getelementptr inbounds i8* %call.i, i64 24
  %6 = bitcast i8* %cb4.i to void (i8*)**
  store void (i8*)* @ggc_mark_tree_varray_ptr, void (i8*)** %6, align 8, !tbaa !11
  store %struct.ggc_root* %1, %struct.ggc_root** @roots, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ggc_mark_tree_varray_ptr(i8* nocapture readonly %elt) #0 {
entry:
  %0 = bitcast i8* %elt to %struct.varray_head_tag**
  %1 = load %struct.varray_head_tag** %0, align 8, !tbaa !1
  %tobool.i = icmp eq %struct.varray_head_tag* %1, null
  br i1 %tobool.i, label %ggc_mark_tree_varray.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 0
  %2 = load i64* %num_elements.i, align 8, !tbaa !15
  %sub.i = add i64 %2, 4294967295
  %conv.i = trunc i64 %sub.i to i32
  %cmp26.i = icmp sgt i32 %conv.i, -1
  br i1 %cmp26.i, label %do.body.lr.ph.i, label %ggc_mark_tree_varray.exit

do.body.lr.ph.i:                                  ; preds = %if.then.i
  %data.i = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %tree.i = bitcast %union.varray_data_tag* %data.i to [1 x %union.tree_node*]*
  %sext.i = shl i64 %sub.i, 32
  %3 = ashr exact i64 %sext.i, 32
  br label %do.body.i

do.body.i:                                        ; preds = %for.inc.i, %do.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %3, %do.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %arrayidx.i = getelementptr inbounds [1 x %union.tree_node*]* %tree.i, i64 0, i64 %indvars.iv.i
  %4 = load %union.tree_node** %arrayidx.i, align 8, !tbaa !1
  %cmp2.i = icmp eq %union.tree_node* %4, null
  br i1 %cmp2.i, label %for.inc.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body.i
  %5 = bitcast %union.tree_node* %4 to i8*
  %call.i = tail call i32 @ggc_set_mark(i8* %5) #4
  %tobool4.i = icmp eq i32 %call.i, 0
  br i1 %tobool4.i, label %do.body6.i, label %for.inc.i

do.body6.i:                                       ; preds = %land.lhs.true.i
  %6 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used.i = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 1
  %7 = load i64* %elements_used.i, align 8, !tbaa !12
  %num_elements7.i = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 0
  %8 = load i64* %num_elements7.i, align 8, !tbaa !15
  %cmp8.i = icmp ult i64 %7, %8
  br i1 %cmp8.i, label %if.end.i, label %if.then10.i

if.then10.i:                                      ; preds = %do.body6.i
  %mul.i = shl i64 %8, 1
  %call12.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %6, i64 %mul.i) #4
  store %struct.varray_head_tag* %call12.i, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used13.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call12.i, i64 0, i32 1
  %.pre.i = load i64* %elements_used13.phi.trans.insert.i, align 8, !tbaa !12
  br label %if.end.i

if.end.i:                                         ; preds = %if.then10.i, %do.body6.i
  %9 = phi i64 [ %7, %do.body6.i ], [ %.pre.i, %if.then10.i ]
  %10 = phi %struct.varray_head_tag* [ %6, %do.body6.i ], [ %call12.i, %if.then10.i ]
  %elements_used13.i = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 1
  %inc.i = add i64 %9, 1
  store i64 %inc.i, i64* %elements_used13.i, align 8, !tbaa !12
  %data14.i = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 4
  %tree15.i = bitcast %union.varray_data_tag* %data14.i to [1 x %union.tree_node*]*
  %arrayidx16.i = getelementptr inbounds [1 x %union.tree_node*]* %tree15.i, i64 0, i64 %9
  store %union.tree_node* %4, %union.tree_node** %arrayidx16.i, align 8, !tbaa !1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i, %land.lhs.true.i, %do.body.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %11 = trunc i64 %indvars.iv.i to i32
  %cmp.i = icmp sgt i32 %11, 0
  br i1 %cmp.i, label %do.body.i, label %ggc_mark_tree_varray.exit

ggc_mark_tree_varray.exit:                        ; preds = %for.inc.i, %entry, %if.then.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @ggc_add_tree_hash_table_root(%struct.hash_table** %base, i32 %nelt) #0 {
entry:
  %0 = bitcast %struct.hash_table** %base to i8*
  %call.i = tail call noalias i8* @xmalloc(i64 32) #4
  %1 = bitcast i8* %call.i to %struct.ggc_root*
  %2 = load %struct.ggc_root** @roots, align 8, !tbaa !1
  %next.i = bitcast i8* %call.i to %struct.ggc_root**
  store %struct.ggc_root* %2, %struct.ggc_root** %next.i, align 8, !tbaa !5
  %base1.i = getelementptr inbounds i8* %call.i, i64 8
  %3 = bitcast i8* %base1.i to i8**
  store i8* %0, i8** %3, align 8, !tbaa !8
  %nelt2.i = getelementptr inbounds i8* %call.i, i64 16
  %4 = bitcast i8* %nelt2.i to i32*
  store i32 %nelt, i32* %4, align 4, !tbaa !9
  %size3.i = getelementptr inbounds i8* %call.i, i64 20
  %5 = bitcast i8* %size3.i to i32*
  store i32 8, i32* %5, align 4, !tbaa !10
  %cb4.i = getelementptr inbounds i8* %call.i, i64 24
  %6 = bitcast i8* %cb4.i to void (i8*)**
  store void (i8*)* @ggc_mark_tree_hash_table_ptr, void (i8*)** %6, align 8, !tbaa !11
  store %struct.ggc_root* %1, %struct.ggc_root** @roots, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ggc_mark_tree_hash_table_ptr(i8* nocapture readonly %elt) #0 {
entry:
  %0 = bitcast i8* %elt to %struct.hash_table**
  %1 = load %struct.hash_table** %0, align 8, !tbaa !1
  tail call void @hash_traverse(%struct.hash_table* %1, i1 (%struct.hash_entry*, i8*)* @ggc_mark_tree_hash_table_entry, i8* null) #4
  ret void
}

; Function Attrs: nounwind uwtable
define void @ggc_del_root(i8* readnone %base) #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %x.0.in = phi %struct.ggc_root** [ @roots, %entry ], [ %next, %while.body ]
  %x.0 = load %struct.ggc_root** %x.0.in, align 8
  %tobool = icmp eq %struct.ggc_root* %x.0, null
  br i1 %tobool, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %base1 = getelementptr inbounds %struct.ggc_root* %x.0, i64 0, i32 1
  %0 = load i8** %base1, align 8, !tbaa !8
  %cmp = icmp eq i8* %0, %base
  %next = getelementptr inbounds %struct.ggc_root* %x.0, i64 0, i32 0
  br i1 %cmp, label %if.then, label %while.cond

if.then:                                          ; preds = %while.body
  %1 = load %struct.ggc_root** %next, align 8, !tbaa !5
  store %struct.ggc_root* %1, %struct.ggc_root** %x.0.in, align 8, !tbaa !1
  %2 = bitcast %struct.ggc_root* %x.0 to i8*
  tail call void @free(i8* %2)
  ret void

while.end:                                        ; preds = %while.cond
  tail call void @fancy_abort(i8* getelementptr inbounds ([13 x i8]* @.str, i64 0, i64 0), i32 169, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.ggc_del_root, i64 0, i64 0)) #5
  unreachable
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #2

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define void @ggc_add_deletable_htab(i8* %x, i32 (i8*)* %marked_p, void (i8*)* %mark) #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 32) #4
  %0 = bitcast i8* %call to %struct.d_htab_root*
  %1 = load %struct.d_htab_root** @d_htab_roots, align 8, !tbaa !1
  %next = bitcast i8* %call to %struct.d_htab_root**
  store %struct.d_htab_root* %1, %struct.d_htab_root** %next, align 8, !tbaa !16
  %2 = bitcast i8* %x to %struct.htab*
  %htab = getelementptr inbounds i8* %call, i64 8
  %3 = bitcast i8* %htab to %struct.htab**
  store %struct.htab* %2, %struct.htab** %3, align 8, !tbaa !18
  %tobool = icmp ne i32 (i8*)* %marked_p, null
  %cond = select i1 %tobool, i32 (i8*)* %marked_p, i32 (i8*)* @ggc_marked_p
  %marked_p1 = getelementptr inbounds i8* %call, i64 16
  %4 = bitcast i8* %marked_p1 to i32 (i8*)**
  store i32 (i8*)* %cond, i32 (i8*)** %4, align 8, !tbaa !19
  %mark2 = getelementptr inbounds i8* %call, i64 24
  %5 = bitcast i8* %mark2 to void (i8*)**
  store void (i8*)* %mark, void (i8*)** %5, align 8, !tbaa !20
  store %struct.d_htab_root* %0, %struct.d_htab_root** @d_htab_roots, align 8, !tbaa !1
  ret void
}

declare i32 @ggc_marked_p(i8*) #1

; Function Attrs: nounwind uwtable
define void @ggc_mark_roots() #0 {
entry:
  %call = tail call %struct.varray_head_tag* @varray_init(i64 4096, i64 8, i8* getelementptr inbounds ([18 x i8]* @.str1, i64 0, i64 0)) #4
  store %struct.varray_head_tag* %call, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %x.035 = load %struct.ggc_root** @roots, align 8
  %cmp36 = icmp eq %struct.ggc_root* %x.035, null
  br i1 %cmp36, label %for.end6, label %for.body

for.body:                                         ; preds = %entry, %for.inc5
  %x.037 = phi %struct.ggc_root* [ %x.0, %for.inc5 ], [ %x.035, %entry ]
  %nelt = getelementptr inbounds %struct.ggc_root* %x.037, i64 0, i32 2
  %0 = load i32* %nelt, align 4, !tbaa !9
  %cb1 = getelementptr inbounds %struct.ggc_root* %x.037, i64 0, i32 4
  %1 = load void (i8*)** %cb1, align 8, !tbaa !11
  %cmp332 = icmp sgt i32 %0, 0
  br i1 %cmp332, label %for.body4.lr.ph, label %for.inc5

for.body4.lr.ph:                                  ; preds = %for.body
  %size = getelementptr inbounds %struct.ggc_root* %x.037, i64 0, i32 3
  %base = getelementptr inbounds %struct.ggc_root* %x.037, i64 0, i32 1
  %2 = load i32* %size, align 4, !tbaa !10
  %3 = load i8** %base, align 8, !tbaa !8
  %idx.ext = sext i32 %2 to i64
  br label %for.body4

for.body4:                                        ; preds = %for.body4, %for.body4.lr.ph
  %i.034 = phi i32 [ 0, %for.body4.lr.ph ], [ %inc, %for.body4 ]
  %elt.033 = phi i8* [ %3, %for.body4.lr.ph ], [ %add.ptr, %for.body4 ]
  tail call void %1(i8* %elt.033) #4
  %inc = add nsw i32 %i.034, 1
  %add.ptr = getelementptr inbounds i8* %elt.033, i64 %idx.ext
  %exitcond = icmp eq i32 %inc, %0
  br i1 %exitcond, label %for.inc5, label %for.body4

for.inc5:                                         ; preds = %for.body4, %for.body
  %next = getelementptr inbounds %struct.ggc_root* %x.037, i64 0, i32 0
  %x.0 = load %struct.ggc_root** %next, align 8
  %cmp = icmp eq %struct.ggc_root* %x.0, null
  br i1 %cmp, label %for.end6, label %for.body

for.end6:                                         ; preds = %for.inc5, %entry
  tail call fastcc void @ggc_mark_trees()
  %4 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %tobool = icmp eq %struct.varray_head_tag* %4, null
  br i1 %tobool, label %do.end, label %if.then

if.then:                                          ; preds = %for.end6
  %5 = bitcast %struct.varray_head_tag* %4 to i8*
  tail call void @free(i8* %5)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  br label %do.end

do.end:                                           ; preds = %for.end6, %if.then
  %call7 = tail call %struct.varray_head_tag* @varray_init(i64 1024, i64 8, i8* getelementptr inbounds ([18 x i8]* @.str1, i64 0, i64 0)) #4
  store %struct.varray_head_tag* %call7, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %y.029 = load %struct.d_htab_root** @d_htab_roots, align 8
  %cmp930 = icmp eq %struct.d_htab_root* %y.029, null
  br i1 %cmp930, label %for.end13, label %for.body10

for.body10:                                       ; preds = %do.end, %for.body10
  %y.031 = phi %struct.d_htab_root* [ %y.0, %for.body10 ], [ %y.029, %do.end ]
  %htab = getelementptr inbounds %struct.d_htab_root* %y.031, i64 0, i32 1
  %6 = load %struct.htab** %htab, align 8, !tbaa !18
  %7 = bitcast %struct.d_htab_root* %y.031 to i8*
  tail call void @htab_traverse(%struct.htab* %6, i32 (i8**, i8*)* @ggc_htab_delete, i8* %7) #4
  %next12 = getelementptr inbounds %struct.d_htab_root* %y.031, i64 0, i32 0
  %y.0 = load %struct.d_htab_root** %next12, align 8
  %cmp9 = icmp eq %struct.d_htab_root* %y.0, null
  br i1 %cmp9, label %for.end13, label %for.body10

for.end13:                                        ; preds = %for.body10, %do.end
  tail call fastcc void @ggc_mark_trees()
  %8 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %tobool15 = icmp eq %struct.varray_head_tag* %8, null
  br i1 %tobool15, label %do.end18, label %if.then16

if.then16:                                        ; preds = %for.end13
  %9 = bitcast %struct.varray_head_tag* %8 to i8*
  tail call void @free(i8* %9)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  br label %do.end18

do.end18:                                         ; preds = %for.end13, %if.then16
  ret void
}

declare %struct.varray_head_tag* @varray_init(i64, i64, i8*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @ggc_mark_trees() #0 {
entry:
  %0 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1495 = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 1
  %1 = load i64* %elements_used1495, align 8, !tbaa !12
  %tobool1496 = icmp eq i64 %1, 0
  br i1 %tobool1496, label %while.end1208, label %while.body

while.body:                                       ; preds = %entry, %while.cond.backedge
  %2 = phi i64 [ %79, %while.cond.backedge ], [ %1, %entry ]
  %elements_used1497 = phi i64* [ %elements_used, %while.cond.backedge ], [ %elements_used1495, %entry ]
  %3 = phi %struct.varray_head_tag* [ %78, %while.cond.backedge ], [ %0, %entry ]
  %sub = add i64 %2, -1
  %data = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %sub
  %4 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  store i64 %sub, i64* %elements_used1497, align 8, !tbaa !12
  %code3 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code3, align 8
  %bf.clear = and i32 %bf.load, 255
  %5 = load %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  %tobool4 = icmp eq %struct.ggc_statistics* %5, null
  br i1 %tobool4, label %do.body, label %if.then

if.then:                                          ; preds = %while.body
  %idxprom1368 = zext i32 %bf.clear to i64
  %arrayidx5 = getelementptr inbounds %struct.ggc_statistics* %5, i64 0, i32 0, i64 %idxprom1368
  %6 = load i32* %arrayidx5, align 4, !tbaa !21
  %inc = add i32 %6, 1
  store i32 %inc, i32* %arrayidx5, align 4, !tbaa !21
  %7 = bitcast %union.tree_node* %4 to i8*
  %call = tail call i64 @ggc_get_size(i8* %7) #4
  %8 = load %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.ggc_statistics* %8, i64 0, i32 1, i64 %idxprom1368
  %9 = load i64* %arrayidx7, align 8, !tbaa !22
  %add = add i64 %9, %call
  store i64 %add, i64* %arrayidx7, align 8, !tbaa !22
  br label %do.body

do.body:                                          ; preds = %while.body, %if.then
  %type = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type, align 8, !tbaa !23
  %cmp = icmp eq %union.tree_node* %10, null
  br i1 %cmp, label %do.body26, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %11 = bitcast %union.tree_node* %10 to i8*
  %call9 = tail call i32 @ggc_set_mark(i8* %11) #4
  %tobool10 = icmp eq i32 %call9, 0
  br i1 %tobool10, label %do.body12, label %do.body26

do.body12:                                        ; preds = %land.lhs.true
  %12 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used13 = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 1
  %13 = load i64* %elements_used13, align 8, !tbaa !12
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 0
  %14 = load i64* %num_elements, align 8, !tbaa !15
  %cmp14 = icmp ult i64 %13, %14
  br i1 %cmp14, label %if.end18, label %if.then15

if.then15:                                        ; preds = %do.body12
  %mul = shl i64 %14, 1
  %call17 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %12, i64 %mul) #4
  store %struct.varray_head_tag* %call17, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used19.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call17, i64 0, i32 1
  %.pre1554 = load i64* %elements_used19.phi.trans.insert, align 8, !tbaa !12
  br label %if.end18

if.end18:                                         ; preds = %do.body12, %if.then15
  %15 = phi i64 [ %13, %do.body12 ], [ %.pre1554, %if.then15 ]
  %16 = phi %struct.varray_head_tag* [ %12, %do.body12 ], [ %call17, %if.then15 ]
  %elements_used19 = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 1
  %inc20 = add i64 %15, 1
  store i64 %inc20, i64* %elements_used19, align 8, !tbaa !12
  %data21 = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 4
  %tree22 = bitcast %union.varray_data_tag* %data21 to [1 x %union.tree_node*]*
  %arrayidx23 = getelementptr inbounds [1 x %union.tree_node*]* %tree22, i64 0, i64 %15
  store %union.tree_node* %10, %union.tree_node** %arrayidx23, align 8, !tbaa !1
  br label %do.body26

do.body26:                                        ; preds = %land.lhs.true, %do.body, %if.end18
  %chain = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %17 = load %union.tree_node** %chain, align 8, !tbaa !25
  %cmp29 = icmp eq %union.tree_node* %17, null
  br i1 %cmp29, label %do.end50, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %do.body26
  %18 = bitcast %union.tree_node* %17 to i8*
  %call31 = tail call i32 @ggc_set_mark(i8* %18) #4
  %tobool32 = icmp eq i32 %call31, 0
  br i1 %tobool32, label %do.body34, label %do.end50

do.body34:                                        ; preds = %land.lhs.true30
  %19 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used35 = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 1
  %20 = load i64* %elements_used35, align 8, !tbaa !12
  %num_elements36 = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 0
  %21 = load i64* %num_elements36, align 8, !tbaa !15
  %cmp37 = icmp ult i64 %20, %21
  br i1 %cmp37, label %if.end42, label %if.then38

if.then38:                                        ; preds = %do.body34
  %mul40 = shl i64 %21, 1
  %call41 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %19, i64 %mul40) #4
  store %struct.varray_head_tag* %call41, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used43.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call41, i64 0, i32 1
  %.pre1553 = load i64* %elements_used43.phi.trans.insert, align 8, !tbaa !12
  br label %if.end42

if.end42:                                         ; preds = %do.body34, %if.then38
  %22 = phi i64 [ %20, %do.body34 ], [ %.pre1553, %if.then38 ]
  %23 = phi %struct.varray_head_tag* [ %19, %do.body34 ], [ %call41, %if.then38 ]
  %elements_used43 = getelementptr inbounds %struct.varray_head_tag* %23, i64 0, i32 1
  %inc44 = add i64 %22, 1
  store i64 %inc44, i64* %elements_used43, align 8, !tbaa !12
  %data45 = getelementptr inbounds %struct.varray_head_tag* %23, i64 0, i32 4
  %tree46 = bitcast %union.varray_data_tag* %data45 to [1 x %union.tree_node*]*
  %arrayidx47 = getelementptr inbounds [1 x %union.tree_node*]* %tree46, i64 0, i64 %22
  store %union.tree_node* %17, %union.tree_node** %arrayidx47, align 8, !tbaa !1
  br label %do.end50

do.end50:                                         ; preds = %land.lhs.true30, %do.body26, %if.end42
  switch i32 %bf.clear, label %sw.epilog [
    i32 2, label %do.body51
    i32 3, label %sw.bb100
    i32 27, label %do.body133
    i32 35, label %do.body183
    i32 37, label %do.body192
    i32 1, label %sw.bb219
  ]

do.body51:                                        ; preds = %do.end50
  %purpose = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 1
  %24 = load i8** %purpose, align 8
  %25 = bitcast i8* %24 to %union.tree_node*
  %cmp53 = icmp eq i8* %24, null
  br i1 %cmp53, label %do.body75, label %land.lhs.true54

land.lhs.true54:                                  ; preds = %do.body51
  %call55 = tail call i32 @ggc_set_mark(i8* %24) #4
  %tobool56 = icmp eq i32 %call55, 0
  br i1 %tobool56, label %do.body58, label %do.body75

do.body58:                                        ; preds = %land.lhs.true54
  %26 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used59 = getelementptr inbounds %struct.varray_head_tag* %26, i64 0, i32 1
  %27 = load i64* %elements_used59, align 8, !tbaa !12
  %num_elements60 = getelementptr inbounds %struct.varray_head_tag* %26, i64 0, i32 0
  %28 = load i64* %num_elements60, align 8, !tbaa !15
  %cmp61 = icmp ult i64 %27, %28
  br i1 %cmp61, label %if.end66, label %if.then62

if.then62:                                        ; preds = %do.body58
  %mul64 = shl i64 %28, 1
  %call65 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %26, i64 %mul64) #4
  store %struct.varray_head_tag* %call65, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used67.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call65, i64 0, i32 1
  %.pre1547 = load i64* %elements_used67.phi.trans.insert, align 8, !tbaa !12
  br label %if.end66

if.end66:                                         ; preds = %do.body58, %if.then62
  %29 = phi i64 [ %27, %do.body58 ], [ %.pre1547, %if.then62 ]
  %30 = phi %struct.varray_head_tag* [ %26, %do.body58 ], [ %call65, %if.then62 ]
  %elements_used67 = getelementptr inbounds %struct.varray_head_tag* %30, i64 0, i32 1
  %inc68 = add i64 %29, 1
  store i64 %inc68, i64* %elements_used67, align 8, !tbaa !12
  %data69 = getelementptr inbounds %struct.varray_head_tag* %30, i64 0, i32 4
  %tree70 = bitcast %union.varray_data_tag* %data69 to [1 x %union.tree_node*]*
  %arrayidx71 = getelementptr inbounds [1 x %union.tree_node*]* %tree70, i64 0, i64 %29
  store %union.tree_node* %25, %union.tree_node** %arrayidx71, align 8, !tbaa !1
  br label %do.body75

do.body75:                                        ; preds = %land.lhs.true54, %do.body51, %if.end66
  %value = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %31 = bitcast i32* %value to %union.tree_node**
  %32 = load %union.tree_node** %31, align 8, !tbaa !26
  %cmp78 = icmp eq %union.tree_node* %32, null
  br i1 %cmp78, label %while.cond.backedge, label %land.lhs.true79

land.lhs.true79:                                  ; preds = %do.body75
  %33 = bitcast %union.tree_node* %32 to i8*
  %call80 = tail call i32 @ggc_set_mark(i8* %33) #4
  %tobool81 = icmp eq i32 %call80, 0
  br i1 %tobool81, label %do.body83, label %while.cond.backedge

do.body83:                                        ; preds = %land.lhs.true79
  %34 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used84 = getelementptr inbounds %struct.varray_head_tag* %34, i64 0, i32 1
  %35 = load i64* %elements_used84, align 8, !tbaa !12
  %num_elements85 = getelementptr inbounds %struct.varray_head_tag* %34, i64 0, i32 0
  %36 = load i64* %num_elements85, align 8, !tbaa !15
  %cmp86 = icmp ult i64 %35, %36
  br i1 %cmp86, label %if.end91, label %if.then87

if.then87:                                        ; preds = %do.body83
  %mul89 = shl i64 %36, 1
  %call90 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %34, i64 %mul89) #4
  store %struct.varray_head_tag* %call90, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used92.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call90, i64 0, i32 1
  %.pre1546 = load i64* %elements_used92.phi.trans.insert, align 8, !tbaa !12
  br label %if.end91

if.end91:                                         ; preds = %do.body83, %if.then87
  %37 = phi i64 [ %35, %do.body83 ], [ %.pre1546, %if.then87 ]
  %38 = phi %struct.varray_head_tag* [ %34, %do.body83 ], [ %call90, %if.then87 ]
  %elements_used92 = getelementptr inbounds %struct.varray_head_tag* %38, i64 0, i32 1
  %inc93 = add i64 %37, 1
  store i64 %inc93, i64* %elements_used92, align 8, !tbaa !12
  %data94 = getelementptr inbounds %struct.varray_head_tag* %38, i64 0, i32 4
  %tree95 = bitcast %union.varray_data_tag* %data94 to [1 x %union.tree_node*]*
  %arrayidx96 = getelementptr inbounds [1 x %union.tree_node*]* %tree95, i64 0, i64 %37
  store %union.tree_node* %32, %union.tree_node** %arrayidx96, align 8, !tbaa !1
  br label %while.cond.backedge

sw.bb100:                                         ; preds = %do.end50
  %length = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 1
  %39 = bitcast i8** %length to i32*
  %40 = load i32* %39, align 4, !tbaa !28
  %cmp1031489 = icmp sgt i32 %40, 0
  br i1 %cmp1031489, label %do.body105.lr.ph, label %while.cond.backedge

do.body105.lr.ph:                                 ; preds = %sw.bb100
  %a = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %41 = bitcast i32* %a to [1 x %union.tree_node*]*
  %42 = sext i32 %40 to i64
  br label %do.body105

do.body105:                                       ; preds = %do.body105.lr.ph, %while.cond101.backedge
  %indvars.iv = phi i64 [ %42, %do.body105.lr.ph ], [ %indvars.iv.next, %while.cond101.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx109 = getelementptr inbounds [1 x %union.tree_node*]* %41, i64 0, i64 %indvars.iv.next
  %43 = load %union.tree_node** %arrayidx109, align 8, !tbaa !1
  %cmp110 = icmp eq %union.tree_node* %43, null
  br i1 %cmp110, label %while.cond101.backedge, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %do.body105
  %44 = bitcast %union.tree_node* %43 to i8*
  %call112 = tail call i32 @ggc_set_mark(i8* %44) #4
  %tobool113 = icmp eq i32 %call112, 0
  br i1 %tobool113, label %do.body115, label %while.cond101.backedge

do.body115:                                       ; preds = %land.lhs.true111
  %45 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used116 = getelementptr inbounds %struct.varray_head_tag* %45, i64 0, i32 1
  %46 = load i64* %elements_used116, align 8, !tbaa !12
  %num_elements117 = getelementptr inbounds %struct.varray_head_tag* %45, i64 0, i32 0
  %47 = load i64* %num_elements117, align 8, !tbaa !15
  %cmp118 = icmp ult i64 %46, %47
  br i1 %cmp118, label %if.end123, label %if.then119

if.then119:                                       ; preds = %do.body115
  %mul121 = shl i64 %47, 1
  %call122 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %45, i64 %mul121) #4
  store %struct.varray_head_tag* %call122, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used124.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call122, i64 0, i32 1
  %.pre1548 = load i64* %elements_used124.phi.trans.insert, align 8, !tbaa !12
  br label %if.end123

if.end123:                                        ; preds = %do.body115, %if.then119
  %48 = phi i64 [ %46, %do.body115 ], [ %.pre1548, %if.then119 ]
  %49 = phi %struct.varray_head_tag* [ %45, %do.body115 ], [ %call122, %if.then119 ]
  %elements_used124 = getelementptr inbounds %struct.varray_head_tag* %49, i64 0, i32 1
  %inc125 = add i64 %48, 1
  store i64 %inc125, i64* %elements_used124, align 8, !tbaa !12
  %data126 = getelementptr inbounds %struct.varray_head_tag* %49, i64 0, i32 4
  %tree127 = bitcast %union.varray_data_tag* %data126 to [1 x %union.tree_node*]*
  %arrayidx128 = getelementptr inbounds [1 x %union.tree_node*]* %tree127, i64 0, i64 %48
  store %union.tree_node* %43, %union.tree_node** %arrayidx128, align 8, !tbaa !1
  br label %while.cond101.backedge

while.cond101.backedge:                           ; preds = %if.end123, %do.body105, %land.lhs.true111
  %50 = trunc i64 %indvars.iv.next to i32
  %cmp103 = icmp sgt i32 %50, 0
  br i1 %cmp103, label %do.body105, label %while.cond.backedge

do.body133:                                       ; preds = %do.end50
  %real = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %51 = bitcast i32* %real to %union.tree_node**
  %52 = load %union.tree_node** %51, align 8, !tbaa !30
  %cmp135 = icmp eq %union.tree_node* %52, null
  br i1 %cmp135, label %do.body157, label %land.lhs.true136

land.lhs.true136:                                 ; preds = %do.body133
  %53 = bitcast %union.tree_node* %52 to i8*
  %call137 = tail call i32 @ggc_set_mark(i8* %53) #4
  %tobool138 = icmp eq i32 %call137, 0
  br i1 %tobool138, label %do.body140, label %do.body157

do.body140:                                       ; preds = %land.lhs.true136
  %54 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used141 = getelementptr inbounds %struct.varray_head_tag* %54, i64 0, i32 1
  %55 = load i64* %elements_used141, align 8, !tbaa !12
  %num_elements142 = getelementptr inbounds %struct.varray_head_tag* %54, i64 0, i32 0
  %56 = load i64* %num_elements142, align 8, !tbaa !15
  %cmp143 = icmp ult i64 %55, %56
  br i1 %cmp143, label %if.end148, label %if.then144

if.then144:                                       ; preds = %do.body140
  %mul146 = shl i64 %56, 1
  %call147 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %54, i64 %mul146) #4
  store %struct.varray_head_tag* %call147, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used149.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call147, i64 0, i32 1
  %.pre1550 = load i64* %elements_used149.phi.trans.insert, align 8, !tbaa !12
  br label %if.end148

if.end148:                                        ; preds = %do.body140, %if.then144
  %57 = phi i64 [ %55, %do.body140 ], [ %.pre1550, %if.then144 ]
  %58 = phi %struct.varray_head_tag* [ %54, %do.body140 ], [ %call147, %if.then144 ]
  %elements_used149 = getelementptr inbounds %struct.varray_head_tag* %58, i64 0, i32 1
  %inc150 = add i64 %57, 1
  store i64 %inc150, i64* %elements_used149, align 8, !tbaa !12
  %data151 = getelementptr inbounds %struct.varray_head_tag* %58, i64 0, i32 4
  %tree152 = bitcast %union.varray_data_tag* %data151 to [1 x %union.tree_node*]*
  %arrayidx153 = getelementptr inbounds [1 x %union.tree_node*]* %tree152, i64 0, i64 %57
  store %union.tree_node* %52, %union.tree_node** %arrayidx153, align 8, !tbaa !1
  br label %do.body157

do.body157:                                       ; preds = %land.lhs.true136, %do.body133, %if.end148
  %59 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 4
  %60 = load %union.tree_node** %59, align 8, !tbaa !32
  %cmp160 = icmp eq %union.tree_node* %60, null
  br i1 %cmp160, label %sw.epilog, label %land.lhs.true161

land.lhs.true161:                                 ; preds = %do.body157
  %61 = bitcast %union.tree_node* %60 to i8*
  %call162 = tail call i32 @ggc_set_mark(i8* %61) #4
  %tobool163 = icmp eq i32 %call162, 0
  br i1 %tobool163, label %do.body165, label %sw.epilog

do.body165:                                       ; preds = %land.lhs.true161
  %62 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used166 = getelementptr inbounds %struct.varray_head_tag* %62, i64 0, i32 1
  %63 = load i64* %elements_used166, align 8, !tbaa !12
  %num_elements167 = getelementptr inbounds %struct.varray_head_tag* %62, i64 0, i32 0
  %64 = load i64* %num_elements167, align 8, !tbaa !15
  %cmp168 = icmp ult i64 %63, %64
  br i1 %cmp168, label %if.end173, label %if.then169

if.then169:                                       ; preds = %do.body165
  %mul171 = shl i64 %64, 1
  %call172 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %62, i64 %mul171) #4
  store %struct.varray_head_tag* %call172, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used174.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call172, i64 0, i32 1
  %.pre1549 = load i64* %elements_used174.phi.trans.insert, align 8, !tbaa !12
  br label %if.end173

if.end173:                                        ; preds = %do.body165, %if.then169
  %65 = phi i64 [ %63, %do.body165 ], [ %.pre1549, %if.then169 ]
  %66 = phi %struct.varray_head_tag* [ %62, %do.body165 ], [ %call172, %if.then169 ]
  %elements_used174 = getelementptr inbounds %struct.varray_head_tag* %66, i64 0, i32 1
  %inc175 = add i64 %65, 1
  store i64 %inc175, i64* %elements_used174, align 8, !tbaa !12
  %data176 = getelementptr inbounds %struct.varray_head_tag* %66, i64 0, i32 4
  %tree177 = bitcast %union.varray_data_tag* %data176 to [1 x %union.tree_node*]*
  %arrayidx178 = getelementptr inbounds [1 x %union.tree_node*]* %tree177, i64 0, i64 %65
  store %union.tree_node* %60, %union.tree_node** %arrayidx178, align 8, !tbaa !1
  br label %sw.epilog

do.body183:                                       ; preds = %do.end50
  %u2 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 19
  %r = bitcast %union.anon.1* %u2 to %struct.rtx_def**
  %67 = load %struct.rtx_def** %r, align 8, !tbaa !1
  %cmp184 = icmp eq %struct.rtx_def* %67, null
  br i1 %cmp184, label %sw.epilog, label %land.lhs.true185

land.lhs.true185:                                 ; preds = %do.body183
  %68 = bitcast %struct.rtx_def* %67 to i8*
  %call186 = tail call i32 @ggc_set_mark(i8* %68) #4
  %tobool187 = icmp eq i32 %call186, 0
  br i1 %tobool187, label %if.then188, label %sw.epilog

if.then188:                                       ; preds = %land.lhs.true185
  %69 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 0
  %bf.load.i = load i32* %69, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %bf.clear.off.i = add i32 %bf.clear.i, -32
  %switch.i = icmp ult i32 %bf.clear.off.i, 6
  br i1 %switch.i, label %sw.bb.i, label %ggc_mark_rtx_children.exit

sw.bb.i:                                          ; preds = %if.then188
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %i.026.i = load %struct.rtx_def** %rtx.i, align 8
  %cmp27.i = icmp eq %struct.rtx_def* %i.026.i, null
  br i1 %cmp27.i, label %ggc_mark_rtx_children.exit, label %land.lhs.true.i

for.cond7.preheader.i:                            ; preds = %for.inc.i, %land.lhs.true.i
  %i.0.lcssa.i.ph = phi %struct.rtx_def* [ null, %for.inc.i ], [ %i.028.i, %land.lhs.true.i ]
  %i.123.i.pre = load %struct.rtx_def** %rtx.i, align 8
  %cmp824.i = icmp eq %struct.rtx_def* %i.123.i.pre, %i.0.lcssa.i.ph
  br i1 %cmp824.i, label %ggc_mark_rtx_children.exit, label %for.body.i

land.lhs.true.i:                                  ; preds = %sw.bb.i, %for.inc.i
  %i.028.i = phi %struct.rtx_def* [ %i.0.i, %for.inc.i ], [ %i.026.i, %sw.bb.i ]
  %70 = bitcast %struct.rtx_def* %i.028.i to i8*
  %call.i = tail call i32 @ggc_set_mark(i8* %70) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %for.inc.i, label %for.cond7.preheader.i

for.inc.i:                                        ; preds = %land.lhs.true.i
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %i.028.i, i64 0, i32 1, i64 2
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i to %struct.rtx_def**
  %i.0.i = load %struct.rtx_def** %rtx3.i, align 8
  %cmp.i = icmp eq %struct.rtx_def* %i.0.i, null
  br i1 %cmp.i, label %for.cond7.preheader.i, label %land.lhs.true.i

for.body.i:                                       ; preds = %for.cond7.preheader.i, %for.body.i
  %i.125.i = phi %struct.rtx_def* [ %i.1.i, %for.body.i ], [ %i.123.i.pre, %for.cond7.preheader.i ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.125.i) #4
  %arrayidx11.i = getelementptr inbounds %struct.rtx_def* %i.125.i, i64 0, i32 1, i64 2
  %rtx12.i = bitcast %union.rtunion_def* %arrayidx11.i to %struct.rtx_def**
  %i.1.i = load %struct.rtx_def** %rtx12.i, align 8
  %cmp8.i = icmp eq %struct.rtx_def* %i.1.i, %i.0.lcssa.i.ph
  br i1 %cmp8.i, label %ggc_mark_rtx_children.exit, label %for.body.i

ggc_mark_rtx_children.exit:                       ; preds = %for.body.i, %sw.bb.i, %if.then188, %for.cond7.preheader.i
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %67) #4
  br label %sw.epilog

do.body192:                                       ; preds = %do.end50
  %u2195 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 19
  %t196 = bitcast %union.anon.1* %u2195 to %union.tree_node**
  %71 = load %union.tree_node** %t196, align 8, !tbaa !1
  %cmp197 = icmp eq %union.tree_node* %71, null
  br i1 %cmp197, label %sw.epilog, label %land.lhs.true198

land.lhs.true198:                                 ; preds = %do.body192
  %72 = bitcast %union.tree_node* %71 to i8*
  %call199 = tail call i32 @ggc_set_mark(i8* %72) #4
  %tobool200 = icmp eq i32 %call199, 0
  br i1 %tobool200, label %do.body202, label %sw.epilog

do.body202:                                       ; preds = %land.lhs.true198
  %73 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used203 = getelementptr inbounds %struct.varray_head_tag* %73, i64 0, i32 1
  %74 = load i64* %elements_used203, align 8, !tbaa !12
  %num_elements204 = getelementptr inbounds %struct.varray_head_tag* %73, i64 0, i32 0
  %75 = load i64* %num_elements204, align 8, !tbaa !15
  %cmp205 = icmp ult i64 %74, %75
  br i1 %cmp205, label %if.end210, label %if.then206

if.then206:                                       ; preds = %do.body202
  %mul208 = shl i64 %75, 1
  %call209 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %73, i64 %mul208) #4
  store %struct.varray_head_tag* %call209, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used211.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call209, i64 0, i32 1
  %.pre1552 = load i64* %elements_used211.phi.trans.insert, align 8, !tbaa !12
  br label %if.end210

if.end210:                                        ; preds = %do.body202, %if.then206
  %76 = phi i64 [ %74, %do.body202 ], [ %.pre1552, %if.then206 ]
  %77 = phi %struct.varray_head_tag* [ %73, %do.body202 ], [ %call209, %if.then206 ]
  %elements_used211 = getelementptr inbounds %struct.varray_head_tag* %77, i64 0, i32 1
  %inc212 = add i64 %76, 1
  store i64 %inc212, i64* %elements_used211, align 8, !tbaa !12
  %data213 = getelementptr inbounds %struct.varray_head_tag* %77, i64 0, i32 4
  %tree214 = bitcast %union.varray_data_tag* %data213 to [1 x %union.tree_node*]*
  %arrayidx215 = getelementptr inbounds [1 x %union.tree_node*]* %tree214, i64 0, i64 %76
  store %union.tree_node* %71, %union.tree_node** %arrayidx215, align 8, !tbaa !1
  br label %sw.epilog

sw.bb219:                                         ; preds = %do.end50
  tail call void @lang_mark_tree(%union.tree_node* %4) #4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %while.cond101.backedge, %while.cond1154.backedge, %sw.bb100, %sw.bb1141, %sw.bb219, %if.end91, %ggc_mark_rtx_children.exit1455, %if.end1120, %sw.epilog, %sw.bb1206, %do.end1019, %if.end662, %do.body1130, %land.lhs.true1135, %do.body1101, %land.lhs.true1107, %do.body75, %land.lhs.true79
  %78 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %78, i64 0, i32 1
  %79 = load i64* %elements_used, align 8, !tbaa !12
  %tobool = icmp eq i64 %79, 0
  br i1 %tobool, label %while.end1208, label %while.body

sw.epilog:                                        ; preds = %land.lhs.true161, %do.body157, %land.lhs.true185, %do.body183, %land.lhs.true198, %do.body192, %do.end50, %if.end210, %ggc_mark_rtx_children.exit, %if.end173
  %idxprom2201366 = zext i32 %bf.clear to i64
  %arrayidx221 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom2201366
  %80 = load i8* %arrayidx221, align 1, !tbaa !33
  %conv = sext i8 %80 to i32
  switch i32 %conv, label %while.cond.backedge [
    i32 100, label %do.body223
    i32 116, label %do.body664
    i32 98, label %do.body1021
    i32 99, label %do.body1130
    i32 114, label %sw.bb1141
    i32 60, label %sw.bb1141
    i32 49, label %sw.bb1141
    i32 50, label %sw.bb1141
    i32 101, label %sw.bb1141
    i32 115, label %sw.bb1141
    i32 120, label %sw.bb1206
  ]

do.body223:                                       ; preds = %sw.epilog
  %size = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 4
  %81 = load %union.tree_node** %size, align 8, !tbaa !34
  %cmp226 = icmp eq %union.tree_node* %81, null
  br i1 %cmp226, label %do.body250, label %land.lhs.true228

land.lhs.true228:                                 ; preds = %do.body223
  %82 = bitcast %union.tree_node* %81 to i8*
  %call229 = tail call i32 @ggc_set_mark(i8* %82) #4
  %tobool230 = icmp eq i32 %call229, 0
  br i1 %tobool230, label %do.body232, label %do.body250

do.body232:                                       ; preds = %land.lhs.true228
  %83 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used233 = getelementptr inbounds %struct.varray_head_tag* %83, i64 0, i32 1
  %84 = load i64* %elements_used233, align 8, !tbaa !12
  %num_elements234 = getelementptr inbounds %struct.varray_head_tag* %83, i64 0, i32 0
  %85 = load i64* %num_elements234, align 8, !tbaa !15
  %cmp235 = icmp ult i64 %84, %85
  br i1 %cmp235, label %if.end241, label %if.then237

if.then237:                                       ; preds = %do.body232
  %mul239 = shl i64 %85, 1
  %call240 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %83, i64 %mul239) #4
  store %struct.varray_head_tag* %call240, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used242.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call240, i64 0, i32 1
  %.pre1514 = load i64* %elements_used242.phi.trans.insert, align 8, !tbaa !12
  br label %if.end241

if.end241:                                        ; preds = %do.body232, %if.then237
  %86 = phi i64 [ %84, %do.body232 ], [ %.pre1514, %if.then237 ]
  %87 = phi %struct.varray_head_tag* [ %83, %do.body232 ], [ %call240, %if.then237 ]
  %elements_used242 = getelementptr inbounds %struct.varray_head_tag* %87, i64 0, i32 1
  %inc243 = add i64 %86, 1
  store i64 %inc243, i64* %elements_used242, align 8, !tbaa !12
  %data244 = getelementptr inbounds %struct.varray_head_tag* %87, i64 0, i32 4
  %tree245 = bitcast %union.varray_data_tag* %data244 to [1 x %union.tree_node*]*
  %arrayidx246 = getelementptr inbounds [1 x %union.tree_node*]* %tree245, i64 0, i64 %86
  store %union.tree_node* %81, %union.tree_node** %arrayidx246, align 8, !tbaa !1
  br label %do.body250

do.body250:                                       ; preds = %land.lhs.true228, %do.body223, %if.end241
  %size_unit = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 7
  %88 = load %union.tree_node** %size_unit, align 8, !tbaa !37
  %cmp253 = icmp eq %union.tree_node* %88, null
  br i1 %cmp253, label %do.body277, label %land.lhs.true255

land.lhs.true255:                                 ; preds = %do.body250
  %89 = bitcast %union.tree_node* %88 to i8*
  %call256 = tail call i32 @ggc_set_mark(i8* %89) #4
  %tobool257 = icmp eq i32 %call256, 0
  br i1 %tobool257, label %do.body259, label %do.body277

do.body259:                                       ; preds = %land.lhs.true255
  %90 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used260 = getelementptr inbounds %struct.varray_head_tag* %90, i64 0, i32 1
  %91 = load i64* %elements_used260, align 8, !tbaa !12
  %num_elements261 = getelementptr inbounds %struct.varray_head_tag* %90, i64 0, i32 0
  %92 = load i64* %num_elements261, align 8, !tbaa !15
  %cmp262 = icmp ult i64 %91, %92
  br i1 %cmp262, label %if.end268, label %if.then264

if.then264:                                       ; preds = %do.body259
  %mul266 = shl i64 %92, 1
  %call267 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %90, i64 %mul266) #4
  store %struct.varray_head_tag* %call267, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used269.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call267, i64 0, i32 1
  %.pre1513 = load i64* %elements_used269.phi.trans.insert, align 8, !tbaa !12
  br label %if.end268

if.end268:                                        ; preds = %do.body259, %if.then264
  %93 = phi i64 [ %91, %do.body259 ], [ %.pre1513, %if.then264 ]
  %94 = phi %struct.varray_head_tag* [ %90, %do.body259 ], [ %call267, %if.then264 ]
  %elements_used269 = getelementptr inbounds %struct.varray_head_tag* %94, i64 0, i32 1
  %inc270 = add i64 %93, 1
  store i64 %inc270, i64* %elements_used269, align 8, !tbaa !12
  %data271 = getelementptr inbounds %struct.varray_head_tag* %94, i64 0, i32 4
  %tree272 = bitcast %union.varray_data_tag* %data271 to [1 x %union.tree_node*]*
  %arrayidx273 = getelementptr inbounds [1 x %union.tree_node*]* %tree272, i64 0, i64 %93
  store %union.tree_node* %88, %union.tree_node** %arrayidx273, align 8, !tbaa !1
  br label %do.body277

do.body277:                                       ; preds = %land.lhs.true255, %do.body250, %if.end268
  %name = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 8
  %95 = load %union.tree_node** %name, align 8, !tbaa !38
  %cmp280 = icmp eq %union.tree_node* %95, null
  br i1 %cmp280, label %do.body304, label %land.lhs.true282

land.lhs.true282:                                 ; preds = %do.body277
  %96 = bitcast %union.tree_node* %95 to i8*
  %call283 = tail call i32 @ggc_set_mark(i8* %96) #4
  %tobool284 = icmp eq i32 %call283, 0
  br i1 %tobool284, label %do.body286, label %do.body304

do.body286:                                       ; preds = %land.lhs.true282
  %97 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used287 = getelementptr inbounds %struct.varray_head_tag* %97, i64 0, i32 1
  %98 = load i64* %elements_used287, align 8, !tbaa !12
  %num_elements288 = getelementptr inbounds %struct.varray_head_tag* %97, i64 0, i32 0
  %99 = load i64* %num_elements288, align 8, !tbaa !15
  %cmp289 = icmp ult i64 %98, %99
  br i1 %cmp289, label %if.end295, label %if.then291

if.then291:                                       ; preds = %do.body286
  %mul293 = shl i64 %99, 1
  %call294 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %97, i64 %mul293) #4
  store %struct.varray_head_tag* %call294, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used296.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call294, i64 0, i32 1
  %.pre1512 = load i64* %elements_used296.phi.trans.insert, align 8, !tbaa !12
  br label %if.end295

if.end295:                                        ; preds = %do.body286, %if.then291
  %100 = phi i64 [ %98, %do.body286 ], [ %.pre1512, %if.then291 ]
  %101 = phi %struct.varray_head_tag* [ %97, %do.body286 ], [ %call294, %if.then291 ]
  %elements_used296 = getelementptr inbounds %struct.varray_head_tag* %101, i64 0, i32 1
  %inc297 = add i64 %100, 1
  store i64 %inc297, i64* %elements_used296, align 8, !tbaa !12
  %data298 = getelementptr inbounds %struct.varray_head_tag* %101, i64 0, i32 4
  %tree299 = bitcast %union.varray_data_tag* %data298 to [1 x %union.tree_node*]*
  %arrayidx300 = getelementptr inbounds [1 x %union.tree_node*]* %tree299, i64 0, i64 %100
  store %union.tree_node* %95, %union.tree_node** %arrayidx300, align 8, !tbaa !1
  br label %do.body304

do.body304:                                       ; preds = %land.lhs.true282, %do.body277, %if.end295
  %context = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 9
  %102 = load %union.tree_node** %context, align 8, !tbaa !39
  %cmp307 = icmp eq %union.tree_node* %102, null
  br i1 %cmp307, label %do.body331, label %land.lhs.true309

land.lhs.true309:                                 ; preds = %do.body304
  %103 = bitcast %union.tree_node* %102 to i8*
  %call310 = tail call i32 @ggc_set_mark(i8* %103) #4
  %tobool311 = icmp eq i32 %call310, 0
  br i1 %tobool311, label %do.body313, label %do.body331

do.body313:                                       ; preds = %land.lhs.true309
  %104 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used314 = getelementptr inbounds %struct.varray_head_tag* %104, i64 0, i32 1
  %105 = load i64* %elements_used314, align 8, !tbaa !12
  %num_elements315 = getelementptr inbounds %struct.varray_head_tag* %104, i64 0, i32 0
  %106 = load i64* %num_elements315, align 8, !tbaa !15
  %cmp316 = icmp ult i64 %105, %106
  br i1 %cmp316, label %if.end322, label %if.then318

if.then318:                                       ; preds = %do.body313
  %mul320 = shl i64 %106, 1
  %call321 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %104, i64 %mul320) #4
  store %struct.varray_head_tag* %call321, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used323.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call321, i64 0, i32 1
  %.pre1511 = load i64* %elements_used323.phi.trans.insert, align 8, !tbaa !12
  br label %if.end322

if.end322:                                        ; preds = %do.body313, %if.then318
  %107 = phi i64 [ %105, %do.body313 ], [ %.pre1511, %if.then318 ]
  %108 = phi %struct.varray_head_tag* [ %104, %do.body313 ], [ %call321, %if.then318 ]
  %elements_used323 = getelementptr inbounds %struct.varray_head_tag* %108, i64 0, i32 1
  %inc324 = add i64 %107, 1
  store i64 %inc324, i64* %elements_used323, align 8, !tbaa !12
  %data325 = getelementptr inbounds %struct.varray_head_tag* %108, i64 0, i32 4
  %tree326 = bitcast %union.varray_data_tag* %data325 to [1 x %union.tree_node*]*
  %arrayidx327 = getelementptr inbounds [1 x %union.tree_node*]* %tree326, i64 0, i64 %107
  store %union.tree_node* %102, %union.tree_node** %arrayidx327, align 8, !tbaa !1
  br label %do.body331

do.body331:                                       ; preds = %land.lhs.true309, %do.body304, %if.end322
  %arguments = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 10
  %109 = load %union.tree_node** %arguments, align 8, !tbaa !40
  %cmp334 = icmp eq %union.tree_node* %109, null
  br i1 %cmp334, label %do.body358, label %land.lhs.true336

land.lhs.true336:                                 ; preds = %do.body331
  %110 = bitcast %union.tree_node* %109 to i8*
  %call337 = tail call i32 @ggc_set_mark(i8* %110) #4
  %tobool338 = icmp eq i32 %call337, 0
  br i1 %tobool338, label %do.body340, label %do.body358

do.body340:                                       ; preds = %land.lhs.true336
  %111 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used341 = getelementptr inbounds %struct.varray_head_tag* %111, i64 0, i32 1
  %112 = load i64* %elements_used341, align 8, !tbaa !12
  %num_elements342 = getelementptr inbounds %struct.varray_head_tag* %111, i64 0, i32 0
  %113 = load i64* %num_elements342, align 8, !tbaa !15
  %cmp343 = icmp ult i64 %112, %113
  br i1 %cmp343, label %if.end349, label %if.then345

if.then345:                                       ; preds = %do.body340
  %mul347 = shl i64 %113, 1
  %call348 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %111, i64 %mul347) #4
  store %struct.varray_head_tag* %call348, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used350.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call348, i64 0, i32 1
  %.pre1510 = load i64* %elements_used350.phi.trans.insert, align 8, !tbaa !12
  br label %if.end349

if.end349:                                        ; preds = %do.body340, %if.then345
  %114 = phi i64 [ %112, %do.body340 ], [ %.pre1510, %if.then345 ]
  %115 = phi %struct.varray_head_tag* [ %111, %do.body340 ], [ %call348, %if.then345 ]
  %elements_used350 = getelementptr inbounds %struct.varray_head_tag* %115, i64 0, i32 1
  %inc351 = add i64 %114, 1
  store i64 %inc351, i64* %elements_used350, align 8, !tbaa !12
  %data352 = getelementptr inbounds %struct.varray_head_tag* %115, i64 0, i32 4
  %tree353 = bitcast %union.varray_data_tag* %data352 to [1 x %union.tree_node*]*
  %arrayidx354 = getelementptr inbounds [1 x %union.tree_node*]* %tree353, i64 0, i64 %114
  store %union.tree_node* %109, %union.tree_node** %arrayidx354, align 8, !tbaa !1
  br label %do.body358

do.body358:                                       ; preds = %land.lhs.true336, %do.body331, %if.end349
  %result = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 11
  %116 = load %union.tree_node** %result, align 8, !tbaa !41
  %cmp361 = icmp eq %union.tree_node* %116, null
  br i1 %cmp361, label %do.body385, label %land.lhs.true363

land.lhs.true363:                                 ; preds = %do.body358
  %117 = bitcast %union.tree_node* %116 to i8*
  %call364 = tail call i32 @ggc_set_mark(i8* %117) #4
  %tobool365 = icmp eq i32 %call364, 0
  br i1 %tobool365, label %do.body367, label %do.body385

do.body367:                                       ; preds = %land.lhs.true363
  %118 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used368 = getelementptr inbounds %struct.varray_head_tag* %118, i64 0, i32 1
  %119 = load i64* %elements_used368, align 8, !tbaa !12
  %num_elements369 = getelementptr inbounds %struct.varray_head_tag* %118, i64 0, i32 0
  %120 = load i64* %num_elements369, align 8, !tbaa !15
  %cmp370 = icmp ult i64 %119, %120
  br i1 %cmp370, label %if.end376, label %if.then372

if.then372:                                       ; preds = %do.body367
  %mul374 = shl i64 %120, 1
  %call375 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %118, i64 %mul374) #4
  store %struct.varray_head_tag* %call375, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used377.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call375, i64 0, i32 1
  %.pre1509 = load i64* %elements_used377.phi.trans.insert, align 8, !tbaa !12
  br label %if.end376

if.end376:                                        ; preds = %do.body367, %if.then372
  %121 = phi i64 [ %119, %do.body367 ], [ %.pre1509, %if.then372 ]
  %122 = phi %struct.varray_head_tag* [ %118, %do.body367 ], [ %call375, %if.then372 ]
  %elements_used377 = getelementptr inbounds %struct.varray_head_tag* %122, i64 0, i32 1
  %inc378 = add i64 %121, 1
  store i64 %inc378, i64* %elements_used377, align 8, !tbaa !12
  %data379 = getelementptr inbounds %struct.varray_head_tag* %122, i64 0, i32 4
  %tree380 = bitcast %union.varray_data_tag* %data379 to [1 x %union.tree_node*]*
  %arrayidx381 = getelementptr inbounds [1 x %union.tree_node*]* %tree380, i64 0, i64 %121
  store %union.tree_node* %116, %union.tree_node** %arrayidx381, align 8, !tbaa !1
  br label %do.body385

do.body385:                                       ; preds = %land.lhs.true363, %do.body358, %if.end376
  %initial = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 12
  %123 = load %union.tree_node** %initial, align 8, !tbaa !42
  %cmp388 = icmp eq %union.tree_node* %123, null
  br i1 %cmp388, label %do.body412, label %land.lhs.true390

land.lhs.true390:                                 ; preds = %do.body385
  %124 = bitcast %union.tree_node* %123 to i8*
  %call391 = tail call i32 @ggc_set_mark(i8* %124) #4
  %tobool392 = icmp eq i32 %call391, 0
  br i1 %tobool392, label %do.body394, label %do.body412

do.body394:                                       ; preds = %land.lhs.true390
  %125 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used395 = getelementptr inbounds %struct.varray_head_tag* %125, i64 0, i32 1
  %126 = load i64* %elements_used395, align 8, !tbaa !12
  %num_elements396 = getelementptr inbounds %struct.varray_head_tag* %125, i64 0, i32 0
  %127 = load i64* %num_elements396, align 8, !tbaa !15
  %cmp397 = icmp ult i64 %126, %127
  br i1 %cmp397, label %if.end403, label %if.then399

if.then399:                                       ; preds = %do.body394
  %mul401 = shl i64 %127, 1
  %call402 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %125, i64 %mul401) #4
  store %struct.varray_head_tag* %call402, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used404.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call402, i64 0, i32 1
  %.pre1508 = load i64* %elements_used404.phi.trans.insert, align 8, !tbaa !12
  br label %if.end403

if.end403:                                        ; preds = %do.body394, %if.then399
  %128 = phi i64 [ %126, %do.body394 ], [ %.pre1508, %if.then399 ]
  %129 = phi %struct.varray_head_tag* [ %125, %do.body394 ], [ %call402, %if.then399 ]
  %elements_used404 = getelementptr inbounds %struct.varray_head_tag* %129, i64 0, i32 1
  %inc405 = add i64 %128, 1
  store i64 %inc405, i64* %elements_used404, align 8, !tbaa !12
  %data406 = getelementptr inbounds %struct.varray_head_tag* %129, i64 0, i32 4
  %tree407 = bitcast %union.varray_data_tag* %data406 to [1 x %union.tree_node*]*
  %arrayidx408 = getelementptr inbounds [1 x %union.tree_node*]* %tree407, i64 0, i64 %128
  store %union.tree_node* %123, %union.tree_node** %arrayidx408, align 8, !tbaa !1
  br label %do.body412

do.body412:                                       ; preds = %land.lhs.true390, %do.body385, %if.end403
  %abstract_origin = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 13
  %130 = load %union.tree_node** %abstract_origin, align 8, !tbaa !43
  %cmp415 = icmp eq %union.tree_node* %130, null
  br i1 %cmp415, label %do.body439, label %land.lhs.true417

land.lhs.true417:                                 ; preds = %do.body412
  %131 = bitcast %union.tree_node* %130 to i8*
  %call418 = tail call i32 @ggc_set_mark(i8* %131) #4
  %tobool419 = icmp eq i32 %call418, 0
  br i1 %tobool419, label %do.body421, label %do.body439

do.body421:                                       ; preds = %land.lhs.true417
  %132 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used422 = getelementptr inbounds %struct.varray_head_tag* %132, i64 0, i32 1
  %133 = load i64* %elements_used422, align 8, !tbaa !12
  %num_elements423 = getelementptr inbounds %struct.varray_head_tag* %132, i64 0, i32 0
  %134 = load i64* %num_elements423, align 8, !tbaa !15
  %cmp424 = icmp ult i64 %133, %134
  br i1 %cmp424, label %if.end430, label %if.then426

if.then426:                                       ; preds = %do.body421
  %mul428 = shl i64 %134, 1
  %call429 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %132, i64 %mul428) #4
  store %struct.varray_head_tag* %call429, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used431.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call429, i64 0, i32 1
  %.pre1507 = load i64* %elements_used431.phi.trans.insert, align 8, !tbaa !12
  br label %if.end430

if.end430:                                        ; preds = %do.body421, %if.then426
  %135 = phi i64 [ %133, %do.body421 ], [ %.pre1507, %if.then426 ]
  %136 = phi %struct.varray_head_tag* [ %132, %do.body421 ], [ %call429, %if.then426 ]
  %elements_used431 = getelementptr inbounds %struct.varray_head_tag* %136, i64 0, i32 1
  %inc432 = add i64 %135, 1
  store i64 %inc432, i64* %elements_used431, align 8, !tbaa !12
  %data433 = getelementptr inbounds %struct.varray_head_tag* %136, i64 0, i32 4
  %tree434 = bitcast %union.varray_data_tag* %data433 to [1 x %union.tree_node*]*
  %arrayidx435 = getelementptr inbounds [1 x %union.tree_node*]* %tree434, i64 0, i64 %135
  store %union.tree_node* %130, %union.tree_node** %arrayidx435, align 8, !tbaa !1
  br label %do.body439

do.body439:                                       ; preds = %land.lhs.true417, %do.body412, %if.end430
  %section_name = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 15
  %137 = load %union.tree_node** %section_name, align 8, !tbaa !44
  %cmp442 = icmp eq %union.tree_node* %137, null
  br i1 %cmp442, label %do.body466, label %land.lhs.true444

land.lhs.true444:                                 ; preds = %do.body439
  %138 = bitcast %union.tree_node* %137 to i8*
  %call445 = tail call i32 @ggc_set_mark(i8* %138) #4
  %tobool446 = icmp eq i32 %call445, 0
  br i1 %tobool446, label %do.body448, label %do.body466

do.body448:                                       ; preds = %land.lhs.true444
  %139 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used449 = getelementptr inbounds %struct.varray_head_tag* %139, i64 0, i32 1
  %140 = load i64* %elements_used449, align 8, !tbaa !12
  %num_elements450 = getelementptr inbounds %struct.varray_head_tag* %139, i64 0, i32 0
  %141 = load i64* %num_elements450, align 8, !tbaa !15
  %cmp451 = icmp ult i64 %140, %141
  br i1 %cmp451, label %if.end457, label %if.then453

if.then453:                                       ; preds = %do.body448
  %mul455 = shl i64 %141, 1
  %call456 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %139, i64 %mul455) #4
  store %struct.varray_head_tag* %call456, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used458.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call456, i64 0, i32 1
  %.pre1506 = load i64* %elements_used458.phi.trans.insert, align 8, !tbaa !12
  br label %if.end457

if.end457:                                        ; preds = %do.body448, %if.then453
  %142 = phi i64 [ %140, %do.body448 ], [ %.pre1506, %if.then453 ]
  %143 = phi %struct.varray_head_tag* [ %139, %do.body448 ], [ %call456, %if.then453 ]
  %elements_used458 = getelementptr inbounds %struct.varray_head_tag* %143, i64 0, i32 1
  %inc459 = add i64 %142, 1
  store i64 %inc459, i64* %elements_used458, align 8, !tbaa !12
  %data460 = getelementptr inbounds %struct.varray_head_tag* %143, i64 0, i32 4
  %tree461 = bitcast %union.varray_data_tag* %data460 to [1 x %union.tree_node*]*
  %arrayidx462 = getelementptr inbounds [1 x %union.tree_node*]* %tree461, i64 0, i64 %142
  store %union.tree_node* %137, %union.tree_node** %arrayidx462, align 8, !tbaa !1
  br label %do.body466

do.body466:                                       ; preds = %land.lhs.true444, %do.body439, %if.end457
  %attributes = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 16
  %144 = load %union.tree_node** %attributes, align 8, !tbaa !45
  %cmp469 = icmp eq %union.tree_node* %144, null
  br i1 %cmp469, label %do.end492, label %land.lhs.true471

land.lhs.true471:                                 ; preds = %do.body466
  %145 = bitcast %union.tree_node* %144 to i8*
  %call472 = tail call i32 @ggc_set_mark(i8* %145) #4
  %tobool473 = icmp eq i32 %call472, 0
  br i1 %tobool473, label %do.body475, label %do.end492

do.body475:                                       ; preds = %land.lhs.true471
  %146 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used476 = getelementptr inbounds %struct.varray_head_tag* %146, i64 0, i32 1
  %147 = load i64* %elements_used476, align 8, !tbaa !12
  %num_elements477 = getelementptr inbounds %struct.varray_head_tag* %146, i64 0, i32 0
  %148 = load i64* %num_elements477, align 8, !tbaa !15
  %cmp478 = icmp ult i64 %147, %148
  br i1 %cmp478, label %if.end484, label %if.then480

if.then480:                                       ; preds = %do.body475
  %mul482 = shl i64 %148, 1
  %call483 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %146, i64 %mul482) #4
  store %struct.varray_head_tag* %call483, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used485.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call483, i64 0, i32 1
  %.pre1505 = load i64* %elements_used485.phi.trans.insert, align 8, !tbaa !12
  br label %if.end484

if.end484:                                        ; preds = %do.body475, %if.then480
  %149 = phi i64 [ %147, %do.body475 ], [ %.pre1505, %if.then480 ]
  %150 = phi %struct.varray_head_tag* [ %146, %do.body475 ], [ %call483, %if.then480 ]
  %elements_used485 = getelementptr inbounds %struct.varray_head_tag* %150, i64 0, i32 1
  %inc486 = add i64 %149, 1
  store i64 %inc486, i64* %elements_used485, align 8, !tbaa !12
  %data487 = getelementptr inbounds %struct.varray_head_tag* %150, i64 0, i32 4
  %tree488 = bitcast %union.varray_data_tag* %data487 to [1 x %union.tree_node*]*
  %arrayidx489 = getelementptr inbounds [1 x %union.tree_node*]* %tree488, i64 0, i64 %149
  store %union.tree_node* %144, %union.tree_node** %arrayidx489, align 8, !tbaa !1
  br label %do.end492

do.end492:                                        ; preds = %land.lhs.true471, %do.body466, %if.end484
  %rtl = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 17
  %151 = load %struct.rtx_def** %rtl, align 8, !tbaa !46
  %cmp494 = icmp eq %struct.rtx_def* %151, null
  br i1 %cmp494, label %do.body515, label %land.lhs.true508

land.lhs.true508:                                 ; preds = %do.end492
  %152 = bitcast %struct.rtx_def* %151 to i8*
  %call509 = tail call i32 @ggc_set_mark(i8* %152) #4
  %tobool510 = icmp eq i32 %call509, 0
  br i1 %tobool510, label %if.then511, label %do.body515

if.then511:                                       ; preds = %land.lhs.true508
  %153 = getelementptr inbounds %struct.rtx_def* %151, i64 0, i32 0
  %bf.load.i1369 = load i32* %153, align 8
  %bf.clear.i1370 = and i32 %bf.load.i1369, 65535
  %bf.clear.off.i1371 = add i32 %bf.clear.i1370, -32
  %switch.i1372 = icmp ult i32 %bf.clear.off.i1371, 6
  br i1 %switch.i1372, label %sw.bb.i1377, label %ggc_mark_rtx_children.exit1397

sw.bb.i1377:                                      ; preds = %if.then511
  %arrayidx.i1373 = getelementptr inbounds %struct.rtx_def* %151, i64 0, i32 1, i64 2
  %rtx.i1374 = bitcast %union.rtunion_def* %arrayidx.i1373 to %struct.rtx_def**
  %i.026.i1375 = load %struct.rtx_def** %rtx.i1374, align 8
  %cmp27.i1376 = icmp eq %struct.rtx_def* %i.026.i1375, null
  br i1 %cmp27.i1376, label %ggc_mark_rtx_children.exit1397, label %land.lhs.true.i1385

for.cond7.preheader.i1381:                        ; preds = %for.inc.i1390, %land.lhs.true.i1385
  %i.0.lcssa.i1378.ph = phi %struct.rtx_def* [ null, %for.inc.i1390 ], [ %i.028.i1382, %land.lhs.true.i1385 ]
  %i.123.i1379.pre = load %struct.rtx_def** %rtx.i1374, align 8
  %cmp824.i1380 = icmp eq %struct.rtx_def* %i.123.i1379.pre, %i.0.lcssa.i1378.ph
  br i1 %cmp824.i1380, label %ggc_mark_rtx_children.exit1397, label %for.body.i1396

land.lhs.true.i1385:                              ; preds = %sw.bb.i1377, %for.inc.i1390
  %i.028.i1382 = phi %struct.rtx_def* [ %i.0.i1388, %for.inc.i1390 ], [ %i.026.i1375, %sw.bb.i1377 ]
  %154 = bitcast %struct.rtx_def* %i.028.i1382 to i8*
  %call.i1383 = tail call i32 @ggc_set_mark(i8* %154) #4
  %tobool.i1384 = icmp eq i32 %call.i1383, 0
  br i1 %tobool.i1384, label %for.inc.i1390, label %for.cond7.preheader.i1381

for.inc.i1390:                                    ; preds = %land.lhs.true.i1385
  %arrayidx2.i1386 = getelementptr inbounds %struct.rtx_def* %i.028.i1382, i64 0, i32 1, i64 2
  %rtx3.i1387 = bitcast %union.rtunion_def* %arrayidx2.i1386 to %struct.rtx_def**
  %i.0.i1388 = load %struct.rtx_def** %rtx3.i1387, align 8
  %cmp.i1389 = icmp eq %struct.rtx_def* %i.0.i1388, null
  br i1 %cmp.i1389, label %for.cond7.preheader.i1381, label %land.lhs.true.i1385

for.body.i1396:                                   ; preds = %for.cond7.preheader.i1381, %for.body.i1396
  %i.125.i1391 = phi %struct.rtx_def* [ %i.1.i1394, %for.body.i1396 ], [ %i.123.i1379.pre, %for.cond7.preheader.i1381 ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.125.i1391) #4
  %arrayidx11.i1392 = getelementptr inbounds %struct.rtx_def* %i.125.i1391, i64 0, i32 1, i64 2
  %rtx12.i1393 = bitcast %union.rtunion_def* %arrayidx11.i1392 to %struct.rtx_def**
  %i.1.i1394 = load %struct.rtx_def** %rtx12.i1393, align 8
  %cmp8.i1395 = icmp eq %struct.rtx_def* %i.1.i1394, %i.0.lcssa.i1378.ph
  br i1 %cmp8.i1395, label %ggc_mark_rtx_children.exit1397, label %for.body.i1396

ggc_mark_rtx_children.exit1397:                   ; preds = %for.body.i1396, %sw.bb.i1377, %if.then511, %for.cond7.preheader.i1381
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %151) #4
  br label %do.body515

do.body515:                                       ; preds = %do.end492, %land.lhs.true508, %ggc_mark_rtx_children.exit1397
  %live_range_rtl = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 18
  %155 = load %struct.rtx_def** %live_range_rtl, align 8, !tbaa !47
  %cmp518 = icmp eq %struct.rtx_def* %155, null
  br i1 %cmp518, label %do.body526, label %land.lhs.true520

land.lhs.true520:                                 ; preds = %do.body515
  %156 = bitcast %struct.rtx_def* %155 to i8*
  %call521 = tail call i32 @ggc_set_mark(i8* %156) #4
  %tobool522 = icmp eq i32 %call521, 0
  br i1 %tobool522, label %if.then523, label %do.body526

if.then523:                                       ; preds = %land.lhs.true520
  %157 = getelementptr inbounds %struct.rtx_def* %155, i64 0, i32 0
  %bf.load.i1398 = load i32* %157, align 8
  %bf.clear.i1399 = and i32 %bf.load.i1398, 65535
  %bf.clear.off.i1400 = add i32 %bf.clear.i1399, -32
  %switch.i1401 = icmp ult i32 %bf.clear.off.i1400, 6
  br i1 %switch.i1401, label %sw.bb.i1406, label %ggc_mark_rtx_children.exit1426

sw.bb.i1406:                                      ; preds = %if.then523
  %arrayidx.i1402 = getelementptr inbounds %struct.rtx_def* %155, i64 0, i32 1, i64 2
  %rtx.i1403 = bitcast %union.rtunion_def* %arrayidx.i1402 to %struct.rtx_def**
  %i.026.i1404 = load %struct.rtx_def** %rtx.i1403, align 8
  %cmp27.i1405 = icmp eq %struct.rtx_def* %i.026.i1404, null
  br i1 %cmp27.i1405, label %ggc_mark_rtx_children.exit1426, label %land.lhs.true.i1414

for.cond7.preheader.i1410:                        ; preds = %for.inc.i1419, %land.lhs.true.i1414
  %i.0.lcssa.i1407.ph = phi %struct.rtx_def* [ null, %for.inc.i1419 ], [ %i.028.i1411, %land.lhs.true.i1414 ]
  %i.123.i1408.pre = load %struct.rtx_def** %rtx.i1403, align 8
  %cmp824.i1409 = icmp eq %struct.rtx_def* %i.123.i1408.pre, %i.0.lcssa.i1407.ph
  br i1 %cmp824.i1409, label %ggc_mark_rtx_children.exit1426, label %for.body.i1425

land.lhs.true.i1414:                              ; preds = %sw.bb.i1406, %for.inc.i1419
  %i.028.i1411 = phi %struct.rtx_def* [ %i.0.i1417, %for.inc.i1419 ], [ %i.026.i1404, %sw.bb.i1406 ]
  %158 = bitcast %struct.rtx_def* %i.028.i1411 to i8*
  %call.i1412 = tail call i32 @ggc_set_mark(i8* %158) #4
  %tobool.i1413 = icmp eq i32 %call.i1412, 0
  br i1 %tobool.i1413, label %for.inc.i1419, label %for.cond7.preheader.i1410

for.inc.i1419:                                    ; preds = %land.lhs.true.i1414
  %arrayidx2.i1415 = getelementptr inbounds %struct.rtx_def* %i.028.i1411, i64 0, i32 1, i64 2
  %rtx3.i1416 = bitcast %union.rtunion_def* %arrayidx2.i1415 to %struct.rtx_def**
  %i.0.i1417 = load %struct.rtx_def** %rtx3.i1416, align 8
  %cmp.i1418 = icmp eq %struct.rtx_def* %i.0.i1417, null
  br i1 %cmp.i1418, label %for.cond7.preheader.i1410, label %land.lhs.true.i1414

for.body.i1425:                                   ; preds = %for.cond7.preheader.i1410, %for.body.i1425
  %i.125.i1420 = phi %struct.rtx_def* [ %i.1.i1423, %for.body.i1425 ], [ %i.123.i1408.pre, %for.cond7.preheader.i1410 ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.125.i1420) #4
  %arrayidx11.i1421 = getelementptr inbounds %struct.rtx_def* %i.125.i1420, i64 0, i32 1, i64 2
  %rtx12.i1422 = bitcast %union.rtunion_def* %arrayidx11.i1421 to %struct.rtx_def**
  %i.1.i1423 = load %struct.rtx_def** %rtx12.i1422, align 8
  %cmp8.i1424 = icmp eq %struct.rtx_def* %i.1.i1423, %i.0.lcssa.i1407.ph
  br i1 %cmp8.i1424, label %ggc_mark_rtx_children.exit1426, label %for.body.i1425

ggc_mark_rtx_children.exit1426:                   ; preds = %for.body.i1425, %sw.bb.i1406, %if.then523, %for.cond7.preheader.i1410
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %155) #4
  br label %do.body526

do.body526:                                       ; preds = %land.lhs.true520, %do.body515, %ggc_mark_rtx_children.exit1426
  %vindex = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 22
  %159 = load %union.tree_node** %vindex, align 8, !tbaa !48
  %cmp529 = icmp eq %union.tree_node* %159, null
  br i1 %cmp529, label %do.end552, label %land.lhs.true531

land.lhs.true531:                                 ; preds = %do.body526
  %160 = bitcast %union.tree_node* %159 to i8*
  %call532 = tail call i32 @ggc_set_mark(i8* %160) #4
  %tobool533 = icmp eq i32 %call532, 0
  br i1 %tobool533, label %do.body535, label %do.end552

do.body535:                                       ; preds = %land.lhs.true531
  %161 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used536 = getelementptr inbounds %struct.varray_head_tag* %161, i64 0, i32 1
  %162 = load i64* %elements_used536, align 8, !tbaa !12
  %num_elements537 = getelementptr inbounds %struct.varray_head_tag* %161, i64 0, i32 0
  %163 = load i64* %num_elements537, align 8, !tbaa !15
  %cmp538 = icmp ult i64 %162, %163
  br i1 %cmp538, label %if.end544, label %if.then540

if.then540:                                       ; preds = %do.body535
  %mul542 = shl i64 %163, 1
  %call543 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %161, i64 %mul542) #4
  store %struct.varray_head_tag* %call543, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used545.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call543, i64 0, i32 1
  %.pre1502 = load i64* %elements_used545.phi.trans.insert, align 8, !tbaa !12
  br label %if.end544

if.end544:                                        ; preds = %do.body535, %if.then540
  %164 = phi i64 [ %162, %do.body535 ], [ %.pre1502, %if.then540 ]
  %165 = phi %struct.varray_head_tag* [ %161, %do.body535 ], [ %call543, %if.then540 ]
  %elements_used545 = getelementptr inbounds %struct.varray_head_tag* %165, i64 0, i32 1
  %inc546 = add i64 %164, 1
  store i64 %inc546, i64* %elements_used545, align 8, !tbaa !12
  %data547 = getelementptr inbounds %struct.varray_head_tag* %165, i64 0, i32 4
  %tree548 = bitcast %union.varray_data_tag* %data547 to [1 x %union.tree_node*]*
  %arrayidx549 = getelementptr inbounds [1 x %union.tree_node*]* %tree548, i64 0, i64 %164
  store %union.tree_node* %159, %union.tree_node** %arrayidx549, align 8, !tbaa !1
  br label %do.end552

do.end552:                                        ; preds = %land.lhs.true531, %do.body526, %if.end544
  %assembler_name = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 14
  %166 = load %union.tree_node** %assembler_name, align 8, !tbaa !49
  %cmp554 = icmp eq %union.tree_node* %166, null
  br i1 %cmp554, label %if.end592, label %land.lhs.true570

land.lhs.true570:                                 ; preds = %do.end552
  %167 = bitcast %union.tree_node* %166 to i8*
  %call571 = tail call i32 @ggc_set_mark(i8* %167) #4
  %tobool572 = icmp eq i32 %call571, 0
  br i1 %tobool572, label %do.body574, label %if.end592

do.body574:                                       ; preds = %land.lhs.true570
  %168 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used575 = getelementptr inbounds %struct.varray_head_tag* %168, i64 0, i32 1
  %169 = load i64* %elements_used575, align 8, !tbaa !12
  %num_elements576 = getelementptr inbounds %struct.varray_head_tag* %168, i64 0, i32 0
  %170 = load i64* %num_elements576, align 8, !tbaa !15
  %cmp577 = icmp ult i64 %169, %170
  br i1 %cmp577, label %if.end583, label %if.then579

if.then579:                                       ; preds = %do.body574
  %mul581 = shl i64 %170, 1
  %call582 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %168, i64 %mul581) #4
  store %struct.varray_head_tag* %call582, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used584.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call582, i64 0, i32 1
  %.pre1501 = load i64* %elements_used584.phi.trans.insert, align 8, !tbaa !12
  br label %if.end583

if.end583:                                        ; preds = %do.body574, %if.then579
  %171 = phi i64 [ %169, %do.body574 ], [ %.pre1501, %if.then579 ]
  %172 = phi %struct.varray_head_tag* [ %168, %do.body574 ], [ %call582, %if.then579 ]
  %elements_used584 = getelementptr inbounds %struct.varray_head_tag* %172, i64 0, i32 1
  %inc585 = add i64 %171, 1
  store i64 %inc585, i64* %elements_used584, align 8, !tbaa !12
  %data586 = getelementptr inbounds %struct.varray_head_tag* %172, i64 0, i32 4
  %tree587 = bitcast %union.varray_data_tag* %data586 to [1 x %union.tree_node*]*
  %arrayidx588 = getelementptr inbounds [1 x %union.tree_node*]* %tree587, i64 0, i64 %171
  store %union.tree_node* %166, %union.tree_node** %arrayidx588, align 8, !tbaa !1
  br label %if.end592

if.end592:                                        ; preds = %do.end552, %land.lhs.true570, %if.end583
  %bf.load595 = load i32* %code3, align 8
  %bf.clear596 = and i32 %bf.load595, 255
  %cmp597 = icmp eq i32 %bf.clear596, 30
  br i1 %cmp597, label %do.body600, label %if.end662

do.body600:                                       ; preds = %if.end592
  %saved_tree = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 20
  %173 = load %union.tree_node** %saved_tree, align 8, !tbaa !50
  %cmp603 = icmp eq %union.tree_node* %173, null
  br i1 %cmp603, label %do.body627, label %land.lhs.true605

land.lhs.true605:                                 ; preds = %do.body600
  %174 = bitcast %union.tree_node* %173 to i8*
  %call606 = tail call i32 @ggc_set_mark(i8* %174) #4
  %tobool607 = icmp eq i32 %call606, 0
  br i1 %tobool607, label %do.body609, label %do.body627

do.body609:                                       ; preds = %land.lhs.true605
  %175 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used610 = getelementptr inbounds %struct.varray_head_tag* %175, i64 0, i32 1
  %176 = load i64* %elements_used610, align 8, !tbaa !12
  %num_elements611 = getelementptr inbounds %struct.varray_head_tag* %175, i64 0, i32 0
  %177 = load i64* %num_elements611, align 8, !tbaa !15
  %cmp612 = icmp ult i64 %176, %177
  br i1 %cmp612, label %if.end618, label %if.then614

if.then614:                                       ; preds = %do.body609
  %mul616 = shl i64 %177, 1
  %call617 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %175, i64 %mul616) #4
  store %struct.varray_head_tag* %call617, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used619.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call617, i64 0, i32 1
  %.pre1500 = load i64* %elements_used619.phi.trans.insert, align 8, !tbaa !12
  br label %if.end618

if.end618:                                        ; preds = %do.body609, %if.then614
  %178 = phi i64 [ %176, %do.body609 ], [ %.pre1500, %if.then614 ]
  %179 = phi %struct.varray_head_tag* [ %175, %do.body609 ], [ %call617, %if.then614 ]
  %elements_used619 = getelementptr inbounds %struct.varray_head_tag* %179, i64 0, i32 1
  %inc620 = add i64 %178, 1
  store i64 %inc620, i64* %elements_used619, align 8, !tbaa !12
  %data621 = getelementptr inbounds %struct.varray_head_tag* %179, i64 0, i32 4
  %tree622 = bitcast %union.varray_data_tag* %data621 to [1 x %union.tree_node*]*
  %arrayidx623 = getelementptr inbounds [1 x %union.tree_node*]* %tree622, i64 0, i64 %178
  store %union.tree_node* %173, %union.tree_node** %arrayidx623, align 8, !tbaa !1
  br label %do.body627

do.body627:                                       ; preds = %land.lhs.true605, %do.body600, %if.end618
  %inlined_fns = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 21
  %180 = load %union.tree_node** %inlined_fns, align 8, !tbaa !51
  %cmp630 = icmp eq %union.tree_node* %180, null
  br i1 %cmp630, label %do.end653, label %land.lhs.true632

land.lhs.true632:                                 ; preds = %do.body627
  %181 = bitcast %union.tree_node* %180 to i8*
  %call633 = tail call i32 @ggc_set_mark(i8* %181) #4
  %tobool634 = icmp eq i32 %call633, 0
  br i1 %tobool634, label %do.body636, label %do.end653

do.body636:                                       ; preds = %land.lhs.true632
  %182 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used637 = getelementptr inbounds %struct.varray_head_tag* %182, i64 0, i32 1
  %183 = load i64* %elements_used637, align 8, !tbaa !12
  %num_elements638 = getelementptr inbounds %struct.varray_head_tag* %182, i64 0, i32 0
  %184 = load i64* %num_elements638, align 8, !tbaa !15
  %cmp639 = icmp ult i64 %183, %184
  br i1 %cmp639, label %if.end645, label %if.then641

if.then641:                                       ; preds = %do.body636
  %mul643 = shl i64 %184, 1
  %call644 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %182, i64 %mul643) #4
  store %struct.varray_head_tag* %call644, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used646.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call644, i64 0, i32 1
  %.pre = load i64* %elements_used646.phi.trans.insert, align 8, !tbaa !12
  br label %if.end645

if.end645:                                        ; preds = %do.body636, %if.then641
  %185 = phi i64 [ %183, %do.body636 ], [ %.pre, %if.then641 ]
  %186 = phi %struct.varray_head_tag* [ %182, %do.body636 ], [ %call644, %if.then641 ]
  %elements_used646 = getelementptr inbounds %struct.varray_head_tag* %186, i64 0, i32 1
  %inc647 = add i64 %185, 1
  store i64 %inc647, i64* %elements_used646, align 8, !tbaa !12
  %data648 = getelementptr inbounds %struct.varray_head_tag* %186, i64 0, i32 4
  %tree649 = bitcast %union.varray_data_tag* %data648 to [1 x %union.tree_node*]*
  %arrayidx650 = getelementptr inbounds [1 x %union.tree_node*]* %tree649, i64 0, i64 %185
  store %union.tree_node* %180, %union.tree_node** %arrayidx650, align 8, !tbaa !1
  br label %do.end653

do.end653:                                        ; preds = %land.lhs.true632, %do.body627, %if.end645
  %f = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 19, i32 0
  %187 = load %struct.function** %f, align 8, !tbaa !1
  %tobool656 = icmp eq %struct.function* %187, null
  br i1 %tobool656, label %if.end662, label %if.then657

if.then657:                                       ; preds = %do.end653
  tail call void @ggc_mark_struct_function(%struct.function* %187) #4
  br label %if.end662

if.end662:                                        ; preds = %do.end653, %if.then657, %if.end592
  tail call void @lang_mark_tree(%union.tree_node* %4) #4
  br label %while.cond.backedge

do.body664:                                       ; preds = %sw.epilog
  %size667 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %188 = bitcast i32* %size667 to %union.tree_node**
  %189 = load %union.tree_node** %188, align 8, !tbaa !52
  %cmp668 = icmp eq %union.tree_node* %189, null
  br i1 %cmp668, label %do.body692, label %land.lhs.true670

land.lhs.true670:                                 ; preds = %do.body664
  %190 = bitcast %union.tree_node* %189 to i8*
  %call671 = tail call i32 @ggc_set_mark(i8* %190) #4
  %tobool672 = icmp eq i32 %call671, 0
  br i1 %tobool672, label %do.body674, label %do.body692

do.body674:                                       ; preds = %land.lhs.true670
  %191 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used675 = getelementptr inbounds %struct.varray_head_tag* %191, i64 0, i32 1
  %192 = load i64* %elements_used675, align 8, !tbaa !12
  %num_elements676 = getelementptr inbounds %struct.varray_head_tag* %191, i64 0, i32 0
  %193 = load i64* %num_elements676, align 8, !tbaa !15
  %cmp677 = icmp ult i64 %192, %193
  br i1 %cmp677, label %if.end683, label %if.then679

if.then679:                                       ; preds = %do.body674
  %mul681 = shl i64 %193, 1
  %call682 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %191, i64 %mul681) #4
  store %struct.varray_head_tag* %call682, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used684.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call682, i64 0, i32 1
  %.pre1527 = load i64* %elements_used684.phi.trans.insert, align 8, !tbaa !12
  br label %if.end683

if.end683:                                        ; preds = %do.body674, %if.then679
  %194 = phi i64 [ %192, %do.body674 ], [ %.pre1527, %if.then679 ]
  %195 = phi %struct.varray_head_tag* [ %191, %do.body674 ], [ %call682, %if.then679 ]
  %elements_used684 = getelementptr inbounds %struct.varray_head_tag* %195, i64 0, i32 1
  %inc685 = add i64 %194, 1
  store i64 %inc685, i64* %elements_used684, align 8, !tbaa !12
  %data686 = getelementptr inbounds %struct.varray_head_tag* %195, i64 0, i32 4
  %tree687 = bitcast %union.varray_data_tag* %data686 to [1 x %union.tree_node*]*
  %arrayidx688 = getelementptr inbounds [1 x %union.tree_node*]* %tree687, i64 0, i64 %194
  store %union.tree_node* %189, %union.tree_node** %arrayidx688, align 8, !tbaa !1
  br label %do.body692

do.body692:                                       ; preds = %land.lhs.true670, %do.body664, %if.end683
  %196 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 4
  %197 = load %union.tree_node** %196, align 8, !tbaa !54
  %cmp696 = icmp eq %union.tree_node* %197, null
  br i1 %cmp696, label %do.body720, label %land.lhs.true698

land.lhs.true698:                                 ; preds = %do.body692
  %198 = bitcast %union.tree_node* %197 to i8*
  %call699 = tail call i32 @ggc_set_mark(i8* %198) #4
  %tobool700 = icmp eq i32 %call699, 0
  br i1 %tobool700, label %do.body702, label %do.body720

do.body702:                                       ; preds = %land.lhs.true698
  %199 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used703 = getelementptr inbounds %struct.varray_head_tag* %199, i64 0, i32 1
  %200 = load i64* %elements_used703, align 8, !tbaa !12
  %num_elements704 = getelementptr inbounds %struct.varray_head_tag* %199, i64 0, i32 0
  %201 = load i64* %num_elements704, align 8, !tbaa !15
  %cmp705 = icmp ult i64 %200, %201
  br i1 %cmp705, label %if.end711, label %if.then707

if.then707:                                       ; preds = %do.body702
  %mul709 = shl i64 %201, 1
  %call710 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %199, i64 %mul709) #4
  store %struct.varray_head_tag* %call710, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used712.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call710, i64 0, i32 1
  %.pre1526 = load i64* %elements_used712.phi.trans.insert, align 8, !tbaa !12
  br label %if.end711

if.end711:                                        ; preds = %do.body702, %if.then707
  %202 = phi i64 [ %200, %do.body702 ], [ %.pre1526, %if.then707 ]
  %203 = phi %struct.varray_head_tag* [ %199, %do.body702 ], [ %call710, %if.then707 ]
  %elements_used712 = getelementptr inbounds %struct.varray_head_tag* %203, i64 0, i32 1
  %inc713 = add i64 %202, 1
  store i64 %inc713, i64* %elements_used712, align 8, !tbaa !12
  %data714 = getelementptr inbounds %struct.varray_head_tag* %203, i64 0, i32 4
  %tree715 = bitcast %union.varray_data_tag* %data714 to [1 x %union.tree_node*]*
  %arrayidx716 = getelementptr inbounds [1 x %union.tree_node*]* %tree715, i64 0, i64 %202
  store %union.tree_node* %197, %union.tree_node** %arrayidx716, align 8, !tbaa !1
  br label %do.body720

do.body720:                                       ; preds = %land.lhs.true698, %do.body692, %if.end711
  %attributes723 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 5
  %204 = bitcast i48* %attributes723 to %union.tree_node**
  %205 = load %union.tree_node** %204, align 8, !tbaa !55
  %cmp724 = icmp eq %union.tree_node* %205, null
  br i1 %cmp724, label %do.body748, label %land.lhs.true726

land.lhs.true726:                                 ; preds = %do.body720
  %206 = bitcast %union.tree_node* %205 to i8*
  %call727 = tail call i32 @ggc_set_mark(i8* %206) #4
  %tobool728 = icmp eq i32 %call727, 0
  br i1 %tobool728, label %do.body730, label %do.body748

do.body730:                                       ; preds = %land.lhs.true726
  %207 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used731 = getelementptr inbounds %struct.varray_head_tag* %207, i64 0, i32 1
  %208 = load i64* %elements_used731, align 8, !tbaa !12
  %num_elements732 = getelementptr inbounds %struct.varray_head_tag* %207, i64 0, i32 0
  %209 = load i64* %num_elements732, align 8, !tbaa !15
  %cmp733 = icmp ult i64 %208, %209
  br i1 %cmp733, label %if.end739, label %if.then735

if.then735:                                       ; preds = %do.body730
  %mul737 = shl i64 %209, 1
  %call738 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %207, i64 %mul737) #4
  store %struct.varray_head_tag* %call738, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used740.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call738, i64 0, i32 1
  %.pre1525 = load i64* %elements_used740.phi.trans.insert, align 8, !tbaa !12
  br label %if.end739

if.end739:                                        ; preds = %do.body730, %if.then735
  %210 = phi i64 [ %208, %do.body730 ], [ %.pre1525, %if.then735 ]
  %211 = phi %struct.varray_head_tag* [ %207, %do.body730 ], [ %call738, %if.then735 ]
  %elements_used740 = getelementptr inbounds %struct.varray_head_tag* %211, i64 0, i32 1
  %inc741 = add i64 %210, 1
  store i64 %inc741, i64* %elements_used740, align 8, !tbaa !12
  %data742 = getelementptr inbounds %struct.varray_head_tag* %211, i64 0, i32 4
  %tree743 = bitcast %union.varray_data_tag* %data742 to [1 x %union.tree_node*]*
  %arrayidx744 = getelementptr inbounds [1 x %union.tree_node*]* %tree743, i64 0, i64 %210
  store %union.tree_node* %205, %union.tree_node** %arrayidx744, align 8, !tbaa !1
  br label %do.body748

do.body748:                                       ; preds = %land.lhs.true726, %do.body720, %if.end739
  %values = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 1
  %212 = load i8** %values, align 8
  %213 = bitcast i8* %212 to %union.tree_node*
  %cmp751 = icmp eq i8* %212, null
  br i1 %cmp751, label %do.body775, label %land.lhs.true753

land.lhs.true753:                                 ; preds = %do.body748
  %call754 = tail call i32 @ggc_set_mark(i8* %212) #4
  %tobool755 = icmp eq i32 %call754, 0
  br i1 %tobool755, label %do.body757, label %do.body775

do.body757:                                       ; preds = %land.lhs.true753
  %214 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used758 = getelementptr inbounds %struct.varray_head_tag* %214, i64 0, i32 1
  %215 = load i64* %elements_used758, align 8, !tbaa !12
  %num_elements759 = getelementptr inbounds %struct.varray_head_tag* %214, i64 0, i32 0
  %216 = load i64* %num_elements759, align 8, !tbaa !15
  %cmp760 = icmp ult i64 %215, %216
  br i1 %cmp760, label %if.end766, label %if.then762

if.then762:                                       ; preds = %do.body757
  %mul764 = shl i64 %216, 1
  %call765 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %214, i64 %mul764) #4
  store %struct.varray_head_tag* %call765, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used767.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call765, i64 0, i32 1
  %.pre1524 = load i64* %elements_used767.phi.trans.insert, align 8, !tbaa !12
  br label %if.end766

if.end766:                                        ; preds = %do.body757, %if.then762
  %217 = phi i64 [ %215, %do.body757 ], [ %.pre1524, %if.then762 ]
  %218 = phi %struct.varray_head_tag* [ %214, %do.body757 ], [ %call765, %if.then762 ]
  %elements_used767 = getelementptr inbounds %struct.varray_head_tag* %218, i64 0, i32 1
  %inc768 = add i64 %217, 1
  store i64 %inc768, i64* %elements_used767, align 8, !tbaa !12
  %data769 = getelementptr inbounds %struct.varray_head_tag* %218, i64 0, i32 4
  %tree770 = bitcast %union.varray_data_tag* %data769 to [1 x %union.tree_node*]*
  %arrayidx771 = getelementptr inbounds [1 x %union.tree_node*]* %tree770, i64 0, i64 %217
  store %union.tree_node* %213, %union.tree_node** %arrayidx771, align 8, !tbaa !1
  br label %do.body775

do.body775:                                       ; preds = %land.lhs.true753, %do.body748, %if.end766
  %219 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 8
  %220 = load %union.tree_node** %219, align 8, !tbaa !56
  %cmp778 = icmp eq %union.tree_node* %220, null
  br i1 %cmp778, label %do.body802, label %land.lhs.true780

land.lhs.true780:                                 ; preds = %do.body775
  %221 = bitcast %union.tree_node* %220 to i8*
  %call781 = tail call i32 @ggc_set_mark(i8* %221) #4
  %tobool782 = icmp eq i32 %call781, 0
  br i1 %tobool782, label %do.body784, label %do.body802

do.body784:                                       ; preds = %land.lhs.true780
  %222 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used785 = getelementptr inbounds %struct.varray_head_tag* %222, i64 0, i32 1
  %223 = load i64* %elements_used785, align 8, !tbaa !12
  %num_elements786 = getelementptr inbounds %struct.varray_head_tag* %222, i64 0, i32 0
  %224 = load i64* %num_elements786, align 8, !tbaa !15
  %cmp787 = icmp ult i64 %223, %224
  br i1 %cmp787, label %if.end793, label %if.then789

if.then789:                                       ; preds = %do.body784
  %mul791 = shl i64 %224, 1
  %call792 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %222, i64 %mul791) #4
  store %struct.varray_head_tag* %call792, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used794.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call792, i64 0, i32 1
  %.pre1523 = load i64* %elements_used794.phi.trans.insert, align 8, !tbaa !12
  br label %if.end793

if.end793:                                        ; preds = %do.body784, %if.then789
  %225 = phi i64 [ %223, %do.body784 ], [ %.pre1523, %if.then789 ]
  %226 = phi %struct.varray_head_tag* [ %222, %do.body784 ], [ %call792, %if.then789 ]
  %elements_used794 = getelementptr inbounds %struct.varray_head_tag* %226, i64 0, i32 1
  %inc795 = add i64 %225, 1
  store i64 %inc795, i64* %elements_used794, align 8, !tbaa !12
  %data796 = getelementptr inbounds %struct.varray_head_tag* %226, i64 0, i32 4
  %tree797 = bitcast %union.varray_data_tag* %data796 to [1 x %union.tree_node*]*
  %arrayidx798 = getelementptr inbounds [1 x %union.tree_node*]* %tree797, i64 0, i64 %225
  store %union.tree_node* %220, %union.tree_node** %arrayidx798, align 8, !tbaa !1
  br label %do.body802

do.body802:                                       ; preds = %land.lhs.true780, %do.body775, %if.end793
  %227 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 9
  %228 = load %union.tree_node** %227, align 8, !tbaa !57
  %cmp805 = icmp eq %union.tree_node* %228, null
  br i1 %cmp805, label %do.body829, label %land.lhs.true807

land.lhs.true807:                                 ; preds = %do.body802
  %229 = bitcast %union.tree_node* %228 to i8*
  %call808 = tail call i32 @ggc_set_mark(i8* %229) #4
  %tobool809 = icmp eq i32 %call808, 0
  br i1 %tobool809, label %do.body811, label %do.body829

do.body811:                                       ; preds = %land.lhs.true807
  %230 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used812 = getelementptr inbounds %struct.varray_head_tag* %230, i64 0, i32 1
  %231 = load i64* %elements_used812, align 8, !tbaa !12
  %num_elements813 = getelementptr inbounds %struct.varray_head_tag* %230, i64 0, i32 0
  %232 = load i64* %num_elements813, align 8, !tbaa !15
  %cmp814 = icmp ult i64 %231, %232
  br i1 %cmp814, label %if.end820, label %if.then816

if.then816:                                       ; preds = %do.body811
  %mul818 = shl i64 %232, 1
  %call819 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %230, i64 %mul818) #4
  store %struct.varray_head_tag* %call819, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used821.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call819, i64 0, i32 1
  %.pre1522 = load i64* %elements_used821.phi.trans.insert, align 8, !tbaa !12
  br label %if.end820

if.end820:                                        ; preds = %do.body811, %if.then816
  %233 = phi i64 [ %231, %do.body811 ], [ %.pre1522, %if.then816 ]
  %234 = phi %struct.varray_head_tag* [ %230, %do.body811 ], [ %call819, %if.then816 ]
  %elements_used821 = getelementptr inbounds %struct.varray_head_tag* %234, i64 0, i32 1
  %inc822 = add i64 %233, 1
  store i64 %inc822, i64* %elements_used821, align 8, !tbaa !12
  %data823 = getelementptr inbounds %struct.varray_head_tag* %234, i64 0, i32 4
  %tree824 = bitcast %union.varray_data_tag* %data823 to [1 x %union.tree_node*]*
  %arrayidx825 = getelementptr inbounds [1 x %union.tree_node*]* %tree824, i64 0, i64 %233
  store %union.tree_node* %228, %union.tree_node** %arrayidx825, align 8, !tbaa !1
  br label %do.body829

do.body829:                                       ; preds = %land.lhs.true807, %do.body802, %if.end820
  %235 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 11
  %236 = load %union.tree_node** %235, align 8, !tbaa !58
  %cmp833 = icmp eq %union.tree_node* %236, null
  br i1 %cmp833, label %do.body857, label %land.lhs.true835

land.lhs.true835:                                 ; preds = %do.body829
  %237 = bitcast %union.tree_node* %236 to i8*
  %call836 = tail call i32 @ggc_set_mark(i8* %237) #4
  %tobool837 = icmp eq i32 %call836, 0
  br i1 %tobool837, label %do.body839, label %do.body857

do.body839:                                       ; preds = %land.lhs.true835
  %238 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used840 = getelementptr inbounds %struct.varray_head_tag* %238, i64 0, i32 1
  %239 = load i64* %elements_used840, align 8, !tbaa !12
  %num_elements841 = getelementptr inbounds %struct.varray_head_tag* %238, i64 0, i32 0
  %240 = load i64* %num_elements841, align 8, !tbaa !15
  %cmp842 = icmp ult i64 %239, %240
  br i1 %cmp842, label %if.end848, label %if.then844

if.then844:                                       ; preds = %do.body839
  %mul846 = shl i64 %240, 1
  %call847 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %238, i64 %mul846) #4
  store %struct.varray_head_tag* %call847, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used849.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call847, i64 0, i32 1
  %.pre1521 = load i64* %elements_used849.phi.trans.insert, align 8, !tbaa !12
  br label %if.end848

if.end848:                                        ; preds = %do.body839, %if.then844
  %241 = phi i64 [ %239, %do.body839 ], [ %.pre1521, %if.then844 ]
  %242 = phi %struct.varray_head_tag* [ %238, %do.body839 ], [ %call847, %if.then844 ]
  %elements_used849 = getelementptr inbounds %struct.varray_head_tag* %242, i64 0, i32 1
  %inc850 = add i64 %241, 1
  store i64 %inc850, i64* %elements_used849, align 8, !tbaa !12
  %data851 = getelementptr inbounds %struct.varray_head_tag* %242, i64 0, i32 4
  %tree852 = bitcast %union.varray_data_tag* %data851 to [1 x %union.tree_node*]*
  %arrayidx853 = getelementptr inbounds [1 x %union.tree_node*]* %tree852, i64 0, i64 %241
  store %union.tree_node* %236, %union.tree_node** %arrayidx853, align 8, !tbaa !1
  br label %do.body857

do.body857:                                       ; preds = %land.lhs.true835, %do.body829, %if.end848
  %243 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 12
  %244 = load %union.tree_node** %243, align 8, !tbaa !59
  %cmp860 = icmp eq %union.tree_node* %244, null
  br i1 %cmp860, label %do.body884, label %land.lhs.true862

land.lhs.true862:                                 ; preds = %do.body857
  %245 = bitcast %union.tree_node* %244 to i8*
  %call863 = tail call i32 @ggc_set_mark(i8* %245) #4
  %tobool864 = icmp eq i32 %call863, 0
  br i1 %tobool864, label %do.body866, label %do.body884

do.body866:                                       ; preds = %land.lhs.true862
  %246 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used867 = getelementptr inbounds %struct.varray_head_tag* %246, i64 0, i32 1
  %247 = load i64* %elements_used867, align 8, !tbaa !12
  %num_elements868 = getelementptr inbounds %struct.varray_head_tag* %246, i64 0, i32 0
  %248 = load i64* %num_elements868, align 8, !tbaa !15
  %cmp869 = icmp ult i64 %247, %248
  br i1 %cmp869, label %if.end875, label %if.then871

if.then871:                                       ; preds = %do.body866
  %mul873 = shl i64 %248, 1
  %call874 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %246, i64 %mul873) #4
  store %struct.varray_head_tag* %call874, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used876.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call874, i64 0, i32 1
  %.pre1520 = load i64* %elements_used876.phi.trans.insert, align 8, !tbaa !12
  br label %if.end875

if.end875:                                        ; preds = %do.body866, %if.then871
  %249 = phi i64 [ %247, %do.body866 ], [ %.pre1520, %if.then871 ]
  %250 = phi %struct.varray_head_tag* [ %246, %do.body866 ], [ %call874, %if.then871 ]
  %elements_used876 = getelementptr inbounds %struct.varray_head_tag* %250, i64 0, i32 1
  %inc877 = add i64 %249, 1
  store i64 %inc877, i64* %elements_used876, align 8, !tbaa !12
  %data878 = getelementptr inbounds %struct.varray_head_tag* %250, i64 0, i32 4
  %tree879 = bitcast %union.varray_data_tag* %data878 to [1 x %union.tree_node*]*
  %arrayidx880 = getelementptr inbounds [1 x %union.tree_node*]* %tree879, i64 0, i64 %249
  store %union.tree_node* %244, %union.tree_node** %arrayidx880, align 8, !tbaa !1
  br label %do.body884

do.body884:                                       ; preds = %land.lhs.true862, %do.body857, %if.end875
  %251 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 13
  %252 = load %union.tree_node** %251, align 8, !tbaa !60
  %cmp887 = icmp eq %union.tree_node* %252, null
  br i1 %cmp887, label %do.body911, label %land.lhs.true889

land.lhs.true889:                                 ; preds = %do.body884
  %253 = bitcast %union.tree_node* %252 to i8*
  %call890 = tail call i32 @ggc_set_mark(i8* %253) #4
  %tobool891 = icmp eq i32 %call890, 0
  br i1 %tobool891, label %do.body893, label %do.body911

do.body893:                                       ; preds = %land.lhs.true889
  %254 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used894 = getelementptr inbounds %struct.varray_head_tag* %254, i64 0, i32 1
  %255 = load i64* %elements_used894, align 8, !tbaa !12
  %num_elements895 = getelementptr inbounds %struct.varray_head_tag* %254, i64 0, i32 0
  %256 = load i64* %num_elements895, align 8, !tbaa !15
  %cmp896 = icmp ult i64 %255, %256
  br i1 %cmp896, label %if.end902, label %if.then898

if.then898:                                       ; preds = %do.body893
  %mul900 = shl i64 %256, 1
  %call901 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %254, i64 %mul900) #4
  store %struct.varray_head_tag* %call901, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used903.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call901, i64 0, i32 1
  %.pre1519 = load i64* %elements_used903.phi.trans.insert, align 8, !tbaa !12
  br label %if.end902

if.end902:                                        ; preds = %do.body893, %if.then898
  %257 = phi i64 [ %255, %do.body893 ], [ %.pre1519, %if.then898 ]
  %258 = phi %struct.varray_head_tag* [ %254, %do.body893 ], [ %call901, %if.then898 ]
  %elements_used903 = getelementptr inbounds %struct.varray_head_tag* %258, i64 0, i32 1
  %inc904 = add i64 %257, 1
  store i64 %inc904, i64* %elements_used903, align 8, !tbaa !12
  %data905 = getelementptr inbounds %struct.varray_head_tag* %258, i64 0, i32 4
  %tree906 = bitcast %union.varray_data_tag* %data905 to [1 x %union.tree_node*]*
  %arrayidx907 = getelementptr inbounds [1 x %union.tree_node*]* %tree906, i64 0, i64 %257
  store %union.tree_node* %252, %union.tree_node** %arrayidx907, align 8, !tbaa !1
  br label %do.body911

do.body911:                                       ; preds = %land.lhs.true889, %do.body884, %if.end902
  %259 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 14
  %260 = load %union.tree_node** %259, align 8, !tbaa !61
  %cmp914 = icmp eq %union.tree_node* %260, null
  br i1 %cmp914, label %do.body938, label %land.lhs.true916

land.lhs.true916:                                 ; preds = %do.body911
  %261 = bitcast %union.tree_node* %260 to i8*
  %call917 = tail call i32 @ggc_set_mark(i8* %261) #4
  %tobool918 = icmp eq i32 %call917, 0
  br i1 %tobool918, label %do.body920, label %do.body938

do.body920:                                       ; preds = %land.lhs.true916
  %262 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used921 = getelementptr inbounds %struct.varray_head_tag* %262, i64 0, i32 1
  %263 = load i64* %elements_used921, align 8, !tbaa !12
  %num_elements922 = getelementptr inbounds %struct.varray_head_tag* %262, i64 0, i32 0
  %264 = load i64* %num_elements922, align 8, !tbaa !15
  %cmp923 = icmp ult i64 %263, %264
  br i1 %cmp923, label %if.end929, label %if.then925

if.then925:                                       ; preds = %do.body920
  %mul927 = shl i64 %264, 1
  %call928 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %262, i64 %mul927) #4
  store %struct.varray_head_tag* %call928, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used930.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call928, i64 0, i32 1
  %.pre1518 = load i64* %elements_used930.phi.trans.insert, align 8, !tbaa !12
  br label %if.end929

if.end929:                                        ; preds = %do.body920, %if.then925
  %265 = phi i64 [ %263, %do.body920 ], [ %.pre1518, %if.then925 ]
  %266 = phi %struct.varray_head_tag* [ %262, %do.body920 ], [ %call928, %if.then925 ]
  %elements_used930 = getelementptr inbounds %struct.varray_head_tag* %266, i64 0, i32 1
  %inc931 = add i64 %265, 1
  store i64 %inc931, i64* %elements_used930, align 8, !tbaa !12
  %data932 = getelementptr inbounds %struct.varray_head_tag* %266, i64 0, i32 4
  %tree933 = bitcast %union.varray_data_tag* %data932 to [1 x %union.tree_node*]*
  %arrayidx934 = getelementptr inbounds [1 x %union.tree_node*]* %tree933, i64 0, i64 %265
  store %union.tree_node* %260, %union.tree_node** %arrayidx934, align 8, !tbaa !1
  br label %do.body938

do.body938:                                       ; preds = %land.lhs.true916, %do.body911, %if.end929
  %267 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 15
  %268 = load %union.tree_node** %267, align 8, !tbaa !62
  %cmp941 = icmp eq %union.tree_node* %268, null
  br i1 %cmp941, label %do.body965, label %land.lhs.true943

land.lhs.true943:                                 ; preds = %do.body938
  %269 = bitcast %union.tree_node* %268 to i8*
  %call944 = tail call i32 @ggc_set_mark(i8* %269) #4
  %tobool945 = icmp eq i32 %call944, 0
  br i1 %tobool945, label %do.body947, label %do.body965

do.body947:                                       ; preds = %land.lhs.true943
  %270 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used948 = getelementptr inbounds %struct.varray_head_tag* %270, i64 0, i32 1
  %271 = load i64* %elements_used948, align 8, !tbaa !12
  %num_elements949 = getelementptr inbounds %struct.varray_head_tag* %270, i64 0, i32 0
  %272 = load i64* %num_elements949, align 8, !tbaa !15
  %cmp950 = icmp ult i64 %271, %272
  br i1 %cmp950, label %if.end956, label %if.then952

if.then952:                                       ; preds = %do.body947
  %mul954 = shl i64 %272, 1
  %call955 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %270, i64 %mul954) #4
  store %struct.varray_head_tag* %call955, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used957.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call955, i64 0, i32 1
  %.pre1517 = load i64* %elements_used957.phi.trans.insert, align 8, !tbaa !12
  br label %if.end956

if.end956:                                        ; preds = %do.body947, %if.then952
  %273 = phi i64 [ %271, %do.body947 ], [ %.pre1517, %if.then952 ]
  %274 = phi %struct.varray_head_tag* [ %270, %do.body947 ], [ %call955, %if.then952 ]
  %elements_used957 = getelementptr inbounds %struct.varray_head_tag* %274, i64 0, i32 1
  %inc958 = add i64 %273, 1
  store i64 %inc958, i64* %elements_used957, align 8, !tbaa !12
  %data959 = getelementptr inbounds %struct.varray_head_tag* %274, i64 0, i32 4
  %tree960 = bitcast %union.varray_data_tag* %data959 to [1 x %union.tree_node*]*
  %arrayidx961 = getelementptr inbounds [1 x %union.tree_node*]* %tree960, i64 0, i64 %273
  store %union.tree_node* %268, %union.tree_node** %arrayidx961, align 8, !tbaa !1
  br label %do.body965

do.body965:                                       ; preds = %land.lhs.true943, %do.body938, %if.end956
  %275 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 16
  %276 = load %union.tree_node** %275, align 8, !tbaa !63
  %cmp968 = icmp eq %union.tree_node* %276, null
  br i1 %cmp968, label %do.body992, label %land.lhs.true970

land.lhs.true970:                                 ; preds = %do.body965
  %277 = bitcast %union.tree_node* %276 to i8*
  %call971 = tail call i32 @ggc_set_mark(i8* %277) #4
  %tobool972 = icmp eq i32 %call971, 0
  br i1 %tobool972, label %do.body974, label %do.body992

do.body974:                                       ; preds = %land.lhs.true970
  %278 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used975 = getelementptr inbounds %struct.varray_head_tag* %278, i64 0, i32 1
  %279 = load i64* %elements_used975, align 8, !tbaa !12
  %num_elements976 = getelementptr inbounds %struct.varray_head_tag* %278, i64 0, i32 0
  %280 = load i64* %num_elements976, align 8, !tbaa !15
  %cmp977 = icmp ult i64 %279, %280
  br i1 %cmp977, label %if.end983, label %if.then979

if.then979:                                       ; preds = %do.body974
  %mul981 = shl i64 %280, 1
  %call982 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %278, i64 %mul981) #4
  store %struct.varray_head_tag* %call982, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used984.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call982, i64 0, i32 1
  %.pre1516 = load i64* %elements_used984.phi.trans.insert, align 8, !tbaa !12
  br label %if.end983

if.end983:                                        ; preds = %do.body974, %if.then979
  %281 = phi i64 [ %279, %do.body974 ], [ %.pre1516, %if.then979 ]
  %282 = phi %struct.varray_head_tag* [ %278, %do.body974 ], [ %call982, %if.then979 ]
  %elements_used984 = getelementptr inbounds %struct.varray_head_tag* %282, i64 0, i32 1
  %inc985 = add i64 %281, 1
  store i64 %inc985, i64* %elements_used984, align 8, !tbaa !12
  %data986 = getelementptr inbounds %struct.varray_head_tag* %282, i64 0, i32 4
  %tree987 = bitcast %union.varray_data_tag* %data986 to [1 x %union.tree_node*]*
  %arrayidx988 = getelementptr inbounds [1 x %union.tree_node*]* %tree987, i64 0, i64 %281
  store %union.tree_node* %276, %union.tree_node** %arrayidx988, align 8, !tbaa !1
  br label %do.body992

do.body992:                                       ; preds = %land.lhs.true970, %do.body965, %if.end983
  %context995 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 17
  %283 = load %struct.rtx_def** %context995, align 8
  %284 = bitcast %struct.rtx_def* %283 to %union.tree_node*
  %cmp996 = icmp eq %struct.rtx_def* %283, null
  br i1 %cmp996, label %do.end1019, label %land.lhs.true998

land.lhs.true998:                                 ; preds = %do.body992
  %285 = bitcast %struct.rtx_def* %283 to i8*
  %call999 = tail call i32 @ggc_set_mark(i8* %285) #4
  %tobool1000 = icmp eq i32 %call999, 0
  br i1 %tobool1000, label %do.body1002, label %do.end1019

do.body1002:                                      ; preds = %land.lhs.true998
  %286 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1003 = getelementptr inbounds %struct.varray_head_tag* %286, i64 0, i32 1
  %287 = load i64* %elements_used1003, align 8, !tbaa !12
  %num_elements1004 = getelementptr inbounds %struct.varray_head_tag* %286, i64 0, i32 0
  %288 = load i64* %num_elements1004, align 8, !tbaa !15
  %cmp1005 = icmp ult i64 %287, %288
  br i1 %cmp1005, label %if.end1011, label %if.then1007

if.then1007:                                      ; preds = %do.body1002
  %mul1009 = shl i64 %288, 1
  %call1010 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %286, i64 %mul1009) #4
  store %struct.varray_head_tag* %call1010, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1012.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call1010, i64 0, i32 1
  %.pre1515 = load i64* %elements_used1012.phi.trans.insert, align 8, !tbaa !12
  br label %if.end1011

if.end1011:                                       ; preds = %do.body1002, %if.then1007
  %289 = phi i64 [ %287, %do.body1002 ], [ %.pre1515, %if.then1007 ]
  %290 = phi %struct.varray_head_tag* [ %286, %do.body1002 ], [ %call1010, %if.then1007 ]
  %elements_used1012 = getelementptr inbounds %struct.varray_head_tag* %290, i64 0, i32 1
  %inc1013 = add i64 %289, 1
  store i64 %inc1013, i64* %elements_used1012, align 8, !tbaa !12
  %data1014 = getelementptr inbounds %struct.varray_head_tag* %290, i64 0, i32 4
  %tree1015 = bitcast %union.varray_data_tag* %data1014 to [1 x %union.tree_node*]*
  %arrayidx1016 = getelementptr inbounds [1 x %union.tree_node*]* %tree1015, i64 0, i64 %289
  store %union.tree_node* %284, %union.tree_node** %arrayidx1016, align 8, !tbaa !1
  br label %do.end1019

do.end1019:                                       ; preds = %land.lhs.true998, %do.body992, %if.end1011
  tail call void @lang_mark_tree(%union.tree_node* %4) #4
  br label %while.cond.backedge

do.body1021:                                      ; preds = %sw.epilog
  %vars = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %291 = bitcast i32* %vars to %union.tree_node**
  %292 = load %union.tree_node** %291, align 8, !tbaa !64
  %cmp1023 = icmp eq %union.tree_node* %292, null
  br i1 %cmp1023, label %do.body1047, label %land.lhs.true1025

land.lhs.true1025:                                ; preds = %do.body1021
  %293 = bitcast %union.tree_node* %292 to i8*
  %call1026 = tail call i32 @ggc_set_mark(i8* %293) #4
  %tobool1027 = icmp eq i32 %call1026, 0
  br i1 %tobool1027, label %do.body1029, label %do.body1047

do.body1029:                                      ; preds = %land.lhs.true1025
  %294 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1030 = getelementptr inbounds %struct.varray_head_tag* %294, i64 0, i32 1
  %295 = load i64* %elements_used1030, align 8, !tbaa !12
  %num_elements1031 = getelementptr inbounds %struct.varray_head_tag* %294, i64 0, i32 0
  %296 = load i64* %num_elements1031, align 8, !tbaa !15
  %cmp1032 = icmp ult i64 %295, %296
  br i1 %cmp1032, label %if.end1038, label %if.then1034

if.then1034:                                      ; preds = %do.body1029
  %mul1036 = shl i64 %296, 1
  %call1037 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %294, i64 %mul1036) #4
  store %struct.varray_head_tag* %call1037, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1039.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call1037, i64 0, i32 1
  %.pre1531 = load i64* %elements_used1039.phi.trans.insert, align 8, !tbaa !12
  br label %if.end1038

if.end1038:                                       ; preds = %do.body1029, %if.then1034
  %297 = phi i64 [ %295, %do.body1029 ], [ %.pre1531, %if.then1034 ]
  %298 = phi %struct.varray_head_tag* [ %294, %do.body1029 ], [ %call1037, %if.then1034 ]
  %elements_used1039 = getelementptr inbounds %struct.varray_head_tag* %298, i64 0, i32 1
  %inc1040 = add i64 %297, 1
  store i64 %inc1040, i64* %elements_used1039, align 8, !tbaa !12
  %data1041 = getelementptr inbounds %struct.varray_head_tag* %298, i64 0, i32 4
  %tree1042 = bitcast %union.varray_data_tag* %data1041 to [1 x %union.tree_node*]*
  %arrayidx1043 = getelementptr inbounds [1 x %union.tree_node*]* %tree1042, i64 0, i64 %297
  store %union.tree_node* %292, %union.tree_node** %arrayidx1043, align 8, !tbaa !1
  br label %do.body1047

do.body1047:                                      ; preds = %land.lhs.true1025, %do.body1021, %if.end1038
  %299 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 4
  %300 = load %union.tree_node** %299, align 8, !tbaa !66
  %cmp1050 = icmp eq %union.tree_node* %300, null
  br i1 %cmp1050, label %do.body1074, label %land.lhs.true1052

land.lhs.true1052:                                ; preds = %do.body1047
  %301 = bitcast %union.tree_node* %300 to i8*
  %call1053 = tail call i32 @ggc_set_mark(i8* %301) #4
  %tobool1054 = icmp eq i32 %call1053, 0
  br i1 %tobool1054, label %do.body1056, label %do.body1074

do.body1056:                                      ; preds = %land.lhs.true1052
  %302 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1057 = getelementptr inbounds %struct.varray_head_tag* %302, i64 0, i32 1
  %303 = load i64* %elements_used1057, align 8, !tbaa !12
  %num_elements1058 = getelementptr inbounds %struct.varray_head_tag* %302, i64 0, i32 0
  %304 = load i64* %num_elements1058, align 8, !tbaa !15
  %cmp1059 = icmp ult i64 %303, %304
  br i1 %cmp1059, label %if.end1065, label %if.then1061

if.then1061:                                      ; preds = %do.body1056
  %mul1063 = shl i64 %304, 1
  %call1064 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %302, i64 %mul1063) #4
  store %struct.varray_head_tag* %call1064, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1066.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call1064, i64 0, i32 1
  %.pre1530 = load i64* %elements_used1066.phi.trans.insert, align 8, !tbaa !12
  br label %if.end1065

if.end1065:                                       ; preds = %do.body1056, %if.then1061
  %305 = phi i64 [ %303, %do.body1056 ], [ %.pre1530, %if.then1061 ]
  %306 = phi %struct.varray_head_tag* [ %302, %do.body1056 ], [ %call1064, %if.then1061 ]
  %elements_used1066 = getelementptr inbounds %struct.varray_head_tag* %306, i64 0, i32 1
  %inc1067 = add i64 %305, 1
  store i64 %inc1067, i64* %elements_used1066, align 8, !tbaa !12
  %data1068 = getelementptr inbounds %struct.varray_head_tag* %306, i64 0, i32 4
  %tree1069 = bitcast %union.varray_data_tag* %data1068 to [1 x %union.tree_node*]*
  %arrayidx1070 = getelementptr inbounds [1 x %union.tree_node*]* %tree1069, i64 0, i64 %305
  store %union.tree_node* %300, %union.tree_node** %arrayidx1070, align 8, !tbaa !1
  br label %do.body1074

do.body1074:                                      ; preds = %land.lhs.true1052, %do.body1047, %if.end1065
  %supercontext = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 5
  %307 = bitcast i48* %supercontext to %union.tree_node**
  %308 = load %union.tree_node** %307, align 8, !tbaa !67
  %cmp1077 = icmp eq %union.tree_node* %308, null
  br i1 %cmp1077, label %do.body1101, label %land.lhs.true1079

land.lhs.true1079:                                ; preds = %do.body1074
  %309 = bitcast %union.tree_node* %308 to i8*
  %call1080 = tail call i32 @ggc_set_mark(i8* %309) #4
  %tobool1081 = icmp eq i32 %call1080, 0
  br i1 %tobool1081, label %do.body1083, label %do.body1101

do.body1083:                                      ; preds = %land.lhs.true1079
  %310 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1084 = getelementptr inbounds %struct.varray_head_tag* %310, i64 0, i32 1
  %311 = load i64* %elements_used1084, align 8, !tbaa !12
  %num_elements1085 = getelementptr inbounds %struct.varray_head_tag* %310, i64 0, i32 0
  %312 = load i64* %num_elements1085, align 8, !tbaa !15
  %cmp1086 = icmp ult i64 %311, %312
  br i1 %cmp1086, label %if.end1092, label %if.then1088

if.then1088:                                      ; preds = %do.body1083
  %mul1090 = shl i64 %312, 1
  %call1091 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %310, i64 %mul1090) #4
  store %struct.varray_head_tag* %call1091, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1093.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call1091, i64 0, i32 1
  %.pre1529 = load i64* %elements_used1093.phi.trans.insert, align 8, !tbaa !12
  br label %if.end1092

if.end1092:                                       ; preds = %do.body1083, %if.then1088
  %313 = phi i64 [ %311, %do.body1083 ], [ %.pre1529, %if.then1088 ]
  %314 = phi %struct.varray_head_tag* [ %310, %do.body1083 ], [ %call1091, %if.then1088 ]
  %elements_used1093 = getelementptr inbounds %struct.varray_head_tag* %314, i64 0, i32 1
  %inc1094 = add i64 %313, 1
  store i64 %inc1094, i64* %elements_used1093, align 8, !tbaa !12
  %data1095 = getelementptr inbounds %struct.varray_head_tag* %314, i64 0, i32 4
  %tree1096 = bitcast %union.varray_data_tag* %data1095 to [1 x %union.tree_node*]*
  %arrayidx1097 = getelementptr inbounds [1 x %union.tree_node*]* %tree1096, i64 0, i64 %313
  store %union.tree_node* %308, %union.tree_node** %arrayidx1097, align 8, !tbaa !1
  br label %do.body1101

do.body1101:                                      ; preds = %land.lhs.true1079, %do.body1074, %if.end1092
  %abstract_origin1104 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 6
  %315 = bitcast %union.anon* %abstract_origin1104 to %union.tree_node**
  %316 = load %union.tree_node** %315, align 8, !tbaa !68
  %cmp1105 = icmp eq %union.tree_node* %316, null
  br i1 %cmp1105, label %while.cond.backedge, label %land.lhs.true1107

land.lhs.true1107:                                ; preds = %do.body1101
  %317 = bitcast %union.tree_node* %316 to i8*
  %call1108 = tail call i32 @ggc_set_mark(i8* %317) #4
  %tobool1109 = icmp eq i32 %call1108, 0
  br i1 %tobool1109, label %do.body1111, label %while.cond.backedge

do.body1111:                                      ; preds = %land.lhs.true1107
  %318 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1112 = getelementptr inbounds %struct.varray_head_tag* %318, i64 0, i32 1
  %319 = load i64* %elements_used1112, align 8, !tbaa !12
  %num_elements1113 = getelementptr inbounds %struct.varray_head_tag* %318, i64 0, i32 0
  %320 = load i64* %num_elements1113, align 8, !tbaa !15
  %cmp1114 = icmp ult i64 %319, %320
  br i1 %cmp1114, label %if.end1120, label %if.then1116

if.then1116:                                      ; preds = %do.body1111
  %mul1118 = shl i64 %320, 1
  %call1119 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %318, i64 %mul1118) #4
  store %struct.varray_head_tag* %call1119, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1121.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call1119, i64 0, i32 1
  %.pre1528 = load i64* %elements_used1121.phi.trans.insert, align 8, !tbaa !12
  br label %if.end1120

if.end1120:                                       ; preds = %do.body1111, %if.then1116
  %321 = phi i64 [ %319, %do.body1111 ], [ %.pre1528, %if.then1116 ]
  %322 = phi %struct.varray_head_tag* [ %318, %do.body1111 ], [ %call1119, %if.then1116 ]
  %elements_used1121 = getelementptr inbounds %struct.varray_head_tag* %322, i64 0, i32 1
  %inc1122 = add i64 %321, 1
  store i64 %inc1122, i64* %elements_used1121, align 8, !tbaa !12
  %data1123 = getelementptr inbounds %struct.varray_head_tag* %322, i64 0, i32 4
  %tree1124 = bitcast %union.varray_data_tag* %data1123 to [1 x %union.tree_node*]*
  %arrayidx1125 = getelementptr inbounds [1 x %union.tree_node*]* %tree1124, i64 0, i64 %321
  store %union.tree_node* %316, %union.tree_node** %arrayidx1125, align 8, !tbaa !1
  br label %while.cond.backedge

do.body1130:                                      ; preds = %sw.epilog
  %rtl1132 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 1
  %323 = load i8** %rtl1132, align 8
  %324 = bitcast i8* %323 to %struct.rtx_def*
  %cmp1133 = icmp eq i8* %323, null
  br i1 %cmp1133, label %while.cond.backedge, label %land.lhs.true1135

land.lhs.true1135:                                ; preds = %do.body1130
  %call1136 = tail call i32 @ggc_set_mark(i8* %323) #4
  %tobool1137 = icmp eq i32 %call1136, 0
  br i1 %tobool1137, label %if.then1138, label %while.cond.backedge

if.then1138:                                      ; preds = %land.lhs.true1135
  %325 = bitcast i8* %323 to i32*
  %bf.load.i1427 = load i32* %325, align 8
  %bf.clear.i1428 = and i32 %bf.load.i1427, 65535
  %bf.clear.off.i1429 = add i32 %bf.clear.i1428, -32
  %switch.i1430 = icmp ult i32 %bf.clear.off.i1429, 6
  br i1 %switch.i1430, label %sw.bb.i1435, label %ggc_mark_rtx_children.exit1455

sw.bb.i1435:                                      ; preds = %if.then1138
  %arrayidx.i1431 = getelementptr inbounds i8* %323, i64 24
  %rtx.i1432 = bitcast i8* %arrayidx.i1431 to %struct.rtx_def**
  %i.026.i1433 = load %struct.rtx_def** %rtx.i1432, align 8
  %cmp27.i1434 = icmp eq %struct.rtx_def* %i.026.i1433, null
  br i1 %cmp27.i1434, label %ggc_mark_rtx_children.exit1455, label %land.lhs.true.i1443

for.cond7.preheader.i1439:                        ; preds = %for.inc.i1448, %land.lhs.true.i1443
  %i.0.lcssa.i1436.ph = phi %struct.rtx_def* [ null, %for.inc.i1448 ], [ %i.028.i1440, %land.lhs.true.i1443 ]
  %i.123.i1437.pre = load %struct.rtx_def** %rtx.i1432, align 8
  %cmp824.i1438 = icmp eq %struct.rtx_def* %i.123.i1437.pre, %i.0.lcssa.i1436.ph
  br i1 %cmp824.i1438, label %ggc_mark_rtx_children.exit1455, label %for.body.i1454

land.lhs.true.i1443:                              ; preds = %sw.bb.i1435, %for.inc.i1448
  %i.028.i1440 = phi %struct.rtx_def* [ %i.0.i1446, %for.inc.i1448 ], [ %i.026.i1433, %sw.bb.i1435 ]
  %326 = bitcast %struct.rtx_def* %i.028.i1440 to i8*
  %call.i1441 = tail call i32 @ggc_set_mark(i8* %326) #4
  %tobool.i1442 = icmp eq i32 %call.i1441, 0
  br i1 %tobool.i1442, label %for.inc.i1448, label %for.cond7.preheader.i1439

for.inc.i1448:                                    ; preds = %land.lhs.true.i1443
  %arrayidx2.i1444 = getelementptr inbounds %struct.rtx_def* %i.028.i1440, i64 0, i32 1, i64 2
  %rtx3.i1445 = bitcast %union.rtunion_def* %arrayidx2.i1444 to %struct.rtx_def**
  %i.0.i1446 = load %struct.rtx_def** %rtx3.i1445, align 8
  %cmp.i1447 = icmp eq %struct.rtx_def* %i.0.i1446, null
  br i1 %cmp.i1447, label %for.cond7.preheader.i1439, label %land.lhs.true.i1443

for.body.i1454:                                   ; preds = %for.cond7.preheader.i1439, %for.body.i1454
  %i.125.i1449 = phi %struct.rtx_def* [ %i.1.i1452, %for.body.i1454 ], [ %i.123.i1437.pre, %for.cond7.preheader.i1439 ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.125.i1449) #4
  %arrayidx11.i1450 = getelementptr inbounds %struct.rtx_def* %i.125.i1449, i64 0, i32 1, i64 2
  %rtx12.i1451 = bitcast %union.rtunion_def* %arrayidx11.i1450 to %struct.rtx_def**
  %i.1.i1452 = load %struct.rtx_def** %rtx12.i1451, align 8
  %cmp8.i1453 = icmp eq %struct.rtx_def* %i.1.i1452, %i.0.lcssa.i1436.ph
  br i1 %cmp8.i1453, label %ggc_mark_rtx_children.exit1455, label %for.body.i1454

ggc_mark_rtx_children.exit1455:                   ; preds = %for.body.i1454, %sw.bb.i1435, %if.then1138, %for.cond7.preheader.i1439
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %324) #4
  br label %while.cond.backedge

sw.bb1141:                                        ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  %bf.load1145 = load i32* %code3, align 8
  %bf.clear1146 = and i32 %bf.load1145, 255
  %idxprom11471367 = zext i32 %bf.clear1146 to i64
  %arrayidx1148 = getelementptr inbounds [256 x i32]* @tree_code_length, i64 0, i64 %idxprom11471367
  %327 = load i32* %arrayidx1148, align 4, !tbaa !21
  %call1153 = tail call i32 @first_rtl_op(i32 %bf.clear1146) #4
  %cmp11561492 = icmp sgt i32 %327, 0
  br i1 %cmp11561492, label %while.body1158.lr.ph, label %while.cond.backedge

while.body1158.lr.ph:                             ; preds = %sw.bb1141
  %operands = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 2
  %328 = bitcast i32* %operands to [1 x %union.tree_node*]*
  %329 = sext i32 %327 to i64
  br label %while.body1158

while.body1158:                                   ; preds = %while.body1158.lr.ph, %while.cond1154.backedge
  %indvars.iv1498 = phi i64 [ %329, %while.body1158.lr.ph ], [ %indvars.iv.next1499, %while.cond1154.backedge ]
  %dec11551494.in = phi i32 [ %327, %while.body1158.lr.ph ], [ %dec11551494, %while.cond1154.backedge ]
  %indvars.iv.next1499 = add nsw i64 %indvars.iv1498, -1
  %dec11551494 = add nsw i32 %dec11551494.in, -1
  %cmp1159 = icmp sgt i32 %dec11551494.in, %call1153
  %arrayidx1165 = getelementptr inbounds [1 x %union.tree_node*]* %328, i64 0, i64 %indvars.iv.next1499
  %330 = load %union.tree_node** %arrayidx1165, align 8, !tbaa !1
  br i1 %cmp1159, label %do.body1162, label %do.body1174

do.body1162:                                      ; preds = %while.body1158
  %331 = bitcast %union.tree_node* %330 to %struct.rtx_def*
  %cmp1166 = icmp eq %union.tree_node* %330, null
  br i1 %cmp1166, label %while.cond1154.backedge, label %land.lhs.true1168

land.lhs.true1168:                                ; preds = %do.body1162
  %332 = bitcast %union.tree_node* %330 to i8*
  %call1169 = tail call i32 @ggc_set_mark(i8* %332) #4
  %tobool1170 = icmp eq i32 %call1169, 0
  br i1 %tobool1170, label %if.then1171, label %while.cond1154.backedge

if.then1171:                                      ; preds = %land.lhs.true1168
  %333 = bitcast %union.tree_node* %330 to i32*
  %bf.load.i1456 = load i32* %333, align 8
  %bf.clear.i1457 = and i32 %bf.load.i1456, 65535
  %bf.clear.off.i1458 = add i32 %bf.clear.i1457, -32
  %switch.i1459 = icmp ult i32 %bf.clear.off.i1458, 6
  br i1 %switch.i1459, label %sw.bb.i1464, label %ggc_mark_rtx_children.exit1484

sw.bb.i1464:                                      ; preds = %if.then1171
  %arrayidx.i1460 = getelementptr inbounds %union.tree_node* %330, i64 0, i32 0, i32 1
  %rtx.i14611485 = load i8** %arrayidx.i1460, align 8
  %cmp27.i1463 = icmp eq i8* %rtx.i14611485, null
  br i1 %cmp27.i1463, label %ggc_mark_rtx_children.exit1484, label %land.lhs.true.i1472.preheader

land.lhs.true.i1472.preheader:                    ; preds = %sw.bb.i1464
  %i.026.i1462 = bitcast i8* %rtx.i14611485 to %struct.rtx_def*
  br label %land.lhs.true.i1472

for.cond7.preheader.i1468:                        ; preds = %for.inc.i1477, %land.lhs.true.i1472
  %i.0.lcssa.i1465.ph = phi %struct.rtx_def* [ null, %for.inc.i1477 ], [ %i.028.i1469, %land.lhs.true.i1472 ]
  %rtx.i14611486.pre = load i8** %arrayidx.i1460, align 8
  %phitmp = bitcast i8* %rtx.i14611486.pre to %struct.rtx_def*
  %cmp824.i1467 = icmp eq %struct.rtx_def* %phitmp, %i.0.lcssa.i1465.ph
  br i1 %cmp824.i1467, label %ggc_mark_rtx_children.exit1484, label %for.body.i1483

land.lhs.true.i1472:                              ; preds = %land.lhs.true.i1472.preheader, %for.inc.i1477
  %i.028.i1469 = phi %struct.rtx_def* [ %i.0.i1475, %for.inc.i1477 ], [ %i.026.i1462, %land.lhs.true.i1472.preheader ]
  %334 = bitcast %struct.rtx_def* %i.028.i1469 to i8*
  %call.i1470 = tail call i32 @ggc_set_mark(i8* %334) #4
  %tobool.i1471 = icmp eq i32 %call.i1470, 0
  br i1 %tobool.i1471, label %for.inc.i1477, label %for.cond7.preheader.i1468

for.inc.i1477:                                    ; preds = %land.lhs.true.i1472
  %arrayidx2.i1473 = getelementptr inbounds %struct.rtx_def* %i.028.i1469, i64 0, i32 1, i64 2
  %rtx3.i1474 = bitcast %union.rtunion_def* %arrayidx2.i1473 to %struct.rtx_def**
  %i.0.i1475 = load %struct.rtx_def** %rtx3.i1474, align 8
  %cmp.i1476 = icmp eq %struct.rtx_def* %i.0.i1475, null
  br i1 %cmp.i1476, label %for.cond7.preheader.i1468, label %land.lhs.true.i1472

for.body.i1483:                                   ; preds = %for.cond7.preheader.i1468, %for.body.i1483
  %i.125.i1478 = phi %struct.rtx_def* [ %i.1.i1481, %for.body.i1483 ], [ %phitmp, %for.cond7.preheader.i1468 ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.125.i1478) #4
  %arrayidx11.i1479 = getelementptr inbounds %struct.rtx_def* %i.125.i1478, i64 0, i32 1, i64 2
  %rtx12.i1480 = bitcast %union.rtunion_def* %arrayidx11.i1479 to %struct.rtx_def**
  %i.1.i1481 = load %struct.rtx_def** %rtx12.i1480, align 8
  %cmp8.i1482 = icmp eq %struct.rtx_def* %i.1.i1481, %i.0.lcssa.i1465.ph
  br i1 %cmp8.i1482, label %ggc_mark_rtx_children.exit1484, label %for.body.i1483

ggc_mark_rtx_children.exit1484:                   ; preds = %for.body.i1483, %sw.bb.i1464, %if.then1171, %for.cond7.preheader.i1468
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %331) #4
  br label %while.cond1154.backedge

do.body1174:                                      ; preds = %while.body1158
  %cmp1180 = icmp eq %union.tree_node* %330, null
  br i1 %cmp1180, label %while.cond1154.backedge, label %land.lhs.true1182

land.lhs.true1182:                                ; preds = %do.body1174
  %335 = bitcast %union.tree_node* %330 to i8*
  %call1183 = tail call i32 @ggc_set_mark(i8* %335) #4
  %tobool1184 = icmp eq i32 %call1183, 0
  br i1 %tobool1184, label %do.body1186, label %while.cond1154.backedge

do.body1186:                                      ; preds = %land.lhs.true1182
  %336 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1187 = getelementptr inbounds %struct.varray_head_tag* %336, i64 0, i32 1
  %337 = load i64* %elements_used1187, align 8, !tbaa !12
  %num_elements1188 = getelementptr inbounds %struct.varray_head_tag* %336, i64 0, i32 0
  %338 = load i64* %num_elements1188, align 8, !tbaa !15
  %cmp1189 = icmp ult i64 %337, %338
  br i1 %cmp1189, label %if.end1195, label %if.then1191

if.then1191:                                      ; preds = %do.body1186
  %mul1193 = shl i64 %338, 1
  %call1194 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %336, i64 %mul1193) #4
  store %struct.varray_head_tag* %call1194, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used1196.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call1194, i64 0, i32 1
  %.pre1545 = load i64* %elements_used1196.phi.trans.insert, align 8, !tbaa !12
  br label %if.end1195

if.end1195:                                       ; preds = %do.body1186, %if.then1191
  %339 = phi i64 [ %337, %do.body1186 ], [ %.pre1545, %if.then1191 ]
  %340 = phi %struct.varray_head_tag* [ %336, %do.body1186 ], [ %call1194, %if.then1191 ]
  %elements_used1196 = getelementptr inbounds %struct.varray_head_tag* %340, i64 0, i32 1
  %inc1197 = add i64 %339, 1
  store i64 %inc1197, i64* %elements_used1196, align 8, !tbaa !12
  %data1198 = getelementptr inbounds %struct.varray_head_tag* %340, i64 0, i32 4
  %tree1199 = bitcast %union.varray_data_tag* %data1198 to [1 x %union.tree_node*]*
  %arrayidx1200 = getelementptr inbounds [1 x %union.tree_node*]* %tree1199, i64 0, i64 %339
  store %union.tree_node* %330, %union.tree_node** %arrayidx1200, align 8, !tbaa !1
  br label %while.cond1154.backedge

while.cond1154.backedge:                          ; preds = %if.end1195, %ggc_mark_rtx_children.exit1484, %do.body1174, %land.lhs.true1182, %do.body1162, %land.lhs.true1168
  %341 = trunc i64 %indvars.iv.next1499 to i32
  %cmp1156 = icmp sgt i32 %341, 0
  br i1 %cmp1156, label %while.body1158, label %while.cond.backedge

sw.bb1206:                                        ; preds = %sw.epilog
  tail call void @lang_mark_tree(%union.tree_node* %4) #4
  br label %while.cond.backedge

while.end1208:                                    ; preds = %while.cond.backedge, %entry
  ret void
}

declare void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @ggc_htab_delete(i8** %slot, i8* nocapture readonly %info) #0 {
entry:
  %marked_p = getelementptr inbounds i8* %info, i64 16
  %0 = bitcast i8* %marked_p to i32 (i8*)**
  %1 = load i32 (i8*)** %0, align 8, !tbaa !19
  %2 = load i8** %slot, align 8, !tbaa !1
  %call = tail call i32 %1(i8* %2) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %htab = getelementptr inbounds i8* %info, i64 8
  %3 = bitcast i8* %htab to %struct.htab**
  %4 = load %struct.htab** %3, align 8, !tbaa !18
  tail call void @htab_clear_slot(%struct.htab* %4, i8** %slot) #4
  br label %if.end4

if.else:                                          ; preds = %entry
  %mark = getelementptr inbounds i8* %info, i64 24
  %5 = bitcast i8* %mark to void (i8*)**
  %6 = load void (i8*)** %5, align 8, !tbaa !20
  %tobool1 = icmp eq void (i8*)* %6, null
  br i1 %tobool1, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.else
  %7 = load i8** %slot, align 8, !tbaa !1
  tail call void %6(i8* %7) #4
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2, %if.then
  ret i32 1
}

; Function Attrs: nounwind uwtable
define void @ggc_mark_rtx_children(%struct.rtx_def* %r) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %r, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -32
  %switch = icmp ult i32 %bf.clear.off, 6
  br i1 %switch, label %sw.bb, label %sw.epilog

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %r, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %i.026 = load %struct.rtx_def** %rtx, align 8
  %cmp27 = icmp eq %struct.rtx_def* %i.026, null
  br i1 %cmp27, label %for.cond7.preheader, label %land.lhs.true

for.cond7.preheader:                              ; preds = %for.inc, %land.lhs.true, %sw.bb
  %i.0.lcssa = phi %struct.rtx_def* [ null, %sw.bb ], [ null, %for.inc ], [ %i.028, %land.lhs.true ]
  %i.123 = load %struct.rtx_def** %rtx, align 8
  %cmp824 = icmp eq %struct.rtx_def* %i.123, %i.0.lcssa
  br i1 %cmp824, label %sw.epilog, label %for.body

land.lhs.true:                                    ; preds = %sw.bb, %for.inc
  %i.028 = phi %struct.rtx_def* [ %i.0, %for.inc ], [ %i.026, %sw.bb ]
  %1 = bitcast %struct.rtx_def* %i.028 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %1) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.inc, label %for.cond7.preheader

for.inc:                                          ; preds = %land.lhs.true
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %i.028, i64 0, i32 1, i64 2
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %i.0 = load %struct.rtx_def** %rtx3, align 8
  %cmp = icmp eq %struct.rtx_def* %i.0, null
  br i1 %cmp, label %for.cond7.preheader, label %land.lhs.true

for.body:                                         ; preds = %for.cond7.preheader, %for.body
  %i.125 = phi %struct.rtx_def* [ %i.1, %for.body ], [ %i.123, %for.cond7.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.125)
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %i.125, i64 0, i32 1, i64 2
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %i.1 = load %struct.rtx_def** %rtx12, align 8
  %cmp8 = icmp eq %struct.rtx_def* %i.1, %i.0.lcssa
  br i1 %cmp8, label %sw.epilog, label %for.body

sw.epilog:                                        ; preds = %for.body, %for.cond7.preheader, %entry
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %r)
  ret void
}

declare i32 @ggc_set_mark(i8*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %r) #0 {
entry:
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %r.addr.0 = phi %struct.rtx_def* [ %r, %entry ], [ %next_rtx.1, %do.cond ]
  %0 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %1 = load %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  %tobool = icmp eq %struct.ggc_statistics* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %do.body
  %idxprom218 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds %struct.ggc_statistics* %1, i64 0, i32 2, i64 %idxprom218
  %2 = load i32* %arrayidx, align 4, !tbaa !21
  %inc = add i32 %2, 1
  store i32 %inc, i32* %arrayidx, align 4, !tbaa !21
  %3 = bitcast %struct.rtx_def* %r.addr.0 to i8*
  %call = tail call i64 @ggc_get_size(i8* %3) #4
  %4 = load %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.ggc_statistics* %4, i64 0, i32 3, i64 %idxprom218
  %5 = load i64* %arrayidx2, align 8, !tbaa !22
  %add = add i64 %5, %call
  store i64 %add, i64* %arrayidx2, align 8, !tbaa !22
  br label %if.end

if.end:                                           ; preds = %do.body, %if.then
  switch i32 %bf.clear, label %sw.epilog135 [
    i32 66, label %do.body3
    i32 33, label %do.body9
    i32 36, label %do.body19
    i32 67, label %do.body32
    i32 70, label %do.body57
    i32 55, label %do.body78
    i32 37, label %sw.bb90
  ]

do.body3:                                         ; preds = %if.end
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx4 to %struct.mem_attrs**
  %6 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !1
  %cmp = icmp eq %struct.mem_attrs* %6, null
  br i1 %cmp, label %sw.epilog135, label %if.then5

if.then5:                                         ; preds = %do.body3
  %7 = bitcast %struct.mem_attrs* %6 to i8*
  %call6 = tail call i32 @ggc_set_mark(i8* %7) #4
  br label %sw.epilog135

do.body9:                                         ; preds = %if.end
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 7
  %rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %cmp12 = icmp eq %struct.rtx_def* %8, null
  br i1 %cmp12, label %sw.epilog135, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body9
  %9 = bitcast %struct.rtx_def* %8 to i8*
  %call13 = tail call i32 @ggc_set_mark(i8* %9) #4
  %tobool14 = icmp eq i32 %call13, 0
  br i1 %tobool14, label %if.then15, label %sw.epilog135

if.then15:                                        ; preds = %land.lhs.true
  %10 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load.i = load i32* %10, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %bf.clear.off.i = add i32 %bf.clear.i, -32
  %switch.i = icmp ult i32 %bf.clear.off.i, 6
  br i1 %switch.i, label %sw.bb.i, label %ggc_mark_rtx_children.exit

sw.bb.i:                                          ; preds = %if.then15
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %i.0.i439 = load %struct.rtx_def** %rtx.i, align 8
  %cmp.i440 = icmp eq %struct.rtx_def* %i.0.i439, null
  br i1 %cmp.i440, label %for.cond7.i.preheader, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %sw.bb.i, %for.inc.i
  %i.0.i441 = phi %struct.rtx_def* [ %i.0.i, %for.inc.i ], [ %i.0.i439, %sw.bb.i ]
  %11 = bitcast %struct.rtx_def* %i.0.i441 to i8*
  %call.i = tail call i32 @ggc_set_mark(i8* %11) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %for.inc.i, label %for.cond7.i.preheader

for.cond7.i.preheader:                            ; preds = %land.lhs.true.i, %for.inc.i, %sw.bb.i
  %i.0.i.lcssa = phi %struct.rtx_def* [ null, %sw.bb.i ], [ %i.0.i441, %land.lhs.true.i ], [ null, %for.inc.i ]
  %i.1.i444 = load %struct.rtx_def** %rtx.i, align 8
  %cmp8.i445 = icmp eq %struct.rtx_def* %i.1.i444, %i.0.i.lcssa
  br i1 %cmp8.i445, label %ggc_mark_rtx_children.exit, label %for.body.i

for.inc.i:                                        ; preds = %land.lhs.true.i
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %i.0.i441, i64 0, i32 1, i64 2
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i to %struct.rtx_def**
  %i.0.i = load %struct.rtx_def** %rtx3.i, align 8
  %cmp.i = icmp eq %struct.rtx_def* %i.0.i, null
  br i1 %cmp.i, label %for.cond7.i.preheader, label %land.lhs.true.i

for.body.i:                                       ; preds = %for.cond7.i.preheader, %for.body.i
  %i.1.i446 = phi %struct.rtx_def* [ %i.1.i, %for.body.i ], [ %i.1.i444, %for.cond7.i.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.1.i446) #4
  %arrayidx11.i = getelementptr inbounds %struct.rtx_def* %i.1.i446, i64 0, i32 1, i64 2
  %rtx12.i = bitcast %union.rtunion_def* %arrayidx11.i to %struct.rtx_def**
  %i.1.i = load %struct.rtx_def** %rtx12.i, align 8
  %cmp8.i = icmp eq %struct.rtx_def* %i.1.i, %i.0.i.lcssa
  br i1 %cmp8.i, label %ggc_mark_rtx_children.exit, label %for.body.i

ggc_mark_rtx_children.exit:                       ; preds = %for.body.i, %for.cond7.i.preheader, %if.then15
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %8) #4
  br label %sw.epilog135

do.body19:                                        ; preds = %if.end
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 4
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx23, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.rtx_def* %12, null
  br i1 %cmp24, label %sw.epilog135, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %do.body19
  %13 = bitcast %struct.rtx_def* %12 to i8*
  %call26 = tail call i32 @ggc_set_mark(i8* %13) #4
  %tobool27 = icmp eq i32 %call26, 0
  br i1 %tobool27, label %if.then28, label %sw.epilog135

if.then28:                                        ; preds = %land.lhs.true25
  %14 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load.i219 = load i32* %14, align 8
  %bf.clear.i220 = and i32 %bf.load.i219, 65535
  %bf.clear.off.i221 = add i32 %bf.clear.i220, -32
  %switch.i222 = icmp ult i32 %bf.clear.off.i221, 6
  br i1 %switch.i222, label %sw.bb.i225, label %ggc_mark_rtx_children.exit243

sw.bb.i225:                                       ; preds = %if.then28
  %arrayidx.i223 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 2
  %rtx.i224 = bitcast %union.rtunion_def* %arrayidx.i223 to %struct.rtx_def**
  %i.0.i227431 = load %struct.rtx_def** %rtx.i224, align 8
  %cmp.i228432 = icmp eq %struct.rtx_def* %i.0.i227431, null
  br i1 %cmp.i228432, label %for.cond7.i239.preheader, label %land.lhs.true.i232

land.lhs.true.i232:                               ; preds = %sw.bb.i225, %for.inc.i235
  %i.0.i227433 = phi %struct.rtx_def* [ %i.0.i227, %for.inc.i235 ], [ %i.0.i227431, %sw.bb.i225 ]
  %15 = bitcast %struct.rtx_def* %i.0.i227433 to i8*
  %call.i230 = tail call i32 @ggc_set_mark(i8* %15) #4
  %tobool.i231 = icmp eq i32 %call.i230, 0
  br i1 %tobool.i231, label %for.inc.i235, label %for.cond7.i239.preheader

for.cond7.i239.preheader:                         ; preds = %land.lhs.true.i232, %for.inc.i235, %sw.bb.i225
  %i.0.i227.lcssa = phi %struct.rtx_def* [ null, %sw.bb.i225 ], [ %i.0.i227433, %land.lhs.true.i232 ], [ null, %for.inc.i235 ]
  %i.1.i237436 = load %struct.rtx_def** %rtx.i224, align 8
  %cmp8.i238437 = icmp eq %struct.rtx_def* %i.1.i237436, %i.0.i227.lcssa
  br i1 %cmp8.i238437, label %ggc_mark_rtx_children.exit243, label %for.body.i242

for.inc.i235:                                     ; preds = %land.lhs.true.i232
  %arrayidx2.i233 = getelementptr inbounds %struct.rtx_def* %i.0.i227433, i64 0, i32 1, i64 2
  %rtx3.i234 = bitcast %union.rtunion_def* %arrayidx2.i233 to %struct.rtx_def**
  %i.0.i227 = load %struct.rtx_def** %rtx3.i234, align 8
  %cmp.i228 = icmp eq %struct.rtx_def* %i.0.i227, null
  br i1 %cmp.i228, label %for.cond7.i239.preheader, label %land.lhs.true.i232

for.body.i242:                                    ; preds = %for.cond7.i239.preheader, %for.body.i242
  %i.1.i237438 = phi %struct.rtx_def* [ %i.1.i237, %for.body.i242 ], [ %i.1.i237436, %for.cond7.i239.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.1.i237438) #4
  %arrayidx11.i240 = getelementptr inbounds %struct.rtx_def* %i.1.i237438, i64 0, i32 1, i64 2
  %rtx12.i241 = bitcast %union.rtunion_def* %arrayidx11.i240 to %struct.rtx_def**
  %i.1.i237 = load %struct.rtx_def** %rtx12.i241, align 8
  %cmp8.i238 = icmp eq %struct.rtx_def* %i.1.i237, %i.0.i227.lcssa
  br i1 %cmp8.i238, label %ggc_mark_rtx_children.exit243, label %for.body.i242

ggc_mark_rtx_children.exit243:                    ; preds = %for.body.i242, %for.cond7.i239.preheader, %if.then28
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %12) #4
  br label %sw.epilog135

do.body32:                                        ; preds = %if.end
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 1
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx36, align 8, !tbaa !1
  %cmp37 = icmp eq %struct.rtx_def* %16, null
  br i1 %cmp37, label %do.body44, label %land.lhs.true38

land.lhs.true38:                                  ; preds = %do.body32
  %17 = bitcast %struct.rtx_def* %16 to i8*
  %call39 = tail call i32 @ggc_set_mark(i8* %17) #4
  %tobool40 = icmp eq i32 %call39, 0
  br i1 %tobool40, label %if.then41, label %do.body44

if.then41:                                        ; preds = %land.lhs.true38
  %18 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load.i244 = load i32* %18, align 8
  %bf.clear.i245 = and i32 %bf.load.i244, 65535
  %bf.clear.off.i246 = add i32 %bf.clear.i245, -32
  %switch.i247 = icmp ult i32 %bf.clear.off.i246, 6
  br i1 %switch.i247, label %sw.bb.i250, label %ggc_mark_rtx_children.exit268

sw.bb.i250:                                       ; preds = %if.then41
  %arrayidx.i248 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 2
  %rtx.i249 = bitcast %union.rtunion_def* %arrayidx.i248 to %struct.rtx_def**
  %i.0.i252415 = load %struct.rtx_def** %rtx.i249, align 8
  %cmp.i253416 = icmp eq %struct.rtx_def* %i.0.i252415, null
  br i1 %cmp.i253416, label %for.cond7.i264.preheader, label %land.lhs.true.i257

land.lhs.true.i257:                               ; preds = %sw.bb.i250, %for.inc.i260
  %i.0.i252417 = phi %struct.rtx_def* [ %i.0.i252, %for.inc.i260 ], [ %i.0.i252415, %sw.bb.i250 ]
  %19 = bitcast %struct.rtx_def* %i.0.i252417 to i8*
  %call.i255 = tail call i32 @ggc_set_mark(i8* %19) #4
  %tobool.i256 = icmp eq i32 %call.i255, 0
  br i1 %tobool.i256, label %for.inc.i260, label %for.cond7.i264.preheader

for.cond7.i264.preheader:                         ; preds = %land.lhs.true.i257, %for.inc.i260, %sw.bb.i250
  %i.0.i252.lcssa = phi %struct.rtx_def* [ null, %sw.bb.i250 ], [ %i.0.i252417, %land.lhs.true.i257 ], [ null, %for.inc.i260 ]
  %i.1.i262420 = load %struct.rtx_def** %rtx.i249, align 8
  %cmp8.i263421 = icmp eq %struct.rtx_def* %i.1.i262420, %i.0.i252.lcssa
  br i1 %cmp8.i263421, label %ggc_mark_rtx_children.exit268, label %for.body.i267

for.inc.i260:                                     ; preds = %land.lhs.true.i257
  %arrayidx2.i258 = getelementptr inbounds %struct.rtx_def* %i.0.i252417, i64 0, i32 1, i64 2
  %rtx3.i259 = bitcast %union.rtunion_def* %arrayidx2.i258 to %struct.rtx_def**
  %i.0.i252 = load %struct.rtx_def** %rtx3.i259, align 8
  %cmp.i253 = icmp eq %struct.rtx_def* %i.0.i252, null
  br i1 %cmp.i253, label %for.cond7.i264.preheader, label %land.lhs.true.i257

for.body.i267:                                    ; preds = %for.cond7.i264.preheader, %for.body.i267
  %i.1.i262422 = phi %struct.rtx_def* [ %i.1.i262, %for.body.i267 ], [ %i.1.i262420, %for.cond7.i264.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.1.i262422) #4
  %arrayidx11.i265 = getelementptr inbounds %struct.rtx_def* %i.1.i262422, i64 0, i32 1, i64 2
  %rtx12.i266 = bitcast %union.rtunion_def* %arrayidx11.i265 to %struct.rtx_def**
  %i.1.i262 = load %struct.rtx_def** %rtx12.i266, align 8
  %cmp8.i263 = icmp eq %struct.rtx_def* %i.1.i262, %i.0.i252.lcssa
  br i1 %cmp8.i263, label %ggc_mark_rtx_children.exit268, label %for.body.i267

ggc_mark_rtx_children.exit268:                    ; preds = %for.body.i267, %for.cond7.i264.preheader, %if.then41
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %16) #4
  br label %do.body44

do.body44:                                        ; preds = %land.lhs.true38, %do.body32, %ggc_mark_rtx_children.exit268
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 2
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx48, align 8, !tbaa !1
  %cmp49 = icmp eq %struct.rtx_def* %20, null
  br i1 %cmp49, label %sw.epilog135, label %land.lhs.true50

land.lhs.true50:                                  ; preds = %do.body44
  %21 = bitcast %struct.rtx_def* %20 to i8*
  %call51 = tail call i32 @ggc_set_mark(i8* %21) #4
  %tobool52 = icmp eq i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %sw.epilog135

if.then53:                                        ; preds = %land.lhs.true50
  %22 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load.i269 = load i32* %22, align 8
  %bf.clear.i270 = and i32 %bf.load.i269, 65535
  %bf.clear.off.i271 = add i32 %bf.clear.i270, -32
  %switch.i272 = icmp ult i32 %bf.clear.off.i271, 6
  br i1 %switch.i272, label %sw.bb.i275, label %ggc_mark_rtx_children.exit293

sw.bb.i275:                                       ; preds = %if.then53
  %arrayidx.i273 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 2
  %rtx.i274 = bitcast %union.rtunion_def* %arrayidx.i273 to %struct.rtx_def**
  %i.0.i277423 = load %struct.rtx_def** %rtx.i274, align 8
  %cmp.i278424 = icmp eq %struct.rtx_def* %i.0.i277423, null
  br i1 %cmp.i278424, label %for.cond7.i289.preheader, label %land.lhs.true.i282

land.lhs.true.i282:                               ; preds = %sw.bb.i275, %for.inc.i285
  %i.0.i277425 = phi %struct.rtx_def* [ %i.0.i277, %for.inc.i285 ], [ %i.0.i277423, %sw.bb.i275 ]
  %23 = bitcast %struct.rtx_def* %i.0.i277425 to i8*
  %call.i280 = tail call i32 @ggc_set_mark(i8* %23) #4
  %tobool.i281 = icmp eq i32 %call.i280, 0
  br i1 %tobool.i281, label %for.inc.i285, label %for.cond7.i289.preheader

for.cond7.i289.preheader:                         ; preds = %land.lhs.true.i282, %for.inc.i285, %sw.bb.i275
  %i.0.i277.lcssa = phi %struct.rtx_def* [ null, %sw.bb.i275 ], [ %i.0.i277425, %land.lhs.true.i282 ], [ null, %for.inc.i285 ]
  %i.1.i287428 = load %struct.rtx_def** %rtx.i274, align 8
  %cmp8.i288429 = icmp eq %struct.rtx_def* %i.1.i287428, %i.0.i277.lcssa
  br i1 %cmp8.i288429, label %ggc_mark_rtx_children.exit293, label %for.body.i292

for.inc.i285:                                     ; preds = %land.lhs.true.i282
  %arrayidx2.i283 = getelementptr inbounds %struct.rtx_def* %i.0.i277425, i64 0, i32 1, i64 2
  %rtx3.i284 = bitcast %union.rtunion_def* %arrayidx2.i283 to %struct.rtx_def**
  %i.0.i277 = load %struct.rtx_def** %rtx3.i284, align 8
  %cmp.i278 = icmp eq %struct.rtx_def* %i.0.i277, null
  br i1 %cmp.i278, label %for.cond7.i289.preheader, label %land.lhs.true.i282

for.body.i292:                                    ; preds = %for.cond7.i289.preheader, %for.body.i292
  %i.1.i287430 = phi %struct.rtx_def* [ %i.1.i287, %for.body.i292 ], [ %i.1.i287428, %for.cond7.i289.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.1.i287430) #4
  %arrayidx11.i290 = getelementptr inbounds %struct.rtx_def* %i.1.i287430, i64 0, i32 1, i64 2
  %rtx12.i291 = bitcast %union.rtunion_def* %arrayidx11.i290 to %struct.rtx_def**
  %i.1.i287 = load %struct.rtx_def** %rtx12.i291, align 8
  %cmp8.i288 = icmp eq %struct.rtx_def* %i.1.i287, %i.0.i277.lcssa
  br i1 %cmp8.i288, label %ggc_mark_rtx_children.exit293, label %for.body.i292

ggc_mark_rtx_children.exit293:                    ; preds = %for.body.i292, %for.cond7.i289.preheader, %if.then53
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %20) #4
  br label %sw.epilog135

do.body57:                                        ; preds = %if.end
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 2
  %rttree = bitcast %union.rtunion_def* %arrayidx59 to %union.tree_node**
  %24 = load %union.tree_node** %rttree, align 8, !tbaa !1
  %cmp60 = icmp eq %union.tree_node* %24, null
  br i1 %cmp60, label %sw.epilog135, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %do.body57
  %25 = bitcast %union.tree_node* %24 to i8*
  %call62 = tail call i32 @ggc_set_mark(i8* %25) #4
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %do.body65, label %sw.epilog135

do.body65:                                        ; preds = %land.lhs.true61
  %26 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %26, i64 0, i32 1
  %27 = load i64* %elements_used, align 8, !tbaa !12
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %26, i64 0, i32 0
  %28 = load i64* %num_elements, align 8, !tbaa !15
  %cmp66 = icmp ult i64 %27, %28
  br i1 %cmp66, label %if.end70, label %if.then67

if.then67:                                        ; preds = %do.body65
  %mul = shl i64 %28, 1
  %call69 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %26, i64 %mul) #4
  store %struct.varray_head_tag* %call69, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used71.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call69, i64 0, i32 1
  %.pre494 = load i64* %elements_used71.phi.trans.insert, align 8, !tbaa !12
  br label %if.end70

if.end70:                                         ; preds = %do.body65, %if.then67
  %29 = phi i64 [ %27, %do.body65 ], [ %.pre494, %if.then67 ]
  %30 = phi %struct.varray_head_tag* [ %26, %do.body65 ], [ %call69, %if.then67 ]
  %elements_used71 = getelementptr inbounds %struct.varray_head_tag* %30, i64 0, i32 1
  %inc72 = add i64 %29, 1
  store i64 %inc72, i64* %elements_used71, align 8, !tbaa !12
  %data = getelementptr inbounds %struct.varray_head_tag* %30, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx73 = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %29
  store %union.tree_node* %24, %union.tree_node** %arrayidx73, align 8, !tbaa !1
  br label %sw.epilog135

do.body78:                                        ; preds = %if.end
  %arrayidx81 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx82, align 8, !tbaa !1
  %cmp83 = icmp eq %struct.rtx_def* %31, null
  br i1 %cmp83, label %sw.epilog135, label %land.lhs.true84

land.lhs.true84:                                  ; preds = %do.body78
  %32 = bitcast %struct.rtx_def* %31 to i8*
  %call85 = tail call i32 @ggc_set_mark(i8* %32) #4
  %tobool86 = icmp eq i32 %call85, 0
  br i1 %tobool86, label %if.then87, label %sw.epilog135

if.then87:                                        ; preds = %land.lhs.true84
  %33 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load.i294 = load i32* %33, align 8
  %bf.clear.i295 = and i32 %bf.load.i294, 65535
  %bf.clear.off.i296 = add i32 %bf.clear.i295, -32
  %switch.i297 = icmp ult i32 %bf.clear.off.i296, 6
  br i1 %switch.i297, label %sw.bb.i300, label %ggc_mark_rtx_children.exit318

sw.bb.i300:                                       ; preds = %if.then87
  %arrayidx.i298 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 2
  %rtx.i299 = bitcast %union.rtunion_def* %arrayidx.i298 to %struct.rtx_def**
  %i.0.i302407 = load %struct.rtx_def** %rtx.i299, align 8
  %cmp.i303408 = icmp eq %struct.rtx_def* %i.0.i302407, null
  br i1 %cmp.i303408, label %for.cond7.i314.preheader, label %land.lhs.true.i307

land.lhs.true.i307:                               ; preds = %sw.bb.i300, %for.inc.i310
  %i.0.i302409 = phi %struct.rtx_def* [ %i.0.i302, %for.inc.i310 ], [ %i.0.i302407, %sw.bb.i300 ]
  %34 = bitcast %struct.rtx_def* %i.0.i302409 to i8*
  %call.i305 = tail call i32 @ggc_set_mark(i8* %34) #4
  %tobool.i306 = icmp eq i32 %call.i305, 0
  br i1 %tobool.i306, label %for.inc.i310, label %for.cond7.i314.preheader

for.cond7.i314.preheader:                         ; preds = %land.lhs.true.i307, %for.inc.i310, %sw.bb.i300
  %i.0.i302.lcssa = phi %struct.rtx_def* [ null, %sw.bb.i300 ], [ %i.0.i302409, %land.lhs.true.i307 ], [ null, %for.inc.i310 ]
  %i.1.i312412 = load %struct.rtx_def** %rtx.i299, align 8
  %cmp8.i313413 = icmp eq %struct.rtx_def* %i.1.i312412, %i.0.i302.lcssa
  br i1 %cmp8.i313413, label %ggc_mark_rtx_children.exit318, label %for.body.i317

for.inc.i310:                                     ; preds = %land.lhs.true.i307
  %arrayidx2.i308 = getelementptr inbounds %struct.rtx_def* %i.0.i302409, i64 0, i32 1, i64 2
  %rtx3.i309 = bitcast %union.rtunion_def* %arrayidx2.i308 to %struct.rtx_def**
  %i.0.i302 = load %struct.rtx_def** %rtx3.i309, align 8
  %cmp.i303 = icmp eq %struct.rtx_def* %i.0.i302, null
  br i1 %cmp.i303, label %for.cond7.i314.preheader, label %land.lhs.true.i307

for.body.i317:                                    ; preds = %for.cond7.i314.preheader, %for.body.i317
  %i.1.i312414 = phi %struct.rtx_def* [ %i.1.i312, %for.body.i317 ], [ %i.1.i312412, %for.cond7.i314.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.1.i312414) #4
  %arrayidx11.i315 = getelementptr inbounds %struct.rtx_def* %i.1.i312414, i64 0, i32 1, i64 2
  %rtx12.i316 = bitcast %union.rtunion_def* %arrayidx11.i315 to %struct.rtx_def**
  %i.1.i312 = load %struct.rtx_def** %rtx12.i316, align 8
  %cmp8.i313 = icmp eq %struct.rtx_def* %i.1.i312, %i.0.i302.lcssa
  br i1 %cmp8.i313, label %ggc_mark_rtx_children.exit318, label %for.body.i317

ggc_mark_rtx_children.exit318:                    ; preds = %for.body.i317, %for.cond7.i314.preheader, %if.then87
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %31) #4
  br label %sw.epilog135

sw.bb90:                                          ; preds = %if.end
  %arrayidx92 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx92 to i32*
  %35 = load i32* %rtint, align 4, !tbaa !21
  switch i32 %35, label %sw.epilog135 [
    i32 -83, label %do.body94
    i32 -82, label %do.body94
    i32 -81, label %do.body94
    i32 -79, label %do.body94
    i32 -98, label %do.body107
    i32 -97, label %do.body107
  ]

do.body94:                                        ; preds = %sw.bb90, %sw.bb90, %sw.bb90, %sw.bb90
  %arrayidx97 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 3
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx98, align 8, !tbaa !1
  %cmp99 = icmp eq %struct.rtx_def* %36, null
  br i1 %cmp99, label %sw.epilog135, label %land.lhs.true100

land.lhs.true100:                                 ; preds = %do.body94
  %37 = bitcast %struct.rtx_def* %36 to i8*
  %call101 = tail call i32 @ggc_set_mark(i8* %37) #4
  %tobool102 = icmp eq i32 %call101, 0
  br i1 %tobool102, label %if.then103, label %sw.epilog135

if.then103:                                       ; preds = %land.lhs.true100
  %38 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 0
  %bf.load.i319 = load i32* %38, align 8
  %bf.clear.i320 = and i32 %bf.load.i319, 65535
  %bf.clear.off.i321 = add i32 %bf.clear.i320, -32
  %switch.i322 = icmp ult i32 %bf.clear.off.i321, 6
  br i1 %switch.i322, label %sw.bb.i325, label %ggc_mark_rtx_children.exit343

sw.bb.i325:                                       ; preds = %if.then103
  %arrayidx.i323 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 2
  %rtx.i324 = bitcast %union.rtunion_def* %arrayidx.i323 to %struct.rtx_def**
  %i.0.i327400 = load %struct.rtx_def** %rtx.i324, align 8
  %cmp.i328401 = icmp eq %struct.rtx_def* %i.0.i327400, null
  br i1 %cmp.i328401, label %for.cond7.i339.preheader, label %land.lhs.true.i332

land.lhs.true.i332:                               ; preds = %sw.bb.i325, %for.inc.i335
  %i.0.i327402 = phi %struct.rtx_def* [ %i.0.i327, %for.inc.i335 ], [ %i.0.i327400, %sw.bb.i325 ]
  %39 = bitcast %struct.rtx_def* %i.0.i327402 to i8*
  %call.i330 = tail call i32 @ggc_set_mark(i8* %39) #4
  %tobool.i331 = icmp eq i32 %call.i330, 0
  br i1 %tobool.i331, label %for.inc.i335, label %for.cond7.i339.preheader

for.cond7.i339.preheader:                         ; preds = %land.lhs.true.i332, %for.inc.i335, %sw.bb.i325
  %i.0.i327.lcssa = phi %struct.rtx_def* [ null, %sw.bb.i325 ], [ %i.0.i327402, %land.lhs.true.i332 ], [ null, %for.inc.i335 ]
  %i.1.i337404 = load %struct.rtx_def** %rtx.i324, align 8
  %cmp8.i338405 = icmp eq %struct.rtx_def* %i.1.i337404, %i.0.i327.lcssa
  br i1 %cmp8.i338405, label %ggc_mark_rtx_children.exit343, label %for.body.i342

for.inc.i335:                                     ; preds = %land.lhs.true.i332
  %arrayidx2.i333 = getelementptr inbounds %struct.rtx_def* %i.0.i327402, i64 0, i32 1, i64 2
  %rtx3.i334 = bitcast %union.rtunion_def* %arrayidx2.i333 to %struct.rtx_def**
  %i.0.i327 = load %struct.rtx_def** %rtx3.i334, align 8
  %cmp.i328 = icmp eq %struct.rtx_def* %i.0.i327, null
  br i1 %cmp.i328, label %for.cond7.i339.preheader, label %land.lhs.true.i332

for.body.i342:                                    ; preds = %for.cond7.i339.preheader, %for.body.i342
  %i.1.i337406 = phi %struct.rtx_def* [ %i.1.i337, %for.body.i342 ], [ %i.1.i337404, %for.cond7.i339.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.1.i337406) #4
  %arrayidx11.i340 = getelementptr inbounds %struct.rtx_def* %i.1.i337406, i64 0, i32 1, i64 2
  %rtx12.i341 = bitcast %union.rtunion_def* %arrayidx11.i340 to %struct.rtx_def**
  %i.1.i337 = load %struct.rtx_def** %rtx12.i341, align 8
  %cmp8.i338 = icmp eq %struct.rtx_def* %i.1.i337, %i.0.i327.lcssa
  br i1 %cmp8.i338, label %ggc_mark_rtx_children.exit343, label %for.body.i342

ggc_mark_rtx_children.exit343:                    ; preds = %for.body.i342, %for.cond7.i339.preheader, %if.then103
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %36) #4
  br label %sw.epilog135

do.body107:                                       ; preds = %sw.bb90, %sw.bb90
  %arrayidx110 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 3
  %rttree111 = bitcast %union.rtunion_def* %arrayidx110 to %union.tree_node**
  %40 = load %union.tree_node** %rttree111, align 8, !tbaa !1
  %cmp112 = icmp eq %union.tree_node* %40, null
  br i1 %cmp112, label %sw.epilog135, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %do.body107
  %41 = bitcast %union.tree_node* %40 to i8*
  %call114 = tail call i32 @ggc_set_mark(i8* %41) #4
  %tobool115 = icmp eq i32 %call114, 0
  br i1 %tobool115, label %do.body117, label %sw.epilog135

do.body117:                                       ; preds = %land.lhs.true113
  %42 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used118 = getelementptr inbounds %struct.varray_head_tag* %42, i64 0, i32 1
  %43 = load i64* %elements_used118, align 8, !tbaa !12
  %num_elements119 = getelementptr inbounds %struct.varray_head_tag* %42, i64 0, i32 0
  %44 = load i64* %num_elements119, align 8, !tbaa !15
  %cmp120 = icmp ult i64 %43, %44
  br i1 %cmp120, label %if.end125, label %if.then121

if.then121:                                       ; preds = %do.body117
  %mul123 = shl i64 %44, 1
  %call124 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %42, i64 %mul123) #4
  store %struct.varray_head_tag* %call124, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used126.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call124, i64 0, i32 1
  %.pre495 = load i64* %elements_used126.phi.trans.insert, align 8, !tbaa !12
  br label %if.end125

if.end125:                                        ; preds = %do.body117, %if.then121
  %45 = phi i64 [ %43, %do.body117 ], [ %.pre495, %if.then121 ]
  %46 = phi %struct.varray_head_tag* [ %42, %do.body117 ], [ %call124, %if.then121 ]
  %elements_used126 = getelementptr inbounds %struct.varray_head_tag* %46, i64 0, i32 1
  %inc127 = add i64 %45, 1
  store i64 %inc127, i64* %elements_used126, align 8, !tbaa !12
  %data128 = getelementptr inbounds %struct.varray_head_tag* %46, i64 0, i32 4
  %tree129 = bitcast %union.varray_data_tag* %data128 to [1 x %union.tree_node*]*
  %arrayidx130 = getelementptr inbounds [1 x %union.tree_node*]* %tree129, i64 0, i64 %45
  store %union.tree_node* %40, %union.tree_node** %arrayidx130, align 8, !tbaa !1
  br label %sw.epilog135

sw.epilog135:                                     ; preds = %do.body3, %land.lhs.true, %do.body9, %land.lhs.true25, %do.body19, %land.lhs.true50, %do.body44, %land.lhs.true61, %do.body57, %land.lhs.true84, %do.body78, %land.lhs.true100, %do.body94, %land.lhs.true113, %do.body107, %if.end, %ggc_mark_rtx_children.exit343, %if.end125, %sw.bb90, %ggc_mark_rtx_children.exit318, %if.end70, %ggc_mark_rtx_children.exit293, %ggc_mark_rtx_children.exit243, %ggc_mark_rtx_children.exit, %if.then5
  %bf.load136 = load i32* %0, align 8
  %bf.clear137 = and i32 %bf.load136, 65535
  %idxprom138217 = zext i32 %bf.clear137 to i64
  %arrayidx139 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom138217
  %47 = load i8** %arrayidx139, align 8, !tbaa !1
  %48 = load i8* %47, align 1, !tbaa !33
  %tobool140466 = icmp eq i8 %48, 0
  br i1 %tobool140466, label %do.end174, label %for.body

for.body:                                         ; preds = %sw.epilog135, %for.inc
  %indvars.iv488 = phi i64 [ %indvars.iv.next489, %for.inc ], [ 0, %sw.epilog135 ]
  %49 = phi i8 [ %63, %for.inc ], [ %48, %sw.epilog135 ]
  %fmt.0470 = phi i8* [ %incdec.ptr, %for.inc ], [ %47, %sw.epilog135 ]
  %next_rtx.0467 = phi %struct.rtx_def* [ %next_rtx.1, %for.inc ], [ null, %sw.epilog135 ]
  %conv = sext i8 %49 to i32
  switch i32 %conv, label %for.inc [
    i32 101, label %sw.bb141
    i32 117, label %sw.bb141
    i32 86, label %do.body158
    i32 69, label %do.body158
  ]

sw.bb141:                                         ; preds = %for.body, %for.body
  %.in.in = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 %indvars.iv488
  %.in = bitcast %union.rtunion_def* %.in.in to %struct.rtx_def**
  %50 = load %struct.rtx_def** %.in, align 8
  %cmp146 = icmp eq %struct.rtx_def* %50, null
  br i1 %cmp146, label %for.inc, label %land.lhs.true148

land.lhs.true148:                                 ; preds = %sw.bb141
  %51 = bitcast %struct.rtx_def* %50 to i8*
  %call149 = tail call i32 @ggc_set_mark(i8* %51) #4
  %tobool150 = icmp eq i32 %call149, 0
  br i1 %tobool150, label %if.then151, label %for.inc

if.then151:                                       ; preds = %land.lhs.true148
  %cmp152 = icmp eq %struct.rtx_def* %next_rtx.0467, null
  br i1 %cmp152, label %for.inc, label %if.else

if.else:                                          ; preds = %if.then151
  %52 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load.i344 = load i32* %52, align 8
  %bf.clear.i345 = and i32 %bf.load.i344, 65535
  %bf.clear.off.i346 = add i32 %bf.clear.i345, -32
  %switch.i347 = icmp ult i32 %bf.clear.off.i346, 6
  br i1 %switch.i347, label %sw.bb.i350, label %ggc_mark_rtx_children.exit368

sw.bb.i350:                                       ; preds = %if.else
  %arrayidx.i348 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1, i64 2
  %rtx.i349 = bitcast %union.rtunion_def* %arrayidx.i348 to %struct.rtx_def**
  %i.0.i352458 = load %struct.rtx_def** %rtx.i349, align 8
  %cmp.i353459 = icmp eq %struct.rtx_def* %i.0.i352458, null
  br i1 %cmp.i353459, label %for.cond7.i364.preheader, label %land.lhs.true.i357

land.lhs.true.i357:                               ; preds = %sw.bb.i350, %for.inc.i360
  %i.0.i352460 = phi %struct.rtx_def* [ %i.0.i352, %for.inc.i360 ], [ %i.0.i352458, %sw.bb.i350 ]
  %53 = bitcast %struct.rtx_def* %i.0.i352460 to i8*
  %call.i355 = tail call i32 @ggc_set_mark(i8* %53) #4
  %tobool.i356 = icmp eq i32 %call.i355, 0
  br i1 %tobool.i356, label %for.inc.i360, label %for.cond7.i364.preheader

for.cond7.i364.preheader:                         ; preds = %land.lhs.true.i357, %for.inc.i360, %sw.bb.i350
  %i.0.i352.lcssa = phi %struct.rtx_def* [ null, %sw.bb.i350 ], [ %i.0.i352460, %land.lhs.true.i357 ], [ null, %for.inc.i360 ]
  %i.1.i362463 = load %struct.rtx_def** %rtx.i349, align 8
  %cmp8.i363464 = icmp eq %struct.rtx_def* %i.1.i362463, %i.0.i352.lcssa
  br i1 %cmp8.i363464, label %ggc_mark_rtx_children.exit368, label %for.body.i367

for.inc.i360:                                     ; preds = %land.lhs.true.i357
  %arrayidx2.i358 = getelementptr inbounds %struct.rtx_def* %i.0.i352460, i64 0, i32 1, i64 2
  %rtx3.i359 = bitcast %union.rtunion_def* %arrayidx2.i358 to %struct.rtx_def**
  %i.0.i352 = load %struct.rtx_def** %rtx3.i359, align 8
  %cmp.i353 = icmp eq %struct.rtx_def* %i.0.i352, null
  br i1 %cmp.i353, label %for.cond7.i364.preheader, label %land.lhs.true.i357

for.body.i367:                                    ; preds = %for.cond7.i364.preheader, %for.body.i367
  %i.1.i362465 = phi %struct.rtx_def* [ %i.1.i362, %for.body.i367 ], [ %i.1.i362463, %for.cond7.i364.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.1.i362465) #4
  %arrayidx11.i365 = getelementptr inbounds %struct.rtx_def* %i.1.i362465, i64 0, i32 1, i64 2
  %rtx12.i366 = bitcast %union.rtunion_def* %arrayidx11.i365 to %struct.rtx_def**
  %i.1.i362 = load %struct.rtx_def** %rtx12.i366, align 8
  %cmp8.i363 = icmp eq %struct.rtx_def* %i.1.i362, %i.0.i352.lcssa
  br i1 %cmp8.i363, label %ggc_mark_rtx_children.exit368, label %for.body.i367

ggc_mark_rtx_children.exit368:                    ; preds = %for.body.i367, %for.cond7.i364.preheader, %if.else
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %50) #4
  br label %for.inc

do.body158:                                       ; preds = %for.body, %for.body
  %arrayidx161 = getelementptr inbounds %struct.rtx_def* %r.addr.0, i64 0, i32 1, i64 %indvars.iv488
  %rtvec = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtvec_def**
  %54 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %cmp162 = icmp eq %struct.rtvec_def* %54, null
  br i1 %cmp162, label %for.inc, label %land.lhs.true164

land.lhs.true164:                                 ; preds = %do.body158
  %55 = bitcast %struct.rtvec_def* %54 to i8*
  %call165 = tail call i32 @ggc_set_mark(i8* %55) #4
  %tobool166 = icmp eq i32 %call165, 0
  br i1 %tobool166, label %if.then167, label %for.inc

if.then167:                                       ; preds = %land.lhs.true164
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %54, i64 0, i32 0
  %56 = load i32* %num_elem.i, align 4, !tbaa !69
  %cmp.i370456 = icmp sgt i32 %56, 0
  br i1 %cmp.i370456, label %do.body.i.lr.ph, label %for.inc

do.body.i.lr.ph:                                  ; preds = %if.then167
  %57 = sext i32 %56 to i64
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.lr.ph, %while.cond.i.backedge
  %indvars.iv = phi i64 [ %57, %do.body.i.lr.ph ], [ %indvars.iv.next, %while.cond.i.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx.i371 = getelementptr inbounds %struct.rtvec_def* %54, i64 0, i32 1, i64 %indvars.iv.next
  %58 = load %struct.rtx_def** %arrayidx.i371, align 8, !tbaa !1
  %cmp1.i = icmp eq %struct.rtx_def* %58, null
  br i1 %cmp1.i, label %while.cond.i.backedge, label %land.lhs.true.i374

while.cond.i.backedge:                            ; preds = %do.body.i, %land.lhs.true.i374, %ggc_mark_rtx_children.exit399
  %59 = trunc i64 %indvars.iv.next to i32
  %cmp.i370 = icmp sgt i32 %59, 0
  br i1 %cmp.i370, label %do.body.i, label %for.inc

land.lhs.true.i374:                               ; preds = %do.body.i
  %60 = bitcast %struct.rtx_def* %58 to i8*
  %call.i372 = tail call i32 @ggc_set_mark(i8* %60) #4
  %tobool.i373 = icmp eq i32 %call.i372, 0
  br i1 %tobool.i373, label %if.then.i, label %while.cond.i.backedge

if.then.i:                                        ; preds = %land.lhs.true.i374
  %61 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 0
  %bf.load.i375 = load i32* %61, align 8
  %bf.clear.i376 = and i32 %bf.load.i375, 65535
  %bf.clear.off.i377 = add i32 %bf.clear.i376, -32
  %switch.i378 = icmp ult i32 %bf.clear.off.i377, 6
  br i1 %switch.i378, label %sw.bb.i381, label %ggc_mark_rtx_children.exit399

sw.bb.i381:                                       ; preds = %if.then.i
  %arrayidx.i379 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 1, i64 2
  %rtx.i380 = bitcast %union.rtunion_def* %arrayidx.i379 to %struct.rtx_def**
  %i.0.i383447 = load %struct.rtx_def** %rtx.i380, align 8
  %cmp.i384448 = icmp eq %struct.rtx_def* %i.0.i383447, null
  br i1 %cmp.i384448, label %for.cond7.i395.preheader, label %land.lhs.true.i388

land.lhs.true.i388:                               ; preds = %sw.bb.i381, %for.inc.i391
  %i.0.i383449 = phi %struct.rtx_def* [ %i.0.i383, %for.inc.i391 ], [ %i.0.i383447, %sw.bb.i381 ]
  %62 = bitcast %struct.rtx_def* %i.0.i383449 to i8*
  %call.i386 = tail call i32 @ggc_set_mark(i8* %62) #4
  %tobool.i387 = icmp eq i32 %call.i386, 0
  br i1 %tobool.i387, label %for.inc.i391, label %for.cond7.i395.preheader

for.cond7.i395.preheader:                         ; preds = %land.lhs.true.i388, %for.inc.i391, %sw.bb.i381
  %i.0.i383.lcssa = phi %struct.rtx_def* [ null, %sw.bb.i381 ], [ %i.0.i383449, %land.lhs.true.i388 ], [ null, %for.inc.i391 ]
  %i.1.i393452 = load %struct.rtx_def** %rtx.i380, align 8
  %cmp8.i394453 = icmp eq %struct.rtx_def* %i.1.i393452, %i.0.i383.lcssa
  br i1 %cmp8.i394453, label %ggc_mark_rtx_children.exit399, label %for.body.i398

for.inc.i391:                                     ; preds = %land.lhs.true.i388
  %arrayidx2.i389 = getelementptr inbounds %struct.rtx_def* %i.0.i383449, i64 0, i32 1, i64 2
  %rtx3.i390 = bitcast %union.rtunion_def* %arrayidx2.i389 to %struct.rtx_def**
  %i.0.i383 = load %struct.rtx_def** %rtx3.i390, align 8
  %cmp.i384 = icmp eq %struct.rtx_def* %i.0.i383, null
  br i1 %cmp.i384, label %for.cond7.i395.preheader, label %land.lhs.true.i388

for.body.i398:                                    ; preds = %for.cond7.i395.preheader, %for.body.i398
  %i.1.i393454 = phi %struct.rtx_def* [ %i.1.i393, %for.body.i398 ], [ %i.1.i393452, %for.cond7.i395.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.1.i393454) #4
  %arrayidx11.i396 = getelementptr inbounds %struct.rtx_def* %i.1.i393454, i64 0, i32 1, i64 2
  %rtx12.i397 = bitcast %union.rtunion_def* %arrayidx11.i396 to %struct.rtx_def**
  %i.1.i393 = load %struct.rtx_def** %rtx12.i397, align 8
  %cmp8.i394 = icmp eq %struct.rtx_def* %i.1.i393, %i.0.i383.lcssa
  br i1 %cmp8.i394, label %ggc_mark_rtx_children.exit399, label %for.body.i398

ggc_mark_rtx_children.exit399:                    ; preds = %for.body.i398, %for.cond7.i395.preheader, %if.then.i
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %58) #4
  br label %while.cond.i.backedge

for.inc:                                          ; preds = %while.cond.i.backedge, %if.then167, %if.then151, %land.lhs.true148, %sw.bb141, %land.lhs.true164, %do.body158, %for.body, %ggc_mark_rtx_children.exit368
  %next_rtx.1 = phi %struct.rtx_def* [ %next_rtx.0467, %for.body ], [ %next_rtx.0467, %land.lhs.true164 ], [ %next_rtx.0467, %do.body158 ], [ %next_rtx.0467, %land.lhs.true148 ], [ %next_rtx.0467, %ggc_mark_rtx_children.exit368 ], [ %next_rtx.0467, %sw.bb141 ], [ %50, %if.then151 ], [ %next_rtx.0467, %if.then167 ], [ %next_rtx.0467, %while.cond.i.backedge ]
  %incdec.ptr = getelementptr inbounds i8* %fmt.0470, i64 1
  %indvars.iv.next489 = add nuw nsw i64 %indvars.iv488, 1
  %63 = load i8* %incdec.ptr, align 1, !tbaa !33
  %tobool140 = icmp eq i8 %63, 0
  br i1 %tobool140, label %do.cond, label %for.body

do.cond:                                          ; preds = %for.inc
  %cmp172 = icmp eq %struct.rtx_def* %next_rtx.1, null
  br i1 %cmp172, label %do.end174, label %do.body

do.end174:                                        ; preds = %sw.epilog135, %do.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @ggc_mark_rtvec_children(%struct.rtvec_def* nocapture readonly %v) #0 {
entry:
  %num_elem = getelementptr inbounds %struct.rtvec_def* %v, i64 0, i32 0
  %0 = load i32* %num_elem, align 4, !tbaa !69
  %cmp14 = icmp sgt i32 %0, 0
  br i1 %cmp14, label %do.body.lr.ph, label %while.end

do.body.lr.ph:                                    ; preds = %entry
  %1 = sext i32 %0 to i64
  br label %do.body

do.body:                                          ; preds = %do.body.lr.ph, %while.cond.backedge
  %indvars.iv = phi i64 [ %1, %do.body.lr.ph ], [ %indvars.iv.next, %while.cond.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx = getelementptr inbounds %struct.rtvec_def* %v, i64 0, i32 1, i64 %indvars.iv.next
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp1 = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp1, label %while.cond.backedge, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %3 = bitcast %struct.rtx_def* %2 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %3) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %while.cond.backedge

if.then:                                          ; preds = %land.lhs.true
  %4 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load.i = load i32* %4, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %bf.clear.off.i = add i32 %bf.clear.i, -32
  %switch.i = icmp ult i32 %bf.clear.off.i, 6
  br i1 %switch.i, label %sw.bb.i, label %ggc_mark_rtx_children.exit

sw.bb.i:                                          ; preds = %if.then
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %i.0.i6 = load %struct.rtx_def** %rtx.i, align 8
  %cmp.i7 = icmp eq %struct.rtx_def* %i.0.i6, null
  br i1 %cmp.i7, label %for.cond7.i.preheader, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %sw.bb.i, %for.inc.i
  %i.0.i8 = phi %struct.rtx_def* [ %i.0.i, %for.inc.i ], [ %i.0.i6, %sw.bb.i ]
  %5 = bitcast %struct.rtx_def* %i.0.i8 to i8*
  %call.i = tail call i32 @ggc_set_mark(i8* %5) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %for.inc.i, label %for.cond7.i.preheader

for.cond7.i.preheader:                            ; preds = %land.lhs.true.i, %for.inc.i, %sw.bb.i
  %i.0.i.lcssa = phi %struct.rtx_def* [ null, %sw.bb.i ], [ %i.0.i8, %land.lhs.true.i ], [ null, %for.inc.i ]
  %i.1.i10 = load %struct.rtx_def** %rtx.i, align 8
  %cmp8.i11 = icmp eq %struct.rtx_def* %i.1.i10, %i.0.i.lcssa
  br i1 %cmp8.i11, label %ggc_mark_rtx_children.exit, label %for.body.i

for.inc.i:                                        ; preds = %land.lhs.true.i
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %i.0.i8, i64 0, i32 1, i64 2
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i to %struct.rtx_def**
  %i.0.i = load %struct.rtx_def** %rtx3.i, align 8
  %cmp.i = icmp eq %struct.rtx_def* %i.0.i, null
  br i1 %cmp.i, label %for.cond7.i.preheader, label %land.lhs.true.i

for.body.i:                                       ; preds = %for.cond7.i.preheader, %for.body.i
  %i.1.i12 = phi %struct.rtx_def* [ %i.1.i, %for.body.i ], [ %i.1.i10, %for.cond7.i.preheader ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.1.i12) #4
  %arrayidx11.i = getelementptr inbounds %struct.rtx_def* %i.1.i12, i64 0, i32 1, i64 2
  %rtx12.i = bitcast %union.rtunion_def* %arrayidx11.i to %struct.rtx_def**
  %i.1.i = load %struct.rtx_def** %rtx12.i, align 8
  %cmp8.i = icmp eq %struct.rtx_def* %i.1.i, %i.0.i.lcssa
  br i1 %cmp8.i, label %ggc_mark_rtx_children.exit, label %for.body.i

ggc_mark_rtx_children.exit:                       ; preds = %for.body.i, %for.cond7.i.preheader, %if.then
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %2) #4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %ggc_mark_rtx_children.exit, %do.body, %land.lhs.true
  %6 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp sgt i32 %6, 0
  br i1 %cmp, label %do.body, label %while.end

while.end:                                        ; preds = %while.cond.backedge, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @ggc_mark_rtx_varray(%struct.varray_head_tag* readonly %v) #0 {
entry:
  %tobool = icmp eq %struct.varray_head_tag* %v, null
  br i1 %tobool, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %v, i64 0, i32 0
  %0 = load i64* %num_elements, align 8, !tbaa !15
  %sub = add i64 %0, 4294967295
  %conv = trunc i64 %sub to i32
  %cmp13 = icmp sgt i32 %conv, -1
  br i1 %cmp13, label %do.body.lr.ph, label %if.end6

do.body.lr.ph:                                    ; preds = %if.then
  %data = getelementptr inbounds %struct.varray_head_tag* %v, i64 0, i32 4
  %rtx = bitcast %union.varray_data_tag* %data to [1 x %struct.rtx_def*]*
  %sext = shl i64 %sub, 32
  %1 = ashr exact i64 %sext, 32
  br label %do.body

do.body:                                          ; preds = %do.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ %1, %do.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*]* %rtx, i64 0, i64 %indvars.iv
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !1
  %cmp2 = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp2, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %3 = bitcast %struct.rtx_def* %2 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %3) #4
  %tobool4 = icmp eq i32 %call, 0
  br i1 %tobool4, label %if.then5, label %for.inc

if.then5:                                         ; preds = %land.lhs.true
  %4 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load.i = load i32* %4, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %bf.clear.off.i = add i32 %bf.clear.i, -32
  %switch.i = icmp ult i32 %bf.clear.off.i, 6
  br i1 %switch.i, label %sw.bb.i, label %ggc_mark_rtx_children.exit

sw.bb.i:                                          ; preds = %if.then5
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %i.026.i = load %struct.rtx_def** %rtx.i, align 8
  %cmp27.i = icmp eq %struct.rtx_def* %i.026.i, null
  br i1 %cmp27.i, label %ggc_mark_rtx_children.exit, label %land.lhs.true.i

for.cond7.preheader.i:                            ; preds = %for.inc.i, %land.lhs.true.i
  %i.0.lcssa.i.ph = phi %struct.rtx_def* [ null, %for.inc.i ], [ %i.028.i, %land.lhs.true.i ]
  %i.123.i.pre = load %struct.rtx_def** %rtx.i, align 8
  %cmp824.i = icmp eq %struct.rtx_def* %i.123.i.pre, %i.0.lcssa.i.ph
  br i1 %cmp824.i, label %ggc_mark_rtx_children.exit, label %for.body.i

land.lhs.true.i:                                  ; preds = %sw.bb.i, %for.inc.i
  %i.028.i = phi %struct.rtx_def* [ %i.0.i, %for.inc.i ], [ %i.026.i, %sw.bb.i ]
  %5 = bitcast %struct.rtx_def* %i.028.i to i8*
  %call.i = tail call i32 @ggc_set_mark(i8* %5) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %for.inc.i, label %for.cond7.preheader.i

for.inc.i:                                        ; preds = %land.lhs.true.i
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %i.028.i, i64 0, i32 1, i64 2
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i to %struct.rtx_def**
  %i.0.i = load %struct.rtx_def** %rtx3.i, align 8
  %cmp.i = icmp eq %struct.rtx_def* %i.0.i, null
  br i1 %cmp.i, label %for.cond7.preheader.i, label %land.lhs.true.i

for.body.i:                                       ; preds = %for.cond7.preheader.i, %for.body.i
  %i.125.i = phi %struct.rtx_def* [ %i.1.i, %for.body.i ], [ %i.123.i.pre, %for.cond7.preheader.i ]
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %i.125.i) #4
  %arrayidx11.i = getelementptr inbounds %struct.rtx_def* %i.125.i, i64 0, i32 1, i64 2
  %rtx12.i = bitcast %union.rtunion_def* %arrayidx11.i to %struct.rtx_def**
  %i.1.i = load %struct.rtx_def** %rtx12.i, align 8
  %cmp8.i = icmp eq %struct.rtx_def* %i.1.i, %i.0.lcssa.i.ph
  br i1 %cmp8.i, label %ggc_mark_rtx_children.exit, label %for.body.i

ggc_mark_rtx_children.exit:                       ; preds = %for.body.i, %sw.bb.i, %if.then5, %for.cond7.preheader.i
  tail call fastcc void @ggc_mark_rtx_children_1(%struct.rtx_def* %2) #4
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %do.body, %ggc_mark_rtx_children.exit
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %6 = trunc i64 %indvars.iv to i32
  %cmp = icmp sgt i32 %6, 0
  br i1 %cmp, label %do.body, label %if.end6

if.end6:                                          ; preds = %for.inc, %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @ggc_mark_tree_varray(%struct.varray_head_tag* readonly %v) #0 {
entry:
  %tobool = icmp eq %struct.varray_head_tag* %v, null
  br i1 %tobool, label %if.end19, label %if.then

if.then:                                          ; preds = %entry
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %v, i64 0, i32 0
  %0 = load i64* %num_elements, align 8, !tbaa !15
  %sub = add i64 %0, 4294967295
  %conv = trunc i64 %sub to i32
  %cmp26 = icmp sgt i32 %conv, -1
  br i1 %cmp26, label %do.body.lr.ph, label %if.end19

do.body.lr.ph:                                    ; preds = %if.then
  %data = getelementptr inbounds %struct.varray_head_tag* %v, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %sext = shl i64 %sub, 32
  %1 = ashr exact i64 %sext, 32
  br label %do.body

do.body:                                          ; preds = %do.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ %1, %do.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %indvars.iv
  %2 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %cmp2 = icmp eq %union.tree_node* %2, null
  br i1 %cmp2, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %3 = bitcast %union.tree_node* %2 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %3) #4
  %tobool4 = icmp eq i32 %call, 0
  br i1 %tobool4, label %do.body6, label %for.inc

do.body6:                                         ; preds = %land.lhs.true
  %4 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 1
  %5 = load i64* %elements_used, align 8, !tbaa !12
  %num_elements7 = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 0
  %6 = load i64* %num_elements7, align 8, !tbaa !15
  %cmp8 = icmp ult i64 %5, %6
  br i1 %cmp8, label %if.end, label %if.then10

if.then10:                                        ; preds = %do.body6
  %mul = shl i64 %6, 1
  %call12 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %4, i64 %mul) #4
  store %struct.varray_head_tag* %call12, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used13.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call12, i64 0, i32 1
  %.pre = load i64* %elements_used13.phi.trans.insert, align 8, !tbaa !12
  br label %if.end

if.end:                                           ; preds = %do.body6, %if.then10
  %7 = phi i64 [ %5, %do.body6 ], [ %.pre, %if.then10 ]
  %8 = phi %struct.varray_head_tag* [ %4, %do.body6 ], [ %call12, %if.then10 ]
  %elements_used13 = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 1
  %inc = add i64 %7, 1
  store i64 %inc, i64* %elements_used13, align 8, !tbaa !12
  %data14 = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 4
  %tree15 = bitcast %union.varray_data_tag* %data14 to [1 x %union.tree_node*]*
  %arrayidx16 = getelementptr inbounds [1 x %union.tree_node*]* %tree15, i64 0, i64 %7
  store %union.tree_node* %2, %union.tree_node** %arrayidx16, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %do.body, %if.end
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %9 = trunc i64 %indvars.iv to i32
  %cmp = icmp sgt i32 %9, 0
  br i1 %cmp, label %do.body, label %if.end19

if.end19:                                         ; preds = %for.inc, %if.then, %entry
  ret void
}

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #1

; Function Attrs: nounwind uwtable
define void @ggc_mark_tree_hash_table(%struct.hash_table* %ht) #0 {
entry:
  tail call void @hash_traverse(%struct.hash_table* %ht, i1 (%struct.hash_entry*, i8*)* @ggc_mark_tree_hash_table_entry, i8* null) #4
  ret void
}

declare void @hash_traverse(%struct.hash_table*, i1 (%struct.hash_entry*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal zeroext i1 @ggc_mark_tree_hash_table_entry(%struct.hash_entry* nocapture readonly %he, i8* nocapture readnone %k) #0 {
entry:
  %key = getelementptr inbounds %struct.hash_entry* %he, i64 0, i32 1
  %0 = load i8** %key, align 8, !tbaa !71
  %1 = bitcast i8* %0 to %union.tree_node*
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %do.end8, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* %0) #4
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %do.body1, label %do.end8

do.body1:                                         ; preds = %land.lhs.true
  %2 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 1
  %3 = load i64* %elements_used, align 8, !tbaa !12
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 0
  %4 = load i64* %num_elements, align 8, !tbaa !15
  %cmp2 = icmp ult i64 %3, %4
  br i1 %cmp2, label %if.end, label %if.then3

if.then3:                                         ; preds = %do.body1
  %mul = shl i64 %4, 1
  %call5 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %2, i64 %mul) #4
  store %struct.varray_head_tag* %call5, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used6.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call5, i64 0, i32 1
  %.pre = load i64* %elements_used6.phi.trans.insert, align 8, !tbaa !12
  br label %if.end

if.end:                                           ; preds = %do.body1, %if.then3
  %5 = phi i64 [ %3, %do.body1 ], [ %.pre, %if.then3 ]
  %6 = phi %struct.varray_head_tag* [ %2, %do.body1 ], [ %call5, %if.then3 ]
  %elements_used6 = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 1
  %inc = add i64 %5, 1
  store i64 %inc, i64* %elements_used6, align 8, !tbaa !12
  %data = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %5
  store %union.tree_node* %1, %union.tree_node** %arrayidx, align 8, !tbaa !1
  br label %do.end8

do.end8:                                          ; preds = %land.lhs.true, %entry, %if.end
  ret i1 true
}

; Function Attrs: nounwind uwtable
define i8* @ggc_alloc_cleared(i64 %size) #0 {
entry:
  %call = tail call i8* @ggc_alloc(i64 %size) #4
  tail call void @llvm.memset.p0i8.i64(i8* %call, i8 0, i64 %size, i32 1, i1 false)
  ret i8* %call
}

declare i8* @ggc_alloc(i64) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define void @ggc_print_common_statistics(%struct._IO_FILE* nocapture %stream, %struct.ggc_statistics* %stats) #0 {
entry:
  store %struct.ggc_statistics* %stats, %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  tail call void @ggc_collect() #4
  %total_num_trees = getelementptr inbounds %struct.ggc_statistics* %stats, i64 0, i32 6
  %total_size_trees = getelementptr inbounds %struct.ggc_statistics* %stats, i64 0, i32 4
  %.pre = load i32* %total_num_trees, align 4, !tbaa !73
  %.pre263 = load i64* %total_size_trees, align 8, !tbaa !75
  br label %for.body

for.cond4.preheader:                              ; preds = %for.body
  %total_num_rtxs = getelementptr inbounds %struct.ggc_statistics* %stats, i64 0, i32 7
  %total_size_rtxs = getelementptr inbounds %struct.ggc_statistics* %stats, i64 0, i32 5
  %.pre264 = load i32* %total_num_rtxs, align 4, !tbaa !76
  %.pre265 = load i64* %total_size_rtxs, align 8, !tbaa !77
  br label %for.body6

for.body:                                         ; preds = %for.body, %entry
  %0 = phi i64 [ %.pre263, %entry ], [ %add3, %for.body ]
  %1 = phi i32 [ %.pre, %entry ], [ %add, %for.body ]
  %indvars.iv260 = phi i64 [ 0, %entry ], [ %indvars.iv.next261, %for.body ]
  %arrayidx = getelementptr inbounds %struct.ggc_statistics* %stats, i64 0, i32 0, i64 %indvars.iv260
  %2 = load i32* %arrayidx, align 4, !tbaa !21
  %add = add i32 %1, %2
  store i32 %add, i32* %total_num_trees, align 4, !tbaa !73
  %arrayidx2 = getelementptr inbounds %struct.ggc_statistics* %stats, i64 0, i32 1, i64 %indvars.iv260
  %3 = load i64* %arrayidx2, align 8, !tbaa !22
  %add3 = add i64 %0, %3
  store i64 %add3, i64* %total_size_trees, align 8, !tbaa !75
  %indvars.iv.next261 = add nuw nsw i64 %indvars.iv260, 1
  %exitcond262 = icmp eq i64 %indvars.iv.next261, 256
  br i1 %exitcond262, label %for.cond4.preheader, label %for.body

for.body6:                                        ; preds = %for.body6, %for.cond4.preheader
  %4 = phi i64 [ %.pre265, %for.cond4.preheader ], [ %add12, %for.body6 ]
  %5 = phi i32 [ %.pre264, %for.cond4.preheader ], [ %add9, %for.body6 ]
  %indvars.iv257 = phi i64 [ 0, %for.cond4.preheader ], [ %indvars.iv.next258, %for.body6 ]
  %arrayidx8 = getelementptr inbounds %struct.ggc_statistics* %stats, i64 0, i32 2, i64 %indvars.iv257
  %6 = load i32* %arrayidx8, align 4, !tbaa !21
  %add9 = add i32 %5, %6
  store i32 %add9, i32* %total_num_rtxs, align 4, !tbaa !76
  %arrayidx11 = getelementptr inbounds %struct.ggc_statistics* %stats, i64 0, i32 3, i64 %indvars.iv257
  %7 = load i64* %arrayidx11, align 8, !tbaa !22
  %add12 = add i64 %4, %7
  store i64 %add12, i64* %total_size_rtxs, align 8, !tbaa !77
  %indvars.iv.next258 = add nuw nsw i64 %indvars.iv257, 1
  %exitcond259 = icmp eq i64 %indvars.iv.next258, 153
  br i1 %exitcond259, label %for.end15, label %for.body6

for.end15:                                        ; preds = %for.body6
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([22 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str6, i64 0, i64 0)) #4
  br label %for.body18

for.body18:                                       ; preds = %for.inc69, %for.end15
  %indvars.iv254 = phi i64 [ 0, %for.end15 ], [ %indvars.iv.next255, %for.inc69 ]
  %8 = load %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds %struct.ggc_statistics* %8, i64 0, i32 0, i64 %indvars.iv254
  %9 = load i32* %arrayidx21, align 4, !tbaa !21
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %for.inc69, label %if.then

if.then:                                          ; preds = %for.body18
  %arrayidx23 = getelementptr inbounds [256 x i8*]* @tree_code_name, i64 0, i64 %indvars.iv254
  %10 = load i8** %arrayidx23, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds %struct.ggc_statistics* %8, i64 0, i32 1, i64 %indvars.iv254
  %11 = load i64* %arrayidx29, align 8, !tbaa !22
  %cmp30 = icmp ult i64 %11, 10240
  br i1 %cmp30, label %cond.end60, label %cond.false

cond.false:                                       ; preds = %if.then
  %cmp37 = icmp ult i64 %11, 10485760
  %cond48268.v = select i1 %cmp37, i64 10, i64 20
  %cond48268 = lshr i64 %11, %cond48268.v
  %cmp58 = icmp ult i64 %11, 10485760
  %cond59 = select i1 %cmp58, i32 107, i32 77
  br label %cond.end60

cond.end60:                                       ; preds = %if.then, %cond.false
  %cond48266 = phi i64 [ %cond48268, %cond.false ], [ %11, %if.then ]
  %cond61 = phi i32 [ %cond59, %cond.false ], [ 32, %if.then ]
  %conv = uitofp i64 %11 to double
  %mul = fmul double %conv, 1.000000e+02
  %total_size_trees65 = getelementptr inbounds %struct.ggc_statistics* %8, i64 0, i32 4
  %12 = load i64* %total_size_trees65, align 8, !tbaa !75
  %conv66 = uitofp i64 %12 to double
  %div67 = fdiv double %mul, %conv66
  %call68 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([25 x i8]* @.str7, i64 0, i64 0), i8* %10, i32 %9, i64 %cond48266, i32 %cond61, double %div67) #4
  br label %for.inc69

for.inc69:                                        ; preds = %for.body18, %cond.end60
  %indvars.iv.next255 = add nuw nsw i64 %indvars.iv254, 1
  %exitcond256 = icmp eq i64 %indvars.iv.next255, 256
  br i1 %exitcond256, label %for.end71, label %for.body18

for.end71:                                        ; preds = %for.inc69
  %13 = load %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  %total_num_trees72 = getelementptr inbounds %struct.ggc_statistics* %13, i64 0, i32 6
  %14 = load i32* %total_num_trees72, align 4, !tbaa !73
  %total_size_trees73 = getelementptr inbounds %struct.ggc_statistics* %13, i64 0, i32 4
  %15 = load i64* %total_size_trees73, align 8, !tbaa !75
  %cmp74 = icmp ult i64 %15, 10240
  br i1 %cmp74, label %cond.end101, label %cond.false78

cond.false78:                                     ; preds = %for.end71
  %cmp80 = icmp ult i64 %15, 10485760
  %cond91271.v = select i1 %cmp80, i64 10, i64 20
  %cond91271 = lshr i64 %15, %cond91271.v
  %cmp98 = icmp ult i64 %15, 10485760
  %cond100 = select i1 %cmp98, i32 107, i32 77
  br label %cond.end101

cond.end101:                                      ; preds = %for.end71, %cond.false78
  %cond91269 = phi i64 [ %cond91271, %cond.false78 ], [ %15, %for.end71 ]
  %cond102 = phi i32 [ %cond100, %cond.false78 ], [ 32, %for.end71 ]
  %call103 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([18 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str9, i64 0, i64 0), i32 %14, i64 %cond91269, i32 %cond102) #4
  %call104 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([22 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str6, i64 0, i64 0)) #4
  br label %for.body108

for.body108:                                      ; preds = %for.inc173, %cond.end101
  %indvars.iv = phi i64 [ 0, %cond.end101 ], [ %indvars.iv.next, %for.inc173 ]
  %16 = load %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  %arrayidx111 = getelementptr inbounds %struct.ggc_statistics* %16, i64 0, i32 2, i64 %indvars.iv
  %17 = load i32* %arrayidx111, align 4, !tbaa !21
  %tobool112 = icmp eq i32 %17, 0
  br i1 %tobool112, label %for.inc173, label %if.then113

if.then113:                                       ; preds = %for.body108
  %arrayidx115 = getelementptr inbounds [153 x i8*]* @rtx_name, i64 0, i64 %indvars.iv
  %18 = load i8** %arrayidx115, align 8, !tbaa !1
  %arrayidx121 = getelementptr inbounds %struct.ggc_statistics* %16, i64 0, i32 3, i64 %indvars.iv
  %19 = load i64* %arrayidx121, align 8, !tbaa !22
  %cmp122 = icmp ult i64 %19, 10240
  br i1 %cmp122, label %cond.end161, label %cond.false128

cond.false128:                                    ; preds = %if.then113
  %cmp132 = icmp ult i64 %19, 10485760
  %cond147274.v = select i1 %cmp132, i64 10, i64 20
  %cond147274 = lshr i64 %19, %cond147274.v
  %cmp158 = icmp ult i64 %19, 10485760
  %cond160 = select i1 %cmp158, i32 107, i32 77
  br label %cond.end161

cond.end161:                                      ; preds = %if.then113, %cond.false128
  %cond147272 = phi i64 [ %cond147274, %cond.false128 ], [ %19, %if.then113 ]
  %cond162 = phi i32 [ %cond160, %cond.false128 ], [ 32, %if.then113 ]
  %conv166 = uitofp i64 %19 to double
  %mul167 = fmul double %conv166, 1.000000e+02
  %total_size_rtxs168 = getelementptr inbounds %struct.ggc_statistics* %16, i64 0, i32 5
  %20 = load i64* %total_size_rtxs168, align 8, !tbaa !77
  %conv169 = uitofp i64 %20 to double
  %div170 = fdiv double %mul167, %conv169
  %call171 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([25 x i8]* @.str7, i64 0, i64 0), i8* %18, i32 %17, i64 %cond147272, i32 %cond162, double %div170) #4
  br label %for.inc173

for.inc173:                                       ; preds = %for.body108, %cond.end161
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 153
  br i1 %exitcond, label %for.end175, label %for.body108

for.end175:                                       ; preds = %for.inc173
  %21 = load %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  %total_num_rtxs176 = getelementptr inbounds %struct.ggc_statistics* %21, i64 0, i32 7
  %22 = load i32* %total_num_rtxs176, align 4, !tbaa !76
  %total_size_rtxs177 = getelementptr inbounds %struct.ggc_statistics* %21, i64 0, i32 5
  %23 = load i64* %total_size_rtxs177, align 8, !tbaa !77
  %cmp178 = icmp ult i64 %23, 10240
  br i1 %cmp178, label %cond.end205, label %cond.false182

cond.false182:                                    ; preds = %for.end175
  %cmp184 = icmp ult i64 %23, 10485760
  %cond195277.v = select i1 %cmp184, i64 10, i64 20
  %cond195277 = lshr i64 %23, %cond195277.v
  %cmp202 = icmp ult i64 %23, 10485760
  %cond204 = select i1 %cmp202, i32 107, i32 77
  br label %cond.end205

cond.end205:                                      ; preds = %for.end175, %cond.false182
  %cond195275 = phi i64 [ %cond195277, %cond.false182 ], [ %23, %for.end175 ]
  %cond206 = phi i32 [ %cond204, %cond.false182 ], [ 32, %for.end175 ]
  %call207 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %stream, i8* getelementptr inbounds ([18 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str9, i64 0, i64 0), i32 %22, i64 %cond195275, i32 %cond206) #4
  store %struct.ggc_statistics* null, %struct.ggc_statistics** @ggc_stats, align 8, !tbaa !1
  ret void
}

declare void @ggc_collect() #1

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #2

declare i64 @ggc_get_size(i8*) #1

declare void @lang_mark_tree(%union.tree_node*) #1

declare void @ggc_mark_struct_function(%struct.function*) #1

declare i32 @first_rtl_op(i32) #1

declare void @htab_clear_slot(%struct.htab*, i8**) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !2, i64 0}
!6 = metadata !{metadata !"ggc_root", metadata !2, i64 0, metadata !2, i64 8, metadata !7, i64 16, metadata !7, i64 20, metadata !2, i64 24}
!7 = metadata !{metadata !"int", metadata !3, i64 0}
!8 = metadata !{metadata !6, metadata !2, i64 8}
!9 = metadata !{metadata !6, metadata !7, i64 16}
!10 = metadata !{metadata !6, metadata !7, i64 20}
!11 = metadata !{metadata !6, metadata !2, i64 24}
!12 = metadata !{metadata !13, metadata !14, i64 8}
!13 = metadata !{metadata !"varray_head_tag", metadata !14, i64 0, metadata !14, i64 8, metadata !14, i64 16, metadata !2, i64 24, metadata !3, i64 32}
!14 = metadata !{metadata !"long", metadata !3, i64 0}
!15 = metadata !{metadata !13, metadata !14, i64 0}
!16 = metadata !{metadata !17, metadata !2, i64 0}
!17 = metadata !{metadata !"d_htab_root", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24}
!18 = metadata !{metadata !17, metadata !2, i64 8}
!19 = metadata !{metadata !17, metadata !2, i64 16}
!20 = metadata !{metadata !17, metadata !2, i64 24}
!21 = metadata !{metadata !7, metadata !7, i64 0}
!22 = metadata !{metadata !14, metadata !14, i64 0}
!23 = metadata !{metadata !24, metadata !2, i64 8}
!24 = metadata !{metadata !"tree_common", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19}
!25 = metadata !{metadata !24, metadata !2, i64 0}
!26 = metadata !{metadata !27, metadata !2, i64 32}
!27 = metadata !{metadata !"tree_list", metadata !24, i64 0, metadata !2, i64 24, metadata !2, i64 32}
!28 = metadata !{metadata !29, metadata !7, i64 24}
!29 = metadata !{metadata !"tree_vec", metadata !24, i64 0, metadata !7, i64 24, metadata !3, i64 32}
!30 = metadata !{metadata !31, metadata !2, i64 32}
!31 = metadata !{metadata !"tree_complex", metadata !24, i64 0, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40}
!32 = metadata !{metadata !31, metadata !2, i64 40}
!33 = metadata !{metadata !3, metadata !3, i64 0}
!34 = metadata !{metadata !35, metadata !2, i64 40}
!35 = metadata !{metadata !"tree_decl", metadata !24, i64 0, metadata !2, i64 24, metadata !7, i64 32, metadata !7, i64 36, metadata !2, i64 40, metadata !3, i64 48, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 49, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 50, metadata !7, i64 51, metadata !7, i64 51, metadata !7, i64 51, metadata !7, i64 51, metadata !7, i64 51, metadata !3, i64 51, metadata !7, i64 51, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 52, metadata !7, i64 53, metadata !7, i64 53, metadata !7, i64 53, metadata !7, i64 53, metadata !7, i64 53, metadata !3, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !2, i64 152, metadata !3, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !36, i64 192, metadata !2, i64 200}
!36 = metadata !{metadata !"long long", metadata !3, i64 0}
!37 = metadata !{metadata !35, metadata !2, i64 64}
!38 = metadata !{metadata !35, metadata !2, i64 72}
!39 = metadata !{metadata !35, metadata !2, i64 80}
!40 = metadata !{metadata !35, metadata !2, i64 88}
!41 = metadata !{metadata !35, metadata !2, i64 96}
!42 = metadata !{metadata !35, metadata !2, i64 104}
!43 = metadata !{metadata !35, metadata !2, i64 112}
!44 = metadata !{metadata !35, metadata !2, i64 128}
!45 = metadata !{metadata !35, metadata !2, i64 136}
!46 = metadata !{metadata !35, metadata !2, i64 144}
!47 = metadata !{metadata !35, metadata !2, i64 152}
!48 = metadata !{metadata !35, metadata !2, i64 184}
!49 = metadata !{metadata !35, metadata !2, i64 120}
!50 = metadata !{metadata !35, metadata !2, i64 168}
!51 = metadata !{metadata !35, metadata !2, i64 176}
!52 = metadata !{metadata !53, metadata !2, i64 32}
!53 = metadata !{metadata !"tree_type", metadata !24, i64 0, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !7, i64 56, metadata !7, i64 60, metadata !3, i64 61, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 62, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 63, metadata !7, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !3, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !36, i64 152, metadata !2, i64 160}
!54 = metadata !{metadata !53, metadata !2, i64 40}
!55 = metadata !{metadata !53, metadata !2, i64 48}
!56 = metadata !{metadata !53, metadata !2, i64 72}
!57 = metadata !{metadata !53, metadata !2, i64 80}
!58 = metadata !{metadata !53, metadata !2, i64 96}
!59 = metadata !{metadata !53, metadata !2, i64 104}
!60 = metadata !{metadata !53, metadata !2, i64 112}
!61 = metadata !{metadata !53, metadata !2, i64 120}
!62 = metadata !{metadata !53, metadata !2, i64 128}
!63 = metadata !{metadata !53, metadata !2, i64 136}
!64 = metadata !{metadata !65, metadata !2, i64 32}
!65 = metadata !{metadata !"tree_block", metadata !24, i64 0, metadata !7, i64 24, metadata !7, i64 24, metadata !7, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72}
!66 = metadata !{metadata !65, metadata !2, i64 40}
!67 = metadata !{metadata !65, metadata !2, i64 48}
!68 = metadata !{metadata !65, metadata !2, i64 56}
!69 = metadata !{metadata !70, metadata !7, i64 0}
!70 = metadata !{metadata !"rtvec_def", metadata !7, i64 0, metadata !3, i64 8}
!71 = metadata !{metadata !72, metadata !2, i64 8}
!72 = metadata !{metadata !"hash_entry", metadata !2, i64 0, metadata !2, i64 8, metadata !14, i64 16}
!73 = metadata !{metadata !74, metadata !7, i64 6160}
!74 = metadata !{metadata !"ggc_statistics", metadata !3, i64 0, metadata !3, i64 1024, metadata !3, i64 3072, metadata !3, i64 4096, metadata !14, i64 6144, metadata !14, i64 6152, metadata !7, i64 6160, metadata !7, i64 6164}
!75 = metadata !{metadata !74, metadata !14, i64 6144}
!76 = metadata !{metadata !74, metadata !7, i64 6164}
!77 = metadata !{metadata !74, metadata !14, i64 6152}
