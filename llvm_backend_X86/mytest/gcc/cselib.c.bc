; ModuleID = 'cselib.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i32 }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.cselib_val_struct = type { i32, %union.anon, %struct.elt_loc_list*, %struct.elt_list* }
%union.anon = type { %struct.rtx_def* }
%struct.elt_loc_list = type { %struct.elt_loc_list*, %struct.rtx_def*, %struct.rtx_def* }
%struct.elt_list = type { %struct.elt_list*, %struct.cselib_val_struct* }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.set = type { %struct.rtx_def*, %struct.rtx_def*, %struct.cselib_val_struct*, %struct.cselib_val_struct* }

@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@.str = private unnamed_addr constant [9 x i8] c"cselib.c\00", align 1
@__FUNCTION__.rtx_equal_for_cselib_p = private unnamed_addr constant [23 x i8] c"rtx_equal_for_cselib_p\00", align 1
@reg_values = internal unnamed_addr global %struct.varray_head_tag* null, align 8
@__FUNCTION__.cselib_subst_to_values = private unnamed_addr constant [23 x i8] c"cselib_subst_to_values\00", align 1
@next_unknown_value = internal unnamed_addr global i32 0, align 4
@mode_class = external constant [59 x i32]
@target_flags = external global i32
@mode_size = external constant [59 x i8]
@max_value_regs = internal unnamed_addr global i32 0, align 4
@used_regs = internal unnamed_addr global %struct.varray_head_tag* null, align 8
@hash_table = internal unnamed_addr global %struct.htab* null, align 8
@cselib_current_insn = internal unnamed_addr global %struct.rtx_def* null, align 8
@rtx_class = external constant [153 x i8]
@call_used_regs = external global [53 x i8]
@callmem = internal global %struct.rtx_def* null, align 8
@n_useless_values = internal unnamed_addr global i32 0, align 4
@cselib_nregs = internal unnamed_addr global i32 0, align 4
@cselib_obstack = internal global %struct.obstack zeroinitializer, align 8
@cselib_startobj = internal unnamed_addr global i8* null, align 8
@const_int_rtx = external global [129 x %struct.rtx_def*]
@.str1 = private unnamed_addr constant [11 x i8] c"reg_values\00", align 1
@.str2 = private unnamed_addr constant [10 x i8] c"used_regs\00", align 1
@__FUNCTION__.entry_and_rtx_equal_p = private unnamed_addr constant [22 x i8] c"entry_and_rtx_equal_p\00", align 1
@values_became_useless = internal unnamed_addr global i1 false
@__FUNCTION__.remove_useless_values = private unnamed_addr constant [22 x i8] c"remove_useless_values\00", align 1
@empty_vals = internal unnamed_addr global %struct.cselib_val_struct* null, align 8
@empty_elt_lists = internal unnamed_addr global %struct.elt_list* null, align 8
@empty_elt_loc_lists = internal unnamed_addr global %struct.elt_loc_list* null, align 8
@global_rtl = external global [11 x %struct.rtx_def*]
@reload_completed = external global i32
@reg_renumber = external global i16*
@__FUNCTION__.cselib_invalidate_regno = private unnamed_addr constant [24 x i8] c"cselib_invalidate_regno\00", align 1
@__FUNCTION__.wrap_constant = private unnamed_addr constant [14 x i8] c"wrap_constant\00", align 1
@__FUNCTION__.hash_rtx = private unnamed_addr constant [9 x i8] c"hash_rtx\00", align 1
@__FUNCTION__.new_cselib_val = private unnamed_addr constant [15 x i8] c"new_cselib_val\00", align 1
@flag_float_store = external global i32

; Function Attrs: nounwind readonly uwtable
define i32 @references_value_p(%struct.rtx_def* nocapture readonly %x, i32 %only_useless) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom64 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom64
  %1 = load i8** %arrayidx, align 8, !tbaa !1
  %cmp = icmp eq i32 %bf.clear, 60
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %tobool = icmp eq i32 %only_useless, 0
  br i1 %tobool, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx3 to %struct.cselib_val_struct**
  %2 = load %struct.cselib_val_struct** %rt_cselib, align 8, !tbaa !1
  %locs = getelementptr inbounds %struct.cselib_val_struct* %2, i64 0, i32 2
  %3 = load %struct.elt_loc_list** %locs, align 8, !tbaa !5
  %cmp4 = icmp eq %struct.elt_loc_list* %3, null
  br i1 %cmp4, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false, %entry
  %arrayidx6 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom64
  %4 = load i8* %arrayidx6, align 1, !tbaa !8
  %cmp770 = icmp eq i8 %4, 0
  br i1 %cmp770, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %5 = zext i8 %4 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv73 = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next74, %for.cond.backedge ]
  %indvars.iv.next74 = add nsw i64 %indvars.iv73, -1
  %arrayidx10 = getelementptr inbounds i8* %1, i64 %indvars.iv.next74
  %6 = load i8* %arrayidx10, align 1, !tbaa !8
  switch i8 %6, label %for.cond.backedge [
    i8 101, label %land.lhs.true14
    i8 69, label %for.cond26.preheader
  ]

land.lhs.true14:                                  ; preds = %for.body
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next74
  %rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call = tail call i32 @references_value_p(%struct.rtx_def* %7, i32 %only_useless)
  %tobool18 = icmp eq i32 %call, 0
  br i1 %tobool18, label %for.cond.backedge, label %return

for.cond.backedge:                                ; preds = %for.cond26, %for.body, %land.lhs.true14, %for.cond26.preheader
  %8 = trunc i64 %indvars.iv.next74 to i32
  %cmp7 = icmp sgt i32 %8, 0
  br i1 %cmp7, label %for.body, label %return

for.cond26.preheader:                             ; preds = %for.body
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next74
  %rtvec = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtvec_def**
  %9 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem66 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 0
  %10 = load i32* %num_elem66, align 4, !tbaa !9
  %cmp3067 = icmp sgt i32 %10, 0
  br i1 %cmp3067, label %for.body32, label %for.cond.backedge

for.cond26:                                       ; preds = %for.body32
  %11 = trunc i64 %indvars.iv.next to i32
  %cmp30 = icmp slt i32 %11, %10
  br i1 %cmp30, label %for.body32, label %for.cond.backedge

for.body32:                                       ; preds = %for.cond26.preheader, %for.cond26
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond26 ], [ 0, %for.cond26.preheader ]
  %arrayidx38 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv
  %12 = load %struct.rtx_def** %arrayidx38, align 8, !tbaa !1
  %call39 = tail call i32 @references_value_p(%struct.rtx_def* %12, i32 %only_useless)
  %tobool40 = icmp eq i32 %call39, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool40, label %for.cond26, label %return

return:                                           ; preds = %land.lhs.true14, %for.cond.backedge, %for.body32, %if.end, %lor.lhs.false, %land.lhs.true
  %retval.0 = phi i32 [ 1, %land.lhs.true ], [ 1, %lor.lhs.false ], [ 0, %if.end ], [ 1, %for.body32 ], [ 1, %land.lhs.true14 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @rtx_equal_for_cselib_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end7 [
    i32 61, label %if.then
    i32 66, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear5 = and i32 %bf.lshr, 255
  %call = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %x, i32 %bf.clear5, i32 0)
  %tobool = icmp eq %struct.cselib_val_struct* %call, null
  br i1 %tobool, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.then
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct* %call, i64 0, i32 1, i32 0
  %1 = load %struct.rtx_def** %val_rtx, align 8, !tbaa !1
  br label %if.end7

if.end7:                                          ; preds = %entry, %if.then, %if.then6
  %x.addr.0 = phi %struct.rtx_def* [ %1, %if.then6 ], [ %x, %if.then ], [ %x, %entry ]
  %2 = getelementptr inbounds %struct.rtx_def* %y, i64 0, i32 0
  %bf.load8 = load i32* %2, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  switch i32 %bf.clear9, label %if.end26 [
    i32 61, label %if.then15
    i32 66, label %if.then15
  ]

if.then15:                                        ; preds = %if.end7, %if.end7
  %bf.lshr18 = lshr i32 %bf.load8, 16
  %bf.clear19 = and i32 %bf.lshr18, 255
  %call20 = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %y, i32 %bf.clear19, i32 0)
  %tobool21 = icmp eq %struct.cselib_val_struct* %call20, null
  br i1 %tobool21, label %if.end26, label %if.then22

if.then22:                                        ; preds = %if.then15
  %val_rtx24 = getelementptr inbounds %struct.cselib_val_struct* %call20, i64 0, i32 1, i32 0
  %3 = load %struct.rtx_def** %val_rtx24, align 8, !tbaa !1
  br label %if.end26

if.end26:                                         ; preds = %if.end7, %if.then15, %if.then22
  %y.addr.0 = phi %struct.rtx_def* [ %3, %if.then22 ], [ %y, %if.then15 ], [ %y, %if.end7 ]
  %cmp27 = icmp eq %struct.rtx_def* %x.addr.0, %y.addr.0
  br i1 %cmp27, label %return, label %if.end29

if.end29:                                         ; preds = %if.end26
  %4 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 0
  %bf.load30 = load i32* %4, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 60
  %5 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 0
  %bf.load33 = load i32* %5, align 8
  %bf.clear34 = and i32 %bf.load33, 65535
  %cmp35 = icmp eq i32 %bf.clear34, 60
  br i1 %cmp32, label %land.lhs.true, label %if.end67

land.lhs.true:                                    ; preds = %if.end29
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx to %struct.cselib_val_struct**
  %6 = load %struct.cselib_val_struct** %rt_cselib, align 8, !tbaa !1
  br i1 %cmp35, label %if.then36, label %if.then46

if.then36:                                        ; preds = %land.lhs.true
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 0
  %rt_cselib39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.cselib_val_struct**
  %7 = load %struct.cselib_val_struct** %rt_cselib39, align 8, !tbaa !1
  %cmp40 = icmp eq %struct.cselib_val_struct* %6, %7
  %conv = zext i1 %cmp40 to i32
  br label %return

if.then46:                                        ; preds = %land.lhs.true
  %locs = getelementptr inbounds %struct.cselib_val_struct* %6, i64 0, i32 2
  %l.0313 = load %struct.elt_loc_list** %locs, align 8
  %tobool51314 = icmp eq %struct.elt_loc_list* %l.0313, null
  br i1 %tobool51314, label %return, label %for.body

for.body:                                         ; preds = %if.then46, %for.inc
  %l.0315 = phi %struct.elt_loc_list* [ %l.0, %for.inc ], [ %l.0313, %if.then46 ]
  %loc = getelementptr inbounds %struct.elt_loc_list* %l.0315, i64 0, i32 1
  %8 = load %struct.rtx_def** %loc, align 8, !tbaa !11
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load52 = load i32* %9, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  switch i32 %bf.clear53, label %if.else [
    i32 61, label %for.inc
    i32 66, label %for.inc
  ]

if.else:                                          ; preds = %for.body
  %call62 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def* %8, %struct.rtx_def* %y.addr.0)
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %for.inc, label %return

for.inc:                                          ; preds = %for.body, %for.body, %if.else
  %next = getelementptr inbounds %struct.elt_loc_list* %l.0315, i64 0, i32 0
  %l.0 = load %struct.elt_loc_list** %next, align 8
  %tobool51 = icmp eq %struct.elt_loc_list* %l.0, null
  br i1 %tobool51, label %return, label %for.body

if.end67:                                         ; preds = %if.end29
  br i1 %cmp35, label %if.then72, label %if.end103

if.then72:                                        ; preds = %if.end67
  %arrayidx75 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 0
  %rt_cselib76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.cselib_val_struct**
  %10 = load %struct.cselib_val_struct** %rt_cselib76, align 8, !tbaa !1
  %locs78 = getelementptr inbounds %struct.cselib_val_struct* %10, i64 0, i32 2
  %l77.0317 = load %struct.elt_loc_list** %locs78, align 8
  %tobool80318 = icmp eq %struct.elt_loc_list* %l77.0317, null
  br i1 %tobool80318, label %return, label %for.body81

for.body81:                                       ; preds = %if.then72, %for.inc100
  %l77.0319 = phi %struct.elt_loc_list* [ %l77.0, %for.inc100 ], [ %l77.0317, %if.then72 ]
  %loc83 = getelementptr inbounds %struct.elt_loc_list* %l77.0319, i64 0, i32 1
  %11 = load %struct.rtx_def** %loc83, align 8, !tbaa !11
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load84 = load i32* %12, align 8
  %bf.clear85 = and i32 %bf.load84, 65535
  switch i32 %bf.clear85, label %if.else94 [
    i32 61, label %for.inc100
    i32 66, label %for.inc100
  ]

if.else94:                                        ; preds = %for.body81
  %call95 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def* %x.addr.0, %struct.rtx_def* %11)
  %tobool96 = icmp eq i32 %call95, 0
  br i1 %tobool96, label %for.inc100, label %return

for.inc100:                                       ; preds = %for.body81, %for.body81, %if.else94
  %next101 = getelementptr inbounds %struct.elt_loc_list* %l77.0319, i64 0, i32 0
  %l77.0 = load %struct.elt_loc_list** %next101, align 8
  %tobool80 = icmp eq %struct.elt_loc_list* %l77.0, null
  br i1 %tobool80, label %return, label %for.body81

if.end103:                                        ; preds = %if.end67
  %cmp108 = icmp eq i32 %bf.clear31, %bf.clear34
  br i1 %cmp108, label %lor.lhs.false110, label %return

lor.lhs.false110:                                 ; preds = %if.end103
  %bf.lshr112307 = xor i32 %bf.load33, %bf.load30
  %13 = and i32 %bf.lshr112307, 16711680
  %cmp117 = icmp eq i32 %13, 0
  br i1 %cmp117, label %if.end120, label %return

if.end120:                                        ; preds = %lor.lhs.false110
  %cmp123 = icmp eq i32 %bf.clear31, 67
  br i1 %cmp123, label %if.then125, label %if.end133

if.then125:                                       ; preds = %if.end120
  %arrayidx127 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %arrayidx129 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 0
  %rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx130, align 8, !tbaa !1
  %cmp131 = icmp eq %struct.rtx_def* %14, %15
  %conv132 = zext i1 %cmp131 to i32
  br label %return

if.end133:                                        ; preds = %if.end120
  %idxprom306 = zext i32 %bf.clear31 to i64
  %arrayidx136 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom306
  %16 = load i8** %arrayidx136, align 8, !tbaa !1
  %arrayidx138 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom306
  %17 = load i8* %arrayidx138, align 1, !tbaa !8
  %cmp141326 = icmp eq i8 %17, 0
  br i1 %cmp141326, label %return, label %for.body143.lr.ph

for.body143.lr.ph:                                ; preds = %if.end133
  %18 = zext i8 %17 to i64
  br label %for.body143

for.body143:                                      ; preds = %for.body143.lr.ph, %for.cond140.backedge
  %indvars.iv334 = phi i64 [ %18, %for.body143.lr.ph ], [ %indvars.iv.next335, %for.cond140.backedge ]
  %indvars.iv.next335 = add nsw i64 %indvars.iv334, -1
  %arrayidx145 = getelementptr inbounds i8* %16, i64 %indvars.iv.next335
  %19 = load i8* %arrayidx145, align 1, !tbaa !8
  %conv146 = sext i8 %19 to i32
  switch i32 %conv146, label %sw.default [
    i32 119, label %sw.bb
    i32 110, label %sw.bb158
    i32 105, label %sw.bb158
    i32 86, label %sw.bb170
    i32 69, label %sw.bb170
    i32 101, label %sw.bb211
    i32 83, label %sw.bb224
    i32 115, label %sw.bb224
    i32 117, label %for.cond140.backedge
    i32 48, label %for.cond140.backedge
    i32 116, label %for.cond140.backedge
  ]

sw.bb:                                            ; preds = %for.body143
  %rtwint = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 %indvars.iv.next335, i32 0
  %20 = load i64* %rtwint, align 8, !tbaa !13
  %rtwint153 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 %indvars.iv.next335, i32 0
  %21 = load i64* %rtwint153, align 8, !tbaa !13
  %cmp154 = icmp eq i64 %20, %21
  br i1 %cmp154, label %for.cond140.backedge, label %return

for.cond140.backedge:                             ; preds = %for.cond183, %for.cond183.preheader, %sw.bb, %sw.bb158, %sw.bb211, %sw.bb224, %for.body143, %for.body143, %for.body143
  %22 = trunc i64 %indvars.iv.next335 to i32
  %cmp141 = icmp sgt i32 %22, 0
  br i1 %cmp141, label %for.body143, label %return

sw.bb158:                                         ; preds = %for.body143, %for.body143
  %arrayidx161 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 %indvars.iv.next335
  %rtint = bitcast %union.rtunion_def* %arrayidx161 to i32*
  %23 = load i32* %rtint, align 4, !tbaa !15
  %arrayidx164 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 %indvars.iv.next335
  %rtint165 = bitcast %union.rtunion_def* %arrayidx164 to i32*
  %24 = load i32* %rtint165, align 4, !tbaa !15
  %cmp166 = icmp eq i32 %23, %24
  br i1 %cmp166, label %for.cond140.backedge, label %return

sw.bb170:                                         ; preds = %for.body143, %for.body143
  %arrayidx173 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 %indvars.iv.next335
  %rtvec = bitcast %union.rtunion_def* %arrayidx173 to %struct.rtvec_def**
  %25 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %25, i64 0, i32 0
  %26 = load i32* %num_elem, align 4, !tbaa !9
  %arrayidx176 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 %indvars.iv.next335
  %rtvec177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtvec_def**
  %27 = load %struct.rtvec_def** %rtvec177, align 8, !tbaa !1
  %num_elem178 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 0
  %28 = load i32* %num_elem178, align 4, !tbaa !9
  %cmp179 = icmp eq i32 %26, %28
  br i1 %cmp179, label %for.cond183.preheader, label %return

for.cond183.preheader:                            ; preds = %sw.bb170
  %cmp189323 = icmp sgt i32 %26, 0
  br i1 %cmp189323, label %for.body191, label %for.cond140.backedge

for.cond183:                                      ; preds = %for.body191
  %29 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem188 = getelementptr inbounds %struct.rtvec_def* %29, i64 0, i32 0
  %30 = load i32* %num_elem188, align 4, !tbaa !9
  %31 = trunc i64 %indvars.iv.next to i32
  %cmp189 = icmp slt i32 %31, %30
  br i1 %cmp189, label %for.cond183.for.body191_crit_edge, label %for.cond140.backedge

for.cond183.for.body191_crit_edge:                ; preds = %for.cond183
  %.pre = load %struct.rtvec_def** %rtvec177, align 8, !tbaa !1
  br label %for.body191

for.body191:                                      ; preds = %for.cond183.preheader, %for.cond183.for.body191_crit_edge
  %32 = phi %struct.rtvec_def* [ %.pre, %for.cond183.for.body191_crit_edge ], [ %27, %for.cond183.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond183.for.body191_crit_edge ], [ 0, %for.cond183.preheader ]
  %33 = phi %struct.rtvec_def* [ %29, %for.cond183.for.body191_crit_edge ], [ %25, %for.cond183.preheader ]
  %arrayidx197 = getelementptr inbounds %struct.rtvec_def* %33, i64 0, i32 1, i64 %indvars.iv
  %34 = load %struct.rtx_def** %arrayidx197, align 8, !tbaa !1
  %arrayidx204 = getelementptr inbounds %struct.rtvec_def* %32, i64 0, i32 1, i64 %indvars.iv
  %35 = load %struct.rtx_def** %arrayidx204, align 8, !tbaa !1
  %call205 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def* %34, %struct.rtx_def* %35)
  %tobool206 = icmp eq i32 %call205, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool206, label %return, label %for.cond183

sw.bb211:                                         ; preds = %for.body143
  %arrayidx214 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 %indvars.iv.next335
  %rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx215, align 8, !tbaa !1
  %arrayidx218 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 %indvars.iv.next335
  %rtx219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx219, align 8, !tbaa !1
  %call220 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def* %36, %struct.rtx_def* %37)
  %tobool221 = icmp eq i32 %call220, 0
  br i1 %tobool221, label %return, label %for.cond140.backedge

sw.bb224:                                         ; preds = %for.body143, %for.body143
  %arrayidx227 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 %indvars.iv.next335
  %rtstr = bitcast %union.rtunion_def* %arrayidx227 to i8**
  %38 = load i8** %rtstr, align 8, !tbaa !1
  %arrayidx230 = getelementptr inbounds %struct.rtx_def* %y.addr.0, i64 0, i32 1, i64 %indvars.iv.next335
  %rtstr231 = bitcast %union.rtunion_def* %arrayidx230 to i8**
  %39 = load i8** %rtstr231, align 8, !tbaa !1
  %call232 = tail call i32 @strcmp(i8* %38, i8* %39) #6
  %tobool233 = icmp eq i32 %call232, 0
  br i1 %tobool233, label %for.cond140.backedge, label %return

sw.default:                                       ; preds = %for.body143
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 530, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.rtx_equal_for_cselib_p, i64 0, i64 0)) #7
  unreachable

return:                                           ; preds = %sw.bb, %sw.bb158, %sw.bb170, %sw.bb211, %sw.bb224, %for.cond140.backedge, %for.body191, %if.else94, %for.inc100, %if.else, %for.inc, %if.end133, %if.then72, %if.then46, %if.end103, %lor.lhs.false110, %if.end26, %if.then125, %if.then36
  %retval.0 = phi i32 [ %conv, %if.then36 ], [ %conv132, %if.then125 ], [ 1, %if.end26 ], [ 0, %lor.lhs.false110 ], [ 0, %if.end103 ], [ 0, %if.then46 ], [ 0, %if.then72 ], [ 1, %if.end133 ], [ 1, %if.else ], [ 0, %for.inc ], [ 1, %if.else94 ], [ 0, %for.inc100 ], [ 0, %for.body191 ], [ 0, %sw.bb ], [ 0, %sw.bb158 ], [ 0, %sw.bb170 ], [ 0, %sw.bb211 ], [ 0, %sw.bb224 ], [ 1, %for.cond140.backedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %x, i32 %mode, i32 %create) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  %mode.bf.clear = select i1 %cmp, i32 %mode, i32 %bf.clear
  %bf.clear5 = and i32 %bf.load, 65535
  switch i32 %bf.clear5, label %if.end117 [
    i32 60, label %if.then7
    i32 61, label %if.then12
    i32 66, label %if.then115
  ]

if.then7:                                         ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx to %struct.cselib_val_struct**
  %1 = load %struct.cselib_val_struct** %rt_cselib, align 8, !tbaa !1
  br label %return

if.then12:                                        ; preds = %entry
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx14 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !15
  %idxprom = zext i32 %2 to i64
  %3 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 4
  %te = bitcast %union.varray_data_tag* %data to [1 x %struct.elt_list*]*
  %arrayidx15 = getelementptr inbounds [1 x %struct.elt_list*]* %te, i64 0, i64 %idxprom
  %l.0356 = load %struct.elt_list** %arrayidx15, align 8
  %tobool357 = icmp eq %struct.elt_list* %l.0356, null
  br i1 %tobool357, label %for.end, label %for.body

for.cond:                                         ; preds = %for.body
  %next = getelementptr inbounds %struct.elt_list* %l.0358, i64 0, i32 0
  %l.0 = load %struct.elt_list** %next, align 8
  %tobool = icmp eq %struct.elt_list* %l.0, null
  br i1 %tobool, label %for.end, label %for.body

for.body:                                         ; preds = %if.then12, %for.cond
  %l.0358 = phi %struct.elt_list* [ %l.0, %for.cond ], [ %l.0356, %if.then12 ]
  %elt = getelementptr inbounds %struct.elt_list* %l.0358, i64 0, i32 1
  %4 = load %struct.cselib_val_struct** %elt, align 8, !tbaa !16
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct* %4, i64 0, i32 1, i32 0
  %5 = load %struct.rtx_def** %val_rtx, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load16 = load i32* %6, align 8
  %bf.lshr17 = lshr i32 %bf.load16, 16
  %bf.clear18 = and i32 %bf.lshr17, 255
  %cmp19 = icmp eq i32 %mode.bf.clear, %bf.clear18
  br i1 %cmp19, label %return, label %for.cond

for.end:                                          ; preds = %for.cond, %if.then12
  %tobool23 = icmp eq i32 %create, 0
  br i1 %tobool23, label %return, label %if.end25

if.end25:                                         ; preds = %for.end
  %cmp26 = icmp ult i32 %2, 53
  br i1 %cmp26, label %if.then27, label %if.end75

if.then27:                                        ; preds = %if.end25
  %7 = and i32 %2, -8
  %8 = icmp eq i32 %7, 8
  %.off = add i32 %2, -21
  %9 = icmp ult i32 %.off, 8
  %or.cond = or i1 %8, %9
  %.off194 = add i32 %2, -45
  %10 = icmp ult i32 %.off194, 8
  %or.cond198 = or i1 %or.cond, %10
  %.off195 = add i32 %2, -29
  %11 = icmp ult i32 %.off195, 8
  %or.cond200 = or i1 %or.cond198, %11
  br i1 %or.cond200, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then27
  %idxprom41 = sext i32 %mode.bf.clear to i64
  %arrayidx42 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom41
  %12 = load i32* %arrayidx42, align 4, !tbaa !8
  %cmp43 = icmp eq i32 %12, 5
  br i1 %cmp43, label %cond.end69, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp46 = icmp eq i32 %12, 6
  %phitmp = select i1 %cmp46, i32 2, i32 1
  br label %cond.end69

cond.false:                                       ; preds = %if.then27
  switch i32 %mode.bf.clear, label %cond.false57 [
    i32 18, label %cond.true48
    i32 24, label %cond.true53
  ]

cond.true48:                                      ; preds = %cond.false
  %13 = load i32* @target_flags, align 4, !tbaa !15
  %and = lshr i32 %13, 25
  %14 = and i32 %and, 1
  %15 = xor i32 %14, 3
  br label %cond.end69

cond.true53:                                      ; preds = %cond.false
  %16 = load i32* @target_flags, align 4, !tbaa !15
  %and54 = lshr i32 %16, 24
  %17 = and i32 %and54, 2
  %18 = xor i32 %17, 6
  br label %cond.end69

cond.false57:                                     ; preds = %cond.false
  %idxprom58 = sext i32 %mode.bf.clear to i64
  %arrayidx59 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom58
  %19 = load i8* %arrayidx59, align 1, !tbaa !8
  %conv = zext i8 %19 to i32
  %20 = load i32* @target_flags, align 4, !tbaa !15
  %and60 = lshr i32 %20, 23
  %21 = and i32 %and60, 4
  %22 = add i32 %21, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %22
  %div = sdiv i32 %sub, %22
  br label %cond.end69

cond.end69:                                       ; preds = %cond.true, %lor.rhs, %cond.true48, %cond.false57, %cond.true53
  %cond70 = phi i32 [ %15, %cond.true48 ], [ %18, %cond.true53 ], [ %div, %cond.false57 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ]
  %23 = load i32* @max_value_regs, align 4, !tbaa !15
  %cmp71 = icmp ugt i32 %cond70, %23
  br i1 %cmp71, label %if.then73, label %if.end75

if.then73:                                        ; preds = %cond.end69
  store i32 %cond70, i32* @max_value_regs, align 4, !tbaa !15
  br label %if.end75

if.end75:                                         ; preds = %cond.end69, %if.then73, %if.end25
  %24 = load i32* @next_unknown_value, align 4, !tbaa !15
  %inc = add i32 %24, 1
  store i32 %inc, i32* @next_unknown_value, align 4, !tbaa !15
  %bf.load76 = load i32* %0, align 8
  %bf.lshr77 = lshr i32 %bf.load76, 16
  %bf.clear78 = and i32 %bf.lshr77, 255
  %call = tail call fastcc %struct.cselib_val_struct* @new_cselib_val(i32 %inc, i32 %bf.clear78)
  %locs = getelementptr inbounds %struct.cselib_val_struct* %call, i64 0, i32 2
  %25 = load %struct.elt_loc_list** %locs, align 8, !tbaa !5
  %26 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  %tobool.i237 = icmp eq %struct.elt_loc_list* %26, null
  br i1 %tobool.i237, label %if.else.i244, label %if.then.i239

if.then.i239:                                     ; preds = %if.end75
  %next1.i238 = getelementptr inbounds %struct.elt_loc_list* %26, i64 0, i32 0
  %27 = load %struct.elt_loc_list** %next1.i238, align 8, !tbaa !18
  store %struct.elt_loc_list* %27, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  br label %new_elt_loc_list.exit273

if.else.i244:                                     ; preds = %if.end75
  %28 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %29 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast.i240 = ptrtoint i8* %28 to i64
  %sub.ptr.rhs.cast.i241 = ptrtoint i8* %29 to i64
  %sub.ptr.sub.i242 = sub i64 %sub.ptr.lhs.cast.i240, %sub.ptr.rhs.cast.i241
  %cmp.i243 = icmp slt i64 %sub.ptr.sub.i242, 24
  br i1 %cmp.i243, label %if.then3.i246, label %if.end.i249

if.then3.i246:                                    ; preds = %if.else.i244
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 24) #6
  %.pre.i245 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end.i249

if.end.i249:                                      ; preds = %if.then3.i246, %if.else.i244
  %30 = phi i8* [ %.pre.i245, %if.then3.i246 ], [ %29, %if.else.i244 ]
  %add.ptr.i247 = getelementptr inbounds i8* %30, i64 24
  store i8* %add.ptr.i247, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %31 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp8.i248 = icmp eq i8* %add.ptr.i247, %31
  br i1 %cmp8.i248, label %if.then10.i252, label %if.end11.i266

if.then10.i252:                                   ; preds = %if.end.i249
  %bf.load.i250 = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set.i251 = or i8 %bf.load.i250, 2
  store i8 %bf.set.i251, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end11.i266

if.end11.i266:                                    ; preds = %if.then10.i252, %if.end.i249
  %sub.ptr.lhs.cast13.i253 = ptrtoint i8* %add.ptr.i247 to i64
  %32 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv15.i254 = sext i32 %32 to i64
  %add.i255 = add nsw i64 %conv15.i254, %sub.ptr.lhs.cast13.i253
  %neg.i256 = xor i32 %32, -1
  %conv17.i257 = sext i32 %neg.i256 to i64
  %and.i258 = and i64 %add.i255, %conv17.i257
  %add.ptr18.i259 = getelementptr inbounds i8* null, i64 %and.i258
  store i8* %add.ptr18.i259, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %33 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast21.i260 = ptrtoint i8* %add.ptr18.i259 to i64
  %sub.ptr.rhs.cast22.i261 = ptrtoint %struct._obstack_chunk* %33 to i64
  %sub.ptr.sub23.i262 = sub i64 %sub.ptr.lhs.cast21.i260, %sub.ptr.rhs.cast22.i261
  %34 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast26.i263 = ptrtoint i8* %34 to i64
  %sub.ptr.sub28.i264 = sub i64 %sub.ptr.lhs.cast26.i263, %sub.ptr.rhs.cast22.i261
  %cmp29.i265 = icmp sgt i64 %sub.ptr.sub23.i262, %sub.ptr.sub28.i264
  br i1 %cmp29.i265, label %if.then31.i267, label %if.end34.i268

if.then31.i267:                                   ; preds = %if.end11.i266
  store i8* %34, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end34.i268

if.end34.i268:                                    ; preds = %if.then31.i267, %if.end11.i266
  %35 = phi i8* [ %34, %if.then31.i267 ], [ %add.ptr18.i259, %if.end11.i266 ]
  store i8* %35, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %36 = bitcast i8* %31 to %struct.elt_loc_list*
  br label %new_elt_loc_list.exit273

new_elt_loc_list.exit273:                         ; preds = %if.then.i239, %if.end34.i268
  %el.0.i269 = phi %struct.elt_loc_list* [ %26, %if.then.i239 ], [ %36, %if.end34.i268 ]
  %next39.i270 = getelementptr inbounds %struct.elt_loc_list* %el.0.i269, i64 0, i32 0
  store %struct.elt_loc_list* %25, %struct.elt_loc_list** %next39.i270, align 8, !tbaa !18
  %loc40.i271 = getelementptr inbounds %struct.elt_loc_list* %el.0.i269, i64 0, i32 1
  store %struct.rtx_def* %x, %struct.rtx_def** %loc40.i271, align 8, !tbaa !11
  %37 = load %struct.rtx_def** @cselib_current_insn, align 8, !tbaa !1
  %setting_insn.i272 = getelementptr inbounds %struct.elt_loc_list* %el.0.i269, i64 0, i32 2
  store %struct.rtx_def* %37, %struct.rtx_def** %setting_insn.i272, align 8, !tbaa !26
  store %struct.elt_loc_list* %el.0.i269, %struct.elt_loc_list** %locs, align 8, !tbaa !5
  %38 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data82 = getelementptr inbounds %struct.varray_head_tag* %38, i64 0, i32 4
  %te83 = bitcast %union.varray_data_tag* %data82 to [1 x %struct.elt_list*]*
  %arrayidx84 = getelementptr inbounds [1 x %struct.elt_list*]* %te83, i64 0, i64 %idxprom
  %39 = load %struct.elt_list** %arrayidx84, align 8, !tbaa !1
  %cmp85 = icmp eq %struct.elt_list* %39, null
  br i1 %cmp85, label %do.body, label %if.end99

do.body:                                          ; preds = %new_elt_loc_list.exit273
  %40 = load %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %40, i64 0, i32 1
  %41 = load i64* %elements_used, align 8, !tbaa !27
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %40, i64 0, i32 0
  %42 = load i64* %num_elements, align 8, !tbaa !29
  %cmp88 = icmp ult i64 %41, %42
  br i1 %cmp88, label %if.end93, label %if.then90

if.then90:                                        ; preds = %do.body
  %mul = shl i64 %42, 1
  %call92 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %40, i64 %mul) #6
  store %struct.varray_head_tag* %call92, %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %elements_used94.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call92, i64 0, i32 1
  %.pre = load i64* %elements_used94.phi.trans.insert, align 8, !tbaa !27
  %.pre365.pre = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data101.phi.trans.insert.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %.pre365.pre, i64 0, i32 4
  %te102.phi.trans.insert.phi.trans.insert = bitcast %union.varray_data_tag* %data101.phi.trans.insert.phi.trans.insert to [1 x %struct.elt_list*]*
  %arrayidx103.phi.trans.insert.phi.trans.insert = getelementptr inbounds [1 x %struct.elt_list*]* %te102.phi.trans.insert.phi.trans.insert, i64 0, i64 %idxprom
  %.pre366.pre = load %struct.elt_list** %arrayidx103.phi.trans.insert.phi.trans.insert, align 8, !tbaa !1
  br label %if.end93

if.end93:                                         ; preds = %do.body, %if.then90
  %.pre366 = phi %struct.elt_list* [ null, %do.body ], [ %.pre366.pre, %if.then90 ]
  %43 = phi i64 [ %41, %do.body ], [ %.pre, %if.then90 ]
  %44 = phi %struct.varray_head_tag* [ %40, %do.body ], [ %call92, %if.then90 ]
  %elements_used94 = getelementptr inbounds %struct.varray_head_tag* %44, i64 0, i32 1
  %inc95 = add i64 %43, 1
  store i64 %inc95, i64* %elements_used94, align 8, !tbaa !27
  %data96 = getelementptr inbounds %struct.varray_head_tag* %44, i64 0, i32 4
  %u97 = bitcast %union.varray_data_tag* %data96 to [1 x i32]*
  %arrayidx98 = getelementptr inbounds [1 x i32]* %u97, i64 0, i64 %43
  store i32 %2, i32* %arrayidx98, align 4, !tbaa !15
  br label %if.end99

if.end99:                                         ; preds = %if.end93, %new_elt_loc_list.exit273
  %45 = phi %struct.elt_list* [ %.pre366, %if.end93 ], [ %39, %new_elt_loc_list.exit273 ]
  %46 = load %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  %tobool.i203 = icmp eq %struct.elt_list* %46, null
  br i1 %tobool.i203, label %if.else.i210, label %if.then.i205

if.then.i205:                                     ; preds = %if.end99
  %next1.i204 = getelementptr inbounds %struct.elt_list* %46, i64 0, i32 0
  %47 = load %struct.elt_list** %next1.i204, align 8, !tbaa !30
  store %struct.elt_list* %47, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  br label %new_elt_list.exit

if.else.i210:                                     ; preds = %if.end99
  %48 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %49 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast.i206 = ptrtoint i8* %48 to i64
  %sub.ptr.rhs.cast.i207 = ptrtoint i8* %49 to i64
  %sub.ptr.sub.i208 = sub i64 %sub.ptr.lhs.cast.i206, %sub.ptr.rhs.cast.i207
  %cmp.i209 = icmp slt i64 %sub.ptr.sub.i208, 16
  br i1 %cmp.i209, label %if.then3.i212, label %if.end.i215

if.then3.i212:                                    ; preds = %if.else.i210
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 16) #6
  %.pre.i211 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end.i215

if.end.i215:                                      ; preds = %if.then3.i212, %if.else.i210
  %50 = phi i8* [ %.pre.i211, %if.then3.i212 ], [ %49, %if.else.i210 ]
  %add.ptr.i213 = getelementptr inbounds i8* %50, i64 16
  store i8* %add.ptr.i213, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %51 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp8.i214 = icmp eq i8* %add.ptr.i213, %51
  br i1 %cmp8.i214, label %if.then10.i218, label %if.end11.i232

if.then10.i218:                                   ; preds = %if.end.i215
  %bf.load.i216 = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set.i217 = or i8 %bf.load.i216, 2
  store i8 %bf.set.i217, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end11.i232

if.end11.i232:                                    ; preds = %if.then10.i218, %if.end.i215
  %sub.ptr.lhs.cast13.i219 = ptrtoint i8* %add.ptr.i213 to i64
  %52 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv15.i220 = sext i32 %52 to i64
  %add.i221 = add nsw i64 %conv15.i220, %sub.ptr.lhs.cast13.i219
  %neg.i222 = xor i32 %52, -1
  %conv17.i223 = sext i32 %neg.i222 to i64
  %and.i224 = and i64 %add.i221, %conv17.i223
  %add.ptr18.i225 = getelementptr inbounds i8* null, i64 %and.i224
  store i8* %add.ptr18.i225, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %53 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast21.i226 = ptrtoint i8* %add.ptr18.i225 to i64
  %sub.ptr.rhs.cast22.i227 = ptrtoint %struct._obstack_chunk* %53 to i64
  %sub.ptr.sub23.i228 = sub i64 %sub.ptr.lhs.cast21.i226, %sub.ptr.rhs.cast22.i227
  %54 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast26.i229 = ptrtoint i8* %54 to i64
  %sub.ptr.sub28.i230 = sub i64 %sub.ptr.lhs.cast26.i229, %sub.ptr.rhs.cast22.i227
  %cmp29.i231 = icmp sgt i64 %sub.ptr.sub23.i228, %sub.ptr.sub28.i230
  br i1 %cmp29.i231, label %if.then31.i233, label %if.end34.i234

if.then31.i233:                                   ; preds = %if.end11.i232
  store i8* %54, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end34.i234

if.end34.i234:                                    ; preds = %if.then31.i233, %if.end11.i232
  %55 = phi i8* [ %54, %if.then31.i233 ], [ %add.ptr18.i225, %if.end11.i232 ]
  store i8* %55, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %56 = bitcast i8* %51 to %struct.elt_list*
  br label %new_elt_list.exit

new_elt_list.exit:                                ; preds = %if.then.i205, %if.end34.i234
  %el.0.i235 = phi %struct.elt_list* [ %46, %if.then.i205 ], [ %56, %if.end34.i234 ]
  %next39.i236 = getelementptr inbounds %struct.elt_list* %el.0.i235, i64 0, i32 0
  store %struct.elt_list* %45, %struct.elt_list** %next39.i236, align 8, !tbaa !30
  %elt40.i = getelementptr inbounds %struct.elt_list* %el.0.i235, i64 0, i32 1
  store %struct.cselib_val_struct* %call, %struct.cselib_val_struct** %elt40.i, align 8, !tbaa !16
  %57 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data106 = getelementptr inbounds %struct.varray_head_tag* %57, i64 0, i32 4
  %te107 = bitcast %union.varray_data_tag* %data106 to [1 x %struct.elt_list*]*
  %arrayidx108 = getelementptr inbounds [1 x %struct.elt_list*]* %te107, i64 0, i64 %idxprom
  store %struct.elt_list* %el.0.i235, %struct.elt_list** %arrayidx108, align 8, !tbaa !1
  %58 = load %struct.htab** @hash_table, align 8, !tbaa !1
  %59 = bitcast %struct.rtx_def* %x to i8*
  %value = getelementptr inbounds %struct.cselib_val_struct* %call, i64 0, i32 0
  %60 = load i32* %value, align 4, !tbaa !31
  %call109 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %58, i8* %59, i32 %60, i32 1) #6
  %61 = bitcast %struct.cselib_val_struct* %call to i8*
  store i8* %61, i8** %call109, align 8, !tbaa !1
  br label %return

if.then115:                                       ; preds = %entry
  %bf.clear3.i = and i32 %bf.load, 134217728
  %tobool.i276 = icmp ne i32 %bf.clear3.i, 0
  %cmp.i277 = icmp eq i32 %bf.clear, 51
  %or.cond.i = or i1 %tobool.i276, %cmp.i277
  br i1 %or.cond.i, label %return, label %lor.lhs.false4.i

lor.lhs.false4.i:                                 ; preds = %if.then115
  %idxprom53.i = zext i32 %bf.clear to i64
  %arrayidx.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom53.i
  %62 = load i32* %arrayidx.i, align 4, !tbaa !8
  switch i32 %62, label %lor.lhs.false10.i [
    i32 2, label %land.lhs.true.i
    i32 6, label %land.lhs.true.i
  ]

lor.lhs.false10.i:                                ; preds = %lor.lhs.false4.i
  %cmp13.i = icmp eq i32 %62, 8
  %63 = load i32* @flag_float_store, align 4
  %tobool14.i = icmp ne i32 %63, 0
  %or.cond33.i = and i1 %cmp13.i, %tobool14.i
  br i1 %or.cond33.i, label %return, label %if.end.i279

land.lhs.true.i:                                  ; preds = %lor.lhs.false4.i, %lor.lhs.false4.i
  %.old.i = load i32* @flag_float_store, align 4, !tbaa !15
  %tobool14.old.i = icmp eq i32 %.old.i, 0
  br i1 %tobool14.old.i, label %if.end.i279, label %return

if.end.i279:                                      ; preds = %land.lhs.true.i, %lor.lhs.false10.i
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx15.i to %struct.rtx_def**
  %64 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %call.i278 = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %64, i32 %bf.clear, i32 %create) #6
  %tobool16.i = icmp eq %struct.cselib_val_struct* %call.i278, null
  br i1 %tobool16.i, label %return, label %if.end18.i

if.end18.i:                                       ; preds = %if.end.i279
  %addr_list.i = getelementptr inbounds %struct.cselib_val_struct* %call.i278, i64 0, i32 3
  %l.0.i359 = load %struct.elt_list** %addr_list.i, align 8
  %tobool19.i360 = icmp eq %struct.elt_list* %l.0.i359, null
  br i1 %tobool19.i360, label %for.end.i, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %next.i = getelementptr inbounds %struct.elt_list* %l.0.i361, i64 0, i32 0
  %l.0.i = load %struct.elt_list** %next.i, align 8
  %tobool19.i = icmp eq %struct.elt_list* %l.0.i, null
  br i1 %tobool19.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.end18.i, %for.cond.i
  %l.0.i361 = phi %struct.elt_list* [ %l.0.i, %for.cond.i ], [ %l.0.i359, %if.end18.i ]
  %elt.i = getelementptr inbounds %struct.elt_list* %l.0.i361, i64 0, i32 1
  %65 = load %struct.cselib_val_struct** %elt.i, align 8, !tbaa !16
  %val_rtx.i = getelementptr inbounds %struct.cselib_val_struct* %65, i64 0, i32 1, i32 0
  %66 = load %struct.rtx_def** %val_rtx.i, align 8, !tbaa !1
  %67 = getelementptr inbounds %struct.rtx_def* %66, i64 0, i32 0
  %bf.load20.i = load i32* %67, align 8
  %bf.lshr21.i = lshr i32 %bf.load20.i, 16
  %bf.clear22.i = and i32 %bf.lshr21.i, 255
  %cmp23.i = icmp eq i32 %bf.clear22.i, %bf.clear
  br i1 %cmp23.i, label %return, label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i, %if.end18.i
  %tobool27.i = icmp eq i32 %create, 0
  br i1 %tobool27.i, label %return, label %if.end29.i

if.end29.i:                                       ; preds = %for.end.i
  %68 = load i32* @next_unknown_value, align 4, !tbaa !15
  %inc.i = add i32 %68, 1
  store i32 %inc.i, i32* @next_unknown_value, align 4, !tbaa !15
  %call30.i = tail call fastcc %struct.cselib_val_struct* @new_cselib_val(i32 %inc.i, i32 %bf.clear) #6
  %locs.i.i = getelementptr inbounds %struct.cselib_val_struct* %call30.i, i64 0, i32 2
  %l.019.i.i = load %struct.elt_loc_list** %locs.i.i, align 8
  %tobool20.i.i = icmp eq %struct.elt_loc_list* %l.019.i.i, null
  br i1 %tobool20.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end29.i, %for.inc.i.i
  %l.021.i.i = phi %struct.elt_loc_list* [ %l.0.i.i, %for.inc.i.i ], [ %l.019.i.i, %if.end29.i ]
  %loc.i.i = getelementptr inbounds %struct.elt_loc_list* %l.021.i.i, i64 0, i32 1
  %69 = load %struct.rtx_def** %loc.i.i, align 8, !tbaa !11
  %70 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 0
  %bf.load.i54.i = load i32* %70, align 8
  %bf.clear.i55.i = and i32 %bf.load.i54.i, 65535
  %cmp.i.i = icmp eq i32 %bf.clear.i55.i, 66
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 1, i64 0
  %rtx.i.i = bitcast %union.rtunion_def* %arrayidx.i.i to %struct.rtx_def**
  %71 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !1
  %arrayidx3.i.i = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 1, i64 0
  %rt_cselib.i.i = bitcast %union.rtunion_def* %arrayidx3.i.i to %struct.cselib_val_struct**
  %72 = load %struct.cselib_val_struct** %rt_cselib.i.i, align 8, !tbaa !1
  %cmp4.i.i = icmp eq %struct.cselib_val_struct* %72, %call.i278
  br i1 %cmp4.i.i, label %add_mem_for_addr.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i, %for.body.i.i
  %next.i.i = getelementptr inbounds %struct.elt_loc_list* %l.021.i.i, i64 0, i32 0
  %l.0.i.i = load %struct.elt_loc_list** %next.i.i, align 8
  %tobool.i.i = icmp eq %struct.elt_loc_list* %l.0.i.i, null
  br i1 %tobool.i.i, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i, %if.end29.i
  %73 = load %struct.elt_list** %addr_list.i, align 8, !tbaa !32
  %74 = load %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  %tobool.i318 = icmp eq %struct.elt_list* %74, null
  br i1 %tobool.i318, label %if.else.i325, label %if.then.i320

if.then.i320:                                     ; preds = %for.end.i.i
  %next1.i319 = getelementptr inbounds %struct.elt_list* %74, i64 0, i32 0
  %75 = load %struct.elt_list** %next1.i319, align 8, !tbaa !30
  store %struct.elt_list* %75, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  br label %new_elt_list.exit353

if.else.i325:                                     ; preds = %for.end.i.i
  %76 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %77 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast.i321 = ptrtoint i8* %76 to i64
  %sub.ptr.rhs.cast.i322 = ptrtoint i8* %77 to i64
  %sub.ptr.sub.i323 = sub i64 %sub.ptr.lhs.cast.i321, %sub.ptr.rhs.cast.i322
  %cmp.i324 = icmp slt i64 %sub.ptr.sub.i323, 16
  br i1 %cmp.i324, label %if.then3.i327, label %if.end.i330

if.then3.i327:                                    ; preds = %if.else.i325
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 16) #6
  %.pre.i326 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end.i330

if.end.i330:                                      ; preds = %if.then3.i327, %if.else.i325
  %78 = phi i8* [ %.pre.i326, %if.then3.i327 ], [ %77, %if.else.i325 ]
  %add.ptr.i328 = getelementptr inbounds i8* %78, i64 16
  store i8* %add.ptr.i328, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %79 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp8.i329 = icmp eq i8* %add.ptr.i328, %79
  br i1 %cmp8.i329, label %if.then10.i333, label %if.end11.i347

if.then10.i333:                                   ; preds = %if.end.i330
  %bf.load.i331 = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set.i332 = or i8 %bf.load.i331, 2
  store i8 %bf.set.i332, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end11.i347

if.end11.i347:                                    ; preds = %if.then10.i333, %if.end.i330
  %sub.ptr.lhs.cast13.i334 = ptrtoint i8* %add.ptr.i328 to i64
  %80 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv15.i335 = sext i32 %80 to i64
  %add.i336 = add nsw i64 %conv15.i335, %sub.ptr.lhs.cast13.i334
  %neg.i337 = xor i32 %80, -1
  %conv17.i338 = sext i32 %neg.i337 to i64
  %and.i339 = and i64 %add.i336, %conv17.i338
  %add.ptr18.i340 = getelementptr inbounds i8* null, i64 %and.i339
  store i8* %add.ptr18.i340, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %81 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast21.i341 = ptrtoint i8* %add.ptr18.i340 to i64
  %sub.ptr.rhs.cast22.i342 = ptrtoint %struct._obstack_chunk* %81 to i64
  %sub.ptr.sub23.i343 = sub i64 %sub.ptr.lhs.cast21.i341, %sub.ptr.rhs.cast22.i342
  %82 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast26.i344 = ptrtoint i8* %82 to i64
  %sub.ptr.sub28.i345 = sub i64 %sub.ptr.lhs.cast26.i344, %sub.ptr.rhs.cast22.i342
  %cmp29.i346 = icmp sgt i64 %sub.ptr.sub23.i343, %sub.ptr.sub28.i345
  br i1 %cmp29.i346, label %if.then31.i348, label %if.end34.i349

if.then31.i348:                                   ; preds = %if.end11.i347
  store i8* %82, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end34.i349

if.end34.i349:                                    ; preds = %if.then31.i348, %if.end11.i347
  %83 = phi i8* [ %82, %if.then31.i348 ], [ %add.ptr18.i340, %if.end11.i347 ]
  store i8* %83, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %84 = bitcast i8* %79 to %struct.elt_list*
  br label %new_elt_list.exit353

new_elt_list.exit353:                             ; preds = %if.then.i320, %if.end34.i349
  %el.0.i350 = phi %struct.elt_list* [ %74, %if.then.i320 ], [ %84, %if.end34.i349 ]
  %next39.i351 = getelementptr inbounds %struct.elt_list* %el.0.i350, i64 0, i32 0
  store %struct.elt_list* %73, %struct.elt_list** %next39.i351, align 8, !tbaa !30
  %elt40.i352 = getelementptr inbounds %struct.elt_list* %el.0.i350, i64 0, i32 1
  store %struct.cselib_val_struct* %call30.i, %struct.cselib_val_struct** %elt40.i352, align 8, !tbaa !16
  store %struct.elt_list* %el.0.i350, %struct.elt_list** %addr_list.i, align 8, !tbaa !32
  %85 = load %struct.elt_loc_list** %locs.i.i, align 8, !tbaa !5
  %val_rtx.i.i = getelementptr inbounds %struct.cselib_val_struct* %call.i278, i64 0, i32 1, i32 0
  %86 = load %struct.rtx_def** %val_rtx.i.i, align 8, !tbaa !1
  %call7.i.i = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %x, %struct.rtx_def* %86) #6
  %87 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  %tobool.i281 = icmp eq %struct.elt_loc_list* %87, null
  br i1 %tobool.i281, label %if.else.i288, label %if.then.i283

if.then.i283:                                     ; preds = %new_elt_list.exit353
  %next1.i282 = getelementptr inbounds %struct.elt_loc_list* %87, i64 0, i32 0
  %88 = load %struct.elt_loc_list** %next1.i282, align 8, !tbaa !18
  store %struct.elt_loc_list* %88, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  br label %new_elt_loc_list.exit317

if.else.i288:                                     ; preds = %new_elt_list.exit353
  %89 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %90 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast.i284 = ptrtoint i8* %89 to i64
  %sub.ptr.rhs.cast.i285 = ptrtoint i8* %90 to i64
  %sub.ptr.sub.i286 = sub i64 %sub.ptr.lhs.cast.i284, %sub.ptr.rhs.cast.i285
  %cmp.i287 = icmp slt i64 %sub.ptr.sub.i286, 24
  br i1 %cmp.i287, label %if.then3.i290, label %if.end.i293

if.then3.i290:                                    ; preds = %if.else.i288
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 24) #6
  %.pre.i289 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end.i293

if.end.i293:                                      ; preds = %if.then3.i290, %if.else.i288
  %91 = phi i8* [ %.pre.i289, %if.then3.i290 ], [ %90, %if.else.i288 ]
  %add.ptr.i291 = getelementptr inbounds i8* %91, i64 24
  store i8* %add.ptr.i291, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %92 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp8.i292 = icmp eq i8* %add.ptr.i291, %92
  br i1 %cmp8.i292, label %if.then10.i296, label %if.end11.i310

if.then10.i296:                                   ; preds = %if.end.i293
  %bf.load.i294 = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set.i295 = or i8 %bf.load.i294, 2
  store i8 %bf.set.i295, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end11.i310

if.end11.i310:                                    ; preds = %if.then10.i296, %if.end.i293
  %sub.ptr.lhs.cast13.i297 = ptrtoint i8* %add.ptr.i291 to i64
  %93 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv15.i298 = sext i32 %93 to i64
  %add.i299 = add nsw i64 %conv15.i298, %sub.ptr.lhs.cast13.i297
  %neg.i300 = xor i32 %93, -1
  %conv17.i301 = sext i32 %neg.i300 to i64
  %and.i302 = and i64 %add.i299, %conv17.i301
  %add.ptr18.i303 = getelementptr inbounds i8* null, i64 %and.i302
  store i8* %add.ptr18.i303, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %94 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast21.i304 = ptrtoint i8* %add.ptr18.i303 to i64
  %sub.ptr.rhs.cast22.i305 = ptrtoint %struct._obstack_chunk* %94 to i64
  %sub.ptr.sub23.i306 = sub i64 %sub.ptr.lhs.cast21.i304, %sub.ptr.rhs.cast22.i305
  %95 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast26.i307 = ptrtoint i8* %95 to i64
  %sub.ptr.sub28.i308 = sub i64 %sub.ptr.lhs.cast26.i307, %sub.ptr.rhs.cast22.i305
  %cmp29.i309 = icmp sgt i64 %sub.ptr.sub23.i306, %sub.ptr.sub28.i308
  br i1 %cmp29.i309, label %if.then31.i311, label %if.end34.i312

if.then31.i311:                                   ; preds = %if.end11.i310
  store i8* %95, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end34.i312

if.end34.i312:                                    ; preds = %if.then31.i311, %if.end11.i310
  %96 = phi i8* [ %95, %if.then31.i311 ], [ %add.ptr18.i303, %if.end11.i310 ]
  store i8* %96, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %97 = bitcast i8* %92 to %struct.elt_loc_list*
  br label %new_elt_loc_list.exit317

new_elt_loc_list.exit317:                         ; preds = %if.then.i283, %if.end34.i312
  %el.0.i313 = phi %struct.elt_loc_list* [ %87, %if.then.i283 ], [ %97, %if.end34.i312 ]
  %next39.i314 = getelementptr inbounds %struct.elt_loc_list* %el.0.i313, i64 0, i32 0
  store %struct.elt_loc_list* %85, %struct.elt_loc_list** %next39.i314, align 8, !tbaa !18
  %loc40.i315 = getelementptr inbounds %struct.elt_loc_list* %el.0.i313, i64 0, i32 1
  store %struct.rtx_def* %call7.i.i, %struct.rtx_def** %loc40.i315, align 8, !tbaa !11
  %98 = load %struct.rtx_def** @cselib_current_insn, align 8, !tbaa !1
  %setting_insn.i316 = getelementptr inbounds %struct.elt_loc_list* %el.0.i313, i64 0, i32 2
  store %struct.rtx_def* %98, %struct.rtx_def** %setting_insn.i316, align 8, !tbaa !26
  store %struct.elt_loc_list* %el.0.i313, %struct.elt_loc_list** %locs.i.i, align 8, !tbaa !5
  br label %add_mem_for_addr.exit.i

add_mem_for_addr.exit.i:                          ; preds = %land.lhs.true.i.i, %new_elt_loc_list.exit317
  %99 = load %struct.htab** @hash_table, align 8, !tbaa !1
  %bf.load.i.i = load i32* %0, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 65535
  switch i32 %bf.clear.i.i, label %wrap_constant.exit.i [
    i32 54, label %if.end.i.i
    i32 55, label %lor.lhs.false.i.i
  ]

lor.lhs.false.i.i:                                ; preds = %add_mem_for_addr.exit.i
  %bf.clear5.i.i = and i32 %bf.load.i.i, 16711680
  %cmp6.i.i = icmp eq i32 %bf.clear5.i.i, 0
  br i1 %cmp6.i.i, label %if.end.i.i, label %wrap_constant.exit.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i, %add_mem_for_addr.exit.i
  br i1 %cmp, label %if.then8.i.i, label %if.end9.i.i

if.then8.i.i:                                     ; preds = %if.end.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 548, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.wrap_constant, i64 0, i64 0)) #7
  unreachable

if.end9.i.i:                                      ; preds = %if.end.i.i
  %call.i.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %bf.clear, %struct.rtx_def* %x) #6
  br label %wrap_constant.exit.i

wrap_constant.exit.i:                             ; preds = %if.end9.i.i, %lor.lhs.false.i.i, %add_mem_for_addr.exit.i
  %retval.0.i.i = phi %struct.rtx_def* [ %call.i.i, %if.end9.i.i ], [ %x, %add_mem_for_addr.exit.i ], [ %x, %lor.lhs.false.i.i ]
  %100 = bitcast %struct.rtx_def* %retval.0.i.i to i8*
  %value.i = getelementptr inbounds %struct.cselib_val_struct* %call30.i, i64 0, i32 0
  %101 = load i32* %value.i, align 4, !tbaa !31
  %call32.i = tail call i8** @htab_find_slot_with_hash(%struct.htab* %99, i8* %100, i32 %101, i32 1) #6
  %102 = bitcast %struct.cselib_val_struct* %call30.i to i8*
  store i8* %102, i8** %call32.i, align 8, !tbaa !1
  br label %return

if.end117:                                        ; preds = %entry
  %call118 = tail call fastcc i32 @hash_rtx(%struct.rtx_def* %x, i32 %mode.bf.clear, i32 %create)
  %tobool119 = icmp eq i32 %call118, 0
  br i1 %tobool119, label %return, label %if.end121

if.end121:                                        ; preds = %if.end117
  %103 = load %struct.htab** @hash_table, align 8, !tbaa !1
  %bf.load.i201 = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i201, 65535
  switch i32 %bf.clear.i, label %wrap_constant.exit [
    i32 54, label %if.end.i202
    i32 55, label %lor.lhs.false.i
  ]

lor.lhs.false.i:                                  ; preds = %if.end121
  %bf.clear5.i = and i32 %bf.load.i201, 16711680
  %cmp6.i = icmp eq i32 %bf.clear5.i, 0
  br i1 %cmp6.i, label %if.end.i202, label %wrap_constant.exit

if.end.i202:                                      ; preds = %lor.lhs.false.i, %if.end121
  %cmp7.i = icmp eq i32 %mode.bf.clear, 0
  br i1 %cmp7.i, label %if.then8.i, label %if.end9.i

if.then8.i:                                       ; preds = %if.end.i202
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 548, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.wrap_constant, i64 0, i64 0)) #7
  unreachable

if.end9.i:                                        ; preds = %if.end.i202
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %mode.bf.clear, %struct.rtx_def* %x) #6
  br label %wrap_constant.exit

wrap_constant.exit:                               ; preds = %if.end121, %lor.lhs.false.i, %if.end9.i
  %retval.0.i = phi %struct.rtx_def* [ %call.i, %if.end9.i ], [ %x, %if.end121 ], [ %x, %lor.lhs.false.i ]
  %104 = bitcast %struct.rtx_def* %retval.0.i to i8*
  %tobool123 = icmp ne i32 %create, 0
  %cond124 = zext i1 %tobool123 to i32
  %call125 = tail call i8** @htab_find_slot_with_hash(%struct.htab* %103, i8* %104, i32 %call118, i32 %cond124) #6
  %cmp126 = icmp eq i8** %call125, null
  br i1 %cmp126, label %return, label %if.end129

if.end129:                                        ; preds = %wrap_constant.exit
  %105 = load i8** %call125, align 8, !tbaa !1
  %tobool130 = icmp eq i8* %105, null
  br i1 %tobool130, label %if.end132, label %if.then131

if.then131:                                       ; preds = %if.end129
  %106 = bitcast i8* %105 to %struct.cselib_val_struct*
  br label %return

if.end132:                                        ; preds = %if.end129
  %call133 = tail call fastcc %struct.cselib_val_struct* @new_cselib_val(i32 %call118, i32 %mode.bf.clear)
  %107 = bitcast %struct.cselib_val_struct* %call133 to i8*
  store i8* %107, i8** %call125, align 8, !tbaa !1
  %locs134 = getelementptr inbounds %struct.cselib_val_struct* %call133, i64 0, i32 2
  %108 = load %struct.elt_loc_list** %locs134, align 8, !tbaa !5
  %call135 = tail call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %x)
  %109 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  %tobool.i = icmp eq %struct.elt_loc_list* %109, null
  br i1 %tobool.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end132
  %next1.i = getelementptr inbounds %struct.elt_loc_list* %109, i64 0, i32 0
  %110 = load %struct.elt_loc_list** %next1.i, align 8, !tbaa !18
  store %struct.elt_loc_list* %110, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  br label %new_elt_loc_list.exit

if.else.i:                                        ; preds = %if.end132
  %111 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %112 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast.i = ptrtoint i8* %111 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %112 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %cmp.i = icmp slt i64 %sub.ptr.sub.i, 24
  br i1 %cmp.i, label %if.then3.i, label %if.end.i

if.then3.i:                                       ; preds = %if.else.i
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 24) #6
  %.pre.i = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.else.i
  %113 = phi i8* [ %.pre.i, %if.then3.i ], [ %112, %if.else.i ]
  %add.ptr.i = getelementptr inbounds i8* %113, i64 24
  store i8* %add.ptr.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %114 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp8.i = icmp eq i8* %add.ptr.i, %114
  br i1 %cmp8.i, label %if.then10.i, label %if.end11.i

if.then10.i:                                      ; preds = %if.end.i
  %bf.load.i = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set.i = or i8 %bf.load.i, 2
  store i8 %bf.set.i, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i, %if.end.i
  %sub.ptr.lhs.cast13.i = ptrtoint i8* %add.ptr.i to i64
  %115 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv15.i = sext i32 %115 to i64
  %add.i = add nsw i64 %conv15.i, %sub.ptr.lhs.cast13.i
  %neg.i = xor i32 %115, -1
  %conv17.i = sext i32 %neg.i to i64
  %and.i = and i64 %add.i, %conv17.i
  %add.ptr18.i = getelementptr inbounds i8* null, i64 %and.i
  store i8* %add.ptr18.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %116 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast21.i = ptrtoint i8* %add.ptr18.i to i64
  %sub.ptr.rhs.cast22.i = ptrtoint %struct._obstack_chunk* %116 to i64
  %sub.ptr.sub23.i = sub i64 %sub.ptr.lhs.cast21.i, %sub.ptr.rhs.cast22.i
  %117 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast26.i = ptrtoint i8* %117 to i64
  %sub.ptr.sub28.i = sub i64 %sub.ptr.lhs.cast26.i, %sub.ptr.rhs.cast22.i
  %cmp29.i = icmp sgt i64 %sub.ptr.sub23.i, %sub.ptr.sub28.i
  br i1 %cmp29.i, label %if.then31.i, label %if.end34.i

if.then31.i:                                      ; preds = %if.end11.i
  store i8* %117, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.then31.i, %if.end11.i
  %118 = phi i8* [ %117, %if.then31.i ], [ %add.ptr18.i, %if.end11.i ]
  store i8* %118, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %119 = bitcast i8* %114 to %struct.elt_loc_list*
  br label %new_elt_loc_list.exit

new_elt_loc_list.exit:                            ; preds = %if.then.i, %if.end34.i
  %el.0.i = phi %struct.elt_loc_list* [ %109, %if.then.i ], [ %119, %if.end34.i ]
  %next39.i = getelementptr inbounds %struct.elt_loc_list* %el.0.i, i64 0, i32 0
  store %struct.elt_loc_list* %108, %struct.elt_loc_list** %next39.i, align 8, !tbaa !18
  %loc40.i = getelementptr inbounds %struct.elt_loc_list* %el.0.i, i64 0, i32 1
  store %struct.rtx_def* %call135, %struct.rtx_def** %loc40.i, align 8, !tbaa !11
  %120 = load %struct.rtx_def** @cselib_current_insn, align 8, !tbaa !1
  %setting_insn.i = getelementptr inbounds %struct.elt_loc_list* %el.0.i, i64 0, i32 2
  store %struct.rtx_def* %120, %struct.rtx_def** %setting_insn.i, align 8, !tbaa !26
  store %struct.elt_loc_list* %el.0.i, %struct.elt_loc_list** %locs134, align 8, !tbaa !5
  br label %return

return:                                           ; preds = %for.body.i, %for.body, %wrap_constant.exit.i, %for.end.i, %if.end.i279, %land.lhs.true.i, %lor.lhs.false10.i, %if.then115, %wrap_constant.exit, %if.end117, %for.end, %new_elt_loc_list.exit, %if.then131, %new_elt_list.exit, %if.then7
  %retval.0 = phi %struct.cselib_val_struct* [ %1, %if.then7 ], [ %call, %new_elt_list.exit ], [ %106, %if.then131 ], [ %call133, %new_elt_loc_list.exit ], [ null, %for.end ], [ null, %if.end117 ], [ null, %wrap_constant.exit ], [ %call30.i, %wrap_constant.exit.i ], [ null, %land.lhs.true.i ], [ null, %lor.lhs.false10.i ], [ null, %if.then115 ], [ null, %if.end.i279 ], [ null, %for.end.i ], [ %4, %for.body ], [ %65, %for.body.i ]
  ret %struct.cselib_val_struct* %retval.0
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #2

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %x) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom213 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom213
  %1 = load i8** %arrayidx, align 8, !tbaa !1
  switch i32 %bf.clear, label %sw.epilog [
    i32 61, label %sw.bb
    i32 66, label %sw.bb12
    i32 55, label %return
    i32 56, label %return
    i32 54, label %return
    i32 99, label %sw.bb23
    i32 97, label %sw.bb23
    i32 98, label %sw.bb23
    i32 96, label %sw.bb23
    i32 101, label %sw.bb23
    i32 100, label %sw.bb23
  ]

sw.bb:                                            ; preds = %entry
  %arrayidx1 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx1 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !15
  %idxprom2 = zext i32 %2 to i64
  %3 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 4
  %te = bitcast %union.varray_data_tag* %data to [1 x %struct.elt_list*]*
  %arrayidx3 = getelementptr inbounds [1 x %struct.elt_list*]* %te, i64 0, i64 %idxprom2
  %l.0229 = load %struct.elt_list** %arrayidx3, align 8
  %tobool230 = icmp eq %struct.elt_list* %l.0229, null
  br i1 %tobool230, label %for.end, label %for.body

for.cond:                                         ; preds = %for.body
  %next = getelementptr inbounds %struct.elt_list* %l.0231, i64 0, i32 0
  %l.0 = load %struct.elt_list** %next, align 8
  %tobool = icmp eq %struct.elt_list* %l.0, null
  br i1 %tobool, label %for.end, label %for.body

for.body:                                         ; preds = %sw.bb, %for.cond
  %l.0231 = phi %struct.elt_list* [ %l.0, %for.cond ], [ %l.0229, %sw.bb ]
  %elt = getelementptr inbounds %struct.elt_list* %l.0231, i64 0, i32 1
  %4 = load %struct.cselib_val_struct** %elt, align 8, !tbaa !16
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct* %4, i64 0, i32 1, i32 0
  %5 = load %struct.rtx_def** %val_rtx, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load4 = load i32* %6, align 8
  %bf.lshr214 = xor i32 %bf.load, %bf.load4
  %7 = and i32 %bf.lshr214, 16711680
  %cmp = icmp eq i32 %7, 0
  br i1 %cmp, label %return, label %for.cond

for.end:                                          ; preds = %for.cond, %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 806, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.cselib_subst_to_values, i64 0, i64 0)) #7
  unreachable

sw.bb12:                                          ; preds = %entry
  %bf.lshr.i = lshr i32 %bf.load, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %bf.clear3.i = and i32 %bf.load, 134217728
  %tobool.i = icmp ne i32 %bf.clear3.i, 0
  %cmp.i = icmp eq i32 %bf.clear.i, 51
  %or.cond.i = or i1 %tobool.i, %cmp.i
  br i1 %or.cond.i, label %if.then14, label %lor.lhs.false4.i

lor.lhs.false4.i:                                 ; preds = %sw.bb12
  %idxprom53.i = zext i32 %bf.clear.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom53.i
  %8 = load i32* %arrayidx.i, align 4, !tbaa !8
  switch i32 %8, label %lor.lhs.false10.i [
    i32 2, label %land.lhs.true.i
    i32 6, label %land.lhs.true.i
  ]

lor.lhs.false10.i:                                ; preds = %lor.lhs.false4.i
  %cmp13.i = icmp eq i32 %8, 8
  %9 = load i32* @flag_float_store, align 4
  %tobool14.i = icmp ne i32 %9, 0
  %or.cond33.i = and i1 %cmp13.i, %tobool14.i
  br i1 %or.cond33.i, label %if.then14, label %if.end.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false4.i, %lor.lhs.false4.i
  %.old.i = load i32* @flag_float_store, align 4, !tbaa !15
  %tobool14.old.i = icmp eq i32 %.old.i, 0
  br i1 %tobool14.old.i, label %if.end.i, label %if.then14

if.end.i:                                         ; preds = %land.lhs.true.i, %lor.lhs.false10.i
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx15.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %call.i = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %10, i32 %bf.clear.i, i32 0) #6
  %tobool16.i = icmp eq %struct.cselib_val_struct* %call.i, null
  br i1 %tobool16.i, label %if.then14, label %if.end18.i

if.end18.i:                                       ; preds = %if.end.i
  %addr_list.i = getelementptr inbounds %struct.cselib_val_struct* %call.i, i64 0, i32 3
  %l.0.i232 = load %struct.elt_list** %addr_list.i, align 8
  %tobool19.i233 = icmp eq %struct.elt_list* %l.0.i232, null
  br i1 %tobool19.i233, label %if.then14, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %next.i = getelementptr inbounds %struct.elt_list* %l.0.i234, i64 0, i32 0
  %l.0.i = load %struct.elt_list** %next.i, align 8
  %tobool19.i = icmp eq %struct.elt_list* %l.0.i, null
  br i1 %tobool19.i, label %if.then14, label %for.body.i

for.body.i:                                       ; preds = %if.end18.i, %for.cond.i
  %l.0.i234 = phi %struct.elt_list* [ %l.0.i, %for.cond.i ], [ %l.0.i232, %if.end18.i ]
  %elt.i = getelementptr inbounds %struct.elt_list* %l.0.i234, i64 0, i32 1
  %11 = load %struct.cselib_val_struct** %elt.i, align 8, !tbaa !16
  %val_rtx.i = getelementptr inbounds %struct.cselib_val_struct* %11, i64 0, i32 1, i32 0
  %12 = load %struct.rtx_def** %val_rtx.i, align 8, !tbaa !1
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load20.i = load i32* %13, align 8
  %bf.lshr21.i = lshr i32 %bf.load20.i, 16
  %bf.clear22.i = and i32 %bf.lshr21.i, 255
  %cmp23.i = icmp eq i32 %bf.clear22.i, %bf.clear.i
  br i1 %cmp23.i, label %cselib_lookup_mem.exit, label %for.cond.i

cselib_lookup_mem.exit:                           ; preds = %for.body.i
  %tobool13 = icmp eq %struct.cselib_val_struct* %11, null
  br i1 %tobool13, label %if.then14, label %return

if.then14:                                        ; preds = %for.cond.i, %if.end18.i, %if.end.i, %sw.bb12, %lor.lhs.false10.i, %land.lhs.true.i, %cselib_lookup_mem.exit
  %14 = load i32* @next_unknown_value, align 4, !tbaa !15
  %inc = add i32 %14, 1
  store i32 %inc, i32* @next_unknown_value, align 4, !tbaa !15
  %bf.load15 = load i32* %0, align 8
  %bf.lshr16 = lshr i32 %bf.load15, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  %call18 = tail call fastcc %struct.cselib_val_struct* @new_cselib_val(i32 %inc, i32 %bf.clear17)
  %val_rtx21.phi.trans.insert = getelementptr inbounds %struct.cselib_val_struct* %call18, i64 0, i32 1, i32 0
  %.pre249 = load %struct.rtx_def** %val_rtx21.phi.trans.insert, align 8, !tbaa !1
  br label %return

sw.bb23:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %15 = load i32* @next_unknown_value, align 4, !tbaa !15
  %inc24 = add i32 %15, 1
  store i32 %inc24, i32* @next_unknown_value, align 4, !tbaa !15
  %bf.load25 = load i32* %0, align 8
  %bf.lshr26 = lshr i32 %bf.load25, 16
  %bf.clear27 = and i32 %bf.lshr26, 255
  %call28 = tail call fastcc %struct.cselib_val_struct* @new_cselib_val(i32 %inc24, i32 %bf.clear27)
  %val_rtx30 = getelementptr inbounds %struct.cselib_val_struct* %call28, i64 0, i32 1, i32 0
  %16 = load %struct.rtx_def** %val_rtx30, align 8, !tbaa !1
  br label %return

sw.epilog:                                        ; preds = %entry
  %arrayidx32 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom213
  %17 = load i8* %arrayidx32, align 1, !tbaa !8
  %conv = zext i8 %17 to i64
  br label %for.cond33.outer.outer

for.cond33.outer.outer:                           ; preds = %if.end57, %if.end140, %sw.epilog
  %copy.0.ph.ph = phi %struct.rtx_def* [ %x, %sw.epilog ], [ %copy.1, %if.end57 ], [ %copy.4, %if.end140 ]
  %i.0.in.ph.ph = phi i64 [ %conv, %sw.epilog ], [ %indvars.iv.next, %if.end140 ], [ %indvars.iv.next, %if.end57 ]
  br label %for.cond33.outer

for.cond33.outer:                                 ; preds = %for.cond33.outer.outer, %for.cond68.preheader
  %i.0.in.ph = phi i64 [ %indvars.iv.next, %for.cond68.preheader ], [ %i.0.in.ph.ph, %for.cond33.outer.outer ]
  %sext = shl i64 %i.0.in.ph, 32
  %18 = ashr exact i64 %sext, 32
  br label %for.cond33

for.cond33:                                       ; preds = %for.cond33.outer, %for.body36
  %indvars.iv = phi i64 [ %18, %for.cond33.outer ], [ %indvars.iv.next, %for.body36 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %19 = trunc i64 %indvars.iv to i32
  %cmp34 = icmp sgt i32 %19, 0
  br i1 %cmp34, label %for.body36, label %return

for.body36:                                       ; preds = %for.cond33
  %arrayidx38 = getelementptr inbounds i8* %1, i64 %indvars.iv.next
  %20 = load i8* %arrayidx38, align 1, !tbaa !8
  switch i8 %20, label %for.cond33 [
    i8 101, label %if.then42
    i8 69, label %for.cond68.preheader
  ]

for.cond68.preheader:                             ; preds = %for.body36
  %arrayidx71 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next
  %rtvec = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtvec_def**
  %21 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem224 = getelementptr inbounds %struct.rtvec_def* %21, i64 0, i32 0
  %22 = load i32* %num_elem224, align 4, !tbaa !9
  %cmp72225 = icmp sgt i32 %22, 0
  br i1 %cmp72225, label %for.body74, label %for.cond33.outer

if.then42:                                        ; preds = %for.body36
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next
  %rtx = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call46 = tail call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %23)
  %24 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %cmp51 = icmp ne %struct.rtx_def* %call46, %24
  %cmp53 = icmp eq %struct.rtx_def* %copy.0.ph.ph, %x
  %or.cond = and i1 %cmp51, %cmp53
  br i1 %or.cond, label %if.then55, label %if.end57

if.then55:                                        ; preds = %if.then42
  %call56 = tail call %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def* %x) #6
  br label %if.end57

if.end57:                                         ; preds = %if.then42, %if.then55
  %copy.1 = phi %struct.rtx_def* [ %call56, %if.then55 ], [ %copy.0.ph.ph, %if.then42 ]
  %25 = getelementptr inbounds %struct.rtx_def* %copy.1, i64 0, i32 1, i64 %indvars.iv.next, i32 0
  %call46.c = ptrtoint %struct.rtx_def* %call46 to i64
  store i64 %call46.c, i64* %25, align 8, !tbaa !1
  br label %for.cond33.outer.outer

for.body74:                                       ; preds = %for.cond68.preheader, %if.end140
  %indvars.iv246 = phi i64 [ %indvars.iv.next247, %if.end140 ], [ 0, %for.cond68.preheader ]
  %indvars.iv244 = phi i32 [ %indvars.iv.next245, %if.end140 ], [ 0, %for.cond68.preheader ]
  %26 = phi %struct.rtvec_def* [ %39, %if.end140 ], [ %21, %for.cond68.preheader ]
  %copy.2226 = phi %struct.rtx_def* [ %copy.4, %if.end140 ], [ %copy.0.ph.ph, %for.cond68.preheader ]
  %arrayidx81 = getelementptr inbounds %struct.rtvec_def* %26, i64 0, i32 1, i64 %indvars.iv246
  %27 = load %struct.rtx_def** %arrayidx81, align 8, !tbaa !1
  %call82 = tail call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %27)
  %28 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx89 = getelementptr inbounds %struct.rtvec_def* %28, i64 0, i32 1, i64 %indvars.iv246
  %29 = load %struct.rtx_def** %arrayidx89, align 8, !tbaa !1
  %cmp90 = icmp eq %struct.rtx_def* %call82, %29
  br i1 %cmp90, label %if.end140, label %land.lhs.true92

land.lhs.true92:                                  ; preds = %for.body74
  %arrayidx99 = getelementptr inbounds %struct.rtx_def* %copy.2226, i64 0, i32 1, i64 %indvars.iv.next
  %rtvec100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtvec_def**
  %30 = load %struct.rtvec_def** %rtvec100, align 8, !tbaa !1
  %cmp101 = icmp eq %struct.rtvec_def* %28, %30
  br i1 %cmp101, label %if.then103, label %if.end140

if.then103:                                       ; preds = %land.lhs.true92
  %cmp104 = icmp eq %struct.rtx_def* %copy.2226, %x
  br i1 %cmp104, label %if.then106, label %if.end108

if.then106:                                       ; preds = %if.then103
  %call107 = tail call %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def* %x) #6
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  br label %if.end108

if.end108:                                        ; preds = %if.then106, %if.then103
  %31 = phi %struct.rtvec_def* [ %.pre, %if.then106 ], [ %28, %if.then103 ]
  %copy.3 = phi %struct.rtx_def* [ %call107, %if.then106 ], [ %copy.2226, %if.then103 ]
  %num_elem113 = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 0
  %32 = load i32* %num_elem113, align 4, !tbaa !9
  %call114 = tail call %struct.rtvec_def* @rtvec_alloc(i32 %32) #6
  %arrayidx117 = getelementptr inbounds %struct.rtx_def* %copy.3, i64 0, i32 1, i64 %indvars.iv.next
  %rtvec118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtvec_def**
  %33 = getelementptr inbounds %union.rtunion_def* %arrayidx117, i64 0, i32 0
  %call114.c = ptrtoint %struct.rtvec_def* %call114 to i64
  store i64 %call114.c, i64* %33, align 8, !tbaa !1
  %34 = trunc i64 %indvars.iv246 to i32
  %cmp120222 = icmp sgt i32 %34, 0
  br i1 %cmp120222, label %for.body122, label %if.end140

for.body122:                                      ; preds = %if.end108, %for.body122.for.body122_crit_edge
  %35 = phi %struct.rtvec_def* [ %.pre248, %for.body122.for.body122_crit_edge ], [ %call114, %if.end108 ]
  %indvars.iv242 = phi i64 [ %indvars.iv.next243, %for.body122.for.body122_crit_edge ], [ 0, %if.end108 ]
  %36 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %arrayidx129 = getelementptr inbounds %struct.rtvec_def* %36, i64 0, i32 1, i64 %indvars.iv242
  %37 = load %struct.rtx_def** %arrayidx129, align 8, !tbaa !1
  %arrayidx136 = getelementptr inbounds %struct.rtvec_def* %35, i64 0, i32 1, i64 %indvars.iv242
  store %struct.rtx_def* %37, %struct.rtx_def** %arrayidx136, align 8, !tbaa !1
  %indvars.iv.next243 = add nuw nsw i64 %indvars.iv242, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next243 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %indvars.iv244
  br i1 %exitcond, label %if.end140, label %for.body122.for.body122_crit_edge

for.body122.for.body122_crit_edge:                ; preds = %for.body122
  %.pre248 = load %struct.rtvec_def** %rtvec118, align 8, !tbaa !1
  br label %for.body122

if.end140:                                        ; preds = %for.body122, %if.end108, %for.body74, %land.lhs.true92
  %copy.4 = phi %struct.rtx_def* [ %copy.2226, %land.lhs.true92 ], [ %copy.2226, %for.body74 ], [ %copy.3, %if.end108 ], [ %copy.3, %for.body122 ]
  %arrayidx144 = getelementptr inbounds %struct.rtx_def* %copy.4, i64 0, i32 1, i64 %indvars.iv.next
  %rtvec145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtvec_def**
  %38 = load %struct.rtvec_def** %rtvec145, align 8, !tbaa !1
  %arrayidx147 = getelementptr inbounds %struct.rtvec_def* %38, i64 0, i32 1, i64 %indvars.iv246
  store %struct.rtx_def* %call82, %struct.rtx_def** %arrayidx147, align 8, !tbaa !1
  %indvars.iv.next247 = add nuw nsw i64 %indvars.iv246, 1
  %indvars.iv.next245 = add nuw nsw i32 %indvars.iv244, 1
  %39 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %39, i64 0, i32 0
  %40 = load i32* %num_elem, align 4, !tbaa !9
  %41 = trunc i64 %indvars.iv.next247 to i32
  %cmp72 = icmp slt i32 %41, %40
  br i1 %cmp72, label %for.body74, label %for.cond33.outer.outer

return:                                           ; preds = %for.body, %for.cond33, %if.then14, %cselib_lookup_mem.exit, %entry, %entry, %entry, %sw.bb23
  %retval.0 = phi %struct.rtx_def* [ %16, %sw.bb23 ], [ %x, %entry ], [ %x, %entry ], [ %x, %entry ], [ %12, %cselib_lookup_mem.exit ], [ %.pre249, %if.then14 ], [ %copy.0.ph.ph, %for.cond33 ], [ %5, %for.body ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.cselib_val_struct* @new_cselib_val(i32 %value, i32 %mode) #1 {
entry:
  %0 = load %struct.cselib_val_struct** @empty_vals, align 8, !tbaa !1
  %tobool = icmp eq %struct.cselib_val_struct* %0, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %u = getelementptr inbounds %struct.cselib_val_struct* %0, i64 0, i32 1
  %next_free = bitcast %union.anon* %u to %struct.cselib_val_struct**
  %1 = load %struct.cselib_val_struct** %next_free, align 8, !tbaa !1
  store %struct.cselib_val_struct* %1, %struct.cselib_val_struct** @empty_vals, align 8, !tbaa !1
  br label %if.end39

if.else:                                          ; preds = %entry
  %2 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %3 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 32
  br i1 %cmp, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 32) #6
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.else
  %4 = phi i8* [ %.pre, %if.then3 ], [ %3, %if.else ]
  %add.ptr = getelementptr inbounds i8* %4, i64 32
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %5 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp9 = icmp eq i8* %add.ptr, %5
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end
  %sub.ptr.lhs.cast14 = ptrtoint i8* %add.ptr to i64
  %6 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv16 = sext i32 %6 to i64
  %add = add nsw i64 %conv16, %sub.ptr.lhs.cast14
  %neg = xor i32 %6, -1
  %conv18 = sext i32 %neg to i64
  %and = and i64 %add, %conv18
  %add.ptr19 = getelementptr inbounds i8* null, i64 %and
  store i8* %add.ptr19, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %7 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast22 = ptrtoint i8* %add.ptr19 to i64
  %sub.ptr.rhs.cast23 = ptrtoint %struct._obstack_chunk* %7 to i64
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23
  %8 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast27 = ptrtoint i8* %8 to i64
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast23
  %cmp30 = icmp sgt i64 %sub.ptr.sub24, %sub.ptr.sub29
  br i1 %cmp30, label %if.then32, label %if.end35

if.then32:                                        ; preds = %if.end12
  store i8* %8, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end35

if.end35:                                         ; preds = %if.then32, %if.end12
  %9 = phi i8* [ %8, %if.then32 ], [ %add.ptr19, %if.end12 ]
  store i8* %9, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %10 = bitcast i8* %5 to %struct.cselib_val_struct*
  br label %if.end39

if.end39:                                         ; preds = %if.end35, %if.then
  %e.0 = phi %struct.cselib_val_struct* [ %0, %if.then ], [ %10, %if.end35 ]
  %cmp40 = icmp eq i32 %value, 0
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 710, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.new_cselib_val, i64 0, i64 0)) #7
  unreachable

if.end43:                                         ; preds = %if.end39
  %value44 = getelementptr inbounds %struct.cselib_val_struct* %e.0, i64 0, i32 0
  store i32 %value, i32* %value44, align 4, !tbaa !31
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 60, i32 %mode) #6
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct* %e.0, i64 0, i32 1, i32 0
  store %struct.rtx_def* %call, %struct.rtx_def** %val_rtx, align 8, !tbaa !1
  %11 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0
  %e.0.c = ptrtoint %struct.cselib_val_struct* %e.0 to i64
  store i64 %e.0.c, i64* %11, align 8, !tbaa !1
  %locs = getelementptr inbounds %struct.cselib_val_struct* %e.0, i64 0, i32 2
  %12 = bitcast %struct.elt_loc_list** %locs to i8*
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 16, i32 8, i1 false)
  ret %struct.cselib_val_struct* %e.0
}

declare %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def*) #4

declare %struct.rtvec_def* @rtvec_alloc(i32) #4

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #4

declare i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) #4

; Function Attrs: nounwind uwtable
define internal fastcc i32 @hash_rtx(%struct.rtx_def* %x, i32 %mode, i32 %create) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %add = add i32 %bf.clear2, %bf.clear
  switch i32 %bf.clear, label %sw.epilog [
    i32 66, label %sw.bb
    i32 61, label %sw.bb
    i32 54, label %sw.bb7
    i32 55, label %sw.bb14
    i32 56, label %sw.bb50
    i32 67, label %sw.bb70
    i32 68, label %sw.bb82
    i32 96, label %return
    i32 97, label %return
    i32 98, label %return
    i32 99, label %return
    i32 101, label %return
    i32 100, label %return
    i32 59, label %return
    i32 69, label %return
    i32 50, label %return
    i32 43, label %return
    i32 41, label %sw.bb95
  ]

sw.bb:                                            ; preds = %entry, %entry
  %call = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %x, i32 %bf.clear2, i32 %create)
  %tobool = icmp eq %struct.cselib_val_struct* %call, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %sw.bb
  %value = getelementptr inbounds %struct.cselib_val_struct* %call, i64 0, i32 0
  %1 = load i32* %value, align 4, !tbaa !31
  br label %return

sw.bb7:                                           ; preds = %entry
  %add8 = add i32 %mode, 6912
  %conv = zext i32 %add8 to i64
  %rtwint = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, i32 0
  %2 = load i64* %rtwint, align 8, !tbaa !13
  %conv10 = zext i32 %add to i64
  %add9 = add i64 %conv10, %conv
  %add11 = add i64 %add9, %2
  %conv12 = trunc i64 %add11 to i32
  %tobool13 = icmp ne i32 %conv12, 0
  %cond = select i1 %tobool13, i32 %conv12, i32 54
  br label %return

sw.bb14:                                          ; preds = %entry
  %add19 = shl nsw i32 %add, 1
  %cmp = icmp eq i32 %bf.clear2, 0
  br i1 %cmp, label %if.else, label %for.cond.preheader

for.cond.preheader:                               ; preds = %sw.bb14
  %3 = load i8* getelementptr inbounds ([153 x i8]* @rtx_length, i64 0, i64 55), align 1, !tbaa !8
  %cmp26329 = icmp ugt i8 %3, 2
  br i1 %cmp26329, label %for.body.lr.ph, label %if.end44

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %conv25 = zext i8 %3 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv354 = phi i64 [ 2, %for.body.lr.ph ], [ %indvars.iv.next355, %for.body ]
  %hash.0330 = phi i32 [ %add19, %for.body.lr.ph ], [ %conv33, %for.body ]
  %rtwint30 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv354, i32 0
  %4 = load i64* %rtwint30, align 8, !tbaa !13
  %conv31 = zext i32 %hash.0330 to i64
  %add32 = add nsw i64 %4, %conv31
  %conv33 = trunc i64 %add32 to i32
  %indvars.iv.next355 = add nuw nsw i64 %indvars.iv354, 1
  %5 = trunc i64 %indvars.iv.next355 to i32
  %cmp26 = icmp slt i32 %5, %conv25
  br i1 %cmp26, label %for.body, label %if.end44

if.else:                                          ; preds = %sw.bb14
  %rtwint36 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, i32 0
  %6 = load i64* %rtwint36, align 8, !tbaa !13
  %conv37 = trunc i64 %6 to i32
  %rtwint40 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 2, i32 0
  %7 = load i64* %rtwint40, align 8, !tbaa !13
  %conv41 = trunc i64 %7 to i32
  %add42 = add i32 %conv37, %add19
  %add43 = add i32 %add42, %conv41
  br label %if.end44

if.end44:                                         ; preds = %for.body, %for.cond.preheader, %if.else
  %hash.1 = phi i32 [ %add43, %if.else ], [ %add19, %for.cond.preheader ], [ %conv33, %for.body ]
  %tobool45 = icmp ne i32 %hash.1, 0
  %cond49 = select i1 %tobool45, i32 %hash.1, i32 55
  br label %return

sw.bb50:                                          ; preds = %entry
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0
  %9 = load i32* %num_elem, align 4, !tbaa !9
  %cmp54333 = icmp sgt i32 %9, 0
  br i1 %cmp54333, label %for.body56, label %return

for.body56:                                       ; preds = %sw.bb50, %for.body56.for.body56_crit_edge
  %10 = phi %struct.rtvec_def* [ %.pre, %for.body56.for.body56_crit_edge ], [ %8, %sw.bb50 ]
  %indvars.iv356 = phi i64 [ %indvars.iv.next357, %for.body56.for.body56_crit_edge ], [ 0, %sw.bb50 ]
  %hash.2334 = phi i32 [ %add66, %for.body56.for.body56_crit_edge ], [ %add, %sw.bb50 ]
  %arrayidx61 = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 1, i64 %indvars.iv356
  %11 = load %struct.rtx_def** %arrayidx61, align 8, !tbaa !1
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load62 = load i32* %12, align 8
  %bf.lshr63 = lshr i32 %bf.load62, 16
  %bf.clear64 = and i32 %bf.lshr63, 255
  %call65 = tail call fastcc i32 @hash_rtx(%struct.rtx_def* %11, i32 %bf.clear64, i32 0)
  %add66 = add i32 %call65, %hash.2334
  %indvars.iv.next357 = add nuw nsw i64 %indvars.iv356, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next357 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %9
  br i1 %exitcond, label %return, label %for.body56.for.body56_crit_edge

for.body56.for.body56_crit_edge:                  ; preds = %for.body56
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  br label %for.body56

sw.bb70:                                          ; preds = %entry
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %14 = ptrtoint %struct.rtx_def* %13 to i64
  %conv74 = zext i32 %add to i64
  %add73 = add i64 %conv74, 8576
  %add75 = add i64 %add73, %14
  %conv76 = trunc i64 %add75 to i32
  %tobool77 = icmp ne i32 %conv76, 0
  %cond81 = select i1 %tobool77, i32 %conv76, i32 67
  br label %return

sw.bb82:                                          ; preds = %entry
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx84 to i8**
  %15 = load i8** %rtstr, align 8, !tbaa !1
  %16 = ptrtoint i8* %15 to i64
  %conv86 = zext i32 %add to i64
  %add85 = add i64 %conv86, 8704
  %add87 = add i64 %add85, %16
  %conv88 = trunc i64 %add87 to i32
  %tobool89 = icmp ne i32 %conv88, 0
  %cond93 = select i1 %tobool89, i32 %conv88, i32 68
  br label %return

sw.bb95:                                          ; preds = %entry
  %bf.clear98 = and i32 %bf.load, 134217728
  %tobool99 = icmp eq i32 %bf.clear98, 0
  br i1 %tobool99, label %sw.epilog, label %return

sw.epilog:                                        ; preds = %sw.bb95, %entry
  %idxprom102292 = zext i32 %bf.clear to i64
  %arrayidx103 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom102292
  %17 = load i8* %arrayidx103, align 1, !tbaa !8
  %arrayidx106 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom102292
  %18 = load i8** %arrayidx106, align 8, !tbaa !1
  %cmp108311324 = icmp eq i8 %17, 0
  br i1 %cmp108311324, label %for.end207, label %for.body110.lr.ph.lr.ph

for.body110.lr.ph.lr.ph:                          ; preds = %sw.epilog
  %conv104 = zext i8 %17 to i64
  br label %for.body110.lr.ph

for.body110.lr.ph:                                ; preds = %for.body110.lr.ph.lr.ph, %for.cond107.outer.backedge
  %i.2310326.in = phi i64 [ %conv104, %for.body110.lr.ph.lr.ph ], [ %indvars.iv.next, %for.cond107.outer.backedge ]
  %hash.3.ph325 = phi i32 [ %add, %for.body110.lr.ph.lr.ph ], [ %hash.3.ph.be, %for.cond107.outer.backedge ]
  %sext = shl i64 %i.2310326.in, 32
  %19 = ashr exact i64 %sext, 32
  br label %for.body110

for.body110:                                      ; preds = %for.body110.lr.ph, %for.cond107.backedge
  %indvars.iv = phi i64 [ %19, %for.body110.lr.ph ], [ %indvars.iv.next, %for.cond107.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx112 = getelementptr inbounds i8* %18, i64 %indvars.iv.next
  %20 = load i8* %arrayidx112, align 1, !tbaa !8
  switch i8 %20, label %if.else200 [
    i8 101, label %if.then116
    i8 69, label %for.cond134.preheader
    i8 115, label %if.then166
    i8 105, label %if.then183
    i8 48, label %for.cond107.backedge
    i8 116, label %for.cond107.backedge
  ]

for.cond107.backedge:                             ; preds = %for.body110, %for.body110, %if.then166
  %21 = trunc i64 %indvars.iv.next to i32
  %cmp108 = icmp sgt i32 %21, 0
  br i1 %cmp108, label %for.body110, label %for.end207

for.cond134.preheader:                            ; preds = %for.body110
  %arrayidx137 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next
  %rtvec138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtvec_def**
  %22 = load %struct.rtvec_def** %rtvec138, align 8, !tbaa !1
  %num_elem139318 = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 0
  %23 = load i32* %num_elem139318, align 4, !tbaa !9
  %cmp140319 = icmp sgt i32 %23, 0
  br i1 %cmp140319, label %for.body142, label %for.cond107.outer.backedge

if.then116:                                       ; preds = %for.body110
  %arrayidx119 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next
  %rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx120, align 8, !tbaa !1
  %call121 = tail call fastcc i32 @hash_rtx(%struct.rtx_def* %24, i32 0, i32 %create)
  %cmp122 = icmp eq i32 %call121, 0
  br i1 %cmp122, label %return, label %if.end125

if.end125:                                        ; preds = %if.then116
  %add126 = add i32 %call121, %hash.3.ph325
  br label %for.cond107.outer.backedge

for.cond107.outer.backedge:                       ; preds = %while.body, %if.end155, %while.cond.preheader, %for.cond134.preheader, %if.end125, %if.then183
  %hash.3.ph.be = phi i32 [ %add126, %if.end125 ], [ %add187, %if.then183 ], [ %hash.3.ph325, %for.cond134.preheader ], [ %hash.3.ph325, %while.cond.preheader ], [ %add156, %if.end155 ], [ %add175, %while.body ]
  %i.2312342 = trunc i64 %indvars.iv.next to i32
  %cmp108311 = icmp sgt i32 %i.2312342, 0
  br i1 %cmp108311, label %for.body110.lr.ph, label %for.end207

for.body142:                                      ; preds = %for.cond134.preheader, %if.end155
  %indvars.iv352 = phi i64 [ %indvars.iv.next353, %if.end155 ], [ 0, %for.cond134.preheader ]
  %25 = phi %struct.rtvec_def* [ %27, %if.end155 ], [ %22, %for.cond134.preheader ]
  %hash.4320 = phi i32 [ %add156, %if.end155 ], [ %hash.3.ph325, %for.cond134.preheader ]
  %arrayidx150 = getelementptr inbounds %struct.rtvec_def* %25, i64 0, i32 1, i64 %indvars.iv352
  %26 = load %struct.rtx_def** %arrayidx150, align 8, !tbaa !1
  %call151 = tail call fastcc i32 @hash_rtx(%struct.rtx_def* %26, i32 0, i32 %create)
  %cmp152 = icmp eq i32 %call151, 0
  br i1 %cmp152, label %return, label %if.end155

if.end155:                                        ; preds = %for.body142
  %add156 = add i32 %call151, %hash.4320
  %indvars.iv.next353 = add nuw nsw i64 %indvars.iv352, 1
  %27 = load %struct.rtvec_def** %rtvec138, align 8, !tbaa !1
  %num_elem139 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 0
  %28 = load i32* %num_elem139, align 4, !tbaa !9
  %29 = trunc i64 %indvars.iv.next353 to i32
  %cmp140 = icmp slt i32 %29, %28
  br i1 %cmp140, label %for.body142, label %for.cond107.outer.backedge

if.then166:                                       ; preds = %for.body110
  %arrayidx169 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next
  %rtstr170 = bitcast %union.rtunion_def* %arrayidx169 to i8**
  %30 = load i8** %rtstr170, align 8, !tbaa !1
  %tobool171 = icmp eq i8* %30, null
  br i1 %tobool171, label %for.cond107.backedge, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then166
  %31 = load i8* %30, align 1, !tbaa !8
  %tobool173314 = icmp eq i8 %31, 0
  br i1 %tobool173314, label %for.cond107.outer.backedge, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %32 = phi i8 [ %33, %while.body ], [ %31, %while.cond.preheader ]
  %p.0316 = phi i8* [ %incdec.ptr, %while.body ], [ %30, %while.cond.preheader ]
  %hash.5315 = phi i32 [ %add175, %while.body ], [ %hash.3.ph325, %while.cond.preheader ]
  %incdec.ptr = getelementptr inbounds i8* %p.0316, i64 1
  %conv174 = zext i8 %32 to i32
  %add175 = add i32 %conv174, %hash.5315
  %33 = load i8* %incdec.ptr, align 1, !tbaa !8
  %tobool173 = icmp eq i8 %33, 0
  br i1 %tobool173, label %for.cond107.outer.backedge, label %while.body

if.then183:                                       ; preds = %for.body110
  %arrayidx186 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next
  %rtint = bitcast %union.rtunion_def* %arrayidx186 to i32*
  %34 = load i32* %rtint, align 4, !tbaa !15
  %add187 = add i32 %34, %hash.3.ph325
  br label %for.cond107.outer.backedge

if.else200:                                       ; preds = %for.body110
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 688, i8* getelementptr inbounds ([9 x i8]* @__FUNCTION__.hash_rtx, i64 0, i64 0)) #7
  unreachable

for.end207:                                       ; preds = %for.cond107.outer.backedge, %for.cond107.backedge, %sw.epilog
  %hash.3.ph.lcssa309 = phi i32 [ %add, %sw.epilog ], [ %hash.3.ph325, %for.cond107.backedge ], [ %hash.3.ph.be, %for.cond107.outer.backedge ]
  %tobool208 = icmp eq i32 %hash.3.ph.lcssa309, 0
  br i1 %tobool208, label %cond.false210, label %return

cond.false210:                                    ; preds = %for.end207
  %bf.load211 = load i32* %0, align 8
  %bf.clear212 = and i32 %bf.load211, 65535
  %add213 = add i32 %bf.clear212, 1
  br label %return

return:                                           ; preds = %for.body56, %if.then116, %for.body142, %sw.bb50, %cond.false210, %for.end207, %sw.bb95, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb, %sw.bb82, %sw.bb70, %if.end44, %sw.bb7, %if.end
  %retval.0 = phi i32 [ %cond93, %sw.bb82 ], [ %cond81, %sw.bb70 ], [ %cond49, %if.end44 ], [ %cond, %sw.bb7 ], [ %1, %if.end ], [ 0, %sw.bb ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %sw.bb95 ], [ %add213, %cond.false210 ], [ %hash.3.ph.lcssa309, %for.end207 ], [ %add, %sw.bb50 ], [ 0, %for.body142 ], [ 0, %if.then116 ], [ %add66, %for.body56 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @cselib_process_insn(%struct.rtx_def* %insn) #1 {
entry:
  %sets.i = alloca [106 x %struct.set], align 16
  store %struct.rtx_def* %insn, %struct.rtx_def** @cselib_current_insn, align 8, !tbaa !1
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %lor.lhs.false4 [
    i32 36, label %if.then
    i32 34, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %entry
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 28, %struct.rtx_def* null) #6
  %tobool = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool, label %land.lhs.true.lor.lhs.false4_crit_edge, label %if.then

land.lhs.true.lor.lhs.false4_crit_edge:           ; preds = %land.lhs.true
  %bf.load5.pre = load i32* %0, align 8
  br label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %land.lhs.true.lor.lhs.false4_crit_edge, %entry
  %bf.load19 = phi i32 [ %bf.load5.pre, %land.lhs.true.lor.lhs.false4_crit_edge ], [ %bf.load, %entry ]
  %bf.clear6 = and i32 %bf.load19, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 32
  br i1 %cmp7, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %lor.lhs.false4
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load9 = load i32* %2, align 8
  %3 = and i32 %bf.load9, 134283263
  %4 = icmp eq i32 %3, 134217769
  br i1 %4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true8, %entry, %land.lhs.true
  %5 = load %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %elements_used36.i = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 1
  %6 = load i64* %elements_used36.i, align 8, !tbaa !27
  %cmp237.i = icmp eq i64 %6, 0
  br i1 %cmp237.i, label %if.end.i, label %for.body4.i

for.body4.i:                                      ; preds = %if.then, %for.body4.i
  %7 = phi %struct.varray_head_tag* [ %10, %for.body4.i ], [ %5, %if.then ]
  %conv39.i = phi i64 [ %conv.i, %for.body4.i ], [ 0, %if.then ]
  %i.138.i = phi i32 [ %inc13.i, %for.body4.i ], [ 0, %if.then ]
  %data6.i = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 4
  %u.i = bitcast %union.varray_data_tag* %data6.i to [1 x i32]*
  %arrayidx7.i = getelementptr inbounds [1 x i32]* %u.i, i64 0, i64 %conv39.i
  %8 = load i32* %arrayidx7.i, align 4, !tbaa !15
  %idxprom8.i = zext i32 %8 to i64
  %9 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data9.i = getelementptr inbounds %struct.varray_head_tag* %9, i64 0, i32 4
  %te10.i = bitcast %union.varray_data_tag* %data9.i to [1 x %struct.elt_list*]*
  %arrayidx11.i = getelementptr inbounds [1 x %struct.elt_list*]* %te10.i, i64 0, i64 %idxprom8.i
  store %struct.elt_list* null, %struct.elt_list** %arrayidx11.i, align 8, !tbaa !1
  %inc13.i = add i32 %i.138.i, 1
  %conv.i = zext i32 %inc13.i to i64
  %10 = load %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %elements_used.i = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 1
  %11 = load i64* %elements_used.i, align 8, !tbaa !27
  %cmp2.i = icmp ult i64 %conv.i, %11
  br i1 %cmp2.i, label %for.body4.i, label %if.end.i

if.end.i:                                         ; preds = %for.body4.i, %if.then
  %12 = phi %struct.varray_head_tag* [ %5, %if.then ], [ %10, %for.body4.i ]
  store i32 0, i32* @max_value_regs, align 4, !tbaa !15
  %elements_used15.i = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 1
  store i64 0, i64* %elements_used15.i, align 8, !tbaa !27
  %13 = load %struct.htab** @hash_table, align 8, !tbaa !1
  tail call void @htab_empty(%struct.htab* %13) #6
  %14 = load i8** @cselib_startobj, align 8, !tbaa !1
  %15 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %16 = bitcast %struct._obstack_chunk* %15 to i8*
  %cmp16.i = icmp ugt i8* %14, %16
  %17 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8
  %cmp18.i = icmp ult i8* %14, %17
  %or.cond.i = and i1 %cmp16.i, %cmp18.i
  br i1 %or.cond.i, label %if.then20.i, label %if.else21.i

if.then20.i:                                      ; preds = %if.end.i
  store i8* %14, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  store i8* %14, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %clear_table.exit

if.else21.i:                                      ; preds = %if.end.i
  tail call void @obstack_free(%struct.obstack* @cselib_obstack, i8* %14) #6
  br label %clear_table.exit

clear_table.exit:                                 ; preds = %if.then20.i, %if.else21.i
  store %struct.cselib_val_struct* null, %struct.cselib_val_struct** @empty_vals, align 8, !tbaa !1
  store %struct.elt_list* null, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  store %struct.elt_loc_list* null, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  store i32 0, i32* @n_useless_values, align 4, !tbaa !15
  store i32 0, i32* @next_unknown_value, align 4, !tbaa !15
  br label %if.end80

if.end:                                           ; preds = %land.lhs.true8, %lor.lhs.false4
  %idxprom99 = zext i32 %bf.clear6 to i64
  %arrayidx21 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom99
  %18 = load i8* %arrayidx21, align 1, !tbaa !8
  %cmp22 = icmp eq i8 %18, 105
  br i1 %cmp22, label %if.end25, label %if.then24

if.then24:                                        ; preds = %if.end
  store %struct.rtx_def* null, %struct.rtx_def** @cselib_current_insn, align 8, !tbaa !1
  br label %if.end80

if.end25:                                         ; preds = %if.end
  %cmp28 = icmp eq i32 %bf.clear6, 34
  br i1 %cmp28, label %for.body, label %if.end44

for.body:                                         ; preds = %if.end25, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end25 ]
  %arrayidx34 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv
  %19 = load i8* %arrayidx34, align 1, !tbaa !8
  %tobool35 = icmp eq i8 %19, 0
  br i1 %tobool35, label %for.inc, label %if.then36

if.then36:                                        ; preds = %for.body
  %20 = trunc i64 %indvars.iv to i32
  tail call fastcc void @cselib_invalidate_regno(i32 %20, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond124 = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond124, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %bf.load38 = load i32* %0, align 8
  %bf.clear40 = and i32 %bf.load38, 67108864
  %tobool41 = icmp eq i32 %bf.clear40, 0
  br i1 %tobool41, label %if.then42, label %if.end44

if.then42:                                        ; preds = %for.end
  %21 = load %struct.rtx_def** @callmem, align 8, !tbaa !1
  %22 = load %struct.htab** @hash_table, align 8, !tbaa !1
  %23 = bitcast %struct.rtx_def* %21 to i8*
  tail call void @htab_traverse(%struct.htab* %22, i32 (i8**, i8*)* @cselib_invalidate_mem_1, i8* %23) #6
  br label %if.end44

if.end44:                                         ; preds = %for.end, %if.then42, %if.end25
  %24 = bitcast [106 x %struct.set]* %sets.i to i8*
  call void @llvm.lifetime.start(i64 3392, i8* %24) #6
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !1
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load.i = load i32* %26, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 38
  br i1 %cmp.i, label %if.then.i, label %if.end.i100

if.then.i:                                        ; preds = %if.end44
  %fld4.i = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1
  %rtx6.i = bitcast [1 x %union.rtunion_def]* %fld4.i to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !1
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 1
  %rtx9.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx9.i, align 8, !tbaa !1
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load10.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end.i100

if.end.i100:                                      ; preds = %if.then.i, %if.end44
  %bf.load10.i = phi i32 [ %bf.load10.pre.i, %if.then.i ], [ %bf.load.i, %if.end44 ]
  %body.0.i = phi %struct.rtx_def* [ %28, %if.then.i ], [ %25, %if.end44 ]
  %cond.0.i = phi %struct.rtx_def* [ %27, %if.then.i ], [ null, %if.end44 ]
  %bf.clear11.i = and i32 %bf.load10.i, 65535
  switch i32 %bf.clear11.i, label %for.end114.thread.i [
    i32 47, label %if.end51.thread.i
    i32 39, label %if.then25.i
  ]

if.end51.thread.i:                                ; preds = %if.end.i100
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %body.0.i, i64 0, i32 1, i64 1
  %rtx16.i = bitcast %union.rtunion_def* %arrayidx15.i to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx16.i, align 8, !tbaa !1
  %src.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 0, i32 0
  store %struct.rtx_def* %29, %struct.rtx_def** %src.i, align 16, !tbaa !33
  %arrayidx19.i = getelementptr inbounds %struct.rtx_def* %body.0.i, i64 0, i32 1, i64 0
  %rtx20.i = bitcast %union.rtunion_def* %arrayidx19.i to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx20.i, align 8, !tbaa !1
  %dest.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 0, i32 1
  store %struct.rtx_def* %30, %struct.rtx_def** %dest.i, align 8, !tbaa !35
  br label %for.body54.lr.ph.i

if.then25.i:                                      ; preds = %if.end.i100
  %arrayidx27.i = getelementptr inbounds %struct.rtx_def* %body.0.i, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx27.i to %struct.rtvec_def**
  %31 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !1
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 0
  %32 = load i32* %num_elem.i, align 4, !tbaa !9
  br label %for.cond.outer.i

for.cond.outer.i:                                 ; preds = %if.then36.i, %if.then25.i
  %indvars.iv194.i = phi i64 [ %indvars.iv.next195.i, %if.then36.i ], [ 0, %if.then25.i ]
  %i.0.in.ph.i = phi i32 [ %37, %if.then36.i ], [ %32, %if.then25.i ]
  %33 = sext i32 %i.0.in.ph.i to i64
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %for.cond.outer.i
  %indvars.iv192.i = phi i64 [ %33, %for.cond.outer.i ], [ %indvars.iv.next193.i, %for.body.i ]
  %indvars.iv.next193.i = add nsw i64 %indvars.iv192.i, -1
  %34 = trunc i64 %indvars.iv192.i to i32
  %cmp28.i = icmp sgt i32 %34, 0
  br i1 %cmp28.i, label %for.body.i, label %if.end51.i

for.body.i:                                       ; preds = %for.cond.i
  %arrayidx32.i = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 1, i64 %indvars.iv.next193.i
  %35 = load %struct.rtx_def** %arrayidx32.i, align 8, !tbaa !1
  %36 = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 0
  %bf.load33.i = load i32* %36, align 8
  %bf.clear34.i = and i32 %bf.load33.i, 65535
  %cmp35.i = icmp eq i32 %bf.clear34.i, 47
  br i1 %cmp35.i, label %if.then36.i, label %for.cond.i

if.then36.i:                                      ; preds = %for.body.i
  %37 = trunc i64 %indvars.iv.next193.i to i32
  %arrayidx38.i = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 1, i64 1
  %rtx39.i = bitcast %union.rtunion_def* %arrayidx38.i to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx39.i, align 8, !tbaa !1
  %src42.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv194.i, i32 0
  store %struct.rtx_def* %38, %struct.rtx_def** %src42.i, align 16, !tbaa !33
  %arrayidx44.i = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 1, i64 0
  %rtx45.i = bitcast %union.rtunion_def* %arrayidx44.i to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx45.i, align 8, !tbaa !1
  %dest48.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv194.i, i32 1
  store %struct.rtx_def* %39, %struct.rtx_def** %dest48.i, align 8, !tbaa !35
  %indvars.iv.next195.i = add nuw nsw i64 %indvars.iv194.i, 1
  br label %for.cond.outer.i

if.end51.i:                                       ; preds = %for.cond.i
  %40 = trunc i64 %indvars.iv194.i to i32
  %cmp53185.i = icmp sgt i32 %40, 0
  br i1 %cmp53185.i, label %for.body54.lr.ph.i, label %for.end114.thread.i

for.body54.lr.ph.i:                               ; preds = %if.end51.i, %if.end51.thread.i
  %n_sets.2205.i = phi i32 [ 1, %if.end51.thread.i ], [ %40, %if.end51.i ]
  %tobool.i = icmp eq %struct.rtx_def* %cond.0.i, null
  br label %for.body54.i

for.body54.i:                                     ; preds = %for.inc112.i, %for.body54.lr.ph.i
  %indvars.iv188.i = phi i64 [ 0, %for.body54.lr.ph.i ], [ %indvars.iv.next189.i, %for.inc112.i ]
  %dest58.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv188.i, i32 1
  %41 = load %struct.rtx_def** %dest58.i, align 8, !tbaa !35
  %42 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 0
  %bf.load62.i = load i32* %42, align 8
  %bf.clear63.i = and i32 %bf.load62.i, 65535
  %cmp64.i = icmp eq i32 %bf.clear63.i, 64
  br i1 %cmp64.i, label %if.then65.i, label %if.end72.i

if.then65.i:                                      ; preds = %for.body54.i
  %arrayidx67.i = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 0
  %rtx68.i = bitcast %union.rtunion_def* %arrayidx67.i to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx68.i, align 8, !tbaa !1
  store %struct.rtx_def* %43, %struct.rtx_def** %dest58.i, align 8, !tbaa !35
  %.phi.trans.insert197.i = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 0
  %bf.load73.pre.i = load i32* %.phi.trans.insert197.i, align 8
  br label %if.end72.i

if.end72.i:                                       ; preds = %if.then65.i, %for.body54.i
  %bf.load73.i = phi i32 [ %bf.load73.pre.i, %if.then65.i ], [ %bf.load62.i, %for.body54.i ]
  %dest55.0.i = phi %struct.rtx_def* [ %43, %if.then65.i ], [ %41, %for.body54.i ]
  %44 = getelementptr inbounds %struct.rtx_def* %dest55.0.i, i64 0, i32 0
  %bf.clear74.i = and i32 %bf.load73.i, 65535
  switch i32 %bf.clear74.i, label %for.inc112.i [
    i32 61, label %if.then79.i
    i32 66, label %if.then79.i
  ]

if.then79.i:                                      ; preds = %if.end72.i, %if.end72.i
  %.in = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv188.i, i32 0
  %45 = load %struct.rtx_def** %.in, align 16
  br i1 %tobool.i, label %if.end87.i, label %if.then84.i

if.then84.i:                                      ; preds = %if.then79.i
  %46 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 0
  %bf.load85.i = load i32* %46, align 8
  %bf.lshr.i = lshr i32 %bf.load85.i, 16
  %bf.clear86.i = and i32 %bf.lshr.i, 255
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 %bf.clear86.i, %struct.rtx_def* %cond.0.i, %struct.rtx_def* %45, %struct.rtx_def* %dest55.0.i) #6
  %bf.load88.pre.i = load i32* %44, align 8
  br label %if.end87.i

if.end87.i:                                       ; preds = %if.then84.i, %if.then79.i
  %bf.load88.i = phi i32 [ %bf.load88.pre.i, %if.then84.i ], [ %bf.load73.i, %if.then79.i ]
  %src80.0.i = phi %struct.rtx_def* [ %call.i, %if.then84.i ], [ %45, %if.then79.i ]
  %bf.lshr89.i = lshr i32 %bf.load88.i, 16
  %bf.clear90.i = and i32 %bf.lshr89.i, 255
  %call91.i = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %src80.0.i, i32 %bf.clear90.i, i32 1) #6
  %src_elt.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv188.i, i32 2
  store %struct.cselib_val_struct* %call91.i, %struct.cselib_val_struct** %src_elt.i, align 16, !tbaa !36
  %bf.load94.i = load i32* %44, align 8
  %bf.clear95.i = and i32 %bf.load94.i, 65535
  %cmp96.i = icmp eq i32 %bf.clear95.i, 66
  br i1 %cmp96.i, label %if.then97.i, label %if.else106.i

if.then97.i:                                      ; preds = %if.end87.i
  %arrayidx99.i = getelementptr inbounds %struct.rtx_def* %dest55.0.i, i64 0, i32 1, i64 0
  %rtx100.i = bitcast %union.rtunion_def* %arrayidx99.i to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx100.i, align 8, !tbaa !1
  %48 = load i32* @target_flags, align 4, !tbaa !15
  %and.i = lshr i32 %48, 25
  %49 = and i32 %and.i, 1
  %50 = or i32 %49, 4
  %call103.i = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %47, i32 %50, i32 1) #6
  %dest_addr_elt.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv188.i, i32 3
  store %struct.cselib_val_struct* %call103.i, %struct.cselib_val_struct** %dest_addr_elt.i, align 8, !tbaa !37
  br label %for.inc112.i

if.else106.i:                                     ; preds = %if.end87.i
  %dest_addr_elt109.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv188.i, i32 3
  store %struct.cselib_val_struct* null, %struct.cselib_val_struct** %dest_addr_elt109.i, align 8, !tbaa !37
  br label %for.inc112.i

for.inc112.i:                                     ; preds = %if.else106.i, %if.then97.i, %if.end72.i
  %indvars.iv.next189.i = add nuw nsw i64 %indvars.iv188.i, 1
  %lftr.wideiv122 = trunc i64 %indvars.iv.next189.i to i32
  %exitcond123 = icmp eq i32 %lftr.wideiv122, %n_sets.2205.i
  br i1 %exitcond123, label %for.end114.i, label %for.body54.i

for.end114.thread.i:                              ; preds = %if.end51.i, %if.end.i100
  tail call void @note_stores(%struct.rtx_def* %body.0.i, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @cselib_invalidate_rtx, i8* null) #6
  br label %cselib_record_sets.exit

for.end114.i:                                     ; preds = %for.inc112.i
  tail call void @note_stores(%struct.rtx_def* %body.0.i, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @cselib_invalidate_rtx, i8* null) #6
  br label %for.body117.i

for.body117.i:                                    ; preds = %for.inc137.i, %for.end114.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc137.i ], [ 0, %for.end114.i ]
  %dest121.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv.i, i32 1
  %51 = load %struct.rtx_def** %dest121.i, align 8, !tbaa !35
  %52 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 0
  %bf.load122.i = load i32* %52, align 8
  %bf.clear123.i = and i32 %bf.load122.i, 65535
  switch i32 %bf.clear123.i, label %for.inc137.i [
    i32 61, label %if.then129.i
    i32 66, label %if.then129.i
  ]

if.then129.i:                                     ; preds = %for.body117.i, %for.body117.i
  %src_elt132.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv.i, i32 2
  %53 = load %struct.cselib_val_struct** %src_elt132.i, align 16, !tbaa !36
  %dest_addr_elt135.i = getelementptr inbounds [106 x %struct.set]* %sets.i, i64 0, i64 %indvars.iv.i, i32 3
  %54 = load %struct.cselib_val_struct** %dest_addr_elt135.i, align 8, !tbaa !37
  %cmp.i.i = icmp eq i32 %bf.clear123.i, 61
  br i1 %cmp.i.i, label %cond.true.i.i, label %cond.end.i.i

cond.true.i.i:                                    ; preds = %if.then129.i
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 0
  %rtuint.i.i = bitcast %union.rtunion_def* %arrayidx.i.i to i32*
  %55 = load i32* %rtuint.i.i, align 4, !tbaa !15
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.true.i.i, %if.then129.i
  %cond.i.i = phi i32 [ %55, %cond.true.i.i ], [ -1, %if.then129.i ]
  %cmp1.i.i = icmp eq %struct.cselib_val_struct* %53, null
  br i1 %cmp1.i.i, label %for.inc137.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %cond.end.i.i
  %call.i.i = tail call i32 @side_effects_p(%struct.rtx_def* %51) #6
  %tobool.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.i.i, label %if.end.i.i, label %for.inc137.i

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %cmp2.i.i = icmp sgt i32 %cond.i.i, -1
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.else.i.i

if.then3.i.i:                                     ; preds = %if.end.i.i
  %idxprom.i.i = sext i32 %cond.i.i to i64
  %56 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data.i.i = getelementptr inbounds %struct.varray_head_tag* %56, i64 0, i32 4
  %te.i.i = bitcast %union.varray_data_tag* %data.i.i to [1 x %struct.elt_list*]*
  %arrayidx4.i.i = getelementptr inbounds [1 x %struct.elt_list*]* %te.i.i, i64 0, i64 %idxprom.i.i
  %57 = load %struct.elt_list** %arrayidx4.i.i, align 8, !tbaa !1
  %cmp5.i.i = icmp eq %struct.elt_list* %57, null
  br i1 %cmp5.i.i, label %do.body.i.i, label %if.end15.i.i

do.body.i.i:                                      ; preds = %if.then3.i.i
  %58 = load %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %elements_used.i.i = getelementptr inbounds %struct.varray_head_tag* %58, i64 0, i32 1
  %59 = load i64* %elements_used.i.i, align 8, !tbaa !27
  %num_elements.i.i = getelementptr inbounds %struct.varray_head_tag* %58, i64 0, i32 0
  %60 = load i64* %num_elements.i.i, align 8, !tbaa !29
  %cmp7.i.i = icmp ult i64 %59, %60
  br i1 %cmp7.i.i, label %if.end11.i.i, label %if.then8.i.i

if.then8.i.i:                                     ; preds = %do.body.i.i
  %mul.i.i = shl i64 %60, 1
  %call10.i.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %58, i64 %mul.i.i) #6
  store %struct.varray_head_tag* %call10.i.i, %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %elements_used12.phi.trans.insert.i.i = getelementptr inbounds %struct.varray_head_tag* %call10.i.i, i64 0, i32 1
  %.pre.i.i = load i64* %elements_used12.phi.trans.insert.i.i, align 8, !tbaa !27
  br label %if.end11.i.i

if.end11.i.i:                                     ; preds = %if.then8.i.i, %do.body.i.i
  %61 = phi i64 [ %59, %do.body.i.i ], [ %.pre.i.i, %if.then8.i.i ]
  %62 = phi %struct.varray_head_tag* [ %58, %do.body.i.i ], [ %call10.i.i, %if.then8.i.i ]
  %elements_used12.i.i = getelementptr inbounds %struct.varray_head_tag* %62, i64 0, i32 1
  %inc.i.i = add i64 %61, 1
  store i64 %inc.i.i, i64* %elements_used12.i.i, align 8, !tbaa !27
  %data13.i.i = getelementptr inbounds %struct.varray_head_tag* %62, i64 0, i32 4
  %u.i.i = bitcast %union.varray_data_tag* %data13.i.i to [1 x i32]*
  %arrayidx14.i.i = getelementptr inbounds [1 x i32]* %u.i.i, i64 0, i64 %61
  store i32 %cond.i.i, i32* %arrayidx14.i.i, align 4, !tbaa !15
  br label %if.end15.i.i

if.end15.i.i:                                     ; preds = %if.end11.i.i, %if.then3.i.i
  %cmp16.i.i = icmp slt i32 %cond.i.i, 53
  br i1 %cmp16.i.i, label %if.then17.i.i, label %if.end84.i.i

if.then17.i.i:                                    ; preds = %if.end15.i.i
  %63 = and i32 %cond.i.i, -8
  %64 = icmp eq i32 %63, 8
  %cond.off.i.i = add i32 %cond.i.i, -21
  %65 = icmp ult i32 %cond.off.i.i, 8
  %or.cond.i.i = or i1 %64, %65
  %cond.off152.i.i = add i32 %cond.i.i, -45
  %66 = icmp ult i32 %cond.off152.i.i, 8
  %or.cond158.i.i = or i1 %or.cond.i.i, %66
  %cond.off153.i.i = add i32 %cond.i.i, -29
  %67 = icmp ult i32 %cond.off153.i.i, 8
  %or.cond160.i.i = or i1 %or.cond158.i.i, %67
  %bf.load33.i.i = load i32* %52, align 8
  %bf.lshr.i.i = lshr i32 %bf.load33.i.i, 16
  %bf.clear34.i.i = and i32 %bf.lshr.i.i, 255
  br i1 %or.cond160.i.i, label %cond.true32.i.i, label %cond.false45.i.i

cond.true32.i.i:                                  ; preds = %if.then17.i.i
  %idxprom35155.i.i = zext i32 %bf.clear34.i.i to i64
  %arrayidx36.i.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom35155.i.i
  %68 = load i32* %arrayidx36.i.i, align 4, !tbaa !8
  %cmp37.i.i = icmp eq i32 %68, 5
  br i1 %cmp37.i.i, label %cond.end78.i.i, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %cond.true32.i.i
  %cmp43.i.i = icmp eq i32 %68, 6
  %phitmp.i.i = select i1 %cmp43.i.i, i32 2, i32 1
  br label %cond.end78.i.i

cond.false45.i.i:                                 ; preds = %if.then17.i.i
  switch i32 %bf.clear34.i.i, label %cond.false62.i.i [
    i32 18, label %cond.true50.i.i
    i32 24, label %cond.true58.i.i
  ]

cond.true50.i.i:                                  ; preds = %cond.false45.i.i
  %69 = load i32* @target_flags, align 4, !tbaa !15
  %and.i.i = lshr i32 %69, 25
  %70 = and i32 %and.i.i, 1
  %71 = xor i32 %70, 3
  br label %cond.end78.i.i

cond.true58.i.i:                                  ; preds = %cond.false45.i.i
  %72 = load i32* @target_flags, align 4, !tbaa !15
  %and59.i.i = lshr i32 %72, 24
  %73 = and i32 %and59.i.i, 2
  %74 = xor i32 %73, 6
  br label %cond.end78.i.i

cond.false62.i.i:                                 ; preds = %cond.false45.i.i
  %idxprom66154.i.i = zext i32 %bf.clear34.i.i to i64
  %arrayidx67.i.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom66154.i.i
  %75 = load i8* %arrayidx67.i.i, align 1, !tbaa !8
  %conv.i.i = zext i8 %75 to i32
  %76 = load i32* @target_flags, align 4, !tbaa !15
  %and68.i.i = lshr i32 %76, 23
  %77 = and i32 %and68.i.i, 4
  %78 = add i32 %77, 4
  %add.i.i = add i32 %conv.i.i, -1
  %sub.i.i = add i32 %add.i.i, %78
  %div.i.i = sdiv i32 %sub.i.i, %78
  br label %cond.end78.i.i

cond.end78.i.i:                                   ; preds = %cond.false62.i.i, %cond.true58.i.i, %cond.true50.i.i, %lor.rhs.i.i, %cond.true32.i.i
  %cond79.i.i = phi i32 [ %71, %cond.true50.i.i ], [ %74, %cond.true58.i.i ], [ %div.i.i, %cond.false62.i.i ], [ 2, %cond.true32.i.i ], [ %phitmp.i.i, %lor.rhs.i.i ]
  %79 = load i32* @max_value_regs, align 4, !tbaa !15
  %cmp80.i.i = icmp ugt i32 %cond79.i.i, %79
  br i1 %cmp80.i.i, label %if.then82.i.i, label %if.end84.i.i

if.then82.i.i:                                    ; preds = %cond.end78.i.i
  store i32 %cond79.i.i, i32* @max_value_regs, align 4, !tbaa !15
  br label %if.end84.i.i

if.end84.i.i:                                     ; preds = %if.then82.i.i, %cond.end78.i.i, %if.end15.i.i
  %80 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data86.i.i = getelementptr inbounds %struct.varray_head_tag* %80, i64 0, i32 4
  %te87.i.i = bitcast %union.varray_data_tag* %data86.i.i to [1 x %struct.elt_list*]*
  %arrayidx88.i.i = getelementptr inbounds [1 x %struct.elt_list*]* %te87.i.i, i64 0, i64 %idxprom.i.i
  %81 = load %struct.elt_list** %arrayidx88.i.i, align 8, !tbaa !1
  %82 = load %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  %tobool.i.i.i = icmp eq %struct.elt_list* %82, null
  br i1 %tobool.i.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end84.i.i
  %next1.i.i.i = getelementptr inbounds %struct.elt_list* %82, i64 0, i32 0
  %83 = load %struct.elt_list** %next1.i.i.i, align 8, !tbaa !30
  store %struct.elt_list* %83, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  br label %new_elt_list.exit.i.i

if.else.i.i.i:                                    ; preds = %if.end84.i.i
  %84 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %85 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast.i.i.i = ptrtoint i8* %84 to i64
  %sub.ptr.rhs.cast.i.i.i = ptrtoint i8* %85 to i64
  %sub.ptr.sub.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %cmp.i.i.i = icmp slt i64 %sub.ptr.sub.i.i.i, 16
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.else.i.i.i
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 16) #6
  %.pre.i.i.i = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then3.i.i.i, %if.else.i.i.i
  %86 = phi i8* [ %.pre.i.i.i, %if.then3.i.i.i ], [ %85, %if.else.i.i.i ]
  %add.ptr.i.i.i = getelementptr inbounds i8* %86, i64 16
  store i8* %add.ptr.i.i.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %87 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp8.i.i.i = icmp eq i8* %add.ptr.i.i.i, %87
  br i1 %cmp8.i.i.i, label %if.then10.i.i.i, label %if.end11.i.i.i

if.then10.i.i.i:                                  ; preds = %if.end.i.i.i
  %bf.load.i.i.i = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set.i.i.i = or i8 %bf.load.i.i.i, 2
  store i8 %bf.set.i.i.i, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end11.i.i.i

if.end11.i.i.i:                                   ; preds = %if.then10.i.i.i, %if.end.i.i.i
  %sub.ptr.lhs.cast13.i.i.i = ptrtoint i8* %add.ptr.i.i.i to i64
  %88 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv15.i.i.i = sext i32 %88 to i64
  %add.i.i.i = add nsw i64 %conv15.i.i.i, %sub.ptr.lhs.cast13.i.i.i
  %neg.i.i.i = xor i32 %88, -1
  %conv17.i.i.i = sext i32 %neg.i.i.i to i64
  %and.i.i.i = and i64 %add.i.i.i, %conv17.i.i.i
  %add.ptr18.i.i.i = getelementptr inbounds i8* null, i64 %and.i.i.i
  store i8* %add.ptr18.i.i.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %89 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast21.i.i.i = ptrtoint i8* %add.ptr18.i.i.i to i64
  %sub.ptr.rhs.cast22.i.i.i = ptrtoint %struct._obstack_chunk* %89 to i64
  %sub.ptr.sub23.i.i.i = sub i64 %sub.ptr.lhs.cast21.i.i.i, %sub.ptr.rhs.cast22.i.i.i
  %90 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast26.i.i.i = ptrtoint i8* %90 to i64
  %sub.ptr.sub28.i.i.i = sub i64 %sub.ptr.lhs.cast26.i.i.i, %sub.ptr.rhs.cast22.i.i.i
  %cmp29.i.i.i = icmp sgt i64 %sub.ptr.sub23.i.i.i, %sub.ptr.sub28.i.i.i
  br i1 %cmp29.i.i.i, label %if.then31.i.i.i, label %if.end34.i.i.i

if.then31.i.i.i:                                  ; preds = %if.end11.i.i.i
  store i8* %90, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end34.i.i.i

if.end34.i.i.i:                                   ; preds = %if.then31.i.i.i, %if.end11.i.i.i
  %91 = phi i8* [ %90, %if.then31.i.i.i ], [ %add.ptr18.i.i.i, %if.end11.i.i.i ]
  store i8* %91, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %92 = bitcast i8* %87 to %struct.elt_list*
  br label %new_elt_list.exit.i.i

new_elt_list.exit.i.i:                            ; preds = %if.end34.i.i.i, %if.then.i.i.i
  %el.0.i.i.i = phi %struct.elt_list* [ %82, %if.then.i.i.i ], [ %92, %if.end34.i.i.i ]
  %next39.i.i.i = getelementptr inbounds %struct.elt_list* %el.0.i.i.i, i64 0, i32 0
  store %struct.elt_list* %81, %struct.elt_list** %next39.i.i.i, align 8, !tbaa !30
  %elt40.i.i.i = getelementptr inbounds %struct.elt_list* %el.0.i.i.i, i64 0, i32 1
  store %struct.cselib_val_struct* %53, %struct.cselib_val_struct** %elt40.i.i.i, align 8, !tbaa !16
  %93 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data91.i.i = getelementptr inbounds %struct.varray_head_tag* %93, i64 0, i32 4
  %te92.i.i = bitcast %union.varray_data_tag* %data91.i.i to [1 x %struct.elt_list*]*
  %arrayidx93.i.i = getelementptr inbounds [1 x %struct.elt_list*]* %te92.i.i, i64 0, i64 %idxprom.i.i
  store %struct.elt_list* %el.0.i.i.i, %struct.elt_list** %arrayidx93.i.i, align 8, !tbaa !1
  %locs.i.i = getelementptr inbounds %struct.cselib_val_struct* %53, i64 0, i32 2
  %94 = load %struct.elt_loc_list** %locs.i.i, align 8, !tbaa !5
  %cmp94.i.i = icmp eq %struct.elt_loc_list* %94, null
  br i1 %cmp94.i.i, label %if.then96.i.i, label %if.end97.i.i

if.then96.i.i:                                    ; preds = %new_elt_list.exit.i.i
  %95 = load i32* @n_useless_values, align 4, !tbaa !15
  %dec.i.i = add nsw i32 %95, -1
  store i32 %dec.i.i, i32* @n_useless_values, align 4, !tbaa !15
  br label %if.end97.i.i

if.end97.i.i:                                     ; preds = %if.then96.i.i, %new_elt_list.exit.i.i
  %96 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  %tobool.i161.i.i = icmp eq %struct.elt_loc_list* %96, null
  br i1 %tobool.i161.i.i, label %if.else.i168.i.i, label %if.then.i163.i.i

if.then.i163.i.i:                                 ; preds = %if.end97.i.i
  %next1.i162.i.i = getelementptr inbounds %struct.elt_loc_list* %96, i64 0, i32 0
  %97 = load %struct.elt_loc_list** %next1.i162.i.i, align 8, !tbaa !18
  store %struct.elt_loc_list* %97, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  br label %new_elt_loc_list.exit.i.i

if.else.i168.i.i:                                 ; preds = %if.end97.i.i
  %98 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %99 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast.i164.i.i = ptrtoint i8* %98 to i64
  %sub.ptr.rhs.cast.i165.i.i = ptrtoint i8* %99 to i64
  %sub.ptr.sub.i166.i.i = sub i64 %sub.ptr.lhs.cast.i164.i.i, %sub.ptr.rhs.cast.i165.i.i
  %cmp.i167.i.i = icmp slt i64 %sub.ptr.sub.i166.i.i, 24
  br i1 %cmp.i167.i.i, label %if.then3.i170.i.i, label %if.end.i173.i.i

if.then3.i170.i.i:                                ; preds = %if.else.i168.i.i
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 24) #6
  %.pre.i169.i.i = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end.i173.i.i

if.end.i173.i.i:                                  ; preds = %if.then3.i170.i.i, %if.else.i168.i.i
  %100 = phi i8* [ %.pre.i169.i.i, %if.then3.i170.i.i ], [ %99, %if.else.i168.i.i ]
  %add.ptr.i171.i.i = getelementptr inbounds i8* %100, i64 24
  store i8* %add.ptr.i171.i.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %101 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp8.i172.i.i = icmp eq i8* %add.ptr.i171.i.i, %101
  br i1 %cmp8.i172.i.i, label %if.then10.i176.i.i, label %if.end11.i190.i.i

if.then10.i176.i.i:                               ; preds = %if.end.i173.i.i
  %bf.load.i174.i.i = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set.i175.i.i = or i8 %bf.load.i174.i.i, 2
  store i8 %bf.set.i175.i.i, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end11.i190.i.i

if.end11.i190.i.i:                                ; preds = %if.then10.i176.i.i, %if.end.i173.i.i
  %sub.ptr.lhs.cast13.i177.i.i = ptrtoint i8* %add.ptr.i171.i.i to i64
  %102 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv15.i178.i.i = sext i32 %102 to i64
  %add.i179.i.i = add nsw i64 %conv15.i178.i.i, %sub.ptr.lhs.cast13.i177.i.i
  %neg.i180.i.i = xor i32 %102, -1
  %conv17.i181.i.i = sext i32 %neg.i180.i.i to i64
  %and.i182.i.i = and i64 %add.i179.i.i, %conv17.i181.i.i
  %add.ptr18.i183.i.i = getelementptr inbounds i8* null, i64 %and.i182.i.i
  store i8* %add.ptr18.i183.i.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %103 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast21.i184.i.i = ptrtoint i8* %add.ptr18.i183.i.i to i64
  %sub.ptr.rhs.cast22.i185.i.i = ptrtoint %struct._obstack_chunk* %103 to i64
  %sub.ptr.sub23.i186.i.i = sub i64 %sub.ptr.lhs.cast21.i184.i.i, %sub.ptr.rhs.cast22.i185.i.i
  %104 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast26.i187.i.i = ptrtoint i8* %104 to i64
  %sub.ptr.sub28.i188.i.i = sub i64 %sub.ptr.lhs.cast26.i187.i.i, %sub.ptr.rhs.cast22.i185.i.i
  %cmp29.i189.i.i = icmp sgt i64 %sub.ptr.sub23.i186.i.i, %sub.ptr.sub28.i188.i.i
  br i1 %cmp29.i189.i.i, label %if.then31.i191.i.i, label %if.end34.i192.i.i

if.then31.i191.i.i:                               ; preds = %if.end11.i190.i.i
  store i8* %104, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end34.i192.i.i

if.end34.i192.i.i:                                ; preds = %if.then31.i191.i.i, %if.end11.i190.i.i
  %105 = phi i8* [ %104, %if.then31.i191.i.i ], [ %add.ptr18.i183.i.i, %if.end11.i190.i.i ]
  store i8* %105, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %106 = bitcast i8* %101 to %struct.elt_loc_list*
  br label %new_elt_loc_list.exit.i.i

new_elt_loc_list.exit.i.i:                        ; preds = %if.end34.i192.i.i, %if.then.i163.i.i
  %el.0.i193.i.i = phi %struct.elt_loc_list* [ %96, %if.then.i163.i.i ], [ %106, %if.end34.i192.i.i ]
  %next39.i194.i.i = getelementptr inbounds %struct.elt_loc_list* %el.0.i193.i.i, i64 0, i32 0
  store %struct.elt_loc_list* %94, %struct.elt_loc_list** %next39.i194.i.i, align 8, !tbaa !18
  %loc40.i.i.i = getelementptr inbounds %struct.elt_loc_list* %el.0.i193.i.i, i64 0, i32 1
  store %struct.rtx_def* %51, %struct.rtx_def** %loc40.i.i.i, align 8, !tbaa !11
  %107 = load %struct.rtx_def** @cselib_current_insn, align 8, !tbaa !1
  %setting_insn.i.i.i = getelementptr inbounds %struct.elt_loc_list* %el.0.i193.i.i, i64 0, i32 2
  store %struct.rtx_def* %107, %struct.rtx_def** %setting_insn.i.i.i, align 8, !tbaa !26
  store %struct.elt_loc_list* %el.0.i193.i.i, %struct.elt_loc_list** %locs.i.i, align 8, !tbaa !5
  br label %for.inc137.i

if.else.i.i:                                      ; preds = %if.end.i.i
  %bf.load101.i.i = load i32* %52, align 8
  %bf.clear102.i.i = and i32 %bf.load101.i.i, 65535
  %cmp103.i.i = icmp eq i32 %bf.clear102.i.i, 66
  %cmp106.i.i = icmp ne %struct.cselib_val_struct* %54, null
  %or.cond120.i.i = and i1 %cmp103.i.i, %cmp106.i.i
  br i1 %or.cond120.i.i, label %if.then108.i.i, label %for.inc137.i

if.then108.i.i:                                   ; preds = %if.else.i.i
  %locs109.i.i = getelementptr inbounds %struct.cselib_val_struct* %53, i64 0, i32 2
  %108 = load %struct.elt_loc_list** %locs109.i.i, align 8, !tbaa !5
  %cmp110.i.i = icmp eq %struct.elt_loc_list* %108, null
  br i1 %cmp110.i.i, label %if.end114.i.i, label %for.body.i.i.i

if.end114.i.i:                                    ; preds = %if.then108.i.i
  %109 = load i32* @n_useless_values, align 4, !tbaa !15
  %dec113.i.i = add nsw i32 %109, -1
  store i32 %dec113.i.i, i32* @n_useless_values, align 4, !tbaa !15
  br label %for.end.i.i.i

for.body.i.i.i:                                   ; preds = %if.then108.i.i, %for.inc.i.i.i
  %l.021.i.i.i = phi %struct.elt_loc_list* [ %l.0.i.i.i, %for.inc.i.i.i ], [ %108, %if.then108.i.i ]
  %loc.i.i.i = getelementptr inbounds %struct.elt_loc_list* %l.021.i.i.i, i64 0, i32 1
  %110 = load %struct.rtx_def** %loc.i.i.i, align 8, !tbaa !11
  %111 = getelementptr inbounds %struct.rtx_def* %110, i64 0, i32 0
  %bf.load.i195.i.i = load i32* %111, align 8
  %bf.clear.i.i.i = and i32 %bf.load.i195.i.i, 65535
  %cmp.i196.i.i = icmp eq i32 %bf.clear.i.i.i, 66
  br i1 %cmp.i196.i.i, label %land.lhs.true.i.i.i, label %for.inc.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %arrayidx.i.i.i = getelementptr inbounds %struct.rtx_def* %110, i64 0, i32 1, i64 0
  %rtx.i.i.i = bitcast %union.rtunion_def* %arrayidx.i.i.i to %struct.rtx_def**
  %112 = load %struct.rtx_def** %rtx.i.i.i, align 8, !tbaa !1
  %arrayidx3.i.i.i = getelementptr inbounds %struct.rtx_def* %112, i64 0, i32 1, i64 0
  %rt_cselib.i.i.i = bitcast %union.rtunion_def* %arrayidx3.i.i.i to %struct.cselib_val_struct**
  %113 = load %struct.cselib_val_struct** %rt_cselib.i.i.i, align 8, !tbaa !1
  %cmp4.i.i.i = icmp eq %struct.cselib_val_struct* %113, %54
  br i1 %cmp4.i.i.i, label %for.inc137.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true.i.i.i, %for.body.i.i.i
  %next.i.i.i = getelementptr inbounds %struct.elt_loc_list* %l.021.i.i.i, i64 0, i32 0
  %l.0.i.i.i = load %struct.elt_loc_list** %next.i.i.i, align 8
  %tobool.i197.i.i = icmp eq %struct.elt_loc_list* %l.0.i.i.i, null
  br i1 %tobool.i197.i.i, label %for.end.i.i.i, label %for.body.i.i.i

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i, %if.end114.i.i
  %addr_list.i.i.i = getelementptr inbounds %struct.cselib_val_struct* %54, i64 0, i32 3
  %114 = load %struct.elt_list** %addr_list.i.i.i, align 8, !tbaa !32
  %115 = load %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  %tobool.i235.i.i = icmp eq %struct.elt_list* %115, null
  br i1 %tobool.i235.i.i, label %if.else.i242.i.i, label %if.then.i237.i.i

if.then.i237.i.i:                                 ; preds = %for.end.i.i.i
  %next1.i236.i.i = getelementptr inbounds %struct.elt_list* %115, i64 0, i32 0
  %116 = load %struct.elt_list** %next1.i236.i.i, align 8, !tbaa !30
  store %struct.elt_list* %116, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  br label %new_elt_list.exit270.i.i

if.else.i242.i.i:                                 ; preds = %for.end.i.i.i
  %117 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %118 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast.i238.i.i = ptrtoint i8* %117 to i64
  %sub.ptr.rhs.cast.i239.i.i = ptrtoint i8* %118 to i64
  %sub.ptr.sub.i240.i.i = sub i64 %sub.ptr.lhs.cast.i238.i.i, %sub.ptr.rhs.cast.i239.i.i
  %cmp.i241.i.i = icmp slt i64 %sub.ptr.sub.i240.i.i, 16
  br i1 %cmp.i241.i.i, label %if.then3.i244.i.i, label %if.end.i247.i.i

if.then3.i244.i.i:                                ; preds = %if.else.i242.i.i
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 16) #6
  %.pre.i243.i.i = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end.i247.i.i

if.end.i247.i.i:                                  ; preds = %if.then3.i244.i.i, %if.else.i242.i.i
  %119 = phi i8* [ %.pre.i243.i.i, %if.then3.i244.i.i ], [ %118, %if.else.i242.i.i ]
  %add.ptr.i245.i.i = getelementptr inbounds i8* %119, i64 16
  store i8* %add.ptr.i245.i.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %120 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp8.i246.i.i = icmp eq i8* %add.ptr.i245.i.i, %120
  br i1 %cmp8.i246.i.i, label %if.then10.i250.i.i, label %if.end11.i264.i.i

if.then10.i250.i.i:                               ; preds = %if.end.i247.i.i
  %bf.load.i248.i.i = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set.i249.i.i = or i8 %bf.load.i248.i.i, 2
  store i8 %bf.set.i249.i.i, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end11.i264.i.i

if.end11.i264.i.i:                                ; preds = %if.then10.i250.i.i, %if.end.i247.i.i
  %sub.ptr.lhs.cast13.i251.i.i = ptrtoint i8* %add.ptr.i245.i.i to i64
  %121 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv15.i252.i.i = sext i32 %121 to i64
  %add.i253.i.i = add nsw i64 %conv15.i252.i.i, %sub.ptr.lhs.cast13.i251.i.i
  %neg.i254.i.i = xor i32 %121, -1
  %conv17.i255.i.i = sext i32 %neg.i254.i.i to i64
  %and.i256.i.i = and i64 %add.i253.i.i, %conv17.i255.i.i
  %add.ptr18.i257.i.i = getelementptr inbounds i8* null, i64 %and.i256.i.i
  store i8* %add.ptr18.i257.i.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %122 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast21.i258.i.i = ptrtoint i8* %add.ptr18.i257.i.i to i64
  %sub.ptr.rhs.cast22.i259.i.i = ptrtoint %struct._obstack_chunk* %122 to i64
  %sub.ptr.sub23.i260.i.i = sub i64 %sub.ptr.lhs.cast21.i258.i.i, %sub.ptr.rhs.cast22.i259.i.i
  %123 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast26.i261.i.i = ptrtoint i8* %123 to i64
  %sub.ptr.sub28.i262.i.i = sub i64 %sub.ptr.lhs.cast26.i261.i.i, %sub.ptr.rhs.cast22.i259.i.i
  %cmp29.i263.i.i = icmp sgt i64 %sub.ptr.sub23.i260.i.i, %sub.ptr.sub28.i262.i.i
  br i1 %cmp29.i263.i.i, label %if.then31.i265.i.i, label %if.end34.i266.i.i

if.then31.i265.i.i:                               ; preds = %if.end11.i264.i.i
  store i8* %123, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end34.i266.i.i

if.end34.i266.i.i:                                ; preds = %if.then31.i265.i.i, %if.end11.i264.i.i
  %124 = phi i8* [ %123, %if.then31.i265.i.i ], [ %add.ptr18.i257.i.i, %if.end11.i264.i.i ]
  store i8* %124, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %125 = bitcast i8* %120 to %struct.elt_list*
  br label %new_elt_list.exit270.i.i

new_elt_list.exit270.i.i:                         ; preds = %if.end34.i266.i.i, %if.then.i237.i.i
  %el.0.i267.i.i = phi %struct.elt_list* [ %115, %if.then.i237.i.i ], [ %125, %if.end34.i266.i.i ]
  %next39.i268.i.i = getelementptr inbounds %struct.elt_list* %el.0.i267.i.i, i64 0, i32 0
  store %struct.elt_list* %114, %struct.elt_list** %next39.i268.i.i, align 8, !tbaa !30
  %elt40.i269.i.i = getelementptr inbounds %struct.elt_list* %el.0.i267.i.i, i64 0, i32 1
  store %struct.cselib_val_struct* %53, %struct.cselib_val_struct** %elt40.i269.i.i, align 8, !tbaa !16
  store %struct.elt_list* %el.0.i267.i.i, %struct.elt_list** %addr_list.i.i.i, align 8, !tbaa !32
  %126 = load %struct.elt_loc_list** %locs109.i.i, align 8, !tbaa !5
  %val_rtx.i.i.i = getelementptr inbounds %struct.cselib_val_struct* %54, i64 0, i32 1, i32 0
  %127 = load %struct.rtx_def** %val_rtx.i.i.i, align 8, !tbaa !1
  %call7.i.i.i = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %51, %struct.rtx_def* %127) #6
  %128 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  %tobool.i198.i.i = icmp eq %struct.elt_loc_list* %128, null
  br i1 %tobool.i198.i.i, label %if.else.i205.i.i, label %if.then.i200.i.i

if.then.i200.i.i:                                 ; preds = %new_elt_list.exit270.i.i
  %next1.i199.i.i = getelementptr inbounds %struct.elt_loc_list* %128, i64 0, i32 0
  %129 = load %struct.elt_loc_list** %next1.i199.i.i, align 8, !tbaa !18
  store %struct.elt_loc_list* %129, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  br label %new_elt_loc_list.exit234.i.i

if.else.i205.i.i:                                 ; preds = %new_elt_list.exit270.i.i
  %130 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %131 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast.i201.i.i = ptrtoint i8* %130 to i64
  %sub.ptr.rhs.cast.i202.i.i = ptrtoint i8* %131 to i64
  %sub.ptr.sub.i203.i.i = sub i64 %sub.ptr.lhs.cast.i201.i.i, %sub.ptr.rhs.cast.i202.i.i
  %cmp.i204.i.i = icmp slt i64 %sub.ptr.sub.i203.i.i, 24
  br i1 %cmp.i204.i.i, label %if.then3.i207.i.i, label %if.end.i210.i.i

if.then3.i207.i.i:                                ; preds = %if.else.i205.i.i
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 24) #6
  %.pre.i206.i.i = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end.i210.i.i

if.end.i210.i.i:                                  ; preds = %if.then3.i207.i.i, %if.else.i205.i.i
  %132 = phi i8* [ %.pre.i206.i.i, %if.then3.i207.i.i ], [ %131, %if.else.i205.i.i ]
  %add.ptr.i208.i.i = getelementptr inbounds i8* %132, i64 24
  store i8* %add.ptr.i208.i.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %133 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp8.i209.i.i = icmp eq i8* %add.ptr.i208.i.i, %133
  br i1 %cmp8.i209.i.i, label %if.then10.i213.i.i, label %if.end11.i227.i.i

if.then10.i213.i.i:                               ; preds = %if.end.i210.i.i
  %bf.load.i211.i.i = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set.i212.i.i = or i8 %bf.load.i211.i.i, 2
  store i8 %bf.set.i212.i.i, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end11.i227.i.i

if.end11.i227.i.i:                                ; preds = %if.then10.i213.i.i, %if.end.i210.i.i
  %sub.ptr.lhs.cast13.i214.i.i = ptrtoint i8* %add.ptr.i208.i.i to i64
  %134 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv15.i215.i.i = sext i32 %134 to i64
  %add.i216.i.i = add nsw i64 %conv15.i215.i.i, %sub.ptr.lhs.cast13.i214.i.i
  %neg.i217.i.i = xor i32 %134, -1
  %conv17.i218.i.i = sext i32 %neg.i217.i.i to i64
  %and.i219.i.i = and i64 %add.i216.i.i, %conv17.i218.i.i
  %add.ptr18.i220.i.i = getelementptr inbounds i8* null, i64 %and.i219.i.i
  store i8* %add.ptr18.i220.i.i, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %135 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast21.i221.i.i = ptrtoint i8* %add.ptr18.i220.i.i to i64
  %sub.ptr.rhs.cast22.i222.i.i = ptrtoint %struct._obstack_chunk* %135 to i64
  %sub.ptr.sub23.i223.i.i = sub i64 %sub.ptr.lhs.cast21.i221.i.i, %sub.ptr.rhs.cast22.i222.i.i
  %136 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast26.i224.i.i = ptrtoint i8* %136 to i64
  %sub.ptr.sub28.i225.i.i = sub i64 %sub.ptr.lhs.cast26.i224.i.i, %sub.ptr.rhs.cast22.i222.i.i
  %cmp29.i226.i.i = icmp sgt i64 %sub.ptr.sub23.i223.i.i, %sub.ptr.sub28.i225.i.i
  br i1 %cmp29.i226.i.i, label %if.then31.i228.i.i, label %if.end34.i229.i.i

if.then31.i228.i.i:                               ; preds = %if.end11.i227.i.i
  store i8* %136, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end34.i229.i.i

if.end34.i229.i.i:                                ; preds = %if.then31.i228.i.i, %if.end11.i227.i.i
  %137 = phi i8* [ %136, %if.then31.i228.i.i ], [ %add.ptr18.i220.i.i, %if.end11.i227.i.i ]
  store i8* %137, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %138 = bitcast i8* %133 to %struct.elt_loc_list*
  br label %new_elt_loc_list.exit234.i.i

new_elt_loc_list.exit234.i.i:                     ; preds = %if.end34.i229.i.i, %if.then.i200.i.i
  %el.0.i230.i.i = phi %struct.elt_loc_list* [ %128, %if.then.i200.i.i ], [ %138, %if.end34.i229.i.i ]
  %next39.i231.i.i = getelementptr inbounds %struct.elt_loc_list* %el.0.i230.i.i, i64 0, i32 0
  store %struct.elt_loc_list* %126, %struct.elt_loc_list** %next39.i231.i.i, align 8, !tbaa !18
  %loc40.i232.i.i = getelementptr inbounds %struct.elt_loc_list* %el.0.i230.i.i, i64 0, i32 1
  store %struct.rtx_def* %call7.i.i.i, %struct.rtx_def** %loc40.i232.i.i, align 8, !tbaa !11
  %139 = load %struct.rtx_def** @cselib_current_insn, align 8, !tbaa !1
  %setting_insn.i233.i.i = getelementptr inbounds %struct.elt_loc_list* %el.0.i230.i.i, i64 0, i32 2
  store %struct.rtx_def* %139, %struct.rtx_def** %setting_insn.i233.i.i, align 8, !tbaa !26
  store %struct.elt_loc_list* %el.0.i230.i.i, %struct.elt_loc_list** %locs109.i.i, align 8, !tbaa !5
  br label %for.inc137.i

for.inc137.i:                                     ; preds = %land.lhs.true.i.i.i, %new_elt_loc_list.exit234.i.i, %if.else.i.i, %new_elt_loc_list.exit.i.i, %lor.lhs.false.i.i, %cond.end.i.i, %for.body117.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n_sets.2205.i
  br i1 %exitcond, label %cselib_record_sets.exit, label %for.body117.i

cselib_record_sets.exit:                          ; preds = %for.inc137.i, %for.end114.thread.i
  call void @llvm.lifetime.end(i64 3392, i8* %24) #6
  %bf.load45 = load i32* %0, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 34
  br i1 %cmp47, label %if.then49, label %if.end76

if.then49:                                        ; preds = %cselib_record_sets.exit
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 7
  %x.0.in115 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %x.0116 = load %struct.rtx_def** %x.0.in115, align 8
  %tobool54117 = icmp eq %struct.rtx_def* %x.0116, null
  br i1 %tobool54117, label %if.end76, label %for.body55

for.body55:                                       ; preds = %if.then49, %for.inc71
  %x.0118 = phi %struct.rtx_def* [ %x.0, %for.inc71 ], [ %x.0116, %if.then49 ]
  %fld56 = getelementptr inbounds %struct.rtx_def* %x.0118, i64 0, i32 1
  %rtx58 = bitcast [1 x %union.rtunion_def]* %fld56 to %struct.rtx_def**
  %140 = load %struct.rtx_def** %rtx58, align 8, !tbaa !1
  %141 = getelementptr inbounds %struct.rtx_def* %140, i64 0, i32 0
  %bf.load59 = load i32* %141, align 8
  %bf.clear60 = and i32 %bf.load59, 65535
  %cmp61 = icmp eq i32 %bf.clear60, 49
  br i1 %cmp61, label %if.then63, label %for.inc71

if.then63:                                        ; preds = %for.body55
  %arrayidx68 = getelementptr inbounds %struct.rtx_def* %140, i64 0, i32 1, i64 0
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %if.end22.i, %if.then63
  %dest.addr.0.i.in = phi %struct.rtx_def** [ %rtx69, %if.then63 ], [ %rtx.i104, %while.body.i ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.end22.i ]
  %dest.addr.0.i = load %struct.rtx_def** %dest.addr.0.i.in, align 8
  %142 = getelementptr inbounds %struct.rtx_def* %dest.addr.0.i, i64 0, i32 0
  %bf.load.i101 = load i32* %142, align 8
  %bf.clear.i102 = and i32 %bf.load.i101, 65535
  switch i32 %bf.clear.i102, label %if.end22.i [
    i32 64, label %while.body.i
    i32 132, label %while.body.i
    i32 133, label %while.body.i
    i32 63, label %while.body.i
    i32 61, label %if.then.i107
    i32 66, label %if.then21.i
  ]

while.body.i:                                     ; preds = %while.cond.i, %while.cond.i, %while.cond.i, %while.cond.i
  %arrayidx.i103 = getelementptr inbounds %struct.rtx_def* %dest.addr.0.i, i64 0, i32 1, i64 0
  %rtx.i104 = bitcast %union.rtunion_def* %arrayidx.i103 to %struct.rtx_def**
  br label %while.cond.i

if.then.i107:                                     ; preds = %while.cond.i
  %arrayidx15.i105 = getelementptr inbounds %struct.rtx_def* %dest.addr.0.i, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx15.i105 to i32*
  %143 = load i32* %rtuint.i, align 4, !tbaa !15
  %bf.lshr.i106 = lshr i32 %bf.load.i101, 16
  %bf.clear17.i = and i32 %bf.lshr.i106, 255
  tail call fastcc void @cselib_invalidate_regno(i32 %143, i32 %bf.clear17.i) #6
  br label %if.end22.i

if.then21.i:                                      ; preds = %while.cond.i
  %144 = load %struct.htab** @hash_table, align 8, !tbaa !1
  %145 = bitcast %struct.rtx_def* %dest.addr.0.i to i8*
  tail call void @htab_traverse(%struct.htab* %144, i32 (i8**, i8*)* @cselib_invalidate_mem_1, i8* %145) #6
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then21.i, %if.then.i107, %while.cond.i
  %bf.load23.i = load i32* %142, align 8
  %bf.lshr24.i = lshr i32 %bf.load23.i, 16
  %bf.clear25.i = and i32 %bf.lshr24.i, 255
  %call.i108 = tail call i32 @push_operand(%struct.rtx_def* %dest.addr.0.i, i32 %bf.clear25.i) #6
  %tobool.i109 = icmp eq i32 %call.i108, 0
  br i1 %tobool.i109, label %for.inc71, label %while.cond.i

for.inc71:                                        ; preds = %if.end22.i, %for.body55
  %arrayidx73 = getelementptr inbounds %struct.rtx_def* %x.0118, i64 0, i32 1, i64 1
  %x.0.in = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**
  %x.0 = load %struct.rtx_def** %x.0.in, align 8
  %tobool54 = icmp eq %struct.rtx_def* %x.0, null
  br i1 %tobool54, label %if.end76, label %for.body55

if.end76:                                         ; preds = %for.inc71, %if.then49, %cselib_record_sets.exit
  store %struct.rtx_def* null, %struct.rtx_def** @cselib_current_insn, align 8, !tbaa !1
  %146 = load i32* @n_useless_values, align 4, !tbaa !15
  %cmp77 = icmp sgt i32 %146, 32
  br i1 %cmp77, label %do.body.i, label %if.end80

do.body.i:                                        ; preds = %if.end76, %do.body.i
  store i1 false, i1* @values_became_useless, align 1
  %147 = load %struct.htab** @hash_table, align 8, !tbaa !1
  tail call void @htab_traverse(%struct.htab* %147, i32 (i8**, i8*)* @discard_useless_locs, i8* null) #6
  %.b.i = load i1* @values_became_useless, align 1
  br i1 %.b.i, label %do.body.i, label %do.end.i

do.end.i:                                         ; preds = %do.body.i
  %148 = load %struct.htab** @hash_table, align 8, !tbaa !1
  tail call void @htab_traverse(%struct.htab* %148, i32 (i8**, i8*)* @discard_useless_values, i8* null) #6
  %149 = load i32* @n_useless_values, align 4, !tbaa !15
  %cmp.i110 = icmp eq i32 %149, 0
  br i1 %cmp.i110, label %if.end80, label %if.then.i111

if.then.i111:                                     ; preds = %do.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 394, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.remove_useless_values, i64 0, i64 0)) #7
  unreachable

if.end80:                                         ; preds = %do.end.i, %clear_table.exit, %if.then24, %if.end76
  ret void
}

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #4

; Function Attrs: nounwind uwtable
define internal fastcc void @cselib_invalidate_regno(i32 %regno, i32 %mode) #1 {
entry:
  %0 = load i32* @reload_completed, align 4, !tbaa !15
  %tobool = icmp ne i32 %0, 0
  %cmp = icmp ugt i32 %regno, 52
  %or.cond = and i1 %tobool, %cmp
  br i1 %or.cond, label %land.lhs.true1, label %if.end

land.lhs.true1:                                   ; preds = %entry
  %idxprom = zext i32 %regno to i64
  %1 = load i16** @reg_renumber, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i16* %1, i64 %idxprom
  %2 = load i16* %arrayidx, align 2, !tbaa !38
  %cmp2 = icmp sgt i16 %2, -1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true1
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 968, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.cselib_invalidate_regno, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %land.lhs.true1, %entry
  %cmp4 = icmp ult i32 %regno, 53
  %cmp7 = icmp ne i32 %mode, 0
  %or.cond199 = and i1 %cmp4, %cmp7
  br i1 %or.cond199, label %if.then9, label %if.else73

if.then9:                                         ; preds = %if.end
  %3 = load i32* @max_value_regs, align 4, !tbaa !15
  %cmp10 = icmp ugt i32 %3, %regno
  %sub = sub i32 %regno, %3
  %i.0 = select i1 %cmp10, i32 0, i32 %sub
  %4 = and i32 %regno, -8
  %5 = icmp eq i32 %4, 8
  %regno.off = add i32 %regno, -21
  %6 = icmp ult i32 %regno.off, 8
  %or.cond261 = or i1 %5, %6
  %regno.off257 = add i32 %regno, -45
  %7 = icmp ult i32 %regno.off257, 8
  %or.cond263 = or i1 %or.cond261, %7
  %regno.off258 = add i32 %regno, -29
  %8 = icmp ult i32 %regno.off258, 8
  %or.cond265 = or i1 %or.cond263, %8
  br i1 %or.cond265, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then9
  %idxprom36 = sext i32 %mode to i64
  %arrayidx37 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom36
  %9 = load i32* %arrayidx37, align 4, !tbaa !8
  %cmp38 = icmp eq i32 %9, 5
  br i1 %cmp38, label %cond.end70, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp42 = icmp eq i32 %9, 6
  %phitmp259 = select i1 %cmp42, i32 2, i32 1
  br label %cond.end70

cond.false:                                       ; preds = %if.then9
  switch i32 %mode, label %cond.false56 [
    i32 18, label %cond.true46
    i32 24, label %cond.true52
  ]

cond.true46:                                      ; preds = %cond.false
  %10 = load i32* @target_flags, align 4, !tbaa !15
  %and = lshr i32 %10, 25
  %11 = and i32 %and, 1
  %12 = xor i32 %11, 3
  br label %cond.end70

cond.true52:                                      ; preds = %cond.false
  %13 = load i32* @target_flags, align 4, !tbaa !15
  %and53 = lshr i32 %13, 24
  %14 = and i32 %and53, 2
  %15 = xor i32 %14, 6
  br label %cond.end70

cond.false56:                                     ; preds = %cond.false
  %idxprom57 = sext i32 %mode to i64
  %arrayidx58 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom57
  %16 = load i8* %arrayidx58, align 1, !tbaa !8
  %conv59 = zext i8 %16 to i32
  %17 = load i32* @target_flags, align 4, !tbaa !15
  %and60 = lshr i32 %17, 23
  %18 = and i32 %and60, 4
  %19 = add i32 %18, 4
  %add = add i32 %conv59, -1
  %sub63 = add i32 %add, %19
  %div = sdiv i32 %sub63, %19
  br label %cond.end70

cond.end70:                                       ; preds = %cond.true, %lor.rhs, %cond.true46, %cond.false56, %cond.true52
  %cond71 = phi i32 [ %12, %cond.true46 ], [ %15, %cond.true52 ], [ %div, %cond.false56 ], [ 2, %cond.true ], [ %phitmp259, %lor.rhs ]
  %add72 = add i32 %cond71, %regno
  br label %for.cond.preheader

if.else73:                                        ; preds = %if.end
  %add74 = add i32 %regno, 1
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.else73, %cond.end70
  %i.1.ph = phi i32 [ %i.0, %cond.end70 ], [ %regno, %if.else73 ]
  %endregno.0.ph = phi i32 [ %add72, %cond.end70 ], [ %add74, %if.else73 ]
  %cmp76276 = icmp ult i32 %i.1.ph, %endregno.0.ph
  br i1 %cmp76276, label %for.body.lr.ph, label %for.end198

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %20 = zext i32 %i.1.ph to i64
  br label %for.body

for.body:                                         ; preds = %for.inc196, %for.body.lr.ph
  %indvars.iv = phi i64 [ %20, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc196 ]
  %i.1277 = phi i32 [ %i.1.ph, %for.body.lr.ph ], [ %inc197, %for.inc196 ]
  %21 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data = getelementptr inbounds %struct.varray_head_tag* %21, i64 0, i32 4
  %te = bitcast %union.varray_data_tag* %data to [1 x %struct.elt_list*]*
  %arrayidx79 = getelementptr inbounds [1 x %struct.elt_list*]* %te, i64 0, i64 %indvars.iv
  %22 = load %struct.elt_list** %arrayidx79, align 8, !tbaa !1
  %tobool80273274 = icmp eq %struct.elt_list* %22, null
  br i1 %tobool80273274, label %for.inc196, label %while.body.lr.ph.lr.ph

while.body.lr.ph.lr.ph:                           ; preds = %for.body
  %23 = trunc i64 %indvars.iv to i32
  %cmp81 = icmp ult i32 %23, 53
  %24 = and i32 %23, -8
  %25 = icmp eq i32 %24, 8
  %i.1.off = add i32 %23, -21
  %26 = icmp ult i32 %i.1.off, 8
  %or.cond267 = or i1 %25, %26
  %i.1.off253 = add i32 %23, -45
  %27 = icmp ult i32 %i.1.off253, 8
  %or.cond269 = or i1 %or.cond267, %27
  %i.1.off254 = add i32 %23, -29
  %28 = icmp ult i32 %i.1.off254, 8
  %or.cond271 = or i1 %or.cond269, %28
  %sub172 = add i32 %23, -1
  br label %while.body.lr.ph

while.cond.outer.loopexit:                        ; preds = %if.end174, %if.end174.us
  %next.lcssa = phi %struct.elt_list** [ %next.us, %if.end174.us ], [ %next, %if.end174 ]
  %29 = load %struct.elt_list** %next.lcssa, align 8, !tbaa !1
  %tobool80273 = icmp eq %struct.elt_list* %29, null
  br i1 %tobool80273, label %for.inc196, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.body.lr.ph.lr.ph, %while.cond.outer.loopexit
  %30 = phi %struct.elt_list* [ %22, %while.body.lr.ph.lr.ph ], [ %29, %while.cond.outer.loopexit ]
  %l.0.ph275 = phi %struct.elt_list** [ %arrayidx79, %while.body.lr.ph.lr.ph ], [ %next.lcssa, %while.cond.outer.loopexit ]
  br i1 %cmp81, label %if.then83.us, label %if.end174

if.then83.us:                                     ; preds = %while.body.lr.ph, %while.cond.backedge.us
  %31 = phi %struct.elt_list* [ %56, %while.cond.backedge.us ], [ %30, %while.body.lr.ph ]
  %elt.us = getelementptr inbounds %struct.elt_list* %31, i64 0, i32 1
  %32 = load %struct.cselib_val_struct** %elt.us, align 8, !tbaa !16
  %val_rtx.us = getelementptr inbounds %struct.cselib_val_struct* %32, i64 0, i32 1, i32 0
  %33 = load %struct.rtx_def** %val_rtx.us, align 8, !tbaa !1
  %34 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 0
  %bf.load.us = load i32* %34, align 8
  %bf.lshr.us = lshr i32 %bf.load.us, 16
  %bf.clear.us = and i32 %bf.lshr.us, 255
  br i1 %or.cond271, label %cond.true107.us, label %cond.false124.us

cond.false124.us:                                 ; preds = %if.then83.us
  switch i32 %bf.clear.us, label %cond.false148.us [
    i32 18, label %cond.true132.us
    i32 24, label %cond.true144.us
  ]

cond.true144.us:                                  ; preds = %cond.false124.us
  %35 = load i32* @target_flags, align 4, !tbaa !15
  %and145.us = lshr i32 %35, 24
  %36 = and i32 %and145.us, 2
  %37 = xor i32 %36, 6
  br label %if.end174.us

cond.true132.us:                                  ; preds = %cond.false124.us
  %38 = load i32* @target_flags, align 4, !tbaa !15
  %and133.us = lshr i32 %38, 25
  %39 = and i32 %and133.us, 1
  %40 = xor i32 %39, 3
  br label %if.end174.us

cond.false148.us:                                 ; preds = %cond.false124.us
  %idxprom154255.us = zext i32 %bf.clear.us to i64
  %arrayidx155.us = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom154255.us
  %41 = load i8* %arrayidx155.us, align 1, !tbaa !8
  %conv156.us = zext i8 %41 to i32
  %42 = load i32* @target_flags, align 4, !tbaa !15
  %and157.us = lshr i32 %42, 23
  %43 = and i32 %and157.us, 4
  %44 = add i32 %43, 4
  %add160.us = add i32 %conv156.us, -1
  %sub161.us = add i32 %add160.us, %44
  %div165.us = sdiv i32 %sub161.us, %44
  br label %if.end174.us

cond.true107.us:                                  ; preds = %if.then83.us
  %idxprom108256.us = zext i32 %bf.clear.us to i64
  %arrayidx109.us = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom108256.us
  %45 = load i32* %arrayidx109.us, align 4, !tbaa !8
  %cmp110.us = icmp eq i32 %45, 5
  br i1 %cmp110.us, label %if.end174.us, label %lor.rhs112.us

lor.rhs112.us:                                    ; preds = %cond.true107.us
  %cmp120.us = icmp eq i32 %45, 6
  %phitmp.us = select i1 %cmp120.us, i32 2, i32 1
  br label %if.end174.us

if.end174.us:                                     ; preds = %cond.true144.us, %cond.true132.us, %cond.false148.us, %cond.true107.us, %lor.rhs112.us
  %cond171.us = phi i32 [ %40, %cond.true132.us ], [ %37, %cond.true144.us ], [ %div165.us, %cond.false148.us ], [ 2, %cond.true107.us ], [ %phitmp.us, %lor.rhs112.us ]
  %add173.us = add i32 %sub172, %cond171.us
  %cmp175.us = icmp ult i32 %add173.us, %regno
  %next.us = getelementptr inbounds %struct.elt_list* %31, i64 0, i32 0
  br i1 %cmp175.us, label %while.cond.outer.loopexit, label %if.end178.us

if.end178.us:                                     ; preds = %if.end174.us
  %46 = load %struct.elt_list** %next.us, align 8, !tbaa !30
  store %struct.elt_list* %46, %struct.elt_list** %l.0.ph275, align 8, !tbaa !1
  %47 = load %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  store %struct.elt_list* %47, %struct.elt_list** %next.us, align 8, !tbaa !30
  store %struct.elt_list* %31, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  %locs.us = getelementptr inbounds %struct.cselib_val_struct* %32, i64 0, i32 2
  br label %for.cond179.us

for.cond179.us:                                   ; preds = %for.inc.us, %if.end178.us
  %p.0.us = phi %struct.elt_loc_list** [ %locs.us, %if.end178.us ], [ %next190.us, %for.inc.us ]
  %48 = load %struct.elt_loc_list** %p.0.us, align 8, !tbaa !1
  %loc.us = getelementptr inbounds %struct.elt_loc_list* %48, i64 0, i32 1
  %49 = load %struct.rtx_def** %loc.us, align 8, !tbaa !11
  %50 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 0
  %bf.load180.us = load i32* %50, align 8
  %bf.clear181.us = and i32 %bf.load180.us, 65535
  %cmp182.us = icmp eq i32 %bf.clear181.us, 61
  br i1 %cmp182.us, label %land.lhs.true184.us, label %for.inc.us

land.lhs.true184.us:                              ; preds = %for.cond179.us
  %arrayidx185.us = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 0
  %rtuint.us = bitcast %union.rtunion_def* %arrayidx185.us to i32*
  %51 = load i32* %rtuint.us, align 4, !tbaa !15
  %cmp186.us = icmp eq i32 %51, %23
  br i1 %cmp186.us, label %if.then188.us, label %for.inc.us

for.inc.us:                                       ; preds = %land.lhs.true184.us, %for.cond179.us
  %next190.us = getelementptr inbounds %struct.elt_loc_list* %48, i64 0, i32 0
  br label %for.cond179.us

if.then188.us:                                    ; preds = %land.lhs.true184.us
  %next.i272.us = getelementptr inbounds %struct.elt_loc_list* %48, i64 0, i32 0
  %52 = load %struct.elt_loc_list** %next.i272.us, align 8, !tbaa !18
  store %struct.elt_loc_list* %52, %struct.elt_loc_list** %p.0.us, align 8, !tbaa !1
  %53 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  store %struct.elt_loc_list* %53, %struct.elt_loc_list** %next.i272.us, align 8, !tbaa !18
  store %struct.elt_loc_list* %48, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  %54 = load %struct.elt_loc_list** %locs.us, align 8, !tbaa !5
  %cmp192.us = icmp eq %struct.elt_loc_list* %54, null
  br i1 %cmp192.us, label %if.then194.us, label %while.cond.backedge.us

if.then194.us:                                    ; preds = %if.then188.us
  %55 = load i32* @n_useless_values, align 4, !tbaa !15
  %inc.us = add nsw i32 %55, 1
  store i32 %inc.us, i32* @n_useless_values, align 4, !tbaa !15
  br label %while.cond.backedge.us

while.cond.backedge.us:                           ; preds = %if.then194.us, %if.then188.us
  %56 = load %struct.elt_list** %l.0.ph275, align 8, !tbaa !1
  %tobool80.us = icmp eq %struct.elt_list* %56, null
  br i1 %tobool80.us, label %for.inc196, label %if.then83.us

if.end174:                                        ; preds = %while.body.lr.ph, %while.cond.backedge
  %57 = phi %struct.elt_list* [ %69, %while.cond.backedge ], [ %30, %while.body.lr.ph ]
  %cmp175 = icmp ult i32 %23, %regno
  %next = getelementptr inbounds %struct.elt_list* %57, i64 0, i32 0
  br i1 %cmp175, label %while.cond.outer.loopexit, label %if.end178

if.end178:                                        ; preds = %if.end174
  %elt = getelementptr inbounds %struct.elt_list* %57, i64 0, i32 1
  %58 = load %struct.cselib_val_struct** %elt, align 8, !tbaa !16
  %59 = load %struct.elt_list** %next, align 8, !tbaa !30
  store %struct.elt_list* %59, %struct.elt_list** %l.0.ph275, align 8, !tbaa !1
  %60 = load %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  store %struct.elt_list* %60, %struct.elt_list** %next, align 8, !tbaa !30
  store %struct.elt_list* %57, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  %locs = getelementptr inbounds %struct.cselib_val_struct* %58, i64 0, i32 2
  br label %for.cond179

for.cond179:                                      ; preds = %for.inc, %if.end178
  %p.0 = phi %struct.elt_loc_list** [ %locs, %if.end178 ], [ %next190, %for.inc ]
  %61 = load %struct.elt_loc_list** %p.0, align 8, !tbaa !1
  %loc = getelementptr inbounds %struct.elt_loc_list* %61, i64 0, i32 1
  %62 = load %struct.rtx_def** %loc, align 8, !tbaa !11
  %63 = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 0
  %bf.load180 = load i32* %63, align 8
  %bf.clear181 = and i32 %bf.load180, 65535
  %cmp182 = icmp eq i32 %bf.clear181, 61
  br i1 %cmp182, label %land.lhs.true184, label %for.inc

land.lhs.true184:                                 ; preds = %for.cond179
  %arrayidx185 = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx185 to i32*
  %64 = load i32* %rtuint, align 4, !tbaa !15
  %cmp186 = icmp eq i32 %64, %23
  br i1 %cmp186, label %if.then188, label %for.inc

if.then188:                                       ; preds = %land.lhs.true184
  %next.i272 = getelementptr inbounds %struct.elt_loc_list* %61, i64 0, i32 0
  %65 = load %struct.elt_loc_list** %next.i272, align 8, !tbaa !18
  store %struct.elt_loc_list* %65, %struct.elt_loc_list** %p.0, align 8, !tbaa !1
  %66 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  store %struct.elt_loc_list* %66, %struct.elt_loc_list** %next.i272, align 8, !tbaa !18
  store %struct.elt_loc_list* %61, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  %67 = load %struct.elt_loc_list** %locs, align 8, !tbaa !5
  %cmp192 = icmp eq %struct.elt_loc_list* %67, null
  br i1 %cmp192, label %if.then194, label %while.cond.backedge

for.inc:                                          ; preds = %for.cond179, %land.lhs.true184
  %next190 = getelementptr inbounds %struct.elt_loc_list* %61, i64 0, i32 0
  br label %for.cond179

if.then194:                                       ; preds = %if.then188
  %68 = load i32* @n_useless_values, align 4, !tbaa !15
  %inc = add nsw i32 %68, 1
  store i32 %inc, i32* @n_useless_values, align 4, !tbaa !15
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then194, %if.then188
  %69 = load %struct.elt_list** %l.0.ph275, align 8, !tbaa !1
  %tobool80 = icmp eq %struct.elt_list* %69, null
  br i1 %tobool80, label %for.inc196, label %if.end174

for.inc196:                                       ; preds = %while.cond.outer.loopexit, %while.cond.backedge, %while.cond.backedge.us, %for.body
  %inc197 = add i32 %i.1277, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i32 %inc197, %endregno.0.ph
  br i1 %exitcond, label %for.end198, label %for.body

for.end198:                                       ; preds = %for.inc196, %for.cond.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @cselib_invalidate_rtx(%struct.rtx_def* %dest, %struct.rtx_def* nocapture readnone %ignore, i8* nocapture readnone %data) #1 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %dest.addr.0 = phi %struct.rtx_def* [ %dest, %entry ], [ %dest.addr.0.be, %while.cond.backedge ]
  %0 = getelementptr inbounds %struct.rtx_def* %dest.addr.0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end22 [
    i32 64, label %while.body
    i32 132, label %while.body
    i32 133, label %while.body
    i32 63, label %while.body
    i32 61, label %if.then
    i32 66, label %if.then21
  ]

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def* %dest.addr.0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end22, %while.body
  %dest.addr.0.be.in = phi %struct.rtx_def** [ %rtx, %while.body ], [ getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), %if.end22 ]
  %dest.addr.0.be = load %struct.rtx_def** %dest.addr.0.be.in, align 8
  br label %while.cond

if.then:                                          ; preds = %while.cond
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %dest.addr.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx15 to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !15
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear17 = and i32 %bf.lshr, 255
  tail call fastcc void @cselib_invalidate_regno(i32 %1, i32 %bf.clear17)
  br label %if.end22

if.then21:                                        ; preds = %while.cond
  %2 = load %struct.htab** @hash_table, align 8, !tbaa !1
  %3 = bitcast %struct.rtx_def* %dest.addr.0 to i8*
  tail call void @htab_traverse(%struct.htab* %2, i32 (i8**, i8*)* @cselib_invalidate_mem_1, i8* %3) #6
  br label %if.end22

if.end22:                                         ; preds = %while.cond, %if.then21, %if.then
  %bf.load23 = load i32* %0, align 8
  %bf.lshr24 = lshr i32 %bf.load23, 16
  %bf.clear25 = and i32 %bf.lshr24, 255
  %call = tail call i32 @push_operand(%struct.rtx_def* %dest.addr.0, i32 %bf.clear25) #6
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end27, label %while.cond.backedge

if.end27:                                         ; preds = %if.end22
  ret void
}

; Function Attrs: nounwind uwtable
define void @cselib_update_varray_sizes() #1 {
entry:
  %call = tail call i32 @max_reg_num() #6
  %0 = load i32* @cselib_nregs, align 4, !tbaa !15
  %cmp = icmp eq i32 %call, %0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  store i32 %call, i32* @cselib_nregs, align 4, !tbaa !15
  %1 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %conv = zext i32 %call to i64
  %call1 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %1, i64 %conv) #6
  store %struct.varray_head_tag* %call1, %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %2 = load %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %call3 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %2, i64 %conv) #6
  store %struct.varray_head_tag* %call3, %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}

declare i32 @max_reg_num() #4

; Function Attrs: nounwind uwtable
define void @cselib_init() #1 {
entry:
  %0 = load %struct.rtx_def** @callmem, align 8, !tbaa !1
  %tobool = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool, label %if.then, label %if.end37

if.then:                                          ; preds = %entry
  tail call void @gcc_obstack_init(%struct.obstack* @cselib_obstack) #6
  %1 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %2 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 0
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  tail call void @_obstack_newchunk(%struct.obstack* @cselib_obstack, i32 0) #6
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %3 = phi i8* [ %.pre, %if.then2 ], [ %2, %if.then ]
  %4 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  %cmp7 = icmp eq i8* %3, %4
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 10), align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end
  %sub.ptr.lhs.cast12 = ptrtoint i8* %3 to i64
  %5 = load i32* getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 6), align 8, !tbaa !24
  %conv14 = sext i32 %5 to i64
  %add = add nsw i64 %conv14, %sub.ptr.lhs.cast12
  %neg = xor i32 %5, -1
  %conv16 = sext i32 %neg to i64
  %and = and i64 %add, %conv16
  %add.ptr17 = getelementptr inbounds i8* null, i64 %and
  store i8* %add.ptr17, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  %6 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %sub.ptr.lhs.cast20 = ptrtoint i8* %add.ptr17 to i64
  %sub.ptr.rhs.cast21 = ptrtoint %struct._obstack_chunk* %6 to i64
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21
  %7 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8, !tbaa !19
  %sub.ptr.lhs.cast25 = ptrtoint i8* %7 to i64
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast21
  %cmp28 = icmp sgt i64 %sub.ptr.sub22, %sub.ptr.sub27
  br i1 %cmp28, label %if.then30, label %if.end33

if.then30:                                        ; preds = %if.end10
  store i8* %7, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %if.end33

if.end33:                                         ; preds = %if.then30, %if.end10
  %8 = phi i8* [ %7, %if.then30 ], [ %add.ptr17, %if.end10 ]
  store i8* %8, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  store i8* %4, i8** @cselib_startobj, align 8, !tbaa !1
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %9) #6
  store %struct.rtx_def* %call, %struct.rtx_def** @callmem, align 8, !tbaa !1
  tail call void @ggc_add_rtx_root(%struct.rtx_def** @callmem, i32 1) #6
  br label %if.end37

if.end37:                                         ; preds = %entry, %if.end33
  %call38 = tail call i32 @max_reg_num() #6
  store i32 %call38, i32* @cselib_nregs, align 4, !tbaa !15
  %conv39 = zext i32 %call38 to i64
  %call40 = tail call %struct.varray_head_tag* @varray_init(i64 %conv39, i64 8, i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0)) #6
  store %struct.varray_head_tag* %call40, %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %10 = load i32* @cselib_nregs, align 4, !tbaa !15
  %conv41 = zext i32 %10 to i64
  %call42 = tail call %struct.varray_head_tag* @varray_init(i64 %conv41, i64 4, i8* getelementptr inbounds ([10 x i8]* @.str2, i64 0, i64 0)) #6
  store %struct.varray_head_tag* %call42, %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %call43 = tail call %struct.htab* @htab_create(i64 31, i32 (i8*)* @get_value_hash, i32 (i8*, i8*)* @entry_and_rtx_equal_p, void (i8*)* null) #6
  store %struct.htab* %call43, %struct.htab** @hash_table, align 8, !tbaa !1
  %11 = load i32* @cselib_nregs, align 4, !tbaa !15
  %cmp40.i = icmp eq i32 %11, 0
  br i1 %cmp40.i, label %if.end.loopexit35.i, label %for.body.i

for.body.i:                                       ; preds = %if.end37, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %if.end37 ]
  %12 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data.i = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 4
  %te.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.elt_list*]*
  %arrayidx.i = getelementptr inbounds [1 x %struct.elt_list*]* %te.i, i64 0, i64 %indvars.iv.i
  store %struct.elt_list* null, %struct.elt_list** %arrayidx.i, align 8, !tbaa !1
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %11
  br i1 %exitcond, label %if.end.loopexit35.i.loopexit, label %for.body.i

if.end.loopexit35.i.loopexit:                     ; preds = %for.body.i
  %.pre65 = load %struct.htab** @hash_table, align 8, !tbaa !1
  br label %if.end.loopexit35.i

if.end.loopexit35.i:                              ; preds = %if.end.loopexit35.i.loopexit, %if.end37
  %13 = phi %struct.htab* [ %.pre65, %if.end.loopexit35.i.loopexit ], [ %call43, %if.end37 ]
  %.pre.i = load %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  store i32 0, i32* @max_value_regs, align 4, !tbaa !15
  %elements_used15.i = getelementptr inbounds %struct.varray_head_tag* %.pre.i, i64 0, i32 1
  store i64 0, i64* %elements_used15.i, align 8, !tbaa !27
  tail call void @htab_empty(%struct.htab* %13) #6
  %14 = load i8** @cselib_startobj, align 8, !tbaa !1
  %15 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %16 = bitcast %struct._obstack_chunk* %15 to i8*
  %cmp16.i = icmp ugt i8* %14, %16
  %17 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8
  %cmp18.i = icmp ult i8* %14, %17
  %or.cond.i = and i1 %cmp16.i, %cmp18.i
  br i1 %or.cond.i, label %if.then20.i, label %if.else21.i

if.then20.i:                                      ; preds = %if.end.loopexit35.i
  store i8* %14, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  store i8* %14, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %clear_table.exit

if.else21.i:                                      ; preds = %if.end.loopexit35.i
  tail call void @obstack_free(%struct.obstack* @cselib_obstack, i8* %14) #6
  br label %clear_table.exit

clear_table.exit:                                 ; preds = %if.then20.i, %if.else21.i
  store %struct.cselib_val_struct* null, %struct.cselib_val_struct** @empty_vals, align 8, !tbaa !1
  store %struct.elt_list* null, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  store %struct.elt_loc_list* null, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  store i32 0, i32* @n_useless_values, align 4, !tbaa !15
  store i32 0, i32* @next_unknown_value, align 4, !tbaa !15
  ret void
}

declare void @gcc_obstack_init(%struct.obstack*) #4

declare void @_obstack_newchunk(%struct.obstack*, i32) #4

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #4

declare void @ggc_add_rtx_root(%struct.rtx_def**, i32) #4

declare %struct.varray_head_tag* @varray_init(i64, i64, i8*) #4

declare %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) #4

; Function Attrs: nounwind readonly uwtable
define internal i32 @get_value_hash(i8* nocapture readonly %entry1) #0 {
entry:
  %value = bitcast i8* %entry1 to i32*
  %0 = load i32* %value, align 4, !tbaa !31
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define internal i32 @entry_and_rtx_equal_p(i8* nocapture readonly %entry1, i8* %x_arg) #1 {
entry:
  %0 = bitcast i8* %x_arg to %struct.rtx_def*
  %1 = bitcast i8* %x_arg to i32*
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %bf.clear3 = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear3, 54
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 0
  %cmp7 = icmp eq i32 %bf.clear3, 55
  %or.cond = and i1 %cmp4, %cmp7
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 265, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.entry_and_rtx_equal_p, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %u = getelementptr inbounds i8* %entry1, i64 8
  %val_rtx = bitcast i8* %u to %struct.rtx_def**
  %2 = load %struct.rtx_def** %val_rtx, align 8, !tbaa !1
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load8 = load i32* %3, align 8
  %bf.lshr9 = lshr i32 %bf.load8, 16
  %bf.clear10 = and i32 %bf.lshr9, 255
  %cmp11 = icmp eq i32 %bf.clear, %bf.clear10
  br i1 %cmp11, label %if.end13, label %return

if.end13:                                         ; preds = %if.end
  %cmp16 = icmp eq i32 %bf.clear3, 58
  br i1 %cmp16, label %land.lhs.true17, label %if.end32

land.lhs.true17:                                  ; preds = %if.end13
  %fld = getelementptr inbounds i8* %x_arg, i64 8
  %rtx = bitcast i8* %fld to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load18 = load i32* %5, align 8
  %6 = and i32 %bf.load18, 65534
  %switch = icmp eq i32 %6, 54
  %. = select i1 %switch, %struct.rtx_def* %4, %struct.rtx_def* %0
  br label %if.end32

if.end32:                                         ; preds = %land.lhs.true17, %if.end13
  %x.0 = phi %struct.rtx_def* [ %0, %if.end13 ], [ %., %land.lhs.true17 ]
  %locs = getelementptr inbounds i8* %entry1, i64 16
  %7 = bitcast i8* %locs to %struct.elt_loc_list**
  %l.047 = load %struct.elt_loc_list** %7, align 8
  %tobool48 = icmp eq %struct.elt_loc_list* %l.047, null
  br i1 %tobool48, label %return, label %for.body

for.cond:                                         ; preds = %for.body
  %next = getelementptr inbounds %struct.elt_loc_list* %l.049, i64 0, i32 0
  %l.0 = load %struct.elt_loc_list** %next, align 8
  %tobool = icmp eq %struct.elt_loc_list* %l.0, null
  br i1 %tobool, label %return, label %for.body

for.body:                                         ; preds = %if.end32, %for.cond
  %l.049 = phi %struct.elt_loc_list* [ %l.0, %for.cond ], [ %l.047, %if.end32 ]
  %loc = getelementptr inbounds %struct.elt_loc_list* %l.049, i64 0, i32 1
  %8 = load %struct.rtx_def** %loc, align 8, !tbaa !11
  %call = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def* %8, %struct.rtx_def* %x.0)
  %tobool33 = icmp eq i32 %call, 0
  br i1 %tobool33, label %for.cond, label %return

return:                                           ; preds = %for.body, %for.cond, %if.end32, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 0, %if.end32 ], [ 1, %for.body ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @cselib_finish() #1 {
entry:
  %0 = load %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %elements_used36.i = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 1
  %1 = load i64* %elements_used36.i, align 8, !tbaa !27
  %cmp237.i = icmp eq i64 %1, 0
  br i1 %cmp237.i, label %if.end.i, label %for.body4.i

for.body4.i:                                      ; preds = %entry, %for.body4.i
  %2 = phi %struct.varray_head_tag* [ %5, %for.body4.i ], [ %0, %entry ]
  %conv39.i = phi i64 [ %conv.i, %for.body4.i ], [ 0, %entry ]
  %i.138.i = phi i32 [ %inc13.i, %for.body4.i ], [ 0, %entry ]
  %data6.i = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 4
  %u.i = bitcast %union.varray_data_tag* %data6.i to [1 x i32]*
  %arrayidx7.i = getelementptr inbounds [1 x i32]* %u.i, i64 0, i64 %conv39.i
  %3 = load i32* %arrayidx7.i, align 4, !tbaa !15
  %idxprom8.i = zext i32 %3 to i64
  %4 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %data9.i = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 4
  %te10.i = bitcast %union.varray_data_tag* %data9.i to [1 x %struct.elt_list*]*
  %arrayidx11.i = getelementptr inbounds [1 x %struct.elt_list*]* %te10.i, i64 0, i64 %idxprom8.i
  store %struct.elt_list* null, %struct.elt_list** %arrayidx11.i, align 8, !tbaa !1
  %inc13.i = add i32 %i.138.i, 1
  %conv.i = zext i32 %inc13.i to i64
  %5 = load %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %elements_used.i = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 1
  %6 = load i64* %elements_used.i, align 8, !tbaa !27
  %cmp2.i = icmp ult i64 %conv.i, %6
  br i1 %cmp2.i, label %for.body4.i, label %if.end.i

if.end.i:                                         ; preds = %for.body4.i, %entry
  %7 = phi %struct.varray_head_tag* [ %0, %entry ], [ %5, %for.body4.i ]
  store i32 0, i32* @max_value_regs, align 4, !tbaa !15
  %elements_used15.i = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 1
  store i64 0, i64* %elements_used15.i, align 8, !tbaa !27
  %8 = load %struct.htab** @hash_table, align 8, !tbaa !1
  tail call void @htab_empty(%struct.htab* %8) #6
  %9 = load i8** @cselib_startobj, align 8, !tbaa !1
  %10 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 1), align 8, !tbaa !25
  %11 = bitcast %struct._obstack_chunk* %10 to i8*
  %cmp16.i = icmp ugt i8* %9, %11
  %12 = load i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 4), align 8
  %cmp18.i = icmp ult i8* %9, %12
  %or.cond.i = and i1 %cmp16.i, %cmp18.i
  br i1 %or.cond.i, label %if.then20.i, label %if.else21.i

if.then20.i:                                      ; preds = %if.end.i
  store i8* %9, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 2), align 8, !tbaa !23
  store i8* %9, i8** getelementptr inbounds (%struct.obstack* @cselib_obstack, i64 0, i32 3), align 8, !tbaa !22
  br label %clear_table.exit

if.else21.i:                                      ; preds = %if.end.i
  tail call void @obstack_free(%struct.obstack* @cselib_obstack, i8* %9) #6
  br label %clear_table.exit

clear_table.exit:                                 ; preds = %if.then20.i, %if.else21.i
  store %struct.cselib_val_struct* null, %struct.cselib_val_struct** @empty_vals, align 8, !tbaa !1
  store %struct.elt_list* null, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  store %struct.elt_loc_list* null, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  store i32 0, i32* @n_useless_values, align 4, !tbaa !15
  store i32 0, i32* @next_unknown_value, align 4, !tbaa !15
  %13 = load %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  %tobool = icmp eq %struct.varray_head_tag* %13, null
  br i1 %tobool, label %do.body1, label %if.then

if.then:                                          ; preds = %clear_table.exit
  %14 = bitcast %struct.varray_head_tag* %13 to i8*
  tail call void @free(i8* %14)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** @reg_values, align 8, !tbaa !1
  br label %do.body1

do.body1:                                         ; preds = %clear_table.exit, %if.then
  %15 = load %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  %tobool2 = icmp eq %struct.varray_head_tag* %15, null
  br i1 %tobool2, label %do.end5, label %if.then3

if.then3:                                         ; preds = %do.body1
  %16 = bitcast %struct.varray_head_tag* %15 to i8*
  tail call void @free(i8* %16)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** @used_regs, align 8, !tbaa !1
  br label %do.end5

do.end5:                                          ; preds = %do.body1, %if.then3
  %17 = load %struct.htab** @hash_table, align 8, !tbaa !1
  tail call void @htab_delete(%struct.htab* %17) #6
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #5

declare void @htab_delete(%struct.htab*) #4

declare void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @discard_useless_locs(i8** nocapture readonly %x, i8* nocapture readnone %info) #1 {
entry:
  %0 = load i8** %x, align 8, !tbaa !1
  %locs = getelementptr inbounds i8* %0, i64 16
  %1 = bitcast i8* %locs to %struct.elt_loc_list**
  %2 = load %struct.elt_loc_list** %1, align 8, !tbaa !5
  %cmp = icmp eq %struct.elt_loc_list* %2, null
  br i1 %cmp, label %if.end8, label %while.body.lr.ph

while.cond.outer.loopexit:                        ; preds = %while.body
  %tobool13 = icmp eq %struct.elt_loc_list* %6, null
  br i1 %tobool13, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry, %while.cond.outer.loopexit
  %3 = phi %struct.elt_loc_list* [ %6, %while.cond.outer.loopexit ], [ %2, %entry ]
  %p.0.ph15 = phi %struct.elt_loc_list** [ %next, %while.cond.outer.loopexit ], [ %1, %entry ]
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.then
  %4 = phi %struct.elt_loc_list* [ %3, %while.body.lr.ph ], [ %8, %if.then ]
  %loc = getelementptr inbounds %struct.elt_loc_list* %4, i64 0, i32 1
  %5 = load %struct.rtx_def** %loc, align 8, !tbaa !11
  %call = tail call i32 @references_value_p(%struct.rtx_def* %5, i32 1)
  %tobool2 = icmp eq i32 %call, 0
  %next = getelementptr inbounds %struct.elt_loc_list* %4, i64 0, i32 0
  %6 = load %struct.elt_loc_list** %next, align 8, !tbaa !1
  br i1 %tobool2, label %while.cond.outer.loopexit, label %if.then

if.then:                                          ; preds = %while.body
  store %struct.elt_loc_list* %6, %struct.elt_loc_list** %p.0.ph15, align 8, !tbaa !1
  %7 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  store %struct.elt_loc_list* %7, %struct.elt_loc_list** %next, align 8, !tbaa !18
  store %struct.elt_loc_list* %4, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  %8 = load %struct.elt_loc_list** %p.0.ph15, align 8, !tbaa !1
  %tobool = icmp eq %struct.elt_loc_list* %8, null
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.cond.outer.loopexit, %if.then
  br i1 %cmp, label %if.end8, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.end
  %9 = load %struct.elt_loc_list** %1, align 8, !tbaa !5
  %cmp5 = icmp eq %struct.elt_loc_list* %9, null
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %land.lhs.true
  %10 = load i32* @n_useless_values, align 4, !tbaa !15
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* @n_useless_values, align 4, !tbaa !15
  store i1 true, i1* @values_became_useless, align 1
  br label %if.end8

if.end8:                                          ; preds = %entry, %while.end, %if.then7, %land.lhs.true
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @discard_useless_values(i8** %x, i8* nocapture readnone %info) #1 {
entry:
  %0 = load i8** %x, align 8, !tbaa !1
  %locs = getelementptr inbounds i8* %0, i64 16
  %1 = bitcast i8* %locs to %struct.elt_loc_list**
  %2 = load %struct.elt_loc_list** %1, align 8, !tbaa !5
  %cmp = icmp eq %struct.elt_loc_list* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = bitcast i8* %0 to %struct.cselib_val_struct*
  %4 = load %struct.htab** @hash_table, align 8, !tbaa !1
  tail call void @htab_clear_slot(%struct.htab* %4, i8** %x) #6
  %addr_list.i = getelementptr inbounds i8* %0, i64 24
  %5 = bitcast i8* %addr_list.i to %struct.elt_list**
  %6 = load %struct.elt_list** %5, align 8, !tbaa !32
  %tobool5.i = icmp eq %struct.elt_list* %6, null
  br i1 %tobool5.i, label %unchain_one_value.exit, label %while.body.i

while.body.i:                                     ; preds = %if.then, %while.body.i
  %7 = phi %struct.elt_list* [ %10, %while.body.i ], [ %6, %if.then ]
  %next.i.i = getelementptr inbounds %struct.elt_list* %7, i64 0, i32 0
  %8 = load %struct.elt_list** %next.i.i, align 8, !tbaa !30
  store %struct.elt_list* %8, %struct.elt_list** %5, align 8, !tbaa !1
  %9 = load %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  store %struct.elt_list* %9, %struct.elt_list** %next.i.i, align 8, !tbaa !30
  store %struct.elt_list* %7, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  %10 = load %struct.elt_list** %5, align 8, !tbaa !32
  %tobool.i = icmp eq %struct.elt_list* %10, null
  br i1 %tobool.i, label %unchain_one_value.exit, label %while.body.i

unchain_one_value.exit:                           ; preds = %while.body.i, %if.then
  %11 = load %struct.cselib_val_struct** @empty_vals, align 8, !tbaa !1
  %12 = getelementptr inbounds i8* %0, i64 8
  %13 = bitcast i8* %12 to %struct.rtx_def**
  %.c.i = bitcast %struct.cselib_val_struct* %11 to %struct.rtx_def*
  store %struct.rtx_def* %.c.i, %struct.rtx_def** %13, align 8, !tbaa !1
  store %struct.cselib_val_struct* %3, %struct.cselib_val_struct** @empty_vals, align 8, !tbaa !1
  %14 = load i32* @n_useless_values, align 4, !tbaa !15
  %dec = add nsw i32 %14, -1
  store i32 %dec, i32* @n_useless_values, align 4, !tbaa !15
  br label %if.end

if.end:                                           ; preds = %unchain_one_value.exit, %entry
  ret i32 1
}

declare void @htab_clear_slot(%struct.htab*, i8**) #4

declare i32 @push_operand(%struct.rtx_def*, i32) #4

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #6

declare %struct.rtx_def* @gen_rtx_fmt_eee(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #4

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #4

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #6

declare i32 @side_effects_p(%struct.rtx_def*) #4

declare %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #4

; Function Attrs: nounwind uwtable
define internal i32 @cselib_invalidate_mem_1(i8** nocapture readonly %slot, i8* %info) #1 {
entry:
  %0 = load i8** %slot, align 8, !tbaa !1
  %1 = bitcast i8* %0 to %struct.cselib_val_struct*
  %2 = bitcast i8* %info to %struct.rtx_def*
  %locs = getelementptr inbounds i8* %0, i64 16
  %3 = bitcast i8* %locs to %struct.elt_loc_list**
  %4 = load %struct.elt_loc_list** %3, align 8, !tbaa !5
  %cmp = icmp eq %struct.elt_loc_list* %4, null
  br i1 %cmp, label %if.end16, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry, %if.then
  %5 = phi %struct.elt_loc_list* [ %10, %if.then ], [ %4, %entry ]
  %p.0.ph29 = phi %struct.elt_loc_list** [ %next, %if.then ], [ %3, %entry ]
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.then8
  %6 = phi %struct.elt_loc_list* [ %5, %while.body.lr.ph ], [ %19, %if.then8 ]
  %loc = getelementptr inbounds %struct.elt_loc_list* %6, i64 0, i32 1
  %7 = load %struct.rtx_def** %loc, align 8, !tbaa !11
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp2 = icmp eq i32 %bf.clear, 66
  br i1 %cmp2, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %while.body
  %call = tail call fastcc i32 @cselib_mem_conflict_p(%struct.rtx_def* %2, %struct.rtx_def* %7)
  %tobool4 = icmp eq i32 %call, 0
  br i1 %tobool4, label %lor.lhs.false.if.then_crit_edge, label %if.end

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  %.pre = load %struct.elt_loc_list** %p.0.ph29, align 8, !tbaa !1
  br label %if.then

if.then:                                          ; preds = %while.body, %lor.lhs.false.if.then_crit_edge
  %9 = phi %struct.elt_loc_list* [ %.pre, %lor.lhs.false.if.then_crit_edge ], [ %6, %while.body ]
  %next = getelementptr inbounds %struct.elt_loc_list* %9, i64 0, i32 0
  %10 = load %struct.elt_loc_list** %next, align 8, !tbaa !1
  %tobool27 = icmp eq %struct.elt_loc_list* %10, null
  br i1 %tobool27, label %while.end, label %while.body.lr.ph

if.end:                                           ; preds = %lor.lhs.false
  %arrayidx = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call5 = tail call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %11, i32 0, i32 0)
  %addr_list = getelementptr inbounds %struct.cselib_val_struct* %call5, i64 0, i32 3
  br label %for.cond

for.cond:                                         ; preds = %for.cond, %if.end
  %mem_chain.0 = phi %struct.elt_list** [ %addr_list, %if.end ], [ %next.i, %for.cond ]
  %12 = load %struct.elt_list** %mem_chain.0, align 8, !tbaa !1
  %elt = getelementptr inbounds %struct.elt_list* %12, i64 0, i32 1
  %13 = load %struct.cselib_val_struct** %elt, align 8, !tbaa !16
  %cmp6 = icmp eq %struct.cselib_val_struct* %13, %1
  %next.i = getelementptr inbounds %struct.elt_list* %12, i64 0, i32 0
  br i1 %cmp6, label %if.then8, label %for.cond

if.then8:                                         ; preds = %for.cond
  %14 = load %struct.elt_list** %next.i, align 8, !tbaa !30
  store %struct.elt_list* %14, %struct.elt_list** %mem_chain.0, align 8, !tbaa !1
  %15 = load %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  store %struct.elt_list* %15, %struct.elt_list** %next.i, align 8, !tbaa !30
  store %struct.elt_list* %12, %struct.elt_list** @empty_elt_lists, align 8, !tbaa !1
  %16 = load %struct.elt_loc_list** %p.0.ph29, align 8, !tbaa !1
  %next.i26 = getelementptr inbounds %struct.elt_loc_list* %16, i64 0, i32 0
  %17 = load %struct.elt_loc_list** %next.i26, align 8, !tbaa !18
  store %struct.elt_loc_list* %17, %struct.elt_loc_list** %p.0.ph29, align 8, !tbaa !1
  %18 = load %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  store %struct.elt_loc_list* %18, %struct.elt_loc_list** %next.i26, align 8, !tbaa !18
  store %struct.elt_loc_list* %16, %struct.elt_loc_list** @empty_elt_loc_lists, align 8, !tbaa !1
  %19 = load %struct.elt_loc_list** %p.0.ph29, align 8, !tbaa !1
  %tobool = icmp eq %struct.elt_loc_list* %19, null
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %if.then, %if.then8
  br i1 %cmp, label %if.end16, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.end
  %20 = load %struct.elt_loc_list** %3, align 8, !tbaa !5
  %cmp13 = icmp eq %struct.elt_loc_list* %20, null
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %land.lhs.true
  %21 = load i32* @n_useless_values, align 4, !tbaa !15
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* @n_useless_values, align 4, !tbaa !15
  br label %if.end16

if.end16:                                         ; preds = %entry, %while.end, %if.then15, %land.lhs.true
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @cselib_mem_conflict_p(%struct.rtx_def* %mem_base, %struct.rtx_def* %val) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %val, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 61, label %return
    i32 59, label %return
    i32 69, label %return
    i32 62, label %return
    i32 58, label %return
    i32 54, label %return
    i32 55, label %return
    i32 56, label %return
    i32 68, label %return
    i32 67, label %return
    i32 66, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %mem_base, i64 0, i32 0
  %bf.load2 = load i32* %1, align 8
  %bf.clear3 = and i32 %bf.load2, 16711680
  %cmp = icmp eq i32 %bf.clear3, 3342336
  %bf.clear6 = and i32 %bf.load, 16711680
  %cmp7 = icmp eq i32 %bf.clear6, 3342336
  %or.cond = or i1 %cmp, %cmp7
  br i1 %or.cond, label %return, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %sw.bb1
  %call = tail call i32 @anti_dependence(%struct.rtx_def* %val, %struct.rtx_def* %mem_base) #6
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %sw.epilog, label %return

sw.epilog:                                        ; preds = %lor.lhs.false8, %entry
  %idxprom71 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom71
  %2 = load i8** %arrayidx, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom71
  %3 = load i8* %arrayidx10, align 1, !tbaa !8
  %cmp1177 = icmp eq i8 %3, 0
  br i1 %cmp1177, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %4 = zext i8 %3 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv80 = phi i64 [ %4, %for.body.lr.ph ], [ %indvars.iv.next81, %for.cond.backedge ]
  %indvars.iv.next81 = add nsw i64 %indvars.iv80, -1
  %arrayidx14 = getelementptr inbounds i8* %2, i64 %indvars.iv.next81
  %5 = load i8* %arrayidx14, align 1, !tbaa !8
  switch i8 %5, label %for.cond.backedge [
    i8 101, label %if.then18
    i8 69, label %for.cond31.preheader
  ]

for.cond.backedge:                                ; preds = %for.cond31, %for.cond31.preheader, %for.body, %if.then18
  %6 = trunc i64 %indvars.iv.next81 to i32
  %cmp11 = icmp sgt i32 %6, 0
  br i1 %cmp11, label %for.body, label %return

for.cond31.preheader:                             ; preds = %for.body
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %val, i64 0, i32 1, i64 %indvars.iv.next81
  %rtvec = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtvec_def**
  %7 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem73 = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 0
  %8 = load i32* %num_elem73, align 4, !tbaa !9
  %cmp3574 = icmp sgt i32 %8, 0
  br i1 %cmp3574, label %for.body37, label %for.cond.backedge

if.then18:                                        ; preds = %for.body
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %val, i64 0, i32 1, i64 %indvars.iv.next81
  %rtx = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  %call21 = tail call fastcc i32 @cselib_mem_conflict_p(%struct.rtx_def* %mem_base, %struct.rtx_def* %9)
  %tobool22 = icmp eq i32 %call21, 0
  br i1 %tobool22, label %for.cond.backedge, label %return

for.cond31:                                       ; preds = %for.body37
  %10 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !1
  %num_elem = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 0
  %11 = load i32* %num_elem, align 4, !tbaa !9
  %12 = trunc i64 %indvars.iv.next to i32
  %cmp35 = icmp slt i32 %12, %11
  br i1 %cmp35, label %for.body37, label %for.cond.backedge

for.body37:                                       ; preds = %for.cond31.preheader, %for.cond31
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond31 ], [ 0, %for.cond31.preheader ]
  %13 = phi %struct.rtvec_def* [ %10, %for.cond31 ], [ %7, %for.cond31.preheader ]
  %arrayidx43 = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 1, i64 %indvars.iv
  %14 = load %struct.rtx_def** %arrayidx43, align 8, !tbaa !1
  %call44 = tail call fastcc i32 @cselib_mem_conflict_p(%struct.rtx_def* %mem_base, %struct.rtx_def* %14)
  %tobool45 = icmp eq i32 %call44, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool45, label %for.cond31, label %return

return:                                           ; preds = %if.then18, %for.cond.backedge, %for.body37, %sw.epilog, %sw.bb1, %lor.lhs.false8, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 1, %lor.lhs.false8 ], [ 1, %sw.bb1 ], [ 0, %sw.epilog ], [ 1, %for.body37 ], [ 1, %if.then18 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}

declare i32 @anti_dependence(%struct.rtx_def*, %struct.rtx_def*) #4

declare void @htab_empty(%struct.htab*) #4

declare void @obstack_free(%struct.obstack*, i8*) #4

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #4

declare %struct.rtx_def* @gen_rtx_fmt_0(i32, i32) #4

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #6

attributes #0 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !2, i64 16}
!6 = metadata !{metadata !"cselib_val_struct", metadata !7, i64 0, metadata !3, i64 8, metadata !2, i64 16, metadata !2, i64 24}
!7 = metadata !{metadata !"int", metadata !3, i64 0}
!8 = metadata !{metadata !3, metadata !3, i64 0}
!9 = metadata !{metadata !10, metadata !7, i64 0}
!10 = metadata !{metadata !"rtvec_def", metadata !7, i64 0, metadata !3, i64 8}
!11 = metadata !{metadata !12, metadata !2, i64 8}
!12 = metadata !{metadata !"elt_loc_list", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16}
!13 = metadata !{metadata !14, metadata !14, i64 0}
!14 = metadata !{metadata !"long long", metadata !3, i64 0}
!15 = metadata !{metadata !7, metadata !7, i64 0}
!16 = metadata !{metadata !17, metadata !2, i64 8}
!17 = metadata !{metadata !"elt_list", metadata !2, i64 0, metadata !2, i64 8}
!18 = metadata !{metadata !12, metadata !2, i64 0}
!19 = metadata !{metadata !20, metadata !2, i64 32}
!20 = metadata !{metadata !"obstack", metadata !21, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !21, i64 40, metadata !7, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !7, i64 80, metadata !7, i64 80, metadata !7, i64 80}
!21 = metadata !{metadata !"long", metadata !3, i64 0}
!22 = metadata !{metadata !20, metadata !2, i64 24}
!23 = metadata !{metadata !20, metadata !2, i64 16}
!24 = metadata !{metadata !20, metadata !7, i64 48}
!25 = metadata !{metadata !20, metadata !2, i64 8}
!26 = metadata !{metadata !12, metadata !2, i64 16}
!27 = metadata !{metadata !28, metadata !21, i64 8}
!28 = metadata !{metadata !"varray_head_tag", metadata !21, i64 0, metadata !21, i64 8, metadata !21, i64 16, metadata !2, i64 24, metadata !3, i64 32}
!29 = metadata !{metadata !28, metadata !21, i64 0}
!30 = metadata !{metadata !17, metadata !2, i64 0}
!31 = metadata !{metadata !6, metadata !7, i64 0}
!32 = metadata !{metadata !6, metadata !2, i64 24}
!33 = metadata !{metadata !34, metadata !2, i64 0}
!34 = metadata !{metadata !"set", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24}
!35 = metadata !{metadata !34, metadata !2, i64 8}
!36 = metadata !{metadata !34, metadata !2, i64 16}
!37 = metadata !{metadata !34, metadata !2, i64 24}
!38 = metadata !{metadata !39, metadata !39, i64 0}
!39 = metadata !{metadata !"short", metadata !3, i64 0}
