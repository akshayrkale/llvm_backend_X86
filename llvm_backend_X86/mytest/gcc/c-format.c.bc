; ModuleID = 'c-format.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type opaque
%union.anon.1 = type { %struct.function* }
%struct.function = type opaque
%struct.lang_decl = type opaque
%struct.format_kind_info = type { i8*, %struct.format_length_info*, %struct.format_char_info*, i8*, i8*, %struct.format_flag_spec*, %struct.format_flag_pair*, i32, i32, i32, i32, i32, i32, %union.tree_node**, %union.tree_node** }
%struct.format_length_info = type { i8*, i32, i32, i8*, i32, i32 }
%struct.format_char_info = type { i8*, i32, i32, [9 x %struct.format_type_detail], i8*, i8* }
%struct.format_type_detail = type { i32, i8*, %union.tree_node** }
%struct.format_flag_spec = type { i32, i32, i32, i8*, i8*, i32 }
%struct.format_flag_pair = type { i32, i32, i32, i32 }
%struct.function_format_info = type { i32, i64, i64 }
%struct.format_check_results = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.format_wanted_type = type { %union.tree_node*, i8*, i32, i32, i32, i32, i8*, %union.tree_node*, i32, %struct.format_wanted_type* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.diagnostic_context = type { %struct.output_buffer, i8*, [1 x %struct.__va_list_tag]*, i8*, i32, i32, void (%struct.output_buffer*, %struct.diagnostic_context*)*, void (%struct.output_buffer*, %struct.diagnostic_context*)*, i8* }
%struct.output_buffer = type { %struct.output_state, %struct._IO_FILE*, %struct.obstack, i32, [128 x i8], i32 (%struct.output_buffer*)* }
%struct.output_state = type { i8*, i32, i32, i32, i8, i8, i32, i8*, [1 x %struct.__va_list_tag]*, [7 x i32] }
%struct._IO_FILE = type opaque
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@warn_format = common global i32 0, align 4
@warn_format_y2k = common global i32 0, align 4
@warn_format_extra_args = common global i32 0, align 4
@warn_format_nonliteral = common global i32 0, align 4
@warn_format_security = common global i32 0, align 4
@integer_types = external global [11 x %union.tree_node*]
@.str = private unnamed_addr constant [36 x i8] c"format string arg not a string type\00", align 1
@.str1 = private unnamed_addr constant [34 x i8] c"args to be formatted is not '...'\00", align 1
@.str2 = private unnamed_addr constant [41 x i8] c"strftime formats cannot format arguments\00", align 1
@.str3 = private unnamed_addr constant [41 x i8] c"format string has invalid operand number\00", align 1
@.str4 = private unnamed_addr constant [37 x i8] c"function does not return string type\00", align 1
@.str5 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@warn_missing_format_attribute = external global i32
@format_types = internal constant [4 x %struct.format_kind_info] [%struct.format_kind_info { i8* getelementptr inbounds ([7 x i8]* @.str65, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([9 x %struct.format_length_info]* @printf_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([15 x %struct.format_char_info]* @print_char_table, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str66, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([11 x %struct.format_flag_spec]* bitcast (<{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } }>* @printf_flag_specs to [11 x %struct.format_flag_spec]*), i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([4 x %struct.format_flag_pair]* @printf_flag_pairs, i32 0, i32 0), i32 89, i32 119, i32 0, i32 112, i32 0, i32 76, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_kind_info { i8* getelementptr inbounds ([6 x i8]* @.str67, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([8 x %struct.format_length_info]* @scanf_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([13 x %struct.format_char_info]* @scan_char_table, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str68, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([7 x %struct.format_flag_spec]* bitcast (<{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } }>* @scanf_flag_specs to [7 x %struct.format_flag_spec]*), i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([2 x %struct.format_flag_pair]* @scanf_flag_pairs, i32 0, i32 0), i32 179, i32 119, i32 0, i32 0, i32 42, i32 76, %union.tree_node** null, %union.tree_node** null }, %struct.format_kind_info { i8* getelementptr inbounds ([9 x i8]* @.str69, i32 0, i32 0), %struct.format_length_info* null, %struct.format_char_info* getelementptr inbounds ([20 x %struct.format_char_info]* @time_char_table, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str70, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str71, i32 0, i32 0), %struct.format_flag_spec* getelementptr inbounds ([10 x %struct.format_flag_spec]* bitcast (<{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } }>* @strftime_flag_specs to [10 x %struct.format_flag_spec]*), i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([6 x %struct.format_flag_pair]* @strftime_flag_pairs, i32 0, i32 0), i32 4, i32 119, i32 0, i32 0, i32 0, i32 0, %union.tree_node** null, %union.tree_node** null }, %struct.format_kind_info { i8* getelementptr inbounds ([8 x i8]* @.str72, i32 0, i32 0), %struct.format_length_info* getelementptr inbounds ([2 x %struct.format_length_info]* @strfmon_length_specs, i32 0, i32 0), %struct.format_char_info* getelementptr inbounds ([2 x %struct.format_char_info]* @monetary_char_table, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str73, i32 0, i32 0), i8* null, %struct.format_flag_spec* getelementptr inbounds ([11 x %struct.format_flag_spec]* bitcast (<{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } }>* @strfmon_flag_specs to [11 x %struct.format_flag_spec]*), i32 0, i32 0), %struct.format_flag_pair* getelementptr inbounds ([2 x %struct.format_flag_pair]* @strfmon_flag_pairs, i32 0, i32 0), i32 1, i32 119, i32 35, i32 112, i32 0, i32 76, %union.tree_node** null, %union.tree_node** null }], align 16
@current_function_decl = external global %union.tree_node*
@.str6 = private unnamed_addr constant [63 x i8] c"function might be possible candidate for `%s' format attribute\00", align 1
@.str7 = private unnamed_addr constant [55 x i8] c"format not a string literal, format string not checked\00", align 1
@.str8 = private unnamed_addr constant [52 x i8] c"format not a string literal and no format arguments\00", align 1
@.str9 = private unnamed_addr constant [56 x i8] c"format not a string literal, argument types not checked\00", align 1
@.str10 = private unnamed_addr constant [30 x i8] c"too many arguments for format\00", align 1
@.str11 = private unnamed_addr constant [35 x i8] c"unused arguments in $-style format\00", align 1
@.str12 = private unnamed_addr constant [26 x i8] c"zero-length format string\00", align 1
@.str13 = private unnamed_addr constant [34 x i8] c"format is a wide character string\00", align 1
@.str14 = private unnamed_addr constant [27 x i8] c"unterminated format string\00", align 1
@input_filename = external global i8*
@lineno = external global i32
@.str15 = private unnamed_addr constant [11 x i8] c"format_arg\00", align 1
@.str16 = private unnamed_addr constant [11 x i8] c"c-format.c\00", align 1
@__FUNCTION__.check_format_info_recurse = private unnamed_addr constant [26 x i8] c"check_format_info_recurse\00", align 1
@.str17 = private unnamed_addr constant [19 x i8] c"null format string\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@.str18 = private unnamed_addr constant [24 x i8] c"embedded `\5C0' in format\00", align 1
@.str19 = private unnamed_addr constant [33 x i8] c"spurious trailing `%%' in format\00", align 1
@.str20 = private unnamed_addr constant [22 x i8] c"repeated %s in format\00", align 1
@.str21 = private unnamed_addr constant [48 x i8] c"missing fill character at end of strfmon format\00", align 1
@.str22 = private unnamed_addr constant [29 x i8] c"too few arguments for format\00", align 1
@.str23 = private unnamed_addr constant [12 x i8] c"field width\00", align 1
@_sch_istable = external constant [256 x i16]
@.str24 = private unnamed_addr constant [24 x i8] c"zero width in %s format\00", align 1
@.str25 = private unnamed_addr constant [34 x i8] c"empty left precision in %s format\00", align 1
@.str26 = private unnamed_addr constant [16 x i8] c"field precision\00", align 1
@.str27 = private unnamed_addr constant [29 x i8] c"empty precision in %s format\00", align 1
@pedantic = external global i32
@warn_long_long = external global i32
@c_language = external global i32
@flag_isoc99 = external global i32
@flag_isoc94 = external global i32
@.str28 = private unnamed_addr constant [48 x i8] c"%s does not support the `%s' %s length modifier\00", align 1
@.str29 = private unnamed_addr constant [8 x i8] c"ISO C++\00", align 1
@.str30 = private unnamed_addr constant [6 x i8] c"ISO C\00", align 1
@.str31 = private unnamed_addr constant [8 x i8] c"ISO C89\00", align 1
@.str32 = private unnamed_addr constant [39 x i8] c"conversion lacks type at end of format\00", align 1
@.str33 = private unnamed_addr constant [49 x i8] c"unknown conversion type character `%c' in format\00", align 1
@.str34 = private unnamed_addr constant [49 x i8] c"unknown conversion type character 0x%x in format\00", align 1
@.str35 = private unnamed_addr constant [41 x i8] c"%s does not support the `%%%c' %s format\00", align 1
@.str36 = private unnamed_addr constant [30 x i8] c"%s used with `%%%c' %s format\00", align 1
@.str37 = private unnamed_addr constant [23 x i8] c"%s does not support %s\00", align 1
@.str38 = private unnamed_addr constant [49 x i8] c"%s does not support %s with the `%%%c' %s format\00", align 1
@.str39 = private unnamed_addr constant [40 x i8] c"%s ignored with %s and `%%%c' %s format\00", align 1
@.str40 = private unnamed_addr constant [32 x i8] c"%s ignored with %s in %s format\00", align 1
@.str41 = private unnamed_addr constant [48 x i8] c"use of %s and %s together with `%%%c' %s format\00", align 1
@.str42 = private unnamed_addr constant [39 x i8] c"use of %s and %s together in %s format\00", align 1
@.str43 = private unnamed_addr constant [57 x i8] c"`%%%c' yields only last 2 digits of year in some locales\00", align 1
@.str44 = private unnamed_addr constant [41 x i8] c"`%%%c' yields only last 2 digits of year\00", align 1
@.str45 = private unnamed_addr constant [32 x i8] c"no closing `]' for `%%[' format\00", align 1
@.str46 = private unnamed_addr constant [53 x i8] c"use of `%s' length modifier with `%c' type character\00", align 1
@.str47 = private unnamed_addr constant [43 x i8] c"%s does not support the `%%%s%c' %s format\00", align 1
@.str48 = private unnamed_addr constant [52 x i8] c"operand number specified with suppressed assignment\00", align 1
@.str49 = private unnamed_addr constant [55 x i8] c"operand number specified for format taking no argument\00", align 1
@.str50 = private unnamed_addr constant [35 x i8] c"missing $ operand number in format\00", align 1
@__FUNCTION__.check_format_types = private unnamed_addr constant [19 x i8] c"check_format_types\00", align 1
@.str51 = private unnamed_addr constant [38 x i8] c"writing through null pointer (arg %d)\00", align 1
@.str52 = private unnamed_addr constant [38 x i8] c"reading through null pointer (arg %d)\00", align 1
@tree_code_type = external global [256 x i8]
@.str53 = private unnamed_addr constant [38 x i8] c"writing into constant object (arg %d)\00", align 1
@.str54 = private unnamed_addr constant [50 x i8] c"extra type qualifiers in format argument (arg %d)\00", align 1
@.str55 = private unnamed_addr constant [42 x i8] c"format argument is not a pointer (arg %d)\00", align 1
@.str56 = private unnamed_addr constant [55 x i8] c"format argument is not a pointer to a pointer (arg %d)\00", align 1
@.str57 = private unnamed_addr constant [8 x i8] c"pointer\00", align 1
@.str58 = private unnamed_addr constant [15 x i8] c"different type\00", align 1
@.str59 = private unnamed_addr constant [27 x i8] c"%s is not type %s (arg %d)\00", align 1
@.str60 = private unnamed_addr constant [27 x i8] c"%s format, %s arg (arg %d)\00", align 1
@__FUNCTION__.get_flag_spec = private unnamed_addr constant [14 x i8] c"get_flag_spec\00", align 1
@dollar_format_warned = internal unnamed_addr global i1 false
@.str61 = private unnamed_addr constant [48 x i8] c"%s does not support %%n$ operand number formats\00", align 1
@dollar_first_arg_num = internal unnamed_addr global i32 0, align 4
@dollar_arguments_count = internal unnamed_addr global i32 0, align 4
@.str62 = private unnamed_addr constant [38 x i8] c"operand number out of range in format\00", align 1
@dollar_max_arg_used = internal unnamed_addr global i32 0, align 4
@dollar_arguments_alloc = internal unnamed_addr global i32 0, align 4
@dollar_arguments_used = internal unnamed_addr global i8* null, align 8
@dollar_arguments_pointer_p = internal unnamed_addr global i8* null, align 8
@.str63 = private unnamed_addr constant [52 x i8] c"format argument %d used more than once in %s format\00", align 1
@__FUNCTION__.maybe_read_dollar_number = private unnamed_addr constant [25 x i8] c"maybe_read_dollar_number\00", align 1
@.str64 = private unnamed_addr constant [68 x i8] c"format argument %d unused before used argument %d in $-style format\00", align 1
@.str65 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@printf_length_specs = internal constant [9 x %struct.format_length_info] [%struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str138, i32 0, i32 0), i32 2, i32 0, i8* getelementptr inbounds ([3 x i8]* @.str177, i32 0, i32 0), i32 1, i32 3 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str178, i32 0, i32 0), i32 3, i32 0, i8* getelementptr inbounds ([3 x i8]* @.str179, i32 0, i32 0), i32 4, i32 2 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str180, i32 0, i32 0), i32 4, i32 4, i8* null, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str96, i32 0, i32 0), i32 5, i32 0, i8* null, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str139, i32 0, i32 0), i32 6, i32 3, i8* null, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str210, i32 0, i32 0), i32 6, i32 4, i8* null, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str181, i32 0, i32 0), i32 7, i32 3, i8* null, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str118, i32 0, i32 0), i32 8, i32 3, i8* null, i32 0, i32 0 }, %struct.format_length_info zeroinitializer], align 16
@print_char_table = internal constant [15 x %struct.format_char_info] [%struct.format_char_info { i8* getelementptr inbounds ([3 x i8]* @.str153, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 8) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([14 x i8]* @.str154, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8]* @.str155, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 240) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([9 x i8]* @.str156, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 56) to %union.tree_node**) }], i8* getelementptr inbounds ([9 x i8]* @.str194, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str195, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8]* @.str163, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 16) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([7 x i8]* @.str160, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([19 x i8]* @.str161, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8]* @.str162, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 64) to %union.tree_node**) }], i8* getelementptr inbounds ([6 x i8]* @.str196, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str195, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str159, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 16) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([7 x i8]* @.str160, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([19 x i8]* @.str161, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8]* @.str162, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 64) to %union.tree_node**) }], i8* getelementptr inbounds ([7 x i8]* @.str197, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str195, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8]* @.str198, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 208) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([9 x i8]* @.str199, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8]* @.str200, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 208) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([8 x i8]* @.str201, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str167, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([7 x i8]* @.str202, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([3 x i8]* @.str203, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str170, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([8 x i8]* @.str168, i32 0, i32 0), %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([4 x i8]* @.str204, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str205, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str120, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 216) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([3 x i8]* @.str203, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str167, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str174, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 8) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([14 x i8]* @.str154, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8]* @.str155, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 240) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([9 x i8]* @.str156, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 56) to %union.tree_node**) }], i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str206, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 208) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([9 x i8]* @.str199, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8]* @.str207, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 208) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([8 x i8]* @.str201, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str129, i32 0, i32 0), i32 0, i32 4, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 4, i8* getelementptr inbounds ([7 x i8]* @.str202, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([3 x i8]* @.str203, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str176, i32 0, i32 0), i32 1, i32 4, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 4, i8* getelementptr inbounds ([8 x i8]* @.str168, i32 0, i32 0), %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([4 x i8]* @.str204, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str208, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str209, i32 0, i32 0), i32 0, i32 4, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 216) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([4 x i8]* @.str204, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info zeroinitializer], align 16
@.str66 = private unnamed_addr constant [8 x i8] c" +#0-'I\00", align 1
@printf_flag_pairs = internal constant [4 x %struct.format_flag_pair] [%struct.format_flag_pair { i32 32, i32 43, i32 1, i32 0 }, %struct.format_flag_pair { i32 48, i32 45, i32 1, i32 0 }, %struct.format_flag_pair { i32 48, i32 112, i32 1, i32 105 }, %struct.format_flag_pair zeroinitializer], align 16
@.str67 = private unnamed_addr constant [6 x i8] c"scanf\00", align 1
@scanf_length_specs = internal constant [8 x %struct.format_length_info] [%struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str138, i32 0, i32 0), i32 2, i32 0, i8* getelementptr inbounds ([3 x i8]* @.str177, i32 0, i32 0), i32 1, i32 3 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str178, i32 0, i32 0), i32 3, i32 0, i8* getelementptr inbounds ([3 x i8]* @.str179, i32 0, i32 0), i32 4, i32 2 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str180, i32 0, i32 0), i32 4, i32 4, i8* null, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str96, i32 0, i32 0), i32 5, i32 0, i8* null, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str139, i32 0, i32 0), i32 6, i32 3, i8* null, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str181, i32 0, i32 0), i32 7, i32 3, i8* null, i32 0, i32 0 }, %struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str118, i32 0, i32 0), i32 8, i32 3, i8* null, i32 0, i32 0 }, %struct.format_length_info zeroinitializer], align 16
@scan_char_table = internal constant [13 x %struct.format_char_info] [%struct.format_char_info { i8* getelementptr inbounds ([3 x i8]* @.str153, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 8) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([14 x i8]* @.str154, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8]* @.str155, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 240) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([9 x i8]* @.str156, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 56) to %union.tree_node**) }], i8* getelementptr inbounds ([5 x i8]* @.str157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str159, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 16) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([7 x i8]* @.str160, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([19 x i8]* @.str161, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8]* @.str162, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 64) to %union.tree_node**) }], i8* getelementptr inbounds ([5 x i8]* @.str157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8]* @.str163, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 16) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 64) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 4, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 80) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([7 x i8]* @.str160, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 32) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([19 x i8]* @.str161, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 48) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8]* @.str162, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 64) to %union.tree_node**) }], i8* getelementptr inbounds ([3 x i8]* @.str164, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([6 x i8]* @.str165, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 192) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 208) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([4 x i8]* @.str166, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str167, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([8 x i8]* @.str168, i32 0, i32 0), %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([3 x i8]* @.str164, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str169, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str170, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([8 x i8]* @.str168, i32 0, i32 0), %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([4 x i8]* @.str171, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str169, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str172, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 1, i8* getelementptr inbounds ([8 x i8]* @.str168, i32 0, i32 0), %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([4 x i8]* @.str171, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str173, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str120, i32 0, i32 0), i32 2, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 216) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([3 x i8]* @.str164, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str174, i32 0, i32 0), i32 1, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 8) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 24) to %union.tree_node**) }, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 56) to %union.tree_node**) }, %struct.format_type_detail { i32 2, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([11 x %union.tree_node*]* @integer_types to i8*), i64 72) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([14 x i8]* @.str154, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 40) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([10 x i8]* @.str155, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 240) to %union.tree_node**) }, %struct.format_type_detail { i32 3, i8* getelementptr inbounds ([9 x i8]* @.str156, i32 0, i32 0), %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([32 x %union.tree_node*]* @c_global_trees to i8*), i64 56) to %union.tree_node**) }], i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8]* @.str175, i32 0, i32 0), i32 1, i32 3, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 192) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 3, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 208) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([4 x i8]* @.str166, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str129, i32 0, i32 0), i32 1, i32 4, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 4, i8* getelementptr inbounds ([8 x i8]* @.str168, i32 0, i32 0), %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([3 x i8]* @.str164, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str176, i32 0, i32 0), i32 1, i32 4, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 4, i8* getelementptr inbounds ([8 x i8]* @.str168, i32 0, i32 0), %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i32 0, i32 0) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([4 x i8]* @.str171, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str158, i32 0, i32 0) }, %struct.format_char_info zeroinitializer], align 16
@.str68 = private unnamed_addr constant [4 x i8] c"*'I\00", align 1
@scanf_flag_pairs = internal constant [2 x %struct.format_flag_pair] [%struct.format_flag_pair { i32 42, i32 76, i32 0, i32 0 }, %struct.format_flag_pair zeroinitializer], align 16
@.str69 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@time_char_table = internal constant [20 x %struct.format_char_info] [%struct.format_char_info { i8* getelementptr inbounds ([6 x i8]* @.str111, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([3 x i8]* @.str112, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([3 x i8]* @.str113, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([2 x i8]* @.str114, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str115, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([10 x i8]* @.str116, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8]* @.str117, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str118, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8]* @.str117, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str119, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str120, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([2 x i8]* @.str121, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str122, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([2 x i8]* @.str114, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str123, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([7 x i8]* @.str124, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str125, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str126, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([7 x i8]* @.str127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str119, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str128, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str129, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([7 x i8]* @.str127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str119, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str130, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str131, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8]* @.str132, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8]* @.str117, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([7 x i8]* @.str133, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str134, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8]* @.str135, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str136, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str137, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8]* @.str117, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str119, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str138, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([3 x i8]* @.str112, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str139, i32 0, i32 0), i32 0, i32 3, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([2 x i8]* @.str140, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str119, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([4 x i8]* @.str141, i32 0, i32 0), i32 0, i32 4, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([6 x i8]* @.str117, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info { i8* getelementptr inbounds ([2 x i8]* @.str142, i32 0, i32 0), i32 0, i32 4, [9 x %struct.format_type_detail] zeroinitializer, i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info zeroinitializer], align 16
@.str70 = private unnamed_addr constant [6 x i8] c"_-0^#\00", align 1
@.str71 = private unnamed_addr constant [3 x i8] c"EO\00", align 1
@strftime_flag_pairs = internal constant [6 x %struct.format_flag_pair] [%struct.format_flag_pair { i32 69, i32 79, i32 0, i32 0 }, %struct.format_flag_pair { i32 95, i32 45, i32 0, i32 0 }, %struct.format_flag_pair { i32 95, i32 48, i32 0, i32 0 }, %struct.format_flag_pair { i32 45, i32 48, i32 0, i32 0 }, %struct.format_flag_pair { i32 94, i32 35, i32 0, i32 0 }, %struct.format_flag_pair zeroinitializer], align 16
@.str72 = private unnamed_addr constant [8 x i8] c"strfmon\00", align 1
@strfmon_length_specs = internal constant [2 x %struct.format_length_info] [%struct.format_length_info { i8* getelementptr inbounds ([2 x i8]* @.str96, i32 0, i32 0), i32 5, i32 0, i8* null, i32 0, i32 0 }, %struct.format_length_info zeroinitializer], align 16
@monetary_char_table = internal constant [2 x %struct.format_char_info] [%struct.format_char_info { i8* getelementptr inbounds ([3 x i8]* @.str93, i32 0, i32 0), i32 0, i32 0, [9 x %struct.format_type_detail] [%struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 200) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail { i32 0, i8* null, %union.tree_node** bitcast (i8* getelementptr (i8* bitcast ([51 x %union.tree_node*]* @global_trees to i8*), i64 208) to %union.tree_node**) }, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer, %struct.format_type_detail zeroinitializer], i8* getelementptr inbounds ([10 x i8]* @.str94, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str95, i32 0, i32 0) }, %struct.format_char_info zeroinitializer], align 16
@.str73 = private unnamed_addr constant [7 x i8] c"=^+(!-\00", align 1
@strfmon_flag_pairs = internal constant [2 x %struct.format_flag_pair] [%struct.format_flag_pair { i32 43, i32 40, i32 0, i32 0 }, %struct.format_flag_pair zeroinitializer], align 16
@.str74 = private unnamed_addr constant [15 x i8] c"fill character\00", align 1
@.str75 = private unnamed_addr constant [33 x i8] c"fill character in strfmon format\00", align 1
@.str76 = private unnamed_addr constant [9 x i8] c"`^' flag\00", align 1
@.str77 = private unnamed_addr constant [21 x i8] c"the `^' strfmon flag\00", align 1
@.str78 = private unnamed_addr constant [9 x i8] c"`+' flag\00", align 1
@.str79 = private unnamed_addr constant [21 x i8] c"the `+' strfmon flag\00", align 1
@.str80 = private unnamed_addr constant [9 x i8] c"`(' flag\00", align 1
@.str81 = private unnamed_addr constant [21 x i8] c"the `(' strfmon flag\00", align 1
@.str82 = private unnamed_addr constant [9 x i8] c"`!' flag\00", align 1
@.str83 = private unnamed_addr constant [21 x i8] c"the `!' strfmon flag\00", align 1
@.str84 = private unnamed_addr constant [9 x i8] c"`-' flag\00", align 1
@.str85 = private unnamed_addr constant [21 x i8] c"the `-' strfmon flag\00", align 1
@.str86 = private unnamed_addr constant [30 x i8] c"field width in strfmon format\00", align 1
@.str87 = private unnamed_addr constant [15 x i8] c"left precision\00", align 1
@.str88 = private unnamed_addr constant [33 x i8] c"left precision in strfmon format\00", align 1
@.str89 = private unnamed_addr constant [16 x i8] c"right precision\00", align 1
@.str90 = private unnamed_addr constant [34 x i8] c"right precision in strfmon format\00", align 1
@.str91 = private unnamed_addr constant [16 x i8] c"length modifier\00", align 1
@.str92 = private unnamed_addr constant [34 x i8] c"length modifier in strfmon format\00", align 1
@strfmon_flag_specs = internal constant <{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } }> <{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 61, i32 0, i32 1, i8* getelementptr inbounds ([15 x i8]* @.str74, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8]* @.str75, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 94, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str76, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str77, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 43, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str78, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str79, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 40, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str80, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str81, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 33, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str82, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str83, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 45, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str84, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str85, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 119, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str86, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 35, i32 0, i32 0, i8* getelementptr inbounds ([15 x i8]* @.str87, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8]* @.str88, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 112, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8]* @.str89, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @.str90, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 76, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8]* @.str91, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @.str92, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 0, i32 0, i32 0, i8* null, i8* null, i32 0, [4 x i8] undef } }>, align 16
@.str93 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str94 = private unnamed_addr constant [10 x i8] c"=^+(!-w#p\00", align 1
@.str95 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str96 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str97 = private unnamed_addr constant [9 x i8] c"`_' flag\00", align 1
@.str98 = private unnamed_addr constant [22 x i8] c"the `_' strftime flag\00", align 1
@.str99 = private unnamed_addr constant [22 x i8] c"the `-' strftime flag\00", align 1
@.str100 = private unnamed_addr constant [9 x i8] c"`0' flag\00", align 1
@.str101 = private unnamed_addr constant [22 x i8] c"the `0' strftime flag\00", align 1
@.str102 = private unnamed_addr constant [22 x i8] c"the `^' strftime flag\00", align 1
@.str103 = private unnamed_addr constant [9 x i8] c"`#' flag\00", align 1
@.str104 = private unnamed_addr constant [22 x i8] c"the `#' strftime flag\00", align 1
@.str105 = private unnamed_addr constant [31 x i8] c"field width in strftime format\00", align 1
@.str106 = private unnamed_addr constant [13 x i8] c"`E' modifier\00", align 1
@.str107 = private unnamed_addr constant [26 x i8] c"the `E' strftime modifier\00", align 1
@.str108 = private unnamed_addr constant [13 x i8] c"`O' modifier\00", align 1
@.str109 = private unnamed_addr constant [26 x i8] c"the `O' strftime modifier\00", align 1
@.str110 = private unnamed_addr constant [17 x i8] c"the `O' modifier\00", align 1
@strftime_flag_specs = internal constant <{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } }> <{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 95, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str97, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str98, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 45, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str84, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str99, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 48, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str100, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str101, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 94, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str76, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str102, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 35, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str103, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str104, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 119, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @.str105, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 69, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8]* @.str106, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str107, i32 0, i32 0), i32 3, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 79, i32 0, i32 0, i8* getelementptr inbounds ([13 x i8]* @.str108, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str109, i32 0, i32 0), i32 3, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 79, i32 111, i32 0, i8* null, i8* getelementptr inbounds ([17 x i8]* @.str110, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 0, i32 0, i32 0, i8* null, i8* null, i32 0, [4 x i8] undef } }>, align 16
@.str111 = private unnamed_addr constant [6 x i8] c"ABZab\00", align 1
@.str112 = private unnamed_addr constant [3 x i8] c"^#\00", align 1
@.str113 = private unnamed_addr constant [3 x i8] c"cx\00", align 1
@.str114 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str115 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str116 = private unnamed_addr constant [10 x i8] c"HIMSUWdmw\00", align 1
@.str117 = private unnamed_addr constant [6 x i8] c"-_0Ow\00", align 1
@.str118 = private unnamed_addr constant [2 x i8] c"j\00", align 1
@.str119 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str120 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str121 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str122 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str123 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str124 = private unnamed_addr constant [7 x i8] c"EO-_0w\00", align 1
@.str125 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str126 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str127 = private unnamed_addr constant [7 x i8] c"-_0EOw\00", align 1
@.str128 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str129 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str130 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str131 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str132 = private unnamed_addr constant [4 x i8] c"eVu\00", align 1
@.str133 = private unnamed_addr constant [7 x i8] c"FRTnrt\00", align 1
@.str134 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str135 = private unnamed_addr constant [6 x i8] c"O-_0w\00", align 1
@.str136 = private unnamed_addr constant [3 x i8] c"2o\00", align 1
@.str137 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@.str138 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str139 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@.str140 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str141 = private unnamed_addr constant [4 x i8] c"kls\00", align 1
@.str142 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str143 = private unnamed_addr constant [23 x i8] c"assignment suppression\00", align 1
@.str144 = private unnamed_addr constant [41 x i8] c"the assignment suppression scanf feature\00", align 1
@.str145 = private unnamed_addr constant [9 x i8] c"`a' flag\00", align 1
@.str146 = private unnamed_addr constant [19 x i8] c"the `a' scanf flag\00", align 1
@.str147 = private unnamed_addr constant [28 x i8] c"field width in scanf format\00", align 1
@.str148 = private unnamed_addr constant [32 x i8] c"length modifier in scanf format\00", align 1
@.str149 = private unnamed_addr constant [9 x i8] c"`'' flag\00", align 1
@.str150 = private unnamed_addr constant [19 x i8] c"the `'' scanf flag\00", align 1
@.str151 = private unnamed_addr constant [9 x i8] c"`I' flag\00", align 1
@.str152 = private unnamed_addr constant [19 x i8] c"the `I' scanf flag\00", align 1
@scanf_flag_specs = internal constant <{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } }> <{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 42, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8]* @.str143, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8]* @.str144, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 97, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str145, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str146, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 119, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8]* @.str147, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 76, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8]* @.str91, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str148, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 39, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str149, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str150, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 73, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str151, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str152, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 0, i32 0, i32 0, i8* null, i8* null, i32 0, [4 x i8] undef } }>, align 16
@.str153 = private unnamed_addr constant [3 x i8] c"di\00", align 1
@.str154 = private unnamed_addr constant [14 x i8] c"signed size_t\00", align 1
@c_global_trees = external global [32 x %union.tree_node*]
@.str155 = private unnamed_addr constant [10 x i8] c"ptrdiff_t\00", align 1
@.str156 = private unnamed_addr constant [9 x i8] c"intmax_t\00", align 1
@.str157 = private unnamed_addr constant [5 x i8] c"*w'I\00", align 1
@.str158 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str159 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str160 = private unnamed_addr constant [7 x i8] c"size_t\00", align 1
@.str161 = private unnamed_addr constant [19 x i8] c"unsigned ptrdiff_t\00", align 1
@.str162 = private unnamed_addr constant [10 x i8] c"uintmax_t\00", align 1
@.str163 = private unnamed_addr constant [4 x i8] c"oxX\00", align 1
@.str164 = private unnamed_addr constant [3 x i8] c"*w\00", align 1
@.str165 = private unnamed_addr constant [6 x i8] c"efgEG\00", align 1
@.str166 = private unnamed_addr constant [4 x i8] c"*w'\00", align 1
@.str167 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str168 = private unnamed_addr constant [8 x i8] c"wchar_t\00", align 1
@.str169 = private unnamed_addr constant [3 x i8] c"cW\00", align 1
@.str170 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str171 = private unnamed_addr constant [4 x i8] c"*aw\00", align 1
@.str172 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str173 = private unnamed_addr constant [4 x i8] c"cW[\00", align 1
@.str174 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str175 = private unnamed_addr constant [4 x i8] c"FaA\00", align 1
@.str176 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str177 = private unnamed_addr constant [3 x i8] c"hh\00", align 1
@.str178 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str179 = private unnamed_addr constant [3 x i8] c"ll\00", align 1
@.str180 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str181 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str182 = private unnamed_addr constant [9 x i8] c"` ' flag\00", align 1
@.str183 = private unnamed_addr constant [20 x i8] c"the ` ' printf flag\00", align 1
@.str184 = private unnamed_addr constant [20 x i8] c"the `+' printf flag\00", align 1
@.str185 = private unnamed_addr constant [20 x i8] c"the `#' printf flag\00", align 1
@.str186 = private unnamed_addr constant [20 x i8] c"the `0' printf flag\00", align 1
@.str187 = private unnamed_addr constant [20 x i8] c"the `-' printf flag\00", align 1
@.str188 = private unnamed_addr constant [20 x i8] c"the `'' printf flag\00", align 1
@.str189 = private unnamed_addr constant [20 x i8] c"the `I' printf flag\00", align 1
@.str190 = private unnamed_addr constant [29 x i8] c"field width in printf format\00", align 1
@.str191 = private unnamed_addr constant [10 x i8] c"precision\00", align 1
@.str192 = private unnamed_addr constant [27 x i8] c"precision in printf format\00", align 1
@.str193 = private unnamed_addr constant [33 x i8] c"length modifier in printf format\00", align 1
@printf_flag_specs = internal constant <{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } }> <{ { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 32, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str182, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str183, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 43, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str78, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str184, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 35, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str103, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str185, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 48, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str100, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str186, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 45, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str84, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str187, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 39, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str149, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str188, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 73, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str151, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str189, i32 0, i32 0), i32 4, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 119, i32 0, i32 0, i8* getelementptr inbounds ([12 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @.str190, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 112, i32 0, i32 0, i8* getelementptr inbounds ([10 x i8]* @.str191, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str192, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 76, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8]* @.str91, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8]* @.str193, i32 0, i32 0), i32 0, [4 x i8] undef }, { i32, i32, i32, i8*, i8*, i32, [4 x i8] } { i32 0, i32 0, i32 0, i8* null, i8* null, i32 0, [4 x i8] undef } }>, align 16
@.str194 = private unnamed_addr constant [9 x i8] c"-wp0 +'I\00", align 1
@.str195 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str196 = private unnamed_addr constant [6 x i8] c"-wp0#\00", align 1
@.str197 = private unnamed_addr constant [7 x i8] c"-wp0'I\00", align 1
@.str198 = private unnamed_addr constant [4 x i8] c"fgG\00", align 1
@.str199 = private unnamed_addr constant [9 x i8] c"-wp0 +#'\00", align 1
@.str200 = private unnamed_addr constant [3 x i8] c"eE\00", align 1
@.str201 = private unnamed_addr constant [8 x i8] c"-wp0 +#\00", align 1
@.str202 = private unnamed_addr constant [7 x i8] c"wint_t\00", align 1
@.str203 = private unnamed_addr constant [3 x i8] c"-w\00", align 1
@.str204 = private unnamed_addr constant [4 x i8] c"-wp\00", align 1
@.str205 = private unnamed_addr constant [3 x i8] c"cR\00", align 1
@.str206 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str207 = private unnamed_addr constant [3 x i8] c"aA\00", align 1
@.str208 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str209 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str210 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@__FUNCTION__.decode_format_attr = private unnamed_addr constant [19 x i8] c"decode_format_attr\00", align 1
@.str211 = private unnamed_addr constant [30 x i8] c"unrecognized format specifier\00", align 1
@.str212 = private unnamed_addr constant [45 x i8] c"`%s' is an unrecognized format function type\00", align 1
@.str213 = private unnamed_addr constant [51 x i8] c"format string arg follows the args to be formatted\00", align 1

; Function Attrs: nounwind uwtable
define void @set_Wformat(i32 %setting) #0 {
entry:
  store i32 %setting, i32* @warn_format, align 4, !tbaa !1
  store i32 %setting, i32* @warn_format_y2k, align 4, !tbaa !1
  store i32 %setting, i32* @warn_format_extra_args, align 4, !tbaa !1
  %cmp = icmp eq i32 %setting, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 %setting, i32* @warn_format_nonliteral, align 4, !tbaa !1
  store i32 %setting, i32* @warn_format_security, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define noalias %union.tree_node* @handle_format_attribute(%union.tree_node** nocapture readonly %node, %union.tree_node* nocapture readnone %name, %union.tree_node* nocapture readonly %args, i32 %flags, i8* nocapture %no_add_attrs) #0 {
entry:
  %info = alloca %struct.function_format_info, align 8
  %0 = load %union.tree_node** %node, align 8, !tbaa !5
  %call = call fastcc zeroext i1 @decode_format_attr(%union.tree_node* %args, %struct.function_format_info* %info, i32 0)
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !7
  br label %return

if.end:                                           ; preds = %entry
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %1 = load i8** %values, align 8
  %tobool = icmp eq i8* %1, null
  br i1 %tobool, label %if.end34, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %if.end
  %2 = bitcast i8* %1 to %union.tree_node*
  %format_num = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 1
  %3 = load i64* %format_num, align 8, !tbaa !9
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.inc
  %arg_num.060 = phi i64 [ 1, %land.rhs.lr.ph ], [ %inc, %for.inc ]
  %argument.059 = phi %union.tree_node* [ %2, %land.rhs.lr.ph ], [ %4, %for.inc ]
  %cmp3 = icmp eq i64 %arg_num.060, %3
  br i1 %cmp3, label %lor.lhs.false, label %for.inc

for.inc:                                          ; preds = %land.rhs
  %inc = add i64 %arg_num.060, 1
  %chain = getelementptr inbounds %union.tree_node* %argument.059, i64 0, i32 0, i32 0, i32 0
  %4 = load %union.tree_node** %chain, align 8, !tbaa !12
  %cmp = icmp eq %union.tree_node* %4, null
  br i1 %cmp, label %if.then14, label %land.rhs

lor.lhs.false:                                    ; preds = %land.rhs
  %value = getelementptr inbounds %union.tree_node* %argument.059, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !14
  %code = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp6 = icmp eq i32 %bf.clear, 13
  br i1 %cmp6, label %lor.lhs.false7, label %if.then14

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %type11 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type11, align 8, !tbaa !16
  %8 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 15
  %9 = load %union.tree_node** %8, align 8, !tbaa !17
  %10 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !5
  %cmp13 = icmp eq %union.tree_node* %9, %10
  br i1 %cmp13, label %if.else, label %if.then14

if.then14:                                        ; preds = %for.inc, %lor.lhs.false7, %lor.lhs.false
  %and = and i32 %flags, 16
  %tobool15 = icmp eq i32 %and, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.then14
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str, i64 0, i64 0)) #3
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %if.then16
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !7
  br label %return

if.else:                                          ; preds = %lor.lhs.false7
  %first_arg_num = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 2
  %11 = load i64* %first_arg_num, align 8, !tbaa !19
  %cmp18 = icmp eq i64 %11, 0
  br i1 %cmp18, label %if.end34, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.else
  %tobool2055 = icmp eq %union.tree_node* %argument.059, null
  br i1 %tobool2055, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %arg_num.157 = phi i64 [ %inc21, %while.body ], [ %3, %while.cond.preheader ]
  %argument.156 = phi %union.tree_node* [ %12, %while.body ], [ %argument.059, %while.cond.preheader ]
  %inc21 = add i64 %arg_num.157, 1
  %chain23 = getelementptr inbounds %union.tree_node* %argument.156, i64 0, i32 0, i32 0, i32 0
  %12 = load %union.tree_node** %chain23, align 8, !tbaa !12
  %tobool20 = icmp eq %union.tree_node* %12, null
  br i1 %tobool20, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %while.cond.preheader
  %arg_num.1.lcssa = phi i64 [ %3, %while.cond.preheader ], [ %inc21, %while.body ]
  %cmp25 = icmp eq i64 %arg_num.1.lcssa, %11
  br i1 %cmp25, label %if.end34, label %if.then26

if.then26:                                        ; preds = %while.end
  %and27 = and i32 %flags, 16
  %tobool28 = icmp eq i32 %and27, 0
  br i1 %tobool28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.then26
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([34 x i8]* @.str1, i64 0, i64 0)) #3
  br label %if.end30

if.end30:                                         ; preds = %if.then26, %if.then29
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !7
  br label %return

if.end34:                                         ; preds = %while.end, %if.else, %if.end
  %format_type = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 0
  %13 = load i32* %format_type, align 8, !tbaa !20
  %cmp35 = icmp eq i32 %13, 2
  br i1 %cmp35, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %if.end34
  %first_arg_num36 = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 2
  %14 = load i64* %first_arg_num36, align 8, !tbaa !19
  %cmp37 = icmp eq i64 %14, 0
  br i1 %cmp37, label %return, label %if.then38

if.then38:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str2, i64 0, i64 0)) #3
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !7
  br label %return

return:                                           ; preds = %if.end34, %land.lhs.true, %if.then38, %if.end30, %if.end17, %if.then
  ret %union.tree_node* null
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i1 @decode_format_attr(%union.tree_node* nocapture readonly %args, %struct.function_format_info* nocapture %info, i32 %validated_p) #0 {
entry:
  %value = getelementptr inbounds %union.tree_node* %args, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !14
  %chain = getelementptr inbounds %union.tree_node* %args, i64 0, i32 0, i32 0, i32 0
  %2 = load %union.tree_node** %chain, align 8, !tbaa !12
  %chain6 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0
  %3 = load %union.tree_node** %chain6, align 8, !tbaa !12
  %value8 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %4 = bitcast i32* %value8 to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !14
  %code = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 1
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %tobool = icmp eq i32 %validated_p, 0
  br i1 %tobool, label %if.end, label %if.then10

if.then10:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.decode_format_attr, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %if.then
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([30 x i8]* @.str211, i64 0, i64 0)) #3
  br label %return

if.else:                                          ; preds = %entry
  %value2 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2
  %6 = bitcast i32* %value2 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !14
  %id = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds i8** %id, i64 1
  %9 = load i8** %8, align 8, !tbaa !21
  %call = tail call fastcc i32 @decode_format_type(i8* %9)
  %format_type = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 0
  store i32 %call, i32* %format_type, align 4, !tbaa !20
  %cmp12 = icmp eq i32 %call, 4
  br i1 %cmp12, label %if.then13, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.else
  %code20132 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %bf.load21133 = load i32* %code20132, align 8
  %bf.clear22134 = and i32 %bf.load21133, 255
  %bf.clear22.off135 = add i32 %bf.clear22134, -114
  %switch136 = icmp ult i32 %bf.clear22.off135, 3
  br i1 %switch136, label %while.body, label %while.cond34.preheader

if.then13:                                        ; preds = %if.else
  %tobool14 = icmp eq i32 %validated_p, 0
  br i1 %tobool14, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.then13
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 264, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.decode_format_attr, i64 0, i64 0)) #7
  unreachable

if.end16:                                         ; preds = %if.then13
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([45 x i8]* @.str212, i64 0, i64 0), i8* %9) #3
  br label %return

while.cond34.preheader:                           ; preds = %while.body, %while.cond.preheader
  %bf.load60 = phi i32 [ %bf.load21133, %while.cond.preheader ], [ %bf.load21, %while.body ]
  %format_num_expr.0.lcssa = phi %union.tree_node* [ %7, %while.cond.preheader ], [ %10, %while.body ]
  %code36125 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load37126 = load i32* %code36125, align 8
  %bf.clear38127 = and i32 %bf.load37126, 255
  %bf.clear38.off128 = add i32 %bf.clear38127, -114
  %switch124129 = icmp ult i32 %bf.clear38.off128, 3
  br i1 %switch124129, label %while.body53, label %while.end57

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %format_num_expr.0137 = phi %union.tree_node* [ %10, %while.body ], [ %7, %while.cond.preheader ]
  %operands = getelementptr inbounds %union.tree_node* %format_num_expr.0137, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %10 = load %union.tree_node** %arrayidx, align 8, !tbaa !5
  %code20 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load21 = load i32* %code20, align 8
  %bf.clear22 = and i32 %bf.load21, 255
  %bf.clear22.off = add i32 %bf.clear22, -114
  %switch = icmp ult i32 %bf.clear22.off, 3
  br i1 %switch, label %while.body, label %while.cond34.preheader

while.body53:                                     ; preds = %while.cond34.preheader, %while.body53
  %first_arg_num_expr.0130 = phi %union.tree_node* [ %11, %while.body53 ], [ %5, %while.cond34.preheader ]
  %operands55 = getelementptr inbounds %union.tree_node* %first_arg_num_expr.0130, i64 0, i32 0, i32 2
  %arrayidx56 = bitcast i32* %operands55 to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx56, align 8, !tbaa !5
  %code36 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load37 = load i32* %code36, align 8
  %bf.clear38 = and i32 %bf.load37, 255
  %bf.clear38.off = add i32 %bf.clear38, -114
  %switch124 = icmp ult i32 %bf.clear38.off, 3
  br i1 %switch124, label %while.body53, label %while.end57

while.end57:                                      ; preds = %while.body53, %while.cond34.preheader
  %bf.clear38.lcssa = phi i32 [ %bf.clear38127, %while.cond34.preheader ], [ %bf.clear38, %while.body53 ]
  %first_arg_num_expr.0.lcssa = phi %union.tree_node* [ %5, %while.cond34.preheader ], [ %11, %while.body53 ]
  %bf.clear61 = and i32 %bf.load60, 255
  %cmp62 = icmp eq i32 %bf.clear61, 25
  br i1 %cmp62, label %lor.lhs.false63, label %if.then77

lor.lhs.false63:                                  ; preds = %while.end57
  %int_cst64 = getelementptr inbounds %union.tree_node* %format_num_expr.0.lcssa, i64 0, i32 0, i32 2
  %high = getelementptr inbounds i32* %int_cst64, i64 2
  %12 = bitcast i32* %high to i64*
  %13 = load i64* %12, align 8, !tbaa !24
  %cmp65 = icmp eq i64 %13, 0
  %cmp71 = icmp eq i32 %bf.clear38.lcssa, 25
  %or.cond = and i1 %cmp65, %cmp71
  br i1 %or.cond, label %lor.lhs.false72, label %if.then77

lor.lhs.false72:                                  ; preds = %lor.lhs.false63
  %int_cst74 = getelementptr inbounds %union.tree_node* %first_arg_num_expr.0.lcssa, i64 0, i32 0, i32 2
  %high75 = getelementptr inbounds i32* %int_cst74, i64 2
  %14 = bitcast i32* %high75 to i64*
  %15 = load i64* %14, align 8, !tbaa !24
  %cmp76 = icmp eq i64 %15, 0
  br i1 %cmp76, label %if.end81, label %if.then77

if.then77:                                        ; preds = %lor.lhs.false72, %lor.lhs.false63, %while.end57
  %tobool78 = icmp eq i32 %validated_p, 0
  br i1 %tobool78, label %if.end80, label %if.then79

if.then79:                                        ; preds = %if.then77
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 288, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.decode_format_attr, i64 0, i64 0)) #7
  unreachable

if.end80:                                         ; preds = %if.then77
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str3, i64 0, i64 0)) #3
  br label %return

if.end81:                                         ; preds = %lor.lhs.false72
  %low = bitcast i32* %int_cst64 to i64*
  %16 = load i64* %low, align 8, !tbaa !27
  %format_num = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 1
  store i64 %16, i64* %format_num, align 8, !tbaa !9
  %low86 = bitcast i32* %int_cst74 to i64*
  %17 = load i64* %low86, align 8, !tbaa !27
  %first_arg_num = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 2
  store i64 %17, i64* %first_arg_num, align 8, !tbaa !19
  %18 = add i64 %17, -1
  %19 = icmp ult i64 %18, %16
  br i1 %19, label %if.then92, label %return

if.then92:                                        ; preds = %if.end81
  %tobool93 = icmp eq i32 %validated_p, 0
  br i1 %tobool93, label %if.end95, label %if.then94

if.then94:                                        ; preds = %if.then92
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 298, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.decode_format_attr, i64 0, i64 0)) #7
  unreachable

if.end95:                                         ; preds = %if.then92
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([51 x i8]* @.str213, i64 0, i64 0)) #3
  br label %return

return:                                           ; preds = %if.end81, %if.end95, %if.end80, %if.end16, %if.end
  %retval.0 = phi i1 [ false, %if.end ], [ false, %if.end16 ], [ false, %if.end80 ], [ false, %if.end95 ], [ true, %if.end81 ]
  ret i1 %retval.0
}

declare void @error(i8*, ...) #1

; Function Attrs: nounwind uwtable
define noalias %union.tree_node* @handle_format_arg_attribute(%union.tree_node** nocapture readonly %node, %union.tree_node* nocapture readnone %name, %union.tree_node* nocapture readonly %args, i32 %flags, i8* nocapture %no_add_attrs) #0 {
entry:
  %0 = load %union.tree_node** %node, align 8, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %args.pn = phi %union.tree_node* [ %args, %entry ], [ %format_num_expr.0, %while.cond ]
  %format_num_expr.0.in.in = getelementptr inbounds %union.tree_node* %args.pn, i64 0, i32 0, i32 2
  %format_num_expr.0.in = bitcast i32* %format_num_expr.0.in.in to %union.tree_node**
  %format_num_expr.0 = load %union.tree_node** %format_num_expr.0.in, align 8
  %code = getelementptr inbounds %union.tree_node* %format_num_expr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %while.cond, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %cmp15 = icmp eq i32 %bf.clear, 25
  br i1 %cmp15, label %lor.lhs.false16, label %if.then

lor.lhs.false16:                                  ; preds = %lor.rhs
  %int_cst17 = getelementptr inbounds %union.tree_node* %format_num_expr.0, i64 0, i32 0, i32 2
  %high = getelementptr inbounds i32* %int_cst17, i64 2
  %1 = bitcast i32* %high to i64*
  %2 = load i64* %1, align 8, !tbaa !24
  %cmp18 = icmp eq i64 %2, 0
  br i1 %cmp18, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false16, %lor.rhs
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str3, i64 0, i64 0)) #3
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !7
  br label %return

if.end:                                           ; preds = %lor.lhs.false16
  %low = bitcast i32* %int_cst17 to i64*
  %3 = load i64* %low, align 8, !tbaa !27
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %4 = load i8** %values, align 8
  %tobool = icmp eq i8* %4, null
  br i1 %tobool, label %if.end47, label %if.then22

if.then22:                                        ; preds = %if.end
  %5 = bitcast i8* %4 to %union.tree_node*
  %cmp2487 = icmp eq i64 %3, 1
  br i1 %cmp2487, label %lor.lhs.false27, label %for.inc

for.inc:                                          ; preds = %if.then22, %for.inc
  %argument.090 = phi %union.tree_node* [ %6, %for.inc ], [ %5, %if.then22 ]
  %arg_num.089 = phi i64 [ %inc, %for.inc ], [ 1, %if.then22 ]
  %inc = add i64 %arg_num.089, 1
  %chain = getelementptr inbounds %union.tree_node* %argument.090, i64 0, i32 0, i32 0, i32 0
  %6 = load %union.tree_node** %chain, align 8, !tbaa !12
  %cmp23 = icmp ne %union.tree_node* %6, null
  %cmp23.not = xor i1 %cmp23, true
  %cmp24 = icmp eq i64 %inc, %3
  %or.cond = or i1 %cmp24, %cmp23.not
  br i1 %or.cond, label %for.end, label %for.inc

for.end:                                          ; preds = %for.inc
  br i1 %cmp23, label %lor.lhs.false27, label %if.then42

lor.lhs.false27:                                  ; preds = %if.then22, %for.end
  %argument.0.lcssa93 = phi %union.tree_node* [ %6, %for.end ], [ %5, %if.then22 ]
  %value29 = getelementptr inbounds %union.tree_node* %argument.0.lcssa93, i64 0, i32 0, i32 2
  %7 = bitcast i32* %value29 to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !14
  %code31 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %bf.load32 = load i32* %code31, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp eq i32 %bf.clear33, 13
  br i1 %cmp34, label %lor.lhs.false35, label %if.then42

lor.lhs.false35:                                  ; preds = %lor.lhs.false27
  %type39 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type39, align 8, !tbaa !16
  %10 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 15
  %11 = load %union.tree_node** %10, align 8, !tbaa !17
  %12 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !5
  %cmp41 = icmp eq %union.tree_node* %11, %12
  br i1 %cmp41, label %if.end47, label %if.then42

if.then42:                                        ; preds = %lor.lhs.false35, %lor.lhs.false27, %for.end
  %and = and i32 %flags, 16
  %tobool43 = icmp eq i32 %and, 0
  br i1 %tobool43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.then42
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str, i64 0, i64 0)) #3
  br label %if.end45

if.end45:                                         ; preds = %if.then42, %if.then44
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !7
  br label %return

if.end47:                                         ; preds = %lor.lhs.false35, %if.end
  %type49 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type49, align 8, !tbaa !16
  %code51 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 2
  %bf.load52 = load i32* %code51, align 8
  %bf.clear53 = and i32 %bf.load52, 255
  %cmp54 = icmp eq i32 %bf.clear53, 13
  br i1 %cmp54, label %lor.lhs.false55, label %if.then63

lor.lhs.false55:                                  ; preds = %if.end47
  %type59 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 1
  %14 = load %union.tree_node** %type59, align 8, !tbaa !16
  %15 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 15
  %16 = load %union.tree_node** %15, align 8, !tbaa !17
  %17 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !5
  %cmp62 = icmp eq %union.tree_node* %16, %17
  br i1 %cmp62, label %return, label %if.then63

if.then63:                                        ; preds = %lor.lhs.false55, %if.end47
  %and64 = and i32 %flags, 16
  %tobool65 = icmp eq i32 %and64, 0
  br i1 %tobool65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.then63
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str4, i64 0, i64 0)) #3
  br label %if.end67

if.end67:                                         ; preds = %if.then63, %if.then66
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !7
  br label %return

return:                                           ; preds = %lor.lhs.false55, %if.end67, %if.end45, %if.then
  ret %union.tree_node* null
}

; Function Attrs: nounwind uwtable
define void @check_function_format(i32* %status, %union.tree_node* readonly %attrs, %union.tree_node* readonly %params) #0 {
entry:
  %res.i = alloca %struct.format_check_results, align 4
  %info = alloca %struct.function_format_info, align 8
  %tobool82 = icmp eq %union.tree_node* %attrs, null
  br i1 %tobool82, label %for.end60, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %0 = bitcast %struct.format_check_results* %res.i to i8*
  %cmp116.i = icmp eq %union.tree_node* %params, null
  %first_arg_num = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 2
  %format_type = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 0
  %format_num.i = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 1
  %number_non_literal.i = getelementptr inbounds %struct.format_check_results* %res.i, i64 0, i32 0
  %number_extra_args.i = getelementptr inbounds %struct.format_check_results* %res.i, i64 0, i32 1
  %number_dollar_extra_args.i = getelementptr inbounds %struct.format_check_results* %res.i, i64 0, i32 2
  %number_wide.i = getelementptr inbounds %struct.format_check_results* %res.i, i64 0, i32 3
  %number_empty.i = getelementptr inbounds %struct.format_check_results* %res.i, i64 0, i32 4
  %number_unterminated.i = getelementptr inbounds %struct.format_check_results* %res.i, i64 0, i32 5
  %number_other.i = getelementptr inbounds %struct.format_check_results* %res.i, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc57
  %a.083 = phi %union.tree_node* [ %attrs, %for.body.lr.ph ], [ %55, %for.inc57 ]
  %purpose = getelementptr inbounds %union.tree_node* %a.083, i64 0, i32 0, i32 1
  %1 = load i8** %purpose, align 8
  %2 = bitcast i8* %1 to %union.tree_node*
  %call = call i32 @is_attribute_p(i8* getelementptr inbounds ([7 x i8]* @.str5, i64 0, i64 0), %union.tree_node* %2) #3
  %tobool1 = icmp eq i32 %call, 0
  br i1 %tobool1, label %for.inc57, label %if.then

if.then:                                          ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %a.083, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !14
  %call3 = call fastcc zeroext i1 @decode_format_attr(%union.tree_node* %4, %struct.function_format_info* %info, i32 1)
  call void @llvm.lifetime.start(i64 28, i8* %0) #3
  br i1 %cmp116.i, label %check_format_info.exit, label %if.end.lr.ph.i

if.end.lr.ph.i:                                   ; preds = %if.then
  %5 = load i64* %format_num.i, align 8, !tbaa !9
  br label %if.end.i

if.end.i:                                         ; preds = %if.end3.i, %if.end.lr.ph.i
  %params.addr.0118.i = phi %union.tree_node* [ %params, %if.end.lr.ph.i ], [ %6, %if.end3.i ]
  %arg_num.0117.i = phi i64 [ 1, %if.end.lr.ph.i ], [ %inc.i, %if.end3.i ]
  %cmp1.i = icmp eq i64 %arg_num.0117.i, %5
  br i1 %cmp1.i, label %for.end.i, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  %chain.i = getelementptr inbounds %union.tree_node* %params.addr.0118.i, i64 0, i32 0, i32 0, i32 0
  %6 = load %union.tree_node** %chain.i, align 8, !tbaa !12
  %inc.i = add i64 %arg_num.0117.i, 1
  %cmp.i = icmp eq %union.tree_node* %6, null
  br i1 %cmp.i, label %check_format_info.exit, label %if.end.i

for.end.i:                                        ; preds = %if.end.i
  %value.i = getelementptr inbounds %union.tree_node* %params.addr.0118.i, i64 0, i32 0, i32 2
  %7 = bitcast i32* %value.i to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !14
  %chain5.i = getelementptr inbounds %union.tree_node* %params.addr.0118.i, i64 0, i32 0, i32 0, i32 0
  %9 = load %union.tree_node** %chain5.i, align 8, !tbaa !12
  %cmp6.i = icmp eq %union.tree_node* %8, null
  br i1 %cmp6.i, label %check_format_info.exit, label %if.end8.i

if.end8.i:                                        ; preds = %for.end.i
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 28, i32 4, i1 false) #3
  call fastcc void @check_format_info_recurse(i32* %status, %struct.format_check_results* %res.i, %struct.function_format_info* %info, %union.tree_node* %8, %union.tree_node* %9, i64 %5) #3
  %10 = load i32* %number_non_literal.i, align 4, !tbaa !28
  %cmp10.i = icmp sgt i32 %10, 0
  br i1 %cmp10.i, label %if.then11.i, label %if.end37.i

if.then11.i:                                      ; preds = %if.end8.i
  %11 = load i32* %format_type, align 8, !tbaa !20
  %tobool.i = icmp eq i32 %11, 2
  br i1 %tobool.i, label %if.then12.i, label %if.else.i

if.then12.i:                                      ; preds = %if.then11.i
  %12 = load i32* @warn_format_nonliteral, align 4, !tbaa !1
  %tobool13.i = icmp eq i32 %12, 0
  br i1 %tobool13.i, label %if.end37.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.then12.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([55 x i8]* @.str7, i64 0, i64 0)) #3
  br label %if.end37.i

if.else.i:                                        ; preds = %if.then11.i
  %13 = load i64* %first_arg_num, align 8, !tbaa !19
  %cmp16.i = icmp eq i64 %13, 0
  br i1 %cmp16.i, label %if.end37.i, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %if.else.i
  %add110.i = add i64 %5, 1
  %cmp19111.i = icmp uge i64 %add110.i, %13
  %cmp20112.i = icmp eq %union.tree_node* %9, null
  %or.cond82113.i = or i1 %cmp19111.i, %cmp20112.i
  br i1 %or.cond82113.i, label %while.end.i, label %if.end22.i

if.end22.i:                                       ; preds = %while.cond.preheader.i, %if.end22.i
  %add115.i = phi i64 [ %add.i, %if.end22.i ], [ %add110.i, %while.cond.preheader.i ]
  %params.addr.1114.i = phi %union.tree_node* [ %14, %if.end22.i ], [ %9, %while.cond.preheader.i ]
  %chain24.i = getelementptr inbounds %union.tree_node* %params.addr.1114.i, i64 0, i32 0, i32 0, i32 0
  %14 = load %union.tree_node** %chain24.i, align 8, !tbaa !12
  %add.i = add i64 %add115.i, 1
  %cmp19.i = icmp uge i64 %add.i, %13
  %cmp20.i = icmp eq %union.tree_node* %14, null
  %or.cond82.i = or i1 %cmp19.i, %cmp20.i
  br i1 %or.cond82.i, label %while.end.i, label %if.end22.i

while.end.i:                                      ; preds = %if.end22.i, %while.cond.preheader.i
  %cmp20.lcssa.i = phi i1 [ %cmp20112.i, %while.cond.preheader.i ], [ %cmp20.i, %if.end22.i ]
  %15 = load i32* @warn_format_nonliteral, align 4, !tbaa !1
  br i1 %cmp20.lcssa.i, label %land.lhs.true.i, label %if.else30.i

land.lhs.true.i:                                  ; preds = %while.end.i
  %16 = load i32* @warn_format_security, align 4
  %17 = or i32 %16, %15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %if.else30.i, label %if.then29.i

if.then29.i:                                      ; preds = %land.lhs.true.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([52 x i8]* @.str8, i64 0, i64 0)) #3
  br label %if.end37.i

if.else30.i:                                      ; preds = %land.lhs.true.i, %while.end.i
  %tobool31.i = icmp eq i32 %15, 0
  br i1 %tobool31.i, label %if.end37.i, label %if.then32.i

if.then32.i:                                      ; preds = %if.else30.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([56 x i8]* @.str9, i64 0, i64 0)) #3
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.then32.i, %if.else30.i, %if.then29.i, %if.else.i, %if.then14.i, %if.then12.i, %if.end8.i
  %19 = load i32* %number_extra_args.i, align 4, !tbaa !30
  %cmp39.i = icmp sgt i32 %19, 0
  %20 = load i32* %number_non_literal.i, align 4
  %cmp42.i = icmp eq i32 %20, 0
  %or.cond.i = and i1 %cmp39.i, %cmp42.i
  br i1 %or.cond.i, label %land.lhs.true43.i, label %if.end49.i

land.lhs.true43.i:                                ; preds = %if.end37.i
  %21 = load i32* %number_other.i, align 4, !tbaa !31
  %cmp45.i = icmp eq i32 %21, 0
  %22 = load i32* @warn_format_extra_args, align 4
  %tobool47.i = icmp ne i32 %22, 0
  %or.cond80.i = and i1 %cmp45.i, %tobool47.i
  br i1 %or.cond80.i, label %if.then48.i, label %if.end49.i

if.then48.i:                                      ; preds = %land.lhs.true43.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([30 x i8]* @.str10, i64 0, i64 0)) #3
  %.pre.i = load i32* %number_non_literal.i, align 4
  br label %if.end49.i

if.end49.i:                                       ; preds = %if.then48.i, %land.lhs.true43.i, %if.end37.i
  %23 = phi i32 [ %.pre.i, %if.then48.i ], [ 0, %land.lhs.true43.i ], [ %20, %if.end37.i ]
  %24 = load i32* %number_dollar_extra_args.i, align 4, !tbaa !32
  %cmp51.i = icmp sgt i32 %24, 0
  %cmp54.i = icmp eq i32 %23, 0
  %or.cond105.i = and i1 %cmp51.i, %cmp54.i
  br i1 %or.cond105.i, label %land.lhs.true55.i, label %if.end61.i

land.lhs.true55.i:                                ; preds = %if.end49.i
  %25 = load i32* %number_other.i, align 4, !tbaa !31
  %cmp57.i = icmp eq i32 %25, 0
  %26 = load i32* @warn_format_extra_args, align 4
  %tobool59.i = icmp ne i32 %26, 0
  %or.cond81.i = and i1 %cmp57.i, %tobool59.i
  br i1 %or.cond81.i, label %if.then60.i, label %if.end61.i

if.then60.i:                                      ; preds = %land.lhs.true55.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([35 x i8]* @.str11, i64 0, i64 0)) #3
  %.pre122.i = load i32* %number_non_literal.i, align 4
  br label %if.end61.i

if.end61.i:                                       ; preds = %if.then60.i, %land.lhs.true55.i, %if.end49.i
  %27 = phi i32 [ %.pre122.i, %if.then60.i ], [ 0, %land.lhs.true55.i ], [ %23, %if.end49.i ]
  %28 = load i32* %number_empty.i, align 4, !tbaa !33
  %cmp63.i = icmp sgt i32 %28, 0
  %cmp66.i = icmp eq i32 %27, 0
  %or.cond106.i = and i1 %cmp63.i, %cmp66.i
  %29 = load i32* %number_other.i, align 4
  %cmp69.i = icmp eq i32 %29, 0
  %or.cond107.i = and i1 %or.cond106.i, %cmp69.i
  br i1 %or.cond107.i, label %if.then70.i, label %if.end71.i

if.then70.i:                                      ; preds = %if.end61.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([26 x i8]* @.str12, i64 0, i64 0)) #3
  br label %if.end71.i

if.end71.i:                                       ; preds = %if.then70.i, %if.end61.i
  %30 = load i32* %number_wide.i, align 4, !tbaa !34
  %cmp73.i = icmp sgt i32 %30, 0
  br i1 %cmp73.i, label %if.then74.i, label %if.end75.i

if.then74.i:                                      ; preds = %if.end71.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([34 x i8]* @.str13, i64 0, i64 0)) #3
  br label %if.end75.i

if.end75.i:                                       ; preds = %if.then74.i, %if.end71.i
  %31 = load i32* %number_unterminated.i, align 4, !tbaa !35
  %cmp77.i = icmp sgt i32 %31, 0
  br i1 %cmp77.i, label %if.then78.i, label %check_format_info.exit

if.then78.i:                                      ; preds = %if.end75.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([27 x i8]* @.str14, i64 0, i64 0)) #3
  br label %check_format_info.exit

check_format_info.exit:                           ; preds = %if.end3.i, %if.then, %for.end.i, %if.end75.i, %if.then78.i
  call void @llvm.lifetime.end(i64 28, i8* %0) #3
  %32 = load i32* @warn_missing_format_attribute, align 4, !tbaa !1
  %33 = load i64* %first_arg_num, align 8
  %notlhs = icmp eq i32 %32, 0
  %notrhs = icmp ne i64 %33, 0
  %or.cond.not = or i1 %notrhs, %notlhs
  %34 = load i32* %format_type, align 8
  %tobool6 = icmp eq i32 %34, 2
  %or.cond87 = or i1 %or.cond.not, %tobool6
  br i1 %or.cond87, label %for.inc57, label %if.then7

if.then7:                                         ; preds = %check_format_info.exit
  %35 = load %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %type = getelementptr inbounds %union.tree_node* %35, i64 0, i32 0, i32 0, i32 1
  %36 = load %union.tree_node** %type, align 8, !tbaa !16
  %attributes = getelementptr inbounds %union.tree_node* %36, i64 0, i32 0, i32 5
  %37 = bitcast i48* %attributes to %union.tree_node**
  %c.075 = load %union.tree_node** %37, align 8
  %cond76 = icmp eq %union.tree_node* %c.075, null
  br i1 %cond76, label %if.then27, label %for.body11

for.body11:                                       ; preds = %if.then7, %for.inc
  %c.077 = phi %union.tree_node* [ %c.0, %for.inc ], [ %c.075, %if.then7 ]
  %purpose13 = getelementptr inbounds %union.tree_node* %c.077, i64 0, i32 0, i32 1
  %38 = load i8** %purpose13, align 8
  %39 = bitcast i8* %38 to %union.tree_node*
  %call14 = call i32 @is_attribute_p(i8* getelementptr inbounds ([7 x i8]* @.str5, i64 0, i64 0), %union.tree_node* %39) #3
  %tobool15 = icmp eq i32 %call14, 0
  br i1 %tobool15, label %for.inc, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %for.body11
  %value18 = getelementptr inbounds %union.tree_node* %c.077, i64 0, i32 0, i32 2
  %40 = bitcast i32* %value18 to %union.tree_node**
  %41 = load %union.tree_node** %40, align 8, !tbaa !14
  %value20 = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 2
  %42 = bitcast i32* %value20 to %union.tree_node**
  %43 = load %union.tree_node** %42, align 8, !tbaa !14
  %id = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds i8** %id, i64 1
  %45 = load i8** %44, align 8, !tbaa !21
  %call21 = call fastcc i32 @decode_format_type(i8* %45)
  %46 = load i32* %format_type, align 8, !tbaa !20
  %cmp23 = icmp eq i32 %call21, %46
  br i1 %cmp23, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body11, %land.lhs.true16
  %chain = getelementptr inbounds %union.tree_node* %c.077, i64 0, i32 0, i32 0, i32 0
  %c.0 = load %union.tree_node** %chain, align 8
  %cond = icmp eq %union.tree_node* %c.0, null
  br i1 %cond, label %if.then27, label %for.body11

for.end:                                          ; preds = %land.lhs.true16
  %cmp26 = icmp eq %union.tree_node* %c.077, null
  br i1 %cmp26, label %if.then27, label %for.inc57

if.then27:                                        ; preds = %for.inc, %if.then7, %for.end
  %47 = load %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %arguments = getelementptr inbounds %union.tree_node* %47, i64 0, i32 0, i32 10
  %args.078 = load %union.tree_node** %arguments, align 8
  %cmp2979 = icmp eq %union.tree_node* %args.078, null
  br i1 %cmp2979, label %for.inc57, label %for.body30.lr.ph

for.body30.lr.ph:                                 ; preds = %if.then27
  %48 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !5
  br label %for.body30

for.body30:                                       ; preds = %for.inc44, %for.body30.lr.ph
  %args.080 = phi %union.tree_node* [ %args.078, %for.body30.lr.ph ], [ %args.0, %for.inc44 ]
  %type32 = getelementptr inbounds %union.tree_node* %args.080, i64 0, i32 0, i32 0, i32 1
  %49 = load %union.tree_node** %type32, align 8, !tbaa !16
  %code = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp34 = icmp eq i32 %bf.clear, 13
  br i1 %cmp34, label %land.lhs.true35, label %for.inc44

land.lhs.true35:                                  ; preds = %for.body30
  %type39 = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 0, i32 1
  %50 = load %union.tree_node** %type39, align 8, !tbaa !16
  %51 = getelementptr inbounds %union.tree_node* %50, i64 0, i32 0, i32 15
  %52 = load %union.tree_node** %51, align 8, !tbaa !17
  %cmp41 = icmp eq %union.tree_node* %52, %48
  br i1 %cmp41, label %if.then49, label %for.inc44

for.inc44:                                        ; preds = %for.body30, %land.lhs.true35
  %chain46 = getelementptr inbounds %union.tree_node* %args.080, i64 0, i32 0, i32 0, i32 0
  %args.0 = load %union.tree_node** %chain46, align 8
  %cmp29 = icmp eq %union.tree_node* %args.0, null
  br i1 %cmp29, label %for.inc57, label %for.body30

if.then49:                                        ; preds = %land.lhs.true35
  %53 = load i32* %format_type, align 8, !tbaa !20
  %idxprom51 = zext i32 %53 to i64
  %name = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom51, i32 0
  %54 = load i8** %name, align 16, !tbaa !36
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([63 x i8]* @.str6, i64 0, i64 0), i8* %54) #3
  br label %for.inc57

for.inc57:                                        ; preds = %for.inc44, %check_format_info.exit, %if.then27, %for.body, %for.end, %if.then49
  %chain59 = getelementptr inbounds %union.tree_node* %a.083, i64 0, i32 0, i32 0, i32 0
  %55 = load %union.tree_node** %chain59, align 8, !tbaa !12
  %tobool = icmp eq %union.tree_node* %55, null
  br i1 %tobool, label %for.end60, label %for.body

for.end60:                                        ; preds = %for.inc57, %entry
  ret void
}

declare i32 @is_attribute_p(i8*, %union.tree_node*) #1

; Function Attrs: nounwind readonly uwtable
define internal fastcc i32 @decode_format_type(i8* nocapture readonly %s) #2 {
entry:
  %call = tail call i64 @strlen(i8* %s) #3
  %conv = trunc i64 %call to i32
  %add.ptr = getelementptr inbounds i8* %s, i64 2
  %arrayidx15 = getelementptr inbounds i8* %s, i64 1
  %sub = shl i64 %call, 32
  %sext = add i64 %sub, -4294967296
  %idxprom20 = ashr exact i64 %sext, 32
  %arrayidx21 = getelementptr inbounds i8* %s, i64 %idxprom20
  %sext55 = add i64 %sub, -8589934592
  %idxprom27 = ashr exact i64 %sext55, 32
  %arrayidx28 = getelementptr inbounds i8* %s, i64 %idxprom27
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %i.057 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %name = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %indvars.iv, i32 0
  %0 = load i8** %name, align 16, !tbaa !36
  %call2 = tail call i32 @strcmp(i8* %s, i8* %0) #3
  %tobool = icmp eq i32 %call2, 0
  %1 = trunc i64 %indvars.iv to i32
  br i1 %tobool, label %for.end, label %if.end

if.end:                                           ; preds = %for.body
  %call6 = tail call i64 @strlen(i8* %0) #3
  %conv7 = trunc i64 %call6 to i32
  %add = add nsw i32 %conv7, 4
  %cmp8 = icmp eq i32 %conv, %add
  br i1 %cmp8, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8* %s, align 1, !tbaa !38
  %cmp12 = icmp eq i8 %2, 95
  br i1 %cmp12, label %land.lhs.true14, label %for.inc

land.lhs.true14:                                  ; preds = %land.lhs.true
  %3 = load i8* %arrayidx15, align 1, !tbaa !38
  %cmp17 = icmp eq i8 %3, 95
  br i1 %cmp17, label %land.lhs.true19, label %for.inc

land.lhs.true19:                                  ; preds = %land.lhs.true14
  %4 = load i8* %arrayidx21, align 1, !tbaa !38
  %cmp23 = icmp eq i8 %4, 95
  br i1 %cmp23, label %land.lhs.true25, label %for.inc

land.lhs.true25:                                  ; preds = %land.lhs.true19
  %5 = load i8* %arrayidx28, align 1, !tbaa !38
  %cmp30 = icmp eq i8 %5, 95
  br i1 %cmp30, label %land.lhs.true32, label %for.inc

land.lhs.true32:                                  ; preds = %land.lhs.true25
  %sext56 = shl i64 %call6, 32
  %conv36 = ashr exact i64 %sext56, 32
  %call37 = tail call i32 @strncmp(i8* %add.ptr, i8* %0, i64 %conv36) #3
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.lhs.true32, %if.end, %land.lhs.true, %land.lhs.true14, %land.lhs.true19, %land.lhs.true25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %inc = add nsw i32 %i.057, 1
  %6 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %6, 4
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %land.lhs.true32, %for.body, %for.inc
  %i.0.lcssa = phi i32 [ %1, %land.lhs.true32 ], [ %1, %for.body ], [ %inc, %for.inc ]
  ret i32 %i.0.lcssa
}

declare void @warning(i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @check_format_info_recurse(i32* %status, %struct.format_check_results* %res, %struct.function_format_info* readonly %info, %union.tree_node* %format_tree, %union.tree_node* %params, i64 %arg_num) #0 {
entry:
  %format_chars.addr.i = alloca i8*, align 8
  %params.addr.i = alloca %union.tree_node*, align 8
  %main_arg_params.i = alloca %union.tree_node*, align 8
  %width_wanted_type.i = alloca %struct.format_wanted_type, align 8
  %precision_wanted_type.i = alloca %struct.format_wanted_type, align 8
  %main_wanted_type.i = alloca %struct.format_wanted_type, align 8
  %flag_chars.i = alloca [256 x i8], align 16
  %code = getelementptr inbounds %union.tree_node* %format_tree, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.end72 [
    i32 115, label %if.then
    i32 53, label %if.then6
  ]

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node* %format_tree, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !5
  call fastcc void @check_format_info_recurse(i32* %status, %struct.format_check_results* %res, %struct.function_format_info* %info, %union.tree_node* %0, %union.tree_node* %params, i64 %arg_num)
  br label %return

if.then6:                                         ; preds = %entry
  %operands8 = getelementptr inbounds %union.tree_node* %format_tree, i64 0, i32 0, i32 2
  %arrayidx9 = bitcast i32* %operands8 to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx9, align 8, !tbaa !5
  %type11 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type11, align 8, !tbaa !16
  %type13 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type13, align 8, !tbaa !16
  %attributes = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 5
  %4 = bitcast i48* %attributes to %union.tree_node**
  %attrs.0578 = load %union.tree_node** %4, align 8
  %tobool579 = icmp eq %union.tree_node* %attrs.0578, null
  br i1 %tobool579, label %for.end68.if.end72_crit_edge, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then6
  %arrayidx52 = getelementptr inbounds i32* %operands8, i64 2
  %5 = bitcast i32* %arrayidx52 to %union.tree_node**
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc65
  %attrs.0581 = phi %union.tree_node* [ %attrs.0578, %for.body.lr.ph ], [ %attrs.0, %for.inc65 ]
  %found_format_arg.0580 = phi i8 [ 0, %for.body.lr.ph ], [ %found_format_arg.1, %for.inc65 ]
  %purpose = getelementptr inbounds %union.tree_node* %attrs.0581, i64 0, i32 0, i32 1
  %6 = load i8** %purpose, align 8
  %7 = bitcast i8* %6 to %union.tree_node*
  %call = call i32 @is_attribute_p(i8* getelementptr inbounds ([11 x i8]* @.str15, i64 0, i64 0), %union.tree_node* %7) #3
  %tobool15 = icmp eq i32 %call, 0
  br i1 %tobool15, label %for.inc65, label %if.then16

if.then16:                                        ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %attrs.0581, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !14
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %if.then16
  %.pn = phi %union.tree_node* [ %9, %if.then16 ], [ %format_num_expr.0, %while.cond ]
  %format_num_expr.0.in.in = getelementptr inbounds %union.tree_node* %.pn, i64 0, i32 0, i32 2
  %format_num_expr.0.in = bitcast i32* %format_num_expr.0.in.in to %union.tree_node**
  %format_num_expr.0 = load %union.tree_node** %format_num_expr.0.in, align 8
  %code21 = getelementptr inbounds %union.tree_node* %format_num_expr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load22 = load i32* %code21, align 8
  %bf.clear23 = and i32 %bf.load22, 255
  %bf.clear23.off = add i32 %bf.clear23, -114
  %switch510 = icmp ult i32 %bf.clear23.off, 3
  br i1 %switch510, label %while.cond, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %cmp42 = icmp eq i32 %bf.clear23, 25
  br i1 %cmp42, label %lor.lhs.false43, label %if.then46

lor.lhs.false43:                                  ; preds = %lor.rhs
  %int_cst44 = getelementptr inbounds %union.tree_node* %format_num_expr.0, i64 0, i32 0, i32 2
  %high = getelementptr inbounds i32* %int_cst44, i64 2
  %10 = bitcast i32* %high to i64*
  %11 = load i64* %10, align 8, !tbaa !24
  %cmp45 = icmp eq i64 %11, 0
  br i1 %cmp45, label %if.end47, label %if.then46

if.then46:                                        ; preds = %lor.lhs.false43, %lor.rhs
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 1434, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.check_format_info_recurse, i64 0, i64 0)) #7
  unreachable

if.end47:                                         ; preds = %lor.lhs.false43
  %low = bitcast i32* %int_cst44 to i64*
  %12 = load i64* %low, align 8, !tbaa !27
  %conv = trunc i64 %12 to i32
  %inner_args.0574 = load %union.tree_node** %5, align 8
  %cmp54575 = icmp eq %union.tree_node* %inner_args.0574, null
  br i1 %cmp54575, label %for.inc65, label %for.body56

for.body56:                                       ; preds = %if.end47, %for.inc
  %inner_args.0577 = phi %union.tree_node* [ %inner_args.0, %for.inc ], [ %inner_args.0574, %if.end47 ]
  %i.0576 = phi i32 [ %inc, %for.inc ], [ 1, %if.end47 ]
  %cmp57 = icmp eq i32 %i.0576, %conv
  br i1 %cmp57, label %if.then59, label %for.inc

if.then59:                                        ; preds = %for.body56
  %value61 = getelementptr inbounds %union.tree_node* %inner_args.0577, i64 0, i32 0, i32 2
  %13 = bitcast i32* %value61 to %union.tree_node**
  %14 = load %union.tree_node** %13, align 8, !tbaa !14
  call fastcc void @check_format_info_recurse(i32* %status, %struct.format_check_results* %res, %struct.function_format_info* %info, %union.tree_node* %14, %union.tree_node* %params, i64 %arg_num)
  br label %for.inc65

for.inc:                                          ; preds = %for.body56
  %chain = getelementptr inbounds %union.tree_node* %inner_args.0577, i64 0, i32 0, i32 0, i32 0
  %inc = add nsw i32 %i.0576, 1
  %inner_args.0 = load %union.tree_node** %chain, align 8
  %cmp54 = icmp eq %union.tree_node* %inner_args.0, null
  br i1 %cmp54, label %for.inc65, label %for.body56

for.inc65:                                        ; preds = %for.inc, %if.end47, %for.body, %if.then59
  %found_format_arg.1 = phi i8 [ 1, %if.then59 ], [ %found_format_arg.0580, %for.body ], [ %found_format_arg.0580, %if.end47 ], [ %found_format_arg.0580, %for.inc ]
  %chain67 = getelementptr inbounds %union.tree_node* %attrs.0581, i64 0, i32 0, i32 0, i32 0
  %attrs.0 = load %union.tree_node** %chain67, align 8
  %tobool = icmp eq %union.tree_node* %attrs.0, null
  br i1 %tobool, label %for.end68, label %for.body

for.end68:                                        ; preds = %for.inc65
  %15 = and i8 %found_format_arg.1, 1
  %tobool69 = icmp eq i8 %15, 0
  br i1 %tobool69, label %for.end68.if.end72_crit_edge, label %return

for.end68.if.end72_crit_edge:                     ; preds = %if.then6, %for.end68
  %bf.load75.pre = load i32* %code, align 8
  br label %if.end72

if.end72:                                         ; preds = %for.end68.if.end72_crit_edge, %entry
  %bf.load75 = phi i32 [ %bf.load75.pre, %for.end68.if.end72_crit_edge ], [ %bf.load, %entry ]
  %bf.clear76 = and i32 %bf.load75, 255
  %cmp77 = icmp eq i32 %bf.clear76, 51
  br i1 %cmp77, label %if.then79, label %if.end86

if.then79:                                        ; preds = %if.end72
  %operands81 = getelementptr inbounds %union.tree_node* %format_tree, i64 0, i32 0, i32 2
  %arrayidx82 = getelementptr inbounds i32* %operands81, i64 2
  %16 = bitcast i32* %arrayidx82 to %union.tree_node**
  %17 = load %union.tree_node** %16, align 8, !tbaa !5
  call fastcc void @check_format_info_recurse(i32* %status, %struct.format_check_results* %res, %struct.function_format_info* %info, %union.tree_node* %17, %union.tree_node* %params, i64 %arg_num)
  %arrayidx85 = getelementptr inbounds i32* %operands81, i64 4
  %18 = bitcast i32* %arrayidx85 to %union.tree_node**
  %19 = load %union.tree_node** %18, align 8, !tbaa !5
  call fastcc void @check_format_info_recurse(i32* %status, %struct.format_check_results* %res, %struct.function_format_info* %info, %union.tree_node* %19, %union.tree_node* %params, i64 %arg_num)
  br label %return

if.end86:                                         ; preds = %if.end72
  %call87 = call i32 @integer_zerop(%union.tree_node* %format_tree) #3
  %tobool88 = icmp eq i32 %call87, 0
  br i1 %tobool88, label %if.end108, label %if.then89

if.then89:                                        ; preds = %if.end86
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([19 x i8]* @.str17, i64 0, i64 0))
  %add567 = add i64 %arg_num, 1
  %first_arg_num = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 2
  %20 = load i64* %first_arg_num, align 8, !tbaa !19
  %cmp91568 = icmp ult i64 %add567, %20
  %cmp94569 = icmp eq %union.tree_node* %params, null
  br i1 %cmp91568, label %while.body93, label %while.end101

while.body93:                                     ; preds = %if.then89, %if.end97
  %cmp94572 = phi i1 [ %cmp94, %if.end97 ], [ %cmp94569, %if.then89 ]
  %add571 = phi i64 [ %add, %if.end97 ], [ %add567, %if.then89 ]
  %params.addr.0570 = phi %union.tree_node* [ %21, %if.end97 ], [ %params, %if.then89 ]
  br i1 %cmp94572, label %return, label %if.end97

if.end97:                                         ; preds = %while.body93
  %chain99 = getelementptr inbounds %union.tree_node* %params.addr.0570, i64 0, i32 0, i32 0, i32 0
  %21 = load %union.tree_node** %chain99, align 8, !tbaa !12
  %add = add i64 %add571, 1
  %cmp91 = icmp ult i64 %add, %20
  %cmp94 = icmp eq %union.tree_node* %21, null
  br i1 %cmp91, label %while.body93, label %while.end101

while.end101:                                     ; preds = %if.end97, %if.then89
  %cmp94.lcssa = phi i1 [ %cmp94569, %if.then89 ], [ %cmp94, %if.end97 ]
  br i1 %cmp94.lcssa, label %if.then104, label %if.else

if.then104:                                       ; preds = %while.end101
  %number_other = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 6
  %22 = load i32* %number_other, align 4, !tbaa !31
  %inc105 = add nsw i32 %22, 1
  store i32 %inc105, i32* %number_other, align 4, !tbaa !31
  br label %return

if.else:                                          ; preds = %while.end101
  %number_extra_args = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 1
  %23 = load i32* %number_extra_args, align 4, !tbaa !30
  %inc106 = add nsw i32 %23, 1
  store i32 %inc106, i32* %number_extra_args, align 4, !tbaa !30
  br label %return

if.end108:                                        ; preds = %if.end86
  %bf.load111 = load i32* %code, align 8
  %bf.clear112 = and i32 %bf.load111, 255
  %cmp113 = icmp eq i32 %bf.clear112, 59
  br i1 %cmp113, label %if.then115, label %if.end252

if.then115:                                       ; preds = %if.end108
  %operands117 = getelementptr inbounds %union.tree_node* %format_tree, i64 0, i32 0, i32 2
  %arrayidx118 = bitcast i32* %operands117 to %union.tree_node**
  %24 = load %union.tree_node** %arrayidx118, align 8, !tbaa !5
  %arrayidx121 = getelementptr inbounds i32* %operands117, i64 2
  %25 = bitcast i32* %arrayidx121 to %union.tree_node**
  %26 = load %union.tree_node** %25, align 8, !tbaa !5
  %27 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !5
  br label %while.cond122

while.cond122:                                    ; preds = %land.rhs, %if.then115
  %arg0.0 = phi %union.tree_node* [ %24, %if.then115 ], [ %28, %land.rhs ]
  %code124 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 2
  %bf.load125 = load i32* %code124, align 8
  %bf.clear126 = and i32 %bf.load125, 255
  %bf.clear126.off = add i32 %bf.clear126, -114
  %switch = icmp ult i32 %bf.clear126.off, 3
  br i1 %switch, label %land.lhs.true, label %while.cond170

land.lhs.true:                                    ; preds = %while.cond122
  %operands144 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 2
  %arrayidx145 = bitcast i32* %operands144 to %union.tree_node**
  %28 = load %union.tree_node** %arrayidx145, align 8, !tbaa !5
  %cmp146 = icmp eq %union.tree_node* %28, %27
  br i1 %cmp146, label %while.cond170, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type149 = getelementptr inbounds %union.tree_node* %arg0.0, i64 0, i32 0, i32 0, i32 1
  %29 = load %union.tree_node** %type149, align 8, !tbaa !16
  %type150 = bitcast %union.tree_node* %29 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type150, i64 0, i32 6
  %bf.load151 = load i32* %mode, align 4
  %type157 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 0, i32 1
  %30 = load %union.tree_node** %type157, align 8, !tbaa !16
  %type158 = bitcast %union.tree_node* %30 to %struct.tree_type*
  %mode159 = getelementptr inbounds %struct.tree_type* %type158, i64 0, i32 6
  %bf.load160 = load i32* %mode159, align 4
  %bf.lshr507 = xor i32 %bf.load160, %bf.load151
  %31 = and i32 %bf.lshr507, 65024
  %cmp163 = icmp eq i32 %31, 0
  br i1 %cmp163, label %while.cond122, label %while.cond170

while.cond170:                                    ; preds = %while.cond122, %land.lhs.true, %land.rhs, %land.rhs197
  %arg1.0 = phi %union.tree_node* [ %32, %land.rhs197 ], [ %26, %land.rhs ], [ %26, %land.lhs.true ], [ %26, %while.cond122 ]
  %code172 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 0, i32 2
  %bf.load173 = load i32* %code172, align 8
  %bf.clear174 = and i32 %bf.load173, 255
  %bf.clear174.off = add i32 %bf.clear174, -114
  %switch509 = icmp ult i32 %bf.clear174.off, 3
  br i1 %switch509, label %land.lhs.true191, label %while.end222

land.lhs.true191:                                 ; preds = %while.cond170
  %operands193 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 2
  %arrayidx194 = bitcast i32* %operands193 to %union.tree_node**
  %32 = load %union.tree_node** %arrayidx194, align 8, !tbaa !5
  %cmp195 = icmp eq %union.tree_node* %32, %27
  br i1 %cmp195, label %if.else230, label %land.rhs197

land.rhs197:                                      ; preds = %land.lhs.true191
  %type199 = getelementptr inbounds %union.tree_node* %arg1.0, i64 0, i32 0, i32 0, i32 1
  %33 = load %union.tree_node** %type199, align 8, !tbaa !16
  %type200 = bitcast %union.tree_node* %33 to %struct.tree_type*
  %mode201 = getelementptr inbounds %struct.tree_type* %type200, i64 0, i32 6
  %bf.load202 = load i32* %mode201, align 4
  %type209 = getelementptr inbounds %union.tree_node* %32, i64 0, i32 0, i32 0, i32 1
  %34 = load %union.tree_node** %type209, align 8, !tbaa !16
  %type210 = bitcast %union.tree_node* %34 to %struct.tree_type*
  %mode211 = getelementptr inbounds %struct.tree_type* %type210, i64 0, i32 6
  %bf.load212 = load i32* %mode211, align 4
  %bf.lshr203506 = xor i32 %bf.load212, %bf.load202
  %35 = and i32 %bf.lshr203506, 65024
  %cmp215 = icmp eq i32 %35, 0
  br i1 %cmp215, label %while.cond170, label %if.else230

while.end222:                                     ; preds = %while.cond170
  %cmp227 = icmp eq i32 %bf.clear174, 25
  br i1 %cmp227, label %if.end241, label %if.else230

if.else230:                                       ; preds = %land.rhs197, %land.lhs.true191, %while.end222
  %cmp235 = icmp eq i32 %bf.clear126, 25
  br i1 %cmp235, label %if.end241, label %if.else238

if.else238:                                       ; preds = %if.else230
  %number_non_literal = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 0
  %36 = load i32* %number_non_literal, align 4, !tbaa !28
  %inc239 = add nsw i32 %36, 1
  store i32 %inc239, i32* %number_non_literal, align 4, !tbaa !28
  br label %return

if.end241:                                        ; preds = %if.else230, %while.end222
  %arg1.1 = phi %union.tree_node* [ %arg1.0, %while.end222 ], [ %arg0.0, %if.else230 ]
  %format_tree.addr.0 = phi %union.tree_node* [ %arg0.0, %while.end222 ], [ %arg1.0, %if.else230 ]
  %call242 = call i32 @host_integerp(%union.tree_node* %arg1.1, i32 0) #3
  %tobool243 = icmp eq i32 %call242, 0
  br i1 %tobool243, label %if.then248, label %lor.lhs.false244

lor.lhs.false244:                                 ; preds = %if.end241
  %call245 = call i64 @tree_low_cst(%union.tree_node* %arg1.1, i32 0) #3
  %cmp246 = icmp slt i64 %call245, 0
  br i1 %cmp246, label %if.then248, label %lor.lhs.false244.if.end252_crit_edge

lor.lhs.false244.if.end252_crit_edge:             ; preds = %lor.lhs.false244
  %code254.phi.trans.insert = getelementptr inbounds %union.tree_node* %format_tree.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load255.pre = load i32* %code254.phi.trans.insert, align 8
  br label %if.end252

if.then248:                                       ; preds = %if.end241, %lor.lhs.false244
  %number_non_literal249 = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 0
  %37 = load i32* %number_non_literal249, align 4, !tbaa !28
  %inc250 = add nsw i32 %37, 1
  store i32 %inc250, i32* %number_non_literal249, align 4, !tbaa !28
  br label %return

if.end252:                                        ; preds = %lor.lhs.false244.if.end252_crit_edge, %if.end108
  %bf.load255 = phi i32 [ %bf.load255.pre, %lor.lhs.false244.if.end252_crit_edge ], [ %bf.load111, %if.end108 ]
  %offset.0 = phi i64 [ %call245, %lor.lhs.false244.if.end252_crit_edge ], [ 0, %if.end108 ]
  %format_tree.addr.1 = phi %union.tree_node* [ %format_tree.addr.0, %lor.lhs.false244.if.end252_crit_edge ], [ %format_tree, %if.end108 ]
  %bf.clear256 = and i32 %bf.load255, 255
  %cmp257 = icmp eq i32 %bf.clear256, 121
  br i1 %cmp257, label %if.end262, label %if.then259

if.then259:                                       ; preds = %if.end252
  %number_non_literal260 = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 0
  %38 = load i32* %number_non_literal260, align 4, !tbaa !28
  %inc261 = add nsw i32 %38, 1
  store i32 %inc261, i32* %number_non_literal260, align 4, !tbaa !28
  br label %return

if.end262:                                        ; preds = %if.end252
  %operands264 = getelementptr inbounds %union.tree_node* %format_tree.addr.1, i64 0, i32 0, i32 2
  %arrayidx265 = bitcast i32* %operands264 to %union.tree_node**
  %39 = load %union.tree_node** %arrayidx265, align 8, !tbaa !5
  %code267 = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 0, i32 2
  %bf.load268 = load i32* %code267, align 8
  %bf.clear269 = and i32 %bf.load268, 255
  %cmp270 = icmp eq i32 %bf.clear269, 34
  br i1 %cmp270, label %land.lhs.true272, label %if.end293

land.lhs.true272:                                 ; preds = %if.end262
  %type274 = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 0, i32 1
  %40 = load %union.tree_node** %type274, align 8, !tbaa !16
  %code276 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 0, i32 2
  %bf.load277 = load i32* %code276, align 8
  %bf.clear278 = and i32 %bf.load277, 255
  %cmp279 = icmp eq i32 %bf.clear278, 18
  br i1 %cmp279, label %land.lhs.true281, label %if.end293

land.lhs.true281:                                 ; preds = %land.lhs.true272
  %call282 = call %union.tree_node* @decl_constant_value(%union.tree_node* %39) #3
  %cmp283 = icmp eq %union.tree_node* %call282, %39
  br i1 %cmp283, label %if.end293, label %land.lhs.true285

land.lhs.true285:                                 ; preds = %land.lhs.true281
  %code287 = getelementptr inbounds %union.tree_node* %call282, i64 0, i32 0, i32 0, i32 2
  %bf.load288 = load i32* %code287, align 8
  %bf.clear289 = and i32 %bf.load288, 255
  %cmp290 = icmp eq i32 %bf.clear289, 29
  br i1 %cmp290, label %if.then292, label %if.end293

if.then292:                                       ; preds = %land.lhs.true285
  %size_unit = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 7
  %41 = load %union.tree_node** %size_unit, align 8, !tbaa !39
  br label %if.end293

if.end293:                                        ; preds = %land.lhs.true281, %if.then292, %land.lhs.true285, %land.lhs.true272, %if.end262
  %array_size.0 = phi %union.tree_node* [ %41, %if.then292 ], [ null, %land.lhs.true285 ], [ null, %land.lhs.true281 ], [ null, %land.lhs.true272 ], [ null, %if.end262 ]
  %format_tree.addr.2 = phi %union.tree_node* [ %call282, %if.then292 ], [ %39, %land.lhs.true285 ], [ %39, %land.lhs.true281 ], [ %39, %land.lhs.true272 ], [ %39, %if.end262 ]
  %code295 = getelementptr inbounds %union.tree_node* %format_tree.addr.2, i64 0, i32 0, i32 0, i32 2
  %bf.load296 = load i32* %code295, align 8
  %bf.clear297 = and i32 %bf.load296, 255
  %cmp298 = icmp eq i32 %bf.clear297, 29
  br i1 %cmp298, label %if.end303, label %if.then300

if.then300:                                       ; preds = %if.end293
  %number_non_literal301 = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 0
  %42 = load i32* %number_non_literal301, align 4, !tbaa !28
  %inc302 = add nsw i32 %42, 1
  store i32 %inc302, i32* %number_non_literal301, align 4, !tbaa !28
  br label %return

if.end303:                                        ; preds = %if.end293
  %type305 = getelementptr inbounds %union.tree_node* %format_tree.addr.2, i64 0, i32 0, i32 0, i32 1
  %43 = load %union.tree_node** %type305, align 8, !tbaa !16
  %type307 = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 1
  %44 = load %union.tree_node** %type307, align 8, !tbaa !16
  %45 = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 15
  %46 = load %union.tree_node** %45, align 8, !tbaa !17
  %47 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !5
  %cmp309 = icmp eq %union.tree_node* %46, %47
  br i1 %cmp309, label %if.end313, label %if.then311

if.then311:                                       ; preds = %if.end303
  %number_wide = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 3
  %48 = load i32* %number_wide, align 4, !tbaa !34
  %inc312 = add nsw i32 %48, 1
  store i32 %inc312, i32* %number_wide, align 4, !tbaa !34
  br label %return

if.end313:                                        ; preds = %if.end303
  %pointer = getelementptr inbounds %union.tree_node* %format_tree.addr.2, i64 0, i32 0, i32 4
  %49 = load %union.tree_node** %pointer, align 8
  %50 = bitcast %union.tree_node* %49 to i8*
  %51 = getelementptr inbounds %union.tree_node* %format_tree.addr.2, i64 0, i32 0, i32 2
  %52 = load i32* %51, align 4, !tbaa !41
  %cmp315 = icmp eq %union.tree_node* %array_size.0, null
  br i1 %cmp315, label %if.end347, label %if.then317

if.then317:                                       ; preds = %if.end313
  %code319 = getelementptr inbounds %union.tree_node* %array_size.0, i64 0, i32 0, i32 0, i32 2
  %bf.load320 = load i32* %code319, align 8
  %bf.clear321 = and i32 %bf.load320, 255
  %cmp322 = icmp eq i32 %bf.clear321, 25
  br i1 %cmp322, label %if.end325, label %if.then324

if.then324:                                       ; preds = %if.then317
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 1559, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.check_format_info_recurse, i64 0, i64 0)) #7
  unreachable

if.end325:                                        ; preds = %if.then317
  %call326 = call i32 @host_integerp(%union.tree_node* %array_size.0, i32 0) #3
  %tobool327 = icmp eq i32 %call326, 0
  br i1 %tobool327, label %if.end347, label %if.then328

if.then328:                                       ; preds = %if.end325
  %int_cst330 = getelementptr inbounds %union.tree_node* %array_size.0, i64 0, i32 0, i32 2
  %low331 = bitcast i32* %int_cst330 to i64*
  %53 = load i64* %low331, align 8, !tbaa !27
  %cmp332 = icmp sgt i64 %53, 0
  br i1 %cmp332, label %land.lhs.true334, label %if.end347

land.lhs.true334:                                 ; preds = %if.then328
  %conv335 = trunc i64 %53 to i32
  %sext = shl i64 %53, 32
  %conv336 = ashr exact i64 %sext, 32
  %cmp337 = icmp eq i64 %53, %conv336
  %conv340 = sext i32 %52 to i64
  %cmp341 = icmp sgt i64 %conv340, %53
  %or.cond = and i1 %cmp337, %cmp341
  %conv335. = select i1 %or.cond, i32 %conv335, i32 %52
  br label %if.end347

if.end347:                                        ; preds = %land.lhs.true334, %if.end325, %if.end313, %if.then328
  %format_length.0 = phi i32 [ %52, %if.then328 ], [ %52, %if.end325 ], [ %52, %if.end313 ], [ %conv335., %land.lhs.true334 ]
  %tobool348 = icmp eq i64 %offset.0, 0
  br i1 %tobool348, label %if.end359, label %if.then349

if.then349:                                       ; preds = %if.end347
  %conv350 = sext i32 %format_length.0 to i64
  %cmp351 = icmp sgt i64 %conv350, %offset.0
  br i1 %cmp351, label %if.end356, label %if.then353

if.then353:                                       ; preds = %if.then349
  %number_non_literal354 = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 0
  %54 = load i32* %number_non_literal354, align 4, !tbaa !28
  %inc355 = add nsw i32 %54, 1
  store i32 %inc355, i32* %number_non_literal354, align 4, !tbaa !28
  br label %return

if.end356:                                        ; preds = %if.then349
  %add.ptr = getelementptr inbounds i8* %50, i64 %offset.0
  %sub = sub nsw i64 %conv350, %offset.0
  %conv358 = trunc i64 %sub to i32
  br label %if.end359

if.end359:                                        ; preds = %if.end347, %if.end356
  %format_chars.0 = phi i8* [ %add.ptr, %if.end356 ], [ %50, %if.end347 ]
  %format_length.1 = phi i32 [ %conv358, %if.end356 ], [ %format_length.0, %if.end347 ]
  %cmp360 = icmp slt i32 %format_length.1, 1
  br i1 %cmp360, label %if.then362, label %if.end364

if.then362:                                       ; preds = %if.end359
  %number_unterminated = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 5
  %55 = load i32* %number_unterminated, align 4, !tbaa !35
  %inc363 = add nsw i32 %55, 1
  store i32 %inc363, i32* %number_unterminated, align 4, !tbaa !35
  br label %return

if.end364:                                        ; preds = %if.end359
  %cmp365 = icmp eq i32 %format_length.1, 1
  br i1 %cmp365, label %if.then367, label %if.end369

if.then367:                                       ; preds = %if.end364
  %number_empty = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 4
  %56 = load i32* %number_empty, align 4, !tbaa !33
  %inc368 = add nsw i32 %56, 1
  store i32 %inc368, i32* %number_empty, align 4, !tbaa !33
  br label %return

if.end369:                                        ; preds = %if.end364
  %dec = add nsw i32 %format_length.1, -1
  %idxprom = sext i32 %dec to i64
  %arrayidx370 = getelementptr inbounds i8* %format_chars.0, i64 %idxprom
  %57 = load i8* %arrayidx370, align 1, !tbaa !38
  %cmp372 = icmp eq i8 %57, 0
  br i1 %cmp372, label %while.cond378.preheader, label %if.then374

while.cond378.preheader:                          ; preds = %if.end369
  %add379561 = add i64 %arg_num, 1
  %first_arg_num380 = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 2
  %58 = load i64* %first_arg_num380, align 8, !tbaa !19
  %cmp381562 = icmp ult i64 %add379561, %58
  br i1 %cmp381562, label %while.body383, label %while.end391

if.then374:                                       ; preds = %if.end369
  %number_unterminated375 = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 5
  %59 = load i32* %number_unterminated375, align 4, !tbaa !35
  %inc376 = add nsw i32 %59, 1
  store i32 %inc376, i32* %number_unterminated375, align 4, !tbaa !35
  br label %return

while.body383:                                    ; preds = %while.cond378.preheader, %if.end387
  %add379564 = phi i64 [ %add379, %if.end387 ], [ %add379561, %while.cond378.preheader ]
  %params.addr.1563 = phi %union.tree_node* [ %60, %if.end387 ], [ %params, %while.cond378.preheader ]
  %cmp384 = icmp eq %union.tree_node* %params.addr.1563, null
  br i1 %cmp384, label %return, label %if.end387

if.end387:                                        ; preds = %while.body383
  %chain389 = getelementptr inbounds %union.tree_node* %params.addr.1563, i64 0, i32 0, i32 0, i32 0
  %60 = load %union.tree_node** %chain389, align 8, !tbaa !12
  %add379 = add i64 %add379564, 1
  %cmp381 = icmp ult i64 %add379, %58
  br i1 %cmp381, label %while.body383, label %while.end391

while.end391:                                     ; preds = %if.end387, %while.cond378.preheader
  %params.addr.1.lcssa = phi %union.tree_node* [ %params, %while.cond378.preheader ], [ %60, %if.end387 ]
  %arg_num.addr.1.lcssa = phi i64 [ %arg_num, %while.cond378.preheader ], [ %add379564, %if.end387 ]
  %number_other392 = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 6
  %61 = load i32* %number_other392, align 4, !tbaa !31
  %inc393 = add nsw i32 %61, 1
  store i32 %inc393, i32* %number_other392, align 4, !tbaa !31
  %62 = bitcast i8** %format_chars.addr.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %62) #3
  %63 = bitcast %union.tree_node** %params.addr.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %63) #3
  %64 = bitcast %union.tree_node** %main_arg_params.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %64) #3
  store i8* %format_chars.0, i8** %format_chars.addr.i, align 8, !tbaa !5
  store %union.tree_node* %params.addr.1.lcssa, %union.tree_node** %params.addr.i, align 8, !tbaa !5
  %format_type.i = getelementptr inbounds %struct.function_format_info* %info, i64 0, i32 0
  %65 = load i32* %format_type.i, align 4, !tbaa !20
  %idxprom.i = zext i32 %65 to i64
  %arrayidx.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i
  %flag_specs1.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 5
  %66 = load %struct.format_flag_spec** %flag_specs1.i, align 8, !tbaa !43
  %bad_flag_pairs2.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 6
  %67 = load %struct.format_flag_pair** %bad_flag_pairs2.i, align 16, !tbaa !44
  %conv.i = trunc i64 %58 to i32
  store i32 %conv.i, i32* @dollar_first_arg_num, align 4, !tbaa !1
  store i32 0, i32* @dollar_arguments_count, align 4, !tbaa !1
  store i32 0, i32* @dollar_max_arg_used, align 4, !tbaa !1
  store i1 false, i1* @dollar_format_warned, align 1
  %cmp.i.i = icmp sgt i32 %conv.i, 0
  %tobool.i.i = icmp ne %union.tree_node* %params.addr.1.lcssa, null
  %or.cond.i.i = and i1 %cmp.i.i, %tobool.i.i
  br i1 %or.cond.i.i, label %while.body.i.i, label %if.end.i.i

while.body.i.i:                                   ; preds = %while.end391, %while.body.i.i
  %inc43.i.i = phi i32 [ %inc.i.i, %while.body.i.i ], [ 0, %while.end391 ]
  %params.addr.0.i.i = phi %union.tree_node* [ %68, %while.body.i.i ], [ %params.addr.1.lcssa, %while.end391 ]
  %inc.i.i = add nsw i32 %inc43.i.i, 1
  %chain.i.i = getelementptr inbounds %union.tree_node* %params.addr.0.i.i, i64 0, i32 0, i32 0, i32 0
  %68 = load %union.tree_node** %chain.i.i, align 8, !tbaa !12
  %tobool.old.i.i = icmp eq %union.tree_node* %68, null
  br i1 %tobool.old.i.i, label %if.end.loopexit.i.i, label %while.body.i.i

if.end.loopexit.i.i:                              ; preds = %while.body.i.i
  store i32 %inc.i.i, i32* @dollar_arguments_count, align 4, !tbaa !1
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.end.loopexit.i.i, %while.end391
  %69 = phi i32 [ %inc.i.i, %if.end.loopexit.i.i ], [ 0, %while.end391 ]
  %70 = load i32* @dollar_arguments_alloc, align 4, !tbaa !1
  %cmp1.i.i = icmp slt i32 %70, %69
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.end11.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  %71 = load i8** @dollar_arguments_used, align 8, !tbaa !5
  %tobool3.i.i = icmp eq i8* %71, null
  br i1 %tobool3.i.i, label %if.end5.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then2.i.i
  call void @free(i8* %71) #3
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %if.then2.i.i
  %72 = load i8** @dollar_arguments_pointer_p, align 8, !tbaa !5
  %tobool6.i.i = icmp eq i8* %72, null
  br i1 %tobool6.i.i, label %if.end8.i.i, label %if.then7.i.i

if.then7.i.i:                                     ; preds = %if.end5.i.i
  call void @free(i8* %72) #3
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then7.i.i, %if.end5.i.i
  %73 = load i32* @dollar_arguments_count, align 4, !tbaa !1
  store i32 %73, i32* @dollar_arguments_alloc, align 4, !tbaa !1
  %conv.i.i = sext i32 %73 to i64
  %call.i.i = call noalias i8* @xmalloc(i64 %conv.i.i) #3
  store i8* %call.i.i, i8** @dollar_arguments_used, align 8, !tbaa !5
  %74 = load i32* @dollar_arguments_alloc, align 4, !tbaa !1
  %conv9.i.i = sext i32 %74 to i64
  %call10.i.i = call noalias i8* @xmalloc(i64 %conv9.i.i) #3
  store i8* %call10.i.i, i8** @dollar_arguments_pointer_p, align 8, !tbaa !5
  %.pr.i.i = load i32* @dollar_arguments_alloc, align 4, !tbaa !1
  br label %if.end11.i.i

if.end11.i.i:                                     ; preds = %if.end8.i.i, %if.end.i.i
  %75 = phi i32 [ %.pr.i.i, %if.end8.i.i ], [ %70, %if.end.i.i ]
  %tobool12.i.i = icmp eq i32 %75, 0
  br i1 %tobool12.i.i, label %while.body.preheader.i, label %if.then13.i.i

if.then13.i.i:                                    ; preds = %if.end11.i.i
  %76 = load i8** @dollar_arguments_used, align 8, !tbaa !5
  %conv14.i.i = sext i32 %75 to i64
  call void @llvm.memset.p0i8.i64(i8* %76, i8 0, i64 %conv14.i.i, i32 1, i1 false) #3
  %cmp.not.i.i = xor i1 %cmp.i.i, true
  %tobool1940.i.i = icmp eq %union.tree_node* %params.addr.1.lcssa, null
  %or.cond44.i.i = or i1 %tobool1940.i.i, %cmp.not.i.i
  br i1 %or.cond44.i.i, label %while.body.preheader.i, label %while.body20.i.i

while.body20.i.i:                                 ; preds = %if.then13.i.i, %while.body20.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %while.body20.i.i ], [ 0, %if.then13.i.i ]
  %params.addr.141.i.i = phi %union.tree_node* [ %81, %while.body20.i.i ], [ %params.addr.1.lcssa, %if.then13.i.i ]
  %value.i.i = getelementptr inbounds %union.tree_node* %params.addr.141.i.i, i64 0, i32 0, i32 2
  %77 = bitcast i32* %value.i.i to %union.tree_node**
  %78 = load %union.tree_node** %77, align 8, !tbaa !14
  %type.i.i = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 0, i32 1
  %79 = load %union.tree_node** %type.i.i, align 8, !tbaa !16
  %code.i.i = getelementptr inbounds %union.tree_node* %79, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i = load i32* %code.i.i, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 255
  %cmp23.i.i = icmp eq i32 %bf.clear.i.i, 13
  %conv25.i.i = zext i1 %cmp23.i.i to i8
  %80 = load i8** @dollar_arguments_pointer_p, align 8, !tbaa !5
  %arrayidx.i.i = getelementptr inbounds i8* %80, i64 %indvars.iv.i.i
  store i8 %conv25.i.i, i8* %arrayidx.i.i, align 1, !tbaa !38
  %chain27.i.i = getelementptr inbounds %union.tree_node* %params.addr.141.i.i, i64 0, i32 0, i32 0, i32 0
  %81 = load %union.tree_node** %chain27.i.i, align 8, !tbaa !12
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %tobool19.i.i = icmp eq %union.tree_node* %81, null
  br i1 %tobool19.i.i, label %while.body.preheader.i, label %while.body20.i.i

while.body.preheader.i:                           ; preds = %while.body20.i.i, %if.then13.i.i, %if.end11.i.i
  %82 = bitcast %struct.format_wanted_type* %width_wanted_type.i to i8*
  %83 = bitcast %struct.format_wanted_type* %precision_wanted_type.i to i8*
  %84 = bitcast %struct.format_wanted_type* %main_wanted_type.i to i8*
  %85 = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 0
  %sub.ptr.rhs.cast.i = ptrtoint i8* %format_chars.0 to i64
  %number_extra_args.i = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 1
  %tobool1.i.i = icmp eq i32 %65, 1
  %number_dollar_extra_args.i.i = getelementptr inbounds %struct.format_check_results* %res, i64 0, i32 2
  %86 = and i64 %idxprom.i, 4294967294
  %87 = icmp eq i64 %86, 0
  %width_char.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 8
  %width_type.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 13
  %left_precision_char.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 9
  %name236.i = getelementptr inbounds %struct.format_kind_info* %arrayidx.i, i64 0, i32 0
  %precision_char1569.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 10
  %length_char_specs.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 1
  %tobool365.i = icmp eq i32 %65, 2
  %tobool527.i = icmp ne i32 %65, 2
  %conversion_specs.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 2
  %suppression_char.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 11
  %flag_char11665.i = getelementptr inbounds %struct.format_flag_pair* %67, i64 0, i32 0
  %wanted_type1093.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 0
  %wanted_type_name1094.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 1
  %pointer_count1097.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 2
  %char_lenient_flag1098.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 3
  %writing_in_flag1106.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 4
  %reading_from_flag1107.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 5
  %name1127.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 6
  %param1128.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 7
  %arg_num1130.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 8
  %next1131.i = getelementptr inbounds %struct.format_wanted_type* %main_wanted_type.i, i64 0, i32 9
  %flag_char44.i1513.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 0, i32 0
  %length_code_char620.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 12
  %precision_type.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 14
  %tobool340.i = icmp eq i32 %65, 0
  %wanted_type316.i = getelementptr inbounds %struct.format_wanted_type* %precision_wanted_type.i, i64 0, i32 0
  %wanted_type_name317.i = getelementptr inbounds %struct.format_wanted_type* %precision_wanted_type.i, i64 0, i32 1
  %name322.i = getelementptr inbounds %struct.format_wanted_type* %precision_wanted_type.i, i64 0, i32 6
  %param323.i = getelementptr inbounds %struct.format_wanted_type* %precision_wanted_type.i, i64 0, i32 7
  %arg_num325.i = getelementptr inbounds %struct.format_wanted_type* %precision_wanted_type.i, i64 0, i32 8
  %next326.i = getelementptr inbounds %struct.format_wanted_type* %precision_wanted_type.i, i64 0, i32 9
  %wanted_type153.i = getelementptr inbounds %struct.format_wanted_type* %width_wanted_type.i, i64 0, i32 0
  %wanted_type_name154.i = getelementptr inbounds %struct.format_wanted_type* %width_wanted_type.i, i64 0, i32 1
  %name155.i = getelementptr inbounds %struct.format_wanted_type* %width_wanted_type.i, i64 0, i32 6
  %param.i = getelementptr inbounds %struct.format_wanted_type* %width_wanted_type.i, i64 0, i32 7
  %arg_num157.i = getelementptr inbounds %struct.format_wanted_type* %width_wanted_type.i, i64 0, i32 8
  %next.i = getelementptr inbounds %struct.format_wanted_type* %width_wanted_type.i, i64 0, i32 9
  %flag_chars63.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 3
  %modifier_chars1584.ph.i = getelementptr inbounds [4 x %struct.format_kind_info]* @format_types, i64 0, i64 %idxprom.i, i32 4
  %88 = bitcast i8** %wanted_type_name317.i to i8*
  %89 = bitcast i8** %wanted_type_name154.i to i8*
  br label %while.body.i

while.body.i:                                     ; preds = %cleanup.i, %while.body.preheader.i
  %has_operand_number.0.i = phi i32 [ %has_operand_number.8.i, %cleanup.i ], [ -1, %while.body.preheader.i ]
  %arg_num.addr.0.i = phi i64 [ %arg_num.addr.9.i, %cleanup.i ], [ %arg_num.addr.1.lcssa, %while.body.preheader.i ]
  store %union.tree_node* null, %union.tree_node** %main_arg_params.i, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 64, i8* %82) #3
  call void @llvm.lifetime.start(i64 64, i8* %83) #3
  call void @llvm.lifetime.start(i64 64, i8* %84) #3
  call void @llvm.lifetime.start(i64 256, i8* %85) #3
  %90 = load i8** %format_chars.addr.i, align 8, !tbaa !5
  %91 = load i8* %90, align 1, !tbaa !38
  %cmp.i = icmp eq i8 %91, 0
  br i1 %cmp.i, label %if.then.i, label %if.end23.i

if.then.i:                                        ; preds = %while.body.i
  %sub.ptr.lhs.cast.i = ptrtoint i8* %90 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %cmp6.i = icmp eq i64 %sub.ptr.sub.i, %idxprom
  br i1 %cmp6.i, label %if.end.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.then.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([24 x i8]* @.str18, i64 0, i64 0)) #3
  br label %if.end.i

if.end.i:                                         ; preds = %if.then8.i, %if.then.i
  %92 = load i64* %first_arg_num380, align 8, !tbaa !19
  %cmp10.i = icmp ne i64 %92, 0
  %93 = load %union.tree_node** %params.addr.i, align 8
  %cmp12.i = icmp ne %union.tree_node* %93, null
  %or.cond.i = and i1 %cmp10.i, %cmp12.i
  %cmp15.i = icmp slt i32 %has_operand_number.0.i, 1
  %or.cond1149.i = and i1 %or.cond.i, %cmp15.i
  br i1 %or.cond1149.i, label %if.then17.i, label %if.end18.i

if.then17.i:                                      ; preds = %if.end.i
  %94 = load i32* %number_other392, align 4, !tbaa !31
  %dec.i = add nsw i32 %94, -1
  store i32 %dec.i, i32* %number_other392, align 4, !tbaa !31
  %95 = load i32* %number_extra_args.i, align 4, !tbaa !30
  %inc.i = add nsw i32 %95, 1
  store i32 %inc.i, i32* %number_extra_args.i, align 4, !tbaa !30
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then17.i, %if.end.i
  %cmp19.i = icmp sgt i32 %has_operand_number.0.i, 0
  br i1 %cmp19.i, label %if.then21.i, label %cleanup.i

if.then21.i:                                      ; preds = %if.end18.i
  %96 = load i32* @dollar_max_arg_used, align 4, !tbaa !1
  %cmp23.i1439.i = icmp sgt i32 %96, 0
  br i1 %cmp23.i1439.i, label %for.body.lr.ph.i.i, label %lor.lhs.false10.i.i

for.body.lr.ph.i.i:                               ; preds = %if.then21.i
  br i1 %tobool1.i.i, label %for.body.i.i, label %for.body.us.i.i

for.body.us.i.i:                                  ; preds = %for.body.lr.ph.i.i, %for.inc.us.i.i
  %97 = phi i32 [ %102, %for.inc.us.i.i ], [ %96, %for.body.lr.ph.i.i ]
  %indvars.iv31.i.i = phi i64 [ %100, %for.inc.us.i.i ], [ 0, %for.body.lr.ph.i.i ]
  %98 = load i8** @dollar_arguments_used, align 8, !tbaa !5
  %arrayidx.us.i.i = getelementptr inbounds i8* %98, i64 %indvars.iv31.i.i
  %99 = load i8* %arrayidx.us.i.i, align 1, !tbaa !38
  %tobool.us.i.i = icmp eq i8 %99, 0
  %100 = add nsw i64 %indvars.iv31.i.i, 1
  %101 = trunc i64 %100 to i32
  br i1 %tobool.us.i.i, label %if.else.us.i.i, label %for.inc.us.i.i

if.else.us.i.i:                                   ; preds = %for.body.us.i.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([68 x i8]* @.str64, i64 0, i64 0), i32 %101, i32 %97) #3
  %.pre.i.i = load i32* @dollar_max_arg_used, align 4, !tbaa !1
  br label %for.inc.us.i.i

for.inc.us.i.i:                                   ; preds = %if.else.us.i.i, %for.body.us.i.i
  %102 = phi i32 [ %.pre.i.i, %if.else.us.i.i ], [ %97, %for.body.us.i.i ]
  %cmp.us.i.i = icmp slt i32 %101, %102
  br i1 %cmp.us.i.i, label %for.body.us.i.i, label %lor.lhs.false10.i.i

for.body.i.i:                                     ; preds = %for.body.lr.ph.i.i, %for.inc.i.i
  %103 = phi i32 [ %111, %for.inc.i.i ], [ %96, %for.body.lr.ph.i.i ]
  %indvars.iv.i1440.i = phi i64 [ %indvars.iv.next.i1443.i, %for.inc.i.i ], [ 0, %for.body.lr.ph.i.i ]
  %found_pointer_gap.026.i.i = phi i8 [ %found_pointer_gap.1.i.i, %for.inc.i.i ], [ 0, %for.body.lr.ph.i.i ]
  %104 = load i8** @dollar_arguments_used, align 8, !tbaa !5
  %arrayidx.i1441.i = getelementptr inbounds i8* %104, i64 %indvars.iv.i1440.i
  %105 = load i8* %arrayidx.i1441.i, align 1, !tbaa !38
  %tobool.i1442.i = icmp eq i8 %105, 0
  br i1 %tobool.i1442.i, label %land.lhs.true.i.i, label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %106 = load i32* @dollar_first_arg_num, align 4, !tbaa !1
  %cmp2.i.i = icmp eq i32 %106, 0
  br i1 %cmp2.i.i, label %for.inc.i.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %107 = load i8** @dollar_arguments_pointer_p, align 8, !tbaa !5
  %arrayidx4.i.i = getelementptr inbounds i8* %107, i64 %indvars.iv.i1440.i
  %108 = load i8* %arrayidx4.i.i, align 1, !tbaa !38
  %tobool5.i.i = icmp eq i8 %108, 0
  br i1 %tobool5.i.i, label %if.else.i.i, label %for.inc.i.i

if.else.i.i:                                      ; preds = %lor.lhs.false.i.i
  %109 = add nsw i64 %indvars.iv.i1440.i, 1
  %110 = trunc i64 %109 to i32
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([68 x i8]* @.str64, i64 0, i64 0), i32 %110, i32 %103) #3
  %.pre34.i.i = load i32* @dollar_max_arg_used, align 4, !tbaa !1
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.else.i.i, %lor.lhs.false.i.i, %land.lhs.true.i.i, %for.body.i.i
  %111 = phi i32 [ %103, %for.body.i.i ], [ %.pre34.i.i, %if.else.i.i ], [ %103, %lor.lhs.false.i.i ], [ %103, %land.lhs.true.i.i ]
  %found_pointer_gap.1.i.i = phi i8 [ %found_pointer_gap.026.i.i, %for.body.i.i ], [ %found_pointer_gap.026.i.i, %if.else.i.i ], [ 1, %lor.lhs.false.i.i ], [ 1, %land.lhs.true.i.i ]
  %indvars.iv.next.i1443.i = add nuw nsw i64 %indvars.iv.i1440.i, 1
  %112 = trunc i64 %indvars.iv.next.i1443.i to i32
  %cmp.i1444.i = icmp slt i32 %112, %111
  br i1 %cmp.i1444.i, label %for.body.i.i, label %for.end.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %113 = and i8 %found_pointer_gap.1.i.i, 1
  %tobool8.i.i = icmp eq i8 %113, 0
  br i1 %tobool8.i.i, label %lor.lhs.false10.i.i, label %if.then15.i.i

lor.lhs.false10.i.i:                              ; preds = %for.inc.us.i.i, %for.end.i.i, %if.then21.i
  %.lcssa36.i.i = phi i32 [ %111, %for.end.i.i ], [ %96, %if.then21.i ], [ %102, %for.inc.us.i.i ]
  %114 = load i32* @dollar_first_arg_num, align 4, !tbaa !1
  %tobool11.i.i = icmp ne i32 %114, 0
  %115 = load i32* @dollar_arguments_count, align 4
  %cmp13.i.i = icmp slt i32 %.lcssa36.i.i, %115
  %or.cond.i1445.i = and i1 %tobool11.i.i, %cmp13.i.i
  br i1 %or.cond.i1445.i, label %if.then15.i.i, label %cleanup.i

if.then15.i.i:                                    ; preds = %lor.lhs.false10.i.i, %for.end.i.i
  %116 = load i32* %number_other392, align 4, !tbaa !31
  %dec.i.i = add nsw i32 %116, -1
  store i32 %dec.i.i, i32* %number_other392, align 4, !tbaa !31
  %117 = load i32* %number_dollar_extra_args.i.i, align 4, !tbaa !32
  %inc16.i.i = add nsw i32 %117, 1
  store i32 %inc16.i.i, i32* %number_dollar_extra_args.i.i, align 4, !tbaa !32
  br label %cleanup.i

if.end23.i:                                       ; preds = %while.body.i
  %incdec.ptr.i = getelementptr inbounds i8* %90, i64 1
  store i8* %incdec.ptr.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %118 = load i8* %90, align 1, !tbaa !38
  %cmp25.i = icmp eq i8 %118, 37
  br i1 %cmp25.i, label %if.end28.i, label %cleanup.i

if.end28.i:                                       ; preds = %if.end23.i
  %119 = load i8* %incdec.ptr.i, align 1, !tbaa !38
  switch i8 %119, label %if.end39.i [
    i8 0, label %if.then32.i
    i8 37, label %if.then37.i
  ]

if.then32.i:                                      ; preds = %if.end28.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([33 x i8]* @.str19, i64 0, i64 0)) #3
  br label %cleanup.i

if.then37.i:                                      ; preds = %if.end28.i
  %incdec.ptr38.i = getelementptr inbounds i8* %90, i64 2
  store i8* %incdec.ptr38.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  br label %cleanup.i

if.end39.i:                                       ; preds = %if.end28.i
  store i8 0, i8* %85, align 16, !tbaa !38
  %cmp44.i = icmp ne i32 %has_operand_number.0.i, 0
  %or.cond1150.i = and i1 %87, %cmp44.i
  br i1 %or.cond1150.i, label %if.then46.i, label %while.cond59.preheader.i

if.then46.i:                                      ; preds = %if.end39.i
  %call.i = call fastcc i32 @maybe_read_dollar_number(i32* %status, i8** %format_chars.addr.i, i32 0, %union.tree_node* %params.addr.1.lcssa, %union.tree_node** %main_arg_params.i, %struct.format_kind_info* %arrayidx.i) #3
  %cmp47.i = icmp eq i32 %call.i, -1
  br i1 %cmp47.i, label %cleanup.i, label %if.else.i

if.else.i:                                        ; preds = %if.then46.i
  %cmp50.i = icmp sgt i32 %call.i, 0
  br i1 %cmp50.i, label %if.then52.i, label %while.cond59.preheader.i

if.then52.i:                                      ; preds = %if.else.i
  %conv531432.i = zext i32 %call.i to i64
  %120 = load i64* %first_arg_num380, align 8, !tbaa !19
  %add.i = add i64 %conv531432.i, 4294967295
  %sub.i = add i64 %add.i, %120
  %conv55.i = trunc i64 %sub.i to i32
  br label %while.cond59.preheader.i

while.cond59.preheader.i:                         ; preds = %if.then52.i, %if.else.i, %if.end39.i
  %main_arg_num.0.ph.i = phi i32 [ 0, %if.end39.i ], [ 0, %if.else.i ], [ %conv55.i, %if.then52.i ]
  %has_operand_number.1.ph.i = phi i32 [ %has_operand_number.0.i, %if.end39.i ], [ %has_operand_number.0.i, %if.else.i ], [ 1, %if.then52.i ]
  %121 = load i8** %format_chars.addr.i, align 8, !tbaa !5
  %122 = load i8* %121, align 1, !tbaa !38
  %cmp611633.i = icmp eq i8 %122, 0
  br i1 %cmp611633.i, label %while.cond169.preheader.i, label %land.rhs.lr.ph.i

land.rhs.lr.ph.i:                                 ; preds = %while.cond59.preheader.i
  %123 = load i8** %flag_chars63.i, align 8, !tbaa !45
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end94.i, %land.rhs.lr.ph.i
  %124 = phi i8* [ %121, %land.rhs.lr.ph.i ], [ %incdec.ptr95.i, %if.end94.i ]
  %125 = phi i8 [ %122, %land.rhs.lr.ph.i ], [ %134, %if.end94.i ]
  %conv60.i = sext i8 %125 to i32
  %call65.i = call i8* @strchr(i8* %123, i32 %conv60.i) #3
  %cmp66.i = icmp eq i8* %call65.i, null
  br i1 %cmp66.i, label %while.end.i, label %while.body68.i

while.body68.i:                                   ; preds = %land.rhs.i
  %126 = load i32* %flag_char44.i1513.i, align 4, !tbaa !46
  %cmp45.i.i = icmp eq i32 %126, 0
  br i1 %cmp45.i.i, label %for.end.i1452.i, label %for.body.us.i1447.i

for.body.us.i1447.i:                              ; preds = %while.body68.i, %for.inc.us.i1451.i
  %indvars.iv51.i.i = phi i64 [ %indvars.iv.next52.i.i, %for.inc.us.i1451.i ], [ 0, %while.body68.i ]
  %127 = phi i32 [ %129, %for.inc.us.i1451.i ], [ %126, %while.body68.i ]
  %arrayidx48.us.i.i = phi %struct.format_flag_spec* [ %arrayidx.us.i1449.i, %for.inc.us.i1451.i ], [ %66, %while.body68.i ]
  %cmp4.us.i.i = icmp eq i32 %127, %conv60.i
  br i1 %cmp4.us.i.i, label %if.else.us.i1448.i, label %for.inc.us.i1451.i

if.else.us.i1448.i:                               ; preds = %for.body.us.i1447.i
  %predicate.us.i.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv51.i.i, i32 1
  %128 = load i32* %predicate.us.i.i, align 4, !tbaa !48
  %cmp21.us.i.i = icmp eq i32 %128, 0
  br i1 %cmp21.us.i.i, label %get_flag_spec.exit.i, label %for.inc.us.i1451.i

for.inc.us.i1451.i:                               ; preds = %if.else.us.i1448.i, %for.body.us.i1447.i
  %indvars.iv.next52.i.i = add nuw nsw i64 %indvars.iv51.i.i, 1
  %arrayidx.us.i1449.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv.next52.i.i
  %flag_char.us.i.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx.us.i1449.i, i64 0, i32 0
  %129 = load i32* %flag_char.us.i.i, align 4, !tbaa !46
  %cmp.us.i1450.i = icmp eq i32 %129, 0
  br i1 %cmp.us.i1450.i, label %for.end.i1452.i, label %for.body.us.i1447.i

for.end.i1452.i:                                  ; preds = %while.body68.i, %for.inc.us.i1451.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 1276, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.get_flag_spec, i64 0, i64 0)) #7
  unreachable

get_flag_spec.exit.i:                             ; preds = %if.else.us.i1448.i
  %call72.i = call i8* @strchr(i8* %85, i32 %conv60.i) #3
  %cmp73.i = icmp eq i8* %call72.i, null
  br i1 %cmp73.i, label %if.else76.i, label %if.then75.i

if.then75.i:                                      ; preds = %get_flag_spec.exit.i
  %name.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx48.us.i.i, i64 0, i32 3
  %130 = load i8** %name.i, align 8, !tbaa !49
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([22 x i8]* @.str20, i64 0, i64 0), i8* %130) #3
  %.pre1703.i.pre = load i8** %format_chars.addr.i, align 8, !tbaa !5
  br label %if.end85.i

if.else76.i:                                      ; preds = %get_flag_spec.exit.i
  %call78.i = call i64 @strlen(i8* %85) #3
  %sext1430.i = shl i64 %call78.i, 32
  %idxprom81.i = ashr exact i64 %sext1430.i, 32
  %arrayidx82.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom81.i
  store i8 %125, i8* %arrayidx82.i, align 1, !tbaa !38
  %sext1431.i = add i64 %sext1430.i, 4294967296
  %idxprom83.i = ashr exact i64 %sext1431.i, 32
  %arrayidx84.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom83.i
  store i8 0, i8* %arrayidx84.i, align 1, !tbaa !38
  br label %if.end85.i

if.end85.i:                                       ; preds = %if.else76.i, %if.then75.i
  %.pre1703.i = phi i8* [ %124, %if.else76.i ], [ %.pre1703.i.pre, %if.then75.i ]
  %skip_next_char.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx48.us.i.i, i64 0, i32 2
  %131 = load i32* %skip_next_char.i, align 4, !tbaa !50
  %tobool86.i = icmp eq i32 %131, 0
  br i1 %tobool86.i, label %if.end94.i, label %if.then87.i

if.then87.i:                                      ; preds = %if.end85.i
  %incdec.ptr88.i = getelementptr inbounds i8* %.pre1703.i, i64 1
  store i8* %incdec.ptr88.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %132 = load i8* %incdec.ptr88.i, align 1, !tbaa !38
  %cmp90.i = icmp eq i8 %132, 0
  br i1 %cmp90.i, label %if.then92.i, label %if.end94.i

if.then92.i:                                      ; preds = %if.then87.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([48 x i8]* @.str21, i64 0, i64 0)) #3
  br label %cleanup.i

if.end94.i:                                       ; preds = %if.then87.i, %if.end85.i
  %133 = phi i8* [ %incdec.ptr88.i, %if.then87.i ], [ %.pre1703.i, %if.end85.i ]
  %incdec.ptr95.i = getelementptr inbounds i8* %133, i64 1
  store i8* %incdec.ptr95.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %134 = load i8* %incdec.ptr95.i, align 1, !tbaa !38
  %cmp61.i = icmp eq i8 %134, 0
  br i1 %cmp61.i, label %while.cond169.preheader.i, label %land.rhs.i

while.end.i:                                      ; preds = %land.rhs.i
  %135 = load %union.tree_node*** %width_type.i, align 16, !tbaa !51
  %cmp99.i = icmp ne %union.tree_node** %135, null
  %cmp103.i = icmp eq i8 %125, 42
  %or.cond1709.i = and i1 %cmp99.i, %cmp103.i
  br i1 %or.cond1709.i, label %if.then105.i, label %while.cond169.preheader.i

while.cond169.preheader.i:                        ; preds = %if.end94.i, %while.cond59.preheader.i, %while.end.i
  %136 = phi i8* [ %124, %while.end.i ], [ %121, %while.cond59.preheader.i ], [ %incdec.ptr95.i, %if.end94.i ]
  %137 = phi i8 [ %125, %while.end.i ], [ 0, %while.cond59.preheader.i ], [ 0, %if.end94.i ]
  %idxprom17214251634.i = zext i8 %137 to i64
  %arrayidx1731635.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom17214251634.i
  %138 = load i16* %arrayidx1731635.i, align 2, !tbaa !52
  %and1751636.i = and i16 %138, 4
  %tobool1761637.i = icmp eq i16 %and1751636.i, 0
  br i1 %tobool1761637.i, label %if.end209.i, label %while.body177.i

if.then105.i:                                     ; preds = %while.end.i
  %call107.i = call i64 @strlen(i8* %85) #3
  %139 = load i32* %width_char.i, align 4, !tbaa !54
  %conv110.i = trunc i32 %139 to i8
  %sext1428.i = shl i64 %call107.i, 32
  %idxprom112.i = ashr exact i64 %sext1428.i, 32
  %arrayidx113.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom112.i
  store i8 %conv110.i, i8* %arrayidx113.i, align 1, !tbaa !38
  %sext1429.i = add i64 %sext1428.i, 4294967296
  %idxprom114.i = ashr exact i64 %sext1429.i, 32
  %arrayidx115.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom114.i
  store i8 0, i8* %arrayidx115.i, align 1, !tbaa !38
  %incdec.ptr116.i = getelementptr inbounds i8* %124, i64 1
  store i8* %incdec.ptr116.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %140 = load %union.tree_node** %params.addr.i, align 8, !tbaa !5
  %cmp117.i = icmp eq %union.tree_node* %140, null
  br i1 %cmp117.i, label %if.then119.i, label %if.end120.i

if.then119.i:                                     ; preds = %if.then105.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([29 x i8]* @.str22, i64 0, i64 0)) #3
  br label %cleanup.i

if.end120.i:                                      ; preds = %if.then105.i
  %cmp121.i = icmp eq i32 %has_operand_number.1.ph.i, 0
  br i1 %cmp121.i, label %if.end142thread-pre-split.i, label %if.then123.i

if.then123.i:                                     ; preds = %if.end120.i
  %cmp125.i = icmp eq i32 %has_operand_number.1.ph.i, 1
  %conv126.i = zext i1 %cmp125.i to i32
  %call127.i = call fastcc i32 @maybe_read_dollar_number(i32* %status, i8** %format_chars.addr.i, i32 %conv126.i, %union.tree_node* %params.addr.1.lcssa, %union.tree_node** %params.addr.i, %struct.format_kind_info* %arrayidx.i) #3
  %cmp128.i = icmp eq i32 %call127.i, -1
  br i1 %cmp128.i, label %cleanup.i, label %if.else131.i

if.else131.i:                                     ; preds = %if.then123.i
  %cmp132.i = icmp sgt i32 %call127.i, 0
  br i1 %cmp132.i, label %if.then134.i, label %if.end142thread-pre-split.i

if.then134.i:                                     ; preds = %if.else131.i
  %conv135.i = sext i32 %call127.i to i64
  %141 = load i64* %first_arg_num380, align 8, !tbaa !19
  %add137.i = add i64 %conv135.i, -1
  %sub138.i = add i64 %add137.i, %141
  br label %if.end142.i

if.end142thread-pre-split.i:                      ; preds = %if.else131.i, %if.end120.i
  %.pr.i = load i64* %first_arg_num380, align 8, !tbaa !19
  br label %if.end142.i

if.end142.i:                                      ; preds = %if.end142thread-pre-split.i, %if.then134.i
  %142 = phi i64 [ %.pr.i, %if.end142thread-pre-split.i ], [ %141, %if.then134.i ]
  %has_operand_number.2.i = phi i32 [ 0, %if.end142thread-pre-split.i ], [ 1, %if.then134.i ]
  %arg_num.addr.1.i = phi i64 [ %arg_num.addr.0.i, %if.end142thread-pre-split.i ], [ %sub138.i, %if.then134.i ]
  %cmp144.i = icmp eq i64 %142, 0
  br i1 %cmp144.i, label %if.end209.i, label %if.then146.i

if.then146.i:                                     ; preds = %if.end142.i
  %143 = load %union.tree_node** %params.addr.i, align 8, !tbaa !5
  %value.i = getelementptr inbounds %union.tree_node* %143, i64 0, i32 0, i32 2
  %144 = bitcast i32* %value.i to %union.tree_node**
  %145 = load %union.tree_node** %144, align 8, !tbaa !14
  %cmp147.i = icmp eq i32 %has_operand_number.2.i, 1
  br i1 %cmp147.i, label %if.end151.i, label %if.then149.i

if.then149.i:                                     ; preds = %if.then146.i
  %chain.i = getelementptr inbounds %union.tree_node* %143, i64 0, i32 0, i32 0, i32 0
  %146 = load %union.tree_node** %chain.i, align 8, !tbaa !12
  store %union.tree_node* %146, %union.tree_node** %params.addr.i, align 8, !tbaa !5
  %inc150.i = add i64 %arg_num.addr.1.i, 1
  br label %if.end151.i

if.end151.i:                                      ; preds = %if.then149.i, %if.then146.i
  %arg_num.addr.2.i = phi i64 [ %inc150.i, %if.then149.i ], [ %arg_num.addr.1.i, %if.then146.i ]
  %147 = load %union.tree_node** %135, align 8, !tbaa !5
  store %union.tree_node* %147, %union.tree_node** %wanted_type153.i, align 8, !tbaa !55
  call void @llvm.memset.p0i8.i64(i8* %89, i8 0, i64 24, i32 8, i1 false) #3
  store i8* getelementptr inbounds ([12 x i8]* @.str23, i64 0, i64 0), i8** %name155.i, align 8, !tbaa !57
  store %union.tree_node* %145, %union.tree_node** %param.i, align 8, !tbaa !58
  %conv156.i = trunc i64 %arg_num.addr.2.i to i32
  store i32 %conv156.i, i32* %arg_num157.i, align 8, !tbaa !59
  store %struct.format_wanted_type* null, %struct.format_wanted_type** %next.i, align 8, !tbaa !60
  br label %if.end209.i

while.body177.i:                                  ; preds = %while.cond169.preheader.i, %while.body177.i
  %148 = phi i8 [ %150, %while.body177.i ], [ %137, %while.cond169.preheader.i ]
  %149 = phi i8* [ %incdec.ptr183.i, %while.body177.i ], [ %136, %while.cond169.preheader.i ]
  %non_zero_width_char.01638.i = phi i32 [ %non_zero_width_char.0..i, %while.body177.i ], [ 0, %while.cond169.preheader.i ]
  %cmp179.i = icmp eq i8 %148, 48
  %non_zero_width_char.0..i = select i1 %cmp179.i, i32 %non_zero_width_char.01638.i, i32 1
  %incdec.ptr183.i = getelementptr inbounds i8* %149, i64 1
  store i8* %incdec.ptr183.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %150 = load i8* %incdec.ptr183.i, align 1, !tbaa !38
  %idxprom1721425.i = zext i8 %150 to i64
  %arrayidx173.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom1721425.i
  %151 = load i16* %arrayidx173.i, align 2, !tbaa !52
  %and175.i = and i16 %151, 4
  %tobool176.i = icmp eq i16 %and175.i, 0
  br i1 %tobool176.i, label %while.end184.i, label %while.body177.i

while.end184.i:                                   ; preds = %while.body177.i
  %or.cond1151.not.i = icmp eq i32 %non_zero_width_char.0..i, 0
  %or.cond1434.i = and i1 %tobool1.i.i, %or.cond1151.not.i
  br i1 %or.cond1434.i, label %if.then192.i, label %if.then196.i

if.then192.i:                                     ; preds = %while.end184.i
  %152 = load i8** %name236.i, align 16, !tbaa !36
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([24 x i8]* @.str24, i64 0, i64 0), i8* %152) #3
  br label %if.then196.i

if.then196.i:                                     ; preds = %if.then192.i, %while.end184.i
  %call198.i = call i64 @strlen(i8* %85) #3
  %153 = load i32* %width_char.i, align 4, !tbaa !54
  %conv201.i = trunc i32 %153 to i8
  %sext1426.i = shl i64 %call198.i, 32
  %idxprom203.i = ashr exact i64 %sext1426.i, 32
  %arrayidx204.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom203.i
  store i8 %conv201.i, i8* %arrayidx204.i, align 1, !tbaa !38
  %sext1427.i = add i64 %sext1426.i, 4294967296
  %idxprom205.i = ashr exact i64 %sext1427.i, 32
  %arrayidx206.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom205.i
  store i8 0, i8* %arrayidx206.i, align 1, !tbaa !38
  br label %if.end209.i

if.end209.i:                                      ; preds = %if.then196.i, %if.end151.i, %if.end142.i, %while.cond169.preheader.i
  %first_wanted_type.1.i = phi %struct.format_wanted_type* [ %width_wanted_type.i, %if.end151.i ], [ null, %if.end142.i ], [ null, %if.then196.i ], [ null, %while.cond169.preheader.i ]
  %has_operand_number.3.i = phi i32 [ %has_operand_number.2.i, %if.end151.i ], [ %has_operand_number.2.i, %if.end142.i ], [ %has_operand_number.1.ph.i, %if.then196.i ], [ %has_operand_number.1.ph.i, %while.cond169.preheader.i ]
  %arg_num.addr.3.i = phi i64 [ %arg_num.addr.2.i, %if.end151.i ], [ %arg_num.addr.1.i, %if.end142.i ], [ %arg_num.addr.0.i, %if.then196.i ], [ %arg_num.addr.0.i, %while.cond169.preheader.i ]
  switch i32 %65, label %if.end364.i [
    i32 3, label %land.lhs.true212.i
    i32 0, label %if.end249.land.lhs.true252_crit_edge1699.i
  ]

land.lhs.true212.i:                               ; preds = %if.end209.i
  %154 = load i8** %format_chars.addr.i, align 8, !tbaa !5
  %155 = load i8* %154, align 1, !tbaa !38
  %cmp214.i = icmp eq i8 %155, 35
  br i1 %cmp214.i, label %if.then216.i, label %land.lhs.true252.i

if.then216.i:                                     ; preds = %land.lhs.true212.i
  %incdec.ptr217.i = getelementptr inbounds i8* %154, i64 1
  store i8* %incdec.ptr217.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %call219.i = call i64 @strlen(i8* %85) #3
  %156 = load i32* %left_precision_char.i, align 16, !tbaa !61
  %conv222.i = trunc i32 %156 to i8
  %sext1421.i = shl i64 %call219.i, 32
  %idxprom224.i = ashr exact i64 %sext1421.i, 32
  %arrayidx225.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom224.i
  store i8 %conv222.i, i8* %arrayidx225.i, align 1, !tbaa !38
  %sext1422.i = add i64 %sext1421.i, 4294967296
  %idxprom226.i = ashr exact i64 %sext1422.i, 32
  %arrayidx227.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom226.i
  store i8 0, i8* %arrayidx227.i, align 1, !tbaa !38
  %157 = load i8* %incdec.ptr217.i, align 1, !tbaa !38
  %idxprom230.i = zext i8 %157 to i64
  %arrayidx231.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom230.i
  %158 = load i16* %arrayidx231.i, align 2, !tbaa !52
  %and233.i = and i16 %158, 4
  %tobool234.i = icmp eq i16 %and233.i, 0
  br i1 %tobool234.i, label %if.then235.i, label %while.cond238.preheader.i

if.then235.i:                                     ; preds = %if.then216.i
  %159 = load i8** %name236.i, align 16, !tbaa !36
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([34 x i8]* @.str25, i64 0, i64 0), i8* %159) #3
  %.pre.i = load i8** %format_chars.addr.i, align 8, !tbaa !5
  %.pre1690.i = load i8* %.pre.i, align 1, !tbaa !38
  %idxprom2411640.phi.trans.insert.i = zext i8 %.pre1690.i to i64
  %arrayidx2421641.phi.trans.insert.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom2411640.phi.trans.insert.i
  %.pre1691.i = load i16* %arrayidx2421641.phi.trans.insert.i, align 2, !tbaa !52
  br label %while.cond238.preheader.i

while.cond238.preheader.i:                        ; preds = %if.then235.i, %if.then216.i
  %160 = phi i8 [ %.pre1690.i, %if.then235.i ], [ %157, %if.then216.i ]
  %161 = phi i16 [ %.pre1691.i, %if.then235.i ], [ %158, %if.then216.i ]
  %162 = phi i8* [ %.pre.i, %if.then235.i ], [ %incdec.ptr217.i, %if.then216.i ]
  %and2441642.i = and i16 %161, 4
  %tobool2451643.i = icmp eq i16 %and2441642.i, 0
  br i1 %tobool2451643.i, label %land.lhs.true252.i, label %while.body246.i

while.body246.i:                                  ; preds = %while.cond238.preheader.i, %while.body246.i
  %163 = phi i8* [ %incdec.ptr247.i, %while.body246.i ], [ %162, %while.cond238.preheader.i ]
  %incdec.ptr247.i = getelementptr inbounds i8* %163, i64 1
  store i8* %incdec.ptr247.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %164 = load i8* %incdec.ptr247.i, align 1, !tbaa !38
  %idxprom241.i = zext i8 %164 to i64
  %arrayidx242.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom241.i
  %165 = load i16* %arrayidx242.i, align 2, !tbaa !52
  %and244.i = and i16 %165, 4
  %tobool245.i = icmp eq i16 %and244.i, 0
  br i1 %tobool245.i, label %land.lhs.true252.i, label %while.body246.i

if.end249.land.lhs.true252_crit_edge1699.i:       ; preds = %if.end209.i
  %.pre1700.i.pre = load i8** %format_chars.addr.i, align 8, !tbaa !5
  %.pre.pre = load i8* %.pre1700.i.pre, align 1, !tbaa !38
  br label %land.lhs.true252.i

land.lhs.true252.i:                               ; preds = %while.body246.i, %while.cond238.preheader.i, %if.end249.land.lhs.true252_crit_edge1699.i, %land.lhs.true212.i
  %166 = phi i8 [ %.pre.pre, %if.end249.land.lhs.true252_crit_edge1699.i ], [ %155, %land.lhs.true212.i ], [ %160, %while.cond238.preheader.i ], [ %164, %while.body246.i ]
  %167 = phi i8* [ %.pre1700.i.pre, %if.end249.land.lhs.true252_crit_edge1699.i ], [ %154, %land.lhs.true212.i ], [ %162, %while.cond238.preheader.i ], [ %incdec.ptr247.i, %while.body246.i ]
  %cmp254.i = icmp eq i8 %166, 46
  br i1 %cmp254.i, label %if.then256.i, label %if.end364.i

if.then256.i:                                     ; preds = %land.lhs.true252.i
  %incdec.ptr257.i = getelementptr inbounds i8* %167, i64 1
  store i8* %incdec.ptr257.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %call259.i = call i64 @strlen(i8* %85) #3
  %168 = load i32* %precision_char1569.i, align 4, !tbaa !62
  %conv262.i = trunc i32 %168 to i8
  %sext1417.i = shl i64 %call259.i, 32
  %idxprom264.i = ashr exact i64 %sext1417.i, 32
  %arrayidx265.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom264.i
  store i8 %conv262.i, i8* %arrayidx265.i, align 1, !tbaa !38
  %sext1418.i = add i64 %sext1417.i, 4294967296
  %idxprom266.i = ashr exact i64 %sext1418.i, 32
  %arrayidx267.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom266.i
  store i8 0, i8* %arrayidx267.i, align 1, !tbaa !38
  %169 = load %union.tree_node*** %precision_type.i, align 8, !tbaa !63
  %cmp268.i = icmp eq %union.tree_node** %169, null
  br i1 %cmp268.i, label %if.else337.i, label %land.lhs.true270.i

land.lhs.true270.i:                               ; preds = %if.then256.i
  %170 = load i8* %incdec.ptr257.i, align 1, !tbaa !38
  %cmp272.i = icmp eq i8 %170, 42
  br i1 %cmp272.i, label %if.then274.i, label %if.else337.i

if.then274.i:                                     ; preds = %land.lhs.true270.i
  %incdec.ptr275.i = getelementptr inbounds i8* %167, i64 2
  store i8* %incdec.ptr275.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %cmp276.i = icmp eq i32 %has_operand_number.3.i, 0
  br i1 %cmp276.i, label %if.end297thread-pre-split.i, label %if.then278.i

if.then278.i:                                     ; preds = %if.then274.i
  %cmp280.i = icmp eq i32 %has_operand_number.3.i, 1
  %conv281.i = zext i1 %cmp280.i to i32
  %call282.i = call fastcc i32 @maybe_read_dollar_number(i32* %status, i8** %format_chars.addr.i, i32 %conv281.i, %union.tree_node* %params.addr.1.lcssa, %union.tree_node** %params.addr.i, %struct.format_kind_info* %arrayidx.i) #3
  %cmp283.i = icmp eq i32 %call282.i, -1
  br i1 %cmp283.i, label %cleanup.i, label %if.else286.i

if.else286.i:                                     ; preds = %if.then278.i
  %cmp287.i = icmp sgt i32 %call282.i, 0
  br i1 %cmp287.i, label %if.then289.i, label %if.end297thread-pre-split.i

if.then289.i:                                     ; preds = %if.else286.i
  %conv290.i = sext i32 %call282.i to i64
  %171 = load i64* %first_arg_num380, align 8, !tbaa !19
  %add292.i = add i64 %conv290.i, -1
  %sub293.i = add i64 %add292.i, %171
  br label %if.end297.i

if.end297thread-pre-split.i:                      ; preds = %if.else286.i, %if.then274.i
  %.pr1571.i = load i64* %first_arg_num380, align 8, !tbaa !19
  br label %if.end297.i

if.end297.i:                                      ; preds = %if.end297thread-pre-split.i, %if.then289.i
  %172 = phi i64 [ %.pr1571.i, %if.end297thread-pre-split.i ], [ %171, %if.then289.i ]
  %has_operand_number.4.i = phi i32 [ 0, %if.end297thread-pre-split.i ], [ 1, %if.then289.i ]
  %arg_num.addr.4.i = phi i64 [ %arg_num.addr.3.i, %if.end297thread-pre-split.i ], [ %sub293.i, %if.then289.i ]
  %cmp299.i = icmp eq i64 %172, 0
  br i1 %cmp299.i, label %if.end364.i, label %if.then301.i

if.then301.i:                                     ; preds = %if.end297.i
  %173 = load %union.tree_node** %params.addr.i, align 8, !tbaa !5
  %cmp302.i = icmp eq %union.tree_node* %173, null
  br i1 %cmp302.i, label %if.then304.i, label %if.end305.i

if.then304.i:                                     ; preds = %if.then301.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([29 x i8]* @.str22, i64 0, i64 0)) #3
  br label %cleanup.i

if.end305.i:                                      ; preds = %if.then301.i
  %value307.i = getelementptr inbounds %union.tree_node* %173, i64 0, i32 0, i32 2
  %174 = bitcast i32* %value307.i to %union.tree_node**
  %175 = load %union.tree_node** %174, align 8, !tbaa !14
  %cmp308.i = icmp eq i32 %has_operand_number.4.i, 1
  br i1 %cmp308.i, label %if.end314.i, label %if.then310.i

if.then310.i:                                     ; preds = %if.end305.i
  %chain312.i = getelementptr inbounds %union.tree_node* %173, i64 0, i32 0, i32 0, i32 0
  %176 = load %union.tree_node** %chain312.i, align 8, !tbaa !12
  store %union.tree_node* %176, %union.tree_node** %params.addr.i, align 8, !tbaa !5
  %inc313.i = add i64 %arg_num.addr.4.i, 1
  br label %if.end314.i

if.end314.i:                                      ; preds = %if.then310.i, %if.end305.i
  %arg_num.addr.5.i = phi i64 [ %inc313.i, %if.then310.i ], [ %arg_num.addr.4.i, %if.end305.i ]
  %177 = load %union.tree_node** %169, align 8, !tbaa !5
  store %union.tree_node* %177, %union.tree_node** %wanted_type316.i, align 8, !tbaa !55
  call void @llvm.memset.p0i8.i64(i8* %88, i8 0, i64 24, i32 8, i1 false) #3
  store i8* getelementptr inbounds ([16 x i8]* @.str26, i64 0, i64 0), i8** %name322.i, align 8, !tbaa !57
  store %union.tree_node* %175, %union.tree_node** %param323.i, align 8, !tbaa !58
  %conv324.i = trunc i64 %arg_num.addr.5.i to i32
  store i32 %conv324.i, i32* %arg_num325.i, align 8, !tbaa !59
  store %struct.format_wanted_type* null, %struct.format_wanted_type** %next326.i, align 8, !tbaa !60
  %cond1438.i = icmp eq %struct.format_wanted_type* %first_wanted_type.1.i, null
  br i1 %cond1438.i, label %if.end364.i, label %if.then329.i

if.then329.i:                                     ; preds = %if.end314.i
  %next330.i = getelementptr inbounds %struct.format_wanted_type* %first_wanted_type.1.i, i64 0, i32 9
  store %struct.format_wanted_type* %precision_wanted_type.i, %struct.format_wanted_type** %next330.i, align 8, !tbaa !60
  br label %if.end364.i

if.else337.i:                                     ; preds = %land.lhs.true270.i, %if.then256.i
  br i1 %tobool340.i, label %while.cond352.preheader.i, label %land.lhs.true341.i

land.lhs.true341.i:                               ; preds = %if.else337.i
  %178 = load i8* %incdec.ptr257.i, align 1, !tbaa !38
  %idxprom344.i = zext i8 %178 to i64
  %arrayidx345.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom344.i
  %179 = load i16* %arrayidx345.i, align 2, !tbaa !52
  %and347.i = and i16 %179, 4
  %tobool348.i = icmp eq i16 %and347.i, 0
  br i1 %tobool348.i, label %if.then349.i, label %while.cond352.preheader.i

if.then349.i:                                     ; preds = %land.lhs.true341.i
  %180 = load i8** %name236.i, align 16, !tbaa !36
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([29 x i8]* @.str27, i64 0, i64 0), i8* %180) #3
  %.pre1702.i = load i8** %format_chars.addr.i, align 8, !tbaa !5
  br label %while.cond352.preheader.i

while.cond352.preheader.i:                        ; preds = %if.then349.i, %land.lhs.true341.i, %if.else337.i
  %181 = phi i8* [ %.pre1702.i, %if.then349.i ], [ %incdec.ptr257.i, %if.else337.i ], [ %incdec.ptr257.i, %land.lhs.true341.i ]
  %182 = load i8* %181, align 1, !tbaa !38
  %idxprom3551644.i = zext i8 %182 to i64
  %arrayidx3561645.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom3551644.i
  %183 = load i16* %arrayidx3561645.i, align 2, !tbaa !52
  %and3581646.i = and i16 %183, 4
  %tobool3591647.i = icmp eq i16 %and3581646.i, 0
  br i1 %tobool3591647.i, label %if.end364.i, label %while.body360.i

while.body360.i:                                  ; preds = %while.cond352.preheader.i, %while.body360.i
  %184 = phi i8* [ %incdec.ptr361.i, %while.body360.i ], [ %181, %while.cond352.preheader.i ]
  %incdec.ptr361.i = getelementptr inbounds i8* %184, i64 1
  store i8* %incdec.ptr361.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %185 = load i8* %incdec.ptr361.i, align 1, !tbaa !38
  %idxprom355.i = zext i8 %185 to i64
  %arrayidx356.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom355.i
  %186 = load i16* %arrayidx356.i, align 2, !tbaa !52
  %and358.i = and i16 %186, 4
  %tobool359.i = icmp eq i16 %and358.i, 0
  br i1 %tobool359.i, label %if.end364.i, label %while.body360.i

if.end364.i:                                      ; preds = %while.body360.i, %while.cond352.preheader.i, %if.then329.i, %if.end314.i, %if.end297.i, %land.lhs.true252.i, %if.end209.i
  %first_wanted_type.3.i = phi %struct.format_wanted_type* [ %first_wanted_type.1.i, %if.end297.i ], [ %first_wanted_type.1.i, %land.lhs.true252.i ], [ %first_wanted_type.1.i, %if.then329.i ], [ %precision_wanted_type.i, %if.end314.i ], [ %first_wanted_type.1.i, %while.cond352.preheader.i ], [ %first_wanted_type.1.i, %if.end209.i ], [ %first_wanted_type.1.i, %while.body360.i ]
  %last_wanted_type.1.i = phi %struct.format_wanted_type* [ %first_wanted_type.1.i, %if.end297.i ], [ %first_wanted_type.1.i, %land.lhs.true252.i ], [ %precision_wanted_type.i, %if.then329.i ], [ %precision_wanted_type.i, %if.end314.i ], [ %first_wanted_type.1.i, %while.cond352.preheader.i ], [ %first_wanted_type.1.i, %if.end209.i ], [ %first_wanted_type.1.i, %while.body360.i ]
  %has_operand_number.5.i = phi i32 [ %has_operand_number.4.i, %if.end297.i ], [ %has_operand_number.3.i, %land.lhs.true252.i ], [ %has_operand_number.4.i, %if.then329.i ], [ %has_operand_number.4.i, %if.end314.i ], [ %has_operand_number.3.i, %while.cond352.preheader.i ], [ %has_operand_number.3.i, %if.end209.i ], [ %has_operand_number.3.i, %while.body360.i ]
  %arg_num.addr.6.i = phi i64 [ %arg_num.addr.4.i, %if.end297.i ], [ %arg_num.addr.3.i, %land.lhs.true252.i ], [ %arg_num.addr.5.i, %if.then329.i ], [ %arg_num.addr.5.i, %if.end314.i ], [ %arg_num.addr.3.i, %while.cond352.preheader.i ], [ %arg_num.addr.3.i, %if.end209.i ], [ %arg_num.addr.3.i, %while.body360.i ]
  br i1 %tobool365.i, label %while.cond450.preheader.i, label %while.cond367.preheader.i

while.cond367.preheader.i:                        ; preds = %if.end364.i
  %187 = load %struct.format_length_info** %length_char_specs.i, align 8, !tbaa !64
  %name3681648.i = getelementptr inbounds %struct.format_length_info* %187, i64 0, i32 0
  %188 = load i8** %name3681648.i, align 8, !tbaa !65
  %cmp3691649.i = icmp eq i8* %188, null
  br i1 %cmp3691649.i, label %if.end411.i, label %land.rhs371.lr.ph.i

land.rhs371.lr.ph.i:                              ; preds = %while.cond367.preheader.i
  %189 = load i8** %format_chars.addr.i, align 8, !tbaa !5
  %190 = load i8* %189, align 1, !tbaa !38
  br label %land.rhs371.i

while.cond367.i:                                  ; preds = %land.rhs371.i
  %incdec.ptr380.i = getelementptr inbounds i8** %name3681651.i, i64 4
  %191 = load i8** %incdec.ptr380.i, align 8, !tbaa !65
  %cmp369.i = icmp eq i8* %191, null
  br i1 %cmp369.i, label %if.end411.i, label %land.rhs371.i

land.rhs371.i:                                    ; preds = %while.cond367.i, %land.rhs371.lr.ph.i
  %.pr1572.i = phi i8* [ %188, %land.rhs371.lr.ph.i ], [ %191, %while.cond367.i ]
  %name3681651.i = phi i8** [ %name3681648.i, %land.rhs371.lr.ph.i ], [ %incdec.ptr380.i, %while.cond367.i ]
  %192 = load i8* %.pr1572.i, align 1, !tbaa !38
  %cmp376.i = icmp eq i8 %192, %190
  br i1 %cmp376.i, label %while.end381.i, label %while.cond367.i

while.end381.i:                                   ; preds = %land.rhs371.i
  %indvars.i.le = bitcast i8** %name3681651.i to %struct.format_length_info*
  %cmp383.i = icmp eq i8* %.pr1572.i, null
  br i1 %cmp383.i, label %if.end411.i, label %if.then385.i

if.then385.i:                                     ; preds = %while.end381.i
  %incdec.ptr386.i = getelementptr inbounds i8* %189, i64 1
  store i8* %incdec.ptr386.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %193 = getelementptr inbounds i8** %name3681651.i, i64 2
  %194 = load i8** %193, align 8, !tbaa !67
  %cmp387.i = icmp eq i8* %194, null
  br i1 %cmp387.i, label %if.else399.i, label %land.lhs.true389.i

land.lhs.true389.i:                               ; preds = %if.then385.i
  %195 = load i8** %name3681651.i, align 8, !tbaa !65
  %196 = load i8* %195, align 1, !tbaa !38
  %197 = load i8* %incdec.ptr386.i, align 1, !tbaa !38
  %cmp394.i = icmp eq i8 %196, %197
  br i1 %cmp394.i, label %if.then396.i, label %if.else399.i

if.then396.i:                                     ; preds = %land.lhs.true389.i
  %incdec.ptr397.i = getelementptr inbounds i8* %189, i64 2
  store i8* %incdec.ptr397.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %double_index.i = getelementptr inbounds i8** %name3681651.i, i64 3
  %double_std.i = getelementptr inbounds %struct.format_length_info* %indvars.i.le, i64 0, i32 5
  br label %if.end401.i

if.else399.i:                                     ; preds = %land.lhs.true389.i, %if.then385.i
  %index.i = getelementptr inbounds i8** %name3681651.i, i64 1
  %std.i = getelementptr inbounds %struct.format_length_info* %indvars.i.le, i64 0, i32 2
  br label %if.end401.i

if.end401.i:                                      ; preds = %if.else399.i, %if.then396.i
  %length_chars_std.0.in.i = phi i32* [ %double_std.i, %if.then396.i ], [ %std.i, %if.else399.i ]
  %length_chars_val.0.in.in.i = phi i8** [ %double_index.i, %if.then396.i ], [ %index.i, %if.else399.i ]
  %length_chars.0.in.i = phi i8** [ %193, %if.then396.i ], [ %name3681651.i, %if.else399.i ]
  %length_chars_val.0.in.i = bitcast i8** %length_chars_val.0.in.in.i to i32*
  %length_chars.0.i = load i8** %length_chars.0.in.i, align 8
  %length_chars_val.0.i = load i32* %length_chars_val.0.in.i, align 4
  %length_chars_std.0.i = load i32* %length_chars_std.0.in.i, align 4
  %call403.i = call i64 @strlen(i8* %85) #3
  %198 = load i32* %length_code_char620.i, align 4, !tbaa !68
  %conv405.i = trunc i32 %198 to i8
  %sext1415.i = shl i64 %call403.i, 32
  %idxprom407.i = ashr exact i64 %sext1415.i, 32
  %arrayidx408.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom407.i
  store i8 %conv405.i, i8* %arrayidx408.i, align 1, !tbaa !38
  %sext1416.i = add i64 %sext1415.i, 4294967296
  %idxprom409.i = ashr exact i64 %sext1416.i, 32
  %arrayidx410.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom409.i
  store i8 0, i8* %arrayidx410.i, align 1, !tbaa !38
  br label %if.end411.i

if.end411.i:                                      ; preds = %while.cond367.i, %if.end401.i, %while.end381.i, %while.cond367.preheader.i
  %length_chars_std.1.i = phi i32 [ %length_chars_std.0.i, %if.end401.i ], [ 0, %while.end381.i ], [ 0, %while.cond367.preheader.i ], [ 0, %while.cond367.i ]
  %length_chars_val.1.i = phi i32 [ %length_chars_val.0.i, %if.end401.i ], [ 0, %while.end381.i ], [ 0, %while.cond367.preheader.i ], [ 0, %while.cond367.i ]
  %length_chars.1.i = phi i8* [ %length_chars.0.i, %if.end401.i ], [ null, %while.end381.i ], [ null, %while.cond367.preheader.i ], [ null, %while.cond367.i ]
  %199 = load i32* @pedantic, align 4, !tbaa !1
  %tobool412.i = icmp eq i32 %199, 0
  br i1 %tobool412.i, label %if.end446.i, label %if.then413.i

if.then413.i:                                     ; preds = %if.end411.i
  %cmp414.i = icmp eq i32 %length_chars_std.1.i, 2
  br i1 %cmp414.i, label %cond.true.i, label %cond.end.i

cond.true.i:                                      ; preds = %if.then413.i
  %200 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool416.i = icmp ne i32 %200, 0
  %cond.i = select i1 %tobool416.i, i32 3, i32 0
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.then413.i
  %cond417.i = phi i32 [ %cond.i, %cond.true.i ], [ %length_chars_std.1.i, %if.then413.i ]
  %201 = load i32* @c_language, align 4, !tbaa !38
  %cmp418.i = icmp eq i32 %201, 1
  br i1 %cmp418.i, label %cond.end429.i, label %cond.false421.i

cond.false421.i:                                  ; preds = %cond.end.i
  %202 = load i32* @flag_isoc99, align 4, !tbaa !1
  %tobool422.i = icmp eq i32 %202, 0
  br i1 %tobool422.i, label %cond.false424.i, label %cond.end429.i

cond.false424.i:                                  ; preds = %cond.false421.i
  %203 = load i32* @flag_isoc94, align 4, !tbaa !1
  %tobool425.i = icmp ne i32 %203, 0
  %cond426.i = zext i1 %tobool425.i to i32
  br label %cond.end429.i

cond.end429.i:                                    ; preds = %cond.false424.i, %cond.false421.i, %cond.end.i
  %cond430.i = phi i32 [ 1, %cond.end.i ], [ %cond426.i, %cond.false424.i ], [ 3, %cond.false421.i ]
  %cmp431.i = icmp sgt i32 %cond417.i, %cond430.i
  br i1 %cmp431.i, label %if.then433.i, label %if.end446.i

if.then433.i:                                     ; preds = %cond.end429.i
  br i1 %cmp418.i, label %cond.end441.i, label %cond.false437.i

cond.false437.i:                                  ; preds = %if.then433.i
  %cmp438.i = icmp eq i32 %length_chars_std.1.i, 4
  %cond440.i = select i1 %cmp438.i, i8* getelementptr inbounds ([6 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str31, i64 0, i64 0)
  br label %cond.end441.i

cond.end441.i:                                    ; preds = %cond.false437.i, %if.then433.i
  %cond442.i = phi i8* [ %cond440.i, %cond.false437.i ], [ getelementptr inbounds ([8 x i8]* @.str29, i64 0, i64 0), %if.then433.i ]
  %204 = load i8** %name236.i, align 16, !tbaa !36
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([48 x i8]* @.str28, i64 0, i64 0), i8* %cond442.i, i8* %length_chars.1.i, i8* %204) #3
  br label %if.end446.i

if.end446.i:                                      ; preds = %cond.end441.i, %cond.end429.i, %if.end411.i
  switch i32 %65, label %if.end446.if.end520_crit_edge.i [
    i32 2, label %while.cond450.preheader.i
    i32 1, label %if.end446.if.then488_crit_edge.i
  ]

if.end446.if.end520_crit_edge.i:                  ; preds = %if.end446.i
  %.pre1694.i = load i8** %format_chars.addr.i, align 8, !tbaa !5
  br label %if.end520.i

if.end446.if.then488_crit_edge.i:                 ; preds = %if.end446.i
  %.pre1692.i = load i8** %format_chars.addr.i, align 8, !tbaa !5
  %.pre1693.i = load i8* %.pre1692.i, align 1, !tbaa !38
  br label %if.then488.i

while.cond450.preheader.i:                        ; preds = %if.end446.i, %if.end364.i
  %length_chars.21582.ph.i = phi i8* [ %length_chars.1.i, %if.end446.i ], [ null, %if.end364.i ]
  %length_chars_val.21579.ph.i = phi i32 [ %length_chars_val.1.i, %if.end446.i ], [ 0, %if.end364.i ]
  %length_chars_std.21576.ph.i = phi i32 [ %length_chars_std.1.i, %if.end446.i ], [ 0, %if.end364.i ]
  %205 = load i8** %format_chars.addr.i, align 8, !tbaa !5
  %206 = load i8* %205, align 1, !tbaa !38
  %cmp4521652.i = icmp eq i8 %206, 0
  br i1 %cmp4521652.i, label %if.end484.i, label %land.rhs454.lr.ph.i

land.rhs454.lr.ph.i:                              ; preds = %while.cond450.preheader.i
  %.pre1697.i = load i8** %modifier_chars1584.ph.i, align 16, !tbaa !69
  br label %land.rhs454.i

land.rhs454.i:                                    ; preds = %if.end481.i, %land.rhs454.lr.ph.i
  %207 = phi i8* [ %205, %land.rhs454.lr.ph.i ], [ %incdec.ptr482.i, %if.end481.i ]
  %208 = phi i8 [ %206, %land.rhs454.lr.ph.i ], [ %215, %if.end481.i ]
  %conv451.i = sext i8 %208 to i32
  %call457.i = call i8* @strchr(i8* %.pre1697.i, i32 %conv451.i) #3
  %cmp458.i = icmp eq i8* %call457.i, null
  br i1 %cmp458.i, label %if.end484.i, label %while.body461.i

while.body461.i:                                  ; preds = %land.rhs454.i
  %call464.i = call i8* @strchr(i8* %85, i32 %conv451.i) #3
  %cmp465.i = icmp eq i8* %call464.i, null
  br i1 %cmp465.i, label %if.else472.i, label %if.then467.i

if.then467.i:                                     ; preds = %while.body461.i
  %209 = load i32* %flag_char44.i1513.i, align 4, !tbaa !46
  %cmp45.i1454.i = icmp eq i32 %209, 0
  br i1 %cmp45.i1454.i, label %for.end.i1468.i, label %for.body.us.i1459.i

for.body.us.i1459.i:                              ; preds = %if.then467.i, %for.inc.us.i1467.i
  %indvars.iv51.i1456.i = phi i64 [ %indvars.iv.next52.i1463.i, %for.inc.us.i1467.i ], [ 0, %if.then467.i ]
  %210 = phi i32 [ %212, %for.inc.us.i1467.i ], [ %209, %if.then467.i ]
  %arrayidx48.us.i1457.i = phi %struct.format_flag_spec* [ %arrayidx.us.i1464.i, %for.inc.us.i1467.i ], [ %66, %if.then467.i ]
  %cmp4.us.i1458.i = icmp eq i32 %210, %conv451.i
  br i1 %cmp4.us.i1458.i, label %if.else.us.i1462.i, label %for.inc.us.i1467.i

if.else.us.i1462.i:                               ; preds = %for.body.us.i1459.i
  %predicate.us.i1460.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv51.i1456.i, i32 1
  %211 = load i32* %predicate.us.i1460.i, align 4, !tbaa !48
  %cmp21.us.i1461.i = icmp eq i32 %211, 0
  br i1 %cmp21.us.i1461.i, label %get_flag_spec.exit1469.i, label %for.inc.us.i1467.i

for.inc.us.i1467.i:                               ; preds = %if.else.us.i1462.i, %for.body.us.i1459.i
  %indvars.iv.next52.i1463.i = add nuw nsw i64 %indvars.iv51.i1456.i, 1
  %arrayidx.us.i1464.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv.next52.i1463.i
  %flag_char.us.i1465.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx.us.i1464.i, i64 0, i32 0
  %212 = load i32* %flag_char.us.i1465.i, align 4, !tbaa !46
  %cmp.us.i1466.i = icmp eq i32 %212, 0
  br i1 %cmp.us.i1466.i, label %for.end.i1468.i, label %for.body.us.i1459.i

for.end.i1468.i:                                  ; preds = %if.then467.i, %for.inc.us.i1467.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 1276, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.get_flag_spec, i64 0, i64 0)) #7
  unreachable

get_flag_spec.exit1469.i:                         ; preds = %if.else.us.i1462.i
  %name471.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx48.us.i1457.i, i64 0, i32 3
  %213 = load i8** %name471.i, align 8, !tbaa !49
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([22 x i8]* @.str20, i64 0, i64 0), i8* %213) #3
  %.pre1698.i = load i8** %format_chars.addr.i, align 8, !tbaa !5
  br label %if.end481.i

if.else472.i:                                     ; preds = %while.body461.i
  %call474.i = call i64 @strlen(i8* %85) #3
  %sext1413.i = shl i64 %call474.i, 32
  %idxprom477.i = ashr exact i64 %sext1413.i, 32
  %arrayidx478.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom477.i
  store i8 %208, i8* %arrayidx478.i, align 1, !tbaa !38
  %sext1414.i = add i64 %sext1413.i, 4294967296
  %idxprom479.i = ashr exact i64 %sext1414.i, 32
  %arrayidx480.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom479.i
  store i8 0, i8* %arrayidx480.i, align 1, !tbaa !38
  br label %if.end481.i

if.end481.i:                                      ; preds = %if.else472.i, %get_flag_spec.exit1469.i
  %214 = phi i8* [ %207, %if.else472.i ], [ %.pre1698.i, %get_flag_spec.exit1469.i ]
  %incdec.ptr482.i = getelementptr inbounds i8* %214, i64 1
  store i8* %incdec.ptr482.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %215 = load i8* %incdec.ptr482.i, align 1, !tbaa !38
  %cmp452.i = icmp eq i8 %215, 0
  br i1 %cmp452.i, label %if.end484.i, label %land.rhs454.i

if.end484.i:                                      ; preds = %if.end481.i, %land.rhs454.i, %while.cond450.preheader.i
  %216 = phi i8 [ 0, %while.cond450.preheader.i ], [ 0, %if.end481.i ], [ %208, %land.rhs454.i ]
  %217 = phi i8* [ %205, %while.cond450.preheader.i ], [ %incdec.ptr482.i, %if.end481.i ], [ %207, %land.rhs454.i ]
  br i1 %tobool1.i.i, label %if.then488.i, label %if.end520.i

if.then488.i:                                     ; preds = %if.end484.i, %if.end446.if.then488_crit_edge.i
  %218 = phi i8 [ %.pre1693.i, %if.end446.if.then488_crit_edge.i ], [ %216, %if.end484.i ]
  %219 = phi i8* [ %.pre1692.i, %if.end446.if.then488_crit_edge.i ], [ %217, %if.end484.i ]
  %length_chars.21581.i = phi i8* [ %length_chars.1.i, %if.end446.if.then488_crit_edge.i ], [ %length_chars.21582.ph.i, %if.end484.i ]
  %length_chars_val.21578.i = phi i32 [ %length_chars_val.1.i, %if.end446.if.then488_crit_edge.i ], [ %length_chars_val.21579.ph.i, %if.end484.i ]
  %length_chars_std.21575.i = phi i32 [ %length_chars_std.1.i, %if.end446.if.then488_crit_edge.i ], [ %length_chars_std.21576.ph.i, %if.end484.i ]
  %cmp490.i = icmp ne i8 %218, 97
  %220 = load i32* @flag_isoc99, align 4
  %tobool493.i = icmp ne i32 %220, 0
  %or.cond1152.i = or i1 %cmp490.i, %tobool493.i
  br i1 %or.cond1152.i, label %if.end520.i, label %if.then494.i

if.then494.i:                                     ; preds = %if.then488.i
  %arrayidx495.i = getelementptr inbounds i8* %219, i64 1
  %221 = load i8* %arrayidx495.i, align 1, !tbaa !38
  switch i8 %221, label %if.end520.i [
    i8 115, label %if.then508.i
    i8 83, label %if.then508.i
    i8 91, label %if.then508.i
  ]

if.then508.i:                                     ; preds = %if.then494.i, %if.then494.i, %if.then494.i
  %call510.i = call i64 @strlen(i8* %85) #3
  %sext.i = shl i64 %call510.i, 32
  %idxprom513.i = ashr exact i64 %sext.i, 32
  %arrayidx514.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom513.i
  store i8 97, i8* %arrayidx514.i, align 1, !tbaa !38
  %sext1412.i = add i64 %sext.i, 4294967296
  %idxprom515.i = ashr exact i64 %sext1412.i, 32
  %arrayidx516.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom515.i
  store i8 0, i8* %arrayidx516.i, align 1, !tbaa !38
  store i8* %arrayidx495.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  br label %if.end520.i

if.end520.i:                                      ; preds = %if.then508.i, %if.then494.i, %if.then488.i, %if.end484.i, %if.end446.if.end520_crit_edge.i
  %222 = phi i8* [ %219, %if.then494.i ], [ %.pre1694.i, %if.end446.if.end520_crit_edge.i ], [ %219, %if.then488.i ], [ %arrayidx495.i, %if.then508.i ], [ %217, %if.end484.i ]
  %length_chars.21583.i = phi i8* [ %length_chars.21581.i, %if.then494.i ], [ %length_chars.1.i, %if.end446.if.end520_crit_edge.i ], [ %length_chars.21581.i, %if.then488.i ], [ %length_chars.21581.i, %if.then508.i ], [ %length_chars.21582.ph.i, %if.end484.i ]
  %length_chars_val.21580.i = phi i32 [ %length_chars_val.21578.i, %if.then494.i ], [ %length_chars_val.1.i, %if.end446.if.end520_crit_edge.i ], [ %length_chars_val.21578.i, %if.then488.i ], [ %length_chars_val.21578.i, %if.then508.i ], [ %length_chars_val.21579.ph.i, %if.end484.i ]
  %length_chars_std.21577.i = phi i32 [ %length_chars_std.21575.i, %if.then494.i ], [ %length_chars_std.1.i, %if.end446.if.end520_crit_edge.i ], [ %length_chars_std.21575.i, %if.then488.i ], [ %length_chars_std.21575.i, %if.then508.i ], [ %length_chars_std.21576.ph.i, %if.end484.i ]
  %223 = load i8* %222, align 1, !tbaa !38
  %conv521.i = sext i8 %223 to i32
  %cmp522.i = icmp eq i8 %223, 0
  %cmp529.i = icmp eq i8 %223, 37
  %or.cond1153.i = and i1 %tobool527.i, %cmp529.i
  %or.cond1710.i = or i1 %cmp522.i, %or.cond1153.i
  br i1 %or.cond1710.i, label %if.then531.i, label %if.end532.i

if.then531.i:                                     ; preds = %if.end520.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([39 x i8]* @.str32, i64 0, i64 0)) #3
  br label %cleanup.i

if.end532.i:                                      ; preds = %if.end520.i
  %incdec.ptr533.i = getelementptr inbounds i8* %222, i64 1
  store i8* %incdec.ptr533.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %224 = load %struct.format_char_info** %conversion_specs.i, align 16, !tbaa !70
  %format_chars5351653.i = getelementptr inbounds %struct.format_char_info* %224, i64 0, i32 0
  %225 = load i8** %format_chars5351653.i, align 8, !tbaa !71
  %cmp5361654.i = icmp eq i8* %225, null
  br i1 %cmp5361654.i, label %if.then550.i, label %land.rhs538.i

while.cond534.i:                                  ; preds = %land.rhs538.i
  %incdec.ptr545.i = getelementptr inbounds i8** %format_chars5351656.i, i64 31
  %226 = load i8** %incdec.ptr545.i, align 8, !tbaa !71
  %cmp536.i = icmp eq i8* %226, null
  br i1 %cmp536.i, label %if.then550.i, label %land.rhs538.i

land.rhs538.i:                                    ; preds = %if.end532.i, %while.cond534.i
  %.pr1585.i = phi i8* [ %226, %while.cond534.i ], [ %225, %if.end532.i ]
  %format_chars5351656.i = phi i8** [ %incdec.ptr545.i, %while.cond534.i ], [ %format_chars5351653.i, %if.end532.i ]
  %call540.i = call i8* @strchr(i8* %.pr1585.i, i32 %conv521.i) #3
  %cmp541.i = icmp eq i8* %call540.i, null
  br i1 %cmp541.i, label %while.cond534.i, label %if.end560.i

if.then550.i:                                     ; preds = %while.cond534.i, %if.end532.i
  %and551.i = and i32 %conv521.i, 255
  %idxprom5521411.i = zext i32 %and551.i to i64
  %arrayidx553.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom5521411.i
  %227 = load i16* %arrayidx553.i, align 2, !tbaa !52
  %and555.i = and i16 %227, 172
  %tobool556.i = icmp eq i16 %and555.i, 0
  br i1 %tobool556.i, label %if.else558.i, label %if.then557.i

if.then557.i:                                     ; preds = %if.then550.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([49 x i8]* @.str33, i64 0, i64 0), i32 %conv521.i) #3
  br label %cleanup.i

if.else558.i:                                     ; preds = %if.then550.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([49 x i8]* @.str34, i64 0, i64 0), i32 %conv521.i) #3
  br label %cleanup.i

if.end560.i:                                      ; preds = %land.rhs538.i
  %indvars1687.i.le = bitcast i8** %format_chars5351656.i to %struct.format_char_info*
  %228 = load i32* @pedantic, align 4, !tbaa !1
  %tobool561.i = icmp eq i32 %228, 0
  br i1 %tobool561.i, label %for.cond.preheader.i, label %if.then562.i

if.then562.i:                                     ; preds = %if.end560.i
  %std563.i = getelementptr inbounds %struct.format_char_info* %indvars1687.i.le, i64 0, i32 2
  %229 = load i32* %std563.i, align 4, !tbaa !73
  %cmp564.i = icmp eq i32 %229, 2
  br i1 %cmp564.i, label %cond.true566.i, label %cond.end571.i

cond.true566.i:                                   ; preds = %if.then562.i
  %230 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool567.i = icmp ne i32 %230, 0
  %cond568.i = select i1 %tobool567.i, i32 3, i32 0
  br label %cond.end571.i

cond.end571.i:                                    ; preds = %cond.true566.i, %if.then562.i
  %cond572.i = phi i32 [ %cond568.i, %cond.true566.i ], [ %229, %if.then562.i ]
  %231 = load i32* @c_language, align 4, !tbaa !38
  %cmp573.i = icmp eq i32 %231, 1
  br i1 %cmp573.i, label %cond.end584.i, label %cond.false576.i

cond.false576.i:                                  ; preds = %cond.end571.i
  %232 = load i32* @flag_isoc99, align 4, !tbaa !1
  %tobool577.i = icmp eq i32 %232, 0
  br i1 %tobool577.i, label %cond.false579.i, label %cond.end584.i

cond.false579.i:                                  ; preds = %cond.false576.i
  %233 = load i32* @flag_isoc94, align 4, !tbaa !1
  %tobool580.i = icmp ne i32 %233, 0
  %cond581.i = zext i1 %tobool580.i to i32
  br label %cond.end584.i

cond.end584.i:                                    ; preds = %cond.false579.i, %cond.false576.i, %cond.end571.i
  %cond585.i = phi i32 [ 1, %cond.end571.i ], [ %cond581.i, %cond.false579.i ], [ 3, %cond.false576.i ]
  %cmp586.i = icmp sgt i32 %cond572.i, %cond585.i
  br i1 %cmp586.i, label %if.then588.i, label %for.cond.preheader.i

if.then588.i:                                     ; preds = %cond.end584.i
  br i1 %cmp573.i, label %cond.end597.i, label %cond.false592.i

cond.false592.i:                                  ; preds = %if.then588.i
  %cmp594.i = icmp eq i32 %229, 4
  %cond596.i = select i1 %cmp594.i, i8* getelementptr inbounds ([6 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str31, i64 0, i64 0)
  br label %cond.end597.i

cond.end597.i:                                    ; preds = %cond.false592.i, %if.then588.i
  %cond598.i = phi i8* [ %cond596.i, %cond.false592.i ], [ getelementptr inbounds ([8 x i8]* @.str29, i64 0, i64 0), %if.then588.i ]
  %234 = load i8** %name236.i, align 16, !tbaa !36
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([41 x i8]* @.str35, i64 0, i64 0), i8* %cond598.i, i32 %conv521.i, i8* %234) #3
  br label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %cond.end597.i, %cond.end584.i, %if.end560.i
  %235 = load i8* %85, align 16, !tbaa !38
  %cmp6051658.i = icmp eq i8 %235, 0
  br i1 %cmp6051658.i, label %for.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %236 = getelementptr inbounds i8** %format_chars5351656.i, i64 29
  %237 = getelementptr inbounds i8** %format_chars5351656.i, i64 30
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %238 = phi i8 [ %235, %for.body.lr.ph.i ], [ %276, %for.inc.i ]
  %arrayidx6031662.i = phi i8* [ %85, %for.body.lr.ph.i ], [ %arrayidx603.i, %for.inc.i ]
  %d.01659.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %d.1.i, %for.inc.i ]
  %conv604.i = sext i8 %238 to i32
  %239 = load i32* %flag_char44.i1513.i, align 4, !tbaa !46
  %cmp45.i1471.i = icmp eq i32 %239, 0
  br i1 %cmp45.i1471.i, label %for.end.i1485.i, label %for.body.us.i1476.i

for.body.us.i1476.i:                              ; preds = %for.body.i, %for.inc.us.i1484.i
  %indvars.iv51.i1473.i = phi i64 [ %indvars.iv.next52.i1480.i, %for.inc.us.i1484.i ], [ 0, %for.body.i ]
  %240 = phi i32 [ %242, %for.inc.us.i1484.i ], [ %239, %for.body.i ]
  %arrayidx48.us.i1474.i = phi %struct.format_flag_spec* [ %arrayidx.us.i1481.i, %for.inc.us.i1484.i ], [ %66, %for.body.i ]
  %cmp4.us.i1475.i = icmp eq i32 %240, %conv604.i
  br i1 %cmp4.us.i1475.i, label %if.else.us.i1479.i, label %for.inc.us.i1484.i

if.else.us.i1479.i:                               ; preds = %for.body.us.i1476.i
  %predicate.us.i1477.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv51.i1473.i, i32 1
  %241 = load i32* %predicate.us.i1477.i, align 4, !tbaa !48
  %cmp21.us.i1478.i = icmp eq i32 %241, 0
  br i1 %cmp21.us.i1478.i, label %get_flag_spec.exit1486.i, label %for.inc.us.i1484.i

for.inc.us.i1484.i:                               ; preds = %if.else.us.i1479.i, %for.body.us.i1476.i
  %indvars.iv.next52.i1480.i = add nuw nsw i64 %indvars.iv51.i1473.i, 1
  %arrayidx.us.i1481.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv.next52.i1480.i
  %flag_char.us.i1482.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx.us.i1481.i, i64 0, i32 0
  %242 = load i32* %flag_char.us.i1482.i, align 4, !tbaa !46
  %cmp.us.i1483.i = icmp eq i32 %242, 0
  br i1 %cmp.us.i1483.i, label %for.end.i1485.i, label %for.body.us.i1476.i

for.end.i1485.i:                                  ; preds = %for.body.i, %for.inc.us.i1484.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 1276, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.get_flag_spec, i64 0, i64 0)) #7
  unreachable

get_flag_spec.exit1486.i:                         ; preds = %if.else.us.i1479.i
  %243 = trunc i64 %indvars.iv.i to i32
  %sub614.i = sub nsw i32 %243, %d.01659.i
  %idxprom615.i = sext i32 %sub614.i to i64
  %arrayidx616.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom615.i
  store i8 %238, i8* %arrayidx616.i, align 1, !tbaa !38
  %244 = load i8* %arrayidx6031662.i, align 1, !tbaa !38
  %conv619.i = sext i8 %244 to i32
  %245 = load i32* %length_code_char620.i, align 4, !tbaa !68
  %cmp621.i = icmp eq i32 %conv619.i, %245
  br i1 %cmp621.i, label %for.inc.i, label %if.end624.i

if.end624.i:                                      ; preds = %get_flag_spec.exit1486.i
  %246 = load i8** %236, align 8, !tbaa !74
  %call629.i = call i8* @strchr(i8* %246, i32 %conv619.i) #3
  %cmp630.i = icmp eq i8* %call629.i, null
  br i1 %cmp630.i, label %if.then632.i, label %if.end636.i

if.then632.i:                                     ; preds = %if.end624.i
  %name633.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx48.us.i1474.i, i64 0, i32 3
  %247 = load i8** %name633.i, align 8, !tbaa !49
  %248 = load i8** %name236.i, align 16, !tbaa !36
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([30 x i8]* @.str36, i64 0, i64 0), i8* %247, i32 %conv521.i, i8* %248) #3
  %inc635.i = add nsw i32 %d.01659.i, 1
  br label %for.inc.i

if.end636.i:                                      ; preds = %if.end624.i
  %249 = load i32* @pedantic, align 4, !tbaa !1
  %tobool637.i = icmp eq i32 %249, 0
  br i1 %tobool637.i, label %for.inc.i, label %if.then638.i

if.then638.i:                                     ; preds = %if.end636.i
  %std639.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx48.us.i1474.i, i64 0, i32 5
  %250 = load i32* %std639.i, align 4, !tbaa !75
  %cmp640.i = icmp eq i32 %250, 2
  br i1 %cmp640.i, label %cond.true642.i, label %cond.end647.i

cond.true642.i:                                   ; preds = %if.then638.i
  %251 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool643.i = icmp ne i32 %251, 0
  %cond644.i = select i1 %tobool643.i, i32 3, i32 0
  br label %cond.end647.i

cond.end647.i:                                    ; preds = %cond.true642.i, %if.then638.i
  %cond648.i = phi i32 [ %cond644.i, %cond.true642.i ], [ %250, %if.then638.i ]
  %252 = load i32* @c_language, align 4, !tbaa !38
  %cmp649.i = icmp eq i32 %252, 1
  br i1 %cmp649.i, label %cond.end660.i, label %cond.false652.i

cond.false652.i:                                  ; preds = %cond.end647.i
  %253 = load i32* @flag_isoc99, align 4, !tbaa !1
  %tobool653.i = icmp eq i32 %253, 0
  br i1 %tobool653.i, label %cond.false655.i, label %cond.end660.i

cond.false655.i:                                  ; preds = %cond.false652.i
  %254 = load i32* @flag_isoc94, align 4, !tbaa !1
  %tobool656.i = icmp ne i32 %254, 0
  %cond657.i = zext i1 %tobool656.i to i32
  br label %cond.end660.i

cond.end660.i:                                    ; preds = %cond.false655.i, %cond.false652.i, %cond.end647.i
  %cond661.i = phi i32 [ 1, %cond.end647.i ], [ %cond657.i, %cond.false655.i ], [ 3, %cond.false652.i ]
  %cmp662.i = icmp sgt i32 %cond648.i, %cond661.i
  br i1 %cmp662.i, label %if.then664.i, label %if.end675.i

if.then664.i:                                     ; preds = %cond.end660.i
  br i1 %cmp649.i, label %cond.end673.i, label %cond.false668.i

cond.false668.i:                                  ; preds = %if.then664.i
  %cmp670.i = icmp eq i32 %250, 4
  %cond672.i = select i1 %cmp670.i, i8* getelementptr inbounds ([6 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str31, i64 0, i64 0)
  br label %cond.end673.i

cond.end673.i:                                    ; preds = %cond.false668.i, %if.then664.i
  %cond674.i = phi i8* [ %cond672.i, %cond.false668.i ], [ getelementptr inbounds ([8 x i8]* @.str29, i64 0, i64 0), %if.then664.i ]
  %long_name.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx48.us.i1474.i, i64 0, i32 4
  %255 = load i8** %long_name.i, align 8, !tbaa !76
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([23 x i8]* @.str37, i64 0, i64 0), i8* %cond674.i, i8* %255) #3
  %.pre1696.i = load i8* %arrayidx6031662.i, align 1, !tbaa !38
  br label %if.end675.i

if.end675.i:                                      ; preds = %cond.end673.i, %cond.end660.i
  %256 = phi i8 [ %.pre1696.i, %cond.end673.i ], [ %244, %cond.end660.i ]
  %conv678.i = sext i8 %256 to i32
  %257 = load i8** %237, align 8, !tbaa !77
  %258 = load i32* %flag_char44.i1513.i, align 4, !tbaa !46
  %cmp45.i1488.i = icmp eq i32 %258, 0
  br i1 %cmp45.i1488.i, label %for.end.i1511.i, label %for.body.lr.ph.i1489.i

for.body.lr.ph.i1489.i:                           ; preds = %if.end675.i
  %cmp5.i.i = icmp eq i8* %257, null
  br i1 %cmp5.i.i, label %for.body.us.i1493.i, label %for.body.i1503.i

for.body.us.i1493.i:                              ; preds = %for.body.lr.ph.i1489.i, %for.inc.us.i1501.i
  %indvars.iv51.i1490.i = phi i64 [ %indvars.iv.next52.i1497.i, %for.inc.us.i1501.i ], [ 0, %for.body.lr.ph.i1489.i ]
  %259 = phi i32 [ %261, %for.inc.us.i1501.i ], [ %258, %for.body.lr.ph.i1489.i ]
  %arrayidx48.us.i1491.i = phi %struct.format_flag_spec* [ %arrayidx.us.i1498.i, %for.inc.us.i1501.i ], [ %66, %for.body.lr.ph.i1489.i ]
  %cmp4.us.i1492.i = icmp eq i32 %259, %conv678.i
  br i1 %cmp4.us.i1492.i, label %if.else.us.i1496.i, label %for.inc.us.i1501.i

if.else.us.i1496.i:                               ; preds = %for.body.us.i1493.i
  %predicate.us.i1494.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv51.i1490.i, i32 1
  %260 = load i32* %predicate.us.i1494.i, align 4, !tbaa !48
  %cmp21.us.i1495.i = icmp eq i32 %260, 0
  br i1 %cmp21.us.i1495.i, label %get_flag_spec.exit1512.i, label %for.inc.us.i1501.i

for.inc.us.i1501.i:                               ; preds = %if.else.us.i1496.i, %for.body.us.i1493.i
  %indvars.iv.next52.i1497.i = add nuw nsw i64 %indvars.iv51.i1490.i, 1
  %arrayidx.us.i1498.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv.next52.i1497.i
  %flag_char.us.i1499.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx.us.i1498.i, i64 0, i32 0
  %261 = load i32* %flag_char.us.i1499.i, align 4, !tbaa !46
  %cmp.us.i1500.i = icmp eq i32 %261, 0
  br i1 %cmp.us.i1500.i, label %for.end.i1511.i, label %for.body.us.i1493.i

for.body.i1503.i:                                 ; preds = %for.body.lr.ph.i1489.i, %for.inc.i1510.i
  %indvars.iv.i1502.i = phi i64 [ %indvars.iv.next.i1507.i, %for.inc.i1510.i ], [ 0, %for.body.lr.ph.i1489.i ]
  %262 = phi i32 [ %264, %for.inc.i1510.i ], [ %258, %for.body.lr.ph.i1489.i ]
  %arrayidx48.i.i = phi %struct.format_flag_spec* [ %arrayidx.i1508.i, %for.inc.i1510.i ], [ %66, %for.body.lr.ph.i1489.i ]
  %cmp4.i.i = icmp eq i32 %262, %conv678.i
  br i1 %cmp4.i.i, label %if.then6.i.i, label %for.inc.i1510.i

if.then6.i.i:                                     ; preds = %for.body.i1503.i
  %predicate.i.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv.i1502.i, i32 1
  %263 = load i32* %predicate.i.i, align 4, !tbaa !48
  %cmp21.i.i = icmp eq i32 %263, 0
  br i1 %cmp21.i.i, label %for.inc.i1510.i, label %land.lhs.true.i1506.i

land.lhs.true.i1506.i:                            ; preds = %if.then6.i.i
  %call.i1504.i = call i8* @strchr(i8* %257, i32 %263) #3
  %cmp13.i1505.i = icmp eq i8* %call.i1504.i, null
  br i1 %cmp13.i1505.i, label %for.inc.i1510.i, label %get_flag_spec.exit1512.i

for.inc.i1510.i:                                  ; preds = %land.lhs.true.i1506.i, %if.then6.i.i, %for.body.i1503.i
  %indvars.iv.next.i1507.i = add nuw nsw i64 %indvars.iv.i1502.i, 1
  %arrayidx.i1508.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv.next.i1507.i
  %flag_char.i.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx.i1508.i, i64 0, i32 0
  %264 = load i32* %flag_char.i.i, align 4, !tbaa !46
  %cmp.i1509.i = icmp eq i32 %264, 0
  br i1 %cmp.i1509.i, label %for.end.i1511.i, label %for.body.i1503.i

for.end.i1511.i:                                  ; preds = %for.inc.i1510.i, %for.inc.us.i1501.i, %if.end675.i
  %cmp27.i.i = icmp eq i8* %257, null
  br i1 %cmp27.i.i, label %if.then28.i.i, label %for.inc.i

if.then28.i.i:                                    ; preds = %for.end.i1511.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 1276, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.get_flag_spec, i64 0, i64 0)) #7
  unreachable

get_flag_spec.exit1512.i:                         ; preds = %land.lhs.true.i1506.i, %if.else.us.i1496.i
  %retval.0.i.i = phi %struct.format_flag_spec* [ %arrayidx48.us.i1491.i, %if.else.us.i1496.i ], [ %arrayidx48.i.i, %land.lhs.true.i1506.i ]
  %cmp680.i = icmp eq %struct.format_flag_spec* %retval.0.i.i, null
  br i1 %cmp680.i, label %for.inc.i, label %land.lhs.true682.i

land.lhs.true682.i:                               ; preds = %get_flag_spec.exit1512.i
  %std683.i = getelementptr inbounds %struct.format_flag_spec* %retval.0.i.i, i64 0, i32 5
  %265 = load i32* %std683.i, align 4, !tbaa !75
  %cmp684.i = icmp eq i32 %265, 2
  br i1 %cmp684.i, label %cond.true686.i, label %cond.end691.i

cond.true686.i:                                   ; preds = %land.lhs.true682.i
  %266 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool687.i = icmp ne i32 %266, 0
  %cond688.i = select i1 %tobool687.i, i32 3, i32 0
  br label %cond.end691.i

cond.end691.i:                                    ; preds = %cond.true686.i, %land.lhs.true682.i
  %cond692.i = phi i32 [ %cond688.i, %cond.true686.i ], [ %265, %land.lhs.true682.i ]
  %267 = load i32* %std639.i, align 4, !tbaa !75
  %cmp694.i = icmp eq i32 %267, 2
  br i1 %cmp694.i, label %cond.true696.i, label %cond.end701.i

cond.true696.i:                                   ; preds = %cond.end691.i
  %268 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool697.i = icmp ne i32 %268, 0
  %cond698.i = select i1 %tobool697.i, i32 3, i32 0
  br label %cond.end701.i

cond.end701.i:                                    ; preds = %cond.true696.i, %cond.end691.i
  %cond702.i = phi i32 [ %cond698.i, %cond.true696.i ], [ %267, %cond.end691.i ]
  %cmp703.i = icmp sgt i32 %cond692.i, %cond702.i
  br i1 %cmp703.i, label %if.then705.i, label %for.inc.i

if.then705.i:                                     ; preds = %cond.end701.i
  %long_name707.i = getelementptr inbounds %struct.format_flag_spec* %retval.0.i.i, i64 0, i32 4
  %269 = load i8** %long_name707.i, align 8, !tbaa !76
  %cmp708.i = icmp eq i8* %269, null
  br i1 %cmp708.i, label %cond.false712.i, label %cond.end714.i

cond.false712.i:                                  ; preds = %if.then705.i
  %long_name713.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx48.us.i1474.i, i64 0, i32 4
  %270 = load i8** %long_name713.i, align 8, !tbaa !76
  br label %cond.end714.i

cond.end714.i:                                    ; preds = %cond.false712.i, %if.then705.i
  %cond715.i = phi i8* [ %270, %cond.false712.i ], [ %269, %if.then705.i ]
  br i1 %cmp684.i, label %cond.true719.i, label %cond.end724.i

cond.true719.i:                                   ; preds = %cond.end714.i
  %271 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool720.i = icmp ne i32 %271, 0
  %cond721.i = select i1 %tobool720.i, i32 3, i32 0
  br label %cond.end724.i

cond.end724.i:                                    ; preds = %cond.true719.i, %cond.end714.i
  %cond725.i = phi i32 [ %cond721.i, %cond.true719.i ], [ %265, %cond.end714.i ]
  %272 = load i32* @c_language, align 4, !tbaa !38
  %cmp726.i = icmp eq i32 %272, 1
  br i1 %cmp726.i, label %cond.end737.i, label %cond.false729.i

cond.false729.i:                                  ; preds = %cond.end724.i
  %273 = load i32* @flag_isoc99, align 4, !tbaa !1
  %tobool730.i = icmp eq i32 %273, 0
  br i1 %tobool730.i, label %cond.false732.i, label %cond.end737.i

cond.false732.i:                                  ; preds = %cond.false729.i
  %274 = load i32* @flag_isoc94, align 4, !tbaa !1
  %tobool733.i = icmp ne i32 %274, 0
  %cond734.i = zext i1 %tobool733.i to i32
  br label %cond.end737.i

cond.end737.i:                                    ; preds = %cond.false732.i, %cond.false729.i, %cond.end724.i
  %cond738.i = phi i32 [ 1, %cond.end724.i ], [ %cond734.i, %cond.false732.i ], [ 3, %cond.false729.i ]
  %cmp739.i = icmp sgt i32 %cond725.i, %cond738.i
  br i1 %cmp739.i, label %if.then741.i, label %for.inc.i

if.then741.i:                                     ; preds = %cond.end737.i
  br i1 %cmp726.i, label %cond.end750.i, label %cond.false745.i

cond.false745.i:                                  ; preds = %if.then741.i
  %cmp747.i = icmp eq i32 %265, 4
  %cond749.i = select i1 %cmp747.i, i8* getelementptr inbounds ([6 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str31, i64 0, i64 0)
  br label %cond.end750.i

cond.end750.i:                                    ; preds = %cond.false745.i, %if.then741.i
  %cond751.i = phi i8* [ %cond749.i, %cond.false745.i ], [ getelementptr inbounds ([8 x i8]* @.str29, i64 0, i64 0), %if.then741.i ]
  %275 = load i8** %name236.i, align 16, !tbaa !36
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([49 x i8]* @.str38, i64 0, i64 0), i8* %cond751.i, i8* %cond715.i, i32 %conv521.i, i8* %275) #3
  br label %for.inc.i

for.inc.i:                                        ; preds = %cond.end750.i, %cond.end737.i, %cond.end701.i, %get_flag_spec.exit1512.i, %for.end.i1511.i, %if.end636.i, %if.then632.i, %get_flag_spec.exit1486.i
  %d.1.i = phi i32 [ %d.01659.i, %get_flag_spec.exit1486.i ], [ %inc635.i, %if.then632.i ], [ %d.01659.i, %cond.end750.i ], [ %d.01659.i, %cond.end737.i ], [ %d.01659.i, %cond.end701.i ], [ %d.01659.i, %get_flag_spec.exit1512.i ], [ %d.01659.i, %if.end636.i ], [ %d.01659.i, %for.end.i1511.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx603.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %indvars.iv.next.i
  %276 = load i8* %arrayidx603.i, align 1, !tbaa !38
  %cmp605.i = icmp eq i8 %276, 0
  br i1 %cmp605.i, label %for.cond.for.end_crit_edge.i, label %for.body.i

for.cond.for.end_crit_edge.i:                     ; preds = %for.inc.i
  %277 = trunc i64 %indvars.iv.next.i to i32
  br label %for.end.i

for.end.i:                                        ; preds = %for.cond.for.end_crit_edge.i, %for.cond.preheader.i
  %i.0.lcssa.i = phi i32 [ %277, %for.cond.for.end_crit_edge.i ], [ 0, %for.cond.preheader.i ]
  %d.0.lcssa.i = phi i32 [ %d.1.i, %for.cond.for.end_crit_edge.i ], [ 0, %for.cond.preheader.i ]
  %sub757.i = sub nsw i32 %i.0.lcssa.i, %d.0.lcssa.i
  %idxprom758.i = sext i32 %sub757.i to i64
  %arrayidx759.i = getelementptr inbounds [256 x i8]* %flag_chars.i, i64 0, i64 %idxprom758.i
  store i8 0, i8* %arrayidx759.i, align 1, !tbaa !38
  br i1 %tobool1.i.i, label %land.lhs.true771.i, label %if.end778.i

land.lhs.true771.i:                               ; preds = %for.end.i
  %call765.i = call i8* @strchr(i8* %85, i32 97) #3
  %not.cmp766.i = icmp ne i8* %call765.i, null
  %..i = zext i1 %not.cmp766.i to i32
  %278 = load i32* %suppression_char.i, align 8, !tbaa !78
  %call774.i = call i8* @strchr(i8* %85, i32 %278) #3
  %not.cmp775.i = icmp ne i8* %call774.i, null
  %.1435.i = zext i1 %not.cmp775.i to i32
  br label %if.end778.i

if.end778.i:                                      ; preds = %land.lhs.true771.i, %for.end.i
  %aflag.01588.i = phi i32 [ %..i, %land.lhs.true771.i ], [ 0, %for.end.i ]
  %suppressed.0.i = phi i32 [ %.1435.i, %land.lhs.true771.i ], [ 0, %for.end.i ]
  %279 = load i32* %flag_char11665.i, align 4, !tbaa !79
  %cmp7821666.i = icmp eq i32 %279, 0
  %.pre619 = getelementptr inbounds i8** %format_chars5351656.i, i64 30
  br i1 %cmp7821666.i, label %for.end862.i, label %for.body784.i

for.body784.i:                                    ; preds = %if.end778.i, %for.inc860.i
  %indvars.iv1688.i = phi i64 [ %indvars.iv.next1689.i, %for.inc860.i ], [ 0, %if.end778.i ]
  %280 = phi i32 [ %295, %for.inc860.i ], [ %279, %if.end778.i ]
  %call791.i = call i8* @strchr(i8* %85, i32 %280) #3
  %cmp792.i = icmp eq i8* %call791.i, null
  br i1 %cmp792.i, label %for.inc860.i, label %if.end795.i

if.end795.i:                                      ; preds = %for.body784.i
  %flag_char2.i = getelementptr inbounds %struct.format_flag_pair* %67, i64 %indvars.iv1688.i, i32 1
  %281 = load i32* %flag_char2.i, align 4, !tbaa !81
  %call799.i = call i8* @strchr(i8* %85, i32 %281) #3
  %cmp800.i = icmp eq i8* %call799.i, null
  br i1 %cmp800.i, label %for.inc860.i, label %if.end803.i

if.end803.i:                                      ; preds = %if.end795.i
  %predicate.i = getelementptr inbounds %struct.format_flag_pair* %67, i64 %indvars.iv1688.i, i32 3
  %282 = load i32* %predicate.i, align 4, !tbaa !82
  %cmp806.i = icmp eq i32 %282, 0
  br i1 %cmp806.i, label %if.end817.i, label %land.lhs.true808.i

land.lhs.true808.i:                               ; preds = %if.end803.i
  %283 = load i8** %.pre619, align 8, !tbaa !77
  %call813.i = call i8* @strchr(i8* %283, i32 %282) #3
  %cmp814.i = icmp eq i8* %call813.i, null
  br i1 %cmp814.i, label %for.inc860.i, label %if.end817.i

if.end817.i:                                      ; preds = %land.lhs.true808.i, %if.end803.i
  %284 = load i32* %flag_char44.i1513.i, align 4, !tbaa !46
  %cmp45.i1514.i = icmp eq i32 %284, 0
  br i1 %cmp45.i1514.i, label %for.end.i1528.i, label %for.body.us.i1519.i

for.body.us.i1519.i:                              ; preds = %if.end817.i, %for.inc.us.i1527.i
  %indvars.iv51.i1516.i = phi i64 [ %indvars.iv.next52.i1523.i, %for.inc.us.i1527.i ], [ 0, %if.end817.i ]
  %285 = phi i32 [ %287, %for.inc.us.i1527.i ], [ %284, %if.end817.i ]
  %arrayidx48.us.i1517.i = phi %struct.format_flag_spec* [ %arrayidx.us.i1524.i, %for.inc.us.i1527.i ], [ %66, %if.end817.i ]
  %cmp4.us.i1518.i = icmp eq i32 %285, %280
  br i1 %cmp4.us.i1518.i, label %if.else.us.i1522.i, label %for.inc.us.i1527.i

if.else.us.i1522.i:                               ; preds = %for.body.us.i1519.i
  %predicate.us.i1520.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv51.i1516.i, i32 1
  %286 = load i32* %predicate.us.i1520.i, align 4, !tbaa !48
  %cmp21.us.i1521.i = icmp eq i32 %286, 0
  br i1 %cmp21.us.i1521.i, label %for.body.us.i1538.i, label %for.inc.us.i1527.i

for.inc.us.i1527.i:                               ; preds = %if.else.us.i1522.i, %for.body.us.i1519.i
  %indvars.iv.next52.i1523.i = add nuw nsw i64 %indvars.iv51.i1516.i, 1
  %arrayidx.us.i1524.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv.next52.i1523.i
  %flag_char.us.i1525.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx.us.i1524.i, i64 0, i32 0
  %287 = load i32* %flag_char.us.i1525.i, align 4, !tbaa !46
  %cmp.us.i1526.i = icmp eq i32 %287, 0
  br i1 %cmp.us.i1526.i, label %for.end.i1528.i, label %for.body.us.i1519.i

for.end.i1528.i:                                  ; preds = %if.end817.i, %for.inc.us.i1527.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 1276, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.get_flag_spec, i64 0, i64 0)) #7
  unreachable

for.body.us.i1538.i:                              ; preds = %if.else.us.i1522.i, %for.inc.us.i1546.i
  %indvars.iv51.i1535.i = phi i64 [ %indvars.iv.next52.i1542.i, %for.inc.us.i1546.i ], [ 0, %if.else.us.i1522.i ]
  %288 = phi i32 [ %290, %for.inc.us.i1546.i ], [ %284, %if.else.us.i1522.i ]
  %arrayidx48.us.i1536.i = phi %struct.format_flag_spec* [ %arrayidx.us.i1543.i, %for.inc.us.i1546.i ], [ %66, %if.else.us.i1522.i ]
  %cmp4.us.i1537.i = icmp eq i32 %288, %281
  br i1 %cmp4.us.i1537.i, label %if.else.us.i1541.i, label %for.inc.us.i1546.i

if.else.us.i1541.i:                               ; preds = %for.body.us.i1538.i
  %predicate.us.i1539.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv51.i1535.i, i32 1
  %289 = load i32* %predicate.us.i1539.i, align 4, !tbaa !48
  %cmp21.us.i1540.i = icmp eq i32 %289, 0
  br i1 %cmp21.us.i1540.i, label %get_flag_spec.exit1550.i, label %for.inc.us.i1546.i

for.inc.us.i1546.i:                               ; preds = %if.else.us.i1541.i, %for.body.us.i1538.i
  %indvars.iv.next52.i1542.i = add nuw nsw i64 %indvars.iv51.i1535.i, 1
  %arrayidx.us.i1543.i = getelementptr inbounds %struct.format_flag_spec* %66, i64 %indvars.iv.next52.i1542.i
  %flag_char.us.i1544.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx.us.i1543.i, i64 0, i32 0
  %290 = load i32* %flag_char.us.i1544.i, align 4, !tbaa !46
  %cmp.us.i1545.i = icmp eq i32 %290, 0
  br i1 %cmp.us.i1545.i, label %for.end.i1547.i, label %for.body.us.i1538.i

for.end.i1547.i:                                  ; preds = %for.inc.us.i1546.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 1276, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.get_flag_spec, i64 0, i64 0)) #7
  unreachable

get_flag_spec.exit1550.i:                         ; preds = %if.else.us.i1541.i
  %ignored.i = getelementptr inbounds %struct.format_flag_pair* %67, i64 %indvars.iv1688.i, i32 2
  %291 = load i32* %ignored.i, align 4, !tbaa !83
  %tobool828.i = icmp eq i32 %291, 0
  %cmp833.i = icmp ne i32 %282, 0
  %name836.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx48.us.i1517.i, i64 0, i32 3
  %292 = load i8** %name836.i, align 8, !tbaa !49
  %name837.i = getelementptr inbounds %struct.format_flag_spec* %arrayidx48.us.i1536.i, i64 0, i32 3
  %293 = load i8** %name837.i, align 8, !tbaa !49
  %294 = load i8** %name236.i, align 16, !tbaa !36
  br i1 %tobool828.i, label %if.else844.i, label %if.then829.i

if.then829.i:                                     ; preds = %get_flag_spec.exit1550.i
  br i1 %cmp833.i, label %if.then835.i, label %if.else839.i

if.then835.i:                                     ; preds = %if.then829.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([40 x i8]* @.str39, i64 0, i64 0), i8* %292, i8* %293, i32 %conv521.i, i8* %294) #3
  br label %for.inc860.i

if.else839.i:                                     ; preds = %if.then829.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([32 x i8]* @.str40, i64 0, i64 0), i8* %292, i8* %293, i8* %294) #3
  br label %for.inc860.i

if.else844.i:                                     ; preds = %get_flag_spec.exit1550.i
  br i1 %cmp833.i, label %if.then850.i, label %if.else854.i

if.then850.i:                                     ; preds = %if.else844.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([48 x i8]* @.str41, i64 0, i64 0), i8* %292, i8* %293, i32 %conv521.i, i8* %294) #3
  br label %for.inc860.i

if.else854.i:                                     ; preds = %if.else844.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([39 x i8]* @.str42, i64 0, i64 0), i8* %292, i8* %293, i8* %294) #3
  br label %for.inc860.i

for.inc860.i:                                     ; preds = %if.else854.i, %if.then850.i, %if.else839.i, %if.then835.i, %land.lhs.true808.i, %if.end795.i, %for.body784.i
  %indvars.iv.next1689.i = add nuw nsw i64 %indvars.iv1688.i, 1
  %flag_char1.i = getelementptr inbounds %struct.format_flag_pair* %67, i64 %indvars.iv.next1689.i, i32 0
  %295 = load i32* %flag_char1.i, align 4, !tbaa !79
  %cmp782.i = icmp eq i32 %295, 0
  br i1 %cmp782.i, label %for.end862.i, label %for.body784.i

for.end862.i:                                     ; preds = %for.inc860.i, %if.end778.i
  %296 = load i32* @warn_format_y2k, align 4, !tbaa !1
  %tobool863.i = icmp eq i32 %296, 0
  br i1 %tobool863.i, label %if.end901.i, label %if.then864.i

if.then864.i:                                     ; preds = %for.end862.i
  %297 = load i8** %.pre619, align 8, !tbaa !77
  %call866.i = call i8* @strchr(i8* %297, i32 52) #3
  %cmp867.i = icmp eq i8* %call866.i, null
  br i1 %cmp867.i, label %if.else877.i, label %if.then869.i

if.then869.i:                                     ; preds = %if.then864.i
  %call871.i = call i8* @strchr(i8* %85, i32 69) #3
  %cmp872.i = icmp eq i8* %call871.i, null
  %.1436.i = select i1 %cmp872.i, i32 2, i32 3
  br label %if.end891.i

if.else877.i:                                     ; preds = %if.then864.i
  %call879.i = call i8* @strchr(i8* %297, i32 51) #3
  %cmp880.i = icmp eq i8* %call879.i, null
  br i1 %cmp880.i, label %if.else883.i, label %if.then894.i

if.else883.i:                                     ; preds = %if.else877.i
  %call885.i = call i8* @strchr(i8* %297, i32 50) #3
  %cmp886.i = icmp eq i8* %call885.i, null
  %.1437.i = select i1 %cmp886.i, i32 0, i32 2
  br label %if.end891.i

if.end891.i:                                      ; preds = %if.else883.i, %if.then869.i
  %y2k_level.0.i = phi i32 [ %.1436.i, %if.then869.i ], [ %.1437.i, %if.else883.i ]
  switch i32 %y2k_level.0.i, label %if.end901.i [
    i32 3, label %if.then894.i
    i32 2, label %if.then898.i
  ]

if.then894.i:                                     ; preds = %if.end891.i, %if.else877.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([57 x i8]* @.str43, i64 0, i64 0), i32 %conv521.i) #3
  br label %if.end901.i

if.then898.i:                                     ; preds = %if.end891.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([41 x i8]* @.str44, i64 0, i64 0), i32 %conv521.i) #3
  br label %if.end901.i

if.end901.i:                                      ; preds = %if.then898.i, %if.then894.i, %if.end891.i, %for.end862.i
  %298 = load i8** %.pre619, align 8, !tbaa !77
  %call903.i = call i8* @strchr(i8* %298, i32 91) #3
  %cmp904.i = icmp eq i8* %call903.i, null
  br i1 %cmp904.i, label %if.end935.i, label %if.then906.i

if.then906.i:                                     ; preds = %if.end901.i
  %299 = load i8** %format_chars.addr.i, align 8, !tbaa !5
  %300 = load i8* %299, align 1, !tbaa !38
  %cmp908.i = icmp eq i8 %300, 94
  br i1 %cmp908.i, label %if.then910.i, label %if.end912.i

if.then910.i:                                     ; preds = %if.then906.i
  %incdec.ptr911.i = getelementptr inbounds i8* %299, i64 1
  store i8* %incdec.ptr911.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  %.pre1695.i = load i8* %incdec.ptr911.i, align 1, !tbaa !38
  br label %if.end912.i

if.end912.i:                                      ; preds = %if.then910.i, %if.then906.i
  %301 = phi i8 [ %.pre1695.i, %if.then910.i ], [ %300, %if.then906.i ]
  %302 = phi i8* [ %incdec.ptr911.i, %if.then910.i ], [ %299, %if.then906.i ]
  %cmp914.i = icmp eq i8 %301, 93
  br i1 %cmp914.i, label %if.then916.i, label %while.cond919.i

if.then916.i:                                     ; preds = %if.end912.i
  %incdec.ptr917.i = getelementptr inbounds i8* %302, i64 1
  store i8* %incdec.ptr917.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  br label %while.cond919.i

while.cond919.i:                                  ; preds = %if.then916.i, %if.end912.i, %while.body927.i
  %303 = phi i8* [ %incdec.ptr928.i, %while.body927.i ], [ %incdec.ptr917.i, %if.then916.i ], [ %302, %if.end912.i ]
  %304 = load i8* %303, align 1, !tbaa !38
  switch i8 %304, label %while.body927.i [
    i8 93, label %if.end935.i
    i8 0, label %if.then933.i
  ]

while.body927.i:                                  ; preds = %while.cond919.i
  %incdec.ptr928.i = getelementptr inbounds i8* %303, i64 1
  store i8* %incdec.ptr928.i, i8** %format_chars.addr.i, align 8, !tbaa !5
  br label %while.cond919.i

if.then933.i:                                     ; preds = %while.cond919.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([32 x i8]* @.str45, i64 0, i64 0)) #3
  br label %if.end935.i

if.end935.i:                                      ; preds = %while.cond919.i, %if.then933.i, %if.end901.i
  br i1 %tobool365.i, label %if.end1049.i, label %if.then939.i

if.then939.i:                                     ; preds = %if.end935.i
  %idxprom940.i = zext i32 %length_chars_val.21580.i to i64
  %type.i = getelementptr inbounds %struct.format_char_info* %indvars1687.i.le, i64 0, i32 3, i64 %idxprom940.i, i32 2
  %305 = load %union.tree_node*** %type.i, align 8, !tbaa !84
  %tobool942.i = icmp eq %union.tree_node** %305, null
  br i1 %tobool942.i, label %if.then961.i, label %cond.end949.i

cond.end949.i:                                    ; preds = %if.then939.i
  %306 = load %union.tree_node** %305, align 8, !tbaa !5
  %name954.i = getelementptr inbounds %struct.format_char_info* %indvars1687.i.le, i64 0, i32 3, i64 %idxprom940.i, i32 1
  %307 = load i8** %name954.i, align 8, !tbaa !86
  %std958.i = getelementptr inbounds %struct.format_char_info* %indvars1687.i.le, i64 0, i32 3, i64 %idxprom940.i, i32 0
  %308 = load i32* %std958.i, align 4, !tbaa !87
  %cmp959.i = icmp eq %union.tree_node* %306, null
  br i1 %cmp959.i, label %if.then961.i, label %if.else969.i

if.then961.i:                                     ; preds = %cond.end949.i, %if.then939.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([53 x i8]* @.str46, i64 0, i64 0), i8* %length_chars.21583.i, i32 %conv521.i) #3
  %inc962.i = add i64 %arg_num.addr.6.i, 1
  %309 = load %union.tree_node** %params.addr.i, align 8, !tbaa !5
  %cmp963.i = icmp eq %union.tree_node* %309, null
  br i1 %cmp963.i, label %if.then965.i, label %if.end966.i

if.then965.i:                                     ; preds = %if.then961.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([29 x i8]* @.str22, i64 0, i64 0)) #3
  br label %cleanup.i

if.end966.i:                                      ; preds = %if.then961.i
  %chain968.i = getelementptr inbounds %union.tree_node* %309, i64 0, i32 0, i32 0, i32 0
  %310 = load %union.tree_node** %chain968.i, align 8, !tbaa !12
  store %union.tree_node* %310, %union.tree_node** %params.addr.i, align 8, !tbaa !5
  br label %cleanup.i

if.else969.i:                                     ; preds = %cond.end949.i
  %311 = load i32* @pedantic, align 4, !tbaa !1
  %tobool970.i = icmp eq i32 %311, 0
  br i1 %tobool970.i, label %if.end1049.i, label %land.lhs.true971.i

land.lhs.true971.i:                               ; preds = %if.else969.i
  %cmp972.i = icmp eq i32 %308, 2
  br i1 %cmp972.i, label %cond.true974.i, label %cond.end978.i

cond.true974.i:                                   ; preds = %land.lhs.true971.i
  %312 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool975.i = icmp ne i32 %312, 0
  %cond976.i = select i1 %tobool975.i, i32 3, i32 0
  br label %cond.end978.i

cond.end978.i:                                    ; preds = %cond.true974.i, %land.lhs.true971.i
  %cond979.i = phi i32 [ %cond976.i, %cond.true974.i ], [ %308, %land.lhs.true971.i ]
  %cmp980.i = icmp eq i32 %length_chars_std.21577.i, 2
  br i1 %cmp980.i, label %cond.true982.i, label %cond.end986.i

cond.true982.i:                                   ; preds = %cond.end978.i
  %313 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool983.i = icmp ne i32 %313, 0
  %cond984.i = select i1 %tobool983.i, i32 3, i32 0
  br label %cond.end986.i

cond.end986.i:                                    ; preds = %cond.true982.i, %cond.end978.i
  %cond987.i = phi i32 [ %cond984.i, %cond.true982.i ], [ %length_chars_std.21577.i, %cond.end978.i ]
  %cmp988.i = icmp sgt i32 %cond979.i, %cond987.i
  br i1 %cmp988.i, label %land.lhs.true990.i, label %if.end1049.i

land.lhs.true990.i:                               ; preds = %cond.end986.i
  br i1 %cmp972.i, label %cond.true993.i, label %cond.end997.i

cond.true993.i:                                   ; preds = %land.lhs.true990.i
  %314 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool994.i = icmp ne i32 %314, 0
  %cond995.i = select i1 %tobool994.i, i32 3, i32 0
  br label %cond.end997.i

cond.end997.i:                                    ; preds = %cond.true993.i, %land.lhs.true990.i
  %cond998.i = phi i32 [ %cond995.i, %cond.true993.i ], [ %308, %land.lhs.true990.i ]
  %std999.i = getelementptr inbounds %struct.format_char_info* %indvars1687.i.le, i64 0, i32 2
  %315 = load i32* %std999.i, align 4, !tbaa !73
  %cmp1000.i = icmp eq i32 %315, 2
  br i1 %cmp1000.i, label %cond.true1002.i, label %cond.end1007.i

cond.true1002.i:                                  ; preds = %cond.end997.i
  %316 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool1003.i = icmp ne i32 %316, 0
  %cond1004.i = select i1 %tobool1003.i, i32 3, i32 0
  br label %cond.end1007.i

cond.end1007.i:                                   ; preds = %cond.true1002.i, %cond.end997.i
  %cond1008.i = phi i32 [ %cond1004.i, %cond.true1002.i ], [ %315, %cond.end997.i ]
  %cmp1009.i = icmp sgt i32 %cond998.i, %cond1008.i
  br i1 %cmp1009.i, label %if.then1011.i, label %if.end1049.i

if.then1011.i:                                    ; preds = %cond.end1007.i
  br i1 %cmp972.i, label %cond.true1014.i, label %cond.end1018.i

cond.true1014.i:                                  ; preds = %if.then1011.i
  %317 = load i32* @warn_long_long, align 4, !tbaa !1
  %tobool1015.i = icmp ne i32 %317, 0
  %cond1016.i = select i1 %tobool1015.i, i32 3, i32 0
  br label %cond.end1018.i

cond.end1018.i:                                   ; preds = %cond.true1014.i, %if.then1011.i
  %cond1019.i = phi i32 [ %cond1016.i, %cond.true1014.i ], [ %308, %if.then1011.i ]
  %318 = load i32* @c_language, align 4, !tbaa !38
  %cmp1020.i = icmp eq i32 %318, 1
  br i1 %cmp1020.i, label %cond.end1031.i, label %cond.false1023.i

cond.false1023.i:                                 ; preds = %cond.end1018.i
  %319 = load i32* @flag_isoc99, align 4, !tbaa !1
  %tobool1024.i = icmp eq i32 %319, 0
  br i1 %tobool1024.i, label %cond.false1026.i, label %cond.end1031.i

cond.false1026.i:                                 ; preds = %cond.false1023.i
  %320 = load i32* @flag_isoc94, align 4, !tbaa !1
  %tobool1027.i = icmp ne i32 %320, 0
  %cond1028.i = zext i1 %tobool1027.i to i32
  br label %cond.end1031.i

cond.end1031.i:                                   ; preds = %cond.false1026.i, %cond.false1023.i, %cond.end1018.i
  %cond1032.i = phi i32 [ 1, %cond.end1018.i ], [ %cond1028.i, %cond.false1026.i ], [ 3, %cond.false1023.i ]
  %cmp1033.i = icmp sgt i32 %cond1019.i, %cond1032.i
  br i1 %cmp1033.i, label %if.then1035.i, label %if.end1049.i

if.then1035.i:                                    ; preds = %cond.end1031.i
  br i1 %cmp1020.i, label %cond.end1043.i, label %cond.false1039.i

cond.false1039.i:                                 ; preds = %if.then1035.i
  %cmp1040.i = icmp eq i32 %308, 4
  %cond1042.i = select i1 %cmp1040.i, i8* getelementptr inbounds ([6 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str31, i64 0, i64 0)
  br label %cond.end1043.i

cond.end1043.i:                                   ; preds = %cond.false1039.i, %if.then1035.i
  %cond1044.i = phi i8* [ %cond1042.i, %cond.false1039.i ], [ getelementptr inbounds ([8 x i8]* @.str29, i64 0, i64 0), %if.then1035.i ]
  %321 = load i8** %name236.i, align 16, !tbaa !36
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([43 x i8]* @.str47, i64 0, i64 0), i8* %cond1044.i, i8* %length_chars.21583.i, i32 %conv521.i, i8* %321) #3
  br label %if.end1049.i

if.end1049.i:                                     ; preds = %cond.end1043.i, %cond.end1031.i, %cond.end1007.i, %cond.end986.i, %if.else969.i, %if.end935.i
  %wanted_type_name.0.i = phi i8* [ %307, %cond.end1043.i ], [ %307, %cond.end1031.i ], [ %307, %cond.end1007.i ], [ %307, %cond.end986.i ], [ %307, %if.else969.i ], [ null, %if.end935.i ]
  %wanted_type.0.i = phi %union.tree_node* [ %306, %cond.end1043.i ], [ %306, %cond.end1031.i ], [ %306, %cond.end1007.i ], [ %306, %cond.end986.i ], [ %306, %if.else969.i ], [ null, %if.end935.i ]
  %322 = load i64* %first_arg_num380, align 8, !tbaa !19
  %cmp1051.i = icmp eq i64 %322, 0
  br i1 %cmp1051.i, label %cleanup.i, label %if.end1054.i

if.end1054.i:                                     ; preds = %if.end1049.i
  %pointer_count1055.i = getelementptr inbounds i8** %format_chars5351656.i, i64 1
  %323 = bitcast i8** %pointer_count1055.i to i32*
  %324 = load i32* %323, align 4, !tbaa !88
  %cmp1056.i = icmp eq i32 %324, 0
  br i1 %cmp1056.i, label %land.lhs.true1058.i, label %lor.lhs.false1061.i

land.lhs.true1058.i:                              ; preds = %if.end1054.i
  %325 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !5
  %cmp1059.i = icmp eq %union.tree_node* %wanted_type.0.i, %325
  %tobool1062.i = icmp ne i32 %suppressed.0.i, 0
  %or.cond1154.i = or i1 %cmp1059.i, %tobool1062.i
  br i1 %or.cond1154.i, label %if.then1063.i, label %if.else1072.i

lor.lhs.false1061.i:                              ; preds = %if.end1054.i
  %tobool1062.old.i = icmp eq i32 %suppressed.0.i, 0
  br i1 %tobool1062.old.i, label %if.else1072.i, label %if.then1063.i

if.then1063.i:                                    ; preds = %lor.lhs.false1061.i, %land.lhs.true1058.i
  %cmp1064.i = icmp eq i32 %main_arg_num.0.ph.i, 0
  br i1 %cmp1064.i, label %if.end1141.i, label %if.then1066.i

if.then1066.i:                                    ; preds = %if.then1063.i
  %tobool1067.i = icmp eq i32 %suppressed.0.i, 0
  br i1 %tobool1067.i, label %if.else1069.i, label %if.then1068.i

if.then1068.i:                                    ; preds = %if.then1066.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([52 x i8]* @.str48, i64 0, i64 0)) #3
  br label %if.end1141.i

if.else1069.i:                                    ; preds = %if.then1066.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([55 x i8]* @.str49, i64 0, i64 0)) #3
  br label %if.end1141.i

if.else1072.i:                                    ; preds = %lor.lhs.false1061.i, %land.lhs.true1058.i
  %cmp1073.i = icmp eq i32 %main_arg_num.0.ph.i, 0
  br i1 %cmp1073.i, label %if.else1077.i, label %if.then1075.i

if.then1075.i:                                    ; preds = %if.else1072.i
  %conv1076.i = sext i32 %main_arg_num.0.ph.i to i64
  %326 = load %union.tree_node** %main_arg_params.i, align 8, !tbaa !5
  store %union.tree_node* %326, %union.tree_node** %params.addr.i, align 8, !tbaa !5
  br label %if.end1088.i

if.else1077.i:                                    ; preds = %if.else1072.i
  %inc1078.i = add i64 %arg_num.addr.6.i, 1
  %cmp1079.i = icmp sgt i32 %has_operand_number.5.i, 0
  br i1 %cmp1079.i, label %if.then1081.i, label %if.else1082.i

if.then1081.i:                                    ; preds = %if.else1077.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([35 x i8]* @.str50, i64 0, i64 0)) #3
  br label %cleanup.i

if.else1082.i:                                    ; preds = %if.else1077.i
  %327 = load %union.tree_node** %params.addr.i, align 8, !tbaa !5
  %cmp1084.i = icmp eq %union.tree_node* %327, null
  br i1 %cmp1084.i, label %if.then1086.i, label %if.end1088.i

if.then1086.i:                                    ; preds = %if.else1082.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([29 x i8]* @.str22, i64 0, i64 0)) #3
  br label %cleanup.i

if.end1088.i:                                     ; preds = %if.else1082.i, %if.then1075.i
  %328 = phi %union.tree_node* [ %326, %if.then1075.i ], [ %327, %if.else1082.i ]
  %has_operand_number.6.i = phi i32 [ %has_operand_number.5.i, %if.then1075.i ], [ 0, %if.else1082.i ]
  %arg_num.addr.7.i = phi i64 [ %conv1076.i, %if.then1075.i ], [ %inc1078.i, %if.else1082.i ]
  %value1090.i = getelementptr inbounds %union.tree_node* %328, i64 0, i32 0, i32 2
  %329 = bitcast i32* %value1090.i to %union.tree_node**
  %330 = load %union.tree_node** %329, align 8, !tbaa !14
  %chain1092.i = getelementptr inbounds %union.tree_node* %328, i64 0, i32 0, i32 0, i32 0
  %331 = load %union.tree_node** %chain1092.i, align 8, !tbaa !12
  store %union.tree_node* %331, %union.tree_node** %params.addr.i, align 8, !tbaa !5
  store %union.tree_node* %wanted_type.0.i, %union.tree_node** %wanted_type1093.i, align 8, !tbaa !55
  store i8* %wanted_type_name.0.i, i8** %wanted_type_name1094.i, align 8, !tbaa !89
  %add1096.i = add nsw i32 %324, %aflag.01588.i
  store i32 %add1096.i, i32* %pointer_count1097.i, align 8, !tbaa !90
  store i32 0, i32* %char_lenient_flag1098.i, align 4, !tbaa !91
  %332 = load i8** %.pre619, align 8, !tbaa !77
  %call1100.i = call i8* @strchr(i8* %332, i32 99) #3
  %not.cmp1101.i = icmp ne i8* %call1100.i, null
  %.1602.i = zext i1 %not.cmp1101.i to i32
  store i32 %.1602.i, i32* %char_lenient_flag1098.i, align 4, !tbaa !91
  store i32 0, i32* %writing_in_flag1106.i, align 8, !tbaa !92
  store i32 0, i32* %reading_from_flag1107.i, align 4, !tbaa !93
  %tobool1108.i = icmp eq i32 %aflag.01588.i, 0
  br i1 %tobool1108.i, label %if.else1111.i, label %if.then1109.i

if.then1109.i:                                    ; preds = %if.end1088.i
  store i32 1, i32* %writing_in_flag1106.i, align 8, !tbaa !92
  br label %if.end1126.i

if.else1111.i:                                    ; preds = %if.end1088.i
  %call1113.i = call i8* @strchr(i8* %332, i32 87) #3
  %cmp1114.i = icmp eq i8* %call1113.i, null
  br i1 %cmp1114.i, label %if.end1118.i, label %if.then1116.i

if.then1116.i:                                    ; preds = %if.else1111.i
  store i32 1, i32* %writing_in_flag1106.i, align 8, !tbaa !92
  br label %if.end1118.i

if.end1118.i:                                     ; preds = %if.then1116.i, %if.else1111.i
  %call1120.i = call i8* @strchr(i8* %332, i32 82) #3
  %cmp1121.i = icmp eq i8* %call1120.i, null
  br i1 %cmp1121.i, label %if.end1126.i, label %if.then1123.i

if.then1123.i:                                    ; preds = %if.end1118.i
  store i32 1, i32* %reading_from_flag1107.i, align 4, !tbaa !93
  br label %if.end1126.i

if.end1126.i:                                     ; preds = %if.then1123.i, %if.end1118.i, %if.then1109.i
  store i8* null, i8** %name1127.i, align 8, !tbaa !57
  store %union.tree_node* %330, %union.tree_node** %param1128.i, align 8, !tbaa !58
  %conv1129.i = trunc i64 %arg_num.addr.7.i to i32
  store i32 %conv1129.i, i32* %arg_num1130.i, align 8, !tbaa !59
  store %struct.format_wanted_type* null, %struct.format_wanted_type** %next1131.i, align 8, !tbaa !60
  %cmp1132.i = icmp eq %struct.format_wanted_type* %last_wanted_type.1.i, null
  br i1 %cmp1132.i, label %if.end1141.thread.i, label %if.then1134.i

if.then1134.i:                                    ; preds = %if.end1126.i
  %next1135.i = getelementptr inbounds %struct.format_wanted_type* %last_wanted_type.1.i, i64 0, i32 9
  store %struct.format_wanted_type* %main_wanted_type.i, %struct.format_wanted_type** %next1135.i, align 8, !tbaa !60
  br label %if.end1141.thread.i

if.end1141.thread.i:                              ; preds = %if.then1134.i, %if.end1126.i
  %cmp1137.i = icmp eq %struct.format_wanted_type* %first_wanted_type.3.i, null
  %main_wanted_type.first_wanted_type.3.i = select i1 %cmp1137.i, %struct.format_wanted_type* %main_wanted_type.i, %struct.format_wanted_type* %first_wanted_type.3.i
  br label %if.then1144.thread.i

if.end1141.i:                                     ; preds = %if.else1069.i, %if.then1068.i, %if.then1063.i
  %cmp1142.i = icmp eq %struct.format_wanted_type* %first_wanted_type.3.i, null
  br i1 %cmp1142.i, label %cleanup.i, label %if.then1144.thread.i

if.then1144.thread.i:                             ; preds = %if.end1141.i, %if.end1141.thread.i
  %arg_num.addr.81596.ph.i = phi i64 [ %arg_num.addr.7.i, %if.end1141.thread.i ], [ %arg_num.addr.6.i, %if.end1141.i ]
  %has_operand_number.71595.ph.i = phi i32 [ %has_operand_number.6.i, %if.end1141.thread.i ], [ %has_operand_number.5.i, %if.end1141.i ]
  %first_wanted_type.51594.ph.i = phi %struct.format_wanted_type* [ %main_wanted_type.first_wanted_type.3.i, %if.end1141.thread.i ], [ %first_wanted_type.3.i, %if.end1141.i ]
  br label %for.body.i1553.i

for.body.i1553.i:                                 ; preds = %for.inc391.i.i, %if.then1144.thread.i
  %types.addr.0526.i.i = phi %struct.format_wanted_type* [ %389, %for.inc391.i.i ], [ %first_wanted_type.51594.ph.i, %if.then1144.thread.i ]
  %param.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 7
  %333 = load %union.tree_node** %param.i.i, align 8, !tbaa !58
  %type.i1551.i = getelementptr inbounds %union.tree_node* %333, i64 0, i32 0, i32 0, i32 1
  %334 = load %union.tree_node** %type.i1551.i, align 8, !tbaa !16
  %335 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !5
  %cmp1.i1552.i = icmp eq %union.tree_node* %334, %335
  br i1 %cmp1.i1552.i, label %for.inc391.i.i, label %if.end.i1555.i

if.end.i1555.i:                                   ; preds = %for.body.i1553.i
  %wanted_type2.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 0
  %336 = load %union.tree_node** %wanted_type2.i.i, align 8, !tbaa !55
  %arg_num3.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 8
  %337 = load i32* %arg_num3.i.i, align 4, !tbaa !59
  %cmp4.i1554.i = icmp eq %union.tree_node* %336, null
  br i1 %cmp4.i1554.i, label %if.then5.i.i, label %if.end6.i.i

if.then5.i.i:                                     ; preds = %if.end.i1555.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 2275, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.check_format_types, i64 0, i64 0)) #7
  unreachable

if.end6.i.i:                                      ; preds = %if.end.i1555.i
  %338 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !5
  %cmp7.i.i = icmp eq %union.tree_node* %336, %338
  %pointer_count.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 2
  %339 = load i32* %pointer_count.i.i, align 4, !tbaa !90
  %cmp8.i.i = icmp eq i32 %339, 0
  br i1 %cmp7.i.i, label %land.lhs.true.i1556.i, label %if.end10.i.i

land.lhs.true.i1556.i:                            ; preds = %if.end6.i.i
  br i1 %cmp8.i.i, label %if.then9.i.i, label %while.cond.preheader.i.i

if.then9.i.i:                                     ; preds = %land.lhs.true.i1556.i
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 2277, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.check_format_types, i64 0, i64 0)) #7
  unreachable

if.end10.i.i:                                     ; preds = %if.end6.i.i
  br i1 %cmp8.i.i, label %if.then13.i1558.i, label %while.cond.preheader.i.i

if.then13.i1558.i:                                ; preds = %if.end10.i.i
  %call.i1557.i = call %union.tree_node* @simple_type_promotes_to(%union.tree_node* %336) #3
  %cmp14.i.i = icmp eq %union.tree_node* %call.i1557.i, null
  %.call.i.i = select i1 %cmp14.i.i, %union.tree_node* %336, %union.tree_node* %call.i1557.i
  %.pre536.i.i = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !5
  br label %while.cond.preheader.i.i

while.cond.preheader.i.i:                         ; preds = %if.then13.i1558.i, %if.end10.i.i, %land.lhs.true.i1556.i
  %340 = phi %union.tree_node* [ %.pre536.i.i, %if.then13.i1558.i ], [ %335, %if.end10.i.i ], [ %335, %land.lhs.true.i1556.i ]
  %wanted_type.0.ph.i.i = phi %union.tree_node* [ %.call.i.i, %if.then13.i1558.i ], [ %336, %if.end10.i.i ], [ %336, %land.lhs.true.i1556.i ]
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %land.rhs.i.i, %while.cond.preheader.i.i
  %cur_param.0.i.i = phi %union.tree_node* [ %341, %land.rhs.i.i ], [ %333, %while.cond.preheader.i.i ]
  %code.i1559.i = getelementptr inbounds %union.tree_node* %cur_param.0.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1560.i = load i32* %code.i1559.i, align 8
  %bf.clear.i1561.i = and i32 %bf.load.i1560.i, 255
  %bf.clear.off.i.i = add i32 %bf.clear.i1561.i, -114
  %switch.i.i = icmp ult i32 %bf.clear.off.i.i, 3
  br i1 %switch.i.i, label %land.lhs.true31.i.i, label %for.cond52.preheader.i.i

land.lhs.true31.i.i:                              ; preds = %while.cond.i.i
  %operands.i.i = getelementptr inbounds %union.tree_node* %cur_param.0.i.i, i64 0, i32 0, i32 2
  %arrayidx.i1562.i = bitcast i32* %operands.i.i to %union.tree_node**
  %341 = load %union.tree_node** %arrayidx.i1562.i, align 8, !tbaa !5
  %cmp32.i.i = icmp eq %union.tree_node* %341, %340
  br i1 %cmp32.i.i, label %for.cond52.preheader.i.i, label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %land.lhs.true31.i.i
  %type34.i.i = getelementptr inbounds %union.tree_node* %cur_param.0.i.i, i64 0, i32 0, i32 0, i32 1
  %342 = load %union.tree_node** %type34.i.i, align 8, !tbaa !16
  %type35.i.i = bitcast %union.tree_node* %342 to %struct.tree_type*
  %mode.i.i = getelementptr inbounds %struct.tree_type* %type35.i.i, i64 0, i32 6
  %bf.load36.i.i = load i32* %mode.i.i, align 4
  %type42.i.i = getelementptr inbounds %union.tree_node* %341, i64 0, i32 0, i32 0, i32 1
  %343 = load %union.tree_node** %type42.i.i, align 8, !tbaa !16
  %type43.i.i = bitcast %union.tree_node* %343 to %struct.tree_type*
  %mode44.i.i = getelementptr inbounds %struct.tree_type* %type43.i.i, i64 0, i32 6
  %bf.load45.i.i = load i32* %mode44.i.i, align 4
  %bf.lshr509.i.i = xor i32 %bf.load45.i.i, %bf.load36.i.i
  %344 = and i32 %bf.lshr509.i.i, 65024
  %cmp48.i.i = icmp eq i32 %344, 0
  br i1 %cmp48.i.i, label %while.cond.i.i, label %for.cond52.preheader.i.i

for.cond52.preheader.i.i:                         ; preds = %land.rhs.i.i, %land.lhs.true31.i.i, %while.cond.i.i
  %345 = load i32* %pointer_count.i.i, align 4, !tbaa !90
  %cmp54518.i.i = icmp sgt i32 %345, 0
  br i1 %cmp54518.i.i, label %for.body55.lr.ph.i.i, label %for.end.i1567.i

for.body55.lr.ph.i.i:                             ; preds = %for.cond52.preheader.i.i
  %writing_in_flag.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 4
  %reading_from_flag.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 5
  br label %for.body55.i.i

for.body55.i.i:                                   ; preds = %for.inc.i1566.i, %for.body55.lr.ph.i.i
  %346 = phi i32 [ %345, %for.body55.lr.ph.i.i ], [ %357, %for.inc.i1566.i ]
  %i.0521.i.i = phi i32 [ 0, %for.body55.lr.ph.i.i ], [ %inc.i1565.i, %for.inc.i1566.i ]
  %cur_param.1520.i.i = phi %union.tree_node* [ %cur_param.0.i.i, %for.body55.lr.ph.i.i ], [ %cur_param.2.i.i, %for.inc.i1566.i ]
  %cur_type.0519.i.i = phi %union.tree_node* [ %334, %for.body55.lr.ph.i.i ], [ %347, %for.inc.i1566.i ]
  %code57.i.i = getelementptr inbounds %union.tree_node* %cur_type.0519.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load58.i.i = load i32* %code57.i.i, align 8
  %bf.clear59.i.i = and i32 %bf.load58.i.i, 255
  %cmp60.i.i = icmp eq i32 %bf.clear59.i.i, 13
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.else162.i.i

if.then61.i.i:                                    ; preds = %for.body55.i.i
  %type63.i.i = getelementptr inbounds %union.tree_node* %cur_type.0519.i.i, i64 0, i32 0, i32 0, i32 1
  %347 = load %union.tree_node** %type63.i.i, align 8, !tbaa !16
  %348 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !5
  %cmp64.i.i = icmp eq %union.tree_node* %347, %348
  br i1 %cmp64.i.i, label %for.end.i1567.i, label %if.end66.i.i

if.end66.i.i:                                     ; preds = %if.then61.i.i
  %349 = load i32* %writing_in_flag.i.i, align 4, !tbaa !92
  %tobool.i1563.i = icmp ne i32 %349, 0
  %cmp68.i.i = icmp eq i32 %i.0521.i.i, 0
  %or.cond.i1564.i = and i1 %tobool.i1563.i, %cmp68.i.i
  %cmp70.i.i = icmp ne %union.tree_node* %cur_param.1520.i.i, null
  %or.cond394.i.i = and i1 %or.cond.i1564.i, %cmp70.i.i
  br i1 %or.cond394.i.i, label %land.lhs.true71.i.i, label %if.end75.i.i

land.lhs.true71.i.i:                              ; preds = %if.end66.i.i
  %call72.i.i = call i32 @integer_zerop(%union.tree_node* %cur_param.1520.i.i) #3
  %tobool73.i.i = icmp eq i32 %call72.i.i, 0
  br i1 %tobool73.i.i, label %if.end75.i.i, label %if.then74.i.i

if.then74.i.i:                                    ; preds = %land.lhs.true71.i.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([38 x i8]* @.str51, i64 0, i64 0), i32 %337) #3
  br label %if.end75.i.i

if.end75.i.i:                                     ; preds = %if.then74.i.i, %land.lhs.true71.i.i, %if.end66.i.i
  %350 = load i32* %reading_from_flag.i.i, align 4, !tbaa !93
  %tobool76.i.i = icmp ne i32 %350, 0
  %or.cond395.i.i = and i1 %tobool76.i.i, %cmp68.i.i
  %or.cond396.i.i = and i1 %or.cond395.i.i, %cmp70.i.i
  br i1 %or.cond396.i.i, label %land.lhs.true81.i.i, label %if.end85.i.i

land.lhs.true81.i.i:                              ; preds = %if.end75.i.i
  %call82.i.i = call i32 @integer_zerop(%union.tree_node* %cur_param.1520.i.i) #3
  %tobool83.i.i = icmp eq i32 %call82.i.i, 0
  br i1 %tobool83.i.i, label %if.end85.i.i, label %if.then84.i.i

if.then84.i.i:                                    ; preds = %land.lhs.true81.i.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([38 x i8]* @.str52, i64 0, i64 0), i32 %337) #3
  br label %if.end85.i.i

if.end85.i.i:                                     ; preds = %if.then84.i.i, %land.lhs.true81.i.i, %if.end75.i.i
  br i1 %cmp70.i.i, label %land.lhs.true87.i.i, label %if.end97.i.i

land.lhs.true87.i.i:                              ; preds = %if.end85.i.i
  %code89.i.i = getelementptr inbounds %union.tree_node* %cur_param.1520.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load90.i.i = load i32* %code89.i.i, align 8
  %bf.clear91.i.i = and i32 %bf.load90.i.i, 255
  %cmp92.i.i = icmp eq i32 %bf.clear91.i.i, 121
  br i1 %cmp92.i.i, label %if.then93.i.i, label %if.end97.i.i

if.then93.i.i:                                    ; preds = %land.lhs.true87.i.i
  %operands95.i.i = getelementptr inbounds %union.tree_node* %cur_param.1520.i.i, i64 0, i32 0, i32 2
  %arrayidx96.i.i = bitcast i32* %operands95.i.i to %union.tree_node**
  %351 = load %union.tree_node** %arrayidx96.i.i, align 8, !tbaa !5
  br label %if.end97.i.i

if.end97.i.i:                                     ; preds = %if.then93.i.i, %land.lhs.true87.i.i, %if.end85.i.i
  %cur_param.2.i.i = phi %union.tree_node* [ %351, %if.then93.i.i ], [ null, %land.lhs.true87.i.i ], [ null, %if.end85.i.i ]
  %352 = load i32* %writing_in_flag.i.i, align 4, !tbaa !92
  %tobool99.i.i = icmp ne i32 %352, 0
  %or.cond397.i.i = and i1 %tobool99.i.i, %cmp68.i.i
  br i1 %or.cond397.i.i, label %land.lhs.true102.i.i, label %if.end136.i.i

land.lhs.true102.i.i:                             ; preds = %if.end97.i.i
  %readonly_flag.i.i = getelementptr inbounds %union.tree_node* %347, i64 0, i32 0, i32 0, i32 2
  %bf.load104.i.i = load i32* %readonly_flag.i.i, align 8
  %bf.clear106.i.i = and i32 %bf.load104.i.i, 4096
  %tobool107.i.i = icmp eq i32 %bf.clear106.i.i, 0
  br i1 %tobool107.i.i, label %lor.lhs.false108.i.i, label %if.then135.i.i

lor.lhs.false108.i.i:                             ; preds = %land.lhs.true102.i.i
  %cmp109.i.i = icmp eq %union.tree_node* %cur_param.2.i.i, null
  br i1 %cmp109.i.i, label %if.end136.i.i, label %land.lhs.true110.i.i

land.lhs.true110.i.i:                             ; preds = %lor.lhs.false108.i.i
  %code112.i.i = getelementptr inbounds %union.tree_node* %cur_param.2.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load113.i.i = load i32* %code112.i.i, align 8
  %bf.clear114.i.i = and i32 %bf.load113.i.i, 255
  %idxprom508.i.i = zext i32 %bf.clear114.i.i to i64
  %arrayidx115.i.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom508.i.i
  %353 = load i8* %arrayidx115.i.i, align 1, !tbaa !38
  switch i8 %353, label %if.end136.i.i [
    i8 99, label %if.then135.i.i
    i8 100, label %land.lhs.true128.i.i
  ]

land.lhs.true128.i.i:                             ; preds = %land.lhs.true110.i.i
  %bf.clear133.i.i = and i32 %bf.load113.i.i, 4096
  %tobool134.i.i = icmp eq i32 %bf.clear133.i.i, 0
  br i1 %tobool134.i.i, label %if.end136.i.i, label %if.then135.i.i

if.then135.i.i:                                   ; preds = %land.lhs.true128.i.i, %land.lhs.true110.i.i, %land.lhs.true102.i.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([38 x i8]* @.str53, i64 0, i64 0), i32 %337) #3
  br label %if.end136.i.i

if.end136.i.i:                                    ; preds = %if.then135.i.i, %land.lhs.true128.i.i, %land.lhs.true110.i.i, %lor.lhs.false108.i.i, %if.end97.i.i
  %cmp137.i.i = icmp sgt i32 %i.0521.i.i, 0
  %354 = load i32* @pedantic, align 4
  %tobool140.i.i = icmp ne i32 %354, 0
  %or.cond398.i.i = and i1 %cmp137.i.i, %tobool140.i.i
  br i1 %or.cond398.i.i, label %land.lhs.true141.i.i, label %for.inc.i1566.i

land.lhs.true141.i.i:                             ; preds = %if.end136.i.i
  %readonly_flag143.i.i = getelementptr inbounds %union.tree_node* %347, i64 0, i32 0, i32 0, i32 2
  %bf.load144.i.i = load i32* %readonly_flag143.i.i, align 8
  %355 = and i32 %bf.load144.i.i, 6144
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %lor.lhs.false154.i.i, label %if.then160.i.i

lor.lhs.false154.i.i:                             ; preds = %land.lhs.true141.i.i
  %type155.i.i = bitcast %union.tree_node* %347 to %struct.tree_type*
  %restrict_flag.i.i = getelementptr inbounds %struct.tree_type* %type155.i.i, i64 0, i32 6
  %bf.load156.i.i = load i32* %restrict_flag.i.i, align 4
  %bf.clear158.i.i = and i32 %bf.load156.i.i, 2097152
  %tobool159.i.i = icmp eq i32 %bf.clear158.i.i, 0
  br i1 %tobool159.i.i, label %for.inc.i1566.i, label %if.then160.i.i

if.then160.i.i:                                   ; preds = %lor.lhs.false154.i.i, %land.lhs.true141.i.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([50 x i8]* @.str54, i64 0, i64 0), i32 %337) #3
  br label %for.inc.i1566.i

if.else162.i.i:                                   ; preds = %for.body55.i.i
  %cmp164.i.i = icmp eq i32 %346, 1
  br i1 %cmp164.i.i, label %if.then166.i.i, label %if.else167.i.i

if.then166.i.i:                                   ; preds = %if.else162.i.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([42 x i8]* @.str55, i64 0, i64 0), i32 %337) #3
  br label %for.end.i1567.i

if.else167.i.i:                                   ; preds = %if.else162.i.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([55 x i8]* @.str56, i64 0, i64 0), i32 %337) #3
  br label %for.end.i1567.i

for.inc.i1566.i:                                  ; preds = %if.then160.i.i, %lor.lhs.false154.i.i, %if.end136.i.i
  %inc.i1565.i = add nsw i32 %i.0521.i.i, 1
  %357 = load i32* %pointer_count.i.i, align 4, !tbaa !90
  %cmp54.i.i = icmp slt i32 %inc.i1565.i, %357
  br i1 %cmp54.i.i, label %for.body55.i.i, label %for.end.i1567.i

for.end.i1567.i:                                  ; preds = %for.inc.i1566.i, %if.then61.i.i, %if.else167.i.i, %if.then166.i.i, %for.cond52.preheader.i.i
  %i.0516.i.i = phi i32 [ %i.0521.i.i, %if.then166.i.i ], [ %i.0521.i.i, %if.else167.i.i ], [ 0, %for.cond52.preheader.i.i ], [ %inc.i1565.i, %for.inc.i1566.i ], [ %i.0521.i.i, %if.then61.i.i ]
  %cur_type.1.i.i = phi %union.tree_node* [ %cur_type.0519.i.i, %if.then166.i.i ], [ %cur_type.0519.i.i, %if.else167.i.i ], [ %334, %for.cond52.preheader.i.i ], [ %347, %if.then61.i.i ], [ %347, %for.inc.i1566.i ]
  %358 = load i32* %pointer_count.i.i, align 4, !tbaa !90
  %cmp171.i.i = icmp slt i32 %i.0516.i.i, %358
  br i1 %cmp171.i.i, label %for.inc391.i.i, label %if.end174.i.i

if.end174.i.i:                                    ; preds = %for.end.i1567.i
  %type175.i.i = bitcast %union.tree_node* %cur_type.1.i.i to %struct.tree_type*
  %359 = getelementptr inbounds %union.tree_node* %cur_type.1.i.i, i64 0, i32 0, i32 15
  %360 = load %union.tree_node** %359, align 8, !tbaa !17
  %char_lenient_flag.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 3
  %361 = load i32* %char_lenient_flag.i.i, align 4, !tbaa !91
  %tobool176.i.i = icmp eq i32 %361, 0
  br i1 %tobool176.i.i, label %if.end185.i.i, label %if.then177.i.i

if.then177.i.i:                                   ; preds = %if.end174.i.i
  %362 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !5
  %cmp178.i.i = icmp eq %union.tree_node* %360, %362
  %363 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8
  %cmp181.i.i = icmp eq %union.tree_node* %360, %363
  %or.cond511.i.i = or i1 %cmp178.i.i, %cmp181.i.i
  br i1 %or.cond511.i.i, label %lor.end.i.i, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %if.then177.i.i
  %364 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 8, !tbaa !5
  %cmp183.i.i = icmp eq %union.tree_node* %360, %364
  br label %lor.end.i.i

lor.end.i.i:                                      ; preds = %lor.rhs.i.i, %if.then177.i.i
  %365 = phi i1 [ true, %if.then177.i.i ], [ %cmp183.i.i, %lor.rhs.i.i ]
  %lor.ext.i.i = zext i1 %365 to i32
  br label %if.end185.i.i

if.end185.i.i:                                    ; preds = %lor.end.i.i, %if.end174.i.i
  %char_type_flag.0.i.i = phi i32 [ %lor.ext.i.i, %lor.end.i.i ], [ 0, %if.end174.i.i ]
  %cmp186.i.i = icmp eq %union.tree_node* %wanted_type.0.ph.i.i, %360
  br i1 %cmp186.i.i, label %for.inc391.i.i, label %if.end189.i.i

if.end189.i.i:                                    ; preds = %if.end185.i.i
  %366 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !5
  %cmp190.i.i = icmp eq %union.tree_node* %wanted_type.0.ph.i.i, %366
  br i1 %cmp190.i.i, label %land.lhs.true192.i.i, label %if.end200.i.i

land.lhs.true192.i.i:                             ; preds = %if.end189.i.i
  %367 = load i32* @pedantic, align 4, !tbaa !1
  %tobool193.i.i = icmp eq i32 %367, 0
  br i1 %tobool193.i.i, label %for.inc391.i.i, label %lor.lhs.false194.i.i

lor.lhs.false194.i.i:                             ; preds = %land.lhs.true192.i.i
  %cmp195.i.i = icmp eq i32 %i.0516.i.i, 1
  %tobool198.i.i = icmp ne i32 %char_type_flag.0.i.i, 0
  %or.cond399.i.i = and i1 %cmp195.i.i, %tobool198.i.i
  br i1 %or.cond399.i.i, label %for.inc391.i.i, label %if.end200.i.i

if.end200.i.i:                                    ; preds = %lor.lhs.false194.i.i, %if.end189.i.i
  %code202.i.i = getelementptr inbounds %union.tree_node* %wanted_type.0.ph.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load203.i.i = load i32* %code202.i.i, align 8
  %bf.clear204.i.i = and i32 %bf.load203.i.i, 255
  %cmp205.i.i = icmp eq i32 %bf.clear204.i.i, 6
  br i1 %cmp205.i.i, label %land.lhs.true207.i.i, label %if.end237.i.i

land.lhs.true207.i.i:                             ; preds = %if.end200.i.i
  %code209.i.i = getelementptr inbounds %union.tree_node* %360, i64 0, i32 0, i32 0, i32 2
  %bf.load210.i.i = load i32* %code209.i.i, align 8
  %bf.clear211.i.i = and i32 %bf.load210.i.i, 255
  %cmp212.i.i = icmp eq i32 %bf.clear211.i.i, 6
  br i1 %cmp212.i.i, label %land.lhs.true214.i.i, label %if.end237.i.i

land.lhs.true214.i.i:                             ; preds = %land.lhs.true207.i.i
  %368 = load i32* @pedantic, align 4, !tbaa !1
  %tobool215.i.i = icmp eq i32 %368, 0
  %cmp217.i.i = icmp eq i32 %i.0516.i.i, 0
  %or.cond400.i.i = or i1 %tobool215.i.i, %cmp217.i.i
  br i1 %or.cond400.i.i, label %land.lhs.true224.i.i, label %lor.lhs.false219.i.i

lor.lhs.false219.i.i:                             ; preds = %land.lhs.true214.i.i
  %cmp220.i.i = icmp eq i32 %i.0516.i.i, 1
  %tobool223.i.i = icmp ne i32 %char_type_flag.0.i.i, 0
  %or.cond401.i.i = and i1 %cmp220.i.i, %tobool223.i.i
  br i1 %or.cond401.i.i, label %land.lhs.true224.i.i, label %if.end237.i.i

land.lhs.true224.i.i:                             ; preds = %lor.lhs.false219.i.i, %land.lhs.true214.i.i
  %bf.clear228.i.i = and i32 %bf.load203.i.i, 8192
  %tobool229.i.i = icmp eq i32 %bf.clear228.i.i, 0
  br i1 %tobool229.i.i, label %cond.false.i.i, label %cond.true.i.i

cond.true.i.i:                                    ; preds = %land.lhs.true224.i.i
  %call230.i.i = call %union.tree_node* @unsigned_type(%union.tree_node* %360) #3
  %cmp231.i.i = icmp eq %union.tree_node* %wanted_type.0.ph.i.i, %call230.i.i
  br i1 %cmp231.i.i, label %for.inc391.i.i, label %if.end237.i.i

cond.false.i.i:                                   ; preds = %land.lhs.true224.i.i
  %call233.i.i = call %union.tree_node* @signed_type(%union.tree_node* %360) #3
  %cmp234.i.i = icmp eq %union.tree_node* %wanted_type.0.ph.i.i, %call233.i.i
  br i1 %cmp234.i.i, label %for.inc391.i.i, label %if.end237.i.i

if.end237.i.i:                                    ; preds = %cond.false.i.i, %cond.true.i.i, %lor.lhs.false219.i.i, %land.lhs.true207.i.i, %if.end200.i.i
  %369 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !5
  %cmp238.i.i = icmp eq %union.tree_node* %wanted_type.0.ph.i.i, %369
  br i1 %cmp238.i.i, label %land.lhs.true240.i.i, label %if.end248.i.i

land.lhs.true240.i.i:                             ; preds = %if.end237.i.i
  %370 = load i32* @pedantic, align 4, !tbaa !1
  %tobool241.i.i = icmp eq i32 %370, 0
  %cmp243.i.i = icmp slt i32 %i.0516.i.i, 2
  %or.cond402.i.i = or i1 %tobool241.i.i, %cmp243.i.i
  %tobool246.i.i = icmp ne i32 %char_type_flag.0.i.i, 0
  %or.cond403.i.i = and i1 %or.cond402.i.i, %tobool246.i.i
  br i1 %or.cond403.i.i, label %for.inc391.i.i, label %if.end248.i.i

if.end248.i.i:                                    ; preds = %land.lhs.true240.i.i, %if.end237.i.i
  %type249.i.i = bitcast %union.tree_node* %wanted_type.0.ph.i.i to %struct.tree_type*
  %371 = getelementptr inbounds %union.tree_node* %wanted_type.0.ph.i.i, i64 0, i32 0, i32 11
  %372 = load %union.tree_node** %371, align 8, !tbaa !94
  %name250.i.i = getelementptr inbounds %union.tree_node* %372, i64 0, i32 0, i32 8
  %373 = load %union.tree_node** %name250.i.i, align 8, !tbaa !95
  %id.i.i = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 1
  %374 = getelementptr inbounds i8** %id.i.i, i64 1
  %375 = load i8** %374, align 8, !tbaa !21
  %376 = getelementptr inbounds %union.tree_node* %cur_type.1.i.i, i64 0, i32 0, i32 11
  %377 = load %union.tree_node** %376, align 8, !tbaa !94
  %cmp253.i.i = icmp eq %union.tree_node* %377, null
  %code314.phi.trans.insert.i.i = getelementptr inbounds %union.tree_node* %cur_type.1.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load315.pre.i.i = load i32* %code314.phi.trans.insert.i.i, align 8
  %bf.clear316.i.pre.i = and i32 %bf.load315.pre.i.i, 255
  br i1 %cmp253.i.i, label %if.then312.i.i, label %land.lhs.true255.i.i

land.lhs.true255.i.i:                             ; preds = %if.end248.i.i
  switch i32 %bf.clear316.i.pre.i, label %if.then278.i.i [
    i32 6, label %if.then312.i.i
    i32 13, label %land.lhs.true269.i.i
  ]

land.lhs.true269.i.i:                             ; preds = %land.lhs.true255.i.i
  %type271.i.i = getelementptr inbounds %union.tree_node* %cur_type.1.i.i, i64 0, i32 0, i32 0, i32 1
  %378 = load %union.tree_node** %type271.i.i, align 8, !tbaa !16
  %code273.i.i = getelementptr inbounds %union.tree_node* %378, i64 0, i32 0, i32 0, i32 2
  %bf.load274.i.i = load i32* %code273.i.i, align 8
  %bf.clear275.i.i = and i32 %bf.load274.i.i, 255
  %cmp276.i.i = icmp eq i32 %bf.clear275.i.i, 6
  br i1 %cmp276.i.i, label %if.then312.i.i, label %if.then278.i.i

if.then278.i.i:                                   ; preds = %land.lhs.true269.i.i, %land.lhs.true255.i.i
  %code282.i.i = getelementptr inbounds %union.tree_node* %377, i64 0, i32 0, i32 0, i32 2
  %bf.load283.i.i = load i32* %code282.i.i, align 8
  %bf.clear284.i.i = and i32 %bf.load283.i.i, 255
  %cmp285.i.i = icmp eq i32 %bf.clear284.i.i, 33
  br i1 %cmp285.i.i, label %land.lhs.true287.i.i, label %if.else302.i.i

land.lhs.true287.i.i:                             ; preds = %if.then278.i.i
  %name291.i.i = getelementptr inbounds %union.tree_node* %377, i64 0, i32 0, i32 8
  %379 = load %union.tree_node** %name291.i.i, align 8, !tbaa !95
  %cmp292.i.i = icmp eq %union.tree_node* %379, null
  br i1 %cmp292.i.i, label %if.else302.i.i, label %if.end309.i.i

if.else302.i.i:                                   ; preds = %land.lhs.true287.i.i, %if.then278.i.i
  br label %if.end309.i.i

if.end309.i.i:                                    ; preds = %if.else302.i.i, %land.lhs.true287.i.i
  %.pn.i.i = phi %union.tree_node* [ %377, %if.else302.i.i ], [ %379, %land.lhs.true287.i.i ]
  %id300.pn.i.i = getelementptr inbounds %union.tree_node* %.pn.i.i, i64 0, i32 0, i32 1
  %that.0.in.i.i = getelementptr inbounds i8** %id300.pn.i.i, i64 1
  %that.0.i.i = load i8** %that.0.in.i.i, align 8
  %cmp310.i.i = icmp eq i8* %that.0.i.i, null
  br i1 %cmp310.i.i, label %if.then312.i.i, label %if.end322.i.i

if.then312.i.i:                                   ; preds = %if.end309.i.i, %land.lhs.true269.i.i, %land.lhs.true255.i.i, %if.end248.i.i
  %bf.clear316.i.pre-phi.i = phi i32 [ %bf.clear316.i.pre.i, %if.end309.i.i ], [ 13, %land.lhs.true269.i.i ], [ 6, %land.lhs.true255.i.i ], [ %bf.clear316.i.pre.i, %if.end248.i.i ]
  %380 = phi %union.tree_node* [ %377, %if.end309.i.i ], [ %377, %land.lhs.true269.i.i ], [ %377, %land.lhs.true255.i.i ], [ null, %if.end248.i.i ]
  %cmp317.i.i = icmp eq i32 %bf.clear316.i.pre-phi.i, 13
  %..i.i = select i1 %cmp317.i.i, i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8]* @.str58, i64 0, i64 0)
  br label %if.end322.i.i

if.end322.i.i:                                    ; preds = %if.then312.i.i, %if.end309.i.i
  %381 = phi %union.tree_node* [ %377, %if.end309.i.i ], [ %380, %if.then312.i.i ]
  %that.1.i.i = phi i8* [ %that.0.i.i, %if.end309.i.i ], [ %..i.i, %if.then312.i.i ]
  %cmp327.i.i = icmp eq i32 %bf.clear316.i.pre.i, 6
  br i1 %cmp327.i.i, label %land.lhs.true329.i.i, label %if.end368.i.i

land.lhs.true329.i.i:                             ; preds = %if.end322.i.i
  %bf.load332.i.i = load i32* %code202.i.i, align 8
  %bf.clear333.i.i = and i32 %bf.load332.i.i, 255
  %cmp334.i.i = icmp eq i32 %bf.clear333.i.i, 6
  br i1 %cmp334.i.i, label %land.lhs.true336.i.i, label %if.end368.i.i

land.lhs.true336.i.i:                             ; preds = %land.lhs.true329.i.i
  %precision.i.i = getelementptr inbounds %struct.tree_type* %type175.i.i, i64 0, i32 6
  %bf.load338.i.i = load i32* %precision.i.i, align 4
  %precision341.i.i = getelementptr inbounds %struct.tree_type* %type249.i.i, i64 0, i32 6
  %bf.load342.i.i = load i32* %precision341.i.i, align 4
  %382 = xor i32 %bf.load342.i.i, %bf.load338.i.i
  %383 = and i32 %382, 511
  %cmp344.i.i = icmp ne i32 %383, 0
  %cmp349.i.i = icmp eq %union.tree_node* %381, null
  %or.cond544.i.i = or i1 %cmp344.i.i, %cmp349.i.i
  br i1 %or.cond544.i.i, label %if.end368.i.i, label %land.lhs.true351.i.i

land.lhs.true351.i.i:                             ; preds = %land.lhs.true336.i.i
  %code355.i.i = getelementptr inbounds %union.tree_node* %381, i64 0, i32 0, i32 0, i32 2
  %bf.load356.i.i = load i32* %code355.i.i, align 8
  %bf.clear357.i.i = and i32 %bf.load356.i.i, 255
  %cmp358.i.i = icmp eq i32 %bf.clear357.i.i, 33
  br i1 %cmp358.i.i, label %if.then360.i.i, label %if.end368.i.i

if.then360.i.i:                                   ; preds = %land.lhs.true351.i.i
  %name364.i.i = getelementptr inbounds %union.tree_node* %381, i64 0, i32 0, i32 8
  %384 = load %union.tree_node** %name364.i.i, align 8, !tbaa !95
  %id366.i.i = getelementptr inbounds %union.tree_node* %384, i64 0, i32 0, i32 1
  %385 = getelementptr inbounds i8** %id366.i.i, i64 1
  %386 = load i8** %385, align 8, !tbaa !21
  br label %if.end368.i.i

if.end368.i.i:                                    ; preds = %if.then360.i.i, %land.lhs.true351.i.i, %land.lhs.true336.i.i, %land.lhs.true329.i.i, %if.end322.i.i
  %that.2.i.i = phi i8* [ %386, %if.then360.i.i ], [ %that.1.i.i, %land.lhs.true351.i.i ], [ %that.1.i.i, %land.lhs.true336.i.i ], [ %that.1.i.i, %land.lhs.true329.i.i ], [ %that.1.i.i, %if.end322.i.i ]
  %call369.i.i = call i32 @strcmp(i8* %375, i8* %that.2.i.i) #3
  %cmp370.i.i = icmp eq i32 %call369.i.i, 0
  br i1 %cmp370.i.i, label %for.inc391.i.i, label %if.then372.i.i

if.then372.i.i:                                   ; preds = %if.end368.i.i
  %wanted_type_name.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 1
  %387 = load i8** %wanted_type_name.i.i, align 8, !tbaa !89
  %cmp373.i.i = icmp eq i8* %387, null
  br i1 %cmp373.i.i, label %if.end382.i.i, label %land.lhs.true375.i.i

land.lhs.true375.i.i:                             ; preds = %if.then372.i.i
  %call377.i.i = call i32 @strcmp(i8* %387, i8* %that.2.i.i) #3
  %cmp378.i.i = icmp eq i32 %call377.i.i, 0
  %.513.i.i = select i1 %cmp378.i.i, i8* %375, i8* %387
  br label %if.end382.i.i

if.end382.i.i:                                    ; preds = %land.lhs.true375.i.i, %if.then372.i.i
  %this.0.i.i = phi i8* [ %375, %if.then372.i.i ], [ %.513.i.i, %land.lhs.true375.i.i ]
  %name383.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 6
  %388 = load i8** %name383.i.i, align 8, !tbaa !57
  %cmp384.i.i = icmp eq i8* %388, null
  br i1 %cmp384.i.i, label %if.else388.i.i, label %if.then386.i.i

if.then386.i.i:                                   ; preds = %if.end382.i.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([27 x i8]* @.str59, i64 0, i64 0), i8* %388, i8* %this.0.i.i, i32 %337) #3
  br label %for.inc391.i.i

if.else388.i.i:                                   ; preds = %if.end382.i.i
  call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([27 x i8]* @.str60, i64 0, i64 0), i8* %this.0.i.i, i8* %that.2.i.i, i32 %337) #3
  br label %for.inc391.i.i

for.inc391.i.i:                                   ; preds = %if.else388.i.i, %if.then386.i.i, %if.end368.i.i, %land.lhs.true240.i.i, %cond.false.i.i, %cond.true.i.i, %lor.lhs.false194.i.i, %land.lhs.true192.i.i, %if.end185.i.i, %for.end.i1567.i, %for.body.i1553.i
  %next.i.i = getelementptr inbounds %struct.format_wanted_type* %types.addr.0526.i.i, i64 0, i32 9
  %389 = load %struct.format_wanted_type** %next.i.i, align 8, !tbaa !60
  %cmp.i1568.i = icmp eq %struct.format_wanted_type* %389, null
  br i1 %cmp.i1568.i, label %cleanup.i, label %for.body.i1553.i

cleanup.i:                                        ; preds = %for.inc391.i.i, %if.end1141.i, %if.then1086.i, %if.then1081.i, %if.end1049.i, %if.end966.i, %if.then965.i, %if.else558.i, %if.then557.i, %if.then531.i, %if.then304.i, %if.then278.i, %if.then123.i, %if.then119.i, %if.then92.i, %if.then46.i, %if.then37.i, %if.then32.i, %if.end23.i, %if.then15.i.i, %lor.lhs.false10.i.i, %if.end18.i
  %cleanup.dest.slot.0.i = phi i1 [ false, %if.then32.i ], [ false, %if.then37.i ], [ true, %if.then92.i ], [ true, %if.then119.i ], [ true, %if.then304.i ], [ false, %if.then531.i ], [ true, %if.then965.i ], [ false, %if.end966.i ], [ true, %if.then1081.i ], [ true, %if.then1086.i ], [ true, %if.end18.i ], [ false, %if.end23.i ], [ true, %if.then46.i ], [ true, %if.then123.i ], [ true, %if.then278.i ], [ false, %if.else558.i ], [ false, %if.then557.i ], [ false, %if.end1049.i ], [ false, %if.end1141.i ], [ true, %lor.lhs.false10.i.i ], [ true, %if.then15.i.i ], [ false, %for.inc391.i.i ]
  %has_operand_number.8.i = phi i32 [ %has_operand_number.0.i, %if.then32.i ], [ %has_operand_number.0.i, %if.then37.i ], [ %has_operand_number.1.ph.i, %if.then92.i ], [ %has_operand_number.1.ph.i, %if.then119.i ], [ %has_operand_number.4.i, %if.then304.i ], [ %has_operand_number.5.i, %if.then531.i ], [ %has_operand_number.5.i, %if.then965.i ], [ %has_operand_number.5.i, %if.end966.i ], [ %has_operand_number.5.i, %if.then1081.i ], [ 0, %if.then1086.i ], [ %has_operand_number.0.i, %if.end18.i ], [ %has_operand_number.0.i, %if.end23.i ], [ %has_operand_number.0.i, %if.then46.i ], [ %has_operand_number.1.ph.i, %if.then123.i ], [ %has_operand_number.3.i, %if.then278.i ], [ %has_operand_number.5.i, %if.else558.i ], [ %has_operand_number.5.i, %if.then557.i ], [ %has_operand_number.5.i, %if.end1049.i ], [ %has_operand_number.5.i, %if.end1141.i ], [ %has_operand_number.0.i, %lor.lhs.false10.i.i ], [ %has_operand_number.0.i, %if.then15.i.i ], [ %has_operand_number.71595.ph.i, %for.inc391.i.i ]
  %arg_num.addr.9.i = phi i64 [ %arg_num.addr.0.i, %if.then32.i ], [ %arg_num.addr.0.i, %if.then37.i ], [ %arg_num.addr.0.i, %if.then92.i ], [ %arg_num.addr.0.i, %if.then119.i ], [ %arg_num.addr.4.i, %if.then304.i ], [ %arg_num.addr.6.i, %if.then531.i ], [ %inc962.i, %if.then965.i ], [ %inc962.i, %if.end966.i ], [ %inc1078.i, %if.then1081.i ], [ %inc1078.i, %if.then1086.i ], [ %arg_num.addr.0.i, %if.end18.i ], [ %arg_num.addr.0.i, %if.end23.i ], [ %arg_num.addr.0.i, %if.then46.i ], [ %arg_num.addr.0.i, %if.then123.i ], [ %arg_num.addr.3.i, %if.then278.i ], [ %arg_num.addr.6.i, %if.else558.i ], [ %arg_num.addr.6.i, %if.then557.i ], [ %arg_num.addr.6.i, %if.end1049.i ], [ %arg_num.addr.6.i, %if.end1141.i ], [ %arg_num.addr.0.i, %lor.lhs.false10.i.i ], [ %arg_num.addr.0.i, %if.then15.i.i ], [ %arg_num.addr.81596.ph.i, %for.inc391.i.i ]
  call void @llvm.lifetime.end(i64 256, i8* %85) #3
  call void @llvm.lifetime.end(i64 64, i8* %84) #3
  call void @llvm.lifetime.end(i64 64, i8* %83) #3
  call void @llvm.lifetime.end(i64 64, i8* %82) #3
  br i1 %cleanup.dest.slot.0.i, label %return, label %while.body.i

return:                                           ; preds = %while.body93, %while.body383, %cleanup.i, %for.end68, %if.then104, %if.else, %if.then374, %if.then367, %if.then362, %if.then353, %if.then311, %if.then300, %if.then259, %if.then248, %if.else238, %if.then79, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @status_warning(i32* %status, i8* %msgid, ...) #0 {
entry:
  %dc = alloca %struct.diagnostic_context, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %0 = bitcast %struct.diagnostic_context* %dc to i8*
  call void @llvm.lifetime.start(i64 376, i8* %0) #3
  %arraydecay1 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  %tobool = icmp eq i32* %status, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* %status, align 4, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load i8** @input_filename, align 8, !tbaa !5
  %2 = load i32* @lineno, align 4, !tbaa !1
  call void @set_diagnostic_context(%struct.diagnostic_context* %dc, i8* %msgid, [1 x %struct.__va_list_tag]* %ap, i8* %1, i32 %2, i32 1) #3
  call void @report_diagnostic(%struct.diagnostic_context* %dc) #3
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.va_end(i8* %arraydecay1)
  call void @llvm.lifetime.end(i64 376, i8* %0) #3
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

declare void @set_diagnostic_context(%struct.diagnostic_context*, i8*, [1 x %struct.__va_list_tag]*, i8*, i32, i32) #1

declare void @report_diagnostic(%struct.diagnostic_context*) #1

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #3

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #4

declare i32 @integer_zerop(%union.tree_node*) #1

declare i32 @host_integerp(%union.tree_node*, i32) #1

declare i64 @tree_low_cst(%union.tree_node*, i32) #1

declare %union.tree_node* @decl_constant_value(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @maybe_read_dollar_number(i32* %status, i8** nocapture %format, i32 %dollar_needed, %union.tree_node* %params, %union.tree_node** nocapture %param_ptr, %struct.format_kind_info* nocapture readonly %fki) #0 {
entry:
  %0 = load i8** %format, align 8, !tbaa !5
  %1 = load i8* %0, align 1, !tbaa !38
  %idxprom = zext i8 %1 to i64
  %arrayidx = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom
  %2 = load i16* %arrayidx, align 2, !tbaa !52
  %and2 = and i16 %2, 4
  %tobool = icmp eq i16 %and2, 0
  br i1 %tobool, label %if.then, label %while.cond.preheader

while.cond.preheader:                             ; preds = %entry
  %conv5132 = sext i8 %1 to i32
  %and6133 = and i32 %conv5132, 255
  %idxprom7125134 = zext i32 %and6133 to i64
  %arrayidx8135 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom7125134
  %3 = load i16* %arrayidx8135, align 2, !tbaa !52
  %and10136 = and i16 %3, 4
  %tobool11137 = icmp eq i16 %and10136, 0
  br i1 %tobool11137, label %while.end, label %while.body

if.then:                                          ; preds = %entry
  %tobool3 = icmp eq i32 %dollar_needed, 0
  br i1 %tobool3, label %return, label %if.then4

if.then4:                                         ; preds = %if.then
  tail call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([35 x i8]* @.str50, i64 0, i64 0))
  br label %return

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %conv5141 = phi i32 [ %conv5, %while.body ], [ %conv5132, %while.cond.preheader ]
  %argnum.0140 = phi i32 [ %add, %while.body ], [ 0, %while.cond.preheader ]
  %fcp.0139 = phi i8* [ %incdec.ptr, %while.body ], [ %0, %while.cond.preheader ]
  %overflow_flag.0138 = phi i32 [ %overflow_flag.1, %while.body ], [ 0, %while.cond.preheader ]
  %mul = mul nsw i32 %argnum.0140, 10
  %sub = add i32 %mul, -48
  %add = add i32 %sub, %conv5141
  %cmp = icmp sgt i32 %add, -1
  %div = sdiv i32 %add, 10
  %cmp14 = icmp eq i32 %div, %argnum.0140
  %or.cond126 = and i1 %cmp, %cmp14
  %overflow_flag.1 = select i1 %or.cond126, i32 %overflow_flag.0138, i32 1
  %incdec.ptr = getelementptr inbounds i8* %fcp.0139, i64 1
  %4 = load i8* %incdec.ptr, align 1, !tbaa !38
  %conv5 = sext i8 %4 to i32
  %and6 = and i32 %conv5, 255
  %idxprom7125 = zext i32 %and6 to i64
  %arrayidx8 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom7125
  %5 = load i16* %arrayidx8, align 2, !tbaa !52
  %and10 = and i16 %5, 4
  %tobool11 = icmp eq i16 %and10, 0
  br i1 %tobool11, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %while.cond.preheader
  %.lcssa = phi i8 [ %1, %while.cond.preheader ], [ %4, %while.body ]
  %argnum.0.lcssa = phi i32 [ 0, %while.cond.preheader ], [ %add, %while.body ]
  %fcp.0.lcssa = phi i8* [ %0, %while.cond.preheader ], [ %incdec.ptr, %while.body ]
  %overflow_flag.0.lcssa = phi i32 [ 0, %while.cond.preheader ], [ %overflow_flag.1, %while.body ]
  %cmp19 = icmp eq i8 %.lcssa, 36
  br i1 %cmp19, label %if.end25, label %if.then21

if.then21:                                        ; preds = %while.end
  %tobool22 = icmp eq i32 %dollar_needed, 0
  br i1 %tobool22, label %return, label %if.then23

if.then23:                                        ; preds = %if.then21
  tail call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([35 x i8]* @.str50, i64 0, i64 0))
  br label %return

if.end25:                                         ; preds = %while.end
  %add.ptr = getelementptr inbounds i8* %fcp.0.lcssa, i64 1
  store i8* %add.ptr, i8** %format, align 8, !tbaa !5
  %6 = load i32* @pedantic, align 4, !tbaa !1
  %tobool26 = icmp eq i32 %6, 0
  %.b = load i1* @dollar_format_warned, align 1
  %or.cond = or i1 %tobool26, %.b
  br i1 %or.cond, label %if.end31, label %if.then28

if.then28:                                        ; preds = %if.end25
  %7 = load i32* @c_language, align 4, !tbaa !38
  %cmp29 = icmp eq i32 %7, 1
  %cond = select i1 %cmp29, i8* getelementptr inbounds ([8 x i8]* @.str29, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str30, i64 0, i64 0)
  tail call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([48 x i8]* @.str61, i64 0, i64 0), i8* %cond)
  store i1 true, i1* @dollar_format_warned, align 1
  br label %if.end31

if.end31:                                         ; preds = %if.end25, %if.then28
  %tobool32 = icmp ne i32 %overflow_flag.0.lcssa, 0
  %cmp34 = icmp eq i32 %argnum.0.lcssa, 0
  %or.cond90 = or i1 %tobool32, %cmp34
  br i1 %or.cond90, label %if.then41, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %if.end31
  %8 = load i32* @dollar_first_arg_num, align 4, !tbaa !1
  %tobool37 = icmp ne i32 %8, 0
  %9 = load i32* @dollar_arguments_count, align 4
  %cmp39 = icmp sgt i32 %argnum.0.lcssa, %9
  %or.cond127 = and i1 %tobool37, %cmp39
  br i1 %or.cond127, label %if.then41, label %if.end42

if.then41:                                        ; preds = %lor.lhs.false36, %if.end31
  tail call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([38 x i8]* @.str62, i64 0, i64 0))
  br label %return

if.end42:                                         ; preds = %lor.lhs.false36
  %10 = load i32* @dollar_max_arg_used, align 4, !tbaa !1
  %cmp43 = icmp sgt i32 %argnum.0.lcssa, %10
  br i1 %cmp43, label %if.then45, label %while.cond47.preheader

if.then45:                                        ; preds = %if.end42
  store i32 %argnum.0.lcssa, i32* @dollar_max_arg_used, align 4, !tbaa !1
  br label %while.cond47.preheader

while.cond47.preheader:                           ; preds = %if.then45, %if.end42
  %11 = phi i32 [ %argnum.0.lcssa, %if.then45 ], [ %10, %if.end42 ]
  %12 = load i32* @dollar_arguments_alloc, align 4, !tbaa !1
  %cmp48131 = icmp slt i32 %12, %11
  br i1 %cmp48131, label %while.body50, label %while.end59

while.body50:                                     ; preds = %while.cond47.preheader, %while.body50
  %13 = phi i32 [ %add52, %while.body50 ], [ %12, %while.cond47.preheader ]
  %mul51 = shl nsw i32 %13, 1
  %add52 = add nsw i32 %mul51, 16
  %14 = load i8** @dollar_arguments_used, align 8, !tbaa !5
  %conv53 = sext i32 %add52 to i64
  %call = tail call i8* @xrealloc(i8* %14, i64 %conv53) #3
  store i8* %call, i8** @dollar_arguments_used, align 8, !tbaa !5
  %15 = load i8** @dollar_arguments_pointer_p, align 8, !tbaa !5
  %call55 = tail call i8* @xrealloc(i8* %15, i64 %conv53) #3
  store i8* %call55, i8** @dollar_arguments_pointer_p, align 8, !tbaa !5
  %16 = load i8** @dollar_arguments_used, align 8, !tbaa !5
  %17 = load i32* @dollar_arguments_alloc, align 4, !tbaa !1
  %idx.ext = sext i32 %17 to i64
  %add.ptr56 = getelementptr inbounds i8* %16, i64 %idx.ext
  %sub57 = sub nsw i32 %add52, %17
  %conv58 = sext i32 %sub57 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %add.ptr56, i8 0, i64 %conv58, i32 1, i1 false)
  store i32 %add52, i32* @dollar_arguments_alloc, align 4, !tbaa !1
  %18 = load i32* @dollar_max_arg_used, align 4, !tbaa !1
  %cmp48 = icmp slt i32 %add52, %18
  br i1 %cmp48, label %while.body50, label %while.end59

while.end59:                                      ; preds = %while.body50, %while.cond47.preheader
  %flags = getelementptr inbounds %struct.format_kind_info* %fki, i64 0, i32 7
  %19 = load i32* %flags, align 4, !tbaa !96
  %and60 = and i32 %19, 8
  %tobool61 = icmp eq i32 %and60, 0
  br i1 %tobool61, label %land.lhs.true62, label %while.end59.if.else73_crit_edge

while.end59.if.else73_crit_edge:                  ; preds = %while.end59
  %.pre = load i8** @dollar_arguments_used, align 8, !tbaa !5
  %sub74.pre = add nsw i32 %argnum.0.lcssa, -1
  %idxprom75.pre = sext i32 %sub74.pre to i64
  br label %if.else73

land.lhs.true62:                                  ; preds = %while.end59
  %sub63 = add nsw i32 %argnum.0.lcssa, -1
  %idxprom64 = sext i32 %sub63 to i64
  %20 = load i8** @dollar_arguments_used, align 8, !tbaa !5
  %arrayidx65 = getelementptr inbounds i8* %20, i64 %idxprom64
  %21 = load i8* %arrayidx65, align 1, !tbaa !38
  %cmp67 = icmp eq i8 %21, 1
  br i1 %cmp67, label %if.then69, label %if.else73

if.then69:                                        ; preds = %land.lhs.true62
  store i8 2, i8* %arrayidx65, align 1, !tbaa !38
  %name = getelementptr inbounds %struct.format_kind_info* %fki, i64 0, i32 0
  %22 = load i8** %name, align 8, !tbaa !36
  tail call void (i32*, i8*, ...)* @status_warning(i32* %status, i8* getelementptr inbounds ([52 x i8]* @.str63, i64 0, i64 0), i32 %argnum.0.lcssa, i8* %22)
  br label %if.end77

if.else73:                                        ; preds = %while.end59.if.else73_crit_edge, %land.lhs.true62
  %idxprom75.pre-phi = phi i64 [ %idxprom75.pre, %while.end59.if.else73_crit_edge ], [ %idxprom64, %land.lhs.true62 ]
  %23 = phi i8* [ %.pre, %while.end59.if.else73_crit_edge ], [ %20, %land.lhs.true62 ]
  %arrayidx76 = getelementptr inbounds i8* %23, i64 %idxprom75.pre-phi
  store i8 1, i8* %arrayidx76, align 1, !tbaa !38
  br label %if.end77

if.end77:                                         ; preds = %if.else73, %if.then69
  %24 = load i32* @dollar_first_arg_num, align 4, !tbaa !1
  %tobool78 = icmp eq i32 %24, 0
  br i1 %tobool78, label %if.else88, label %if.then79

if.then79:                                        ; preds = %if.end77
  store %union.tree_node* %params, %union.tree_node** %param_ptr, align 8, !tbaa !5
  %cmp80128 = icmp sgt i32 %argnum.0.lcssa, 1
  br i1 %cmp80128, label %land.end, label %for.end

land.end:                                         ; preds = %if.then79, %for.body
  %25 = phi %union.tree_node* [ %26, %for.body ], [ %params, %if.then79 ]
  %i.0129 = phi i32 [ %inc, %for.body ], [ 1, %if.then79 ]
  %cmp82 = icmp eq %union.tree_node* %25, null
  br i1 %cmp82, label %if.then86, label %for.body

for.body:                                         ; preds = %land.end
  %chain = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0
  %26 = load %union.tree_node** %chain, align 8, !tbaa !12
  store %union.tree_node* %26, %union.tree_node** %param_ptr, align 8, !tbaa !5
  %inc = add nsw i32 %i.0129, 1
  %cmp80 = icmp slt i32 %inc, %argnum.0.lcssa
  br i1 %cmp80, label %land.end, label %for.end

for.end:                                          ; preds = %for.body, %if.then79
  %27 = phi %union.tree_node* [ %params, %if.then79 ], [ %26, %for.body ]
  %cmp84 = icmp eq %union.tree_node* %27, null
  br i1 %cmp84, label %if.then86, label %return

if.then86:                                        ; preds = %land.end, %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0), i32 1198, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.maybe_read_dollar_number, i64 0, i64 0)) #7
  unreachable

if.else88:                                        ; preds = %if.end77
  store %union.tree_node* null, %union.tree_node** %param_ptr, align 8, !tbaa !5
  br label %return

return:                                           ; preds = %if.else88, %for.end, %if.then21, %if.then, %if.then41, %if.then23, %if.then4
  %retval.0 = phi i32 [ -1, %if.then23 ], [ -1, %if.then41 ], [ -1, %if.then4 ], [ 0, %if.then ], [ 0, %if.then21 ], [ %argnum.0.lcssa, %for.end ], [ %argnum.0.lcssa, %if.else88 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #5

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #5

declare %union.tree_node* @simple_type_promotes_to(%union.tree_node*) #1

declare %union.tree_node* @unsigned_type(%union.tree_node*) #1

declare %union.tree_node* @signed_type(%union.tree_node*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #5

declare i8* @xrealloc(i8*, i64) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) #6

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #5

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !8, i64 0}
!8 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!9 = metadata !{metadata !10, metadata !11, i64 8}
!10 = metadata !{metadata !"function_format_info", metadata !3, i64 0, metadata !11, i64 8, metadata !11, i64 16}
!11 = metadata !{metadata !"long long", metadata !3, i64 0}
!12 = metadata !{metadata !13, metadata !6, i64 0}
!13 = metadata !{metadata !"tree_common", metadata !6, i64 0, metadata !6, i64 8, metadata !3, i64 16, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19}
!14 = metadata !{metadata !15, metadata !6, i64 32}
!15 = metadata !{metadata !"tree_list", metadata !13, i64 0, metadata !6, i64 24, metadata !6, i64 32}
!16 = metadata !{metadata !13, metadata !6, i64 8}
!17 = metadata !{metadata !18, metadata !6, i64 128}
!18 = metadata !{metadata !"tree_type", metadata !13, i64 0, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !2, i64 56, metadata !2, i64 60, metadata !3, i64 61, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !11, i64 152, metadata !6, i64 160}
!19 = metadata !{metadata !10, metadata !11, i64 16}
!20 = metadata !{metadata !10, metadata !3, i64 0}
!21 = metadata !{metadata !22, metadata !6, i64 32}
!22 = metadata !{metadata !"tree_identifier", metadata !13, i64 0, metadata !23, i64 24}
!23 = metadata !{metadata !"ht_identifier", metadata !2, i64 0, metadata !6, i64 8}
!24 = metadata !{metadata !25, metadata !11, i64 40}
!25 = metadata !{metadata !"tree_int_cst", metadata !13, i64 0, metadata !6, i64 24, metadata !26, i64 32}
!26 = metadata !{metadata !"", metadata !11, i64 0, metadata !11, i64 8}
!27 = metadata !{metadata !25, metadata !11, i64 32}
!28 = metadata !{metadata !29, metadata !2, i64 0}
!29 = metadata !{metadata !"", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24}
!30 = metadata !{metadata !29, metadata !2, i64 4}
!31 = metadata !{metadata !29, metadata !2, i64 24}
!32 = metadata !{metadata !29, metadata !2, i64 8}
!33 = metadata !{metadata !29, metadata !2, i64 16}
!34 = metadata !{metadata !29, metadata !2, i64 12}
!35 = metadata !{metadata !29, metadata !2, i64 20}
!36 = metadata !{metadata !37, metadata !6, i64 0}
!37 = metadata !{metadata !"", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !2, i64 56, metadata !2, i64 60, metadata !2, i64 64, metadata !2, i64 68, metadata !2, i64 72, metadata !2, i64 76, metadata !6, i64 80, metadata !6, i64 88}
!38 = metadata !{metadata !3, metadata !3, i64 0}
!39 = metadata !{metadata !40, metadata !6, i64 64}
!40 = metadata !{metadata !"tree_decl", metadata !13, i64 0, metadata !6, i64 24, metadata !2, i64 32, metadata !2, i64 36, metadata !6, i64 40, metadata !3, i64 48, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !3, i64 51, metadata !2, i64 51, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !6, i64 152, metadata !3, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !11, i64 192, metadata !6, i64 200}
!41 = metadata !{metadata !42, metadata !2, i64 32}
!42 = metadata !{metadata !"tree_string", metadata !13, i64 0, metadata !6, i64 24, metadata !2, i64 32, metadata !6, i64 40}
!43 = metadata !{metadata !37, metadata !6, i64 40}
!44 = metadata !{metadata !37, metadata !6, i64 48}
!45 = metadata !{metadata !37, metadata !6, i64 24}
!46 = metadata !{metadata !47, metadata !2, i64 0}
!47 = metadata !{metadata !"", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !3, i64 32}
!48 = metadata !{metadata !47, metadata !2, i64 4}
!49 = metadata !{metadata !47, metadata !6, i64 16}
!50 = metadata !{metadata !47, metadata !2, i64 8}
!51 = metadata !{metadata !37, metadata !6, i64 80}
!52 = metadata !{metadata !53, metadata !53, i64 0}
!53 = metadata !{metadata !"short", metadata !3, i64 0}
!54 = metadata !{metadata !37, metadata !2, i64 60}
!55 = metadata !{metadata !56, metadata !6, i64 0}
!56 = metadata !{metadata !"format_wanted_type", metadata !6, i64 0, metadata !6, i64 8, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !2, i64 28, metadata !6, i64 32, metadata !6, i64 40, metadata !2, i64 48, metadata !6, i64 56}
!57 = metadata !{metadata !56, metadata !6, i64 32}
!58 = metadata !{metadata !56, metadata !6, i64 40}
!59 = metadata !{metadata !56, metadata !2, i64 48}
!60 = metadata !{metadata !56, metadata !6, i64 56}
!61 = metadata !{metadata !37, metadata !2, i64 64}
!62 = metadata !{metadata !37, metadata !2, i64 68}
!63 = metadata !{metadata !37, metadata !6, i64 88}
!64 = metadata !{metadata !37, metadata !6, i64 8}
!65 = metadata !{metadata !66, metadata !6, i64 0}
!66 = metadata !{metadata !"", metadata !6, i64 0, metadata !3, i64 8, metadata !3, i64 12, metadata !6, i64 16, metadata !3, i64 24, metadata !3, i64 28}
!67 = metadata !{metadata !66, metadata !6, i64 16}
!68 = metadata !{metadata !37, metadata !2, i64 76}
!69 = metadata !{metadata !37, metadata !6, i64 32}
!70 = metadata !{metadata !37, metadata !6, i64 16}
!71 = metadata !{metadata !72, metadata !6, i64 0}
!72 = metadata !{metadata !"", metadata !6, i64 0, metadata !2, i64 8, metadata !3, i64 12, metadata !3, i64 16, metadata !6, i64 232, metadata !6, i64 240}
!73 = metadata !{metadata !72, metadata !3, i64 12}
!74 = metadata !{metadata !72, metadata !6, i64 232}
!75 = metadata !{metadata !47, metadata !3, i64 32}
!76 = metadata !{metadata !47, metadata !6, i64 24}
!77 = metadata !{metadata !72, metadata !6, i64 240}
!78 = metadata !{metadata !37, metadata !2, i64 72}
!79 = metadata !{metadata !80, metadata !2, i64 0}
!80 = metadata !{metadata !"", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12}
!81 = metadata !{metadata !80, metadata !2, i64 4}
!82 = metadata !{metadata !80, metadata !2, i64 12}
!83 = metadata !{metadata !80, metadata !2, i64 8}
!84 = metadata !{metadata !85, metadata !6, i64 16}
!85 = metadata !{metadata !"", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!86 = metadata !{metadata !85, metadata !6, i64 8}
!87 = metadata !{metadata !85, metadata !3, i64 0}
!88 = metadata !{metadata !72, metadata !2, i64 8}
!89 = metadata !{metadata !56, metadata !6, i64 8}
!90 = metadata !{metadata !56, metadata !2, i64 16}
!91 = metadata !{metadata !56, metadata !2, i64 20}
!92 = metadata !{metadata !56, metadata !2, i64 24}
!93 = metadata !{metadata !56, metadata !2, i64 28}
!94 = metadata !{metadata !18, metadata !6, i64 96}
!95 = metadata !{metadata !40, metadata !6, i64 72}
!96 = metadata !{metadata !37, metadata !2, i64 56}
