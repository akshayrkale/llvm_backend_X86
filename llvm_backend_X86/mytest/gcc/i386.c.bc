; ModuleID = 'i386.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.processor_costs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, [3 x i32], [3 x i32], i32, [2 x i32], [2 x i32], i32, [3 x i32], [3 x i32], i32, i32, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct._IO_FILE = type opaque
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type { [59 x [3 x %struct.rtx_def*]], i32, i32 }
%struct.language_function = type opaque
%struct.lang_decl = type opaque
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.ptt = type { %struct.processor_costs*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pta = type { i8*, i32, i32 }
%struct.optab = type { i32, [59 x %struct.anon.3] }
%struct.anon.3 = type { i32, %struct.rtx_def* }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [4 x %struct.rtx_def**], [4 x i8], i8, i8, i8, %struct.rtx_def* }
%struct.insn_data = type { i8*, i8*, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%union.anon.4 = type { %struct.ppro_sched_data }
%struct.ppro_sched_data = type { [3 x %struct.rtx_def*], i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.builtin_description = type { i32, i32, i8*, i32, i32, i32 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.ix86_address = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64 }
%struct.ix86_frame = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64 }
%struct.realvaluetype = type { [3 x i64] }
%struct.mem_attrs = type { i64, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32 }

@pentium_cost = internal constant %struct.processor_costs { i32 1, i32 1, i32 4, i32 1, i32 11, i32 0, i32 25, i32 3, i32 2, i32 8, i32 6, i32 6, [3 x i32] [i32 2, i32 4, i32 2], [3 x i32] [i32 2, i32 4, i32 2], i32 2, [3 x i32] [i32 2, i32 2, i32 6], [3 x i32] [i32 4, i32 4, i32 6], i32 8, [2 x i32] [i32 8, i32 8], [2 x i32] [i32 8, i32 8], i32 2, [3 x i32] [i32 4, i32 8, i32 16], [3 x i32] [i32 4, i32 8, i32 16], i32 3, i32 0, i32 0 }, align 4
@ix86_cost = global %struct.processor_costs* @pentium_cost, align 8
@x86_use_leave = constant i32 49, align 4
@x86_push_memory = constant i32 113, align 4
@x86_zero_extend_with_and = constant i32 6, align 4
@x86_movx = constant i32 104, align 4
@x86_double_with_add = constant i32 -2, align 4
@x86_use_bit_test = constant i32 1, align 4
@x86_unroll_strlen = constant i32 62, align 4
@x86_cmove = constant i32 104, align 4
@x86_3dnow_a = constant i32 32, align 4
@x86_deep_branch = constant i32 120, align 4
@x86_branch_hints = constant i32 64, align 4
@x86_use_sahf = constant i32 88, align 4
@x86_partial_reg_stall = constant i32 8, align 4
@x86_use_loop = constant i32 16, align 4
@x86_use_fiop = constant i32 -45, align 4
@x86_use_mov0 = constant i32 16, align 4
@x86_use_cltd = constant i32 -21, align 4
@x86_read_modify_write = constant i32 -5, align 4
@x86_read_modify = constant i32 -13, align 4
@x86_split_long_moves = constant i32 8, align 4
@x86_promote_QImode = constant i32 23, align 4
@x86_single_stringop = constant i32 65, align 4
@x86_qimode_math = constant i32 -1, align 4
@x86_promote_qi_regs = constant i32 0, align 4
@x86_himode_math = constant i32 -9, align 4
@x86_promote_hi_regs = constant i32 8, align 4
@x86_sub_esp_4 = constant i32 104, align 4
@x86_sub_esp_8 = constant i32 107, align 4
@x86_add_esp_4 = constant i32 112, align 4
@x86_add_esp_8 = constant i32 123, align 4
@x86_integer_DFmode_moves = constant i32 -97, align 4
@x86_partial_reg_dependency = constant i32 96, align 4
@x86_memory_mismatch_stall = constant i32 96, align 4
@x86_accumulate_outgoing_args = constant i32 104, align 4
@x86_prologue_using_move = constant i32 104, align 4
@x86_epilogue_using_move = constant i32 104, align 4
@x86_decompose_lea = constant i32 64, align 4
@x86_arch_always_fancy_math_387 = constant i32 108, align 4
@regclass_map = constant [53 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 9, i32 9, i32 13, i32 14, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 9, i32 0, i32 0, i32 0, i32 9, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 17, i32 17, i32 17, i32 17, i32 17, i32 17, i32 17, i32 17, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16], align 16
@dbx_register_map = constant [53 x i32] [i32 0, i32 2, i32 1, i32 3, i32 6, i32 7, i32 4, i32 5, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16
@dbx64_register_map = constant [53 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32], align 16
@svr4_dbx_register_map = constant [53 x i32] [i32 0, i32 2, i32 1, i32 3, i32 6, i32 7, i32 5, i32 4, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 -1, i32 9, i32 -1, i32 -1, i32 -1, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16
@ix86_compare_op0 = global %struct.rtx_def* null, align 8
@ix86_compare_op1 = global %struct.rtx_def* null, align 8
@ix86_asm_dialect = global i32 0, align 4
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str1 = private unnamed_addr constant [8 x i8] c"\09.byte\09\00", align 1
@.str2 = private unnamed_addr constant [9 x i8] c"\09.value\09\00", align 1
@.str3 = private unnamed_addr constant [8 x i8] c"\09.long\09\00", align 1
@.str4 = private unnamed_addr constant [8 x i8] c"\09.quad\09\00", align 1
@targetm = global %struct.gcc_target { %struct.asm_out { i8* getelementptr inbounds ([1 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0), %struct.asm_int_op { i8* getelementptr inbounds ([9 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str4, i32 0, i32 0), i8* null }, %struct.asm_int_op { i8* getelementptr inbounds ([9 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str4, i32 0, i32 0), i8* null }, i1 (%struct.rtx_def*, i32, i32)* @default_assemble_integer, void (%struct._IO_FILE*, i64)* @default_function_pro_epilogue, void (%struct._IO_FILE*)* @no_asm_to_stream, void (%struct._IO_FILE*)* @no_asm_to_stream, void (%struct._IO_FILE*, i64)* @default_function_pro_epilogue, void (i8*, i32)* @default_elf_asm_named_section, void ()* @default_exception_section, void ()* @default_eh_frame_section, void (%struct.rtx_def*, i32)* @default_named_section_asm_out_constructor, void (%struct.rtx_def*, i32)* @default_named_section_asm_out_destructor }, %struct.sched { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* @ix86_adjust_cost, i32 (%struct.rtx_def*, i32)* null, i32 ()* @ix86_issue_rate, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)* @ix86_variable_issue, void (%struct._IO_FILE*, i32, i32)* @ix86_sched_init, void (%struct._IO_FILE*, i32)* null, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* @ix86_sched_reorder, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* null, %struct.rtx_def* (i32, %struct.rtx_def*)* null }, %union.tree_node* (%union.tree_node*, %union.tree_node*)* @merge_decl_attributes, %union.tree_node* (%union.tree_node*, %union.tree_node*)* @merge_type_attributes, %struct.attribute_spec* getelementptr inbounds ([4 x %struct.attribute_spec]* @ix86_attribute_table, i32 0, i32 0), i32 (%union.tree_node*, %union.tree_node*)* @ix86_comp_type_attributes, void (%union.tree_node*)* @default_set_default_type_attributes, void (%union.tree_node*, %union.tree_node**)* @default_insert_attributes, i1 (%union.tree_node*)* @default_function_attribute_inlinable_p, i1 (%union.tree_node*)* @default_ms_bitfield_layout_p, void ()* @ix86_init_builtins, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)* @ix86_expand_builtin, i32 (%union.tree_node*, i8*, i32)* @default_section_type_flags, i8 1, i8 1, i1 ()* @hook_void_bool_false }, align 8
@override_options.processor_target_table = internal unnamed_addr constant [7 x %struct.ptt] [%struct.ptt { %struct.processor_costs* @i386_cost, i32 0, i32 0, i32 4, i32 3, i32 4, i32 3, i32 4, i32 1 }, %struct.ptt { %struct.processor_costs* @i486_cost, i32 0, i32 0, i32 16, i32 15, i32 16, i32 15, i32 16, i32 1 }, %struct.ptt { %struct.processor_costs* @pentium_cost, i32 0, i32 0, i32 16, i32 7, i32 16, i32 7, i32 16, i32 1 }, %struct.ptt { %struct.processor_costs* @pentiumpro_cost, i32 0, i32 0, i32 16, i32 15, i32 16, i32 7, i32 16, i32 1 }, %struct.ptt { %struct.processor_costs* @k6_cost, i32 0, i32 0, i32 32, i32 7, i32 32, i32 7, i32 32, i32 1 }, %struct.ptt { %struct.processor_costs* @athlon_cost, i32 0, i32 0, i32 16, i32 7, i32 64, i32 7, i32 16, i32 1 }, %struct.ptt { %struct.processor_costs* @pentium4_cost, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 }], align 16
@i386_cost = internal constant %struct.processor_costs { i32 1, i32 1, i32 3, i32 2, i32 6, i32 1, i32 23, i32 3, i32 2, i32 15, i32 3, i32 4, [3 x i32] [i32 2, i32 4, i32 2], [3 x i32] [i32 2, i32 4, i32 2], i32 2, [3 x i32] [i32 8, i32 8, i32 8], [3 x i32] [i32 8, i32 8, i32 8], i32 2, [2 x i32] [i32 4, i32 8], [2 x i32] [i32 4, i32 8], i32 2, [3 x i32] [i32 4, i32 8, i32 16], [3 x i32] [i32 4, i32 8, i32 16], i32 3, i32 0, i32 0 }, align 4
@i486_cost = internal constant %struct.processor_costs { i32 1, i32 1, i32 3, i32 2, i32 12, i32 1, i32 40, i32 3, i32 2, i32 15, i32 3, i32 4, [3 x i32] [i32 2, i32 4, i32 2], [3 x i32] [i32 2, i32 4, i32 2], i32 2, [3 x i32] [i32 8, i32 8, i32 8], [3 x i32] [i32 8, i32 8, i32 8], i32 2, [2 x i32] [i32 4, i32 8], [2 x i32] [i32 4, i32 8], i32 2, [3 x i32] [i32 4, i32 8, i32 16], [3 x i32] [i32 4, i32 8, i32 16], i32 3, i32 0, i32 0 }, align 4
@pentiumpro_cost = internal constant %struct.processor_costs { i32 1, i32 1, i32 1, i32 1, i32 4, i32 0, i32 17, i32 1, i32 1, i32 8, i32 6, i32 2, [3 x i32] [i32 4, i32 4, i32 4], [3 x i32] [i32 2, i32 2, i32 2], i32 2, [3 x i32] [i32 2, i32 2, i32 6], [3 x i32] [i32 4, i32 4, i32 6], i32 2, [2 x i32] [i32 2, i32 2], [2 x i32] [i32 2, i32 2], i32 2, [3 x i32] [i32 2, i32 2, i32 8], [3 x i32] [i32 2, i32 2, i32 8], i32 3, i32 32, i32 6 }, align 4
@k6_cost = internal constant %struct.processor_costs { i32 1, i32 2, i32 1, i32 1, i32 3, i32 0, i32 18, i32 2, i32 2, i32 8, i32 4, i32 3, [3 x i32] [i32 4, i32 5, i32 4], [3 x i32] [i32 2, i32 3, i32 2], i32 4, [3 x i32] [i32 6, i32 6, i32 6], [3 x i32] [i32 4, i32 4, i32 4], i32 2, [2 x i32] [i32 2, i32 2], [2 x i32] [i32 2, i32 2], i32 2, [3 x i32] [i32 2, i32 2, i32 8], [3 x i32] [i32 2, i32 2, i32 8], i32 6, i32 32, i32 1 }, align 4
@athlon_cost = internal constant %struct.processor_costs { i32 1, i32 2, i32 1, i32 1, i32 5, i32 0, i32 42, i32 1, i32 1, i32 8, i32 9, i32 4, [3 x i32] [i32 4, i32 5, i32 4], [3 x i32] [i32 2, i32 3, i32 2], i32 4, [3 x i32] [i32 6, i32 6, i32 20], [3 x i32] [i32 4, i32 4, i32 16], i32 2, [2 x i32] [i32 2, i32 2], [2 x i32] [i32 2, i32 2], i32 2, [3 x i32] [i32 2, i32 2, i32 8], [3 x i32] [i32 2, i32 2, i32 8], i32 6, i32 64, i32 6 }, align 4
@pentium4_cost = internal constant %struct.processor_costs { i32 1, i32 1, i32 8, i32 8, i32 30, i32 0, i32 112, i32 1, i32 1, i32 16, i32 6, i32 2, [3 x i32] [i32 4, i32 5, i32 4], [3 x i32] [i32 2, i32 3, i32 2], i32 2, [3 x i32] [i32 2, i32 2, i32 6], [3 x i32] [i32 4, i32 4, i32 6], i32 2, [2 x i32] [i32 2, i32 2], [2 x i32] [i32 2, i32 2], i32 12, [3 x i32] [i32 12, i32 12, i32 12], [3 x i32] [i32 2, i32 2, i32 8], i32 10, i32 64, i32 6 }, align 4
@.str5 = private unnamed_addr constant [5 x i8] c"i386\00", align 1
@.str6 = private unnamed_addr constant [5 x i8] c"i486\00", align 1
@.str7 = private unnamed_addr constant [8 x i8] c"pentium\00", align 1
@.str8 = private unnamed_addr constant [12 x i8] c"pentium-mmx\00", align 1
@.str9 = private unnamed_addr constant [11 x i8] c"pentiumpro\00", align 1
@.str10 = private unnamed_addr constant [9 x i8] c"pentium2\00", align 1
@.str11 = private unnamed_addr constant [9 x i8] c"pentium3\00", align 1
@.str12 = private unnamed_addr constant [9 x i8] c"pentium4\00", align 1
@.str13 = private unnamed_addr constant [3 x i8] c"k6\00", align 1
@.str14 = private unnamed_addr constant [5 x i8] c"k6-2\00", align 1
@.str15 = private unnamed_addr constant [5 x i8] c"k6-3\00", align 1
@.str16 = private unnamed_addr constant [7 x i8] c"athlon\00", align 1
@.str17 = private unnamed_addr constant [9 x i8] c"athlon-4\00", align 1
@override_options.processor_alias_table = internal unnamed_addr constant [18 x %struct.pta] [%struct.pta { i8* getelementptr inbounds ([5 x i8]* @.str5, i32 0, i32 0), i32 0, i32 0 }, %struct.pta { i8* getelementptr inbounds ([5 x i8]* @.str6, i32 0, i32 0), i32 1, i32 0 }, %struct.pta { i8* getelementptr inbounds ([5 x i8]* @.str18, i32 0, i32 0), i32 2, i32 0 }, %struct.pta { i8* getelementptr inbounds ([8 x i8]* @.str7, i32 0, i32 0), i32 2, i32 0 }, %struct.pta { i8* getelementptr inbounds ([12 x i8]* @.str8, i32 0, i32 0), i32 2, i32 4 }, %struct.pta { i8* getelementptr inbounds ([5 x i8]* @.str19, i32 0, i32 0), i32 3, i32 0 }, %struct.pta { i8* getelementptr inbounds ([11 x i8]* @.str9, i32 0, i32 0), i32 3, i32 0 }, %struct.pta { i8* getelementptr inbounds ([9 x i8]* @.str10, i32 0, i32 0), i32 3, i32 4 }, %struct.pta { i8* getelementptr inbounds ([9 x i8]* @.str11, i32 0, i32 0), i32 3, i32 13 }, %struct.pta { i8* getelementptr inbounds ([9 x i8]* @.str12, i32 0, i32 0), i32 6, i32 15 }, %struct.pta { i8* getelementptr inbounds ([3 x i8]* @.str13, i32 0, i32 0), i32 4, i32 4 }, %struct.pta { i8* getelementptr inbounds ([5 x i8]* @.str14, i32 0, i32 0), i32 4, i32 20 }, %struct.pta { i8* getelementptr inbounds ([5 x i8]* @.str15, i32 0, i32 0), i32 4, i32 20 }, %struct.pta { i8* getelementptr inbounds ([7 x i8]* @.str16, i32 0, i32 0), i32 5, i32 92 }, %struct.pta { i8* getelementptr inbounds ([13 x i8]* @.str20, i32 0, i32 0), i32 5, i32 92 }, %struct.pta { i8* getelementptr inbounds ([9 x i8]* @.str17, i32 0, i32 0), i32 5, i32 93 }, %struct.pta { i8* getelementptr inbounds ([10 x i8]* @.str21, i32 0, i32 0), i32 5, i32 93 }, %struct.pta { i8* getelementptr inbounds ([10 x i8]* @.str22, i32 0, i32 0), i32 5, i32 93 }], align 16
@.str18 = private unnamed_addr constant [5 x i8] c"i586\00", align 1
@.str19 = private unnamed_addr constant [5 x i8] c"i686\00", align 1
@.str20 = private unnamed_addr constant [13 x i8] c"athlon-tbird\00", align 1
@.str21 = private unnamed_addr constant [10 x i8] c"athlon-xp\00", align 1
@.str22 = private unnamed_addr constant [10 x i8] c"athlon-mp\00", align 1
@ix86_cpu_string = common global i8* null, align 8
@ix86_arch_string = common global i8* null, align 8
@target_flags = external global i32
@ix86_cmodel_string = common global i8* null, align 8
@.str23 = private unnamed_addr constant [6 x i8] c"small\00", align 1
@flag_pic = external global i32
@ix86_cmodel = common global i32 0, align 4
@.str24 = private unnamed_addr constant [40 x i8] c"code model %s not supported in PIC mode\00", align 1
@.str25 = private unnamed_addr constant [3 x i8] c"32\00", align 1
@.str26 = private unnamed_addr constant [7 x i8] c"kernel\00", align 1
@.str27 = private unnamed_addr constant [7 x i8] c"medium\00", align 1
@.str28 = private unnamed_addr constant [6 x i8] c"large\00", align 1
@.str29 = private unnamed_addr constant [36 x i8] c"bad value (%s) for -mcmodel= switch\00", align 1
@ix86_asm_string = common global i8* null, align 8
@.str30 = private unnamed_addr constant [6 x i8] c"intel\00", align 1
@.str31 = private unnamed_addr constant [4 x i8] c"att\00", align 1
@.str32 = private unnamed_addr constant [33 x i8] c"bad value (%s) for -masm= switch\00", align 1
@.str33 = private unnamed_addr constant [49 x i8] c"code model `%s' not supported in the %s bit mode\00", align 1
@.str34 = private unnamed_addr constant [3 x i8] c"64\00", align 1
@.str35 = private unnamed_addr constant [37 x i8] c"code model `large' not supported yet\00", align 1
@ix86_arch = common global i32 0, align 4
@ix86_cpu = common global i32 0, align 4
@x86_prefetch_sse = common global i32 0, align 4
@.str37 = private unnamed_addr constant [34 x i8] c"bad value (%s) for -march= switch\00", align 1
@.str38 = private unnamed_addr constant [33 x i8] c"bad value (%s) for -mcpu= switch\00", align 1
@optimize_size = external global i32
@size_cost = internal constant %struct.processor_costs { i32 2, i32 3, i32 2, i32 3, i32 3, i32 0, i32 3, i32 3, i32 3, i32 0, i32 2, i32 2, [3 x i32] [i32 2, i32 2, i32 2], [3 x i32] [i32 2, i32 2, i32 2], i32 2, [3 x i32] [i32 2, i32 2, i32 2], [3 x i32] [i32 2, i32 2, i32 2], i32 3, [2 x i32] [i32 3, i32 3], [2 x i32] [i32 3, i32 3], i32 3, [3 x i32] [i32 3, i32 3, i32 3], [3 x i32] [i32 3, i32 3, i32 3], i32 3, i32 0, i32 0 }, align 4
@init_machine_status = external global void (%struct.function*)*
@mark_machine_status = external global void (%struct.function*)*
@free_machine_status = external global void (%struct.function*)*
@ix86_regparm_string = common global i8* null, align 8
@.str39 = private unnamed_addr constant [37 x i8] c"-mregparm=%d is not between 0 and %d\00", align 1
@ix86_regparm = common global i32 0, align 4
@ix86_align_loops_string = common global i8* null, align 8
@.str40 = private unnamed_addr constant [45 x i8] c"-malign-loops is obsolete, use -falign-loops\00", align 1
@align_loops = external global i32
@.str41 = private unnamed_addr constant [41 x i8] c"-malign-loops=%d is not between 0 and %d\00", align 1
@ix86_align_jumps_string = common global i8* null, align 8
@.str42 = private unnamed_addr constant [45 x i8] c"-malign-jumps is obsolete, use -falign-jumps\00", align 1
@align_jumps = external global i32
@ix86_align_funcs_string = common global i8* null, align 8
@.str43 = private unnamed_addr constant [53 x i8] c"-malign-functions is obsolete, use -falign-functions\00", align 1
@align_functions = external global i32
@align_loops_max_skip = external global i32
@align_jumps_max_skip = external global i32
@ix86_preferred_stack_boundary = common global i32 0, align 4
@ix86_preferred_stack_boundary_string = common global i8* null, align 8
@.str44 = private unnamed_addr constant [55 x i8] c"-mpreferred-stack-boundary=%d is not between %d and 12\00", align 1
@ix86_branch_cost = common global i32 0, align 4
@ix86_branch_cost_string = common global i8* null, align 8
@.str45 = private unnamed_addr constant [40 x i8] c"-mbranch-cost=%d is not between 0 and 5\00", align 1
@flag_omit_frame_pointer = external global i32
@flag_unsafe_math_optimizations = external global i32
@.str46 = private unnamed_addr constant [48 x i8] c"-malign-double makes no sense in the 64bit mode\00", align 1
@.str47 = private unnamed_addr constant [57 x i8] c"-mrtd calling convention not supported in the 64bit mode\00", align 1
@ix86_fpmath = common global i32 0, align 4
@ix86_fpmath_string = common global i8* null, align 8
@.str48 = private unnamed_addr constant [4 x i8] c"387\00", align 1
@.str49 = private unnamed_addr constant [4 x i8] c"sse\00", align 1
@.str50 = private unnamed_addr constant [52 x i8] c"SSE instruction set disabled, using 387 arithmetics\00", align 1
@.str51 = private unnamed_addr constant [8 x i8] c"387,sse\00", align 1
@.str52 = private unnamed_addr constant [8 x i8] c"sse,387\00", align 1
@.str53 = private unnamed_addr constant [52 x i8] c"387 instruction set disabled, using SSE arithmetics\00", align 1
@.str54 = private unnamed_addr constant [36 x i8] c"bad value (%s) for -mfpmath= switch\00", align 1
@internal_label_prefix = internal global [16 x i8] zeroinitializer, align 16
@.str55 = private unnamed_addr constant [7 x i8] c"*.%s%u\00", align 1
@.str56 = private unnamed_addr constant [3 x i8] c"LX\00", align 1
@internal_label_prefix_len = internal unnamed_addr global i32 0, align 4
@flag_schedule_insns = external global i32
@optimize = external global i32
@flag_pcc_struct_return = external global i32
@flag_asynchronous_unwind_tables = external global i32
@.str57 = private unnamed_addr constant [8 x i8] c"stdcall\00", align 1
@.str58 = private unnamed_addr constant [6 x i8] c"cdecl\00", align 1
@.str59 = private unnamed_addr constant [8 x i8] c"regparm\00", align 1
@ix86_attribute_table = constant [4 x %struct.attribute_spec] [%struct.attribute_spec { i8* getelementptr inbounds ([8 x i8]* @.str57, i32 0, i32 0), i32 0, i32 0, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @ix86_handle_cdecl_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([6 x i8]* @.str58, i32 0, i32 0), i32 0, i32 0, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @ix86_handle_cdecl_attribute }, %struct.attribute_spec { i8* getelementptr inbounds ([8 x i8]* @.str59, i32 0, i32 0), i32 1, i32 1, i8 0, i8 1, i8 1, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* @ix86_handle_regparm_attribute }, %struct.attribute_spec zeroinitializer], align 16
@global_trees = external global [51 x %union.tree_node*]
@mode_size = external constant [59 x i8]
@fixed_regs = external global [53 x i8]
@x86_64_int_parameter_registers = internal constant [6 x i32] [i32 5, i32 4, i32 1, i32 2, i32 37, i32 38], align 16
@ix86_debug_arg_string = common global i8* null, align 8
@stderr = external constant %struct._IO_FILE*
@.str60 = private unnamed_addr constant [24 x i8] c"\0Ainit_cumulative_args (\00", align 1
@.str61 = private unnamed_addr constant [32 x i8] c"fntype code = %s, ret code = %s\00", align 1
@tree_code_name = external global [256 x i8*]
@.str62 = private unnamed_addr constant [10 x i8] c"no fntype\00", align 1
@.str63 = private unnamed_addr constant [15 x i8] c", libname = %s\00", align 1
@.str64 = private unnamed_addr constant [14 x i8] c", nregs=%d )\0A\00", align 1
@.str65 = private unnamed_addr constant [61 x i8] c"function_adv (sz=%d, wds=%2d, nregs=%d, mode=%s, named=%d)\0A\0A\00", align 1
@mode_name = external constant [59 x i8*]
@const_int_rtx = external global [129 x %struct.rtx_def*]
@.str66 = private unnamed_addr constant [61 x i8] c"function_arg (size=%d, wds=%2d, nregs=%d, mode=%4s, named=%d\00", align 1
@.str67 = private unnamed_addr constant [12 x i8] c", reg=%%e%s\00", align 1
@reg_names = external global [53 x i8*]
@.str68 = private unnamed_addr constant [8 x i8] c", stack\00", align 1
@.str69 = private unnamed_addr constant [4 x i8] c" )\0A\00", align 1
@x86_64_int_return_registers = internal constant [4 x i32] [i32 0, i32 1, i32 5, i32 4], align 16
@mode_class = external constant [59 x i32]
@integer_types = external global [11 x %union.tree_node*]
@.str70 = private unnamed_addr constant [14 x i8] c"__va_list_tag\00", align 1
@.str71 = private unnamed_addr constant [10 x i8] c"gp_offset\00", align 1
@.str72 = private unnamed_addr constant [10 x i8] c"fp_offset\00", align 1
@.str73 = private unnamed_addr constant [18 x i8] c"overflow_arg_area\00", align 1
@.str74 = private unnamed_addr constant [14 x i8] c"reg_save_area\00", align 1
@cfun = external global %struct.function*
@current_function_decl = external global %union.tree_node*
@global_rtl = external global [11 x %struct.rtx_def*]
@.str75 = private unnamed_addr constant [46 x i8] c"va_start: words = %d, n_gpr = %d, n_fpr = %d\0A\00", align 1
@ix86_va_arg.intreg = internal global [6 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5], align 16
@const_tiny_rtx = external global [3 x [59 x %struct.rtx_def*]]
@rtx_class = external constant [153 x i8]
@.str76 = private unnamed_addr constant [7 x i8] c"i386.c\00", align 1
@__FUNCTION__.memory_displacement_operand = private unnamed_addr constant [28 x i8] c"memory_displacement_operand\00", align 1
@__FUNCTION__.aligned_operand = private unnamed_addr constant [16 x i8] c"aligned_operand\00", align 1
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@reload_completed = external global i32
@frame_pointer_needed = external global i32
@pic_label_name = internal global [32 x i8] zeroinitializer, align 16
@.str77 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@pic_offset_table_rtx = external global %struct.rtx_def*
@.str78 = private unnamed_addr constant [23 x i8] c"mov{l}\09{%1, %0|%0, %1}\00", align 1
@.str79 = private unnamed_addr constant [4 x i8] c"ret\00", align 1
@__FUNCTION__.load_pic_register = private unnamed_addr constant [18 x i8] c"load_pic_register\00", align 1
@.str80 = private unnamed_addr constant [22 x i8] c"_GLOBAL_OFFSET_TABLE_\00", align 1
@.str81 = private unnamed_addr constant [4 x i8] c"LPR\00", align 1
@__FUNCTION__.ix86_initial_elimination_offset = private unnamed_addr constant [32 x i8] c"ix86_initial_elimination_offset\00", align 1
@use_fast_prologue_epilogue = internal unnamed_addr global i32 0, align 4
@__FUNCTION__.ix86_expand_prologue = private unnamed_addr constant [21 x i8] c"ix86_expand_prologue\00", align 1
@.str82 = private unnamed_addr constant [8 x i8] c"_alloca\00", align 1
@current_function_sp_is_unchanging = external global i32
@__FUNCTION__.ix86_expand_epilogue = private unnamed_addr constant [21 x i8] c"ix86_expand_epilogue\00", align 1
@__FUNCTION__.ix86_address_cost = private unnamed_addr constant [18 x i8] c"ix86_address_cost\00", align 1
@ix86_debug_addr_string = common global i8* null, align 8
@.str83 = private unnamed_addr constant [58 x i8] c"\0A======\0AGO_IF_LEGITIMATE_ADDRESS, mode = %s, strict = %d\0A\00", align 1
@.str84 = private unnamed_addr constant [21 x i8] c"decomposition failed\00", align 1
@.str85 = private unnamed_addr constant [23 x i8] c"base is not a register\00", align 1
@.str86 = private unnamed_addr constant [21 x i8] c"base is not in Pmode\00", align 1
@reg_renumber = external global i16*
@.str87 = private unnamed_addr constant [18 x i8] c"base is not valid\00", align 1
@.str88 = private unnamed_addr constant [24 x i8] c"index is not a register\00", align 1
@.str89 = private unnamed_addr constant [22 x i8] c"index is not in Pmode\00", align 1
@.str90 = private unnamed_addr constant [19 x i8] c"index is not valid\00", align 1
@.str91 = private unnamed_addr constant [20 x i8] c"scale without index\00", align 1
@.str92 = private unnamed_addr constant [32 x i8] c"scale is not a valid multiplier\00", align 1
@.str93 = private unnamed_addr constant [29 x i8] c"displacement is not constant\00", align 1
@.str94 = private unnamed_addr constant [29 x i8] c"displacement is out of range\00", align 1
@.str95 = private unnamed_addr constant [31 x i8] c"displacement is a const_double\00", align 1
@.str96 = private unnamed_addr constant [34 x i8] c"non-constant pic memory reference\00", align 1
@.str97 = private unnamed_addr constant [41 x i8] c"displacement is an invalid pic construct\00", align 1
@.str98 = private unnamed_addr constant [10 x i8] c"Success.\0A\00", align 1
@.str99 = private unnamed_addr constant [11 x i8] c"Error: %s\0A\00", align 1
@__FUNCTION__.legitimize_pic_address = private unnamed_addr constant [23 x i8] c"legitimize_pic_address\00", align 1
@.str100 = private unnamed_addr constant [43 x i8] c"\0A==========\0ALEGITIMIZE_ADDRESS, mode = %s\0A\00", align 1
@__FUNCTION__.print_reg = private unnamed_addr constant [10 x i8] c"print_reg\00", align 1
@.str102 = private unnamed_addr constant [39 x i8] c"extended registers have no high halves\00", align 1
@.str103 = private unnamed_addr constant [5 x i8] c"r%ib\00", align 1
@.str104 = private unnamed_addr constant [5 x i8] c"r%iw\00", align 1
@.str105 = private unnamed_addr constant [5 x i8] c"r%id\00", align 1
@.str106 = private unnamed_addr constant [4 x i8] c"r%i\00", align 1
@.str107 = private unnamed_addr constant [47 x i8] c"unsupported operand size for extended register\00", align 1
@.str108 = private unnamed_addr constant [6 x i8] c"st(0)\00", align 1
@hi_reg_name = internal unnamed_addr constant [53 x i8*] [i8* getelementptr inbounds ([3 x i8]* @.str417, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str418, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str419, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str420, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str421, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str422, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str423, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str424, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str425, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str426, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str427, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str428, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str429, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str430, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str431, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str432, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str433, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str434, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str435, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str436, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str437, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str438, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str439, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str440, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str441, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str442, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str443, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str444, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str445, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str446, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str447, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str448, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str449, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str450, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str451, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str452, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str453, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str454, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str455, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str456, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str457, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str458, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str459, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str460, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str461, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str462, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str463, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str464, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str465, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str466, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str467, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str468, i32 0, i32 0)], align 16
@qi_reg_name = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([3 x i8]* @.str409, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str410, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str411, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str412, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str413, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str414, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str415, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str416, i32 0, i32 0)], align 16
@qi_high_reg_name = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([3 x i8]* @.str405, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str406, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str407, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str408, i32 0, i32 0)], align 16
@__FUNCTION__.print_operand = private unnamed_addr constant [14 x i8] c"print_operand\00", align 1
@.str109 = private unnamed_addr constant [3 x i8] c"eq\00", align 1
@.str110 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str111 = private unnamed_addr constant [3 x i8] c"le\00", align 1
@.str112 = private unnamed_addr constant [6 x i8] c"unord\00", align 1
@.str113 = private unnamed_addr constant [4 x i8] c"neq\00", align 1
@.str114 = private unnamed_addr constant [4 x i8] c"nlt\00", align 1
@.str115 = private unnamed_addr constant [4 x i8] c"nle\00", align 1
@.str116 = private unnamed_addr constant [4 x i8] c"ord\00", align 1
@.str117 = private unnamed_addr constant [77 x i8] c"operand is neither a constant nor a condition code, invalid operand code 'c'\00", align 1
@current_output_insn = external global %struct.rtx_def*
@.str118 = private unnamed_addr constant [6 x i8] c"ds ; \00", align 1
@.str119 = private unnamed_addr constant [6 x i8] c"cs ; \00", align 1
@.str120 = private unnamed_addr constant [26 x i8] c"invalid operand code `%c'\00", align 1
@.str121 = private unnamed_addr constant [5 x i8] c"BYTE\00", align 1
@.str122 = private unnamed_addr constant [5 x i8] c"WORD\00", align 1
@.str123 = private unnamed_addr constant [6 x i8] c"DWORD\00", align 1
@.str124 = private unnamed_addr constant [6 x i8] c"QWORD\00", align 1
@.str125 = private unnamed_addr constant [6 x i8] c"XWORD\00", align 1
@.str126 = private unnamed_addr constant [8 x i8] c"XMMWORD\00", align 1
@.str127 = private unnamed_addr constant [6 x i8] c" PTR \00", align 1
@.str128 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@.str129 = private unnamed_addr constant [13 x i8] c"OFFSET FLAT:\00", align 1
@.str130 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@__FUNCTION__.print_operand_address = private unnamed_addr constant [22 x i8] c"print_operand_address\00", align 1
@.str131 = private unnamed_addr constant [4 x i8] c"ds:\00", align 1
@.str132 = private unnamed_addr constant [7 x i8] c"(%rip)\00", align 1
@.str133 = private unnamed_addr constant [4 x i8] c",%d\00", align 1
@.str134 = private unnamed_addr constant [4 x i8] c"*%d\00", align 1
@output_387_binary_op.buf = internal global [30 x i8] zeroinitializer, align 16
@.str135 = private unnamed_addr constant [6 x i8] c"fiadd\00", align 1
@.str136 = private unnamed_addr constant [5 x i8] c"fadd\00", align 1
@.str137 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str138 = private unnamed_addr constant [6 x i8] c"fisub\00", align 1
@.str139 = private unnamed_addr constant [5 x i8] c"fsub\00", align 1
@.str140 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str141 = private unnamed_addr constant [6 x i8] c"fimul\00", align 1
@.str142 = private unnamed_addr constant [5 x i8] c"fmul\00", align 1
@.str143 = private unnamed_addr constant [4 x i8] c"mul\00", align 1
@.str144 = private unnamed_addr constant [6 x i8] c"fidiv\00", align 1
@.str145 = private unnamed_addr constant [5 x i8] c"fdiv\00", align 1
@.str146 = private unnamed_addr constant [4 x i8] c"div\00", align 1
@__FUNCTION__.output_387_binary_op = private unnamed_addr constant [21 x i8] c"output_387_binary_op\00", align 1
@.str147 = private unnamed_addr constant [19 x i8] c"ss\09{%2, %0|%0, %2}\00", align 1
@.str148 = private unnamed_addr constant [19 x i8] c"sd\09{%2, %0|%0, %2}\00", align 1
@.str149 = private unnamed_addr constant [7 x i8] c"%z2\09%2\00", align 1
@.str150 = private unnamed_addr constant [18 x i8] c"p\09{%0, %2|%2, %0}\00", align 1
@.str151 = private unnamed_addr constant [18 x i8] c"p\09{%2, %0|%0, %2}\00", align 1
@.str152 = private unnamed_addr constant [19 x i8] c"\09{%y2, %0|%0, %y2}\00", align 1
@.str153 = private unnamed_addr constant [17 x i8] c"\09{%2, %0|%0, %2}\00", align 1
@.str154 = private unnamed_addr constant [8 x i8] c"r%z1\09%1\00", align 1
@.str155 = private unnamed_addr constant [21 x i8] c"{p\09%0, %2|rp\09%2, %0}\00", align 1
@.str156 = private unnamed_addr constant [21 x i8] c"{rp\09%2, %0|p\09%0, %2}\00", align 1
@.str157 = private unnamed_addr constant [21 x i8] c"{rp\09%0, %1|p\09%1, %0}\00", align 1
@.str158 = private unnamed_addr constant [21 x i8] c"{p\09%1, %0|rp\09%0, %1}\00", align 1
@.str159 = private unnamed_addr constant [20 x i8] c"r\09{%y1, %0|%0, %y1}\00", align 1
@.str160 = private unnamed_addr constant [19 x i8] c"{\09%1, %0|r\09%0, %1}\00", align 1
@.str161 = private unnamed_addr constant [19 x i8] c"{r\09%2, %0|\09%0, %2}\00", align 1
@.str162 = private unnamed_addr constant [8 x i8] c"fld\09%y1\00", align 1
@__FUNCTION__.output_fix_trunc = private unnamed_addr constant [17 x i8] c"output_fix_trunc\00", align 1
@.str163 = private unnamed_addr constant [9 x i8] c"fldcw\09%3\00", align 1
@.str164 = private unnamed_addr constant [12 x i8] c"fistp%z0\09%0\00", align 1
@.str165 = private unnamed_addr constant [11 x i8] c"fist%z0\09%0\00", align 1
@.str166 = private unnamed_addr constant [9 x i8] c"fldcw\09%2\00", align 1
@.str167 = private unnamed_addr constant [24 x i8] c"ucomiss\09{%1, %0|%0, %1}\00", align 1
@.str168 = private unnamed_addr constant [23 x i8] c"comiss\09{%1, %0|%0, %y}\00", align 1
@.str169 = private unnamed_addr constant [24 x i8] c"ucomisd\09{%1, %0|%0, %1}\00", align 1
@.str170 = private unnamed_addr constant [23 x i8] c"comisd\09{%1, %0|%0, %y}\00", align 1
@__FUNCTION__.output_fp_compare = private unnamed_addr constant [18 x i8] c"output_fp_compare\00", align 1
@.str171 = private unnamed_addr constant [26 x i8] c"fucomip\09{%y1, %0|%0, %y1}\00", align 1
@.str172 = private unnamed_addr constant [25 x i8] c"fcomip\09{%y1, %0|%0, %y1}\00", align 1
@.str173 = private unnamed_addr constant [9 x i8] c"fstp\09%y0\00", align 1
@.str174 = private unnamed_addr constant [19 x i8] c"fucompp\0A\09fnstsw\09%0\00", align 1
@.str175 = private unnamed_addr constant [18 x i8] c"fcompp\0A\09fnstsw\09%0\00", align 1
@.str176 = private unnamed_addr constant [8 x i8] c"fucompp\00", align 1
@.str177 = private unnamed_addr constant [7 x i8] c"fcompp\00", align 1
@output_fp_compare.alt = internal unnamed_addr constant [24 x i8*] [i8* getelementptr inbounds ([12 x i8]* @.str178, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str179, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str180, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str181, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str182, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str183, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([24 x i8]* @.str184, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.str172, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.str185, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str171, i32 0, i32 0), i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([23 x i8]* @.str186, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str187, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str188, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.str189, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str190, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.str191, i32 0, i32 0), i8* null, i8* null], align 16
@.str178 = private unnamed_addr constant [12 x i8] c"fcom%z1\09%y1\00", align 1
@.str179 = private unnamed_addr constant [13 x i8] c"fcomp%z1\09%y1\00", align 1
@.str180 = private unnamed_addr constant [13 x i8] c"fucom%z1\09%y1\00", align 1
@.str181 = private unnamed_addr constant [14 x i8] c"fucomp%z1\09%y1\00", align 1
@.str182 = private unnamed_addr constant [13 x i8] c"ficom%z1\09%y1\00", align 1
@.str183 = private unnamed_addr constant [14 x i8] c"ficomp%z1\09%y1\00", align 1
@.str184 = private unnamed_addr constant [24 x i8] c"fcomi\09{%y1, %0|%0, %y1}\00", align 1
@.str185 = private unnamed_addr constant [25 x i8] c"fucomi\09{%y1, %0|%0, %y1}\00", align 1
@.str186 = private unnamed_addr constant [23 x i8] c"fcom%z2\09%y2\0A\09fnstsw\09%0\00", align 1
@.str187 = private unnamed_addr constant [24 x i8] c"fcomp%z2\09%y2\0A\09fnstsw\09%0\00", align 1
@.str188 = private unnamed_addr constant [24 x i8] c"fucom%z2\09%y2\0A\09fnstsw\09%0\00", align 1
@.str189 = private unnamed_addr constant [25 x i8] c"fucomp%z2\09%y2\0A\09fnstsw\09%0\00", align 1
@.str190 = private unnamed_addr constant [24 x i8] c"ficom%z2\09%y2\0A\09fnstsw\09%0\00", align 1
@.str191 = private unnamed_addr constant [25 x i8] c"ficomp%z2\09%y2\0A\09fnstsw\09%0\00", align 1
@.str192 = private unnamed_addr constant [8 x i8] c"%s%s%d\0A\00", align 1
@.str193 = private unnamed_addr constant [3 x i8] c".L\00", align 1
@.str194 = private unnamed_addr constant [19 x i8] c"%s%s%d-.+(.-%s%d)\0A\00", align 1
@.str195 = private unnamed_addr constant [36 x i8] c"%s%U_GLOBAL_OFFSET_TABLE_+[.-%s%d]\0A\00", align 1
@__FUNCTION__.ix86_expand_clear = private unnamed_addr constant [18 x i8] c"ix86_expand_clear\00", align 1
@reload_in_progress = external global i32
@no_new_pseudos = external global i32
@__FUNCTION__.ix86_expand_binary_operator = private unnamed_addr constant [28 x i8] c"ix86_expand_binary_operator\00", align 1
@__FUNCTION__.ix86_expand_unary_operator = private unnamed_addr constant [27 x i8] c"ix86_expand_unary_operator\00", align 1
@__FUNCTION__.ix86_match_ccmode = private unnamed_addr constant [18 x i8] c"ix86_match_ccmode\00", align 1
@__FUNCTION__.ix86_cc_mode = private unnamed_addr constant [13 x i8] c"ix86_cc_mode\00", align 1
@optab_table = external global [49 x %struct.optab*]
@__FUNCTION__.ix86_expand_branch = private unnamed_addr constant [19 x i8] c"ix86_expand_branch\00", align 1
@split_branch_probability = external global i32
@__FUNCTION__.ix86_expand_setcc = private unnamed_addr constant [18 x i8] c"ix86_expand_setcc\00", align 1
@__FUNCTION__.ix86_expand_fp_movcc = private unnamed_addr constant [21 x i8] c"ix86_expand_fp_movcc\00", align 1
@__FUNCTION__.ix86_split_long_move = private unnamed_addr constant [21 x i8] c"ix86_split_long_move\00", align 1
@__FUNCTION__.assign_386_stack_local = private unnamed_addr constant [23 x i8] c"assign_386_stack_local\00", align 1
@recog_data = external global %struct.recog_data
@__FUNCTION__.ix86_attr_length_immediate_default = private unnamed_addr constant [35 x i8] c"ix86_attr_length_immediate_default\00", align 1
@.str196 = private unnamed_addr constant [18 x i8] c"unknown insn mode\00", align 1
@__FUNCTION__.x86_initialize_trampoline = private unnamed_addr constant [26 x i8] c"x86_initialize_trampoline\00", align 1
@insn_data = external constant [0 x %struct.insn_data]
@.str197 = private unnamed_addr constant [30 x i8] c"selector must be an immediate\00", align 1
@.str198 = private unnamed_addr constant [26 x i8] c"mask must be an immediate\00", align 1
@__FUNCTION__.ix86_force_to_memory = private unnamed_addr constant [21 x i8] c"ix86_force_to_memory\00", align 1
@__FUNCTION__.ix86_secondary_memory_needed = private unnamed_addr constant [29 x i8] c"ix86_secondary_memory_needed\00", align 1
@call_used_regs = external global [53 x i8]
@reg_alloc_order = external global [53 x i32]
@.str199 = private unnamed_addr constant [23 x i8] c"add{q} {%0, %1|%1, %0}\00", align 1
@.str200 = private unnamed_addr constant [7 x i8] c"\09jmp *\00", align 1
@.str201 = private unnamed_addr constant [18 x i8] c"@GOTPCREL(%%rip)\0A\00", align 1
@.str202 = private unnamed_addr constant [6 x i8] c"\09jmp \00", align 1
@.str204 = private unnamed_addr constant [23 x i8] c"add{l} {%0, %1|%1, %0}\00", align 1
@__FUNCTION__.x86_output_mi_thunk = private unnamed_addr constant [20 x i8] c"x86_output_mi_thunk\00", align 1
@.str205 = private unnamed_addr constant [11 x i8] c"push{l}\09%0\00", align 1
@.str206 = private unnamed_addr constant [9 x i8] c"call\09%P1\00", align 1
@.str207 = private unnamed_addr constant [8 x i8] c".%s%u:\0A\00", align 1
@.str208 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str209 = private unnamed_addr constant [10 x i8] c"pop{l}\09%0\00", align 1
@.str210 = private unnamed_addr constant [52 x i8] c"add{l}\09{%2+[.-%P1], %0|%0, OFFSET FLAT: %2+[.-%P1]}\00", align 1
@.str211 = private unnamed_addr constant [51 x i8] c"mov{l}\09{%0@GOT(%%ebx), %%ecx|%%ecx, %0@GOT[%%ebx]}\00", align 1
@.str212 = private unnamed_addr constant [22 x i8] c"\09pop{l\09%%ebx|\09%%ebx}\0A\00", align 1
@.str213 = private unnamed_addr constant [21 x i8] c"\09jmp\09{*%%ecx|%%ecx}\0A\00", align 1
@.str214 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_comieq\00", align 1
@.str215 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_comilt\00", align 1
@.str216 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_comile\00", align 1
@.str217 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_comigt\00", align 1
@.str218 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_comige\00", align 1
@.str219 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_comineq\00", align 1
@.str220 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_ucomieq\00", align 1
@.str221 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_ucomilt\00", align 1
@.str222 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_ucomile\00", align 1
@.str223 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_ucomigt\00", align 1
@.str224 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_ucomige\00", align 1
@.str225 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_ucomineq\00", align 1
@bdesc_comi = internal constant <{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }> <{ { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 731, i8* getelementptr inbounds ([22 x i8]* @.str214, i32 0, i32 0), i32 34, i32 103, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 731, i8* getelementptr inbounds ([22 x i8]* @.str215, i32 0, i32 0), i32 35, i32 107, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 731, i8* getelementptr inbounds ([22 x i8]* @.str216, i32 0, i32 0), i32 36, i32 106, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 731, i8* getelementptr inbounds ([22 x i8]* @.str217, i32 0, i32 0), i32 37, i32 107, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 731, i8* getelementptr inbounds ([22 x i8]* @.str218, i32 0, i32 0), i32 38, i32 106, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 731, i8* getelementptr inbounds ([23 x i8]* @.str219, i32 0, i32 0), i32 39, i32 102, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 732, i8* getelementptr inbounds ([23 x i8]* @.str220, i32 0, i32 0), i32 40, i32 103, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 732, i8* getelementptr inbounds ([23 x i8]* @.str221, i32 0, i32 0), i32 41, i32 107, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 732, i8* getelementptr inbounds ([23 x i8]* @.str222, i32 0, i32 0), i32 42, i32 106, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 732, i8* getelementptr inbounds ([23 x i8]* @.str223, i32 0, i32 0), i32 43, i32 107, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 732, i8* getelementptr inbounds ([23 x i8]* @.str224, i32 0, i32 0), i32 44, i32 106, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 732, i8* getelementptr inbounds ([24 x i8]* @.str225, i32 0, i32 0), i32 45, i32 102, i32 0, [4 x i8] undef } }>, align 16
@bdesc_1arg = internal unnamed_addr constant <{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }> <{ { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 4259840, i32 677, i8* null, i32 71, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 676, i8* null, i32 70, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 702, i8* null, i32 142, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 700, i8* null, i32 140, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 698, i8* null, i32 138, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 740, i8* null, i32 47, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 743, i8* null, i32 49, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 741, i8* null, i32 50, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 744, i8* null, i32 51, i32 0, i32 0, [4 x i8] undef } }>, align 16
@.str226 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_addps\00", align 1
@.str227 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_subps\00", align 1
@.str228 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_mulps\00", align 1
@.str229 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_divps\00", align 1
@.str230 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_addss\00", align 1
@.str231 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_subss\00", align 1
@.str232 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_mulss\00", align 1
@.str233 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_divss\00", align 1
@.str234 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpeqps\00", align 1
@.str235 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpltps\00", align 1
@.str236 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpleps\00", align 1
@.str237 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpgtps\00", align 1
@.str238 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpgeps\00", align 1
@.str239 = private unnamed_addr constant [26 x i8] c"__builtin_ia32_cmpunordps\00", align 1
@.str240 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpneqps\00", align 1
@.str241 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpnltps\00", align 1
@.str242 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpnleps\00", align 1
@.str243 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpngtps\00", align 1
@.str244 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpngeps\00", align 1
@.str245 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpordps\00", align 1
@.str246 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpeqss\00", align 1
@.str247 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpltss\00", align 1
@.str248 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpless\00", align 1
@.str249 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpgtss\00", align 1
@.str250 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_cmpgess\00", align 1
@.str251 = private unnamed_addr constant [26 x i8] c"__builtin_ia32_cmpunordss\00", align 1
@.str252 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpneqss\00", align 1
@.str253 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpnltss\00", align 1
@.str254 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpnless\00", align 1
@.str255 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpngtss\00", align 1
@.str256 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpngess\00", align 1
@.str257 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cmpordss\00", align 1
@.str258 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_minps\00", align 1
@.str259 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_maxps\00", align 1
@.str260 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_minss\00", align 1
@.str261 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_maxss\00", align 1
@.str262 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_movss\00", align 1
@.str263 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_movhlps\00", align 1
@.str264 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_movlhps\00", align 1
@.str265 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_unpckhps\00", align 1
@.str266 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_unpcklps\00", align 1
@.str267 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_paddb\00", align 1
@.str268 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_paddw\00", align 1
@.str269 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_paddd\00", align 1
@.str270 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psubb\00", align 1
@.str271 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psubw\00", align 1
@.str272 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psubd\00", align 1
@.str273 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_paddsb\00", align 1
@.str274 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_paddsw\00", align 1
@.str275 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_psubsb\00", align 1
@.str276 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_psubsw\00", align 1
@.str277 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_paddusb\00", align 1
@.str278 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_paddusw\00", align 1
@.str279 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_psubusb\00", align 1
@.str280 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_psubusw\00", align 1
@.str281 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pmullw\00", align 1
@.str282 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pmulhw\00", align 1
@.str283 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pmulhuw\00", align 1
@.str284 = private unnamed_addr constant [20 x i8] c"__builtin_ia32_pand\00", align 1
@.str285 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pandn\00", align 1
@.str286 = private unnamed_addr constant [19 x i8] c"__builtin_ia32_por\00", align 1
@.str287 = private unnamed_addr constant [20 x i8] c"__builtin_ia32_pxor\00", align 1
@.str288 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pavgb\00", align 1
@.str289 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pavgw\00", align 1
@.str290 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pcmpeqb\00", align 1
@.str291 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pcmpeqw\00", align 1
@.str292 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pcmpeqd\00", align 1
@.str293 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pcmpgtb\00", align 1
@.str294 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pcmpgtw\00", align 1
@.str295 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pcmpgtd\00", align 1
@.str296 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pmaxub\00", align 1
@.str297 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pmaxsw\00", align 1
@.str298 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pminub\00", align 1
@.str299 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pminsw\00", align 1
@.str300 = private unnamed_addr constant [25 x i8] c"__builtin_ia32_punpckhbw\00", align 1
@.str301 = private unnamed_addr constant [25 x i8] c"__builtin_ia32_punpckhwd\00", align 1
@.str302 = private unnamed_addr constant [25 x i8] c"__builtin_ia32_punpckhdq\00", align 1
@.str303 = private unnamed_addr constant [25 x i8] c"__builtin_ia32_punpcklbw\00", align 1
@.str304 = private unnamed_addr constant [25 x i8] c"__builtin_ia32_punpcklwd\00", align 1
@.str305 = private unnamed_addr constant [25 x i8] c"__builtin_ia32_punpckldq\00", align 1
@bdesc_2arg = internal constant <{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }> <{ { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 690, i8* getelementptr inbounds ([21 x i8]* @.str226, i32 0, i32 0), i32 0, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 692, i8* getelementptr inbounds ([21 x i8]* @.str227, i32 0, i32 0), i32 6, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 694, i8* getelementptr inbounds ([21 x i8]* @.str228, i32 0, i32 0), i32 4, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 696, i8* getelementptr inbounds ([21 x i8]* @.str229, i32 0, i32 0), i32 2, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 691, i8* getelementptr inbounds ([21 x i8]* @.str230, i32 0, i32 0), i32 1, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 693, i8* getelementptr inbounds ([21 x i8]* @.str231, i32 0, i32 0), i32 7, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 695, i8* getelementptr inbounds ([21 x i8]* @.str232, i32 0, i32 0), i32 5, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 697, i8* getelementptr inbounds ([21 x i8]* @.str233, i32 0, i32 0), i32 3, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 727, i8* getelementptr inbounds ([23 x i8]* @.str234, i32 0, i32 0), i32 8, i32 103, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 727, i8* getelementptr inbounds ([23 x i8]* @.str235, i32 0, i32 0), i32 9, i32 107, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 727, i8* getelementptr inbounds ([23 x i8]* @.str236, i32 0, i32 0), i32 10, i32 106, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 727, i8* getelementptr inbounds ([23 x i8]* @.str237, i32 0, i32 0), i32 11, i32 107, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 727, i8* getelementptr inbounds ([23 x i8]* @.str238, i32 0, i32 0), i32 12, i32 106, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 727, i8* getelementptr inbounds ([26 x i8]* @.str239, i32 0, i32 0), i32 19, i32 112, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 728, i8* getelementptr inbounds ([24 x i8]* @.str240, i32 0, i32 0), i32 13, i32 103, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 728, i8* getelementptr inbounds ([24 x i8]* @.str241, i32 0, i32 0), i32 14, i32 107, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 728, i8* getelementptr inbounds ([24 x i8]* @.str242, i32 0, i32 0), i32 15, i32 106, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 728, i8* getelementptr inbounds ([24 x i8]* @.str243, i32 0, i32 0), i32 16, i32 107, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 728, i8* getelementptr inbounds ([24 x i8]* @.str244, i32 0, i32 0), i32 17, i32 106, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 728, i8* getelementptr inbounds ([24 x i8]* @.str245, i32 0, i32 0), i32 18, i32 112, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 729, i8* getelementptr inbounds ([23 x i8]* @.str246, i32 0, i32 0), i32 21, i32 103, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 729, i8* getelementptr inbounds ([23 x i8]* @.str247, i32 0, i32 0), i32 22, i32 107, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 729, i8* getelementptr inbounds ([23 x i8]* @.str248, i32 0, i32 0), i32 23, i32 106, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 729, i8* getelementptr inbounds ([23 x i8]* @.str249, i32 0, i32 0), i32 24, i32 107, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 729, i8* getelementptr inbounds ([23 x i8]* @.str250, i32 0, i32 0), i32 25, i32 106, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 729, i8* getelementptr inbounds ([26 x i8]* @.str251, i32 0, i32 0), i32 32, i32 112, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 730, i8* getelementptr inbounds ([24 x i8]* @.str252, i32 0, i32 0), i32 26, i32 103, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 730, i8* getelementptr inbounds ([24 x i8]* @.str253, i32 0, i32 0), i32 27, i32 107, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 730, i8* getelementptr inbounds ([24 x i8]* @.str254, i32 0, i32 0), i32 28, i32 106, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 730, i8* getelementptr inbounds ([24 x i8]* @.str255, i32 0, i32 0), i32 29, i32 107, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 730, i8* getelementptr inbounds ([24 x i8]* @.str256, i32 0, i32 0), i32 30, i32 106, i32 1, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 730, i8* getelementptr inbounds ([24 x i8]* @.str257, i32 0, i32 0), i32 31, i32 112, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 737, i8* getelementptr inbounds ([21 x i8]* @.str258, i32 0, i32 0), i32 54, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 735, i8* getelementptr inbounds ([21 x i8]* @.str259, i32 0, i32 0), i32 52, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 738, i8* getelementptr inbounds ([21 x i8]* @.str260, i32 0, i32 0), i32 55, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 736, i8* getelementptr inbounds ([21 x i8]* @.str261, i32 0, i32 0), i32 53, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 687, i8* getelementptr inbounds ([21 x i8]* @.str262, i32 0, i32 0), i32 62, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 682, i8* getelementptr inbounds ([23 x i8]* @.str263, i32 0, i32 0), i32 63, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 683, i8* getelementptr inbounds ([23 x i8]* @.str264, i32 0, i32 0), i32 64, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 733, i8* getelementptr inbounds ([24 x i8]* @.str265, i32 0, i32 0), i32 144, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 734, i8* getelementptr inbounds ([24 x i8]* @.str266, i32 0, i32 0), i32 145, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 745, i8* getelementptr inbounds ([21 x i8]* @.str267, i32 0, i32 0), i32 77, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 746, i8* getelementptr inbounds ([21 x i8]* @.str268, i32 0, i32 0), i32 78, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 747, i8* getelementptr inbounds ([21 x i8]* @.str269, i32 0, i32 0), i32 79, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 752, i8* getelementptr inbounds ([21 x i8]* @.str270, i32 0, i32 0), i32 84, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 753, i8* getelementptr inbounds ([21 x i8]* @.str271, i32 0, i32 0), i32 85, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 754, i8* getelementptr inbounds ([21 x i8]* @.str272, i32 0, i32 0), i32 86, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 748, i8* getelementptr inbounds ([22 x i8]* @.str273, i32 0, i32 0), i32 80, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 749, i8* getelementptr inbounds ([22 x i8]* @.str274, i32 0, i32 0), i32 81, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 755, i8* getelementptr inbounds ([22 x i8]* @.str275, i32 0, i32 0), i32 87, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 756, i8* getelementptr inbounds ([22 x i8]* @.str276, i32 0, i32 0), i32 88, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 750, i8* getelementptr inbounds ([23 x i8]* @.str277, i32 0, i32 0), i32 82, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 751, i8* getelementptr inbounds ([23 x i8]* @.str278, i32 0, i32 0), i32 83, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 757, i8* getelementptr inbounds ([23 x i8]* @.str279, i32 0, i32 0), i32 89, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 758, i8* getelementptr inbounds ([23 x i8]* @.str280, i32 0, i32 0), i32 90, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 759, i8* getelementptr inbounds ([22 x i8]* @.str281, i32 0, i32 0), i32 112, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 760, i8* getelementptr inbounds ([22 x i8]* @.str282, i32 0, i32 0), i32 111, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 4259840, i32 761, i8* getelementptr inbounds ([23 x i8]* @.str283, i32 0, i32 0), i32 110, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 766, i8* getelementptr inbounds ([20 x i8]* @.str284, i32 0, i32 0), i32 91, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 767, i8* getelementptr inbounds ([21 x i8]* @.str285, i32 0, i32 0), i32 92, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 763, i8* getelementptr inbounds ([19 x i8]* @.str286, i32 0, i32 0), i32 93, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 764, i8* getelementptr inbounds ([20 x i8]* @.str287, i32 0, i32 0), i32 94, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 4259840, i32 768, i8* getelementptr inbounds ([21 x i8]* @.str288, i32 0, i32 0), i32 95, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 4259840, i32 769, i8* getelementptr inbounds ([21 x i8]* @.str289, i32 0, i32 0), i32 96, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 774, i8* getelementptr inbounds ([23 x i8]* @.str290, i32 0, i32 0), i32 97, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 775, i8* getelementptr inbounds ([23 x i8]* @.str291, i32 0, i32 0), i32 98, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 776, i8* getelementptr inbounds ([23 x i8]* @.str292, i32 0, i32 0), i32 99, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 777, i8* getelementptr inbounds ([23 x i8]* @.str293, i32 0, i32 0), i32 100, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 778, i8* getelementptr inbounds ([23 x i8]* @.str294, i32 0, i32 0), i32 101, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 779, i8* getelementptr inbounds ([23 x i8]* @.str295, i32 0, i32 0), i32 102, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 4259840, i32 780, i8* getelementptr inbounds ([22 x i8]* @.str296, i32 0, i32 0), i32 107, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 4259840, i32 781, i8* getelementptr inbounds ([22 x i8]* @.str297, i32 0, i32 0), i32 106, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 4259840, i32 782, i8* getelementptr inbounds ([22 x i8]* @.str298, i32 0, i32 0), i32 109, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 4259840, i32 783, i8* getelementptr inbounds ([22 x i8]* @.str299, i32 0, i32 0), i32 108, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 795, i8* getelementptr inbounds ([25 x i8]* @.str300, i32 0, i32 0), i32 131, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 796, i8* getelementptr inbounds ([25 x i8]* @.str301, i32 0, i32 0), i32 132, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 797, i8* getelementptr inbounds ([25 x i8]* @.str302, i32 0, i32 0), i32 133, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 798, i8* getelementptr inbounds ([25 x i8]* @.str303, i32 0, i32 0), i32 134, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 799, i8* getelementptr inbounds ([25 x i8]* @.str304, i32 0, i32 0), i32 135, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 800, i8* getelementptr inbounds ([25 x i8]* @.str305, i32 0, i32 0), i32 136, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 792, i8* null, i32 74, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 793, i8* null, i32 75, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 794, i8* null, i32 76, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 739, i8* null, i32 46, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 65536, i32 742, i8* null, i32 48, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 789, i8* null, i32 115, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 789, i8* null, i32 123, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 790, i8* null, i32 116, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 790, i8* null, i32 124, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 791, i8* null, i32 117, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 791, i8* null, i32 125, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 786, i8* null, i32 120, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 786, i8* null, i32 128, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 787, i8* null, i32 121, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 787, i8* null, i32 129, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 788, i8* null, i32 122, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 788, i8* null, i32 130, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 784, i8* null, i32 118, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 784, i8* null, i32 126, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 785, i8* null, i32 119, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 785, i8* null, i32 127, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 4259840, i32 770, i8* null, i32 113, i32 0, i32 0, [4 x i8] undef }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } { i32 16384, i32 762, i8* null, i32 105, i32 0, i32 0, [4 x i8] undef } }>, align 16
@__FUNCTION__.ix86_expand_binop_builtin = private unnamed_addr constant [26 x i8] c"ix86_expand_binop_builtin\00", align 1
@__FUNCTION__.ix86_init_mmx_sse_builtins = private unnamed_addr constant [27 x i8] c"ix86_init_mmx_sse_builtins\00", align 1
@.str306 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_mmx_zero\00", align 1
@.str307 = private unnamed_addr constant [20 x i8] c"__builtin_ia32_emms\00", align 1
@.str308 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_ldmxcsr\00", align 1
@.str309 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_stmxcsr\00", align 1
@.str310 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psllw\00", align 1
@.str311 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pslld\00", align 1
@.str312 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psllq\00", align 1
@.str313 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psrlw\00", align 1
@.str314 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psrld\00", align 1
@.str315 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psrlq\00", align 1
@.str316 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psraw\00", align 1
@.str317 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_psrad\00", align 1
@.str318 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pshufw\00", align 1
@.str319 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pmaddwd\00", align 1
@.str320 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_packsswb\00", align 1
@.str321 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_packssdw\00", align 1
@.str322 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_packuswb\00", align 1
@.str323 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cvtpi2ps\00", align 1
@.str324 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cvtps2pi\00", align 1
@.str325 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cvtsi2ss\00", align 1
@.str326 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_cvtss2si\00", align 1
@.str327 = private unnamed_addr constant [25 x i8] c"__builtin_ia32_cvttps2pi\00", align 1
@.str328 = private unnamed_addr constant [25 x i8] c"__builtin_ia32_cvttss2si\00", align 1
@.str329 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_andps\00", align 1
@.str330 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_andnps\00", align 1
@.str331 = private unnamed_addr constant [20 x i8] c"__builtin_ia32_orps\00", align 1
@.str332 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_xorps\00", align 1
@.str333 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pextrw\00", align 1
@.str334 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pinsrw\00", align 1
@.str335 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_maskmovq\00", align 1
@.str336 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_loadaps\00", align 1
@.str337 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_loadups\00", align 1
@.str338 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_loadss\00", align 1
@.str339 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_storeaps\00", align 1
@.str340 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_storeups\00", align 1
@.str341 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_storess\00", align 1
@.str342 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_loadhps\00", align 1
@.str343 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_loadlps\00", align 1
@.str344 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_storehps\00", align 1
@.str345 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_storelps\00", align 1
@.str346 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_movmskps\00", align 1
@.str347 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_pmovmskb\00", align 1
@.str348 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_movntps\00", align 1
@.str349 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_movntq\00", align 1
@.str350 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_sfence\00", align 1
@.str351 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_psadbw\00", align 1
@.str352 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_rcpps\00", align 1
@.str353 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_rcpss\00", align 1
@.str354 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_rsqrtps\00", align 1
@.str355 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_rsqrtss\00", align 1
@.str356 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_sqrtps\00", align 1
@.str357 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_sqrtss\00", align 1
@.str358 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_shufps\00", align 1
@.str359 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_femms\00", align 1
@.str360 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pavgusb\00", align 1
@.str361 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pf2id\00", align 1
@.str362 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pfacc\00", align 1
@.str363 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pfadd\00", align 1
@.str364 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pfcmpeq\00", align 1
@.str365 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pfcmpge\00", align 1
@.str366 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pfcmpgt\00", align 1
@.str367 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pfmax\00", align 1
@.str368 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pfmin\00", align 1
@.str369 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pfmul\00", align 1
@.str370 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pfrcp\00", align 1
@.str371 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_pfrcpit1\00", align 1
@.str372 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_pfrcpit2\00", align 1
@.str373 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pfrsqrt\00", align 1
@.str374 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_pfrsqit1\00", align 1
@.str375 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pfsub\00", align 1
@.str376 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pfsubr\00", align 1
@.str377 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pi2fd\00", align 1
@.str378 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pmulhrw\00", align 1
@.str379 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pf2iw\00", align 1
@.str380 = private unnamed_addr constant [22 x i8] c"__builtin_ia32_pfnacc\00", align 1
@.str381 = private unnamed_addr constant [23 x i8] c"__builtin_ia32_pfpnacc\00", align 1
@.str382 = private unnamed_addr constant [21 x i8] c"__builtin_ia32_pi2fw\00", align 1
@.str383 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_pswapdsf\00", align 1
@.str384 = private unnamed_addr constant [24 x i8] c"__builtin_ia32_pswapdsi\00", align 1
@.str385 = private unnamed_addr constant [25 x i8] c"__builtin_ia32_setzerops\00", align 1
@ix86_sched_data = internal unnamed_addr global %union.anon.4 zeroinitializer, align 8
@__FUNCTION__.ix86_variable_issue = private unnamed_addr constant [20 x i8] c"ix86_variable_issue\00", align 1
@.str386 = private unnamed_addr constant [16 x i8] c"PPRO packet: %d\00", align 1
@.str387 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@__FUNCTION__.ix86_agi_dependant = private unnamed_addr constant [19 x i8] c"ix86_agi_dependant\00", align 1
@__FUNCTION__.memory_address_length = private unnamed_addr constant [22 x i8] c"memory_address_length\00", align 1
@__FUNCTION__.ix86_split_to_parts = private unnamed_addr constant [20 x i8] c"ix86_split_to_parts\00", align 1
@__FUNCTION__.ix86_expand_fp_compare = private unnamed_addr constant [23 x i8] c"ix86_expand_fp_compare\00", align 1
@__FUNCTION__.ix86_fp_comparison_arithmetics_cost = private unnamed_addr constant [36 x i8] c"ix86_fp_comparison_arithmetics_cost\00", align 1
@__FUNCTION__.ix86_fp_comparison_codes = private unnamed_addr constant [25 x i8] c"ix86_fp_comparison_codes\00", align 1
@__FUNCTION__.put_condition_code = private unnamed_addr constant [19 x i8] c"put_condition_code\00", align 1
@.str388 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str389 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@.str390 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str391 = private unnamed_addr constant [4 x i8] c"nbe\00", align 1
@.str392 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str393 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str394 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str395 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str396 = private unnamed_addr constant [3 x i8] c"ns\00", align 1
@.str397 = private unnamed_addr constant [3 x i8] c"ge\00", align 1
@.str398 = private unnamed_addr constant [3 x i8] c"nb\00", align 1
@.str399 = private unnamed_addr constant [3 x i8] c"ae\00", align 1
@.str400 = private unnamed_addr constant [3 x i8] c"be\00", align 1
@.str401 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str402 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str403 = private unnamed_addr constant [3 x i8] c"nu\00", align 1
@.str404 = private unnamed_addr constant [3 x i8] c"np\00", align 1
@.str405 = private unnamed_addr constant [3 x i8] c"ah\00", align 1
@.str406 = private unnamed_addr constant [3 x i8] c"dh\00", align 1
@.str407 = private unnamed_addr constant [3 x i8] c"ch\00", align 1
@.str408 = private unnamed_addr constant [3 x i8] c"bh\00", align 1
@.str409 = private unnamed_addr constant [3 x i8] c"al\00", align 1
@.str410 = private unnamed_addr constant [3 x i8] c"dl\00", align 1
@.str411 = private unnamed_addr constant [3 x i8] c"cl\00", align 1
@.str412 = private unnamed_addr constant [3 x i8] c"bl\00", align 1
@.str413 = private unnamed_addr constant [4 x i8] c"sil\00", align 1
@.str414 = private unnamed_addr constant [4 x i8] c"dil\00", align 1
@.str415 = private unnamed_addr constant [4 x i8] c"bpl\00", align 1
@.str416 = private unnamed_addr constant [4 x i8] c"spl\00", align 1
@.str417 = private unnamed_addr constant [3 x i8] c"ax\00", align 1
@.str418 = private unnamed_addr constant [3 x i8] c"dx\00", align 1
@.str419 = private unnamed_addr constant [3 x i8] c"cx\00", align 1
@.str420 = private unnamed_addr constant [3 x i8] c"bx\00", align 1
@.str421 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str422 = private unnamed_addr constant [3 x i8] c"di\00", align 1
@.str423 = private unnamed_addr constant [3 x i8] c"bp\00", align 1
@.str424 = private unnamed_addr constant [3 x i8] c"sp\00", align 1
@.str425 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@.str426 = private unnamed_addr constant [6 x i8] c"st(1)\00", align 1
@.str427 = private unnamed_addr constant [6 x i8] c"st(2)\00", align 1
@.str428 = private unnamed_addr constant [6 x i8] c"st(3)\00", align 1
@.str429 = private unnamed_addr constant [6 x i8] c"st(4)\00", align 1
@.str430 = private unnamed_addr constant [6 x i8] c"st(5)\00", align 1
@.str431 = private unnamed_addr constant [6 x i8] c"st(6)\00", align 1
@.str432 = private unnamed_addr constant [6 x i8] c"st(7)\00", align 1
@.str433 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str434 = private unnamed_addr constant [5 x i8] c"fpsr\00", align 1
@.str435 = private unnamed_addr constant [8 x i8] c"dirflag\00", align 1
@.str436 = private unnamed_addr constant [6 x i8] c"frame\00", align 1
@.str437 = private unnamed_addr constant [5 x i8] c"xmm0\00", align 1
@.str438 = private unnamed_addr constant [5 x i8] c"xmm1\00", align 1
@.str439 = private unnamed_addr constant [5 x i8] c"xmm2\00", align 1
@.str440 = private unnamed_addr constant [5 x i8] c"xmm3\00", align 1
@.str441 = private unnamed_addr constant [5 x i8] c"xmm4\00", align 1
@.str442 = private unnamed_addr constant [5 x i8] c"xmm5\00", align 1
@.str443 = private unnamed_addr constant [5 x i8] c"xmm6\00", align 1
@.str444 = private unnamed_addr constant [5 x i8] c"xmm7\00", align 1
@.str445 = private unnamed_addr constant [4 x i8] c"mm0\00", align 1
@.str446 = private unnamed_addr constant [4 x i8] c"mm1\00", align 1
@.str447 = private unnamed_addr constant [4 x i8] c"mm2\00", align 1
@.str448 = private unnamed_addr constant [4 x i8] c"mm3\00", align 1
@.str449 = private unnamed_addr constant [4 x i8] c"mm4\00", align 1
@.str450 = private unnamed_addr constant [4 x i8] c"mm5\00", align 1
@.str451 = private unnamed_addr constant [4 x i8] c"mm6\00", align 1
@.str452 = private unnamed_addr constant [4 x i8] c"mm7\00", align 1
@.str453 = private unnamed_addr constant [3 x i8] c"r8\00", align 1
@.str454 = private unnamed_addr constant [3 x i8] c"r9\00", align 1
@.str455 = private unnamed_addr constant [4 x i8] c"r10\00", align 1
@.str456 = private unnamed_addr constant [4 x i8] c"r11\00", align 1
@.str457 = private unnamed_addr constant [4 x i8] c"r12\00", align 1
@.str458 = private unnamed_addr constant [4 x i8] c"r13\00", align 1
@.str459 = private unnamed_addr constant [4 x i8] c"r14\00", align 1
@.str460 = private unnamed_addr constant [4 x i8] c"r15\00", align 1
@.str461 = private unnamed_addr constant [5 x i8] c"xmm8\00", align 1
@.str462 = private unnamed_addr constant [5 x i8] c"xmm9\00", align 1
@.str463 = private unnamed_addr constant [6 x i8] c"xmm10\00", align 1
@.str464 = private unnamed_addr constant [6 x i8] c"xmm11\00", align 1
@.str465 = private unnamed_addr constant [6 x i8] c"xmm12\00", align 1
@.str466 = private unnamed_addr constant [6 x i8] c"xmm13\00", align 1
@.str467 = private unnamed_addr constant [6 x i8] c"xmm14\00", align 1
@.str468 = private unnamed_addr constant [6 x i8] c"xmm15\00", align 1
@__FUNCTION__.output_pic_addr_const = private unnamed_addr constant [22 x i8] c"output_pic_addr_const\00", align 1
@.str469 = private unnamed_addr constant [5 x i8] c"@PLT\00", align 1
@asm_out_file = external global %struct._IO_FILE*
@.str470 = private unnamed_addr constant [11 x i8] c"0x%lx%08lx\00", align 1
@.str471 = private unnamed_addr constant [26 x i8] c"floating constant misused\00", align 1
@.str472 = private unnamed_addr constant [5 x i8] c"@GOT\00", align 1
@.str473 = private unnamed_addr constant [8 x i8] c"@GOTOFF\00", align 1
@.str474 = private unnamed_addr constant [16 x i8] c"@GOTPCREL(%RIP)\00", align 1
@.str475 = private unnamed_addr constant [26 x i8] c"invalid UNSPEC as operand\00", align 1
@.str476 = private unnamed_addr constant [30 x i8] c"invalid expression as operand\00", align 1
@ix86_GOT_alias_set.set = internal unnamed_addr global i64 -1, align 8
@regs_ever_live = external global [53 x i8]
@__FUNCTION__.ix86_compute_frame_layout = private unnamed_addr constant [26 x i8] c"ix86_compute_frame_layout\00", align 1
@current_function_is_leaf = external global i32
@.str477 = private unnamed_addr constant [14 x i8] c"Memory class\0A\00", align 1
@.str478 = private unnamed_addr constant [9 x i8] c"Classes:\00", align 1
@.str479 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@x86_64_reg_class_name = internal unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([3 x i8]* @.str480, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str481, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str482, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str483, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str484, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str485, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str486, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str487, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str480, i32 0, i32 0)], align 16
@__FUNCTION__.construct_container = private unnamed_addr constant [20 x i8] c"construct_container\00", align 1
@.str480 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str481 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str482 = private unnamed_addr constant [10 x i8] c"integerSI\00", align 1
@.str483 = private unnamed_addr constant [6 x i8] c"sseSF\00", align 1
@.str484 = private unnamed_addr constant [6 x i8] c"sseDF\00", align 1
@.str485 = private unnamed_addr constant [6 x i8] c"sseup\00", align 1
@.str486 = private unnamed_addr constant [4 x i8] c"x87\00", align 1
@.str487 = private unnamed_addr constant [6 x i8] c"x87up\00", align 1
@__FUNCTION__.classify_argument = private unnamed_addr constant [18 x i8] c"classify_argument\00", align 1
@mode_bitsize = external constant [59 x i16]
@__FUNCTION__.examine_argument = private unnamed_addr constant [17 x i8] c"examine_argument\00", align 1
@.str488 = private unnamed_addr constant [41 x i8] c"`%s' attribute only applies to functions\00", align 1
@.str489 = private unnamed_addr constant [53 x i8] c"`%s' attribute requires an integer constant argument\00", align 1
@.str490 = private unnamed_addr constant [42 x i8] c"argument to `%s' attribute larger than %d\00", align 1
@.str491 = private unnamed_addr constant [23 x i8] c"`%s' attribute ignored\00", align 1

declare zeroext i1 @default_assemble_integer(%struct.rtx_def*, i32, i32) #0

declare void @default_function_pro_epilogue(%struct._IO_FILE*, i64) #0

declare void @no_asm_to_stream(%struct._IO_FILE*) #0

declare void @default_elf_asm_named_section(i8*, i32) #0

declare void @default_exception_section() #0

declare void @default_eh_frame_section() #0

declare void @default_named_section_asm_out_constructor(%struct.rtx_def*, i32) #0

declare void @default_named_section_asm_out_destructor(%struct.rtx_def*, i32) #0

; Function Attrs: nounwind uwtable
define internal i32 @ix86_adjust_cost(%struct.rtx_def* %insn, %struct.rtx_def* nocapture readonly %link, %struct.rtx_def* %dep_insn, i32 %cost) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %link, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %dep_insn, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtint, align 4, !tbaa !1
  %cmp1 = icmp sgt i32 %1, -1
  br i1 %cmp1, label %lor.lhs.false, label %cond.end

cond.end:                                         ; preds = %if.end
  %call = tail call i32 @recog_memoized_1(%struct.rtx_def* %dep_insn) #5
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end, %cond.end
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint8 = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %2 = load i32* %rtint8, align 4, !tbaa !1
  %cmp9 = icmp sgt i32 %2, -1
  br i1 %cmp9, label %if.end20, label %cond.end16

cond.end16:                                       ; preds = %lor.lhs.false
  %call15 = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %cmp18 = icmp slt i32 %call15, 0
  br i1 %cmp18, label %return, label %if.end20

if.end20:                                         ; preds = %lor.lhs.false, %cond.end16
  %call21 = tail call i32 @get_attr_type(%struct.rtx_def* %insn) #5
  %call22 = tail call i32 @get_attr_type(%struct.rtx_def* %dep_insn) #5
  %3 = load i32* @ix86_cpu, align 4, !tbaa !5
  switch i32 %3, label %return [
    i32 2, label %sw.bb
    i32 3, label %sw.bb39
    i32 4, label %sw.bb160
    i32 5, label %sw.bb215
  ]

sw.bb:                                            ; preds = %if.end20
  %cmp.i = icmp eq i32 %call21, 9
  br i1 %cmp.i, label %if.then.i, label %if.else25.i

if.then.i:                                        ; preds = %sw.bb
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load.i = load i32* %5, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.else20.i [
    i32 47, label %if.end21.i
    i32 39, label %land.lhs.true7.i
  ]

land.lhs.true7.i:                                 ; preds = %if.then.i
  %arrayidx9.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx9.i to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !6
  %arrayidx10.i = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 0
  %7 = load %struct.rtx_def** %arrayidx10.i, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load11.i = load i32* %8, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  %cmp13.i = icmp eq i32 %bf.clear12.i, 47
  br i1 %cmp13.i, label %if.end21.i, label %if.else20.i

if.else20.i:                                      ; preds = %land.lhs.true7.i, %if.then.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 10066, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.ix86_agi_dependant, i64 0, i64 0)) #8
  unreachable

if.end21.i:                                       ; preds = %land.lhs.true7.i, %if.then.i
  %addr.0.i = phi %struct.rtx_def* [ %4, %if.then.i ], [ %7, %land.lhs.true7.i ]
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %addr.0.i, i64 0, i32 1, i64 1
  br label %if.end40.i

if.else25.i:                                      ; preds = %sw.bb
  tail call void @extract_insn_cached(%struct.rtx_def* %insn) #5
  %9 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !8
  %10 = sext i8 %9 to i64
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %if.else25.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ %10, %if.else25.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %11 = trunc i64 %indvars.iv.i to i32
  %cmp26.i = icmp sgt i32 %11, 0
  br i1 %cmp26.i, label %for.body.i, label %ix86_agi_dependant.exit

for.body.i:                                       ; preds = %for.cond.i
  %arrayidx28.i = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv.next.i
  %12 = load %struct.rtx_def** %arrayidx28.i, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load29.i = load i32* %13, align 8
  %bf.clear30.i = and i32 %bf.load29.i, 65535
  %cmp31.i = icmp eq i32 %bf.clear30.i, 66
  br i1 %cmp31.i, label %if.then33.i, label %for.cond.i

if.then33.i:                                      ; preds = %for.body.i
  %arrayidx37.i = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  br label %if.end40.i

if.end40.i:                                       ; preds = %if.then33.i, %if.end21.i
  %addr.1.in.in.i = phi %union.rtunion_def* [ %arrayidx23.i, %if.end21.i ], [ %arrayidx37.i, %if.then33.i ]
  %addr.1.in.i = bitcast %union.rtunion_def* %addr.1.in.in.i to %struct.rtx_def**
  %addr.1.i = load %struct.rtx_def** %addr.1.in.i, align 8
  %call.i = tail call i32 @modified_in_p(%struct.rtx_def* %addr.1.i, %struct.rtx_def* %dep_insn) #5
  %phitmp = icmp eq i32 %call.i, 0
  br label %ix86_agi_dependant.exit

ix86_agi_dependant.exit:                          ; preds = %for.cond.i, %if.end40.i
  %retval.0.i = phi i1 [ %phitmp, %if.end40.i ], [ true, %for.cond.i ]
  %14 = zext i1 %retval.0.i to i32
  %add = xor i32 %14, 1
  %cost.add = add nsw i32 %add, %cost
  switch i32 %call21, label %ix86_flags_dependant.exit [
    i32 28, label %if.end.i
    i32 20, label %if.end.i
    i32 15, label %if.end.i
    i32 14, label %if.end.i
  ]

if.end.i:                                         ; preds = %ix86_agi_dependant.exit, %ix86_agi_dependant.exit, %ix86_agi_dependant.exit, %ix86_agi_dependant.exit
  %15 = getelementptr inbounds %struct.rtx_def* %dep_insn, i64 0, i32 0
  %bf.load.i354 = load i32* %15, align 8
  %bf.clear.i355 = and i32 %bf.load.i354, 65535
  %idxprom139.i = zext i32 %bf.clear.i355 to i64
  %arrayidx.i356 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom139.i
  %16 = load i8* %arrayidx.i356, align 1, !tbaa !5
  %cmp6.i = icmp eq i8 %16, 105
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %dep_insn, i64 0, i32 1, i64 3
  %rtx.i357 = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtx_def**
  br i1 %cmp6.i, label %cond.true.i, label %if.else.i

cond.true.i:                                      ; preds = %if.end.i
  %17 = load %struct.rtx_def** %rtx.i357, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load9.i = load i32* %18, align 8
  %bf.clear10.i = and i32 %bf.load9.i, 65535
  %cmp11.i = icmp eq i32 %bf.clear10.i, 47
  br i1 %cmp11.i, label %cond.end21.i, label %cond.false.i

cond.false.i:                                     ; preds = %cond.true.i
  %call.i358 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %dep_insn, %struct.rtx_def* %17) #5
  br label %cond.end21.i

cond.end21.i:                                     ; preds = %cond.false.i, %cond.true.i
  %cond22.i = phi %struct.rtx_def* [ %call.i358, %cond.false.i ], [ %17, %cond.true.i ]
  %cmp23.i = icmp eq %struct.rtx_def* %cond22.i, null
  br i1 %cmp23.i, label %if.else.i, label %if.then25.i

if.then25.i:                                      ; preds = %cond.end21.i
  %arrayidx27.i = getelementptr inbounds %struct.rtx_def* %cond22.i, i64 0, i32 1, i64 0
  %rtx28.i = bitcast %union.rtunion_def* %arrayidx27.i to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx28.i, align 8, !tbaa !6
  br label %if.end94.i

if.else.i:                                        ; preds = %cond.end21.i, %if.end.i
  %20 = load %struct.rtx_def** %rtx.i357, align 8, !tbaa !6
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load32.i = load i32* %21, align 8
  %bf.clear33.i = and i32 %bf.load32.i, 65535
  %cmp34.i = icmp eq i32 %bf.clear33.i, 39
  br i1 %cmp34.i, label %land.lhs.true36.i, label %ix86_flags_dependant.exit

land.lhs.true36.i:                                ; preds = %if.else.i
  %arrayidx41.i = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 0
  %rtvec.i359 = bitcast %union.rtunion_def* %arrayidx41.i to %struct.rtvec_def**
  %22 = load %struct.rtvec_def** %rtvec.i359, align 8, !tbaa !6
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 0
  %23 = load i32* %num_elem.i, align 4, !tbaa !10
  %cmp42.i = icmp eq i32 %23, 2
  br i1 %cmp42.i, label %land.lhs.true44.i, label %ix86_flags_dependant.exit

land.lhs.true44.i:                                ; preds = %land.lhs.true36.i
  %arrayidx51.i = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 1, i64 0
  %24 = load %struct.rtx_def** %arrayidx51.i, align 8, !tbaa !6
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load52.i = load i32* %25, align 8
  %bf.clear53.i = and i32 %bf.load52.i, 65535
  %cmp54.i = icmp eq i32 %bf.clear53.i, 47
  br i1 %cmp54.i, label %land.lhs.true56.i, label %ix86_flags_dependant.exit

land.lhs.true56.i:                                ; preds = %land.lhs.true44.i
  %arrayidx64.i = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 1, i64 1
  %26 = load %struct.rtx_def** %arrayidx64.i, align 8, !tbaa !6
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load65.i = load i32* %27, align 8
  %bf.clear66.i = and i32 %bf.load65.i, 65535
  %cmp67.i = icmp eq i32 %bf.clear66.i, 47
  br i1 %cmp67.i, label %if.then69.i, label %ix86_flags_dependant.exit

if.then69.i:                                      ; preds = %land.lhs.true56.i
  %arrayidx79.i = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0
  %rtx80.i = bitcast %union.rtunion_def* %arrayidx79.i to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx80.i, align 8, !tbaa !6
  br label %if.end94.i

if.end94.i:                                       ; preds = %if.then69.i, %if.then25.i
  %set.0.i = phi %struct.rtx_def* [ %19, %if.then25.i ], [ %28, %if.then69.i ]
  %set2.0.i = phi %struct.rtx_def* [ null, %if.then25.i ], [ %28, %if.then69.i ]
  %29 = getelementptr inbounds %struct.rtx_def* %set.0.i, i64 0, i32 0
  %bf.load95.i = load i32* %29, align 8
  %bf.clear96.i = and i32 %bf.load95.i, 65535
  %cmp97.i = icmp eq i32 %bf.clear96.i, 61
  br i1 %cmp97.i, label %lor.lhs.false.i, label %ix86_flags_dependant.exit

lor.lhs.false.i:                                  ; preds = %if.end94.i
  %arrayidx100.i = getelementptr inbounds %struct.rtx_def* %set.0.i, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx100.i to i32*
  %30 = load i32* %rtuint.i, align 4, !tbaa !1
  %cmp101.i = icmp eq i32 %30, 17
  br i1 %cmp101.i, label %if.end104.i, label %ix86_flags_dependant.exit

if.end104.i:                                      ; preds = %lor.lhs.false.i
  %arrayidx106.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx107.i = bitcast %union.rtunion_def* %arrayidx106.i to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx107.i, align 8, !tbaa !6
  %call108.i = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %set.0.i, %struct.rtx_def* %31) #5
  %tobool.i = icmp eq i32 %call108.i, 0
  br i1 %tobool.i, label %ix86_flags_dependant.exit, label %if.end110.i

if.end110.i:                                      ; preds = %if.end104.i
  %tobool111.i = icmp eq %struct.rtx_def* %set2.0.i, null
  br i1 %tobool111.i, label %if.end119.i, label %land.lhs.true112.i

land.lhs.true112.i:                               ; preds = %if.end110.i
  %32 = load %struct.rtx_def** %rtx107.i, align 8, !tbaa !6
  %call116.i = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %set2.0.i, %struct.rtx_def* %32) #5
  %tobool117.i = icmp eq i32 %call116.i, 0
  br i1 %tobool117.i, label %if.end119.i, label %ix86_flags_dependant.exit

if.end119.i:                                      ; preds = %land.lhs.true112.i, %if.end110.i
  br label %ix86_flags_dependant.exit

ix86_flags_dependant.exit:                        ; preds = %ix86_agi_dependant.exit, %if.else.i, %land.lhs.true36.i, %land.lhs.true44.i, %land.lhs.true56.i, %if.end94.i, %lor.lhs.false.i, %if.end104.i, %land.lhs.true112.i, %if.end119.i
  %retval.0.i360 = phi i32 [ 0, %if.end119.i ], [ %cost.add, %ix86_agi_dependant.exit ], [ %cost.add, %land.lhs.true56.i ], [ %cost.add, %land.lhs.true44.i ], [ %cost.add, %land.lhs.true36.i ], [ %cost.add, %if.else.i ], [ %cost.add, %lor.lhs.false.i ], [ %cost.add, %if.end94.i ], [ %cost.add, %if.end104.i ], [ %cost.add, %land.lhs.true112.i ]
  %cmp30 = icmp eq i32 %call21, 21
  br i1 %cmp30, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %ix86_flags_dependant.exit
  %call31 = tail call i32 @get_attr_memory(%struct.rtx_def* %insn) #5
  %cmp32 = icmp eq i32 %call31, 2
  br i1 %cmp32, label %land.lhs.true33, label %return

land.lhs.true33:                                  ; preds = %land.lhs.true
  %33 = load i32* @ix86_cpu, align 4
  %cmp1.i362 = icmp eq i32 %33, 2
  %or.cond.i363 = and i1 %cmp.i, %cmp1.i362
  br i1 %or.cond.i363, label %if.then.i368, label %if.else25.i380

if.then.i368:                                     ; preds = %land.lhs.true33
  %arrayidx.i364 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i365 = bitcast %union.rtunion_def* %arrayidx.i364 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx.i365, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load.i366 = load i32* %35, align 8
  %bf.clear.i367 = and i32 %bf.load.i366, 65535
  switch i32 %bf.clear.i367, label %if.else20.i376 [
    i32 47, label %if.end21.i379
    i32 39, label %land.lhs.true7.i375
  ]

land.lhs.true7.i375:                              ; preds = %if.then.i368
  %arrayidx9.i369 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 0
  %rtvec.i370 = bitcast %union.rtunion_def* %arrayidx9.i369 to %struct.rtvec_def**
  %36 = load %struct.rtvec_def** %rtvec.i370, align 8, !tbaa !6
  %arrayidx10.i371 = getelementptr inbounds %struct.rtvec_def* %36, i64 0, i32 1, i64 0
  %37 = load %struct.rtx_def** %arrayidx10.i371, align 8, !tbaa !6
  %38 = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 0
  %bf.load11.i372 = load i32* %38, align 8
  %bf.clear12.i373 = and i32 %bf.load11.i372, 65535
  %cmp13.i374 = icmp eq i32 %bf.clear12.i373, 47
  br i1 %cmp13.i374, label %if.end21.i379, label %if.else20.i376

if.else20.i376:                                   ; preds = %land.lhs.true7.i375, %if.then.i368
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 10066, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.ix86_agi_dependant, i64 0, i64 0)) #8
  unreachable

if.end21.i379:                                    ; preds = %land.lhs.true7.i375, %if.then.i368
  %addr.0.i377 = phi %struct.rtx_def* [ %34, %if.then.i368 ], [ %37, %land.lhs.true7.i375 ]
  %arrayidx23.i378 = getelementptr inbounds %struct.rtx_def* %addr.0.i377, i64 0, i32 1, i64 1
  br label %if.end40.i396

if.else25.i380:                                   ; preds = %land.lhs.true33
  tail call void @extract_insn_cached(%struct.rtx_def* %insn) #5
  %39 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !8
  %40 = sext i8 %39 to i64
  br label %for.cond.i384

for.cond.i384:                                    ; preds = %for.body.i389, %if.else25.i380
  %indvars.iv.i381 = phi i64 [ %indvars.iv.next.i382, %for.body.i389 ], [ %40, %if.else25.i380 ]
  %indvars.iv.next.i382 = add nsw i64 %indvars.iv.i381, -1
  %41 = trunc i64 %indvars.iv.i381 to i32
  %cmp26.i383 = icmp sgt i32 %41, 0
  br i1 %cmp26.i383, label %for.body.i389, label %ix86_agi_dependant.exit398

for.body.i389:                                    ; preds = %for.cond.i384
  %arrayidx28.i385 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv.next.i382
  %42 = load %struct.rtx_def** %arrayidx28.i385, align 8, !tbaa !6
  %43 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load29.i386 = load i32* %43, align 8
  %bf.clear30.i387 = and i32 %bf.load29.i386, 65535
  %cmp31.i388 = icmp eq i32 %bf.clear30.i387, 66
  br i1 %cmp31.i388, label %if.then33.i391, label %for.cond.i384

if.then33.i391:                                   ; preds = %for.body.i389
  %arrayidx37.i390 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 1, i64 0
  br label %if.end40.i396

if.end40.i396:                                    ; preds = %if.then33.i391, %if.end21.i379
  %addr.1.in.in.i392 = phi %union.rtunion_def* [ %arrayidx23.i378, %if.end21.i379 ], [ %arrayidx37.i390, %if.then33.i391 ]
  %addr.1.in.i393 = bitcast %union.rtunion_def* %addr.1.in.in.i392 to %struct.rtx_def**
  %addr.1.i394 = load %struct.rtx_def** %addr.1.in.i393, align 8
  %call.i395 = tail call i32 @modified_in_p(%struct.rtx_def* %addr.1.i394, %struct.rtx_def* %dep_insn) #5
  %phitmp520 = icmp eq i32 %call.i395, 0
  br label %ix86_agi_dependant.exit398

ix86_agi_dependant.exit398:                       ; preds = %for.cond.i384, %if.end40.i396
  %retval.0.i397 = phi i1 [ %phitmp520, %if.end40.i396 ], [ true, %for.cond.i384 ]
  %add37 = zext i1 %retval.0.i397 to i32
  %add37.cost.addr.1 = add nsw i32 %add37, %retval.0.i360
  br label %return

sw.bb39:                                          ; preds = %if.end20
  %call40 = tail call i32 @get_attr_memory(%struct.rtx_def* %insn) #5
  %call41 = tail call i32 @get_attr_memory(%struct.rtx_def* %dep_insn) #5
  switch i32 %call22, label %land.lhs.true45 [
    i32 21, label %if.end51
    i32 7, label %if.end51
  ]

land.lhs.true45:                                  ; preds = %sw.bb39
  %44 = and i32 %call41, -3
  %45 = icmp eq i32 %44, 1
  %add50 = zext i1 %45 to i32
  %add50.cost = add nsw i32 %add50, %cost
  br label %if.end51

if.end51:                                         ; preds = %land.lhs.true45, %sw.bb39, %sw.bb39
  %cost.addr.2 = phi i32 [ %cost, %sw.bb39 ], [ %cost, %sw.bb39 ], [ %add50.cost, %land.lhs.true45 ]
  %call52 = tail call i32 @get_attr_fp_int_src(%struct.rtx_def* %dep_insn) #5
  %tobool53 = icmp eq i32 %call52, 0
  %add55 = add nsw i32 %cost.addr.2, 5
  %cost.addr.2.add55 = select i1 %tobool53, i32 %cost.addr.2, i32 %add55
  %cmp57 = icmp eq i32 %call21, 21
  br i1 %cmp57, label %land.lhs.true58, label %if.end138

land.lhs.true58:                                  ; preds = %if.end51
  %46 = getelementptr inbounds %struct.rtx_def* %dep_insn, i64 0, i32 0
  %bf.load59 = load i32* %46, align 8
  %bf.clear60 = and i32 %bf.load59, 65535
  %idxprom351 = zext i32 %bf.clear60 to i64
  %arrayidx61 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom351
  %47 = load i8* %arrayidx61, align 1, !tbaa !5
  %cmp62 = icmp eq i8 %47, 105
  br i1 %cmp62, label %cond.true64, label %if.end138

cond.true64:                                      ; preds = %land.lhs.true58
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %dep_insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load67 = load i32* %49, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  %cmp69 = icmp eq i32 %bf.clear68, 47
  br i1 %cmp69, label %cond.end83, label %cond.false75

cond.false75:                                     ; preds = %cond.true64
  %call79 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %dep_insn, %struct.rtx_def* %48) #5
  br label %cond.end83

cond.end83:                                       ; preds = %cond.true64, %cond.false75
  %cond84 = phi %struct.rtx_def* [ %call79, %cond.false75 ], [ %48, %cond.true64 ]
  %cmp85 = icmp eq %struct.rtx_def* %cond84, null
  br i1 %cmp85, label %if.end138, label %land.lhs.true87

land.lhs.true87:                                  ; preds = %cond.end83
  %50 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load88 = load i32* %50, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %idxprom90352 = zext i32 %bf.clear89 to i64
  %arrayidx91 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom90352
  %51 = load i8* %arrayidx91, align 1, !tbaa !5
  %cmp93 = icmp eq i8 %51, 105
  br i1 %cmp93, label %cond.true95, label %if.end138

cond.true95:                                      ; preds = %land.lhs.true87
  %arrayidx97 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx98, align 8, !tbaa !6
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load99 = load i32* %53, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  %cmp101 = icmp eq i32 %bf.clear100, 47
  br i1 %cmp101, label %cond.end115, label %cond.false107

cond.false107:                                    ; preds = %cond.true95
  %call111 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %52) #5
  br label %cond.end115

cond.end115:                                      ; preds = %cond.true95, %cond.false107
  %cond116 = phi %struct.rtx_def* [ %call111, %cond.false107 ], [ %52, %cond.true95 ]
  %cmp117 = icmp eq %struct.rtx_def* %cond116, null
  br i1 %cmp117, label %if.end138, label %land.lhs.true119

land.lhs.true119:                                 ; preds = %cond.end115
  %arrayidx121 = getelementptr inbounds %struct.rtx_def* %cond84, i64 0, i32 1, i64 0
  %rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx122, align 8, !tbaa !6
  %arrayidx124 = getelementptr inbounds %struct.rtx_def* %cond116, i64 0, i32 1, i64 1
  %rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**
  %55 = load %struct.rtx_def** %rtx125, align 8, !tbaa !6
  %call126 = tail call i32 @rtx_equal_p(%struct.rtx_def* %54, %struct.rtx_def* %55) #5
  %tobool127 = icmp eq i32 %call126, 0
  br i1 %tobool127, label %if.end138, label %land.lhs.true128

land.lhs.true128:                                 ; preds = %land.lhs.true119
  %arrayidx130 = getelementptr inbounds %struct.rtx_def* %cond116, i64 0, i32 1, i64 0
  %rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx131, align 8, !tbaa !6
  %57 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 0
  %bf.load132 = load i32* %57, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear133, 66
  %add137 = zext i1 %cmp134 to i32
  %add137.cost.addr.2.add55 = add nsw i32 %add137, %cost.addr.2.add55
  br label %if.end138

if.end138:                                        ; preds = %land.lhs.true87, %land.lhs.true58, %land.lhs.true128, %land.lhs.true119, %cond.end115, %cond.end83, %if.end51
  %cost.addr.4 = phi i32 [ %cost.addr.2.add55, %land.lhs.true119 ], [ %cost.addr.2.add55, %cond.end115 ], [ %cost.addr.2.add55, %cond.end83 ], [ %cost.addr.2.add55, %if.end51 ], [ %add137.cost.addr.2.add55, %land.lhs.true128 ], [ %cost.addr.2.add55, %land.lhs.true58 ], [ %cost.addr.2.add55, %land.lhs.true87 ]
  %58 = and i32 %call40, -3
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %land.lhs.true144, label %return

land.lhs.true144:                                 ; preds = %if.end138
  %cmp.i399 = icmp eq i32 %call21, 9
  %60 = load i32* @ix86_cpu, align 4
  %cmp1.i400 = icmp eq i32 %60, 2
  %or.cond.i401 = and i1 %cmp.i399, %cmp1.i400
  br i1 %or.cond.i401, label %if.then.i406, label %if.else25.i418

if.then.i406:                                     ; preds = %land.lhs.true144
  %arrayidx.i402 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i403 = bitcast %union.rtunion_def* %arrayidx.i402 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx.i403, align 8, !tbaa !6
  %62 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 0
  %bf.load.i404 = load i32* %62, align 8
  %bf.clear.i405 = and i32 %bf.load.i404, 65535
  switch i32 %bf.clear.i405, label %if.else20.i414 [
    i32 47, label %if.end21.i417
    i32 39, label %land.lhs.true7.i413
  ]

land.lhs.true7.i413:                              ; preds = %if.then.i406
  %arrayidx9.i407 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 1, i64 0
  %rtvec.i408 = bitcast %union.rtunion_def* %arrayidx9.i407 to %struct.rtvec_def**
  %63 = load %struct.rtvec_def** %rtvec.i408, align 8, !tbaa !6
  %arrayidx10.i409 = getelementptr inbounds %struct.rtvec_def* %63, i64 0, i32 1, i64 0
  %64 = load %struct.rtx_def** %arrayidx10.i409, align 8, !tbaa !6
  %65 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 0
  %bf.load11.i410 = load i32* %65, align 8
  %bf.clear12.i411 = and i32 %bf.load11.i410, 65535
  %cmp13.i412 = icmp eq i32 %bf.clear12.i411, 47
  br i1 %cmp13.i412, label %if.end21.i417, label %if.else20.i414

if.else20.i414:                                   ; preds = %land.lhs.true7.i413, %if.then.i406
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 10066, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.ix86_agi_dependant, i64 0, i64 0)) #8
  unreachable

if.end21.i417:                                    ; preds = %land.lhs.true7.i413, %if.then.i406
  %addr.0.i415 = phi %struct.rtx_def* [ %61, %if.then.i406 ], [ %64, %land.lhs.true7.i413 ]
  %arrayidx23.i416 = getelementptr inbounds %struct.rtx_def* %addr.0.i415, i64 0, i32 1, i64 1
  br label %ix86_agi_dependant.exit436

if.else25.i418:                                   ; preds = %land.lhs.true144
  tail call void @extract_insn_cached(%struct.rtx_def* %insn) #5
  %66 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !8
  %67 = sext i8 %66 to i64
  br label %for.cond.i422

for.cond.i422:                                    ; preds = %for.body.i427, %if.else25.i418
  %indvars.iv.i419 = phi i64 [ %indvars.iv.next.i420, %for.body.i427 ], [ %67, %if.else25.i418 ]
  %indvars.iv.next.i420 = add nsw i64 %indvars.iv.i419, -1
  %68 = trunc i64 %indvars.iv.i419 to i32
  %cmp26.i421 = icmp sgt i32 %68, 0
  br i1 %cmp26.i421, label %for.body.i427, label %if.then147

for.body.i427:                                    ; preds = %for.cond.i422
  %arrayidx28.i423 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv.next.i420
  %69 = load %struct.rtx_def** %arrayidx28.i423, align 8, !tbaa !6
  %70 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 0
  %bf.load29.i424 = load i32* %70, align 8
  %bf.clear30.i425 = and i32 %bf.load29.i424, 65535
  %cmp31.i426 = icmp eq i32 %bf.clear30.i425, 66
  br i1 %cmp31.i426, label %if.then33.i429, label %for.cond.i422

if.then33.i429:                                   ; preds = %for.body.i427
  %arrayidx37.i428 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 1, i64 0
  br label %ix86_agi_dependant.exit436

ix86_agi_dependant.exit436:                       ; preds = %if.end21.i417, %if.then33.i429
  %addr.1.in.in.i430 = phi %union.rtunion_def* [ %arrayidx23.i416, %if.end21.i417 ], [ %arrayidx37.i428, %if.then33.i429 ]
  %addr.1.in.i431 = bitcast %union.rtunion_def* %addr.1.in.in.i430 to %struct.rtx_def**
  %addr.1.i432 = load %struct.rtx_def** %addr.1.in.i431, align 8
  %call.i433 = tail call i32 @modified_in_p(%struct.rtx_def* %addr.1.i432, %struct.rtx_def* %dep_insn) #5
  %tobool146 = icmp eq i32 %call.i433, 0
  br i1 %tobool146, label %if.then147, label %return

if.then147:                                       ; preds = %for.cond.i422, %ix86_agi_dependant.exit436
  switch i32 %call22, label %if.else [
    i32 21, label %return
    i32 7, label %return
  ]

if.else:                                          ; preds = %if.then147
  %cmp154 = icmp sgt i32 %cost.addr.4, 1
  %dec = sext i1 %cmp154 to i32
  %dec.cost.addr.4 = add nsw i32 %dec, %cost.addr.4
  ret i32 %dec.cost.addr.4

sw.bb160:                                         ; preds = %if.end20
  %call161 = tail call i32 @get_attr_memory(%struct.rtx_def* %insn) #5
  %call162 = tail call i32 @get_attr_memory(%struct.rtx_def* %dep_insn) #5
  %71 = and i32 %call21, -2
  %72 = icmp eq i32 %71, 16
  %73 = and i32 %call22, -2
  %74 = icmp eq i32 %73, 16
  %or.cond = and i1 %72, %74
  br i1 %or.cond, label %return, label %if.end175

if.end175:                                        ; preds = %sw.bb160
  %75 = and i32 %call162, -3
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %if.then181, label %if.end186

if.then181:                                       ; preds = %if.end175
  %cmp182 = icmp ne i32 %call22, 7
  %cond184 = select i1 %cmp182, i32 2, i32 1
  %add185 = add nsw i32 %cond184, %cost
  br label %if.end186

if.end186:                                        ; preds = %if.end175, %if.then181
  %cost.addr.5 = phi i32 [ %add185, %if.then181 ], [ %cost, %if.end175 ]
  %call187 = tail call i32 @get_attr_fp_int_src(%struct.rtx_def* %dep_insn) #5
  %tobool188 = icmp eq i32 %call187, 0
  %add190 = add nsw i32 %cost.addr.5, 5
  %cost.addr.5.add190 = select i1 %tobool188, i32 %cost.addr.5, i32 %add190
  %77 = and i32 %call161, -3
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %land.lhs.true197, label %return

land.lhs.true197:                                 ; preds = %if.end186
  %cmp.i437 = icmp eq i32 %call21, 9
  %79 = load i32* @ix86_cpu, align 4
  %cmp1.i438 = icmp eq i32 %79, 2
  %or.cond.i439 = and i1 %cmp.i437, %cmp1.i438
  br i1 %or.cond.i439, label %if.then.i444, label %if.else25.i456

if.then.i444:                                     ; preds = %land.lhs.true197
  %arrayidx.i440 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i441 = bitcast %union.rtunion_def* %arrayidx.i440 to %struct.rtx_def**
  %80 = load %struct.rtx_def** %rtx.i441, align 8, !tbaa !6
  %81 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 0
  %bf.load.i442 = load i32* %81, align 8
  %bf.clear.i443 = and i32 %bf.load.i442, 65535
  switch i32 %bf.clear.i443, label %if.else20.i452 [
    i32 47, label %if.end21.i455
    i32 39, label %land.lhs.true7.i451
  ]

land.lhs.true7.i451:                              ; preds = %if.then.i444
  %arrayidx9.i445 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 0
  %rtvec.i446 = bitcast %union.rtunion_def* %arrayidx9.i445 to %struct.rtvec_def**
  %82 = load %struct.rtvec_def** %rtvec.i446, align 8, !tbaa !6
  %arrayidx10.i447 = getelementptr inbounds %struct.rtvec_def* %82, i64 0, i32 1, i64 0
  %83 = load %struct.rtx_def** %arrayidx10.i447, align 8, !tbaa !6
  %84 = getelementptr inbounds %struct.rtx_def* %83, i64 0, i32 0
  %bf.load11.i448 = load i32* %84, align 8
  %bf.clear12.i449 = and i32 %bf.load11.i448, 65535
  %cmp13.i450 = icmp eq i32 %bf.clear12.i449, 47
  br i1 %cmp13.i450, label %if.end21.i455, label %if.else20.i452

if.else20.i452:                                   ; preds = %land.lhs.true7.i451, %if.then.i444
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 10066, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.ix86_agi_dependant, i64 0, i64 0)) #8
  unreachable

if.end21.i455:                                    ; preds = %land.lhs.true7.i451, %if.then.i444
  %addr.0.i453 = phi %struct.rtx_def* [ %80, %if.then.i444 ], [ %83, %land.lhs.true7.i451 ]
  %arrayidx23.i454 = getelementptr inbounds %struct.rtx_def* %addr.0.i453, i64 0, i32 1, i64 1
  br label %ix86_agi_dependant.exit474

if.else25.i456:                                   ; preds = %land.lhs.true197
  tail call void @extract_insn_cached(%struct.rtx_def* %insn) #5
  %85 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !8
  %86 = sext i8 %85 to i64
  br label %for.cond.i460

for.cond.i460:                                    ; preds = %for.body.i465, %if.else25.i456
  %indvars.iv.i457 = phi i64 [ %indvars.iv.next.i458, %for.body.i465 ], [ %86, %if.else25.i456 ]
  %indvars.iv.next.i458 = add nsw i64 %indvars.iv.i457, -1
  %87 = trunc i64 %indvars.iv.i457 to i32
  %cmp26.i459 = icmp sgt i32 %87, 0
  br i1 %cmp26.i459, label %for.body.i465, label %if.then200

for.body.i465:                                    ; preds = %for.cond.i460
  %arrayidx28.i461 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv.next.i458
  %88 = load %struct.rtx_def** %arrayidx28.i461, align 8, !tbaa !6
  %89 = getelementptr inbounds %struct.rtx_def* %88, i64 0, i32 0
  %bf.load29.i462 = load i32* %89, align 8
  %bf.clear30.i463 = and i32 %bf.load29.i462, 65535
  %cmp31.i464 = icmp eq i32 %bf.clear30.i463, 66
  br i1 %cmp31.i464, label %if.then33.i467, label %for.cond.i460

if.then33.i467:                                   ; preds = %for.body.i465
  %arrayidx37.i466 = getelementptr inbounds %struct.rtx_def* %88, i64 0, i32 1, i64 0
  br label %ix86_agi_dependant.exit474

ix86_agi_dependant.exit474:                       ; preds = %if.end21.i455, %if.then33.i467
  %addr.1.in.in.i468 = phi %union.rtunion_def* [ %arrayidx23.i454, %if.end21.i455 ], [ %arrayidx37.i466, %if.then33.i467 ]
  %addr.1.in.i469 = bitcast %union.rtunion_def* %addr.1.in.in.i468 to %struct.rtx_def**
  %addr.1.i470 = load %struct.rtx_def** %addr.1.in.i469, align 8
  %call.i471 = tail call i32 @modified_in_p(%struct.rtx_def* %addr.1.i470, %struct.rtx_def* %dep_insn) #5
  %tobool199 = icmp eq i32 %call.i471, 0
  br i1 %tobool199, label %if.then200, label %return

if.then200:                                       ; preds = %for.cond.i460, %ix86_agi_dependant.exit474
  switch i32 %call22, label %if.else207 [
    i32 21, label %return
    i32 7, label %return
  ]

if.else207:                                       ; preds = %if.then200
  %cmp208 = icmp sgt i32 %cost.addr.5.add190, 2
  %sub = add nsw i32 %cost.addr.5.add190, -2
  %sub. = select i1 %cmp208, i32 %sub, i32 1
  br label %return

sw.bb215:                                         ; preds = %if.end20
  %call216 = tail call i32 @get_attr_memory(%struct.rtx_def* %insn) #5
  %call217 = tail call i32 @get_attr_memory(%struct.rtx_def* %dep_insn) #5
  %90 = and i32 %call217, -3
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %if.then223, label %if.end234

if.then223:                                       ; preds = %sw.bb215
  switch i32 %call22, label %if.else231 [
    i32 21, label %if.then229
    i32 7, label %if.then229
  ]

if.then229:                                       ; preds = %if.then223, %if.then223
  %add230 = add nsw i32 %cost, 2
  br label %if.end234

if.else231:                                       ; preds = %if.then223
  %add232 = add nsw i32 %cost, 3
  br label %if.end234

if.end234:                                        ; preds = %if.then229, %if.else231, %sw.bb215
  %cost.addr.7 = phi i32 [ %add230, %if.then229 ], [ %add232, %if.else231 ], [ %cost, %sw.bb215 ]
  %92 = and i32 %call216, -3
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %land.lhs.true240, label %return

land.lhs.true240:                                 ; preds = %if.end234
  %cmp.i475 = icmp eq i32 %call21, 9
  %94 = load i32* @ix86_cpu, align 4
  %cmp1.i476 = icmp eq i32 %94, 2
  %or.cond.i477 = and i1 %cmp.i475, %cmp1.i476
  br i1 %or.cond.i477, label %if.then.i482, label %if.else25.i494

if.then.i482:                                     ; preds = %land.lhs.true240
  %arrayidx.i478 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i479 = bitcast %union.rtunion_def* %arrayidx.i478 to %struct.rtx_def**
  %95 = load %struct.rtx_def** %rtx.i479, align 8, !tbaa !6
  %96 = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 0
  %bf.load.i480 = load i32* %96, align 8
  %bf.clear.i481 = and i32 %bf.load.i480, 65535
  switch i32 %bf.clear.i481, label %if.else20.i490 [
    i32 47, label %if.end21.i493
    i32 39, label %land.lhs.true7.i489
  ]

land.lhs.true7.i489:                              ; preds = %if.then.i482
  %arrayidx9.i483 = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 1, i64 0
  %rtvec.i484 = bitcast %union.rtunion_def* %arrayidx9.i483 to %struct.rtvec_def**
  %97 = load %struct.rtvec_def** %rtvec.i484, align 8, !tbaa !6
  %arrayidx10.i485 = getelementptr inbounds %struct.rtvec_def* %97, i64 0, i32 1, i64 0
  %98 = load %struct.rtx_def** %arrayidx10.i485, align 8, !tbaa !6
  %99 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 0
  %bf.load11.i486 = load i32* %99, align 8
  %bf.clear12.i487 = and i32 %bf.load11.i486, 65535
  %cmp13.i488 = icmp eq i32 %bf.clear12.i487, 47
  br i1 %cmp13.i488, label %if.end21.i493, label %if.else20.i490

if.else20.i490:                                   ; preds = %land.lhs.true7.i489, %if.then.i482
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 10066, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.ix86_agi_dependant, i64 0, i64 0)) #8
  unreachable

if.end21.i493:                                    ; preds = %land.lhs.true7.i489, %if.then.i482
  %addr.0.i491 = phi %struct.rtx_def* [ %95, %if.then.i482 ], [ %98, %land.lhs.true7.i489 ]
  %arrayidx23.i492 = getelementptr inbounds %struct.rtx_def* %addr.0.i491, i64 0, i32 1, i64 1
  br label %ix86_agi_dependant.exit512

if.else25.i494:                                   ; preds = %land.lhs.true240
  tail call void @extract_insn_cached(%struct.rtx_def* %insn) #5
  %100 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !8
  %101 = sext i8 %100 to i64
  br label %for.cond.i498

for.cond.i498:                                    ; preds = %for.body.i503, %if.else25.i494
  %indvars.iv.i495 = phi i64 [ %indvars.iv.next.i496, %for.body.i503 ], [ %101, %if.else25.i494 ]
  %indvars.iv.next.i496 = add nsw i64 %indvars.iv.i495, -1
  %102 = trunc i64 %indvars.iv.i495 to i32
  %cmp26.i497 = icmp sgt i32 %102, 0
  br i1 %cmp26.i497, label %for.body.i503, label %if.then243

for.body.i503:                                    ; preds = %for.cond.i498
  %arrayidx28.i499 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv.next.i496
  %103 = load %struct.rtx_def** %arrayidx28.i499, align 8, !tbaa !6
  %104 = getelementptr inbounds %struct.rtx_def* %103, i64 0, i32 0
  %bf.load29.i500 = load i32* %104, align 8
  %bf.clear30.i501 = and i32 %bf.load29.i500, 65535
  %cmp31.i502 = icmp eq i32 %bf.clear30.i501, 66
  br i1 %cmp31.i502, label %if.then33.i505, label %for.cond.i498

if.then33.i505:                                   ; preds = %for.body.i503
  %arrayidx37.i504 = getelementptr inbounds %struct.rtx_def* %103, i64 0, i32 1, i64 0
  br label %ix86_agi_dependant.exit512

ix86_agi_dependant.exit512:                       ; preds = %if.end21.i493, %if.then33.i505
  %addr.1.in.in.i506 = phi %union.rtunion_def* [ %arrayidx23.i492, %if.end21.i493 ], [ %arrayidx37.i504, %if.then33.i505 ]
  %addr.1.in.i507 = bitcast %union.rtunion_def* %addr.1.in.in.i506 to %struct.rtx_def**
  %addr.1.i508 = load %struct.rtx_def** %addr.1.in.i507, align 8
  %call.i509 = tail call i32 @modified_in_p(%struct.rtx_def* %addr.1.i508, %struct.rtx_def* %dep_insn) #5
  %tobool242 = icmp eq i32 %call.i509, 0
  br i1 %tobool242, label %if.then243, label %return

if.then243:                                       ; preds = %for.cond.i498, %ix86_agi_dependant.exit512
  switch i32 %call22, label %if.else250 [
    i32 21, label %return
    i32 7, label %return
  ]

if.else250:                                       ; preds = %if.then243
  %cmp251 = icmp sgt i32 %cost.addr.7, 2
  %sub254 = add nsw i32 %cost.addr.7, -3
  %sub254. = select i1 %cmp251, i32 %sub254, i32 0
  ret i32 %sub254.

return:                                           ; preds = %if.else207, %ix86_agi_dependant.exit398, %land.lhs.true, %ix86_flags_dependant.exit, %if.end138, %if.end186, %if.end234, %if.end20, %ix86_agi_dependant.exit512, %ix86_agi_dependant.exit474, %ix86_agi_dependant.exit436, %if.then147, %if.then147, %if.then200, %if.then200, %if.then243, %if.then243, %sw.bb160, %cond.end, %cond.end16, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %cost, %cond.end16 ], [ %cost, %cond.end ], [ 1, %sw.bb160 ], [ %cost, %if.end20 ], [ %cost.addr.7, %ix86_agi_dependant.exit512 ], [ %cost.addr.7, %if.end234 ], [ %cost.addr.5.add190, %ix86_agi_dependant.exit474 ], [ %cost.addr.5.add190, %if.end186 ], [ %cost.addr.4, %ix86_agi_dependant.exit436 ], [ %cost.addr.4, %if.end138 ], [ %retval.0.i360, %land.lhs.true ], [ %retval.0.i360, %ix86_flags_dependant.exit ], [ %add37.cost.addr.1, %ix86_agi_dependant.exit398 ], [ 1, %if.then147 ], [ 1, %if.then147 ], [ 1, %if.then200 ], [ 1, %if.then200 ], [ 0, %if.then243 ], [ 0, %if.then243 ], [ %sub., %if.else207 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define internal i32 @ix86_issue_rate() #2 {
entry:
  %0 = load i32* @ix86_cpu, align 4, !tbaa !5
  switch i32 %0, label %sw.default [
    i32 2, label %return
    i32 4, label %return
    i32 3, label %sw.bb1
    i32 6, label %sw.bb1
    i32 5, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry, %entry, %entry
  br label %return

sw.default:                                       ; preds = %entry
  br label %return

return:                                           ; preds = %entry, %entry, %sw.default, %sw.bb1
  %retval.0 = phi i32 [ 1, %sw.default ], [ 3, %sw.bb1 ], [ 2, %entry ], [ 2, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ix86_variable_issue(%struct._IO_FILE* nocapture %dump, i32 %sched_verbose, %struct.rtx_def* %insn, i32 %can_issue_more) #1 {
entry:
  %0 = load i32* @ix86_cpu, align 4, !tbaa !5
  %cond = icmp eq i32 %0, 3
  br i1 %cond, label %sw.bb, label %sw.default

sw.default:                                       ; preds = %entry
  %sub = add nsw i32 %can_issue_more, -1
  br label %return

sw.bb:                                            ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %1 = load i32* %rtint.i, align 4, !tbaa !1
  %cmp.i = icmp sgt i32 %1, -1
  br i1 %cmp.i, label %ix86_safe_ppro_uops.exit, label %cond.end.i

cond.end.i:                                       ; preds = %sw.bb
  %call.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %cmp4.i = icmp sgt i32 %call.i, -1
  br i1 %cmp4.i, label %ix86_safe_ppro_uops.exit, label %if.then

ix86_safe_ppro_uops.exit:                         ; preds = %sw.bb, %cond.end.i
  %call5.i = tail call i32 @get_attr_ppro_uops(%struct.rtx_def* %insn) #5
  switch i32 %call5.i, label %for.body [
    i32 2, label %if.then
    i32 1, label %if.then6
  ]

if.then:                                          ; preds = %cond.end.i, %ix86_safe_ppro_uops.exit
  %tobool = icmp eq i32 %sched_verbose, 0
  br i1 %tobool, label %if.end4.critedge, label %if.then1

if.then1:                                         ; preds = %if.then
  %2 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 0), align 8, !tbaa !6
  %tobool.i = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool.i, label %ix86_dump_ppro_packet.exit, label %if.then.i46

if.then.i46:                                      ; preds = %if.then1
  %arrayidx.i43 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtint.i44 = bitcast %union.rtunion_def* %arrayidx.i43 to i32*
  %3 = load i32* %rtint.i44, align 4, !tbaa !1
  %call.i45 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([16 x i8]* @.str386, i64 0, i64 0), i32 %3) #5
  %4 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 1), align 8, !tbaa !6
  %tobool1.i = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool1.i, label %if.end.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i46
  %arrayidx4.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtint5.i = bitcast %union.rtunion_def* %arrayidx4.i to i32*
  %5 = load i32* %rtint5.i, align 4, !tbaa !1
  %call6.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([4 x i8]* @.str387, i64 0, i64 0), i32 %5) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i46
  %6 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 2), align 8, !tbaa !6
  %tobool7.i = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool7.i, label %if.end13.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtint11.i = bitcast %union.rtunion_def* %arrayidx10.i to i32*
  %7 = load i32* %rtint11.i, align 4, !tbaa !1
  %call12.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([4 x i8]* @.str387, i64 0, i64 0), i32 %7) #5
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then8.i, %if.end.i
  %call14.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %dump) #5
  br label %ix86_dump_ppro_packet.exit

ix86_dump_ppro_packet.exit:                       ; preds = %if.then1, %if.end13.i
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 0), align 8, !tbaa !6
  %tobool.i47 = icmp eq %struct.rtx_def* %insn, null
  call void @llvm.memset.p0i8.i64(i8* bitcast (%struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 1) to i8*), i8 0, i64 16, i32 8, i1 false)
  br i1 %tobool.i47, label %if.end4, label %if.then.i52

if.then.i52:                                      ; preds = %ix86_dump_ppro_packet.exit
  %arrayidx.i48 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint.i49 = bitcast %union.rtunion_def* %arrayidx.i48 to i32*
  %8 = load i32* %rtint.i49, align 4, !tbaa !1
  %call.i50 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([16 x i8]* @.str386, i64 0, i64 0), i32 %8) #5
  %9 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 1), align 8, !tbaa !6
  %tobool1.i51 = icmp eq %struct.rtx_def* %9, null
  br i1 %tobool1.i51, label %if.end.i58, label %if.then2.i56

if.then2.i56:                                     ; preds = %if.then.i52
  %arrayidx4.i53 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtint5.i54 = bitcast %union.rtunion_def* %arrayidx4.i53 to i32*
  %10 = load i32* %rtint5.i54, align 4, !tbaa !1
  %call6.i55 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([4 x i8]* @.str387, i64 0, i64 0), i32 %10) #5
  br label %if.end.i58

if.end.i58:                                       ; preds = %if.then2.i56, %if.then.i52
  %11 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 2), align 8, !tbaa !6
  %tobool7.i57 = icmp eq %struct.rtx_def* %11, null
  br i1 %tobool7.i57, label %if.end13.i64, label %if.then8.i62

if.then8.i62:                                     ; preds = %if.end.i58
  %arrayidx10.i59 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtint11.i60 = bitcast %union.rtunion_def* %arrayidx10.i59 to i32*
  %12 = load i32* %rtint11.i60, align 4, !tbaa !1
  %call12.i61 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([4 x i8]* @.str387, i64 0, i64 0), i32 %12) #5
  br label %if.end13.i64

if.end13.i64:                                     ; preds = %if.then8.i62, %if.end.i58
  %call14.i63 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %dump) #5
  br label %if.end4

if.end4.critedge:                                 ; preds = %if.then
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 0), align 8, !tbaa !6
  call void @llvm.memset.p0i8.i64(i8* bitcast (%struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 1) to i8*), i8 0, i64 16, i32 8, i1 false)
  br label %if.end4

if.end4:                                          ; preds = %if.end13.i64, %ix86_dump_ppro_packet.exit, %if.end4.critedge
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 0), align 8, !tbaa !6
  br label %if.end27

if.then6:                                         ; preds = %ix86_safe_ppro_uops.exit
  %tobool7 = icmp eq i32 %sched_verbose, 0
  br i1 %tobool7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.then6
  %13 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 0), align 8, !tbaa !6
  %tobool.i66 = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool.i66, label %if.end9, label %if.then.i71

if.then.i71:                                      ; preds = %if.then8
  %arrayidx.i67 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0
  %rtint.i68 = bitcast %union.rtunion_def* %arrayidx.i67 to i32*
  %14 = load i32* %rtint.i68, align 4, !tbaa !1
  %call.i69 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([16 x i8]* @.str386, i64 0, i64 0), i32 %14) #5
  %15 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 1), align 8, !tbaa !6
  %tobool1.i70 = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool1.i70, label %if.end.i77, label %if.then2.i75

if.then2.i75:                                     ; preds = %if.then.i71
  %arrayidx4.i72 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0
  %rtint5.i73 = bitcast %union.rtunion_def* %arrayidx4.i72 to i32*
  %16 = load i32* %rtint5.i73, align 4, !tbaa !1
  %call6.i74 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([4 x i8]* @.str387, i64 0, i64 0), i32 %16) #5
  br label %if.end.i77

if.end.i77:                                       ; preds = %if.then2.i75, %if.then.i71
  %17 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 2), align 8, !tbaa !6
  %tobool7.i76 = icmp eq %struct.rtx_def* %17, null
  br i1 %tobool7.i76, label %if.end13.i83, label %if.then8.i81

if.then8.i81:                                     ; preds = %if.end.i77
  %arrayidx10.i78 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtint11.i79 = bitcast %union.rtunion_def* %arrayidx10.i78 to i32*
  %18 = load i32* %rtint11.i79, align 4, !tbaa !1
  %call12.i80 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([4 x i8]* @.str387, i64 0, i64 0), i32 %18) #5
  br label %if.end13.i83

if.end13.i83:                                     ; preds = %if.then8.i81, %if.end.i77
  %call14.i82 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %dump) #5
  br label %if.end9

if.end9:                                          ; preds = %if.end13.i83, %if.then8, %if.then6
  store %struct.rtx_def* %insn, %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 0), align 8, !tbaa !6
  call void @llvm.memset.p0i8.i64(i8* bitcast (%struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 1) to i8*), i8 0, i64 16, i32 8, i1 false)
  br label %if.end27

for.cond:                                         ; preds = %for.body
  %19 = trunc i64 %indvars.iv.next to i32
  %cmp11 = icmp slt i32 %19, 3
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %ix86_safe_ppro_uops.exit, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %ix86_safe_ppro_uops.exit ]
  %arrayidx = getelementptr inbounds %union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 %indvars.iv
  %20 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %cmp12 = icmp eq %struct.rtx_def* %20, null
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp12, label %if.then13, label %for.cond

if.then13:                                        ; preds = %for.body
  %21 = trunc i64 %indvars.iv to i32
  store %struct.rtx_def* %insn, %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  br label %for.end

for.end:                                          ; preds = %for.cond, %if.then13
  %i.0105 = phi i32 [ %21, %if.then13 ], [ %19, %for.cond ]
  switch i32 %i.0105, label %if.end27 [
    i32 3, label %if.then18
    i32 2, label %if.then21
  ]

if.then18:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 10629, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.ix86_variable_issue, i64 0, i64 0)) #8
  unreachable

if.then21:                                        ; preds = %for.end
  %tobool22 = icmp eq i32 %sched_verbose, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %if.then21
  %22 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 0), align 8, !tbaa !6
  %tobool.i85 = icmp eq %struct.rtx_def* %22, null
  br i1 %tobool.i85, label %if.end24, label %if.then.i90

if.then.i90:                                      ; preds = %if.then23
  %arrayidx.i86 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtint.i87 = bitcast %union.rtunion_def* %arrayidx.i86 to i32*
  %23 = load i32* %rtint.i87, align 4, !tbaa !1
  %call.i88 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([16 x i8]* @.str386, i64 0, i64 0), i32 %23) #5
  %24 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 1), align 8, !tbaa !6
  %tobool1.i89 = icmp eq %struct.rtx_def* %24, null
  br i1 %tobool1.i89, label %if.end.i96, label %if.then2.i94

if.then2.i94:                                     ; preds = %if.then.i90
  %arrayidx4.i91 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0
  %rtint5.i92 = bitcast %union.rtunion_def* %arrayidx4.i91 to i32*
  %25 = load i32* %rtint5.i92, align 4, !tbaa !1
  %call6.i93 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([4 x i8]* @.str387, i64 0, i64 0), i32 %25) #5
  br label %if.end.i96

if.end.i96:                                       ; preds = %if.then2.i94, %if.then.i90
  %26 = load %struct.rtx_def** getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 0, i64 2), align 8, !tbaa !6
  %tobool7.i95 = icmp eq %struct.rtx_def* %26, null
  br i1 %tobool7.i95, label %if.end13.i102, label %if.then8.i100

if.then8.i100:                                    ; preds = %if.end.i96
  %arrayidx10.i97 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtint11.i98 = bitcast %union.rtunion_def* %arrayidx10.i97 to i32*
  %27 = load i32* %rtint11.i98, align 4, !tbaa !1
  %call12.i99 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %dump, i8* getelementptr inbounds ([4 x i8]* @.str387, i64 0, i64 0), i32 %27) #5
  br label %if.end13.i102

if.end13.i102:                                    ; preds = %if.then8.i100, %if.end.i96
  %call14.i101 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %dump) #5
  br label %if.end24

if.end24:                                         ; preds = %if.end13.i102, %if.then23, %if.then21
  call void @llvm.memset.p0i8.i64(i8* bitcast (%union.anon.4* @ix86_sched_data to i8*), i8 0, i64 24, i32 8, i1 false)
  br label %if.end27

if.end27:                                         ; preds = %for.end, %if.end9, %if.end24, %if.end4
  %28 = load i32* getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 1), align 8, !tbaa !12
  %dec = add nsw i32 %28, -1
  store i32 %dec, i32* getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 1), align 8, !tbaa !12
  br label %return

return:                                           ; preds = %if.end27, %sw.default
  %retval.0 = phi i32 [ %dec, %if.end27 ], [ %sub, %sw.default ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @ix86_sched_init(%struct._IO_FILE* nocapture readnone %dump, i32 %sched_verbose, i32 %veclen) #1 {
entry:
  tail call void @llvm.memset.p0i8.i64(i8* bitcast (%union.anon.4* @ix86_sched_data to i8*), i8 0, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ix86_sched_reorder(%struct._IO_FILE* nocapture readnone %dump, i32 %sched_verbose, %struct.rtx_def** %ready, i32* nocapture readonly %n_readyp, i32 %clock_var) #1 {
entry:
  %decode.i = alloca [3 x %struct.rtx_def*], align 16
  %0 = load i32* %n_readyp, align 4, !tbaa !1
  %idx.ext = sext i32 %0 to i64
  %add.ptr.sum = add i64 %idx.ext, -1
  %add.ptr1 = getelementptr inbounds %struct.rtx_def** %ready, i64 %add.ptr.sum
  %cmp = icmp slt i32 %0, 2
  br i1 %cmp, label %outthread-pre-split, label %if.end

if.end:                                           ; preds = %entry
  %1 = load i32* @ix86_cpu, align 4, !tbaa !5
  switch i32 %1, label %out [
    i32 2, label %sw.bb
    i32 3, label %sw.bb2
  ]

sw.bb:                                            ; preds = %if.end
  %2 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !6
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 4
  %rtint.i.i = bitcast %union.rtunion_def* %arrayidx.i.i to i32*
  %3 = load i32* %rtint.i.i, align 4, !tbaa !1
  %cmp.i.i = icmp sgt i32 %3, -1
  br i1 %cmp.i.i, label %ix86_safe_pent_pair.exit.i, label %cond.end.i.i

cond.end.i.i:                                     ; preds = %sw.bb
  %call.i.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %2) #5
  %cmp4.i.i = icmp sgt i32 %call.i.i, -1
  br i1 %cmp4.i.i, label %ix86_safe_pent_pair.exit.i, label %outthread-pre-split

ix86_safe_pent_pair.exit.i:                       ; preds = %cond.end.i.i, %sw.bb
  %call5.i.i = tail call i32 @get_attr_pent_pair(%struct.rtx_def* %2) #5
  %cmp.i = icmp eq i32 %call5.i.i, 3
  br i1 %cmp.i, label %outthread-pre-split, label %if.end.i

if.end.i:                                         ; preds = %ix86_safe_pent_pair.exit.i
  %cmp2.i = icmp eq i32 %call5.i.i, 2
  %4 = and i32 %call5.i.i, -3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %if.then3.i, label %if.end7.i

if.then3.i:                                       ; preds = %if.end.i
  %add.ptr1.sum31 = add i64 %idx.ext, -2
  %add.ptr.i = getelementptr inbounds %struct.rtx_def** %ready, i64 %add.ptr1.sum31
  %6 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !6
  %call4.i = tail call fastcc %struct.rtx_def** @ix86_pent_find_pair(%struct.rtx_def** %add.ptr.i, %struct.rtx_def** %ready, i32 1, %struct.rtx_def* %6) #5
  %tobool.i = icmp eq %struct.rtx_def** %call4.i, null
  %..i = select i1 %tobool.i, i32 3, i32 1
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then3.i, %if.end.i
  %pair2.0.i = phi i32 [ 3, %if.end.i ], [ %..i, %if.then3.i ]
  %insnp.0.i = phi %struct.rtx_def** [ null, %if.end.i ], [ %call4.i, %if.then3.i ]
  %cmp8.i = icmp eq i32 %pair2.0.i, 3
  %7 = icmp ult i32 %call5.i.i, 2
  %or.cond.i = and i1 %cmp8.i, %7
  br i1 %or.cond.i, label %if.then12.i, label %if.end18.i

if.then12.i:                                      ; preds = %if.end7.i
  %add.ptr1.sum30 = add i64 %idx.ext, -2
  %add.ptr13.i = getelementptr inbounds %struct.rtx_def** %ready, i64 %add.ptr1.sum30
  %8 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !6
  %call14.i = tail call fastcc %struct.rtx_def** @ix86_pent_find_pair(%struct.rtx_def** %add.ptr13.i, %struct.rtx_def** %ready, i32 2, %struct.rtx_def* %8) #5
  %tobool15.i = icmp eq %struct.rtx_def** %call14.i, null
  br i1 %tobool15.i, label %if.end18.i, label %if.end29.i

if.end18.i:                                       ; preds = %if.then12.i, %if.end7.i
  %insnp.1.i = phi %struct.rtx_def** [ %insnp.0.i, %if.end7.i ], [ null, %if.then12.i ]
  br i1 %cmp8.i, label %if.then20.i, label %if.end29.i

if.then20.i:                                      ; preds = %if.end18.i
  %add.ptr1.sum29 = add i64 %idx.ext, -2
  %add.ptr21.i = getelementptr inbounds %struct.rtx_def** %ready, i64 %add.ptr1.sum29
  %9 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !6
  %call22.i = tail call fastcc %struct.rtx_def** @ix86_pent_find_pair(%struct.rtx_def** %add.ptr21.i, %struct.rtx_def** %ready, i32 0, %struct.rtx_def* %9) #5
  %tobool23.i = icmp eq %struct.rtx_def** %call22.i, null
  br i1 %tobool23.i, label %outthread-pre-split, label %if.end29.i

if.end29.i:                                       ; preds = %if.then20.i, %if.end18.i, %if.then12.i
  %pair2.2.ph.i = phi i32 [ %pair2.0.i, %if.end18.i ], [ 0, %if.then20.i ], [ 2, %if.then12.i ]
  %insnp.2.ph.i = phi %struct.rtx_def** [ %insnp.1.i, %if.end18.i ], [ %call22.i, %if.then20.i ], [ %call14.i, %if.then12.i ]
  %cmp32.i = icmp eq i32 %pair2.2.ph.i, 1
  %or.cond47.i = or i1 %cmp2.i, %cmp32.i
  br i1 %or.cond47.i, label %if.then43.i, label %lor.lhs.false33.i

lor.lhs.false33.i:                                ; preds = %if.end29.i
  %10 = or i32 %pair2.2.ph.i, %call5.i.i
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %land.lhs.true37.i, label %if.else.i

land.lhs.true37.i:                                ; preds = %lor.lhs.false33.i
  %12 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !6
  %arrayidx.i75.i = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 4
  %rtint.i76.i = bitcast %union.rtunion_def* %arrayidx.i75.i to i32*
  %13 = load i32* %rtint.i76.i, align 4, !tbaa !1
  %cmp.i77.i = icmp sgt i32 %13, -1
  br i1 %cmp.i77.i, label %ix86_safe_memory.exit.i, label %cond.end.i80.i

cond.end.i80.i:                                   ; preds = %land.lhs.true37.i
  %call.i78.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %12) #5
  %cmp4.i79.i = icmp sgt i32 %call.i78.i, -1
  br i1 %cmp4.i79.i, label %ix86_safe_memory.exit.i, label %if.else.i

ix86_safe_memory.exit.i:                          ; preds = %cond.end.i80.i, %land.lhs.true37.i
  %call5.i81.i = tail call i32 @get_attr_memory(%struct.rtx_def* %12) #5
  %cmp39.i = icmp eq i32 %call5.i81.i, 3
  br i1 %cmp39.i, label %land.lhs.true40.i, label %if.else.i

land.lhs.true40.i:                                ; preds = %ix86_safe_memory.exit.i
  %14 = load %struct.rtx_def** %insnp.2.ph.i, align 8, !tbaa !6
  %arrayidx.i84.i = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 4
  %rtint.i85.i = bitcast %union.rtunion_def* %arrayidx.i84.i to i32*
  %15 = load i32* %rtint.i85.i, align 4, !tbaa !1
  %cmp.i86.i = icmp sgt i32 %15, -1
  br i1 %cmp.i86.i, label %ix86_safe_memory.exit93.i, label %cond.end.i89.i

cond.end.i89.i:                                   ; preds = %land.lhs.true40.i
  %call.i87.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %14) #5
  %cmp4.i88.i = icmp sgt i32 %call.i87.i, -1
  br i1 %cmp4.i88.i, label %ix86_safe_memory.exit93.i, label %if.else.i

ix86_safe_memory.exit93.i:                        ; preds = %cond.end.i89.i, %land.lhs.true40.i
  %call5.i90.i = tail call i32 @get_attr_memory(%struct.rtx_def* %14) #5
  %cmp42.i = icmp eq i32 %call5.i90.i, 1
  br i1 %cmp42.i, label %if.then43.i, label %if.else.i

if.then43.i:                                      ; preds = %ix86_safe_memory.exit93.i, %if.end29.i
  %cmp.i94.i = icmp eq %struct.rtx_def** %insnp.2.ph.i, %add.ptr1
  br i1 %cmp.i94.i, label %outthread-pre-split, label %if.then.i95.i

if.then.i95.i:                                    ; preds = %if.then43.i
  %insnp10.i.i = ptrtoint %struct.rtx_def** %insnp.2.ph.i to i64
  %16 = load %struct.rtx_def** %insnp.2.ph.i, align 8, !tbaa !6
  %add.ptr1.sum28 = add i64 %idx.ext, -2
  %scevgep.i.i = getelementptr %struct.rtx_def** %ready, i64 %add.ptr1.sum28
  %17 = ptrtoint %struct.rtx_def** %scevgep.i.i to i64
  %18 = sub i64 %17, %insnp10.i.i
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i, %if.then.i95.i
  %insnp.addr.0.i.i = phi %struct.rtx_def** [ %insnp.2.ph.i, %if.then.i95.i ], [ %arrayidx.i96.i, %do.body.i.i ]
  %arrayidx.i96.i = getelementptr inbounds %struct.rtx_def** %insnp.addr.0.i.i, i64 1
  %19 = load %struct.rtx_def** %arrayidx.i96.i, align 8, !tbaa !6
  store %struct.rtx_def* %19, %struct.rtx_def** %insnp.addr.0.i.i, align 8, !tbaa !6
  %cmp2.i.i = icmp eq %struct.rtx_def** %arrayidx.i96.i, %add.ptr1
  br i1 %cmp2.i.i, label %do.end.i.i, label %do.body.i.i

do.end.i.i:                                       ; preds = %do.body.i.i
  %20 = lshr i64 %18, 3
  %21 = add i64 %20, 1
  %scevgep12.i.i = getelementptr %struct.rtx_def** %insnp.2.ph.i, i64 %21
  store %struct.rtx_def* %16, %struct.rtx_def** %scevgep12.i.i, align 8, !tbaa !6
  br label %outthread-pre-split

if.else.i:                                        ; preds = %ix86_safe_memory.exit93.i, %cond.end.i89.i, %ix86_safe_memory.exit.i, %cond.end.i80.i, %lor.lhs.false33.i
  %add.ptr1.sum26 = add i64 %idx.ext, -2
  %add.ptr44.i = getelementptr inbounds %struct.rtx_def** %ready, i64 %add.ptr1.sum26
  %cmp.i97.i = icmp eq %struct.rtx_def** %insnp.2.ph.i, %add.ptr44.i
  br i1 %cmp.i97.i, label %outthread-pre-split, label %if.then.i100.i

if.then.i100.i:                                   ; preds = %if.else.i
  %insnp10.i98.i = ptrtoint %struct.rtx_def** %insnp.2.ph.i to i64
  %22 = load %struct.rtx_def** %insnp.2.ph.i, align 8, !tbaa !6
  %add.ptr1.sum27 = add i64 %idx.ext, -3
  %scevgep.i99.i = getelementptr %struct.rtx_def** %ready, i64 %add.ptr1.sum27
  %23 = ptrtoint %struct.rtx_def** %scevgep.i99.i to i64
  %24 = sub i64 %23, %insnp10.i98.i
  br label %do.body.i104.i

do.body.i104.i:                                   ; preds = %do.body.i104.i, %if.then.i100.i
  %insnp.addr.0.i101.i = phi %struct.rtx_def** [ %insnp.2.ph.i, %if.then.i100.i ], [ %arrayidx.i102.i, %do.body.i104.i ]
  %arrayidx.i102.i = getelementptr inbounds %struct.rtx_def** %insnp.addr.0.i101.i, i64 1
  %25 = load %struct.rtx_def** %arrayidx.i102.i, align 8, !tbaa !6
  store %struct.rtx_def* %25, %struct.rtx_def** %insnp.addr.0.i101.i, align 8, !tbaa !6
  %cmp2.i103.i = icmp eq %struct.rtx_def** %arrayidx.i102.i, %add.ptr44.i
  br i1 %cmp2.i103.i, label %do.end.i106.i, label %do.body.i104.i

do.end.i106.i:                                    ; preds = %do.body.i104.i
  %26 = lshr i64 %24, 3
  %27 = add i64 %26, 1
  %scevgep12.i105.i = getelementptr %struct.rtx_def** %insnp.2.ph.i, i64 %27
  store %struct.rtx_def* %22, %struct.rtx_def** %scevgep12.i105.i, align 8, !tbaa !6
  br label %outthread-pre-split

sw.bb2:                                           ; preds = %if.end
  %28 = bitcast [3 x %struct.rtx_def*]* %decode.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %28) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* bitcast (%union.anon.4* @ix86_sched_data to i8*), i64 24, i32 8, i1 false) #5
  %29 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !6
  %arrayidx.i.i7 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 4
  %rtint.i.i8 = bitcast %union.rtunion_def* %arrayidx.i.i7 to i32*
  %30 = load i32* %rtint.i.i8, align 4, !tbaa !1
  %cmp.i.i9 = icmp sgt i32 %30, -1
  br i1 %cmp.i.i9, label %if.then.i.i, label %cond.end.i.i12

cond.end.i.i12:                                   ; preds = %sw.bb2
  %call.i.i10 = tail call i32 @recog_memoized_1(%struct.rtx_def* %29) #5
  %cmp4.i.i11 = icmp sgt i32 %call.i.i10, -1
  br i1 %cmp4.i.i11, label %if.then.i.i, label %ix86_safe_ppro_uops.exit.i

if.then.i.i:                                      ; preds = %cond.end.i.i12, %sw.bb2
  %call5.i.i13 = tail call i32 @get_attr_ppro_uops(%struct.rtx_def* %29) #5
  br label %ix86_safe_ppro_uops.exit.i

ix86_safe_ppro_uops.exit.i:                       ; preds = %if.then.i.i, %cond.end.i.i12
  %retval.0.i.i = phi i32 [ %call5.i.i13, %if.then.i.i ], [ 2, %cond.end.i.i12 ]
  %arrayidx.i = getelementptr inbounds [3 x %struct.rtx_def*]* %decode.i, i64 0, i64 0
  %31 = load %struct.rtx_def** %arrayidx.i, align 16, !tbaa !6
  %cmp.i14 = icmp eq %struct.rtx_def* %31, null
  br i1 %cmp.i14, label %if.then.i, label %for.body.i

if.then.i:                                        ; preds = %ix86_safe_ppro_uops.exit.i
  %cmp1.i = icmp eq i32 %retval.0.i.i, 2
  br i1 %cmp1.i, label %if.then2.i, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %if.then.i
  %cmp4123.i = icmp eq i32 %retval.0.i.i, 1
  %cmp5124.i = icmp eq i64 %add.ptr.sum, 0
  %or.cond125.i = or i1 %cmp4123.i, %cmp5124.i
  br i1 %or.cond125.i, label %while.end.if.end11_crit_edge.i, label %if.end7.i15

if.then2.i:                                       ; preds = %if.then.i
  %32 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !6
  store %struct.rtx_def* %32, %struct.rtx_def** %arrayidx.i, align 16, !tbaa !6
  br label %ix86_sched_reorder_ppro.exit

if.end7.i15:                                      ; preds = %while.cond.preheader.i, %while.cond.backedge.i
  %insnp.0126.i = phi %struct.rtx_def** [ %incdec.ptr.i, %while.cond.backedge.i ], [ %add.ptr1, %while.cond.preheader.i ]
  %incdec.ptr.i = getelementptr inbounds %struct.rtx_def** %insnp.0126.i, i64 -1
  %33 = load %struct.rtx_def** %incdec.ptr.i, align 8, !tbaa !6
  %arrayidx.i69.i = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 1, i64 4
  %rtint.i70.i = bitcast %union.rtunion_def* %arrayidx.i69.i to i32*
  %34 = load i32* %rtint.i70.i, align 4, !tbaa !1
  %cmp.i71.i = icmp sgt i32 %34, -1
  br i1 %cmp.i71.i, label %if.then.i76.i, label %cond.end.i74.i

cond.end.i74.i:                                   ; preds = %if.end7.i15
  %call.i72.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %33) #5
  %cmp4.i73.i = icmp sgt i32 %call.i72.i, -1
  br i1 %cmp4.i73.i, label %if.then.i76.i, label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %if.then.i76.i, %cond.end.i74.i
  %cur_uops.0.be.i = phi i1 [ %phitmp130.i, %if.then.i76.i ], [ false, %cond.end.i74.i ]
  %cmp5.i = icmp eq %struct.rtx_def** %incdec.ptr.i, %ready
  %or.cond.i16 = or i1 %cur_uops.0.be.i, %cmp5.i
  br i1 %or.cond.i16, label %while.end.i, label %if.end7.i15

if.then.i76.i:                                    ; preds = %cond.end.i74.i, %if.end7.i15
  %call5.i75.i = tail call i32 @get_attr_ppro_uops(%struct.rtx_def* %33) #5
  %phitmp130.i = icmp eq i32 %call5.i75.i, 1
  br label %while.cond.backedge.i

while.end.i:                                      ; preds = %while.cond.backedge.i
  %cmp4.not.i = xor i1 %cur_uops.0.be.i, true
  %cmp.i79.i = icmp eq %struct.rtx_def** %incdec.ptr.i, %add.ptr1
  %or.cond113.i = or i1 %cmp.i79.i, %cmp4.not.i
  br i1 %or.cond113.i, label %while.end.if.end11_crit_edge.i, label %if.then.i80.i

while.end.if.end11_crit_edge.i:                   ; preds = %while.end.i, %while.cond.preheader.i
  %add.ptr1.sum25 = add i64 %idx.ext, -2
  %incdec.ptr12.pre.i = getelementptr inbounds %struct.rtx_def** %ready, i64 %add.ptr1.sum25
  br label %if.end11.i

if.then.i80.i:                                    ; preds = %while.end.i
  %insnp10.i.i17 = ptrtoint %struct.rtx_def** %incdec.ptr.i to i64
  %35 = load %struct.rtx_def** %incdec.ptr.i, align 8, !tbaa !6
  %add.ptr1.sum = add i64 %idx.ext, -2
  %scevgep.i.i18 = getelementptr %struct.rtx_def** %ready, i64 %add.ptr1.sum
  %36 = ptrtoint %struct.rtx_def** %scevgep.i.i18 to i64
  %37 = sub i64 %36, %insnp10.i.i17
  br label %do.body.i.i21

do.body.i.i21:                                    ; preds = %do.body.i.i21, %if.then.i80.i
  %insnp.addr.0.i.i19 = phi %struct.rtx_def** [ %incdec.ptr.i, %if.then.i80.i ], [ %arrayidx.i81.i, %do.body.i.i21 ]
  %arrayidx.i81.i = getelementptr inbounds %struct.rtx_def** %insnp.addr.0.i.i19, i64 1
  %38 = load %struct.rtx_def** %arrayidx.i81.i, align 8, !tbaa !6
  store %struct.rtx_def* %38, %struct.rtx_def** %insnp.addr.0.i.i19, align 8, !tbaa !6
  %cmp2.i.i20 = icmp eq %struct.rtx_def** %arrayidx.i81.i, %add.ptr1
  br i1 %cmp2.i.i20, label %do.end.i.i23, label %do.body.i.i21

do.end.i.i23:                                     ; preds = %do.body.i.i21
  %39 = lshr i64 %37, 3
  %scevgep12.i.i22 = getelementptr %struct.rtx_def** %insnp.0126.i, i64 %39
  store %struct.rtx_def* %35, %struct.rtx_def** %scevgep12.i.i22, align 8, !tbaa !6
  br label %if.end11.i

if.end11.i:                                       ; preds = %do.end.i.i23, %while.end.if.end11_crit_edge.i
  %incdec.ptr12.pre-phi.i = phi %struct.rtx_def** [ %incdec.ptr12.pre.i, %while.end.if.end11_crit_edge.i ], [ %scevgep.i.i18, %do.end.i.i23 ]
  %40 = load %struct.rtx_def** %add.ptr1, align 8, !tbaa !6
  store %struct.rtx_def* %40, %struct.rtx_def** %arrayidx.i, align 16, !tbaa !6
  br label %for.body.i

for.body.i:                                       ; preds = %if.end11.i, %ix86_safe_ppro_uops.exit.i, %for.inc.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc.i ], [ 1, %ix86_safe_ppro_uops.exit.i ], [ 1, %if.end11.i ]
  %issued_this_cycle.1121.i = phi i32 [ %issued_this_cycle.2.i, %for.inc.i ], [ 1, %if.end11.i ], [ 0, %ix86_safe_ppro_uops.exit.i ]
  %e_ready.addr.1119.i = phi %struct.rtx_def** [ %e_ready.addr.2.i, %for.inc.i ], [ %incdec.ptr12.pre-phi.i, %if.end11.i ], [ %add.ptr1, %ix86_safe_ppro_uops.exit.i ]
  %arrayidx16.i = getelementptr inbounds [3 x %struct.rtx_def*]* %decode.i, i64 0, i64 %indvars.iv.i
  %41 = load %struct.rtx_def** %arrayidx16.i, align 8, !tbaa !6
  %cmp17.i = icmp eq %struct.rtx_def* %41, null
  br i1 %cmp17.i, label %if.then18.i, label %for.inc.i

if.then18.i:                                      ; preds = %for.body.i
  %cmp19.i = icmp ugt %struct.rtx_def** %e_ready.addr.1119.i, %ready
  br i1 %cmp19.i, label %if.end21.i, label %ix86_sched_reorder_ppro.exit

if.end21.i:                                       ; preds = %if.then18.i
  %42 = load %struct.rtx_def** %e_ready.addr.1119.i, align 8, !tbaa !6
  %arrayidx.i82.i = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 1, i64 4
  %rtint.i83.i = bitcast %union.rtunion_def* %arrayidx.i82.i to i32*
  %43 = load i32* %rtint.i83.i, align 4, !tbaa !1
  %cmp.i84.i = icmp sgt i32 %43, -1
  br i1 %cmp.i84.i, label %if.then.i89.i, label %cond.end.i87.i

cond.end.i87.i:                                   ; preds = %if.end21.i
  %call.i85.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %42) #5
  %cmp4.i86.i = icmp sgt i32 %call.i85.i, -1
  br i1 %cmp4.i86.i, label %if.then.i89.i, label %while.cond23.preheader.i

if.then.i89.i:                                    ; preds = %cond.end.i87.i, %if.end21.i
  %call5.i88.i = tail call i32 @get_attr_ppro_uops(%struct.rtx_def* %42) #5
  %phitmp.i = icmp eq i32 %call5.i88.i, 0
  br label %while.cond23.preheader.i

while.cond23.preheader.i:                         ; preds = %if.then.i89.i, %cond.end.i87.i
  %cur_uops.1.ph.i = phi i1 [ %phitmp.i, %if.then.i89.i ], [ false, %cond.end.i87.i ]
  %cmp26115.i = icmp eq %struct.rtx_def** %e_ready.addr.1119.i, %ready
  %or.cond68116.i = or i1 %cur_uops.1.ph.i, %cmp26115.i
  br i1 %or.cond68116.i, label %while.end31.i, label %if.end28.i

if.end28.i:                                       ; preds = %while.cond23.preheader.i, %while.cond23.backedge.i
  %insnp.1117.i = phi %struct.rtx_def** [ %incdec.ptr29.i, %while.cond23.backedge.i ], [ %e_ready.addr.1119.i, %while.cond23.preheader.i ]
  %incdec.ptr29.i = getelementptr inbounds %struct.rtx_def** %insnp.1117.i, i64 -1
  %44 = load %struct.rtx_def** %incdec.ptr29.i, align 8, !tbaa !6
  %arrayidx.i92.i = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 1, i64 4
  %rtint.i93.i = bitcast %union.rtunion_def* %arrayidx.i92.i to i32*
  %45 = load i32* %rtint.i93.i, align 4, !tbaa !1
  %cmp.i94.i24 = icmp sgt i32 %45, -1
  br i1 %cmp.i94.i24, label %if.then.i99.i, label %cond.end.i97.i

cond.end.i97.i:                                   ; preds = %if.end28.i
  %call.i95.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %44) #5
  %cmp4.i96.i = icmp sgt i32 %call.i95.i, -1
  br i1 %cmp4.i96.i, label %if.then.i99.i, label %while.cond23.backedge.i

while.cond23.backedge.i:                          ; preds = %if.then.i99.i, %cond.end.i97.i
  %cur_uops.1.be.i = phi i1 [ %phitmp129.i, %if.then.i99.i ], [ false, %cond.end.i97.i ]
  %cmp26.i = icmp eq %struct.rtx_def** %incdec.ptr29.i, %ready
  %or.cond68.i = or i1 %cur_uops.1.be.i, %cmp26.i
  br i1 %or.cond68.i, label %while.end31.i, label %if.end28.i

if.then.i99.i:                                    ; preds = %cond.end.i97.i, %if.end28.i
  %call5.i98.i = tail call i32 @get_attr_ppro_uops(%struct.rtx_def* %44) #5
  %phitmp129.i = icmp eq i32 %call5.i98.i, 0
  br label %while.cond23.backedge.i

while.end31.i:                                    ; preds = %while.cond23.backedge.i, %while.cond23.preheader.i
  %cmp24.lcssa.i = phi i1 [ %cur_uops.1.ph.i, %while.cond23.preheader.i ], [ %cur_uops.1.be.i, %while.cond23.backedge.i ]
  %insnp.1.lcssa.i = phi %struct.rtx_def** [ %e_ready.addr.1119.i, %while.cond23.preheader.i ], [ %incdec.ptr29.i, %while.cond23.backedge.i ]
  br i1 %cmp24.lcssa.i, label %if.then33.i, label %for.inc.i

if.then33.i:                                      ; preds = %while.end31.i
  %cmp.i102.i = icmp eq %struct.rtx_def** %insnp.1.lcssa.i, %e_ready.addr.1119.i
  br i1 %cmp.i102.i, label %if.then33.ix86_reorder_insn.exit112_crit_edge.i, label %if.then.i105.i

if.then33.ix86_reorder_insn.exit112_crit_edge.i:  ; preds = %if.then33.i
  %incdec.ptr34.pre.i = getelementptr inbounds %struct.rtx_def** %e_ready.addr.1119.i, i64 -1
  br label %ix86_reorder_insn.exit112.i

if.then.i105.i:                                   ; preds = %if.then33.i
  %insnp10.i103.i = ptrtoint %struct.rtx_def** %insnp.1.lcssa.i to i64
  %46 = load %struct.rtx_def** %insnp.1.lcssa.i, align 8, !tbaa !6
  %scevgep.i104.i = getelementptr %struct.rtx_def** %e_ready.addr.1119.i, i64 -1
  %47 = ptrtoint %struct.rtx_def** %scevgep.i104.i to i64
  %48 = sub i64 %47, %insnp10.i103.i
  br label %do.body.i109.i

do.body.i109.i:                                   ; preds = %do.body.i109.i, %if.then.i105.i
  %insnp.addr.0.i106.i = phi %struct.rtx_def** [ %insnp.1.lcssa.i, %if.then.i105.i ], [ %arrayidx.i107.i, %do.body.i109.i ]
  %arrayidx.i107.i = getelementptr inbounds %struct.rtx_def** %insnp.addr.0.i106.i, i64 1
  %49 = load %struct.rtx_def** %arrayidx.i107.i, align 8, !tbaa !6
  store %struct.rtx_def* %49, %struct.rtx_def** %insnp.addr.0.i106.i, align 8, !tbaa !6
  %cmp2.i108.i = icmp eq %struct.rtx_def** %arrayidx.i107.i, %e_ready.addr.1119.i
  br i1 %cmp2.i108.i, label %do.end.i111.i, label %do.body.i109.i

do.end.i111.i:                                    ; preds = %do.body.i109.i
  %50 = lshr i64 %48, 3
  %51 = add i64 %50, 1
  %scevgep12.i110.i = getelementptr %struct.rtx_def** %insnp.1.lcssa.i, i64 %51
  store %struct.rtx_def* %46, %struct.rtx_def** %scevgep12.i110.i, align 8, !tbaa !6
  br label %ix86_reorder_insn.exit112.i

ix86_reorder_insn.exit112.i:                      ; preds = %do.end.i111.i, %if.then33.ix86_reorder_insn.exit112_crit_edge.i
  %incdec.ptr34.pre-phi.i = phi %struct.rtx_def** [ %incdec.ptr34.pre.i, %if.then33.ix86_reorder_insn.exit112_crit_edge.i ], [ %scevgep.i104.i, %do.end.i111.i ]
  %52 = load %struct.rtx_def** %e_ready.addr.1119.i, align 8, !tbaa !6
  store %struct.rtx_def* %52, %struct.rtx_def** %arrayidx16.i, align 8, !tbaa !6
  %inc.i = add nsw i32 %issued_this_cycle.1121.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %ix86_reorder_insn.exit112.i, %while.end31.i, %for.body.i
  %e_ready.addr.2.i = phi %struct.rtx_def** [ %incdec.ptr34.pre-phi.i, %ix86_reorder_insn.exit112.i ], [ %e_ready.addr.1119.i, %while.end31.i ], [ %e_ready.addr.1119.i, %for.body.i ]
  %issued_this_cycle.2.i = phi i32 [ %inc.i, %ix86_reorder_insn.exit112.i ], [ %issued_this_cycle.1121.i, %while.end31.i ], [ %issued_this_cycle.1121.i, %for.body.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %53 = trunc i64 %indvars.iv.next.i to i32
  %cmp15.i = icmp slt i32 %53, 3
  br i1 %cmp15.i, label %for.body.i, label %ix86_sched_reorder_ppro.exit

ix86_sched_reorder_ppro.exit:                     ; preds = %if.then18.i, %for.inc.i, %if.then2.i
  %issued_this_cycle.3.i = phi i32 [ 0, %if.then2.i ], [ %issued_this_cycle.1121.i, %if.then18.i ], [ %issued_this_cycle.2.i, %for.inc.i ]
  %cmp40.i = icmp eq i32 %issued_this_cycle.3.i, 0
  %.issued_this_cycle.3.i = select i1 %cmp40.i, i32 1, i32 %issued_this_cycle.3.i
  store i32 %.issued_this_cycle.3.i, i32* getelementptr inbounds (%union.anon.4* @ix86_sched_data, i64 0, i32 0, i32 1), align 8, !tbaa !12
  call void @llvm.lifetime.end(i64 24, i8* %28) #5
  br label %outthread-pre-split

outthread-pre-split:                              ; preds = %entry, %ix86_sched_reorder_ppro.exit, %cond.end.i.i, %ix86_safe_pent_pair.exit.i, %if.then20.i, %if.then43.i, %do.end.i.i, %if.else.i, %do.end.i106.i
  %.pr = load i32* @ix86_cpu, align 4, !tbaa !5
  br label %out

out:                                              ; preds = %outthread-pre-split, %if.end
  %54 = phi i32 [ %.pr, %outthread-pre-split ], [ %1, %if.end ]
  switch i32 %54, label %sw.default.i [
    i32 2, label %ix86_issue_rate.exit
    i32 4, label %ix86_issue_rate.exit
    i32 3, label %sw.bb1.i
    i32 6, label %sw.bb1.i
    i32 5, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %out, %out, %out
  br label %ix86_issue_rate.exit

sw.default.i:                                     ; preds = %out
  br label %ix86_issue_rate.exit

ix86_issue_rate.exit:                             ; preds = %out, %out, %sw.bb1.i, %sw.default.i
  %retval.0.i = phi i32 [ 1, %sw.default.i ], [ 3, %sw.bb1.i ], [ 2, %out ], [ 2, %out ]
  ret i32 %retval.0.i
}

declare %union.tree_node* @merge_decl_attributes(%union.tree_node*, %union.tree_node*) #0

declare %union.tree_node* @merge_type_attributes(%union.tree_node*, %union.tree_node*) #0

; Function Attrs: nounwind uwtable
define internal i32 @ix86_comp_type_attributes(%union.tree_node* nocapture readonly %type1, %union.tree_node* nocapture readonly %type2) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 2
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([6 x i8]* @.str58, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0)
  %code = getelementptr inbounds %union.tree_node* %type1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 23
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %attributes = getelementptr inbounds %union.tree_node* %type1, i64 0, i32 0, i32 5
  %1 = bitcast i48* %attributes to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !14
  %call = tail call %union.tree_node* @lookup_attribute(i8* %cond, %union.tree_node* %2) #5
  %lnot = icmp eq %union.tree_node* %call, null
  %attributes4 = getelementptr inbounds %union.tree_node* %type2, i64 0, i32 0, i32 5
  %3 = bitcast i48* %attributes4 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !14
  %call5 = tail call %union.tree_node* @lookup_attribute(i8* %cond, %union.tree_node* %4) #5
  %lnot7 = icmp eq %union.tree_node* %call5, null
  %cmp9 = xor i1 %lnot, %lnot7
  %5 = zext i1 %cmp9 to i32
  %. = xor i32 %5, 1
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ %., %if.end ]
  ret i32 %retval.0
}

declare void @default_set_default_type_attributes(%union.tree_node*) #0

declare void @default_insert_attributes(%union.tree_node*, %union.tree_node**) #0

declare zeroext i1 @default_function_attribute_inlinable_p(%union.tree_node*) #0

declare zeroext i1 @default_ms_bitfield_layout_p(%union.tree_node*) #0

; Function Attrs: nounwind uwtable
define void @ix86_init_builtins() #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 16384
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 8, !tbaa !6
  %2 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !6
  %call.i = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %2) #5
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 24), align 8, !tbaa !6
  %call1.i = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %3) #5
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %call2.i = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %4) #5
  %5 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !6
  %call3.i = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %5) #5
  %6 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %7 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call4.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %7, %union.tree_node* %1) #5
  %call5.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %7, %union.tree_node* %call4.i) #5
  %call6.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %6, %union.tree_node* %call5.i) #5
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 43), align 8, !tbaa !6
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call7.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %9, %union.tree_node* %1) #5
  %call8.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %9, %union.tree_node* %call7.i) #5
  %call9.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %8, %union.tree_node* %call8.i) #5
  %10 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call10.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %11, %union.tree_node* %1) #5
  %call11.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %10, %union.tree_node* %call10.i) #5
  %12 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %13 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 45), align 8, !tbaa !6
  %call12.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %13, %union.tree_node* %1) #5
  %call13.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %12, %union.tree_node* %call12.i) #5
  %14 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %15 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %call14.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %15, %union.tree_node* %1) #5
  %call15.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %14, %union.tree_node* %call14.i) #5
  %call16.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %14, %union.tree_node* %call15.i) #5
  %16 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %17 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %call17.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %17, %union.tree_node* %1) #5
  %call18.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %16, %union.tree_node* %call17.i) #5
  %call19.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %16, %union.tree_node* %call18.i) #5
  %18 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %19 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 46), align 8, !tbaa !6
  %call20.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %18, %union.tree_node* %1) #5
  %call21.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %19, %union.tree_node* %call20.i) #5
  %call22.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %18, %union.tree_node* %call21.i) #5
  %20 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 46), align 8, !tbaa !6
  %21 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %call23.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %21, %union.tree_node* %1) #5
  %call24.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %21, %union.tree_node* %call23.i) #5
  %call25.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %20, %union.tree_node* %call24.i) #5
  %call26.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %20, %union.tree_node* %call25.i) #5
  %22 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 45), align 8, !tbaa !6
  %23 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 46), align 8, !tbaa !6
  %call27.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %23, %union.tree_node* %1) #5
  %call28.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %23, %union.tree_node* %call27.i) #5
  %call29.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %22, %union.tree_node* %call28.i) #5
  %24 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 46), align 8, !tbaa !6
  %25 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %call30.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %25, %union.tree_node* %1) #5
  %call31.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %25, %union.tree_node* %call30.i) #5
  %call32.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %24, %union.tree_node* %call31.i) #5
  %26 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %27 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %call33.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %27, %union.tree_node* %1) #5
  %call34.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %26, %union.tree_node* %call33.i) #5
  %call35.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %26, %union.tree_node* %call34.i) #5
  %call36.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %26, %union.tree_node* %call35.i) #5
  %28 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 46), align 8, !tbaa !6
  %29 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 45), align 8, !tbaa !6
  %call37.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %29, %union.tree_node* %1) #5
  %call38.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %29, %union.tree_node* %call37.i) #5
  %call39.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %28, %union.tree_node* %call38.i) #5
  %30 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %31 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 46), align 8, !tbaa !6
  %call40.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %31, %union.tree_node* %1) #5
  %call41.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %31, %union.tree_node* %call40.i) #5
  %call42.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %30, %union.tree_node* %call41.i) #5
  %32 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 46), align 8, !tbaa !6
  %33 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %call43.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %33, %union.tree_node* %1) #5
  %call44.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %32, %union.tree_node* %call43.i) #5
  %call45.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %32, %union.tree_node* %call44.i) #5
  %34 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 46), align 8, !tbaa !6
  %35 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !6
  %call46.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %35, %union.tree_node* %1) #5
  %call47.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %34, %union.tree_node* %call46.i) #5
  %call48.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %34, %union.tree_node* %call47.i) #5
  %36 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %37 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !6
  %call49.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %37, %union.tree_node* %1) #5
  %call50.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %36, %union.tree_node* %call49.i) #5
  %call51.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %36, %union.tree_node* %call50.i) #5
  %38 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %call52.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %38, %union.tree_node* %1) #5
  %39 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %40 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !6
  %call53.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %40, %union.tree_node* %1) #5
  %call54.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %39, %union.tree_node* %call53.i) #5
  %41 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !6
  %call55.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %41, %union.tree_node* %1) #5
  %42 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !6
  %call56.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %42, %union.tree_node* %1) #5
  %43 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call57.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %43, %union.tree_node* %1) #5
  %44 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %45 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call58.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %45, %union.tree_node* %1) #5
  %call59.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %44, %union.tree_node* %call58.i) #5
  %46 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 45), align 8, !tbaa !6
  %call60.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call.i, %union.tree_node* %1) #5
  %call61.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %46, %union.tree_node* %call60.i) #5
  %call62.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %46, %union.tree_node* %call61.i) #5
  %47 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %call63.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %47, %union.tree_node* %call62.i) #5
  %48 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call64.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call1.i, %union.tree_node* %1) #5
  %call65.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %48, %union.tree_node* %call64.i) #5
  %49 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call66.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call2.i, %union.tree_node* %1) #5
  %call67.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %49, %union.tree_node* %call66.i) #5
  %call68.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %49, %union.tree_node* %call67.i) #5
  %50 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %51 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call69.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %51, %union.tree_node* %1) #5
  %call70.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call2.i, %union.tree_node* %call69.i) #5
  %call71.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %50, %union.tree_node* %call70.i) #5
  %52 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %53 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call72.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %53, %union.tree_node* %1) #5
  %call73.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call1.i, %union.tree_node* %call72.i) #5
  %call74.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %52, %union.tree_node* %call73.i) #5
  %54 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %55 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !6
  %call75.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %55, %union.tree_node* %1) #5
  %call76.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call3.i, %union.tree_node* %call75.i) #5
  %call77.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %54, %union.tree_node* %call76.i) #5
  %56 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call78.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %56, %union.tree_node* %1) #5
  %call79.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %56, %union.tree_node* %call78.i) #5
  %57 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !tbaa !6
  %call80.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %57, %union.tree_node* %1) #5
  %call81.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %57, %union.tree_node* %call80.i) #5
  %call82.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %57, %union.tree_node* %call81.i) #5
  %58 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 45), align 8, !tbaa !6
  %call83.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %58, %union.tree_node* %1) #5
  %call84.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %58, %union.tree_node* %call83.i) #5
  %call85.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %58, %union.tree_node* %call84.i) #5
  %59 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 46), align 8, !tbaa !6
  %call86.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %59, %union.tree_node* %1) #5
  %call87.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %59, %union.tree_node* %call86.i) #5
  %call88.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %59, %union.tree_node* %call87.i) #5
  %60 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %call89.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %60, %union.tree_node* %1) #5
  %call90.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %60, %union.tree_node* %call89.i) #5
  %call91.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %60, %union.tree_node* %call90.i) #5
  %61 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !6
  %call92.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %61, %union.tree_node* %1) #5
  %call93.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %61, %union.tree_node* %call92.i) #5
  %call94.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %61, %union.tree_node* %call93.i) #5
  %62 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %63 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 48), align 8, !tbaa !6
  %call95.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %63, %union.tree_node* %1) #5
  %call96.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %62, %union.tree_node* %call95.i) #5
  %64 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 48), align 8, !tbaa !6
  %65 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %call97.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %65, %union.tree_node* %1) #5
  %call98.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %64, %union.tree_node* %call97.i) #5
  %66 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %call99.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %66, %union.tree_node* %1) #5
  %call100.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %66, %union.tree_node* %call99.i) #5
  %67 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 48), align 8, !tbaa !6
  %call101.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %67, %union.tree_node* %1) #5
  %call102.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %67, %union.tree_node* %call101.i) #5
  %68 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 48), align 8, !tbaa !6
  %call103.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %68, %union.tree_node* %1) #5
  %call104.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %68, %union.tree_node* %call103.i) #5
  %call105.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %68, %union.tree_node* %call104.i) #5
  %69 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !tbaa !6
  %70 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 48), align 8, !tbaa !6
  %call106.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %70, %union.tree_node* %1) #5
  %call107.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %70, %union.tree_node* %call106.i) #5
  %call108.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %69, %union.tree_node* %call107.i) #5
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %if.then
  %d.0816.i = phi %struct.builtin_description* [ bitcast (<{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }>* @bdesc_2arg to %struct.builtin_description*), %if.then ], [ %incdec.ptr.i, %for.inc.i ]
  %i.0815.i = phi i64 [ 0, %if.then ], [ %inc.i, %for.inc.i ]
  %name.i = getelementptr inbounds %struct.builtin_description* %d.0816.i, i64 0, i32 2
  %71 = load i8** %name.i, align 8, !tbaa !18
  %cmp109.i = icmp eq i8* %71, null
  br i1 %cmp109.i, label %for.inc.i, label %if.end.i

if.end.i:                                         ; preds = %for.body.i
  %icode.i = getelementptr inbounds %struct.builtin_description* %d.0816.i, i64 0, i32 1
  %72 = load i32* %icode.i, align 4, !tbaa !20
  %idxprom.i = zext i32 %72 to i64
  %operand.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom.i, i32 3
  %73 = load %struct.insn_operand_data** %operand.i, align 8, !tbaa !21
  %mode111.i = getelementptr inbounds %struct.insn_operand_data* %73, i64 1, i32 2
  %bf.load.i = load i16* %mode111.i, align 8
  %bf.cast.i = zext i16 %bf.load.i to i32
  switch i32 %bf.cast.i, label %sw.default.i [
    i32 46, label %sw.epilog.i
    i32 39, label %sw.bb112.i
    i32 36, label %sw.bb113.i
    i32 33, label %sw.bb114.i
    i32 5, label %sw.bb115.i
  ]

sw.bb112.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i

sw.bb113.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i

sw.bb114.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i

sw.bb115.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 11330, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.ix86_init_mmx_sse_builtins, i64 0, i64 0)) #8
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb115.i, %sw.bb114.i, %sw.bb113.i, %sw.bb112.i, %if.end.i
  %type.0.i = phi %union.tree_node* [ %call94.i, %sw.bb115.i ], [ %call91.i, %sw.bb114.i ], [ %call88.i, %sw.bb113.i ], [ %call85.i, %sw.bb112.i ], [ %call82.i, %if.end.i ]
  %mask.i = getelementptr inbounds %struct.builtin_description* %d.0816.i, i64 0, i32 0
  %74 = load i32* %mask.i, align 4, !tbaa !23
  %75 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = and i32 %75, %74
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %for.inc.i, label %if.then128.i

if.then128.i:                                     ; preds = %sw.epilog.i
  %.off.i = add i32 %72, -727
  %switch.i = icmp ult i32 %.off.i, 4
  %call9.type.0.i = select i1 %switch.i, %union.tree_node* %call9.i, %union.tree_node* %type.0.i
  %code.i = getelementptr inbounds %struct.builtin_description* %d.0816.i, i64 0, i32 3
  %76 = load i32* %code.i, align 4, !tbaa !24
  %call130.i = tail call %union.tree_node* @builtin_function(i8* %71, %union.tree_node* %call9.type.0.i, i32 %76, i32 2, i8* null) #5
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then128.i, %sw.epilog.i, %for.body.i
  %inc.i = add i64 %i.0815.i, 1
  %incdec.ptr.i = getelementptr inbounds %struct.builtin_description* %d.0816.i, i64 1
  %cmp.i = icmp ult i64 %inc.i, 103
  br i1 %cmp.i, label %for.body.i, label %do.body132.i

do.body132.i:                                     ; preds = %for.inc.i
  %77 = load i32* @target_flags, align 4, !tbaa !1
  %and133.i = and i32 %77, 16384
  %tobool134.i = icmp eq i32 %and133.i, 0
  br i1 %tobool134.i, label %do.body139.i, label %if.then135.i

if.then135.i:                                     ; preds = %do.body132.i
  %call136.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str306, i64 0, i64 0), %union.tree_node* %call56.i, i32 181, i32 2, i8* null) #5
  %.pre.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body139.i

do.body139.i:                                     ; preds = %if.then135.i, %do.body132.i
  %78 = phi i32 [ %77, %do.body132.i ], [ %.pre.i, %if.then135.i ]
  %and140.i = and i32 %78, 16384
  %tobool141.i = icmp eq i32 %and140.i, 0
  br i1 %tobool141.i, label %do.body146.i, label %if.then142.i

if.then142.i:                                     ; preds = %do.body139.i
  %call143.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([20 x i8]* @.str307, i64 0, i64 0), %union.tree_node* %call52.i, i32 150, i32 2, i8* null) #5
  %.pre818.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body146.i

do.body146.i:                                     ; preds = %if.then142.i, %do.body139.i
  %79 = phi i32 [ %78, %do.body139.i ], [ %.pre818.i, %if.then142.i ]
  %and147.i = and i32 %79, 16384
  %tobool148.i = icmp eq i32 %and147.i, 0
  br i1 %tobool148.i, label %do.body153.i, label %if.then149.i

if.then149.i:                                     ; preds = %do.body146.i
  %call150.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str308, i64 0, i64 0), %union.tree_node* %call54.i, i32 151, i32 2, i8* null) #5
  %.pre819.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body153.i

do.body153.i:                                     ; preds = %if.then149.i, %do.body146.i
  %80 = phi i32 [ %79, %do.body146.i ], [ %.pre819.i, %if.then149.i ]
  %and154.i = and i32 %80, 16384
  %tobool155.i = icmp eq i32 %and154.i, 0
  br i1 %tobool155.i, label %do.body160.i, label %if.then156.i

if.then156.i:                                     ; preds = %do.body153.i
  %call157.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str309, i64 0, i64 0), %union.tree_node* %call55.i, i32 152, i32 2, i8* null) #5
  %.pre820.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body160.i

do.body160.i:                                     ; preds = %if.then156.i, %do.body153.i
  %81 = phi i32 [ %80, %do.body153.i ], [ %.pre820.i, %if.then156.i ]
  %and161.i = and i32 %81, 16384
  %tobool162.i = icmp eq i32 %and161.i, 0
  br i1 %tobool162.i, label %do.body167.i, label %if.then163.i

if.then163.i:                                     ; preds = %do.body160.i
  %call164.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str310, i64 0, i64 0), %union.tree_node* %call48.i, i32 115, i32 2, i8* null) #5
  %.pre821.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body167.i

do.body167.i:                                     ; preds = %if.then163.i, %do.body160.i
  %82 = phi i32 [ %81, %do.body160.i ], [ %.pre821.i, %if.then163.i ]
  %and168.i = and i32 %82, 16384
  %tobool169.i = icmp eq i32 %and168.i, 0
  br i1 %tobool169.i, label %do.body174.i, label %if.then170.i

if.then170.i:                                     ; preds = %do.body167.i
  %call171.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str311, i64 0, i64 0), %union.tree_node* %call51.i, i32 116, i32 2, i8* null) #5
  %.pre822.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body174.i

do.body174.i:                                     ; preds = %if.then170.i, %do.body167.i
  %83 = phi i32 [ %82, %do.body167.i ], [ %.pre822.i, %if.then170.i ]
  %and175.i = and i32 %83, 16384
  %tobool176.i = icmp eq i32 %and175.i, 0
  br i1 %tobool176.i, label %do.body181.i, label %if.then177.i

if.then177.i:                                     ; preds = %do.body174.i
  %call178.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str312, i64 0, i64 0), %union.tree_node* %call94.i, i32 117, i32 2, i8* null) #5
  %.pre823.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body181.i

do.body181.i:                                     ; preds = %if.then177.i, %do.body174.i
  %84 = phi i32 [ %83, %do.body174.i ], [ %.pre823.i, %if.then177.i ]
  %and182.i = and i32 %84, 16384
  %tobool183.i = icmp eq i32 %and182.i, 0
  br i1 %tobool183.i, label %do.body188.i, label %if.then184.i

if.then184.i:                                     ; preds = %do.body181.i
  %call185.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str313, i64 0, i64 0), %union.tree_node* %call48.i, i32 120, i32 2, i8* null) #5
  %.pre824.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body188.i

do.body188.i:                                     ; preds = %if.then184.i, %do.body181.i
  %85 = phi i32 [ %84, %do.body181.i ], [ %.pre824.i, %if.then184.i ]
  %and189.i = and i32 %85, 16384
  %tobool190.i = icmp eq i32 %and189.i, 0
  br i1 %tobool190.i, label %do.body195.i, label %if.then191.i

if.then191.i:                                     ; preds = %do.body188.i
  %call192.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str314, i64 0, i64 0), %union.tree_node* %call51.i, i32 121, i32 2, i8* null) #5
  %.pre825.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body195.i

do.body195.i:                                     ; preds = %if.then191.i, %do.body188.i
  %86 = phi i32 [ %85, %do.body188.i ], [ %.pre825.i, %if.then191.i ]
  %and196.i = and i32 %86, 16384
  %tobool197.i = icmp eq i32 %and196.i, 0
  br i1 %tobool197.i, label %do.body202.i, label %if.then198.i

if.then198.i:                                     ; preds = %do.body195.i
  %call199.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str315, i64 0, i64 0), %union.tree_node* %call94.i, i32 122, i32 2, i8* null) #5
  %.pre826.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body202.i

do.body202.i:                                     ; preds = %if.then198.i, %do.body195.i
  %87 = phi i32 [ %86, %do.body195.i ], [ %.pre826.i, %if.then198.i ]
  %and203.i = and i32 %87, 16384
  %tobool204.i = icmp eq i32 %and203.i, 0
  br i1 %tobool204.i, label %do.body209.i, label %if.then205.i

if.then205.i:                                     ; preds = %do.body202.i
  %call206.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str316, i64 0, i64 0), %union.tree_node* %call48.i, i32 118, i32 2, i8* null) #5
  %.pre827.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body209.i

do.body209.i:                                     ; preds = %if.then205.i, %do.body202.i
  %88 = phi i32 [ %87, %do.body202.i ], [ %.pre827.i, %if.then205.i ]
  %and210.i = and i32 %88, 16384
  %tobool211.i = icmp eq i32 %and210.i, 0
  br i1 %tobool211.i, label %do.body216.i, label %if.then212.i

if.then212.i:                                     ; preds = %do.body209.i
  %call213.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str317, i64 0, i64 0), %union.tree_node* %call51.i, i32 119, i32 2, i8* null) #5
  %.pre828.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body216.i

do.body216.i:                                     ; preds = %if.then212.i, %do.body209.i
  %89 = phi i32 [ %88, %do.body209.i ], [ %.pre828.i, %if.then212.i ]
  %and217.i = and i32 %89, 16384
  %tobool218.i = icmp eq i32 %and217.i, 0
  br i1 %tobool218.i, label %do.body223.i, label %if.then219.i

if.then219.i:                                     ; preds = %do.body216.i
  %call220.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str318, i64 0, i64 0), %union.tree_node* %call45.i, i32 114, i32 2, i8* null) #5
  %.pre829.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body223.i

do.body223.i:                                     ; preds = %if.then219.i, %do.body216.i
  %90 = phi i32 [ %89, %do.body216.i ], [ %.pre829.i, %if.then219.i ]
  %and224.i = and i32 %90, 16384
  %tobool225.i = icmp eq i32 %and224.i, 0
  br i1 %tobool225.i, label %do.body233.i, label %if.then226.i

if.then226.i:                                     ; preds = %do.body223.i
  %call227.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str319, i64 0, i64 0), %union.tree_node* %call42.i, i32 105, i32 2, i8* null) #5
  br label %do.body233.i

do.body233.i:                                     ; preds = %if.then226.i, %do.body223.i, %for.inc243.i
  %d.1814.i = phi %struct.builtin_description* [ %incdec.ptr245.i, %for.inc243.i ], [ bitcast (<{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }>* @bdesc_comi to %struct.builtin_description*), %do.body223.i ], [ bitcast (<{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }>* @bdesc_comi to %struct.builtin_description*), %if.then226.i ]
  %i.1813.i = phi i64 [ %inc244.i, %for.inc243.i ], [ 0, %do.body223.i ], [ 0, %if.then226.i ]
  %mask234.i = getelementptr inbounds %struct.builtin_description* %d.1814.i, i64 0, i32 0
  %91 = load i32* %mask234.i, align 4, !tbaa !23
  %92 = load i32* @target_flags, align 4, !tbaa !1
  %and235.i = and i32 %92, %91
  %tobool236.i = icmp eq i32 %and235.i, 0
  br i1 %tobool236.i, label %for.inc243.i, label %if.then237.i

if.then237.i:                                     ; preds = %do.body233.i
  %name238.i = getelementptr inbounds %struct.builtin_description* %d.1814.i, i64 0, i32 2
  %93 = load i8** %name238.i, align 8, !tbaa !18
  %code239.i = getelementptr inbounds %struct.builtin_description* %d.1814.i, i64 0, i32 3
  %94 = load i32* %code239.i, align 4, !tbaa !24
  %call240.i = tail call %union.tree_node* @builtin_function(i8* %93, %union.tree_node* %call6.i, i32 %94, i32 2, i8* null) #5
  br label %for.inc243.i

for.inc243.i:                                     ; preds = %if.then237.i, %do.body233.i
  %inc244.i = add i64 %i.1813.i, 1
  %incdec.ptr245.i = getelementptr inbounds %struct.builtin_description* %d.1814.i, i64 1
  %exitcond.i = icmp eq i64 %inc244.i, 12
  br i1 %exitcond.i, label %do.body247.i, label %do.body233.i

do.body247.i:                                     ; preds = %for.inc243.i
  %95 = load i32* @target_flags, align 4, !tbaa !1
  %and248.i = and i32 %95, 16384
  %tobool249.i = icmp eq i32 %and248.i, 0
  br i1 %tobool249.i, label %do.body254.i, label %if.then250.i

if.then250.i:                                     ; preds = %do.body247.i
  %call251.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str320, i64 0, i64 0), %union.tree_node* %call29.i, i32 74, i32 2, i8* null) #5
  %.pre830.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body254.i

do.body254.i:                                     ; preds = %if.then250.i, %do.body247.i
  %96 = phi i32 [ %95, %do.body247.i ], [ %.pre830.i, %if.then250.i ]
  %and255.i = and i32 %96, 16384
  %tobool256.i = icmp eq i32 %and255.i, 0
  br i1 %tobool256.i, label %do.body261.i, label %if.then257.i

if.then257.i:                                     ; preds = %do.body254.i
  %call258.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str321, i64 0, i64 0), %union.tree_node* %call32.i, i32 75, i32 2, i8* null) #5
  %.pre831.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body261.i

do.body261.i:                                     ; preds = %if.then257.i, %do.body254.i
  %97 = phi i32 [ %96, %do.body254.i ], [ %.pre831.i, %if.then257.i ]
  %and262.i = and i32 %97, 16384
  %tobool263.i = icmp eq i32 %and262.i, 0
  br i1 %tobool263.i, label %do.body268.i, label %if.then264.i

if.then264.i:                                     ; preds = %do.body261.i
  %call265.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str322, i64 0, i64 0), %union.tree_node* %call29.i, i32 76, i32 2, i8* null) #5
  %.pre832.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body268.i

do.body268.i:                                     ; preds = %if.then264.i, %do.body261.i
  %98 = phi i32 [ %97, %do.body261.i ], [ %.pre832.i, %if.then264.i ]
  %and269.i = and i32 %98, 65536
  %tobool270.i = icmp eq i32 %and269.i, 0
  br i1 %tobool270.i, label %do.body275.i, label %if.then271.i

if.then271.i:                                     ; preds = %do.body268.i
  %call272.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str323, i64 0, i64 0), %union.tree_node* %call19.i, i32 46, i32 2, i8* null) #5
  %.pre833.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body275.i

do.body275.i:                                     ; preds = %if.then271.i, %do.body268.i
  %99 = phi i32 [ %98, %do.body268.i ], [ %.pre833.i, %if.then271.i ]
  %and276.i = and i32 %99, 65536
  %tobool277.i = icmp eq i32 %and276.i, 0
  br i1 %tobool277.i, label %do.body282.i, label %if.then278.i

if.then278.i:                                     ; preds = %do.body275.i
  %call279.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str324, i64 0, i64 0), %union.tree_node* %call59.i, i32 47, i32 2, i8* null) #5
  %.pre834.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body282.i

do.body282.i:                                     ; preds = %if.then278.i, %do.body275.i
  %100 = phi i32 [ %99, %do.body275.i ], [ %.pre834.i, %if.then278.i ]
  %and283.i = and i32 %100, 65536
  %tobool284.i = icmp eq i32 %and283.i, 0
  br i1 %tobool284.i, label %do.body289.i, label %if.then285.i

if.then285.i:                                     ; preds = %do.body282.i
  %call286.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str325, i64 0, i64 0), %union.tree_node* %call16.i, i32 48, i32 2, i8* null) #5
  %.pre835.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body289.i

do.body289.i:                                     ; preds = %if.then285.i, %do.body282.i
  %101 = phi i32 [ %100, %do.body282.i ], [ %.pre835.i, %if.then285.i ]
  %and290.i = and i32 %101, 65536
  %tobool291.i = icmp eq i32 %and290.i, 0
  br i1 %tobool291.i, label %do.body296.i, label %if.then292.i

if.then292.i:                                     ; preds = %do.body289.i
  %call293.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str326, i64 0, i64 0), %union.tree_node* %call11.i, i32 49, i32 2, i8* null) #5
  %.pre836.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body296.i

do.body296.i:                                     ; preds = %if.then292.i, %do.body289.i
  %102 = phi i32 [ %101, %do.body289.i ], [ %.pre836.i, %if.then292.i ]
  %and297.i = and i32 %102, 65536
  %tobool298.i = icmp eq i32 %and297.i, 0
  br i1 %tobool298.i, label %do.body303.i, label %if.then299.i

if.then299.i:                                     ; preds = %do.body296.i
  %call300.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([25 x i8]* @.str327, i64 0, i64 0), %union.tree_node* %call59.i, i32 50, i32 2, i8* null) #5
  %.pre837.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body303.i

do.body303.i:                                     ; preds = %if.then299.i, %do.body296.i
  %103 = phi i32 [ %102, %do.body296.i ], [ %.pre837.i, %if.then299.i ]
  %and304.i = and i32 %103, 65536
  %tobool305.i = icmp eq i32 %and304.i, 0
  br i1 %tobool305.i, label %do.body310.i, label %if.then306.i

if.then306.i:                                     ; preds = %do.body303.i
  %call307.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([25 x i8]* @.str328, i64 0, i64 0), %union.tree_node* %call11.i, i32 51, i32 2, i8* null) #5
  %.pre838.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body310.i

do.body310.i:                                     ; preds = %if.then306.i, %do.body303.i
  %104 = phi i32 [ %103, %do.body303.i ], [ %.pre838.i, %if.then306.i ]
  %and311.i = and i32 %104, 65536
  %tobool312.i = icmp eq i32 %and311.i, 0
  br i1 %tobool312.i, label %do.body317.i, label %if.then313.i

if.then313.i:                                     ; preds = %do.body310.i
  %call314.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str329, i64 0, i64 0), %union.tree_node* %call82.i, i32 146, i32 2, i8* null) #5
  %.pre839.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body317.i

do.body317.i:                                     ; preds = %if.then313.i, %do.body310.i
  %105 = phi i32 [ %104, %do.body310.i ], [ %.pre839.i, %if.then313.i ]
  %and318.i = and i32 %105, 65536
  %tobool319.i = icmp eq i32 %and318.i, 0
  br i1 %tobool319.i, label %do.body324.i, label %if.then320.i

if.then320.i:                                     ; preds = %do.body317.i
  %call321.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str330, i64 0, i64 0), %union.tree_node* %call82.i, i32 147, i32 2, i8* null) #5
  %.pre840.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body324.i

do.body324.i:                                     ; preds = %if.then320.i, %do.body317.i
  %106 = phi i32 [ %105, %do.body317.i ], [ %.pre840.i, %if.then320.i ]
  %and325.i = and i32 %106, 65536
  %tobool326.i = icmp eq i32 %and325.i, 0
  br i1 %tobool326.i, label %do.body331.i, label %if.then327.i

if.then327.i:                                     ; preds = %do.body324.i
  %call328.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([20 x i8]* @.str331, i64 0, i64 0), %union.tree_node* %call82.i, i32 148, i32 2, i8* null) #5
  %.pre841.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body331.i

do.body331.i:                                     ; preds = %if.then327.i, %do.body324.i
  %107 = phi i32 [ %106, %do.body324.i ], [ %.pre841.i, %if.then327.i ]
  %and332.i = and i32 %107, 65536
  %tobool333.i = icmp eq i32 %and332.i, 0
  br i1 %tobool333.i, label %do.body338.i, label %if.then334.i

if.then334.i:                                     ; preds = %do.body331.i
  %call335.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str332, i64 0, i64 0), %union.tree_node* %call82.i, i32 149, i32 2, i8* null) #5
  %.pre842.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body338.i

do.body338.i:                                     ; preds = %if.then334.i, %do.body331.i
  %108 = phi i32 [ %107, %do.body331.i ], [ %.pre842.i, %if.then334.i ]
  %and339.i = and i32 %108, 4259840
  %tobool340.i = icmp eq i32 %and339.i, 0
  br i1 %tobool340.i, label %do.body345.i, label %if.then341.i

if.then341.i:                                     ; preds = %do.body338.i
  %call342.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str333, i64 0, i64 0), %union.tree_node* %call22.i, i32 103, i32 2, i8* null) #5
  %.pre843.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body345.i

do.body345.i:                                     ; preds = %if.then341.i, %do.body338.i
  %109 = phi i32 [ %108, %do.body338.i ], [ %.pre843.i, %if.then341.i ]
  %and346.i = and i32 %109, 4259840
  %tobool347.i = icmp eq i32 %and346.i, 0
  br i1 %tobool347.i, label %do.body352.i, label %if.then348.i

if.then348.i:                                     ; preds = %do.body345.i
  %call349.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str334, i64 0, i64 0), %union.tree_node* %call26.i, i32 104, i32 2, i8* null) #5
  %.pre844.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body352.i

do.body352.i:                                     ; preds = %if.then348.i, %do.body345.i
  %110 = phi i32 [ %109, %do.body345.i ], [ %.pre844.i, %if.then348.i ]
  %and353.i = and i32 %110, 4259840
  %tobool354.i = icmp eq i32 %and353.i, 0
  br i1 %tobool354.i, label %do.body359.i, label %if.then355.i

if.then355.i:                                     ; preds = %do.body352.i
  %call356.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str335, i64 0, i64 0), %union.tree_node* %call63.i, i32 69, i32 2, i8* null) #5
  %.pre845.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body359.i

do.body359.i:                                     ; preds = %if.then355.i, %do.body352.i
  %111 = phi i32 [ %110, %do.body352.i ], [ %.pre845.i, %if.then355.i ]
  %and360.i = and i32 %111, 65536
  %tobool361.i = icmp eq i32 %and360.i, 0
  br i1 %tobool361.i, label %do.body366.i, label %if.then362.i

if.then362.i:                                     ; preds = %do.body359.i
  %call363.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str336, i64 0, i64 0), %union.tree_node* %call65.i, i32 56, i32 2, i8* null) #5
  %.pre846.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body366.i

do.body366.i:                                     ; preds = %if.then362.i, %do.body359.i
  %112 = phi i32 [ %111, %do.body359.i ], [ %.pre846.i, %if.then362.i ]
  %and367.i = and i32 %112, 65536
  %tobool368.i = icmp eq i32 %and367.i, 0
  br i1 %tobool368.i, label %do.body373.i, label %if.then369.i

if.then369.i:                                     ; preds = %do.body366.i
  %call370.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str337, i64 0, i64 0), %union.tree_node* %call65.i, i32 57, i32 2, i8* null) #5
  %.pre847.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body373.i

do.body373.i:                                     ; preds = %if.then369.i, %do.body366.i
  %113 = phi i32 [ %112, %do.body366.i ], [ %.pre847.i, %if.then369.i ]
  %and374.i = and i32 %113, 65536
  %tobool375.i = icmp eq i32 %and374.i, 0
  br i1 %tobool375.i, label %do.body380.i, label %if.then376.i

if.then376.i:                                     ; preds = %do.body373.i
  %call377.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str338, i64 0, i64 0), %union.tree_node* %call65.i, i32 60, i32 2, i8* null) #5
  %.pre848.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body380.i

do.body380.i:                                     ; preds = %if.then376.i, %do.body373.i
  %114 = phi i32 [ %113, %do.body373.i ], [ %.pre848.i, %if.then376.i ]
  %and381.i = and i32 %114, 65536
  %tobool382.i = icmp eq i32 %and381.i, 0
  br i1 %tobool382.i, label %do.body387.i, label %if.then383.i

if.then383.i:                                     ; preds = %do.body380.i
  %call384.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str339, i64 0, i64 0), %union.tree_node* %call74.i, i32 58, i32 2, i8* null) #5
  %.pre849.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body387.i

do.body387.i:                                     ; preds = %if.then383.i, %do.body380.i
  %115 = phi i32 [ %114, %do.body380.i ], [ %.pre849.i, %if.then383.i ]
  %and388.i = and i32 %115, 65536
  %tobool389.i = icmp eq i32 %and388.i, 0
  br i1 %tobool389.i, label %do.body394.i, label %if.then390.i

if.then390.i:                                     ; preds = %do.body387.i
  %call391.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str340, i64 0, i64 0), %union.tree_node* %call74.i, i32 59, i32 2, i8* null) #5
  %.pre850.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body394.i

do.body394.i:                                     ; preds = %if.then390.i, %do.body387.i
  %116 = phi i32 [ %115, %do.body387.i ], [ %.pre850.i, %if.then390.i ]
  %and395.i = and i32 %116, 65536
  %tobool396.i = icmp eq i32 %and395.i, 0
  br i1 %tobool396.i, label %do.body401.i, label %if.then397.i

if.then397.i:                                     ; preds = %do.body394.i
  %call398.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str341, i64 0, i64 0), %union.tree_node* %call74.i, i32 61, i32 2, i8* null) #5
  %.pre851.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body401.i

do.body401.i:                                     ; preds = %if.then397.i, %do.body394.i
  %117 = phi i32 [ %116, %do.body394.i ], [ %.pre851.i, %if.then397.i ]
  %and402.i = and i32 %117, 65536
  %tobool403.i = icmp eq i32 %and402.i, 0
  br i1 %tobool403.i, label %do.body408.i, label %if.then404.i

if.then404.i:                                     ; preds = %do.body401.i
  %call405.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str342, i64 0, i64 0), %union.tree_node* %call68.i, i32 65, i32 2, i8* null) #5
  %.pre852.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body408.i

do.body408.i:                                     ; preds = %if.then404.i, %do.body401.i
  %118 = phi i32 [ %117, %do.body401.i ], [ %.pre852.i, %if.then404.i ]
  %and409.i = and i32 %118, 65536
  %tobool410.i = icmp eq i32 %and409.i, 0
  br i1 %tobool410.i, label %do.body415.i, label %if.then411.i

if.then411.i:                                     ; preds = %do.body408.i
  %call412.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str343, i64 0, i64 0), %union.tree_node* %call68.i, i32 66, i32 2, i8* null) #5
  %.pre853.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body415.i

do.body415.i:                                     ; preds = %if.then411.i, %do.body408.i
  %119 = phi i32 [ %118, %do.body408.i ], [ %.pre853.i, %if.then411.i ]
  %and416.i = and i32 %119, 65536
  %tobool417.i = icmp eq i32 %and416.i, 0
  br i1 %tobool417.i, label %do.body422.i, label %if.then418.i

if.then418.i:                                     ; preds = %do.body415.i
  %call419.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str344, i64 0, i64 0), %union.tree_node* %call71.i, i32 67, i32 2, i8* null) #5
  %.pre854.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body422.i

do.body422.i:                                     ; preds = %if.then418.i, %do.body415.i
  %120 = phi i32 [ %119, %do.body415.i ], [ %.pre854.i, %if.then418.i ]
  %and423.i = and i32 %120, 65536
  %tobool424.i = icmp eq i32 %and423.i, 0
  br i1 %tobool424.i, label %do.body429.i, label %if.then425.i

if.then425.i:                                     ; preds = %do.body422.i
  %call426.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str345, i64 0, i64 0), %union.tree_node* %call71.i, i32 68, i32 2, i8* null) #5
  %.pre855.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body429.i

do.body429.i:                                     ; preds = %if.then425.i, %do.body422.i
  %121 = phi i32 [ %120, %do.body422.i ], [ %.pre855.i, %if.then425.i ]
  %and430.i = and i32 %121, 65536
  %tobool431.i = icmp eq i32 %and430.i, 0
  br i1 %tobool431.i, label %do.body436.i, label %if.then432.i

if.then432.i:                                     ; preds = %do.body429.i
  %call433.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str346, i64 0, i64 0), %union.tree_node* %call11.i, i32 70, i32 2, i8* null) #5
  %.pre856.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body436.i

do.body436.i:                                     ; preds = %if.then432.i, %do.body429.i
  %122 = phi i32 [ %121, %do.body429.i ], [ %.pre856.i, %if.then432.i ]
  %and437.i = and i32 %122, 4259840
  %tobool438.i = icmp eq i32 %and437.i, 0
  br i1 %tobool438.i, label %do.body443.i, label %if.then439.i

if.then439.i:                                     ; preds = %do.body436.i
  %call440.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str347, i64 0, i64 0), %union.tree_node* %call13.i, i32 71, i32 2, i8* null) #5
  %.pre857.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body443.i

do.body443.i:                                     ; preds = %if.then439.i, %do.body436.i
  %123 = phi i32 [ %122, %do.body436.i ], [ %.pre857.i, %if.then439.i ]
  %and444.i = and i32 %123, 65536
  %tobool445.i = icmp eq i32 %and444.i, 0
  br i1 %tobool445.i, label %do.body450.i, label %if.then446.i

if.then446.i:                                     ; preds = %do.body443.i
  %call447.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str348, i64 0, i64 0), %union.tree_node* %call74.i, i32 72, i32 2, i8* null) #5
  %.pre858.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body450.i

do.body450.i:                                     ; preds = %if.then446.i, %do.body443.i
  %124 = phi i32 [ %123, %do.body443.i ], [ %.pre858.i, %if.then446.i ]
  %and451.i = and i32 %124, 4259840
  %tobool452.i = icmp eq i32 %and451.i, 0
  br i1 %tobool452.i, label %do.body457.i, label %if.then453.i

if.then453.i:                                     ; preds = %do.body450.i
  %call454.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str349, i64 0, i64 0), %union.tree_node* %call77.i, i32 73, i32 2, i8* null) #5
  %.pre859.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body457.i

do.body457.i:                                     ; preds = %if.then453.i, %do.body450.i
  %125 = phi i32 [ %124, %do.body450.i ], [ %.pre859.i, %if.then453.i ]
  %and458.i = and i32 %125, 4259840
  %tobool459.i = icmp eq i32 %and458.i, 0
  br i1 %tobool459.i, label %do.body464.i, label %if.then460.i

if.then460.i:                                     ; preds = %do.body457.i
  %call461.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str350, i64 0, i64 0), %union.tree_node* %call52.i, i32 153, i32 2, i8* null) #5
  %.pre860.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body464.i

do.body464.i:                                     ; preds = %if.then460.i, %do.body457.i
  %126 = phi i32 [ %125, %do.body457.i ], [ %.pre860.i, %if.then460.i ]
  %and465.i = and i32 %126, 4259840
  %tobool466.i = icmp eq i32 %and465.i, 0
  br i1 %tobool466.i, label %do.body471.i, label %if.then467.i

if.then467.i:                                     ; preds = %do.body464.i
  %call468.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str351, i64 0, i64 0), %union.tree_node* %call39.i, i32 113, i32 2, i8* null) #5
  %.pre861.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body471.i

do.body471.i:                                     ; preds = %if.then467.i, %do.body464.i
  %127 = phi i32 [ %126, %do.body464.i ], [ %.pre861.i, %if.then467.i ]
  %and472.i = and i32 %127, 65536
  %tobool473.i = icmp eq i32 %and472.i, 0
  br i1 %tobool473.i, label %do.body478.i, label %if.then474.i

if.then474.i:                                     ; preds = %do.body471.i
  %call475.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str352, i64 0, i64 0), %union.tree_node* %call79.i, i32 138, i32 2, i8* null) #5
  %.pre862.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body478.i

do.body478.i:                                     ; preds = %if.then474.i, %do.body471.i
  %128 = phi i32 [ %127, %do.body471.i ], [ %.pre862.i, %if.then474.i ]
  %and479.i = and i32 %128, 65536
  %tobool480.i = icmp eq i32 %and479.i, 0
  br i1 %tobool480.i, label %do.body485.i, label %if.then481.i

if.then481.i:                                     ; preds = %do.body478.i
  %call482.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str353, i64 0, i64 0), %union.tree_node* %call79.i, i32 139, i32 2, i8* null) #5
  %.pre863.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body485.i

do.body485.i:                                     ; preds = %if.then481.i, %do.body478.i
  %129 = phi i32 [ %128, %do.body478.i ], [ %.pre863.i, %if.then481.i ]
  %and486.i = and i32 %129, 65536
  %tobool487.i = icmp eq i32 %and486.i, 0
  br i1 %tobool487.i, label %do.body492.i, label %if.then488.i

if.then488.i:                                     ; preds = %do.body485.i
  %call489.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str354, i64 0, i64 0), %union.tree_node* %call79.i, i32 140, i32 2, i8* null) #5
  %.pre864.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body492.i

do.body492.i:                                     ; preds = %if.then488.i, %do.body485.i
  %130 = phi i32 [ %129, %do.body485.i ], [ %.pre864.i, %if.then488.i ]
  %and493.i = and i32 %130, 65536
  %tobool494.i = icmp eq i32 %and493.i, 0
  br i1 %tobool494.i, label %do.body499.i, label %if.then495.i

if.then495.i:                                     ; preds = %do.body492.i
  %call496.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str355, i64 0, i64 0), %union.tree_node* %call79.i, i32 141, i32 2, i8* null) #5
  %.pre865.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body499.i

do.body499.i:                                     ; preds = %if.then495.i, %do.body492.i
  %131 = phi i32 [ %130, %do.body492.i ], [ %.pre865.i, %if.then495.i ]
  %and500.i = and i32 %131, 65536
  %tobool501.i = icmp eq i32 %and500.i, 0
  br i1 %tobool501.i, label %do.body506.i, label %if.then502.i

if.then502.i:                                     ; preds = %do.body499.i
  %call503.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str356, i64 0, i64 0), %union.tree_node* %call79.i, i32 142, i32 2, i8* null) #5
  %.pre866.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body506.i

do.body506.i:                                     ; preds = %if.then502.i, %do.body499.i
  %132 = phi i32 [ %131, %do.body499.i ], [ %.pre866.i, %if.then502.i ]
  %and507.i = and i32 %132, 65536
  %tobool508.i = icmp eq i32 %and507.i, 0
  br i1 %tobool508.i, label %do.body513.i, label %if.then509.i

if.then509.i:                                     ; preds = %do.body506.i
  %call510.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str357, i64 0, i64 0), %union.tree_node* %call79.i, i32 143, i32 2, i8* null) #5
  %.pre867.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body513.i

do.body513.i:                                     ; preds = %if.then509.i, %do.body506.i
  %133 = phi i32 [ %132, %do.body506.i ], [ %.pre867.i, %if.then509.i ]
  %and514.i = and i32 %133, 65536
  %tobool515.i = icmp eq i32 %and514.i, 0
  br i1 %tobool515.i, label %do.body520.i, label %if.then516.i

if.then516.i:                                     ; preds = %do.body513.i
  %call517.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str358, i64 0, i64 0), %union.tree_node* %call36.i, i32 137, i32 2, i8* null) #5
  %.pre868.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body520.i

do.body520.i:                                     ; preds = %if.then516.i, %do.body513.i
  %134 = phi i32 [ %133, %do.body513.i ], [ %.pre868.i, %if.then516.i ]
  %and521.i = and i32 %134, 1048576
  %tobool522.i = icmp eq i32 %and521.i, 0
  br i1 %tobool522.i, label %do.body527.i, label %if.then523.i

if.then523.i:                                     ; preds = %do.body520.i
  %call524.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str359, i64 0, i64 0), %union.tree_node* %call52.i, i32 154, i32 2, i8* null) #5
  %.pre869.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body527.i

do.body527.i:                                     ; preds = %if.then523.i, %do.body520.i
  %135 = phi i32 [ %134, %do.body520.i ], [ %.pre869.i, %if.then523.i ]
  %and528.i = and i32 %135, 1048576
  %tobool529.i = icmp eq i32 %and528.i, 0
  br i1 %tobool529.i, label %do.body534.i, label %if.then530.i

if.then530.i:                                     ; preds = %do.body527.i
  %call531.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str360, i64 0, i64 0), %union.tree_node* %call85.i, i32 155, i32 2, i8* null) #5
  %.pre870.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body534.i

do.body534.i:                                     ; preds = %if.then530.i, %do.body527.i
  %136 = phi i32 [ %135, %do.body527.i ], [ %.pre870.i, %if.then530.i ]
  %and535.i = and i32 %136, 1048576
  %tobool536.i = icmp eq i32 %and535.i, 0
  br i1 %tobool536.i, label %do.body541.i, label %if.then537.i

if.then537.i:                                     ; preds = %do.body534.i
  %call538.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str361, i64 0, i64 0), %union.tree_node* %call96.i, i32 156, i32 2, i8* null) #5
  %.pre871.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body541.i

do.body541.i:                                     ; preds = %if.then537.i, %do.body534.i
  %137 = phi i32 [ %136, %do.body534.i ], [ %.pre871.i, %if.then537.i ]
  %and542.i = and i32 %137, 1048576
  %tobool543.i = icmp eq i32 %and542.i, 0
  br i1 %tobool543.i, label %do.body548.i, label %if.then544.i

if.then544.i:                                     ; preds = %do.body541.i
  %call545.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str362, i64 0, i64 0), %union.tree_node* %call105.i, i32 157, i32 2, i8* null) #5
  %.pre872.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body548.i

do.body548.i:                                     ; preds = %if.then544.i, %do.body541.i
  %138 = phi i32 [ %137, %do.body541.i ], [ %.pre872.i, %if.then544.i ]
  %and549.i = and i32 %138, 1048576
  %tobool550.i = icmp eq i32 %and549.i, 0
  br i1 %tobool550.i, label %do.body555.i, label %if.then551.i

if.then551.i:                                     ; preds = %do.body548.i
  %call552.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str363, i64 0, i64 0), %union.tree_node* %call105.i, i32 158, i32 2, i8* null) #5
  %.pre873.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body555.i

do.body555.i:                                     ; preds = %if.then551.i, %do.body548.i
  %139 = phi i32 [ %138, %do.body548.i ], [ %.pre873.i, %if.then551.i ]
  %and556.i = and i32 %139, 1048576
  %tobool557.i = icmp eq i32 %and556.i, 0
  br i1 %tobool557.i, label %do.body562.i, label %if.then558.i

if.then558.i:                                     ; preds = %do.body555.i
  %call559.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str364, i64 0, i64 0), %union.tree_node* %call108.i, i32 159, i32 2, i8* null) #5
  %.pre874.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body562.i

do.body562.i:                                     ; preds = %if.then558.i, %do.body555.i
  %140 = phi i32 [ %139, %do.body555.i ], [ %.pre874.i, %if.then558.i ]
  %and563.i = and i32 %140, 1048576
  %tobool564.i = icmp eq i32 %and563.i, 0
  br i1 %tobool564.i, label %do.body569.i, label %if.then565.i

if.then565.i:                                     ; preds = %do.body562.i
  %call566.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str365, i64 0, i64 0), %union.tree_node* %call108.i, i32 160, i32 2, i8* null) #5
  %.pre875.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body569.i

do.body569.i:                                     ; preds = %if.then565.i, %do.body562.i
  %141 = phi i32 [ %140, %do.body562.i ], [ %.pre875.i, %if.then565.i ]
  %and570.i = and i32 %141, 1048576
  %tobool571.i = icmp eq i32 %and570.i, 0
  br i1 %tobool571.i, label %do.body576.i, label %if.then572.i

if.then572.i:                                     ; preds = %do.body569.i
  %call573.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str366, i64 0, i64 0), %union.tree_node* %call108.i, i32 161, i32 2, i8* null) #5
  %.pre876.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body576.i

do.body576.i:                                     ; preds = %if.then572.i, %do.body569.i
  %142 = phi i32 [ %141, %do.body569.i ], [ %.pre876.i, %if.then572.i ]
  %and577.i = and i32 %142, 1048576
  %tobool578.i = icmp eq i32 %and577.i, 0
  br i1 %tobool578.i, label %do.body583.i, label %if.then579.i

if.then579.i:                                     ; preds = %do.body576.i
  %call580.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str367, i64 0, i64 0), %union.tree_node* %call105.i, i32 162, i32 2, i8* null) #5
  %.pre877.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body583.i

do.body583.i:                                     ; preds = %if.then579.i, %do.body576.i
  %143 = phi i32 [ %142, %do.body576.i ], [ %.pre877.i, %if.then579.i ]
  %and584.i = and i32 %143, 1048576
  %tobool585.i = icmp eq i32 %and584.i, 0
  br i1 %tobool585.i, label %do.body590.i, label %if.then586.i

if.then586.i:                                     ; preds = %do.body583.i
  %call587.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str368, i64 0, i64 0), %union.tree_node* %call105.i, i32 163, i32 2, i8* null) #5
  %.pre878.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body590.i

do.body590.i:                                     ; preds = %if.then586.i, %do.body583.i
  %144 = phi i32 [ %143, %do.body583.i ], [ %.pre878.i, %if.then586.i ]
  %and591.i = and i32 %144, 1048576
  %tobool592.i = icmp eq i32 %and591.i, 0
  br i1 %tobool592.i, label %do.body597.i, label %if.then593.i

if.then593.i:                                     ; preds = %do.body590.i
  %call594.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str369, i64 0, i64 0), %union.tree_node* %call105.i, i32 164, i32 2, i8* null) #5
  %.pre879.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body597.i

do.body597.i:                                     ; preds = %if.then593.i, %do.body590.i
  %145 = phi i32 [ %144, %do.body590.i ], [ %.pre879.i, %if.then593.i ]
  %and598.i = and i32 %145, 1048576
  %tobool599.i = icmp eq i32 %and598.i, 0
  br i1 %tobool599.i, label %do.body604.i, label %if.then600.i

if.then600.i:                                     ; preds = %do.body597.i
  %call601.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str370, i64 0, i64 0), %union.tree_node* %call102.i, i32 165, i32 2, i8* null) #5
  %.pre880.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body604.i

do.body604.i:                                     ; preds = %if.then600.i, %do.body597.i
  %146 = phi i32 [ %145, %do.body597.i ], [ %.pre880.i, %if.then600.i ]
  %and605.i = and i32 %146, 1048576
  %tobool606.i = icmp eq i32 %and605.i, 0
  br i1 %tobool606.i, label %do.body611.i, label %if.then607.i

if.then607.i:                                     ; preds = %do.body604.i
  %call608.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str371, i64 0, i64 0), %union.tree_node* %call105.i, i32 166, i32 2, i8* null) #5
  %.pre881.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body611.i

do.body611.i:                                     ; preds = %if.then607.i, %do.body604.i
  %147 = phi i32 [ %146, %do.body604.i ], [ %.pre881.i, %if.then607.i ]
  %and612.i = and i32 %147, 1048576
  %tobool613.i = icmp eq i32 %and612.i, 0
  br i1 %tobool613.i, label %do.body618.i, label %if.then614.i

if.then614.i:                                     ; preds = %do.body611.i
  %call615.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str372, i64 0, i64 0), %union.tree_node* %call105.i, i32 167, i32 2, i8* null) #5
  %.pre882.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body618.i

do.body618.i:                                     ; preds = %if.then614.i, %do.body611.i
  %148 = phi i32 [ %147, %do.body611.i ], [ %.pre882.i, %if.then614.i ]
  %and619.i = and i32 %148, 1048576
  %tobool620.i = icmp eq i32 %and619.i, 0
  br i1 %tobool620.i, label %do.body625.i, label %if.then621.i

if.then621.i:                                     ; preds = %do.body618.i
  %call622.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str373, i64 0, i64 0), %union.tree_node* %call102.i, i32 169, i32 2, i8* null) #5
  %.pre883.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body625.i

do.body625.i:                                     ; preds = %if.then621.i, %do.body618.i
  %149 = phi i32 [ %148, %do.body618.i ], [ %.pre883.i, %if.then621.i ]
  %and626.i = and i32 %149, 1048576
  %tobool627.i = icmp eq i32 %and626.i, 0
  br i1 %tobool627.i, label %do.body632.i, label %if.then628.i

if.then628.i:                                     ; preds = %do.body625.i
  %call629.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str374, i64 0, i64 0), %union.tree_node* %call105.i, i32 168, i32 2, i8* null) #5
  %.pre884.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body632.i

do.body632.i:                                     ; preds = %if.then628.i, %do.body625.i
  %150 = phi i32 [ %149, %do.body625.i ], [ %.pre884.i, %if.then628.i ]
  %and633.i = and i32 %150, 1048576
  %tobool634.i = icmp eq i32 %and633.i, 0
  br i1 %tobool634.i, label %do.body639.i, label %if.then635.i

if.then635.i:                                     ; preds = %do.body632.i
  %call636.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str375, i64 0, i64 0), %union.tree_node* %call105.i, i32 170, i32 2, i8* null) #5
  %.pre885.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body639.i

do.body639.i:                                     ; preds = %if.then635.i, %do.body632.i
  %151 = phi i32 [ %150, %do.body632.i ], [ %.pre885.i, %if.then635.i ]
  %and640.i = and i32 %151, 1048576
  %tobool641.i = icmp eq i32 %and640.i, 0
  br i1 %tobool641.i, label %do.body646.i, label %if.then642.i

if.then642.i:                                     ; preds = %do.body639.i
  %call643.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str376, i64 0, i64 0), %union.tree_node* %call105.i, i32 171, i32 2, i8* null) #5
  %.pre886.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body646.i

do.body646.i:                                     ; preds = %if.then642.i, %do.body639.i
  %152 = phi i32 [ %151, %do.body639.i ], [ %.pre886.i, %if.then642.i ]
  %and647.i = and i32 %152, 1048576
  %tobool648.i = icmp eq i32 %and647.i, 0
  br i1 %tobool648.i, label %do.body653.i, label %if.then649.i

if.then649.i:                                     ; preds = %do.body646.i
  %call650.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str377, i64 0, i64 0), %union.tree_node* %call98.i, i32 172, i32 2, i8* null) #5
  %.pre887.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body653.i

do.body653.i:                                     ; preds = %if.then649.i, %do.body646.i
  %153 = phi i32 [ %152, %do.body646.i ], [ %.pre887.i, %if.then649.i ]
  %and654.i = and i32 %153, 1048576
  %tobool655.i = icmp eq i32 %and654.i, 0
  br i1 %tobool655.i, label %do.body660.i, label %if.then656.i

if.then656.i:                                     ; preds = %do.body653.i
  %call657.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str378, i64 0, i64 0), %union.tree_node* %call88.i, i32 173, i32 2, i8* null) #5
  %.pre888.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body660.i

do.body660.i:                                     ; preds = %if.then656.i, %do.body653.i
  %154 = phi i32 [ %153, %do.body653.i ], [ %.pre888.i, %if.then656.i ]
  %and661.i = and i32 %154, 4194304
  %tobool662.i = icmp eq i32 %and661.i, 0
  br i1 %tobool662.i, label %do.body667.i, label %if.then663.i

if.then663.i:                                     ; preds = %do.body660.i
  %call664.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str379, i64 0, i64 0), %union.tree_node* %call96.i, i32 174, i32 2, i8* null) #5
  %.pre889.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body667.i

do.body667.i:                                     ; preds = %if.then663.i, %do.body660.i
  %155 = phi i32 [ %154, %do.body660.i ], [ %.pre889.i, %if.then663.i ]
  %and668.i = and i32 %155, 4194304
  %tobool669.i = icmp eq i32 %and668.i, 0
  br i1 %tobool669.i, label %do.body674.i, label %if.then670.i

if.then670.i:                                     ; preds = %do.body667.i
  %call671.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([22 x i8]* @.str380, i64 0, i64 0), %union.tree_node* %call105.i, i32 175, i32 2, i8* null) #5
  %.pre890.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body674.i

do.body674.i:                                     ; preds = %if.then670.i, %do.body667.i
  %156 = phi i32 [ %155, %do.body667.i ], [ %.pre890.i, %if.then670.i ]
  %and675.i = and i32 %156, 4194304
  %tobool676.i = icmp eq i32 %and675.i, 0
  br i1 %tobool676.i, label %do.body681.i, label %if.then677.i

if.then677.i:                                     ; preds = %do.body674.i
  %call678.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([23 x i8]* @.str381, i64 0, i64 0), %union.tree_node* %call105.i, i32 176, i32 2, i8* null) #5
  %.pre891.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body681.i

do.body681.i:                                     ; preds = %if.then677.i, %do.body674.i
  %157 = phi i32 [ %156, %do.body674.i ], [ %.pre891.i, %if.then677.i ]
  %and682.i = and i32 %157, 4194304
  %tobool683.i = icmp eq i32 %and682.i, 0
  br i1 %tobool683.i, label %do.body688.i, label %if.then684.i

if.then684.i:                                     ; preds = %do.body681.i
  %call685.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([21 x i8]* @.str382, i64 0, i64 0), %union.tree_node* %call98.i, i32 177, i32 2, i8* null) #5
  %.pre892.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body688.i

do.body688.i:                                     ; preds = %if.then684.i, %do.body681.i
  %158 = phi i32 [ %157, %do.body681.i ], [ %.pre892.i, %if.then684.i ]
  %and689.i = and i32 %158, 4194304
  %tobool690.i = icmp eq i32 %and689.i, 0
  br i1 %tobool690.i, label %do.body695.i, label %if.then691.i

if.then691.i:                                     ; preds = %do.body688.i
  %call692.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str383, i64 0, i64 0), %union.tree_node* %call102.i, i32 179, i32 2, i8* null) #5
  %.pre893.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body695.i

do.body695.i:                                     ; preds = %if.then691.i, %do.body688.i
  %159 = phi i32 [ %158, %do.body688.i ], [ %.pre893.i, %if.then691.i ]
  %and696.i = and i32 %159, 4194304
  %tobool697.i = icmp eq i32 %and696.i, 0
  br i1 %tobool697.i, label %do.body702.i, label %if.then698.i

if.then698.i:                                     ; preds = %do.body695.i
  %call699.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([24 x i8]* @.str384, i64 0, i64 0), %union.tree_node* %call100.i, i32 178, i32 2, i8* null) #5
  %.pre894.i = load i32* @target_flags, align 4, !tbaa !1
  br label %do.body702.i

do.body702.i:                                     ; preds = %if.then698.i, %do.body695.i
  %160 = phi i32 [ %159, %do.body695.i ], [ %.pre894.i, %if.then698.i ]
  %and703.i = and i32 %160, 65536
  %tobool704.i = icmp eq i32 %and703.i, 0
  br i1 %tobool704.i, label %if.end, label %if.then705.i

if.then705.i:                                     ; preds = %do.body702.i
  %call706.i = tail call %union.tree_node* @builtin_function(i8* getelementptr inbounds ([25 x i8]* @.str385, i64 0, i64 0), %union.tree_node* %call57.i, i32 180, i32 2, i8* null) #5
  br label %if.end

if.end:                                           ; preds = %if.then705.i, %do.body702.i, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @ix86_expand_builtin(%union.tree_node* nocapture readonly %exp, %struct.rtx_def* %target, %struct.rtx_def* nocapture readnone %subtarget, i32 %mode, i32 %ignore) #1 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !6
  %operands3 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %arrayidx4 = bitcast i32* %operands3 to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx4, align 8, !tbaa !6
  %arrayidx7 = getelementptr inbounds i32* %operands, i64 2
  %2 = bitcast i32* %arrayidx7 to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !6
  %u1 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  %4 = load i32* %f, align 4, !tbaa !5
  switch i32 %4, label %for.body [
    i32 150, label %sw.bb
    i32 153, label %sw.bb9
    i32 103, label %sw.bb12
    i32 104, label %sw.bb70
    i32 69, label %sw.bb168
    i32 143, label %sw.bb244
    i32 141, label %sw.bb246
    i32 139, label %sw.bb248
    i32 146, label %sw.bb250
    i32 147, label %sw.bb252
    i32 148, label %sw.bb254
    i32 149, label %sw.bb256
    i32 56, label %sw.bb258
    i32 57, label %sw.bb260
    i32 58, label %sw.bb262
    i32 59, label %sw.bb264
    i32 60, label %sw.bb266
    i32 61, label %sw.bb268
    i32 65, label %sw.bb270
    i32 66, label %sw.bb270
    i32 67, label %sw.bb342
    i32 68, label %sw.bb342
    i32 72, label %sw.bb390
    i32 73, label %sw.bb392
    i32 151, label %sw.bb394
    i32 152, label %sw.bb402
    i32 137, label %sw.bb407
    i32 114, label %sw.bb506
    i32 154, label %sw.bb580
    i32 155, label %sw.bb583
    i32 156, label %sw.bb585
    i32 157, label %sw.bb587
    i32 158, label %sw.bb589
    i32 159, label %sw.bb591
    i32 160, label %sw.bb593
    i32 161, label %sw.bb595
    i32 162, label %sw.bb597
    i32 163, label %sw.bb599
    i32 164, label %sw.bb601
    i32 165, label %sw.bb603
    i32 166, label %sw.bb605
    i32 167, label %sw.bb607
    i32 168, label %sw.bb609
    i32 169, label %sw.bb611
    i32 170, label %sw.bb613
    i32 171, label %sw.bb615
    i32 172, label %sw.bb617
    i32 173, label %sw.bb619
    i32 174, label %sw.bb621
    i32 175, label %sw.bb623
    i32 176, label %sw.bb625
    i32 177, label %sw.bb627
    i32 178, label %sw.bb629
    i32 179, label %sw.bb631
    i32 180, label %sw.bb633
    i32 181, label %sw.bb637
  ]

sw.bb:                                            ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_emms() #5
  %call8 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #5
  br label %return

sw.bb9:                                           ; preds = %entry
  %call10 = tail call %struct.rtx_def* @gen_sfence() #5
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #5
  br label %return

sw.bb12:                                          ; preds = %entry
  %value = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !25
  %chain = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %union.tree_node** %chain, align 8, !tbaa !27
  %value14 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value14 to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !25
  %call15 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %6, %struct.rtx_def* null, i32 0, i32 0) #5
  %call16 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %9, %struct.rtx_def* null, i32 0, i32 0) #5
  %10 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 772, i32 3), align 8, !tbaa !21
  %mode19 = getelementptr inbounds %struct.insn_operand_data* %10, i64 0, i32 2
  %bf.load = load i16* %mode19, align 8
  %bf.cast = zext i16 %bf.load to i32
  %mode24 = getelementptr inbounds %struct.insn_operand_data* %10, i64 1, i32 2
  %bf.load25 = load i16* %mode24, align 8
  %bf.cast26 = zext i16 %bf.load25 to i32
  %mode31 = getelementptr inbounds %struct.insn_operand_data* %10, i64 2, i32 2
  %bf.load32 = load i16* %mode31, align 8
  %bf.cast33 = zext i16 %bf.load32 to i32
  %predicate = getelementptr inbounds %struct.insn_operand_data* %10, i64 1, i32 0
  %11 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !28
  %call38 = tail call i32 %11(%struct.rtx_def* %call15, i32 %bf.cast26) #5
  %tobool = icmp eq i32 %call38, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb12
  %call39 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast26, %struct.rtx_def* %call15) #5
  br label %if.end

if.end:                                           ; preds = %sw.bb12, %if.then
  %op0.0 = phi %struct.rtx_def* [ %call15, %sw.bb12 ], [ %call39, %if.then ]
  %predicate44 = getelementptr inbounds %struct.insn_operand_data* %10, i64 2, i32 0
  %12 = load i32 (%struct.rtx_def*, i32)** %predicate44, align 8, !tbaa !28
  %call45 = tail call i32 %12(%struct.rtx_def* %call16, i32 %bf.cast33) #5
  %tobool46 = icmp eq i32 %call45, 0
  br i1 %tobool46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.end
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([30 x i8]* @.str197, i64 0, i64 0)) #5
  %call48 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #5
  br label %return

if.end49:                                         ; preds = %if.end
  %cmp = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp, label %if.then60, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end49
  %13 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load50 = load i32* %13, align 8
  %bf.lshr = lshr i32 %bf.load50, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp51 = icmp eq i32 %bf.clear, %bf.cast
  br i1 %cmp51, label %lor.lhs.false52, label %if.then60

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %predicate57 = getelementptr inbounds %struct.insn_operand_data* %10, i64 0, i32 0
  %14 = load i32 (%struct.rtx_def*, i32)** %predicate57, align 8, !tbaa !28
  %call58 = tail call i32 %14(%struct.rtx_def* %target, i32 %bf.cast) #5
  %tobool59 = icmp eq i32 %call58, 0
  br i1 %tobool59, label %if.then60, label %if.end62

if.then60:                                        ; preds = %lor.lhs.false52, %lor.lhs.false, %if.end49
  %call61 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #5
  br label %if.end62

if.end62:                                         ; preds = %lor.lhs.false52, %if.then60
  %target.addr.0 = phi %struct.rtx_def* [ %call61, %if.then60 ], [ %target, %lor.lhs.false52 ]
  %15 = load %struct.rtx_def* (%struct.rtx_def*, ...)** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 772, i32 2), align 8, !tbaa !30
  %call65 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %15(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %op0.0, %struct.rtx_def* %call16) #5
  %tobool66 = icmp eq %struct.rtx_def* %call65, null
  br i1 %tobool66, label %return, label %if.end68

if.end68:                                         ; preds = %if.end62
  %call69 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call65) #5
  br label %return

sw.bb70:                                          ; preds = %entry
  %value72 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %16 = bitcast i32* %value72 to %union.tree_node**
  %17 = load %union.tree_node** %16, align 8, !tbaa !25
  %chain74 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %18 = load %union.tree_node** %chain74, align 8, !tbaa !27
  %value76 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 2
  %19 = bitcast i32* %value76 to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !25
  %chain80 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0
  %21 = load %union.tree_node** %chain80, align 8, !tbaa !27
  %value82 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 2
  %22 = bitcast i32* %value82 to %union.tree_node**
  %23 = load %union.tree_node** %22, align 8, !tbaa !25
  %call83 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %17, %struct.rtx_def* null, i32 0, i32 0) #5
  %call84 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %20, %struct.rtx_def* null, i32 0, i32 0) #5
  %call85 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %23, %struct.rtx_def* null, i32 0, i32 0) #5
  %24 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 771, i32 3), align 8, !tbaa !21
  %mode90 = getelementptr inbounds %struct.insn_operand_data* %24, i64 0, i32 2
  %bf.load91 = load i16* %mode90, align 8
  %bf.cast92 = zext i16 %bf.load91 to i32
  %mode97 = getelementptr inbounds %struct.insn_operand_data* %24, i64 1, i32 2
  %bf.load98 = load i16* %mode97, align 8
  %bf.cast99 = zext i16 %bf.load98 to i32
  %mode104 = getelementptr inbounds %struct.insn_operand_data* %24, i64 2, i32 2
  %bf.load105 = load i16* %mode104, align 8
  %bf.cast106 = zext i16 %bf.load105 to i32
  %mode111 = getelementptr inbounds %struct.insn_operand_data* %24, i64 3, i32 2
  %bf.load112 = load i16* %mode111, align 8
  %bf.cast113 = zext i16 %bf.load112 to i32
  %predicate118 = getelementptr inbounds %struct.insn_operand_data* %24, i64 1, i32 0
  %25 = load i32 (%struct.rtx_def*, i32)** %predicate118, align 8, !tbaa !28
  %call119 = tail call i32 %25(%struct.rtx_def* %call83, i32 %bf.cast99) #5
  %tobool120 = icmp eq i32 %call119, 0
  br i1 %tobool120, label %if.then121, label %if.end123

if.then121:                                       ; preds = %sw.bb70
  %call122 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast99, %struct.rtx_def* %call83) #5
  br label %if.end123

if.end123:                                        ; preds = %sw.bb70, %if.then121
  %op0.1 = phi %struct.rtx_def* [ %call83, %sw.bb70 ], [ %call122, %if.then121 ]
  %predicate128 = getelementptr inbounds %struct.insn_operand_data* %24, i64 2, i32 0
  %26 = load i32 (%struct.rtx_def*, i32)** %predicate128, align 8, !tbaa !28
  %call129 = tail call i32 %26(%struct.rtx_def* %call84, i32 %bf.cast106) #5
  %tobool130 = icmp eq i32 %call129, 0
  br i1 %tobool130, label %if.then131, label %if.end133

if.then131:                                       ; preds = %if.end123
  %call132 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast106, %struct.rtx_def* %call84) #5
  br label %if.end133

if.end133:                                        ; preds = %if.end123, %if.then131
  %op1.0 = phi %struct.rtx_def* [ %call84, %if.end123 ], [ %call132, %if.then131 ]
  %predicate138 = getelementptr inbounds %struct.insn_operand_data* %24, i64 3, i32 0
  %27 = load i32 (%struct.rtx_def*, i32)** %predicate138, align 8, !tbaa !28
  %call139 = tail call i32 %27(%struct.rtx_def* %call85, i32 %bf.cast113) #5
  %tobool140 = icmp eq i32 %call139, 0
  br i1 %tobool140, label %if.then141, label %if.end142

if.then141:                                       ; preds = %if.end133
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([30 x i8]* @.str197, i64 0, i64 0)) #5
  %28 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

if.end142:                                        ; preds = %if.end133
  %cmp143 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp143, label %if.then157, label %lor.lhs.false144

lor.lhs.false144:                                 ; preds = %if.end142
  %29 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load145 = load i32* %29, align 8
  %bf.lshr146 = lshr i32 %bf.load145, 16
  %bf.clear147 = and i32 %bf.lshr146, 255
  %cmp148 = icmp eq i32 %bf.clear147, %bf.cast92
  br i1 %cmp148, label %lor.lhs.false149, label %if.then157

lor.lhs.false149:                                 ; preds = %lor.lhs.false144
  %predicate154 = getelementptr inbounds %struct.insn_operand_data* %24, i64 0, i32 0
  %30 = load i32 (%struct.rtx_def*, i32)** %predicate154, align 8, !tbaa !28
  %call155 = tail call i32 %30(%struct.rtx_def* %target, i32 %bf.cast92) #5
  %tobool156 = icmp eq i32 %call155, 0
  br i1 %tobool156, label %if.then157, label %if.end159

if.then157:                                       ; preds = %lor.lhs.false149, %lor.lhs.false144, %if.end142
  %call158 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast92) #5
  br label %if.end159

if.end159:                                        ; preds = %lor.lhs.false149, %if.then157
  %target.addr.1 = phi %struct.rtx_def* [ %call158, %if.then157 ], [ %target, %lor.lhs.false149 ]
  %31 = load %struct.rtx_def* (%struct.rtx_def*, ...)** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 771, i32 2), align 8, !tbaa !30
  %call163 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %31(%struct.rtx_def* %target.addr.1, %struct.rtx_def* %op0.1, %struct.rtx_def* %op1.0, %struct.rtx_def* %call85) #5
  %tobool164 = icmp eq %struct.rtx_def* %call163, null
  br i1 %tobool164, label %return, label %if.end166

if.end166:                                        ; preds = %if.end159
  %call167 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call163) #5
  br label %return

sw.bb168:                                         ; preds = %entry
  %32 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %32, 25
  %33 = and i32 %and, 1
  %34 = or i32 %33, 678
  %value171 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %35 = bitcast i32* %value171 to %union.tree_node**
  %36 = load %union.tree_node** %35, align 8, !tbaa !25
  %chain173 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %37 = load %union.tree_node** %chain173, align 8, !tbaa !27
  %value175 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 2
  %38 = bitcast i32* %value175 to %union.tree_node**
  %39 = load %union.tree_node** %38, align 8, !tbaa !25
  %chain179 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 0
  %40 = load %union.tree_node** %chain179, align 8, !tbaa !27
  %value181 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 2
  %41 = bitcast i32* %value181 to %union.tree_node**
  %42 = load %union.tree_node** %41, align 8, !tbaa !25
  %call182 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %42, %struct.rtx_def* null, i32 0, i32 0) #5
  %call183 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %36, %struct.rtx_def* null, i32 0, i32 0) #5
  %call184 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %39, %struct.rtx_def* null, i32 0, i32 0) #5
  %idxprom185 = zext i32 %34 to i64
  %operand187 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom185, i32 3
  %43 = load %struct.insn_operand_data** %operand187, align 8, !tbaa !21
  %mode189 = getelementptr inbounds %struct.insn_operand_data* %43, i64 0, i32 2
  %bf.load190 = load i16* %mode189, align 8
  %bf.cast191 = zext i16 %bf.load190 to i32
  %mode196 = getelementptr inbounds %struct.insn_operand_data* %43, i64 1, i32 2
  %bf.load197 = load i16* %mode196, align 8
  %bf.cast198 = zext i16 %bf.load197 to i32
  %mode203 = getelementptr inbounds %struct.insn_operand_data* %43, i64 2, i32 2
  %bf.load204 = load i16* %mode203, align 8
  %bf.cast205 = zext i16 %bf.load204 to i32
  %predicate210 = getelementptr inbounds %struct.insn_operand_data* %43, i64 0, i32 0
  %44 = load i32 (%struct.rtx_def*, i32)** %predicate210, align 8, !tbaa !28
  %call211 = tail call i32 %44(%struct.rtx_def* %call182, i32 %bf.cast191) #5
  %tobool212 = icmp eq i32 %call211, 0
  br i1 %tobool212, label %if.then213, label %if.end215

if.then213:                                       ; preds = %sw.bb168
  %call214 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast191, %struct.rtx_def* %call182) #5
  br label %if.end215

if.end215:                                        ; preds = %sw.bb168, %if.then213
  %op0.2 = phi %struct.rtx_def* [ %call182, %sw.bb168 ], [ %call214, %if.then213 ]
  %predicate220 = getelementptr inbounds %struct.insn_operand_data* %43, i64 1, i32 0
  %45 = load i32 (%struct.rtx_def*, i32)** %predicate220, align 8, !tbaa !28
  %call221 = tail call i32 %45(%struct.rtx_def* %call183, i32 %bf.cast198) #5
  %tobool222 = icmp eq i32 %call221, 0
  br i1 %tobool222, label %if.then223, label %if.end225

if.then223:                                       ; preds = %if.end215
  %call224 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast198, %struct.rtx_def* %call183) #5
  br label %if.end225

if.end225:                                        ; preds = %if.end215, %if.then223
  %op1.1 = phi %struct.rtx_def* [ %call183, %if.end215 ], [ %call224, %if.then223 ]
  %predicate230 = getelementptr inbounds %struct.insn_operand_data* %43, i64 2, i32 0
  %46 = load i32 (%struct.rtx_def*, i32)** %predicate230, align 8, !tbaa !28
  %call231 = tail call i32 %46(%struct.rtx_def* %call184, i32 %bf.cast205) #5
  %tobool232 = icmp eq i32 %call231, 0
  br i1 %tobool232, label %if.then233, label %if.end235

if.then233:                                       ; preds = %if.end225
  %call234 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast205, %struct.rtx_def* %call184) #5
  br label %if.end235

if.end235:                                        ; preds = %if.end225, %if.then233
  %op2.0 = phi %struct.rtx_def* [ %call184, %if.end225 ], [ %call234, %if.then233 ]
  %genfun238 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom185, i32 2
  %47 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun238, align 8, !tbaa !30
  %call239 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %47(%struct.rtx_def* %op0.2, %struct.rtx_def* %op1.1, %struct.rtx_def* %op2.0) #5
  %tobool240 = icmp eq %struct.rtx_def* %call239, null
  br i1 %tobool240, label %return, label %if.end242

if.end242:                                        ; preds = %if.end235
  %call243 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call239) #5
  br label %return

sw.bb244:                                         ; preds = %entry
  %call245 = tail call fastcc %struct.rtx_def* @ix86_expand_unop1_builtin(i32 703, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb246:                                         ; preds = %entry
  %call247 = tail call fastcc %struct.rtx_def* @ix86_expand_unop1_builtin(i32 701, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb248:                                         ; preds = %entry
  %call249 = tail call fastcc %struct.rtx_def* @ix86_expand_unop1_builtin(i32 699, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb250:                                         ; preds = %entry
  %call251 = tail call fastcc %struct.rtx_def* @ix86_expand_timode_binop_builtin(i32 708, %union.tree_node* %3)
  br label %return

sw.bb252:                                         ; preds = %entry
  %call253 = tail call fastcc %struct.rtx_def* @ix86_expand_timode_binop_builtin(i32 712, %union.tree_node* %3)
  br label %return

sw.bb254:                                         ; preds = %entry
  %call255 = tail call fastcc %struct.rtx_def* @ix86_expand_timode_binop_builtin(i32 718, %union.tree_node* %3)
  br label %return

sw.bb256:                                         ; preds = %entry
  %call257 = tail call fastcc %struct.rtx_def* @ix86_expand_timode_binop_builtin(i32 724, %union.tree_node* %3)
  br label %return

sw.bb258:                                         ; preds = %entry
  %call259 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 674, %union.tree_node* %3, %struct.rtx_def* %target, i32 1)
  br label %return

sw.bb260:                                         ; preds = %entry
  %call261 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 675, %union.tree_node* %3, %struct.rtx_def* %target, i32 1)
  br label %return

sw.bb262:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 674, %union.tree_node* %3)
  br label %return

sw.bb264:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 675, %union.tree_node* %3)
  br label %return

sw.bb266:                                         ; preds = %entry
  %call267 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 686, %union.tree_node* %3, %struct.rtx_def* %target, i32 1)
  br label %return

sw.bb268:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 688, %union.tree_node* %3)
  br label %return

sw.bb270:                                         ; preds = %entry, %entry
  %cmp271 = icmp eq i32 %4, 65
  %value274 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %48 = bitcast i32* %value274 to %union.tree_node**
  %49 = load %union.tree_node** %48, align 8, !tbaa !25
  %chain276 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %50 = load %union.tree_node** %chain276, align 8, !tbaa !27
  %value278 = getelementptr inbounds %union.tree_node* %50, i64 0, i32 0, i32 2
  %51 = bitcast i32* %value278 to %union.tree_node**
  %52 = load %union.tree_node** %51, align 8, !tbaa !25
  %call279 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %49, %struct.rtx_def* null, i32 0, i32 0) #5
  %call280 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %52, %struct.rtx_def* null, i32 0, i32 0) #5
  %idxprom281 = select i1 %cmp271, i64 684, i64 685
  %operand283 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom281, i32 3
  %53 = load %struct.insn_operand_data** %operand283, align 8, !tbaa !21
  %mode285 = getelementptr inbounds %struct.insn_operand_data* %53, i64 0, i32 2
  %bf.load286 = load i16* %mode285, align 8
  %bf.cast287 = zext i16 %bf.load286 to i32
  %mode292 = getelementptr inbounds %struct.insn_operand_data* %53, i64 1, i32 2
  %bf.load293 = load i16* %mode292, align 8
  %bf.cast294 = zext i16 %bf.load293 to i32
  %mode299 = getelementptr inbounds %struct.insn_operand_data* %53, i64 2, i32 2
  %bf.load300 = load i16* %mode299, align 8
  %bf.cast301 = zext i16 %bf.load300 to i32
  %predicate306 = getelementptr inbounds %struct.insn_operand_data* %53, i64 1, i32 0
  %54 = load i32 (%struct.rtx_def*, i32)** %predicate306, align 8, !tbaa !28
  %call307 = tail call i32 %54(%struct.rtx_def* %call279, i32 %bf.cast294) #5
  %tobool308 = icmp eq i32 %call307, 0
  br i1 %tobool308, label %if.then309, label %if.end311

if.then309:                                       ; preds = %sw.bb270
  %call310 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast294, %struct.rtx_def* %call279) #5
  br label %if.end311

if.end311:                                        ; preds = %sw.bb270, %if.then309
  %op0.3 = phi %struct.rtx_def* [ %call279, %sw.bb270 ], [ %call310, %if.then309 ]
  %55 = load i32* @target_flags, align 4, !tbaa !1
  %and312 = lshr i32 %55, 25
  %56 = and i32 %and312, 1
  %57 = or i32 %56, 4
  %call315 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %57, %struct.rtx_def* %call280) #5
  %call316 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast301, %struct.rtx_def* %call315) #5
  %cmp317 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp317, label %if.then331, label %lor.lhs.false318

lor.lhs.false318:                                 ; preds = %if.end311
  %58 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load319 = load i32* %58, align 8
  %bf.lshr320 = lshr i32 %bf.load319, 16
  %bf.clear321 = and i32 %bf.lshr320, 255
  %cmp322 = icmp eq i32 %bf.clear321, %bf.cast287
  br i1 %cmp322, label %lor.lhs.false323, label %if.then331

lor.lhs.false323:                                 ; preds = %lor.lhs.false318
  %predicate328 = getelementptr inbounds %struct.insn_operand_data* %53, i64 0, i32 0
  %59 = load i32 (%struct.rtx_def*, i32)** %predicate328, align 8, !tbaa !28
  %call329 = tail call i32 %59(%struct.rtx_def* %target, i32 %bf.cast287) #5
  %tobool330 = icmp eq i32 %call329, 0
  br i1 %tobool330, label %if.then331, label %if.end333

if.then331:                                       ; preds = %lor.lhs.false323, %lor.lhs.false318, %if.end311
  %call332 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast287) #5
  br label %if.end333

if.end333:                                        ; preds = %lor.lhs.false323, %if.then331
  %target.addr.2 = phi %struct.rtx_def* [ %call332, %if.then331 ], [ %target, %lor.lhs.false323 ]
  %genfun336 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom281, i32 2
  %60 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun336, align 8, !tbaa !30
  %call337 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %60(%struct.rtx_def* %target.addr.2, %struct.rtx_def* %op0.3, %struct.rtx_def* %call316) #5
  %tobool338 = icmp eq %struct.rtx_def* %call337, null
  br i1 %tobool338, label %return, label %if.end340

if.end340:                                        ; preds = %if.end333
  %call341 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call337) #5
  br label %return

sw.bb342:                                         ; preds = %entry, %entry
  %cmp343 = icmp eq i32 %4, 67
  %value346 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %61 = bitcast i32* %value346 to %union.tree_node**
  %62 = load %union.tree_node** %61, align 8, !tbaa !25
  %chain348 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %63 = load %union.tree_node** %chain348, align 8, !tbaa !27
  %value350 = getelementptr inbounds %union.tree_node* %63, i64 0, i32 0, i32 2
  %64 = bitcast i32* %value350 to %union.tree_node**
  %65 = load %union.tree_node** %64, align 8, !tbaa !25
  %call351 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %62, %struct.rtx_def* null, i32 0, i32 0) #5
  %call352 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %65, %struct.rtx_def* null, i32 0, i32 0) #5
  %idxprom353 = select i1 %cmp343, i64 684, i64 685
  %operand355 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom353, i32 3
  %66 = load %struct.insn_operand_data** %operand355, align 8, !tbaa !21
  %mode357 = getelementptr inbounds %struct.insn_operand_data* %66, i64 1, i32 2
  %bf.load358 = load i16* %mode357, align 8
  %bf.cast359 = zext i16 %bf.load358 to i32
  %mode364 = getelementptr inbounds %struct.insn_operand_data* %66, i64 2, i32 2
  %bf.load365 = load i16* %mode364, align 8
  %bf.cast366 = zext i16 %bf.load365 to i32
  %67 = load i32* @target_flags, align 4, !tbaa !1
  %and367 = lshr i32 %67, 25
  %68 = and i32 %and367, 1
  %69 = or i32 %68, 4
  %call370 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %69, %struct.rtx_def* %call351) #5
  %call371 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast359, %struct.rtx_def* %call370) #5
  %predicate376 = getelementptr inbounds %struct.insn_operand_data* %66, i64 2, i32 0
  %70 = load i32 (%struct.rtx_def*, i32)** %predicate376, align 8, !tbaa !28
  %call377 = tail call i32 %70(%struct.rtx_def* %call352, i32 %bf.cast366) #5
  %tobool378 = icmp eq i32 %call377, 0
  br i1 %tobool378, label %if.then379, label %if.end381

if.then379:                                       ; preds = %sw.bb342
  %call380 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast366, %struct.rtx_def* %call352) #5
  br label %if.end381

if.end381:                                        ; preds = %sw.bb342, %if.then379
  %op1.2 = phi %struct.rtx_def* [ %call352, %sw.bb342 ], [ %call380, %if.then379 ]
  %genfun384 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom353, i32 2
  %71 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun384, align 8, !tbaa !30
  %call385 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %71(%struct.rtx_def* %call371, %struct.rtx_def* %call371, %struct.rtx_def* %op1.2) #5
  %tobool386 = icmp eq %struct.rtx_def* %call385, null
  br i1 %tobool386, label %return, label %if.end388

if.end388:                                        ; preds = %if.end381
  %call389 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call385) #5
  br label %return

sw.bb390:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 680, %union.tree_node* %3)
  br label %return

sw.bb392:                                         ; preds = %entry
  tail call fastcc void @ix86_expand_store_builtin(i32 681, %union.tree_node* %3)
  br label %return

sw.bb394:                                         ; preds = %entry
  %value396 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %72 = bitcast i32* %value396 to %union.tree_node**
  %73 = load %union.tree_node** %72, align 8, !tbaa !25
  %call397 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %73, %struct.rtx_def* null, i32 0, i32 0) #5
  %74 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine.i = getelementptr inbounds %struct.function* %74, i64 0, i32 51
  %75 = load %struct.machine_function** %machine.i, align 8, !tbaa !31
  %arrayidx3.i = getelementptr inbounds %struct.machine_function* %75, i64 0, i32 0, i64 4, i64 0
  %76 = load %struct.rtx_def** %arrayidx3.i, align 8, !tbaa !6
  %cmp4.i = icmp eq %struct.rtx_def* %76, null
  br i1 %cmp4.i, label %if.then5.i, label %assign_386_stack_local.exit

if.then5.i:                                       ; preds = %sw.bb394
  %77 = load i8* getelementptr inbounds ([59 x i8]* @mode_size, i64 0, i64 4), align 1, !tbaa !5
  %conv.i = zext i8 %77 to i64
  %call.i = tail call %struct.rtx_def* @assign_stack_local(i32 4, i64 %conv.i, i32 0) #5
  %78 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine10.i = getelementptr inbounds %struct.function* %78, i64 0, i32 51
  %79 = load %struct.machine_function** %machine10.i, align 8, !tbaa !31
  %arrayidx13.i = getelementptr inbounds %struct.machine_function* %79, i64 0, i32 0, i64 4, i64 0
  store %struct.rtx_def* %call.i, %struct.rtx_def** %arrayidx13.i, align 8, !tbaa !6
  %.pre.i = load %struct.function** @cfun, align 8, !tbaa !6
  %machine17.phi.trans.insert.i = getelementptr inbounds %struct.function* %.pre.i, i64 0, i32 51
  %.pre29.i = load %struct.machine_function** %machine17.phi.trans.insert.i, align 8, !tbaa !31
  %arrayidx20.phi.trans.insert.i = getelementptr inbounds %struct.machine_function* %.pre29.i, i64 0, i32 0, i64 4, i64 0
  %.pre30.i = load %struct.rtx_def** %arrayidx20.phi.trans.insert.i, align 8, !tbaa !6
  br label %assign_386_stack_local.exit

assign_386_stack_local.exit:                      ; preds = %sw.bb394, %if.then5.i
  %80 = phi %struct.rtx_def* [ %.pre30.i, %if.then5.i ], [ %76, %sw.bb394 ]
  %call399 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %80, %struct.rtx_def* %call397) #5
  %call400 = tail call %struct.rtx_def* @gen_ldmxcsr(%struct.rtx_def* %80) #5
  %call401 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call400) #5
  br label %return

sw.bb402:                                         ; preds = %entry
  %81 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine.i1005 = getelementptr inbounds %struct.function* %81, i64 0, i32 51
  %82 = load %struct.machine_function** %machine.i1005, align 8, !tbaa !31
  %arrayidx3.i1006 = getelementptr inbounds %struct.machine_function* %82, i64 0, i32 0, i64 4, i64 0
  %83 = load %struct.rtx_def** %arrayidx3.i1006, align 8, !tbaa !6
  %cmp4.i1007 = icmp eq %struct.rtx_def* %83, null
  br i1 %cmp4.i1007, label %if.then5.i1017, label %assign_386_stack_local.exit1018

if.then5.i1017:                                   ; preds = %sw.bb402
  %84 = load i8* getelementptr inbounds ([59 x i8]* @mode_size, i64 0, i64 4), align 1, !tbaa !5
  %conv.i1008 = zext i8 %84 to i64
  %call.i1009 = tail call %struct.rtx_def* @assign_stack_local(i32 4, i64 %conv.i1008, i32 0) #5
  %85 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine10.i1010 = getelementptr inbounds %struct.function* %85, i64 0, i32 51
  %86 = load %struct.machine_function** %machine10.i1010, align 8, !tbaa !31
  %arrayidx13.i1011 = getelementptr inbounds %struct.machine_function* %86, i64 0, i32 0, i64 4, i64 0
  store %struct.rtx_def* %call.i1009, %struct.rtx_def** %arrayidx13.i1011, align 8, !tbaa !6
  %.pre.i1012 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine17.phi.trans.insert.i1013 = getelementptr inbounds %struct.function* %.pre.i1012, i64 0, i32 51
  %.pre29.i1014 = load %struct.machine_function** %machine17.phi.trans.insert.i1013, align 8, !tbaa !31
  %arrayidx20.phi.trans.insert.i1015 = getelementptr inbounds %struct.machine_function* %.pre29.i1014, i64 0, i32 0, i64 4, i64 0
  %.pre30.i1016 = load %struct.rtx_def** %arrayidx20.phi.trans.insert.i1015, align 8, !tbaa !6
  br label %assign_386_stack_local.exit1018

assign_386_stack_local.exit1018:                  ; preds = %sw.bb402, %if.then5.i1017
  %87 = phi %struct.rtx_def* [ %.pre30.i1016, %if.then5.i1017 ], [ %83, %sw.bb402 ]
  %call404 = tail call %struct.rtx_def* @gen_stmxcsr(%struct.rtx_def* %87) #5
  %call405 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call404) #5
  %call406 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 4, %struct.rtx_def* %87) #5
  br label %return

sw.bb407:                                         ; preds = %entry
  %value409 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %88 = bitcast i32* %value409 to %union.tree_node**
  %89 = load %union.tree_node** %88, align 8, !tbaa !25
  %chain411 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %90 = load %union.tree_node** %chain411, align 8, !tbaa !27
  %value413 = getelementptr inbounds %union.tree_node* %90, i64 0, i32 0, i32 2
  %91 = bitcast i32* %value413 to %union.tree_node**
  %92 = load %union.tree_node** %91, align 8, !tbaa !25
  %chain417 = getelementptr inbounds %union.tree_node* %90, i64 0, i32 0, i32 0, i32 0
  %93 = load %union.tree_node** %chain417, align 8, !tbaa !27
  %value419 = getelementptr inbounds %union.tree_node* %93, i64 0, i32 0, i32 2
  %94 = bitcast i32* %value419 to %union.tree_node**
  %95 = load %union.tree_node** %94, align 8, !tbaa !25
  %call420 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %89, %struct.rtx_def* null, i32 0, i32 0) #5
  %call421 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %92, %struct.rtx_def* null, i32 0, i32 0) #5
  %call422 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %95, %struct.rtx_def* null, i32 0, i32 0) #5
  %96 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 689, i32 3), align 8, !tbaa !21
  %mode427 = getelementptr inbounds %struct.insn_operand_data* %96, i64 0, i32 2
  %bf.load428 = load i16* %mode427, align 8
  %bf.cast429 = zext i16 %bf.load428 to i32
  %mode434 = getelementptr inbounds %struct.insn_operand_data* %96, i64 1, i32 2
  %bf.load435 = load i16* %mode434, align 8
  %bf.cast436 = zext i16 %bf.load435 to i32
  %mode441 = getelementptr inbounds %struct.insn_operand_data* %96, i64 2, i32 2
  %bf.load442 = load i16* %mode441, align 8
  %bf.cast443 = zext i16 %bf.load442 to i32
  %mode448 = getelementptr inbounds %struct.insn_operand_data* %96, i64 3, i32 2
  %bf.load449 = load i16* %mode448, align 8
  %bf.cast450 = zext i16 %bf.load449 to i32
  %predicate455 = getelementptr inbounds %struct.insn_operand_data* %96, i64 1, i32 0
  %97 = load i32 (%struct.rtx_def*, i32)** %predicate455, align 8, !tbaa !28
  %call456 = tail call i32 %97(%struct.rtx_def* %call420, i32 %bf.cast436) #5
  %tobool457 = icmp eq i32 %call456, 0
  br i1 %tobool457, label %if.then458, label %if.end460

if.then458:                                       ; preds = %sw.bb407
  %call459 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast436, %struct.rtx_def* %call420) #5
  br label %if.end460

if.end460:                                        ; preds = %sw.bb407, %if.then458
  %op0.4 = phi %struct.rtx_def* [ %call420, %sw.bb407 ], [ %call459, %if.then458 ]
  %predicate465 = getelementptr inbounds %struct.insn_operand_data* %96, i64 2, i32 0
  %98 = load i32 (%struct.rtx_def*, i32)** %predicate465, align 8, !tbaa !28
  %call466 = tail call i32 %98(%struct.rtx_def* %call421, i32 %bf.cast443) #5
  %tobool467 = icmp eq i32 %call466, 0
  br i1 %tobool467, label %if.then468, label %if.end470

if.then468:                                       ; preds = %if.end460
  %call469 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast443, %struct.rtx_def* %call421) #5
  br label %if.end470

if.end470:                                        ; preds = %if.end460, %if.then468
  %op1.3 = phi %struct.rtx_def* [ %call421, %if.end460 ], [ %call469, %if.then468 ]
  %predicate475 = getelementptr inbounds %struct.insn_operand_data* %96, i64 3, i32 0
  %99 = load i32 (%struct.rtx_def*, i32)** %predicate475, align 8, !tbaa !28
  %call476 = tail call i32 %99(%struct.rtx_def* %call422, i32 %bf.cast450) #5
  %tobool477 = icmp eq i32 %call476, 0
  br i1 %tobool477, label %if.then478, label %if.end480

if.then478:                                       ; preds = %if.end470
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([26 x i8]* @.str198, i64 0, i64 0)) #5
  %call479 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast429) #5
  br label %return

if.end480:                                        ; preds = %if.end470
  %cmp481 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp481, label %if.then495, label %lor.lhs.false482

lor.lhs.false482:                                 ; preds = %if.end480
  %100 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load483 = load i32* %100, align 8
  %bf.lshr484 = lshr i32 %bf.load483, 16
  %bf.clear485 = and i32 %bf.lshr484, 255
  %cmp486 = icmp eq i32 %bf.clear485, %bf.cast429
  br i1 %cmp486, label %lor.lhs.false487, label %if.then495

lor.lhs.false487:                                 ; preds = %lor.lhs.false482
  %predicate492 = getelementptr inbounds %struct.insn_operand_data* %96, i64 0, i32 0
  %101 = load i32 (%struct.rtx_def*, i32)** %predicate492, align 8, !tbaa !28
  %call493 = tail call i32 %101(%struct.rtx_def* %target, i32 %bf.cast429) #5
  %tobool494 = icmp eq i32 %call493, 0
  br i1 %tobool494, label %if.then495, label %if.end497

if.then495:                                       ; preds = %lor.lhs.false487, %lor.lhs.false482, %if.end480
  %call496 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast429) #5
  br label %if.end497

if.end497:                                        ; preds = %lor.lhs.false487, %if.then495
  %target.addr.3 = phi %struct.rtx_def* [ %call496, %if.then495 ], [ %target, %lor.lhs.false487 ]
  %102 = load %struct.rtx_def* (%struct.rtx_def*, ...)** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 689, i32 2), align 8, !tbaa !30
  %call501 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %102(%struct.rtx_def* %target.addr.3, %struct.rtx_def* %op0.4, %struct.rtx_def* %op1.3, %struct.rtx_def* %call422) #5
  %tobool502 = icmp eq %struct.rtx_def* %call501, null
  br i1 %tobool502, label %return, label %if.end504

if.end504:                                        ; preds = %if.end497
  %call505 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call501) #5
  br label %return

sw.bb506:                                         ; preds = %entry
  %value508 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %103 = bitcast i32* %value508 to %union.tree_node**
  %104 = load %union.tree_node** %103, align 8, !tbaa !25
  %chain510 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %105 = load %union.tree_node** %chain510, align 8, !tbaa !27
  %value512 = getelementptr inbounds %union.tree_node* %105, i64 0, i32 0, i32 2
  %106 = bitcast i32* %value512 to %union.tree_node**
  %107 = load %union.tree_node** %106, align 8, !tbaa !25
  %call513 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %104, %struct.rtx_def* null, i32 0, i32 0) #5
  %call514 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %107, %struct.rtx_def* null, i32 0, i32 0) #5
  %108 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 773, i32 3), align 8, !tbaa !21
  %mode519 = getelementptr inbounds %struct.insn_operand_data* %108, i64 0, i32 2
  %bf.load520 = load i16* %mode519, align 8
  %bf.cast521 = zext i16 %bf.load520 to i32
  %mode526 = getelementptr inbounds %struct.insn_operand_data* %108, i64 1, i32 2
  %bf.load527 = load i16* %mode526, align 8
  %bf.cast528 = zext i16 %bf.load527 to i32
  %mode533 = getelementptr inbounds %struct.insn_operand_data* %108, i64 2, i32 2
  %bf.load534 = load i16* %mode533, align 8
  %bf.cast535 = zext i16 %bf.load534 to i32
  %predicate540 = getelementptr inbounds %struct.insn_operand_data* %108, i64 1, i32 0
  %109 = load i32 (%struct.rtx_def*, i32)** %predicate540, align 8, !tbaa !28
  %call541 = tail call i32 %109(%struct.rtx_def* %call513, i32 %bf.cast528) #5
  %tobool542 = icmp eq i32 %call541, 0
  br i1 %tobool542, label %if.then543, label %if.end545

if.then543:                                       ; preds = %sw.bb506
  %call544 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast528, %struct.rtx_def* %call513) #5
  br label %if.end545

if.end545:                                        ; preds = %sw.bb506, %if.then543
  %op0.5 = phi %struct.rtx_def* [ %call513, %sw.bb506 ], [ %call544, %if.then543 ]
  %predicate550 = getelementptr inbounds %struct.insn_operand_data* %108, i64 2, i32 0
  %110 = load i32 (%struct.rtx_def*, i32)** %predicate550, align 8, !tbaa !28
  %call551 = tail call i32 %110(%struct.rtx_def* %call514, i32 %bf.cast535) #5
  %tobool552 = icmp eq i32 %call551, 0
  br i1 %tobool552, label %if.then553, label %if.end554

if.then553:                                       ; preds = %if.end545
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([26 x i8]* @.str198, i64 0, i64 0)) #5
  %111 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

if.end554:                                        ; preds = %if.end545
  %cmp555 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp555, label %if.then569, label %lor.lhs.false556

lor.lhs.false556:                                 ; preds = %if.end554
  %112 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load557 = load i32* %112, align 8
  %bf.lshr558 = lshr i32 %bf.load557, 16
  %bf.clear559 = and i32 %bf.lshr558, 255
  %cmp560 = icmp eq i32 %bf.clear559, %bf.cast521
  br i1 %cmp560, label %lor.lhs.false561, label %if.then569

lor.lhs.false561:                                 ; preds = %lor.lhs.false556
  %predicate566 = getelementptr inbounds %struct.insn_operand_data* %108, i64 0, i32 0
  %113 = load i32 (%struct.rtx_def*, i32)** %predicate566, align 8, !tbaa !28
  %call567 = tail call i32 %113(%struct.rtx_def* %target, i32 %bf.cast521) #5
  %tobool568 = icmp eq i32 %call567, 0
  br i1 %tobool568, label %if.then569, label %if.end571

if.then569:                                       ; preds = %lor.lhs.false561, %lor.lhs.false556, %if.end554
  %call570 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast521) #5
  br label %if.end571

if.end571:                                        ; preds = %lor.lhs.false561, %if.then569
  %target.addr.4 = phi %struct.rtx_def* [ %call570, %if.then569 ], [ %target, %lor.lhs.false561 ]
  %114 = load %struct.rtx_def* (%struct.rtx_def*, ...)** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 773, i32 2), align 8, !tbaa !30
  %call575 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %114(%struct.rtx_def* %target.addr.4, %struct.rtx_def* %op0.5, %struct.rtx_def* %call514) #5
  %tobool576 = icmp eq %struct.rtx_def* %call575, null
  br i1 %tobool576, label %return, label %if.end578

if.end578:                                        ; preds = %if.end571
  %call579 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call575) #5
  br label %return

sw.bb580:                                         ; preds = %entry
  %call581 = tail call %struct.rtx_def* @gen_femms() #5
  %call582 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call581) #5
  br label %return

sw.bb583:                                         ; preds = %entry
  %call584 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 823, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb585:                                         ; preds = %entry
  %call586 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 816, %union.tree_node* %3, %struct.rtx_def* %target, i32 0)
  br label %return

sw.bb587:                                         ; preds = %entry
  %call588 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 818, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb589:                                         ; preds = %entry
  %call590 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 806, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb591:                                         ; preds = %entry
  %call592 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 811, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb593:                                         ; preds = %entry
  %call594 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 810, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb595:                                         ; preds = %entry
  %call596 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 809, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb597:                                         ; preds = %entry
  %call598 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 812, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb599:                                         ; preds = %entry
  %call600 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 813, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb601:                                         ; preds = %entry
  %call602 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 814, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb603:                                         ; preds = %entry
  %call604 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 824, %union.tree_node* %3, %struct.rtx_def* %target, i32 0)
  br label %return

sw.bb605:                                         ; preds = %entry
  %call606 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 825, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb607:                                         ; preds = %entry
  %call608 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 826, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb609:                                         ; preds = %entry
  %call610 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 828, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb611:                                         ; preds = %entry
  %call612 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 827, %union.tree_node* %3, %struct.rtx_def* %target, i32 0)
  br label %return

sw.bb613:                                         ; preds = %entry
  %call614 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 807, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb615:                                         ; preds = %entry
  %call616 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 808, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb617:                                         ; preds = %entry
  %call618 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 822, %union.tree_node* %3, %struct.rtx_def* %target, i32 0)
  br label %return

sw.bb619:                                         ; preds = %entry
  %call620 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 829, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb621:                                         ; preds = %entry
  %call622 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 817, %union.tree_node* %3, %struct.rtx_def* %target, i32 0)
  br label %return

sw.bb623:                                         ; preds = %entry
  %call624 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 819, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb625:                                         ; preds = %entry
  %call626 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 820, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

sw.bb627:                                         ; preds = %entry
  %call628 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 821, %union.tree_node* %3, %struct.rtx_def* %target, i32 0)
  br label %return

sw.bb629:                                         ; preds = %entry
  %call630 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 830, %union.tree_node* %3, %struct.rtx_def* %target, i32 0)
  br label %return

sw.bb631:                                         ; preds = %entry
  %call632 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 831, %union.tree_node* %3, %struct.rtx_def* %target, i32 0)
  br label %return

sw.bb633:                                         ; preds = %entry
  %call634 = tail call %struct.rtx_def* @gen_reg_rtx(i32 46) #5
  %call635 = tail call %struct.rtx_def* @gen_sse_clrv4sf(%struct.rtx_def* %call634) #5
  %call636 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call635) #5
  br label %return

sw.bb637:                                         ; preds = %entry
  %call638 = tail call %struct.rtx_def* @gen_reg_rtx(i32 5) #5
  %call639 = tail call %struct.rtx_def* @gen_mmx_clrdi(%struct.rtx_def* %call638) #5
  %call640 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call639) #5
  br label %return

for.body:                                         ; preds = %entry, %for.inc
  %d.01058 = phi %struct.builtin_description* [ %incdec.ptr, %for.inc ], [ bitcast (<{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }>* @bdesc_2arg to %struct.builtin_description*), %entry ]
  %i.01057 = phi i64 [ %inc, %for.inc ], [ 0, %entry ]
  %code = getelementptr inbounds %struct.builtin_description* %d.01058, i64 0, i32 3
  %115 = load i32* %code, align 4, !tbaa !24
  %cmp642 = icmp eq i32 %115, %4
  br i1 %cmp642, label %if.then643, label %for.inc

if.then643:                                       ; preds = %for.body
  %icode644 = getelementptr inbounds %struct.builtin_description* %d.01058, i64 0, i32 1
  %116 = load i32* %icode644, align 4, !tbaa !20
  %.off = add i32 %116, -727
  %switch = icmp ult i32 %.off, 4
  br i1 %switch, label %if.then655, label %if.end657

if.then655:                                       ; preds = %if.then643
  %value.i = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %117 = bitcast i32* %value.i to %union.tree_node**
  %118 = load %union.tree_node** %117, align 8, !tbaa !25
  %chain.i = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %119 = load %union.tree_node** %chain.i, align 8, !tbaa !27
  %value2.i = getelementptr inbounds %union.tree_node* %119, i64 0, i32 0, i32 2
  %120 = bitcast i32* %value2.i to %union.tree_node**
  %121 = load %union.tree_node** %120, align 8, !tbaa !25
  %call.i1019 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %118, %struct.rtx_def* null, i32 0, i32 0) #5
  %call3.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %121, %struct.rtx_def* null, i32 0, i32 0) #5
  %122 = load i32* %icode644, align 4, !tbaa !20
  %idxprom.i = zext i32 %122 to i64
  %operand.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom.i, i32 3
  %123 = load %struct.insn_operand_data** %operand.i, align 8, !tbaa !21
  %mode.i = getelementptr inbounds %struct.insn_operand_data* %123, i64 0, i32 2
  %bf.load.i = load i16* %mode.i, align 8
  %bf.cast.i = zext i16 %bf.load.i to i32
  %mode10.i = getelementptr inbounds %struct.insn_operand_data* %123, i64 1, i32 2
  %bf.load11.i = load i16* %mode10.i, align 8
  %bf.cast12.i = zext i16 %bf.load11.i to i32
  %mode18.i = getelementptr inbounds %struct.insn_operand_data* %123, i64 2, i32 2
  %bf.load19.i = load i16* %mode18.i, align 8
  %bf.cast20.i = zext i16 %bf.load19.i to i32
  %comparison21.i = getelementptr inbounds %struct.builtin_description* %d.01058, i64 0, i32 4
  %124 = load i32* %comparison21.i, align 4, !tbaa !34
  %idxprom22.i = zext i16 %bf.load11.i to i64
  %arrayidx23.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom22.i
  %125 = load i32* %arrayidx23.i, align 4, !tbaa !5
  %.off.i = add i32 %125, -7
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then655
  %call27.i = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call.i1019, i32 %bf.cast12.i) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then655
  %op0.0.i = phi %struct.rtx_def* [ %call27.i, %if.then.i ], [ %call.i1019, %if.then655 ]
  %idxprom28.i = zext i16 %bf.load19.i to i64
  %arrayidx29.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom28.i
  %126 = load i32* %arrayidx29.i, align 4, !tbaa !5
  %.off125.i = add i32 %126, -7
  %switch126.i = icmp ult i32 %.off125.i, 2
  br i1 %switch126.i, label %if.then35.i, label %if.end37.i

if.then35.i:                                      ; preds = %if.end.i
  %call36.i = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call3.i, i32 %bf.cast20.i) #5
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.then35.i, %if.end.i
  %op1.0.i = phi %struct.rtx_def* [ %call36.i, %if.then35.i ], [ %call3.i, %if.end.i ]
  %flag.i = getelementptr inbounds %struct.builtin_description* %d.01058, i64 0, i32 5
  %127 = load i32* %flag.i, align 4, !tbaa !35
  %tobool.i = icmp eq i32 %127, 0
  br i1 %tobool.i, label %if.end41.i, label %if.then38.i

if.then38.i:                                      ; preds = %if.end37.i
  %call39.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast20.i) #5
  %call40.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call39.i, %struct.rtx_def* %op1.0.i) #5
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.then38.i, %if.end37.i
  %op1.1.i = phi %struct.rtx_def* [ %op0.0.i, %if.then38.i ], [ %op1.0.i, %if.end37.i ]
  %op0.1.i = phi %struct.rtx_def* [ %call39.i, %if.then38.i ], [ %op0.0.i, %if.end37.i ]
  %tobool42.i = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool42.i, label %if.then54.i, label %lor.lhs.false43.i

lor.lhs.false43.i:                                ; preds = %if.end41.i
  %128 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load44.i = load i32* %128, align 8
  %bf.lshr.i = lshr i32 %bf.load44.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %cmp45.i = icmp eq i32 %bf.clear.i, %bf.cast.i
  br i1 %cmp45.i, label %lor.lhs.false46.i, label %if.then54.i

lor.lhs.false46.i:                                ; preds = %lor.lhs.false43.i
  %129 = load i32* %icode644, align 4, !tbaa !20
  %idxprom48.i = zext i32 %129 to i64
  %operand50.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom48.i, i32 3
  %130 = load %struct.insn_operand_data** %operand50.i, align 8, !tbaa !21
  %predicate.i = getelementptr inbounds %struct.insn_operand_data* %130, i64 0, i32 0
  %131 = load i32 (%struct.rtx_def*, i32)** %predicate.i, align 8, !tbaa !28
  %call52.i = tail call i32 %131(%struct.rtx_def* %target, i32 %bf.cast.i) #5
  %tobool53.i = icmp eq i32 %call52.i, 0
  br i1 %tobool53.i, label %if.then54.i, label %if.end56.i

if.then54.i:                                      ; preds = %lor.lhs.false46.i, %lor.lhs.false43.i, %if.end41.i
  %call55.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast.i) #5
  br label %if.end56.i

if.end56.i:                                       ; preds = %if.then54.i, %lor.lhs.false46.i
  %target.addr.0.i = phi %struct.rtx_def* [ %call55.i, %if.then54.i ], [ %target, %lor.lhs.false46.i ]
  %132 = load i32* %icode644, align 4, !tbaa !20
  %idxprom58.i = zext i32 %132 to i64
  %operand60.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom58.i, i32 3
  %133 = load %struct.insn_operand_data** %operand60.i, align 8, !tbaa !21
  %predicate62.i = getelementptr inbounds %struct.insn_operand_data* %133, i64 1, i32 0
  %134 = load i32 (%struct.rtx_def*, i32)** %predicate62.i, align 8, !tbaa !28
  %call63.i = tail call i32 %134(%struct.rtx_def* %op0.1.i, i32 %bf.cast12.i) #5
  %tobool64.i = icmp eq i32 %call63.i, 0
  br i1 %tobool64.i, label %if.then65.i, label %if.end67.i

if.then65.i:                                      ; preds = %if.end56.i
  %call66.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast12.i, %struct.rtx_def* %op0.1.i) #5
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.then65.i, %if.end56.i
  %op0.2.i = phi %struct.rtx_def* [ %op0.1.i, %if.end56.i ], [ %call66.i, %if.then65.i ]
  %135 = load i32* %icode644, align 4, !tbaa !20
  %idxprom69.i = zext i32 %135 to i64
  %operand71.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom69.i, i32 3
  %136 = load %struct.insn_operand_data** %operand71.i, align 8, !tbaa !21
  %predicate73.i = getelementptr inbounds %struct.insn_operand_data* %136, i64 2, i32 0
  %137 = load i32 (%struct.rtx_def*, i32)** %predicate73.i, align 8, !tbaa !28
  %call74.i = tail call i32 %137(%struct.rtx_def* %op1.1.i, i32 %bf.cast20.i) #5
  %tobool75.i = icmp eq i32 %call74.i, 0
  br i1 %tobool75.i, label %if.then76.i, label %if.end78.i

if.then76.i:                                      ; preds = %if.end67.i
  %call77.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast20.i, %struct.rtx_def* %op1.1.i) #5
  br label %if.end78.i

if.end78.i:                                       ; preds = %if.then76.i, %if.end67.i
  %op1.2.i = phi %struct.rtx_def* [ %op1.1.i, %if.end67.i ], [ %call77.i, %if.then76.i ]
  %call79.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %124, i32 %bf.cast12.i, %struct.rtx_def* %op0.2.i, %struct.rtx_def* %op1.2.i) #5
  %138 = load i32* %icode644, align 4, !tbaa !20
  %idxprom81.i = sext i32 %138 to i64
  %genfun.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom81.i, i32 2
  %139 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun.i, align 8, !tbaa !30
  %call83.i = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %139(%struct.rtx_def* %target.addr.0.i, %struct.rtx_def* %op0.2.i, %struct.rtx_def* %op1.2.i, %struct.rtx_def* %call79.i) #5
  %tobool84.i = icmp eq %struct.rtx_def* %call83.i, null
  br i1 %tobool84.i, label %return, label %if.end86.i

if.end86.i:                                       ; preds = %if.end78.i
  %call87.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call83.i) #5
  br label %return

if.end657:                                        ; preds = %if.then643
  %call659 = tail call fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 %116, %union.tree_node* %3, %struct.rtx_def* %target)
  br label %return

for.inc:                                          ; preds = %for.body
  %inc = add i64 %i.01057, 1
  %incdec.ptr = getelementptr inbounds %struct.builtin_description* %d.01058, i64 1
  %cmp641 = icmp ult i64 %inc, 103
  br i1 %cmp641, label %for.body, label %for.body663

for.body663:                                      ; preds = %for.inc, %for.inc670
  %d.11056 = phi %struct.builtin_description* [ %incdec.ptr672, %for.inc670 ], [ bitcast (<{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }>* @bdesc_1arg to %struct.builtin_description*), %for.inc ]
  %i.11055 = phi i64 [ %inc671, %for.inc670 ], [ 0, %for.inc ]
  %code664 = getelementptr inbounds %struct.builtin_description* %d.11056, i64 0, i32 3
  %140 = load i32* %code664, align 4, !tbaa !24
  %cmp665 = icmp eq i32 %140, %4
  br i1 %cmp665, label %if.then666, label %for.inc670

if.then666:                                       ; preds = %for.body663
  %icode667 = getelementptr inbounds %struct.builtin_description* %d.11056, i64 0, i32 1
  %141 = load i32* %icode667, align 4, !tbaa !20
  %call668 = tail call fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 %141, %union.tree_node* %3, %struct.rtx_def* %target, i32 0)
  br label %return

for.inc670:                                       ; preds = %for.body663
  %inc671 = add i64 %i.11055, 1
  %incdec.ptr672 = getelementptr inbounds %struct.builtin_description* %d.11056, i64 1
  %cmp662 = icmp ult i64 %inc671, 9
  br i1 %cmp662, label %for.body663, label %for.body676

for.body676:                                      ; preds = %for.inc670, %for.inc682
  %d.21054 = phi %struct.builtin_description* [ %incdec.ptr684, %for.inc682 ], [ bitcast (<{ { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] }, { i32, i32, i8*, i32, i32, i32, [4 x i8] } }>* @bdesc_comi to %struct.builtin_description*), %for.inc670 ]
  %i.21053 = phi i64 [ %inc683, %for.inc682 ], [ 0, %for.inc670 ]
  %code677 = getelementptr inbounds %struct.builtin_description* %d.21054, i64 0, i32 3
  %142 = load i32* %code677, align 4, !tbaa !24
  %cmp678 = icmp eq i32 %142, %4
  br i1 %cmp678, label %if.then679, label %for.inc682

if.then679:                                       ; preds = %for.body676
  %value.i1020 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %143 = bitcast i32* %value.i1020 to %union.tree_node**
  %144 = load %union.tree_node** %143, align 8, !tbaa !25
  %chain.i1021 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %145 = load %union.tree_node** %chain.i1021, align 8, !tbaa !27
  %value2.i1022 = getelementptr inbounds %union.tree_node* %145, i64 0, i32 0, i32 2
  %146 = bitcast i32* %value2.i1022 to %union.tree_node**
  %147 = load %union.tree_node** %146, align 8, !tbaa !25
  %call.i1023 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %144, %struct.rtx_def* null, i32 0, i32 0) #5
  %call3.i1024 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %147, %struct.rtx_def* null, i32 0, i32 0) #5
  %icode.i1025 = getelementptr inbounds %struct.builtin_description* %d.21054, i64 0, i32 1
  %148 = load i32* %icode.i1025, align 4, !tbaa !20
  %idxprom.i1026 = zext i32 %148 to i64
  %operand.i1027 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom.i1026, i32 3
  %149 = load %struct.insn_operand_data** %operand.i1027, align 8, !tbaa !21
  %mode.i1028 = getelementptr inbounds %struct.insn_operand_data* %149, i64 0, i32 2
  %bf.load.i1029 = load i16* %mode.i1028, align 8
  %bf.cast.i1030 = zext i16 %bf.load.i1029 to i32
  %mode10.i1031 = getelementptr inbounds %struct.insn_operand_data* %149, i64 1, i32 2
  %bf.load11.i1032 = load i16* %mode10.i1031, align 8
  %bf.cast12.i1033 = zext i16 %bf.load11.i1032 to i32
  %comparison13.i = getelementptr inbounds %struct.builtin_description* %d.21054, i64 0, i32 4
  %150 = load i32* %comparison13.i, align 4, !tbaa !34
  %idxprom14.i = zext i16 %bf.load.i1029 to i64
  %arrayidx15.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom14.i
  %151 = load i32* %arrayidx15.i, align 4, !tbaa !5
  %.off.i1034 = add i32 %151, -7
  %switch.i1035 = icmp ult i32 %.off.i1034, 2
  br i1 %switch.i1035, label %if.then.i1036, label %if.end.i1038

if.then.i1036:                                    ; preds = %if.then679
  %call19.i = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call.i1023, i32 %bf.cast.i1030) #5
  br label %if.end.i1038

if.end.i1038:                                     ; preds = %if.then.i1036, %if.then679
  %op0.0.i1037 = phi %struct.rtx_def* [ %call19.i, %if.then.i1036 ], [ %call.i1023, %if.then679 ]
  %idxprom20.i = zext i16 %bf.load11.i1032 to i64
  %arrayidx21.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom20.i
  %152 = load i32* %arrayidx21.i, align 4, !tbaa !5
  %.off1.i = add i32 %152, -7
  %switch2.i = icmp ult i32 %.off1.i, 2
  br i1 %switch2.i, label %if.then27.i, label %if.end29.i

if.then27.i:                                      ; preds = %if.end.i1038
  %call28.i = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call3.i1024, i32 %bf.cast12.i1033) #5
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then27.i, %if.end.i1038
  %op1.0.i1039 = phi %struct.rtx_def* [ %call28.i, %if.then27.i ], [ %call3.i1024, %if.end.i1038 ]
  %flag.i1040 = getelementptr inbounds %struct.builtin_description* %d.21054, i64 0, i32 5
  %153 = load i32* %flag.i1040, align 4, !tbaa !35
  %tobool.i1041 = icmp eq i32 %153, 0
  %op1.0.op0.0.i = select i1 %tobool.i1041, %struct.rtx_def* %op1.0.i1039, %struct.rtx_def* %op0.0.i1037
  %op0.0.op1.0.i = select i1 %tobool.i1041, %struct.rtx_def* %op0.0.i1037, %struct.rtx_def* %op1.0.i1039
  %call32.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #5
  %154 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call33.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call32.i, %struct.rtx_def* %154) #5
  %call34.i = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 2, %struct.rtx_def* %call32.i, i32 0) #5
  %155 = load i32* %icode.i1025, align 4, !tbaa !20
  %idxprom36.i = zext i32 %155 to i64
  %operand38.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom36.i, i32 3
  %156 = load %struct.insn_operand_data** %operand38.i, align 8, !tbaa !21
  %predicate.i1042 = getelementptr inbounds %struct.insn_operand_data* %156, i64 0, i32 0
  %157 = load i32 (%struct.rtx_def*, i32)** %predicate.i1042, align 8, !tbaa !28
  %call40.i1043 = tail call i32 %157(%struct.rtx_def* %op0.0.op1.0.i, i32 %bf.cast.i1030) #5
  %tobool41.i = icmp eq i32 %call40.i1043, 0
  br i1 %tobool41.i, label %if.then42.i, label %if.end44.i

if.then42.i:                                      ; preds = %if.end29.i
  %call43.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast.i1030, %struct.rtx_def* %op0.0.op1.0.i) #5
  br label %if.end44.i

if.end44.i:                                       ; preds = %if.then42.i, %if.end29.i
  %op0.2.i1044 = phi %struct.rtx_def* [ %op0.0.op1.0.i, %if.end29.i ], [ %call43.i, %if.then42.i ]
  %158 = load i32* %icode.i1025, align 4, !tbaa !20
  %idxprom46.i = zext i32 %158 to i64
  %operand48.i = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom46.i, i32 3
  %159 = load %struct.insn_operand_data** %operand48.i, align 8, !tbaa !21
  %predicate50.i = getelementptr inbounds %struct.insn_operand_data* %159, i64 1, i32 0
  %160 = load i32 (%struct.rtx_def*, i32)** %predicate50.i, align 8, !tbaa !28
  %call51.i = tail call i32 %160(%struct.rtx_def* %op1.0.op0.0.i, i32 %bf.cast12.i1033) #5
  %tobool52.i = icmp eq i32 %call51.i, 0
  br i1 %tobool52.i, label %if.then53.i, label %if.end55.i

if.then53.i:                                      ; preds = %if.end44.i
  %call54.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast12.i1033, %struct.rtx_def* %op1.0.op0.0.i) #5
  br label %if.end55.i

if.end55.i:                                       ; preds = %if.then53.i, %if.end44.i
  %op1.2.i1045 = phi %struct.rtx_def* [ %op1.0.op0.0.i, %if.end44.i ], [ %call54.i, %if.then53.i ]
  %call56.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %150, i32 %bf.cast.i1030, %struct.rtx_def* %op0.2.i1044, %struct.rtx_def* %op1.2.i1045) #5
  %161 = load i32* %icode.i1025, align 4, !tbaa !20
  %idxprom58.i1046 = sext i32 %161 to i64
  %genfun.i1047 = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom58.i1046, i32 2
  %162 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun.i1047, align 8, !tbaa !30
  %call60.i = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %162(%struct.rtx_def* %op0.2.i1044, %struct.rtx_def* %op1.2.i1045, %struct.rtx_def* %call56.i) #5
  %tobool61.i = icmp eq %struct.rtx_def* %call60.i, null
  br i1 %tobool61.i, label %return, label %if.end63.i

if.end63.i:                                       ; preds = %if.end55.i
  %call64.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call60.i) #5
  %call65.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 64, i32 0, %struct.rtx_def* %call34.i) #5
  %call66.i1048 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #5
  %163 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call67.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %150, i32 2, %struct.rtx_def* %call66.i1048, %struct.rtx_def* %163) #5
  %call68.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call65.i, %struct.rtx_def* %call67.i) #5
  %call69.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call68.i) #5
  %arrayidx70.i = getelementptr inbounds %struct.rtx_def* %call34.i, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx70.i to %struct.rtx_def**
  %164 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  br label %return

for.inc682:                                       ; preds = %for.body676
  %inc683 = add i64 %i.21053, 1
  %incdec.ptr684 = getelementptr inbounds %struct.builtin_description* %d.21054, i64 1
  %cmp675 = icmp ult i64 %inc683, 12
  br i1 %cmp675, label %for.body676, label %return

return:                                           ; preds = %for.inc682, %if.end63.i, %if.end55.i, %if.end86.i, %if.end78.i, %if.end571, %if.end497, %if.end381, %if.end333, %if.end235, %if.end159, %if.end62, %if.then666, %if.end657, %sw.bb637, %sw.bb633, %sw.bb631, %sw.bb629, %sw.bb627, %sw.bb625, %sw.bb623, %sw.bb621, %sw.bb619, %sw.bb617, %sw.bb615, %sw.bb613, %sw.bb611, %sw.bb609, %sw.bb607, %sw.bb605, %sw.bb603, %sw.bb601, %sw.bb599, %sw.bb597, %sw.bb595, %sw.bb593, %sw.bb591, %sw.bb589, %sw.bb587, %sw.bb585, %sw.bb583, %sw.bb580, %if.end578, %if.then553, %if.end504, %if.then478, %assign_386_stack_local.exit1018, %assign_386_stack_local.exit, %sw.bb392, %sw.bb390, %if.end388, %if.end340, %sw.bb268, %sw.bb266, %sw.bb264, %sw.bb262, %sw.bb260, %sw.bb258, %sw.bb256, %sw.bb254, %sw.bb252, %sw.bb250, %sw.bb248, %sw.bb246, %sw.bb244, %if.end242, %if.end166, %if.then141, %if.end68, %if.then47, %sw.bb9, %sw.bb
  %retval.0 = phi %struct.rtx_def* [ %call659, %if.end657 ], [ %call668, %if.then666 ], [ %call638, %sw.bb637 ], [ %call634, %sw.bb633 ], [ %call632, %sw.bb631 ], [ %call630, %sw.bb629 ], [ %call628, %sw.bb627 ], [ %call626, %sw.bb625 ], [ %call624, %sw.bb623 ], [ %call622, %sw.bb621 ], [ %call620, %sw.bb619 ], [ %call618, %sw.bb617 ], [ %call616, %sw.bb615 ], [ %call614, %sw.bb613 ], [ %call612, %sw.bb611 ], [ %call610, %sw.bb609 ], [ %call608, %sw.bb607 ], [ %call606, %sw.bb605 ], [ %call604, %sw.bb603 ], [ %call602, %sw.bb601 ], [ %call600, %sw.bb599 ], [ %call598, %sw.bb597 ], [ %call596, %sw.bb595 ], [ %call594, %sw.bb593 ], [ %call592, %sw.bb591 ], [ %call590, %sw.bb589 ], [ %call588, %sw.bb587 ], [ %call586, %sw.bb585 ], [ %call584, %sw.bb583 ], [ null, %sw.bb580 ], [ %target.addr.4, %if.end578 ], [ %111, %if.then553 ], [ %target.addr.3, %if.end504 ], [ %call479, %if.then478 ], [ %call406, %assign_386_stack_local.exit1018 ], [ null, %assign_386_stack_local.exit ], [ null, %sw.bb392 ], [ null, %sw.bb390 ], [ null, %if.end388 ], [ %target.addr.2, %if.end340 ], [ null, %sw.bb268 ], [ %call267, %sw.bb266 ], [ null, %sw.bb264 ], [ null, %sw.bb262 ], [ %call261, %sw.bb260 ], [ %call259, %sw.bb258 ], [ %call257, %sw.bb256 ], [ %call255, %sw.bb254 ], [ %call253, %sw.bb252 ], [ %call251, %sw.bb250 ], [ %call249, %sw.bb248 ], [ %call247, %sw.bb246 ], [ %call245, %sw.bb244 ], [ null, %if.end242 ], [ %target.addr.1, %if.end166 ], [ %28, %if.then141 ], [ %target.addr.0, %if.end68 ], [ %call48, %if.then47 ], [ null, %sw.bb9 ], [ null, %sw.bb ], [ null, %if.end62 ], [ null, %if.end159 ], [ null, %if.end235 ], [ null, %if.end333 ], [ null, %if.end381 ], [ null, %if.end497 ], [ null, %if.end571 ], [ %target.addr.0.i, %if.end86.i ], [ null, %if.end78.i ], [ %164, %if.end63.i ], [ null, %if.end55.i ], [ null, %for.inc682 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @default_section_type_flags(%union.tree_node*, i8*, i32) #0

declare zeroext i1 @hook_void_bool_false() #0

; Function Attrs: nounwind uwtable
define void @override_options() #1 {
entry:
  %0 = load i8** @ix86_cpu_string, align 8, !tbaa !6
  %tobool = icmp eq i8* %0, null
  %1 = load i8** @ix86_arch_string, align 8
  %tobool1 = icmp ne i8* %1, null
  %or.cond = and i1 %tobool, %tobool1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* %1, i8** @ix86_cpu_string, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %2 = phi i8* [ %0, %entry ], [ %1, %if.then ]
  %tobool2 = icmp eq i8* %2, null
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([9 x i8]* @.str17, i64 0, i64 0), i8** @ix86_cpu_string, align 8, !tbaa !6
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then3
  %tobool5 = icmp eq i8* %1, null
  br i1 %tobool5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end4
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %3, 33554432
  %tobool7 = icmp ne i32 %and, 0
  %cond = select i1 %tobool7, i8* getelementptr inbounds ([9 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str5, i64 0, i64 0)
  store i8* %cond, i8** @ix86_arch_string, align 8, !tbaa !6
  br label %if.end8

if.end8:                                          ; preds = %if.end4, %if.then6
  %4 = load i8** @ix86_cmodel_string, align 8, !tbaa !6
  %cmp = icmp eq i8* %4, null
  br i1 %cmp, label %if.else45, label %if.then9

if.then9:                                         ; preds = %if.end8
  %call = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str23, i64 0, i64 0)) #5
  %tobool10 = icmp eq i32 %call, 0
  %5 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool14 = icmp ne i32 %5, 0
  br i1 %tobool10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then9
  %cond13 = select i1 %tobool14, i32 5, i32 1
  store i32 %cond13, i32* @ix86_cmodel, align 4, !tbaa !5
  br label %if.end52

if.else:                                          ; preds = %if.then9
  br i1 %tobool14, label %if.then15, label %if.else16

if.then15:                                        ; preds = %if.else
  tail call void (i8*, ...)* @sorry(i8* getelementptr inbounds ([40 x i8]* @.str24, i64 0, i64 0), i8* %4) #5
  br label %if.end52

if.else16:                                        ; preds = %if.else
  %call17 = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([3 x i8]* @.str25, i64 0, i64 0)) #5
  %tobool18 = icmp eq i32 %call17, 0
  br i1 %tobool18, label %if.then19, label %if.else20

if.then19:                                        ; preds = %if.else16
  store i32 0, i32* @ix86_cmodel, align 4, !tbaa !5
  br label %if.end52

if.else20:                                        ; preds = %if.else16
  %call21 = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str26, i64 0, i64 0)) #5
  %6 = icmp eq i32 %call21, 0
  br i1 %6, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.else20
  store i32 2, i32* @ix86_cmodel, align 4, !tbaa !5
  br label %if.end52

if.else26:                                        ; preds = %if.else20
  %call27 = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str27, i64 0, i64 0)) #5
  %7 = icmp eq i32 %call27, 0
  br i1 %7, label %if.then31, label %if.else32

if.then31:                                        ; preds = %if.else26
  store i32 3, i32* @ix86_cmodel, align 4, !tbaa !5
  br label %if.end52

if.else32:                                        ; preds = %if.else26
  %call33 = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str28, i64 0, i64 0)) #5
  %8 = icmp eq i32 %call33, 0
  br i1 %8, label %if.then37, label %if.else38

if.then37:                                        ; preds = %if.else32
  store i32 4, i32* @ix86_cmodel, align 4, !tbaa !5
  br label %if.end52

if.else38:                                        ; preds = %if.else32
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str29, i64 0, i64 0), i8* %4) #5
  br label %if.end52

if.else45:                                        ; preds = %if.end8
  store i32 0, i32* @ix86_cmodel, align 4, !tbaa !5
  %9 = load i32* @target_flags, align 4, !tbaa !1
  %and46 = and i32 %9, 33554432
  %tobool47 = icmp eq i32 %and46, 0
  br i1 %tobool47, label %if.end52, label %if.then48

if.then48:                                        ; preds = %if.else45
  %10 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool49 = icmp ne i32 %10, 0
  %cond50 = select i1 %tobool49, i32 5, i32 1
  store i32 %cond50, i32* @ix86_cmodel, align 4, !tbaa !5
  br label %if.end52

if.end52:                                         ; preds = %if.else45, %if.then48, %if.then11, %if.then19, %if.then31, %if.else38, %if.then37, %if.then25, %if.then15
  %11 = load i8** @ix86_asm_string, align 8, !tbaa !6
  %cmp53 = icmp eq i8* %11, null
  br i1 %cmp53, label %if.end65, label %if.then54

if.then54:                                        ; preds = %if.end52
  %call55 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([6 x i8]* @.str30, i64 0, i64 0)) #5
  %tobool56 = icmp eq i32 %call55, 0
  br i1 %tobool56, label %if.then57, label %if.else58

if.then57:                                        ; preds = %if.then54
  store i32 1, i32* @ix86_asm_dialect, align 4, !tbaa !5
  br label %if.end65

if.else58:                                        ; preds = %if.then54
  %call59 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([4 x i8]* @.str31, i64 0, i64 0)) #5
  %tobool60 = icmp eq i32 %call59, 0
  br i1 %tobool60, label %if.then61, label %if.else62

if.then61:                                        ; preds = %if.else58
  store i32 0, i32* @ix86_asm_dialect, align 4, !tbaa !5
  br label %if.end65

if.else62:                                        ; preds = %if.else58
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([33 x i8]* @.str32, i64 0, i64 0), i8* %11) #5
  br label %if.end65

if.end65:                                         ; preds = %if.end52, %if.then57, %if.else62, %if.then61
  %12 = load i32* @target_flags, align 4, !tbaa !1
  %and66 = and i32 %12, 33554432
  %and66.lobit = lshr exact i32 %and66, 25
  %13 = xor i32 %and66.lobit, 1
  %14 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp68 = icmp eq i32 %14, 0
  %conv69 = zext i1 %cmp68 to i32
  %cmp70 = icmp eq i32 %13, %conv69
  br i1 %cmp70, label %if.end76, label %if.then72

if.then72:                                        ; preds = %if.end65
  %15 = load i8** @ix86_cmodel_string, align 8, !tbaa !6
  %tobool74 = icmp ne i32 %and66, 0
  %cond75 = select i1 %tobool74, i8* getelementptr inbounds ([3 x i8]* @.str34, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str25, i64 0, i64 0)
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str33, i64 0, i64 0), i8* %15, i8* %cond75) #5
  %.pr = load i32* @ix86_cmodel, align 4, !tbaa !5
  br label %if.end76

if.end76:                                         ; preds = %if.end65, %if.then72
  %16 = phi i32 [ %14, %if.end65 ], [ %.pr, %if.then72 ]
  %cmp77 = icmp eq i32 %16, 4
  br i1 %cmp77, label %if.then79, label %for.cond.preheader

if.then79:                                        ; preds = %if.end76
  tail call void (i8*, ...)* @sorry(i8* getelementptr inbounds ([37 x i8]* @.str35, i64 0, i64 0)) #5
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end76, %if.then79
  %17 = load i8** @ix86_arch_string, align 8, !tbaa !6
  br label %for.body

for.cond:                                         ; preds = %for.body
  %18 = trunc i64 %indvars.iv.next497 to i32
  %cmp94 = icmp slt i32 %18, 18
  br i1 %cmp94, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %indvars.iv496 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next497, %for.cond ]
  %name = getelementptr inbounds [18 x %struct.pta]* @override_options.processor_alias_table, i64 0, i64 %indvars.iv496, i32 0
  %19 = load i8** %name, align 16, !tbaa !36
  %call96 = tail call i32 @strcmp(i8* %17, i8* %19) #5
  %tobool97 = icmp eq i32 %call96, 0
  %indvars.iv.next497 = add nuw nsw i64 %indvars.iv496, 1
  br i1 %tobool97, label %if.then98, label %for.cond

if.then98:                                        ; preds = %for.body
  %20 = trunc i64 %indvars.iv496 to i32
  %processor = getelementptr inbounds [18 x %struct.pta]* @override_options.processor_alias_table, i64 0, i64 %indvars.iv496, i32 1
  %21 = load i32* %processor, align 8, !tbaa !38
  store i32 %21, i32* @ix86_arch, align 4, !tbaa !1
  store i32 %21, i32* @ix86_cpu, align 4, !tbaa !5
  %22 = lshr i64 262032, %indvars.iv496
  %23 = and i64 %22, 1
  %tobool104 = icmp eq i64 %23, 0
  br i1 %tobool104, label %if.end109, label %land.lhs.true105

land.lhs.true105:                                 ; preds = %if.then98
  %24 = load i32* @target_flags, align 4, !tbaa !1
  %and106 = and i32 %24, 32768
  %tobool107 = icmp eq i32 %and106, 0
  br i1 %tobool107, label %if.then108, label %if.end109

if.then108:                                       ; preds = %land.lhs.true105
  %or = or i32 %24, 16384
  store i32 %or, i32* @target_flags, align 4, !tbaa !1
  br label %if.end109

if.end109:                                        ; preds = %land.lhs.true105, %if.then98, %if.then108
  %25 = add i64 %indvars.iv496, -11
  %tobool114 = icmp ult i64 %25, 7
  br i1 %tobool114, label %land.lhs.true115, label %if.end120

land.lhs.true115:                                 ; preds = %if.end109
  %26 = load i32* @target_flags, align 4, !tbaa !1
  %and116 = and i32 %26, 2097152
  %tobool117 = icmp eq i32 %and116, 0
  br i1 %tobool117, label %if.then118, label %if.end120

if.then118:                                       ; preds = %land.lhs.true115
  %or119 = or i32 %26, 1048576
  store i32 %or119, i32* @target_flags, align 4, !tbaa !1
  br label %if.end120

if.end120:                                        ; preds = %land.lhs.true115, %if.then118, %if.end109
  %27 = add i64 %indvars.iv496, -13
  %tobool125 = icmp ult i64 %27, 5
  br i1 %tobool125, label %land.lhs.true126, label %if.end131

land.lhs.true126:                                 ; preds = %if.end120
  %28 = load i32* @target_flags, align 4, !tbaa !1
  %and127 = and i32 %28, 8388608
  %tobool128 = icmp eq i32 %and127, 0
  br i1 %tobool128, label %if.then129, label %if.end131

if.then129:                                       ; preds = %land.lhs.true126
  %or130 = or i32 %28, 4194304
  store i32 %or130, i32* @target_flags, align 4, !tbaa !1
  br label %if.end131

if.end131:                                        ; preds = %land.lhs.true126, %if.then129, %if.end120
  %29 = lshr i64 230144, %indvars.iv496
  %30 = and i64 %29, 1
  %tobool136 = icmp eq i64 %30, 0
  br i1 %tobool136, label %if.end142, label %land.lhs.true137

land.lhs.true137:                                 ; preds = %if.end131
  %31 = load i32* @target_flags, align 4, !tbaa !1
  %and138 = and i32 %31, 131072
  %tobool139 = icmp eq i32 %and138, 0
  br i1 %tobool139, label %if.then140, label %if.end142

if.then140:                                       ; preds = %land.lhs.true137
  %or141 = or i32 %31, 65536
  store i32 %or141, i32* @target_flags, align 4, !tbaa !1
  br label %if.end142

if.end142:                                        ; preds = %land.lhs.true137, %if.end131, %if.then140
  %tobool147 = icmp eq i32 %20, 9
  br i1 %tobool147, label %land.lhs.true148, label %if.end153

land.lhs.true148:                                 ; preds = %if.end142
  %32 = load i32* @target_flags, align 4, !tbaa !1
  %and149 = and i32 %32, 524288
  %tobool150 = icmp eq i32 %and149, 0
  br i1 %tobool150, label %if.then151, label %if.end153

if.then151:                                       ; preds = %land.lhs.true148
  %or152 = or i32 %32, 262144
  store i32 %or152, i32* @target_flags, align 4, !tbaa !1
  br label %if.end153

if.end153:                                        ; preds = %land.lhs.true148, %if.then151, %if.end142
  %33 = lshr i64 254720, %indvars.iv496
  %34 = and i64 %33, 1
  %tobool158 = icmp eq i64 %34, 0
  br i1 %tobool158, label %for.end, label %if.then159

if.then159:                                       ; preds = %if.end153
  store i32 1, i32* @x86_prefetch_sse, align 4, !tbaa !1
  br label %for.end

for.end:                                          ; preds = %for.cond, %if.end153, %if.then159
  %i.0487 = phi i32 [ %20, %if.end153 ], [ %20, %if.then159 ], [ %18, %for.cond ]
  %cmp162 = icmp eq i32 %i.0487, 18
  br i1 %cmp162, label %if.then164, label %for.cond166.preheader

if.then164:                                       ; preds = %for.end
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([34 x i8]* @.str37, i64 0, i64 0), i8* %17) #5
  br label %for.cond166.preheader

for.cond166.preheader:                            ; preds = %if.then164, %for.end
  %35 = load i8** @ix86_cpu_string, align 8, !tbaa !6
  br label %for.body169

for.cond166:                                      ; preds = %for.body169
  %36 = trunc i64 %indvars.iv.next to i32
  %cmp167 = icmp slt i32 %36, 18
  br i1 %cmp167, label %for.body169, label %for.end182

for.body169:                                      ; preds = %for.cond166.preheader, %for.cond166
  %indvars.iv = phi i64 [ 0, %for.cond166.preheader ], [ %indvars.iv.next, %for.cond166 ]
  %name172 = getelementptr inbounds [18 x %struct.pta]* @override_options.processor_alias_table, i64 0, i64 %indvars.iv, i32 0
  %37 = load i8** %name172, align 16, !tbaa !36
  %call173 = tail call i32 @strcmp(i8* %35, i8* %37) #5
  %tobool174 = icmp eq i32 %call173, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool174, label %if.then175, label %for.cond166

if.then175:                                       ; preds = %for.body169
  %38 = trunc i64 %indvars.iv to i32
  %processor178 = getelementptr inbounds [18 x %struct.pta]* @override_options.processor_alias_table, i64 0, i64 %indvars.iv, i32 1
  %39 = load i32* %processor178, align 8, !tbaa !38
  store i32 %39, i32* @ix86_cpu, align 4, !tbaa !5
  br label %for.end182

for.end182:                                       ; preds = %for.cond166, %if.then175
  %i.1485 = phi i32 [ %38, %if.then175 ], [ %36, %for.cond166 ]
  %idxprom183 = sext i32 %i.1485 to i64
  %40 = lshr i64 254720, %idxprom183
  %41 = and i64 %40, 1
  %tobool187 = icmp eq i64 %41, 0
  br i1 %tobool187, label %if.end189, label %if.then188

if.then188:                                       ; preds = %for.end182
  store i32 1, i32* @x86_prefetch_sse, align 4, !tbaa !1
  br label %if.end189

if.end189:                                        ; preds = %for.end182, %if.then188
  %cmp190 = icmp eq i32 %i.1485, 18
  br i1 %cmp190, label %if.then192, label %if.end193

if.then192:                                       ; preds = %if.end189
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([33 x i8]* @.str38, i64 0, i64 0), i8* %35) #5
  br label %if.end193

if.end193:                                        ; preds = %if.then192, %if.end189
  %42 = load i32* @optimize_size, align 4, !tbaa !1
  %tobool194 = icmp eq i32 %42, 0
  %43 = load i32* @ix86_cpu, align 4, !tbaa !5
  br i1 %tobool194, label %if.else196, label %if.end199

if.else196:                                       ; preds = %if.end193
  %idxprom197 = zext i32 %43 to i64
  %cost = getelementptr inbounds [7 x %struct.ptt]* @override_options.processor_target_table, i64 0, i64 %idxprom197, i32 0
  %44 = load %struct.processor_costs** %cost, align 8, !tbaa !39
  br label %if.end199

if.end199:                                        ; preds = %if.end193, %if.else196
  %storemerge = phi %struct.processor_costs* [ %44, %if.else196 ], [ @size_cost, %if.end193 ]
  store %struct.processor_costs* %storemerge, %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  %idxprom200 = zext i32 %43 to i64
  %target_enable = getelementptr inbounds [7 x %struct.ptt]* @override_options.processor_target_table, i64 0, i64 %idxprom200, i32 1
  %45 = load i32* %target_enable, align 8, !tbaa !41
  %46 = load i32* @target_flags, align 4, !tbaa !1
  %or202 = or i32 %46, %45
  %target_disable = getelementptr inbounds [7 x %struct.ptt]* @override_options.processor_target_table, i64 0, i64 %idxprom200, i32 2
  %47 = load i32* %target_disable, align 4, !tbaa !42
  %neg = xor i32 %47, -1
  %and205 = and i32 %or202, %neg
  store i32 %and205, i32* @target_flags, align 4, !tbaa !1
  store void (%struct.function*)* @ix86_init_machine_status, void (%struct.function*)** @init_machine_status, align 8, !tbaa !6
  store void (%struct.function*)* @ix86_mark_machine_status, void (%struct.function*)** @mark_machine_status, align 8, !tbaa !6
  store void (%struct.function*)* @ix86_free_machine_status, void (%struct.function*)** @free_machine_status, align 8, !tbaa !6
  %48 = load i8** @ix86_regparm_string, align 8, !tbaa !6
  %tobool206 = icmp eq i8* %48, null
  br i1 %tobool206, label %if.else222, label %if.then207

if.then207:                                       ; preds = %if.end199
  %call208 = tail call i32 @atoi(i8* %48) #5
  %cmp209 = icmp slt i32 %call208, 0
  %and217.pre = and i32 %and205, 33554432
  br i1 %cmp209, label %if.then216, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then207
  %tobool212 = icmp ne i32 %and217.pre, 0
  %cond213 = select i1 %tobool212, i32 6, i32 3
  %cmp214 = icmp sgt i32 %call208, %cond213
  br i1 %cmp214, label %if.then216, label %if.else220

if.then216:                                       ; preds = %if.then207, %lor.lhs.false
  %tobool218 = icmp ne i32 %and217.pre, 0
  %cond219 = select i1 %tobool218, i32 6, i32 3
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str39, i64 0, i64 0), i32 %call208, i32 %cond219) #5
  br label %if.end230

if.else220:                                       ; preds = %lor.lhs.false
  store i32 %call208, i32* @ix86_regparm, align 4, !tbaa !1
  br label %if.end230

if.else222:                                       ; preds = %if.end199
  %and223 = and i32 %and205, 33554432
  %tobool224 = icmp eq i32 %and223, 0
  br i1 %tobool224, label %if.end230, label %if.then225

if.then225:                                       ; preds = %if.else222
  store i32 6, i32* @ix86_regparm, align 4, !tbaa !1
  br label %if.end230

if.end230:                                        ; preds = %if.else222, %if.then225, %if.then216, %if.else220
  %49 = load i8** @ix86_align_loops_string, align 8, !tbaa !6
  %tobool231 = icmp eq i8* %49, null
  br i1 %tobool231, label %if.end246, label %if.then232

if.then232:                                       ; preds = %if.end230
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([45 x i8]* @.str40, i64 0, i64 0)) #5
  %50 = load i32* @align_loops, align 4, !tbaa !1
  %cmp233 = icmp eq i32 %50, 0
  br i1 %cmp233, label %if.then235, label %if.end246

if.then235:                                       ; preds = %if.then232
  %51 = load i8** @ix86_align_loops_string, align 8, !tbaa !6
  %call236 = tail call i32 @atoi(i8* %51) #5
  %52 = icmp ugt i32 %call236, 16
  br i1 %52, label %if.then242, label %if.else243

if.then242:                                       ; preds = %if.then235
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str41, i64 0, i64 0), i32 %call236, i32 16) #5
  br label %if.end246

if.else243:                                       ; preds = %if.then235
  %shl = shl i32 1, %call236
  store i32 %shl, i32* @align_loops, align 4, !tbaa !1
  br label %if.end246

if.end246:                                        ; preds = %if.end230, %if.then232, %if.else243, %if.then242
  %53 = load i8** @ix86_align_jumps_string, align 8, !tbaa !6
  %tobool247 = icmp eq i8* %53, null
  br i1 %tobool247, label %if.end263, label %if.then248

if.then248:                                       ; preds = %if.end246
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([45 x i8]* @.str42, i64 0, i64 0)) #5
  %54 = load i32* @align_jumps, align 4, !tbaa !1
  %cmp249 = icmp eq i32 %54, 0
  br i1 %cmp249, label %if.then251, label %if.end263

if.then251:                                       ; preds = %if.then248
  %55 = load i8** @ix86_align_jumps_string, align 8, !tbaa !6
  %call252 = tail call i32 @atoi(i8* %55) #5
  %56 = icmp ugt i32 %call252, 16
  br i1 %56, label %if.then258, label %if.else259

if.then258:                                       ; preds = %if.then251
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str41, i64 0, i64 0), i32 %call252, i32 16) #5
  br label %if.end263

if.else259:                                       ; preds = %if.then251
  %shl260 = shl i32 1, %call252
  store i32 %shl260, i32* @align_jumps, align 4, !tbaa !1
  br label %if.end263

if.end263:                                        ; preds = %if.end246, %if.then248, %if.else259, %if.then258
  %57 = load i8** @ix86_align_funcs_string, align 8, !tbaa !6
  %tobool264 = icmp eq i8* %57, null
  br i1 %tobool264, label %if.end280, label %if.then265

if.then265:                                       ; preds = %if.end263
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([53 x i8]* @.str43, i64 0, i64 0)) #5
  %58 = load i32* @align_functions, align 4, !tbaa !1
  %cmp266 = icmp eq i32 %58, 0
  br i1 %cmp266, label %if.then268, label %if.end280

if.then268:                                       ; preds = %if.then265
  %59 = load i8** @ix86_align_funcs_string, align 8, !tbaa !6
  %call269 = tail call i32 @atoi(i8* %59) #5
  %60 = icmp ugt i32 %call269, 16
  br i1 %60, label %if.then275, label %if.else276

if.then275:                                       ; preds = %if.then268
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str41, i64 0, i64 0), i32 %call269, i32 16) #5
  br label %if.end280

if.else276:                                       ; preds = %if.then268
  %shl277 = shl i32 1, %call269
  store i32 %shl277, i32* @align_functions, align 4, !tbaa !1
  br label %if.end280

if.end280:                                        ; preds = %if.end263, %if.then265, %if.else276, %if.then275
  %61 = load i32* @align_loops, align 4, !tbaa !1
  %cmp281 = icmp eq i32 %61, 0
  br i1 %cmp281, label %if.then283, label %if.end288

if.then283:                                       ; preds = %if.end280
  %62 = load i32* @ix86_cpu, align 4, !tbaa !5
  %idxprom284 = zext i32 %62 to i64
  %align_loop = getelementptr inbounds [7 x %struct.ptt]* @override_options.processor_target_table, i64 0, i64 %idxprom284, i32 3
  %63 = load i32* %align_loop, align 8, !tbaa !43
  store i32 %63, i32* @align_loops, align 4, !tbaa !1
  %align_loop_max_skip = getelementptr inbounds [7 x %struct.ptt]* @override_options.processor_target_table, i64 0, i64 %idxprom284, i32 4
  %64 = load i32* %align_loop_max_skip, align 4, !tbaa !44
  store i32 %64, i32* @align_loops_max_skip, align 4, !tbaa !1
  br label %if.end288

if.end288:                                        ; preds = %if.then283, %if.end280
  %65 = load i32* @align_jumps, align 4, !tbaa !1
  %cmp289 = icmp eq i32 %65, 0
  br i1 %cmp289, label %if.then291, label %if.end296

if.then291:                                       ; preds = %if.end288
  %66 = load i32* @ix86_cpu, align 4, !tbaa !5
  %idxprom292 = zext i32 %66 to i64
  %align_jump = getelementptr inbounds [7 x %struct.ptt]* @override_options.processor_target_table, i64 0, i64 %idxprom292, i32 5
  %67 = load i32* %align_jump, align 8, !tbaa !45
  store i32 %67, i32* @align_jumps, align 4, !tbaa !1
  %align_jump_max_skip = getelementptr inbounds [7 x %struct.ptt]* @override_options.processor_target_table, i64 0, i64 %idxprom292, i32 6
  %68 = load i32* %align_jump_max_skip, align 4, !tbaa !46
  store i32 %68, i32* @align_jumps_max_skip, align 4, !tbaa !1
  br label %if.end296

if.end296:                                        ; preds = %if.then291, %if.end288
  %69 = load i32* @align_functions, align 4, !tbaa !1
  %cmp297 = icmp eq i32 %69, 0
  br i1 %cmp297, label %if.then299, label %if.end302

if.then299:                                       ; preds = %if.end296
  %70 = load i32* @ix86_cpu, align 4, !tbaa !5
  %idxprom300 = zext i32 %70 to i64
  %align_func = getelementptr inbounds [7 x %struct.ptt]* @override_options.processor_target_table, i64 0, i64 %idxprom300, i32 7
  %71 = load i32* %align_func, align 8, !tbaa !47
  store i32 %71, i32* @align_functions, align 4, !tbaa !1
  br label %if.end302

if.end302:                                        ; preds = %if.then299, %if.end296
  %72 = load i32* @optimize_size, align 4, !tbaa !1
  %tobool303 = icmp eq i32 %72, 0
  br i1 %tobool303, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end302
  %73 = load i32* @target_flags, align 4, !tbaa !1
  %and304 = and i32 %73, 33554432
  %tobool305 = icmp ne i32 %and304, 0
  %cond306 = select i1 %tobool305, i32 128, i32 32
  br label %cond.end

cond.end:                                         ; preds = %if.end302, %cond.true
  %cond307 = phi i32 [ %cond306, %cond.true ], [ 128, %if.end302 ]
  store i32 %cond307, i32* @ix86_preferred_stack_boundary, align 4, !tbaa !1
  %74 = load i8** @ix86_preferred_stack_boundary_string, align 8, !tbaa !6
  %tobool308 = icmp eq i8* %74, null
  br i1 %tobool308, label %if.end326, label %if.then309

if.then309:                                       ; preds = %cond.end
  %call310 = tail call i32 @atoi(i8* %74) #5
  %75 = load i32* @target_flags, align 4, !tbaa !1
  %and311 = lshr i32 %75, 24
  %76 = and i32 %and311, 2
  %77 = add i32 %76, 2
  %cmp314 = icmp slt i32 %call310, %77
  %cmp317 = icmp sgt i32 %call310, 12
  %or.cond446 = or i1 %cmp314, %cmp317
  br i1 %or.cond446, label %if.then319, label %if.else323

if.then319:                                       ; preds = %if.then309
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([55 x i8]* @.str44, i64 0, i64 0), i32 %call310, i32 %77) #5
  br label %if.end326

if.else323:                                       ; preds = %if.then309
  %mul = shl i32 8, %call310
  store i32 %mul, i32* @ix86_preferred_stack_boundary, align 4, !tbaa !1
  br label %if.end326

if.end326:                                        ; preds = %cond.end, %if.then319, %if.else323
  %78 = load i32* @ix86_cpu, align 4, !tbaa !5
  %idxprom327 = zext i32 %78 to i64
  %branch_cost = getelementptr inbounds [7 x %struct.ptt]* @override_options.processor_target_table, i64 0, i64 %idxprom327, i32 8
  %79 = load i32* %branch_cost, align 4, !tbaa !48
  store i32 %79, i32* @ix86_branch_cost, align 4, !tbaa !1
  %80 = load i8** @ix86_branch_cost_string, align 8, !tbaa !6
  %tobool329 = icmp eq i8* %80, null
  br i1 %tobool329, label %if.end340, label %if.then330

if.then330:                                       ; preds = %if.end326
  %call331 = tail call i32 @atoi(i8* %80) #5
  %81 = icmp ugt i32 %call331, 5
  br i1 %81, label %if.then337, label %if.else338

if.then337:                                       ; preds = %if.then330
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str45, i64 0, i64 0), i32 %call331) #5
  br label %if.end340

if.else338:                                       ; preds = %if.then330
  store i32 %call331, i32* @ix86_branch_cost, align 4, !tbaa !1
  br label %if.end340

if.end340:                                        ; preds = %if.end326, %if.then337, %if.else338
  %82 = load i32* @target_flags, align 4, !tbaa !1
  %and341 = and i32 %82, 128
  %tobool342 = icmp eq i32 %and341, 0
  br i1 %tobool342, label %if.end344, label %if.then343

if.then343:                                       ; preds = %if.end340
  store i32 1, i32* @flag_omit_frame_pointer, align 4, !tbaa !1
  br label %if.end344

if.end344:                                        ; preds = %if.end340, %if.then343
  %83 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !1
  %tobool345 = icmp eq i32 %83, 0
  br i1 %tobool345, label %if.end348, label %if.then346

if.then346:                                       ; preds = %if.end344
  %and347 = and i32 %82, -17
  store i32 %and347, i32* @target_flags, align 4, !tbaa !1
  br label %if.end348

if.end348:                                        ; preds = %if.end344, %if.then346
  %84 = phi i32 [ %82, %if.end344 ], [ %and347, %if.then346 ]
  %85 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl349 = shl i32 1, %85
  %and350 = and i32 %shl349, 108
  %tobool351 = icmp eq i32 %and350, 0
  br i1 %tobool351, label %if.end354, label %if.then352

if.then352:                                       ; preds = %if.end348
  %and353 = and i32 %84, -65
  store i32 %and353, i32* @target_flags, align 4, !tbaa !1
  br label %if.end354

if.end354:                                        ; preds = %if.end348, %if.then352
  %86 = phi i32 [ %84, %if.end348 ], [ %and353, %if.then352 ]
  %and355 = and i32 %86, 33554432
  %tobool356 = icmp eq i32 %and355, 0
  br i1 %tobool356, label %if.end368, label %if.then357

if.then357:                                       ; preds = %if.end354
  %and358 = and i32 %86, 4
  %tobool359 = icmp eq i32 %and358, 0
  br i1 %tobool359, label %if.end361, label %if.then360

if.then360:                                       ; preds = %if.then357
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str46, i64 0, i64 0)) #5
  %.pre498 = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end361

if.end361:                                        ; preds = %if.then357, %if.then360
  %87 = phi i32 [ %86, %if.then357 ], [ %.pre498, %if.then360 ]
  %and362 = and i32 %87, 2
  %tobool363 = icmp eq i32 %and362, 0
  br i1 %tobool363, label %if.end365, label %if.then364

if.then364:                                       ; preds = %if.end361
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([57 x i8]* @.str47, i64 0, i64 0)) #5
  %.pre499 = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end365

if.end365:                                        ; preds = %if.end361, %if.then364
  %88 = phi i32 [ %87, %if.end361 ], [ %.pre499, %if.then364 ]
  %or366 = or i32 %88, 17121280
  store i32 %or366, i32* @target_flags, align 4, !tbaa !1
  br label %if.end368

if.end368:                                        ; preds = %if.end354, %if.end365
  %89 = phi i32 [ %or366, %if.end365 ], [ %86, %if.end354 ]
  %storemerge483 = phi i32 [ 2, %if.end365 ], [ 1, %if.end354 ]
  store i32 %storemerge483, i32* @ix86_fpmath, align 4, !tbaa !5
  %90 = load i8** @ix86_fpmath_string, align 8, !tbaa !6
  %cmp369 = icmp eq i8* %90, null
  br i1 %cmp369, label %if.end407, label %if.then371

if.then371:                                       ; preds = %if.end368
  %call372 = tail call i32 @strcmp(i8* %90, i8* getelementptr inbounds ([4 x i8]* @.str48, i64 0, i64 0)) #5
  %tobool373 = icmp eq i32 %call372, 0
  br i1 %tobool373, label %if.then374, label %if.else375

if.then374:                                       ; preds = %if.then371
  store i32 1, i32* @ix86_fpmath, align 4, !tbaa !5
  br label %if.end407

if.else375:                                       ; preds = %if.then371
  %call376 = tail call i32 @strcmp(i8* %90, i8* getelementptr inbounds ([4 x i8]* @.str49, i64 0, i64 0)) #5
  %tobool377 = icmp eq i32 %call376, 0
  br i1 %tobool377, label %if.then378, label %if.else385

if.then378:                                       ; preds = %if.else375
  %and379 = and i32 %89, 327680
  %cmp380 = icmp eq i32 %and379, 0
  br i1 %cmp380, label %if.then382, label %if.else383

if.then382:                                       ; preds = %if.then378
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([52 x i8]* @.str50, i64 0, i64 0)) #5
  store i32 1, i32* @ix86_fpmath, align 4, !tbaa !5
  br label %if.end407

if.else383:                                       ; preds = %if.then378
  store i32 2, i32* @ix86_fpmath, align 4, !tbaa !5
  br label %if.end407

if.else385:                                       ; preds = %if.else375
  %call386 = tail call i32 @strcmp(i8* %90, i8* getelementptr inbounds ([8 x i8]* @.str51, i64 0, i64 0)) #5
  %tobool387 = icmp eq i32 %call386, 0
  br i1 %tobool387, label %if.then391, label %lor.lhs.false388

lor.lhs.false388:                                 ; preds = %if.else385
  %call389 = tail call i32 @strcmp(i8* %90, i8* getelementptr inbounds ([8 x i8]* @.str52, i64 0, i64 0)) #5
  %tobool390 = icmp eq i32 %call389, 0
  br i1 %tobool390, label %if.then391, label %if.else403

if.then391:                                       ; preds = %lor.lhs.false388, %if.else385
  %and392 = and i32 %89, 327680
  %cmp393 = icmp eq i32 %and392, 0
  br i1 %cmp393, label %if.then395, label %if.else396

if.then395:                                       ; preds = %if.then391
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([52 x i8]* @.str50, i64 0, i64 0)) #5
  store i32 1, i32* @ix86_fpmath, align 4, !tbaa !5
  br label %if.end407

if.else396:                                       ; preds = %if.then391
  %and397 = and i32 %89, 1
  %tobool398 = icmp eq i32 %and397, 0
  br i1 %tobool398, label %if.then399, label %if.else400

if.then399:                                       ; preds = %if.else396
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([52 x i8]* @.str53, i64 0, i64 0)) #5
  store i32 2, i32* @ix86_fpmath, align 4, !tbaa !5
  br label %if.end407

if.else400:                                       ; preds = %if.else396
  store i32 3, i32* @ix86_fpmath, align 4, !tbaa !5
  br label %if.end407

if.else403:                                       ; preds = %lor.lhs.false388
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str54, i64 0, i64 0), i8* %90) #5
  br label %if.end407

if.end407:                                        ; preds = %if.end368, %if.then374, %if.else403, %if.then399, %if.else400, %if.then395, %if.then382, %if.else383
  %91 = load i32* @target_flags, align 4, !tbaa !1
  %and408 = and i32 %91, 327680
  %cmp409 = icmp eq i32 %and408, 0
  br i1 %cmp409, label %if.end413, label %if.then411

if.then411:                                       ; preds = %if.end407
  %or412 = or i32 %91, 16384
  store i32 %or412, i32* @target_flags, align 4, !tbaa !1
  store i32 1, i32* @x86_prefetch_sse, align 4, !tbaa !1
  br label %if.end413

if.end413:                                        ; preds = %if.end407, %if.then411
  %92 = phi i32 [ %91, %if.end407 ], [ %or412, %if.then411 ]
  %and414 = and i32 %92, 1048576
  %cmp415 = icmp eq i32 %and414, 0
  br i1 %cmp415, label %if.end425, label %if.then417

if.then417:                                       ; preds = %if.end413
  %or418 = or i32 %92, 16384
  store i32 %or418, i32* @target_flags, align 4, !tbaa !1
  %93 = load i32* @ix86_arch, align 4, !tbaa !1
  %tobool421 = icmp eq i32 %93, 5
  br i1 %tobool421, label %if.then422, label %if.end425

if.then422:                                       ; preds = %if.then417
  %or423 = or i32 %92, 4210688
  store i32 %or423, i32* @target_flags, align 4, !tbaa !1
  br label %if.end425

if.end425:                                        ; preds = %if.end413, %if.then417, %if.then422
  %94 = phi i32 [ %92, %if.end413 ], [ %or418, %if.then417 ], [ %or423, %if.then422 ]
  %95 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl426 = shl i32 1, %95
  %and427 = and i32 %shl426, 104
  %tobool428 = icmp eq i32 %and427, 0
  br i1 %tobool428, label %do.body, label %land.lhs.true429

land.lhs.true429:                                 ; preds = %if.end425
  %and430 = and i32 %94, 8192
  %96 = load i32* @optimize_size, align 4
  %97 = or i32 %and430, %96
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %if.then434, label %do.body

if.then434:                                       ; preds = %land.lhs.true429
  %or435 = or i32 %94, 4096
  store i32 %or435, i32* @target_flags, align 4, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %land.lhs.true429, %if.end425, %if.then434
  %call437 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([16 x i8]* @internal_label_prefix, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str55, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str56, i64 0, i64 0), i32 0) #5
  %call438 = tail call i8* @strchr(i8* getelementptr inbounds ([16 x i8]* @internal_label_prefix, i64 0, i64 0), i32 88) #5
  %sub.ptr.lhs.cast = ptrtoint i8* %call438 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([16 x i8]* @internal_label_prefix to i64)
  %conv439 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv439, i32* @internal_label_prefix_len, align 4, !tbaa !1
  store i8 0, i8* %call438, align 1, !tbaa !5
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #3

declare void @sorry(i8*, ...) #0

declare void @error(i8*, ...) #0

; Function Attrs: nounwind uwtable
define internal void @ix86_init_machine_status(%struct.function* nocapture %p) #1 {
entry:
  %call = tail call noalias i8* @xcalloc(i64 1, i64 1424) #5
  %0 = bitcast i8* %call to %struct.machine_function*
  %machine = getelementptr inbounds %struct.function* %p, i64 0, i32 51
  store %struct.machine_function* %0, %struct.machine_function** %machine, align 8, !tbaa !31
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ix86_mark_machine_status(%struct.function* nocapture readonly %p) #1 {
entry:
  %machine1 = getelementptr inbounds %struct.function* %p, i64 0, i32 51
  %0 = load %struct.machine_function** %machine1, align 8, !tbaa !31
  %tobool = icmp eq %struct.machine_function* %0, null
  br i1 %tobool, label %for.end12, label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %entry, %for.inc.2
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.2 ], [ 0, %entry ]
  %arrayidx6 = getelementptr inbounds %struct.machine_function* %0, i64 0, i32 0, i64 %indvars.iv, i64 0
  %1 = load %struct.rtx_def** %arrayidx6, align 8, !tbaa !6
  %cmp7 = icmp eq %struct.rtx_def* %1, null
  br i1 %cmp7, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.cond2.preheader
  %2 = bitcast %struct.rtx_def* %1 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %2) #5
  %tobool8 = icmp eq i32 %call, 0
  br i1 %tobool8, label %if.then9, label %for.inc

if.then9:                                         ; preds = %land.lhs.true
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %1) #5
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.cond2.preheader, %if.then9
  %arrayidx6.1 = getelementptr inbounds %struct.machine_function* %0, i64 0, i32 0, i64 %indvars.iv, i64 1
  %3 = load %struct.rtx_def** %arrayidx6.1, align 8, !tbaa !6
  %cmp7.1 = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp7.1, label %for.inc.1, label %land.lhs.true.1

for.end12:                                        ; preds = %for.inc.2, %entry
  ret void

land.lhs.true.1:                                  ; preds = %for.inc
  %4 = bitcast %struct.rtx_def* %3 to i8*
  %call.1 = tail call i32 @ggc_set_mark(i8* %4) #5
  %tobool8.1 = icmp eq i32 %call.1, 0
  br i1 %tobool8.1, label %if.then9.1, label %for.inc.1

if.then9.1:                                       ; preds = %land.lhs.true.1
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %3) #5
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then9.1, %land.lhs.true.1, %for.inc
  %arrayidx6.2 = getelementptr inbounds %struct.machine_function* %0, i64 0, i32 0, i64 %indvars.iv, i64 2
  %5 = load %struct.rtx_def** %arrayidx6.2, align 8, !tbaa !6
  %cmp7.2 = icmp eq %struct.rtx_def* %5, null
  br i1 %cmp7.2, label %for.inc.2, label %land.lhs.true.2

land.lhs.true.2:                                  ; preds = %for.inc.1
  %6 = bitcast %struct.rtx_def* %5 to i8*
  %call.2 = tail call i32 @ggc_set_mark(i8* %6) #5
  %tobool8.2 = icmp eq i32 %call.2, 0
  br i1 %tobool8.2, label %if.then9.2, label %for.inc.2

if.then9.2:                                       ; preds = %land.lhs.true.2
  tail call void @ggc_mark_rtx_children(%struct.rtx_def* %5) #5
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then9.2, %land.lhs.true.2, %for.inc.1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 59
  br i1 %exitcond, label %for.end12, label %for.cond2.preheader
}

; Function Attrs: nounwind uwtable
define internal void @ix86_free_machine_status(%struct.function* nocapture %p) #1 {
entry:
  %machine = getelementptr inbounds %struct.function* %p, i64 0, i32 51
  %0 = load %struct.machine_function** %machine, align 8, !tbaa !31
  %1 = bitcast %struct.machine_function* %0 to i8*
  tail call void @free(i8* %1)
  store %struct.machine_function* null, %struct.machine_function** %machine, align 8, !tbaa !31
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8* nocapture) #3

declare void @warning(i8*, ...) #0

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #4

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind uwtable
define void @optimization_options(i32 %level, i32 %size) #1 {
entry:
  %cmp = icmp sgt i32 %level, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* @flag_schedule_insns, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp ne i32 %and, 0
  %1 = load i32* @optimize, align 4
  %cmp1 = icmp sgt i32 %1, 0
  %or.cond = and i1 %tobool, %cmp1
  br i1 %or.cond, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 1, i32* @flag_omit_frame_pointer, align 4, !tbaa !1
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %tobool5 = icmp eq i32 %and, 0
  br i1 %tobool5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* @flag_pcc_struct_return, align 4, !tbaa !1
  store i32 1, i32* @flag_asynchronous_unwind_tables, align 4, !tbaa !1
  br label %if.end7

if.end7:                                          ; preds = %if.end3, %if.then6
  ret void
}

; Function Attrs: nounwind uwtable
define internal noalias %union.tree_node* @ix86_handle_cdecl_attribute(%union.tree_node** nocapture readonly %node, %union.tree_node* nocapture readonly %name, %union.tree_node* nocapture readnone %args, i32 %flags, i8* nocapture %no_add_attrs) #1 {
entry:
  %0 = load %union.tree_node** %node, align 8, !tbaa !6
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.then [
    i32 23, label %if.end
    i32 16, label %if.end
    i32 37, label %if.end
    i32 33, label %if.end
  ]

if.then:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %1 = getelementptr inbounds i8** %id, i64 1
  %2 = load i8** %1, align 8, !tbaa !49
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([41 x i8]* @.str488, i64 0, i64 0), i8* %2) #5
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !52
  br label %if.end

if.end:                                           ; preds = %entry, %entry, %entry, %entry, %if.then
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %3, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end22, label %if.then18

if.then18:                                        ; preds = %if.end
  %id20 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds i8** %id20, i64 1
  %5 = load i8** %4, align 8, !tbaa !49
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([23 x i8]* @.str491, i64 0, i64 0), i8* %5) #5
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !52
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.then18
  ret %union.tree_node* null
}

; Function Attrs: nounwind uwtable
define internal noalias %union.tree_node* @ix86_handle_regparm_attribute(%union.tree_node** nocapture readonly %node, %union.tree_node* nocapture readonly %name, %union.tree_node* nocapture readonly %args, i32 %flags, i8* nocapture %no_add_attrs) #1 {
entry:
  %0 = load %union.tree_node** %node, align 8, !tbaa !6
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.then [
    i32 23, label %if.else
    i32 16, label %if.else
    i32 37, label %if.else
    i32 33, label %if.else
  ]

if.then:                                          ; preds = %entry
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %1 = getelementptr inbounds i8** %id, i64 1
  %2 = load i8** %1, align 8, !tbaa !49
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([41 x i8]* @.str488, i64 0, i64 0), i8* %2) #5
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !52
  br label %if.end38

if.else:                                          ; preds = %entry, %entry, %entry, %entry
  %value = getelementptr inbounds %union.tree_node* %args, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !25
  %code19 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load20 = load i32* %code19, align 8
  %bf.clear21 = and i32 %bf.load20, 255
  %cmp22 = icmp eq i32 %bf.clear21, 25
  br i1 %cmp22, label %if.else27, label %if.then23

if.then23:                                        ; preds = %if.else
  %id25 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds i8** %id25, i64 1
  %6 = load i8** %5, align 8, !tbaa !49
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([53 x i8]* @.str489, i64 0, i64 0), i8* %6) #5
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !52
  br label %if.end38

if.else27:                                        ; preds = %if.else
  %7 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %7, 33554432
  %tobool = icmp ne i32 %and, 0
  %conv = select i1 %tobool, i64 6, i64 3
  %call = tail call i32 @compare_tree_int(%union.tree_node* %4, i64 %conv) #5
  %cmp28 = icmp sgt i32 %call, 0
  br i1 %cmp28, label %if.then30, label %if.end38

if.then30:                                        ; preds = %if.else27
  %id32 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds i8** %id32, i64 1
  %9 = load i8** %8, align 8, !tbaa !49
  %10 = load i32* @target_flags, align 4, !tbaa !1
  %and34 = and i32 %10, 33554432
  %tobool35 = icmp ne i32 %and34, 0
  %cond36 = select i1 %tobool35, i32 6, i32 3
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([42 x i8]* @.str490, i64 0, i64 0), i8* %9, i32 %cond36) #5
  store i8 1, i8* %no_add_attrs, align 1, !tbaa !52
  br label %if.end38

if.end38:                                         ; preds = %if.then23, %if.then30, %if.else27, %if.then
  ret %union.tree_node* null
}

; Function Attrs: nounwind uwtable
define i32 @ix86_return_pops_args(%union.tree_node* readonly %fundecl, %union.tree_node* readonly %funtype, i32 %size) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 2
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %tobool1 = icmp eq %union.tree_node* %fundecl, null
  br i1 %tobool1, label %land.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %code = getelementptr inbounds %union.tree_node* %fundecl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %phitmp = icmp eq i32 %bf.clear, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry, %lor.rhs
  %1 = phi i1 [ true, %entry ], [ false, %land.rhs ], [ %phitmp, %lor.rhs ]
  %attributes = getelementptr inbounds %union.tree_node* %funtype, i64 0, i32 0, i32 5
  %2 = bitcast i48* %attributes to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !14
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([6 x i8]* @.str58, i64 0, i64 0), %union.tree_node* %3) #5
  %tobool2 = icmp eq %union.tree_node* %call, null
  br i1 %tobool2, label %if.then, label %if.end17

if.then:                                          ; preds = %land.end
  %4 = load %union.tree_node** %2, align 8, !tbaa !14
  %call5 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8]* @.str57, i64 0, i64 0), %union.tree_node* %4) #5
  %tobool6 = icmp eq %union.tree_node* %call5, null
  %tobool8 = and i1 %tobool6, %1
  br i1 %tobool8, label %if.end17, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %values = getelementptr inbounds %union.tree_node* %funtype, i64 0, i32 0, i32 1
  %5 = load i8** %values, align 8
  %cmp10 = icmp eq i8* %5, null
  br i1 %cmp10, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = bitcast i8* %5 to %union.tree_node*
  %call13 = tail call %union.tree_node* @tree_last(%union.tree_node* %6) #5
  %value = getelementptr inbounds %union.tree_node* %call13, i64 0, i32 0, i32 2
  %7 = bitcast i32* %value to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !25
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %cmp14 = icmp eq %union.tree_node* %8, %9
  br i1 %cmp14, label %return, label %if.end17

if.end17:                                         ; preds = %if.then, %land.end, %lor.lhs.false
  %type19 = getelementptr inbounds %union.tree_node* %funtype, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type19, align 8, !tbaa !54
  %call20 = tail call i32 @aggregate_value_p(%union.tree_node* %10) #5
  %tobool21 = icmp eq i32 %call20, 0
  br i1 %tobool21, label %return, label %land.lhs.true22

land.lhs.true22:                                  ; preds = %if.end17
  %11 = load i32* @target_flags, align 4, !tbaa !1
  %and23 = and i32 %11, 33554432
  %tobool24 = icmp eq i32 %and23, 0
  br i1 %tobool24, label %if.then25, label %return

if.then25:                                        ; preds = %land.lhs.true22
  %12 = load i32* @ix86_regparm, align 4, !tbaa !1
  %tobool26 = icmp eq %union.tree_node* %funtype, null
  br i1 %tobool26, label %if.end39, label %if.then27

if.then27:                                        ; preds = %if.then25
  %13 = load %union.tree_node** %2, align 8, !tbaa !14
  %call30 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8]* @.str59, i64 0, i64 0), %union.tree_node* %13) #5
  %tobool31 = icmp eq %union.tree_node* %call30, null
  br i1 %tobool31, label %if.end39, label %if.then32

if.then32:                                        ; preds = %if.then27
  %value34 = getelementptr inbounds %union.tree_node* %call30, i64 0, i32 0, i32 2
  %14 = bitcast i32* %value34 to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !25
  %value36 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 2
  %16 = bitcast i32* %value36 to %union.tree_node**
  %17 = load %union.tree_node** %16, align 8, !tbaa !25
  %int_cst37 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst37 to i64*
  %18 = load i64* %low, align 8, !tbaa !55
  %conv = trunc i64 %18 to i32
  br label %if.end39

if.end39:                                         ; preds = %if.then27, %if.then25, %if.then32
  %nregs.0 = phi i32 [ %conv, %if.then32 ], [ %12, %if.then27 ], [ %12, %if.then25 ]
  %tobool40 = icmp eq i32 %nregs.0, 0
  br i1 %tobool40, label %if.then41, label %return

if.then41:                                        ; preds = %if.end39
  %19 = load i32* @target_flags, align 4, !tbaa !1
  %and42 = lshr i32 %19, 25
  %20 = and i32 %and42, 1
  %21 = or i32 %20, 4
  %idxprom55 = zext i32 %21 to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom55
  %22 = load i8* %arrayidx, align 1, !tbaa !5
  %conv44 = zext i8 %22 to i32
  br label %return

return:                                           ; preds = %if.end17, %land.lhs.true22, %if.end39, %land.lhs.true, %lor.lhs.false, %if.then41
  %retval.0 = phi i32 [ %conv44, %if.then41 ], [ %size, %lor.lhs.false ], [ %size, %land.lhs.true ], [ 0, %if.end39 ], [ 0, %land.lhs.true22 ], [ 0, %if.end17 ]
  ret i32 %retval.0
}

declare %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) #0

declare %union.tree_node* @tree_last(%union.tree_node*) #0

declare i32 @aggregate_value_p(%union.tree_node*) #0

; Function Attrs: nounwind readonly uwtable
define zeroext i1 @ix86_function_arg_regno_p(i32 %regno) #2 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %cmp = icmp slt i32 %regno, 3
  br i1 %cmp, label %return, label %lor.rhs

lor.rhs:                                          ; preds = %if.then
  %and3 = and i32 %0, 327680
  %cmp4 = icmp eq i32 %and3, 0
  br i1 %cmp4, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.rhs
  switch i32 %regno, label %return [
    i32 52, label %land.rhs
    i32 51, label %land.rhs
    i32 50, label %land.rhs
    i32 49, label %land.rhs
    i32 48, label %land.rhs
    i32 47, label %land.rhs
    i32 46, label %land.rhs
    i32 45, label %land.rhs
    i32 28, label %land.rhs
    i32 27, label %land.rhs
    i32 26, label %land.rhs
    i32 25, label %land.rhs
    i32 24, label %land.rhs
    i32 23, label %land.rhs
    i32 22, label %land.rhs
    i32 21, label %land.rhs
  ]

land.rhs:                                         ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true
  %idxprom = sext i32 %regno to i64
  %arrayidx = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx, align 1, !tbaa !5
  %lnot = icmp eq i8 %1, 0
  br label %return

if.end:                                           ; preds = %entry
  switch i32 %regno, label %for.body [
    i32 52, label %land.lhs.true19
    i32 51, label %land.lhs.true19
    i32 50, label %land.lhs.true19
    i32 49, label %land.lhs.true19
    i32 48, label %land.lhs.true19
    i32 47, label %land.lhs.true19
    i32 46, label %land.lhs.true19
    i32 45, label %land.lhs.true19
    i32 28, label %land.lhs.true19
    i32 27, label %land.lhs.true19
    i32 26, label %land.lhs.true19
    i32 25, label %land.lhs.true19
    i32 24, label %land.lhs.true19
    i32 23, label %land.lhs.true19
    i32 22, label %land.lhs.true19
    i32 21, label %land.lhs.true19
    i32 0, label %return
  ]

land.lhs.true19:                                  ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %and20 = and i32 %0, 327680
  %cmp21 = icmp eq i32 %and20, 0
  br i1 %cmp21, label %for.body, label %return

for.cond:                                         ; preds = %for.body
  %2 = trunc i64 %indvars.iv.next to i32
  %cmp30 = icmp slt i32 %2, 6
  br i1 %cmp30, label %for.body, label %return

for.body:                                         ; preds = %land.lhs.true19, %if.end, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %if.end ], [ 0, %land.lhs.true19 ]
  %arrayidx32 = getelementptr inbounds [6 x i32]* @x86_64_int_parameter_registers, i64 0, i64 %indvars.iv
  %3 = load i32* %arrayidx32, align 4, !tbaa !1
  %cmp33 = icmp eq i32 %3, %regno
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp33, label %return, label %for.cond

return:                                           ; preds = %for.cond, %for.body, %land.lhs.true19, %if.end, %land.lhs.true, %if.then, %land.rhs, %lor.rhs
  %retval.0 = phi i1 [ true, %if.then ], [ false, %lor.rhs ], [ %lnot, %land.rhs ], [ false, %land.lhs.true ], [ true, %land.lhs.true19 ], [ true, %if.end ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %retval.0
}

; Function Attrs: nounwind uwtable
define void @init_cumulative_args(%struct.ix86_args* nocapture %cum, %union.tree_node* readonly %fntype, %struct.rtx_def* readonly %libname) #1 {
entry:
  %0 = load i8** @ix86_debug_arg_string, align 8, !tbaa !6
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.end16, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([24 x i8]* @.str60, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %1) #9
  %tobool = icmp eq %union.tree_node* %fntype, null
  br i1 %tobool, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.then
  %code = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom98 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8*]* @tree_code_name, i64 0, i64 %idxprom98
  %3 = load i8** %arrayidx, align 8, !tbaa !6
  %type = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type, align 8, !tbaa !54
  %code4 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load5 = load i32* %code4, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  %idxprom799 = zext i32 %bf.clear6 to i64
  %arrayidx8 = getelementptr inbounds [256 x i8*]* @tree_code_name, i64 0, i64 %idxprom799
  %5 = load i8** %arrayidx8, align 8, !tbaa !6
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([32 x i8]* @.str61, i64 0, i64 0), i8* %3, i8* %5) #10
  br label %if.end

if.else:                                          ; preds = %if.then
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([10 x i8]* @.str62, i64 0, i64 0), i64 9, i64 1, %struct._IO_FILE* %1) #9
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %tobool11 = icmp eq %struct.rtx_def* %libname, null
  br i1 %tobool11, label %if.end16, label %if.then12

if.then12:                                        ; preds = %if.end
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %libname, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx13 to i8**
  %7 = load i8** %rtstr, align 8, !tbaa !6
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([15 x i8]* @.str63, i64 0, i64 0), i8* %7) #10
  br label %if.end16

if.end16:                                         ; preds = %if.end, %entry, %if.then12
  %8 = bitcast %struct.ix86_args* %cum to i8*
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 28, i32 4, i1 false)
  %9 = load i32* @ix86_regparm, align 4, !tbaa !1
  %nregs = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 1
  store i32 %9, i32* %nregs, align 4, !tbaa !58
  %10 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %10, 22
  %11 = and i32 %and, 8
  %sse_nregs = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 4
  store i32 %11, i32* %sse_nregs, align 4, !tbaa !59
  %tobool18 = icmp ne %union.tree_node* %fntype, null
  br i1 %tobool18, label %land.lhs.true, label %if.end31

land.lhs.true:                                    ; preds = %if.end16
  %12 = load i32* @target_flags, align 4, !tbaa !1
  %and19 = and i32 %12, 33554432
  %tobool20 = icmp eq i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %if.end31

if.then21:                                        ; preds = %land.lhs.true
  %attributes = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 5
  %13 = bitcast i48* %attributes to %union.tree_node**
  %14 = load %union.tree_node** %13, align 8, !tbaa !14
  %call23 = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([8 x i8]* @.str59, i64 0, i64 0), %union.tree_node* %14) #5
  %tobool24 = icmp eq %union.tree_node* %call23, null
  br i1 %tobool24, label %if.then21.if.end31_crit_edge, label %if.then25

if.then21.if.end31_crit_edge:                     ; preds = %if.then21
  %.pre = load i32* %nregs, align 4, !tbaa !58
  br label %if.end31

if.then25:                                        ; preds = %if.then21
  %value = getelementptr inbounds %union.tree_node* %call23, i64 0, i32 0, i32 2
  %15 = bitcast i32* %value to %union.tree_node**
  %16 = load %union.tree_node** %15, align 8, !tbaa !25
  %value27 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 2
  %17 = bitcast i32* %value27 to %union.tree_node**
  %18 = load %union.tree_node** %17, align 8, !tbaa !25
  %int_cst28 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst28 to i64*
  %19 = load i64* %low, align 8, !tbaa !55
  %conv = trunc i64 %19 to i32
  store i32 %conv, i32* %nregs, align 4, !tbaa !58
  br label %if.end31

if.end31:                                         ; preds = %if.then21.if.end31_crit_edge, %land.lhs.true, %if.then25, %if.end16
  %20 = phi i32 [ %.pre, %if.then21.if.end31_crit_edge ], [ %9, %land.lhs.true ], [ %conv, %if.then25 ], [ %9, %if.end16 ]
  %maybe_vaarg = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 6
  store i32 0, i32* %maybe_vaarg, align 4, !tbaa !60
  %tobool33 = icmp eq i32 %20, 0
  %tobool18.not = xor i1 %tobool18, true
  %brmerge = or i1 %tobool33, %tobool18.not
  br i1 %brmerge, label %if.end56, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end31
  %values = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 1
  %21 = load i8** %values, align 8
  %cmp38100 = icmp eq i8* %21, null
  br i1 %cmp38100, label %land.lhs.true61, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %22 = bitcast i8* %21 to %union.tree_node*
  %23 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %param.0101 = phi %union.tree_node* [ %22, %for.body.lr.ph ], [ %24, %for.body ]
  %chain = getelementptr inbounds %union.tree_node* %param.0101, i64 0, i32 0, i32 0, i32 0
  %24 = load %union.tree_node** %chain, align 8, !tbaa !27
  %cmp41 = icmp eq %union.tree_node* %24, null
  br i1 %cmp41, label %land.lhs.true43, label %for.body

land.lhs.true43:                                  ; preds = %for.body
  %value45 = getelementptr inbounds %union.tree_node* %param.0101, i64 0, i32 0, i32 2
  %25 = bitcast i32* %value45 to %union.tree_node**
  %26 = load %union.tree_node** %25, align 8, !tbaa !25
  %cmp46 = icmp eq %union.tree_node* %26, %23
  br i1 %cmp46, label %if.end56, label %if.then48

if.then48:                                        ; preds = %land.lhs.true43
  %27 = load i32* @target_flags, align 4, !tbaa !1
  %and49 = and i32 %27, 33554432
  %tobool50 = icmp eq i32 %and49, 0
  br i1 %tobool50, label %if.then51, label %if.end53

if.then51:                                        ; preds = %if.then48
  store i32 0, i32* %nregs, align 4, !tbaa !58
  br label %if.end53

if.end53:                                         ; preds = %if.then48, %if.then51
  %28 = phi i32 [ %20, %if.then48 ], [ 0, %if.then51 ]
  store i32 1, i32* %maybe_vaarg, align 4, !tbaa !60
  br label %if.end56

if.end56:                                         ; preds = %if.end31, %land.lhs.true43, %if.end53
  %29 = phi i32 [ %20, %if.end31 ], [ %20, %land.lhs.true43 ], [ %28, %if.end53 ]
  %tobool59 = icmp ne %struct.rtx_def* %libname, null
  %or.cond = or i1 %tobool18, %tobool59
  br i1 %or.cond, label %lor.lhs.false, label %if.then65

lor.lhs.false:                                    ; preds = %if.end56
  br i1 %tobool18, label %land.lhs.true61, label %if.end67

land.lhs.true61:                                  ; preds = %for.cond.preheader, %lor.lhs.false
  %30 = phi i32 [ %29, %lor.lhs.false ], [ %20, %for.cond.preheader ]
  %values63 = getelementptr inbounds %union.tree_node* %fntype, i64 0, i32 0, i32 1
  %31 = load i8** %values63, align 8
  %tobool64 = icmp eq i8* %31, null
  br i1 %tobool64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %land.lhs.true61, %if.end56
  %32 = phi i32 [ %30, %land.lhs.true61 ], [ %29, %if.end56 ]
  store i32 1, i32* %maybe_vaarg, align 4, !tbaa !60
  br label %if.end67

if.end67:                                         ; preds = %land.lhs.true61, %if.then65, %lor.lhs.false
  %33 = phi i32 [ %30, %land.lhs.true61 ], [ %32, %if.then65 ], [ %29, %lor.lhs.false ]
  %34 = load i8** @ix86_debug_arg_string, align 8, !tbaa !6
  %cmp68 = icmp eq i8* %34, null
  br i1 %cmp68, label %if.end73, label %if.then70

if.then70:                                        ; preds = %if.end67
  %35 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  %call72 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([14 x i8]* @.str64, i64 0, i64 0), i32 %33) #10
  br label %if.end73

if.end73:                                         ; preds = %if.end67, %if.then70
  ret void
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #4

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define void @function_arg_advance(%struct.ix86_args* nocapture %cum, i32 %mode, %union.tree_node* %type, i32 %named) #1 {
entry:
  %class.i = alloca [4 x i32], align 16
  %cmp = icmp eq i32 %mode, 51
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %call = call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !5
  %conv1 = zext i8 %0 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ %conv1, %cond.false ]
  %conv2 = trunc i64 %cond to i32
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %1, 23
  %2 = and i32 %and, 4
  %3 = add i32 %2, 4
  %add = add i32 %conv2, -1
  %sub = add i32 %add, %3
  %div = sdiv i32 %sub, %3
  %4 = load i8** @ix86_debug_arg_string, align 8, !tbaa !6
  %cmp7 = icmp eq i8* %4, null
  br i1 %cmp7, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  %words9 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 0
  %6 = load i32* %words9, align 4, !tbaa !61
  %nregs = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 1
  %7 = load i32* %nregs, align 4, !tbaa !58
  %idxprom10 = sext i32 %mode to i64
  %arrayidx11 = getelementptr inbounds [59 x i8*]* @mode_name, i64 0, i64 %idxprom10
  %8 = load i8** %arrayidx11, align 8, !tbaa !6
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([61 x i8]* @.str65, i64 0, i64 0), i32 %div, i32 %6, i32 %7, i8* %8, i32 %named) #10
  %.pre = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  %9 = phi i32 [ %1, %cond.end ], [ %.pre, %if.then ]
  %and13 = and i32 %9, 33554432
  %tobool14 = icmp eq i32 %and13, 0
  br i1 %tobool14, label %if.else39, label %if.then15

if.then15:                                        ; preds = %if.end
  %10 = bitcast [4 x i32]* %class.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %10) #5
  %arraydecay.i = getelementptr inbounds [4 x i32]* %class.i, i64 0, i64 0
  %call.i = call fastcc i32 @classify_argument(i32 %mode, %union.tree_node* %type, i32* %arraydecay.i, i32 0) #5
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %if.then18, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.then15
  %cmp17.i = icmp sgt i32 %call.i, 0
  br i1 %cmp17.i, label %for.body.lr.ph.i, label %if.else

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %11 = sext i32 %call.i to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.backedge.i, %for.body.lr.ph.i
  %int_nregs.0.load114 = phi i32 [ 0, %for.body.lr.ph.i ], [ %int_nregs.0.load113, %for.cond.backedge.i ]
  %sse_nregs.0.load111 = phi i32 [ 0, %for.body.lr.ph.i ], [ %sse_nregs.0.load110, %for.cond.backedge.i ]
  %indvars.iv.i = phi i64 [ %11, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.backedge.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx.i = getelementptr inbounds [4 x i32]* %class.i, i64 0, i64 %indvars.iv.next.i
  %12 = load i32* %arrayidx.i, align 4, !tbaa !5
  switch i32 %12, label %for.cond.backedge.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb.i
    i32 3, label %sw.bb1.i
    i32 4, label %sw.bb1.i
    i32 5, label %sw.bb1.i
    i32 9, label %sw.bb8.i
    i32 8, label %if.then18
    i32 7, label %if.then18
  ]

sw.bb.i:                                          ; preds = %for.body.i, %for.body.i
  %inc.i = add nsw i32 %int_nregs.0.load114, 1
  br label %for.cond.backedge.i

sw.bb1.i:                                         ; preds = %for.body.i, %for.body.i, %for.body.i
  %inc2.i = add nsw i32 %sse_nregs.0.load111, 1
  br label %for.cond.backedge.i

for.cond.backedge.i:                              ; preds = %sw.bb1.i, %sw.bb.i, %for.body.i
  %int_nregs.0.load113 = phi i32 [ %int_nregs.0.load114, %sw.bb1.i ], [ %inc.i, %sw.bb.i ], [ %int_nregs.0.load114, %for.body.i ]
  %sse_nregs.0.load110 = phi i32 [ %inc2.i, %sw.bb1.i ], [ %sse_nregs.0.load111, %sw.bb.i ], [ %sse_nregs.0.load111, %for.body.i ]
  %13 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp sgt i32 %13, 0
  br i1 %cmp.i, label %for.body.i, label %if.else

sw.bb8.i:                                         ; preds = %for.body.i
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 1953, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.examine_argument, i64 0, i64 0)) #8
  unreachable

if.then18:                                        ; preds = %for.body.i, %for.body.i, %if.then15
  call void @llvm.lifetime.end(i64 16, i8* %10) #5
  %words19 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 0
  %14 = load i32* %words19, align 4, !tbaa !61
  %add20 = add nsw i32 %14, %div
  store i32 %add20, i32* %words19, align 4, !tbaa !61
  br label %if.end74

if.else:                                          ; preds = %for.cond.backedge.i, %for.cond.preheader.i
  %int_nregs.0.load115.ph118 = phi i32 [ 0, %for.cond.preheader.i ], [ %int_nregs.0.load113, %for.cond.backedge.i ]
  %sse_nregs.0.load112.ph119 = phi i32 [ 0, %for.cond.preheader.i ], [ %sse_nregs.0.load110, %for.cond.backedge.i ]
  call void @llvm.lifetime.end(i64 16, i8* %10) #5
  %sse_nregs21 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 4
  %15 = load i32* %sse_nregs21, align 4, !tbaa !59
  %cmp22 = icmp slt i32 %15, %sse_nregs.0.load112.ph119
  br i1 %cmp22, label %if.else34, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %nregs24 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 1
  %16 = load i32* %nregs24, align 4, !tbaa !58
  %cmp25 = icmp slt i32 %16, %int_nregs.0.load115.ph118
  br i1 %cmp25, label %if.else34, label %if.then27

if.then27:                                        ; preds = %land.lhs.true
  %sub29 = sub nsw i32 %16, %int_nregs.0.load115.ph118
  store i32 %sub29, i32* %nregs24, align 4, !tbaa !58
  %sub31 = sub nsw i32 %15, %sse_nregs.0.load112.ph119
  store i32 %sub31, i32* %sse_nregs21, align 4, !tbaa !59
  %regno = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 2
  %17 = load i32* %regno, align 4, !tbaa !62
  %add32 = add nsw i32 %17, %int_nregs.0.load115.ph118
  store i32 %add32, i32* %regno, align 4, !tbaa !62
  %sse_regno = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 5
  %18 = load i32* %sse_regno, align 4, !tbaa !63
  %add33 = add nsw i32 %18, %sse_nregs.0.load112.ph119
  store i32 %add33, i32* %sse_regno, align 4, !tbaa !63
  br label %if.end74

if.else34:                                        ; preds = %land.lhs.true, %if.else
  %words35 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 0
  %19 = load i32* %words35, align 4, !tbaa !61
  %add36 = add nsw i32 %19, %div
  store i32 %add36, i32* %words35, align 4, !tbaa !61
  br label %if.end74

if.else39:                                        ; preds = %if.end
  %and40 = and i32 %9, 327680
  %cmp41 = icmp ne i32 %and40, 0
  %cmp44 = icmp eq i32 %mode, 6
  %or.cond = and i1 %cmp41, %cmp44
  br i1 %or.cond, label %if.then46, label %if.else59

if.then46:                                        ; preds = %if.else39
  %sse_words = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 3
  %20 = load i32* %sse_words, align 4, !tbaa !64
  %add47 = add nsw i32 %20, %div
  store i32 %add47, i32* %sse_words, align 4, !tbaa !64
  %sse_nregs48 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 4
  %21 = load i32* %sse_nregs48, align 4, !tbaa !59
  %sub49 = add nsw i32 %21, -1
  store i32 %sub49, i32* %sse_nregs48, align 4, !tbaa !59
  %sse_regno50 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 5
  %22 = load i32* %sse_regno50, align 4, !tbaa !63
  %add51 = add nsw i32 %22, 1
  store i32 %add51, i32* %sse_regno50, align 4, !tbaa !63
  %cmp53 = icmp slt i32 %21, 2
  br i1 %cmp53, label %if.then55, label %if.end74

if.then55:                                        ; preds = %if.then46
  store i32 0, i32* %sse_nregs48, align 4, !tbaa !59
  store i32 0, i32* %sse_regno50, align 4, !tbaa !63
  br label %if.end74

if.else59:                                        ; preds = %if.else39
  %words60 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 0
  %23 = load i32* %words60, align 4, !tbaa !61
  %add61 = add nsw i32 %23, %div
  store i32 %add61, i32* %words60, align 4, !tbaa !61
  %nregs62 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 1
  %24 = load i32* %nregs62, align 4, !tbaa !58
  %sub63 = sub nsw i32 %24, %div
  store i32 %sub63, i32* %nregs62, align 4, !tbaa !58
  %regno64 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 2
  %25 = load i32* %regno64, align 4, !tbaa !62
  %add65 = add nsw i32 %25, %div
  store i32 %add65, i32* %regno64, align 4, !tbaa !62
  %cmp67 = icmp slt i32 %sub63, 1
  br i1 %cmp67, label %if.then69, label %if.end74

if.then69:                                        ; preds = %if.else59
  store i32 0, i32* %nregs62, align 4, !tbaa !58
  store i32 0, i32* %regno64, align 4, !tbaa !62
  br label %if.end74

if.end74:                                         ; preds = %if.then55, %if.then46, %if.then69, %if.else59, %if.then18, %if.else34, %if.then27
  ret void
}

declare i64 @int_size_in_bytes(%union.tree_node*) #0

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @function_arg(%struct.ix86_args* nocapture readonly %cum, i32 %mode, %union.tree_node* %type, i32 %named) #1 {
entry:
  %cmp = icmp eq i32 %mode, 51
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !5
  %conv1 = zext i8 %0 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ %conv1, %cond.false ]
  %conv2 = trunc i64 %cond to i32
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %1, 33554432
  %tobool = icmp ne i32 %and, 0
  %2 = lshr exact i32 %and, 23
  %3 = add i32 %2, 4
  %add = add i32 %conv2, -1
  %sub = add i32 %add, %3
  %div = sdiv i32 %sub, %3
  %cmp7 = icmp eq i32 %mode, 0
  br i1 %cmp7, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  br i1 %tobool, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then
  %maybe_vaarg = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 6
  %4 = load i32* %maybe_vaarg, align 4, !tbaa !60
  %tobool12 = icmp eq i32 %4, 0
  br i1 %tobool12, label %cond.end24, label %cond.true13

cond.true13:                                      ; preds = %if.then11
  %sse_nregs = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 4
  %5 = load i32* %sse_nregs, align 4, !tbaa !59
  %cmp14 = icmp slt i32 %5, 0
  br i1 %cmp14, label %cond.true16, label %cond.false20

cond.true16:                                      ; preds = %cond.true13
  %6 = lshr exact i32 %and, 22
  br label %cond.end24

cond.false20:                                     ; preds = %cond.true13
  %sse_regno = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 5
  %7 = load i32* %sse_regno, align 4, !tbaa !63
  br label %cond.end24

cond.end24:                                       ; preds = %if.then11, %cond.true16, %cond.false20
  %cond25 = phi i32 [ %6, %cond.true16 ], [ %7, %cond.false20 ], [ -1, %if.then11 ]
  %conv26 = sext i32 %cond25 to i64
  %call27 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv26) #5
  br label %return

if.else:                                          ; preds = %if.then
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  br label %return

if.end:                                           ; preds = %cond.end
  br i1 %tobool, label %if.then30, label %if.else36

if.then30:                                        ; preds = %if.end
  %nregs = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 1
  %9 = load i32* %nregs, align 4, !tbaa !58
  %sse_nregs31 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 4
  %10 = load i32* %sse_nregs31, align 4, !tbaa !59
  %regno = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 2
  %11 = load i32* %regno, align 4, !tbaa !62
  %idxprom32 = sext i32 %11 to i64
  %arrayidx33 = getelementptr inbounds [6 x i32]* @x86_64_int_parameter_registers, i64 0, i64 %idxprom32
  %sse_regno34 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 5
  %12 = load i32* %sse_regno34, align 4, !tbaa !63
  %call35 = tail call fastcc %struct.rtx_def* @construct_container(i32 %mode, %union.tree_node* %type, i32 0, i32 %9, i32 %10, i32* %arrayidx33, i32 %12)
  br label %if.end51

if.else36:                                        ; preds = %if.end
  switch i32 %mode, label %if.end51 [
    i32 51, label %sw.bb
    i32 5, label %sw.bb
    i32 4, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb
    i32 6, label %sw.bb44
  ]

sw.bb:                                            ; preds = %if.else36, %if.else36, %if.else36, %if.else36, %if.else36
  %nregs37 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 1
  %13 = load i32* %nregs37, align 4, !tbaa !58
  %cmp38 = icmp sgt i32 %div, %13
  br i1 %cmp38, label %if.end51, label %if.then40

if.then40:                                        ; preds = %sw.bb
  %regno41 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 2
  %14 = load i32* %regno41, align 4, !tbaa !62
  %call42 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %14) #5
  br label %if.end51

sw.bb44:                                          ; preds = %if.else36
  %sse_nregs45 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 4
  %15 = load i32* %sse_nregs45, align 4, !tbaa !59
  %tobool46 = icmp eq i32 %15, 0
  br i1 %tobool46, label %if.end51, label %if.then47

if.then47:                                        ; preds = %sw.bb44
  %sse_regno48 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 5
  %16 = load i32* %sse_regno48, align 4, !tbaa !63
  %call49 = tail call %struct.rtx_def* @gen_rtx_REG(i32 6, i32 %16) #5
  br label %if.end51

if.end51:                                         ; preds = %sw.bb, %sw.bb44, %if.else36, %if.then40, %if.then47, %if.then30
  %ret.0 = phi %struct.rtx_def* [ %call35, %if.then30 ], [ null, %if.else36 ], [ %call49, %if.then47 ], [ null, %sw.bb44 ], [ %call42, %if.then40 ], [ null, %sw.bb ]
  %17 = load i8** @ix86_debug_arg_string, align 8, !tbaa !6
  %cmp52 = icmp eq i8* %17, null
  br i1 %cmp52, label %return, label %if.then54

if.then54:                                        ; preds = %if.end51
  %18 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  %words55 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 0
  %19 = load i32* %words55, align 4, !tbaa !61
  %nregs56 = getelementptr inbounds %struct.ix86_args* %cum, i64 0, i32 1
  %20 = load i32* %nregs56, align 4, !tbaa !58
  %idxprom57 = sext i32 %mode to i64
  %arrayidx58 = getelementptr inbounds [59 x i8*]* @mode_name, i64 0, i64 %idxprom57
  %21 = load i8** %arrayidx58, align 8, !tbaa !6
  %call59 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([61 x i8]* @.str66, i64 0, i64 0), i32 %div, i32 %19, i32 %20, i8* %21, i32 %named) #10
  %tobool60 = icmp eq %struct.rtx_def* %ret.0, null
  br i1 %tobool60, label %if.else66, label %if.then61

if.then61:                                        ; preds = %if.then54
  %arrayidx62 = getelementptr inbounds %struct.rtx_def* %ret.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx62 to i32*
  %22 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom63 = zext i32 %22 to i64
  %arrayidx64 = getelementptr inbounds [53 x i8*]* @reg_names, i64 0, i64 %idxprom63
  %23 = load i8** %arrayidx64, align 8, !tbaa !6
  %call65 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([12 x i8]* @.str67, i64 0, i64 0), i8* %23) #10
  br label %if.end68

if.else66:                                        ; preds = %if.then54
  %24 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str68, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %18) #9
  br label %if.end68

if.end68:                                         ; preds = %if.else66, %if.then61
  %25 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str69, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %18) #9
  br label %return

return:                                           ; preds = %if.end68, %if.end51, %if.else, %cond.end24
  %retval.0 = phi %struct.rtx_def* [ %call27, %cond.end24 ], [ %8, %if.else ], [ %ret.0, %if.end51 ], [ %ret.0, %if.end68 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #0

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @construct_container(i32 %mode, %union.tree_node* %type, i32 %in_return, i32 %nintregs, i32 %nsseregs, i32* nocapture readonly %intreg, i32 %sse_regno) #1 {
entry:
  %class.i = alloca [4 x i32], align 16
  %class = alloca [4 x i32], align 16
  %exp = alloca [4 x %struct.rtx_def*], align 16
  %cmp = icmp eq i32 %mode, 51
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %call = call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !5
  %conv1 = zext i8 %0 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ %conv1, %cond.false ]
  %conv2 = trunc i64 %cond to i32
  %arraydecay = getelementptr inbounds [4 x i32]* %class, i64 0, i64 0
  %call3 = call fastcc i32 @classify_argument(i32 %mode, %union.tree_node* %type, i32* %arraydecay, i32 0)
  %1 = load i8** @ix86_debug_arg_string, align 8, !tbaa !6
  %cmp4 = icmp eq i8* %1, null
  br i1 %cmp4, label %if.end17, label %if.then

if.then:                                          ; preds = %cond.end
  %tobool = icmp eq i32 %call3, 0
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  br i1 %tobool, label %if.end17.thread, label %if.else

if.end17.thread:                                  ; preds = %if.then
  %3 = call i64 @fwrite(i8* getelementptr inbounds ([14 x i8]* @.str477, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %2) #9
  br label %return

if.else:                                          ; preds = %if.then
  %4 = call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str478, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %2) #9
  %cmp9357 = icmp sgt i32 %call3, 0
  br i1 %cmp9357, label %for.body, label %for.end

for.body:                                         ; preds = %if.else, %for.body
  %indvars.iv360 = phi i64 [ %indvars.iv.next361, %for.body ], [ 0, %if.else ]
  %arrayidx12 = getelementptr inbounds [4 x i32]* %class, i64 0, i64 %indvars.iv360
  %5 = load i32* %arrayidx12, align 4, !tbaa !5
  %idxprom13 = zext i32 %5 to i64
  %arrayidx14 = getelementptr inbounds [10 x i8*]* @x86_64_reg_class_name, i64 0, i64 %idxprom13
  %6 = load i8** %arrayidx14, align 8, !tbaa !6
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([4 x i8]* @.str479, i64 0, i64 0), i8* %6) #10
  %indvars.iv.next361 = add nuw nsw i64 %indvars.iv360, 1
  %lftr.wideiv362 = trunc i64 %indvars.iv.next361 to i32
  %exitcond363 = icmp eq i32 %lftr.wideiv362, %call3
  br i1 %exitcond363, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.else
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %2) #10
  br label %if.end17

if.end17:                                         ; preds = %cond.end, %for.end
  %tobool18 = icmp eq i32 %call3, 0
  br i1 %tobool18, label %return, label %if.end20

if.end20:                                         ; preds = %if.end17
  %7 = bitcast [4 x i32]* %class.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %7) #5
  %arraydecay.i = getelementptr inbounds [4 x i32]* %class.i, i64 0, i64 0
  %call.i = call fastcc i32 @classify_argument(i32 %mode, %union.tree_node* %type, i32* %arraydecay.i, i32 0) #5
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %return, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end20
  %cmp17.i = icmp sgt i32 %call.i, 0
  br i1 %cmp17.i, label %for.body.lr.ph.i, label %if.end24

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %tobool5.i = icmp eq i32 %in_return, 0
  %8 = sext i32 %call.i to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.backedge.i, %for.body.lr.ph.i
  %needed_sseregs.0.load335 = phi i32 [ 0, %for.body.lr.ph.i ], [ %needed_sseregs.0.load334, %for.cond.backedge.i ]
  %needed_intregs.0.load332 = phi i32 [ 0, %for.body.lr.ph.i ], [ %needed_intregs.0.load331, %for.cond.backedge.i ]
  %indvars.iv.i = phi i64 [ %8, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.backedge.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx.i = getelementptr inbounds [4 x i32]* %class.i, i64 0, i64 %indvars.iv.next.i
  %9 = load i32* %arrayidx.i, align 4, !tbaa !5
  switch i32 %9, label %for.cond.backedge.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb.i
    i32 3, label %sw.bb1.i
    i32 4, label %sw.bb1.i
    i32 5, label %sw.bb1.i
    i32 9, label %sw.bb8.i
    i32 8, label %sw.bb4.i
    i32 7, label %sw.bb4.i
  ]

sw.bb.i:                                          ; preds = %for.body.i, %for.body.i
  %inc.i = add nsw i32 %needed_intregs.0.load332, 1
  br label %for.cond.backedge.i

sw.bb1.i:                                         ; preds = %for.body.i, %for.body.i, %for.body.i
  %inc2.i = add nsw i32 %needed_sseregs.0.load335, 1
  br label %for.cond.backedge.i

sw.bb4.i:                                         ; preds = %for.body.i, %for.body.i
  br i1 %tobool5.i, label %return, label %for.cond.backedge.i

for.cond.backedge.i:                              ; preds = %sw.bb4.i, %sw.bb1.i, %sw.bb.i, %for.body.i
  %needed_sseregs.0.load334 = phi i32 [ %needed_sseregs.0.load335, %sw.bb4.i ], [ %inc2.i, %sw.bb1.i ], [ %needed_sseregs.0.load335, %sw.bb.i ], [ %needed_sseregs.0.load335, %for.body.i ]
  %needed_intregs.0.load331 = phi i32 [ %needed_intregs.0.load332, %sw.bb4.i ], [ %needed_intregs.0.load332, %sw.bb1.i ], [ %inc.i, %sw.bb.i ], [ %needed_intregs.0.load332, %for.body.i ]
  %10 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp sgt i32 %10, 0
  br i1 %cmp.i, label %for.body.i, label %if.end24

sw.bb8.i:                                         ; preds = %for.body.i
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 1953, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.examine_argument, i64 0, i64 0)) #8
  unreachable

if.end24:                                         ; preds = %for.cond.backedge.i, %for.cond.preheader.i
  %needed_sseregs.0.load336.ph340 = phi i32 [ 0, %for.cond.preheader.i ], [ %needed_sseregs.0.load334, %for.cond.backedge.i ]
  %needed_intregs.0.load333.ph341 = phi i32 [ 0, %for.cond.preheader.i ], [ %needed_intregs.0.load331, %for.cond.backedge.i ]
  call void @llvm.lifetime.end(i64 16, i8* %7) #5
  %cmp25 = icmp sgt i32 %needed_intregs.0.load333.ph341, %nintregs
  %cmp27 = icmp sgt i32 %needed_sseregs.0.load336.ph340, %nsseregs
  %or.cond327 = or i1 %cmp25, %cmp27
  br i1 %or.cond327, label %return, label %if.end30

if.end30:                                         ; preds = %if.end24
  %cmp31 = icmp eq i32 %call3, 1
  %cmp33 = icmp ne i32 %mode, 21
  %or.cond = and i1 %cmp31, %cmp33
  br i1 %or.cond, label %if.then35, label %if.end51

if.then35:                                        ; preds = %if.end30
  %11 = load i32* %arraydecay, align 16, !tbaa !5
  switch i32 %11, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb39
    i32 4, label %sw.bb39
    i32 5, label %sw.bb39
    i32 7, label %sw.bb48
    i32 0, label %return
  ]

sw.bb:                                            ; preds = %if.then35, %if.then35
  %12 = load i32* %intreg, align 4, !tbaa !1
  %call38 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %12) #5
  br label %return

sw.bb39:                                          ; preds = %if.then35, %if.then35, %if.then35
  %cmp40 = icmp slt i32 %sse_regno, 8
  %cond46.v = select i1 %cmp40, i32 21, i32 37
  %cond46 = add i32 %cond46.v, %sse_regno
  %call47 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %cond46) #5
  br label %return

sw.bb48:                                          ; preds = %if.then35
  %call49 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 8) #5
  br label %return

sw.default:                                       ; preds = %if.then35
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 2019, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.construct_container, i64 0, i64 0)) #8
  unreachable

if.end51:                                         ; preds = %if.end30
  %cmp52 = icmp eq i32 %call3, 2
  %13 = bitcast [4 x i32]* %class to i64*
  br i1 %cmp52, label %land.lhs.true54, label %if.end112

land.lhs.true54:                                  ; preds = %if.end51
  %14 = load i64* %13, align 16
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  switch i32 %15, label %for.cond134.preheader [
    i32 3, label %land.lhs.true58
    i32 7, label %land.lhs.true80
    i32 1, label %land.lhs.true93
  ]

land.lhs.true58:                                  ; preds = %land.lhs.true54
  %cmp60 = icmp eq i32 %17, 6
  br i1 %cmp60, label %if.then62, label %for.cond134.preheader

if.then62:                                        ; preds = %land.lhs.true58
  %cmp63 = icmp slt i32 %sse_regno, 8
  %cond71.v = select i1 %cmp63, i32 21, i32 37
  %cond71 = add i32 %cond71.v, %sse_regno
  %call72 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %cond71) #5
  br label %return

land.lhs.true80:                                  ; preds = %land.lhs.true54
  %cmp82 = icmp eq i32 %17, 8
  br i1 %cmp82, label %if.then84, label %land.lhs.true89

if.then84:                                        ; preds = %land.lhs.true80
  %call85 = call %struct.rtx_def* @gen_rtx_REG(i32 18, i32 8) #5
  br label %return

land.lhs.true89:                                  ; preds = %land.lhs.true80
  %cmp91 = icmp eq i32 %15, 1
  br i1 %cmp91, label %land.lhs.true93, label %for.cond134.preheader

for.cond134.preheader:                            ; preds = %land.lhs.true54, %land.lhs.true58, %land.lhs.true123, %land.lhs.true119, %if.end112, %land.lhs.true89
  %18 = phi i32 [ 7, %land.lhs.true123 ], [ 7, %land.lhs.true119 ], [ %22, %if.end112 ], [ %15, %land.lhs.true89 ], [ 3, %land.lhs.true58 ], [ %15, %land.lhs.true54 ]
  %cmp135352 = icmp sgt i32 %call3, 0
  br i1 %cmp135352, label %for.body137.lr.ph, label %for.end243

for.body137.lr.ph:                                ; preds = %for.cond134.preheader
  %sub209 = add nsw i32 %call3, -1
  br label %for.body137

land.lhs.true93:                                  ; preds = %land.lhs.true54, %land.lhs.true89
  %cmp95 = icmp eq i32 %17, 1
  br i1 %cmp95, label %land.lhs.true97, label %if.end112

land.lhs.true97:                                  ; preds = %land.lhs.true93
  switch i32 %mode, label %if.end112 [
    i32 28, label %land.lhs.true103
    i32 6, label %land.lhs.true103
  ]

land.lhs.true103:                                 ; preds = %land.lhs.true97, %land.lhs.true97
  %19 = load i32* %intreg, align 4, !tbaa !1
  %add105 = add nsw i32 %19, 1
  %arrayidx106 = getelementptr inbounds i32* %intreg, i64 1
  %20 = load i32* %arrayidx106, align 4, !tbaa !1
  %cmp107 = icmp eq i32 %add105, %20
  br i1 %cmp107, label %if.then109, label %if.end112

if.then109:                                       ; preds = %land.lhs.true103
  %call111 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %19) #5
  br label %return

if.end112:                                        ; preds = %if.end51, %land.lhs.true97, %land.lhs.true103, %land.lhs.true93
  %cmp113 = icmp eq i32 %call3, 4
  %21 = load i64* %13, align 16
  %22 = trunc i64 %21 to i32
  %cmp117 = icmp eq i32 %22, 7
  %or.cond347 = and i1 %cmp113, %cmp117
  br i1 %or.cond347, label %land.lhs.true119, label %for.cond134.preheader

land.lhs.true119:                                 ; preds = %if.end112
  %.mask = and i64 %21, -4294967296
  %cmp121 = icmp eq i64 %.mask, 34359738368
  br i1 %cmp121, label %land.lhs.true123, label %for.cond134.preheader

land.lhs.true123:                                 ; preds = %land.lhs.true119
  %arrayidx124 = getelementptr inbounds [4 x i32]* %class, i64 0, i64 2
  %23 = bitcast i32* %arrayidx124 to i64*
  %24 = load i64* %23, align 8
  %25 = icmp eq i64 %24, 34359738375
  br i1 %25, label %if.then131, label %for.cond134.preheader

if.then131:                                       ; preds = %land.lhs.true123
  %call132 = call %struct.rtx_def* @gen_rtx_REG(i32 24, i32 8) #5
  br label %return

for.body137:                                      ; preds = %for.inc241.for.body137_crit_edge, %for.body137.lr.ph
  %26 = phi i32 [ %18, %for.body137.lr.ph ], [ %.pre, %for.inc241.for.body137_crit_edge ]
  %nexps.0356 = phi i32 [ 0, %for.body137.lr.ph ], [ %nexps.1, %for.inc241.for.body137_crit_edge ]
  %i.1355 = phi i32 [ 0, %for.body137.lr.ph ], [ %inc242, %for.inc241.for.body137_crit_edge ]
  %intreg.addr.0354 = phi i32* [ %intreg, %for.body137.lr.ph ], [ %intreg.addr.1, %for.inc241.for.body137_crit_edge ]
  %sse_regno.addr.0353 = phi i32 [ %sse_regno, %for.body137.lr.ph ], [ %sse_regno.addr.1, %for.inc241.for.body137_crit_edge ]
  switch i32 %26, label %sw.default240 [
    i32 0, label %for.inc241
    i32 1, label %sw.bb140
    i32 2, label %sw.bb140
    i32 4, label %sw.bb170
    i32 5, label %sw.bb189
    i32 3, label %sw.bb208
  ]

sw.bb140:                                         ; preds = %for.body137, %for.body137
  %mul = shl nsw i32 %i.1355, 3
  %add141 = add nsw i32 %mul, 8
  %cmp142 = icmp sgt i32 %add141, %conv2
  br i1 %cmp142, label %if.then144, label %if.else149

if.then144:                                       ; preds = %sw.bb140
  %sub146 = sub nsw i32 %conv2, %mul
  %mul147 = shl nsw i32 %sub146, 3
  %call148 = call i32 @mode_for_size(i32 %mul147, i32 1, i32 0) #5
  br label %if.end157

if.else149:                                       ; preds = %sw.bb140
  %cmp152 = icmp eq i32 %26, 2
  %. = select i1 %cmp152, i32 4, i32 5
  br label %if.end157

if.end157:                                        ; preds = %if.else149, %if.then144
  %tmpmode.0 = phi i32 [ %call148, %if.then144 ], [ %., %if.else149 ]
  %cmp158 = icmp eq i32 %tmpmode.0, 51
  %.tmpmode.0 = select i1 %cmp158, i32 5, i32 %tmpmode.0
  %27 = load i32* %intreg.addr.0354, align 4, !tbaa !1
  %call162 = call %struct.rtx_def* @gen_rtx_REG(i32 %.tmpmode.0, i32 %27) #5
  %conv164 = sext i32 %mul to i64
  %call165 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv164) #5
  %call166 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call162, %struct.rtx_def* %call165) #5
  %inc167 = add nsw i32 %nexps.0356, 1
  %idxprom168 = sext i32 %nexps.0356 to i64
  %arrayidx169 = getelementptr inbounds [4 x %struct.rtx_def*]* %exp, i64 0, i64 %idxprom168
  store %struct.rtx_def* %call166, %struct.rtx_def** %arrayidx169, align 8, !tbaa !6
  %incdec.ptr = getelementptr inbounds i32* %intreg.addr.0354, i64 1
  br label %for.inc241

sw.bb170:                                         ; preds = %for.body137
  %cmp171 = icmp slt i32 %sse_regno.addr.0353, 8
  %cond179.v = select i1 %cmp171, i32 21, i32 37
  %cond179 = add i32 %cond179.v, %sse_regno.addr.0353
  %call180 = call %struct.rtx_def* @gen_rtx_REG(i32 15, i32 %cond179) #5
  %mul181 = shl nsw i32 %i.1355, 3
  %conv182 = sext i32 %mul181 to i64
  %call183 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv182) #5
  %call184 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call180, %struct.rtx_def* %call183) #5
  %inc185 = add nsw i32 %nexps.0356, 1
  %idxprom186 = sext i32 %nexps.0356 to i64
  %arrayidx187 = getelementptr inbounds [4 x %struct.rtx_def*]* %exp, i64 0, i64 %idxprom186
  store %struct.rtx_def* %call184, %struct.rtx_def** %arrayidx187, align 8, !tbaa !6
  %inc188 = add nsw i32 %sse_regno.addr.0353, 1
  br label %for.inc241

sw.bb189:                                         ; preds = %for.body137
  %cmp190 = icmp slt i32 %sse_regno.addr.0353, 8
  %cond198.v = select i1 %cmp190, i32 21, i32 37
  %cond198 = add i32 %cond198.v, %sse_regno.addr.0353
  %call199 = call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 %cond198) #5
  %mul200 = shl nsw i32 %i.1355, 3
  %conv201 = sext i32 %mul200 to i64
  %call202 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv201) #5
  %call203 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call199, %struct.rtx_def* %call202) #5
  %inc204 = add nsw i32 %nexps.0356, 1
  %idxprom205 = sext i32 %nexps.0356 to i64
  %arrayidx206 = getelementptr inbounds [4 x %struct.rtx_def*]* %exp, i64 0, i64 %idxprom205
  store %struct.rtx_def* %call203, %struct.rtx_def** %arrayidx206, align 8, !tbaa !6
  %inc207 = add nsw i32 %sse_regno.addr.0353, 1
  br label %for.inc241

sw.bb208:                                         ; preds = %for.body137
  %cmp210 = icmp slt i32 %i.1355, %sub209
  br i1 %cmp210, label %land.lhs.true212, label %if.else220

land.lhs.true212:                                 ; preds = %sw.bb208
  %add213 = add nsw i32 %i.1355, 1
  %idxprom214 = sext i32 %add213 to i64
  %arrayidx215 = getelementptr inbounds [4 x i32]* %class, i64 0, i64 %idxprom214
  %28 = load i32* %arrayidx215, align 4, !tbaa !5
  %cmp216 = icmp eq i32 %28, 6
  br i1 %cmp216, label %if.end221, label %if.else220

if.else220:                                       ; preds = %land.lhs.true212, %sw.bb208
  br label %if.end221

if.end221:                                        ; preds = %land.lhs.true212, %if.else220
  %tmpmode.2 = phi i32 [ 5, %if.else220 ], [ 6, %land.lhs.true212 ]
  %i.2 = phi i32 [ %i.1355, %if.else220 ], [ %add213, %land.lhs.true212 ]
  %cmp222 = icmp slt i32 %sse_regno.addr.0353, 8
  %cond230.v = select i1 %cmp222, i32 21, i32 37
  %cond230 = add i32 %cond230.v, %sse_regno.addr.0353
  %call231 = call %struct.rtx_def* @gen_rtx_REG(i32 %tmpmode.2, i32 %cond230) #5
  %mul232 = shl nsw i32 %i.2, 3
  %conv233 = sext i32 %mul232 to i64
  %call234 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv233) #5
  %call235 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call231, %struct.rtx_def* %call234) #5
  %inc236 = add nsw i32 %nexps.0356, 1
  %idxprom237 = sext i32 %nexps.0356 to i64
  %arrayidx238 = getelementptr inbounds [4 x %struct.rtx_def*]* %exp, i64 0, i64 %idxprom237
  store %struct.rtx_def* %call235, %struct.rtx_def** %arrayidx238, align 8, !tbaa !6
  %inc239 = add nsw i32 %sse_regno.addr.0353, 1
  br label %for.inc241

sw.default240:                                    ; preds = %for.body137
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 2086, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.construct_container, i64 0, i64 0)) #8
  unreachable

for.inc241:                                       ; preds = %for.body137, %if.end157, %sw.bb170, %sw.bb189, %if.end221
  %sse_regno.addr.1 = phi i32 [ %inc239, %if.end221 ], [ %inc207, %sw.bb189 ], [ %inc188, %sw.bb170 ], [ %sse_regno.addr.0353, %if.end157 ], [ %sse_regno.addr.0353, %for.body137 ]
  %intreg.addr.1 = phi i32* [ %intreg.addr.0354, %if.end221 ], [ %intreg.addr.0354, %sw.bb189 ], [ %intreg.addr.0354, %sw.bb170 ], [ %incdec.ptr, %if.end157 ], [ %intreg.addr.0354, %for.body137 ]
  %i.3 = phi i32 [ %i.2, %if.end221 ], [ %i.1355, %sw.bb189 ], [ %i.1355, %sw.bb170 ], [ %i.1355, %if.end157 ], [ %i.1355, %for.body137 ]
  %nexps.1 = phi i32 [ %inc236, %if.end221 ], [ %inc204, %sw.bb189 ], [ %inc185, %sw.bb170 ], [ %inc167, %if.end157 ], [ %nexps.0356, %for.body137 ]
  %inc242 = add nsw i32 %i.3, 1
  %cmp135 = icmp slt i32 %inc242, %call3
  br i1 %cmp135, label %for.inc241.for.body137_crit_edge, label %for.end243

for.inc241.for.body137_crit_edge:                 ; preds = %for.inc241
  %idxprom138.phi.trans.insert = sext i32 %inc242 to i64
  %arrayidx139.phi.trans.insert = getelementptr inbounds [4 x i32]* %class, i64 0, i64 %idxprom138.phi.trans.insert
  %.pre = load i32* %arrayidx139.phi.trans.insert, align 4, !tbaa !5
  br label %for.body137

for.end243:                                       ; preds = %for.inc241, %for.cond134.preheader
  %nexps.0.lcssa = phi i32 [ 0, %for.cond134.preheader ], [ %nexps.1, %for.inc241 ]
  %call244 = call %struct.rtvec_def* @rtvec_alloc(i32 %nexps.0.lcssa) #5
  %call245 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 %mode, %struct.rtvec_def* %call244) #5
  %cmp247350 = icmp sgt i32 %nexps.0.lcssa, 0
  br i1 %cmp247350, label %for.body249.lr.ph, label %return

for.body249.lr.ph:                                ; preds = %for.end243
  %arrayidx253 = getelementptr inbounds %struct.rtx_def* %call245, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtvec_def**
  br label %for.body249

for.body249:                                      ; preds = %for.body249, %for.body249.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body249.lr.ph ], [ %indvars.iv.next, %for.body249 ]
  %arrayidx251 = getelementptr inbounds [4 x %struct.rtx_def*]* %exp, i64 0, i64 %indvars.iv
  %29 = load %struct.rtx_def** %arrayidx251, align 8, !tbaa !6
  %30 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %arrayidx254 = getelementptr inbounds %struct.rtvec_def* %30, i64 0, i32 1, i64 %indvars.iv
  store %struct.rtx_def* %29, %struct.rtx_def** %arrayidx254, align 8, !tbaa !6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nexps.0.lcssa
  br i1 %exitcond, label %return, label %for.body249

return:                                           ; preds = %sw.bb4.i, %for.body249, %for.end243, %if.end20, %if.end17.thread, %if.then35, %if.end24, %if.end17, %if.then131, %if.then109, %if.then84, %if.then62, %sw.bb48, %sw.bb39, %sw.bb
  %retval.0 = phi %struct.rtx_def* [ %call49, %sw.bb48 ], [ %call47, %sw.bb39 ], [ %call38, %sw.bb ], [ %call72, %if.then62 ], [ %call85, %if.then84 ], [ %call111, %if.then109 ], [ %call132, %if.then131 ], [ null, %if.end17 ], [ null, %if.end24 ], [ null, %if.then35 ], [ null, %if.end17.thread ], [ null, %if.end20 ], [ %call245, %for.end243 ], [ %call245, %for.body249 ], [ null, %sw.bb4.i ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_function_arg_boundary(i32 %mode, %union.tree_node* readonly %type) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %tobool3 = icmp eq %union.tree_node* %type, null
  br i1 %tobool3, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  %align6 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %1 = bitcast %union.tree_node** %align6 to i32*
  %2 = load i32* %1, align 4, !tbaa !65
  br label %if.end7

if.else:                                          ; preds = %if.end
  %call = tail call i32 @get_mode_alignment(i32 %mode) #5
  %.pre = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  %3 = phi i32 [ %0, %if.then4 ], [ %.pre, %if.else ]
  %align.0 = phi i32 [ %2, %if.then4 ], [ %call, %if.else ]
  %and8 = lshr i32 %3, 20
  %4 = and i32 %and8, 32
  %5 = add i32 %4, 32
  %cmp = icmp slt i32 %align.0, %5
  %.align.0 = select i1 %cmp, i32 %5, i32 %align.0
  %cmp16 = icmp sgt i32 %.align.0, 128
  %align.2 = select i1 %cmp16, i32 128, i32 %.align.0
  br label %return

return:                                           ; preds = %entry, %if.end7
  %retval.0 = phi i32 [ %align.2, %if.end7 ], [ 32, %entry ]
  ret i32 %retval.0
}

declare i32 @get_mode_alignment(i32) #0

; Function Attrs: nounwind readonly uwtable
define zeroext i1 @ix86_function_value_regno_p(i32 %regno) #2 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  switch i32 %regno, label %lor.rhs [
    i32 0, label %return
    i32 8, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.then
  %and2 = and i32 %0, 32
  %not.tobool3 = icmp ne i32 %and2, 0
  ret i1 %not.tobool3

lor.rhs:                                          ; preds = %if.then
  %cmp4 = icmp eq i32 %regno, 21
  br i1 %cmp4, label %land.rhs, label %return

land.rhs:                                         ; preds = %lor.rhs
  %and5 = and i32 %0, 327680
  %cmp6 = icmp ne i32 %and5, 0
  br label %return

if.end:                                           ; preds = %entry
  %1 = and i32 %regno, -9
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %return, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %if.end
  %and13 = and i32 %0, 327680
  %notlhs = icmp eq i32 %regno, 21
  %notrhs = icmp ne i32 %and13, 0
  %or.cond.not = and i1 %notrhs, %notlhs
  %cmp9.not = icmp ne i32 %regno, 8
  %brmerge = or i1 %or.cond.not, %cmp9.not
  br i1 %brmerge, label %return, label %land.rhs17

land.rhs17:                                       ; preds = %lor.lhs.false10
  %and18 = and i32 %0, 32
  %tobool19 = icmp ne i32 %and18, 0
  br label %return

return:                                           ; preds = %if.end, %land.rhs17, %lor.lhs.false10, %land.rhs, %lor.rhs, %if.then
  %retval.0 = phi i1 [ true, %if.then ], [ false, %lor.rhs ], [ %cmp6, %land.rhs ], [ true, %if.end ], [ %tobool19, %land.rhs17 ], [ %or.cond.not, %lor.lhs.false10 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @ix86_function_value(%union.tree_node* %valtype) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %type = bitcast %union.tree_node* %valtype to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = lshr exact i32 %and, 22
  %call = tail call fastcc %struct.rtx_def* @construct_container(i32 %bf.clear, %union.tree_node* %valtype, i32 1, i32 6, i32 %1, i32* getelementptr inbounds ([4 x i32]* @x86_64_int_return_registers, i64 0, i64 0), i32 0)
  %tobool6 = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool6, label %if.then7, label %return

if.then7:                                         ; preds = %if.then
  %bf.load10 = load i32* %mode, align 4
  %bf.lshr11 = lshr i32 %bf.load10, 9
  %bf.clear12 = and i32 %bf.lshr11, 127
  %call13 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear12, i32 0) #5
  br label %return

if.else:                                          ; preds = %entry
  %idxprom59 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom59
  %2 = load i32* %arrayidx, align 4, !tbaa !5
  %cmp = icmp ne i32 %2, 2
  %and24 = and i32 %0, 32
  %tobool25 = icmp eq i32 %and24, 0
  %or.cond = or i1 %cmp, %tobool25
  br i1 %or.cond, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.else
  %cmp31 = icmp eq i32 %bf.clear, 6
  %cmp39 = icmp eq i32 %2, 7
  %or.cond61 = or i1 %cmp31, %cmp39
  br i1 %or.cond61, label %cond.end, label %lor.rhs40

lor.rhs40:                                        ; preds = %cond.false
  %cmp48 = icmp eq i32 %2, 8
  %phitmp = select i1 %cmp48, i32 21, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %lor.rhs40, %if.else
  %cond51 = phi i32 [ 8, %if.else ], [ 21, %cond.false ], [ %phitmp, %lor.rhs40 ]
  %call52 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear, i32 %cond51) #5
  br label %return

return:                                           ; preds = %if.then7, %if.then, %cond.end
  %retval.0 = phi %struct.rtx_def* [ %call52, %cond.end ], [ %call, %if.then ], [ %call13, %if.then7 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ix86_return_in_memory(%union.tree_node* %type) #1 {
entry:
  %class.i = alloca [4 x i32], align 16
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %type1 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type1, i64 0, i32 6
  %bf.load = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = bitcast [4 x i32]* %class.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #5
  %arraydecay.i = getelementptr inbounds [4 x i32]* %class.i, i64 0, i64 0
  %call.i = call fastcc i32 @classify_argument(i32 %bf.clear, %union.tree_node* %type, i32* %arraydecay.i, i32 0) #5
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %return, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.then
  %cmp17.i = icmp sgt i32 %call.i, 0
  br i1 %cmp17.i, label %for.body.lr.ph.i, label %return

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %2 = sext i32 %call.i to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.backedge.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %2, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.backedge.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx.i = getelementptr inbounds [4 x i32]* %class.i, i64 0, i64 %indvars.iv.next.i
  %3 = load i32* %arrayidx.i, align 4, !tbaa !5
  %cond = icmp eq i32 %3, 9
  br i1 %cond, label %sw.bb8.i, label %for.cond.backedge.i

for.cond.backedge.i:                              ; preds = %for.body.i
  %4 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp sgt i32 %4, 0
  br i1 %cmp.i, label %for.body.i, label %return

sw.bb8.i:                                         ; preds = %for.body.i
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 1953, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.examine_argument, i64 0, i64 0)) #8
  unreachable

if.else:                                          ; preds = %entry
  %cmp = icmp eq i32 %bf.clear, 51
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %idxprom70 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom70
  %5 = load i32* %arrayidx, align 4, !tbaa !5
  %.off = add i32 %5, -7
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %land.lhs.true, label %lor.lhs.false25

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call23 = call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  %cmp24 = icmp eq i64 %call23, 8
  br i1 %cmp24, label %return, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %call26 = call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  %cmp27 = icmp sgt i64 %call26, 12
  br i1 %cmp27, label %land.lhs.true28, label %if.end

land.lhs.true28:                                  ; preds = %lor.lhs.false25
  %bf.load31 = load i32* %mode, align 4
  %bf.lshr32 = lshr i32 %bf.load31, 9
  %bf.clear33 = and i32 %bf.lshr32, 127
  switch i32 %bf.clear33, label %land.lhs.true42 [
    i32 6, label %if.end
    i32 18, label %if.end
  ]

land.lhs.true42:                                  ; preds = %land.lhs.true28
  %idxprom4871 = zext i32 %bf.clear33 to i64
  %arrayidx49 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom4871
  %6 = load i32* %arrayidx49, align 4, !tbaa !5
  %.off72 = add i32 %6, -7
  %switch73 = icmp ult i32 %.off72, 2
  br i1 %switch73, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true42, %land.lhs.true28, %land.lhs.true28, %lor.lhs.false25
  br label %return

return:                                           ; preds = %for.cond.backedge.i, %for.cond.preheader.i, %if.then, %land.lhs.true42, %if.else, %land.lhs.true, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 1, %land.lhs.true42 ], [ 1, %land.lhs.true ], [ 1, %if.else ], [ 1, %if.then ], [ 0, %for.cond.preheader.i ], [ 0, %for.cond.backedge.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @ix86_libcall_value(i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  switch i32 %mode, label %sw.default [
    i32 15, label %sw.bb
    i32 21, label %sw.bb
    i32 16, label %sw.bb
    i32 22, label %sw.bb
    i32 18, label %sw.bb1
    i32 24, label %sw.bb1
  ]

sw.bb:                                            ; preds = %if.then, %if.then, %if.then, %if.then
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 21) #5
  br label %return

sw.bb1:                                           ; preds = %if.then, %if.then
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 8) #5
  br label %return

sw.default:                                       ; preds = %if.then
  %call3 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 0) #5
  br label %return

if.else:                                          ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4, !tbaa !5
  %cmp = icmp ne i32 %1, 2
  %and4 = and i32 %0, 32
  %tobool5 = icmp eq i32 %and4, 0
  %or.cond = or i1 %cmp, %tobool5
  br i1 %or.cond, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.else
  %cmp6 = icmp eq i32 %mode, 6
  %cmp9 = icmp eq i32 %1, 7
  %or.cond24 = or i1 %cmp6, %cmp9
  br i1 %or.cond24, label %cond.end, label %lor.rhs10

lor.rhs10:                                        ; preds = %cond.false
  %cmp13 = icmp eq i32 %1, 8
  %phitmp = select i1 %cmp13, i32 21, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %lor.rhs10, %if.else
  %cond15 = phi i32 [ 8, %if.else ], [ 21, %cond.false ], [ %phitmp, %lor.rhs10 ]
  %call16 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode, i32 %cond15) #5
  br label %return

return:                                           ; preds = %cond.end, %sw.default, %sw.bb1, %sw.bb
  %retval.0 = phi %struct.rtx_def* [ %call3, %sw.default ], [ %call2, %sw.bb1 ], [ %call, %sw.bb ], [ %call16, %cond.end ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @ix86_build_va_list() #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !6
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %1) #5
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call %union.tree_node* @make_lang_type(i32 20) #5
  %call2 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8]* @.str70, i64 0, i64 0)) #5
  %call3 = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call2, %union.tree_node* %call1) #5
  %call4 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str71, i64 0, i64 0)) #5
  %2 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !6
  %call5 = tail call %union.tree_node* @build_decl(i32 37, %union.tree_node* %call4, %union.tree_node* %2) #5
  %call6 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([10 x i8]* @.str72, i64 0, i64 0)) #5
  %3 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !6
  %call7 = tail call %union.tree_node* @build_decl(i32 37, %union.tree_node* %call6, %union.tree_node* %3) #5
  %call8 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([18 x i8]* @.str73, i64 0, i64 0)) #5
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !6
  %call9 = tail call %union.tree_node* @build_decl(i32 37, %union.tree_node* %call8, %union.tree_node* %4) #5
  %call10 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8]* @.str74, i64 0, i64 0)) #5
  %5 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !6
  %call11 = tail call %union.tree_node* @build_decl(i32 37, %union.tree_node* %call10, %union.tree_node* %5) #5
  %context = getelementptr inbounds %union.tree_node* %call5, i64 0, i32 0, i32 9
  store %union.tree_node* %call1, %union.tree_node** %context, align 8, !tbaa !66
  %context13 = getelementptr inbounds %union.tree_node* %call7, i64 0, i32 0, i32 9
  store %union.tree_node* %call1, %union.tree_node** %context13, align 8, !tbaa !66
  %context15 = getelementptr inbounds %union.tree_node* %call9, i64 0, i32 0, i32 9
  store %union.tree_node* %call1, %union.tree_node** %context15, align 8, !tbaa !66
  %context17 = getelementptr inbounds %union.tree_node* %call11, i64 0, i32 0, i32 9
  store %union.tree_node* %call1, %union.tree_node** %context17, align 8, !tbaa !66
  %chain = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call3, %union.tree_node** %chain, align 8, !tbaa !27
  %6 = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 11
  store %union.tree_node* %call3, %union.tree_node** %6, align 8, !tbaa !68
  %values = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 1
  %call5.c = bitcast %union.tree_node* %call5 to i8*
  store i8* %call5.c, i8** %values, align 8, !tbaa !69
  %chain20 = getelementptr inbounds %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call7, %union.tree_node** %chain20, align 8, !tbaa !27
  %chain22 = getelementptr inbounds %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call9, %union.tree_node** %chain22, align 8, !tbaa !27
  %chain24 = getelementptr inbounds %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call11, %union.tree_node** %chain24, align 8, !tbaa !27
  tail call void @layout_type(%union.tree_node* %call1) #5
  %7 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !6
  %call25 = tail call %union.tree_node* @build_index_type(%union.tree_node* %7) #5
  %call26 = tail call %union.tree_node* @build_array_type(%union.tree_node* %call1, %union.tree_node* %call25) #5
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node* [ %call26, %if.end ], [ %call, %if.then ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @build_pointer_type(%union.tree_node*) #0

declare %union.tree_node* @make_lang_type(i32) #0

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #0

declare %union.tree_node* @get_identifier(i8*) #0

declare void @layout_type(%union.tree_node*) #0

declare %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) #0

declare %union.tree_node* @build_index_type(%union.tree_node*) #0

; Function Attrs: nounwind uwtable
define void @ix86_setup_incoming_varargs(%struct.ix86_args* nocapture readonly %cum, i32 %mode, %union.tree_node* %type, i32* nocapture readnone %pretend_size, i32 %no_rtl) #1 {
entry:
  %next_cum = alloca %struct.ix86_args, align 4
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end90, label %if.end

if.end:                                           ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine = getelementptr inbounds %struct.function* %1, i64 0, i32 51
  %2 = load %struct.machine_function** %machine, align 8, !tbaa !31
  %save_varrargs_registers = getelementptr inbounds %struct.machine_function* %2, i64 0, i32 1
  store i32 1, i32* %save_varrargs_registers, align 4, !tbaa !70
  %3 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  %type1 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type1, align 8, !tbaa !54
  %values = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 1
  %5 = load i8** %values, align 8
  %cmp = icmp eq i8* %5, null
  br i1 %cmp, label %if.end8.critedge, label %land.rhs

land.rhs:                                         ; preds = %if.end
  %6 = bitcast i8* %5 to %union.tree_node*
  %call = tail call %union.tree_node* @tree_last(%union.tree_node* %6) #5
  %value = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 2
  %7 = bitcast i32* %value to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !25
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %cmp5 = icmp eq %union.tree_node* %8, %9
  %10 = bitcast %struct.ix86_args* %next_cum to i8*
  %11 = bitcast %struct.ix86_args* %cum to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 28, i32 4, i1 false), !tbaa.struct !72
  br i1 %cmp5, label %if.end8, label %if.then7

if.then7:                                         ; preds = %land.rhs
  call void @function_arg_advance(%struct.ix86_args* %next_cum, i32 %mode, %union.tree_node* %type, i32 1)
  br label %if.end8

if.end8.critedge:                                 ; preds = %if.end
  %12 = bitcast %struct.ix86_args* %next_cum to i8*
  %13 = bitcast %struct.ix86_args* %cum to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 28, i32 4, i1 false), !tbaa.struct !72
  br label %if.end8

if.end8:                                          ; preds = %land.rhs, %if.end8.critedge, %if.then7
  %tobool9 = icmp eq i32 %no_rtl, 0
  %14 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !6
  %. = select i1 %tobool9, %struct.rtx_def* %14, %struct.rtx_def* null
  %call12 = tail call i64 @get_varargs_alias_set() #5
  %regno = getelementptr inbounds %struct.ix86_args* %next_cum, i64 0, i32 2
  %15 = load i32* %regno, align 4, !tbaa !62
  %16 = load i32* @ix86_regparm, align 4, !tbaa !1
  %cmp13111 = icmp slt i32 %15, %16
  br i1 %cmp13111, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end8
  %sext110 = shl i64 %call12, 32
  %conv23 = ashr exact i64 %sext110, 32
  %17 = sext i32 %15 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ %17, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %18 = load i32* @target_flags, align 4, !tbaa !1
  %and15 = and i32 %18, 33554432
  %19 = lshr exact i32 %and15, 25
  %20 = or i32 %19, 4
  %21 = lshr exact i32 %and15, 23
  %22 = add i32 %21, 4
  %23 = trunc i64 %indvars.iv to i32
  %mul = mul nsw i32 %22, %23
  %conv20 = sext i32 %mul to i64
  %call21 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %., i64 %conv20) #5
  %call22 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %20, %struct.rtx_def* %call21) #5
  tail call void @set_mem_alias_set(%struct.rtx_def* %call22, i64 %conv23) #5
  %24 = load i32* @target_flags, align 4, !tbaa !1
  %and24 = lshr i32 %24, 25
  %25 = and i32 %and24, 1
  %26 = or i32 %25, 4
  %arrayidx = getelementptr inbounds [6 x i32]* @x86_64_int_parameter_registers, i64 0, i64 %indvars.iv
  %27 = load i32* %arrayidx, align 4, !tbaa !1
  %call27 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %26, i32 %27) #5
  %call28 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call22, %struct.rtx_def* %call27) #5
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %28 = load i32* @ix86_regparm, align 4, !tbaa !1
  %29 = trunc i64 %indvars.iv.next to i32
  %cmp13 = icmp slt i32 %29, %28
  br i1 %cmp13, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.end8
  %sse_nregs = getelementptr inbounds %struct.ix86_args* %next_cum, i64 0, i32 4
  %30 = load i32* %sse_nregs, align 4, !tbaa !59
  %tobool29 = icmp eq i32 %30, 0
  br i1 %tobool29, label %if.end90, label %if.then30

if.then30:                                        ; preds = %for.end
  %call31 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %31 = load i32* @target_flags, align 4, !tbaa !1
  %and32 = lshr i32 %31, 25
  %32 = and i32 %and32, 1
  %33 = or i32 %32, 4
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 %33, %struct.rtx_def* %call31) #5
  %34 = load i32* @target_flags, align 4, !tbaa !1
  %and36 = lshr i32 %34, 25
  %35 = and i32 %and36, 1
  %36 = or i32 %35, 4
  %call39 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %36) #5
  %37 = load i32* @target_flags, align 4, !tbaa !1
  %and40 = lshr i32 %37, 25
  %38 = and i32 %and40, 1
  %39 = or i32 %38, 4
  %call43 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %39) #5
  %call44 = tail call %struct.rtx_def* @gen_rtx_REG(i32 2, i32 0) #5
  %call45 = tail call %struct.rtx_def* @gen_zero_extendqidi2(%struct.rtx_def* %call43, %struct.rtx_def* %call44) #5
  %call46 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call45) #5
  %40 = load i32* @target_flags, align 4, !tbaa !1
  %and47 = lshr i32 %40, 25
  %41 = and i32 %and47, 1
  %42 = or i32 %41, 4
  %call50 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #5
  %call51 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %42, %struct.rtx_def* %call43, %struct.rtx_def* %call50) #5
  %call52 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call39, %struct.rtx_def* %call51) #5
  %call53 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call52) #5
  %sse_regno = getelementptr inbounds %struct.ix86_args* %next_cum, i64 0, i32 5
  %43 = load i32* %sse_regno, align 4, !tbaa !63
  %tobool54 = icmp eq i32 %43, 0
  br i1 %tobool54, label %if.else, label %if.then55

if.then55:                                        ; preds = %if.then30
  %mul57 = shl nsw i32 %43, 2
  %conv58 = sext i32 %mul57 to i64
  %call59 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv58) #5
  %call60 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 5, %struct.rtx_def* %call35, %struct.rtx_def* %call59) #5
  %call61 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 5, %struct.rtx_def* %call60) #5
  %call62 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call43, %struct.rtx_def* %call61) #5
  br label %if.end64

if.else:                                          ; preds = %if.then30
  %call63 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call43, %struct.rtx_def* %call35) #5
  br label %if.end64

if.end64:                                         ; preds = %if.else, %if.then55
  %call65 = tail call %struct.rtx_def* @gen_subdi3(%struct.rtx_def* %call43, %struct.rtx_def* %call43, %struct.rtx_def* %call39) #5
  %call66 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call65) #5
  %44 = load i32* @target_flags, align 4, !tbaa !1
  %and67 = lshr i32 %44, 25
  %45 = and i32 %and67, 1
  %46 = or i32 %45, 4
  %call70 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %46) #5
  %47 = load i32* @target_flags, align 4, !tbaa !1
  %and71 = and i32 %47, 33554432
  %tobool72 = icmp ne i32 %and71, 0
  %conv75 = select i1 %tobool72, i64 175, i64 151
  %call76 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %., i64 %conv75) #5
  %call77 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call70, %struct.rtx_def* %call76) #5
  %call78 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call77) #5
  %call79 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call70, i64 -127) #5
  %call80 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call79) #5
  %sext = shl i64 %call12, 32
  %conv81 = ashr exact i64 %sext, 32
  tail call void @set_mem_alias_set(%struct.rtx_def* %call80, i64 %conv81) #5
  %48 = load i32* @target_flags, align 4, !tbaa !1
  %and82 = lshr i32 %48, 20
  %49 = and i32 %and82, 32
  %50 = add i32 %49, 32
  tail call void @set_mem_align(%struct.rtx_def* %call80, i32 %50) #5
  %conv86 = sext i32 %43 to i64
  %call87 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv86) #5
  %call88 = tail call %struct.rtx_def* @gen_sse_prologue_save(%struct.rtx_def* %call80, %struct.rtx_def* %call43, %struct.rtx_def* %call87, %struct.rtx_def* %call31) #5
  %call89 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call88) #5
  br label %if.end90

if.end90:                                         ; preds = %for.end, %entry, %if.end64
  ret void
}

declare i64 @get_varargs_alias_set() #0

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #0

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #0

declare void @set_mem_alias_set(%struct.rtx_def*, i64) #0

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_label_rtx() #0

declare %struct.rtx_def* @gen_rtx_fmt_u00(i32, i32, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_reg_rtx(i32) #0

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_zero_extendqidi2(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_subdi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare void @set_mem_align(%struct.rtx_def*, i32) #0

declare %struct.rtx_def* @gen_sse_prologue_save(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define void @ix86_va_start(i32 %stdarg_p, %union.tree_node* %valist, %struct.rtx_def* %nextarg) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @std_expand_builtin_va_start(i32 %stdarg_p, %union.tree_node* %valist, %struct.rtx_def* %nextarg) #5
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %type = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type, align 8, !tbaa !54
  %values = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 1
  %3 = load i8** %values, align 8
  %chain = bitcast i8* %3 to %union.tree_node**
  %4 = load %union.tree_node** %chain, align 8, !tbaa !27
  %chain4 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %5 = load %union.tree_node** %chain4, align 8, !tbaa !27
  %chain6 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0
  %6 = load %union.tree_node** %chain6, align 8, !tbaa !27
  %type8 = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type8, align 8, !tbaa !54
  %type10 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type10, align 8, !tbaa !54
  %call = tail call %union.tree_node* @build1(i32 41, %union.tree_node* %8, %union.tree_node* %valist) #5
  %type12 = getelementptr inbounds i8* %3, i64 8
  %9 = bitcast i8* %type12 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !54
  %call13 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %10, %union.tree_node* %call, i8* %3) #5
  %type15 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type15, align 8, !tbaa !54
  %call16 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %11, %union.tree_node* %call, %union.tree_node* %4) #5
  %type18 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type18, align 8, !tbaa !54
  %call19 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %12, %union.tree_node* %call, %union.tree_node* %5) #5
  %type21 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type21, align 8, !tbaa !54
  %call22 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %13, %union.tree_node* %call, %union.tree_node* %6) #5
  %14 = load %struct.function** @cfun, align 8, !tbaa !6
  %words23 = getelementptr inbounds %struct.function* %14, i64 0, i32 13, i32 0
  %15 = load i32* %words23, align 4, !tbaa !73
  %conv = sext i32 %15 to i64
  %regno = getelementptr inbounds %struct.function* %14, i64 0, i32 13, i32 2
  %16 = load i32* %regno, align 4, !tbaa !74
  %conv25 = sext i32 %16 to i64
  %sse_regno = getelementptr inbounds %struct.function* %14, i64 0, i32 13, i32 5
  %17 = load i32* %sse_regno, align 4, !tbaa !75
  %conv27 = sext i32 %17 to i64
  %18 = load i8** @ix86_debug_arg_string, align 8, !tbaa !6
  %cmp = icmp eq i8* %18, null
  br i1 %cmp, label %if.end34, label %if.then29

if.then29:                                        ; preds = %if.end
  %19 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([46 x i8]* @.str75, i64 0, i64 0), i32 %15, i32 %16, i32 %17) #10
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then29
  %type36 = getelementptr inbounds %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 1
  %20 = load %union.tree_node** %type36, align 8, !tbaa !54
  %mul = shl nsw i64 %conv25, 3
  %call37 = tail call %union.tree_node* @build_int_2_wide(i64 %mul, i64 0) #5
  %call38 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %20, %union.tree_node* %call13, %union.tree_node* %call37) #5
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call38, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %side_effects_flag, align 8
  %bf.set = or i32 %bf.load, 256
  store i32 %bf.set, i32* %side_effects_flag, align 8
  %21 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call40 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call38, %struct.rtx_def* %21, i32 0, i32 0) #5
  %type42 = getelementptr inbounds %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type42, align 8, !tbaa !54
  %mul43 = shl nsw i64 %conv27, 4
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and44 = and i32 %23, 33554432
  %tobool45 = icmp ne i32 %and44, 0
  %conv47 = select i1 %tobool45, i64 48, i64 24
  %add = add nsw i64 %conv47, %mul43
  %call48 = tail call %union.tree_node* @build_int_2_wide(i64 %add, i64 0) #5
  %call49 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %22, %union.tree_node* %call16, %union.tree_node* %call48) #5
  %side_effects_flag51 = getelementptr inbounds %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 2
  %bf.load52 = load i32* %side_effects_flag51, align 8
  %bf.set54 = or i32 %bf.load52, 256
  store i32 %bf.set54, i32* %side_effects_flag51, align 8
  %24 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call55 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call49, %struct.rtx_def* %24, i32 0, i32 0) #5
  %type57 = getelementptr inbounds %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type57, align 8, !tbaa !54
  %26 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8, !tbaa !6
  %call58 = tail call %union.tree_node* @make_tree(%union.tree_node* %25, %struct.rtx_def* %26) #5
  %cmp59 = icmp eq i32 %15, 0
  br i1 %cmp59, label %if.end71, label %if.then61

if.then61:                                        ; preds = %if.end34
  %27 = load %union.tree_node** %type57, align 8, !tbaa !54
  %28 = load i32* @target_flags, align 4, !tbaa !1
  %and64 = lshr i32 %28, 23
  %29 = and i32 %and64, 4
  %30 = add i32 %29, 4
  %conv67127 = zext i32 %30 to i64
  %mul68 = mul nsw i64 %conv67127, %conv
  %call69 = tail call %union.tree_node* @build_int_2_wide(i64 %mul68, i64 0) #5
  %call70 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %27, %union.tree_node* %call58, %union.tree_node* %call69) #5
  br label %if.end71

if.end71:                                         ; preds = %if.end34, %if.then61
  %t.0 = phi %union.tree_node* [ %call70, %if.then61 ], [ %call58, %if.end34 ]
  %31 = load %union.tree_node** %type57, align 8, !tbaa !54
  %call74 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %31, %union.tree_node* %call19, %union.tree_node* %t.0) #5
  %side_effects_flag76 = getelementptr inbounds %union.tree_node* %call74, i64 0, i32 0, i32 0, i32 2
  %bf.load77 = load i32* %side_effects_flag76, align 8
  %bf.set79 = or i32 %bf.load77, 256
  store i32 %bf.set79, i32* %side_effects_flag76, align 8
  %32 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call80 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call74, %struct.rtx_def* %32, i32 0, i32 0) #5
  %type82 = getelementptr inbounds %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 1
  %33 = load %union.tree_node** %type82, align 8, !tbaa !54
  %34 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !6
  %call83 = tail call %union.tree_node* @make_tree(%union.tree_node* %33, %struct.rtx_def* %34) #5
  %35 = load %union.tree_node** %type82, align 8, !tbaa !54
  %call86 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %35, %union.tree_node* %call22, %union.tree_node* %call83) #5
  %side_effects_flag88 = getelementptr inbounds %union.tree_node* %call86, i64 0, i32 0, i32 0, i32 2
  %bf.load89 = load i32* %side_effects_flag88, align 8
  %bf.set91 = or i32 %bf.load89, 256
  store i32 %bf.set91, i32* %side_effects_flag88, align 8
  %36 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call92 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call86, %struct.rtx_def* %36, i32 0, i32 0) #5
  %37 = load %struct.function** @cfun, align 8, !tbaa !6
  %preferred_stack_boundary = getelementptr inbounds %struct.function* %37, i64 0, i32 53
  store i32 128, i32* %preferred_stack_boundary, align 4, !tbaa !76
  br label %return

return:                                           ; preds = %if.end71, %if.then
  ret void
}

declare void @std_expand_builtin_va_start(i32, %union.tree_node*, %struct.rtx_def*) #0

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #0

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #0

declare %union.tree_node* @build_int_2_wide(i64, i64) #0

declare %struct.rtx_def* @expand_expr(%union.tree_node*, %struct.rtx_def*, i32, i32) #0

declare %union.tree_node* @make_tree(%union.tree_node*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @ix86_va_arg(%union.tree_node* %valist, %union.tree_node* %type) #1 {
entry:
  %class.i = alloca [4 x i32], align 16
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call %struct.rtx_def* @std_expand_builtin_va_arg(%union.tree_node* %valist, %union.tree_node* %type) #5
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !tbaa !6
  %type1 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type1, align 8, !tbaa !54
  %values = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 1
  %3 = load i8** %values, align 8
  %chain = bitcast i8* %3 to %union.tree_node**
  %4 = load %union.tree_node** %chain, align 8, !tbaa !27
  %chain5 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0
  %5 = load %union.tree_node** %chain5, align 8, !tbaa !27
  %chain7 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0
  %6 = load %union.tree_node** %chain7, align 8, !tbaa !27
  %type9 = getelementptr inbounds %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type9, align 8, !tbaa !54
  %type11 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type11, align 8, !tbaa !54
  %call12 = call %union.tree_node* @build1(i32 41, %union.tree_node* %8, %union.tree_node* %valist) #5
  %type14 = getelementptr inbounds i8* %3, i64 8
  %9 = bitcast i8* %type14 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !54
  %call15 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %10, %union.tree_node* %call12, i8* %3) #5
  %type17 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type17, align 8, !tbaa !54
  %call18 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %11, %union.tree_node* %call12, %union.tree_node* %4) #5
  %type20 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type20, align 8, !tbaa !54
  %call21 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %12, %union.tree_node* %call12, %union.tree_node* %5) #5
  %type23 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type23, align 8, !tbaa !54
  %call24 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 39, %union.tree_node* %13, %union.tree_node* %call12, %union.tree_node* %6) #5
  %call25 = call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  %conv = trunc i64 %call25 to i32
  %14 = load i32* @target_flags, align 4, !tbaa !1
  %and26 = and i32 %14, 33554432
  %tobool27 = icmp ne i32 %and26, 0
  %15 = lshr exact i32 %and26, 23
  %16 = add i32 %15, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %16
  %div = sdiv i32 %sub, %16
  %type31 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type31, i64 0, i32 6
  %bf.load = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %cond34 = select i1 %tobool27, i32 6, i32 3
  %17 = lshr exact i32 %and26, 22
  %call38 = call fastcc %struct.rtx_def* @construct_container(i32 %bf.clear, %union.tree_node* %type, i32 0, i32 %cond34, i32 %17, i32* getelementptr inbounds ([6 x i32]* @ix86_va_arg.intreg, i64 0, i64 0), i32 0)
  %18 = load i32* @target_flags, align 4, !tbaa !1
  %and39 = lshr i32 %18, 25
  %19 = and i32 %and39, 1
  %20 = or i32 %19, 4
  %call42 = call %struct.rtx_def* @gen_reg_rtx(i32 %20) #5
  %tobool43 = icmp ne %struct.rtx_def* %call38, null
  br i1 %tobool43, label %if.then44, label %if.end380

if.then44:                                        ; preds = %if.end
  %call45 = call %struct.rtx_def* @gen_label_rtx() #5
  %call46 = call %struct.rtx_def* @gen_label_rtx() #5
  %bf.load49 = load i32* %mode, align 4
  %bf.lshr50 = lshr i32 %bf.load49, 9
  %bf.clear51 = and i32 %bf.lshr50, 127
  %21 = bitcast [4 x i32]* %class.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %21) #5
  %arraydecay.i = getelementptr inbounds [4 x i32]* %class.i, i64 0, i64 0
  %call.i = call fastcc i32 @classify_argument(i32 %bf.clear51, %union.tree_node* %type, i32* %arraydecay.i, i32 0) #5
  %22 = icmp sgt i32 %call.i, 0
  br i1 %22, label %for.body.lr.ph.i, label %lor.end

for.body.lr.ph.i:                                 ; preds = %if.then44
  %23 = sext i32 %call.i to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.backedge.i, %for.body.lr.ph.i
  %needed_intregs.0.load589 = phi i32 [ 0, %for.body.lr.ph.i ], [ %needed_intregs.0.load588, %for.cond.backedge.i ]
  %needed_sseregs.0.load586 = phi i32 [ 0, %for.body.lr.ph.i ], [ %needed_sseregs.0.load585, %for.cond.backedge.i ]
  %indvars.iv.i = phi i64 [ %23, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.backedge.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx.i = getelementptr inbounds [4 x i32]* %class.i, i64 0, i64 %indvars.iv.next.i
  %24 = load i32* %arrayidx.i, align 4, !tbaa !5
  switch i32 %24, label %for.cond.backedge.i [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb.i
    i32 3, label %sw.bb1.i
    i32 4, label %sw.bb1.i
    i32 5, label %sw.bb1.i
    i32 9, label %sw.bb8.i
    i32 8, label %examine_argument.exit
    i32 7, label %examine_argument.exit
  ]

sw.bb.i:                                          ; preds = %for.body.i, %for.body.i
  %inc.i = add nsw i32 %needed_intregs.0.load589, 1
  br label %for.cond.backedge.i

sw.bb1.i:                                         ; preds = %for.body.i, %for.body.i, %for.body.i
  %inc2.i = add nsw i32 %needed_sseregs.0.load586, 1
  br label %for.cond.backedge.i

for.cond.backedge.i:                              ; preds = %sw.bb1.i, %sw.bb.i, %for.body.i
  %needed_intregs.0.load588 = phi i32 [ %needed_intregs.0.load589, %sw.bb1.i ], [ %inc.i, %sw.bb.i ], [ %needed_intregs.0.load589, %for.body.i ]
  %needed_sseregs.0.load585 = phi i32 [ %inc2.i, %sw.bb1.i ], [ %needed_sseregs.0.load586, %sw.bb.i ], [ %needed_sseregs.0.load586, %for.body.i ]
  %25 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp sgt i32 %25, 0
  br i1 %cmp.i, label %for.body.i, label %examine_argument.exit

sw.bb8.i:                                         ; preds = %for.body.i
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 1953, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.examine_argument, i64 0, i64 0)) #8
  unreachable

examine_argument.exit:                            ; preds = %for.body.i, %for.body.i, %for.cond.backedge.i
  %needed_intregs.0.load590 = phi i32 [ %needed_intregs.0.load588, %for.cond.backedge.i ], [ %needed_intregs.0.load589, %for.body.i ], [ %needed_intregs.0.load589, %for.body.i ]
  %needed_sseregs.0.load587 = phi i32 [ %needed_sseregs.0.load585, %for.cond.backedge.i ], [ %needed_sseregs.0.load586, %for.body.i ], [ %needed_sseregs.0.load586, %for.body.i ]
  call void @llvm.lifetime.end(i64 16, i8* %21) #5
  %tobool53 = icmp eq i32 %needed_intregs.0.load590, 0
  br i1 %tobool53, label %lor.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %examine_argument.exit
  %align = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %26 = bitcast %union.tree_node** %align to i32*
  %27 = load i32* %26, align 4, !tbaa !65
  %cmp = icmp ugt i32 %27, 64
  br i1 %cmp, label %if.else195, label %lor.end

lor.end:                                          ; preds = %if.then44, %land.lhs.true, %examine_argument.exit
  %tobool53597 = phi i1 [ true, %examine_argument.exit ], [ false, %land.lhs.true ], [ true, %if.then44 ]
  %needed_sseregs.0.load587595 = phi i32 [ %needed_sseregs.0.load587, %examine_argument.exit ], [ %needed_sseregs.0.load587, %land.lhs.true ], [ 0, %if.then44 ]
  %needed_intregs.0.load590593 = phi i32 [ 0, %examine_argument.exit ], [ %needed_intregs.0.load590, %land.lhs.true ], [ 0, %if.then44 ]
  %align57 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %28 = bitcast %union.tree_node** %align57 to i32*
  %29 = load i32* %28, align 4, !tbaa !65
  %cmp58 = icmp ugt i32 %29, 128
  %lor.ext = zext i1 %cmp58 to i32
  br i1 %cmp58, label %if.end192, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %lor.end
  %30 = getelementptr inbounds %struct.rtx_def* %call38, i64 0, i32 0
  %bf.load62 = load i32* %30, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  %cmp64 = icmp eq i32 %bf.clear63, 61
  br i1 %cmp64, label %if.end192, label %if.then66

if.then66:                                        ; preds = %land.lhs.true61
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call38, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %31 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %arrayidx67 = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 1, i64 0
  %32 = load %struct.rtx_def** %arrayidx67, align 8, !tbaa !6
  %arrayidx69 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %arrayidx71 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx71 to i32*
  %34 = load i32* %rtuint, align 4, !tbaa !1
  switch i32 %34, label %for.cond148.preheader [
    i32 52, label %for.cond.preheader
    i32 51, label %for.cond.preheader
    i32 50, label %for.cond.preheader
    i32 49, label %for.cond.preheader
    i32 48, label %for.cond.preheader
    i32 47, label %for.cond.preheader
    i32 46, label %for.cond.preheader
    i32 45, label %for.cond.preheader
    i32 28, label %for.cond.preheader
    i32 27, label %for.cond.preheader
    i32 26, label %for.cond.preheader
    i32 25, label %for.cond.preheader
    i32 24, label %for.cond.preheader
    i32 23, label %for.cond.preheader
    i32 22, label %for.cond.preheader
    i32 21, label %for.cond.preheader
  ]

for.cond.preheader:                               ; preds = %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66, %if.then66
  %num_elem645 = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 0
  %35 = load i32* %num_elem645, align 4, !tbaa !10
  %cmp119646 = icmp sgt i32 %35, 0
  br i1 %cmp119646, label %for.body, label %if.end192

for.cond148.preheader:                            ; preds = %if.then66
  %num_elem152639 = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 0
  %36 = load i32* %num_elem152639, align 4, !tbaa !10
  %cmp153640 = icmp sgt i32 %36, 0
  br i1 %cmp153640, label %for.body159, label %if.end192

for.body:                                         ; preds = %for.cond.preheader, %for.inc.for.body_crit_edge
  %37 = phi %struct.rtx_def* [ %.pre656, %for.inc.for.body_crit_edge ], [ %32, %for.cond.preheader ]
  %indvars.iv654 = phi i64 [ %indvars.iv.next655, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader ]
  %need_temp.0650 = phi i32 [ 0, %for.inc.for.body_crit_edge ], [ %lor.ext, %for.cond.preheader ]
  %fld127 = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 1
  %rtx129 = bitcast [1 x %union.rtunion_def]* %fld127 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx129, align 8, !tbaa !6
  %arrayidx131 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 0
  %rtuint132 = bitcast %union.rtunion_def* %arrayidx131 to i32*
  %39 = load i32* %rtuint132, align 4, !tbaa !1
  %40 = trunc i64 %indvars.iv654 to i32
  %add133 = add i32 %40, 21
  %cmp134 = icmp eq i32 %39, %add133
  br i1 %cmp134, label %lor.lhs.false136, label %if.else195

lor.lhs.false136:                                 ; preds = %for.body
  %arrayidx138 = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 1, i64 1
  %rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx139, align 8, !tbaa !6
  %rtwint = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 0, i32 0
  %42 = load i64* %rtwint, align 8, !tbaa !77
  %mul = shl nsw i32 %40, 4
  %conv142 = sext i32 %mul to i64
  %cmp143 = icmp eq i64 %42, %conv142
  br i1 %cmp143, label %for.inc, label %if.else195

for.inc:                                          ; preds = %lor.lhs.false136
  %indvars.iv.next655 = add nuw nsw i64 %indvars.iv654, 1
  %43 = trunc i64 %indvars.iv.next655 to i32
  %cmp119 = icmp slt i32 %43, %35
  %lnot = icmp eq i32 %need_temp.0650, 0
  %or.cond550 = and i1 %cmp119, %lnot
  br i1 %or.cond550, label %for.inc.for.body_crit_edge, label %if.end192

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  %arrayidx126.phi.trans.insert = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 1, i64 %indvars.iv.next655
  %.pre656 = load %struct.rtx_def** %arrayidx126.phi.trans.insert, align 8, !tbaa !6
  br label %for.body

for.body159:                                      ; preds = %for.cond148.preheader, %for.inc188.for.body159_crit_edge
  %44 = phi %struct.rtx_def* [ %.pre, %for.inc188.for.body159_crit_edge ], [ %32, %for.cond148.preheader ]
  %indvars.iv652 = phi i64 [ %indvars.iv.next653, %for.inc188.for.body159_crit_edge ], [ 0, %for.cond148.preheader ]
  %need_temp.2643 = phi i32 [ 0, %for.inc188.for.body159_crit_edge ], [ %lor.ext, %for.cond148.preheader ]
  %fld167 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 1
  %rtx169 = bitcast [1 x %union.rtunion_def]* %fld167 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx169, align 8, !tbaa !6
  %arrayidx171 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1, i64 0
  %rtuint172 = bitcast %union.rtunion_def* %arrayidx171 to i32*
  %46 = load i32* %rtuint172, align 4, !tbaa !1
  %47 = trunc i64 %indvars.iv652 to i32
  %cmp173 = icmp eq i32 %46, %47
  br i1 %cmp173, label %lor.lhs.false175, label %if.else195

lor.lhs.false175:                                 ; preds = %for.body159
  %arrayidx177 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 1, i64 1
  %rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx178, align 8, !tbaa !6
  %rtwint181 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 1, i64 0, i32 0
  %49 = load i64* %rtwint181, align 8, !tbaa !77
  %mul182 = shl nsw i32 %46, 3
  %conv183 = sext i32 %mul182 to i64
  %cmp184 = icmp eq i64 %49, %conv183
  br i1 %cmp184, label %for.inc188, label %if.else195

for.inc188:                                       ; preds = %lor.lhs.false175
  %indvars.iv.next653 = add nuw nsw i64 %indvars.iv652, 1
  %50 = trunc i64 %indvars.iv.next653 to i32
  %cmp153 = icmp slt i32 %50, %36
  %lnot157 = icmp eq i32 %need_temp.2643, 0
  %or.cond551 = and i1 %cmp153, %lnot157
  br i1 %or.cond551, label %for.inc188.for.body159_crit_edge, label %if.end192

for.inc188.for.body159_crit_edge:                 ; preds = %for.inc188
  %arrayidx166.phi.trans.insert = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 1, i64 %indvars.iv.next653
  %.pre = load %struct.rtx_def** %arrayidx166.phi.trans.insert, align 8, !tbaa !6
  br label %for.body159

if.end192:                                        ; preds = %for.inc, %for.inc188, %for.cond.preheader, %for.cond148.preheader, %land.lhs.true61, %lor.end
  %need_temp.4 = phi i32 [ %lor.ext, %lor.end ], [ %lor.ext, %land.lhs.true61 ], [ %lor.ext, %for.cond148.preheader ], [ %lor.ext, %for.cond.preheader ], [ %need_temp.2643, %for.inc188 ], [ %need_temp.0650, %for.inc ]
  %tobool193 = icmp eq i32 %need_temp.4, 0
  br i1 %tobool193, label %if.end204, label %if.else195

if.else195:                                       ; preds = %lor.lhs.false136, %for.body, %lor.lhs.false175, %for.body159, %if.end192, %land.lhs.true
  %tobool53596599608 = phi i1 [ %tobool53597, %if.end192 ], [ false, %land.lhs.true ], [ %tobool53597, %for.body159 ], [ %tobool53597, %lor.lhs.false175 ], [ %tobool53597, %for.body ], [ %tobool53597, %lor.lhs.false136 ]
  %needed_sseregs.0.load587594600606 = phi i32 [ %needed_sseregs.0.load587595, %if.end192 ], [ %needed_sseregs.0.load587, %land.lhs.true ], [ %needed_sseregs.0.load587595, %for.body159 ], [ %needed_sseregs.0.load587595, %lor.lhs.false175 ], [ %needed_sseregs.0.load587595, %for.body ], [ %needed_sseregs.0.load587595, %lor.lhs.false136 ]
  %needed_intregs.0.load590592601604 = phi i32 [ %needed_intregs.0.load590593, %if.end192 ], [ %needed_intregs.0.load590, %land.lhs.true ], [ %needed_intregs.0.load590593, %for.body159 ], [ %needed_intregs.0.load590593, %lor.lhs.false175 ], [ %needed_intregs.0.load590593, %for.body ], [ %needed_intregs.0.load590593, %lor.lhs.false136 ]
  %51 = load i32* @target_flags, align 4, !tbaa !1
  %and196 = lshr i32 %51, 25
  %52 = and i32 %and196, 1
  %53 = or i32 %52, 4
  %call199 = call %struct.rtx_def* @gen_reg_rtx(i32 %53) #5
  %54 = load i32* @target_flags, align 4, !tbaa !1
  %and200 = lshr i32 %54, 25
  %55 = and i32 %and200, 1
  %56 = or i32 %55, 4
  %call203 = call %struct.rtx_def* @gen_reg_rtx(i32 %56) #5
  br i1 %tobool53596599608, label %if.end216, label %if.then206

if.end204:                                        ; preds = %if.end192
  br i1 %tobool53597, label %if.end216, label %if.then206

if.then206:                                       ; preds = %if.else195, %if.end204
  %int_addr_rtx.0621 = phi %struct.rtx_def* [ %call199, %if.else195 ], [ %call42, %if.end204 ]
  %sse_addr_rtx.0619 = phi %struct.rtx_def* [ %call203, %if.else195 ], [ %call42, %if.end204 ]
  %needed_intregs.0.load590592601603617 = phi i32 [ %needed_intregs.0.load590592601604, %if.else195 ], [ %needed_intregs.0.load590593, %if.end204 ]
  %needed_sseregs.0.load587594600605615 = phi i32 [ %needed_sseregs.0.load587594600606, %if.else195 ], [ %needed_sseregs.0.load587595, %if.end204 ]
  %tobool193609611 = phi i1 [ true, %if.else195 ], [ false, %if.end204 ]
  %call207 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call15, %struct.rtx_def* null, i32 4, i32 0) #5
  %57 = load i32* @target_flags, align 4, !tbaa !1
  %and208 = and i32 %57, 33554432
  %tobool209 = icmp ne i32 %and208, 0
  %cond210 = select i1 %tobool209, i32 6, i32 3
  %sub211 = sub nsw i32 %cond210, %needed_intregs.0.load590592601603617
  %add212 = shl i32 %sub211, 3
  %mul213 = add i32 %add212, 8
  %conv214 = sext i32 %mul213 to i64
  %call215 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv214) #5
  %58 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !6
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call207, %struct.rtx_def* %call215, i32 104, %struct.rtx_def* %58, i32 4, i32 1, %struct.rtx_def* %call46) #5
  br label %if.end216

if.end216:                                        ; preds = %if.else195, %if.end204, %if.then206
  %int_addr_rtx.0622 = phi %struct.rtx_def* [ %call199, %if.else195 ], [ %call42, %if.end204 ], [ %int_addr_rtx.0621, %if.then206 ]
  %sse_addr_rtx.0620 = phi %struct.rtx_def* [ %call203, %if.else195 ], [ %call42, %if.end204 ], [ %sse_addr_rtx.0619, %if.then206 ]
  %needed_intregs.0.load590592601603618 = phi i32 [ %needed_intregs.0.load590592601604, %if.else195 ], [ %needed_intregs.0.load590593, %if.end204 ], [ %needed_intregs.0.load590592601603617, %if.then206 ]
  %needed_sseregs.0.load587594600605616 = phi i32 [ %needed_sseregs.0.load587594600606, %if.else195 ], [ %needed_sseregs.0.load587595, %if.end204 ], [ %needed_sseregs.0.load587594600605615, %if.then206 ]
  %tobool53596599607614 = phi i1 [ true, %if.else195 ], [ true, %if.end204 ], [ false, %if.then206 ]
  %tobool193609612 = phi i1 [ true, %if.else195 ], [ false, %if.end204 ], [ %tobool193609611, %if.then206 ]
  %tobool217 = icmp eq i32 %needed_sseregs.0.load587594600605616, 0
  br i1 %tobool217, label %if.end233, label %if.then218

if.then218:                                       ; preds = %if.end216
  %call219 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call18, %struct.rtx_def* null, i32 4, i32 0) #5
  %59 = load i32* @target_flags, align 4, !tbaa !1
  %and220 = and i32 %59, 33554432
  %tobool221 = icmp ne i32 %and220, 0
  %60 = lshr exact i32 %and220, 22
  %sub223 = sub nsw i32 %60, %needed_sseregs.0.load587594600605616
  %add224 = shl i32 %sub223, 4
  %mul225 = select i1 %tobool221, i32 64, i32 40
  %add230 = add i32 %mul225, %add224
  %conv231 = sext i32 %add230 to i64
  %call232 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv231) #5
  %61 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !6
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call219, %struct.rtx_def* %call232, i32 104, %struct.rtx_def* %61, i32 4, i32 1, %struct.rtx_def* %call46) #5
  br label %if.end233

if.end233:                                        ; preds = %if.end216, %if.then218
  br i1 %tobool53596599607614, label %if.end246, label %if.then235

if.then235:                                       ; preds = %if.end233
  %62 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !6
  %call236 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %62, %union.tree_node* %call24, %union.tree_node* %call15) #5
  %63 = load i32* @target_flags, align 4, !tbaa !1
  %and237 = lshr i32 %63, 25
  %64 = and i32 %and237, 1
  %65 = or i32 %64, 4
  %call240 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call236, %struct.rtx_def* %int_addr_rtx.0622, i32 %65, i32 0) #5
  %cmp241 = icmp eq %struct.rtx_def* %call240, %int_addr_rtx.0622
  br i1 %cmp241, label %if.end246, label %if.then243

if.then243:                                       ; preds = %if.then235
  %call244 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %int_addr_rtx.0622, %struct.rtx_def* %call240) #5
  br label %if.end246

if.end246:                                        ; preds = %if.then235, %if.end233, %if.then243
  br i1 %tobool217, label %if.end259, label %if.then248

if.then248:                                       ; preds = %if.end246
  %66 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !6
  %call249 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %66, %union.tree_node* %call24, %union.tree_node* %call18) #5
  %67 = load i32* @target_flags, align 4, !tbaa !1
  %and250 = lshr i32 %67, 25
  %68 = and i32 %and250, 1
  %69 = or i32 %68, 4
  %call253 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call249, %struct.rtx_def* %sse_addr_rtx.0620, i32 %69, i32 0) #5
  %cmp254 = icmp eq %struct.rtx_def* %call253, %sse_addr_rtx.0620
  br i1 %cmp254, label %if.end259, label %if.then256

if.then256:                                       ; preds = %if.then248
  %call257 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %sse_addr_rtx.0620, %struct.rtx_def* %call253) #5
  br label %if.end259

if.end259:                                        ; preds = %if.then248, %if.end246, %if.then256
  br i1 %tobool193609612, label %if.then261, label %if.end341

if.then261:                                       ; preds = %if.end259
  %call263 = call %struct.rtx_def* @assign_temp(%union.tree_node* %type, i32 0, i32 1, i32 0) #5
  %arrayidx265 = getelementptr inbounds %struct.rtx_def* %call263, i64 0, i32 1, i64 0
  %rtx266 = bitcast %union.rtunion_def* %arrayidx265 to %struct.rtx_def**
  %70 = load %struct.rtx_def** %rtx266, align 8, !tbaa !6
  %call267 = call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %70) #5
  %call268 = call i64 @get_varargs_alias_set() #5
  call void @set_mem_alias_set(%struct.rtx_def* %call267, i64 %call268) #5
  call void @set_mem_align(%struct.rtx_def* %call267, i32 8) #5
  %arrayidx271 = getelementptr inbounds %struct.rtx_def* %call38, i64 0, i32 1, i64 0
  %rtvec272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.rtvec_def**
  %71 = load %struct.rtvec_def** %rtvec272, align 8, !tbaa !6
  %num_elem273636 = getelementptr inbounds %struct.rtvec_def* %71, i64 0, i32 0
  %72 = load i32* %num_elem273636, align 4, !tbaa !10
  %cmp274637 = icmp sgt i32 %72, 0
  br i1 %cmp274637, label %for.body276, label %if.end341

for.body276:                                      ; preds = %if.then261, %if.end325
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end325 ], [ 0, %if.then261 ]
  %73 = phi %struct.rtvec_def* [ %80, %if.end325 ], [ %71, %if.then261 ]
  %arrayidx283 = getelementptr inbounds %struct.rtvec_def* %73, i64 0, i32 1, i64 %indvars.iv
  %74 = load %struct.rtx_def** %arrayidx283, align 8, !tbaa !6
  %fld284 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 1
  %rtx286 = bitcast [1 x %union.rtunion_def]* %fld284 to %struct.rtx_def**
  %75 = load %struct.rtx_def** %rtx286, align 8, !tbaa !6
  %76 = getelementptr inbounds %struct.rtx_def* %75, i64 0, i32 0
  %bf.load288 = load i32* %76, align 8
  %bf.lshr289 = lshr i32 %bf.load288, 16
  %bf.clear290 = and i32 %bf.lshr289, 255
  %arrayidx292 = getelementptr inbounds %struct.rtx_def* %75, i64 0, i32 1, i64 0
  %rtuint293 = bitcast %union.rtunion_def* %arrayidx292 to i32*
  %77 = load i32* %rtuint293, align 4, !tbaa !1
  switch i32 %77, label %if.else320 [
    i32 52, label %if.then314
    i32 51, label %if.then314
    i32 50, label %if.then314
    i32 49, label %if.then314
    i32 48, label %if.then314
    i32 47, label %if.then314
    i32 46, label %if.then314
    i32 45, label %if.then314
    i32 28, label %if.then314
    i32 27, label %if.then314
    i32 26, label %if.then314
    i32 25, label %if.then314
    i32 24, label %if.then314
    i32 23, label %if.then314
    i32 22, label %if.then314
    i32 21, label %if.then314
  ]

if.then314:                                       ; preds = %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276, %for.body276
  %sub318 = shl i32 %77, 4
  %mul319 = add i32 %sub318, -336
  br label %if.end325

if.else320:                                       ; preds = %for.body276
  %mul324 = shl i32 %77, 3
  br label %if.end325

if.end325:                                        ; preds = %if.else320, %if.then314
  %src_addr.0 = phi %struct.rtx_def* [ %sse_addr_rtx.0620, %if.then314 ], [ %int_addr_rtx.0622, %if.else320 ]
  %src_offset.0 = phi i32 [ %mul319, %if.then314 ], [ %mul324, %if.else320 ]
  %call326 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear290, %struct.rtx_def* %src_addr.0) #5
  %call327 = call i64 @get_varargs_alias_set() #5
  call void @set_mem_alias_set(%struct.rtx_def* %call326, i64 %call327) #5
  %conv328 = sext i32 %src_offset.0 to i64
  %call329 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call326, i32 %bf.clear290, i64 %conv328, i32 1, i32 1) #5
  %arrayidx331 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 1, i64 1
  %rtx332 = bitcast %union.rtunion_def* %arrayidx331 to %struct.rtx_def**
  %78 = load %struct.rtx_def** %rtx332, align 8, !tbaa !6
  %rtwint335 = getelementptr inbounds %struct.rtx_def* %78, i64 0, i32 1, i64 0, i32 0
  %79 = load i64* %rtwint335, align 8, !tbaa !77
  %call336 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call267, i32 %bf.clear290, i64 %79, i32 1, i32 1) #5
  %call337 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call336, %struct.rtx_def* %call329) #5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %80 = load %struct.rtvec_def** %rtvec272, align 8, !tbaa !6
  %num_elem273 = getelementptr inbounds %struct.rtvec_def* %80, i64 0, i32 0
  %81 = load i32* %num_elem273, align 4, !tbaa !10
  %82 = trunc i64 %indvars.iv.next to i32
  %cmp274 = icmp slt i32 %82, %81
  br i1 %cmp274, label %for.body276, label %if.end341

if.end341:                                        ; preds = %if.end325, %if.then261, %if.end259
  %addr_rtx.0 = phi %struct.rtx_def* [ %call42, %if.end259 ], [ %70, %if.then261 ], [ %70, %if.end325 ]
  br i1 %tobool53596599607614, label %if.end357, label %if.then343

if.then343:                                       ; preds = %if.end341
  %type345 = getelementptr inbounds %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 1
  %83 = load %union.tree_node** %type345, align 8, !tbaa !54
  %mul346 = shl nsw i32 %needed_intregs.0.load590592601603618, 3
  %conv347 = sext i32 %mul346 to i64
  %call348 = call %union.tree_node* @build_int_2_wide(i64 %conv347, i64 0) #5
  %call349 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %83, %union.tree_node* %call15, %union.tree_node* %call348) #5
  %84 = load %union.tree_node** %type345, align 8, !tbaa !54
  %call352 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %84, %union.tree_node* %call15, %union.tree_node* %call349) #5
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call352, i64 0, i32 0, i32 0, i32 2
  %bf.load354 = load i32* %side_effects_flag, align 8
  %bf.set = or i32 %bf.load354, 256
  store i32 %bf.set, i32* %side_effects_flag, align 8
  %85 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call356 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call352, %struct.rtx_def* %85, i32 0, i32 0) #5
  br label %if.end357

if.end357:                                        ; preds = %if.end341, %if.then343
  br i1 %tobool217, label %if.end375, label %if.then359

if.then359:                                       ; preds = %if.end357
  %type361 = getelementptr inbounds %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 1
  %86 = load %union.tree_node** %type361, align 8, !tbaa !54
  %mul362 = shl nsw i32 %needed_sseregs.0.load587594600605616, 4
  %conv363 = sext i32 %mul362 to i64
  %call364 = call %union.tree_node* @build_int_2_wide(i64 %conv363, i64 0) #5
  %call365 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %86, %union.tree_node* %call18, %union.tree_node* %call364) #5
  %87 = load %union.tree_node** %type361, align 8, !tbaa !54
  %call368 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %87, %union.tree_node* %call18, %union.tree_node* %call365) #5
  %side_effects_flag370 = getelementptr inbounds %union.tree_node* %call368, i64 0, i32 0, i32 0, i32 2
  %bf.load371 = load i32* %side_effects_flag370, align 8
  %bf.set373 = or i32 %bf.load371, 256
  store i32 %bf.set373, i32* %side_effects_flag370, align 8
  %88 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call374 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call368, %struct.rtx_def* %88, i32 0, i32 0) #5
  br label %if.end375

if.end375:                                        ; preds = %if.end357, %if.then359
  %call376 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call45) #5
  %call377 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call376) #5
  %call378 = call %struct.rtx_def* @emit_barrier() #5
  %call379 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call46) #5
  br label %if.end380

if.end380:                                        ; preds = %if.end375, %if.end
  %addr_rtx.1 = phi %struct.rtx_def* [ %addr_rtx.0, %if.end375 ], [ %call42, %if.end ]
  %lab_over.0 = phi %struct.rtx_def* [ %call45, %if.end375 ], [ null, %if.end ]
  %89 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = and i32 %89, 33554432
  %tobool.i554 = icmp eq i32 %and.i, 0
  br i1 %tobool.i554, label %if.end400, label %if.end.i

if.end.i:                                         ; preds = %if.end380
  %tobool3.i = icmp eq %union.tree_node* %type, null
  br i1 %tobool3.i, label %if.else.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %align6.i = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %90 = bitcast %union.tree_node** %align6.i to i32*
  %91 = load i32* %90, align 4, !tbaa !65
  br label %if.end7.i

if.else.i:                                        ; preds = %if.end.i
  %call.i555 = call i32 @get_mode_alignment(i32 0) #5
  %.pre.i = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.else.i, %if.then4.i
  %92 = phi i32 [ %89, %if.then4.i ], [ %.pre.i, %if.else.i ]
  %align.0.i = phi i32 [ %91, %if.then4.i ], [ %call.i555, %if.else.i ]
  %and8.i = lshr i32 %92, 20
  %93 = and i32 %and8.i, 32
  %94 = add i32 %93, 32
  %cmp.i556 = icmp slt i32 %align.0.i, %94
  %.align.0.i = select i1 %cmp.i556, i32 %94, i32 %align.0.i
  %cmp382 = icmp slt i32 %.align.0.i, 65
  br i1 %cmp382, label %if.end400, label %if.else385

if.else385:                                       ; preds = %if.end7.i
  %and.i558 = and i32 %92, 33554432
  %tobool.i559 = icmp eq i32 %and.i558, 0
  br i1 %tobool.i559, label %ix86_function_arg_boundary.exit575, label %if.end.i561

if.end.i561:                                      ; preds = %if.else385
  br i1 %tobool3.i, label %if.else.i566, label %if.then4.i563

if.then4.i563:                                    ; preds = %if.end.i561
  %align6.i562 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 7
  %95 = bitcast %union.tree_node** %align6.i562 to i32*
  %96 = load i32* %95, align 4, !tbaa !65
  br label %if.end7.i573

if.else.i566:                                     ; preds = %if.end.i561
  %call.i564 = call i32 @get_mode_alignment(i32 0) #5
  %.pre.i565 = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end7.i573

if.end7.i573:                                     ; preds = %if.else.i566, %if.then4.i563
  %97 = phi i32 [ %92, %if.then4.i563 ], [ %.pre.i565, %if.else.i566 ]
  %align.0.i567 = phi i32 [ %96, %if.then4.i563 ], [ %call.i564, %if.else.i566 ]
  %and8.i568 = lshr i32 %97, 20
  %98 = and i32 %and8.i568, 32
  %99 = add i32 %98, 32
  %cmp.i569 = icmp slt i32 %align.0.i567, %99
  %.align.0.i570 = select i1 %cmp.i569, i32 %99, i32 %align.0.i567
  %cmp16.i571 = icmp sgt i32 %.align.0.i570, 128
  %.align.0.i570.op = sdiv i32 %.align.0.i570, 8
  %100 = sext i32 %.align.0.i570.op to i64
  %phitmp628 = select i1 %cmp16.i571, i64 16, i64 %100
  br label %ix86_function_arg_boundary.exit575

ix86_function_arg_boundary.exit575:               ; preds = %if.else385, %if.end7.i573
  %retval.0.i574 = phi i64 [ %phitmp628, %if.end7.i573 ], [ 4, %if.else385 ]
  %type391 = getelementptr inbounds %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 1
  %101 = load %union.tree_node** %type391, align 8, !tbaa !54
  %sub392 = add nsw i64 %retval.0.i574, -1
  %call393 = call %union.tree_node* @build_int_2_wide(i64 %sub392, i64 0) #5
  %call394 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %101, %union.tree_node* %call21, %union.tree_node* %call393) #5
  %type396 = getelementptr inbounds %union.tree_node* %call394, i64 0, i32 0, i32 0, i32 1
  %102 = load %union.tree_node** %type396, align 8, !tbaa !54
  %sub397 = sub nsw i64 0, %retval.0.i574
  %call398 = call %union.tree_node* @build_int_2_wide(i64 %sub397, i64 -1) #5
  %call399 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 88, %union.tree_node* %102, %union.tree_node* %call394, %union.tree_node* %call398) #5
  br label %if.end400

if.end400:                                        ; preds = %if.end7.i, %if.end380, %ix86_function_arg_boundary.exit575
  %t.0 = phi %union.tree_node* [ %call399, %ix86_function_arg_boundary.exit575 ], [ %call21, %if.end380 ], [ %call21, %if.end7.i ]
  %call401 = call %union.tree_node* @save_expr(%union.tree_node* %t.0) #5
  %103 = load i32* @target_flags, align 4, !tbaa !1
  %and402 = lshr i32 %103, 25
  %104 = and i32 %and402, 1
  %105 = or i32 %104, 4
  %call405 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call401, %struct.rtx_def* %addr_rtx.1, i32 %105, i32 0) #5
  %cmp406 = icmp eq %struct.rtx_def* %call405, %addr_rtx.1
  br i1 %cmp406, label %if.end410, label %if.then408

if.then408:                                       ; preds = %if.end400
  %call409 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %addr_rtx.1, %struct.rtx_def* %call405) #5
  br label %if.end410

if.end410:                                        ; preds = %if.end400, %if.then408
  %type412 = getelementptr inbounds %union.tree_node* %call401, i64 0, i32 0, i32 0, i32 1
  %106 = load %union.tree_node** %type412, align 8, !tbaa !54
  %107 = load i32* @target_flags, align 4, !tbaa !1
  %and413 = lshr i32 %107, 23
  %108 = and i32 %and413, 4
  %109 = add i32 %108, 4
  %mul416 = mul nsw i32 %109, %div
  %conv417 = sext i32 %mul416 to i64
  %call418 = call %union.tree_node* @build_int_2_wide(i64 %conv417, i64 0) #5
  %call419 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %106, %union.tree_node* %call401, %union.tree_node* %call418) #5
  %type421 = getelementptr inbounds %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 1
  %110 = load %union.tree_node** %type421, align 8, !tbaa !54
  %call422 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 48, %union.tree_node* %110, %union.tree_node* %call21, %union.tree_node* %call419) #5
  %side_effects_flag424 = getelementptr inbounds %union.tree_node* %call422, i64 0, i32 0, i32 0, i32 2
  %bf.load425 = load i32* %side_effects_flag424, align 8
  %bf.set427 = or i32 %bf.load425, 256
  store i32 %bf.set427, i32* %side_effects_flag424, align 8
  %111 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call428 = call %struct.rtx_def* @expand_expr(%union.tree_node* %call422, %struct.rtx_def* %111, i32 0, i32 0) #5
  br i1 %tobool43, label %if.then430, label %return

if.then430:                                       ; preds = %if.end410
  %call431 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %lab_over.0) #5
  br label %return

return:                                           ; preds = %if.end410, %if.then430, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %addr_rtx.1, %if.then430 ], [ %addr_rtx.1, %if.end410 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @std_expand_builtin_va_arg(%union.tree_node*, %union.tree_node*) #0

declare void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) #0

declare %struct.rtx_def* @assign_temp(%union.tree_node*, i32, i32, i32) #0

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #0

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #0

declare %struct.rtx_def* @emit_barrier() #0

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #0

declare %union.tree_node* @save_expr(%union.tree_node*) #0

; Function Attrs: nounwind uwtable
define i32 @x86_64_general_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @nonimmediate_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %if.end4, label %return

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @x86_64_sign_extended_value(%struct.rtx_def* %op)
  br label %return

return:                                           ; preds = %if.end, %if.end4, %if.then
  %retval.0 = phi i32 [ %call5, %if.end4 ], [ %call, %if.then ], [ 1, %if.end ]
  ret i32 %retval.0
}

declare i32 @general_operand(%struct.rtx_def*, i32) #0

declare i32 @nonimmediate_operand(%struct.rtx_def*, i32) #0

; Function Attrs: nounwind uwtable
define i32 @x86_64_sign_extended_value(%struct.rtx_def* nocapture readonly %value) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 54, label %sw.bb
    i32 68, label %sw.bb2
    i32 67, label %sw.bb7
    i32 58, label %sw.bb12
  ]

sw.bb:                                            ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !77
  %call = tail call i64 @trunc_int_for_mode(i64 %1, i32 5) #5
  %call1 = tail call i64 @trunc_int_for_mode(i64 %call, i32 4) #5
  %cmp = icmp eq i64 %call1, %call
  %conv = zext i1 %cmp to i32
  br label %return

sw.bb2:                                           ; preds = %entry
  %2 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %.off = add i32 %2, -1
  %3 = icmp ult i32 %.off, 2
  %lor.ext = zext i1 %3 to i32
  br label %return

sw.bb7:                                           ; preds = %entry
  %4 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %5 = and i32 %4, -2
  %.cmp = icmp ne i32 %5, 4
  %land.ext = zext i1 %.cmp to i32
  br label %return

sw.bb12:                                          ; preds = %entry
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load15 = load i32* %7, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  switch i32 %bf.clear16, label %if.end118 [
    i32 42, label %land.lhs.true
    i32 75, label %if.then41
  ]

land.lhs.true:                                    ; preds = %sw.bb12
  %fld22 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1
  %rtvec = bitcast [1 x %union.rtunion_def]* %fld22 to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %num_elem = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0
  %9 = load i32* %num_elem, align 4, !tbaa !10
  %cmp24 = icmp eq i32 %9, 1
  br i1 %cmp24, label %land.lhs.true26, label %if.end118

land.lhs.true26:                                  ; preds = %land.lhs.true
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx31 to i32*
  %10 = load i32* %rtint, align 4, !tbaa !1
  %cmp32 = icmp eq i32 %10, 15
  br i1 %cmp32, label %return, label %if.else

if.else:                                          ; preds = %land.lhs.true26
  %cmp39 = icmp eq i32 %bf.clear16, 75
  br i1 %cmp39, label %if.then41, label %if.end118

if.then41:                                        ; preds = %sw.bb12, %if.else
  %fld45 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1
  %rtx47 = bitcast [1 x %union.rtunion_def]* %fld45 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx47, align 8, !tbaa !6
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx53, align 8, !tbaa !6
  %13 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp54 = icmp eq i32 %13, 4
  br i1 %cmp54, label %return, label %if.end

if.end:                                           ; preds = %if.then41
  %14 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load57 = load i32* %14, align 8
  %bf.clear58 = and i32 %bf.load57, 65535
  %cmp59 = icmp eq i32 %bf.clear58, 54
  br i1 %cmp59, label %if.end62, label %return

if.end62:                                         ; preds = %if.end
  %rtwint65 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, i32 0
  %15 = load i64* %rtwint65, align 8, !tbaa !77
  %call66 = tail call i64 @trunc_int_for_mode(i64 %15, i32 5) #5
  %16 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load67 = load i32* %16, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  switch i32 %bf.clear68, label %return [
    i32 68, label %sw.bb69
    i32 67, label %sw.bb92
  ]

sw.bb69:                                          ; preds = %if.end62
  %17 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp70 = icmp eq i32 %17, 1
  %cmp73 = icmp slt i64 %call66, 1073741824
  %or.cond = and i1 %cmp70, %cmp73
  br i1 %or.cond, label %land.lhs.true75, label %if.end80

land.lhs.true75:                                  ; preds = %sw.bb69
  %call76 = tail call i64 @trunc_int_for_mode(i64 %call66, i32 4) #5
  %cmp77 = icmp eq i64 %call76, %call66
  br i1 %cmp77, label %return, label %land.lhs.true75.if.end80_crit_edge

land.lhs.true75.if.end80_crit_edge:               ; preds = %land.lhs.true75
  %.pre = load i32* @ix86_cmodel, align 4, !tbaa !5
  br label %if.end80

if.end80:                                         ; preds = %land.lhs.true75.if.end80_crit_edge, %sw.bb69
  %18 = phi i32 [ %.pre, %land.lhs.true75.if.end80_crit_edge ], [ %17, %sw.bb69 ]
  %cmp81 = icmp eq i32 %18, 2
  %cmp84 = icmp sgt i64 %call66, 0
  %or.cond120 = and i1 %cmp81, %cmp84
  br i1 %or.cond120, label %land.lhs.true86, label %if.end118

land.lhs.true86:                                  ; preds = %if.end80
  %call87 = tail call i64 @trunc_int_for_mode(i64 %call66, i32 4) #5
  %cmp88 = icmp eq i64 %call87, %call66
  br i1 %cmp88, label %return, label %if.end118

sw.bb92:                                          ; preds = %if.end62
  %19 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %20 = and i32 %19, -3
  %21 = icmp eq i32 %20, 1
  %cmp98 = icmp slt i64 %call66, 1073741824
  %or.cond122 = and i1 %21, %cmp98
  br i1 %or.cond122, label %land.lhs.true100, label %if.end105

land.lhs.true100:                                 ; preds = %sw.bb92
  %call101 = tail call i64 @trunc_int_for_mode(i64 %call66, i32 4) #5
  %cmp102 = icmp eq i64 %call101, %call66
  br i1 %cmp102, label %return, label %land.lhs.true100.if.end105_crit_edge

land.lhs.true100.if.end105_crit_edge:             ; preds = %land.lhs.true100
  %.pre144 = load i32* @ix86_cmodel, align 4, !tbaa !5
  br label %if.end105

if.end105:                                        ; preds = %land.lhs.true100.if.end105_crit_edge, %sw.bb92
  %22 = phi i32 [ %.pre144, %land.lhs.true100.if.end105_crit_edge ], [ %19, %sw.bb92 ]
  %cmp106 = icmp eq i32 %22, 2
  %cmp109 = icmp sgt i64 %call66, 0
  %or.cond123 = and i1 %cmp106, %cmp109
  br i1 %or.cond123, label %land.lhs.true111, label %if.end118

land.lhs.true111:                                 ; preds = %if.end105
  %call112 = tail call i64 @trunc_int_for_mode(i64 %call66, i32 4) #5
  %cmp113 = icmp eq i64 %call112, %call66
  br i1 %cmp113, label %return, label %if.end118

if.end118:                                        ; preds = %sw.bb12, %land.lhs.true, %if.else, %if.end105, %land.lhs.true111, %if.end80, %land.lhs.true86
  br label %return

return:                                           ; preds = %entry, %if.end62, %land.lhs.true111, %land.lhs.true100, %land.lhs.true86, %land.lhs.true75, %if.end, %if.then41, %land.lhs.true26, %if.end118, %sw.bb7, %sw.bb2, %sw.bb
  %retval.0 = phi i32 [ 0, %if.end118 ], [ %land.ext, %sw.bb7 ], [ %lor.ext, %sw.bb2 ], [ %conv, %sw.bb ], [ 1, %land.lhs.true26 ], [ 0, %if.then41 ], [ 0, %if.end ], [ 1, %land.lhs.true75 ], [ 1, %land.lhs.true86 ], [ 1, %land.lhs.true100 ], [ 1, %land.lhs.true111 ], [ 0, %if.end62 ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @x86_64_szext_general_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @nonimmediate_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %if.end4, label %return

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @x86_64_sign_extended_value(%struct.rtx_def* %op)
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.end4
  %1 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %x86_64_zero_extended_value.exit [
    i32 58, label %sw.bb8.i
    i32 54, label %sw.bb1.i
    i32 68, label %sw.bb2.i
    i32 67, label %sw.bb3.i
  ]

sw.bb1.i:                                         ; preds = %lor.rhs
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0, i32 0
  %2 = load i64* %rtwint.i, align 8, !tbaa !77
  %lnot.i = icmp ult i64 %2, 4294967296
  %lnot.ext.i = zext i1 %lnot.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb2.i:                                         ; preds = %lor.rhs
  %3 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp.i = icmp eq i32 %3, 1
  %conv.i = zext i1 %cmp.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb3.i:                                         ; preds = %lor.rhs
  %4 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %5 = and i32 %4, -3
  %6 = icmp eq i32 %5, 1
  %lor.ext.i = zext i1 %6 to i32
  br label %x86_64_zero_extended_value.exit

sw.bb8.i:                                         ; preds = %lor.rhs
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx10.i to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load11.i = load i32* %8, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  %cmp13.i = icmp eq i32 %bf.clear12.i, 75
  br i1 %cmp13.i, label %if.then.i, label %if.end60.i

if.then.i:                                        ; preds = %sw.bb8.i
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx26.i = bitcast %union.rtunion_def* %arrayidx25.i to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx26.i, align 8, !tbaa !6
  %10 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp27.i = icmp eq i32 %10, 4
  br i1 %cmp27.i, label %x86_64_zero_extended_value.exit, label %if.end.i

if.end.i:                                         ; preds = %if.then.i
  %fld18.i = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1
  %rtx20.i = bitcast [1 x %union.rtunion_def]* %fld18.i to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx20.i, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load30.i = load i32* %12, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  %cond.i = icmp eq i32 %bf.clear31.i, 67
  br i1 %cond.i, label %sw.bb33.i, label %x86_64_zero_extended_value.exit

sw.bb33.i:                                        ; preds = %if.end.i
  %13 = and i32 %10, -3
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %land.lhs.true.i, label %if.end60.i

land.lhs.true.i:                                  ; preds = %sw.bb33.i
  %15 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load38.i = load i32* %15, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 65535
  %cmp40.i = icmp eq i32 %bf.clear39.i, 54
  br i1 %cmp40.i, label %land.lhs.true42.i, label %if.end60.i

land.lhs.true42.i:                                ; preds = %land.lhs.true.i
  %rtwint45.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0, i32 0
  %16 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call.i = tail call i64 @trunc_int_for_mode(i64 %16, i32 5) #5
  %cmp46.i = icmp sgt i64 %call.i, -65536
  br i1 %cmp46.i, label %land.lhs.true48.i, label %if.end60.i

land.lhs.true48.i:                                ; preds = %land.lhs.true42.i
  %17 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call52.i = tail call i64 @trunc_int_for_mode(i64 %17, i32 4) #5
  %18 = load i64* %rtwint45.i, align 8, !tbaa !77
  %cmp56.i = icmp eq i64 %call52.i, %18
  br i1 %cmp56.i, label %x86_64_zero_extended_value.exit, label %if.end60.i

if.end60.i:                                       ; preds = %land.lhs.true48.i, %land.lhs.true42.i, %land.lhs.true.i, %sw.bb33.i, %sw.bb8.i
  br label %x86_64_zero_extended_value.exit

x86_64_zero_extended_value.exit:                  ; preds = %lor.rhs, %sw.bb1.i, %sw.bb2.i, %sw.bb3.i, %if.then.i, %if.end.i, %land.lhs.true48.i, %if.end60.i
  %retval.0.i = phi i32 [ 0, %if.end60.i ], [ %lor.ext.i, %sw.bb3.i ], [ %conv.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb1.i ], [ 0, %if.then.i ], [ 1, %land.lhs.true48.i ], [ 0, %if.end.i ], [ 0, %lor.rhs ]
  %tobool8 = icmp ne i32 %retval.0.i, 0
  br label %lor.end

lor.end:                                          ; preds = %if.end4, %x86_64_zero_extended_value.exit
  %19 = phi i1 [ true, %if.end4 ], [ %tobool8, %x86_64_zero_extended_value.exit ]
  %lor.ext = zext i1 %19 to i32
  br label %return

return:                                           ; preds = %if.end, %lor.end, %if.then
  %retval.0 = phi i32 [ %lor.ext, %lor.end ], [ %call, %if.then ], [ 1, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @x86_64_zero_extended_value(%struct.rtx_def* nocapture readonly %value) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 58, label %sw.bb8
    i32 54, label %sw.bb1
    i32 68, label %sw.bb2
    i32 67, label %sw.bb3
  ]

sw.bb1:                                           ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !77
  %lnot = icmp ult i64 %1, 4294967296
  %lnot.ext = zext i1 %lnot to i32
  br label %return

sw.bb2:                                           ; preds = %entry
  %2 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp = icmp eq i32 %2, 1
  %conv = zext i1 %cmp to i32
  br label %return

sw.bb3:                                           ; preds = %entry
  %3 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %4 = and i32 %3, -3
  %5 = icmp eq i32 %4, 1
  %lor.ext = zext i1 %5 to i32
  br label %return

sw.bb8:                                           ; preds = %entry
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load11 = load i32* %7, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 75
  br i1 %cmp13, label %if.then, label %if.end60

if.then:                                          ; preds = %sw.bb8
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx26, align 8, !tbaa !6
  %9 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp27 = icmp eq i32 %9, 4
  br i1 %cmp27, label %return, label %if.end

if.end:                                           ; preds = %if.then
  %fld18 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1
  %rtx20 = bitcast [1 x %union.rtunion_def]* %fld18 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx20, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load30 = load i32* %11, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cond = icmp eq i32 %bf.clear31, 67
  br i1 %cond, label %sw.bb33, label %return

sw.bb33:                                          ; preds = %if.end
  %12 = and i32 %9, -3
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %land.lhs.true, label %if.end60

land.lhs.true:                                    ; preds = %sw.bb33
  %14 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load38 = load i32* %14, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 54
  br i1 %cmp40, label %land.lhs.true42, label %if.end60

land.lhs.true42:                                  ; preds = %land.lhs.true
  %rtwint45 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0, i32 0
  %15 = load i64* %rtwint45, align 8, !tbaa !77
  %call = tail call i64 @trunc_int_for_mode(i64 %15, i32 5) #5
  %cmp46 = icmp sgt i64 %call, -65536
  br i1 %cmp46, label %land.lhs.true48, label %if.end60

land.lhs.true48:                                  ; preds = %land.lhs.true42
  %16 = load i64* %rtwint45, align 8, !tbaa !77
  %call52 = tail call i64 @trunc_int_for_mode(i64 %16, i32 4) #5
  %17 = load i64* %rtwint45, align 8, !tbaa !77
  %cmp56 = icmp eq i64 %call52, %17
  br i1 %cmp56, label %return, label %if.end60

if.end60:                                         ; preds = %sw.bb33, %land.lhs.true48, %land.lhs.true42, %land.lhs.true, %sw.bb8
  br label %return

return:                                           ; preds = %if.end, %entry, %land.lhs.true48, %if.then, %if.end60, %sw.bb3, %sw.bb2, %sw.bb1
  %retval.0 = phi i32 [ 0, %if.end60 ], [ %lor.ext, %sw.bb3 ], [ %conv, %sw.bb2 ], [ %lnot.ext, %sw.bb1 ], [ 0, %if.then ], [ 1, %land.lhs.true48 ], [ 0, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @x86_64_nonmemory_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 @nonmemory_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @register_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %if.end4, label %return

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @x86_64_sign_extended_value(%struct.rtx_def* %op)
  br label %return

return:                                           ; preds = %if.end, %if.end4, %if.then
  %retval.0 = phi i32 [ %call5, %if.end4 ], [ %call, %if.then ], [ 1, %if.end ]
  ret i32 %retval.0
}

declare i32 @nonmemory_operand(%struct.rtx_def*, i32) #0

declare i32 @register_operand(%struct.rtx_def*, i32) #0

; Function Attrs: nounwind uwtable
define i32 @x86_64_movabs_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp ne i32 %and, 0
  %1 = load i32* @flag_pic, align 4
  %tobool1 = icmp ne i32 %1, 0
  %or.cond = and i1 %tobool, %tobool1
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @nonmemory_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @register_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool3 = icmp eq i32 %call2, 0
  br i1 %tobool3, label %lor.lhs.false4, label %return

lor.lhs.false4:                                   ; preds = %if.end
  %call5 = tail call i32 @x86_64_sign_extended_value(%struct.rtx_def* %op)
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.end8, label %return

if.end8:                                          ; preds = %lor.lhs.false4
  %2 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end40 [
    i32 67, label %land.lhs.true
    i32 68, label %land.lhs.true
    i32 54, label %land.lhs.true
    i32 55, label %land.lhs.true
    i32 58, label %land.lhs.true
    i32 134, label %land.lhs.true
    i32 56, label %land.lhs.true
    i32 140, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.end8, %if.end8, %if.end8, %if.end8, %if.end8, %if.end8, %if.end8, %if.end8
  %call37 = tail call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %op)
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %return, label %if.end40

if.end40:                                         ; preds = %if.end8, %land.lhs.true
  br label %return

return:                                           ; preds = %land.lhs.true, %if.end, %lor.lhs.false4, %if.end40, %if.then
  %retval.0 = phi i32 [ 0, %if.end40 ], [ %call, %if.then ], [ 1, %lor.lhs.false4 ], [ 1, %if.end ], [ 1, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @symbolic_reference_mentioned_p(%struct.rtx_def* nocapture readonly %op) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -67
  %switch = icmp ult i32 %bf.clear.off, 2
  br i1 %switch, label %return, label %if.end

if.end:                                           ; preds = %entry
  %idxprom63 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom63
  %1 = load i8** %arrayidx, align 8, !tbaa !6
  %arrayidx9 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom63
  %2 = load i8* %arrayidx9, align 1, !tbaa !5
  %cmp1066 = icmp eq i8 %2, 0
  br i1 %cmp1066, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %3 = zext i8 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv69 = phi i64 [ %3, %for.body.lr.ph ], [ %indvars.iv.next70, %for.cond.backedge ]
  %indvars.iv.next70 = add nsw i64 %indvars.iv69, -1
  %arrayidx13 = getelementptr inbounds i8* %1, i64 %indvars.iv.next70
  %4 = load i8* %arrayidx13, align 1, !tbaa !5
  switch i8 %4, label %for.cond.backedge [
    i8 69, label %if.then17
    i8 101, label %land.lhs.true
  ]

for.cond.backedge:                                ; preds = %for.cond21, %for.body, %land.lhs.true
  %5 = trunc i64 %indvars.iv.next70 to i32
  %cmp10 = icmp sgt i32 %5, 0
  br i1 %cmp10, label %for.body, label %return

if.then17:                                        ; preds = %for.body
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 %indvars.iv.next70
  %rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %num_elem = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 0
  %7 = load i32* %num_elem, align 4, !tbaa !10
  %8 = sext i32 %7 to i64
  br label %for.cond21

for.cond21:                                       ; preds = %for.body24, %if.then17
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body24 ], [ %8, %if.then17 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %9 = trunc i64 %indvars.iv to i32
  %cmp22 = icmp sgt i32 %9, 0
  br i1 %cmp22, label %for.body24, label %for.cond.backedge

for.body24:                                       ; preds = %for.cond21
  %arrayidx30 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 %indvars.iv.next
  %10 = load %struct.rtx_def** %arrayidx30, align 8, !tbaa !6
  %call = tail call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %10)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.cond21, label %return

land.lhs.true:                                    ; preds = %for.body
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 %indvars.iv.next70
  %rtx = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call41 = tail call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %11)
  %tobool42 = icmp eq i32 %call41, 0
  br i1 %tobool42, label %for.cond.backedge, label %return

return:                                           ; preds = %land.lhs.true, %for.cond.backedge, %for.body24, %if.end, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 0, %if.end ], [ 1, %for.body24 ], [ 1, %land.lhs.true ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @x86_64_szext_nonmemory_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 @nonmemory_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @register_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %if.end4, label %return

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @x86_64_sign_extended_value(%struct.rtx_def* %op)
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.end4
  %1 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %x86_64_zero_extended_value.exit [
    i32 58, label %sw.bb8.i
    i32 54, label %sw.bb1.i
    i32 68, label %sw.bb2.i
    i32 67, label %sw.bb3.i
  ]

sw.bb1.i:                                         ; preds = %lor.rhs
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0, i32 0
  %2 = load i64* %rtwint.i, align 8, !tbaa !77
  %lnot.i = icmp ult i64 %2, 4294967296
  %lnot.ext.i = zext i1 %lnot.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb2.i:                                         ; preds = %lor.rhs
  %3 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp.i = icmp eq i32 %3, 1
  %conv.i = zext i1 %cmp.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb3.i:                                         ; preds = %lor.rhs
  %4 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %5 = and i32 %4, -3
  %6 = icmp eq i32 %5, 1
  %lor.ext.i = zext i1 %6 to i32
  br label %x86_64_zero_extended_value.exit

sw.bb8.i:                                         ; preds = %lor.rhs
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx10.i to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load11.i = load i32* %8, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  %cmp13.i = icmp eq i32 %bf.clear12.i, 75
  br i1 %cmp13.i, label %if.then.i, label %if.end60.i

if.then.i:                                        ; preds = %sw.bb8.i
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx26.i = bitcast %union.rtunion_def* %arrayidx25.i to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx26.i, align 8, !tbaa !6
  %10 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp27.i = icmp eq i32 %10, 4
  br i1 %cmp27.i, label %x86_64_zero_extended_value.exit, label %if.end.i

if.end.i:                                         ; preds = %if.then.i
  %fld18.i = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1
  %rtx20.i = bitcast [1 x %union.rtunion_def]* %fld18.i to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx20.i, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load30.i = load i32* %12, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  %cond.i = icmp eq i32 %bf.clear31.i, 67
  br i1 %cond.i, label %sw.bb33.i, label %x86_64_zero_extended_value.exit

sw.bb33.i:                                        ; preds = %if.end.i
  %13 = and i32 %10, -3
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %land.lhs.true.i, label %if.end60.i

land.lhs.true.i:                                  ; preds = %sw.bb33.i
  %15 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load38.i = load i32* %15, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 65535
  %cmp40.i = icmp eq i32 %bf.clear39.i, 54
  br i1 %cmp40.i, label %land.lhs.true42.i, label %if.end60.i

land.lhs.true42.i:                                ; preds = %land.lhs.true.i
  %rtwint45.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0, i32 0
  %16 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call.i = tail call i64 @trunc_int_for_mode(i64 %16, i32 5) #5
  %cmp46.i = icmp sgt i64 %call.i, -65536
  br i1 %cmp46.i, label %land.lhs.true48.i, label %if.end60.i

land.lhs.true48.i:                                ; preds = %land.lhs.true42.i
  %17 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call52.i = tail call i64 @trunc_int_for_mode(i64 %17, i32 4) #5
  %18 = load i64* %rtwint45.i, align 8, !tbaa !77
  %cmp56.i = icmp eq i64 %call52.i, %18
  br i1 %cmp56.i, label %x86_64_zero_extended_value.exit, label %if.end60.i

if.end60.i:                                       ; preds = %land.lhs.true48.i, %land.lhs.true42.i, %land.lhs.true.i, %sw.bb33.i, %sw.bb8.i
  br label %x86_64_zero_extended_value.exit

x86_64_zero_extended_value.exit:                  ; preds = %lor.rhs, %sw.bb1.i, %sw.bb2.i, %sw.bb3.i, %if.then.i, %if.end.i, %land.lhs.true48.i, %if.end60.i
  %retval.0.i = phi i32 [ 0, %if.end60.i ], [ %lor.ext.i, %sw.bb3.i ], [ %conv.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb1.i ], [ 0, %if.then.i ], [ 1, %land.lhs.true48.i ], [ 0, %if.end.i ], [ 0, %lor.rhs ]
  %tobool8 = icmp ne i32 %retval.0.i, 0
  br label %lor.end

lor.end:                                          ; preds = %if.end4, %x86_64_zero_extended_value.exit
  %19 = phi i1 [ true, %if.end4 ], [ %tobool8, %x86_64_zero_extended_value.exit ]
  %lor.ext = zext i1 %19 to i32
  br label %return

return:                                           ; preds = %if.end, %lor.end, %if.then
  %retval.0 = phi i32 [ %lor.ext, %lor.end ], [ %call, %if.then ], [ 1, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @x86_64_immediate_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 @immediate_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @x86_64_sign_extended_value(%struct.rtx_def* %op)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %if.then ]
  ret i32 %retval.0
}

declare i32 @immediate_operand(%struct.rtx_def*, i32) #0

; Function Attrs: nounwind uwtable
define i32 @x86_64_zext_immediate_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %x86_64_zero_extended_value.exit [
    i32 58, label %sw.bb8.i
    i32 54, label %sw.bb1.i
    i32 68, label %sw.bb2.i
    i32 67, label %sw.bb3.i
  ]

sw.bb1.i:                                         ; preds = %entry
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint.i, align 8, !tbaa !77
  %lnot.i = icmp ult i64 %1, 4294967296
  %lnot.ext.i = zext i1 %lnot.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb2.i:                                         ; preds = %entry
  %2 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp.i = icmp eq i32 %2, 1
  %conv.i = zext i1 %cmp.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb3.i:                                         ; preds = %entry
  %3 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %4 = and i32 %3, -3
  %5 = icmp eq i32 %4, 1
  %lor.ext.i = zext i1 %5 to i32
  br label %x86_64_zero_extended_value.exit

sw.bb8.i:                                         ; preds = %entry
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx10.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load11.i = load i32* %7, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  %cmp13.i = icmp eq i32 %bf.clear12.i, 75
  br i1 %cmp13.i, label %if.then.i, label %if.end60.i

if.then.i:                                        ; preds = %sw.bb8.i
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtx26.i = bitcast %union.rtunion_def* %arrayidx25.i to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx26.i, align 8, !tbaa !6
  %9 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp27.i = icmp eq i32 %9, 4
  br i1 %cmp27.i, label %x86_64_zero_extended_value.exit, label %if.end.i

if.end.i:                                         ; preds = %if.then.i
  %fld18.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1
  %rtx20.i = bitcast [1 x %union.rtunion_def]* %fld18.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx20.i, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load30.i = load i32* %11, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  %cond.i = icmp eq i32 %bf.clear31.i, 67
  br i1 %cond.i, label %sw.bb33.i, label %x86_64_zero_extended_value.exit

sw.bb33.i:                                        ; preds = %if.end.i
  %12 = and i32 %9, -3
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %land.lhs.true.i, label %if.end60.i

land.lhs.true.i:                                  ; preds = %sw.bb33.i
  %14 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load38.i = load i32* %14, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 65535
  %cmp40.i = icmp eq i32 %bf.clear39.i, 54
  br i1 %cmp40.i, label %land.lhs.true42.i, label %if.end60.i

land.lhs.true42.i:                                ; preds = %land.lhs.true.i
  %rtwint45.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0, i32 0
  %15 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call.i = tail call i64 @trunc_int_for_mode(i64 %15, i32 5) #5
  %cmp46.i = icmp sgt i64 %call.i, -65536
  br i1 %cmp46.i, label %land.lhs.true48.i, label %if.end60.i

land.lhs.true48.i:                                ; preds = %land.lhs.true42.i
  %16 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call52.i = tail call i64 @trunc_int_for_mode(i64 %16, i32 4) #5
  %17 = load i64* %rtwint45.i, align 8, !tbaa !77
  %cmp56.i = icmp eq i64 %call52.i, %17
  br i1 %cmp56.i, label %x86_64_zero_extended_value.exit, label %if.end60.i

if.end60.i:                                       ; preds = %land.lhs.true48.i, %land.lhs.true42.i, %land.lhs.true.i, %sw.bb33.i, %sw.bb8.i
  br label %x86_64_zero_extended_value.exit

x86_64_zero_extended_value.exit:                  ; preds = %entry, %sw.bb1.i, %sw.bb2.i, %sw.bb3.i, %if.then.i, %if.end.i, %land.lhs.true48.i, %if.end60.i
  %retval.0.i = phi i32 [ 0, %if.end60.i ], [ %lor.ext.i, %sw.bb3.i ], [ %conv.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb1.i ], [ 0, %if.then.i ], [ 1, %land.lhs.true48.i ], [ 0, %if.end.i ], [ 0, %entry ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind readonly uwtable
define i32 @const_int_1_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !77
  %cmp1 = icmp eq i64 %1, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %2 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind readonly uwtable
define i32 @const_int_1_31_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !77
  %.off = add i64 %1, -1
  %2 = icmp ult i64 %.off, 31
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %entry
  %3 = phi i1 [ false, %entry ], [ %2, %land.lhs.true ]
  %land.ext = zext i1 %3 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind readonly uwtable
define i32 @symbolic_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 68, label %return
    i32 67, label %return
    i32 58, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  switch i32 %bf.clear3, label %if.end [
    i32 68, label %return
    i32 67, label %return
    i32 42, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %sw.bb1
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %3 = load i32* %rtint, align 4, !tbaa !1
  switch i32 %3, label %if.end.thread [
    i32 6, label %return
    i32 7, label %return
    i32 15, label %return
  ]

if.end.thread:                                    ; preds = %land.lhs.true
  br label %return

if.end:                                           ; preds = %sw.bb1
  %cmp26 = icmp eq i32 %bf.clear3, 75
  br i1 %cmp26, label %lor.lhs.false27, label %return

lor.lhs.false27:                                  ; preds = %if.end
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx30, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load31 = load i32* %5, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 54
  br i1 %cmp33, label %if.end35, label %return

if.end35:                                         ; preds = %lor.lhs.false27
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx38, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load39 = load i32* %7, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  switch i32 %bf.clear40, label %if.then56 [
    i32 68, label %return
    i32 67, label %return
    i32 42, label %lor.lhs.false51
  ]

lor.lhs.false51:                                  ; preds = %if.end35
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1
  %rtint54 = bitcast %union.rtunion_def* %arrayidx53 to i32*
  %8 = load i32* %rtint54, align 4, !tbaa !1
  %cmp55 = icmp eq i32 %8, 7
  br i1 %cmp55, label %if.end57, label %if.then56

if.then56:                                        ; preds = %if.end35, %lor.lhs.false51
  br label %return

if.end57:                                         ; preds = %lor.lhs.false51
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtvec_def**
  %9 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %arrayidx60 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 0
  %10 = load %struct.rtx_def** %arrayidx60, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load61 = load i32* %11, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %bf.clear62.off = add i32 %bf.clear62, -67
  %switch = icmp ult i32 %bf.clear62.off, 2
  %. = zext i1 %switch to i32
  ret i32 %.

sw.default:                                       ; preds = %entry
  br label %return

return:                                           ; preds = %if.end.thread, %if.end35, %if.end35, %if.end, %lor.lhs.false27, %sw.bb1, %sw.bb1, %land.lhs.true, %land.lhs.true, %land.lhs.true, %entry, %entry, %sw.default, %if.then56
  %retval.0 = phi i32 [ 0, %sw.default ], [ 0, %if.then56 ], [ 1, %entry ], [ 1, %entry ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true ], [ 1, %sw.bb1 ], [ 1, %sw.bb1 ], [ 0, %lor.lhs.false27 ], [ 0, %if.end ], [ 1, %if.end35 ], [ 1, %if.end35 ], [ 0, %if.end.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @pic_symbolic_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 58
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %2, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.end
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx4, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load5 = load i32* %4, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 42
  br i1 %cmp7, label %return, label %if.end34

if.else:                                          ; preds = %if.end
  %5 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load10 = load i32* %5, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  switch i32 %bf.clear11, label %if.then24 [
    i32 42, label %return
    i32 75, label %lor.lhs.false
  ]

lor.lhs.false:                                    ; preds = %if.else
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx20, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load21 = load i32* %7, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 54
  br i1 %cmp23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %if.else, %lor.lhs.false
  br label %return

if.end25:                                         ; preds = %lor.lhs.false
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx28, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load29 = load i32* %9, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 42
  br i1 %cmp31, label %return, label %if.end34

if.end34:                                         ; preds = %if.end25, %if.then1
  br label %return

return:                                           ; preds = %if.end25, %if.else, %if.then1, %entry, %if.end34, %if.then24
  %retval.0 = phi i32 [ 0, %if.end34 ], [ 0, %if.then24 ], [ 0, %entry ], [ 1, %if.then1 ], [ 1, %if.else ], [ 1, %if.end25 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @call_insn_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end19 [
    i32 61, label %land.lhs.true
    i32 54, label %return
    i32 68, label %if.then18
  ]

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp1 = icmp eq %struct.rtx_def* %1, %op
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp2 = icmp eq %struct.rtx_def* %2, %op
  %or.cond = or i1 %cmp1, %cmp2
  br i1 %or.cond, label %return, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !1
  %.off = add i32 %3, -53
  %4 = icmp ult i32 %.off, 5
  br i1 %4, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false3
  switch i32 %bf.clear, label %if.end19 [
    i32 54, label %return
    i32 68, label %if.then18
  ]

if.then18:                                        ; preds = %entry, %if.end
  br label %return

if.end19:                                         ; preds = %entry, %if.end
  %5 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %5, 25
  %6 = and i32 %and, 1
  %7 = or i32 %6, 4
  %call = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %7) #5
  br label %return

return:                                           ; preds = %entry, %if.end, %land.lhs.true, %lor.lhs.false3, %if.end19, %if.then18
  %retval.0 = phi i32 [ 1, %if.then18 ], [ %call, %if.end19 ], [ 0, %lor.lhs.false3 ], [ 0, %land.lhs.true ], [ 0, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @constant_call_address_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 58
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1 = load i32* %2, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 75
  br i1 %cmp3, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx10, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load11 = load i32* %4, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 54
  br i1 %cmp13, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true4
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx19, align 8, !tbaa !6
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load20.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %bf.load20 = phi i32 [ %bf.load20.pre, %if.then ], [ %bf.load, %land.lhs.true4 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %entry ]
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 68
  %conv = zext i1 %cmp22 to i32
  ret i32 %conv
}

; Function Attrs: nounwind readonly uwtable
define i32 @const0_operand(%struct.rtx_def* readnone %op, i32 %mode) #2 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %cmp = icmp eq %struct.rtx_def* %0, %op
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind readonly uwtable
define i32 @const1_operand(%struct.rtx_def* readnone %op, i32 %mode) #2 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !6
  %cmp = icmp eq %struct.rtx_def* %0, %op
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind readonly uwtable
define i32 @const248_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !77
  %switch.tableidx = add i64 %1, -2
  %2 = icmp ult i64 %switch.tableidx, 7
  br i1 %2, label %switch.lookup, label %land.end

switch.lookup:                                    ; preds = %land.rhs
  %switch.cast = trunc i64 %switch.tableidx to i7
  %switch.downshift = lshr i7 -59, %switch.cast
  %switch.masked = zext i7 %switch.downshift to i32
  %phitmp = and i32 %switch.masked, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %switch.lookup, %entry
  %3 = phi i32 [ 0, %entry ], [ %phitmp, %switch.lookup ], [ 0, %land.rhs ]
  ret i32 %3
}

; Function Attrs: nounwind readonly uwtable
define i32 @incdec_operand(%struct.rtx_def* readnone %op, i32 %mode) #2 {
entry:
  %0 = load i32* @ix86_cpu, align 4, !tbaa !5
  %cmp = icmp ne i32 %0, 6
  %1 = load i32* @optimize_size, align 4
  %tobool = icmp ne i32 %1, 0
  %or.cond = or i1 %cmp, %tobool
  br i1 %or.cond, label %if.end, label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !6
  %cmp1 = icmp eq %struct.rtx_def* %2, %op
  br i1 %cmp1, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %cmp2 = icmp eq %struct.rtx_def* %3, %op
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end
  %4 = phi i1 [ true, %if.end ], [ %cmp2, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32
  br label %return

return:                                           ; preds = %entry, %lor.end
  %retval.0 = phi i32 [ %lor.ext, %lor.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @shiftdi_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @nonimmediate_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @register_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call1, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @reg_no_sp_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %t.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %op, %entry ]
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %cmp1 = icmp eq %struct.rtx_def* %t.0, %2
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8
  %cmp2 = icmp eq %struct.rtx_def* %t.0, %3
  %or.cond = or i1 %cmp1, %cmp2
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp4 = icmp eq %struct.rtx_def* %t.0, %4
  %or.cond12 = or i1 %or.cond, %cmp4
  br i1 %or.cond12, label %return, label %if.end6

if.end6:                                          ; preds = %if.end
  %call = tail call i32 @register_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

return:                                           ; preds = %if.end, %if.end6
  %retval.0 = phi i32 [ %call, %if.end6 ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @mmx_reg_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.rhs, label %land.end7

land.rhs:                                         ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %.off = add i32 %1, -29
  %2 = icmp ult i32 %.off, 8
  br label %land.end7

land.end7:                                        ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %2, %land.rhs ]
  %land.ext = zext i1 %3 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind uwtable
define i32 @general_no_elim_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %t.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %op, %entry ]
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp1 = icmp eq %struct.rtx_def* %t.0, %2
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp2 = icmp eq %struct.rtx_def* %t.0, %3
  %or.cond = or i1 %cmp1, %cmp2
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8
  %cmp4 = icmp eq %struct.rtx_def* %t.0, %4
  %or.cond34 = or i1 %or.cond, %cmp4
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8
  %cmp6 = icmp eq %struct.rtx_def* %t.0, %5
  %or.cond35 = or i1 %or.cond34, %cmp6
  %6 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8
  %cmp8 = icmp eq %struct.rtx_def* %t.0, %6
  %or.cond36 = or i1 %or.cond35, %cmp8
  br i1 %or.cond36, label %return, label %if.end10

if.end10:                                         ; preds = %if.end
  %7 = getelementptr inbounds %struct.rtx_def* %t.0, i64 0, i32 0
  %bf.load11 = load i32* %7, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 61
  br i1 %cmp13, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %if.end10
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %t.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx15 to i32*
  %8 = load i32* %rtuint, align 4, !tbaa !1
  %.off = add i32 %8, -53
  %9 = icmp ult i32 %.off, 5
  br i1 %9, label %return, label %if.end23

if.end23:                                         ; preds = %land.lhs.true, %if.end10
  %call = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

return:                                           ; preds = %land.lhs.true, %if.end, %if.end23
  %retval.0 = phi i32 [ %call, %if.end23 ], [ 0, %if.end ], [ 0, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @nonmemory_no_elim_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %t.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %op, %entry ]
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp1 = icmp eq %struct.rtx_def* %t.0, %2
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp2 = icmp eq %struct.rtx_def* %t.0, %3
  %or.cond = or i1 %cmp1, %cmp2
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8
  %cmp4 = icmp eq %struct.rtx_def* %t.0, %4
  %or.cond22 = or i1 %or.cond, %cmp4
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8
  %cmp6 = icmp eq %struct.rtx_def* %t.0, %5
  %or.cond23 = or i1 %or.cond22, %cmp6
  %6 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8
  %cmp8 = icmp eq %struct.rtx_def* %t.0, %6
  %or.cond24 = or i1 %or.cond23, %cmp8
  br i1 %or.cond24, label %return, label %if.end10

if.end10:                                         ; preds = %if.end
  %cmp13 = icmp eq i32 %bf.clear, 54
  br i1 %cmp13, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end10
  %call = tail call i32 @register_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool = icmp ne i32 %call, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end10
  %7 = phi i1 [ true, %if.end10 ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32
  br label %return

return:                                           ; preds = %if.end, %lor.end
  %retval.0 = phi i32 [ %lor.ext, %lor.end ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @q_regs_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %cmp = icmp eq i32 %mode, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load2.pre = load i32* %.phi.trans.insert, align 8
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load2.pre, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp1 = icmp eq i32 %bf.clear, %mode
  br i1 %cmp1, label %if.end, label %return

if.end:                                           ; preds = %entry, %land.lhs.true
  %bf.clear3 = and i32 %bf.load2.pre, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 63
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %.phi.trans.insert19 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load7.pre = load i32* %.phi.trans.insert19, align 8
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  %bf.load7 = phi i32 [ %bf.load7.pre, %if.then5 ], [ %bf.load2.pre, %if.end ]
  %op.addr.0 = phi %struct.rtx_def* [ %0, %if.then5 ], [ %op, %if.end ]
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 61
  br i1 %cmp9, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end6
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %op.addr.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %cmp12 = icmp ult i32 %1, 4
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end6
  %2 = phi i1 [ false, %if.end6 ], [ %cmp12, %land.rhs ]
  %land.ext = zext i1 %2 to i32
  br label %return

return:                                           ; preds = %land.lhs.true, %land.end
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ 0, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @non_q_regs_operand(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %cmp = icmp eq i32 %mode, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load2.pre = load i32* %.phi.trans.insert, align 8
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load2.pre, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp1 = icmp eq i32 %bf.clear, %mode
  br i1 %cmp1, label %if.end, label %return

if.end:                                           ; preds = %entry, %land.lhs.true
  %bf.clear3 = and i32 %bf.load2.pre, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 63
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %.phi.trans.insert25 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load7.pre = load i32* %.phi.trans.insert25, align 8
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  %bf.load7 = phi i32 [ %bf.load7.pre, %if.then5 ], [ %bf.load2.pre, %if.end ]
  %op.addr.0 = phi %struct.rtx_def* [ %0, %if.then5 ], [ %op, %if.end ]
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 61
  br i1 %cmp9, label %land.lhs.true10, label %land.end

land.lhs.true10:                                  ; preds = %if.end6
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %op.addr.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %.off = add i32 %1, -4
  %2 = icmp ult i32 %.off, 49
  br label %land.end

land.end:                                         ; preds = %land.lhs.true10, %if.end6
  %3 = phi i1 [ false, %if.end6 ], [ %2, %land.lhs.true10 ]
  %land.ext = zext i1 %3 to i32
  br label %return

return:                                           ; preds = %land.lhs.true, %land.end
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ 0, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @sse_comparison_operator(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 103, label %return
    i32 107, label %return
    i32 106, label %return
    i32 112, label %return
    i32 102, label %return
    i32 115, label %return
    i32 116, label %return
    i32 113, label %return
    i32 114, label %sw.bb1
    i32 118, label %sw.bb1
    i32 117, label %sw.bb1
    i32 119, label %sw.bb1
    i32 104, label %sw.bb1
    i32 105, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %1, 4
  %and.lobit = and i32 %and, 1
  %2 = xor i32 %and.lobit, 1
  br label %return

sw.default:                                       ; preds = %entry
  br label %return

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default, %sw.bb1
  %retval.0 = phi i32 [ 0, %sw.default ], [ %2, %sw.bb1 ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ix86_comparison_operator(%struct.rtx_def* nocapture readonly %op, i32 %mode) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %mode, 0
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %cmp3 = icmp eq i32 %bf.clear2, %mode
  br i1 %cmp3, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %idxprom77 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom77
  %1 = load i8* %arrayidx, align 1, !tbaa !5
  %cmp4 = icmp eq i8 %1, 60
  br i1 %cmp4, label %if.end7, label %return

if.end7:                                          ; preds = %if.end
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load9 = load i32* %3, align 8
  %bf.lshr10 = lshr i32 %bf.load9, 16
  %bf.clear11 = and i32 %bf.lshr10, 255
  %bf.clear11.off = add i32 %bf.clear11, -57
  %4 = icmp ult i32 %bf.clear11.off, 2
  br i1 %4, label %if.then16, label %if.end21

if.then16:                                        ; preds = %if.end7
  switch i32 %bf.clear, label %sw.default.i [
    i32 105, label %sw.epilog.i
    i32 104, label %sw.epilog.i
    i32 113, label %sw.epilog.i
    i32 112, label %sw.epilog.i
    i32 114, label %sw.epilog.i
    i32 118, label %sw.epilog.i
    i32 117, label %sw.epilog.i
    i32 119, label %sw.epilog.i
    i32 107, label %sw.bb1.i
    i32 106, label %sw.bb2.i
    i32 103, label %sw.bb3.i
    i32 102, label %sw.bb4.i
    i32 115, label %sw.bb5.i
    i32 116, label %sw.bb6.i
  ]

sw.bb1.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb3.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.then16
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %if.then16, %if.then16, %if.then16, %if.then16, %if.then16, %if.then16, %if.then16, %if.then16
  %second_code.0.load74 = phi i32 [ 112, %sw.bb6.i ], [ 112, %sw.bb5.i ], [ 112, %sw.bb4.i ], [ 1, %sw.bb3.i ], [ 1, %sw.bb2.i ], [ 1, %sw.bb1.i ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ]
  %bypass_code.0.load72 = phi i32 [ 1, %sw.bb6.i ], [ 1, %sw.bb5.i ], [ 1, %sw.bb4.i ], [ 112, %sw.bb3.i ], [ 112, %sw.bb2.i ], [ 112, %sw.bb1.i ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ], [ 1, %if.then16 ]
  %5 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = and i32 %5, 16
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %land.rhs, label %ix86_fp_comparison_codes.exit

ix86_fp_comparison_codes.exit:                    ; preds = %sw.epilog.i
  %cmp17 = icmp eq i32 %bypass_code.0.load72, 1
  br i1 %cmp17, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.epilog.i, %ix86_fp_comparison_codes.exit
  %second_code.0.load7376 = phi i32 [ %second_code.0.load74, %ix86_fp_comparison_codes.exit ], [ 1, %sw.epilog.i ]
  %cmp19 = icmp eq i32 %second_code.0.load7376, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %ix86_fp_comparison_codes.exit
  %6 = phi i1 [ false, %ix86_fp_comparison_codes.exit ], [ %cmp19, %land.rhs ]
  %land.ext = zext i1 %6 to i32
  br label %return

if.end21:                                         ; preds = %if.end7
  switch i32 %bf.clear, label %sw.default [
    i32 103, label %return
    i32 102, label %return
    i32 107, label %sw.bb22
    i32 104, label %sw.bb22
    i32 111, label %sw.bb36
    i32 109, label %sw.bb36
    i32 110, label %sw.bb36
    i32 113, label %sw.bb36
    i32 112, label %sw.bb36
    i32 108, label %sw.bb36
    i32 105, label %sw.bb41
    i32 106, label %sw.bb41
  ]

sw.bb22:                                          ; preds = %if.end21, %if.end21
  %7 = and i32 %bf.lshr10, 254
  %8 = icmp eq i32 %7, 52
  %cmp29 = icmp eq i32 %bf.clear11, 54
  %or.cond53 = or i1 %8, %cmp29
  %cmp32 = icmp eq i32 %bf.clear11, 55
  %or.cond54 = or i1 %or.cond53, %cmp32
  %. = zext i1 %or.cond54 to i32
  br label %return

sw.bb36:                                          ; preds = %if.end21, %if.end21, %if.end21, %if.end21, %if.end21, %if.end21
  %cmp37 = icmp eq i32 %bf.clear11, 52
  %.69 = zext i1 %cmp37 to i32
  br label %return

sw.bb41:                                          ; preds = %if.end21, %if.end21
  %9 = and i32 %bf.lshr10, 254
  %10 = icmp eq i32 %9, 52
  %cmp48 = icmp eq i32 %bf.clear11, 55
  %or.cond56 = or i1 %10, %cmp48
  %.70 = zext i1 %or.cond56 to i32
  br label %return

sw.default:                                       ; preds = %if.end21
  br label %return

return:                                           ; preds = %sw.bb41, %sw.bb36, %sw.bb22, %if.end21, %if.end21, %if.end, %land.lhs.true, %sw.default, %land.end
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ 0, %sw.default ], [ 0, %land.lhs.true ], [ 0, %if.end ], [ 1, %if.end21 ], [ 1, %if.end21 ], [ %., %sw.bb22 ], [ %.69, %sw.bb36 ], [ %.70, %sw.bb41 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @fcmov_comparison_operator(%struct.rtx_def* nocapture readonly %op, i32 %mode) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %mode, 0
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %cmp3 = icmp eq i32 %bf.clear2, %mode
  br i1 %cmp3, label %if.end, label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %idxprom65 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom65
  %1 = load i8* %arrayidx, align 1, !tbaa !5
  %cmp4 = icmp eq i8 %1, 60
  br i1 %cmp4, label %if.end7, label %return

if.end7:                                          ; preds = %if.end
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load9 = load i32* %3, align 8
  %bf.lshr10 = lshr i32 %bf.load9, 16
  %bf.clear11 = and i32 %bf.lshr10, 255
  %bf.clear11.off = add i32 %bf.clear11, -57
  %4 = icmp ult i32 %bf.clear11.off, 2
  br i1 %4, label %if.then16, label %if.end24

if.then16:                                        ; preds = %if.end7
  switch i32 %bf.clear, label %sw.default.i [
    i32 105, label %sw.epilog.i
    i32 104, label %sw.epilog.i
    i32 113, label %sw.epilog.i
    i32 112, label %sw.epilog.i
    i32 114, label %sw.epilog.i
    i32 118, label %sw.epilog.i
    i32 117, label %sw.epilog.i
    i32 119, label %sw.epilog.i
    i32 107, label %sw.bb1.i
    i32 106, label %sw.bb2.i
    i32 103, label %sw.bb3.i
    i32 102, label %sw.bb4.i
    i32 115, label %sw.bb5.i
    i32 116, label %sw.bb6.i
  ]

sw.bb1.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb3.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %if.then16
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.then16
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %if.then16, %if.then16, %if.then16, %if.then16, %if.then16, %if.then16, %if.then16, %if.then16
  %bf.clear59 = phi i32 [ 105, %sw.bb6.i ], [ 104, %sw.bb5.i ], [ 119, %sw.bb4.i ], [ 114, %sw.bb3.i ], [ 117, %sw.bb2.i ], [ 118, %sw.bb1.i ], [ %bf.clear, %if.then16 ], [ %bf.clear, %if.then16 ], [ %bf.clear, %if.then16 ], [ %bf.clear, %if.then16 ], [ %bf.clear, %if.then16 ], [ %bf.clear, %if.then16 ], [ %bf.clear, %if.then16 ], [ %bf.clear, %if.then16 ]
  %second_code.0.load58 = phi i1 [ true, %sw.bb6.i ], [ true, %sw.bb5.i ], [ true, %sw.bb4.i ], [ false, %sw.bb3.i ], [ false, %sw.bb2.i ], [ false, %sw.bb1.i ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ]
  %bypass_code.0.load56 = phi i1 [ false, %sw.bb6.i ], [ false, %sw.bb5.i ], [ false, %sw.bb4.i ], [ true, %sw.bb3.i ], [ true, %sw.bb2.i ], [ true, %sw.bb1.i ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ], [ false, %if.then16 ]
  %5 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = and i32 %5, 16
  %not.tobool.i = icmp ne i32 %and.i, 0
  %cmp1769 = or i1 %bypass_code.0.load56, %second_code.0.load58
  %or.cond36 = and i1 %cmp1769, %not.tobool.i
  br i1 %or.cond36, label %return, label %if.end23

if.end23:                                         ; preds = %sw.epilog.i
  switch i32 %bf.clear59, label %sw.default [
    i32 105, label %sw.bb
    i32 104, label %sw.bb
    i32 113, label %if.end24
    i32 112, label %if.end24
    i32 114, label %return
    i32 118, label %sw.bb
    i32 117, label %sw.bb
    i32 119, label %return
  ]

if.end24:                                         ; preds = %if.end23, %if.end23, %if.end7
  %bf.clear60 = phi i32 [ %bf.clear, %if.end7 ], [ %bf.clear59, %if.end23 ], [ %bf.clear59, %if.end23 ]
  switch i32 %bf.clear60, label %sw.default [
    i32 111, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 108, label %sw.bb
    i32 113, label %return
    i32 112, label %return
    i32 103, label %return
    i32 102, label %return
  ]

sw.bb:                                            ; preds = %if.end23, %if.end23, %if.end23, %if.end23, %if.end24, %if.end24, %if.end24, %if.end24
  switch i32 %bf.clear11, label %if.end34 [
    i32 58, label %return
    i32 57, label %return
    i32 52, label %return
  ]

if.end34:                                         ; preds = %sw.bb
  br label %return

sw.default:                                       ; preds = %if.end23, %if.end24
  br label %return

return:                                           ; preds = %if.end23, %if.end23, %if.end24, %if.end24, %if.end24, %if.end24, %sw.bb, %sw.bb, %sw.bb, %sw.epilog.i, %if.end, %land.lhs.true, %sw.default, %if.end34
  %retval.0 = phi i32 [ 0, %sw.default ], [ 0, %if.end34 ], [ 0, %land.lhs.true ], [ 0, %if.end ], [ 0, %sw.epilog.i ], [ 1, %sw.bb ], [ 1, %sw.bb ], [ 1, %sw.bb ], [ 1, %if.end24 ], [ 1, %if.end24 ], [ 1, %if.end24 ], [ 1, %if.end24 ], [ 1, %if.end23 ], [ 1, %if.end23 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @promotable_binary_operator(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 78, label %sw.bb
    i32 75, label %return
    i32 83, label %return
    i32 84, label %return
    i32 85, label %return
    i32 87, label %return
  ]

sw.bb:                                            ; preds = %entry
  %1 = load i32* @ix86_cpu, align 4, !tbaa !5
  %cmp = icmp ugt i32 %1, 1
  %conv = zext i1 %cmp to i32
  br label %return

sw.default:                                       ; preds = %entry
  br label %return

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %sw.default, %sw.bb
  %retval.0 = phi i32 [ 0, %sw.default ], [ %conv, %sw.bb ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @cmp_fp_expander_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %cmp = icmp eq i32 %mode, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load2.pre = load i32* %.phi.trans.insert, align 8
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load2.pre, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp1 = icmp eq i32 %bf.clear, %mode
  br i1 %cmp1, label %if.end, label %return

if.end:                                           ; preds = %entry, %land.lhs.true
  %bf.clear3 = and i32 %bf.load2.pre, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 55
  br i1 %cmp4, label %return, label %if.end6

if.end6:                                          ; preds = %if.end
  %call = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #5
  br label %return

return:                                           ; preds = %if.end, %land.lhs.true, %if.end6
  %retval.0 = phi i32 [ %call, %if.end6 ], [ 0, %land.lhs.true ], [ 1, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ext_register_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp ne i32 %and, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load1.pre = load i32* %.phi.trans.insert, align 8
  %bf.clear = and i32 %bf.load1.pre, 16711680
  %cmp = icmp eq i32 %bf.clear, 327680
  %or.cond = and i1 %tobool, %cmp
  br i1 %or.cond, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %bf.lshr2 = lshr i32 %bf.load1.pre, 16
  %bf.clear3 = and i32 %bf.lshr2, 255
  %bf.clear3.off = add i32 %bf.clear3, -3
  %switch = icmp ult i32 %bf.clear3.off, 2
  br i1 %switch, label %if.end, label %return

if.end:                                           ; preds = %entry, %land.lhs.true
  %call = tail call i32 @register_operand(%struct.rtx_def* %op, i32 0) #5
  %tobool10 = icmp eq i32 %call, 0
  br i1 %tobool10, label %return, label %if.end12

if.end12:                                         ; preds = %if.end
  %1 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load13 = load i32* %1, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 61
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  br i1 %cmp15, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.end12
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  br label %cond.end

cond.end:                                         ; preds = %if.end12, %cond.false
  %cond.in.in = phi %union.rtunion_def* [ %arrayidx19, %cond.false ], [ %arrayidx, %if.end12 ]
  %cond.in = bitcast %union.rtunion_def* %cond.in.in to i32*
  %cond = load i32* %cond.in, align 4
  %cond.off = add i32 %cond, -4
  %3 = icmp ugt i32 %cond.off, 53
  %lor.ext = zext i1 %3 to i32
  br label %return

return:                                           ; preds = %land.lhs.true, %if.end, %cond.end
  %retval.0 = phi i32 [ %lor.ext, %cond.end ], [ 0, %land.lhs.true ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @binary_fp_operator(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %cmp = icmp eq i32 %mode, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load2.pre = load i32* %.phi.trans.insert, align 8
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load2.pre, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp1 = icmp eq i32 %bf.clear, %mode
  br i1 %cmp1, label %if.end, label %return

if.end:                                           ; preds = %entry, %land.lhs.true
  %bf.clear3 = and i32 %bf.load2.pre, 65535
  switch i32 %bf.clear3, label %return [
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end
  %bf.lshr5 = lshr i32 %bf.load2.pre, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %idxprom11 = zext i32 %bf.clear6 to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom11
  %0 = load i32* %arrayidx, align 4, !tbaa !5
  %cmp7 = icmp eq i32 %0, 2
  %conv = zext i1 %cmp7 to i32
  br label %return

return:                                           ; preds = %if.end, %land.lhs.true, %sw.bb
  %retval.0 = phi i32 [ %conv, %sw.bb ], [ 0, %land.lhs.true ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @mult_operator(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 78
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind readonly uwtable
define i32 @div_operator(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 79
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind readonly uwtable
define i32 @arith_or_logical_operator(%struct.rtx_def* nocapture readonly %op, i32 %mode) #2 {
entry:
  %cmp = icmp eq i32 %mode, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load2.pre = load i32* %.phi.trans.insert, align 8
  br i1 %cmp, label %land.rhs, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load2.pre, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp1 = icmp eq i32 %bf.clear, %mode
  br i1 %cmp1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry, %lor.lhs.false
  %bf.clear3 = and i32 %bf.load2.pre, 65535
  %idxprom16 = zext i32 %bf.clear3 to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom16
  %0 = load i8* %arrayidx, align 1, !tbaa !5
  %cmp4 = icmp eq i8 %0, 99
  %cmp11 = icmp eq i8 %0, 50
  %.cmp11 = or i1 %cmp4, %cmp11
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %1 = phi i1 [ false, %lor.lhs.false ], [ %.cmp11, %land.rhs ]
  %land.ext = zext i1 %1 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind uwtable
define i32 @memory_displacement_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %parts = alloca %struct.ix86_address, align 8
  %call = tail call i32 @memory_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call1 = call fastcc i32 @ix86_decompose_address(%struct.rtx_def* %0, %struct.ix86_address* %parts)
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 3460, i8* getelementptr inbounds ([28 x i8]* @__FUNCTION__.memory_displacement_operand, i64 0, i64 0)) #8
  unreachable

if.end4:                                          ; preds = %if.end
  %disp = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 2
  %1 = load %struct.rtx_def** %disp, align 8, !tbaa !78
  %cmp = icmp ne %struct.rtx_def* %1, null
  %conv = zext i1 %cmp to i32
  br label %return

return:                                           ; preds = %entry, %if.end4
  %retval.0 = phi i32 [ %conv, %if.end4 ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @memory_operand(%struct.rtx_def*, i32) #0

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ix86_decompose_address(%struct.rtx_def* %addr, %struct.ix86_address* nocapture %out) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.else110 [
    i32 61, label %if.end144
    i32 63, label %if.end144
    i32 75, label %if.then8
    i32 78, label %if.then82
    i32 87, label %if.then93
  ]

if.then8:                                         ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1, i64 1
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx11, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load12 = load i32* %3, align 8
  %4 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load14 = load i32* %4, align 8
  %5 = and i32 %bf.load12, 65533
  %6 = icmp eq i32 %5, 61
  br i1 %6, label %if.then19, label %if.else25

if.then19:                                        ; preds = %if.then8
  %7 = and i32 %bf.load14, 65533
  %8 = icmp eq i32 %7, 61
  %. = select i1 %8, %struct.rtx_def* null, %struct.rtx_def* %2
  %.295 = select i1 %8, %struct.rtx_def* %1, %struct.rtx_def* null
  %.296 = select i1 %8, %struct.rtx_def* %2, %struct.rtx_def* %1
  br label %if.end125

if.else25:                                        ; preds = %if.then8
  %bf.clear13 = and i32 %bf.load12, 65535
  switch i32 %bf.clear13, label %return [
    i32 78, label %if.then27
    i32 75, label %land.lhs.true
  ]

if.then27:                                        ; preds = %if.else25
  %fld28 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %9 = and i32 %bf.load14, 65533
  %10 = icmp eq i32 %9, 61
  %.297 = select i1 %10, %struct.rtx_def* null, %struct.rtx_def* %2
  %.298 = select i1 %10, %struct.rtx_def* %2, %struct.rtx_def* null
  br label %if.end114

land.lhs.true:                                    ; preds = %if.else25
  %fld42 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx44 = bitcast [1 x %union.rtunion_def]* %fld42 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx44, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load45 = load i32* %12, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 78
  br i1 %cmp47, label %if.then48, label %if.then66

if.then48:                                        ; preds = %land.lhs.true
  %fld52 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 1
  %arrayidx62 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx63, align 8, !tbaa !6
  br label %if.end114

if.then66:                                        ; preds = %land.lhs.true
  %arrayidx71 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx72, align 8, !tbaa !6
  br label %if.end125

if.then82:                                        ; preds = %entry
  %fld83 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1
  %arrayidx87 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1, i64 1
  br label %if.end114

if.then93:                                        ; preds = %entry
  %fld94 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1
  %rtx96 = bitcast [1 x %union.rtunion_def]* %fld94 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx96, align 8, !tbaa !6
  %arrayidx98 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1, i64 1
  %rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx99, align 8, !tbaa !6
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load100 = load i32* %17, align 8
  %bf.clear101 = and i32 %bf.load100, 65535
  %cmp102 = icmp eq i32 %bf.clear101, 54
  br i1 %cmp102, label %if.end104, label %return

if.end104:                                        ; preds = %if.then93
  %rtwint = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0, i32 0
  %18 = load i64* %rtwint, align 8, !tbaa !77
  %cmp107 = icmp ugt i64 %18, 3
  br i1 %cmp107, label %return, label %if.end109

if.end109:                                        ; preds = %if.end104
  %sh_prom = trunc i64 %18 to i32
  %shl = shl i32 1, %sh_prom
  %conv = sext i32 %shl to i64
  br label %if.end144

if.else110:                                       ; preds = %entry
  br label %if.end144

if.end114:                                        ; preds = %if.then27, %if.then48, %if.then82
  %scale_rtx.0.in.in = phi %union.rtunion_def* [ %arrayidx59, %if.then48 ], [ %arrayidx87, %if.then82 ], [ %arrayidx32, %if.then27 ]
  %disp.0 = phi %struct.rtx_def* [ %2, %if.then48 ], [ null, %if.then82 ], [ %.297, %if.then27 ]
  %index.0.in.in = phi [1 x %union.rtunion_def]* [ %fld52, %if.then48 ], [ %fld83, %if.then82 ], [ %fld28, %if.then27 ]
  %base.0 = phi %struct.rtx_def* [ %13, %if.then48 ], [ null, %if.then82 ], [ %.298, %if.then27 ]
  %index.0.in = bitcast [1 x %union.rtunion_def]* %index.0.in.in to %struct.rtx_def**
  %scale_rtx.0.in = bitcast %union.rtunion_def* %scale_rtx.0.in.in to %struct.rtx_def**
  %index.0 = load %struct.rtx_def** %index.0.in, align 8
  %scale_rtx.0 = load %struct.rtx_def** %scale_rtx.0.in, align 8
  %tobool = icmp eq %struct.rtx_def* %scale_rtx.0, null
  br i1 %tobool, label %if.end125, label %if.then115

if.then115:                                       ; preds = %if.end114
  %19 = getelementptr inbounds %struct.rtx_def* %scale_rtx.0, i64 0, i32 0
  %bf.load116 = load i32* %19, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 54
  br i1 %cmp118, label %if.end121, label %return

if.end121:                                        ; preds = %if.then115
  %rtwint124 = getelementptr inbounds %struct.rtx_def* %scale_rtx.0, i64 0, i32 1, i64 0, i32 0
  %20 = load i64* %rtwint124, align 8, !tbaa !77
  br label %if.end125

if.end125:                                        ; preds = %if.then19, %if.then66, %if.end114, %if.end121
  %base.0305 = phi %struct.rtx_def* [ %base.0, %if.end121 ], [ %base.0, %if.end114 ], [ %14, %if.then66 ], [ %.296, %if.then19 ]
  %index.0304 = phi %struct.rtx_def* [ %index.0, %if.end121 ], [ %index.0, %if.end114 ], [ %11, %if.then66 ], [ %.295, %if.then19 ]
  %disp.0303 = phi %struct.rtx_def* [ %disp.0, %if.end121 ], [ %disp.0, %if.end114 ], [ %2, %if.then66 ], [ %., %if.then19 ]
  %scale.1 = phi i64 [ %20, %if.end121 ], [ 1, %if.end114 ], [ 1, %if.then66 ], [ 1, %if.then19 ]
  %tobool126 = icmp ne %struct.rtx_def* %base.0305, null
  %tobool128 = icmp ne %struct.rtx_def* %index.0304, null
  %or.cond206 = and i1 %tobool126, %tobool128
  %cmp130 = icmp eq i64 %scale.1, 1
  %or.cond207 = and i1 %or.cond206, %cmp130
  br i1 %or.cond207, label %land.lhs.true132, label %if.end144

land.lhs.true132:                                 ; preds = %if.end125
  %21 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp133 = icmp eq %struct.rtx_def* %index.0304, %21
  %22 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp136 = icmp eq %struct.rtx_def* %index.0304, %22
  %or.cond = or i1 %cmp133, %cmp136
  %23 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8
  %cmp139 = icmp eq %struct.rtx_def* %index.0304, %23
  %or.cond299 = or i1 %or.cond, %cmp139
  %base.0.index.0 = select i1 %or.cond299, %struct.rtx_def* %base.0305, %struct.rtx_def* %index.0304
  %index.0.base.0 = select i1 %or.cond299, %struct.rtx_def* %index.0304, %struct.rtx_def* %base.0305
  br label %if.end144

if.end144:                                        ; preds = %entry, %entry, %if.else110, %if.end109, %land.lhs.true132, %if.end125
  %scale.1313 = phi i64 [ %scale.1, %if.end125 ], [ 1, %land.lhs.true132 ], [ %conv, %if.end109 ], [ 1, %if.else110 ], [ 1, %entry ], [ 1, %entry ]
  %retval1.0302312 = phi i32 [ 1, %if.end125 ], [ 1, %land.lhs.true132 ], [ -1, %if.end109 ], [ 1, %if.else110 ], [ 1, %entry ], [ 1, %entry ]
  %disp.0303311 = phi %struct.rtx_def* [ %disp.0303, %if.end125 ], [ %disp.0303, %land.lhs.true132 ], [ null, %if.end109 ], [ %addr, %if.else110 ], [ null, %entry ], [ null, %entry ]
  %index.1 = phi %struct.rtx_def* [ %index.0304, %if.end125 ], [ %base.0.index.0, %land.lhs.true132 ], [ %15, %if.end109 ], [ null, %if.else110 ], [ null, %entry ], [ null, %entry ]
  %base.1 = phi %struct.rtx_def* [ %base.0305, %if.end125 ], [ %index.0.base.0, %land.lhs.true132 ], [ null, %if.end109 ], [ null, %if.else110 ], [ %addr, %entry ], [ %addr, %entry ]
  %24 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %cmp145 = icmp eq %struct.rtx_def* %base.1, %24
  %25 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp148 = icmp eq %struct.rtx_def* %base.1, %25
  %or.cond300 = or i1 %cmp145, %cmp148
  br i1 %or.cond300, label %land.lhs.true153, label %lor.lhs.false150

lor.lhs.false150:                                 ; preds = %if.end144
  %26 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp151 = icmp ne %struct.rtx_def* %base.1, %26
  %tobool154 = icmp ne %struct.rtx_def* %disp.0303311, null
  %or.cond208 = or i1 %cmp151, %tobool154
  br i1 %or.cond208, label %if.end156, label %if.then155

land.lhs.true153:                                 ; preds = %if.end144
  %tobool154.old = icmp eq %struct.rtx_def* %disp.0303311, null
  br i1 %tobool154.old, label %if.then155, label %if.end156

if.then155:                                       ; preds = %land.lhs.true153, %lor.lhs.false150
  %27 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %if.end156

if.end156:                                        ; preds = %land.lhs.true153, %lor.lhs.false150, %if.then155
  %disp.1 = phi %struct.rtx_def* [ %disp.0303311, %land.lhs.true153 ], [ %27, %if.then155 ], [ %disp.0303311, %lor.lhs.false150 ]
  %28 = load i32* @ix86_cpu, align 4, !tbaa !5
  %29 = load i32* @optimize_size, align 4
  %notlhs = icmp eq i32 %28, 4
  %notrhs = icmp eq i32 %29, 0
  %or.cond210.not = and i1 %notrhs, %notlhs
  %tobool162 = icmp ne %struct.rtx_def* %base.1, null
  %or.cond212 = and i1 %or.cond210.not, %tobool162
  %or.cond212.not = xor i1 %or.cond212, true
  %tobool164 = icmp ne %struct.rtx_def* %index.1, null
  %or.cond214 = or i1 %tobool164, %or.cond212.not
  %tobool166 = icmp ne %struct.rtx_def* %disp.1, null
  %or.cond216 = or i1 %or.cond214, %tobool166
  br i1 %or.cond216, label %if.end179, label %land.lhs.true167

land.lhs.true167:                                 ; preds = %if.end156
  %30 = getelementptr inbounds %struct.rtx_def* %base.1, i64 0, i32 0
  %bf.load168 = load i32* %30, align 8
  %bf.clear169 = and i32 %bf.load168, 65535
  %cmp170 = icmp eq i32 %bf.clear169, 61
  br i1 %cmp170, label %land.lhs.true172, label %if.end179

land.lhs.true172:                                 ; preds = %land.lhs.true167
  %arrayidx174 = getelementptr inbounds %struct.rtx_def* %base.1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx174 to i32*
  %31 = load i32* %rtuint, align 4, !tbaa !1
  %cmp176 = icmp eq i32 %31, 4
  %32 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %.disp.1 = select i1 %cmp176, %struct.rtx_def* %32, %struct.rtx_def* null
  br label %if.end179

if.end179:                                        ; preds = %land.lhs.true172, %if.end156, %land.lhs.true167
  %disp.2 = phi %struct.rtx_def* [ %disp.1, %if.end156 ], [ null, %land.lhs.true167 ], [ %.disp.1, %land.lhs.true172 ]
  %tobool180 = icmp eq %struct.rtx_def* %base.1, null
  %or.cond218 = and i1 %tobool180, %tobool164
  %tobool184 = icmp ne i64 %scale.1313, 0
  %or.cond220 = and i1 %or.cond218, %tobool184
  %cmp186 = icmp eq i64 %scale.1313, 2
  %or.cond222 = and i1 %or.cond220, %cmp186
  %.scale.1 = select i1 %or.cond222, i64 1, i64 %scale.1313
  %index.1.base.1 = select i1 %or.cond222, %struct.rtx_def* %index.1, %struct.rtx_def* %base.1
  %notlhs293 = icmp eq %struct.rtx_def* %index.1.base.1, null
  %notrhs294 = icmp eq %struct.rtx_def* %disp.2, null
  %or.cond224.not = and i1 %notrhs294, %notlhs293
  %or.cond226 = and i1 %or.cond224.not, %tobool164
  %cmp196 = icmp ne i64 %.scale.1, 1
  %or.cond228 = and i1 %or.cond226, %cmp196
  %33 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %disp.3 = select i1 %or.cond228, %struct.rtx_def* %33, %struct.rtx_def* %disp.2
  %base200 = getelementptr inbounds %struct.ix86_address* %out, i64 0, i32 0
  store %struct.rtx_def* %index.1.base.1, %struct.rtx_def** %base200, align 8, !tbaa !80
  %index201 = getelementptr inbounds %struct.ix86_address* %out, i64 0, i32 1
  store %struct.rtx_def* %index.1, %struct.rtx_def** %index201, align 8, !tbaa !81
  %disp202 = getelementptr inbounds %struct.ix86_address* %out, i64 0, i32 2
  store %struct.rtx_def* %disp.3, %struct.rtx_def** %disp202, align 8, !tbaa !78
  %scale203 = getelementptr inbounds %struct.ix86_address* %out, i64 0, i32 3
  store i64 %.scale.1, i64* %scale203, align 8, !tbaa !82
  br label %return

return:                                           ; preds = %if.else25, %if.then115, %if.end104, %if.then93, %if.end179
  %retval.0 = phi i32 [ %retval1.0302312, %if.end179 ], [ 0, %if.then93 ], [ 0, %if.end104 ], [ 0, %if.then115 ], [ 0, %if.else25 ]
  ret i32 %retval.0
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #6

; Function Attrs: nounwind uwtable
define i32 @cmpsi_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %call = tail call i32 @nonimmediate_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %1 = and i32 %bf.load, 16777215
  %2 = icmp eq i32 %1, 262227
  br i1 %2, label %land.lhs.true4, label %if.end57

land.lhs.true4:                                   ; preds = %if.end
  %fld = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load5 = load i32* %4, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 133
  br i1 %cmp7, label %land.lhs.true8, label %if.end57

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx14, align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load15 = load i32* %6, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 54
  br i1 %cmp17, label %land.lhs.true18, label %if.end57

land.lhs.true18:                                  ; preds = %land.lhs.true8
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 2
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx24, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load25 = load i32* %8, align 8
  %bf.clear26 = and i32 %bf.load25, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 54
  br i1 %cmp27, label %land.lhs.true28, label %if.end57

land.lhs.true28:                                  ; preds = %land.lhs.true18
  %rtwint = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0
  %9 = load i64* %rtwint, align 8, !tbaa !77
  %cmp37 = icmp eq i64 %9, 8
  br i1 %cmp37, label %land.lhs.true38, label %if.end57

land.lhs.true38:                                  ; preds = %land.lhs.true28
  %rtwint47 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0, i32 0
  %10 = load i64* %rtwint47, align 8, !tbaa !77
  %cmp48 = icmp eq i64 %10, 8
  br i1 %cmp48, label %land.lhs.true49, label %if.end57

land.lhs.true49:                                  ; preds = %land.lhs.true38
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 1
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx52, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load53 = load i32* %12, align 8
  %bf.clear54 = and i32 %bf.load53, 65535
  %cmp55 = icmp eq i32 %bf.clear54, 54
  br i1 %cmp55, label %return, label %if.end57

if.end57:                                         ; preds = %land.lhs.true49, %land.lhs.true38, %land.lhs.true28, %land.lhs.true18, %land.lhs.true8, %land.lhs.true4, %if.end
  br label %return

return:                                           ; preds = %land.lhs.true49, %entry, %if.end57
  %retval.0 = phi i32 [ 0, %if.end57 ], [ 1, %entry ], [ 1, %land.lhs.true49 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @long_memory_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %call = tail call i32 @memory_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @memory_address_length(%struct.rtx_def* %op)
  %cmp = icmp ne i32 %call1, 0
  %conv = zext i1 %cmp to i32
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %conv, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @memory_address_length(%struct.rtx_def* %addr) #1 {
entry:
  %parts = alloca %struct.ix86_address, align 8
  %0 = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end [
    i32 96, label %return
    i32 99, label %return
    i32 100, label %return
    i32 101, label %return
  ]

if.end:                                           ; preds = %entry
  %call = call fastcc i32 @ix86_decompose_address(%struct.rtx_def* %addr, %struct.ix86_address* %parts)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 9877, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.memory_address_length, i64 0, i64 0)) #8
  unreachable

if.end13:                                         ; preds = %if.end
  %base14 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 0
  %1 = load %struct.rtx_def** %base14, align 8, !tbaa !80
  %index15 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1
  %2 = load %struct.rtx_def** %index15, align 8, !tbaa !81
  %disp16 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 2
  %3 = load %struct.rtx_def** %disp16, align 8, !tbaa !78
  %tobool17 = icmp eq %struct.rtx_def* %1, null
  %tobool18 = icmp ne %struct.rtx_def* %2, null
  %or.cond = or i1 %tobool17, %tobool18
  %tobool20 = icmp ne %struct.rtx_def* %3, null
  %or.cond114 = or i1 %or.cond, %tobool20
  br i1 %or.cond114, label %if.else, label %if.then21

if.then21:                                        ; preds = %if.end13
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %cmp22 = icmp eq %struct.rtx_def* %4, %addr
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8
  %cmp24 = icmp eq %struct.rtx_def* %5, %addr
  %or.cond134 = or i1 %cmp22, %cmp24
  %6 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp26 = icmp eq %struct.rtx_def* %6, %addr
  %or.cond135 = or i1 %or.cond134, %cmp26
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8
  %cmp28 = icmp eq %struct.rtx_def* %7, %addr
  %or.cond136 = or i1 %or.cond135, %cmp28
  %. = zext i1 %or.cond136 to i32
  ret i32 %.

if.else:                                          ; preds = %if.end13
  %tobool31 = icmp eq %struct.rtx_def* %3, null
  %tobool33 = icmp ne %struct.rtx_def* %1, null
  %or.cond115 = or i1 %tobool31, %tobool33
  %or.cond116 = or i1 %or.cond115, %tobool18
  br i1 %or.cond116, label %if.else37, label %return

if.else37:                                        ; preds = %if.else
  br i1 %tobool20, label %if.then39, label %if.end108

if.then39:                                        ; preds = %if.else37
  %8 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load40 = load i32* %8, align 8
  %bf.clear41 = and i32 %bf.load40, 65535
  %cmp42 = icmp eq i32 %bf.clear41, 54
  br i1 %cmp42, label %cond.true61, label %if.else106

cond.true61:                                      ; preds = %if.then39
  %rtwint64 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0, i32 0
  %9 = load i64* %rtwint64, align 8, !tbaa !77
  %.off = add i64 %9, 128
  %10 = icmp ult i64 %.off, 256
  br i1 %10, label %if.end108, label %if.else106

if.else106:                                       ; preds = %cond.true61, %if.then39
  br label %if.end108

if.end108:                                        ; preds = %cond.true61, %if.else106, %if.else37
  %len.0 = phi i32 [ 4, %if.else106 ], [ 0, %if.else37 ], [ 1, %cond.true61 ]
  %add = zext i1 %tobool18 to i32
  %add.len.0 = add nsw i32 %len.0, %add
  ret i32 %add.len.0

return:                                           ; preds = %if.else, %entry, %entry, %entry, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 4, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @aligned_operand(%struct.rtx_def* %op, i32 %mode) #1 {
entry:
  %parts = alloca %struct.ix86_address, align 8
  %call = tail call i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.end2, label %return

if.end2:                                          ; preds = %if.end
  %bf.clear4 = and i32 %bf.load, 134217728
  %tobool5 = icmp eq i32 %bf.clear4, 0
  br i1 %tobool5, label %if.end7, label %return

if.end7:                                          ; preds = %if.end2
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load8 = load i32* %2, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  switch i32 %bf.clear9, label %if.end15 [
    i32 96, label %return
    i32 99, label %return
  ]

if.end15:                                         ; preds = %if.end7
  %call16 = call fastcc i32 @ix86_decompose_address(%struct.rtx_def* %1, %struct.ix86_address* %parts)
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end15
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 3535, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.aligned_operand, i64 0, i64 0)) #8
  unreachable

if.end19:                                         ; preds = %if.end15
  %index = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1
  %3 = load %struct.rtx_def** %index, align 8, !tbaa !81
  %tobool20 = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool20, label %if.end31, label %if.then21

if.then21:                                        ; preds = %if.end19
  %scale = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 3
  %4 = load i64* %scale, align 8, !tbaa !82
  %cmp22 = icmp slt i64 %4, 4
  br i1 %cmp22, label %land.lhs.true, label %if.end31

land.lhs.true:                                    ; preds = %if.then21
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx25 to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom = zext i32 %5 to i64
  %6 = load %struct.function** @cfun, align 8, !tbaa !6
  %emit = getelementptr inbounds %struct.function* %6, i64 0, i32 3
  %7 = load %struct.emit_status** %emit, align 8, !tbaa !83
  %regno_pointer_align = getelementptr inbounds %struct.emit_status* %7, i64 0, i32 10
  %8 = load i8** %regno_pointer_align, align 8, !tbaa !84
  %arrayidx26 = getelementptr inbounds i8* %8, i64 %idxprom
  %9 = load i8* %arrayidx26, align 1, !tbaa !5
  %cmp27 = icmp ult i8 %9, 32
  br i1 %cmp27, label %return, label %if.end31

if.end31:                                         ; preds = %if.end19, %if.then21, %land.lhs.true
  %base = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 0
  %10 = load %struct.rtx_def** %base, align 8, !tbaa !80
  %tobool32 = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool32, label %if.end47, label %if.then33

if.then33:                                        ; preds = %if.end31
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0
  %rtuint37 = bitcast %union.rtunion_def* %arrayidx36 to i32*
  %11 = load i32* %rtuint37, align 4, !tbaa !1
  %idxprom38 = zext i32 %11 to i64
  %12 = load %struct.function** @cfun, align 8, !tbaa !6
  %emit39 = getelementptr inbounds %struct.function* %12, i64 0, i32 3
  %13 = load %struct.emit_status** %emit39, align 8, !tbaa !83
  %regno_pointer_align40 = getelementptr inbounds %struct.emit_status* %13, i64 0, i32 10
  %14 = load i8** %regno_pointer_align40, align 8, !tbaa !84
  %arrayidx41 = getelementptr inbounds i8* %14, i64 %idxprom38
  %15 = load i8* %arrayidx41, align 1, !tbaa !5
  %cmp43 = icmp ult i8 %15, 32
  br i1 %cmp43, label %return, label %if.end47

if.end47:                                         ; preds = %if.end31, %if.then33
  %disp = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 2
  %16 = load %struct.rtx_def** %disp, align 8, !tbaa !78
  %tobool48 = icmp eq %struct.rtx_def* %16, null
  br i1 %tobool48, label %if.end63, label %if.then49

if.then49:                                        ; preds = %if.end47
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load51 = load i32* %17, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 54
  br i1 %cmp53, label %lor.lhs.false55, label %return

lor.lhs.false55:                                  ; preds = %if.then49
  %rtwint = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0, i32 0
  %18 = load i64* %rtwint, align 8, !tbaa !77
  %and = and i64 %18, 3
  %cmp59 = icmp eq i64 %and, 0
  br i1 %cmp59, label %if.end63, label %return

if.end63:                                         ; preds = %lor.lhs.false55, %if.end47
  br label %return

return:                                           ; preds = %if.then49, %lor.lhs.false55, %if.then33, %land.lhs.true, %if.end7, %if.end7, %if.end2, %if.end, %entry, %if.end63
  %retval.0 = phi i32 [ 1, %if.end63 ], [ 0, %entry ], [ 1, %if.end ], [ 0, %if.end2 ], [ 1, %if.end7 ], [ 1, %if.end7 ], [ 0, %land.lhs.true ], [ 0, %if.then33 ], [ 0, %lor.lhs.false55 ], [ 0, %if.then49 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @standard_80387_constant_p(%struct.rtx_def* readonly %x) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 55
  br i1 %cmp, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %idxprom41 = zext i32 %bf.clear2 to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom41
  %1 = load i32* %arrayidx, align 4, !tbaa !5
  switch i32 %1, label %return [
    i32 2, label %if.end
    i32 6, label %if.end
    i32 8, label %if.end
  ]

if.end:                                           ; preds = %lor.lhs.false, %lor.lhs.false, %lor.lhs.false
  %arrayidx22 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom41
  %2 = load %struct.rtx_def** %arrayidx22, align 8, !tbaa !6
  %cmp23 = icmp eq %struct.rtx_def* %2, %x
  br i1 %cmp23, label %return, label %if.end25

if.end25:                                         ; preds = %if.end
  %arrayidx30 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom41
  %3 = load %struct.rtx_def** %arrayidx30, align 8, !tbaa !6
  %cmp31 = icmp eq %struct.rtx_def* %3, %x
  %. = select i1 %cmp31, i32 2, i32 0
  br label %return

return:                                           ; preds = %if.end25, %if.end, %entry, %lor.lhs.false
  %retval.0 = phi i32 [ -1, %lor.lhs.false ], [ -1, %entry ], [ 1, %if.end ], [ %., %if.end25 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @standard_sse_constant_p(%struct.rtx_def* readonly %x) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 55
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %idxprom6 = zext i32 %bf.clear2 to i64
  %arrayidx = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom6
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %cmp3 = icmp eq %struct.rtx_def* %1, %x
  %conv = zext i1 %cmp3 to i32
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %conv, %if.end ], [ -1, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ix86_can_use_return_insn_p() #1 {
entry:
  %frame = alloca %struct.ix86_frame, align 8
  %0 = bitcast %struct.ix86_frame* %frame to i8*
  call void @llvm.lifetime.start(i64 72, i8* %0) #5
  %1 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool = icmp eq i32 %1, 0
  %2 = load i32* @frame_pointer_needed, align 4
  %tobool1 = icmp ne i32 %2, 0
  %or.cond = or i1 %tobool, %tobool1
  br i1 %or.cond, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %3 = load %struct.function** @cfun, align 8, !tbaa !6
  %pops_args = getelementptr inbounds %struct.function* %3, i64 0, i32 8
  %4 = load i32* %pops_args, align 4, !tbaa !86
  %tobool2 = icmp eq i32 %4, 0
  br i1 %tobool2, label %if.end4, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %args_size = getelementptr inbounds %struct.function* %3, i64 0, i32 9
  %5 = load i32* %args_size, align 4, !tbaa !87
  %cmp = icmp sgt i32 %5, 32767
  br i1 %cmp, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end, %land.lhs.true
  call fastcc void @ix86_compute_frame_layout(%struct.ix86_frame* %frame)
  %to_allocate = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  %6 = load i64* %to_allocate, align 8, !tbaa !88
  %cmp5 = icmp eq i64 %6, 0
  br i1 %cmp5, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end4
  %nregs = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 0
  %7 = load i32* %nregs, align 8, !tbaa !90
  %cmp6 = icmp eq i32 %7, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end4
  %8 = phi i1 [ false, %if.end4 ], [ %cmp6, %land.rhs ]
  %land.ext = zext i1 %8 to i32
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %entry, %land.end
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ 0, %entry ], [ 0, %land.lhs.true ]
  call void @llvm.lifetime.end(i64 72, i8* %0) #5
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

; Function Attrs: nounwind uwtable
define internal fastcc void @ix86_compute_frame_layout(%struct.ix86_frame* nocapture %frame) #1 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !6
  %stack_alignment_needed1 = getelementptr inbounds %struct.function* %0, i64 0, i32 52
  %1 = load i32* %stack_alignment_needed1, align 4, !tbaa !91
  %preferred_stack_boundary = getelementptr inbounds %struct.function* %0, i64 0, i32 53
  %2 = load i32* %preferred_stack_boundary, align 4, !tbaa !76
  %call = tail call i64 @get_frame_size() #5
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and.i.i = and i32 %3, 33554432
  %tobool.i.i = icmp eq i32 %and.i.i, 0
  %4 = load i32* @flag_pic, align 4, !tbaa !1
  %lnot.i.i = icmp eq i32 %4, 0
  %phitmp.i.i = select i1 %lnot.i.i, i32 -1, i32 3
  %5 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_pic_offset_table.i.i = getelementptr inbounds %struct.function* %5, i64 0, i32 56
  %6 = bitcast i24* %uses_pic_offset_table.i.i to i32*
  %bf.load.i.i = load i32* %6, align 8
  %7 = and i32 %bf.load.i.i, 3145856
  %8 = icmp eq i32 %7, 0
  %bf.clear15.i.i = and i32 %bf.load.i.i, 128
  %tobool16.i.i = icmp eq i32 %bf.clear15.i.i, 0
  %9 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %phitmp4.i = icmp eq i32 %9, 0
  %phitmp.i..i = select i1 %tobool.i.i, i32 %phitmp.i.i, i32 -1
  %inc9.i = zext i1 %phitmp4.i to i32
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.backedge, %entry
  %indvars.iv.i = phi i64 [ 52, %entry ], [ %indvars.iv.i.be, %for.body.i.backedge ]
  %nregs.05.i = phi i32 [ 0, %entry ], [ %nregs.05.i.be, %for.body.i.backedge ]
  %10 = trunc i64 %indvars.iv.i to i32
  %cmp.i.i = icmp ne i32 %phitmp.i..i, %10
  %or.cond58.i.i = or i1 %cmp.i.i, %8
  br i1 %or.cond58.i.i, label %if.end.i.i, label %ix86_save_reg.exit.i

if.end.i.i:                                       ; preds = %for.body.i
  br i1 %tobool16.i.i, label %if.end28.i.i, label %if.end24.i.i

for.cond.i.i:                                     ; preds = %if.end24.i.i
  %not.cmp20.i.i = icmp ugt i32 %inc.i.i, 1
  br i1 %not.cmp20.i.i, label %if.end28.i.i, label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.end.i.i, %for.cond.i.i
  %cond2155.i.i = phi i32 [ %inc.i.i, %for.cond.i.i ], [ 0, %if.end.i.i ]
  %cmp25.i.i = icmp eq i32 %cond2155.i.i, %10
  %inc.i.i = add i32 %cond2155.i.i, 1
  br i1 %cmp25.i.i, label %ix86_save_reg.exit.i, label %for.cond.i.i

if.end28.i.i:                                     ; preds = %for.cond.i.i, %if.end.i.i
  %arrayidx.i.i = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %indvars.iv.i
  %11 = load i8* %arrayidx.i.i, align 1, !tbaa !5
  %tobool29.i.i = icmp eq i8 %11, 0
  br i1 %tobool29.i.i, label %ix86_save_reg.exit.i, label %land.lhs.true30.i.i

land.lhs.true30.i.i:                              ; preds = %if.end28.i.i
  %arrayidx32.i.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv.i
  %12 = load i8* %arrayidx32.i.i, align 1, !tbaa !5
  %tobool33.i.i = icmp eq i8 %12, 0
  br i1 %tobool33.i.i, label %land.lhs.true34.i.i, label %ix86_save_reg.exit.i

land.lhs.true34.i.i:                              ; preds = %land.lhs.true30.i.i
  %arrayidx36.i.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv.i
  %13 = load i8* %arrayidx36.i.i, align 1, !tbaa !5
  %tobool37.i.i = icmp eq i8 %13, 0
  br i1 %tobool37.i.i, label %land.rhs.i.i, label %ix86_save_reg.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true34.i.i
  %cmp38.i.i = icmp eq i32 %10, 6
  br i1 %cmp38.i.i, label %ix86_save_reg.exit.thread.i, label %ix86_save_reg.exit.i

ix86_save_reg.exit.thread.i:                      ; preds = %land.rhs.i.i
  %nregs.0.inc10.i = add nsw i32 %nregs.05.i, %inc9.i
  br label %for.body.i.backedge

for.body.i.backedge:                              ; preds = %ix86_save_reg.exit.thread.i, %ix86_save_reg.exit.i
  %nregs.05.i.be = phi i32 [ %nregs.0.inc.i, %ix86_save_reg.exit.i ], [ %nregs.0.inc10.i, %ix86_save_reg.exit.thread.i ]
  %indvars.iv.i.be = add nsw i64 %indvars.iv.i, -1
  br label %for.body.i

ix86_save_reg.exit.i:                             ; preds = %if.end24.i.i, %land.rhs.i.i, %land.lhs.true34.i.i, %land.lhs.true30.i.i, %if.end28.i.i, %for.body.i
  %retval.0.i.i = phi i32 [ 1, %for.body.i ], [ 0, %land.lhs.true34.i.i ], [ 0, %land.lhs.true30.i.i ], [ 0, %if.end28.i.i ], [ 1, %land.rhs.i.i ], [ 1, %if.end24.i.i ]
  %nregs.0.inc.i = add nsw i32 %retval.0.i.i, %nregs.05.i
  %cmp.i = icmp sgt i32 %10, 0
  br i1 %cmp.i, label %for.body.i.backedge, label %ix86_nsaved_regs.exit

ix86_nsaved_regs.exit:                            ; preds = %ix86_save_reg.exit.i
  %div = sdiv i32 %1, 8
  %div2 = sdiv i32 %2, 8
  %nregs = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 0
  store i32 %nregs.0.inc.i, i32* %nregs, align 4, !tbaa !90
  %14 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %15 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %15, 23
  %16 = and i32 %and, 4
  %17 = add i32 %16, 4
  %not.tobool = icmp ne i32 %14, 0
  %mul = zext i1 %not.tobool to i32
  %.mul = shl nsw i32 %17, %mul
  %conv = sext i32 %.mul to i64
  %hard_frame_pointer_offset = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 9
  store i64 %conv, i64* %hard_frame_pointer_offset, align 8, !tbaa !92
  %tobool9 = icmp eq i64 %call, 0
  %.off = add i32 %1, 7
  %18 = icmp ugt i32 %.off, 14
  %or.cond = or i1 %tobool9, %18
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %ix86_nsaved_regs.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4048, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.ix86_compute_frame_layout, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %ix86_nsaved_regs.exit
  %and11 = lshr i32 %15, 20
  %19 = and i32 %and11, 32
  %20 = add i32 %19, 32
  %div14 = sdiv i32 %20, 8
  %cmp = icmp slt i32 %div2, %div14
  br i1 %cmp, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4050, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.ix86_compute_frame_layout, i64 0, i64 0)) #8
  unreachable

if.end17:                                         ; preds = %if.end
  %21 = load i32* @ix86_preferred_stack_boundary, align 4, !tbaa !1
  %div18 = sdiv i32 %21, 8
  %cmp19 = icmp sgt i32 %div2, %div18
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end17
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4052, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.ix86_compute_frame_layout, i64 0, i64 0)) #8
  unreachable

if.end22:                                         ; preds = %if.end17
  %cmp24 = icmp sgt i32 %div, %div18
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end22
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4054, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.ix86_compute_frame_layout, i64 0, i64 0)) #8
  unreachable

if.end27:                                         ; preds = %if.end22
  %cmp32 = icmp slt i32 %div, %div14
  %div14.div = select i1 %cmp32, i32 %div14, i32 %div
  %and41 = and i32 %15, 33554432
  %22 = lshr exact i32 %and41, 23
  %23 = add i32 %22, 4
  %mul44 = mul nsw i32 %nregs.0.inc.i, %23
  %add = add nsw i32 %mul44, %.mul
  %machine = getelementptr inbounds %struct.function* %5, i64 0, i32 51
  %24 = load %struct.machine_function** %machine, align 8, !tbaa !31
  %save_varrargs_registers = getelementptr inbounds %struct.machine_function* %24, i64 0, i32 1
  %25 = load i32* %save_varrargs_registers, align 4, !tbaa !70
  %tobool45 = icmp eq i32 %25, 0
  br i1 %tobool45, label %if.else, label %if.then46

if.then46:                                        ; preds = %if.end27
  %tobool42 = icmp ne i32 %and41, 0
  %cond49 = select i1 %tobool42, i32 6, i32 3
  %mul53 = mul nsw i32 %cond49, %23
  %26 = lshr exact i32 %and41, 18
  %add58 = add nsw i32 %mul53, %26
  %add59 = add nsw i32 %add, %add58
  %va_arg_size = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 2
  store i32 %add58, i32* %va_arg_size, align 4, !tbaa !93
  %phitmp201 = sext i32 %add58 to i64
  br label %if.end73

if.else:                                          ; preds = %if.end27
  %va_arg_size72 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 2
  store i32 0, i32* %va_arg_size72, align 4, !tbaa !93
  br label %if.end73

if.end73:                                         ; preds = %if.else, %if.then46
  %27 = phi i64 [ %phitmp201, %if.then46 ], [ 0, %if.else ]
  %offset.0 = phi i32 [ %add59, %if.then46 ], [ %add, %if.else ]
  %add74 = add i32 %div14.div, -1
  %sub = add i32 %add74, %offset.0
  %sub75 = sub nsw i32 0, %div14.div
  %and76 = and i32 %sub, %sub75
  %sub77 = sub nsw i32 %and76, %offset.0
  %padding1 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 1
  store i32 %sub77, i32* %padding1, align 4, !tbaa !94
  %conv80 = sext i32 %and76 to i64
  %frame_pointer_offset = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 8
  store i64 %conv80, i64* %frame_pointer_offset, align 8, !tbaa !95
  %add82 = add nsw i64 %conv80, %call
  %conv83 = trunc i64 %add82 to i32
  %28 = load i32* @target_flags, align 4, !tbaa !1
  %and84 = and i32 %28, 4096
  %tobool85 = icmp eq i32 %and84, 0
  %29 = load i32* @current_function_is_leaf, align 4
  %tobool87 = icmp ne i32 %29, 0
  %or.cond149 = or i1 %tobool85, %tobool87
  br i1 %or.cond149, label %if.else91, label %if.then88

if.then88:                                        ; preds = %if.end73
  %outgoing_args_size = getelementptr inbounds %struct.function* %5, i64 0, i32 11
  %30 = load i32* %outgoing_args_size, align 4, !tbaa !96
  %add89 = add nsw i32 %30, %conv83
  %outgoing_arguments_size = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 5
  store i32 %30, i32* %outgoing_arguments_size, align 4, !tbaa !97
  %phitmp = sext i32 %30 to i64
  br label %if.end93

if.else91:                                        ; preds = %if.end73
  %outgoing_arguments_size92 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 5
  store i32 0, i32* %outgoing_arguments_size92, align 4, !tbaa !97
  br label %if.end93

if.end93:                                         ; preds = %if.else91, %if.then88
  %31 = phi i64 [ 0, %if.else91 ], [ %phitmp, %if.then88 ]
  %offset.1 = phi i32 [ %conv83, %if.else91 ], [ %add89, %if.then88 ]
  %32 = load i32* @current_function_is_leaf, align 4, !tbaa !1
  %tobool94 = icmp eq i32 %32, 0
  br i1 %tobool94, label %if.then96, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end93
  %bf.load = load i32* %6, align 8
  %bf.clear = and i32 %bf.load, 64
  %tobool95 = icmp eq i32 %bf.clear, 0
  br i1 %tobool95, label %if.else102, label %if.then96

if.then96:                                        ; preds = %lor.lhs.false, %if.end93
  %add97 = add i32 %div2, -1
  %sub98 = add i32 %add97, %offset.1
  %sub99 = sub nsw i32 0, %div2
  %and100 = and i32 %sub98, %sub99
  %sub101 = sub nsw i32 %and100, %offset.1
  %padding2 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 4
  store i32 %sub101, i32* %padding2, align 4, !tbaa !98
  br label %if.end104

if.else102:                                       ; preds = %lor.lhs.false
  %padding2103 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 4
  store i32 0, i32* %padding2103, align 4, !tbaa !98
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %if.then96
  %33 = phi i32 [ 0, %if.else102 ], [ %sub101, %if.then96 ]
  %add106 = add nsw i32 %33, %offset.1
  %conv107 = sext i32 %add106 to i64
  %stack_pointer_offset = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 10
  store i64 %conv107, i64* %stack_pointer_offset, align 8, !tbaa !99
  %conv109 = sext i32 %sub77 to i64
  %add110 = add nsw i64 %conv109, %call
  %conv112 = sext i32 %33 to i64
  %add113 = add nsw i64 %add110, %conv112
  %add116 = add nsw i64 %add113, %31
  %add119 = add nsw i64 %add116, %27
  %to_allocate = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  store i64 %add119, i64* %to_allocate, align 8, !tbaa !88
  %34 = load i32* @target_flags, align 4, !tbaa !1
  %and120 = and i32 %34, 33554432
  %tobool121 = icmp eq i32 %and120, 0
  br i1 %tobool121, label %if.else138, label %land.lhs.true122

land.lhs.true122:                                 ; preds = %if.end104
  %and123 = and i32 %34, 67108864
  %tobool124 = icmp eq i32 %and123, 0
  %35 = load i32* @current_function_sp_is_unchanging, align 4
  %tobool126 = icmp ne i32 %35, 0
  %or.cond150 = and i1 %tobool124, %tobool126
  %36 = load i32* @current_function_is_leaf, align 4
  %tobool128 = icmp ne i32 %36, 0
  %or.cond151 = and i1 %or.cond150, %tobool128
  br i1 %or.cond151, label %if.then129, label %if.else138

if.then129:                                       ; preds = %land.lhs.true122
  %conv131 = trunc i64 %add119 to i32
  %red_zone_size = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 6
  %cmp133 = icmp sgt i32 %conv131, 120
  %.conv131 = select i1 %cmp133, i32 120, i32 %conv131
  store i32 %.conv131, i32* %red_zone_size, align 4, !tbaa !100
  %phitmp202 = sext i32 %.conv131 to i64
  br label %if.end140

if.else138:                                       ; preds = %if.end104, %land.lhs.true122
  %red_zone_size139 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 6
  store i32 0, i32* %red_zone_size139, align 4, !tbaa !100
  br label %if.end140

if.end140:                                        ; preds = %if.then129, %if.else138
  %37 = phi i64 [ %phitmp202, %if.then129 ], [ 0, %if.else138 ]
  %sub144 = sub nsw i64 %add119, %37
  store i64 %sub144, i64* %to_allocate, align 8, !tbaa !88
  %sub148 = sub nsw i64 %conv107, %37
  store i64 %sub148, i64* %stack_pointer_offset, align 8, !tbaa !99
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

declare i64 @trunc_int_for_mode(i64, i32) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_frame_pointer_required() #1 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine = getelementptr inbounds %struct.function* %0, i64 0, i32 51
  %1 = load %struct.machine_function** %machine, align 8, !tbaa !31
  %accesses_prev_frame = getelementptr inbounds %struct.machine_function* %1, i64 0, i32 2
  %2 = load i32* %accesses_prev_frame, align 4, !tbaa !101
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %3, 128
  %tobool1 = icmp eq i32 %and, 0
  br i1 %tobool1, label %if.end4, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %call = tail call i32 @leaf_function_p() #5
  %tobool2 = icmp eq i32 %call, 0
  br i1 %tobool2, label %return, label %if.end4

if.end4:                                          ; preds = %land.lhs.true, %if.end
  br label %return

return:                                           ; preds = %land.lhs.true, %entry, %if.end4
  %retval.0 = phi i32 [ 0, %if.end4 ], [ 1, %entry ], [ 1, %land.lhs.true ]
  ret i32 %retval.0
}

declare i32 @leaf_function_p() #0

; Function Attrs: nounwind uwtable
define void @ix86_setup_frame_addresses() #1 {
entry:
  %0 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine = getelementptr inbounds %struct.function* %0, i64 0, i32 51
  %1 = load %struct.machine_function** %machine, align 8, !tbaa !31
  %accesses_prev_frame = getelementptr inbounds %struct.machine_function* %1, i64 0, i32 2
  store i32 1, i32* %accesses_prev_frame, align 4, !tbaa !101
  ret void
}

; Function Attrs: nounwind uwtable
define void @ix86_asm_file_end(%struct._IO_FILE* %file) #1 {
entry:
  %xops = alloca [2 x %struct.rtx_def*], align 16
  %0 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl = shl i32 1, %0
  %and = and i32 %shl, 120
  %tobool = icmp eq i32 %and, 0
  %1 = load i8* getelementptr inbounds ([32 x i8]* @pic_label_name, i64 0, i64 0), align 16
  %cmp = icmp eq i8 %1, 0
  %or.cond = or i1 %tobool, %cmp
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @text_section() #5
  call void @assemble_name(%struct._IO_FILE* %file, i8* getelementptr inbounds ([32 x i8]* @pic_label_name, i64 0, i64 0)) #5
  %2 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str77, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %file)
  %3 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !6
  %arrayidx = getelementptr inbounds [2 x %struct.rtx_def*]* %xops, i64 0, i64 0
  store %struct.rtx_def* %3, %struct.rtx_def** %arrayidx, align 16, !tbaa !6
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call2 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %4) #5
  %arrayidx3 = getelementptr inbounds [2 x %struct.rtx_def*]* %xops, i64 0, i64 1
  store %struct.rtx_def* %call2, %struct.rtx_def** %arrayidx3, align 8, !tbaa !6
  call void @output_asm_insn(i8* getelementptr inbounds ([23 x i8]* @.str78, i64 0, i64 0), %struct.rtx_def** %arrayidx) #5
  call void @output_asm_insn(i8* getelementptr inbounds ([4 x i8]* @.str79, i64 0, i64 0), %struct.rtx_def** %arrayidx) #5
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}

declare void @text_section() #0

declare void @assemble_name(%struct._IO_FILE*, i8*) #0

; Function Attrs: nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) #4

declare void @output_asm_insn(i8*, %struct.rtx_def**) #0

; Function Attrs: nounwind uwtable
define void @load_pic_register() #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 3916, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.load_pic_register, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 4, i8* getelementptr inbounds ([22 x i8]* @.str80, i64 0, i64 0)) #5
  %1 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl = shl i32 1, %1
  %and3 = and i32 %shl, 120
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %if.else, label %if.then5

if.then5:                                         ; preds = %if.end
  %2 = load i8* getelementptr inbounds ([32 x i8]* @pic_label_name, i64 0, i64 0), align 16, !tbaa !5
  %tobool6 = icmp eq i8 %2, 0
  br i1 %tobool6, label %do.body, label %if.end9

do.body:                                          ; preds = %if.then5
  %call8 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([32 x i8]* @pic_label_name, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str55, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str81, i64 0, i64 0), i32 0) #5
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %do.body
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and10 = lshr i32 %3, 25
  %4 = and i32 %and10, 1
  %5 = or i32 %4, 4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %5, i8* getelementptr inbounds ([32 x i8]* @pic_label_name, i64 0, i64 0)) #5
  %call14 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %call13) #5
  br label %if.end17

if.else:                                          ; preds = %if.end
  %call15 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %call15) #5
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end9
  %pclab.0 = phi %struct.rtx_def* [ %call14, %if.end9 ], [ %call16, %if.else ]
  %6 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !6
  %call18 = tail call %struct.rtx_def* @gen_prologue_get_pc(%struct.rtx_def* %6, %struct.rtx_def* %pclab.0) #5
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #5
  %7 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !6
  %call20 = tail call %struct.rtx_def* @gen_prologue_set_got(%struct.rtx_def* %7, %struct.rtx_def* %call, %struct.rtx_def* %pclab.0) #5
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #5
  ret void
}

declare %struct.rtx_def* @gen_rtx_fmt_s(i32, i32, i8*) #0

declare %struct.rtx_def* @gen_prologue_get_pc(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_prologue_set_got(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define i64 @ix86_initial_elimination_offset(i32 %from, i32 %to) #1 {
entry:
  %frame = alloca %struct.ix86_frame, align 8
  %0 = bitcast %struct.ix86_frame* %frame to i8*
  call void @llvm.lifetime.start(i64 72, i8* %0) #5
  call fastcc void @ix86_compute_frame_layout(%struct.ix86_frame* %frame)
  %cmp = icmp eq i32 %from, 16
  %cmp1 = icmp eq i32 %to, 6
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %hard_frame_pointer_offset = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 9
  %1 = load i64* %hard_frame_pointer_offset, align 8, !tbaa !92
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp2 = icmp eq i32 %from, 20
  %or.cond20 = and i1 %cmp2, %cmp1
  br i1 %or.cond20, label %if.then5, label %if.else7

if.then5:                                         ; preds = %if.else
  %hard_frame_pointer_offset6 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 9
  %2 = load i64* %hard_frame_pointer_offset6, align 8, !tbaa !92
  %frame_pointer_offset = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 8
  %3 = load i64* %frame_pointer_offset, align 8, !tbaa !95
  %sub = sub nsw i64 %2, %3
  br label %cleanup

if.else7:                                         ; preds = %if.else
  %cmp8 = icmp eq i32 %to, 7
  br i1 %cmp8, label %if.else10, label %if.then9

if.then9:                                         ; preds = %if.else7
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4013, i8* getelementptr inbounds ([32 x i8]* @__FUNCTION__.ix86_initial_elimination_offset, i64 0, i64 0)) #8
  unreachable

if.else10:                                        ; preds = %if.else7
  br i1 %cmp, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else10
  %stack_pointer_offset = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 10
  %4 = load i64* %stack_pointer_offset, align 8, !tbaa !99
  br label %cleanup

if.else13:                                        ; preds = %if.else10
  br i1 %cmp2, label %if.else16, label %if.then15

if.then15:                                        ; preds = %if.else13
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4017, i8* getelementptr inbounds ([32 x i8]* @__FUNCTION__.ix86_initial_elimination_offset, i64 0, i64 0)) #8
  unreachable

if.else16:                                        ; preds = %if.else13
  %stack_pointer_offset17 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 10
  %5 = load i64* %stack_pointer_offset17, align 8, !tbaa !99
  %frame_pointer_offset18 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 8
  %6 = load i64* %frame_pointer_offset18, align 8, !tbaa !95
  %sub19 = sub nsw i64 %5, %6
  br label %cleanup

cleanup:                                          ; preds = %if.else16, %if.then12, %if.then5, %if.then
  %retval.0 = phi i64 [ %1, %if.then ], [ %sub, %if.then5 ], [ %4, %if.then12 ], [ %sub19, %if.else16 ]
  call void @llvm.lifetime.end(i64 72, i8* %0) #5
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define void @ix86_expand_prologue() #1 {
entry:
  %frame = alloca %struct.ix86_frame, align 8
  %0 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %land.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %1, i64 0, i32 56
  %2 = bitcast i24* %uses_pic_offset_table to i32*
  %bf.load = load i32* %2, align 8
  %3 = and i32 %bf.load, 3145728
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %5 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %5, 33554432
  %lnot = icmp eq i32 %and, 0
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %entry, %land.rhs
  %6 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], [ false, %land.lhs.true ]
  %7 = bitcast %struct.ix86_frame* %frame to i8*
  call void @llvm.lifetime.start(i64 72, i8* %7) #5
  %8 = load i32* @optimize_size, align 4, !tbaa !1
  %tobool7 = icmp eq i32 %8, 0
  br i1 %tobool7, label %if.then, label %if.end12

if.then:                                          ; preds = %land.end
  %call = tail call zeroext i1 @expensive_function_p(i32 30) #5
  %9 = zext i1 %call to i32
  %lnot.ext = xor i32 %9, 1
  store i32 %lnot.ext, i32* @use_fast_prologue_epilogue, align 4, !tbaa !1
  %10 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl = shl i32 1, %10
  %and9 = and i32 %shl, 104
  %tobool10 = icmp eq i32 %and9, 0
  %.lnot.ext = select i1 %tobool10, i32 0, i32 %lnot.ext
  br label %if.end12

if.end12:                                         ; preds = %if.then, %land.end
  %use_mov.0 = phi i32 [ 0, %land.end ], [ %.lnot.ext, %if.then ]
  call fastcc void @ix86_compute_frame_layout(%struct.ix86_frame* %frame)
  %11 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %tobool13 = icmp eq i32 %11, 0
  br i1 %tobool13, label %if.end23, label %if.then14

if.then14:                                        ; preds = %if.end12
  %12 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %13, 25
  %14 = and i32 %and.i, 1
  %15 = or i32 %14, 4
  %16 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 %15, %struct.rtx_def* %16) #5
  %call4.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %15, %struct.rtx_def* %call.i) #5
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call4.i, %struct.rtx_def* %12) #5
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #5
  %17 = getelementptr inbounds %struct.rtx_def* %call16, i64 0, i32 0
  %bf.load17 = load i32* %17, align 8
  %bf.set = or i32 %bf.load17, -2147483648
  store i32 %bf.set, i32* %17, align 8
  %18 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %19 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call19 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %18, %struct.rtx_def* %19) #5
  %20 = getelementptr inbounds %struct.rtx_def* %call19, i64 0, i32 0
  %bf.load20 = load i32* %20, align 8
  %bf.set22 = or i32 %bf.load20, -2147483648
  store i32 %bf.set22, i32* %20, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.end12, %if.then14
  %to_allocate = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  %21 = load i64* %to_allocate, align 8, !tbaa !88
  %cmp = icmp eq i64 %21, 0
  br i1 %cmp, label %land.lhs.true24, label %if.end27

land.lhs.true24:                                  ; preds = %if.end23
  %nregs = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 0
  %22 = load i32* %nregs, align 8, !tbaa !90
  %cmp25 = icmp sgt i32 %22, 1
  %tobool28 = icmp ne i32 %use_mov.0, 0
  %or.cond128 = and i1 %cmp25, %tobool28
  br i1 %or.cond128, label %if.else, label %for.body.i

if.end27:                                         ; preds = %if.end23
  %tobool28.old = icmp eq i32 %use_mov.0, 0
  br i1 %tobool28.old, label %for.body.i, label %if.end27.if.else_crit_edge

if.end27.if.else_crit_edge:                       ; preds = %if.end27
  %nregs30.phi.trans.insert = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 0
  %.pre = load i32* %nregs30.phi.trans.insert, align 8, !tbaa !90
  br label %if.else

for.body.i:                                       ; preds = %if.end27, %land.lhs.true24, %for.inc.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc.i ], [ 52, %land.lhs.true24 ], [ 52, %if.end27 ]
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and.i.i = and i32 %23, 33554432
  %tobool.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.i, label %lor.rhs.i.i, label %lor.end.i.i

lor.rhs.i.i:                                      ; preds = %for.body.i
  %24 = load i32* @flag_pic, align 4, !tbaa !1
  %lnot.i.i = icmp eq i32 %24, 0
  %phitmp.i.i = select i1 %lnot.i.i, i32 -1, i32 3
  br label %lor.end.i.i

lor.end.i.i:                                      ; preds = %lor.rhs.i.i, %for.body.i
  %25 = phi i32 [ -1, %for.body.i ], [ %phitmp.i.i, %lor.rhs.i.i ]
  %26 = trunc i64 %indvars.iv.i to i32
  %cmp.i.i = icmp ne i32 %25, %26
  %27 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_pic_offset_table.i.i = getelementptr inbounds %struct.function* %27, i64 0, i32 56
  %28 = bitcast i24* %uses_pic_offset_table.i.i to i32*
  %bf.load.i.i = load i32* %28, align 8
  %29 = and i32 %bf.load.i.i, 3145856
  %30 = icmp eq i32 %29, 0
  %or.cond58.i.i = or i1 %cmp.i.i, %30
  br i1 %or.cond58.i.i, label %if.end.i.i, label %if.then.i

if.end.i.i:                                       ; preds = %lor.end.i.i
  %bf.clear15.i.i = and i32 %bf.load.i.i, 128
  %tobool16.i.i = icmp eq i32 %bf.clear15.i.i, 0
  br i1 %tobool16.i.i, label %if.end28.i.i, label %if.end24.i.i

for.cond.i.i:                                     ; preds = %if.end24.i.i
  %not.cmp20.i.i = icmp ugt i32 %inc.i.i, 1
  br i1 %not.cmp20.i.i, label %if.end28.i.i, label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.end.i.i, %for.cond.i.i
  %cond2155.i.i = phi i32 [ %inc.i.i, %for.cond.i.i ], [ 0, %if.end.i.i ]
  %cmp25.i.i = icmp eq i32 %cond2155.i.i, %26
  %inc.i.i = add i32 %cond2155.i.i, 1
  br i1 %cmp25.i.i, label %if.then.i, label %for.cond.i.i

if.end28.i.i:                                     ; preds = %for.cond.i.i, %if.end.i.i
  %arrayidx.i.i = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %indvars.iv.i
  %31 = load i8* %arrayidx.i.i, align 1, !tbaa !5
  %tobool29.i.i = icmp eq i8 %31, 0
  br i1 %tobool29.i.i, label %for.inc.i, label %land.lhs.true30.i.i

land.lhs.true30.i.i:                              ; preds = %if.end28.i.i
  %arrayidx32.i.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv.i
  %32 = load i8* %arrayidx32.i.i, align 1, !tbaa !5
  %tobool33.i.i = icmp eq i8 %32, 0
  br i1 %tobool33.i.i, label %land.lhs.true34.i.i, label %for.inc.i

land.lhs.true34.i.i:                              ; preds = %land.lhs.true30.i.i
  %arrayidx36.i.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv.i
  %33 = load i8* %arrayidx36.i.i, align 1, !tbaa !5
  %tobool37.i.i = icmp eq i8 %33, 0
  br i1 %tobool37.i.i, label %land.rhs.i.i, label %for.inc.i

land.rhs.i.i:                                     ; preds = %land.lhs.true34.i.i
  %cmp38.i.i = icmp ne i32 %26, 6
  %34 = load i32* @frame_pointer_needed, align 4
  %lnot42.i.i = icmp eq i32 %34, 0
  %or.cond.i = or i1 %cmp38.i.i, %lnot42.i.i
  br i1 %or.cond.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %if.end24.i.i, %land.rhs.i.i, %lor.end.i.i
  %and.i118 = lshr i32 %23, 25
  %35 = and i32 %and.i118, 1
  %36 = or i32 %35, 4
  %call2.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 %36, i32 %26) #5
  %37 = load i32* @target_flags, align 4, !tbaa !1
  %and.i8.i = lshr i32 %37, 25
  %38 = and i32 %and.i8.i, 1
  %39 = or i32 %38, 4
  %40 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call.i.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 %39, %struct.rtx_def* %40) #5
  %call4.i.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %39, %struct.rtx_def* %call.i.i) #5
  %call5.i.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call4.i.i, %struct.rtx_def* %call2.i) #5
  %call4.i119 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i.i) #5
  %41 = getelementptr inbounds %struct.rtx_def* %call4.i119, i64 0, i32 0
  %bf.load.i = load i32* %41, align 8
  %bf.set.i = or i32 %bf.load.i, -2147483648
  store i32 %bf.set.i, i32* %41, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %land.rhs.i.i, %land.lhs.true34.i.i, %land.lhs.true30.i.i, %if.end28.i.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %cmp.i = icmp sgt i32 %26, 0
  br i1 %cmp.i, label %for.body.i, label %if.end33

if.else:                                          ; preds = %if.end27.if.else_crit_edge, %land.lhs.true24
  %42 = phi i32 [ %.pre, %if.end27.if.else_crit_edge ], [ %22, %land.lhs.true24 ]
  %43 = load i32* @target_flags, align 4, !tbaa !1
  %and31 = lshr i32 %43, 23
  %44 = and i32 %and31, 4
  %45 = add i32 %44, 4
  %mul = mul nsw i32 %45, %42
  %conv = sext i32 %mul to i64
  %add = add nsw i64 %conv, %21
  br label %if.end33

if.end33:                                         ; preds = %for.inc.i, %if.else
  %tobool28121 = phi i1 [ true, %if.else ], [ false, %for.inc.i ]
  %allocate.0 = phi i64 [ %add, %if.else ], [ %21, %for.inc.i ]
  %cmp34 = icmp eq i64 %allocate.0, 0
  br i1 %cmp34, label %if.end71, label %if.else37

if.else37:                                        ; preds = %if.end33
  %46 = load i32* @target_flags, align 4, !tbaa !1
  %and38 = and i32 %46, 256
  %tobool39 = icmp eq i32 %and38, 0
  %cmp41 = icmp slt i64 %allocate.0, -1
  %or.cond = or i1 %tobool39, %cmp41
  br i1 %or.cond, label %if.then43, label %if.else50

if.then43:                                        ; preds = %if.else37
  %47 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %sub = sub nsw i64 0, %allocate.0
  %call44 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #5
  %call45 = tail call %struct.rtx_def* @gen_pro_epilogue_adjust_stack(%struct.rtx_def* %47, %struct.rtx_def* %47, %struct.rtx_def* %call44) #5
  %call46 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call45) #5
  %48 = getelementptr inbounds %struct.rtx_def* %call46, i64 0, i32 0
  %bf.load47 = load i32* %48, align 8
  %bf.set49 = or i32 %bf.load47, -2147483648
  store i32 %bf.set49, i32* %48, align 8
  br label %if.end71

if.else50:                                        ; preds = %if.else37
  %and51 = and i32 %46, 33554432
  %tobool52 = icmp eq i32 %and51, 0
  br i1 %tobool52, label %if.end54, label %if.then53

if.then53:                                        ; preds = %if.else50
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4235, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.ix86_expand_prologue, i64 0, i64 0)) #8
  unreachable

if.end54:                                         ; preds = %if.else50
  %call55 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 0) #5
  %call56 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %allocate.0) #5
  %call57 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call55, %struct.rtx_def* %call56) #5
  %49 = load i32* @target_flags, align 4, !tbaa !1
  %and58 = lshr i32 %49, 25
  %50 = and i32 %and58, 1
  %51 = or i32 %50, 4
  %call61 = tail call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %51, i8* getelementptr inbounds ([8 x i8]* @.str82, i64 0, i64 0)) #5
  %call62 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %call61) #5
  %52 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %53 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %call63 = tail call %struct.rtx_def* @gen_call(%struct.rtx_def* %call62, %struct.rtx_def* %52, %struct.rtx_def* %53) #5
  %call64 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call63) #5
  %call65 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %call55) #5
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call64, i64 0, i32 1, i64 7
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call66 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 0, %struct.rtx_def* %call65, %struct.rtx_def* %54) #5
  %55 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %call66.c = ptrtoint %struct.rtx_def* %call66 to i64
  store i64 %call66.c, i64* %55, align 8, !tbaa !6
  br label %if.end71

if.end71:                                         ; preds = %if.then43, %if.end54, %if.end33
  br i1 %tobool28121, label %if.then73, label %if.end89

if.then73:                                        ; preds = %if.end71
  %56 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %tobool74 = icmp eq i32 %56, 0
  %or.cond117 = or i1 %tobool74, %cmp
  br i1 %or.cond117, label %if.then78, label %if.else80

if.then78:                                        ; preds = %if.then73
  %57 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  tail call fastcc void @ix86_emit_save_regs_using_mov(%struct.rtx_def* %57, i64 %21)
  br label %if.end89

if.else80:                                        ; preds = %if.then73
  %58 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %nregs81 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 0
  %59 = load i32* %nregs81, align 8, !tbaa !90
  %sub82 = sub i32 0, %59
  %60 = load i32* @target_flags, align 4, !tbaa !1
  %and83 = lshr i32 %60, 23
  %61 = and i32 %and83, 4
  %62 = add i32 %61, 4
  %mul86 = mul nsw i32 %62, %sub82
  %conv87 = sext i32 %mul86 to i64
  tail call fastcc void @ix86_emit_save_regs_using_mov(%struct.rtx_def* %58, i64 %conv87)
  br label %if.end89

if.end89:                                         ; preds = %if.then78, %if.else80, %if.end71
  br i1 %6, label %if.end92.thread, label %if.end92

if.end92.thread:                                  ; preds = %if.end89
  tail call void @load_pic_register()
  br label %if.end102

if.end92:                                         ; preds = %if.end89
  %63 = load %struct.function** @cfun, align 8, !tbaa !6
  %profile = getelementptr inbounds %struct.function* %63, i64 0, i32 56
  %64 = bitcast i24* %profile to i32*
  %bf.load93 = load i32* %64, align 8
  %bf.clear95 = and i32 %bf.load93, 16384
  %tobool96 = icmp eq i32 %bf.clear95, 0
  br i1 %tobool96, label %if.end102, label %if.then99

if.then99:                                        ; preds = %if.end92
  %call100 = tail call %struct.rtx_def* @gen_blockage() #5
  %call101 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call100) #5
  br label %if.end102

if.end102:                                        ; preds = %if.end92.thread, %if.end92, %if.then99
  call void @llvm.lifetime.end(i64 72, i8* %7) #5
  ret void
}

declare zeroext i1 @expensive_function_p(i32) #0

declare %struct.rtx_def* @gen_pro_epilogue_adjust_stack(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @emit_call_insn(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_call(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define internal fastcc void @ix86_emit_save_regs_using_mov(%struct.rtx_def* %pointer, i64 %offset) #1 {
entry:
  %.pre = load i32* @target_flags, align 4, !tbaa !1
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %0 = phi i32 [ %.pre, %entry ], [ %24, %for.inc ]
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %offset.addr.027 = phi i64 [ %offset, %entry ], [ %offset.addr.1, %for.inc ]
  %and.i = and i32 %0, 33554432
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %for.body
  %1 = load i32* @flag_pic, align 4, !tbaa !1
  %lnot.i = icmp eq i32 %1, 0
  %phitmp.i = select i1 %lnot.i, i32 -1, i32 3
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %for.body
  %2 = phi i32 [ -1, %for.body ], [ %phitmp.i, %lor.rhs.i ]
  %3 = trunc i64 %indvars.iv to i32
  %cmp.i = icmp ne i32 %2, %3
  %4 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_pic_offset_table.i = getelementptr inbounds %struct.function* %4, i64 0, i32 56
  %5 = bitcast i24* %uses_pic_offset_table.i to i32*
  %bf.load.i = load i32* %5, align 8
  %6 = and i32 %bf.load.i, 3145856
  %7 = icmp eq i32 %6, 0
  %or.cond58.i = or i1 %cmp.i, %7
  br i1 %or.cond58.i, label %if.end.i, label %if.then

if.end.i:                                         ; preds = %lor.end.i
  %bf.clear15.i = and i32 %bf.load.i, 128
  %tobool16.i = icmp eq i32 %bf.clear15.i, 0
  br i1 %tobool16.i, label %if.end28.i, label %if.end24.i

for.cond.i:                                       ; preds = %if.end24.i
  %not.cmp20.i = icmp ugt i32 %inc.i, 1
  br i1 %not.cmp20.i, label %if.end28.i, label %if.end24.i

if.end24.i:                                       ; preds = %if.end.i, %for.cond.i
  %cond2155.i = phi i32 [ %inc.i, %for.cond.i ], [ 0, %if.end.i ]
  %cmp25.i = icmp eq i32 %cond2155.i, %3
  %inc.i = add i32 %cond2155.i, 1
  br i1 %cmp25.i, label %if.then, label %for.cond.i

if.end28.i:                                       ; preds = %for.cond.i, %if.end.i
  %arrayidx.i = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %indvars.iv
  %8 = load i8* %arrayidx.i, align 1, !tbaa !5
  %tobool29.i = icmp eq i8 %8, 0
  br i1 %tobool29.i, label %for.inc, label %land.lhs.true30.i

land.lhs.true30.i:                                ; preds = %if.end28.i
  %arrayidx32.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv
  %9 = load i8* %arrayidx32.i, align 1, !tbaa !5
  %tobool33.i = icmp eq i8 %9, 0
  br i1 %tobool33.i, label %land.lhs.true34.i, label %for.inc

land.lhs.true34.i:                                ; preds = %land.lhs.true30.i
  %arrayidx36.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv
  %10 = load i8* %arrayidx36.i, align 1, !tbaa !5
  %tobool37.i = icmp eq i8 %10, 0
  br i1 %tobool37.i, label %land.rhs.i, label %for.inc

land.rhs.i:                                       ; preds = %land.lhs.true34.i
  %cmp38.i = icmp ne i32 %3, 6
  %11 = load i32* @frame_pointer_needed, align 4
  %lnot42.i = icmp eq i32 %11, 0
  %or.cond = or i1 %cmp38.i, %lnot42.i
  br i1 %or.cond, label %if.then, label %for.inc

if.then:                                          ; preds = %if.end24.i, %land.rhs.i, %lor.end.i
  %and = lshr i32 %0, 25
  %12 = and i32 %and, 1
  %13 = or i32 %12, 4
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %13, %struct.rtx_def* %pointer) #5
  %14 = load i32* @target_flags, align 4, !tbaa !1
  %and3 = lshr i32 %14, 25
  %15 = and i32 %and3, 1
  %16 = or i32 %15, 4
  %call6 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call2, i32 %16, i64 %offset.addr.027, i32 1, i32 1) #5
  %17 = load i32* @target_flags, align 4, !tbaa !1
  %and7 = lshr i32 %17, 25
  %18 = and i32 %and7, 1
  %19 = or i32 %18, 4
  %call10 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %19, i32 %3) #5
  %call11 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call6, %struct.rtx_def* %call10) #5
  %20 = getelementptr inbounds %struct.rtx_def* %call11, i64 0, i32 0
  %bf.load = load i32* %20, align 8
  %bf.set = or i32 %bf.load, -2147483648
  store i32 %bf.set, i32* %20, align 8
  %21 = load i32* @target_flags, align 4, !tbaa !1
  %and12 = lshr i32 %21, 23
  %22 = and i32 %and12, 4
  %23 = add i32 %22, 4
  %conv19 = zext i32 %23 to i64
  %add = add nsw i64 %conv19, %offset.addr.027
  br label %for.inc

for.inc:                                          ; preds = %land.rhs.i, %if.end28.i, %land.lhs.true30.i, %land.lhs.true34.i, %if.then
  %24 = phi i32 [ %21, %if.then ], [ %0, %land.lhs.true34.i ], [ %0, %land.lhs.true30.i ], [ %0, %if.end28.i ], [ %0, %land.rhs.i ]
  %offset.addr.1 = phi i64 [ %add, %if.then ], [ %offset.addr.027, %land.lhs.true34.i ], [ %offset.addr.027, %land.lhs.true30.i ], [ %offset.addr.027, %if.end28.i ], [ %offset.addr.027, %land.rhs.i ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  ret void
}

declare %struct.rtx_def* @gen_blockage() #0

; Function Attrs: nounwind uwtable
define void @ix86_expand_epilogue(i32 %style) #1 {
entry:
  %frame = alloca %struct.ix86_frame, align 8
  %0 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %1 = load i32* @current_function_sp_is_unchanging, align 4, !tbaa !1
  %tobool1 = icmp ne i32 %1, 0
  br label %lor.end

lor.end:                                          ; preds = %entry, %lor.rhs
  %2 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %3 = bitcast %struct.ix86_frame* %frame to i8*
  call void @llvm.lifetime.start(i64 72, i8* %3) #5
  call fastcc void @ix86_compute_frame_layout(%struct.ix86_frame* %frame)
  %nregs = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 0
  %4 = load i32* %nregs, align 8, !tbaa !90
  %conv = sext i32 %4 to i64
  %5 = load %struct.function** @cfun, align 8, !tbaa !6
  %calls_eh_return = getelementptr inbounds %struct.function* %5, i64 0, i32 56
  %6 = bitcast i24* %calls_eh_return to i32*
  %bf.load = load i32* %6, align 8
  %bf.clear = and i32 %bf.load, 128
  %tobool2 = icmp ne i32 %bf.clear, 0
  %cmp = icmp ne i32 %style, 2
  %or.cond = and i1 %tobool2, %cmp
  %sub = add nsw i64 %conv, -2
  %sub.conv = select i1 %or.cond, i64 %sub, i64 %conv
  %7 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %7, 23
  %8 = and i32 %and, 4
  %sub5 = sub i32 -4, %8
  %conv6 = sext i32 %sub5 to i64
  %mul = mul nsw i64 %conv6, %sub.conv
  %.not = xor i1 %2, true
  %cmp10 = icmp slt i32 %4, 2
  %or.cond283 = and i1 %cmp10, %.not
  br i1 %or.cond283, label %if.then48, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %lor.end
  %9 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl = shl i32 1, %9
  %and12 = and i32 %shl, 104
  %tobool13 = icmp ne i32 %and12, 0
  %10 = load i32* @use_fast_prologue_epilogue, align 4
  %tobool15 = icmp ne i32 %10, 0
  %or.cond257 = and i1 %tobool13, %tobool15
  br i1 %or.cond257, label %land.lhs.true16, label %lor.lhs.false22

land.lhs.true16:                                  ; preds = %lor.lhs.false
  %cmp18 = icmp sgt i32 %4, 1
  br i1 %cmp18, label %if.then48, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %land.lhs.true16
  %to_allocate = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  %11 = load i64* %to_allocate, align 8, !tbaa !88
  %tobool21 = icmp eq i64 %11, 0
  br i1 %tobool21, label %lor.lhs.false22, label %if.then48

lor.lhs.false22:                                  ; preds = %lor.lhs.false20, %lor.lhs.false
  %12 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %tobool23 = icmp ne i32 %12, 0
  %tobool26 = icmp eq i32 %4, 0
  %or.cond284 = and i1 %tobool23, %tobool26
  br i1 %or.cond284, label %land.lhs.true27, label %lor.lhs.false30

land.lhs.true27:                                  ; preds = %lor.lhs.false22
  %to_allocate28 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  %13 = load i64* %to_allocate28, align 8, !tbaa !88
  %tobool29 = icmp eq i64 %13, 0
  br i1 %tobool29, label %lor.lhs.false30, label %if.then48

lor.lhs.false30:                                  ; preds = %land.lhs.true27, %lor.lhs.false22
  %tobool31 = icmp eq i32 %12, 0
  br i1 %tobool31, label %lor.lhs.false42, label %land.lhs.true32

land.lhs.true32:                                  ; preds = %lor.lhs.false30
  %and34 = and i32 %shl, 49
  %tobool35 = icmp ne i32 %and34, 0
  %or.cond258 = and i1 %tobool35, %tobool15
  %cmp40 = icmp eq i32 %4, 1
  %or.cond285 = and i1 %or.cond258, %cmp40
  br i1 %or.cond285, label %if.then48, label %lor.lhs.false42

lor.lhs.false42:                                  ; preds = %lor.lhs.false30, %land.lhs.true32
  %tobool47 = icmp eq i32 %bf.clear, 0
  br i1 %tobool47, label %if.else151, label %if.then48

if.then48:                                        ; preds = %land.lhs.true32, %lor.end, %lor.lhs.false20, %land.lhs.true27, %lor.lhs.false42, %land.lhs.true16
  %14 = phi i32 [ 1, %land.lhs.true32 ], [ %4, %lor.end ], [ %4, %lor.lhs.false20 ], [ 0, %land.lhs.true27 ], [ %4, %lor.lhs.false42 ], [ %4, %land.lhs.true16 ]
  %15 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %tobool49 = icmp eq i32 %15, 0
  br i1 %tobool49, label %if.then48.if.then55_crit_edge, label %lor.lhs.false50

if.then48.if.then55_crit_edge:                    ; preds = %if.then48
  %to_allocate56.phi.trans.insert = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  %.pre = load i64* %to_allocate56.phi.trans.insert, align 8, !tbaa !88
  %phitmp = trunc i64 %.pre to i32
  br label %if.then55

lor.lhs.false50:                                  ; preds = %if.then48
  br i1 %2, label %land.lhs.true52, label %if.else

land.lhs.true52:                                  ; preds = %lor.lhs.false50
  %to_allocate53 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  %16 = load i64* %to_allocate53, align 8, !tbaa !88
  %tobool54 = icmp eq i64 %16, 0
  br i1 %tobool54, label %if.then55, label %if.else

if.then55:                                        ; preds = %if.then48.if.then55_crit_edge, %land.lhs.true52
  %17 = phi i32 [ %phitmp, %if.then48.if.then55_crit_edge ], [ 0, %land.lhs.true52 ]
  %18 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %cmp58 = icmp eq i32 %style, 2
  %conv59 = zext i1 %cmp58 to i32
  tail call fastcc void @ix86_emit_restore_regs_using_mov(%struct.rtx_def* %18, i32 %17, i32 %conv59)
  br label %if.end63

if.else:                                          ; preds = %land.lhs.true52, %lor.lhs.false50
  %19 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %conv60 = trunc i64 %mul to i32
  %cmp61 = icmp eq i32 %style, 2
  %conv62 = zext i1 %cmp61 to i32
  tail call fastcc void @ix86_emit_restore_regs_using_mov(%struct.rtx_def* %19, i32 %conv60, i32 %conv62)
  br label %if.end63

if.end63:                                         ; preds = %if.else, %if.then55
  %cmp64 = icmp eq i32 %style, 2
  br i1 %cmp64, label %if.then66, label %if.else107

if.then66:                                        ; preds = %if.end63
  %20 = load i32* @target_flags, align 4, !tbaa !1
  %and68 = lshr i32 %20, 25
  %21 = and i32 %and68, 1
  %22 = or i32 %21, 4
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 %22, i32 2) #5
  %23 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %tobool71 = icmp eq i32 %23, 0
  %24 = load i32* @target_flags, align 4, !tbaa !1
  %and73 = lshr i32 %24, 25
  %25 = and i32 %and73, 1
  %26 = or i32 %25, 4
  br i1 %tobool71, label %if.else91, label %if.end220.thread

if.end220.thread:                                 ; preds = %if.then66
  %27 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %call76 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %26, %struct.rtx_def* %27, %struct.rtx_def* %call) #5
  %28 = load i32* @target_flags, align 4, !tbaa !1
  %and77 = lshr i32 %28, 23
  %29 = and i32 %and77, 4
  %30 = add i32 %29, 4
  %conv80282 = zext i32 %30 to i64
  %call81 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call76, i64 %conv80282) #5
  %call82 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call81) #5
  %call83 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call82) #5
  %31 = load i32* @target_flags, align 4, !tbaa !1
  %and84 = lshr i32 %31, 25
  %32 = and i32 %and84, 1
  %33 = or i32 %32, 4
  %34 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %call87 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %33, %struct.rtx_def* %34) #5
  %35 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %call88 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %35, %struct.rtx_def* %call87) #5
  %36 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %37 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call89 = tail call %struct.rtx_def* @gen_pro_epilogue_adjust_stack(%struct.rtx_def* %36, %struct.rtx_def* %call, %struct.rtx_def* %37) #5
  %call90 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call89) #5
  br label %if.end224

if.else91:                                        ; preds = %if.then66
  %38 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call95 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %26, %struct.rtx_def* %38, %struct.rtx_def* %call) #5
  %to_allocate96 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  %39 = load i64* %to_allocate96, align 8, !tbaa !88
  %40 = load i32* @target_flags, align 4, !tbaa !1
  %and98 = lshr i32 %40, 23
  %41 = and i32 %and98, 4
  %42 = add i32 %41, 4
  %mul101 = mul nsw i32 %42, %14
  %conv102 = sext i32 %mul101 to i64
  %add = add nsw i64 %conv102, %39
  %call103 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call95, i64 %add) #5
  %43 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call104 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %43, %struct.rtx_def* %call103) #5
  %call105 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call104) #5
  br label %if.end220

if.else107:                                       ; preds = %if.end63
  %44 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %tobool108 = icmp eq i32 %44, 0
  br i1 %tobool108, label %if.then109, label %if.else121

if.then109:                                       ; preds = %if.else107
  %45 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %to_allocate110 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  %46 = load i64* %to_allocate110, align 8, !tbaa !88
  %47 = load i32* @target_flags, align 4, !tbaa !1
  %and112 = lshr i32 %47, 23
  %48 = and i32 %and112, 4
  %49 = add i32 %48, 4
  %mul115 = mul nsw i32 %49, %14
  %conv116 = sext i32 %mul115 to i64
  %add117 = add nsw i64 %conv116, %46
  %call118 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add117) #5
  %call119 = tail call %struct.rtx_def* @gen_pro_epilogue_adjust_stack(%struct.rtx_def* %45, %struct.rtx_def* %45, %struct.rtx_def* %call118) #5
  %call120 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call119) #5
  br label %if.end220

if.else121:                                       ; preds = %if.else107
  %50 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl122 = shl i32 1, %50
  %and123 = and i32 %shl122, 49
  %51 = load i32* @optimize_size, align 4
  %52 = or i32 %and123, %51
  %or.cond259.not = icmp eq i32 %52, 0
  %53 = load i32* @use_fast_prologue_epilogue, align 4
  %tobool128 = icmp ne i32 %53, 0
  %or.cond260 = and i1 %or.cond259.not, %tobool128
  br i1 %or.cond260, label %if.else136, label %if.then129

if.then129:                                       ; preds = %if.else121
  %54 = load i32* @target_flags, align 4, !tbaa !1
  %and130 = and i32 %54, 33554432
  %tobool131 = icmp eq i32 %and130, 0
  br i1 %tobool131, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then129
  %call132 = tail call %struct.rtx_def* @gen_leave_rex64() #5
  br label %cond.end

cond.false:                                       ; preds = %if.then129
  %call133 = tail call %struct.rtx_def* @gen_leave() #5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond134 = phi %struct.rtx_def* [ %call132, %cond.true ], [ %call133, %cond.false ]
  %call135 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %cond134) #5
  br label %if.end220

if.else136:                                       ; preds = %if.else121
  %55 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %56 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %57 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call137 = tail call %struct.rtx_def* @gen_pro_epilogue_adjust_stack(%struct.rtx_def* %55, %struct.rtx_def* %56, %struct.rtx_def* %57) #5
  %call138 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call137) #5
  %58 = load i32* @target_flags, align 4, !tbaa !1
  %and139 = and i32 %58, 33554432
  %tobool140 = icmp eq i32 %and139, 0
  %59 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  br i1 %tobool140, label %if.else144, label %if.then141

if.then141:                                       ; preds = %if.else136
  %call142 = tail call %struct.rtx_def* @gen_popdi1(%struct.rtx_def* %59) #5
  %call143 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call142) #5
  br label %if.end220

if.else144:                                       ; preds = %if.else136
  %call145 = tail call %struct.rtx_def* @gen_popsi1(%struct.rtx_def* %59) #5
  %call146 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call145) #5
  br label %if.end220

if.else151:                                       ; preds = %lor.lhs.false42
  br i1 %2, label %if.else160, label %if.then153

if.then153:                                       ; preds = %if.else151
  br i1 %tobool31, label %if.then155, label %if.end156

if.then155:                                       ; preds = %if.then153
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4396, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.ix86_expand_epilogue, i64 0, i64 0)) #8
  unreachable

if.end156:                                        ; preds = %if.then153
  %60 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %61 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %call157 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %mul) #5
  %call158 = tail call %struct.rtx_def* @gen_pro_epilogue_adjust_stack(%struct.rtx_def* %60, %struct.rtx_def* %61, %struct.rtx_def* %call157) #5
  %call159 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call158) #5
  br label %for.body

if.else160:                                       ; preds = %if.else151
  %to_allocate161 = getelementptr inbounds %struct.ix86_frame* %frame, i64 0, i32 7
  %62 = load i64* %to_allocate161, align 8, !tbaa !88
  %tobool162 = icmp eq i64 %62, 0
  br i1 %tobool162, label %for.body, label %if.then163

if.then163:                                       ; preds = %if.else160
  %63 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call165 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %62) #5
  %call166 = tail call %struct.rtx_def* @gen_pro_epilogue_adjust_stack(%struct.rtx_def* %63, %struct.rtx_def* %63, %struct.rtx_def* %call165) #5
  %call167 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call166) #5
  br label %for.body

for.body:                                         ; preds = %if.end156, %if.then163, %if.else160, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.else160 ], [ 0, %if.then163 ], [ 0, %if.end156 ]
  %64 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = and i32 %64, 33554432
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %for.body
  %65 = load i32* @flag_pic, align 4, !tbaa !1
  %lnot.i = icmp eq i32 %65, 0
  %phitmp.i = select i1 %lnot.i, i32 -1, i32 3
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %for.body
  %66 = phi i32 [ -1, %for.body ], [ %phitmp.i, %lor.rhs.i ]
  %67 = trunc i64 %indvars.iv to i32
  %cmp.i = icmp ne i32 %66, %67
  %68 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_pic_offset_table.i = getelementptr inbounds %struct.function* %68, i64 0, i32 56
  %69 = bitcast i24* %uses_pic_offset_table.i to i32*
  %bf.load.i = load i32* %69, align 8
  %70 = and i32 %bf.load.i, 3145856
  %71 = icmp eq i32 %70, 0
  %or.cond58.i = or i1 %cmp.i, %71
  br i1 %or.cond58.i, label %if.end.i, label %if.then174

if.end.i:                                         ; preds = %lor.end.i
  %arrayidx.i = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %indvars.iv
  %72 = load i8* %arrayidx.i, align 1, !tbaa !5
  %tobool29.i = icmp eq i8 %72, 0
  br i1 %tobool29.i, label %for.inc, label %land.lhs.true30.i

land.lhs.true30.i:                                ; preds = %if.end.i
  %arrayidx32.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv
  %73 = load i8* %arrayidx32.i, align 1, !tbaa !5
  %tobool33.i = icmp eq i8 %73, 0
  br i1 %tobool33.i, label %land.lhs.true34.i, label %for.inc

land.lhs.true34.i:                                ; preds = %land.lhs.true30.i
  %arrayidx36.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv
  %74 = load i8* %arrayidx36.i, align 1, !tbaa !5
  %tobool37.i = icmp eq i8 %74, 0
  br i1 %tobool37.i, label %land.rhs.i, label %for.inc

land.rhs.i:                                       ; preds = %land.lhs.true34.i
  %cmp38.i = icmp ne i32 %67, 6
  %75 = load i32* @frame_pointer_needed, align 4
  %lnot42.i = icmp eq i32 %75, 0
  %or.cond290 = or i1 %cmp38.i, %lnot42.i
  br i1 %or.cond290, label %if.then174, label %for.inc

if.then174:                                       ; preds = %land.rhs.i, %lor.end.i
  %76 = lshr exact i32 %and.i, 25
  %77 = or i32 %76, 4
  %call181 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %77, i32 %67) #5
  br i1 %tobool.i, label %if.else184, label %if.then177

if.then177:                                       ; preds = %if.then174
  %call182 = tail call %struct.rtx_def* @gen_popdi1(%struct.rtx_def* %call181) #5
  %call183 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call182) #5
  br label %for.inc

if.else184:                                       ; preds = %if.then174
  %call189 = tail call %struct.rtx_def* @gen_popsi1(%struct.rtx_def* %call181) #5
  %call190 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call189) #5
  br label %for.inc

for.inc:                                          ; preds = %land.rhs.i, %if.end.i, %land.lhs.true30.i, %land.lhs.true34.i, %if.else184, %if.then177
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %78 = load i32* @frame_pointer_needed, align 4, !tbaa !1
  %tobool193 = icmp eq i32 %78, 0
  br i1 %tobool193, label %if.end220, label %if.then194

if.then194:                                       ; preds = %for.end
  %79 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl195 = shl i32 1, %79
  %and196 = and i32 %shl195, 49
  %tobool197 = icmp eq i32 %and196, 0
  %80 = load i32* @target_flags, align 4, !tbaa !1
  %and199 = and i32 %80, 33554432
  %tobool200 = icmp ne i32 %and199, 0
  br i1 %tobool197, label %if.else208, label %if.then198

if.then198:                                       ; preds = %if.then194
  br i1 %tobool200, label %cond.true201, label %cond.false203

cond.true201:                                     ; preds = %if.then198
  %call202 = tail call %struct.rtx_def* @gen_leave_rex64() #5
  br label %cond.end205

cond.false203:                                    ; preds = %if.then198
  %call204 = tail call %struct.rtx_def* @gen_leave() #5
  br label %cond.end205

cond.end205:                                      ; preds = %cond.false203, %cond.true201
  %cond206 = phi %struct.rtx_def* [ %call202, %cond.true201 ], [ %call204, %cond.false203 ]
  %call207 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %cond206) #5
  br label %if.end220

if.else208:                                       ; preds = %if.then194
  %81 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  br i1 %tobool200, label %if.then211, label %if.else214

if.then211:                                       ; preds = %if.else208
  %call212 = tail call %struct.rtx_def* @gen_popdi1(%struct.rtx_def* %81) #5
  %call213 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call212) #5
  br label %if.end220

if.else214:                                       ; preds = %if.else208
  %call215 = tail call %struct.rtx_def* @gen_popsi1(%struct.rtx_def* %81) #5
  %call216 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call215) #5
  br label %if.end220

if.end220:                                        ; preds = %for.end, %if.then211, %if.else214, %cond.end205, %if.else91, %cond.end, %if.else144, %if.then141, %if.then109
  %cmp221 = icmp eq i32 %style, 0
  br i1 %cmp221, label %cleanup, label %if.end224

if.end224:                                        ; preds = %if.end220.thread, %if.end220
  %82 = load %struct.function** @cfun, align 8, !tbaa !6
  %pops_args = getelementptr inbounds %struct.function* %82, i64 0, i32 8
  %83 = load i32* %pops_args, align 4, !tbaa !86
  %tobool225 = icmp eq i32 %83, 0
  br i1 %tobool225, label %if.else253, label %land.lhs.true226

land.lhs.true226:                                 ; preds = %if.end224
  %args_size = getelementptr inbounds %struct.function* %82, i64 0, i32 9
  %84 = load i32* %args_size, align 4, !tbaa !87
  %tobool227 = icmp eq i32 %84, 0
  br i1 %tobool227, label %if.else253, label %if.then228

if.then228:                                       ; preds = %land.lhs.true226
  %conv231 = sext i32 %83 to i64
  %call232 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv231) #5
  %85 = load %struct.function** @cfun, align 8, !tbaa !6
  %pops_args233 = getelementptr inbounds %struct.function* %85, i64 0, i32 8
  %86 = load i32* %pops_args233, align 4, !tbaa !86
  %cmp234 = icmp sgt i32 %86, 65535
  br i1 %cmp234, label %if.then236, label %if.else249

if.then236:                                       ; preds = %if.then228
  %call238 = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 2) #5
  %87 = load i32* @target_flags, align 4, !tbaa !1
  %and239 = and i32 %87, 33554432
  %tobool240 = icmp eq i32 %and239, 0
  br i1 %tobool240, label %if.end242, label %if.then241

if.then241:                                       ; preds = %if.then236
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4445, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.ix86_expand_epilogue, i64 0, i64 0)) #8
  unreachable

if.end242:                                        ; preds = %if.then236
  %call243 = tail call %struct.rtx_def* @gen_popsi1(%struct.rtx_def* %call238) #5
  %call244 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call243) #5
  %88 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call245 = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %88, %struct.rtx_def* %88, %struct.rtx_def* %call232) #5
  %call246 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call245) #5
  %call247 = tail call %struct.rtx_def* @gen_return_indirect_internal(%struct.rtx_def* %call238) #5
  %call248 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call247) #5
  br label %cleanup

if.else249:                                       ; preds = %if.then228
  %call250 = tail call %struct.rtx_def* @gen_return_pop_internal(%struct.rtx_def* %call232) #5
  %call251 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call250) #5
  br label %cleanup

if.else253:                                       ; preds = %land.lhs.true226, %if.end224
  %call254 = tail call %struct.rtx_def* @gen_return_internal() #5
  %call255 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call254) #5
  br label %cleanup

cleanup:                                          ; preds = %if.else253, %if.else249, %if.end242, %if.end220
  call void @llvm.lifetime.end(i64 72, i8* %3) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ix86_emit_restore_regs_using_mov(%struct.rtx_def* %pointer, i32 %offset, i32 %maybe_eh_return) #1 {
entry:
  %tobool18.i = icmp ne i32 %maybe_eh_return, 0
  %.pre = load i32* @target_flags, align 4, !tbaa !1
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %0 = phi i32 [ %.pre, %entry ], [ %23, %for.inc ]
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %offset.addr.022 = phi i32 [ %offset, %entry ], [ %offset.addr.1, %for.inc ]
  %and.i = and i32 %0, 33554432
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %for.body
  %1 = load i32* @flag_pic, align 4, !tbaa !1
  %lnot.i = icmp eq i32 %1, 0
  %phitmp.i = select i1 %lnot.i, i32 -1, i32 3
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %for.body
  %2 = phi i32 [ -1, %for.body ], [ %phitmp.i, %lor.rhs.i ]
  %3 = trunc i64 %indvars.iv to i32
  %cmp.i = icmp ne i32 %2, %3
  %4 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_pic_offset_table.i = getelementptr inbounds %struct.function* %4, i64 0, i32 56
  %5 = bitcast i24* %uses_pic_offset_table.i to i32*
  %bf.load.i = load i32* %5, align 8
  %6 = and i32 %bf.load.i, 3145856
  %7 = icmp eq i32 %6, 0
  %or.cond58.i = or i1 %cmp.i, %7
  br i1 %or.cond58.i, label %if.end.i, label %if.then

if.end.i:                                         ; preds = %lor.end.i
  %bf.clear15.i = and i32 %bf.load.i, 128
  %tobool16.i = icmp ne i32 %bf.clear15.i, 0
  %or.cond.i = and i1 %tobool16.i, %tobool18.i
  br i1 %or.cond.i, label %if.end24.i, label %if.end28.i

for.cond.i:                                       ; preds = %if.end24.i
  %not.cmp20.i = icmp ugt i32 %inc.i, 1
  br i1 %not.cmp20.i, label %if.end28.i, label %if.end24.i

if.end24.i:                                       ; preds = %if.end.i, %for.cond.i
  %cond2155.i = phi i32 [ %inc.i, %for.cond.i ], [ 0, %if.end.i ]
  %cmp25.i = icmp eq i32 %cond2155.i, %3
  %inc.i = add i32 %cond2155.i, 1
  br i1 %cmp25.i, label %if.then, label %for.cond.i

if.end28.i:                                       ; preds = %for.cond.i, %if.end.i
  %arrayidx.i = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %indvars.iv
  %8 = load i8* %arrayidx.i, align 1, !tbaa !5
  %tobool29.i = icmp eq i8 %8, 0
  br i1 %tobool29.i, label %for.inc, label %land.lhs.true30.i

land.lhs.true30.i:                                ; preds = %if.end28.i
  %arrayidx32.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv
  %9 = load i8* %arrayidx32.i, align 1, !tbaa !5
  %tobool33.i = icmp eq i8 %9, 0
  br i1 %tobool33.i, label %land.lhs.true34.i, label %for.inc

land.lhs.true34.i:                                ; preds = %land.lhs.true30.i
  %arrayidx36.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv
  %10 = load i8* %arrayidx36.i, align 1, !tbaa !5
  %tobool37.i = icmp eq i8 %10, 0
  br i1 %tobool37.i, label %land.rhs.i, label %for.inc

land.rhs.i:                                       ; preds = %land.lhs.true34.i
  %cmp38.i = icmp ne i32 %3, 6
  %11 = load i32* @frame_pointer_needed, align 4
  %lnot42.i = icmp eq i32 %11, 0
  %or.cond = or i1 %cmp38.i, %lnot42.i
  br i1 %or.cond, label %if.then, label %for.inc

if.then:                                          ; preds = %if.end24.i, %land.rhs.i, %lor.end.i
  %and = lshr i32 %0, 25
  %12 = and i32 %and, 1
  %13 = or i32 %12, 4
  %call2 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %13, i32 %3) #5
  %14 = load i32* @target_flags, align 4, !tbaa !1
  %and3 = lshr i32 %14, 25
  %15 = and i32 %and3, 1
  %16 = or i32 %15, 4
  %call6 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %16, %struct.rtx_def* %pointer) #5
  %17 = load i32* @target_flags, align 4, !tbaa !1
  %and7 = lshr i32 %17, 25
  %18 = and i32 %and7, 1
  %19 = or i32 %18, 4
  %conv = sext i32 %offset.addr.022 to i64
  %call10 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call6, i32 %19, i64 %conv, i32 1, i32 1) #5
  %call11 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2, %struct.rtx_def* %call10) #5
  %20 = load i32* @target_flags, align 4, !tbaa !1
  %and12 = lshr i32 %20, 23
  %21 = and i32 %and12, 4
  %22 = add i32 %offset.addr.022, 4
  %add = add i32 %22, %21
  br label %for.inc

for.inc:                                          ; preds = %land.rhs.i, %if.end28.i, %land.lhs.true30.i, %land.lhs.true34.i, %if.then
  %23 = phi i32 [ %20, %if.then ], [ %0, %land.lhs.true34.i ], [ %0, %land.lhs.true30.i ], [ %0, %if.end28.i ], [ %0, %land.rhs.i ]
  %offset.addr.1 = phi i32 [ %add, %if.then ], [ %offset.addr.022, %land.lhs.true34.i ], [ %offset.addr.022, %land.lhs.true30.i ], [ %offset.addr.022, %if.end28.i ], [ %offset.addr.022, %land.rhs.i ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  ret void
}

declare %struct.rtx_def* @gen_leave_rex64() #0

declare %struct.rtx_def* @gen_leave() #0

declare %struct.rtx_def* @gen_popdi1(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_popsi1(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_addsi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_return_indirect_internal(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_return_pop_internal(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_return_internal() #0

; Function Attrs: nounwind uwtable
define i32 @ix86_address_cost(%struct.rtx_def* %x) #1 {
entry:
  %parts = alloca %struct.ix86_address, align 8
  %call = call fastcc i32 @ix86_decompose_address(%struct.rtx_def* %x, %struct.ix86_address* %parts)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 4601, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.ix86_address_cost, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %disp = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 2
  %0 = load %struct.rtx_def** %disp, align 8, !tbaa !78
  %tobool1 = icmp eq %struct.rtx_def* %0, null
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  %cmp = icmp eq %struct.rtx_def* %0, %1
  %or.cond = or i1 %tobool1, %cmp
  %cost.0 = zext i1 %or.cond to i32
  %base = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 0
  %2 = load %struct.rtx_def** %base, align 8, !tbaa !80
  %tobool5 = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool5, label %lor.lhs.false11, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp8 = icmp eq i32 %bf.clear, 61
  br i1 %cmp8, label %lor.lhs.false, label %if.then24

lor.lhs.false:                                    ; preds = %land.lhs.true6
  %arrayidx = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !1
  %cmp10 = icmp ugt i32 %4, 52
  br i1 %cmp10, label %if.then24, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.end, %lor.lhs.false
  %index = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1
  %5 = load %struct.rtx_def** %index, align 8, !tbaa !81
  %tobool12 = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool12, label %if.end25, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %lor.lhs.false11
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load15 = load i32* %6, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 61
  br i1 %cmp17, label %lor.lhs.false18, label %if.then24

lor.lhs.false18:                                  ; preds = %land.lhs.true13
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtuint22 = bitcast %union.rtunion_def* %arrayidx21 to i32*
  %7 = load i32* %rtuint22, align 4, !tbaa !1
  %cmp23 = icmp ugt i32 %7, 52
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %lor.lhs.false18, %land.lhs.true13, %lor.lhs.false, %land.lhs.true6
  %inc = select i1 %or.cond, i32 2, i32 1
  br label %if.end25

if.end25:                                         ; preds = %lor.lhs.false11, %if.then24, %lor.lhs.false18
  %cost.1 = phi i32 [ %inc, %if.then24 ], [ %cost.0, %lor.lhs.false18 ], [ %cost.0, %lor.lhs.false11 ]
  br i1 %tobool5, label %if.end59, label %land.lhs.true28

land.lhs.true28:                                  ; preds = %if.end25
  %8 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load30 = load i32* %8, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 61
  br i1 %cmp32, label %lor.lhs.false33, label %land.lhs.true39

lor.lhs.false33:                                  ; preds = %land.lhs.true28
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint37 = bitcast %union.rtunion_def* %arrayidx36 to i32*
  %9 = load i32* %rtuint37, align 4, !tbaa !1
  %cmp38 = icmp ugt i32 %9, 52
  br i1 %cmp38, label %land.lhs.true39, label %if.end59

land.lhs.true39:                                  ; preds = %lor.lhs.false33, %land.lhs.true28
  %index40 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1
  %10 = load %struct.rtx_def** %index40, align 8, !tbaa !81
  %tobool41 = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool41, label %if.end59, label %land.lhs.true42

land.lhs.true42:                                  ; preds = %land.lhs.true39
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load44 = load i32* %11, align 8
  %bf.clear45 = and i32 %bf.load44, 65535
  %cmp46 = icmp eq i32 %bf.clear45, 61
  br i1 %cmp46, label %lor.lhs.false47, label %land.lhs.true53

lor.lhs.false47:                                  ; preds = %land.lhs.true42
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0
  %rtuint51 = bitcast %union.rtunion_def* %arrayidx50 to i32*
  %12 = load i32* %rtuint51, align 4, !tbaa !1
  %cmp52 = icmp ugt i32 %12, 52
  br i1 %cmp52, label %land.lhs.true53, label %if.end59

land.lhs.true53:                                  ; preds = %lor.lhs.false47, %land.lhs.true42
  %not.cmp56 = icmp ne %struct.rtx_def* %2, %10
  %inc58 = zext i1 %not.cmp56 to i32
  %cost.1.inc58 = add nsw i32 %inc58, %cost.1
  br label %if.end59

if.end59:                                         ; preds = %land.lhs.true53, %land.lhs.true39, %if.end25, %lor.lhs.false47, %lor.lhs.false33
  %13 = phi %struct.rtx_def* [ %2, %lor.lhs.false47 ], [ %2, %land.lhs.true39 ], [ %2, %lor.lhs.false33 ], [ null, %if.end25 ], [ %2, %land.lhs.true53 ]
  %cost.2 = phi i32 [ %cost.1, %lor.lhs.false47 ], [ %cost.1, %land.lhs.true39 ], [ %cost.1, %lor.lhs.false33 ], [ %cost.1, %if.end25 ], [ %cost.1.inc58, %land.lhs.true53 ]
  %14 = load i32* @ix86_cpu, align 4, !tbaa !5
  %cmp60 = icmp eq i32 %14, 4
  br i1 %cmp60, label %land.lhs.true61, label %if.end97

land.lhs.true61:                                  ; preds = %if.end59
  %tobool63 = icmp ne %struct.rtx_def* %0, null
  %tobool66 = icmp eq %struct.rtx_def* %13, null
  %or.cond102 = or i1 %tobool63, %tobool66
  br i1 %or.cond102, label %lor.lhs.false72, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %land.lhs.true61
  %index68 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1
  %15 = load %struct.rtx_def** %index68, align 8, !tbaa !81
  %tobool69 = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool69, label %lor.lhs.false72, label %land.lhs.true70

land.lhs.true70:                                  ; preds = %land.lhs.true67
  %scale = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 3
  %16 = load i64* %scale, align 8, !tbaa !82
  %cmp71 = icmp eq i64 %16, 1
  br i1 %cmp71, label %lor.lhs.false72, label %if.then96

lor.lhs.false72:                                  ; preds = %land.lhs.true61, %land.lhs.true70, %land.lhs.true67
  %or.cond103 = and i1 %tobool63, %tobool66
  br i1 %or.cond103, label %land.lhs.true78, label %lor.lhs.false84

land.lhs.true78:                                  ; preds = %lor.lhs.false72
  %index79 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1
  %17 = load %struct.rtx_def** %index79, align 8, !tbaa !81
  %tobool80 = icmp eq %struct.rtx_def* %17, null
  br i1 %tobool80, label %lor.lhs.false84, label %land.lhs.true81

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %scale82 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 3
  %18 = load i64* %scale82, align 8, !tbaa !82
  %cmp83 = icmp eq i64 %18, 1
  br i1 %cmp83, label %lor.lhs.false84, label %if.then96

lor.lhs.false84:                                  ; preds = %lor.lhs.false72, %land.lhs.true81, %land.lhs.true78
  br i1 %or.cond102, label %if.end97, label %land.lhs.true90

land.lhs.true90:                                  ; preds = %lor.lhs.false84
  %index91 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1
  %19 = load %struct.rtx_def** %index91, align 8, !tbaa !81
  %tobool92 = icmp eq %struct.rtx_def* %19, null
  br i1 %tobool92, label %if.end97, label %land.lhs.true93

land.lhs.true93:                                  ; preds = %land.lhs.true90
  %scale94 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 3
  %20 = load i64* %scale94, align 8, !tbaa !82
  %cmp95 = icmp eq i64 %20, 1
  br i1 %cmp95, label %if.then96, label %if.end97

if.then96:                                        ; preds = %land.lhs.true70, %land.lhs.true81, %land.lhs.true93
  %add = add nsw i32 %cost.2, 10
  br label %if.end97

if.end97:                                         ; preds = %lor.lhs.false84, %land.lhs.true90, %if.then96, %land.lhs.true93, %if.end59
  %cost.3 = phi i32 [ %cost.2, %lor.lhs.false84 ], [ %add, %if.then96 ], [ %cost.2, %land.lhs.true93 ], [ %cost.2, %land.lhs.true90 ], [ %cost.2, %if.end59 ]
  ret i32 %cost.3
}

; Function Attrs: nounwind readonly uwtable
define %struct.rtx_def* @ix86_find_base_term(%struct.rtx_def* readonly %x) #2 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %1 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  br i1 %tobool, label %if.end48, label %if.then

if.then:                                          ; preds = %entry
  %cmp = icmp eq i32 %bf.clear, 58
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load2 = load i32* %3, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 75
  br i1 %cmp4, label %land.lhs.true, label %if.end21

land.lhs.true:                                    ; preds = %if.end
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 1
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx7, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load8 = load i32* %5, align 8
  %6 = and i32 %bf.load8, 65534
  %switch = icmp eq i32 %6, 54
  br i1 %switch, label %if.then17, label %if.end21

if.then17:                                        ; preds = %land.lhs.true
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx20, align 8, !tbaa !6
  %.phi.trans.insert150 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load22.pre = load i32* %.phi.trans.insert150, align 8
  br label %if.end21

if.end21:                                         ; preds = %land.lhs.true, %if.then17, %if.end
  %bf.load22 = phi i32 [ %bf.load22.pre, %if.then17 ], [ %bf.load2, %if.end ], [ %bf.load2, %land.lhs.true ]
  %term.0 = phi %struct.rtx_def* [ %7, %if.then17 ], [ %2, %if.end ], [ %2, %land.lhs.true ]
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 42
  br i1 %cmp24, label %lor.lhs.false25, label %return

lor.lhs.false25:                                  ; preds = %if.end21
  %fld26 = getelementptr inbounds %struct.rtx_def* %term.0, i64 0, i32 1
  %rtvec = bitcast [1 x %union.rtunion_def]* %fld26 to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %num_elem = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0
  %9 = load i32* %num_elem, align 4, !tbaa !10
  %cmp28 = icmp eq i32 %9, 1
  br i1 %cmp28, label %lor.lhs.false29, label %return

lor.lhs.false29:                                  ; preds = %lor.lhs.false25
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %term.0, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx31 to i32*
  %10 = load i32* %rtint, align 4, !tbaa !1
  %cmp32 = icmp eq i32 %10, 15
  br i1 %cmp32, label %if.end34, label %return

if.end34:                                         ; preds = %lor.lhs.false29
  %arrayidx38 = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 0
  %11 = load %struct.rtx_def** %arrayidx38, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load39 = load i32* %12, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %bf.clear40.off = add i32 %bf.clear40, -67
  %switch146 = icmp ult i32 %bf.clear40.off, 2
  %.x = select i1 %switch146, %struct.rtx_def* %11, %struct.rtx_def* %x
  ret %struct.rtx_def* %.x

if.end48:                                         ; preds = %entry
  %cmp51 = icmp eq i32 %bf.clear, 75
  br i1 %cmp51, label %lor.lhs.false52, label %return

lor.lhs.false52:                                  ; preds = %if.end48
  %fld53 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx55 = bitcast [1 x %union.rtunion_def]* %fld53 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx55, align 8, !tbaa !6
  %14 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !6
  %cmp56 = icmp eq %struct.rtx_def* %13, %14
  br i1 %cmp56, label %lor.lhs.false57, label %return

lor.lhs.false57:                                  ; preds = %lor.lhs.false52
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx60, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load61 = load i32* %16, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 58
  br i1 %cmp63, label %if.end65, label %return

if.end65:                                         ; preds = %lor.lhs.false57
  %arrayidx70 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0
  %rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx71, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load72 = load i32* %18, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 75
  br i1 %cmp74, label %land.lhs.true75, label %if.end86

land.lhs.true75:                                  ; preds = %if.end65
  %arrayidx77 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 1
  %rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx78, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load79 = load i32* %20, align 8
  %bf.clear80 = and i32 %bf.load79, 65535
  %cmp81 = icmp eq i32 %bf.clear80, 54
  br i1 %cmp81, label %if.then82, label %if.end86

if.then82:                                        ; preds = %land.lhs.true75
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx85, align 8, !tbaa !6
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 0
  %bf.load87.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end86

if.end86:                                         ; preds = %if.then82, %land.lhs.true75, %if.end65
  %bf.load87 = phi i32 [ %bf.load87.pre, %if.then82 ], [ %bf.load72, %land.lhs.true75 ], [ %bf.load72, %if.end65 ]
  %term.1 = phi %struct.rtx_def* [ %21, %if.then82 ], [ %17, %land.lhs.true75 ], [ %17, %if.end65 ]
  %bf.clear88 = and i32 %bf.load87, 65535
  %cmp89 = icmp eq i32 %bf.clear88, 42
  br i1 %cmp89, label %lor.lhs.false90, label %return

lor.lhs.false90:                                  ; preds = %if.end86
  %fld91 = getelementptr inbounds %struct.rtx_def* %term.1, i64 0, i32 1
  %rtvec93 = bitcast [1 x %union.rtunion_def]* %fld91 to %struct.rtvec_def**
  %22 = load %struct.rtvec_def** %rtvec93, align 8, !tbaa !6
  %num_elem94 = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 0
  %23 = load i32* %num_elem94, align 4, !tbaa !10
  %cmp95 = icmp eq i32 %23, 1
  br i1 %cmp95, label %lor.lhs.false96, label %return

lor.lhs.false96:                                  ; preds = %lor.lhs.false90
  %arrayidx98 = getelementptr inbounds %struct.rtx_def* %term.1, i64 0, i32 1, i64 1
  %rtint99 = bitcast %union.rtunion_def* %arrayidx98 to i32*
  %24 = load i32* %rtint99, align 4, !tbaa !1
  %cmp100 = icmp eq i32 %24, 7
  br i1 %cmp100, label %if.end102, label %return

if.end102:                                        ; preds = %lor.lhs.false96
  %arrayidx107 = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 1, i64 0
  %25 = load %struct.rtx_def** %arrayidx107, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load108 = load i32* %26, align 8
  %bf.clear109 = and i32 %bf.load108, 65535
  %bf.clear109.off = add i32 %bf.clear109, -67
  %switch147 = icmp ult i32 %bf.clear109.off, 2
  %.x148 = select i1 %switch147, %struct.rtx_def* %25, %struct.rtx_def* %x
  br label %return

return:                                           ; preds = %if.end102, %if.end86, %lor.lhs.false90, %lor.lhs.false96, %if.end48, %lor.lhs.false52, %lor.lhs.false57, %if.end21, %lor.lhs.false25, %lor.lhs.false29, %if.then
  %retval.0 = phi %struct.rtx_def* [ %x, %if.then ], [ %x, %lor.lhs.false29 ], [ %x, %lor.lhs.false25 ], [ %x, %if.end21 ], [ %x, %lor.lhs.false57 ], [ %x, %lor.lhs.false52 ], [ %x, %if.end48 ], [ %x, %lor.lhs.false96 ], [ %x, %lor.lhs.false90 ], [ %x, %if.end86 ], [ %.x148, %if.end102 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @legitimate_pic_address_disp_p(%struct.rtx_def* nocapture readonly %disp) #2 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %disp, i64 0, i32 0
  %bf.load39.pre = load i32* %.phi.trans.insert, align 8
  br i1 %tobool, label %if.end38, label %if.then

if.then:                                          ; preds = %entry
  %bf.clear = and i32 %bf.load39.pre, 65535
  %cmp = icmp eq i32 %bf.clear, 58
  br i1 %cmp, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def* %disp, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %.phi.trans.insert191 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load2.pre = load i32* %.phi.trans.insert191, align 8
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %bf.load2 = phi i32 [ %bf.load2.pre, %if.then1 ], [ %bf.load39.pre, %if.then ]
  %x.0 = phi %struct.rtx_def* [ %1, %if.then1 ], [ %disp, %if.then ]
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 75
  br i1 %cmp4, label %land.lhs.true, label %if.end32

land.lhs.true:                                    ; preds = %if.end
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 1
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx7, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load8 = load i32* %3, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 54
  %4 = load i32* @ix86_cmodel, align 4
  %cmp12 = icmp eq i32 %4, 5
  %or.cond = and i1 %cmp10, %cmp12
  br i1 %or.cond, label %land.lhs.true13, label %if.end32

land.lhs.true13:                                  ; preds = %land.lhs.true
  %rtwint = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint, align 8, !tbaa !77
  %.off = add i64 %5, 1073741823
  %6 = icmp ult i64 %.off, 2147483647
  br i1 %6, label %if.then28, label %if.end32

if.then28:                                        ; preds = %land.lhs.true13
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 0
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx31, align 8, !tbaa !6
  %.phi.trans.insert193 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load.i.pre = load i32* %.phi.trans.insert193, align 8
  br label %if.end32

if.end32:                                         ; preds = %if.then28, %land.lhs.true13, %land.lhs.true, %if.end
  %bf.load.i = phi i32 [ %bf.load.i.pre, %if.then28 ], [ %bf.load2, %land.lhs.true13 ], [ %bf.load2, %land.lhs.true ], [ %bf.load2, %if.end ]
  %x.1 = phi %struct.rtx_def* [ %7, %if.then28 ], [ %x.0, %land.lhs.true13 ], [ %x.0, %land.lhs.true ], [ %x.0, %if.end ]
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.end24.i [
    i32 67, label %return
    i32 58, label %land.lhs.true.i
  ]

land.lhs.true.i:                                  ; preds = %if.end32
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %x.1, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load4.i = load i32* %9, align 8
  %bf.clear5.i = and i32 %bf.load4.i, 65535
  %cmp6.i = icmp eq i32 %bf.clear5.i, 75
  br i1 %cmp6.i, label %land.lhs.true7.i, label %if.end24.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 1
  %rtx13.i = bitcast %union.rtunion_def* %arrayidx12.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx13.i, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load14.i = load i32* %11, align 8
  %bf.clear15.i = and i32 %bf.load14.i, 65535
  %cmp16.i = icmp eq i32 %bf.clear15.i, 54
  br i1 %cmp16.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true7.i
  %arrayidx22.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtx23.i = bitcast %union.rtunion_def* %arrayidx22.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx23.i, align 8, !tbaa !6
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load25.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true7.i, %land.lhs.true.i, %if.end32
  %bf.load25.i = phi i32 [ %bf.load25.pre.i, %if.then17.i ], [ %bf.load.i, %land.lhs.true7.i ], [ %bf.load.i, %land.lhs.true.i ], [ %bf.load.i, %if.end32 ]
  %op.addr.0.i = phi %struct.rtx_def* [ %12, %if.then17.i ], [ %x.1, %land.lhs.true7.i ], [ %x.1, %land.lhs.true.i ], [ %x.1, %if.end32 ]
  %bf.clear26.i = and i32 %bf.load25.i, 65535
  %cmp27.i = icmp eq i32 %bf.clear26.i, 68
  br i1 %cmp27.i, label %if.end29.i, label %if.end38

if.end29.i:                                       ; preds = %if.end24.i
  %13 = and i32 %bf.load25.i, 201326592
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %local_symbolic_operand.exit, label %return

local_symbolic_operand.exit:                      ; preds = %if.end29.i
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %op.addr.0.i, i64 0, i32 1, i64 0
  %rtstr.i = bitcast %union.rtunion_def* %arrayidx39.i to i8**
  %15 = load i8** %rtstr.i, align 8, !tbaa !6
  %16 = load i32* @internal_label_prefix_len, align 4, !tbaa !1
  %conv.i = sext i32 %16 to i64
  %call.i = tail call i32 @strncmp(i8* %15, i8* getelementptr inbounds ([16 x i8]* @internal_label_prefix, i64 0, i64 0), i64 %conv.i) #5
  %cmp40.i = icmp eq i32 %call.i, 0
  br i1 %cmp40.i, label %return, label %if.end38

if.end38:                                         ; preds = %entry, %local_symbolic_operand.exit, %if.end24.i
  %bf.clear40 = and i32 %bf.load39.pre, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 58
  br i1 %cmp41, label %if.end43, label %return

if.end43:                                         ; preds = %if.end38
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %disp, i64 0, i32 1, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx46, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load50 = load i32* %18, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  br i1 %tobool, label %if.end80, label %if.then49

if.then49:                                        ; preds = %if.end43
  %cmp52 = icmp eq i32 %bf.clear51, 42
  br i1 %cmp52, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.then49
  %fld53 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1
  %rtvec = bitcast [1 x %union.rtunion_def]* %fld53 to %struct.rtvec_def**
  %19 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %num_elem = getelementptr inbounds %struct.rtvec_def* %19, i64 0, i32 0
  %20 = load i32* %num_elem, align 4, !tbaa !10
  %cmp55 = icmp eq i32 %20, 1
  br i1 %cmp55, label %lor.lhs.false56, label %return

lor.lhs.false56:                                  ; preds = %lor.lhs.false
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx58 to i32*
  %21 = load i32* %rtint, align 4, !tbaa !1
  %cmp59 = icmp eq i32 %21, 15
  br i1 %cmp59, label %if.end61, label %return

if.end61:                                         ; preds = %lor.lhs.false56
  %arrayidx65 = getelementptr inbounds %struct.rtvec_def* %19, i64 0, i32 1, i64 0
  %22 = load %struct.rtx_def** %arrayidx65, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load66 = load i32* %23, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %bf.clear67.off = add i32 %bf.clear67, -67
  %switch = icmp ult i32 %bf.clear67.off, 2
  %. = zext i1 %switch to i32
  ret i32 %.

if.end80:                                         ; preds = %if.end43
  %cmp83 = icmp eq i32 %bf.clear51, 75
  br i1 %cmp83, label %if.then84, label %if.end96

if.then84:                                        ; preds = %if.end80
  %arrayidx86 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 1
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx87, align 8, !tbaa !6
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load88 = load i32* %25, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %cmp90 = icmp eq i32 %bf.clear89, 54
  br i1 %cmp90, label %if.end92, label %return

if.end92:                                         ; preds = %if.then84
  %arrayidx94 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx95, align 8, !tbaa !6
  %.phi.trans.insert189 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load97.pre = load i32* %.phi.trans.insert189, align 8
  br label %if.end96

if.end96:                                         ; preds = %if.end92, %if.end80
  %bf.load97 = phi i32 [ %bf.load97.pre, %if.end92 ], [ %bf.load50, %if.end80 ]
  %disp.addr.0 = phi %struct.rtx_def* [ %26, %if.end92 ], [ %17, %if.end80 ]
  %bf.clear98 = and i32 %bf.load97, 65535
  %cmp99 = icmp eq i32 %bf.clear98, 42
  br i1 %cmp99, label %lor.lhs.false100, label %return

lor.lhs.false100:                                 ; preds = %if.end96
  %fld101 = getelementptr inbounds %struct.rtx_def* %disp.addr.0, i64 0, i32 1
  %rtvec103 = bitcast [1 x %union.rtunion_def]* %fld101 to %struct.rtvec_def**
  %27 = load %struct.rtvec_def** %rtvec103, align 8, !tbaa !6
  %num_elem104 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 0
  %28 = load i32* %num_elem104, align 4, !tbaa !10
  %cmp105 = icmp eq i32 %28, 1
  br i1 %cmp105, label %if.end107, label %return

if.end107:                                        ; preds = %lor.lhs.false100
  %arrayidx109 = getelementptr inbounds %struct.rtx_def* %disp.addr.0, i64 0, i32 1, i64 1
  %rtint110 = bitcast %union.rtunion_def* %arrayidx109 to i32*
  %29 = load i32* %rtint110, align 4, !tbaa !1
  switch i32 %29, label %return [
    i32 6, label %sw.bb
    i32 7, label %sw.bb119
  ]

sw.bb:                                            ; preds = %if.end107
  %arrayidx115 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 1, i64 0
  %30 = load %struct.rtx_def** %arrayidx115, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load116 = load i32* %31, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 68
  %conv = zext i1 %cmp118 to i32
  br label %return

sw.bb119:                                         ; preds = %if.end107
  %arrayidx124 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 1, i64 0
  %32 = load %struct.rtx_def** %arrayidx124, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load.i151 = load i32* %33, align 8
  %bf.clear.i152 = and i32 %bf.load.i151, 65535
  switch i32 %bf.clear.i152, label %if.end24.i174 [
    i32 67, label %return
    i32 58, label %land.lhs.true.i158
  ]

land.lhs.true.i158:                               ; preds = %sw.bb119
  %arrayidx.i153 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 0
  %rtx.i154 = bitcast %union.rtunion_def* %arrayidx.i153 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx.i154, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load4.i155 = load i32* %35, align 8
  %bf.clear5.i156 = and i32 %bf.load4.i155, 65535
  %cmp6.i157 = icmp eq i32 %bf.clear5.i156, 75
  br i1 %cmp6.i157, label %land.lhs.true7.i164, label %if.end24.i174

land.lhs.true7.i164:                              ; preds = %land.lhs.true.i158
  %arrayidx12.i159 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 1
  %rtx13.i160 = bitcast %union.rtunion_def* %arrayidx12.i159 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx13.i160, align 8, !tbaa !6
  %37 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 0
  %bf.load14.i161 = load i32* %37, align 8
  %bf.clear15.i162 = and i32 %bf.load14.i161, 65535
  %cmp16.i163 = icmp eq i32 %bf.clear15.i162, 54
  br i1 %cmp16.i163, label %if.then17.i169, label %if.end24.i174

if.then17.i169:                                   ; preds = %land.lhs.true7.i164
  %arrayidx22.i165 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 0
  %rtx23.i166 = bitcast %union.rtunion_def* %arrayidx22.i165 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx23.i166, align 8, !tbaa !6
  %.phi.trans.insert.i167 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load25.pre.i168 = load i32* %.phi.trans.insert.i167, align 8
  br label %if.end24.i174

if.end24.i174:                                    ; preds = %if.then17.i169, %land.lhs.true7.i164, %land.lhs.true.i158, %sw.bb119
  %bf.load25.i170 = phi i32 [ %bf.load25.pre.i168, %if.then17.i169 ], [ %bf.load.i151, %land.lhs.true7.i164 ], [ %bf.load.i151, %land.lhs.true.i158 ], [ %bf.load.i151, %sw.bb119 ]
  %op.addr.0.i171 = phi %struct.rtx_def* [ %38, %if.then17.i169 ], [ %32, %land.lhs.true7.i164 ], [ %32, %land.lhs.true.i158 ], [ %32, %sw.bb119 ]
  %bf.clear26.i172 = and i32 %bf.load25.i170, 65535
  %cmp27.i173 = icmp eq i32 %bf.clear26.i172, 68
  br i1 %cmp27.i173, label %if.end29.i175, label %return

if.end29.i175:                                    ; preds = %if.end24.i174
  %39 = and i32 %bf.load25.i170, 201326592
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %if.end37.i182, label %return

if.end37.i182:                                    ; preds = %if.end29.i175
  %arrayidx39.i176 = getelementptr inbounds %struct.rtx_def* %op.addr.0.i171, i64 0, i32 1, i64 0
  %rtstr.i177 = bitcast %union.rtunion_def* %arrayidx39.i176 to i8**
  %41 = load i8** %rtstr.i177, align 8, !tbaa !6
  %42 = load i32* @internal_label_prefix_len, align 4, !tbaa !1
  %conv.i178 = sext i32 %42 to i64
  %call.i179 = tail call i32 @strncmp(i8* %41, i8* getelementptr inbounds ([16 x i8]* @internal_label_prefix, i64 0, i64 0), i64 %conv.i178) #5
  %cmp40.i180 = icmp eq i32 %call.i179, 0
  %..i181 = zext i1 %cmp40.i180 to i32
  br label %return

return:                                           ; preds = %local_symbolic_operand.exit, %if.end29.i, %if.end32, %if.end37.i182, %if.end29.i175, %if.end24.i174, %sw.bb119, %if.end107, %if.end96, %lor.lhs.false100, %if.then84, %if.then49, %lor.lhs.false, %lor.lhs.false56, %if.end38, %sw.bb
  %retval.0 = phi i32 [ %conv, %sw.bb ], [ 1, %local_symbolic_operand.exit ], [ 0, %if.end38 ], [ 0, %lor.lhs.false56 ], [ 0, %lor.lhs.false ], [ 0, %if.then49 ], [ 0, %if.then84 ], [ 0, %lor.lhs.false100 ], [ 0, %if.end96 ], [ 0, %if.end107 ], [ 1, %sw.bb119 ], [ 0, %if.end24.i174 ], [ 1, %if.end29.i175 ], [ %..i181, %if.end37.i182 ], [ 1, %if.end32 ], [ 1, %if.end29.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @legitimate_address_p(i32 %mode, %struct.rtx_def* %addr, i32 %strict) #1 {
entry:
  %parts = alloca %struct.ix86_address, align 8
  %0 = load i8** @ix86_debug_addr_string, align 8, !tbaa !6
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8*]* @mode_name, i64 0, i64 %idxprom
  %2 = load i8** %arrayidx, align 8, !tbaa !6
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([58 x i8]* @.str83, i64 0, i64 0), i8* %2, i32 %strict) #10
  tail call void @debug_rtx(%struct.rtx_def* %addr) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %call1 = call fastcc i32 @ix86_decompose_address(%struct.rtx_def* %addr, %struct.ix86_address* %parts)
  %cmp2 = icmp slt i32 %call1, 1
  br i1 %cmp2, label %report_error, label %if.end4

if.end4:                                          ; preds = %if.end
  %base5 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 0
  %3 = load %struct.rtx_def** %base5, align 8, !tbaa !80
  %index6 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1
  %4 = load %struct.rtx_def** %index6, align 8, !tbaa !81
  %disp7 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 2
  %5 = load %struct.rtx_def** %disp7, align 8, !tbaa !78
  %scale8 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 3
  %6 = load i64* %scale8, align 8, !tbaa !82
  %tobool = icmp ne %struct.rtx_def* %3, null
  br i1 %tobool, label %if.then9, label %if.end107

if.then9:                                         ; preds = %if.end4
  %7 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp10 = icmp eq i32 %bf.clear, 61
  br i1 %cmp10, label %if.end12, label %report_error

if.end12:                                         ; preds = %if.then9
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear14 = and i32 %bf.lshr, 255
  %8 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %8, 25
  %9 = and i32 %and, 1
  %10 = or i32 %9, 4
  %cmp16 = icmp eq i32 %bf.clear14, %10
  br i1 %cmp16, label %if.end18, label %report_error

if.end18:                                         ; preds = %if.end12
  %tobool19 = icmp eq i32 %strict, 0
  %arrayidx71.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint72.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx71.phi.trans.insert to i32*
  %.pre = load i32* %rtuint72.phi.trans.insert, align 4, !tbaa !1
  br i1 %tobool19, label %land.lhs.true69, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end18
  switch i32 %.pre, label %lor.lhs.false31 [
    i32 20, label %if.end107
    i32 16, label %if.end107
    i32 7, label %if.end107
    i32 6, label %if.end107
    i32 5, label %if.end107
    i32 4, label %if.end107
    i32 3, label %if.end107
    i32 2, label %if.end107
    i32 1, label %if.end107
    i32 0, label %if.end107
  ]

lor.lhs.false31:                                  ; preds = %land.lhs.true
  %.off379 = add i32 %.pre, -37
  %11 = icmp ult i32 %.off379, 8
  br i1 %11, label %if.end107, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %lor.lhs.false31
  %idxprom45 = zext i32 %.pre to i64
  %12 = load i16** @reg_renumber, align 8, !tbaa !6
  %arrayidx46 = getelementptr inbounds i16* %12, i64 %idxprom45
  %13 = load i16* %arrayidx46, align 2, !tbaa !102
  switch i16 %13, label %report_error [
    i16 44, label %if.end107
    i16 43, label %if.end107
    i16 42, label %if.end107
    i16 41, label %if.end107
    i16 40, label %if.end107
    i16 39, label %if.end107
    i16 38, label %if.end107
    i16 37, label %if.end107
    i16 7, label %if.end107
    i16 6, label %if.end107
    i16 5, label %if.end107
    i16 4, label %if.end107
    i16 3, label %if.end107
    i16 2, label %if.end107
    i16 1, label %if.end107
    i16 0, label %if.end107
  ]

land.lhs.true69:                                  ; preds = %if.end18
  switch i32 %.pre, label %lor.lhs.false87 [
    i32 20, label %if.end107
    i32 16, label %if.end107
    i32 7, label %if.end107
    i32 6, label %if.end107
    i32 5, label %if.end107
    i32 4, label %if.end107
    i32 3, label %if.end107
    i32 2, label %if.end107
    i32 1, label %if.end107
    i32 0, label %if.end107
  ]

lor.lhs.false87:                                  ; preds = %land.lhs.true69
  %.off378 = add i32 %.pre, -37
  %14 = icmp ult i32 %.off378, 8
  %cmp103 = icmp ugt i32 %.pre, 52
  %or.cond373 = or i1 %14, %cmp103
  br i1 %or.cond373, label %if.end107, label %report_error

if.end107:                                        ; preds = %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false41, %lor.lhs.false31, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true69, %land.lhs.true69, %land.lhs.true69, %land.lhs.true69, %land.lhs.true69, %land.lhs.true69, %land.lhs.true69, %land.lhs.true69, %land.lhs.true69, %land.lhs.true69, %lor.lhs.false87, %if.end4
  %tobool108 = icmp ne %struct.rtx_def* %4, null
  br i1 %tobool108, label %if.then109, label %if.end200

if.then109:                                       ; preds = %if.end107
  %15 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load110 = load i32* %15, align 8
  %bf.clear111 = and i32 %bf.load110, 65535
  %cmp112 = icmp eq i32 %bf.clear111, 61
  br i1 %cmp112, label %if.end115, label %report_error

if.end115:                                        ; preds = %if.then109
  %bf.lshr117 = lshr i32 %bf.load110, 16
  %bf.clear118 = and i32 %bf.lshr117, 255
  %16 = load i32* @target_flags, align 4, !tbaa !1
  %and119 = lshr i32 %16, 25
  %17 = and i32 %and119, 1
  %18 = or i32 %17, 4
  %cmp122 = icmp eq i32 %bf.clear118, %18
  br i1 %cmp122, label %if.end125, label %report_error

if.end125:                                        ; preds = %if.end115
  %tobool126 = icmp eq i32 %strict, 0
  %arrayidx176.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint177.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx176.phi.trans.insert to i32*
  %.pre381 = load i32* %rtuint177.phi.trans.insert, align 4, !tbaa !1
  br i1 %tobool126, label %land.lhs.true174, label %land.lhs.true127

land.lhs.true127:                                 ; preds = %if.end125
  switch i32 %.pre381, label %lor.lhs.false145 [
    i32 44, label %if.end200
    i32 43, label %if.end200
    i32 42, label %if.end200
    i32 41, label %if.end200
    i32 40, label %if.end200
    i32 39, label %if.end200
    i32 38, label %if.end200
    i32 37, label %if.end200
    i32 6, label %if.end200
    i32 5, label %if.end200
    i32 4, label %if.end200
    i32 3, label %if.end200
    i32 2, label %if.end200
    i32 1, label %if.end200
    i32 0, label %if.end200
  ]

lor.lhs.false145:                                 ; preds = %land.lhs.true127
  %idxprom149 = zext i32 %.pre381 to i64
  %19 = load i16** @reg_renumber, align 8, !tbaa !6
  %arrayidx150 = getelementptr inbounds i16* %19, i64 %idxprom149
  %20 = load i16* %arrayidx150, align 2, !tbaa !102
  switch i16 %20, label %report_error [
    i16 44, label %if.end200
    i16 43, label %if.end200
    i16 42, label %if.end200
    i16 41, label %if.end200
    i16 40, label %if.end200
    i16 39, label %if.end200
    i16 38, label %if.end200
    i16 37, label %if.end200
    i16 6, label %if.end200
    i16 5, label %if.end200
    i16 4, label %if.end200
    i16 3, label %if.end200
    i16 2, label %if.end200
    i16 1, label %if.end200
    i16 0, label %if.end200
  ]

land.lhs.true174:                                 ; preds = %if.end125
  %cmp178 = icmp ult i32 %.pre381, 7
  br i1 %cmp178, label %if.end200, label %lor.lhs.false180

lor.lhs.false180:                                 ; preds = %land.lhs.true174
  %.off = add i32 %.pre381, -37
  %21 = icmp ult i32 %.off, 8
  %cmp196 = icmp ugt i32 %.pre381, 52
  %or.cond375 = or i1 %21, %cmp196
  br i1 %or.cond375, label %if.end200, label %report_error

if.end200:                                        ; preds = %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %land.lhs.true127, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false145, %lor.lhs.false180, %land.lhs.true174, %if.end107
  %cmp201 = icmp eq i64 %6, 1
  br i1 %cmp201, label %if.end218, label %if.then203

if.then203:                                       ; preds = %if.end200
  %call204 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %6) #5
  br i1 %tobool108, label %if.end207, label %report_error

if.end207:                                        ; preds = %if.then203
  switch i64 %6, label %report_error [
    i64 8, label %if.end218
    i64 4, label %if.end218
    i64 2, label %if.end218
  ]

if.end218:                                        ; preds = %if.end207, %if.end207, %if.end207, %if.end200
  %tobool219 = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool219, label %if.end295, label %if.then220

if.then220:                                       ; preds = %if.end218
  %22 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load221 = load i32* %22, align 8
  %bf.clear222 = and i32 %bf.load221, 65535
  switch i32 %bf.clear222, label %report_error [
    i32 67, label %if.end246
    i32 68, label %if.end246
    i32 54, label %if.end246
    i32 58, label %if.end246
    i32 55, label %if.end246
  ]

if.end246:                                        ; preds = %if.then220, %if.then220, %if.then220, %if.then220, %if.then220
  %23 = load i32* @target_flags, align 4
  %and247 = and i32 %23, 33554432
  %tobool248 = icmp eq i32 %and247, 0
  br i1 %tobool248, label %if.else, label %if.then249

if.then249:                                       ; preds = %if.end246
  %call250 = tail call i32 @x86_64_sign_extended_value(%struct.rtx_def* %5)
  %tobool251 = icmp eq i32 %call250, 0
  br i1 %tobool251, label %report_error, label %if.end260

if.else:                                          ; preds = %if.end246
  %cmp256 = icmp eq i32 %bf.clear222, 55
  br i1 %cmp256, label %report_error, label %if.end260

if.end260:                                        ; preds = %if.then249, %if.else
  %24 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool261 = icmp eq i32 %24, 0
  br i1 %tobool261, label %if.end295, label %land.lhs.true262

land.lhs.true262:                                 ; preds = %if.end260
  %bf.load263 = load i32* %22, align 8
  %bf.clear264 = and i32 %bf.load263, 65535
  switch i32 %bf.clear264, label %if.end295 [
    i32 68, label %if.then280
    i32 67, label %if.then280
    i32 58, label %land.lhs.true277
  ]

land.lhs.true277:                                 ; preds = %land.lhs.true262
  %call278 = tail call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %5)
  %tobool279 = icmp eq i32 %call278, 0
  br i1 %tobool279, label %if.end295, label %if.then280

if.then280:                                       ; preds = %land.lhs.true262, %land.lhs.true262, %land.lhs.true277
  %25 = load i32* @target_flags, align 4, !tbaa !1
  %and281 = and i32 %25, 33554432
  %tobool282 = icmp ne i32 %and281, 0
  %or.cond307 = or i1 %tobool108, %tobool
  %or.cond = and i1 %tobool282, %or.cond307
  br i1 %or.cond, label %report_error, label %if.end288

if.end288:                                        ; preds = %if.then280
  %call289 = tail call i32 @legitimate_pic_address_disp_p(%struct.rtx_def* %5)
  %tobool290 = icmp eq i32 %call289, 0
  br i1 %tobool290, label %report_error, label %if.end295

if.end295:                                        ; preds = %land.lhs.true262, %if.end288, %land.lhs.true277, %if.end260, %if.end218
  %26 = load i8** @ix86_debug_addr_string, align 8, !tbaa !6
  %cmp296 = icmp eq i8* %26, null
  br i1 %cmp296, label %return, label %if.then298

if.then298:                                       ; preds = %if.end295
  %27 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  %28 = tail call i64 @fwrite(i8* getelementptr inbounds ([10 x i8]* @.str98, i64 0, i64 0), i64 9, i64 1, %struct._IO_FILE* %27) #9
  br label %return

report_error:                                     ; preds = %lor.lhs.false145, %lor.lhs.false41, %lor.lhs.false180, %lor.lhs.false87, %if.end288, %if.then280, %if.else, %if.then249, %if.then220, %if.end207, %if.then203, %if.end115, %if.then109, %if.end12, %if.then9, %if.end
  %reason.0 = phi i8* [ getelementptr inbounds ([21 x i8]* @.str84, i64 0, i64 0), %if.end ], [ getelementptr inbounds ([23 x i8]* @.str85, i64 0, i64 0), %if.then9 ], [ getelementptr inbounds ([21 x i8]* @.str86, i64 0, i64 0), %if.end12 ], [ getelementptr inbounds ([24 x i8]* @.str88, i64 0, i64 0), %if.then109 ], [ getelementptr inbounds ([22 x i8]* @.str89, i64 0, i64 0), %if.end115 ], [ getelementptr inbounds ([20 x i8]* @.str91, i64 0, i64 0), %if.then203 ], [ getelementptr inbounds ([32 x i8]* @.str92, i64 0, i64 0), %if.end207 ], [ getelementptr inbounds ([29 x i8]* @.str93, i64 0, i64 0), %if.then220 ], [ getelementptr inbounds ([29 x i8]* @.str94, i64 0, i64 0), %if.then249 ], [ getelementptr inbounds ([31 x i8]* @.str95, i64 0, i64 0), %if.else ], [ getelementptr inbounds ([34 x i8]* @.str96, i64 0, i64 0), %if.then280 ], [ getelementptr inbounds ([41 x i8]* @.str97, i64 0, i64 0), %if.end288 ], [ getelementptr inbounds ([18 x i8]* @.str87, i64 0, i64 0), %lor.lhs.false41 ], [ getelementptr inbounds ([18 x i8]* @.str87, i64 0, i64 0), %lor.lhs.false87 ], [ getelementptr inbounds ([19 x i8]* @.str90, i64 0, i64 0), %lor.lhs.false145 ], [ getelementptr inbounds ([19 x i8]* @.str90, i64 0, i64 0), %lor.lhs.false180 ]
  %reason_rtx.0 = phi %struct.rtx_def* [ null, %if.end ], [ %3, %if.then9 ], [ %3, %if.end12 ], [ %4, %if.then109 ], [ %4, %if.end115 ], [ %call204, %if.then203 ], [ %call204, %if.end207 ], [ %5, %if.then220 ], [ %5, %if.then249 ], [ %5, %if.else ], [ %5, %if.then280 ], [ %5, %if.end288 ], [ %3, %lor.lhs.false41 ], [ %3, %lor.lhs.false87 ], [ %4, %lor.lhs.false145 ], [ %4, %lor.lhs.false180 ]
  %29 = load i8** @ix86_debug_addr_string, align 8, !tbaa !6
  %cmp301 = icmp eq i8* %29, null
  br i1 %cmp301, label %return, label %if.then303

if.then303:                                       ; preds = %report_error
  %30 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  %call304 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([11 x i8]* @.str99, i64 0, i64 0), i8* %reason.0) #10
  tail call void @debug_rtx(%struct.rtx_def* %reason_rtx.0) #5
  br label %return

return:                                           ; preds = %if.then303, %report_error, %if.then298, %if.end295
  %retval.0 = phi i32 [ 1, %if.end295 ], [ 1, %if.then298 ], [ 0, %report_error ], [ 0, %if.then303 ]
  ret i32 %retval.0
}

declare void @debug_rtx(%struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @legitimize_pic_address(%struct.rtx_def* %orig, %struct.rtx_def* %reg) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.end24.i [
    i32 67, label %if.then
    i32 58, label %land.lhs.true.i
  ]

land.lhs.true.i:                                  ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load4.i = load i32* %2, align 8
  %bf.clear5.i = and i32 %bf.load4.i, 65535
  %cmp6.i = icmp eq i32 %bf.clear5.i, 75
  br i1 %cmp6.i, label %land.lhs.true7.i, label %if.end24.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx13.i = bitcast %union.rtunion_def* %arrayidx12.i to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx13.i, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load14.i = load i32* %4, align 8
  %bf.clear15.i = and i32 %bf.load14.i, 65535
  %cmp16.i = icmp eq i32 %bf.clear15.i, 54
  br i1 %cmp16.i, label %if.then17.i, label %if.end24.i

if.then17.i:                                      ; preds = %land.lhs.true7.i
  %arrayidx22.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx23.i = bitcast %union.rtunion_def* %arrayidx22.i to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx23.i, align 8, !tbaa !6
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load25.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then17.i, %land.lhs.true7.i, %land.lhs.true.i, %entry
  %bf.load25.i = phi i32 [ %bf.load25.pre.i, %if.then17.i ], [ %bf.load.i, %land.lhs.true7.i ], [ %bf.load.i, %land.lhs.true.i ], [ %bf.load.i, %entry ]
  %op.addr.0.i = phi %struct.rtx_def* [ %5, %if.then17.i ], [ %orig, %land.lhs.true7.i ], [ %orig, %land.lhs.true.i ], [ %orig, %entry ]
  %bf.clear26.i = and i32 %bf.load25.i, 65535
  %cmp27.i = icmp eq i32 %bf.clear26.i, 68
  br i1 %cmp27.i, label %if.end29.i, label %if.else21

if.end29.i:                                       ; preds = %if.end24.i
  %6 = and i32 %bf.load25.i, 201326592
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %local_symbolic_operand.exit, label %if.then

local_symbolic_operand.exit:                      ; preds = %if.end29.i
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %op.addr.0.i, i64 0, i32 1, i64 0
  %rtstr.i = bitcast %union.rtunion_def* %arrayidx39.i to i8**
  %8 = load i8** %rtstr.i, align 8, !tbaa !6
  %9 = load i32* @internal_label_prefix_len, align 4, !tbaa !1
  %conv.i = sext i32 %9 to i64
  %call.i = tail call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([16 x i8]* @internal_label_prefix, i64 0, i64 0), i64 %conv.i) #5
  %cmp40.i = icmp eq i32 %call.i, 0
  br i1 %cmp40.i, label %if.then, label %if.else21

if.then:                                          ; preds = %local_symbolic_operand.exit, %if.end29.i, %entry
  %10 = load i32* @target_flags, align 4, !tbaa !1
  %and2 = and i32 %10, 33554432
  %tobool3 = icmp eq i32 %and2, 0
  br i1 %tobool3, label %if.else, label %return

if.else:                                          ; preds = %if.then
  %11 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_pic_offset_table = getelementptr inbounds %struct.function* %11, i64 0, i32 56
  %12 = bitcast i24* %uses_pic_offset_table to i32*
  %bf.load = load i32* %12, align 8
  %bf.set = or i32 %bf.load, 2097152
  store i32 %bf.set, i32* %12, align 8
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %and5 = lshr i32 %13, 25
  %14 = and i32 %and5, 1
  %15 = or i32 %14, 4
  %call8 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %orig) #5
  %call9 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 %15, %struct.rtvec_def* %call8, i32 7) #5
  %16 = load i32* @target_flags, align 4, !tbaa !1
  %and10 = lshr i32 %16, 25
  %17 = and i32 %and10, 1
  %18 = or i32 %17, 4
  %call13 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %18, %struct.rtx_def* %call9) #5
  %19 = load i32* @target_flags, align 4, !tbaa !1
  %and14 = lshr i32 %19, 25
  %20 = and i32 %and14, 1
  %21 = or i32 %20, 4
  %22 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !6
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %21, %struct.rtx_def* %22, %struct.rtx_def* %call13) #5
  %cmp = icmp eq %struct.rtx_def* %reg, null
  br i1 %cmp, label %return, label %if.then18

if.then18:                                        ; preds = %if.else
  %call19 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %reg, %struct.rtx_def* %call17) #5
  br label %return

if.else21:                                        ; preds = %local_symbolic_operand.exit, %if.end24.i
  switch i32 %bf.clear.i, label %if.end118 [
    i32 68, label %if.then25
    i32 58, label %if.then98
  ]

if.then25:                                        ; preds = %if.else21
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and26 = and i32 %23, 33554432
  %tobool27 = icmp eq i32 %and26, 0
  %24 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_pic_offset_table29 = getelementptr inbounds %struct.function* %24, i64 0, i32 56
  %25 = bitcast i24* %uses_pic_offset_table29 to i32*
  %bf.load30 = load i32* %25, align 8
  %bf.set32 = or i32 %bf.load30, 2097152
  store i32 %bf.set32, i32* %25, align 8
  %26 = load i32* @target_flags, align 4, !tbaa !1
  %and33 = lshr i32 %26, 25
  %27 = and i32 %and33, 1
  %28 = or i32 %27, 4
  %call36 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %orig) #5
  br i1 %tobool27, label %if.else59, label %if.then28

if.then28:                                        ; preds = %if.then25
  %call37 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 %28, %struct.rtvec_def* %call36, i32 15) #5
  %29 = load i32* @target_flags, align 4, !tbaa !1
  %and38 = lshr i32 %29, 25
  %30 = and i32 %and38, 1
  %31 = or i32 %30, 4
  %call41 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %31, %struct.rtx_def* %call37) #5
  %32 = load i32* @target_flags, align 4, !tbaa !1
  %and42 = lshr i32 %32, 25
  %33 = and i32 %and42, 1
  %34 = or i32 %33, 4
  %call45 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %34, %struct.rtx_def* %call41) #5
  %35 = getelementptr inbounds %struct.rtx_def* %call45, i64 0, i32 0
  %bf.load46 = load i32* %35, align 8
  %bf.set48 = or i32 %bf.load46, 67108864
  store i32 %bf.set48, i32* %35, align 8
  %36 = load i64* @ix86_GOT_alias_set.set, align 8, !tbaa !77
  %cmp.i = icmp eq i64 %36, -1
  br i1 %cmp.i, label %if.then.i, label %ix86_GOT_alias_set.exit

if.then.i:                                        ; preds = %if.then28
  %call.i336 = tail call i64 @new_alias_set() #5
  store i64 %call.i336, i64* @ix86_GOT_alias_set.set, align 8, !tbaa !77
  br label %ix86_GOT_alias_set.exit

ix86_GOT_alias_set.exit:                          ; preds = %if.then28, %if.then.i
  %37 = phi i64 [ %call.i336, %if.then.i ], [ %36, %if.then28 ]
  tail call void @set_mem_alias_set(%struct.rtx_def* %call45, i64 %37) #5
  %cmp50 = icmp eq %struct.rtx_def* %reg, null
  br i1 %cmp50, label %if.then51, label %if.end56

if.then51:                                        ; preds = %ix86_GOT_alias_set.exit
  %38 = load i32* @target_flags, align 4, !tbaa !1
  %and52 = lshr i32 %38, 25
  %39 = and i32 %and52, 1
  %40 = or i32 %39, 4
  %call55 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %40) #5
  br label %if.end56

if.end56:                                         ; preds = %if.then51, %ix86_GOT_alias_set.exit
  %reg.addr.0 = phi %struct.rtx_def* [ %call55, %if.then51 ], [ %reg, %ix86_GOT_alias_set.exit ]
  %call57 = tail call %struct.rtx_def* @gen_movsi(%struct.rtx_def* %reg.addr.0, %struct.rtx_def* %call45) #5
  %call58 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call57) #5
  br label %return

if.else59:                                        ; preds = %if.then25
  %call68 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 %28, %struct.rtvec_def* %call36, i32 6) #5
  %41 = load i32* @target_flags, align 4, !tbaa !1
  %and69 = lshr i32 %41, 25
  %42 = and i32 %and69, 1
  %43 = or i32 %42, 4
  %call72 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %43, %struct.rtx_def* %call68) #5
  %44 = load i32* @target_flags, align 4, !tbaa !1
  %and73 = lshr i32 %44, 25
  %45 = and i32 %and73, 1
  %46 = or i32 %45, 4
  %47 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !6
  %call76 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %46, %struct.rtx_def* %47, %struct.rtx_def* %call72) #5
  %48 = load i32* @target_flags, align 4, !tbaa !1
  %and77 = lshr i32 %48, 25
  %49 = and i32 %and77, 1
  %50 = or i32 %49, 4
  %call80 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %50, %struct.rtx_def* %call76) #5
  %51 = getelementptr inbounds %struct.rtx_def* %call80, i64 0, i32 0
  %bf.load81 = load i32* %51, align 8
  %bf.set83 = or i32 %bf.load81, 67108864
  store i32 %bf.set83, i32* %51, align 8
  %52 = load i64* @ix86_GOT_alias_set.set, align 8, !tbaa !77
  %cmp.i337 = icmp eq i64 %52, -1
  br i1 %cmp.i337, label %if.then.i339, label %ix86_GOT_alias_set.exit340

if.then.i339:                                     ; preds = %if.else59
  %call.i338 = tail call i64 @new_alias_set() #5
  store i64 %call.i338, i64* @ix86_GOT_alias_set.set, align 8, !tbaa !77
  br label %ix86_GOT_alias_set.exit340

ix86_GOT_alias_set.exit340:                       ; preds = %if.else59, %if.then.i339
  %53 = phi i64 [ %call.i338, %if.then.i339 ], [ %52, %if.else59 ]
  tail call void @set_mem_alias_set(%struct.rtx_def* %call80, i64 %53) #5
  %cmp85 = icmp eq %struct.rtx_def* %reg, null
  br i1 %cmp85, label %if.then86, label %if.end91

if.then86:                                        ; preds = %ix86_GOT_alias_set.exit340
  %54 = load i32* @target_flags, align 4, !tbaa !1
  %and87 = lshr i32 %54, 25
  %55 = and i32 %and87, 1
  %56 = or i32 %55, 4
  %call90 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %56) #5
  br label %if.end91

if.end91:                                         ; preds = %if.then86, %ix86_GOT_alias_set.exit340
  %reg.addr.1 = phi %struct.rtx_def* [ %call90, %if.then86 ], [ %reg, %ix86_GOT_alias_set.exit340 ]
  %call92 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %reg.addr.1, %struct.rtx_def* %call80) #5
  br label %return

if.then98:                                        ; preds = %if.else21
  %arrayidx = getelementptr inbounds %struct.rtx_def* %orig, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %58 = getelementptr inbounds %struct.rtx_def* %57, i64 0, i32 0
  %bf.load99 = load i32* %58, align 8
  %bf.clear100 = and i32 %bf.load99, 65535
  switch i32 %bf.clear100, label %if.then116 [
    i32 42, label %return
    i32 75, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.then98
  %arrayidx106 = getelementptr inbounds %struct.rtx_def* %57, i64 0, i32 1, i64 0
  %rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**
  %59 = load %struct.rtx_def** %rtx107, align 8, !tbaa !6
  %60 = getelementptr inbounds %struct.rtx_def* %59, i64 0, i32 0
  %bf.load108 = load i32* %60, align 8
  %bf.clear109 = and i32 %bf.load108, 65535
  %cmp110 = icmp eq i32 %bf.clear109, 42
  br i1 %cmp110, label %return, label %if.end118

if.then116:                                       ; preds = %if.then98
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5086, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.legitimize_pic_address, i64 0, i64 0)) #8
  unreachable

if.end118:                                        ; preds = %land.lhs.true, %if.else21
  %bf.load119 = phi i32 [ %bf.load.i, %if.else21 ], [ %bf.load99, %land.lhs.true ]
  %addr.0 = phi %struct.rtx_def* [ %orig, %if.else21 ], [ %57, %land.lhs.true ]
  %bf.clear120 = and i32 %bf.load119, 65535
  %cmp121 = icmp eq i32 %bf.clear120, 75
  br i1 %cmp121, label %if.then122, label %return

if.then122:                                       ; preds = %if.end118
  %fld123 = getelementptr inbounds %struct.rtx_def* %addr.0, i64 0, i32 1
  %rtx125 = bitcast [1 x %union.rtunion_def]* %fld123 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx125, align 8, !tbaa !6
  %arrayidx127 = getelementptr inbounds %struct.rtx_def* %addr.0, i64 0, i32 1, i64 1
  %rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %62 = load %struct.rtx_def** %rtx128, align 8, !tbaa !6
  %63 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 0
  %bf.load.i341 = load i32* %63, align 8
  %bf.clear.i342 = and i32 %bf.load.i341, 65535
  switch i32 %bf.clear.i342, label %if.end24.i364 [
    i32 67, label %land.lhs.true134
    i32 58, label %land.lhs.true.i348
  ]

land.lhs.true.i348:                               ; preds = %if.then122
  %arrayidx.i343 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 1, i64 0
  %rtx.i344 = bitcast %union.rtunion_def* %arrayidx.i343 to %struct.rtx_def**
  %64 = load %struct.rtx_def** %rtx.i344, align 8, !tbaa !6
  %65 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 0
  %bf.load4.i345 = load i32* %65, align 8
  %bf.clear5.i346 = and i32 %bf.load4.i345, 65535
  %cmp6.i347 = icmp eq i32 %bf.clear5.i346, 75
  br i1 %cmp6.i347, label %land.lhs.true7.i354, label %if.end24.i364

land.lhs.true7.i354:                              ; preds = %land.lhs.true.i348
  %arrayidx12.i349 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 1, i64 1
  %rtx13.i350 = bitcast %union.rtunion_def* %arrayidx12.i349 to %struct.rtx_def**
  %66 = load %struct.rtx_def** %rtx13.i350, align 8, !tbaa !6
  %67 = getelementptr inbounds %struct.rtx_def* %66, i64 0, i32 0
  %bf.load14.i351 = load i32* %67, align 8
  %bf.clear15.i352 = and i32 %bf.load14.i351, 65535
  %cmp16.i353 = icmp eq i32 %bf.clear15.i352, 54
  br i1 %cmp16.i353, label %if.then17.i359, label %if.end24.i364

if.then17.i359:                                   ; preds = %land.lhs.true7.i354
  %arrayidx22.i355 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 1, i64 0
  %rtx23.i356 = bitcast %union.rtunion_def* %arrayidx22.i355 to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx23.i356, align 8, !tbaa !6
  %.phi.trans.insert.i357 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 0
  %bf.load25.pre.i358 = load i32* %.phi.trans.insert.i357, align 8
  br label %if.end24.i364

if.end24.i364:                                    ; preds = %if.then17.i359, %land.lhs.true7.i354, %land.lhs.true.i348, %if.then122
  %bf.load25.i360 = phi i32 [ %bf.load25.pre.i358, %if.then17.i359 ], [ %bf.load.i341, %land.lhs.true7.i354 ], [ %bf.load.i341, %land.lhs.true.i348 ], [ %bf.load.i341, %if.then122 ]
  %op.addr.0.i361 = phi %struct.rtx_def* [ %68, %if.then17.i359 ], [ %61, %land.lhs.true7.i354 ], [ %61, %land.lhs.true.i348 ], [ %61, %if.then122 ]
  %bf.clear26.i362 = and i32 %bf.load25.i360, 65535
  %cmp27.i363 = icmp eq i32 %bf.clear26.i362, 68
  br i1 %cmp27.i363, label %if.end29.i365, label %if.else169

if.end29.i365:                                    ; preds = %if.end24.i364
  %69 = and i32 %bf.load25.i360, 201326592
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %local_symbolic_operand.exit374, label %land.lhs.true134

local_symbolic_operand.exit374:                   ; preds = %if.end29.i365
  %arrayidx39.i366 = getelementptr inbounds %struct.rtx_def* %op.addr.0.i361, i64 0, i32 1, i64 0
  %rtstr.i367 = bitcast %union.rtunion_def* %arrayidx39.i366 to i8**
  %71 = load i8** %rtstr.i367, align 8, !tbaa !6
  %72 = load i32* @internal_label_prefix_len, align 4, !tbaa !1
  %conv.i368 = sext i32 %72 to i64
  %call.i369 = tail call i32 @strncmp(i8* %71, i8* getelementptr inbounds ([16 x i8]* @internal_label_prefix, i64 0, i64 0), i64 %conv.i368) #5
  %cmp40.i370 = icmp eq i32 %call.i369, 0
  br i1 %cmp40.i370, label %land.lhs.true134, label %if.else169

land.lhs.true134:                                 ; preds = %local_symbolic_operand.exit374, %if.end29.i365, %if.then122
  %73 = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 0
  %bf.load135 = load i32* %73, align 8
  %bf.clear136 = and i32 %bf.load135, 65535
  %cmp137 = icmp eq i32 %bf.clear136, 54
  br i1 %cmp137, label %if.then138, label %if.else169

if.then138:                                       ; preds = %land.lhs.true134
  %74 = load i32* @target_flags, align 4, !tbaa !1
  %and139 = and i32 %74, 33554432
  %tobool140 = icmp eq i32 %and139, 0
  br i1 %tobool140, label %if.then141, label %return

if.then141:                                       ; preds = %if.then138
  %75 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_pic_offset_table142 = getelementptr inbounds %struct.function* %75, i64 0, i32 56
  %76 = bitcast i24* %uses_pic_offset_table142 to i32*
  %bf.load143 = load i32* %76, align 8
  %bf.set145 = or i32 %bf.load143, 2097152
  store i32 %bf.set145, i32* %76, align 8
  %77 = load i32* @target_flags, align 4, !tbaa !1
  %and146 = lshr i32 %77, 25
  %78 = and i32 %and146, 1
  %79 = or i32 %78, 4
  %call149 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %61) #5
  %call150 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 %79, %struct.rtvec_def* %call149, i32 7) #5
  %80 = load i32* @target_flags, align 4, !tbaa !1
  %and151 = lshr i32 %80, 25
  %81 = and i32 %and151, 1
  %82 = or i32 %81, 4
  %call154 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %82, %struct.rtx_def* %call150, %struct.rtx_def* %62) #5
  %83 = load i32* @target_flags, align 4, !tbaa !1
  %and155 = lshr i32 %83, 25
  %84 = and i32 %and155, 1
  %85 = or i32 %84, 4
  %call158 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 %85, %struct.rtx_def* %call154) #5
  %86 = load i32* @target_flags, align 4, !tbaa !1
  %and159 = lshr i32 %86, 25
  %87 = and i32 %and159, 1
  %88 = or i32 %87, 4
  %89 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !6
  %call162 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %88, %struct.rtx_def* %89, %struct.rtx_def* %call158) #5
  %cmp163 = icmp eq %struct.rtx_def* %reg, null
  br i1 %cmp163, label %return, label %if.then164

if.then164:                                       ; preds = %if.then141
  %call165 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %reg, %struct.rtx_def* %call162) #5
  br label %return

if.else169:                                       ; preds = %local_symbolic_operand.exit374, %if.end24.i364, %land.lhs.true134
  %call173 = tail call %struct.rtx_def* @legitimize_pic_address(%struct.rtx_def* %61, %struct.rtx_def* %reg)
  %90 = load %struct.rtx_def** %rtx128, align 8, !tbaa !6
  %cmp177 = icmp eq %struct.rtx_def* %call173, %reg
  %cond178 = select i1 %cmp177, %struct.rtx_def* null, %struct.rtx_def* %reg
  %call179 = tail call %struct.rtx_def* @legitimize_pic_address(%struct.rtx_def* %90, %struct.rtx_def* %cond178)
  %91 = getelementptr inbounds %struct.rtx_def* %call179, i64 0, i32 0
  %bf.load180 = load i32* %91, align 8
  %bf.clear181 = and i32 %bf.load180, 65535
  switch i32 %bf.clear181, label %if.end258 [
    i32 54, label %if.then183
    i32 75, label %land.lhs.true191
  ]

if.then183:                                       ; preds = %if.else169
  %rtwint = getelementptr inbounds %struct.rtx_def* %call179, i64 0, i32 1, i64 0, i32 0
  %92 = load i64* %rtwint, align 8, !tbaa !77
  %call186 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call173, i64 %92) #5
  br label %return

land.lhs.true191:                                 ; preds = %if.else169
  %arrayidx193 = getelementptr inbounds %struct.rtx_def* %call179, i64 0, i32 1, i64 1
  %rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**
  %93 = load %struct.rtx_def** %rtx194, align 8, !tbaa !6
  %94 = getelementptr inbounds %struct.rtx_def* %93, i64 0, i32 0
  %bf.load195 = load i32* %94, align 8
  %bf.clear196 = and i32 %bf.load195, 65535
  switch i32 %bf.clear196, label %if.end258 [
    i32 67, label %if.then247
    i32 68, label %if.then247
    i32 54, label %if.then247
    i32 55, label %if.then247
    i32 58, label %if.then247
    i32 134, label %if.then247
    i32 56, label %if.then247
    i32 140, label %if.then247
  ]

if.then247:                                       ; preds = %land.lhs.true191, %land.lhs.true191, %land.lhs.true191, %land.lhs.true191, %land.lhs.true191, %land.lhs.true191, %land.lhs.true191, %land.lhs.true191
  %95 = load i32* @target_flags, align 4, !tbaa !1
  %and248 = lshr i32 %95, 25
  %96 = and i32 %and248, 1
  %97 = or i32 %96, 4
  %arrayidx252 = getelementptr inbounds %struct.rtx_def* %call179, i64 0, i32 1, i64 0
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %98 = load %struct.rtx_def** %rtx253, align 8, !tbaa !6
  %call254 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %97, %struct.rtx_def* %call173, %struct.rtx_def* %98) #5
  %99 = load %struct.rtx_def** %rtx194, align 8, !tbaa !6
  br label %if.end258

if.end258:                                        ; preds = %land.lhs.true191, %if.else169, %if.then247
  %new.0 = phi %struct.rtx_def* [ %99, %if.then247 ], [ %call179, %if.else169 ], [ %call179, %land.lhs.true191 ]
  %base.0 = phi %struct.rtx_def* [ %call254, %if.then247 ], [ %call173, %if.else169 ], [ %call173, %land.lhs.true191 ]
  %100 = load i32* @target_flags, align 4, !tbaa !1
  %and259 = lshr i32 %100, 25
  %101 = and i32 %and259, 1
  %102 = or i32 %101, 4
  %call262 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %102, %struct.rtx_def* %base.0, %struct.rtx_def* %new.0) #5
  br label %return

return:                                           ; preds = %if.then18, %if.end118, %if.then183, %if.end258, %if.then164, %if.end56, %if.end91, %if.then138, %if.then141, %if.else, %if.then, %land.lhs.true, %if.then98
  %retval.0 = phi %struct.rtx_def* [ %orig, %if.then98 ], [ %orig, %land.lhs.true ], [ %reg, %if.then18 ], [ %call17, %if.else ], [ %reg.addr.0, %if.end56 ], [ %reg.addr.1, %if.end91 ], [ %orig, %if.then138 ], [ %reg, %if.then164 ], [ %call162, %if.then141 ], [ %call186, %if.then183 ], [ %call262, %if.end258 ], [ %orig, %if.end118 ], [ %orig, %if.then ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_rtx_fmt_Ei(i32, i32, %struct.rtvec_def*, i32) #0

declare %struct.rtvec_def* @gen_rtvec(i32, ...) #0

declare %struct.rtx_def* @gen_movsi(%struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @legitimize_address(%struct.rtx_def* %x, %struct.rtx_def* nocapture readnone %oldx, i32 %mode) #1 {
entry:
  %0 = load i8** @ix86_debug_addr_string, align 8, !tbaa !6
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8*]* @mode_name, i64 0, i64 %idxprom
  %2 = load i8** %arrayidx, align 8, !tbaa !6
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([43 x i8]* @.str100, i64 0, i64 0), i8* %2) #10
  tail call void @debug_rtx(%struct.rtx_def* %x) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %3 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool = icmp eq i32 %3, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load15.pre = load i32* %.phi.trans.insert, align 8
  br i1 %tobool, label %if.end14, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %bf.clear = and i32 %bf.load15.pre, 65535
  switch i32 %bf.clear, label %if.end14 [
    i32 68, label %if.then12
    i32 67, label %if.then12
    i32 58, label %land.lhs.true9
  ]

land.lhs.true9:                                   ; preds = %land.lhs.true
  %call10 = tail call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %x)
  %tobool11 = icmp eq i32 %call10, 0
  br i1 %tobool11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true9
  %call13 = tail call %struct.rtx_def* @legitimize_pic_address(%struct.rtx_def* %x, %struct.rtx_def* null)
  br label %return

if.end14:                                         ; preds = %if.end, %land.lhs.true, %land.lhs.true9
  %bf.clear16 = and i32 %bf.load15.pre, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 87
  br i1 %cmp17, label %land.lhs.true18, label %if.end42

land.lhs.true18:                                  ; preds = %if.end14
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load20 = load i32* %5, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 54
  br i1 %cmp22, label %land.lhs.true23, label %if.end42

land.lhs.true23:                                  ; preds = %land.lhs.true18
  %rtwint = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0, i32 0
  %6 = load i64* %rtwint, align 8, !tbaa !77
  %call29 = tail call i32 @exact_log2_wide(i64 %6) #5
  %cmp30 = icmp ult i32 %call29, 4
  br i1 %cmp30, label %if.then31, label %if.end42

if.then31:                                        ; preds = %land.lhs.true23
  %7 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %7, 25
  %8 = and i32 %and, 1
  %9 = or i32 %8, 4
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx38, align 8, !tbaa !6
  %call39 = tail call %struct.rtx_def* @force_reg(i32 %9, %struct.rtx_def* %10) #5
  %shl = shl i32 1, %call29
  %conv = sext i32 %shl to i64
  %call40 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #5
  %call41 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %9, %struct.rtx_def* %call39, %struct.rtx_def* %call40) #5
  br label %if.end42

if.end42:                                         ; preds = %if.then31, %land.lhs.true23, %land.lhs.true18, %if.end14
  %changed.0 = phi i32 [ 1, %if.then31 ], [ 0, %land.lhs.true23 ], [ 0, %land.lhs.true18 ], [ 0, %if.end14 ]
  %x.addr.0 = phi %struct.rtx_def* [ %call41, %if.then31 ], [ %x, %land.lhs.true23 ], [ %x, %land.lhs.true18 ], [ %x, %if.end14 ]
  %11 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 0
  %bf.load43 = load i32* %11, align 8
  %bf.clear44 = and i32 %bf.load43, 65535
  %cmp45 = icmp eq i32 %bf.clear44, 75
  br i1 %cmp45, label %if.then47, label %return

if.then47:                                        ; preds = %if.end42
  %fld48 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1
  %rtx50 = bitcast [1 x %union.rtunion_def]* %fld48 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx50, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load51 = load i32* %13, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 87
  br i1 %cmp53, label %land.lhs.true55, label %if.end100

land.lhs.true55:                                  ; preds = %if.then47
  %arrayidx60 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 1
  %rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx61, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load62 = load i32* %15, align 8
  %bf.clear63 = and i32 %bf.load62, 65535
  %cmp64 = icmp eq i32 %bf.clear63, 54
  br i1 %cmp64, label %land.lhs.true66, label %if.end100

land.lhs.true66:                                  ; preds = %land.lhs.true55
  %rtwint75 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0, i32 0
  %16 = load i64* %rtwint75, align 8, !tbaa !77
  %call76 = tail call i32 @exact_log2_wide(i64 %16) #5
  %cmp77 = icmp ult i32 %call76, 4
  br i1 %cmp77, label %if.then79, label %if.end100

if.then79:                                        ; preds = %land.lhs.true66
  %17 = load i32* @target_flags, align 4, !tbaa !1
  %and80 = lshr i32 %17, 25
  %18 = and i32 %and80, 1
  %19 = or i32 %18, 4
  %20 = load %struct.rtx_def** %rtx50, align 8, !tbaa !6
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 0
  %rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx91, align 8, !tbaa !6
  %call92 = tail call %struct.rtx_def* @force_reg(i32 %19, %struct.rtx_def* %21) #5
  %shl93 = shl i32 1, %call76
  %conv94 = sext i32 %shl93 to i64
  %call95 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv94) #5
  %call96 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %19, %struct.rtx_def* %call92, %struct.rtx_def* %call95) #5
  %22 = getelementptr inbounds [1 x %union.rtunion_def]* %fld48, i64 0, i64 0, i32 0
  %call96.c = ptrtoint %struct.rtx_def* %call96 to i64
  store i64 %call96.c, i64* %22, align 8, !tbaa !6
  br label %if.end100

if.end100:                                        ; preds = %if.then79, %land.lhs.true66, %land.lhs.true55, %if.then47
  %changed.1 = phi i32 [ 1, %if.then79 ], [ %changed.0, %land.lhs.true66 ], [ %changed.0, %land.lhs.true55 ], [ %changed.0, %if.then47 ]
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 1
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx103, align 8, !tbaa !6
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load104 = load i32* %24, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 87
  br i1 %cmp106, label %land.lhs.true108, label %if.end153

land.lhs.true108:                                 ; preds = %if.end100
  %arrayidx113 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 1
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx114, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load115 = load i32* %26, align 8
  %bf.clear116 = and i32 %bf.load115, 65535
  %cmp117 = icmp eq i32 %bf.clear116, 54
  br i1 %cmp117, label %land.lhs.true119, label %if.end153

land.lhs.true119:                                 ; preds = %land.lhs.true108
  %rtwint128 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 0, i32 0
  %27 = load i64* %rtwint128, align 8, !tbaa !77
  %call129 = tail call i32 @exact_log2_wide(i64 %27) #5
  %cmp130 = icmp ult i32 %call129, 4
  br i1 %cmp130, label %if.then132, label %land.lhs.true119.if.end153_crit_edge

land.lhs.true119.if.end153_crit_edge:             ; preds = %land.lhs.true119
  %.pre = load %struct.rtx_def** %rtx103, align 8, !tbaa !6
  br label %if.end153

if.then132:                                       ; preds = %land.lhs.true119
  %28 = load i32* @target_flags, align 4, !tbaa !1
  %and133 = lshr i32 %28, 25
  %29 = and i32 %and133, 1
  %30 = or i32 %29, 4
  %31 = load %struct.rtx_def** %rtx103, align 8, !tbaa !6
  %arrayidx143 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx144, align 8, !tbaa !6
  %call145 = tail call %struct.rtx_def* @force_reg(i32 %30, %struct.rtx_def* %32) #5
  %shl146 = shl i32 1, %call129
  %conv147 = sext i32 %shl146 to i64
  %call148 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv147) #5
  %call149 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %30, %struct.rtx_def* %call145, %struct.rtx_def* %call148) #5
  %33 = getelementptr inbounds %union.rtunion_def* %arrayidx102, i64 0, i32 0
  %call149.c = ptrtoint %struct.rtx_def* %call149 to i64
  store i64 %call149.c, i64* %33, align 8, !tbaa !6
  br label %if.end153

if.end153:                                        ; preds = %land.lhs.true119.if.end153_crit_edge, %if.then132, %land.lhs.true108, %if.end100
  %34 = phi %struct.rtx_def* [ %call149, %if.then132 ], [ %.pre, %land.lhs.true119.if.end153_crit_edge ], [ %23, %land.lhs.true108 ], [ %23, %if.end100 ]
  %changed.2 = phi i32 [ 1, %if.then132 ], [ %changed.1, %land.lhs.true119.if.end153_crit_edge ], [ %changed.1, %land.lhs.true108 ], [ %changed.1, %if.end100 ]
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load157 = load i32* %35, align 8
  %bf.clear158 = and i32 %bf.load157, 65535
  %cmp159 = icmp eq i32 %bf.clear158, 78
  %36 = load %struct.rtx_def** %rtx50, align 8, !tbaa !6
  br i1 %cmp159, label %if.then161, label %if.end174

if.then161:                                       ; preds = %if.end153
  %37 = getelementptr inbounds [1 x %union.rtunion_def]* %fld48, i64 0, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %34 to i64
  store i64 %.c, i64* %37, align 8, !tbaa !6
  %38 = getelementptr inbounds %union.rtunion_def* %arrayidx102, i64 0, i32 0
  %.c643 = ptrtoint %struct.rtx_def* %36 to i64
  store i64 %.c643, i64* %38, align 8, !tbaa !6
  br label %if.end174

if.end174:                                        ; preds = %if.end153, %if.then161
  %39 = phi %struct.rtx_def* [ %34, %if.then161 ], [ %36, %if.end153 ]
  %40 = phi %struct.rtx_def* [ %36, %if.then161 ], [ %34, %if.end153 ]
  %changed.3 = phi i32 [ 1, %if.then161 ], [ %changed.2, %if.end153 ]
  %41 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load178 = load i32* %41, align 8
  %bf.clear179 = and i32 %bf.load178, 65535
  %cmp180 = icmp eq i32 %bf.clear179, 78
  br i1 %cmp180, label %land.lhs.true182, label %if.else

land.lhs.true182:                                 ; preds = %if.end174
  %42 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 0
  %bf.load186 = load i32* %42, align 8
  %bf.clear187 = and i32 %bf.load186, 65535
  %cmp188 = icmp eq i32 %bf.clear187, 75
  br i1 %cmp188, label %if.then190, label %if.else

if.then190:                                       ; preds = %land.lhs.true182
  %43 = load i32* @target_flags, align 4, !tbaa !1
  %and191 = lshr i32 %43, 25
  %44 = and i32 %and191, 1
  %45 = or i32 %44, 4
  %arrayidx204 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 0
  %rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**
  %46 = load %struct.rtx_def** %rtx205, align 8, !tbaa !6
  %call206 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %45, %struct.rtx_def* %39, %struct.rtx_def* %46) #5
  %47 = load %struct.rtx_def** %rtx103, align 8, !tbaa !6
  %arrayidx211 = getelementptr inbounds %struct.rtx_def* %47, i64 0, i32 1, i64 1
  %rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx212, align 8, !tbaa !6
  %call213 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %45, %struct.rtx_def* %call206, %struct.rtx_def* %48) #5
  br label %land.lhs.true398

if.else:                                          ; preds = %land.lhs.true182, %if.end174
  %bf.load214 = load i32* %11, align 8
  %bf.clear215 = and i32 %bf.load214, 65535
  %cmp216 = icmp eq i32 %bf.clear215, 75
  br i1 %cmp216, label %land.lhs.true218, label %if.end396

land.lhs.true218:                                 ; preds = %if.else
  %49 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load222 = load i32* %49, align 8
  %bf.clear223 = and i32 %bf.load222, 65535
  %cmp224 = icmp eq i32 %bf.clear223, 75
  br i1 %cmp224, label %land.lhs.true226, label %if.end396

land.lhs.true226:                                 ; preds = %land.lhs.true218
  %fld230 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1
  %rtx232 = bitcast [1 x %union.rtunion_def]* %fld230 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx232, align 8, !tbaa !6
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load233 = load i32* %51, align 8
  %bf.clear234 = and i32 %bf.load233, 65535
  %cmp235 = icmp eq i32 %bf.clear234, 78
  br i1 %cmp235, label %land.lhs.true237, label %if.end396

land.lhs.true237:                                 ; preds = %land.lhs.true226
  %arrayidx242 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 1
  %rtx243 = bitcast %union.rtunion_def* %arrayidx242 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx243, align 8, !tbaa !6
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load244 = load i32* %53, align 8
  %bf.clear245 = and i32 %bf.load244, 65535
  %cmp246 = icmp eq i32 %bf.clear245, 75
  br i1 %cmp246, label %land.lhs.true248, label %if.end396

land.lhs.true248:                                 ; preds = %land.lhs.true237
  %54 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 0
  %bf.load252 = load i32* %54, align 8
  %bf.clear253 = and i32 %bf.load252, 65535
  switch i32 %bf.clear253, label %if.end396 [
    i32 67, label %if.then312
    i32 68, label %if.then312
    i32 54, label %if.then312
    i32 55, label %if.then312
    i32 58, label %if.then312
    i32 134, label %if.then312
    i32 56, label %if.then312
    i32 140, label %if.then312
  ]

if.then312:                                       ; preds = %land.lhs.true248, %land.lhs.true248, %land.lhs.true248, %land.lhs.true248, %land.lhs.true248, %land.lhs.true248, %land.lhs.true248, %land.lhs.true248
  %55 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 0
  %bf.load318 = load i32* %55, align 8
  %bf.clear319 = and i32 %bf.load318, 65535
  %cmp320 = icmp eq i32 %bf.clear319, 54
  %arrayidx330 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 1
  %rtx331 = bitcast %union.rtunion_def* %arrayidx330 to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx331, align 8, !tbaa !6
  %arrayidx333 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 1
  %rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx334, align 8, !tbaa !6
  br i1 %cmp320, label %if.end364, label %if.else335

if.else335:                                       ; preds = %if.then312
  %58 = getelementptr inbounds %struct.rtx_def* %57, i64 0, i32 0
  %bf.load345 = load i32* %58, align 8
  %bf.clear346 = and i32 %bf.load345, 65535
  %cmp347 = icmp eq i32 %bf.clear346, 54
  %.644 = select i1 %cmp347, %struct.rtx_def* %40, %struct.rtx_def* null
  br i1 %cmp347, label %if.end364, label %if.end396

if.end364:                                        ; preds = %if.else335, %if.then312
  %constant.0 = phi %struct.rtx_def* [ %40, %if.then312 ], [ %57, %if.else335 ]
  %other.0 = phi %struct.rtx_def* [ %57, %if.then312 ], [ %.644, %if.else335 ]
  %tobool365 = icmp eq %struct.rtx_def* %constant.0, null
  br i1 %tobool365, label %if.end396, label %if.then366

if.then366:                                       ; preds = %if.end364
  %59 = load i32* @target_flags, align 4, !tbaa !1
  %and367 = lshr i32 %59, 25
  %60 = and i32 %and367, 1
  %61 = or i32 %60, 4
  %fld376 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1
  %rtx378 = bitcast [1 x %union.rtunion_def]* %fld376 to %struct.rtx_def**
  %62 = load %struct.rtx_def** %rtx378, align 8, !tbaa !6
  %arrayidx383 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 1
  %rtx384 = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtx_def**
  %63 = load %struct.rtx_def** %rtx384, align 8, !tbaa !6
  %arrayidx386 = getelementptr inbounds %struct.rtx_def* %63, i64 0, i32 1, i64 0
  %rtx387 = bitcast %union.rtunion_def* %arrayidx386 to %struct.rtx_def**
  %64 = load %struct.rtx_def** %rtx387, align 8, !tbaa !6
  %call388 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %61, %struct.rtx_def* %62, %struct.rtx_def* %64) #5
  %rtwint391 = getelementptr inbounds %struct.rtx_def* %constant.0, i64 0, i32 1, i64 0, i32 0
  %65 = load i64* %rtwint391, align 8, !tbaa !77
  %call392 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %other.0, i64 %65) #5
  %call393 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %61, %struct.rtx_def* %call388, %struct.rtx_def* %call392) #5
  br label %land.lhs.true398

if.end396:                                        ; preds = %if.else335, %land.lhs.true248, %if.end364, %if.else, %land.lhs.true218, %land.lhs.true226, %land.lhs.true237
  %tobool397 = icmp eq i32 %changed.3, 0
  br i1 %tobool397, label %if.end402, label %land.lhs.true398

land.lhs.true398:                                 ; preds = %if.then366, %if.then190, %if.end396
  %x.addr.1649 = phi %struct.rtx_def* [ %x.addr.0, %if.end396 ], [ %call213, %if.then190 ], [ %call393, %if.then366 ]
  %changed.4647 = phi i32 [ %changed.3, %if.end396 ], [ 1, %if.then190 ], [ 1, %if.then366 ]
  %call399 = tail call i32 @legitimate_address_p(i32 %mode, %struct.rtx_def* %x.addr.1649, i32 0)
  %tobool400 = icmp eq i32 %call399, 0
  br i1 %tobool400, label %land.lhs.true398.if.end402_crit_edge, label %return

land.lhs.true398.if.end402_crit_edge:             ; preds = %land.lhs.true398
  %fld403.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %x.addr.1649, i64 0, i32 1
  %rtx405.phi.trans.insert = bitcast [1 x %union.rtunion_def]* %fld403.phi.trans.insert to %struct.rtx_def**
  %.pre659 = load %struct.rtx_def** %rtx405.phi.trans.insert, align 8, !tbaa !6
  br label %if.end402

if.end402:                                        ; preds = %land.lhs.true398.if.end402_crit_edge, %if.end396
  %66 = phi %struct.rtx_def* [ %.pre659, %land.lhs.true398.if.end402_crit_edge ], [ %39, %if.end396 ]
  %x.addr.1650 = phi %struct.rtx_def* [ %x.addr.1649, %land.lhs.true398.if.end402_crit_edge ], [ %x.addr.0, %if.end396 ]
  %changed.4648 = phi i32 [ %changed.4647, %land.lhs.true398.if.end402_crit_edge ], [ 0, %if.end396 ]
  %fld403 = getelementptr inbounds %struct.rtx_def* %x.addr.1650, i64 0, i32 1
  %rtx405 = bitcast [1 x %union.rtunion_def]* %fld403 to %struct.rtx_def**
  %67 = getelementptr inbounds %struct.rtx_def* %66, i64 0, i32 0
  %bf.load406 = load i32* %67, align 8
  %bf.clear407 = and i32 %bf.load406, 65535
  %cmp408 = icmp eq i32 %bf.clear407, 78
  br i1 %cmp408, label %if.then410, label %if.end418

if.then410:                                       ; preds = %if.end402
  %call414 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %66, %struct.rtx_def* null) #5
  %68 = getelementptr inbounds [1 x %union.rtunion_def]* %fld403, i64 0, i64 0, i32 0
  %call414.c = ptrtoint %struct.rtx_def* %call414 to i64
  store i64 %call414.c, i64* %68, align 8, !tbaa !6
  br label %if.end418

if.end418:                                        ; preds = %if.then410, %if.end402
  %changed.5 = phi i32 [ 1, %if.then410 ], [ %changed.4648, %if.end402 ]
  %arrayidx420 = getelementptr inbounds %struct.rtx_def* %x.addr.1650, i64 0, i32 1, i64 1
  %rtx421 = bitcast %union.rtunion_def* %arrayidx420 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx421, align 8, !tbaa !6
  %70 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 0
  %bf.load422 = load i32* %70, align 8
  %bf.clear423 = and i32 %bf.load422, 65535
  %cmp424 = icmp eq i32 %bf.clear423, 78
  br i1 %cmp424, label %if.end434.thread, label %if.end434

if.end434.thread:                                 ; preds = %if.end418
  %call430 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %69, %struct.rtx_def* null) #5
  %71 = getelementptr inbounds %union.rtunion_def* %arrayidx420, i64 0, i32 0
  %call430.c = ptrtoint %struct.rtx_def* %call430 to i64
  store i64 %call430.c, i64* %71, align 8, !tbaa !6
  %.phi.trans.insert660 = getelementptr inbounds %struct.rtx_def* %call430, i64 0, i32 0
  %bf.load440.pre = load i32* %.phi.trans.insert660, align 8
  br label %land.lhs.true436

if.end434:                                        ; preds = %if.end418
  %tobool435 = icmp eq i32 %changed.5, 0
  br i1 %tobool435, label %if.end453, label %land.lhs.true436

land.lhs.true436:                                 ; preds = %if.end434.thread, %if.end434
  %72 = phi %struct.rtx_def* [ %call430, %if.end434.thread ], [ %69, %if.end434 ]
  %bf.load440 = phi i32 [ %bf.load440.pre, %if.end434.thread ], [ %bf.load422, %if.end434 ]
  %changed.6652 = phi i32 [ 1, %if.end434.thread ], [ %changed.5, %if.end434 ]
  %bf.clear441 = and i32 %bf.load440, 65535
  %cmp442 = icmp eq i32 %bf.clear441, 61
  br i1 %cmp442, label %land.lhs.true444, label %if.end453

land.lhs.true444:                                 ; preds = %land.lhs.true436
  %73 = load %struct.rtx_def** %rtx405, align 8, !tbaa !6
  %74 = getelementptr inbounds %struct.rtx_def* %73, i64 0, i32 0
  %bf.load448 = load i32* %74, align 8
  %bf.clear449 = and i32 %bf.load448, 65535
  %cmp450 = icmp eq i32 %bf.clear449, 61
  br i1 %cmp450, label %return, label %if.end453

if.end453:                                        ; preds = %if.end434, %land.lhs.true444, %land.lhs.true436
  %75 = phi %struct.rtx_def* [ %69, %if.end434 ], [ %72, %land.lhs.true444 ], [ %72, %land.lhs.true436 ]
  %changed.6653 = phi i32 [ 0, %if.end434 ], [ %changed.6652, %land.lhs.true444 ], [ %changed.6652, %land.lhs.true436 ]
  %76 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool454 = icmp eq i32 %76, 0
  br i1 %tobool454, label %if.end487, label %land.lhs.true455

land.lhs.true455:                                 ; preds = %if.end453
  %77 = getelementptr inbounds %struct.rtx_def* %75, i64 0, i32 0
  %bf.load459 = load i32* %77, align 8
  %bf.clear460 = and i32 %bf.load459, 65535
  switch i32 %bf.clear460, label %if.end487 [
    i32 68, label %if.end487.thread
    i32 67, label %if.end487.thread
    i32 58, label %land.lhs.true479
  ]

land.lhs.true479:                                 ; preds = %land.lhs.true455
  %call483 = tail call i32 @symbolic_reference_mentioned_p(%struct.rtx_def* %75)
  %tobool484 = icmp eq i32 %call483, 0
  br i1 %tobool484, label %if.end487, label %if.end487.thread

if.end487.thread:                                 ; preds = %land.lhs.true479, %land.lhs.true455, %land.lhs.true455
  %call486 = tail call %struct.rtx_def* @legitimize_pic_address(%struct.rtx_def* %x.addr.1650, %struct.rtx_def* null)
  br label %land.lhs.true489

if.end487:                                        ; preds = %land.lhs.true455, %land.lhs.true479, %if.end453
  %tobool488 = icmp eq i32 %changed.6653, 0
  br i1 %tobool488, label %if.end493, label %land.lhs.true489

land.lhs.true489:                                 ; preds = %if.end487.thread, %if.end487
  %x.addr.2655 = phi %struct.rtx_def* [ %call486, %if.end487.thread ], [ %x.addr.1650, %if.end487 ]
  %call490 = tail call i32 @legitimate_address_p(i32 %mode, %struct.rtx_def* %x.addr.2655, i32 0)
  %tobool491 = icmp eq i32 %call490, 0
  br i1 %tobool491, label %if.end493, label %return

if.end493:                                        ; preds = %land.lhs.true489, %if.end487
  %x.addr.2656 = phi %struct.rtx_def* [ %x.addr.2655, %land.lhs.true489 ], [ %x.addr.1650, %if.end487 ]
  %fld494 = getelementptr inbounds %struct.rtx_def* %x.addr.2656, i64 0, i32 1
  %rtx496 = bitcast [1 x %union.rtunion_def]* %fld494 to %struct.rtx_def**
  %78 = load %struct.rtx_def** %rtx496, align 8, !tbaa !6
  %79 = getelementptr inbounds %struct.rtx_def* %78, i64 0, i32 0
  %bf.load497 = load i32* %79, align 8
  %bf.clear498 = and i32 %bf.load497, 65535
  %cmp499 = icmp eq i32 %bf.clear498, 61
  br i1 %cmp499, label %if.then501, label %if.else520

if.then501:                                       ; preds = %if.end493
  %80 = load i32* @target_flags, align 4, !tbaa !1
  %and503 = lshr i32 %80, 25
  %81 = and i32 %and503, 1
  %82 = or i32 %81, 4
  %call506 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %82) #5
  %arrayidx509 = getelementptr inbounds %struct.rtx_def* %x.addr.2656, i64 0, i32 1, i64 1
  %rtx510 = bitcast %union.rtunion_def* %arrayidx509 to %struct.rtx_def**
  %83 = load %struct.rtx_def** %rtx510, align 8, !tbaa !6
  %call511 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %83, %struct.rtx_def* %call506) #5
  %cmp512 = icmp eq %struct.rtx_def* %call511, %call506
  br i1 %cmp512, label %if.end516, label %if.then514

if.then514:                                       ; preds = %if.then501
  %call515 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call506, %struct.rtx_def* %call511) #5
  br label %if.end516

if.end516:                                        ; preds = %if.then501, %if.then514
  %84 = getelementptr inbounds %union.rtunion_def* %arrayidx509, i64 0, i32 0
  %call506.c = ptrtoint %struct.rtx_def* %call506 to i64
  store i64 %call506.c, i64* %84, align 8, !tbaa !6
  br label %return

if.else520:                                       ; preds = %if.end493
  %arrayidx522 = getelementptr inbounds %struct.rtx_def* %x.addr.2656, i64 0, i32 1, i64 1
  %rtx523 = bitcast %union.rtunion_def* %arrayidx522 to %struct.rtx_def**
  %85 = load %struct.rtx_def** %rtx523, align 8, !tbaa !6
  %86 = getelementptr inbounds %struct.rtx_def* %85, i64 0, i32 0
  %bf.load524 = load i32* %86, align 8
  %bf.clear525 = and i32 %bf.load524, 65535
  %cmp526 = icmp eq i32 %bf.clear525, 61
  br i1 %cmp526, label %if.then528, label %return

if.then528:                                       ; preds = %if.else520
  %87 = load i32* @target_flags, align 4, !tbaa !1
  %and531 = lshr i32 %87, 25
  %88 = and i32 %and531, 1
  %89 = or i32 %88, 4
  %call534 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %89) #5
  %90 = load %struct.rtx_def** %rtx496, align 8, !tbaa !6
  %call540 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %90, %struct.rtx_def* %call534) #5
  %cmp541 = icmp eq %struct.rtx_def* %call540, %call534
  br i1 %cmp541, label %if.end545, label %if.then543

if.then543:                                       ; preds = %if.then528
  %call544 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call534, %struct.rtx_def* %call540) #5
  br label %if.end545

if.end545:                                        ; preds = %if.then528, %if.then543
  %91 = getelementptr inbounds [1 x %union.rtunion_def]* %fld494, i64 0, i64 0, i32 0
  %call534.c = ptrtoint %struct.rtx_def* %call534 to i64
  store i64 %call534.c, i64* %91, align 8, !tbaa !6
  br label %return

return:                                           ; preds = %if.end42, %if.else520, %land.lhs.true489, %land.lhs.true444, %land.lhs.true398, %if.end545, %if.end516, %if.then12
  %retval.0 = phi %struct.rtx_def* [ %call13, %if.then12 ], [ %x.addr.2656, %if.end516 ], [ %x.addr.2656, %if.end545 ], [ %x.addr.1649, %land.lhs.true398 ], [ %x.addr.1650, %land.lhs.true444 ], [ %x.addr.2655, %land.lhs.true489 ], [ %x.addr.2656, %if.else520 ], [ %x.addr.0, %if.end42 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @exact_log2_wide(i64) #0

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #0

declare %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define void @i386_dwarf_output_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %x) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0)
  %1 = tail call i64 @fwrite(i8* %cond, i64 7, i64 1, %struct._IO_FILE* %file)
  %2 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool1 = icmp eq i32 %2, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %x, i32 0)
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @output_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %x) #5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call2 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* nocapture readonly %x, i32 %code) #1 {
entry:
  %buf = alloca [256 x i8], align 16
  %0 = getelementptr inbounds [256 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 256, i8* %0) #5
  %1 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default121 [
    i32 59, label %sw.bb
    i32 68, label %sw.bb1
    i32 67, label %sw.bb8
    i32 36, label %do.body
    i32 54, label %sw.bb16
    i32 58, label %sw.bb20
    i32 55, label %sw.bb24
    i32 75, label %sw.bb54
    i32 76, label %sw.bb87
    i32 42, label %sw.bb100
  ]

sw.bb:                                            ; preds = %entry
  %2 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %sw.bb
  %call = call i32 @putc(i32 46, %struct._IO_FILE* %file) #5
  br label %sw.epilog122

if.else:                                          ; preds = %sw.bb
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5343, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.output_pic_addr_const, i64 0, i64 0)) #8
  unreachable

sw.bb1:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx to i8**
  %3 = load i8** %rtstr, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %file, i8* %3) #5
  %cmp = icmp eq i32 %code, 80
  br i1 %cmp, label %land.lhs.true, label %sw.epilog122

land.lhs.true:                                    ; preds = %sw.bb1
  %bf.load2 = load i32* %1, align 8
  %bf.clear3 = and i32 %bf.load2, 134217728
  %tobool4 = icmp eq i32 %bf.clear3, 0
  br i1 %tobool4, label %if.then5, label %sw.epilog122

if.then5:                                         ; preds = %land.lhs.true
  %4 = call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str469, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %file)
  br label %sw.epilog122

sw.bb8:                                           ; preds = %entry
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  br label %do.body

do.body:                                          ; preds = %sw.bb8, %entry
  %x.addr.0 = phi %struct.rtx_def* [ %x, %entry ], [ %5, %sw.bb8 ]
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 5
  %rtint = bitcast %union.rtunion_def* %arrayidx13 to i32*
  %6 = load i32* %rtint, align 4, !tbaa !1
  %call14 = call i32 (i8*, i8*, ...)* @sprintf(i8* %0, i8* getelementptr inbounds ([7 x i8]* @.str55, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str208, i64 0, i64 0), i32 %6) #5
  %7 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %7, i8* %0) #5
  br label %sw.epilog122

sw.bb16:                                          ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, i32 0
  %8 = load i64* %rtwint, align 8, !tbaa !77
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8]* @.str130, i64 0, i64 0), i64 %8) #5
  br label %sw.epilog122

sw.bb20:                                          ; preds = %entry
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx23, align 8, !tbaa !6
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %9, i32 %code)
  br label %sw.epilog122

sw.bb24:                                          ; preds = %entry
  %bf.clear27 = and i32 %bf.load, 16711680
  %cmp28 = icmp eq i32 %bf.clear27, 0
  br i1 %cmp28, label %if.then29, label %if.else52

if.then29:                                        ; preds = %sw.bb24
  %rtwint32 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 2, i32 0
  %10 = load i64* %rtwint32, align 8, !tbaa !77
  %tobool33 = icmp ne i64 %10, 0
  %rtwint36 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, i32 0
  %11 = load i64* %rtwint36, align 8, !tbaa !77
  %cmp37 = icmp slt i64 %11, 0
  %or.cond = or i1 %tobool33, %cmp37
  br i1 %or.cond, label %if.then38, label %if.else46

if.then38:                                        ; preds = %if.then29
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8]* @.str470, i64 0, i64 0), i64 %10, i64 %11) #5
  br label %sw.epilog122

if.else46:                                        ; preds = %if.then29
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8]* @.str130, i64 0, i64 0), i64 %11) #5
  br label %sw.epilog122

if.else52:                                        ; preds = %sw.bb24
  call void (i8*, ...)* @output_operand_lossage(i8* getelementptr inbounds ([26 x i8]* @.str471, i64 0, i64 0)) #5
  br label %sw.epilog122

sw.bb54:                                          ; preds = %entry
  %fld55 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx57 = bitcast [1 x %union.rtunion_def]* %fld55 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx57, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load58 = load i32* %13, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp eq i32 %bf.clear59, 54
  br i1 %cmp60, label %if.then61, label %if.else69

if.then61:                                        ; preds = %sw.bb54
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %12, i32 %code)
  %call65 = call i32 @putc(i32 43, %struct._IO_FILE* %file) #5
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx68, align 8, !tbaa !6
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %14, i32 %code)
  br label %sw.epilog122

if.else69:                                        ; preds = %sw.bb54
  %arrayidx71 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx72, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load73 = load i32* %16, align 8
  %bf.clear74 = and i32 %bf.load73, 65535
  %cmp75 = icmp eq i32 %bf.clear74, 54
  br i1 %cmp75, label %if.then76, label %if.else84

if.then76:                                        ; preds = %if.else69
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %15, i32 %code)
  %call80 = call i32 @putc(i32 43, %struct._IO_FILE* %file) #5
  %17 = load %struct.rtx_def** %rtx57, align 8, !tbaa !6
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %17, i32 %code)
  br label %sw.epilog122

if.else84:                                        ; preds = %if.else69
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5402, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.output_pic_addr_const, i64 0, i64 0)) #8
  unreachable

sw.bb87:                                          ; preds = %entry
  %18 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp88 = icmp eq i32 %18, 1
  %cond = select i1 %cmp88, i32 40, i32 91
  %call89 = call i32 @putc(i32 %cond, %struct._IO_FILE* %file) #5
  %fld90 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx92 = bitcast [1 x %union.rtunion_def]* %fld90 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx92, align 8, !tbaa !6
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %19, i32 %code)
  %call93 = call i32 @putc(i32 45, %struct._IO_FILE* %file) #5
  %arrayidx95 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx96, align 8, !tbaa !6
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %20, i32 %code)
  %21 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp97 = icmp eq i32 %21, 1
  %cond98 = select i1 %cmp97, i32 41, i32 93
  %call99 = call i32 @putc(i32 %cond98, %struct._IO_FILE* %file) #5
  br label %sw.epilog122

sw.bb100:                                         ; preds = %entry
  %fld101 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtvec = bitcast [1 x %union.rtunion_def]* %fld101 to %struct.rtvec_def**
  %22 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %num_elem = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 0
  %23 = load i32* %num_elem, align 4, !tbaa !10
  %cmp103 = icmp eq i32 %23, 1
  br i1 %cmp103, label %if.end105, label %if.then104

if.then104:                                       ; preds = %sw.bb100
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5415, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.output_pic_addr_const, i64 0, i64 0)) #8
  unreachable

if.end105:                                        ; preds = %sw.bb100
  %arrayidx109 = getelementptr inbounds %struct.rtvec_def* %22, i64 0, i32 1, i64 0
  %24 = load %struct.rtx_def** %arrayidx109, align 8, !tbaa !6
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %24, i32 %code)
  %arrayidx111 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtint112 = bitcast %union.rtunion_def* %arrayidx111 to i32*
  %25 = load i32* %rtint112, align 4, !tbaa !1
  switch i32 %25, label %sw.default [
    i32 6, label %sw.bb113
    i32 7, label %sw.bb115
    i32 8, label %sw.bb117
    i32 15, label %sw.bb119
  ]

sw.bb113:                                         ; preds = %if.end105
  %26 = call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str472, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %file)
  br label %sw.epilog122

sw.bb115:                                         ; preds = %if.end105
  %27 = call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str473, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %file)
  br label %sw.epilog122

sw.bb117:                                         ; preds = %if.end105
  %28 = call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str469, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %file)
  br label %sw.epilog122

sw.bb119:                                         ; preds = %if.end105
  %29 = call i64 @fwrite(i8* getelementptr inbounds ([16 x i8]* @.str474, i64 0, i64 0), i64 15, i64 1, %struct._IO_FILE* %file)
  br label %sw.epilog122

sw.default:                                       ; preds = %if.end105
  call void (i8*, ...)* @output_operand_lossage(i8* getelementptr inbounds ([26 x i8]* @.str475, i64 0, i64 0)) #5
  br label %sw.epilog122

sw.default121:                                    ; preds = %entry
  call void (i8*, ...)* @output_operand_lossage(i8* getelementptr inbounds ([30 x i8]* @.str476, i64 0, i64 0)) #5
  br label %sw.epilog122

sw.epilog122:                                     ; preds = %land.lhs.true, %sw.bb113, %sw.bb115, %sw.bb117, %sw.bb119, %sw.default, %if.then61, %if.then76, %if.else52, %if.else46, %if.then38, %sw.bb1, %if.then5, %sw.default121, %sw.bb87, %sw.bb20, %sw.bb16, %do.body, %if.then
  call void @llvm.lifetime.end(i64 256, i8* %0) #5
  ret void
}

declare void @output_addr_const(%struct._IO_FILE*, %struct.rtx_def*) #0

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #4

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @i386_simplify_dwarf_addr(%struct.rtx_def* readonly %orig_x) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %orig_x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %orig_x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load2.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load2 = phi i32 [ %bf.load2.pre, %if.then ], [ %bf.load, %entry ]
  %x.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %orig_x, %entry ]
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %2, 33554432
  %tobool = icmp eq i32 %and, 0
  %bf.clear3 = and i32 %bf.load2, 65535
  br i1 %tobool, label %if.end30, label %if.then1

if.then1:                                         ; preds = %if.end
  %cmp4 = icmp eq i32 %bf.clear3, 58
  br i1 %cmp4, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.then1
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 0
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx7, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load8 = load i32* %4, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 42
  br i1 %cmp10, label %lor.lhs.false11, label %return

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %5 = load i32* %rtint, align 4, !tbaa !1
  %cmp17.not = icmp ne i32 %5, 15
  %cmp.not = xor i1 %cmp, true
  %brmerge = or i1 %cmp17.not, %cmp.not
  br i1 %brmerge, label %return, label %if.end23

if.end23:                                         ; preds = %lor.lhs.false11
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %arrayidx29 = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 1, i64 0
  %7 = load %struct.rtx_def** %arrayidx29, align 8, !tbaa !6
  br label %return

if.end30:                                         ; preds = %if.end
  %cmp33 = icmp eq i32 %bf.clear3, 75
  br i1 %cmp33, label %lor.lhs.false34, label %return

lor.lhs.false34:                                  ; preds = %if.end30
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 1
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx37, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load38 = load i32* %9, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 58
  br i1 %cmp40, label %if.end42, label %return

if.end42:                                         ; preds = %lor.lhs.false34
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 0
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx45, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load46 = load i32* %11, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  switch i32 %bf.clear47, label %return [
    i32 61, label %lor.end
    i32 75, label %if.then65
  ]

lor.end:                                          ; preds = %if.end42
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx53 to i32*
  %12 = load i32* %rtuint, align 4, !tbaa !1
  %13 = load i32* @flag_pic, align 4, !tbaa !1
  %lnot = icmp eq i32 %13, 0
  %phitmp295 = select i1 %lnot, i32 -1, i32 3
  %cmp57 = icmp eq i32 %12, %phitmp295
  br i1 %cmp57, label %if.end138, label %return

if.then65:                                        ; preds = %if.end42
  %fld69 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1
  %rtx71 = bitcast [1 x %union.rtunion_def]* %fld69 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx71, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load72 = load i32* %15, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 61
  br i1 %cmp74, label %lor.end87, label %if.else94

lor.end87:                                        ; preds = %if.then65
  %arrayidx80 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0
  %rtuint81 = bitcast %union.rtunion_def* %arrayidx80 to i32*
  %16 = load i32* %rtuint81, align 4, !tbaa !1
  %17 = load i32* @flag_pic, align 4, !tbaa !1
  %lnot86 = icmp eq i32 %17, 0
  %phitmp294 = select i1 %lnot86, i32 -1, i32 3
  %cmp89 = icmp eq i32 %16, %phitmp294
  br i1 %cmp89, label %if.then90, label %if.else94

if.then90:                                        ; preds = %lor.end87
  %arrayidx92 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 1
  %rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**
  %y.0.pre = load %struct.rtx_def** %rtx93, align 8
  %.phi.trans.insert298 = getelementptr inbounds %struct.rtx_def* %y.0.pre, i64 0, i32 0
  %bf.load123.pre = load i32* %.phi.trans.insert298, align 8
  br label %if.end122

if.else94:                                        ; preds = %lor.end87, %if.then65
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 1
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx97, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load98 = load i32* %19, align 8
  %bf.clear99 = and i32 %bf.load98, 65535
  %cmp100 = icmp eq i32 %bf.clear99, 61
  br i1 %cmp100, label %lor.end113, label %return

lor.end113:                                       ; preds = %if.else94
  %arrayidx106 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtuint107 = bitcast %union.rtunion_def* %arrayidx106 to i32*
  %20 = load i32* %rtuint107, align 4, !tbaa !1
  %21 = load i32* @flag_pic, align 4, !tbaa !1
  %lnot112 = icmp eq i32 %21, 0
  %phitmp = select i1 %lnot112, i32 -1, i32 3
  %cmp115 = icmp eq i32 %20, %phitmp
  br i1 %cmp115, label %if.end122, label %return

if.end122:                                        ; preds = %lor.end113, %if.then90
  %bf.load123 = phi i32 [ %bf.load123.pre, %if.then90 ], [ %bf.load72, %lor.end113 ]
  %y.0 = phi %struct.rtx_def* [ %y.0.pre, %if.then90 ], [ %14, %lor.end113 ]
  %bf.clear124 = and i32 %bf.load123, 65535
  switch i32 %bf.clear124, label %return [
    i32 61, label %if.end138
    i32 78, label %if.end138
    i32 87, label %if.end138
  ]

if.end138:                                        ; preds = %if.end122, %if.end122, %if.end122, %lor.end
  %y.1 = phi %struct.rtx_def* [ %y.0, %if.end122 ], [ null, %lor.end ], [ %y.0, %if.end122 ], [ %y.0, %if.end122 ]
  %arrayidx143 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx144, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load145 = load i32* %23, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  switch i32 %bf.clear146, label %return [
    i32 42, label %land.lhs.true148
    i32 75, label %land.lhs.true187
  ]

land.lhs.true148:                                 ; preds = %if.end138
  %fld149 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1
  %arrayidx150 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 1
  %rtint151 = bitcast %union.rtunion_def* %arrayidx150 to i32*
  %24 = load i32* %rtint151, align 4, !tbaa !1
  switch i32 %24, label %return [
    i32 6, label %land.lhs.true153
    i32 7, label %land.lhs.true162
  ]

land.lhs.true153:                                 ; preds = %land.lhs.true148
  br i1 %cmp, label %if.then166, label %if.end183

land.lhs.true162:                                 ; preds = %land.lhs.true148
  br i1 %cmp, label %if.end183, label %if.then166

if.then166:                                       ; preds = %land.lhs.true162, %land.lhs.true153
  %tobool167 = icmp eq %struct.rtx_def* %y.1, null
  br i1 %tobool167, label %if.end177, label %if.then168

if.then168:                                       ; preds = %if.then166
  %and169 = lshr i32 %2, 25
  %25 = and i32 %and169, 1
  %26 = or i32 %25, 4
  %rtvec174 = bitcast [1 x %union.rtunion_def]* %fld149 to %struct.rtvec_def**
  %27 = load %struct.rtvec_def** %rtvec174, align 8, !tbaa !6
  %arrayidx176 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 1, i64 0
  %28 = load %struct.rtx_def** %arrayidx176, align 8, !tbaa !6
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %26, %struct.rtx_def* %y.1, %struct.rtx_def* %28) #5
  br label %return

if.end177:                                        ; preds = %if.then166
  %rtvec180 = bitcast [1 x %union.rtunion_def]* %fld149 to %struct.rtvec_def**
  %29 = load %struct.rtvec_def** %rtvec180, align 8, !tbaa !6
  %arrayidx182 = getelementptr inbounds %struct.rtvec_def* %29, i64 0, i32 1, i64 0
  %30 = load %struct.rtx_def** %arrayidx182, align 8, !tbaa !6
  br label %return

if.end183:                                        ; preds = %land.lhs.true153, %land.lhs.true162
  %cmp186 = icmp eq i32 %bf.clear146, 75
  br i1 %cmp186, label %land.lhs.true187, label %return

land.lhs.true187:                                 ; preds = %if.end138, %if.end183
  %fld188 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1
  %rtx190 = bitcast [1 x %union.rtunion_def]* %fld188 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx190, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load191 = load i32* %32, align 8
  %bf.clear192 = and i32 %bf.load191, 65535
  %cmp193 = icmp eq i32 %bf.clear192, 42
  br i1 %cmp193, label %land.lhs.true194, label %return

land.lhs.true194:                                 ; preds = %land.lhs.true187
  %arrayidx196 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 1
  %rtx197 = bitcast %union.rtunion_def* %arrayidx196 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx197, align 8, !tbaa !6
  %34 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 0
  %bf.load198 = load i32* %34, align 8
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 54
  br i1 %cmp200, label %land.lhs.true201, label %return

land.lhs.true201:                                 ; preds = %land.lhs.true194
  %arrayidx206 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 1
  %rtint207 = bitcast %union.rtunion_def* %arrayidx206 to i32*
  %35 = load i32* %rtint207, align 4, !tbaa !1
  switch i32 %35, label %return [
    i32 6, label %land.lhs.true209
    i32 7, label %land.lhs.true221
  ]

land.lhs.true209:                                 ; preds = %land.lhs.true201
  br i1 %cmp, label %if.then225, label %return

land.lhs.true221:                                 ; preds = %land.lhs.true201
  br i1 %cmp, label %return, label %if.then225

if.then225:                                       ; preds = %land.lhs.true221, %land.lhs.true209
  %arrayidx230 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0
  %rtvec231 = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtvec_def**
  %36 = load %struct.rtvec_def** %rtvec231, align 8, !tbaa !6
  %arrayidx233 = getelementptr inbounds %struct.rtvec_def* %36, i64 0, i32 1, i64 0
  %37 = load %struct.rtx_def** %arrayidx233, align 8, !tbaa !6
  %call237 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 0, %struct.rtx_def* %37, %struct.rtx_def* %33) #5
  %tobool238 = icmp eq %struct.rtx_def* %y.1, null
  br i1 %tobool238, label %return, label %if.then239

if.then239:                                       ; preds = %if.then225
  %38 = load i32* @target_flags, align 4, !tbaa !1
  %and240 = lshr i32 %38, 25
  %39 = and i32 %and240, 1
  %40 = or i32 %39, 4
  %call243 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %40, %struct.rtx_def* %y.1, %struct.rtx_def* %call237) #5
  br label %return

return:                                           ; preds = %land.lhs.true201, %if.end138, %land.lhs.true148, %if.end42, %lor.lhs.false11, %land.lhs.true209, %lor.end, %if.end183, %land.lhs.true187, %land.lhs.true194, %land.lhs.true221, %if.then225, %if.end122, %if.else94, %lor.end113, %if.end30, %lor.lhs.false34, %if.then1, %lor.lhs.false, %if.then239, %if.end177, %if.then168, %if.end23
  %retval.0 = phi %struct.rtx_def* [ %7, %if.end23 ], [ %call, %if.then168 ], [ %30, %if.end177 ], [ %call243, %if.then239 ], [ %orig_x, %lor.lhs.false11 ], [ %orig_x, %lor.lhs.false ], [ %orig_x, %if.then1 ], [ %orig_x, %lor.lhs.false34 ], [ %orig_x, %if.end30 ], [ %orig_x, %lor.end113 ], [ %orig_x, %if.else94 ], [ %orig_x, %if.end122 ], [ %call237, %if.then225 ], [ %orig_x, %land.lhs.true221 ], [ %orig_x, %land.lhs.true194 ], [ %orig_x, %land.lhs.true187 ], [ %orig_x, %if.end183 ], [ %orig_x, %lor.end ], [ %orig_x, %land.lhs.true209 ], [ %orig_x, %if.end42 ], [ %orig_x, %land.lhs.true148 ], [ %orig_x, %if.end138 ], [ %orig_x, %land.lhs.true201 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define void @print_reg(%struct.rtx_def* nocapture readonly %x, i32 %code, %struct._IO_FILE* nocapture %file) #1 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtuint, align 4, !tbaa !1
  switch i32 %0, label %if.end [
    i32 16, label %if.then
    i32 20, label %if.then
    i32 17, label %if.then
    i32 18, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry, %entry, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5640, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.print_reg, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %call = tail call i32 @putc(i32 37, %struct._IO_FILE* %file) #5
  %cmp21 = icmp eq i32 %code, 119
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load68.pre = load i32* %.phi.trans.insert, align 8
  br i1 %cmp21, label %if.end67, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %if.end
  %bf.clear = and i32 %bf.load68.pre, 65535
  %cmp24 = icmp eq i32 %bf.clear, 61
  br i1 %cmp24, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false23
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %.off249 = add i32 %1, -29
  %2 = icmp ult i32 %.off249, 8
  br i1 %2, label %if.end67, label %if.else

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false23
  switch i32 %code, label %if.else57 [
    i32 98, label %if.end67
    i32 107, label %if.then44
    i32 113, label %if.then48
    i32 121, label %if.then52
    i32 104, label %if.then56
  ]

if.then44:                                        ; preds = %if.else
  br label %if.end67

if.then48:                                        ; preds = %if.else
  br label %if.end67

if.then52:                                        ; preds = %if.else
  br label %if.end67

if.then56:                                        ; preds = %if.else
  br label %if.end67

if.else57:                                        ; preds = %if.else
  %bf.lshr = lshr i32 %bf.load68.pre, 16
  %bf.clear59 = and i32 %bf.lshr, 255
  %idxprom242 = zext i32 %bf.clear59 to i64
  %arrayidx60 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom242
  %3 = load i8* %arrayidx60, align 1, !tbaa !5
  %conv61 = zext i8 %3 to i32
  br label %if.end67

if.end67:                                         ; preds = %if.end, %if.else, %land.lhs.true, %if.then48, %if.then56, %if.else57, %if.then52, %if.then44
  %code.addr.0 = phi i32 [ 4, %if.then44 ], [ 8, %if.then48 ], [ 3, %if.then52 ], [ 0, %if.then56 ], [ %conv61, %if.else57 ], [ 2, %land.lhs.true ], [ 1, %if.else ], [ 2, %if.end ]
  %bf.clear69 = and i32 %bf.load68.pre, 65535
  %cmp70 = icmp eq i32 %bf.clear69, 61
  br i1 %cmp70, label %land.lhs.true72, label %if.end113

land.lhs.true72:                                  ; preds = %if.end67
  %4 = load i32* %rtuint, align 4, !tbaa !1
  %.off248 = add i32 %4, -37
  %5 = icmp ult i32 %.off248, 8
  br i1 %5, label %if.then84, label %if.end113

if.then84:                                        ; preds = %land.lhs.true72
  %6 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %6, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then85, label %if.end86

if.then85:                                        ; preds = %if.then84
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5665, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.print_reg, i64 0, i64 0)) #8
  unreachable

if.end86:                                         ; preds = %if.then84
  switch i32 %code.addr.0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb87
    i32 2, label %sw.bb92
    i32 4, label %sw.bb99
    i32 8, label %sw.bb106
  ]

sw.bb:                                            ; preds = %if.end86
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str102, i64 0, i64 0)) #5
  br label %sw.epilog198

sw.bb87:                                          ; preds = %if.end86
  %add = add i32 %4, -29
  %call91 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8]* @.str103, i64 0, i64 0), i32 %add) #5
  br label %sw.epilog198

sw.bb92:                                          ; preds = %if.end86
  %add97 = add i32 %4, -29
  %call98 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8]* @.str104, i64 0, i64 0), i32 %add97) #5
  br label %sw.epilog198

sw.bb99:                                          ; preds = %if.end86
  %add104 = add i32 %4, -29
  %call105 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8]* @.str105, i64 0, i64 0), i32 %add104) #5
  br label %sw.epilog198

sw.bb106:                                         ; preds = %if.end86
  %add111 = add i32 %4, -29
  %call112 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str106, i64 0, i64 0), i32 %add111) #5
  br label %sw.epilog198

sw.default:                                       ; preds = %if.end86
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([47 x i8]* @.str107, i64 0, i64 0)) #5
  br label %sw.epilog198

if.end113:                                        ; preds = %land.lhs.true72, %if.end67
  switch i32 %code.addr.0, label %sw.default197 [
    i32 3, label %sw.bb114
    i32 8, label %sw.bb128
    i32 4, label %sw.bb128
    i32 12, label %sw.bb128
    i32 16, label %sw.bb176
    i32 2, label %sw.bb176
    i32 1, label %sw.bb183
    i32 0, label %sw.bb190
  ]

sw.bb114:                                         ; preds = %if.end113
  br i1 %cmp70, label %land.lhs.true119, label %land.end

land.lhs.true119:                                 ; preds = %sw.bb114
  %7 = load i32* %rtuint, align 4, !tbaa !1
  %cmp123 = icmp eq i32 %7, 8
  br i1 %cmp123, label %if.then125, label %land.lhs.true133

if.then125:                                       ; preds = %land.lhs.true119
  %8 = tail call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str108, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %file)
  br label %sw.epilog198

sw.bb128:                                         ; preds = %if.end113, %if.end113, %if.end113
  br i1 %cmp70, label %land.lhs.true133, label %if.then169

land.lhs.true133:                                 ; preds = %land.lhs.true119, %sw.bb128
  %9 = load i32* %rtuint, align 4, !tbaa !1
  %10 = and i32 %9, -8
  %11 = icmp eq i32 %10, 8
  %.off = add i32 %9, -21
  %12 = icmp ult i32 %.off, 8
  %or.cond = or i1 %11, %12
  %.off247 = add i32 %9, -45
  %13 = icmp ult i32 %.off247, 8
  %or.cond252 = or i1 %or.cond, %13
  br i1 %or.cond252, label %sw.bb176, label %if.then169

if.then169:                                       ; preds = %land.lhs.true133, %sw.bb128
  %cmp170 = icmp eq i32 %code.addr.0, 8
  br i1 %cmp170, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then169
  %14 = load i32* @target_flags, align 4, !tbaa !1
  %and172 = and i32 %14, 33554432
  %tobool173 = icmp ne i32 %and172, 0
  %phitmp = select i1 %tobool173, i32 114, i32 101
  br label %land.end

land.end:                                         ; preds = %sw.bb114, %land.rhs, %if.then169
  %15 = phi i32 [ 101, %if.then169 ], [ %phitmp, %land.rhs ], [ 101, %sw.bb114 ]
  %call174 = tail call i32 @putc(i32 %15, %struct._IO_FILE* %file) #5
  br label %sw.bb176

sw.bb176:                                         ; preds = %land.lhs.true133, %land.end, %if.end113, %if.end113
  %16 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom180 = zext i32 %16 to i64
  %arrayidx181 = getelementptr inbounds [53 x i8*]* @hi_reg_name, i64 0, i64 %idxprom180
  %17 = load i8** %arrayidx181, align 8, !tbaa !6
  %call182 = tail call i32 @fputs(i8* %17, %struct._IO_FILE* %file) #5
  br label %sw.epilog198

sw.bb183:                                         ; preds = %if.end113
  %18 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom187 = zext i32 %18 to i64
  %arrayidx188 = getelementptr inbounds [8 x i8*]* @qi_reg_name, i64 0, i64 %idxprom187
  %19 = load i8** %arrayidx188, align 8, !tbaa !6
  %call189 = tail call i32 @fputs(i8* %19, %struct._IO_FILE* %file) #5
  br label %sw.epilog198

sw.bb190:                                         ; preds = %if.end113
  %20 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom194 = zext i32 %20 to i64
  %arrayidx195 = getelementptr inbounds [4 x i8*]* @qi_high_reg_name, i64 0, i64 %idxprom194
  %21 = load i8** %arrayidx195, align 8, !tbaa !6
  %call196 = tail call i32 @fputs(i8* %21, %struct._IO_FILE* %file) #5
  br label %sw.epilog198

sw.default197:                                    ; preds = %if.end113
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5715, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.print_reg, i64 0, i64 0)) #8
  unreachable

sw.epilog198:                                     ; preds = %sw.bb, %sw.bb87, %sw.bb92, %sw.bb99, %sw.bb106, %sw.default, %sw.bb190, %sw.bb183, %sw.bb176, %if.then125
  ret void
}

; Function Attrs: nounwind
declare i32 @putc(i32, %struct._IO_FILE* nocapture) #4

; Function Attrs: nounwind uwtable
define void @print_operand(%struct._IO_FILE* %file, %struct.rtx_def* %x, i32 %code) #1 {
entry:
  %dstr = alloca [30 x i8], align 16
  %dstr391 = alloca [30 x i8], align 16
  switch i32 %code, label %sw.default207 [
    i32 0, label %if.end209
    i32 42, label %sw.bb
    i32 65, label %sw.bb2
    i32 76, label %sw.bb16
    i32 87, label %sw.bb21
    i32 66, label %sw.bb26
    i32 81, label %sw.bb31
    i32 83, label %sw.bb36
    i32 84, label %sw.bb41
    i32 122, label %sw.bb46
    i32 98, label %if.end209
    i32 119, label %if.end209
    i32 107, label %if.end209
    i32 113, label %if.end209
    i32 104, label %if.end209
    i32 121, label %if.end209
    i32 88, label %if.end209
    i32 80, label %if.end209
    i32 115, label %sw.bb94
    i32 68, label %sw.bb102
    i32 79, label %if.end466
    i32 67, label %sw.bb123
    i32 70, label %sw.bb131
    i32 99, label %sw.bb140
    i32 102, label %sw.bb158
    i32 43, label %sw.bb167
  ]

sw.bb:                                            ; preds = %entry
  %0 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then1, label %if.end466

if.then1:                                         ; preds = %sw.bb
  %call = call i32 @putc(i32 42, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb2:                                           ; preds = %entry
  %1 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  switch i32 %1, label %if.else13 [
    i32 0, label %if.then4
    i32 1, label %if.then7
  ]

if.then4:                                         ; preds = %sw.bb2
  %call5 = call i32 @putc(i32 42, %struct._IO_FILE* %file) #5
  br label %if.end15

if.then7:                                         ; preds = %sw.bb2
  %2 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp8 = icmp eq i32 %bf.clear, 61
  br i1 %cmp8, label %if.end15, label %if.then9

if.then9:                                         ; preds = %if.then7
  %call10 = call i32 @putc(i32 91, %struct._IO_FILE* %file) #5
  call void @print_operand(%struct._IO_FILE* %file, %struct.rtx_def* %x, i32 0)
  %call11 = call i32 @putc(i32 93, %struct._IO_FILE* %file) #5
  br label %if.end466

if.else13:                                        ; preds = %sw.bb2
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5776, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.print_operand, i64 0, i64 0)) #8
  unreachable

if.end15:                                         ; preds = %if.then7, %if.then4
  call void @print_operand(%struct._IO_FILE* %file, %struct.rtx_def* %x, i32 0)
  br label %if.end466

sw.bb16:                                          ; preds = %entry
  %3 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp17 = icmp eq i32 %3, 0
  br i1 %cmp17, label %if.then18, label %if.end466

if.then18:                                        ; preds = %sw.bb16
  %call19 = call i32 @putc(i32 108, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb21:                                          ; preds = %entry
  %4 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp22 = icmp eq i32 %4, 0
  br i1 %cmp22, label %if.then23, label %if.end466

if.then23:                                        ; preds = %sw.bb21
  %call24 = call i32 @putc(i32 119, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb26:                                          ; preds = %entry
  %5 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp27 = icmp eq i32 %5, 0
  br i1 %cmp27, label %if.then28, label %if.end466

if.then28:                                        ; preds = %sw.bb26
  %call29 = call i32 @putc(i32 98, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb31:                                          ; preds = %entry
  %6 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp32 = icmp eq i32 %6, 0
  br i1 %cmp32, label %if.then33, label %if.end466

if.then33:                                        ; preds = %sw.bb31
  %call34 = call i32 @putc(i32 108, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb36:                                          ; preds = %entry
  %7 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp37 = icmp eq i32 %7, 0
  br i1 %cmp37, label %if.then38, label %if.end466

if.then38:                                        ; preds = %sw.bb36
  %call39 = call i32 @putc(i32 115, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb41:                                          ; preds = %entry
  %8 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp42 = icmp eq i32 %8, 0
  br i1 %cmp42, label %if.then43, label %if.end466

if.then43:                                        ; preds = %sw.bb41
  %call44 = call i32 @putc(i32 116, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb46:                                          ; preds = %entry
  %9 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load47 = load i32* %9, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 61
  br i1 %cmp49, label %land.lhs.true, label %if.end57

land.lhs.true:                                    ; preds = %sw.bb46
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %10 = load i32* %rtuint, align 4, !tbaa !1
  %cmp50 = icmp ugt i32 %10, 7
  br i1 %cmp50, label %land.lhs.true51, label %if.end57

land.lhs.true51:                                  ; preds = %land.lhs.true
  %cmp55 = icmp ult i32 %10, 16
  %11 = load i32* @ix86_asm_dialect, align 4
  %cmp58 = icmp eq i32 %11, 1
  %or.cond472 = or i1 %cmp55, %cmp58
  br i1 %or.cond472, label %if.end466, label %if.end60

if.end57:                                         ; preds = %land.lhs.true, %sw.bb46
  %.old471 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp58.old = icmp eq i32 %.old471, 1
  br i1 %cmp58.old, label %if.end466, label %if.end60

if.end60:                                         ; preds = %land.lhs.true51, %if.end57
  %bf.lshr = lshr i32 %bf.load47, 16
  %bf.clear62 = and i32 %bf.lshr, 255
  %idxprom602 = zext i32 %bf.clear62 to i64
  %arrayidx63 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom602
  %12 = load i8* %arrayidx63, align 1, !tbaa !5
  %conv = zext i8 %12 to i32
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb64
    i32 4, label %sw.bb66
    i32 12, label %sw.bb77
    i32 16, label %sw.bb77
    i32 8, label %sw.bb79
  ]

sw.bb64:                                          ; preds = %if.end60
  %call65 = call i32 @putc(i32 115, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb66:                                          ; preds = %if.end60
  %cmp70 = icmp eq i32 %bf.clear62, 15
  br i1 %cmp70, label %if.then72, label %if.else74

if.then72:                                        ; preds = %sw.bb66
  %call73 = call i32 @putc(i32 115, %struct._IO_FILE* %file) #5
  br label %if.end466

if.else74:                                        ; preds = %sw.bb66
  %call75 = call i32 @putc(i32 108, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb77:                                          ; preds = %if.end60, %if.end60
  %call78 = call i32 @putc(i32 116, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb79:                                          ; preds = %if.end60
  %arrayidx84 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom602
  %13 = load i32* %arrayidx84, align 4, !tbaa !5
  %cmp85 = icmp eq i32 %13, 1
  %call88 = call i32 @putc(i32 108, %struct._IO_FILE* %file) #5
  br i1 %cmp85, label %if.then87, label %if.end466

if.then87:                                        ; preds = %sw.bb79
  %call89 = call i32 @putc(i32 108, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.default:                                       ; preds = %if.end60
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5861, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.print_operand, i64 0, i64 0)) #8
  unreachable

sw.bb94:                                          ; preds = %entry
  %14 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load95 = load i32* %14, align 8
  %bf.clear96 = and i32 %bf.load95, 65535
  %cmp97 = icmp eq i32 %bf.clear96, 54
  br i1 %cmp97, label %if.then99, label %if.end466

if.then99:                                        ; preds = %sw.bb94
  call void @print_operand(%struct._IO_FILE* %file, %struct.rtx_def* %x, i32 0)
  %call100 = call i32 @putc(i32 44, %struct._IO_FILE* %file) #5
  br label %if.end466

sw.bb102:                                         ; preds = %entry
  %15 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load103 = load i32* %15, align 8
  %bf.clear104 = and i32 %bf.load103, 65535
  switch i32 %bf.clear104, label %sw.default121 [
    i32 103, label %sw.bb105
    i32 114, label %sw.bb105
    i32 107, label %sw.bb107
    i32 118, label %sw.bb107
    i32 106, label %sw.bb109
    i32 117, label %sw.bb109
    i32 112, label %sw.bb111
    i32 102, label %sw.bb113
    i32 119, label %sw.bb113
    i32 115, label %sw.bb115
    i32 104, label %sw.bb115
    i32 116, label %sw.bb117
    i32 105, label %sw.bb117
    i32 113, label %sw.bb119
  ]

sw.bb105:                                         ; preds = %sw.bb102, %sw.bb102
  %16 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str109, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb107:                                         ; preds = %sw.bb102, %sw.bb102
  %17 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str110, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb109:                                         ; preds = %sw.bb102, %sw.bb102
  %18 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str111, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb111:                                         ; preds = %sw.bb102
  %19 = call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str112, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb113:                                         ; preds = %sw.bb102, %sw.bb102
  %20 = call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str113, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb115:                                         ; preds = %sw.bb102, %sw.bb102
  %21 = call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str114, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb117:                                         ; preds = %sw.bb102, %sw.bb102
  %22 = call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str115, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb119:                                         ; preds = %sw.bb102
  %23 = call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str116, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.default121:                                    ; preds = %sw.bb102
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5919, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.print_operand, i64 0, i64 0)) #8
  unreachable

sw.bb123:                                         ; preds = %entry
  %24 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load124 = load i32* %24, align 8
  %bf.clear125 = and i32 %bf.load124, 65535
  %arrayidx127 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load128 = load i32* %26, align 8
  %bf.lshr129 = lshr i32 %bf.load128, 16
  %bf.clear130 = and i32 %bf.lshr129, 255
  call fastcc void @put_condition_code(i32 %bf.clear125, i32 %bf.clear130, i32 0, i32 0, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb131:                                         ; preds = %entry
  %27 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load132 = load i32* %27, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %arrayidx135 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx136, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load137 = load i32* %29, align 8
  %bf.lshr138 = lshr i32 %bf.load137, 16
  %bf.clear139 = and i32 %bf.lshr138, 255
  call fastcc void @put_condition_code(i32 %bf.clear133, i32 %bf.clear139, i32 0, i32 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb140:                                         ; preds = %entry
  %30 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load141 = load i32* %30, align 8
  %bf.clear142 = and i32 %bf.load141, 65535
  %idxprom143601 = zext i32 %bf.clear142 to i64
  %arrayidx144 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom143601
  %31 = load i8* %arrayidx144, align 1, !tbaa !5
  %cmp146 = icmp eq i8 %31, 60
  br i1 %cmp146, label %if.end149, label %if.then148

if.then148:                                       ; preds = %sw.bb140
  call void (i8*, ...)* @output_operand_lossage(i8* getelementptr inbounds ([77 x i8]* @.str117, i64 0, i64 0)) #5
  br label %if.end466

if.end149:                                        ; preds = %sw.bb140
  %arrayidx153 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx154, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load155 = load i32* %33, align 8
  %bf.lshr156 = lshr i32 %bf.load155, 16
  %bf.clear157 = and i32 %bf.lshr156, 255
  call fastcc void @put_condition_code(i32 %bf.clear142, i32 %bf.clear157, i32 1, i32 0, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb158:                                         ; preds = %entry
  %34 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load159 = load i32* %34, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %arrayidx162 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx163, align 8, !tbaa !6
  %36 = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 0
  %bf.load164 = load i32* %36, align 8
  %bf.lshr165 = lshr i32 %bf.load164, 16
  %bf.clear166 = and i32 %bf.lshr165, 255
  call fastcc void @put_condition_code(i32 %bf.clear160, i32 %bf.clear166, i32 1, i32 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.bb167:                                         ; preds = %entry
  %37 = load i32* @optimize, align 4, !tbaa !1
  %38 = load i32* @optimize_size, align 4
  %notlhs = icmp ne i32 %37, 0
  %notrhs = icmp eq i32 %38, 0
  %or.cond.not = and i1 %notrhs, %notlhs
  %39 = load i32* @ix86_cpu, align 4
  %tobool172 = icmp eq i32 %39, 6
  %or.cond603 = and i1 %or.cond.not, %tobool172
  br i1 %or.cond603, label %if.end174, label %if.end466

if.end174:                                        ; preds = %sw.bb167
  %40 = load %struct.rtx_def** @current_output_insn, align 8, !tbaa !6
  %call175 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %40, i32 16, %struct.rtx_def* null) #5
  %tobool176 = icmp eq %struct.rtx_def* %call175, null
  br i1 %tobool176, label %if.end466, label %if.then177

if.then177:                                       ; preds = %if.end174
  %arrayidx179 = getelementptr inbounds %struct.rtx_def* %call175, i64 0, i32 1, i64 0
  %rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx180, align 8, !tbaa !6
  %rtwint = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 0, i32 0
  %42 = load i64* %rtwint, align 8, !tbaa !77
  %conv183 = trunc i64 %42 to i32
  %conv183.off = add i32 %conv183, -4500
  %43 = icmp ugt i32 %conv183.off, 1000
  br i1 %43, label %if.then189, label %if.end466

if.then189:                                       ; preds = %if.then177
  %cmp190 = icmp sgt i32 %conv183, 5000
  %44 = load %struct.rtx_def** @current_output_insn, align 8, !tbaa !6
  %call192 = call i32 @final_forward_branch_p(%struct.rtx_def* %44) #5
  %cmp193 = icmp eq i32 %call192, 0
  %cmp195 = xor i1 %cmp190, %cmp193
  br i1 %cmp195, label %if.then197, label %if.end466

if.then197:                                       ; preds = %if.then189
  br i1 %cmp190, label %if.then199, label %if.else201

if.then199:                                       ; preds = %if.then197
  %45 = call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str118, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

if.else201:                                       ; preds = %if.then197
  %46 = call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str119, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %file)
  br label %if.end466

sw.default207:                                    ; preds = %entry
  call void (i8*, ...)* @output_operand_lossage(i8* getelementptr inbounds ([26 x i8]* @.str120, i64 0, i64 0), i32 %code) #5
  br label %if.end209

if.end209:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default207
  %47 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load210 = load i32* %47, align 8
  %bf.clear211 = and i32 %bf.load210, 65535
  switch i32 %bf.clear211, label %if.else350 [
    i32 61, label %if.then214
    i32 66, label %if.then220
    i32 55, label %land.lhs.true333
  ]

if.then214:                                       ; preds = %if.end209
  call void @print_reg(%struct.rtx_def* %x, i32 %code, %struct._IO_FILE* %file)
  br label %if.end466

if.then220:                                       ; preds = %if.end209
  %48 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp221 = icmp eq i32 %48, 1
  br i1 %cmp221, label %switch.early.test, label %if.end260

switch.early.test:                                ; preds = %if.then220
  switch i32 %code, label %if.then229 [
    i32 88, label %if.end260
    i32 80, label %if.end260
  ]

if.then229:                                       ; preds = %switch.early.test
  %bf.lshr231 = lshr i32 %bf.load210, 16
  %bf.clear232 = and i32 %bf.lshr231, 255
  %idxprom233600 = zext i32 %bf.clear232 to i64
  %arrayidx234 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom233600
  %49 = load i8* %arrayidx234, align 1, !tbaa !5
  %conv235 = zext i8 %49 to i32
  switch i32 %conv235, label %sw.default242 [
    i32 1, label %sw.epilog243
    i32 2, label %sw.bb237
    i32 4, label %sw.bb238
    i32 8, label %sw.bb239
    i32 12, label %sw.bb240
    i32 16, label %sw.bb241
  ]

sw.bb237:                                         ; preds = %if.then229
  br label %sw.epilog243

sw.bb238:                                         ; preds = %if.then229
  br label %sw.epilog243

sw.bb239:                                         ; preds = %if.then229
  br label %sw.epilog243

sw.bb240:                                         ; preds = %if.then229
  br label %sw.epilog243

sw.bb241:                                         ; preds = %if.then229
  br label %sw.epilog243

sw.default242:                                    ; preds = %if.then229
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6027, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.print_operand, i64 0, i64 0)) #8
  unreachable

sw.epilog243:                                     ; preds = %if.then229, %sw.bb241, %sw.bb240, %sw.bb239, %sw.bb238, %sw.bb237
  %size.0 = phi i8* [ getelementptr inbounds ([8 x i8]* @.str126, i64 0, i64 0), %sw.bb241 ], [ getelementptr inbounds ([6 x i8]* @.str125, i64 0, i64 0), %sw.bb240 ], [ getelementptr inbounds ([6 x i8]* @.str124, i64 0, i64 0), %sw.bb239 ], [ getelementptr inbounds ([6 x i8]* @.str123, i64 0, i64 0), %sw.bb238 ], [ getelementptr inbounds ([5 x i8]* @.str122, i64 0, i64 0), %sw.bb237 ], [ getelementptr inbounds ([5 x i8]* @.str121, i64 0, i64 0), %if.then229 ]
  switch i32 %code, label %if.else251 [
    i32 98, label %if.end257
    i32 119, label %if.then250
  ]

if.then250:                                       ; preds = %sw.epilog243
  br label %if.end257

if.else251:                                       ; preds = %sw.epilog243
  %cmp252 = icmp eq i32 %code, 107
  %.size.0 = select i1 %cmp252, i8* getelementptr inbounds ([6 x i8]* @.str123, i64 0, i64 0), i8* %size.0
  br label %if.end257

if.end257:                                        ; preds = %if.else251, %sw.epilog243, %if.then250
  %size.1 = phi i8* [ getelementptr inbounds ([5 x i8]* @.str122, i64 0, i64 0), %if.then250 ], [ getelementptr inbounds ([5 x i8]* @.str121, i64 0, i64 0), %sw.epilog243 ], [ %.size.0, %if.else251 ]
  %call258 = call i32 @fputs(i8* %size.1, %struct._IO_FILE* %file) #5
  %50 = call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str127, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %file)
  br label %if.end260

if.end260:                                        ; preds = %switch.early.test, %switch.early.test, %if.then220, %if.end257
  %arrayidx262 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx263, align 8, !tbaa !6
  %52 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool264 = icmp eq i32 %52, 0
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 0
  %bf.load292.pre = load i32* %.phi.trans.insert, align 8
  br i1 %tobool264, label %if.else291, label %land.lhs.true265

land.lhs.true265:                                 ; preds = %if.end260
  %bf.clear267 = and i32 %bf.load292.pre, 65535
  switch i32 %bf.clear267, label %if.else291 [
    i32 67, label %if.then290
    i32 68, label %if.then290
    i32 54, label %if.then290
    i32 58, label %if.then290
    i32 55, label %if.then290
  ]

if.then290:                                       ; preds = %land.lhs.true265, %land.lhs.true265, %land.lhs.true265, %land.lhs.true265, %land.lhs.true265
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %51, i32 %code)
  br label %if.end466

if.else291:                                       ; preds = %if.end260, %land.lhs.true265
  %bf.clear293 = and i32 %bf.load292.pre, 65535
  switch i32 %bf.clear293, label %lor.lhs.false311 [
    i32 67, label %land.lhs.true316
    i32 68, label %land.lhs.true316
    i32 54, label %land.lhs.true316
    i32 58, label %land.lhs.true316
  ]

lor.lhs.false311:                                 ; preds = %if.else291
  %notlhs615 = icmp ne i32 %bf.clear293, 55
  %notrhs616 = icmp ne i32 %code, 80
  %or.cond470.not = or i1 %notrhs616, %notlhs615
  %cmp322 = icmp eq i32 %bf.clear293, 54
  %or.cond = or i1 %or.cond470.not, %cmp322
  br i1 %or.cond, label %if.else325, label %if.then324

land.lhs.true316:                                 ; preds = %if.else291, %if.else291, %if.else291, %if.else291
  %cmp317.old = icmp ne i32 %code, 80
  %cmp322.old = icmp eq i32 %bf.clear293, 54
  %or.cond614 = or i1 %cmp317.old, %cmp322.old
  br i1 %or.cond614, label %if.else325, label %if.then324

if.then324:                                       ; preds = %land.lhs.true316, %lor.lhs.false311
  call void @output_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %51) #5
  br label %if.end466

if.else325:                                       ; preds = %land.lhs.true316, %lor.lhs.false311
  call void @output_address(%struct.rtx_def* %51) #5
  br label %if.end466

land.lhs.true333:                                 ; preds = %if.end209
  %bf.clear336 = and i32 %bf.load210, 16711680
  %cmp337 = icmp eq i32 %bf.clear336, 983040
  br i1 %cmp337, label %do.body, label %if.else350

do.body:                                          ; preds = %land.lhs.true333
  %rtwint342 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, i32 0
  %tmpcast = bitcast i64* %rtwint342 to %struct.realvaluetype*
  %call343 = call i64 @etarsingle(%struct.realvaluetype* byval align 8 %tmpcast) #5
  %53 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp344 = icmp eq i32 %53, 0
  br i1 %cmp344, label %if.then346, label %if.end348

if.then346:                                       ; preds = %do.body
  %call347 = call i32 @putc(i32 36, %struct._IO_FILE* %file) #5
  br label %if.end348

if.end348:                                        ; preds = %if.then346, %do.body
  %call349 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8]* @.str128, i64 0, i64 0), i64 %call343) #5
  br label %if.end466

if.else350:                                       ; preds = %if.end209, %land.lhs.true333
  %54 = and i32 %bf.load210, 16777215
  %55 = icmp eq i32 %54, 1048631
  br i1 %55, label %do.body363, label %if.else372

do.body363:                                       ; preds = %if.else350
  %rtwint367 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, i32 0
  %arraydecay = getelementptr inbounds [30 x i8]* %dstr, i64 0, i64 0
  %tmpcast610 = bitcast i64* %rtwint367 to %struct.realvaluetype*
  call void @ereal_to_decimal(%struct.realvaluetype* byval align 8 %tmpcast610, i8* %arraydecay) #5
  %fputs599 = call i32 @fputs(i8* %arraydecay, %struct._IO_FILE* %file) #5
  br label %if.end466

if.else372:                                       ; preds = %if.else350
  %cmp353 = icmp eq i32 %bf.clear211, 55
  br i1 %cmp353, label %land.lhs.true377, label %if.else402

land.lhs.true377:                                 ; preds = %if.else372
  %bf.lshr379 = lshr i32 %bf.load210, 16
  %bf.clear380 = and i32 %bf.lshr379, 255
  %bf.clear380.off = add i32 %bf.clear380, -17
  %switch = icmp ult i32 %bf.clear380.off, 2
  br i1 %switch, label %do.body392, label %if.else402

do.body392:                                       ; preds = %land.lhs.true377
  %rtwint396 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, i32 0
  %arraydecay399 = getelementptr inbounds [30 x i8]* %dstr391, i64 0, i64 0
  %tmpcast613 = bitcast i64* %rtwint396 to %struct.realvaluetype*
  call void @ereal_to_decimal(%struct.realvaluetype* byval align 8 %tmpcast613, i8* %arraydecay399) #5
  %fputs = call i32 @fputs(i8* %arraydecay399, %struct._IO_FILE* %file) #5
  br label %if.end466

if.else402:                                       ; preds = %land.lhs.true377, %if.else372
  %cmp403 = icmp eq i32 %code, 80
  br i1 %cmp403, label %if.end446, label %if.then405

if.then405:                                       ; preds = %if.else402
  switch i32 %bf.clear211, label %if.end446 [
    i32 54, label %if.then415
    i32 55, label %if.then415
    i32 58, label %if.then436
    i32 68, label %if.then436
    i32 67, label %if.then436
  ]

if.then415:                                       ; preds = %if.then405, %if.then405
  %56 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp416 = icmp eq i32 %56, 0
  br i1 %cmp416, label %if.then418, label %if.end446

if.then418:                                       ; preds = %if.then415
  %call419 = call i32 @putc(i32 36, %struct._IO_FILE* %file) #5
  br label %if.end446

if.then436:                                       ; preds = %if.then405, %if.then405, %if.then405
  %57 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp437 = icmp eq i32 %57, 0
  br i1 %cmp437, label %if.then439, label %if.else441

if.then439:                                       ; preds = %if.then436
  %call440 = call i32 @putc(i32 36, %struct._IO_FILE* %file) #5
  br label %if.end446

if.else441:                                       ; preds = %if.then436
  %58 = call i64 @fwrite(i8* getelementptr inbounds ([13 x i8]* @.str129, i64 0, i64 0), i64 12, i64 1, %struct._IO_FILE* %file)
  br label %if.end446

if.end446:                                        ; preds = %if.then405, %if.else402, %if.then418, %if.then415, %if.then439, %if.else441
  %bf.load447 = load i32* %47, align 8
  %bf.clear448 = and i32 %bf.load447, 65535
  %cmp449 = icmp eq i32 %bf.clear448, 54
  br i1 %cmp449, label %if.then451, label %if.else456

if.then451:                                       ; preds = %if.end446
  %rtwint454 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, i32 0
  %59 = load i64* %rtwint454, align 8, !tbaa !77
  %call455 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8]* @.str130, i64 0, i64 0), i64 %59) #5
  br label %if.end466

if.else456:                                       ; preds = %if.end446
  %60 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool457 = icmp eq i32 %60, 0
  br i1 %tobool457, label %if.else459, label %if.then458

if.then458:                                       ; preds = %if.else456
  call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %x, i32 %code)
  br label %if.end466

if.else459:                                       ; preds = %if.else456
  call void @output_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %x) #5
  br label %if.end466

if.end466:                                        ; preds = %sw.bb167, %entry, %if.end174, %if.then324, %if.else325, %if.then290, %do.body363, %if.then451, %if.else459, %if.then458, %do.body392, %if.end348, %if.then189, %if.else201, %if.then199, %if.then177, %sw.bb105, %sw.bb107, %sw.bb109, %sw.bb111, %sw.bb113, %sw.bb115, %sw.bb117, %sw.bb119, %sw.bb94, %if.then99, %if.then87, %sw.bb79, %if.end57, %land.lhs.true51, %sw.bb41, %if.then43, %sw.bb36, %if.then38, %sw.bb31, %if.then33, %sw.bb26, %if.then28, %sw.bb21, %if.then23, %sw.bb16, %if.then18, %sw.bb, %if.then1, %if.then9, %if.end15, %sw.bb64, %if.then72, %if.else74, %sw.bb77, %sw.bb123, %sw.bb131, %if.then148, %if.end149, %sw.bb158, %if.then214
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @put_condition_code(i32 %code, i32 %mode, i32 %reverse, i32 %fp, %struct._IO_FILE* nocapture %file) #1 {
entry:
  %mode.off = add i32 %mode, -57
  %0 = icmp ult i32 %mode.off, 2
  br i1 %0, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  switch i32 %code, label %sw.default.i [
    i32 105, label %sw.epilog.i
    i32 104, label %sw.epilog.i
    i32 113, label %sw.epilog.i
    i32 112, label %sw.epilog.i
    i32 114, label %sw.epilog.i
    i32 118, label %sw.epilog.i
    i32 117, label %sw.epilog.i
    i32 119, label %sw.epilog.i
    i32 107, label %sw.bb1.i
    i32 106, label %sw.bb2.i
    i32 103, label %sw.bb3.i
    i32 102, label %sw.bb4.i
    i32 115, label %sw.bb5.i
    i32 116, label %sw.bb6.i
  ]

sw.bb1.i:                                         ; preds = %if.then
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %if.then
  br label %sw.epilog.i

sw.bb3.i:                                         ; preds = %if.then
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.then
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.then
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %if.then
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then
  %code121 = phi i32 [ 105, %sw.bb6.i ], [ 104, %sw.bb5.i ], [ 119, %sw.bb4.i ], [ 114, %sw.bb3.i ], [ 117, %sw.bb2.i ], [ 118, %sw.bb1.i ], [ %code, %if.then ], [ %code, %if.then ], [ %code, %if.then ], [ %code, %if.then ], [ %code, %if.then ], [ %code, %if.then ], [ %code, %if.then ], [ %code, %if.then ]
  %second_code.0.load120 = phi i1 [ true, %sw.bb6.i ], [ true, %sw.bb5.i ], [ true, %sw.bb4.i ], [ false, %sw.bb3.i ], [ false, %sw.bb2.i ], [ false, %sw.bb1.i ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ]
  %bypass_code.0.load118 = phi i1 [ false, %sw.bb6.i ], [ false, %sw.bb5.i ], [ false, %sw.bb4.i ], [ true, %sw.bb3.i ], [ true, %sw.bb2.i ], [ true, %sw.bb1.i ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ], [ false, %if.then ]
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = and i32 %1, 16
  %not.tobool.i = icmp ne i32 %and.i, 0
  %cmp2127 = or i1 %bypass_code.0.load118, %second_code.0.load120
  %or.cond77 = and i1 %cmp2127, %not.tobool.i
  br i1 %or.cond77, label %if.then5, label %if.end

if.then5:                                         ; preds = %sw.epilog.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5554, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %sw.epilog.i
  switch i32 %code121, label %sw.default.i114 [
    i32 105, label %if.end6
    i32 104, label %sw.bb1.i108
    i32 113, label %sw.bb2.i109
    i32 112, label %sw.bb2.i109
    i32 114, label %sw.bb3.i110
    i32 118, label %sw.bb4.i111
    i32 117, label %sw.bb5.i112
    i32 119, label %sw.bb6.i113
  ]

sw.bb1.i108:                                      ; preds = %if.end
  br label %if.end6

sw.bb2.i109:                                      ; preds = %if.end, %if.end
  br label %if.end6

sw.bb3.i110:                                      ; preds = %if.end
  br label %if.end6

sw.bb4.i111:                                      ; preds = %if.end
  br label %if.end6

sw.bb5.i112:                                      ; preds = %if.end
  br label %if.end6

sw.bb6.i113:                                      ; preds = %if.end
  br label %if.end6

sw.default.i114:                                  ; preds = %if.end
  br label %if.end6

if.end6:                                          ; preds = %sw.default.i114, %sw.bb6.i113, %sw.bb5.i112, %sw.bb4.i111, %sw.bb3.i110, %sw.bb2.i109, %sw.bb1.i108, %if.end, %entry
  %code122 = phi i32 [ %code, %entry ], [ 0, %sw.default.i114 ], [ 102, %sw.bb6.i113 ], [ 110, %sw.bb5.i112 ], [ 111, %sw.bb4.i111 ], [ 103, %sw.bb3.i110 ], [ %code121, %sw.bb2.i109 ], [ 108, %sw.bb1.i108 ], [ 109, %if.end ]
  %mode.addr.0 = phi i32 [ %mode, %entry ], [ 52, %sw.default.i114 ], [ 52, %sw.bb6.i113 ], [ 52, %sw.bb5.i112 ], [ 52, %sw.bb4.i111 ], [ 52, %sw.bb3.i110 ], [ 52, %sw.bb2.i109 ], [ 52, %sw.bb1.i108 ], [ 52, %if.end ]
  %tobool = icmp eq i32 %reverse, 0
  br i1 %tobool, label %if.end9, label %if.then7

if.then7:                                         ; preds = %if.end6
  %call8 = tail call i32 @reverse_condition(i32 %code122) #5
  br label %if.end9

if.end9:                                          ; preds = %if.end6, %if.then7
  %code123 = phi i32 [ %code122, %if.end6 ], [ %call8, %if.then7 ]
  switch i32 %code123, label %sw.default [
    i32 103, label %sw.epilog
    i32 102, label %sw.bb10
    i32 105, label %sw.bb11
    i32 109, label %sw.bb18
    i32 107, label %sw.bb23
    i32 111, label %sw.bb35
    i32 104, label %sw.bb39
    i32 108, label %sw.bb52
    i32 106, label %sw.bb58
    i32 110, label %sw.bb66
    i32 112, label %sw.bb70
    i32 113, label %sw.bb73
  ]

sw.bb10:                                          ; preds = %if.end9
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end9
  switch i32 %mode.addr.0, label %if.then16 [
    i32 55, label %sw.epilog
    i32 53, label %sw.epilog
    i32 52, label %sw.epilog
  ]

if.then16:                                        ; preds = %sw.bb11
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5571, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

sw.bb18:                                          ; preds = %if.end9
  %cmp19 = icmp eq i32 %mode.addr.0, 52
  br i1 %cmp19, label %if.end21, label %if.then20

if.then20:                                        ; preds = %sw.bb18
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5578, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

if.end21:                                         ; preds = %sw.bb18
  %tobool22 = icmp ne i32 %fp, 0
  %cond = select i1 %tobool22, i8* getelementptr inbounds ([4 x i8]* @.str391, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str392, i64 0, i64 0)
  br label %sw.epilog

sw.bb23:                                          ; preds = %if.end9
  %2 = and i32 %mode.addr.0, -2
  %3 = icmp eq i32 %2, 54
  br i1 %3, label %sw.epilog, label %if.else

if.else:                                          ; preds = %sw.bb23
  %4 = icmp eq i32 %2, 52
  br i1 %4, label %sw.epilog, label %if.else32

if.else32:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5587, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

sw.bb35:                                          ; preds = %if.end9
  %cmp36 = icmp eq i32 %mode.addr.0, 52
  br i1 %cmp36, label %sw.epilog, label %if.then37

if.then37:                                        ; preds = %sw.bb35
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5591, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

sw.bb39:                                          ; preds = %if.end9
  %5 = and i32 %mode.addr.0, -2
  %6 = icmp eq i32 %5, 54
  br i1 %6, label %sw.epilog, label %if.else44

if.else44:                                        ; preds = %sw.bb39
  %7 = icmp eq i32 %5, 52
  br i1 %7, label %sw.epilog, label %if.else49

if.else49:                                        ; preds = %if.else44
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5600, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

sw.bb52:                                          ; preds = %if.end9
  %cmp53 = icmp eq i32 %mode.addr.0, 52
  br i1 %cmp53, label %if.end55, label %if.then54

if.then54:                                        ; preds = %sw.bb52
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5605, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

if.end55:                                         ; preds = %sw.bb52
  %tobool56 = icmp ne i32 %fp, 0
  %cond57 = select i1 %tobool56, i8* getelementptr inbounds ([3 x i8]* @.str398, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str399, i64 0, i64 0)
  br label %sw.epilog

sw.bb58:                                          ; preds = %if.end9
  switch i32 %mode.addr.0, label %if.then64 [
    i32 55, label %sw.epilog
    i32 53, label %sw.epilog
    i32 52, label %sw.epilog
  ]

if.then64:                                        ; preds = %sw.bb58
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5610, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

sw.bb66:                                          ; preds = %if.end9
  %cmp67 = icmp eq i32 %mode.addr.0, 52
  br i1 %cmp67, label %sw.epilog, label %if.then68

if.then68:                                        ; preds = %sw.bb66
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5615, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

sw.bb70:                                          ; preds = %if.end9
  %tobool71 = icmp ne i32 %fp, 0
  %cond72 = select i1 %tobool71, i8* getelementptr inbounds ([2 x i8]* @.str401, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str402, i64 0, i64 0)
  br label %sw.epilog

sw.bb73:                                          ; preds = %if.end9
  %tobool74 = icmp ne i32 %fp, 0
  %cond75 = select i1 %tobool74, i8* getelementptr inbounds ([3 x i8]* @.str403, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str404, i64 0, i64 0)
  br label %sw.epilog

sw.default:                                       ; preds = %if.end9
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 5625, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.put_condition_code, i64 0, i64 0)) #8
  unreachable

sw.epilog:                                        ; preds = %sw.bb66, %sw.bb58, %sw.bb58, %sw.bb58, %if.else44, %sw.bb39, %sw.bb35, %if.else, %sw.bb23, %sw.bb11, %sw.bb11, %sw.bb11, %if.end9, %sw.bb73, %sw.bb70, %if.end55, %if.end21, %sw.bb10
  %suffix.0 = phi i8* [ %cond75, %sw.bb73 ], [ %cond72, %sw.bb70 ], [ %cond57, %if.end55 ], [ %cond, %if.end21 ], [ getelementptr inbounds ([3 x i8]* @.str389, i64 0, i64 0), %sw.bb10 ], [ getelementptr inbounds ([2 x i8]* @.str388, i64 0, i64 0), %if.end9 ], [ getelementptr inbounds ([2 x i8]* @.str390, i64 0, i64 0), %sw.bb11 ], [ getelementptr inbounds ([2 x i8]* @.str390, i64 0, i64 0), %sw.bb11 ], [ getelementptr inbounds ([2 x i8]* @.str390, i64 0, i64 0), %sw.bb11 ], [ getelementptr inbounds ([2 x i8]* @.str393, i64 0, i64 0), %sw.bb23 ], [ getelementptr inbounds ([2 x i8]* @.str394, i64 0, i64 0), %if.else ], [ getelementptr inbounds ([2 x i8]* @.str395, i64 0, i64 0), %sw.bb35 ], [ getelementptr inbounds ([3 x i8]* @.str396, i64 0, i64 0), %sw.bb39 ], [ getelementptr inbounds ([3 x i8]* @.str397, i64 0, i64 0), %if.else44 ], [ getelementptr inbounds ([3 x i8]* @.str111, i64 0, i64 0), %sw.bb58 ], [ getelementptr inbounds ([3 x i8]* @.str111, i64 0, i64 0), %sw.bb58 ], [ getelementptr inbounds ([3 x i8]* @.str111, i64 0, i64 0), %sw.bb58 ], [ getelementptr inbounds ([3 x i8]* @.str400, i64 0, i64 0), %sw.bb66 ]
  %call76 = tail call i32 @fputs(i8* %suffix.0, %struct._IO_FILE* %file) #5
  ret void
}

declare void @output_operand_lossage(i8*, ...) #0

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #0

declare i32 @final_forward_branch_p(%struct.rtx_def*) #0

declare void @output_address(%struct.rtx_def*) #0

declare i64 @etarsingle(%struct.realvaluetype* byval align 8) #0

declare void @ereal_to_decimal(%struct.realvaluetype* byval align 8, i8*) #0

; Function Attrs: nounwind uwtable
define void @print_operand_address(%struct._IO_FILE* %file, %struct.rtx_def* %addr) #1 {
entry:
  %parts = alloca %struct.ix86_address, align 8
  %call = call fastcc i32 @ix86_decompose_address(%struct.rtx_def* %addr, %struct.ix86_address* %parts)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6126, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.print_operand_address, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %base1 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 0
  %0 = load %struct.rtx_def** %base1, align 8, !tbaa !80
  %index2 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 1
  %1 = load %struct.rtx_def** %index2, align 8, !tbaa !81
  %disp3 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 2
  %2 = load %struct.rtx_def** %disp3, align 8, !tbaa !78
  %scale4 = getelementptr inbounds %struct.ix86_address* %parts, i64 0, i32 3
  %3 = load i64* %scale4, align 8, !tbaa !82
  %conv = trunc i64 %3 to i32
  %tobool5 = icmp ne %struct.rtx_def* %0, null
  %tobool6 = icmp ne %struct.rtx_def* %1, null
  %or.cond = or i1 %tobool5, %tobool6
  br i1 %or.cond, label %if.else36, label %if.then7

if.then7:                                         ; preds = %if.end
  %4 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then7
  %5 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp10 = icmp eq i32 %5, 1
  br i1 %cmp10, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then9
  %call17 = tail call i32 @putc(i32 37, %struct._IO_FILE* %file) #5
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str131, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %file)
  br label %if.end20

if.end20:                                         ; preds = %if.then16, %if.then9
  %rtwint = getelementptr inbounds %struct.rtx_def* %addr, i64 0, i32 1, i64 0, i32 0
  %7 = load i64* %rtwint, align 8, !tbaa !77
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8]* @.str130, i64 0, i64 0), i64 %7) #5
  br label %if.end26

if.else:                                          ; preds = %if.then7
  %8 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool22 = icmp eq i32 %8, 0
  br i1 %tobool22, label %if.else24, label %if.then23

if.then23:                                        ; preds = %if.else
  tail call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %addr, i32 0)
  br label %if.end26

if.else24:                                        ; preds = %if.else
  tail call void @output_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %addr) #5
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.else24, %if.end20
  %bf.load27 = load i32* %4, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 54
  br i1 %cmp29, label %if.end167, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %if.end26
  %9 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %9, 33554432
  %tobool32 = icmp eq i32 %and, 0
  br i1 %tobool32, label %if.end167, label %if.then33

if.then33:                                        ; preds = %land.lhs.true31
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8]* @.str132, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %file)
  br label %if.end167

if.else36:                                        ; preds = %if.end
  %11 = load i32* @ix86_asm_dialect, align 4, !tbaa !5
  %cmp37 = icmp eq i32 %11, 0
  %tobool40 = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp37, label %if.then39, label %if.else68

if.then39:                                        ; preds = %if.else36
  br i1 %tobool40, label %if.end53, label %if.then41

if.then41:                                        ; preds = %if.then39
  %12 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool42 = icmp eq i32 %12, 0
  br i1 %tobool42, label %if.else44, label %if.then43

if.then43:                                        ; preds = %if.then41
  tail call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %2, i32 0)
  br label %if.end53

if.else44:                                        ; preds = %if.then41
  %13 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load45 = load i32* %13, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 67
  br i1 %cmp47, label %if.then49, label %if.else50

if.then49:                                        ; preds = %if.else44
  tail call void @output_asm_label(%struct.rtx_def* %2) #5
  br label %if.end53

if.else50:                                        ; preds = %if.else44
  tail call void @output_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %2) #5
  br label %if.end53

if.end53:                                         ; preds = %if.then39, %if.then43, %if.else50, %if.then49
  %call54 = tail call i32 @putc(i32 40, %struct._IO_FILE* %file) #5
  br i1 %tobool5, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end53
  tail call void @print_reg(%struct.rtx_def* %0, i32 0, %struct._IO_FILE* %file)
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end53
  br i1 %tobool6, label %if.then59, label %if.end66

if.then59:                                        ; preds = %if.end57
  %call60 = tail call i32 @putc(i32 44, %struct._IO_FILE* %file) #5
  tail call void @print_reg(%struct.rtx_def* %1, i32 0, %struct._IO_FILE* %file)
  %cmp61 = icmp eq i32 %conv, 1
  br i1 %cmp61, label %if.end66, label %if.then63

if.then63:                                        ; preds = %if.then59
  %call64 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str133, i64 0, i64 0), i32 %conv) #5
  br label %if.end66

if.end66:                                         ; preds = %if.then59, %if.then63, %if.end57
  %call67 = tail call i32 @putc(i32 41, %struct._IO_FILE* %file) #5
  br label %if.end167

if.else68:                                        ; preds = %if.else36
  br i1 %tobool40, label %if.end126, label %if.then70

if.then70:                                        ; preds = %if.else68
  %14 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load71 = load i32* %14, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 58
  br i1 %cmp73, label %land.lhs.true75, label %if.end107

land.lhs.true75:                                  ; preds = %if.then70
  %arrayidx77 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load78 = load i32* %16, align 8
  %bf.clear79 = and i32 %bf.load78, 65535
  %cmp80 = icmp eq i32 %bf.clear79, 75
  br i1 %cmp80, label %land.lhs.true82, label %if.end107

land.lhs.true82:                                  ; preds = %land.lhs.true75
  %arrayidx87 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 1
  %rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx88, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load89 = load i32* %18, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 54
  br i1 %cmp91, label %if.then93, label %if.end107

if.then93:                                        ; preds = %land.lhs.true82
  %arrayidx104 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx105, align 8, !tbaa !6
  %call106 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 58, i32 0, %struct.rtx_def* %19) #5
  br label %if.end107

if.end107:                                        ; preds = %if.then93, %land.lhs.true82, %land.lhs.true75, %if.then70
  %disp.0 = phi %struct.rtx_def* [ %call106, %if.then93 ], [ %2, %land.lhs.true82 ], [ %2, %land.lhs.true75 ], [ %2, %if.then70 ]
  %offset.0 = phi %struct.rtx_def* [ %17, %if.then93 ], [ null, %land.lhs.true82 ], [ null, %land.lhs.true75 ], [ null, %if.then70 ]
  %20 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool108 = icmp eq i32 %20, 0
  br i1 %tobool108, label %if.else110, label %if.then109

if.then109:                                       ; preds = %if.end107
  tail call fastcc void @output_pic_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %disp.0, i32 0)
  br label %if.end126

if.else110:                                       ; preds = %if.end107
  %21 = getelementptr inbounds %struct.rtx_def* %disp.0, i64 0, i32 0
  %bf.load111 = load i32* %21, align 8
  %bf.clear112 = and i32 %bf.load111, 65535
  switch i32 %bf.clear112, label %if.else122 [
    i32 67, label %if.then115
    i32 54, label %if.end126
  ]

if.then115:                                       ; preds = %if.else110
  tail call void @output_asm_label(%struct.rtx_def* %disp.0) #5
  br label %if.end126

if.else122:                                       ; preds = %if.else110
  tail call void @output_addr_const(%struct._IO_FILE* %file, %struct.rtx_def* %disp.0) #5
  br label %if.end126

if.end126:                                        ; preds = %if.else110, %if.else68, %if.then109, %if.else122, %if.then115
  %offset.1 = phi %struct.rtx_def* [ %offset.0, %if.then109 ], [ %offset.0, %if.then115 ], [ %offset.0, %if.else122 ], [ null, %if.else68 ], [ %disp.0, %if.else110 ]
  %call127 = tail call i32 @putc(i32 91, %struct._IO_FILE* %file) #5
  br i1 %tobool5, label %if.then129, label %if.else145

if.then129:                                       ; preds = %if.end126
  tail call void @print_reg(%struct.rtx_def* %0, i32 0, %struct._IO_FILE* %file)
  %tobool130 = icmp eq %struct.rtx_def* %offset.1, null
  br i1 %tobool130, label %if.end155, label %if.then131

if.then131:                                       ; preds = %if.then129
  %rtwint134 = getelementptr inbounds %struct.rtx_def* %offset.1, i64 0, i32 1, i64 0, i32 0
  %22 = load i64* %rtwint134, align 8, !tbaa !77
  %cmp135 = icmp sgt i64 %22, -1
  br i1 %cmp135, label %if.then137, label %if.end139

if.then137:                                       ; preds = %if.then131
  %call138 = tail call i32 @putc(i32 43, %struct._IO_FILE* %file) #5
  %.pre = load i64* %rtwint134, align 8, !tbaa !77
  br label %if.end139

if.end139:                                        ; preds = %if.then137, %if.then131
  %23 = phi i64 [ %.pre, %if.then137 ], [ %22, %if.then131 ]
  %call143 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8]* @.str130, i64 0, i64 0), i64 %23) #5
  br label %if.end155

if.else145:                                       ; preds = %if.end126
  %tobool146 = icmp eq %struct.rtx_def* %offset.1, null
  br i1 %tobool146, label %if.else152, label %if.then147

if.then147:                                       ; preds = %if.else145
  %rtwint150 = getelementptr inbounds %struct.rtx_def* %offset.1, i64 0, i32 1, i64 0, i32 0
  %24 = load i64* %rtwint150, align 8, !tbaa !77
  %call151 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([5 x i8]* @.str130, i64 0, i64 0), i64 %24) #5
  br label %if.end155

if.else152:                                       ; preds = %if.else145
  %call153 = tail call i32 @putc(i32 48, %struct._IO_FILE* %file) #5
  br label %if.end155

if.end155:                                        ; preds = %if.then129, %if.then147, %if.else152, %if.end139
  br i1 %tobool6, label %if.then157, label %if.end164

if.then157:                                       ; preds = %if.end155
  %call158 = tail call i32 @putc(i32 43, %struct._IO_FILE* %file) #5
  tail call void @print_reg(%struct.rtx_def* %1, i32 0, %struct._IO_FILE* %file)
  %cmp159 = icmp eq i32 %conv, 1
  br i1 %cmp159, label %if.end164, label %if.then161

if.then161:                                       ; preds = %if.then157
  %call162 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str134, i64 0, i64 0), i32 %conv) #5
  br label %if.end164

if.end164:                                        ; preds = %if.then157, %if.then161, %if.end155
  %call165 = tail call i32 @putc(i32 93, %struct._IO_FILE* %file) #5
  br label %if.end167

if.end167:                                        ; preds = %land.lhs.true31, %if.end26, %if.end66, %if.end164, %if.then33
  ret void
}

declare void @output_asm_label(%struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define void @split_di(%struct.rtx_def** nocapture readonly %operands, i32 %num, %struct.rtx_def** nocapture %lo_half, %struct.rtx_def** nocapture %hi_half) #1 {
entry:
  %tobool44 = icmp eq i32 %num, 0
  br i1 %tobool44, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %0 = sext i32 %num to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %indvars.iv = phi i64 [ %0, %while.body.lr.ph ], [ %indvars.iv.next, %while.cond.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 %indvars.iv.next
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %call = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %1, i32 4, i64 0, i32 1, i32 1) #5
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %lo_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx2, align 8, !tbaa !6
  %call3 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %1, i32 4, i64 4, i32 1, i32 1) #5
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %hi_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx5, align 8, !tbaa !6
  br label %while.cond.backedge

if.else:                                          ; preds = %while.body
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear7 = and i32 %bf.lshr, 255
  %cmp8 = icmp eq i32 %bf.clear7, 0
  %.bf.clear7 = select i1 %cmp8, i32 5, i32 %bf.clear7
  %call12 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 4, %struct.rtx_def* %1, i32 %.bf.clear7, i32 0) #5
  %arrayidx14 = getelementptr inbounds %struct.rtx_def** %lo_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call12, %struct.rtx_def** %arrayidx14, align 8, !tbaa !6
  %bf.load15 = load i32* %2, align 8
  %bf.lshr16 = lshr i32 %bf.load15, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  %cmp18 = icmp eq i32 %bf.clear17, 0
  %cond25 = select i1 %cmp18, i32 5, i32 %bf.clear17
  %call26 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 4, %struct.rtx_def* %1, i32 %cond25, i32 4) #5
  %arrayidx28 = getelementptr inbounds %struct.rtx_def** %hi_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call26, %struct.rtx_def** %arrayidx28, align 8, !tbaa !6
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else, %if.then
  %3 = trunc i64 %indvars.iv.next to i32
  %tobool = icmp eq i32 %3, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.cond.backedge, %entry
  ret void
}

declare %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) #0

; Function Attrs: nounwind uwtable
define void @split_ti(%struct.rtx_def** nocapture readonly %operands, i32 %num, %struct.rtx_def** nocapture %lo_half, %struct.rtx_def** nocapture %hi_half) #1 {
entry:
  %tobool23 = icmp eq i32 %num, 0
  br i1 %tobool23, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %0 = sext i32 %num to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %indvars.iv = phi i64 [ %0, %while.body.lr.ph ], [ %indvars.iv.next, %while.cond.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 %indvars.iv.next
  %1 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %call = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %1, i32 5, i64 0, i32 1, i32 1) #5
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %lo_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx2, align 8, !tbaa !6
  %call3 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %1, i32 5, i64 8, i32 1, i32 1) #5
  %arrayidx5 = getelementptr inbounds %struct.rtx_def** %hi_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call3, %struct.rtx_def** %arrayidx5, align 8, !tbaa !6
  br label %while.cond.backedge

if.else:                                          ; preds = %while.body
  %call6 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 5, %struct.rtx_def* %1, i32 6, i32 0) #5
  %arrayidx8 = getelementptr inbounds %struct.rtx_def** %lo_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call6, %struct.rtx_def** %arrayidx8, align 8, !tbaa !6
  %call9 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 5, %struct.rtx_def* %1, i32 6, i32 8) #5
  %arrayidx11 = getelementptr inbounds %struct.rtx_def** %hi_half, i64 %indvars.iv.next
  store %struct.rtx_def* %call9, %struct.rtx_def** %arrayidx11, align 8, !tbaa !6
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else, %if.then
  %3 = trunc i64 %indvars.iv.next to i32
  %tobool = icmp eq i32 %3, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.cond.backedge, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @output_387_binary_op(%struct.rtx_def* %insn, %struct.rtx_def** nocapture %operands) #1 {
entry:
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.rhs, label %land.end20

land.rhs:                                         ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !1
  %.off407 = add i32 %2, -21
  %3 = icmp ult i32 %.off407, 8
  br i1 %3, label %land.end20, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %.off408 = add i32 %2, -45
  %4 = icmp ult i32 %.off408, 8
  br label %land.end20

land.end20:                                       ; preds = %lor.rhs, %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ true, %land.rhs ], [ %4, %lor.rhs ]
  %arrayidx21 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %6 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load22 = load i32* %7, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 61
  br i1 %cmp24, label %land.rhs25, label %land.end52

land.rhs25:                                       ; preds = %land.end20
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtuint29 = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %8 = load i32* %rtuint29, align 4, !tbaa !1
  %.off405 = add i32 %8, -21
  %9 = icmp ult i32 %.off405, 8
  br i1 %9, label %land.end52, label %lor.rhs37

lor.rhs37:                                        ; preds = %land.rhs25
  %.off406 = add i32 %8, -45
  %10 = icmp ult i32 %.off406, 8
  br label %land.end52

land.end52:                                       ; preds = %lor.rhs37, %land.rhs25, %land.end20
  %11 = phi i1 [ false, %land.end20 ], [ true, %land.rhs25 ], [ %10, %lor.rhs37 ]
  %or387 = or i1 %5, %11
  %arrayidx54 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %12 = load %struct.rtx_def** %arrayidx54, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load55 = load i32* %13, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 61
  br i1 %cmp57, label %land.rhs58, label %land.end85

land.rhs58:                                       ; preds = %land.end52
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtuint62 = bitcast %union.rtunion_def* %arrayidx61 to i32*
  %14 = load i32* %rtuint62, align 4, !tbaa !1
  %.off = add i32 %14, -21
  %15 = icmp ult i32 %.off, 8
  br i1 %15, label %land.end85, label %lor.rhs70

lor.rhs70:                                        ; preds = %land.rhs58
  %.off404 = add i32 %14, -45
  %16 = icmp ult i32 %.off404, 8
  br label %land.end85

land.end85:                                       ; preds = %lor.rhs70, %land.rhs58, %land.end52
  %17 = phi i1 [ false, %land.end52 ], [ true, %land.rhs58 ], [ %16, %lor.rhs70 ]
  %or87388 = or i1 %or387, %17
  %arrayidx88 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %18 = load %struct.rtx_def** %arrayidx88, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load89 = load i32* %19, align 8
  %bf.clear90 = and i32 %bf.load89, 65535
  switch i32 %bf.clear90, label %sw.default [
    i32 75, label %sw.bb
    i32 76, label %sw.bb103
    i32 78, label %sw.bb122
    i32 79, label %sw.bb141
  ]

sw.bb:                                            ; preds = %land.end85
  %bf.lshr = lshr i32 %bf.load22, 16
  %bf.clear93 = and i32 %bf.lshr, 255
  %idxprom397 = zext i32 %bf.clear93 to i64
  %arrayidx94 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom397
  %20 = load i32* %arrayidx94, align 4, !tbaa !5
  %cmp95 = icmp eq i32 %20, 1
  br i1 %cmp95, label %sw.epilog, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %bf.lshr98 = lshr i32 %bf.load55, 16
  %bf.clear99 = and i32 %bf.lshr98, 255
  %idxprom100398 = zext i32 %bf.clear99 to i64
  %arrayidx101 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom100398
  %21 = load i32* %arrayidx101, align 4, !tbaa !5
  %cmp102 = icmp eq i32 %21, 1
  %. = select i1 %cmp102, i8* getelementptr inbounds ([6 x i8]* @.str135, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str136, i64 0, i64 0)
  br label %sw.epilog

sw.bb103:                                         ; preds = %land.end85
  %bf.lshr106 = lshr i32 %bf.load22, 16
  %bf.clear107 = and i32 %bf.lshr106, 255
  %idxprom108395 = zext i32 %bf.clear107 to i64
  %arrayidx109 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom108395
  %22 = load i32* %arrayidx109, align 4, !tbaa !5
  %cmp110 = icmp eq i32 %22, 1
  br i1 %cmp110, label %sw.epilog, label %lor.lhs.false111

lor.lhs.false111:                                 ; preds = %sw.bb103
  %bf.lshr114 = lshr i32 %bf.load55, 16
  %bf.clear115 = and i32 %bf.lshr114, 255
  %idxprom116396 = zext i32 %bf.clear115 to i64
  %arrayidx117 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom116396
  %23 = load i32* %arrayidx117, align 4, !tbaa !5
  %cmp118 = icmp eq i32 %23, 1
  %.401 = select i1 %cmp118, i8* getelementptr inbounds ([6 x i8]* @.str138, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str139, i64 0, i64 0)
  br label %sw.epilog

sw.bb122:                                         ; preds = %land.end85
  %bf.lshr125 = lshr i32 %bf.load22, 16
  %bf.clear126 = and i32 %bf.lshr125, 255
  %idxprom127393 = zext i32 %bf.clear126 to i64
  %arrayidx128 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom127393
  %24 = load i32* %arrayidx128, align 4, !tbaa !5
  %cmp129 = icmp eq i32 %24, 1
  br i1 %cmp129, label %sw.epilog, label %lor.lhs.false130

lor.lhs.false130:                                 ; preds = %sw.bb122
  %bf.lshr133 = lshr i32 %bf.load55, 16
  %bf.clear134 = and i32 %bf.lshr133, 255
  %idxprom135394 = zext i32 %bf.clear134 to i64
  %arrayidx136 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom135394
  %25 = load i32* %arrayidx136, align 4, !tbaa !5
  %cmp137 = icmp eq i32 %25, 1
  %.402 = select i1 %cmp137, i8* getelementptr inbounds ([6 x i8]* @.str141, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str142, i64 0, i64 0)
  br label %sw.epilog

sw.bb141:                                         ; preds = %land.end85
  %bf.lshr144 = lshr i32 %bf.load22, 16
  %bf.clear145 = and i32 %bf.lshr144, 255
  %idxprom146389 = zext i32 %bf.clear145 to i64
  %arrayidx147 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom146389
  %26 = load i32* %arrayidx147, align 4, !tbaa !5
  %cmp148 = icmp eq i32 %26, 1
  br i1 %cmp148, label %sw.epilog, label %lor.lhs.false149

lor.lhs.false149:                                 ; preds = %sw.bb141
  %bf.lshr152 = lshr i32 %bf.load55, 16
  %bf.clear153 = and i32 %bf.lshr152, 255
  %idxprom154390 = zext i32 %bf.clear153 to i64
  %arrayidx155 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom154390
  %27 = load i32* %arrayidx155, align 4, !tbaa !5
  %cmp156 = icmp eq i32 %27, 1
  %.403 = select i1 %cmp156, i8* getelementptr inbounds ([6 x i8]* @.str144, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str145, i64 0, i64 0)
  br label %sw.epilog

sw.default:                                       ; preds = %land.end85
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6383, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.output_387_binary_op, i64 0, i64 0)) #8
  unreachable

sw.epilog:                                        ; preds = %lor.lhs.false149, %lor.lhs.false130, %lor.lhs.false111, %lor.lhs.false, %sw.bb141, %sw.bb122, %sw.bb103, %sw.bb
  %ssep.0 = phi i8* [ getelementptr inbounds ([4 x i8]* @.str137, i64 0, i64 0), %sw.bb ], [ getelementptr inbounds ([4 x i8]* @.str140, i64 0, i64 0), %sw.bb103 ], [ getelementptr inbounds ([4 x i8]* @.str143, i64 0, i64 0), %sw.bb122 ], [ getelementptr inbounds ([4 x i8]* @.str146, i64 0, i64 0), %sw.bb141 ], [ getelementptr inbounds ([4 x i8]* @.str137, i64 0, i64 0), %lor.lhs.false ], [ getelementptr inbounds ([4 x i8]* @.str140, i64 0, i64 0), %lor.lhs.false111 ], [ getelementptr inbounds ([4 x i8]* @.str143, i64 0, i64 0), %lor.lhs.false130 ], [ getelementptr inbounds ([4 x i8]* @.str146, i64 0, i64 0), %lor.lhs.false149 ]
  %p.4 = phi i8* [ getelementptr inbounds ([6 x i8]* @.str135, i64 0, i64 0), %sw.bb ], [ getelementptr inbounds ([6 x i8]* @.str138, i64 0, i64 0), %sw.bb103 ], [ getelementptr inbounds ([6 x i8]* @.str141, i64 0, i64 0), %sw.bb122 ], [ getelementptr inbounds ([6 x i8]* @.str144, i64 0, i64 0), %sw.bb141 ], [ %., %lor.lhs.false ], [ %.401, %lor.lhs.false111 ], [ %.402, %lor.lhs.false130 ], [ %.403, %lor.lhs.false149 ]
  br i1 %or87388, label %if.then160, label %if.end171

if.then160:                                       ; preds = %sw.epilog
  %28 = bitcast i8* %ssep.0 to i32*
  %29 = load i32* %28, align 1
  store i32 %29, i32* bitcast ([30 x i8]* @output_387_binary_op.buf to i32*), align 16
  %30 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load162 = load i32* %31, align 8
  %bf.clear164 = and i32 %bf.load162, 16711680
  %cmp165 = icmp eq i32 %bf.clear164, 983040
  %strlen391 = tail call i64 @strlen(i8* getelementptr inbounds ([30 x i8]* @output_387_binary_op.buf, i64 0, i64 0))
  %endptr392 = getelementptr [30 x i8]* @output_387_binary_op.buf, i64 0, i64 %strlen391
  br i1 %cmp165, label %if.then166, label %if.else168

if.then166:                                       ; preds = %if.then160
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %endptr392, i8* getelementptr inbounds ([19 x i8]* @.str147, i64 0, i64 0), i64 19, i32 1, i1 false)
  br label %return

if.else168:                                       ; preds = %if.then160
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %endptr392, i8* getelementptr inbounds ([19 x i8]* @.str148, i64 0, i64 0), i64 19, i32 1, i1 false)
  br label %return

if.end171:                                        ; preds = %sw.epilog
  %call172 = tail call i8* @strcpy(i8* getelementptr inbounds ([30 x i8]* @output_387_binary_op.buf, i64 0, i64 0), i8* %p.4) #5
  %32 = load %struct.rtx_def** %arrayidx88, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load174 = load i32* %33, align 8
  %bf.clear175 = and i32 %bf.load174, 65535
  switch i32 %bf.clear175, label %sw.default331 [
    i32 78, label %sw.bb176
    i32 75, label %sw.bb176
    i32 76, label %sw.bb237
    i32 79, label %sw.bb237
  ]

sw.bb176:                                         ; preds = %if.end171, %if.end171
  %34 = load %struct.rtx_def** %arrayidx54, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load178 = load i32* %35, align 8
  %bf.clear179 = and i32 %bf.load178, 65535
  %cmp180 = icmp eq i32 %bf.clear179, 61
  br i1 %cmp180, label %land.lhs.true181, label %if.end196

land.lhs.true181:                                 ; preds = %sw.bb176
  %36 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx184 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 0
  %rtuint185 = bitcast %union.rtunion_def* %arrayidx184 to i32*
  %37 = load i32* %rtuint185, align 4, !tbaa !1
  %arrayidx188 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 1, i64 0
  %rtuint189 = bitcast %union.rtunion_def* %arrayidx188 to i32*
  %38 = load i32* %rtuint189, align 4, !tbaa !1
  %cmp190 = icmp eq i32 %37, %38
  br i1 %cmp190, label %if.then191, label %if.end196

if.then191:                                       ; preds = %land.lhs.true181
  %39 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  store %struct.rtx_def* %39, %struct.rtx_def** %arrayidx54, align 8, !tbaa !6
  store %struct.rtx_def* %34, %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load198.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end196

if.end196:                                        ; preds = %if.then191, %land.lhs.true181, %sw.bb176
  %bf.load198 = phi i32 [ %bf.load198.pre, %if.then191 ], [ %bf.load178, %land.lhs.true181 ], [ %bf.load178, %sw.bb176 ]
  %40 = phi %struct.rtx_def* [ %39, %if.then191 ], [ %34, %land.lhs.true181 ], [ %34, %sw.bb176 ]
  %bf.clear199 = and i32 %bf.load198, 65535
  %cmp200 = icmp eq i32 %bf.clear199, 66
  br i1 %cmp200, label %sw.epilog332, label %if.end202

if.end202:                                        ; preds = %if.end196
  %arrayidx205 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 0
  %rtuint206 = bitcast %union.rtunion_def* %arrayidx205 to i32*
  %41 = load i32* %rtuint206, align 4, !tbaa !1
  %call207 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %41) #5
  %tobool208 = icmp eq %struct.rtx_def* %call207, null
  %42 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %43 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load211 = load i32* %43, align 8
  %bf.clear212 = and i32 %bf.load211, 65535
  %cmp213 = icmp eq i32 %bf.clear212, 61
  br i1 %tobool208, label %if.end223, label %if.then209

if.then209:                                       ; preds = %if.end202
  br i1 %cmp213, label %land.lhs.true214, label %if.else221

land.lhs.true214:                                 ; preds = %if.then209
  %arrayidx217 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 1, i64 0
  %rtuint218 = bitcast %union.rtunion_def* %arrayidx217 to i32*
  %44 = load i32* %rtuint218, align 4, !tbaa !1
  %cmp219 = icmp eq i32 %44, 8
  br i1 %cmp219, label %sw.epilog332, label %if.else221

if.else221:                                       ; preds = %land.lhs.true214, %if.then209
  br label %sw.epilog332

if.end223:                                        ; preds = %if.end202
  br i1 %cmp213, label %land.lhs.true228, label %if.else235

land.lhs.true228:                                 ; preds = %if.end223
  %arrayidx231 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 1, i64 0
  %rtuint232 = bitcast %union.rtunion_def* %arrayidx231 to i32*
  %45 = load i32* %rtuint232, align 4, !tbaa !1
  %cmp233 = icmp eq i32 %45, 8
  br i1 %cmp233, label %sw.epilog332, label %if.else235

if.else235:                                       ; preds = %land.lhs.true228, %if.end223
  br label %sw.epilog332

sw.bb237:                                         ; preds = %if.end171, %if.end171
  %46 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %47 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 0
  %bf.load239 = load i32* %47, align 8
  %bf.clear240 = and i32 %bf.load239, 65535
  %cmp241 = icmp eq i32 %bf.clear240, 66
  br i1 %cmp241, label %sw.epilog332, label %if.end243

if.end243:                                        ; preds = %sw.bb237
  %48 = load %struct.rtx_def** %arrayidx54, align 8, !tbaa !6
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load245 = load i32* %49, align 8
  %bf.clear246 = and i32 %bf.load245, 65535
  %cmp247 = icmp eq i32 %bf.clear246, 66
  br i1 %cmp247, label %sw.epilog332, label %if.end249

if.end249:                                        ; preds = %if.end243
  %arrayidx252 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 1, i64 0
  %rtuint253 = bitcast %union.rtunion_def* %arrayidx252 to i32*
  %50 = load i32* %rtuint253, align 4, !tbaa !1
  %call254 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %50) #5
  %tobool255 = icmp eq %struct.rtx_def* %call254, null
  br i1 %tobool255, label %if.end270, label %if.then256

if.then256:                                       ; preds = %if.end249
  %51 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %52 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 0
  %bf.load258 = load i32* %52, align 8
  %bf.clear259 = and i32 %bf.load258, 65535
  %cmp260 = icmp eq i32 %bf.clear259, 61
  br i1 %cmp260, label %land.lhs.true261, label %if.else268

land.lhs.true261:                                 ; preds = %if.then256
  %arrayidx264 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 0
  %rtuint265 = bitcast %union.rtunion_def* %arrayidx264 to i32*
  %53 = load i32* %rtuint265, align 4, !tbaa !1
  %cmp266 = icmp eq i32 %53, 8
  br i1 %cmp266, label %sw.epilog332, label %if.else268

if.else268:                                       ; preds = %land.lhs.true261, %if.then256
  br label %sw.epilog332

if.end270:                                        ; preds = %if.end249
  %54 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %arrayidx273 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1, i64 0
  %rtuint274 = bitcast %union.rtunion_def* %arrayidx273 to i32*
  %55 = load i32* %rtuint274, align 4, !tbaa !1
  %call275 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %55) #5
  %tobool276 = icmp eq %struct.rtx_def* %call275, null
  %56 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %57 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 0
  %bf.load279 = load i32* %57, align 8
  %bf.clear280 = and i32 %bf.load279, 65535
  %cmp281 = icmp eq i32 %bf.clear280, 61
  br i1 %tobool276, label %if.end291, label %if.then277

if.then277:                                       ; preds = %if.end270
  br i1 %cmp281, label %land.lhs.true282, label %if.else289

land.lhs.true282:                                 ; preds = %if.then277
  %arrayidx285 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 0
  %rtuint286 = bitcast %union.rtunion_def* %arrayidx285 to i32*
  %58 = load i32* %rtuint286, align 4, !tbaa !1
  %cmp287 = icmp eq i32 %58, 8
  br i1 %cmp287, label %sw.epilog332, label %if.else289

if.else289:                                       ; preds = %land.lhs.true282, %if.then277
  br label %sw.epilog332

if.end291:                                        ; preds = %if.end270
  br i1 %cmp281, label %land.lhs.true296, label %if.else316

land.lhs.true296:                                 ; preds = %if.end291
  %arrayidx299 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 0
  %rtuint300 = bitcast %union.rtunion_def* %arrayidx299 to i32*
  %59 = load i32* %rtuint300, align 4, !tbaa !1
  %cmp301 = icmp eq i32 %59, 8
  br i1 %cmp301, label %if.then302, label %if.else316

if.then302:                                       ; preds = %land.lhs.true296
  %60 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %61 = getelementptr inbounds %struct.rtx_def* %60, i64 0, i32 0
  %bf.load304 = load i32* %61, align 8
  %bf.clear305 = and i32 %bf.load304, 65535
  %cmp306 = icmp eq i32 %bf.clear305, 61
  br i1 %cmp306, label %land.lhs.true307, label %if.else314

land.lhs.true307:                                 ; preds = %if.then302
  %arrayidx310 = getelementptr inbounds %struct.rtx_def* %60, i64 0, i32 1, i64 0
  %rtuint311 = bitcast %union.rtunion_def* %arrayidx310 to i32*
  %62 = load i32* %rtuint311, align 4, !tbaa !1
  %cmp312 = icmp eq i32 %62, 8
  br i1 %cmp312, label %sw.epilog332, label %if.else314

if.else314:                                       ; preds = %land.lhs.true307, %if.then302
  br label %sw.epilog332

if.else316:                                       ; preds = %land.lhs.true296, %if.end291
  %63 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %64 = getelementptr inbounds %struct.rtx_def* %63, i64 0, i32 0
  %bf.load318 = load i32* %64, align 8
  %bf.clear319 = and i32 %bf.load318, 65535
  %cmp320 = icmp eq i32 %bf.clear319, 61
  br i1 %cmp320, label %land.lhs.true321, label %if.else328

land.lhs.true321:                                 ; preds = %if.else316
  %arrayidx324 = getelementptr inbounds %struct.rtx_def* %63, i64 0, i32 1, i64 0
  %rtuint325 = bitcast %union.rtunion_def* %arrayidx324 to i32*
  %65 = load i32* %rtuint325, align 4, !tbaa !1
  %cmp326 = icmp eq i32 %65, 8
  br i1 %cmp326, label %sw.epilog332, label %if.else328

if.else328:                                       ; preds = %land.lhs.true321, %if.else316
  br label %sw.epilog332

sw.default331:                                    ; preds = %if.end171
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6518, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.output_387_binary_op, i64 0, i64 0)) #8
  unreachable

sw.epilog332:                                     ; preds = %land.lhs.true321, %land.lhs.true307, %land.lhs.true282, %land.lhs.true261, %if.end243, %sw.bb237, %land.lhs.true228, %land.lhs.true214, %if.end196, %if.else328, %if.else314, %if.else289, %if.else268, %if.else235, %if.else221
  %p.5 = phi i8* [ getelementptr inbounds ([21 x i8]* @.str156, i64 0, i64 0), %if.else268 ], [ getelementptr inbounds ([21 x i8]* @.str158, i64 0, i64 0), %if.else289 ], [ getelementptr inbounds ([20 x i8]* @.str159, i64 0, i64 0), %if.else314 ], [ getelementptr inbounds ([19 x i8]* @.str161, i64 0, i64 0), %if.else328 ], [ getelementptr inbounds ([18 x i8]* @.str151, i64 0, i64 0), %if.else221 ], [ getelementptr inbounds ([17 x i8]* @.str153, i64 0, i64 0), %if.else235 ], [ getelementptr inbounds ([7 x i8]* @.str149, i64 0, i64 0), %if.end196 ], [ getelementptr inbounds ([18 x i8]* @.str150, i64 0, i64 0), %land.lhs.true214 ], [ getelementptr inbounds ([19 x i8]* @.str152, i64 0, i64 0), %land.lhs.true228 ], [ getelementptr inbounds ([8 x i8]* @.str154, i64 0, i64 0), %sw.bb237 ], [ getelementptr inbounds ([7 x i8]* @.str149, i64 0, i64 0), %if.end243 ], [ getelementptr inbounds ([21 x i8]* @.str155, i64 0, i64 0), %land.lhs.true261 ], [ getelementptr inbounds ([21 x i8]* @.str157, i64 0, i64 0), %land.lhs.true282 ], [ getelementptr inbounds ([19 x i8]* @.str152, i64 0, i64 0), %land.lhs.true307 ], [ getelementptr inbounds ([19 x i8]* @.str160, i64 0, i64 0), %land.lhs.true321 ]
  %call333 = tail call i8* @strcat(i8* getelementptr inbounds ([30 x i8]* @output_387_binary_op.buf, i64 0, i64 0), i8* %p.5) #5
  br label %return

return:                                           ; preds = %if.then166, %if.else168, %sw.epilog332
  ret i8* getelementptr inbounds ([30 x i8]* @output_387_binary_op.buf, i64 0, i64 0)
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8* nocapture readonly) #4

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8* nocapture readonly) #4

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #0

; Function Attrs: nounwind uwtable
define void @emit_i387_cw_initialization(%struct.rtx_def* %normal, %struct.rtx_def* %round_down) #1 {
entry:
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 3) #5
  %call1 = tail call %struct.rtx_def* @gen_x86_fnstcw_1(%struct.rtx_def* %normal) #5
  %call2 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1) #5
  %call3 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call, %struct.rtx_def* %normal) #5
  %0 = load i32* @ix86_cpu, align 4, !tbaa !5
  %tobool = icmp eq i32 %0, 3
  %1 = load i32* @optimize_size, align 4
  %tobool4 = icmp ne i32 %1, 0
  %or.cond = or i1 %tobool, %tobool4
  br i1 %or.cond, label %if.else, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %entry
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and6 = and i32 %2, 33554432
  %tobool7 = icmp eq i32 %and6, 0
  br i1 %tobool7, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true5
  %call8 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 12) #5
  %call9 = tail call %struct.rtx_def* @gen_movsi_insv_1(%struct.rtx_def* %call, %struct.rtx_def* %call8) #5
  %call10 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call9) #5
  br label %if.end

if.else:                                          ; preds = %land.lhs.true5, %entry
  %call11 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3072) #5
  %call12 = tail call %struct.rtx_def* @gen_iorhi3(%struct.rtx_def* %call, %struct.rtx_def* %call, %struct.rtx_def* %call11) #5
  %call13 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call14 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %round_down, %struct.rtx_def* %call) #5
  ret void
}

declare %struct.rtx_def* @gen_x86_fnstcw_1(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_movsi_insv_1(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_iorhi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define i8* @output_fix_trunc(%struct.rtx_def* %insn, %struct.rtx_def** %operands) #1 {
entry:
  %call = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 8) #5
  %cmp = icmp ne %struct.rtx_def* %call, null
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp1 = icmp eq i32 %bf.clear, 327680
  %tobool = xor i1 %cmp1, true
  %or.cond = or i1 %cmp, %tobool
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @output_asm_insn(i8* getelementptr inbounds ([8 x i8]* @.str162, i64 0, i64 0), %struct.rtx_def** %operands) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %arrayidx4 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %2 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load5 = load i32* %3, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 61
  br i1 %cmp7, label %land.lhs.true9, label %if.then14

land.lhs.true9:                                   ; preds = %if.end
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !1
  %cmp12 = icmp eq i32 %4, 8
  br i1 %cmp12, label %if.end15, label %if.then14

if.then14:                                        ; preds = %land.lhs.true9, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6563, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.output_fix_trunc, i64 0, i64 0)) #8
  unreachable

if.end15:                                         ; preds = %land.lhs.true9
  %5 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load17 = load i32* %6, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 66
  br i1 %cmp19, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.end15
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6566, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.output_fix_trunc, i64 0, i64 0)) #8
  unreachable

if.end22:                                         ; preds = %if.end15
  tail call void @output_asm_insn(i8* getelementptr inbounds ([9 x i8]* @.str163, i64 0, i64 0), %struct.rtx_def** %operands) #5
  %or.cond27 = or i1 %cmp, %cmp1
  br i1 %or.cond27, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end22
  tail call void @output_asm_insn(i8* getelementptr inbounds ([12 x i8]* @.str164, i64 0, i64 0), %struct.rtx_def** %operands) #5
  br label %if.end26

if.else:                                          ; preds = %if.end22
  tail call void @output_asm_insn(i8* getelementptr inbounds ([11 x i8]* @.str165, i64 0, i64 0), %struct.rtx_def** %operands) #5
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  tail call void @output_asm_insn(i8* getelementptr inbounds ([9 x i8]* @.str166, i64 0, i64 0), %struct.rtx_def** %operands) #5
  ret i8* getelementptr inbounds ([1 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind uwtable
define i8* @output_fp_compare(%struct.rtx_def* %insn, %struct.rtx_def** %operands, i32 %eflags_p, i32 %unordered_p) #1 {
entry:
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.rhs, label %land.end22

land.rhs:                                         ; preds = %entry
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !1
  %.off197 = add i32 %3, -21
  %4 = icmp ult i32 %.off197, 8
  br i1 %4, label %land.end22, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %.off198 = add i32 %3, -45
  %5 = icmp ult i32 %.off198, 8
  br label %land.end22

land.end22:                                       ; preds = %lor.rhs, %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ true, %land.rhs ], [ %5, %lor.rhs ]
  %7 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load24 = load i32* %7, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 61
  br i1 %cmp26, label %land.rhs27, label %land.end54

land.rhs27:                                       ; preds = %land.end22
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtuint31 = bitcast %union.rtunion_def* %arrayidx30 to i32*
  %8 = load i32* %rtuint31, align 4, !tbaa !1
  %.off = add i32 %8, -21
  %9 = icmp ult i32 %.off, 8
  br i1 %9, label %land.end54, label %lor.rhs39

lor.rhs39:                                        ; preds = %land.rhs27
  %.off196 = add i32 %8, -45
  %10 = icmp ult i32 %.off196, 8
  br label %land.end54

land.end54:                                       ; preds = %lor.rhs39, %land.rhs27, %land.end22
  %11 = phi i1 [ false, %land.end22 ], [ true, %land.rhs27 ], [ %10, %lor.rhs39 ]
  %or188 = or i1 %6, %11
  %cmp56 = icmp eq i32 %eflags_p, 2
  br i1 %cmp56, label %if.then, label %if.end

if.then:                                          ; preds = %land.end54
  %arrayidx57 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %12 = load %struct.rtx_def** %arrayidx57, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %land.end54
  %cmp_op1.0 = phi %struct.rtx_def* [ %12, %if.then ], [ %1, %land.end54 ]
  %cmp_op0.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %0, %land.end54 ]
  br i1 %or188, label %if.then58, label %if.end70

if.then58:                                        ; preds = %if.end
  %bf.clear61 = and i32 %bf.load, 16711680
  %cmp62 = icmp eq i32 %bf.clear61, 983040
  %tobool64 = icmp ne i32 %unordered_p, 0
  br i1 %cmp62, label %if.then63, label %if.else66

if.then63:                                        ; preds = %if.then58
  %. = select i1 %tobool64, i8* getelementptr inbounds ([24 x i8]* @.str167, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8]* @.str168, i64 0, i64 0)
  br label %return

if.else66:                                        ; preds = %if.then58
  %.192 = select i1 %tobool64, i8* getelementptr inbounds ([24 x i8]* @.str169, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8]* @.str170, i64 0, i64 0)
  br label %return

if.end70:                                         ; preds = %if.end
  %13 = getelementptr inbounds %struct.rtx_def* %cmp_op0.0, i64 0, i32 0
  %bf.load71 = load i32* %13, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 61
  br i1 %cmp73, label %land.lhs.true74, label %if.then79

land.lhs.true74:                                  ; preds = %if.end70
  %arrayidx76 = getelementptr inbounds %struct.rtx_def* %cmp_op0.0, i64 0, i32 1, i64 0
  %rtuint77 = bitcast %union.rtunion_def* %arrayidx76 to i32*
  %14 = load i32* %rtuint77, align 4, !tbaa !1
  %cmp78 = icmp eq i32 %14, 8
  br i1 %cmp78, label %if.end80, label %if.then79

if.then79:                                        ; preds = %land.lhs.true74, %if.end70
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6613, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.output_fp_compare, i64 0, i64 0)) #8
  unreachable

if.end80:                                         ; preds = %land.lhs.true74
  %call = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 8) #5
  %cmp81 = icmp ne %struct.rtx_def* %call, null
  %conv = zext i1 %cmp81 to i32
  %15 = getelementptr inbounds %struct.rtx_def* %cmp_op1.0, i64 0, i32 0
  %bf.load82 = load i32* %15, align 8
  %bf.clear83 = and i32 %bf.load82, 65535
  %cmp84 = icmp eq i32 %bf.clear83, 61
  br i1 %cmp84, label %land.lhs.true86, label %if.else131

land.lhs.true86:                                  ; preds = %if.end80
  %arrayidx88 = getelementptr inbounds %struct.rtx_def* %cmp_op1.0, i64 0, i32 1, i64 0
  %rtuint89 = bitcast %union.rtunion_def* %arrayidx88 to i32*
  %16 = load i32* %rtuint89, align 4, !tbaa !1
  %cmp90 = icmp ugt i32 %16, 7
  %cmp96 = icmp ult i32 %16, 16
  %or.cond = and i1 %cmp96, %cmp81
  %or.cond193 = and i1 %cmp90, %or.cond
  br i1 %or.cond193, label %land.lhs.true100, label %if.else131

land.lhs.true100:                                 ; preds = %land.lhs.true86
  %call104 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %16) #5
  %tobool105 = icmp eq %struct.rtx_def* %call104, null
  br i1 %tobool105, label %if.else131, label %land.lhs.true106

land.lhs.true106:                                 ; preds = %land.lhs.true100
  %17 = load i32* %rtuint89, align 4, !tbaa !1
  %cmp110 = icmp eq i32 %17, 8
  br i1 %cmp110, label %if.else131, label %if.then112

if.then112:                                       ; preds = %land.lhs.true106
  %cmp113 = icmp eq i32 %eflags_p, 1
  br i1 %cmp113, label %if.then115, label %if.else120

if.then115:                                       ; preds = %if.then112
  %tobool116 = icmp eq i32 %unordered_p, 0
  br i1 %tobool116, label %if.else118, label %if.then117

if.then117:                                       ; preds = %if.then115
  tail call void @output_asm_insn(i8* getelementptr inbounds ([26 x i8]* @.str171, i64 0, i64 0), %struct.rtx_def** %operands) #5
  br label %return

if.else118:                                       ; preds = %if.then115
  tail call void @output_asm_insn(i8* getelementptr inbounds ([25 x i8]* @.str172, i64 0, i64 0), %struct.rtx_def** %operands) #5
  br label %return

if.else120:                                       ; preds = %if.then112
  %tobool124 = icmp ne i32 %unordered_p, 0
  br i1 %cmp56, label %if.then123, label %if.else127

if.then123:                                       ; preds = %if.else120
  %.194 = select i1 %tobool124, i8* getelementptr inbounds ([19 x i8]* @.str174, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8]* @.str175, i64 0, i64 0)
  br label %return

if.else127:                                       ; preds = %if.else120
  %.195 = select i1 %tobool124, i8* getelementptr inbounds ([8 x i8]* @.str176, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str177, i64 0, i64 0)
  br label %return

if.else131:                                       ; preds = %land.lhs.true106, %land.lhs.true100, %land.lhs.true86, %if.end80
  %shl = shl i32 %eflags_p, 3
  %18 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load133 = load i32* %19, align 8
  %bf.lshr134 = lshr i32 %bf.load133, 16
  %bf.clear135 = and i32 %bf.lshr134, 255
  %idxprom189 = zext i32 %bf.clear135 to i64
  %arrayidx136 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom189
  %20 = load i32* %arrayidx136, align 4, !tbaa !5
  %cmp137 = icmp eq i32 %20, 1
  %conv138 = zext i1 %cmp137 to i32
  %shl139 = shl nuw nsw i32 %conv138, 2
  %shl141 = shl i32 %unordered_p, 1
  %or140 = or i32 %shl141, %shl
  %or142 = or i32 %or140, %conv
  %or143 = or i32 %or142, %shl139
  %cmp144 = icmp sgt i32 %or143, 23
  br i1 %cmp144, label %if.then146, label %if.end147

if.then146:                                       ; preds = %if.else131
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6700, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.output_fp_compare, i64 0, i64 0)) #8
  unreachable

if.end147:                                        ; preds = %if.else131
  %idxprom148 = sext i32 %or143 to i64
  %21 = lshr i64 12644544, %idxprom148
  %22 = and i64 %21, 1
  %cmp150 = icmp eq i64 %22, 0
  br i1 %cmp150, label %if.end153, label %if.then152

if.then152:                                       ; preds = %if.end147
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6703, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.output_fp_compare, i64 0, i64 0)) #8
  unreachable

if.end153:                                        ; preds = %if.end147
  %arrayidx149 = getelementptr inbounds [24 x i8*]* @output_fp_compare.alt, i64 0, i64 %idxprom148
  %23 = load i8** %arrayidx149, align 8, !tbaa !6
  br label %return

return:                                           ; preds = %if.else127, %if.then123, %if.then117, %if.else118, %if.else66, %if.then63, %if.end153
  %retval.0 = phi i8* [ %23, %if.end153 ], [ %., %if.then63 ], [ %.192, %if.else66 ], [ getelementptr inbounds ([9 x i8]* @.str173, i64 0, i64 0), %if.else118 ], [ getelementptr inbounds ([9 x i8]* @.str173, i64 0, i64 0), %if.then117 ], [ %.194, %if.then123 ], [ %.195, %if.else127 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind uwtable
define void @ix86_output_addr_vec_elt(%struct._IO_FILE* nocapture %file, i32 %value) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp ne i32 %and, 0
  %. = select i1 %tobool, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0)
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8]* @.str192, i64 0, i64 0), i8* %., i8* getelementptr inbounds ([3 x i8]* @.str193, i64 0, i64 0), i32 %value) #5
  ret void
}

; Function Attrs: nounwind uwtable
define void @ix86_output_addr_diff_elt(%struct._IO_FILE* %file, i32 %value, i32 %rel) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8]* @.str194, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str193, i64 0, i64 0), i32 %value, i8* getelementptr inbounds ([3 x i8]* @.str193, i64 0, i64 0), i32 %rel) #5
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void (%struct._IO_FILE*, i8*, ...)* @asm_fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([36 x i8]* @.str195, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str193, i64 0, i64 0), i32 %value) #5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

declare void @asm_fprintf(%struct._IO_FILE*, i8*, ...) #0

; Function Attrs: nounwind uwtable
define void @ix86_expand_clear(%struct.rtx_def* %dest) #1 {
entry:
  %0 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6754, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.ix86_expand_clear, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom20 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom20
  %2 = load i8* %arrayidx, align 1, !tbaa !5
  %cmp = icmp ult i8 %2, 4
  br i1 %cmp, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %3) #5
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end
  %dest.addr.0 = phi %struct.rtx_def* [ %call, %if.then2 ], [ %dest, %if.end ]
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %dest.addr.0, %struct.rtx_def* %4) #5
  %5 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool6 = icmp eq i32 %5, 0
  br i1 %tobool6, label %if.end15, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end4
  %6 = load i32* @ix86_cpu, align 4, !tbaa !5
  %tobool7 = icmp ne i32 %6, 4
  %7 = load i32* @optimize_size, align 4
  %tobool8 = icmp ne i32 %7, 0
  %or.cond = or i1 %tobool7, %tobool8
  br i1 %or.cond, label %if.then9, label %if.end15

if.then9:                                         ; preds = %land.lhs.true
  %call11 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #5
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call11) #5
  %call13 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call5, %struct.rtx_def* %call12) #5
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call13) #5
  br label %if.end15

if.end15:                                         ; preds = %if.end4, %land.lhs.true, %if.then9
  %tmp.0 = phi %struct.rtx_def* [ %call14, %if.then9 ], [ %call5, %land.lhs.true ], [ %call5, %if.end4 ]
  %call16 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %tmp.0) #5
  ret void
}

declare %struct.rtx_def* @gen_rtx_fmt_E(i32, i32, %struct.rtvec_def*) #0

; Function Attrs: nounwind uwtable
define void @ix86_expand_move(i32 %mode, %struct.rtx_def** nocapture %operands) #1 {
entry:
  %0 = load i32* @reload_in_progress, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %entry
  %1 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool1 = icmp ne i32 %1, 0
  br label %lor.end

lor.end:                                          ; preds = %entry, %lor.rhs
  %2 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %3 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool2 = icmp eq i32 %3, 0
  br i1 %tobool2, label %if.else35, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.end
  %4 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %4, 25
  %5 = and i32 %and, 1
  %6 = or i32 %5, 4
  %cmp = icmp eq i32 %6, %mode
  br i1 %cmp, label %land.lhs.true4, label %if.else35

land.lhs.true4:                                   ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %7 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load.i = load i32* %8, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.else35 [
    i32 68, label %if.then
    i32 67, label %if.then
    i32 58, label %sw.bb1.i
  ]

sw.bb1.i:                                         ; preds = %land.lhs.true4
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load2.i = load i32* %10, align 8
  %bf.clear3.i = and i32 %bf.load2.i, 65535
  switch i32 %bf.clear3.i, label %if.else35 [
    i32 68, label %if.then
    i32 67, label %if.then
    i32 42, label %land.lhs.true.i
    i32 75, label %lor.lhs.false27.i
  ]

land.lhs.true.i:                                  ; preds = %sw.bb1.i
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtint.i = bitcast %union.rtunion_def* %arrayidx12.i to i32*
  %11 = load i32* %rtint.i, align 4, !tbaa !1
  switch i32 %11, label %if.else35 [
    i32 6, label %if.then
    i32 7, label %if.then
    i32 15, label %if.then
  ]

lor.lhs.false27.i:                                ; preds = %sw.bb1.i
  %arrayidx29.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtx30.i = bitcast %union.rtunion_def* %arrayidx29.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx30.i, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load31.i = load i32* %13, align 8
  %bf.clear32.i = and i32 %bf.load31.i, 65535
  %cmp33.i = icmp eq i32 %bf.clear32.i, 54
  br i1 %cmp33.i, label %if.end35.i, label %if.else35

if.end35.i:                                       ; preds = %lor.lhs.false27.i
  %arrayidx37.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtx38.i = bitcast %union.rtunion_def* %arrayidx37.i to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx38.i, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load39.i = load i32* %15, align 8
  %bf.clear40.i = and i32 %bf.load39.i, 65535
  switch i32 %bf.clear40.i, label %if.else35 [
    i32 68, label %if.then
    i32 67, label %if.then
    i32 42, label %lor.lhs.false51.i
  ]

lor.lhs.false51.i:                                ; preds = %if.end35.i
  %arrayidx53.i = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 1
  %rtint54.i = bitcast %union.rtunion_def* %arrayidx53.i to i32*
  %16 = load i32* %rtint54.i, align 4, !tbaa !1
  %cmp55.i = icmp eq i32 %16, 7
  br i1 %cmp55.i, label %symbolic_operand.exit, label %if.else35

symbolic_operand.exit:                            ; preds = %lor.lhs.false51.i
  %arrayidx59.i = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx59.i to %struct.rtvec_def**
  %17 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !6
  %arrayidx60.i = getelementptr inbounds %struct.rtvec_def* %17, i64 0, i32 1, i64 0
  %18 = load %struct.rtx_def** %arrayidx60.i, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load61.i = load i32* %19, align 8
  %bf.clear62.i = and i32 %bf.load61.i, 65535
  %bf.clear62.off.i = add i32 %bf.clear62.i, -67
  %switch.i = icmp ult i32 %bf.clear62.off.i, 2
  br i1 %switch.i, label %if.then, label %if.else35

if.then:                                          ; preds = %symbolic_operand.exit, %sw.bb1.i, %sw.bb1.i, %if.end35.i, %if.end35.i, %land.lhs.true.i, %land.lhs.true.i, %land.lhs.true.i, %land.lhs.true4, %land.lhs.true4
  %20 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load = load i32* %21, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.then22 [
    i32 66, label %if.then11
    i32 61, label %if.end
  ]

if.then11:                                        ; preds = %if.then
  %call16 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %7) #5
  store %struct.rtx_def* %call16, %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  br label %if.end145

if.then22:                                        ; preds = %if.then
  %call26 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #5
  %.pre234 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then22
  %22 = phi %struct.rtx_def* [ %.pre234, %if.then22 ], [ %7, %if.then ]
  %temp.0 = phi %struct.rtx_def* [ %call26, %if.then22 ], [ %20, %if.then ]
  %call28 = tail call %struct.rtx_def* @legitimize_pic_address(%struct.rtx_def* %22, %struct.rtx_def* %temp.0)
  %23 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %cmp30 = icmp eq %struct.rtx_def* %call28, %23
  br i1 %cmp30, label %return, label %if.end32

if.end32:                                         ; preds = %if.end
  store %struct.rtx_def* %call28, %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  br label %if.end145

if.else35:                                        ; preds = %symbolic_operand.exit, %sw.bb1.i, %land.lhs.true4, %if.end35.i, %lor.lhs.false51.i, %land.lhs.true.i, %lor.lhs.false27.i, %lor.end, %land.lhs.true
  %24 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load37 = load i32* %25, align 8
  %bf.clear38 = and i32 %bf.load37, 65535
  %cmp39 = icmp eq i32 %bf.clear38, 66
  br i1 %cmp39, label %land.lhs.true40, label %if.end69

land.lhs.true40:                                  ; preds = %if.else35
  %26 = load i32* @target_flags, align 4, !tbaa !1
  %and41 = and i32 %26, 33554432
  %tobool42 = icmp eq i32 %and41, 0
  %idxprom = sext i32 %mode to i64
  %arrayidx43 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %27 = load i8* %arrayidx43, align 1, !tbaa !5
  %conv = zext i8 %27 to i32
  br i1 %tobool42, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true40
  %add = add nsw i32 %conv, 7
  %and44 = and i32 %add, 504
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true40
  %add48 = add nsw i32 %conv, 1
  %and49 = and i32 %add48, 510
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond50 = phi i32 [ %and44, %cond.true ], [ %and49, %cond.false ]
  %cmp54 = icmp eq i32 %cond50, %conv
  br i1 %cmp54, label %lor.lhs.false, label %land.lhs.true59

lor.lhs.false:                                    ; preds = %cond.end
  %call57 = tail call i32 @push_operand(%struct.rtx_def* %24, i32 %mode) #5
  %tobool58 = icmp eq i32 %call57, 0
  br i1 %tobool58, label %land.lhs.true59, label %if.end69

land.lhs.true59:                                  ; preds = %lor.lhs.false, %cond.end
  %arrayidx60 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %28 = load %struct.rtx_def** %arrayidx60, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load61 = load i32* %29, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  %cmp63 = icmp eq i32 %bf.clear62, 66
  br i1 %cmp63, label %if.then65, label %if.end69

if.then65:                                        ; preds = %land.lhs.true59
  %call67 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %28) #5
  store %struct.rtx_def* %call67, %struct.rtx_def** %arrayidx60, align 8, !tbaa !6
  br label %if.end69

if.end69:                                         ; preds = %lor.lhs.false, %if.then65, %land.lhs.true59, %if.else35
  %30 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %call71 = tail call i32 @push_operand(%struct.rtx_def* %30, i32 %mode) #5
  %tobool72 = icmp eq i32 %call71, 0
  br i1 %tobool72, label %if.end81, label %land.lhs.true73

land.lhs.true73:                                  ; preds = %if.end69
  %arrayidx74 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %31 = load %struct.rtx_def** %arrayidx74, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load.i210 = load i32* %32, align 8
  %bf.clear.i211 = and i32 %bf.load.i210, 65535
  %cmp.i212 = icmp eq i32 %bf.clear.i211, 63
  br i1 %cmp.i212, label %if.then.i215, label %if.end.i216

if.then.i215:                                     ; preds = %land.lhs.true73
  %arrayidx.i213 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0
  %rtx.i214 = bitcast %union.rtunion_def* %arrayidx.i213 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx.i214, align 8, !tbaa !6
  br label %if.end.i216

if.end.i216:                                      ; preds = %if.then.i215, %land.lhs.true73
  %t.0.i = phi %struct.rtx_def* [ %33, %if.then.i215 ], [ %31, %land.lhs.true73 ]
  %34 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp1.i = icmp eq %struct.rtx_def* %t.0.i, %34
  %35 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8
  %cmp2.i = icmp eq %struct.rtx_def* %t.0.i, %35
  %or.cond.i = or i1 %cmp1.i, %cmp2.i
  %36 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8
  %cmp4.i = icmp eq %struct.rtx_def* %t.0.i, %36
  %or.cond34.i = or i1 %or.cond.i, %cmp4.i
  %37 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8
  %cmp6.i = icmp eq %struct.rtx_def* %t.0.i, %37
  %or.cond35.i = or i1 %or.cond34.i, %cmp6.i
  %38 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8
  %cmp8.i = icmp eq %struct.rtx_def* %t.0.i, %38
  %or.cond36.i = or i1 %or.cond35.i, %cmp8.i
  br i1 %or.cond36.i, label %if.then77, label %if.end10.i

if.end10.i:                                       ; preds = %if.end.i216
  %39 = getelementptr inbounds %struct.rtx_def* %t.0.i, i64 0, i32 0
  %bf.load11.i217 = load i32* %39, align 8
  %bf.clear12.i218 = and i32 %bf.load11.i217, 65535
  %cmp13.i219 = icmp eq i32 %bf.clear12.i218, 61
  br i1 %cmp13.i219, label %land.lhs.true.i220, label %general_no_elim_operand.exit

land.lhs.true.i220:                               ; preds = %if.end10.i
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %t.0.i, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx15.i to i32*
  %40 = load i32* %rtuint.i, align 4, !tbaa !1
  %.off.i = add i32 %40, -53
  %41 = icmp ult i32 %.off.i, 5
  br i1 %41, label %if.then77, label %general_no_elim_operand.exit

general_no_elim_operand.exit:                     ; preds = %if.end10.i, %land.lhs.true.i220
  %call.i221 = tail call i32 @general_operand(%struct.rtx_def* %31, i32 %mode) #5
  %tobool76 = icmp eq i32 %call.i221, 0
  br i1 %tobool76, label %general_no_elim_operand.exit.if.then77_crit_edge, label %if.end81

general_no_elim_operand.exit.if.then77_crit_edge: ; preds = %general_no_elim_operand.exit
  %.pre = load %struct.rtx_def** %arrayidx74, align 8, !tbaa !6
  br label %if.then77

if.then77:                                        ; preds = %general_no_elim_operand.exit.if.then77_crit_edge, %land.lhs.true.i220, %if.end.i216
  %42 = phi %struct.rtx_def* [ %.pre, %general_no_elim_operand.exit.if.then77_crit_edge ], [ %31, %land.lhs.true.i220 ], [ %31, %if.end.i216 ]
  %call79 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode, %struct.rtx_def* %42) #5
  store %struct.rtx_def* %call79, %struct.rtx_def** %arrayidx74, align 8, !tbaa !6
  br label %if.end81

if.end81:                                         ; preds = %general_no_elim_operand.exit, %if.end69, %if.then77
  %43 = load i32* @target_flags, align 4, !tbaa !1
  %and82 = and i32 %43, 33554432
  %tobool83 = icmp ne i32 %and82, 0
  %cmp85 = icmp eq i32 %mode, 5
  %or.cond = and i1 %tobool83, %cmp85
  br i1 %or.cond, label %land.lhs.true87, label %if.end109

land.lhs.true87:                                  ; preds = %if.end81
  %arrayidx88 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %44 = load %struct.rtx_def** %arrayidx88, align 8, !tbaa !6
  %call89 = tail call i32 @immediate_operand(%struct.rtx_def* %44, i32 5) #5
  %tobool90 = icmp eq i32 %call89, 0
  br i1 %tobool90, label %if.end109, label %land.lhs.true91

land.lhs.true91:                                  ; preds = %land.lhs.true87
  %45 = load %struct.rtx_def** %arrayidx88, align 8, !tbaa !6
  %46 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 0
  %bf.load.i202 = load i32* %46, align 8
  %bf.clear.i203 = and i32 %bf.load.i202, 65535
  switch i32 %bf.clear.i203, label %land.lhs.true95 [
    i32 58, label %sw.bb8.i
    i32 54, label %sw.bb1.i204
    i32 68, label %sw.bb2.i
    i32 67, label %sw.bb3.i
  ]

sw.bb1.i204:                                      ; preds = %land.lhs.true91
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1, i64 0, i32 0
  %47 = load i64* %rtwint.i, align 8, !tbaa !77
  %lnot.i = icmp ult i64 %47, 4294967296
  %lnot.ext.i = zext i1 %lnot.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb2.i:                                         ; preds = %land.lhs.true91
  %48 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp.i = icmp eq i32 %48, 1
  %conv.i = zext i1 %cmp.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb3.i:                                         ; preds = %land.lhs.true91
  %49 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %50 = and i32 %49, -3
  %51 = icmp eq i32 %50, 1
  %lor.ext.i = zext i1 %51 to i32
  br label %x86_64_zero_extended_value.exit

sw.bb8.i:                                         ; preds = %land.lhs.true91
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1, i64 0
  %rtx.i205 = bitcast %union.rtunion_def* %arrayidx10.i to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx.i205, align 8, !tbaa !6
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load11.i = load i32* %53, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  %cmp13.i = icmp eq i32 %bf.clear12.i, 75
  br i1 %cmp13.i, label %if.then.i, label %land.lhs.true95

if.then.i:                                        ; preds = %sw.bb8.i
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 1, i64 1
  %rtx26.i = bitcast %union.rtunion_def* %arrayidx25.i to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx26.i, align 8, !tbaa !6
  %55 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp27.i = icmp eq i32 %55, 4
  br i1 %cmp27.i, label %land.lhs.true95, label %if.end.i206

if.end.i206:                                      ; preds = %if.then.i
  %fld18.i = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 1
  %rtx20.i = bitcast [1 x %union.rtunion_def]* %fld18.i to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx20.i, align 8, !tbaa !6
  %57 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 0
  %bf.load30.i = load i32* %57, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  %cond.i = icmp eq i32 %bf.clear31.i, 67
  %58 = and i32 %55, -3
  %59 = icmp eq i32 %58, 1
  %or.cond233 = and i1 %cond.i, %59
  br i1 %or.cond233, label %land.lhs.true.i207, label %land.lhs.true95

land.lhs.true.i207:                               ; preds = %if.end.i206
  %60 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load38.i = load i32* %60, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 65535
  %cmp40.i = icmp eq i32 %bf.clear39.i, 54
  br i1 %cmp40.i, label %land.lhs.true42.i, label %land.lhs.true95

land.lhs.true42.i:                                ; preds = %land.lhs.true.i207
  %rtwint45.i = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1, i64 0, i32 0
  %61 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call.i = tail call i64 @trunc_int_for_mode(i64 %61, i32 5) #5
  %cmp46.i = icmp sgt i64 %call.i, -65536
  br i1 %cmp46.i, label %land.lhs.true48.i, label %land.lhs.true95

land.lhs.true48.i:                                ; preds = %land.lhs.true42.i
  %62 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call52.i = tail call i64 @trunc_int_for_mode(i64 %62, i32 4) #5
  %63 = load i64* %rtwint45.i, align 8, !tbaa !77
  %cmp56.i = icmp eq i64 %call52.i, %63
  br i1 %cmp56.i, label %if.end109, label %land.lhs.true95

x86_64_zero_extended_value.exit:                  ; preds = %sw.bb1.i204, %sw.bb2.i, %sw.bb3.i
  %retval.0.i208 = phi i32 [ %lor.ext.i, %sw.bb3.i ], [ %conv.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb1.i204 ]
  %tobool94 = icmp eq i32 %retval.0.i208, 0
  br i1 %tobool94, label %land.lhs.true95, label %if.end109

land.lhs.true95:                                  ; preds = %sw.bb8.i, %land.lhs.true.i207, %land.lhs.true42.i, %land.lhs.true48.i, %land.lhs.true91, %if.end.i206, %if.then.i, %x86_64_zero_extended_value.exit
  %64 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %call97 = tail call i32 @register_operand(%struct.rtx_def* %64, i32 5) #5
  %65 = load i32* @optimize, align 4
  %notlhs = icmp ne i32 %call97, 0
  %notrhs = icmp eq i32 %65, 0
  %or.cond150.not = or i1 %notrhs, %notlhs
  %66 = load i32* @reload_completed, align 4
  %tobool102 = icmp ne i32 %66, 0
  %or.cond151 = or i1 %or.cond150.not, %tobool102
  %67 = load i32* @reload_in_progress, align 4
  %tobool104 = icmp ne i32 %67, 0
  %or.cond152 = or i1 %or.cond151, %tobool104
  br i1 %or.cond152, label %if.end109, label %if.then105

if.then105:                                       ; preds = %land.lhs.true95
  %68 = load %struct.rtx_def** %arrayidx88, align 8, !tbaa !6
  %call107 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 5, %struct.rtx_def* %68) #5
  store %struct.rtx_def* %call107, %struct.rtx_def** %arrayidx88, align 8, !tbaa !6
  br label %if.end109

if.end109:                                        ; preds = %land.lhs.true48.i, %x86_64_zero_extended_value.exit, %land.lhs.true87, %land.lhs.true95, %if.then105, %if.end81
  %idxprom110 = sext i32 %mode to i64
  %arrayidx111 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom110
  %69 = load i32* %arrayidx111, align 4, !tbaa !5
  switch i32 %69, label %lor.lhs.false119 [
    i32 2, label %if.then124
    i32 6, label %if.then124
  ]

lor.lhs.false119:                                 ; preds = %if.end109
  %cmp122 = icmp ne i32 %69, 8
  %or.cond153 = or i1 %cmp122, %2
  br i1 %or.cond153, label %if.end145, label %if.else127

if.then124:                                       ; preds = %if.end109, %if.end109
  br i1 %2, label %if.end145, label %if.else127

if.else127:                                       ; preds = %lor.lhs.false119, %if.then124
  %arrayidx128 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %70 = load %struct.rtx_def** %arrayidx128, align 8, !tbaa !6
  %71 = getelementptr inbounds %struct.rtx_def* %70, i64 0, i32 0
  %bf.load129 = load i32* %71, align 8
  %bf.clear130 = and i32 %bf.load129, 65535
  %cmp131 = icmp eq i32 %bf.clear130, 55
  br i1 %cmp131, label %land.lhs.true133, label %if.end145

land.lhs.true133:                                 ; preds = %if.else127
  %72 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %call135 = tail call i32 @register_operand(%struct.rtx_def* %72, i32 %mode) #5
  %tobool136 = icmp eq i32 %call135, 0
  br i1 %tobool136, label %if.end145, label %if.then137

if.then137:                                       ; preds = %land.lhs.true133
  %73 = load %struct.rtx_def** %arrayidx128, align 8, !tbaa !6
  %call139 = tail call %struct.rtx_def* @force_const_mem(i32 %mode, %struct.rtx_def* %73) #5
  %call140 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call139) #5
  store %struct.rtx_def* %call140, %struct.rtx_def** %arrayidx128, align 8, !tbaa !6
  br label %if.end145

if.end145:                                        ; preds = %land.lhs.true133, %lor.lhs.false119, %if.else127, %if.then137, %if.then124, %if.then11, %if.end32
  %74 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx147 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %75 = load %struct.rtx_def** %arrayidx147, align 8, !tbaa !6
  %call148 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %74, %struct.rtx_def* %75) #5
  %call149 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call148) #5
  br label %return

return:                                           ; preds = %if.end, %if.end145
  ret void
}

declare i32 @push_operand(%struct.rtx_def*, i32) #0

declare %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) #0

declare %struct.rtx_def* @validize_mem(%struct.rtx_def*) #0

declare %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define void @ix86_expand_vector_move(i32 %mode, %struct.rtx_def** nocapture %operands) #1 {
entry:
  %0 = load i32* @reload_in_progress, align 4, !tbaa !1
  %1 = load i32* @reload_completed, align 4, !tbaa !1
  %or = or i32 %1, %0
  %cmp = icmp eq i32 %or, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %call = tail call i32 @register_operand(%struct.rtx_def* %2, i32 %mode) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %land.lhs.true1

land.lhs.true1:                                   ; preds = %land.lhs.true
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %3 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end [
    i32 67, label %if.then
    i32 68, label %if.then
    i32 54, label %if.then
    i32 55, label %if.then
    i32 58, label %if.then
    i32 134, label %if.then
    i32 56, label %if.then
    i32 140, label %if.then
  ]

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true1, %land.lhs.true1, %land.lhs.true1, %land.lhs.true1, %land.lhs.true1, %land.lhs.true1, %land.lhs.true1
  %5 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %5, 25
  %6 = and i32 %and, 1
  %7 = or i32 %6, 4
  %call39 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %7) #5
  %8 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !6
  %call41 = tail call %struct.rtx_def* @force_const_mem(i32 %mode, %struct.rtx_def* %8) #5
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %call41, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call43 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call39, %struct.rtx_def* %9) #5
  %call44 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %call39) #5
  store %struct.rtx_def* %call44, %struct.rtx_def** %arrayidx2, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %if.then, %entry
  %10 = load i32* @reload_in_progress, align 4, !tbaa !1
  %11 = load i32* @reload_completed, align 4, !tbaa !1
  %or46 = or i32 %11, %10
  %cmp47 = icmp eq i32 %or46, 0
  br i1 %cmp47, label %land.lhs.true48, label %if.end68

land.lhs.true48:                                  ; preds = %if.end
  %12 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %call50 = tail call i32 @register_operand(%struct.rtx_def* %12, i32 %mode) #5
  %tobool51 = icmp eq i32 %call50, 0
  br i1 %tobool51, label %land.lhs.true52, label %if.end68

land.lhs.true52:                                  ; preds = %land.lhs.true48
  %arrayidx53 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %13 = load %struct.rtx_def** %arrayidx53, align 8, !tbaa !6
  %call54 = tail call i32 @register_operand(%struct.rtx_def* %13, i32 %mode) #5
  %tobool55 = icmp eq i32 %call54, 0
  br i1 %tobool55, label %land.lhs.true56, label %if.end68

land.lhs.true56:                                  ; preds = %land.lhs.true52
  %14 = load %struct.rtx_def** %arrayidx53, align 8, !tbaa !6
  %idxprom = sext i32 %mode to i64
  %arrayidx58 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %15 = load %struct.rtx_def** %arrayidx58, align 8, !tbaa !6
  %cmp59 = icmp eq %struct.rtx_def* %14, %15
  br i1 %cmp59, label %if.end68, label %if.then60

if.then60:                                        ; preds = %land.lhs.true56
  %16 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load62 = load i32* %16, align 8
  %bf.lshr = lshr i32 %bf.load62, 16
  %bf.clear63 = and i32 %bf.lshr, 255
  %call65 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear63, %struct.rtx_def* %14) #5
  %17 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %call67 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %17, %struct.rtx_def* %call65) #5
  br label %return

if.end68:                                         ; preds = %land.lhs.true56, %land.lhs.true52, %land.lhs.true48, %if.end
  %18 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx70 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %19 = load %struct.rtx_def** %arrayidx70, align 8, !tbaa !6
  %call71 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %18, %struct.rtx_def* %19) #5
  %call72 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call71) #5
  br label %return

return:                                           ; preds = %if.end68, %if.then60
  ret void
}

; Function Attrs: nounwind uwtable
define void @ix86_expand_binary_operator(i32 %code, i32 %mode, %struct.rtx_def** nocapture readonly %operands) #1 {
entry:
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !6
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx2, align 8, !tbaa !6
  %idxprom = sext i32 %code to i64
  %arrayidx3 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom
  %3 = load i8* %arrayidx3, align 1, !tbaa !5
  %cmp = icmp eq i8 %3, 99
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %2) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call5 = tail call i32 @immediate_operand(%struct.rtx_def* %1, i32 %mode) #5
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then, %entry
  %src2.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %2, %lor.lhs.false ], [ %2, %entry ]
  %src1.0 = phi %struct.rtx_def* [ %2, %if.then ], [ %1, %lor.lhs.false ], [ %1, %entry ]
  %4 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp7 = icmp eq i32 %bf.clear, 66
  br i1 %cmp7, label %if.then9, label %if.end26

if.then9:                                         ; preds = %if.end
  %call10 = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %src1.0) #5
  %tobool11 = icmp eq i32 %call10, 0
  br i1 %tobool11, label %if.else, label %if.end26

if.else:                                          ; preds = %if.then9
  br i1 %cmp, label %land.lhs.true18, label %if.else22

land.lhs.true18:                                  ; preds = %if.else
  %call19 = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %src2.0) #5
  %tobool20 = icmp eq i32 %call19, 0
  br i1 %tobool20, label %if.else22, label %if.end26

if.else22:                                        ; preds = %land.lhs.true18, %if.else
  %call23 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #5
  br label %if.end26

if.end26:                                         ; preds = %land.lhs.true18, %if.then9, %if.else22, %if.end
  %dst.0 = phi %struct.rtx_def* [ %call23, %if.else22 ], [ %0, %if.end ], [ %0, %if.then9 ], [ %0, %land.lhs.true18 ]
  %matching_memory.0 = phi i32 [ 0, %if.else22 ], [ 0, %if.end ], [ 1, %if.then9 ], [ 2, %land.lhs.true18 ]
  %5 = getelementptr inbounds %struct.rtx_def* %src1.0, i64 0, i32 0
  %bf.load27 = load i32* %5, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 66
  br i1 %cmp29, label %land.lhs.true31, label %if.end44

land.lhs.true31:                                  ; preds = %if.end26
  %6 = getelementptr inbounds %struct.rtx_def* %src2.0, i64 0, i32 0
  %bf.load32 = load i32* %6, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 66
  br i1 %cmp34, label %if.then36, label %if.end44

if.then36:                                        ; preds = %land.lhs.true31
  %cmp37 = icmp eq i32 %matching_memory.0, 2
  br i1 %cmp37, label %if.else41, label %if.then39

if.then39:                                        ; preds = %if.then36
  %call40 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %src2.0) #5
  br label %if.end44

if.else41:                                        ; preds = %if.then36
  %call42 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %src1.0) #5
  br label %if.end44

if.end44:                                         ; preds = %if.then39, %if.else41, %land.lhs.true31, %if.end26
  %src2.1 = phi %struct.rtx_def* [ %call40, %if.then39 ], [ %src2.0, %if.else41 ], [ %src2.0, %land.lhs.true31 ], [ %src2.0, %if.end26 ]
  %src1.1 = phi %struct.rtx_def* [ %src1.0, %if.then39 ], [ %call42, %if.else41 ], [ %src1.0, %land.lhs.true31 ], [ %src1.0, %if.end26 ]
  %7 = getelementptr inbounds %struct.rtx_def* %src1.1, i64 0, i32 0
  %bf.load45 = load i32* %7, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  switch i32 %bf.clear46, label %lor.lhs.false84 [
    i32 67, label %land.lhs.true91
    i32 68, label %land.lhs.true91
    i32 54, label %land.lhs.true91
    i32 55, label %land.lhs.true91
    i32 58, label %land.lhs.true91
    i32 134, label %land.lhs.true91
    i32 56, label %land.lhs.true91
    i32 140, label %land.lhs.true91
  ]

lor.lhs.false84:                                  ; preds = %if.end44
  %notlhs = icmp ne i32 %matching_memory.0, 0
  %notrhs = icmp ne i32 %bf.clear46, 66
  %or.cond197.not = or i1 %notrhs, %notlhs
  %brmerge = or i1 %or.cond197.not, %cmp
  br i1 %brmerge, label %if.end99, label %if.then97

land.lhs.true91:                                  ; preds = %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44
  br i1 %cmp, label %if.end99, label %if.then97

if.then97:                                        ; preds = %lor.lhs.false84, %land.lhs.true91
  %call98 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %src1.1) #5
  br label %if.end99

if.end99:                                         ; preds = %lor.lhs.false84, %land.lhs.true91, %if.then97
  %src1.2 = phi %struct.rtx_def* [ %call98, %if.then97 ], [ %src1.1, %land.lhs.true91 ], [ %src1.1, %lor.lhs.false84 ]
  %8 = load i32* @optimize, align 4, !tbaa !1
  %tobool100 = icmp eq i32 %8, 0
  %9 = load i32* @no_new_pseudos, align 4
  %tobool102 = icmp ne i32 %9, 0
  %or.cond = or i1 %tobool100, %tobool102
  br i1 %or.cond, label %if.end125, label %if.then103

if.then103:                                       ; preds = %if.end99
  %10 = getelementptr inbounds %struct.rtx_def* %dst.0, i64 0, i32 0
  %bf.load104 = load i32* %10, align 8
  %bf.clear105 = and i32 %bf.load104, 65535
  %cmp106 = icmp eq i32 %bf.clear105, 66
  br i1 %cmp106, label %if.then108, label %if.end110

if.then108:                                       ; preds = %if.then103
  %call109 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #5
  br label %if.end110

if.end110:                                        ; preds = %if.then108, %if.then103
  %dst.1 = phi %struct.rtx_def* [ %call109, %if.then108 ], [ %dst.0, %if.then103 ]
  %11 = getelementptr inbounds %struct.rtx_def* %src1.2, i64 0, i32 0
  %bf.load111 = load i32* %11, align 8
  %bf.clear112 = and i32 %bf.load111, 65535
  %cmp113 = icmp eq i32 %bf.clear112, 66
  br i1 %cmp113, label %if.then115, label %if.end117

if.then115:                                       ; preds = %if.end110
  %call116 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %src1.2) #5
  br label %if.end117

if.end117:                                        ; preds = %if.then115, %if.end110
  %src1.3 = phi %struct.rtx_def* [ %call116, %if.then115 ], [ %src1.2, %if.end110 ]
  %12 = getelementptr inbounds %struct.rtx_def* %src2.1, i64 0, i32 0
  %bf.load118 = load i32* %12, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %cmp120 = icmp eq i32 %bf.clear119, 66
  br i1 %cmp120, label %if.then122, label %if.end125

if.then122:                                       ; preds = %if.end117
  %call123 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %src2.1) #5
  br label %if.end125

if.end125:                                        ; preds = %if.end117, %if.then122, %if.end99
  %dst.2 = phi %struct.rtx_def* [ %dst.0, %if.end99 ], [ %dst.1, %if.then122 ], [ %dst.1, %if.end117 ]
  %src2.2 = phi %struct.rtx_def* [ %src2.1, %if.end99 ], [ %call123, %if.then122 ], [ %src2.1, %if.end117 ]
  %src1.4 = phi %struct.rtx_def* [ %src1.2, %if.end99 ], [ %src1.3, %if.then122 ], [ %src1.3, %if.end117 ]
  %call126 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code, i32 %mode, %struct.rtx_def* %src1.4, %struct.rtx_def* %src2.2) #5
  %call127 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %dst.2, %struct.rtx_def* %call126) #5
  %13 = load i32* @reload_in_progress, align 4, !tbaa !1
  %tobool128 = icmp eq i32 %13, 0
  br i1 %tobool128, label %if.else135, label %if.then129

if.then129:                                       ; preds = %if.end125
  %cmp130 = icmp eq i32 %code, 75
  br i1 %cmp130, label %if.end133, label %if.then132

if.then132:                                       ; preds = %if.then129
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 6945, i8* getelementptr inbounds ([28 x i8]* @__FUNCTION__.ix86_expand_binary_operator, i64 0, i64 0)) #8
  unreachable

if.end133:                                        ; preds = %if.then129
  %call134 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call127) #5
  br label %if.end141

if.else135:                                       ; preds = %if.end125
  %call136 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #5
  %call137 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call136) #5
  %call138 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call127, %struct.rtx_def* %call137) #5
  %call139 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call138) #5
  %call140 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call139) #5
  br label %if.end141

if.end141:                                        ; preds = %if.else135, %if.end133
  %14 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %cmp143 = icmp eq %struct.rtx_def* %dst.2, %14
  br i1 %cmp143, label %if.end148, label %if.then145

if.then145:                                       ; preds = %if.end141
  %call147 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %14, %struct.rtx_def* %dst.2) #5
  br label %if.end148

if.end148:                                        ; preds = %if.end141, %if.then145
  ret void
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_binary_operator_ok(i32 %code, i32 %mode, %struct.rtx_def** nocapture readonly %operands) #1 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end48 [
    i32 66, label %land.lhs.true
    i32 67, label %land.lhs.true43
    i32 68, label %land.lhs.true43
    i32 54, label %land.lhs.true43
    i32 55, label %land.lhs.true43
    i32 58, label %land.lhs.true43
    i32 134, label %land.lhs.true43
    i32 56, label %land.lhs.true43
    i32 140, label %land.lhs.true43
  ]

land.lhs.true:                                    ; preds = %entry
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %2 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load2 = load i32* %3, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 66
  br i1 %cmp4, label %return, label %if.end48

land.lhs.true43:                                  ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %idxprom = sext i32 %code to i64
  %arrayidx44 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom
  %4 = load i8* %arrayidx44, align 1, !tbaa !5
  %cmp45 = icmp eq i8 %4, 99
  br i1 %cmp45, label %if.end48, label %return

if.end48:                                         ; preds = %entry, %land.lhs.true, %land.lhs.true43
  %5 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load50 = load i32* %6, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 66
  br i1 %cmp52, label %land.lhs.true54, label %if.end69

land.lhs.true54:                                  ; preds = %if.end48
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %5, %struct.rtx_def* %0) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %lor.lhs.false57, label %if.end69

lor.lhs.false57:                                  ; preds = %land.lhs.true54
  %idxprom58 = sext i32 %code to i64
  %arrayidx59 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom58
  %7 = load i8* %arrayidx59, align 1, !tbaa !5
  %cmp61 = icmp eq i8 %7, 99
  br i1 %cmp61, label %land.lhs.true63, label %return

land.lhs.true63:                                  ; preds = %lor.lhs.false57
  %8 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx65 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %9 = load %struct.rtx_def** %arrayidx65, align 8, !tbaa !6
  %call66 = tail call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %9) #5
  %tobool67 = icmp eq i32 %call66, 0
  br i1 %tobool67, label %return, label %if.end69

if.end69:                                         ; preds = %land.lhs.true63, %land.lhs.true54, %if.end48
  %10 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load71 = load i32* %11, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 66
  br i1 %cmp73, label %land.lhs.true75, label %if.end87

land.lhs.true75:                                  ; preds = %if.end69
  %idxprom76 = sext i32 %code to i64
  %arrayidx77 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom76
  %12 = load i8* %arrayidx77, align 1, !tbaa !5
  %cmp79 = icmp eq i8 %12, 99
  br i1 %cmp79, label %if.end87, label %land.lhs.true81

land.lhs.true81:                                  ; preds = %land.lhs.true75
  %13 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %call84 = tail call i32 @rtx_equal_p(%struct.rtx_def* %13, %struct.rtx_def* %10) #5
  %tobool85 = icmp eq i32 %call84, 0
  br i1 %tobool85, label %return, label %if.end87

if.end87:                                         ; preds = %land.lhs.true81, %land.lhs.true75, %if.end69
  br label %return

return:                                           ; preds = %land.lhs.true81, %lor.lhs.false57, %land.lhs.true63, %land.lhs.true43, %land.lhs.true, %if.end87
  %retval.0 = phi i32 [ 1, %if.end87 ], [ 0, %land.lhs.true ], [ 0, %land.lhs.true43 ], [ 0, %land.lhs.true63 ], [ 0, %lor.lhs.false57 ], [ 0, %land.lhs.true81 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @ix86_expand_unary_operator(i32 %code, i32 %mode, %struct.rtx_def** nocapture readonly %operands) #1 {
entry:
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx1 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %1 = load %struct.rtx_def** %arrayidx1, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.then, label %land.lhs.true

if.then:                                          ; preds = %entry
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %1) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.else, label %if.end11

if.else:                                          ; preds = %if.then
  %call3 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #5
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else, %entry
  %dst.0.ph = phi %struct.rtx_def* [ %call3, %if.else ], [ %0, %entry ]
  %3 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load6 = load i32* %3, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 66
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %land.lhs.true
  %call10 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %1) #5
  br label %if.end11

if.end11:                                         ; preds = %if.then, %if.then9, %land.lhs.true
  %dst.073 = phi %struct.rtx_def* [ %dst.0.ph, %if.then9 ], [ %dst.0.ph, %land.lhs.true ], [ %0, %if.then ]
  %src.0 = phi %struct.rtx_def* [ %call10, %if.then9 ], [ %1, %land.lhs.true ], [ %1, %if.then ]
  %4 = load i32* @optimize, align 4, !tbaa !1
  %tobool12 = icmp eq i32 %4, 0
  %5 = load i32* @no_new_pseudos, align 4
  %tobool14 = icmp ne i32 %5, 0
  %or.cond = or i1 %tobool12, %tobool14
  br i1 %or.cond, label %if.end28, label %if.then15

if.then15:                                        ; preds = %if.end11
  %6 = getelementptr inbounds %struct.rtx_def* %dst.073, i64 0, i32 0
  %bf.load16 = load i32* %6, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 66
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.then15
  %call20 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #5
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.then15
  %dst.1 = phi %struct.rtx_def* [ %call20, %if.then19 ], [ %dst.073, %if.then15 ]
  %7 = getelementptr inbounds %struct.rtx_def* %src.0, i64 0, i32 0
  %bf.load22 = load i32* %7, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 66
  br i1 %cmp24, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.end21
  %call26 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %src.0) #5
  br label %if.end28

if.end28:                                         ; preds = %if.end21, %if.then25, %if.end11
  %dst.2 = phi %struct.rtx_def* [ %dst.073, %if.end11 ], [ %dst.1, %if.then25 ], [ %dst.1, %if.end21 ]
  %src.1 = phi %struct.rtx_def* [ %src.0, %if.end11 ], [ %call26, %if.then25 ], [ %src.0, %if.end21 ]
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %code, i32 %mode, %struct.rtx_def* %src.1) #5
  %call30 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %dst.2, %struct.rtx_def* %call29) #5
  %8 = load i32* @reload_in_progress, align 4, !tbaa !1
  %tobool31 = icmp ne i32 %8, 0
  %cmp32 = icmp eq i32 %code, 86
  %or.cond51 = or i1 %tobool31, %cmp32
  br i1 %or.cond51, label %if.then33, label %if.else38

if.then33:                                        ; preds = %if.end28
  br i1 %cmp32, label %if.end36, label %if.then35

if.then35:                                        ; preds = %if.then33
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7037, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.ix86_expand_unary_operator, i64 0, i64 0)) #8
  unreachable

if.end36:                                         ; preds = %if.then33
  %call37 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call30) #5
  br label %if.end44

if.else38:                                        ; preds = %if.end28
  %call39 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #5
  %call40 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call39) #5
  %call41 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call30, %struct.rtx_def* %call40) #5
  %call42 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call41) #5
  %call43 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call42) #5
  br label %if.end44

if.end44:                                         ; preds = %if.else38, %if.end36
  %9 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %cmp46 = icmp eq %struct.rtx_def* %dst.2, %9
  br i1 %cmp46, label %if.end50, label %if.then47

if.then47:                                        ; preds = %if.end44
  %call49 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %9, %struct.rtx_def* %dst.2) #5
  br label %if.end50

if.end50:                                         ; preds = %if.end44, %if.then47
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ix86_unary_operator_ok(i32 %code, i32 %mode, %struct.rtx_def** nocapture readonly %operands) #1 {
entry:
  %0 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  %arrayidx6.phi.trans.insert = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %.pre = load %struct.rtx_def** %arrayidx6.phi.trans.insert, align 8, !tbaa !6
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def* %.pre, i64 0, i32 0
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 66
  br i1 %cmp4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry, %lor.lhs.false
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %0, %struct.rtx_def* %.pre) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  br label %return

return:                                           ; preds = %land.lhs.true, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ix86_match_ccmode(%struct.rtx_def* nocapture readonly %insn, i32 %req_mode) #1 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtvec_def**
  %2 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %arrayidx3 = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 1, i64 0
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !6
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load4.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load4 = phi i32 [ %bf.load4.pre, %if.then ], [ %bf.load, %entry ]
  %set.0 = phi %struct.rtx_def* [ %3, %if.then ], [ %0, %entry ]
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 47
  br i1 %cmp6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7084, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.ix86_match_ccmode, i64 0, i64 0)) #8
  unreachable

if.end8:                                          ; preds = %if.end
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %set.0, i64 0, i32 1, i64 1
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx11, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load12 = load i32* %5, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp eq i32 %bf.clear13, 74
  br i1 %cmp14, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.end8
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7086, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.ix86_match_ccmode, i64 0, i64 0)) #8
  unreachable

if.end16:                                         ; preds = %if.end8
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %set.0, i64 0, i32 1, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx19, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load20 = load i32* %7, align 8
  %bf.lshr = lshr i32 %bf.load20, 16
  %bf.clear21 = and i32 %bf.lshr, 255
  switch i32 %bf.clear21, label %sw.default [
    i32 55, label %sw.bb
    i32 52, label %sw.bb33
    i32 53, label %sw.bb37
    i32 54, label %sw.bb43
    i32 56, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.end16
  switch i32 %req_mode, label %return [
    i32 55, label %sw.epilog
    i32 52, label %lor.lhs.false
  ]

lor.lhs.false:                                    ; preds = %sw.bb
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 1
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx29, align 8, !tbaa !6
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp30 = icmp eq %struct.rtx_def* %8, %9
  br i1 %cmp30, label %sw.epilog, label %return

sw.bb33:                                          ; preds = %if.end16
  %req_mode.off = add i32 %req_mode, -53
  %switch = icmp ult i32 %req_mode.off, 4
  br i1 %switch, label %return, label %sw.epilog

sw.bb37:                                          ; preds = %if.end16
  %req_mode.off69 = add i32 %req_mode, -54
  %switch70 = icmp ult i32 %req_mode.off69, 3
  br i1 %switch70, label %return, label %sw.epilog

sw.bb43:                                          ; preds = %if.end16
  %cmp44.old.old = icmp eq i32 %req_mode, 56
  br i1 %cmp44.old.old, label %return, label %sw.epilog

sw.default:                                       ; preds = %if.end16
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7113, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.ix86_match_ccmode, i64 0, i64 0)) #8
  unreachable

sw.epilog:                                        ; preds = %sw.bb37, %sw.bb33, %sw.bb, %lor.lhs.false, %sw.bb43, %if.end16
  %bf.lshr51 = lshr i32 %bf.load12, 16
  %bf.clear52 = and i32 %bf.lshr51, 255
  %cmp53 = icmp eq i32 %bf.clear52, %bf.clear21
  %conv = zext i1 %cmp53 to i32
  br label %return

return:                                           ; preds = %sw.bb37, %sw.bb33, %sw.bb43, %lor.lhs.false, %sw.bb, %sw.epilog
  %retval.0 = phi i32 [ %conv, %sw.epilog ], [ 0, %sw.bb ], [ 0, %lor.lhs.false ], [ 0, %sw.bb43 ], [ 0, %sw.bb33 ], [ 0, %sw.bb37 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @ix86_fp_compare_mode(i32 %code) #2 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %0, 4
  %1 = and i32 %and, 1
  %2 = add i32 %1, 57
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define i32 @ix86_cc_mode(i32 %code, %struct.rtx_def* nocapture readonly %op0, %struct.rtx_def* readnone %op1) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom11 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom11
  %1 = load i32* %arrayidx, align 4, !tbaa !5
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %2, 4
  %3 = and i32 %and.i, 1
  %4 = add i32 %3, 57
  br label %return

if.end:                                           ; preds = %entry
  switch i32 %code, label %sw.default [
    i32 103, label %return
    i32 102, label %return
    i32 108, label %sw.bb1
    i32 109, label %sw.bb1
    i32 111, label %sw.bb1
    i32 110, label %sw.bb1
    i32 104, label %sw.bb2
    i32 107, label %sw.bb2
    i32 105, label %sw.bb5
    i32 106, label %sw.bb5
    i32 48, label %sw.bb9
  ]

sw.bb1:                                           ; preds = %if.end, %if.end, %if.end, %if.end
  br label %return

sw.bb2:                                           ; preds = %if.end, %if.end
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp3 = icmp eq %struct.rtx_def* %5, %op1
  %. = select i1 %cmp3, i32 54, i32 53
  br label %return

sw.bb5:                                           ; preds = %if.end, %if.end
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp6 = icmp eq %struct.rtx_def* %6, %op1
  %.12 = select i1 %cmp6, i32 55, i32 53
  br label %return

sw.bb9:                                           ; preds = %if.end
  br label %return

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7200, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.ix86_cc_mode, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %sw.bb5, %sw.bb2, %if.end, %if.end, %sw.bb9, %sw.bb1, %if.then
  %retval.0 = phi i32 [ %4, %if.then ], [ 52, %sw.bb9 ], [ 52, %sw.bb1 ], [ 56, %if.end ], [ 56, %if.end ], [ %., %sw.bb2 ], [ %.12, %sw.bb5 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ix86_use_fcomi_compare(i32 %code) #1 {
entry:
  %call = tail call i32 @swap_condition(i32 %code) #5
  %call1 = tail call fastcc i32 @ix86_fp_comparison_cost(i32 %code)
  %0 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl.i = shl i32 1, %0
  %and.i = and i32 %shl.i, 104
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %lor.lhs.false.i, label %if.end.i

lor.lhs.false.i:                                  ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and1.i = and i32 %1, 327680
  %cmp.i = icmp eq i32 %and1.i, 0
  br i1 %cmp.i, label %ix86_fp_comparison_fcomi_cost.exit, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i, %entry
  switch i32 %code, label %sw.default.i.i [
    i32 105, label %sw.epilog.i.i
    i32 104, label %sw.epilog.i.i
    i32 113, label %sw.epilog.i.i
    i32 112, label %sw.epilog.i.i
    i32 114, label %sw.epilog.i.i
    i32 118, label %sw.epilog.i.i
    i32 117, label %sw.epilog.i.i
    i32 119, label %sw.epilog.i.i
    i32 107, label %sw.bb1.i.i
    i32 106, label %sw.bb2.i.i
    i32 103, label %sw.bb3.i.i
    i32 102, label %sw.bb4.i.i
    i32 115, label %sw.bb5.i.i
    i32 116, label %sw.bb6.i.i
  ]

sw.bb1.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb2.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb3.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb4.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb5.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb6.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.default.i.i:                                   ; preds = %if.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i.i:                                    ; preds = %sw.bb6.i.i, %sw.bb5.i.i, %sw.bb4.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %sw.bb1.i.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i
  %bypass_code.0.load8.i = phi i32 [ 1, %sw.bb6.i.i ], [ 1, %sw.bb5.i.i ], [ 1, %sw.bb4.i.i ], [ 112, %sw.bb3.i.i ], [ 112, %sw.bb2.i.i ], [ 112, %sw.bb1.i.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ]
  %second_code.0.load6.i = phi i32 [ 112, %sw.bb6.i.i ], [ 112, %sw.bb5.i.i ], [ 112, %sw.bb4.i.i ], [ 1, %sw.bb3.i.i ], [ 1, %sw.bb2.i.i ], [ 1, %sw.bb1.i.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ]
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and.i.i = and i32 %2, 16
  %tobool.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.i, label %lor.rhs.i, label %ix86_fp_comparison_codes.exit.i

ix86_fp_comparison_codes.exit.i:                  ; preds = %sw.epilog.i.i
  %cmp2.i = icmp eq i32 %bypass_code.0.load8.i, 1
  br i1 %cmp2.i, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %ix86_fp_comparison_codes.exit.i, %sw.epilog.i.i
  %second_code.0.load510.i = phi i32 [ %second_code.0.load6.i, %ix86_fp_comparison_codes.exit.i ], [ 1, %sw.epilog.i.i ]
  %cmp3.i = icmp ne i32 %second_code.0.load510.i, 1
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %ix86_fp_comparison_codes.exit.i
  %3 = phi i1 [ true, %ix86_fp_comparison_codes.exit.i ], [ %cmp3.i, %lor.rhs.i ]
  %lor.ext.i = zext i1 %3 to i32
  %add4.i = or i32 %lor.ext.i, 2
  br label %ix86_fp_comparison_fcomi_cost.exit

ix86_fp_comparison_fcomi_cost.exit:               ; preds = %lor.lhs.false.i, %lor.end.i
  %retval.0.i = phi i32 [ %add4.i, %lor.end.i ], [ 1024, %lor.lhs.false.i ]
  %cmp = icmp eq i32 %call1, %retval.0.i
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %ix86_fp_comparison_fcomi_cost.exit
  %call3 = tail call fastcc i32 @ix86_fp_comparison_cost(i32 %call)
  %4 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl.i9 = shl i32 1, %4
  %and.i10 = and i32 %shl.i9, 104
  %tobool.i11 = icmp eq i32 %and.i10, 0
  br i1 %tobool.i11, label %lor.lhs.false.i14, label %if.end.i15

lor.lhs.false.i14:                                ; preds = %lor.rhs
  %5 = load i32* @target_flags, align 4, !tbaa !1
  %and1.i12 = and i32 %5, 327680
  %cmp.i13 = icmp eq i32 %and1.i12, 0
  br i1 %cmp.i13, label %ix86_fp_comparison_fcomi_cost.exit37, label %if.end.i15

if.end.i15:                                       ; preds = %lor.lhs.false.i14, %lor.rhs
  switch i32 %call, label %sw.default.i.i22 [
    i32 105, label %sw.epilog.i.i27
    i32 104, label %sw.epilog.i.i27
    i32 113, label %sw.epilog.i.i27
    i32 112, label %sw.epilog.i.i27
    i32 114, label %sw.epilog.i.i27
    i32 118, label %sw.epilog.i.i27
    i32 117, label %sw.epilog.i.i27
    i32 119, label %sw.epilog.i.i27
    i32 107, label %sw.bb1.i.i16
    i32 106, label %sw.bb2.i.i17
    i32 103, label %sw.bb3.i.i18
    i32 102, label %sw.bb4.i.i19
    i32 115, label %sw.bb5.i.i20
    i32 116, label %sw.bb6.i.i21
  ]

sw.bb1.i.i16:                                     ; preds = %if.end.i15
  br label %sw.epilog.i.i27

sw.bb2.i.i17:                                     ; preds = %if.end.i15
  br label %sw.epilog.i.i27

sw.bb3.i.i18:                                     ; preds = %if.end.i15
  br label %sw.epilog.i.i27

sw.bb4.i.i19:                                     ; preds = %if.end.i15
  br label %sw.epilog.i.i27

sw.bb5.i.i20:                                     ; preds = %if.end.i15
  br label %sw.epilog.i.i27

sw.bb6.i.i21:                                     ; preds = %if.end.i15
  br label %sw.epilog.i.i27

sw.default.i.i22:                                 ; preds = %if.end.i15
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i.i27:                                  ; preds = %sw.bb6.i.i21, %sw.bb5.i.i20, %sw.bb4.i.i19, %sw.bb3.i.i18, %sw.bb2.i.i17, %sw.bb1.i.i16, %if.end.i15, %if.end.i15, %if.end.i15, %if.end.i15, %if.end.i15, %if.end.i15, %if.end.i15, %if.end.i15
  %bypass_code.0.load8.i23 = phi i32 [ 1, %sw.bb6.i.i21 ], [ 1, %sw.bb5.i.i20 ], [ 1, %sw.bb4.i.i19 ], [ 112, %sw.bb3.i.i18 ], [ 112, %sw.bb2.i.i17 ], [ 112, %sw.bb1.i.i16 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ]
  %second_code.0.load6.i24 = phi i32 [ 112, %sw.bb6.i.i21 ], [ 112, %sw.bb5.i.i20 ], [ 112, %sw.bb4.i.i19 ], [ 1, %sw.bb3.i.i18 ], [ 1, %sw.bb2.i.i17 ], [ 1, %sw.bb1.i.i16 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ], [ 1, %if.end.i15 ]
  %6 = load i32* @target_flags, align 4, !tbaa !1
  %and.i.i25 = and i32 %6, 16
  %tobool.i.i26 = icmp eq i32 %and.i.i25, 0
  br i1 %tobool.i.i26, label %lor.rhs.i32, label %ix86_fp_comparison_codes.exit.i29

ix86_fp_comparison_codes.exit.i29:                ; preds = %sw.epilog.i.i27
  %cmp2.i28 = icmp eq i32 %bypass_code.0.load8.i23, 1
  br i1 %cmp2.i28, label %lor.rhs.i32, label %lor.end.i35

lor.rhs.i32:                                      ; preds = %ix86_fp_comparison_codes.exit.i29, %sw.epilog.i.i27
  %second_code.0.load510.i30 = phi i32 [ %second_code.0.load6.i24, %ix86_fp_comparison_codes.exit.i29 ], [ 1, %sw.epilog.i.i27 ]
  %cmp3.i31 = icmp ne i32 %second_code.0.load510.i30, 1
  br label %lor.end.i35

lor.end.i35:                                      ; preds = %lor.rhs.i32, %ix86_fp_comparison_codes.exit.i29
  %7 = phi i1 [ true, %ix86_fp_comparison_codes.exit.i29 ], [ %cmp3.i31, %lor.rhs.i32 ]
  %lor.ext.i33 = zext i1 %7 to i32
  %add4.i34 = or i32 %lor.ext.i33, 2
  br label %ix86_fp_comparison_fcomi_cost.exit37

ix86_fp_comparison_fcomi_cost.exit37:             ; preds = %lor.lhs.false.i14, %lor.end.i35
  %retval.0.i36 = phi i32 [ %add4.i34, %lor.end.i35 ], [ 1024, %lor.lhs.false.i14 ]
  %cmp5 = icmp eq i32 %call3, %retval.0.i36
  br label %lor.end

lor.end:                                          ; preds = %ix86_fp_comparison_fcomi_cost.exit37, %ix86_fp_comparison_fcomi_cost.exit
  %8 = phi i1 [ true, %ix86_fp_comparison_fcomi_cost.exit ], [ %cmp5, %ix86_fp_comparison_fcomi_cost.exit37 ]
  %lor.ext = zext i1 %8 to i32
  ret i32 %lor.ext
}

declare i32 @swap_condition(i32) #0

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ix86_fp_comparison_cost(i32 %code) #1 {
entry:
  %0 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl.i = shl i32 1, %0
  %and.i = and i32 %shl.i, 104
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %lor.lhs.false.i, label %if.end.i

lor.lhs.false.i:                                  ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and1.i = and i32 %1, 327680
  %cmp.i = icmp eq i32 %and1.i, 0
  br i1 %cmp.i, label %ix86_fp_comparison_fcomi_cost.exit, label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i, %entry
  switch i32 %code, label %sw.default.i.i [
    i32 105, label %sw.epilog.i.i
    i32 104, label %sw.epilog.i.i
    i32 113, label %sw.epilog.i.i
    i32 112, label %sw.epilog.i.i
    i32 114, label %sw.epilog.i.i
    i32 118, label %sw.epilog.i.i
    i32 117, label %sw.epilog.i.i
    i32 119, label %sw.epilog.i.i
    i32 107, label %sw.bb1.i.i
    i32 106, label %sw.bb2.i.i
    i32 103, label %sw.bb3.i.i
    i32 102, label %sw.bb4.i.i
    i32 115, label %sw.bb5.i.i
    i32 116, label %sw.bb6.i.i
  ]

sw.bb1.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb2.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb3.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb4.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb5.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.bb6.i.i:                                       ; preds = %if.end.i
  br label %sw.epilog.i.i

sw.default.i.i:                                   ; preds = %if.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i.i:                                    ; preds = %sw.bb6.i.i, %sw.bb5.i.i, %sw.bb4.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %sw.bb1.i.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i
  %bypass_code.0.load8.i = phi i32 [ 1, %sw.bb6.i.i ], [ 1, %sw.bb5.i.i ], [ 1, %sw.bb4.i.i ], [ 112, %sw.bb3.i.i ], [ 112, %sw.bb2.i.i ], [ 112, %sw.bb1.i.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ]
  %second_code.0.load6.i = phi i32 [ 112, %sw.bb6.i.i ], [ 112, %sw.bb5.i.i ], [ 112, %sw.bb4.i.i ], [ 1, %sw.bb3.i.i ], [ 1, %sw.bb2.i.i ], [ 1, %sw.bb1.i.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ], [ 1, %if.end.i ]
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and.i.i = and i32 %2, 16
  %tobool.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.i, label %lor.rhs.i, label %ix86_fp_comparison_codes.exit.i

ix86_fp_comparison_codes.exit.i:                  ; preds = %sw.epilog.i.i
  %cmp2.i = icmp eq i32 %bypass_code.0.load8.i, 1
  br i1 %cmp2.i, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %ix86_fp_comparison_codes.exit.i, %sw.epilog.i.i
  %second_code.0.load510.i = phi i32 [ %second_code.0.load6.i, %ix86_fp_comparison_codes.exit.i ], [ 1, %sw.epilog.i.i ]
  %cmp3.i = icmp ne i32 %second_code.0.load510.i, 1
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %ix86_fp_comparison_codes.exit.i
  %3 = phi i1 [ true, %ix86_fp_comparison_codes.exit.i ], [ %cmp3.i, %lor.rhs.i ]
  %lor.ext.i = zext i1 %3 to i32
  %add4.i = or i32 %lor.ext.i, 2
  br label %ix86_fp_comparison_fcomi_cost.exit

ix86_fp_comparison_fcomi_cost.exit:               ; preds = %lor.lhs.false.i, %lor.end.i
  %4 = phi i32 [ %2, %lor.end.i ], [ %1, %lor.lhs.false.i ]
  %retval.0.i = phi i32 [ %add4.i, %lor.end.i ], [ 1024, %lor.lhs.false.i ]
  %5 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl.i12 = shl i32 1, %5
  %and.i13 = and i32 %shl.i12, 88
  %tobool.i14 = icmp eq i32 %and.i13, 0
  br i1 %tobool.i14, label %land.lhs.true3.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %ix86_fp_comparison_fcomi_cost.exit
  %and1.i15 = and i32 %4, 33554432
  %tobool2.i = icmp eq i32 %and1.i15, 0
  %6 = load i32* @optimize_size, align 4
  %tobool4.i = icmp ne i32 %6, 0
  %or.cond.i = or i1 %tobool2.i, %tobool4.i
  br i1 %or.cond.i, label %if.end.i16, label %ix86_fp_comparison_sahf_cost.exit

land.lhs.true3.i:                                 ; preds = %ix86_fp_comparison_fcomi_cost.exit
  %.old.i = load i32* @optimize_size, align 4, !tbaa !1
  %tobool4.old.i = icmp eq i32 %.old.i, 0
  br i1 %tobool4.old.i, label %ix86_fp_comparison_sahf_cost.exit, label %if.end.i16

if.end.i16:                                       ; preds = %land.lhs.true3.i, %land.lhs.true.i
  switch i32 %code, label %sw.default.i.i23 [
    i32 105, label %sw.epilog.i.i26
    i32 104, label %sw.epilog.i.i26
    i32 113, label %sw.epilog.i.i26
    i32 112, label %sw.epilog.i.i26
    i32 114, label %sw.epilog.i.i26
    i32 118, label %sw.epilog.i.i26
    i32 117, label %sw.epilog.i.i26
    i32 119, label %sw.epilog.i.i26
    i32 107, label %sw.bb1.i.i17
    i32 106, label %sw.bb2.i.i18
    i32 103, label %sw.bb3.i.i19
    i32 102, label %sw.bb4.i.i20
    i32 115, label %sw.bb5.i.i21
    i32 116, label %sw.bb6.i.i22
  ]

sw.bb1.i.i17:                                     ; preds = %if.end.i16
  br label %sw.epilog.i.i26

sw.bb2.i.i18:                                     ; preds = %if.end.i16
  br label %sw.epilog.i.i26

sw.bb3.i.i19:                                     ; preds = %if.end.i16
  br label %sw.epilog.i.i26

sw.bb4.i.i20:                                     ; preds = %if.end.i16
  br label %sw.epilog.i.i26

sw.bb5.i.i21:                                     ; preds = %if.end.i16
  br label %sw.epilog.i.i26

sw.bb6.i.i22:                                     ; preds = %if.end.i16
  br label %sw.epilog.i.i26

sw.default.i.i23:                                 ; preds = %if.end.i16
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i.i26:                                  ; preds = %sw.bb6.i.i22, %sw.bb5.i.i21, %sw.bb4.i.i20, %sw.bb3.i.i19, %sw.bb2.i.i18, %sw.bb1.i.i17, %if.end.i16, %if.end.i16, %if.end.i16, %if.end.i16, %if.end.i16, %if.end.i16, %if.end.i16, %if.end.i16
  %bypass_code.0.load9.i = phi i32 [ 1, %sw.bb6.i.i22 ], [ 1, %sw.bb5.i.i21 ], [ 1, %sw.bb4.i.i20 ], [ 112, %sw.bb3.i.i19 ], [ 112, %sw.bb2.i.i18 ], [ 112, %sw.bb1.i.i17 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ]
  %second_code.0.load7.i = phi i32 [ 112, %sw.bb6.i.i22 ], [ 112, %sw.bb5.i.i21 ], [ 112, %sw.bb4.i.i20 ], [ 1, %sw.bb3.i.i19 ], [ 1, %sw.bb2.i.i18 ], [ 1, %sw.bb1.i.i17 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ], [ 1, %if.end.i16 ]
  %and.i.i24 = and i32 %4, 16
  %tobool.i.i25 = icmp eq i32 %and.i.i24, 0
  br i1 %tobool.i.i25, label %lor.rhs.i29, label %ix86_fp_comparison_codes.exit.i28

ix86_fp_comparison_codes.exit.i28:                ; preds = %sw.epilog.i.i26
  %cmp.i27 = icmp eq i32 %bypass_code.0.load9.i, 1
  br i1 %cmp.i27, label %lor.rhs.i29, label %ix86_fp_comparison_sahf_cost.exit

lor.rhs.i29:                                      ; preds = %ix86_fp_comparison_codes.exit.i28, %sw.epilog.i.i26
  %second_code.0.load611.i = phi i32 [ %second_code.0.load7.i, %ix86_fp_comparison_codes.exit.i28 ], [ 1, %sw.epilog.i.i26 ]
  %cmp5.i = icmp ne i32 %second_code.0.load611.i, 1
  %phitmp.i = select i1 %cmp5.i, i32 4, i32 3
  br label %ix86_fp_comparison_sahf_cost.exit

ix86_fp_comparison_sahf_cost.exit:                ; preds = %land.lhs.true.i, %land.lhs.true3.i, %ix86_fp_comparison_codes.exit.i28, %lor.rhs.i29
  %retval.0.i30 = phi i32 [ 1024, %land.lhs.true3.i ], [ 1024, %land.lhs.true.i ], [ 4, %ix86_fp_comparison_codes.exit.i28 ], [ %phitmp.i, %lor.rhs.i29 ]
  %and.i31 = and i32 %4, 16
  %tobool.i32 = icmp eq i32 %and.i31, 0
  br i1 %tobool.i32, label %ix86_fp_comparison_arithmetics_cost.exit, label %if.end.i33

if.end.i33:                                       ; preds = %ix86_fp_comparison_sahf_cost.exit
  switch i32 %code, label %sw.default.i [
    i32 117, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 118, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 119, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 105, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 104, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 112, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 113, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 114, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 107, label %sw.bb1.i
    i32 102, label %sw.bb1.i
    i32 103, label %sw.bb1.i
    i32 115, label %sw.bb1.i
    i32 106, label %sw.bb2.i
    i32 116, label %sw.bb2.i
  ]

sw.bb1.i:                                         ; preds = %if.end.i33, %if.end.i33, %if.end.i33, %if.end.i33
  br label %ix86_fp_comparison_arithmetics_cost.exit

sw.bb2.i:                                         ; preds = %if.end.i33, %if.end.i33
  br label %ix86_fp_comparison_arithmetics_cost.exit

sw.default.i:                                     ; preds = %if.end.i33
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7422, i8* getelementptr inbounds ([36 x i8]* @__FUNCTION__.ix86_fp_comparison_arithmetics_cost, i64 0, i64 0)) #8
  unreachable

ix86_fp_comparison_arithmetics_cost.exit:         ; preds = %ix86_fp_comparison_sahf_cost.exit, %if.end.i33, %if.end.i33, %if.end.i33, %if.end.i33, %if.end.i33, %if.end.i33, %if.end.i33, %if.end.i33, %sw.bb1.i, %sw.bb2.i
  %retval.0.i34 = phi i32 [ 6, %sw.bb2.i ], [ 5, %sw.bb1.i ], [ 4, %ix86_fp_comparison_sahf_cost.exit ], [ 4, %if.end.i33 ], [ 4, %if.end.i33 ], [ 4, %if.end.i33 ], [ 4, %if.end.i33 ], [ 4, %if.end.i33 ], [ 4, %if.end.i33 ], [ 4, %if.end.i33 ], [ 4, %if.end.i33 ]
  %cmp = icmp ugt i32 %retval.0.i34, %retval.0.i30
  %call1.call2 = select i1 %cmp, i32 %retval.0.i30, i32 %retval.0.i34
  %cmp3 = icmp sgt i32 %call1.call2, %retval.0.i
  %min.1 = select i1 %cmp3, i32 %retval.0.i, i32 %call1.call2
  ret i32 %min.1
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @ix86_expand_compare(i32 %code, %struct.rtx_def** %second_test, %struct.rtx_def** %bypass_test) #1 {
entry:
  %0 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %1 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %tobool = icmp eq %struct.rtx_def** %second_test, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %second_test, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %tobool1 = icmp eq %struct.rtx_def** %bypass_test, null
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %bypass_test, align 8, !tbaa !6
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then2
  %2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom12 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom12
  %3 = load i32* %arrayidx, align 4, !tbaa !5
  %cmp = icmp eq i32 %3, 2
  br i1 %cmp, label %if.then4, label %if.end.i.i

if.then4:                                         ; preds = %if.end3
  %call = tail call fastcc %struct.rtx_def* @ix86_expand_fp_compare(i32 %code, %struct.rtx_def* %0, %struct.rtx_def* %1, %struct.rtx_def* null, %struct.rtx_def** %second_test, %struct.rtx_def** %bypass_test)
  br label %if.end6

if.end.i.i:                                       ; preds = %if.end3
  switch i32 %code, label %sw.default.i.i [
    i32 103, label %ix86_expand_int_compare.exit
    i32 102, label %ix86_expand_int_compare.exit
    i32 108, label %sw.bb1.i.i
    i32 109, label %sw.bb1.i.i
    i32 111, label %sw.bb1.i.i
    i32 110, label %sw.bb1.i.i
    i32 104, label %sw.bb2.i.i
    i32 107, label %sw.bb2.i.i
    i32 105, label %sw.bb5.i.i
    i32 106, label %sw.bb5.i.i
    i32 48, label %sw.bb9.i.i
  ]

sw.bb1.i.i:                                       ; preds = %if.end.i.i, %if.end.i.i, %if.end.i.i, %if.end.i.i
  br label %ix86_expand_int_compare.exit

sw.bb2.i.i:                                       ; preds = %if.end.i.i, %if.end.i.i
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp3.i.i = icmp eq %struct.rtx_def* %4, %1
  %..i.i = select i1 %cmp3.i.i, i32 54, i32 53
  br label %ix86_expand_int_compare.exit

sw.bb5.i.i:                                       ; preds = %if.end.i.i, %if.end.i.i
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp6.i.i = icmp eq %struct.rtx_def* %5, %1
  %.12.i.i = select i1 %cmp6.i.i, i32 55, i32 53
  br label %ix86_expand_int_compare.exit

sw.bb9.i.i:                                       ; preds = %if.end.i.i
  br label %ix86_expand_int_compare.exit

sw.default.i.i:                                   ; preds = %if.end.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7200, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.ix86_cc_mode, i64 0, i64 0)) #8
  unreachable

ix86_expand_int_compare.exit:                     ; preds = %if.end.i.i, %if.end.i.i, %sw.bb1.i.i, %sw.bb2.i.i, %sw.bb5.i.i, %sw.bb9.i.i
  %retval.0.i.i = phi i32 [ 52, %sw.bb9.i.i ], [ 52, %sw.bb1.i.i ], [ 56, %if.end.i.i ], [ 56, %if.end.i.i ], [ %..i.i, %sw.bb2.i.i ], [ %.12.i.i, %sw.bb5.i.i ]
  %call2.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 %retval.0.i.i, i32 17) #5
  %call3.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 %retval.0.i.i, %struct.rtx_def* %0, %struct.rtx_def* %1) #5
  %call4.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call2.i, %struct.rtx_def* %call3.i) #5
  %call5.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call4.i) #5
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call6.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code, i32 0, %struct.rtx_def* %call2.i, %struct.rtx_def* %6) #5
  br label %if.end6

if.end6:                                          ; preds = %ix86_expand_int_compare.exit, %if.then4
  %ret.0 = phi %struct.rtx_def* [ %call, %if.then4 ], [ %call6.i, %ix86_expand_int_compare.exit ]
  ret %struct.rtx_def* %ret.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ix86_expand_fp_compare(i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %scratch, %struct.rtx_def** %second_test, %struct.rtx_def** %bypass_test) #1 {
entry:
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8, !tbaa !6
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8, !tbaa !6
  %call = tail call fastcc i32 @ix86_fp_comparison_cost(i32 %code)
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %0, 4
  %1 = and i32 %and.i, 1
  %2 = add i32 %1, 57
  %call8 = call fastcc i32 @ix86_prepare_fp_compare_args(i32 %code, %struct.rtx_def** %op0.addr, %struct.rtx_def** %op1.addr)
  %tobool = icmp ne %struct.rtx_def** %second_test, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %second_test, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool9 = icmp ne %struct.rtx_def** %bypass_test, null
  br i1 %tobool9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %bypass_test, align 8, !tbaa !6
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end
  switch i32 %call8, label %sw.default.i245 [
    i32 105, label %sw.epilog.i
    i32 104, label %sw.epilog.i
    i32 113, label %sw.epilog.i
    i32 112, label %sw.epilog.i
    i32 114, label %sw.epilog.i
    i32 118, label %sw.epilog.i
    i32 117, label %sw.epilog.i
    i32 119, label %sw.epilog.i
    i32 107, label %sw.bb1.i243
    i32 106, label %sw.bb2.i244
    i32 103, label %sw.bb3.i
    i32 102, label %sw.bb4.i
    i32 115, label %sw.bb5.i
    i32 116, label %sw.bb6.i
  ]

sw.bb1.i243:                                      ; preds = %if.end11
  br label %sw.epilog.i

sw.bb2.i244:                                      ; preds = %if.end11
  br label %sw.epilog.i

sw.bb3.i:                                         ; preds = %if.end11
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.end11
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.end11
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %if.end11
  br label %sw.epilog.i

sw.default.i245:                                  ; preds = %if.end11
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i244, %sw.bb1.i243, %if.end11, %if.end11, %if.end11, %if.end11, %if.end11, %if.end11, %if.end11, %if.end11
  %bypass_code.0.load255 = phi i32 [ 1, %sw.bb6.i ], [ 1, %sw.bb5.i ], [ 1, %sw.bb4.i ], [ 112, %sw.bb3.i ], [ 112, %sw.bb2.i244 ], [ 112, %sw.bb1.i243 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ]
  %first_code.0.load253 = phi i32 [ 105, %sw.bb6.i ], [ 104, %sw.bb5.i ], [ 119, %sw.bb4.i ], [ 114, %sw.bb3.i ], [ 117, %sw.bb2.i244 ], [ 118, %sw.bb1.i243 ], [ %call8, %if.end11 ], [ %call8, %if.end11 ], [ %call8, %if.end11 ], [ %call8, %if.end11 ], [ %call8, %if.end11 ], [ %call8, %if.end11 ], [ %call8, %if.end11 ], [ %call8, %if.end11 ]
  %second_code.0.load252 = phi i32 [ 112, %sw.bb6.i ], [ 112, %sw.bb5.i ], [ 112, %sw.bb4.i ], [ 1, %sw.bb3.i ], [ 1, %sw.bb2.i244 ], [ 1, %sw.bb1.i243 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ], [ 1, %if.end11 ]
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and.i246 = and i32 %3, 16
  %tobool.i247 = icmp eq i32 %and.i246, 0
  br i1 %tobool.i247, label %ix86_fp_comparison_arithmetics_cost.exit, label %ix86_fp_comparison_codes.exit

ix86_fp_comparison_codes.exit:                    ; preds = %sw.epilog.i
  %cmp = icmp eq i32 %bypass_code.0.load255, 1
  %or.cond = or i1 %cmp, %tobool9
  br i1 %or.cond, label %land.lhs.true, label %if.else51

land.lhs.true:                                    ; preds = %ix86_fp_comparison_codes.exit
  %cmp13 = icmp eq i32 %second_code.0.load252, 1
  %or.cond177 = or i1 %cmp13, %tobool
  br i1 %or.cond177, label %land.lhs.true16, label %if.else51

land.lhs.true16:                                  ; preds = %land.lhs.true
  br i1 %tobool.i247, label %ix86_fp_comparison_arithmetics_cost.exit, label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true16
  switch i32 %call8, label %sw.default.i [
    i32 117, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 118, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 119, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 105, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 104, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 112, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 113, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 114, label %ix86_fp_comparison_arithmetics_cost.exit
    i32 107, label %sw.bb1.i
    i32 102, label %sw.bb1.i
    i32 103, label %sw.bb1.i
    i32 115, label %sw.bb1.i
    i32 106, label %sw.bb2.i
    i32 116, label %sw.bb2.i
  ]

sw.bb1.i:                                         ; preds = %if.end.i, %if.end.i, %if.end.i, %if.end.i
  br label %ix86_fp_comparison_arithmetics_cost.exit

sw.bb2.i:                                         ; preds = %if.end.i, %if.end.i
  br label %ix86_fp_comparison_arithmetics_cost.exit

sw.default.i:                                     ; preds = %if.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7422, i8* getelementptr inbounds ([36 x i8]* @__FUNCTION__.ix86_fp_comparison_arithmetics_cost, i64 0, i64 0)) #8
  unreachable

ix86_fp_comparison_arithmetics_cost.exit:         ; preds = %sw.epilog.i, %land.lhs.true16, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %if.end.i, %sw.bb1.i, %sw.bb2.i
  %cmp260263270 = phi i1 [ %cmp, %sw.bb2.i ], [ %cmp, %sw.bb1.i ], [ %cmp, %land.lhs.true16 ], [ %cmp, %if.end.i ], [ %cmp, %if.end.i ], [ %cmp, %if.end.i ], [ %cmp, %if.end.i ], [ %cmp, %if.end.i ], [ %cmp, %if.end.i ], [ %cmp, %if.end.i ], [ %cmp, %if.end.i ], [ true, %sw.epilog.i ]
  %second_code.0.load251259264269 = phi i32 [ %second_code.0.load252, %sw.bb2.i ], [ %second_code.0.load252, %sw.bb1.i ], [ %second_code.0.load252, %land.lhs.true16 ], [ %second_code.0.load252, %if.end.i ], [ %second_code.0.load252, %if.end.i ], [ %second_code.0.load252, %if.end.i ], [ %second_code.0.load252, %if.end.i ], [ %second_code.0.load252, %if.end.i ], [ %second_code.0.load252, %if.end.i ], [ %second_code.0.load252, %if.end.i ], [ %second_code.0.load252, %if.end.i ], [ 1, %sw.epilog.i ]
  %bypass_code.0.load254258265268 = phi i32 [ %bypass_code.0.load255, %sw.bb2.i ], [ %bypass_code.0.load255, %sw.bb1.i ], [ %bypass_code.0.load255, %land.lhs.true16 ], [ %bypass_code.0.load255, %if.end.i ], [ %bypass_code.0.load255, %if.end.i ], [ %bypass_code.0.load255, %if.end.i ], [ %bypass_code.0.load255, %if.end.i ], [ %bypass_code.0.load255, %if.end.i ], [ %bypass_code.0.load255, %if.end.i ], [ %bypass_code.0.load255, %if.end.i ], [ %bypass_code.0.load255, %if.end.i ], [ 1, %sw.epilog.i ]
  %cmp13266267 = phi i1 [ %cmp13, %sw.bb2.i ], [ %cmp13, %sw.bb1.i ], [ %cmp13, %land.lhs.true16 ], [ %cmp13, %if.end.i ], [ %cmp13, %if.end.i ], [ %cmp13, %if.end.i ], [ %cmp13, %if.end.i ], [ %cmp13, %if.end.i ], [ %cmp13, %if.end.i ], [ %cmp13, %if.end.i ], [ %cmp13, %if.end.i ], [ true, %sw.epilog.i ]
  %retval.0.i = phi i32 [ 6, %sw.bb2.i ], [ 5, %sw.bb1.i ], [ 4, %land.lhs.true16 ], [ 4, %if.end.i ], [ 4, %if.end.i ], [ 4, %if.end.i ], [ 4, %if.end.i ], [ 4, %if.end.i ], [ 4, %if.end.i ], [ 4, %if.end.i ], [ 4, %if.end.i ], [ 4, %sw.epilog.i ]
  %cmp18 = icmp sgt i32 %retval.0.i, %call
  br i1 %cmp18, label %if.then19, label %if.else51

if.then19:                                        ; preds = %ix86_fp_comparison_arithmetics_cost.exit
  %4 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl = shl i32 1, %4
  %and = and i32 %shl, 104
  %and22 = and i32 %3, 327680
  %5 = or i32 %and, %and22
  %6 = icmp eq i32 %5, 0
  %7 = load %struct.rtx_def** %op0.addr, align 8, !tbaa !6
  %8 = load %struct.rtx_def** %op1.addr, align 8, !tbaa !6
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 %2, %struct.rtx_def* %7, %struct.rtx_def* %8) #5
  br i1 %6, label %if.else, label %if.then24

if.then24:                                        ; preds = %if.then19
  %call26 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %2, i32 17) #5
  %call27 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call26, %struct.rtx_def* %call29) #5
  %call28 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call27) #5
  br label %if.end40

if.else:                                          ; preds = %if.then19
  %call30 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call29) #5
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 3, %struct.rtvec_def* %call30, i32 9) #5
  %tobool32 = icmp eq %struct.rtx_def* %scratch, null
  br i1 %tobool32, label %if.then33, label %if.end35

if.then33:                                        ; preds = %if.else
  %call34 = tail call %struct.rtx_def* @gen_reg_rtx(i32 3) #5
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then33
  %scratch.addr.0 = phi %struct.rtx_def* [ %scratch, %if.else ], [ %call34, %if.then33 ]
  %call36 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %scratch.addr.0, %struct.rtx_def* %call31) #5
  %call37 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call36) #5
  %call38 = tail call %struct.rtx_def* @gen_x86_sahf_1(%struct.rtx_def* %scratch.addr.0) #5
  %call39 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call38) #5
  br label %if.end40

if.end40:                                         ; preds = %if.end35, %if.then24
  br i1 %cmp260263270, label %if.end45, label %if.then42

if.then42:                                        ; preds = %if.end40
  %call43 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %2, i32 17) #5
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call44 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bypass_code.0.load254258265268, i32 0, %struct.rtx_def* %call43, %struct.rtx_def* %9) #5
  store %struct.rtx_def* %call44, %struct.rtx_def** %bypass_test, align 8, !tbaa !6
  br label %if.end45

if.end45:                                         ; preds = %if.end40, %if.then42
  br i1 %cmp13266267, label %if.end174, label %if.then47

if.then47:                                        ; preds = %if.end45
  %call48 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %2, i32 17) #5
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call49 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %second_code.0.load251259264269, i32 0, %struct.rtx_def* %call48, %struct.rtx_def* %10) #5
  store %struct.rtx_def* %call49, %struct.rtx_def** %second_test, align 8, !tbaa !6
  br label %if.end174

if.else51:                                        ; preds = %land.lhs.true, %ix86_fp_comparison_codes.exit, %ix86_fp_comparison_arithmetics_cost.exit
  %11 = load %struct.rtx_def** %op0.addr, align 8, !tbaa !6
  %12 = load %struct.rtx_def** %op1.addr, align 8, !tbaa !6
  %call52 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 74, i32 %2, %struct.rtx_def* %11, %struct.rtx_def* %12) #5
  %call53 = tail call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 1, %struct.rtx_def* %call52) #5
  %call54 = tail call %struct.rtx_def* @gen_rtx_fmt_Ei(i32 42, i32 3, %struct.rtvec_def* %call53, i32 9) #5
  %tobool55 = icmp eq %struct.rtx_def* %scratch, null
  br i1 %tobool55, label %if.then56, label %if.end58

if.then56:                                        ; preds = %if.else51
  %call57 = tail call %struct.rtx_def* @gen_reg_rtx(i32 3) #5
  br label %if.end58

if.end58:                                         ; preds = %if.else51, %if.then56
  %scratch.addr.1 = phi %struct.rtx_def* [ %scratch, %if.else51 ], [ %call57, %if.then56 ]
  %call59 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call54) #5
  %call60 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call59) #5
  switch i32 %call8, label %sw.default [
    i32 113, label %sw.bb170
    i32 112, label %sw.bb166
    i32 116, label %lor.lhs.false62
    i32 105, label %if.then65
    i32 118, label %if.else91
    i32 107, label %land.lhs.true81
    i32 115, label %lor.lhs.false98
    i32 104, label %if.then101
    i32 117, label %if.else127
    i32 106, label %land.lhs.true115
    i32 114, label %if.else144
    i32 103, label %land.lhs.true134
    i32 102, label %land.lhs.true151
    i32 119, label %if.else161
  ]

lor.lhs.false62:                                  ; preds = %if.end58
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %and63 = and i32 %13, 16
  %tobool64 = icmp eq i32 %and63, 0
  br i1 %tobool64, label %if.then65, label %if.else69

if.then65:                                        ; preds = %if.end58, %lor.lhs.false62
  %call66 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 69) #5
  %call67 = tail call %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call66) #5
  %call68 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call67) #5
  br label %if.end174

if.else69:                                        ; preds = %lor.lhs.false62
  %call70 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 69) #5
  %call71 = tail call %struct.rtx_def* @gen_andqi_ext_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call70) #5
  %call72 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call71) #5
  %14 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %call73 = tail call %struct.rtx_def* @gen_addqi_ext_1(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %14) #5
  %call74 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call73) #5
  %call75 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 68) #5
  %call76 = tail call %struct.rtx_def* @gen_cmpqi_ext_3(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call75) #5
  %call77 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call76) #5
  br label %if.end174

land.lhs.true81:                                  ; preds = %if.end58
  %15 = load i32* @target_flags, align 4, !tbaa !1
  %and82 = and i32 %15, 16
  %tobool83 = icmp eq i32 %and82, 0
  br i1 %tobool83, label %if.else91, label %if.then84

if.then84:                                        ; preds = %land.lhs.true81
  %call85 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 69) #5
  %call86 = tail call %struct.rtx_def* @gen_andqi_ext_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call85) #5
  %call87 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call86) #5
  %call88 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #5
  %call89 = tail call %struct.rtx_def* @gen_cmpqi_ext_3(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call88) #5
  %call90 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call89) #5
  br label %if.end174

if.else91:                                        ; preds = %if.end58, %land.lhs.true81
  %call92 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #5
  %call93 = tail call %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call92) #5
  %call94 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call93) #5
  br label %if.end174

lor.lhs.false98:                                  ; preds = %if.end58
  %16 = load i32* @target_flags, align 4, !tbaa !1
  %and99 = and i32 %16, 16
  %tobool100 = icmp eq i32 %and99, 0
  br i1 %tobool100, label %if.then101, label %if.else105

if.then101:                                       ; preds = %if.end58, %lor.lhs.false98
  %call102 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 5) #5
  %call103 = tail call %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call102) #5
  %call104 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call103) #5
  br label %if.end174

if.else105:                                       ; preds = %lor.lhs.false98
  %call106 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 69) #5
  %call107 = tail call %struct.rtx_def* @gen_andqi_ext_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call106) #5
  %call108 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call107) #5
  %call109 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #5
  %call110 = tail call %struct.rtx_def* @gen_xorqi_cc_ext_1(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call109) #5
  %call111 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call110) #5
  br label %if.end174

land.lhs.true115:                                 ; preds = %if.end58
  %17 = load i32* @target_flags, align 4, !tbaa !1
  %and116 = and i32 %17, 16
  %tobool117 = icmp eq i32 %and116, 0
  br i1 %tobool117, label %if.else127, label %if.then118

if.then118:                                       ; preds = %land.lhs.true115
  %call119 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 69) #5
  %call120 = tail call %struct.rtx_def* @gen_andqi_ext_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call119) #5
  %call121 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call120) #5
  %18 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %call122 = tail call %struct.rtx_def* @gen_addqi_ext_1(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %18) #5
  %call123 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call122) #5
  %call124 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 64) #5
  %call125 = tail call %struct.rtx_def* @gen_cmpqi_ext_3(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call124) #5
  %call126 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call125) #5
  br label %if.end174

if.else127:                                       ; preds = %if.end58, %land.lhs.true115
  %call128 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 69) #5
  %call129 = tail call %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call128) #5
  %call130 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call129) #5
  br label %if.end174

land.lhs.true134:                                 ; preds = %if.end58
  %19 = load i32* @target_flags, align 4, !tbaa !1
  %and135 = and i32 %19, 16
  %tobool136 = icmp eq i32 %and135, 0
  br i1 %tobool136, label %if.else144, label %if.then137

if.then137:                                       ; preds = %land.lhs.true134
  %call138 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 69) #5
  %call139 = tail call %struct.rtx_def* @gen_andqi_ext_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call138) #5
  %call140 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call139) #5
  %call141 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 64) #5
  %call142 = tail call %struct.rtx_def* @gen_cmpqi_ext_3(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call141) #5
  %call143 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call142) #5
  br label %if.end174

if.else144:                                       ; preds = %if.end58, %land.lhs.true134
  %call145 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 64) #5
  %call146 = tail call %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call145) #5
  %call147 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call146) #5
  br label %if.end174

land.lhs.true151:                                 ; preds = %if.end58
  %20 = load i32* @target_flags, align 4, !tbaa !1
  %and152 = and i32 %20, 16
  %tobool153 = icmp eq i32 %and152, 0
  br i1 %tobool153, label %if.else161, label %if.then154

if.then154:                                       ; preds = %land.lhs.true151
  %call155 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 69) #5
  %call156 = tail call %struct.rtx_def* @gen_andqi_ext_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call155) #5
  %call157 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call156) #5
  %call158 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 64) #5
  %call159 = tail call %struct.rtx_def* @gen_xorqi_cc_ext_1(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call158) #5
  %call160 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call159) #5
  br label %if.end174

if.else161:                                       ; preds = %if.end58, %land.lhs.true151
  %call162 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 64) #5
  %call163 = tail call %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call162) #5
  %call164 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call163) #5
  br label %if.end174

sw.bb166:                                         ; preds = %if.end58
  %call167 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #5
  %call168 = tail call %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call167) #5
  %call169 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call168) #5
  br label %if.end174

sw.bb170:                                         ; preds = %if.end58
  %call171 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #5
  %call172 = tail call %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def* %scratch.addr.1, %struct.rtx_def* %call171) #5
  %call173 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call172) #5
  br label %if.end174

sw.default:                                       ; preds = %if.end58
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7655, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.ix86_expand_fp_compare, i64 0, i64 0)) #8
  unreachable

if.end174:                                        ; preds = %if.end45, %if.else144, %if.then137, %sw.bb166, %sw.bb170, %if.else69, %if.then65, %if.else91, %if.then84, %if.else105, %if.then101, %if.else127, %if.then118, %if.else161, %if.then154, %if.then47
  %intcmp_mode.0 = phi i32 [ %2, %if.then47 ], [ %2, %if.end45 ], [ 55, %sw.bb170 ], [ 55, %sw.bb166 ], [ 55, %if.then154 ], [ 55, %if.else161 ], [ 52, %if.then137 ], [ 55, %if.else144 ], [ 52, %if.then118 ], [ 55, %if.else127 ], [ 55, %if.then101 ], [ 55, %if.else105 ], [ 52, %if.then84 ], [ 55, %if.else91 ], [ 55, %if.then65 ], [ 52, %if.else69 ]
  %code.addr.0 = phi i32 [ %first_code.0.load253, %if.then47 ], [ %first_code.0.load253, %if.end45 ], [ 103, %sw.bb170 ], [ 102, %sw.bb166 ], [ 102, %if.then154 ], [ 103, %if.else161 ], [ 103, %if.then137 ], [ 102, %if.else144 ], [ 111, %if.then118 ], [ 102, %if.else127 ], [ 103, %if.then101 ], [ 102, %if.else105 ], [ 103, %if.then84 ], [ 102, %if.else91 ], [ 103, %if.then65 ], [ 108, %if.else69 ]
  %call175 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %intcmp_mode.0, i32 17) #5
  %21 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call176 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code.addr.0, i32 0, %struct.rtx_def* %call175, %struct.rtx_def* %21) #5
  ret %struct.rtx_def* %call176
}

; Function Attrs: nounwind uwtable
define zeroext i1 @ix86_fp_jump_nontrivial_p(i32 %code) #1 {
entry:
  %0 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl = shl i32 1, %0
  %and = and i32 %shl, 104
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %lor.lhs.false, label %if.end

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and1 = and i32 %1, 327680
  %cmp = icmp eq i32 %and1, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false, %entry
  switch i32 %code, label %sw.default.i [
    i32 105, label %sw.epilog.i
    i32 104, label %sw.epilog.i
    i32 113, label %sw.epilog.i
    i32 112, label %sw.epilog.i
    i32 114, label %sw.epilog.i
    i32 118, label %sw.epilog.i
    i32 117, label %sw.epilog.i
    i32 119, label %sw.epilog.i
    i32 107, label %sw.bb1.i
    i32 106, label %sw.bb2.i
    i32 103, label %sw.bb3.i
    i32 102, label %sw.bb4.i
    i32 115, label %sw.bb5.i
    i32 116, label %sw.bb6.i
  ]

sw.bb1.i:                                         ; preds = %if.end
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %if.end
  br label %sw.epilog.i

sw.bb3.i:                                         ; preds = %if.end
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.end
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.end
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %if.end
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %bypass_code.0.load7 = phi i32 [ 1, %sw.bb6.i ], [ 1, %sw.bb5.i ], [ 1, %sw.bb4.i ], [ 112, %sw.bb3.i ], [ 112, %sw.bb2.i ], [ 112, %sw.bb1.i ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ]
  %second_code.0.load5 = phi i32 [ 112, %sw.bb6.i ], [ 112, %sw.bb5.i ], [ 112, %sw.bb4.i ], [ 1, %sw.bb3.i ], [ 1, %sw.bb2.i ], [ 1, %sw.bb1.i ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ], [ 1, %if.end ]
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = and i32 %2, 16
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %lor.rhs, label %ix86_fp_comparison_codes.exit

ix86_fp_comparison_codes.exit:                    ; preds = %sw.epilog.i
  %cmp2 = icmp eq i32 %bypass_code.0.load7, 1
  br i1 %cmp2, label %lor.rhs, label %return

lor.rhs:                                          ; preds = %sw.epilog.i, %ix86_fp_comparison_codes.exit
  %second_code.0.load49 = phi i32 [ %second_code.0.load5, %ix86_fp_comparison_codes.exit ], [ 1, %sw.epilog.i ]
  %cmp3 = icmp ne i32 %second_code.0.load49, 1
  br label %return

return:                                           ; preds = %lor.rhs, %ix86_fp_comparison_codes.exit, %lor.lhs.false
  %retval.0 = phi i1 [ true, %lor.lhs.false ], [ true, %ix86_fp_comparison_codes.exit ], [ %cmp3, %lor.rhs ]
  ret i1 %retval.0
}

; Function Attrs: nounwind uwtable
define void @ix86_expand_branch(i32 %code, %struct.rtx_def* %label) #1 {
entry:
  %lo = alloca [2 x %struct.rtx_def*], align 16
  %hi = alloca [2 x %struct.rtx_def*], align 16
  %0 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  switch i32 %bf.clear, label %sw.default192 [
    i32 2, label %simple
    i32 3, label %simple
    i32 4, label %simple
    i32 15, label %sw.bb5
    i32 16, label %sw.bb5
    i32 17, label %sw.bb5
    i32 18, label %sw.bb5
    i32 5, label %sw.bb41
  ]

simple:                                           ; preds = %sw.bb41, %entry, %entry, %entry
  %call = tail call %struct.rtx_def* @ix86_expand_compare(i32 %code, %struct.rtx_def** null, %struct.rtx_def** null)
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %label) #5
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1, %struct.rtx_def* %2) #5
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call2) #5
  %call4 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call3) #5
  br label %return

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry
  %call11 = tail call fastcc i32 @ix86_prepare_fp_compare_args(i32 %code, %struct.rtx_def** @ix86_compare_op0, %struct.rtx_def** @ix86_compare_op1)
  switch i32 %call11, label %sw.default.i [
    i32 105, label %sw.epilog.i
    i32 104, label %sw.epilog.i
    i32 113, label %sw.epilog.i
    i32 112, label %sw.epilog.i
    i32 114, label %sw.epilog.i
    i32 118, label %sw.epilog.i
    i32 117, label %sw.epilog.i
    i32 119, label %sw.epilog.i
    i32 107, label %sw.bb1.i
    i32 106, label %sw.bb2.i
    i32 103, label %sw.bb3.i
    i32 102, label %sw.bb4.i
    i32 115, label %sw.bb5.i
    i32 116, label %sw.bb6.i
  ]

sw.bb1.i:                                         ; preds = %sw.bb5
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %sw.bb5
  br label %sw.epilog.i

sw.bb3.i:                                         ; preds = %sw.bb5
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %sw.bb5
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %sw.bb5
  br label %sw.epilog.i

sw.bb6.i:                                         ; preds = %sw.bb5
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %sw.bb5
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %sw.bb5, %sw.bb5, %sw.bb5, %sw.bb5, %sw.bb5, %sw.bb5, %sw.bb5, %sw.bb5
  %bypass_code.0.load235 = phi i1 [ true, %sw.bb6.i ], [ true, %sw.bb5.i ], [ true, %sw.bb4.i ], [ false, %sw.bb3.i ], [ false, %sw.bb2.i ], [ false, %sw.bb1.i ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ]
  %second_code.0.load233 = phi i1 [ false, %sw.bb6.i ], [ false, %sw.bb5.i ], [ false, %sw.bb4.i ], [ true, %sw.bb3.i ], [ true, %sw.bb2.i ], [ true, %sw.bb1.i ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ], [ true, %sw.bb5 ]
  %4 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = and i32 %4, 16
  %tobool.i = icmp eq i32 %and.i, 0
  %cmp12245 = and i1 %bypass_code.0.load235, %second_code.0.load233
  %or.cond = or i1 %tobool.i, %cmp12245
  br i1 %or.cond, label %land.lhs.true13, label %if.else

land.lhs.true13:                                  ; preds = %sw.epilog.i
  %5 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl = shl i32 1, %5
  %and = and i32 %shl, 104
  %and14 = and i32 %4, 327680
  %6 = or i32 %and, %and14
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true13
  %8 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %9 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %label) #5
  %10 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  tail call void @ix86_split_fp_branch(i32 %call11, %struct.rtx_def* %8, %struct.rtx_def* %9, %struct.rtx_def* %call16, %struct.rtx_def* %10, %struct.rtx_def* null)
  br label %return

if.else:                                          ; preds = %land.lhs.true13, %sw.epilog.i
  %11 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %12 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %call11, i32 0, %struct.rtx_def* %11, %struct.rtx_def* %12) #5
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %label) #5
  %13 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %call17, %struct.rtx_def* %call18, %struct.rtx_def* %13) #5
  %14 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %14, %struct.rtx_def* %call19) #5
  %call21 = tail call i32 @ix86_use_fcomi_compare(i32 %call11)
  %tobool22 = icmp ne i32 %call21, 0
  %15 = zext i1 %tobool22 to i32
  %add = sub i32 4, %15
  %call23 = tail call %struct.rtvec_def* @rtvec_alloc(i32 %add) #5
  %arrayidx = getelementptr inbounds %struct.rtvec_def* %call23, i64 0, i32 1, i64 0
  store %struct.rtx_def* %call20, %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call24 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 18) #5
  %call25 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call24) #5
  %arrayidx27 = getelementptr inbounds %struct.rtvec_def* %call23, i64 0, i32 1, i64 1
  store %struct.rtx_def* %call25, %struct.rtx_def** %arrayidx27, align 8, !tbaa !6
  %call28 = tail call %struct.rtx_def* @gen_rtx_REG(i32 57, i32 17) #5
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call28) #5
  %arrayidx31 = getelementptr inbounds %struct.rtvec_def* %call23, i64 0, i32 1, i64 2
  store %struct.rtx_def* %call29, %struct.rtx_def** %arrayidx31, align 8, !tbaa !6
  br i1 %tobool22, label %if.end, label %if.then33

if.then33:                                        ; preds = %if.else
  %call34 = tail call %struct.rtx_def* @gen_rtx_fmt_0(i32 62, i32 3) #5
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call34) #5
  %arrayidx37 = getelementptr inbounds %struct.rtvec_def* %call23, i64 0, i32 1, i64 3
  store %struct.rtx_def* %call35, %struct.rtx_def** %arrayidx37, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then33, %if.else
  %call38 = tail call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call23) #5
  %call39 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call38) #5
  br label %return

sw.bb41:                                          ; preds = %entry
  %16 = load i32* @target_flags, align 4, !tbaa !1
  %and42 = and i32 %16, 33554432
  %tobool43 = icmp eq i32 %and42, 0
  br i1 %tobool43, label %if.end45, label %simple

if.end45:                                         ; preds = %sw.bb41
  %bf.clear53 = and i32 %bf.load, 65535
  switch i32 %bf.clear53, label %if.end117 [
    i32 67, label %land.lhs.true83
    i32 68, label %land.lhs.true83
    i32 54, label %land.lhs.true83
    i32 55, label %land.lhs.true83
    i32 58, label %land.lhs.true83
    i32 134, label %land.lhs.true83
    i32 56, label %land.lhs.true83
    i32 140, label %land.lhs.true83
  ]

land.lhs.true83:                                  ; preds = %if.end45, %if.end45, %if.end45, %if.end45, %if.end45, %if.end45, %if.end45, %if.end45
  %17 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load84 = load i32* %18, align 8
  %bf.clear85 = and i32 %bf.load84, 65535
  switch i32 %bf.clear85, label %if.then115 [
    i32 67, label %if.end117
    i32 68, label %if.end117
    i32 54, label %if.end117
    i32 55, label %if.end117
    i32 58, label %if.end117
    i32 134, label %if.end117
    i32 56, label %if.end117
    i32 140, label %if.end117
  ]

if.then115:                                       ; preds = %land.lhs.true83
  store %struct.rtx_def* %17, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  store %struct.rtx_def* %0, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call116 = tail call i32 @swap_condition(i32 %code) #5
  br label %if.end117

if.end117:                                        ; preds = %land.lhs.true83, %land.lhs.true83, %land.lhs.true83, %land.lhs.true83, %land.lhs.true83, %land.lhs.true83, %land.lhs.true83, %land.lhs.true83, %if.end45, %if.then115
  %code.addr.0 = phi i32 [ %code, %land.lhs.true83 ], [ %call116, %if.then115 ], [ %code, %if.end45 ], [ %code, %land.lhs.true83 ], [ %code, %land.lhs.true83 ], [ %code, %land.lhs.true83 ], [ %code, %land.lhs.true83 ], [ %code, %land.lhs.true83 ], [ %code, %land.lhs.true83 ], [ %code, %land.lhs.true83 ]
  %arraydecay = getelementptr inbounds [2 x %struct.rtx_def*]* %lo, i64 0, i64 0
  %arraydecay118 = getelementptr inbounds [2 x %struct.rtx_def*]* %hi, i64 0, i64 0
  call void @split_di(%struct.rtx_def** @ix86_compare_op0, i32 1, %struct.rtx_def** %arraydecay, %struct.rtx_def** %arraydecay118)
  %add.ptr121 = getelementptr inbounds [2 x %struct.rtx_def*]* %lo, i64 0, i64 1
  %add.ptr123 = getelementptr inbounds [2 x %struct.rtx_def*]* %hi, i64 0, i64 1
  call void @split_di(%struct.rtx_def** @ix86_compare_op1, i32 1, %struct.rtx_def** %add.ptr121, %struct.rtx_def** %add.ptr123)
  %19 = and i32 %code.addr.0, -2
  %20 = icmp eq i32 %19, 102
  br i1 %20, label %land.lhs.true127, label %if.end117.if.end153_crit_edge

if.end117.if.end153_crit_edge:                    ; preds = %if.end117
  %.pre248 = load %struct.rtx_def** %add.ptr123, align 8, !tbaa !6
  br label %if.end153

land.lhs.true127:                                 ; preds = %if.end117
  %21 = load i32* @optimize_size, align 4, !tbaa !1
  %tobool128 = icmp eq i32 %21, 0
  %.pre = load %struct.rtx_def** %add.ptr123, align 8, !tbaa !6
  %.pre246 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br i1 %tobool128, label %if.then135, label %lor.lhs.false129

lor.lhs.false129:                                 ; preds = %land.lhs.true127
  %cmp131 = icmp eq %struct.rtx_def* %.pre, %.pre246
  %22 = load %struct.rtx_def** %add.ptr121, align 8
  %cmp134 = icmp eq %struct.rtx_def* %22, %.pre246
  %or.cond242 = or i1 %cmp131, %cmp134
  br i1 %or.cond242, label %if.then135, label %if.end153

if.then135:                                       ; preds = %land.lhs.true127, %lor.lhs.false129
  %23 = load %struct.rtx_def** %arraydecay118, align 16, !tbaa !6
  %cmp140 = icmp eq %struct.rtx_def* %.pre, %.pre246
  br i1 %cmp140, label %if.end144, label %if.then141

if.then141:                                       ; preds = %if.then135
  %24 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !6
  %call143 = tail call %struct.rtx_def* @expand_binop(i32 4, %struct.optab* %24, %struct.rtx_def* %23, %struct.rtx_def* %.pre, %struct.rtx_def* null, i32 0, i32 2) #5
  %.pre247 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %if.end144

if.end144:                                        ; preds = %if.then135, %if.then141
  %25 = phi %struct.rtx_def* [ %.pre247, %if.then141 ], [ %.pre246, %if.then135 ]
  %xor1.0 = phi %struct.rtx_def* [ %call143, %if.then141 ], [ %23, %if.then135 ]
  %26 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  %27 = load %struct.rtx_def** %add.ptr121, align 8, !tbaa !6
  %cmp147 = icmp eq %struct.rtx_def* %27, %25
  br i1 %cmp147, label %if.end151, label %if.then148

if.then148:                                       ; preds = %if.end144
  %28 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !6
  %call150 = tail call %struct.rtx_def* @expand_binop(i32 4, %struct.optab* %28, %struct.rtx_def* %26, %struct.rtx_def* %27, %struct.rtx_def* null, i32 0, i32 2) #5
  br label %if.end151

if.end151:                                        ; preds = %if.end144, %if.then148
  %xor0.0 = phi %struct.rtx_def* [ %call150, %if.then148 ], [ %26, %if.end144 ]
  %29 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !6
  %call152 = tail call %struct.rtx_def* @expand_binop(i32 4, %struct.optab* %29, %struct.rtx_def* %xor1.0, %struct.rtx_def* %xor0.0, %struct.rtx_def* null, i32 0, i32 2) #5
  store %struct.rtx_def* %call152, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %30 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  store %struct.rtx_def* %30, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  tail call void @ix86_expand_branch(i32 %code.addr.0, %struct.rtx_def* %label)
  br label %return

if.end153:                                        ; preds = %if.end117.if.end153_crit_edge, %lor.lhs.false129
  %31 = phi %struct.rtx_def* [ %.pre248, %if.end117.if.end153_crit_edge ], [ %.pre, %lor.lhs.false129 ]
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load155 = load i32* %32, align 8
  %bf.clear156 = and i32 %bf.load155, 65535
  %cmp157 = icmp eq i32 %bf.clear156, 54
  br i1 %cmp157, label %land.lhs.true158, label %if.end165

land.lhs.true158:                                 ; preds = %if.end153
  %33 = load %struct.rtx_def** %add.ptr121, align 8, !tbaa !6
  %34 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp160 = icmp eq %struct.rtx_def* %33, %34
  br i1 %cmp160, label %if.then161, label %if.end165

if.then161:                                       ; preds = %land.lhs.true158
  switch i32 %code.addr.0, label %if.end165 [
    i32 107, label %sw.bb162
    i32 111, label %sw.bb162
    i32 104, label %sw.bb162
    i32 108, label %sw.bb162
  ]

sw.bb162:                                         ; preds = %if.then161, %if.then161, %if.then161, %if.then161
  %35 = load %struct.rtx_def** %arraydecay118, align 16, !tbaa !6
  store %struct.rtx_def* %35, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  store %struct.rtx_def* %31, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  tail call void @ix86_expand_branch(i32 %code.addr.0, %struct.rtx_def* %label)
  br label %return

if.end165:                                        ; preds = %if.then161, %land.lhs.true158, %if.end153
  %call166 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %call167 = tail call i32 @swap_condition(i32 %code.addr.0) #5
  %call168 = tail call i32 @unsigned_condition(i32 %code.addr.0) #5
  switch i32 %code.addr.0, label %sw.default176 [
    i32 107, label %if.end182
    i32 105, label %if.end182
    i32 111, label %if.end182
    i32 109, label %if.end182
    i32 106, label %sw.bb170
    i32 104, label %sw.bb171
    i32 110, label %sw.bb172
    i32 108, label %sw.bb173
    i32 103, label %if.end182.thread
    i32 102, label %sw.bb175
  ]

sw.bb170:                                         ; preds = %if.end165
  br label %if.end182

sw.bb171:                                         ; preds = %if.end165
  br label %if.end182

sw.bb172:                                         ; preds = %if.end165
  br label %if.end182

sw.bb173:                                         ; preds = %if.end165
  br label %if.end182

sw.bb175:                                         ; preds = %if.end165
  br label %if.end182

sw.default176:                                    ; preds = %if.end165
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7855, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.ix86_expand_branch, i64 0, i64 0)) #8
  unreachable

if.end182.thread:                                 ; preds = %if.end165
  %36 = load %struct.rtx_def** %arraydecay118, align 16, !tbaa !6
  store %struct.rtx_def* %36, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  store %struct.rtx_def* %31, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  br label %if.then184

if.end182:                                        ; preds = %if.end165, %if.end165, %if.end165, %if.end165, %sw.bb170, %sw.bb171, %sw.bb172, %sw.bb173, %sw.bb175
  %code1.0.ph = phi i32 [ 102, %sw.bb175 ], [ 109, %sw.bb173 ], [ 111, %sw.bb172 ], [ 105, %sw.bb171 ], [ 107, %sw.bb170 ], [ %code.addr.0, %if.end165 ], [ %code.addr.0, %if.end165 ], [ %code.addr.0, %if.end165 ], [ %code.addr.0, %if.end165 ]
  %code2.0.ph = phi i32 [ 1, %sw.bb175 ], [ 111, %sw.bb173 ], [ 109, %sw.bb172 ], [ 107, %sw.bb171 ], [ 105, %sw.bb170 ], [ %call167, %if.end165 ], [ %call167, %if.end165 ], [ %call167, %if.end165 ], [ %call167, %if.end165 ]
  %37 = load %struct.rtx_def** %arraydecay118, align 16, !tbaa !6
  store %struct.rtx_def* %37, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  store %struct.rtx_def* %31, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  tail call void @ix86_expand_branch(i32 %code1.0.ph, %struct.rtx_def* %label)
  %cmp183 = icmp eq i32 %code2.0.ph, 1
  br i1 %cmp183, label %return.critedge, label %if.then184

if.then184:                                       ; preds = %if.end182, %if.end182.thread
  %code2.0239241 = phi i32 [ 102, %if.end182.thread ], [ %code2.0.ph, %if.end182 ]
  tail call void @ix86_expand_branch(i32 %code2.0239241, %struct.rtx_def* %call166)
  %38 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  store %struct.rtx_def* %38, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %39 = load %struct.rtx_def** %add.ptr121, align 8, !tbaa !6
  store %struct.rtx_def* %39, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  tail call void @ix86_expand_branch(i32 %call168, %struct.rtx_def* %label)
  %call190 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call166) #5
  br label %return

sw.default192:                                    ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7884, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.ix86_expand_branch, i64 0, i64 0)) #8
  unreachable

return.critedge:                                  ; preds = %if.end182
  %40 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  store %struct.rtx_def* %40, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %41 = load %struct.rtx_def** %add.ptr121, align 8, !tbaa !6
  store %struct.rtx_def* %41, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  tail call void @ix86_expand_branch(i32 %call168, %struct.rtx_def* %label)
  br label %return

return:                                           ; preds = %return.critedge, %if.then184, %if.then, %if.end, %sw.bb162, %if.end151, %simple
  ret void
}

declare %struct.rtx_def* @gen_rtx_fmt_eee(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ix86_prepare_fp_compare_args(i32 %code, %struct.rtx_def** nocapture %pop0, %struct.rtx_def** nocapture %pop1) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %1 = and i32 %0, 16
  %2 = load %struct.rtx_def** %pop0, align 8, !tbaa !6
  %3 = load %struct.rtx_def** %pop1, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %bf.clear2 = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear2, 61
  br i1 %cmp, label %land.rhs, label %land.end17

land.rhs:                                         ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !1
  %.off242 = add i32 %5, -21
  %6 = icmp ult i32 %.off242, 8
  br i1 %6, label %land.end17, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %.off243 = add i32 %5, -45
  %7 = icmp ult i32 %.off243, 8
  br label %land.end17

land.end17:                                       ; preds = %lor.rhs, %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ true, %land.rhs ], [ %7, %lor.rhs ]
  %9 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load18 = load i32* %9, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 61
  br i1 %cmp20, label %land.rhs21, label %land.end44

land.rhs21:                                       ; preds = %land.end17
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint24 = bitcast %union.rtunion_def* %arrayidx23 to i32*
  %10 = load i32* %rtuint24, align 4, !tbaa !1
  %.off = add i32 %10, -21
  %11 = icmp ult i32 %.off, 8
  br i1 %11, label %if.else, label %lor.rhs31

lor.rhs31:                                        ; preds = %land.rhs21
  %.off241 = add i32 %10, -45
  %12 = icmp ult i32 %.off241, 8
  br label %land.end44

land.end44:                                       ; preds = %lor.rhs31, %land.end17
  %13 = phi i1 [ false, %land.end17 ], [ %12, %lor.rhs31 ]
  %or192 = or i1 %8, %13
  br i1 %or192, label %if.else, label %land.lhs.true46

land.lhs.true46:                                  ; preds = %land.end44
  %cmp47 = icmp ne i32 %1, 0
  %bf.clear.off = add i32 %bf.clear, -17
  %switch = icmp ult i32 %bf.clear.off, 2
  %or.cond = or i1 %cmp47, %switch
  br i1 %or.cond, label %if.then, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %land.lhs.true46
  %call52 = tail call i32 @ix86_use_fcomi_compare(i32 %code)
  %tobool53 = icmp eq i32 %call52, 0
  br i1 %tobool53, label %lor.lhs.false51.if.else_crit_edge, label %if.then

lor.lhs.false51.if.else_crit_edge:                ; preds = %lor.lhs.false51
  %bf.load.i.pre = load i32* %4, align 8
  br label %if.else

if.then:                                          ; preds = %land.lhs.true46, %lor.lhs.false51
  %call54 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %2) #5
  %call55 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %3) #5
  br label %if.end118

if.else:                                          ; preds = %lor.lhs.false51.if.else_crit_edge, %land.rhs21, %land.end44
  %bf.load59 = phi i32 [ %bf.load.i.pre, %lor.lhs.false51.if.else_crit_edge ], [ %bf.load, %land.rhs21 ], [ %bf.load, %land.end44 ]
  %bf.clear.i = and i32 %bf.load59, 65535
  switch i32 %bf.clear.i, label %if.end [
    i32 55, label %lor.lhs.false.i
    i32 66, label %land.lhs.true62
  ]

lor.lhs.false.i:                                  ; preds = %if.else
  %bf.lshr.i = lshr i32 %bf.load59, 16
  %bf.clear2.i = and i32 %bf.lshr.i, 255
  %idxprom41.i = zext i32 %bf.clear2.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom41.i
  %14 = load i32* %arrayidx.i, align 4, !tbaa !5
  switch i32 %14, label %if.end [
    i32 2, label %if.end.i
    i32 6, label %if.end.i
    i32 8, label %if.end.i
  ]

if.end.i:                                         ; preds = %lor.lhs.false.i, %lor.lhs.false.i, %lor.lhs.false.i
  %arrayidx22.i = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom41.i
  %15 = load %struct.rtx_def** %arrayidx22.i, align 8, !tbaa !6
  %cmp23.i = icmp eq %struct.rtx_def* %15, %2
  br i1 %cmp23.i, label %lor.lhs.false58, label %if.end25.i

if.end25.i:                                       ; preds = %if.end.i
  %arrayidx30.i = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom41.i
  %16 = load %struct.rtx_def** %arrayidx30.i, align 8, !tbaa !6
  %cmp31.i = icmp eq %struct.rtx_def* %16, %2
  br i1 %cmp31.i, label %lor.lhs.false58, label %if.then69

lor.lhs.false58:                                  ; preds = %if.end25.i, %if.end.i
  %cmp61 = icmp eq i32 %bf.clear.i, 66
  br i1 %cmp61, label %land.lhs.true62, label %if.end

land.lhs.true62:                                  ; preds = %if.else, %lor.lhs.false58
  %bf.load.i195 = load i32* %9, align 8
  %bf.clear.i196 = and i32 %bf.load.i195, 65535
  switch i32 %bf.clear.i196, label %if.then69 [
    i32 55, label %lor.lhs.false.i202
    i32 66, label %if.end
  ]

lor.lhs.false.i202:                               ; preds = %land.lhs.true62
  %bf.lshr.i198 = lshr i32 %bf.load.i195, 16
  %bf.clear2.i199 = and i32 %bf.lshr.i198, 255
  %idxprom41.i200 = zext i32 %bf.clear2.i199 to i64
  %arrayidx.i201 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom41.i200
  %17 = load i32* %arrayidx.i201, align 4, !tbaa !5
  switch i32 %17, label %if.then69 [
    i32 2, label %if.end.i205
    i32 6, label %if.end.i205
    i32 8, label %if.end.i205
  ]

if.end.i205:                                      ; preds = %lor.lhs.false.i202, %lor.lhs.false.i202, %lor.lhs.false.i202
  %arrayidx22.i203 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom41.i200
  %18 = load %struct.rtx_def** %arrayidx22.i203, align 8, !tbaa !6
  %cmp23.i204 = icmp eq %struct.rtx_def* %18, %3
  br i1 %cmp23.i204, label %lor.lhs.false65, label %if.end25.i209

if.end25.i209:                                    ; preds = %if.end.i205
  %arrayidx30.i206 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom41.i200
  %19 = load %struct.rtx_def** %arrayidx30.i206, align 8, !tbaa !6
  %cmp31.i207 = icmp ne %struct.rtx_def* %19, %3
  %cmp68 = icmp eq i32 %bf.clear.i196, 66
  %or.cond248 = or i1 %cmp31.i207, %cmp68
  br i1 %or.cond248, label %if.end, label %if.then69

lor.lhs.false65:                                  ; preds = %if.end.i205
  %cmp68.old = icmp eq i32 %bf.clear.i196, 66
  br i1 %cmp68.old, label %if.end, label %if.then69

if.then69:                                        ; preds = %if.end25.i209, %land.lhs.true62, %lor.lhs.false.i202, %if.end25.i, %lor.lhs.false65
  %call70 = tail call i32 @swap_condition(i32 %code) #5
  %bf.load71.pre = load i32* %9, align 8
  br label %if.end

if.end:                                           ; preds = %if.end25.i209, %land.lhs.true62, %if.else, %lor.lhs.false.i, %if.then69, %lor.lhs.false65, %lor.lhs.false58
  %bf.load71 = phi i32 [ %bf.load71.pre, %if.then69 ], [ %bf.load59, %lor.lhs.false65 ], [ %bf.load59, %lor.lhs.false58 ], [ %bf.load59, %if.end25.i209 ], [ %bf.load59, %lor.lhs.false.i ], [ %bf.load59, %if.else ], [ %bf.load59, %land.lhs.true62 ]
  %op1.0 = phi %struct.rtx_def* [ %2, %if.then69 ], [ %3, %lor.lhs.false65 ], [ %3, %lor.lhs.false58 ], [ %3, %if.end25.i209 ], [ %3, %lor.lhs.false.i ], [ %3, %if.else ], [ %3, %land.lhs.true62 ]
  %op0.0 = phi %struct.rtx_def* [ %3, %if.then69 ], [ %2, %lor.lhs.false65 ], [ %2, %lor.lhs.false58 ], [ %2, %if.end25.i209 ], [ %2, %lor.lhs.false.i ], [ %2, %if.else ], [ %2, %land.lhs.true62 ]
  %code.addr.0 = phi i32 [ %call70, %if.then69 ], [ %code, %lor.lhs.false65 ], [ %code, %lor.lhs.false58 ], [ %code, %if.end25.i209 ], [ %code, %lor.lhs.false.i ], [ %code, %if.else ], [ %code, %land.lhs.true62 ]
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 61
  br i1 %cmp73, label %if.end76, label %if.then74

if.then74:                                        ; preds = %if.end
  %call75 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %op0.0) #5
  br label %if.end76

if.end76:                                         ; preds = %if.end, %if.then74
  %op0.1 = phi %struct.rtx_def* [ %call75, %if.then74 ], [ %op0.0, %if.end ]
  %20 = getelementptr inbounds %struct.rtx_def* %op1.0, i64 0, i32 0
  %bf.load77 = load i32* %20, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  switch i32 %bf.clear78, label %if.end118 [
    i32 55, label %lor.lhs.false.i219
    i32 54, label %if.then111
    i32 56, label %if.then111
    i32 58, label %if.then111
    i32 67, label %if.then111
    i32 68, label %if.then111
    i32 134, label %if.then111
    i32 140, label %if.then111
  ]

lor.lhs.false.i219:                               ; preds = %if.end76
  %bf.lshr.i215 = lshr i32 %bf.load77, 16
  %bf.clear2.i216 = and i32 %bf.lshr.i215, 255
  %idxprom41.i217 = zext i32 %bf.clear2.i216 to i64
  %arrayidx.i218 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom41.i217
  %21 = load i32* %arrayidx.i218, align 4, !tbaa !5
  switch i32 %21, label %if.then111 [
    i32 2, label %if.end.i222
    i32 6, label %if.end.i222
    i32 8, label %if.end.i222
  ]

if.end.i222:                                      ; preds = %lor.lhs.false.i219, %lor.lhs.false.i219, %lor.lhs.false.i219
  %arrayidx22.i220 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom41.i217
  %22 = load %struct.rtx_def** %arrayidx22.i220, align 8, !tbaa !6
  %cmp23.i221 = icmp eq %struct.rtx_def* %22, %op1.0
  br i1 %cmp23.i221, label %if.then111, label %if.end25.i226

if.end25.i226:                                    ; preds = %if.end.i222
  %arrayidx30.i223 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom41.i217
  %23 = load %struct.rtx_def** %arrayidx30.i223, align 8, !tbaa !6
  %cmp31.i224 = icmp eq %struct.rtx_def* %23, %op1.0
  br i1 %cmp31.i224, label %if.then111, label %if.else113

if.then111:                                       ; preds = %if.end76, %if.end76, %if.end76, %if.end76, %if.end76, %if.end76, %if.end76, %if.end25.i226, %lor.lhs.false.i219, %if.end.i222
  %call112 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %op1.0) #5
  br label %if.end118

if.else113:                                       ; preds = %if.end25.i226
  %call114 = tail call %struct.rtx_def* @force_const_mem(i32 %bf.clear, %struct.rtx_def* %op1.0) #5
  %call115 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call114) #5
  br label %if.end118

if.end118:                                        ; preds = %if.end76, %if.else113, %if.then111, %if.then
  %op1.1 = phi %struct.rtx_def* [ %call112, %if.then111 ], [ %call115, %if.else113 ], [ %call55, %if.then ], [ %op1.0, %if.end76 ]
  %op0.2 = phi %struct.rtx_def* [ %op0.1, %if.then111 ], [ %op0.1, %if.else113 ], [ %call54, %if.then ], [ %op0.1, %if.end76 ]
  %code.addr.1 = phi i32 [ %code.addr.0, %if.then111 ], [ %code.addr.0, %if.else113 ], [ %code, %if.then ], [ %code.addr.0, %if.end76 ]
  %call119 = tail call fastcc i32 @ix86_fp_comparison_cost(i32 %code.addr.1)
  %call120 = tail call i32 @swap_condition(i32 %code.addr.1) #5
  %call121 = tail call fastcc i32 @ix86_fp_comparison_cost(i32 %call120)
  %cmp122 = icmp sgt i32 %call119, %call121
  br i1 %cmp122, label %land.lhs.true123, label %if.end139

land.lhs.true123:                                 ; preds = %if.end118
  %24 = getelementptr inbounds %struct.rtx_def* %op1.1, i64 0, i32 0
  %bf.load124 = load i32* %24, align 8
  %bf.clear125 = and i32 %bf.load124, 65535
  %cmp126 = icmp ne i32 %bf.clear125, 61
  %25 = load i32* @no_new_pseudos, align 4
  %tobool128 = icmp ne i32 %25, 0
  %or.cond141 = and i1 %cmp126, %tobool128
  br i1 %or.cond141, label %if.end139, label %if.then129

if.then129:                                       ; preds = %land.lhs.true123
  %call132 = tail call i32 @swap_condition(i32 %code.addr.1) #5
  %bf.load133 = load i32* %24, align 8
  %bf.clear134 = and i32 %bf.load133, 65535
  %cmp135 = icmp eq i32 %bf.clear134, 61
  br i1 %cmp135, label %if.end139, label %if.then136

if.then136:                                       ; preds = %if.then129
  %call137 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear, %struct.rtx_def* %op1.1) #5
  br label %if.end139

if.end139:                                        ; preds = %if.then129, %if.then136, %land.lhs.true123, %if.end118
  %op1.2 = phi %struct.rtx_def* [ %op1.1, %land.lhs.true123 ], [ %op0.2, %if.then136 ], [ %op0.2, %if.then129 ], [ %op1.1, %if.end118 ]
  %op0.3 = phi %struct.rtx_def* [ %op0.2, %land.lhs.true123 ], [ %call137, %if.then136 ], [ %op1.1, %if.then129 ], [ %op0.2, %if.end118 ]
  %code.addr.2 = phi i32 [ %code.addr.1, %land.lhs.true123 ], [ %call132, %if.then136 ], [ %call132, %if.then129 ], [ %code.addr.1, %if.end118 ]
  store %struct.rtx_def* %op0.3, %struct.rtx_def** %pop0, align 8, !tbaa !6
  store %struct.rtx_def* %op1.2, %struct.rtx_def** %pop1, align 8, !tbaa !6
  ret i32 %code.addr.2
}

; Function Attrs: nounwind uwtable
define void @ix86_split_fp_branch(i32 %code, %struct.rtx_def* %op1, %struct.rtx_def* %op2, %struct.rtx_def* %target1, %struct.rtx_def* %target2, %struct.rtx_def* %tmp) #1 {
entry:
  %second = alloca %struct.rtx_def*, align 8
  %bypass = alloca %struct.rtx_def*, align 8
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %cmp = icmp eq %struct.rtx_def* %0, %target2
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @reverse_condition_maybe_unordered(i32 %code) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %target2.addr.0 = phi %struct.rtx_def* [ %target1, %if.then ], [ %target2, %entry ]
  %target1.addr.0 = phi %struct.rtx_def* [ %target2, %if.then ], [ %target1, %entry ]
  %code.addr.0 = phi i32 [ %call, %if.then ], [ %code, %entry ]
  %call11 = call fastcc %struct.rtx_def* @ix86_expand_fp_compare(i32 %code.addr.0, %struct.rtx_def* %op1, %struct.rtx_def* %op2, %struct.rtx_def* %tmp, %struct.rtx_def** %second, %struct.rtx_def** %bypass)
  %1 = load i32* @split_branch_probability, align 4, !tbaa !1
  %cmp12 = icmp sgt i32 %1, -1
  %2 = load %struct.rtx_def** %bypass, align 8, !tbaa !6
  br i1 %cmp12, label %if.then13, label %if.end19

if.then13:                                        ; preds = %if.end
  %tobool = icmp eq %struct.rtx_def* %2, null
  %. = select i1 %tobool, i32 -1, i32 1
  %3 = load %struct.rtx_def** %second, align 8, !tbaa !6
  %tobool16 = icmp eq %struct.rtx_def* %3, null
  %.93 = select i1 %tobool16, i32 -1, i32 1
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then13
  %bypass_probability.1 = phi i32 [ %., %if.then13 ], [ -1, %if.end ]
  %second_probability.0 = phi i32 [ %.93, %if.then13 ], [ -1, %if.end ]
  %probability.0 = phi i32 [ %1, %if.then13 ], [ -1, %if.end ]
  %cmp20 = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp20, label %if.end35, label %if.then21

if.then21:                                        ; preds = %if.end19
  %call22 = call %struct.rtx_def* @gen_label_rtx() #5
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %5 = load %struct.rtx_def** %bypass, align 8, !tbaa !6
  %call23 = call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %call22) #5
  %6 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %call24 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %5, %struct.rtx_def* %call23, %struct.rtx_def* %6) #5
  %call25 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call24) #5
  %call26 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call25) #5
  %cmp27 = icmp sgt i32 %bypass_probability.1, -1
  br i1 %cmp27, label %if.then28, label %if.end35

if.then28:                                        ; preds = %if.then21
  %conv = sext i32 %bypass_probability.1 to i64
  %call29 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #5
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call26, i64 0, i32 1, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call30 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 16, %struct.rtx_def* %call29, %struct.rtx_def* %7) #5
  %8 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %call30.c = ptrtoint %struct.rtx_def* %call30 to i64
  store i64 %call30.c, i64* %8, align 8, !tbaa !6
  br label %if.end35

if.end35:                                         ; preds = %if.end19, %if.then21, %if.then28
  %label.0 = phi %struct.rtx_def* [ %call22, %if.then28 ], [ %call22, %if.then21 ], [ null, %if.end19 ]
  %9 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %call36 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %call11, %struct.rtx_def* %target1.addr.0, %struct.rtx_def* %target2.addr.0) #5
  %call37 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %9, %struct.rtx_def* %call36) #5
  %call38 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call37) #5
  %cmp39 = icmp sgt i32 %probability.0, -1
  br i1 %cmp39, label %if.then41, label %if.end51

if.then41:                                        ; preds = %if.end35
  %conv42 = sext i32 %probability.0 to i64
  %call43 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv42) #5
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %call38, i64 0, i32 1, i64 6
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx46, align 8, !tbaa !6
  %call47 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 16, %struct.rtx_def* %call43, %struct.rtx_def* %10) #5
  %11 = getelementptr inbounds %union.rtunion_def* %arrayidx45, i64 0, i32 0
  %call47.c = ptrtoint %struct.rtx_def* %call47 to i64
  store i64 %call47.c, i64* %11, align 8, !tbaa !6
  br label %if.end51

if.end51:                                         ; preds = %if.then41, %if.end35
  %12 = load %struct.rtx_def** %second, align 8, !tbaa !6
  %cmp52 = icmp eq %struct.rtx_def* %12, null
  br i1 %cmp52, label %if.end71, label %if.then54

if.then54:                                        ; preds = %if.end51
  %13 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %call55 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %12, %struct.rtx_def* %target1.addr.0, %struct.rtx_def* %target2.addr.0) #5
  %call56 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %13, %struct.rtx_def* %call55) #5
  %call57 = call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call56) #5
  %cmp58 = icmp sgt i32 %second_probability.0, -1
  br i1 %cmp58, label %if.then60, label %if.end71

if.then60:                                        ; preds = %if.then54
  %conv61 = sext i32 %second_probability.0 to i64
  %call62 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv61) #5
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %call57, i64 0, i32 1, i64 6
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx65, align 8, !tbaa !6
  %call66 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 16, %struct.rtx_def* %call62, %struct.rtx_def* %14) #5
  %15 = getelementptr inbounds %union.rtunion_def* %arrayidx64, i64 0, i32 0
  %call66.c = ptrtoint %struct.rtx_def* %call66 to i64
  store i64 %call66.c, i64* %15, align 8, !tbaa !6
  br label %if.end71

if.end71:                                         ; preds = %if.end51, %if.then54, %if.then60
  %cmp72 = icmp eq %struct.rtx_def* %label.0, null
  br i1 %cmp72, label %if.end76, label %if.then74

if.then74:                                        ; preds = %if.end71
  %call75 = call %struct.rtx_def* @emit_label(%struct.rtx_def* %label.0) #5
  br label %if.end76

if.end76:                                         ; preds = %if.end71, %if.then74
  ret void
}

declare %struct.rtvec_def* @rtvec_alloc(i32) #0

declare %struct.rtx_def* @gen_rtx_fmt_0(i32, i32) #0

declare %struct.rtx_def* @expand_binop(i32, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #0

declare i32 @unsigned_condition(i32) #0

declare i32 @reverse_condition_maybe_unordered(i32) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_expand_setcc(i32 %code, %struct.rtx_def* %dest) #1 {
entry:
  %second_test = alloca %struct.rtx_def*, align 8
  %bypass_test = alloca %struct.rtx_def*, align 8
  %0 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 327680
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %2, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.clear6 = and i32 %bf.load4, 16711680
  %cmp7 = icmp eq i32 %bf.clear6, 131072
  br i1 %cmp7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7980, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.ix86_expand_setcc, i64 0, i64 0)) #8
  unreachable

if.end9:                                          ; preds = %if.end
  %call = call %struct.rtx_def* @ix86_expand_compare(i32 %code, %struct.rtx_def** %second_test, %struct.rtx_def** %bypass_test)
  %4 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load10 = load i32* %4, align 8
  %bf.clear11 = and i32 %bf.load10, -16711681
  %bf.set = or i32 %bf.clear11, 131072
  store i32 %bf.set, i32* %4, align 8
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %dest, %struct.rtx_def* %call) #5
  %call13 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call12) #5
  %5 = load %struct.rtx_def** %bypass_test, align 8, !tbaa !6
  %tobool14 = icmp ne %struct.rtx_def* %5, null
  %6 = load %struct.rtx_def** %second_test, align 8
  %tobool15 = icmp ne %struct.rtx_def* %6, null
  %or.cond = or i1 %tobool14, %tobool15
  br i1 %or.cond, label %if.then16, label %return

if.then16:                                        ; preds = %if.end9
  %call20 = call %struct.rtx_def* @gen_reg_rtx(i32 2) #5
  %7 = load %struct.rtx_def** %bypass_test, align 8, !tbaa !6
  %tobool21 = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool21, label %if.end32, label %if.then22

if.then22:                                        ; preds = %if.then16
  %8 = load %struct.rtx_def** %second_test, align 8, !tbaa !6
  %tobool23 = icmp eq %struct.rtx_def* %8, null
  br i1 %tobool23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %if.then22
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7997, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.ix86_expand_setcc, i64 0, i64 0)) #8
  unreachable

if.end25:                                         ; preds = %if.then22
  %9 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load26 = load i32* %9, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %call28 = call i32 @reverse_condition_maybe_unordered(i32 %bf.clear27) #5
  %bf.load29 = load i32* %9, align 8
  %bf.value = and i32 %call28, 65535
  %bf.clear30 = and i32 %bf.load29, -16777216
  %bf.set31 = or i32 %bf.value, %bf.clear30
  %bf.set35.c = or i32 %bf.set31, 131072
  store i32 %bf.set35.c, i32* %9, align 8
  %call36.c = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call20, %struct.rtx_def* %7) #5
  %call37.c = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call36.c) #5
  %call40 = call %struct.rtx_def* @gen_andqi3(%struct.rtx_def* %dest, %struct.rtx_def* %dest, %struct.rtx_def* %call20) #5
  %call41 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call40) #5
  br label %return

if.end32:                                         ; preds = %if.then16
  %10 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load33 = load i32* %10, align 8
  %bf.clear34 = and i32 %bf.load33, -16711681
  %bf.set35 = or i32 %bf.clear34, 131072
  store i32 %bf.set35, i32* %10, align 8
  %call36 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call20, %struct.rtx_def* %6) #5
  %call37 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call36) #5
  %call42 = call %struct.rtx_def* @gen_iorqi3(%struct.rtx_def* %dest, %struct.rtx_def* %dest, %struct.rtx_def* %call20) #5
  %call43 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call42) #5
  br label %return

return:                                           ; preds = %if.end9, %if.end32, %if.end25, %land.lhs.true
  %retval.0 = phi i32 [ 0, %land.lhs.true ], [ 1, %if.end25 ], [ 1, %if.end32 ], [ 1, %if.end9 ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @gen_andqi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_iorqi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_expand_int_movcc(%struct.rtx_def** %operands) #1 {
entry:
  %second_test = alloca %struct.rtx_def*, align 8
  %bypass_test = alloca %struct.rtx_def*, align 8
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %2 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load2 = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load2, 16
  %bf.clear3 = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 110
  %bf.clear.off = add i32 %bf.clear, -109
  %4 = icmp ult i32 %bf.clear.off, 2
  br i1 %4, label %land.lhs.true, label %if.end42

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load5 = load i32* %6, align 8
  %bf.clear6 = and i32 %bf.load5, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 54
  %cmp9 = icmp ne i32 %bf.clear3, 3
  %or.cond511 = and i1 %cmp7, %cmp9
  br i1 %or.cond511, label %land.lhs.true10, label %if.end42

land.lhs.true10:                                  ; preds = %land.lhs.true
  %rtwint = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0
  %7 = load i64* %rtwint, align 8, !tbaa !77
  %cmp12 = icmp eq i64 %7, -1
  br i1 %cmp12, label %if.end42, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %8 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %8, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %land.lhs.true24, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %land.lhs.true13
  %9 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load15 = load i32* %10, align 8
  %bf.clear17 = and i32 %bf.load15, 16711680
  %cmp18 = icmp eq i32 %bf.clear17, 327680
  %cmp23 = icmp eq i64 %7, 2147483647
  %or.cond = and i1 %cmp18, %cmp23
  br i1 %or.cond, label %if.end42, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %lor.lhs.false14, %land.lhs.true13
  %arrayidx25 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %11 = load %struct.rtx_def** %arrayidx25, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load26 = load i32* %12, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 54
  br i1 %cmp28, label %land.lhs.true29, label %if.end42

land.lhs.true29:                                  ; preds = %land.lhs.true24
  %arrayidx30 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %13 = load %struct.rtx_def** %arrayidx30, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load31 = load i32* %14, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 54
  br i1 %cmp33, label %if.then, label %if.end42

if.then:                                          ; preds = %land.lhs.true29
  %. = select i1 %cmp, i32 111, i32 108
  %add = add nsw i64 %7, 1
  %15 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load39 = load i32* %16, align 8
  %bf.lshr40 = lshr i32 %bf.load39, 16
  %bf.clear41 = and i32 %bf.lshr40, 255
  %call = call %struct.rtx_def* @gen_int_mode(i64 %add, i32 %bf.clear41) #5
  store %struct.rtx_def* %call, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  br label %if.end42

if.end42:                                         ; preds = %lor.lhs.false14, %land.lhs.true10, %entry, %if.then, %land.lhs.true29, %land.lhs.true24, %land.lhs.true
  %code.1 = phi i32 [ %., %if.then ], [ %bf.clear, %land.lhs.true29 ], [ %bf.clear, %land.lhs.true24 ], [ %bf.clear, %land.lhs.true10 ], [ %bf.clear, %land.lhs.true ], [ %bf.clear, %entry ], [ %bf.clear, %lor.lhs.false14 ]
  call void @start_sequence() #5
  %call43 = call %struct.rtx_def* @ix86_expand_compare(i32 %code.1, %struct.rtx_def** %second_test, %struct.rtx_def** %bypass_test)
  %call44 = call %struct.rtx_def* @gen_sequence() #5
  call void @end_sequence() #5
  %17 = getelementptr inbounds %struct.rtx_def* %call43, i64 0, i32 0
  %bf.load45 = load i32* %17, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear3, 3
  br i1 %cmp47, label %if.end338, label %land.lhs.true48

land.lhs.true48:                                  ; preds = %if.end42
  %cmp49 = icmp ne i32 %bf.clear3, 5
  br i1 %cmp49, label %land.lhs.true53, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %land.lhs.true48
  %18 = load i32* @target_flags, align 4, !tbaa !1
  %and51 = and i32 %18, 33554432
  %tobool52 = icmp eq i32 %and51, 0
  br i1 %tobool52, label %if.end338, label %land.lhs.true53

land.lhs.true53:                                  ; preds = %lor.lhs.false50, %land.lhs.true48
  %arrayidx54 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %19 = load %struct.rtx_def** %arrayidx54, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load55 = load i32* %20, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 54
  br i1 %cmp57, label %land.lhs.true58, label %if.end338

land.lhs.true58:                                  ; preds = %land.lhs.true53
  %arrayidx59 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %21 = load %struct.rtx_def** %arrayidx59, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 0
  %bf.load60 = load i32* %22, align 8
  %bf.clear61 = and i32 %bf.load60, 65535
  %cmp62 = icmp eq i32 %bf.clear61, 54
  br i1 %cmp62, label %if.then63, label %if.end338

if.then63:                                        ; preds = %land.lhs.true58
  %23 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %rtwint68 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 0, i32 0
  %24 = load i64* %rtwint68, align 8, !tbaa !77
  %rtwint72 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 0, i32 0
  %25 = load i64* %rtwint72, align 8, !tbaa !77
  %cmp73 = icmp eq i32 %bf.clear46, 111
  %cmp75 = icmp eq i32 %bf.clear46, 108
  %or.cond512 = or i1 %cmp73, %cmp75
  %or.cond512.not = xor i1 %or.cond512, true
  %26 = load %struct.rtx_def** %second_test, align 8
  %tobool77 = icmp ne %struct.rtx_def* %26, null
  %or.cond513 = or i1 %tobool77, %or.cond512.not
  %27 = load %struct.rtx_def** %bypass_test, align 8
  %tobool79 = icmp ne %struct.rtx_def* %27, null
  %or.cond514 = or i1 %or.cond513, %tobool79
  br i1 %or.cond514, label %if.end151, label %if.then80

if.then80:                                        ; preds = %if.then63
  br i1 %cmp73, label %if.then82, label %if.end88

if.then82:                                        ; preds = %if.then80
  %sext = shl i64 %24, 32
  %conv85 = ashr exact i64 %sext, 32
  %call86 = call i32 @reverse_condition(i32 111) #5
  %call87 = call i32 @reverse_condition(i32 %code.1) #5
  br label %if.end88

if.end88:                                         ; preds = %if.then82, %if.then80
  %cf.0 = phi i64 [ %conv85, %if.then82 ], [ %25, %if.then80 ]
  %ct.0 = phi i64 [ %25, %if.then82 ], [ %24, %if.then80 ]
  %sub = sub nsw i64 %ct.0, %cf.0
  %28 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %call89 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %23, %struct.rtx_def* %28) #5
  %tobool90 = icmp eq i32 %call89, 0
  br i1 %tobool90, label %lor.lhs.false91, label %if.then94

lor.lhs.false91:                                  ; preds = %if.end88
  %29 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call92 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %23, %struct.rtx_def* %29) #5
  %tobool93 = icmp eq i32 %call92, 0
  br i1 %tobool93, label %if.end96, label %if.then94

if.then94:                                        ; preds = %lor.lhs.false91, %if.end88
  %call95 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear3) #5
  br label %if.end96

if.end96:                                         ; preds = %lor.lhs.false91, %if.then94
  %tmp.0 = phi %struct.rtx_def* [ %call95, %if.then94 ], [ %23, %lor.lhs.false91 ]
  %call97 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call44) #5
  %cmp98 = icmp eq i32 %bf.clear3, 5
  br i1 %cmp98, label %if.then100, label %if.else103

if.then100:                                       ; preds = %if.end96
  %call101 = call %struct.rtx_def* @gen_x86_movdicc_0_m1_rex64(%struct.rtx_def* %tmp.0) #5
  %call102 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call101) #5
  br label %if.end106

if.else103:                                       ; preds = %if.end96
  %call104 = call %struct.rtx_def* @gen_x86_movsicc_0_m1(%struct.rtx_def* %tmp.0) #5
  %call105 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call104) #5
  br label %if.end106

if.end106:                                        ; preds = %if.else103, %if.then100
  %cmp107 = icmp eq i64 %sub, 1
  br i1 %cmp107, label %if.then109, label %if.else115

if.then109:                                       ; preds = %if.end106
  %tobool110 = icmp eq i64 %ct.0, 0
  br i1 %tobool110, label %if.end145, label %if.then111

if.then111:                                       ; preds = %if.then109
  %call112 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %ct.0) #5
  %call113 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear3, i32 75, %struct.rtx_def* %tmp.0, %struct.rtx_def* %call112, %struct.rtx_def* %tmp.0, i32 1, i32 0) #5
  br label %if.end145

if.else115:                                       ; preds = %if.end106
  %cmp116 = icmp eq i64 %cf.0, -1
  br i1 %cmp116, label %if.then118, label %if.else121

if.then118:                                       ; preds = %if.else115
  %call119 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %ct.0) #5
  %call120 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear3, i32 84, %struct.rtx_def* %tmp.0, %struct.rtx_def* %call119, %struct.rtx_def* %tmp.0, i32 1, i32 0) #5
  br label %if.end145

if.else121:                                       ; preds = %if.else115
  %cmp122 = icmp eq i64 %sub, -1
  %tobool125 = icmp ne i64 %ct.0, 0
  %or.cond515 = and i1 %cmp122, %tobool125
  br i1 %or.cond515, label %if.then126, label %if.else133

if.then126:                                       ; preds = %if.else121
  %call127 = call %struct.rtx_def* @expand_simple_unop(i32 %bf.clear3, i32 86, %struct.rtx_def* %tmp.0, %struct.rtx_def* %tmp.0, i32 1) #5
  %tobool128 = icmp eq i64 %cf.0, 0
  br i1 %tobool128, label %if.end145, label %if.then129

if.then129:                                       ; preds = %if.then126
  %call130 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %cf.0) #5
  %call131 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear3, i32 75, %struct.rtx_def* %call127, %struct.rtx_def* %call130, %struct.rtx_def* %call127, i32 1, i32 0) #5
  br label %if.end145

if.else133:                                       ; preds = %if.else121
  %sub134 = sub nsw i64 %cf.0, %ct.0
  %call135 = call i64 @trunc_int_for_mode(i64 %sub134, i32 %bf.clear3) #5
  %call136 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call135) #5
  %call137 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear3, i32 83, %struct.rtx_def* %tmp.0, %struct.rtx_def* %call136, %struct.rtx_def* %tmp.0, i32 1, i32 0) #5
  br i1 %tobool125, label %if.then139, label %if.end145

if.then139:                                       ; preds = %if.else133
  %call140 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %ct.0) #5
  %call141 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear3, i32 75, %struct.rtx_def* %call137, %struct.rtx_def* %call140, %struct.rtx_def* %call137, i32 1, i32 0) #5
  br label %if.end145

if.end145:                                        ; preds = %if.then109, %if.then126, %if.then118, %if.else133, %if.then139, %if.then129, %if.then111
  %tmp.1 = phi %struct.rtx_def* [ %call113, %if.then111 ], [ %tmp.0, %if.then109 ], [ %call120, %if.then118 ], [ %call131, %if.then129 ], [ %call127, %if.then126 ], [ %call141, %if.then139 ], [ %call137, %if.else133 ]
  %cmp146 = icmp eq %struct.rtx_def* %tmp.1, %23
  br i1 %cmp146, label %return, label %if.then148

if.then148:                                       ; preds = %if.end145
  %call149 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %23, %struct.rtx_def* %tmp.1) #5
  br label %return

if.end151:                                        ; preds = %if.then63
  %sub152 = sub nsw i64 %24, %25
  %cmp153 = icmp slt i64 %sub152, 0
  br i1 %cmp153, label %if.then155, label %if.end188

if.then155:                                       ; preds = %if.end151
  %sub158 = sub nsw i64 0, %sub152
  %30 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load159 = load i32* %31, align 8
  %bf.lshr160 = lshr i32 %bf.load159, 16
  %bf.clear161 = and i32 %bf.lshr160, 255
  %idxprom716 = zext i32 %bf.clear161 to i64
  %arrayidx162 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom716
  %32 = load i32* %arrayidx162, align 4, !tbaa !5
  switch i32 %32, label %if.else184 [
    i32 2, label %if.then181
    i32 6, label %if.then181
    i32 8, label %if.then181
  ]

if.then181:                                       ; preds = %if.then155, %if.then155, %if.then155
  %call182 = call i32 @reverse_condition_maybe_unordered(i32 %bf.clear46) #5
  %call183 = call i32 @reverse_condition_maybe_unordered(i32 %code.1) #5
  br label %if.end188

if.else184:                                       ; preds = %if.then155
  %call185 = call i32 @reverse_condition(i32 %bf.clear46) #5
  %call186 = call i32 @reverse_condition(i32 %code.1) #5
  br label %if.end188

if.end188:                                        ; preds = %if.then181, %if.else184, %if.end151
  %diff.0 = phi i64 [ %sub158, %if.then181 ], [ %sub158, %if.else184 ], [ %sub152, %if.end151 ]
  %cf.1 = phi i64 [ %24, %if.then181 ], [ %24, %if.else184 ], [ %25, %if.end151 ]
  %ct.1 = phi i64 [ %25, %if.then181 ], [ %25, %if.else184 ], [ %24, %if.end151 ]
  %compare_code.0 = phi i32 [ %call182, %if.then181 ], [ %call185, %if.else184 ], [ %bf.clear46, %if.end151 ]
  %code.2 = phi i32 [ %call183, %if.then181 ], [ %call186, %if.else184 ], [ %code.1, %if.end151 ]
  %cmp189 = icmp eq i64 %diff.0, 1
  switch i64 %diff.0, label %if.end278 [
    i64 9, label %land.lhs.true209
    i64 8, label %land.lhs.true209
    i64 5, label %land.lhs.true209
    i64 4, label %land.lhs.true209
    i64 3, label %land.lhs.true209
    i64 2, label %land.lhs.true209
    i64 1, label %land.lhs.true209
  ]

land.lhs.true209:                                 ; preds = %if.end188, %if.end188, %if.end188, %if.end188, %if.end188, %if.end188, %if.end188
  br i1 %cmp49, label %if.then216, label %lor.lhs.false212

lor.lhs.false212:                                 ; preds = %land.lhs.true209
  %call213 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %cf.1) #5
  %call214 = call i32 @x86_64_sign_extended_value(%struct.rtx_def* %call213)
  %tobool215 = icmp eq i32 %call214, 0
  br i1 %tobool215, label %if.end278, label %if.then216

if.then216:                                       ; preds = %lor.lhs.false212, %land.lhs.true209
  %33 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %34 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call220 = call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %23, i32 %code.2, %struct.rtx_def* %33, %struct.rtx_def* %34, i32 0, i32 0, i32 1) #5
  br i1 %cmp189, label %if.end235, label %if.else224

if.else224:                                       ; preds = %if.then216
  %and226 = and i64 %diff.0, -2
  %call227 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and226) #5
  %call228 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %bf.clear3, %struct.rtx_def* %call220, %struct.rtx_def* %call227) #5
  %and229 = and i64 %diff.0, 1
  %tobool230 = icmp eq i64 %and229, 0
  br i1 %tobool230, label %if.end235, label %if.then231

if.then231:                                       ; preds = %if.else224
  %call232 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear3, %struct.rtx_def* %call228, %struct.rtx_def* %call220) #5
  br label %if.end235

if.end235:                                        ; preds = %if.then216, %if.else224, %if.then231
  %tmp218.0 = phi %struct.rtx_def* [ %call232, %if.then231 ], [ %call228, %if.else224 ], [ %call220, %if.then216 ]
  %nops.0 = phi i32 [ 2, %if.then231 ], [ 1, %if.else224 ], [ 0, %if.then216 ]
  %cmp236 = icmp eq i64 %cf.1, 0
  br i1 %cmp236, label %if.end242, label %if.then238

if.then238:                                       ; preds = %if.end235
  %call239 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %cf.1) #5
  %call240 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear3, %struct.rtx_def* %tmp218.0, %struct.rtx_def* %call239) #5
  %inc241 = add nsw i32 %nops.0, 1
  br label %if.end242

if.end242:                                        ; preds = %if.end235, %if.then238
  %tmp218.1 = phi %struct.rtx_def* [ %call240, %if.then238 ], [ %tmp218.0, %if.end235 ]
  %nops.1 = phi i32 [ %inc241, %if.then238 ], [ %nops.0, %if.end235 ]
  %cmp243 = icmp eq %struct.rtx_def* %tmp218.1, %call220
  br i1 %cmp243, label %if.end270, label %land.lhs.true245

land.lhs.true245:                                 ; preds = %if.end242
  %35 = getelementptr inbounds %struct.rtx_def* %tmp218.1, i64 0, i32 0
  %bf.load246 = load i32* %35, align 8
  %bf.clear247 = and i32 %bf.load246, 65535
  %cmp248 = icmp eq i32 %bf.clear247, 63
  br i1 %cmp248, label %lor.lhs.false250, label %if.then255

lor.lhs.false250:                                 ; preds = %land.lhs.true245
  %arrayidx252 = getelementptr inbounds %struct.rtx_def* %tmp218.1, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %cmp253 = icmp eq %struct.rtx_def* %36, %call220
  br i1 %cmp253, label %if.end270, label %if.then255

if.then255:                                       ; preds = %lor.lhs.false250, %land.lhs.true245
  %cmp256 = icmp eq i32 %nops.1, 1
  br i1 %cmp256, label %if.then258, label %if.else266

if.then258:                                       ; preds = %if.then255
  %call260 = call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #5
  %call261 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %call260) #5
  %call262 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call220, %struct.rtx_def* %tmp218.1) #5
  %call263 = call %struct.rtvec_def* (i32, ...)* @gen_rtvec(i32 2, %struct.rtx_def* %call262, %struct.rtx_def* %call261) #5
  %call264 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call263) #5
  %call265 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call264) #5
  br label %if.end270

if.else266:                                       ; preds = %if.then255
  %call267 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call220, %struct.rtx_def* %tmp218.1) #5
  %call268 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call267) #5
  br label %if.end270

if.end270:                                        ; preds = %lor.lhs.false250, %if.end242, %if.then258, %if.else266
  %37 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %cmp272 = icmp eq %struct.rtx_def* %call220, %37
  br i1 %cmp272, label %return, label %if.then274

if.then274:                                       ; preds = %if.end270
  %call276 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %37, %struct.rtx_def* %call220) #5
  br label %return

if.end278:                                        ; preds = %if.end188, %lor.lhs.false212
  %38 = load i32* @optimize_size, align 4, !tbaa !1
  %tobool279 = icmp eq i32 %38, 0
  br i1 %tobool279, label %land.lhs.true280, label %if.end338

land.lhs.true280:                                 ; preds = %if.end278
  %39 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl = shl i32 1, %39
  %and281 = and i32 %shl, 104
  %tobool282 = icmp eq i32 %and281, 0
  br i1 %tobool282, label %lor.lhs.false283, label %if.end338

lor.lhs.false283:                                 ; preds = %land.lhs.true280
  %40 = load i32* @target_flags, align 4, !tbaa !1
  %and284 = and i32 %40, 327680
  %cmp285 = icmp eq i32 %and284, 0
  br i1 %cmp285, label %if.then287, label %if.end338

if.then287:                                       ; preds = %lor.lhs.false283
  %cmp288 = icmp eq i64 %ct.1, 0
  br i1 %cmp288, label %if.then290, label %if.end321

if.then290:                                       ; preds = %if.then287
  %41 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 0
  %bf.load291 = load i32* %42, align 8
  %bf.lshr292 = lshr i32 %bf.load291, 16
  %bf.clear293 = and i32 %bf.lshr292, 255
  %idxprom294715 = zext i32 %bf.clear293 to i64
  %arrayidx295 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom294715
  %43 = load i32* %arrayidx295, align 4, !tbaa !5
  switch i32 %43, label %if.else317 [
    i32 2, label %if.then314
    i32 6, label %if.then314
    i32 8, label %if.then314
  ]

if.then314:                                       ; preds = %if.then290, %if.then290, %if.then290
  %call315 = call i32 @reverse_condition_maybe_unordered(i32 %compare_code.0) #5
  %call316 = call i32 @reverse_condition_maybe_unordered(i32 %code.2) #5
  br label %if.end321

if.else317:                                       ; preds = %if.then290
  %call318 = call i32 @reverse_condition(i32 %compare_code.0) #5
  %call319 = call i32 @reverse_condition(i32 %code.2) #5
  br label %if.end321

if.end321:                                        ; preds = %if.then314, %if.else317, %if.then287
  %cf.2 = phi i64 [ 0, %if.then314 ], [ 0, %if.else317 ], [ %cf.1, %if.then287 ]
  %ct.2 = phi i64 [ %cf.1, %if.then314 ], [ %cf.1, %if.else317 ], [ %ct.1, %if.then287 ]
  %code.3 = phi i32 [ %call316, %if.then314 ], [ %call319, %if.else317 ], [ %code.2, %if.then287 ]
  %44 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %45 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call322 = call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %23, i32 %code.3, %struct.rtx_def* %44, %struct.rtx_def* %45, i32 0, i32 0, i32 1) #5
  %46 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %call323 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear3, i32 75, %struct.rtx_def* %call322, %struct.rtx_def* %46, %struct.rtx_def* %call322, i32 1, i32 0) #5
  %sub324 = sub nsw i64 %cf.2, %ct.2
  %call325 = call i64 @trunc_int_for_mode(i64 %sub324, i32 %bf.clear3) #5
  %call326 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call325) #5
  %call327 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear3, i32 83, %struct.rtx_def* %call323, %struct.rtx_def* %call326, %struct.rtx_def* %call323, i32 1, i32 0) #5
  %call328 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %ct.2) #5
  %call329 = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear3, i32 75, %struct.rtx_def* %call327, %struct.rtx_def* %call328, %struct.rtx_def* %call327, i32 1, i32 0) #5
  %47 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %cmp331 = icmp eq %struct.rtx_def* %call329, %47
  br i1 %cmp331, label %return, label %if.then333

if.then333:                                       ; preds = %if.end321
  %call335 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %47, %struct.rtx_def* %call329) #5
  br label %return

if.end338:                                        ; preds = %lor.lhs.false283, %land.lhs.true280, %if.end278, %lor.lhs.false50, %if.end42, %land.lhs.true58, %land.lhs.true53
  %48 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl339 = shl i32 1, %48
  %and340 = and i32 %shl339, 104
  %tobool341 = icmp eq i32 %and340, 0
  br i1 %tobool341, label %lor.lhs.false342, label %if.end429

lor.lhs.false342:                                 ; preds = %if.end338
  %49 = load i32* @target_flags, align 4, !tbaa !1
  %and343 = and i32 %49, 327680
  %cmp344 = icmp eq i32 %and343, 0
  br i1 %cmp344, label %if.then346, label %if.end429

if.then346:                                       ; preds = %lor.lhs.false342
  %50 = load i32* @optimize_size, align 4, !tbaa !1
  %tobool354 = icmp eq i32 %50, 0
  br i1 %tobool354, label %if.end356, label %return

if.end356:                                        ; preds = %if.then346
  %arrayidx357 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %51 = load %struct.rtx_def** %arrayidx357, align 8, !tbaa !6
  %52 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 0
  %bf.load358 = load i32* %52, align 8
  %bf.clear359 = and i32 %bf.load358, 65535
  %cmp360 = icmp eq i32 %bf.clear359, 54
  %arrayidx363 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %53 = load %struct.rtx_def** %arrayidx363, align 8, !tbaa !6
  br i1 %cmp360, label %if.then362, label %if.else384

if.then362:                                       ; preds = %if.end356
  %rtwint367 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 0, i32 0
  %54 = load i64* %rtwint367, align 8, !tbaa !77
  switch i64 %54, label %return [
    i64 0, label %if.then370
    i64 -1, label %if.then379
  ]

if.then370:                                       ; preds = %if.then362
  %55 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  store %struct.rtx_def* %55, %struct.rtx_def** %arrayidx363, align 8, !tbaa !6
  br label %if.end414

if.then379:                                       ; preds = %if.then362
  %56 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  store %struct.rtx_def* %56, %struct.rtx_def** %arrayidx363, align 8, !tbaa !6
  br label %if.end414

if.else384:                                       ; preds = %if.end356
  %57 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 0
  %bf.load386 = load i32* %57, align 8
  %bf.clear387 = and i32 %bf.load386, 65535
  %cmp388 = icmp eq i32 %bf.clear387, 54
  br i1 %cmp388, label %if.then390, label %return

if.then390:                                       ; preds = %if.else384
  %rtwint395 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 0, i32 0
  %58 = load i64* %rtwint395, align 8, !tbaa !77
  switch i64 %58, label %return [
    i64 0, label %if.then398
    i64 -1, label %if.then407
  ]

if.then398:                                       ; preds = %if.then390
  %59 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  store %struct.rtx_def* %59, %struct.rtx_def** %arrayidx357, align 8, !tbaa !6
  br label %if.end414

if.then407:                                       ; preds = %if.then390
  %60 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  store %struct.rtx_def* %60, %struct.rtx_def** %arrayidx357, align 8, !tbaa !6
  br label %if.end414

if.end414:                                        ; preds = %if.then407, %if.then398, %if.then370, %if.then379
  %op.0.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), %if.then370 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), %if.then379 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), %if.then398 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), %if.then407 ]
  %var.0 = phi %struct.rtx_def* [ %53, %if.then370 ], [ %53, %if.then379 ], [ %51, %if.then398 ], [ %51, %if.then407 ]
  %op.0 = load %struct.optab** %op.0.in, align 8
  %61 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %call416 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear3) #5
  store %struct.rtx_def* %call416, %struct.rtx_def** %operands, align 8, !tbaa !6
  %call418 = call i32 @ix86_expand_int_movcc(%struct.rtx_def** %operands)
  %cmp419 = icmp eq i32 %call418, 0
  br i1 %cmp419, label %return, label %if.end422

if.end422:                                        ; preds = %if.end414
  %call423 = call %struct.rtx_def* @expand_binop(i32 %bf.clear3, %struct.optab* %op.0, %struct.rtx_def* %var.0, %struct.rtx_def* %call416, %struct.rtx_def* %61, i32 0, i32 2) #5
  %cmp424 = icmp eq %struct.rtx_def* %call423, %61
  br i1 %cmp424, label %return, label %if.then426

if.then426:                                       ; preds = %if.end422
  %call427 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %61, %struct.rtx_def* %call423) #5
  br label %return

if.end429:                                        ; preds = %lor.lhs.false342, %if.end338
  %arrayidx430 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %62 = load %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  %call431 = call i32 @nonimmediate_operand(%struct.rtx_def* %62, i32 %bf.clear3) #5
  %tobool432 = icmp eq i32 %call431, 0
  br i1 %tobool432, label %if.then433, label %if.end437

if.then433:                                       ; preds = %if.end429
  %63 = load %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  %call435 = call %struct.rtx_def* @force_reg(i32 %bf.clear3, %struct.rtx_def* %63) #5
  store %struct.rtx_def* %call435, %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  br label %if.end437

if.end437:                                        ; preds = %if.end429, %if.then433
  %arrayidx438 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %64 = load %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  %call439 = call i32 @nonimmediate_operand(%struct.rtx_def* %64, i32 %bf.clear3) #5
  %tobool440 = icmp eq i32 %call439, 0
  br i1 %tobool440, label %if.then441, label %if.end445

if.then441:                                       ; preds = %if.end437
  %65 = load %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  %call443 = call %struct.rtx_def* @force_reg(i32 %bf.clear3, %struct.rtx_def* %65) #5
  store %struct.rtx_def* %call443, %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  br label %if.end445

if.end445:                                        ; preds = %if.end437, %if.then441
  %66 = load %struct.rtx_def** %bypass_test, align 8, !tbaa !6
  %tobool446 = icmp eq %struct.rtx_def* %66, null
  br i1 %tobool446, label %if.end459, label %land.lhs.true447

land.lhs.true447:                                 ; preds = %if.end445
  %67 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %68 = load %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  %call450 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %67, %struct.rtx_def* %68) #5
  %tobool451 = icmp eq i32 %call450, 0
  br i1 %tobool451, label %if.end459, label %if.then452

if.then452:                                       ; preds = %land.lhs.true447
  %call455 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear3) #5
  %69 = load %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  %call457 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call455, %struct.rtx_def* %69) #5
  store %struct.rtx_def* %call455, %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  br label %if.end459

if.end459:                                        ; preds = %land.lhs.true447, %if.end445, %if.then452
  %70 = load %struct.rtx_def** %second_test, align 8, !tbaa !6
  %tobool460 = icmp eq %struct.rtx_def* %70, null
  br i1 %tobool460, label %if.end473, label %land.lhs.true461

land.lhs.true461:                                 ; preds = %if.end459
  %71 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %72 = load %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  %call464 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %71, %struct.rtx_def* %72) #5
  %tobool465 = icmp eq i32 %call464, 0
  br i1 %tobool465, label %if.end473, label %if.then466

if.then466:                                       ; preds = %land.lhs.true461
  %call469 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear3) #5
  %73 = load %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  %call471 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call469, %struct.rtx_def* %73) #5
  store %struct.rtx_def* %call469, %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  br label %if.end473

if.end473:                                        ; preds = %land.lhs.true461, %if.end459, %if.then466
  %74 = load %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  %call475 = call i32 @register_operand(%struct.rtx_def* %74, i32 0) #5
  %tobool476 = icmp eq i32 %call475, 0
  br i1 %tobool476, label %land.lhs.true477, label %if.end485

land.lhs.true477:                                 ; preds = %if.end473
  %75 = load %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  %call479 = call i32 @register_operand(%struct.rtx_def* %75, i32 0) #5
  %tobool480 = icmp eq i32 %call479, 0
  br i1 %tobool480, label %if.then481, label %if.end485

if.then481:                                       ; preds = %land.lhs.true477
  %76 = load %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  %call483 = call %struct.rtx_def* @force_reg(i32 %bf.clear3, %struct.rtx_def* %76) #5
  store %struct.rtx_def* %call483, %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  br label %if.end485

if.end485:                                        ; preds = %land.lhs.true477, %if.end473, %if.then481
  %call486 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call44) #5
  %77 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %78 = load %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  %79 = load %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  %call490 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 %bf.clear3, %struct.rtx_def* %call43, %struct.rtx_def* %78, %struct.rtx_def* %79) #5
  %call491 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %77, %struct.rtx_def* %call490) #5
  %call492 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call491) #5
  %80 = load %struct.rtx_def** %bypass_test, align 8, !tbaa !6
  %tobool493 = icmp eq %struct.rtx_def* %80, null
  br i1 %tobool493, label %if.end501, label %if.then494

if.then494:                                       ; preds = %if.end485
  %81 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %82 = load %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  %call498 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 %bf.clear3, %struct.rtx_def* %80, %struct.rtx_def* %82, %struct.rtx_def* %81) #5
  %call499 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %81, %struct.rtx_def* %call498) #5
  %call500 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call499) #5
  br label %if.end501

if.end501:                                        ; preds = %if.end485, %if.then494
  %83 = load %struct.rtx_def** %second_test, align 8, !tbaa !6
  %tobool502 = icmp eq %struct.rtx_def* %83, null
  br i1 %tobool502, label %return, label %if.then503

if.then503:                                       ; preds = %if.end501
  %84 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %85 = load %struct.rtx_def** %arrayidx430, align 8, !tbaa !6
  %call507 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 %bf.clear3, %struct.rtx_def* %83, %struct.rtx_def* %85, %struct.rtx_def* %84) #5
  %call508 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %84, %struct.rtx_def* %call507) #5
  %call509 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call508) #5
  br label %return

return:                                           ; preds = %if.then503, %if.end501, %if.then426, %if.end422, %if.end414, %if.else384, %if.then390, %if.then362, %if.then346, %if.then333, %if.end321, %if.then274, %if.end270, %if.then148, %if.end145
  %retval.0 = phi i32 [ 1, %if.end145 ], [ 1, %if.then148 ], [ 1, %if.end270 ], [ 1, %if.then274 ], [ 1, %if.end321 ], [ 1, %if.then333 ], [ 0, %if.then346 ], [ 0, %if.then362 ], [ 0, %if.then390 ], [ 0, %if.else384 ], [ 0, %if.end414 ], [ 1, %if.end422 ], [ 1, %if.then426 ], [ 1, %if.end501 ], [ 1, %if.then503 ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @gen_int_mode(i64, i32) #0

declare void @start_sequence() #0

declare %struct.rtx_def* @gen_sequence() #0

declare void @end_sequence() #0

declare i32 @reverse_condition(i32) #0

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_x86_movdicc_0_m1_rex64(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_x86_movsicc_0_m1(%struct.rtx_def*) #0

declare %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #0

declare %struct.rtx_def* @expand_simple_unop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, i32) #0

declare %struct.rtx_def* @emit_store_flag(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_expand_fp_movcc(%struct.rtx_def** %operands) #1 {
entry:
  %second_test = alloca %struct.rtx_def*, align 8
  %bypass_test = alloca %struct.rtx_def*, align 8
  %0 = load i32* @ix86_fpmath, align 4, !tbaa !5
  %and = and i32 %0, 2
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp4 = icmp eq i32 %bf.clear, 983040
  br i1 %cmp4, label %land.lhs.true16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry, %land.lhs.true
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and5 = and i32 %3, 262144
  %cmp6 = icmp eq i32 %and5, 0
  %brmerge = or i1 %cmp6, %cmp
  br i1 %brmerge, label %if.end234, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load12 = load i32* %5, align 8
  %bf.clear14 = and i32 %bf.load12, 16711680
  %cmp15 = icmp eq i32 %bf.clear14, 1048576
  br i1 %cmp15, label %land.lhs.true16, label %if.end234

land.lhs.true16:                                  ; preds = %land.lhs.true10, %land.lhs.true
  %bf.load39 = phi i32 [ %bf.load12, %land.lhs.true10 ], [ %bf.load, %land.lhs.true ]
  %6 = phi %struct.rtx_def* [ %4, %land.lhs.true10 ], [ %1, %land.lhs.true ]
  %7 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load17 = load i32* %8, align 8
  %bf.lshr18410 = xor i32 %bf.load39, %bf.load17
  %9 = and i32 %bf.lshr18410, 16711680
  %cmp24 = icmp eq i32 %9, 0
  br i1 %cmp24, label %land.lhs.true25, label %if.end234

land.lhs.true25:                                  ; preds = %land.lhs.true16
  %10 = load i32* @target_flags, align 4, !tbaa !1
  %and26 = and i32 %10, 16
  %tobool = icmp eq i32 %and26, 0
  br i1 %tobool, label %land.lhs.true37, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %land.lhs.true25
  %arrayidx28 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %11 = load %struct.rtx_def** %arrayidx28, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load29 = load i32* %12, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  switch i32 %bf.clear30, label %land.lhs.true37 [
    i32 119, label %if.end234
    i32 114, label %if.end234
  ]

land.lhs.true37:                                  ; preds = %lor.lhs.false27, %land.lhs.true25
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 61
  br i1 %cmp41, label %land.lhs.true47, label %if.then

land.lhs.true47:                                  ; preds = %land.lhs.true37
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx49 to i32*
  %13 = load i32* %rtuint, align 4, !tbaa !1
  %.off = add i32 %13, -21
  %14 = icmp ult i32 %.off, 8
  br i1 %14, label %if.then, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %land.lhs.true47
  %.off425 = add i32 %13, -45
  %15 = icmp ult i32 %.off425, 8
  %cmp74 = icmp ugt i32 %13, 52
  %or.cond424 = or i1 %15, %cmp74
  br i1 %or.cond424, label %if.then, label %if.end234

if.then:                                          ; preds = %lor.lhs.false57, %land.lhs.true47, %land.lhs.true37
  %16 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %arrayidx77 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %17 = load %struct.rtx_def** %arrayidx77, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load78 = load i32* %18, align 8
  %bf.clear79 = and i32 %bf.load78, 65535
  %arrayidx80 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %19 = load %struct.rtx_def** %arrayidx80, align 8, !tbaa !6
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %19, %struct.rtx_def* %16) #5
  %tobool81 = icmp eq i32 %call, 0
  br i1 %tobool81, label %if.end, label %if.then82

if.then82:                                        ; preds = %if.then
  %call85 = call i32 @reverse_condition_maybe_unordered(i32 %bf.clear79) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then82
  %op0.0 = phi %struct.rtx_def* [ %16, %if.then82 ], [ %7, %if.then ]
  %op1.0 = phi %struct.rtx_def* [ %7, %if.then82 ], [ %16, %if.then ]
  %code.0 = phi i32 [ %call85, %if.then82 ], [ %bf.clear79, %if.then ]
  %20 = load %struct.rtx_def** %arrayidx80, align 8, !tbaa !6
  %call87 = call i32 @rtx_equal_p(%struct.rtx_def* %20, %struct.rtx_def* %op0.0) #5
  %tobool88 = icmp eq i32 %call87, 0
  br i1 %tobool88, label %if.end159, label %land.lhs.true89

land.lhs.true89:                                  ; preds = %if.end
  %arrayidx90 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %21 = load %struct.rtx_def** %arrayidx90, align 8, !tbaa !6
  %call91 = call i32 @rtx_equal_p(%struct.rtx_def* %21, %struct.rtx_def* %op1.0) #5
  %tobool92 = icmp eq i32 %call91, 0
  br i1 %tobool92, label %if.end159, label %if.then93

if.then93:                                        ; preds = %land.lhs.true89
  switch i32 %code.0, label %if.end159 [
    i32 107, label %if.then95
    i32 105, label %if.then127
  ]

if.then95:                                        ; preds = %if.then93
  %22 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load97 = load i32* %23, align 8
  %bf.lshr98 = lshr i32 %bf.load97, 16
  %bf.clear99 = and i32 %bf.lshr98, 255
  %call101 = call %struct.rtx_def* @force_reg(i32 %bf.clear99, %struct.rtx_def* %22) #5
  store %struct.rtx_def* %call101, %struct.rtx_def** %operands, align 8, !tbaa !6
  %call103 = call i32 @memory_operand(%struct.rtx_def* %op0.0, i32 0) #5
  %tobool104 = icmp eq i32 %call103, 0
  br i1 %tobool104, label %if.end111, label %if.then105

if.then105:                                       ; preds = %if.then95
  %24 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load107 = load i32* %25, align 8
  %bf.lshr108 = lshr i32 %bf.load107, 16
  %bf.clear109 = and i32 %bf.lshr108, 255
  %call110 = call %struct.rtx_def* @force_reg(i32 %bf.clear109, %struct.rtx_def* %op0.0) #5
  br label %if.end111

if.end111:                                        ; preds = %if.then95, %if.then105
  %op0.1 = phi %struct.rtx_def* [ %call110, %if.then105 ], [ %op0.0, %if.then95 ]
  %26 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load113 = load i32* %27, align 8
  %bf.clear115 = and i32 %bf.load113, 16711680
  %cmp116 = icmp eq i32 %bf.clear115, 983040
  br i1 %cmp116, label %if.then117, label %if.else

if.then117:                                       ; preds = %if.end111
  %call119 = call %struct.rtx_def* @gen_minsf3(%struct.rtx_def* %26, %struct.rtx_def* %op0.1, %struct.rtx_def* %op1.0) #5
  %call120 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call119) #5
  br label %return

if.else:                                          ; preds = %if.end111
  %call122 = call %struct.rtx_def* @gen_mindf3(%struct.rtx_def* %26, %struct.rtx_def* %op0.1, %struct.rtx_def* %op1.0) #5
  %call123 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call122) #5
  br label %return

if.then127:                                       ; preds = %if.then93
  %28 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load129 = load i32* %29, align 8
  %bf.lshr130 = lshr i32 %bf.load129, 16
  %bf.clear131 = and i32 %bf.lshr130, 255
  %call133 = call %struct.rtx_def* @force_reg(i32 %bf.clear131, %struct.rtx_def* %28) #5
  store %struct.rtx_def* %call133, %struct.rtx_def** %operands, align 8, !tbaa !6
  %call135 = call i32 @memory_operand(%struct.rtx_def* %op0.0, i32 0) #5
  %tobool136 = icmp eq i32 %call135, 0
  br i1 %tobool136, label %if.end143, label %if.then137

if.then137:                                       ; preds = %if.then127
  %30 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load139 = load i32* %31, align 8
  %bf.lshr140 = lshr i32 %bf.load139, 16
  %bf.clear141 = and i32 %bf.lshr140, 255
  %call142 = call %struct.rtx_def* @force_reg(i32 %bf.clear141, %struct.rtx_def* %op0.0) #5
  br label %if.end143

if.end143:                                        ; preds = %if.then127, %if.then137
  %op0.2 = phi %struct.rtx_def* [ %call142, %if.then137 ], [ %op0.0, %if.then127 ]
  %32 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load145 = load i32* %33, align 8
  %bf.clear147 = and i32 %bf.load145, 16711680
  %cmp148 = icmp eq i32 %bf.clear147, 983040
  br i1 %cmp148, label %if.then149, label %if.else153

if.then149:                                       ; preds = %if.end143
  %call151 = call %struct.rtx_def* @gen_maxsf3(%struct.rtx_def* %32, %struct.rtx_def* %op0.2, %struct.rtx_def* %op1.0) #5
  %call152 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call151) #5
  br label %return

if.else153:                                       ; preds = %if.end143
  %call155 = call %struct.rtx_def* @gen_maxdf3(%struct.rtx_def* %32, %struct.rtx_def* %op0.2, %struct.rtx_def* %op1.0) #5
  %call156 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call155) #5
  br label %return

if.end159:                                        ; preds = %if.then93, %land.lhs.true89, %if.end
  %34 = load %struct.rtx_def** %arrayidx77, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load.i = load i32* %35, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.then170 [
    i32 103, label %lor.lhs.false163
    i32 107, label %lor.lhs.false163
    i32 106, label %lor.lhs.false163
    i32 112, label %lor.lhs.false163
    i32 102, label %lor.lhs.false163
    i32 115, label %lor.lhs.false163
    i32 116, label %lor.lhs.false163
    i32 113, label %lor.lhs.false163
    i32 114, label %sse_comparison_operator.exit
    i32 118, label %sse_comparison_operator.exit
    i32 117, label %sse_comparison_operator.exit
    i32 119, label %sse_comparison_operator.exit
    i32 104, label %sse_comparison_operator.exit
    i32 105, label %sse_comparison_operator.exit
  ]

sse_comparison_operator.exit:                     ; preds = %if.end159, %if.end159, %if.end159, %if.end159, %if.end159, %if.end159
  %36 = load i32* @target_flags, align 4, !tbaa !1
  %and.lobit.i = and i32 %36, 16
  %tobool162 = icmp eq i32 %and.lobit.i, 0
  br i1 %tobool162, label %lor.lhs.false163, label %if.then170

lor.lhs.false163:                                 ; preds = %sse_comparison_operator.exit, %if.end159, %if.end159, %if.end159, %if.end159, %if.end159, %if.end159, %if.end159, %if.end159
  %37 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %38 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call165 = call i32 @rtx_equal_p(%struct.rtx_def* %37, %struct.rtx_def* %38) #5
  %tobool166 = icmp eq i32 %call165, 0
  br i1 %tobool166, label %if.end179, label %land.lhs.true167

land.lhs.true167:                                 ; preds = %lor.lhs.false163
  %39 = load i32* @target_flags, align 4, !tbaa !1
  %and168 = and i32 %39, 16
  %tobool169 = icmp eq i32 %and168, 0
  br i1 %tobool169, label %if.then170, label %if.end179

if.then170:                                       ; preds = %sse_comparison_operator.exit, %if.end159, %land.lhs.true167
  %40 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %41 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  store %struct.rtx_def* %41, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  store %struct.rtx_def* %40, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %42 = load %struct.rtx_def** %arrayidx77, align 8, !tbaa !6
  %43 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load174 = load i32* %43, align 8
  %bf.clear175 = and i32 %bf.load174, 65535
  %call176 = call i32 @swap_condition(i32 %bf.clear175) #5
  %44 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %45 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call177 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %call176, i32 0, %struct.rtx_def* %44, %struct.rtx_def* %45) #5
  store %struct.rtx_def* %call177, %struct.rtx_def** %arrayidx77, align 8, !tbaa !6
  br label %if.end179

if.end179:                                        ; preds = %land.lhs.true167, %lor.lhs.false163, %if.then170
  %46 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx181 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %47 = load %struct.rtx_def** %arrayidx181, align 8, !tbaa !6
  %call182 = call i32 @rtx_equal_p(%struct.rtx_def* %46, %struct.rtx_def* %47) #5
  %tobool183 = icmp eq i32 %call182, 0
  br i1 %tobool183, label %if.end179.lor.lhs.false192_crit_edge, label %land.lhs.true184

if.end179.lor.lhs.false192_crit_edge:             ; preds = %if.end179
  %.pre = load %struct.rtx_def** %arrayidx77, align 8, !tbaa !6
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre, i64 0, i32 0
  %bf.load194.pre = load i32* %.phi.trans.insert, align 8
  br label %lor.lhs.false192

land.lhs.true184:                                 ; preds = %if.end179
  %48 = load i32* @target_flags, align 4, !tbaa !1
  %and185 = and i32 %48, 16
  %tobool186 = icmp eq i32 %and185, 0
  %.pre428 = load %struct.rtx_def** %arrayidx77, align 8, !tbaa !6
  br i1 %tobool186, label %if.then200, label %lor.lhs.false187

lor.lhs.false187:                                 ; preds = %land.lhs.true184
  %49 = getelementptr inbounds %struct.rtx_def* %.pre428, i64 0, i32 0
  %bf.load189 = load i32* %49, align 8
  %bf.clear190 = and i32 %bf.load189, 65535
  %cmp191 = icmp eq i32 %bf.clear190, 103
  br i1 %cmp191, label %lor.lhs.false192, label %if.then200

lor.lhs.false192:                                 ; preds = %if.end179.lor.lhs.false192_crit_edge, %lor.lhs.false187
  %bf.load194 = phi i32 [ %bf.load194.pre, %if.end179.lor.lhs.false192_crit_edge ], [ %bf.load189, %lor.lhs.false187 ]
  %50 = phi %struct.rtx_def* [ %.pre, %if.end179.lor.lhs.false192_crit_edge ], [ %.pre428, %lor.lhs.false187 ]
  %bf.clear195 = and i32 %bf.load194, 65535
  %cmp196 = icmp eq i32 %bf.clear195, 102
  br i1 %cmp196, label %land.lhs.true197, label %if.end213

land.lhs.true197:                                 ; preds = %lor.lhs.false192
  %51 = load i32* @target_flags, align 4, !tbaa !1
  %and198 = and i32 %51, 16
  %tobool199 = icmp eq i32 %and198, 0
  br i1 %tobool199, label %if.end213, label %if.then200

if.then200:                                       ; preds = %land.lhs.true184, %lor.lhs.false187, %land.lhs.true197
  %52 = phi %struct.rtx_def* [ %.pre428, %lor.lhs.false187 ], [ %50, %land.lhs.true197 ], [ %.pre428, %land.lhs.true184 ]
  %53 = load %struct.rtx_def** %arrayidx80, align 8, !tbaa !6
  %54 = load %struct.rtx_def** %arrayidx181, align 8, !tbaa !6
  store %struct.rtx_def* %54, %struct.rtx_def** %arrayidx80, align 8, !tbaa !6
  store %struct.rtx_def* %53, %struct.rtx_def** %arrayidx181, align 8, !tbaa !6
  %55 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load208 = load i32* %55, align 8
  %bf.clear209 = and i32 %bf.load208, 65535
  %call210 = call i32 @reverse_condition_maybe_unordered(i32 %bf.clear209) #5
  %56 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %57 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call211 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %call210, i32 0, %struct.rtx_def* %56, %struct.rtx_def* %57) #5
  store %struct.rtx_def* %call211, %struct.rtx_def** %arrayidx77, align 8, !tbaa !6
  br label %if.end213

if.end213:                                        ; preds = %land.lhs.true197, %if.then200, %lor.lhs.false192
  %58 = phi %struct.rtx_def* [ %50, %land.lhs.true197 ], [ %call211, %if.then200 ], [ %50, %lor.lhs.false192 ]
  %59 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %60 = getelementptr inbounds %struct.rtx_def* %59, i64 0, i32 0
  %bf.load215 = load i32* %60, align 8
  %bf.clear217 = and i32 %bf.load215, 16711680
  %cmp218 = icmp eq i32 %bf.clear217, 983040
  %61 = load %struct.rtx_def** %arrayidx80, align 8, !tbaa !6
  %62 = load %struct.rtx_def** %arrayidx181, align 8, !tbaa !6
  %63 = load %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %64 = load %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  br i1 %cmp218, label %if.then219, label %if.else226

if.then219:                                       ; preds = %if.end213
  %call224 = call %struct.rtx_def* @gen_sse_movsfcc(%struct.rtx_def* %59, %struct.rtx_def* %58, %struct.rtx_def* %61, %struct.rtx_def* %62, %struct.rtx_def* %63, %struct.rtx_def* %64) #5
  %call225 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call224) #5
  br label %return

if.else226:                                       ; preds = %if.end213
  %call231 = call %struct.rtx_def* @gen_sse_movdfcc(%struct.rtx_def* %59, %struct.rtx_def* %58, %struct.rtx_def* %61, %struct.rtx_def* %62, %struct.rtx_def* %63, %struct.rtx_def* %64) #5
  %call232 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call231) #5
  br label %return

if.end234:                                        ; preds = %lor.lhs.false, %lor.lhs.false57, %lor.lhs.false27, %lor.lhs.false27, %land.lhs.true16, %land.lhs.true10
  %arrayidx235 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %65 = load %struct.rtx_def** %arrayidx235, align 8, !tbaa !6
  %66 = getelementptr inbounds %struct.rtx_def* %65, i64 0, i32 0
  %bf.load236 = load i32* %66, align 8
  %bf.clear237 = and i32 %bf.load236, 65535
  %call238 = call %struct.rtx_def* @ix86_expand_compare(i32 %bf.clear237, %struct.rtx_def** %second_test, %struct.rtx_def** %bypass_test)
  %67 = getelementptr inbounds %struct.rtx_def* %call238, i64 0, i32 0
  %bf.load.i413 = load i32* %67, align 8
  %bf.clear.i414 = and i32 %bf.load.i413, 65535
  %idxprom65.i = zext i32 %bf.clear.i414 to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom65.i
  %68 = load i8* %arrayidx.i, align 1, !tbaa !5
  %cmp4.i = icmp eq i8 %68, 60
  br i1 %cmp4.i, label %if.end7.i, label %if.then241

if.end7.i:                                        ; preds = %if.end234
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %call238, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %70 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 0
  %bf.load9.i = load i32* %70, align 8
  %bf.lshr10.i = lshr i32 %bf.load9.i, 16
  %bf.clear11.i = and i32 %bf.lshr10.i, 255
  %bf.clear11.off.i = add i32 %bf.clear11.i, -57
  %71 = icmp ult i32 %bf.clear11.off.i, 2
  br i1 %71, label %if.then16.i, label %if.end24.i

if.then16.i:                                      ; preds = %if.end7.i
  switch i32 %bf.clear.i414, label %sw.default.i.i [
    i32 105, label %sw.epilog.i.i
    i32 104, label %sw.epilog.i.i
    i32 113, label %sw.epilog.i.i
    i32 112, label %sw.epilog.i.i
    i32 114, label %sw.epilog.i.i
    i32 118, label %sw.epilog.i.i
    i32 117, label %sw.epilog.i.i
    i32 119, label %sw.epilog.i.i
    i32 107, label %sw.bb1.i.i
    i32 106, label %sw.bb2.i.i
    i32 103, label %sw.bb3.i.i
    i32 102, label %sw.bb4.i.i
    i32 115, label %sw.bb5.i.i
    i32 116, label %sw.bb6.i.i
  ]

sw.bb1.i.i:                                       ; preds = %if.then16.i
  br label %sw.epilog.i.i

sw.bb2.i.i:                                       ; preds = %if.then16.i
  br label %sw.epilog.i.i

sw.bb3.i.i:                                       ; preds = %if.then16.i
  br label %sw.epilog.i.i

sw.bb4.i.i:                                       ; preds = %if.then16.i
  br label %sw.epilog.i.i

sw.bb5.i.i:                                       ; preds = %if.then16.i
  br label %sw.epilog.i.i

sw.bb6.i.i:                                       ; preds = %if.then16.i
  br label %sw.epilog.i.i

sw.default.i.i:                                   ; preds = %if.then16.i
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 7379, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.ix86_fp_comparison_codes, i64 0, i64 0)) #8
  unreachable

sw.epilog.i.i:                                    ; preds = %sw.bb6.i.i, %sw.bb5.i.i, %sw.bb4.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %sw.bb1.i.i, %if.then16.i, %if.then16.i, %if.then16.i, %if.then16.i, %if.then16.i, %if.then16.i, %if.then16.i, %if.then16.i
  %bf.clear59.i = phi i32 [ 105, %sw.bb6.i.i ], [ 104, %sw.bb5.i.i ], [ 119, %sw.bb4.i.i ], [ 114, %sw.bb3.i.i ], [ 117, %sw.bb2.i.i ], [ 118, %sw.bb1.i.i ], [ %bf.clear.i414, %if.then16.i ], [ %bf.clear.i414, %if.then16.i ], [ %bf.clear.i414, %if.then16.i ], [ %bf.clear.i414, %if.then16.i ], [ %bf.clear.i414, %if.then16.i ], [ %bf.clear.i414, %if.then16.i ], [ %bf.clear.i414, %if.then16.i ], [ %bf.clear.i414, %if.then16.i ]
  %second_code.0.load58.i = phi i1 [ true, %sw.bb6.i.i ], [ true, %sw.bb5.i.i ], [ true, %sw.bb4.i.i ], [ false, %sw.bb3.i.i ], [ false, %sw.bb2.i.i ], [ false, %sw.bb1.i.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ]
  %bypass_code.0.load56.i = phi i1 [ false, %sw.bb6.i.i ], [ false, %sw.bb5.i.i ], [ false, %sw.bb4.i.i ], [ true, %sw.bb3.i.i ], [ true, %sw.bb2.i.i ], [ true, %sw.bb1.i.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ], [ false, %if.then16.i ]
  %72 = load i32* @target_flags, align 4, !tbaa !1
  %and.i.i = and i32 %72, 16
  %not.tobool.i.i = icmp ne i32 %and.i.i, 0
  %cmp1769.i = or i1 %bypass_code.0.load56.i, %second_code.0.load58.i
  %or.cond36.i = and i1 %cmp1769.i, %not.tobool.i.i
  br i1 %or.cond36.i, label %if.then241, label %if.end23.i

if.end23.i:                                       ; preds = %sw.epilog.i.i
  switch i32 %bf.clear59.i, label %if.then241 [
    i32 105, label %sw.bb.i
    i32 104, label %sw.bb.i
    i32 113, label %if.end24.i
    i32 112, label %if.end24.i
    i32 114, label %if.end250
    i32 118, label %sw.bb.i
    i32 117, label %sw.bb.i
    i32 119, label %if.end250
  ]

if.end24.i:                                       ; preds = %if.end23.i, %if.end23.i, %if.end7.i
  %bf.clear60.i = phi i32 [ %bf.clear.i414, %if.end7.i ], [ %bf.clear59.i, %if.end23.i ], [ %bf.clear59.i, %if.end23.i ]
  switch i32 %bf.clear60.i, label %if.then241 [
    i32 111, label %sw.bb.i
    i32 109, label %sw.bb.i
    i32 110, label %sw.bb.i
    i32 108, label %sw.bb.i
    i32 113, label %if.end250
    i32 112, label %if.end250
    i32 103, label %if.end250
    i32 102, label %if.end250
  ]

sw.bb.i:                                          ; preds = %if.end24.i, %if.end24.i, %if.end24.i, %if.end24.i, %if.end23.i, %if.end23.i, %if.end23.i, %if.end23.i
  switch i32 %bf.clear11.i, label %if.then241 [
    i32 58, label %if.end250
    i32 57, label %if.end250
    i32 52, label %if.end250
  ]

if.then241:                                       ; preds = %if.end23.i, %if.end24.i, %sw.bb.i, %if.end234, %sw.epilog.i.i
  %73 = load %struct.rtx_def** %second_test, align 8, !tbaa !6
  %cmp242 = icmp ne %struct.rtx_def* %73, null
  %74 = load %struct.rtx_def** %bypass_test, align 8
  %cmp244 = icmp ne %struct.rtx_def* %74, null
  %or.cond = or i1 %cmp242, %cmp244
  br i1 %or.cond, label %if.then245, label %if.end246

if.then245:                                       ; preds = %if.then241
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8532, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.ix86_expand_fp_movcc, i64 0, i64 0)) #8
  unreachable

if.end246:                                        ; preds = %if.then241
  %call247 = call %struct.rtx_def* @gen_reg_rtx(i32 2) #5
  %call248 = call i32 @ix86_expand_setcc(i32 %bf.clear237, %struct.rtx_def* %call247)
  store %struct.rtx_def* %call247, %struct.rtx_def** @ix86_compare_op0, align 8, !tbaa !6
  %75 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  store %struct.rtx_def* %75, %struct.rtx_def** @ix86_compare_op1, align 8, !tbaa !6
  %call249 = call %struct.rtx_def* @ix86_expand_compare(i32 102, %struct.rtx_def** %second_test, %struct.rtx_def** %bypass_test)
  br label %if.end250

if.end250:                                        ; preds = %if.end23.i, %if.end23.i, %if.end24.i, %if.end24.i, %if.end24.i, %if.end24.i, %sw.bb.i, %sw.bb.i, %sw.bb.i, %if.end246
  %compare_op.0 = phi %struct.rtx_def* [ %call249, %if.end246 ], [ %call238, %sw.bb.i ], [ %call238, %sw.bb.i ], [ %call238, %sw.bb.i ], [ %call238, %if.end24.i ], [ %call238, %if.end24.i ], [ %call238, %if.end24.i ], [ %call238, %if.end24.i ], [ %call238, %if.end23.i ], [ %call238, %if.end23.i ]
  %76 = load %struct.rtx_def** %bypass_test, align 8, !tbaa !6
  %tobool251 = icmp eq %struct.rtx_def* %76, null
  br i1 %tobool251, label %if.end266, label %land.lhs.true252

land.lhs.true252:                                 ; preds = %if.end250
  %77 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx254 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %78 = load %struct.rtx_def** %arrayidx254, align 8, !tbaa !6
  %call255 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %77, %struct.rtx_def* %78) #5
  %tobool256 = icmp eq i32 %call255, 0
  br i1 %tobool256, label %if.end266, label %if.then257

if.then257:                                       ; preds = %land.lhs.true252
  %79 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %80 = getelementptr inbounds %struct.rtx_def* %79, i64 0, i32 0
  %bf.load259 = load i32* %80, align 8
  %bf.lshr260 = lshr i32 %bf.load259, 16
  %bf.clear261 = and i32 %bf.lshr260, 255
  %call262 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear261) #5
  %81 = load %struct.rtx_def** %arrayidx254, align 8, !tbaa !6
  %call264 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call262, %struct.rtx_def* %81) #5
  store %struct.rtx_def* %call262, %struct.rtx_def** %arrayidx254, align 8, !tbaa !6
  br label %if.end266

if.end266:                                        ; preds = %land.lhs.true252, %if.end250, %if.then257
  %82 = load %struct.rtx_def** %second_test, align 8, !tbaa !6
  %tobool267 = icmp eq %struct.rtx_def* %82, null
  br i1 %tobool267, label %if.end266.if.end282_crit_edge, label %land.lhs.true268

if.end266.if.end282_crit_edge:                    ; preds = %if.end266
  %arrayidx288.pre = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  br label %if.end282

land.lhs.true268:                                 ; preds = %if.end266
  %83 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx270 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %84 = load %struct.rtx_def** %arrayidx270, align 8, !tbaa !6
  %call271 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %83, %struct.rtx_def* %84) #5
  %tobool272 = icmp eq i32 %call271, 0
  br i1 %tobool272, label %if.end282, label %if.then273

if.then273:                                       ; preds = %land.lhs.true268
  %85 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %86 = getelementptr inbounds %struct.rtx_def* %85, i64 0, i32 0
  %bf.load275 = load i32* %86, align 8
  %bf.lshr276 = lshr i32 %bf.load275, 16
  %bf.clear277 = and i32 %bf.lshr276, 255
  %call278 = call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear277) #5
  %87 = load %struct.rtx_def** %arrayidx270, align 8, !tbaa !6
  %call280 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call278, %struct.rtx_def* %87) #5
  store %struct.rtx_def* %call278, %struct.rtx_def** %arrayidx270, align 8, !tbaa !6
  br label %if.end282

if.end282:                                        ; preds = %if.end266.if.end282_crit_edge, %land.lhs.true268, %if.then273
  %arrayidx288.pre-phi = phi %struct.rtx_def** [ %arrayidx288.pre, %if.end266.if.end282_crit_edge ], [ %arrayidx270, %land.lhs.true268 ], [ %arrayidx270, %if.then273 ]
  %88 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %89 = getelementptr inbounds %struct.rtx_def* %88, i64 0, i32 0
  %bf.load285 = load i32* %89, align 8
  %bf.lshr286 = lshr i32 %bf.load285, 16
  %bf.clear287 = and i32 %bf.lshr286, 255
  %90 = load %struct.rtx_def** %arrayidx288.pre-phi, align 8, !tbaa !6
  %arrayidx289 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %91 = load %struct.rtx_def** %arrayidx289, align 8, !tbaa !6
  %call290 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 %bf.clear287, %struct.rtx_def* %compare_op.0, %struct.rtx_def* %90, %struct.rtx_def* %91) #5
  %call291 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %88, %struct.rtx_def* %call290) #5
  %call292 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call291) #5
  %92 = load %struct.rtx_def** %bypass_test, align 8, !tbaa !6
  %tobool293 = icmp eq %struct.rtx_def* %92, null
  br i1 %tobool293, label %if.end305, label %if.then294

if.then294:                                       ; preds = %if.end282
  %93 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %94 = getelementptr inbounds %struct.rtx_def* %93, i64 0, i32 0
  %bf.load297 = load i32* %94, align 8
  %bf.lshr298 = lshr i32 %bf.load297, 16
  %bf.clear299 = and i32 %bf.lshr298, 255
  %95 = load %struct.rtx_def** %arrayidx289, align 8, !tbaa !6
  %call302 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 %bf.clear299, %struct.rtx_def* %92, %struct.rtx_def* %95, %struct.rtx_def* %93) #5
  %call303 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %93, %struct.rtx_def* %call302) #5
  %call304 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call303) #5
  br label %if.end305

if.end305:                                        ; preds = %if.end282, %if.then294
  %96 = load %struct.rtx_def** %second_test, align 8, !tbaa !6
  %tobool306 = icmp eq %struct.rtx_def* %96, null
  br i1 %tobool306, label %return, label %if.then307

if.then307:                                       ; preds = %if.end305
  %97 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %98 = getelementptr inbounds %struct.rtx_def* %97, i64 0, i32 0
  %bf.load310 = load i32* %98, align 8
  %bf.lshr311 = lshr i32 %bf.load310, 16
  %bf.clear312 = and i32 %bf.lshr311, 255
  %99 = load %struct.rtx_def** %arrayidx288.pre-phi, align 8, !tbaa !6
  %call315 = call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 %bf.clear312, %struct.rtx_def* %96, %struct.rtx_def* %99, %struct.rtx_def* %97) #5
  %call316 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %97, %struct.rtx_def* %call315) #5
  %call317 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call316) #5
  br label %return

return:                                           ; preds = %if.then307, %if.end305, %if.then219, %if.else226, %if.then149, %if.else153, %if.then117, %if.else
  ret i32 1
}

declare %struct.rtx_def* @gen_minsf3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_mindf3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_maxsf3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_maxdf3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_sse_movsfcc(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_sse_movdfcc(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define void @ix86_split_long_move(%struct.rtx_def** %operands) #1 {
entry:
  %part = alloca [2 x [3 x %struct.rtx_def*]], align 16
  %0 = bitcast [2 x [3 x %struct.rtx_def*]]* %part to i8*
  call void @llvm.lifetime.start(i64 48, i8* %0) #5
  %1 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom561 = zext i32 %bf.clear to i64
  %arrayidx5 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom561
  %3 = load i8* %arrayidx5, align 1, !tbaa !5
  %cmp = icmp eq i8 %3, 8
  br i1 %cmp, label %land.lhs.true, label %if.end56

land.lhs.true:                                    ; preds = %entry
  %4 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %4, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end56, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %arrayidx7 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %5 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load8 = load i32* %6, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 66
  br i1 %cmp10, label %land.lhs.true12, label %if.end

land.lhs.true12:                                  ; preds = %if.then
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load15 = load i32* %8, align 8
  %9 = and i32 %bf.load15, 67174399
  %10 = icmp eq i32 %9, 67108932
  br i1 %10, label %if.then28, label %if.end

if.then28:                                        ; preds = %land.lhs.true12
  %call = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %7) #5
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx7, align 8, !tbaa !6
  %.pre = load %struct.rtx_def** %operands, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %land.lhs.true12, %if.then28, %if.then
  %11 = phi %struct.rtx_def* [ %1, %land.lhs.true12 ], [ %.pre, %if.then28 ], [ %1, %if.then ]
  %call35 = call i32 @push_operand(%struct.rtx_def* %11, i32 0) #5
  %tobool36 = icmp eq i32 %call35, 0
  %12 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  br i1 %tobool36, label %if.else, label %if.then37

if.then37:                                        ; preds = %if.end
  %call39 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %12) #5
  store %struct.rtx_def* %call39, %struct.rtx_def** %operands, align 8, !tbaa !6
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %14 = getelementptr inbounds %struct.rtx_def* %call39, i64 0, i32 0
  %bf.load44 = load i32* %14, align 8
  %15 = lshr i32 %13, 9
  %16 = and i32 %15, 65536
  %bf.clear45 = and i32 %bf.load44, -16711681
  %bf.shl = or i32 %16, %bf.clear45
  %bf.set = or i32 %bf.shl, 262144
  store i32 %bf.set, i32* %14, align 8
  br label %if.end49

if.else:                                          ; preds = %if.end
  %call47 = call %struct.rtx_def* @gen_lowpart(i32 5, %struct.rtx_def* %12) #5
  store %struct.rtx_def* %call47, %struct.rtx_def** %operands, align 8, !tbaa !6
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then37
  %17 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !6
  %call51 = call %struct.rtx_def* @gen_lowpart(i32 5, %struct.rtx_def* %17) #5
  store %struct.rtx_def* %call51, %struct.rtx_def** %arrayidx7, align 8, !tbaa !6
  %18 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %call55 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %18, %struct.rtx_def* %call51) #5
  br label %cleanup

if.end56:                                         ; preds = %land.lhs.true, %entry
  %call58 = call i32 @push_operand(%struct.rtx_def* %1, i32 0) #5
  %tobool59 = icmp eq i32 %call58, 0
  br i1 %tobool59, label %if.else61, label %if.end73

if.else61:                                        ; preds = %if.end56
  %19 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load63 = load i32* %20, align 8
  %bf.clear64 = and i32 %bf.load63, 65535
  %cmp65 = icmp eq i32 %bf.clear64, 66
  br i1 %cmp65, label %land.lhs.true67, label %if.end73

land.lhs.true67:                                  ; preds = %if.else61
  %call69 = call i32 @offsettable_memref_p(%struct.rtx_def* %19) #5
  %tobool70 = icmp eq i32 %call69, 0
  br i1 %tobool70, label %if.then71, label %if.end73

if.then71:                                        ; preds = %land.lhs.true67
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8753, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.ix86_split_long_move, i64 0, i64 0)) #8
  unreachable

if.end73:                                         ; preds = %if.end56, %land.lhs.true67, %if.else61
  %push.0 = phi i1 [ false, %land.lhs.true67 ], [ false, %if.else61 ], [ true, %if.end56 ]
  %arrayidx74 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %21 = load %struct.rtx_def** %arrayidx74, align 8, !tbaa !6
  %arraydecay = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 0
  %22 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load77 = load i32* %23, align 8
  %bf.lshr78 = lshr i32 %bf.load77, 16
  %bf.clear79 = and i32 %bf.lshr78, 255
  %call80 = call fastcc i32 @ix86_split_to_parts(%struct.rtx_def* %21, %struct.rtx_def** %arraydecay, i32 %bf.clear79)
  %24 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arraydecay83 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 0
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load85 = load i32* %25, align 8
  %bf.lshr86 = lshr i32 %bf.load85, 16
  %bf.clear87 = and i32 %bf.lshr86, 255
  %call88 = call fastcc i32 @ix86_split_to_parts(%struct.rtx_def* %24, %struct.rtx_def** %arraydecay83, i32 %bf.clear87)
  br i1 %push.0, label %land.lhs.true90, label %if.end135

land.lhs.true90:                                  ; preds = %if.end73
  %26 = load %struct.rtx_def** %arrayidx74, align 8, !tbaa !6
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load92 = load i32* %27, align 8
  %bf.clear93 = and i32 %bf.load92, 65535
  %cmp94 = icmp eq i32 %bf.clear93, 66
  br i1 %cmp94, label %land.lhs.true96, label %if.end135

land.lhs.true96:                                  ; preds = %land.lhs.true90
  %28 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call98 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %28, %struct.rtx_def* %26) #5
  %tobool99 = icmp eq i32 %call98, 0
  br i1 %tobool99, label %if.end135, label %if.then100

if.then100:                                       ; preds = %land.lhs.true96
  %cmp101 = icmp eq i32 %call80, 3
  %arrayidx105 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 1
  %29 = load %struct.rtx_def** %arrayidx105, align 8, !tbaa !6
  br i1 %cmp101, label %if.then103, label %if.end119

if.then103:                                       ; preds = %if.then100
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load108 = load i32* %30, align 8
  %bf.lshr109 = lshr i32 %bf.load108, 16
  %bf.clear110 = and i32 %bf.lshr109, 255
  %arrayidx112 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 2
  %31 = load %struct.rtx_def** %arrayidx112, align 8, !tbaa !6
  %arrayidx114 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx115, align 8, !tbaa !6
  %call116 = call %struct.rtx_def* @change_address(%struct.rtx_def* %29, i32 %bf.clear110, %struct.rtx_def* %32) #5
  store %struct.rtx_def* %call116, %struct.rtx_def** %arrayidx105, align 8, !tbaa !6
  br label %if.end119

if.end119:                                        ; preds = %if.then100, %if.then103
  %33 = phi %struct.rtx_def* [ %call116, %if.then103 ], [ %29, %if.then100 ]
  %34 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load124 = load i32* %35, align 8
  %bf.lshr125 = lshr i32 %bf.load124, 16
  %bf.clear126 = and i32 %bf.lshr125, 255
  %arrayidx130 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 1, i64 0
  %rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx131, align 8, !tbaa !6
  %call132 = call %struct.rtx_def* @change_address(%struct.rtx_def* %34, i32 %bf.clear126, %struct.rtx_def* %36) #5
  store %struct.rtx_def* %call132, %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  br label %if.end135

if.end135:                                        ; preds = %land.lhs.true96, %if.end119, %land.lhs.true90, %if.end73
  %37 = load %struct.rtx_def** %arraydecay83, align 16, !tbaa !6
  %38 = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 0
  %bf.load138 = load i32* %38, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  %cmp140 = icmp eq i32 %bf.clear139, 61
  br i1 %cmp140, label %land.lhs.true142, label %if.end266

land.lhs.true142:                                 ; preds = %if.end135
  %39 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %40 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load145 = load i32* %40, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  %cmp147 = icmp eq i32 %bf.clear146, 66
  br i1 %cmp147, label %if.then149, label %if.end266

if.then149:                                       ; preds = %land.lhs.true142
  %arrayidx155 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 0
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx156, align 8, !tbaa !6
  %call157 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %37, %struct.rtx_def* %41) #5
  %not.tobool158 = icmp ne i32 %call157, 0
  %. = zext i1 %not.tobool158 to i32
  %arrayidx162 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 1
  %42 = load %struct.rtx_def** %arrayidx162, align 8, !tbaa !6
  %43 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %arrayidx166 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 0
  %rtx167 = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**
  %44 = load %struct.rtx_def** %rtx167, align 8, !tbaa !6
  %call168 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %42, %struct.rtx_def* %44) #5
  %tobool169 = icmp eq i32 %call168, 0
  %inc171 = select i1 %not.tobool158, i32 2, i32 1
  %collisions.1 = select i1 %tobool169, i32 %., i32 %inc171
  %cmp173 = icmp eq i32 %call80, 3
  br i1 %cmp173, label %if.end187, label %if.else220

if.end187:                                        ; preds = %if.then149
  %arrayidx177 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 2
  %45 = load %struct.rtx_def** %arrayidx177, align 16, !tbaa !6
  %46 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %arrayidx181 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 0
  %rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx182, align 8, !tbaa !6
  %call183 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %45, %struct.rtx_def* %47) #5
  %not.tobool184 = icmp ne i32 %call183, 0
  %inc186 = zext i1 %not.tobool184 to i32
  %collisions.1.inc186 = add nsw i32 %inc186, %collisions.1
  %cmp188 = icmp eq i32 %collisions.1.inc186, 1
  br i1 %cmp188, label %land.lhs.true193, label %if.else220

land.lhs.true193:                                 ; preds = %if.end187
  %48 = load %struct.rtx_def** %arrayidx162, align 8, !tbaa !6
  %49 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %arrayidx199 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 0
  %rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx200, align 8, !tbaa !6
  %call201 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %48, %struct.rtx_def* %50) #5
  %tobool202 = icmp eq i32 %call201, 0
  br i1 %tobool202, label %if.end266, label %if.then203

if.then203:                                       ; preds = %land.lhs.true193
  %51 = load %struct.rtx_def** %arrayidx162, align 8, !tbaa !6
  %52 = load %struct.rtx_def** %arrayidx177, align 16, !tbaa !6
  store %struct.rtx_def* %52, %struct.rtx_def** %arrayidx162, align 8, !tbaa !6
  store %struct.rtx_def* %51, %struct.rtx_def** %arrayidx177, align 16, !tbaa !6
  %arrayidx213 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 1
  %53 = load %struct.rtx_def** %arrayidx213, align 8, !tbaa !6
  %arrayidx215 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 2
  %54 = load %struct.rtx_def** %arrayidx215, align 8, !tbaa !6
  store %struct.rtx_def* %54, %struct.rtx_def** %arrayidx213, align 8, !tbaa !6
  store %struct.rtx_def* %53, %struct.rtx_def** %arrayidx215, align 8, !tbaa !6
  br label %if.end266

if.else220:                                       ; preds = %if.then149, %if.end187
  %collisions.2566 = phi i32 [ %collisions.1.inc186, %if.end187 ], [ %collisions.1, %if.then149 ]
  %cmp221 = icmp sgt i32 %collisions.2566, 1
  br i1 %cmp221, label %if.then223, label %if.end266

if.then223:                                       ; preds = %if.else220
  %sub = add nsw i32 %call80, -1
  %idxprom224 = sext i32 %sub to i64
  %arrayidx226 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 %idxprom224
  %55 = load %struct.rtx_def** %arrayidx226, align 8, !tbaa !6
  %56 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %arrayidx230 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 0
  %rtx231 = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx231, align 8, !tbaa !6
  %call232 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %55, %struct.rtx_def* %57) #5
  %call233 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call232) #5
  %58 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %59 = load i32* @target_flags, align 4, !tbaa !1
  %and236 = lshr i32 %59, 25
  %60 = and i32 %and236, 1
  %61 = or i32 %60, 4
  %62 = load %struct.rtx_def** %arrayidx226, align 8, !tbaa !6
  %call243 = call %struct.rtx_def* @change_address(%struct.rtx_def* %58, i32 %61, %struct.rtx_def* %62) #5
  store %struct.rtx_def* %call243, %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %63 = load i32* @target_flags, align 4, !tbaa !1
  %and248 = lshr i32 %63, 23
  %64 = and i32 %and248, 4
  %65 = add i32 %64, 4
  %conv251562 = zext i32 %65 to i64
  %call252 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call243, i32 0, i64 %conv251562, i32 1, i32 1) #5
  %arrayidx254 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 1
  store %struct.rtx_def* %call252, %struct.rtx_def** %arrayidx254, align 8, !tbaa !6
  br i1 %cmp173, label %if.then257, label %if.end266

if.then257:                                       ; preds = %if.then223
  %66 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %call260 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %66, i32 0, i64 8, i32 1, i32 1) #5
  %arrayidx262 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 2
  store %struct.rtx_def* %call260, %struct.rtx_def** %arrayidx262, align 8, !tbaa !6
  br label %if.end266

if.end266:                                        ; preds = %land.lhs.true193, %if.then203, %if.then223, %if.then257, %if.else220, %land.lhs.true142, %if.end135
  %collisions.3 = phi i32 [ 1, %if.then203 ], [ 1, %if.then257 ], [ 1, %if.then223 ], [ %collisions.2566, %if.else220 ], [ 0, %land.lhs.true142 ], [ 0, %if.end135 ], [ 1, %land.lhs.true193 ]
  br i1 %push.0, label %if.then268, label %if.end355

if.then268:                                       ; preds = %if.end266
  %67 = load i32* @target_flags, align 4, !tbaa !1
  %and269 = and i32 %67, 33554432
  %tobool270 = icmp eq i32 %and269, 0
  br i1 %tobool270, label %if.then271, label %if.else291

if.then271:                                       ; preds = %if.then268
  %cmp272 = icmp eq i32 %call80, 3
  br i1 %cmp272, label %if.then274, label %if.end344

if.then274:                                       ; preds = %if.then271
  %cmp275.not = icmp eq i32 %bf.clear, 18
  br i1 %cmp275.not, label %if.then280, label %if.end284

if.then280:                                       ; preds = %if.then274
  %68 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call281 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -4) #5
  %call282 = call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %68, %struct.rtx_def* %68, %struct.rtx_def* %call281) #5
  %call283 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call282) #5
  br label %if.end284

if.end284:                                        ; preds = %if.then274, %if.then280
  %arrayidx286 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 2
  %69 = load %struct.rtx_def** %arrayidx286, align 16, !tbaa !6
  %arrayidx288 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 2
  %70 = load %struct.rtx_def** %arrayidx288, align 8, !tbaa !6
  %call289 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %69, %struct.rtx_def* %70) #5
  br label %if.end344

if.else291:                                       ; preds = %if.then268
  %arrayidx293 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 1
  %71 = load %struct.rtx_def** %arrayidx293, align 8, !tbaa !6
  %72 = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 0
  %bf.load294 = load i32* %72, align 8
  %bf.clear296 = and i32 %bf.load294, 16711680
  %cmp297 = icmp eq i32 %bf.clear296, 262144
  br i1 %cmp297, label %if.then299, label %if.end344

if.then299:                                       ; preds = %if.else291
  %bf.clear303 = and i32 %bf.load294, 65535
  switch i32 %bf.clear303, label %if.else327 [
    i32 66, label %if.then306
    i32 61, label %if.then319
  ]

if.then306:                                       ; preds = %if.then299
  %call309 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %71, i32 5, i64 0, i32 1, i32 1) #5
  br label %if.end329

if.then319:                                       ; preds = %if.then299
  %arrayidx323 = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx323 to i32*
  %73 = load i32* %rtuint, align 4, !tbaa !1
  %call324 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 %73) #5
  br label %if.end329

if.else327:                                       ; preds = %if.then299
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8834, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.ix86_split_long_move, i64 0, i64 0)) #8
  unreachable

if.end329:                                        ; preds = %if.then319, %if.then306
  %storemerge = phi %struct.rtx_def* [ %call324, %if.then319 ], [ %call309, %if.then306 ]
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %arrayidx293, align 8, !tbaa !6
  %74 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %75 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 0
  %bf.load332 = load i32* %75, align 8
  %bf.clear334 = and i32 %bf.load332, 16711680
  %cmp335 = icmp eq i32 %bf.clear334, 262144
  br i1 %cmp335, label %if.then337, label %if.end344

if.then337:                                       ; preds = %if.end329
  store %struct.rtx_def* %storemerge, %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  br label %if.end344

if.end344:                                        ; preds = %if.else291, %if.then337, %if.end329, %if.then271, %if.end284
  %arrayidx346 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 1
  %76 = load %struct.rtx_def** %arrayidx346, align 8, !tbaa !6
  %arrayidx348 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 1
  %77 = load %struct.rtx_def** %arrayidx348, align 8, !tbaa !6
  %call349 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %76, %struct.rtx_def* %77) #5
  %78 = load %struct.rtx_def** %arraydecay83, align 16, !tbaa !6
  %79 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %call354 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %78, %struct.rtx_def* %79) #5
  br label %cleanup

if.end355:                                        ; preds = %if.end266
  %80 = load %struct.rtx_def** %arraydecay83, align 16, !tbaa !6
  %81 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 0
  %bf.load358 = load i32* %81, align 8
  %bf.clear359 = and i32 %bf.load358, 65535
  %cmp360 = icmp eq i32 %bf.clear359, 61
  br i1 %cmp360, label %land.lhs.true362, label %lor.lhs.false397

land.lhs.true362:                                 ; preds = %if.end355
  %arrayidx364 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 1
  %82 = load %struct.rtx_def** %arrayidx364, align 8, !tbaa !6
  %83 = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 0
  %bf.load365 = load i32* %83, align 8
  %bf.clear366 = and i32 %bf.load365, 65535
  %cmp367 = icmp eq i32 %bf.clear366, 61
  br i1 %cmp367, label %land.lhs.true369, label %lor.lhs.false397

land.lhs.true369:                                 ; preds = %land.lhs.true362
  %arrayidx373 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 0
  %rtuint374 = bitcast %union.rtunion_def* %arrayidx373 to i32*
  %84 = load i32* %rtuint374, align 4, !tbaa !1
  %arrayidx378 = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 1, i64 0
  %rtuint379 = bitcast %union.rtunion_def* %arrayidx378 to i32*
  %85 = load i32* %rtuint379, align 4, !tbaa !1
  %cmp380 = icmp eq i32 %84, %85
  br i1 %cmp380, label %if.then410, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true369
  %cmp382 = icmp eq i32 %call80, 3
  br i1 %cmp382, label %land.lhs.true384, label %lor.lhs.false397

land.lhs.true384:                                 ; preds = %lor.lhs.false
  %arrayidx391 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 2
  %86 = load %struct.rtx_def** %arrayidx391, align 8, !tbaa !6
  %arrayidx393 = getelementptr inbounds %struct.rtx_def* %86, i64 0, i32 1, i64 0
  %rtuint394 = bitcast %union.rtunion_def* %arrayidx393 to i32*
  %87 = load i32* %rtuint394, align 4, !tbaa !1
  %cmp395 = icmp eq i32 %84, %87
  br i1 %cmp395, label %if.then413, label %lor.lhs.false397

lor.lhs.false397:                                 ; preds = %land.lhs.true384, %lor.lhs.false, %land.lhs.true362, %if.end355
  %cmp398 = icmp sgt i32 %collisions.3, 0
  br i1 %cmp398, label %land.lhs.true400, label %if.else446

land.lhs.true400:                                 ; preds = %lor.lhs.false397
  %88 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %arrayidx406 = getelementptr inbounds %struct.rtx_def* %88, i64 0, i32 1, i64 0
  %rtx407 = bitcast %union.rtunion_def* %arrayidx406 to %struct.rtx_def**
  %89 = load %struct.rtx_def** %rtx407, align 8, !tbaa !6
  %call408 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %80, %struct.rtx_def* %89) #5
  %tobool409 = icmp eq i32 %call408, 0
  br i1 %tobool409, label %land.lhs.true400.if.else446_crit_edge, label %if.then410

land.lhs.true400.if.else446_crit_edge:            ; preds = %land.lhs.true400
  %.pre572 = load %struct.rtx_def** %arraydecay83, align 16, !tbaa !6
  br label %if.else446

if.then410:                                       ; preds = %land.lhs.true400, %land.lhs.true369
  %cmp411 = icmp eq i32 %call80, 3
  br i1 %cmp411, label %if.then410.if.then413_crit_edge, label %if.else432

if.then410.if.then413_crit_edge:                  ; preds = %if.then410
  %.pre569 = load %struct.rtx_def** %arraydecay83, align 16, !tbaa !6
  %arrayidx424.phi.trans.insert = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 2
  %.pre570 = load %struct.rtx_def** %arrayidx424.phi.trans.insert, align 8, !tbaa !6
  %arrayidx427.phi.trans.insert = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 1
  %.pre571 = load %struct.rtx_def** %arrayidx427.phi.trans.insert, align 8, !tbaa !6
  br label %if.then413

if.then413:                                       ; preds = %if.then410.if.then413_crit_edge, %land.lhs.true384
  %90 = phi %struct.rtx_def* [ %.pre571, %if.then410.if.then413_crit_edge ], [ %82, %land.lhs.true384 ]
  %91 = phi %struct.rtx_def* [ %.pre570, %if.then410.if.then413_crit_edge ], [ %86, %land.lhs.true384 ]
  %92 = phi %struct.rtx_def* [ %.pre569, %if.then410.if.then413_crit_edge ], [ %80, %land.lhs.true384 ]
  %arrayidx415 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 2
  %93 = load %struct.rtx_def** %arrayidx415, align 16, !tbaa !6
  %arrayidx416 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %93, %struct.rtx_def** %arrayidx416, align 8, !tbaa !6
  %arrayidx418 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 1
  %94 = load %struct.rtx_def** %arrayidx418, align 8, !tbaa !6
  %arrayidx419 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  store %struct.rtx_def* %94, %struct.rtx_def** %arrayidx419, align 8, !tbaa !6
  %arrayidx422 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  store %struct.rtx_def* %92, %struct.rtx_def** %arrayidx422, align 8, !tbaa !6
  %arrayidx425 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  store %struct.rtx_def* %91, %struct.rtx_def** %arrayidx425, align 8, !tbaa !6
  %arrayidx428 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  store %struct.rtx_def* %90, %struct.rtx_def** %arrayidx428, align 8, !tbaa !6
  %95 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %arrayidx431 = getelementptr inbounds %struct.rtx_def** %operands, i64 7
  store %struct.rtx_def* %95, %struct.rtx_def** %arrayidx431, align 8, !tbaa !6
  br label %if.end482

if.else432:                                       ; preds = %if.then410
  %arrayidx434 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 1
  %96 = load %struct.rtx_def** %arrayidx434, align 8, !tbaa !6
  %arrayidx435 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %96, %struct.rtx_def** %arrayidx435, align 8, !tbaa !6
  %97 = load %struct.rtx_def** %arraydecay83, align 16, !tbaa !6
  %arrayidx438 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  store %struct.rtx_def* %97, %struct.rtx_def** %arrayidx438, align 8, !tbaa !6
  %arrayidx440 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 1
  %98 = load %struct.rtx_def** %arrayidx440, align 8, !tbaa !6
  %arrayidx441 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  store %struct.rtx_def* %98, %struct.rtx_def** %arrayidx441, align 8, !tbaa !6
  %99 = load %struct.rtx_def** %arraydecay, align 8, !tbaa !6
  %arrayidx444 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  store %struct.rtx_def* %99, %struct.rtx_def** %arrayidx444, align 8, !tbaa !6
  br label %if.end482

if.else446:                                       ; preds = %land.lhs.true400.if.else446_crit_edge, %lor.lhs.false397
  %100 = phi %struct.rtx_def* [ %.pre572, %land.lhs.true400.if.else446_crit_edge ], [ %80, %lor.lhs.false397 ]
  %cmp447 = icmp eq i32 %call80, 3
  %arrayidx452 = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  store %struct.rtx_def* %100, %struct.rtx_def** %arrayidx452, align 8, !tbaa !6
  %arrayidx454 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 1
  %101 = load %struct.rtx_def** %arrayidx454, align 8, !tbaa !6
  %arrayidx455 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  store %struct.rtx_def* %101, %struct.rtx_def** %arrayidx455, align 8, !tbaa !6
  br i1 %cmp447, label %if.then449, label %if.else468

if.then449:                                       ; preds = %if.else446
  %arrayidx457 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 0, i64 2
  %arrayidx458 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %102 = bitcast %struct.rtx_def** %arrayidx457 to <2 x %struct.rtx_def*>*
  %103 = load <2 x %struct.rtx_def*>* %102, align 16, !tbaa !6
  %104 = bitcast %struct.rtx_def** %arrayidx458 to <2 x %struct.rtx_def*>*
  store <2 x %struct.rtx_def*> %103, <2 x %struct.rtx_def*>* %104, align 8, !tbaa !6
  %arrayidx463 = getelementptr inbounds [2 x [3 x %struct.rtx_def*]]* %part, i64 0, i64 1, i64 1
  %arrayidx464 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  %105 = bitcast %struct.rtx_def** %arrayidx463 to <2 x %struct.rtx_def*>*
  %106 = load <2 x %struct.rtx_def*>* %105, align 8, !tbaa !6
  %107 = bitcast %struct.rtx_def** %arrayidx464 to <2 x %struct.rtx_def*>*
  store <2 x %struct.rtx_def*> %106, <2 x %struct.rtx_def*>* %107, align 8, !tbaa !6
  %108 = extractelement <2 x %struct.rtx_def*> %103, i32 1
  br label %if.end482

if.else468:                                       ; preds = %if.else446
  %arrayidx477 = getelementptr inbounds %struct.rtx_def** %operands, i64 5
  %109 = bitcast %struct.rtx_def** %arraydecay to <2 x %struct.rtx_def*>*
  %110 = load <2 x %struct.rtx_def*>* %109, align 8, !tbaa !6
  %111 = bitcast %struct.rtx_def** %arrayidx477 to <2 x %struct.rtx_def*>*
  store <2 x %struct.rtx_def*> %110, <2 x %struct.rtx_def*>* %111, align 8, !tbaa !6
  %112 = extractelement <2 x %struct.rtx_def*> %110, i32 0
  br label %if.end482

if.end482:                                        ; preds = %if.then449, %if.else468, %if.then413, %if.else432
  %113 = phi %struct.rtx_def* [ %108, %if.then449 ], [ %112, %if.else468 ], [ %91, %if.then413 ], [ %98, %if.else432 ]
  %114 = phi %struct.rtx_def* [ %100, %if.then449 ], [ %100, %if.else468 ], [ %93, %if.then413 ], [ %96, %if.else432 ]
  %call485 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %114, %struct.rtx_def* %113) #5
  %arrayidx486 = getelementptr inbounds %struct.rtx_def** %operands, i64 3
  %115 = load %struct.rtx_def** %arrayidx486, align 8, !tbaa !6
  %arrayidx487 = getelementptr inbounds %struct.rtx_def** %operands, i64 6
  %116 = load %struct.rtx_def** %arrayidx487, align 8, !tbaa !6
  %call488 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %115, %struct.rtx_def* %116) #5
  %cmp489 = icmp eq i32 %call80, 3
  br i1 %cmp489, label %if.then491, label %cleanup

if.then491:                                       ; preds = %if.end482
  %arrayidx492 = getelementptr inbounds %struct.rtx_def** %operands, i64 4
  %117 = load %struct.rtx_def** %arrayidx492, align 8, !tbaa !6
  %arrayidx493 = getelementptr inbounds %struct.rtx_def** %operands, i64 7
  %118 = load %struct.rtx_def** %arrayidx493, align 8, !tbaa !6
  %call494 = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %117, %struct.rtx_def* %118) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end482, %if.then491, %if.end344, %if.end49
  call void @llvm.lifetime.end(i64 48, i8* %0) #5
  ret void
}

declare %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) #0

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_lowpart(i32, %struct.rtx_def*) #0

declare i32 @offsettable_memref_p(%struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define internal fastcc i32 @ix86_split_to_parts(%struct.rtx_def* %operand, %struct.rtx_def** %parts, i32 %mode) #1 {
entry:
  %operand.addr = alloca %struct.rtx_def*, align 8
  %r = alloca %struct.realvaluetype, align 8
  %l = alloca [4 x i64], align 16
  %r222 = alloca %struct.realvaluetype, align 8
  %l223 = alloca [3 x i64], align 16
  store %struct.rtx_def* %operand, %struct.rtx_def** %operand.addr, align 8, !tbaa !6
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %cmp = icmp eq i32 %mode, 18
  br i1 %cmp, label %if.end, label %cond.false

cond.false:                                       ; preds = %if.then
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx, align 1, !tbaa !5
  %div314 = lshr i8 %1, 2
  %div = zext i8 %div314 to i32
  br label %if.end

if.else:                                          ; preds = %entry
  %idxprom1 = sext i32 %mode to i64
  %arrayidx2 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1
  %2 = load i8* %arrayidx2, align 1, !tbaa !5
  %conv3 = zext i8 %2 to i32
  %add = add nsw i32 %conv3, 4
  %div4 = lshr i32 %add, 3
  br label %if.end

if.end:                                           ; preds = %cond.false, %if.then, %if.else
  %size.0 = phi i32 [ %div4, %if.else ], [ %div, %cond.false ], [ 3, %if.then ]
  %3 = getelementptr inbounds %struct.rtx_def* %operand, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp5 = icmp eq i32 %bf.clear, 61
  br i1 %cmp5, label %land.lhs.true, label %if.end17

land.lhs.true:                                    ; preds = %if.end
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %operand, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !1
  %.off = add i32 %4, -29
  %5 = icmp ult i32 %.off, 8
  br i1 %5, label %if.then16, label %if.end17

if.then16:                                        ; preds = %land.lhs.true
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8593, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.ix86_split_to_parts, i64 0, i64 0)) #8
  unreachable

if.end17:                                         ; preds = %land.lhs.true, %if.end
  %6 = and i32 %size.0, 536870910
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %if.end23, label %if.then22

if.then22:                                        ; preds = %if.end17
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8595, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.ix86_split_to_parts, i64 0, i64 0)) #8
  unreachable

if.end23:                                         ; preds = %if.end17
  %cmp26 = icmp eq i32 %bf.clear, 66
  br i1 %cmp26, label %land.lhs.true28, label %if.end46

land.lhs.true28:                                  ; preds = %if.end23
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %operand, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load31 = load i32* %9, align 8
  %10 = and i32 %bf.load31, 67174399
  %11 = icmp eq i32 %10, 67108932
  br i1 %11, label %if.then42, label %if.end46

if.then42:                                        ; preds = %land.lhs.true28
  %call = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %8) #5
  store %struct.rtx_def* %call, %struct.rtx_def** %operand.addr, align 8, !tbaa !6
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load47.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end46

if.end46:                                         ; preds = %land.lhs.true28, %if.then42, %if.end23
  %bf.load47 = phi i32 [ %bf.load, %land.lhs.true28 ], [ %bf.load47.pre, %if.then42 ], [ %bf.load, %if.end23 ]
  %12 = phi %struct.rtx_def* [ %operand, %land.lhs.true28 ], [ %call, %if.then42 ], [ %operand, %if.end23 ]
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 66
  br i1 %cmp49, label %land.lhs.true51, label %if.else68

land.lhs.true51:                                  ; preds = %if.end46
  %call52 = call i32 @offsettable_memref_p(%struct.rtx_def* %12) #5
  %tobool53 = icmp eq i32 %call52, 0
  br i1 %tobool53, label %if.then54, label %if.else68

if.then54:                                        ; preds = %land.lhs.true51
  %call55 = call i32 @push_operand(%struct.rtx_def* %12, i32 0) #5
  %tobool56 = icmp eq i32 %call55, 0
  br i1 %tobool56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.then54
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8609, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.ix86_split_to_parts, i64 0, i64 0)) #8
  unreachable

if.end58:                                         ; preds = %if.then54
  %call59 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %12) #5
  store %struct.rtx_def* %call59, %struct.rtx_def** %operand.addr, align 8, !tbaa !6
  %14 = load i32* @target_flags, align 4, !tbaa !1
  %15 = getelementptr inbounds %struct.rtx_def* %call59, i64 0, i32 0
  %bf.load63 = load i32* %15, align 8
  %16 = lshr i32 %14, 9
  %17 = and i32 %16, 65536
  %bf.clear64 = and i32 %bf.load63, -16711681
  %bf.shl = or i32 %17, %bf.clear64
  %bf.set = or i32 %bf.shl, 262144
  store i32 %bf.set, i32* %15, align 8
  %arrayidx65 = getelementptr inbounds %struct.rtx_def** %parts, i64 2
  store %struct.rtx_def* %call59, %struct.rtx_def** %arrayidx65, align 8, !tbaa !6
  %arrayidx66 = getelementptr inbounds %struct.rtx_def** %parts, i64 1
  store %struct.rtx_def* %call59, %struct.rtx_def** %arrayidx66, align 8, !tbaa !6
  store %struct.rtx_def* %call59, %struct.rtx_def** %parts, align 8, !tbaa !6
  br label %if.end276

if.else68:                                        ; preds = %land.lhs.true51, %if.end46
  %18 = load i32* @target_flags, align 4, !tbaa !1
  %and69 = and i32 %18, 33554432
  %tobool70 = icmp eq i32 %and69, 0
  br i1 %tobool70, label %if.then71, label %if.else175

if.then71:                                        ; preds = %if.else68
  %cmp72 = icmp eq i32 %mode, 5
  br i1 %cmp72, label %if.then74, label %if.else77

if.then74:                                        ; preds = %if.then71
  %arrayidx76 = getelementptr inbounds %struct.rtx_def** %parts, i64 1
  call void @split_di(%struct.rtx_def** %operand.addr, i32 1, %struct.rtx_def** %parts, %struct.rtx_def** %arrayidx76)
  br label %if.end276

if.else77:                                        ; preds = %if.then71
  %bf.load78 = load i32* %13, align 8
  %bf.clear79 = and i32 %bf.load78, 65535
  %cmp80 = icmp eq i32 %bf.clear79, 61
  br i1 %cmp80, label %if.then82, label %if.else108

if.then82:                                        ; preds = %if.else77
  %19 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool83 = icmp eq i32 %19, 0
  br i1 %tobool83, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.then82
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8624, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.ix86_split_to_parts, i64 0, i64 0)) #8
  unreachable

if.end85:                                         ; preds = %if.then82
  %arrayidx87 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtuint88 = bitcast %union.rtunion_def* %arrayidx87 to i32*
  %20 = load i32* %rtuint88, align 4, !tbaa !1
  %call90 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %20) #5
  store %struct.rtx_def* %call90, %struct.rtx_def** %parts, align 8, !tbaa !6
  %21 = load i32* %rtuint88, align 4, !tbaa !1
  %add95 = add i32 %21, 1
  %call96 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %add95) #5
  %arrayidx97 = getelementptr inbounds %struct.rtx_def** %parts, i64 1
  store %struct.rtx_def* %call96, %struct.rtx_def** %arrayidx97, align 8, !tbaa !6
  %cmp98 = icmp eq i32 %size.0, 3
  br i1 %cmp98, label %if.then100, label %if.end276

if.then100:                                       ; preds = %if.end85
  %22 = load i32* %rtuint88, align 4, !tbaa !1
  %add104 = add i32 %22, 2
  %call105 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %add104) #5
  %arrayidx106 = getelementptr inbounds %struct.rtx_def** %parts, i64 2
  store %struct.rtx_def* %call105, %struct.rtx_def** %arrayidx106, align 8, !tbaa !6
  br label %if.end276

if.else108:                                       ; preds = %if.else77
  %call109 = call i32 @offsettable_memref_p(%struct.rtx_def* %12) #5
  %tobool110 = icmp eq i32 %call109, 0
  br i1 %tobool110, label %if.else122, label %if.then111

if.then111:                                       ; preds = %if.else108
  %call112 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %12, i32 4, i64 0, i32 1, i32 1) #5
  store %struct.rtx_def* %call112, %struct.rtx_def** %operand.addr, align 8, !tbaa !6
  store %struct.rtx_def* %call112, %struct.rtx_def** %parts, align 8, !tbaa !6
  %call114 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call112, i32 4, i64 4, i32 1, i32 1) #5
  %arrayidx115 = getelementptr inbounds %struct.rtx_def** %parts, i64 1
  store %struct.rtx_def* %call114, %struct.rtx_def** %arrayidx115, align 8, !tbaa !6
  %cmp116 = icmp eq i32 %size.0, 3
  br i1 %cmp116, label %if.then118, label %if.end276

if.then118:                                       ; preds = %if.then111
  %call119 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call112, i32 4, i64 8, i32 1, i32 1) #5
  %arrayidx120 = getelementptr inbounds %struct.rtx_def** %parts, i64 2
  store %struct.rtx_def* %call119, %struct.rtx_def** %arrayidx120, align 8, !tbaa !6
  br label %if.end276

if.else122:                                       ; preds = %if.else108
  %bf.load123 = load i32* %13, align 8
  %bf.clear124 = and i32 %bf.load123, 65535
  %cmp125 = icmp eq i32 %bf.clear124, 55
  br i1 %cmp125, label %do.body, label %if.else170

do.body:                                          ; preds = %if.else122
  %rtwint = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 1, i32 0
  %u.sroa.0.0..sroa_cast = bitcast i64* %rtwint to i8*
  %u.sroa.0.0..sroa_cast282 = bitcast %struct.realvaluetype* %r to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast282, i8* %u.sroa.0.0..sroa_cast, i64 24, i32 8, i1 false)
  switch i32 %mode, label %sw.default [
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 16, label %sw.bb160
  ]

sw.bb:                                            ; preds = %do.body, %do.body
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and130 = and i32 %23, 16777216
  %cmp140 = icmp eq i32 %and130, 0
  %arraydecay143 = getelementptr inbounds [4 x i64]* %l, i64 0, i64 0
  br i1 %cmp140, label %cond.true142, label %cond.true150

cond.true142:                                     ; preds = %sw.bb
  call void @etarldouble(%struct.realvaluetype* byval align 8 %r, i64* %arraydecay143) #5
  br label %cond.end155

cond.true150:                                     ; preds = %sw.bb
  call void @etartdouble(%struct.realvaluetype* byval align 8 %r, i64* %arraydecay143) #5
  br label %cond.end155

cond.end155:                                      ; preds = %cond.true142, %cond.true150
  %arrayidx156 = getelementptr inbounds [4 x i64]* %l, i64 0, i64 2
  %24 = load i64* %arrayidx156, align 16, !tbaa !104
  %call157 = call i64 @trunc_int_for_mode(i64 %24, i32 4) #5
  %call158 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call157) #5
  %arrayidx159 = getelementptr inbounds %struct.rtx_def** %parts, i64 2
  store %struct.rtx_def* %call158, %struct.rtx_def** %arrayidx159, align 8, !tbaa !6
  br label %sw.epilog

sw.bb160:                                         ; preds = %do.body
  %arraydecay161 = getelementptr inbounds [4 x i64]* %l, i64 0, i64 0
  call void @etardouble(%struct.realvaluetype* byval align 8 %r, i64* %arraydecay161) #5
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8655, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.ix86_split_to_parts, i64 0, i64 0)) #8
  unreachable

sw.epilog:                                        ; preds = %sw.bb160, %cond.end155
  %arrayidx162 = getelementptr inbounds [4 x i64]* %l, i64 0, i64 1
  %25 = load i64* %arrayidx162, align 8, !tbaa !104
  %call163 = call i64 @trunc_int_for_mode(i64 %25, i32 4) #5
  %call164 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call163) #5
  %arrayidx165 = getelementptr inbounds %struct.rtx_def** %parts, i64 1
  store %struct.rtx_def* %call164, %struct.rtx_def** %arrayidx165, align 8, !tbaa !6
  %arrayidx166 = getelementptr inbounds [4 x i64]* %l, i64 0, i64 0
  %26 = load i64* %arrayidx166, align 16, !tbaa !104
  %call167 = call i64 @trunc_int_for_mode(i64 %26, i32 4) #5
  %call168 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call167) #5
  store %struct.rtx_def* %call168, %struct.rtx_def** %parts, align 8, !tbaa !6
  br label %if.end276

if.else170:                                       ; preds = %if.else122
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8661, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.ix86_split_to_parts, i64 0, i64 0)) #8
  unreachable

if.else175:                                       ; preds = %if.else68
  %cmp176 = icmp eq i32 %mode, 6
  br i1 %cmp176, label %if.end181.thread, label %if.end181

if.end181.thread:                                 ; preds = %if.else175
  %arrayidx180 = getelementptr inbounds %struct.rtx_def** %parts, i64 1
  call void @split_ti(%struct.rtx_def** %operand.addr, i32 1, %struct.rtx_def** %parts, %struct.rtx_def** %arrayidx180)
  br label %if.end276

if.end181:                                        ; preds = %if.else175
  %mode.off = add i32 %mode, -17
  %27 = icmp ult i32 %mode.off, 2
  br i1 %27, label %if.then187, label %if.end276

if.then187:                                       ; preds = %if.end181
  %bf.load188 = load i32* %13, align 8
  %bf.clear189 = and i32 %bf.load188, 65535
  %cmp190 = icmp eq i32 %bf.clear189, 61
  br i1 %cmp190, label %if.then192, label %if.else208

if.then192:                                       ; preds = %if.then187
  %28 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool193 = icmp eq i32 %28, 0
  br i1 %tobool193, label %if.then194, label %if.end195

if.then194:                                       ; preds = %if.then192
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8673, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.ix86_split_to_parts, i64 0, i64 0)) #8
  unreachable

if.end195:                                        ; preds = %if.then192
  %arrayidx197 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtuint198 = bitcast %union.rtunion_def* %arrayidx197 to i32*
  %29 = load i32* %rtuint198, align 4, !tbaa !1
  %call200 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 %29) #5
  store %struct.rtx_def* %call200, %struct.rtx_def** %parts, align 8, !tbaa !6
  %30 = load i32* %rtuint198, align 4, !tbaa !1
  %add205 = add i32 %30, 1
  %call206 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 %add205) #5
  %arrayidx207 = getelementptr inbounds %struct.rtx_def** %parts, i64 1
  store %struct.rtx_def* %call206, %struct.rtx_def** %arrayidx207, align 8, !tbaa !6
  br label %if.end276

if.else208:                                       ; preds = %if.then187
  %call209 = call i32 @offsettable_memref_p(%struct.rtx_def* %12) #5
  %tobool210 = icmp eq i32 %call209, 0
  br i1 %tobool210, label %if.else216, label %if.then211

if.then211:                                       ; preds = %if.else208
  %call212 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %12, i32 5, i64 0, i32 1, i32 1) #5
  store %struct.rtx_def* %call212, %struct.rtx_def** %operand.addr, align 8, !tbaa !6
  store %struct.rtx_def* %call212, %struct.rtx_def** %parts, align 8, !tbaa !6
  %call214 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call212, i32 4, i64 8, i32 1, i32 1) #5
  %arrayidx215 = getelementptr inbounds %struct.rtx_def** %parts, i64 1
  store %struct.rtx_def* %call214, %struct.rtx_def** %arrayidx215, align 8, !tbaa !6
  br label %if.end276

if.else216:                                       ; preds = %if.else208
  %bf.load217 = load i32* %13, align 8
  %bf.clear218 = and i32 %bf.load217, 65535
  %cmp219 = icmp eq i32 %bf.clear218, 55
  br i1 %cmp219, label %do.body224, label %if.else270

do.body224:                                       ; preds = %if.else216
  %rtwint228 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 1, i32 0
  %u225.sroa.0.0..sroa_cast = bitcast i64* %rtwint228 to i8*
  %u225.sroa.0.0..sroa_cast279 = bitcast %struct.realvaluetype* %r222 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %u225.sroa.0.0..sroa_cast279, i8* %u225.sroa.0.0..sroa_cast, i64 24, i32 8, i1 false)
  %31 = load i32* @target_flags, align 4, !tbaa !1
  %and231 = and i32 %31, 16777216
  %cmp242 = icmp eq i32 %and231, 0
  %arraydecay245 = getelementptr inbounds [3 x i64]* %l223, i64 0, i64 0
  br i1 %cmp242, label %cond.true244, label %cond.true252

cond.true244:                                     ; preds = %do.body224
  call void @etarldouble(%struct.realvaluetype* byval align 8 %r222, i64* %arraydecay245) #5
  br label %cond.end257

cond.true252:                                     ; preds = %do.body224
  call void @etartdouble(%struct.realvaluetype* byval align 8 %r222, i64* %arraydecay245) #5
  br label %cond.end257

cond.end257:                                      ; preds = %cond.true244, %cond.true252
  %32 = load i64* %arraydecay245, align 16, !tbaa !104
  %and259 = and i64 %32, 4294967295
  %arrayidx260 = getelementptr inbounds [3 x i64]* %l223, i64 0, i64 1
  %33 = load i64* %arrayidx260, align 8, !tbaa !104
  %shl = shl i64 %33, 32
  %add262 = or i64 %shl, %and259
  %call263 = call i64 @trunc_int_for_mode(i64 %add262, i32 5) #5
  %call264 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call263) #5
  store %struct.rtx_def* %call264, %struct.rtx_def** %parts, align 8, !tbaa !6
  %arrayidx266 = getelementptr inbounds [3 x i64]* %l223, i64 0, i64 2
  %34 = load i64* %arrayidx266, align 16, !tbaa !104
  %call267 = call i64 @trunc_int_for_mode(i64 %34, i32 4) #5
  %call268 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call267) #5
  %arrayidx269 = getelementptr inbounds %struct.rtx_def** %parts, i64 1
  store %struct.rtx_def* %call268, %struct.rtx_def** %arrayidx269, align 8, !tbaa !6
  br label %if.end276

if.else270:                                       ; preds = %if.else216
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 8702, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.ix86_split_to_parts, i64 0, i64 0)) #8
  unreachable

if.end276:                                        ; preds = %if.end181.thread, %if.then100, %if.end85, %if.then111, %if.then118, %sw.epilog, %if.then74, %if.end195, %cond.end257, %if.then211, %if.end181, %if.end58
  ret i32 %size.0
}

declare %struct.rtx_def* @change_address(%struct.rtx_def*, i32, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define void @ix86_split_ashldi(%struct.rtx_def** nocapture readonly %operands, %struct.rtx_def* %scratch) #1 {
entry:
  %low = alloca [2 x %struct.rtx_def*], align 16
  %high = alloca [2 x %struct.rtx_def*], align 16
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %if.then, label %if.else41

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.rtx_def*]* %low, i64 0, i64 0
  %arraydecay1 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 0
  call void @split_di(%struct.rtx_def** %operands, i32 2, %struct.rtx_def** %arraydecay, %struct.rtx_def** %arraydecay1)
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %rtwint = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, i32 0
  %3 = load i64* %rtwint, align 8, !tbaa !77
  %.tr = trunc i64 %3 to i32
  %conv = and i32 %.tr, 63
  %cmp4 = icmp ugt i32 %conv, 31
  br i1 %cmp4, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then
  %4 = load %struct.rtx_def** %arraydecay1, align 16, !tbaa !6
  %arrayidx8 = getelementptr inbounds [2 x %struct.rtx_def*]* %low, i64 0, i64 1
  %5 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !6
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %4, %struct.rtx_def* %5) #5
  %6 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call10 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %6, %struct.rtx_def* %7) #5
  %cmp11 = icmp ugt i32 %conv, 32
  br i1 %cmp11, label %if.then13, label %if.end90

if.then13:                                        ; preds = %if.then6
  %sub = add nsw i32 %conv, -32
  %conv16 = sext i32 %sub to i64
  %call17 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv16) #5
  %call18 = tail call %struct.rtx_def* @gen_ashlsi3(%struct.rtx_def* %4, %struct.rtx_def* %4, %struct.rtx_def* %call17) #5
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #5
  br label %if.end90

if.else:                                          ; preds = %if.then
  %8 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx21 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %9 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %call22 = tail call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %9) #5
  %tobool = icmp eq i32 %call22, 0
  br i1 %tobool, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.else
  %10 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %11 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %call26 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %10, %struct.rtx_def* %11) #5
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then23
  %12 = load %struct.rtx_def** %arraydecay1, align 16, !tbaa !6
  %13 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  %conv30111 = zext i32 %conv to i64
  %call31 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv30111) #5
  %call32 = tail call %struct.rtx_def* @gen_x86_shld_1(%struct.rtx_def* %12, %struct.rtx_def* %13, %struct.rtx_def* %call31) #5
  %call33 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call32) #5
  %call37 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv30111) #5
  %call38 = tail call %struct.rtx_def* @gen_ashlsi3(%struct.rtx_def* %13, %struct.rtx_def* %13, %struct.rtx_def* %call37) #5
  %call39 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call38) #5
  br label %if.end90

if.else41:                                        ; preds = %entry
  %14 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx43 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %15 = load %struct.rtx_def** %arrayidx43, align 8, !tbaa !6
  %call44 = tail call i32 @rtx_equal_p(%struct.rtx_def* %14, %struct.rtx_def* %15) #5
  %tobool45 = icmp eq i32 %call44, 0
  br i1 %tobool45, label %if.then46, label %if.end50

if.then46:                                        ; preds = %if.else41
  %16 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %17 = load %struct.rtx_def** %arrayidx43, align 8, !tbaa !6
  %call49 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %16, %struct.rtx_def* %17) #5
  br label %if.end50

if.end50:                                         ; preds = %if.else41, %if.then46
  %arraydecay51 = getelementptr inbounds [2 x %struct.rtx_def*]* %low, i64 0, i64 0
  %arraydecay52 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 0
  call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arraydecay51, %struct.rtx_def** %arraydecay52)
  %18 = load %struct.rtx_def** %arraydecay52, align 16, !tbaa !6
  %19 = load %struct.rtx_def** %arraydecay51, align 16, !tbaa !6
  %20 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call56 = tail call %struct.rtx_def* @gen_x86_shld_1(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %20) #5
  %call57 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call56) #5
  %21 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call61 = tail call %struct.rtx_def* @gen_ashlsi3(%struct.rtx_def* %19, %struct.rtx_def* %19, %struct.rtx_def* %21) #5
  %call62 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call61) #5
  %22 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl = shl i32 1, %22
  %and63 = and i32 %shl, 104
  %tobool64 = icmp eq i32 %and63, 0
  br i1 %tobool64, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.end50
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and65 = and i32 %23, 327680
  %cmp66 = icmp eq i32 %and65, 0
  br i1 %cmp66, label %if.else83, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end50
  %24 = load i32* @no_new_pseudos, align 4, !tbaa !1
  %tobool68 = icmp eq i32 %24, 0
  %tobool70 = icmp ne %struct.rtx_def* %scratch, null
  %or.cond = or i1 %tobool68, %tobool70
  br i1 %or.cond, label %if.then71, label %if.else83

if.then71:                                        ; preds = %land.lhs.true
  %25 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br i1 %tobool68, label %if.then73, label %if.else75

if.then73:                                        ; preds = %if.then71
  %call74 = tail call %struct.rtx_def* @force_reg(i32 4, %struct.rtx_def* %25) #5
  br label %if.end77

if.else75:                                        ; preds = %if.then71
  %call76 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %scratch, %struct.rtx_def* %25) #5
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %if.then73
  %scratch.addr.0 = phi %struct.rtx_def* [ %scratch, %if.else75 ], [ %call74, %if.then73 ]
  %26 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call81 = tail call %struct.rtx_def* @gen_x86_shift_adj_1(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %26, %struct.rtx_def* %scratch.addr.0) #5
  %call82 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call81) #5
  br label %if.end90

if.else83:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %27 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call87 = tail call %struct.rtx_def* @gen_x86_shift_adj_2(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %27) #5
  %call88 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call87) #5
  br label %if.end90

if.end90:                                         ; preds = %if.end77, %if.else83, %if.end27, %if.then13, %if.then6
  ret void
}

declare %struct.rtx_def* @gen_ashlsi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_x86_shld_1(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_x86_shift_adj_1(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_x86_shift_adj_2(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define void @ix86_split_ashrdi(%struct.rtx_def** nocapture readonly %operands, %struct.rtx_def* %scratch) #1 {
entry:
  %low = alloca [2 x %struct.rtx_def*], align 16
  %high = alloca [2 x %struct.rtx_def*], align 16
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %if.then, label %if.else56

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.rtx_def*]* %low, i64 0, i64 0
  %arraydecay1 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 0
  call void @split_di(%struct.rtx_def** %operands, i32 2, %struct.rtx_def** %arraydecay, %struct.rtx_def** %arraydecay1)
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %rtwint = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, i32 0
  %3 = load i64* %rtwint, align 8, !tbaa !77
  %.tr = trunc i64 %3 to i32
  %conv = and i32 %.tr, 63
  %cmp4 = icmp ugt i32 %conv, 31
  br i1 %cmp4, label %if.then6, label %if.else33

if.then6:                                         ; preds = %if.then
  %4 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  %arrayidx8 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 1
  %5 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !6
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %4, %struct.rtx_def* %5) #5
  %6 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool = icmp eq i32 %6, 0
  %7 = load %struct.rtx_def** %arraydecay1, align 16, !tbaa !6
  br i1 %tobool, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then6
  %call12 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #5
  %call13 = tail call %struct.rtx_def* @gen_ashrsi3(%struct.rtx_def* %7, %struct.rtx_def* %4, %struct.rtx_def* %call12) #5
  %call14 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call13) #5
  br label %if.end

if.else:                                          ; preds = %if.then6
  %call17 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %7, %struct.rtx_def* %4) #5
  %call20 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #5
  %call21 = tail call %struct.rtx_def* @gen_ashrsi3(%struct.rtx_def* %7, %struct.rtx_def* %7, %struct.rtx_def* %call20) #5
  %call22 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call21) #5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  %cmp23 = icmp ugt i32 %conv, 32
  br i1 %cmp23, label %if.then25, label %if.end108

if.then25:                                        ; preds = %if.end
  %sub = add nsw i32 %conv, -32
  %conv28 = sext i32 %sub to i64
  %call29 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv28) #5
  %call30 = tail call %struct.rtx_def* @gen_ashrsi3(%struct.rtx_def* %4, %struct.rtx_def* %4, %struct.rtx_def* %call29) #5
  %call31 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call30) #5
  br label %if.end108

if.else33:                                        ; preds = %if.then
  %8 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx35 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %9 = load %struct.rtx_def** %arrayidx35, align 8, !tbaa !6
  %call36 = tail call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %9) #5
  %tobool37 = icmp eq i32 %call36, 0
  br i1 %tobool37, label %if.then38, label %if.end42

if.then38:                                        ; preds = %if.else33
  %10 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %11 = load %struct.rtx_def** %arrayidx35, align 8, !tbaa !6
  %call41 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %10, %struct.rtx_def* %11) #5
  br label %if.end42

if.end42:                                         ; preds = %if.else33, %if.then38
  %12 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  %13 = load %struct.rtx_def** %arraydecay1, align 16, !tbaa !6
  %conv45131 = zext i32 %conv to i64
  %call46 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv45131) #5
  %call47 = tail call %struct.rtx_def* @gen_x86_shrd_1(%struct.rtx_def* %12, %struct.rtx_def* %13, %struct.rtx_def* %call46) #5
  %call48 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call47) #5
  %call52 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv45131) #5
  %call53 = tail call %struct.rtx_def* @gen_ashrsi3(%struct.rtx_def* %13, %struct.rtx_def* %13, %struct.rtx_def* %call52) #5
  %call54 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call53) #5
  br label %if.end108

if.else56:                                        ; preds = %entry
  %14 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx58 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %15 = load %struct.rtx_def** %arrayidx58, align 8, !tbaa !6
  %call59 = tail call i32 @rtx_equal_p(%struct.rtx_def* %14, %struct.rtx_def* %15) #5
  %tobool60 = icmp eq i32 %call59, 0
  br i1 %tobool60, label %if.then61, label %if.end65

if.then61:                                        ; preds = %if.else56
  %16 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %17 = load %struct.rtx_def** %arrayidx58, align 8, !tbaa !6
  %call64 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %16, %struct.rtx_def* %17) #5
  br label %if.end65

if.end65:                                         ; preds = %if.else56, %if.then61
  %arraydecay66 = getelementptr inbounds [2 x %struct.rtx_def*]* %low, i64 0, i64 0
  %arraydecay67 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 0
  call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arraydecay66, %struct.rtx_def** %arraydecay67)
  %18 = load %struct.rtx_def** %arraydecay66, align 16, !tbaa !6
  %19 = load %struct.rtx_def** %arraydecay67, align 16, !tbaa !6
  %20 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call71 = tail call %struct.rtx_def* @gen_x86_shrd_1(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %20) #5
  %call72 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call71) #5
  %21 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call76 = tail call %struct.rtx_def* @gen_ashrsi3(%struct.rtx_def* %19, %struct.rtx_def* %19, %struct.rtx_def* %21) #5
  %call77 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call76) #5
  %22 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl = shl i32 1, %22
  %and78 = and i32 %shl, 104
  %tobool79 = icmp eq i32 %and78, 0
  br i1 %tobool79, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.end65
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and80 = and i32 %23, 327680
  %cmp81 = icmp eq i32 %and80, 0
  br i1 %cmp81, label %if.else101, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end65
  %24 = load i32* @no_new_pseudos, align 4, !tbaa !1
  %tobool83 = icmp eq i32 %24, 0
  %tobool85 = icmp ne %struct.rtx_def* %scratch, null
  %or.cond = or i1 %tobool83, %tobool85
  br i1 %or.cond, label %if.then86, label %if.else101

if.then86:                                        ; preds = %land.lhs.true
  br i1 %tobool83, label %if.then88, label %if.end90

if.then88:                                        ; preds = %if.then86
  %call89 = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #5
  br label %if.end90

if.end90:                                         ; preds = %if.then86, %if.then88
  %scratch.addr.0 = phi %struct.rtx_def* [ %scratch, %if.then86 ], [ %call89, %if.then88 ]
  %call92 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %scratch.addr.0, %struct.rtx_def* %19) #5
  %call93 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 31) #5
  %call94 = tail call %struct.rtx_def* @gen_ashrsi3(%struct.rtx_def* %scratch.addr.0, %struct.rtx_def* %scratch.addr.0, %struct.rtx_def* %call93) #5
  %call95 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call94) #5
  %25 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call99 = tail call %struct.rtx_def* @gen_x86_shift_adj_1(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %25, %struct.rtx_def* %scratch.addr.0) #5
  %call100 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call99) #5
  br label %if.end108

if.else101:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %26 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call105 = tail call %struct.rtx_def* @gen_x86_shift_adj_3(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %26) #5
  %call106 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call105) #5
  br label %if.end108

if.end108:                                        ; preds = %if.end90, %if.else101, %if.end42, %if.then25, %if.end
  ret void
}

declare %struct.rtx_def* @gen_ashrsi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_x86_shrd_1(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_x86_shift_adj_3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define void @ix86_split_lshrdi(%struct.rtx_def** nocapture readonly %operands, %struct.rtx_def* %scratch) #1 {
entry:
  %low = alloca [2 x %struct.rtx_def*], align 16
  %high = alloca [2 x %struct.rtx_def*], align 16
  %arrayidx = getelementptr inbounds %struct.rtx_def** %operands, i64 2
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %if.then, label %if.else41

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.rtx_def*]* %low, i64 0, i64 0
  %arraydecay1 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 0
  call void @split_di(%struct.rtx_def** %operands, i32 2, %struct.rtx_def** %arraydecay, %struct.rtx_def** %arraydecay1)
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %rtwint = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, i32 0
  %3 = load i64* %rtwint, align 8, !tbaa !77
  %.tr = trunc i64 %3 to i32
  %conv = and i32 %.tr, 63
  %cmp4 = icmp ugt i32 %conv, 31
  br i1 %cmp4, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then
  %4 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  %arrayidx8 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 1
  %5 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !6
  %call = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %4, %struct.rtx_def* %5) #5
  %6 = load %struct.rtx_def** %arraydecay1, align 16, !tbaa !6
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call10 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %6, %struct.rtx_def* %7) #5
  %cmp11 = icmp ugt i32 %conv, 32
  br i1 %cmp11, label %if.then13, label %if.end90

if.then13:                                        ; preds = %if.then6
  %sub = add nsw i32 %conv, -32
  %conv16 = sext i32 %sub to i64
  %call17 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv16) #5
  %call18 = tail call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %4, %struct.rtx_def* %4, %struct.rtx_def* %call17) #5
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #5
  br label %if.end90

if.else:                                          ; preds = %if.then
  %8 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx21 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %9 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %call22 = tail call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %9) #5
  %tobool = icmp eq i32 %call22, 0
  br i1 %tobool, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.else
  %10 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %11 = load %struct.rtx_def** %arrayidx21, align 8, !tbaa !6
  %call26 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %10, %struct.rtx_def* %11) #5
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then23
  %12 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  %13 = load %struct.rtx_def** %arraydecay1, align 16, !tbaa !6
  %conv30111 = zext i32 %conv to i64
  %call31 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv30111) #5
  %call32 = tail call %struct.rtx_def* @gen_x86_shrd_1(%struct.rtx_def* %12, %struct.rtx_def* %13, %struct.rtx_def* %call31) #5
  %call33 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call32) #5
  %call37 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv30111) #5
  %call38 = tail call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %13, %struct.rtx_def* %13, %struct.rtx_def* %call37) #5
  %call39 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call38) #5
  br label %if.end90

if.else41:                                        ; preds = %entry
  %14 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %arrayidx43 = getelementptr inbounds %struct.rtx_def** %operands, i64 1
  %15 = load %struct.rtx_def** %arrayidx43, align 8, !tbaa !6
  %call44 = tail call i32 @rtx_equal_p(%struct.rtx_def* %14, %struct.rtx_def* %15) #5
  %tobool45 = icmp eq i32 %call44, 0
  br i1 %tobool45, label %if.then46, label %if.end50

if.then46:                                        ; preds = %if.else41
  %16 = load %struct.rtx_def** %operands, align 8, !tbaa !6
  %17 = load %struct.rtx_def** %arrayidx43, align 8, !tbaa !6
  %call49 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %16, %struct.rtx_def* %17) #5
  br label %if.end50

if.end50:                                         ; preds = %if.else41, %if.then46
  %arraydecay51 = getelementptr inbounds [2 x %struct.rtx_def*]* %low, i64 0, i64 0
  %arraydecay52 = getelementptr inbounds [2 x %struct.rtx_def*]* %high, i64 0, i64 0
  call void @split_di(%struct.rtx_def** %operands, i32 1, %struct.rtx_def** %arraydecay51, %struct.rtx_def** %arraydecay52)
  %18 = load %struct.rtx_def** %arraydecay51, align 16, !tbaa !6
  %19 = load %struct.rtx_def** %arraydecay52, align 16, !tbaa !6
  %20 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call56 = tail call %struct.rtx_def* @gen_x86_shrd_1(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %20) #5
  %call57 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call56) #5
  %21 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call61 = tail call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %19, %struct.rtx_def* %19, %struct.rtx_def* %21) #5
  %call62 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call61) #5
  %22 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl = shl i32 1, %22
  %and63 = and i32 %shl, 104
  %tobool64 = icmp eq i32 %and63, 0
  br i1 %tobool64, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.end50
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and65 = and i32 %23, 327680
  %cmp66 = icmp eq i32 %and65, 0
  br i1 %cmp66, label %if.else83, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end50
  %24 = load i32* @no_new_pseudos, align 4, !tbaa !1
  %tobool68 = icmp eq i32 %24, 0
  %tobool70 = icmp ne %struct.rtx_def* %scratch, null
  %or.cond = or i1 %tobool68, %tobool70
  br i1 %or.cond, label %if.then71, label %if.else83

if.then71:                                        ; preds = %land.lhs.true
  %25 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br i1 %tobool68, label %if.then73, label %if.else75

if.then73:                                        ; preds = %if.then71
  %call74 = tail call %struct.rtx_def* @force_reg(i32 4, %struct.rtx_def* %25) #5
  br label %if.end77

if.else75:                                        ; preds = %if.then71
  %call76 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %scratch, %struct.rtx_def* %25) #5
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %if.then73
  %scratch.addr.0 = phi %struct.rtx_def* [ %scratch, %if.else75 ], [ %call74, %if.then73 ]
  %26 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call81 = tail call %struct.rtx_def* @gen_x86_shift_adj_1(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %26, %struct.rtx_def* %scratch.addr.0) #5
  %call82 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call81) #5
  br label %if.end90

if.else83:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %27 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %call87 = tail call %struct.rtx_def* @gen_x86_shift_adj_2(%struct.rtx_def* %18, %struct.rtx_def* %19, %struct.rtx_def* %27) #5
  %call88 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call87) #5
  br label %if.end90

if.end90:                                         ; preds = %if.end77, %if.else83, %if.end27, %if.then13, %if.then6
  ret void
}

declare %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @ix86_zero_extend_to_Pmode(%struct.rtx_def* %exp) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %exp, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %1, 25
  %2 = and i32 %and, 1
  %3 = or i32 %2, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @force_reg(i32 %3, %struct.rtx_def* %exp) #5
  br label %return

if.end:                                           ; preds = %entry
  %cmp7 = icmp eq i32 %bf.clear, %3
  br i1 %cmp7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end
  %call12 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear, %struct.rtx_def* %exp) #5
  br label %return

if.end13:                                         ; preds = %if.end
  %call17 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %3) #5
  %call18 = tail call %struct.rtx_def* @gen_zero_extendsidi2(%struct.rtx_def* %call17, %struct.rtx_def* %exp) #5
  %call19 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18) #5
  br label %return

return:                                           ; preds = %if.end13, %if.then8, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call12, %if.then8 ], [ %call17, %if.end13 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_zero_extendsidi2(%struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_expand_movstr(%struct.rtx_def* readonly %dst, %struct.rtx_def* readonly %src, %struct.rtx_def* %count_exp, %struct.rtx_def* nocapture readonly %align_exp) #1 {
entry:
  tail call void @start_sequence() #5
  %0 = getelementptr inbounds %struct.rtx_def* %align_exp, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %align_exp, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !77
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %align.0 = phi i64 [ %1, %if.then ], [ 0, %entry ]
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %2, 512
  %tobool = icmp eq i32 %and, 0
  %align.0. = select i1 %tobool, i64 %align.0, i64 64
  %3 = getelementptr inbounds %struct.rtx_def* %count_exp, i64 0, i32 0
  %bf.load3 = load i32* %3, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 54
  br i1 %cmp5, label %if.then6, label %if.end10

if.then6:                                         ; preds = %if.end
  %rtwint9 = getelementptr inbounds %struct.rtx_def* %count_exp, i64 0, i32 1, i64 0, i32 0
  %4 = load i64* %rtwint9, align 8, !tbaa !77
  br label %if.end10

if.end10:                                         ; preds = %if.then6, %if.end
  %count.0 = phi i64 [ %4, %if.then6 ], [ 0, %if.end ]
  %and11 = and i32 %2, 33554432
  %tobool12 = icmp eq i32 %and11, 0
  %bf.clear14 = and i32 %bf.load3, 16711680
  %cmp15 = icmp eq i32 %bf.clear14, 262144
  %or.cond604 = or i1 %tobool12, %cmp15
  br i1 %or.cond604, label %if.end23, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %if.end10
  switch i32 %bf.clear4, label %x86_64_zero_extended_value.exit [
    i32 58, label %sw.bb8.i
    i32 54, label %sw.bb1.i
    i32 68, label %sw.bb2.i
    i32 67, label %sw.bb3.i
  ]

sw.bb1.i:                                         ; preds = %lor.lhs.false16
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %count_exp, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint.i, align 8, !tbaa !77
  %lnot.i = icmp ult i64 %5, 4294967296
  %lnot.ext.i = zext i1 %lnot.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb2.i:                                         ; preds = %lor.lhs.false16
  %6 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp.i = icmp eq i32 %6, 1
  %conv.i = zext i1 %cmp.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb3.i:                                         ; preds = %lor.lhs.false16
  %7 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %8 = and i32 %7, -3
  %9 = icmp eq i32 %8, 1
  %lor.ext.i = zext i1 %9 to i32
  br label %x86_64_zero_extended_value.exit

sw.bb8.i:                                         ; preds = %lor.lhs.false16
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %count_exp, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx10.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load11.i = load i32* %11, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  %cmp13.i = icmp eq i32 %bf.clear12.i, 75
  br i1 %cmp13.i, label %if.then.i, label %if.end60.i

if.then.i:                                        ; preds = %sw.bb8.i
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 1
  %rtx26.i = bitcast %union.rtunion_def* %arrayidx25.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx26.i, align 8, !tbaa !6
  %13 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp27.i = icmp eq i32 %13, 4
  br i1 %cmp27.i, label %x86_64_zero_extended_value.exit, label %if.end.i

if.end.i:                                         ; preds = %if.then.i
  %fld18.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1
  %rtx20.i = bitcast [1 x %union.rtunion_def]* %fld18.i to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx20.i, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load30.i = load i32* %15, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  %cond.i = icmp eq i32 %bf.clear31.i, 67
  br i1 %cond.i, label %sw.bb33.i, label %x86_64_zero_extended_value.exit

sw.bb33.i:                                        ; preds = %if.end.i
  %16 = and i32 %13, -3
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %land.lhs.true.i, label %if.end60.i

land.lhs.true.i:                                  ; preds = %sw.bb33.i
  %18 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load38.i = load i32* %18, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 65535
  %cmp40.i = icmp eq i32 %bf.clear39.i, 54
  br i1 %cmp40.i, label %land.lhs.true42.i, label %if.end60.i

land.lhs.true42.i:                                ; preds = %land.lhs.true.i
  %rtwint45.i = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, i32 0
  %19 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call.i = tail call i64 @trunc_int_for_mode(i64 %19, i32 5) #5
  %cmp46.i = icmp sgt i64 %call.i, -65536
  br i1 %cmp46.i, label %land.lhs.true48.i, label %if.end60.i

land.lhs.true48.i:                                ; preds = %land.lhs.true42.i
  %20 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call52.i = tail call i64 @trunc_int_for_mode(i64 %20, i32 4) #5
  %21 = load i64* %rtwint45.i, align 8, !tbaa !77
  %cmp56.i = icmp eq i64 %call52.i, %21
  br i1 %cmp56.i, label %x86_64_zero_extended_value.exit, label %if.end60.i

if.end60.i:                                       ; preds = %land.lhs.true48.i, %land.lhs.true42.i, %land.lhs.true.i, %sw.bb33.i, %sw.bb8.i
  br label %x86_64_zero_extended_value.exit

x86_64_zero_extended_value.exit:                  ; preds = %lor.lhs.false16, %sw.bb1.i, %sw.bb2.i, %sw.bb3.i, %if.then.i, %if.end.i, %land.lhs.true48.i, %if.end60.i
  %retval.0.i = phi i32 [ 0, %if.end60.i ], [ %lor.ext.i, %sw.bb3.i ], [ %conv.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb1.i ], [ 0, %if.then.i ], [ 1, %land.lhs.true48.i ], [ 0, %if.end.i ], [ 0, %lor.lhs.false16 ]
  %tobool17 = icmp eq i32 %retval.0.i, 0
  %. = select i1 %tobool17, i32 5, i32 4
  %.pre = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end23

if.end23:                                         ; preds = %x86_64_zero_extended_value.exit, %if.end10
  %22 = phi i32 [ %2, %if.end10 ], [ %.pre, %x86_64_zero_extended_value.exit ]
  %counter_mode.0 = phi i32 [ 4, %if.end10 ], [ %., %x86_64_zero_extended_value.exit ]
  %and24 = lshr i32 %22, 25
  %23 = and i32 %and24, 1
  %24 = or i32 %23, 4
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %dst, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call28 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %24, %struct.rtx_def* %25) #5
  %26 = load i32* @target_flags, align 4, !tbaa !1
  %and29 = lshr i32 %26, 25
  %27 = and i32 %and29, 1
  %28 = or i32 %27, 4
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %src, i64 0, i32 1, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx34, align 8, !tbaa !6
  %call35 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %28, %struct.rtx_def* %29) #5
  %call36 = tail call %struct.rtx_def* @gen_cld() #5
  %call37 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call36) #5
  %30 = load i32* @optimize, align 4, !tbaa !1
  %tobool38 = icmp eq i32 %30, 0
  %31 = load i32* @optimize_size, align 4
  %tobool40 = icmp ne i32 %31, 0
  %or.cond348 = or i1 %tobool38, %tobool40
  br i1 %or.cond348, label %land.lhs.true41, label %if.else57

land.lhs.true41:                                  ; preds = %if.end23
  %cmp42 = icmp ne i64 %count.0, 0
  %and44 = and i64 %count.0, 3
  %tobool45 = icmp eq i64 %and44, 0
  %or.cond = and i1 %cmp42, %tobool45
  br i1 %or.cond, label %if.else57, label %if.then46

if.then46:                                        ; preds = %land.lhs.true41
  %bf.load.i519 = load i32* %3, align 8
  %bf.lshr.i = lshr i32 %bf.load.i519, 16
  %bf.clear.i520 = and i32 %bf.lshr.i, 255
  %cmp.i521 = icmp eq i32 %bf.clear.i520, 0
  %32 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %32, 25
  %33 = and i32 %and.i, 1
  %34 = or i32 %33, 4
  br i1 %cmp.i521, label %if.then.i523, label %if.end.i524

if.then.i523:                                     ; preds = %if.then46
  %call.i522 = tail call %struct.rtx_def* @force_reg(i32 %34, %struct.rtx_def* %count_exp) #5
  br label %ix86_zero_extend_to_Pmode.exit

if.end.i524:                                      ; preds = %if.then46
  %cmp7.i = icmp eq i32 %bf.clear.i520, %34
  br i1 %cmp7.i, label %if.then8.i, label %if.end13.i

if.then8.i:                                       ; preds = %if.end.i524
  %call12.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear.i520, %struct.rtx_def* %count_exp) #5
  br label %ix86_zero_extend_to_Pmode.exit

if.end13.i:                                       ; preds = %if.end.i524
  %call17.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %34) #5
  %call18.i = tail call %struct.rtx_def* @gen_zero_extendsidi2(%struct.rtx_def* %call17.i, %struct.rtx_def* %count_exp) #5
  %call19.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18.i) #5
  br label %ix86_zero_extend_to_Pmode.exit

ix86_zero_extend_to_Pmode.exit:                   ; preds = %if.then.i523, %if.then8.i, %if.end13.i
  %retval.0.i525 = phi %struct.rtx_def* [ %call.i522, %if.then.i523 ], [ %call12.i, %if.then8.i ], [ %call17.i, %if.end13.i ]
  %35 = load i32* @target_flags, align 4, !tbaa !1
  %and48 = and i32 %35, 33554432
  %tobool49 = icmp eq i32 %and48, 0
  br i1 %tobool49, label %if.else53, label %if.then50

if.then50:                                        ; preds = %ix86_zero_extend_to_Pmode.exit
  %call51 = tail call %struct.rtx_def* @gen_rep_movqi_rex64(%struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i525, %struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i525) #5
  %call52 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call51) #5
  br label %if.end345

if.else53:                                        ; preds = %ix86_zero_extend_to_Pmode.exit
  %call54 = tail call %struct.rtx_def* @gen_rep_movqi(%struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i525, %struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i525) #5
  %call55 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call54) #5
  br label %if.end345

if.else57:                                        ; preds = %land.lhs.true41, %if.end23
  %cmp58 = icmp ne i64 %count.0, 0
  br i1 %cmp58, label %land.lhs.true59, label %if.else57.if.else129_crit_edge

if.else57.if.else129_crit_edge:                   ; preds = %if.else57
  %.pre599 = load i32* @ix86_cpu, align 4, !tbaa !5
  br label %if.else129

land.lhs.true59:                                  ; preds = %if.else57
  %cmp60 = icmp sgt i64 %align.0., 7
  br i1 %cmp60, label %if.then72, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %land.lhs.true59
  %36 = load i32* @ix86_cpu, align 4, !tbaa !5
  %cmp62 = icmp eq i32 %36, 3
  br i1 %cmp62, label %lor.lhs.false68, label %land.lhs.true63

land.lhs.true63:                                  ; preds = %lor.lhs.false61
  %37 = load i32* @target_flags, align 4, !tbaa !1
  %and64 = and i32 %37, 33554432
  %tobool65 = icmp eq i32 %and64, 0
  %cmp67 = icmp sgt i64 %align.0., 3
  %or.cond349 = and i1 %tobool65, %cmp67
  %or.cond350 = or i1 %or.cond349, %tobool40
  %cmp71 = icmp ult i64 %count.0, 64
  %or.cond352 = or i1 %or.cond350, %cmp71
  br i1 %or.cond352, label %if.then72, label %cond.false

lor.lhs.false68:                                  ; preds = %lor.lhs.false61
  %cmp71.old = icmp ult i64 %count.0, 64
  %or.cond354 = or i1 %tobool40, %cmp71.old
  br i1 %or.cond354, label %if.then72, label %if.else129

if.then72:                                        ; preds = %land.lhs.true63, %lor.lhs.false68, %land.lhs.true59
  %38 = load i32* @target_flags, align 4, !tbaa !1
  %and73 = and i32 %38, 33554432
  %lnot = icmp eq i32 %31, 0
  %not.tobool74 = icmp ne i32 %and73, 0
  %.lnot = and i1 %lnot, %not.tobool74
  %conv = select i1 %.lnot, i64 -8, i64 -4
  %and77 = and i64 %conv, %count.0
  %tobool78 = icmp eq i64 %and77, 0
  br i1 %tobool78, label %if.end107, label %if.then79

if.then79:                                        ; preds = %if.then72
  %sh_prom = select i1 %.lnot, i64 3, i64 2
  %shr = lshr i64 %count.0, %sh_prom
  %and83 = shl i32 %38, 5
  %39 = and i32 %and83, 1073741824
  %40 = xor i32 %39, 1073741824
  %41 = add i32 %40, -1
  %conv86 = sext i32 %41 to i64
  %and87 = and i64 %conv86, %shr
  %call88 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and87) #5
  %call89 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %counter_mode.0, %struct.rtx_def* %call88) #5
  %42 = getelementptr inbounds %struct.rtx_def* %call89, i64 0, i32 0
  %bf.load.i526 = load i32* %42, align 8
  %bf.lshr.i527 = lshr i32 %bf.load.i526, 16
  %bf.clear.i528 = and i32 %bf.lshr.i527, 255
  %cmp.i529 = icmp eq i32 %bf.clear.i528, 0
  %43 = load i32* @target_flags, align 4, !tbaa !1
  %and.i530 = lshr i32 %43, 25
  %44 = and i32 %and.i530, 1
  %45 = or i32 %44, 4
  br i1 %cmp.i529, label %if.then.i532, label %if.end.i534

if.then.i532:                                     ; preds = %if.then79
  %call.i531 = tail call %struct.rtx_def* @force_reg(i32 %45, %struct.rtx_def* %call89) #5
  br label %ix86_zero_extend_to_Pmode.exit542

if.end.i534:                                      ; preds = %if.then79
  %cmp7.i533 = icmp eq i32 %bf.clear.i528, %45
  br i1 %cmp7.i533, label %if.then8.i536, label %if.end13.i540

if.then8.i536:                                    ; preds = %if.end.i534
  %call12.i535 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear.i528, %struct.rtx_def* %call89) #5
  br label %ix86_zero_extend_to_Pmode.exit542

if.end13.i540:                                    ; preds = %if.end.i534
  %call17.i537 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %45) #5
  %call18.i538 = tail call %struct.rtx_def* @gen_zero_extendsidi2(%struct.rtx_def* %call17.i537, %struct.rtx_def* %call89) #5
  %call19.i539 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18.i538) #5
  br label %ix86_zero_extend_to_Pmode.exit542

ix86_zero_extend_to_Pmode.exit542:                ; preds = %if.then.i532, %if.then8.i536, %if.end13.i540
  %retval.0.i541 = phi %struct.rtx_def* [ %call.i531, %if.then.i532 ], [ %call12.i535, %if.then8.i536 ], [ %call17.i537, %if.end13.i540 ]
  br i1 %.lnot, label %if.else103, label %if.then93

if.then93:                                        ; preds = %ix86_zero_extend_to_Pmode.exit542
  %46 = load i32* @target_flags, align 4, !tbaa !1
  %and94 = and i32 %46, 33554432
  %tobool95 = icmp eq i32 %and94, 0
  br i1 %tobool95, label %if.else99, label %if.end107.thread

if.end107.thread:                                 ; preds = %if.then93
  %call97 = tail call %struct.rtx_def* @gen_rep_movsi_rex64(%struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i541, %struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i541) #5
  %call98 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call97) #5
  br label %if.end116

if.else99:                                        ; preds = %if.then93
  %call100 = tail call %struct.rtx_def* @gen_rep_movsi(%struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i541, %struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i541) #5
  %call101 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call100) #5
  br label %if.end107

if.else103:                                       ; preds = %ix86_zero_extend_to_Pmode.exit542
  %call104 = tail call %struct.rtx_def* @gen_rep_movdi_rex64(%struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i541, %struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %retval.0.i541) #5
  %call105 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call104) #5
  br label %if.end107

if.end107:                                        ; preds = %if.then72, %if.else103, %if.else99
  %.not.demorgan = and i1 %lnot, %not.tobool74
  %.not = xor i1 %.not.demorgan, true
  %and111 = and i64 %count.0, 4
  %tobool112 = icmp eq i64 %and111, 0
  %or.cond507 = or i1 %tobool112, %.not
  br i1 %or.cond507, label %if.end116, label %if.then113

if.then113:                                       ; preds = %if.end107
  %call114 = tail call %struct.rtx_def* @gen_strmovsi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call115 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call114) #5
  br label %if.end116

if.end116:                                        ; preds = %if.end107.thread, %if.end107, %if.then113
  %and117 = and i64 %count.0, 2
  %tobool118 = icmp eq i64 %and117, 0
  br i1 %tobool118, label %if.end122, label %if.then119

if.then119:                                       ; preds = %if.end116
  %call120 = tail call %struct.rtx_def* @gen_strmovhi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call121 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call120) #5
  br label %if.end122

if.end122:                                        ; preds = %if.end116, %if.then119
  %and123 = and i64 %count.0, 1
  %tobool124 = icmp eq i64 %and123, 0
  br i1 %tobool124, label %if.end345, label %if.then125

if.then125:                                       ; preds = %if.end122
  %call126 = tail call %struct.rtx_def* @gen_strmovqi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call127 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call126) #5
  br label %if.end345

if.else129:                                       ; preds = %if.else57.if.else129_crit_edge, %lor.lhs.false68
  %47 = phi i32 [ %.pre599, %if.else57.if.else129_crit_edge ], [ 3, %lor.lhs.false68 ]
  %cmp130 = icmp eq i32 %47, 3
  %48 = add i64 %count.0, -1
  %49 = icmp ugt i64 %48, 258
  %or.cond510 = and i1 %cmp130, %49
  br i1 %or.cond510, label %if.else129.cond.end_crit_edge, label %cond.false

if.else129.cond.end_crit_edge:                    ; preds = %if.else129
  %.pre600 = load i32* @target_flags, align 4, !tbaa !1
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true63, %if.else129
  %50 = phi i32 [ %47, %if.else129 ], [ %36, %land.lhs.true63 ]
  %51 = load i32* @target_flags, align 4, !tbaa !1
  %and138 = lshr i32 %51, 23
  %52 = and i32 %and138, 4
  %53 = add i32 %52, 4
  br label %cond.end

cond.end:                                         ; preds = %if.else129.cond.end_crit_edge, %cond.false
  %54 = phi i32 [ %50, %cond.false ], [ %47, %if.else129.cond.end_crit_edge ]
  %55 = phi i32 [ %51, %cond.false ], [ %.pre600, %if.else129.cond.end_crit_edge ]
  %cond141 = phi i32 [ %53, %cond.false ], [ 8, %if.else129.cond.end_crit_edge ]
  %and142 = and i32 %55, 1024
  %tobool143 = icmp eq i32 %and142, 0
  br i1 %tobool143, label %land.lhs.true144, label %if.end152

land.lhs.true144:                                 ; preds = %cond.end
  %and145 = lshr i32 %55, 23
  %56 = and i32 %and145, 4
  %57 = add i32 %56, 4
  %conv148504 = zext i32 %57 to i64
  %cmp149 = icmp slt i64 %align.0., %conv148504
  br i1 %cmp149, label %if.then151, label %if.end152

if.then151:                                       ; preds = %land.lhs.true144
  tail call void @end_sequence() #5
  br label %return

if.end152:                                        ; preds = %cond.end, %land.lhs.true144
  %shl = shl i32 1, %54
  %and153 = and i32 %shl, 65
  %tobool154 = icmp eq i32 %and153, 0
  br i1 %tobool154, label %if.end158, label %if.then155

if.then155:                                       ; preds = %if.end152
  %call156 = tail call %struct.rtx_def* @gen_cld() #5
  %call157 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call156) #5
  %.pre601 = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end158

if.end158:                                        ; preds = %if.end152, %if.then155
  %58 = phi i32 [ %55, %if.end152 ], [ %.pre601, %if.then155 ]
  %and159 = lshr i32 %58, 25
  %59 = and i32 %and159, 1
  %60 = or i32 %59, 4
  %call162 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %60) #5
  %call163 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %counter_mode.0, %struct.rtx_def* %count_exp) #5
  %cmp164 = icmp eq i64 %count.0, 0
  %conv167 = sext i32 %cond141 to i64
  %cmp168 = icmp slt i64 %align.0., %conv167
  %or.cond512 = and i1 %cmp164, %cmp168
  br i1 %or.cond512, label %if.then170, label %if.end175

if.then170:                                       ; preds = %if.end158
  %call171 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %sub172 = add nsw i32 %cond141, -1
  %conv173 = sext i32 %sub172 to i64
  %call174 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv173) #5
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call163, %struct.rtx_def* %call174, i32 110, %struct.rtx_def* null, i32 %counter_mode.0, i32 1, %struct.rtx_def* %call171) #5
  br label %if.end175

if.end175:                                        ; preds = %if.then170, %if.end158
  %label.0 = phi %struct.rtx_def* [ %call171, %if.then170 ], [ null, %if.end158 ]
  %cmp176 = icmp slt i64 %align.0., 2
  br i1 %cmp176, label %if.then178, label %if.end186

if.then178:                                       ; preds = %if.end175
  %call180 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call28, i32 1)
  %call181 = tail call %struct.rtx_def* @gen_strmovqi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call182 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call181) #5
  %61 = getelementptr inbounds %struct.rtx_def* %call163, i64 0, i32 0
  %bf.load.i543 = load i32* %61, align 8
  %bf.clear.i544 = and i32 %bf.load.i543, 16711680
  %cmp.i545 = icmp eq i32 %bf.clear.i544, 327680
  %call.i546 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -1) #5
  br i1 %cmp.i545, label %if.then.i547, label %if.else.i

if.then.i547:                                     ; preds = %if.then178
  %call1.i = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %call163, %struct.rtx_def* %call163, %struct.rtx_def* %call.i546) #5
  %call2.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #5
  br label %ix86_adjust_counter.exit

if.else.i:                                        ; preds = %if.then178
  %call5.i = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %call163, %struct.rtx_def* %call163, %struct.rtx_def* %call.i546) #5
  %call6.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #5
  br label %ix86_adjust_counter.exit

ix86_adjust_counter.exit:                         ; preds = %if.then.i547, %if.else.i
  %call183 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call180) #5
  %arrayidx185 = getelementptr inbounds %struct.rtx_def* %call180, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx185 to i32*
  store i32 1, i32* %rtint, align 4, !tbaa !1
  br label %if.end186

if.end186:                                        ; preds = %ix86_adjust_counter.exit, %if.end175
  %cmp187 = icmp slt i64 %align.0., 3
  br i1 %cmp187, label %if.then189, label %if.end198

if.then189:                                       ; preds = %if.end186
  %call191 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call28, i32 2)
  %call192 = tail call %struct.rtx_def* @gen_strmovhi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call193 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call192) #5
  %62 = getelementptr inbounds %struct.rtx_def* %call163, i64 0, i32 0
  %bf.load.i549 = load i32* %62, align 8
  %bf.clear.i550 = and i32 %bf.load.i549, 16711680
  %cmp.i551 = icmp eq i32 %bf.clear.i550, 327680
  %call.i552 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -2) #5
  br i1 %cmp.i551, label %if.then.i555, label %if.else.i558

if.then.i555:                                     ; preds = %if.then189
  %call1.i553 = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %call163, %struct.rtx_def* %call163, %struct.rtx_def* %call.i552) #5
  %call2.i554 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i553) #5
  br label %ix86_adjust_counter.exit560

if.else.i558:                                     ; preds = %if.then189
  %call5.i556 = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %call163, %struct.rtx_def* %call163, %struct.rtx_def* %call.i552) #5
  %call6.i557 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i556) #5
  br label %ix86_adjust_counter.exit560

ix86_adjust_counter.exit560:                      ; preds = %if.then.i555, %if.else.i558
  %call194 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call191) #5
  %arrayidx196 = getelementptr inbounds %struct.rtx_def* %call191, i64 0, i32 1, i64 3
  %rtint197 = bitcast %union.rtunion_def* %arrayidx196 to i32*
  store i32 1, i32* %rtint197, align 4, !tbaa !1
  br label %if.end198

if.end198:                                        ; preds = %ix86_adjust_counter.exit560, %if.end186
  %cmp199 = icmp slt i64 %align.0., 5
  %cmp202 = icmp sgt i32 %cond141, 4
  %or.cond358 = and i1 %cmp199, %cmp202
  br i1 %or.cond358, label %if.then204, label %if.end213

if.then204:                                       ; preds = %if.end198
  %call206 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call28, i32 4)
  %call207 = tail call %struct.rtx_def* @gen_strmovsi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call208 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call207) #5
  %63 = getelementptr inbounds %struct.rtx_def* %call163, i64 0, i32 0
  %bf.load.i561 = load i32* %63, align 8
  %bf.clear.i562 = and i32 %bf.load.i561, 16711680
  %cmp.i563 = icmp eq i32 %bf.clear.i562, 327680
  %call.i564 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -4) #5
  br i1 %cmp.i563, label %if.then.i567, label %if.else.i570

if.then.i567:                                     ; preds = %if.then204
  %call1.i565 = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %call163, %struct.rtx_def* %call163, %struct.rtx_def* %call.i564) #5
  %call2.i566 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i565) #5
  br label %ix86_adjust_counter.exit572

if.else.i570:                                     ; preds = %if.then204
  %call5.i568 = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %call163, %struct.rtx_def* %call163, %struct.rtx_def* %call.i564) #5
  %call6.i569 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i568) #5
  br label %ix86_adjust_counter.exit572

ix86_adjust_counter.exit572:                      ; preds = %if.then.i567, %if.else.i570
  %call209 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call206) #5
  %arrayidx211 = getelementptr inbounds %struct.rtx_def* %call206, i64 0, i32 1, i64 3
  %rtint212 = bitcast %union.rtunion_def* %arrayidx211 to i32*
  store i32 1, i32* %rtint212, align 4, !tbaa !1
  br label %if.end213

if.end213:                                        ; preds = %ix86_adjust_counter.exit572, %if.end198
  %tobool214 = icmp ne %struct.rtx_def* %label.0, null
  %or.cond360 = and i1 %tobool214, %cmp202
  br i1 %or.cond360, label %land.lhs.true218, label %if.end226

land.lhs.true218:                                 ; preds = %if.end213
  %64 = load i32* @target_flags, align 4, !tbaa !1
  %and219 = and i32 %64, 33554432
  %tobool220 = icmp eq i32 %and219, 0
  br i1 %tobool220, label %if.then221, label %if.end226

if.then221:                                       ; preds = %land.lhs.true218
  %call222 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %label.0) #5
  %arrayidx224 = getelementptr inbounds %struct.rtx_def* %label.0, i64 0, i32 1, i64 3
  %rtint225 = bitcast %union.rtunion_def* %arrayidx224 to i32*
  store i32 1, i32* %rtint225, align 4, !tbaa !1
  br label %if.end226

if.end226:                                        ; preds = %land.lhs.true218, %if.then221, %if.end213
  %label.1 = phi %struct.rtx_def* [ %label.0, %land.lhs.true218 ], [ null, %if.then221 ], [ %label.0, %if.end213 ]
  %65 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl227 = shl i32 1, %65
  %and228 = and i32 %shl227, 65
  %tobool229 = icmp eq i32 %and228, 0
  br i1 %tobool229, label %if.then230, label %if.end233

if.then230:                                       ; preds = %if.end226
  %call231 = tail call %struct.rtx_def* @gen_cld() #5
  %call232 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call231) #5
  br label %if.end233

if.end233:                                        ; preds = %if.end226, %if.then230
  %66 = load i32* @target_flags, align 4, !tbaa !1
  %and234 = and i32 %66, 33554432
  %tobool235 = icmp eq i32 %and234, 0
  br i1 %tobool235, label %if.else243, label %if.then236

if.then236:                                       ; preds = %if.end233
  %67 = getelementptr inbounds %struct.rtx_def* %call163, i64 0, i32 0
  %bf.load.i573 = load i32* %67, align 8
  %bf.lshr.i574 = lshr i32 %bf.load.i573, 16
  %bf.clear.i575 = and i32 %bf.lshr.i574, 255
  %cmp.i576 = icmp eq i32 %bf.clear.i575, 0
  %and.i577 = lshr i32 %66, 25
  %68 = and i32 %and.i577, 1
  %69 = or i32 %68, 4
  br i1 %cmp.i576, label %if.then.i579, label %if.end.i581

if.then.i579:                                     ; preds = %if.then236
  %call.i578 = tail call %struct.rtx_def* @force_reg(i32 %69, %struct.rtx_def* %call163) #5
  br label %ix86_zero_extend_to_Pmode.exit589

if.end.i581:                                      ; preds = %if.then236
  %cmp7.i580 = icmp eq i32 %bf.clear.i575, %69
  br i1 %cmp7.i580, label %if.then8.i583, label %if.end13.i587

if.then8.i583:                                    ; preds = %if.end.i581
  %call12.i582 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear.i575, %struct.rtx_def* %call163) #5
  br label %ix86_zero_extend_to_Pmode.exit589

if.end13.i587:                                    ; preds = %if.end.i581
  %call17.i584 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %69) #5
  %call18.i585 = tail call %struct.rtx_def* @gen_zero_extendsidi2(%struct.rtx_def* %call17.i584, %struct.rtx_def* %call163) #5
  %call19.i586 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18.i585) #5
  br label %ix86_zero_extend_to_Pmode.exit589

ix86_zero_extend_to_Pmode.exit589:                ; preds = %if.then.i579, %if.then8.i583, %if.end13.i587
  %retval.0.i588 = phi %struct.rtx_def* [ %call.i578, %if.then.i579 ], [ %call12.i582, %if.then8.i583 ], [ %call17.i584, %if.end13.i587 ]
  %call238 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #5
  %call239 = tail call %struct.rtx_def* @gen_lshrdi3(%struct.rtx_def* %call162, %struct.rtx_def* %retval.0.i588, %struct.rtx_def* %call238) #5
  %call240 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call239) #5
  %call241 = tail call %struct.rtx_def* @gen_rep_movdi_rex64(%struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %call162, %struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %call162) #5
  %call242 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call241) #5
  br label %if.end249

if.else243:                                       ; preds = %if.end233
  %call244 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #5
  %call245 = tail call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %call162, %struct.rtx_def* %call163, %struct.rtx_def* %call244) #5
  %call246 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call245) #5
  %call247 = tail call %struct.rtx_def* @gen_rep_movsi(%struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %call162, %struct.rtx_def* %call28, %struct.rtx_def* %call35, %struct.rtx_def* %call162) #5
  %call248 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call247) #5
  br label %if.end249

if.end249:                                        ; preds = %if.else243, %ix86_zero_extend_to_Pmode.exit589
  %tobool250 = icmp eq %struct.rtx_def* %label.1, null
  br i1 %tobool250, label %if.end256, label %if.then251

if.then251:                                       ; preds = %if.end249
  %call252 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %label.1) #5
  %arrayidx254 = getelementptr inbounds %struct.rtx_def* %label.1, i64 0, i32 1, i64 3
  %rtint255 = bitcast %union.rtunion_def* %arrayidx254 to i32*
  store i32 1, i32* %rtint255, align 4, !tbaa !1
  br label %if.end256

if.end256:                                        ; preds = %if.end249, %if.then251
  %70 = load i32* @target_flags, align 4, !tbaa !1
  %and257 = and i32 %70, 33554432
  %tobool258 = icmp ne i32 %and257, 0
  %cmp260 = icmp sgt i64 %align.0., 4
  %or.cond362 = and i1 %tobool258, %cmp260
  %or.cond364 = and i1 %or.cond362, %cmp58
  %or.cond364.not = xor i1 %or.cond364, true
  %and266 = and i64 %count.0, 4
  %tobool267 = icmp eq i64 %and266, 0
  %or.cond514 = or i1 %tobool267, %or.cond364.not
  br i1 %or.cond514, label %if.end271, label %if.then268

if.then268:                                       ; preds = %if.end256
  %call269 = tail call %struct.rtx_def* @gen_strmovsi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call270 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call269) #5
  br label %if.end271

if.end271:                                        ; preds = %if.end256, %if.then268
  %or.cond366 = or i1 %cmp199, %cmp164
  br i1 %or.cond366, label %land.lhs.true277, label %if.end289

land.lhs.true277:                                 ; preds = %if.end271
  %71 = load i32* @target_flags, align 4, !tbaa !1
  %and278 = and i32 %71, 33554432
  %tobool279 = icmp eq i32 %and278, 0
  br i1 %tobool279, label %if.end289, label %if.then280

if.then280:                                       ; preds = %land.lhs.true277
  %call282 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call163, i32 4)
  %call283 = tail call %struct.rtx_def* @gen_strmovsi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call284 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call283) #5
  %call285 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call282) #5
  %arrayidx287 = getelementptr inbounds %struct.rtx_def* %call282, i64 0, i32 1, i64 3
  %rtint288 = bitcast %union.rtunion_def* %arrayidx287 to i32*
  store i32 1, i32* %rtint288, align 4, !tbaa !1
  br label %if.end289

if.end289:                                        ; preds = %land.lhs.true277, %if.end271, %if.then280
  %cmp290 = icmp sgt i64 %align.0., 2
  %or.cond368 = and i1 %cmp290, %cmp58
  %or.cond368.not = xor i1 %or.cond368, true
  %and296 = and i64 %count.0, 2
  %tobool297 = icmp eq i64 %and296, 0
  %or.cond516 = or i1 %tobool297, %or.cond368.not
  br i1 %or.cond516, label %if.end301, label %if.then298

if.then298:                                       ; preds = %if.end289
  %call299 = tail call %struct.rtx_def* @gen_strmovhi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call300 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call299) #5
  br label %if.end301

if.end301:                                        ; preds = %if.end289, %if.then298
  %or.cond370 = or i1 %cmp187, %cmp164
  br i1 %or.cond370, label %if.then307, label %if.end316

if.then307:                                       ; preds = %if.end301
  %call309 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call163, i32 2)
  %call310 = tail call %struct.rtx_def* @gen_strmovhi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call311 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call310) #5
  %call312 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call309) #5
  %arrayidx314 = getelementptr inbounds %struct.rtx_def* %call309, i64 0, i32 1, i64 3
  %rtint315 = bitcast %union.rtunion_def* %arrayidx314 to i32*
  store i32 1, i32* %rtint315, align 4, !tbaa !1
  br label %if.end316

if.end316:                                        ; preds = %if.end301, %if.then307
  %cmp317 = icmp sgt i64 %align.0., 1
  %or.cond372 = and i1 %cmp317, %cmp58
  %or.cond372.not = xor i1 %or.cond372, true
  %and323 = and i64 %count.0, 1
  %tobool324 = icmp eq i64 %and323, 0
  %or.cond518 = or i1 %tobool324, %or.cond372.not
  br i1 %or.cond518, label %if.end328, label %if.then325

if.then325:                                       ; preds = %if.end316
  %call326 = tail call %struct.rtx_def* @gen_strmovqi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call327 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call326) #5
  br label %if.end328

if.end328:                                        ; preds = %if.end316, %if.then325
  %or.cond374 = or i1 %cmp176, %cmp164
  br i1 %or.cond374, label %if.then334, label %if.end345

if.then334:                                       ; preds = %if.end328
  %call336 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call163, i32 1)
  %call337 = tail call %struct.rtx_def* @gen_strmovqi(%struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  %call338 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call337) #5
  %call339 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call336) #5
  %arrayidx341 = getelementptr inbounds %struct.rtx_def* %call336, i64 0, i32 1, i64 3
  %rtint342 = bitcast %union.rtunion_def* %arrayidx341 to i32*
  store i32 1, i32* %rtint342, align 4, !tbaa !1
  br label %if.end345

if.end345:                                        ; preds = %if.end122, %if.then125, %if.end328, %if.then334, %if.then50, %if.else53
  %call346 = tail call %struct.rtx_def* @get_insns() #5
  tail call void @end_sequence() #5
  %cmp11.i = icmp eq %struct.rtx_def* %call346, null
  br i1 %cmp11.i, label %ix86_set_move_mem_attrs.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end345, %for.inc.i
  %insn.012.i = phi %struct.rtx_def* [ %75, %for.inc.i ], [ %call346, %if.end345 ]
  %72 = getelementptr inbounds %struct.rtx_def* %insn.012.i, i64 0, i32 0
  %bf.load.i590 = load i32* %72, align 8
  %bf.clear.i591 = and i32 %bf.load.i590, 65535
  %idxprom10.i = zext i32 %bf.clear.i591 to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom10.i
  %73 = load i8* %arrayidx.i, align 1, !tbaa !5
  %cmp1.i = icmp eq i8 %73, 105
  br i1 %cmp1.i, label %if.then.i593, label %for.inc.i

if.then.i593:                                     ; preds = %for.body.i
  %arrayidx3.i = getelementptr inbounds %struct.rtx_def* %insn.012.i, i64 0, i32 1, i64 3
  %rtx.i592 = bitcast %union.rtunion_def* %arrayidx3.i to %struct.rtx_def**
  %74 = load %struct.rtx_def** %rtx.i592, align 8, !tbaa !6
  tail call fastcc void @ix86_set_move_mem_attrs_1(%struct.rtx_def* %74, %struct.rtx_def* %dst, %struct.rtx_def* %src, %struct.rtx_def* %call28, %struct.rtx_def* %call35) #5
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i593, %for.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %insn.012.i, i64 0, i32 1, i64 2
  %rtx6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtx_def**
  %75 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !6
  %cmp.i594 = icmp eq %struct.rtx_def* %75, null
  br i1 %cmp.i594, label %ix86_set_move_mem_attrs.exit, label %for.body.i

ix86_set_move_mem_attrs.exit:                     ; preds = %for.inc.i, %if.end345
  %call347 = tail call %struct.rtx_def* @emit_insns(%struct.rtx_def* %call346) #5
  br label %return

return:                                           ; preds = %ix86_set_move_mem_attrs.exit, %if.then151
  %retval.0 = phi i32 [ 1, %ix86_set_move_mem_attrs.exit ], [ 0, %if.then151 ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @gen_cld() #0

declare %struct.rtx_def* @gen_rep_movqi_rex64(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rep_movqi(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rep_movsi_rex64(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rep_movsi(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rep_movdi_rex64(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_strmovsi(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_strmovhi(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_strmovqi(%struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %variable, i32 %value) #1 {
entry:
  %call = tail call %struct.rtx_def* @gen_label_rtx() #5
  %0 = getelementptr inbounds %struct.rtx_def* %variable, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %call1 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear) #5
  %bf.load2 = load i32* %0, align 8
  %bf.clear4 = and i32 %bf.load2, 16711680
  %cmp = icmp eq i32 %bf.clear4, 327680
  %conv = sext i32 %value to i64
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call6 = tail call %struct.rtx_def* @gen_anddi3(%struct.rtx_def* %call1, %struct.rtx_def* %variable, %struct.rtx_def* %call5) #5
  %call7 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #5
  br label %if.end

if.else:                                          ; preds = %entry
  %call10 = tail call %struct.rtx_def* @gen_andsi3(%struct.rtx_def* %call1, %struct.rtx_def* %variable, %struct.rtx_def* %call5) #5
  %call11 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %bf.load12 = load i32* %0, align 8
  %bf.lshr13 = lshr i32 %bf.load12, 16
  %bf.clear14 = and i32 %bf.lshr13, 255
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call1, %struct.rtx_def* %1, i32 103, %struct.rtx_def* null, i32 %bf.clear14, i32 1, %struct.rtx_def* %call) #5
  ret %struct.rtx_def* %call
}

declare %struct.rtx_def* @gen_lshrdi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @get_insns() #0

; Function Attrs: nounwind uwtable
define void @ix86_set_move_mem_attrs(%struct.rtx_def* readonly %insns, %struct.rtx_def* readonly %dstref, %struct.rtx_def* readonly %srcref, %struct.rtx_def* readnone %dstreg, %struct.rtx_def* readnone %srcreg) #1 {
entry:
  %cmp11 = icmp eq %struct.rtx_def* %insns, null
  br i1 %cmp11, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %insn.012 = phi %struct.rtx_def* [ %3, %for.inc ], [ %insns, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.012, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom10 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom10
  %1 = load i8* %arrayidx, align 1, !tbaa !5
  %cmp1 = icmp eq i8 %1, 105
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %insn.012, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  tail call fastcc void @ix86_set_move_mem_attrs_1(%struct.rtx_def* %2, %struct.rtx_def* %dstref, %struct.rtx_def* %srcref, %struct.rtx_def* %dstreg, %struct.rtx_def* %srcreg)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %insn.012, i64 0, i32 1, i64 2
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx6, align 8, !tbaa !6
  %cmp = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

declare %struct.rtx_def* @emit_insns(%struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_expand_clrstr(%struct.rtx_def* nocapture readonly %src, %struct.rtx_def* %count_exp, %struct.rtx_def* nocapture readonly %align_exp) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %align_exp, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %align_exp, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !77
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %align.0 = phi i64 [ %1, %if.then ], [ 0, %entry ]
  %2 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %2, 512
  %tobool = icmp eq i32 %and, 0
  %align.0. = select i1 %tobool, i64 %align.0, i64 32
  %3 = getelementptr inbounds %struct.rtx_def* %count_exp, i64 0, i32 0
  %bf.load3 = load i32* %3, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 54
  br i1 %cmp5, label %if.then6, label %if.end10

if.then6:                                         ; preds = %if.end
  %rtwint9 = getelementptr inbounds %struct.rtx_def* %count_exp, i64 0, i32 1, i64 0, i32 0
  %4 = load i64* %rtwint9, align 8, !tbaa !77
  br label %if.end10

if.end10:                                         ; preds = %if.then6, %if.end
  %count.0 = phi i64 [ %4, %if.then6 ], [ 0, %if.end ]
  %and11 = and i32 %2, 33554432
  %tobool12 = icmp eq i32 %and11, 0
  %bf.clear14 = and i32 %bf.load3, 16711680
  %cmp15 = icmp eq i32 %bf.clear14, 262144
  %or.cond602 = or i1 %tobool12, %cmp15
  br i1 %or.cond602, label %if.end19, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %if.end10
  switch i32 %bf.clear4, label %x86_64_zero_extended_value.exit [
    i32 58, label %sw.bb8.i
    i32 54, label %sw.bb1.i
    i32 68, label %sw.bb2.i
    i32 67, label %sw.bb3.i
  ]

sw.bb1.i:                                         ; preds = %lor.lhs.false16
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %count_exp, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint.i, align 8, !tbaa !77
  %lnot.i = icmp ult i64 %5, 4294967296
  %lnot.ext.i = zext i1 %lnot.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb2.i:                                         ; preds = %lor.lhs.false16
  %6 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp.i = icmp eq i32 %6, 1
  %conv.i = zext i1 %cmp.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb3.i:                                         ; preds = %lor.lhs.false16
  %7 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %8 = and i32 %7, -3
  %9 = icmp eq i32 %8, 1
  %lor.ext.i = zext i1 %9 to i32
  br label %x86_64_zero_extended_value.exit

sw.bb8.i:                                         ; preds = %lor.lhs.false16
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %count_exp, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx10.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load11.i = load i32* %11, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  %cmp13.i = icmp eq i32 %bf.clear12.i, 75
  br i1 %cmp13.i, label %if.then.i, label %if.end60.i

if.then.i:                                        ; preds = %sw.bb8.i
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 1
  %rtx26.i = bitcast %union.rtunion_def* %arrayidx25.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx26.i, align 8, !tbaa !6
  %13 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp27.i = icmp eq i32 %13, 4
  br i1 %cmp27.i, label %x86_64_zero_extended_value.exit, label %if.end.i

if.end.i:                                         ; preds = %if.then.i
  %fld18.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1
  %rtx20.i = bitcast [1 x %union.rtunion_def]* %fld18.i to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx20.i, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load30.i = load i32* %15, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  %cond.i = icmp eq i32 %bf.clear31.i, 67
  br i1 %cond.i, label %sw.bb33.i, label %x86_64_zero_extended_value.exit

sw.bb33.i:                                        ; preds = %if.end.i
  %16 = and i32 %13, -3
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %land.lhs.true.i, label %if.end60.i

land.lhs.true.i:                                  ; preds = %sw.bb33.i
  %18 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load38.i = load i32* %18, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 65535
  %cmp40.i = icmp eq i32 %bf.clear39.i, 54
  br i1 %cmp40.i, label %land.lhs.true42.i, label %if.end60.i

land.lhs.true42.i:                                ; preds = %land.lhs.true.i
  %rtwint45.i = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, i32 0
  %19 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call.i = tail call i64 @trunc_int_for_mode(i64 %19, i32 5) #5
  %cmp46.i = icmp sgt i64 %call.i, -65536
  br i1 %cmp46.i, label %land.lhs.true48.i, label %if.end60.i

land.lhs.true48.i:                                ; preds = %land.lhs.true42.i
  %20 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call52.i = tail call i64 @trunc_int_for_mode(i64 %20, i32 4) #5
  %21 = load i64* %rtwint45.i, align 8, !tbaa !77
  %cmp56.i = icmp eq i64 %call52.i, %21
  br i1 %cmp56.i, label %x86_64_zero_extended_value.exit, label %if.end60.i

if.end60.i:                                       ; preds = %land.lhs.true48.i, %land.lhs.true42.i, %land.lhs.true.i, %sw.bb33.i, %sw.bb8.i
  br label %x86_64_zero_extended_value.exit

x86_64_zero_extended_value.exit:                  ; preds = %lor.lhs.false16, %sw.bb1.i, %sw.bb2.i, %sw.bb3.i, %if.then.i, %if.end.i, %land.lhs.true48.i, %if.end60.i
  %retval.0.i = phi i32 [ 0, %if.end60.i ], [ %lor.ext.i, %sw.bb3.i ], [ %conv.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb1.i ], [ 0, %if.then.i ], [ 1, %land.lhs.true48.i ], [ 0, %if.end.i ], [ 0, %lor.lhs.false16 ]
  %tobool17 = icmp eq i32 %retval.0.i, 0
  %. = select i1 %tobool17, i32 5, i32 4
  %.pre = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end19

if.end19:                                         ; preds = %x86_64_zero_extended_value.exit, %if.end10
  %22 = phi i32 [ %2, %if.end10 ], [ %.pre, %x86_64_zero_extended_value.exit ]
  %counter_mode.0 = phi i32 [ 4, %if.end10 ], [ %., %x86_64_zero_extended_value.exit ]
  %and20 = lshr i32 %22, 25
  %23 = and i32 %and20, 1
  %24 = or i32 %23, 4
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %src, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call24 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %24, %struct.rtx_def* %25) #5
  %call25 = tail call %struct.rtx_def* @gen_cld() #5
  %call26 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call25) #5
  %26 = load i32* @optimize, align 4, !tbaa !1
  %tobool27 = icmp eq i32 %26, 0
  %27 = load i32* @optimize_size, align 4
  %tobool29 = icmp ne i32 %27, 0
  %or.cond = or i1 %tobool27, %tobool29
  br i1 %or.cond, label %land.lhs.true, label %if.else46

land.lhs.true:                                    ; preds = %if.end19
  %cmp30 = icmp ne i64 %count.0, 0
  %and32 = and i64 %count.0, 3
  %tobool33 = icmp eq i64 %and32, 0
  %or.cond506 = and i1 %cmp30, %tobool33
  br i1 %or.cond506, label %if.else46, label %if.then34

if.then34:                                        ; preds = %land.lhs.true
  %bf.load.i521 = load i32* %3, align 8
  %bf.lshr.i = lshr i32 %bf.load.i521, 16
  %bf.clear.i522 = and i32 %bf.lshr.i, 255
  %cmp.i523 = icmp eq i32 %bf.clear.i522, 0
  %28 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %28, 25
  %29 = and i32 %and.i, 1
  %30 = or i32 %29, 4
  br i1 %cmp.i523, label %if.then.i525, label %if.end.i526

if.then.i525:                                     ; preds = %if.then34
  %call.i524 = tail call %struct.rtx_def* @force_reg(i32 %30, %struct.rtx_def* %count_exp) #5
  br label %ix86_zero_extend_to_Pmode.exit

if.end.i526:                                      ; preds = %if.then34
  %cmp7.i = icmp eq i32 %bf.clear.i522, %30
  br i1 %cmp7.i, label %if.then8.i, label %if.end13.i

if.then8.i:                                       ; preds = %if.end.i526
  %call12.i = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear.i522, %struct.rtx_def* %count_exp) #5
  br label %ix86_zero_extend_to_Pmode.exit

if.end13.i:                                       ; preds = %if.end.i526
  %call17.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %30) #5
  %call18.i = tail call %struct.rtx_def* @gen_zero_extendsidi2(%struct.rtx_def* %call17.i, %struct.rtx_def* %count_exp) #5
  %call19.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18.i) #5
  br label %ix86_zero_extend_to_Pmode.exit

ix86_zero_extend_to_Pmode.exit:                   ; preds = %if.then.i525, %if.then8.i, %if.end13.i
  %retval.0.i527 = phi %struct.rtx_def* [ %call.i524, %if.then.i525 ], [ %call12.i, %if.then8.i ], [ %call17.i, %if.end13.i ]
  %31 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call36 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 2, %struct.rtx_def* %31) #5
  %32 = load i32* @target_flags, align 4, !tbaa !1
  %and37 = and i32 %32, 33554432
  %tobool38 = icmp eq i32 %and37, 0
  br i1 %tobool38, label %if.else42, label %if.then39

if.then39:                                        ; preds = %ix86_zero_extend_to_Pmode.exit
  %call40 = tail call %struct.rtx_def* @gen_rep_stosqi_rex64(%struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i527, %struct.rtx_def* %call36, %struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i527) #5
  %call41 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call40) #5
  br label %return

if.else42:                                        ; preds = %ix86_zero_extend_to_Pmode.exit
  %call43 = tail call %struct.rtx_def* @gen_rep_stosqi(%struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i527, %struct.rtx_def* %call36, %struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i527) #5
  %call44 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call43) #5
  br label %return

if.else46:                                        ; preds = %land.lhs.true, %if.end19
  %cmp47 = icmp ne i64 %count.0, 0
  br i1 %cmp47, label %land.lhs.true48, label %if.else46.if.else124_crit_edge

if.else46.if.else124_crit_edge:                   ; preds = %if.else46
  %.pre596 = load i32* @ix86_cpu, align 4, !tbaa !5
  br label %if.else124

land.lhs.true48:                                  ; preds = %if.else46
  %cmp49 = icmp sgt i64 %align.0., 7
  br i1 %cmp49, label %if.then61, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %land.lhs.true48
  %33 = load i32* @ix86_cpu, align 4, !tbaa !5
  %cmp51 = icmp eq i32 %33, 3
  br i1 %cmp51, label %lor.lhs.false57, label %land.lhs.true52

land.lhs.true52:                                  ; preds = %lor.lhs.false50
  %34 = load i32* @target_flags, align 4, !tbaa !1
  %and53 = and i32 %34, 33554432
  %tobool54 = icmp eq i32 %and53, 0
  %cmp56 = icmp sgt i64 %align.0., 3
  %or.cond360 = and i1 %tobool54, %cmp56
  %or.cond361 = or i1 %or.cond360, %tobool29
  %cmp60 = icmp ult i64 %count.0, 64
  %or.cond363 = or i1 %or.cond361, %cmp60
  br i1 %or.cond363, label %if.then61, label %cond.false

lor.lhs.false57:                                  ; preds = %lor.lhs.false50
  %cmp60.old = icmp ult i64 %count.0, 64
  %or.cond365 = or i1 %tobool29, %cmp60.old
  br i1 %or.cond365, label %if.then61, label %if.else124

if.then61:                                        ; preds = %land.lhs.true52, %lor.lhs.false57, %land.lhs.true48
  %35 = load i32* @target_flags, align 4, !tbaa !1
  %and62 = and i32 %35, 33554432
  %lnot = icmp eq i32 %27, 0
  %not.tobool63 = icmp ne i32 %and62, 0
  %.lnot = and i1 %lnot, %not.tobool63
  %cond67 = select i1 %.lnot, i32 5, i32 4
  %36 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call68 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %cond67, %struct.rtx_def* %36) #5
  %conv = select i1 %.lnot, i64 -8, i64 -4
  %and69 = and i64 %conv, %count.0
  %tobool70 = icmp eq i64 %and69, 0
  br i1 %tobool70, label %if.end99, label %if.then71

if.then71:                                        ; preds = %if.then61
  %sh_prom = select i1 %.lnot, i64 3, i64 2
  %shr = lshr i64 %count.0, %sh_prom
  %37 = load i32* @target_flags, align 4, !tbaa !1
  %and75 = shl i32 %37, 5
  %38 = and i32 %and75, 1073741824
  %39 = xor i32 %38, 1073741824
  %40 = add i32 %39, -1
  %conv78 = sext i32 %40 to i64
  %and79 = and i64 %conv78, %shr
  %call80 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and79) #5
  %call81 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %counter_mode.0, %struct.rtx_def* %call80) #5
  %41 = getelementptr inbounds %struct.rtx_def* %call81, i64 0, i32 0
  %bf.load.i528 = load i32* %41, align 8
  %bf.lshr.i529 = lshr i32 %bf.load.i528, 16
  %bf.clear.i530 = and i32 %bf.lshr.i529, 255
  %cmp.i531 = icmp eq i32 %bf.clear.i530, 0
  %42 = load i32* @target_flags, align 4, !tbaa !1
  %and.i532 = lshr i32 %42, 25
  %43 = and i32 %and.i532, 1
  %44 = or i32 %43, 4
  br i1 %cmp.i531, label %if.then.i534, label %if.end.i536

if.then.i534:                                     ; preds = %if.then71
  %call.i533 = tail call %struct.rtx_def* @force_reg(i32 %44, %struct.rtx_def* %call81) #5
  br label %ix86_zero_extend_to_Pmode.exit544

if.end.i536:                                      ; preds = %if.then71
  %cmp7.i535 = icmp eq i32 %bf.clear.i530, %44
  br i1 %cmp7.i535, label %if.then8.i538, label %if.end13.i542

if.then8.i538:                                    ; preds = %if.end.i536
  %call12.i537 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear.i530, %struct.rtx_def* %call81) #5
  br label %ix86_zero_extend_to_Pmode.exit544

if.end13.i542:                                    ; preds = %if.end.i536
  %call17.i539 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %44) #5
  %call18.i540 = tail call %struct.rtx_def* @gen_zero_extendsidi2(%struct.rtx_def* %call17.i539, %struct.rtx_def* %call81) #5
  %call19.i541 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18.i540) #5
  br label %ix86_zero_extend_to_Pmode.exit544

ix86_zero_extend_to_Pmode.exit544:                ; preds = %if.then.i534, %if.then8.i538, %if.end13.i542
  %retval.0.i543 = phi %struct.rtx_def* [ %call.i533, %if.then.i534 ], [ %call12.i537, %if.then8.i538 ], [ %call17.i539, %if.end13.i542 ]
  br i1 %.lnot, label %if.else95, label %if.then85

if.then85:                                        ; preds = %ix86_zero_extend_to_Pmode.exit544
  %45 = load i32* @target_flags, align 4, !tbaa !1
  %and86 = and i32 %45, 33554432
  %tobool87 = icmp eq i32 %and86, 0
  br i1 %tobool87, label %if.else91, label %if.end99.thread

if.end99.thread:                                  ; preds = %if.then85
  %call89 = tail call %struct.rtx_def* @gen_rep_stossi_rex64(%struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i543, %struct.rtx_def* %call68, %struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i543) #5
  %call90 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call89) #5
  br label %if.end109

if.else91:                                        ; preds = %if.then85
  %call92 = tail call %struct.rtx_def* @gen_rep_stossi(%struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i543, %struct.rtx_def* %call68, %struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i543) #5
  %call93 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call92) #5
  br label %if.end99

if.else95:                                        ; preds = %ix86_zero_extend_to_Pmode.exit544
  %call96 = tail call %struct.rtx_def* @gen_rep_stosdi_rex64(%struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i543, %struct.rtx_def* %call68, %struct.rtx_def* %call24, %struct.rtx_def* %retval.0.i543) #5
  %call97 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call96) #5
  br label %if.end99

if.end99:                                         ; preds = %if.then61, %if.else95, %if.else91
  %.not.demorgan = and i1 %lnot, %not.tobool63
  %.not = xor i1 %.not.demorgan, true
  %and103 = and i64 %count.0, 4
  %tobool104 = icmp eq i64 %and103, 0
  %or.cond508 = or i1 %tobool104, %.not
  br i1 %or.cond508, label %if.end109, label %if.then105

if.then105:                                       ; preds = %if.end99
  %call106 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call68, i32 0) #5
  %call107 = tail call %struct.rtx_def* @gen_strsetsi(%struct.rtx_def* %call24, %struct.rtx_def* %call106) #5
  %call108 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call107) #5
  br label %if.end109

if.end109:                                        ; preds = %if.end99.thread, %if.end99, %if.then105
  %and110 = and i64 %count.0, 2
  %tobool111 = icmp eq i64 %and110, 0
  br i1 %tobool111, label %if.end116, label %if.then112

if.then112:                                       ; preds = %if.end109
  %call113 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 3, %struct.rtx_def* %call68, i32 0) #5
  %call114 = tail call %struct.rtx_def* @gen_strsethi(%struct.rtx_def* %call24, %struct.rtx_def* %call113) #5
  %call115 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call114) #5
  br label %if.end116

if.end116:                                        ; preds = %if.end109, %if.then112
  %and117 = and i64 %count.0, 1
  %tobool118 = icmp eq i64 %and117, 0
  br i1 %tobool118, label %return, label %if.then119

if.then119:                                       ; preds = %if.end116
  %call120 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 2, %struct.rtx_def* %call68, i32 0) #5
  %call121 = tail call %struct.rtx_def* @gen_strsetqi(%struct.rtx_def* %call24, %struct.rtx_def* %call120) #5
  %call122 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call121) #5
  br label %return

if.else124:                                       ; preds = %if.else46.if.else124_crit_edge, %lor.lhs.false57
  %46 = phi i32 [ %.pre596, %if.else46.if.else124_crit_edge ], [ 3, %lor.lhs.false57 ]
  %cmp125 = icmp eq i32 %46, 3
  %47 = add i64 %count.0, -1
  %48 = icmp ugt i64 %47, 258
  %or.cond511 = and i1 %cmp125, %48
  br i1 %or.cond511, label %if.else124.cond.end_crit_edge, label %cond.false

if.else124.cond.end_crit_edge:                    ; preds = %if.else124
  %.pre597 = load i32* @target_flags, align 4, !tbaa !1
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true52, %if.else124
  %49 = phi i32 [ %46, %if.else124 ], [ %33, %land.lhs.true52 ]
  %50 = load i32* @target_flags, align 4, !tbaa !1
  %and133 = lshr i32 %50, 23
  %51 = and i32 %and133, 4
  %52 = add i32 %51, 4
  br label %cond.end

cond.end:                                         ; preds = %if.else124.cond.end_crit_edge, %cond.false
  %53 = phi i32 [ %49, %cond.false ], [ %46, %if.else124.cond.end_crit_edge ]
  %54 = phi i32 [ %50, %cond.false ], [ %.pre597, %if.else124.cond.end_crit_edge ]
  %cond136 = phi i32 [ %52, %cond.false ], [ 8, %if.else124.cond.end_crit_edge ]
  %and137 = and i32 %54, 1024
  %tobool138 = icmp eq i32 %and137, 0
  br i1 %tobool138, label %land.lhs.true139, label %if.end147

land.lhs.true139:                                 ; preds = %cond.end
  %and140 = lshr i32 %54, 23
  %55 = and i32 %and140, 4
  %56 = add i32 %55, 4
  %conv143504 = zext i32 %56 to i64
  %cmp144 = icmp slt i64 %align.0., %conv143504
  br i1 %cmp144, label %return, label %if.end147

if.end147:                                        ; preds = %cond.end, %land.lhs.true139
  %shl = shl i32 1, %53
  %and148 = and i32 %shl, 65
  %tobool149 = icmp eq i32 %and148, 0
  br i1 %tobool149, label %if.end153, label %if.then150

if.then150:                                       ; preds = %if.end147
  %call151 = tail call %struct.rtx_def* @gen_cld() #5
  %call152 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call151) #5
  %.pre598 = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end153

if.end153:                                        ; preds = %if.end147, %if.then150
  %57 = phi i32 [ %54, %if.end147 ], [ %.pre598, %if.then150 ]
  %and154 = lshr i32 %57, 25
  %58 = and i32 %and154, 1
  %59 = or i32 %58, 4
  %call157 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %59) #5
  %call158 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %counter_mode.0, %struct.rtx_def* %count_exp) #5
  %60 = load i32* @target_flags, align 4, !tbaa !1
  %and159 = lshr i32 %60, 25
  %61 = and i32 %and159, 1
  %62 = or i32 %61, 4
  %63 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call162 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %62, %struct.rtx_def* %63) #5
  %cmp163 = icmp eq i64 %count.0, 0
  %conv166 = sext i32 %cond136 to i64
  %cmp167 = icmp slt i64 %align.0., %conv166
  %or.cond513 = and i1 %cmp163, %cmp167
  br i1 %or.cond513, label %if.then169, label %if.end174

if.then169:                                       ; preds = %if.end153
  %call170 = tail call %struct.rtx_def* @gen_label_rtx() #5
  %sub171 = add nsw i32 %cond136, -1
  %conv172 = sext i32 %sub171 to i64
  %call173 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv172) #5
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call158, %struct.rtx_def* %call173, i32 110, %struct.rtx_def* null, i32 %counter_mode.0, i32 1, %struct.rtx_def* %call170) #5
  br label %if.end174

if.end174:                                        ; preds = %if.then169, %if.end153
  %label.0 = phi %struct.rtx_def* [ %call170, %if.then169 ], [ null, %if.end153 ]
  %cmp175 = icmp slt i64 %align.0., 2
  br i1 %cmp175, label %if.then177, label %if.end186

if.then177:                                       ; preds = %if.end174
  %call179 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call24, i32 1)
  %call180 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 2, %struct.rtx_def* %call162, i32 0) #5
  %call181 = tail call %struct.rtx_def* @gen_strsetqi(%struct.rtx_def* %call24, %struct.rtx_def* %call180) #5
  %call182 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call181) #5
  %64 = getelementptr inbounds %struct.rtx_def* %call158, i64 0, i32 0
  %bf.load.i545 = load i32* %64, align 8
  %bf.clear.i546 = and i32 %bf.load.i545, 16711680
  %cmp.i547 = icmp eq i32 %bf.clear.i546, 327680
  %call.i548 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -1) #5
  br i1 %cmp.i547, label %if.then.i549, label %if.else.i

if.then.i549:                                     ; preds = %if.then177
  %call1.i = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %call158, %struct.rtx_def* %call158, %struct.rtx_def* %call.i548) #5
  %call2.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i) #5
  br label %ix86_adjust_counter.exit

if.else.i:                                        ; preds = %if.then177
  %call5.i = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %call158, %struct.rtx_def* %call158, %struct.rtx_def* %call.i548) #5
  %call6.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i) #5
  br label %ix86_adjust_counter.exit

ix86_adjust_counter.exit:                         ; preds = %if.then.i549, %if.else.i
  %call183 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call179) #5
  %arrayidx185 = getelementptr inbounds %struct.rtx_def* %call179, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx185 to i32*
  store i32 1, i32* %rtint, align 4, !tbaa !1
  br label %if.end186

if.end186:                                        ; preds = %ix86_adjust_counter.exit, %if.end174
  %cmp187 = icmp slt i64 %align.0., 3
  br i1 %cmp187, label %if.then189, label %if.end199

if.then189:                                       ; preds = %if.end186
  %call191 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call24, i32 2)
  %call192 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 3, %struct.rtx_def* %call162, i32 0) #5
  %call193 = tail call %struct.rtx_def* @gen_strsethi(%struct.rtx_def* %call24, %struct.rtx_def* %call192) #5
  %call194 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call193) #5
  %65 = getelementptr inbounds %struct.rtx_def* %call158, i64 0, i32 0
  %bf.load.i551 = load i32* %65, align 8
  %bf.clear.i552 = and i32 %bf.load.i551, 16711680
  %cmp.i553 = icmp eq i32 %bf.clear.i552, 327680
  %call.i554 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -2) #5
  br i1 %cmp.i553, label %if.then.i557, label %if.else.i560

if.then.i557:                                     ; preds = %if.then189
  %call1.i555 = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %call158, %struct.rtx_def* %call158, %struct.rtx_def* %call.i554) #5
  %call2.i556 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i555) #5
  br label %ix86_adjust_counter.exit562

if.else.i560:                                     ; preds = %if.then189
  %call5.i558 = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %call158, %struct.rtx_def* %call158, %struct.rtx_def* %call.i554) #5
  %call6.i559 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i558) #5
  br label %ix86_adjust_counter.exit562

ix86_adjust_counter.exit562:                      ; preds = %if.then.i557, %if.else.i560
  %call195 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call191) #5
  %arrayidx197 = getelementptr inbounds %struct.rtx_def* %call191, i64 0, i32 1, i64 3
  %rtint198 = bitcast %union.rtunion_def* %arrayidx197 to i32*
  store i32 1, i32* %rtint198, align 4, !tbaa !1
  br label %if.end199

if.end199:                                        ; preds = %ix86_adjust_counter.exit562, %if.end186
  %cmp200 = icmp slt i64 %align.0., 5
  %cmp203 = icmp sgt i32 %cond136, 4
  %or.cond369 = and i1 %cmp200, %cmp203
  br i1 %or.cond369, label %if.then205, label %if.end221

if.then205:                                       ; preds = %if.end199
  %call207 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call24, i32 4)
  %66 = load i32* @target_flags, align 4, !tbaa !1
  %and208 = and i32 %66, 33554432
  %tobool209 = icmp eq i32 %and208, 0
  br i1 %tobool209, label %cond.end213, label %cond.true210

cond.true210:                                     ; preds = %if.then205
  %call211 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call162, i32 0) #5
  br label %cond.end213

cond.end213:                                      ; preds = %if.then205, %cond.true210
  %cond214 = phi %struct.rtx_def* [ %call211, %cond.true210 ], [ %call162, %if.then205 ]
  %call215 = tail call %struct.rtx_def* @gen_strsetsi(%struct.rtx_def* %call24, %struct.rtx_def* %cond214) #5
  %call216 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call215) #5
  %67 = getelementptr inbounds %struct.rtx_def* %call158, i64 0, i32 0
  %bf.load.i563 = load i32* %67, align 8
  %bf.clear.i564 = and i32 %bf.load.i563, 16711680
  %cmp.i565 = icmp eq i32 %bf.clear.i564, 327680
  %call.i566 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -4) #5
  br i1 %cmp.i565, label %if.then.i569, label %if.else.i572

if.then.i569:                                     ; preds = %cond.end213
  %call1.i567 = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %call158, %struct.rtx_def* %call158, %struct.rtx_def* %call.i566) #5
  %call2.i568 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call1.i567) #5
  br label %ix86_adjust_counter.exit574

if.else.i572:                                     ; preds = %cond.end213
  %call5.i570 = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %call158, %struct.rtx_def* %call158, %struct.rtx_def* %call.i566) #5
  %call6.i571 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call5.i570) #5
  br label %ix86_adjust_counter.exit574

ix86_adjust_counter.exit574:                      ; preds = %if.then.i569, %if.else.i572
  %call217 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call207) #5
  %arrayidx219 = getelementptr inbounds %struct.rtx_def* %call207, i64 0, i32 1, i64 3
  %rtint220 = bitcast %union.rtunion_def* %arrayidx219 to i32*
  store i32 1, i32* %rtint220, align 4, !tbaa !1
  br label %if.end221

if.end221:                                        ; preds = %ix86_adjust_counter.exit574, %if.end199
  %tobool222 = icmp ne %struct.rtx_def* %label.0, null
  %or.cond371 = and i1 %tobool222, %cmp203
  br i1 %or.cond371, label %land.lhs.true226, label %if.end234

land.lhs.true226:                                 ; preds = %if.end221
  %68 = load i32* @target_flags, align 4, !tbaa !1
  %and227 = and i32 %68, 33554432
  %tobool228 = icmp eq i32 %and227, 0
  br i1 %tobool228, label %if.then229, label %if.end234

if.then229:                                       ; preds = %land.lhs.true226
  %call230 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %label.0) #5
  %arrayidx232 = getelementptr inbounds %struct.rtx_def* %label.0, i64 0, i32 1, i64 3
  %rtint233 = bitcast %union.rtunion_def* %arrayidx232 to i32*
  store i32 1, i32* %rtint233, align 4, !tbaa !1
  br label %if.end234

if.end234:                                        ; preds = %land.lhs.true226, %if.then229, %if.end221
  %label.1 = phi %struct.rtx_def* [ %label.0, %land.lhs.true226 ], [ null, %if.then229 ], [ %label.0, %if.end221 ]
  %69 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl235 = shl i32 1, %69
  %and236 = and i32 %shl235, 65
  %tobool237 = icmp eq i32 %and236, 0
  br i1 %tobool237, label %if.then238, label %if.end241

if.then238:                                       ; preds = %if.end234
  %call239 = tail call %struct.rtx_def* @gen_cld() #5
  %call240 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call239) #5
  br label %if.end241

if.end241:                                        ; preds = %if.end234, %if.then238
  %70 = load i32* @target_flags, align 4, !tbaa !1
  %and242 = and i32 %70, 33554432
  %tobool243 = icmp eq i32 %and242, 0
  br i1 %tobool243, label %if.else251, label %if.then244

if.then244:                                       ; preds = %if.end241
  %71 = getelementptr inbounds %struct.rtx_def* %call158, i64 0, i32 0
  %bf.load.i575 = load i32* %71, align 8
  %bf.lshr.i576 = lshr i32 %bf.load.i575, 16
  %bf.clear.i577 = and i32 %bf.lshr.i576, 255
  %cmp.i578 = icmp eq i32 %bf.clear.i577, 0
  %and.i579 = lshr i32 %70, 25
  %72 = and i32 %and.i579, 1
  %73 = or i32 %72, 4
  br i1 %cmp.i578, label %if.then.i581, label %if.end.i583

if.then.i581:                                     ; preds = %if.then244
  %call.i580 = tail call %struct.rtx_def* @force_reg(i32 %73, %struct.rtx_def* %call158) #5
  br label %ix86_zero_extend_to_Pmode.exit591

if.end.i583:                                      ; preds = %if.then244
  %cmp7.i582 = icmp eq i32 %bf.clear.i577, %73
  br i1 %cmp7.i582, label %if.then8.i585, label %if.end13.i589

if.then8.i585:                                    ; preds = %if.end.i583
  %call12.i584 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.clear.i577, %struct.rtx_def* %call158) #5
  br label %ix86_zero_extend_to_Pmode.exit591

if.end13.i589:                                    ; preds = %if.end.i583
  %call17.i586 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %73) #5
  %call18.i587 = tail call %struct.rtx_def* @gen_zero_extendsidi2(%struct.rtx_def* %call17.i586, %struct.rtx_def* %call158) #5
  %call19.i588 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call18.i587) #5
  br label %ix86_zero_extend_to_Pmode.exit591

ix86_zero_extend_to_Pmode.exit591:                ; preds = %if.then.i581, %if.then8.i585, %if.end13.i589
  %retval.0.i590 = phi %struct.rtx_def* [ %call.i580, %if.then.i581 ], [ %call12.i584, %if.then8.i585 ], [ %call17.i586, %if.end13.i589 ]
  %call246 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #5
  %call247 = tail call %struct.rtx_def* @gen_lshrdi3(%struct.rtx_def* %call157, %struct.rtx_def* %retval.0.i590, %struct.rtx_def* %call246) #5
  %call248 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call247) #5
  %call249 = tail call %struct.rtx_def* @gen_rep_stosdi_rex64(%struct.rtx_def* %call24, %struct.rtx_def* %call157, %struct.rtx_def* %call162, %struct.rtx_def* %call24, %struct.rtx_def* %call157) #5
  %call250 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call249) #5
  br label %if.end257

if.else251:                                       ; preds = %if.end241
  %call252 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #5
  %call253 = tail call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %call157, %struct.rtx_def* %call158, %struct.rtx_def* %call252) #5
  %call254 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call253) #5
  %call255 = tail call %struct.rtx_def* @gen_rep_stossi(%struct.rtx_def* %call24, %struct.rtx_def* %call157, %struct.rtx_def* %call162, %struct.rtx_def* %call24, %struct.rtx_def* %call157) #5
  %call256 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call255) #5
  br label %if.end257

if.end257:                                        ; preds = %if.else251, %ix86_zero_extend_to_Pmode.exit591
  %tobool258 = icmp eq %struct.rtx_def* %label.1, null
  br i1 %tobool258, label %if.end264, label %if.then259

if.then259:                                       ; preds = %if.end257
  %call260 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %label.1) #5
  %arrayidx262 = getelementptr inbounds %struct.rtx_def* %label.1, i64 0, i32 1, i64 3
  %rtint263 = bitcast %union.rtunion_def* %arrayidx262 to i32*
  store i32 1, i32* %rtint263, align 4, !tbaa !1
  br label %if.end264

if.end264:                                        ; preds = %if.end257, %if.then259
  %74 = load i32* @target_flags, align 4, !tbaa !1
  %and265 = and i32 %74, 33554432
  %tobool266 = icmp ne i32 %and265, 0
  %cmp268 = icmp sgt i64 %align.0., 4
  %or.cond373 = and i1 %tobool266, %cmp268
  %or.cond375 = and i1 %or.cond373, %cmp47
  %or.cond375.not = xor i1 %or.cond375, true
  %and274 = and i64 %count.0, 4
  %tobool275 = icmp eq i64 %and274, 0
  %or.cond515 = or i1 %tobool275, %or.cond375.not
  br i1 %or.cond515, label %if.end280, label %if.then276

if.then276:                                       ; preds = %if.end264
  %call277 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call162, i32 0) #5
  %call278 = tail call %struct.rtx_def* @gen_strsetsi(%struct.rtx_def* %call24, %struct.rtx_def* %call277) #5
  %call279 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call278) #5
  %.pre599 = load i32* @target_flags, align 4, !tbaa !1
  br label %if.end280

if.end280:                                        ; preds = %if.end264, %if.then276
  %75 = phi i32 [ %74, %if.end264 ], [ %.pre599, %if.then276 ]
  %and281 = and i32 %75, 33554432
  %tobool282 = icmp ne i32 %and281, 0
  %or.cond377 = or i1 %cmp200, %cmp163
  %or.cond516 = and i1 %tobool282, %or.cond377
  br i1 %or.cond516, label %if.then289, label %if.end299

if.then289:                                       ; preds = %if.end280
  %call291 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call158, i32 4)
  %call292 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 4, %struct.rtx_def* %call162, i32 0) #5
  %call293 = tail call %struct.rtx_def* @gen_strsetsi(%struct.rtx_def* %call24, %struct.rtx_def* %call292) #5
  %call294 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call293) #5
  %call295 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call291) #5
  %arrayidx297 = getelementptr inbounds %struct.rtx_def* %call291, i64 0, i32 1, i64 3
  %rtint298 = bitcast %union.rtunion_def* %arrayidx297 to i32*
  store i32 1, i32* %rtint298, align 4, !tbaa !1
  br label %if.end299

if.end299:                                        ; preds = %if.end280, %if.then289
  %cmp300 = icmp sgt i64 %align.0., 2
  %or.cond379 = and i1 %cmp300, %cmp47
  %or.cond379.not = xor i1 %or.cond379, true
  %and306 = and i64 %count.0, 2
  %tobool307 = icmp eq i64 %and306, 0
  %or.cond518 = or i1 %tobool307, %or.cond379.not
  br i1 %or.cond518, label %if.end312, label %if.then308

if.then308:                                       ; preds = %if.end299
  %call309 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 3, %struct.rtx_def* %call162, i32 0) #5
  %call310 = tail call %struct.rtx_def* @gen_strsethi(%struct.rtx_def* %call24, %struct.rtx_def* %call309) #5
  %call311 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call310) #5
  br label %if.end312

if.end312:                                        ; preds = %if.end299, %if.then308
  %or.cond381 = or i1 %cmp187, %cmp163
  br i1 %or.cond381, label %if.then318, label %if.end328

if.then318:                                       ; preds = %if.end312
  %call320 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call158, i32 2)
  %call321 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 3, %struct.rtx_def* %call162, i32 0) #5
  %call322 = tail call %struct.rtx_def* @gen_strsethi(%struct.rtx_def* %call24, %struct.rtx_def* %call321) #5
  %call323 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call322) #5
  %call324 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call320) #5
  %arrayidx326 = getelementptr inbounds %struct.rtx_def* %call320, i64 0, i32 1, i64 3
  %rtint327 = bitcast %union.rtunion_def* %arrayidx326 to i32*
  store i32 1, i32* %rtint327, align 4, !tbaa !1
  br label %if.end328

if.end328:                                        ; preds = %if.end312, %if.then318
  %cmp329 = icmp sgt i64 %align.0., 1
  %or.cond383 = and i1 %cmp329, %cmp47
  %or.cond383.not = xor i1 %or.cond383, true
  %and335 = and i64 %count.0, 1
  %tobool336 = icmp eq i64 %and335, 0
  %or.cond520 = or i1 %tobool336, %or.cond383.not
  br i1 %or.cond520, label %if.end341, label %if.then337

if.then337:                                       ; preds = %if.end328
  %call338 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 2, %struct.rtx_def* %call162, i32 0) #5
  %call339 = tail call %struct.rtx_def* @gen_strsetqi(%struct.rtx_def* %call24, %struct.rtx_def* %call338) #5
  %call340 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call339) #5
  br label %if.end341

if.end341:                                        ; preds = %if.end328, %if.then337
  %or.cond385 = or i1 %cmp175, %cmp163
  br i1 %or.cond385, label %if.then347, label %return

if.then347:                                       ; preds = %if.end341
  %call349 = tail call fastcc %struct.rtx_def* @ix86_expand_aligntest(%struct.rtx_def* %call158, i32 1)
  %call350 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 2, %struct.rtx_def* %call162, i32 0) #5
  %call351 = tail call %struct.rtx_def* @gen_strsetqi(%struct.rtx_def* %call24, %struct.rtx_def* %call350) #5
  %call352 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call351) #5
  %call353 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call349) #5
  %arrayidx355 = getelementptr inbounds %struct.rtx_def* %call349, i64 0, i32 1, i64 3
  %rtint356 = bitcast %union.rtunion_def* %arrayidx355 to i32*
  store i32 1, i32* %rtint356, align 4, !tbaa !1
  br label %return

return:                                           ; preds = %if.else42, %if.then39, %if.then347, %if.end341, %if.then119, %if.end116, %land.lhs.true139
  %retval.0 = phi i32 [ 0, %land.lhs.true139 ], [ 1, %if.end116 ], [ 1, %if.then119 ], [ 1, %if.end341 ], [ 1, %if.then347 ], [ 1, %if.then39 ], [ 1, %if.else42 ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @gen_rep_stosqi_rex64(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rep_stosqi(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rep_stossi_rex64(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rep_stossi(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rep_stosdi_rex64(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_strsetsi(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #0

declare %struct.rtx_def* @gen_strsethi(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_strsetqi(%struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_expand_strlen(%struct.rtx_def* %out, %struct.rtx_def* nocapture readonly %src, %struct.rtx_def* %eoschar, %struct.rtx_def* %align) #1 {
entry:
  %0 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl = shl i32 1, %0
  %and = and i32 %shl, 62
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp = icmp eq %struct.rtx_def* %1, %eoschar
  %2 = load i32* @optimize, align 4
  %cmp2 = icmp sgt i32 %2, 1
  %or.cond = and i1 %cmp, %cmp2
  br i1 %or.cond, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and4 = and i32 %3, 1024
  %4 = load i32* @optimize_size, align 4
  %5 = or i32 %and4, %4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %land.lhs.true3
  %7 = getelementptr inbounds %struct.rtx_def* %align, i64 0, i32 0
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp9 = icmp eq i32 %bf.clear, 54
  br i1 %cmp9, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %land.lhs.true8
  %rtwint = getelementptr inbounds %struct.rtx_def* %align, i64 0, i32 1, i64 0, i32 0
  %8 = load i64* %rtwint, align 8, !tbaa !77
  %cmp10 = icmp slt i64 %8, 4
  br i1 %cmp10, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true3, %entry, %lor.lhs.false, %land.lhs.true
  %9 = load i32* @target_flags, align 4, !tbaa !1
  %and11 = lshr i32 %9, 25
  %10 = and i32 %and11, 1
  %11 = or i32 %10, 4
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %src, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call = tail call %struct.rtx_def* @force_reg(i32 %11, %struct.rtx_def* %12) #5
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %and15 = lshr i32 %13, 25
  %14 = and i32 %and15, 1
  %15 = or i32 %14, 4
  %call18 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %15) #5
  %16 = load i32* @ix86_cpu, align 4, !tbaa !5
  %shl19 = shl i32 1, %16
  %and20 = and i32 %shl19, 62
  %tobool21 = icmp eq i32 %and20, 0
  br i1 %tobool21, label %if.else38, label %land.lhs.true22

land.lhs.true22:                                  ; preds = %if.end
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %18 = load i32* @optimize, align 4
  %notlhs = icmp ne %struct.rtx_def* %17, %eoschar
  %notrhs = icmp slt i32 %18, 2
  %or.cond74.not = or i1 %notrhs, %notlhs
  %19 = load i32* @optimize_size, align 4
  %tobool27 = icmp ne i32 %19, 0
  %or.cond75 = or i1 %or.cond74.not, %tobool27
  br i1 %or.cond75, label %if.else38, label %if.then28

if.then28:                                        ; preds = %land.lhs.true22
  %call29 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %out, %struct.rtx_def* %call) #5
  %call.i = tail call %struct.rtx_def* @gen_label_rtx() #5
  %call5.i = tail call %struct.rtx_def* @gen_label_rtx() #5
  %call8.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #5
  %call10.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #5
  %20 = getelementptr inbounds %struct.rtx_def* %align, i64 0, i32 0
  %bf.load.i = load i32* %20, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 54
  br i1 %cmp.i, label %if.end.i, label %if.then13.i

if.end.i:                                         ; preds = %if.then28
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %align, i64 0, i32 1, i64 0, i32 0
  %21 = load i64* %rtwint.i, align 8, !tbaa !77
  %conv.i = trunc i64 %21 to i32
  %cmp11.i = icmp slt i32 %conv.i, 4
  br i1 %cmp11.i, label %if.then13.i, label %if.end81.i

if.then13.i:                                      ; preds = %if.end.i, %if.then28
  %align.0263.i = phi i32 [ %conv.i, %if.end.i ], [ 0, %if.then28 ]
  %22 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %22, 25
  %23 = and i32 %and.i, 1
  %24 = or i32 %23, 4
  %call15.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %24) #5
  %call16.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call15.i, %struct.rtx_def* %out) #5
  %cmp17.i = icmp ne i32 %align.0263.i, 2
  br i1 %cmp17.i, label %if.then19.i, label %if.else.i

if.then19.i:                                      ; preds = %if.then13.i
  %call20.i = tail call %struct.rtx_def* @gen_label_rtx() #5
  %call21.i = tail call %struct.rtx_def* @gen_label_rtx() #5
  %25 = load i32* @target_flags, align 4, !tbaa !1
  %and22.i = lshr i32 %25, 25
  %26 = and i32 %and22.i, 1
  %27 = or i32 %26, 4
  %28 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !6
  %call25.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #5
  %call26.i = tail call %struct.rtx_def* @expand_binop(i32 %27, %struct.optab* %28, %struct.rtx_def* %call15.i, %struct.rtx_def* %call25.i, %struct.rtx_def* null, i32 0, i32 2) #5
  %29 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %30 = load i32* @target_flags, align 4, !tbaa !1
  %and27.i = lshr i32 %30, 25
  %31 = and i32 %and27.i, 1
  %32 = or i32 %31, 4
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call26.i, %struct.rtx_def* %29, i32 103, %struct.rtx_def* null, i32 %32, i32 1, %struct.rtx_def* %call.i) #5
  %call30.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #5
  %33 = load i32* @target_flags, align 4, !tbaa !1
  %and31.i = lshr i32 %33, 25
  %34 = and i32 %and31.i, 1
  %35 = or i32 %34, 4
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call26.i, %struct.rtx_def* %call30.i, i32 103, %struct.rtx_def* null, i32 %35, i32 1, %struct.rtx_def* %call21.i) #5
  %call34.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #5
  %36 = load i32* @target_flags, align 4, !tbaa !1
  %and35.i = lshr i32 %36, 25
  %37 = and i32 %and35.i, 1
  %38 = or i32 %37, 4
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call26.i, %struct.rtx_def* %call34.i, i32 109, %struct.rtx_def* null, i32 %38, i32 1, %struct.rtx_def* %call20.i) #5
  br label %if.end46.i

if.else.i:                                        ; preds = %if.then13.i
  %39 = load i32* @target_flags, align 4, !tbaa !1
  %and38.i = lshr i32 %39, 25
  %40 = and i32 %and38.i, 1
  %41 = or i32 %40, 4
  %42 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !6
  %call41.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #5
  %call42.i = tail call %struct.rtx_def* @expand_binop(i32 %41, %struct.optab* %42, %struct.rtx_def* %call15.i, %struct.rtx_def* %call41.i, %struct.rtx_def* null, i32 0, i32 2) #5
  %43 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %44 = load i32* @target_flags, align 4, !tbaa !1
  %and43.i = lshr i32 %44, 25
  %45 = and i32 %and43.i, 1
  %46 = or i32 %45, 4
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call42.i, %struct.rtx_def* %43, i32 103, %struct.rtx_def* null, i32 %46, i32 1, %struct.rtx_def* %call.i) #5
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.else.i, %if.then19.i
  %align_3_label.0.i = phi %struct.rtx_def* [ %call20.i, %if.then19.i ], [ null, %if.else.i ]
  %align_2_label.0.i = phi %struct.rtx_def* [ %call21.i, %if.then19.i ], [ null, %if.else.i ]
  %call47.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %out) #5
  %47 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call47.i, %struct.rtx_def* %47, i32 103, %struct.rtx_def* null, i32 2, i32 1, %struct.rtx_def* %call5.i) #5
  %48 = load i32* @target_flags, align 4, !tbaa !1
  %and48.i = and i32 %48, 33554432
  %tobool49.i = icmp eq i32 %and48.i, 0
  %49 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !6
  br i1 %tobool49.i, label %if.else53.i, label %if.then50.i

if.then50.i:                                      ; preds = %if.end46.i
  %call51.i = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %49) #5
  %call52.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call51.i) #5
  br label %if.end56.i

if.else53.i:                                      ; preds = %if.end46.i
  %call54.i = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %49) #5
  %call55.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call54.i) #5
  br label %if.end56.i

if.end56.i:                                       ; preds = %if.else53.i, %if.then50.i
  br i1 %cmp17.i, label %if.then59.i, label %if.end71.i

if.then59.i:                                      ; preds = %if.end56.i
  %call60.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %align_2_label.0.i) #5
  %50 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call47.i, %struct.rtx_def* %50, i32 103, %struct.rtx_def* null, i32 2, i32 1, %struct.rtx_def* %call5.i) #5
  %51 = load i32* @target_flags, align 4, !tbaa !1
  %and61.i = and i32 %51, 33554432
  %tobool62.i = icmp eq i32 %and61.i, 0
  %52 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !6
  br i1 %tobool62.i, label %if.else66.i, label %if.then63.i

if.then63.i:                                      ; preds = %if.then59.i
  %call64.i = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %52) #5
  %call65.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call64.i) #5
  br label %if.end69.i

if.else66.i:                                      ; preds = %if.then59.i
  %call67.i = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %52) #5
  %call68.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call67.i) #5
  br label %if.end69.i

if.end69.i:                                       ; preds = %if.else66.i, %if.then63.i
  %call70.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %align_3_label.0.i) #5
  br label %if.end71.i

if.end71.i:                                       ; preds = %if.end69.i, %if.end56.i
  %53 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call47.i, %struct.rtx_def* %53, i32 103, %struct.rtx_def* null, i32 2, i32 1, %struct.rtx_def* %call5.i) #5
  %54 = load i32* @target_flags, align 4, !tbaa !1
  %and72.i = and i32 %54, 33554432
  %tobool73.i = icmp eq i32 %and72.i, 0
  %55 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !6
  br i1 %tobool73.i, label %if.else77.i, label %if.then74.i

if.then74.i:                                      ; preds = %if.end71.i
  %call75.i = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %55) #5
  %call76.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call75.i) #5
  br label %if.end81.i

if.else77.i:                                      ; preds = %if.end71.i
  %call78.i = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %55) #5
  %call79.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call78.i) #5
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.else77.i, %if.then74.i, %if.end.i
  %call82.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call.i) #5
  %call83.i = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %out) #5
  %call84.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call10.i, %struct.rtx_def* %call83.i) #5
  %56 = load i32* @target_flags, align 4, !tbaa !1
  %and85.i = and i32 %56, 33554432
  %tobool86.i = icmp eq i32 %and85.i, 0
  %call88.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4) #5
  br i1 %tobool86.i, label %if.else91.i, label %if.then87.i

if.then87.i:                                      ; preds = %if.end81.i
  %call89.i = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %call88.i) #5
  %call90.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call89.i) #5
  br label %if.end95.i

if.else91.i:                                      ; preds = %if.end81.i
  %call93.i = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %call88.i) #5
  %call94.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call93.i) #5
  br label %if.end95.i

if.end95.i:                                       ; preds = %if.else91.i, %if.then87.i
  %call96.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -16843009) #5
  %call97.i = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %call8.i, %struct.rtx_def* %call10.i, %struct.rtx_def* %call96.i) #5
  %call98.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call97.i) #5
  %call99.i = tail call %struct.rtx_def* @gen_one_cmplsi2(%struct.rtx_def* %call10.i, %struct.rtx_def* %call10.i) #5
  %call100.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call99.i) #5
  %call101.i = tail call %struct.rtx_def* @gen_andsi3(%struct.rtx_def* %call8.i, %struct.rtx_def* %call8.i, %struct.rtx_def* %call10.i) #5
  %call102.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call101.i) #5
  %call103.i = tail call i64 @trunc_int_for_mode(i64 2155905152, i32 4) #5
  %call104.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call103.i) #5
  %call105.i = tail call %struct.rtx_def* @gen_andsi3(%struct.rtx_def* %call8.i, %struct.rtx_def* %call8.i, %struct.rtx_def* %call104.i) #5
  %call106.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call105.i) #5
  %57 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call8.i, %struct.rtx_def* %57, i32 103, %struct.rtx_def* null, i32 4, i32 1, %struct.rtx_def* %call.i) #5
  %58 = load i32* @ix86_arch, align 4, !tbaa !1
  %shl.i = shl i32 1, %58
  %and107.i = and i32 %shl.i, 104
  %tobool108.i = icmp eq i32 %and107.i, 0
  br i1 %tobool108.i, label %lor.lhs.false.i, label %if.then112.i

lor.lhs.false.i:                                  ; preds = %if.end95.i
  %59 = load i32* @target_flags, align 4, !tbaa !1
  %and109.i = and i32 %59, 327680
  %cmp110.i = icmp eq i32 %and109.i, 0
  br i1 %cmp110.i, label %if.else147.i, label %if.then112.i

if.then112.i:                                     ; preds = %lor.lhs.false.i, %if.end95.i
  %call114.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 4) #5
  %60 = load i32* @target_flags, align 4, !tbaa !1
  %and116.i = lshr i32 %60, 25
  %61 = and i32 %and116.i, 1
  %62 = or i32 %61, 4
  %call119.i = tail call %struct.rtx_def* @gen_reg_rtx(i32 %62) #5
  %call120.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call114.i, %struct.rtx_def* %call8.i) #5
  %call121.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 16) #5
  %call122.i = tail call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %call114.i, %struct.rtx_def* %call114.i, %struct.rtx_def* %call121.i) #5
  %call123.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call122.i) #5
  %call124.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32896) #5
  %call125.i = tail call %struct.rtx_def* @gen_testsi_ccno_1(%struct.rtx_def* %call8.i, %struct.rtx_def* %call124.i) #5
  %call126.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call125.i) #5
  %call127.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #5
  %63 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call128.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %call127.i, %struct.rtx_def* %63) #5
  %call129.i = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 4, %struct.rtx_def* %call128.i, %struct.rtx_def* %call114.i, %struct.rtx_def* %call8.i) #5
  %call130.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call8.i, %struct.rtx_def* %call129.i) #5
  %call131.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call130.i) #5
  %64 = load i32* @target_flags, align 4, !tbaa !1
  %and132.i = lshr i32 %64, 25
  %65 = and i32 %and132.i, 1
  %66 = or i32 %65, 4
  %call135.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #5
  %call136.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %66, %struct.rtx_def* %out, %struct.rtx_def* %call135.i) #5
  %call137.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 4, %struct.rtx_def* %call119.i, %struct.rtx_def* %call136.i) #5
  %call138.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call137.i) #5
  %call139.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #5
  %67 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call140.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 103, i32 0, %struct.rtx_def* %call139.i, %struct.rtx_def* %67) #5
  %68 = load i32* @target_flags, align 4, !tbaa !1
  %and141.i = lshr i32 %68, 25
  %69 = and i32 %and141.i, 1
  %70 = or i32 %69, 4
  %call144.i = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 %70, %struct.rtx_def* %call140.i, %struct.rtx_def* %call119.i, %struct.rtx_def* %out) #5
  %call145.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %out, %struct.rtx_def* %call144.i) #5
  %call146.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call145.i) #5
  br label %if.end176.i

if.else147.i:                                     ; preds = %lor.lhs.false.i
  %call149.i = tail call %struct.rtx_def* @gen_label_rtx() #5
  %call150.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32896) #5
  %call151.i = tail call %struct.rtx_def* @gen_testsi_ccno_1(%struct.rtx_def* %call8.i, %struct.rtx_def* %call150.i) #5
  %call152.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call151.i) #5
  %call153.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 55, i32 17) #5
  %71 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call154.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 102, i32 0, %struct.rtx_def* %call153.i, %struct.rtx_def* %71) #5
  %call155.i = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %call149.i) #5
  %72 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %call156.i = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 72, i32 0, %struct.rtx_def* %call154.i, %struct.rtx_def* %call155.i, %struct.rtx_def* %72) #5
  %73 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !6
  %call157.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %73, %struct.rtx_def* %call156.i) #5
  %call158.i = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call157.i) #5
  %74 = getelementptr inbounds %struct.rtx_def* %call158.i, i64 0, i32 1, i64 7, i32 0
  %call149.c.i = ptrtoint %struct.rtx_def* %call149.i to i64
  store i64 %call149.c.i, i64* %74, align 8, !tbaa !6
  %call161.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 16) #5
  %call162.i = tail call %struct.rtx_def* @gen_lshrsi3(%struct.rtx_def* %call8.i, %struct.rtx_def* %call8.i, %struct.rtx_def* %call161.i) #5
  %call163.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call162.i) #5
  %75 = load i32* @target_flags, align 4, !tbaa !1
  %and164.i = and i32 %75, 33554432
  %tobool165.i = icmp eq i32 %and164.i, 0
  %call167.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2) #5
  br i1 %tobool165.i, label %if.else170.i, label %if.then166.i

if.then166.i:                                     ; preds = %if.else147.i
  %call168.i = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %call167.i) #5
  %call169.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call168.i) #5
  br label %if.end174.i

if.else170.i:                                     ; preds = %if.else147.i
  %call172.i = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %call167.i) #5
  %call173.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call172.i) #5
  br label %if.end174.i

if.end174.i:                                      ; preds = %if.else170.i, %if.then166.i
  %call175.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call149.i) #5
  br label %if.end176.i

if.end176.i:                                      ; preds = %if.end174.i, %if.then112.i
  %call177.i = tail call %struct.rtx_def* @gen_lowpart(i32 2, %struct.rtx_def* %call8.i) #5
  %call178.i = tail call %struct.rtx_def* @gen_addqi3_cc(%struct.rtx_def* %call177.i, %struct.rtx_def* %call177.i, %struct.rtx_def* %call177.i) #5
  %call179.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call178.i) #5
  %76 = load i32* @target_flags, align 4, !tbaa !1
  %and180.i = and i32 %76, 33554432
  %tobool181.i = icmp eq i32 %and180.i, 0
  %call183.i = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 3) #5
  br i1 %tobool181.i, label %if.else186.i, label %if.then182.i

if.then182.i:                                     ; preds = %if.end176.i
  %call184.i = tail call %struct.rtx_def* @gen_subdi3_carry_rex64(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %call183.i) #5
  %call185.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call184.i) #5
  br label %ix86_expand_strlensi_unroll_1.exit

if.else186.i:                                     ; preds = %if.end176.i
  %call188.i = tail call %struct.rtx_def* @gen_subsi3_carry(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %call183.i) #5
  %call189.i = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call188.i) #5
  br label %ix86_expand_strlensi_unroll_1.exit

ix86_expand_strlensi_unroll_1.exit:               ; preds = %if.then182.i, %if.else186.i
  %call191.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call5.i) #5
  %77 = load i32* @target_flags, align 4, !tbaa !1
  %and30 = and i32 %77, 33554432
  %tobool31 = icmp eq i32 %and30, 0
  br i1 %tobool31, label %if.else, label %if.then32

if.then32:                                        ; preds = %ix86_expand_strlensi_unroll_1.exit
  %call33 = tail call %struct.rtx_def* @gen_subdi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %call) #5
  %call34 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call33) #5
  br label %return

if.else:                                          ; preds = %ix86_expand_strlensi_unroll_1.exit
  %call35 = tail call %struct.rtx_def* @gen_subsi3(%struct.rtx_def* %out, %struct.rtx_def* %out, %struct.rtx_def* %call) #5
  %call36 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call35) #5
  br label %return

if.else38:                                        ; preds = %if.end, %land.lhs.true22
  %78 = load i32* @target_flags, align 4, !tbaa !1
  %and39 = lshr i32 %78, 25
  %79 = and i32 %and39, 1
  %80 = or i32 %79, 4
  %call42 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %80) #5
  %81 = load i32* @target_flags, align 4, !tbaa !1
  %and43 = lshr i32 %81, 25
  %82 = and i32 %and43, 1
  %83 = or i32 %82, 4
  %call46 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %83) #5
  %84 = load i32* @target_flags, align 4, !tbaa !1
  %and47 = lshr i32 %84, 25
  %85 = and i32 %and47, 1
  %86 = or i32 %85, 4
  %87 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %call50 = tail call %struct.rtx_def* @force_reg(i32 %86, %struct.rtx_def* %87) #5
  %call51 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call46, %struct.rtx_def* %call) #5
  %call52 = tail call %struct.rtx_def* @force_reg(i32 2, %struct.rtx_def* %eoschar) #5
  %call53 = tail call %struct.rtx_def* @gen_cld() #5
  %call54 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call53) #5
  %88 = load i32* @target_flags, align 4, !tbaa !1
  %and55 = and i32 %88, 33554432
  %tobool56 = icmp eq i32 %and55, 0
  br i1 %tobool56, label %if.else64, label %if.then57

if.then57:                                        ; preds = %if.else38
  %call58 = tail call %struct.rtx_def* @gen_strlenqi_rex_1(%struct.rtx_def* %call18, %struct.rtx_def* %call46, %struct.rtx_def* %call52, %struct.rtx_def* %align, %struct.rtx_def* %call50, %struct.rtx_def* %call46) #5
  %call59 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call58) #5
  %call60 = tail call %struct.rtx_def* @gen_one_cmpldi2(%struct.rtx_def* %call42, %struct.rtx_def* %call18) #5
  %call61 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call60) #5
  %89 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %call62 = tail call %struct.rtx_def* @gen_adddi3(%struct.rtx_def* %out, %struct.rtx_def* %call42, %struct.rtx_def* %89) #5
  %call63 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call62) #5
  br label %return

if.else64:                                        ; preds = %if.else38
  %call65 = tail call %struct.rtx_def* @gen_strlenqi_1(%struct.rtx_def* %call18, %struct.rtx_def* %call46, %struct.rtx_def* %call52, %struct.rtx_def* %align, %struct.rtx_def* %call50, %struct.rtx_def* %call46) #5
  %call66 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call65) #5
  %call67 = tail call %struct.rtx_def* @gen_one_cmplsi2(%struct.rtx_def* %call42, %struct.rtx_def* %call18) #5
  %call68 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call67) #5
  %90 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %call69 = tail call %struct.rtx_def* @gen_addsi3(%struct.rtx_def* %out, %struct.rtx_def* %call42, %struct.rtx_def* %90) #5
  %call70 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call69) #5
  br label %return

return:                                           ; preds = %if.else, %if.then32, %if.else64, %if.then57, %lor.lhs.false, %land.lhs.true8
  %retval.0 = phi i32 [ 0, %land.lhs.true8 ], [ 0, %lor.lhs.false ], [ 1, %if.then57 ], [ 1, %if.else64 ], [ 1, %if.then32 ], [ 1, %if.else ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @gen_subsi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_strlenqi_rex_1(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_one_cmpldi2(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_adddi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_strlenqi_1(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_one_cmplsi2(%struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @assign_386_stack_local(i32 %mode, i32 %n) #1 {
entry:
  %0 = icmp ugt i32 %n, 2
  br i1 %0, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 9850, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.assign_386_stack_local, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %n to i64
  %idxprom2 = sext i32 %mode to i64
  %1 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine = getelementptr inbounds %struct.function* %1, i64 0, i32 51
  %2 = load %struct.machine_function** %machine, align 8, !tbaa !31
  %arrayidx3 = getelementptr inbounds %struct.machine_function* %2, i64 0, i32 0, i64 %idxprom2, i64 %idxprom
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !6
  %cmp4 = icmp eq %struct.rtx_def* %3, null
  br i1 %cmp4, label %if.then5, label %if.end14

if.then5:                                         ; preds = %if.end
  %arrayidx7 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom2
  %4 = load i8* %arrayidx7, align 1, !tbaa !5
  %conv = zext i8 %4 to i64
  %call = tail call %struct.rtx_def* @assign_stack_local(i32 %mode, i64 %conv, i32 0) #5
  %5 = load %struct.function** @cfun, align 8, !tbaa !6
  %machine10 = getelementptr inbounds %struct.function* %5, i64 0, i32 51
  %6 = load %struct.machine_function** %machine10, align 8, !tbaa !31
  %arrayidx13 = getelementptr inbounds %struct.machine_function* %6, i64 0, i32 0, i64 %idxprom2, i64 %idxprom
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx13, align 8, !tbaa !6
  %.pre = load %struct.function** @cfun, align 8, !tbaa !6
  %machine17.phi.trans.insert = getelementptr inbounds %struct.function* %.pre, i64 0, i32 51
  %.pre29 = load %struct.machine_function** %machine17.phi.trans.insert, align 8, !tbaa !31
  %arrayidx20.phi.trans.insert = getelementptr inbounds %struct.machine_function* %.pre29, i64 0, i32 0, i64 %idxprom2, i64 %idxprom
  %.pre30 = load %struct.rtx_def** %arrayidx20.phi.trans.insert, align 8, !tbaa !6
  br label %if.end14

if.end14:                                         ; preds = %if.then5, %if.end
  %7 = phi %struct.rtx_def* [ %.pre30, %if.then5 ], [ %3, %if.end ]
  ret %struct.rtx_def* %7
}

declare %struct.rtx_def* @assign_stack_local(i32, i64, i32) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_attr_length_immediate_default(%struct.rtx_def* %insn, i32 %shortform) #1 {
entry:
  tail call void @extract_insn_cached(%struct.rtx_def* %insn) #5
  %0 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !8
  %conv = sext i8 %0 to i64
  %tobool53 = icmp ne i32 %shortform, 0
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %cond.true91, %sw.bb160, %sw.bb162, %sw.bb164, %if.else, %entry
  %len.0.ph = phi i32 [ 0, %entry ], [ 4, %sw.bb164 ], [ 4, %sw.bb162 ], [ 2, %sw.bb160 ], [ 1, %cond.true91 ], [ 1, %if.else ]
  %i.0.in.ph = phi i64 [ %conv, %entry ], [ %indvars.iv.next, %if.else ], [ %indvars.iv.next, %sw.bb164 ], [ %indvars.iv.next, %sw.bb162 ], [ %indvars.iv.next, %sw.bb160 ], [ %indvars.iv.next, %cond.true91 ]
  %sext = shl i64 %i.0.in.ph, 32
  %1 = ashr exact i64 %sext, 32
  br label %for.cond

for.cond:                                         ; preds = %for.cond.outer, %for.body
  %indvars.iv = phi i64 [ %1, %for.cond.outer ], [ %indvars.iv.next, %for.body ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %2 = trunc i64 %indvars.iv to i32
  %cmp = icmp sgt i32 %2, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv.next
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %for.cond [
    i32 67, label %if.then
    i32 68, label %if.then
    i32 54, label %if.then
    i32 55, label %if.then
    i32 58, label %if.then
    i32 134, label %if.then
    i32 56, label %if.then
    i32 140, label %if.then
  ]

if.then:                                          ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %tobool = icmp eq i32 %len.0.ph, 0
  br i1 %tobool, label %if.end, label %if.then52

if.then52:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 9933, i8* getelementptr inbounds ([35 x i8]* @__FUNCTION__.ix86_attr_length_immediate_default, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %if.then
  %cmp58 = icmp eq i32 %bf.clear, 54
  %or.cond = and i1 %tobool53, %cmp58
  br i1 %or.cond, label %cond.true91, label %if.else

cond.true91:                                      ; preds = %if.end
  %rtwint96 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint96, align 8, !tbaa !77
  %.off = add i64 %5, 128
  %6 = icmp ult i64 %.off, 256
  br i1 %6, label %for.cond.outer, label %if.else

if.else:                                          ; preds = %if.end, %cond.true91
  %call = tail call i32 @get_attr_mode(%struct.rtx_def* %insn) #5
  switch i32 %call, label %sw.default [
    i32 2, label %for.cond.outer
    i32 3, label %sw.bb160
    i32 4, label %sw.bb162
    i32 5, label %sw.bb164
  ]

sw.bb160:                                         ; preds = %if.else
  br label %for.cond.outer

sw.bb162:                                         ; preds = %if.else
  br label %for.cond.outer

sw.bb164:                                         ; preds = %if.else
  br label %for.cond.outer

sw.default:                                       ; preds = %if.else
  tail call void @_fatal_insn(i8* getelementptr inbounds ([18 x i8]* @.str196, i64 0, i64 0), %struct.rtx_def* %insn, i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 9956, i8* getelementptr inbounds ([35 x i8]* @__FUNCTION__.ix86_attr_length_immediate_default, i64 0, i64 0)) #8
  unreachable

for.end:                                          ; preds = %for.cond
  ret i32 %len.0.ph
}

declare void @extract_insn_cached(%struct.rtx_def*) #0

declare i32 @get_attr_mode(%struct.rtx_def*) #0

; Function Attrs: noreturn
declare void @_fatal_insn(i8*, %struct.rtx_def*, i8*, i32, i8*) #6

; Function Attrs: nounwind uwtable
define i32 @ix86_attr_length_address_default(%struct.rtx_def* %insn) #1 {
entry:
  tail call void @extract_insn_cached(%struct.rtx_def* %insn) #5
  %0 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !8
  %1 = sext i8 %0 to i64
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %1, %entry ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %2 = trunc i64 %indvars.iv to i32
  %cmp = icmp sgt i32 %2, 0
  br i1 %cmp, label %for.body, label %return

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv.next
  %3 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp2 = icmp eq i32 %bf.clear, 66
  br i1 %cmp2, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call = tail call fastcc i32 @memory_address_length(%struct.rtx_def* %5)
  br label %return

return:                                           ; preds = %for.cond, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ix86_set_move_mem_attrs_1(%struct.rtx_def* nocapture %x, %struct.rtx_def* readonly %dstref, %struct.rtx_def* readonly %srcref, %struct.rtx_def* readnone %dstreg, %struct.rtx_def* readnone %srcreg) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom176 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom176
  %1 = load i8** %arrayidx, align 8, !tbaa !6
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %for.cond.preheader

land.lhs.true:                                    ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %cmp2 = icmp eq %struct.rtx_def* %2, %dstreg
  br i1 %cmp2, label %if.then, label %land.lhs.true44

if.then:                                          ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def* %dstref, i64 0, i32 0
  %bf.load3 = load i32* %3, align 8
  %bf.clear4 = and i32 %bf.load3, 134217728
  %bf.clear6 = and i32 %bf.load, -134217729
  %bf.set = or i32 %bf.clear4, %bf.clear6
  store i32 %bf.set, i32* %0, align 8
  %bf.load7 = load i32* %3, align 8
  %bf.clear9 = and i32 %bf.load7, 268435456
  %bf.clear13 = and i32 %bf.set, -268435457
  %bf.set14 = or i32 %bf.clear13, %bf.clear9
  store i32 %bf.set14, i32* %0, align 8
  %bf.load15 = load i32* %3, align 8
  %bf.lshr16 = and i32 %bf.load15, -2147483648
  %bf.clear20 = and i32 %bf.set14, 2147483647
  %bf.set21 = or i32 %bf.clear20, %bf.lshr16
  store i32 %bf.set21, i32* %0, align 8
  %bf.load22 = load i32* %3, align 8
  %bf.clear24 = and i32 %bf.load22, 67108864
  %bf.clear28 = and i32 %bf.set21, -67108865
  %bf.set29 = or i32 %bf.clear28, %bf.clear24
  store i32 %bf.set29, i32* %0, align 8
  %bf.load30 = load i32* %3, align 8
  %bf.clear32 = and i32 %bf.load30, 16777216
  %bf.clear36 = and i32 %bf.set29, -16777217
  %bf.set37 = or i32 %bf.clear36, %bf.clear32
  store i32 %bf.set37, i32* %0, align 8
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %dstref, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx39 to %struct.mem_attrs**
  %4 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, i32 0
  %.c177 = ptrtoint %struct.mem_attrs* %4 to i64
  store i64 %.c177, i64* %5, align 8, !tbaa !6
  br label %for.cond.preheader

land.lhs.true44:                                  ; preds = %land.lhs.true
  %cmp48 = icmp eq %struct.rtx_def* %2, %srcreg
  br i1 %cmp48, label %if.then49, label %for.cond.preheader

if.then49:                                        ; preds = %land.lhs.true44
  %6 = getelementptr inbounds %struct.rtx_def* %srcref, i64 0, i32 0
  %bf.load50 = load i32* %6, align 8
  %bf.clear52 = and i32 %bf.load50, 134217728
  %bf.clear56 = and i32 %bf.load, -134217729
  %bf.set57 = or i32 %bf.clear52, %bf.clear56
  store i32 %bf.set57, i32* %0, align 8
  %bf.load58 = load i32* %6, align 8
  %bf.clear60 = and i32 %bf.load58, 268435456
  %bf.clear64 = and i32 %bf.set57, -268435457
  %bf.set65 = or i32 %bf.clear64, %bf.clear60
  store i32 %bf.set65, i32* %0, align 8
  %bf.load66 = load i32* %6, align 8
  %bf.lshr67 = and i32 %bf.load66, -2147483648
  %bf.clear71 = and i32 %bf.set65, 2147483647
  %bf.set72 = or i32 %bf.clear71, %bf.lshr67
  store i32 %bf.set72, i32* %0, align 8
  %bf.load73 = load i32* %6, align 8
  %bf.clear75 = and i32 %bf.load73, 67108864
  %bf.clear79 = and i32 %bf.set72, -67108865
  %bf.set80 = or i32 %bf.clear79, %bf.clear75
  store i32 %bf.set80, i32* %0, align 8
  %bf.load81 = load i32* %6, align 8
  %bf.clear83 = and i32 %bf.load81, 16777216
  %bf.clear87 = and i32 %bf.set80, -16777217
  %bf.set88 = or i32 %bf.clear87, %bf.clear83
  store i32 %bf.set88, i32* %0, align 8
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %srcref, i64 0, i32 1, i64 1
  %rtmem91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.mem_attrs**
  %7 = load %struct.mem_attrs** %rtmem91, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.mem_attrs* %7 to i64
  store i64 %.c, i64* %8, align 8, !tbaa !6
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry, %land.lhs.true44, %if.then49, %if.then
  %arrayidx97 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom176
  %9 = load i8* %arrayidx97, align 1, !tbaa !5
  %cmp98182 = icmp eq i8 %9, 0
  br i1 %cmp98182, label %for.end129, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %conv = zext i8 %9 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc128
  %indvars.iv185 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next186, %for.inc128 ]
  %format_ptr.0183 = phi i8* [ %1, %for.body.lr.ph ], [ %incdec.ptr, %for.inc128 ]
  %10 = load i8* %format_ptr.0183, align 1, !tbaa !5
  switch i8 %10, label %for.inc128 [
    i8 101, label %if.then103
    i8 69, label %if.then112
  ]

if.then103:                                       ; preds = %for.body
  %arrayidx106 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv185
  %rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx107, align 8, !tbaa !6
  tail call fastcc void @ix86_set_move_mem_attrs_1(%struct.rtx_def* %11, %struct.rtx_def* %dstref, %struct.rtx_def* %srcref, %struct.rtx_def* %dstreg, %struct.rtx_def* %srcreg)
  br label %for.inc128

if.then112:                                       ; preds = %for.body
  %arrayidx115 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv185
  %rtvec = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtvec_def**
  %12 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %num_elem = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  %13 = load i32* %num_elem, align 4, !tbaa !10
  %cmp117179 = icmp sgt i32 %13, 0
  br i1 %cmp117179, label %for.body119.lr.ph, label %for.inc128

for.body119.lr.ph:                                ; preds = %if.then112
  %14 = sext i32 %13 to i64
  br label %for.body119

for.body119:                                      ; preds = %for.body119.for.body119_crit_edge, %for.body119.lr.ph
  %15 = phi %struct.rtvec_def* [ %12, %for.body119.lr.ph ], [ %.pre, %for.body119.for.body119_crit_edge ]
  %indvars.iv = phi i64 [ %14, %for.body119.lr.ph ], [ %indvars.iv.next, %for.body119.for.body119_crit_edge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx125 = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 1, i64 %indvars.iv.next
  %16 = load %struct.rtx_def** %arrayidx125, align 8, !tbaa !6
  tail call fastcc void @ix86_set_move_mem_attrs_1(%struct.rtx_def* %16, %struct.rtx_def* %dstref, %struct.rtx_def* %srcref, %struct.rtx_def* %dstreg, %struct.rtx_def* %srcreg)
  %17 = trunc i64 %indvars.iv.next to i32
  %cmp117 = icmp sgt i32 %17, 0
  br i1 %cmp117, label %for.body119.for.body119_crit_edge, label %for.inc128

for.body119.for.body119_crit_edge:                ; preds = %for.body119
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  br label %for.body119

for.inc128:                                       ; preds = %for.body119, %if.then112, %for.body, %if.then103
  %indvars.iv.next186 = add nuw nsw i64 %indvars.iv185, 1
  %incdec.ptr = getelementptr inbounds i8* %format_ptr.0183, i64 1
  %18 = trunc i64 %indvars.iv.next186 to i32
  %cmp98 = icmp slt i32 %18, %conv
  br i1 %cmp98, label %for.body, label %for.end129

for.end129:                                       ; preds = %for.inc128, %for.cond.preheader
  ret void
}

; Function Attrs: nounwind readonly uwtable
define i32 @ix86_constant_alignment(%union.tree_node* nocapture readonly %exp, i32 %align) #2 {
entry:
  %code = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.end67 [
    i32 26, label %if.then
    i32 29, label %land.lhs.true61
  ]

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !54
  %type2 = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type2, i64 0, i32 6
  %bf.load3 = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load3, 9
  %bf.clear4 = and i32 %bf.lshr, 127
  %cmp5 = icmp eq i32 %bf.clear4, 16
  %cmp6 = icmp slt i32 %align, 64
  %or.cond = and i1 %cmp5, %cmp6
  br i1 %or.cond, label %return, label %if.else

if.else:                                          ; preds = %if.then
  switch i32 %bf.clear4, label %lor.lhs.false42 [
    i32 17, label %land.lhs.true51
    i32 18, label %land.lhs.true51
    i32 6, label %land.lhs.true51
    i32 46, label %land.lhs.true51
  ]

lor.lhs.false42:                                  ; preds = %if.else
  %cmp50 = icmp eq i32 %bf.clear4, 37
  %cmp52 = icmp slt i32 %align, 128
  %or.cond68 = and i1 %cmp50, %cmp52
  br i1 %or.cond68, label %return, label %if.end67

land.lhs.true51:                                  ; preds = %if.else, %if.else, %if.else, %if.else
  %cmp52.old = icmp slt i32 %align, 128
  br i1 %cmp52.old, label %return, label %if.end67

land.lhs.true61:                                  ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node* %exp, i64 0, i32 0, i32 2
  %2 = load i32* %1, align 4, !tbaa !106
  %cmp62 = icmp sgt i32 %2, 30
  %cmp64 = icmp slt i32 %align, 256
  %or.cond70 = and i1 %cmp62, %cmp64
  br i1 %or.cond70, label %return, label %if.end67

if.end67:                                         ; preds = %entry, %land.lhs.true61, %land.lhs.true51, %lor.lhs.false42
  br label %return

return:                                           ; preds = %land.lhs.true61, %land.lhs.true51, %lor.lhs.false42, %if.then, %if.end67
  %retval.0 = phi i32 [ %align, %if.end67 ], [ 64, %if.then ], [ 128, %lor.lhs.false42 ], [ 128, %land.lhs.true51 ], [ 256, %land.lhs.true61 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @ix86_data_alignment(%union.tree_node* nocapture readonly %type, i32 %align) #2 {
entry:
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -18
  %switch = icmp ult i32 %bf.clear.off, 5
  br i1 %switch, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %size = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 2
  %0 = bitcast i32* %size to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !108
  %tobool = icmp eq %union.tree_node* %1, null
  br i1 %tobool, label %if.end, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %land.lhs.true
  %code29 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load30 = load i32* %code29, align 8
  %bf.clear31 = and i32 %bf.load30, 255
  %cmp32 = icmp eq i32 %bf.clear31, 25
  br i1 %cmp32, label %land.lhs.true33, label %if.end

land.lhs.true33:                                  ; preds = %land.lhs.true25
  %int_cst36 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst36 to i64*
  %2 = load i64* %low, align 8, !tbaa !55
  %cmp37 = icmp ugt i64 %2, 255
  br i1 %cmp37, label %land.lhs.true44, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %land.lhs.true33
  %high = getelementptr inbounds i32* %int_cst36, i64 2
  %3 = bitcast i32* %high to i64*
  %4 = load i64* %3, align 8, !tbaa !109
  %tobool43 = icmp ne i64 %4, 0
  %cmp45 = icmp slt i32 %align, 256
  %or.cond = and i1 %tobool43, %cmp45
  br i1 %or.cond, label %return, label %if.end

land.lhs.true44:                                  ; preds = %land.lhs.true33
  %cmp45.old = icmp slt i32 %align, 256
  br i1 %cmp45.old, label %return, label %if.end

if.end:                                           ; preds = %entry, %land.lhs.true, %land.lhs.true44, %lor.lhs.false38, %land.lhs.true25
  %5 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %5, 33554432
  %tobool46 = icmp eq i32 %and, 0
  %switch.not = xor i1 %switch, true
  %brmerge = or i1 %tobool46, %switch.not
  br i1 %brmerge, label %if.end107, label %land.lhs.true77

land.lhs.true77:                                  ; preds = %if.end
  %size79 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 2
  %6 = bitcast i32* %size79 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !108
  %tobool80 = icmp eq %union.tree_node* %7, null
  br i1 %tobool80, label %if.end107, label %land.lhs.true81

land.lhs.true81:                                  ; preds = %land.lhs.true77
  %code85 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 0, i32 2
  %bf.load86 = load i32* %code85, align 8
  %bf.clear87 = and i32 %bf.load86, 255
  %cmp88 = icmp eq i32 %bf.clear87, 25
  br i1 %cmp88, label %land.lhs.true89, label %if.end107

land.lhs.true89:                                  ; preds = %land.lhs.true81
  %int_cst93 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 2
  %low94 = bitcast i32* %int_cst93 to i64*
  %8 = load i64* %low94, align 8, !tbaa !55
  %cmp95 = icmp ugt i64 %8, 127
  br i1 %cmp95, label %land.lhs.true103, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %land.lhs.true89
  %high101 = getelementptr inbounds i32* %int_cst93, i64 2
  %9 = bitcast i32* %high101 to i64*
  %10 = load i64* %9, align 8, !tbaa !109
  %tobool102 = icmp ne i64 %10, 0
  %cmp104 = icmp slt i32 %align, 128
  %or.cond350 = and i1 %tobool102, %cmp104
  br i1 %or.cond350, label %return, label %if.end107

land.lhs.true103:                                 ; preds = %land.lhs.true89
  %cmp104.old = icmp slt i32 %align, 128
  br i1 %cmp104.old, label %return, label %if.end107

if.end107:                                        ; preds = %if.end, %land.lhs.true77, %land.lhs.true81, %lor.lhs.false96, %land.lhs.true103
  switch i32 %bf.clear, label %if.end348 [
    i32 18, label %if.then113
    i32 8, label %if.then177
    i32 20, label %land.lhs.true216
    i32 21, label %land.lhs.true216
    i32 22, label %land.lhs.true216
    i32 7, label %if.then296
    i32 9, label %if.then296
    i32 6, label %if.then296
  ]

if.then113:                                       ; preds = %if.end107
  %type115 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type115, align 8, !tbaa !54
  %type116 = bitcast %union.tree_node* %11 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type116, i64 0, i32 6
  %bf.load117 = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load117, 9
  %bf.clear118 = and i32 %bf.lshr, 127
  %cmp119 = icmp eq i32 %bf.clear118, 16
  %cmp121 = icmp slt i32 %align, 64
  %or.cond352 = and i1 %cmp119, %cmp121
  br i1 %or.cond352, label %return, label %if.end123

if.end123:                                        ; preds = %if.then113
  switch i32 %bf.clear118, label %lor.lhs.false159 [
    i32 17, label %land.lhs.true168
    i32 18, label %land.lhs.true168
    i32 6, label %land.lhs.true168
    i32 46, label %land.lhs.true168
  ]

lor.lhs.false159:                                 ; preds = %if.end123
  %cmp167 = icmp eq i32 %bf.clear118, 37
  %cmp169 = icmp slt i32 %align, 128
  %or.cond354 = and i1 %cmp167, %cmp169
  br i1 %or.cond354, label %return, label %if.end348

land.lhs.true168:                                 ; preds = %if.end123, %if.end123, %if.end123, %if.end123
  %cmp169.old = icmp slt i32 %align, 128
  br i1 %cmp169.old, label %return, label %if.end348

if.then177:                                       ; preds = %if.end107
  %type178 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode179 = getelementptr inbounds %struct.tree_type* %type178, i64 0, i32 6
  %bf.load180 = load i32* %mode179, align 4
  %bf.lshr181 = lshr i32 %bf.load180, 9
  %bf.clear182 = and i32 %bf.lshr181, 127
  %cmp183 = icmp eq i32 %bf.clear182, 22
  %cmp185 = icmp slt i32 %align, 64
  %or.cond356 = and i1 %cmp183, %cmp185
  br i1 %or.cond356, label %return, label %if.end187

if.end187:                                        ; preds = %if.then177
  %cmp193 = icmp eq i32 %bf.clear182, 23
  %cmp195 = icmp slt i32 %align, 128
  %or.cond358 = and i1 %cmp193, %cmp195
  br i1 %or.cond358, label %return, label %if.end348

land.lhs.true216:                                 ; preds = %if.end107, %if.end107, %if.end107
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %12 = load i8** %values, align 8
  %tobool218 = icmp eq i8* %12, null
  br i1 %tobool218, label %if.else278, label %if.then219

if.then219:                                       ; preds = %land.lhs.true216
  %mode222 = getelementptr inbounds i8* %12, i64 48
  %13 = bitcast i8* %mode222 to i64*
  %bf.load223 = load i64* %13, align 8
  %bf.load223.tr = trunc i64 %bf.load223 to i32
  %bf.cast = and i32 %bf.load223.tr, 255
  %cmp225 = icmp eq i32 %bf.cast, 16
  %cmp227 = icmp slt i32 %align, 64
  %or.cond360 = and i1 %cmp225, %cmp227
  br i1 %or.cond360, label %return, label %if.end229

if.end229:                                        ; preds = %if.then219
  switch i32 %bf.cast, label %lor.lhs.false265 [
    i32 17, label %land.lhs.true274
    i32 18, label %land.lhs.true274
    i32 6, label %land.lhs.true274
    i32 46, label %land.lhs.true274
  ]

lor.lhs.false265:                                 ; preds = %if.end229
  %cmp273 = icmp eq i32 %bf.cast, 37
  %cmp275 = icmp slt i32 %align, 128
  %or.cond362 = and i1 %cmp273, %cmp275
  br i1 %or.cond362, label %return, label %if.end348

land.lhs.true274:                                 ; preds = %if.end229, %if.end229, %if.end229, %if.end229
  %cmp275.old = icmp slt i32 %align, 128
  br i1 %cmp275.old, label %return, label %if.end348

if.else278:                                       ; preds = %land.lhs.true216
  switch i32 %bf.clear, label %if.end348 [
    i32 7, label %if.then296
    i32 9, label %if.then296
    i32 6, label %if.then296
  ]

if.then296:                                       ; preds = %if.end107, %if.end107, %if.end107, %if.else278, %if.else278, %if.else278
  %type297 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode298 = getelementptr inbounds %struct.tree_type* %type297, i64 0, i32 6
  %bf.load299 = load i32* %mode298, align 4
  %bf.lshr300 = lshr i32 %bf.load299, 9
  %bf.clear301 = and i32 %bf.lshr300, 127
  %cmp302 = icmp eq i32 %bf.clear301, 16
  %cmp304 = icmp slt i32 %align, 64
  %or.cond364 = and i1 %cmp302, %cmp304
  br i1 %or.cond364, label %return, label %if.end306

if.end306:                                        ; preds = %if.then296
  switch i32 %bf.clear301, label %lor.lhs.false334 [
    i32 17, label %land.lhs.true341
    i32 18, label %land.lhs.true341
    i32 6, label %land.lhs.true341
    i32 46, label %land.lhs.true341
  ]

lor.lhs.false334:                                 ; preds = %if.end306
  %cmp340 = icmp eq i32 %bf.clear301, 37
  %cmp342 = icmp slt i32 %align, 128
  %or.cond366 = and i1 %cmp340, %cmp342
  br i1 %or.cond366, label %return, label %if.end348

land.lhs.true341:                                 ; preds = %if.end306, %if.end306, %if.end306, %if.end306
  %cmp342.old = icmp slt i32 %align, 128
  br i1 %cmp342.old, label %return, label %if.end348

if.end348:                                        ; preds = %if.end107, %if.else278, %if.end187, %land.lhs.true341, %lor.lhs.false334, %lor.lhs.false265, %land.lhs.true274, %lor.lhs.false159, %land.lhs.true168
  br label %return

return:                                           ; preds = %land.lhs.true341, %lor.lhs.false334, %if.then296, %land.lhs.true274, %lor.lhs.false265, %if.then219, %if.end187, %if.then177, %land.lhs.true168, %lor.lhs.false159, %if.then113, %land.lhs.true103, %lor.lhs.false96, %land.lhs.true44, %lor.lhs.false38, %if.end348
  %retval.0 = phi i32 [ %align, %if.end348 ], [ 256, %lor.lhs.false38 ], [ 256, %land.lhs.true44 ], [ 128, %lor.lhs.false96 ], [ 128, %land.lhs.true103 ], [ 64, %if.then113 ], [ 128, %lor.lhs.false159 ], [ 128, %land.lhs.true168 ], [ 64, %if.then177 ], [ 128, %if.end187 ], [ 64, %if.then219 ], [ 128, %lor.lhs.false265 ], [ 128, %land.lhs.true274 ], [ 64, %if.then296 ], [ 128, %lor.lhs.false334 ], [ 128, %land.lhs.true341 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @ix86_local_alignment(%union.tree_node* nocapture readonly %type, i32 %align) #2 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %code50.phi.trans.insert = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load51.pre = load i32* %code50.phi.trans.insert, align 8
  br i1 %tobool, label %if.end48, label %if.then

if.then:                                          ; preds = %entry
  %bf.clear = and i32 %bf.load51.pre, 255
  %bf.clear.off = add i32 %bf.clear, -18
  %switch = icmp ult i32 %bf.clear.off, 5
  br i1 %switch, label %land.lhs.true, label %if.end48

land.lhs.true:                                    ; preds = %if.then
  %size = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 2
  %1 = bitcast i32* %size to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !108
  %tobool25 = icmp eq %union.tree_node* %2, null
  br i1 %tobool25, label %if.end48, label %land.lhs.true26

land.lhs.true26:                                  ; preds = %land.lhs.true
  %code30 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load31 = load i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 25
  br i1 %cmp33, label %land.lhs.true34, label %if.end48

land.lhs.true34:                                  ; preds = %land.lhs.true26
  %int_cst37 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst37 to i64*
  %3 = load i64* %low, align 8, !tbaa !55
  %cmp38 = icmp ugt i64 %3, 15
  br i1 %cmp38, label %land.lhs.true45, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %land.lhs.true34
  %high = getelementptr inbounds i32* %int_cst37, i64 2
  %4 = bitcast i32* %high to i64*
  %5 = load i64* %4, align 8, !tbaa !109
  %tobool44 = icmp ne i64 %5, 0
  %cmp46 = icmp slt i32 %align, 128
  %or.cond = and i1 %tobool44, %cmp46
  br i1 %or.cond, label %return, label %if.end48

land.lhs.true45:                                  ; preds = %land.lhs.true34
  %cmp46.old = icmp slt i32 %align, 128
  br i1 %cmp46.old, label %return, label %if.end48

if.end48:                                         ; preds = %entry, %if.then, %land.lhs.true, %land.lhs.true26, %lor.lhs.false39, %land.lhs.true45
  %bf.clear52 = and i32 %bf.load51.pre, 255
  switch i32 %bf.clear52, label %if.end289 [
    i32 18, label %if.then54
    i32 8, label %if.then118
    i32 20, label %land.lhs.true157
    i32 21, label %land.lhs.true157
    i32 22, label %land.lhs.true157
    i32 7, label %if.then237
    i32 9, label %if.then237
    i32 6, label %if.then237
  ]

if.then54:                                        ; preds = %if.end48
  %type56 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type56, align 8, !tbaa !54
  %type57 = bitcast %union.tree_node* %6 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type57, i64 0, i32 6
  %bf.load58 = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load58, 9
  %bf.clear59 = and i32 %bf.lshr, 127
  %cmp60 = icmp eq i32 %bf.clear59, 16
  %cmp62 = icmp slt i32 %align, 64
  %or.cond291 = and i1 %cmp60, %cmp62
  br i1 %or.cond291, label %return, label %if.end64

if.end64:                                         ; preds = %if.then54
  switch i32 %bf.clear59, label %lor.lhs.false100 [
    i32 17, label %land.lhs.true109
    i32 18, label %land.lhs.true109
    i32 6, label %land.lhs.true109
    i32 46, label %land.lhs.true109
  ]

lor.lhs.false100:                                 ; preds = %if.end64
  %cmp108 = icmp eq i32 %bf.clear59, 37
  %cmp110 = icmp slt i32 %align, 128
  %or.cond293 = and i1 %cmp108, %cmp110
  br i1 %or.cond293, label %return, label %if.end289

land.lhs.true109:                                 ; preds = %if.end64, %if.end64, %if.end64, %if.end64
  %cmp110.old = icmp slt i32 %align, 128
  br i1 %cmp110.old, label %return, label %if.end289

if.then118:                                       ; preds = %if.end48
  %type119 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode120 = getelementptr inbounds %struct.tree_type* %type119, i64 0, i32 6
  %bf.load121 = load i32* %mode120, align 4
  %bf.lshr122 = lshr i32 %bf.load121, 9
  %bf.clear123 = and i32 %bf.lshr122, 127
  %cmp124 = icmp eq i32 %bf.clear123, 22
  %cmp126 = icmp slt i32 %align, 64
  %or.cond295 = and i1 %cmp124, %cmp126
  br i1 %or.cond295, label %return, label %if.end128

if.end128:                                        ; preds = %if.then118
  %cmp134 = icmp eq i32 %bf.clear123, 23
  %cmp136 = icmp slt i32 %align, 128
  %or.cond297 = and i1 %cmp134, %cmp136
  br i1 %or.cond297, label %return, label %if.end289

land.lhs.true157:                                 ; preds = %if.end48, %if.end48, %if.end48
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %7 = load i8** %values, align 8
  %tobool159 = icmp eq i8* %7, null
  br i1 %tobool159, label %if.else219, label %if.then160

if.then160:                                       ; preds = %land.lhs.true157
  %mode163 = getelementptr inbounds i8* %7, i64 48
  %8 = bitcast i8* %mode163 to i64*
  %bf.load164 = load i64* %8, align 8
  %bf.load164.tr = trunc i64 %bf.load164 to i32
  %bf.cast = and i32 %bf.load164.tr, 255
  %cmp166 = icmp eq i32 %bf.cast, 16
  %cmp168 = icmp slt i32 %align, 64
  %or.cond299 = and i1 %cmp166, %cmp168
  br i1 %or.cond299, label %return, label %if.end170

if.end170:                                        ; preds = %if.then160
  switch i32 %bf.cast, label %lor.lhs.false206 [
    i32 17, label %land.lhs.true215
    i32 18, label %land.lhs.true215
    i32 6, label %land.lhs.true215
    i32 46, label %land.lhs.true215
  ]

lor.lhs.false206:                                 ; preds = %if.end170
  %cmp214 = icmp eq i32 %bf.cast, 37
  %cmp216 = icmp slt i32 %align, 128
  %or.cond301 = and i1 %cmp214, %cmp216
  br i1 %or.cond301, label %return, label %if.end289

land.lhs.true215:                                 ; preds = %if.end170, %if.end170, %if.end170, %if.end170
  %cmp216.old = icmp slt i32 %align, 128
  br i1 %cmp216.old, label %return, label %if.end289

if.else219:                                       ; preds = %land.lhs.true157
  switch i32 %bf.clear52, label %if.end289 [
    i32 7, label %if.then237
    i32 9, label %if.then237
    i32 6, label %if.then237
  ]

if.then237:                                       ; preds = %if.end48, %if.end48, %if.end48, %if.else219, %if.else219, %if.else219
  %type238 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode239 = getelementptr inbounds %struct.tree_type* %type238, i64 0, i32 6
  %bf.load240 = load i32* %mode239, align 4
  %bf.lshr241 = lshr i32 %bf.load240, 9
  %bf.clear242 = and i32 %bf.lshr241, 127
  %cmp243 = icmp eq i32 %bf.clear242, 16
  %cmp245 = icmp slt i32 %align, 64
  %or.cond303 = and i1 %cmp243, %cmp245
  br i1 %or.cond303, label %return, label %if.end247

if.end247:                                        ; preds = %if.then237
  switch i32 %bf.clear242, label %lor.lhs.false275 [
    i32 17, label %land.lhs.true282
    i32 18, label %land.lhs.true282
    i32 6, label %land.lhs.true282
    i32 46, label %land.lhs.true282
  ]

lor.lhs.false275:                                 ; preds = %if.end247
  %cmp281 = icmp eq i32 %bf.clear242, 37
  %cmp283 = icmp slt i32 %align, 128
  %or.cond305 = and i1 %cmp281, %cmp283
  br i1 %or.cond305, label %return, label %if.end289

land.lhs.true282:                                 ; preds = %if.end247, %if.end247, %if.end247, %if.end247
  %cmp283.old = icmp slt i32 %align, 128
  br i1 %cmp283.old, label %return, label %if.end289

if.end289:                                        ; preds = %if.end48, %if.else219, %if.end128, %land.lhs.true282, %lor.lhs.false275, %lor.lhs.false206, %land.lhs.true215, %lor.lhs.false100, %land.lhs.true109
  br label %return

return:                                           ; preds = %land.lhs.true282, %lor.lhs.false275, %if.then237, %land.lhs.true215, %lor.lhs.false206, %if.then160, %if.end128, %if.then118, %land.lhs.true109, %lor.lhs.false100, %if.then54, %land.lhs.true45, %lor.lhs.false39, %if.end289
  %retval.0 = phi i32 [ %align, %if.end289 ], [ 128, %lor.lhs.false39 ], [ 128, %land.lhs.true45 ], [ 64, %if.then54 ], [ 128, %lor.lhs.false100 ], [ 128, %land.lhs.true109 ], [ 64, %if.then118 ], [ 128, %if.end128 ], [ 64, %if.then160 ], [ 128, %lor.lhs.false206 ], [ 128, %land.lhs.true215 ], [ 64, %if.then237 ], [ 128, %lor.lhs.false275 ], [ 128, %land.lhs.true282 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @x86_initialize_trampoline(%struct.rtx_def* %tramp, %struct.rtx_def* %fnaddr, %struct.rtx_def* %cxt) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !6
  %call = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 10) #5
  %call1 = tail call %struct.rtx_def* @expand_binop(i32 4, %struct.optab* %1, %struct.rtx_def* %fnaddr, %struct.rtx_def* %call, %struct.rtx_def* null, i32 1, i32 0) #5
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %tramp) #5
  %call3 = tail call i64 @trunc_int_for_mode(i64 185, i32 2) #5
  %call4 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call3) #5
  %call5 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call2, %struct.rtx_def* %call4) #5
  %call6 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 1) #5
  %call7 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call6) #5
  %call8 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call7, %struct.rtx_def* %cxt) #5
  %call9 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 5) #5
  %call10 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %call9) #5
  %call11 = tail call i64 @trunc_int_for_mode(i64 233, i32 2) #5
  %call12 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call11) #5
  %call13 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call10, %struct.rtx_def* %call12) #5
  %call14 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 6) #5
  %call15 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call14) #5
  %call16 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call15, %struct.rtx_def* %call1) #5
  br label %if.end76

if.else:                                          ; preds = %entry
  %2 = getelementptr inbounds %struct.rtx_def* %fnaddr, i64 0, i32 0
  %bf.load.i = load i32* %2, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.else32 [
    i32 58, label %sw.bb8.i
    i32 54, label %sw.bb1.i
    i32 68, label %sw.bb2.i
    i32 67, label %sw.bb3.i
  ]

sw.bb1.i:                                         ; preds = %if.else
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %fnaddr, i64 0, i32 1, i64 0, i32 0
  %3 = load i64* %rtwint.i, align 8, !tbaa !77
  %lnot.i = icmp ult i64 %3, 4294967296
  %lnot.ext.i = zext i1 %lnot.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb2.i:                                         ; preds = %if.else
  %4 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp.i = icmp eq i32 %4, 1
  %conv.i = zext i1 %cmp.i to i32
  br label %x86_64_zero_extended_value.exit

sw.bb3.i:                                         ; preds = %if.else
  %5 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %6 = and i32 %5, -3
  %7 = icmp eq i32 %6, 1
  %lor.ext.i = zext i1 %7 to i32
  br label %x86_64_zero_extended_value.exit

sw.bb8.i:                                         ; preds = %if.else
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %fnaddr, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx10.i to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load11.i = load i32* %9, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  %cmp13.i = icmp eq i32 %bf.clear12.i, 75
  br i1 %cmp13.i, label %if.then.i, label %if.else32

if.then.i:                                        ; preds = %sw.bb8.i
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 1
  %rtx26.i = bitcast %union.rtunion_def* %arrayidx25.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx26.i, align 8, !tbaa !6
  %11 = load i32* @ix86_cmodel, align 4, !tbaa !5
  %cmp27.i = icmp eq i32 %11, 4
  br i1 %cmp27.i, label %if.else32, label %if.end.i

if.end.i:                                         ; preds = %if.then.i
  %fld18.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1
  %rtx20.i = bitcast [1 x %union.rtunion_def]* %fld18.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx20.i, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load30.i = load i32* %13, align 8
  %bf.clear31.i = and i32 %bf.load30.i, 65535
  %cond.i = icmp eq i32 %bf.clear31.i, 67
  %14 = and i32 %11, -3
  %15 = icmp eq i32 %14, 1
  %or.cond = and i1 %cond.i, %15
  br i1 %or.cond, label %land.lhs.true.i, label %if.else32

land.lhs.true.i:                                  ; preds = %if.end.i
  %16 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load38.i = load i32* %16, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 65535
  %cmp40.i = icmp eq i32 %bf.clear39.i, 54
  br i1 %cmp40.i, label %land.lhs.true42.i, label %if.else32

land.lhs.true42.i:                                ; preds = %land.lhs.true.i
  %rtwint45.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0, i32 0
  %17 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call.i = tail call i64 @trunc_int_for_mode(i64 %17, i32 5) #5
  %cmp46.i = icmp sgt i64 %call.i, -65536
  br i1 %cmp46.i, label %land.lhs.true48.i, label %if.else32

land.lhs.true48.i:                                ; preds = %land.lhs.true42.i
  %18 = load i64* %rtwint45.i, align 8, !tbaa !77
  %call52.i = tail call i64 @trunc_int_for_mode(i64 %18, i32 4) #5
  %19 = load i64* %rtwint45.i, align 8, !tbaa !77
  %cmp56.i = icmp eq i64 %call52.i, %19
  br i1 %cmp56.i, label %if.then19, label %if.else32

x86_64_zero_extended_value.exit:                  ; preds = %sw.bb1.i, %sw.bb2.i, %sw.bb3.i
  %retval.0.i = phi i32 [ %lor.ext.i, %sw.bb3.i ], [ %conv.i, %sw.bb2.i ], [ %lnot.ext.i, %sw.bb1.i ]
  %tobool18 = icmp eq i32 %retval.0.i, 0
  br i1 %tobool18, label %if.else32, label %if.then19

if.then19:                                        ; preds = %land.lhs.true48.i, %x86_64_zero_extended_value.exit
  %call20 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 5, %struct.rtx_def* %fnaddr) #5
  %call21 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 0) #5
  %call22 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %call21) #5
  %call23 = tail call i64 @trunc_int_for_mode(i64 47937, i32 3) #5
  %call24 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call23) #5
  %call25 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call22, %struct.rtx_def* %call24) #5
  %call27 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 2) #5
  %call28 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call27) #5
  %call29 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %call20) #5
  %call30 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call28, %struct.rtx_def* %call29) #5
  br label %if.end

if.else32:                                        ; preds = %sw.bb8.i, %land.lhs.true.i, %land.lhs.true42.i, %land.lhs.true48.i, %if.else, %if.end.i, %if.then.i, %x86_64_zero_extended_value.exit
  %call34 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 0) #5
  %call35 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %call34) #5
  %call36 = tail call i64 @trunc_int_for_mode(i64 47945, i32 3) #5
  %call37 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call36) #5
  %call38 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call35, %struct.rtx_def* %call37) #5
  %call41 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 2) #5
  %call42 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call41) #5
  %call43 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call42, %struct.rtx_def* %fnaddr) #5
  br label %if.end

if.end:                                           ; preds = %if.else32, %if.then19
  %offset.0 = phi i32 [ 6, %if.then19 ], [ 10, %if.else32 ]
  %conv45106 = zext i32 %offset.0 to i64
  %call46 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 %conv45106) #5
  %call47 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %call46) #5
  %call48 = tail call i64 @trunc_int_for_mode(i64 47689, i32 3) #5
  %call49 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call48) #5
  %call50 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call47, %struct.rtx_def* %call49) #5
  %add51 = add nsw i32 %offset.0, 2
  %conv52107 = zext i32 %add51 to i64
  %call53 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 %conv52107) #5
  %call54 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call53) #5
  %call55 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call54, %struct.rtx_def* %cxt) #5
  %add56 = add nsw i32 %offset.0, 10
  %conv57108 = zext i32 %add56 to i64
  %call58 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 %conv57108) #5
  %call59 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 3, %struct.rtx_def* %call58) #5
  %call60 = tail call i64 @trunc_int_for_mode(i64 65353, i32 3) #5
  %call61 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call60) #5
  %call62 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call59, %struct.rtx_def* %call61) #5
  %add63 = add nsw i32 %offset.0, 12
  %conv64109 = zext i32 %add63 to i64
  %call65 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %tramp, i64 %conv64109) #5
  %call66 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 2, %struct.rtx_def* %call65) #5
  %call67 = tail call i64 @trunc_int_for_mode(i64 227, i32 2) #5
  %call68 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call67) #5
  %call69 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call66, %struct.rtx_def* %call68) #5
  %add70 = add nsw i32 %offset.0, 13
  %20 = load i32* @target_flags, align 4, !tbaa !1
  %and71 = and i32 %20, 33554432
  %tobool72 = icmp ne i32 %and71, 0
  %cond = select i1 %tobool72, i32 23, i32 10
  %cmp = icmp ugt i32 %add70, %cond
  br i1 %cmp, label %if.then74, label %if.end76

if.then74:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 10894, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.x86_initialize_trampoline, i64 0, i64 0)) #8
  unreachable

if.end76:                                         ; preds = %if.end, %if.then
  ret void
}

declare %struct.rtx_def* @gen_emms() #0

declare %struct.rtx_def* @gen_sfence() #0

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ix86_expand_unop1_builtin(i32 %icode, %union.tree_node* nocapture readonly %arglist, %struct.rtx_def* %target) #1 {
entry:
  %value = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !25
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %1, %struct.rtx_def* null, i32 0, i32 0) #5
  %idxprom = zext i32 %icode to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3
  %2 = load %struct.insn_operand_data** %operand, align 8, !tbaa !21
  %mode = getelementptr inbounds %struct.insn_operand_data* %2, i64 0, i32 2
  %bf.load = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load to i32
  %mode6 = getelementptr inbounds %struct.insn_operand_data* %2, i64 1, i32 2
  %bf.load7 = load i16* %mode6, align 8
  %bf.cast8 = zext i16 %bf.load7 to i32
  %tobool = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load9 = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load9, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, %bf.cast
  br i1 %cmp, label %lor.lhs.false10, label %if.then

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %predicate = getelementptr inbounds %struct.insn_operand_data* %2, i64 0, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !28
  %call15 = tail call i32 %4(%struct.rtx_def* %target, i32 %bf.cast) #5
  %tobool16 = icmp eq i32 %call15, 0
  br i1 %tobool16, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false, %entry
  %call17 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #5
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false10, %if.then
  %target.addr.0 = phi %struct.rtx_def* [ %call17, %if.then ], [ %target, %lor.lhs.false10 ]
  %idxprom18 = zext i16 %bf.load7 to i64
  %arrayidx19 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom18
  %5 = load i32* %arrayidx19, align 4, !tbaa !5
  %.off = add i32 %5, -7
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then25, label %if.end27

if.then25:                                        ; preds = %if.end
  %call26 = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call, i32 %bf.cast8)
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then25
  %op0.0 = phi %struct.rtx_def* [ %call26, %if.then25 ], [ %call, %if.end ]
  %predicate32 = getelementptr inbounds %struct.insn_operand_data* %2, i64 1, i32 0
  %6 = load i32 (%struct.rtx_def*, i32)** %predicate32, align 8, !tbaa !28
  %call33 = tail call i32 %6(%struct.rtx_def* %op0.0, i32 %bf.cast8) #5
  %tobool34 = icmp eq i32 %call33, 0
  br i1 %tobool34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.end27
  %call36 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast8, %struct.rtx_def* %op0.0) #5
  br label %if.end37

if.end37:                                         ; preds = %if.end27, %if.then35
  %op0.1 = phi %struct.rtx_def* [ %op0.0, %if.end27 ], [ %call36, %if.then35 ]
  %predicate42 = getelementptr inbounds %struct.insn_operand_data* %2, i64 2, i32 0
  %7 = load i32 (%struct.rtx_def*, i32)** %predicate42, align 8, !tbaa !28
  %call43 = tail call i32 %7(%struct.rtx_def* %op0.1, i32 %bf.cast8) #5
  %tobool44 = icmp eq i32 %call43, 0
  br i1 %tobool44, label %if.then45, label %if.end47

if.then45:                                        ; preds = %if.end37
  %call46 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast8, %struct.rtx_def* %op0.1) #5
  br label %if.end47

if.end47:                                         ; preds = %if.end37, %if.then45
  %op1.0 = phi %struct.rtx_def* [ %op0.1, %if.end37 ], [ %call46, %if.then45 ]
  %idxprom48 = sext i32 %icode to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom48, i32 2
  %8 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !30
  %call50 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %8(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %op0.1, %struct.rtx_def* %op1.0) #5
  %tobool51 = icmp eq %struct.rtx_def* %call50, null
  br i1 %tobool51, label %return, label %if.end53

if.end53:                                         ; preds = %if.end47
  %call54 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call50) #5
  br label %return

return:                                           ; preds = %if.end47, %if.end53
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end53 ], [ null, %if.end47 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ix86_expand_timode_binop_builtin(i32 %icode, %union.tree_node* nocapture readonly %arglist) #1 {
entry:
  %value = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !25
  %chain = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 0, i32 0
  %2 = load %union.tree_node** %chain, align 8, !tbaa !27
  %value2 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value2 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !25
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %1, %struct.rtx_def* null, i32 0, i32 0) #5
  %call3 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %4, %struct.rtx_def* null, i32 0, i32 0) #5
  %call4 = tail call %struct.rtx_def* @gen_lowpart(i32 6, %struct.rtx_def* %call) #5
  %call5 = tail call %struct.rtx_def* @gen_lowpart(i32 6, %struct.rtx_def* %call3) #5
  %call6 = tail call %struct.rtx_def* @gen_reg_rtx(i32 6) #5
  %idxprom = zext i32 %icode to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3
  %5 = load %struct.insn_operand_data** %operand, align 8, !tbaa !21
  %predicate = getelementptr inbounds %struct.insn_operand_data* %5, i64 1, i32 0
  %6 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !28
  %call8 = tail call i32 %6(%struct.rtx_def* %call4, i32 6) #5
  %tobool = icmp eq i32 %call8, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call9 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 6, %struct.rtx_def* %call4) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %op0.0 = phi %struct.rtx_def* [ %call4, %entry ], [ %call9, %if.then ]
  %predicate14 = getelementptr inbounds %struct.insn_operand_data* %5, i64 2, i32 0
  %7 = load i32 (%struct.rtx_def*, i32)** %predicate14, align 8, !tbaa !28
  %call15 = tail call i32 %7(%struct.rtx_def* %call5, i32 6) #5
  %tobool16 = icmp eq i32 %call15, 0
  br i1 %tobool16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end
  %call18 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 6, %struct.rtx_def* %call5) #5
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then17
  %op1.0 = phi %struct.rtx_def* [ %call5, %if.end ], [ %call18, %if.then17 ]
  %8 = getelementptr inbounds %struct.rtx_def* %op0.0, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end25

land.lhs.true:                                    ; preds = %if.end19
  %9 = getelementptr inbounds %struct.rtx_def* %op1.0, i64 0, i32 0
  %bf.load20 = load i32* %9, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 66
  br i1 %cmp22, label %if.then23, label %if.end25

if.then23:                                        ; preds = %land.lhs.true
  %call24 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 6, %struct.rtx_def* %op0.0) #5
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %land.lhs.true, %if.end19
  %op0.1 = phi %struct.rtx_def* [ %call24, %if.then23 ], [ %op0.0, %land.lhs.true ], [ %op0.0, %if.end19 ]
  %idxprom26 = sext i32 %icode to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom26, i32 2
  %10 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !30
  %call28 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %10(%struct.rtx_def* %call6, %struct.rtx_def* %op0.1, %struct.rtx_def* %op1.0) #5
  %tobool29 = icmp eq %struct.rtx_def* %call28, null
  br i1 %tobool29, label %return, label %if.end31

if.end31:                                         ; preds = %if.end25
  %call32 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call28) #5
  %call33 = tail call %struct.rtx_def* @gen_lowpart(i32 46, %struct.rtx_def* %call6) #5
  br label %return

return:                                           ; preds = %if.end25, %if.end31
  %retval.0 = phi %struct.rtx_def* [ %call33, %if.end31 ], [ null, %if.end25 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ix86_expand_unop_builtin(i32 %icode, %union.tree_node* nocapture readonly %arglist, %struct.rtx_def* %target, i32 %do_load) #1 {
entry:
  %value = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !25
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %1, %struct.rtx_def* null, i32 0, i32 0) #5
  %idxprom = zext i32 %icode to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3
  %2 = load %struct.insn_operand_data** %operand, align 8, !tbaa !21
  %mode = getelementptr inbounds %struct.insn_operand_data* %2, i64 0, i32 2
  %bf.load = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load to i32
  %mode6 = getelementptr inbounds %struct.insn_operand_data* %2, i64 1, i32 2
  %bf.load7 = load i16* %mode6, align 8
  %bf.cast8 = zext i16 %bf.load7 to i32
  %tobool = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load9 = load i32* %3, align 8
  %bf.lshr = lshr i32 %bf.load9, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, %bf.cast
  br i1 %cmp, label %lor.lhs.false10, label %if.then

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %predicate = getelementptr inbounds %struct.insn_operand_data* %2, i64 0, i32 0
  %4 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !28
  %call15 = tail call i32 %4(%struct.rtx_def* %target, i32 %bf.cast) #5
  %tobool16 = icmp eq i32 %call15, 0
  br i1 %tobool16, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false, %entry
  %call17 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #5
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false10, %if.then
  %target.addr.0 = phi %struct.rtx_def* [ %call17, %if.then ], [ %target, %lor.lhs.false10 ]
  %tobool18 = icmp eq i32 %do_load, 0
  br i1 %tobool18, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end
  %5 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %5, 25
  %6 = and i32 %and, 1
  %7 = or i32 %6, 4
  %call21 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %7, %struct.rtx_def* %call) #5
  %call22 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast8, %struct.rtx_def* %call21) #5
  br label %if.end43

if.else:                                          ; preds = %if.end
  %idxprom23 = zext i16 %bf.load7 to i64
  %arrayidx24 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom23
  %8 = load i32* %arrayidx24, align 4, !tbaa !5
  %.off = add i32 %8, -7
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.else
  %call31 = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call, i32 %bf.cast8)
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then30
  %op0.0 = phi %struct.rtx_def* [ %call31, %if.then30 ], [ %call, %if.else ]
  %predicate37 = getelementptr inbounds %struct.insn_operand_data* %2, i64 1, i32 0
  %9 = load i32 (%struct.rtx_def*, i32)** %predicate37, align 8, !tbaa !28
  %call38 = tail call i32 %9(%struct.rtx_def* %op0.0, i32 %bf.cast8) #5
  %tobool39 = icmp eq i32 %call38, 0
  br i1 %tobool39, label %if.then40, label %if.end43

if.then40:                                        ; preds = %if.end32
  %call41 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast8, %struct.rtx_def* %op0.0) #5
  br label %if.end43

if.end43:                                         ; preds = %if.end32, %if.then40, %if.then19
  %op0.1 = phi %struct.rtx_def* [ %call22, %if.then19 ], [ %op0.0, %if.end32 ], [ %call41, %if.then40 ]
  %idxprom44 = sext i32 %icode to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom44, i32 2
  %10 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !30
  %call46 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %10(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %op0.1) #5
  %tobool47 = icmp eq %struct.rtx_def* %call46, null
  br i1 %tobool47, label %return, label %if.end49

if.end49:                                         ; preds = %if.end43
  %call50 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call46) #5
  br label %return

return:                                           ; preds = %if.end43, %if.end49
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end49 ], [ null, %if.end43 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ix86_expand_store_builtin(i32 %icode, %union.tree_node* nocapture readonly %arglist) #1 {
entry:
  %value = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !25
  %chain = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 0, i32 0
  %2 = load %union.tree_node** %chain, align 8, !tbaa !27
  %value2 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value2 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !25
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %1, %struct.rtx_def* null, i32 0, i32 0) #5
  %call3 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %4, %struct.rtx_def* null, i32 0, i32 0) #5
  %idxprom = zext i32 %icode to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3
  %5 = load %struct.insn_operand_data** %operand, align 8, !tbaa !21
  %mode = getelementptr inbounds %struct.insn_operand_data* %5, i64 0, i32 2
  %bf.load = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load to i32
  %mode9 = getelementptr inbounds %struct.insn_operand_data* %5, i64 1, i32 2
  %bf.load10 = load i16* %mode9, align 8
  %bf.cast11 = zext i16 %bf.load10 to i32
  %idxprom12 = zext i16 %bf.load10 to i64
  %arrayidx13 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom12
  %6 = load i32* %arrayidx13, align 4, !tbaa !5
  %.off = add i32 %6, -7
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call17 = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call3, i32 %bf.cast11)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %op1.0 = phi %struct.rtx_def* [ %call17, %if.then ], [ %call3, %entry ]
  %7 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %7, 25
  %8 = and i32 %and, 1
  %9 = or i32 %8, 4
  %call18 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %9, %struct.rtx_def* %call) #5
  %call19 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.cast, %struct.rtx_def* %call18) #5
  %predicate = getelementptr inbounds %struct.insn_operand_data* %5, i64 1, i32 0
  %10 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !28
  %call24 = tail call i32 %10(%struct.rtx_def* %op1.0, i32 %bf.cast11) #5
  %tobool25 = icmp eq i32 %call24, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end
  %call27 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast11, %struct.rtx_def* %op1.0) #5
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then26
  %op1.1 = phi %struct.rtx_def* [ %op1.0, %if.end ], [ %call27, %if.then26 ]
  %idxprom29 = sext i32 %icode to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom29, i32 2
  %11 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !30
  %call31 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %11(%struct.rtx_def* %call19, %struct.rtx_def* %op1.1) #5
  %tobool32 = icmp eq %struct.rtx_def* %call31, null
  br i1 %tobool32, label %if.end35, label %if.then33

if.then33:                                        ; preds = %if.end28
  %call34 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call31) #5
  br label %if.end35

if.end35:                                         ; preds = %if.end28, %if.then33
  ret void
}

declare %struct.rtx_def* @gen_ldmxcsr(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_stmxcsr(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_femms() #0

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @ix86_expand_binop_builtin(i32 %icode, %union.tree_node* nocapture readonly %arglist, %struct.rtx_def* %target) #1 {
entry:
  %value = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !25
  %chain = getelementptr inbounds %union.tree_node* %arglist, i64 0, i32 0, i32 0, i32 0
  %2 = load %union.tree_node** %chain, align 8, !tbaa !27
  %value2 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value2 to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !25
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %1, %struct.rtx_def* null, i32 0, i32 0) #5
  %call3 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %4, %struct.rtx_def* null, i32 0, i32 0) #5
  %idxprom = zext i32 %icode to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, i32 3
  %5 = load %struct.insn_operand_data** %operand, align 8, !tbaa !21
  %mode = getelementptr inbounds %struct.insn_operand_data* %5, i64 0, i32 2
  %bf.load = load i16* %mode, align 8
  %bf.cast = zext i16 %bf.load to i32
  %mode9 = getelementptr inbounds %struct.insn_operand_data* %5, i64 1, i32 2
  %bf.load10 = load i16* %mode9, align 8
  %bf.cast11 = zext i16 %bf.load10 to i32
  %mode16 = getelementptr inbounds %struct.insn_operand_data* %5, i64 2, i32 2
  %bf.load17 = load i16* %mode16, align 8
  %bf.cast18 = zext i16 %bf.load17 to i32
  %idxprom19 = zext i16 %bf.load10 to i64
  %arrayidx20 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom19
  %6 = load i32* %arrayidx20, align 4, !tbaa !5
  %.off = add i32 %6, -7
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call24 = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call, i32 %bf.cast11)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %op0.0 = phi %struct.rtx_def* [ %call24, %if.then ], [ %call, %entry ]
  %idxprom25 = zext i16 %bf.load17 to i64
  %arrayidx26 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom25
  %7 = load i32* %arrayidx26, align 4, !tbaa !5
  %.off131 = add i32 %7, -7
  %switch132 = icmp ult i32 %.off131, 2
  br i1 %switch132, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end
  %call33 = tail call fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* %call3, i32 %bf.cast18)
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then32
  %op1.0 = phi %struct.rtx_def* [ %call33, %if.then32 ], [ %call3, %if.end ]
  %tobool = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool, label %if.then45, label %lor.lhs.false35

lor.lhs.false35:                                  ; preds = %if.end34
  %8 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load36 = load i32* %8, align 8
  %bf.lshr = lshr i32 %bf.load36, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp37 = icmp eq i32 %bf.clear, %bf.cast
  br i1 %cmp37, label %lor.lhs.false38, label %if.then45

lor.lhs.false38:                                  ; preds = %lor.lhs.false35
  %predicate = getelementptr inbounds %struct.insn_operand_data* %5, i64 0, i32 0
  %9 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !28
  %call43 = tail call i32 %9(%struct.rtx_def* %target, i32 %bf.cast) #5
  %tobool44 = icmp eq i32 %call43, 0
  br i1 %tobool44, label %if.then45, label %if.end47

if.then45:                                        ; preds = %lor.lhs.false38, %lor.lhs.false35, %if.end34
  %call46 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #5
  br label %if.end47

if.end47:                                         ; preds = %lor.lhs.false38, %if.then45
  %target.addr.0 = phi %struct.rtx_def* [ %call46, %if.then45 ], [ %target, %lor.lhs.false38 ]
  %10 = getelementptr inbounds %struct.rtx_def* %op0.0, i64 0, i32 0
  %bf.load48 = load i32* %10, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %cmp51 = icmp eq i32 %bf.clear50, %bf.cast11
  br i1 %cmp51, label %lor.lhs.false52, label %if.then57

lor.lhs.false52:                                  ; preds = %if.end47
  %11 = getelementptr inbounds %struct.rtx_def* %op1.0, i64 0, i32 0
  %bf.load53 = load i32* %11, align 8
  %bf.lshr54 = lshr i32 %bf.load53, 16
  %bf.clear55 = and i32 %bf.lshr54, 255
  %cmp56 = icmp eq i32 %bf.clear55, %bf.cast18
  br i1 %cmp56, label %if.end58, label %if.then57

if.then57:                                        ; preds = %lor.lhs.false52, %if.end47
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 11501, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.ix86_expand_binop_builtin, i64 0, i64 0)) #8
  unreachable

if.end58:                                         ; preds = %lor.lhs.false52
  %predicate63 = getelementptr inbounds %struct.insn_operand_data* %5, i64 1, i32 0
  %12 = load i32 (%struct.rtx_def*, i32)** %predicate63, align 8, !tbaa !28
  %call64 = tail call i32 %12(%struct.rtx_def* %op0.0, i32 %bf.cast11) #5
  %tobool65 = icmp eq i32 %call64, 0
  br i1 %tobool65, label %if.then66, label %if.end68

if.then66:                                        ; preds = %if.end58
  %call67 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast11, %struct.rtx_def* %op0.0) #5
  br label %if.end68

if.end68:                                         ; preds = %if.end58, %if.then66
  %op0.1 = phi %struct.rtx_def* [ %op0.0, %if.end58 ], [ %call67, %if.then66 ]
  %predicate73 = getelementptr inbounds %struct.insn_operand_data* %5, i64 2, i32 0
  %13 = load i32 (%struct.rtx_def*, i32)** %predicate73, align 8, !tbaa !28
  %call74 = tail call i32 %13(%struct.rtx_def* %op1.0, i32 %bf.cast18) #5
  %tobool75 = icmp eq i32 %call74, 0
  br i1 %tobool75, label %if.then76, label %if.end78

if.then76:                                        ; preds = %if.end68
  %call77 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast18, %struct.rtx_def* %op1.0) #5
  br label %if.end78

if.end78:                                         ; preds = %if.end68, %if.then76
  %op1.1 = phi %struct.rtx_def* [ %op1.0, %if.end68 ], [ %call77, %if.then76 ]
  %14 = getelementptr inbounds %struct.rtx_def* %op0.1, i64 0, i32 0
  %bf.load79 = load i32* %14, align 8
  %bf.clear80 = and i32 %bf.load79, 65535
  %cmp81 = icmp eq i32 %bf.clear80, 66
  br i1 %cmp81, label %land.lhs.true, label %if.end87

land.lhs.true:                                    ; preds = %if.end78
  %15 = getelementptr inbounds %struct.rtx_def* %op1.1, i64 0, i32 0
  %bf.load82 = load i32* %15, align 8
  %bf.clear83 = and i32 %bf.load82, 65535
  %cmp84 = icmp eq i32 %bf.clear83, 66
  br i1 %cmp84, label %if.then85, label %if.end87

if.then85:                                        ; preds = %land.lhs.true
  %call86 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %bf.cast11, %struct.rtx_def* %op0.1) #5
  br label %if.end87

if.end87:                                         ; preds = %if.then85, %land.lhs.true, %if.end78
  %op0.2 = phi %struct.rtx_def* [ %call86, %if.then85 ], [ %op0.1, %land.lhs.true ], [ %op0.1, %if.end78 ]
  %idxprom88 = sext i32 %icode to i64
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom88, i32 2
  %16 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !30
  %call90 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %16(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %op0.2, %struct.rtx_def* %op1.1) #5
  %tobool91 = icmp eq %struct.rtx_def* %call90, null
  br i1 %tobool91, label %return, label %if.end93

if.end93:                                         ; preds = %if.end87
  %call94 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call90) #5
  br label %return

return:                                           ; preds = %if.end87, %if.end93
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end93 ], [ null, %if.end87 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_sse_clrv4sf(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_mmx_clrdi(%struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @ix86_force_to_memory(i32 %mode, %struct.rtx_def* %operand) #1 {
entry:
  %operand.addr = alloca %struct.rtx_def*, align 8
  %operands = alloca [2 x %struct.rtx_def*], align 16
  store %struct.rtx_def* %operand, %struct.rtx_def** %operand.addr, align 8, !tbaa !6
  %0 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 12178, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.ix86_force_to_memory, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %2 = and i32 %1, 100663296
  switch i32 %2, label %if.else23 [
    i32 33554432, label %if.then4
    i32 100663296, label %if.then15
  ]

if.then4:                                         ; preds = %if.end
  %and = lshr i32 %1, 25
  %3 = and i32 %and, 1
  %4 = or i32 %3, 4
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 -128) #5
  %call7 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %4, %struct.rtx_def* %5, %struct.rtx_def* %call) #5
  %call8 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %call7) #5
  %call9 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call8, %struct.rtx_def* %operand) #5
  br label %if.end56

if.then15:                                        ; preds = %if.end
  switch i32 %mode, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb17
  ]

sw.bb:                                            ; preds = %if.then15, %if.then15
  %call16 = tail call %struct.rtx_def* @gen_lowpart(i32 5, %struct.rtx_def* %operand) #5
  store %struct.rtx_def* %call16, %struct.rtx_def** %operand.addr, align 8, !tbaa !6
  br label %sw.bb17

sw.bb17:                                          ; preds = %if.then15, %sw.bb
  %6 = phi %struct.rtx_def* [ %operand, %if.then15 ], [ %call16, %sw.bb ]
  %7 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call18 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 5, %struct.rtx_def* %7) #5
  %call19 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 5, %struct.rtx_def* %call18) #5
  %call20 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call19, %struct.rtx_def* %6) #5
  %call21 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call20) #5
  %8 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call22 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %8) #5
  br label %if.end56

sw.default:                                       ; preds = %if.then15
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 12204, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.ix86_force_to_memory, i64 0, i64 0)) #8
  unreachable

if.else23:                                        ; preds = %if.end
  switch i32 %mode, label %sw.default52 [
    i32 5, label %sw.bb24
    i32 3, label %sw.bb41
    i32 4, label %sw.bb47
  ]

sw.bb24:                                          ; preds = %if.else23
  %arraydecay = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 0
  %add.ptr = getelementptr inbounds [2 x %struct.rtx_def*]* %operands, i64 0, i64 1
  call void @split_di(%struct.rtx_def** %operand.addr, i32 1, %struct.rtx_def** %arraydecay, %struct.rtx_def** %add.ptr)
  %9 = load i32* @target_flags, align 4, !tbaa !1
  %and26 = lshr i32 %9, 25
  %10 = and i32 %and26, 1
  %11 = or i32 %10, 4
  %12 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call29 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 %11, %struct.rtx_def* %12) #5
  %call30 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call29) #5
  %13 = load %struct.rtx_def** %add.ptr, align 8, !tbaa !6
  %call31 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call30, %struct.rtx_def* %13) #5
  %call32 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call31) #5
  %14 = load i32* @target_flags, align 4, !tbaa !1
  %and33 = lshr i32 %14, 25
  %15 = and i32 %and33, 1
  %16 = or i32 %15, 4
  %17 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call36 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 %16, %struct.rtx_def* %17) #5
  %call37 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call36) #5
  %18 = load %struct.rtx_def** %arraydecay, align 16, !tbaa !6
  %call39 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call37, %struct.rtx_def* %18) #5
  %call40 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call39) #5
  br label %sw.epilog53

sw.bb41:                                          ; preds = %if.else23
  %19 = load i32* @ix86_cpu, align 4, !tbaa !5
  %tobool43 = icmp eq i32 %19, 3
  br i1 %tobool43, label %sw.bb47, label %if.then44

if.then44:                                        ; preds = %sw.bb41
  %call45 = tail call %struct.rtx_def* @gen_lowpart(i32 4, %struct.rtx_def* %operand) #5
  store %struct.rtx_def* %call45, %struct.rtx_def** %operand.addr, align 8, !tbaa !6
  br label %sw.bb47

sw.bb47:                                          ; preds = %sw.bb41, %if.then44, %if.else23
  %20 = phi %struct.rtx_def* [ %operand, %sw.bb41 ], [ %call45, %if.then44 ], [ %operand, %if.else23 ]
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load = load i32* %21, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %22 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call48 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 96, i32 4, %struct.rtx_def* %22) #5
  %call49 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear, %struct.rtx_def* %call48) #5
  %call50 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call49, %struct.rtx_def* %20) #5
  %call51 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call50) #5
  br label %sw.epilog53

sw.default52:                                     ; preds = %if.else23
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 12244, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.ix86_force_to_memory, i64 0, i64 0)) #8
  unreachable

sw.epilog53:                                      ; preds = %sw.bb47, %sw.bb24
  %23 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call54 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %mode, %struct.rtx_def* %23) #5
  br label %if.end56

if.end56:                                         ; preds = %sw.bb17, %sw.epilog53, %if.then4
  %result.0 = phi %struct.rtx_def* [ %call22, %sw.bb17 ], [ %call54, %sw.epilog53 ], [ %call8, %if.then4 ]
  ret %struct.rtx_def* %result.0
}

; Function Attrs: nounwind uwtable
define void @ix86_free_from_memory(i32 %mode) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !1
  %1 = and i32 %0, 100663296
  %2 = icmp eq i32 %1, 33554432
  br i1 %2, label %if.end18, label %if.then

if.then:                                          ; preds = %entry
  %and = and i32 %0, 33554432
  %cmp = icmp ne i32 %mode, 5
  %tobool5 = icmp eq i32 %and, 0
  %or.cond21 = and i1 %cmp, %tobool5
  br i1 %or.cond21, label %if.else, label %if.end12

if.else:                                          ; preds = %if.then
  %cmp7 = icmp eq i32 %mode, 3
  %3 = load i32* @ix86_cpu, align 4
  %tobool9 = icmp eq i32 %3, 3
  %or.cond20 = and i1 %cmp7, %tobool9
  %. = select i1 %or.cond20, i64 2, i64 4
  br label %if.end12

if.end12:                                         ; preds = %if.then, %if.else
  %size.0 = phi i64 [ 8, %if.then ], [ %., %if.else ]
  %4 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %and13 = lshr i32 %0, 25
  %5 = and i32 %and13, 1
  %6 = or i32 %5, 4
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %size.0) #5
  %call15 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %6, %struct.rtx_def* %4, %struct.rtx_def* %call) #5
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %4, %struct.rtx_def* %call15) #5
  %call17 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call16) #5
  br label %if.end18

if.end18:                                         ; preds = %entry, %if.end12
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ix86_preferred_reload_class(%struct.rtx_def* readonly %x, i32 %class) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp ne i32 %bf.clear, 55
  %bf.clear2 = and i32 %bf.load, 16711680
  %cmp3 = icmp eq i32 %bf.clear2, 0
  %or.cond = or i1 %cmp, %cmp3
  br i1 %or.cond, label %if.end27, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @reg_class_subset_p(i32 %class, i32 16) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %if.then
  %call5 = tail call i32 @reg_classes_intersect_p(i32 %class, i32 15) #5
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.end16, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %if.end
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 55
  br i1 %cmp.i, label %lor.lhs.false.i, label %if.then10

lor.lhs.false.i:                                  ; preds = %land.lhs.true7
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear2.i = and i32 %bf.lshr.i, 255
  %idxprom41.i = zext i32 %bf.clear2.i to i64
  %arrayidx.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom41.i
  %1 = load i32* %arrayidx.i, align 4, !tbaa !5
  switch i32 %1, label %if.then10 [
    i32 2, label %if.end.i
    i32 6, label %if.end.i
    i32 8, label %if.end.i
  ]

if.end.i:                                         ; preds = %lor.lhs.false.i, %lor.lhs.false.i, %lor.lhs.false.i
  %arrayidx22.i = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom41.i
  %2 = load %struct.rtx_def** %arrayidx22.i, align 8, !tbaa !6
  %cmp23.i = icmp eq %struct.rtx_def* %2, %x
  br i1 %cmp23.i, label %if.then10, label %if.end25.i

if.end25.i:                                       ; preds = %if.end.i
  %arrayidx30.i = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom41.i
  %3 = load %struct.rtx_def** %arrayidx30.i, align 8, !tbaa !6
  %cmp31.i = icmp eq %struct.rtx_def* %3, %x
  br i1 %cmp31.i, label %if.then10, label %if.end16

if.then10:                                        ; preds = %if.end25.i, %lor.lhs.false.i, %land.lhs.true7, %if.end.i
  %call11 = tail call i32 @reg_classes_intersect_p(i32 16, i32 %class) #5
  %tobool12 = icmp eq i32 %call11, 0
  br i1 %tobool12, label %return, label %if.then13

if.then13:                                        ; preds = %if.then10
  %call14 = tail call i32 @reg_class_subset_p(i32 %class, i32 12) #5
  %tobool15 = icmp ne i32 %call14, 0
  %cond = select i1 %tobool15, i32 12, i32 15
  br label %return

if.end16:                                         ; preds = %if.end25.i, %if.end
  %call17 = tail call i32 @reg_class_subset_p(i32 %class, i32 12) #5
  %tobool18 = icmp eq i32 %call17, 0
  br i1 %tobool18, label %if.end20, label %return

if.end20:                                         ; preds = %if.end16
  %call21 = tail call i32 @reg_classes_intersect_p(i32 %class, i32 15) #5
  %tobool22 = icmp eq i32 %call21, 0
  br i1 %tobool22, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end20
  %call23 = tail call i32 @reg_classes_intersect_p(i32 16, i32 %class) #5
  %tobool24 = icmp eq i32 %call23, 0
  br i1 %tobool24, label %if.end27, label %return

if.end27:                                         ; preds = %entry, %lor.lhs.false
  %call28 = tail call i32 @reg_classes_intersect_p(i32 17, i32 %class) #5
  %tobool29 = icmp eq i32 %call28, 0
  %bf.load64.pre = load i32* %0, align 8
  br i1 %tobool29, label %if.end63, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %if.end27
  %bf.clear32 = and i32 %bf.load64.pre, 65535
  switch i32 %bf.clear32, label %if.end63 [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

if.end63:                                         ; preds = %if.end27, %land.lhs.true30
  %bf.clear66 = and i32 %bf.load64.pre, 16711680
  %cmp67 = icmp eq i32 %bf.clear66, 131072
  br i1 %cmp67, label %land.lhs.true68, label %if.end72

land.lhs.true68:                                  ; preds = %if.end63
  %call69 = tail call i32 @reg_class_subset_p(i32 %class, i32 8) #5
  %tobool70 = icmp eq i32 %call69, 0
  br i1 %tobool70, label %return, label %if.end72

if.end72:                                         ; preds = %land.lhs.true68, %if.end63
  br label %return

return:                                           ; preds = %land.lhs.true68, %land.lhs.true30, %land.lhs.true30, %land.lhs.true30, %land.lhs.true30, %land.lhs.true30, %land.lhs.true30, %land.lhs.true30, %land.lhs.true30, %if.end20, %lor.lhs.false, %if.end16, %if.then10, %if.then, %if.end72, %if.then13
  %retval.0 = phi i32 [ %cond, %if.then13 ], [ %class, %if.end72 ], [ 0, %if.then ], [ %class, %if.then10 ], [ 12, %if.end16 ], [ 0, %lor.lhs.false ], [ 0, %if.end20 ], [ 0, %land.lhs.true30 ], [ 0, %land.lhs.true30 ], [ 0, %land.lhs.true30 ], [ 0, %land.lhs.true30 ], [ 0, %land.lhs.true30 ], [ 0, %land.lhs.true30 ], [ 0, %land.lhs.true30 ], [ 0, %land.lhs.true30 ], [ 8, %land.lhs.true68 ]
  ret i32 %retval.0
}

declare i32 @reg_class_subset_p(i32, i32) #0

declare i32 @reg_classes_intersect_p(i32, i32) #0

; Function Attrs: nounwind uwtable
define i32 @ix86_secondary_memory_needed(i32 %class1, i32 %class2, i32 %mode, i32 %strict) #1 {
entry:
  %call = tail call i32 @reg_classes_intersect_p(i32 %class1, i32 15) #5
  %call1 = tail call i32 @reg_class_subset_p(i32 %class1, i32 15) #5
  %cmp = icmp eq i32 %call, %call1
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %call2 = tail call i32 @reg_classes_intersect_p(i32 %class2, i32 15) #5
  %call3 = tail call i32 @reg_class_subset_p(i32 %class2, i32 15) #5
  %cmp4 = icmp eq i32 %call2, %call3
  br i1 %cmp4, label %lor.lhs.false5, label %if.then

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %call6 = tail call i32 @reg_classes_intersect_p(i32 16, i32 %class1) #5
  %call7 = tail call i32 @reg_class_subset_p(i32 %class1, i32 16) #5
  %cmp8 = icmp eq i32 %call6, %call7
  br i1 %cmp8, label %lor.lhs.false9, label %if.then

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %call10 = tail call i32 @reg_classes_intersect_p(i32 16, i32 %class2) #5
  %call11 = tail call i32 @reg_class_subset_p(i32 %class2, i32 16) #5
  %cmp12 = icmp eq i32 %call10, %call11
  br i1 %cmp12, label %lor.lhs.false13, label %if.then

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %call14 = tail call i32 @reg_classes_intersect_p(i32 17, i32 %class1) #5
  %call15 = tail call i32 @reg_class_subset_p(i32 %class1, i32 17) #5
  %cmp16 = icmp eq i32 %call14, %call15
  br i1 %cmp16, label %lor.lhs.false17, label %if.then

lor.lhs.false17:                                  ; preds = %lor.lhs.false13
  %call18 = tail call i32 @reg_classes_intersect_p(i32 17, i32 %class2) #5
  %call19 = tail call i32 @reg_class_subset_p(i32 %class2, i32 17) #5
  %cmp20 = icmp eq i32 %call18, %call19
  br i1 %cmp20, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false17, %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %entry
  %tobool = icmp eq i32 %strict, 0
  br i1 %tobool, label %return, label %if.then21

if.then21:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 12336, i8* getelementptr inbounds ([29 x i8]* @__FUNCTION__.ix86_secondary_memory_needed, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %lor.lhs.false17
  %call22 = tail call i32 @reg_class_subset_p(i32 %class1, i32 15) #5
  %call23 = tail call i32 @reg_class_subset_p(i32 %class2, i32 15) #5
  %cmp24 = icmp eq i32 %call22, %call23
  br i1 %cmp24, label %lor.lhs.false25, label %lor.end

lor.lhs.false25:                                  ; preds = %if.end
  %call26 = tail call i32 @reg_class_subset_p(i32 %class1, i32 16) #5
  %call27 = tail call i32 @reg_class_subset_p(i32 %class2, i32 16) #5
  %cmp28 = icmp ne i32 %call26, %call27
  %cmp29 = icmp ne i32 %mode, 4
  %or.cond = and i1 %cmp28, %cmp29
  br i1 %or.cond, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false25
  %call30 = tail call i32 @reg_class_subset_p(i32 %class1, i32 17) #5
  %call31 = tail call i32 @reg_class_subset_p(i32 %class2, i32 17) #5
  %not.cmp32 = icmp ne i32 %call30, %call31
  %.cmp29 = and i1 %cmp29, %not.cmp32
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end, %lor.lhs.false25
  %0 = phi i1 [ true, %if.end ], [ true, %lor.lhs.false25 ], [ %.cmp29, %lor.rhs ]
  %lor.ext = zext i1 %0 to i32
  br label %return

return:                                           ; preds = %if.then, %lor.end
  %retval.0 = phi i32 [ %lor.ext, %lor.end ], [ 1, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ix86_register_move_cost(i32 %mode, i32 %class1, i32 %class2) #1 {
entry:
  %call = tail call i32 @ix86_secondary_memory_needed(i32 %class1, i32 %class2, i32 %mode, i32 0)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end61, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @reg_classes_intersect_p(i32 %class1, i32 12) #5
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !5
  %cmp = icmp eq i32 %0, 5
  br i1 %cmp, label %cond.end17, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp5 = icmp eq i32 %0, 6
  %phitmp = select i1 %cmp5, i32 2, i32 1
  br label %cond.end17

cond.false:                                       ; preds = %if.then
  %cmp6 = icmp eq i32 %mode, 18
  %1 = sext i32 %mode to i64
  %idxprom10 = select i1 %cmp6, i64 17, i64 %1
  %arrayidx11 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom10
  %2 = load i8* %arrayidx11, align 1, !tbaa !5
  %conv = zext i8 %2 to i32
  %3 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %3, 23
  %4 = and i32 %and, 4
  %5 = add i32 %4, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %5
  %div = sdiv i32 %sub, %5
  br label %cond.end17

cond.end17:                                       ; preds = %cond.true, %lor.rhs, %cond.false
  %cond18 = phi i32 [ %div, %cond.false ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ]
  %call19 = tail call i32 @reg_classes_intersect_p(i32 %class2, i32 12) #5
  %tobool20 = icmp eq i32 %call19, 0
  br i1 %tobool20, label %cond.true21, label %cond.false33

cond.true21:                                      ; preds = %cond.end17
  %idxprom22 = sext i32 %mode to i64
  %arrayidx23 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom22
  %6 = load i32* %arrayidx23, align 4, !tbaa !5
  %cmp24 = icmp eq i32 %6, 5
  br i1 %cmp24, label %cond.end52, label %lor.rhs26

lor.rhs26:                                        ; preds = %cond.true21
  %cmp29 = icmp eq i32 %6, 6
  %phitmp103 = select i1 %cmp29, i32 2, i32 1
  br label %cond.end52

cond.false33:                                     ; preds = %cond.end17
  %cmp34 = icmp eq i32 %mode, 18
  %7 = sext i32 %mode to i64
  %idxprom40 = select i1 %cmp34, i64 17, i64 %7
  %arrayidx41 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom40
  %8 = load i8* %arrayidx41, align 1, !tbaa !5
  %conv42 = zext i8 %8 to i32
  %9 = load i32* @target_flags, align 4, !tbaa !1
  %and43 = lshr i32 %9, 23
  %10 = and i32 %and43, 4
  %11 = add i32 %10, 4
  %add46 = add i32 %conv42, -1
  %sub47 = add i32 %add46, %11
  %div51 = sdiv i32 %sub47, %11
  br label %cond.end52

cond.end52:                                       ; preds = %cond.true21, %lor.rhs26, %cond.false33
  %cond53 = phi i32 [ %div51, %cond.false33 ], [ 2, %cond.true21 ], [ %phitmp103, %lor.rhs26 ]
  %cmp54 = icmp sgt i32 %cond18, %cond53
  %. = select i1 %cmp54, i32 20, i32 0
  %call57 = tail call i32 @ix86_memory_move_cost(i32 %mode, i32 %class1, i32 0)
  %call58 = tail call i32 @ix86_memory_move_cost(i32 %mode, i32 %class2, i32 1)
  %add59 = add nsw i32 %call58, %call57
  %add60 = add nsw i32 %add59, %.
  br label %return

if.end61:                                         ; preds = %entry
  %call62 = tail call i32 @reg_class_subset_p(i32 %class1, i32 17) #5
  %call63 = tail call i32 @reg_class_subset_p(i32 %class2, i32 17) #5
  %cmp64 = icmp eq i32 %call62, %call63
  br i1 %cmp64, label %lor.lhs.false, label %if.then70

lor.lhs.false:                                    ; preds = %if.end61
  %call66 = tail call i32 @reg_class_subset_p(i32 %class1, i32 16) #5
  %call67 = tail call i32 @reg_class_subset_p(i32 %class2, i32 16) #5
  %cmp68 = icmp eq i32 %call66, %call67
  br i1 %cmp68, label %if.end71, label %if.then70

if.then70:                                        ; preds = %lor.lhs.false, %if.end61
  %12 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  %mmxsse_to_integer = getelementptr inbounds %struct.processor_costs* %12, i64 0, i32 23
  %13 = load i32* %mmxsse_to_integer, align 4, !tbaa !110
  br label %return

if.end71:                                         ; preds = %lor.lhs.false
  %call72 = tail call i32 @reg_classes_intersect_p(i32 %class1, i32 15) #5
  %tobool73 = icmp eq i32 %call72, 0
  br i1 %tobool73, label %if.end75, label %if.then74

if.then74:                                        ; preds = %if.end71
  %14 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  %fp_move = getelementptr inbounds %struct.processor_costs* %14, i64 0, i32 14
  %15 = load i32* %fp_move, align 4, !tbaa !112
  br label %return

if.end75:                                         ; preds = %if.end71
  %call76 = tail call i32 @reg_classes_intersect_p(i32 16, i32 %class1) #5
  %tobool77 = icmp eq i32 %call76, 0
  br i1 %tobool77, label %if.end79, label %if.then78

if.then78:                                        ; preds = %if.end75
  %16 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  %sse_move = getelementptr inbounds %struct.processor_costs* %16, i64 0, i32 20
  %17 = load i32* %sse_move, align 4, !tbaa !113
  br label %return

if.end79:                                         ; preds = %if.end75
  %call80 = tail call i32 @reg_classes_intersect_p(i32 17, i32 %class1) #5
  %tobool81 = icmp eq i32 %call80, 0
  br i1 %tobool81, label %return, label %if.then82

if.then82:                                        ; preds = %if.end79
  %18 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  %mmx_move = getelementptr inbounds %struct.processor_costs* %18, i64 0, i32 17
  %19 = load i32* %mmx_move, align 4, !tbaa !114
  br label %return

return:                                           ; preds = %if.end79, %if.then82, %if.then78, %if.then74, %if.then70, %cond.end52
  %retval.0 = phi i32 [ %add60, %cond.end52 ], [ %13, %if.then70 ], [ %15, %if.then74 ], [ %17, %if.then78 ], [ %19, %if.then82 ], [ 2, %if.end79 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ix86_memory_move_cost(i32 %mode, i32 %class, i32 %in) #1 {
entry:
  %call = tail call i32 @reg_class_subset_p(i32 %class, i32 15) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  switch i32 %mode, label %return [
    i32 15, label %sw.epilog
    i32 16, label %sw.bb1
    i32 17, label %sw.bb2
    i32 18, label %sw.bb2
  ]

sw.bb1:                                           ; preds = %if.then
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.then, %if.then
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then, %sw.bb2, %sw.bb1
  %index.0 = phi i64 [ 2, %sw.bb2 ], [ 1, %sw.bb1 ], [ 0, %if.then ]
  %tobool3 = icmp eq i32 %in, 0
  %0 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  br i1 %tobool3, label %cond.false, label %cond.true

cond.true:                                        ; preds = %sw.epilog
  %arrayidx = getelementptr inbounds %struct.processor_costs* %0, i64 0, i32 15, i64 %index.0
  br label %cond.end

cond.false:                                       ; preds = %sw.epilog
  %arrayidx5 = getelementptr inbounds %struct.processor_costs* %0, i64 0, i32 16, i64 %index.0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32* [ %arrayidx, %cond.true ], [ %arrayidx5, %cond.false ]
  %cond = load i32* %cond.in, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call6 = tail call i32 @reg_class_subset_p(i32 %class, i32 16) #5
  %tobool7 = icmp eq i32 %call6, 0
  br i1 %tobool7, label %if.end26, label %if.then8

if.then8:                                         ; preds = %if.end
  %idxprom10 = sext i32 %mode to i64
  %arrayidx11 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom10
  %1 = load i8* %arrayidx11, align 1, !tbaa !5
  %conv = zext i8 %1 to i32
  switch i32 %conv, label %return [
    i32 4, label %sw.epilog16
    i32 8, label %sw.bb13
    i32 16, label %sw.bb14
  ]

sw.bb13:                                          ; preds = %if.then8
  br label %sw.epilog16

sw.bb14:                                          ; preds = %if.then8
  br label %sw.epilog16

sw.epilog16:                                      ; preds = %if.then8, %sw.bb14, %sw.bb13
  %index9.0 = phi i64 [ 2, %sw.bb14 ], [ 1, %sw.bb13 ], [ 0, %if.then8 ]
  %tobool17 = icmp eq i32 %in, 0
  %2 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  br i1 %tobool17, label %cond.false21, label %cond.true18

cond.true18:                                      ; preds = %sw.epilog16
  %arrayidx20 = getelementptr inbounds %struct.processor_costs* %2, i64 0, i32 21, i64 %index9.0
  br label %cond.end24

cond.false21:                                     ; preds = %sw.epilog16
  %arrayidx23 = getelementptr inbounds %struct.processor_costs* %2, i64 0, i32 22, i64 %index9.0
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false21, %cond.true18
  %cond25.in = phi i32* [ %arrayidx20, %cond.true18 ], [ %arrayidx23, %cond.false21 ]
  %cond25 = load i32* %cond25.in, align 4
  br label %return

if.end26:                                         ; preds = %if.end
  %call27 = tail call i32 @reg_class_subset_p(i32 %class, i32 17) #5
  %tobool28 = icmp eq i32 %call27, 0
  %idxprom31 = sext i32 %mode to i64
  %arrayidx32 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom31
  %3 = load i8* %arrayidx32, align 1, !tbaa !5
  %conv33 = zext i8 %3 to i32
  br i1 %tobool28, label %if.end47, label %if.then29

if.then29:                                        ; preds = %if.end26
  switch i32 %conv33, label %return [
    i32 4, label %sw.epilog37
    i32 8, label %sw.bb35
  ]

sw.bb35:                                          ; preds = %if.then29
  br label %sw.epilog37

sw.epilog37:                                      ; preds = %if.then29, %sw.bb35
  %index30.0 = phi i64 [ 1, %sw.bb35 ], [ 0, %if.then29 ]
  %tobool38 = icmp eq i32 %in, 0
  %4 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  br i1 %tobool38, label %cond.false42, label %cond.true39

cond.true39:                                      ; preds = %sw.epilog37
  %arrayidx41 = getelementptr inbounds %struct.processor_costs* %4, i64 0, i32 18, i64 %index30.0
  br label %cond.end45

cond.false42:                                     ; preds = %sw.epilog37
  %arrayidx44 = getelementptr inbounds %struct.processor_costs* %4, i64 0, i32 19, i64 %index30.0
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false42, %cond.true39
  %cond46.in = phi i32* [ %arrayidx41, %cond.true39 ], [ %arrayidx44, %cond.false42 ]
  %cond46 = load i32* %cond46.in, align 4
  br label %return

if.end47:                                         ; preds = %if.end26
  switch i32 %conv33, label %sw.default80 [
    i32 1, label %sw.bb51
    i32 2, label %sw.bb70
  ]

sw.bb51:                                          ; preds = %if.end47
  %tobool52 = icmp eq i32 %in, 0
  %call54 = tail call i32 @reg_class_subset_p(i32 %class, i32 8) #5
  %tobool55 = icmp ne i32 %call54, 0
  %5 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  br i1 %tobool52, label %if.else, label %if.then53

if.then53:                                        ; preds = %sw.bb51
  %arrayidx57 = getelementptr inbounds %struct.processor_costs* %5, i64 0, i32 12, i64 0
  %movzbl_load = getelementptr inbounds %struct.processor_costs* %5, i64 0, i32 11
  %cond60.in = select i1 %tobool55, i32* %arrayidx57, i32* %movzbl_load
  %cond60 = load i32* %cond60.in, align 4
  br label %return

if.else:                                          ; preds = %sw.bb51
  %arrayidx64 = getelementptr inbounds %struct.processor_costs* %5, i64 0, i32 13, i64 0
  %6 = load i32* %arrayidx64, align 4, !tbaa !1
  %add = add nsw i32 %6, 4
  %cond69 = select i1 %tobool55, i32 %6, i32 %add
  br label %return

sw.bb70:                                          ; preds = %if.end47
  %tobool71 = icmp eq i32 %in, 0
  %7 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  %arrayidx74 = getelementptr inbounds %struct.processor_costs* %7, i64 0, i32 12, i64 1
  %arrayidx77 = getelementptr inbounds %struct.processor_costs* %7, i64 0, i32 13, i64 1
  %cond79.in = select i1 %tobool71, i32* %arrayidx77, i32* %arrayidx74
  %cond79 = load i32* %cond79.in, align 4
  br label %return

sw.default80:                                     ; preds = %if.end47
  %cmp = icmp eq i32 %mode, 18
  %tobool84 = icmp eq i32 %in, 0
  %8 = load %struct.processor_costs** @ix86_cost, align 8, !tbaa !6
  %arrayidx87 = getelementptr inbounds %struct.processor_costs* %8, i64 0, i32 12, i64 2
  %arrayidx90 = getelementptr inbounds %struct.processor_costs* %8, i64 0, i32 13, i64 2
  %cond92.in = select i1 %tobool84, i32* %arrayidx90, i32* %arrayidx87
  %cond92 = load i32* %cond92.in, align 4
  %idxprom93 = select i1 %cmp, i64 17, i64 %idxprom31
  %arrayidx94 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom93
  %9 = load i8* %arrayidx94, align 1, !tbaa !5
  %conv95 = zext i8 %9 to i32
  %mul = mul nsw i32 %conv95, %cond92
  %div = sdiv i32 %mul, 4
  br label %return

return:                                           ; preds = %if.then29, %if.then8, %if.then, %sw.default80, %sw.bb70, %if.else, %if.then53, %cond.end45, %cond.end24, %cond.end
  %retval.0 = phi i32 [ %cond, %cond.end ], [ %cond25, %cond.end24 ], [ %cond46, %cond.end45 ], [ %div, %sw.default80 ], [ %cond79, %sw.bb70 ], [ %cond60, %if.then53 ], [ %cond69, %if.else ], [ 100, %if.then ], [ 100, %if.then8 ], [ 100, %if.then29 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @ix86_hard_regno_mode_ok(i32 %regno, i32 %mode) #2 {
entry:
  %regno.off = add i32 %regno, -17
  %0 = icmp ult i32 %regno.off, 2
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4, !tbaa !5
  br i1 %0, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %cmp2 = icmp eq i32 %1, 4
  %conv = zext i1 %cmp2 to i32
  br label %return

if.end:                                           ; preds = %entry
  switch i32 %1, label %if.end18 [
    i32 4, label %return
    i32 3, label %return
    i32 0, label %return
  ]

if.end18:                                         ; preds = %if.end
  %2 = and i32 %regno, -8
  %3 = icmp eq i32 %2, 8
  br i1 %3, label %if.then23, label %if.end49

if.then23:                                        ; preds = %if.end18
  switch i32 %mode, label %lor.lhs.false32 [
    i32 18, label %lor.end
    i32 16, label %lor.end
    i32 15, label %lor.end
  ]

lor.lhs.false32:                                  ; preds = %if.then23
  %4 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %4, 33554432
  %tobool = icmp eq i32 %and, 0
  %cmp34 = icmp eq i32 %mode, 17
  %or.cond219 = and i1 %tobool, %cmp34
  br i1 %or.cond219, label %lor.end, label %switch.early.test

switch.early.test:                                ; preds = %lor.lhs.false32
  switch i32 %mode, label %lor.rhs [
    i32 24, label %lor.end
    i32 22, label %lor.end
    i32 21, label %lor.end
  ]

lor.rhs:                                          ; preds = %switch.early.test
  %cmp47 = icmp eq i32 %mode, 23
  %cmp47. = and i1 %tobool, %cmp47
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %switch.early.test, %switch.early.test, %switch.early.test, %lor.lhs.false32, %if.then23, %if.then23, %if.then23
  %5 = phi i1 [ true, %if.then23 ], [ true, %switch.early.test ], [ true, %if.then23 ], [ true, %if.then23 ], [ true, %lor.lhs.false32 ], [ true, %switch.early.test ], [ true, %switch.early.test ], [ %cmp47., %lor.rhs ]
  %lor.ext = zext i1 %5 to i32
  br label %return

if.end49:                                         ; preds = %if.end18
  switch i32 %regno, label %if.end102 [
    i32 52, label %if.then61
    i32 51, label %if.then61
    i32 50, label %if.then61
    i32 49, label %if.then61
    i32 48, label %if.then61
    i32 47, label %if.then61
    i32 46, label %if.then61
    i32 45, label %if.then61
    i32 28, label %if.then61
    i32 27, label %if.then61
    i32 26, label %if.then61
    i32 25, label %if.then61
    i32 24, label %if.then61
    i32 23, label %if.then61
    i32 22, label %if.then61
    i32 21, label %if.then61
  ]

if.then61:                                        ; preds = %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49, %if.end49
  switch i32 %mode, label %lor.rhs73 [
    i32 46, label %return
    i32 37, label %return
    i32 15, label %return
    i32 6, label %return
  ]

lor.rhs73:                                        ; preds = %if.then61
  %6 = load i32* @target_flags, align 4, !tbaa !1
  %and74 = and i32 %6, 262144
  %cmp75 = icmp eq i32 %and74, 0
  br i1 %cmp75, label %return, label %land.rhs77

land.rhs77:                                       ; preds = %lor.rhs73
  %switch.tableidx337 = add i32 %mode, -4
  %7 = icmp ult i32 %switch.tableidx337, 36
  br i1 %7, label %switch.lookup336, label %return

switch.lookup336:                                 ; preds = %land.rhs77
  %switch.cast338 = zext i32 %switch.tableidx337 to i36
  %switch.downshift340 = lshr i36 -29527896061, %switch.cast338
  %switch.masked341 = trunc i36 %switch.downshift340 to i32
  %phitmp = and i32 %switch.masked341, 1
  br label %return

if.end102:                                        ; preds = %if.end49
  %regno.off329 = add i32 %regno, -29
  %8 = icmp ult i32 %regno.off329, 8
  br i1 %8, label %if.then108, label %if.end133

if.then108:                                       ; preds = %if.end102
  %switch.tableidx = add i32 %mode, -4
  %9 = icmp ult i32 %switch.tableidx, 41
  br i1 %9, label %switch.lookup, label %return

switch.lookup:                                    ; preds = %if.then108
  %switch.cast = zext i32 %switch.tableidx to i41
  %switch.downshift = lshr i41 -1060320049149, %switch.cast
  %switch.masked = trunc i41 %switch.downshift to i32
  %phitmp345 = and i32 %switch.masked, 1
  br label %return

if.end133:                                        ; preds = %if.end102
  switch i32 %mode, label %lor.lhs.false157 [
    i32 28, label %if.end197
    i32 27, label %if.end197
    i32 26, label %if.end197
    i32 25, label %if.end197
    i32 5, label %if.end197
    i32 4, label %if.end197
    i32 3, label %if.end197
    i32 2, label %if.end197
  ]

lor.lhs.false157:                                 ; preds = %if.end133
  %10 = load i32* @target_flags, align 4, !tbaa !1
  %and158 = and i32 %10, 33554432
  %tobool159 = icmp eq i32 %and158, 0
  br i1 %tobool159, label %land.lhs.true166, label %land.lhs.true160

land.lhs.true160:                                 ; preds = %lor.lhs.false157
  switch i32 %mode, label %lor.lhs.false190 [
    i32 29, label %return
    i32 18, label %return
    i32 16, label %return
    i32 15, label %return
    i32 6, label %return
    i32 24, label %return
    i32 22, label %return
    i32 21, label %return
  ]

land.lhs.true166:                                 ; preds = %lor.lhs.false157
  switch i32 %mode, label %lor.lhs.false175 [
    i32 18, label %return
    i32 16, label %return
    i32 15, label %return
  ]

lor.lhs.false175:                                 ; preds = %land.lhs.true166
  %cmp179 = icmp eq i32 %mode, 17
  %or.cond254 = and i1 %tobool159, %cmp179
  br i1 %or.cond254, label %if.end197, label %switch.early.test335

switch.early.test335:                             ; preds = %lor.lhs.false175
  switch i32 %mode, label %lor.lhs.false190 [
    i32 24, label %return
    i32 22, label %return
    i32 21, label %return
  ]

lor.lhs.false190:                                 ; preds = %land.lhs.true160, %switch.early.test335
  %cmp194 = icmp eq i32 %mode, 23
  %or.cond262 = and i1 %tobool159, %cmp194
  br i1 %or.cond262, label %if.end197, label %return

if.end197:                                        ; preds = %lor.lhs.false175, %if.end133, %if.end133, %if.end133, %if.end133, %if.end133, %if.end133, %if.end133, %if.end133, %lor.lhs.false190
  %cmp198 = icmp slt i32 %regno, 4
  %cmp201 = icmp ne i32 %mode, 2
  %or.cond264 = or i1 %cmp198, %cmp201
  br i1 %or.cond264, label %return, label %lor.lhs.false203

lor.lhs.false203:                                 ; preds = %if.end197
  %11 = load i32* @target_flags, align 4, !tbaa !1
  %and204 = and i32 %11, 33554432
  %tobool205 = icmp eq i32 %and204, 0
  br i1 %tobool205, label %if.end207, label %return

if.end207:                                        ; preds = %lor.lhs.false203
  %12 = load i32* @reload_in_progress, align 4, !tbaa !1
  %13 = load i32* @reload_completed, align 4
  %14 = or i32 %13, %12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %lor.rhs211, label %lor.end214

lor.rhs211:                                       ; preds = %if.end207
  %16 = load i32* @ix86_cpu, align 4, !tbaa !5
  %lnot = icmp ne i32 %16, 3
  br label %lor.end214

lor.end214:                                       ; preds = %if.end207, %lor.rhs211
  %17 = phi i1 [ true, %if.end207 ], [ %lnot, %lor.rhs211 ]
  %lor.ext215 = zext i1 %17 to i32
  br label %return

return:                                           ; preds = %land.lhs.true160, %land.lhs.true160, %land.lhs.true160, %land.lhs.true160, %land.lhs.true160, %land.lhs.true160, %land.lhs.true160, %land.lhs.true160, %switch.lookup, %if.then108, %lor.rhs73, %if.then61, %if.then61, %if.then61, %if.then61, %switch.lookup336, %land.rhs77, %land.lhs.true166, %land.lhs.true166, %land.lhs.true166, %switch.early.test335, %switch.early.test335, %switch.early.test335, %if.end, %if.end, %if.end, %if.end197, %lor.lhs.false203, %lor.lhs.false190, %lor.end214, %lor.end, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %lor.ext, %lor.end ], [ %lor.ext215, %lor.end214 ], [ 0, %if.end ], [ 0, %lor.lhs.false190 ], [ 1, %lor.lhs.false203 ], [ 1, %if.end197 ], [ 0, %if.end ], [ 0, %if.end ], [ 1, %switch.early.test335 ], [ 1, %switch.early.test335 ], [ 1, %switch.early.test335 ], [ 1, %land.lhs.true166 ], [ 1, %land.lhs.true166 ], [ 1, %land.lhs.true166 ], [ 1, %land.lhs.true160 ], [ 1, %land.lhs.true160 ], [ 1, %land.lhs.true160 ], [ 1, %land.lhs.true160 ], [ 1, %land.lhs.true160 ], [ 1, %if.then61 ], [ 0, %lor.rhs73 ], [ 1, %if.then61 ], [ 1, %if.then61 ], [ 1, %if.then61 ], [ %phitmp, %switch.lookup336 ], [ 0, %land.rhs77 ], [ %phitmp345, %switch.lookup ], [ 0, %if.then108 ], [ 1, %land.lhs.true160 ], [ 1, %land.lhs.true160 ], [ 1, %land.lhs.true160 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @x86_order_regs_for_local_alloc() #1 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv159 = phi i64 [ 0, %entry ], [ %indvars.iv.next160, %for.inc ]
  %pos.0150 = phi i32 [ 0, %entry ], [ %pos.1, %for.inc ]
  %0 = trunc i64 %indvars.iv159 to i32
  %cmp1 = icmp slt i32 %0, 8
  %1 = add i64 %indvars.iv159, 4294967259
  %2 = trunc i64 %1 to i32
  %3 = icmp ult i32 %2, 8
  %or.cond = or i1 %cmp1, %3
  br i1 %or.cond, label %land.lhs.true4, label %for.inc

land.lhs.true4:                                   ; preds = %for.body
  %arrayidx = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv159
  %4 = load i8* %arrayidx, align 1, !tbaa !5
  %tobool = icmp eq i8 %4, 0
  br i1 %tobool, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true4
  %inc = add nsw i32 %pos.0150, 1
  %idxprom5 = sext i32 %pos.0150 to i64
  %arrayidx6 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %idxprom5
  store i32 %0, i32* %arrayidx6, align 4, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true4, %if.then
  %pos.1 = phi i32 [ %inc, %if.then ], [ %pos.0150, %land.lhs.true4 ], [ %pos.0150, %for.body ]
  %indvars.iv.next160 = add nuw nsw i64 %indvars.iv159, 1
  %exitcond162 = icmp eq i64 %indvars.iv.next160, 53
  br i1 %exitcond162, label %for.body11, label %for.body

for.body11:                                       ; preds = %for.inc, %for.inc29
  %indvars.iv = phi i64 [ %indvars.iv.next157, %for.inc29 ], [ 0, %for.inc ]
  %pos.2148 = phi i32 [ %pos.3, %for.inc29 ], [ %pos.1, %for.inc ]
  %5 = trunc i64 %indvars.iv to i32
  %cmp12 = icmp slt i32 %5, 8
  %6 = add i64 %indvars.iv, 4294967259
  %7 = trunc i64 %6 to i32
  %8 = icmp ult i32 %7, 8
  %or.cond135 = or i1 %cmp12, %8
  br i1 %or.cond135, label %land.lhs.true20, label %for.inc29

land.lhs.true20:                                  ; preds = %for.body11
  %arrayidx22 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv
  %9 = load i8* %arrayidx22, align 1, !tbaa !5
  %tobool23 = icmp eq i8 %9, 0
  br i1 %tobool23, label %if.then24, label %for.inc29

if.then24:                                        ; preds = %land.lhs.true20
  %inc25 = add nsw i32 %pos.2148, 1
  %idxprom26 = sext i32 %pos.2148 to i64
  %arrayidx27 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %idxprom26
  store i32 %5, i32* %arrayidx27, align 4, !tbaa !1
  br label %for.inc29

for.inc29:                                        ; preds = %for.body11, %land.lhs.true20, %if.then24
  %pos.3 = phi i32 [ %pos.2148, %land.lhs.true20 ], [ %inc25, %if.then24 ], [ %pos.2148, %for.body11 ]
  %indvars.iv.next157 = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next157, 53
  br i1 %exitcond, label %for.end31, label %for.body11

for.end31:                                        ; preds = %for.inc29
  %10 = load i32* @ix86_fpmath, align 4, !tbaa !5
  %and = and i32 %10, 2
  %cmp32 = icmp eq i32 %and, 0
  br i1 %cmp32, label %for.cond35.preheader, label %for.cond46.preheader

for.cond35.preheader:                             ; preds = %for.end31
  %11 = sext i32 %pos.3 to i64
  %indvars.iv.next156 = add nsw i64 %11, 1
  %arrayidx41 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %11
  store i32 8, i32* %arrayidx41, align 4, !tbaa !1
  %indvars.iv.next156.1 = add nsw i64 %11, 2
  %arrayidx41.1 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next156
  store i32 9, i32* %arrayidx41.1, align 4, !tbaa !1
  %indvars.iv.next156.2 = add nsw i64 %11, 3
  %arrayidx41.2 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next156.1
  store i32 10, i32* %arrayidx41.2, align 4, !tbaa !1
  %indvars.iv.next156.3 = add nsw i64 %11, 4
  %arrayidx41.3 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next156.2
  store i32 11, i32* %arrayidx41.3, align 4, !tbaa !1
  %indvars.iv.next156.4 = add nsw i64 %11, 5
  %arrayidx41.4 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next156.3
  store i32 12, i32* %arrayidx41.4, align 4, !tbaa !1
  %indvars.iv.next156.5 = add nsw i64 %11, 6
  %arrayidx41.5 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next156.4
  store i32 13, i32* %arrayidx41.5, align 4, !tbaa !1
  %indvars.iv.next156.6 = add nsw i64 %11, 7
  %arrayidx41.6 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next156.5
  store i32 14, i32* %arrayidx41.6, align 4, !tbaa !1
  %arrayidx41.7 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next156.6
  store i32 15, i32* %arrayidx41.7, align 4, !tbaa !1
  %12 = add i32 %pos.3, 8
  br label %for.cond46.preheader

for.cond46.preheader:                             ; preds = %for.cond35.preheader, %for.end31
  %pos.6.ph = phi i32 [ %pos.3, %for.end31 ], [ %12, %for.cond35.preheader ]
  %13 = sext i32 %pos.6.ph to i64
  %indvars.iv.next155 = add nsw i64 %13, 1
  %arrayidx52 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %13
  store i32 21, i32* %arrayidx52, align 4, !tbaa !1
  %indvars.iv.next155.1 = add nsw i64 %13, 2
  %arrayidx52.1 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next155
  store i32 22, i32* %arrayidx52.1, align 4, !tbaa !1
  %indvars.iv.next155.2 = add nsw i64 %13, 3
  %arrayidx52.2 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next155.1
  store i32 23, i32* %arrayidx52.2, align 4, !tbaa !1
  %indvars.iv.next155.3 = add nsw i64 %13, 4
  %arrayidx52.3 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next155.2
  store i32 24, i32* %arrayidx52.3, align 4, !tbaa !1
  %indvars.iv.next155.4 = add nsw i64 %13, 5
  %arrayidx52.4 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next155.3
  store i32 25, i32* %arrayidx52.4, align 4, !tbaa !1
  %indvars.iv.next155.5 = add nsw i64 %13, 6
  %arrayidx52.5 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next155.4
  store i32 26, i32* %arrayidx52.5, align 4, !tbaa !1
  %indvars.iv.next155.6 = add nsw i64 %13, 7
  %arrayidx52.6 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next155.5
  store i32 27, i32* %arrayidx52.6, align 4, !tbaa !1
  %arrayidx52.7 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next155.6
  store i32 28, i32* %arrayidx52.7, align 4, !tbaa !1
  %14 = add i32 %pos.6.ph, 8
  %15 = sext i32 %14 to i64
  %indvars.iv.next154 = add nsw i64 %15, 1
  %arrayidx62 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %15
  store i32 45, i32* %arrayidx62, align 4, !tbaa !1
  %indvars.iv.next154.1 = add nsw i64 %15, 2
  %arrayidx62.1 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next154
  store i32 46, i32* %arrayidx62.1, align 4, !tbaa !1
  %indvars.iv.next154.2 = add nsw i64 %15, 3
  %arrayidx62.2 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next154.1
  store i32 47, i32* %arrayidx62.2, align 4, !tbaa !1
  %indvars.iv.next154.3 = add nsw i64 %15, 4
  %arrayidx62.3 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next154.2
  store i32 48, i32* %arrayidx62.3, align 4, !tbaa !1
  %indvars.iv.next154.4 = add nsw i64 %15, 5
  %arrayidx62.4 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next154.3
  store i32 49, i32* %arrayidx62.4, align 4, !tbaa !1
  %indvars.iv.next154.5 = add nsw i64 %15, 6
  %arrayidx62.5 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next154.4
  store i32 50, i32* %arrayidx62.5, align 4, !tbaa !1
  %indvars.iv.next154.6 = add nsw i64 %15, 7
  %arrayidx62.6 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next154.5
  store i32 51, i32* %arrayidx62.6, align 4, !tbaa !1
  %arrayidx62.7 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next154.6
  store i32 52, i32* %arrayidx62.7, align 4, !tbaa !1
  %16 = add i32 %pos.6.ph, 16
  br i1 %cmp32, label %for.cond81.preheader, label %for.cond70.preheader

for.cond70.preheader:                             ; preds = %for.cond46.preheader
  %17 = sext i32 %16 to i64
  %indvars.iv.next153 = add nsw i64 %17, 1
  %arrayidx76 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %17
  store i32 8, i32* %arrayidx76, align 4, !tbaa !1
  %indvars.iv.next153.1 = add nsw i64 %17, 2
  %arrayidx76.1 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next153
  store i32 9, i32* %arrayidx76.1, align 4, !tbaa !1
  %indvars.iv.next153.2 = add nsw i64 %17, 3
  %arrayidx76.2 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next153.1
  store i32 10, i32* %arrayidx76.2, align 4, !tbaa !1
  %indvars.iv.next153.3 = add nsw i64 %17, 4
  %arrayidx76.3 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next153.2
  store i32 11, i32* %arrayidx76.3, align 4, !tbaa !1
  %indvars.iv.next153.4 = add nsw i64 %17, 5
  %arrayidx76.4 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next153.3
  store i32 12, i32* %arrayidx76.4, align 4, !tbaa !1
  %indvars.iv.next153.5 = add nsw i64 %17, 6
  %arrayidx76.5 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next153.4
  store i32 13, i32* %arrayidx76.5, align 4, !tbaa !1
  %indvars.iv.next153.6 = add nsw i64 %17, 7
  %arrayidx76.6 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next153.5
  store i32 14, i32* %arrayidx76.6, align 4, !tbaa !1
  %arrayidx76.7 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next153.6
  store i32 15, i32* %arrayidx76.7, align 4, !tbaa !1
  %18 = add i32 %pos.6.ph, 24
  br label %for.cond81.preheader

for.cond81.preheader:                             ; preds = %for.cond70.preheader, %for.cond46.preheader
  %pos.10.ph = phi i32 [ %16, %for.cond46.preheader ], [ %18, %for.cond70.preheader ]
  %19 = sext i32 %pos.10.ph to i64
  %indvars.iv.next = add nsw i64 %19, 1
  %arrayidx87 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %19
  store i32 29, i32* %arrayidx87, align 4, !tbaa !1
  %indvars.iv.next.1 = add nsw i64 %19, 2
  %arrayidx87.1 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next
  store i32 30, i32* %arrayidx87.1, align 4, !tbaa !1
  %indvars.iv.next.2 = add nsw i64 %19, 3
  %arrayidx87.2 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next.1
  store i32 31, i32* %arrayidx87.2, align 4, !tbaa !1
  %indvars.iv.next.3 = add nsw i64 %19, 4
  %arrayidx87.3 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next.2
  store i32 32, i32* %arrayidx87.3, align 4, !tbaa !1
  %indvars.iv.next.4 = add nsw i64 %19, 5
  %arrayidx87.4 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next.3
  store i32 33, i32* %arrayidx87.4, align 4, !tbaa !1
  %indvars.iv.next.5 = add nsw i64 %19, 6
  %arrayidx87.5 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next.4
  store i32 34, i32* %arrayidx87.5, align 4, !tbaa !1
  %indvars.iv.next.6 = add nsw i64 %19, 7
  %arrayidx87.6 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next.5
  store i32 35, i32* %arrayidx87.6, align 4, !tbaa !1
  %arrayidx87.7 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv.next.6
  store i32 36, i32* %arrayidx87.7, align 4, !tbaa !1
  %20 = add i32 %pos.10.ph, 8
  %cmp91136 = icmp slt i32 %20, 53
  br i1 %cmp91136, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %for.cond81.preheader
  %21 = sext i32 %20 to i64
  %scevgep = getelementptr [53 x i32]* @reg_alloc_order, i64 0, i64 %21
  %scevgep152 = bitcast i32* %scevgep to i8*
  %22 = sub i32 44, %pos.10.ph
  %23 = zext i32 %22 to i64
  %24 = shl nuw nsw i64 %23, 2
  %25 = add i64 %24, 4
  call void @llvm.memset.p0i8.i64(i8* %scevgep152, i8 0, i64 %25, i32 4, i1 false)
  br label %while.end

while.end:                                        ; preds = %while.body.lr.ph, %for.cond81.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define void @x86_output_mi_thunk(%struct._IO_FILE* %file, i32 %delta, %union.tree_node* %function) #1 {
entry:
  %xops = alloca [3 x %struct.rtx_def*], align 16
  %0 = load i32* @ix86_regparm, align 4, !tbaa !1
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %for.cond.preheader, label %for.end

for.cond.preheader:                               ; preds = %entry
  %type = getelementptr inbounds %union.tree_node* %function, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !54
  %values = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 1
  %2 = load i8** %values, align 8
  %tobool165 = icmp eq i8* %2, null
  br i1 %tobool165, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %3 = bitcast i8* %2 to %union.tree_node*
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %parm.0166 = phi %union.tree_node* [ %3, %for.body.lr.ph ], [ %7, %for.inc ]
  %value = getelementptr inbounds %union.tree_node* %parm.0166, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !25
  %cmp2 = icmp eq %union.tree_node* %6, %4
  br i1 %cmp2, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %parm.0166, i64 0, i32 0, i32 0, i32 0
  %7 = load %union.tree_node** %chain, align 8, !tbaa !27
  %tobool = icmp eq %union.tree_node* %7, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %for.body, %entry, %for.cond.preheader
  %tobool.lcssa = phi i1 [ false, %for.cond.preheader ], [ false, %entry ], [ false, %for.inc ], [ true, %for.body ]
  %conv = sext i32 %delta to i64
  %call = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #5
  %arrayidx = getelementptr inbounds [3 x %struct.rtx_def*]* %xops, i64 0, i64 0
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx, align 16, !tbaa !6
  %8 = load i32* @target_flags, align 4, !tbaa !1
  %and = and i32 %8, 33554432
  %tobool6 = icmp eq i32 %and, 0
  br i1 %tobool6, label %if.else51, label %if.then7

if.then7:                                         ; preds = %for.end
  %type9 = getelementptr inbounds %union.tree_node* %function, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type9, align 8, !tbaa !54
  %type11 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type11, align 8, !tbaa !54
  %call12 = call i32 @aggregate_value_p(%union.tree_node* %10) #5
  %cmp13 = icmp ne i32 %call12, 0
  %idxprom = zext i1 %cmp13 to i64
  %arrayidx15 = getelementptr inbounds [6 x i32]* @x86_64_int_parameter_registers, i64 0, i64 %idxprom
  %11 = load i32* %arrayidx15, align 4, !tbaa !1
  %call16 = call %struct.rtx_def* @gen_rtx_REG(i32 5, i32 %11) #5
  %arrayidx17 = getelementptr inbounds [3 x %struct.rtx_def*]* %xops, i64 0, i64 1
  store %struct.rtx_def* %call16, %struct.rtx_def** %arrayidx17, align 8, !tbaa !6
  call void @output_asm_insn(i8* getelementptr inbounds ([23 x i8]* @.str199, i64 0, i64 0), %struct.rtx_def** %arrayidx) #5
  %12 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool18 = icmp eq i32 %12, 0
  br i1 %tobool18, label %if.else30, label %if.then19

if.then19:                                        ; preds = %if.then7
  %13 = call i64 @fwrite(i8* getelementptr inbounds ([7 x i8]* @.str200, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %file)
  %rtl = getelementptr inbounds %union.tree_node* %function, i64 0, i32 0, i32 17
  %14 = load %struct.rtx_def** %rtl, align 8, !tbaa !115
  %tobool21 = icmp eq %struct.rtx_def* %14, null
  br i1 %tobool21, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then19
  call void @make_decl_rtl(%union.tree_node* %function, i8* null) #5
  %15 = load %struct.rtx_def** %rtl, align 8, !tbaa !115
  br label %cond.end

cond.end:                                         ; preds = %if.then19, %cond.false
  %cond = phi %struct.rtx_def* [ %15, %cond.false ], [ %14, %if.then19 ]
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx28 to i8**
  %17 = load i8** %rtstr, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %file, i8* %17) #5
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8]* @.str201, i64 0, i64 0)) #5
  br label %if.end134

if.else30:                                        ; preds = %if.then7
  %18 = call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str202, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %file)
  %rtl33 = getelementptr inbounds %union.tree_node* %function, i64 0, i32 0, i32 17
  %19 = load %struct.rtx_def** %rtl33, align 8, !tbaa !115
  %tobool34 = icmp eq %struct.rtx_def* %19, null
  br i1 %tobool34, label %cond.false38, label %cond.end41

cond.false38:                                     ; preds = %if.else30
  call void @make_decl_rtl(%union.tree_node* %function, i8* null) #5
  %20 = load %struct.rtx_def** %rtl33, align 8, !tbaa !115
  br label %cond.end41

cond.end41:                                       ; preds = %if.else30, %cond.false38
  %cond42 = phi %struct.rtx_def* [ %20, %cond.false38 ], [ %19, %if.else30 ]
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %cond42, i64 0, i32 1, i64 0
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx45, align 8, !tbaa !6
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 0
  %rtstr48 = bitcast %union.rtunion_def* %arrayidx47 to i8**
  %22 = load i8** %rtstr48, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %file, i8* %22) #5
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %file) #5
  br label %if.end134

if.else51:                                        ; preds = %for.end
  br i1 %tobool.lcssa, label %if.then53, label %if.else56

if.then53:                                        ; preds = %if.else51
  %call54 = call %struct.rtx_def* @gen_rtx_REG(i32 4, i32 0) #5
  %arrayidx55 = getelementptr inbounds [3 x %struct.rtx_def*]* %xops, i64 0, i64 1
  store %struct.rtx_def* %call54, %struct.rtx_def** %arrayidx55, align 8, !tbaa !6
  br label %if.end72

if.else56:                                        ; preds = %if.else51
  %type58 = getelementptr inbounds %union.tree_node* %function, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type58, align 8, !tbaa !54
  %type60 = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 0, i32 1
  %24 = load %union.tree_node** %type60, align 8, !tbaa !54
  %call61 = call i32 @aggregate_value_p(%union.tree_node* %24) #5
  %tobool62 = icmp eq i32 %call61, 0
  %25 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  br i1 %tobool62, label %if.else67, label %if.then63

if.then63:                                        ; preds = %if.else56
  %call64 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %25, i64 8) #5
  %call65 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call64) #5
  %arrayidx66 = getelementptr inbounds [3 x %struct.rtx_def*]* %xops, i64 0, i64 1
  store %struct.rtx_def* %call65, %struct.rtx_def** %arrayidx66, align 8, !tbaa !6
  br label %if.end72

if.else67:                                        ; preds = %if.else56
  %call68 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %25, i64 4) #5
  %call69 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %call68) #5
  %arrayidx70 = getelementptr inbounds [3 x %struct.rtx_def*]* %xops, i64 0, i64 1
  store %struct.rtx_def* %call69, %struct.rtx_def** %arrayidx70, align 8, !tbaa !6
  br label %if.end72

if.end72:                                         ; preds = %if.then63, %if.else67, %if.then53
  call void @output_asm_insn(i8* getelementptr inbounds ([23 x i8]* @.str204, i64 0, i64 0), %struct.rtx_def** %arrayidx) #5
  %26 = load i32* @flag_pic, align 4, !tbaa !1
  %tobool74 = icmp eq i32 %26, 0
  br i1 %tobool74, label %if.else113, label %if.then75

if.then75:                                        ; preds = %if.end72
  %27 = load %struct.rtx_def** @pic_offset_table_rtx, align 8, !tbaa !6
  store %struct.rtx_def* %27, %struct.rtx_def** %arrayidx, align 16, !tbaa !6
  %call77 = call %struct.rtx_def* @gen_label_rtx() #5
  %arrayidx78 = getelementptr inbounds [3 x %struct.rtx_def*]* %xops, i64 0, i64 1
  store %struct.rtx_def* %call77, %struct.rtx_def** %arrayidx78, align 8, !tbaa !6
  %28 = load i32* @target_flags, align 4, !tbaa !1
  %and79 = lshr i32 %28, 25
  %29 = and i32 %and79, 1
  %30 = or i32 %29, 4
  %call82 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %30, i8* getelementptr inbounds ([22 x i8]* @.str80, i64 0, i64 0)) #5
  %arrayidx83 = getelementptr inbounds [3 x %struct.rtx_def*]* %xops, i64 0, i64 2
  store %struct.rtx_def* %call82, %struct.rtx_def** %arrayidx83, align 16, !tbaa !6
  %31 = load i32* @ix86_regparm, align 4, !tbaa !1
  %cmp84 = icmp sgt i32 %31, 2
  br i1 %cmp84, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.then75
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 12615, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.x86_output_mi_thunk, i64 0, i64 0)) #8
  unreachable

if.end87:                                         ; preds = %if.then75
  call void @output_asm_insn(i8* getelementptr inbounds ([11 x i8]* @.str205, i64 0, i64 0), %struct.rtx_def** %arrayidx) #5
  call void @output_asm_insn(i8* getelementptr inbounds ([9 x i8]* @.str206, i64 0, i64 0), %struct.rtx_def** %arrayidx) #5
  %32 = load %struct.rtx_def** %arrayidx78, align 8, !tbaa !6
  %arrayidx92 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 5
  %rtint = bitcast %union.rtunion_def* %arrayidx92 to i32*
  %33 = load i32* %rtint, align 4, !tbaa !1
  %call93 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([8 x i8]* @.str207, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str208, i64 0, i64 0), i32 %33) #5
  call void @output_asm_insn(i8* getelementptr inbounds ([10 x i8]* @.str209, i64 0, i64 0), %struct.rtx_def** %arrayidx) #5
  call void @output_asm_insn(i8* getelementptr inbounds ([52 x i8]* @.str210, i64 0, i64 0), %struct.rtx_def** %arrayidx) #5
  %rtl97 = getelementptr inbounds %union.tree_node* %function, i64 0, i32 0, i32 17
  %34 = load %struct.rtx_def** %rtl97, align 8, !tbaa !115
  %tobool98 = icmp eq %struct.rtx_def* %34, null
  br i1 %tobool98, label %cond.false102, label %cond.end105

cond.false102:                                    ; preds = %if.end87
  call void @make_decl_rtl(%union.tree_node* %function, i8* null) #5
  %35 = load %struct.rtx_def** %rtl97, align 8, !tbaa !115
  br label %cond.end105

cond.end105:                                      ; preds = %if.end87, %cond.false102
  %cond106 = phi %struct.rtx_def* [ %35, %cond.false102 ], [ %34, %if.end87 ]
  %arrayidx108 = getelementptr inbounds %struct.rtx_def* %cond106, i64 0, i32 1, i64 0
  %rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx109, align 8, !tbaa !6
  %call110 = call %struct.rtx_def* @gen_rtx_MEM(i32 4, %struct.rtx_def* %36) #5
  store %struct.rtx_def* %call110, %struct.rtx_def** %arrayidx, align 16, !tbaa !6
  call void @output_asm_insn(i8* getelementptr inbounds ([51 x i8]* @.str211, i64 0, i64 0), %struct.rtx_def** %arrayidx) #5
  call void (%struct._IO_FILE*, i8*, ...)* @asm_fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([22 x i8]* @.str212, i64 0, i64 0)) #5
  call void (%struct._IO_FILE*, i8*, ...)* @asm_fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([21 x i8]* @.str213, i64 0, i64 0)) #5
  br label %if.end134

if.else113:                                       ; preds = %if.end72
  %37 = call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str202, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %file)
  %rtl116 = getelementptr inbounds %union.tree_node* %function, i64 0, i32 0, i32 17
  %38 = load %struct.rtx_def** %rtl116, align 8, !tbaa !115
  %tobool117 = icmp eq %struct.rtx_def* %38, null
  br i1 %tobool117, label %cond.false121, label %cond.end124

cond.false121:                                    ; preds = %if.else113
  call void @make_decl_rtl(%union.tree_node* %function, i8* null) #5
  %39 = load %struct.rtx_def** %rtl116, align 8, !tbaa !115
  br label %cond.end124

cond.end124:                                      ; preds = %if.else113, %cond.false121
  %cond125 = phi %struct.rtx_def* [ %39, %cond.false121 ], [ %38, %if.else113 ]
  %arrayidx127 = getelementptr inbounds %struct.rtx_def* %cond125, i64 0, i32 1, i64 0
  %rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx128, align 8, !tbaa !6
  %arrayidx130 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 0
  %rtstr131 = bitcast %union.rtunion_def* %arrayidx130 to i8**
  %41 = load i8** %rtstr131, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %file, i8* %41) #5
  %fputc164 = call i32 @fputc(i32 10, %struct._IO_FILE* %file) #5
  br label %if.end134

if.end134:                                        ; preds = %cond.end105, %cond.end124, %cond.end, %cond.end41
  ret void
}

declare void @make_decl_rtl(%union.tree_node*, i8*) #0

; Function Attrs: nounwind uwtable
define i32 @x86_field_alignment(%union.tree_node* nocapture readonly %field, i32 %computed) #1 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %field, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !54
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %2 = and i32 %1, 33554436
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %if.end, label %return

if.end:                                           ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %call = tail call %union.tree_node* @get_inner_array_type(%union.tree_node* %0) #5
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %union.tree_node* [ %call, %cond.true ], [ %0, %if.end ]
  %type5 = bitcast %union.tree_node* %cond to %struct.tree_type*
  %mode6 = getelementptr inbounds %struct.tree_type* %type5, i64 0, i32 6
  %bf.load7 = load i32* %mode6, align 4
  %bf.lshr = lshr i32 %bf.load7, 9
  %bf.clear8 = and i32 %bf.lshr, 127
  switch i32 %bf.clear8, label %lor.lhs.false12 [
    i32 22, label %if.then18
    i32 16, label %if.then18
  ]

lor.lhs.false12:                                  ; preds = %cond.end
  %idxprom32 = zext i32 %bf.clear8 to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom32
  %4 = load i32* %arrayidx, align 4, !tbaa !5
  switch i32 %4, label %return [
    i32 1, label %if.then18
    i32 5, label %if.then18
  ]

if.then18:                                        ; preds = %lor.lhs.false12, %lor.lhs.false12, %cond.end, %cond.end
  %cmp19 = icmp sgt i32 %computed, 32
  %cond23 = select i1 %cmp19, i32 32, i32 %computed
  br label %return

return:                                           ; preds = %lor.lhs.false12, %entry, %if.then18
  %retval.0 = phi i32 [ %cond23, %if.then18 ], [ %computed, %entry ], [ %computed, %lor.lhs.false12 ]
  ret i32 %retval.0
}

declare %union.tree_node* @get_inner_array_type(%union.tree_node*) #0

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @safe_vector_operand(%struct.rtx_def* readnone %x, i32 %mode) #1 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp = icmp eq %struct.rtx_def* %0, %x
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #5
  switch i32 %mode, label %cond.false20 [
    i32 5, label %cond.end
    i32 4, label %cond.false
    i32 15, label %cond.false
    i32 33, label %cond.false
    i32 36, label %cond.false
    i32 39, label %cond.false
    i32 44, label %cond.false
    i32 46, label %cond.end22
  ]

cond.false:                                       ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %call15 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 5, %struct.rtx_def* %call, i32 0) #5
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.false
  %cond = phi %struct.rtx_def* [ %call15, %cond.false ], [ %call, %if.end ]
  %call16 = tail call %struct.rtx_def* @gen_mmx_clrdi(%struct.rtx_def* %cond) #5
  %call17 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call16) #5
  br label %return

cond.false20:                                     ; preds = %if.end
  %call21 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 46, %struct.rtx_def* %call, i32 0) #5
  br label %cond.end22

cond.end22:                                       ; preds = %if.end, %cond.false20
  %cond23 = phi %struct.rtx_def* [ %call21, %cond.false20 ], [ %call, %if.end ]
  %call24 = tail call %struct.rtx_def* @gen_sse_clrv4sf(%struct.rtx_def* %cond23) #5
  %call25 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call24) #5
  br label %return

return:                                           ; preds = %cond.end, %cond.end22, %entry
  %retval.0 = phi %struct.rtx_def* [ %x, %entry ], [ %call, %cond.end22 ], [ %call, %cond.end ]
  ret %struct.rtx_def* %retval.0
}

declare %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) #0

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #0

declare %union.tree_node* @builtin_function(i8*, %union.tree_node*, i32, i32, i8*) #0

declare i32 @recog_memoized_1(%struct.rtx_def*) #0

declare i32 @get_attr_ppro_uops(%struct.rtx_def*) #0

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def** @ix86_pent_find_pair(%struct.rtx_def** readonly %e_ready, %struct.rtx_def** readnone %ready, i32 %type, %struct.rtx_def* %first) #1 {
entry:
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %first, i64 0, i32 1, i64 4
  %rtint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %0 = load i32* %rtint.i, align 4, !tbaa !1
  %cmp.i = icmp sgt i32 %0, -1
  br i1 %cmp.i, label %if.then.i, label %cond.end.i

cond.end.i:                                       ; preds = %entry
  %call.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %first) #5
  %cmp4.i = icmp sgt i32 %call.i, -1
  br i1 %cmp4.i, label %if.then.i, label %ix86_safe_length.exit

if.then.i:                                        ; preds = %cond.end.i, %entry
  %call5.i = tail call i32 @get_attr_length(%struct.rtx_def* %first) #5
  br label %ix86_safe_length.exit

ix86_safe_length.exit:                            ; preds = %cond.end.i, %if.then.i
  %retval.0.i = phi i32 [ %call5.i, %if.then.i ], [ 128, %cond.end.i ]
  %1 = load i32* %rtint.i, align 4, !tbaa !1
  %cmp.i72 = icmp sgt i32 %1, -1
  br i1 %cmp.i72, label %if.then.i77, label %cond.end.i75

cond.end.i75:                                     ; preds = %ix86_safe_length.exit
  %call.i73 = tail call i32 @recog_memoized_1(%struct.rtx_def* %first) #5
  %cmp4.i74 = icmp sgt i32 %call.i73, -1
  br i1 %cmp4.i74, label %if.then.i77, label %ix86_safe_length_prefix.exit

if.then.i77:                                      ; preds = %cond.end.i75, %ix86_safe_length.exit
  %call5.i76 = tail call i32 @get_attr_length(%struct.rtx_def* %first) #5
  %phitmp = add i32 %call5.i76, 7
  br label %ix86_safe_length_prefix.exit

ix86_safe_length_prefix.exit:                     ; preds = %cond.end.i75, %if.then.i77
  %retval.0.i78 = phi i32 [ %phitmp, %if.then.i77 ], [ 7, %cond.end.i75 ]
  %cmp = icmp sgt i32 %retval.0.i, %retval.0.i78
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %ix86_safe_length_prefix.exit
  %2 = load i32* %rtint.i, align 4, !tbaa !1
  %cmp.i81 = icmp sgt i32 %2, -1
  br i1 %cmp.i81, label %if.then.i86, label %cond.end.i84

cond.end.i84:                                     ; preds = %if.end
  %call.i82 = tail call i32 @recog_memoized_1(%struct.rtx_def* %first) #5
  %cmp4.i83 = icmp sgt i32 %call.i82, -1
  br i1 %cmp4.i83, label %if.then.i86, label %ix86_safe_memory.exit

if.then.i86:                                      ; preds = %cond.end.i84, %if.end
  %call5.i85 = tail call i32 @get_attr_memory(%struct.rtx_def* %first) #5
  br label %ix86_safe_memory.exit

ix86_safe_memory.exit:                            ; preds = %cond.end.i84, %if.then.i86
  %retval.0.i87 = phi i32 [ %call5.i85, %if.then.i86 ], [ 4, %cond.end.i84 ]
  %call6 = tail call i32 @result_ready_cost(%struct.rtx_def* %first) #5
  %cmp7139 = icmp ult %struct.rtx_def** %e_ready, %ready
  br i1 %cmp7139, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %ix86_safe_memory.exit
  %cmp23 = icmp sgt i32 %call6, 0
  %cmp25 = icmp eq i32 %retval.0.i87, 3
  br i1 %cmp23, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %for.body.lr.ph, %for.inc.us
  %mincycles.0143.us = phi i32 [ %mincycles.1.us, %for.inc.us ], [ 2147483647, %for.body.lr.ph ]
  %bestinsnp.0142.us = phi %struct.rtx_def** [ %bestinsnp.1.us, %for.inc.us ], [ null, %for.body.lr.ph ]
  %insnp.0140.us = phi %struct.rtx_def** [ %incdec.ptr.us, %for.inc.us ], [ %e_ready, %for.body.lr.ph ]
  %3 = load %struct.rtx_def** %insnp.0140.us, align 8, !tbaa !6
  %arrayidx.i88.us = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 4
  %rtint.i89.us = bitcast %union.rtunion_def* %arrayidx.i88.us to i32*
  %4 = load i32* %rtint.i89.us, align 4, !tbaa !1
  %cmp.i90.us = icmp sgt i32 %4, -1
  br i1 %cmp.i90.us, label %if.then.i95.us, label %cond.end.i93.us

cond.end.i93.us:                                  ; preds = %for.body.us
  %call.i91.us = tail call i32 @recog_memoized_1(%struct.rtx_def* %3) #5
  %cmp4.i92.us = icmp sgt i32 %call.i91.us, -1
  br i1 %cmp4.i92.us, label %if.then.i95.us, label %ix86_safe_pent_pair.exit.us

if.then.i95.us:                                   ; preds = %cond.end.i93.us, %for.body.us
  %call5.i94.us = tail call i32 @get_attr_pent_pair(%struct.rtx_def* %3) #5
  br label %ix86_safe_pent_pair.exit.us

ix86_safe_pent_pair.exit.us:                      ; preds = %if.then.i95.us, %cond.end.i93.us
  %retval.0.i96.us = phi i32 [ %call5.i94.us, %if.then.i95.us ], [ 3, %cond.end.i93.us ]
  %cmp9.us = icmp eq i32 %retval.0.i96.us, %type
  br i1 %cmp9.us, label %land.lhs.true.us, label %for.inc.us

land.lhs.true.us:                                 ; preds = %ix86_safe_pent_pair.exit.us
  %5 = load %struct.rtx_def** %insnp.0140.us, align 8, !tbaa !6
  %arrayidx.i97.us = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 4
  %rtint.i98.us = bitcast %union.rtunion_def* %arrayidx.i97.us to i32*
  %6 = load i32* %rtint.i98.us, align 4, !tbaa !1
  %cmp.i99.us = icmp sgt i32 %6, -1
  br i1 %cmp.i99.us, label %if.then.i104.us, label %cond.end.i102.us

cond.end.i102.us:                                 ; preds = %land.lhs.true.us
  %call.i100.us = tail call i32 @recog_memoized_1(%struct.rtx_def* %5) #5
  %cmp4.i101.us = icmp sgt i32 %call.i100.us, -1
  br i1 %cmp4.i101.us, label %if.then.i104.us, label %ix86_safe_length.exit106.us

if.then.i104.us:                                  ; preds = %cond.end.i102.us, %land.lhs.true.us
  %call5.i103.us = tail call i32 @get_attr_length(%struct.rtx_def* %5) #5
  br label %ix86_safe_length.exit106.us

ix86_safe_length.exit106.us:                      ; preds = %if.then.i104.us, %cond.end.i102.us
  %retval.0.i105.us = phi i32 [ %call5.i103.us, %if.then.i104.us ], [ 128, %cond.end.i102.us ]
  %7 = load %struct.rtx_def** %insnp.0140.us, align 8, !tbaa !6
  %arrayidx.i107.us = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 4
  %rtint.i108.us = bitcast %union.rtunion_def* %arrayidx.i107.us to i32*
  %8 = load i32* %rtint.i108.us, align 4, !tbaa !1
  %cmp.i109.us = icmp sgt i32 %8, -1
  br i1 %cmp.i109.us, label %if.then.i114.us, label %cond.end.i112.us

cond.end.i112.us:                                 ; preds = %ix86_safe_length.exit106.us
  %call.i110.us = tail call i32 @recog_memoized_1(%struct.rtx_def* %7) #5
  %cmp4.i111.us = icmp sgt i32 %call.i110.us, -1
  br i1 %cmp4.i111.us, label %if.then.i114.us, label %ix86_safe_length_prefix.exit116.us

if.then.i114.us:                                  ; preds = %cond.end.i112.us, %ix86_safe_length.exit106.us
  %call5.i113.us = tail call i32 @get_attr_length(%struct.rtx_def* %7) #5
  %phitmp137.us = add i32 %call5.i113.us, 7
  br label %ix86_safe_length_prefix.exit116.us

ix86_safe_length_prefix.exit116.us:               ; preds = %if.then.i114.us, %cond.end.i112.us
  %retval.0.i115.us = phi i32 [ %phitmp137.us, %if.then.i114.us ], [ 7, %cond.end.i112.us ]
  %cmp13.us = icmp sgt i32 %retval.0.i105.us, %retval.0.i115.us
  br i1 %cmp13.us, label %for.inc.us, label %if.then14.us

if.then14.us:                                     ; preds = %ix86_safe_length_prefix.exit116.us
  %9 = load %struct.rtx_def** %insnp.0140.us, align 8, !tbaa !6
  %arrayidx.i117.us = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 4
  %rtint.i118.us = bitcast %union.rtunion_def* %arrayidx.i117.us to i32*
  %10 = load i32* %rtint.i118.us, align 4, !tbaa !1
  %cmp.i119.us = icmp sgt i32 %10, -1
  br i1 %cmp.i119.us, label %if.then.i124.us, label %cond.end.i122.us

cond.end.i122.us:                                 ; preds = %if.then14.us
  %call.i120.us = tail call i32 @recog_memoized_1(%struct.rtx_def* %9) #5
  %cmp4.i121.us = icmp sgt i32 %call.i120.us, -1
  br i1 %cmp4.i121.us, label %if.then.i124.us, label %ix86_safe_memory.exit126.us

if.then.i124.us:                                  ; preds = %cond.end.i122.us, %if.then14.us
  %call5.i123.us = tail call i32 @get_attr_memory(%struct.rtx_def* %9) #5
  br label %ix86_safe_memory.exit126.us

ix86_safe_memory.exit126.us:                      ; preds = %if.then.i124.us, %cond.end.i122.us
  %retval.0.i125.us = phi i32 [ %call5.i123.us, %if.then.i124.us ], [ 4, %cond.end.i122.us ]
  %11 = load %struct.rtx_def** %insnp.0140.us, align 8, !tbaa !6
  %call19.us = tail call i32 @result_ready_cost(%struct.rtx_def* %11) #5
  %sub.us = sub nsw i32 %call6, %call19.us
  %ispos.us = icmp sgt i32 %sub.us, -1
  %neg.us = sub i32 0, %sub.us
  %12 = select i1 %ispos.us, i32 %sub.us, i32 %neg.us
  %cmp21.us = icmp sgt i32 %call19.us, 0
  br i1 %cmp21.us, label %if.then24.us, label %if.end42.us

if.then24.us:                                     ; preds = %ix86_safe_memory.exit126.us
  %cmp27.us = icmp eq i32 %retval.0.i125.us, 3
  %or.cond47.us = and i1 %cmp25, %cmp27.us
  %add29.us = add nsw i32 %12, 2
  %add29..us = select i1 %or.cond47.us, i32 %add29.us, i32 %12
  %cmp33.us = icmp eq i32 %retval.0.i125.us, 1
  %or.cond48.us = and i1 %cmp25, %cmp33.us
  %cmp35.us = icmp ne i32 %type, 0
  %or.cond49.us = and i1 %or.cond48.us, %cmp35.us
  br i1 %or.cond49.us, label %land.lhs.true36.us, label %if.end42.us

land.lhs.true36.us:                               ; preds = %if.then24.us
  %13 = load i32* %rtint.i, align 4, !tbaa !1
  %cmp.i129.us = icmp sgt i32 %13, -1
  br i1 %cmp.i129.us, label %if.then.i134.us, label %cond.end.i132.us

cond.end.i132.us:                                 ; preds = %land.lhs.true36.us
  %call.i130.us = tail call i32 @recog_memoized_1(%struct.rtx_def* %first) #5
  %cmp4.i131.us = icmp sgt i32 %call.i130.us, -1
  br i1 %cmp4.i131.us, label %if.then.i134.us, label %ix86_safe_pent_pair.exit136.us

if.then.i134.us:                                  ; preds = %cond.end.i132.us, %land.lhs.true36.us
  %call5.i133.us = tail call i32 @get_attr_pent_pair(%struct.rtx_def* %first) #5
  %phitmp138.us = icmp eq i32 %call5.i133.us, 0
  br label %ix86_safe_pent_pair.exit136.us

ix86_safe_pent_pair.exit136.us:                   ; preds = %if.then.i134.us, %cond.end.i132.us
  %retval.0.i135.us = phi i1 [ %phitmp138.us, %if.then.i134.us ], [ false, %cond.end.i132.us ]
  %14 = zext i1 %retval.0.i135.us to i32
  %add40.us = xor i32 %14, 1
  %add29..add40.us = add nsw i32 %add40.us, %add29..us
  br label %if.end42.us

if.end42.us:                                      ; preds = %ix86_safe_pent_pair.exit136.us, %if.then24.us, %ix86_safe_memory.exit126.us
  %currentcycles.1.us = phi i32 [ %add29..us, %if.then24.us ], [ %12, %ix86_safe_memory.exit126.us ], [ %add29..add40.us, %ix86_safe_pent_pair.exit136.us ]
  %cmp43.us = icmp slt i32 %currentcycles.1.us, %mincycles.0143.us
  %insnp.0.bestinsnp.0.us = select i1 %cmp43.us, %struct.rtx_def** %insnp.0140.us, %struct.rtx_def** %bestinsnp.0142.us
  %currentcycles.1.mincycles.0.us = select i1 %cmp43.us, i32 %currentcycles.1.us, i32 %mincycles.0143.us
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.end42.us, %ix86_safe_length_prefix.exit116.us, %ix86_safe_pent_pair.exit.us
  %bestinsnp.1.us = phi %struct.rtx_def** [ %bestinsnp.0142.us, %ix86_safe_length_prefix.exit116.us ], [ %bestinsnp.0142.us, %ix86_safe_pent_pair.exit.us ], [ %insnp.0.bestinsnp.0.us, %if.end42.us ]
  %mincycles.1.us = phi i32 [ %mincycles.0143.us, %ix86_safe_length_prefix.exit116.us ], [ %mincycles.0143.us, %ix86_safe_pent_pair.exit.us ], [ %currentcycles.1.mincycles.0.us, %if.end42.us ]
  %incdec.ptr.us = getelementptr inbounds %struct.rtx_def** %insnp.0140.us, i64 -1
  %cmp7.us = icmp uge %struct.rtx_def** %incdec.ptr.us, %ready
  %tobool.us = icmp ne i32 %mincycles.1.us, 0
  %or.cond50.us = and i1 %cmp7.us, %tobool.us
  br i1 %or.cond50.us, label %for.body.us, label %return

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %mincycles.0143 = phi i32 [ %mincycles.1, %for.inc ], [ 2147483647, %for.body.lr.ph ]
  %bestinsnp.0142 = phi %struct.rtx_def** [ %bestinsnp.1, %for.inc ], [ null, %for.body.lr.ph ]
  %insnp.0140 = phi %struct.rtx_def** [ %incdec.ptr, %for.inc ], [ %e_ready, %for.body.lr.ph ]
  %15 = load %struct.rtx_def** %insnp.0140, align 8, !tbaa !6
  %arrayidx.i88 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 4
  %rtint.i89 = bitcast %union.rtunion_def* %arrayidx.i88 to i32*
  %16 = load i32* %rtint.i89, align 4, !tbaa !1
  %cmp.i90 = icmp sgt i32 %16, -1
  br i1 %cmp.i90, label %if.then.i95, label %cond.end.i93

cond.end.i93:                                     ; preds = %for.body
  %call.i91 = tail call i32 @recog_memoized_1(%struct.rtx_def* %15) #5
  %cmp4.i92 = icmp sgt i32 %call.i91, -1
  br i1 %cmp4.i92, label %if.then.i95, label %ix86_safe_pent_pair.exit

if.then.i95:                                      ; preds = %cond.end.i93, %for.body
  %call5.i94 = tail call i32 @get_attr_pent_pair(%struct.rtx_def* %15) #5
  br label %ix86_safe_pent_pair.exit

ix86_safe_pent_pair.exit:                         ; preds = %cond.end.i93, %if.then.i95
  %retval.0.i96 = phi i32 [ %call5.i94, %if.then.i95 ], [ 3, %cond.end.i93 ]
  %cmp9 = icmp eq i32 %retval.0.i96, %type
  br i1 %cmp9, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %ix86_safe_pent_pair.exit
  %17 = load %struct.rtx_def** %insnp.0140, align 8, !tbaa !6
  %arrayidx.i97 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 4
  %rtint.i98 = bitcast %union.rtunion_def* %arrayidx.i97 to i32*
  %18 = load i32* %rtint.i98, align 4, !tbaa !1
  %cmp.i99 = icmp sgt i32 %18, -1
  br i1 %cmp.i99, label %if.then.i104, label %cond.end.i102

cond.end.i102:                                    ; preds = %land.lhs.true
  %call.i100 = tail call i32 @recog_memoized_1(%struct.rtx_def* %17) #5
  %cmp4.i101 = icmp sgt i32 %call.i100, -1
  br i1 %cmp4.i101, label %if.then.i104, label %ix86_safe_length.exit106

if.then.i104:                                     ; preds = %cond.end.i102, %land.lhs.true
  %call5.i103 = tail call i32 @get_attr_length(%struct.rtx_def* %17) #5
  br label %ix86_safe_length.exit106

ix86_safe_length.exit106:                         ; preds = %cond.end.i102, %if.then.i104
  %retval.0.i105 = phi i32 [ %call5.i103, %if.then.i104 ], [ 128, %cond.end.i102 ]
  %19 = load %struct.rtx_def** %insnp.0140, align 8, !tbaa !6
  %arrayidx.i107 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 4
  %rtint.i108 = bitcast %union.rtunion_def* %arrayidx.i107 to i32*
  %20 = load i32* %rtint.i108, align 4, !tbaa !1
  %cmp.i109 = icmp sgt i32 %20, -1
  br i1 %cmp.i109, label %if.then.i114, label %cond.end.i112

cond.end.i112:                                    ; preds = %ix86_safe_length.exit106
  %call.i110 = tail call i32 @recog_memoized_1(%struct.rtx_def* %19) #5
  %cmp4.i111 = icmp sgt i32 %call.i110, -1
  br i1 %cmp4.i111, label %if.then.i114, label %ix86_safe_length_prefix.exit116

if.then.i114:                                     ; preds = %cond.end.i112, %ix86_safe_length.exit106
  %call5.i113 = tail call i32 @get_attr_length(%struct.rtx_def* %19) #5
  %phitmp137 = add i32 %call5.i113, 7
  br label %ix86_safe_length_prefix.exit116

ix86_safe_length_prefix.exit116:                  ; preds = %cond.end.i112, %if.then.i114
  %retval.0.i115 = phi i32 [ %phitmp137, %if.then.i114 ], [ 7, %cond.end.i112 ]
  %cmp13 = icmp sgt i32 %retval.0.i105, %retval.0.i115
  br i1 %cmp13, label %for.inc, label %if.then14

if.then14:                                        ; preds = %ix86_safe_length_prefix.exit116
  %21 = load %struct.rtx_def** %insnp.0140, align 8, !tbaa !6
  %arrayidx.i117 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 4
  %rtint.i118 = bitcast %union.rtunion_def* %arrayidx.i117 to i32*
  %22 = load i32* %rtint.i118, align 4, !tbaa !1
  %cmp.i119 = icmp sgt i32 %22, -1
  br i1 %cmp.i119, label %if.then.i124, label %cond.end.i122

cond.end.i122:                                    ; preds = %if.then14
  %call.i120 = tail call i32 @recog_memoized_1(%struct.rtx_def* %21) #5
  %cmp4.i121 = icmp sgt i32 %call.i120, -1
  br i1 %cmp4.i121, label %if.then.i124, label %if.end42

if.then.i124:                                     ; preds = %cond.end.i122, %if.then14
  %call5.i123 = tail call i32 @get_attr_memory(%struct.rtx_def* %21) #5
  br label %if.end42

if.end42:                                         ; preds = %if.then.i124, %cond.end.i122
  %23 = load %struct.rtx_def** %insnp.0140, align 8, !tbaa !6
  %call19 = tail call i32 @result_ready_cost(%struct.rtx_def* %23) #5
  %sub = sub nsw i32 %call6, %call19
  %ispos = icmp sgt i32 %sub, -1
  %neg = sub i32 0, %sub
  %24 = select i1 %ispos, i32 %sub, i32 %neg
  %cmp43 = icmp slt i32 %24, %mincycles.0143
  %insnp.0.bestinsnp.0 = select i1 %cmp43, %struct.rtx_def** %insnp.0140, %struct.rtx_def** %bestinsnp.0142
  %currentcycles.1.mincycles.0 = select i1 %cmp43, i32 %24, i32 %mincycles.0143
  br label %for.inc

for.inc:                                          ; preds = %if.end42, %ix86_safe_length_prefix.exit116, %ix86_safe_pent_pair.exit
  %bestinsnp.1 = phi %struct.rtx_def** [ %bestinsnp.0142, %ix86_safe_length_prefix.exit116 ], [ %bestinsnp.0142, %ix86_safe_pent_pair.exit ], [ %insnp.0.bestinsnp.0, %if.end42 ]
  %mincycles.1 = phi i32 [ %mincycles.0143, %ix86_safe_length_prefix.exit116 ], [ %mincycles.0143, %ix86_safe_pent_pair.exit ], [ %currentcycles.1.mincycles.0, %if.end42 ]
  %incdec.ptr = getelementptr inbounds %struct.rtx_def** %insnp.0140, i64 -1
  %cmp7 = icmp uge %struct.rtx_def** %incdec.ptr, %ready
  %tobool = icmp ne i32 %mincycles.1, 0
  %or.cond50 = and i1 %cmp7, %tobool
  br i1 %or.cond50, label %for.body, label %return

return:                                           ; preds = %for.inc, %for.inc.us, %ix86_safe_memory.exit, %ix86_safe_length_prefix.exit
  %retval.0 = phi %struct.rtx_def** [ null, %ix86_safe_length_prefix.exit ], [ null, %ix86_safe_memory.exit ], [ %bestinsnp.1.us, %for.inc.us ], [ %bestinsnp.1, %for.inc ]
  ret %struct.rtx_def** %retval.0
}

declare i32 @get_attr_memory(%struct.rtx_def*) #0

declare i32 @result_ready_cost(%struct.rtx_def*) #0

declare i32 @get_attr_length(%struct.rtx_def*) #0

declare i32 @get_attr_pent_pair(%struct.rtx_def*) #0

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

declare i32 @get_attr_type(%struct.rtx_def*) #0

declare i32 @get_attr_fp_int_src(%struct.rtx_def*) #0

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #0

declare i32 @modified_in_p(%struct.rtx_def*, %struct.rtx_def*) #0

; Function Attrs: nounwind
declare void @free(i8* nocapture) #4

declare i32 @ggc_set_mark(i8*) #0

declare void @ggc_mark_rtx_children(%struct.rtx_def*) #0

declare noalias i8* @xcalloc(i64, i64) #0

declare %struct.rtx_def* @gen_andsi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_testsi_ccno_1(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_addqi3_cc(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_subdi3_carry_rex64(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_subsi3_carry(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_anddi3(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare void @etardouble(%struct.realvaluetype* byval align 8, i64*) #0

declare void @etarldouble(%struct.realvaluetype* byval align 8, i64*) #0

declare void @etartdouble(%struct.realvaluetype* byval align 8, i64*) #0

declare %struct.rtx_def* @gen_x86_sahf_1(%struct.rtx_def*) #0

declare %struct.rtx_def* @gen_testqi_ext_ccno_0(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_andqi_ext_0(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_addqi_ext_1(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_cmpqi_ext_3(%struct.rtx_def*, %struct.rtx_def*) #0

declare %struct.rtx_def* @gen_xorqi_cc_ext_1(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #0

declare i64 @new_alias_set() #0

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #3

declare i64 @get_frame_size() #0

; Function Attrs: nounwind uwtable
define internal fastcc i32 @classify_argument(i32 %mode, %union.tree_node* %type, i32* %classes, i32 %bit_offset) #1 {
entry:
  %classes869 = bitcast i32* %classes to i8*
  %subclasses = alloca [4 x i32], align 16
  %cmp = icmp eq i32 %mode, 51
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %call = call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !5
  %conv1 = zext i8 %0 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ %conv1, %cond.false ]
  %conv2 = trunc i64 %cond to i32
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %1, 23
  %2 = and i32 %and, 4
  %3 = add i32 %2, 4
  %add = add i32 %conv2, -1
  %sub = add i32 %add, %3
  %div = sdiv i32 %sub, %3
  %tobool7 = icmp eq %union.tree_node* %type, null
  br i1 %tobool7, label %if.end453, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -18
  %switch = icmp ult i32 %bf.clear.off, 5
  br i1 %switch, label %if.then, label %if.end453

if.then:                                          ; preds = %land.lhs.true
  %cmp37 = icmp sgt i32 %conv2, 16
  br i1 %cmp37, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then
  %cmp40838 = icmp sgt i32 %div, 0
  br i1 %cmp40838, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %4 = add i32 %div, -1
  %5 = zext i32 %4 to i64
  %6 = shl nuw nsw i64 %5, 2
  %7 = add i64 %6, 4
  call void @llvm.memset.p0i8.i64(i8* %classes869, i8 0, i64 %7, i32 4, i1 false)
  br label %for.end

for.end:                                          ; preds = %for.body.lr.ph, %for.cond.preheader
  %tobool44 = icmp eq i32 %div, 0
  br i1 %tobool44, label %if.then45, label %if.end47

if.then45:                                        ; preds = %for.end
  store i32 0, i32* %classes, align 4, !tbaa !5
  br label %return

if.end47:                                         ; preds = %for.end
  %bf.load50 = load i32* %code, align 8
  %bf.clear51 = and i32 %bf.load50, 255
  switch i32 %bf.clear51, label %if.else402 [
    i32 20, label %if.then54
    i32 18, label %if.then216
    i32 21, label %if.then276
    i32 22, label %if.then276
  ]

if.then54:                                        ; preds = %if.end47
  %8 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 16
  %9 = load %union.tree_node** %8, align 8, !tbaa !116
  %cmp56 = icmp eq %union.tree_node* %9, null
  br i1 %cmp56, label %if.end120, label %land.lhs.true58

land.lhs.true58:                                  ; preds = %if.then54
  %a = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 2
  %arrayidx61 = getelementptr inbounds i32* %a, i64 8
  %10 = bitcast i32* %arrayidx61 to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !6
  %cmp62 = icmp eq %union.tree_node* %11, null
  br i1 %cmp62, label %if.end120, label %if.then64

if.then64:                                        ; preds = %land.lhs.true58
  %length = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 1
  %12 = bitcast i8** %length to i32*
  %13 = load i32* %12, align 4, !tbaa !117
  %cmp73825 = icmp sgt i32 %13, 0
  br i1 %cmp73825, label %for.body75.lr.ph, label %if.end120

for.body75.lr.ph:                                 ; preds = %if.then64
  %a79 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 2
  %14 = bitcast i32* %a79 to [1 x %union.tree_node*]*
  %arraydecay = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 0
  br label %for.body75

for.body75:                                       ; preds = %for.body75.lr.ph, %for.inc117
  %i71.0826 = phi i32 [ 0, %for.body75.lr.ph ], [ %i71.1.lcssa, %for.inc117 ]
  %idxprom77 = sext i32 %i71.0826 to i64
  %arrayidx80 = getelementptr inbounds [1 x %union.tree_node*]* %14, i64 0, i64 %idxprom77
  %15 = load %union.tree_node** %arrayidx80, align 8, !tbaa !6
  %a82 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 2
  %arrayidx83 = getelementptr inbounds i32* %a82, i64 2
  %16 = bitcast i32* %arrayidx83 to %union.tree_node**
  %17 = load %union.tree_node** %16, align 8, !tbaa !6
  %call84 = call i64 @tree_low_cst(%union.tree_node* %17, i32 0) #5
  %mul = shl nsw i64 %call84, 3
  %conv85 = trunc i64 %mul to i32
  %type88 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type88, align 8, !tbaa !54
  %type89 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %mode90 = getelementptr inbounds %struct.tree_type* %type89, i64 0, i32 6
  %bf.load91 = load i32* %mode90, align 4
  %bf.lshr = lshr i32 %bf.load91, 9
  %bf.clear92 = and i32 %bf.lshr, 127
  %add93 = add nsw i32 %conv85, %bit_offset
  %rem = srem i32 %add93, 256
  %call94 = call fastcc i32 @classify_argument(i32 %bf.clear92, %union.tree_node* %18, i32* %arraydecay, i32 %rem)
  %tobool95 = icmp eq i32 %call94, 0
  br i1 %tobool95, label %return, label %for.cond98.preheader

for.cond98.preheader:                             ; preds = %for.body75
  %cmp99822 = icmp sgt i32 %call94, 0
  br i1 %cmp99822, label %for.body101.lr.ph, label %for.inc117

for.body101.lr.ph:                                ; preds = %for.cond98.preheader
  %div104 = sdiv i32 %add93, 64
  %19 = sext i32 %div104 to i64
  br label %for.body101

for.body101:                                      ; preds = %merge_classes.exit718, %for.body101.lr.ph
  %indvars.iv847 = phi i64 [ 0, %for.body101.lr.ph ], [ %indvars.iv.next848, %merge_classes.exit718 ]
  %arrayidx106 = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 %indvars.iv847
  %20 = load i32* %arrayidx106, align 4, !tbaa !5
  %21 = add nsw i64 %19, %indvars.iv847
  %arrayidx109 = getelementptr inbounds i32* %classes, i64 %21
  %22 = load i32* %arrayidx109, align 4, !tbaa !5
  %cmp.i688 = icmp eq i32 %20, %22
  br i1 %cmp.i688, label %merge_classes.exit718, label %if.end.i690

if.end.i690:                                      ; preds = %for.body101
  %cmp1.i689 = icmp eq i32 %20, 0
  br i1 %cmp1.i689, label %merge_classes.exit718, label %if.end3.i692

if.end3.i692:                                     ; preds = %if.end.i690
  %cmp4.i691 = icmp eq i32 %22, 0
  br i1 %cmp4.i691, label %merge_classes.exit718, label %if.end6.i696

if.end6.i696:                                     ; preds = %if.end3.i692
  %cmp7.i693 = icmp eq i32 %20, 9
  %cmp8.i694 = icmp eq i32 %22, 9
  %or.cond.i695 = or i1 %cmp7.i693, %cmp8.i694
  br i1 %or.cond.i695, label %merge_classes.exit718, label %if.end10.i700

if.end10.i700:                                    ; preds = %if.end6.i696
  %cmp11.i697 = icmp eq i32 %20, 2
  %cmp12.i698 = icmp eq i32 %22, 4
  %or.cond37.i699 = and i1 %cmp11.i697, %cmp12.i698
  br i1 %or.cond37.i699, label %merge_classes.exit718, label %lor.lhs.false13.i704

lor.lhs.false13.i704:                             ; preds = %if.end10.i700
  %cmp14.i701 = icmp eq i32 %22, 2
  %cmp16.i702 = icmp eq i32 %20, 4
  %or.cond38.i703 = and i1 %cmp14.i701, %cmp16.i702
  br i1 %or.cond38.i703, label %merge_classes.exit718, label %if.end18.i709

if.end18.i709:                                    ; preds = %lor.lhs.false13.i704
  %class1.off.i705 = add i32 %20, -1
  %23 = icmp ult i32 %class1.off.i705, 2
  %cmp23.i706 = icmp eq i32 %22, 1
  %or.cond40.i707 = or i1 %23, %cmp23.i706
  %or.cond41.i708 = or i1 %or.cond40.i707, %cmp14.i701
  br i1 %or.cond41.i708, label %merge_classes.exit718, label %if.end27.i716

if.end27.i716:                                    ; preds = %if.end18.i709
  %class1.off61.i710 = add i32 %20, -7
  %24 = icmp ult i32 %class1.off61.i710, 2
  %cmp32.i711 = icmp eq i32 %22, 7
  %or.cond43.i712 = or i1 %24, %cmp32.i711
  %cmp34.i713 = icmp eq i32 %22, 8
  %or.cond44.i714 = or i1 %or.cond43.i712, %cmp34.i713
  %..i715 = select i1 %or.cond44.i714, i32 9, i32 3
  br label %merge_classes.exit718

merge_classes.exit718:                            ; preds = %for.body101, %if.end.i690, %if.end3.i692, %if.end6.i696, %if.end10.i700, %lor.lhs.false13.i704, %if.end18.i709, %if.end27.i716
  %retval.0.i717 = phi i32 [ %20, %for.body101 ], [ %22, %if.end.i690 ], [ %20, %if.end3.i692 ], [ 9, %if.end6.i696 ], [ 2, %lor.lhs.false13.i704 ], [ 2, %if.end10.i700 ], [ 1, %if.end18.i709 ], [ %..i715, %if.end27.i716 ]
  store i32 %retval.0.i717, i32* %arrayidx109, align 4, !tbaa !5
  %indvars.iv.next848 = add nuw nsw i64 %indvars.iv847, 1
  %lftr.wideiv850 = trunc i64 %indvars.iv.next848 to i32
  %exitcond851 = icmp eq i32 %lftr.wideiv850, %call94
  br i1 %exitcond851, label %for.cond98.for.inc117_crit_edge, label %for.body101

for.cond98.for.inc117_crit_edge:                  ; preds = %merge_classes.exit718
  %phitmp840 = add i32 %call94, 1
  br label %for.inc117

for.inc117:                                       ; preds = %for.cond98.for.inc117_crit_edge, %for.cond98.preheader
  %i71.1.lcssa = phi i32 [ %phitmp840, %for.cond98.for.inc117_crit_edge ], [ 1, %for.cond98.preheader ]
  %cmp73 = icmp slt i32 %i71.1.lcssa, %13
  br i1 %cmp73, label %for.body75, label %if.end120

if.end120:                                        ; preds = %for.inc117, %if.then64, %land.lhs.true58, %if.then54
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %25 = load i8** %values, align 8
  %tobool123820 = icmp eq i8* %25, null
  br i1 %tobool123820, label %for.cond406.preheader, label %for.body124.lr.ph

for.body124.lr.ph:                                ; preds = %if.end120
  %26 = bitcast i8* %25 to %union.tree_node*
  %arraydecay171 = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 0
  %conv173 = sext i32 %bit_offset to i64
  br label %for.body124

for.body124:                                      ; preds = %for.body124.lr.ph, %for.inc206
  %field.0821 = phi %union.tree_node* [ %26, %for.body124.lr.ph ], [ %38, %for.inc206 ]
  %code126 = getelementptr inbounds %union.tree_node* %field.0821, i64 0, i32 0, i32 0, i32 2
  %bf.load127 = load i32* %code126, align 8
  %bf.clear128 = and i32 %bf.load127, 255
  %cmp129 = icmp eq i32 %bf.clear128, 37
  br i1 %cmp129, label %if.then131, label %for.inc206

if.then131:                                       ; preds = %for.body124
  %bit_field_flag = getelementptr inbounds %union.tree_node* %field.0821, i64 0, i32 0, i32 5
  %27 = bitcast i48* %bit_field_flag to i64*
  %bf.load133 = load i64* %27, align 8
  %bf.cast = and i64 %bf.load133, 4096
  %tobool136 = icmp eq i64 %bf.cast, 0
  br i1 %tobool136, label %if.else, label %if.then137

if.then137:                                       ; preds = %if.then131
  %call138 = call i64 @int_bit_position(%union.tree_node* %field.0821) #5
  %div140 = sdiv i64 %call138, 64
  %sext = shl i64 %div140, 32
  %conv143809 = ashr exact i64 %sext, 32
  %call144810 = call i64 @int_bit_position(%union.tree_node* %field.0821) #5
  %size = getelementptr inbounds %union.tree_node* %field.0821, i64 0, i32 0, i32 4
  %28 = load %union.tree_node** %size, align 8, !tbaa !119
  %call146811 = call i64 @tree_low_cst(%union.tree_node* %28, i32 0) #5
  %add147812 = add i64 %call144810, 63
  %add148813 = add i64 %add147812, %call146811
  %div150814 = sdiv i64 %add148813, 64
  %cmp151815 = icmp slt i64 %conv143809, %div150814
  br i1 %cmp151815, label %for.body153.lr.ph, label %for.inc206

for.body153.lr.ph:                                ; preds = %if.then137
  %sext894 = shl i64 %div140, 32
  %29 = ashr exact i64 %sext894, 32
  br label %for.body153

for.body153:                                      ; preds = %for.body153.lr.ph, %merge_classes.exit732
  %indvars.iv843 = phi i64 [ %29, %for.body153.lr.ph ], [ %indvars.iv.next844, %merge_classes.exit732 ]
  %arrayidx155 = getelementptr inbounds i32* %classes, i64 %indvars.iv843
  %30 = load i32* %arrayidx155, align 4, !tbaa !5
  %31 = icmp ult i32 %30, 2
  br i1 %31, label %merge_classes.exit732, label %if.end6.i724

if.end6.i724:                                     ; preds = %for.body153
  %cmp8.i723 = icmp eq i32 %30, 9
  %.797 = select i1 %cmp8.i723, i32 9, i32 1
  br label %merge_classes.exit732

merge_classes.exit732:                            ; preds = %if.end6.i724, %for.body153
  %retval.0.i731 = phi i32 [ 1, %for.body153 ], [ %.797, %if.end6.i724 ]
  store i32 %retval.0.i731, i32* %arrayidx155, align 4, !tbaa !5
  %indvars.iv.next844 = add nsw i64 %indvars.iv843, 1
  %call144 = call i64 @int_bit_position(%union.tree_node* %field.0821) #5
  %32 = load %union.tree_node** %size, align 8, !tbaa !119
  %call146 = call i64 @tree_low_cst(%union.tree_node* %32, i32 0) #5
  %add147 = add i64 %call144, 63
  %add148 = add i64 %add147, %call146
  %div150 = sdiv i64 %add148, 64
  %cmp151 = icmp slt i64 %indvars.iv.next844, %div150
  br i1 %cmp151, label %for.body153, label %for.inc206

if.else:                                          ; preds = %if.then131
  %type163 = getelementptr inbounds %union.tree_node* %field.0821, i64 0, i32 0, i32 0, i32 1
  %33 = load %union.tree_node** %type163, align 8, !tbaa !54
  %type164 = bitcast %union.tree_node* %33 to %struct.tree_type*
  %mode165 = getelementptr inbounds %struct.tree_type* %type164, i64 0, i32 6
  %bf.load166 = load i32* %mode165, align 4
  %bf.lshr167 = lshr i32 %bf.load166, 9
  %bf.clear168 = and i32 %bf.lshr167, 127
  %call172 = call i64 @int_bit_position(%union.tree_node* %field.0821) #5
  %add174 = add nsw i64 %call172, %conv173
  %rem175 = srem i64 %add174, 256
  %conv176 = trunc i64 %rem175 to i32
  %call177 = call fastcc i32 @classify_argument(i32 %bf.clear168, %union.tree_node* %33, i32* %arraydecay171, i32 %conv176)
  %tobool178 = icmp eq i32 %call177, 0
  br i1 %tobool178, label %return, label %for.cond181.preheader

for.cond181.preheader:                            ; preds = %if.else
  %cmp182818 = icmp sgt i32 %call177, 0
  br i1 %cmp182818, label %for.body184, label %for.inc206

for.body184:                                      ; preds = %for.cond181.preheader, %merge_classes.exit794
  %indvars.iv845 = phi i64 [ %indvars.iv.next846, %merge_classes.exit794 ], [ 0, %for.cond181.preheader ]
  %call186 = call i64 @int_bit_position(%union.tree_node* %field.0821) #5
  %add188 = add nsw i64 %call186, %conv173
  %div190 = sdiv i64 %add188, 64
  %arrayidx193 = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 %indvars.iv845
  %34 = load i32* %arrayidx193, align 4, !tbaa !5
  %add194 = add i64 %div190, %indvars.iv845
  %sext895 = shl i64 %add194, 32
  %idxprom195 = ashr exact i64 %sext895, 32
  %arrayidx196 = getelementptr inbounds i32* %classes, i64 %idxprom195
  %35 = load i32* %arrayidx196, align 4, !tbaa !5
  %cmp.i764 = icmp eq i32 %34, %35
  br i1 %cmp.i764, label %merge_classes.exit794, label %if.end.i766

if.end.i766:                                      ; preds = %for.body184
  %cmp1.i765 = icmp eq i32 %34, 0
  br i1 %cmp1.i765, label %merge_classes.exit794, label %if.end3.i768

if.end3.i768:                                     ; preds = %if.end.i766
  %cmp4.i767 = icmp eq i32 %35, 0
  br i1 %cmp4.i767, label %merge_classes.exit794, label %if.end6.i772

if.end6.i772:                                     ; preds = %if.end3.i768
  %cmp7.i769 = icmp eq i32 %34, 9
  %cmp8.i770 = icmp eq i32 %35, 9
  %or.cond.i771 = or i1 %cmp7.i769, %cmp8.i770
  br i1 %or.cond.i771, label %merge_classes.exit794, label %if.end10.i776

if.end10.i776:                                    ; preds = %if.end6.i772
  %cmp11.i773 = icmp eq i32 %34, 2
  %cmp12.i774 = icmp eq i32 %35, 4
  %or.cond37.i775 = and i1 %cmp11.i773, %cmp12.i774
  br i1 %or.cond37.i775, label %merge_classes.exit794, label %lor.lhs.false13.i780

lor.lhs.false13.i780:                             ; preds = %if.end10.i776
  %cmp14.i777 = icmp eq i32 %35, 2
  %cmp16.i778 = icmp eq i32 %34, 4
  %or.cond38.i779 = and i1 %cmp14.i777, %cmp16.i778
  br i1 %or.cond38.i779, label %merge_classes.exit794, label %if.end18.i785

if.end18.i785:                                    ; preds = %lor.lhs.false13.i780
  %class1.off.i781 = add i32 %34, -1
  %36 = icmp ult i32 %class1.off.i781, 2
  %cmp23.i782 = icmp eq i32 %35, 1
  %or.cond40.i783 = or i1 %36, %cmp23.i782
  %or.cond41.i784 = or i1 %or.cond40.i783, %cmp14.i777
  br i1 %or.cond41.i784, label %merge_classes.exit794, label %if.end27.i792

if.end27.i792:                                    ; preds = %if.end18.i785
  %class1.off61.i786 = add i32 %34, -7
  %37 = icmp ult i32 %class1.off61.i786, 2
  %cmp32.i787 = icmp eq i32 %35, 7
  %or.cond43.i788 = or i1 %37, %cmp32.i787
  %cmp34.i789 = icmp eq i32 %35, 8
  %or.cond44.i790 = or i1 %or.cond43.i788, %cmp34.i789
  %..i791 = select i1 %or.cond44.i790, i32 9, i32 3
  br label %merge_classes.exit794

merge_classes.exit794:                            ; preds = %for.body184, %if.end.i766, %if.end3.i768, %if.end6.i772, %if.end10.i776, %lor.lhs.false13.i780, %if.end18.i785, %if.end27.i792
  %retval.0.i793 = phi i32 [ %34, %for.body184 ], [ %35, %if.end.i766 ], [ %34, %if.end3.i768 ], [ 9, %if.end6.i772 ], [ 2, %lor.lhs.false13.i780 ], [ 2, %if.end10.i776 ], [ 1, %if.end18.i785 ], [ %..i791, %if.end27.i792 ]
  store i32 %retval.0.i793, i32* %arrayidx196, align 4, !tbaa !5
  %indvars.iv.next846 = add nuw nsw i64 %indvars.iv845, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next846 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %call177
  br i1 %exitcond, label %for.inc206, label %for.body184

for.inc206:                                       ; preds = %merge_classes.exit732, %merge_classes.exit794, %if.then137, %for.cond181.preheader, %for.body124
  %chain = getelementptr inbounds %union.tree_node* %field.0821, i64 0, i32 0, i32 0, i32 0
  %38 = load %union.tree_node** %chain, align 8, !tbaa !27
  %tobool123 = icmp eq %union.tree_node* %38, null
  br i1 %tobool123, label %for.cond406.preheader, label %for.body124

if.then216:                                       ; preds = %if.end47
  %type219 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %39 = load %union.tree_node** %type219, align 8, !tbaa !54
  %type220 = bitcast %union.tree_node* %39 to %struct.tree_type*
  %mode221 = getelementptr inbounds %struct.tree_type* %type220, i64 0, i32 6
  %bf.load222 = load i32* %mode221, align 4
  %bf.lshr223 = lshr i32 %bf.load222, 9
  %bf.clear224 = and i32 %bf.lshr223, 127
  %arraydecay227 = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 0
  %call228 = call fastcc i32 @classify_argument(i32 %bf.clear224, %union.tree_node* %39, i32* %arraydecay227, i32 %bit_offset)
  %tobool229 = icmp eq i32 %call228, 0
  br i1 %tobool229, label %return, label %if.end231

if.end231:                                        ; preds = %if.then216
  %40 = load i32* %arraydecay227, align 16, !tbaa !5
  %cmp233 = icmp eq i32 %40, 4
  %cmp236 = icmp ne i32 %conv2, 4
  %or.cond = and i1 %cmp233, %cmp236
  br i1 %or.cond, label %if.end240.thread, label %if.end240

if.end240.thread:                                 ; preds = %if.end231
  store i32 3, i32* %arraydecay227, align 16, !tbaa !5
  br label %for.cond250.preheader

if.end240:                                        ; preds = %if.end231
  %cmp242 = icmp eq i32 %40, 2
  %or.cond525 = and i1 %cmp242, %cmp236
  br i1 %or.cond525, label %if.then247, label %for.cond250.preheader

if.then247:                                       ; preds = %if.end240
  store i32 1, i32* %arraydecay227, align 16, !tbaa !5
  br label %for.cond250.preheader

for.cond250.preheader:                            ; preds = %if.end240.thread, %if.then247, %if.end240
  br i1 %cmp40838, label %for.body253, label %return

for.cond406.preheader:                            ; preds = %for.inc398, %for.body253, %for.inc206, %if.end355, %if.end120
  br i1 %cmp40838, label %for.body409, label %return

for.body253:                                      ; preds = %for.cond250.preheader, %for.body253
  %indvars.iv852 = phi i64 [ %indvars.iv.next853, %for.body253 ], [ 0, %for.cond250.preheader ]
  %41 = trunc i64 %indvars.iv852 to i32
  %rem254 = srem i32 %41, %call228
  %idxprom255 = sext i32 %rem254 to i64
  %arrayidx256 = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 %idxprom255
  %42 = load i32* %arrayidx256, align 4, !tbaa !5
  %arrayidx258 = getelementptr inbounds i32* %classes, i64 %indvars.iv852
  store i32 %42, i32* %arrayidx258, align 4, !tbaa !5
  %indvars.iv.next853 = add nuw nsw i64 %indvars.iv852, 1
  %lftr.wideiv854 = trunc i64 %indvars.iv.next853 to i32
  %exitcond855 = icmp eq i32 %lftr.wideiv854, %div
  br i1 %exitcond855, label %for.cond406.preheader, label %for.body253

if.then276:                                       ; preds = %if.end47, %if.end47
  %43 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 16
  %44 = load %union.tree_node** %43, align 8, !tbaa !116
  %cmp279 = icmp eq %union.tree_node* %44, null
  br i1 %cmp279, label %if.end355, label %land.lhs.true281

land.lhs.true281:                                 ; preds = %if.then276
  %a285 = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 2
  %arrayidx286 = getelementptr inbounds i32* %a285, i64 8
  %45 = bitcast i32* %arrayidx286 to %union.tree_node**
  %46 = load %union.tree_node** %45, align 8, !tbaa !6
  %cmp287 = icmp eq %union.tree_node* %46, null
  br i1 %cmp287, label %if.end355, label %if.then289

if.then289:                                       ; preds = %land.lhs.true281
  %length298 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 1
  %47 = bitcast i8** %length298 to i32*
  %48 = load i32* %47, align 4, !tbaa !117
  %cmp301836 = icmp sgt i32 %48, 0
  br i1 %cmp301836, label %for.body303.lr.ph, label %if.end355

for.body303.lr.ph:                                ; preds = %if.then289
  %a307 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 2
  %49 = bitcast i32* %a307 to [1 x %union.tree_node*]*
  %arraydecay325 = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 0
  br label %for.body303

for.body303:                                      ; preds = %for.body303.lr.ph, %for.inc352
  %i299.0837 = phi i32 [ 0, %for.body303.lr.ph ], [ %i299.1.lcssa, %for.inc352 ]
  %idxprom305 = sext i32 %i299.0837 to i64
  %arrayidx308 = getelementptr inbounds [1 x %union.tree_node*]* %49, i64 0, i64 %idxprom305
  %50 = load %union.tree_node** %arrayidx308, align 8, !tbaa !6
  %a312 = getelementptr inbounds %union.tree_node* %50, i64 0, i32 0, i32 2
  %arrayidx313 = getelementptr inbounds i32* %a312, i64 2
  %51 = bitcast i32* %arrayidx313 to %union.tree_node**
  %52 = load %union.tree_node** %51, align 8, !tbaa !6
  %call314 = call i64 @tree_low_cst(%union.tree_node* %52, i32 0) #5
  %mul315 = shl nsw i64 %call314, 3
  %conv316 = trunc i64 %mul315 to i32
  %type319 = getelementptr inbounds %union.tree_node* %50, i64 0, i32 0, i32 0, i32 1
  %53 = load %union.tree_node** %type319, align 8, !tbaa !54
  %type320 = bitcast %union.tree_node* %53 to %struct.tree_type*
  %mode321 = getelementptr inbounds %struct.tree_type* %type320, i64 0, i32 6
  %bf.load322 = load i32* %mode321, align 4
  %bf.lshr323 = lshr i32 %bf.load322, 9
  %bf.clear324 = and i32 %bf.lshr323, 127
  %add326 = add nsw i32 %conv316, %bit_offset
  %rem327 = srem i32 %add326, 256
  %call328 = call fastcc i32 @classify_argument(i32 %bf.clear324, %union.tree_node* %53, i32* %arraydecay325, i32 %rem327)
  %tobool329 = icmp eq i32 %call328, 0
  br i1 %tobool329, label %return, label %for.cond332.preheader

for.cond332.preheader:                            ; preds = %for.body303
  %cmp333833 = icmp sgt i32 %call328, 0
  br i1 %cmp333833, label %for.body335.lr.ph, label %for.inc352

for.body335.lr.ph:                                ; preds = %for.cond332.preheader
  %div339 = sdiv i32 %add326, 64
  %54 = sext i32 %div339 to i64
  br label %for.body335

for.body335:                                      ; preds = %merge_classes.exit763, %for.body335.lr.ph
  %indvars.iv860 = phi i64 [ 0, %for.body335.lr.ph ], [ %indvars.iv.next861, %merge_classes.exit763 ]
  %arrayidx341 = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 %indvars.iv860
  %55 = load i32* %arrayidx341, align 4, !tbaa !5
  %56 = add nsw i64 %54, %indvars.iv860
  %arrayidx344 = getelementptr inbounds i32* %classes, i64 %56
  %57 = load i32* %arrayidx344, align 4, !tbaa !5
  %cmp.i733 = icmp eq i32 %55, %57
  br i1 %cmp.i733, label %merge_classes.exit763, label %if.end.i735

if.end.i735:                                      ; preds = %for.body335
  %cmp1.i734 = icmp eq i32 %55, 0
  br i1 %cmp1.i734, label %merge_classes.exit763, label %if.end3.i737

if.end3.i737:                                     ; preds = %if.end.i735
  %cmp4.i736 = icmp eq i32 %57, 0
  br i1 %cmp4.i736, label %merge_classes.exit763, label %if.end6.i741

if.end6.i741:                                     ; preds = %if.end3.i737
  %cmp7.i738 = icmp eq i32 %55, 9
  %cmp8.i739 = icmp eq i32 %57, 9
  %or.cond.i740 = or i1 %cmp7.i738, %cmp8.i739
  br i1 %or.cond.i740, label %merge_classes.exit763, label %if.end10.i745

if.end10.i745:                                    ; preds = %if.end6.i741
  %cmp11.i742 = icmp eq i32 %55, 2
  %cmp12.i743 = icmp eq i32 %57, 4
  %or.cond37.i744 = and i1 %cmp11.i742, %cmp12.i743
  br i1 %or.cond37.i744, label %merge_classes.exit763, label %lor.lhs.false13.i749

lor.lhs.false13.i749:                             ; preds = %if.end10.i745
  %cmp14.i746 = icmp eq i32 %57, 2
  %cmp16.i747 = icmp eq i32 %55, 4
  %or.cond38.i748 = and i1 %cmp14.i746, %cmp16.i747
  br i1 %or.cond38.i748, label %merge_classes.exit763, label %if.end18.i754

if.end18.i754:                                    ; preds = %lor.lhs.false13.i749
  %class1.off.i750 = add i32 %55, -1
  %58 = icmp ult i32 %class1.off.i750, 2
  %cmp23.i751 = icmp eq i32 %57, 1
  %or.cond40.i752 = or i1 %58, %cmp23.i751
  %or.cond41.i753 = or i1 %or.cond40.i752, %cmp14.i746
  br i1 %or.cond41.i753, label %merge_classes.exit763, label %if.end27.i761

if.end27.i761:                                    ; preds = %if.end18.i754
  %class1.off61.i755 = add i32 %55, -7
  %59 = icmp ult i32 %class1.off61.i755, 2
  %cmp32.i756 = icmp eq i32 %57, 7
  %or.cond43.i757 = or i1 %59, %cmp32.i756
  %cmp34.i758 = icmp eq i32 %57, 8
  %or.cond44.i759 = or i1 %or.cond43.i757, %cmp34.i758
  %..i760 = select i1 %or.cond44.i759, i32 9, i32 3
  br label %merge_classes.exit763

merge_classes.exit763:                            ; preds = %for.body335, %if.end.i735, %if.end3.i737, %if.end6.i741, %if.end10.i745, %lor.lhs.false13.i749, %if.end18.i754, %if.end27.i761
  %retval.0.i762 = phi i32 [ %55, %for.body335 ], [ %57, %if.end.i735 ], [ %55, %if.end3.i737 ], [ 9, %if.end6.i741 ], [ 2, %lor.lhs.false13.i749 ], [ 2, %if.end10.i745 ], [ 1, %if.end18.i754 ], [ %..i760, %if.end27.i761 ]
  store i32 %retval.0.i762, i32* %arrayidx344, align 4, !tbaa !5
  %indvars.iv.next861 = add nuw nsw i64 %indvars.iv860, 1
  %lftr.wideiv863 = trunc i64 %indvars.iv.next861 to i32
  %exitcond864 = icmp eq i32 %lftr.wideiv863, %call328
  br i1 %exitcond864, label %for.cond332.for.inc352_crit_edge, label %for.body335

for.cond332.for.inc352_crit_edge:                 ; preds = %merge_classes.exit763
  %phitmp = add i32 %call328, 1
  br label %for.inc352

for.inc352:                                       ; preds = %for.cond332.for.inc352_crit_edge, %for.cond332.preheader
  %i299.1.lcssa = phi i32 [ %phitmp, %for.cond332.for.inc352_crit_edge ], [ 1, %for.cond332.preheader ]
  %cmp301 = icmp slt i32 %i299.1.lcssa, %48
  br i1 %cmp301, label %for.body303, label %if.end355

if.end355:                                        ; preds = %for.inc352, %if.then289, %land.lhs.true281, %if.then276
  %values357 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %60 = load i8** %values357, align 8
  %tobool359831 = icmp eq i8* %60, null
  br i1 %tobool359831, label %for.cond406.preheader, label %for.body360.lr.ph

for.body360.lr.ph:                                ; preds = %if.end355
  %61 = bitcast i8* %60 to %union.tree_node*
  %arraydecay378 = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 0
  br label %for.body360

for.body360:                                      ; preds = %for.body360.lr.ph, %for.inc398
  %field.1832 = phi %union.tree_node* [ %61, %for.body360.lr.ph ], [ %67, %for.inc398 ]
  %code362 = getelementptr inbounds %union.tree_node* %field.1832, i64 0, i32 0, i32 0, i32 2
  %bf.load363 = load i32* %code362, align 8
  %bf.clear364 = and i32 %bf.load363, 255
  %cmp365 = icmp eq i32 %bf.clear364, 37
  br i1 %cmp365, label %if.then367, label %for.inc398

if.then367:                                       ; preds = %for.body360
  %type370 = getelementptr inbounds %union.tree_node* %field.1832, i64 0, i32 0, i32 0, i32 1
  %62 = load %union.tree_node** %type370, align 8, !tbaa !54
  %type371 = bitcast %union.tree_node* %62 to %struct.tree_type*
  %mode372 = getelementptr inbounds %struct.tree_type* %type371, i64 0, i32 6
  %bf.load373 = load i32* %mode372, align 4
  %bf.lshr374 = lshr i32 %bf.load373, 9
  %bf.clear375 = and i32 %bf.lshr374, 127
  %call379 = call fastcc i32 @classify_argument(i32 %bf.clear375, %union.tree_node* %62, i32* %arraydecay378, i32 %bit_offset)
  %tobool380 = icmp eq i32 %call379, 0
  br i1 %tobool380, label %return, label %for.cond383.preheader

for.cond383.preheader:                            ; preds = %if.then367
  %cmp384829 = icmp sgt i32 %call379, 0
  br i1 %cmp384829, label %for.body386, label %for.inc398

for.body386:                                      ; preds = %for.cond383.preheader, %merge_classes.exit
  %indvars.iv856 = phi i64 [ %indvars.iv.next857, %merge_classes.exit ], [ 0, %for.cond383.preheader ]
  %arrayidx388 = getelementptr inbounds [4 x i32]* %subclasses, i64 0, i64 %indvars.iv856
  %63 = load i32* %arrayidx388, align 4, !tbaa !5
  %arrayidx390 = getelementptr inbounds i32* %classes, i64 %indvars.iv856
  %64 = load i32* %arrayidx390, align 4, !tbaa !5
  %cmp.i = icmp eq i32 %63, %64
  br i1 %cmp.i, label %merge_classes.exit, label %if.end.i

if.end.i:                                         ; preds = %for.body386
  %cmp1.i = icmp eq i32 %63, 0
  br i1 %cmp1.i, label %merge_classes.exit, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  %cmp4.i = icmp eq i32 %64, 0
  br i1 %cmp4.i, label %merge_classes.exit, label %if.end6.i

if.end6.i:                                        ; preds = %if.end3.i
  %cmp7.i = icmp eq i32 %63, 9
  %cmp8.i = icmp eq i32 %64, 9
  %or.cond.i = or i1 %cmp7.i, %cmp8.i
  br i1 %or.cond.i, label %merge_classes.exit, label %if.end10.i

if.end10.i:                                       ; preds = %if.end6.i
  %cmp11.i = icmp eq i32 %63, 2
  %cmp12.i = icmp eq i32 %64, 4
  %or.cond37.i = and i1 %cmp11.i, %cmp12.i
  br i1 %or.cond37.i, label %merge_classes.exit, label %lor.lhs.false13.i

lor.lhs.false13.i:                                ; preds = %if.end10.i
  %cmp14.i = icmp eq i32 %64, 2
  %cmp16.i = icmp eq i32 %63, 4
  %or.cond38.i = and i1 %cmp14.i, %cmp16.i
  br i1 %or.cond38.i, label %merge_classes.exit, label %if.end18.i

if.end18.i:                                       ; preds = %lor.lhs.false13.i
  %class1.off.i = add i32 %63, -1
  %65 = icmp ult i32 %class1.off.i, 2
  %cmp23.i = icmp eq i32 %64, 1
  %or.cond40.i = or i1 %65, %cmp23.i
  %or.cond41.i = or i1 %or.cond40.i, %cmp14.i
  br i1 %or.cond41.i, label %merge_classes.exit, label %if.end27.i

if.end27.i:                                       ; preds = %if.end18.i
  %class1.off61.i = add i32 %63, -7
  %66 = icmp ult i32 %class1.off61.i, 2
  %cmp32.i = icmp eq i32 %64, 7
  %or.cond43.i = or i1 %66, %cmp32.i
  %cmp34.i = icmp eq i32 %64, 8
  %or.cond44.i = or i1 %or.cond43.i, %cmp34.i
  %..i = select i1 %or.cond44.i, i32 9, i32 3
  br label %merge_classes.exit

merge_classes.exit:                               ; preds = %for.body386, %if.end.i, %if.end3.i, %if.end6.i, %if.end10.i, %lor.lhs.false13.i, %if.end18.i, %if.end27.i
  %retval.0.i = phi i32 [ %63, %for.body386 ], [ %64, %if.end.i ], [ %63, %if.end3.i ], [ 9, %if.end6.i ], [ 2, %lor.lhs.false13.i ], [ 2, %if.end10.i ], [ 1, %if.end18.i ], [ %..i, %if.end27.i ]
  store i32 %retval.0.i, i32* %arrayidx390, align 4, !tbaa !5
  %indvars.iv.next857 = add nuw nsw i64 %indvars.iv856, 1
  %lftr.wideiv858 = trunc i64 %indvars.iv.next857 to i32
  %exitcond859 = icmp eq i32 %lftr.wideiv858, %call379
  br i1 %exitcond859, label %for.inc398, label %for.body386

for.inc398:                                       ; preds = %merge_classes.exit, %for.cond383.preheader, %for.body360
  %chain400 = getelementptr inbounds %union.tree_node* %field.1832, i64 0, i32 0, i32 0, i32 0
  %67 = load %union.tree_node** %chain400, align 8, !tbaa !27
  %tobool359 = icmp eq %union.tree_node* %67, null
  br i1 %tobool359, label %for.cond406.preheader, label %for.body360

if.else402:                                       ; preds = %if.end47
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 1809, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.classify_argument, i64 0, i64 0)) #8
  unreachable

for.body409:                                      ; preds = %for.cond406.preheader, %for.inc450
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc450 ], [ 0, %for.cond406.preheader ]
  %arrayidx411 = getelementptr inbounds i32* %classes, i64 %indvars.iv
  %68 = load i32* %arrayidx411, align 4, !tbaa !5
  switch i32 %68, label %for.inc450 [
    i32 9, label %return
    i32 6, label %land.lhs.true420
    i32 8, label %land.lhs.true437
  ]

land.lhs.true420:                                 ; preds = %for.body409
  %69 = trunc i64 %indvars.iv to i32
  %cmp421 = icmp eq i32 %69, 0
  br i1 %cmp421, label %if.end432.thread, label %lor.lhs.false423

lor.lhs.false423:                                 ; preds = %land.lhs.true420
  %70 = add nsw i64 %indvars.iv, -1
  %arrayidx426 = getelementptr inbounds i32* %classes, i64 %70
  %71 = load i32* %arrayidx426, align 4, !tbaa !5
  %cmp427 = icmp eq i32 %71, 3
  br i1 %cmp427, label %for.inc450, label %if.end432.thread

if.end432.thread:                                 ; preds = %land.lhs.true420, %lor.lhs.false423
  store i32 3, i32* %arrayidx411, align 4, !tbaa !5
  br label %for.inc450

land.lhs.true437:                                 ; preds = %for.body409
  %72 = trunc i64 %indvars.iv to i32
  %cmp438 = icmp eq i32 %72, 0
  br i1 %cmp438, label %if.then446, label %lor.lhs.false440

lor.lhs.false440:                                 ; preds = %land.lhs.true437
  %73 = add nsw i64 %indvars.iv, -1
  %arrayidx443 = getelementptr inbounds i32* %classes, i64 %73
  %74 = load i32* %arrayidx443, align 4, !tbaa !5
  %cmp444 = icmp eq i32 %74, 7
  br i1 %cmp444, label %for.inc450, label %if.then446

if.then446:                                       ; preds = %lor.lhs.false440, %land.lhs.true437
  store i32 3, i32* %arrayidx411, align 4, !tbaa !5
  br label %for.inc450

for.inc450:                                       ; preds = %for.body409, %lor.lhs.false423, %if.end432.thread, %lor.lhs.false440, %if.then446
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %75 = trunc i64 %indvars.iv.next to i32
  %cmp407 = icmp slt i32 %75, %div
  br i1 %cmp407, label %for.body409, label %return

if.end453:                                        ; preds = %land.lhs.true, %cond.end
  switch i32 %mode, label %if.else466 [
    i32 17, label %if.end471
    i32 51, label %return
    i32 0, label %return
  ]

if.else466:                                       ; preds = %if.end453
  %idxprom460 = sext i32 %mode to i64
  %arrayidx461 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom460
  %76 = load i16* %arrayidx461, align 2, !tbaa !102
  %conv462 = zext i16 %76 to i32
  %cmp467 = icmp eq i32 %mode, 23
  %.conv462 = select i1 %cmp467, i32 256, i32 %conv462
  br label %if.end471

if.end471:                                        ; preds = %if.else466, %if.end453
  %mode_alignment.0 = phi i32 [ 128, %if.end453 ], [ %.conv462, %if.else466 ]
  %rem472 = srem i32 %bit_offset, %mode_alignment.0
  %tobool473 = icmp eq i32 %rem472, 0
  br i1 %tobool473, label %if.end476, label %return

if.end476:                                        ; preds = %if.end471
  switch i32 %mode, label %sw.default [
    i32 5, label %if.end476.sw.bb_crit_edge
    i32 4, label %if.end476.sw.bb_crit_edge870
    i32 3, label %if.end476.sw.bb_crit_edge871
    i32 2, label %if.end476.sw.bb_crit_edge872
    i32 27, label %if.end476.sw.bb_crit_edge873
    i32 26, label %if.end476.sw.bb_crit_edge874
    i32 25, label %sw.bb
    i32 28, label %sw.bb488
    i32 6, label %sw.bb488
    i32 29, label %sw.bb491
    i32 15, label %sw.bb496
    i32 16, label %sw.bb504
    i32 18, label %sw.bb506
    i32 24, label %sw.bb509
    i32 22, label %sw.bb514
    i32 21, label %sw.bb517
    i32 46, label %sw.bb519
    i32 37, label %sw.bb519
    i32 44, label %sw.bb522
    i32 33, label %sw.bb522
    i32 36, label %sw.bb522
    i32 39, label %sw.bb522
    i32 51, label %return
    i32 0, label %return
  ]

if.end476.sw.bb_crit_edge874:                     ; preds = %if.end476
  br label %sw.bb

if.end476.sw.bb_crit_edge873:                     ; preds = %if.end476
  br label %sw.bb

if.end476.sw.bb_crit_edge872:                     ; preds = %if.end476
  br label %sw.bb

if.end476.sw.bb_crit_edge871:                     ; preds = %if.end476
  br label %sw.bb

if.end476.sw.bb_crit_edge870:                     ; preds = %if.end476
  br label %sw.bb

if.end476.sw.bb_crit_edge:                        ; preds = %if.end476
  br label %sw.bb

sw.bb:                                            ; preds = %if.end476, %if.end476.sw.bb_crit_edge874, %if.end476.sw.bb_crit_edge873, %if.end476.sw.bb_crit_edge872, %if.end476.sw.bb_crit_edge871, %if.end476.sw.bb_crit_edge870, %if.end476.sw.bb_crit_edge
  %.in = phi i16* [ getelementptr inbounds ([59 x i16]* @mode_bitsize, i64 0, i64 26), %if.end476.sw.bb_crit_edge874 ], [ getelementptr inbounds ([59 x i16]* @mode_bitsize, i64 0, i64 27), %if.end476.sw.bb_crit_edge873 ], [ getelementptr inbounds ([59 x i16]* @mode_bitsize, i64 0, i64 2), %if.end476.sw.bb_crit_edge872 ], [ getelementptr inbounds ([59 x i16]* @mode_bitsize, i64 0, i64 3), %if.end476.sw.bb_crit_edge871 ], [ getelementptr inbounds ([59 x i16]* @mode_bitsize, i64 0, i64 4), %if.end476.sw.bb_crit_edge870 ], [ getelementptr inbounds ([59 x i16]* @mode_bitsize, i64 0, i64 5), %if.end476.sw.bb_crit_edge ], [ getelementptr inbounds ([59 x i16]* @mode_bitsize, i64 0, i64 25), %if.end476 ]
  %77 = load i16* %.in, align 2
  %conv479 = zext i16 %77 to i32
  %add480 = add nsw i32 %conv479, %bit_offset
  %cmp481 = icmp slt i32 %add480, 33
  %. = select i1 %cmp481, i32 2, i32 1
  store i32 %., i32* %classes, align 4, !tbaa !5
  br label %return

sw.bb488:                                         ; preds = %if.end476, %if.end476
  %arrayidx489 = getelementptr inbounds i32* %classes, i64 1
  store i32 1, i32* %arrayidx489, align 4, !tbaa !5
  store i32 1, i32* %classes, align 4, !tbaa !5
  br label %return

sw.bb491:                                         ; preds = %if.end476
  %78 = bitcast i32* %classes to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %78, align 4, !tbaa !5
  br label %return

sw.bb496:                                         ; preds = %if.end476
  %rem497685 = and i32 %bit_offset, 63
  %tobool498 = icmp eq i32 %rem497685, 0
  %.687 = select i1 %tobool498, i32 4, i32 3
  store i32 %.687, i32* %classes, align 4, !tbaa !5
  br label %return

sw.bb504:                                         ; preds = %if.end476
  store i32 5, i32* %classes, align 4, !tbaa !5
  br label %return

sw.bb506:                                         ; preds = %if.end476
  store i32 7, i32* %classes, align 4, !tbaa !5
  %arrayidx508 = getelementptr inbounds i32* %classes, i64 1
  store i32 8, i32* %arrayidx508, align 4, !tbaa !5
  br label %return

sw.bb509:                                         ; preds = %if.end476
  store i32 7, i32* %classes, align 4, !tbaa !5
  %arrayidx511 = getelementptr inbounds i32* %classes, i64 1
  store i32 8, i32* %arrayidx511, align 4, !tbaa !5
  %arrayidx512 = getelementptr inbounds i32* %classes, i64 2
  store i32 7, i32* %arrayidx512, align 4, !tbaa !5
  %arrayidx513 = getelementptr inbounds i32* %classes, i64 3
  store i32 8, i32* %arrayidx513, align 4, !tbaa !5
  br label %return

sw.bb514:                                         ; preds = %if.end476
  store i32 5, i32* %classes, align 4, !tbaa !5
  %arrayidx516 = getelementptr inbounds i32* %classes, i64 1
  store i32 5, i32* %arrayidx516, align 4, !tbaa !5
  br label %return

sw.bb517:                                         ; preds = %if.end476
  store i32 3, i32* %classes, align 4, !tbaa !5
  br label %return

sw.bb519:                                         ; preds = %if.end476, %if.end476
  store i32 3, i32* %classes, align 4, !tbaa !5
  %arrayidx521 = getelementptr inbounds i32* %classes, i64 1
  store i32 6, i32* %arrayidx521, align 4, !tbaa !5
  br label %return

sw.bb522:                                         ; preds = %if.end476, %if.end476, %if.end476, %if.end476
  store i32 3, i32* %classes, align 4, !tbaa !5
  br label %return

sw.default:                                       ; preds = %if.end476
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i32 1912, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.classify_argument, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %for.body303, %if.then367, %for.body75, %if.else, %for.body409, %for.inc450, %for.cond250.preheader, %for.cond406.preheader, %if.end476, %if.end476, %if.end453, %if.end453, %if.end471, %if.then216, %if.then, %sw.bb522, %sw.bb519, %sw.bb517, %sw.bb514, %sw.bb509, %sw.bb506, %sw.bb504, %sw.bb496, %sw.bb491, %sw.bb488, %sw.bb, %if.then45
  %retval.0 = phi i32 [ 1, %if.then45 ], [ 1, %sw.bb522 ], [ 2, %sw.bb519 ], [ 1, %sw.bb517 ], [ 2, %sw.bb514 ], [ 4, %sw.bb509 ], [ 2, %sw.bb506 ], [ 1, %sw.bb504 ], [ 1, %sw.bb496 ], [ 4, %sw.bb491 ], [ 2, %sw.bb488 ], [ 1, %sw.bb ], [ 0, %if.then ], [ 0, %if.then216 ], [ 0, %if.end471 ], [ 0, %if.end453 ], [ 0, %if.end453 ], [ 0, %if.end476 ], [ 0, %if.end476 ], [ %div, %for.cond406.preheader ], [ %div, %for.cond250.preheader ], [ 0, %for.body409 ], [ %div, %for.inc450 ], [ 0, %if.else ], [ 0, %for.body75 ], [ 0, %if.then367 ], [ 0, %for.body303 ]
  ret i32 %retval.0
}

declare i32 @mode_for_size(i32, i32, i32) #0

declare i64 @tree_low_cst(%union.tree_node*, i32) #0

declare i64 @int_bit_position(%union.tree_node*) #0

declare i32 @compare_tree_int(%union.tree_node*, i64) #0

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #7

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

attributes #0 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { noreturn nounwind }
attributes #9 = { cold }
attributes #10 = { cold nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !3, metadata !3, i64 0}
!6 = metadata !{metadata !7, metadata !7, i64 0}
!7 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!8 = metadata !{metadata !9, metadata !3, i64 996}
!9 = metadata !{metadata !"recog_data", metadata !3, i64 0, metadata !3, i64 240, metadata !3, i64 480, metadata !3, i64 720, metadata !3, i64 840, metadata !3, i64 960, metadata !3, i64 992, metadata !3, i64 996, metadata !3, i64 997, metadata !3, i64 998, metadata !7, i64 1000}
!10 = metadata !{metadata !11, metadata !2, i64 0}
!11 = metadata !{metadata !"rtvec_def", metadata !2, i64 0, metadata !3, i64 8}
!12 = metadata !{metadata !13, metadata !2, i64 24}
!13 = metadata !{metadata !"ppro_sched_data", metadata !3, i64 0, metadata !2, i64 24}
!14 = metadata !{metadata !15, metadata !7, i64 48}
!15 = metadata !{metadata !"tree_type", metadata !16, i64 0, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !2, i64 56, metadata !2, i64 60, metadata !3, i64 61, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 62, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 63, metadata !2, i64 64, metadata !7, i64 72, metadata !7, i64 80, metadata !3, i64 88, metadata !7, i64 96, metadata !7, i64 104, metadata !7, i64 112, metadata !7, i64 120, metadata !7, i64 128, metadata !7, i64 136, metadata !7, i64 144, metadata !17, i64 152, metadata !7, i64 160}
!16 = metadata !{metadata !"tree_common", metadata !7, i64 0, metadata !7, i64 8, metadata !3, i64 16, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19}
!17 = metadata !{metadata !"long long", metadata !3, i64 0}
!18 = metadata !{metadata !19, metadata !7, i64 8}
!19 = metadata !{metadata !"builtin_description", metadata !2, i64 0, metadata !3, i64 4, metadata !7, i64 8, metadata !3, i64 16, metadata !3, i64 20, metadata !2, i64 24}
!20 = metadata !{metadata !19, metadata !3, i64 4}
!21 = metadata !{metadata !22, metadata !7, i64 24}
!22 = metadata !{metadata !"insn_data", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !3, i64 32, metadata !3, i64 33, metadata !3, i64 34, metadata !3, i64 35}
!23 = metadata !{metadata !19, metadata !2, i64 0}
!24 = metadata !{metadata !19, metadata !3, i64 16}
!25 = metadata !{metadata !26, metadata !7, i64 32}
!26 = metadata !{metadata !"tree_list", metadata !16, i64 0, metadata !7, i64 24, metadata !7, i64 32}
!27 = metadata !{metadata !16, metadata !7, i64 0}
!28 = metadata !{metadata !29, metadata !7, i64 0}
!29 = metadata !{metadata !"insn_operand_data", metadata !7, i64 0, metadata !7, i64 8, metadata !3, i64 16, metadata !3, i64 18, metadata !3, i64 19}
!30 = metadata !{metadata !22, metadata !7, i64 16}
!31 = metadata !{metadata !32, metadata !7, i64 392}
!32 = metadata !{metadata !"function", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !2, i64 64, metadata !2, i64 68, metadata !2, i64 72, metadata !2, i64 76, metadata !7, i64 80, metadata !33, i64 88, metadata !7, i64 120, metadata !7, i64 128, metadata !7, i64 136, metadata !7, i64 144, metadata !2, i64 152, metadata !7, i64 160, metadata !7, i64 168, metadata !7, i64 176, metadata !7, i64 184, metadata !7, i64 192, metadata !7, i64 200, metadata !7, i64 208, metadata !7, i64 216, metadata !7, i64 224, metadata !7, i64 232, metadata !7, i64 240, metadata !7, i64 248, metadata !7, i64 256, metadata !17, i64 264, metadata !7, i64 272, metadata !7, i64 280, metadata !7, i64 288, metadata !7, i64 296, metadata !2, i64 304, metadata !7, i64 312, metadata !7, i64 320, metadata !2, i64 328, metadata !2, i64 332, metadata !2, i64 336, metadata !7, i64 344, metadata !2, i64 352, metadata !2, i64 356, metadata !7, i64 360, metadata !7, i64 368, metadata !7, i64 376, metadata !2, i64 384, metadata !2, i64 388, metadata !7, i64 392, metadata !2, i64 400, metadata !2, i64 404, metadata !7, i64 408, metadata !7, i64 416, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426}
!33 = metadata !{metadata !"ix86_args", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24}
!34 = metadata !{metadata !19, metadata !3, i64 20}
!35 = metadata !{metadata !19, metadata !2, i64 24}
!36 = metadata !{metadata !37, metadata !7, i64 0}
!37 = metadata !{metadata !"pta", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 12}
!38 = metadata !{metadata !37, metadata !3, i64 8}
!39 = metadata !{metadata !40, metadata !7, i64 0}
!40 = metadata !{metadata !"ptt", metadata !7, i64 0, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !2, i64 28, metadata !2, i64 32, metadata !2, i64 36}
!41 = metadata !{metadata !40, metadata !2, i64 8}
!42 = metadata !{metadata !40, metadata !2, i64 12}
!43 = metadata !{metadata !40, metadata !2, i64 16}
!44 = metadata !{metadata !40, metadata !2, i64 20}
!45 = metadata !{metadata !40, metadata !2, i64 24}
!46 = metadata !{metadata !40, metadata !2, i64 28}
!47 = metadata !{metadata !40, metadata !2, i64 32}
!48 = metadata !{metadata !40, metadata !2, i64 36}
!49 = metadata !{metadata !50, metadata !7, i64 32}
!50 = metadata !{metadata !"tree_identifier", metadata !16, i64 0, metadata !51, i64 24}
!51 = metadata !{metadata !"ht_identifier", metadata !2, i64 0, metadata !7, i64 8}
!52 = metadata !{metadata !53, metadata !53, i64 0}
!53 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!54 = metadata !{metadata !16, metadata !7, i64 8}
!55 = metadata !{metadata !56, metadata !17, i64 32}
!56 = metadata !{metadata !"tree_int_cst", metadata !16, i64 0, metadata !7, i64 24, metadata !57, i64 32}
!57 = metadata !{metadata !"", metadata !17, i64 0, metadata !17, i64 8}
!58 = metadata !{metadata !33, metadata !2, i64 4}
!59 = metadata !{metadata !33, metadata !2, i64 16}
!60 = metadata !{metadata !33, metadata !2, i64 24}
!61 = metadata !{metadata !33, metadata !2, i64 0}
!62 = metadata !{metadata !33, metadata !2, i64 8}
!63 = metadata !{metadata !33, metadata !2, i64 20}
!64 = metadata !{metadata !33, metadata !2, i64 12}
!65 = metadata !{metadata !15, metadata !2, i64 64}
!66 = metadata !{metadata !67, metadata !7, i64 80}
!67 = metadata !{metadata !"tree_decl", metadata !16, i64 0, metadata !7, i64 24, metadata !2, i64 32, metadata !2, i64 36, metadata !7, i64 40, metadata !3, i64 48, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !3, i64 51, metadata !2, i64 51, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !3, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !7, i64 80, metadata !7, i64 88, metadata !7, i64 96, metadata !7, i64 104, metadata !7, i64 112, metadata !7, i64 120, metadata !7, i64 128, metadata !7, i64 136, metadata !7, i64 144, metadata !7, i64 152, metadata !3, i64 160, metadata !7, i64 168, metadata !7, i64 176, metadata !7, i64 184, metadata !17, i64 192, metadata !7, i64 200}
!68 = metadata !{metadata !15, metadata !7, i64 96}
!69 = metadata !{metadata !15, metadata !7, i64 24}
!70 = metadata !{metadata !71, metadata !2, i64 1416}
!71 = metadata !{metadata !"machine_function", metadata !3, i64 0, metadata !2, i64 1416, metadata !2, i64 1420}
!72 = metadata !{i64 0, i64 4, metadata !1, i64 4, i64 4, metadata !1, i64 8, i64 4, metadata !1, i64 12, i64 4, metadata !1, i64 16, i64 4, metadata !1, i64 20, i64 4, metadata !1, i64 24, i64 4, metadata !1}
!73 = metadata !{metadata !32, metadata !2, i64 88}
!74 = metadata !{metadata !32, metadata !2, i64 96}
!75 = metadata !{metadata !32, metadata !2, i64 108}
!76 = metadata !{metadata !32, metadata !2, i64 404}
!77 = metadata !{metadata !17, metadata !17, i64 0}
!78 = metadata !{metadata !79, metadata !7, i64 16}
!79 = metadata !{metadata !"ix86_address", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !17, i64 24}
!80 = metadata !{metadata !79, metadata !7, i64 0}
!81 = metadata !{metadata !79, metadata !7, i64 8}
!82 = metadata !{metadata !79, metadata !17, i64 24}
!83 = metadata !{metadata !32, metadata !7, i64 24}
!84 = metadata !{metadata !85, metadata !7, i64 64}
!85 = metadata !{metadata !"emit_status", metadata !2, i64 0, metadata !2, i64 4, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !2, i64 40, metadata !2, i64 44, metadata !7, i64 48, metadata !2, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !7, i64 80}
!86 = metadata !{metadata !32, metadata !2, i64 64}
!87 = metadata !{metadata !32, metadata !2, i64 68}
!88 = metadata !{metadata !89, metadata !17, i64 40}
!89 = metadata !{metadata !"ix86_frame", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !17, i64 16, metadata !2, i64 24, metadata !2, i64 28, metadata !2, i64 32, metadata !17, i64 40, metadata !17, i64 48, metadata !17, i64 56, metadata !17, i64 64}
!90 = metadata !{metadata !89, metadata !2, i64 0}
!91 = metadata !{metadata !32, metadata !2, i64 400}
!92 = metadata !{metadata !89, metadata !17, i64 56}
!93 = metadata !{metadata !89, metadata !2, i64 8}
!94 = metadata !{metadata !89, metadata !2, i64 4}
!95 = metadata !{metadata !89, metadata !17, i64 48}
!96 = metadata !{metadata !32, metadata !2, i64 76}
!97 = metadata !{metadata !89, metadata !2, i64 28}
!98 = metadata !{metadata !89, metadata !2, i64 24}
!99 = metadata !{metadata !89, metadata !17, i64 64}
!100 = metadata !{metadata !89, metadata !2, i64 32}
!101 = metadata !{metadata !71, metadata !2, i64 1420}
!102 = metadata !{metadata !103, metadata !103, i64 0}
!103 = metadata !{metadata !"short", metadata !3, i64 0}
!104 = metadata !{metadata !105, metadata !105, i64 0}
!105 = metadata !{metadata !"long", metadata !3, i64 0}
!106 = metadata !{metadata !107, metadata !2, i64 32}
!107 = metadata !{metadata !"tree_string", metadata !16, i64 0, metadata !7, i64 24, metadata !2, i64 32, metadata !7, i64 40}
!108 = metadata !{metadata !15, metadata !7, i64 32}
!109 = metadata !{metadata !56, metadata !17, i64 40}
!110 = metadata !{metadata !111, metadata !2, i64 148}
!111 = metadata !{metadata !"processor_costs", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !2, i64 28, metadata !2, i64 32, metadata !2, i64 36, metadata !2, i64 40, metadata !2, i64 44, metadata !3, i64 48, metadata !3, i64 60, metadata !2, i64 72, metadata !3, i64 76, metadata !3, i64 88, metadata !2, i64 100, metadata !3, i64 104, metadata !3, i64 112, metadata !2, i64 120, metadata !3, i64 124, metadata !3, i64 136, metadata !2, i64 148, metadata !2, i64 152, metadata !2, i64 156}
!112 = metadata !{metadata !111, metadata !2, i64 72}
!113 = metadata !{metadata !111, metadata !2, i64 120}
!114 = metadata !{metadata !111, metadata !2, i64 100}
!115 = metadata !{metadata !67, metadata !7, i64 144}
!116 = metadata !{metadata !15, metadata !7, i64 136}
!117 = metadata !{metadata !118, metadata !2, i64 24}
!118 = metadata !{metadata !"tree_vec", metadata !16, i64 0, metadata !2, i64 24, metadata !3, i64 32}
!119 = metadata !{metadata !67, metadata !7, i64 40}
