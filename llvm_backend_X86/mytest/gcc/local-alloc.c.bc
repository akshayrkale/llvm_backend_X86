; ModuleID = 'local-alloc.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.qty = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i8 }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [4 x %struct.rtx_def**], [4 x i8], i8, i8, i8, %struct.rtx_def* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.equivalence = type { i8, %struct.rtx_def*, %struct.rtx_def**, i32, %struct.rtx_def* }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct._IO_FILE = type opaque

@recorded_label_ref = internal unnamed_addr global i1 false
@max_regno = external global i32
@qty = internal unnamed_addr global %struct.qty* null, align 8
@qty_phys_copy_sugg = internal unnamed_addr global i64* null, align 8
@qty_phys_num_copy_sugg = internal unnamed_addr global i16* null, align 8
@qty_phys_sugg = internal unnamed_addr global i64* null, align 8
@qty_phys_num_sugg = internal unnamed_addr global i16* null, align 8
@reg_qty = internal unnamed_addr global i32* null, align 8
@reg_offset = internal unnamed_addr global i8* null, align 8
@reg_next_in_qty = internal unnamed_addr global i32* null, align 8
@reg_n_info = external global %struct.varray_head_tag*
@next_qty = internal unnamed_addr global i32 0, align 4
@n_basic_blocks = external global i32
@global_rtl = external global [11 x %struct.rtx_def*]
@reg_renumber = common global i16* null, align 8
@.str = private unnamed_addr constant [23 x i8] c";; Register %d in %d.\0A\00", align 1
@basic_block_info = external global %struct.varray_head_tag*
@.str1 = private unnamed_addr constant [14 x i8] c"local-alloc.c\00", align 1
@__FUNCTION__.block_alloc = private unnamed_addr constant [12 x i8] c"block_alloc\00", align 1
@regs_live_at = internal unnamed_addr global i64* null, align 8
@regs_live = internal global i64 0, align 8
@rtx_class = external constant [153 x i8]
@this_insn_number = internal unnamed_addr global i32 0, align 4
@this_insn = internal unnamed_addr global %struct.rtx_def* null, align 8
@which_alternative = external global i32
@optimize = external global i32
@recog_data = external global %struct.recog_data
@cfun = external global %struct.function*
@call_used_regs = external global [53 x i8]
@rtx_format = external constant [153 x i8*]
@__FUNCTION__.find_free_reg = private unnamed_addr constant [14 x i8] c"find_free_reg\00", align 1
@call_fixed_reg_set = external global i64
@fixed_reg_set = external global i64
@call_used_reg_set = external global i64
@losing_caller_save_reg_set = external global i64
@reg_class_contents = external global [25 x i64]
@reg_alloc_order = external global [53 x i32]
@mode_class = external constant [59 x i32]
@target_flags = external global i32
@mode_size = external constant [59 x i8]
@flag_caller_saves = external global i32
@caller_save_needed = external global i32
@x86_partial_reg_stall = external constant i32
@ix86_cpu = external global i32
@_sch_istable = external constant [256 x i16]
@reg_equiv = internal unnamed_addr global %struct.equivalence* null, align 8
@const_int_rtx = external global [129 x %struct.rtx_def*]
@__FUNCTION__.update_equiv_regs = private unnamed_addr constant [18 x i8] c"update_equiv_regs\00", align 1
@rtx_length = external constant [153 x i8]
@equiv_mem = internal unnamed_addr global %struct.rtx_def* null, align 8
@equiv_mem_modified = internal unnamed_addr global i1 false

; Function Attrs: nounwind uwtable
define i32 @local_alloc() #0 {
entry:
  %cleared_regs.i = alloca %struct.bitmap_head_def, align 8
  store i1 false, i1* @recorded_label_ref, align 1
  call void @x86_order_regs_for_local_alloc() #2
  %0 = bitcast %struct.bitmap_head_def* %cleared_regs.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %0) #2
  %1 = load i32* @max_regno, align 4, !tbaa !1
  %conv.i = sext i32 %1 to i64
  %call.i = call noalias i8* @xcalloc(i64 %conv.i, i64 40) #2
  %2 = bitcast i8* %call.i to %struct.equivalence*
  store %struct.equivalence* %2, %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %call1.i = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %cleared_regs.i) #2
  call void @init_alias_analysis() #2
  %3 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp1097.i = icmp sgt i32 %3, 0
  br i1 %cmp1097.i, label %for.body.i, label %update_equiv_regs.exit

for.cond446.preheader.i:                          ; preds = %for.inc443.i
  %cmp4471079.i = icmp sgt i32 %118, 0
  br i1 %cmp4471079.i, label %for.body449.lr.ph.i, label %update_equiv_regs.exit

for.body449.lr.ph.i:                              ; preds = %for.cond446.preheader.i
  %4 = sext i32 %118 to i64
  br label %for.body449.i

for.body.i:                                       ; preds = %entry, %for.inc443.i
  %5 = phi i32 [ %118, %for.inc443.i ], [ %3, %entry ]
  %indvars.iv1114.i = phi i64 [ %indvars.iv.next1115.i, %for.inc443.i ], [ 0, %entry ]
  %6 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data.i = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 4
  %bb3.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb3.i, i64 0, i64 %indvars.iv1114.i
  %7 = load %struct.basic_block_def** %arrayidx.i, align 8, !tbaa !5
  %loop_depth4.i = getelementptr inbounds %struct.basic_block_def* %7, i64 0, i32 12
  %8 = load i32* %loop_depth4.i, align 4, !tbaa !7
  %head.i = getelementptr inbounds %struct.basic_block_def* %7, i64 0, i32 0
  %insn.01090.i = load %struct.rtx_def** %head.i, align 8
  %end.i = getelementptr inbounds %struct.basic_block_def* %7, i64 0, i32 1
  %9 = load %struct.rtx_def** %end.i, align 8, !tbaa !10
  %arrayidx61091.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 2
  %rtx1092.i = bitcast %union.rtunion_def* %arrayidx61091.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx1092.i, align 8, !tbaa !5
  %cmp71093.i = icmp eq %struct.rtx_def* %insn.01090.i, %10
  br i1 %cmp71093.i, label %for.inc443.i, label %for.body9.i

for.body9.i:                                      ; preds = %for.body.i, %for.inc438.i
  %insn.01094.i = phi %struct.rtx_def* [ %insn.0.i, %for.inc438.i ], [ %insn.01090.i, %for.body.i ]
  %11 = getelementptr inbounds %struct.rtx_def* %insn.01094.i, i64 0, i32 0
  %bf.load.i = load i32* %11, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom101000.i = zext i32 %bf.clear.i to i64
  %arrayidx11.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom101000.i
  %12 = load i8* %arrayidx11.i, align 1, !tbaa !11
  %cmp13.i = icmp eq i8 %12, 105
  br i1 %cmp13.i, label %if.end.i, label %for.inc438.i

if.end.i:                                         ; preds = %for.body9.i
  %arrayidx16.i = getelementptr inbounds %struct.rtx_def* %insn.01094.i, i64 0, i32 1, i64 6
  %rtx17.i = bitcast %union.rtunion_def* %arrayidx16.i to %struct.rtx_def**
  %note.01084.i = load %struct.rtx_def** %rtx17.i, align 8
  %tobool1085.i = icmp eq %struct.rtx_def* %note.01084.i, null
  br i1 %tobool1085.i, label %for.end.i, label %for.body19.i

for.body19.i:                                     ; preds = %if.end.i, %for.inc.i
  %note.01086.i = phi %struct.rtx_def* [ %note.0.i, %for.inc.i ], [ %note.01084.i, %if.end.i ]
  %13 = getelementptr inbounds %struct.rtx_def* %note.01086.i, i64 0, i32 0
  %bf.load20.i = load i32* %13, align 8
  %bf.clear21.i = and i32 %bf.load20.i, 16711680
  %cmp22.i = icmp eq i32 %bf.clear21.i, 131072
  br i1 %cmp22.i, label %if.then24.i, label %for.inc.i

if.then24.i:                                      ; preds = %for.body19.i
  %arrayidx26.i = getelementptr inbounds %struct.rtx_def* %note.01086.i, i64 0, i32 1, i64 0
  %rtx27.i = bitcast %union.rtunion_def* %arrayidx26.i to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx27.i, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load.i.i = load i32* %15, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 65535
  %cmp.i.i = icmp eq i32 %bf.clear.i.i, 61
  br i1 %cmp.i.i, label %if.end.i.i, label %for.inc.i

if.end.i.i:                                       ; preds = %if.then24.i
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0
  %rtuint.i.i = bitcast %union.rtunion_def* %arrayidx.i.i to i32*
  %16 = load i32* %rtuint.i.i, align 4, !tbaa !1
  %idxprom.i.i = sext i32 %16 to i64
  %17 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns.i.i = getelementptr inbounds %struct.equivalence* %17, i64 %idxprom.i.i, i32 4
  %18 = load %struct.rtx_def** %init_insns.i.i, align 8, !tbaa !12
  %19 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %cmp2.i.i = icmp eq %struct.rtx_def* %18, %19
  br i1 %cmp2.i.i, label %for.inc.i, label %for.cond.preheader.i.i

for.cond.preheader.i.i:                           ; preds = %if.end.i.i
  %tobool22.i.i = icmp eq %struct.rtx_def* %18, null
  br i1 %tobool22.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.preheader.i.i, %for.body.i.i
  %list.023.i.i = phi %struct.rtx_def* [ %21, %for.body.i.i ], [ %18, %for.cond.preheader.i.i ]
  %fld5.i.i = getelementptr inbounds %struct.rtx_def* %list.023.i.i, i64 0, i32 1
  %rtx.i.i = bitcast [1 x %union.rtunion_def]* %fld5.i.i to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !5
  %call.i.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %20, i32 3, %struct.rtx_def* null) #2
  call void @remove_note(%struct.rtx_def* %20, %struct.rtx_def* %call.i.i) #2
  %arrayidx8.i.i = getelementptr inbounds %struct.rtx_def* %list.023.i.i, i64 0, i32 1, i64 1
  %rtx9.i.i = bitcast %union.rtunion_def* %arrayidx8.i.i to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx9.i.i, align 8, !tbaa !5
  %tobool.i.i = icmp eq %struct.rtx_def* %21, null
  br i1 %tobool.i.i, label %for.cond.for.end_crit_edge.i.i, label %for.body.i.i

for.cond.for.end_crit_edge.i.i:                   ; preds = %for.body.i.i
  %.pre.i.i = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %.pre24.i.i = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.cond.for.end_crit_edge.i.i, %for.cond.preheader.i.i
  %22 = phi %struct.equivalence* [ %.pre24.i.i, %for.cond.for.end_crit_edge.i.i ], [ %17, %for.cond.preheader.i.i ]
  %23 = phi %struct.rtx_def* [ %.pre.i.i, %for.cond.for.end_crit_edge.i.i ], [ %19, %for.cond.preheader.i.i ]
  %init_insns12.i.i = getelementptr inbounds %struct.equivalence* %22, i64 %idxprom.i.i, i32 4
  store %struct.rtx_def* %23, %struct.rtx_def** %init_insns12.i.i, align 8, !tbaa !12
  %24 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replacement.i.i = getelementptr inbounds %struct.equivalence* %24, i64 %idxprom.i.i, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %replacement.i.i, align 8, !tbaa !14
  br label %for.inc.i

for.inc.i:                                        ; preds = %for.end.i.i, %if.end.i.i, %if.then24.i, %for.body19.i
  %arrayidx30.i = getelementptr inbounds %struct.rtx_def* %note.01086.i, i64 0, i32 1, i64 1
  %rtx31.i = bitcast %union.rtunion_def* %arrayidx30.i to %struct.rtx_def**
  %note.0.i = load %struct.rtx_def** %rtx31.i, align 8
  %tobool.i = icmp eq %struct.rtx_def* %note.0.i, null
  br i1 %tobool.i, label %for.cond18.for.end_crit_edge.i, label %for.body19.i

for.cond18.for.end_crit_edge.i:                   ; preds = %for.inc.i
  %bf.load32.pre.i = load i32* %11, align 8
  br label %for.end.i

for.end.i:                                        ; preds = %for.cond18.for.end_crit_edge.i, %if.end.i
  %bf.load32.i = phi i32 [ %bf.load32.pre.i, %for.cond18.for.end_crit_edge.i ], [ %bf.load.i, %if.end.i ]
  %bf.clear33.i = and i32 %bf.load32.i, 65535
  %idxprom341001.i = zext i32 %bf.clear33.i to i64
  %arrayidx35.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom341001.i
  %25 = load i8* %arrayidx35.i, align 1, !tbaa !11
  %cmp37.i = icmp eq i8 %25, 105
  %arrayidx40.i = getelementptr inbounds %struct.rtx_def* %insn.01094.i, i64 0, i32 1, i64 3
  %rtx41.i = bitcast %union.rtunion_def* %arrayidx40.i to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx41.i, align 8, !tbaa !5
  br i1 %cmp37.i, label %cond.true.i, label %if.then59.i

cond.true.i:                                      ; preds = %for.end.i
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load42.i = load i32* %27, align 8
  %bf.clear43.i = and i32 %bf.load42.i, 65535
  %cmp44.i = icmp eq i32 %bf.clear43.i, 47
  br i1 %cmp44.i, label %cond.end55.i, label %cond.false.i

cond.false.i:                                     ; preds = %cond.true.i
  %call53.i = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.01094.i, %struct.rtx_def* %26) #2
  %.pre1117.i = load %struct.rtx_def** %rtx41.i, align 8, !tbaa !5
  br label %cond.end55.i

cond.end55.i:                                     ; preds = %cond.false.i, %cond.true.i
  %28 = phi %struct.rtx_def* [ %.pre1117.i, %cond.false.i ], [ %26, %cond.true.i ]
  %cond56.i = phi %struct.rtx_def* [ %call53.i, %cond.false.i ], [ %26, %cond.true.i ]
  %cmp57.i = icmp eq %struct.rtx_def* %cond56.i, null
  br i1 %cmp57.i, label %if.then59.i, label %if.else.i

if.then59.i:                                      ; preds = %cond.end55.i, %for.end.i
  %29 = phi %struct.rtx_def* [ %28, %cond.end55.i ], [ %26, %for.end.i ]
  call void @note_stores(%struct.rtx_def* %29, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @no_equiv, i8* null) #2
  br label %for.inc438.i

if.else.i:                                        ; preds = %cond.end55.i
  %30 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load66.i = load i32* %30, align 8
  %bf.clear67.i = and i32 %bf.load66.i, 65535
  %cmp68.i = icmp eq i32 %bf.clear67.i, 39
  br i1 %cmp68.i, label %if.then70.i, label %if.end95.i

if.then70.i:                                      ; preds = %if.else.i
  %arrayidx75.i = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx75.i to %struct.rtvec_def**
  %31 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %31, i64 0, i32 0
  %32 = load i32* %num_elem.i, align 4, !tbaa !15
  %cmp771088.i = icmp sgt i32 %32, 0
  br i1 %cmp771088.i, label %for.body79.lr.ph.i, label %if.end95.i

for.body79.lr.ph.i:                               ; preds = %if.then70.i
  %33 = sext i32 %32 to i64
  br label %for.body79.i

for.body79.i:                                     ; preds = %for.cond76.backedge.for.body79_crit_edge.i, %for.body79.lr.ph.i
  %34 = phi %struct.rtvec_def* [ %31, %for.body79.lr.ph.i ], [ %.pre1119.i, %for.cond76.backedge.for.body79_crit_edge.i ]
  %indvars.iv1112.i = phi i64 [ %33, %for.body79.lr.ph.i ], [ %indvars.iv.next1113.i, %for.cond76.backedge.for.body79_crit_edge.i ]
  %indvars.iv.next1113.i = add nsw i64 %indvars.iv1112.i, -1
  %arrayidx87.i = getelementptr inbounds %struct.rtvec_def* %34, i64 0, i32 1, i64 %indvars.iv.next1113.i
  %35 = load %struct.rtx_def** %arrayidx87.i, align 8, !tbaa !5
  %cmp88.i = icmp eq %struct.rtx_def* %35, %cond56.i
  br i1 %cmp88.i, label %for.cond76.backedge.i, label %if.then90.i

for.cond76.backedge.i:                            ; preds = %if.then90.i, %for.body79.i
  %36 = trunc i64 %indvars.iv.next1113.i to i32
  %cmp77.i = icmp sgt i32 %36, 0
  br i1 %cmp77.i, label %for.cond76.backedge.for.body79_crit_edge.i, label %if.end95.i

for.cond76.backedge.for.body79_crit_edge.i:       ; preds = %for.cond76.backedge.i
  %.pre1118.i = load %struct.rtx_def** %rtx41.i, align 8, !tbaa !5
  %arrayidx85.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %.pre1118.i, i64 0, i32 1, i64 0
  %rtvec86.phi.trans.insert.i = bitcast %union.rtunion_def* %arrayidx85.phi.trans.insert.i to %struct.rtvec_def**
  %.pre1119.i = load %struct.rtvec_def** %rtvec86.phi.trans.insert.i, align 8, !tbaa !5
  br label %for.body79.i

if.then90.i:                                      ; preds = %for.body79.i
  call void @note_stores(%struct.rtx_def* %35, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @no_equiv, i8* null) #2
  br label %for.cond76.backedge.i

if.end95.i:                                       ; preds = %for.cond76.backedge.i, %if.then70.i, %if.else.i
  %fld96.i = getelementptr inbounds %struct.rtx_def* %cond56.i, i64 0, i32 1
  %rtx98.i = bitcast [1 x %union.rtunion_def]* %fld96.i to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx98.i, align 8, !tbaa !5
  %arrayidx100.i = getelementptr inbounds %struct.rtx_def* %cond56.i, i64 0, i32 1, i64 1
  %rtx101.i = bitcast %union.rtunion_def* %arrayidx100.i to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx101.i, align 8, !tbaa !5
  %39 = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 0
  %bf.load102.i = load i32* %39, align 8
  %bf.clear103.i = and i32 %bf.load102.i, 65535
  %cmp104.i = icmp eq i32 %bf.clear103.i, 66
  br i1 %cmp104.i, label %land.lhs.true.i, label %if.end175.i

land.lhs.true.i:                                  ; preds = %if.end95.i
  %40 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load106.i = load i32* %40, align 8
  %bf.clear107.i = and i32 %bf.load106.i, 65535
  %cmp108.i = icmp eq i32 %bf.clear107.i, 61
  br i1 %cmp108.i, label %land.lhs.true110.i, label %if.end175.i

land.lhs.true110.i:                               ; preds = %land.lhs.true.i
  %arrayidx112.i = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx112.i to i32*
  %41 = load i32* %rtuint.i, align 4, !tbaa !1
  %cmp113.i = icmp sgt i32 %41, 52
  br i1 %cmp113.i, label %land.lhs.true115.i, label %if.end175.i

land.lhs.true115.i:                               ; preds = %land.lhs.true110.i
  %idxprom116.i = sext i32 %41 to i64
  %42 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data117.i = getelementptr inbounds %struct.varray_head_tag* %42, i64 0, i32 4
  %reg.i = bitcast %union.varray_data_tag* %data117.i to [1 x %struct.reg_info_def*]*
  %arrayidx118.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg.i, i64 0, i64 %idxprom116.i
  %43 = load %struct.reg_info_def** %arrayidx118.i, align 8, !tbaa !5
  %basic_block.i = getelementptr inbounds %struct.reg_info_def* %43, i64 0, i32 9
  %44 = load i32* %basic_block.i, align 4, !tbaa !17
  %cmp119.i = icmp sgt i32 %44, -1
  br i1 %cmp119.i, label %land.lhs.true121.i, label %if.end175.i

land.lhs.true121.i:                               ; preds = %land.lhs.true115.i
  %sets.i = getelementptr inbounds %struct.reg_info_def* %43, i64 0, i32 3
  %45 = load i32* %sets.i, align 4, !tbaa !19
  %cmp126.i = icmp eq i32 %45, 1
  br i1 %cmp126.i, label %land.lhs.true128.i, label %if.end175.i

land.lhs.true128.i:                               ; preds = %land.lhs.true121.i
  %46 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns.i = getelementptr inbounds %struct.equivalence* %46, i64 %idxprom116.i, i32 4
  %47 = load %struct.rtx_def** %init_insns.i, align 8, !tbaa !12
  %cmp131.i = icmp eq %struct.rtx_def* %47, null
  %48 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  %cmp137.i = icmp eq %struct.rtx_def* %47, %48
  %or.cond1002.i = or i1 %cmp131.i, %cmp137.i
  br i1 %or.cond1002.i, label %if.end175.i, label %land.lhs.true139.i

land.lhs.true139.i:                               ; preds = %land.lhs.true128.i
  %arrayidx144.i = getelementptr inbounds %struct.rtx_def* %47, i64 0, i32 1, i64 0
  %rtx145.i = bitcast %union.rtunion_def* %arrayidx144.i to %struct.rtx_def**
  %49 = load %struct.rtx_def** %rtx145.i, align 8, !tbaa !5
  %call146.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %49, i32 3, %struct.rtx_def* null) #2
  %tobool147.i = icmp eq %struct.rtx_def* %call146.i, null
  br i1 %tobool147.i, label %land.lhs.true148.i, label %if.end175.i

land.lhs.true148.i:                               ; preds = %land.lhs.true139.i
  %arrayidx150.i = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 1, i64 0
  %rtx151.i = bitcast %union.rtunion_def* %arrayidx150.i to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx151.i, align 8, !tbaa !5
  %call152.i = call fastcc i32 @contains_replace_regs(%struct.rtx_def* %50) #2
  %tobool153.i = icmp eq i32 %call152.i, 0
  br i1 %tobool153.i, label %if.then154.i, label %if.end175.i

if.then154.i:                                     ; preds = %land.lhs.true148.i
  %51 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns157.i = getelementptr inbounds %struct.equivalence* %51, i64 %idxprom116.i, i32 4
  %52 = load %struct.rtx_def** %init_insns157.i, align 8, !tbaa !12
  %arrayidx159.i = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 1, i64 0
  %rtx160.i = bitcast %union.rtunion_def* %arrayidx159.i to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx160.i, align 8, !tbaa !5
  %call161.i = call fastcc i32 @validate_equiv_mem(%struct.rtx_def* %53, %struct.rtx_def* %38, %struct.rtx_def* %37) #2
  %tobool162.i = icmp eq i32 %call161.i, 0
  br i1 %tobool162.i, label %if.end175.i, label %land.lhs.true163.i

land.lhs.true163.i:                               ; preds = %if.then154.i
  %insn.0.in.in17.i.i = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 2
  %insn.0.in18.i.i = bitcast %union.rtunion_def* %insn.0.in.in17.i.i to %struct.rtx_def**
  %insn.019.i.i = load %struct.rtx_def** %insn.0.in18.i.i, align 8
  %arrayidx2.i.i = getelementptr inbounds %struct.rtx_def* %insn.01094.i, i64 0, i32 1, i64 2
  %rtx3.i.i = bitcast %union.rtunion_def* %arrayidx2.i.i to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx3.i.i, align 8, !tbaa !5
  %cmp20.i.i = icmp eq %struct.rtx_def* %insn.019.i.i, %54
  br i1 %cmp20.i.i, label %if.then166.i, label %for.body.i1005.i

for.body.i1005.i:                                 ; preds = %land.lhs.true163.i, %for.cond.backedge.i.i
  %55 = phi %struct.rtx_def* [ %59, %for.cond.backedge.i.i ], [ %54, %land.lhs.true163.i ]
  %insn.021.i.i = phi %struct.rtx_def* [ %insn.0.i.i, %for.cond.backedge.i.i ], [ %insn.019.i.i, %land.lhs.true163.i ]
  %56 = getelementptr inbounds %struct.rtx_def* %insn.021.i.i, i64 0, i32 0
  %bf.load.i1003.i = load i32* %56, align 8
  %bf.clear.i1004.i = and i32 %bf.load.i1003.i, 65535
  %idxprom16.i.i = zext i32 %bf.clear.i1004.i to i64
  %arrayidx4.i.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom16.i.i
  %57 = load i8* %arrayidx4.i.i, align 1, !tbaa !11
  %cmp5.i.i = icmp eq i8 %57, 105
  br i1 %cmp5.i.i, label %land.lhs.true.i.i, label %for.cond.backedge.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i1005.i
  %arrayidx8.i1006.i = getelementptr inbounds %struct.rtx_def* %insn.021.i.i, i64 0, i32 1, i64 3
  %rtx9.i1007.i = bitcast %union.rtunion_def* %arrayidx8.i1006.i to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx9.i1007.i, align 8, !tbaa !5
  %call.i1008.i = call fastcc i32 @memref_referenced_p(%struct.rtx_def* %37, %struct.rtx_def* %58) #2
  %tobool.i1009.i = icmp eq i32 %call.i1008.i, 0
  br i1 %tobool.i1009.i, label %land.lhs.true.for.cond.backedge_crit_edge.i.i, label %if.end175.i

land.lhs.true.for.cond.backedge_crit_edge.i.i:    ; preds = %land.lhs.true.i.i
  %.pre.i1010.i = load %struct.rtx_def** %rtx3.i.i, align 8, !tbaa !5
  br label %for.cond.backedge.i.i

for.cond.backedge.i.i:                            ; preds = %land.lhs.true.for.cond.backedge_crit_edge.i.i, %for.body.i1005.i
  %59 = phi %struct.rtx_def* [ %.pre.i1010.i, %land.lhs.true.for.cond.backedge_crit_edge.i.i ], [ %55, %for.body.i1005.i ]
  %insn.0.in.in.i.i = getelementptr inbounds %struct.rtx_def* %insn.021.i.i, i64 0, i32 1, i64 2
  %insn.0.in.i.i = bitcast %union.rtunion_def* %insn.0.in.in.i.i to %struct.rtx_def**
  %insn.0.i.i = load %struct.rtx_def** %insn.0.in.i.i, align 8
  %cmp.i1011.i = icmp eq %struct.rtx_def* %insn.0.i.i, %59
  br i1 %cmp.i1011.i, label %if.then166.i, label %for.body.i1005.i

if.then166.i:                                     ; preds = %for.cond.backedge.i.i, %land.lhs.true163.i
  %arrayidx168.i = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 1, i64 6
  %rtx169.i = bitcast %union.rtunion_def* %arrayidx168.i to %struct.rtx_def**
  %60 = load %struct.rtx_def** %rtx169.i, align 8, !tbaa !5
  %call170.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 3, %struct.rtx_def* %37, %struct.rtx_def* %60) #2
  %61 = getelementptr inbounds %union.rtunion_def* %arrayidx168.i, i64 0, i32 0
  %call170.c.i = ptrtoint %struct.rtx_def* %call170.i to i64
  store i64 %call170.c.i, i64* %61, align 8, !tbaa !5
  br label %if.end175.i

if.end175.i:                                      ; preds = %land.lhs.true.i.i, %if.then166.i, %if.then154.i, %land.lhs.true148.i, %land.lhs.true139.i, %land.lhs.true128.i, %land.lhs.true121.i, %land.lhs.true115.i, %land.lhs.true110.i, %land.lhs.true.i, %if.end95.i
  %bf.load176.i = load i32* %39, align 8
  %bf.clear177.i = and i32 %bf.load176.i, 65535
  %cmp178.i = icmp eq i32 %bf.clear177.i, 61
  br i1 %cmp178.i, label %lor.lhs.false.i, label %if.then224.i

lor.lhs.false.i:                                  ; preds = %if.end175.i
  %arrayidx181.i = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 1, i64 0
  %rtuint182.i = bitcast %union.rtunion_def* %arrayidx181.i to i32*
  %62 = load i32* %rtuint182.i, align 4, !tbaa !1
  %cmp183.i = icmp slt i32 %62, 53
  br i1 %cmp183.i, label %if.then224.i, label %lor.lhs.false185.i

lor.lhs.false185.i:                               ; preds = %lor.lhs.false.i
  %idxprom186.i = sext i32 %62 to i64
  %63 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns188.i = getelementptr inbounds %struct.equivalence* %63, i64 %idxprom186.i, i32 4
  %64 = load %struct.rtx_def** %init_insns188.i, align 8, !tbaa !12
  %65 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %cmp189.i = icmp eq %struct.rtx_def* %64, %65
  br i1 %cmp189.i, label %if.then224.i, label %lor.lhs.false191.i

lor.lhs.false191.i:                               ; preds = %lor.lhs.false185.i
  %call192.i = call i32 @reg_preferred_class(i32 %62) #2
  %cmp193.i = icmp eq i32 %call192.i, 1
  br i1 %cmp193.i, label %land.lhs.true219.i, label %lor.lhs.false195.i

lor.lhs.false195.i:                               ; preds = %lor.lhs.false191.i
  %call196.i = call i32 @reg_preferred_class(i32 %62) #2
  %cmp197.i = icmp eq i32 %call196.i, 2
  br i1 %cmp197.i, label %land.lhs.true219.i, label %lor.lhs.false199.i

lor.lhs.false199.i:                               ; preds = %lor.lhs.false195.i
  %call200.i = call i32 @reg_preferred_class(i32 %62) #2
  %cmp201.i = icmp eq i32 %call200.i, 3
  br i1 %cmp201.i, label %land.lhs.true219.i, label %lor.lhs.false203.i

lor.lhs.false203.i:                               ; preds = %lor.lhs.false199.i
  %call204.i = call i32 @reg_preferred_class(i32 %62) #2
  %cmp205.i = icmp eq i32 %call204.i, 4
  br i1 %cmp205.i, label %land.lhs.true219.i, label %lor.lhs.false207.i

lor.lhs.false207.i:                               ; preds = %lor.lhs.false203.i
  %call208.i = call i32 @reg_preferred_class(i32 %62) #2
  %cmp209.i = icmp eq i32 %call208.i, 7
  br i1 %cmp209.i, label %land.lhs.true219.i, label %lor.lhs.false211.i

lor.lhs.false211.i:                               ; preds = %lor.lhs.false207.i
  %call212.i = call i32 @reg_preferred_class(i32 %62) #2
  %cmp213.i = icmp eq i32 %call212.i, 5
  br i1 %cmp213.i, label %land.lhs.true219.i, label %lor.lhs.false215.i

lor.lhs.false215.i:                               ; preds = %lor.lhs.false211.i
  %call216.i = call i32 @reg_preferred_class(i32 %62) #2
  %cmp217.i = icmp eq i32 %call216.i, 6
  br i1 %cmp217.i, label %land.lhs.true219.i, label %if.end225.i

land.lhs.true219.i:                               ; preds = %lor.lhs.false215.i, %lor.lhs.false211.i, %lor.lhs.false207.i, %lor.lhs.false203.i, %lor.lhs.false199.i, %lor.lhs.false195.i, %lor.lhs.false191.i
  %66 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load220.i = load i32* %66, align 8
  %bf.clear221.i = and i32 %bf.load220.i, 65535
  %cmp222.i = icmp eq i32 %bf.clear221.i, 66
  br i1 %cmp222.i, label %if.then224.i, label %if.end225.i

if.then224.i:                                     ; preds = %land.lhs.true219.i, %lor.lhs.false185.i, %lor.lhs.false.i, %if.end175.i
  call void @note_stores(%struct.rtx_def* %cond56.i, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @no_equiv, i8* null) #2
  br label %for.inc438.i

if.end225.i:                                      ; preds = %land.lhs.true219.i, %lor.lhs.false215.i
  %call226.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.01094.i, i32 4, %struct.rtx_def* null) #2
  %tobool227.i = icmp eq %struct.rtx_def* %call226.i, null
  br i1 %tobool227.i, label %land.lhs.true228.i, label %land.lhs.true235.i

land.lhs.true228.i:                               ; preds = %if.end225.i
  %call229.i = call i32 @rtx_varies_p(%struct.rtx_def* %38, i32 0) #2
  %tobool230.i = icmp eq i32 %call229.i, 0
  br i1 %tobool230.i, label %if.end233.i, label %if.end244.i

if.end233.i:                                      ; preds = %land.lhs.true228.i
  %call232.i = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %insn.01094.i, i32 4, %struct.rtx_def* %38) #2
  %tobool234.i = icmp eq %struct.rtx_def* %call232.i, null
  br i1 %tobool234.i, label %if.end244.i, label %land.lhs.true235.i

land.lhs.true235.i:                               ; preds = %if.end233.i, %if.end225.i
  %note.11048.i = phi %struct.rtx_def* [ %call232.i, %if.end233.i ], [ %call226.i, %if.end225.i ]
  %arrayidx237.i = getelementptr inbounds %struct.rtx_def* %note.11048.i, i64 0, i32 1, i64 0
  %rtx238.i = bitcast %union.rtunion_def* %arrayidx237.i to %struct.rtx_def**
  %67 = load %struct.rtx_def** %rtx238.i, align 8, !tbaa !5
  %68 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 0
  %bf.load239.i = load i32* %68, align 8
  %bf.clear240.i = and i32 %bf.load239.i, 65535
  %cmp241.i = icmp eq i32 %bf.clear240.i, 3
  %.note.1.i = select i1 %cmp241.i, %struct.rtx_def* null, %struct.rtx_def* %note.11048.i
  br label %if.end244.i

if.end244.i:                                      ; preds = %land.lhs.true235.i, %if.end233.i, %land.lhs.true228.i
  %note.2.i = phi %struct.rtx_def* [ null, %if.end233.i ], [ %.note.1.i, %land.lhs.true235.i ], [ null, %land.lhs.true228.i ]
  %69 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data246.i = getelementptr inbounds %struct.varray_head_tag* %69, i64 0, i32 4
  %reg247.i = bitcast %union.varray_data_tag* %data246.i to [1 x %struct.reg_info_def*]*
  %arrayidx248.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg247.i, i64 0, i64 %idxprom186.i
  %70 = load %struct.reg_info_def** %arrayidx248.i, align 8, !tbaa !5
  %sets249.i = getelementptr inbounds %struct.reg_info_def* %70, i64 0, i32 3
  %71 = load i32* %sets249.i, align 4, !tbaa !19
  %cmp250.i = icmp eq i32 %71, 1
  br i1 %cmp250.i, label %if.end274.i, label %land.lhs.true252.i

land.lhs.true252.i:                               ; preds = %if.end244.i
  %tobool253.i = icmp eq %struct.rtx_def* %note.2.i, null
  br i1 %tobool253.i, label %if.then273.i, label %lor.lhs.false254.i

lor.lhs.false254.i:                               ; preds = %land.lhs.true252.i
  %arrayidx256.i = getelementptr inbounds %struct.rtx_def* %note.2.i, i64 0, i32 1, i64 0
  %rtx257.i = bitcast %union.rtunion_def* %arrayidx256.i to %struct.rtx_def**
  %72 = load %struct.rtx_def** %rtx257.i, align 8, !tbaa !5
  %call258.i = call i32 @rtx_varies_p(%struct.rtx_def* %72, i32 0) #2
  %tobool259.i = icmp eq i32 %call258.i, 0
  br i1 %tobool259.i, label %lor.lhs.false260.i, label %if.then273.i

lor.lhs.false260.i:                               ; preds = %lor.lhs.false254.i
  %73 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replacement.i = getelementptr inbounds %struct.equivalence* %73, i64 %idxprom186.i, i32 1
  %74 = load %struct.rtx_def** %replacement.i, align 8, !tbaa !14
  %tobool263.i = icmp eq %struct.rtx_def* %74, null
  br i1 %tobool263.i, label %if.end274.i, label %land.lhs.true264.i

land.lhs.true264.i:                               ; preds = %lor.lhs.false260.i
  %75 = load %struct.rtx_def** %rtx257.i, align 8, !tbaa !5
  %call271.i = call i32 @rtx_equal_p(%struct.rtx_def* %75, %struct.rtx_def* %74) #2
  %tobool272.i = icmp eq i32 %call271.i, 0
  br i1 %tobool272.i, label %if.then273.i, label %if.end274.i

if.then273.i:                                     ; preds = %land.lhs.true264.i, %lor.lhs.false254.i, %land.lhs.true252.i
  %bf.load.i1012.i = load i32* %39, align 8
  %bf.clear.i1013.i = and i32 %bf.load.i1012.i, 65535
  %cmp.i1014.i = icmp eq i32 %bf.clear.i1013.i, 61
  br i1 %cmp.i1014.i, label %if.end.i1020.i, label %for.inc438.i

if.end.i1020.i:                                   ; preds = %if.then273.i
  %76 = load i32* %rtuint182.i, align 4, !tbaa !1
  %idxprom.i1017.i = sext i32 %76 to i64
  %77 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns.i1018.i = getelementptr inbounds %struct.equivalence* %77, i64 %idxprom.i1017.i, i32 4
  %78 = load %struct.rtx_def** %init_insns.i1018.i, align 8, !tbaa !12
  %79 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %cmp2.i1019.i = icmp eq %struct.rtx_def* %78, %79
  br i1 %cmp2.i1019.i, label %for.inc438.i, label %for.cond.preheader.i1022.i

for.cond.preheader.i1022.i:                       ; preds = %if.end.i1020.i
  %tobool22.i1021.i = icmp eq %struct.rtx_def* %78, null
  br i1 %tobool22.i1021.i, label %for.end.i1036.i, label %for.body.i1030.i

for.body.i1030.i:                                 ; preds = %for.cond.preheader.i1022.i, %for.body.i1030.i
  %list.023.i1023.i = phi %struct.rtx_def* [ %81, %for.body.i1030.i ], [ %78, %for.cond.preheader.i1022.i ]
  %fld5.i1024.i = getelementptr inbounds %struct.rtx_def* %list.023.i1023.i, i64 0, i32 1
  %rtx.i1025.i = bitcast [1 x %union.rtunion_def]* %fld5.i1024.i to %struct.rtx_def**
  %80 = load %struct.rtx_def** %rtx.i1025.i, align 8, !tbaa !5
  %call.i1026.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %80, i32 3, %struct.rtx_def* null) #2
  call void @remove_note(%struct.rtx_def* %80, %struct.rtx_def* %call.i1026.i) #2
  %arrayidx8.i1027.i = getelementptr inbounds %struct.rtx_def* %list.023.i1023.i, i64 0, i32 1, i64 1
  %rtx9.i1028.i = bitcast %union.rtunion_def* %arrayidx8.i1027.i to %struct.rtx_def**
  %81 = load %struct.rtx_def** %rtx9.i1028.i, align 8, !tbaa !5
  %tobool.i1029.i = icmp eq %struct.rtx_def* %81, null
  br i1 %tobool.i1029.i, label %for.cond.for.end_crit_edge.i1033.i, label %for.body.i1030.i

for.cond.for.end_crit_edge.i1033.i:               ; preds = %for.body.i1030.i
  %.pre.i1031.i = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %.pre24.i1032.i = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  br label %for.end.i1036.i

for.end.i1036.i:                                  ; preds = %for.cond.for.end_crit_edge.i1033.i, %for.cond.preheader.i1022.i
  %82 = phi %struct.equivalence* [ %.pre24.i1032.i, %for.cond.for.end_crit_edge.i1033.i ], [ %77, %for.cond.preheader.i1022.i ]
  %83 = phi %struct.rtx_def* [ %.pre.i1031.i, %for.cond.for.end_crit_edge.i1033.i ], [ %79, %for.cond.preheader.i1022.i ]
  %init_insns12.i1034.i = getelementptr inbounds %struct.equivalence* %82, i64 %idxprom.i1017.i, i32 4
  store %struct.rtx_def* %83, %struct.rtx_def** %init_insns12.i1034.i, align 8, !tbaa !12
  %84 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replacement.i1035.i = getelementptr inbounds %struct.equivalence* %84, i64 %idxprom.i1017.i, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %replacement.i1035.i, align 8, !tbaa !14
  br label %for.inc438.i

if.end274.i:                                      ; preds = %land.lhs.true264.i, %lor.lhs.false260.i, %if.end244.i
  %85 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns277.i = getelementptr inbounds %struct.equivalence* %85, i64 %idxprom186.i, i32 4
  %86 = load %struct.rtx_def** %init_insns277.i, align 8, !tbaa !12
  %call278.i = call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 0, %struct.rtx_def* %insn.01094.i, %struct.rtx_def* %86) #2
  %87 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns281.i = getelementptr inbounds %struct.equivalence* %87, i64 %idxprom186.i, i32 4
  store %struct.rtx_def* %call278.i, %struct.rtx_def** %init_insns281.i, align 8, !tbaa !12
  %tobool282.i = icmp eq %struct.rtx_def* %note.2.i, null
  br i1 %tobool282.i, label %if.end292.i, label %land.lhs.true283.i

land.lhs.true283.i:                               ; preds = %if.end274.i
  %arrayidx285.i = getelementptr inbounds %struct.rtx_def* %note.2.i, i64 0, i32 1, i64 0
  %rtx286.i = bitcast %union.rtunion_def* %arrayidx285.i to %struct.rtx_def**
  %88 = load %struct.rtx_def** %rtx286.i, align 8, !tbaa !5
  %call287.i = call i32 @rtx_varies_p(%struct.rtx_def* %88, i32 0) #2
  %tobool288.i = icmp eq i32 %call287.i, 0
  br i1 %tobool288.i, label %if.then289.i, label %if.end292.i

if.then289.i:                                     ; preds = %land.lhs.true283.i
  %89 = getelementptr inbounds %struct.rtx_def* %note.2.i, i64 0, i32 0
  %bf.load290.i = load i32* %89, align 8
  %bf.clear291.i = and i32 %bf.load290.i, -16711681
  %bf.set.i = or i32 %bf.clear291.i, 196608
  store i32 %bf.set.i, i32* %89, align 8
  br label %if.end292.i

if.end292.i:                                      ; preds = %if.then289.i, %land.lhs.true283.i, %if.end274.i
  %call293.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.01094.i, i32 3, %struct.rtx_def* null) #2
  %cmp294.i = icmp eq %struct.rtx_def* %call293.i, null
  br i1 %cmp294.i, label %land.lhs.true296.i, label %if.then331.i

land.lhs.true296.i:                               ; preds = %if.end292.i
  %90 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data298.i = getelementptr inbounds %struct.varray_head_tag* %90, i64 0, i32 4
  %reg299.i = bitcast %union.varray_data_tag* %data298.i to [1 x %struct.reg_info_def*]*
  %arrayidx300.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg299.i, i64 0, i64 %idxprom186.i
  %91 = load %struct.reg_info_def** %arrayidx300.i, align 8, !tbaa !5
  %basic_block301.i = getelementptr inbounds %struct.reg_info_def* %91, i64 0, i32 9
  %92 = load i32* %basic_block301.i, align 4, !tbaa !17
  %cmp302.i = icmp sgt i32 %92, -1
  br i1 %cmp302.i, label %land.lhs.true304.i, label %for.inc438.i

land.lhs.true304.i:                               ; preds = %land.lhs.true296.i
  %93 = load %struct.rtx_def** %rtx101.i, align 8, !tbaa !5
  %94 = getelementptr inbounds %struct.rtx_def* %93, i64 0, i32 0
  %bf.load308.i = load i32* %94, align 8
  %bf.clear309.i = and i32 %bf.load308.i, 65535
  %cmp310.i = icmp eq i32 %bf.clear309.i, 66
  br i1 %cmp310.i, label %land.lhs.true312.i, label %for.inc438.i

land.lhs.true312.i:                               ; preds = %land.lhs.true304.i
  %call316.i = call fastcc i32 @validate_equiv_mem(%struct.rtx_def* %insn.01094.i, %struct.rtx_def* %37, %struct.rtx_def* %93) #2
  %tobool317.i = icmp eq i32 %call316.i, 0
  br i1 %tobool317.i, label %for.inc438.i, label %if.end329.i

if.end329.i:                                      ; preds = %land.lhs.true312.i
  %95 = load %struct.rtx_def** %rtx101.i, align 8, !tbaa !5
  %96 = load %struct.rtx_def** %rtx17.i, align 8, !tbaa !5
  %call325.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 3, %struct.rtx_def* %95, %struct.rtx_def* %96) #2
  %97 = getelementptr inbounds %union.rtunion_def* %arrayidx16.i, i64 0, i32 0
  %call325.c.i = ptrtoint %struct.rtx_def* %call325.i to i64
  store i64 %call325.c.i, i64* %97, align 8, !tbaa !5
  %tobool330.i = icmp eq %struct.rtx_def* %call325.i, null
  br i1 %tobool330.i, label %for.inc438.i, label %if.then331.i

if.then331.i:                                     ; preds = %if.end329.i, %if.end292.i
  %note.31052.i = phi %struct.rtx_def* [ %call325.i, %if.end329.i ], [ %call293.i, %if.end292.i ]
  %98 = load i32* %rtuint182.i, align 4, !tbaa !1
  %arrayidx337.i = getelementptr inbounds %struct.rtx_def* %note.31052.i, i64 0, i32 1, i64 0
  %rtx338.i = bitcast %union.rtunion_def* %arrayidx337.i to %struct.rtx_def**
  %99 = load %struct.rtx_def** %rtx338.i, align 8, !tbaa !5
  %100 = getelementptr inbounds %struct.rtx_def* %99, i64 0, i32 0
  %bf.load339.i = load i32* %100, align 8
  %bf.clear340.i = and i32 %bf.load339.i, 65535
  switch i32 %bf.clear340.i, label %if.end377.i [
    i32 67, label %if.then376.i
    i32 58, label %land.lhs.true351.i
  ]

land.lhs.true351.i:                               ; preds = %if.then331.i
  %arrayidx356.i = getelementptr inbounds %struct.rtx_def* %99, i64 0, i32 1, i64 0
  %rtx357.i = bitcast %union.rtunion_def* %arrayidx356.i to %struct.rtx_def**
  %101 = load %struct.rtx_def** %rtx357.i, align 8, !tbaa !5
  %102 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 0
  %bf.load358.i = load i32* %102, align 8
  %bf.clear359.i = and i32 %bf.load358.i, 65535
  %cmp360.i = icmp eq i32 %bf.clear359.i, 75
  br i1 %cmp360.i, label %land.lhs.true362.i, label %if.end377.i

land.lhs.true362.i:                               ; preds = %land.lhs.true351.i
  %arrayidx370.i = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 1, i64 0
  %rtx371.i = bitcast %union.rtunion_def* %arrayidx370.i to %struct.rtx_def**
  %103 = load %struct.rtx_def** %rtx371.i, align 8, !tbaa !5
  %104 = getelementptr inbounds %struct.rtx_def* %103, i64 0, i32 0
  %bf.load372.i = load i32* %104, align 8
  %bf.clear373.i = and i32 %bf.load372.i, 65535
  %cmp374.i = icmp eq i32 %bf.clear373.i, 67
  br i1 %cmp374.i, label %if.then376.i, label %if.end377.i

if.then376.i:                                     ; preds = %land.lhs.true362.i, %if.then331.i
  store i1 true, i1* @recorded_label_ref, align 1
  br label %if.end377.i

if.end377.i:                                      ; preds = %if.then376.i, %land.lhs.true362.i, %land.lhs.true351.i, %if.then331.i
  %idxprom381.i = sext i32 %98 to i64
  %105 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replacement383.i = getelementptr inbounds %struct.equivalence* %105, i64 %idxprom381.i, i32 1
  store %struct.rtx_def* %99, %struct.rtx_def** %replacement383.i, align 8, !tbaa !14
  %106 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %src_p.i = getelementptr inbounds %struct.equivalence* %106, i64 %idxprom381.i, i32 2
  store %struct.rtx_def** %rtx101.i, %struct.rtx_def*** %src_p.i, align 8, !tbaa !20
  %107 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %loop_depth391.i = getelementptr inbounds %struct.equivalence* %107, i64 %idxprom381.i, i32 3
  store i32 %8, i32* %loop_depth391.i, align 4, !tbaa !21
  %108 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data393.i = getelementptr inbounds %struct.varray_head_tag* %108, i64 0, i32 4
  %reg394.i = bitcast %union.varray_data_tag* %data393.i to [1 x %struct.reg_info_def*]*
  %arrayidx395.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg394.i, i64 0, i64 %idxprom381.i
  %109 = load %struct.reg_info_def** %arrayidx395.i, align 8, !tbaa !5
  %live_length.i = getelementptr inbounds %struct.reg_info_def* %109, i64 0, i32 7
  %110 = load i32* %live_length.i, align 4, !tbaa !22
  %cmp396.i = icmp sgt i32 %110, -1
  %111 = load i32* @optimize, align 4
  %tobool399.i = icmp ne i32 %111, 0
  %or.cond.i = and i1 %cmp396.i, %tobool399.i
  br i1 %or.cond.i, label %if.then400.i, label %for.inc438.i

if.then400.i:                                     ; preds = %if.end377.i
  %mul.i = shl nsw i32 %110, 1
  store i32 %mul.i, i32* %live_length.i, align 4, !tbaa !22
  %refs.i = getelementptr inbounds %struct.reg_info_def* %109, i64 0, i32 4
  %112 = load i32* %refs.i, align 4, !tbaa !23
  %cmp410.i = icmp eq i32 %112, 2
  br i1 %cmp410.i, label %land.lhs.true412.i, label %for.inc438.i

land.lhs.true412.i:                               ; preds = %if.then400.i
  %113 = load %struct.rtx_def** %rtx338.i, align 8, !tbaa !5
  %call416.i = call i32 @rtx_equal_p(%struct.rtx_def* %113, %struct.rtx_def* %38) #2
  %tobool417.i = icmp eq i32 %call416.i, 0
  br i1 %tobool417.i, label %lor.lhs.false418.i, label %land.lhs.true421.i

lor.lhs.false418.i:                               ; preds = %land.lhs.true412.i
  %call419.i = call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %38) #2
  %tobool420.i = icmp eq i32 %call419.i, 0
  br i1 %tobool420.i, label %land.lhs.true421.i, label %for.inc438.i

land.lhs.true421.i:                               ; preds = %lor.lhs.false418.i, %land.lhs.true412.i
  %bf.load422.i = load i32* %11, align 8
  %bf.clear423.i = and i32 %bf.load422.i, 65535
  %cmp424.i = icmp eq i32 %bf.clear423.i, 32
  br i1 %cmp424.i, label %land.lhs.true426.i, label %for.inc438.i

land.lhs.true426.i:                               ; preds = %land.lhs.true421.i
  %114 = load %struct.rtx_def** %rtx41.i, align 8, !tbaa !5
  %call430.i = call fastcc i32 @equiv_init_movable_p(%struct.rtx_def* %114, i32 %98) #2
  %tobool431.i = icmp eq i32 %call430.i, 0
  br i1 %tobool431.i, label %for.inc438.i, label %if.then432.i

if.then432.i:                                     ; preds = %land.lhs.true426.i
  %115 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replace.i = getelementptr inbounds %struct.equivalence* %115, i64 %idxprom381.i, i32 0
  store i8 1, i8* %replace.i, align 1, !tbaa !24
  br label %for.inc438.i

for.inc438.i:                                     ; preds = %if.then432.i, %land.lhs.true426.i, %land.lhs.true421.i, %lor.lhs.false418.i, %if.then400.i, %if.end377.i, %if.end329.i, %land.lhs.true312.i, %land.lhs.true304.i, %land.lhs.true296.i, %for.end.i1036.i, %if.end.i1020.i, %if.then273.i, %if.then224.i, %if.then59.i, %for.body9.i
  %arrayidx440.i = getelementptr inbounds %struct.rtx_def* %insn.01094.i, i64 0, i32 1, i64 2
  %rtx441.i = bitcast %union.rtunion_def* %arrayidx440.i to %struct.rtx_def**
  %insn.0.i = load %struct.rtx_def** %rtx441.i, align 8
  %116 = load %struct.rtx_def** %end.i, align 8, !tbaa !10
  %arrayidx6.i = getelementptr inbounds %struct.rtx_def* %116, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx6.i to %struct.rtx_def**
  %117 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %cmp7.i = icmp eq %struct.rtx_def* %insn.0.i, %117
  br i1 %cmp7.i, label %for.cond5.for.inc443_crit_edge.i, label %for.body9.i

for.cond5.for.inc443_crit_edge.i:                 ; preds = %for.inc438.i
  %.pre.i = load i32* @n_basic_blocks, align 4, !tbaa !1
  br label %for.inc443.i

for.inc443.i:                                     ; preds = %for.cond5.for.inc443_crit_edge.i, %for.body.i
  %118 = phi i32 [ %.pre.i, %for.cond5.for.inc443_crit_edge.i ], [ %5, %for.body.i ]
  %indvars.iv.next1115.i = add nuw nsw i64 %indvars.iv1114.i, 1
  %119 = trunc i64 %indvars.iv.next1115.i to i32
  %cmp.i = icmp slt i32 %119, %118
  br i1 %cmp.i, label %for.body.i, label %for.cond446.preheader.i

for.cond446.loopexit.i:                           ; preds = %for.inc687.i, %for.body449.i
  %clear_regnos.1.lcssa.i = phi i32 [ %clear_regnos.01080.i, %for.body449.i ], [ %clear_regnos.4.i, %for.inc687.i ]
  %cmp447.i = icmp sgt i32 %.pre1122.i, 0
  br i1 %cmp447.i, label %for.body449.i, label %for.end694.i

for.body449.i:                                    ; preds = %for.cond446.loopexit.i, %for.body449.lr.ph.i
  %indvars.iv1110.i = phi i64 [ %4, %for.body449.lr.ph.i ], [ %indvars.iv.next1111.i, %for.cond446.loopexit.i ]
  %clear_regnos.01080.i = phi i32 [ 0, %for.body449.lr.ph.i ], [ %clear_regnos.1.lcssa.i, %for.cond446.loopexit.i ]
  %indvars.iv.next1111.i = add nsw i64 %indvars.iv1110.i, -1
  %120 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data452.i = getelementptr inbounds %struct.varray_head_tag* %120, i64 0, i32 4
  %bb453.i = bitcast %union.varray_data_tag* %data452.i to [1 x %struct.basic_block_def*]*
  %arrayidx454.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb453.i, i64 0, i64 %indvars.iv.next1111.i
  %121 = load %struct.basic_block_def** %arrayidx454.i, align 8, !tbaa !5
  %loop_depth455.i = getelementptr inbounds %struct.basic_block_def* %121, i64 0, i32 12
  %122 = load i32* %loop_depth455.i, align 4, !tbaa !7
  %end456.i = getelementptr inbounds %struct.basic_block_def* %121, i64 0, i32 1
  %insn.11071.i = load %struct.rtx_def** %end456.i, align 8
  %head458.i = getelementptr inbounds %struct.basic_block_def* %121, i64 0, i32 0
  %123 = load %struct.rtx_def** %head458.i, align 8, !tbaa !25
  %arrayidx4601072.i = getelementptr inbounds %struct.rtx_def* %123, i64 0, i32 1, i64 1
  %rtx4611073.i = bitcast %union.rtunion_def* %arrayidx4601072.i to %struct.rtx_def**
  %124 = load %struct.rtx_def** %rtx4611073.i, align 8, !tbaa !5
  %cmp4621074.i = icmp eq %struct.rtx_def* %insn.11071.i, %124
  %.pre1122.i = trunc i64 %indvars.iv.next1111.i to i32
  br i1 %cmp4621074.i, label %for.cond446.loopexit.i, label %for.body464.i

for.body464.i:                                    ; preds = %for.body449.i, %for.inc687.i
  %125 = phi %struct.rtx_def* [ %173, %for.inc687.i ], [ %123, %for.body449.i ]
  %insn.11076.i = phi %struct.rtx_def* [ %insn.1.i, %for.inc687.i ], [ %insn.11071.i, %for.body449.i ]
  %clear_regnos.11075.i = phi i32 [ %clear_regnos.4.i, %for.inc687.i ], [ %clear_regnos.01080.i, %for.body449.i ]
  %126 = getelementptr inbounds %struct.rtx_def* %insn.11076.i, i64 0, i32 0
  %bf.load465.i = load i32* %126, align 8
  %bf.clear466.i = and i32 %bf.load465.i, 65535
  %idxprom467999.i = zext i32 %bf.clear466.i to i64
  %arrayidx468.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom467999.i
  %127 = load i8* %arrayidx468.i, align 1, !tbaa !11
  %cmp470.i = icmp eq i8 %127, 105
  br i1 %cmp470.i, label %if.end473.i, label %for.inc687.i

if.end473.i:                                      ; preds = %for.body464.i
  %arrayidx475.i = getelementptr inbounds %struct.rtx_def* %insn.11076.i, i64 0, i32 1, i64 6
  %link.0.in1066.i = bitcast %union.rtunion_def* %arrayidx475.i to %struct.rtx_def**
  %link.01067.i = load %struct.rtx_def** %link.0.in1066.i, align 8
  %tobool4781068.i = icmp eq %struct.rtx_def* %link.01067.i, null
  br i1 %tobool4781068.i, label %for.inc687.i, label %for.body479.lr.ph.i

for.body479.lr.ph.i:                              ; preds = %if.end473.i
  %arrayidx490.i = getelementptr inbounds %struct.rtx_def* %insn.11076.i, i64 0, i32 1, i64 3
  %rtx491.i = bitcast %union.rtunion_def* %arrayidx490.i to %struct.rtx_def**
  %arrayidx608.i = getelementptr inbounds %struct.rtx_def* %insn.11076.i, i64 0, i32 1, i64 1
  %rtx609.i = bitcast %union.rtunion_def* %arrayidx608.i to %struct.rtx_def**
  br label %for.body479.i

for.body479.i:                                    ; preds = %for.inc682.i, %for.body479.lr.ph.i
  %link.01070.i = phi %struct.rtx_def* [ %link.01067.i, %for.body479.lr.ph.i ], [ %link.0.i, %for.inc682.i ]
  %clear_regnos.21069.i = phi i32 [ %clear_regnos.11075.i, %for.body479.lr.ph.i ], [ %clear_regnos.3.i, %for.inc682.i ]
  %128 = getelementptr inbounds %struct.rtx_def* %link.01070.i, i64 0, i32 0
  %bf.load480.i = load i32* %128, align 8
  %bf.clear482.i = and i32 %bf.load480.i, 16711680
  %cmp483.i = icmp eq i32 %bf.clear482.i, 65536
  br i1 %cmp483.i, label %land.lhs.true485.i, label %for.inc682.i

land.lhs.true485.i:                               ; preds = %for.body479.i
  %arrayidx487.i = getelementptr inbounds %struct.rtx_def* %link.01070.i, i64 0, i32 1, i64 0
  %rtx488.i = bitcast %union.rtunion_def* %arrayidx487.i to %struct.rtx_def**
  %129 = load %struct.rtx_def** %rtx488.i, align 8, !tbaa !5
  %130 = load %struct.rtx_def** %rtx491.i, align 8, !tbaa !5
  %call492.i = call i32 @reg_mentioned_p(%struct.rtx_def* %129, %struct.rtx_def* %130) #2
  %tobool493.i = icmp eq i32 %call492.i, 0
  br i1 %tobool493.i, label %for.inc682.i, label %if.then494.i

if.then494.i:                                     ; preds = %land.lhs.true485.i
  %131 = load %struct.rtx_def** %rtx488.i, align 8, !tbaa !5
  %arrayidx500.i = getelementptr inbounds %struct.rtx_def* %131, i64 0, i32 1, i64 0
  %rtuint501.i = bitcast %union.rtunion_def* %arrayidx500.i to i32*
  %132 = load i32* %rtuint501.i, align 4, !tbaa !1
  %idxprom502.i = sext i32 %132 to i64
  %133 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replace504.i = getelementptr inbounds %struct.equivalence* %133, i64 %idxprom502.i, i32 0
  %134 = load i8* %replace504.i, align 1, !tbaa !24
  %tobool505.i = icmp eq i8 %134, 0
  br i1 %tobool505.i, label %for.inc682.i, label %lor.lhs.false506.i

lor.lhs.false506.i:                               ; preds = %if.then494.i
  %loop_depth509.i = getelementptr inbounds %struct.equivalence* %133, i64 %idxprom502.i, i32 3
  %135 = load i32* %loop_depth509.i, align 4, !tbaa !21
  %cmp510.i = icmp slt i32 %135, %122
  br i1 %cmp510.i, label %for.inc682.i, label %if.end513.i

if.end513.i:                                      ; preds = %lor.lhs.false506.i
  %init_insns516.i = getelementptr inbounds %struct.equivalence* %133, i64 %idxprom502.i, i32 4
  %136 = load %struct.rtx_def** %init_insns516.i, align 8, !tbaa !12
  %cmp517.i = icmp eq %struct.rtx_def* %136, null
  br i1 %cmp517.i, label %if.then528.i, label %lor.lhs.false519.i

lor.lhs.false519.i:                               ; preds = %if.end513.i
  %arrayidx524.i = getelementptr inbounds %struct.rtx_def* %136, i64 0, i32 1, i64 1
  %rtx525.i = bitcast %union.rtunion_def* %arrayidx524.i to %struct.rtx_def**
  %137 = load %struct.rtx_def** %rtx525.i, align 8, !tbaa !5
  %cmp526.i = icmp eq %struct.rtx_def* %137, null
  br i1 %cmp526.i, label %if.end529.i, label %if.then528.i

if.then528.i:                                     ; preds = %lor.lhs.false519.i, %if.end513.i
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str1, i64 0, i64 0), i32 1078, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.update_equiv_regs, i64 0, i64 0)) #6
  unreachable

if.end529.i:                                      ; preds = %lor.lhs.false519.i
  %arrayidx534.i = getelementptr inbounds %struct.rtx_def* %136, i64 0, i32 1, i64 0
  %rtx535.i = bitcast %union.rtunion_def* %arrayidx534.i to %struct.rtx_def**
  %138 = load %struct.rtx_def** %rtx535.i, align 8, !tbaa !5
  %call536.i = call zeroext i1 @can_throw_internal(%struct.rtx_def* %138) #2
  br i1 %call536.i, label %for.inc682.i, label %if.end538.i

if.end538.i:                                      ; preds = %if.end529.i
  %arrayidx540.i = getelementptr inbounds %struct.rtx_def* %138, i64 0, i32 1, i64 3
  %rtx541.i = bitcast %union.rtunion_def* %arrayidx540.i to %struct.rtx_def**
  %139 = load %struct.rtx_def** %rtx541.i, align 8, !tbaa !5
  %call542.i = call i32 @asm_noperands(%struct.rtx_def* %139) #2
  %cmp543.i = icmp slt i32 %call542.i, 0
  br i1 %cmp543.i, label %land.lhs.true545.i, label %if.else606.i

land.lhs.true545.i:                               ; preds = %if.end538.i
  %140 = load %struct.function** @cfun, align 8, !tbaa !5
  %emit.i = getelementptr inbounds %struct.function* %140, i64 0, i32 3
  %141 = load %struct.emit_status** %emit.i, align 8, !tbaa !26
  %x_regno_reg_rtx.i = getelementptr inbounds %struct.emit_status* %141, i64 0, i32 12
  %142 = load %struct.rtx_def*** %x_regno_reg_rtx.i, align 8, !tbaa !29
  %arrayidx547.i = getelementptr inbounds %struct.rtx_def** %142, i64 %idxprom502.i
  %143 = load %struct.rtx_def** %arrayidx547.i, align 8, !tbaa !5
  %144 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %src_p550.i = getelementptr inbounds %struct.equivalence* %144, i64 %idxprom502.i, i32 2
  %145 = load %struct.rtx_def*** %src_p550.i, align 8, !tbaa !20
  %146 = load %struct.rtx_def** %145, align 8, !tbaa !5
  %call551.i = call i32 @validate_replace_rtx(%struct.rtx_def* %143, %struct.rtx_def* %146, %struct.rtx_def* %insn.11076.i) #2
  %tobool552.i = icmp eq i32 %call551.i, 0
  br i1 %tobool552.i, label %if.else606.i, label %for.cond555.i

for.cond555.i:                                    ; preds = %land.lhs.true545.i, %for.cond555.i
  %last_link.0.i = phi %struct.rtx_def* [ %147, %for.cond555.i ], [ %link.01070.i, %land.lhs.true545.i ]
  %arrayidx557.i = getelementptr inbounds %struct.rtx_def* %last_link.0.i, i64 0, i32 1, i64 1
  %rtx558.i = bitcast %union.rtunion_def* %arrayidx557.i to %struct.rtx_def**
  %147 = load %struct.rtx_def** %rtx558.i, align 8, !tbaa !5
  %tobool559.i = icmp eq %struct.rtx_def* %147, null
  br i1 %tobool559.i, label %for.end565.i, label %for.cond555.i

for.end565.i:                                     ; preds = %for.cond555.i
  %arrayidx567.i = getelementptr inbounds %struct.rtx_def* %138, i64 0, i32 1, i64 6
  %rtx568.i = bitcast %union.rtunion_def* %arrayidx567.i to %struct.rtx_def**
  %148 = load %struct.rtx_def** %rtx568.i, align 8, !tbaa !5
  br label %while.cond.outer.i

while.cond.outer.i:                               ; preds = %if.then578.i, %for.end565.i
  %equiv_link.0.ph.i = phi %struct.rtx_def* [ %148, %for.end565.i ], [ %149, %if.then578.i ]
  %last_link.1.ph.i = phi %struct.rtx_def* [ %last_link.0.i, %for.end565.i ], [ %equiv_link.0.i, %if.then578.i ]
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %while.cond.outer.i
  %equiv_link.0.i = phi %struct.rtx_def* [ %149, %while.body.i ], [ %equiv_link.0.ph.i, %while.cond.outer.i ]
  %tobool569.i = icmp eq %struct.rtx_def* %equiv_link.0.i, null
  br i1 %tobool569.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i
  %arrayidx571.i = getelementptr inbounds %struct.rtx_def* %equiv_link.0.i, i64 0, i32 1, i64 1
  %rtx572.i = bitcast %union.rtunion_def* %arrayidx571.i to %struct.rtx_def**
  %149 = load %struct.rtx_def** %rtx572.i, align 8, !tbaa !5
  %150 = getelementptr inbounds %struct.rtx_def* %equiv_link.0.i, i64 0, i32 0
  %bf.load573.i = load i32* %150, align 8
  %bf.clear575.i = and i32 %bf.load573.i, 16711680
  %cmp576.i = icmp eq i32 %bf.clear575.i, 65536
  br i1 %cmp576.i, label %if.then578.i, label %while.cond.i

if.then578.i:                                     ; preds = %while.body.i
  call void @remove_note(%struct.rtx_def* %138, %struct.rtx_def* %equiv_link.0.i) #2
  %151 = getelementptr inbounds %struct.rtx_def* %last_link.1.ph.i, i64 0, i32 1, i64 1, i32 0
  %equiv_link.0.c.i = ptrtoint %struct.rtx_def* %equiv_link.0.i to i64
  store i64 %equiv_link.0.c.i, i64* %151, align 8, !tbaa !5
  %152 = getelementptr inbounds %union.rtunion_def* %arrayidx571.i, i64 0, i32 0
  store i64 0, i64* %152, align 8, !tbaa !5
  br label %while.cond.outer.i

while.end.i:                                      ; preds = %while.cond.i
  %call586.i = call %struct.rtx_def* @remove_death(i32 %132, %struct.rtx_def* %insn.11076.i) #2
  %153 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data588.i = getelementptr inbounds %struct.varray_head_tag* %153, i64 0, i32 4
  %reg589.i = bitcast %union.varray_data_tag* %data588.i to [1 x %struct.reg_info_def*]*
  %arrayidx590.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg589.i, i64 0, i64 %idxprom502.i
  %154 = load %struct.reg_info_def** %arrayidx590.i, align 8, !tbaa !5
  %refs591.i = getelementptr inbounds %struct.reg_info_def* %154, i64 0, i32 4
  store i32 0, i32* %refs591.i, align 4, !tbaa !23
  %freq.i = getelementptr inbounds %struct.reg_info_def* %154, i64 0, i32 5
  store i32 0, i32* %freq.i, align 4, !tbaa !31
  %call596.i = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %138) #2
  %155 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns599.i = getelementptr inbounds %struct.equivalence* %155, i64 %idxprom502.i, i32 4
  %156 = load %struct.rtx_def** %init_insns599.i, align 8, !tbaa !12
  %arrayidx601.i = getelementptr inbounds %struct.rtx_def* %156, i64 0, i32 1, i64 1
  %rtx602.i = bitcast %union.rtunion_def* %arrayidx601.i to %struct.rtx_def**
  %157 = load %struct.rtx_def** %rtx602.i, align 8, !tbaa !5
  store %struct.rtx_def* %157, %struct.rtx_def** %init_insns599.i, align 8, !tbaa !12
  br label %for.inc682.i

if.else606.i:                                     ; preds = %land.lhs.true545.i, %if.end538.i
  %158 = load %struct.rtx_def** %rtx609.i, align 8, !tbaa !5
  %cmp610.i = icmp eq %struct.rtx_def* %158, %138
  br i1 %cmp610.i, label %for.inc682.i, label %land.lhs.true660.i

land.lhs.true660.i:                               ; preds = %if.else606.i
  %159 = load %struct.rtx_def** %rtx541.i, align 8, !tbaa !5
  %call616.i = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %159, %struct.rtx_def* %insn.11076.i) #2
  %arrayidx618.i = getelementptr inbounds %struct.rtx_def* %138, i64 0, i32 1, i64 6
  %rtx619.i = bitcast %union.rtunion_def* %arrayidx618.i to %struct.rtx_def**
  %160 = load %struct.rtx_def** %rtx619.i, align 8, !tbaa !5
  %161 = getelementptr inbounds %struct.rtx_def* %call616.i, i64 0, i32 1, i64 6, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %160 to i64
  store i64 %.c.i, i64* %161, align 8, !tbaa !5
  %162 = getelementptr inbounds %union.rtunion_def* %arrayidx618.i, i64 0, i32 0
  store i64 0, i64* %162, align 8, !tbaa !5
  %arrayidx627.i = getelementptr inbounds %struct.rtx_def* %138, i64 0, i32 1, i64 4
  %rtint.i = bitcast %union.rtunion_def* %arrayidx627.i to i32*
  %163 = load i32* %rtint.i, align 4, !tbaa !1
  %arrayidx629.i = getelementptr inbounds %struct.rtx_def* %call616.i, i64 0, i32 1, i64 4
  %rtint630.i = bitcast %union.rtunion_def* %arrayidx629.i to i32*
  store i32 %163, i32* %rtint630.i, align 4, !tbaa !1
  %call631.i = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %138) #2
  %164 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns634.i = getelementptr inbounds %struct.equivalence* %164, i64 %idxprom502.i, i32 4
  %165 = load %struct.rtx_def** %init_insns634.i, align 8, !tbaa !12
  %166 = getelementptr inbounds %struct.rtx_def* %165, i64 0, i32 1, i64 0, i32 0
  %call616.c.i = ptrtoint %struct.rtx_def* %call616.i to i64
  store i64 %call616.c.i, i64* %166, align 8, !tbaa !5
  %167 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data645.i = getelementptr inbounds %struct.varray_head_tag* %167, i64 0, i32 4
  %reg646.i = bitcast %union.varray_data_tag* %data645.i to [1 x %struct.reg_info_def*]*
  %arrayidx647.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg646.i, i64 0, i64 %idxprom502.i
  %168 = load %struct.reg_info_def** %arrayidx647.i, align 8, !tbaa !5
  %basic_block648.i = getelementptr inbounds %struct.reg_info_def* %168, i64 0, i32 9
  store i32 %.pre1122.i, i32* %basic_block648.i, align 4, !tbaa !17
  %calls_crossed.i = getelementptr inbounds %struct.reg_info_def* %168, i64 0, i32 8
  store i32 0, i32* %calls_crossed.i, align 4, !tbaa !32
  %live_length657.i = getelementptr inbounds %struct.reg_info_def* %168, i64 0, i32 7
  store i32 2, i32* %live_length657.i, align 4, !tbaa !22
  %169 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data662.i = getelementptr inbounds %struct.varray_head_tag* %169, i64 0, i32 4
  %bb663.i = bitcast %union.varray_data_tag* %data662.i to [1 x %struct.basic_block_def*]*
  %arrayidx664.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb663.i, i64 0, i64 %indvars.iv.next1111.i
  %170 = load %struct.basic_block_def** %arrayidx664.i, align 8, !tbaa !5
  %head665.i = getelementptr inbounds %struct.basic_block_def* %170, i64 0, i32 0
  %171 = load %struct.rtx_def** %head665.i, align 8, !tbaa !25
  %cmp666.i = icmp eq %struct.rtx_def* %insn.11076.i, %171
  br i1 %cmp666.i, label %if.then668.i, label %if.end677.i

if.then668.i:                                     ; preds = %land.lhs.true660.i
  %172 = load %struct.rtx_def** %rtx609.i, align 8, !tbaa !5
  store %struct.rtx_def* %172, %struct.rtx_def** %head665.i, align 8, !tbaa !25
  br label %if.end677.i

if.end677.i:                                      ; preds = %if.then668.i, %land.lhs.true660.i
  call void @bitmap_set_bit(%struct.bitmap_head_def* %cleared_regs.i, i32 %132) #2
  %inc678.i = add nsw i32 %clear_regnos.21069.i, 1
  br label %for.inc682.i

for.inc682.i:                                     ; preds = %if.end677.i, %if.else606.i, %while.end.i, %if.end529.i, %lor.lhs.false506.i, %if.then494.i, %land.lhs.true485.i, %for.body479.i
  %clear_regnos.3.i = phi i32 [ %clear_regnos.21069.i, %lor.lhs.false506.i ], [ %clear_regnos.21069.i, %if.end529.i ], [ %clear_regnos.21069.i, %while.end.i ], [ %inc678.i, %if.end677.i ], [ %clear_regnos.21069.i, %if.else606.i ], [ %clear_regnos.21069.i, %if.then494.i ], [ %clear_regnos.21069.i, %land.lhs.true485.i ], [ %clear_regnos.21069.i, %for.body479.i ]
  %arrayidx684.i = getelementptr inbounds %struct.rtx_def* %link.01070.i, i64 0, i32 1, i64 1
  %link.0.in.i = bitcast %union.rtunion_def* %arrayidx684.i to %struct.rtx_def**
  %link.0.i = load %struct.rtx_def** %link.0.in.i, align 8
  %tobool478.i = icmp eq %struct.rtx_def* %link.0.i, null
  br i1 %tobool478.i, label %for.cond477.for.inc687.loopexit_crit_edge.i, label %for.body479.i

for.cond477.for.inc687.loopexit_crit_edge.i:      ; preds = %for.inc682.i
  %.pre1120.pre.i = load %struct.rtx_def** %head458.i, align 8, !tbaa !25
  br label %for.inc687.i

for.inc687.i:                                     ; preds = %for.cond477.for.inc687.loopexit_crit_edge.i, %if.end473.i, %for.body464.i
  %173 = phi %struct.rtx_def* [ %125, %for.body464.i ], [ %.pre1120.pre.i, %for.cond477.for.inc687.loopexit_crit_edge.i ], [ %125, %if.end473.i ]
  %clear_regnos.4.i = phi i32 [ %clear_regnos.11075.i, %for.body464.i ], [ %clear_regnos.3.i, %for.cond477.for.inc687.loopexit_crit_edge.i ], [ %clear_regnos.11075.i, %if.end473.i ]
  %arrayidx689.i = getelementptr inbounds %struct.rtx_def* %insn.11076.i, i64 0, i32 1, i64 1
  %rtx690.i = bitcast %union.rtunion_def* %arrayidx689.i to %struct.rtx_def**
  %insn.1.i = load %struct.rtx_def** %rtx690.i, align 8
  %arrayidx460.i = getelementptr inbounds %struct.rtx_def* %173, i64 0, i32 1, i64 1
  %rtx461.i = bitcast %union.rtunion_def* %arrayidx460.i to %struct.rtx_def**
  %174 = load %struct.rtx_def** %rtx461.i, align 8, !tbaa !5
  %cmp462.i = icmp eq %struct.rtx_def* %insn.1.i, %174
  br i1 %cmp462.i, label %for.cond446.loopexit.i, label %for.body464.i

for.end694.i:                                     ; preds = %for.cond446.loopexit.i
  %tobool695.i = icmp eq i32 %clear_regnos.1.lcssa.i, 0
  br i1 %tobool695.i, label %update_equiv_regs.exit, label %if.then696.i

if.then696.i:                                     ; preds = %for.end694.i
  %cmp697.i = icmp sgt i32 %clear_regnos.1.lcssa.i, 8
  br i1 %cmp697.i, label %for.cond700.preheader.i, label %do.body.i

for.cond700.preheader.i:                          ; preds = %if.then696.i
  %175 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp7011059.i = icmp sgt i32 %175, 0
  br i1 %cmp7011059.i, label %for.body703.i, label %update_equiv_regs.exit

for.body703.i:                                    ; preds = %for.cond700.preheader.i, %for.body703.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body703.i ], [ 0, %for.cond700.preheader.i ]
  %176 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data705.i = getelementptr inbounds %struct.varray_head_tag* %176, i64 0, i32 4
  %bb706.i = bitcast %union.varray_data_tag* %data705.i to [1 x %struct.basic_block_def*]*
  %arrayidx707.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb706.i, i64 0, i64 %indvars.iv.i
  %177 = load %struct.basic_block_def** %arrayidx707.i, align 8, !tbaa !5
  %global_live_at_start.i = getelementptr inbounds %struct.basic_block_def* %177, i64 0, i32 8
  %178 = load %struct.bitmap_head_def** %global_live_at_start.i, align 8, !tbaa !33
  %call713.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %178, %struct.bitmap_head_def* %178, %struct.bitmap_head_def* %cleared_regs.i, i32 1) #2
  %179 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data715.i = getelementptr inbounds %struct.varray_head_tag* %179, i64 0, i32 4
  %bb716.i = bitcast %union.varray_data_tag* %data715.i to [1 x %struct.basic_block_def*]*
  %arrayidx717.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb716.i, i64 0, i64 %indvars.iv.i
  %180 = load %struct.basic_block_def** %arrayidx717.i, align 8, !tbaa !5
  %global_live_at_end.i = getelementptr inbounds %struct.basic_block_def* %180, i64 0, i32 9
  %181 = load %struct.bitmap_head_def** %global_live_at_end.i, align 8, !tbaa !34
  %call723.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %181, %struct.bitmap_head_def* %181, %struct.bitmap_head_def* %cleared_regs.i, i32 1) #2
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %182 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %183 = trunc i64 %indvars.iv.next.i to i32
  %cmp701.i = icmp slt i32 %183, %182
  br i1 %cmp701.i, label %for.body703.i, label %update_equiv_regs.exit

do.body.i:                                        ; preds = %if.then696.i
  %first.i = getelementptr inbounds %struct.bitmap_head_def* %cleared_regs.i, i64 0, i32 0
  %184 = load %struct.bitmap_element_def** %first.i, align 8, !tbaa !35
  %cmp7441064.i = icmp eq %struct.bitmap_element_def* %184, null
  br i1 %cmp7441064.i, label %update_equiv_regs.exit, label %for.cond747.preheader.i

for.cond747.preheader.i:                          ; preds = %do.body.i, %if.end793.1.i
  %ptr_.11065.i = phi %struct.bitmap_element_def* [ %212, %if.end793.1.i ], [ %184, %do.body.i ]
  %indx764.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.11065.i, i64 0, i32 2
  %arrayidx752.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.11065.i, i64 0, i32 3, i64 0
  %185 = load i64* %arrayidx752.i, align 8, !tbaa !37
  %cmp753.i = icmp eq i64 %185, 0
  br i1 %cmp753.i, label %if.end793.i, label %for.body759.i

for.body759.i:                                    ; preds = %for.cond747.preheader.i, %for.inc790.i
  %indvars.iv1104.i = phi i64 [ %indvars.iv.next1105.i, %for.inc790.i ], [ 0, %for.cond747.preheader.i ]
  %word_.0.i = phi i64 [ %word_.1.i, %for.inc790.i ], [ %185, %for.cond747.preheader.i ]
  %shl.i = shl i64 1, %indvars.iv1104.i
  %and.i = and i64 %shl.i, %word_.0.i
  %cmp760.i = icmp eq i64 %and.i, 0
  br i1 %cmp760.i, label %for.inc790.i, label %if.then762.i

if.then762.i:                                     ; preds = %for.body759.i
  %neg.i = xor i64 %shl.i, -1
  %and763.i = and i64 %word_.0.i, %neg.i
  %186 = load i32* %indx764.i, align 4, !tbaa !38
  %mul765.i = shl i32 %186, 7
  %187 = trunc i64 %indvars.iv1104.i to i32
  %add767.i = add i32 %mul765.i, %187
  %188 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp7691061.i = icmp sgt i32 %188, 0
  br i1 %cmp7691061.i, label %for.body771.i, label %for.end784.i

for.body771.i:                                    ; preds = %if.then762.i, %for.body771.i
  %indvars.iv1102.i = phi i64 [ %indvars.iv.next1103.i, %for.body771.i ], [ 0, %if.then762.i ]
  %189 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data773.i = getelementptr inbounds %struct.varray_head_tag* %189, i64 0, i32 4
  %bb774.i = bitcast %union.varray_data_tag* %data773.i to [1 x %struct.basic_block_def*]*
  %arrayidx775.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb774.i, i64 0, i64 %indvars.iv1102.i
  %190 = load %struct.basic_block_def** %arrayidx775.i, align 8, !tbaa !5
  %global_live_at_start776.i = getelementptr inbounds %struct.basic_block_def* %190, i64 0, i32 8
  %191 = load %struct.bitmap_head_def** %global_live_at_start776.i, align 8, !tbaa !33
  call void @bitmap_clear_bit(%struct.bitmap_head_def* %191, i32 %add767.i) #2
  %192 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data778.i = getelementptr inbounds %struct.varray_head_tag* %192, i64 0, i32 4
  %bb779.i = bitcast %union.varray_data_tag* %data778.i to [1 x %struct.basic_block_def*]*
  %arrayidx780.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb779.i, i64 0, i64 %indvars.iv1102.i
  %193 = load %struct.basic_block_def** %arrayidx780.i, align 8, !tbaa !5
  %global_live_at_end781.i = getelementptr inbounds %struct.basic_block_def* %193, i64 0, i32 9
  %194 = load %struct.bitmap_head_def** %global_live_at_end781.i, align 8, !tbaa !34
  call void @bitmap_clear_bit(%struct.bitmap_head_def* %194, i32 %add767.i) #2
  %indvars.iv.next1103.i = add nuw nsw i64 %indvars.iv1102.i, 1
  %195 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %196 = trunc i64 %indvars.iv.next1103.i to i32
  %cmp769.i = icmp slt i32 %196, %195
  br i1 %cmp769.i, label %for.body771.i, label %for.end784.i

for.end784.i:                                     ; preds = %for.body771.i, %if.then762.i
  %cmp785.i = icmp eq i64 %and763.i, 0
  br i1 %cmp785.i, label %if.end793.i, label %for.inc790.i

for.inc790.i:                                     ; preds = %for.end784.i, %for.body759.i
  %word_.1.i = phi i64 [ %and763.i, %for.end784.i ], [ %word_.0.i, %for.body759.i ]
  %indvars.iv.next1105.i = add nuw nsw i64 %indvars.iv1104.i, 1
  %197 = trunc i64 %indvars.iv.next1105.i to i32
  %cmp757.old.i = icmp ult i32 %197, 64
  br i1 %cmp757.old.i, label %for.body759.i, label %if.end793.i

if.end793.i:                                      ; preds = %for.inc790.i, %for.end784.i, %for.cond747.preheader.i
  %arrayidx752.1.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.11065.i, i64 0, i32 3, i64 1
  %198 = load i64* %arrayidx752.1.i, align 8, !tbaa !37
  %cmp753.1.i = icmp eq i64 %198, 0
  br i1 %cmp753.1.i, label %if.end793.1.i, label %for.body759.1.i

for.body759.1.i:                                  ; preds = %if.end793.i, %for.inc790.1.i
  %indvars.iv1104.1.i = phi i64 [ %indvars.iv.next1105.1.i, %for.inc790.1.i ], [ 0, %if.end793.i ]
  %word_.0.1.i = phi i64 [ %word_.1.1.i, %for.inc790.1.i ], [ %198, %if.end793.i ]
  %shl.1.i = shl i64 1, %indvars.iv1104.1.i
  %and.1.i = and i64 %shl.1.i, %word_.0.1.i
  %cmp760.1.i = icmp eq i64 %and.1.i, 0
  br i1 %cmp760.1.i, label %for.inc790.1.i, label %if.then762.1.i

if.then762.1.i:                                   ; preds = %for.body759.1.i
  %neg.1.i = xor i64 %shl.1.i, -1
  %and763.1.i = and i64 %word_.0.1.i, %neg.1.i
  %199 = load i32* %indx764.i, align 4, !tbaa !38
  %mul765.1.i = shl i32 %199, 7
  %200 = add i64 %indvars.iv1104.1.i, 64
  %201 = trunc i64 %200 to i32
  %add767.1.i = add i32 %mul765.1.i, %201
  %202 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp7691061.1.i = icmp sgt i32 %202, 0
  br i1 %cmp7691061.1.i, label %for.body771.1.i, label %for.end784.1.i

for.body771.1.i:                                  ; preds = %if.then762.1.i, %for.body771.1.i
  %indvars.iv1102.1.i = phi i64 [ %indvars.iv.next1103.1.i, %for.body771.1.i ], [ 0, %if.then762.1.i ]
  %203 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data773.1.i = getelementptr inbounds %struct.varray_head_tag* %203, i64 0, i32 4
  %bb774.1.i = bitcast %union.varray_data_tag* %data773.1.i to [1 x %struct.basic_block_def*]*
  %arrayidx775.1.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb774.1.i, i64 0, i64 %indvars.iv1102.1.i
  %204 = load %struct.basic_block_def** %arrayidx775.1.i, align 8, !tbaa !5
  %global_live_at_start776.1.i = getelementptr inbounds %struct.basic_block_def* %204, i64 0, i32 8
  %205 = load %struct.bitmap_head_def** %global_live_at_start776.1.i, align 8, !tbaa !33
  call void @bitmap_clear_bit(%struct.bitmap_head_def* %205, i32 %add767.1.i) #2
  %206 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data778.1.i = getelementptr inbounds %struct.varray_head_tag* %206, i64 0, i32 4
  %bb779.1.i = bitcast %union.varray_data_tag* %data778.1.i to [1 x %struct.basic_block_def*]*
  %arrayidx780.1.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb779.1.i, i64 0, i64 %indvars.iv1102.1.i
  %207 = load %struct.basic_block_def** %arrayidx780.1.i, align 8, !tbaa !5
  %global_live_at_end781.1.i = getelementptr inbounds %struct.basic_block_def* %207, i64 0, i32 9
  %208 = load %struct.bitmap_head_def** %global_live_at_end781.1.i, align 8, !tbaa !34
  call void @bitmap_clear_bit(%struct.bitmap_head_def* %208, i32 %add767.1.i) #2
  %indvars.iv.next1103.1.i = add nuw nsw i64 %indvars.iv1102.1.i, 1
  %209 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %210 = trunc i64 %indvars.iv.next1103.1.i to i32
  %cmp769.1.i = icmp slt i32 %210, %209
  br i1 %cmp769.1.i, label %for.body771.1.i, label %for.end784.1.i

for.end784.1.i:                                   ; preds = %for.body771.1.i, %if.then762.1.i
  %cmp785.1.i = icmp eq i64 %and763.1.i, 0
  br i1 %cmp785.1.i, label %if.end793.1.i, label %for.inc790.1.i

for.inc790.1.i:                                   ; preds = %for.end784.1.i, %for.body759.1.i
  %word_.1.1.i = phi i64 [ %and763.1.i, %for.end784.1.i ], [ %word_.0.1.i, %for.body759.1.i ]
  %indvars.iv.next1105.1.i = add nuw nsw i64 %indvars.iv1104.1.i, 1
  %211 = trunc i64 %indvars.iv.next1105.1.i to i32
  %cmp757.old.1.i = icmp ult i32 %211, 64
  br i1 %cmp757.old.1.i, label %for.body759.1.i, label %if.end793.1.i

if.end793.1.i:                                    ; preds = %for.inc790.1.i, %for.end784.1.i, %if.end793.i
  %next798.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.11065.i, i64 0, i32 0
  %212 = load %struct.bitmap_element_def** %next798.i, align 8, !tbaa !40
  %cmp744.i = icmp eq %struct.bitmap_element_def* %212, null
  br i1 %cmp744.i, label %update_equiv_regs.exit, label %for.cond747.preheader.i

update_equiv_regs.exit:                           ; preds = %if.end793.1.i, %for.body703.i, %entry, %for.cond446.preheader.i, %for.end694.i, %for.cond700.preheader.i, %do.body.i
  call void @end_alias_analysis() #2
  call void @bitmap_clear(%struct.bitmap_head_def* %cleared_regs.i) #2
  %213 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %214 = getelementptr inbounds %struct.equivalence* %213, i64 0, i32 0
  call void @free(i8* %214) #2
  call void @llvm.lifetime.end(i64 24, i8* %0) #2
  %215 = load i32* @max_regno, align 4, !tbaa !1
  %sub = add nsw i32 %215, -53
  %conv = sext i32 %sub to i64
  %mul = mul i64 %conv, 44
  %call = call noalias i8* @xmalloc(i64 %mul) #2
  %216 = bitcast i8* %call to %struct.qty*
  store %struct.qty* %216, %struct.qty** @qty, align 8, !tbaa !5
  %mul2 = shl nsw i64 %conv, 3
  %call3 = call noalias i8* @xmalloc(i64 %mul2) #2
  %217 = bitcast i8* %call3 to i64*
  store i64* %217, i64** @qty_phys_copy_sugg, align 8, !tbaa !5
  %mul5 = shl nsw i64 %conv, 1
  %call6 = call noalias i8* @xmalloc(i64 %mul5) #2
  %218 = bitcast i8* %call6 to i16*
  store i16* %218, i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %call9 = call noalias i8* @xmalloc(i64 %mul2) #2
  %219 = bitcast i8* %call9 to i64*
  store i64* %219, i64** @qty_phys_sugg, align 8, !tbaa !5
  %call12 = call noalias i8* @xmalloc(i64 %mul5) #2
  %220 = bitcast i8* %call12 to i16*
  store i16* %220, i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %221 = load i32* @max_regno, align 4, !tbaa !1
  %conv13 = sext i32 %221 to i64
  %mul14 = shl nsw i64 %conv13, 2
  %call15 = call noalias i8* @xmalloc(i64 %mul14) #2
  %222 = bitcast i8* %call15 to i32*
  store i32* %222, i32** @reg_qty, align 8, !tbaa !5
  %223 = load i32* @max_regno, align 4, !tbaa !1
  %conv16 = sext i32 %223 to i64
  %call18 = call noalias i8* @xmalloc(i64 %conv16) #2
  store i8* %call18, i8** @reg_offset, align 8, !tbaa !5
  %224 = load i32* @max_regno, align 4, !tbaa !1
  %conv19 = sext i32 %224 to i64
  %mul20 = shl nsw i64 %conv19, 2
  %call21 = call noalias i8* @xmalloc(i64 %mul20) #2
  %225 = bitcast i8* %call21 to i32*
  store i32* %225, i32** @reg_next_in_qty, align 8, !tbaa !5
  %226 = load i32* @max_regno, align 4, !tbaa !1
  %cmp142 = icmp sgt i32 %226, 53
  br i1 %cmp142, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %update_equiv_regs.exit
  %227 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %227, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %228 = load i32** @reg_qty, align 8, !tbaa !5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv156 = phi i64 [ 53, %for.body.lr.ph ], [ %indvars.iv.next157, %for.inc ]
  %arrayidx = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %indvars.iv156
  %229 = load %struct.reg_info_def** %arrayidx, align 8, !tbaa !5
  %basic_block = getelementptr inbounds %struct.reg_info_def* %229, i64 0, i32 9
  %230 = load i32* %basic_block, align 4, !tbaa !17
  %cmp23 = icmp sgt i32 %230, -1
  br i1 %cmp23, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body
  %deaths = getelementptr inbounds %struct.reg_info_def* %229, i64 0, i32 6
  %231 = load i32* %deaths, align 4, !tbaa !41
  %cmp29 = icmp eq i32 %231, 1
  br i1 %cmp29, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %arrayidx32 = getelementptr inbounds i32* %228, i64 %indvars.iv156
  store i32 -2, i32* %arrayidx32, align 4, !tbaa !1
  br label %for.inc

if.else:                                          ; preds = %land.lhs.true, %for.body
  %arrayidx34 = getelementptr inbounds i32* %228, i64 %indvars.iv156
  store i32 -1, i32* %arrayidx34, align 4, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %indvars.iv.next157 = add nuw nsw i64 %indvars.iv156, 1
  %232 = load i32* @max_regno, align 4, !tbaa !1
  %233 = trunc i64 %indvars.iv.next157 to i32
  %cmp = icmp slt i32 %233, %232
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %update_equiv_regs.exit
  store i32 %sub, i32* @next_qty, align 4, !tbaa !1
  %234 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp36140 = icmp sgt i32 %234, 0
  br i1 %cmp36140, label %for.body38.lr.ph, label %for.end69

for.body38.lr.ph:                                 ; preds = %for.end
  %235 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 32), align 1
  %cmp242.i = icmp eq i8 %235, 105
  br label %for.body38

for.body38:                                       ; preds = %block_alloc.exit.for.body38_crit_edge, %for.body38.lr.ph
  %236 = phi i32 [ %sub, %for.body38.lr.ph ], [ %.pre, %block_alloc.exit.for.body38_crit_edge ]
  %indvars.iv154 = phi i64 [ 0, %for.body38.lr.ph ], [ %indvars.iv.next155, %block_alloc.exit.for.body38_crit_edge ]
  %cmp39 = icmp slt i32 %236, 6
  br i1 %cmp39, label %for.cond42.preheader, label %if.else57

for.cond42.preheader:                             ; preds = %for.body38
  %cmp43129 = icmp sgt i32 %236, 0
  br i1 %cmp43129, label %for.body45.lr.ph, label %if.end66

for.body45.lr.ph:                                 ; preds = %for.cond42.preheader
  %237 = load i64** @qty_phys_copy_sugg, align 8, !tbaa !5
  %238 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %239 = load i64** @qty_phys_sugg, align 8, !tbaa !5
  %240 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  br label %for.body45

for.body45:                                       ; preds = %for.body45.lr.ph, %for.body45
  %indvars.iv = phi i64 [ 0, %for.body45.lr.ph ], [ %indvars.iv.next, %for.body45 ]
  %arrayidx47 = getelementptr inbounds i64* %237, i64 %indvars.iv
  store i64 0, i64* %arrayidx47, align 8, !tbaa !37
  %arrayidx49 = getelementptr inbounds i16* %238, i64 %indvars.iv
  store i16 0, i16* %arrayidx49, align 2, !tbaa !42
  %arrayidx51 = getelementptr inbounds i64* %239, i64 %indvars.iv
  store i64 0, i64* %arrayidx51, align 8, !tbaa !37
  %arrayidx53 = getelementptr inbounds i16* %240, i64 %indvars.iv
  store i16 0, i16* %arrayidx53, align 2, !tbaa !42
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %241 = trunc i64 %indvars.iv.next to i32
  %cmp43 = icmp slt i32 %241, %236
  br i1 %cmp43, label %for.body45, label %if.end66

if.else57:                                        ; preds = %for.body38
  %242 = load i64** @qty_phys_copy_sugg, align 8, !tbaa !5
  %243 = bitcast i64* %242 to i8*
  %conv58 = sext i32 %236 to i64
  %mul59 = shl nsw i64 %conv58, 3
  call void @llvm.memset.p0i8.i64(i8* %243, i8 0, i64 %mul59, i32 1, i1 false)
  %244 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %245 = bitcast i16* %244 to i8*
  %246 = load i32* @next_qty, align 4, !tbaa !1
  %conv60 = sext i32 %246 to i64
  %mul61 = shl nsw i64 %conv60, 1
  call void @llvm.memset.p0i8.i64(i8* %245, i8 0, i64 %mul61, i32 1, i1 false)
  %247 = load i64** @qty_phys_sugg, align 8, !tbaa !5
  %248 = bitcast i64* %247 to i8*
  %249 = load i32* @next_qty, align 4, !tbaa !1
  %conv62 = sext i32 %249 to i64
  %mul63 = shl nsw i64 %conv62, 3
  call void @llvm.memset.p0i8.i64(i8* %248, i8 0, i64 %mul63, i32 1, i1 false)
  %250 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %251 = bitcast i16* %250 to i8*
  %252 = load i32* @next_qty, align 4, !tbaa !1
  %conv64 = sext i32 %252 to i64
  %mul65 = shl nsw i64 %conv64, 1
  call void @llvm.memset.p0i8.i64(i8* %251, i8 0, i64 %mul65, i32 1, i1 false)
  br label %if.end66

if.end66:                                         ; preds = %for.body45, %for.cond42.preheader, %if.else57
  store i32 0, i32* @next_qty, align 4, !tbaa !1
  %call.i88 = call i32 @get_max_uid() #2
  %253 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data.i89 = getelementptr inbounds %struct.varray_head_tag* %253, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i89 to [1 x %struct.basic_block_def*]*
  %arrayidx.i90 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %indvars.iv154
  %254 = load %struct.basic_block_def** %arrayidx.i90, align 8, !tbaa !5
  %end.i91 = getelementptr inbounds %struct.basic_block_def* %254, i64 0, i32 1
  %head.i97 = getelementptr inbounds %struct.basic_block_def* %254, i64 0, i32 0
  br label %while.body.i96

while.body.i96:                                   ; preds = %if.end10.i, %if.end66
  %insn_count.0.i = phi i32 [ 0, %if.end66 ], [ %insn_count.1.i, %if.end10.i ]
  %insn.0.in.i = phi %struct.rtx_def** [ %end.i91, %if.end66 ], [ %rtx.i99, %if.end10.i ]
  %insn.0.i92 = load %struct.rtx_def** %insn.0.in.i, align 8
  %255 = getelementptr inbounds %struct.rtx_def* %insn.0.i92, i64 0, i32 0
  %bf.load.i93 = load i32* %255, align 8
  %bf.clear.i94 = and i32 %bf.load.i93, 65535
  %cmp.i95 = icmp eq i32 %bf.clear.i94, 37
  br i1 %cmp.i95, label %if.end3.i, label %if.then.i

if.then.i:                                        ; preds = %while.body.i96
  %inc.i = add nsw i32 %insn_count.0.i, 1
  %cmp1.i = icmp slt i32 %insn_count.0.i, %call.i88
  br i1 %cmp1.i, label %if.end3.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.then.i
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str1, i64 0, i64 0), i32 1242, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.block_alloc, i64 0, i64 0)) #6
  unreachable

if.end3.i:                                        ; preds = %if.then.i, %while.body.i96
  %insn_count.1.i = phi i32 [ %inc.i, %if.then.i ], [ %insn_count.0.i, %while.body.i96 ]
  %256 = load %struct.rtx_def** %head.i97, align 8, !tbaa !25
  %cmp8.i = icmp eq %struct.rtx_def* %insn.0.i92, %256
  br i1 %cmp8.i, label %while.end.i104, label %if.end10.i

if.end10.i:                                       ; preds = %if.end3.i
  %arrayidx11.i98 = getelementptr inbounds %struct.rtx_def* %insn.0.i92, i64 0, i32 1, i64 1
  %rtx.i99 = bitcast %union.rtunion_def* %arrayidx11.i98 to %struct.rtx_def**
  br label %while.body.i96

while.end.i104:                                   ; preds = %if.end3.i
  %mul.i100 = shl i32 %insn_count.1.i, 1
  %add.i = add nsw i32 %mul.i100, 2
  %conv.i101 = sext i32 %add.i to i64
  %call12.i = call noalias i8* @xcalloc(i64 %conv.i101, i64 8) #2
  %257 = bitcast i8* %call12.i to i64*
  store i64* %257, i64** @regs_live_at, align 8, !tbaa !5
  store i64 0, i64* @regs_live, align 8, !tbaa !37
  %258 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data14.i = getelementptr inbounds %struct.varray_head_tag* %258, i64 0, i32 4
  %bb15.i = bitcast %union.varray_data_tag* %data14.i to [1 x %struct.basic_block_def*]*
  %arrayidx16.i102 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb15.i, i64 0, i64 %indvars.iv154
  %259 = load %struct.basic_block_def** %arrayidx16.i102, align 8, !tbaa !5
  %global_live_at_start.i103 = getelementptr inbounds %struct.basic_block_def* %259, i64 0, i32 8
  %260 = load %struct.bitmap_head_def** %global_live_at_start.i103, align 8, !tbaa !33
  call void @reg_set_to_hard_reg_set(i64* @regs_live, %struct.bitmap_head_def* %260) #2
  %261 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data18.i = getelementptr inbounds %struct.varray_head_tag* %261, i64 0, i32 4
  %bb19.i = bitcast %union.varray_data_tag* %data18.i to [1 x %struct.basic_block_def*]*
  %arrayidx20.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb19.i, i64 0, i64 %indvars.iv154
  %262 = load %struct.basic_block_def** %arrayidx20.i, align 8, !tbaa !5
  %head21.i = getelementptr inbounds %struct.basic_block_def* %262, i64 0, i32 0
  br label %while.body22.i

while.body22.i:                                   ; preds = %if.end543.i, %while.end.i104
  %no_conflict_combined_regno.0.i = phi i32 [ -1, %while.end.i104 ], [ %no_conflict_combined_regno.2.i, %if.end543.i ]
  %insn_number.0.i = phi i32 [ 0, %while.end.i104 ], [ %insn_number.0.inc28.i, %if.end543.i ]
  %insn.1.in.i = phi %struct.rtx_def** [ %head21.i, %while.end.i104 ], [ %rtx546.i, %if.end543.i ]
  %insn.1.i105 = load %struct.rtx_def** %insn.1.in.i, align 8
  %263 = getelementptr inbounds %struct.rtx_def* %insn.1.i105, i64 0, i32 0
  %bf.load23.i = load i32* %263, align 8
  %bf.clear24.i = and i32 %bf.load23.i, 65535
  %not.cmp25.i = icmp ne i32 %bf.clear24.i, 37
  %inc28.i = zext i1 %not.cmp25.i to i32
  %insn_number.0.inc28.i = add nsw i32 %inc28.i, %insn_number.0.i
  %idxprom321080.i = zext i32 %bf.clear24.i to i64
  %arrayidx33.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom321080.i
  %264 = load i8* %arrayidx33.i, align 1, !tbaa !11
  %cmp35.i = icmp eq i8 %264, 105
  br i1 %cmp35.i, label %if.then37.i, label %if.end526.i

if.then37.i:                                      ; preds = %while.body22.i
  store i32 %insn_number.0.inc28.i, i32* @this_insn_number, align 4, !tbaa !1
  store %struct.rtx_def* %insn.1.i105, %struct.rtx_def** @this_insn, align 8, !tbaa !5
  call void @extract_insn(%struct.rtx_def* %insn.1.i105) #2
  store i32 -1, i32* @which_alternative, align 4, !tbaa !1
  %265 = load i32* @optimize, align 4, !tbaa !1
  %tobool.i106 = icmp ne i32 %265, 0
  %266 = load i32* bitcast (i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7) to i32*), align 4
  %267 = trunc i32 %266 to i8
  %cmp40.i = icmp sgt i8 %267, 1
  %or.cond.i107 = and i1 %tobool.i106, %cmp40.i
  %268 = lshr i32 %266, 16
  br i1 %or.cond.i107, label %land.lhs.true42.i, label %if.end194.i

land.lhs.true42.i:                                ; preds = %if.then37.i
  %269 = load i8** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 2, i64 0), align 8, !tbaa !5
  %270 = load i8* %269, align 1, !tbaa !11
  %cmp45.i = icmp eq i8 %270, 61
  br i1 %cmp45.i, label %land.lhs.true47.i, label %if.end194.i

land.lhs.true47.i:                                ; preds = %land.lhs.true42.i
  %arrayidx48.i = getelementptr inbounds i8* %269, i64 1
  %271 = load i8* %arrayidx48.i, align 1, !tbaa !11
  %cmp50.i = icmp eq i8 %271, 38
  br i1 %cmp50.i, label %if.end194.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %land.lhs.true47.i
  %sext.i = shl i32 %268, 24
  %conv60.i = ashr exact i32 %sext.i, 24
  %sext = shl i32 %266, 24
  %272 = ashr exact i32 %sext, 24
  br label %for.body.i108

for.body.i108:                                    ; preds = %for.body.i108, %for.body.lr.ph.i
  %indvars.iv1210.i = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next1211.i, %for.body.i108 ]
  %n_matching_alts.01174.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %add59.i, %for.body.i108 ]
  %must_match_0.01173.i = phi i32 [ -1, %for.body.lr.ph.i ], [ %i38.0.must_match_0.0.i, %for.body.i108 ]
  %arrayidx57.i = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 2, i64 %indvars.iv1210.i
  %273 = load i8** %arrayidx57.i, align 8, !tbaa !5
  %call58.i = call fastcc i32 @requires_inout(i8* %273) #2
  %add59.i = add nsw i32 %call58.i, %n_matching_alts.01174.i
  %cmp61.i = icmp eq i32 %call58.i, %conv60.i
  %274 = trunc i64 %indvars.iv1210.i to i32
  %i38.0.must_match_0.0.i = select i1 %cmp61.i, i32 %274, i32 %must_match_0.01173.i
  %indvars.iv.next1211.i = add nuw nsw i64 %indvars.iv1210.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1211.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %272
  br i1 %exitcond, label %for.body70.lr.ph.i, label %for.body.i108

for.body70.lr.ph.i:                               ; preds = %for.body.i108
  %275 = load %struct.rtx_def** getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 0, i64 0), align 8, !tbaa !5
  %cmp71.i = icmp sgt i32 %i38.0.must_match_0.0.i, -1
  %cmp71.not.i = xor i1 %cmp71.i, true
  %276 = getelementptr inbounds %struct.rtx_def* %275, i64 0, i32 0
  %add77.i = add nsw i32 %i38.0.must_match_0.0.i, 1
  %sub88.i = add nsw i32 %i38.0.must_match_0.0.i, -1
  br label %for.body70.i

for.body70.i:                                     ; preds = %for.inc191.i, %for.body70.lr.ph.i
  %.in.i = phi i32 [ %268, %for.body70.lr.ph.i ], [ %296, %for.inc191.i ]
  %indvars.iv1212.i = phi i64 [ 1, %for.body70.lr.ph.i ], [ %indvars.iv.next1213.i, %for.inc191.i ]
  %r1.01179.i = phi %struct.rtx_def* [ null, %for.body70.lr.ph.i ], [ %r1.3.i, %for.inc191.i ]
  %277 = trunc i64 %indvars.iv1212.i to i32
  %cmp74.i = icmp eq i32 %277, %i38.0.must_match_0.0.i
  %or.cond1086.i = or i1 %cmp74.i, %cmp71.not.i
  br i1 %or.cond1086.i, label %if.end99.i, label %land.lhs.true76.i

land.lhs.true76.i:                                ; preds = %for.body70.i
  %cmp78.i = icmp eq i32 %277, %add77.i
  br i1 %cmp78.i, label %land.lhs.true80.i, label %land.lhs.true87.i

land.lhs.true80.i:                                ; preds = %land.lhs.true76.i
  %278 = add nsw i64 %indvars.iv1212.i, -1
  %arrayidx82.i = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 2, i64 %278
  %279 = load i8** %arrayidx82.i, align 8, !tbaa !5
  %280 = load i8* %279, align 1, !tbaa !11
  %cmp85.i = icmp eq i8 %280, 37
  br i1 %cmp85.i, label %if.end99.i, label %land.lhs.true87.i

land.lhs.true87.i:                                ; preds = %land.lhs.true80.i, %land.lhs.true76.i
  %cmp89.i = icmp eq i32 %277, %sub88.i
  br i1 %cmp89.i, label %land.lhs.true91.i, label %for.inc191.i

land.lhs.true91.i:                                ; preds = %land.lhs.true87.i
  %arrayidx93.i = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 2, i64 %indvars.iv1212.i
  %281 = load i8** %arrayidx93.i, align 8, !tbaa !5
  %282 = load i8* %281, align 1, !tbaa !11
  %cmp96.i = icmp eq i8 %282, 37
  br i1 %cmp96.i, label %if.end99.i, label %for.inc191.i

if.end99.i:                                       ; preds = %land.lhs.true91.i, %land.lhs.true80.i, %for.body70.i
  %sext1233.i = shl i32 %.in.i, 24
  %conv100.i = ashr exact i32 %sext1233.i, 24
  %cmp101.i = icmp eq i32 %add59.i, %conv100.i
  %arrayidx105.i = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 2, i64 %indvars.iv1212.i
  %283 = load i8** %arrayidx105.i, align 8, !tbaa !5
  br i1 %cmp101.i, label %land.lhs.true103.i, label %if.end110.i

land.lhs.true103.i:                               ; preds = %if.end99.i
  %call106.i = call fastcc i32 @requires_inout(i8* %283) #2
  %cmp107.i = icmp eq i32 %call106.i, 0
  br i1 %cmp107.i, label %for.inc191.i, label %if.end110.i

if.end110.i:                                      ; preds = %land.lhs.true103.i, %if.end99.i
  %arrayidx112.i109 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv1212.i
  %284 = load %struct.rtx_def** %arrayidx112.i109, align 8, !tbaa !5
  %285 = load i8* %283, align 1, !tbaa !11
  %cmp117.i = icmp eq i8 %285, 112
  br i1 %cmp117.i, label %while.cond120.i, label %if.end134.i

while.cond120.i:                                  ; preds = %if.end110.i, %while.body129.i
  %r1.1.i = phi %struct.rtx_def* [ %287, %while.body129.i ], [ %284, %if.end110.i ]
  %286 = getelementptr inbounds %struct.rtx_def* %r1.1.i, i64 0, i32 0
  %bf.load121.i = load i32* %286, align 8
  %bf.clear122.i = and i32 %bf.load121.i, 65535
  switch i32 %bf.clear122.i, label %if.end134.i [
    i32 75, label %while.body129.i
    i32 78, label %while.body129.i
  ]

while.body129.i:                                  ; preds = %while.cond120.i, %while.cond120.i
  %arrayidx131.i = getelementptr inbounds %struct.rtx_def* %r1.1.i, i64 0, i32 1, i64 0
  %rtx132.i = bitcast %union.rtunion_def* %arrayidx131.i to %struct.rtx_def**
  %287 = load %struct.rtx_def** %rtx132.i, align 8, !tbaa !5
  br label %while.cond120.i

if.end134.i:                                      ; preds = %while.cond120.i, %if.end110.i
  %r1.2.i = phi %struct.rtx_def* [ %284, %if.end110.i ], [ %r1.1.i, %while.cond120.i ]
  %288 = load %struct.function** @cfun, align 8, !tbaa !5
  %call135.i = call %struct.rtx_def* @get_hard_reg_initial_reg(%struct.function* %288, %struct.rtx_def* %r1.2.i) #2
  %cmp136.i = icmp eq %struct.rtx_def* %call135.i, null
  br i1 %cmp136.i, label %if.end159.i, label %if.then138.i

if.then138.i:                                     ; preds = %if.end134.i
  %289 = getelementptr inbounds %struct.rtx_def* %call135.i, i64 0, i32 0
  %bf.load139.i = load i32* %289, align 8
  %bf.clear140.i = and i32 %bf.load139.i, 65535
  %cmp141.i = icmp eq i32 %bf.clear140.i, 61
  br i1 %cmp141.i, label %land.lhs.true143.i, label %if.end159.i

land.lhs.true143.i:                               ; preds = %if.then138.i
  %arrayidx145.i = getelementptr inbounds %struct.rtx_def* %call135.i, i64 0, i32 1, i64 0
  %rtuint.i110 = bitcast %union.rtunion_def* %arrayidx145.i to i32*
  %290 = load i32* %rtuint.i110, align 4, !tbaa !1
  %cmp148.i = icmp ult i32 %290, 53
  br i1 %cmp148.i, label %land.lhs.true150.i, label %if.end159.i

land.lhs.true150.i:                               ; preds = %land.lhs.true143.i
  %conv147.i = zext i32 %290 to i64
  %arrayidx155.i = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %conv147.i
  %291 = load i8* %arrayidx155.i, align 1, !tbaa !11
  %tobool156.i = icmp eq i8 %291, 0
  br i1 %tobool156.i, label %for.inc191.i, label %if.end159.i

if.end159.i:                                      ; preds = %land.lhs.true150.i, %land.lhs.true143.i, %if.then138.i, %if.end134.i
  %bf.load160.i = load i32* %276, align 8
  %bf.clear161.i = and i32 %bf.load160.i, 65535
  switch i32 %bf.clear161.i, label %for.inc191.i [
    i32 61, label %if.then168.i
    i32 63, label %if.then168.i
  ]

if.then168.i:                                     ; preds = %if.end159.i, %if.end159.i
  %292 = load %struct.rtx_def** %arrayidx112.i109, align 8, !tbaa !5
  %cmp171.i = icmp eq %struct.rtx_def* %r1.2.i, %292
  %cmp71..i = and i1 %cmp171.i, %cmp71.i
  %land.ext.i = zext i1 %cmp71..i to i32
  %293 = getelementptr inbounds %struct.rtx_def* %r1.2.i, i64 0, i32 0
  %bf.load175.i = load i32* %293, align 8
  %bf.clear176.i = and i32 %bf.load175.i, 65535
  switch i32 %bf.clear176.i, label %for.inc191.i [
    i32 61, label %if.end187.i
    i32 63, label %if.end187.i
  ]

if.end187.i:                                      ; preds = %if.then168.i, %if.then168.i
  %call185.i = call fastcc i32 @combine_regs(%struct.rtx_def* %r1.2.i, %struct.rtx_def* %275, i32 %land.ext.i, i32 %insn_number.0.inc28.i, %struct.rtx_def* %insn.1.i105, i32 0) #2
  %tobool188.i = icmp eq i32 %call185.i, 0
  br i1 %tobool188.i, label %for.inc191.i, label %if.end194thread-pre-split.loopexit.i

for.inc191.i:                                     ; preds = %if.end187.i, %if.then168.i, %if.end159.i, %land.lhs.true150.i, %land.lhs.true103.i, %land.lhs.true91.i, %land.lhs.true87.i
  %r1.3.i = phi %struct.rtx_def* [ %r1.01179.i, %land.lhs.true103.i ], [ %r1.2.i, %if.end187.i ], [ %r1.2.i, %land.lhs.true150.i ], [ %r1.01179.i, %land.lhs.true91.i ], [ %r1.01179.i, %land.lhs.true87.i ], [ %r1.2.i, %if.end159.i ], [ %r1.2.i, %if.then168.i ]
  %indvars.iv.next1213.i = add nuw nsw i64 %indvars.iv1212.i, 1
  %294 = load i32* bitcast (i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7) to i32*), align 4
  %sext1232.i = shl i32 %294, 24
  %conv67.i = ashr exact i32 %sext1232.i, 24
  %295 = trunc i64 %indvars.iv.next1213.i to i32
  %cmp68.i111 = icmp slt i32 %295, %conv67.i
  %296 = lshr i32 %294, 16
  br i1 %cmp68.i111, label %for.body70.i, label %if.end194thread-pre-split.loopexit.i

if.end194thread-pre-split.loopexit.i:             ; preds = %for.inc191.i, %if.end187.i
  %win.3.ph.ph.i = phi i32 [ %call185.i, %if.end187.i ], [ 0, %for.inc191.i ]
  %r1.4.ph.ph.i = phi %struct.rtx_def* [ %r1.2.i, %if.end187.i ], [ %r1.3.i, %for.inc191.i ]
  %.pr.pre.i = load i32* @optimize, align 4, !tbaa !1
  br label %if.end194.i

if.end194.i:                                      ; preds = %if.end194thread-pre-split.loopexit.i, %land.lhs.true47.i, %land.lhs.true42.i, %if.then37.i
  %297 = phi i32 [ %265, %if.then37.i ], [ %265, %land.lhs.true47.i ], [ %265, %land.lhs.true42.i ], [ %.pr.pre.i, %if.end194thread-pre-split.loopexit.i ]
  %win.3.i = phi i32 [ 0, %if.then37.i ], [ 0, %land.lhs.true47.i ], [ 0, %land.lhs.true42.i ], [ %win.3.ph.ph.i, %if.end194thread-pre-split.loopexit.i ]
  %r1.4.i = phi %struct.rtx_def* [ null, %if.then37.i ], [ null, %land.lhs.true47.i ], [ null, %land.lhs.true42.i ], [ %r1.4.ph.ph.i, %if.end194thread-pre-split.loopexit.i ]
  %tobool195.i = icmp eq i32 %297, 0
  br i1 %tobool195.i, label %if.end401.i, label %land.lhs.true196.i

land.lhs.true196.i:                               ; preds = %if.end194.i
  %arrayidx198.i = getelementptr inbounds %struct.rtx_def* %insn.1.i105, i64 0, i32 1, i64 3
  %rtx199.i = bitcast %union.rtunion_def* %arrayidx198.i to %struct.rtx_def**
  %298 = load %struct.rtx_def** %rtx199.i, align 8, !tbaa !5
  %299 = getelementptr inbounds %struct.rtx_def* %298, i64 0, i32 0
  %bf.load200.i = load i32* %299, align 8
  %bf.clear201.i = and i32 %bf.load200.i, 65535
  %cmp202.i = icmp eq i32 %bf.clear201.i, 49
  br i1 %cmp202.i, label %land.lhs.true204.i, label %if.end401.i

land.lhs.true204.i:                               ; preds = %land.lhs.true196.i
  %arrayidx209.i = getelementptr inbounds %struct.rtx_def* %298, i64 0, i32 1, i64 0
  %rtx210.i = bitcast %union.rtunion_def* %arrayidx209.i to %struct.rtx_def**
  %300 = load %struct.rtx_def** %rtx210.i, align 8, !tbaa !5
  %301 = getelementptr inbounds %struct.rtx_def* %300, i64 0, i32 0
  %bf.load211.i = load i32* %301, align 8
  %bf.clear212.i = and i32 %bf.load211.i, 65535
  %cmp213.i112 = icmp eq i32 %bf.clear212.i, 61
  br i1 %cmp213.i112, label %land.lhs.true215.i, label %if.end401.i

land.lhs.true215.i:                               ; preds = %land.lhs.true204.i
  %call216.i113 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1.i105, i32 7, %struct.rtx_def* null) #2
  %cmp217.i114 = icmp eq %struct.rtx_def* %call216.i113, null
  br i1 %cmp217.i114, label %if.end401.i, label %land.lhs.true219.i115

land.lhs.true219.i115:                            ; preds = %land.lhs.true215.i
  %arrayidx221.i = getelementptr inbounds %struct.rtx_def* %call216.i113, i64 0, i32 1, i64 0
  %rtx222.i = bitcast %union.rtunion_def* %arrayidx221.i to %struct.rtx_def**
  %302 = load %struct.rtx_def** %rtx222.i, align 8, !tbaa !5
  %cmp223.i = icmp eq %struct.rtx_def* %302, null
  br i1 %cmp223.i, label %if.end401.i, label %land.lhs.true225.i

land.lhs.true225.i:                               ; preds = %land.lhs.true219.i115
  %303 = getelementptr inbounds %struct.rtx_def* %302, i64 0, i32 0
  %bf.load229.i = load i32* %303, align 8
  %bf.clear230.i = and i32 %bf.load229.i, 65535
  %cmp231.i = icmp eq i32 %bf.clear230.i, 32
  %or.cond1237.i = and i1 %cmp231.i, %cmp242.i
  br i1 %or.cond1237.i, label %cond.true.i117, label %if.end401.i

cond.true.i117:                                   ; preds = %land.lhs.true225.i
  %arrayidx248.i116 = getelementptr inbounds %struct.rtx_def* %302, i64 0, i32 1, i64 3
  %rtx249.i = bitcast %union.rtunion_def* %arrayidx248.i116 to %struct.rtx_def**
  %304 = load %struct.rtx_def** %rtx249.i, align 8, !tbaa !5
  %305 = getelementptr inbounds %struct.rtx_def* %304, i64 0, i32 0
  %bf.load250.i = load i32* %305, align 8
  %bf.clear251.i = and i32 %bf.load250.i, 65535
  %cmp252.i = icmp eq i32 %bf.clear251.i, 47
  br i1 %cmp252.i, label %cond.end272.i, label %cond.false.i118

cond.false.i118:                                  ; preds = %cond.true.i117
  %call270.i = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %302, %struct.rtx_def* %304) #2
  br label %cond.end272.i

cond.end272.i:                                    ; preds = %cond.false.i118, %cond.true.i117
  %cond273.i = phi %struct.rtx_def* [ %call270.i, %cond.false.i118 ], [ %304, %cond.true.i117 ]
  %cmp274.i = icmp eq %struct.rtx_def* %cond273.i, null
  br i1 %cmp274.i, label %if.end401.i, label %land.lhs.true276.i

land.lhs.true276.i:                               ; preds = %cond.end272.i
  %fld277.i = getelementptr inbounds %struct.rtx_def* %cond273.i, i64 0, i32 1
  %rtx279.i = bitcast [1 x %union.rtunion_def]* %fld277.i to %struct.rtx_def**
  %306 = load %struct.rtx_def** %rtx279.i, align 8, !tbaa !5
  %cmp280.i = icmp eq %struct.rtx_def* %306, %300
  br i1 %cmp280.i, label %land.lhs.true282.i, label %if.end401.i

land.lhs.true282.i:                               ; preds = %land.lhs.true276.i
  %arrayidx284.i = getelementptr inbounds %struct.rtx_def* %cond273.i, i64 0, i32 1, i64 1
  %rtx285.i = bitcast %union.rtunion_def* %arrayidx284.i to %struct.rtx_def**
  %307 = load %struct.rtx_def** %rtx285.i, align 8, !tbaa !5
  %cmp286.i = icmp eq %struct.rtx_def* %307, %300
  br i1 %cmp286.i, label %land.lhs.true288.i, label %if.end401.i

land.lhs.true288.i:                               ; preds = %land.lhs.true282.i
  %308 = load %struct.rtx_def** %rtx222.i, align 8, !tbaa !5
  %call292.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %308, i32 4, %struct.rtx_def* null) #2
  %cmp293.i = icmp eq %struct.rtx_def* %call292.i, null
  br i1 %cmp293.i, label %if.end401.i, label %if.then295.i

if.then295.i:                                     ; preds = %land.lhs.true288.i
  %arrayidx297.i = getelementptr inbounds %struct.rtx_def* %call292.i, i64 0, i32 1, i64 0
  %rtx298.i = bitcast %union.rtunion_def* %arrayidx297.i to %struct.rtx_def**
  %309 = load %struct.rtx_def** %rtx298.i, align 8, !tbaa !5
  %310 = getelementptr inbounds %struct.rtx_def* %309, i64 0, i32 0
  %bf.load299.i = load i32* %310, align 8
  %bf.clear300.i = and i32 %bf.load299.i, 65535
  %cmp301.i = icmp eq i32 %bf.clear300.i, 61
  br i1 %cmp301.i, label %land.rhs303.i, label %if.else.i119

land.rhs303.i:                                    ; preds = %if.then295.i
  %call304.i = call fastcc i32 @no_conflict_p(%struct.rtx_def* %insn.1.i105, %struct.rtx_def* %309) #2
  %tobool305.i = icmp eq i32 %call304.i, 0
  br i1 %tobool305.i, label %land.rhs303.if.else_crit_edge.i, label %if.then308.i

land.rhs303.if.else_crit_edge.i:                  ; preds = %land.rhs303.i
  %.pre1217.i = load %struct.rtx_def** %rtx298.i, align 8, !tbaa !5
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %.pre1217.i, i64 0, i32 0
  %bf.load313.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.else.i119

if.then308.i:                                     ; preds = %land.rhs303.i
  %call309.i = call fastcc i32 @combine_regs(%struct.rtx_def* %309, %struct.rtx_def* %300, i32 1, i32 %insn_number.0.inc28.i, %struct.rtx_def* %insn.1.i105, i32 1) #2
  br label %if.end394.i

if.else.i119:                                     ; preds = %land.rhs303.if.else_crit_edge.i, %if.then295.i
  %bf.load313.i = phi i32 [ %bf.load313.pre.i, %land.rhs303.if.else_crit_edge.i ], [ %bf.load299.i, %if.then295.i ]
  %311 = phi %struct.rtx_def* [ %.pre1217.i, %land.rhs303.if.else_crit_edge.i ], [ %309, %if.then295.i ]
  %bf.clear314.i = and i32 %bf.load313.i, 65535
  %idxprom3151084.i = zext i32 %bf.clear314.i to i64
  %arrayidx316.i = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom3151084.i
  %312 = load i8** %arrayidx316.i, align 8, !tbaa !5
  %313 = load i8* %312, align 1, !tbaa !11
  %cmp319.i = icmp eq i8 %313, 101
  br i1 %cmp319.i, label %land.lhs.true321.i, label %if.else343.i

land.lhs.true321.i:                               ; preds = %if.else.i119
  %arrayidx326.i = getelementptr inbounds %struct.rtx_def* %311, i64 0, i32 1, i64 0
  %rtx327.i = bitcast %union.rtunion_def* %arrayidx326.i to %struct.rtx_def**
  %314 = load %struct.rtx_def** %rtx327.i, align 8, !tbaa !5
  %315 = getelementptr inbounds %struct.rtx_def* %314, i64 0, i32 0
  %bf.load328.i = load i32* %315, align 8
  %bf.clear329.i = and i32 %bf.load328.i, 65535
  switch i32 %bf.clear329.i, label %if.else343.i [
    i32 61, label %land.lhs.true338.i
    i32 63, label %land.lhs.true338.i
  ]

land.lhs.true338.i:                               ; preds = %land.lhs.true321.i, %land.lhs.true321.i
  %call339.i = call fastcc i32 @no_conflict_p(%struct.rtx_def* %insn.1.i105, %struct.rtx_def* %314) #2
  %tobool340.i = icmp eq i32 %call339.i, 0
  br i1 %tobool340.i, label %land.lhs.true338.if.else343_crit_edge.i, label %if.then341.i

land.lhs.true338.if.else343_crit_edge.i:          ; preds = %land.lhs.true338.i
  %.pre1219.i = load %struct.rtx_def** %rtx298.i, align 8, !tbaa !5
  %.phi.trans.insert1220.i = getelementptr inbounds %struct.rtx_def* %.pre1219.i, i64 0, i32 0
  %bf.load347.pre.i = load i32* %.phi.trans.insert1220.i, align 8
  br label %if.else343.i

if.then341.i:                                     ; preds = %land.lhs.true338.i
  %call342.i = call fastcc i32 @combine_regs(%struct.rtx_def* %314, %struct.rtx_def* %300, i32 0, i32 %insn_number.0.inc28.i, %struct.rtx_def* %insn.1.i105, i32 1) #2
  br label %if.end394.i

if.else343.i:                                     ; preds = %land.lhs.true338.if.else343_crit_edge.i, %land.lhs.true321.i, %if.else.i119
  %bf.load347.i = phi i32 [ %bf.load347.pre.i, %land.lhs.true338.if.else343_crit_edge.i ], [ %bf.load313.i, %if.else.i119 ], [ %bf.load313.i, %land.lhs.true321.i ]
  %316 = phi %struct.rtx_def* [ %.pre1219.i, %land.lhs.true338.if.else343_crit_edge.i ], [ %311, %if.else.i119 ], [ %311, %land.lhs.true321.i ]
  %r1.5.i = phi %struct.rtx_def* [ %314, %land.lhs.true338.if.else343_crit_edge.i ], [ %309, %if.else.i119 ], [ %314, %land.lhs.true321.i ]
  %317 = and i32 %bf.load347.i, 65534
  %switch.i = icmp eq i32 %317, 102
  br i1 %switch.i, label %land.lhs.true370.i, label %lor.lhs.false359.i

lor.lhs.false359.i:                               ; preds = %if.else343.i
  %bf.clear348.i = and i32 %bf.load347.i, 65535
  %idxprom3651085.i = zext i32 %bf.clear348.i to i64
  %arrayidx366.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom3651085.i
  %318 = load i8* %arrayidx366.i, align 1, !tbaa !11
  %cmp368.i = icmp eq i8 %318, 99
  br i1 %cmp368.i, label %land.lhs.true370.i, label %if.end394.i

land.lhs.true370.i:                               ; preds = %lor.lhs.false359.i, %if.else343.i
  %arrayidx375.i = getelementptr inbounds %struct.rtx_def* %316, i64 0, i32 1, i64 1
  %rtx376.i = bitcast %union.rtunion_def* %arrayidx375.i to %struct.rtx_def**
  %319 = load %struct.rtx_def** %rtx376.i, align 8, !tbaa !5
  %320 = getelementptr inbounds %struct.rtx_def* %319, i64 0, i32 0
  %bf.load377.i = load i32* %320, align 8
  %bf.clear378.i = and i32 %bf.load377.i, 65535
  switch i32 %bf.clear378.i, label %if.end394.i [
    i32 61, label %land.lhs.true387.i
    i32 63, label %land.lhs.true387.i
  ]

land.lhs.true387.i:                               ; preds = %land.lhs.true370.i, %land.lhs.true370.i
  %call388.i = call fastcc i32 @no_conflict_p(%struct.rtx_def* %insn.1.i105, %struct.rtx_def* %319) #2
  %tobool389.i = icmp eq i32 %call388.i, 0
  br i1 %tobool389.i, label %if.end394.i, label %if.then390.i

if.then390.i:                                     ; preds = %land.lhs.true387.i
  %call391.i = call fastcc i32 @combine_regs(%struct.rtx_def* %319, %struct.rtx_def* %300, i32 0, i32 %insn_number.0.inc28.i, %struct.rtx_def* %insn.1.i105, i32 1) #2
  br label %if.end394.i

if.end394.i:                                      ; preds = %if.then390.i, %land.lhs.true387.i, %land.lhs.true370.i, %lor.lhs.false359.i, %if.then341.i, %if.then308.i
  %win.4.i = phi i32 [ %call309.i, %if.then308.i ], [ %call342.i, %if.then341.i ], [ %call391.i, %if.then390.i ], [ %win.3.i, %land.lhs.true387.i ], [ %win.3.i, %lor.lhs.false359.i ], [ %win.3.i, %land.lhs.true370.i ]
  %r1.6.i = phi %struct.rtx_def* [ %309, %if.then308.i ], [ %314, %if.then341.i ], [ %319, %if.then390.i ], [ %319, %land.lhs.true387.i ], [ %r1.5.i, %lor.lhs.false359.i ], [ %319, %land.lhs.true370.i ]
  %tobool395.i = icmp eq i32 %win.4.i, 0
  br i1 %tobool395.i, label %if.end417.i, label %if.then396.i

if.then396.i:                                     ; preds = %if.end394.i
  %arrayidx398.i = getelementptr inbounds %struct.rtx_def* %r1.6.i, i64 0, i32 1, i64 0
  %rtuint399.i = bitcast %union.rtunion_def* %arrayidx398.i to i32*
  %321 = load i32* %rtuint399.i, align 4, !tbaa !1
  br label %if.end401.i

if.end401.i:                                      ; preds = %if.then396.i, %land.lhs.true288.i, %land.lhs.true282.i, %land.lhs.true276.i, %cond.end272.i, %land.lhs.true225.i, %land.lhs.true219.i115, %land.lhs.true215.i, %land.lhs.true204.i, %land.lhs.true196.i, %if.end194.i
  %no_conflict_combined_regno.1.i = phi i32 [ %321, %if.then396.i ], [ %no_conflict_combined_regno.0.i, %land.lhs.true288.i ], [ %no_conflict_combined_regno.0.i, %land.lhs.true282.i ], [ %no_conflict_combined_regno.0.i, %land.lhs.true276.i ], [ %no_conflict_combined_regno.0.i, %cond.end272.i ], [ %no_conflict_combined_regno.0.i, %land.lhs.true225.i ], [ %no_conflict_combined_regno.0.i, %land.lhs.true219.i115 ], [ %no_conflict_combined_regno.0.i, %land.lhs.true215.i ], [ %no_conflict_combined_regno.0.i, %land.lhs.true204.i ], [ %no_conflict_combined_regno.0.i, %land.lhs.true196.i ], [ %no_conflict_combined_regno.0.i, %if.end194.i ]
  %win.5.i = phi i32 [ %win.4.i, %if.then396.i ], [ %win.3.i, %land.lhs.true288.i ], [ %win.3.i, %land.lhs.true282.i ], [ %win.3.i, %land.lhs.true276.i ], [ %win.3.i, %cond.end272.i ], [ %win.3.i, %land.lhs.true225.i ], [ %win.3.i, %land.lhs.true219.i115 ], [ %win.3.i, %land.lhs.true215.i ], [ %win.3.i, %land.lhs.true204.i ], [ %win.3.i, %land.lhs.true196.i ], [ %win.3.i, %if.end194.i ]
  %r1.7.i = phi %struct.rtx_def* [ %r1.6.i, %if.then396.i ], [ %r1.4.i, %land.lhs.true288.i ], [ %r1.4.i, %land.lhs.true282.i ], [ %r1.4.i, %land.lhs.true276.i ], [ %r1.4.i, %cond.end272.i ], [ %r1.4.i, %land.lhs.true225.i ], [ %r1.4.i, %land.lhs.true219.i115 ], [ %r1.4.i, %land.lhs.true215.i ], [ %r1.4.i, %land.lhs.true204.i ], [ %r1.4.i, %land.lhs.true196.i ], [ %r1.4.i, %if.end194.i ]
  %tobool402.i = icmp eq i32 %win.5.i, 0
  br i1 %tobool402.i, label %if.end417.i, label %while.cond404.preheader.i

while.cond404.preheader.i:                        ; preds = %if.end401.i
  %322 = getelementptr inbounds %struct.rtx_def* %r1.7.i, i64 0, i32 0
  %bf.load4051188.i = load i32* %322, align 8
  %bf.clear4061189.i = and i32 %bf.load4051188.i, 65535
  %cmp4071190.i = icmp eq i32 %bf.clear4061189.i, 63
  %arrayidx4111191.i = getelementptr inbounds %struct.rtx_def* %r1.7.i, i64 0, i32 1, i64 0
  br i1 %cmp4071190.i, label %while.body409.i, label %while.end413.i

while.body409.i:                                  ; preds = %while.cond404.preheader.i, %while.body409.i
  %arrayidx4111192.i = phi %union.rtunion_def* [ %arrayidx411.i, %while.body409.i ], [ %arrayidx4111191.i, %while.cond404.preheader.i ]
  %rtx412.i = bitcast %union.rtunion_def* %arrayidx4111192.i to %struct.rtx_def**
  %323 = load %struct.rtx_def** %rtx412.i, align 8, !tbaa !5
  %324 = getelementptr inbounds %struct.rtx_def* %323, i64 0, i32 0
  %bf.load405.i = load i32* %324, align 8
  %bf.clear406.i = and i32 %bf.load405.i, 65535
  %cmp407.i = icmp eq i32 %bf.clear406.i, 63
  %arrayidx411.i = getelementptr inbounds %struct.rtx_def* %323, i64 0, i32 1, i64 0
  br i1 %cmp407.i, label %while.body409.i, label %while.end413.i

while.end413.i:                                   ; preds = %while.body409.i, %while.cond404.preheader.i
  %arrayidx411.lcssa.i = phi %union.rtunion_def* [ %arrayidx4111191.i, %while.cond404.preheader.i ], [ %arrayidx411.i, %while.body409.i ]
  %rtuint416.i = bitcast %union.rtunion_def* %arrayidx411.lcssa.i to i32*
  %325 = load i32* %rtuint416.i, align 4, !tbaa !1
  br label %if.end417.i

if.end417.i:                                      ; preds = %while.end413.i, %if.end401.i, %if.end394.i
  %no_conflict_combined_regno.11151.i = phi i32 [ %no_conflict_combined_regno.1.i, %while.end413.i ], [ %no_conflict_combined_regno.1.i, %if.end401.i ], [ %no_conflict_combined_regno.0.i, %if.end394.i ]
  %combined_regno.0.i = phi i32 [ %325, %while.end413.i ], [ -1, %if.end401.i ], [ -1, %if.end394.i ]
  %arrayidx419.i = getelementptr inbounds %struct.rtx_def* %insn.1.i105, i64 0, i32 1, i64 6
  %rtx420.i = bitcast %union.rtunion_def* %arrayidx419.i to %struct.rtx_def**
  %link.01194.i = load %struct.rtx_def** %rtx420.i, align 8
  %tobool4221195.i = icmp eq %struct.rtx_def* %link.01194.i, null
  br i1 %tobool4221195.i, label %for.end469.i, label %for.body423.i

for.body423.i:                                    ; preds = %if.end417.i, %for.inc465.i
  %link.01196.i = phi %struct.rtx_def* [ %link.0.i120, %for.inc465.i ], [ %link.01194.i, %if.end417.i ]
  %326 = getelementptr inbounds %struct.rtx_def* %link.01196.i, i64 0, i32 0
  %bf.load424.i = load i32* %326, align 8
  %bf.clear425.i = and i32 %bf.load424.i, 16711680
  %cmp426.i = icmp eq i32 %bf.clear425.i, 65536
  br i1 %cmp426.i, label %land.lhs.true428.i, label %for.inc465.i

land.lhs.true428.i:                               ; preds = %for.body423.i
  %arrayidx430.i = getelementptr inbounds %struct.rtx_def* %link.01196.i, i64 0, i32 1, i64 0
  %rtx431.i = bitcast %union.rtunion_def* %arrayidx430.i to %struct.rtx_def**
  %327 = load %struct.rtx_def** %rtx431.i, align 8, !tbaa !5
  %328 = getelementptr inbounds %struct.rtx_def* %327, i64 0, i32 0
  %bf.load432.i = load i32* %328, align 8
  %bf.clear433.i = and i32 %bf.load432.i, 65535
  %cmp434.i = icmp eq i32 %bf.clear433.i, 61
  br i1 %cmp434.i, label %land.lhs.true436.i, label %for.inc465.i

land.lhs.true436.i:                               ; preds = %land.lhs.true428.i
  %arrayidx441.i = getelementptr inbounds %struct.rtx_def* %327, i64 0, i32 1, i64 0
  %rtuint442.i = bitcast %union.rtunion_def* %arrayidx441.i to i32*
  %329 = load i32* %rtuint442.i, align 4, !tbaa !1
  %cmp443.i = icmp eq i32 %combined_regno.0.i, %329
  br i1 %cmp443.i, label %for.inc465.i, label %land.lhs.true445.i

land.lhs.true445.i:                               ; preds = %land.lhs.true436.i
  %cmp452.i = icmp eq i32 %no_conflict_combined_regno.11151.i, %329
  br i1 %cmp452.i, label %lor.lhs.false454.i, label %if.then460.i

lor.lhs.false454.i:                               ; preds = %land.lhs.true445.i
  %call458.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1.i105, i32 9, %struct.rtx_def* %327) #2
  %tobool459.i = icmp eq %struct.rtx_def* %call458.i, null
  br i1 %tobool459.i, label %lor.lhs.false454.if.then460_crit_edge.i, label %for.inc465.i

lor.lhs.false454.if.then460_crit_edge.i:          ; preds = %lor.lhs.false454.i
  %.pre1216.i = load %struct.rtx_def** %rtx431.i, align 8, !tbaa !5
  br label %if.then460.i

if.then460.i:                                     ; preds = %lor.lhs.false454.if.then460_crit_edge.i, %land.lhs.true445.i
  %330 = phi %struct.rtx_def* [ %.pre1216.i, %lor.lhs.false454.if.then460_crit_edge.i ], [ %327, %land.lhs.true445.i ]
  call fastcc void @wipe_dead_reg(%struct.rtx_def* %330, i32 0) #2
  br label %for.inc465.i

for.inc465.i:                                     ; preds = %if.then460.i, %lor.lhs.false454.i, %land.lhs.true436.i, %land.lhs.true428.i, %for.body423.i
  %arrayidx467.i = getelementptr inbounds %struct.rtx_def* %link.01196.i, i64 0, i32 1, i64 1
  %rtx468.i = bitcast %union.rtunion_def* %arrayidx467.i to %struct.rtx_def**
  %link.0.i120 = load %struct.rtx_def** %rtx468.i, align 8
  %tobool422.i = icmp eq %struct.rtx_def* %link.0.i120, null
  br i1 %tobool422.i, label %for.end469.i, label %for.body423.i

for.end469.i:                                     ; preds = %for.inc465.i, %if.end417.i
  %arrayidx471.i = getelementptr inbounds %struct.rtx_def* %insn.1.i105, i64 0, i32 1, i64 3
  %rtx472.i = bitcast %union.rtunion_def* %arrayidx471.i to %struct.rtx_def**
  %331 = load %struct.rtx_def** %rtx472.i, align 8, !tbaa !5
  call void @note_stores(%struct.rtx_def* %331, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @reg_is_set, i8* null) #2
  %link.11197.i = load %struct.rtx_def** %rtx420.i, align 8
  %tobool4771198.i = icmp eq %struct.rtx_def* %link.11197.i, null
  br i1 %tobool4771198.i, label %for.end501.i, label %for.body478.i

for.body478.i:                                    ; preds = %for.end469.i, %for.inc497.i
  %link.11199.i = phi %struct.rtx_def* [ %link.1.i, %for.inc497.i ], [ %link.11197.i, %for.end469.i ]
  %332 = getelementptr inbounds %struct.rtx_def* %link.11199.i, i64 0, i32 0
  %bf.load479.i = load i32* %332, align 8
  %bf.clear481.i = and i32 %bf.load479.i, 16711680
  %cmp482.i = icmp eq i32 %bf.clear481.i, 655360
  br i1 %cmp482.i, label %land.lhs.true484.i, label %for.inc497.i

land.lhs.true484.i:                               ; preds = %for.body478.i
  %arrayidx486.i = getelementptr inbounds %struct.rtx_def* %link.11199.i, i64 0, i32 1, i64 0
  %rtx487.i = bitcast %union.rtunion_def* %arrayidx486.i to %struct.rtx_def**
  %333 = load %struct.rtx_def** %rtx487.i, align 8, !tbaa !5
  %334 = getelementptr inbounds %struct.rtx_def* %333, i64 0, i32 0
  %bf.load488.i = load i32* %334, align 8
  %bf.clear489.i = and i32 %bf.load488.i, 65535
  %cmp490.i = icmp eq i32 %bf.clear489.i, 61
  br i1 %cmp490.i, label %if.then492.i, label %for.inc497.i

if.then492.i:                                     ; preds = %land.lhs.true484.i
  call fastcc void @wipe_dead_reg(%struct.rtx_def* %333, i32 1) #2
  br label %for.inc497.i

for.inc497.i:                                     ; preds = %if.then492.i, %land.lhs.true484.i, %for.body478.i
  %arrayidx499.i = getelementptr inbounds %struct.rtx_def* %link.11199.i, i64 0, i32 1, i64 1
  %rtx500.i = bitcast %union.rtunion_def* %arrayidx499.i to %struct.rtx_def**
  %link.1.i = load %struct.rtx_def** %rtx500.i, align 8
  %tobool477.i = icmp eq %struct.rtx_def* %link.1.i, null
  br i1 %tobool477.i, label %for.end501.i, label %for.body478.i

for.end501.i:                                     ; preds = %for.inc497.i, %for.end469.i
  %call502.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.1.i105, i32 6, %struct.rtx_def* null) #2
  %cmp503.i = icmp eq %struct.rtx_def* %call502.i, null
  br i1 %cmp503.i, label %if.end526.i, label %land.lhs.true505.i

land.lhs.true505.i:                               ; preds = %for.end501.i
  %arrayidx507.i = getelementptr inbounds %struct.rtx_def* %call502.i, i64 0, i32 1, i64 0
  %rtx508.i = bitcast %union.rtunion_def* %arrayidx507.i to %struct.rtx_def**
  %335 = load %struct.rtx_def** %rtx508.i, align 8, !tbaa !5
  %336 = getelementptr inbounds %struct.rtx_def* %335, i64 0, i32 0
  %bf.load509.i = load i32* %336, align 8
  %bf.clear510.i = and i32 %bf.load509.i, 65535
  %cmp511.i = icmp eq i32 %bf.clear510.i, 32
  br i1 %cmp511.i, label %land.lhs.true513.i, label %if.end526.i

land.lhs.true513.i:                               ; preds = %land.lhs.true505.i
  %arrayidx518.i = getelementptr inbounds %struct.rtx_def* %335, i64 0, i32 1, i64 3
  %rtx519.i = bitcast %union.rtunion_def* %arrayidx518.i to %struct.rtx_def**
  %337 = load %struct.rtx_def** %rtx519.i, align 8, !tbaa !5
  %338 = getelementptr inbounds %struct.rtx_def* %337, i64 0, i32 0
  %bf.load520.i = load i32* %338, align 8
  %bf.clear521.i = and i32 %bf.load520.i, 65535
  %cmp522.i = icmp eq i32 %bf.clear521.i, 49
  %.no_conflict_combined_regno.1.i = select i1 %cmp522.i, i32 -1, i32 %no_conflict_combined_regno.11151.i
  br label %if.end526.i

if.end526.i:                                      ; preds = %land.lhs.true513.i, %land.lhs.true505.i, %for.end501.i, %while.body22.i
  %no_conflict_combined_regno.2.i = phi i32 [ %no_conflict_combined_regno.11151.i, %land.lhs.true505.i ], [ %no_conflict_combined_regno.11151.i, %for.end501.i ], [ %no_conflict_combined_regno.0.i, %while.body22.i ], [ %.no_conflict_combined_regno.1.i, %land.lhs.true513.i ]
  %339 = load i64* @regs_live, align 8, !tbaa !37
  %mul527.i = shl nsw i32 %insn_number.0.inc28.i, 1
  %idxprom528.i = sext i32 %mul527.i to i64
  %340 = load i64** @regs_live_at, align 8, !tbaa !5
  %arrayidx529.i = getelementptr inbounds i64* %340, i64 %idxprom528.i
  %341 = load i64* %arrayidx529.i, align 8, !tbaa !37
  %or.i = or i64 %341, %339
  store i64 %or.i, i64* %arrayidx529.i, align 8, !tbaa !37
  %342 = load i64* @regs_live, align 8, !tbaa !37
  %add5311081.i = or i32 %mul527.i, 1
  %idxprom532.i = sext i32 %add5311081.i to i64
  %arrayidx533.i = getelementptr inbounds i64* %340, i64 %idxprom532.i
  %343 = load i64* %arrayidx533.i, align 8, !tbaa !37
  %or534.i = or i64 %343, %342
  store i64 %or534.i, i64* %arrayidx533.i, align 8, !tbaa !37
  %344 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data536.i = getelementptr inbounds %struct.varray_head_tag* %344, i64 0, i32 4
  %bb537.i = bitcast %union.varray_data_tag* %data536.i to [1 x %struct.basic_block_def*]*
  %arrayidx538.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb537.i, i64 0, i64 %indvars.iv154
  %345 = load %struct.basic_block_def** %arrayidx538.i, align 8, !tbaa !5
  %end539.i = getelementptr inbounds %struct.basic_block_def* %345, i64 0, i32 1
  %346 = load %struct.rtx_def** %end539.i, align 8, !tbaa !10
  %cmp540.i = icmp eq %struct.rtx_def* %insn.1.i105, %346
  br i1 %cmp540.i, label %while.end547.i, label %if.end543.i

if.end543.i:                                      ; preds = %if.end526.i
  %arrayidx545.i = getelementptr inbounds %struct.rtx_def* %insn.1.i105, i64 0, i32 1, i64 2
  %rtx546.i = bitcast %union.rtunion_def* %arrayidx545.i to %struct.rtx_def**
  br label %while.body22.i

while.end547.i:                                   ; preds = %if.end526.i
  %347 = load i32* @next_qty, align 4, !tbaa !1
  %conv548.i = sext i32 %347 to i64
  %mul549.i = shl nsw i64 %conv548.i, 2
  %call550.i = call noalias i8* @xmalloc(i64 %mul549.i) #2
  %348 = bitcast i8* %call550.i to i32*
  %349 = load i32* @next_qty, align 4, !tbaa !1
  %cmp5521167.i = icmp sgt i32 %349, 0
  br i1 %cmp5521167.i, label %for.body554.i, label %for.end559.i

for.body554.i:                                    ; preds = %while.end547.i, %for.body554.i
  %indvars.iv1208.i = phi i64 [ %indvars.iv.next1209.i, %for.body554.i ], [ 0, %while.end547.i ]
  %arrayidx556.i = getelementptr inbounds i32* %348, i64 %indvars.iv1208.i
  %350 = trunc i64 %indvars.iv1208.i to i32
  store i32 %350, i32* %arrayidx556.i, align 4, !tbaa !1
  %indvars.iv.next1209.i = add nuw nsw i64 %indvars.iv1208.i, 1
  %lftr.wideiv148 = trunc i64 %indvars.iv.next1209.i to i32
  %exitcond149 = icmp eq i32 %lftr.wideiv148, %349
  br i1 %exitcond149, label %for.end559.i, label %for.body554.i

for.end559.i:                                     ; preds = %for.body554.i, %while.end547.i
  switch i32 %349, label %sw.default.i [
    i32 3, label %sw.bb.i
    i32 2, label %sw.bb578.i
    i32 1, label %for.cond589.preheader.i
    i32 0, label %for.cond589.preheader.i
  ]

sw.bb.i:                                          ; preds = %for.end559.i
  %call560.i = call fastcc i32 @qty_sugg_compare(i32 0, i32 1) #2
  %cmp561.i = icmp sgt i32 %call560.i, 0
  br i1 %cmp561.i, label %if.then563.i, label %if.end568.i

if.then563.i:                                     ; preds = %sw.bb.i
  %351 = load i32* %348, align 4, !tbaa !1
  %arrayidx565.i = getelementptr inbounds i8* %call550.i, i64 4
  %352 = bitcast i8* %arrayidx565.i to i32*
  %353 = load i32* %352, align 4, !tbaa !1
  store i32 %353, i32* %348, align 4, !tbaa !1
  store i32 %351, i32* %352, align 4, !tbaa !1
  br label %if.end568.i

if.end568.i:                                      ; preds = %if.then563.i, %sw.bb.i
  %call569.i = call fastcc i32 @qty_sugg_compare(i32 1, i32 2) #2
  %cmp570.i = icmp sgt i32 %call569.i, 0
  br i1 %cmp570.i, label %if.then572.i, label %sw.bb578.i

if.then572.i:                                     ; preds = %if.end568.i
  %arrayidx573.i = getelementptr inbounds i8* %call550.i, i64 8
  %354 = bitcast i8* %arrayidx573.i to i32*
  %355 = load i32* %354, align 4, !tbaa !1
  %arrayidx574.i = getelementptr inbounds i8* %call550.i, i64 4
  %356 = bitcast i8* %arrayidx574.i to i32*
  %357 = load i32* %356, align 4, !tbaa !1
  store i32 %357, i32* %354, align 4, !tbaa !1
  store i32 %355, i32* %356, align 4, !tbaa !1
  br label %sw.bb578.i

sw.bb578.i:                                       ; preds = %if.then572.i, %if.end568.i, %for.end559.i
  %call579.i = call fastcc i32 @qty_sugg_compare(i32 0, i32 1) #2
  %cmp580.i = icmp sgt i32 %call579.i, 0
  br i1 %cmp580.i, label %if.then582.i, label %for.cond589.preheader.i

if.then582.i:                                     ; preds = %sw.bb578.i
  %358 = load i32* %348, align 4, !tbaa !1
  %arrayidx584.i = getelementptr inbounds i8* %call550.i, i64 4
  %359 = bitcast i8* %arrayidx584.i to i32*
  %360 = load i32* %359, align 4, !tbaa !1
  store i32 %360, i32* %348, align 4, !tbaa !1
  store i32 %358, i32* %359, align 4, !tbaa !1
  br label %for.cond589.preheader.i

sw.default.i:                                     ; preds = %for.end559.i
  call void @specqsort(i8* %call550.i, i32 %349, i32 4, i32 (...)* bitcast (i32 (i8*, i8*)* @qty_sugg_compare_1 to i32 (...)*)) #2
  br label %for.cond589.preheader.i

for.cond589.preheader.i:                          ; preds = %sw.default.i, %if.then582.i, %sw.bb578.i, %for.end559.i, %for.end559.i
  %361 = load i32* @next_qty, align 4, !tbaa !1
  %cmp5901164.i = icmp sgt i32 %361, 0
  br i1 %cmp5901164.i, label %for.body592.i, label %for.end635.i

for.cond627.preheader.i:                          ; preds = %for.inc624.i
  %cmp6281162.i = icmp sgt i32 %375, 0
  br i1 %cmp6281162.i, label %for.body630.i, label %for.end635.i

for.body592.i:                                    ; preds = %for.cond589.preheader.i, %for.inc624.i
  %362 = phi i32 [ %375, %for.inc624.i ], [ %361, %for.cond589.preheader.i ]
  %indvars.iv1206.i = phi i64 [ %indvars.iv.next1207.i, %for.inc624.i ], [ 0, %for.cond589.preheader.i ]
  %arrayidx594.i = getelementptr inbounds i32* %348, i64 %indvars.iv1206.i
  %363 = load i32* %arrayidx594.i, align 4, !tbaa !1
  %idxprom595.i = sext i32 %363 to i64
  %364 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %arrayidx596.i = getelementptr inbounds i16* %364, i64 %idxprom595.i
  %365 = load i16* %arrayidx596.i, align 2, !tbaa !42
  %cmp598.i = icmp eq i16 %365, 0
  br i1 %cmp598.i, label %lor.lhs.false600.i, label %if.then606.i

lor.lhs.false600.i:                               ; preds = %for.body592.i
  %366 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %arrayidx602.i = getelementptr inbounds i16* %366, i64 %idxprom595.i
  %367 = load i16* %arrayidx602.i, align 2, !tbaa !42
  %cmp604.i = icmp eq i16 %367, 0
  br i1 %cmp604.i, label %if.else619.i, label %if.then606.i

if.then606.i:                                     ; preds = %lor.lhs.false600.i, %for.body592.i
  %368 = load %struct.qty** @qty, align 8, !tbaa !5
  %min_class.i = getelementptr inbounds %struct.qty* %368, i64 %idxprom595.i, i32 7
  %369 = load i32* %min_class.i, align 4, !tbaa !44
  %mode.i = getelementptr inbounds %struct.qty* %368, i64 %idxprom595.i, i32 9
  %370 = load i32* %mode.i, align 4, !tbaa !46
  %birth.i = getelementptr inbounds %struct.qty* %368, i64 %idxprom595.i, i32 2
  %371 = load i32* %birth.i, align 4, !tbaa !47
  %death.i = getelementptr inbounds %struct.qty* %368, i64 %idxprom595.i, i32 3
  %372 = load i32* %death.i, align 4, !tbaa !48
  %call615.i = call fastcc i32 @find_free_reg(i32 %369, i32 %370, i32 %363, i32 0, i32 1, i32 %371, i32 %372) #2
  %conv616.i = trunc i32 %call615.i to i16
  %373 = load %struct.qty** @qty, align 8, !tbaa !5
  %phys_reg.i = getelementptr inbounds %struct.qty* %373, i64 %idxprom595.i, i32 10
  store i16 %conv616.i, i16* %phys_reg.i, align 2, !tbaa !49
  %.pre1230.i = load i32* @next_qty, align 4, !tbaa !1
  br label %for.inc624.i

if.else619.i:                                     ; preds = %lor.lhs.false600.i
  %374 = load %struct.qty** @qty, align 8, !tbaa !5
  %phys_reg622.i = getelementptr inbounds %struct.qty* %374, i64 %idxprom595.i, i32 10
  store i16 -1, i16* %phys_reg622.i, align 2, !tbaa !49
  br label %for.inc624.i

for.inc624.i:                                     ; preds = %if.else619.i, %if.then606.i
  %375 = phi i32 [ %.pre1230.i, %if.then606.i ], [ %362, %if.else619.i ]
  %indvars.iv.next1207.i = add nuw nsw i64 %indvars.iv1206.i, 1
  %376 = trunc i64 %indvars.iv.next1207.i to i32
  %cmp590.i = icmp slt i32 %376, %375
  br i1 %cmp590.i, label %for.body592.i, label %for.cond627.preheader.i

for.body630.i:                                    ; preds = %for.cond627.preheader.i, %for.body630.i
  %indvars.iv1204.i = phi i64 [ %indvars.iv.next1205.i, %for.body630.i ], [ 0, %for.cond627.preheader.i ]
  %arrayidx632.i = getelementptr inbounds i32* %348, i64 %indvars.iv1204.i
  %377 = trunc i64 %indvars.iv1204.i to i32
  store i32 %377, i32* %arrayidx632.i, align 4, !tbaa !1
  %indvars.iv.next1205.i = add nuw nsw i64 %indvars.iv1204.i, 1
  %lftr.wideiv150 = trunc i64 %indvars.iv.next1205.i to i32
  %exitcond151 = icmp eq i32 %lftr.wideiv150, %375
  br i1 %exitcond151, label %for.end635.i, label %for.body630.i

for.end635.i:                                     ; preds = %for.body630.i, %for.cond627.preheader.i, %for.cond589.preheader.i
  %.lcssa.i = phi i32 [ %375, %for.cond627.preheader.i ], [ %361, %for.cond589.preheader.i ], [ %375, %for.body630.i ]
  switch i32 %.lcssa.i, label %sw.default666.i [
    i32 3, label %sw.bb636.i
    i32 2, label %for.end635.sw.bb655_crit_edge.i
    i32 1, label %for.cond668.preheader.i
    i32 0, label %for.cond668.preheader.i
  ]

for.end635.sw.bb655_crit_edge.i:                  ; preds = %for.end635.i
  %.pre1222.i = load %struct.qty** @qty, align 8, !tbaa !5
  br label %sw.bb655.i

sw.bb636.i:                                       ; preds = %for.end635.i
  %378 = load %struct.qty** @qty, align 8, !tbaa !5
  %n_refs.i.i = getelementptr inbounds %struct.qty* %378, i64 1, i32 0
  %379 = load i32* %n_refs.i.i, align 4, !tbaa !50
  %conv.i.i = sext i32 %379 to i64
  %call.i.i121 = call i32 @floor_log2_wide(i64 %conv.i.i) #2
  %380 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq.i.i = getelementptr inbounds %struct.qty* %380, i64 1, i32 1
  %381 = load i32* %freq.i.i, align 4, !tbaa !51
  %mul.i.i = mul nsw i32 %381, %call.i.i121
  %size.i.i = getelementptr inbounds %struct.qty* %380, i64 1, i32 4
  %382 = load i32* %size.i.i, align 4, !tbaa !52
  %mul5.i.i = mul nsw i32 %mul.i.i, %382
  %conv6.i.i = sitofp i32 %mul5.i.i to double
  %death.i.i = getelementptr inbounds %struct.qty* %380, i64 1, i32 3
  %383 = load i32* %death.i.i, align 4, !tbaa !48
  %birth.i.i = getelementptr inbounds %struct.qty* %380, i64 1, i32 2
  %384 = load i32* %birth.i.i, align 4, !tbaa !47
  %sub.i.i = sub nsw i32 %383, %384
  %conv11.i.i = sitofp i32 %sub.i.i to double
  %div.i.i = fdiv double %conv6.i.i, %conv11.i.i
  %mul12.i.i = fmul double %div.i.i, 1.000000e+01
  %conv13.i.i = fptosi double %mul12.i.i to i32
  %n_refs16.i.i = getelementptr inbounds %struct.qty* %380, i64 0, i32 0
  %385 = load i32* %n_refs16.i.i, align 4, !tbaa !50
  %conv17.i.i = sext i32 %385 to i64
  %call18.i.i = call i32 @floor_log2_wide(i64 %conv17.i.i) #2
  %386 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq21.i.i = getelementptr inbounds %struct.qty* %386, i64 0, i32 1
  %387 = load i32* %freq21.i.i, align 4, !tbaa !51
  %mul22.i.i = mul nsw i32 %387, %call18.i.i
  %size25.i.i = getelementptr inbounds %struct.qty* %386, i64 0, i32 4
  %388 = load i32* %size25.i.i, align 4, !tbaa !52
  %mul26.i.i = mul nsw i32 %mul22.i.i, %388
  %conv27.i.i = sitofp i32 %mul26.i.i to double
  %death30.i.i = getelementptr inbounds %struct.qty* %386, i64 0, i32 3
  %389 = load i32* %death30.i.i, align 4, !tbaa !48
  %birth33.i.i = getelementptr inbounds %struct.qty* %386, i64 0, i32 2
  %390 = load i32* %birth33.i.i, align 4, !tbaa !47
  %sub34.i.i = sub nsw i32 %389, %390
  %conv35.i.i = sitofp i32 %sub34.i.i to double
  %div36.i.i = fdiv double %conv27.i.i, %conv35.i.i
  %mul37.i.i = fmul double %div36.i.i, 1.000000e+01
  %conv38.i.i = fptosi double %mul37.i.i to i32
  %sub39.i.i = sub nsw i32 %conv13.i.i, %conv38.i.i
  %cmp638.i = icmp sgt i32 %sub39.i.i, 0
  br i1 %cmp638.i, label %if.then640.i, label %if.end645.i

if.then640.i:                                     ; preds = %sw.bb636.i
  %391 = load i32* %348, align 4, !tbaa !1
  %arrayidx642.i = getelementptr inbounds i8* %call550.i, i64 4
  %392 = bitcast i8* %arrayidx642.i to i32*
  %393 = load i32* %392, align 4, !tbaa !1
  store i32 %393, i32* %348, align 4, !tbaa !1
  store i32 %391, i32* %392, align 4, !tbaa !1
  br label %if.end645.i

if.end645.i:                                      ; preds = %if.then640.i, %sw.bb636.i
  %n_refs.i1087.i = getelementptr inbounds %struct.qty* %386, i64 2, i32 0
  %394 = load i32* %n_refs.i1087.i, align 4, !tbaa !50
  %conv.i1088.i = sext i32 %394 to i64
  %call.i1089.i = call i32 @floor_log2_wide(i64 %conv.i1088.i) #2
  %395 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq.i1090.i = getelementptr inbounds %struct.qty* %395, i64 2, i32 1
  %396 = load i32* %freq.i1090.i, align 4, !tbaa !51
  %mul.i1091.i = mul nsw i32 %396, %call.i1089.i
  %size.i1092.i = getelementptr inbounds %struct.qty* %395, i64 2, i32 4
  %397 = load i32* %size.i1092.i, align 4, !tbaa !52
  %mul5.i1093.i = mul nsw i32 %mul.i1091.i, %397
  %conv6.i1094.i = sitofp i32 %mul5.i1093.i to double
  %death.i1095.i = getelementptr inbounds %struct.qty* %395, i64 2, i32 3
  %398 = load i32* %death.i1095.i, align 4, !tbaa !48
  %birth.i1096.i = getelementptr inbounds %struct.qty* %395, i64 2, i32 2
  %399 = load i32* %birth.i1096.i, align 4, !tbaa !47
  %sub.i1097.i = sub nsw i32 %398, %399
  %conv11.i1098.i = sitofp i32 %sub.i1097.i to double
  %div.i1099.i = fdiv double %conv6.i1094.i, %conv11.i1098.i
  %mul12.i1100.i = fmul double %div.i1099.i, 1.000000e+01
  %conv13.i1101.i = fptosi double %mul12.i1100.i to i32
  %n_refs16.i1102.i = getelementptr inbounds %struct.qty* %395, i64 1, i32 0
  %400 = load i32* %n_refs16.i1102.i, align 4, !tbaa !50
  %conv17.i1103.i = sext i32 %400 to i64
  %call18.i1104.i = call i32 @floor_log2_wide(i64 %conv17.i1103.i) #2
  %401 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq21.i1105.i = getelementptr inbounds %struct.qty* %401, i64 1, i32 1
  %402 = load i32* %freq21.i1105.i, align 4, !tbaa !51
  %mul22.i1106.i = mul nsw i32 %402, %call18.i1104.i
  %size25.i1107.i = getelementptr inbounds %struct.qty* %401, i64 1, i32 4
  %403 = load i32* %size25.i1107.i, align 4, !tbaa !52
  %mul26.i1108.i = mul nsw i32 %mul22.i1106.i, %403
  %conv27.i1109.i = sitofp i32 %mul26.i1108.i to double
  %death30.i1110.i = getelementptr inbounds %struct.qty* %401, i64 1, i32 3
  %404 = load i32* %death30.i1110.i, align 4, !tbaa !48
  %birth33.i1111.i = getelementptr inbounds %struct.qty* %401, i64 1, i32 2
  %405 = load i32* %birth33.i1111.i, align 4, !tbaa !47
  %sub34.i1112.i = sub nsw i32 %404, %405
  %conv35.i1113.i = sitofp i32 %sub34.i1112.i to double
  %div36.i1114.i = fdiv double %conv27.i1109.i, %conv35.i1113.i
  %mul37.i1115.i = fmul double %div36.i1114.i, 1.000000e+01
  %conv38.i1116.i = fptosi double %mul37.i1115.i to i32
  %sub39.i1117.i = sub nsw i32 %conv13.i1101.i, %conv38.i1116.i
  %cmp647.i = icmp sgt i32 %sub39.i1117.i, 0
  br i1 %cmp647.i, label %if.then649.i, label %sw.bb655.i

if.then649.i:                                     ; preds = %if.end645.i
  %arrayidx650.i = getelementptr inbounds i8* %call550.i, i64 8
  %406 = bitcast i8* %arrayidx650.i to i32*
  %407 = load i32* %406, align 4, !tbaa !1
  %arrayidx651.i = getelementptr inbounds i8* %call550.i, i64 4
  %408 = bitcast i8* %arrayidx651.i to i32*
  %409 = load i32* %408, align 4, !tbaa !1
  store i32 %409, i32* %406, align 4, !tbaa !1
  store i32 %407, i32* %408, align 4, !tbaa !1
  br label %sw.bb655.i

sw.bb655.i:                                       ; preds = %if.then649.i, %if.end645.i, %for.end635.sw.bb655_crit_edge.i
  %410 = phi %struct.qty* [ %.pre1222.i, %for.end635.sw.bb655_crit_edge.i ], [ %401, %if.end645.i ], [ %401, %if.then649.i ]
  %n_refs.i1118.i = getelementptr inbounds %struct.qty* %410, i64 1, i32 0
  %411 = load i32* %n_refs.i1118.i, align 4, !tbaa !50
  %conv.i1119.i = sext i32 %411 to i64
  %call.i1120.i = call i32 @floor_log2_wide(i64 %conv.i1119.i) #2
  %412 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq.i1121.i = getelementptr inbounds %struct.qty* %412, i64 1, i32 1
  %413 = load i32* %freq.i1121.i, align 4, !tbaa !51
  %mul.i1122.i = mul nsw i32 %413, %call.i1120.i
  %size.i1123.i = getelementptr inbounds %struct.qty* %412, i64 1, i32 4
  %414 = load i32* %size.i1123.i, align 4, !tbaa !52
  %mul5.i1124.i = mul nsw i32 %mul.i1122.i, %414
  %conv6.i1125.i = sitofp i32 %mul5.i1124.i to double
  %death.i1126.i = getelementptr inbounds %struct.qty* %412, i64 1, i32 3
  %415 = load i32* %death.i1126.i, align 4, !tbaa !48
  %birth.i1127.i = getelementptr inbounds %struct.qty* %412, i64 1, i32 2
  %416 = load i32* %birth.i1127.i, align 4, !tbaa !47
  %sub.i1128.i = sub nsw i32 %415, %416
  %conv11.i1129.i = sitofp i32 %sub.i1128.i to double
  %div.i1130.i = fdiv double %conv6.i1125.i, %conv11.i1129.i
  %mul12.i1131.i = fmul double %div.i1130.i, 1.000000e+01
  %conv13.i1132.i = fptosi double %mul12.i1131.i to i32
  %n_refs16.i1133.i = getelementptr inbounds %struct.qty* %412, i64 0, i32 0
  %417 = load i32* %n_refs16.i1133.i, align 4, !tbaa !50
  %conv17.i1134.i = sext i32 %417 to i64
  %call18.i1135.i = call i32 @floor_log2_wide(i64 %conv17.i1134.i) #2
  %418 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq21.i1136.i = getelementptr inbounds %struct.qty* %418, i64 0, i32 1
  %419 = load i32* %freq21.i1136.i, align 4, !tbaa !51
  %mul22.i1137.i = mul nsw i32 %419, %call18.i1135.i
  %size25.i1138.i = getelementptr inbounds %struct.qty* %418, i64 0, i32 4
  %420 = load i32* %size25.i1138.i, align 4, !tbaa !52
  %mul26.i1139.i = mul nsw i32 %mul22.i1137.i, %420
  %conv27.i1140.i = sitofp i32 %mul26.i1139.i to double
  %death30.i1141.i = getelementptr inbounds %struct.qty* %418, i64 0, i32 3
  %421 = load i32* %death30.i1141.i, align 4, !tbaa !48
  %birth33.i1142.i = getelementptr inbounds %struct.qty* %418, i64 0, i32 2
  %422 = load i32* %birth33.i1142.i, align 4, !tbaa !47
  %sub34.i1143.i = sub nsw i32 %421, %422
  %conv35.i1144.i = sitofp i32 %sub34.i1143.i to double
  %div36.i1145.i = fdiv double %conv27.i1140.i, %conv35.i1144.i
  %mul37.i1146.i = fmul double %div36.i1145.i, 1.000000e+01
  %conv38.i1147.i = fptosi double %mul37.i1146.i to i32
  %sub39.i1148.i = sub nsw i32 %conv13.i1132.i, %conv38.i1147.i
  %cmp657.i = icmp sgt i32 %sub39.i1148.i, 0
  br i1 %cmp657.i, label %if.then659.i, label %for.cond668.preheader.i

if.then659.i:                                     ; preds = %sw.bb655.i
  %423 = load i32* %348, align 4, !tbaa !1
  %arrayidx661.i = getelementptr inbounds i8* %call550.i, i64 4
  %424 = bitcast i8* %arrayidx661.i to i32*
  %425 = load i32* %424, align 4, !tbaa !1
  store i32 %425, i32* %348, align 4, !tbaa !1
  store i32 %423, i32* %424, align 4, !tbaa !1
  br label %for.cond668.preheader.i

sw.default666.i:                                  ; preds = %for.end635.i
  call void @specqsort(i8* %call550.i, i32 %.lcssa.i, i32 4, i32 (...)* bitcast (i32 (i8*, i8*)* @qty_compare_1 to i32 (...)*)) #2
  br label %for.cond668.preheader.i

for.cond668.preheader.i:                          ; preds = %sw.default666.i, %if.then659.i, %sw.bb655.i, %for.end635.i, %for.end635.i
  %426 = load i32* @next_qty, align 4, !tbaa !1
  %cmp6691160.i = icmp sgt i32 %426, 0
  br i1 %cmp6691160.i, label %for.body671.lr.ph.i, label %block_alloc.exit

for.body671.lr.ph.i:                              ; preds = %for.cond668.preheader.i
  %.pre1228.i = load %struct.qty** @qty, align 8, !tbaa !5
  br label %for.body671.i

for.cond832.preheader.i:                          ; preds = %for.inc829.i
  %cmp8331158.i = icmp sgt i32 %440, 0
  br i1 %cmp8331158.i, label %for.body835.i, label %block_alloc.exit

for.body671.i:                                    ; preds = %for.inc829.i, %for.body671.lr.ph.i
  %427 = phi %struct.qty* [ %.pre1228.i, %for.body671.lr.ph.i ], [ %.pre1223.i, %for.inc829.i ]
  %indvars.iv1202.i = phi i64 [ 0, %for.body671.lr.ph.i ], [ %indvars.iv.next1203.i, %for.inc829.i ]
  %arrayidx673.i = getelementptr inbounds i32* %348, i64 %indvars.iv1202.i
  %428 = load i32* %arrayidx673.i, align 4, !tbaa !1
  %idxprom674.i = sext i32 %428 to i64
  %phys_reg676.i = getelementptr inbounds %struct.qty* %427, i64 %idxprom674.i, i32 10
  %429 = load i16* %phys_reg676.i, align 2, !tbaa !49
  %cmp678.i = icmp slt i16 %429, 0
  br i1 %cmp678.i, label %if.then680.i, label %for.inc829.i

if.then680.i:                                     ; preds = %for.body671.i
  %birth683.i = getelementptr inbounds %struct.qty* %427, i64 %idxprom674.i, i32 2
  %430 = load i32* %birth683.i, align 4, !tbaa !47
  %death708.i = getelementptr inbounds %struct.qty* %427, i64 %idxprom674.i, i32 3
  %431 = load i32* %death708.i, align 4, !tbaa !48
  %min_class759.i = getelementptr inbounds %struct.qty* %427, i64 %idxprom674.i, i32 7
  %432 = load i32* %min_class759.i, align 4, !tbaa !44
  %mode762.i = getelementptr inbounds %struct.qty* %427, i64 %idxprom674.i, i32 9
  %433 = load i32* %mode762.i, align 4, !tbaa !46
  %call769.i = call fastcc i32 @find_free_reg(i32 %432, i32 %433, i32 %428, i32 0, i32 0, i32 %430, i32 %431) #2
  %conv770.i = trunc i32 %call769.i to i16
  %434 = load %struct.qty** @qty, align 8, !tbaa !5
  %phys_reg773.i = getelementptr inbounds %struct.qty* %434, i64 %idxprom674.i, i32 10
  store i16 %conv770.i, i16* %phys_reg773.i, align 2, !tbaa !49
  %cmp778.i = icmp sgt i16 %conv770.i, -1
  br i1 %cmp778.i, label %for.inc829.i, label %if.end781.i

if.end781.i:                                      ; preds = %if.then680.i
  %alternate_class806.i = getelementptr inbounds %struct.qty* %434, i64 %idxprom674.i, i32 8
  %435 = load i32* %alternate_class806.i, align 4, !tbaa !53
  %cmp807.i = icmp eq i32 %435, 0
  br i1 %cmp807.i, label %for.inc829.i, label %if.then809.i

if.then809.i:                                     ; preds = %if.end781.i
  %mode815.i = getelementptr inbounds %struct.qty* %434, i64 %idxprom674.i, i32 9
  %436 = load i32* %mode815.i, align 4, !tbaa !46
  %birth818.i = getelementptr inbounds %struct.qty* %434, i64 %idxprom674.i, i32 2
  %437 = load i32* %birth818.i, align 4, !tbaa !47
  %death821.i = getelementptr inbounds %struct.qty* %434, i64 %idxprom674.i, i32 3
  %438 = load i32* %death821.i, align 4, !tbaa !48
  %call822.i = call fastcc i32 @find_free_reg(i32 %435, i32 %436, i32 %428, i32 0, i32 0, i32 %437, i32 %438) #2
  %conv823.i = trunc i32 %call822.i to i16
  %439 = load %struct.qty** @qty, align 8, !tbaa !5
  %phys_reg826.i = getelementptr inbounds %struct.qty* %439, i64 %idxprom674.i, i32 10
  store i16 %conv823.i, i16* %phys_reg826.i, align 2, !tbaa !49
  br label %for.inc829.i

for.inc829.i:                                     ; preds = %if.then809.i, %if.end781.i, %if.then680.i, %for.body671.i
  %.pre1223.i = phi %struct.qty* [ %434, %if.end781.i ], [ %427, %for.body671.i ], [ %439, %if.then809.i ], [ %434, %if.then680.i ]
  %indvars.iv.next1203.i = add nuw nsw i64 %indvars.iv1202.i, 1
  %440 = load i32* @next_qty, align 4, !tbaa !1
  %441 = trunc i64 %indvars.iv.next1203.i to i32
  %cmp669.i = icmp slt i32 %441, %440
  br i1 %cmp669.i, label %for.body671.i, label %for.cond832.preheader.i

for.body835.i:                                    ; preds = %for.cond832.preheader.i, %for.inc865.i
  %indvars.iv.i122 = phi i64 [ %indvars.iv.next.i123, %for.inc865.i ], [ 0, %for.cond832.preheader.i ]
  %phys_reg838.i = getelementptr inbounds %struct.qty* %.pre1223.i, i64 %indvars.iv.i122, i32 10
  %442 = load i16* %phys_reg838.i, align 2, !tbaa !49
  %cmp840.i = icmp sgt i16 %442, -1
  br i1 %cmp840.i, label %if.then842.i, label %for.inc865.i

if.then842.i:                                     ; preds = %for.body835.i
  %first_reg.i = getelementptr inbounds %struct.qty* %.pre1223.i, i64 %indvars.iv.i122, i32 6
  %i.41155.i = load i32* %first_reg.i, align 4
  %cmp8461156.i = icmp sgt i32 %i.41155.i, -1
  br i1 %cmp8461156.i, label %for.body848.lr.ph.i, label %for.inc865.i

for.body848.lr.ph.i:                              ; preds = %if.then842.i
  %.pre1225.i = load i8** @reg_offset, align 8, !tbaa !5
  %.pre1226.i = load i16** @reg_renumber, align 8, !tbaa !5
  %.pre1227.i = load i32** @reg_next_in_qty, align 8, !tbaa !5
  %idxprom853.i131 = sext i32 %i.41155.i to i64
  %arrayidx854.i132 = getelementptr inbounds i8* %.pre1225.i, i64 %idxprom853.i131
  %443 = load i8* %arrayidx854.i132, align 1, !tbaa !11
  %conv855.i133 = sext i8 %443 to i16
  %add856.i134 = add i16 %conv855.i133, %442
  %arrayidx859.i135 = getelementptr inbounds i16* %.pre1226.i, i64 %idxprom853.i131
  store i16 %add856.i134, i16* %arrayidx859.i135, align 2, !tbaa !42
  %arrayidx862.i136 = getelementptr inbounds i32* %.pre1227.i, i64 %idxprom853.i131
  %i.4.i137 = load i32* %arrayidx862.i136, align 4
  %cmp846.i138 = icmp sgt i32 %i.4.i137, -1
  br i1 %cmp846.i138, label %for.body848.for.body848_crit_edge.i, label %for.inc865.i

for.body848.for.body848_crit_edge.i:              ; preds = %for.body848.lr.ph.i, %for.body848.for.body848_crit_edge.i
  %i.4.i139 = phi i32 [ %i.4.i, %for.body848.for.body848_crit_edge.i ], [ %i.4.i137, %for.body848.lr.ph.i ]
  %.pre1224.i = load i16* %phys_reg838.i, align 2, !tbaa !49
  %idxprom853.i = sext i32 %i.4.i139 to i64
  %arrayidx854.i = getelementptr inbounds i8* %.pre1225.i, i64 %idxprom853.i
  %444 = load i8* %arrayidx854.i, align 1, !tbaa !11
  %conv855.i = sext i8 %444 to i16
  %add856.i = add i16 %conv855.i, %.pre1224.i
  %arrayidx859.i = getelementptr inbounds i16* %.pre1226.i, i64 %idxprom853.i
  store i16 %add856.i, i16* %arrayidx859.i, align 2, !tbaa !42
  %arrayidx862.i = getelementptr inbounds i32* %.pre1227.i, i64 %idxprom853.i
  %i.4.i = load i32* %arrayidx862.i, align 4
  %cmp846.i = icmp sgt i32 %i.4.i, -1
  br i1 %cmp846.i, label %for.body848.for.body848_crit_edge.i, label %for.inc865.i

for.inc865.i:                                     ; preds = %for.body848.for.body848_crit_edge.i, %for.body848.lr.ph.i, %if.then842.i, %for.body835.i
  %indvars.iv.next.i123 = add nuw nsw i64 %indvars.iv.i122, 1
  %lftr.wideiv152 = trunc i64 %indvars.iv.next.i123 to i32
  %exitcond153 = icmp eq i32 %lftr.wideiv152, %440
  br i1 %exitcond153, label %block_alloc.exit, label %for.body835.i

block_alloc.exit:                                 ; preds = %for.inc865.i, %for.cond668.preheader.i, %for.cond832.preheader.i
  %445 = load i64** @regs_live_at, align 8, !tbaa !5
  %446 = bitcast i64* %445 to i8*
  call void @free(i8* %446) #2
  call void @free(i8* %call550.i) #2
  %indvars.iv.next155 = add nuw nsw i64 %indvars.iv154, 1
  %447 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %448 = trunc i64 %indvars.iv.next155 to i32
  %cmp36 = icmp slt i32 %448, %447
  br i1 %cmp36, label %block_alloc.exit.for.body38_crit_edge, label %for.end69

block_alloc.exit.for.body38_crit_edge:            ; preds = %block_alloc.exit
  %.pre = load i32* @next_qty, align 4, !tbaa !1
  br label %for.body38

for.end69:                                        ; preds = %block_alloc.exit, %for.end
  %449 = load %struct.qty** @qty, align 8, !tbaa !5
  %450 = bitcast %struct.qty* %449 to i8*
  call void @free(i8* %450)
  %451 = load i64** @qty_phys_copy_sugg, align 8, !tbaa !5
  %452 = bitcast i64* %451 to i8*
  call void @free(i8* %452)
  %453 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %454 = bitcast i16* %453 to i8*
  call void @free(i8* %454)
  %455 = load i64** @qty_phys_sugg, align 8, !tbaa !5
  %456 = bitcast i64* %455 to i8*
  call void @free(i8* %456)
  %457 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %458 = bitcast i16* %457 to i8*
  call void @free(i8* %458)
  %459 = load i32** @reg_qty, align 8, !tbaa !5
  %460 = bitcast i32* %459 to i8*
  call void @free(i8* %460)
  %461 = load i8** @reg_offset, align 8, !tbaa !5
  call void @free(i8* %461)
  %462 = load i32** @reg_next_in_qty, align 8, !tbaa !5
  %463 = bitcast i32* %462 to i8*
  call void @free(i8* %463)
  %.b = load i1* @recorded_label_ref, align 1
  %464 = zext i1 %.b to i32
  ret i32 %464
}

declare void @x86_order_regs_for_local_alloc() #1

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) #3

; Function Attrs: nounwind readonly uwtable
define i32 @function_invariant_p(%struct.rtx_def* readonly %x) #4 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !5
  %cmp28 = icmp eq %struct.rtx_def* %1, %x
  br i1 %cmp28, label %return, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %if.end
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !5
  %cmp30 = icmp eq %struct.rtx_def* %2, %x
  br i1 %cmp30, label %return, label %if.end32

if.end32:                                         ; preds = %lor.lhs.false29
  %cmp35 = icmp eq i32 %bf.clear, 75
  br i1 %cmp35, label %land.lhs.true, label %if.end99

land.lhs.true:                                    ; preds = %if.end32
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp36 = icmp eq %struct.rtx_def* %3, %1
  %cmp41 = icmp eq %struct.rtx_def* %3, %2
  %or.cond = or i1 %cmp36, %cmp41
  br i1 %or.cond, label %land.lhs.true42, label %if.end99

land.lhs.true42:                                  ; preds = %land.lhs.true
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx45, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load46 = load i32* %5, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  switch i32 %bf.clear47, label %if.end99 [
    i32 67, label %return
    i32 68, label %return
    i32 54, label %return
    i32 55, label %return
    i32 58, label %return
    i32 134, label %return
    i32 56, label %return
    i32 140, label %return
  ]

if.end99:                                         ; preds = %land.lhs.true42, %land.lhs.true, %if.end32
  br label %return

return:                                           ; preds = %land.lhs.true42, %land.lhs.true42, %land.lhs.true42, %land.lhs.true42, %land.lhs.true42, %land.lhs.true42, %land.lhs.true42, %land.lhs.true42, %if.end, %lor.lhs.false29, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %if.end99
  %retval.0 = phi i32 [ 0, %if.end99 ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %lor.lhs.false29 ], [ 1, %if.end ], [ 1, %land.lhs.true42 ], [ 1, %land.lhs.true42 ], [ 1, %land.lhs.true42 ], [ 1, %land.lhs.true42 ], [ 1, %land.lhs.true42 ], [ 1, %land.lhs.true42 ], [ 1, %land.lhs.true42 ], [ 1, %land.lhs.true42 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @dump_local_alloc(%struct._IO_FILE* nocapture %file) #0 {
entry:
  %0 = load i32* @max_regno, align 4, !tbaa !1
  %cmp10 = icmp sgt i32 %0, 53
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %1 = phi i32 [ %5, %for.inc ], [ %0, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 53, %entry ]
  %2 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds i16* %2, i64 %indvars.iv
  %3 = load i16* %arrayidx, align 2, !tbaa !42
  %cmp1 = icmp eq i16 %3, -1
  br i1 %cmp1, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %conv = sext i16 %3 to i32
  %4 = trunc i64 %indvars.iv to i32
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([23 x i8]* @.str, i64 0, i64 0), i32 %4, i32 %conv) #2
  %.pre = load i32* @max_regno, align 4, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %5 = phi i32 [ %1, %for.body ], [ %.pre, %if.then ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %6, %5
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #3

declare i32 @get_max_uid() #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #5

declare noalias i8* @xcalloc(i64, i64) #1

declare void @reg_set_to_hard_reg_set(i64*, %struct.bitmap_head_def*) #1

declare void @extract_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind readonly uwtable
define internal fastcc i32 @requires_inout(i8* readonly %p) #4 {
entry:
  %incdec.ptr213 = getelementptr inbounds i8* %p, i64 1
  %0 = load i8* %p, align 1, !tbaa !11
  %tobool214 = icmp eq i8 %0, 0
  br i1 %tobool214, label %while.end163, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !1
  %2 = and i32 %1, 33
  %3 = icmp eq i32 %2, 0
  %and90 = and i32 %1, 327680
  %cmp91 = icmp eq i32 %and90, 0
  %4 = and i32 %1, 262144
  %cmp158 = icmp eq i32 %4, 0
  %and108 = and i32 %1, 16384
  %cmp109 = icmp eq i32 %and108, 0
  br i1 %cmp109, label %while.body.lr.ph.split.us, label %while.body.lr.ph.while.body.lr.ph.split_crit_edge

while.body.lr.ph.while.body.lr.ph.split_crit_edge: ; preds = %while.body.lr.ph
  br i1 %cmp158, label %while.body.us221, label %while.body

while.body.lr.ph.split.us:                        ; preds = %while.body.lr.ph
  br i1 %cmp158, label %while.body.us.us, label %while.body.us

while.body.us.us:                                 ; preds = %while.body.lr.ph.split.us, %while.cond.backedge.us.us
  %5 = phi i8 [ %8, %while.cond.backedge.us.us ], [ %0, %while.body.lr.ph.split.us ]
  %incdec.ptr218.us.us = phi i8* [ %incdec.ptr.us.us, %while.cond.backedge.us.us ], [ %incdec.ptr213, %while.body.lr.ph.split.us ]
  %num_matching_alts.0217.us.us = phi i32 [ %num_matching_alts.0.be.us.us, %while.cond.backedge.us.us ], [ 0, %while.body.lr.ph.split.us ]
  %reg_allowed.0216.us.us = phi i32 [ %reg_allowed.0.be.us.us, %while.cond.backedge.us.us ], [ 0, %while.body.lr.ph.split.us ]
  %found_zero.0215.us.us = phi i32 [ %found_zero.0.be.us.us, %while.cond.backedge.us.us ], [ 0, %while.body.lr.ph.split.us ]
  %conv.us.us = sext i8 %5 to i32
  switch i32 %conv.us.us, label %sw.default.us.us [
    i32 61, label %while.cond.backedge.us.us
    i32 43, label %while.cond.backedge.us.us
    i32 63, label %while.cond.backedge.us.us
    i32 35, label %while.cond.backedge.us.us
    i32 38, label %while.cond.backedge.us.us
    i32 33, label %while.cond.backedge.us.us
    i32 42, label %while.cond.backedge.us.us
    i32 37, label %while.cond.backedge.us.us
    i32 109, label %while.cond.backedge.us.us
    i32 60, label %while.cond.backedge.us.us
    i32 62, label %while.cond.backedge.us.us
    i32 86, label %while.cond.backedge.us.us
    i32 111, label %while.cond.backedge.us.us
    i32 69, label %while.cond.backedge.us.us
    i32 70, label %while.cond.backedge.us.us
    i32 71, label %while.cond.backedge.us.us
    i32 72, label %while.cond.backedge.us.us
    i32 115, label %while.cond.backedge.us.us
    i32 105, label %while.cond.backedge.us.us
    i32 110, label %while.cond.backedge.us.us
    i32 73, label %while.cond.backedge.us.us
    i32 74, label %while.cond.backedge.us.us
    i32 75, label %while.cond.backedge.us.us
    i32 76, label %while.cond.backedge.us.us
    i32 77, label %while.cond.backedge.us.us
    i32 78, label %while.cond.backedge.us.us
    i32 79, label %while.cond.backedge.us.us
    i32 80, label %while.cond.backedge.us.us
    i32 88, label %while.cond.backedge.us.us
    i32 44, label %sw.bb1.us.us
    i32 48, label %sw.bb4.us.us
    i32 49, label %while.cond6.us.us
    i32 50, label %while.cond6.us.us
    i32 51, label %while.cond6.us.us
    i32 52, label %while.cond6.us.us
    i32 53, label %while.cond6.us.us
    i32 54, label %while.cond6.us.us
    i32 55, label %while.cond6.us.us
    i32 56, label %while.cond6.us.us
    i32 57, label %while.cond6.us.us
    i32 112, label %sw.bb162.us.us
    i32 103, label %sw.bb162.us.us
    i32 114, label %sw.bb162.us.us
  ]

sw.bb4.us.us:                                     ; preds = %while.body.us.us
  br label %while.cond.backedge.us.us

sw.bb1.us.us:                                     ; preds = %while.body.us.us
  %6 = xor i32 %found_zero.0215.us.us, 1
  %7 = or i32 %6, %reg_allowed.0216.us.us
  %inc.us.us = xor i32 %7, 1
  %num_matching_alts.0.inc.us.us = add nsw i32 %inc.us.us, %num_matching_alts.0217.us.us
  br label %while.cond.backedge.us.us

sw.default.us.us:                                 ; preds = %while.body.us.us
  switch i8 %5, label %while.cond.backedge.us.us [
    i8 114, label %sw.bb162.us.us
    i8 82, label %sw.bb162.us.us
    i8 113, label %sw.bb162.us.us
    i8 81, label %sw.bb162.us.us
    i8 102, label %cond.true35.us.us
    i8 116, label %cond.true45.us.us
    i8 117, label %cond.true57.us.us
    i8 97, label %sw.bb162.us.us
    i8 98, label %sw.bb162.us.us
    i8 99, label %sw.bb162.us.us
    i8 100, label %sw.bb162.us.us
    i8 120, label %cond.true89.us.us
    i8 83, label %sw.bb162.us.us
    i8 68, label %sw.bb162.us.us
    i8 65, label %sw.bb162.us.us
  ]

cond.true89.us.us:                                ; preds = %sw.default.us.us
  br i1 %cmp91, label %while.cond.backedge.us.us, label %sw.bb162.us.us

cond.true57.us.us:                                ; preds = %sw.default.us.us
  br i1 %3, label %while.cond.backedge.us.us, label %sw.bb162.us.us

cond.true45.us.us:                                ; preds = %sw.default.us.us
  br i1 %3, label %while.cond.backedge.us.us, label %sw.bb162.us.us

cond.true35.us.us:                                ; preds = %sw.default.us.us
  br i1 %3, label %while.cond.backedge.us.us, label %sw.bb162.us.us

sw.bb162.us.us:                                   ; preds = %sw.default.us.us, %sw.default.us.us, %cond.true35.us.us, %cond.true45.us.us, %cond.true57.us.us, %cond.true89.us.us, %sw.default.us.us, %sw.default.us.us, %sw.default.us.us, %sw.default.us.us, %sw.default.us.us, %sw.default.us.us, %sw.default.us.us, %sw.default.us.us, %sw.default.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us
  br label %while.cond.backedge.us.us

while.cond.backedge.us.us:                        ; preds = %while.cond6.us.us, %sw.bb162.us.us, %cond.true35.us.us, %cond.true45.us.us, %cond.true57.us.us, %cond.true89.us.us, %sw.default.us.us, %sw.bb1.us.us, %sw.bb4.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us
  %p.addr.0.be.us.us = phi i8* [ %incdec.ptr218.us.us, %sw.bb162.us.us ], [ %incdec.ptr218.us.us, %sw.bb4.us.us ], [ %incdec.ptr218.us.us, %sw.bb1.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %cond.true89.us.us ], [ %incdec.ptr218.us.us, %cond.true35.us.us ], [ %incdec.ptr218.us.us, %cond.true45.us.us ], [ %incdec.ptr218.us.us, %cond.true57.us.us ], [ %incdec.ptr218.us.us, %sw.default.us.us ], [ %p.addr.1.us.us, %while.cond6.us.us ]
  %found_zero.0.be.us.us = phi i32 [ %found_zero.0215.us.us, %sw.bb162.us.us ], [ 1, %sw.bb4.us.us ], [ 0, %sw.bb1.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %while.body.us.us ], [ %found_zero.0215.us.us, %cond.true89.us.us ], [ %found_zero.0215.us.us, %cond.true35.us.us ], [ %found_zero.0215.us.us, %cond.true45.us.us ], [ %found_zero.0215.us.us, %cond.true57.us.us ], [ %found_zero.0215.us.us, %sw.default.us.us ], [ %found_zero.0215.us.us, %while.cond6.us.us ]
  %reg_allowed.0.be.us.us = phi i32 [ 1, %sw.bb162.us.us ], [ %reg_allowed.0216.us.us, %sw.bb4.us.us ], [ 0, %sw.bb1.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %while.body.us.us ], [ %reg_allowed.0216.us.us, %cond.true89.us.us ], [ %reg_allowed.0216.us.us, %cond.true35.us.us ], [ %reg_allowed.0216.us.us, %cond.true45.us.us ], [ %reg_allowed.0216.us.us, %cond.true57.us.us ], [ %reg_allowed.0216.us.us, %sw.default.us.us ], [ %reg_allowed.0216.us.us, %while.cond6.us.us ]
  %num_matching_alts.0.be.us.us = phi i32 [ %num_matching_alts.0217.us.us, %sw.bb162.us.us ], [ %num_matching_alts.0217.us.us, %sw.bb4.us.us ], [ %num_matching_alts.0.inc.us.us, %sw.bb1.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %while.body.us.us ], [ %num_matching_alts.0217.us.us, %cond.true89.us.us ], [ %num_matching_alts.0217.us.us, %cond.true35.us.us ], [ %num_matching_alts.0217.us.us, %cond.true45.us.us ], [ %num_matching_alts.0217.us.us, %cond.true57.us.us ], [ %num_matching_alts.0217.us.us, %sw.default.us.us ], [ %num_matching_alts.0217.us.us, %while.cond6.us.us ]
  %incdec.ptr.us.us = getelementptr inbounds i8* %p.addr.0.be.us.us, i64 1
  %8 = load i8* %p.addr.0.be.us.us, align 1, !tbaa !11
  %tobool.us.us = icmp eq i8 %8, 0
  br i1 %tobool.us.us, label %while.end163, label %while.body.us.us

while.cond6.us.us:                                ; preds = %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.body.us.us, %while.cond6.us.us
  %p.addr.1.us.us = phi i8* [ %incdec.ptr12.us.us, %while.cond6.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ], [ %incdec.ptr218.us.us, %while.body.us.us ]
  %9 = load i8* %p.addr.1.us.us, align 1, !tbaa !11
  %idxprom.us.us = zext i8 %9 to i64
  %arrayidx.us.us = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom.us.us
  %10 = load i16* %arrayidx.us.us, align 2, !tbaa !42
  %and9.us.us = and i16 %10, 4
  %tobool10.us.us = icmp eq i16 %and9.us.us, 0
  %incdec.ptr12.us.us = getelementptr inbounds i8* %p.addr.1.us.us, i64 1
  br i1 %tobool10.us.us, label %while.cond.backedge.us.us, label %while.cond6.us.us

while.body.us:                                    ; preds = %while.body.lr.ph.split.us, %while.cond.backedge.us
  %11 = phi i8 [ %16, %while.cond.backedge.us ], [ %0, %while.body.lr.ph.split.us ]
  %incdec.ptr218.us = phi i8* [ %incdec.ptr.us, %while.cond.backedge.us ], [ %incdec.ptr213, %while.body.lr.ph.split.us ]
  %num_matching_alts.0217.us = phi i32 [ %num_matching_alts.0.be.us, %while.cond.backedge.us ], [ 0, %while.body.lr.ph.split.us ]
  %reg_allowed.0216.us = phi i32 [ %reg_allowed.0.be.us, %while.cond.backedge.us ], [ 0, %while.body.lr.ph.split.us ]
  %found_zero.0215.us = phi i32 [ %found_zero.0.be.us, %while.cond.backedge.us ], [ 0, %while.body.lr.ph.split.us ]
  %conv.us = sext i8 %11 to i32
  switch i32 %conv.us, label %sw.default.us [
    i32 61, label %while.cond.backedge.us
    i32 43, label %while.cond.backedge.us
    i32 63, label %while.cond.backedge.us
    i32 35, label %while.cond.backedge.us
    i32 38, label %while.cond.backedge.us
    i32 33, label %while.cond.backedge.us
    i32 42, label %while.cond.backedge.us
    i32 37, label %while.cond.backedge.us
    i32 109, label %while.cond.backedge.us
    i32 60, label %while.cond.backedge.us
    i32 62, label %while.cond.backedge.us
    i32 86, label %while.cond.backedge.us
    i32 111, label %while.cond.backedge.us
    i32 69, label %while.cond.backedge.us
    i32 70, label %while.cond.backedge.us
    i32 71, label %while.cond.backedge.us
    i32 72, label %while.cond.backedge.us
    i32 115, label %while.cond.backedge.us
    i32 105, label %while.cond.backedge.us
    i32 110, label %while.cond.backedge.us
    i32 73, label %while.cond.backedge.us
    i32 74, label %while.cond.backedge.us
    i32 75, label %while.cond.backedge.us
    i32 76, label %while.cond.backedge.us
    i32 77, label %while.cond.backedge.us
    i32 78, label %while.cond.backedge.us
    i32 79, label %while.cond.backedge.us
    i32 80, label %while.cond.backedge.us
    i32 88, label %while.cond.backedge.us
    i32 44, label %sw.bb1.us
    i32 48, label %sw.bb4.us
    i32 49, label %while.cond6.us
    i32 50, label %while.cond6.us
    i32 51, label %while.cond6.us
    i32 52, label %while.cond6.us
    i32 53, label %while.cond6.us
    i32 54, label %while.cond6.us
    i32 55, label %while.cond6.us
    i32 56, label %while.cond6.us
    i32 57, label %while.cond6.us
    i32 112, label %sw.bb162.us
    i32 103, label %sw.bb162.us
    i32 114, label %sw.bb162.us
  ]

while.cond6.us:                                   ; preds = %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.cond6.us
  %p.addr.1.us = phi i8* [ %incdec.ptr12.us, %while.cond6.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ]
  %12 = load i8* %p.addr.1.us, align 1, !tbaa !11
  %idxprom.us = zext i8 %12 to i64
  %arrayidx.us = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom.us
  %13 = load i16* %arrayidx.us, align 2, !tbaa !42
  %and9.us = and i16 %13, 4
  %tobool10.us = icmp eq i16 %and9.us, 0
  %incdec.ptr12.us = getelementptr inbounds i8* %p.addr.1.us, i64 1
  br i1 %tobool10.us, label %while.cond.backedge.us, label %while.cond6.us

sw.bb4.us:                                        ; preds = %while.body.us
  br label %while.cond.backedge.us

sw.bb1.us:                                        ; preds = %while.body.us
  %14 = xor i32 %found_zero.0215.us, 1
  %15 = or i32 %14, %reg_allowed.0216.us
  %inc.us = xor i32 %15, 1
  %num_matching_alts.0.inc.us = add nsw i32 %inc.us, %num_matching_alts.0217.us
  br label %while.cond.backedge.us

sw.default.us:                                    ; preds = %while.body.us
  switch i8 %11, label %while.cond.backedge.us [
    i8 114, label %sw.bb162.us
    i8 82, label %sw.bb162.us
    i8 113, label %sw.bb162.us
    i8 81, label %sw.bb162.us
    i8 102, label %cond.true35.us
    i8 116, label %cond.true45.us
    i8 117, label %cond.true57.us
    i8 97, label %sw.bb162.us
    i8 98, label %sw.bb162.us
    i8 99, label %sw.bb162.us
    i8 100, label %sw.bb162.us
    i8 120, label %cond.true89.us
    i8 89, label %sw.bb162.us
    i8 83, label %sw.bb162.us
    i8 65, label %sw.bb162.us
    i8 68, label %sw.bb162.us
  ]

cond.true89.us:                                   ; preds = %sw.default.us
  br i1 %cmp91, label %while.cond.backedge.us, label %sw.bb162.us

cond.true57.us:                                   ; preds = %sw.default.us
  br i1 %3, label %while.cond.backedge.us, label %sw.bb162.us

cond.true45.us:                                   ; preds = %sw.default.us
  br i1 %3, label %while.cond.backedge.us, label %sw.bb162.us

cond.true35.us:                                   ; preds = %sw.default.us
  br i1 %3, label %while.cond.backedge.us, label %sw.bb162.us

sw.bb162.us:                                      ; preds = %sw.default.us, %sw.default.us, %cond.true35.us, %cond.true45.us, %cond.true57.us, %cond.true89.us, %sw.default.us, %sw.default.us, %sw.default.us, %sw.default.us, %sw.default.us, %sw.default.us, %sw.default.us, %sw.default.us, %sw.default.us, %sw.default.us, %while.body.us, %while.body.us, %while.body.us
  br label %while.cond.backedge.us

while.cond.backedge.us:                           ; preds = %while.cond6.us, %sw.bb162.us, %cond.true35.us, %cond.true45.us, %cond.true57.us, %cond.true89.us, %sw.default.us, %sw.bb1.us, %sw.bb4.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us, %while.body.us
  %p.addr.0.be.us = phi i8* [ %incdec.ptr218.us, %sw.bb162.us ], [ %incdec.ptr218.us, %sw.bb4.us ], [ %incdec.ptr218.us, %sw.bb1.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %while.body.us ], [ %incdec.ptr218.us, %cond.true89.us ], [ %incdec.ptr218.us, %cond.true35.us ], [ %incdec.ptr218.us, %cond.true45.us ], [ %incdec.ptr218.us, %cond.true57.us ], [ %incdec.ptr218.us, %sw.default.us ], [ %p.addr.1.us, %while.cond6.us ]
  %found_zero.0.be.us = phi i32 [ %found_zero.0215.us, %sw.bb162.us ], [ 1, %sw.bb4.us ], [ 0, %sw.bb1.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %while.body.us ], [ %found_zero.0215.us, %cond.true89.us ], [ %found_zero.0215.us, %cond.true35.us ], [ %found_zero.0215.us, %cond.true45.us ], [ %found_zero.0215.us, %cond.true57.us ], [ %found_zero.0215.us, %sw.default.us ], [ %found_zero.0215.us, %while.cond6.us ]
  %reg_allowed.0.be.us = phi i32 [ 1, %sw.bb162.us ], [ %reg_allowed.0216.us, %sw.bb4.us ], [ 0, %sw.bb1.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %while.body.us ], [ %reg_allowed.0216.us, %cond.true89.us ], [ %reg_allowed.0216.us, %cond.true35.us ], [ %reg_allowed.0216.us, %cond.true45.us ], [ %reg_allowed.0216.us, %cond.true57.us ], [ %reg_allowed.0216.us, %sw.default.us ], [ %reg_allowed.0216.us, %while.cond6.us ]
  %num_matching_alts.0.be.us = phi i32 [ %num_matching_alts.0217.us, %sw.bb162.us ], [ %num_matching_alts.0217.us, %sw.bb4.us ], [ %num_matching_alts.0.inc.us, %sw.bb1.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %while.body.us ], [ %num_matching_alts.0217.us, %cond.true89.us ], [ %num_matching_alts.0217.us, %cond.true35.us ], [ %num_matching_alts.0217.us, %cond.true45.us ], [ %num_matching_alts.0217.us, %cond.true57.us ], [ %num_matching_alts.0217.us, %sw.default.us ], [ %num_matching_alts.0217.us, %while.cond6.us ]
  %incdec.ptr.us = getelementptr inbounds i8* %p.addr.0.be.us, i64 1
  %16 = load i8* %p.addr.0.be.us, align 1, !tbaa !11
  %tobool.us = icmp eq i8 %16, 0
  br i1 %tobool.us, label %while.end163, label %while.body.us

while.body.us221:                                 ; preds = %while.body.lr.ph.while.body.lr.ph.split_crit_edge, %while.cond.backedge.us249
  %17 = phi i8 [ %22, %while.cond.backedge.us249 ], [ %0, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %incdec.ptr218.us222 = phi i8* [ %incdec.ptr.us254, %while.cond.backedge.us249 ], [ %incdec.ptr213, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %num_matching_alts.0217.us223 = phi i32 [ %num_matching_alts.0.be.us253, %while.cond.backedge.us249 ], [ 0, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %reg_allowed.0216.us224 = phi i32 [ %reg_allowed.0.be.us252, %while.cond.backedge.us249 ], [ 0, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %found_zero.0215.us225 = phi i32 [ %found_zero.0.be.us251, %while.cond.backedge.us249 ], [ 0, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %conv.us226 = sext i8 %17 to i32
  switch i32 %conv.us226, label %sw.default.us238 [
    i32 61, label %while.cond.backedge.us249
    i32 43, label %while.cond.backedge.us249
    i32 63, label %while.cond.backedge.us249
    i32 35, label %while.cond.backedge.us249
    i32 38, label %while.cond.backedge.us249
    i32 33, label %while.cond.backedge.us249
    i32 42, label %while.cond.backedge.us249
    i32 37, label %while.cond.backedge.us249
    i32 109, label %while.cond.backedge.us249
    i32 60, label %while.cond.backedge.us249
    i32 62, label %while.cond.backedge.us249
    i32 86, label %while.cond.backedge.us249
    i32 111, label %while.cond.backedge.us249
    i32 69, label %while.cond.backedge.us249
    i32 70, label %while.cond.backedge.us249
    i32 71, label %while.cond.backedge.us249
    i32 72, label %while.cond.backedge.us249
    i32 115, label %while.cond.backedge.us249
    i32 105, label %while.cond.backedge.us249
    i32 110, label %while.cond.backedge.us249
    i32 73, label %while.cond.backedge.us249
    i32 74, label %while.cond.backedge.us249
    i32 75, label %while.cond.backedge.us249
    i32 76, label %while.cond.backedge.us249
    i32 77, label %while.cond.backedge.us249
    i32 78, label %while.cond.backedge.us249
    i32 79, label %while.cond.backedge.us249
    i32 80, label %while.cond.backedge.us249
    i32 88, label %while.cond.backedge.us249
    i32 44, label %sw.bb1.us235
    i32 48, label %sw.bb4.us234
    i32 49, label %while.cond6.us227
    i32 50, label %while.cond6.us227
    i32 51, label %while.cond6.us227
    i32 52, label %while.cond6.us227
    i32 53, label %while.cond6.us227
    i32 54, label %while.cond6.us227
    i32 55, label %while.cond6.us227
    i32 56, label %while.cond6.us227
    i32 57, label %while.cond6.us227
    i32 112, label %sw.bb162.us245
    i32 103, label %sw.bb162.us245
    i32 114, label %sw.bb162.us245
  ]

while.cond6.us227:                                ; preds = %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.cond6.us227
  %p.addr.1.us228 = phi i8* [ %incdec.ptr12.us233, %while.cond6.us227 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ]
  %18 = load i8* %p.addr.1.us228, align 1, !tbaa !11
  %idxprom.us229 = zext i8 %18 to i64
  %arrayidx.us230 = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom.us229
  %19 = load i16* %arrayidx.us230, align 2, !tbaa !42
  %and9.us231 = and i16 %19, 4
  %tobool10.us232 = icmp eq i16 %and9.us231, 0
  %incdec.ptr12.us233 = getelementptr inbounds i8* %p.addr.1.us228, i64 1
  br i1 %tobool10.us232, label %while.cond.backedge.us249, label %while.cond6.us227

sw.bb4.us234:                                     ; preds = %while.body.us221
  br label %while.cond.backedge.us249

sw.bb1.us235:                                     ; preds = %while.body.us221
  %20 = xor i32 %found_zero.0215.us225, 1
  %21 = or i32 %20, %reg_allowed.0216.us224
  %inc.us236 = xor i32 %21, 1
  %num_matching_alts.0.inc.us237 = add nsw i32 %inc.us236, %num_matching_alts.0217.us223
  br label %while.cond.backedge.us249

sw.default.us238:                                 ; preds = %while.body.us221
  switch i8 %17, label %while.cond.backedge.us249 [
    i8 114, label %sw.bb162.us245
    i8 82, label %sw.bb162.us245
    i8 113, label %sw.bb162.us245
    i8 81, label %sw.bb162.us245
    i8 102, label %cond.true35.us244
    i8 116, label %cond.true45.us243
    i8 117, label %cond.true57.us242
    i8 97, label %sw.bb162.us245
    i8 98, label %sw.bb162.us245
    i8 99, label %sw.bb162.us245
    i8 100, label %sw.bb162.us245
    i8 120, label %cond.true89.us241
    i8 83, label %sw.bb162.us245
    i8 121, label %sw.bb162.us245
    i8 65, label %sw.bb162.us245
    i8 68, label %sw.bb162.us245
  ]

cond.true89.us241:                                ; preds = %sw.default.us238
  br i1 %cmp91, label %while.cond.backedge.us249, label %sw.bb162.us245

cond.true57.us242:                                ; preds = %sw.default.us238
  br i1 %3, label %while.cond.backedge.us249, label %sw.bb162.us245

cond.true45.us243:                                ; preds = %sw.default.us238
  br i1 %3, label %while.cond.backedge.us249, label %sw.bb162.us245

cond.true35.us244:                                ; preds = %sw.default.us238
  br i1 %3, label %while.cond.backedge.us249, label %sw.bb162.us245

sw.bb162.us245:                                   ; preds = %sw.default.us238, %sw.default.us238, %cond.true35.us244, %cond.true45.us243, %cond.true57.us242, %cond.true89.us241, %sw.default.us238, %sw.default.us238, %sw.default.us238, %sw.default.us238, %sw.default.us238, %sw.default.us238, %sw.default.us238, %sw.default.us238, %sw.default.us238, %sw.default.us238, %while.body.us221, %while.body.us221, %while.body.us221
  br label %while.cond.backedge.us249

while.cond.backedge.us249:                        ; preds = %while.cond6.us227, %sw.bb162.us245, %cond.true35.us244, %cond.true45.us243, %cond.true57.us242, %cond.true89.us241, %sw.default.us238, %sw.bb1.us235, %sw.bb4.us234, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221, %while.body.us221
  %p.addr.0.be.us250 = phi i8* [ %incdec.ptr218.us222, %sw.bb162.us245 ], [ %incdec.ptr218.us222, %sw.bb4.us234 ], [ %incdec.ptr218.us222, %sw.bb1.us235 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %while.body.us221 ], [ %incdec.ptr218.us222, %cond.true89.us241 ], [ %incdec.ptr218.us222, %cond.true35.us244 ], [ %incdec.ptr218.us222, %cond.true45.us243 ], [ %incdec.ptr218.us222, %cond.true57.us242 ], [ %incdec.ptr218.us222, %sw.default.us238 ], [ %p.addr.1.us228, %while.cond6.us227 ]
  %found_zero.0.be.us251 = phi i32 [ %found_zero.0215.us225, %sw.bb162.us245 ], [ 1, %sw.bb4.us234 ], [ 0, %sw.bb1.us235 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %while.body.us221 ], [ %found_zero.0215.us225, %cond.true89.us241 ], [ %found_zero.0215.us225, %cond.true35.us244 ], [ %found_zero.0215.us225, %cond.true45.us243 ], [ %found_zero.0215.us225, %cond.true57.us242 ], [ %found_zero.0215.us225, %sw.default.us238 ], [ %found_zero.0215.us225, %while.cond6.us227 ]
  %reg_allowed.0.be.us252 = phi i32 [ 1, %sw.bb162.us245 ], [ %reg_allowed.0216.us224, %sw.bb4.us234 ], [ 0, %sw.bb1.us235 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %while.body.us221 ], [ %reg_allowed.0216.us224, %cond.true89.us241 ], [ %reg_allowed.0216.us224, %cond.true35.us244 ], [ %reg_allowed.0216.us224, %cond.true45.us243 ], [ %reg_allowed.0216.us224, %cond.true57.us242 ], [ %reg_allowed.0216.us224, %sw.default.us238 ], [ %reg_allowed.0216.us224, %while.cond6.us227 ]
  %num_matching_alts.0.be.us253 = phi i32 [ %num_matching_alts.0217.us223, %sw.bb162.us245 ], [ %num_matching_alts.0217.us223, %sw.bb4.us234 ], [ %num_matching_alts.0.inc.us237, %sw.bb1.us235 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %while.body.us221 ], [ %num_matching_alts.0217.us223, %cond.true89.us241 ], [ %num_matching_alts.0217.us223, %cond.true35.us244 ], [ %num_matching_alts.0217.us223, %cond.true45.us243 ], [ %num_matching_alts.0217.us223, %cond.true57.us242 ], [ %num_matching_alts.0217.us223, %sw.default.us238 ], [ %num_matching_alts.0217.us223, %while.cond6.us227 ]
  %incdec.ptr.us254 = getelementptr inbounds i8* %p.addr.0.be.us250, i64 1
  %22 = load i8* %p.addr.0.be.us250, align 1, !tbaa !11
  %tobool.us255 = icmp eq i8 %22, 0
  br i1 %tobool.us255, label %while.end163, label %while.body.us221

while.body:                                       ; preds = %while.body.lr.ph.while.body.lr.ph.split_crit_edge, %while.cond.backedge
  %23 = phi i8 [ %28, %while.cond.backedge ], [ %0, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %incdec.ptr218 = phi i8* [ %incdec.ptr, %while.cond.backedge ], [ %incdec.ptr213, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %num_matching_alts.0217 = phi i32 [ %num_matching_alts.0.be, %while.cond.backedge ], [ 0, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %reg_allowed.0216 = phi i32 [ %reg_allowed.0.be, %while.cond.backedge ], [ 0, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %found_zero.0215 = phi i32 [ %found_zero.0.be, %while.cond.backedge ], [ 0, %while.body.lr.ph.while.body.lr.ph.split_crit_edge ]
  %conv = sext i8 %23 to i32
  switch i32 %conv, label %sw.default [
    i32 61, label %while.cond.backedge
    i32 43, label %while.cond.backedge
    i32 63, label %while.cond.backedge
    i32 35, label %while.cond.backedge
    i32 38, label %while.cond.backedge
    i32 33, label %while.cond.backedge
    i32 42, label %while.cond.backedge
    i32 37, label %while.cond.backedge
    i32 109, label %while.cond.backedge
    i32 60, label %while.cond.backedge
    i32 62, label %while.cond.backedge
    i32 86, label %while.cond.backedge
    i32 111, label %while.cond.backedge
    i32 69, label %while.cond.backedge
    i32 70, label %while.cond.backedge
    i32 71, label %while.cond.backedge
    i32 72, label %while.cond.backedge
    i32 115, label %while.cond.backedge
    i32 105, label %while.cond.backedge
    i32 110, label %while.cond.backedge
    i32 73, label %while.cond.backedge
    i32 74, label %while.cond.backedge
    i32 75, label %while.cond.backedge
    i32 76, label %while.cond.backedge
    i32 77, label %while.cond.backedge
    i32 78, label %while.cond.backedge
    i32 79, label %while.cond.backedge
    i32 80, label %while.cond.backedge
    i32 88, label %while.cond.backedge
    i32 44, label %sw.bb1
    i32 48, label %sw.bb4
    i32 49, label %while.cond6
    i32 50, label %while.cond6
    i32 51, label %while.cond6
    i32 52, label %while.cond6
    i32 53, label %while.cond6
    i32 54, label %while.cond6
    i32 55, label %while.cond6
    i32 56, label %while.cond6
    i32 57, label %while.cond6
    i32 112, label %sw.bb162
    i32 103, label %sw.bb162
    i32 114, label %sw.bb162
  ]

sw.bb1:                                           ; preds = %while.body
  %24 = xor i32 %found_zero.0215, 1
  %25 = or i32 %24, %reg_allowed.0216
  %inc = xor i32 %25, 1
  %num_matching_alts.0.inc = add nsw i32 %inc, %num_matching_alts.0217
  br label %while.cond.backedge

sw.bb4:                                           ; preds = %while.body
  br label %while.cond.backedge

while.cond6:                                      ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.cond6
  %p.addr.1 = phi i8* [ %incdec.ptr12, %while.cond6 ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ]
  %26 = load i8* %p.addr.1, align 1, !tbaa !11
  %idxprom = zext i8 %26 to i64
  %arrayidx = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom
  %27 = load i16* %arrayidx, align 2, !tbaa !42
  %and9 = and i16 %27, 4
  %tobool10 = icmp eq i16 %and9, 0
  %incdec.ptr12 = getelementptr inbounds i8* %p.addr.1, i64 1
  br i1 %tobool10, label %while.cond.backedge, label %while.cond6

sw.default:                                       ; preds = %while.body
  switch i8 %23, label %while.cond.backedge [
    i8 114, label %sw.bb162
    i8 82, label %sw.bb162
    i8 113, label %sw.bb162
    i8 81, label %sw.bb162
    i8 102, label %cond.true35
    i8 116, label %cond.true45
    i8 117, label %cond.true57
    i8 97, label %sw.bb162
    i8 98, label %sw.bb162
    i8 99, label %sw.bb162
    i8 100, label %sw.bb162
    i8 120, label %cond.true89
    i8 89, label %sw.bb162
    i8 121, label %sw.bb162
    i8 65, label %sw.bb162
    i8 68, label %sw.bb162
    i8 83, label %sw.bb162
  ]

cond.true35:                                      ; preds = %sw.default
  br i1 %3, label %while.cond.backedge, label %sw.bb162

cond.true45:                                      ; preds = %sw.default
  br i1 %3, label %while.cond.backedge, label %sw.bb162

cond.true57:                                      ; preds = %sw.default
  br i1 %3, label %while.cond.backedge, label %sw.bb162

cond.true89:                                      ; preds = %sw.default
  br i1 %cmp91, label %while.cond.backedge, label %sw.bb162

while.cond.backedge:                              ; preds = %while.cond6, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %sw.bb162, %sw.bb4, %sw.bb1, %sw.default, %cond.true89, %cond.true57, %cond.true45, %cond.true35
  %p.addr.0.be = phi i8* [ %incdec.ptr218, %sw.bb162 ], [ %incdec.ptr218, %sw.bb4 ], [ %incdec.ptr218, %sw.bb1 ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %while.body ], [ %incdec.ptr218, %cond.true89 ], [ %incdec.ptr218, %cond.true35 ], [ %incdec.ptr218, %cond.true45 ], [ %incdec.ptr218, %cond.true57 ], [ %incdec.ptr218, %sw.default ], [ %p.addr.1, %while.cond6 ]
  %found_zero.0.be = phi i32 [ %found_zero.0215, %sw.bb162 ], [ 1, %sw.bb4 ], [ 0, %sw.bb1 ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %while.body ], [ %found_zero.0215, %cond.true89 ], [ %found_zero.0215, %cond.true35 ], [ %found_zero.0215, %cond.true45 ], [ %found_zero.0215, %cond.true57 ], [ %found_zero.0215, %sw.default ], [ %found_zero.0215, %while.cond6 ]
  %reg_allowed.0.be = phi i32 [ 1, %sw.bb162 ], [ %reg_allowed.0216, %sw.bb4 ], [ 0, %sw.bb1 ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %while.body ], [ %reg_allowed.0216, %cond.true89 ], [ %reg_allowed.0216, %cond.true35 ], [ %reg_allowed.0216, %cond.true45 ], [ %reg_allowed.0216, %cond.true57 ], [ %reg_allowed.0216, %sw.default ], [ %reg_allowed.0216, %while.cond6 ]
  %num_matching_alts.0.be = phi i32 [ %num_matching_alts.0217, %sw.bb162 ], [ %num_matching_alts.0217, %sw.bb4 ], [ %num_matching_alts.0.inc, %sw.bb1 ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %while.body ], [ %num_matching_alts.0217, %cond.true89 ], [ %num_matching_alts.0217, %cond.true35 ], [ %num_matching_alts.0217, %cond.true45 ], [ %num_matching_alts.0217, %cond.true57 ], [ %num_matching_alts.0217, %sw.default ], [ %num_matching_alts.0217, %while.cond6 ]
  %incdec.ptr = getelementptr inbounds i8* %p.addr.0.be, i64 1
  %28 = load i8* %p.addr.0.be, align 1, !tbaa !11
  %tobool = icmp eq i8 %28, 0
  br i1 %tobool, label %while.end163, label %while.body

sw.bb162:                                         ; preds = %sw.default, %sw.default, %sw.default, %cond.true35, %cond.true45, %cond.true57, %cond.true89, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %while.body, %while.body, %while.body
  br label %while.cond.backedge

while.end163:                                     ; preds = %while.cond.backedge, %while.cond.backedge.us249, %while.cond.backedge.us, %while.cond.backedge.us.us, %entry
  %num_matching_alts.0.lcssa = phi i32 [ 0, %entry ], [ %num_matching_alts.0.be.us.us, %while.cond.backedge.us.us ], [ %num_matching_alts.0.be.us, %while.cond.backedge.us ], [ %num_matching_alts.0.be.us253, %while.cond.backedge.us249 ], [ %num_matching_alts.0.be, %while.cond.backedge ]
  %reg_allowed.0.lcssa = phi i32 [ 0, %entry ], [ %reg_allowed.0.be.us.us, %while.cond.backedge.us.us ], [ %reg_allowed.0.be.us, %while.cond.backedge.us ], [ %reg_allowed.0.be.us252, %while.cond.backedge.us249 ], [ %reg_allowed.0.be, %while.cond.backedge ]
  %found_zero.0.lcssa = phi i32 [ 0, %entry ], [ %found_zero.0.be.us.us, %while.cond.backedge.us.us ], [ %found_zero.0.be.us, %while.cond.backedge.us ], [ %found_zero.0.be.us251, %while.cond.backedge.us249 ], [ %found_zero.0.be, %while.cond.backedge ]
  %29 = xor i32 %found_zero.0.lcssa, 1
  %30 = or i32 %29, %reg_allowed.0.lcssa
  %inc168 = xor i32 %30, 1
  %num_matching_alts.0.inc168 = add nsw i32 %inc168, %num_matching_alts.0.lcssa
  ret i32 %num_matching_alts.0.inc168
}

declare %struct.rtx_def* @get_hard_reg_initial_reg(%struct.function*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @combine_regs(%struct.rtx_def* %usedreg, %struct.rtx_def* %setreg, i32 %may_save_copy, i32 %insn_number, %struct.rtx_def* %insn, i32 %already_dead) #0 {
entry:
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %entry
  %may_save_copy.addr.0.ph = phi i32 [ %may_save_copy, %entry ], [ %.may_save_copy.addr.0, %while.cond.outer.backedge ]
  %offset.0.ph = phi i32 [ 0, %entry ], [ %offset.0.ph.be, %while.cond.outer.backedge ]
  %usedreg.addr.0.ph = phi %struct.rtx_def* [ %usedreg, %entry ], [ %1, %while.cond.outer.backedge ]
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %usedreg.addr.0.ph, i64 0, i32 0
  %bf.load.pre = load i32* %.phi.trans.insert, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer, %while.body
  %bf.load = phi i32 [ %bf.load1, %while.body ], [ %bf.load.pre, %while.cond.outer ]
  %usedreg.addr.0 = phi %struct.rtx_def* [ %1, %while.body ], [ %usedreg.addr.0.ph, %while.cond.outer ]
  %0 = getelementptr inbounds %struct.rtx_def* %usedreg.addr.0, i64 0, i32 0
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 63, label %while.body
    i32 61, label %if.end41
  ]

while.body:                                       ; preds = %while.cond
  %fld = getelementptr inbounds %struct.rtx_def* %usedreg.addr.0, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1 = load i32* %2, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %if.then, label %while.cond

if.then:                                          ; preds = %while.body
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear5 = and i32 %bf.lshr, 255
  %idxprom830 = zext i32 %bf.clear5 to i64
  %arrayidx6 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom830
  %3 = load i8* %arrayidx6, align 1, !tbaa !11
  %conv = zext i8 %3 to i32
  %4 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %4, 23
  %5 = and i32 %and, 4
  %6 = add i32 %5, 4
  %cmp7 = icmp ugt i32 %conv, %6
  %.may_save_copy.addr.0 = select i1 %cmp7, i32 0, i32 %may_save_copy.addr.0.ph
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %7 = load i32* %rtuint, align 4, !tbaa !1
  %cmp12 = icmp ult i32 %7, 53
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %usedreg.addr.0, i64 0, i32 1, i64 1
  %rtuint23 = bitcast %union.rtunion_def* %arrayidx22 to i32*
  %8 = load i32* %rtuint23, align 4, !tbaa !1
  br i1 %cmp12, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.then
  %bf.lshr25 = lshr i32 %bf.load, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  %call = tail call i32 @subreg_regno_offset(i32 %7, i32 %bf.clear5, i32 %8, i32 %bf.clear26) #2
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.then14, %if.else
  %call.pn = phi i32 [ %call, %if.then14 ], [ %div, %if.else ]
  %offset.0.ph.be = add i32 %call.pn, %offset.0.ph
  br label %while.cond.outer

if.else:                                          ; preds = %if.then
  %div = udiv i32 %8, %6
  br label %while.cond.outer.backedge

if.end41:                                         ; preds = %while.cond
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %usedreg.addr.0, i64 0, i32 1, i64 0
  %rtuint44 = bitcast %union.rtunion_def* %arrayidx43 to i32*
  %9 = load i32* %rtuint44, align 4, !tbaa !1
  %cmp45 = icmp slt i32 %9, 53
  br i1 %cmp45, label %if.then47, label %if.else123

if.then47:                                        ; preds = %if.end41
  %10 = and i32 %9, -8
  %11 = icmp eq i32 %10, 8
  %.off824 = add i32 %9, -21
  %12 = icmp ult i32 %.off824, 8
  %or.cond = or i1 %11, %12
  %.off825 = add i32 %9, -45
  %13 = icmp ult i32 %.off825, 8
  %or.cond833 = or i1 %or.cond, %13
  %.off826 = add i32 %9, -29
  %14 = icmp ult i32 %.off826, 8
  %or.cond835 = or i1 %or.cond833, %14
  %bf.lshr70 = lshr i32 %bf.load, 16
  %bf.clear71 = and i32 %bf.lshr70, 255
  br i1 %or.cond835, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then47
  %idxprom72828 = zext i32 %bf.clear71 to i64
  %arrayidx73 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom72828
  %15 = load i32* %arrayidx73, align 4, !tbaa !11
  %cmp74 = icmp eq i32 %15, 5
  br i1 %cmp74, label %while.cond140.preheader, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp81 = icmp eq i32 %15, 6
  %phitmp829 = select i1 %cmp81, i32 2, i32 1
  br label %while.cond140.preheader

cond.false:                                       ; preds = %if.then47
  switch i32 %bf.clear71, label %cond.false103 [
    i32 18, label %cond.true89
    i32 24, label %cond.true99
  ]

cond.true89:                                      ; preds = %cond.false
  %16 = load i32* @target_flags, align 4, !tbaa !1
  %and90 = lshr i32 %16, 25
  %17 = and i32 %and90, 1
  %18 = xor i32 %17, 3
  br label %while.cond140.preheader

cond.true99:                                      ; preds = %cond.false
  %19 = load i32* @target_flags, align 4, !tbaa !1
  %and100 = lshr i32 %19, 24
  %20 = and i32 %and100, 2
  %21 = xor i32 %20, 6
  br label %while.cond140.preheader

cond.false103:                                    ; preds = %cond.false
  %idxprom107827 = zext i32 %bf.clear71 to i64
  %arrayidx108 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom107827
  %22 = load i8* %arrayidx108, align 1, !tbaa !11
  %conv109 = zext i8 %22 to i32
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and110 = lshr i32 %23, 23
  %24 = and i32 %and110, 4
  %25 = add i32 %24, 4
  %add113 = add i32 %conv109, -1
  %sub = add i32 %add113, %25
  %div117 = sdiv i32 %sub, %25
  br label %while.cond140.preheader

if.else123:                                       ; preds = %if.end41
  %bf.lshr125 = lshr i32 %bf.load, 16
  %bf.clear126 = and i32 %bf.lshr125, 255
  %idxprom127812 = zext i32 %bf.clear126 to i64
  %arrayidx128 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom127812
  %26 = load i8* %arrayidx128, align 1, !tbaa !11
  %conv129 = zext i8 %26 to i32
  %27 = load i32* @target_flags, align 4, !tbaa !1
  %and130 = lshr i32 %27, 23
  %28 = and i32 %and130, 4
  %29 = add i32 %28, 4
  %sub133813 = or i32 %28, 3
  %add134 = add nsw i32 %sub133813, %conv129
  %div138 = sdiv i32 %add134, %29
  br label %while.cond140.preheader

while.cond140.preheader:                          ; preds = %if.else123, %cond.true, %lor.rhs, %cond.true89, %cond.false103, %cond.true99
  %usize.0.ph = phi i32 [ %21, %cond.true99 ], [ %div117, %cond.false103 ], [ %18, %cond.true89 ], [ %phitmp829, %lor.rhs ], [ 2, %cond.true ], [ %div138, %if.else123 ]
  br label %while.cond140.outer

while.cond140.outer:                              ; preds = %while.cond140.outer.backedge, %while.cond140.preheader
  %may_save_copy.addr.3.ph = phi i32 [ %may_save_copy.addr.0.ph, %while.cond140.preheader ], [ %.may_save_copy.addr.3, %while.cond140.outer.backedge ]
  %offset.2.ph = phi i32 [ %offset.0.ph, %while.cond140.preheader ], [ %offset.2.ph.be, %while.cond140.outer.backedge ]
  %setreg.addr.0.ph = phi %struct.rtx_def* [ %setreg, %while.cond140.preheader ], [ %31, %while.cond140.outer.backedge ]
  %.phi.trans.insert892 = getelementptr inbounds %struct.rtx_def* %setreg.addr.0.ph, i64 0, i32 0
  %bf.load141.pre = load i32* %.phi.trans.insert892, align 8
  br label %while.cond140

while.cond140:                                    ; preds = %while.cond140.outer, %while.body145
  %bf.load141 = phi i32 [ %bf.load150, %while.body145 ], [ %bf.load141.pre, %while.cond140.outer ]
  %setreg.addr.0 = phi %struct.rtx_def* [ %31, %while.body145 ], [ %setreg.addr.0.ph, %while.cond140.outer ]
  %30 = getelementptr inbounds %struct.rtx_def* %setreg.addr.0, i64 0, i32 0
  %bf.clear142 = and i32 %bf.load141, 65535
  switch i32 %bf.clear142, label %return [
    i32 63, label %while.body145
    i32 61, label %if.end205
  ]

while.body145:                                    ; preds = %while.cond140
  %fld147 = getelementptr inbounds %struct.rtx_def* %setreg.addr.0, i64 0, i32 1
  %rtx149 = bitcast [1 x %union.rtunion_def]* %fld147 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx149, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load150 = load i32* %32, align 8
  %bf.clear151 = and i32 %bf.load150, 65535
  %cmp152 = icmp eq i32 %bf.clear151, 61
  br i1 %cmp152, label %if.then154, label %while.cond140

if.then154:                                       ; preds = %while.body145
  %bf.lshr156 = lshr i32 %bf.load150, 16
  %bf.clear157 = and i32 %bf.lshr156, 255
  %idxprom158822 = zext i32 %bf.clear157 to i64
  %arrayidx159 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom158822
  %33 = load i8* %arrayidx159, align 1, !tbaa !11
  %conv160 = zext i8 %33 to i32
  %34 = load i32* @target_flags, align 4, !tbaa !1
  %and161 = lshr i32 %34, 23
  %35 = and i32 %and161, 4
  %36 = add i32 %35, 4
  %cmp164 = icmp ugt i32 %conv160, %36
  %.may_save_copy.addr.3 = select i1 %cmp164, i32 0, i32 %may_save_copy.addr.3.ph
  %arrayidx169 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0
  %rtuint170 = bitcast %union.rtunion_def* %arrayidx169 to i32*
  %37 = load i32* %rtuint170, align 4, !tbaa !1
  %cmp171 = icmp ult i32 %37, 53
  %arrayidx181 = getelementptr inbounds %struct.rtx_def* %setreg.addr.0, i64 0, i32 1, i64 1
  %rtuint182 = bitcast %union.rtunion_def* %arrayidx181 to i32*
  %38 = load i32* %rtuint182, align 4, !tbaa !1
  br i1 %cmp171, label %if.then173, label %if.else188

if.then173:                                       ; preds = %if.then154
  %bf.lshr184 = lshr i32 %bf.load141, 16
  %bf.clear185 = and i32 %bf.lshr184, 255
  %call186 = tail call i32 @subreg_regno_offset(i32 %37, i32 %bf.clear157, i32 %38, i32 %bf.clear185) #2
  br label %while.cond140.outer.backedge

while.cond140.outer.backedge:                     ; preds = %if.then173, %if.else188
  %call186.pn = phi i32 [ %call186, %if.then173 ], [ %div195, %if.else188 ]
  %offset.2.ph.be = sub i32 %offset.2.ph, %call186.pn
  br label %while.cond140.outer

if.else188:                                       ; preds = %if.then154
  %div195 = udiv i32 %38, %36
  br label %while.cond140.outer.backedge

if.end205:                                        ; preds = %while.cond140
  %arrayidx207 = getelementptr inbounds %struct.rtx_def* %setreg.addr.0, i64 0, i32 1, i64 0
  %rtuint208 = bitcast %union.rtunion_def* %arrayidx207 to i32*
  %39 = load i32* %rtuint208, align 4, !tbaa !1
  %cmp209 = icmp slt i32 %39, 53
  br i1 %cmp209, label %if.then211, label %if.else295

if.then211:                                       ; preds = %if.end205
  %40 = and i32 %39, -8
  %41 = icmp eq i32 %40, 8
  %.off = add i32 %39, -21
  %42 = icmp ult i32 %.off, 8
  %or.cond837 = or i1 %41, %42
  %.off818 = add i32 %39, -45
  %43 = icmp ult i32 %.off818, 8
  %or.cond839 = or i1 %or.cond837, %43
  %.off819 = add i32 %39, -29
  %44 = icmp ult i32 %.off819, 8
  %or.cond841 = or i1 %or.cond839, %44
  %bf.lshr237 = lshr i32 %bf.load141, 16
  %bf.clear238 = and i32 %bf.lshr237, 255
  br i1 %or.cond841, label %cond.true235, label %cond.false253

cond.true235:                                     ; preds = %if.then211
  %idxprom239821 = zext i32 %bf.clear238 to i64
  %arrayidx240 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom239821
  %45 = load i32* %arrayidx240, align 4, !tbaa !11
  %cmp241 = icmp eq i32 %45, 5
  br i1 %cmp241, label %if.end311, label %lor.rhs243

lor.rhs243:                                       ; preds = %cond.true235
  %cmp249 = icmp eq i32 %45, 6
  %phitmp = select i1 %cmp249, i32 2, i32 1
  br label %if.end311

cond.false253:                                    ; preds = %if.then211
  switch i32 %bf.clear238, label %cond.false273 [
    i32 18, label %cond.true259
    i32 24, label %cond.true269
  ]

cond.true259:                                     ; preds = %cond.false253
  %46 = load i32* @target_flags, align 4, !tbaa !1
  %and260 = lshr i32 %46, 25
  %47 = and i32 %and260, 1
  %48 = xor i32 %47, 3
  br label %if.end311

cond.true269:                                     ; preds = %cond.false253
  %49 = load i32* @target_flags, align 4, !tbaa !1
  %and270 = lshr i32 %49, 24
  %50 = and i32 %and270, 2
  %51 = xor i32 %50, 6
  br label %if.end311

cond.false273:                                    ; preds = %cond.false253
  %idxprom277820 = zext i32 %bf.clear238 to i64
  %arrayidx278 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom277820
  %52 = load i8* %arrayidx278, align 1, !tbaa !11
  %conv279 = zext i8 %52 to i32
  %53 = load i32* @target_flags, align 4, !tbaa !1
  %and280 = lshr i32 %53, 23
  %54 = and i32 %and280, 4
  %55 = add i32 %54, 4
  %add283 = add i32 %conv279, -1
  %sub284 = add i32 %add283, %55
  %div288 = sdiv i32 %sub284, %55
  br label %if.end311

if.else295:                                       ; preds = %if.end205
  %bf.lshr297 = lshr i32 %bf.load141, 16
  %bf.clear298 = and i32 %bf.lshr297, 255
  %idxprom299814 = zext i32 %bf.clear298 to i64
  %arrayidx300 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom299814
  %56 = load i8* %arrayidx300, align 1, !tbaa !11
  %conv301 = zext i8 %56 to i32
  %57 = load i32* @target_flags, align 4, !tbaa !1
  %and302 = lshr i32 %57, 23
  %58 = and i32 %and302, 4
  %59 = add i32 %58, 4
  %sub305815 = or i32 %58, 3
  %add306 = add nsw i32 %sub305815, %conv301
  %div310 = sdiv i32 %add306, %59
  br label %if.end311

if.end311:                                        ; preds = %cond.true269, %cond.false273, %cond.true259, %lor.rhs243, %cond.true235, %if.else295
  %ssize.0 = phi i32 [ %div310, %if.else295 ], [ %48, %cond.true259 ], [ %51, %cond.true269 ], [ %div288, %cond.false273 ], [ 2, %cond.true235 ], [ %phitmp, %lor.rhs243 ]
  %cmp312 = icmp sgt i32 %9, 52
  br i1 %cmp312, label %land.lhs.true314, label %lor.lhs.false319

land.lhs.true314:                                 ; preds = %if.end311
  %idxprom315 = sext i32 %9 to i64
  %60 = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx316 = getelementptr inbounds i32* %60, i64 %idxprom315
  %61 = load i32* %arrayidx316, align 4, !tbaa !1
  %cmp317 = icmp slt i32 %61, 0
  br i1 %cmp317, label %return, label %lor.lhs.false319

lor.lhs.false319:                                 ; preds = %land.lhs.true314, %if.end311
  %cmp320 = icmp sgt i32 %offset.2.ph, 0
  %add323 = add nsw i32 %usize.0.ph, %offset.2.ph
  %cmp324 = icmp sgt i32 %add323, %ssize.0
  %or.cond842 = and i1 %cmp320, %cmp324
  br i1 %or.cond842, label %return, label %lor.lhs.false326

lor.lhs.false326:                                 ; preds = %lor.lhs.false319
  %cmp327 = icmp slt i32 %offset.2.ph, 0
  %cmp331 = icmp slt i32 %add323, %ssize.0
  %or.cond843 = and i1 %cmp327, %cmp331
  br i1 %or.cond843, label %return, label %lor.lhs.false333

lor.lhs.false333:                                 ; preds = %lor.lhs.false326
  %cmp334 = icmp sgt i32 %ssize.0, %usize.0.ph
  %or.cond669 = and i1 %cmp334, %cmp312
  br i1 %or.cond669, label %land.lhs.true339, label %lor.lhs.false346

land.lhs.true339:                                 ; preds = %lor.lhs.false333
  %idxprom340 = sext i32 %9 to i64
  %62 = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx341 = getelementptr inbounds i32* %62, i64 %idxprom340
  %63 = load i32* %arrayidx341, align 4, !tbaa !1
  %idxprom342 = sext i32 %63 to i64
  %64 = load %struct.qty** @qty, align 8, !tbaa !5
  %size = getelementptr inbounds %struct.qty* %64, i64 %idxprom342, i32 4
  %65 = load i32* %size, align 4, !tbaa !52
  %cmp344 = icmp slt i32 %usize.0.ph, %65
  br i1 %cmp344, label %return, label %lor.lhs.false346

lor.lhs.false346:                                 ; preds = %land.lhs.true339, %lor.lhs.false333
  %cmp347 = icmp sgt i32 %39, 52
  br i1 %cmp347, label %land.lhs.true349, label %lor.lhs.false354

land.lhs.true349:                                 ; preds = %lor.lhs.false346
  %idxprom350 = sext i32 %39 to i64
  %66 = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx351 = getelementptr inbounds i32* %66, i64 %idxprom350
  %67 = load i32* %arrayidx351, align 4, !tbaa !1
  %cmp352 = icmp eq i32 %67, -1
  br i1 %cmp352, label %return, label %lor.lhs.false354

lor.lhs.false354:                                 ; preds = %land.lhs.true349, %lor.lhs.false346
  br i1 %cmp312, label %land.lhs.true357, label %lor.lhs.false360

land.lhs.true357:                                 ; preds = %lor.lhs.false354
  %call358 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 9, %struct.rtx_def* %usedreg.addr.0) #2
  %tobool359 = icmp ne %struct.rtx_def* %call358, null
  %cmp361 = icmp eq i32 %9, %39
  %or.cond844 = or i1 %tobool359, %cmp361
  %or.cond670 = and i1 %cmp45, %cmp209
  %or.cond845 = or i1 %or.cond844, %or.cond670
  br i1 %or.cond845, label %return, label %land.lhs.true357.lor.lhs.false369_crit_edge

land.lhs.true357.lor.lhs.false369_crit_edge:      ; preds = %land.lhs.true357
  %bf.load373.pre = load i32* %30, align 8
  br label %lor.lhs.false369

lor.lhs.false360:                                 ; preds = %lor.lhs.false354
  %cmp361.old = icmp eq i32 %9, %39
  %or.cond670.old = and i1 %cmp45, %cmp209
  %or.cond846 = or i1 %cmp361.old, %or.cond670.old
  br i1 %or.cond846, label %return, label %lor.lhs.false369

lor.lhs.false369:                                 ; preds = %land.lhs.true357.lor.lhs.false369_crit_edge, %lor.lhs.false360
  %bf.load437 = phi i32 [ %bf.load373.pre, %land.lhs.true357.lor.lhs.false369_crit_edge ], [ %bf.load141, %lor.lhs.false360 ]
  %bf.load370 = load i32* %0, align 8
  %bf.lshr371 = lshr i32 %bf.load370, 16
  %bf.clear372 = and i32 %bf.lshr371, 255
  %bf.lshr374 = lshr i32 %bf.load437, 16
  %bf.clear375 = and i32 %bf.lshr374, 255
  %cmp376 = icmp eq i32 %bf.clear372, %bf.clear375
  br i1 %cmp376, label %if.end446, label %lor.lhs.false378

lor.lhs.false378:                                 ; preds = %lor.lhs.false369
  switch i32 %bf.clear372, label %lor.lhs.false402 [
    i32 3, label %land.lhs.true411
    i32 4, label %land.lhs.true411
    i32 2, label %land.lhs.true396
  ]

land.lhs.true396:                                 ; preds = %lor.lhs.false378
  %68 = load i32* @target_flags, align 4, !tbaa !1
  %and397 = and i32 %68, 33554432
  %tobool398 = icmp eq i32 %and397, 0
  br i1 %tobool398, label %lor.lhs.false399, label %land.lhs.true411

lor.lhs.false399:                                 ; preds = %land.lhs.true396
  %69 = load i32* @x86_partial_reg_stall, align 4, !tbaa !1
  %70 = load i32* @ix86_cpu, align 4, !tbaa !11
  %shl = shl i32 1, %70
  %and400 = and i32 %shl, %69
  %tobool401 = icmp eq i32 %and400, 0
  br i1 %tobool401, label %land.lhs.true411, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %lor.lhs.false378, %lor.lhs.false399
  %bf.clear405 = and i32 %bf.load370, 16711680
  %cmp406 = icmp eq i32 %bf.clear405, 327680
  br i1 %cmp406, label %land.lhs.true408, label %return

land.lhs.true408:                                 ; preds = %lor.lhs.false402
  %71 = load i32* @target_flags, align 4, !tbaa !1
  %and409 = and i32 %71, 33554432
  %tobool410 = icmp eq i32 %and409, 0
  br i1 %tobool410, label %return, label %land.lhs.true411

land.lhs.true411:                                 ; preds = %lor.lhs.false378, %lor.lhs.false378, %lor.lhs.false399, %land.lhs.true396, %land.lhs.true408
  %bf.clear414.off = add i32 %bf.clear375, -3
  %switch = icmp ult i32 %bf.clear414.off, 2
  br i1 %switch, label %if.end446, label %lor.lhs.false423

lor.lhs.false423:                                 ; preds = %land.lhs.true411
  %bf.clear426 = and i32 %bf.load370, 16711680
  %cmp427 = icmp eq i32 %bf.clear426, 131072
  br i1 %cmp427, label %land.lhs.true429, label %lor.lhs.false436

land.lhs.true429:                                 ; preds = %lor.lhs.false423
  %72 = load i32* @target_flags, align 4, !tbaa !1
  %and430 = and i32 %72, 33554432
  %tobool431 = icmp eq i32 %and430, 0
  br i1 %tobool431, label %lor.lhs.false432, label %if.end446

lor.lhs.false432:                                 ; preds = %land.lhs.true429
  %73 = load i32* @x86_partial_reg_stall, align 4, !tbaa !1
  %74 = load i32* @ix86_cpu, align 4, !tbaa !11
  %shl433 = shl i32 1, %74
  %and434 = and i32 %shl433, %73
  %tobool435 = icmp eq i32 %and434, 0
  br i1 %tobool435, label %if.end446, label %lor.lhs.false436

lor.lhs.false436:                                 ; preds = %lor.lhs.false432, %lor.lhs.false423
  %bf.clear439 = and i32 %bf.load437, 16711680
  %cmp440 = icmp eq i32 %bf.clear439, 327680
  br i1 %cmp440, label %land.lhs.true442, label %return

land.lhs.true442:                                 ; preds = %lor.lhs.false436
  %75 = load i32* @target_flags, align 4, !tbaa !1
  %and443 = and i32 %75, 33554432
  %tobool444 = icmp eq i32 %and443, 0
  br i1 %tobool444, label %return, label %if.end446

if.end446:                                        ; preds = %land.lhs.true411, %lor.lhs.false432, %land.lhs.true429, %land.lhs.true442, %lor.lhs.false369
  br i1 %cmp45, label %if.then449, label %if.end506

if.then449:                                       ; preds = %if.end446
  %idxprom450 = sext i32 %39 to i64
  %76 = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx451 = getelementptr inbounds i32* %76, i64 %idxprom450
  %77 = load i32* %arrayidx451, align 4, !tbaa !1
  %cmp452 = icmp eq i32 %77, -2
  br i1 %cmp452, label %if.then454, label %if.end455

if.then454:                                       ; preds = %if.then449
  %mul = shl nsw i32 %insn_number, 1
  tail call fastcc void @reg_is_born(%struct.rtx_def* %setreg.addr.0, i32 %mul)
  %.pre = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx457.phi.trans.insert = getelementptr inbounds i32* %.pre, i64 %idxprom450
  %.pre895 = load i32* %arrayidx457.phi.trans.insert, align 4, !tbaa !1
  br label %if.end455

if.end455:                                        ; preds = %if.then454, %if.then449
  %78 = phi i32 [ %.pre895, %if.then454 ], [ %77, %if.then449 ]
  %cmp458 = icmp sgt i32 %78, -1
  br i1 %cmp458, label %if.then460, label %return

if.then460:                                       ; preds = %if.end455
  %tobool461 = icmp eq i32 %may_save_copy.addr.3.ph, 0
  %idxprom484.pre = sext i32 %78 to i64
  br i1 %tobool461, label %if.then460.if.else481_crit_edge, label %land.lhs.true462

if.then460.if.else481_crit_edge:                  ; preds = %if.then460
  %sh_prom486.pre = zext i32 %9 to i64
  %shl487.pre = shl i64 1, %sh_prom486.pre
  br label %if.else481

land.lhs.true462:                                 ; preds = %if.then460
  %79 = load i64** @qty_phys_copy_sugg, align 8, !tbaa !5
  %arrayidx466 = getelementptr inbounds i64* %79, i64 %idxprom484.pre
  %80 = load i64* %arrayidx466, align 8, !tbaa !37
  %sh_prom = zext i32 %9 to i64
  %shl467 = shl i64 1, %sh_prom
  %and468 = and i64 %80, %shl467
  %tobool469 = icmp eq i64 %and468, 0
  br i1 %tobool469, label %if.then470, label %if.else481

if.then470:                                       ; preds = %land.lhs.true462
  %or = or i64 %80, %shl467
  store i64 %or, i64* %arrayidx466, align 8, !tbaa !37
  %81 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %arrayidx480 = getelementptr inbounds i16* %81, i64 %idxprom484.pre
  %82 = load i16* %arrayidx480, align 2, !tbaa !42
  %inc = add i16 %82, 1
  store i16 %inc, i16* %arrayidx480, align 2, !tbaa !42
  br label %return

if.else481:                                       ; preds = %if.then460.if.else481_crit_edge, %land.lhs.true462
  %shl487.pre-phi = phi i64 [ %shl487.pre, %if.then460.if.else481_crit_edge ], [ %shl467, %land.lhs.true462 ]
  %83 = load i64** @qty_phys_sugg, align 8, !tbaa !5
  %arrayidx485 = getelementptr inbounds i64* %83, i64 %idxprom484.pre
  %84 = load i64* %arrayidx485, align 8, !tbaa !37
  %and488 = and i64 %84, %shl487.pre-phi
  %tobool489 = icmp eq i64 %and488, 0
  br i1 %tobool489, label %if.then490, label %return

if.then490:                                       ; preds = %if.else481
  %or497 = or i64 %84, %shl487.pre-phi
  store i64 %or497, i64* %arrayidx485, align 8, !tbaa !37
  %85 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %arrayidx501 = getelementptr inbounds i16* %85, i64 %idxprom484.pre
  %86 = load i16* %arrayidx501, align 2, !tbaa !42
  %inc502 = add i16 %86, 1
  store i16 %inc502, i16* %arrayidx501, align 2, !tbaa !42
  br label %return

if.end506:                                        ; preds = %if.end446
  br i1 %cmp209, label %if.then509, label %if.end557

if.then509:                                       ; preds = %if.end506
  %tobool510 = icmp eq i32 %may_save_copy.addr.3.ph, 0
  br i1 %tobool510, label %if.then509.if.else533_crit_edge, label %land.lhs.true511

if.then509.if.else533_crit_edge:                  ; preds = %if.then509
  %.pre896 = load i32** @reg_qty, align 8, !tbaa !5
  %idxprom534.pre = sext i32 %9 to i64
  %sh_prom538.pre = zext i32 %39 to i64
  %shl539.pre = shl i64 1, %sh_prom538.pre
  br label %if.else533

land.lhs.true511:                                 ; preds = %if.then509
  %idxprom512 = sext i32 %9 to i64
  %87 = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx513 = getelementptr inbounds i32* %87, i64 %idxprom512
  %88 = load i32* %arrayidx513, align 4, !tbaa !1
  %idxprom514 = sext i32 %88 to i64
  %89 = load i64** @qty_phys_copy_sugg, align 8, !tbaa !5
  %arrayidx515 = getelementptr inbounds i64* %89, i64 %idxprom514
  %90 = load i64* %arrayidx515, align 8, !tbaa !37
  %sh_prom516 = zext i32 %39 to i64
  %shl517 = shl i64 1, %sh_prom516
  %and518 = and i64 %90, %shl517
  %tobool519 = icmp eq i64 %and518, 0
  br i1 %tobool519, label %if.then520, label %if.else533

if.then520:                                       ; preds = %land.lhs.true511
  %or527 = or i64 %90, %shl517
  store i64 %or527, i64* %arrayidx515, align 8, !tbaa !37
  %91 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %arrayidx531 = getelementptr inbounds i16* %91, i64 %idxprom514
  %92 = load i16* %arrayidx531, align 2, !tbaa !42
  %inc532 = add i16 %92, 1
  store i16 %inc532, i16* %arrayidx531, align 2, !tbaa !42
  br label %return

if.else533:                                       ; preds = %if.then509.if.else533_crit_edge, %land.lhs.true511
  %shl539.pre-phi = phi i64 [ %shl539.pre, %if.then509.if.else533_crit_edge ], [ %shl517, %land.lhs.true511 ]
  %idxprom534.pre-phi = phi i64 [ %idxprom534.pre, %if.then509.if.else533_crit_edge ], [ %idxprom512, %land.lhs.true511 ]
  %93 = phi i32* [ %.pre896, %if.then509.if.else533_crit_edge ], [ %87, %land.lhs.true511 ]
  %arrayidx535 = getelementptr inbounds i32* %93, i64 %idxprom534.pre-phi
  %94 = load i32* %arrayidx535, align 4, !tbaa !1
  %idxprom536 = sext i32 %94 to i64
  %95 = load i64** @qty_phys_sugg, align 8, !tbaa !5
  %arrayidx537 = getelementptr inbounds i64* %95, i64 %idxprom536
  %96 = load i64* %arrayidx537, align 8, !tbaa !37
  %and540 = and i64 %96, %shl539.pre-phi
  %tobool541 = icmp eq i64 %and540, 0
  br i1 %tobool541, label %if.then542, label %return

if.then542:                                       ; preds = %if.else533
  %or549 = or i64 %96, %shl539.pre-phi
  store i64 %or549, i64* %arrayidx537, align 8, !tbaa !37
  %97 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %arrayidx553 = getelementptr inbounds i16* %97, i64 %idxprom536
  %98 = load i16* %arrayidx553, align 2, !tbaa !42
  %inc554 = add i16 %98, 1
  store i16 %inc554, i16* %arrayidx553, align 2, !tbaa !42
  br label %return

if.end557:                                        ; preds = %if.end506
  %idxprom558 = sext i32 %39 to i64
  %99 = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx559 = getelementptr inbounds i32* %99, i64 %idxprom558
  %100 = load i32* %arrayidx559, align 4, !tbaa !1
  %cmp560 = icmp sgt i32 %100, -2
  br i1 %cmp560, label %return, label %lor.lhs.false562

lor.lhs.false562:                                 ; preds = %if.end557
  %101 = load %struct.function** @cfun, align 8, !tbaa !5
  %has_nonlocal_label = getelementptr inbounds %struct.function* %101, i64 0, i32 56
  %102 = bitcast i24* %has_nonlocal_label to i32*
  %bf.load563 = load i32* %102, align 8
  %bf.clear565 = and i32 %bf.load563, 256
  %tobool566 = icmp eq i32 %bf.clear565, 0
  br i1 %tobool566, label %if.end582, label %land.lhs.true567

land.lhs.true567:                                 ; preds = %lor.lhs.false562
  %idxprom568 = sext i32 %9 to i64
  %103 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %103, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx569 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom568
  %104 = load %struct.reg_info_def** %arrayidx569, align 8, !tbaa !5
  %calls_crossed = getelementptr inbounds %struct.reg_info_def* %104, i64 0, i32 8
  %105 = load i32* %calls_crossed, align 4, !tbaa !32
  %cmp570 = icmp sgt i32 %105, 0
  %arrayidx575 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom558
  %106 = load %struct.reg_info_def** %arrayidx575, align 8, !tbaa !5
  %calls_crossed576 = getelementptr inbounds %struct.reg_info_def* %106, i64 0, i32 8
  %107 = load i32* %calls_crossed576, align 4, !tbaa !32
  %cmp577 = icmp sgt i32 %107, 0
  %cmp579 = xor i1 %cmp570, %cmp577
  br i1 %cmp579, label %return, label %if.end582

if.end582:                                        ; preds = %lor.lhs.false562, %land.lhs.true567
  %tobool583 = icmp eq i32 %already_dead, 0
  br i1 %tobool583, label %lor.lhs.false584, label %land.lhs.true587

lor.lhs.false584:                                 ; preds = %if.end582
  %call585 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %9) #2
  %tobool586 = icmp eq %struct.rtx_def* %call585, null
  br i1 %tobool586, label %return, label %lor.lhs.false584.land.lhs.true587_crit_edge

lor.lhs.false584.land.lhs.true587_crit_edge:      ; preds = %lor.lhs.false584
  %.pre897 = load i32** @reg_qty, align 8, !tbaa !5
  br label %land.lhs.true587

land.lhs.true587:                                 ; preds = %lor.lhs.false584.land.lhs.true587_crit_edge, %if.end582
  %108 = phi i32* [ %.pre897, %lor.lhs.false584.land.lhs.true587_crit_edge ], [ %99, %if.end582 ]
  %idxprom588 = sext i32 %9 to i64
  %arrayidx589 = getelementptr inbounds i32* %108, i64 %idxprom588
  %109 = load i32* %arrayidx589, align 4, !tbaa !1
  %idxprom590 = sext i32 %109 to i64
  %110 = load %struct.qty** @qty, align 8, !tbaa !5
  %min_class = getelementptr inbounds %struct.qty* %110, i64 %idxprom590, i32 7
  %111 = load i32* %min_class, align 4, !tbaa !44
  %call.i = tail call i32 @reg_preferred_class(i32 %39) #2
  %call1.i = tail call i32 @reg_class_subset_p(i32 %call.i, i32 %111) #2
  %tobool.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.i, label %lor.rhs.i, label %if.then594

lor.rhs.i:                                        ; preds = %land.lhs.true587
  %call2.i = tail call i32 @reg_class_subset_p(i32 %111, i32 %call.i) #2
  %tobool3.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.i, label %return, label %if.then594

if.then594:                                       ; preds = %lor.rhs.i, %land.lhs.true587
  %112 = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx596 = getelementptr inbounds i32* %112, i64 %idxprom588
  %113 = load i32* %arrayidx596, align 4, !tbaa !1
  %arrayidx598 = getelementptr inbounds i32* %112, i64 %idxprom558
  store i32 %113, i32* %arrayidx598, align 4, !tbaa !1
  %114 = load i8** @reg_offset, align 8, !tbaa !5
  %arrayidx600 = getelementptr inbounds i8* %114, i64 %idxprom588
  %115 = load i8* %arrayidx600, align 1, !tbaa !11
  %conv601816 = zext i8 %115 to i32
  %add602 = add nsw i32 %conv601816, %offset.2.ph
  %conv603 = trunc i32 %add602 to i8
  %arrayidx605 = getelementptr inbounds i8* %114, i64 %idxprom558
  store i8 %conv603, i8* %arrayidx605, align 1, !tbaa !11
  %idxprom606 = sext i32 %113 to i64
  %116 = load %struct.qty** @qty, align 8, !tbaa !5
  %first_reg = getelementptr inbounds %struct.qty* %116, i64 %idxprom606, i32 6
  %117 = load i32* %first_reg, align 4, !tbaa !54
  %118 = load i32** @reg_next_in_qty, align 8, !tbaa !5
  %arrayidx609 = getelementptr inbounds i32* %118, i64 %idxprom558
  store i32 %117, i32* %arrayidx609, align 4, !tbaa !1
  store i32 %39, i32* %first_reg, align 4, !tbaa !54
  %call.i847 = tail call i32 @reg_preferred_class(i32 %39) #2
  %119 = load %struct.qty** @qty, align 8, !tbaa !5
  %min_class.i = getelementptr inbounds %struct.qty* %119, i64 %idxprom606, i32 7
  %120 = load i32* %min_class.i, align 4, !tbaa !44
  %call1.i848 = tail call i32 @reg_class_subset_p(i32 %call.i847, i32 %120) #2
  %tobool.i849 = icmp eq i32 %call1.i848, 0
  br i1 %tobool.i849, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then594
  %121 = load %struct.qty** @qty, align 8, !tbaa !5
  %min_class4.i = getelementptr inbounds %struct.qty* %121, i64 %idxprom606, i32 7
  store i32 %call.i847, i32* %min_class4.i, align 4, !tbaa !44
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then594
  %call5.i = tail call i32 @reg_alternate_class(i32 %39) #2
  %122 = load %struct.qty** @qty, align 8, !tbaa !5
  %alternate_class.i = getelementptr inbounds %struct.qty* %122, i64 %idxprom606, i32 8
  %123 = load i32* %alternate_class.i, align 4, !tbaa !53
  %call8.i = tail call i32 @reg_class_subset_p(i32 %call5.i, i32 %123) #2
  %tobool9.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.i, label %if.end14.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.end.i
  %124 = load %struct.qty** @qty, align 8, !tbaa !5
  %alternate_class13.i = getelementptr inbounds %struct.qty* %124, i64 %idxprom606, i32 8
  store i32 %call5.i, i32* %alternate_class13.i, align 4, !tbaa !53
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then10.i, %if.end.i
  %125 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data.i = getelementptr inbounds %struct.varray_head_tag* %125, i64 0, i32 4
  %reg16.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.reg_info_def*]*
  %arrayidx17.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg16.i, i64 0, i64 %idxprom558
  %126 = load %struct.reg_info_def** %arrayidx17.i, align 8, !tbaa !5
  %changes_mode.i = getelementptr inbounds %struct.reg_info_def* %126, i64 0, i32 10
  %127 = load i8* %changes_mode.i, align 1, !tbaa !55
  %tobool18.i = icmp eq i8 %127, 0
  %.pre898 = load %struct.qty** @qty, align 8, !tbaa !5
  br i1 %tobool18.i, label %update_qty_class.exit, label %if.then19.i

if.then19.i:                                      ; preds = %if.end14.i
  %changes_mode22.i = getelementptr inbounds %struct.qty* %.pre898, i64 %idxprom606, i32 11
  store i8 1, i8* %changes_mode22.i, align 1, !tbaa !56
  br label %update_qty_class.exit

update_qty_class.exit:                            ; preds = %if.end14.i, %if.then19.i
  %calls_crossed617 = getelementptr inbounds %struct.reg_info_def* %126, i64 0, i32 8
  %128 = load i32* %calls_crossed617, align 4, !tbaa !32
  %n_calls_crossed = getelementptr inbounds %struct.qty* %.pre898, i64 %idxprom606, i32 5
  %129 = load i32* %n_calls_crossed, align 4, !tbaa !57
  %add620 = add nsw i32 %129, %128
  store i32 %add620, i32* %n_calls_crossed, align 4, !tbaa !57
  %refs = getelementptr inbounds %struct.reg_info_def* %126, i64 0, i32 4
  %130 = load i32* %refs, align 4, !tbaa !23
  %n_refs = getelementptr inbounds %struct.qty* %.pre898, i64 %idxprom606, i32 0
  %131 = load i32* %n_refs, align 4, !tbaa !50
  %add627 = add nsw i32 %131, %130
  store i32 %add627, i32* %n_refs, align 4, !tbaa !50
  %freq = getelementptr inbounds %struct.reg_info_def* %126, i64 0, i32 5
  %132 = load i32* %freq, align 4, !tbaa !31
  %freq634 = getelementptr inbounds %struct.qty* %.pre898, i64 %idxprom606, i32 1
  %133 = load i32* %freq634, align 4, !tbaa !51
  %add635 = add nsw i32 %133, %132
  store i32 %add635, i32* %freq634, align 4, !tbaa !51
  br i1 %cmp334, label %if.then638, label %return

if.then638:                                       ; preds = %update_qty_class.exit
  %first_reg641 = getelementptr inbounds %struct.qty* %.pre898, i64 %idxprom606, i32 6
  %i.0870 = load i32* %first_reg641, align 4
  %cmp642871 = icmp sgt i32 %i.0870, -1
  br i1 %cmp642871, label %for.body, label %for.end

for.body:                                         ; preds = %if.then638, %for.body
  %i.0872 = phi i32 [ %i.0, %for.body ], [ %i.0870, %if.then638 ]
  %idxprom644 = sext i32 %i.0872 to i64
  %134 = load i8** @reg_offset, align 8, !tbaa !5
  %arrayidx645 = getelementptr inbounds i8* %134, i64 %idxprom644
  %135 = load i8* %arrayidx645, align 1, !tbaa !11
  %conv646817 = zext i8 %135 to i32
  %sub647 = sub nsw i32 %conv646817, %offset.2.ph
  %conv648 = trunc i32 %sub647 to i8
  store i8 %conv648, i8* %arrayidx645, align 1, !tbaa !11
  %136 = load i32** @reg_next_in_qty, align 8, !tbaa !5
  %arrayidx650 = getelementptr inbounds i32* %136, i64 %idxprom644
  %i.0 = load i32* %arrayidx650, align 4
  %cmp642 = icmp sgt i32 %i.0, -1
  br i1 %cmp642, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.pre899 = load %struct.qty** @qty, align 8, !tbaa !5
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.then638
  %137 = phi %struct.qty* [ %.pre899, %for.cond.for.end_crit_edge ], [ %.pre898, %if.then638 ]
  %size653 = getelementptr inbounds %struct.qty* %137, i64 %idxprom606, i32 4
  store i32 %ssize.0, i32* %size653, align 4, !tbaa !52
  %bf.load654 = load i32* %30, align 8
  %bf.lshr655 = lshr i32 %bf.load654, 16
  %bf.clear656 = and i32 %bf.lshr655, 255
  %mode = getelementptr inbounds %struct.qty* %137, i64 %idxprom606, i32 9
  store i32 %bf.clear656, i32* %mode, align 4, !tbaa !46
  br label %return

return:                                           ; preds = %while.cond, %while.cond140, %lor.rhs.i, %for.end, %update_qty_class.exit, %lor.lhs.false584, %if.end557, %land.lhs.true567, %if.then520, %if.then542, %if.else533, %if.end455, %if.then490, %if.then470, %if.else481, %land.lhs.true314, %land.lhs.true339, %land.lhs.true349, %lor.lhs.false360, %lor.lhs.false402, %lor.lhs.false436, %land.lhs.true408, %land.lhs.true442, %lor.lhs.false319, %lor.lhs.false326, %land.lhs.true357
  %retval.0 = phi i32 [ 0, %land.lhs.true357 ], [ 0, %lor.lhs.false326 ], [ 0, %lor.lhs.false319 ], [ 0, %land.lhs.true442 ], [ 0, %land.lhs.true408 ], [ 0, %lor.lhs.false436 ], [ 0, %lor.lhs.false402 ], [ 0, %lor.lhs.false360 ], [ 0, %land.lhs.true349 ], [ 0, %land.lhs.true339 ], [ 0, %land.lhs.true314 ], [ 0, %if.else481 ], [ 0, %if.then470 ], [ 0, %if.then490 ], [ 0, %if.end455 ], [ 0, %if.else533 ], [ 0, %if.then542 ], [ 0, %if.then520 ], [ 0, %land.lhs.true567 ], [ 0, %if.end557 ], [ 0, %lor.rhs.i ], [ 0, %lor.lhs.false584 ], [ 1, %update_qty_class.exit ], [ 1, %for.end ], [ 0, %while.cond140 ], [ 0, %while.cond ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @no_conflict_p(%struct.rtx_def* %insn, %struct.rtx_def* %r1) #0 {
entry:
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 7, %struct.rtx_def* null) #2
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %r1, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end [
    i32 61, label %land.lhs.true
    i32 63, label %land.lhs.true7
  ]

land.lhs.true:                                    ; preds = %lor.lhs.false
  %arrayidx = getelementptr inbounds %struct.rtx_def* %r1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %cmp2 = icmp ult i32 %1, 53
  br i1 %cmp2, label %return, label %if.end

land.lhs.true7:                                   ; preds = %lor.lhs.false
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %r1, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load10 = load i32* %3, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 61
  br i1 %cmp12, label %land.lhs.true13, label %if.end

land.lhs.true13:                                  ; preds = %land.lhs.true7
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint19 = bitcast %union.rtunion_def* %arrayidx18 to i32*
  %4 = load i32* %rtuint19, align 4, !tbaa !1
  %cmp20 = icmp ult i32 %4, 53
  br i1 %cmp20, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false, %land.lhs.true, %land.lhs.true13, %land.lhs.true7
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx23, align 8, !tbaa !5
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %if.then33, %if.end
  %ok.0.ph = phi i32 [ 0, %if.end ], [ %ok.0., %if.then33 ]
  %insn.pn.ph = phi %struct.rtx_def* [ %insn, %if.end ], [ %p.0, %if.then33 ]
  br label %for.cond

for.cond:                                         ; preds = %for.cond.outer, %for.body
  %insn.pn = phi %struct.rtx_def* [ %p.0, %for.body ], [ %insn.pn.ph, %for.cond.outer ]
  %p.0.in.in = getelementptr inbounds %struct.rtx_def* %insn.pn, i64 0, i32 1, i64 2
  %p.0.in = bitcast %union.rtunion_def* %p.0.in.in to %struct.rtx_def**
  %p.0 = load %struct.rtx_def** %p.0.in, align 8
  %tobool = icmp eq %struct.rtx_def* %p.0, null
  %cmp27 = icmp eq %struct.rtx_def* %p.0, %5
  %or.cond = or i1 %tobool, %cmp27
  br i1 %or.cond, label %return, label %for.body

for.body:                                         ; preds = %for.cond
  %6 = getelementptr inbounds %struct.rtx_def* %p.0, i64 0, i32 0
  %bf.load28 = load i32* %6, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %idxprom1 = zext i32 %bf.clear29 to i64
  %arrayidx30 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom1
  %7 = load i8* %arrayidx30, align 1, !tbaa !11
  %cmp31 = icmp eq i8 %7, 105
  br i1 %cmp31, label %if.then33, label %for.cond

if.then33:                                        ; preds = %for.body
  %call34 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %p.0, i32 1, %struct.rtx_def* %r1) #2
  %tobool35 = icmp eq %struct.rtx_def* %call34, null
  %ok.0. = select i1 %tobool35, i32 %ok.0.ph, i32 1
  %call38 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %p.0, i32 9, %struct.rtx_def* %r1) #2
  %tobool39 = icmp eq %struct.rtx_def* %call38, null
  br i1 %tobool39, label %return, label %for.cond.outer

return:                                           ; preds = %if.then33, %for.cond, %entry, %land.lhs.true, %land.lhs.true13
  %retval.0 = phi i32 [ 0, %land.lhs.true13 ], [ 0, %land.lhs.true ], [ 0, %entry ], [ %ok.0.ph, %for.cond ], [ 0, %if.then33 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @wipe_dead_reg(%struct.rtx_def* %reg, i32 %output_p) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtuint, align 4, !tbaa !1
  %1 = load %struct.rtx_def** @this_insn, align 8, !tbaa !5
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %land.lhs.true, label %if.end39

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @multiple_sets(%struct.rtx_def* %1) #2
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end39, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.rtx_def** @this_insn, align 8, !tbaa !5
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 3
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx5, align 8, !tbaa !5
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 0
  %7 = load i32* %num_elem, align 4, !tbaa !15
  %cmp89195 = icmp sgt i32 %7, 0
  br i1 %cmp89195, label %for.body.lr.ph, label %if.end39

for.body.lr.ph:                                   ; preds = %if.then, %land.lhs.true32
  %i.09097.in = phi i32 [ %17, %land.lhs.true32 ], [ %7, %if.then ]
  %output_p.addr.0.ph96 = phi i32 [ %output_p.addr.0., %land.lhs.true32 ], [ %output_p, %if.then ]
  %8 = sext i32 %i.09097.in to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %9 = load %struct.rtx_def** @this_insn, align 8, !tbaa !5
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 3
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx11, align 8, !tbaa !5
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0
  %rtvec14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**
  %11 = load %struct.rtvec_def** %rtvec14, align 8, !tbaa !5
  %arrayidx15 = getelementptr inbounds %struct.rtvec_def* %11, i64 0, i32 1, i64 %indvars.iv.next
  %12 = load %struct.rtx_def** %arrayidx15, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load16 = load i32* %13, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 47
  br i1 %cmp18, label %land.lhs.true19, label %for.cond.backedge

land.lhs.true19:                                  ; preds = %for.body
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx22, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load23 = load i32* %15, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 61
  br i1 %cmp25, label %for.cond.backedge, label %land.lhs.true26

land.lhs.true26:                                  ; preds = %land.lhs.true19
  %call30 = tail call i32 @rtx_equal_p(%struct.rtx_def* %reg, %struct.rtx_def* %14) #2
  %tobool31 = icmp eq i32 %call30, 0
  br i1 %tobool31, label %land.lhs.true32, label %for.cond.backedge

for.cond.backedge:                                ; preds = %land.lhs.true26, %land.lhs.true19, %for.body
  %16 = trunc i64 %indvars.iv.next to i32
  %cmp8 = icmp sgt i32 %16, 0
  br i1 %cmp8, label %for.body, label %if.end39

land.lhs.true32:                                  ; preds = %land.lhs.true26
  %17 = trunc i64 %indvars.iv.next to i32
  %18 = load %struct.rtx_def** %rtx22, align 8, !tbaa !5
  %call36 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %reg, %struct.rtx_def* %18) #2
  %tobool37 = icmp eq i32 %call36, 0
  %output_p.addr.0. = select i1 %tobool37, i32 %output_p.addr.0.ph96, i32 1
  %cmp891 = icmp sgt i32 %17, 0
  br i1 %cmp891, label %for.body.lr.ph, label %if.end39

if.end39:                                         ; preds = %land.lhs.true32, %for.cond.backedge, %if.then, %land.lhs.true, %entry
  %output_p.addr.2 = phi i32 [ %output_p, %land.lhs.true ], [ %output_p, %entry ], [ %output_p, %if.then ], [ %output_p.addr.0.ph96, %for.cond.backedge ], [ %output_p.addr.0., %land.lhs.true32 ]
  %tobool40 = icmp eq i32 %output_p.addr.2, 0
  br i1 %tobool40, label %land.lhs.true41, label %if.end45

land.lhs.true41:                                  ; preds = %if.end39
  %19 = load %struct.rtx_def** @this_insn, align 8, !tbaa !5
  %call42 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %19, i32 2, i32 %0) #2
  %not.tobool43 = icmp ne %struct.rtx_def* %call42, null
  %output_p.addr.2. = zext i1 %not.tobool43 to i32
  br label %if.end45

if.end45:                                         ; preds = %land.lhs.true41, %if.end39
  %output_p.addr.3 = phi i32 [ %output_p.addr.2, %if.end39 ], [ %output_p.addr.2., %land.lhs.true41 ]
  %cmp46 = icmp slt i32 %0, 53
  br i1 %cmp46, label %if.then47, label %if.else

if.then47:                                        ; preds = %if.end45
  %20 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load48 = load i32* %20, align 8
  %bf.lshr = lshr i32 %bf.load48, 16
  %bf.clear49 = and i32 %bf.lshr, 255
  %21 = and i32 %0, -8
  %22 = icmp eq i32 %21, 8
  %regno.off.i = add i32 %0, -21
  %23 = icmp ult i32 %regno.off.i, 8
  %or.cond.i = or i1 %22, %23
  %regno.off73.i = add i32 %0, -45
  %24 = icmp ult i32 %regno.off73.i, 8
  %or.cond77.i = or i1 %or.cond.i, %24
  %regno.off74.i = add i32 %0, -29
  %25 = icmp ult i32 %regno.off74.i, 8
  %or.cond79.i = or i1 %or.cond77.i, %25
  br i1 %or.cond79.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %if.then47
  %idxprom.i88 = zext i32 %bf.clear49 to i64
  %arrayidx.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom.i88
  %26 = load i32* %arrayidx.i, align 4, !tbaa !11
  %cmp13.i = icmp eq i32 %26, 5
  br i1 %cmp13.i, label %while.body48.lr.ph.i, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %cond.true.i
  %cmp16.i = icmp eq i32 %26, 6
  %phitmp.i = select i1 %cmp16.i, i32 2, i32 1
  br label %while.body48.lr.ph.i

cond.false.i:                                     ; preds = %if.then47
  switch i32 %bf.clear49, label %cond.end38.i [
    i32 18, label %cond.true18.i
    i32 24, label %cond.true22.i
  ]

cond.true18.i:                                    ; preds = %cond.false.i
  %27 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %27, 25
  %28 = and i32 %and.i, 1
  %29 = xor i32 %28, 3
  br label %while.body48.lr.ph.i

cond.true22.i:                                    ; preds = %cond.false.i
  %30 = load i32* @target_flags, align 4, !tbaa !1
  %and23.i = lshr i32 %30, 24
  %31 = and i32 %and23.i, 2
  %32 = xor i32 %31, 6
  br label %while.body48.lr.ph.i

cond.end38.i:                                     ; preds = %cond.false.i
  %idxprom27.i87 = zext i32 %bf.clear49 to i64
  %arrayidx28.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom27.i87
  %33 = load i8* %arrayidx28.i, align 1, !tbaa !11
  %conv.i = zext i8 %33 to i32
  %34 = load i32* @target_flags, align 4, !tbaa !1
  %and29.i = lshr i32 %34, 23
  %35 = and i32 %and29.i, 4
  %36 = add i32 %35, 4
  %add.i = add i32 %conv.i, -1
  %sub.i = add i32 %add.i, %36
  %div.i = sdiv i32 %sub.i, %36
  %cmp4682.i = icmp sgt i32 %div.i, 0
  br i1 %cmp4682.i, label %while.body48.lr.ph.i, label %mark_life.exit

while.body48.lr.ph.i:                             ; preds = %lor.rhs.i, %cond.true.i, %cond.true22.i, %cond.true18.i, %cond.end38.i
  %cond39.i86 = phi i32 [ %div.i, %cond.end38.i ], [ %29, %cond.true18.i ], [ %32, %cond.true22.i ], [ 2, %cond.true.i ], [ %phitmp.i, %lor.rhs.i ]
  %regs_live.promoted.i = load i64* @regs_live, align 8, !tbaa !37
  br label %while.body48.i

while.body48.i:                                   ; preds = %while.body48.i, %while.body48.lr.ph.i
  %and5284.i = phi i64 [ %regs_live.promoted.i, %while.body48.lr.ph.i ], [ %and52.i, %while.body48.i ]
  %dec4583.in.i = phi i32 [ %cond39.i86, %while.body48.lr.ph.i ], [ %dec4583.i, %while.body48.i ]
  %dec4583.i = add nsw i32 %dec4583.in.i, -1
  %add49.i = add nsw i32 %dec4583.i, %0
  %sh_prom50.i = zext i32 %add49.i to i64
  %shl51.i = shl i64 1, %sh_prom50.i
  %neg.i = xor i64 %shl51.i, -1
  %and52.i = and i64 %and5284.i, %neg.i
  %cmp46.i = icmp sgt i32 %dec4583.i, 0
  br i1 %cmp46.i, label %while.body48.i, label %while.cond44.if.end.loopexit_crit_edge.i

while.cond44.if.end.loopexit_crit_edge.i:         ; preds = %while.body48.i
  store i64 %and52.i, i64* @regs_live, align 8, !tbaa !37
  br label %mark_life.exit

mark_life.exit:                                   ; preds = %cond.end38.i, %while.cond44.if.end.loopexit_crit_edge.i
  %tobool50 = icmp eq i32 %output_p.addr.3, 0
  br i1 %tobool50, label %if.end68, label %if.then51

if.then51:                                        ; preds = %mark_life.exit
  %bf.load52 = load i32* %20, align 8
  %bf.lshr53 = lshr i32 %bf.load52, 16
  %bf.clear54 = and i32 %bf.lshr53, 255
  %37 = load i32* @this_insn_number, align 4, !tbaa !1
  %mul = shl nsw i32 %37, 1
  %add84 = or i32 %mul, 1
  tail call fastcc void @post_mark_life(i32 %0, i32 %bf.clear54, i32 %mul, i32 %add84)
  br label %if.end68

if.else:                                          ; preds = %if.end45
  %idxprom57 = sext i32 %0 to i64
  %38 = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx58 = getelementptr inbounds i32* %38, i64 %idxprom57
  %39 = load i32* %arrayidx58, align 4, !tbaa !1
  %cmp59 = icmp sgt i32 %39, -1
  br i1 %cmp59, label %if.then60, label %if.end68

if.then60:                                        ; preds = %if.else
  %40 = load i32* @this_insn_number, align 4, !tbaa !1
  %mul61 = shl i32 %40, 1
  %add62 = add nsw i32 %mul61, %output_p.addr.3
  %idxprom65 = sext i32 %39 to i64
  %41 = load %struct.qty** @qty, align 8, !tbaa !5
  %death = getelementptr inbounds %struct.qty* %41, i64 %idxprom65, i32 3
  store i32 %add62, i32* %death, align 4, !tbaa !48
  br label %if.end68

if.end68:                                         ; preds = %mark_life.exit, %if.else, %if.then60, %if.then51
  ret void
}

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @reg_is_set(%struct.rtx_def* %reg, %struct.rtx_def* nocapture readonly %setter, i8* nocapture readnone %data) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 63, label %if.end
    i32 61, label %if.end
  ]

if.end:                                           ; preds = %entry, %entry
  %1 = load i32* @this_insn_number, align 4, !tbaa !1
  %mul = shl nsw i32 %1, 1
  %2 = getelementptr inbounds %struct.rtx_def* %setter, i64 0, i32 0
  %bf.load4 = load i32* %2, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 49
  %conv = zext i1 %cmp6 to i32
  %sub = sub nsw i32 %mul, %conv
  tail call fastcc void @reg_is_born(%struct.rtx_def* %reg, i32 %sub)
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @qty_sugg_compare(i32 %q1, i32 %q2) #0 {
entry:
  %idxprom = sext i32 %q1 to i64
  %0 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds i16* %0, i64 %idxprom
  %1 = load i16* %arrayidx, align 2, !tbaa !42
  %tobool = icmp eq i16 %1, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %conv = sext i16 %1 to i32
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %arrayidx5 = getelementptr inbounds i16* %2, i64 %idxprom
  %3 = load i16* %arrayidx5, align 2, !tbaa !42
  %conv6 = sext i16 %3 to i32
  %mul = mul nsw i32 %conv6, 53
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %mul, %cond.false ]
  %idxprom7 = sext i32 %q2 to i64
  %arrayidx8 = getelementptr inbounds i16* %0, i64 %idxprom7
  %4 = load i16* %arrayidx8, align 2, !tbaa !42
  %tobool10 = icmp eq i16 %4, 0
  br i1 %tobool10, label %cond.false15, label %cond.true11

cond.true11:                                      ; preds = %cond.end
  %conv9 = sext i16 %4 to i32
  br label %cond.end20

cond.false15:                                     ; preds = %cond.end
  %5 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %arrayidx17 = getelementptr inbounds i16* %5, i64 %idxprom7
  %6 = load i16* %arrayidx17, align 2, !tbaa !42
  %conv18 = sext i16 %6 to i32
  %mul19 = mul nsw i32 %conv18, 53
  br label %cond.end20

cond.end20:                                       ; preds = %cond.false15, %cond.true11
  %cond21 = phi i32 [ %conv9, %cond.true11 ], [ %mul19, %cond.false15 ]
  %cmp = icmp eq i32 %cond, %cond21
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end20
  %sub = sub nsw i32 %cond, %cond21
  br label %return

if.end:                                           ; preds = %cond.end20
  %7 = load %struct.qty** @qty, align 8, !tbaa !5
  %n_refs = getelementptr inbounds %struct.qty* %7, i64 %idxprom7, i32 0
  %8 = load i32* %n_refs, align 4, !tbaa !50
  %conv25 = sext i32 %8 to i64
  %call = tail call i32 @floor_log2_wide(i64 %conv25) #2
  %9 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq = getelementptr inbounds %struct.qty* %9, i64 %idxprom7, i32 1
  %10 = load i32* %freq, align 4, !tbaa !51
  %mul28 = mul nsw i32 %10, %call
  %size = getelementptr inbounds %struct.qty* %9, i64 %idxprom7, i32 4
  %11 = load i32* %size, align 4, !tbaa !52
  %mul31 = mul nsw i32 %mul28, %11
  %conv32 = sitofp i32 %mul31 to double
  %death = getelementptr inbounds %struct.qty* %9, i64 %idxprom7, i32 3
  %12 = load i32* %death, align 4, !tbaa !48
  %birth = getelementptr inbounds %struct.qty* %9, i64 %idxprom7, i32 2
  %13 = load i32* %birth, align 4, !tbaa !47
  %sub37 = sub nsw i32 %12, %13
  %conv38 = sitofp i32 %sub37 to double
  %div = fdiv double %conv32, %conv38
  %mul39 = fmul double %div, 1.000000e+01
  %conv40 = fptosi double %mul39 to i32
  %n_refs43 = getelementptr inbounds %struct.qty* %9, i64 %idxprom, i32 0
  %14 = load i32* %n_refs43, align 4, !tbaa !50
  %conv44 = sext i32 %14 to i64
  %call45 = tail call i32 @floor_log2_wide(i64 %conv44) #2
  %15 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq48 = getelementptr inbounds %struct.qty* %15, i64 %idxprom, i32 1
  %16 = load i32* %freq48, align 4, !tbaa !51
  %mul49 = mul nsw i32 %16, %call45
  %size52 = getelementptr inbounds %struct.qty* %15, i64 %idxprom, i32 4
  %17 = load i32* %size52, align 4, !tbaa !52
  %mul53 = mul nsw i32 %mul49, %17
  %conv54 = sitofp i32 %mul53 to double
  %death57 = getelementptr inbounds %struct.qty* %15, i64 %idxprom, i32 3
  %18 = load i32* %death57, align 4, !tbaa !48
  %birth60 = getelementptr inbounds %struct.qty* %15, i64 %idxprom, i32 2
  %19 = load i32* %birth60, align 4, !tbaa !47
  %sub61 = sub nsw i32 %18, %19
  %conv62 = sitofp i32 %sub61 to double
  %div63 = fdiv double %conv54, %conv62
  %mul64 = fmul double %div63, 1.000000e+01
  %conv65 = fptosi double %mul64 to i32
  %sub66 = sub nsw i32 %conv40, %conv65
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %sub66, %if.end ]
  ret i32 %retval.0
}

declare void @specqsort(i8*, i32, i32, i32 (...)*) #1

; Function Attrs: nounwind uwtable
define internal i32 @qty_sugg_compare_1(i8* nocapture readonly %q1p, i8* nocapture readonly %q2p) #0 {
entry:
  %0 = bitcast i8* %q1p to i32*
  %1 = load i32* %0, align 4, !tbaa !1
  %2 = bitcast i8* %q2p to i32*
  %3 = load i32* %2, align 4, !tbaa !1
  %idxprom = sext i32 %1 to i64
  %4 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds i16* %4, i64 %idxprom
  %5 = load i16* %arrayidx, align 2, !tbaa !42
  %tobool = icmp eq i16 %5, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %conv = sext i16 %5 to i32
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %arrayidx5 = getelementptr inbounds i16* %6, i64 %idxprom
  %7 = load i16* %arrayidx5, align 2, !tbaa !42
  %conv6 = sext i16 %7 to i32
  %mul = mul nsw i32 %conv6, 53
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %mul, %cond.false ]
  %idxprom7 = sext i32 %3 to i64
  %arrayidx8 = getelementptr inbounds i16* %4, i64 %idxprom7
  %8 = load i16* %arrayidx8, align 2, !tbaa !42
  %tobool10 = icmp eq i16 %8, 0
  br i1 %tobool10, label %cond.false15, label %cond.true11

cond.true11:                                      ; preds = %cond.end
  %conv9 = sext i16 %8 to i32
  br label %cond.end20

cond.false15:                                     ; preds = %cond.end
  %9 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %arrayidx17 = getelementptr inbounds i16* %9, i64 %idxprom7
  %10 = load i16* %arrayidx17, align 2, !tbaa !42
  %conv18 = sext i16 %10 to i32
  %mul19 = mul nsw i32 %conv18, 53
  br label %cond.end20

cond.end20:                                       ; preds = %cond.false15, %cond.true11
  %cond21 = phi i32 [ %conv9, %cond.true11 ], [ %mul19, %cond.false15 ]
  %cmp = icmp eq i32 %cond, %cond21
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end20
  %sub = sub nsw i32 %cond, %cond21
  br label %return

if.end:                                           ; preds = %cond.end20
  %11 = load %struct.qty** @qty, align 8, !tbaa !5
  %n_refs = getelementptr inbounds %struct.qty* %11, i64 %idxprom7, i32 0
  %12 = load i32* %n_refs, align 4, !tbaa !50
  %conv25 = sext i32 %12 to i64
  %call = tail call i32 @floor_log2_wide(i64 %conv25) #2
  %13 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq = getelementptr inbounds %struct.qty* %13, i64 %idxprom7, i32 1
  %14 = load i32* %freq, align 4, !tbaa !51
  %mul28 = mul nsw i32 %14, %call
  %size = getelementptr inbounds %struct.qty* %13, i64 %idxprom7, i32 4
  %15 = load i32* %size, align 4, !tbaa !52
  %mul31 = mul nsw i32 %mul28, %15
  %conv32 = sitofp i32 %mul31 to double
  %death = getelementptr inbounds %struct.qty* %13, i64 %idxprom7, i32 3
  %16 = load i32* %death, align 4, !tbaa !48
  %birth = getelementptr inbounds %struct.qty* %13, i64 %idxprom7, i32 2
  %17 = load i32* %birth, align 4, !tbaa !47
  %sub37 = sub nsw i32 %16, %17
  %conv38 = sitofp i32 %sub37 to double
  %div = fdiv double %conv32, %conv38
  %mul39 = fmul double %div, 1.000000e+01
  %conv40 = fptosi double %mul39 to i32
  %n_refs43 = getelementptr inbounds %struct.qty* %13, i64 %idxprom, i32 0
  %18 = load i32* %n_refs43, align 4, !tbaa !50
  %conv44 = sext i32 %18 to i64
  %call45 = tail call i32 @floor_log2_wide(i64 %conv44) #2
  %19 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq48 = getelementptr inbounds %struct.qty* %19, i64 %idxprom, i32 1
  %20 = load i32* %freq48, align 4, !tbaa !51
  %mul49 = mul nsw i32 %20, %call45
  %size52 = getelementptr inbounds %struct.qty* %19, i64 %idxprom, i32 4
  %21 = load i32* %size52, align 4, !tbaa !52
  %mul53 = mul nsw i32 %mul49, %21
  %conv54 = sitofp i32 %mul53 to double
  %death57 = getelementptr inbounds %struct.qty* %19, i64 %idxprom, i32 3
  %22 = load i32* %death57, align 4, !tbaa !48
  %birth60 = getelementptr inbounds %struct.qty* %19, i64 %idxprom, i32 2
  %23 = load i32* %birth60, align 4, !tbaa !47
  %sub61 = sub nsw i32 %22, %23
  %conv62 = sitofp i32 %sub61 to double
  %div63 = fdiv double %conv54, %conv62
  %mul64 = fmul double %div63, 1.000000e+01
  %conv65 = fptosi double %mul64 to i32
  %cmp67 = icmp eq i32 %conv40, %conv65
  br i1 %cmp67, label %if.end70, label %if.then69

if.then69:                                        ; preds = %if.end
  %sub66 = sub nsw i32 %conv40, %conv65
  br label %return

if.end70:                                         ; preds = %if.end
  %sub71 = sub nsw i32 %1, %3
  br label %return

return:                                           ; preds = %if.end70, %if.then69, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %sub66, %if.then69 ], [ %sub71, %if.end70 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @find_free_reg(i32 %class, i32 %mode, i32 %qtyno, i32 %accept_call_clobbered, i32 %just_try_suggested, i32 %born_index, i32 %dead_index) #0 {
entry:
  %cmp = icmp slt i32 %born_index, 0
  %cmp1 = icmp sgt i32 %born_index, %dead_index
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end.lr.ph

if.end.lr.ph:                                     ; preds = %entry
  %tobool5 = icmp ne i32 %accept_call_clobbered, 0
  %idxprom7 = sext i32 %qtyno to i64
  %cmp18295 = icmp slt i32 %born_index, %dead_index
  %idxprom22 = sext i32 %class to i64
  %arrayidx23 = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom22
  %idxprom103 = sext i32 %mode to i64
  %arrayidx104 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom103
  %arrayidx126 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom103
  %0 = sext i32 %born_index to i64
  br label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str1, i64 0, i64 0), i32 2206, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.find_free_reg, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %if.then172, %if.end.lr.ph
  %just_try_suggested.tr305 = phi i32 [ %just_try_suggested, %if.end.lr.ph ], [ 1, %if.then172 ]
  %1 = load %struct.function** @cfun, align 8, !tbaa !5
  %has_nonlocal_label = getelementptr inbounds %struct.function* %1, i64 0, i32 56
  %2 = bitcast i24* %has_nonlocal_label to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 256
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end4, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.qty** @qty, align 8, !tbaa !5
  %n_calls_crossed = getelementptr inbounds %struct.qty* %3, i64 %idxprom7, i32 5
  %4 = load i32* %n_calls_crossed, align 4, !tbaa !57
  %cmp2 = icmp sgt i32 %4, 0
  br i1 %cmp2, label %return, label %if.end4

if.end4:                                          ; preds = %if.end, %land.lhs.true
  br i1 %tobool5, label %if.then16, label %if.end14

if.end14:                                         ; preds = %if.end4
  %5 = load %struct.qty** @qty, align 8, !tbaa !5
  %n_calls_crossed9 = getelementptr inbounds %struct.qty* %5, i64 %idxprom7, i32 5
  %6 = load i32* %n_calls_crossed9, align 4, !tbaa !57
  %cmp10 = icmp eq i32 %6, 0
  %fixed_reg_set.val = load i64* @fixed_reg_set, align 8
  %call_used_reg_set.val = load i64* @call_used_reg_set, align 8
  %used.0 = select i1 %cmp10, i64 %fixed_reg_set.val, i64 %call_used_reg_set.val
  br label %for.cond.preheader

if.then16:                                        ; preds = %if.end4
  %used.0288 = load i64* @call_fixed_reg_set, align 8
  %7 = load i64* @losing_caller_save_reg_set, align 8, !tbaa !37
  %or = or i64 %7, %used.0288
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then16, %if.end14
  %used.2.ph = phi i64 [ %used.0, %if.end14 ], [ %or, %if.then16 ]
  br i1 %cmp18295, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %8 = load i64** @regs_live_at, align 8, !tbaa !5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ %0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %used.2297 = phi i64 [ %used.2.ph, %for.body.lr.ph ], [ %or21, %for.body ]
  %arrayidx20 = getelementptr inbounds i64* %8, i64 %indvars.iv
  %9 = load i64* %arrayidx20, align 8, !tbaa !37
  %or21 = or i64 %9, %used.2297
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %10 = trunc i64 %indvars.iv.next to i32
  %cmp18 = icmp slt i32 %10, %dead_index
  br i1 %cmp18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %used.2.lcssa = phi i64 [ %used.2.ph, %for.cond.preheader ], [ %or21, %for.body ]
  %11 = load i64* %arrayidx23, align 8, !tbaa !37
  %neg = xor i64 %11, -1114177
  %or24 = or i64 %used.2.lcssa, %neg
  %or34 = or i64 %or24, 1114176
  %tobool35 = icmp ne i32 %just_try_suggested.tr305, 0
  br i1 %tobool35, label %if.then36, label %if.end52

if.then36:                                        ; preds = %for.end
  %12 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %arrayidx38 = getelementptr inbounds i16* %12, i64 %idxprom7
  %13 = load i16* %arrayidx38, align 2, !tbaa !42
  %cmp39 = icmp eq i16 %13, 0
  br i1 %cmp39, label %if.else46, label %if.then41

if.then41:                                        ; preds = %if.then36
  %14 = load i64** @qty_phys_copy_sugg, align 8, !tbaa !5
  %arrayidx43 = getelementptr inbounds i64* %14, i64 %idxprom7
  %15 = load i64* %arrayidx43, align 8, !tbaa !37
  %neg44 = xor i64 %15, -1
  %or45 = or i64 %or34, %neg44
  br label %if.end52

if.else46:                                        ; preds = %if.then36
  %16 = load i64** @qty_phys_sugg, align 8, !tbaa !5
  %arrayidx48 = getelementptr inbounds i64* %16, i64 %idxprom7
  %17 = load i64* %arrayidx48, align 8, !tbaa !37
  %neg49 = xor i64 %17, -1
  %or50 = or i64 %or34, %neg49
  br label %if.end52

if.end52:                                         ; preds = %if.then41, %if.else46, %for.end
  %first_used.0 = phi i64 [ %or45, %if.then41 ], [ %or50, %if.else46 ], [ %or34, %for.end ]
  %18 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 24), align 8, !tbaa !37
  %neg53 = xor i64 %first_used.0, -1
  %and = and i64 %18, %neg53
  %cmp54 = icmp eq i64 %and, 0
  br i1 %cmp54, label %fail, label %for.body61

for.body61:                                       ; preds = %if.end52, %for.inc156
  %indvars.iv315 = phi i64 [ %indvars.iv.next316, %for.inc156 ], [ 0, %if.end52 ]
  %arrayidx63 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv315
  %19 = load i32* %arrayidx63, align 4, !tbaa !1
  %sh_prom64 = zext i32 %19 to i64
  %shl65 = shl i64 1, %sh_prom64
  %and66 = and i64 %shl65, %first_used.0
  %tobool67 = icmp eq i64 %and66, 0
  br i1 %tobool67, label %land.lhs.true68, label %for.inc156

land.lhs.true68:                                  ; preds = %for.body61
  %call = tail call i32 @ix86_hard_regno_mode_ok(i32 %19, i32 %mode) #2
  %tobool69 = icmp eq i32 %call, 0
  br i1 %tobool69, label %for.inc156, label %land.lhs.true70

land.lhs.true70:                                  ; preds = %land.lhs.true68
  %20 = and i32 %19, -8
  %21 = icmp eq i32 %20, 8
  %.off = add i32 %19, -21
  %22 = icmp ult i32 %.off, 8
  %or.cond283 = or i1 %21, %22
  %.off280 = add i32 %19, -45
  %23 = icmp ult i32 %.off280, 8
  %or.cond285 = or i1 %or.cond283, %23
  %.off281 = add i32 %19, -29
  %24 = icmp ult i32 %.off281, 8
  %or.cond287 = or i1 %or.cond285, %24
  br i1 %or.cond287, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true70
  %25 = load i32* %arrayidx104, align 4, !tbaa !11
  %.off326 = add i32 %25, -5
  %switch = icmp ult i32 %.off326, 2
  br i1 %switch, label %land.rhs.lr.ph, label %if.then153

cond.false:                                       ; preds = %land.lhs.true70
  switch i32 %mode, label %cond.false124 [
    i32 18, label %cond.true113
    i32 24, label %cond.true120
  ]

cond.true113:                                     ; preds = %cond.false
  %26 = load i32* @target_flags, align 4, !tbaa !1
  %and114 = lshr i32 %26, 25
  %27 = and i32 %and114, 1
  %28 = xor i32 %27, 3
  br label %cond.end137

cond.true120:                                     ; preds = %cond.false
  %29 = load i32* @target_flags, align 4, !tbaa !1
  %and121 = lshr i32 %29, 24
  %30 = and i32 %and121, 2
  %31 = xor i32 %30, 6
  br label %cond.end137

cond.false124:                                    ; preds = %cond.false
  %32 = load i8* %arrayidx126, align 1, !tbaa !11
  %conv127 = zext i8 %32 to i32
  %33 = load i32* @target_flags, align 4, !tbaa !1
  %and128 = lshr i32 %33, 23
  %34 = and i32 %and128, 4
  %35 = add i32 %34, 4
  %add = add i32 %conv127, -1
  %sub = add i32 %add, %35
  %div = sdiv i32 %sub, %35
  br label %cond.end137

cond.end137:                                      ; preds = %cond.true113, %cond.false124, %cond.true120
  %cond138 = phi i32 [ %28, %cond.true113 ], [ %31, %cond.true120 ], [ %div, %cond.false124 ]
  %cmp140300 = icmp sgt i32 %cond138, 1
  br i1 %cmp140300, label %land.rhs.lr.ph, label %for.end150

land.rhs.lr.ph:                                   ; preds = %cond.true, %cond.end137
  %cond138319 = phi i32 [ %cond138, %cond.end137 ], [ 2, %cond.true ]
  br label %land.rhs

for.cond139:                                      ; preds = %land.rhs
  %36 = trunc i64 %indvars.iv.next314 to i32
  %cmp140 = icmp slt i32 %36, %cond138319
  br i1 %cmp140, label %land.rhs, label %for.end150

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.cond139
  %indvars.iv313 = phi i64 [ 1, %land.rhs.lr.ph ], [ %indvars.iv.next314, %for.cond139 ]
  %37 = trunc i64 %indvars.iv313 to i32
  %add142 = add nsw i32 %37, %19
  %sh_prom143 = zext i32 %add142 to i64
  %shl144 = shl i64 1, %sh_prom143
  %and145 = and i64 %shl144, %or34
  %lnot = icmp eq i64 %and145, 0
  %indvars.iv.next314 = add nuw nsw i64 %indvars.iv313, 1
  br i1 %lnot, label %for.cond139, label %for.end150

for.end150:                                       ; preds = %land.rhs, %for.cond139, %cond.end137
  %cond138318 = phi i32 [ %cond138, %cond.end137 ], [ %cond138319, %for.cond139 ], [ %cond138319, %land.rhs ]
  %j.0.lcssa = phi i32 [ 1, %cond.end137 ], [ %37, %land.rhs ], [ %36, %for.cond139 ]
  %cmp151 = icmp eq i32 %j.0.lcssa, %cond138318
  br i1 %cmp151, label %if.then153, label %for.inc156

if.then153:                                       ; preds = %cond.true, %for.end150
  tail call fastcc void @post_mark_life(i32 %19, i32 %mode, i32 %born_index, i32 %dead_index)
  br label %return

for.inc156:                                       ; preds = %land.lhs.true68, %for.body61, %for.end150
  %indvars.iv.next316 = add nuw nsw i64 %indvars.iv315, 1
  %38 = trunc i64 %indvars.iv.next316 to i32
  %cmp59 = icmp slt i32 %38, 53
  br i1 %cmp59, label %for.body61, label %fail

fail:                                             ; preds = %for.inc156, %if.end52
  br i1 %tobool35, label %land.lhs.true160, label %if.end176

land.lhs.true160:                                 ; preds = %fail
  %39 = load i16** @qty_phys_num_copy_sugg, align 8, !tbaa !5
  %arrayidx162 = getelementptr inbounds i16* %39, i64 %idxprom7
  %40 = load i16* %arrayidx162, align 2, !tbaa !42
  %cmp164 = icmp eq i16 %40, 0
  br i1 %cmp164, label %return, label %land.lhs.true166

land.lhs.true166:                                 ; preds = %land.lhs.true160
  %41 = load i16** @qty_phys_num_sugg, align 8, !tbaa !5
  %arrayidx168 = getelementptr inbounds i16* %41, i64 %idxprom7
  %42 = load i16* %arrayidx168, align 2, !tbaa !42
  %cmp170 = icmp eq i16 %42, 0
  br i1 %cmp170, label %return, label %if.then172

if.then172:                                       ; preds = %land.lhs.true166
  store i16 0, i16* %arrayidx162, align 2, !tbaa !42
  br label %if.end

if.end176:                                        ; preds = %fail
  %43 = load i32* @flag_caller_saves, align 4
  %notrhs = icmp eq i32 %43, 0
  %or.cond208 = or i1 %notrhs, %tobool5
  br i1 %or.cond208, label %return, label %land.lhs.true182

land.lhs.true182:                                 ; preds = %if.end176
  %44 = load %struct.qty** @qty, align 8, !tbaa !5
  %n_calls_crossed185 = getelementptr inbounds %struct.qty* %44, i64 %idxprom7, i32 5
  %45 = load i32* %n_calls_crossed185, align 4, !tbaa !57
  %cmp186 = icmp eq i32 %45, 0
  br i1 %cmp186, label %return, label %land.lhs.true188

land.lhs.true188:                                 ; preds = %land.lhs.true182
  %mul = shl nsw i32 %45, 2
  %n_refs = getelementptr inbounds %struct.qty* %44, i64 %idxprom7, i32 0
  %46 = load i32* %n_refs, align 4, !tbaa !50
  %cmp194 = icmp slt i32 %mul, %46
  br i1 %cmp194, label %if.then196, label %return

if.then196:                                       ; preds = %land.lhs.true188
  %call197 = tail call fastcc i32 @find_free_reg(i32 %class, i32 %mode, i32 %qtyno, i32 1, i32 0, i32 %born_index, i32 %dead_index)
  %cmp198 = icmp sgt i32 %call197, -1
  br i1 %cmp198, label %if.then200, label %return

if.then200:                                       ; preds = %if.then196
  store i32 1, i32* @caller_save_needed, align 4, !tbaa !1
  br label %return

return:                                           ; preds = %land.lhs.true166, %land.lhs.true160, %land.lhs.true, %land.lhs.true188, %if.end176, %land.lhs.true182, %if.then196, %if.then200, %if.then153
  %retval.0 = phi i32 [ %19, %if.then153 ], [ %call197, %if.then200 ], [ %call197, %if.then196 ], [ -1, %land.lhs.true182 ], [ -1, %if.end176 ], [ -1, %land.lhs.true188 ], [ -1, %land.lhs.true ], [ -1, %land.lhs.true160 ], [ -1, %land.lhs.true166 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @qty_compare_1(i8* nocapture readonly %q1p, i8* nocapture readonly %q2p) #0 {
entry:
  %0 = bitcast i8* %q1p to i32*
  %1 = load i32* %0, align 4, !tbaa !1
  %2 = bitcast i8* %q2p to i32*
  %3 = load i32* %2, align 4, !tbaa !1
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.qty** @qty, align 8, !tbaa !5
  %n_refs = getelementptr inbounds %struct.qty* %4, i64 %idxprom, i32 0
  %5 = load i32* %n_refs, align 4, !tbaa !50
  %conv = sext i32 %5 to i64
  %call = tail call i32 @floor_log2_wide(i64 %conv) #2
  %6 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq = getelementptr inbounds %struct.qty* %6, i64 %idxprom, i32 1
  %7 = load i32* %freq, align 4, !tbaa !51
  %mul = mul nsw i32 %7, %call
  %size = getelementptr inbounds %struct.qty* %6, i64 %idxprom, i32 4
  %8 = load i32* %size, align 4, !tbaa !52
  %mul5 = mul nsw i32 %mul, %8
  %conv6 = sitofp i32 %mul5 to double
  %death = getelementptr inbounds %struct.qty* %6, i64 %idxprom, i32 3
  %9 = load i32* %death, align 4, !tbaa !48
  %birth = getelementptr inbounds %struct.qty* %6, i64 %idxprom, i32 2
  %10 = load i32* %birth, align 4, !tbaa !47
  %sub = sub nsw i32 %9, %10
  %conv11 = sitofp i32 %sub to double
  %div = fdiv double %conv6, %conv11
  %mul12 = fmul double %div, 1.000000e+01
  %conv13 = fptosi double %mul12 to i32
  %idxprom14 = sext i32 %1 to i64
  %n_refs16 = getelementptr inbounds %struct.qty* %6, i64 %idxprom14, i32 0
  %11 = load i32* %n_refs16, align 4, !tbaa !50
  %conv17 = sext i32 %11 to i64
  %call18 = tail call i32 @floor_log2_wide(i64 %conv17) #2
  %12 = load %struct.qty** @qty, align 8, !tbaa !5
  %freq21 = getelementptr inbounds %struct.qty* %12, i64 %idxprom14, i32 1
  %13 = load i32* %freq21, align 4, !tbaa !51
  %mul22 = mul nsw i32 %13, %call18
  %size25 = getelementptr inbounds %struct.qty* %12, i64 %idxprom14, i32 4
  %14 = load i32* %size25, align 4, !tbaa !52
  %mul26 = mul nsw i32 %mul22, %14
  %conv27 = sitofp i32 %mul26 to double
  %death30 = getelementptr inbounds %struct.qty* %12, i64 %idxprom14, i32 3
  %15 = load i32* %death30, align 4, !tbaa !48
  %birth33 = getelementptr inbounds %struct.qty* %12, i64 %idxprom14, i32 2
  %16 = load i32* %birth33, align 4, !tbaa !47
  %sub34 = sub nsw i32 %15, %16
  %conv35 = sitofp i32 %sub34 to double
  %div36 = fdiv double %conv27, %conv35
  %mul37 = fmul double %div36, 1.000000e+01
  %conv38 = fptosi double %mul37 to i32
  %cmp = icmp eq i32 %conv13, %conv38
  %sub39 = sub nsw i32 %conv13, %conv38
  %sub41 = sub nsw i32 %1, %3
  %retval.0 = select i1 %cmp, i32 %sub41, i32 %sub39
  ret i32 %retval.0
}

declare i32 @floor_log2_wide(i64) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @post_mark_life(i32 %regno, i32 %mode, i32 %birth, i32 %death) #0 {
entry:
  %0 = and i32 %regno, -8
  %1 = icmp eq i32 %0, 8
  %regno.off = add i32 %regno, -21
  %2 = icmp ult i32 %regno.off, 8
  %or.cond = or i1 %1, %2
  %regno.off1 = add i32 %regno, -45
  %3 = icmp ult i32 %regno.off1, 8
  %or.cond5 = or i1 %or.cond, %3
  %regno.off2 = add i32 %regno, -29
  %4 = icmp ult i32 %regno.off2, 8
  %or.cond7 = or i1 %or.cond5, %4
  br i1 %or.cond7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %5 = load i32* %arrayidx, align 4, !tbaa !11
  %cmp13 = icmp eq i32 %5, 5
  br i1 %cmp13, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp16 = icmp eq i32 %5, 6
  %phitmp = select i1 %cmp16, i32 2, i32 1
  br label %while.body

cond.false:                                       ; preds = %entry
  switch i32 %mode, label %while.cond.preheader [
    i32 18, label %cond.true18
    i32 24, label %cond.true22
  ]

cond.true18:                                      ; preds = %cond.false
  %6 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %6, 25
  %7 = and i32 %and, 1
  %8 = xor i32 %7, 3
  br label %while.body

cond.true22:                                      ; preds = %cond.false
  %9 = load i32* @target_flags, align 4, !tbaa !1
  %and23 = lshr i32 %9, 24
  %10 = and i32 %and23, 2
  %11 = xor i32 %10, 6
  br label %while.body

while.cond.preheader:                             ; preds = %cond.false
  %idxprom27 = sext i32 %mode to i64
  %arrayidx28 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom27
  %12 = load i8* %arrayidx28, align 1, !tbaa !11
  %conv = zext i8 %12 to i32
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %and29 = lshr i32 %13, 23
  %14 = and i32 %and29, 4
  %15 = add i32 %14, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %15
  %div = sdiv i32 %sub, %15
  %cmp4011 = icmp sgt i32 %div, 0
  br i1 %cmp4011, label %while.body, label %while.cond44.preheader

while.cond44.preheader:                           ; preds = %while.body, %while.cond.preheader
  %this_reg.0.lcssa = phi i64 [ 0, %while.cond.preheader ], [ %or, %while.body ]
  %cmp458 = icmp slt i32 %birth, %death
  br i1 %cmp458, label %while.body47.lr.ph, label %if.end

while.body47.lr.ph:                               ; preds = %while.cond44.preheader
  %16 = load i64** @regs_live_at, align 8, !tbaa !5
  %17 = sext i32 %birth to i64
  br label %while.body47

while.body:                                       ; preds = %cond.true, %lor.rhs, %cond.true18, %cond.true22, %while.cond.preheader, %while.body
  %dec13.in = phi i32 [ %dec13, %while.body ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ], [ %8, %cond.true18 ], [ %11, %cond.true22 ], [ %div, %while.cond.preheader ]
  %this_reg.012 = phi i64 [ %or, %while.body ], [ 0, %while.cond.preheader ], [ 0, %cond.true22 ], [ 0, %cond.true18 ], [ 0, %lor.rhs ], [ 0, %cond.true ]
  %dec13 = add nsw i32 %dec13.in, -1
  %add42 = add nsw i32 %dec13, %regno
  %sh_prom = zext i32 %add42 to i64
  %shl = shl i64 1, %sh_prom
  %or = or i64 %shl, %this_reg.012
  %cmp40 = icmp sgt i32 %dec13, 0
  br i1 %cmp40, label %while.body, label %while.cond44.preheader

while.body47:                                     ; preds = %while.body47.lr.ph, %while.body47
  %indvars.iv = phi i64 [ %17, %while.body47.lr.ph ], [ %indvars.iv.next, %while.body47 ]
  %arrayidx49 = getelementptr inbounds i64* %16, i64 %indvars.iv
  %18 = load i64* %arrayidx49, align 8, !tbaa !37
  %or50 = or i64 %18, %this_reg.0.lcssa
  store i64 %or50, i64* %arrayidx49, align 8, !tbaa !37
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %19 = trunc i64 %indvars.iv.next to i32
  %cmp45 = icmp slt i32 %19, %death
  br i1 %cmp45, label %while.body47, label %if.end

if.end:                                           ; preds = %while.body47, %while.cond44.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reg_is_born(%struct.rtx_def* %reg, i32 %birth) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !1
  %cmp3 = icmp slt i32 %2, 53
  br i1 %cmp3, label %if.then4, label %if.else20

if.then4:                                         ; preds = %if.then
  %call = tail call i32 @subreg_hard_regno(%struct.rtx_def* %reg, i32 1) #2
  br label %if.end8

if.else:                                          ; preds = %entry
  %rtuint7 = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32* %rtuint7, align 4, !tbaa !1
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.else
  %regno.0 = phi i32 [ %call, %if.then4 ], [ %3, %if.else ]
  %cmp9 = icmp slt i32 %regno.0, 53
  br i1 %cmp9, label %if.then10, label %if.else20

if.then10:                                        ; preds = %if.end8
  %bf.load11 = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load11, 16
  %bf.clear12 = and i32 %bf.lshr, 255
  %4 = and i32 %regno.0, -8
  %5 = icmp eq i32 %4, 8
  %regno.off.i = add i32 %regno.0, -21
  %6 = icmp ult i32 %regno.off.i, 8
  %or.cond.i = or i1 %5, %6
  %regno.off73.i = add i32 %regno.0, -45
  %7 = icmp ult i32 %regno.off73.i, 8
  %or.cond77.i = or i1 %or.cond.i, %7
  %regno.off74.i = add i32 %regno.0, -29
  %8 = icmp ult i32 %regno.off74.i, 8
  %or.cond79.i = or i1 %or.cond77.i, %8
  br i1 %or.cond79.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %if.then10
  %idxprom.i72 = zext i32 %bf.clear12 to i64
  %arrayidx.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom.i72
  %9 = load i32* %arrayidx.i, align 4, !tbaa !11
  %cmp13.i = icmp eq i32 %9, 5
  br i1 %cmp13.i, label %while.body.lr.ph.i, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %cond.true.i
  %cmp16.i = icmp eq i32 %9, 6
  %phitmp.i = select i1 %cmp16.i, i32 2, i32 1
  br label %while.body.lr.ph.i

cond.false.i:                                     ; preds = %if.then10
  switch i32 %bf.clear12, label %cond.end38.i [
    i32 18, label %cond.true18.i
    i32 24, label %cond.true22.i
  ]

cond.true18.i:                                    ; preds = %cond.false.i
  %10 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %10, 25
  %11 = and i32 %and.i, 1
  %12 = xor i32 %11, 3
  br label %while.body.lr.ph.i

cond.true22.i:                                    ; preds = %cond.false.i
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %and23.i = lshr i32 %13, 24
  %14 = and i32 %and23.i, 2
  %15 = xor i32 %14, 6
  br label %while.body.lr.ph.i

cond.end38.i:                                     ; preds = %cond.false.i
  %idxprom27.i71 = zext i32 %bf.clear12 to i64
  %arrayidx28.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom27.i71
  %16 = load i8* %arrayidx28.i, align 1, !tbaa !11
  %conv.i = zext i8 %16 to i32
  %17 = load i32* @target_flags, align 4, !tbaa !1
  %and29.i = lshr i32 %17, 23
  %18 = and i32 %and29.i, 4
  %19 = add i32 %18, 4
  %add.i = add i32 %conv.i, -1
  %sub.i = add i32 %add.i, %19
  %div.i = sdiv i32 %sub.i, %19
  %cmp4682.i = icmp sgt i32 %div.i, 0
  br i1 %cmp4682.i, label %while.body.lr.ph.i, label %mark_life.exit

while.body.lr.ph.i:                               ; preds = %lor.rhs.i, %cond.true.i, %cond.true22.i, %cond.true18.i, %cond.end38.i
  %cond39.i70 = phi i32 [ %div.i, %cond.end38.i ], [ %12, %cond.true18.i ], [ %15, %cond.true22.i ], [ 2, %cond.true.i ], [ %phitmp.i, %lor.rhs.i ]
  %regs_live.promoted88.i = load i64* @regs_live, align 8, !tbaa !37
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %or89.i = phi i64 [ %regs_live.promoted88.i, %while.body.lr.ph.i ], [ %or.i, %while.body.i ]
  %dec87.in.i = phi i32 [ %cond39.i70, %while.body.lr.ph.i ], [ %dec87.i, %while.body.i ]
  %dec87.i = add nsw i32 %dec87.in.i, -1
  %add43.i = add nsw i32 %dec87.i, %regno.0
  %sh_prom.i = zext i32 %add43.i to i64
  %shl.i = shl i64 1, %sh_prom.i
  %or.i = or i64 %shl.i, %or89.i
  %cmp41.i = icmp sgt i32 %dec87.i, 0
  br i1 %cmp41.i, label %while.body.i, label %while.cond.if.end.loopexit80_crit_edge.i

while.cond.if.end.loopexit80_crit_edge.i:         ; preds = %while.body.i
  store i64 %or.i, i64* @regs_live, align 8, !tbaa !37
  br label %mark_life.exit

mark_life.exit:                                   ; preds = %cond.end38.i, %while.cond.if.end.loopexit80_crit_edge.i
  %20 = load i32* @this_insn_number, align 4, !tbaa !1
  %mul = shl nsw i32 %20, 1
  %cmp13 = icmp sgt i32 %mul, %birth
  br i1 %cmp13, label %if.then14, label %if.end48

if.then14:                                        ; preds = %mark_life.exit
  %bf.load15 = load i32* %0, align 8
  %bf.lshr16 = lshr i32 %bf.load15, 16
  %bf.clear17 = and i32 %bf.lshr16, 255
  tail call fastcc void @post_mark_life(i32 %regno.0, i32 %bf.clear17, i32 %birth, i32 %mul)
  br label %if.end48

if.else20:                                        ; preds = %if.then, %if.end8
  %regno.068 = phi i32 [ %regno.0, %if.end8 ], [ %2, %if.then ]
  %idxprom = sext i32 %regno.068 to i64
  %21 = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx21 = getelementptr inbounds i32* %21, i64 %idxprom
  %22 = load i32* %arrayidx21, align 4, !tbaa !1
  %cmp22 = icmp eq i32 %22, -2
  br i1 %cmp22, label %if.then23, label %if.end37

if.then23:                                        ; preds = %if.else20
  %bf.load24 = load i32* %0, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  %23 = load %struct.function** @cfun, align 8, !tbaa !5
  %emit = getelementptr inbounds %struct.function* %23, i64 0, i32 3
  %24 = load %struct.emit_status** %emit, align 8, !tbaa !26
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %24, i64 0, i32 12
  %25 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !29
  %arrayidx28 = getelementptr inbounds %struct.rtx_def** %25, i64 %idxprom
  %26 = load %struct.rtx_def** %arrayidx28, align 8, !tbaa !5
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load29 = load i32* %27, align 8
  %bf.lshr30 = lshr i32 %bf.load29, 16
  %bf.clear31 = and i32 %bf.lshr30, 255
  %idxprom3263 = zext i32 %bf.clear31 to i64
  %arrayidx33 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom3263
  %28 = load i8* %arrayidx33, align 1, !tbaa !11
  %conv = zext i8 %28 to i32
  %29 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %29, 23
  %30 = and i32 %and, 4
  %31 = add i32 %30, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %31
  %div = sdiv i32 %sub, %31
  %32 = load i32* @next_qty, align 4, !tbaa !1
  %inc.i = add nsw i32 %32, 1
  store i32 %inc.i, i32* @next_qty, align 4, !tbaa !1
  store i32 %32, i32* %arrayidx21, align 4, !tbaa !1
  %33 = load i8** @reg_offset, align 8, !tbaa !5
  %arrayidx2.i = getelementptr inbounds i8* %33, i64 %idxprom
  store i8 0, i8* %arrayidx2.i, align 1, !tbaa !11
  %34 = load i32** @reg_next_in_qty, align 8, !tbaa !5
  %arrayidx4.i = getelementptr inbounds i32* %34, i64 %idxprom
  store i32 -1, i32* %arrayidx4.i, align 4, !tbaa !1
  %idxprom5.i = sext i32 %32 to i64
  %35 = load %struct.qty** @qty, align 8, !tbaa !5
  %first_reg.i = getelementptr inbounds %struct.qty* %35, i64 %idxprom5.i, i32 6
  store i32 %regno.068, i32* %first_reg.i, align 4, !tbaa !54
  %size9.i = getelementptr inbounds %struct.qty* %35, i64 %idxprom5.i, i32 4
  store i32 %div, i32* %size9.i, align 4, !tbaa !52
  %mode12.i = getelementptr inbounds %struct.qty* %35, i64 %idxprom5.i, i32 9
  store i32 %bf.clear26, i32* %mode12.i, align 4, !tbaa !46
  %birth15.i = getelementptr inbounds %struct.qty* %35, i64 %idxprom5.i, i32 2
  store i32 %birth, i32* %birth15.i, align 4, !tbaa !47
  %36 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data.i = getelementptr inbounds %struct.varray_head_tag* %36, i64 0, i32 4
  %reg.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.reg_info_def*]*
  %arrayidx17.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg.i, i64 0, i64 %idxprom
  %37 = load %struct.reg_info_def** %arrayidx17.i, align 8, !tbaa !5
  %calls_crossed.i = getelementptr inbounds %struct.reg_info_def* %37, i64 0, i32 8
  %38 = load i32* %calls_crossed.i, align 4, !tbaa !32
  %n_calls_crossed.i = getelementptr inbounds %struct.qty* %35, i64 %idxprom5.i, i32 5
  store i32 %38, i32* %n_calls_crossed.i, align 4, !tbaa !57
  %call.i = tail call i32 @reg_preferred_class(i32 %regno.068) #2
  %39 = load %struct.qty** @qty, align 8, !tbaa !5
  %min_class.i = getelementptr inbounds %struct.qty* %39, i64 %idxprom5.i, i32 7
  store i32 %call.i, i32* %min_class.i, align 4, !tbaa !44
  %call22.i = tail call i32 @reg_alternate_class(i32 %regno.068) #2
  %40 = load %struct.qty** @qty, align 8, !tbaa !5
  %alternate_class.i = getelementptr inbounds %struct.qty* %40, i64 %idxprom5.i, i32 8
  store i32 %call22.i, i32* %alternate_class.i, align 4, !tbaa !53
  %41 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data26.i = getelementptr inbounds %struct.varray_head_tag* %41, i64 0, i32 4
  %reg27.i = bitcast %union.varray_data_tag* %data26.i to [1 x %struct.reg_info_def*]*
  %arrayidx28.i66 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg27.i, i64 0, i64 %idxprom
  %42 = load %struct.reg_info_def** %arrayidx28.i66, align 8, !tbaa !5
  %refs.i = getelementptr inbounds %struct.reg_info_def* %42, i64 0, i32 4
  %43 = load i32* %refs.i, align 4, !tbaa !23
  %n_refs.i = getelementptr inbounds %struct.qty* %40, i64 %idxprom5.i, i32 0
  store i32 %43, i32* %n_refs.i, align 4, !tbaa !50
  %freq.i = getelementptr inbounds %struct.reg_info_def* %42, i64 0, i32 5
  %44 = load i32* %freq.i, align 4, !tbaa !31
  %freq37.i = getelementptr inbounds %struct.qty* %40, i64 %idxprom5.i, i32 1
  store i32 %44, i32* %freq37.i, align 4, !tbaa !51
  %changes_mode.i = getelementptr inbounds %struct.reg_info_def* %42, i64 0, i32 10
  %45 = load i8* %changes_mode.i, align 1, !tbaa !55
  %changes_mode44.i = getelementptr inbounds %struct.qty* %40, i64 %idxprom5.i, i32 11
  store i8 %45, i8* %changes_mode44.i, align 1, !tbaa !56
  %.pre = load i32** @reg_qty, align 8, !tbaa !5
  %arrayidx39.phi.trans.insert = getelementptr inbounds i32* %.pre, i64 %idxprom
  %.pre73 = load i32* %arrayidx39.phi.trans.insert, align 4, !tbaa !1
  br label %if.end37

if.end37:                                         ; preds = %if.then23, %if.else20
  %46 = phi i32 [ %.pre73, %if.then23 ], [ %22, %if.else20 ]
  %cmp40 = icmp sgt i32 %46, -1
  br i1 %cmp40, label %if.then42, label %if.end48

if.then42:                                        ; preds = %if.end37
  %idxprom45 = sext i32 %46 to i64
  %47 = load %struct.qty** @qty, align 8, !tbaa !5
  %death = getelementptr inbounds %struct.qty* %47, i64 %idxprom45, i32 3
  store i32 -1, i32* %death, align 4, !tbaa !48
  br label %if.end48

if.end48:                                         ; preds = %if.end37, %if.then42, %mark_life.exit, %if.then14
  ret void
}

declare i32 @subreg_hard_regno(%struct.rtx_def*, i32) #1

declare i32 @reg_preferred_class(i32) #1

declare i32 @reg_alternate_class(i32) #1

declare i32 @multiple_sets(%struct.rtx_def*) #1

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #1

declare i32 @subreg_regno_offset(i32, i32, i32, i32) #1

declare i32 @reg_class_subset_p(i32, i32) #1

declare %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def*) #1

declare void @init_alias_analysis() #1

; Function Attrs: nounwind uwtable
define internal void @no_equiv(%struct.rtx_def* nocapture readonly %reg, %struct.rtx_def* nocapture readnone %store, i8* nocapture readnone %data) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %init_insns = getelementptr inbounds %struct.equivalence* %2, i64 %idxprom, i32 4
  %3 = load %struct.rtx_def** %init_insns, align 8, !tbaa !12
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %cmp2 = icmp eq %struct.rtx_def* %3, %4
  br i1 %cmp2, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  %tobool22 = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool22, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %list.023 = phi %struct.rtx_def* [ %6, %for.body ], [ %3, %for.cond.preheader ]
  %fld5 = getelementptr inbounds %struct.rtx_def* %list.023, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld5 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %5, i32 3, %struct.rtx_def* null) #2
  tail call void @remove_note(%struct.rtx_def* %5, %struct.rtx_def* %call) #2
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %list.023, i64 0, i32 1, i64 1
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx9, align 8, !tbaa !5
  %tobool = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.pre = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !5
  %.pre24 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader
  %7 = phi %struct.equivalence* [ %.pre24, %for.cond.for.end_crit_edge ], [ %2, %for.cond.preheader ]
  %8 = phi %struct.rtx_def* [ %.pre, %for.cond.for.end_crit_edge ], [ %4, %for.cond.preheader ]
  %init_insns12 = getelementptr inbounds %struct.equivalence* %7, i64 %idxprom, i32 4
  store %struct.rtx_def* %8, %struct.rtx_def** %init_insns12, align 8, !tbaa !12
  %9 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replacement = getelementptr inbounds %struct.equivalence* %9, i64 %idxprom, i32 1
  store %struct.rtx_def* null, %struct.rtx_def** %replacement, align 8, !tbaa !14
  br label %return

return:                                           ; preds = %entry, %if.end, %for.end
  ret void
}

; Function Attrs: nounwind readonly uwtable
define internal fastcc i32 @contains_replace_regs(%struct.rtx_def* nocapture readonly %x) #4 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 54, label %return
    i32 58, label %return
    i32 67, label %return
    i32 68, label %return
    i32 55, label %return
    i32 56, label %return
    i32 59, label %return
    i32 69, label %return
    i32 134, label %return
    i32 61, label %sw.bb1
  ]

sw.bb1:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom = zext i32 %1 to i64
  %2 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replace = getelementptr inbounds %struct.equivalence* %2, i64 %idxprom, i32 0
  %3 = load i8* %replace, align 1, !tbaa !24
  %conv = sext i8 %3 to i32
  br label %return

sw.epilog:                                        ; preds = %entry
  %idxprom352 = zext i32 %bf.clear to i64
  %arrayidx4 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom352
  %4 = load i8** %arrayidx4, align 8, !tbaa !5
  %arrayidx6 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom352
  %5 = load i8* %arrayidx6, align 1, !tbaa !11
  %cmp55 = icmp eq i8 %5, 0
  br i1 %cmp55, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %6 = zext i8 %5 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv58 = phi i64 [ %6, %for.body.lr.ph ], [ %indvars.iv.next59, %for.cond.backedge ]
  %indvars.iv.next59 = add nsw i64 %indvars.iv58, -1
  %arrayidx10 = getelementptr inbounds i8* %4, i64 %indvars.iv.next59
  %7 = load i8* %arrayidx10, align 1, !tbaa !11
  %conv11 = sext i8 %7 to i32
  switch i32 %conv11, label %for.cond.backedge [
    i32 101, label %sw.bb12
    i32 69, label %sw.bb16
  ]

sw.bb12:                                          ; preds = %for.body
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next59
  %rtx = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %call = tail call fastcc i32 @contains_replace_regs(%struct.rtx_def* %8)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.cond.backedge, label %return

for.cond.backedge:                                ; preds = %for.cond21, %sw.bb12, %for.body
  %9 = trunc i64 %indvars.iv.next59 to i32
  %cmp = icmp sgt i32 %9, 0
  br i1 %cmp, label %for.body, label %return

sw.bb16:                                          ; preds = %for.body
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next59
  %rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**
  %10 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 0
  %11 = load i32* %num_elem, align 4, !tbaa !15
  %12 = sext i32 %11 to i64
  br label %for.cond21

for.cond21:                                       ; preds = %for.body24, %sw.bb16
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body24 ], [ %12, %sw.bb16 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %13 = trunc i64 %indvars.iv to i32
  %cmp22 = icmp sgt i32 %13, 0
  br i1 %cmp22, label %for.body24, label %for.cond.backedge

for.body24:                                       ; preds = %for.cond21
  %arrayidx30 = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 1, i64 %indvars.iv.next
  %14 = load %struct.rtx_def** %arrayidx30, align 8, !tbaa !5
  %call31 = tail call fastcc i32 @contains_replace_regs(%struct.rtx_def* %14)
  %tobool32 = icmp eq i32 %call31, 0
  br i1 %tobool32, label %for.cond21, label %return

return:                                           ; preds = %sw.bb12, %for.cond.backedge, %for.body24, %sw.epilog, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb1
  %retval.0 = phi i32 [ %conv, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %sw.epilog ], [ 1, %for.body24 ], [ 1, %sw.bb12 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @validate_equiv_mem(%struct.rtx_def* %start, %struct.rtx_def* %reg, %struct.rtx_def* %memref) #0 {
entry:
  store %struct.rtx_def* %memref, %struct.rtx_def** @equiv_mem, align 8, !tbaa !5
  store i1 false, i1* @equiv_mem_modified, align 1
  %call = tail call i32 @side_effects_p(%struct.rtx_def* %memref) #2
  %tobool = icmp ne i32 %call, 0
  %tobool186 = icmp eq %struct.rtx_def* %start, null
  %or.cond = or i1 %tobool, %tobool186
  br i1 %or.cond, label %return, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %memref, i64 0, i32 0
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.inc60
  %insn.087 = phi %struct.rtx_def* [ %start, %land.rhs.lr.ph ], [ %10, %for.inc60 ]
  %.b = load i1* @equiv_mem_modified, align 1
  br i1 %.b, label %return, label %for.body

for.body:                                         ; preds = %land.rhs
  %1 = getelementptr inbounds %struct.rtx_def* %insn.087, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom80 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom80
  %2 = load i8* %arrayidx, align 1, !tbaa !11
  %cmp = icmp eq i8 %2, 105
  br i1 %cmp, label %if.end5, label %for.inc60

if.end5:                                          ; preds = %for.body
  %call6 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.087, i32 1, %struct.rtx_def* %reg) #2
  %tobool7 = icmp eq %struct.rtx_def* %call6, null
  br i1 %tobool7, label %if.end9, label %return

if.end9:                                          ; preds = %if.end5
  %bf.load10 = load i32* %1, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 34
  br i1 %cmp12, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %if.end9
  %bf.load14 = load i32* %0, align 8
  %3 = or i32 %bf.load14, %bf.load10
  %4 = and i32 %3, 67108864
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %return, label %if.end23

if.end23:                                         ; preds = %land.lhs.true, %if.end9
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %insn.087, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  tail call void @note_stores(%struct.rtx_def* %6, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @validate_equiv_mem_from_store, i8* null) #2
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %insn.087, i64 0, i32 1, i64 6
  %note.0.in82 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %note.083 = load %struct.rtx_def** %note.0.in82, align 8
  %tobool2984 = icmp eq %struct.rtx_def* %note.083, null
  br i1 %tobool2984, label %for.inc60, label %for.body30

for.body30:                                       ; preds = %if.end23, %for.inc
  %note.085 = phi %struct.rtx_def* [ %note.0, %for.inc ], [ %note.083, %if.end23 ]
  %7 = getelementptr inbounds %struct.rtx_def* %note.085, i64 0, i32 0
  %bf.load31 = load i32* %7, align 8
  %bf.lshr32 = lshr i32 %bf.load31, 16
  %bf.clear33 = and i32 %bf.lshr32, 255
  %bf.clear33.off = add i32 %bf.clear33, -1
  %switch = icmp ult i32 %bf.clear33.off, 2
  br i1 %switch, label %land.lhs.true41, label %for.inc

land.lhs.true41:                                  ; preds = %for.body30
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %note.085, i64 0, i32 1, i64 0
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx44, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load45 = load i32* %9, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %cmp47 = icmp eq i32 %bf.clear46, 61
  br i1 %cmp47, label %land.lhs.true49, label %for.inc

land.lhs.true49:                                  ; preds = %land.lhs.true41
  %call53 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %8, %struct.rtx_def* %memref) #2
  %tobool54 = icmp eq i32 %call53, 0
  br i1 %tobool54, label %for.inc, label %return

for.inc:                                          ; preds = %for.body30, %land.lhs.true49, %land.lhs.true41
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %note.085, i64 0, i32 1, i64 1
  %note.0.in = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %note.0 = load %struct.rtx_def** %note.0.in, align 8
  %tobool29 = icmp eq %struct.rtx_def* %note.0, null
  br i1 %tobool29, label %for.inc60, label %for.body30

for.inc60:                                        ; preds = %for.inc, %if.end23, %for.body
  %arrayidx62 = getelementptr inbounds %struct.rtx_def* %insn.087, i64 0, i32 1, i64 2
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx63, align 8, !tbaa !5
  %tobool1 = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool1, label %return, label %land.rhs

return:                                           ; preds = %if.end5, %land.lhs.true, %land.rhs, %for.inc60, %land.lhs.true49, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %land.lhs.true49 ], [ 1, %if.end5 ], [ 0, %land.lhs.true ], [ 0, %land.rhs ], [ 0, %for.inc60 ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @rtx_varies_p(%struct.rtx_def*, i32) #1

declare %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_ue(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %x) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 66, label %sw.bb
    i32 71, label %return
    i32 58, label %sw.bb5
    i32 54, label %sw.bb5
    i32 55, label %sw.bb5
    i32 56, label %sw.bb5
    i32 68, label %sw.bb5
    i32 67, label %sw.bb5
    i32 61, label %sw.bb6
    i32 41, label %sw.bb13
  ]

sw.bb:                                            ; preds = %entry
  %bf.clear2 = and i32 %bf.load, 67108864
  %tobool = icmp eq i32 %bf.clear2, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %sw.bb
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %call = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %1)
  %tobool3 = icmp ne i32 %call, 0
  br label %lor.end

lor.end:                                          ; preds = %sw.bb, %lor.rhs
  %2 = phi i1 [ true, %sw.bb ], [ %tobool3, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32
  br label %return

sw.bb5:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  br label %return

sw.bb6:                                           ; preds = %entry
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom = zext i32 %3 to i64
  %4 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replace = getelementptr inbounds %struct.equivalence* %4, i64 %idxprom, i32 0
  %5 = load i8* %replace, align 1, !tbaa !24
  %cmp = icmp eq i8 %5, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb6
  %call11 = tail call i32 @rtx_varies_p(%struct.rtx_def* %x, i32 0) #2
  %tobool12 = icmp ne i32 %call11, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb6
  %6 = phi i1 [ false, %sw.bb6 ], [ %tobool12, %land.rhs ]
  %land.ext = zext i1 %6 to i32
  br label %return

sw.bb13:                                          ; preds = %entry
  %bf.clear16 = and i32 %bf.load, 134217728
  %tobool17 = icmp eq i32 %bf.clear16, 0
  br i1 %tobool17, label %sw.epilog, label %return

sw.epilog:                                        ; preds = %sw.bb13, %entry
  %idxprom1884 = zext i32 %bf.clear to i64
  %arrayidx19 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom1884
  %7 = load i8** %arrayidx19, align 8, !tbaa !5
  %arrayidx21 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom1884
  %8 = load i8* %arrayidx21, align 1, !tbaa !11
  %cmp2390 = icmp eq i8 %8, 0
  br i1 %cmp2390, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %9 = zext i8 %8 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv93 = phi i64 [ %9, %for.body.lr.ph ], [ %indvars.iv.next94, %for.cond.backedge ]
  %indvars.iv.next94 = add nsw i64 %indvars.iv93, -1
  %arrayidx26 = getelementptr inbounds i8* %7, i64 %indvars.iv.next94
  %10 = load i8* %arrayidx26, align 1, !tbaa !11
  switch i8 %10, label %for.cond.backedge [
    i8 101, label %if.then30
    i8 69, label %for.cond45.preheader
  ]

for.cond.backedge:                                ; preds = %for.cond45, %for.cond45.preheader, %for.body, %if.then30
  %11 = trunc i64 %indvars.iv.next94 to i32
  %cmp23 = icmp sgt i32 %11, 0
  br i1 %cmp23, label %for.body, label %return

for.cond45.preheader:                             ; preds = %for.body
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next94
  %rtvec = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtvec_def**
  %12 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem86 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  %13 = load i32* %num_elem86, align 4, !tbaa !15
  %cmp4987 = icmp sgt i32 %13, 0
  br i1 %cmp4987, label %for.body51, label %for.cond.backedge

if.then30:                                        ; preds = %for.body
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next94
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx34, align 8, !tbaa !5
  %call35 = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %14)
  %tobool36 = icmp eq i32 %call35, 0
  br i1 %tobool36, label %for.cond.backedge, label %return

for.cond45:                                       ; preds = %for.body51
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0
  %16 = load i32* %num_elem, align 4, !tbaa !15
  %17 = trunc i64 %indvars.iv.next to i32
  %cmp49 = icmp slt i32 %17, %16
  br i1 %cmp49, label %for.body51, label %for.cond.backedge

for.body51:                                       ; preds = %for.cond45.preheader, %for.cond45
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond45 ], [ 0, %for.cond45.preheader ]
  %18 = phi %struct.rtvec_def* [ %15, %for.cond45 ], [ %12, %for.cond45.preheader ]
  %arrayidx57 = getelementptr inbounds %struct.rtvec_def* %18, i64 0, i32 1, i64 %indvars.iv
  %19 = load %struct.rtx_def** %arrayidx57, align 8, !tbaa !5
  %call58 = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %19)
  %tobool59 = icmp eq i32 %call58, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %tobool59, label %for.cond45, label %return

return:                                           ; preds = %if.then30, %for.cond.backedge, %for.body51, %sw.epilog, %sw.bb13, %entry, %land.end, %sw.bb5, %lor.end
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ 0, %sw.bb5 ], [ %lor.ext, %lor.end ], [ 1, %entry ], [ 1, %sw.bb13 ], [ 0, %sw.epilog ], [ 1, %for.body51 ], [ 1, %if.then30 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @equiv_init_movable_p(%struct.rtx_def* %x, i32 %regno) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %sw.bb, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %1, %sw.bb ]
  %0 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog.loopexit [
    i32 47, label %sw.bb
    i32 69, label %return
    i32 49, label %return
    i32 97, label %return
    i32 96, label %return
    i32 99, label %return
    i32 98, label %return
    i32 100, label %return
    i32 101, label %return
    i32 61, label %sw.bb3
    i32 43, label %return
    i32 41, label %sw.bb25
  ]

sw.bb:                                            ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  br label %tailrecurse

sw.bb3:                                           ; preds = %tailrecurse
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom = zext i32 %2 to i64
  %3 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %loop_depth = getelementptr inbounds %struct.equivalence* %3, i64 %idxprom, i32 3
  %4 = load i32* %loop_depth, align 4, !tbaa !21
  %idxprom7 = sext i32 %regno to i64
  %loop_depth9 = getelementptr inbounds %struct.equivalence* %3, i64 %idxprom7, i32 3
  %5 = load i32* %loop_depth9, align 4, !tbaa !21
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %lor.rhs, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.bb3
  %replace = getelementptr inbounds %struct.equivalence* %3, i64 %idxprom, i32 0
  %6 = load i8* %replace, align 1, !tbaa !24
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %land.lhs.true, %sw.bb3
  %7 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx19 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom
  %8 = load %struct.reg_info_def** %arrayidx19, align 8, !tbaa !5
  %basic_block = getelementptr inbounds %struct.reg_info_def* %8, i64 0, i32 9
  %9 = load i32* %basic_block, align 4, !tbaa !17
  %cmp20 = icmp slt i32 %9, 0
  br i1 %cmp20, label %land.rhs, label %lor.end

land.rhs:                                         ; preds = %lor.rhs
  %call22 = tail call i32 @rtx_varies_p(%struct.rtx_def* %x.tr, i32 0) #2
  %lnot = icmp eq i32 %call22, 0
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.lhs.true ], [ false, %lor.rhs ], [ %lnot, %land.rhs ]
  %lor.ext = zext i1 %10 to i32
  br label %return

sw.bb25:                                          ; preds = %tailrecurse
  %bf.clear27 = and i32 %bf.load, 134217728
  %tobool28 = icmp eq i32 %bf.clear27, 0
  br i1 %tobool28, label %sw.epilog, label %return

sw.epilog.loopexit:                               ; preds = %tailrecurse
  %phitmp = zext i32 %bf.clear to i64
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb25
  %bf.clear120 = phi i64 [ %phitmp, %sw.epilog.loopexit ], [ 41, %sw.bb25 ]
  %arrayidx30 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %bf.clear120
  %11 = load i8** %arrayidx30, align 8, !tbaa !5
  %arrayidx32 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %bf.clear120
  %12 = load i8* %arrayidx32, align 1, !tbaa !11
  %cmp34107 = icmp eq i8 %12, 0
  br i1 %cmp34107, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %13 = zext i8 %12 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv121 = phi i64 [ %13, %for.body.lr.ph ], [ %indvars.iv.next122, %for.cond.backedge ]
  %indvars.iv.next122 = add nsw i64 %indvars.iv121, -1
  %arrayidx37 = getelementptr inbounds i8* %11, i64 %indvars.iv.next122
  %14 = load i8* %arrayidx37, align 1, !tbaa !11
  %conv38 = sext i8 %14 to i32
  switch i32 %conv38, label %for.cond.backedge [
    i32 101, label %sw.bb39
    i32 69, label %sw.bb48
  ]

sw.bb39:                                          ; preds = %for.body
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 %indvars.iv.next122
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx43, align 8, !tbaa !5
  %call44 = tail call fastcc i32 @equiv_init_movable_p(%struct.rtx_def* %15, i32 %regno)
  %tobool45 = icmp eq i32 %call44, 0
  br i1 %tobool45, label %return, label %for.cond.backedge

for.cond.backedge:                                ; preds = %for.cond53, %sw.bb39, %for.body
  %16 = trunc i64 %indvars.iv.next122 to i32
  %cmp34 = icmp sgt i32 %16, 0
  br i1 %cmp34, label %for.body, label %return

sw.bb48:                                          ; preds = %for.body
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 %indvars.iv.next122
  %rtvec = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtvec_def**
  %17 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %17, i64 0, i32 0
  %18 = load i32* %num_elem, align 4, !tbaa !15
  %19 = sext i32 %18 to i64
  br label %for.cond53

for.cond53:                                       ; preds = %for.body56, %sw.bb48
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body56 ], [ %19, %sw.bb48 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %20 = trunc i64 %indvars.iv to i32
  %cmp54 = icmp sgt i32 %20, 0
  br i1 %cmp54, label %for.body56, label %for.cond.backedge

for.body56:                                       ; preds = %for.cond53
  %21 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %arrayidx62 = getelementptr inbounds %struct.rtvec_def* %21, i64 0, i32 1, i64 %indvars.iv.next
  %22 = load %struct.rtx_def** %arrayidx62, align 8, !tbaa !5
  %call63 = tail call fastcc i32 @equiv_init_movable_p(%struct.rtx_def* %22, i32 %regno)
  %tobool64 = icmp eq i32 %call63, 0
  br i1 %tobool64, label %return, label %for.cond53

return:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %sw.bb39, %for.cond.backedge, %for.body56, %sw.epilog, %sw.bb25, %lor.end
  %retval.0 = phi i32 [ %lor.ext, %lor.end ], [ 0, %sw.bb25 ], [ 1, %sw.epilog ], [ 0, %for.body56 ], [ 0, %sw.bb39 ], [ 1, %for.cond.backedge ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ]
  ret i32 %retval.0
}

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare zeroext i1 @can_throw_internal(%struct.rtx_def*) #1

declare i32 @asm_noperands(%struct.rtx_def*) #1

declare i32 @validate_replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @remove_death(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @delete_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @bitmap_set_bit(%struct.bitmap_head_def*, i32) #1

declare i32 @bitmap_operation(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32) #1

declare void @bitmap_clear_bit(%struct.bitmap_head_def*, i32) #1

declare void @end_alias_analysis() #1

declare void @bitmap_clear(%struct.bitmap_head_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %x) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.end36, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %8, %if.end36 ]
  %0 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog.loopexit [
    i32 54, label %return
    i32 58, label %return
    i32 67, label %return
    i32 68, label %return
    i32 55, label %return
    i32 56, label %return
    i32 59, label %return
    i32 69, label %return
    i32 134, label %return
    i32 135, label %return
    i32 61, label %sw.bb1
    i32 66, label %sw.bb10
    i32 47, label %sw.bb13
  ]

sw.bb1:                                           ; preds = %tailrecurse
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %idxprom = zext i32 %1 to i64
  %2 = load %struct.equivalence** @reg_equiv, align 8, !tbaa !5
  %replacement = getelementptr inbounds %struct.equivalence* %2, i64 %idxprom, i32 1
  %3 = load %struct.rtx_def** %replacement, align 8, !tbaa !14
  %tobool = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %sw.bb1
  %call = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %3)
  %tobool9 = icmp ne i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %sw.bb1, %land.rhs
  %4 = phi i1 [ false, %sw.bb1 ], [ %tobool9, %land.rhs ]
  %land.ext = zext i1 %4 to i32
  br label %return

sw.bb10:                                          ; preds = %tailrecurse
  %call11 = tail call i32 @true_dependence(%struct.rtx_def* %memref, i32 0, %struct.rtx_def* %x.tr, i32 (%struct.rtx_def*, i32)* @rtx_varies_p) #2
  %tobool12 = icmp eq i32 %call11, 0
  br i1 %tobool12, label %sw.epilog, label %return

sw.bb13:                                          ; preds = %tailrecurse
  %fld14 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld14 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load16 = load i32* %6, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp = icmp eq i32 %bf.clear17, 66
  br i1 %cmp, label %if.then18, label %if.else

if.then18:                                        ; preds = %sw.bb13
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx24, align 8, !tbaa !5
  %call25 = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %7)
  %tobool26 = icmp eq i32 %call25, 0
  br i1 %tobool26, label %if.end36, label %return

if.else:                                          ; preds = %sw.bb13
  %call32 = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %5)
  %tobool33 = icmp eq i32 %call32, 0
  br i1 %tobool33, label %if.end36, label %return

if.end36:                                         ; preds = %if.then18, %if.else
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx39, align 8, !tbaa !5
  br label %tailrecurse

sw.epilog.loopexit:                               ; preds = %tailrecurse
  %phitmp = zext i32 %bf.clear to i64
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb10
  %bf.clear128 = phi i64 [ %phitmp, %sw.epilog.loopexit ], [ 66, %sw.bb10 ]
  %arrayidx42 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %bf.clear128
  %9 = load i8** %arrayidx42, align 8, !tbaa !5
  %arrayidx44 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %bf.clear128
  %10 = load i8* %arrayidx44, align 1, !tbaa !11
  %cmp45118 = icmp eq i8 %10, 0
  br i1 %cmp45118, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %11 = zext i8 %10 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv129 = phi i64 [ %11, %for.body.lr.ph ], [ %indvars.iv.next130, %for.cond.backedge ]
  %indvars.iv.next130 = add nsw i64 %indvars.iv129, -1
  %arrayidx48 = getelementptr inbounds i8* %9, i64 %indvars.iv.next130
  %12 = load i8* %arrayidx48, align 1, !tbaa !11
  %conv49 = sext i8 %12 to i32
  switch i32 %conv49, label %for.cond.backedge [
    i32 101, label %sw.bb50
    i32 69, label %sw.bb59
  ]

sw.bb50:                                          ; preds = %for.body
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 %indvars.iv.next130
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx54, align 8, !tbaa !5
  %call55 = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %13)
  %tobool56 = icmp eq i32 %call55, 0
  br i1 %tobool56, label %for.cond.backedge, label %return

for.cond.backedge:                                ; preds = %for.cond64, %sw.bb50, %for.body
  %14 = trunc i64 %indvars.iv.next130 to i32
  %cmp45 = icmp sgt i32 %14, 0
  br i1 %cmp45, label %for.body, label %return

sw.bb59:                                          ; preds = %for.body
  %arrayidx62 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 %indvars.iv.next130
  %rtvec = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtvec_def**
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0
  %16 = load i32* %num_elem, align 4, !tbaa !15
  %17 = sext i32 %16 to i64
  br label %for.cond64

for.cond64:                                       ; preds = %for.body67, %sw.bb59
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body67 ], [ %17, %sw.bb59 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %18 = trunc i64 %indvars.iv to i32
  %cmp65 = icmp sgt i32 %18, 0
  br i1 %cmp65, label %for.body67, label %for.cond.backedge

for.body67:                                       ; preds = %for.cond64
  %19 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %arrayidx73 = getelementptr inbounds %struct.rtvec_def* %19, i64 0, i32 1, i64 %indvars.iv.next
  %20 = load %struct.rtx_def** %arrayidx73, align 8, !tbaa !5
  %call74 = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %20)
  %tobool75 = icmp eq i32 %call74, 0
  br i1 %tobool75, label %for.cond64, label %return

return:                                           ; preds = %if.else, %if.then18, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %sw.bb50, %for.cond.backedge, %for.body67, %sw.epilog, %sw.bb10, %land.end
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ 1, %sw.bb10 ], [ 0, %sw.epilog ], [ 1, %for.body67 ], [ 1, %sw.bb50 ], [ 0, %for.cond.backedge ], [ 1, %if.else ], [ 1, %if.then18 ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ]
  ret i32 %retval.0
}

declare i32 @true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, i32 (%struct.rtx_def*, i32)*) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @validate_equiv_mem_from_store(%struct.rtx_def* %dest, %struct.rtx_def* nocapture readnone %set, i8* nocapture readnone %data) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def** @equiv_mem, align 8, !tbaa !5
  %call = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %dest, %struct.rtx_def* %1) #2
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %land.lhs.true.lor.lhs.false_crit_edge, label %if.then

land.lhs.true.lor.lhs.false_crit_edge:            ; preds = %land.lhs.true
  %bf.load1.pre = load i32* %0, align 8
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.lor.lhs.false_crit_edge, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %land.lhs.true.lor.lhs.false_crit_edge ], [ %bf.load, %entry ]
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 66
  br i1 %cmp3, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %lor.lhs.false
  %2 = load %struct.rtx_def** @equiv_mem, align 8, !tbaa !5
  %call5 = tail call i32 @true_dependence(%struct.rtx_def* %dest, i32 0, %struct.rtx_def* %2, i32 (%struct.rtx_def*, i32)* @rtx_varies_p) #2
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true4
  store i1 true, i1* @equiv_mem_modified, align 1
  br label %if.end

if.end:                                           ; preds = %land.lhs.true4, %if.then, %lor.lhs.false
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !2, i64 92}
!8 = metadata !{metadata !"basic_block_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !2, i64 88, metadata !2, i64 92, metadata !9, i64 96, metadata !2, i64 104, metadata !2, i64 108}
!9 = metadata !{metadata !"long long", metadata !3, i64 0}
!10 = metadata !{metadata !8, metadata !6, i64 8}
!11 = metadata !{metadata !3, metadata !3, i64 0}
!12 = metadata !{metadata !13, metadata !6, i64 32}
!13 = metadata !{metadata !"equivalence", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !2, i64 24, metadata !6, i64 32}
!14 = metadata !{metadata !13, metadata !6, i64 8}
!15 = metadata !{metadata !16, metadata !2, i64 0}
!16 = metadata !{metadata !"rtvec_def", metadata !2, i64 0, metadata !3, i64 8}
!17 = metadata !{metadata !18, metadata !2, i64 36}
!18 = metadata !{metadata !"reg_info_def", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !2, i64 28, metadata !2, i64 32, metadata !2, i64 36, metadata !3, i64 40}
!19 = metadata !{metadata !18, metadata !2, i64 12}
!20 = metadata !{metadata !13, metadata !6, i64 16}
!21 = metadata !{metadata !13, metadata !2, i64 24}
!22 = metadata !{metadata !18, metadata !2, i64 28}
!23 = metadata !{metadata !18, metadata !2, i64 16}
!24 = metadata !{metadata !13, metadata !3, i64 0}
!25 = metadata !{metadata !8, metadata !6, i64 0}
!26 = metadata !{metadata !27, metadata !6, i64 24}
!27 = metadata !{metadata !"function", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !2, i64 64, metadata !2, i64 68, metadata !2, i64 72, metadata !2, i64 76, metadata !6, i64 80, metadata !28, i64 88, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !2, i64 152, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !9, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !2, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !2, i64 328, metadata !2, i64 332, metadata !2, i64 336, metadata !6, i64 344, metadata !2, i64 352, metadata !2, i64 356, metadata !6, i64 360, metadata !6, i64 368, metadata !6, i64 376, metadata !2, i64 384, metadata !2, i64 388, metadata !6, i64 392, metadata !2, i64 400, metadata !2, i64 404, metadata !6, i64 408, metadata !6, i64 416, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426}
!28 = metadata !{metadata !"ix86_args", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24}
!29 = metadata !{metadata !30, metadata !6, i64 80}
!30 = metadata !{metadata !"emit_status", metadata !2, i64 0, metadata !2, i64 4, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !2, i64 40, metadata !2, i64 44, metadata !6, i64 48, metadata !2, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80}
!31 = metadata !{metadata !18, metadata !2, i64 20}
!32 = metadata !{metadata !18, metadata !2, i64 32}
!33 = metadata !{metadata !8, metadata !6, i64 64}
!34 = metadata !{metadata !8, metadata !6, i64 72}
!35 = metadata !{metadata !36, metadata !6, i64 0}
!36 = metadata !{metadata !"bitmap_head_def", metadata !6, i64 0, metadata !6, i64 8, metadata !2, i64 16}
!37 = metadata !{metadata !9, metadata !9, i64 0}
!38 = metadata !{metadata !39, metadata !2, i64 16}
!39 = metadata !{metadata !"bitmap_element_def", metadata !6, i64 0, metadata !6, i64 8, metadata !2, i64 16, metadata !3, i64 24}
!40 = metadata !{metadata !39, metadata !6, i64 0}
!41 = metadata !{metadata !18, metadata !2, i64 24}
!42 = metadata !{metadata !43, metadata !43, i64 0}
!43 = metadata !{metadata !"short", metadata !3, i64 0}
!44 = metadata !{metadata !45, metadata !3, i64 28}
!45 = metadata !{metadata !"qty", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !3, i64 28, metadata !3, i64 32, metadata !3, i64 36, metadata !43, i64 40, metadata !3, i64 42}
!46 = metadata !{metadata !45, metadata !3, i64 36}
!47 = metadata !{metadata !45, metadata !2, i64 8}
!48 = metadata !{metadata !45, metadata !2, i64 12}
!49 = metadata !{metadata !45, metadata !43, i64 40}
!50 = metadata !{metadata !45, metadata !2, i64 0}
!51 = metadata !{metadata !45, metadata !2, i64 4}
!52 = metadata !{metadata !45, metadata !2, i64 16}
!53 = metadata !{metadata !45, metadata !3, i64 32}
!54 = metadata !{metadata !45, metadata !2, i64 24}
!55 = metadata !{metadata !18, metadata !3, i64 40}
!56 = metadata !{metadata !45, metadata !3, i64 42}
!57 = metadata !{metadata !45, metadata !2, i64 20}
