; ModuleID = 'jump.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }

@cfun = external global %struct.function*
@rtx_class = external constant [153 x i8]
@mode_class = external constant [59 x i32]
@flag_unsafe_math_optimizations = external global i32
@.str = private unnamed_addr constant [7 x i8] c"jump.c\00", align 1
@__FUNCTION__.reverse_condition = private unnamed_addr constant [18 x i8] c"reverse_condition\00", align 1
@__FUNCTION__.reverse_condition_maybe_unordered = private unnamed_addr constant [34 x i8] c"reverse_condition_maybe_unordered\00", align 1
@__FUNCTION__.swap_condition = private unnamed_addr constant [15 x i8] c"swap_condition\00", align 1
@__FUNCTION__.unsigned_condition = private unnamed_addr constant [19 x i8] c"unsigned_condition\00", align 1
@__FUNCTION__.signed_condition = private unnamed_addr constant [17 x i8] c"signed_condition\00", align 1
@global_rtl = external global [11 x %struct.rtx_def*]
@reload_completed = external global i32
@flag_test_coverage = external global i32
@__FUNCTION__.mark_jump_label = private unnamed_addr constant [16 x i8] c"mark_jump_label\00", align 1
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@__FUNCTION__.delete_barrier = private unnamed_addr constant [15 x i8] c"delete_barrier\00", align 1
@warn_notreached = external global i32
@.str1 = private unnamed_addr constant [23 x i8] c"will never be executed\00", align 1
@__FUNCTION__.invert_jump = private unnamed_addr constant [12 x i8] c"invert_jump\00", align 1
@reg_renumber = external global i16*
@__FUNCTION__.rtx_renumbered_equal_p = private unnamed_addr constant [23 x i8] c"rtx_renumbered_equal_p\00", align 1
@__FUNCTION__.invert_exp_1 = private unnamed_addr constant [13 x i8] c"invert_exp_1\00", align 1
@target_flags = external global i32
@mode_size = external constant [59 x i8]
@optimize = external global i32
@reg_n_info = external global %struct.varray_head_tag*
@__FUNCTION__.duplicate_loop_exit_test = private unnamed_addr constant [25 x i8] c"duplicate_loop_exit_test\00", align 1

; Function Attrs: nounwind uwtable
define void @rebuild_jump_labels(%struct.rtx_def* %f) #0 {
entry:
  %tobool3.i = icmp eq %struct.rtx_def* %f, null
  br i1 %tobool3.i, label %init_label_info.exit, label %for.body.i

for.body.i:                                       ; preds = %entry, %if.end45.i
  %insn.04.i = phi %struct.rtx_def* [ %7, %if.end45.i ], [ %f, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.04.i, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.end45.i [
    i32 36, label %if.then.i
    i32 33, label %if.then8.i
    i32 32, label %if.then20.i
    i32 34, label %if.then20.i
  ]

if.then.i:                                        ; preds = %for.body.i
  %bf.clear2.i = lshr i32 %bf.load.i, 28
  %bf.clear2.lobit.i = and i32 %bf.clear2.i, 1
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn.04.i, i64 0, i32 1, i64 3
  %rtint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  store i32 %bf.clear2.lobit.i, i32* %rtint.i, align 4, !tbaa !1
  br label %if.end45.i

if.then8.i:                                       ; preds = %for.body.i
  %1 = getelementptr inbounds %struct.rtx_def* %insn.04.i, i64 0, i32 1, i64 7, i32 0
  store i64 0, i64* %1, align 8, !tbaa !5
  br label %if.end45.i

if.then20.i:                                      ; preds = %for.body.i, %for.body.i
  %arrayidx22.i = getelementptr inbounds %struct.rtx_def* %insn.04.i, i64 0, i32 1, i64 6
  %rtx23.i = bitcast %union.rtunion_def* %arrayidx22.i to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx23.i, align 8, !tbaa !5
  %tobool251.i = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool251.i, label %if.end45.i, label %for.body26.lr.ph.i

for.body26.lr.ph.i:                               ; preds = %if.then20.i
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %insn.04.i, i64 0, i32 1, i64 3
  %rtx40.i = bitcast %union.rtunion_def* %arrayidx39.i to %struct.rtx_def**
  br label %for.body26.i

for.body26.i:                                     ; preds = %for.cond24.backedge.i, %for.body26.lr.ph.i
  %note.02.i = phi %struct.rtx_def* [ %2, %for.body26.lr.ph.i ], [ %3, %for.cond24.backedge.i ]
  %arrayidx28.i = getelementptr inbounds %struct.rtx_def* %note.02.i, i64 0, i32 1, i64 1
  %rtx29.i = bitcast %union.rtunion_def* %arrayidx28.i to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx29.i, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.rtx_def* %note.02.i, i64 0, i32 0
  %bf.load30.i = load i32* %4, align 8
  %bf.clear32.i = and i32 %bf.load30.i, 16711680
  %cmp33.i = icmp eq i32 %bf.clear32.i, 851968
  br i1 %cmp33.i, label %land.lhs.true.i, label %for.cond24.backedge.i

land.lhs.true.i:                                  ; preds = %for.body26.i
  %arrayidx36.i = getelementptr inbounds %struct.rtx_def* %note.02.i, i64 0, i32 1, i64 0
  %rtx37.i = bitcast %union.rtunion_def* %arrayidx36.i to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx37.i, align 8, !tbaa !5
  %6 = load %struct.rtx_def** %rtx40.i, align 8, !tbaa !5
  %call.i = tail call i32 @reg_mentioned_p(%struct.rtx_def* %5, %struct.rtx_def* %6) #7
  %tobool41.i = icmp eq i32 %call.i, 0
  br i1 %tobool41.i, label %if.then42.i, label %for.cond24.backedge.i

for.cond24.backedge.i:                            ; preds = %if.then42.i, %land.lhs.true.i, %for.body26.i
  %tobool25.i = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool25.i, label %if.end45.i, label %for.body26.i

if.then42.i:                                      ; preds = %land.lhs.true.i
  tail call void @remove_note(%struct.rtx_def* %insn.04.i, %struct.rtx_def* %note.02.i) #7
  br label %for.cond24.backedge.i

if.end45.i:                                       ; preds = %for.cond24.backedge.i, %if.then20.i, %if.then8.i, %if.then.i, %for.body.i
  %arrayidx58.i = getelementptr inbounds %struct.rtx_def* %insn.04.i, i64 0, i32 1, i64 2
  %rtx59.i = bitcast %union.rtunion_def* %arrayidx58.i to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx59.i, align 8, !tbaa !5
  %tobool.i = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool.i, label %init_label_info.exit, label %for.body.i

init_label_info.exit:                             ; preds = %if.end45.i, %entry
  tail call fastcc void @mark_all_labels(%struct.rtx_def* %f)
  %8 = load %struct.function** @cfun, align 8, !tbaa !5
  %expr = getelementptr inbounds %struct.function* %8, i64 0, i32 2
  %9 = load %struct.expr_status** %expr, align 8, !tbaa !7
  %x_forced_labels = getelementptr inbounds %struct.expr_status* %9, i64 0, i32 5
  %insn.013 = load %struct.rtx_def** %x_forced_labels, align 8
  %tobool14 = icmp eq %struct.rtx_def* %insn.013, null
  br i1 %tobool14, label %for.end, label %for.body

for.body:                                         ; preds = %init_label_info.exit, %for.inc
  %insn.015 = phi %struct.rtx_def* [ %insn.0, %for.inc ], [ %insn.013, %init_label_info.exit ]
  %fld = getelementptr inbounds %struct.rtx_def* %insn.015, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load = load i32* %11, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 36
  br i1 %cmp, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %12 = load i32* %rtint, align 4, !tbaa !1
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %rtint, align 4, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %insn.015, i64 0, i32 1, i64 1
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx8, align 8
  %tobool = icmp eq %struct.rtx_def* %insn.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %init_label_info.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_all_labels(%struct.rtx_def* %f) #0 {
entry:
  %tobool126 = icmp eq %struct.rtx_def* %f, null
  br i1 %tobool126, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %insn.0127 = phi %struct.rtx_def* [ %21, %for.inc ], [ %f, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.0127, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom123 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom123
  %1 = load i8* %arrayidx, align 1, !tbaa !11
  %cmp = icmp eq i8 %1, 105
  br i1 %cmp, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %cmp4 = icmp eq i32 %bf.clear, 34
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %insn.0127, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  br i1 %cmp4, label %land.lhs.true, label %if.end53

land.lhs.true:                                    ; preds = %if.then
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load7 = load i32* %3, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 141
  br i1 %cmp9, label %if.then11, label %if.end53

if.then11:                                        ; preds = %land.lhs.true
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx17, align 8, !tbaa !5
  tail call fastcc void @mark_all_labels(%struct.rtx_def* %4)
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 1
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx23, align 8, !tbaa !5
  tail call fastcc void @mark_all_labels(%struct.rtx_def* %6)
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 2
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx29, align 8, !tbaa !5
  tail call fastcc void @mark_all_labels(%struct.rtx_def* %8)
  %9 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 3
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx35, align 8, !tbaa !5
  %tobool36 = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool36, label %for.inc, label %if.then37

if.then37:                                        ; preds = %if.then11
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %10) #7
  tail call void @mark_jump_label(%struct.rtx_def* %call, %struct.rtx_def* %insn.0127, i32 0)
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx46, align 8, !tbaa !5
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 3, i32 0
  %.c125 = ptrtoint %struct.rtx_def* %11 to i64
  store i64 %.c125, i64* %13, align 8, !tbaa !5
  br label %for.inc

if.end53:                                         ; preds = %if.then, %land.lhs.true
  tail call void @mark_jump_label(%struct.rtx_def* %2, %struct.rtx_def* %insn.0127, i32 0)
  %bf.load57 = load i32* %0, align 8
  %14 = and i32 %bf.load57, 134283263
  %15 = icmp eq i32 %14, 33
  br i1 %15, label %if.then65, label %for.inc

if.then65:                                        ; preds = %if.end53
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %insn.0127, i64 0, i32 1, i64 7
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx68, align 8, !tbaa !5
  %cmp69 = icmp eq %struct.rtx_def* %16, null
  br i1 %cmp69, label %if.then71, label %for.inc

if.then71:                                        ; preds = %if.then65
  %call72 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0127, i32 13, %struct.rtx_def* null) #7
  %tobool73 = icmp eq %struct.rtx_def* %call72, null
  br i1 %tobool73, label %for.inc, label %if.then74

if.then74:                                        ; preds = %if.then71
  %arrayidx77 = getelementptr inbounds %struct.rtx_def* %call72, i64 0, i32 1, i64 0
  %rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx78, align 8, !tbaa !5
  %call79 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %17) #7
  tail call void @mark_jump_label(%struct.rtx_def* %call79, %struct.rtx_def* %insn.0127, i32 0)
  %arrayidx81 = getelementptr inbounds %struct.rtx_def* %call79, i64 0, i32 1, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx82, align 8, !tbaa !5
  %19 = getelementptr inbounds %union.rtunion_def* %arrayidx77, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %18 to i64
  store i64 %.c, i64* %19, align 8, !tbaa !5
  %20 = getelementptr inbounds %union.rtunion_def* %arrayidx67, i64 0, i32 0
  store i64 %.c, i64* %20, align 8, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %if.then11, %if.then71, %if.end53, %for.body, %if.then65, %if.then74, %if.then37
  %arrayidx97 = getelementptr inbounds %struct.rtx_def* %insn.0127, i64 0, i32 1, i64 2
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx98, align 8, !tbaa !5
  %tobool = icmp eq %struct.rtx_def* %21, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @cleanup_barriers() #0 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #7
  %tobool22 = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool22, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.cond.backedge
  %insn.023 = phi %struct.rtx_def* [ %0, %for.cond.backedge ], [ %call, %entry ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.023, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %1 = getelementptr inbounds %struct.rtx_def* %insn.023, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 35
  br i1 %cmp, label %if.then, label %for.cond.backedge

if.then:                                          ; preds = %for.body
  %call1 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn.023) #7
  %2 = getelementptr inbounds %struct.rtx_def* %call1, i64 0, i32 0
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 35
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 35
  br i1 %cmp.i, label %delete_barrier.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then5
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1531, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.delete_barrier, i64 0, i64 0)) #8
  unreachable

delete_barrier.exit:                              ; preds = %if.then5
  %call.i = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn.023) #7
  br label %for.cond.backedge

if.else:                                          ; preds = %if.then
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %insn.023, i64 0, i32 1, i64 1
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx8, align 8, !tbaa !5
  %cmp9 = icmp eq %struct.rtx_def* %call1, %3
  br i1 %cmp9, label %for.cond.backedge, label %if.then10

for.cond.backedge:                                ; preds = %if.else, %for.body, %if.then10, %delete_barrier.exit
  %tobool = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool, label %for.end, label %for.body

if.then10:                                        ; preds = %if.else
  tail call void @reorder_insns(%struct.rtx_def* %insn.023, %struct.rtx_def* %insn.023, %struct.rtx_def* %call1) #7
  br label %for.cond.backedge

for.end:                                          ; preds = %for.cond.backedge, %entry
  ret void
}

declare %struct.rtx_def* @get_insns() #1

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @delete_barrier(%struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 35
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1531, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.delete_barrier, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #7
  ret void
}

declare void @reorder_insns(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @copy_loop_headers(%struct.rtx_def* %f) #0 {
entry:
  %tobool64 = icmp eq %struct.rtx_def* %f, null
  br i1 %tobool64, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %0 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 33), align 1
  %1 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 32), align 1
  %cmp61.i = icmp eq i8 %1, 105
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %insn.065 = phi %struct.rtx_def* [ %f, %for.body.lr.ph ], [ %insn.0.be, %for.cond.backedge ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.065, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.rtx_def* %insn.065, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 37
  br i1 %cmp, label %land.lhs.true, label %for.cond.backedge

land.lhs.true:                                    ; preds = %for.body
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn.065, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %4 = load i32* %rtint, align 4, !tbaa !1
  %cmp3 = icmp eq i32 %4, -96
  br i1 %cmp3, label %land.lhs.true4, label %for.cond.backedge

land.lhs.true4:                                   ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn.065) #7
  %cmp5 = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp5, label %for.cond.backedge, label %land.lhs.true6

for.cond.backedge:                                ; preds = %land.rhs5.i, %land.rhs5.i, %land.rhs.i, %land.rhs.i, %lor.lhs.false40.i, %lor.lhs.false37.i, %while.end.i, %for.inc.i, %if.end.i34, %any_uncondjump_p.exit, %land.lhs.true4, %for.body, %land.lhs.true, %if.then17, %land.lhs.true6, %land.lhs.true.i.i, %if.end8.i.i, %cond.end18.i, %if.end23.i, %for.end.i, %if.then, %onlyjump_p.exit
  %insn.0.be = phi %struct.rtx_def* [ %79, %if.then17 ], [ %2, %onlyjump_p.exit ], [ %2, %any_uncondjump_p.exit ], [ %2, %land.lhs.true4 ], [ %2, %land.lhs.true ], [ %2, %for.body ], [ %2, %land.lhs.true6 ], [ %2, %land.lhs.true.i.i ], [ %2, %if.end8.i.i ], [ %2, %cond.end18.i ], [ %2, %if.end23.i ], [ %2, %for.end.i ], [ %2, %if.then ], [ %2, %if.end.i34 ], [ %2, %for.inc.i ], [ %2, %while.end.i ], [ %2, %lor.lhs.false37.i ], [ %2, %lor.lhs.false40.i ], [ %2, %land.rhs.i ], [ %2, %land.rhs.i ], [ %2, %land.rhs5.i ], [ %2, %land.rhs5.i ]
  %tobool = icmp eq %struct.rtx_def* %insn.0.be, null
  br i1 %tobool, label %for.end, label %for.body

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %5 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load.i.i = load i32* %5, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 65535
  %cmp.i.i = icmp eq i32 %bf.clear.i.i, 33
  br i1 %cmp.i.i, label %if.end.i.i, label %for.cond.backedge

if.end.i.i:                                       ; preds = %land.lhs.true6
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3
  %rtx.i.i = bitcast %union.rtunion_def* %arrayidx.i.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load1.i.i = load i32* %7, align 8
  %bf.clear2.i.i = and i32 %bf.load1.i.i, 65535
  %cmp3.i.i = icmp eq i32 %bf.clear2.i.i, 39
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end8.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  %arrayidx6.i.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtvec.i.i = bitcast %union.rtunion_def* %arrayidx6.i.i to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec.i.i, align 8, !tbaa !5
  %arrayidx7.i.i = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 0
  %9 = load %struct.rtx_def** %arrayidx7.i.i, align 8, !tbaa !5
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load9.pre.i.i = load i32* %.phi.trans.insert.i.i, align 8
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then4.i.i, %if.end.i.i
  %bf.load9.i.i = phi i32 [ %bf.load9.pre.i.i, %if.then4.i.i ], [ %bf.load1.i.i, %if.end.i.i ]
  %pat.0.i.i = phi %struct.rtx_def* [ %9, %if.then4.i.i ], [ %6, %if.end.i.i ]
  %bf.clear10.i.i = and i32 %bf.load9.i.i, 65535
  %cmp11.i.i = icmp eq i32 %bf.clear10.i.i, 47
  br i1 %cmp11.i.i, label %land.lhs.true.i.i, label %for.cond.backedge

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %arrayidx13.i.i = getelementptr inbounds %struct.rtx_def* %pat.0.i.i, i64 0, i32 1, i64 0
  %rtx14.i.i = bitcast %union.rtunion_def* %arrayidx13.i.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx14.i.i, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load15.i.i = load i32* %11, align 8
  %bf.clear16.i.i = and i32 %bf.load15.i.i, 65535
  %cmp17.i.i = icmp ne i32 %bf.clear16.i.i, 59
  %tobool.i = icmp eq %struct.rtx_def* %pat.0.i.i, null
  %or.cond.i = or i1 %cmp17.i.i, %tobool.i
  br i1 %or.cond.i, label %for.cond.backedge, label %any_uncondjump_p.exit

any_uncondjump_p.exit:                            ; preds = %land.lhs.true.i.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %pat.0.i.i, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load.i = load i32* %13, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i.not = icmp ne i32 %bf.clear.i, 67
  %cmp3.i.not = icmp ne i8 %0, 105
  %brmerge = or i1 %cmp.i.not, %cmp3.i.not
  br i1 %brmerge, label %for.cond.backedge, label %cond.true.i51

cond.true.i51:                                    ; preds = %any_uncondjump_p.exit
  %cmp8.i = icmp eq i32 %bf.clear2.i.i, 47
  br i1 %cmp8.i, label %cond.end18.i, label %cond.false.i53

cond.false.i53:                                   ; preds = %cond.true.i51
  %call.i52 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call, %struct.rtx_def* %6) #7
  br label %cond.end18.i

cond.end18.i:                                     ; preds = %cond.false.i53, %cond.true.i51
  %cond19.i = phi %struct.rtx_def* [ %call.i52, %cond.false.i53 ], [ %6, %cond.true.i51 ]
  %cmp20.i = icmp eq %struct.rtx_def* %cond19.i, null
  br i1 %cmp20.i, label %for.cond.backedge, label %if.end23.i

if.end23.i:                                       ; preds = %cond.end18.i
  %fld24.i = getelementptr inbounds %struct.rtx_def* %cond19.i, i64 0, i32 1
  %rtx26.i = bitcast [1 x %union.rtunion_def]* %fld24.i to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx26.i, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load27.i = load i32* %15, align 8
  %bf.clear28.i = and i32 %bf.load27.i, 65535
  %cmp29.i = icmp eq i32 %bf.clear28.i, 59
  br i1 %cmp29.i, label %onlyjump_p.exit, label %for.cond.backedge

onlyjump_p.exit:                                  ; preds = %if.end23.i
  %arrayidx34.i = getelementptr inbounds %struct.rtx_def* %cond19.i, i64 0, i32 1, i64 1
  %rtx35.i = bitcast %union.rtunion_def* %arrayidx34.i to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx35.i, align 8, !tbaa !5
  %call36.i = tail call i32 @side_effects_p(%struct.rtx_def* %16) #7
  %tobool.i54 = icmp eq i32 %call36.i, 0
  br i1 %tobool.i54, label %if.then, label %for.cond.backedge

if.then:                                          ; preds = %onlyjump_p.exit
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %insn.065, i64 0, i32 1, i64 1
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx14, align 8, !tbaa !5
  %call.i = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn.065) #7
  %arrayidx.i29 = getelementptr inbounds %struct.rtx_def* %call.i, i64 0, i32 1, i64 7
  %rtx.i30 = bitcast %union.rtunion_def* %arrayidx.i29 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx.i30, align 8, !tbaa !5
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 2
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx3.i, align 8, !tbaa !5
  %call4.i = tail call i32 @max_reg_num() #7
  %cond517.i = icmp eq %struct.rtx_def* %19, null
  br i1 %cond517.i, label %for.cond.backedge, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then, %for.inc.i
  %insn.0519.i = phi %struct.rtx_def* [ %24, %for.inc.i ], [ %19, %if.then ]
  %num_insns.0518.i = phi i32 [ %num_insns.1.i, %for.inc.i ], [ 0, %if.then ]
  %20 = getelementptr inbounds %struct.rtx_def* %insn.0519.i, i64 0, i32 0
  %bf.load.i31 = load i32* %20, align 8
  %bf.clear.i32 = and i32 %bf.load.i31, 65535
  switch i32 %bf.clear.i32, label %for.inc.i [
    i32 37, label %land.rhs5.i
    i32 36, label %for.cond.backedge
    i32 34, label %for.cond.backedge
    i32 32, label %while.cond.preheader.i
    i32 33, label %while.cond.preheader.i
  ]

land.rhs5.i:                                      ; preds = %land.rhs.i
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def* %insn.0519.i, i64 0, i32 1, i64 4
  %rtint.i = bitcast %union.rtunion_def* %arrayidx7.i to i32*
  %21 = load i32* %rtint.i, align 4, !tbaa !1
  switch i32 %21, label %if.end.i34 [
    i32 -95, label %for.end.i
    i32 -96, label %for.cond.backedge
    i32 -94, label %for.cond.backedge
  ]

while.cond.preheader.i:                           ; preds = %land.rhs.i, %land.rhs.i
  %call34514.i = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0519.i, i32 5, %struct.rtx_def* null) #7
  %cmp35515.i = icmp eq %struct.rtx_def* %call34514.i, null
  br i1 %cmp35515.i, label %while.end.i, label %while.body.i

if.end.i34:                                       ; preds = %land.rhs5.i
  %22 = load i32* @optimize, align 4, !tbaa !1
  %cmp21.i = icmp slt i32 %22, 2
  %23 = and i32 %21, -2
  %switch.i = icmp eq i32 %23, -98
  %or.cond.i33 = and i1 %cmp21.i, %switch.i
  br i1 %or.cond.i33, label %for.cond.backedge, label %for.inc.i

while.body.i:                                     ; preds = %while.cond.preheader.i, %while.body.i
  %call34516.i = phi %struct.rtx_def* [ %call34.i, %while.body.i ], [ %call34514.i, %while.cond.preheader.i ]
  tail call void @remove_note(%struct.rtx_def* %insn.0519.i, %struct.rtx_def* %call34516.i) #7
  %call34.i = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0519.i, i32 5, %struct.rtx_def* null) #7
  %cmp35.i = icmp eq %struct.rtx_def* %call34.i, null
  br i1 %cmp35.i, label %while.end.i, label %while.body.i

while.end.i:                                      ; preds = %while.body.i, %while.cond.preheader.i
  %inc.i = add nsw i32 %num_insns.0518.i, 1
  %cmp36.i = icmp sgt i32 %num_insns.0518.i, 19
  br i1 %cmp36.i, label %for.cond.backedge, label %lor.lhs.false37.i

lor.lhs.false37.i:                                ; preds = %while.end.i
  %call38.i = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0519.i, i32 6, %struct.rtx_def* null) #7
  %tobool39.i = icmp eq %struct.rtx_def* %call38.i, null
  br i1 %tobool39.i, label %lor.lhs.false40.i, label %for.cond.backedge

lor.lhs.false40.i:                                ; preds = %lor.lhs.false37.i
  %call41.i = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0519.i, i32 7, %struct.rtx_def* null) #7
  %tobool42.i = icmp eq %struct.rtx_def* %call41.i, null
  br i1 %tobool42.i, label %for.inc.i, label %for.cond.backedge

for.inc.i:                                        ; preds = %lor.lhs.false40.i, %if.end.i34, %land.rhs.i
  %num_insns.1.i = phi i32 [ %inc.i, %lor.lhs.false40.i ], [ %num_insns.0518.i, %if.end.i34 ], [ %num_insns.0518.i, %land.rhs.i ]
  %arrayidx46.i = getelementptr inbounds %struct.rtx_def* %insn.0519.i, i64 0, i32 1, i64 2
  %rtx47.i = bitcast %union.rtunion_def* %arrayidx46.i to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx47.i, align 8, !tbaa !5
  %cond.i = icmp eq %struct.rtx_def* %24, null
  br i1 %cond.i, label %for.cond.backedge, label %land.rhs.i

for.end.i:                                        ; preds = %land.rhs5.i
  %cmp48.i = icmp eq %struct.rtx_def* %insn.0519.i, null
  br i1 %cmp48.i, label %for.cond.backedge, label %for.cond51.preheader.i

for.cond51.preheader.i:                           ; preds = %for.end.i
  %cmp52509.i = icmp eq %struct.rtx_def* %19, %insn.0519.i
  br i1 %cmp52509.i, label %for.end173.thread.i, label %for.body53.lr.ph.i

for.end173.thread.i:                              ; preds = %for.cond51.preheader.i
  %call174534.i = tail call %struct.rtx_def* @gen_label_rtx() #7
  br label %if.then354.i

for.body53.lr.ph.i:                               ; preds = %for.cond51.preheader.i
  %conv154.i = sext i32 %call4.i to i64
  br i1 %cmp61.i, label %for.body53.i.us, label %for.inc169.i

for.body53.i.us:                                  ; preds = %for.body53.lr.ph.i, %for.inc169.i.us
  %insn.1511.i.us = phi %struct.rtx_def* [ %41, %for.inc169.i.us ], [ %19, %for.body53.lr.ph.i ]
  %reg_map.0510.i.us = phi %struct.rtx_def** [ %reg_map.2.i.us, %for.inc169.i.us ], [ null, %for.body53.lr.ph.i ]
  %25 = getelementptr inbounds %struct.rtx_def* %insn.1511.i.us, i64 0, i32 0
  %bf.load54.i.us = load i32* %25, align 8
  %bf.clear55.i.us = and i32 %bf.load54.i.us, 65535
  %cmp56.i.us = icmp eq i32 %bf.clear55.i.us, 32
  br i1 %cmp56.i.us, label %cond.true.i.us, label %for.inc169.i.us

cond.true.i.us:                                   ; preds = %for.body53.i.us
  %arrayidx64.i.us = getelementptr inbounds %struct.rtx_def* %insn.1511.i.us, i64 0, i32 1, i64 3
  %rtx65.i.us = bitcast %union.rtunion_def* %arrayidx64.i.us to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx65.i.us, align 8, !tbaa !5
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load66.i.us = load i32* %27, align 8
  %bf.clear67.i.us = and i32 %bf.load66.i.us, 65535
  %cmp68.i.us = icmp eq i32 %bf.clear67.i.us, 47
  br i1 %cmp68.i.us, label %cond.end79.i.us, label %cond.false.i.us

cond.false.i.us:                                  ; preds = %cond.true.i.us
  %call77.i.us = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.1511.i.us, %struct.rtx_def* %26) #7
  br label %cond.end79.i.us

cond.end79.i.us:                                  ; preds = %cond.false.i.us, %cond.true.i.us
  %cond80.i.us = phi %struct.rtx_def* [ %call77.i.us, %cond.false.i.us ], [ %26, %cond.true.i.us ]
  %cmp81.i.us = icmp eq %struct.rtx_def* %cond80.i.us, null
  br i1 %cmp81.i.us, label %for.inc169.i.us, label %land.lhs.true83.i.us

land.lhs.true83.i.us:                             ; preds = %cond.end79.i.us
  %arrayidx85.i.us = getelementptr inbounds %struct.rtx_def* %cond80.i.us, i64 0, i32 1, i64 0
  %rtx86.i.us = bitcast %union.rtunion_def* %arrayidx85.i.us to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx86.i.us, align 8, !tbaa !5
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load87.i.us = load i32* %29, align 8
  %bf.clear88.i.us = and i32 %bf.load87.i.us, 65535
  switch i32 %bf.clear88.i.us, label %for.inc169.i.us [
    i32 61, label %land.lhs.true104.i.us
    i32 63, label %land.lhs.true96.i.us
  ]

land.lhs.true96.i.us:                             ; preds = %land.lhs.true83.i.us
  %arrayidx98.i.us = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtx99.i.us = bitcast %union.rtunion_def* %arrayidx98.i.us to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx99.i.us, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load100.i.us = load i32* %31, align 8
  %bf.clear101.i.us = and i32 %bf.load100.i.us, 65535
  %cmp102.i.us = icmp eq i32 %bf.clear101.i.us, 61
  br i1 %cmp102.i.us, label %land.lhs.true104.i.us, label %for.inc169.i.us

land.lhs.true104.i.us:                            ; preds = %land.lhs.true96.i.us, %land.lhs.true83.i.us
  %bf.load157533.i.us = phi i32 [ %bf.load87.i.us, %land.lhs.true83.i.us ], [ %bf.load100.i.us, %land.lhs.true96.i.us ]
  %reg.0.i.us = phi %struct.rtx_def* [ %28, %land.lhs.true83.i.us ], [ %30, %land.lhs.true96.i.us ]
  %arrayidx106.i.us = getelementptr inbounds %struct.rtx_def* %reg.0.i.us, i64 0, i32 1, i64 0
  %rtuint.i.us = bitcast %union.rtunion_def* %arrayidx106.i.us to i32*
  %32 = load i32* %rtuint.i.us, align 4, !tbaa !1
  %cmp107.i.us = icmp ugt i32 %32, 52
  br i1 %cmp107.i.us, label %land.lhs.true109.i.us, label %for.inc169.i.us

land.lhs.true109.i.us:                            ; preds = %land.lhs.true104.i.us
  %idxprom113.i.us = zext i32 %32 to i64
  %33 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data.i.us = getelementptr inbounds %struct.varray_head_tag* %33, i64 0, i32 4
  %reg114.i.us = bitcast %union.varray_data_tag* %data.i.us to [1 x %struct.reg_info_def*]*
  %arrayidx115.i.us = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg114.i.us, i64 0, i64 %idxprom113.i.us
  %34 = load %struct.reg_info_def** %arrayidx115.i.us, align 8, !tbaa !5
  %first_uid.i.us = getelementptr inbounds %struct.reg_info_def* %34, i64 0, i32 0
  %35 = load i32* %first_uid.i.us, align 4, !tbaa !12
  %fld116.i.us = getelementptr inbounds %struct.rtx_def* %insn.1511.i.us, i64 0, i32 1
  %rtint118.i.us = bitcast [1 x %union.rtunion_def]* %fld116.i.us to i32*
  %36 = load i32* %rtint118.i.us, align 4, !tbaa !1
  %cmp119.i.us = icmp eq i32 %35, %36
  br i1 %cmp119.i.us, label %for.cond125.i.preheader.us, label %for.inc169.i.us

for.cond125.i.us:                                 ; preds = %for.cond125.i.preheader.us, %for.body128.i.us
  %insn.1.pn.i.us = phi %struct.rtx_def* [ %p.0.i.us, %for.body128.i.us ], [ %insn.1511.i.us, %for.cond125.i.preheader.us ]
  %p.0.in.in.i.us = getelementptr inbounds %struct.rtx_def* %insn.1.pn.i.us, i64 0, i32 1, i64 2
  %p.0.in.i.us = bitcast %union.rtunion_def* %p.0.in.in.i.us to %struct.rtx_def**
  %p.0.i.us = load %struct.rtx_def** %p.0.in.i.us, align 8
  %cmp126.i.us = icmp eq %struct.rtx_def* %p.0.i.us, %insn.0519.i
  br i1 %cmp126.i.us, label %for.inc169.i.us, label %for.body128.i.us

for.body128.i.us:                                 ; preds = %for.cond125.i.us
  %37 = load i32* %last_uid.i.us, align 4, !tbaa !14
  %fld136.i.us = getelementptr inbounds %struct.rtx_def* %p.0.i.us, i64 0, i32 1
  %rtint138.i.us = bitcast [1 x %union.rtunion_def]* %fld136.i.us to i32*
  %38 = load i32* %rtint138.i.us, align 4, !tbaa !1
  %cmp139.i.us = icmp eq i32 %37, %38
  br i1 %cmp139.i.us, label %if.then150.i.us, label %for.cond125.i.us

if.then150.i.us:                                  ; preds = %for.body128.i.us
  %cmp151.i.us = icmp eq %struct.rtx_def** %reg_map.0510.i.us, null
  br i1 %cmp151.i.us, label %if.then153.i.us, label %if.then150.if.end156_crit_edge.i.us

if.then150.if.end156_crit_edge.i.us:              ; preds = %if.then150.i.us
  %.pre.i.us = getelementptr inbounds %struct.rtx_def* %reg.0.i.us, i64 0, i32 0
  br label %if.end156.i.us

if.then153.i.us:                                  ; preds = %if.then150.i.us
  %call155.i.us = tail call noalias i8* @xcalloc(i64 %conv154.i, i64 8) #7
  %39 = bitcast i8* %call155.i.us to %struct.rtx_def**
  %.phi.trans.insert.i.us = getelementptr inbounds %struct.rtx_def* %reg.0.i.us, i64 0, i32 0
  %bf.load157.pre.i.us = load i32* %.phi.trans.insert.i.us, align 8
  br label %if.end156.i.us

if.end156.i.us:                                   ; preds = %if.then153.i.us, %if.then150.if.end156_crit_edge.i.us
  %.pre-phi.i.us = phi i32* [ %.pre.i.us, %if.then150.if.end156_crit_edge.i.us ], [ %.phi.trans.insert.i.us, %if.then153.i.us ]
  %bf.load157.i.us = phi i32 [ %bf.load157533.i.us, %if.then150.if.end156_crit_edge.i.us ], [ %bf.load157.pre.i.us, %if.then153.i.us ]
  %reg_map.1.i.us = phi %struct.rtx_def** [ %reg_map.0510.i.us, %if.then150.if.end156_crit_edge.i.us ], [ %39, %if.then153.i.us ]
  %bf.set.i.us = or i32 %bf.load157.i.us, 268435456
  store i32 %bf.set.i.us, i32* %.pre-phi.i.us, align 8
  %bf.lshr.i.us = lshr i32 %bf.load157.i.us, 16
  %bf.clear160.i.us = and i32 %bf.lshr.i.us, 255
  %call161.i.us = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear160.i.us) #7
  %40 = load i32* %rtuint.i.us, align 4, !tbaa !1
  %idxprom165.i.us = zext i32 %40 to i64
  %arrayidx166.i.us = getelementptr inbounds %struct.rtx_def** %reg_map.1.i.us, i64 %idxprom165.i.us
  store %struct.rtx_def* %call161.i.us, %struct.rtx_def** %arrayidx166.i.us, align 8, !tbaa !5
  br label %for.inc169.i.us

for.inc169.i.us:                                  ; preds = %for.cond125.i.us, %if.end156.i.us, %land.lhs.true109.i.us, %land.lhs.true104.i.us, %land.lhs.true96.i.us, %land.lhs.true83.i.us, %cond.end79.i.us, %for.body53.i.us
  %reg_map.2.i.us = phi %struct.rtx_def** [ %reg_map.1.i.us, %if.end156.i.us ], [ %reg_map.0510.i.us, %land.lhs.true109.i.us ], [ %reg_map.0510.i.us, %land.lhs.true104.i.us ], [ %reg_map.0510.i.us, %land.lhs.true96.i.us ], [ %reg_map.0510.i.us, %cond.end79.i.us ], [ %reg_map.0510.i.us, %for.body53.i.us ], [ %reg_map.0510.i.us, %land.lhs.true83.i.us ], [ %reg_map.0510.i.us, %for.cond125.i.us ]
  %arrayidx171.i.us = getelementptr inbounds %struct.rtx_def* %insn.1511.i.us, i64 0, i32 1, i64 2
  %rtx172.i.us = bitcast %union.rtunion_def* %arrayidx171.i.us to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx172.i.us, align 8, !tbaa !5
  %cmp52.i.us = icmp eq %struct.rtx_def* %41, %insn.0519.i
  br i1 %cmp52.i.us, label %for.body178.lr.ph.i, label %for.body53.i.us

for.cond125.i.preheader.us:                       ; preds = %land.lhs.true109.i.us
  %last_uid.i.us = getelementptr inbounds %struct.reg_info_def* %34, i64 0, i32 1
  br label %for.cond125.i.us

for.inc169.i:                                     ; preds = %for.body53.lr.ph.i, %for.inc169.i
  %insn.1511.i = phi %struct.rtx_def* [ %42, %for.inc169.i ], [ %19, %for.body53.lr.ph.i ]
  %arrayidx171.i = getelementptr inbounds %struct.rtx_def* %insn.1511.i, i64 0, i32 1, i64 2
  %rtx172.i = bitcast %union.rtunion_def* %arrayidx171.i to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx172.i, align 8, !tbaa !5
  %cmp52.i = icmp eq %struct.rtx_def* %42, %insn.0519.i
  br i1 %cmp52.i, label %for.body178.lr.ph.i, label %for.inc169.i

for.body178.lr.ph.i:                              ; preds = %for.inc169.i, %for.inc169.i.us
  %reg_map.2.i.lcssa = phi %struct.rtx_def** [ %reg_map.2.i.us, %for.inc169.i.us ], [ null, %for.inc169.i ]
  %call174.i = tail call %struct.rtx_def* @gen_label_rtx() #7
  %tobool206.i = icmp ne %struct.rtx_def** %reg_map.2.i.lcssa, null
  br label %for.body178.i

for.body178.i:                                    ; preds = %sw.epilog339.i, %for.body178.lr.ph.i
  %insn.2505.i = phi %struct.rtx_def* [ %19, %for.body178.lr.ph.i ], [ %74, %sw.epilog339.i ]
  %first_copy.0504.i = phi %struct.rtx_def* [ null, %for.body178.lr.ph.i ], [ %copy.1.first_copy.0.i, %sw.epilog339.i ]
  %copy.0503.i = phi %struct.rtx_def* [ null, %for.body178.lr.ph.i ], [ %copy.1.i, %sw.epilog339.i ]
  %43 = getelementptr inbounds %struct.rtx_def* %insn.2505.i, i64 0, i32 0
  %bf.load179.i = load i32* %43, align 8
  %bf.clear180.i = and i32 %bf.load179.i, 65535
  switch i32 %bf.clear180.i, label %sw.default338.i [
    i32 35, label %sw.bb181.i
    i32 37, label %sw.bb183.i
    i32 32, label %sw.bb200.i
    i32 33, label %sw.bb280.i
  ]

sw.bb181.i:                                       ; preds = %for.body178.i
  %call182.i = tail call %struct.rtx_def* @emit_barrier_before(%struct.rtx_def* %insn.065) #7
  br label %sw.epilog339.i

sw.bb183.i:                                       ; preds = %for.body178.i
  %arrayidx185.i = getelementptr inbounds %struct.rtx_def* %insn.2505.i, i64 0, i32 1, i64 4
  %rtint186.i = bitcast %union.rtunion_def* %arrayidx185.i to i32*
  %44 = load i32* %rtint186.i, align 4, !tbaa !1
  %cmp187.i = icmp sgt i32 %44, -1
  br i1 %cmp187.i, label %if.then189.i, label %sw.epilog339.i

if.then189.i:                                     ; preds = %sw.bb183.i
  %call193.i = tail call %struct.rtx_def* @emit_note_before(i32 %44, %struct.rtx_def* %insn.065) #7
  %arrayidx195.i = getelementptr inbounds %struct.rtx_def* %insn.2505.i, i64 0, i32 1, i64 3
  %rtstr.i = bitcast %union.rtunion_def* %arrayidx195.i to i8**
  %45 = load i8** %rtstr.i, align 8, !tbaa !5
  %46 = getelementptr inbounds %struct.rtx_def* %call193.i, i64 0, i32 1, i64 3, i32 0
  %.c.i = ptrtoint i8* %45 to i64
  store i64 %.c.i, i64* %46, align 8, !tbaa !5
  br label %sw.epilog339.i

sw.bb200.i:                                       ; preds = %for.body178.i
  %arrayidx202.i = getelementptr inbounds %struct.rtx_def* %insn.2505.i, i64 0, i32 1, i64 3
  %rtx203.i = bitcast %union.rtunion_def* %arrayidx202.i to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx203.i, align 8, !tbaa !5
  %call204.i = tail call %struct.rtx_def* @copy_insn(%struct.rtx_def* %47) #7
  %call205.i = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call204.i, %struct.rtx_def* %insn.065) #7
  %arrayidx209.i = getelementptr inbounds %struct.rtx_def* %call205.i, i64 0, i32 1, i64 3
  %rtx210.i = bitcast %union.rtunion_def* %arrayidx209.i to %struct.rtx_def**
  br i1 %tobool206.i, label %if.then207.i, label %if.end212.i

if.then207.i:                                     ; preds = %sw.bb200.i
  %48 = load %struct.rtx_def** %rtx210.i, align 8, !tbaa !5
  %call211.i = tail call %struct.rtx_def* @replace_regs(%struct.rtx_def* %48, %struct.rtx_def** %reg_map.2.i.lcssa, i32 %call4.i, i32 1) #7
  br label %if.end212.i

if.end212.i:                                      ; preds = %if.then207.i, %sw.bb200.i
  %49 = load %struct.rtx_def** %rtx210.i, align 8, !tbaa !5
  tail call void @mark_jump_label(%struct.rtx_def* %49, %struct.rtx_def* %call205.i, i32 0) #7
  %arrayidx217.i = getelementptr inbounds %struct.rtx_def* %insn.2505.i, i64 0, i32 1, i64 6
  %link.0.in498.i = bitcast %union.rtunion_def* %arrayidx217.i to %struct.rtx_def**
  %link.0499.i = load %struct.rtx_def** %link.0.in498.i, align 8
  %tobool220500.i = icmp eq %struct.rtx_def* %link.0499.i, null
  br i1 %tobool220500.i, label %for.end267.i, label %for.body221.lr.ph.i

for.body221.lr.ph.i:                              ; preds = %if.end212.i
  %arrayidx240.i = getelementptr inbounds %struct.rtx_def* %call205.i, i64 0, i32 1, i64 6
  %rtx241.i = bitcast %union.rtunion_def* %arrayidx240.i to %struct.rtx_def**
  %50 = getelementptr inbounds %union.rtunion_def* %arrayidx240.i, i64 0, i32 0
  br label %for.body221.i

for.body221.i:                                    ; preds = %for.inc263.i, %for.body221.lr.ph.i
  %link.0501.i = phi %struct.rtx_def* [ %link.0499.i, %for.body221.lr.ph.i ], [ %link.0.i, %for.inc263.i ]
  %51 = getelementptr inbounds %struct.rtx_def* %link.0501.i, i64 0, i32 0
  %bf.load222.i = load i32* %51, align 8
  %bf.lshr223.i = lshr i32 %bf.load222.i, 16
  %bf.clear224.i = and i32 %bf.lshr223.i, 255
  %cmp225.i = icmp eq i32 %bf.clear224.i, 13
  br i1 %cmp225.i, label %for.inc263.i, label %if.then227.i

if.then227.i:                                     ; preds = %for.body221.i
  %bf.clear229.i = and i32 %bf.load222.i, 65535
  %cmp230.i = icmp eq i32 %bf.clear229.i, 3
  %arrayidx237.i = getelementptr inbounds %struct.rtx_def* %link.0501.i, i64 0, i32 1, i64 0
  %rtx238.i = bitcast %union.rtunion_def* %arrayidx237.i to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx238.i, align 8, !tbaa !5
  %53 = load %struct.rtx_def** %rtx241.i, align 8, !tbaa !5
  br i1 %cmp230.i, label %if.then232.i, label %if.else.i

if.then232.i:                                     ; preds = %if.then227.i
  %call242.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 %bf.clear224.i, %struct.rtx_def* %52, %struct.rtx_def* %53) #7
  %call243.i = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %call242.i) #7
  %call243.c.i = ptrtoint %struct.rtx_def* %call243.i to i64
  store i64 %call243.c.i, i64* %50, align 8, !tbaa !5
  br label %for.inc263.i

if.else.i:                                        ; preds = %if.then227.i
  %call256.i = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 %bf.clear224.i, %struct.rtx_def* %52, %struct.rtx_def* %53) #7
  %call257.i = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %call256.i) #7
  %call257.c.i = ptrtoint %struct.rtx_def* %call257.i to i64
  store i64 %call257.c.i, i64* %50, align 8, !tbaa !5
  br label %for.inc263.i

for.inc263.i:                                     ; preds = %if.else.i, %if.then232.i, %for.body221.i
  %arrayidx265.i = getelementptr inbounds %struct.rtx_def* %link.0501.i, i64 0, i32 1, i64 1
  %link.0.in.i = bitcast %union.rtunion_def* %arrayidx265.i to %struct.rtx_def**
  %link.0.i = load %struct.rtx_def** %link.0.in.i, align 8
  %tobool220.i = icmp eq %struct.rtx_def* %link.0.i, null
  br i1 %tobool220.i, label %for.end267.i, label %for.body221.i

for.end267.i:                                     ; preds = %for.inc263.i, %if.end212.i
  br i1 %tobool206.i, label %land.lhs.true269.i, label %sw.epilog339.i

land.lhs.true269.i:                               ; preds = %for.end267.i
  %arrayidx271.i = getelementptr inbounds %struct.rtx_def* %call205.i, i64 0, i32 1, i64 6
  %rtx272.i = bitcast %union.rtunion_def* %arrayidx271.i to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx272.i, align 8, !tbaa !5
  %tobool273.i = icmp eq %struct.rtx_def* %54, null
  br i1 %tobool273.i, label %sw.epilog339.i, label %if.then274.i

if.then274.i:                                     ; preds = %land.lhs.true269.i
  %call278.i = tail call %struct.rtx_def* @replace_regs(%struct.rtx_def* %54, %struct.rtx_def** %reg_map.2.i.lcssa, i32 %call4.i, i32 1) #7
  br label %sw.epilog339.i

sw.bb280.i:                                       ; preds = %for.body178.i
  %arrayidx282.i = getelementptr inbounds %struct.rtx_def* %insn.2505.i, i64 0, i32 1, i64 3
  %rtx283.i = bitcast %union.rtunion_def* %arrayidx282.i to %struct.rtx_def**
  %55 = load %struct.rtx_def** %rtx283.i, align 8, !tbaa !5
  %call284.i = tail call %struct.rtx_def* @copy_insn(%struct.rtx_def* %55) #7
  %call285.i = tail call %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def* %call284.i, %struct.rtx_def* %insn.065) #7
  %arrayidx289.i = getelementptr inbounds %struct.rtx_def* %call285.i, i64 0, i32 1, i64 3
  %rtx290.i = bitcast %union.rtunion_def* %arrayidx289.i to %struct.rtx_def**
  br i1 %tobool206.i, label %if.then287.i, label %if.end292.i

if.then287.i:                                     ; preds = %sw.bb280.i
  %56 = load %struct.rtx_def** %rtx290.i, align 8, !tbaa !5
  %call291.i = tail call %struct.rtx_def* @replace_regs(%struct.rtx_def* %56, %struct.rtx_def** %reg_map.2.i.lcssa, i32 %call4.i, i32 1) #7
  br label %if.end292.i

if.end292.i:                                      ; preds = %if.then287.i, %sw.bb280.i
  %57 = load %struct.rtx_def** %rtx290.i, align 8, !tbaa !5
  tail call void @mark_jump_label(%struct.rtx_def* %57, %struct.rtx_def* %call285.i, i32 0) #7
  %arrayidx297.i = getelementptr inbounds %struct.rtx_def* %insn.2505.i, i64 0, i32 1, i64 6
  %rtx298.i = bitcast %union.rtunion_def* %arrayidx297.i to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx298.i, align 8, !tbaa !5
  %tobool299.i = icmp eq %struct.rtx_def* %58, null
  br i1 %tobool299.i, label %if.end315.i, label %if.then300.i

if.then300.i:                                     ; preds = %if.end292.i
  %call304.i = tail call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %58) #7
  %59 = getelementptr inbounds %struct.rtx_def* %call285.i, i64 0, i32 1, i64 6, i32 0
  %call304.c.i = ptrtoint %struct.rtx_def* %call304.i to i64
  store i64 %call304.c.i, i64* %59, align 8, !tbaa !5
  br i1 %tobool206.i, label %if.then309.i, label %if.end315.i

if.then309.i:                                     ; preds = %if.then300.i
  %call313.i = tail call %struct.rtx_def* @replace_regs(%struct.rtx_def* %call304.i, %struct.rtx_def** %reg_map.2.i.lcssa, i32 %call4.i, i32 1) #7
  br label %if.end315.i

if.end315.i:                                      ; preds = %if.then309.i, %if.then300.i, %if.end292.i
  %60 = getelementptr inbounds %struct.rtx_def* %call285.i, i64 0, i32 0
  %bf.load.i.i.i = load i32* %60, align 8
  %bf.clear.i.i.i = and i32 %bf.load.i.i.i, 65535
  %cmp.i.i.i = icmp eq i32 %bf.clear.i.i.i, 33
  br i1 %cmp.i.i.i, label %if.end.i.i.i, label %sw.epilog339.i

if.end.i.i.i:                                     ; preds = %if.end315.i
  %61 = load %struct.rtx_def** %rtx290.i, align 8, !tbaa !5
  %62 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 0
  %bf.load1.i.i.i = load i32* %62, align 8
  %bf.clear2.i.i.i = and i32 %bf.load1.i.i.i, 65535
  %cmp3.i.i.i = icmp eq i32 %bf.clear2.i.i.i, 39
  br i1 %cmp3.i.i.i, label %if.then4.i.i.i, label %if.end8.i.i.i

if.then4.i.i.i:                                   ; preds = %if.end.i.i.i
  %arrayidx6.i.i.i = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 1, i64 0
  %rtvec.i.i.i = bitcast %union.rtunion_def* %arrayidx6.i.i.i to %struct.rtvec_def**
  %63 = load %struct.rtvec_def** %rtvec.i.i.i, align 8, !tbaa !5
  %arrayidx7.i.i.i = getelementptr inbounds %struct.rtvec_def* %63, i64 0, i32 1, i64 0
  %64 = load %struct.rtx_def** %arrayidx7.i.i.i, align 8, !tbaa !5
  %.phi.trans.insert.i.i.i = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 0
  %bf.load9.pre.i.i.i = load i32* %.phi.trans.insert.i.i.i, align 8
  br label %if.end8.i.i.i

if.end8.i.i.i:                                    ; preds = %if.then4.i.i.i, %if.end.i.i.i
  %bf.load9.i.i.i = phi i32 [ %bf.load9.pre.i.i.i, %if.then4.i.i.i ], [ %bf.load1.i.i.i, %if.end.i.i.i ]
  %pat.0.i.i.i = phi %struct.rtx_def* [ %64, %if.then4.i.i.i ], [ %61, %if.end.i.i.i ]
  %bf.clear10.i.i.i = and i32 %bf.load9.i.i.i, 65535
  %cmp11.i.i.i = icmp eq i32 %bf.clear10.i.i.i, 47
  br i1 %cmp11.i.i.i, label %land.lhs.true.i.i.i, label %sw.epilog339.i

land.lhs.true.i.i.i:                              ; preds = %if.end8.i.i.i
  %arrayidx13.i.i.i = getelementptr inbounds %struct.rtx_def* %pat.0.i.i.i, i64 0, i32 1, i64 0
  %rtx14.i.i.i = bitcast %union.rtunion_def* %arrayidx13.i.i.i to %struct.rtx_def**
  %65 = load %struct.rtx_def** %rtx14.i.i.i, align 8, !tbaa !5
  %66 = getelementptr inbounds %struct.rtx_def* %65, i64 0, i32 0
  %bf.load15.i.i.i = load i32* %66, align 8
  %bf.clear16.i.i.i = and i32 %bf.load15.i.i.i, 65535
  %cmp17.i.i.i = icmp ne i32 %bf.clear16.i.i.i, 59
  %tobool.i.i = icmp eq %struct.rtx_def* %pat.0.i.i.i, null
  %or.cond.i.i = or i1 %cmp17.i.i.i, %tobool.i.i
  br i1 %or.cond.i.i, label %sw.epilog339.i, label %if.end.i.i40

if.end.i.i40:                                     ; preds = %land.lhs.true.i.i.i
  %arrayidx.i.i35 = getelementptr inbounds %struct.rtx_def* %pat.0.i.i.i, i64 0, i32 1, i64 1
  %rtx.i.i36 = bitcast %union.rtunion_def* %arrayidx.i.i35 to %struct.rtx_def**
  %67 = load %struct.rtx_def** %rtx.i.i36, align 8, !tbaa !5
  %68 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 0
  %bf.load.i.i37 = load i32* %68, align 8
  %bf.clear.i.i38 = and i32 %bf.load.i.i37, 65535
  %cmp.i.i39 = icmp eq i32 %bf.clear.i.i38, 72
  br i1 %cmp.i.i39, label %if.end2.i.i, label %sw.epilog339.i

if.end2.i.i:                                      ; preds = %if.end.i.i40
  %arrayidx7.i.i41 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 1
  %rtx8.i.i = bitcast %union.rtunion_def* %arrayidx7.i.i41 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx8.i.i, align 8, !tbaa !5
  %70 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 0
  %bf.load9.i.i42 = load i32* %70, align 8
  %bf.clear10.i.i43 = and i32 %bf.load9.i.i42, 65535
  %arrayidx15.i.i = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 2
  %rtx16.i.i = bitcast %union.rtunion_def* %arrayidx15.i.i to %struct.rtx_def**
  %71 = load %struct.rtx_def** %rtx16.i.i, align 8, !tbaa !5
  %72 = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 0
  %bf.load17.i.i = load i32* %72, align 8
  %bf.clear18.i.i = and i32 %bf.load17.i.i, 65535
  %cmp19.i.i = icmp eq i32 %bf.clear18.i.i, 59
  br i1 %cmp19.i.i, label %land.lhs.true.i.i44, label %lor.rhs.i.i

land.lhs.true.i.i44:                              ; preds = %if.end2.i.i
  switch i32 %bf.clear10.i.i43, label %sw.epilog339.i [
    i32 67, label %if.then318.i
    i32 51, label %if.then318.i
  ]

lor.rhs.i.i:                                      ; preds = %if.end2.i.i
  %cmp22.i.i = icmp eq i32 %bf.clear10.i.i43, 59
  br i1 %cmp22.i.i, label %land.rhs.i.i, label %sw.epilog339.i

land.rhs.i.i:                                     ; preds = %lor.rhs.i.i
  switch i32 %bf.clear18.i.i, label %sw.epilog339.i [
    i32 67, label %if.then318.i
    i32 51, label %if.then318.i
  ]

if.then318.i:                                     ; preds = %land.rhs.i.i, %land.rhs.i.i, %land.lhs.true.i.i44, %land.lhs.true.i.i44
  %arrayidx320.i = getelementptr inbounds %struct.rtx_def* %call285.i, i64 0, i32 1, i64 7
  %rtx321.i = bitcast %union.rtunion_def* %arrayidx320.i to %struct.rtx_def**
  %73 = load %struct.rtx_def** %rtx321.i, align 8, !tbaa !5
  %tobool322.i = icmp eq %struct.rtx_def* %73, null
  br i1 %tobool322.i, label %sw.epilog339.i, label %if.then323.i

if.then323.i:                                     ; preds = %if.then318.i
  %call324.i = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %73) #7
  %tobool325.i = icmp eq %struct.rtx_def* %call324.i, null
  br i1 %tobool325.i, label %if.else334.i, label %land.lhs.true326.i

land.lhs.true326.i:                               ; preds = %if.then323.i
  %call327.i = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %73) #7
  %call328.i = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %call327.i) #7
  %call329.i = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn.065) #7
  %cmp330.i = icmp eq %struct.rtx_def* %call328.i, %call329.i
  br i1 %cmp330.i, label %if.then332.i, label %if.else334.i

if.then332.i:                                     ; preds = %land.lhs.true326.i
  tail call void @predict_insn_def(%struct.rtx_def* %call285.i, i32 12, i32 1) #7
  %call333.i = tail call i32 @redirect_jump(%struct.rtx_def* %call285.i, %struct.rtx_def* %call174.i, i32 0) #7
  br label %sw.epilog339.i

if.else334.i:                                     ; preds = %land.lhs.true326.i, %if.then323.i
  tail call void @predict_insn_def(%struct.rtx_def* %call285.i, i32 12, i32 0) #7
  br label %sw.epilog339.i

sw.default338.i:                                  ; preds = %for.body178.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 487, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.duplicate_loop_exit_test, i64 0, i64 0)) #8
  unreachable

sw.epilog339.i:                                   ; preds = %if.else334.i, %if.then332.i, %if.then318.i, %land.rhs.i.i, %lor.rhs.i.i, %land.lhs.true.i.i44, %if.end.i.i40, %land.lhs.true.i.i.i, %if.end8.i.i.i, %if.end315.i, %if.then274.i, %land.lhs.true269.i, %for.end267.i, %if.then189.i, %sw.bb183.i, %sw.bb181.i
  %copy.1.i = phi %struct.rtx_def* [ %call285.i, %if.then332.i ], [ %call285.i, %if.else334.i ], [ %call285.i, %if.then318.i ], [ %call285.i, %land.rhs.i.i ], [ %call205.i, %if.then274.i ], [ %call205.i, %land.lhs.true269.i ], [ %call205.i, %for.end267.i ], [ %call193.i, %if.then189.i ], [ %copy.0503.i, %sw.bb183.i ], [ %call182.i, %sw.bb181.i ], [ %call285.i, %if.end.i.i40 ], [ %call285.i, %if.end315.i ], [ %call285.i, %land.lhs.true.i.i.i ], [ %call285.i, %if.end8.i.i.i ], [ %call285.i, %lor.rhs.i.i ], [ %call285.i, %land.lhs.true.i.i44 ]
  %tobool340.i = icmp eq %struct.rtx_def* %first_copy.0504.i, null
  %copy.1.first_copy.0.i = select i1 %tobool340.i, %struct.rtx_def* %copy.1.i, %struct.rtx_def* %first_copy.0504.i
  %arrayidx345.i = getelementptr inbounds %struct.rtx_def* %insn.2505.i, i64 0, i32 1, i64 2
  %rtx346.i = bitcast %union.rtunion_def* %arrayidx345.i to %struct.rtx_def**
  %74 = load %struct.rtx_def** %rtx346.i, align 8, !tbaa !5
  %cmp176.i = icmp eq %struct.rtx_def* %74, %insn.0519.i
  br i1 %cmp176.i, label %for.end347.i, label %for.body178.i

for.end347.i:                                     ; preds = %sw.epilog339.i
  %tobool348.i = icmp eq %struct.rtx_def* %copy.1.i, null
  br i1 %tobool348.i, label %if.then354.i, label %lor.lhs.false349.i

lor.lhs.false349.i:                               ; preds = %for.end347.i
  %75 = getelementptr inbounds %struct.rtx_def* %copy.1.i, i64 0, i32 0
  %bf.load350.i = load i32* %75, align 8
  %bf.clear351.i = and i32 %bf.load350.i, 65535
  %cmp352.i = icmp eq i32 %bf.clear351.i, 35
  br i1 %cmp352.i, label %if.end365.i, label %if.then354.i

if.then354.i:                                     ; preds = %lor.lhs.false349.i, %for.end347.i, %for.end173.thread.i
  %first_copy.0.lcssa543.i = phi %struct.rtx_def* [ %copy.1.first_copy.0.i, %lor.lhs.false349.i ], [ %copy.1.first_copy.0.i, %for.end347.i ], [ null, %for.end173.thread.i ]
  %insn.2.lcssa542.i = phi %struct.rtx_def* [ %insn.0519.i, %lor.lhs.false349.i ], [ %insn.0519.i, %for.end347.i ], [ %19, %for.end173.thread.i ]
  %reg_map.0.lcssa535541.i = phi %struct.rtx_def** [ %reg_map.2.i.lcssa, %lor.lhs.false349.i ], [ %reg_map.2.i.lcssa, %for.end347.i ], [ null, %for.end173.thread.i ]
  %call174536539.i = phi %struct.rtx_def* [ %call174.i, %lor.lhs.false349.i ], [ %call174.i, %for.end347.i ], [ %call174534.i, %for.end173.thread.i ]
  %call.i.i = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn.2.lcssa542.i) #7
  %cmp.i487.i = icmp eq %struct.rtx_def* %call.i.i, null
  br i1 %cmp.i487.i, label %if.then.i.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.then354.i
  %76 = getelementptr inbounds %struct.rtx_def* %call.i.i, i64 0, i32 0
  %bf.load.i488.i = load i32* %76, align 8
  %bf.clear.i489.i = and i32 %bf.load.i488.i, 65535
  %cmp1.i.i = icmp eq i32 %bf.clear.i489.i, 36
  br i1 %cmp1.i.i, label %get_label_after.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i, %if.then354.i
  %call2.i.i = tail call %struct.rtx_def* @gen_label_rtx() #7
  %call3.i.i = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %call2.i.i, %struct.rtx_def* %insn.2.lcssa542.i) #7
  %arrayidx.i490.i = getelementptr inbounds %struct.rtx_def* %call2.i.i, i64 0, i32 1, i64 3
  %rtint.i.i = bitcast %union.rtunion_def* %arrayidx.i490.i to i32*
  store i32 0, i32* %rtint.i.i, align 4, !tbaa !1
  br label %get_label_after.exit.i

get_label_after.exit.i:                           ; preds = %if.then.i.i, %lor.lhs.false.i.i
  %label.0.i.i = phi %struct.rtx_def* [ %call2.i.i, %if.then.i.i ], [ %call.i.i, %lor.lhs.false.i.i ]
  %call356.i = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %label.0.i.i) #7
  %call357.i = tail call %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def* %call356.i, %struct.rtx_def* %insn.065) #7
  %tobool358.i = icmp eq %struct.rtx_def* %first_copy.0.lcssa543.i, null
  %call357.first_copy.0.i = select i1 %tobool358.i, %struct.rtx_def* %call357.i, %struct.rtx_def* %first_copy.0.lcssa543.i
  %arrayidx362.i = getelementptr inbounds %struct.rtx_def* %call357.i, i64 0, i32 1, i64 3
  %rtx363.i = bitcast %union.rtunion_def* %arrayidx362.i to %struct.rtx_def**
  %77 = load %struct.rtx_def** %rtx363.i, align 8, !tbaa !5
  tail call void @mark_jump_label(%struct.rtx_def* %77, %struct.rtx_def* %call357.i, i32 0) #7
  %call364.i = tail call %struct.rtx_def* @emit_barrier_before(%struct.rtx_def* %insn.065) #7
  br label %if.end365.i

if.end365.i:                                      ; preds = %get_label_after.exit.i, %lor.lhs.false349.i
  %reg_map.0.lcssa535540.i = phi %struct.rtx_def** [ %reg_map.0.lcssa535541.i, %get_label_after.exit.i ], [ %reg_map.2.i.lcssa, %lor.lhs.false349.i ]
  %call174536538.i = phi %struct.rtx_def* [ %call174536539.i, %get_label_after.exit.i ], [ %call174.i, %lor.lhs.false349.i ]
  %copy.2.i = phi %struct.rtx_def* [ %call357.i, %get_label_after.exit.i ], [ %copy.1.i, %lor.lhs.false349.i ]
  %first_copy.3.i = phi %struct.rtx_def* [ %call357.first_copy.0.i, %get_label_after.exit.i ], [ %copy.1.first_copy.0.i, %lor.lhs.false349.i ]
  %call366.i = tail call %struct.rtx_def* @emit_label_before(%struct.rtx_def* %call174536538.i, %struct.rtx_def* %insn.065) #7
  tail call void @reg_scan_update(%struct.rtx_def* %first_copy.3.i, %struct.rtx_def* %copy.2.i, i32 %call4.i) #7
  %call367.i = tail call %struct.rtx_def* @emit_note_before(i32 -93, %struct.rtx_def* %19) #7
  %call368.i = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn.065) #7
  %call369.i = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call368.i) #7
  %tobool370.i = icmp eq %struct.rtx_def** %reg_map.0.lcssa535540.i, null
  br i1 %tobool370.i, label %if.then17, label %if.then371.i

if.then371.i:                                     ; preds = %if.end365.i
  %78 = bitcast %struct.rtx_def** %reg_map.0.lcssa535540.i to i8*
  tail call void @free(i8* %78) #7
  br label %if.then17

if.then17:                                        ; preds = %if.end365.i, %if.then371.i
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 2
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %79 = load %struct.rtx_def** %rtx20, align 8, !tbaa !5
  br label %for.cond.backedge

for.end:                                          ; preds = %for.cond.backedge, %entry
  ret void
}

declare %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind readonly uwtable
define i32 @any_uncondjump_p(%struct.rtx_def* nocapture readonly %insn) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 33
  br i1 %cmp.i, label %if.end.i, label %return

if.end.i:                                         ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1.i = load i32* %2, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 39
  br i1 %cmp3.i, label %if.then4.i, label %if.end8.i

if.then4.i:                                       ; preds = %if.end.i
  %arrayidx6.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx6.i to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %arrayidx7.i = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 0
  %4 = load %struct.rtx_def** %arrayidx7.i, align 8, !tbaa !5
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load9.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then4.i, %if.end.i
  %bf.load9.i = phi i32 [ %bf.load9.pre.i, %if.then4.i ], [ %bf.load1.i, %if.end.i ]
  %pat.0.i = phi %struct.rtx_def* [ %4, %if.then4.i ], [ %1, %if.end.i ]
  %bf.clear10.i = and i32 %bf.load9.i, 65535
  %cmp11.i = icmp eq i32 %bf.clear10.i, 47
  br i1 %cmp11.i, label %land.lhs.true.i, label %return

land.lhs.true.i:                                  ; preds = %if.end8.i
  %arrayidx13.i = getelementptr inbounds %struct.rtx_def* %pat.0.i, i64 0, i32 1, i64 0
  %rtx14.i = bitcast %union.rtunion_def* %arrayidx13.i to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx14.i, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load15.i = load i32* %6, align 8
  %bf.clear16.i = and i32 %bf.load15.i, 65535
  %cmp17.i = icmp ne i32 %bf.clear16.i, 59
  %tobool = icmp eq %struct.rtx_def* %pat.0.i, null
  %or.cond = or i1 %cmp17.i, %tobool
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true.i
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pat.0.i, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 67
  %. = zext i1 %cmp to i32
  br label %return

return:                                           ; preds = %land.lhs.true.i, %if.end8.i, %entry, %if.end
  %retval.0 = phi i32 [ %., %if.end ], [ 0, %entry ], [ 0, %land.lhs.true.i ], [ 0, %if.end8.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @onlyjump_p(%struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 33
  %1 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 33), align 1
  %cmp3 = icmp eq i8 %1, 105
  %or.cond = and i1 %cmp, %cmp3
  br i1 %or.cond, label %cond.true, label %return

cond.true:                                        ; preds = %entry
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load6 = load i32* %3, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 47
  br i1 %cmp8, label %cond.end18, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %2) #7
  br label %cond.end18

cond.end18:                                       ; preds = %cond.true, %cond.false
  %cond19 = phi %struct.rtx_def* [ %call, %cond.false ], [ %2, %cond.true ]
  %cmp20 = icmp eq %struct.rtx_def* %cond19, null
  br i1 %cmp20, label %return, label %if.end23

if.end23:                                         ; preds = %cond.end18
  %fld24 = getelementptr inbounds %struct.rtx_def* %cond19, i64 0, i32 1
  %rtx26 = bitcast [1 x %union.rtunion_def]* %fld24 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx26, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load27 = load i32* %5, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 59
  br i1 %cmp29, label %if.end32, label %return

if.end32:                                         ; preds = %if.end23
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %cond19, i64 0, i32 1, i64 1
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx35, align 8, !tbaa !5
  %call36 = tail call i32 @side_effects_p(%struct.rtx_def* %6) #7
  %tobool = icmp eq i32 %call36, 0
  %. = zext i1 %tobool to i32
  br label %return

return:                                           ; preds = %if.end32, %if.end23, %cond.end18, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %cond.end18 ], [ 0, %if.end23 ], [ %., %if.end32 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @purge_line_number_notes(%struct.rtx_def* %f) #0 {
entry:
  %tobool39 = icmp eq %struct.rtx_def* %f, null
  br i1 %tobool39, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %insn.041 = phi %struct.rtx_def* [ %5, %for.inc ], [ %f, %entry ]
  %last_note.040 = phi %struct.rtx_def* [ %last_note.1, %for.inc ], [ null, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.041, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 37
  br i1 %cmp, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.041, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtint, align 4, !tbaa !1
  %cmp1 = icmp eq i32 %1, -87
  br i1 %cmp1, label %for.inc, label %if.else

if.else:                                          ; preds = %if.then
  %cmp6 = icmp sgt i32 %1, -1
  br i1 %cmp6, label %if.then7, label %for.inc

if.then7:                                         ; preds = %if.else
  %tobool8 = icmp eq %struct.rtx_def* %last_note.040, null
  br i1 %tobool8, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then7
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %insn.041, i64 0, i32 1, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx10 to i8**
  %2 = load i8** %rtstr, align 8, !tbaa !5
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %last_note.040, i64 0, i32 1, i64 3
  %rtstr13 = bitcast %union.rtunion_def* %arrayidx12 to i8**
  %3 = load i8** %rtstr13, align 8, !tbaa !5
  %cmp14 = icmp eq i8* %2, %3
  br i1 %cmp14, label %land.lhs.true15, label %for.inc

land.lhs.true15:                                  ; preds = %land.lhs.true
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %last_note.040, i64 0, i32 1, i64 4
  %rtint21 = bitcast %union.rtunion_def* %arrayidx20 to i32*
  %4 = load i32* %rtint21, align 4, !tbaa !1
  %cmp22 = icmp eq i32 %1, %4
  br i1 %cmp22, label %if.then23, label %for.inc

if.then23:                                        ; preds = %land.lhs.true15
  %call = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %insn.041)
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %land.lhs.true15, %if.then7, %if.then, %for.body, %if.else, %if.then23
  %last_note.1 = phi %struct.rtx_def* [ %last_note.040, %if.then23 ], [ %last_note.040, %if.else ], [ %last_note.040, %for.body ], [ null, %if.then ], [ %insn.041, %if.then7 ], [ %insn.041, %land.lhs.true15 ], [ %insn.041, %land.lhs.true ]
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %insn.041, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %tobool = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 36
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx3, align 8, !tbaa !5
  %next.0439 = load %struct.rtx_def** %rtx, align 8
  %tobool440 = icmp eq %struct.rtx_def* %next.0439, null
  br i1 %tobool440, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %entry, %while.body
  %next.0441 = phi %struct.rtx_def* [ %next.0, %while.body ], [ %next.0439, %entry ]
  %2 = getelementptr inbounds %struct.rtx_def* %next.0441, i64 0, i32 0
  %bf.load4 = load i32* %2, align 8
  %bf.clear5 = and i32 %bf.load4, 134217728
  %tobool6 = icmp eq i32 %bf.clear5, 0
  br i1 %tobool6, label %while.end, label %while.body

while.body:                                       ; preds = %land.rhs
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %next.0441, i64 0, i32 1, i64 2
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %next.0 = load %struct.rtx_def** %rtx9, align 8
  %tobool = icmp eq %struct.rtx_def* %next.0, null
  br i1 %tobool, label %while.end, label %land.rhs

while.end:                                        ; preds = %while.body, %land.rhs, %entry
  %tobool.lcssa = phi i1 [ false, %entry ], [ false, %while.body ], [ true, %land.rhs ]
  %next.0.lcssa = phi %struct.rtx_def* [ null, %entry ], [ null, %while.body ], [ %next.0441, %land.rhs ]
  %bf.clear12 = and i32 %bf.load, 134217728
  %tobool13 = icmp eq i32 %bf.clear12, 0
  br i1 %tobool13, label %if.end, label %return

if.end:                                           ; preds = %while.end
  %call = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #7
  br i1 %tobool.lcssa, label %land.lhs.true, label %if.end22

land.lhs.true:                                    ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def* %next.0.lcssa, i64 0, i32 0
  %bf.load16 = load i32* %3, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 35
  br i1 %cmp18, label %if.then20, label %if.end22

if.then20:                                        ; preds = %land.lhs.true
  %call21 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %next.0.lcssa) #7
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %land.lhs.true, %if.end
  %bf.load23 = load i32* %0, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 33
  br i1 %cmp25, label %land.lhs.true27, label %if.end82

land.lhs.true27:                                  ; preds = %if.end22
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 7
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx30, align 8, !tbaa !5
  %tobool31 = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool31, label %if.end82, label %if.then32

if.then32:                                        ; preds = %land.lhs.true27
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx37 to i32*
  %5 = load i32* %rtint, align 4, !tbaa !1
  %cmp38 = icmp eq i32 %5, 0
  br i1 %cmp38, label %if.then40, label %if.else

if.then40:                                        ; preds = %if.then32
  %call41 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %4)
  %tobool43435 = icmp eq %struct.rtx_def* %next.0.lcssa, null
  br i1 %tobool43435, label %return, label %land.rhs44

land.rhs44:                                       ; preds = %if.then40, %while.body50
  %next.1436 = phi %struct.rtx_def* [ %7, %while.body50 ], [ %next.0.lcssa, %if.then40 ]
  %6 = getelementptr inbounds %struct.rtx_def* %next.1436, i64 0, i32 0
  %bf.load45 = load i32* %6, align 8
  %bf.clear47 = and i32 %bf.load45, 134217728
  %tobool48 = icmp eq i32 %bf.clear47, 0
  br i1 %tobool48, label %return, label %while.body50

while.body50:                                     ; preds = %land.rhs44
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %next.1436, i64 0, i32 1, i64 2
  %rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx53, align 8, !tbaa !5
  %tobool43 = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool43, label %return, label %land.rhs44

if.else:                                          ; preds = %if.then32
  %call55 = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %4) #7
  %cmp56 = icmp eq %struct.rtx_def* %call55, null
  br i1 %cmp56, label %if.end82, label %land.lhs.true58

land.lhs.true58:                                  ; preds = %if.else
  %8 = getelementptr inbounds %struct.rtx_def* %call55, i64 0, i32 0
  %bf.load59 = load i32* %8, align 8
  %bf.clear60 = and i32 %bf.load59, 65535
  %cmp61 = icmp eq i32 %bf.clear60, 33
  br i1 %cmp61, label %land.lhs.true63, label %if.end82

land.lhs.true63:                                  ; preds = %land.lhs.true58
  %arrayidx65 = getelementptr inbounds %struct.rtx_def* %call55, i64 0, i32 1, i64 3
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx66, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load67 = load i32* %10, align 8
  %11 = and i32 %bf.load67, 65534
  %switch = icmp eq i32 %11, 44
  br i1 %switch, label %if.then78, label %if.end82

if.then78:                                        ; preds = %land.lhs.true63
  %call79 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call55)
  br label %if.end82

if.end82:                                         ; preds = %land.lhs.true63, %if.else, %land.lhs.true27, %if.then78, %land.lhs.true58, %if.end22
  %bf.load83 = load i32* %0, align 8
  %bf.clear84 = and i32 %bf.load83, 65535
  switch i32 %bf.clear84, label %while.cond207.preheader [
    i32 33, label %land.lhs.true87
    i32 32, label %if.then165
    i32 34, label %if.then165
  ]

land.lhs.true87:                                  ; preds = %if.end82
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx90, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load91 = load i32* %13, align 8
  %14 = and i32 %bf.load91, 65534
  %switch409 = icmp eq i32 %14, 44
  br i1 %switch409, label %if.then103, label %while.cond207.preheader

if.then103:                                       ; preds = %land.lhs.true87
  %bf.clear92 = and i32 %bf.load91, 65535
  %cmp109 = icmp eq i32 %bf.clear92, 45
  %idxprom = zext i1 %cmp109 to i64
  %arrayidx112 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 %idxprom
  %rtvec = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtvec_def**
  %15 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %15, i64 0, i32 0
  %16 = load i32* %num_elem, align 4, !tbaa !15
  %cmp113422 = icmp sgt i32 %16, 0
  br i1 %cmp113422, label %for.body, label %while.cond142.preheader

while.cond142.preheader:                          ; preds = %for.inc, %if.then103
  %tobool143419 = icmp eq %struct.rtx_def* %next.0.lcssa, null
  br i1 %tobool143419, label %return, label %land.rhs144

for.body:                                         ; preds = %if.then103, %for.inc.for.body_crit_edge
  %17 = phi %struct.rtvec_def* [ %.pre, %for.inc.for.body_crit_edge ], [ %15, %if.then103 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.for.body_crit_edge ], [ 0, %if.then103 ]
  %arrayidx120 = getelementptr inbounds %struct.rtvec_def* %17, i64 0, i32 1, i64 %indvars.iv
  %18 = load %struct.rtx_def** %arrayidx120, align 8, !tbaa !5
  %arrayidx122 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx123, align 8, !tbaa !5
  %arrayidx125 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 3
  %rtint126 = bitcast %union.rtunion_def* %arrayidx125 to i32*
  %20 = load i32* %rtint126, align 4, !tbaa !1
  %cmp127 = icmp eq i32 %20, 0
  br i1 %cmp127, label %if.then129, label %for.inc

if.then129:                                       ; preds = %for.body
  %call140 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %19)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then129
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %16
  br i1 %exitcond, label %while.cond142.preheader, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  br label %for.body

land.rhs144:                                      ; preds = %while.cond142.preheader, %while.body150
  %next.2420 = phi %struct.rtx_def* [ %22, %while.body150 ], [ %next.0.lcssa, %while.cond142.preheader ]
  %21 = getelementptr inbounds %struct.rtx_def* %next.2420, i64 0, i32 0
  %bf.load145 = load i32* %21, align 8
  %bf.clear147 = and i32 %bf.load145, 134217728
  %tobool148 = icmp eq i32 %bf.clear147, 0
  br i1 %tobool148, label %return, label %while.body150

while.body150:                                    ; preds = %land.rhs144
  %arrayidx152 = getelementptr inbounds %struct.rtx_def* %next.2420, i64 0, i32 1, i64 2
  %rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx153, align 8, !tbaa !5
  %tobool143 = icmp eq %struct.rtx_def* %22, null
  br i1 %tobool143, label %return, label %land.rhs144

while.cond207.preheader:                          ; preds = %for.inc201, %if.end82, %land.lhs.true87, %if.then165
  %tobool208424 = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool208424, label %while.end223, label %land.rhs209

if.then165:                                       ; preds = %if.end82, %if.end82
  %arrayidx167 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %note.0.in431 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**
  %note.0432 = load %struct.rtx_def** %note.0.in431, align 8
  %tobool170433 = icmp eq %struct.rtx_def* %note.0432, null
  br i1 %tobool170433, label %while.cond207.preheader, label %for.body171

for.body171:                                      ; preds = %if.then165, %for.inc201
  %note.0434 = phi %struct.rtx_def* [ %note.0, %for.inc201 ], [ %note.0432, %if.then165 ]
  %23 = getelementptr inbounds %struct.rtx_def* %note.0434, i64 0, i32 0
  %bf.load172 = load i32* %23, align 8
  %bf.clear174 = and i32 %bf.load172, 16711680
  %cmp175 = icmp eq i32 %bf.clear174, 851968
  br i1 %cmp175, label %land.lhs.true177, label %for.inc201

land.lhs.true177:                                 ; preds = %for.body171
  %arrayidx179 = getelementptr inbounds %struct.rtx_def* %note.0434, i64 0, i32 1, i64 0
  %rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx180, align 8, !tbaa !5
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load181 = load i32* %25, align 8
  %bf.clear182 = and i32 %bf.load181, 65535
  %cmp183 = icmp eq i32 %bf.clear182, 36
  br i1 %cmp183, label %if.then185, label %for.inc201

if.then185:                                       ; preds = %land.lhs.true177
  %arrayidx190 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 3
  %rtint191 = bitcast %union.rtunion_def* %arrayidx190 to i32*
  %26 = load i32* %rtint191, align 4, !tbaa !1
  %cmp192 = icmp eq i32 %26, 0
  br i1 %cmp192, label %if.then194, label %for.inc201

if.then194:                                       ; preds = %if.then185
  %call198 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %24)
  br label %for.inc201

for.inc201:                                       ; preds = %for.body171, %land.lhs.true177, %if.then194, %if.then185
  %arrayidx203 = getelementptr inbounds %struct.rtx_def* %note.0434, i64 0, i32 1, i64 1
  %note.0.in = bitcast %union.rtunion_def* %arrayidx203 to %struct.rtx_def**
  %note.0 = load %struct.rtx_def** %note.0.in, align 8
  %tobool170 = icmp eq %struct.rtx_def* %note.0, null
  br i1 %tobool170, label %while.cond207.preheader, label %for.body171

land.rhs209:                                      ; preds = %while.cond207.preheader, %while.body219
  %prev.0425 = phi %struct.rtx_def* [ %28, %while.body219 ], [ %1, %while.cond207.preheader ]
  %27 = getelementptr inbounds %struct.rtx_def* %prev.0425, i64 0, i32 0
  %bf.load210 = load i32* %27, align 8
  %bf.clear212 = and i32 %bf.load210, 134217728
  %tobool213 = icmp ne i32 %bf.clear212, 0
  %bf.clear215 = and i32 %bf.load210, 65535
  %cmp216 = icmp eq i32 %bf.clear215, 37
  %or.cond407 = or i1 %tobool213, %cmp216
  br i1 %or.cond407, label %while.body219, label %while.end223

while.body219:                                    ; preds = %land.rhs209
  %arrayidx221 = getelementptr inbounds %struct.rtx_def* %prev.0425, i64 0, i32 1, i64 1
  %rtx222 = bitcast %union.rtunion_def* %arrayidx221 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx222, align 8, !tbaa !5
  %tobool208 = icmp eq %struct.rtx_def* %28, null
  br i1 %tobool208, label %while.end223, label %land.rhs209

while.end223:                                     ; preds = %while.body219, %land.rhs209, %while.cond207.preheader
  %tobool208.lcssa = phi i1 [ false, %while.cond207.preheader ], [ false, %while.body219 ], [ true, %land.rhs209 ]
  %prev.0.lcssa = phi %struct.rtx_def* [ null, %while.cond207.preheader ], [ null, %while.body219 ], [ %prev.0425, %land.rhs209 ]
  br i1 %cmp, label %land.lhs.true225, label %return

land.lhs.true225:                                 ; preds = %while.end223
  %29 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp229 = icmp eq %struct.rtx_def* %29, null
  br i1 %cmp229, label %if.end266, label %land.lhs.true231

land.lhs.true231:                                 ; preds = %land.lhs.true225
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load235 = load i32* %30, align 8
  %bf.clear236 = and i32 %bf.load235, 65535
  %cmp237 = icmp eq i32 %bf.clear236, 33
  br i1 %cmp237, label %land.lhs.true239, label %if.end266

land.lhs.true239:                                 ; preds = %land.lhs.true231
  %arrayidx244 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 3
  %rtx245 = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx245, align 8, !tbaa !5
  %32 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load246 = load i32* %32, align 8
  %33 = and i32 %bf.load246, 65534
  %switch410 = icmp eq i32 %33, 44
  br i1 %switch410, label %if.then261, label %if.end266

if.then261:                                       ; preds = %land.lhs.true239
  %call265 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %29)
  br label %if.end266

if.end266:                                        ; preds = %land.lhs.true239, %land.lhs.true225, %if.then261, %land.lhs.true231
  %next.3 = phi %struct.rtx_def* [ %call265, %if.then261 ], [ %next.0.lcssa, %land.lhs.true231 ], [ %next.0.lcssa, %land.lhs.true225 ], [ %next.0.lcssa, %land.lhs.true239 ]
  br i1 %tobool208.lcssa, label %land.lhs.true270, label %return

land.lhs.true270:                                 ; preds = %if.end266
  %34 = getelementptr inbounds %struct.rtx_def* %prev.0.lcssa, i64 0, i32 0
  %bf.load271 = load i32* %34, align 8
  %bf.clear272 = and i32 %bf.load271, 65535
  %cmp273 = icmp eq i32 %bf.clear272, 35
  %cmp277 = icmp ne %struct.rtx_def* %next.3, null
  %or.cond338 = and i1 %cmp273, %cmp277
  br i1 %or.cond338, label %land.rhs279, label %return

while.cond276:                                    ; preds = %if.then313, %if.else329, %if.then325
  %next.4 = phi %struct.rtx_def* [ %40, %if.then313 ], [ %43, %if.then325 ], [ %call330, %if.else329 ]
  %cmp277.old = icmp eq %struct.rtx_def* %next.4, null
  br i1 %cmp277.old, label %return, label %land.rhs279

land.rhs279:                                      ; preds = %land.lhs.true270, %while.cond276
  %next.5 = phi %struct.rtx_def* [ %next.4, %while.cond276 ], [ %next.3, %land.lhs.true270 ]
  %35 = getelementptr inbounds %struct.rtx_def* %next.5, i64 0, i32 0
  %bf.load280 = load i32* %35, align 8
  %bf.clear281 = and i32 %bf.load280, 65535
  %idxprom282406 = zext i32 %bf.clear281 to i64
  %arrayidx283 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom282406
  %36 = load i8* %arrayidx283, align 1, !tbaa !11
  %cmp285 = icmp eq i8 %36, 105
  %cmp288 = icmp eq i32 %bf.clear281, 37
  %or.cond335 = or i1 %cmp285, %cmp288
  %cmp291 = icmp eq i32 %bf.clear281, 35
  %or.cond336 = or i1 %or.cond335, %cmp291
  %37 = and i32 %bf.load280, 134283263
  %38 = icmp eq i32 %37, 134217764
  %or.cond414 = or i1 %or.cond336, %38
  br i1 %or.cond414, label %while.body304, label %return

while.body304:                                    ; preds = %land.rhs279
  br i1 %cmp288, label %land.lhs.true307, label %if.else317

land.lhs.true307:                                 ; preds = %while.body304
  %arrayidx309 = getelementptr inbounds %struct.rtx_def* %next.5, i64 0, i32 1, i64 4
  %rtint310 = bitcast %union.rtunion_def* %arrayidx309 to i32*
  %39 = load i32* %rtint310, align 4, !tbaa !1
  %cmp311 = icmp eq i32 %39, -91
  br i1 %cmp311, label %if.else329, label %if.then313

if.then313:                                       ; preds = %land.lhs.true307
  %arrayidx315 = getelementptr inbounds %struct.rtx_def* %next.5, i64 0, i32 1, i64 2
  %rtx316 = bitcast %union.rtunion_def* %arrayidx315 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx316, align 8, !tbaa !5
  br label %while.cond276

if.else317:                                       ; preds = %while.body304
  %41 = and i32 %bf.load280, 134283263
  %42 = icmp eq i32 %41, 134217764
  br i1 %42, label %if.then325, label %if.else329

if.then325:                                       ; preds = %if.else317
  %arrayidx327 = getelementptr inbounds %struct.rtx_def* %next.5, i64 0, i32 1, i64 2
  %rtx328 = bitcast %union.rtunion_def* %arrayidx327 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx328, align 8, !tbaa !5
  br label %while.cond276

if.else329:                                       ; preds = %if.else317, %land.lhs.true307
  %call330 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %next.5)
  br label %while.cond276

return:                                           ; preds = %while.body50, %land.rhs44, %while.body150, %land.rhs144, %land.rhs279, %while.cond276, %if.then40, %while.cond142.preheader, %while.end223, %if.end266, %land.lhs.true270, %while.end
  %retval.0 = phi %struct.rtx_def* [ %next.0.lcssa, %while.end ], [ %next.3, %land.lhs.true270 ], [ %next.3, %if.end266 ], [ %next.0.lcssa, %while.end223 ], [ null, %while.cond142.preheader ], [ null, %if.then40 ], [ %next.5, %land.rhs279 ], [ null, %while.cond276 ], [ null, %while.body150 ], [ %next.2420, %land.rhs144 ], [ null, %while.body50 ], [ %next.1436, %land.rhs44 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define zeroext i1 @squeeze_notes(%struct.rtx_def** nocapture %startp, %struct.rtx_def** nocapture %endp) #0 {
entry:
  %0 = load %struct.rtx_def** %startp, align 8, !tbaa !5
  %1 = load %struct.rtx_def** %endp, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp109114121 = icmp eq %struct.rtx_def* %0, %2
  br i1 %cmp109114121, label %for.end, label %for.body.lr.ph.lr.ph

for.cond.outer.loopexit:                          ; preds = %for.body, %land.lhs.true
  %cmp109114 = icmp eq %struct.rtx_def* %3, %2
  br i1 %cmp109114, label %for.end, label %for.body.lr.ph.lr.ph

for.body.lr.ph.lr.ph:                             ; preds = %entry, %for.cond.outer.loopexit
  %start.0.ph124 = phi %struct.rtx_def* [ %start.0.ph104116, %for.cond.outer.loopexit ], [ %0, %entry ]
  %last.0.ph123 = phi %struct.rtx_def* [ %insn.0110, %for.cond.outer.loopexit ], [ null, %entry ]
  %insn.0.ph122 = phi %struct.rtx_def* [ %3, %for.cond.outer.loopexit ], [ %0, %entry ]
  br label %for.body.lr.ph

for.cond.outer102.loopexit:                       ; preds = %if.then
  %cmp109 = icmp eq %struct.rtx_def* %3, %2
  br i1 %cmp109, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.body.lr.ph.lr.ph, %for.cond.outer102.loopexit
  %start.0.ph104116 = phi %struct.rtx_def* [ %start.0.ph124, %for.body.lr.ph.lr.ph ], [ %3, %for.cond.outer102.loopexit ]
  %insn.0.ph103115 = phi %struct.rtx_def* [ %insn.0.ph122, %for.body.lr.ph.lr.ph ], [ %3, %for.cond.outer102.loopexit ]
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %start.0.ph104116, i64 0, i32 1, i64 1
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %start.0.c = ptrtoint %struct.rtx_def* %start.0.ph104116 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.else
  %insn.0110 = phi %struct.rtx_def* [ %insn.0.ph103115, %for.body.lr.ph ], [ %3, %if.else ]
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn.0110, i64 0, i32 1, i64 2
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx3, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.rtx_def* %insn.0110, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 37
  br i1 %cmp4, label %land.lhs.true, label %for.cond.outer.loopexit

land.lhs.true:                                    ; preds = %for.body
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %insn.0110, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx6 to i32*
  %5 = load i32* %rtint, align 4, !tbaa !1
  %.off = add i32 %5, 98
  %switch = icmp ult i32 %.off, 6
  br i1 %switch, label %if.then, label %for.cond.outer.loopexit

if.then:                                          ; preds = %land.lhs.true
  %cmp32 = icmp eq %struct.rtx_def* %insn.0110, %start.0.ph104116
  br i1 %cmp32, label %for.cond.outer102.loopexit, label %if.else

if.else:                                          ; preds = %if.then
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %insn.0110, i64 0, i32 1, i64 1
  %rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx36, align 8, !tbaa !5
  %7 = load %struct.rtx_def** %rtx39, align 8, !tbaa !5
  %8 = getelementptr inbounds %union.rtunion_def* %arrayidx35, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %7 to i64
  store i64 %.c, i64* %8, align 8, !tbaa !5
  %9 = getelementptr inbounds %union.rtunion_def* %arrayidx2, i64 0, i32 0
  store i64 %start.0.c, i64* %9, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 2, i32 0
  %insn.0.c = ptrtoint %struct.rtx_def* %insn.0110 to i64
  store i64 %insn.0.c, i64* %10, align 8, !tbaa !5
  %11 = load %struct.rtx_def** %rtx3, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 1, i32 0
  store i64 %insn.0.c, i64* %12, align 8, !tbaa !5
  %13 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 2, i32 0
  %.c100 = ptrtoint %struct.rtx_def* %3 to i64
  store i64 %.c100, i64* %13, align 8, !tbaa !5
  %14 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1, i32 0
  %.c101 = ptrtoint %struct.rtx_def* %6 to i64
  store i64 %.c101, i64* %14, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %3, %2
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.cond.outer.loopexit, %if.else, %entry
  %last.0.ph.lcssa = phi %struct.rtx_def* [ null, %entry ], [ %last.0.ph123, %if.else ], [ %insn.0110, %for.cond.outer.loopexit ]
  %start.0.ph104.lcssa108 = phi %struct.rtx_def* [ %0, %entry ], [ %start.0.ph104116, %if.else ], [ %start.0.ph104116, %for.cond.outer.loopexit ]
  %cmp66 = icmp eq %struct.rtx_def* %start.0.ph104.lcssa108, %2
  br i1 %cmp66, label %return, label %if.end68

if.end68:                                         ; preds = %for.end
  store %struct.rtx_def* %start.0.ph104.lcssa108, %struct.rtx_def** %startp, align 8, !tbaa !5
  store %struct.rtx_def* %last.0.ph.lcssa, %struct.rtx_def** %endp, align 8, !tbaa !5
  br label %return

return:                                           ; preds = %for.cond.outer102.loopexit, %for.end, %if.end68
  %retval.0 = phi i1 [ false, %if.end68 ], [ true, %for.end ], [ true, %for.cond.outer102.loopexit ]
  ret i1 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_label_before(%struct.rtx_def* %insn) #0 {
entry:
  %call = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn) #7
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 36
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %call2 = tail call %struct.rtx_def* @gen_label_rtx() #7
  %call3 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %call2, %struct.rtx_def* %1) #7
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %call2, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx5 to i32*
  store i32 0, i32* %rtint, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %label.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ %call, %lor.lhs.false ]
  ret %struct.rtx_def* %label.0
}

declare %struct.rtx_def* @gen_label_rtx() #1

declare %struct.rtx_def* @emit_label_after(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @get_label_after(%struct.rtx_def* %insn) #0 {
entry:
  %call = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %insn) #7
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 36
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call2 = tail call %struct.rtx_def* @gen_label_rtx() #7
  %call3 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %call2, %struct.rtx_def* %insn) #7
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call2, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  store i32 0, i32* %rtint, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %label.0 = phi %struct.rtx_def* [ %call2, %if.then ], [ %call, %lor.lhs.false ]
  ret %struct.rtx_def* %label.0
}

; Function Attrs: nounwind uwtable
define i32 @reversed_comparison_code_parts(i32 %code, %struct.rtx_def* %arg0, %struct.rtx_def* nocapture readonly %arg1, %struct.rtx_def* %insn) #0 {
entry:
  %idxprom = sext i32 %code to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !11
  %cmp = icmp eq i8 %0, 60
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %arg0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp2 = icmp eq i32 %bf.clear, 0
  br i1 %cmp2, label %if.then4, label %if.end8

if.then4:                                         ; preds = %if.end
  %2 = getelementptr inbounds %struct.rtx_def* %arg1, i64 0, i32 0
  %bf.load5 = load i32* %2, align 8
  %bf.lshr6 = lshr i32 %bf.load5, 16
  %bf.clear7 = and i32 %bf.lshr6, 255
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end
  %mode.0 = phi i32 [ %bf.clear7, %if.then4 ], [ %bf.clear, %if.end ]
  %idxprom9154 = zext i32 %mode.0 to i64
  %arrayidx10 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom9154
  %3 = load i32* %arrayidx10, align 4, !tbaa !11
  %cmp11 = icmp eq i32 %3, 4
  br i1 %cmp11, label %if.then13, label %if.end19

if.then13:                                        ; preds = %if.end8
  %mode.0.off = add i32 %mode.0, -57
  %mode.0.cmp = icmp ugt i32 %mode.0.off, 1
  br i1 %mode.0.cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then13
  switch i32 %code, label %sw.default.i [
    i32 103, label %return
    i32 102, label %sw.bb1.i
    i32 105, label %sw.bb2.i
    i32 104, label %sw.bb3.i
    i32 107, label %sw.bb4.i
    i32 106, label %sw.bb5.i
    i32 109, label %sw.bb6.i
    i32 108, label %sw.bb7.i
    i32 111, label %sw.bb8.i
    i32 110, label %sw.bb9.i
    i32 112, label %sw.bb10.i
    i32 113, label %sw.bb11.i
    i32 118, label %sw.bb12.i
    i32 117, label %sw.bb12.i
    i32 116, label %sw.bb12.i
    i32 115, label %sw.bb12.i
    i32 114, label %sw.bb12.i
    i32 119, label %sw.bb12.i
  ]

sw.bb1.i:                                         ; preds = %cond.true
  br label %return

sw.bb2.i:                                         ; preds = %cond.true
  br label %return

sw.bb3.i:                                         ; preds = %cond.true
  br label %return

sw.bb4.i:                                         ; preds = %cond.true
  br label %return

sw.bb5.i:                                         ; preds = %cond.true
  br label %return

sw.bb6.i:                                         ; preds = %cond.true
  br label %return

sw.bb7.i:                                         ; preds = %cond.true
  br label %return

sw.bb8.i:                                         ; preds = %cond.true
  br label %return

sw.bb9.i:                                         ; preds = %cond.true
  br label %return

sw.bb10.i:                                        ; preds = %cond.true
  br label %return

sw.bb11.i:                                        ; preds = %cond.true
  br label %return

sw.bb12.i:                                        ; preds = %cond.true, %cond.true, %cond.true, %cond.true, %cond.true, %cond.true
  br label %return

sw.default.i:                                     ; preds = %cond.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.reverse_condition, i64 0, i64 0)) #8
  unreachable

cond.false:                                       ; preds = %if.then13
  switch i32 %code, label %sw.default.i167 [
    i32 103, label %return
    i32 102, label %sw.bb1.i155
    i32 105, label %sw.bb2.i156
    i32 104, label %sw.bb3.i157
    i32 107, label %sw.bb4.i158
    i32 106, label %sw.bb5.i159
    i32 119, label %sw.bb6.i160
    i32 112, label %sw.bb7.i161
    i32 113, label %sw.bb8.i162
    i32 118, label %sw.bb9.i163
    i32 117, label %sw.bb10.i164
    i32 116, label %sw.bb11.i165
    i32 115, label %sw.bb12.i166
    i32 114, label %sw.bb13.i
  ]

sw.bb1.i155:                                      ; preds = %cond.false
  br label %return

sw.bb2.i156:                                      ; preds = %cond.false
  br label %return

sw.bb3.i157:                                      ; preds = %cond.false
  br label %return

sw.bb4.i158:                                      ; preds = %cond.false
  br label %return

sw.bb5.i159:                                      ; preds = %cond.false
  br label %return

sw.bb6.i160:                                      ; preds = %cond.false
  br label %return

sw.bb7.i161:                                      ; preds = %cond.false
  br label %return

sw.bb8.i162:                                      ; preds = %cond.false
  br label %return

sw.bb9.i163:                                      ; preds = %cond.false
  br label %return

sw.bb10.i164:                                     ; preds = %cond.false
  br label %return

sw.bb11.i165:                                     ; preds = %cond.false
  br label %return

sw.bb12.i166:                                     ; preds = %cond.false
  br label %return

sw.bb13.i:                                        ; preds = %cond.false
  br label %return

sw.default.i167:                                  ; preds = %cond.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 872, i8* getelementptr inbounds ([34 x i8]* @__FUNCTION__.reverse_condition_maybe_unordered, i64 0, i64 0)) #8
  unreachable

if.end19:                                         ; preds = %if.end8
  switch i32 %code, label %sw.epilog [
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 115, label %return
    i32 116, label %return
    i32 117, label %return
    i32 118, label %return
    i32 113, label %sw.bb8.i191
    i32 114, label %sw.bb13.i196
    i32 119, label %sw.bb6.i189
    i32 112, label %sw.bb7.i190
  ]

sw.bb:                                            ; preds = %if.end19, %if.end19, %if.end19, %if.end19, %if.end19, %if.end19
  switch i32 %code, label %sw.default.i181 [
    i32 103, label %return
    i32 102, label %sw.bb1.i169
    i32 105, label %sw.bb2.i170
    i32 104, label %sw.bb3.i171
    i32 107, label %sw.bb4.i172
    i32 106, label %sw.bb5.i173
    i32 109, label %sw.bb6.i174
    i32 108, label %sw.bb7.i175
    i32 111, label %sw.bb8.i176
    i32 110, label %sw.bb9.i177
  ]

sw.bb1.i169:                                      ; preds = %sw.bb
  br label %return

sw.bb2.i170:                                      ; preds = %sw.bb
  br label %return

sw.bb3.i171:                                      ; preds = %sw.bb
  br label %return

sw.bb4.i172:                                      ; preds = %sw.bb
  br label %return

sw.bb5.i173:                                      ; preds = %sw.bb
  br label %return

sw.bb6.i174:                                      ; preds = %sw.bb
  br label %return

sw.bb7.i175:                                      ; preds = %sw.bb
  br label %return

sw.bb8.i176:                                      ; preds = %sw.bb
  br label %return

sw.bb9.i177:                                      ; preds = %sw.bb
  br label %return

sw.default.i181:                                  ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.reverse_condition, i64 0, i64 0)) #8
  unreachable

sw.bb6.i189:                                      ; preds = %if.end19
  br label %return

sw.bb7.i190:                                      ; preds = %if.end19
  br label %return

sw.bb8.i191:                                      ; preds = %if.end19
  br label %return

sw.bb13.i196:                                     ; preds = %if.end19
  br label %return

sw.epilog:                                        ; preds = %if.end19
  %4 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !1
  %tobool = icmp eq i32 %4, 0
  br i1 %tobool, label %if.end90, label %if.then24

if.then24:                                        ; preds = %sw.epilog
  switch i32 %code, label %sw.default.i212 [
    i32 103, label %return
    i32 102, label %sw.bb1.i200
    i32 105, label %sw.bb2.i201
    i32 104, label %sw.bb3.i202
    i32 107, label %sw.bb4.i203
    i32 106, label %sw.bb5.i204
    i32 117, label %sw.bb12.i211
    i32 116, label %sw.bb12.i211
    i32 115, label %sw.bb12.i211
    i32 114, label %sw.bb12.i211
    i32 119, label %sw.bb12.i211
    i32 113, label %sw.bb11.i210
    i32 118, label %sw.bb12.i211
  ]

sw.bb1.i200:                                      ; preds = %if.then24
  br label %return

sw.bb2.i201:                                      ; preds = %if.then24
  br label %return

sw.bb3.i202:                                      ; preds = %if.then24
  br label %return

sw.bb4.i203:                                      ; preds = %if.then24
  br label %return

sw.bb5.i204:                                      ; preds = %if.then24
  br label %return

sw.bb11.i210:                                     ; preds = %if.then24
  br label %return

sw.bb12.i211:                                     ; preds = %if.then24, %if.then24, %if.then24, %if.then24, %if.then24, %if.then24
  br label %return

sw.default.i212:                                  ; preds = %if.then24
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.reverse_condition, i64 0, i64 0)) #8
  unreachable

if.end90:                                         ; preds = %sw.epilog
  %bf.clear92 = and i32 %bf.load, 65535
  %cmp93 = icmp eq i32 %bf.clear92, 54
  br i1 %cmp93, label %if.then120, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end90
  %bf.clear97 = and i32 %bf.load, 16711680
  %cmp98 = icmp eq i32 %bf.clear97, 0
  br i1 %cmp98, label %return, label %land.lhs.true100

land.lhs.true100:                                 ; preds = %lor.lhs.false
  %idxprom101242 = zext i32 %mode.0 to i64
  %arrayidx102 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom101242
  %5 = load i32* %arrayidx102, align 4, !tbaa !11
  switch i32 %5, label %if.then120 [
    i32 4, label %return
    i32 2, label %return
    i32 6, label %return
    i32 8, label %return
  ]

if.then120:                                       ; preds = %land.lhs.true100, %if.end90
  switch i32 %code, label %sw.default.i227 [
    i32 103, label %return
    i32 102, label %sw.bb1.i215
    i32 105, label %sw.bb2.i216
    i32 104, label %sw.bb3.i217
    i32 107, label %sw.bb4.i218
    i32 106, label %sw.bb5.i219
    i32 109, label %sw.bb6.i220
    i32 108, label %sw.bb7.i221
    i32 111, label %sw.bb8.i222
    i32 110, label %sw.bb9.i223
    i32 112, label %sw.bb10.i224
    i32 113, label %sw.bb11.i225
    i32 118, label %sw.bb12.i226
    i32 117, label %sw.bb12.i226
    i32 116, label %sw.bb12.i226
    i32 115, label %sw.bb12.i226
    i32 114, label %sw.bb12.i226
    i32 119, label %sw.bb12.i226
  ]

sw.bb1.i215:                                      ; preds = %if.then120
  br label %return

sw.bb2.i216:                                      ; preds = %if.then120
  br label %return

sw.bb3.i217:                                      ; preds = %if.then120
  br label %return

sw.bb4.i218:                                      ; preds = %if.then120
  br label %return

sw.bb5.i219:                                      ; preds = %if.then120
  br label %return

sw.bb6.i220:                                      ; preds = %if.then120
  br label %return

sw.bb7.i221:                                      ; preds = %if.then120
  br label %return

sw.bb8.i222:                                      ; preds = %if.then120
  br label %return

sw.bb9.i223:                                      ; preds = %if.then120
  br label %return

sw.bb10.i224:                                     ; preds = %if.then120
  br label %return

sw.bb11.i225:                                     ; preds = %if.then120
  br label %return

sw.bb12.i226:                                     ; preds = %if.then120, %if.then120, %if.then120, %if.then120, %if.then120, %if.then120
  br label %return

sw.default.i227:                                  ; preds = %if.then120
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.reverse_condition, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %if.end19, %if.end19, %if.end19, %if.end19, %sw.bb12.i226, %sw.bb11.i225, %sw.bb10.i224, %sw.bb9.i223, %sw.bb8.i222, %sw.bb7.i221, %sw.bb6.i220, %sw.bb5.i219, %sw.bb4.i218, %sw.bb3.i217, %sw.bb2.i216, %sw.bb1.i215, %if.then120, %sw.bb12.i211, %sw.bb11.i210, %sw.bb5.i204, %sw.bb4.i203, %sw.bb3.i202, %sw.bb2.i201, %sw.bb1.i200, %if.then24, %sw.bb13.i196, %sw.bb8.i191, %sw.bb7.i190, %sw.bb6.i189, %sw.bb9.i177, %sw.bb8.i176, %sw.bb7.i175, %sw.bb6.i174, %sw.bb5.i173, %sw.bb4.i172, %sw.bb3.i171, %sw.bb2.i170, %sw.bb1.i169, %sw.bb, %sw.bb13.i, %sw.bb12.i166, %sw.bb11.i165, %sw.bb10.i164, %sw.bb9.i163, %sw.bb8.i162, %sw.bb7.i161, %sw.bb6.i160, %sw.bb5.i159, %sw.bb4.i158, %sw.bb3.i157, %sw.bb2.i156, %sw.bb1.i155, %cond.false, %sw.bb12.i, %sw.bb11.i, %sw.bb10.i, %sw.bb9.i, %sw.bb8.i, %sw.bb7.i, %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %cond.true, %lor.lhs.false, %land.lhs.true100, %land.lhs.true100, %land.lhs.true100, %land.lhs.true100, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %if.end19 ], [ 0, %if.end19 ], [ 0, %if.end19 ], [ 0, %if.end19 ], [ 0, %land.lhs.true100 ], [ 0, %land.lhs.true100 ], [ 0, %land.lhs.true100 ], [ 0, %land.lhs.true100 ], [ 0, %lor.lhs.false ], [ 0, %sw.bb12.i ], [ 112, %sw.bb11.i ], [ 113, %sw.bb10.i ], [ 109, %sw.bb9.i ], [ 108, %sw.bb8.i ], [ 111, %sw.bb7.i ], [ 110, %sw.bb6.i ], [ 105, %sw.bb5.i ], [ 104, %sw.bb4.i ], [ 107, %sw.bb3.i ], [ 106, %sw.bb2.i ], [ 103, %sw.bb1.i ], [ 102, %cond.true ], [ 119, %sw.bb13.i ], [ 107, %sw.bb12.i166 ], [ 106, %sw.bb11.i165 ], [ 105, %sw.bb10.i164 ], [ 104, %sw.bb9.i163 ], [ 112, %sw.bb8.i162 ], [ 113, %sw.bb7.i161 ], [ 114, %sw.bb6.i160 ], [ 116, %sw.bb5.i159 ], [ 115, %sw.bb4.i158 ], [ 118, %sw.bb3.i157 ], [ 117, %sw.bb2.i156 ], [ 103, %sw.bb1.i155 ], [ 102, %cond.false ], [ 109, %sw.bb9.i177 ], [ 108, %sw.bb8.i176 ], [ 111, %sw.bb7.i175 ], [ 110, %sw.bb6.i174 ], [ 105, %sw.bb5.i173 ], [ 104, %sw.bb4.i172 ], [ 107, %sw.bb3.i171 ], [ 106, %sw.bb2.i170 ], [ 103, %sw.bb1.i169 ], [ 102, %sw.bb ], [ 119, %sw.bb13.i196 ], [ 112, %sw.bb8.i191 ], [ 113, %sw.bb7.i190 ], [ 114, %sw.bb6.i189 ], [ 0, %sw.bb12.i211 ], [ 112, %sw.bb11.i210 ], [ 105, %sw.bb5.i204 ], [ 104, %sw.bb4.i203 ], [ 107, %sw.bb3.i202 ], [ 106, %sw.bb2.i201 ], [ 103, %sw.bb1.i200 ], [ 102, %if.then24 ], [ 0, %sw.bb12.i226 ], [ 112, %sw.bb11.i225 ], [ 113, %sw.bb10.i224 ], [ 109, %sw.bb9.i223 ], [ 108, %sw.bb8.i222 ], [ 111, %sw.bb7.i221 ], [ 110, %sw.bb6.i220 ], [ 105, %sw.bb5.i219 ], [ 104, %sw.bb4.i218 ], [ 107, %sw.bb3.i217 ], [ 106, %sw.bb2.i216 ], [ 103, %sw.bb1.i215 ], [ 102, %if.then120 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @reverse_condition(i32 %code) #0 {
entry:
  switch i32 %code, label %sw.default [
    i32 103, label %return
    i32 102, label %sw.bb1
    i32 105, label %sw.bb2
    i32 104, label %sw.bb3
    i32 107, label %sw.bb4
    i32 106, label %sw.bb5
    i32 109, label %sw.bb6
    i32 108, label %sw.bb7
    i32 111, label %sw.bb8
    i32 110, label %sw.bb9
    i32 112, label %sw.bb10
    i32 113, label %sw.bb11
    i32 118, label %sw.bb12
    i32 117, label %sw.bb12
    i32 116, label %sw.bb12
    i32 115, label %sw.bb12
    i32 114, label %sw.bb12
    i32 119, label %sw.bb12
  ]

sw.bb1:                                           ; preds = %entry
  br label %return

sw.bb2:                                           ; preds = %entry
  br label %return

sw.bb3:                                           ; preds = %entry
  br label %return

sw.bb4:                                           ; preds = %entry
  br label %return

sw.bb5:                                           ; preds = %entry
  br label %return

sw.bb6:                                           ; preds = %entry
  br label %return

sw.bb7:                                           ; preds = %entry
  br label %return

sw.bb8:                                           ; preds = %entry
  br label %return

sw.bb9:                                           ; preds = %entry
  br label %return

sw.bb10:                                          ; preds = %entry
  br label %return

sw.bb11:                                          ; preds = %entry
  br label %return

sw.bb12:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.reverse_condition, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %entry, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %retval.0 = phi i32 [ 0, %sw.bb12 ], [ 112, %sw.bb11 ], [ 113, %sw.bb10 ], [ 109, %sw.bb9 ], [ 108, %sw.bb8 ], [ 111, %sw.bb7 ], [ 110, %sw.bb6 ], [ 105, %sw.bb5 ], [ 104, %sw.bb4 ], [ 107, %sw.bb3 ], [ 106, %sw.bb2 ], [ 103, %sw.bb1 ], [ 102, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @reverse_condition_maybe_unordered(i32 %code) #0 {
entry:
  switch i32 %code, label %sw.default [
    i32 103, label %return
    i32 102, label %sw.bb1
    i32 105, label %sw.bb2
    i32 104, label %sw.bb3
    i32 107, label %sw.bb4
    i32 106, label %sw.bb5
    i32 119, label %sw.bb6
    i32 112, label %sw.bb7
    i32 113, label %sw.bb8
    i32 118, label %sw.bb9
    i32 117, label %sw.bb10
    i32 116, label %sw.bb11
    i32 115, label %sw.bb12
    i32 114, label %sw.bb13
  ]

sw.bb1:                                           ; preds = %entry
  br label %return

sw.bb2:                                           ; preds = %entry
  br label %return

sw.bb3:                                           ; preds = %entry
  br label %return

sw.bb4:                                           ; preds = %entry
  br label %return

sw.bb5:                                           ; preds = %entry
  br label %return

sw.bb6:                                           ; preds = %entry
  br label %return

sw.bb7:                                           ; preds = %entry
  br label %return

sw.bb8:                                           ; preds = %entry
  br label %return

sw.bb9:                                           ; preds = %entry
  br label %return

sw.bb10:                                          ; preds = %entry
  br label %return

sw.bb11:                                          ; preds = %entry
  br label %return

sw.bb12:                                          ; preds = %entry
  br label %return

sw.bb13:                                          ; preds = %entry
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 872, i8* getelementptr inbounds ([34 x i8]* @__FUNCTION__.reverse_condition_maybe_unordered, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %entry, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %retval.0 = phi i32 [ 119, %sw.bb13 ], [ 107, %sw.bb12 ], [ 106, %sw.bb11 ], [ 105, %sw.bb10 ], [ 104, %sw.bb9 ], [ 112, %sw.bb8 ], [ 113, %sw.bb7 ], [ 114, %sw.bb6 ], [ 116, %sw.bb5 ], [ 115, %sw.bb4 ], [ 118, %sw.bb3 ], [ 117, %sw.bb2 ], [ 103, %sw.bb1 ], [ 102, %entry ]
  ret i32 %retval.0
}

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @reversed_comparison_code(%struct.rtx_def* nocapture readonly %comparison, %struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %comparison, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom11 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom11
  %1 = load i8* %arrayidx, align 1, !tbaa !11
  %cmp = icmp eq i8 %1, 60
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %comparison, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %comparison, i64 0, i32 1, i64 1
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx7, align 8, !tbaa !5
  %call = tail call i32 @reversed_comparison_code_parts(i32 %bf.clear, %struct.rtx_def* %2, %struct.rtx_def* %3, %struct.rtx_def* %insn)
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define i32 @swap_condition(i32 %code) #0 {
entry:
  switch i32 %code, label %sw.default [
    i32 103, label %return
    i32 102, label %return
    i32 112, label %return
    i32 113, label %return
    i32 114, label %return
    i32 119, label %return
    i32 105, label %sw.bb1
    i32 104, label %sw.bb2
    i32 107, label %sw.bb3
    i32 106, label %sw.bb4
    i32 109, label %sw.bb5
    i32 108, label %sw.bb6
    i32 111, label %sw.bb7
    i32 110, label %sw.bb8
    i32 118, label %sw.bb9
    i32 117, label %sw.bb10
    i32 116, label %sw.bb11
    i32 115, label %sw.bb12
  ]

sw.bb1:                                           ; preds = %entry
  br label %return

sw.bb2:                                           ; preds = %entry
  br label %return

sw.bb3:                                           ; preds = %entry
  br label %return

sw.bb4:                                           ; preds = %entry
  br label %return

sw.bb5:                                           ; preds = %entry
  br label %return

sw.bb6:                                           ; preds = %entry
  br label %return

sw.bb7:                                           ; preds = %entry
  br label %return

sw.bb8:                                           ; preds = %entry
  br label %return

sw.bb9:                                           ; preds = %entry
  br label %return

sw.bb10:                                          ; preds = %entry
  br label %return

sw.bb11:                                          ; preds = %entry
  br label %return

sw.bb12:                                          ; preds = %entry
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 919, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.swap_condition, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %retval.0 = phi i32 [ 117, %sw.bb12 ], [ 118, %sw.bb11 ], [ 115, %sw.bb10 ], [ 116, %sw.bb9 ], [ 108, %sw.bb8 ], [ 109, %sw.bb7 ], [ 110, %sw.bb6 ], [ 111, %sw.bb5 ], [ 104, %sw.bb4 ], [ 105, %sw.bb3 ], [ 106, %sw.bb2 ], [ 107, %sw.bb1 ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @unsigned_condition(i32 %code) #0 {
entry:
  switch i32 %code, label %sw.default [
    i32 103, label %return
    i32 102, label %return
    i32 109, label %return
    i32 108, label %return
    i32 111, label %return
    i32 110, label %return
    i32 105, label %sw.bb1
    i32 104, label %sw.bb2
    i32 107, label %sw.bb3
    i32 106, label %sw.bb4
  ]

sw.bb1:                                           ; preds = %entry
  br label %return

sw.bb2:                                           ; preds = %entry
  br label %return

sw.bb3:                                           ; preds = %entry
  br label %return

sw.bb4:                                           ; preds = %entry
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 951, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.unsigned_condition, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %retval.0 = phi i32 [ 110, %sw.bb4 ], [ 111, %sw.bb3 ], [ 108, %sw.bb2 ], [ 109, %sw.bb1 ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @signed_condition(i32 %code) #0 {
entry:
  switch i32 %code, label %sw.default [
    i32 103, label %return
    i32 102, label %return
    i32 105, label %return
    i32 104, label %return
    i32 107, label %return
    i32 106, label %return
    i32 109, label %sw.bb1
    i32 108, label %sw.bb2
    i32 111, label %sw.bb3
    i32 110, label %sw.bb4
  ]

sw.bb1:                                           ; preds = %entry
  br label %return

sw.bb2:                                           ; preds = %entry
  br label %return

sw.bb3:                                           ; preds = %entry
  br label %return

sw.bb4:                                           ; preds = %entry
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 981, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.signed_condition, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %retval.0 = phi i32 [ 106, %sw.bb4 ], [ 107, %sw.bb3 ], [ 104, %sw.bb2 ], [ 105, %sw.bb1 ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ], [ %code, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readnone uwtable
define i32 @comparison_dominates_p(i32 %code1, i32 %code2) #4 {
entry:
  %cmp = icmp eq i32 %code1, 0
  %cmp1 = icmp eq i32 %code2, 0
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %code1, %code2
  br i1 %cmp2, label %return, label %if.end4

if.end4:                                          ; preds = %if.end
  switch i32 %code1, label %sw.epilog [
    i32 114, label %sw.bb
    i32 103, label %sw.bb10
    i32 118, label %sw.bb22
    i32 107, label %sw.bb28
    i32 116, label %sw.bb38
    i32 105, label %sw.bb44
    i32 104, label %sw.bb54
    i32 106, label %sw.bb54
    i32 119, label %sw.bb58
    i32 111, label %sw.bb64
    i32 109, label %sw.bb70
    i32 112, label %sw.bb76
  ]

sw.bb:                                            ; preds = %if.end4
  switch i32 %code2, label %sw.epilog [
    i32 117, label %return
    i32 115, label %return
  ]

sw.bb10:                                          ; preds = %if.end4
  switch i32 %code2, label %sw.epilog [
    i32 113, label %return
    i32 110, label %return
    i32 108, label %return
    i32 106, label %return
    i32 104, label %return
  ]

sw.bb22:                                          ; preds = %if.end4
  switch i32 %code2, label %sw.epilog [
    i32 117, label %return
    i32 102, label %return
  ]

sw.bb28:                                          ; preds = %if.end4
  switch i32 %code2, label %sw.epilog [
    i32 119, label %return
    i32 113, label %return
    i32 106, label %return
    i32 102, label %return
  ]

sw.bb38:                                          ; preds = %if.end4
  switch i32 %code2, label %sw.epilog [
    i32 115, label %return
    i32 102, label %return
  ]

sw.bb44:                                          ; preds = %if.end4
  switch i32 %code2, label %sw.epilog [
    i32 119, label %return
    i32 113, label %return
    i32 104, label %return
    i32 102, label %return
  ]

sw.bb54:                                          ; preds = %if.end4, %if.end4
  %cmp55 = icmp eq i32 %code2, 113
  br i1 %cmp55, label %return, label %sw.epilog

sw.bb58:                                          ; preds = %if.end4
  switch i32 %code2, label %sw.epilog [
    i32 113, label %return
    i32 102, label %return
  ]

sw.bb64:                                          ; preds = %if.end4
  %0 = and i32 %code2, -9
  %1 = icmp eq i32 %0, 102
  br i1 %1, label %return, label %sw.epilog

sw.bb70:                                          ; preds = %if.end4
  switch i32 %code2, label %sw.epilog [
    i32 108, label %return
    i32 102, label %return
  ]

sw.bb76:                                          ; preds = %if.end4
  switch i32 %code2, label %sw.epilog [
    i32 118, label %return
    i32 117, label %return
    i32 116, label %return
    i32 115, label %return
    i32 114, label %return
    i32 102, label %return
  ]

sw.epilog:                                        ; preds = %sw.bb76, %sw.bb70, %sw.bb58, %sw.bb44, %sw.bb38, %sw.bb28, %sw.bb22, %sw.bb10, %sw.bb, %if.end4, %sw.bb64, %sw.bb54
  br label %return

return:                                           ; preds = %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb70, %sw.bb70, %sw.bb64, %sw.bb58, %sw.bb58, %sw.bb54, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb44, %sw.bb38, %sw.bb38, %sw.bb28, %sw.bb28, %sw.bb28, %sw.bb28, %sw.bb22, %sw.bb22, %sw.bb10, %sw.bb10, %sw.bb10, %sw.bb10, %sw.bb10, %sw.bb, %sw.bb, %if.end, %entry, %sw.epilog
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ 0, %entry ], [ 1, %if.end ], [ 1, %sw.bb ], [ 1, %sw.bb ], [ 1, %sw.bb10 ], [ 1, %sw.bb10 ], [ 1, %sw.bb10 ], [ 1, %sw.bb10 ], [ 1, %sw.bb10 ], [ 1, %sw.bb22 ], [ 1, %sw.bb22 ], [ 1, %sw.bb28 ], [ 1, %sw.bb28 ], [ 1, %sw.bb28 ], [ 1, %sw.bb28 ], [ 1, %sw.bb38 ], [ 1, %sw.bb38 ], [ 1, %sw.bb44 ], [ 1, %sw.bb44 ], [ 1, %sw.bb44 ], [ 1, %sw.bb44 ], [ 1, %sw.bb54 ], [ 1, %sw.bb58 ], [ 1, %sw.bb58 ], [ 1, %sw.bb64 ], [ 1, %sw.bb70 ], [ 1, %sw.bb70 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @simplejump_p(%struct.rtx_def* nocapture readonly %insn) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1 = load i32* %2, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 47
  br i1 %cmp3, label %land.lhs.true4, label %land.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %fld8 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx10 = bitcast [1 x %union.rtunion_def]* %fld8 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx10, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load11 = load i32* %4, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 59
  br i1 %cmp13, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true4
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx19, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load20 = load i32* %6, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 67
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true4, %land.lhs.true, %entry
  %7 = phi i1 [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp22, %land.rhs ]
  %land.ext = zext i1 %7 to i32
  ret i32 %land.ext
}

; Function Attrs: nounwind readonly uwtable
define i32 @condjump_p(%struct.rtx_def* nocapture readonly %insn) #2 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %entry
  %fld1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx3 = bitcast [1 x %union.rtunion_def]* %fld1 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx3, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 59
  br i1 %cmp6, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx9, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load10 = load i32* %5, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  switch i32 %bf.clear11, label %land.end57 [
    i32 67, label %return
    i32 72, label %land.rhs
  ]

land.rhs:                                         ; preds = %if.end
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 2
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx19, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load20 = load i32* %7, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 59
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 1
  %rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx25, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load26 = load i32* %9, align 8
  br i1 %cmp22, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %land.rhs
  %bf.clear27 = and i32 %bf.load26, 65535
  switch i32 %bf.clear27, label %lor.rhs [
    i32 67, label %land.end57
    i32 51, label %land.end57
  ]

lor.rhs:                                          ; preds = %land.rhs, %land.lhs.true
  %bf.clear40 = and i32 %bf.load26, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 59
  br i1 %cmp41, label %land.rhs42, label %land.end57

land.rhs42:                                       ; preds = %lor.rhs
  %cmp48 = icmp eq i32 %bf.clear21, 67
  %cmp55 = icmp eq i32 %bf.clear21, 51
  %.cmp55 = or i1 %cmp48, %cmp55
  br label %land.end57

land.end57:                                       ; preds = %land.rhs42, %land.lhs.true, %land.lhs.true, %if.end, %lor.rhs
  %10 = phi i1 [ true, %land.lhs.true ], [ false, %lor.rhs ], [ false, %if.end ], [ true, %land.lhs.true ], [ %.cmp55, %land.rhs42 ]
  %land.ext = zext i1 %10 to i32
  br label %return

return:                                           ; preds = %if.end, %entry, %lor.lhs.false, %land.end57
  %retval.0 = phi i32 [ %land.ext, %land.end57 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 1, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @condjump_in_parallel_p(%struct.rtx_def* nocapture readonly %insn) #2 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %if.else, label %return

if.else:                                          ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtvec_def**
  %2 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %arrayidx3 = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 1, i64 0
  %3 = load %struct.rtx_def** %arrayidx3, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load4 = load i32* %4, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 47
  br i1 %cmp6, label %if.end8, label %return

if.end8:                                          ; preds = %if.else
  %fld9 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1
  %rtx11 = bitcast [1 x %union.rtunion_def]* %fld9 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx11, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load12 = load i32* %6, align 8
  %bf.clear13 = and i32 %bf.load12, 65535
  %cmp14 = icmp eq i32 %bf.clear13, 59
  br i1 %cmp14, label %if.end16, label %return

if.end16:                                         ; preds = %if.end8
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx19, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load20 = load i32* %8, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  switch i32 %bf.clear21, label %if.then31 [
    i32 67, label %return
    i32 72, label %if.end32
  ]

if.then31:                                        ; preds = %if.end16
  br label %return

if.end32:                                         ; preds = %if.end16
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 2
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx38, align 8, !tbaa !5
  %10 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !5
  %cmp39 = icmp eq %struct.rtx_def* %9, %10
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx45, align 8, !tbaa !5
  br i1 %cmp39, label %land.lhs.true, label %if.end59

land.lhs.true:                                    ; preds = %if.end32
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load46 = load i32* %12, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  switch i32 %bf.clear47, label %if.end59 [
    i32 67, label %return
    i32 51, label %return
  ]

if.end59:                                         ; preds = %if.end32, %land.lhs.true
  %cmp66 = icmp eq %struct.rtx_def* %11, %10
  br i1 %cmp66, label %land.lhs.true67, label %if.end88

land.lhs.true67:                                  ; preds = %if.end59
  %13 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load74 = load i32* %13, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  switch i32 %bf.clear75, label %if.end88 [
    i32 67, label %return
    i32 51, label %return
  ]

if.end88:                                         ; preds = %land.lhs.true67, %if.end59
  br label %return

return:                                           ; preds = %land.lhs.true67, %land.lhs.true67, %land.lhs.true, %land.lhs.true, %if.end16, %if.end8, %if.else, %entry, %if.end88, %if.then31
  %retval.0 = phi i32 [ 0, %if.then31 ], [ 0, %if.end88 ], [ 0, %entry ], [ 0, %if.else ], [ 0, %if.end8 ], [ 1, %if.end16 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true67 ], [ 1, %land.lhs.true67 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define %struct.rtx_def* @pc_set(%struct.rtx_def* nocapture readonly %insn) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1 = load i32* %2, align 8
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 39
  br i1 %cmp3, label %if.then4, label %if.end8

if.then4:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %arrayidx7 = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 0
  %4 = load %struct.rtx_def** %arrayidx7, align 8, !tbaa !5
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load9.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end
  %bf.load9 = phi i32 [ %bf.load9.pre, %if.then4 ], [ %bf.load1, %if.end ]
  %pat.0 = phi %struct.rtx_def* [ %4, %if.then4 ], [ %1, %if.end ]
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 47
  br i1 %cmp11, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %if.end8
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %pat.0, i64 0, i32 1, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx14, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load15 = load i32* %6, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 59
  br i1 %cmp17, label %return, label %if.end19

if.end19:                                         ; preds = %land.lhs.true, %if.end8
  br label %return

return:                                           ; preds = %land.lhs.true, %entry, %if.end19
  %retval.0 = phi %struct.rtx_def* [ null, %if.end19 ], [ null, %entry ], [ %pat.0, %land.lhs.true ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind readonly uwtable
define i32 @any_condjump_p(%struct.rtx_def* nocapture readonly %insn) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 33
  br i1 %cmp.i, label %if.end.i, label %return

if.end.i:                                         ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1.i = load i32* %2, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 39
  br i1 %cmp3.i, label %if.then4.i, label %if.end8.i

if.then4.i:                                       ; preds = %if.end.i
  %arrayidx6.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx6.i to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %arrayidx7.i = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 0
  %4 = load %struct.rtx_def** %arrayidx7.i, align 8, !tbaa !5
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load9.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then4.i, %if.end.i
  %bf.load9.i = phi i32 [ %bf.load9.pre.i, %if.then4.i ], [ %bf.load1.i, %if.end.i ]
  %pat.0.i = phi %struct.rtx_def* [ %4, %if.then4.i ], [ %1, %if.end.i ]
  %bf.clear10.i = and i32 %bf.load9.i, 65535
  %cmp11.i = icmp eq i32 %bf.clear10.i, 47
  br i1 %cmp11.i, label %land.lhs.true.i, label %return

land.lhs.true.i:                                  ; preds = %if.end8.i
  %arrayidx13.i = getelementptr inbounds %struct.rtx_def* %pat.0.i, i64 0, i32 1, i64 0
  %rtx14.i = bitcast %union.rtunion_def* %arrayidx13.i to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx14.i, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load15.i = load i32* %6, align 8
  %bf.clear16.i = and i32 %bf.load15.i, 65535
  %cmp17.i = icmp ne i32 %bf.clear16.i, 59
  %tobool = icmp eq %struct.rtx_def* %pat.0.i, null
  %or.cond = or i1 %cmp17.i, %tobool
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true.i
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pat.0.i, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 72
  br i1 %cmp, label %if.end2, label %return

if.end2:                                          ; preds = %if.end
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx8, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load9 = load i32* %10, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 2
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx16, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load17 = load i32* %12, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 59
  br i1 %cmp19, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %if.end2
  switch i32 %bf.clear10, label %lor.rhs [
    i32 67, label %lor.end26
    i32 51, label %lor.end26
  ]

lor.rhs:                                          ; preds = %land.lhs.true, %if.end2
  %cmp22 = icmp eq i32 %bf.clear10, 59
  br i1 %cmp22, label %land.rhs, label %lor.end26

land.rhs:                                         ; preds = %lor.rhs
  %cmp23 = icmp eq i32 %bf.clear18, 67
  %cmp25 = icmp eq i32 %bf.clear18, 51
  %.cmp25 = or i1 %cmp23, %cmp25
  br label %lor.end26

lor.end26:                                        ; preds = %land.rhs, %land.lhs.true, %land.lhs.true, %lor.rhs
  %13 = phi i1 [ true, %land.lhs.true ], [ false, %lor.rhs ], [ true, %land.lhs.true ], [ %.cmp25, %land.rhs ]
  %lor.ext = zext i1 %13 to i32
  br label %return

return:                                           ; preds = %land.lhs.true.i, %if.end8.i, %entry, %if.end, %lor.end26
  %retval.0 = phi i32 [ %lor.ext, %lor.end26 ], [ 0, %if.end ], [ 0, %entry ], [ 0, %land.lhs.true.i ], [ 0, %if.end8.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define %struct.rtx_def* @condjump_label(%struct.rtx_def* nocapture readonly %insn) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 33
  br i1 %cmp.i, label %if.end.i, label %return

if.end.i:                                         ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1.i = load i32* %2, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 39
  br i1 %cmp3.i, label %if.then4.i, label %if.end8.i

if.then4.i:                                       ; preds = %if.end.i
  %arrayidx6.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx6.i to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %arrayidx7.i = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 0
  %4 = load %struct.rtx_def** %arrayidx7.i, align 8, !tbaa !5
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load9.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then4.i, %if.end.i
  %bf.load9.i = phi i32 [ %bf.load9.pre.i, %if.then4.i ], [ %bf.load1.i, %if.end.i ]
  %pat.0.i = phi %struct.rtx_def* [ %4, %if.then4.i ], [ %1, %if.end.i ]
  %bf.clear10.i = and i32 %bf.load9.i, 65535
  %cmp11.i = icmp eq i32 %bf.clear10.i, 47
  br i1 %cmp11.i, label %land.lhs.true.i, label %return

land.lhs.true.i:                                  ; preds = %if.end8.i
  %arrayidx13.i = getelementptr inbounds %struct.rtx_def* %pat.0.i, i64 0, i32 1, i64 0
  %rtx14.i = bitcast %union.rtunion_def* %arrayidx13.i to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx14.i, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load15.i = load i32* %6, align 8
  %bf.clear16.i = and i32 %bf.load15.i, 65535
  %cmp17.i = icmp ne i32 %bf.clear16.i, 59
  %tobool = icmp eq %struct.rtx_def* %pat.0.i, null
  %or.cond = or i1 %cmp17.i, %tobool
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true.i
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pat.0.i, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.then6 [
    i32 67, label %return
    i32 72, label %if.end7
  ]

if.then6:                                         ; preds = %if.end
  br label %return

if.end7:                                          ; preds = %if.end
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 2
  %rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx10, align 8, !tbaa !5
  %10 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !5
  %cmp11 = icmp eq %struct.rtx_def* %9, %10
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx14, align 8, !tbaa !5
  br i1 %cmp11, label %land.lhs.true, label %if.end22

land.lhs.true:                                    ; preds = %if.end7
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load15 = load i32* %12, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 67
  br i1 %cmp17, label %return, label %if.end22

if.end22:                                         ; preds = %if.end7, %land.lhs.true
  %cmp26 = icmp eq %struct.rtx_def* %11, %10
  br i1 %cmp26, label %land.lhs.true27, label %if.end38

land.lhs.true27:                                  ; preds = %if.end22
  %13 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load31 = load i32* %13, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 67
  br i1 %cmp33, label %return, label %if.end38

if.end38:                                         ; preds = %land.lhs.true27, %if.end22
  br label %return

return:                                           ; preds = %land.lhs.true.i, %if.end8.i, %entry, %land.lhs.true27, %land.lhs.true, %if.end, %if.end38, %if.then6
  %retval.0 = phi %struct.rtx_def* [ null, %if.then6 ], [ null, %if.end38 ], [ %7, %if.end ], [ %11, %land.lhs.true ], [ %9, %land.lhs.true27 ], [ null, %entry ], [ null, %land.lhs.true.i ], [ null, %if.end8.i ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @returnjump_p(%struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %call = tail call i32 @for_each_rtx(%struct.rtx_def** %rtx, i32 (%struct.rtx_def**, i8*)* @returnjump_p_1, i8* null) #7
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) #1

; Function Attrs: nounwind readonly uwtable
define internal i32 @returnjump_p_1(%struct.rtx_def** nocapture readonly %loc, i8* nocapture readnone %data) #2 {
entry:
  %0 = load %struct.rtx_def** %loc, align 8, !tbaa !5
  %tobool = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool, label %land.end8, label %land.rhs

land.rhs:                                         ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 51
  br i1 %cmp, label %land.end8, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %cmp3 = icmp eq i32 %bf.clear, 47
  br i1 %cmp3, label %land.rhs4, label %land.end8

land.rhs4:                                        ; preds = %lor.rhs
  %bf.clear6 = and i32 %bf.load, 16777216
  %tobool7 = icmp ne i32 %bf.clear6, 0
  br label %land.end8

land.end8:                                        ; preds = %entry, %land.rhs, %land.rhs4, %lor.rhs
  %2 = phi i1 [ false, %entry ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %tobool7, %land.rhs4 ]
  %land.ext = zext i1 %2 to i32
  ret i32 %land.ext
}

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @follow_jumps(%struct.rtx_def* %label) #0 {
entry:
  %0 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 33), align 1
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %entry, %if.end74
  %depth.0129 = phi i32 [ 0, %entry ], [ %inc, %if.end74 ]
  %value.0128 = phi %struct.rtx_def* [ %label, %entry ], [ %30, %if.end74 ]
  %call = tail call %struct.rtx_def* @next_active_insn(%struct.rtx_def* %value.0128) #7
  %cmp1 = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp1, label %for.end79, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %land.lhs.true
  %1 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 33
  br i1 %cmp3, label %land.lhs.true4, label %for.end79

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 7
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp5 = icmp eq %struct.rtx_def* %2, null
  %arrayidx12.pre = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3
  %rtx13.pre = bitcast %union.rtunion_def* %arrayidx12.pre to %struct.rtx_def**
  br i1 %cmp5, label %lor.lhs.false, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true4
  %3 = load %struct.rtx_def** %rtx13.pre, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load1.i.i = load i32* %4, align 8
  %bf.clear2.i.i = and i32 %bf.load1.i.i, 65535
  %cmp3.i.i = icmp eq i32 %bf.clear2.i.i, 39
  br i1 %cmp3.i.i, label %if.then4.i.i, label %if.end8.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  %arrayidx6.i.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtvec.i.i = bitcast %union.rtunion_def* %arrayidx6.i.i to %struct.rtvec_def**
  %5 = load %struct.rtvec_def** %rtvec.i.i, align 8, !tbaa !5
  %arrayidx7.i.i = getelementptr inbounds %struct.rtvec_def* %5, i64 0, i32 1, i64 0
  %6 = load %struct.rtx_def** %arrayidx7.i.i, align 8, !tbaa !5
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load9.pre.i.i = load i32* %.phi.trans.insert.i.i, align 8
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then4.i.i, %if.end.i.i
  %bf.load9.i.i = phi i32 [ %bf.load9.pre.i.i, %if.then4.i.i ], [ %bf.load1.i.i, %if.end.i.i ]
  %pat.0.i.i = phi %struct.rtx_def* [ %6, %if.then4.i.i ], [ %3, %if.end.i.i ]
  %bf.clear10.i.i = and i32 %bf.load9.i.i, 65535
  %cmp11.i.i = icmp eq i32 %bf.clear10.i.i, 47
  br i1 %cmp11.i.i, label %land.lhs.true.i.i, label %lor.lhs.false

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %arrayidx13.i.i = getelementptr inbounds %struct.rtx_def* %pat.0.i.i, i64 0, i32 1, i64 0
  %rtx14.i.i = bitcast %union.rtunion_def* %arrayidx13.i.i to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx14.i.i, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load15.i.i = load i32* %8, align 8
  %bf.clear16.i.i = and i32 %bf.load15.i.i, 65535
  %cmp17.i.i = icmp ne i32 %bf.clear16.i.i, 59
  %tobool.i = icmp eq %struct.rtx_def* %pat.0.i.i, null
  %or.cond.i = or i1 %cmp17.i.i, %tobool.i
  br i1 %or.cond.i, label %lor.lhs.false, label %any_uncondjump_p.exit

any_uncondjump_p.exit:                            ; preds = %land.lhs.true.i.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %pat.0.i.i, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load.i = load i32* %10, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i.not = icmp ne i32 %bf.clear.i, 67
  %cmp3.i.not = icmp ne i8 %0, 105
  %brmerge = or i1 %cmp.i.not, %cmp3.i.not
  br i1 %brmerge, label %lor.lhs.false, label %cond.true.i

cond.true.i:                                      ; preds = %any_uncondjump_p.exit
  %cmp8.i = icmp eq i32 %bf.clear2.i.i, 47
  br i1 %cmp8.i, label %cond.end18.i, label %cond.false.i

cond.false.i:                                     ; preds = %cond.true.i
  %call.i = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call, %struct.rtx_def* %3) #7
  br label %cond.end18.i

cond.end18.i:                                     ; preds = %cond.false.i, %cond.true.i
  %cond19.i = phi %struct.rtx_def* [ %call.i, %cond.false.i ], [ %3, %cond.true.i ]
  %cmp20.i = icmp eq %struct.rtx_def* %cond19.i, null
  br i1 %cmp20.i, label %lor.lhs.false, label %if.end23.i

if.end23.i:                                       ; preds = %cond.end18.i
  %fld24.i = getelementptr inbounds %struct.rtx_def* %cond19.i, i64 0, i32 1
  %rtx26.i = bitcast [1 x %union.rtunion_def]* %fld24.i to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx26.i, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load27.i = load i32* %12, align 8
  %bf.clear28.i = and i32 %bf.load27.i, 65535
  %cmp29.i = icmp eq i32 %bf.clear28.i, 59
  br i1 %cmp29.i, label %onlyjump_p.exit, label %lor.lhs.false

onlyjump_p.exit:                                  ; preds = %if.end23.i
  %arrayidx34.i = getelementptr inbounds %struct.rtx_def* %cond19.i, i64 0, i32 1, i64 1
  %rtx35.i = bitcast %union.rtunion_def* %arrayidx34.i to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx35.i, align 8, !tbaa !5
  %call36.i = tail call i32 @side_effects_p(%struct.rtx_def* %13) #7
  %tobool.i116 = icmp eq i32 %call36.i, 0
  br i1 %tobool.i116, label %land.lhs.true17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %any_uncondjump_p.exit, %land.lhs.true4, %onlyjump_p.exit, %if.end23.i, %cond.end18.i, %if.end8.i.i, %land.lhs.true.i.i
  %14 = load %struct.rtx_def** %rtx13.pre, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load14 = load i32* %15, align 8
  %bf.clear15 = and i32 %bf.load14, 65535
  %cmp16 = icmp eq i32 %bf.clear15, 51
  br i1 %cmp16, label %land.lhs.true17, label %for.end79

land.lhs.true17:                                  ; preds = %onlyjump_p.exit, %lor.lhs.false
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 2
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx20, align 8, !tbaa !5
  %tobool21 = icmp eq %struct.rtx_def* %16, null
  br i1 %tobool21, label %for.end79, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true17
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load22 = load i32* %17, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 35
  br i1 %cmp24, label %for.body, label %for.end79

for.body:                                         ; preds = %land.rhs
  %18 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool25 = icmp ne i32 %18, 0
  %cmp27126 = icmp eq %struct.rtx_def* %value.0128, %call
  %or.cond = or i1 %tobool25, %cmp27126
  br i1 %or.cond, label %if.end47, label %for.body28.lr.ph

for.body28.lr.ph:                                 ; preds = %for.body
  %19 = load i32* @flag_test_coverage, align 4, !tbaa !1
  %tobool37 = icmp eq i32 %19, 0
  br i1 %tobool37, label %for.body28, label %for.body28.us

for.body28.us:                                    ; preds = %for.body28.lr.ph, %for.inc.us
  %tem.0127.us = phi %struct.rtx_def* [ %22, %for.inc.us ], [ %value.0128, %for.body28.lr.ph ]
  %20 = getelementptr inbounds %struct.rtx_def* %tem.0127.us, i64 0, i32 0
  %bf.load29.us = load i32* %20, align 8
  %bf.clear30.us = and i32 %bf.load29.us, 65535
  %cmp31.us = icmp eq i32 %bf.clear30.us, 37
  br i1 %cmp31.us, label %land.lhs.true32.us, label %for.inc.us

land.lhs.true32.us:                               ; preds = %for.body28.us
  %arrayidx34.us = getelementptr inbounds %struct.rtx_def* %tem.0127.us, i64 0, i32 1, i64 4
  %rtint.us = bitcast %union.rtunion_def* %arrayidx34.us to i32*
  %21 = load i32* %rtint.us, align 4, !tbaa !1
  %cmp35.us = icmp eq i32 %21, -96
  %cmp42.us = icmp sgt i32 %21, 0
  %or.cond134 = or i1 %cmp35.us, %cmp42.us
  br i1 %or.cond134, label %return, label %for.inc.us

for.inc.us:                                       ; preds = %land.lhs.true32.us, %for.body28.us
  %arrayidx45.us = getelementptr inbounds %struct.rtx_def* %tem.0127.us, i64 0, i32 1, i64 2
  %rtx46.us = bitcast %union.rtunion_def* %arrayidx45.us to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx46.us, align 8, !tbaa !5
  %cmp27.us = icmp eq %struct.rtx_def* %22, %call
  br i1 %cmp27.us, label %if.end47, label %for.body28.us

for.body28:                                       ; preds = %for.body28.lr.ph, %for.inc
  %tem.0127 = phi %struct.rtx_def* [ %25, %for.inc ], [ %value.0128, %for.body28.lr.ph ]
  %23 = getelementptr inbounds %struct.rtx_def* %tem.0127, i64 0, i32 0
  %bf.load29 = load i32* %23, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 37
  br i1 %cmp31, label %land.lhs.true32, label %for.inc

land.lhs.true32:                                  ; preds = %for.body28
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %tem.0127, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx34 to i32*
  %24 = load i32* %rtint, align 4, !tbaa !1
  %cmp35 = icmp eq i32 %24, -96
  br i1 %cmp35, label %return, label %for.inc

for.inc:                                          ; preds = %land.lhs.true32, %for.body28
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %tem.0127, i64 0, i32 1, i64 2
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx46, align 8, !tbaa !5
  %cmp27 = icmp eq %struct.rtx_def* %25, %call
  br i1 %cmp27, label %if.end47, label %for.body28

if.end47:                                         ; preds = %for.inc.us, %for.inc, %for.body
  %26 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp51 = icmp eq %struct.rtx_def* %26, %label
  br i1 %cmp51, label %return, label %if.end53

if.end53:                                         ; preds = %if.end47
  %call57 = tail call %struct.rtx_def* @next_active_insn(%struct.rtx_def* %26) #7
  %tobool58 = icmp eq %struct.rtx_def* %call57, null
  br i1 %tobool58, label %if.end74, label %land.lhs.true59

land.lhs.true59:                                  ; preds = %if.end53
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %call57, i64 0, i32 1, i64 3
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx62, align 8, !tbaa !5
  %28 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 0
  %bf.load63 = load i32* %28, align 8
  %29 = and i32 %bf.load63, 65534
  %switch = icmp eq i32 %29, 44
  br i1 %switch, label %for.end79, label %if.end74

if.end74:                                         ; preds = %land.lhs.true59, %if.end53
  %30 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %inc = add nsw i32 %depth.0129, 1
  %cmp = icmp slt i32 %inc, 10
  br i1 %cmp, label %land.lhs.true, label %for.end79

for.end79:                                        ; preds = %land.lhs.true59, %land.lhs.true17, %land.lhs.true, %if.end74, %land.lhs.true2, %lor.lhs.false, %land.rhs
  %depth.0.lcssa = phi i32 [ %depth.0129, %land.lhs.true59 ], [ %depth.0129, %land.lhs.true17 ], [ %depth.0129, %land.lhs.true ], [ %inc, %if.end74 ], [ %depth.0129, %land.lhs.true2 ], [ %depth.0129, %lor.lhs.false ], [ %depth.0129, %land.rhs ]
  %value.0.lcssa = phi %struct.rtx_def* [ %value.0128, %land.lhs.true59 ], [ %value.0128, %land.lhs.true17 ], [ %value.0128, %land.lhs.true ], [ %30, %if.end74 ], [ %value.0128, %land.lhs.true2 ], [ %value.0128, %lor.lhs.false ], [ %value.0128, %land.rhs ]
  %cmp80 = icmp eq i32 %depth.0.lcssa, 10
  %label.value.0 = select i1 %cmp80, %struct.rtx_def* %label, %struct.rtx_def* %value.0.lcssa
  br label %return

return:                                           ; preds = %if.end47, %land.lhs.true32.us, %land.lhs.true32, %for.end79
  %retval.0 = phi %struct.rtx_def* [ %label.value.0, %for.end79 ], [ %value.0128, %land.lhs.true32 ], [ %value.0128, %land.lhs.true32.us ], [ %label, %if.end47 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @next_active_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @mark_jump_label(%struct.rtx_def* %x, %struct.rtx_def* %insn, i32 %in_mem) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 59, label %for.end127
    i32 69, label %for.end127
    i32 61, label %for.end127
    i32 63, label %for.end127
    i32 54, label %for.end127
    i32 55, label %for.end127
    i32 49, label %for.end127
    i32 50, label %for.end127
    i32 66, label %sw.bb1
    i32 68, label %sw.bb2
    i32 67, label %sw.bb8
    i32 44, label %sw.bb62
    i32 45, label %sw.bb62
  ]

sw.bb1:                                           ; preds = %entry
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %tobool = icmp eq i32 %in_mem, 0
  br i1 %tobool, label %for.end127, label %if.end

if.end:                                           ; preds = %sw.bb2
  %bf.clear4 = and i32 %bf.load, 67108864
  %tobool5 = icmp eq i32 %bf.clear4, 0
  br i1 %tobool5, label %sw.epilog, label %if.then6

if.then6:                                         ; preds = %if.end
  %call = tail call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %x) #7
  tail call void @mark_jump_label(%struct.rtx_def* %call, %struct.rtx_def* %insn, i32 %in_mem)
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load9 = load i32* %2, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  switch i32 %bf.clear10, label %if.then19 [
    i32 37, label %land.lhs.true
    i32 36, label %if.end20
  ]

land.lhs.true:                                    ; preds = %sw.bb8
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %3 = load i32* %rtint, align 4, !tbaa !1
  %cmp13 = icmp eq i32 %3, -88
  br i1 %cmp13, label %sw.epilog, label %if.then19

if.then19:                                        ; preds = %sw.bb8, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 1451, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.mark_jump_label, i64 0, i64 0)) #8
  unreachable

if.end20:                                         ; preds = %sw.bb8
  %bf.clear23 = and i32 %bf.load, 134217728
  %tobool24 = icmp eq i32 %bf.clear23, 0
  br i1 %tobool24, label %if.end26, label %sw.epilog

if.end26:                                         ; preds = %if.end20
  %4 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %1 to i64
  store i64 %.c, i64* %4, align 8, !tbaa !5
  %tobool30 = icmp eq %struct.rtx_def* %insn, null
  br i1 %tobool30, label %if.end39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end26
  %5 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load31 = load i32* %5, align 8
  %bf.clear33 = and i32 %bf.load31, 134217728
  %tobool34 = icmp eq i32 %bf.clear33, 0
  br i1 %tobool34, label %if.end39.thread177, label %if.then41

if.end39.thread177:                               ; preds = %lor.lhs.false
  %arrayidx37178 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 3
  %rtint38179 = bitcast %union.rtunion_def* %arrayidx37178 to i32*
  %6 = load i32* %rtint38179, align 4, !tbaa !1
  %inc180 = add nsw i32 %6, 1
  store i32 %inc180, i32* %rtint38179, align 4, !tbaa !1
  %bf.load42.pre = load i32* %5, align 8
  br label %if.then41

if.end39:                                         ; preds = %if.end26
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 3
  %rtint38 = bitcast %union.rtunion_def* %arrayidx37 to i32*
  %7 = load i32* %rtint38, align 4, !tbaa !1
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %rtint38, align 4, !tbaa !1
  br label %for.end127

if.then41:                                        ; preds = %lor.lhs.false, %if.end39.thread177
  %bf.load42 = phi i32 [ %bf.load31, %lor.lhs.false ], [ %bf.load42.pre, %if.end39.thread177 ]
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp eq i32 %bf.clear43, 33
  br i1 %cmp44, label %if.then45, label %if.else

if.then45:                                        ; preds = %if.then41
  %8 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 7, i32 0
  store i64 %.c, i64* %8, align 8, !tbaa !5
  br label %for.end127

if.else:                                          ; preds = %if.then41
  %call49 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 13, %struct.rtx_def* %1) #7
  %tobool50 = icmp eq %struct.rtx_def* %call49, null
  br i1 %tobool50, label %if.then51, label %for.end127

if.then51:                                        ; preds = %if.else
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx54, align 8, !tbaa !5
  %call55 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 13, %struct.rtx_def* %1, %struct.rtx_def* %9) #7
  %10 = getelementptr inbounds %union.rtunion_def* %arrayidx53, i64 0, i32 0
  %call55.c = ptrtoint %struct.rtx_def* %call55 to i64
  store i64 %call55.c, i64* %10, align 8, !tbaa !5
  br label %for.end127

sw.bb62:                                          ; preds = %entry, %entry
  %11 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load63 = load i32* %11, align 8
  %bf.clear65 = and i32 %bf.load63, 134217728
  %tobool66 = icmp eq i32 %bf.clear65, 0
  br i1 %tobool66, label %if.then67, label %for.end127

if.then67:                                        ; preds = %sw.bb62
  %cmp68 = icmp eq i32 %bf.clear, 45
  %idxprom = zext i1 %cmp68 to i64
  %arrayidx70 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %idxprom
  %rtvec = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtvec_def**
  %12 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem188 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  %13 = load i32* %num_elem188, align 4, !tbaa !15
  %cmp71189 = icmp sgt i32 %13, 0
  br i1 %cmp71189, label %for.body, label %for.end127

for.body:                                         ; preds = %if.then67, %for.body
  %indvars.iv193 = phi i64 [ %indvars.iv.next194, %for.body ], [ 0, %if.then67 ]
  %14 = phi %struct.rtvec_def* [ %16, %for.body ], [ %12, %if.then67 ]
  %arrayidx77 = getelementptr inbounds %struct.rtvec_def* %14, i64 0, i32 1, i64 %indvars.iv193
  %15 = load %struct.rtx_def** %arrayidx77, align 8, !tbaa !5
  tail call void @mark_jump_label(%struct.rtx_def* %15, %struct.rtx_def* null, i32 %in_mem)
  %indvars.iv.next194 = add nuw nsw i64 %indvars.iv193, 1
  %16 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %16, i64 0, i32 0
  %17 = load i32* %num_elem, align 4, !tbaa !15
  %18 = trunc i64 %indvars.iv.next194 to i32
  %cmp71 = icmp slt i32 %18, %17
  br i1 %cmp71, label %for.body, label %for.end127

sw.epilog:                                        ; preds = %if.end, %if.end20, %entry, %land.lhs.true, %if.then6, %sw.bb1
  %in_mem.addr.0 = phi i32 [ %in_mem, %entry ], [ %in_mem, %land.lhs.true ], [ %in_mem, %if.end20 ], [ %in_mem, %if.then6 ], [ %in_mem, %if.end ], [ 1, %sw.bb1 ]
  %idxprom80176 = zext i32 %bf.clear to i64
  %arrayidx81 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom80176
  %19 = load i8** %arrayidx81, align 8, !tbaa !5
  %arrayidx83 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom80176
  %20 = load i8* %arrayidx83, align 1, !tbaa !11
  %cmp85186 = icmp eq i8 %20, 0
  br i1 %cmp85186, label %for.end127, label %for.body87.lr.ph

for.body87.lr.ph:                                 ; preds = %sw.epilog
  %21 = zext i8 %20 to i64
  br label %for.body87

for.body87:                                       ; preds = %for.body87.lr.ph, %for.cond84.backedge
  %indvars.iv191 = phi i64 [ %21, %for.body87.lr.ph ], [ %indvars.iv.next192, %for.cond84.backedge ]
  %indvars.iv.next192 = add nsw i64 %indvars.iv191, -1
  %arrayidx89 = getelementptr inbounds i8* %19, i64 %indvars.iv.next192
  %22 = load i8* %arrayidx89, align 1, !tbaa !11
  switch i8 %22, label %for.cond84.backedge [
    i8 101, label %if.then93
    i8 69, label %for.cond105.preheader
  ]

for.cond84.backedge:                              ; preds = %for.body113, %for.cond105.preheader, %for.body87, %if.then93
  %23 = trunc i64 %indvars.iv.next192 to i32
  %cmp85 = icmp sgt i32 %23, 0
  br i1 %cmp85, label %for.body87, label %for.end127

for.cond105.preheader:                            ; preds = %for.body87
  %arrayidx108 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next192
  %rtvec109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtvec_def**
  %24 = load %struct.rtvec_def** %rtvec109, align 8, !tbaa !5
  %num_elem110182 = getelementptr inbounds %struct.rtvec_def* %24, i64 0, i32 0
  %25 = load i32* %num_elem110182, align 4, !tbaa !15
  %cmp111183 = icmp sgt i32 %25, 0
  br i1 %cmp111183, label %for.body113, label %for.cond84.backedge

if.then93:                                        ; preds = %for.body87
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next192
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx97, align 8, !tbaa !5
  tail call void @mark_jump_label(%struct.rtx_def* %26, %struct.rtx_def* %insn, i32 %in_mem.addr.0)
  br label %for.cond84.backedge

for.body113:                                      ; preds = %for.cond105.preheader, %for.body113
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body113 ], [ 0, %for.cond105.preheader ]
  %27 = phi %struct.rtvec_def* [ %29, %for.body113 ], [ %24, %for.cond105.preheader ]
  %arrayidx120 = getelementptr inbounds %struct.rtvec_def* %27, i64 0, i32 1, i64 %indvars.iv
  %28 = load %struct.rtx_def** %arrayidx120, align 8, !tbaa !5
  tail call void @mark_jump_label(%struct.rtx_def* %28, %struct.rtx_def* %insn, i32 %in_mem.addr.0)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %29 = load %struct.rtvec_def** %rtvec109, align 8, !tbaa !5
  %num_elem110 = getelementptr inbounds %struct.rtvec_def* %29, i64 0, i32 0
  %30 = load i32* %num_elem110, align 4, !tbaa !15
  %31 = trunc i64 %indvars.iv.next to i32
  %cmp111 = icmp slt i32 %31, %30
  br i1 %cmp111, label %for.body113, label %for.cond84.backedge

for.end127:                                       ; preds = %for.body, %for.cond84.backedge, %if.then67, %sw.epilog, %if.end39, %sw.bb2, %if.else, %sw.bb62, %if.then51, %if.then45, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  ret void
}

declare %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) #1

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_ue(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @delete_jump(%struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom29 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom29
  %1 = load i8* %arrayidx, align 1, !tbaa !11
  %cmp = icmp eq i8 %1, 105
  br i1 %cmp, label %cond.true, label %if.end

cond.true:                                        ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load3 = load i32* %3, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 47
  br i1 %cmp5, label %cond.end15, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %2) #7
  br label %cond.end15

cond.end15:                                       ; preds = %cond.true, %cond.false
  %cond16 = phi %struct.rtx_def* [ %call, %cond.false ], [ %2, %cond.true ]
  %tobool = icmp eq %struct.rtx_def* %cond16, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end15
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %cond16, i64 0, i32 1, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx19, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load20 = load i32* %5, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 59
  br i1 %cmp22, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %tobool16.i = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool16.i, label %delete_computation.exit, label %for.body.i

for.body.i:                                       ; preds = %if.then, %for.cond.backedge.i
  %note.017.i = phi %struct.rtx_def* [ %7, %for.cond.backedge.i ], [ %6, %if.then ]
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %note.017.i, i64 0, i32 1, i64 1
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx3.i, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %note.017.i, i64 0, i32 0
  %bf.load.i = load i32* %8, align 8
  %bf.clear.i = and i32 %bf.load.i, 16711680
  %cmp.i = icmp eq i32 %bf.clear.i, 65536
  br i1 %cmp.i, label %lor.lhs.false.i, label %for.cond.backedge.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %note.017.i, i64 0, i32 1, i64 0
  %rtx6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load7.i = load i32* %10, align 8
  %bf.clear8.i = and i32 %bf.load7.i, 65535
  %cmp9.i = icmp eq i32 %bf.clear8.i, 61
  br i1 %cmp9.i, label %if.end.i, label %for.cond.backedge.i

for.cond.backedge.i:                              ; preds = %if.end.i, %lor.lhs.false.i, %for.body.i
  %tobool.i = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool.i, label %delete_computation.exit, label %for.body.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  tail call fastcc void @delete_prior_computation(%struct.rtx_def* %note.017.i, %struct.rtx_def* %insn) #7
  br label %for.cond.backedge.i

delete_computation.exit:                          ; preds = %for.cond.backedge.i, %if.then
  %call.i = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %insn) #7
  br label %if.end

if.end:                                           ; preds = %entry, %cond.end15, %delete_computation.exit, %land.lhs.true
  ret void
}

declare %struct.rtx_def* @delete_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind readonly uwtable
define %struct.rtx_def* @next_nondeleted_insn(%struct.rtx_def* readonly %insn) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load2 = load i32* %0, align 8
  %bf.clear3 = and i32 %bf.load2, 134217728
  %tobool4 = icmp eq i32 %bf.clear3, 0
  br i1 %tobool4, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %insn.addr.05 = phi %struct.rtx_def* [ %1, %while.body ], [ %insn, %entry ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.addr.05, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 134217728
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %entry
  %insn.addr.0.lcssa = phi %struct.rtx_def* [ %insn, %entry ], [ %1, %while.body ]
  ret %struct.rtx_def* %insn.addr.0.lcssa
}

; Function Attrs: nounwind uwtable
define void @delete_for_peephole(%struct.rtx_def* %from, %struct.rtx_def* readnone %to) #0 {
entry:
  br label %while.body

while.body:                                       ; preds = %if.end16, %entry
  %insn.0 = phi %struct.rtx_def* [ %from, %entry ], [ %0, %if.end16 ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx3, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 37
  br i1 %cmp, label %if.end16, label %if.then

if.then:                                          ; preds = %while.body
  %bf.set = or i32 %bf.load, 134217728
  store i32 %bf.set, i32* %2, align 8
  %tobool = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool, label %if.end, label %if.then6

if.then6:                                         ; preds = %if.then
  %3 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2, i32 0
  %.c29 = ptrtoint %struct.rtx_def* %0 to i64
  store i64 %.c29, i64* %3, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then6
  %tobool10 = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool10, label %if.end16, label %if.then11

if.then11:                                        ; preds = %if.end
  %4 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.rtx_def* %1 to i64
  store i64 %.c, i64* %4, align 8, !tbaa !5
  br label %if.end16

if.end16:                                         ; preds = %if.end, %while.body, %if.then11
  %cmp17 = icmp eq %struct.rtx_def* %insn.0, %to
  br i1 %cmp17, label %while.end, label %while.body

while.end:                                        ; preds = %if.end16
  ret void
}

; Function Attrs: nounwind uwtable
define void @never_reached_warning(%struct.rtx_def* readonly %avoided_insn, %struct.rtx_def* readnone %finish) #0 {
entry:
  %0 = load i32* @warn_notreached, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  %cmp64 = icmp eq %struct.rtx_def* %avoided_insn, null
  %or.cond88 = or i1 %tobool, %cmp64
  br i1 %or.cond88, label %if.end49, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %cmp1 = icmp eq %struct.rtx_def* %finish, null
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end33
  %reached_end.069 = phi i32 [ 0, %for.body.lr.ph ], [ %.reached_end.0, %if.end33 ]
  %contains_insn.068 = phi i32 [ 0, %for.body.lr.ph ], [ %contains_insn.1, %if.end33 ]
  %two_avoided_lines.067 = phi i32 [ 0, %for.body.lr.ph ], [ %two_avoided_lines.1, %if.end33 ]
  %a_line_note.066 = phi %struct.rtx_def* [ null, %for.body.lr.ph ], [ %a_line_note.1, %if.end33 ]
  %insn.065 = phi %struct.rtx_def* [ %avoided_insn, %for.body.lr.ph ], [ %5, %if.end33 ]
  %1 = getelementptr inbounds %struct.rtx_def* %insn.065, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp2 = icmp eq i32 %bf.clear, 36
  %or.cond89 = and i1 %cmp1, %cmp2
  br i1 %or.cond89, label %for.end, label %if.end4

if.end4:                                          ; preds = %for.body
  %bf.clear6 = and i32 %bf.load, 65535
  %cmp7 = icmp eq i32 %bf.clear6, 37
  br i1 %cmp7, label %land.lhs.true8, label %if.else21

land.lhs.true8:                                   ; preds = %if.end4
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.065, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %2 = load i32* %rtint, align 4, !tbaa !1
  %cmp9 = icmp sgt i32 %2, -1
  br i1 %cmp9, label %if.then10, label %if.else21

if.then10:                                        ; preds = %land.lhs.true8
  %cmp11 = icmp eq %struct.rtx_def* %a_line_note.066, null
  br i1 %cmp11, label %if.end33, label %if.else

if.else:                                          ; preds = %if.then10
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %a_line_note.066, i64 0, i32 1, i64 4
  %rtint15 = bitcast %union.rtunion_def* %arrayidx14 to i32*
  %3 = load i32* %rtint15, align 4, !tbaa !1
  %cmp19 = icmp ne i32 %3, %2
  %conv = zext i1 %cmp19 to i32
  %or = or i32 %conv, %two_avoided_lines.067
  br label %if.end33

if.else21:                                        ; preds = %land.lhs.true8, %if.end4
  %idxprom63 = zext i32 %bf.clear6 to i64
  %arrayidx24 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom63
  %4 = load i8* %arrayidx24, align 1, !tbaa !11
  %cmp26 = icmp eq i8 %4, 105
  br i1 %cmp26, label %if.then28, label %if.end33

if.then28:                                        ; preds = %if.else21
  %tobool29 = icmp eq i32 %reached_end.069, 0
  br i1 %tobool29, label %if.end33, label %for.end

if.end33:                                         ; preds = %if.then28, %if.then10, %if.else21, %if.else
  %a_line_note.1 = phi %struct.rtx_def* [ %a_line_note.066, %if.else ], [ %a_line_note.066, %if.else21 ], [ %insn.065, %if.then10 ], [ %a_line_note.066, %if.then28 ]
  %two_avoided_lines.1 = phi i32 [ %or, %if.else ], [ %two_avoided_lines.067, %if.else21 ], [ %two_avoided_lines.067, %if.then10 ], [ %two_avoided_lines.067, %if.then28 ]
  %contains_insn.1 = phi i32 [ %contains_insn.068, %if.else ], [ %contains_insn.068, %if.else21 ], [ %contains_insn.068, %if.then10 ], [ 1, %if.then28 ]
  %cmp34 = icmp eq %struct.rtx_def* %insn.065, %finish
  %.reached_end.0 = select i1 %cmp34, i32 1, i32 %reached_end.069
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %insn.065, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %5, null
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end33, %if.then28
  %contains_insn.0.lcssa = phi i32 [ %contains_insn.068, %if.then28 ], [ %contains_insn.1, %if.end33 ], [ %contains_insn.068, %for.body ]
  %two_avoided_lines.0.lcssa = phi i32 [ %two_avoided_lines.067, %if.then28 ], [ %two_avoided_lines.1, %if.end33 ], [ %two_avoided_lines.067, %for.body ]
  %a_line_note.0.lcssa = phi %struct.rtx_def* [ %a_line_note.066, %if.then28 ], [ %a_line_note.1, %if.end33 ], [ %a_line_note.066, %for.body ]
  %tobool40 = icmp ne i32 %two_avoided_lines.0.lcssa, 0
  %tobool42 = icmp ne i32 %contains_insn.0.lcssa, 0
  %or.cond = and i1 %tobool40, %tobool42
  br i1 %or.cond, label %if.then43, label %if.end49

if.then43:                                        ; preds = %for.end
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %a_line_note.0.lcssa, i64 0, i32 1, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx45 to i8**
  %6 = load i8** %rtstr, align 8, !tbaa !5
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %a_line_note.0.lcssa, i64 0, i32 1, i64 4
  %rtint48 = bitcast %union.rtunion_def* %arrayidx47 to i32*
  %7 = load i32* %rtint48, align 4, !tbaa !1
  tail call void (i8*, i32, i8*, ...)* @warning_with_file_and_line(i8* %6, i32 %7, i8* getelementptr inbounds ([23 x i8]* @.str1, i64 0, i64 0)) #7
  br label %if.end49

if.end49:                                         ; preds = %entry, %if.then43, %for.end
  ret void
}

declare void @warning_with_file_and_line(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define i32 @redirect_jump_1(%struct.rtx_def* %jump, %struct.rtx_def* %nlabel) #0 {
entry:
  %call = tail call i32 @num_validated_changes() #7
  %arrayidx = getelementptr inbounds %struct.rtx_def* %jump, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtvec_def**
  %2 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %arrayidx6 = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 1, i64 0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %loc.0 = phi %struct.rtx_def** [ %arrayidx6, %if.then ], [ %rtx, %entry ]
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %jump, i64 0, i32 1, i64 7
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx12, align 8, !tbaa !5
  tail call fastcc void @redirect_exp_1(%struct.rtx_def** %loc.0, %struct.rtx_def* %3, %struct.rtx_def* %nlabel, %struct.rtx_def* %jump)
  %call13 = tail call i32 @num_validated_changes() #7
  %cmp14 = icmp sgt i32 %call13, %call
  %conv = zext i1 %cmp14 to i32
  ret i32 %conv
}

declare i32 @num_validated_changes() #1

; Function Attrs: nounwind uwtable
define internal fastcc void @redirect_exp_1(%struct.rtx_def** %loc, %struct.rtx_def* readnone %olabel, %struct.rtx_def* %nlabel, %struct.rtx_def* %insn) #0 {
entry:
  %0 = load %struct.rtx_def** %loc, align 8, !tbaa !5
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 67
  br i1 %cmp, label %if.then, label %if.else7

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp1 = icmp eq %struct.rtx_def* %2, %olabel
  br i1 %cmp1, label %if.then2, label %if.end48

if.then2:                                         ; preds = %if.then
  %tobool = icmp eq %struct.rtx_def* %nlabel, null
  br i1 %tobool, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then2
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %nlabel) #7
  br label %if.end

if.else:                                          ; preds = %if.then2
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_(i32 51, i32 0) #7
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %n.0 = phi %struct.rtx_def* [ %call, %if.then3 ], [ %call4, %if.else ]
  %call5 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %n.0, i32 1) #7
  br label %for.end87

if.else7:                                         ; preds = %entry
  %cmp8 = icmp eq i32 %bf.clear, 51
  %cmp9 = icmp eq %struct.rtx_def* %olabel, null
  %or.cond = and i1 %cmp8, %cmp9
  br i1 %or.cond, label %if.then10, label %if.end21

if.then10:                                        ; preds = %if.else7
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_u00(i32 67, i32 0, %struct.rtx_def* %nlabel) #7
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %cmp15 = icmp eq %struct.rtx_def** %rtx14, %loc
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.then10
  %3 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !5
  %call17 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %3, %struct.rtx_def* %call11) #7
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.then10
  %x.0 = phi %struct.rtx_def* [ %call17, %if.then16 ], [ %call11, %if.then10 ]
  %call19 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %x.0, i32 1) #7
  br label %for.end87

if.end21:                                         ; preds = %if.else7
  %cmp22 = icmp eq i32 %bf.clear, 47
  %cmp24 = icmp eq %struct.rtx_def* %nlabel, null
  %or.cond88 = and i1 %cmp22, %cmp24
  br i1 %or.cond88, label %land.lhs.true25, label %if.end48

land.lhs.true25:                                  ; preds = %if.end21
  %fld26 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx28 = bitcast [1 x %union.rtunion_def]* %fld26 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx28, align 8, !tbaa !5
  %5 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !5
  %cmp29 = icmp eq %struct.rtx_def* %4, %5
  br i1 %cmp29, label %land.lhs.true30, label %if.end48

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx33, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load34 = load i32* %7, align 8
  %bf.clear35 = and i32 %bf.load34, 65535
  %cmp36 = icmp eq i32 %bf.clear35, 67
  br i1 %cmp36, label %land.lhs.true37, label %if.end48

land.lhs.true37:                                  ; preds = %land.lhs.true30
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx43, align 8, !tbaa !5
  %cmp44 = icmp eq %struct.rtx_def* %8, %olabel
  br i1 %cmp44, label %if.then45, label %if.end48

if.then45:                                        ; preds = %land.lhs.true37
  %call46 = tail call %struct.rtx_def* @gen_rtx_fmt_(i32 51, i32 0) #7
  %call47 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %loc, %struct.rtx_def* %call46, i32 1) #7
  br label %for.end87

if.end48:                                         ; preds = %if.then, %land.lhs.true37, %land.lhs.true30, %land.lhs.true25, %if.end21
  %idxprom128 = zext i32 %bf.clear to i64
  %arrayidx49 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom128
  %9 = load i8** %arrayidx49, align 8, !tbaa !5
  %arrayidx51 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom128
  %10 = load i8* %arrayidx51, align 1, !tbaa !11
  %cmp52136 = icmp eq i8 %10, 0
  br i1 %cmp52136, label %for.end87, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end48
  %11 = zext i8 %10 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv138 = phi i64 [ %11, %for.body.lr.ph ], [ %indvars.iv.next139, %for.cond.backedge ]
  %indvars.iv.next139 = add nsw i64 %indvars.iv138, -1
  %arrayidx55 = getelementptr inbounds i8* %9, i64 %indvars.iv.next139
  %12 = load i8* %arrayidx55, align 1, !tbaa !11
  switch i8 %12, label %for.cond.backedge [
    i8 101, label %if.then59
    i8 69, label %for.cond71.preheader
  ]

for.cond.backedge:                                ; preds = %for.body77, %for.cond71.preheader, %for.body, %if.then59
  %13 = trunc i64 %indvars.iv.next139 to i32
  %cmp52 = icmp sgt i32 %13, 0
  br i1 %cmp52, label %for.body, label %for.end87

for.cond71.preheader:                             ; preds = %for.body
  %arrayidx74 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 %indvars.iv.next139
  %rtvec = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtvec_def**
  %14 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem132 = getelementptr inbounds %struct.rtvec_def* %14, i64 0, i32 0
  %15 = load i32* %num_elem132, align 4, !tbaa !15
  %cmp75133 = icmp sgt i32 %15, 0
  br i1 %cmp75133, label %for.body77, label %for.cond.backedge

if.then59:                                        ; preds = %for.body
  %arrayidx62 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 %indvars.iv.next139
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  tail call fastcc void @redirect_exp_1(%struct.rtx_def** %rtx63, %struct.rtx_def* %olabel, %struct.rtx_def* %nlabel, %struct.rtx_def* %insn)
  br label %for.cond.backedge

for.body77:                                       ; preds = %for.cond71.preheader, %for.body77
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body77 ], [ 0, %for.cond71.preheader ]
  %16 = phi %struct.rtvec_def* [ %17, %for.body77 ], [ %14, %for.cond71.preheader ]
  %arrayidx83 = getelementptr inbounds %struct.rtvec_def* %16, i64 0, i32 1, i64 %indvars.iv
  tail call fastcc void @redirect_exp_1(%struct.rtx_def** %arrayidx83, %struct.rtx_def* %olabel, %struct.rtx_def* %nlabel, %struct.rtx_def* %insn)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %17 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %17, i64 0, i32 0
  %18 = load i32* %num_elem, align 4, !tbaa !15
  %19 = trunc i64 %indvars.iv.next to i32
  %cmp75 = icmp slt i32 %19, %18
  br i1 %cmp75, label %for.body77, label %for.cond.backedge

for.end87:                                        ; preds = %for.cond.backedge, %if.end48, %if.end, %if.end18, %if.then45
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @redirect_jump(%struct.rtx_def* %jump, %struct.rtx_def* %nlabel, i32 %delete_unused) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %jump, i64 0, i32 1, i64 7
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %0, %nlabel
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %jump, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load.i = load i32* %2, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 39
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 0
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end
  %loc.0.i = phi %struct.rtx_def** [ %arrayidx6.i, %if.then.i ], [ %rtx.i, %if.end ]
  tail call fastcc void @redirect_exp_1(%struct.rtx_def** %loc.0.i, %struct.rtx_def* %0, %struct.rtx_def* %nlabel, %struct.rtx_def* %jump) #7
  %call.i = tail call i32 @num_validated_changes() #7
  %cmp10.i = icmp eq i32 %call.i, 0
  br i1 %cmp10.i, label %return, label %redirect_exp.exit

redirect_exp.exit:                                ; preds = %if.end.i
  %call13.i = tail call i32 @apply_change_group() #7
  %tobool = icmp eq i32 %call13.i, 0
  br i1 %tobool, label %return, label %if.end2

if.end2:                                          ; preds = %redirect_exp.exit
  %4 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %nlabel.c = ptrtoint %struct.rtx_def* %nlabel to i64
  store i64 %nlabel.c, i64* %4, align 8, !tbaa !5
  %tobool6 = icmp eq %struct.rtx_def* %nlabel, null
  br i1 %tobool6, label %if.end10.thread, label %if.end10

if.end10.thread:                                  ; preds = %if.end2
  %tobool1169 = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool1169, label %return, label %land.lhs.true35

if.end10:                                         ; preds = %if.end2
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %nlabel, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx9 to i32*
  %5 = load i32* %rtint, align 4, !tbaa !1
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %rtint, align 4, !tbaa !1
  %tobool11 = icmp ne %struct.rtx_def* %0, null
  br i1 %tobool11, label %land.lhs.true13, label %return

land.lhs.true13:                                  ; preds = %if.end10
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 2
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx16, align 8, !tbaa !5
  %tobool17 = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool17, label %land.lhs.true35, label %land.lhs.true18

land.lhs.true18:                                  ; preds = %land.lhs.true13
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp22 = icmp eq i32 %bf.clear, 37
  br i1 %cmp22, label %land.lhs.true23, label %land.lhs.true35

land.lhs.true23:                                  ; preds = %land.lhs.true18
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 4
  %rtint29 = bitcast %union.rtunion_def* %arrayidx28 to i32*
  %8 = load i32* %rtint29, align 4, !tbaa !1
  %cmp30 = icmp eq i32 %8, -91
  br i1 %cmp30, label %if.then31, label %if.end33

if.then31:                                        ; preds = %land.lhs.true23
  %call32 = tail call %struct.rtx_def* @emit_note_after(i32 -91, %struct.rtx_def* %nlabel) #7
  br label %land.lhs.true35

if.end33:                                         ; preds = %land.lhs.true23
  br i1 %tobool11, label %land.lhs.true35, label %return

land.lhs.true35:                                  ; preds = %land.lhs.true18, %land.lhs.true13, %if.then31, %if.end10.thread, %if.end33
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 3
  %rtint38 = bitcast %union.rtunion_def* %arrayidx37 to i32*
  %9 = load i32* %rtint38, align 4, !tbaa !1
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %rtint38, align 4, !tbaa !1
  %cmp39 = icmp eq i32 %dec, 0
  %tobool41 = icmp ne i32 %delete_unused, 0
  %or.cond50 = and i1 %cmp39, %tobool41
  br i1 %or.cond50, label %land.lhs.true42, label %return

land.lhs.true42:                                  ; preds = %land.lhs.true35
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtint45 = bitcast %union.rtunion_def* %arrayidx44 to i32*
  %10 = load i32* %rtint45, align 4, !tbaa !1
  %tobool46 = icmp eq i32 %10, 0
  br i1 %tobool46, label %return, label %if.then47

if.then47:                                        ; preds = %land.lhs.true42
  %call48 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %0)
  br label %return

return:                                           ; preds = %if.end10, %if.end10.thread, %if.end.i, %if.end33, %land.lhs.true35, %if.then47, %land.lhs.true42, %redirect_exp.exit, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 0, %redirect_exp.exit ], [ 1, %land.lhs.true42 ], [ 1, %if.then47 ], [ 1, %land.lhs.true35 ], [ 1, %if.end33 ], [ 1, %if.end10.thread ], [ 0, %if.end.i ], [ 1, %if.end10 ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @emit_note_after(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @invert_jump_1(%struct.rtx_def* %jump, %struct.rtx_def* %nlabel) #0 {
entry:
  %call = tail call i32 @num_validated_changes() #7
  tail call fastcc void @invert_exp_1(%struct.rtx_def* %jump)
  %call1 = tail call i32 @num_validated_changes() #7
  %cmp = icmp eq i32 %call1, %call
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call.i = tail call i32 @num_validated_changes() #7
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %jump, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 39
  br i1 %cmp.i, label %if.then.i, label %redirect_jump_1.exit

if.then.i:                                        ; preds = %if.end
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtvec_def**
  %2 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %arrayidx6.i = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 1, i64 0
  br label %redirect_jump_1.exit

redirect_jump_1.exit:                             ; preds = %if.end, %if.then.i
  %loc.0.i = phi %struct.rtx_def** [ %arrayidx6.i, %if.then.i ], [ %rtx.i, %if.end ]
  %arrayidx11.i = getelementptr inbounds %struct.rtx_def* %jump, i64 0, i32 1, i64 7
  %rtx12.i = bitcast %union.rtunion_def* %arrayidx11.i to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx12.i, align 8, !tbaa !5
  tail call fastcc void @redirect_exp_1(%struct.rtx_def** %loc.0.i, %struct.rtx_def* %3, %struct.rtx_def* %nlabel, %struct.rtx_def* %jump) #7
  %call13.i = tail call i32 @num_validated_changes() #7
  %cmp14.i = icmp sgt i32 %call13.i, %call.i
  %conv.i = zext i1 %cmp14.i to i32
  br label %return

return:                                           ; preds = %entry, %redirect_jump_1.exit
  %retval.0 = phi i32 [ %conv.i, %redirect_jump_1.exit ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @invert_exp_1(%struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 33
  br i1 %cmp.i, label %if.end.i, label %if.then

if.end.i:                                         ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1.i = load i32* %2, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 39
  br i1 %cmp3.i, label %if.then4.i, label %if.end8.i

if.then4.i:                                       ; preds = %if.end.i
  %arrayidx6.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx6.i to %struct.rtvec_def**
  %3 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %arrayidx7.i = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 0
  %4 = load %struct.rtx_def** %arrayidx7.i, align 8, !tbaa !5
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load9.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then4.i, %if.end.i
  %bf.load9.i = phi i32 [ %bf.load9.pre.i, %if.then4.i ], [ %bf.load1.i, %if.end.i ]
  %pat.0.i = phi %struct.rtx_def* [ %4, %if.then4.i ], [ %1, %if.end.i ]
  %bf.clear10.i = and i32 %bf.load9.i, 65535
  %cmp11.i = icmp eq i32 %bf.clear10.i, 47
  br i1 %cmp11.i, label %land.lhs.true.i, label %if.then

land.lhs.true.i:                                  ; preds = %if.end8.i
  %arrayidx13.i = getelementptr inbounds %struct.rtx_def* %pat.0.i, i64 0, i32 1, i64 0
  %rtx14.i = bitcast %union.rtunion_def* %arrayidx13.i to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx14.i, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load15.i = load i32* %6, align 8
  %bf.clear16.i = and i32 %bf.load15.i, 65535
  %cmp17.i = icmp ne i32 %bf.clear16.i, 59
  %tobool = icmp eq %struct.rtx_def* %pat.0.i, null
  %or.cond = or i1 %cmp17.i, %tobool
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.i, %if.end8.i, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2106, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.invert_exp_1, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %land.lhs.true.i
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pat.0.i, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 72
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  %fld2 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1
  %rtx4 = bitcast [1 x %union.rtunion_def]* %fld2 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx4, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load.i53 = load i32* %10, align 8
  %bf.clear.i54 = and i32 %bf.load.i53, 65535
  %idxprom11.i = zext i32 %bf.clear.i54 to i64
  %arrayidx.i55 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom11.i
  %11 = load i8* %arrayidx.i55, align 1, !tbaa !11
  %cmp.i56 = icmp eq i8 %11, 60
  br i1 %cmp.i56, label %reversed_comparison_code.exit, label %if.end21

reversed_comparison_code.exit:                    ; preds = %if.then1
  %fld.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1
  %rtx.i57 = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx.i57, align 8, !tbaa !5
  %arrayidx6.i58 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtx7.i = bitcast %union.rtunion_def* %arrayidx6.i58 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx7.i, align 8, !tbaa !5
  %call.i = tail call i32 @reversed_comparison_code_parts(i32 %bf.clear.i54, %struct.rtx_def* %12, %struct.rtx_def* %13, %struct.rtx_def* %insn) #7
  %cmp6 = icmp eq i32 %call.i, 0
  br i1 %cmp6, label %if.end21, label %if.then7

if.then7:                                         ; preds = %reversed_comparison_code.exit
  %bf.load11 = load i32* %10, align 8
  %bf.lshr = lshr i32 %bf.load11, 16
  %bf.clear12 = and i32 %bf.lshr, 255
  %14 = load %struct.rtx_def** %rtx.i57, align 8, !tbaa !5
  %15 = load %struct.rtx_def** %rtx7.i, align 8, !tbaa !5
  %call19 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %call.i, i32 %bf.clear12, %struct.rtx_def* %14, %struct.rtx_def* %15) #7
  %call20 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx4, %struct.rtx_def* %call19, i32 1) #7
  br label %if.end36

if.end21:                                         ; preds = %if.then1, %reversed_comparison_code.exit
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx24, align 8, !tbaa !5
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 2
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx30, align 8, !tbaa !5
  %call31 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx24, %struct.rtx_def* %17, i32 1) #7
  %call35 = tail call i32 @validate_change(%struct.rtx_def* %insn, %struct.rtx_def** %rtx30, %struct.rtx_def* %16, i32 1) #7
  br label %if.end36

if.else:                                          ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2139, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.invert_exp_1, i64 0, i64 0)) #8
  unreachable

if.end36:                                         ; preds = %if.then7, %if.end21
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @invert_jump(%struct.rtx_def* %jump, %struct.rtx_def* %nlabel, i32 %delete_unused) #0 {
entry:
  tail call fastcc void @invert_exp_1(%struct.rtx_def* %jump) #7
  %call.i = tail call i32 @num_validated_changes() #7
  %cmp.i = icmp eq i32 %call.i, 0
  br i1 %cmp.i, label %return, label %invert_exp.exit

invert_exp.exit:                                  ; preds = %entry
  %call1.i = tail call i32 @apply_change_group() #7
  %tobool = icmp eq i32 %call1.i, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %invert_exp.exit
  %call1 = tail call i32 @redirect_jump(%struct.rtx_def* %jump, %struct.rtx_def* %nlabel, i32 %delete_unused)
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @invert_br_probabilities(%struct.rtx_def* %jump) #7
  br label %return

if.end4:                                          ; preds = %if.end
  tail call fastcc void @invert_exp_1(%struct.rtx_def* %jump) #7
  %call.i11 = tail call i32 @num_validated_changes() #7
  %cmp.i12 = icmp eq i32 %call.i11, 0
  br i1 %cmp.i12, label %if.then7, label %invert_exp.exit16

invert_exp.exit16:                                ; preds = %if.end4
  %call1.i13 = tail call i32 @apply_change_group() #7
  %tobool6 = icmp eq i32 %call1.i13, 0
  br i1 %tobool6, label %if.then7, label %return

if.then7:                                         ; preds = %if.end4, %invert_exp.exit16
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2202, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.invert_jump, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %entry, %invert_exp.exit16, %invert_exp.exit, %if.then3
  %retval.0 = phi i32 [ 1, %if.then3 ], [ 0, %invert_exp.exit ], [ 0, %invert_exp.exit16 ], [ 0, %entry ]
  ret i32 %retval.0
}

declare void @invert_br_probabilities(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @rtx_renumbered_equal_p(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 {
entry:
  %cmp587 = icmp eq %struct.rtx_def* %x, %y
  br i1 %cmp587, label %return, label %if.end

if.end:                                           ; preds = %entry, %if.then283
  %.pn = phi %struct.rtx_def* [ %53, %if.then283 ], [ %x, %entry ]
  %y.tr589 = phi %struct.rtx_def* [ %54, %if.then283 ], [ %y, %entry ]
  %bf.load22.in = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 0
  %bf.load22 = load i32* %bf.load22.in, align 8
  %bf.clear591 = and i32 %bf.load22, 65535
  switch i32 %bf.clear591, label %if.end131 [
    i32 61, label %land.lhs.true6
    i32 63, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load3 = load i32* %1, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 61
  br i1 %cmp5, label %land.lhs.true6, label %if.end131

land.lhs.true6:                                   ; preds = %if.end, %land.lhs.true
  %2 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 0
  %bf.load7 = load i32* %2, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  switch i32 %bf.clear8, label %if.end131 [
    i32 61, label %if.then21
    i32 63, label %land.lhs.true14
  ]

land.lhs.true14:                                  ; preds = %land.lhs.true6
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx17, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load18 = load i32* %4, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 61
  br i1 %cmp20, label %if.then21, label %if.end131

if.then21:                                        ; preds = %land.lhs.true6, %land.lhs.true14
  %bf.lshr = lshr i32 %bf.load22, 16
  %bf.clear23 = and i32 %bf.lshr, 255
  %bf.lshr25 = lshr i32 %bf.load7, 16
  %bf.clear26 = and i32 %bf.lshr25, 255
  %cmp27 = icmp eq i32 %bf.clear23, %bf.clear26
  br i1 %cmp27, label %if.end29, label %return

if.end29:                                         ; preds = %if.then21
  %5 = load i16** @reg_renumber, align 8, !tbaa !5
  %cmp30 = icmp eq i16* %5, null
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.end29
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %.pn, %struct.rtx_def* %y.tr589) #7
  br label %return

if.end32:                                         ; preds = %if.end29
  %cmp33 = icmp eq i32 %bf.clear591, 63
  %fld35 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1
  br i1 %cmp33, label %if.then34, label %if.else

if.then34:                                        ; preds = %if.end32
  %rtx37 = bitcast [1 x %union.rtunion_def]* %fld35 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx37, align 8, !tbaa !5
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx39 to i32*
  %7 = load i32* %rtuint, align 4, !tbaa !1
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 1
  %rtuint42 = bitcast %union.rtunion_def* %arrayidx41 to i32*
  %8 = load i32* %rtuint42, align 4, !tbaa !1
  %idxprom = sext i32 %7 to i64
  %arrayidx43 = getelementptr inbounds i16* %5, i64 %idxprom
  %9 = load i16* %arrayidx43, align 2, !tbaa !17
  %cmp44 = icmp sgt i16 %9, -1
  br i1 %cmp44, label %if.then46, label %if.end74

if.then46:                                        ; preds = %if.then34
  %conv = sext i16 %9 to i32
  %10 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load53 = load i32* %10, align 8
  %bf.lshr54 = lshr i32 %bf.load53, 16
  %bf.clear55 = and i32 %bf.lshr54, 255
  %call59 = tail call i32 @subreg_regno_offset(i32 %conv, i32 %bf.clear55, i32 %8, i32 %bf.clear23) #7
  %bf.load75.pre = load i32* %2, align 8
  br label %if.end74

if.else:                                          ; preds = %if.end32
  %rtuint63 = bitcast [1 x %union.rtunion_def]* %fld35 to i32*
  %11 = load i32* %rtuint63, align 4, !tbaa !1
  %idxprom64 = sext i32 %11 to i64
  %arrayidx65 = getelementptr inbounds i16* %5, i64 %idxprom64
  %12 = load i16* %arrayidx65, align 2, !tbaa !17
  %cmp67 = icmp sgt i16 %12, -1
  %conv66 = sext i16 %12 to i32
  %conv66. = select i1 %cmp67, i32 %conv66, i32 %11
  br label %if.end74

if.end74:                                         ; preds = %if.else, %if.then34, %if.then46
  %bf.load75 = phi i32 [ %bf.load75.pre, %if.then46 ], [ %bf.load7, %if.then34 ], [ %bf.load7, %if.else ]
  %reg_x.0 = phi i32 [ %call59, %if.then46 ], [ %7, %if.then34 ], [ %conv66., %if.else ]
  %byte_x.0 = phi i32 [ 0, %if.then46 ], [ %8, %if.then34 ], [ 0, %if.else ]
  %bf.clear76 = and i32 %bf.load75, 65535
  %cmp77 = icmp eq i32 %bf.clear76, 63
  %fld80 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1
  br i1 %cmp77, label %if.then79, label %if.else109

if.then79:                                        ; preds = %if.end74
  %rtx82 = bitcast [1 x %union.rtunion_def]* %fld80 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx82, align 8, !tbaa !5
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0
  %rtuint85 = bitcast %union.rtunion_def* %arrayidx84 to i32*
  %14 = load i32* %rtuint85, align 4, !tbaa !1
  %arrayidx87 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 1
  %rtuint88 = bitcast %union.rtunion_def* %arrayidx87 to i32*
  %15 = load i32* %rtuint88, align 4, !tbaa !1
  %idxprom89 = sext i32 %14 to i64
  %16 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx90 = getelementptr inbounds i16* %16, i64 %idxprom89
  %17 = load i16* %arrayidx90, align 2, !tbaa !17
  %cmp92 = icmp sgt i16 %17, -1
  br i1 %cmp92, label %if.then94, label %if.end123

if.then94:                                        ; preds = %if.then79
  %conv91 = sext i16 %17 to i32
  %18 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load101 = load i32* %18, align 8
  %bf.lshr102 = lshr i32 %bf.load101, 16
  %bf.clear103 = and i32 %bf.lshr102, 255
  %bf.lshr105 = lshr i32 %bf.load75, 16
  %bf.clear106 = and i32 %bf.lshr105, 255
  %call107 = tail call i32 @subreg_regno_offset(i32 %conv91, i32 %bf.clear103, i32 %15, i32 %bf.clear106) #7
  br label %if.end123

if.else109:                                       ; preds = %if.end74
  %rtuint112 = bitcast [1 x %union.rtunion_def]* %fld80 to i32*
  %19 = load i32* %rtuint112, align 4, !tbaa !1
  %idxprom113 = sext i32 %19 to i64
  %20 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx114 = getelementptr inbounds i16* %20, i64 %idxprom113
  %21 = load i16* %arrayidx114, align 2, !tbaa !17
  %cmp116 = icmp sgt i16 %21, -1
  %conv115 = sext i16 %21 to i32
  %conv115. = select i1 %cmp116, i32 %conv115, i32 %19
  br label %if.end123

if.end123:                                        ; preds = %if.else109, %if.then79, %if.then94
  %reg_y.0 = phi i32 [ %call107, %if.then94 ], [ %14, %if.then79 ], [ %conv115., %if.else109 ]
  %byte_y.0 = phi i32 [ 0, %if.then94 ], [ %15, %if.then79 ], [ 0, %if.else109 ]
  %cmp124 = icmp sgt i32 %reg_x.0, -1
  %cmp127 = icmp eq i32 %reg_x.0, %reg_y.0
  %or.cond = and i1 %cmp124, %cmp127
  br i1 %or.cond, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end123
  %cmp129 = icmp eq i32 %byte_x.0, %byte_y.0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end123
  %22 = phi i1 [ false, %if.end123 ], [ %cmp129, %land.rhs ]
  %land.ext = zext i1 %22 to i32
  br label %return

if.end131:                                        ; preds = %land.lhs.true6, %if.end, %land.lhs.true14, %land.lhs.true
  %23 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 0
  %bf.load132 = load i32* %23, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear591, %bf.clear133
  br i1 %cmp134, label %if.end137, label %return

if.end137:                                        ; preds = %if.end131
  switch i32 %bf.clear591, label %sw.epilog [
    i32 59, label %return
    i32 69, label %return
    i32 44, label %return
    i32 45, label %return
    i32 54, label %sw.bb138
    i32 67, label %sw.bb146
    i32 68, label %sw.bb175
    i32 36, label %return
  ]

sw.bb138:                                         ; preds = %if.end137
  %rtwint = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 0, i32 0
  %24 = load i64* %rtwint, align 8, !tbaa !19
  %rtwint143 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 0, i32 0
  %25 = load i64* %rtwint143, align 8, !tbaa !19
  %cmp144 = icmp eq i64 %24, %25
  %conv145 = zext i1 %cmp144 to i32
  br label %return

sw.bb146:                                         ; preds = %if.end137
  %26 = or i32 %bf.load22, %bf.load132
  %27 = and i32 %26, 134217728
  %28 = icmp eq i32 %27, 0
  %arrayidx166 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 0
  %rtx167 = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx167, align 8, !tbaa !5
  br i1 %28, label %if.end164, label %if.then155

if.then155:                                       ; preds = %sw.bb146
  %arrayidx160 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 0
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx161, align 8, !tbaa !5
  %cmp162 = icmp eq %struct.rtx_def* %29, %30
  %conv163 = zext i1 %cmp162 to i32
  br label %return

if.end164:                                        ; preds = %sw.bb146
  %call168 = tail call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %29) #7
  %arrayidx170 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 0
  %rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx171, align 8, !tbaa !5
  %call172 = tail call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %31) #7
  %cmp173 = icmp eq %struct.rtx_def* %call168, %call172
  %conv174 = zext i1 %cmp173 to i32
  br label %return

sw.bb175:                                         ; preds = %if.end137
  %arrayidx177 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 0
  %rtstr = bitcast %union.rtunion_def* %arrayidx177 to i8**
  %32 = load i8** %rtstr, align 8, !tbaa !5
  %arrayidx179 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 0
  %rtstr180 = bitcast %union.rtunion_def* %arrayidx179 to i8**
  %33 = load i8** %rtstr180, align 8, !tbaa !5
  %cmp181 = icmp eq i8* %32, %33
  %conv182 = zext i1 %cmp181 to i32
  br label %return

sw.epilog:                                        ; preds = %if.end137
  %bf.lshr185536 = xor i32 %bf.load22, %bf.load132
  %34 = and i32 %bf.lshr185536, 16711680
  %cmp190 = icmp eq i32 %34, 0
  br i1 %cmp190, label %if.end193, label %return

if.end193:                                        ; preds = %sw.epilog
  %35 = and i32 %bf.load22, 65534
  %36 = icmp eq i32 %35, 102
  br i1 %36, label %land.lhs.true205, label %lor.lhs.false199

lor.lhs.false199:                                 ; preds = %if.end193
  %idxprom200534 = zext i32 %bf.clear591 to i64
  %arrayidx201 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom200534
  %37 = load i8* %arrayidx201, align 1, !tbaa !11
  %cmp203 = icmp eq i8 %37, 99
  %cmp206 = icmp ne i32 %bf.clear591, 75
  %or.cond425 = and i1 %cmp203, %cmp206
  br i1 %or.cond425, label %if.then208, label %if.else245

land.lhs.true205:                                 ; preds = %if.end193
  %cmp206.old = icmp eq i32 %bf.clear591, 75
  br i1 %cmp206.old, label %land.lhs.true205.if.else245_crit_edge, label %if.then208

land.lhs.true205.if.else245_crit_edge:            ; preds = %land.lhs.true205
  %.pre = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 75), align 1, !tbaa !11
  br label %if.else245

if.then208:                                       ; preds = %land.lhs.true205, %lor.lhs.false199
  %fld209 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1
  %rtx211 = bitcast [1 x %union.rtunion_def]* %fld209 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx211, align 8, !tbaa !5
  %fld212 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1
  %rtx214 = bitcast [1 x %union.rtunion_def]* %fld212 to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx214, align 8, !tbaa !5
  %call215 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %38, %struct.rtx_def* %39)
  %tobool216 = icmp eq i32 %call215, 0
  br i1 %tobool216, label %if.then208.lor.rhs_crit_edge, label %land.lhs.true217

if.then208.lor.rhs_crit_edge:                     ; preds = %if.then208
  %arrayidx230.pre = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 1
  %rtx231.pre = bitcast %union.rtunion_def* %arrayidx230.pre to %struct.rtx_def**
  br label %lor.rhs

land.lhs.true217:                                 ; preds = %if.then208
  %arrayidx219 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 1
  %rtx220 = bitcast %union.rtunion_def* %arrayidx219 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx220, align 8, !tbaa !5
  %arrayidx222 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 1
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx223, align 8, !tbaa !5
  %call224 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %40, %struct.rtx_def* %41)
  %tobool225 = icmp eq i32 %call224, 0
  br i1 %tobool225, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.then208.lor.rhs_crit_edge, %land.lhs.true217
  %rtx231.pre-phi = phi %struct.rtx_def** [ %rtx231.pre, %if.then208.lor.rhs_crit_edge ], [ %rtx223, %land.lhs.true217 ]
  %42 = load %struct.rtx_def** %rtx211, align 8, !tbaa !5
  %43 = load %struct.rtx_def** %rtx231.pre-phi, align 8, !tbaa !5
  %call232 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %42, %struct.rtx_def* %43)
  %tobool233 = icmp eq i32 %call232, 0
  br i1 %tobool233, label %lor.end, label %land.rhs234

land.rhs234:                                      ; preds = %lor.rhs
  %arrayidx236 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 1
  %rtx237 = bitcast %union.rtunion_def* %arrayidx236 to %struct.rtx_def**
  %44 = load %struct.rtx_def** %rtx237, align 8, !tbaa !5
  %45 = load %struct.rtx_def** %rtx214, align 8, !tbaa !5
  %call241 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %44, %struct.rtx_def* %45)
  %tobool242 = icmp ne i32 %call241, 0
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true217, %lor.rhs, %land.rhs234
  %46 = phi i1 [ true, %land.lhs.true217 ], [ false, %lor.rhs ], [ %tobool242, %land.rhs234 ]
  %lor.ext = zext i1 %46 to i32
  br label %return

if.else245:                                       ; preds = %land.lhs.true205.if.else245_crit_edge, %lor.lhs.false199
  %idxprom246535.pre-phi = phi i64 [ 75, %land.lhs.true205.if.else245_crit_edge ], [ %idxprom200534, %lor.lhs.false199 ]
  %47 = phi i8 [ %.pre, %land.lhs.true205.if.else245_crit_edge ], [ %37, %lor.lhs.false199 ]
  switch i8 %47, label %if.end293 [
    i8 60, label %if.then257
    i8 50, label %if.then257
    i8 49, label %if.then283
  ]

if.then257:                                       ; preds = %if.else245, %if.else245
  %.in.in = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1
  %.in = bitcast [1 x %union.rtunion_def]* %.in.in to %struct.rtx_def**
  %48 = load %struct.rtx_def** %.in, align 8
  %fld261 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1
  %rtx263 = bitcast [1 x %union.rtunion_def]* %fld261 to %struct.rtx_def**
  %49 = load %struct.rtx_def** %rtx263, align 8, !tbaa !5
  %call264 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %48, %struct.rtx_def* %49)
  %tobool265 = icmp eq i32 %call264, 0
  br i1 %tobool265, label %land.end275, label %land.rhs266

land.rhs266:                                      ; preds = %if.then257
  %arrayidx268 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 1
  %rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx269, align 8, !tbaa !5
  %arrayidx271 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 1
  %rtx272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx272, align 8, !tbaa !5
  %call273 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %50, %struct.rtx_def* %51)
  %tobool274 = icmp ne i32 %call273, 0
  br label %land.end275

land.end275:                                      ; preds = %if.then257, %land.rhs266
  %52 = phi i1 [ false, %if.then257 ], [ %tobool274, %land.rhs266 ]
  %land.ext276 = zext i1 %52 to i32
  br label %return

if.then283:                                       ; preds = %if.else245
  %arrayidx285 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 0
  %rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx286, align 8, !tbaa !5
  %arrayidx288 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 0
  %rtx289 = bitcast %union.rtunion_def* %arrayidx288 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx289, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %53, %54
  br i1 %cmp, label %return, label %if.end

if.end293:                                        ; preds = %if.else245
  %arrayidx295 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom246535.pre-phi
  %55 = load i8** %arrayidx295, align 8, !tbaa !5
  %arrayidx297 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom246535.pre-phi
  %56 = load i8* %arrayidx297, align 1, !tbaa !11
  %cmp299576 = icmp eq i8 %56, 0
  br i1 %cmp299576, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end293
  %57 = zext i8 %56 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv677 = phi i64 [ %57, %for.body.lr.ph ], [ %indvars.iv.next678, %for.cond.backedge ]
  %indvars.iv.next678 = add nsw i64 %indvars.iv677, -1
  %arrayidx302 = getelementptr inbounds i8* %55, i64 %indvars.iv.next678
  %58 = load i8* %arrayidx302, align 1, !tbaa !11
  %conv303 = sext i8 %58 to i32
  switch i32 %conv303, label %sw.default420 [
    i32 119, label %sw.bb304
    i32 105, label %sw.bb317
    i32 116, label %sw.bb329
    i32 115, label %sw.bb341
    i32 101, label %sw.bb354
    i32 117, label %sw.bb367
    i32 48, label %for.cond.backedge
    i32 69, label %sw.bb380
  ]

sw.bb304:                                         ; preds = %for.body
  %rtwint308 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 %indvars.iv.next678, i32 0
  %59 = load i64* %rtwint308, align 8, !tbaa !19
  %rtwint312 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 %indvars.iv.next678, i32 0
  %60 = load i64* %rtwint312, align 8, !tbaa !19
  %cmp313 = icmp eq i64 %59, %60
  br i1 %cmp313, label %for.cond.backedge, label %return

for.cond.backedge:                                ; preds = %for.cond399, %sw.bb304, %sw.bb317, %sw.bb329, %sw.bb341, %sw.bb354, %sw.bb367, %for.body
  %61 = trunc i64 %indvars.iv.next678 to i32
  %cmp299 = icmp sgt i32 %61, 0
  br i1 %cmp299, label %for.body, label %return

sw.bb317:                                         ; preds = %for.body
  %arrayidx320 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 %indvars.iv.next678
  %rtint = bitcast %union.rtunion_def* %arrayidx320 to i32*
  %62 = load i32* %rtint, align 4, !tbaa !1
  %arrayidx323 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 %indvars.iv.next678
  %rtint324 = bitcast %union.rtunion_def* %arrayidx323 to i32*
  %63 = load i32* %rtint324, align 4, !tbaa !1
  %cmp325 = icmp eq i32 %62, %63
  br i1 %cmp325, label %for.cond.backedge, label %return

sw.bb329:                                         ; preds = %for.body
  %arrayidx332 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 %indvars.iv.next678
  %rttree = bitcast %union.rtunion_def* %arrayidx332 to %union.tree_node**
  %64 = load %union.tree_node** %rttree, align 8, !tbaa !5
  %arrayidx335 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 %indvars.iv.next678
  %rttree336 = bitcast %union.rtunion_def* %arrayidx335 to %union.tree_node**
  %65 = load %union.tree_node** %rttree336, align 8, !tbaa !5
  %cmp337 = icmp eq %union.tree_node* %64, %65
  br i1 %cmp337, label %for.cond.backedge, label %return

sw.bb341:                                         ; preds = %for.body
  %arrayidx344 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 %indvars.iv.next678
  %rtstr345 = bitcast %union.rtunion_def* %arrayidx344 to i8**
  %66 = load i8** %rtstr345, align 8, !tbaa !5
  %arrayidx348 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 %indvars.iv.next678
  %rtstr349 = bitcast %union.rtunion_def* %arrayidx348 to i8**
  %67 = load i8** %rtstr349, align 8, !tbaa !5
  %call350 = tail call i32 @strcmp(i8* %66, i8* %67) #7
  %tobool351 = icmp eq i32 %call350, 0
  br i1 %tobool351, label %for.cond.backedge, label %return

sw.bb354:                                         ; preds = %for.body
  %arrayidx357 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 %indvars.iv.next678
  %rtx358 = bitcast %union.rtunion_def* %arrayidx357 to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx358, align 8, !tbaa !5
  %arrayidx361 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 %indvars.iv.next678
  %rtx362 = bitcast %union.rtunion_def* %arrayidx361 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx362, align 8, !tbaa !5
  %call363 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %68, %struct.rtx_def* %69)
  %tobool364 = icmp eq i32 %call363, 0
  br i1 %tobool364, label %return, label %for.cond.backedge

sw.bb367:                                         ; preds = %for.body
  %arrayidx370 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 %indvars.iv.next678
  %rtx371 = bitcast %union.rtunion_def* %arrayidx370 to %struct.rtx_def**
  %70 = load %struct.rtx_def** %rtx371, align 8, !tbaa !5
  %arrayidx374 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 %indvars.iv.next678
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %71 = load %struct.rtx_def** %rtx375, align 8, !tbaa !5
  %cmp376 = icmp eq %struct.rtx_def* %70, %71
  br i1 %cmp376, label %for.cond.backedge, label %return

sw.bb380:                                         ; preds = %for.body
  %arrayidx383 = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 %indvars.iv.next678
  %rtvec = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtvec_def**
  %72 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %72, i64 0, i32 0
  %73 = load i32* %num_elem, align 4, !tbaa !15
  %arrayidx386 = getelementptr inbounds %struct.rtx_def* %y.tr589, i64 0, i32 1, i64 %indvars.iv.next678
  %rtvec387 = bitcast %union.rtunion_def* %arrayidx386 to %struct.rtvec_def**
  %74 = load %struct.rtvec_def** %rtvec387, align 8, !tbaa !5
  %num_elem388 = getelementptr inbounds %struct.rtvec_def* %74, i64 0, i32 0
  %75 = load i32* %num_elem388, align 4, !tbaa !15
  %cmp389 = icmp eq i32 %73, %75
  br i1 %cmp389, label %for.cond399.preheader, label %return

for.cond399.preheader:                            ; preds = %sw.bb380
  %76 = sext i32 %73 to i64
  br label %for.cond399

for.cond399:                                      ; preds = %for.cond399.preheader, %for.body402
  %indvars.iv = phi i64 [ %76, %for.cond399.preheader ], [ %indvars.iv.next, %for.body402 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %77 = trunc i64 %indvars.iv to i32
  %cmp400 = icmp sgt i32 %77, 0
  br i1 %cmp400, label %for.body402, label %for.cond.backedge

for.body402:                                      ; preds = %for.cond399
  %78 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %arrayidx408 = getelementptr inbounds %struct.rtvec_def* %78, i64 0, i32 1, i64 %indvars.iv.next
  %79 = load %struct.rtx_def** %arrayidx408, align 8, !tbaa !5
  %80 = load %struct.rtvec_def** %rtvec387, align 8, !tbaa !5
  %arrayidx415 = getelementptr inbounds %struct.rtvec_def* %80, i64 0, i32 1, i64 %indvars.iv.next
  %81 = load %struct.rtx_def** %arrayidx415, align 8, !tbaa !5
  %call416 = tail call i32 @rtx_renumbered_equal_p(%struct.rtx_def* %79, %struct.rtx_def* %81)
  %tobool417 = icmp eq i32 %call416, 0
  br i1 %tobool417, label %return, label %for.cond399

sw.default420:                                    ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2400, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.rtx_renumbered_equal_p, i64 0, i64 0)) #8
  unreachable

return:                                           ; preds = %if.then283, %if.end131, %if.end137, %if.end137, %if.end137, %if.end137, %if.end137, %sw.epilog, %sw.bb304, %sw.bb317, %sw.bb329, %sw.bb341, %sw.bb354, %sw.bb367, %sw.bb380, %for.cond.backedge, %for.body402, %entry, %if.end293, %if.then21, %land.end275, %lor.end, %sw.bb175, %if.end164, %if.then155, %sw.bb138, %land.end, %if.then31
  %retval.0 = phi i32 [ %call, %if.then31 ], [ %land.ext, %land.end ], [ %lor.ext, %lor.end ], [ %land.ext276, %land.end275 ], [ %conv182, %sw.bb175 ], [ %conv163, %if.then155 ], [ %conv174, %if.end164 ], [ %conv145, %sw.bb138 ], [ 0, %if.then21 ], [ 1, %if.end293 ], [ 1, %entry ], [ 0, %for.body402 ], [ 0, %sw.bb304 ], [ 0, %sw.bb317 ], [ 0, %sw.bb329 ], [ 0, %sw.bb341 ], [ 0, %sw.bb354 ], [ 0, %sw.bb367 ], [ 0, %sw.bb380 ], [ 1, %for.cond.backedge ], [ 1, %if.then283 ], [ 0, %if.end131 ], [ 0, %if.end137 ], [ 0, %if.end137 ], [ 0, %if.end137 ], [ 0, %if.end137 ], [ 0, %if.end137 ], [ 0, %sw.epilog ]
  ret i32 %retval.0
}

declare i32 @subreg_regno_offset(i32, i32, i32, i32) #1

declare %struct.rtx_def* @next_real_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #5

; Function Attrs: nounwind uwtable
define i32 @true_regnum(%struct.rtx_def* nocapture readonly %x) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 61, label %if.then
    i32 63, label %if.then23
  ]

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %cmp1 = icmp ugt i32 %1, 52
  br i1 %cmp1, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %if.then
  %idxprom = zext i32 %1 to i64
  %2 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx5 = getelementptr inbounds i16* %2, i64 %idxprom
  %3 = load i16* %arrayidx5, align 2, !tbaa !17
  %cmp6 = icmp sgt i16 %3, -1
  %conv = sext i16 %3 to i32
  %conv. = select i1 %cmp6, i32 %conv, i32 %1
  ret i32 %conv.

if.then23:                                        ; preds = %entry
  %fld24 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld24 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %call = tail call i32 @true_regnum(%struct.rtx_def* %4)
  %5 = icmp ult i32 %call, 53
  br i1 %5, label %if.then31, label %return

if.then31:                                        ; preds = %if.then23
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtuint37 = bitcast %union.rtunion_def* %arrayidx36 to i32*
  %7 = load i32* %rtuint37, align 4, !tbaa !1
  %8 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load41 = load i32* %8, align 8
  %bf.lshr = lshr i32 %bf.load41, 16
  %bf.clear42 = and i32 %bf.lshr, 255
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtuint45 = bitcast %union.rtunion_def* %arrayidx44 to i32*
  %9 = load i32* %rtuint45, align 4, !tbaa !1
  %bf.load46 = load i32* %0, align 8
  %bf.lshr47 = lshr i32 %bf.load46, 16
  %bf.clear48 = and i32 %bf.lshr47, 255
  %call49 = tail call i32 @subreg_regno_offset(i32 %7, i32 %bf.clear42, i32 %9, i32 %bf.clear48) #7
  %add = add i32 %call49, %call
  br label %return

return:                                           ; preds = %if.then, %if.then23, %entry, %if.then31
  %retval.0 = phi i32 [ %add, %if.then31 ], [ -1, %entry ], [ -1, %if.then23 ], [ %1, %if.then ]
  ret i32 %retval.0
}

declare i32 @apply_change_group() #1

declare i32 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_u00(i32, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_(i32, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @delete_prior_computation(%struct.rtx_def* %note, %struct.rtx_def* %insn) #0 {
entry:
  %fld = getelementptr inbounds %struct.rtx_def* %note, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %call = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn) #7
  %tobool502 = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool502, label %for.end329, label %land.rhs

land.rhs:                                         ; preds = %entry, %for.inc327
  %our_prev.0503 = phi %struct.rtx_def* [ %call328, %for.inc327 ], [ %call, %entry ]
  %1 = getelementptr inbounds %struct.rtx_def* %our_prev.0503, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %for.end329 [
    i32 32, label %for.body
    i32 34, label %for.body
  ]

for.body:                                         ; preds = %land.rhs, %land.rhs
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %our_prev.0503, i64 0, i32 1, i64 3
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx6, align 8, !tbaa !5
  %cmp9 = icmp eq i32 %bf.clear, 34
  br i1 %cmp9, label %land.lhs.true, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load23.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

land.lhs.true:                                    ; preds = %for.body
  %bf.clear11 = and i32 %bf.load, 67108864
  %tobool12 = icmp eq i32 %bf.clear11, 0
  br i1 %tobool12, label %for.end329, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load13 = load i32* %3, align 8
  %bf.clear14 = and i32 %bf.load13, 65535
  %cmp15 = icmp eq i32 %bf.clear14, 47
  br i1 %cmp15, label %lor.lhs.false16, label %for.end329

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 1
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx19, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load20 = load i32* %5, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 50
  br i1 %cmp22, label %if.end, label %for.end329

if.end:                                           ; preds = %for.body.if.end_crit_edge, %lor.lhs.false16
  %bf.load23 = phi i32 [ %bf.load23.pre, %for.body.if.end_crit_edge ], [ %bf.load13, %lor.lhs.false16 ]
  %6 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.clear24 = and i32 %bf.load23, 65535
  switch i32 %bf.clear24, label %if.end39 [
    i32 24, label %for.end329
    i32 48, label %land.lhs.true31
  ]

land.lhs.true31:                                  ; preds = %if.end
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx34, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load35 = load i32* %8, align 8
  %bf.clear36 = and i32 %bf.load35, 65535
  %cmp37 = icmp eq i32 %bf.clear36, 32
  br i1 %cmp37, label %for.end329, label %if.end39

if.end39:                                         ; preds = %if.end, %land.lhs.true31
  %call40 = tail call i32 @reg_set_p(%struct.rtx_def* %0, %struct.rtx_def* %2) #7
  %tobool41 = icmp eq i32 %call40, 0
  br i1 %tobool41, label %if.end313, label %if.then42

if.then42:                                        ; preds = %if.end39
  %call43 = tail call i32 @side_effects_p(%struct.rtx_def* %2) #7
  %tobool44 = icmp eq i32 %call43, 0
  br i1 %tobool44, label %if.end50, label %land.lhs.true45

land.lhs.true45:                                  ; preds = %if.then42
  %bf.load46 = load i32* %1, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 34
  br i1 %cmp48, label %if.end50, label %for.end329

if.end50:                                         ; preds = %land.lhs.true45, %if.then42
  %bf.load51 = load i32* %6, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  switch i32 %bf.clear52, label %for.end329 [
    i32 39, label %for.cond55.preheader
    i32 47, label %land.lhs.true84
  ]

for.cond55.preheader:                             ; preds = %if.end50
  %arrayidx57 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtvec_def**
  %9 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem488 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 0
  %10 = load i32* %num_elem488, align 4, !tbaa !15
  %cmp58489 = icmp sgt i32 %10, 0
  br i1 %cmp58489, label %for.body59, label %for.end

for.body59:                                       ; preds = %for.cond55.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond55.preheader ]
  %arrayidx63 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv
  %11 = load %struct.rtx_def** %arrayidx63, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load64 = load i32* %12, align 8
  %bf.clear65 = and i32 %bf.load64, 65535
  %cmp66 = icmp eq i32 %bf.clear65, 47
  br i1 %cmp66, label %land.lhs.true67, label %for.inc

land.lhs.true67:                                  ; preds = %for.body59
  %arrayidx69 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx70, align 8, !tbaa !5
  %cmp71 = icmp eq %struct.rtx_def* %13, %0
  br i1 %cmp71, label %for.inc, label %land.lhs.true67.for.end_crit_edge

for.inc:                                          ; preds = %land.lhs.true67, %for.body59
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %14 = trunc i64 %indvars.iv.next to i32
  %cmp58 = icmp slt i32 %14, %10
  br i1 %cmp58, label %for.body59, label %for.end

land.lhs.true67.for.end_crit_edge:                ; preds = %land.lhs.true67
  %15 = trunc i64 %indvars.iv to i32
  br label %for.end

for.end:                                          ; preds = %for.inc, %land.lhs.true67.for.end_crit_edge, %for.cond55.preheader
  %i.0.lcssa = phi i32 [ %15, %land.lhs.true67.for.end_crit_edge ], [ 0, %for.cond55.preheader ], [ %14, %for.inc ]
  %cmp78 = icmp eq i32 %i.0.lcssa, %10
  br i1 %cmp78, label %if.then79, label %for.end329

if.then79:                                        ; preds = %for.end
  %arrayidx.i459 = getelementptr inbounds %struct.rtx_def* %our_prev.0503, i64 0, i32 1, i64 6
  %rtx.i460 = bitcast %union.rtunion_def* %arrayidx.i459 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx.i460, align 8, !tbaa !5
  %tobool.i462486 = icmp eq %struct.rtx_def* %16, null
  br i1 %tobool.i462486, label %delete_computation.exit478, label %for.body.i469

for.body.i469:                                    ; preds = %if.then79, %for.cond.i463.backedge
  %note.0.i461487 = phi %struct.rtx_def* [ %17, %for.cond.i463.backedge ], [ %16, %if.then79 ]
  %arrayidx2.i464 = getelementptr inbounds %struct.rtx_def* %note.0.i461487, i64 0, i32 1, i64 1
  %rtx3.i465 = bitcast %union.rtunion_def* %arrayidx2.i464 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx3.i465, align 8, !tbaa !5
  %18 = getelementptr inbounds %struct.rtx_def* %note.0.i461487, i64 0, i32 0
  %bf.load.i466 = load i32* %18, align 8
  %bf.clear.i467 = and i32 %bf.load.i466, 16711680
  %cmp.i468 = icmp eq i32 %bf.clear.i467, 65536
  br i1 %cmp.i468, label %lor.lhs.false.i475, label %for.cond.i463.backedge

for.cond.i463.backedge:                           ; preds = %for.body.i469, %lor.lhs.false.i475, %if.end.i476
  %tobool.i462 = icmp eq %struct.rtx_def* %17, null
  br i1 %tobool.i462, label %delete_computation.exit478, label %for.body.i469

lor.lhs.false.i475:                               ; preds = %for.body.i469
  %arrayidx5.i470 = getelementptr inbounds %struct.rtx_def* %note.0.i461487, i64 0, i32 1, i64 0
  %rtx6.i471 = bitcast %union.rtunion_def* %arrayidx5.i470 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx6.i471, align 8, !tbaa !5
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load7.i472 = load i32* %20, align 8
  %bf.clear8.i473 = and i32 %bf.load7.i472, 65535
  %cmp9.i474 = icmp eq i32 %bf.clear8.i473, 61
  br i1 %cmp9.i474, label %if.end.i476, label %for.cond.i463.backedge

if.end.i476:                                      ; preds = %lor.lhs.false.i475
  tail call fastcc void @delete_prior_computation(%struct.rtx_def* %note.0.i461487, %struct.rtx_def* %our_prev.0503) #7
  br label %for.cond.i463.backedge

delete_computation.exit478:                       ; preds = %for.cond.i463.backedge, %if.then79
  %call.i477 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %our_prev.0503) #7
  br label %for.end329

land.lhs.true84:                                  ; preds = %if.end50
  %arrayidx86 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx87, align 8, !tbaa !5
  %22 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 0
  %bf.load88 = load i32* %22, align 8
  %bf.clear89 = and i32 %bf.load88, 65535
  %cmp90 = icmp eq i32 %bf.clear89, 61
  br i1 %cmp90, label %if.then91, label %for.end329

if.then91:                                        ; preds = %land.lhs.true84
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx96 to i32*
  %23 = load i32* %rtuint, align 4, !tbaa !1
  %cmp97 = icmp slt i32 %23, 53
  br i1 %cmp97, label %cond.true, label %cond.end177

cond.true:                                        ; preds = %if.then91
  %24 = and i32 %23, -8
  %25 = icmp eq i32 %24, 8
  %.off420 = add i32 %23, -21
  %26 = icmp ult i32 %.off420, 8
  %or.cond = or i1 %25, %26
  %.off421 = add i32 %23, -45
  %27 = icmp ult i32 %.off421, 8
  %or.cond428 = or i1 %or.cond, %27
  %.off422 = add i32 %23, -29
  %28 = icmp ult i32 %.off422, 8
  %or.cond430 = or i1 %or.cond428, %28
  %bf.lshr118 = lshr i32 %bf.load88, 16
  %bf.clear119 = and i32 %bf.lshr118, 255
  br i1 %or.cond430, label %cond.true113, label %cond.false

cond.true113:                                     ; preds = %cond.true
  %idxprom120424 = zext i32 %bf.clear119 to i64
  %arrayidx121 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom120424
  %29 = load i32* %arrayidx121, align 4, !tbaa !11
  %cmp122 = icmp eq i32 %29, 5
  br i1 %cmp122, label %cond.end177, label %lor.rhs123

lor.rhs123:                                       ; preds = %cond.true113
  %cmp132 = icmp eq i32 %29, 6
  %phitmp425 = select i1 %cmp132, i32 2, i32 1
  br label %cond.end177

cond.false:                                       ; preds = %cond.true
  switch i32 %bf.clear119, label %cond.false156 [
    i32 18, label %cond.true141
    i32 24, label %cond.true152
  ]

cond.true141:                                     ; preds = %cond.false
  %30 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %30, 25
  %31 = and i32 %and, 1
  %32 = xor i32 %31, 3
  br label %cond.end177

cond.true152:                                     ; preds = %cond.false
  %33 = load i32* @target_flags, align 4, !tbaa !1
  %and153 = lshr i32 %33, 24
  %34 = and i32 %and153, 2
  %35 = xor i32 %34, 6
  br label %cond.end177

cond.false156:                                    ; preds = %cond.false
  %idxprom163423 = zext i32 %bf.clear119 to i64
  %arrayidx164 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom163423
  %36 = load i8* %arrayidx164, align 1, !tbaa !11
  %conv = zext i8 %36 to i32
  %37 = load i32* @target_flags, align 4, !tbaa !1
  %and165 = lshr i32 %37, 23
  %38 = and i32 %and165, 4
  %39 = add i32 %38, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %39
  %div = sdiv i32 %sub, %39
  br label %cond.end177

cond.end177:                                      ; preds = %cond.true113, %lor.rhs123, %if.then91, %cond.true152, %cond.false156, %cond.true141
  %cond178 = phi i32 [ %32, %cond.true141 ], [ %35, %cond.true152 ], [ %div, %cond.false156 ], [ 1, %if.then91 ], [ 2, %cond.true113 ], [ %phitmp425, %lor.rhs123 ]
  %add179 = add nsw i32 %cond178, %23
  %arrayidx181 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtuint182 = bitcast %union.rtunion_def* %arrayidx181 to i32*
  %40 = load i32* %rtuint182, align 4, !tbaa !1
  %cmp183 = icmp slt i32 %40, 53
  br i1 %cmp183, label %cond.true185, label %cond.end270

cond.true185:                                     ; preds = %cond.end177
  %41 = and i32 %40, -8
  %42 = icmp eq i32 %41, 8
  %.off = add i32 %40, -21
  %43 = icmp ult i32 %.off, 8
  %or.cond432 = or i1 %42, %43
  %.off415 = add i32 %40, -45
  %44 = icmp ult i32 %.off415, 8
  %or.cond434 = or i1 %or.cond432, %44
  %.off416 = add i32 %40, -29
  %45 = icmp ult i32 %.off416, 8
  %or.cond436 = or i1 %or.cond434, %45
  %46 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load210 = load i32* %46, align 8
  %bf.lshr211 = lshr i32 %bf.load210, 16
  %bf.clear212 = and i32 %bf.lshr211, 255
  br i1 %or.cond436, label %cond.true209, label %cond.false227

cond.true209:                                     ; preds = %cond.true185
  %idxprom213418 = zext i32 %bf.clear212 to i64
  %arrayidx214 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom213418
  %47 = load i32* %arrayidx214, align 4, !tbaa !11
  %cmp215 = icmp eq i32 %47, 5
  br i1 %cmp215, label %cond.end270, label %lor.rhs217

lor.rhs217:                                       ; preds = %cond.true209
  %cmp223 = icmp eq i32 %47, 6
  %phitmp = select i1 %cmp223, i32 2, i32 1
  br label %cond.end270

cond.false227:                                    ; preds = %cond.true185
  switch i32 %bf.clear212, label %cond.false247 [
    i32 18, label %cond.true233
    i32 24, label %cond.true243
  ]

cond.true233:                                     ; preds = %cond.false227
  %48 = load i32* @target_flags, align 4, !tbaa !1
  %and234 = lshr i32 %48, 25
  %49 = and i32 %and234, 1
  %50 = xor i32 %49, 3
  br label %cond.end270

cond.true243:                                     ; preds = %cond.false227
  %51 = load i32* @target_flags, align 4, !tbaa !1
  %and244 = lshr i32 %51, 24
  %52 = and i32 %and244, 2
  %53 = xor i32 %52, 6
  br label %cond.end270

cond.false247:                                    ; preds = %cond.false227
  %idxprom251417 = zext i32 %bf.clear212 to i64
  %arrayidx252 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom251417
  %54 = load i8* %arrayidx252, align 1, !tbaa !11
  %conv253 = zext i8 %54 to i32
  %55 = load i32* @target_flags, align 4, !tbaa !1
  %and254 = lshr i32 %55, 23
  %56 = and i32 %and254, 4
  %57 = add i32 %56, 4
  %add257 = add i32 %conv253, -1
  %sub258 = add i32 %add257, %57
  %div262 = sdiv i32 %sub258, %57
  br label %cond.end270

cond.end270:                                      ; preds = %cond.true209, %lor.rhs217, %cond.end177, %cond.true243, %cond.false247, %cond.true233
  %cond271 = phi i32 [ %50, %cond.true233 ], [ %53, %cond.true243 ], [ %div262, %cond.false247 ], [ 1, %cond.end177 ], [ 2, %cond.true209 ], [ %phitmp, %lor.rhs217 ]
  %add272 = add nsw i32 %cond271, %40
  %cmp273 = icmp slt i32 %23, %40
  %cmp276 = icmp sgt i32 %add179, %add272
  %or.cond437 = or i1 %cmp273, %cmp276
  br i1 %or.cond437, label %if.else279, label %if.then278

if.then278:                                       ; preds = %cond.end270
  %arrayidx.i439 = getelementptr inbounds %struct.rtx_def* %our_prev.0503, i64 0, i32 1, i64 6
  %rtx.i440 = bitcast %union.rtunion_def* %arrayidx.i439 to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx.i440, align 8, !tbaa !5
  %tobool.i442500 = icmp eq %struct.rtx_def* %58, null
  br i1 %tobool.i442500, label %delete_computation.exit458, label %for.body.i449

for.body.i449:                                    ; preds = %if.then278, %for.cond.i443.backedge
  %note.0.i441501 = phi %struct.rtx_def* [ %59, %for.cond.i443.backedge ], [ %58, %if.then278 ]
  %arrayidx2.i444 = getelementptr inbounds %struct.rtx_def* %note.0.i441501, i64 0, i32 1, i64 1
  %rtx3.i445 = bitcast %union.rtunion_def* %arrayidx2.i444 to %struct.rtx_def**
  %59 = load %struct.rtx_def** %rtx3.i445, align 8, !tbaa !5
  %60 = getelementptr inbounds %struct.rtx_def* %note.0.i441501, i64 0, i32 0
  %bf.load.i446 = load i32* %60, align 8
  %bf.clear.i447 = and i32 %bf.load.i446, 16711680
  %cmp.i448 = icmp eq i32 %bf.clear.i447, 65536
  br i1 %cmp.i448, label %lor.lhs.false.i455, label %for.cond.i443.backedge

for.cond.i443.backedge:                           ; preds = %for.body.i449, %lor.lhs.false.i455, %if.end.i456
  %tobool.i442 = icmp eq %struct.rtx_def* %59, null
  br i1 %tobool.i442, label %delete_computation.exit458, label %for.body.i449

lor.lhs.false.i455:                               ; preds = %for.body.i449
  %arrayidx5.i450 = getelementptr inbounds %struct.rtx_def* %note.0.i441501, i64 0, i32 1, i64 0
  %rtx6.i451 = bitcast %union.rtunion_def* %arrayidx5.i450 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx6.i451, align 8, !tbaa !5
  %62 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 0
  %bf.load7.i452 = load i32* %62, align 8
  %bf.clear8.i453 = and i32 %bf.load7.i452, 65535
  %cmp9.i454 = icmp eq i32 %bf.clear8.i453, 61
  br i1 %cmp9.i454, label %if.end.i456, label %for.cond.i443.backedge

if.end.i456:                                      ; preds = %lor.lhs.false.i455
  tail call fastcc void @delete_prior_computation(%struct.rtx_def* %note.0.i441501, %struct.rtx_def* %our_prev.0503) #7
  br label %for.cond.i443.backedge

delete_computation.exit458:                       ; preds = %for.cond.i443.backedge, %if.then278
  %call.i457 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %our_prev.0503) #7
  br label %for.end329

if.else279:                                       ; preds = %cond.end270
  %cmp280 = icmp sgt i32 %23, %40
  %cmp283 = icmp slt i32 %add179, %add272
  %or.cond438 = or i1 %cmp280, %cmp283
  br i1 %or.cond438, label %for.end329, label %if.then285

if.then285:                                       ; preds = %if.else279
  %arrayidx288 = getelementptr inbounds %struct.rtx_def* %our_prev.0503, i64 0, i32 1, i64 6
  %rtx289 = bitcast %union.rtunion_def* %arrayidx288 to %struct.rtx_def**
  %63 = load %struct.rtx_def** %rtx289, align 8, !tbaa !5
  %call290 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 10, %struct.rtx_def* %0, %struct.rtx_def* %63) #7
  %64 = getelementptr inbounds %union.rtunion_def* %arrayidx288, i64 0, i32 0
  %call290.c = ptrtoint %struct.rtx_def* %call290 to i64
  store i64 %call290.c, i64* %64, align 8, !tbaa !5
  %cmp295496 = icmp sgt i32 %cond178, 0
  br i1 %cmp295496, label %for.body297, label %for.end304

for.cond294:                                      ; preds = %for.body297
  %cmp295 = icmp slt i32 %inc303, %add179
  br i1 %cmp295, label %for.body297, label %for.end304

for.body297:                                      ; preds = %if.then285, %for.cond294
  %i286.0497 = phi i32 [ %inc303, %for.cond294 ], [ %23, %if.then285 ]
  %call298 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %our_prev.0503, i32 10, i32 %i286.0497) #7
  %tobool299 = icmp eq %struct.rtx_def* %call298, null
  %inc303 = add nsw i32 %i286.0497, 1
  br i1 %tobool299, label %for.end304, label %for.cond294

for.end304:                                       ; preds = %for.cond294, %for.body297, %if.then285
  %i286.0.lcssa = phi i32 [ %23, %if.then285 ], [ %inc303, %for.cond294 ], [ %i286.0497, %for.body297 ]
  %cmp305 = icmp eq i32 %i286.0.lcssa, %add179
  br i1 %cmp305, label %if.then307, label %for.end329

if.then307:                                       ; preds = %for.end304
  %65 = load %struct.rtx_def** %rtx289, align 8, !tbaa !5
  %tobool.i494 = icmp eq %struct.rtx_def* %65, null
  br i1 %tobool.i494, label %delete_computation.exit, label %for.body.i

for.body.i:                                       ; preds = %if.then307, %for.cond.i.backedge
  %note.0.i495 = phi %struct.rtx_def* [ %66, %for.cond.i.backedge ], [ %65, %if.then307 ]
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %note.0.i495, i64 0, i32 1, i64 1
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i to %struct.rtx_def**
  %66 = load %struct.rtx_def** %rtx3.i, align 8, !tbaa !5
  %67 = getelementptr inbounds %struct.rtx_def* %note.0.i495, i64 0, i32 0
  %bf.load.i = load i32* %67, align 8
  %bf.clear.i = and i32 %bf.load.i, 16711680
  %cmp.i = icmp eq i32 %bf.clear.i, 65536
  br i1 %cmp.i, label %lor.lhs.false.i, label %for.cond.i.backedge

for.cond.i.backedge:                              ; preds = %for.body.i, %lor.lhs.false.i, %if.end.i
  %tobool.i = icmp eq %struct.rtx_def* %66, null
  br i1 %tobool.i, label %delete_computation.exit, label %for.body.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %note.0.i495, i64 0, i32 1, i64 0
  %rtx6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !5
  %69 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 0
  %bf.load7.i = load i32* %69, align 8
  %bf.clear8.i = and i32 %bf.load7.i, 65535
  %cmp9.i = icmp eq i32 %bf.clear8.i, 61
  br i1 %cmp9.i, label %if.end.i, label %for.cond.i.backedge

if.end.i:                                         ; preds = %lor.lhs.false.i
  tail call fastcc void @delete_prior_computation(%struct.rtx_def* %note.0.i495, %struct.rtx_def* %our_prev.0503) #7
  br label %for.cond.i.backedge

delete_computation.exit:                          ; preds = %for.cond.i.backedge, %if.then307
  %call.i = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %our_prev.0503) #7
  br label %for.end329

if.end313:                                        ; preds = %if.end39
  %call314 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %0, %struct.rtx_def* %2) #7
  %tobool315 = icmp eq i32 %call314, 0
  br i1 %tobool315, label %for.inc327, label %if.then316

if.then316:                                       ; preds = %if.end313
  %arrayidx318 = getelementptr inbounds %struct.rtx_def* %our_prev.0503, i64 0, i32 1, i64 6
  %rtx319 = bitcast %union.rtunion_def* %arrayidx318 to %struct.rtx_def**
  %70 = load %struct.rtx_def** %rtx319, align 8, !tbaa !5
  %71 = getelementptr inbounds %struct.rtx_def* %note, i64 0, i32 1, i64 1, i32 0
  %.c = ptrtoint %struct.rtx_def* %70 to i64
  store i64 %.c, i64* %71, align 8, !tbaa !5
  %72 = getelementptr inbounds %union.rtunion_def* %arrayidx318, i64 0, i32 0
  %note.c = ptrtoint %struct.rtx_def* %note to i64
  store i64 %note.c, i64* %72, align 8, !tbaa !5
  br label %for.end329

for.inc327:                                       ; preds = %if.end313
  %call328 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %our_prev.0503) #7
  %tobool = icmp eq %struct.rtx_def* %call328, null
  br i1 %tobool, label %for.end329, label %land.rhs

for.end329:                                       ; preds = %land.lhs.true31, %for.inc327, %land.lhs.true, %lor.lhs.false, %lor.lhs.false16, %land.rhs, %if.end, %entry, %if.end50, %land.lhs.true45, %if.else279, %delete_computation.exit478, %for.end, %delete_computation.exit458, %for.end304, %delete_computation.exit, %land.lhs.true84, %if.then316
  ret void
}

declare i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #1

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @max_reg_num() #1

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #1

declare noalias i8* @xcalloc(i64, i64) #1

declare %struct.rtx_def* @gen_reg_rtx(i32) #1

declare %struct.rtx_def* @emit_barrier_before(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_note_before(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @copy_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @replace_regs(%struct.rtx_def*, %struct.rtx_def**, i32, i32) #1

declare %struct.rtx_def* @copy_insn_1(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @predict_insn_def(%struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_label_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @reg_scan_update(%struct.rtx_def*, %struct.rtx_def*, i32) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #6

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !6, i64 16}
!8 = metadata !{metadata !"function", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !2, i64 64, metadata !2, i64 68, metadata !2, i64 72, metadata !2, i64 76, metadata !6, i64 80, metadata !9, i64 88, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !2, i64 152, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !10, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !2, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !2, i64 328, metadata !2, i64 332, metadata !2, i64 336, metadata !6, i64 344, metadata !2, i64 352, metadata !2, i64 356, metadata !6, i64 360, metadata !6, i64 368, metadata !6, i64 376, metadata !2, i64 384, metadata !2, i64 388, metadata !6, i64 392, metadata !2, i64 400, metadata !2, i64 404, metadata !6, i64 408, metadata !6, i64 416, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426}
!9 = metadata !{metadata !"ix86_args", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24}
!10 = metadata !{metadata !"long long", metadata !3, i64 0}
!11 = metadata !{metadata !3, metadata !3, i64 0}
!12 = metadata !{metadata !13, metadata !2, i64 0}
!13 = metadata !{metadata !"reg_info_def", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !2, i64 28, metadata !2, i64 32, metadata !2, i64 36, metadata !3, i64 40}
!14 = metadata !{metadata !13, metadata !2, i64 4}
!15 = metadata !{metadata !16, metadata !2, i64 0}
!16 = metadata !{metadata !"rtvec_def", metadata !2, i64 0, metadata !3, i64 8}
!17 = metadata !{metadata !18, metadata !18, i64 0}
!18 = metadata !{metadata !"short", metadata !3, i64 0}
!19 = metadata !{metadata !10, metadata !10, i64 0}
