; ModuleID = 'profile.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.lang_decl = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct._IO_FILE = type opaque
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct.edge_list = type { i32, i32, %struct.edge_def** }

@flag_test_coverage = external global i32
@cfun = external global %struct.function*
@total_num_times_called = internal unnamed_addr global i32 0, align 4
@n_basic_blocks = external global i32
@basic_block_info = external global %struct.varray_head_tag*
@entry_exit_blocks = external global [2 x %struct.basic_block_def]
@.str = private unnamed_addr constant [10 x i8] c"profile.c\00", align 1
@__FUNCTION__.branch_prob = private unnamed_addr constant [12 x i8] c"branch_prob\00", align 1
@rtl_dump_file = external global %struct._IO_FILE*
@.str1 = private unnamed_addr constant [32 x i8] c"Adding fake exit edge to bb %i\0A\00", align 1
@.str2 = private unnamed_addr constant [33 x i8] c"Adding fake entry edge to bb %i\0A\00", align 1
@branch_prob.ignore_next_note = internal unnamed_addr global i1 false
@bb_file = internal unnamed_addr global %struct._IO_FILE* null, align 8
@last_bb_file_name = internal unnamed_addr global i8* null, align 8
@total_num_blocks = internal unnamed_addr global i32 0, align 4
@.str3 = private unnamed_addr constant [17 x i8] c"%d basic blocks\0A\00", align 1
@total_num_edges = internal unnamed_addr global i32 0, align 4
@.str4 = private unnamed_addr constant [10 x i8] c"%d edges\0A\00", align 1
@total_num_edges_ignored = internal unnamed_addr global i32 0, align 4
@.str5 = private unnamed_addr constant [18 x i8] c"%d ignored edges\0A\00", align 1
@bbg_file = internal unnamed_addr global %struct._IO_FILE* null, align 8
@flag_branch_probabilities = external global i32
@profile_arc_flag = external global i32
@.str7 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str8 = private unnamed_addr constant [14 x i8] c"can't open %s\00", align 1
@.str9 = private unnamed_addr constant [5 x i8] c".bbg\00", align 1
@.str11 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@da_file = internal unnamed_addr global %struct._IO_FILE* null, align 8
@.str12 = private unnamed_addr constant [55 x i8] c"file %s not found, execution counts assumed to be zero\00", align 1
@total_num_edges_instrumented = internal unnamed_addr global i32 0, align 4
@total_num_blocks_created = internal unnamed_addr global i32 0, align 4
@total_num_passes = internal unnamed_addr global i32 0, align 4
@total_num_branches = internal unnamed_addr global i32 0, align 4
@total_hist_br_prob = internal unnamed_addr global [20 x i32] zeroinitializer, align 16
@.str13 = private unnamed_addr constant [38 x i8] c".da file contents exhausted too early\00", align 1
@.str14 = private unnamed_addr constant [32 x i8] c".da file contents not exhausted\00", align 1
@.str16 = private unnamed_addr constant [28 x i8] c"Total number of blocks: %d\0A\00", align 1
@.str17 = private unnamed_addr constant [27 x i8] c"Total number of edges: %d\0A\00", align 1
@.str18 = private unnamed_addr constant [35 x i8] c"Total number of ignored edges: %d\0A\00", align 1
@.str19 = private unnamed_addr constant [40 x i8] c"Total number of instrumented edges: %d\0A\00", align 1
@.str20 = private unnamed_addr constant [36 x i8] c"Total number of blocks created: %d\0A\00", align 1
@.str21 = private unnamed_addr constant [43 x i8] c"Total number of graph solution passes: %d\0A\00", align 1
@.str22 = private unnamed_addr constant [45 x i8] c"Average number of graph solution passes: %d\0A\00", align 1
@.str23 = private unnamed_addr constant [30 x i8] c"Total number of branches: %d\0A\00", align 1
@.str24 = private unnamed_addr constant [45 x i8] c"Total number of branches never executed: %d\0A\00", align 1
@.str25 = private unnamed_addr constant [32 x i8] c"%d%% branches in range %d-%d%%\0A\00", align 1
@flag_inline_functions = external global i32
@need_func_profiler = internal unnamed_addr global i1 false
@.str26 = private unnamed_addr constant [5 x i8] c"GCOV\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@targetm = external global %struct.gcc_target
@current_function_decl = external global %union.tree_node*
@input_filename = external global i8*
@lineno = external global i32
@.str27 = private unnamed_addr constant [7 x i8] c"*.%s%u\00", align 1
@.str28 = private unnamed_addr constant [5 x i8] c"LPBX\00", align 1
@target_flags = external global i32
@.str29 = private unnamed_addr constant [15 x i8] c"__bb_init_func\00", align 1
@quiet_flag = external global i32
@asm_out_file = external global %struct._IO_FILE*
@count_instrumented_edges = common global i32 0, align 4
@profiler_label = internal global %struct.rtx_def* null, align 8
@__FUNCTION__.union_groups = private unnamed_addr constant [13 x i8] c"union_groups\00", align 1
@__FUNCTION__.instrument_edges = private unnamed_addr constant [17 x i8] c"instrument_edges\00", align 1
@.str30 = private unnamed_addr constant [30 x i8] c"Edge %d to %d instrumented%s\0A\00", align 1
@.str31 = private unnamed_addr constant [13 x i8] c" (and split)\00", align 1
@.str32 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str33 = private unnamed_addr constant [23 x i8] c"%d edges instrumented\0A\00", align 1
@const_int_rtx = external global [129 x %struct.rtx_def*]
@.str34 = private unnamed_addr constant [33 x i8] c"\0ARead edge from %i to %i, count:\00", align 1
@.str35 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str36 = private unnamed_addr constant [22 x i8] c"\0A%d edge counts read\0A\00", align 1
@__FUNCTION__.compute_branch_probabilities = private unnamed_addr constant [29 x i8] c"compute_branch_probabilities\00", align 1
@.str37 = private unnamed_addr constant [32 x i8] c"Graph solving took %d passes.\0A\0A\00", align 1
@.str38 = private unnamed_addr constant [56 x i8] c"corrupted profile info: prob for %d-%d thought to be %d\00", align 1
@.str39 = private unnamed_addr constant [13 x i8] c"%d branches\0A\00", align 1
@.str40 = private unnamed_addr constant [28 x i8] c"%d branches never executed\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @branch_prob() #0 {
entry:
  %hist_br_prob.i = alloca [20 x i32], align 16
  %c.i = alloca [10 x i8], align 4
  %0 = load i32* @flag_test_coverage, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.function* %1, i64 0, i32 5
  %2 = load i8** %name, align 8, !tbaa !7
  call fastcc void @output_gcov_string(i8* %2, i64 -2)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %3 = load i32* @total_num_times_called, align 4, !tbaa !1
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* @total_num_times_called, align 4, !tbaa !1
  %call = call i32 @flow_call_edges_add(%struct.simple_bitmap_def* null) #5
  call void @add_noreturn_fake_exit_edges() #5
  %4 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp742 = icmp sgt i32 %4, 0
  br i1 %cmp742, label %for.body, label %for.end88

for.body:                                         ; preds = %if.end, %for.inc86
  %indvars.iv777 = phi i64 [ %indvars.iv.next778, %for.inc86 ], [ 0, %if.end ]
  %5 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 4
  %bb1 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb1, i64 0, i64 %indvars.iv777
  %6 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.basic_block_def* %6, i64 0, i32 0
  %insn.0723 = load %struct.rtx_def** %head, align 8
  %end = getelementptr inbounds %struct.basic_block_def* %6, i64 0, i32 1
  %7 = load %struct.rtx_def** %end, align 8, !tbaa !11
  %arrayidx3724 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 2
  %rtx725 = bitcast %union.rtunion_def* %arrayidx3724 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx725, align 8, !tbaa !5
  %cmp4726 = icmp eq %struct.rtx_def* %insn.0723, %8
  br i1 %cmp4726, label %for.end, label %for.body5.lr.ph

for.body5.lr.ph:                                  ; preds = %for.body
  %9 = trunc i64 %indvars.iv777 to i32
  %tobool25 = icmp eq i32 %9, 0
  br i1 %tobool25, label %for.body5.us, label %for.body5

for.body5.us:                                     ; preds = %for.body5.lr.ph, %for.inc.us
  %insn.0727.us = phi %struct.rtx_def* [ %insn.0.us, %for.inc.us ], [ %insn.0723, %for.body5.lr.ph ]
  %10 = getelementptr inbounds %struct.rtx_def* %insn.0727.us, i64 0, i32 0
  %bf.load.us = load i32* %10, align 8
  %bf.clear.us = and i32 %bf.load.us, 65535
  %cmp6.us = icmp eq i32 %bf.clear.us, 34
  br i1 %cmp6.us, label %land.lhs.true.us, label %for.inc.us

land.lhs.true.us:                                 ; preds = %for.body5.us
  %call7.us = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0727.us, i32 28, %struct.rtx_def* null) #5
  %tobool8.us = icmp eq %struct.rtx_def* %call7.us, null
  br i1 %tobool8.us, label %for.inc.us, label %if.then9.us

if.then9.us:                                      ; preds = %land.lhs.true.us
  %11 = load %struct.rtx_def** %head, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load11.us = load i32* %12, align 8
  %bf.clear12.us = and i32 %bf.load11.us, 65535
  %cmp13.us = icmp eq i32 %bf.clear12.us, 36
  br i1 %cmp13.us, label %if.then19, label %lor.lhs.false.us

lor.lhs.false.us:                                 ; preds = %if.then9.us
  %arrayidx16.us = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 2
  %rtx17.us = bitcast %union.rtunion_def* %arrayidx16.us to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx17.us, align 8, !tbaa !5
  %cmp18.us = icmp eq %struct.rtx_def* %insn.0727.us, %13
  br i1 %cmp18.us, label %if.then26, label %if.then19

for.inc.us:                                       ; preds = %land.lhs.true.us, %for.body5.us
  %arrayidx32.us = getelementptr inbounds %struct.rtx_def* %insn.0727.us, i64 0, i32 1, i64 2
  %rtx33.us = bitcast %union.rtunion_def* %arrayidx32.us to %struct.rtx_def**
  %insn.0.us = load %struct.rtx_def** %rtx33.us, align 8
  %14 = load %struct.rtx_def** %end, align 8, !tbaa !11
  %arrayidx3.us = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 2
  %rtx.us = bitcast %union.rtunion_def* %arrayidx3.us to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx.us, align 8, !tbaa !5
  %cmp4.us = icmp eq %struct.rtx_def* %insn.0.us, %15
  br i1 %cmp4.us, label %for.end, label %for.body5.us

for.body5:                                        ; preds = %for.body5.lr.ph, %for.inc
  %insn.0727 = phi %struct.rtx_def* [ %insn.0, %for.inc ], [ %insn.0723, %for.body5.lr.ph ]
  %16 = getelementptr inbounds %struct.rtx_def* %insn.0727, i64 0, i32 0
  %bf.load = load i32* %16, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp6 = icmp eq i32 %bf.clear, 34
  br i1 %cmp6, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body5
  %call7 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0727, i32 28, %struct.rtx_def* null) #5
  %tobool8 = icmp eq %struct.rtx_def* %call7, null
  br i1 %tobool8, label %for.inc, label %if.then9

if.then9:                                         ; preds = %land.lhs.true
  %17 = load %struct.rtx_def** %head, align 8, !tbaa !13
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load11 = load i32* %18, align 8
  %bf.clear12 = and i32 %bf.load11, 65535
  %cmp13 = icmp eq i32 %bf.clear12, 36
  br i1 %cmp13, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then9
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 2
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx17, align 8, !tbaa !5
  %cmp18 = icmp eq %struct.rtx_def* %insn.0727, %19
  br i1 %cmp18, label %if.end27, label %if.then19

if.then19:                                        ; preds = %lor.lhs.false, %if.then9, %if.then9.us, %lor.lhs.false.us
  %insn.0.lcssa692 = phi %struct.rtx_def* [ %insn.0727.us, %lor.lhs.false.us ], [ %insn.0727.us, %if.then9.us ], [ %insn.0727, %if.then9 ], [ %insn.0727, %lor.lhs.false ]
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %insn.0.lcssa692, i64 0, i32 1, i64 1
  %rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx22, align 8, !tbaa !5
  %call23 = call %struct.edge_def* @split_block(%struct.basic_block_def* %6, %struct.rtx_def* %20) #5
  %dest = getelementptr inbounds %struct.edge_def* %call23, i64 0, i32 3
  %21 = load %struct.basic_block_def** %dest, align 8, !tbaa !14
  %call24 = call %struct.edge_def* @make_edge(%struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %struct.basic_block_def* %21, i32 16) #5
  br label %for.end

if.then26:                                        ; preds = %lor.lhs.false.us
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 592, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.branch_prob, i64 0, i64 0)) #6
  unreachable

if.end27:                                         ; preds = %lor.lhs.false
  %call28 = call %struct.edge_def* @make_edge(%struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %struct.basic_block_def* %6, i32 16) #5
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body5, %if.end27
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %insn.0727, i64 0, i32 1, i64 2
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx33, align 8
  %22 = load %struct.rtx_def** %end, align 8, !tbaa !11
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp4 = icmp eq %struct.rtx_def* %insn.0, %23
  br i1 %cmp4, label %for.end, label %for.body5

for.end:                                          ; preds = %for.inc, %for.inc.us, %for.body, %if.then19
  %succ = getelementptr inbounds %struct.basic_block_def* %6, i64 0, i32 5
  %e.0728 = load %struct.edge_def** %succ, align 8
  %tobool35729 = icmp eq %struct.edge_def* %e.0728, null
  br i1 %tobool35729, label %for.end48, label %for.body36

for.body36:                                       ; preds = %for.end, %if.end42
  %e.0732 = phi %struct.edge_def* [ %e.0, %if.end42 ], [ %e.0728, %for.end ]
  %need_exit_edge.0731 = phi i32 [ %need_exit_edge.1, %if.end42 ], [ 0, %for.end ]
  %have_exit_edge.0730 = phi i32 [ %.have_exit_edge.0, %if.end42 ], [ 0, %for.end ]
  %flags = getelementptr inbounds %struct.edge_def* %e.0732, i64 0, i32 6
  %24 = load i32* %flags, align 4, !tbaa !16
  %and = and i32 %24, 6
  %tobool37 = icmp eq i32 %and, 0
  %dest43.phi.trans.insert = getelementptr inbounds %struct.edge_def* %e.0732, i64 0, i32 3
  %.pre785 = load %struct.basic_block_def** %dest43.phi.trans.insert, align 8, !tbaa !14
  br i1 %tobool37, label %if.end42, label %land.lhs.true38

land.lhs.true38:                                  ; preds = %for.body36
  %cmp40 = icmp eq %struct.basic_block_def* %.pre785, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  %need_exit_edge.0. = select i1 %cmp40, i32 %need_exit_edge.0731, i32 1
  br label %if.end42

if.end42:                                         ; preds = %for.body36, %land.lhs.true38
  %need_exit_edge.1 = phi i32 [ %need_exit_edge.0., %land.lhs.true38 ], [ %need_exit_edge.0731, %for.body36 ]
  %cmp44 = icmp eq %struct.basic_block_def* %.pre785, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  %.have_exit_edge.0 = select i1 %cmp44, i32 1, i32 %have_exit_edge.0730
  %succ_next = getelementptr inbounds %struct.edge_def* %e.0732, i64 0, i32 1
  %e.0 = load %struct.edge_def** %succ_next, align 8
  %tobool35 = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool35, label %for.end48, label %for.body36

for.end48:                                        ; preds = %if.end42, %for.end
  %need_exit_edge.0.lcssa = phi i32 [ 0, %for.end ], [ %need_exit_edge.1, %if.end42 ]
  %have_exit_edge.0.lcssa = phi i32 [ 0, %for.end ], [ %.have_exit_edge.0, %if.end42 ]
  %pred = getelementptr inbounds %struct.basic_block_def* %6, i64 0, i32 4
  %e.1735 = load %struct.edge_def** %pred, align 8
  %tobool50736 = icmp eq %struct.edge_def* %e.1735, null
  br i1 %tobool50736, label %for.end64, label %for.body51

for.body51:                                       ; preds = %for.end48, %if.end58
  %e.1739 = phi %struct.edge_def* [ %e.1, %if.end58 ], [ %e.1735, %for.end48 ]
  %need_entry_edge.0738 = phi i32 [ %need_entry_edge.1, %if.end58 ], [ 0, %for.end48 ]
  %have_entry_edge.0737 = phi i32 [ %.have_entry_edge.0, %if.end58 ], [ 0, %for.end48 ]
  %flags52 = getelementptr inbounds %struct.edge_def* %e.1739, i64 0, i32 6
  %25 = load i32* %flags52, align 4, !tbaa !16
  %and53 = and i32 %25, 6
  %tobool54 = icmp eq i32 %and53, 0
  %src59.phi.trans.insert = getelementptr inbounds %struct.edge_def* %e.1739, i64 0, i32 2
  %.pre784 = load %struct.basic_block_def** %src59.phi.trans.insert, align 8, !tbaa !17
  br i1 %tobool54, label %if.end58, label %land.lhs.true55

land.lhs.true55:                                  ; preds = %for.body51
  %cmp56 = icmp eq %struct.basic_block_def* %.pre784, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  %need_entry_edge.0. = select i1 %cmp56, i32 %need_entry_edge.0738, i32 1
  br label %if.end58

if.end58:                                         ; preds = %for.body51, %land.lhs.true55
  %need_entry_edge.1 = phi i32 [ %need_entry_edge.0., %land.lhs.true55 ], [ %need_entry_edge.0738, %for.body51 ]
  %cmp60 = icmp eq %struct.basic_block_def* %.pre784, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  %.have_entry_edge.0 = select i1 %cmp60, i32 1, i32 %have_entry_edge.0737
  %pred_next = getelementptr inbounds %struct.edge_def* %e.1739, i64 0, i32 0
  %e.1 = load %struct.edge_def** %pred_next, align 8
  %tobool50 = icmp eq %struct.edge_def* %e.1, null
  br i1 %tobool50, label %for.end64, label %for.body51

for.end64:                                        ; preds = %if.end58, %for.end48
  %need_entry_edge.0.lcssa = phi i32 [ 0, %for.end48 ], [ %need_entry_edge.1, %if.end58 ]
  %have_entry_edge.0.lcssa = phi i32 [ 0, %for.end48 ], [ %.have_entry_edge.0, %if.end58 ]
  %tobool65 = icmp eq i32 %need_exit_edge.0.lcssa, 0
  %tobool67 = icmp ne i32 %have_exit_edge.0.lcssa, 0
  %or.cond = or i1 %tobool65, %tobool67
  br i1 %or.cond, label %if.end74, label %if.then68

if.then68:                                        ; preds = %for.end64
  %26 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool69 = icmp eq %struct._IO_FILE* %26, null
  br i1 %tobool69, label %if.end72, label %if.then70

if.then70:                                        ; preds = %if.then68
  %index = getelementptr inbounds %struct.basic_block_def* %6, i64 0, i32 11
  %27 = load i32* %index, align 4, !tbaa !18
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([32 x i8]* @.str1, i64 0, i64 0), i32 %27) #5
  br label %if.end72

if.end72:                                         ; preds = %if.then68, %if.then70
  %call73 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %6, %struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), i32 16) #5
  br label %if.end74

if.end74:                                         ; preds = %for.end64, %if.end72
  %tobool75 = icmp eq i32 %need_entry_edge.0.lcssa, 0
  %tobool77 = icmp ne i32 %have_entry_edge.0.lcssa, 0
  %or.cond362 = or i1 %tobool75, %tobool77
  br i1 %or.cond362, label %for.inc86, label %if.then78

if.then78:                                        ; preds = %if.end74
  %28 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool79 = icmp eq %struct._IO_FILE* %28, null
  br i1 %tobool79, label %if.end83, label %if.then80

if.then80:                                        ; preds = %if.then78
  %index81 = getelementptr inbounds %struct.basic_block_def* %6, i64 0, i32 11
  %29 = load i32* %index81, align 4, !tbaa !18
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([33 x i8]* @.str2, i64 0, i64 0), i32 %29) #5
  br label %if.end83

if.end83:                                         ; preds = %if.then78, %if.then80
  %call84 = call %struct.edge_def* @make_edge(%struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %struct.basic_block_def* %6, i32 16) #5
  br label %for.inc86

for.inc86:                                        ; preds = %if.end83, %if.end74
  %indvars.iv.next778 = add nuw nsw i64 %indvars.iv777, 1
  %30 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %31 = trunc i64 %indvars.iv.next778 to i32
  %cmp = icmp slt i32 %31, %30
  br i1 %cmp, label %for.body, label %for.end88

for.end88:                                        ; preds = %for.inc86, %if.end
  %call89 = call %struct.edge_list* @create_edge_list() #5
  %num_edges90 = getelementptr inbounds %struct.edge_list* %call89, i64 0, i32 1
  %32 = load i32* %num_edges90, align 4, !tbaa !19
  call void @alloc_aux_for_edges(i32 4) #5
  %cmp92719 = icmp sgt i32 %32, 0
  br i1 %cmp92719, label %for.body93.lr.ph, label %for.end113

for.body93.lr.ph:                                 ; preds = %for.end88
  %index_to_edge = getelementptr inbounds %struct.edge_list* %call89, i64 0, i32 2
  br label %for.body93

for.body93:                                       ; preds = %for.inc111, %for.body93.lr.ph
  %indvars.iv773 = phi i64 [ 0, %for.body93.lr.ph ], [ %indvars.iv.next774, %for.inc111 ]
  %ignored_edges.0720 = phi i32 [ 0, %for.body93.lr.ph ], [ %ignored_edges.1, %for.inc111 ]
  %33 = load %struct.edge_def*** %index_to_edge, align 8, !tbaa !21
  %arrayidx96 = getelementptr inbounds %struct.edge_def** %33, i64 %indvars.iv773
  %34 = load %struct.edge_def** %arrayidx96, align 8, !tbaa !5
  %count = getelementptr inbounds %struct.edge_def* %34, i64 0, i32 8
  store i64 0, i64* %count, align 8, !tbaa !22
  %flags97 = getelementptr inbounds %struct.edge_def* %34, i64 0, i32 6
  %35 = load i32* %flags97, align 4, !tbaa !16
  %and98 = and i32 %35, 6
  %tobool99 = icmp eq i32 %and98, 0
  br i1 %tobool99, label %for.inc111, label %land.lhs.true100

land.lhs.true100:                                 ; preds = %for.body93
  %src101 = getelementptr inbounds %struct.edge_def* %34, i64 0, i32 2
  %36 = load %struct.basic_block_def** %src101, align 8, !tbaa !17
  %cmp102 = icmp eq %struct.basic_block_def* %36, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp102, label %for.inc111, label %land.lhs.true103

land.lhs.true103:                                 ; preds = %land.lhs.true100
  %dest104 = getelementptr inbounds %struct.edge_def* %34, i64 0, i32 3
  %37 = load %struct.basic_block_def** %dest104, align 8, !tbaa !14
  %cmp105 = icmp eq %struct.basic_block_def* %37, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp105, label %for.inc111, label %if.then106

if.then106:                                       ; preds = %land.lhs.true103
  %aux = getelementptr inbounds %struct.edge_def* %34, i64 0, i32 5
  %38 = load i8** %aux, align 8, !tbaa !23
  %bf.load107 = load i8* %38, align 4
  %bf.set = or i8 %bf.load107, 4
  store i8 %bf.set, i8* %38, align 4
  %inc109 = add nsw i32 %ignored_edges.0720, 1
  br label %for.inc111

for.inc111:                                       ; preds = %land.lhs.true103, %land.lhs.true100, %for.body93, %if.then106
  %ignored_edges.1 = phi i32 [ %inc109, %if.then106 ], [ %ignored_edges.0720, %land.lhs.true103 ], [ %ignored_edges.0720, %land.lhs.true100 ], [ %ignored_edges.0720, %for.body93 ]
  %indvars.iv.next774 = add nuw nsw i64 %indvars.iv773, 1
  %lftr.wideiv775 = trunc i64 %indvars.iv.next774 to i32
  %exitcond776 = icmp eq i32 %lftr.wideiv775, %32
  br i1 %exitcond776, label %for.end113, label %for.body93

for.end113:                                       ; preds = %for.inc111, %for.end88
  %ignored_edges.0.lcssa = phi i32 [ 0, %for.end88 ], [ %ignored_edges.1, %for.inc111 ]
  %39 = load i32* @flag_test_coverage, align 4, !tbaa !1
  %tobool114 = icmp eq i32 %39, 0
  br i1 %tobool114, label %if.end189, label %for.cond117.preheader

for.cond117.preheader:                            ; preds = %for.end113
  %40 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp118717 = icmp sgt i32 %40, 0
  %41 = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 0
  %arrayidx.1.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 1
  %arrayidx.2.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 2
  %arrayidx.3.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 3
  br i1 %cmp118717, label %for.body119, label %for.end187

for.body119:                                      ; preds = %for.cond117.preheader, %for.inc185
  %indvars.iv771 = phi i64 [ %indvars.iv.next772, %for.inc185 ], [ 0, %for.cond117.preheader ]
  %42 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data122 = getelementptr inbounds %struct.varray_head_tag* %42, i64 0, i32 4
  %bb123 = bitcast %union.varray_data_tag* %data122 to [1 x %struct.basic_block_def*]*
  %arrayidx124 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb123, i64 0, i64 %indvars.iv771
  %43 = load %struct.basic_block_def** %arrayidx124, align 8, !tbaa !5
  %head126 = getelementptr inbounds %struct.basic_block_def* %43, i64 0, i32 0
  %44 = load %struct.rtx_def** %head126, align 8, !tbaa !13
  %call127 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %44) #5
  %tobool128 = icmp eq %struct.rtx_def* %call127, null
  br i1 %tobool128, label %if.then129, label %if.else131

if.then129:                                       ; preds = %for.body119
  %call130 = call %struct.rtx_def* @get_insns() #5
  br label %if.end135

if.else131:                                       ; preds = %for.body119
  %arrayidx133 = getelementptr inbounds %struct.rtx_def* %call127, i64 0, i32 1, i64 2
  %rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx134, align 8, !tbaa !5
  br label %if.end135

if.end135:                                        ; preds = %if.else131, %if.then129
  %insn125.0 = phi %struct.rtx_def* [ %45, %if.else131 ], [ %call130, %if.then129 ]
  %46 = load %struct._IO_FILE** @bb_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %41) #5
  %47 = bitcast [10 x i8]* %c.i to i32*
  store i32 0, i32* %47, align 4
  %call2.i = call i64 @fwrite(i8* %41, i64 1, i64 4, %struct._IO_FILE* %46) #5
  call void @llvm.lifetime.end(i64 10, i8* %41) #5
  %end137 = getelementptr inbounds %struct.basic_block_def* %43, i64 0, i32 1
  %48 = load %struct.rtx_def** %end137, align 8, !tbaa !11
  %cmp138713 = icmp eq %struct.rtx_def* %insn125.0, %48
  br i1 %cmp138713, label %for.inc185, label %while.body

while.body:                                       ; preds = %if.end135, %if.end181
  %insn125.1714 = phi %struct.rtx_def* [ %57, %if.end181 ], [ %insn125.0, %if.end135 ]
  %49 = getelementptr inbounds %struct.rtx_def* %insn125.1714, i64 0, i32 0
  %bf.load139 = load i32* %49, align 8
  %bf.clear140 = and i32 %bf.load139, 65535
  %cmp141 = icmp eq i32 %bf.clear140, 37
  br i1 %cmp141, label %if.then142, label %if.end181

if.then142:                                       ; preds = %while.body
  %arrayidx144 = getelementptr inbounds %struct.rtx_def* %insn125.1714, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx144 to i32*
  %50 = load i32* %rtint, align 4, !tbaa !1
  %cmp145 = icmp eq i32 %50, -84
  br i1 %cmp145, label %if.then146, label %if.else147

if.then146:                                       ; preds = %if.then142
  store i1 true, i1* @branch_prob.ignore_next_note, align 1
  br label %if.end181

if.else147:                                       ; preds = %if.then142
  %cmp151 = icmp sgt i32 %50, 0
  br i1 %cmp151, label %if.then152, label %if.end181

if.then152:                                       ; preds = %if.else147
  %.b = load i1* @branch_prob.ignore_next_note, align 1
  br i1 %.b, label %if.then154, label %if.else155

if.then154:                                       ; preds = %if.then152
  store i1 false, i1* @branch_prob.ignore_next_note, align 1
  br label %if.end181

if.else155:                                       ; preds = %if.then152
  %51 = load i8** @last_bb_file_name, align 8, !tbaa !5
  %tobool156 = icmp eq i8* %51, null
  %arrayidx167.pre = getelementptr inbounds %struct.rtx_def* %insn125.1714, i64 0, i32 1, i64 3
  %rtstr168.pre = bitcast %union.rtunion_def* %arrayidx167.pre to i8**
  br i1 %tobool156, label %if.end165, label %lor.lhs.false157

lor.lhs.false157:                                 ; preds = %if.else155
  %52 = load i8** %rtstr168.pre, align 8, !tbaa !5
  %call160 = call i32 @strcmp(i8* %52, i8* %51) #5
  %tobool161 = icmp eq i32 %call160, 0
  br i1 %tobool161, label %if.end173, label %if.then164

if.then164:                                       ; preds = %lor.lhs.false157
  call void @free(i8* %51)
  br label %if.end165

if.end165:                                        ; preds = %if.else155, %if.then164
  %53 = load i8** %rtstr168.pre, align 8, !tbaa !5
  %call169 = call noalias i8* @xstrdup(i8* %53) #5
  store i8* %call169, i8** @last_bb_file_name, align 8, !tbaa !5
  %54 = load i8** %rtstr168.pre, align 8, !tbaa !5
  call fastcc void @output_gcov_string(i8* %54, i64 -1)
  %.pre783 = load i32* %rtint, align 4, !tbaa !1
  br label %if.end173

if.end173:                                        ; preds = %lor.lhs.false157, %if.end165
  %55 = phi i32 [ %50, %lor.lhs.false157 ], [ %.pre783, %if.end165 ]
  %conv = sext i32 %55 to i64
  %56 = load %struct._IO_FILE** @bb_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %41) #5
  %cmp.i.i = icmp slt i32 %55, 0
  %sub.i.i = sub nsw i64 0, %conv
  %sub.value.i.i = select i1 %cmp.i.i, i64 %sub.i.i, i64 %conv
  %conv12.i.i = trunc i64 %sub.value.i.i to i8
  store i8 %conv12.i.i, i8* %41, align 4, !tbaa !24
  %div.i.i = sdiv i64 %sub.value.i.i, 256
  %conv12.1.i.i = trunc i64 %div.i.i to i8
  store i8 %conv12.1.i.i, i8* %arrayidx.1.i.i, align 1, !tbaa !24
  %div.1.i.i = sdiv i64 %sub.value.i.i, 65536
  %conv12.2.i.i = trunc i64 %div.1.i.i to i8
  store i8 %conv12.2.i.i, i8* %arrayidx.2.i.i, align 2, !tbaa !24
  %div.2.i.i = sdiv i64 %sub.value.i.i, 16777216
  %div.2.tr.i.i = trunc i64 %div.2.i.i to i8
  %conv12.3.i.i = and i8 %div.2.tr.i.i, 127
  %div.3.i.i = sdiv i64 %sub.value.i.i, 4294967296
  %value.addr.1.off.i.i = add i64 %div.3.i.i, 1
  %value.addr.1.cmp.i.i = icmp ugt i64 %value.addr.1.off.i.i, 1
  br i1 %value.addr.1.cmp.i.i, label %__store_gcov_type.exit.thread2.i, label %if.else.i

__store_gcov_type.exit.thread2.i:                 ; preds = %if.end173
  store i8 %conv12.3.i.i, i8* %arrayidx.3.i.i, align 1, !tbaa !24
  br label %if.end181

if.else.i:                                        ; preds = %if.end173
  %cond.i.i = select i1 %cmp.i.i, i8 -128, i8 0
  %or.i.i = or i8 %conv12.3.i.i, %cond.i.i
  store i8 %or.i.i, i8* %arrayidx.3.i.i, align 1, !tbaa !24
  %call2.i459 = call i64 @fwrite(i8* %41, i64 1, i64 4, %struct._IO_FILE* %56) #5
  br label %if.end181

if.end181:                                        ; preds = %if.else.i, %__store_gcov_type.exit.thread2.i, %if.then146, %if.then154, %if.else147, %while.body
  %arrayidx183 = getelementptr inbounds %struct.rtx_def* %insn125.1714, i64 0, i32 1, i64 2
  %rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx184, align 8, !tbaa !5
  %58 = load %struct.rtx_def** %end137, align 8, !tbaa !11
  %cmp138 = icmp eq %struct.rtx_def* %57, %58
  br i1 %cmp138, label %for.inc185, label %while.body

for.inc185:                                       ; preds = %if.end181, %if.end135
  %indvars.iv.next772 = add nuw nsw i64 %indvars.iv771, 1
  %59 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %60 = trunc i64 %indvars.iv.next772 to i32
  %cmp118 = icmp slt i32 %60, %59
  br i1 %cmp118, label %for.body119, label %for.end187

for.end187:                                       ; preds = %for.inc185, %for.cond117.preheader
  %61 = load %struct._IO_FILE** @bb_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %41) #5
  store i8 0, i8* %41, align 4, !tbaa !24
  store i8 0, i8* %arrayidx.1.i.i, align 1, !tbaa !24
  store i8 0, i8* %arrayidx.2.i.i, align 2, !tbaa !24
  store i8 0, i8* %arrayidx.3.i.i, align 1, !tbaa !24
  %call2.i465 = call i64 @fwrite(i8* %41, i64 1, i64 4, %struct._IO_FILE* %61) #5
  call void @llvm.lifetime.end(i64 10, i8* %41) #5
  br label %if.end189

if.end189:                                        ; preds = %for.end113, %for.end187
  %62 = load i32* %num_edges90, align 4, !tbaa !19
  store i8* bitcast (%struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1) to i8*), i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !25
  store i8* bitcast ([2 x %struct.basic_block_def]* @entry_exit_blocks to i8*), i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 10), align 8, !tbaa !25
  %63 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp295.i = icmp sgt i32 %63, 0
  br i1 %cmp295.i, label %for.body.i, label %while.cond.i.i.i

for.body.i:                                       ; preds = %if.end189, %for.body.i
  %indvars.iv303.i = phi i64 [ %indvars.iv.next304.i, %for.body.i ], [ 0, %if.end189 ]
  %64 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data.i = getelementptr inbounds %struct.varray_head_tag* %64, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %indvars.iv303.i
  %65 = load %struct.basic_block_def** %arrayidx.i, align 8, !tbaa !5
  %66 = bitcast %struct.basic_block_def* %65 to i8*
  %aux.i = getelementptr inbounds %struct.basic_block_def* %65, i64 0, i32 10
  store i8* %66, i8** %aux.i, align 8, !tbaa !25
  %indvars.iv.next304.i = add nuw nsw i64 %indvars.iv303.i, 1
  %lftr.wideiv769 = trunc i64 %indvars.iv.next304.i to i32
  %exitcond770 = icmp eq i32 %lftr.wideiv769, %63
  br i1 %exitcond770, label %while.cond.i.i.i, label %for.body.i

while.cond.i.i.i:                                 ; preds = %if.end189, %for.body.i, %while.cond.i.i.i
  %group.0.i.i.i = phi %struct.basic_block_def* [ %68, %while.cond.i.i.i ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %for.body.i ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %if.end189 ]
  %aux.i.i.i = getelementptr inbounds %struct.basic_block_def* %group.0.i.i.i, i64 0, i32 10
  %67 = load i8** %aux.i.i.i, align 8, !tbaa !25
  %68 = bitcast i8* %67 to %struct.basic_block_def*
  %cmp.i.i.i = icmp eq %struct.basic_block_def* %68, %group.0.i.i.i
  br i1 %cmp.i.i.i, label %while.cond2.preheader.i.i.i, label %while.cond.i.i.i

while.cond2.preheader.i.i.i:                      ; preds = %while.cond.i.i.i
  %69 = load i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !25
  %70 = bitcast i8* %69 to %struct.basic_block_def*
  %cmp418.i.i.i = icmp eq %struct.basic_block_def* %70, %group.0.i.i.i
  br i1 %cmp418.i.i.i, label %while.cond.i7.i.i, label %while.body5.lr.ph.i.i.i

while.body5.lr.ph.i.i.i:                          ; preds = %while.cond2.preheader.i.i.i
  %71 = bitcast %struct.basic_block_def* %group.0.i.i.i to i8*
  br label %while.body5.i.i.i

while.body5.i.i.i:                                ; preds = %while.body5.i.i.i, %while.body5.lr.ph.i.i.i
  %72 = phi %struct.basic_block_def* [ %70, %while.body5.lr.ph.i.i.i ], [ %74, %while.body5.i.i.i ]
  %aux319.i.i.i = phi i8** [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), %while.body5.lr.ph.i.i.i ], [ %aux3.i.i.i, %while.body5.i.i.i ]
  store i8* %71, i8** %aux319.i.i.i, align 8, !tbaa !25
  %aux3.i.i.i = getelementptr inbounds %struct.basic_block_def* %72, i64 0, i32 10
  %73 = load i8** %aux3.i.i.i, align 8, !tbaa !25
  %74 = bitcast i8* %73 to %struct.basic_block_def*
  %cmp4.i.i.i = icmp eq %struct.basic_block_def* %74, %group.0.i.i.i
  br i1 %cmp4.i.i.i, label %while.cond.i7.i.i, label %while.body5.i.i.i

while.cond.i7.i.i:                                ; preds = %while.cond2.preheader.i.i.i, %while.body5.i.i.i, %while.cond.i7.i.i
  %group.0.i4.i.i = phi %struct.basic_block_def* [ %76, %while.cond.i7.i.i ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %while.body5.i.i.i ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %while.cond2.preheader.i.i.i ]
  %aux.i5.i.i = getelementptr inbounds %struct.basic_block_def* %group.0.i4.i.i, i64 0, i32 10
  %75 = load i8** %aux.i5.i.i, align 8, !tbaa !25
  %76 = bitcast i8* %75 to %struct.basic_block_def*
  %cmp.i6.i.i = icmp eq %struct.basic_block_def* %76, %group.0.i4.i.i
  br i1 %cmp.i6.i.i, label %while.cond2.preheader.i10.i.i, label %while.cond.i7.i.i

while.cond2.preheader.i10.i.i:                    ; preds = %while.cond.i7.i.i
  %77 = load i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 10), align 8, !tbaa !25
  %78 = bitcast i8* %77 to %struct.basic_block_def*
  %cmp418.i9.i.i = icmp eq %struct.basic_block_def* %78, %group.0.i4.i.i
  br i1 %cmp418.i9.i.i, label %find_group.exit16.i.i, label %while.body5.lr.ph.i11.i.i

while.body5.lr.ph.i11.i.i:                        ; preds = %while.cond2.preheader.i10.i.i
  %79 = bitcast %struct.basic_block_def* %group.0.i4.i.i to i8*
  br label %while.body5.i15.i.i

while.body5.i15.i.i:                              ; preds = %while.body5.i15.i.i, %while.body5.lr.ph.i11.i.i
  %80 = phi %struct.basic_block_def* [ %78, %while.body5.lr.ph.i11.i.i ], [ %82, %while.body5.i15.i.i ]
  %aux319.i12.i.i = phi i8** [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 10), %while.body5.lr.ph.i11.i.i ], [ %aux3.i13.i.i, %while.body5.i15.i.i ]
  store i8* %79, i8** %aux319.i12.i.i, align 8, !tbaa !25
  %aux3.i13.i.i = getelementptr inbounds %struct.basic_block_def* %80, i64 0, i32 10
  %81 = load i8** %aux3.i13.i.i, align 8, !tbaa !25
  %82 = bitcast i8* %81 to %struct.basic_block_def*
  %cmp4.i14.i.i = icmp eq %struct.basic_block_def* %82, %group.0.i4.i.i
  br i1 %cmp4.i14.i.i, label %find_group.exit16.i.i, label %while.body5.i15.i.i

find_group.exit16.i.i:                            ; preds = %while.body5.i15.i.i, %while.cond2.preheader.i10.i.i
  %cmp.i.i467 = icmp eq %struct.basic_block_def* %group.0.i.i.i, %group.0.i4.i.i
  br i1 %cmp.i.i467, label %if.then.i.i, label %union_groups.exit.i

if.then.i.i:                                      ; preds = %find_group.exit16.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.union_groups, i64 0, i64 0)) #6
  unreachable

union_groups.exit.i:                              ; preds = %find_group.exit16.i.i
  %83 = bitcast %struct.basic_block_def* %group.0.i4.i.i to i8*
  store i8* %83, i8** %aux.i.i.i, align 8, !tbaa !25
  %cmp7293.i = icmp sgt i32 %62, 0
  br i1 %cmp7293.i, label %for.body8.lr.ph.i, label %for.end89.i

for.body8.lr.ph.i:                                ; preds = %union_groups.exit.i
  %index_to_edge.i = getelementptr inbounds %struct.edge_list* %call89, i64 0, i32 2
  br label %for.body8.i

for.body8.i:                                      ; preds = %for.inc21.i, %for.body8.lr.ph.i
  %indvars.iv301.i = phi i64 [ 0, %for.body8.lr.ph.i ], [ %indvars.iv.next302.i, %for.inc21.i ]
  %84 = load %struct.edge_def*** %index_to_edge.i, align 8, !tbaa !21
  %arrayidx10.i = getelementptr inbounds %struct.edge_def** %84, i64 %indvars.iv301.i
  %85 = load %struct.edge_def** %arrayidx10.i, align 8, !tbaa !5
  %flags.i = getelementptr inbounds %struct.edge_def* %85, i64 0, i32 6
  %86 = load i32* %flags.i, align 4, !tbaa !16
  %and.i = and i32 %86, 22
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %for.inc21.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body8.i
  %aux11.i = getelementptr inbounds %struct.edge_def* %85, i64 0, i32 5
  %87 = load i8** %aux11.i, align 8, !tbaa !23
  %bf.load.i = load i8* %87, align 4
  %bf.clear.i = and i8 %bf.load.i, 4
  %tobool12.i = icmp eq i8 %bf.clear.i, 0
  br i1 %tobool12.i, label %land.lhs.true13.i, label %for.inc21.i

land.lhs.true13.i:                                ; preds = %land.lhs.true.i
  %src.i = getelementptr inbounds %struct.edge_def* %85, i64 0, i32 2
  %88 = load %struct.basic_block_def** %src.i, align 8, !tbaa !17
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %while.cond.i.i, %land.lhs.true13.i
  %group.0.i.i = phi %struct.basic_block_def* [ %88, %land.lhs.true13.i ], [ %90, %while.cond.i.i ]
  %aux.i.i = getelementptr inbounds %struct.basic_block_def* %group.0.i.i, i64 0, i32 10
  %89 = load i8** %aux.i.i, align 8, !tbaa !25
  %90 = bitcast i8* %89 to %struct.basic_block_def*
  %cmp.i139.i = icmp eq %struct.basic_block_def* %90, %group.0.i.i
  br i1 %cmp.i139.i, label %while.cond2.preheader.i.i, label %while.cond.i.i

while.cond2.preheader.i.i:                        ; preds = %while.cond.i.i
  %aux317.i.i = getelementptr inbounds %struct.basic_block_def* %88, i64 0, i32 10
  %91 = load i8** %aux317.i.i, align 8, !tbaa !25
  %92 = bitcast i8* %91 to %struct.basic_block_def*
  %cmp418.i.i = icmp eq %struct.basic_block_def* %92, %group.0.i.i
  br i1 %cmp418.i.i, label %find_group.exit.i, label %while.body5.lr.ph.i.i

while.body5.lr.ph.i.i:                            ; preds = %while.cond2.preheader.i.i
  %93 = bitcast %struct.basic_block_def* %group.0.i.i to i8*
  br label %while.body5.i.i

while.body5.i.i:                                  ; preds = %while.body5.i.i, %while.body5.lr.ph.i.i
  %94 = phi %struct.basic_block_def* [ %92, %while.body5.lr.ph.i.i ], [ %96, %while.body5.i.i ]
  %aux319.i.i = phi i8** [ %aux317.i.i, %while.body5.lr.ph.i.i ], [ %aux3.i.i, %while.body5.i.i ]
  store i8* %93, i8** %aux319.i.i, align 8, !tbaa !25
  %aux3.i.i = getelementptr inbounds %struct.basic_block_def* %94, i64 0, i32 10
  %95 = load i8** %aux3.i.i, align 8, !tbaa !25
  %96 = bitcast i8* %95 to %struct.basic_block_def*
  %cmp4.i.i = icmp eq %struct.basic_block_def* %96, %group.0.i.i
  br i1 %cmp4.i.i, label %find_group.exit.i, label %while.body5.i.i

find_group.exit.i:                                ; preds = %while.body5.i.i, %while.cond2.preheader.i.i
  %dest.i = getelementptr inbounds %struct.edge_def* %85, i64 0, i32 3
  %97 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !14
  br label %while.cond.i169.i

while.cond.i169.i:                                ; preds = %while.cond.i169.i, %find_group.exit.i
  %group.0.i166.i = phi %struct.basic_block_def* [ %97, %find_group.exit.i ], [ %99, %while.cond.i169.i ]
  %aux.i167.i = getelementptr inbounds %struct.basic_block_def* %group.0.i166.i, i64 0, i32 10
  %98 = load i8** %aux.i167.i, align 8, !tbaa !25
  %99 = bitcast i8* %98 to %struct.basic_block_def*
  %cmp.i168.i = icmp eq %struct.basic_block_def* %99, %group.0.i166.i
  br i1 %cmp.i168.i, label %while.cond2.preheader.i172.i, label %while.cond.i169.i

while.cond2.preheader.i172.i:                     ; preds = %while.cond.i169.i
  %aux317.i170.i = getelementptr inbounds %struct.basic_block_def* %97, i64 0, i32 10
  %100 = load i8** %aux317.i170.i, align 8, !tbaa !25
  %101 = bitcast i8* %100 to %struct.basic_block_def*
  %cmp418.i171.i = icmp eq %struct.basic_block_def* %101, %group.0.i166.i
  br i1 %cmp418.i171.i, label %find_group.exit178.i, label %while.body5.lr.ph.i173.i

while.body5.lr.ph.i173.i:                         ; preds = %while.cond2.preheader.i172.i
  %102 = bitcast %struct.basic_block_def* %group.0.i166.i to i8*
  br label %while.body5.i177.i

while.body5.i177.i:                               ; preds = %while.body5.i177.i, %while.body5.lr.ph.i173.i
  %103 = phi %struct.basic_block_def* [ %101, %while.body5.lr.ph.i173.i ], [ %105, %while.body5.i177.i ]
  %aux319.i174.i = phi i8** [ %aux317.i170.i, %while.body5.lr.ph.i173.i ], [ %aux3.i175.i, %while.body5.i177.i ]
  store i8* %102, i8** %aux319.i174.i, align 8, !tbaa !25
  %aux3.i175.i = getelementptr inbounds %struct.basic_block_def* %103, i64 0, i32 10
  %104 = load i8** %aux3.i175.i, align 8, !tbaa !25
  %105 = bitcast i8* %104 to %struct.basic_block_def*
  %cmp4.i176.i = icmp eq %struct.basic_block_def* %105, %group.0.i166.i
  br i1 %cmp4.i176.i, label %find_group.exit178.i, label %while.body5.i177.i

find_group.exit178.i:                             ; preds = %while.body5.i177.i, %while.cond2.preheader.i172.i
  %cmp15.i = icmp eq %struct.basic_block_def* %group.0.i.i, %group.0.i166.i
  br i1 %cmp15.i, label %for.inc21.i, label %if.then.i

if.then.i:                                        ; preds = %find_group.exit178.i
  %bf.load17.i = load i8* %87, align 4
  %bf.set.i = or i8 %bf.load17.i, 2
  store i8 %bf.set.i, i8* %87, align 4
  %106 = load %struct.basic_block_def** %src.i, align 8, !tbaa !17
  %107 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !14
  br label %while.cond.i.i236.i

while.cond.i.i236.i:                              ; preds = %while.cond.i.i236.i, %if.then.i
  %group.0.i.i233.i = phi %struct.basic_block_def* [ %106, %if.then.i ], [ %109, %while.cond.i.i236.i ]
  %aux.i.i234.i = getelementptr inbounds %struct.basic_block_def* %group.0.i.i233.i, i64 0, i32 10
  %108 = load i8** %aux.i.i234.i, align 8, !tbaa !25
  %109 = bitcast i8* %108 to %struct.basic_block_def*
  %cmp.i.i235.i = icmp eq %struct.basic_block_def* %109, %group.0.i.i233.i
  br i1 %cmp.i.i235.i, label %while.cond2.preheader.i.i239.i, label %while.cond.i.i236.i

while.cond2.preheader.i.i239.i:                   ; preds = %while.cond.i.i236.i
  %aux317.i.i237.i = getelementptr inbounds %struct.basic_block_def* %106, i64 0, i32 10
  %110 = load i8** %aux317.i.i237.i, align 8, !tbaa !25
  %111 = bitcast i8* %110 to %struct.basic_block_def*
  %cmp418.i.i238.i = icmp eq %struct.basic_block_def* %111, %group.0.i.i233.i
  br i1 %cmp418.i.i238.i, label %while.cond.i7.i248.i, label %while.body5.lr.ph.i.i240.i

while.body5.lr.ph.i.i240.i:                       ; preds = %while.cond2.preheader.i.i239.i
  %112 = bitcast %struct.basic_block_def* %group.0.i.i233.i to i8*
  br label %while.body5.i.i244.i

while.body5.i.i244.i:                             ; preds = %while.body5.i.i244.i, %while.body5.lr.ph.i.i240.i
  %113 = phi %struct.basic_block_def* [ %111, %while.body5.lr.ph.i.i240.i ], [ %115, %while.body5.i.i244.i ]
  %aux319.i.i241.i = phi i8** [ %aux317.i.i237.i, %while.body5.lr.ph.i.i240.i ], [ %aux3.i.i242.i, %while.body5.i.i244.i ]
  store i8* %112, i8** %aux319.i.i241.i, align 8, !tbaa !25
  %aux3.i.i242.i = getelementptr inbounds %struct.basic_block_def* %113, i64 0, i32 10
  %114 = load i8** %aux3.i.i242.i, align 8, !tbaa !25
  %115 = bitcast i8* %114 to %struct.basic_block_def*
  %cmp4.i.i243.i = icmp eq %struct.basic_block_def* %115, %group.0.i.i233.i
  br i1 %cmp4.i.i243.i, label %while.cond.i7.i248.i, label %while.body5.i.i244.i

while.cond.i7.i248.i:                             ; preds = %while.cond2.preheader.i.i239.i, %while.body5.i.i244.i, %while.cond.i7.i248.i
  %group.0.i4.i245.i = phi %struct.basic_block_def* [ %117, %while.cond.i7.i248.i ], [ %107, %while.body5.i.i244.i ], [ %107, %while.cond2.preheader.i.i239.i ]
  %aux.i5.i246.i = getelementptr inbounds %struct.basic_block_def* %group.0.i4.i245.i, i64 0, i32 10
  %116 = load i8** %aux.i5.i246.i, align 8, !tbaa !25
  %117 = bitcast i8* %116 to %struct.basic_block_def*
  %cmp.i6.i247.i = icmp eq %struct.basic_block_def* %117, %group.0.i4.i245.i
  br i1 %cmp.i6.i247.i, label %while.cond2.preheader.i10.i251.i, label %while.cond.i7.i248.i

while.cond2.preheader.i10.i251.i:                 ; preds = %while.cond.i7.i248.i
  %aux317.i8.i249.i = getelementptr inbounds %struct.basic_block_def* %107, i64 0, i32 10
  %118 = load i8** %aux317.i8.i249.i, align 8, !tbaa !25
  %119 = bitcast i8* %118 to %struct.basic_block_def*
  %cmp418.i9.i250.i = icmp eq %struct.basic_block_def* %119, %group.0.i4.i245.i
  br i1 %cmp418.i9.i250.i, label %find_group.exit16.i258.i, label %while.body5.lr.ph.i11.i252.i

while.body5.lr.ph.i11.i252.i:                     ; preds = %while.cond2.preheader.i10.i251.i
  %120 = bitcast %struct.basic_block_def* %group.0.i4.i245.i to i8*
  br label %while.body5.i15.i256.i

while.body5.i15.i256.i:                           ; preds = %while.body5.i15.i256.i, %while.body5.lr.ph.i11.i252.i
  %121 = phi %struct.basic_block_def* [ %119, %while.body5.lr.ph.i11.i252.i ], [ %123, %while.body5.i15.i256.i ]
  %aux319.i12.i253.i = phi i8** [ %aux317.i8.i249.i, %while.body5.lr.ph.i11.i252.i ], [ %aux3.i13.i254.i, %while.body5.i15.i256.i ]
  store i8* %120, i8** %aux319.i12.i253.i, align 8, !tbaa !25
  %aux3.i13.i254.i = getelementptr inbounds %struct.basic_block_def* %121, i64 0, i32 10
  %122 = load i8** %aux3.i13.i254.i, align 8, !tbaa !25
  %123 = bitcast i8* %122 to %struct.basic_block_def*
  %cmp4.i14.i255.i = icmp eq %struct.basic_block_def* %123, %group.0.i4.i245.i
  br i1 %cmp4.i14.i255.i, label %find_group.exit16.i258.i, label %while.body5.i15.i256.i

find_group.exit16.i258.i:                         ; preds = %while.body5.i15.i256.i, %while.cond2.preheader.i10.i251.i
  %cmp.i257.i = icmp eq %struct.basic_block_def* %group.0.i.i233.i, %group.0.i4.i245.i
  br i1 %cmp.i257.i, label %if.then.i259.i, label %union_groups.exit260.i

if.then.i259.i:                                   ; preds = %find_group.exit16.i258.i
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.union_groups, i64 0, i64 0)) #6
  unreachable

union_groups.exit260.i:                           ; preds = %find_group.exit16.i258.i
  %124 = bitcast %struct.basic_block_def* %group.0.i4.i245.i to i8*
  store i8* %124, i8** %aux.i.i234.i, align 8, !tbaa !25
  br label %for.inc21.i

for.inc21.i:                                      ; preds = %union_groups.exit260.i, %find_group.exit178.i, %land.lhs.true.i, %for.body8.i
  %indvars.iv.next302.i = add nuw nsw i64 %indvars.iv301.i, 1
  %125 = trunc i64 %indvars.iv.next302.i to i32
  %cmp7.i = icmp slt i32 %125, %62
  br i1 %cmp7.i, label %for.body8.i, label %for.body26.i

for.body26.i:                                     ; preds = %for.inc21.i, %for.inc57.i
  %indvars.iv299.i = phi i64 [ %indvars.iv.next300.i, %for.inc57.i ], [ 0, %for.inc21.i ]
  %126 = load %struct.edge_def*** %index_to_edge.i, align 8, !tbaa !21
  %arrayidx30.i = getelementptr inbounds %struct.edge_def** %126, i64 %indvars.iv299.i
  %127 = load %struct.edge_def** %arrayidx30.i, align 8, !tbaa !5
  %src31.i = getelementptr inbounds %struct.edge_def* %127, i64 0, i32 2
  %128 = load %struct.basic_block_def** %src31.i, align 8, !tbaa !17
  %succ.i = getelementptr inbounds %struct.basic_block_def* %128, i64 0, i32 5
  %129 = load %struct.edge_def** %succ.i, align 8, !tbaa !26
  %succ_next.i = getelementptr inbounds %struct.edge_def* %129, i64 0, i32 1
  %130 = load %struct.edge_def** %succ_next.i, align 8, !tbaa !27
  %tobool32.i = icmp eq %struct.edge_def* %130, null
  br i1 %tobool32.i, label %for.inc57.i, label %land.lhs.true33.i

land.lhs.true33.i:                                ; preds = %for.body26.i
  %dest34.i = getelementptr inbounds %struct.edge_def* %127, i64 0, i32 3
  %131 = load %struct.basic_block_def** %dest34.i, align 8, !tbaa !14
  %pred.i = getelementptr inbounds %struct.basic_block_def* %131, i64 0, i32 4
  %132 = load %struct.edge_def** %pred.i, align 8, !tbaa !28
  %pred_next.i = getelementptr inbounds %struct.edge_def* %132, i64 0, i32 0
  %133 = load %struct.edge_def** %pred_next.i, align 8, !tbaa !29
  %tobool35.i = icmp eq %struct.edge_def* %133, null
  br i1 %tobool35.i, label %for.inc57.i, label %land.lhs.true36.i

land.lhs.true36.i:                                ; preds = %land.lhs.true33.i
  %aux37.i = getelementptr inbounds %struct.edge_def* %127, i64 0, i32 5
  %134 = load i8** %aux37.i, align 8, !tbaa !23
  %bf.load38.i = load i8* %134, align 4
  %bf.clear40.i = and i8 %bf.load38.i, 4
  %tobool42.i = icmp eq i8 %bf.clear40.i, 0
  br i1 %tobool42.i, label %while.cond.i264.i, label %for.inc57.i

while.cond.i264.i:                                ; preds = %land.lhs.true36.i, %while.cond.i264.i
  %group.0.i261.i = phi %struct.basic_block_def* [ %136, %while.cond.i264.i ], [ %128, %land.lhs.true36.i ]
  %aux.i262.i = getelementptr inbounds %struct.basic_block_def* %group.0.i261.i, i64 0, i32 10
  %135 = load i8** %aux.i262.i, align 8, !tbaa !25
  %136 = bitcast i8* %135 to %struct.basic_block_def*
  %cmp.i263.i = icmp eq %struct.basic_block_def* %136, %group.0.i261.i
  br i1 %cmp.i263.i, label %while.cond2.preheader.i267.i, label %while.cond.i264.i

while.cond2.preheader.i267.i:                     ; preds = %while.cond.i264.i
  %aux317.i265.i = getelementptr inbounds %struct.basic_block_def* %128, i64 0, i32 10
  %137 = load i8** %aux317.i265.i, align 8, !tbaa !25
  %138 = bitcast i8* %137 to %struct.basic_block_def*
  %cmp418.i266.i = icmp eq %struct.basic_block_def* %138, %group.0.i261.i
  br i1 %cmp418.i266.i, label %while.cond.i277.i, label %while.body5.lr.ph.i268.i

while.body5.lr.ph.i268.i:                         ; preds = %while.cond2.preheader.i267.i
  %139 = bitcast %struct.basic_block_def* %group.0.i261.i to i8*
  br label %while.body5.i272.i

while.body5.i272.i:                               ; preds = %while.body5.i272.i, %while.body5.lr.ph.i268.i
  %140 = phi %struct.basic_block_def* [ %138, %while.body5.lr.ph.i268.i ], [ %142, %while.body5.i272.i ]
  %aux319.i269.i = phi i8** [ %aux317.i265.i, %while.body5.lr.ph.i268.i ], [ %aux3.i270.i, %while.body5.i272.i ]
  store i8* %139, i8** %aux319.i269.i, align 8, !tbaa !25
  %aux3.i270.i = getelementptr inbounds %struct.basic_block_def* %140, i64 0, i32 10
  %141 = load i8** %aux3.i270.i, align 8, !tbaa !25
  %142 = bitcast i8* %141 to %struct.basic_block_def*
  %cmp4.i271.i = icmp eq %struct.basic_block_def* %142, %group.0.i261.i
  br i1 %cmp4.i271.i, label %while.cond.i277.i, label %while.body5.i272.i

while.cond.i277.i:                                ; preds = %while.cond2.preheader.i267.i, %while.body5.i272.i, %while.cond.i277.i
  %group.0.i274.i = phi %struct.basic_block_def* [ %144, %while.cond.i277.i ], [ %131, %while.body5.i272.i ], [ %131, %while.cond2.preheader.i267.i ]
  %aux.i275.i = getelementptr inbounds %struct.basic_block_def* %group.0.i274.i, i64 0, i32 10
  %143 = load i8** %aux.i275.i, align 8, !tbaa !25
  %144 = bitcast i8* %143 to %struct.basic_block_def*
  %cmp.i276.i = icmp eq %struct.basic_block_def* %144, %group.0.i274.i
  br i1 %cmp.i276.i, label %while.cond2.preheader.i280.i, label %while.cond.i277.i

while.cond2.preheader.i280.i:                     ; preds = %while.cond.i277.i
  %aux317.i278.i = getelementptr inbounds %struct.basic_block_def* %131, i64 0, i32 10
  %145 = load i8** %aux317.i278.i, align 8, !tbaa !25
  %146 = bitcast i8* %145 to %struct.basic_block_def*
  %cmp418.i279.i = icmp eq %struct.basic_block_def* %146, %group.0.i274.i
  br i1 %cmp418.i279.i, label %find_group.exit286.i, label %while.body5.lr.ph.i281.i

while.body5.lr.ph.i281.i:                         ; preds = %while.cond2.preheader.i280.i
  %147 = bitcast %struct.basic_block_def* %group.0.i274.i to i8*
  br label %while.body5.i285.i

while.body5.i285.i:                               ; preds = %while.body5.i285.i, %while.body5.lr.ph.i281.i
  %148 = phi %struct.basic_block_def* [ %146, %while.body5.lr.ph.i281.i ], [ %150, %while.body5.i285.i ]
  %aux319.i282.i = phi i8** [ %aux317.i278.i, %while.body5.lr.ph.i281.i ], [ %aux3.i283.i, %while.body5.i285.i ]
  store i8* %147, i8** %aux319.i282.i, align 8, !tbaa !25
  %aux3.i283.i = getelementptr inbounds %struct.basic_block_def* %148, i64 0, i32 10
  %149 = load i8** %aux3.i283.i, align 8, !tbaa !25
  %150 = bitcast i8* %149 to %struct.basic_block_def*
  %cmp4.i284.i = icmp eq %struct.basic_block_def* %150, %group.0.i274.i
  br i1 %cmp4.i284.i, label %find_group.exit286.i, label %while.body5.i285.i

find_group.exit286.i:                             ; preds = %while.body5.i285.i, %while.cond2.preheader.i280.i
  %cmp48.i = icmp eq %struct.basic_block_def* %group.0.i261.i, %group.0.i274.i
  br i1 %cmp48.i, label %for.inc57.i, label %if.then49.i

if.then49.i:                                      ; preds = %find_group.exit286.i
  %bf.load51.i = load i8* %134, align 4
  %bf.set53.i = or i8 %bf.load51.i, 2
  store i8 %bf.set53.i, i8* %134, align 4
  %151 = load %struct.basic_block_def** %src31.i, align 8, !tbaa !17
  %152 = load %struct.basic_block_def** %dest34.i, align 8, !tbaa !14
  br label %while.cond.i.i208.i

while.cond.i.i208.i:                              ; preds = %while.cond.i.i208.i, %if.then49.i
  %group.0.i.i205.i = phi %struct.basic_block_def* [ %151, %if.then49.i ], [ %154, %while.cond.i.i208.i ]
  %aux.i.i206.i = getelementptr inbounds %struct.basic_block_def* %group.0.i.i205.i, i64 0, i32 10
  %153 = load i8** %aux.i.i206.i, align 8, !tbaa !25
  %154 = bitcast i8* %153 to %struct.basic_block_def*
  %cmp.i.i207.i = icmp eq %struct.basic_block_def* %154, %group.0.i.i205.i
  br i1 %cmp.i.i207.i, label %while.cond2.preheader.i.i211.i, label %while.cond.i.i208.i

while.cond2.preheader.i.i211.i:                   ; preds = %while.cond.i.i208.i
  %aux317.i.i209.i = getelementptr inbounds %struct.basic_block_def* %151, i64 0, i32 10
  %155 = load i8** %aux317.i.i209.i, align 8, !tbaa !25
  %156 = bitcast i8* %155 to %struct.basic_block_def*
  %cmp418.i.i210.i = icmp eq %struct.basic_block_def* %156, %group.0.i.i205.i
  br i1 %cmp418.i.i210.i, label %while.cond.i7.i220.i, label %while.body5.lr.ph.i.i212.i

while.body5.lr.ph.i.i212.i:                       ; preds = %while.cond2.preheader.i.i211.i
  %157 = bitcast %struct.basic_block_def* %group.0.i.i205.i to i8*
  br label %while.body5.i.i216.i

while.body5.i.i216.i:                             ; preds = %while.body5.i.i216.i, %while.body5.lr.ph.i.i212.i
  %158 = phi %struct.basic_block_def* [ %156, %while.body5.lr.ph.i.i212.i ], [ %160, %while.body5.i.i216.i ]
  %aux319.i.i213.i = phi i8** [ %aux317.i.i209.i, %while.body5.lr.ph.i.i212.i ], [ %aux3.i.i214.i, %while.body5.i.i216.i ]
  store i8* %157, i8** %aux319.i.i213.i, align 8, !tbaa !25
  %aux3.i.i214.i = getelementptr inbounds %struct.basic_block_def* %158, i64 0, i32 10
  %159 = load i8** %aux3.i.i214.i, align 8, !tbaa !25
  %160 = bitcast i8* %159 to %struct.basic_block_def*
  %cmp4.i.i215.i = icmp eq %struct.basic_block_def* %160, %group.0.i.i205.i
  br i1 %cmp4.i.i215.i, label %while.cond.i7.i220.i, label %while.body5.i.i216.i

while.cond.i7.i220.i:                             ; preds = %while.cond2.preheader.i.i211.i, %while.body5.i.i216.i, %while.cond.i7.i220.i
  %group.0.i4.i217.i = phi %struct.basic_block_def* [ %162, %while.cond.i7.i220.i ], [ %152, %while.body5.i.i216.i ], [ %152, %while.cond2.preheader.i.i211.i ]
  %aux.i5.i218.i = getelementptr inbounds %struct.basic_block_def* %group.0.i4.i217.i, i64 0, i32 10
  %161 = load i8** %aux.i5.i218.i, align 8, !tbaa !25
  %162 = bitcast i8* %161 to %struct.basic_block_def*
  %cmp.i6.i219.i = icmp eq %struct.basic_block_def* %162, %group.0.i4.i217.i
  br i1 %cmp.i6.i219.i, label %while.cond2.preheader.i10.i223.i, label %while.cond.i7.i220.i

while.cond2.preheader.i10.i223.i:                 ; preds = %while.cond.i7.i220.i
  %aux317.i8.i221.i = getelementptr inbounds %struct.basic_block_def* %152, i64 0, i32 10
  %163 = load i8** %aux317.i8.i221.i, align 8, !tbaa !25
  %164 = bitcast i8* %163 to %struct.basic_block_def*
  %cmp418.i9.i222.i = icmp eq %struct.basic_block_def* %164, %group.0.i4.i217.i
  br i1 %cmp418.i9.i222.i, label %find_group.exit16.i230.i, label %while.body5.lr.ph.i11.i224.i

while.body5.lr.ph.i11.i224.i:                     ; preds = %while.cond2.preheader.i10.i223.i
  %165 = bitcast %struct.basic_block_def* %group.0.i4.i217.i to i8*
  br label %while.body5.i15.i228.i

while.body5.i15.i228.i:                           ; preds = %while.body5.i15.i228.i, %while.body5.lr.ph.i11.i224.i
  %166 = phi %struct.basic_block_def* [ %164, %while.body5.lr.ph.i11.i224.i ], [ %168, %while.body5.i15.i228.i ]
  %aux319.i12.i225.i = phi i8** [ %aux317.i8.i221.i, %while.body5.lr.ph.i11.i224.i ], [ %aux3.i13.i226.i, %while.body5.i15.i228.i ]
  store i8* %165, i8** %aux319.i12.i225.i, align 8, !tbaa !25
  %aux3.i13.i226.i = getelementptr inbounds %struct.basic_block_def* %166, i64 0, i32 10
  %167 = load i8** %aux3.i13.i226.i, align 8, !tbaa !25
  %168 = bitcast i8* %167 to %struct.basic_block_def*
  %cmp4.i14.i227.i = icmp eq %struct.basic_block_def* %168, %group.0.i4.i217.i
  br i1 %cmp4.i14.i227.i, label %find_group.exit16.i230.i, label %while.body5.i15.i228.i

find_group.exit16.i230.i:                         ; preds = %while.body5.i15.i228.i, %while.cond2.preheader.i10.i223.i
  %cmp.i229.i = icmp eq %struct.basic_block_def* %group.0.i.i205.i, %group.0.i4.i217.i
  br i1 %cmp.i229.i, label %if.then.i231.i, label %union_groups.exit232.i

if.then.i231.i:                                   ; preds = %find_group.exit16.i230.i
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.union_groups, i64 0, i64 0)) #6
  unreachable

union_groups.exit232.i:                           ; preds = %find_group.exit16.i230.i
  %169 = bitcast %struct.basic_block_def* %group.0.i4.i217.i to i8*
  store i8* %169, i8** %aux.i.i206.i, align 8, !tbaa !25
  br label %for.inc57.i

for.inc57.i:                                      ; preds = %union_groups.exit232.i, %find_group.exit286.i, %land.lhs.true36.i, %land.lhs.true33.i, %for.body26.i
  %indvars.iv.next300.i = add nuw nsw i64 %indvars.iv299.i, 1
  %170 = trunc i64 %indvars.iv.next300.i to i32
  %cmp25.i = icmp slt i32 %170, %62
  br i1 %cmp25.i, label %for.body26.i, label %for.body62.i

for.body62.i:                                     ; preds = %for.inc57.i, %for.inc87.i
  %indvars.iv297.i = phi i64 [ %indvars.iv.next298.i, %for.inc87.i ], [ 0, %for.inc57.i ]
  %171 = load %struct.edge_def*** %index_to_edge.i, align 8, !tbaa !21
  %arrayidx66.i = getelementptr inbounds %struct.edge_def** %171, i64 %indvars.iv297.i
  %172 = load %struct.edge_def** %arrayidx66.i, align 8, !tbaa !5
  %src67.i = getelementptr inbounds %struct.edge_def* %172, i64 0, i32 2
  %173 = load %struct.basic_block_def** %src67.i, align 8, !tbaa !17
  br label %while.cond.i195.i

while.cond.i195.i:                                ; preds = %while.cond.i195.i, %for.body62.i
  %group.0.i192.i = phi %struct.basic_block_def* [ %173, %for.body62.i ], [ %175, %while.cond.i195.i ]
  %aux.i193.i = getelementptr inbounds %struct.basic_block_def* %group.0.i192.i, i64 0, i32 10
  %174 = load i8** %aux.i193.i, align 8, !tbaa !25
  %175 = bitcast i8* %174 to %struct.basic_block_def*
  %cmp.i194.i = icmp eq %struct.basic_block_def* %175, %group.0.i192.i
  br i1 %cmp.i194.i, label %while.cond2.preheader.i198.i, label %while.cond.i195.i

while.cond2.preheader.i198.i:                     ; preds = %while.cond.i195.i
  %aux317.i196.i = getelementptr inbounds %struct.basic_block_def* %173, i64 0, i32 10
  %176 = load i8** %aux317.i196.i, align 8, !tbaa !25
  %177 = bitcast i8* %176 to %struct.basic_block_def*
  %cmp418.i197.i = icmp eq %struct.basic_block_def* %177, %group.0.i192.i
  br i1 %cmp418.i197.i, label %find_group.exit204.i, label %while.body5.lr.ph.i199.i

while.body5.lr.ph.i199.i:                         ; preds = %while.cond2.preheader.i198.i
  %178 = bitcast %struct.basic_block_def* %group.0.i192.i to i8*
  br label %while.body5.i203.i

while.body5.i203.i:                               ; preds = %while.body5.i203.i, %while.body5.lr.ph.i199.i
  %179 = phi %struct.basic_block_def* [ %177, %while.body5.lr.ph.i199.i ], [ %181, %while.body5.i203.i ]
  %aux319.i200.i = phi i8** [ %aux317.i196.i, %while.body5.lr.ph.i199.i ], [ %aux3.i201.i, %while.body5.i203.i ]
  store i8* %178, i8** %aux319.i200.i, align 8, !tbaa !25
  %aux3.i201.i = getelementptr inbounds %struct.basic_block_def* %179, i64 0, i32 10
  %180 = load i8** %aux3.i201.i, align 8, !tbaa !25
  %181 = bitcast i8* %180 to %struct.basic_block_def*
  %cmp4.i202.i = icmp eq %struct.basic_block_def* %181, %group.0.i192.i
  br i1 %cmp4.i202.i, label %find_group.exit204.i, label %while.body5.i203.i

find_group.exit204.i:                             ; preds = %while.body5.i203.i, %while.cond2.preheader.i198.i
  %dest69.i = getelementptr inbounds %struct.edge_def* %172, i64 0, i32 3
  %182 = load %struct.basic_block_def** %dest69.i, align 8, !tbaa !14
  br label %while.cond.i182.i

while.cond.i182.i:                                ; preds = %while.cond.i182.i, %find_group.exit204.i
  %group.0.i179.i = phi %struct.basic_block_def* [ %182, %find_group.exit204.i ], [ %184, %while.cond.i182.i ]
  %aux.i180.i = getelementptr inbounds %struct.basic_block_def* %group.0.i179.i, i64 0, i32 10
  %183 = load i8** %aux.i180.i, align 8, !tbaa !25
  %184 = bitcast i8* %183 to %struct.basic_block_def*
  %cmp.i181.i = icmp eq %struct.basic_block_def* %184, %group.0.i179.i
  br i1 %cmp.i181.i, label %while.cond2.preheader.i185.i, label %while.cond.i182.i

while.cond2.preheader.i185.i:                     ; preds = %while.cond.i182.i
  %aux317.i183.i = getelementptr inbounds %struct.basic_block_def* %182, i64 0, i32 10
  %185 = load i8** %aux317.i183.i, align 8, !tbaa !25
  %186 = bitcast i8* %185 to %struct.basic_block_def*
  %cmp418.i184.i = icmp eq %struct.basic_block_def* %186, %group.0.i179.i
  br i1 %cmp418.i184.i, label %find_group.exit191.i, label %while.body5.lr.ph.i186.i

while.body5.lr.ph.i186.i:                         ; preds = %while.cond2.preheader.i185.i
  %187 = bitcast %struct.basic_block_def* %group.0.i179.i to i8*
  br label %while.body5.i190.i

while.body5.i190.i:                               ; preds = %while.body5.i190.i, %while.body5.lr.ph.i186.i
  %188 = phi %struct.basic_block_def* [ %186, %while.body5.lr.ph.i186.i ], [ %190, %while.body5.i190.i ]
  %aux319.i187.i = phi i8** [ %aux317.i183.i, %while.body5.lr.ph.i186.i ], [ %aux3.i188.i, %while.body5.i190.i ]
  store i8* %187, i8** %aux319.i187.i, align 8, !tbaa !25
  %aux3.i188.i = getelementptr inbounds %struct.basic_block_def* %188, i64 0, i32 10
  %189 = load i8** %aux3.i188.i, align 8, !tbaa !25
  %190 = bitcast i8* %189 to %struct.basic_block_def*
  %cmp4.i189.i = icmp eq %struct.basic_block_def* %190, %group.0.i179.i
  br i1 %cmp4.i189.i, label %find_group.exit191.i, label %while.body5.i190.i

find_group.exit191.i:                             ; preds = %while.body5.i190.i, %while.cond2.preheader.i185.i
  %cmp71.i = icmp eq %struct.basic_block_def* %group.0.i192.i, %group.0.i179.i
  br i1 %cmp71.i, label %for.inc87.i, label %land.lhs.true72.i

land.lhs.true72.i:                                ; preds = %find_group.exit191.i
  %aux73.i = getelementptr inbounds %struct.edge_def* %172, i64 0, i32 5
  %191 = load i8** %aux73.i, align 8, !tbaa !23
  %bf.load74.i = load i8* %191, align 4
  %bf.clear76.i = and i8 %bf.load74.i, 4
  %tobool78.i = icmp eq i8 %bf.clear76.i, 0
  br i1 %tobool78.i, label %if.then79.i, label %for.inc87.i

if.then79.i:                                      ; preds = %land.lhs.true72.i
  %bf.set83.i = or i8 %bf.load74.i, 2
  store i8 %bf.set83.i, i8* %191, align 4
  %192 = load %struct.basic_block_def** %src67.i, align 8, !tbaa !17
  %193 = load %struct.basic_block_def** %dest69.i, align 8, !tbaa !14
  br label %while.cond.i.i143.i

while.cond.i.i143.i:                              ; preds = %while.cond.i.i143.i, %if.then79.i
  %group.0.i.i140.i = phi %struct.basic_block_def* [ %192, %if.then79.i ], [ %195, %while.cond.i.i143.i ]
  %aux.i.i141.i = getelementptr inbounds %struct.basic_block_def* %group.0.i.i140.i, i64 0, i32 10
  %194 = load i8** %aux.i.i141.i, align 8, !tbaa !25
  %195 = bitcast i8* %194 to %struct.basic_block_def*
  %cmp.i.i142.i = icmp eq %struct.basic_block_def* %195, %group.0.i.i140.i
  br i1 %cmp.i.i142.i, label %while.cond2.preheader.i.i145.i, label %while.cond.i.i143.i

while.cond2.preheader.i.i145.i:                   ; preds = %while.cond.i.i143.i
  %aux317.i.i.i = getelementptr inbounds %struct.basic_block_def* %192, i64 0, i32 10
  %196 = load i8** %aux317.i.i.i, align 8, !tbaa !25
  %197 = bitcast i8* %196 to %struct.basic_block_def*
  %cmp418.i.i144.i = icmp eq %struct.basic_block_def* %197, %group.0.i.i140.i
  br i1 %cmp418.i.i144.i, label %while.cond.i7.i154.i, label %while.body5.lr.ph.i.i146.i

while.body5.lr.ph.i.i146.i:                       ; preds = %while.cond2.preheader.i.i145.i
  %198 = bitcast %struct.basic_block_def* %group.0.i.i140.i to i8*
  br label %while.body5.i.i150.i

while.body5.i.i150.i:                             ; preds = %while.body5.i.i150.i, %while.body5.lr.ph.i.i146.i
  %199 = phi %struct.basic_block_def* [ %197, %while.body5.lr.ph.i.i146.i ], [ %201, %while.body5.i.i150.i ]
  %aux319.i.i147.i = phi i8** [ %aux317.i.i.i, %while.body5.lr.ph.i.i146.i ], [ %aux3.i.i148.i, %while.body5.i.i150.i ]
  store i8* %198, i8** %aux319.i.i147.i, align 8, !tbaa !25
  %aux3.i.i148.i = getelementptr inbounds %struct.basic_block_def* %199, i64 0, i32 10
  %200 = load i8** %aux3.i.i148.i, align 8, !tbaa !25
  %201 = bitcast i8* %200 to %struct.basic_block_def*
  %cmp4.i.i149.i = icmp eq %struct.basic_block_def* %201, %group.0.i.i140.i
  br i1 %cmp4.i.i149.i, label %while.cond.i7.i154.i, label %while.body5.i.i150.i

while.cond.i7.i154.i:                             ; preds = %while.cond2.preheader.i.i145.i, %while.body5.i.i150.i, %while.cond.i7.i154.i
  %group.0.i4.i151.i = phi %struct.basic_block_def* [ %203, %while.cond.i7.i154.i ], [ %193, %while.body5.i.i150.i ], [ %193, %while.cond2.preheader.i.i145.i ]
  %aux.i5.i152.i = getelementptr inbounds %struct.basic_block_def* %group.0.i4.i151.i, i64 0, i32 10
  %202 = load i8** %aux.i5.i152.i, align 8, !tbaa !25
  %203 = bitcast i8* %202 to %struct.basic_block_def*
  %cmp.i6.i153.i = icmp eq %struct.basic_block_def* %203, %group.0.i4.i151.i
  br i1 %cmp.i6.i153.i, label %while.cond2.preheader.i10.i156.i, label %while.cond.i7.i154.i

while.cond2.preheader.i10.i156.i:                 ; preds = %while.cond.i7.i154.i
  %aux317.i8.i.i = getelementptr inbounds %struct.basic_block_def* %193, i64 0, i32 10
  %204 = load i8** %aux317.i8.i.i, align 8, !tbaa !25
  %205 = bitcast i8* %204 to %struct.basic_block_def*
  %cmp418.i9.i155.i = icmp eq %struct.basic_block_def* %205, %group.0.i4.i151.i
  br i1 %cmp418.i9.i155.i, label %find_group.exit16.i163.i, label %while.body5.lr.ph.i11.i157.i

while.body5.lr.ph.i11.i157.i:                     ; preds = %while.cond2.preheader.i10.i156.i
  %206 = bitcast %struct.basic_block_def* %group.0.i4.i151.i to i8*
  br label %while.body5.i15.i161.i

while.body5.i15.i161.i:                           ; preds = %while.body5.i15.i161.i, %while.body5.lr.ph.i11.i157.i
  %207 = phi %struct.basic_block_def* [ %205, %while.body5.lr.ph.i11.i157.i ], [ %209, %while.body5.i15.i161.i ]
  %aux319.i12.i158.i = phi i8** [ %aux317.i8.i.i, %while.body5.lr.ph.i11.i157.i ], [ %aux3.i13.i159.i, %while.body5.i15.i161.i ]
  store i8* %206, i8** %aux319.i12.i158.i, align 8, !tbaa !25
  %aux3.i13.i159.i = getelementptr inbounds %struct.basic_block_def* %207, i64 0, i32 10
  %208 = load i8** %aux3.i13.i159.i, align 8, !tbaa !25
  %209 = bitcast i8* %208 to %struct.basic_block_def*
  %cmp4.i14.i160.i = icmp eq %struct.basic_block_def* %209, %group.0.i4.i151.i
  br i1 %cmp4.i14.i160.i, label %find_group.exit16.i163.i, label %while.body5.i15.i161.i

find_group.exit16.i163.i:                         ; preds = %while.body5.i15.i161.i, %while.cond2.preheader.i10.i156.i
  %cmp.i162.i = icmp eq %struct.basic_block_def* %group.0.i.i140.i, %group.0.i4.i151.i
  br i1 %cmp.i162.i, label %if.then.i164.i, label %union_groups.exit165.i

if.then.i164.i:                                   ; preds = %find_group.exit16.i163.i
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 858, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.union_groups, i64 0, i64 0)) #6
  unreachable

union_groups.exit165.i:                           ; preds = %find_group.exit16.i163.i
  %210 = bitcast %struct.basic_block_def* %group.0.i4.i151.i to i8*
  store i8* %210, i8** %aux.i.i141.i, align 8, !tbaa !25
  br label %for.inc87.i

for.inc87.i:                                      ; preds = %union_groups.exit165.i, %land.lhs.true72.i, %find_group.exit191.i
  %indvars.iv.next298.i = add nuw nsw i64 %indvars.iv297.i, 1
  %211 = trunc i64 %indvars.iv.next298.i to i32
  %cmp61.i = icmp slt i32 %211, %62
  br i1 %cmp61.i, label %for.body62.i, label %for.end89.i

for.end89.i:                                      ; preds = %for.inc87.i, %union_groups.exit.i
  store i8* null, i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !25
  store i8* null, i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 10), align 8, !tbaa !25
  %212 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp91287.i = icmp sgt i32 %212, 0
  br i1 %cmp91287.i, label %for.body92.i, label %for.cond190.preheader

for.body92.i:                                     ; preds = %for.end89.i, %for.body92.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body92.i ], [ 0, %for.end89.i ]
  %213 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data94.i = getelementptr inbounds %struct.varray_head_tag* %213, i64 0, i32 4
  %bb95.i = bitcast %union.varray_data_tag* %data94.i to [1 x %struct.basic_block_def*]*
  %arrayidx96.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb95.i, i64 0, i64 %indvars.iv.i
  %214 = load %struct.basic_block_def** %arrayidx96.i, align 8, !tbaa !5
  %aux97.i = getelementptr inbounds %struct.basic_block_def* %214, i64 0, i32 10
  store i8* null, i8** %aux97.i, align 8, !tbaa !25
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv767 = trunc i64 %indvars.iv.next.i to i32
  %exitcond768 = icmp eq i32 %lftr.wideiv767, %212
  br i1 %exitcond768, label %for.cond190.preheader, label %for.body92.i

for.cond190.preheader:                            ; preds = %for.body92.i, %for.end89.i
  br i1 %cmp92719, label %for.body193.lr.ph, label %for.end220

for.body193.lr.ph:                                ; preds = %for.cond190.preheader
  %index_to_edge196 = getelementptr inbounds %struct.edge_list* %call89, i64 0, i32 2
  br label %for.body193

for.body193:                                      ; preds = %for.inc218, %for.body193.lr.ph
  %indvars.iv765 = phi i64 [ 0, %for.body193.lr.ph ], [ %indvars.iv.next766, %for.inc218 ]
  %ignored_edges.2710 = phi i32 [ %ignored_edges.0.lcssa, %for.body193.lr.ph ], [ %ignored_edges.3, %for.inc218 ]
  %215 = load %struct.edge_def*** %index_to_edge196, align 8, !tbaa !21
  %arrayidx197 = getelementptr inbounds %struct.edge_def** %215, i64 %indvars.iv765
  %216 = load %struct.edge_def** %arrayidx197, align 8, !tbaa !5
  %flags199 = getelementptr inbounds %struct.edge_def* %216, i64 0, i32 6
  %217 = load i32* %flags199, align 4, !tbaa !16
  %and200 = and i32 %217, 16
  %tobool201 = icmp eq i32 %and200, 0
  br i1 %tobool201, label %for.inc218, label %land.lhs.true202

land.lhs.true202:                                 ; preds = %for.body193
  %aux198 = getelementptr inbounds %struct.edge_def* %216, i64 0, i32 5
  %218 = load i8** %aux198, align 8, !tbaa !23
  %bf.load203 = load i8* %218, align 4
  %219 = and i8 %bf.load203, 6
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %if.then212, label %for.inc218

if.then212:                                       ; preds = %land.lhs.true202
  %bf.set215 = or i8 %bf.load203, 4
  store i8 %bf.set215, i8* %218, align 4
  %inc216 = add nsw i32 %ignored_edges.2710, 1
  br label %for.inc218

for.inc218:                                       ; preds = %land.lhs.true202, %for.body193, %if.then212
  %ignored_edges.3 = phi i32 [ %ignored_edges.2710, %land.lhs.true202 ], [ %inc216, %if.then212 ], [ %ignored_edges.2710, %for.body193 ]
  %indvars.iv.next766 = add nuw nsw i64 %indvars.iv765, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next766 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %32
  br i1 %exitcond, label %for.cond190.for.end220_crit_edge, label %for.body193

for.cond190.for.end220_crit_edge:                 ; preds = %for.inc218
  %.pre = load i32* @n_basic_blocks, align 4, !tbaa !1
  br label %for.end220

for.end220:                                       ; preds = %for.cond190.for.end220_crit_edge, %for.cond190.preheader
  %221 = phi i32 [ %.pre, %for.cond190.for.end220_crit_edge ], [ %212, %for.cond190.preheader ]
  %ignored_edges.2.lcssa = phi i32 [ %ignored_edges.3, %for.cond190.for.end220_crit_edge ], [ %ignored_edges.0.lcssa, %for.cond190.preheader ]
  %add = add nsw i32 %221, 2
  %222 = load i32* @total_num_blocks, align 4, !tbaa !1
  %add221 = add nsw i32 %add, %222
  store i32 %add221, i32* @total_num_blocks, align 4, !tbaa !1
  %223 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool222 = icmp eq %struct._IO_FILE* %223, null
  br i1 %tobool222, label %if.end230.thread787, label %if.end225

if.end230.thread787:                              ; preds = %for.end220
  %224 = load i32* @total_num_edges, align 4, !tbaa !1
  %add226671 = add nsw i32 %224, %32
  store i32 %add226671, i32* @total_num_edges, align 4, !tbaa !1
  %225 = load i32* @total_num_edges_ignored, align 4, !tbaa !1
  %add231788 = add nsw i32 %225, %ignored_edges.2.lcssa
  store i32 %add231788, i32* @total_num_edges_ignored, align 4, !tbaa !1
  br label %if.end235

if.end225:                                        ; preds = %for.end220
  %call224 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %223, i8* getelementptr inbounds ([17 x i8]* @.str3, i64 0, i64 0), i32 %221) #5
  %.pr670 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %226 = load i32* @total_num_edges, align 4, !tbaa !1
  %add226 = add nsw i32 %226, %32
  store i32 %add226, i32* @total_num_edges, align 4, !tbaa !1
  %tobool227 = icmp eq %struct._IO_FILE* %.pr670, null
  br i1 %tobool227, label %if.end230.thread, label %if.end230

if.end230.thread:                                 ; preds = %if.end225
  %227 = load i32* @total_num_edges_ignored, align 4, !tbaa !1
  %add231674 = add nsw i32 %227, %ignored_edges.2.lcssa
  store i32 %add231674, i32* @total_num_edges_ignored, align 4, !tbaa !1
  br label %if.end235

if.end230:                                        ; preds = %if.end225
  %call229 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %.pr670, i8* getelementptr inbounds ([10 x i8]* @.str4, i64 0, i64 0), i32 %32) #5
  %.pr673.pre = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %228 = load i32* @total_num_edges_ignored, align 4, !tbaa !1
  %add231 = add nsw i32 %228, %ignored_edges.2.lcssa
  store i32 %add231, i32* @total_num_edges_ignored, align 4, !tbaa !1
  %tobool232 = icmp eq %struct._IO_FILE* %.pr673.pre, null
  br i1 %tobool232, label %if.end235, label %if.then233

if.then233:                                       ; preds = %if.end230
  %call234 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %.pr673.pre, i8* getelementptr inbounds ([18 x i8]* @.str5, i64 0, i64 0), i32 %ignored_edges.2.lcssa) #5
  br label %if.end235

if.end235:                                        ; preds = %if.end230.thread787, %if.end230.thread, %if.end230, %if.then233
  %229 = load i32* @flag_test_coverage, align 4, !tbaa !1
  %tobool236 = icmp eq i32 %229, 0
  br i1 %tobool236, label %if.end347, label %if.then237

if.then237:                                       ; preds = %if.end235
  %230 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add238 = add nsw i32 %230, 2
  %conv239 = sext i32 %add238 to i64
  %231 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  %232 = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 10, i8* %232) #5
  %cmp.i.i470 = icmp slt i32 %add238, 0
  %sub.i.i471 = sub nsw i64 0, %conv239
  %sub.value.i.i472 = select i1 %cmp.i.i470, i64 %sub.i.i471, i64 %conv239
  %conv12.i.i473 = trunc i64 %sub.value.i.i472 to i8
  store i8 %conv12.i.i473, i8* %232, align 4, !tbaa !24
  %div.i.i474 = sdiv i64 %sub.value.i.i472, 256
  %conv12.1.i.i475 = trunc i64 %div.i.i474 to i8
  %arrayidx.1.i.i476 = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 1
  store i8 %conv12.1.i.i475, i8* %arrayidx.1.i.i476, align 1, !tbaa !24
  %div.1.i.i477 = sdiv i64 %sub.value.i.i472, 65536
  %conv12.2.i.i478 = trunc i64 %div.1.i.i477 to i8
  %arrayidx.2.i.i479 = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 2
  store i8 %conv12.2.i.i478, i8* %arrayidx.2.i.i479, align 2, !tbaa !24
  %div.2.i.i480 = sdiv i64 %sub.value.i.i472, 16777216
  %div.2.tr.i.i481 = trunc i64 %div.2.i.i480 to i8
  %conv12.3.i.i482 = and i8 %div.2.tr.i.i481, 127
  %arrayidx.3.i.i483 = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 3
  %div.3.i.i484 = sdiv i64 %sub.value.i.i472, 4294967296
  %value.addr.1.off.i.i485 = add i64 %div.3.i.i484, 1
  %value.addr.1.cmp.i.i486 = icmp ugt i64 %value.addr.1.off.i.i485, 1
  br i1 %value.addr.1.cmp.i.i486, label %__store_gcov_type.exit.thread2.i487, label %if.else.i491

__store_gcov_type.exit.thread2.i487:              ; preds = %if.then237
  store i8 %conv12.3.i.i482, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  br label %__write_long.exit492

if.else.i491:                                     ; preds = %if.then237
  %cond.i.i488 = select i1 %cmp.i.i470, i8 -128, i8 0
  %or.i.i489 = or i8 %conv12.3.i.i482, %cond.i.i488
  store i8 %or.i.i489, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  %call2.i490 = call i64 @fwrite(i8* %232, i64 1, i64 4, %struct._IO_FILE* %231) #5
  %.pre781 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  br label %__write_long.exit492

__write_long.exit492:                             ; preds = %__store_gcov_type.exit.thread2.i487, %if.else.i491
  %233 = phi %struct._IO_FILE* [ %231, %__store_gcov_type.exit.thread2.i487 ], [ %.pre781, %if.else.i491 ]
  call void @llvm.lifetime.end(i64 10, i8* %232) #5
  %sub = sub nsw i32 %32, %ignored_edges.2.lcssa
  %add241 = add nsw i32 %sub, 1
  %conv242 = sext i32 %add241 to i64
  call void @llvm.lifetime.start(i64 10, i8* %232) #5
  %cmp.i.i495 = icmp slt i32 %add241, 0
  %sub.i.i496 = sub nsw i64 0, %conv242
  %sub.value.i.i497 = select i1 %cmp.i.i495, i64 %sub.i.i496, i64 %conv242
  %conv12.i.i498 = trunc i64 %sub.value.i.i497 to i8
  store i8 %conv12.i.i498, i8* %232, align 4, !tbaa !24
  %div.i.i499 = sdiv i64 %sub.value.i.i497, 256
  %conv12.1.i.i500 = trunc i64 %div.i.i499 to i8
  store i8 %conv12.1.i.i500, i8* %arrayidx.1.i.i476, align 1, !tbaa !24
  %div.1.i.i502 = sdiv i64 %sub.value.i.i497, 65536
  %conv12.2.i.i503 = trunc i64 %div.1.i.i502 to i8
  store i8 %conv12.2.i.i503, i8* %arrayidx.2.i.i479, align 2, !tbaa !24
  %div.2.i.i505 = sdiv i64 %sub.value.i.i497, 16777216
  %div.2.tr.i.i506 = trunc i64 %div.2.i.i505 to i8
  %conv12.3.i.i507 = and i8 %div.2.tr.i.i506, 127
  %div.3.i.i509 = sdiv i64 %sub.value.i.i497, 4294967296
  %value.addr.1.off.i.i510 = add i64 %div.3.i.i509, 1
  %value.addr.1.cmp.i.i511 = icmp ugt i64 %value.addr.1.off.i.i510, 1
  br i1 %value.addr.1.cmp.i.i511, label %__store_gcov_type.exit.thread2.i512, label %if.else.i516

__store_gcov_type.exit.thread2.i512:              ; preds = %__write_long.exit492
  store i8 %conv12.3.i.i507, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  br label %for.cond244.preheader

if.else.i516:                                     ; preds = %__write_long.exit492
  %cond.i.i513 = select i1 %cmp.i.i495, i8 -128, i8 0
  %or.i.i514 = or i8 %conv12.3.i.i507, %cond.i.i513
  store i8 %or.i.i514, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  %call2.i515 = call i64 @fwrite(i8* %232, i64 1, i64 4, %struct._IO_FILE* %233) #5
  br label %for.cond244.preheader

for.cond244.preheader:                            ; preds = %__store_gcov_type.exit.thread2.i512, %if.else.i516
  %234 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp246706 = icmp sgt i32 %234, -1
  br i1 %cmp246706, label %for.body248.lr.ph, label %for.end342

for.body248.lr.ph:                                ; preds = %for.cond244.preheader
  %add245705 = add nsw i32 %234, 1
  br label %for.body248

for.body248:                                      ; preds = %for.body248.lr.ph, %for.inc340
  %indvars.iv762 = phi i64 [ 0, %for.body248.lr.ph ], [ %indvars.iv.next763, %for.inc340 ]
  %add245708 = phi i32 [ %add245705, %for.body248.lr.ph ], [ %add245, %for.inc340 ]
  %235 = trunc i64 %indvars.iv762 to i32
  %cmp250 = icmp eq i32 %235, 0
  br i1 %cmp250, label %cond.end262, label %cond.false

cond.false:                                       ; preds = %for.body248
  %cmp253 = icmp eq i32 %235, %add245708
  br i1 %cmp253, label %cond.end262, label %cond.false256

cond.false256:                                    ; preds = %cond.false
  %236 = add nsw i64 %indvars.iv762, -1
  %237 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data259 = getelementptr inbounds %struct.varray_head_tag* %237, i64 0, i32 4
  %bb260 = bitcast %union.varray_data_tag* %data259 to [1 x %struct.basic_block_def*]*
  %arrayidx261 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb260, i64 0, i64 %236
  %238 = load %struct.basic_block_def** %arrayidx261, align 8, !tbaa !5
  br label %cond.end262

cond.end262:                                      ; preds = %cond.false256, %cond.false, %for.body248
  %cond263 = phi %struct.basic_block_def* [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %for.body248 ], [ %238, %cond.false256 ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %cond.false ]
  %succ266 = getelementptr inbounds %struct.basic_block_def* %cond263, i64 0, i32 5
  %e264.0697 = load %struct.edge_def** %succ266, align 8
  %tobool268698 = icmp eq %struct.edge_def* %e264.0697, null
  br i1 %tobool268698, label %for.end281, label %for.body269

for.body269:                                      ; preds = %cond.end262, %for.body269
  %e264.0700 = phi %struct.edge_def* [ %e264.0, %for.body269 ], [ %e264.0697, %cond.end262 ]
  %count265.0699 = phi i64 [ %inc277.count265.0, %for.body269 ], [ 0, %cond.end262 ]
  %aux270 = getelementptr inbounds %struct.edge_def* %e264.0700, i64 0, i32 5
  %239 = load i8** %aux270, align 8, !tbaa !23
  %bf.load271 = load i8* %239, align 4
  %bf.clear273 = lshr i8 %bf.load271, 2
  %bf.clear273.lobit = and i8 %bf.clear273, 1
  %240 = xor i8 %bf.clear273.lobit, 1
  %inc277 = zext i8 %240 to i64
  %inc277.count265.0 = add nsw i64 %inc277, %count265.0699
  %succ_next280 = getelementptr inbounds %struct.edge_def* %e264.0700, i64 0, i32 1
  %e264.0 = load %struct.edge_def** %succ_next280, align 8
  %tobool268 = icmp eq %struct.edge_def* %e264.0, null
  br i1 %tobool268, label %for.end281, label %for.body269

for.end281:                                       ; preds = %for.body269, %cond.end262
  %count265.0.lcssa = phi i64 [ 0, %cond.end262 ], [ %inc277.count265.0, %for.body269 ]
  %241 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %232) #5
  %cmp.i.i520 = icmp slt i64 %count265.0.lcssa, 0
  %sub.i.i521 = sub nsw i64 0, %count265.0.lcssa
  %sub.value.i.i522 = select i1 %cmp.i.i520, i64 %sub.i.i521, i64 %count265.0.lcssa
  %conv12.i.i523 = trunc i64 %sub.value.i.i522 to i8
  store i8 %conv12.i.i523, i8* %232, align 4, !tbaa !24
  %div.i.i524 = sdiv i64 %sub.value.i.i522, 256
  %conv12.1.i.i525 = trunc i64 %div.i.i524 to i8
  store i8 %conv12.1.i.i525, i8* %arrayidx.1.i.i476, align 1, !tbaa !24
  %div.1.i.i527 = sdiv i64 %sub.value.i.i522, 65536
  %conv12.2.i.i528 = trunc i64 %div.1.i.i527 to i8
  store i8 %conv12.2.i.i528, i8* %arrayidx.2.i.i479, align 2, !tbaa !24
  %div.2.i.i530 = sdiv i64 %sub.value.i.i522, 16777216
  %div.2.tr.i.i531 = trunc i64 %div.2.i.i530 to i8
  %conv12.3.i.i532 = and i8 %div.2.tr.i.i531, 127
  %div.3.i.i534 = sdiv i64 %sub.value.i.i522, 4294967296
  %value.addr.1.off.i.i535 = add i64 %div.3.i.i534, 1
  %value.addr.1.cmp.i.i536 = icmp ugt i64 %value.addr.1.off.i.i535, 1
  br i1 %value.addr.1.cmp.i.i536, label %__store_gcov_type.exit.thread2.i537, label %if.else.i541

__store_gcov_type.exit.thread2.i537:              ; preds = %for.end281
  store i8 %conv12.3.i.i532, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  br label %for.cond284.preheader

if.else.i541:                                     ; preds = %for.end281
  %cond.i.i538 = select i1 %cmp.i.i520, i8 -128, i8 0
  %or.i.i539 = or i8 %conv12.3.i.i532, %cond.i.i538
  store i8 %or.i.i539, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  %call2.i540 = call i64 @fwrite(i8* %232, i64 1, i64 4, %struct._IO_FILE* %241) #5
  br label %for.cond284.preheader

for.cond284.preheader:                            ; preds = %__store_gcov_type.exit.thread2.i537, %if.else.i541
  %e264.1702 = load %struct.edge_def** %succ266, align 8
  %tobool285703 = icmp eq %struct.edge_def* %e264.1702, null
  br i1 %tobool285703, label %for.inc340, label %for.body286

for.body286:                                      ; preds = %for.cond284.preheader, %for.inc337
  %e264.1704 = phi %struct.edge_def* [ %e264.1, %for.inc337 ], [ %e264.1702, %for.cond284.preheader ]
  %aux288 = getelementptr inbounds %struct.edge_def* %e264.1704, i64 0, i32 5
  %242 = load i8** %aux288, align 8, !tbaa !23
  %bf.load289 = load i8* %242, align 4
  %bf.clear291 = and i8 %bf.load289, 4
  %tobool293 = icmp eq i8 %bf.clear291, 0
  br i1 %tobool293, label %if.then294, label %for.inc337

if.then294:                                       ; preds = %for.body286
  %bf.clear297 = lshr i8 %bf.load289, 1
  %bf.clear297.lobit = and i8 %bf.clear297, 1
  %. = zext i8 %bf.clear297.lobit to i32
  %flags302 = getelementptr inbounds %struct.edge_def* %e264.1704, i64 0, i32 6
  %243 = load i32* %flags302, align 4, !tbaa !16
  %and303 = lshr i32 %243, 3
  %244 = and i32 %and303, 2
  %245 = or i32 %244, %.
  %and309 = shl i32 %243, 2
  %246 = and i32 %and309, 4
  %247 = or i32 %245, %246
  %dest314 = getelementptr inbounds %struct.edge_def* %e264.1704, i64 0, i32 3
  %248 = load %struct.basic_block_def** %dest314, align 8, !tbaa !14
  %cmp315 = icmp eq %struct.basic_block_def* %248, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp315, label %cond.end330, label %cond.false318

cond.false318:                                    ; preds = %if.then294
  %cmp320 = icmp eq %struct.basic_block_def* %248, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  %index326 = getelementptr inbounds %struct.basic_block_def* %248, i64 0, i32 11
  %.sink.in = select i1 %cmp320, i32* @n_basic_blocks, i32* %index326
  %.sink = load i32* %.sink.in, align 4
  %add323 = add nsw i32 %.sink, 1
  %phitmp = sext i32 %add323 to i64
  br label %cond.end330

cond.end330:                                      ; preds = %if.then294, %cond.false318
  %cond331 = phi i64 [ %phitmp, %cond.false318 ], [ 0, %if.then294 ]
  %249 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %232) #5
  %cmp.i.i545 = icmp slt i64 %cond331, 0
  %sub.i.i546 = sub nsw i64 0, %cond331
  %sub.value.i.i547 = select i1 %cmp.i.i545, i64 %sub.i.i546, i64 %cond331
  %conv12.i.i548 = trunc i64 %sub.value.i.i547 to i8
  store i8 %conv12.i.i548, i8* %232, align 4, !tbaa !24
  %div.i.i549 = sdiv i64 %sub.value.i.i547, 256
  %conv12.1.i.i550 = trunc i64 %div.i.i549 to i8
  store i8 %conv12.1.i.i550, i8* %arrayidx.1.i.i476, align 1, !tbaa !24
  %div.1.i.i552 = sdiv i64 %sub.value.i.i547, 65536
  %conv12.2.i.i553 = trunc i64 %div.1.i.i552 to i8
  store i8 %conv12.2.i.i553, i8* %arrayidx.2.i.i479, align 2, !tbaa !24
  %div.2.i.i555 = sdiv i64 %sub.value.i.i547, 16777216
  %div.2.tr.i.i556 = trunc i64 %div.2.i.i555 to i8
  %conv12.3.i.i557 = and i8 %div.2.tr.i.i556, 127
  %div.3.i.i559 = sdiv i64 %sub.value.i.i547, 4294967296
  %value.addr.1.off.i.i560 = add i64 %div.3.i.i559, 1
  %value.addr.1.cmp.i.i561 = icmp ugt i64 %value.addr.1.off.i.i560, 1
  br i1 %value.addr.1.cmp.i.i561, label %__store_gcov_type.exit.thread2.i562, label %if.else.i566

__store_gcov_type.exit.thread2.i562:              ; preds = %cond.end330
  store i8 %conv12.3.i.i557, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  br label %__write_long.exit567

if.else.i566:                                     ; preds = %cond.end330
  %cond.i.i563 = select i1 %cmp.i.i545, i8 -128, i8 0
  %or.i.i564 = or i8 %conv12.3.i.i557, %cond.i.i563
  store i8 %or.i.i564, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  %call2.i565 = call i64 @fwrite(i8* %232, i64 1, i64 4, %struct._IO_FILE* %249) #5
  %.pre782 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  br label %__write_long.exit567

__write_long.exit567:                             ; preds = %__store_gcov_type.exit.thread2.i562, %if.else.i566
  %250 = phi %struct._IO_FILE* [ %249, %__store_gcov_type.exit.thread2.i562 ], [ %.pre782, %if.else.i566 ]
  call void @llvm.lifetime.end(i64 10, i8* %232) #5
  call void @llvm.lifetime.start(i64 10, i8* %232) #5
  %conv12.i.i571 = trunc i32 %247 to i8
  store i8 %conv12.i.i571, i8* %232, align 4, !tbaa !24
  store i8 0, i8* %arrayidx.1.i.i476, align 1, !tbaa !24
  store i8 0, i8* %arrayidx.2.i.i479, align 2, !tbaa !24
  store i8 0, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  %call2.i586 = call i64 @fwrite(i8* %232, i64 1, i64 4, %struct._IO_FILE* %250) #5
  br label %for.inc337

for.inc337:                                       ; preds = %__write_long.exit567, %for.body286
  %succ_next338 = getelementptr inbounds %struct.edge_def* %e264.1704, i64 0, i32 1
  %e264.1 = load %struct.edge_def** %succ_next338, align 8
  %tobool285 = icmp eq %struct.edge_def* %e264.1, null
  br i1 %tobool285, label %for.inc340, label %for.body286

for.inc340:                                       ; preds = %for.inc337, %for.cond284.preheader
  %indvars.iv.next763 = add nuw nsw i64 %indvars.iv762, 1
  %251 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add245 = add nsw i32 %251, 1
  %252 = trunc i64 %indvars.iv.next763 to i32
  %cmp246 = icmp slt i32 %252, %add245
  br i1 %cmp246, label %for.body248, label %for.end342

for.end342:                                       ; preds = %for.inc340, %for.cond244.preheader
  %253 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %232) #5
  store i8 1, i8* %232, align 4, !tbaa !24
  store i8 0, i8* %arrayidx.1.i.i476, align 1, !tbaa !24
  store i8 0, i8* %arrayidx.2.i.i479, align 2, !tbaa !24
  store i8 0, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  %call2.i594 = call i64 @fwrite(i8* %232, i64 1, i64 4, %struct._IO_FILE* %253) #5
  call void @llvm.lifetime.end(i64 10, i8* %232) #5
  %254 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %232) #5
  %255 = bitcast [10 x i8]* %c.i to i32*
  store i32 0, i32* %255, align 4
  %call2.i601 = call i64 @fwrite(i8* %232, i64 1, i64 4, %struct._IO_FILE* %254) #5
  call void @llvm.lifetime.end(i64 10, i8* %232) #5
  %256 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %232) #5
  store i8 1, i8* %232, align 4, !tbaa !24
  store i8 0, i8* %arrayidx.1.i.i476, align 1, !tbaa !24
  store i8 0, i8* %arrayidx.2.i.i479, align 2, !tbaa !24
  store i8 0, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  %call2.i608 = call i64 @fwrite(i8* %232, i64 1, i64 4, %struct._IO_FILE* %256) #5
  call void @llvm.lifetime.end(i64 10, i8* %232) #5
  %257 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %232) #5
  store i8 1, i8* %232, align 4, !tbaa !24
  store i8 0, i8* %arrayidx.1.i.i476, align 1, !tbaa !24
  store i8 0, i8* %arrayidx.2.i.i479, align 2, !tbaa !24
  store i8 -128, i8* %arrayidx.3.i.i483, align 1, !tbaa !24
  %call2.i615 = call i64 @fwrite(i8* %232, i64 1, i64 4, %struct._IO_FILE* %257) #5
  call void @llvm.lifetime.end(i64 10, i8* %232) #5
  br label %if.end347

if.end347:                                        ; preds = %if.end235, %for.end342
  %258 = load i32* @flag_branch_probabilities, align 4, !tbaa !1
  %tobool348 = icmp eq i32 %258, 0
  br i1 %tobool348, label %if.end350, label %if.then349

if.then349:                                       ; preds = %if.end347
  %259 = bitcast [20 x i32]* %hist_br_prob.i to i8*
  call void @llvm.lifetime.start(i64 80, i8* %259) #5
  call void @alloc_aux_for_blocks(i32 24) #5
  %260 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add790.i = add nsw i32 %260, 2
  %cmp791.i = icmp sgt i32 %add790.i, 0
  br i1 %cmp791.i, label %for.body.i617.preheader, label %for.end30.thread.i

for.body.i617.preheader:                          ; preds = %if.then349
  %261 = add nsw i32 %260, 1
  br label %for.body.i617

for.end30.thread.i:                               ; preds = %if.then349
  %262 = load i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !25
  %succ_count31829.i = getelementptr inbounds i8* %262, i64 8
  %263 = bitcast i8* %succ_count31829.i to i64*
  store i64 2, i64* %263, align 8, !tbaa !30
  %264 = load i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 10), align 8, !tbaa !25
  %pred_count32830.i = getelementptr inbounds i8* %264, i64 16
  %265 = bitcast i8* %pred_count32830.i to i64*
  store i64 2, i64* %265, align 8, !tbaa !32
  br label %for.end99.i

for.body.i617:                                    ; preds = %for.body.i617.preheader, %for.inc28.i
  %indvars.iv823.i = phi i64 [ %indvars.iv.next824.i, %for.inc28.i ], [ 0, %for.body.i617.preheader ]
  %266 = trunc i64 %indvars.iv823.i to i32
  %cmp1.i = icmp eq i32 %266, 0
  br i1 %cmp1.i, label %cond.end7.i, label %cond.false.i

cond.false.i:                                     ; preds = %for.body.i617
  %cmp3.i = icmp eq i32 %266, %261
  br i1 %cmp3.i, label %cond.end7.i, label %cond.false5.i

cond.false5.i:                                    ; preds = %cond.false.i
  %267 = add nsw i64 %indvars.iv823.i, -1
  %268 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data.i618 = getelementptr inbounds %struct.varray_head_tag* %268, i64 0, i32 4
  %bb6.i = bitcast %union.varray_data_tag* %data.i618 to [1 x %struct.basic_block_def*]*
  %arrayidx.i619 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb6.i, i64 0, i64 %267
  %269 = load %struct.basic_block_def** %arrayidx.i619, align 8, !tbaa !5
  br label %cond.end7.i

cond.end7.i:                                      ; preds = %cond.false5.i, %cond.false.i, %for.body.i617
  %cond8.i = phi %struct.basic_block_def* [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %for.body.i617 ], [ %269, %cond.false5.i ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %cond.false.i ]
  %succ.i620 = getelementptr inbounds %struct.basic_block_def* %cond8.i, i64 0, i32 5
  %e.0784.i = load %struct.edge_def** %succ.i620, align 8
  %tobool785.i = icmp eq %struct.edge_def* %e.0784.i, null
  br i1 %tobool785.i, label %for.end.i, label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %cond.end7.i
  %aux12.i = getelementptr inbounds %struct.basic_block_def* %cond8.i, i64 0, i32 10
  br label %for.body10.i

for.body10.i:                                     ; preds = %for.inc.i, %for.body10.lr.ph.i
  %e.0786.i = phi %struct.edge_def* [ %e.0784.i, %for.body10.lr.ph.i ], [ %e.0.i, %for.inc.i ]
  %aux.i621 = getelementptr inbounds %struct.edge_def* %e.0786.i, i64 0, i32 5
  %270 = load i8** %aux.i621, align 8, !tbaa !23
  %bf.load.i622 = load i8* %270, align 4
  %bf.clear.i623 = and i8 %bf.load.i622, 4
  %tobool11.i = icmp eq i8 %bf.clear.i623, 0
  br i1 %tobool11.i, label %if.then.i624, label %for.inc.i

if.then.i624:                                     ; preds = %for.body10.i
  %271 = load i8** %aux12.i, align 8, !tbaa !25
  %succ_count.i = getelementptr inbounds i8* %271, i64 8
  %272 = bitcast i8* %succ_count.i to i64*
  %273 = load i64* %272, align 8, !tbaa !30
  %inc.i = add nsw i64 %273, 1
  store i64 %inc.i, i64* %272, align 8, !tbaa !30
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i624, %for.body10.i
  %succ_next.i625 = getelementptr inbounds %struct.edge_def* %e.0786.i, i64 0, i32 1
  %e.0.i = load %struct.edge_def** %succ_next.i625, align 8
  %tobool.i626 = icmp eq %struct.edge_def* %e.0.i, null
  br i1 %tobool.i626, label %for.end.i, label %for.body10.i

for.end.i:                                        ; preds = %for.inc.i, %cond.end7.i
  %pred.i627 = getelementptr inbounds %struct.basic_block_def* %cond8.i, i64 0, i32 4
  %e.1787.i = load %struct.edge_def** %pred.i627, align 8
  %tobool14788.i = icmp eq %struct.edge_def* %e.1787.i, null
  br i1 %tobool14788.i, label %for.inc28.i, label %for.body15.lr.ph.i

for.body15.lr.ph.i:                               ; preds = %for.end.i
  %aux23.i = getelementptr inbounds %struct.basic_block_def* %cond8.i, i64 0, i32 10
  br label %for.body15.i

for.body15.i:                                     ; preds = %for.inc26.i, %for.body15.lr.ph.i
  %e.1789.i = phi %struct.edge_def* [ %e.1787.i, %for.body15.lr.ph.i ], [ %e.1.i, %for.inc26.i ]
  %aux16.i = getelementptr inbounds %struct.edge_def* %e.1789.i, i64 0, i32 5
  %274 = load i8** %aux16.i, align 8, !tbaa !23
  %bf.load17.i628 = load i8* %274, align 4
  %bf.clear19.i = and i8 %bf.load17.i628, 4
  %tobool21.i = icmp eq i8 %bf.clear19.i, 0
  br i1 %tobool21.i, label %if.then22.i, label %for.inc26.i

if.then22.i:                                      ; preds = %for.body15.i
  %275 = load i8** %aux23.i, align 8, !tbaa !25
  %pred_count.i = getelementptr inbounds i8* %275, i64 16
  %276 = bitcast i8* %pred_count.i to i64*
  %277 = load i64* %276, align 8, !tbaa !32
  %inc24.i = add nsw i64 %277, 1
  store i64 %inc24.i, i64* %276, align 8, !tbaa !32
  br label %for.inc26.i

for.inc26.i:                                      ; preds = %if.then22.i, %for.body15.i
  %pred_next.i629 = getelementptr inbounds %struct.edge_def* %e.1789.i, i64 0, i32 0
  %e.1.i = load %struct.edge_def** %pred_next.i629, align 8
  %tobool14.i = icmp eq %struct.edge_def* %e.1.i, null
  br i1 %tobool14.i, label %for.inc28.i, label %for.body15.i

for.inc28.i:                                      ; preds = %for.inc26.i, %for.end.i
  %indvars.iv.next824.i = add nuw nsw i64 %indvars.iv823.i, 1
  %cmp.i630 = icmp slt i32 %266, %261
  br i1 %cmp.i630, label %for.body.i617, label %for.body36.lr.ph.i

for.body36.lr.ph.i:                               ; preds = %for.inc28.i
  %278 = load i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !25
  %succ_count31.i = getelementptr inbounds i8* %278, i64 8
  %279 = bitcast i8* %succ_count31.i to i64*
  store i64 2, i64* %279, align 8, !tbaa !30
  %280 = load i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 10), align 8, !tbaa !25
  %pred_count32.i = getelementptr inbounds i8* %280, i64 16
  %281 = bitcast i8* %pred_count32.i to i64*
  store i64 2, i64* %281, align 8, !tbaa !32
  %282 = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 0
  %arrayidx13.i.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 7
  %arrayidx13.1.i.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 6
  %arrayidx13.2.i.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 5
  %arrayidx13.3.i.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 4
  %arrayidx13.4.i.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 3
  %arrayidx13.5.i.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 2
  %arrayidx13.6.i.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 1
  br label %for.body36.i

for.body36.i:                                     ; preds = %for.inc97.i, %for.body36.lr.ph.i
  %indvars.iv820.i = phi i64 [ 0, %for.body36.lr.ph.i ], [ %indvars.iv.next821.i, %for.inc97.i ]
  %283 = phi i32 [ %260, %for.body36.lr.ph.i ], [ %314, %for.inc97.i ]
  %num_edges.0781.i = phi i32 [ 0, %for.body36.lr.ph.i ], [ %num_edges.1.lcssa.i, %for.inc97.i ]
  %284 = trunc i64 %indvars.iv820.i to i32
  %cmp38.i = icmp eq i32 %284, 0
  br i1 %cmp38.i, label %cond.end52.i, label %cond.false40.i

cond.false40.i:                                   ; preds = %for.body36.i
  %add41.i = add nsw i32 %283, 1
  %cmp42.i = icmp eq i32 %284, %add41.i
  br i1 %cmp42.i, label %cond.end52.i, label %cond.false44.i

cond.false44.i:                                   ; preds = %cond.false40.i
  %285 = add nsw i64 %indvars.iv820.i, -1
  %286 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data47.i = getelementptr inbounds %struct.varray_head_tag* %286, i64 0, i32 4
  %bb48.i = bitcast %union.varray_data_tag* %data47.i to [1 x %struct.basic_block_def*]*
  %arrayidx49.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb48.i, i64 0, i64 %285
  %287 = load %struct.basic_block_def** %arrayidx49.i, align 8, !tbaa !5
  br label %cond.end52.i

cond.end52.i:                                     ; preds = %cond.false44.i, %cond.false40.i, %for.body36.i
  %cond53.i = phi %struct.basic_block_def* [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %for.body36.i ], [ %287, %cond.false44.i ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %cond.false40.i ]
  %succ55.i = getelementptr inbounds %struct.basic_block_def* %cond53.i, i64 0, i32 5
  %e54.0774.i = load %struct.edge_def** %succ55.i, align 8
  %tobool57775.i = icmp eq %struct.edge_def* %e54.0774.i, null
  br i1 %tobool57775.i, label %for.inc97.i, label %for.body58.lr.ph.i

for.body58.lr.ph.i:                               ; preds = %cond.end52.i
  %aux80.i = getelementptr inbounds %struct.basic_block_def* %cond53.i, i64 0, i32 10
  %index.i = getelementptr inbounds %struct.basic_block_def* %cond53.i, i64 0, i32 11
  br label %for.body58.i

for.body58.i:                                     ; preds = %for.inc94.i, %for.body58.lr.ph.i
  %e54.0777.i = phi %struct.edge_def* [ %e54.0774.i, %for.body58.lr.ph.i ], [ %e54.0.i, %for.inc94.i ]
  %num_edges.1776.i = phi i32 [ %num_edges.0781.i, %for.body58.lr.ph.i ], [ %num_edges.2.i, %for.inc94.i ]
  %aux59.i = getelementptr inbounds %struct.edge_def* %e54.0777.i, i64 0, i32 5
  %288 = load i8** %aux59.i, align 8, !tbaa !23
  %bf.load60.i = load i8* %288, align 4
  %289 = and i8 %bf.load60.i, 6
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %if.then71.i, label %for.inc94.i

if.then71.i:                                      ; preds = %for.body58.i
  %inc72.i = add nsw i32 %num_edges.1776.i, 1
  %291 = load %struct._IO_FILE** @da_file, align 8, !tbaa !5
  %tobool73.i = icmp eq %struct._IO_FILE* %291, null
  br i1 %tobool73.i, label %if.else.i631, label %if.then74.i

if.then74.i:                                      ; preds = %if.then71.i
  call void @llvm.lifetime.start(i64 10, i8* %282) #5
  %call.i.i = call i64 @fread(i8* %282, i64 1, i64 8, %struct._IO_FILE* %291) #5
  %cmp1.i.i = icmp eq i64 %call.i.i, 8
  br i1 %cmp1.i.i, label %if.else.i.i, label %__read_gcov_type.exit.i

if.else.i.i:                                      ; preds = %if.then74.i
  %292 = load i8* %arrayidx13.i.i.i, align 1, !tbaa !24
  %conv142.i.i.i = zext i8 %292 to i64
  %and20.i.i.i = shl nuw nsw i64 %conv142.i.i.i, 8
  %mul.1.i.i.i = and i64 %and20.i.i.i, 32512
  %293 = load i8* %arrayidx13.1.i.i.i, align 2, !tbaa !24
  %conv142.1.i.i.i = zext i8 %293 to i64
  %add.1.i.i.i = or i64 %mul.1.i.i.i, %conv142.1.i.i.i
  %mul.2.i.i.i = shl nuw nsw i64 %add.1.i.i.i, 8
  %294 = load i8* %arrayidx13.2.i.i.i, align 1, !tbaa !24
  %conv142.2.i.i.i = zext i8 %294 to i64
  %add.2.i.i.i = or i64 %mul.2.i.i.i, %conv142.2.i.i.i
  %mul.3.i.i.i = shl nuw nsw i64 %add.2.i.i.i, 8
  %295 = load i8* %arrayidx13.3.i.i.i, align 4, !tbaa !24
  %conv142.3.i.i.i = zext i8 %295 to i64
  %add.3.i.i.i = or i64 %mul.3.i.i.i, %conv142.3.i.i.i
  %mul.4.i.i.i = shl nuw nsw i64 %add.3.i.i.i, 8
  %296 = load i8* %arrayidx13.4.i.i.i, align 1, !tbaa !24
  %conv142.4.i.i.i = zext i8 %296 to i64
  %add.4.i.i.i = or i64 %mul.4.i.i.i, %conv142.4.i.i.i
  %mul.5.i.i.i = shl nsw i64 %add.4.i.i.i, 8
  %297 = load i8* %arrayidx13.5.i.i.i, align 2, !tbaa !24
  %conv142.5.i.i.i = zext i8 %297 to i64
  %add.5.i.i.i = or i64 %mul.5.i.i.i, %conv142.5.i.i.i
  %mul.6.i.i.i = shl nsw i64 %add.5.i.i.i, 8
  %298 = load i8* %arrayidx13.6.i.i.i, align 1, !tbaa !24
  %conv142.6.i.i.i = zext i8 %298 to i64
  %add.6.i.i.i = or i64 %mul.6.i.i.i, %conv142.6.i.i.i
  %mul.7.i.i.i = shl nsw i64 %add.6.i.i.i, 8
  %299 = load i8* %282, align 4, !tbaa !24
  %conv142.7.i.i.i = zext i8 %299 to i64
  %add.7.i.i.i = or i64 %mul.7.i.i.i, %conv142.7.i.i.i
  %tobool29.i.i.i = icmp slt i8 %292, 0
  %cmp30.i.i.i = icmp sgt i64 %add.7.i.i.i, 0
  %or.cond.i.i.i = and i1 %tobool29.i.i.i, %cmp30.i.i.i
  %sub33.i.i.i = sub nsw i64 0, %add.7.i.i.i
  %sub33.value.0.i.i.i = select i1 %or.cond.i.i.i, i64 %sub33.i.i.i, i64 %add.7.i.i.i
  br label %__read_gcov_type.exit.i

__read_gcov_type.exit.i:                          ; preds = %if.else.i.i, %if.then74.i
  %300 = phi i64 [ 0, %if.then74.i ], [ %sub33.value.0.i.i.i, %if.else.i.i ]
  call void @llvm.lifetime.end(i64 10, i8* %282) #5
  %count.i = getelementptr inbounds %struct.edge_def* %e54.0777.i, i64 0, i32 8
  store i64 %300, i64* %count.i, align 8, !tbaa !22
  %.pre828.i = load i8** %aux59.i, align 8, !tbaa !23
  br label %if.end76.i

if.else.i631:                                     ; preds = %if.then71.i
  %count75.i = getelementptr inbounds %struct.edge_def* %e54.0777.i, i64 0, i32 8
  store i64 0, i64* %count75.i, align 8, !tbaa !22
  br label %if.end76.i

if.end76.i:                                       ; preds = %if.else.i631, %__read_gcov_type.exit.i
  %301 = phi i8* [ %288, %if.else.i631 ], [ %.pre828.i, %__read_gcov_type.exit.i ]
  %bf.load78.i = load i8* %301, align 4
  %bf.set.i632 = or i8 %bf.load78.i, 1
  store i8 %bf.set.i632, i8* %301, align 4
  %302 = load i8** %aux80.i, align 8, !tbaa !25
  %succ_count81.i = getelementptr inbounds i8* %302, i64 8
  %303 = bitcast i8* %succ_count81.i to i64*
  %304 = load i64* %303, align 8, !tbaa !30
  %dec.i = add nsw i64 %304, -1
  store i64 %dec.i, i64* %303, align 8, !tbaa !30
  %dest.i633 = getelementptr inbounds %struct.edge_def* %e54.0777.i, i64 0, i32 3
  %305 = load %struct.basic_block_def** %dest.i633, align 8, !tbaa !14
  %aux82.i = getelementptr inbounds %struct.basic_block_def* %305, i64 0, i32 10
  %306 = load i8** %aux82.i, align 8, !tbaa !25
  %pred_count83.i = getelementptr inbounds i8* %306, i64 16
  %307 = bitcast i8* %pred_count83.i to i64*
  %308 = load i64* %307, align 8, !tbaa !32
  %dec84.i = add nsw i64 %308, -1
  store i64 %dec84.i, i64* %307, align 8, !tbaa !32
  %309 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool85.i = icmp eq %struct._IO_FILE* %309, null
  br i1 %tobool85.i, label %for.inc94.i, label %if.then86.i

if.then86.i:                                      ; preds = %if.end76.i
  %310 = load i32* %index.i, align 4, !tbaa !18
  %index88.i = getelementptr inbounds %struct.basic_block_def* %305, i64 0, i32 11
  %311 = load i32* %index88.i, align 4, !tbaa !18
  %call89.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %309, i8* getelementptr inbounds ([33 x i8]* @.str34, i64 0, i64 0), i32 %310, i32 %311) #5
  %312 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %count90.i = getelementptr inbounds %struct.edge_def* %e54.0777.i, i64 0, i32 8
  %313 = load i64* %count90.i, align 8, !tbaa !22
  %call91.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %312, i8* getelementptr inbounds ([5 x i8]* @.str35, i64 0, i64 0), i64 %313) #5
  br label %for.inc94.i

for.inc94.i:                                      ; preds = %if.then86.i, %if.end76.i, %for.body58.i
  %num_edges.2.i = phi i32 [ %num_edges.1776.i, %for.body58.i ], [ %inc72.i, %if.then86.i ], [ %inc72.i, %if.end76.i ]
  %succ_next95.i = getelementptr inbounds %struct.edge_def* %e54.0777.i, i64 0, i32 1
  %e54.0.i = load %struct.edge_def** %succ_next95.i, align 8
  %tobool57.i = icmp eq %struct.edge_def* %e54.0.i, null
  br i1 %tobool57.i, label %for.cond56.for.inc97_crit_edge.i, label %for.body58.i

for.cond56.for.inc97_crit_edge.i:                 ; preds = %for.inc94.i
  %.pre827.i = load i32* @n_basic_blocks, align 4, !tbaa !1
  br label %for.inc97.i

for.inc97.i:                                      ; preds = %for.cond56.for.inc97_crit_edge.i, %cond.end52.i
  %314 = phi i32 [ %.pre827.i, %for.cond56.for.inc97_crit_edge.i ], [ %283, %cond.end52.i ]
  %num_edges.1.lcssa.i = phi i32 [ %num_edges.2.i, %for.cond56.for.inc97_crit_edge.i ], [ %num_edges.0781.i, %cond.end52.i ]
  %indvars.iv.next821.i = add nuw nsw i64 %indvars.iv820.i, 1
  %315 = add nsw i32 %314, 1
  %cmp35.i = icmp slt i32 %284, %315
  br i1 %cmp35.i, label %for.body36.i, label %for.end99.i

for.end99.i:                                      ; preds = %for.inc97.i, %for.end30.thread.i
  %num_edges.0.lcssa.i = phi i32 [ 0, %for.end30.thread.i ], [ %num_edges.1.lcssa.i, %for.inc97.i ]
  %316 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool100.i = icmp eq %struct._IO_FILE* %316, null
  br i1 %tobool100.i, label %while.body.i, label %if.then101.i

if.then101.i:                                     ; preds = %for.end99.i
  %call102.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %316, i8* getelementptr inbounds ([22 x i8]* @.str36, i64 0, i64 0), i32 %num_edges.0.lcssa.i) #5
  br label %while.body.i

while.cond.loopexit.i:                            ; preds = %for.inc283.i
  %tobool104.i = icmp eq i32 %changes.4.i, 0
  br i1 %tobool104.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %if.then101.i, %for.end99.i, %while.cond.loopexit.i
  %passes.0773.i = phi i32 [ %inc105.i, %while.cond.loopexit.i ], [ 0, %for.end99.i ], [ 0, %if.then101.i ]
  %inc105.i = add nsw i32 %passes.0773.i, 1
  %317 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp108769.i = icmp sgt i32 %317, -2
  br i1 %cmp108769.i, label %for.body109.lr.ph.i, label %while.end.i

for.body109.lr.ph.i:                              ; preds = %while.body.i
  %add106.i = add nsw i32 %317, 1
  %318 = sext i32 %add106.i to i64
  br label %for.body109.i

for.body109.i:                                    ; preds = %for.inc283.i, %for.body109.lr.ph.i
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc283.i ], [ %318, %for.body109.lr.ph.i ]
  %i.2771.i = phi i32 [ %dec284.i, %for.inc283.i ], [ %add106.i, %for.body109.lr.ph.i ]
  %changes.1770.i = phi i32 [ %changes.4.i, %for.inc283.i ], [ 0, %for.body109.lr.ph.i ]
  %319 = trunc i64 %indvars.iv to i32
  %cmp111.i = icmp eq i32 %319, 0
  br i1 %cmp111.i, label %cond.end125.i, label %cond.false113.i

cond.false113.i:                                  ; preds = %for.body109.i
  %320 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add114.i = add nsw i32 %320, 1
  %cmp115.i = icmp eq i32 %319, %add114.i
  br i1 %cmp115.i, label %cond.end125.i, label %cond.false117.i

cond.false117.i:                                  ; preds = %cond.false113.i
  %sub118.i = add nsw i32 %i.2771.i, -1
  %idxprom119.i = sext i32 %sub118.i to i64
  %321 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data120.i = getelementptr inbounds %struct.varray_head_tag* %321, i64 0, i32 4
  %bb121.i = bitcast %union.varray_data_tag* %data120.i to [1 x %struct.basic_block_def*]*
  %arrayidx122.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb121.i, i64 0, i64 %idxprom119.i
  %322 = load %struct.basic_block_def** %arrayidx122.i, align 8, !tbaa !5
  br label %cond.end125.i

cond.end125.i:                                    ; preds = %cond.false117.i, %cond.false113.i, %for.body109.i
  %cond126.i = phi %struct.basic_block_def* [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %for.body109.i ], [ %322, %cond.false117.i ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %cond.false113.i ]
  %aux127.i = getelementptr inbounds %struct.basic_block_def* %cond126.i, i64 0, i32 10
  %323 = load i8** %aux127.i, align 8, !tbaa !25
  %bf.load128.i = load i8* %323, align 8
  %bf.clear129.i = and i8 %bf.load128.i, 1
  %tobool131.i = icmp eq i8 %bf.clear129.i, 0
  br i1 %tobool131.i, label %if.then132.i, label %if.end171.i

if.then132.i:                                     ; preds = %cond.end125.i
  %succ_count133.i = getelementptr inbounds i8* %323, i64 8
  %324 = bitcast i8* %succ_count133.i to i64*
  %325 = load i64* %324, align 8, !tbaa !30
  %cmp134.i = icmp eq i64 %325, 0
  br i1 %cmp134.i, label %if.then135.i, label %if.else150.i

if.then135.i:                                     ; preds = %if.then132.i
  %succ137.i = getelementptr inbounds %struct.basic_block_def* %cond126.i, i64 0, i32 5
  %e136.0748.i = load %struct.edge_def** %succ137.i, align 8
  %tobool139749.i = icmp eq %struct.edge_def* %e136.0748.i, null
  br i1 %tobool139749.i, label %for.end145.i, label %for.body140.i

for.body140.i:                                    ; preds = %if.then135.i, %for.body140.i
  %e136.0751.i = phi %struct.edge_def* [ %e136.0.i, %for.body140.i ], [ %e136.0748.i, %if.then135.i ]
  %total.0750.i = phi i64 [ %add142.i, %for.body140.i ], [ 0, %if.then135.i ]
  %count141.i = getelementptr inbounds %struct.edge_def* %e136.0751.i, i64 0, i32 8
  %326 = load i64* %count141.i, align 8, !tbaa !22
  %add142.i = add nsw i64 %326, %total.0750.i
  %succ_next144.i = getelementptr inbounds %struct.edge_def* %e136.0751.i, i64 0, i32 1
  %e136.0.i = load %struct.edge_def** %succ_next144.i, align 8
  %tobool139.i = icmp eq %struct.edge_def* %e136.0.i, null
  br i1 %tobool139.i, label %for.end145.i, label %for.body140.i

for.end145.i:                                     ; preds = %for.body140.i, %if.then135.i
  %total.0.lcssa.i = phi i64 [ 0, %if.then135.i ], [ %add142.i, %for.body140.i ]
  %count146.i = getelementptr inbounds %struct.basic_block_def* %cond126.i, i64 0, i32 13
  store i64 %total.0.lcssa.i, i64* %count146.i, align 8, !tbaa !33
  %bf.load147.i = load i8* %323, align 8
  %bf.set149.i = or i8 %bf.load147.i, 1
  store i8 %bf.set149.i, i8* %323, align 8
  br label %if.end171.i

if.else150.i:                                     ; preds = %if.then132.i
  %pred_count151.i = getelementptr inbounds i8* %323, i64 16
  %327 = bitcast i8* %pred_count151.i to i64*
  %328 = load i64* %327, align 8, !tbaa !32
  %cmp152.i = icmp eq i64 %328, 0
  br i1 %cmp152.i, label %if.then153.i, label %if.end171.i

if.then153.i:                                     ; preds = %if.else150.i
  %pred156.i = getelementptr inbounds %struct.basic_block_def* %cond126.i, i64 0, i32 4
  %e154.0743.i = load %struct.edge_def** %pred156.i, align 8
  %tobool158744.i = icmp eq %struct.edge_def* %e154.0743.i, null
  br i1 %tobool158744.i, label %for.end164.i, label %for.body159.i

for.body159.i:                                    ; preds = %if.then153.i, %for.body159.i
  %e154.0746.i = phi %struct.edge_def* [ %e154.0.i, %for.body159.i ], [ %e154.0743.i, %if.then153.i ]
  %total155.0745.i = phi i64 [ %add161.i, %for.body159.i ], [ 0, %if.then153.i ]
  %count160.i = getelementptr inbounds %struct.edge_def* %e154.0746.i, i64 0, i32 8
  %329 = load i64* %count160.i, align 8, !tbaa !22
  %add161.i = add nsw i64 %329, %total155.0745.i
  %pred_next163.i = getelementptr inbounds %struct.edge_def* %e154.0746.i, i64 0, i32 0
  %e154.0.i = load %struct.edge_def** %pred_next163.i, align 8
  %tobool158.i = icmp eq %struct.edge_def* %e154.0.i, null
  br i1 %tobool158.i, label %for.end164.i, label %for.body159.i

for.end164.i:                                     ; preds = %for.body159.i, %if.then153.i
  %total155.0.lcssa.i = phi i64 [ 0, %if.then153.i ], [ %add161.i, %for.body159.i ]
  %count165.i = getelementptr inbounds %struct.basic_block_def* %cond126.i, i64 0, i32 13
  store i64 %total155.0.lcssa.i, i64* %count165.i, align 8, !tbaa !33
  %bf.load166.i = load i8* %323, align 8
  %bf.set168.i = or i8 %bf.load166.i, 1
  store i8 %bf.set168.i, i8* %323, align 8
  br label %if.end171.i

if.end171.i:                                      ; preds = %for.end164.i, %if.else150.i, %for.end145.i, %cond.end125.i
  %bf.load172.i = phi i8 [ %bf.load128.i, %cond.end125.i ], [ %bf.set149.i, %for.end145.i ], [ %bf.set168.i, %for.end164.i ], [ %bf.load128.i, %if.else150.i ]
  %changes.2.i = phi i32 [ %changes.1770.i, %cond.end125.i ], [ 1, %for.end145.i ], [ 1, %for.end164.i ], [ %changes.1770.i, %if.else150.i ]
  %bf.clear173.i = and i8 %bf.load172.i, 1
  %tobool175.i = icmp eq i8 %bf.clear173.i, 0
  br i1 %tobool175.i, label %for.inc283.i, label %if.then176.i

if.then176.i:                                     ; preds = %if.end171.i
  %succ_count177.i = getelementptr inbounds i8* %323, i64 8
  %330 = bitcast i8* %succ_count177.i to i64*
  %331 = load i64* %330, align 8, !tbaa !30
  %cmp178.i = icmp eq i64 %331, 1
  br i1 %cmp178.i, label %if.then179.i, label %if.end228.i

if.then179.i:                                     ; preds = %if.then176.i
  %succ182.i = getelementptr inbounds %struct.basic_block_def* %cond126.i, i64 0, i32 5
  %e180.0753.i = load %struct.edge_def** %succ182.i, align 8
  %tobool184754.i = icmp eq %struct.edge_def* %e180.0753.i, null
  br i1 %tobool184754.i, label %if.then215.i, label %for.body185.i

for.body185.i:                                    ; preds = %if.then179.i, %for.body185.i
  %e180.0756.i = phi %struct.edge_def* [ %e180.0.i, %for.body185.i ], [ %e180.0753.i, %if.then179.i ]
  %total181.0755.i = phi i64 [ %add187.i, %for.body185.i ], [ 0, %if.then179.i ]
  %count186.i = getelementptr inbounds %struct.edge_def* %e180.0756.i, i64 0, i32 8
  %332 = load i64* %count186.i, align 8, !tbaa !22
  %add187.i = add nsw i64 %332, %total181.0755.i
  %succ_next189.i = getelementptr inbounds %struct.edge_def* %e180.0756.i, i64 0, i32 1
  %e180.0.i = load %struct.edge_def** %succ_next189.i, align 8
  %tobool184.i = icmp eq %struct.edge_def* %e180.0.i, null
  br i1 %tobool184.i, label %for.body194.i, label %for.body185.i

for.cond192.i:                                    ; preds = %for.body194.i
  %succ_next210.i = getelementptr inbounds %struct.edge_def* %e180.1760.i, i64 0, i32 1
  %e180.1.i = load %struct.edge_def** %succ_next210.i, align 8
  %tobool193.i = icmp eq %struct.edge_def* %e180.1.i, null
  br i1 %tobool193.i, label %if.then215.i, label %for.body194.i

for.body194.i:                                    ; preds = %for.body185.i, %for.cond192.i
  %e180.1760.i = phi %struct.edge_def* [ %e180.1.i, %for.cond192.i ], [ %e180.0753.i, %for.body185.i ]
  %aux195.i = getelementptr inbounds %struct.edge_def* %e180.1760.i, i64 0, i32 5
  %333 = load i8** %aux195.i, align 8, !tbaa !23
  %bf.load196.i = load i8* %333, align 4
  %334 = and i8 %bf.load196.i, 5
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %if.end216.i, label %for.cond192.i

if.then215.i:                                     ; preds = %if.then179.i, %for.cond192.i
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 352, i8* getelementptr inbounds ([29 x i8]* @__FUNCTION__.compute_branch_probabilities, i64 0, i64 0)) #6
  unreachable

if.end216.i:                                      ; preds = %for.body194.i
  %count212.i = getelementptr inbounds %struct.basic_block_def* %cond126.i, i64 0, i32 13
  %336 = load i64* %count212.i, align 8, !tbaa !33
  %sub213.i = sub nsw i64 %336, %add187.i
  %bf.set220.i = or i8 %bf.load196.i, 1
  store i8 %bf.set220.i, i8* %333, align 4
  %count221.i = getelementptr inbounds %struct.edge_def* %e180.1760.i, i64 0, i32 8
  store i64 %sub213.i, i64* %count221.i, align 8, !tbaa !22
  %337 = load i64* %330, align 8, !tbaa !30
  %dec223.i = add nsw i64 %337, -1
  store i64 %dec223.i, i64* %330, align 8, !tbaa !30
  %dest224.i = getelementptr inbounds %struct.edge_def* %e180.1760.i, i64 0, i32 3
  %338 = load %struct.basic_block_def** %dest224.i, align 8, !tbaa !14
  %aux225.i = getelementptr inbounds %struct.basic_block_def* %338, i64 0, i32 10
  %339 = load i8** %aux225.i, align 8, !tbaa !25
  %pred_count226.i = getelementptr inbounds i8* %339, i64 16
  %340 = bitcast i8* %pred_count226.i to i64*
  %341 = load i64* %340, align 8, !tbaa !32
  %dec227.i = add nsw i64 %341, -1
  store i64 %dec227.i, i64* %340, align 8, !tbaa !32
  br label %if.end228.i

if.end228.i:                                      ; preds = %if.end216.i, %if.then176.i
  %changes.3.i = phi i32 [ 1, %if.end216.i ], [ %changes.2.i, %if.then176.i ]
  %pred_count229.i = getelementptr inbounds i8* %323, i64 16
  %342 = bitcast i8* %pred_count229.i to i64*
  %343 = load i64* %342, align 8, !tbaa !32
  %cmp230.i = icmp eq i64 %343, 1
  br i1 %cmp230.i, label %if.then231.i, label %for.inc283.i

if.then231.i:                                     ; preds = %if.end228.i
  %pred234.i = getelementptr inbounds %struct.basic_block_def* %cond126.i, i64 0, i32 4
  %e232.0761.i = load %struct.edge_def** %pred234.i, align 8
  %tobool236762.i = icmp eq %struct.edge_def* %e232.0761.i, null
  br i1 %tobool236762.i, label %if.then269.i, label %for.body237.i

for.body237.i:                                    ; preds = %if.then231.i, %for.body237.i
  %e232.0764.i = phi %struct.edge_def* [ %e232.0.i, %for.body237.i ], [ %e232.0761.i, %if.then231.i ]
  %total233.0763.i = phi i64 [ %add239.i, %for.body237.i ], [ 0, %if.then231.i ]
  %count238.i = getelementptr inbounds %struct.edge_def* %e232.0764.i, i64 0, i32 8
  %344 = load i64* %count238.i, align 8, !tbaa !22
  %add239.i = add nsw i64 %344, %total233.0763.i
  %pred_next241.i = getelementptr inbounds %struct.edge_def* %e232.0764.i, i64 0, i32 0
  %e232.0.i = load %struct.edge_def** %pred_next241.i, align 8
  %tobool236.i = icmp eq %struct.edge_def* %e232.0.i, null
  br i1 %tobool236.i, label %for.body246.i, label %for.body237.i

for.cond244.i:                                    ; preds = %for.body246.i
  %pred_next262.i = getelementptr inbounds %struct.edge_def* %e232.1768.i, i64 0, i32 0
  %e232.1.i = load %struct.edge_def** %pred_next262.i, align 8
  %tobool245.i = icmp eq %struct.edge_def* %e232.1.i, null
  br i1 %tobool245.i, label %if.then269.i, label %for.body246.i

for.body246.i:                                    ; preds = %for.body237.i, %for.cond244.i
  %e232.1768.i = phi %struct.edge_def* [ %e232.1.i, %for.cond244.i ], [ %e232.0761.i, %for.body237.i ]
  %aux247.i = getelementptr inbounds %struct.edge_def* %e232.1768.i, i64 0, i32 5
  %345 = load i8** %aux247.i, align 8, !tbaa !23
  %bf.load248.i = load i8* %345, align 4
  %346 = and i8 %bf.load248.i, 5
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %if.end270.i, label %for.cond244.i

if.then269.i:                                     ; preds = %if.then231.i, %for.cond244.i
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 379, i8* getelementptr inbounds ([29 x i8]* @__FUNCTION__.compute_branch_probabilities, i64 0, i64 0)) #6
  unreachable

if.end270.i:                                      ; preds = %for.body246.i
  %count266702.i = getelementptr inbounds %struct.edge_def* %e232.1768.i, i64 0, i32 8
  %count264.i = getelementptr inbounds %struct.basic_block_def* %cond126.i, i64 0, i32 13
  %348 = load i64* %count264.i, align 8, !tbaa !33
  %349 = load i64* %count266702.i, align 8, !tbaa !22
  %sub265.i = sub i64 %348, %add239.i
  %add267.i = add nsw i64 %sub265.i, %349
  %bf.set274.i = or i8 %bf.load248.i, 1
  store i8 %bf.set274.i, i8* %345, align 4
  store i64 %add267.i, i64* %count266702.i, align 8, !tbaa !22
  %350 = load i64* %342, align 8, !tbaa !32
  %dec277.i = add nsw i64 %350, -1
  store i64 %dec277.i, i64* %342, align 8, !tbaa !32
  %src.i634 = getelementptr inbounds %struct.edge_def* %e232.1768.i, i64 0, i32 2
  %351 = load %struct.basic_block_def** %src.i634, align 8, !tbaa !17
  %aux278.i = getelementptr inbounds %struct.basic_block_def* %351, i64 0, i32 10
  %352 = load i8** %aux278.i, align 8, !tbaa !25
  %succ_count279.i = getelementptr inbounds i8* %352, i64 8
  %353 = bitcast i8* %succ_count279.i to i64*
  %354 = load i64* %353, align 8, !tbaa !30
  %dec280.i = add nsw i64 %354, -1
  store i64 %dec280.i, i64* %353, align 8, !tbaa !30
  br label %for.inc283.i

for.inc283.i:                                     ; preds = %if.end270.i, %if.end228.i, %if.end171.i
  %changes.4.i = phi i32 [ 1, %if.end270.i ], [ %changes.3.i, %if.end228.i ], [ %changes.2.i, %if.end171.i ]
  %dec284.i = add nsw i32 %i.2771.i, -1
  %cmp108.i = icmp sgt i32 %319, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %cmp108.i, label %for.body109.i, label %while.cond.loopexit.i

while.end.i:                                      ; preds = %while.body.i, %while.cond.loopexit.i
  %355 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool286.i = icmp eq %struct._IO_FILE* %355, null
  br i1 %tobool286.i, label %if.end288.thread.i, label %if.end288.i

if.end288.thread.i:                               ; preds = %while.end.i
  %356 = load i32* @total_num_passes, align 4, !tbaa !1
  %add289704.i = add nsw i32 %356, %inc105.i
  store i32 %add289704.i, i32* @total_num_passes, align 4, !tbaa !1
  br label %for.cond294.preheader.i

if.end288.i:                                      ; preds = %while.end.i
  call void @dump_flow_info(%struct._IO_FILE* %355) #5
  %.pr.i = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %357 = load i32* @total_num_passes, align 4, !tbaa !1
  %add289.i = add nsw i32 %357, %inc105.i
  store i32 %add289.i, i32* @total_num_passes, align 4, !tbaa !1
  %tobool290.i = icmp eq %struct._IO_FILE* %.pr.i, null
  br i1 %tobool290.i, label %for.cond294.preheader.i, label %if.then291.i

if.then291.i:                                     ; preds = %if.end288.i
  %call292.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %.pr.i, i8* getelementptr inbounds ([32 x i8]* @.str37, i64 0, i64 0), i32 %inc105.i) #5
  br label %for.cond294.preheader.i

for.cond294.preheader.i:                          ; preds = %if.then291.i, %if.end288.i, %if.end288.thread.i
  %358 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp295741.i = icmp sgt i32 %358, 0
  br i1 %cmp295741.i, label %for.body296.lr.ph.i, label %for.cond313.preheader.i

for.body296.lr.ph.i:                              ; preds = %for.cond294.preheader.i
  %359 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data299.i = getelementptr inbounds %struct.varray_head_tag* %359, i64 0, i32 4
  %bb300.i = bitcast %union.varray_data_tag* %data299.i to [1 x %struct.basic_block_def*]*
  br label %for.body296.i

for.cond294.i:                                    ; preds = %lor.lhs.false.i
  %360 = trunc i64 %indvars.iv.next815.i to i32
  %cmp295.i635 = icmp slt i32 %360, %358
  br i1 %cmp295.i635, label %for.body296.i, label %for.cond313.preheader.i

for.cond313.preheader.i:                          ; preds = %for.cond294.i, %for.cond294.preheader.i
  call void @llvm.memset.p0i8.i64(i8* %259, i8 0, i64 80, i32 16, i1 false) #5
  %add322734.i = add nsw i32 %358, 1
  %cmp323735.i = icmp slt i32 %add322734.i, 0
  br i1 %cmp323735.i, label %for.end494.i, label %for.body324.i

for.body296.i:                                    ; preds = %for.cond294.i, %for.body296.lr.ph.i
  %indvars.iv814.i = phi i64 [ 0, %for.body296.lr.ph.i ], [ %indvars.iv.next815.i, %for.cond294.i ]
  %arrayidx301.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb300.i, i64 0, i64 %indvars.iv814.i
  %361 = load %struct.basic_block_def** %arrayidx301.i, align 8, !tbaa !5
  %aux302.i = getelementptr inbounds %struct.basic_block_def* %361, i64 0, i32 10
  %362 = load i8** %aux302.i, align 8, !tbaa !25
  %succ_count303.i = getelementptr inbounds i8* %362, i64 8
  %363 = bitcast i8* %succ_count303.i to i64*
  %364 = load i64* %363, align 8, !tbaa !30
  %tobool304.i = icmp eq i64 %364, 0
  br i1 %tobool304.i, label %lor.lhs.false.i, label %if.then308.i

lor.lhs.false.i:                                  ; preds = %for.body296.i
  %pred_count306.i = getelementptr inbounds i8* %362, i64 16
  %365 = bitcast i8* %pred_count306.i to i64*
  %366 = load i64* %365, align 8, !tbaa !32
  %tobool307.i = icmp eq i64 %366, 0
  %indvars.iv.next815.i = add nuw nsw i64 %indvars.iv814.i, 1
  br i1 %tobool307.i, label %for.cond294.i, label %if.then308.i

if.then308.i:                                     ; preds = %lor.lhs.false.i, %for.body296.i
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([29 x i8]* @__FUNCTION__.compute_branch_probabilities, i64 0, i64 0)) #6
  unreachable

for.body324.i:                                    ; preds = %for.cond313.preheader.i, %for.inc492.i
  %indvars.iv808.i = phi i64 [ %indvars.iv.next809.i, %for.inc492.i ], [ 0, %for.cond313.preheader.i ]
  %add322738.i = phi i32 [ %add322.i, %for.inc492.i ], [ %add322734.i, %for.cond313.preheader.i ]
  %num_branches.0736.i = phi i32 [ %num_branches.1.i, %for.inc492.i ], [ 0, %for.cond313.preheader.i ]
  %367 = trunc i64 %indvars.iv808.i to i32
  %cmp326.i = icmp eq i32 %367, 0
  br i1 %cmp326.i, label %cond.end340.i, label %cond.false328.i

cond.false328.i:                                  ; preds = %for.body324.i
  %cmp330.i = icmp eq i32 %367, %add322738.i
  br i1 %cmp330.i, label %cond.end340.i, label %cond.false332.i

cond.false332.i:                                  ; preds = %cond.false328.i
  %368 = add nsw i64 %indvars.iv808.i, -1
  %369 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data335.i = getelementptr inbounds %struct.varray_head_tag* %369, i64 0, i32 4
  %bb336.i = bitcast %union.varray_data_tag* %data335.i to [1 x %struct.basic_block_def*]*
  %arrayidx337.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb336.i, i64 0, i64 %368
  %370 = load %struct.basic_block_def** %arrayidx337.i, align 8, !tbaa !5
  br label %cond.end340.i

cond.end340.i:                                    ; preds = %cond.false332.i, %cond.false328.i, %for.body324.i
  %cond341.i = phi %struct.basic_block_def* [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %for.body324.i ], [ %370, %cond.false332.i ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %cond.false328.i ]
  %count344.i = getelementptr inbounds %struct.basic_block_def* %cond341.i, i64 0, i32 13
  %371 = load i64* %count344.i, align 8, !tbaa !33
  %tobool345.i = icmp eq i64 %371, 0
  %succ347.i = getelementptr inbounds %struct.basic_block_def* %cond341.i, i64 0, i32 5
  %372 = load %struct.edge_def** %succ347.i, align 8, !tbaa !26
  %tobool427721.i = icmp eq %struct.edge_def* %372, null
  br i1 %tobool345.i, label %for.cond426.preheader.i, label %for.cond348.preheader.i

for.cond348.preheader.i:                          ; preds = %cond.end340.i
  br i1 %tobool427721.i, label %for.end371.i, label %for.body350.lr.ph.i

for.body350.lr.ph.i:                              ; preds = %for.cond348.preheader.i
  %div.i = sdiv i64 %371, 2
  br label %for.body350.i

for.cond426.preheader.i:                          ; preds = %cond.end340.i
  br i1 %tobool427721.i, label %if.end476.i, label %for.body428.i

for.body350.i:                                    ; preds = %for.inc369.i, %for.body350.lr.ph.i
  %e342.0716.i = phi %struct.edge_def* [ %372, %for.body350.lr.ph.i ], [ %379, %for.inc369.i ]
  %count351.i = getelementptr inbounds %struct.edge_def* %e342.0716.i, i64 0, i32 8
  %373 = load i64* %count351.i, align 8, !tbaa !22
  %mul.i = mul nsw i64 %373, 10000
  %add352.i = add nsw i64 %mul.i, %div.i
  %div353.i = sdiv i64 %add352.i, %371
  %conv.i = trunc i64 %div353.i to i32
  %probability.i = getelementptr inbounds %struct.edge_def* %e342.0716.i, i64 0, i32 7
  store i32 %conv.i, i32* %probability.i, align 4, !tbaa !34
  %374 = icmp ugt i32 %conv.i, 10000
  br i1 %374, label %if.then361.i, label %for.inc369.i

if.then361.i:                                     ; preds = %for.body350.i
  %src362.i = getelementptr inbounds %struct.edge_def* %e342.0716.i, i64 0, i32 2
  %375 = load %struct.basic_block_def** %src362.i, align 8, !tbaa !17
  %index363.i = getelementptr inbounds %struct.basic_block_def* %375, i64 0, i32 11
  %376 = load i32* %index363.i, align 4, !tbaa !18
  %dest364.i = getelementptr inbounds %struct.edge_def* %e342.0716.i, i64 0, i32 3
  %377 = load %struct.basic_block_def** %dest364.i, align 8, !tbaa !14
  %index365.i = getelementptr inbounds %struct.basic_block_def* %377, i64 0, i32 11
  %378 = load i32* %index365.i, align 4, !tbaa !18
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([56 x i8]* @.str38, i64 0, i64 0), i32 %376, i32 %378, i32 %conv.i) #5
  store i32 5000, i32* %probability.i, align 4, !tbaa !34
  br label %for.inc369.i

for.inc369.i:                                     ; preds = %if.then361.i, %for.body350.i
  %succ_next370.i = getelementptr inbounds %struct.edge_def* %e342.0716.i, i64 0, i32 1
  %379 = load %struct.edge_def** %succ_next370.i, align 8, !tbaa !27
  %tobool349.i = icmp eq %struct.edge_def* %379, null
  br i1 %tobool349.i, label %for.end371.i, label %for.body350.i

for.end371.i:                                     ; preds = %for.inc369.i, %for.cond348.preheader.i
  %index372.i = getelementptr inbounds %struct.basic_block_def* %cond341.i, i64 0, i32 11
  %380 = load i32* %index372.i, align 4, !tbaa !18
  %cmp373.i = icmp sgt i32 %380, -1
  br i1 %cmp373.i, label %land.lhs.true375.i, label %for.inc492.i

land.lhs.true375.i:                               ; preds = %for.end371.i
  %end.i = getelementptr inbounds %struct.basic_block_def* %cond341.i, i64 0, i32 1
  %381 = load %struct.rtx_def** %end.i, align 8, !tbaa !11
  %call376.i = call i32 @any_condjump_p(%struct.rtx_def* %381) #5
  %tobool377.i = icmp eq i32 %call376.i, 0
  br i1 %tobool377.i, label %for.inc492.i, label %land.lhs.true378.i

land.lhs.true378.i:                               ; preds = %land.lhs.true375.i
  %382 = load %struct.edge_def** %succ347.i, align 8, !tbaa !26
  %succ_next380.i = getelementptr inbounds %struct.edge_def* %382, i64 0, i32 1
  %383 = load %struct.edge_def** %succ_next380.i, align 8, !tbaa !27
  %tobool381.i = icmp eq %struct.edge_def* %383, null
  br i1 %tobool381.i, label %for.inc492.i, label %for.cond386.preheader.i

for.cond386.preheader.i:                          ; preds = %land.lhs.true378.i
  %flags717.i = getelementptr inbounds %struct.edge_def* %382, i64 0, i32 6
  %384 = load i32* %flags717.i, align 4, !tbaa !16
  %and718.i = and i32 %384, 17
  %tobool387719.i = icmp eq i32 %and718.i, 0
  br i1 %tobool387719.i, label %for.end391.i, label %for.inc389.i.preheader

for.inc389.i.preheader:                           ; preds = %for.cond386.preheader.i
  %flags.i636694 = getelementptr inbounds %struct.edge_def* %383, i64 0, i32 6
  %385 = load i32* %flags.i636694, align 4, !tbaa !16
  %and.i637695 = and i32 %385, 17
  %tobool387.i696 = icmp eq i32 %and.i637695, 0
  br i1 %tobool387.i696, label %for.end391.i, label %for.inc389.for.inc389_crit_edge.i

for.inc389.for.inc389_crit_edge.i:                ; preds = %for.inc389.i.preheader, %for.inc389.for.inc389_crit_edge.i
  %386 = phi %struct.edge_def* [ %.pre.i, %for.inc389.for.inc389_crit_edge.i ], [ %383, %for.inc389.i.preheader ]
  %succ_next390.phi.trans.insert.i = getelementptr inbounds %struct.edge_def* %386, i64 0, i32 1
  %.pre.i = load %struct.edge_def** %succ_next390.phi.trans.insert.i, align 8, !tbaa !27
  %flags.i636 = getelementptr inbounds %struct.edge_def* %.pre.i, i64 0, i32 6
  %387 = load i32* %flags.i636, align 4, !tbaa !16
  %and.i637 = and i32 %387, 17
  %tobool387.i = icmp eq i32 %and.i637, 0
  br i1 %tobool387.i, label %for.end391.i, label %for.inc389.for.inc389_crit_edge.i

for.end391.i:                                     ; preds = %for.inc389.for.inc389_crit_edge.i, %for.inc389.i.preheader, %for.cond386.preheader.i
  %e383.0.lcssa.i = phi %struct.edge_def* [ %382, %for.cond386.preheader.i ], [ %383, %for.inc389.i.preheader ], [ %.pre.i, %for.inc389.for.inc389_crit_edge.i ]
  %probability392.i = getelementptr inbounds %struct.edge_def* %e383.0.lcssa.i, i64 0, i32 7
  %388 = load i32* %probability392.i, align 4, !tbaa !34
  %mul393.i = mul nsw i32 %388, 20
  %div394.i = sdiv i32 %mul393.i, 10000
  %mul393.off.i = add i32 %mul393.i, -200000
  %389 = icmp ult i32 %mul393.off.i, 10000
  %390 = sext i32 %div394.i to i64
  %idxprom399.i = select i1 %389, i64 19, i64 %390
  %arrayidx400.i = getelementptr inbounds [20 x i32]* %hist_br_prob.i, i64 0, i64 %idxprom399.i
  %391 = load i32* %arrayidx400.i, align 4, !tbaa !1
  %inc401.i = add nsw i32 %391, 1
  store i32 %inc401.i, i32* %arrayidx400.i, align 4, !tbaa !1
  %392 = load %struct.rtx_def** %end.i, align 8, !tbaa !11
  %call403.i = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %392, i32 16, %struct.rtx_def* null) #5
  %tobool404.i = icmp eq %struct.rtx_def* %call403.i, null
  %conv406.i = sext i32 %388 to i64
  %call407.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv406.i) #5
  br i1 %tobool404.i, label %if.else409.i, label %if.then405.i

if.then405.i:                                     ; preds = %for.end391.i
  %393 = getelementptr inbounds %struct.rtx_def* %call403.i, i64 0, i32 1, i64 0, i32 0
  %call407.c.i = ptrtoint %struct.rtx_def* %call407.i to i64
  store i64 %call407.c.i, i64* %393, align 8, !tbaa !5
  br label %if.end421.i

if.else409.i:                                     ; preds = %for.end391.i
  %394 = load %struct.rtx_def** %end.i, align 8, !tbaa !11
  %arrayidx414.i = getelementptr inbounds %struct.rtx_def* %394, i64 0, i32 1, i64 6
  %rtx415.i = bitcast %union.rtunion_def* %arrayidx414.i to %struct.rtx_def**
  %395 = load %struct.rtx_def** %rtx415.i, align 8, !tbaa !5
  %call416.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 16, %struct.rtx_def* %call407.i, %struct.rtx_def* %395) #5
  %396 = load %struct.rtx_def** %end.i, align 8, !tbaa !11
  %397 = getelementptr inbounds %struct.rtx_def* %396, i64 0, i32 1, i64 6, i32 0
  %call416.c.i = ptrtoint %struct.rtx_def* %call416.i to i64
  store i64 %call416.c.i, i64* %397, align 8, !tbaa !5
  br label %if.end421.i

if.end421.i:                                      ; preds = %if.else409.i, %if.then405.i
  %inc422.i = add nsw i32 %num_branches.0736.i, 1
  br label %for.inc492.i

for.body428.i:                                    ; preds = %for.cond426.preheader.i, %for.body428.i
  %total343.0723.i = phi i64 [ %inc433.total343.0.i, %for.body428.i ], [ 0, %for.cond426.preheader.i ]
  %e342.1722.i = phi %struct.edge_def* [ %399, %for.body428.i ], [ %372, %for.cond426.preheader.i ]
  %flags429.i = getelementptr inbounds %struct.edge_def* %e342.1722.i, i64 0, i32 6
  %398 = load i32* %flags429.i, align 4, !tbaa !16
  %and430.i = and i32 %398, 30
  %tobool431.i = icmp eq i32 %and430.i, 0
  %inc433.i = zext i1 %tobool431.i to i64
  %inc433.total343.0.i = add nsw i64 %inc433.i, %total343.0723.i
  %succ_next436.i = getelementptr inbounds %struct.edge_def* %e342.1722.i, i64 0, i32 1
  %399 = load %struct.edge_def** %succ_next436.i, align 8, !tbaa !27
  %tobool427.i = icmp eq %struct.edge_def* %399, null
  br i1 %tobool427.i, label %for.end437.i, label %for.body428.i

for.end437.i:                                     ; preds = %for.body428.i
  %tobool438.i = icmp eq i64 %inc433.total343.0.i, 0
  br i1 %tobool438.i, label %for.body461.i, label %for.body443.i

for.body443.i:                                    ; preds = %for.end437.i, %for.inc454.i
  %e342.2726.i = phi %struct.edge_def* [ %401, %for.inc454.i ], [ %372, %for.end437.i ]
  %flags444.i = getelementptr inbounds %struct.edge_def* %e342.2726.i, i64 0, i32 6
  %400 = load i32* %flags444.i, align 4, !tbaa !16
  %and445.i = and i32 %400, 30
  %tobool446.i = icmp eq i32 %and445.i, 0
  br i1 %tobool446.i, label %if.then447.i, label %if.else451.i

if.then447.i:                                     ; preds = %for.body443.i
  %div448.i = sdiv i64 10000, %inc433.total343.0.i
  %conv449.i = trunc i64 %div448.i to i32
  %probability450.i = getelementptr inbounds %struct.edge_def* %e342.2726.i, i64 0, i32 7
  store i32 %conv449.i, i32* %probability450.i, align 4, !tbaa !34
  br label %for.inc454.i

if.else451.i:                                     ; preds = %for.body443.i
  %probability452.i = getelementptr inbounds %struct.edge_def* %e342.2726.i, i64 0, i32 7
  store i32 0, i32* %probability452.i, align 4, !tbaa !34
  br label %for.inc454.i

for.inc454.i:                                     ; preds = %if.else451.i, %if.then447.i
  %succ_next455.i = getelementptr inbounds %struct.edge_def* %e342.2726.i, i64 0, i32 1
  %401 = load %struct.edge_def** %succ_next455.i, align 8, !tbaa !27
  %tobool442.i = icmp eq %struct.edge_def* %401, null
  br i1 %tobool442.i, label %if.end476.i, label %for.body443.i

for.body469.lr.ph.i:                              ; preds = %for.body461.i
  %div470.i = sdiv i64 10000, %inc462.i
  %conv471.i = trunc i64 %div470.i to i32
  br label %for.body469.i

for.body461.i:                                    ; preds = %for.end437.i, %for.body461.i
  %total343.2729.i = phi i64 [ %inc462.i, %for.body461.i ], [ 0, %for.end437.i ]
  %e342.3728.i = phi %struct.edge_def* [ %402, %for.body461.i ], [ %372, %for.end437.i ]
  %inc462.i = add nsw i64 %total343.2729.i, 1
  %succ_next464.i = getelementptr inbounds %struct.edge_def* %e342.3728.i, i64 0, i32 1
  %402 = load %struct.edge_def** %succ_next464.i, align 8, !tbaa !27
  %tobool460.i = icmp eq %struct.edge_def* %402, null
  br i1 %tobool460.i, label %for.body469.lr.ph.i, label %for.body461.i

for.body469.i:                                    ; preds = %for.body469.i, %for.body469.lr.ph.i
  %e342.4733.i = phi %struct.edge_def* [ %372, %for.body469.lr.ph.i ], [ %e342.4.i, %for.body469.i ]
  %probability472.i = getelementptr inbounds %struct.edge_def* %e342.4733.i, i64 0, i32 7
  store i32 %conv471.i, i32* %probability472.i, align 4, !tbaa !34
  %succ_next474.i = getelementptr inbounds %struct.edge_def* %e342.4733.i, i64 0, i32 1
  %e342.4.i = load %struct.edge_def** %succ_next474.i, align 8
  %tobool468.i = icmp eq %struct.edge_def* %e342.4.i, null
  br i1 %tobool468.i, label %if.end476.i, label %for.body469.i

if.end476.i:                                      ; preds = %for.inc454.i, %for.body469.i, %for.cond426.preheader.i
  %index477.i = getelementptr inbounds %struct.basic_block_def* %cond341.i, i64 0, i32 11
  %403 = load i32* %index477.i, align 4, !tbaa !18
  %cmp478.i = icmp sgt i32 %403, -1
  br i1 %cmp478.i, label %land.lhs.true480.i, label %for.inc492.i

land.lhs.true480.i:                               ; preds = %if.end476.i
  %end481.i = getelementptr inbounds %struct.basic_block_def* %cond341.i, i64 0, i32 1
  %404 = load %struct.rtx_def** %end481.i, align 8, !tbaa !11
  %call482.i = call i32 @any_condjump_p(%struct.rtx_def* %404) #5
  %tobool483.i = icmp eq i32 %call482.i, 0
  br i1 %tobool483.i, label %for.inc492.i, label %land.lhs.true484.i

land.lhs.true484.i:                               ; preds = %land.lhs.true480.i
  %405 = load %struct.edge_def** %succ347.i, align 8, !tbaa !26
  %succ_next486.i = getelementptr inbounds %struct.edge_def* %405, i64 0, i32 1
  %406 = load %struct.edge_def** %succ_next486.i, align 8, !tbaa !27
  %not.tobool487.i = icmp ne %struct.edge_def* %406, null
  %inc489.i = zext i1 %not.tobool487.i to i32
  %num_branches.0.inc489.i = add nsw i32 %inc489.i, %num_branches.0736.i
  br label %for.inc492.i

for.inc492.i:                                     ; preds = %land.lhs.true484.i, %land.lhs.true480.i, %if.end476.i, %if.end421.i, %land.lhs.true378.i, %land.lhs.true375.i, %for.end371.i
  %num_branches.1.i = phi i32 [ %inc422.i, %if.end421.i ], [ %num_branches.0736.i, %land.lhs.true378.i ], [ %num_branches.0736.i, %land.lhs.true375.i ], [ %num_branches.0736.i, %for.end371.i ], [ %num_branches.0736.i, %land.lhs.true480.i ], [ %num_branches.0736.i, %if.end476.i ], [ %num_branches.0.inc489.i, %land.lhs.true484.i ]
  %indvars.iv.next809.i = add nuw nsw i64 %indvars.iv808.i, 1
  %407 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add322.i = add nsw i32 %407, 1
  %cmp323.i = icmp slt i32 %367, %add322.i
  br i1 %cmp323.i, label %for.body324.i, label %for.end494.i

for.end494.i:                                     ; preds = %for.inc492.i, %for.cond313.preheader.i
  %num_branches.0.lcssa.i = phi i32 [ 0, %for.cond313.preheader.i ], [ %num_branches.1.i, %for.inc492.i ]
  %408 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool495.i = icmp eq %struct._IO_FILE* %408, null
  br i1 %tobool495.i, label %compute_branch_probabilities.exit, label %if.then496.i

if.then496.i:                                     ; preds = %for.end494.i
  %call497.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %408, i8* getelementptr inbounds ([13 x i8]* @.str39, i64 0, i64 0), i32 %num_branches.0.lcssa.i) #5
  %409 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %call498.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %409, i8* getelementptr inbounds ([28 x i8]* @.str40, i64 0, i64 0), i32 0) #5
  %tobool499.i = icmp eq i32 %num_branches.0.lcssa.i, 0
  br i1 %tobool499.i, label %if.end520.i, label %for.body504.i

for.body504.i:                                    ; preds = %if.then496.i, %for.body504.i
  %indvars.iv802.i = phi i64 [ %indvars.iv.next803.i, %for.body504.i ], [ 0, %if.then496.i ]
  %i.6714.i = phi i32 [ %inc518.i, %for.body504.i ], [ 0, %if.then496.i ]
  %410 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %arrayidx506.i = getelementptr inbounds [20 x i32]* %hist_br_prob.i, i64 0, i64 %indvars.iv802.i
  %411 = load i32* %arrayidx506.i, align 4, !tbaa !1
  %412 = sub nsw i64 19, %indvars.iv802.i
  %arrayidx509.i = getelementptr inbounds [20 x i32]* %hist_br_prob.i, i64 0, i64 %412
  %413 = load i32* %arrayidx509.i, align 4, !tbaa !1
  %add510.i = add nsw i32 %413, %411
  %mul511.i = mul nsw i32 %add510.i, 100
  %div512.i = sdiv i32 %mul511.i, %num_branches.0.lcssa.i
  %414 = mul nsw i64 %indvars.iv802.i, 5
  %mul513.i = mul nsw i32 %i.6714.i, 5
  %add515.i = add nsw i32 %mul513.i, 5
  %415 = trunc i64 %414 to i32
  %call516.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %410, i8* getelementptr inbounds ([32 x i8]* @.str25, i64 0, i64 0), i32 %div512.i, i32 %415, i32 %add515.i) #5
  %indvars.iv.next803.i = add nuw nsw i64 %indvars.iv802.i, 1
  %inc518.i = add nsw i32 %i.6714.i, 1
  %exitcond807.i = icmp eq i64 %indvars.iv.next803.i, 10
  br i1 %exitcond807.i, label %if.end520.i, label %for.body504.i

if.end520.i:                                      ; preds = %for.body504.i, %if.then496.i
  %416 = load i32* @total_num_branches, align 4, !tbaa !1
  %add521.i = add nsw i32 %416, %num_branches.0.lcssa.i
  store i32 %add521.i, i32* @total_num_branches, align 4, !tbaa !1
  br label %for.body526.i

for.body526.i:                                    ; preds = %for.body526.i, %if.end520.i
  %indvars.iv.i638 = phi i64 [ 0, %if.end520.i ], [ %indvars.iv.next.i639, %for.body526.i ]
  %arrayidx528.i = getelementptr inbounds [20 x i32]* %hist_br_prob.i, i64 0, i64 %indvars.iv.i638
  %417 = load i32* %arrayidx528.i, align 4, !tbaa !1
  %arrayidx530.i = getelementptr inbounds [20 x i32]* @total_hist_br_prob, i64 0, i64 %indvars.iv.i638
  %418 = load i32* %arrayidx530.i, align 4, !tbaa !1
  %add531.i = add nsw i32 %418, %417
  store i32 %add531.i, i32* %arrayidx530.i, align 4, !tbaa !1
  %indvars.iv.next.i639 = add nuw nsw i64 %indvars.iv.i638, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i639, 20
  br i1 %exitcond.i, label %for.end534.i, label %for.body526.i

for.end534.i:                                     ; preds = %for.body526.i
  %419 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %call535.i = call i32 @fputc(i32 10, %struct._IO_FILE* %419) #5
  %420 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %call536.i = call i32 @fputc(i32 10, %struct._IO_FILE* %420) #5
  br label %compute_branch_probabilities.exit

compute_branch_probabilities.exit:                ; preds = %for.end494.i, %for.end534.i
  call void @free_aux_for_blocks() #5
  call void @llvm.lifetime.end(i64 80, i8* %259) #5
  br label %if.end350

if.end350:                                        ; preds = %if.end347, %compute_branch_probabilities.exit
  %421 = load i32* @profile_arc_flag, align 4, !tbaa !1
  %tobool351 = icmp eq i32 %421, 0
  br i1 %tobool351, label %if.end355, label %if.then352

if.then352:                                       ; preds = %if.end350
  %call89.idx.val = load i32* %num_edges90, align 4, !tbaa !19
  call void @remove_fake_edges() #5
  %422 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add7.i = add nsw i32 %422, 2
  %cmp8.i = icmp sgt i32 %add7.i, 0
  br i1 %cmp8.i, label %for.body.i641, label %for.end.i668

for.body.i641:                                    ; preds = %if.then352, %for.inc.i666
  %indvars.iv.i640 = phi i64 [ %indvars.iv.next.i664, %for.inc.i666 ], [ 0, %if.then352 ]
  %423 = phi i32 [ %448, %for.inc.i666 ], [ %422, %if.then352 ]
  %num_instr_edges.09.i = phi i32 [ %num_instr_edges.1.lcssa.i, %for.inc.i666 ], [ 0, %if.then352 ]
  %424 = trunc i64 %indvars.iv.i640 to i32
  %cmp2.i = icmp eq i32 %424, 0
  br i1 %cmp2.i, label %cond.end8.i, label %cond.false.i642

cond.false.i642:                                  ; preds = %for.body.i641
  %add3.i = add nsw i32 %423, 1
  %cmp4.i = icmp eq i32 %424, %add3.i
  br i1 %cmp4.i, label %cond.end8.i, label %cond.false6.i

cond.false6.i:                                    ; preds = %cond.false.i642
  %425 = add nsw i64 %indvars.iv.i640, -1
  %426 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data.i643 = getelementptr inbounds %struct.varray_head_tag* %426, i64 0, i32 4
  %bb7.i = bitcast %union.varray_data_tag* %data.i643 to [1 x %struct.basic_block_def*]*
  %arrayidx.i644 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb7.i, i64 0, i64 %425
  %427 = load %struct.basic_block_def** %arrayidx.i644, align 8, !tbaa !5
  br label %cond.end8.i

cond.end8.i:                                      ; preds = %cond.false6.i, %cond.false.i642, %for.body.i641
  %cond9.i = phi %struct.basic_block_def* [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %for.body.i641 ], [ %427, %cond.false6.i ], [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %cond.false.i642 ]
  %succ.i645 = getelementptr inbounds %struct.basic_block_def* %cond9.i, i64 0, i32 5
  %e.03.i = load %struct.edge_def** %succ.i645, align 8
  %tobool4.i = icmp eq %struct.edge_def* %e.03.i, null
  br i1 %tobool4.i, label %for.inc.i666, label %while.body.i648

while.body.i648:                                  ; preds = %cond.end8.i, %if.end30.i
  %e.06.i = phi %struct.edge_def* [ %e.0.i662, %if.end30.i ], [ %e.03.i, %cond.end8.i ]
  %num_instr_edges.15.i = phi i32 [ %num_instr_edges.2.i, %if.end30.i ], [ %num_instr_edges.09.i, %cond.end8.i ]
  %aux.i646 = getelementptr inbounds %struct.edge_def* %e.06.i, i64 0, i32 5
  %428 = load i8** %aux.i646, align 8, !tbaa !23
  %bf.load.i647 = load i8* %428, align 4
  %429 = and i8 %bf.load.i647, 6
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %if.then.i651, label %if.end30.i

if.then.i651:                                     ; preds = %while.body.i648
  %flags.i649 = getelementptr inbounds %struct.edge_def* %e.06.i, i64 0, i32 6
  %431 = load i32* %flags.i649, align 4, !tbaa !16
  %and.i650 = and i32 %431, 2
  %tobool16.i = icmp eq i32 %and.i650, 0
  br i1 %tobool16.i, label %if.end.i, label %if.then17.i

if.then17.i:                                      ; preds = %if.then.i651
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 151, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.instrument_edges, i64 0, i64 0)) #6
  unreachable

if.end.i:                                         ; preds = %if.then.i651
  %432 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool18.i = icmp eq %struct._IO_FILE* %432, null
  br i1 %tobool18.i, label %if.end27.i, label %if.then19.i

if.then19.i:                                      ; preds = %if.end.i
  %src.i652 = getelementptr inbounds %struct.edge_def* %e.06.i, i64 0, i32 2
  %433 = load %struct.basic_block_def** %src.i652, align 8, !tbaa !17
  %index.i653 = getelementptr inbounds %struct.basic_block_def* %433, i64 0, i32 11
  %434 = load i32* %index.i653, align 4, !tbaa !18
  %dest.i654 = getelementptr inbounds %struct.edge_def* %e.06.i, i64 0, i32 3
  %435 = load %struct.basic_block_def** %dest.i654, align 8, !tbaa !14
  %index20.i = getelementptr inbounds %struct.basic_block_def* %435, i64 0, i32 11
  %436 = load i32* %index20.i, align 4, !tbaa !18
  %succ22.i = getelementptr inbounds %struct.basic_block_def* %433, i64 0, i32 5
  %437 = load %struct.edge_def** %succ22.i, align 8, !tbaa !26
  %succ_next.i655 = getelementptr inbounds %struct.edge_def* %437, i64 0, i32 1
  %438 = load %struct.edge_def** %succ_next.i655, align 8, !tbaa !27
  %tobool23.i = icmp eq %struct.edge_def* %438, null
  br i1 %tobool23.i, label %land.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then19.i
  %pred.i656 = getelementptr inbounds %struct.basic_block_def* %435, i64 0, i32 4
  %439 = load %struct.edge_def** %pred.i656, align 8, !tbaa !28
  %pred_next.i657 = getelementptr inbounds %struct.edge_def* %439, i64 0, i32 0
  %440 = load %struct.edge_def** %pred_next.i657, align 8, !tbaa !29
  %tobool25.i = icmp ne %struct.edge_def* %440, null
  %phitmp.i = select i1 %tobool25.i, i8* getelementptr inbounds ([13 x i8]* @.str31, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str32, i64 0, i64 0)
  br label %land.end.i

land.end.i:                                       ; preds = %land.rhs.i, %if.then19.i
  %441 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str32, i64 0, i64 0), %if.then19.i ], [ %phitmp.i, %land.rhs.i ]
  %call.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %432, i8* getelementptr inbounds ([30 x i8]* @.str30, i64 0, i64 0), i32 %434, i32 %436, i8* %441) #5
  br label %if.end27.i

if.end27.i:                                       ; preds = %land.end.i, %if.end.i
  store i1 true, i1* @need_func_profiler, align 1
  %442 = load i32* @total_num_edges_instrumented, align 4, !tbaa !1
  %inc.i658 = add nsw i32 %num_instr_edges.15.i, 1
  %add28.i = add nsw i32 %442, %num_instr_edges.15.i
  %call.i.i659 = call i32 @mode_for_size(i32 64, i32 1, i32 0) #5
  call void @start_sequence() #5
  %443 = load i32* @target_flags, align 4, !tbaa !1
  %and.i.i = lshr i32 %443, 25
  %444 = and i32 %and.i.i, 1
  %445 = or i32 %444, 4
  %446 = load %struct.rtx_def** @profiler_label, align 8, !tbaa !5
  %call2.i.i = call %struct.rtx_def* @force_reg(i32 %445, %struct.rtx_def* %446) #5
  %mul.i.i = shl nsw i32 %add28.i, 3
  %conv.i.i = sext i32 %mul.i.i to i64
  %call3.i.i = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call2.i.i, i64 %conv.i.i) #5
  %call4.i.i = call %struct.rtx_def* @gen_rtx_MEM(i32 %call.i.i659, %struct.rtx_def* %call3.i.i) #5
  %call5.i.i = call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call4.i.i) #5
  %447 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !5
  %call6.i.i = call %struct.rtx_def* @expand_simple_binop(i32 %call.i.i659, i32 75, %struct.rtx_def* %call5.i.i, %struct.rtx_def* %447, %struct.rtx_def* %call5.i.i, i32 0, i32 2) #5
  %cmp.i.i660 = icmp eq %struct.rtx_def* %call6.i.i, %call5.i.i
  br i1 %cmp.i.i660, label %gen_edge_profiler.exit.i, label %if.then.i.i661

if.then.i.i661:                                   ; preds = %if.end27.i
  %call8.i.i = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %call5.i.i) #5
  %call9.i.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call8.i.i, %struct.rtx_def* %call6.i.i) #5
  br label %gen_edge_profiler.exit.i

gen_edge_profiler.exit.i:                         ; preds = %if.then.i.i661, %if.end27.i
  %call10.i.i = call %struct.rtx_def* @gen_sequence() #5
  call void @end_sequence() #5
  call void @insert_insn_on_edge(%struct.rtx_def* %call10.i.i, %struct.edge_def* %e.06.i) #5
  br label %if.end30.i

if.end30.i:                                       ; preds = %gen_edge_profiler.exit.i, %while.body.i648
  %num_instr_edges.2.i = phi i32 [ %num_instr_edges.15.i, %while.body.i648 ], [ %inc.i658, %gen_edge_profiler.exit.i ]
  %succ_next31.i = getelementptr inbounds %struct.edge_def* %e.06.i, i64 0, i32 1
  %e.0.i662 = load %struct.edge_def** %succ_next31.i, align 8
  %tobool.i663 = icmp eq %struct.edge_def* %e.0.i662, null
  br i1 %tobool.i663, label %for.inc.i666.loopexit, label %while.body.i648

for.inc.i666.loopexit:                            ; preds = %if.end30.i
  %.pre780 = load i32* @n_basic_blocks, align 4, !tbaa !1
  br label %for.inc.i666

for.inc.i666:                                     ; preds = %for.inc.i666.loopexit, %cond.end8.i
  %448 = phi i32 [ %423, %cond.end8.i ], [ %.pre780, %for.inc.i666.loopexit ]
  %num_instr_edges.1.lcssa.i = phi i32 [ %num_instr_edges.09.i, %cond.end8.i ], [ %num_instr_edges.2.i, %for.inc.i666.loopexit ]
  %indvars.iv.next.i664 = add nuw nsw i64 %indvars.iv.i640, 1
  %449 = add nsw i32 %448, 1
  %cmp.i665 = icmp slt i32 %424, %449
  br i1 %cmp.i665, label %for.body.i641, label %for.end.i668

for.end.i668:                                     ; preds = %for.inc.i666, %if.then352
  %num_instr_edges.0.lcssa.i = phi i32 [ 0, %if.then352 ], [ %num_instr_edges.1.lcssa.i, %for.inc.i666 ]
  %450 = load i32* @total_num_edges_instrumented, align 4, !tbaa !1
  %add33.i = add nsw i32 %450, %num_instr_edges.0.lcssa.i
  store i32 %add33.i, i32* @total_num_edges_instrumented, align 4, !tbaa !1
  store i32 %add33.i, i32* @count_instrumented_edges, align 4, !tbaa !1
  %451 = load i32* @total_num_blocks_created, align 4, !tbaa !1
  %add34.i = add nsw i32 %451, %call89.idx.val
  store i32 %add34.i, i32* @total_num_blocks_created, align 4, !tbaa !1
  %452 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool35.i667 = icmp eq %struct._IO_FILE* %452, null
  br i1 %tobool35.i667, label %instrument_edges.exit, label %if.then36.i

if.then36.i:                                      ; preds = %for.end.i668
  %call37.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %452, i8* getelementptr inbounds ([23 x i8]* @.str33, i64 0, i64 0), i32 %num_instr_edges.0.lcssa.i) #5
  br label %instrument_edges.exit

instrument_edges.exit:                            ; preds = %for.end.i668, %if.then36.i
  call void @commit_edge_insertions() #5
  %call353 = call i32 @max_reg_num() #5
  %conv354 = sext i32 %call353 to i64
  call void @allocate_reg_info(i64 %conv354, i32 0, i32 0) #5
  br label %if.end355

if.end355:                                        ; preds = %if.end350, %instrument_edges.exit
  call void @remove_fake_edges() #5
  %453 = load i32* @profile_arc_flag, align 4, !tbaa !1
  %tobool356 = icmp ne i32 %453, 0
  %cond357 = zext i1 %tobool356 to i32
  %call358 = call zeroext i1 @cleanup_cfg(i32 %cond357) #5
  %454 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool359 = icmp eq %struct._IO_FILE* %454, null
  br i1 %tobool359, label %if.end361, label %if.then360

if.then360:                                       ; preds = %if.end355
  call void @dump_flow_info(%struct._IO_FILE* %454) #5
  br label %if.end361

if.end361:                                        ; preds = %if.end355, %if.then360
  call void @free_aux_for_edges() #5
  call void @free_edge_list(%struct.edge_list* %call89) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_gcov_string(i8* nocapture %string, i64 %delimiter) #0 {
entry:
  %c.i = alloca [10 x i8], align 1
  %c = alloca i32, align 4
  %0 = load %struct._IO_FILE** @bb_file, align 8, !tbaa !5
  %1 = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 10, i8* %1) #5
  %cmp.i.i = icmp slt i64 %delimiter, 0
  %sub.i.i = sub nsw i64 0, %delimiter
  %sub.value.i.i = select i1 %cmp.i.i, i64 %sub.i.i, i64 %delimiter
  %conv12.i.i = trunc i64 %sub.value.i.i to i8
  store i8 %conv12.i.i, i8* %1, align 1, !tbaa !24
  %div.i.i = sdiv i64 %sub.value.i.i, 256
  %conv12.1.i.i = trunc i64 %div.i.i to i8
  %arrayidx.1.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 1
  store i8 %conv12.1.i.i, i8* %arrayidx.1.i.i, align 1, !tbaa !24
  %div.1.i.i = sdiv i64 %sub.value.i.i, 65536
  %conv12.2.i.i = trunc i64 %div.1.i.i to i8
  %arrayidx.2.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 2
  store i8 %conv12.2.i.i, i8* %arrayidx.2.i.i, align 1, !tbaa !24
  %div.2.i.i = sdiv i64 %sub.value.i.i, 16777216
  %div.2.tr.i.i = trunc i64 %div.2.i.i to i8
  %conv12.3.i.i = and i8 %div.2.tr.i.i, 127
  %arrayidx.3.i.i = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 3
  %div.3.i.i = sdiv i64 %sub.value.i.i, 4294967296
  %value.addr.1.off.i.i = add i64 %div.3.i.i, 1
  %value.addr.1.cmp.i.i = icmp ugt i64 %value.addr.1.off.i.i, 1
  br i1 %value.addr.1.cmp.i.i, label %__store_gcov_type.exit.thread2.i, label %if.else.i

__store_gcov_type.exit.thread2.i:                 ; preds = %entry
  store i8 %conv12.3.i.i, i8* %arrayidx.3.i.i, align 1, !tbaa !24
  br label %__write_long.exit

if.else.i:                                        ; preds = %entry
  %cond.i.i = select i1 %cmp.i.i, i8 -128, i8 0
  %or.i.i = or i8 %conv12.3.i.i, %cond.i.i
  store i8 %or.i.i, i8* %arrayidx.3.i.i, align 1, !tbaa !24
  %call2.i = call i64 @fwrite(i8* %1, i64 1, i64 4, %struct._IO_FILE* %0) #5
  %.pre = load %struct._IO_FILE** @bb_file, align 8, !tbaa !5
  br label %__write_long.exit

__write_long.exit:                                ; preds = %__store_gcov_type.exit.thread2.i, %if.else.i
  %2 = phi %struct._IO_FILE* [ %0, %__store_gcov_type.exit.thread2.i ], [ %.pre, %if.else.i ]
  call void @llvm.lifetime.end(i64 10, i8* %1) #5
  %call1 = tail call i64 @strlen(i8* %string) #5
  %add = add i64 %call1, 1
  %call2 = tail call i64 @fwrite(i8* %string, i64 %add, i64 1, %struct._IO_FILE* %2) #5
  %and = and i64 %add, 3
  %tobool = icmp eq i64 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %__write_long.exit
  %arrayidx5 = bitcast i32* %c to i8*
  %sub = sub nsw i64 4, %and
  store i32 0, i32* %c, align 4
  %3 = load %struct._IO_FILE** @bb_file, align 8, !tbaa !5
  %call6 = call i64 @fwrite(i8* %arrayidx5, i64 1, i64 %sub, %struct._IO_FILE* %3) #5
  br label %if.end

if.end:                                           ; preds = %__write_long.exit, %if.then
  %4 = load %struct._IO_FILE** @bb_file, align 8, !tbaa !5
  call void @llvm.lifetime.start(i64 10, i8* %1) #5
  store i8 %conv12.i.i, i8* %1, align 1, !tbaa !24
  store i8 %conv12.1.i.i, i8* %arrayidx.1.i.i, align 1, !tbaa !24
  store i8 %conv12.2.i.i, i8* %arrayidx.2.i.i, align 1, !tbaa !24
  br i1 %value.addr.1.cmp.i.i, label %__store_gcov_type.exit.thread2.i32, label %if.else.i36

__store_gcov_type.exit.thread2.i32:               ; preds = %if.end
  store i8 %conv12.3.i.i, i8* %arrayidx.3.i.i, align 1, !tbaa !24
  br label %__write_long.exit37

if.else.i36:                                      ; preds = %if.end
  %cond.i.i33 = select i1 %cmp.i.i, i8 -128, i8 0
  %or.i.i34 = or i8 %conv12.3.i.i, %cond.i.i33
  store i8 %or.i.i34, i8* %arrayidx.3.i.i, align 1, !tbaa !24
  %call2.i35 = call i64 @fwrite(i8* %1, i64 1, i64 4, %struct._IO_FILE* %4) #5
  br label %__write_long.exit37

__write_long.exit37:                              ; preds = %__store_gcov_type.exit.thread2.i32, %if.else.i36
  call void @llvm.lifetime.end(i64 10, i8* %1) #5
  ret void
}

declare i32 @flow_call_edges_add(%struct.simple_bitmap_def*) #1

declare void @add_noreturn_fake_exit_edges() #1

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare %struct.edge_def* @split_block(%struct.basic_block_def*, %struct.rtx_def*) #1

declare %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #3

declare %struct.edge_list* @create_edge_list() #1

declare void @alloc_aux_for_edges(i32) #1

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @get_insns() #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) #3

declare noalias i8* @xstrdup(i8*) #1

declare void @allocate_reg_info(i64, i32, i32) #1

declare i32 @max_reg_num() #1

declare void @remove_fake_edges() #1

declare zeroext i1 @cleanup_cfg(i32) #1

declare void @dump_flow_info(%struct._IO_FILE*) #1

declare void @free_aux_for_edges() #1

declare void @free_edge_list(%struct.edge_list*) #1

; Function Attrs: nounwind uwtable
define void @init_branch_prob(i8* nocapture readonly %filename) #0 {
entry:
  %buf.i = alloca [20 x i8], align 16
  %c.i = alloca [10 x i8], align 1
  %0 = load i32* @flag_test_coverage, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end17, label %if.then

if.then:                                          ; preds = %entry
  %call = call i64 @strlen(i8* %filename) #5
  %conv = trunc i64 %call to i32
  %add = shl i64 %call, 32
  %sext = add i64 %add, 17179869184
  %conv2 = ashr exact i64 %sext, 32
  %1 = alloca i8, i64 %conv2, align 1
  %call3 = call i8* @strcpy(i8* %1, i8* %filename) #5
  call void @strip_off_ending(i8* %1, i32 %conv) #5
  %strlen61 = call i64 @strlen(i8* %1) #5
  %endptr62 = getelementptr i8* %1, i64 %strlen61
  %2 = bitcast i8* %endptr62 to i32*
  store i32 6447662, i32* %2, align 1
  %call5 = call %struct._IO_FILE* @fopen(i8* %1, i8* getelementptr inbounds ([3 x i8]* @.str7, i64 0, i64 0)) #5
  store %struct._IO_FILE* %call5, %struct._IO_FILE** @bb_file, align 8, !tbaa !5
  %cmp = icmp eq %struct._IO_FILE* %call5, null
  br i1 %cmp, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then
  call void (i8*, ...)* @fatal_io_error(i8* getelementptr inbounds ([14 x i8]* @.str8, i64 0, i64 0), i8* %1) #6
  unreachable

if.end:                                           ; preds = %if.then
  %sext63 = add i64 %add, 21474836480
  %conv9 = ashr exact i64 %sext63, 32
  %3 = alloca i8, i64 %conv9, align 1
  %call10 = call i8* @strcpy(i8* %3, i8* %filename) #5
  call void @strip_off_ending(i8* %3, i32 %conv) #5
  %strlen64 = call i64 @strlen(i8* %3) #5
  %endptr65 = getelementptr i8* %3, i64 %strlen64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %endptr65, i8* getelementptr inbounds ([5 x i8]* @.str9, i64 0, i64 0), i64 5, i32 1, i1 false)
  %call12 = call %struct._IO_FILE* @fopen(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str7, i64 0, i64 0)) #5
  store %struct._IO_FILE* %call12, %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  %cmp13 = icmp eq %struct._IO_FILE* %call12, null
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  call void (i8*, ...)* @fatal_io_error(i8* getelementptr inbounds ([14 x i8]* @.str8, i64 0, i64 0), i8* %3) #6
  unreachable

if.end16:                                         ; preds = %if.end
  store i8* null, i8** @last_bb_file_name, align 8, !tbaa !5
  br label %if.end17

if.end17:                                         ; preds = %entry, %if.end16
  %4 = load i32* @flag_branch_probabilities, align 4, !tbaa !1
  %tobool18 = icmp eq i32 %4, 0
  br i1 %tobool18, label %if.end34, label %if.then19

if.then19:                                        ; preds = %if.end17
  %call20 = call i64 @strlen(i8* %filename) #5
  %add21 = add nsw i64 %call20, 4
  %5 = alloca i8, i64 %add21, align 1
  %call22 = call i8* @strcpy(i8* %5, i8* %filename) #5
  %conv23 = trunc i64 %call20 to i32
  call void @strip_off_ending(i8* %5, i32 %conv23) #5
  %strlen = call i64 @strlen(i8* %5) #5
  %endptr = getelementptr i8* %5, i64 %strlen
  %6 = bitcast i8* %endptr to i32*
  store i32 6382638, i32* %6, align 1
  %call25 = call %struct._IO_FILE* @fopen(i8* %5, i8* getelementptr inbounds ([3 x i8]* @.str11, i64 0, i64 0)) #5
  store %struct._IO_FILE* %call25, %struct._IO_FILE** @da_file, align 8, !tbaa !5
  %cmp26 = icmp eq %struct._IO_FILE* %call25, null
  br i1 %cmp26, label %if.end29, label %if.then31

if.end29:                                         ; preds = %if.then19
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([55 x i8]* @.str12, i64 0, i64 0), i8* %5) #5
  %.pr = load %struct._IO_FILE** @da_file, align 8, !tbaa !5
  %tobool30 = icmp eq %struct._IO_FILE* %.pr, null
  br i1 %tobool30, label %if.end34, label %if.then31

if.then31:                                        ; preds = %if.then19, %if.end29
  %7 = phi %struct._IO_FILE* [ %.pr, %if.end29 ], [ %call25, %if.then19 ]
  %8 = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 10, i8* %8) #5
  %call.i = call i64 @fread(i8* %8, i64 1, i64 8, %struct._IO_FILE* %7) #5
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end29, %if.end17
  %9 = load i32* @profile_arc_flag, align 4, !tbaa !1
  %tobool35 = icmp eq i32 %9, 0
  br i1 %tobool35, label %if.end37, label %if.then36

if.then36:                                        ; preds = %if.end34
  %10 = getelementptr inbounds [20 x i8]* %buf.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 20, i8* %10) #5
  %call.i67 = call i32 (i8*, i8*, ...)* @sprintf(i8* %10, i8* getelementptr inbounds ([7 x i8]* @.str27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str28, i64 0, i64 0), i32 2) #5
  %11 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %11, 25
  %12 = and i32 %and.i, 1
  %13 = or i32 %12, 4
  %call2.i = call i8* @ggc_alloc_string(i8* %10, i32 -1) #5
  %call3.i = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %13, i8* %call2.i) #5
  store %struct.rtx_def* %call3.i, %struct.rtx_def** @profiler_label, align 8, !tbaa !5
  call void @ggc_add_rtx_root(%struct.rtx_def** @profiler_label, i32 1) #5
  call void @llvm.lifetime.end(i64 20, i8* %10) #5
  br label %if.end37

if.end37:                                         ; preds = %if.end34, %if.then36
  store i32 0, i32* @total_num_blocks, align 4, !tbaa !1
  store i32 0, i32* @total_num_edges, align 4, !tbaa !1
  store i32 0, i32* @total_num_edges_ignored, align 4, !tbaa !1
  store i32 0, i32* @total_num_edges_instrumented, align 4, !tbaa !1
  store i32 0, i32* @total_num_blocks_created, align 4, !tbaa !1
  store i32 0, i32* @total_num_passes, align 4, !tbaa !1
  store i32 0, i32* @total_num_times_called, align 4, !tbaa !1
  store i32 0, i32* @total_num_branches, align 4, !tbaa !1
  call void @llvm.memset.p0i8.i64(i8* bitcast ([20 x i32]* @total_hist_br_prob to i8*), i8 0, i64 80, i32 16, i1 false)
  ret void
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #4

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8* nocapture readonly) #3

declare void @strip_off_ending(i8*, i32) #1

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #3

; Function Attrs: noreturn
declare void @fatal_io_error(i8*, ...) #2

declare void @warning(i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @end_branch_prob() #0 {
entry:
  %c.i = alloca [10 x i8], align 1
  %0 = load i32* @flag_test_coverage, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @bb_file, align 8, !tbaa !5
  %call = tail call i32 @fclose(%struct._IO_FILE* %1) #5
  %2 = load %struct._IO_FILE** @bbg_file, align 8, !tbaa !5
  %call1 = tail call i32 @fclose(%struct._IO_FILE* %2) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %3 = load i32* @flag_branch_probabilities, align 4, !tbaa !1
  %tobool2 = icmp ne i32 %3, 0
  %4 = load %struct._IO_FILE** @da_file, align 8
  %tobool4 = icmp ne %struct._IO_FILE* %4, null
  %or.cond = and i1 %tobool2, %tobool4
  br i1 %or.cond, label %if.then5, label %if.end15

if.then5:                                         ; preds = %if.end
  %call6 = tail call i32 @feof(%struct._IO_FILE* %4) #5
  %tobool7 = icmp eq i32 %call6, 0
  br i1 %tobool7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.then5
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str13, i64 0, i64 0)) #5
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.then8
  %5 = load %struct._IO_FILE** @da_file, align 8, !tbaa !5
  %6 = getelementptr inbounds [10 x i8]* %c.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 10, i8* %6) #5
  %call.i = call i64 @fread(i8* %6, i64 1, i64 8, %struct._IO_FILE* %5) #5
  %cmp1.i = icmp eq i64 %call.i, 8
  br i1 %cmp1.i, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end9
  call void @llvm.lifetime.end(i64 10, i8* %6) #5
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str14, i64 0, i64 0)) #5
  br label %if.end12

if.end12:                                         ; preds = %if.end9, %if.then11
  %7 = load %struct._IO_FILE** @da_file, align 8, !tbaa !5
  %call13 = tail call i32 @fclose(%struct._IO_FILE* %7) #5
  br label %if.end15

if.end15:                                         ; preds = %if.end12, %if.end
  %8 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool16 = icmp eq %struct._IO_FILE* %8, null
  br i1 %tobool16, label %if.end43, label %if.then17

if.then17:                                        ; preds = %if.end15
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %8) #5
  %9 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %10 = load i32* @total_num_blocks, align 4, !tbaa !1
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([28 x i8]* @.str16, i64 0, i64 0), i32 %10) #5
  %11 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %12 = load i32* @total_num_edges, align 4, !tbaa !1
  %call20 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([27 x i8]* @.str17, i64 0, i64 0), i32 %12) #5
  %13 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %14 = load i32* @total_num_edges_ignored, align 4, !tbaa !1
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([35 x i8]* @.str18, i64 0, i64 0), i32 %14) #5
  %15 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %16 = load i32* @total_num_edges_instrumented, align 4, !tbaa !1
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([40 x i8]* @.str19, i64 0, i64 0), i32 %16) #5
  %17 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %18 = load i32* @total_num_blocks_created, align 4, !tbaa !1
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([36 x i8]* @.str20, i64 0, i64 0), i32 %18) #5
  %19 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %20 = load i32* @total_num_passes, align 4, !tbaa !1
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([43 x i8]* @.str21, i64 0, i64 0), i32 %20) #5
  %21 = load i32* @total_num_times_called, align 4, !tbaa !1
  %cmp25 = icmp eq i32 %21, 0
  br i1 %cmp25, label %if.end28, label %if.then26

if.then26:                                        ; preds = %if.then17
  %22 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %23 = load i32* @total_num_passes, align 4, !tbaa !1
  %shr = ashr i32 %21, 1
  %add = add nsw i32 %23, %shr
  %div = sdiv i32 %add, %21
  %call27 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([45 x i8]* @.str22, i64 0, i64 0), i32 %div) #5
  br label %if.end28

if.end28:                                         ; preds = %if.then17, %if.then26
  %24 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %25 = load i32* @total_num_branches, align 4, !tbaa !1
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([30 x i8]* @.str23, i64 0, i64 0), i32 %25) #5
  %26 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %call30 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([45 x i8]* @.str24, i64 0, i64 0), i32 0) #5
  %27 = load i32* @total_num_branches, align 4, !tbaa !1
  %tobool31 = icmp eq i32 %27, 0
  br i1 %tobool31, label %if.end43, label %for.body

for.body:                                         ; preds = %if.end28, %for.body.for.body_crit_edge
  %28 = phi i32 [ %.pre, %for.body.for.body_crit_edge ], [ %27, %if.end28 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ 0, %if.end28 ]
  %i.052 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end28 ]
  %29 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds [20 x i32]* @total_hist_br_prob, i64 0, i64 %indvars.iv
  %30 = load i32* %arrayidx, align 4, !tbaa !1
  %31 = sub nsw i64 19, %indvars.iv
  %arrayidx35 = getelementptr inbounds [20 x i32]* @total_hist_br_prob, i64 0, i64 %31
  %32 = load i32* %arrayidx35, align 4, !tbaa !1
  %add36 = add nsw i32 %32, %30
  %mul = mul nsw i32 %add36, 100
  %div37 = sdiv i32 %mul, %28
  %33 = mul nsw i64 %indvars.iv, 5
  %mul38 = mul nsw i32 %i.052, 5
  %add40 = add nsw i32 %mul38, 5
  %34 = trunc i64 %33 to i32
  %call41 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([32 x i8]* @.str25, i64 0, i64 0), i32 %div37, i32 %34, i32 %add40) #5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 10
  br i1 %exitcond, label %if.end43, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  %inc = add nsw i32 %i.052, 1
  %.pre = load i32* @total_num_branches, align 4, !tbaa !1
  br label %for.body

if.end43:                                         ; preds = %for.body, %if.end28, %if.end15
  ret void
}

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #3

; Function Attrs: nounwind
declare i32 @feof(%struct._IO_FILE* nocapture) #3

declare void @error(i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @output_func_start_profiler() #0 {
entry:
  %buf = alloca [20 x i8], align 16
  %call = call i32 @mode_for_size(i32 64, i32 1, i32 0) #5
  %.b = load i1* @need_func_profiler, align 1
  br i1 %.b, label %if.end, label %if.end47

if.end:                                           ; preds = %entry
  %0 = load i32* @flag_branch_probabilities, align 4, !tbaa !1
  %1 = load i32* @profile_arc_flag, align 4, !tbaa !1
  %2 = load i32* @flag_test_coverage, align 4, !tbaa !1
  %3 = load i32* @flag_inline_functions, align 4, !tbaa !1
  store i1 false, i1* @need_func_profiler, align 1
  %call1 = call %union.tree_node* @get_file_function_name(i32 73) #5
  %id = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds i8** %id, i64 1
  %5 = load i8** %4, align 8, !tbaa !35
  %call2 = call noalias i8* (i8*, ...)* @concat(i8* %5, i8* getelementptr inbounds ([5 x i8]* @.str26, i64 0, i64 0), i8* null) #5
  %call3 = call %union.tree_node* @get_identifier(i8* %call2) #5
  call void @free(i8* %call2)
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !5
  %call4 = call %union.tree_node* @build_function_type(%union.tree_node* %6, %union.tree_node* null) #5
  %call5 = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call3, %union.tree_node* %call4) #5
  %external_flag = getelementptr inbounds %union.tree_node* %call5, i64 0, i32 0, i32 5
  %7 = bitcast i48* %external_flag to i64*
  %bf.load = load i64* %7, align 8
  %bf.clear = and i64 %bf.load, -257
  store i64 %bf.clear, i64* %7, align 8
  %8 = load i8* getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 14), align 1, !tbaa !39, !range !45
  %9 = xor i8 %8, 1
  %lnot.ext = zext i8 %9 to i32
  %public_flag = getelementptr inbounds %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 2
  %bf.load7 = load i32* %public_flag, align 8
  %bf.value = shl nuw nsw i32 %lnot.ext, 19
  %bf.shl = and i32 %bf.value, 524288
  %bf.clear8 = and i32 %bf.load7, -589825
  %bf.set = or i32 %bf.clear8, %bf.shl
  %bf.set12 = or i32 %bf.set, 65536
  store i32 %bf.set12, i32* %public_flag, align 8
  %10 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !5
  %call13 = call %union.tree_node* @build_decl(i32 36, %union.tree_node* null, %union.tree_node* %10) #5
  %result = getelementptr inbounds %union.tree_node* %call5, i64 0, i32 0, i32 11
  store %union.tree_node* %call13, %union.tree_node** %result, align 8, !tbaa !46
  %call15 = call %union.tree_node* @pushdecl(%union.tree_node* %call5) #5
  call void @rest_of_decl_compilation(%union.tree_node* %call15, i8* null, i32 1, i32 0) #5
  call void @announce_function(%union.tree_node* %call15) #5
  store %union.tree_node* %call15, %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !5
  %initial = getelementptr inbounds %union.tree_node* %call15, i64 0, i32 0, i32 12
  store %union.tree_node* %11, %union.tree_node** %initial, align 8, !tbaa !48
  call void @make_decl_rtl(%union.tree_node* %call15, i8* null) #5
  %12 = load i8** @input_filename, align 8, !tbaa !5
  %13 = load i32* @lineno, align 4, !tbaa !1
  call void @init_function_start(%union.tree_node* %call15, i8* %12, i32 %13) #5
  call void @pushlevel(i32 0) #5
  call void @expand_function_start(%union.tree_node* %call15, i32 0) #5
  %arraydecay = getelementptr inbounds [20 x i8]* %buf, i64 0, i64 0
  %call17 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str28, i64 0, i64 0), i32 0) #5
  %14 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %14, 25
  %15 = and i32 %and, 1
  %16 = or i32 %15, 4
  %call23 = call i8* @ggc_alloc_string(i8* %arraydecay, i32 -1) #5
  %call24 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %16, i8* %call23) #5
  %call25 = call %struct.rtx_def* @force_reg(i32 %16, %struct.rtx_def* %call24) #5
  %17 = load i32* @target_flags, align 4, !tbaa !1
  %and26 = lshr i32 %17, 25
  %18 = and i32 %and26, 1
  %19 = or i32 %18, 4
  %call29 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %19, i8* getelementptr inbounds ([15 x i8]* @.str29, i64 0, i64 0)) #5
  %20 = load i32* @target_flags, align 4, !tbaa !1
  %and30 = lshr i32 %20, 25
  %21 = and i32 %and30, 1
  %22 = or i32 %21, 4
  call void (%struct.rtx_def*, i32, i32, i32, ...)* @emit_library_call(%struct.rtx_def* %call29, i32 0, i32 %call, i32 1, %struct.rtx_def* %call25, i32 %22) #5
  %23 = load i8** @input_filename, align 8, !tbaa !5
  %24 = load i32* @lineno, align 4, !tbaa !1
  call void @expand_function_end(i8* %23, i32 %24, i32 0) #5
  %call33 = call %union.tree_node* @poplevel(i32 1, i32 0, i32 1) #5
  store i32 0, i32* @flag_inline_functions, align 4, !tbaa !1
  store i32 0, i32* @flag_test_coverage, align 4, !tbaa !1
  store i32 0, i32* @profile_arc_flag, align 4, !tbaa !1
  store i32 0, i32* @flag_branch_probabilities, align 4, !tbaa !1
  call void @rest_of_compilation(%union.tree_node* %call15) #5
  store i32 %3, i32* @flag_inline_functions, align 4, !tbaa !1
  store i32 %2, i32* @flag_test_coverage, align 4, !tbaa !1
  store i32 %1, i32* @profile_arc_flag, align 4, !tbaa !1
  store i32 %0, i32* @flag_branch_probabilities, align 4, !tbaa !1
  %25 = load i32* @quiet_flag, align 4, !tbaa !1
  %tobool34 = icmp eq i32 %25, 0
  br i1 %tobool34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.end
  %26 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !5
  %call36 = call i32 @fflush(%struct._IO_FILE* %26) #5
  br label %if.end37

if.end37:                                         ; preds = %if.end, %if.then35
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %27 = load i8* getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 14), align 1, !tbaa !39, !range !45
  %tobool38 = icmp eq i8 %27, 0
  br i1 %tobool38, label %if.end47, label %if.then39

if.then39:                                        ; preds = %if.end37
  %28 = load void (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 0, i32 13), align 8, !tbaa !49
  %rtl = getelementptr inbounds %union.tree_node* %call15, i64 0, i32 0, i32 17
  %29 = load %struct.rtx_def** %rtl, align 8, !tbaa !50
  %tobool41 = icmp eq %struct.rtx_def* %29, null
  br i1 %tobool41, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then39
  call void @make_decl_rtl(%union.tree_node* %call15, i8* null) #5
  %30 = load %struct.rtx_def** %rtl, align 8, !tbaa !50
  br label %cond.end

cond.end:                                         ; preds = %if.then39, %cond.false
  %cond46 = phi %struct.rtx_def* [ %30, %cond.false ], [ %29, %if.then39 ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond46, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  call void %28(%struct.rtx_def* %31, i32 65535) #5
  br label %if.end47

if.end47:                                         ; preds = %if.end37, %entry, %cond.end
  ret void
}

declare i32 @mode_for_size(i32, i32, i32) #1

declare %union.tree_node* @get_file_function_name(i32) #1

declare noalias i8* @concat(i8*, ...) #1

declare %union.tree_node* @get_identifier(i8*) #1

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @pushdecl(%union.tree_node*) #1

declare void @rest_of_decl_compilation(%union.tree_node*, i8*, i32, i32) #1

declare void @announce_function(%union.tree_node*) #1

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

declare void @init_function_start(%union.tree_node*, i8*, i32) #1

declare void @pushlevel(i32) #1

declare void @expand_function_start(%union.tree_node*, i32) #1

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #3

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_s(i32, i32, i8*) #1

declare i8* @ggc_alloc_string(i8*, i32) #1

declare void @emit_library_call(%struct.rtx_def*, i32, i32, i32, ...) #1

declare void @expand_function_end(i8*, i32, i32) #1

declare %union.tree_node* @poplevel(i32, i32, i32) #1

declare void @rest_of_compilation(%union.tree_node*) #1

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) #3

declare void @ggc_add_rtx_root(%struct.rtx_def**, i32) #1

; Function Attrs: nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #3

declare void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) #1

declare void @commit_edge_insertions() #1

declare void @start_sequence() #1

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare %struct.rtx_def* @validize_mem(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_sequence() #1

declare void @end_sequence() #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

declare void @alloc_aux_for_blocks(i32) #1

declare i32 @any_condjump_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #3

declare void @free_aux_for_blocks() #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !6, i64 40}
!8 = metadata !{metadata !"function", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !2, i64 64, metadata !2, i64 68, metadata !2, i64 72, metadata !2, i64 76, metadata !6, i64 80, metadata !9, i64 88, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !2, i64 152, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !10, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !2, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !2, i64 328, metadata !2, i64 332, metadata !2, i64 336, metadata !6, i64 344, metadata !2, i64 352, metadata !2, i64 356, metadata !6, i64 360, metadata !6, i64 368, metadata !6, i64 376, metadata !2, i64 384, metadata !2, i64 388, metadata !6, i64 392, metadata !2, i64 400, metadata !2, i64 404, metadata !6, i64 408, metadata !6, i64 416, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426}
!9 = metadata !{metadata !"ix86_args", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24}
!10 = metadata !{metadata !"long long", metadata !3, i64 0}
!11 = metadata !{metadata !12, metadata !6, i64 8}
!12 = metadata !{metadata !"basic_block_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !2, i64 88, metadata !2, i64 92, metadata !10, i64 96, metadata !2, i64 104, metadata !2, i64 108}
!13 = metadata !{metadata !12, metadata !6, i64 0}
!14 = metadata !{metadata !15, metadata !6, i64 24}
!15 = metadata !{metadata !"edge_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !2, i64 48, metadata !2, i64 52, metadata !10, i64 56}
!16 = metadata !{metadata !15, metadata !2, i64 48}
!17 = metadata !{metadata !15, metadata !6, i64 16}
!18 = metadata !{metadata !12, metadata !2, i64 88}
!19 = metadata !{metadata !20, metadata !2, i64 4}
!20 = metadata !{metadata !"edge_list", metadata !2, i64 0, metadata !2, i64 4, metadata !6, i64 8}
!21 = metadata !{metadata !20, metadata !6, i64 8}
!22 = metadata !{metadata !15, metadata !10, i64 56}
!23 = metadata !{metadata !15, metadata !6, i64 40}
!24 = metadata !{metadata !3, metadata !3, i64 0}
!25 = metadata !{metadata !12, metadata !6, i64 80}
!26 = metadata !{metadata !12, metadata !6, i64 40}
!27 = metadata !{metadata !15, metadata !6, i64 8}
!28 = metadata !{metadata !12, metadata !6, i64 32}
!29 = metadata !{metadata !15, metadata !6, i64 0}
!30 = metadata !{metadata !31, metadata !10, i64 8}
!31 = metadata !{metadata !"bb_info", metadata !2, i64 0, metadata !10, i64 8, metadata !10, i64 16}
!32 = metadata !{metadata !31, metadata !10, i64 16}
!33 = metadata !{metadata !12, metadata !10, i64 96}
!34 = metadata !{metadata !15, metadata !2, i64 52}
!35 = metadata !{metadata !36, metadata !6, i64 32}
!36 = metadata !{metadata !"tree_identifier", metadata !37, i64 0, metadata !38, i64 24}
!37 = metadata !{metadata !"tree_common", metadata !6, i64 0, metadata !6, i64 8, metadata !3, i64 16, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19}
!38 = metadata !{metadata !"ht_identifier", metadata !2, i64 0, metadata !6, i64 8}
!39 = metadata !{metadata !40, metadata !44, i64 329}
!40 = metadata !{metadata !"gcc_target", metadata !41, i64 0, metadata !43, i64 168, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !6, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !6, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !44, i64 328, metadata !44, i64 329, metadata !6, i64 336}
!41 = metadata !{metadata !"asm_out", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !42, i64 24, metadata !42, i64 56, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !6, i64 152, metadata !6, i64 160}
!42 = metadata !{metadata !"asm_int_op", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24}
!43 = metadata !{metadata !"sched", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64}
!44 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!45 = metadata !{i8 0, i8 2}
!46 = metadata !{metadata !47, metadata !6, i64 96}
!47 = metadata !{metadata !"tree_decl", metadata !37, i64 0, metadata !6, i64 24, metadata !2, i64 32, metadata !2, i64 36, metadata !6, i64 40, metadata !3, i64 48, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 49, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 50, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !2, i64 51, metadata !3, i64 51, metadata !2, i64 51, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 52, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !2, i64 53, metadata !3, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !6, i64 152, metadata !3, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !10, i64 192, metadata !6, i64 200}
!48 = metadata !{metadata !47, metadata !6, i64 104}
!49 = metadata !{metadata !40, metadata !6, i64 152}
!50 = metadata !{metadata !47, metadata !6, i64 144}
