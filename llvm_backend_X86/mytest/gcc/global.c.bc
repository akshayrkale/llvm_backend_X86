; ModuleID = 'global.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.allocno = type { i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, i64 }
%struct.insn_chain = type { %struct.insn_chain*, %struct.insn_chain*, %struct.insn_chain*, i32, %struct.rtx_def*, %struct.bitmap_head_def, %struct.bitmap_head_def, %struct.reload*, i32, i64, %struct.needs, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.reload = type opaque
%struct.needs = type { [2 x [25 x i16]], [25 x i16] }
%struct._IO_FILE = type opaque
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@flag_omit_frame_pointer = external global i32
@cfun = external global %struct.function*
@max_allocno = internal unnamed_addr global i32 0, align 4
@no_global_alloc_regs = internal unnamed_addr global i64 0, align 8
@eliminable_regset = internal unnamed_addr global i64 0, align 8
@frame_pointer_needed = external global i32
@regs_used_so_far = internal unnamed_addr global i64 0, align 8
@regs_ever_live = external global [53 x i8]
@call_used_regs = external global [53 x i8]
@max_regno = external global i32
@reg_renumber = external global i16*
@reg_allocno = internal unnamed_addr global i32* null, align 8
@reg_may_share = internal unnamed_addr global i32* null, align 8
@regs_may_share = external global %struct.rtx_def*
@reg_n_info = external global %struct.varray_head_tag*
@.str = private unnamed_addr constant [9 x i8] c"global.c\00", align 1
@__FUNCTION__.global_alloc = private unnamed_addr constant [13 x i8] c"global_alloc\00", align 1
@allocno = internal unnamed_addr global %struct.allocno* null, align 8
@mode_size = external constant [59 x i8]
@target_flags = external global i32
@local_reg_live_length = internal unnamed_addr global [53 x i32] zeroinitializer, align 16
@local_reg_n_refs = internal unnamed_addr global [53 x i32] zeroinitializer, align 16
@local_reg_freq = internal unnamed_addr global [53 x i32] zeroinitializer, align 16
@mode_class = external constant [59 x i32]
@allocno_row_words = internal unnamed_addr global i32 0, align 4
@conflicts = internal unnamed_addr global i64* null, align 8
@allocnos_live = internal unnamed_addr global i64* null, align 8
@allocno_order = internal unnamed_addr global i32* null, align 8
@n_basic_blocks = external global i32
@basic_block_info = external global %struct.varray_head_tag*
@reload_insn_chain = external global %struct.insn_chain*
@live_relevant_regs = internal unnamed_addr global %struct.bitmap_head_def* null, align 8
@rtx_class = external constant [153 x i8]
@__FUNCTION__.build_insn_chain = private unnamed_addr constant [17 x i8] c"build_insn_chain\00", align 1
@.str1 = private unnamed_addr constant [27 x i8] c";; Register dispositions:\0A\00", align 1
@.str2 = private unnamed_addr constant [11 x i8] c"%d in %d  \00", align 1
@.str4 = private unnamed_addr constant [22 x i8] c"\0A\0A;; Hard regs used: \00", align 1
@.str5 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str6 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str7 = private unnamed_addr constant [24 x i8] c";; %d regs to allocate:\00", align 1
@.str8 = private unnamed_addr constant [4 x i8] c"+%d\00", align 1
@.str9 = private unnamed_addr constant [6 x i8] c" (%d)\00", align 1
@.str10 = private unnamed_addr constant [17 x i8] c";; %d conflicts:\00", align 1
@.str11 = private unnamed_addr constant [19 x i8] c";; %d preferences:\00", align 1
@fixed_regs = external global [53 x i8]
@call_fixed_reg_set = external global i64
@fixed_reg_set = external global i64
@call_used_reg_set = external global i64
@reg_class_contents = external global [25 x i64]
@reg_alloc_order = external global [53 x i32]
@regclass_map = external constant [53 x i32]
@flag_caller_saves = external global i32
@losing_caller_save_reg_set = external global i64
@caller_save_needed = external global i32
@max_parallel = external global i32
@regs_set = internal unnamed_addr global %struct.rtx_def** null, align 8
@hard_regs_live = internal global i64 0, align 8
@n_regs_set = internal unnamed_addr global i32 0, align 4
@rtx_format = external constant [153 x i8*]

; Function Attrs: nounwind uwtable
define i32 @global_alloc(%struct._IO_FILE* %file) #0 {
entry:
  %0 = load i32* @flag_omit_frame_pointer, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %for.end.thread, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !5
  %calls_alloca = getelementptr inbounds %struct.function* %1, i64 0, i32 56
  %2 = bitcast i24* %calls_alloca to i32*
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 64
  %tobool2 = icmp eq i32 %bf.clear, 0
  br i1 %tobool2, label %lor.end, label %for.end.thread

for.end.thread:                                   ; preds = %entry, %lor.lhs.false
  store i32 0, i32* @max_allocno, align 4, !tbaa !1
  %eliminable_regset.promoted975 = load i64* @eliminable_regset, align 8, !tbaa !7
  store i64 1114112, i64* @no_global_alloc_regs, align 8, !tbaa !7
  %or17983 = or i64 %eliminable_regset.promoted975, 1114176
  store i64 %or17983, i64* @eliminable_regset, align 8, !tbaa !7
  br label %if.then19

lor.end:                                          ; preds = %lor.lhs.false
  %call = tail call i32 @ix86_frame_pointer_required() #3
  %tobool3 = icmp ne i32 %call, 0
  store i32 0, i32* @max_allocno, align 4, !tbaa !1
  store i64 0, i64* @no_global_alloc_regs, align 8, !tbaa !7
  %3 = load i32* @frame_pointer_needed, align 4
  %4 = or i32 %3, %call
  %5 = icmp eq i32 %4, 0
  %eliminable_regset.promoted = load i64* @eliminable_regset, align 8, !tbaa !7
  br i1 %5, label %for.inc.3, label %for.end

for.end:                                          ; preds = %lor.end
  store i64 1114112, i64* @no_global_alloc_regs, align 8, !tbaa !7
  %or17 = or i64 %eliminable_regset.promoted, 1114176
  store i64 %or17, i64* @eliminable_regset, align 8, !tbaa !7
  br i1 %tobool3, label %if.then19, label %if.end21

if.then19:                                        ; preds = %for.end.thread, %for.inc.3, %for.end
  %6 = phi i64 [ 64, %for.inc.3 ], [ 1114176, %for.end ], [ 1114176, %for.end.thread ]
  store i64 %6, i64* @no_global_alloc_regs, align 8, !tbaa !7
  br label %if.end21

if.end21:                                         ; preds = %for.inc.3, %if.then19, %for.end
  store i64 0, i64* @regs_used_so_far, align 8, !tbaa !7
  br label %for.body24

for.cond38.preheader:                             ; preds = %for.inc35
  %7 = load i32* @max_regno, align 4, !tbaa !1
  %conv39953 = sext i32 %7 to i64
  %cmp40954 = icmp ugt i32 %7, 53
  br i1 %cmp40954, label %for.body42.lr.ph, label %for.end56

for.body42.lr.ph:                                 ; preds = %for.cond38.preheader
  %8 = load i16** @reg_renumber, align 8, !tbaa !5
  br label %for.body42

for.body24:                                       ; preds = %for.inc35, %if.end21
  %9 = phi i64 [ 0, %if.end21 ], [ %12, %for.inc35 ]
  %i.1957 = phi i64 [ 0, %if.end21 ], [ %inc36, %for.inc35 ]
  %arrayidx25 = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %i.1957
  %10 = load i8* %arrayidx25, align 1, !tbaa !9
  %tobool26 = icmp eq i8 %10, 0
  br i1 %tobool26, label %lor.lhs.false27, label %if.then31

lor.lhs.false27:                                  ; preds = %for.body24
  %arrayidx28 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %i.1957
  %11 = load i8* %arrayidx28, align 1, !tbaa !9
  %tobool30 = icmp eq i8 %11, 0
  br i1 %tobool30, label %for.inc35, label %if.then31

if.then31:                                        ; preds = %lor.lhs.false27, %for.body24
  %shl32 = shl i64 1, %i.1957
  %or33 = or i64 %9, %shl32
  store i64 %or33, i64* @regs_used_so_far, align 8, !tbaa !7
  br label %for.inc35

for.inc35:                                        ; preds = %lor.lhs.false27, %if.then31
  %12 = phi i64 [ %9, %lor.lhs.false27 ], [ %or33, %if.then31 ]
  %inc36 = add i64 %i.1957, 1
  %exitcond967 = icmp eq i64 %inc36, 53
  br i1 %exitcond967, label %for.cond38.preheader, label %for.body24

for.body42:                                       ; preds = %for.body42.lr.ph, %for.inc54
  %13 = phi i64 [ %12, %for.body42.lr.ph ], [ %15, %for.inc54 ]
  %i.2955 = phi i64 [ 53, %for.body42.lr.ph ], [ %inc55, %for.inc54 ]
  %arrayidx43 = getelementptr inbounds i16* %8, i64 %i.2955
  %14 = load i16* %arrayidx43, align 2, !tbaa !10
  %cmp45 = icmp sgt i16 %14, -1
  br i1 %cmp45, label %if.then47, label %for.inc54

if.then47:                                        ; preds = %for.body42
  %conv44 = sext i16 %14 to i64
  %sh_prom50 = and i64 %conv44, 4294967295
  %shl51 = shl i64 1, %sh_prom50
  %or52 = or i64 %13, %shl51
  store i64 %or52, i64* @regs_used_so_far, align 8, !tbaa !7
  br label %for.inc54

for.inc54:                                        ; preds = %for.body42, %if.then47
  %15 = phi i64 [ %13, %for.body42 ], [ %or52, %if.then47 ]
  %inc55 = add i64 %i.2955, 1
  %cmp40 = icmp ult i64 %inc55, %conv39953
  br i1 %cmp40, label %for.body42, label %for.end56

for.end56:                                        ; preds = %for.inc54, %for.cond38.preheader
  %mul = shl nsw i64 %conv39953, 2
  %call58 = tail call noalias i8* @xmalloc(i64 %mul) #3
  %16 = bitcast i8* %call58 to i32*
  store i32* %16, i32** @reg_allocno, align 8, !tbaa !5
  call void @llvm.memset.p0i8.i64(i8* %call58, i8 -1, i64 212, i32 4, i1 false)
  %17 = load i32* @max_regno, align 4, !tbaa !1
  %conv67 = sext i32 %17 to i64
  %call68 = tail call noalias i8* @xcalloc(i64 %conv67, i64 4) #3
  %18 = bitcast i8* %call68 to i32*
  store i32* %18, i32** @reg_may_share, align 8, !tbaa !5
  %x.0949 = load %struct.rtx_def** @regs_may_share, align 8
  %tobool70950 = icmp eq %struct.rtx_def* %x.0949, null
  br i1 %tobool70950, label %for.cond99.preheader, label %for.body71

for.cond99.preheader:                             ; preds = %for.inc91, %for.end56
  %19 = load i32* @max_regno, align 4, !tbaa !1
  %cmp101945 = icmp ugt i32 %19, 53
  br i1 %cmp101945, label %for.body103.lr.ph, label %for.end160

for.body103.lr.ph:                                ; preds = %for.cond99.preheader
  %.pre = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  br label %for.body103

for.body71:                                       ; preds = %for.end56, %for.inc91
  %x.0951 = phi %struct.rtx_def* [ %x.0, %for.inc91 ], [ %x.0949, %for.end56 ]
  %fld = getelementptr inbounds %struct.rtx_def* %x.0951, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx74 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx74 to i32*
  %21 = load i32* %rtuint, align 4, !tbaa !1
  %arrayidx76 = getelementptr inbounds %struct.rtx_def* %x.0951, i64 0, i32 1, i64 1
  %rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx77, align 8, !tbaa !5
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx80, align 8, !tbaa !5
  %arrayidx82 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0
  %rtuint83 = bitcast %union.rtunion_def* %arrayidx82 to i32*
  %24 = load i32* %rtuint83, align 4, !tbaa !1
  %cmp84 = icmp sgt i32 %21, %24
  br i1 %cmp84, label %if.then86, label %if.else

if.then86:                                        ; preds = %for.body71
  %idxprom = sext i32 %21 to i64
  %arrayidx87 = getelementptr inbounds i32* %18, i64 %idxprom
  store i32 %24, i32* %arrayidx87, align 4, !tbaa !1
  br label %for.inc91

if.else:                                          ; preds = %for.body71
  %idxprom88 = sext i32 %24 to i64
  %arrayidx89 = getelementptr inbounds i32* %18, i64 %idxprom88
  store i32 %21, i32* %arrayidx89, align 4, !tbaa !1
  br label %for.inc91

for.inc91:                                        ; preds = %if.then86, %if.else
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 1
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %x.0 = load %struct.rtx_def** %rtx97, align 8
  %tobool70 = icmp eq %struct.rtx_def* %x.0, null
  br i1 %tobool70, label %for.cond99.preheader, label %for.body71

for.body103:                                      ; preds = %for.body103.lr.ph, %for.inc158
  %i.4946 = phi i64 [ 53, %for.body103.lr.ph ], [ %inc159, %for.inc158 ]
  %data = getelementptr inbounds %struct.varray_head_tag* %.pre, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx104 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %i.4946
  %25 = load %struct.reg_info_def** %arrayidx104, align 8, !tbaa !5
  %refs = getelementptr inbounds %struct.reg_info_def* %25, i64 0, i32 4
  %26 = load i32* %refs, align 4, !tbaa !12
  %cmp105 = icmp eq i32 %26, 0
  br i1 %cmp105, label %if.else155, label %land.lhs.true107

land.lhs.true107:                                 ; preds = %for.body103
  %live_length = getelementptr inbounds %struct.reg_info_def* %25, i64 0, i32 7
  %27 = load i32* %live_length, align 4, !tbaa !14
  %cmp111 = icmp eq i32 %27, -1
  br i1 %cmp111, label %if.else155, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true107
  %28 = load %struct.function** @cfun, align 8, !tbaa !5
  %has_nonlocal_label = getelementptr inbounds %struct.function* %28, i64 0, i32 56
  %29 = bitcast i24* %has_nonlocal_label to i32*
  %bf.load114 = load i32* %29, align 8
  %bf.clear116 = and i32 %bf.load114, 256
  %tobool117 = icmp eq i32 %bf.clear116, 0
  br i1 %tobool117, label %if.then124, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %land.lhs.true113
  %calls_crossed = getelementptr inbounds %struct.reg_info_def* %25, i64 0, i32 8
  %30 = load i32* %calls_crossed, align 4, !tbaa !15
  %cmp122 = icmp eq i32 %30, 0
  br i1 %cmp122, label %if.then124, label %if.else155

if.then124:                                       ; preds = %land.lhs.true113, %lor.lhs.false118
  %31 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx125 = getelementptr inbounds i16* %31, i64 %i.4946
  %32 = load i16* %arrayidx125, align 2, !tbaa !10
  %cmp127 = icmp slt i16 %32, 0
  br i1 %cmp127, label %land.lhs.true129, label %if.else143

land.lhs.true129:                                 ; preds = %if.then124
  %arrayidx130 = getelementptr inbounds i32* %18, i64 %i.4946
  %33 = load i32* %arrayidx130, align 4, !tbaa !1
  %tobool131 = icmp eq i32 %33, 0
  br i1 %tobool131, label %if.else143, label %land.lhs.true132

land.lhs.true132:                                 ; preds = %land.lhs.true129
  %idxprom134 = sext i32 %33 to i64
  %34 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx135 = getelementptr inbounds i32* %34, i64 %idxprom134
  %35 = load i32* %arrayidx135, align 4, !tbaa !1
  %cmp136 = icmp sgt i32 %35, -1
  br i1 %cmp136, label %if.then138, label %if.else143

if.then138:                                       ; preds = %land.lhs.true132
  %arrayidx142 = getelementptr inbounds i32* %34, i64 %i.4946
  store i32 %35, i32* %arrayidx142, align 4, !tbaa !1
  br label %if.end146

if.else143:                                       ; preds = %land.lhs.true129, %land.lhs.true132, %if.then124
  %36 = load i32* @max_allocno, align 4, !tbaa !1
  %inc144 = add nsw i32 %36, 1
  store i32 %inc144, i32* @max_allocno, align 4, !tbaa !1
  %37 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx145 = getelementptr inbounds i32* %37, i64 %i.4946
  store i32 %36, i32* %arrayidx145, align 4, !tbaa !1
  br label %if.end146

if.end146:                                        ; preds = %if.else143, %if.then138
  %38 = load i32* %live_length, align 4, !tbaa !14
  %cmp151 = icmp eq i32 %38, 0
  br i1 %cmp151, label %if.then153, label %for.inc158

if.then153:                                       ; preds = %if.end146
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 441, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.global_alloc, i64 0, i64 0)) #5
  unreachable

if.else155:                                       ; preds = %land.lhs.true107, %for.body103, %lor.lhs.false118
  %39 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx156 = getelementptr inbounds i32* %39, i64 %i.4946
  store i32 -1, i32* %arrayidx156, align 4, !tbaa !1
  br label %for.inc158

for.inc158:                                       ; preds = %if.else155, %if.end146
  %inc159 = add i64 %i.4946, 1
  %40 = load i32* @max_regno, align 4, !tbaa !1
  %conv100 = sext i32 %40 to i64
  %cmp101 = icmp ult i64 %inc159, %conv100
  br i1 %cmp101, label %for.body103, label %for.end160

for.end160:                                       ; preds = %for.inc158, %for.cond99.preheader
  %41 = load i32* @max_allocno, align 4, !tbaa !1
  %conv161 = sext i32 %41 to i64
  %call162 = tail call noalias i8* @xcalloc(i64 %conv161, i64 64) #3
  %42 = bitcast i8* %call162 to %struct.allocno*
  store %struct.allocno* %42, %struct.allocno** @allocno, align 8, !tbaa !5
  %43 = load i32* @max_regno, align 4, !tbaa !1
  %cmp165942 = icmp ugt i32 %43, 53
  br i1 %cmp165942, label %for.body167.lr.ph, label %for.end233.thread

for.end233.thread:                                ; preds = %for.end160
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x i32]* @local_reg_live_length to i8*), i8 0, i64 212, i32 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x i32]* @local_reg_n_refs to i8*), i8 0, i64 212, i32 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x i32]* @local_reg_freq to i8*), i8 0, i64 212, i32 16, i1 false)
  br label %for.body380

for.body167.lr.ph:                                ; preds = %for.end160
  %.pre970 = load i32** @reg_allocno, align 8, !tbaa !5
  br label %for.body167

for.body167:                                      ; preds = %for.body167.lr.ph, %for.inc231
  %i.5943 = phi i64 [ 53, %for.body167.lr.ph ], [ %inc232, %for.inc231 ]
  %arrayidx168 = getelementptr inbounds i32* %.pre970, i64 %i.5943
  %44 = load i32* %arrayidx168, align 4, !tbaa !1
  %cmp169 = icmp sgt i32 %44, -1
  br i1 %cmp169, label %if.then171, label %for.inc231

if.then171:                                       ; preds = %for.body167
  %conv173 = trunc i64 %i.5943 to i32
  %idxprom174 = sext i32 %44 to i64
  %reg176 = getelementptr inbounds %struct.allocno* %42, i64 %idxprom174, i32 0
  store i32 %conv173, i32* %reg176, align 4, !tbaa !16
  %45 = load %struct.function** @cfun, align 8, !tbaa !5
  %emit = getelementptr inbounds %struct.function* %45, i64 0, i32 3
  %46 = load %struct.emit_status** %emit, align 8, !tbaa !18
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %46, i64 0, i32 12
  %47 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !21
  %arrayidx177 = getelementptr inbounds %struct.rtx_def** %47, i64 %i.5943
  %48 = load %struct.rtx_def** %arrayidx177, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load178 = load i32* %49, align 8
  %bf.lshr179 = lshr i32 %bf.load178, 16
  %bf.clear180 = and i32 %bf.lshr179, 255
  %idxprom181633 = zext i32 %bf.clear180 to i64
  %arrayidx182 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom181633
  %50 = load i8* %arrayidx182, align 1, !tbaa !9
  %conv183 = zext i8 %50 to i32
  %51 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %51, 23
  %52 = and i32 %and, 4
  %53 = add i32 %52, 4
  %add = add i32 %conv183, -1
  %sub = add i32 %add, %53
  %div = sdiv i32 %sub, %53
  %size = getelementptr inbounds %struct.allocno* %42, i64 %idxprom174, i32 1
  store i32 %div, i32* %size, align 4, !tbaa !23
  %54 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data190 = getelementptr inbounds %struct.varray_head_tag* %54, i64 0, i32 4
  %reg191 = bitcast %union.varray_data_tag* %data190 to [1 x %struct.reg_info_def*]*
  %arrayidx192 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg191, i64 0, i64 %i.5943
  %55 = load %struct.reg_info_def** %arrayidx192, align 8, !tbaa !5
  %calls_crossed193 = getelementptr inbounds %struct.reg_info_def* %55, i64 0, i32 8
  %56 = load i32* %calls_crossed193, align 4, !tbaa !15
  %calls_crossed196 = getelementptr inbounds %struct.allocno* %42, i64 %idxprom174, i32 2
  %57 = load i32* %calls_crossed196, align 4, !tbaa !24
  %add197 = add nsw i32 %57, %56
  store i32 %add197, i32* %calls_crossed196, align 4, !tbaa !24
  %refs201 = getelementptr inbounds %struct.reg_info_def* %55, i64 0, i32 4
  %58 = load i32* %refs201, align 4, !tbaa !12
  %n_refs = getelementptr inbounds %struct.allocno* %42, i64 %idxprom174, i32 3
  %59 = load i32* %n_refs, align 4, !tbaa !25
  %add204 = add nsw i32 %59, %58
  store i32 %add204, i32* %n_refs, align 4, !tbaa !25
  %freq = getelementptr inbounds %struct.reg_info_def* %55, i64 0, i32 5
  %60 = load i32* %freq, align 4, !tbaa !26
  %freq210 = getelementptr inbounds %struct.allocno* %42, i64 %idxprom174, i32 4
  %61 = load i32* %freq210, align 4, !tbaa !27
  %add211 = add nsw i32 %61, %60
  store i32 %add211, i32* %freq210, align 4, !tbaa !27
  %live_length214 = getelementptr inbounds %struct.allocno* %42, i64 %idxprom174, i32 5
  %62 = load i32* %live_length214, align 4, !tbaa !28
  %live_length218 = getelementptr inbounds %struct.reg_info_def* %55, i64 0, i32 7
  %63 = load i32* %live_length218, align 4, !tbaa !14
  %cmp219 = icmp slt i32 %62, %63
  br i1 %cmp219, label %if.then221, label %for.inc231

if.then221:                                       ; preds = %if.then171
  store i32 %63, i32* %live_length214, align 4, !tbaa !28
  br label %for.inc231

for.inc231:                                       ; preds = %for.body167, %if.then221, %if.then171
  %inc232 = add i64 %i.5943, 1
  %conv164 = sext i32 %43 to i64
  %cmp165 = icmp ult i64 %inc232, %conv164
  br i1 %cmp165, label %for.body167, label %for.end233

for.end233:                                       ; preds = %for.inc231
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x i32]* @local_reg_live_length to i8*), i8 0, i64 212, i32 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x i32]* @local_reg_n_refs to i8*), i8 0, i64 212, i32 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([53 x i32]* @local_reg_freq to i8*), i8 0, i64 212, i32 16, i1 false)
  br i1 %cmp165942, label %for.body238.lr.ph, label %for.body380

for.body238.lr.ph:                                ; preds = %for.end233
  %.pre971 = load i16** @reg_renumber, align 8, !tbaa !5
  br label %for.body238

for.body238:                                      ; preds = %for.body238.lr.ph, %for.inc374
  %i.6940 = phi i64 [ 53, %for.body238.lr.ph ], [ %inc375, %for.inc374 ]
  %arrayidx239 = getelementptr inbounds i16* %.pre971, i64 %i.6940
  %64 = load i16* %arrayidx239, align 2, !tbaa !10
  %conv240 = sext i16 %64 to i32
  %cmp241 = icmp sgt i16 %64, -1
  br i1 %cmp241, label %if.then243, label %for.inc374

if.then243:                                       ; preds = %for.body238
  %65 = and i16 %64, -8
  %66 = icmp eq i16 %65, 8
  %.off = add i16 %64, -21
  %67 = icmp ult i16 %.off, 8
  %or.cond636 = or i1 %66, %67
  %.off629 = add i16 %64, -45
  %68 = icmp ult i16 %.off629, 8
  %or.cond638 = or i1 %or.cond636, %68
  %.off630 = add i16 %64, -29
  %69 = icmp ult i16 %.off630, 8
  %or.cond640 = or i1 %or.cond638, %69
  %70 = load %struct.function** @cfun, align 8, !tbaa !5
  %emit270 = getelementptr inbounds %struct.function* %70, i64 0, i32 3
  %71 = load %struct.emit_status** %emit270, align 8, !tbaa !18
  %x_regno_reg_rtx271 = getelementptr inbounds %struct.emit_status* %71, i64 0, i32 12
  %72 = load %struct.rtx_def*** %x_regno_reg_rtx271, align 8, !tbaa !21
  %arrayidx272 = getelementptr inbounds %struct.rtx_def** %72, i64 %i.6940
  %73 = load %struct.rtx_def** %arrayidx272, align 8, !tbaa !5
  %74 = getelementptr inbounds %struct.rtx_def* %73, i64 0, i32 0
  %bf.load273 = load i32* %74, align 8
  %bf.lshr274 = lshr i32 %bf.load273, 16
  %bf.clear275 = and i32 %bf.lshr274, 255
  br i1 %or.cond640, label %cond.true269, label %cond.false294

cond.true269:                                     ; preds = %if.then243
  %idxprom276632 = zext i32 %bf.clear275 to i64
  %arrayidx277 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom276632
  %75 = load i32* %arrayidx277, align 4, !tbaa !9
  %cmp278 = icmp eq i32 %75, 5
  br i1 %cmp278, label %for.body348.lr.ph, label %lor.rhs280

lor.rhs280:                                       ; preds = %cond.true269
  %cmp289 = icmp eq i32 %75, 6
  %phitmp = select i1 %cmp289, i32 2, i32 1
  br label %for.body348.lr.ph

cond.false294:                                    ; preds = %if.then243
  switch i32 %bf.clear275, label %cond.end342 [
    i32 18, label %cond.true303
    i32 24, label %cond.true316
  ]

cond.true303:                                     ; preds = %cond.false294
  %76 = load i32* @target_flags, align 4, !tbaa !1
  %and304 = lshr i32 %76, 25
  %77 = and i32 %and304, 1
  %78 = xor i32 %77, 3
  br label %for.body348.lr.ph

cond.true316:                                     ; preds = %cond.false294
  %79 = load i32* @target_flags, align 4, !tbaa !1
  %and317 = lshr i32 %79, 24
  %80 = and i32 %and317, 2
  %81 = xor i32 %80, 6
  br label %for.body348.lr.ph

cond.end342:                                      ; preds = %cond.false294
  %idxprom327631 = zext i32 %bf.clear275 to i64
  %arrayidx328 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom327631
  %82 = load i8* %arrayidx328, align 1, !tbaa !9
  %conv329 = zext i8 %82 to i32
  %83 = load i32* @target_flags, align 4, !tbaa !1
  %and330 = lshr i32 %83, 23
  %84 = and i32 %and330, 4
  %85 = add i32 %84, 4
  %add333 = add i32 %conv329, -1
  %sub334 = add i32 %add333, %85
  %div338 = sdiv i32 %sub334, %85
  %cmp346936 = icmp sgt i32 %div338, 0
  br i1 %cmp346936, label %for.body348.lr.ph, label %for.inc374

for.body348.lr.ph:                                ; preds = %lor.rhs280, %cond.true269, %cond.true316, %cond.true303, %cond.end342
  %cond343.ph.pn = phi i32 [ %div338, %cond.end342 ], [ %78, %cond.true303 ], [ %81, %cond.true316 ], [ 2, %cond.true269 ], [ %phitmp, %lor.rhs280 ]
  %add344981 = add nsw i32 %cond343.ph.pn, %conv240
  %86 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data349 = getelementptr inbounds %struct.varray_head_tag* %86, i64 0, i32 4
  %reg350 = bitcast %union.varray_data_tag* %data349 to [1 x %struct.reg_info_def*]*
  %arrayidx351 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg350, i64 0, i64 %i.6940
  %87 = load %struct.reg_info_def** %arrayidx351, align 8, !tbaa !5
  %refs352 = getelementptr inbounds %struct.reg_info_def* %87, i64 0, i32 4
  %freq359 = getelementptr inbounds %struct.reg_info_def* %87, i64 0, i32 5
  %live_length366 = getelementptr inbounds %struct.reg_info_def* %87, i64 0, i32 7
  %88 = sext i16 %64 to i64
  br label %for.body348

for.body348:                                      ; preds = %for.body348.lr.ph, %for.body348
  %indvars.iv = phi i64 [ %88, %for.body348.lr.ph ], [ %indvars.iv.next, %for.body348 ]
  %89 = load i32* %refs352, align 4, !tbaa !12
  %arrayidx354 = getelementptr inbounds [53 x i32]* @local_reg_n_refs, i64 0, i64 %indvars.iv
  %90 = load i32* %arrayidx354, align 4, !tbaa !1
  %add355 = add nsw i32 %90, %89
  store i32 %add355, i32* %arrayidx354, align 4, !tbaa !1
  %91 = load i32* %freq359, align 4, !tbaa !26
  %arrayidx361 = getelementptr inbounds [53 x i32]* @local_reg_freq, i64 0, i64 %indvars.iv
  %92 = load i32* %arrayidx361, align 4, !tbaa !1
  %add362 = add nsw i32 %92, %91
  store i32 %add362, i32* %arrayidx361, align 4, !tbaa !1
  %93 = load i32* %live_length366, align 4, !tbaa !14
  %arrayidx368 = getelementptr inbounds [53 x i32]* @local_reg_live_length, i64 0, i64 %indvars.iv
  %94 = load i32* %arrayidx368, align 4, !tbaa !1
  %add369 = add nsw i32 %94, %93
  store i32 %add369, i32* %arrayidx368, align 4, !tbaa !1
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %95 = trunc i64 %indvars.iv.next to i32
  %cmp346 = icmp slt i32 %95, %add344981
  br i1 %cmp346, label %for.body348, label %for.inc374

for.inc374:                                       ; preds = %for.body348, %cond.end342, %for.body238
  %inc375 = add i64 %i.6940, 1
  %conv235 = sext i32 %43 to i64
  %cmp236 = icmp ult i64 %inc375, %conv235
  br i1 %cmp236, label %for.body238, label %for.body380

for.body380:                                      ; preds = %for.end233, %for.end233.thread, %for.inc374, %for.inc387
  %i.7935 = phi i64 [ %inc388, %for.inc387 ], [ 0, %for.inc374 ], [ 0, %for.end233.thread ], [ 0, %for.end233 ]
  %arrayidx381 = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %i.7935
  %96 = load i8* %arrayidx381, align 1, !tbaa !9
  %tobool382 = icmp eq i8 %96, 0
  br i1 %tobool382, label %for.inc387, label %if.then383

if.then383:                                       ; preds = %for.body380
  %arrayidx384 = getelementptr inbounds [53 x i32]* @local_reg_n_refs, i64 0, i64 %i.7935
  store i32 0, i32* %arrayidx384, align 4, !tbaa !1
  %arrayidx385 = getelementptr inbounds [53 x i32]* @local_reg_freq, i64 0, i64 %i.7935
  store i32 0, i32* %arrayidx385, align 4, !tbaa !1
  br label %for.inc387

for.inc387:                                       ; preds = %for.body380, %if.then383
  %inc388 = add i64 %i.7935, 1
  %exitcond965 = icmp eq i64 %inc388, 53
  br i1 %exitcond965, label %for.end389, label %for.body380

for.end389:                                       ; preds = %for.inc387
  %97 = load i32* @max_allocno, align 4, !tbaa !1
  %sub391 = add nsw i32 %97, 63
  %div392 = sdiv i32 %sub391, 64
  store i32 %div392, i32* @allocno_row_words, align 4, !tbaa !1
  %mul393 = mul nsw i32 %div392, %97
  %conv394 = sext i32 %mul393 to i64
  %call395 = tail call noalias i8* @xcalloc(i64 %conv394, i64 8) #3
  %98 = bitcast i8* %call395 to i64*
  store i64* %98, i64** @conflicts, align 8, !tbaa !5
  %99 = load i32* @allocno_row_words, align 4, !tbaa !1
  %conv396 = sext i32 %99 to i64
  %mul397 = shl nsw i64 %conv396, 3
  %call398 = tail call noalias i8* @xmalloc(i64 %mul397) #3
  %100 = bitcast i8* %call398 to i64*
  store i64* %100, i64** @allocnos_live, align 8, !tbaa !5
  %101 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp399 = icmp sgt i32 %101, 0
  br i1 %cmp399, label %if.then401, label %if.end511

if.then401:                                       ; preds = %for.end389
  %102 = load i32* @max_parallel, align 4, !tbaa !1
  %conv.i = sext i32 %102 to i64
  %mul1.i = shl nsw i64 %conv.i, 4
  %call.i = tail call noalias i8* @xmalloc(i64 %mul1.i) #3
  %103 = bitcast i8* %call.i to %struct.rtx_def**
  store %struct.rtx_def** %103, %struct.rtx_def*** @regs_set, align 8, !tbaa !5
  %104 = load i32* @max_allocno, align 4, !tbaa !1
  %conv2.i = sext i32 %104 to i64
  %mul3.i = shl nsw i64 %conv2.i, 2
  %call4.i = tail call noalias i8* @xmalloc(i64 %mul3.i) #3
  %105 = bitcast i8* %call4.i to i32*
  %106 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp381.i = icmp sgt i32 %106, 0
  br i1 %cmp381.i, label %for.body.i, label %global_conflicts.exit

for.body.i:                                       ; preds = %if.then401, %for.inc254.i
  %indvars.iv392.i = phi i64 [ %indvars.iv.next393.i, %for.inc254.i ], [ 0, %if.then401 ]
  %107 = load i64** @allocnos_live, align 8, !tbaa !5
  %108 = bitcast i64* %107 to i8*
  %109 = load i32* @allocno_row_words, align 4, !tbaa !1
  %conv6.i = sext i32 %109 to i64
  %mul7.i = shl nsw i64 %conv6.i, 3
  tail call void @llvm.memset.p0i8.i64(i8* %108, i8 0, i64 %mul7.i, i32 1, i1 false) #3
  %110 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data.i = getelementptr inbounds %struct.varray_head_tag* %110, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %indvars.iv392.i
  %111 = load %struct.basic_block_def** %arrayidx.i, align 8, !tbaa !5
  %global_live_at_start.i = getelementptr inbounds %struct.basic_block_def* %111, i64 0, i32 8
  %112 = load %struct.bitmap_head_def** %global_live_at_start.i, align 8, !tbaa !29
  store i64 0, i64* @hard_regs_live, align 8, !tbaa !7
  tail call void @reg_set_to_hard_reg_set(i64* @hard_regs_live, %struct.bitmap_head_def* %112) #3
  %first.i = getelementptr inbounds %struct.bitmap_head_def* %112, i64 0, i32 0
  %113 = load %struct.bitmap_element_def** %first.i, align 8, !tbaa !31
  %cmp9.i = icmp eq %struct.bitmap_element_def* %113, null
  br i1 %cmp9.i, label %record_conflicts.exit.i, label %for.cond22.preheader.lr.ph.i

for.cond22.preheader.lr.ph.i:                     ; preds = %for.body.i
  %indx15.i = getelementptr inbounds %struct.bitmap_element_def* %113, i64 0, i32 2
  %114 = load i32* %indx15.i, align 4, !tbaa !33
  %cmp16.i = icmp eq i32 %114, 0
  %..i = select i1 %cmp16.i, i32 53, i32 0
  br label %for.cond22.preheader.i

for.cond22.preheader.i:                           ; preds = %for.end73.i, %for.cond22.preheader.lr.ph.i
  %ax.0357.i = phi i32 [ 0, %for.cond22.preheader.lr.ph.i ], [ %ax.5.i, %for.end73.i ]
  %ptr_.1356.i = phi %struct.bitmap_element_def* [ %113, %for.cond22.preheader.lr.ph.i ], [ %148, %for.end73.i ]
  %bit_num_.0355.i = phi i32 [ %..i, %for.cond22.preheader.lr.ph.i ], [ 0, %for.end73.i ]
  %indx39.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1356.i, i64 0, i32 2
  br label %for.body25.i

for.body25.i:                                     ; preds = %if.end70.i, %for.cond22.preheader.i
  %indvars.iv386.i = phi i64 [ 0, %for.cond22.preheader.i ], [ %indvars.iv.next387.i, %if.end70.i ]
  %ax.1353.i = phi i32 [ %ax.0357.i, %for.cond22.preheader.i ], [ %ax.5.i, %if.end70.i ]
  %bit_num_.1352.i = phi i32 [ %bit_num_.0355.i, %for.cond22.preheader.i ], [ 0, %if.end70.i ]
  %arrayidx27.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1356.i, i64 0, i32 3, i64 %indvars.iv386.i
  %115 = load i64* %arrayidx27.i, align 8, !tbaa !7
  %cmp28.i = icmp eq i64 %115, 0
  br i1 %cmp28.i, label %if.end70.i, label %for.body34.preheader.i

for.body34.preheader.i:                           ; preds = %for.body25.i
  %116 = shl i64 %indvars.iv386.i, 6
  %117 = zext i32 %bit_num_.1352.i to i64
  %118 = trunc i64 %116 to i32
  br label %for.body34.i

for.body34.i:                                     ; preds = %for.inc.i, %for.body34.preheader.i
  %indvars.iv.i = phi i64 [ %117, %for.body34.preheader.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %word_.0.i = phi i64 [ %115, %for.body34.preheader.i ], [ %word_.1.i, %for.inc.i ]
  %bit_num_.2.i = phi i32 [ %bit_num_.1352.i, %for.body34.preheader.i ], [ %inc69.i, %for.inc.i ]
  %ax.2.i = phi i32 [ %ax.1353.i, %for.body34.preheader.i ], [ %ax.4.i, %for.inc.i ]
  %shl.i = shl i64 1, %indvars.iv.i
  %and.i = and i64 %shl.i, %word_.0.i
  %cmp35.i = icmp eq i64 %and.i, 0
  br i1 %cmp35.i, label %for.inc.i, label %if.then37.i

if.then37.i:                                      ; preds = %for.body34.i
  %neg.i = xor i64 %shl.i, -1
  %and38.i = and i64 %word_.0.i, %neg.i
  %119 = load i32* %indx39.i, align 4, !tbaa !33
  %mul40.i = shl i32 %119, 7
  %120 = trunc i64 %indvars.iv.i to i32
  %add.i = add i32 %120, %118
  %add42.i = add i32 %add.i, %mul40.i
  %idxprom43.i = sext i32 %add42.i to i64
  %121 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx44.i = getelementptr inbounds i32* %121, i64 %idxprom43.i
  %122 = load i32* %arrayidx44.i, align 4, !tbaa !1
  %cmp45.i = icmp sgt i32 %122, -1
  br i1 %cmp45.i, label %if.then47.i, label %if.else.i

if.then47.i:                                      ; preds = %if.then37.i
  %rem.i = and i32 %122, 63
  %sh_prom48.i = zext i32 %rem.i to i64
  %shl49.i = shl i64 1, %sh_prom48.i
  %div.i = lshr i32 %122, 6
  %idxprom50.i = zext i32 %div.i to i64
  %123 = load i64** @allocnos_live, align 8, !tbaa !5
  %arrayidx51.i = getelementptr inbounds i64* %123, i64 %idxprom50.i
  %124 = load i64* %arrayidx51.i, align 8, !tbaa !7
  %or.i = or i64 %124, %shl49.i
  store i64 %or.i, i64* %arrayidx51.i, align 8, !tbaa !7
  %inc.i = add nsw i32 %ax.2.i, 1
  %idxprom52.i = sext i32 %ax.2.i to i64
  %arrayidx53.i = getelementptr inbounds i32* %105, i64 %idxprom52.i
  store i32 %122, i32* %arrayidx53.i, align 4, !tbaa !1
  br label %if.end63.i

if.else.i:                                        ; preds = %if.then37.i
  %125 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx55.i = getelementptr inbounds i16* %125, i64 %idxprom43.i
  %126 = load i16* %arrayidx55.i, align 2, !tbaa !10
  %cmp57.i = icmp sgt i16 %126, -1
  br i1 %cmp57.i, label %if.then59.i, label %if.end63.i

if.then59.i:                                      ; preds = %if.else.i
  %conv56.i = sext i16 %126 to i32
  %127 = load %struct.function** @cfun, align 8, !tbaa !5
  %emit.i = getelementptr inbounds %struct.function* %127, i64 0, i32 3
  %128 = load %struct.emit_status** %emit.i, align 8, !tbaa !18
  %x_regno_reg_rtx.i = getelementptr inbounds %struct.emit_status* %128, i64 0, i32 12
  %129 = load %struct.rtx_def*** %x_regno_reg_rtx.i, align 8, !tbaa !21
  %arrayidx61.i = getelementptr inbounds %struct.rtx_def** %129, i64 %idxprom43.i
  %130 = load %struct.rtx_def** %arrayidx61.i, align 8, !tbaa !5
  %131 = getelementptr inbounds %struct.rtx_def* %130, i64 0, i32 0
  %bf.load.i = load i32* %131, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %132 = and i32 %conv56.i, -8
  %133 = icmp eq i32 %132, 8
  %regno.off.i.i = add i32 %conv56.i, -21
  %134 = icmp ult i32 %regno.off.i.i, 8
  %or.cond.i.i = or i1 %133, %134
  %regno.off61.i.i = add i32 %conv56.i, -45
  %135 = icmp ult i32 %regno.off61.i.i, 8
  %or.cond65.i.i = or i1 %or.cond.i.i, %135
  %regno.off62.i.i = add i32 %conv56.i, -29
  %136 = icmp ult i32 %regno.off62.i.i, 8
  %or.cond67.i.i = or i1 %or.cond65.i.i, %136
  br i1 %or.cond67.i.i, label %cond.true.i.i, label %cond.false.i.i

cond.true.i.i:                                    ; preds = %if.then59.i
  %idxprom.i348.i = zext i32 %bf.clear.i to i64
  %arrayidx.i.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom.i348.i
  %137 = load i32* %arrayidx.i.i, align 4, !tbaa !9
  %cmp13.i.i = icmp eq i32 %137, 5
  br i1 %cmp13.i.i, label %while.body.lr.ph.i.i, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %cond.true.i.i
  %cmp16.i.i = icmp eq i32 %137, 6
  %phitmp.i.i = select i1 %cmp16.i.i, i32 2, i32 1
  br label %while.body.lr.ph.i.i

cond.false.i.i:                                   ; preds = %if.then59.i
  switch i32 %bf.clear.i, label %cond.end38.i.i [
    i32 18, label %cond.true18.i.i
    i32 24, label %cond.true22.i.i
  ]

cond.true18.i.i:                                  ; preds = %cond.false.i.i
  %138 = load i32* @target_flags, align 4, !tbaa !1
  %and.i.i = lshr i32 %138, 25
  %139 = and i32 %and.i.i, 1
  %140 = xor i32 %139, 3
  br label %while.body.lr.ph.i.i

cond.true22.i.i:                                  ; preds = %cond.false.i.i
  %141 = load i32* @target_flags, align 4, !tbaa !1
  %and23.i.i = lshr i32 %141, 24
  %142 = and i32 %and23.i.i, 2
  %143 = xor i32 %142, 6
  br label %while.body.lr.ph.i.i

cond.end38.i.i:                                   ; preds = %cond.false.i.i
  %idxprom27.i347.i = zext i32 %bf.clear.i to i64
  %arrayidx28.i.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom27.i347.i
  %144 = load i8* %arrayidx28.i.i, align 1, !tbaa !9
  %conv.i.i = zext i8 %144 to i32
  %145 = load i32* @target_flags, align 4, !tbaa !1
  %and29.i.i = lshr i32 %145, 23
  %146 = and i32 %and29.i.i, 4
  %147 = add i32 %146, 4
  %add.i.i = add i32 %conv.i.i, -1
  %sub.i.i = add i32 %add.i.i, %147
  %div.i.i = sdiv i32 %sub.i.i, %147
  %cmp4168.i.i = icmp sgt i32 %div.i.i, 0
  br i1 %cmp4168.i.i, label %while.body.lr.ph.i.i, label %if.end63.i

while.body.lr.ph.i.i:                             ; preds = %cond.end38.i.i, %cond.true22.i.i, %cond.true18.i.i, %lor.rhs.i.i, %cond.true.i.i
  %cond39.ph.pn.i.i = phi i32 [ %div.i.i, %cond.end38.i.i ], [ %140, %cond.true18.i.i ], [ %143, %cond.true22.i.i ], [ 2, %cond.true.i.i ], [ %phitmp.i.i, %lor.rhs.i.i ]
  %add4073.i.i = add nsw i32 %cond39.ph.pn.i.i, %conv56.i
  %hard_regs_live.promoted.i.i = load i64* @hard_regs_live, align 8, !tbaa !7
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %while.body.lr.ph.i.i
  %or70.i.i = phi i64 [ %hard_regs_live.promoted.i.i, %while.body.lr.ph.i.i ], [ %or.i.i, %while.body.i.i ]
  %regno.addr.069.i.i = phi i32 [ %conv56.i, %while.body.lr.ph.i.i ], [ %inc.i.i, %while.body.i.i ]
  %sh_prom.i.i = zext i32 %regno.addr.069.i.i to i64
  %shl.i.i = shl i64 1, %sh_prom.i.i
  %or.i.i = or i64 %shl.i.i, %or70.i.i
  %inc.i.i = add nsw i32 %regno.addr.069.i.i, 1
  %cmp41.i.i = icmp slt i32 %inc.i.i, %add4073.i.i
  br i1 %cmp41.i.i, label %while.body.i.i, label %while.cond.while.end_crit_edge.i.i

while.cond.while.end_crit_edge.i.i:               ; preds = %while.body.i.i
  store i64 %or.i.i, i64* @hard_regs_live, align 8, !tbaa !7
  br label %if.end63.i

if.end63.i:                                       ; preds = %while.cond.while.end_crit_edge.i.i, %cond.end38.i.i, %if.else.i, %if.then47.i
  %ax.3.i = phi i32 [ %inc.i, %if.then47.i ], [ %ax.2.i, %if.else.i ], [ %ax.2.i, %cond.end38.i.i ], [ %ax.2.i, %while.cond.while.end_crit_edge.i.i ]
  %cmp64.i = icmp eq i64 %and38.i, 0
  br i1 %cmp64.i, label %if.end70.i, label %for.inc.i

for.inc.i:                                        ; preds = %if.end63.i, %for.body34.i
  %word_.1.i = phi i64 [ %and38.i, %if.end63.i ], [ %word_.0.i, %for.body34.i ]
  %ax.4.i = phi i32 [ %ax.3.i, %if.end63.i ], [ %ax.2.i, %for.body34.i ]
  %inc69.i = add i32 %bit_num_.2.i, 1
  %cmp32.old.i = icmp ult i32 %inc69.i, 64
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %cmp32.old.i, label %for.body34.i, label %if.end70.i

if.end70.i:                                       ; preds = %for.inc.i, %if.end63.i, %for.body25.i
  %ax.5.i = phi i32 [ %ax.1353.i, %for.body25.i ], [ %ax.4.i, %for.inc.i ], [ %ax.3.i, %if.end63.i ]
  %indvars.iv.next387.i = add nuw nsw i64 %indvars.iv386.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next387.i, 2
  br i1 %exitcond.i, label %for.end73.i, label %for.body25.i

for.end73.i:                                      ; preds = %if.end70.i
  %next75.i = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1356.i, i64 0, i32 0
  %148 = load %struct.bitmap_element_def** %next75.i, align 8, !tbaa !35
  %cmp19.i = icmp eq %struct.bitmap_element_def* %148, null
  br i1 %cmp19.i, label %do.end77.i, label %for.cond22.preheader.i

do.end77.i:                                       ; preds = %for.end73.i
  %cmp6.i.i = icmp sgt i32 %ax.5.i, 0
  br i1 %cmp6.i.i, label %while.body.lr.ph.i327.i, label %record_conflicts.exit.i

while.body.lr.ph.i327.i:                          ; preds = %do.end77.i
  %149 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %150 = sext i32 %ax.5.i to i64
  br label %while.body.i330.i

while.body.i330.i:                                ; preds = %while.body.i330.i, %while.body.lr.ph.i327.i
  %indvars.iv.i.i = phi i64 [ %150, %while.body.lr.ph.i327.i ], [ %indvars.iv.next.i.i, %while.body.i330.i ]
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, -1
  %arrayidx.i328.i = getelementptr inbounds i32* %105, i64 %indvars.iv.next.i.i
  %151 = load i32* %arrayidx.i328.i, align 4, !tbaa !1
  %152 = load i64* @hard_regs_live, align 8, !tbaa !7
  %idxprom1.i.i = sext i32 %151 to i64
  %hard_reg_conflicts.i.i = getelementptr inbounds %struct.allocno* %149, i64 %idxprom1.i.i, i32 6
  %153 = load i64* %hard_reg_conflicts.i.i, align 8, !tbaa !36
  %or.i329.i = or i64 %153, %152
  store i64 %or.i329.i, i64* %hard_reg_conflicts.i.i, align 8, !tbaa !36
  %154 = trunc i64 %indvars.iv.next.i.i to i32
  %cmp.i.i = icmp sgt i32 %154, 0
  br i1 %cmp.i.i, label %while.body.i330.i, label %record_conflicts.exit.i

record_conflicts.exit.i:                          ; preds = %while.body.i330.i, %do.end77.i, %for.body.i
  %155 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data79.i = getelementptr inbounds %struct.varray_head_tag* %155, i64 0, i32 4
  %bb80.i = bitcast %union.varray_data_tag* %data79.i to [1 x %struct.basic_block_def*]*
  %arrayidx81.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb80.i, i64 0, i64 %indvars.iv392.i
  %156 = load %struct.basic_block_def** %arrayidx81.i, align 8, !tbaa !5
  %pred.i = getelementptr inbounds %struct.basic_block_def* %156, i64 0, i32 4
  %e.0358.i = load %struct.edge_def** %pred.i, align 8
  %tobool359.i = icmp eq %struct.edge_def* %e.0358.i, null
  br i1 %tobool359.i, label %if.end100.i, label %for.body83.i

for.cond82.i:                                     ; preds = %for.body83.i
  %pred_next.i = getelementptr inbounds %struct.edge_def* %e.0360.i, i64 0, i32 0
  %e.0.i = load %struct.edge_def** %pred_next.i, align 8
  %tobool.i = icmp eq %struct.edge_def* %e.0.i, null
  br i1 %tobool.i, label %if.end100.i, label %for.body83.i

for.body83.i:                                     ; preds = %record_conflicts.exit.i, %for.cond82.i
  %e.0360.i = phi %struct.edge_def* [ %e.0.i, %for.cond82.i ], [ %e.0358.i, %record_conflicts.exit.i ]
  %flags.i = getelementptr inbounds %struct.edge_def* %e.0360.i, i64 0, i32 6
  %157 = load i32* %flags.i, align 4, !tbaa !37
  %and84.i = and i32 %157, 2
  %tobool85.i = icmp eq i32 %and84.i, 0
  br i1 %tobool85.i, label %for.cond82.i, label %for.cond93.preheader.i

for.cond93.preheader.i:                           ; preds = %for.body83.i
  %158 = load i32* @allocno_row_words, align 4, !tbaa !1
  %cmp145.i867 = icmp sgt i32 %158, 0
  br i1 %cmp145.i867, label %for.body.lr.ph.i868, label %if.end100.i

for.body.lr.ph.i868:                              ; preds = %for.cond93.preheader.i
  %159 = load i64** @allocnos_live, align 8, !tbaa !5
  %160 = load %struct.allocno** @allocno, align 8, !tbaa !5
  br label %for.body.i875

for.body.i875:                                    ; preds = %for.inc6.i890, %for.body.lr.ph.i868
  %indvars.iv.i869 = phi i64 [ 0, %for.body.lr.ph.i868 ], [ %indvars.iv.next.i889, %for.inc6.i890 ]
  %i_.048.in.i870 = phi i32 [ %158, %for.body.lr.ph.i868 ], [ %i_.048.i872, %for.inc6.i890 ]
  %p_.047.i871 = phi i64* [ %159, %for.body.lr.ph.i868 ], [ %incdec.ptr.i873, %for.inc6.i890 ]
  %i_.048.i872 = add nsw i32 %i_.048.in.i870, -1
  %incdec.ptr.i873 = getelementptr inbounds i64* %p_.047.i871, i64 1
  %161 = load i64* %p_.047.i871, align 8, !tbaa !7
  %tobool41.i874 = icmp eq i64 %161, 0
  br i1 %tobool41.i874, label %for.inc6.i890, label %for.body3.i880

for.body3.i880:                                   ; preds = %for.body.i875, %for.inc.i887
  %indvars.iv52.i876 = phi i64 [ %indvars.iv.next53.i886, %for.inc.i887 ], [ %indvars.iv.i869, %for.body.i875 ]
  %word_.042.i877 = phi i64 [ %shr.i884, %for.inc.i887 ], [ %161, %for.body.i875 ]
  %and.i878 = and i64 %word_.042.i877, 1
  %tobool4.i879 = icmp eq i64 %and.i878, 0
  br i1 %tobool4.i879, label %for.inc.i887, label %if.then5.i883

if.then5.i883:                                    ; preds = %for.body3.i880
  %hard_reg_conflicts.i881 = getelementptr inbounds %struct.allocno* %160, i64 %indvars.iv52.i876, i32 6
  %162 = load i64* %hard_reg_conflicts.i881, align 8, !tbaa !36
  %or.i882 = or i64 %162, 256
  store i64 %or.i882, i64* %hard_reg_conflicts.i881, align 8, !tbaa !36
  br label %for.inc.i887

for.inc.i887:                                     ; preds = %if.then5.i883, %for.body3.i880
  %shr.i884 = lshr i64 %word_.042.i877, 1
  %tobool.i885 = icmp eq i64 %shr.i884, 0
  %indvars.iv.next53.i886 = add nuw nsw i64 %indvars.iv52.i876, 1
  br i1 %tobool.i885, label %for.inc6.i890, label %for.body3.i880

for.inc6.i890:                                    ; preds = %for.inc.i887, %for.body.i875
  %cmp1.i888 = icmp sgt i32 %i_.048.i872, 0
  %indvars.iv.next.i889 = add nuw nsw i64 %indvars.iv.i869, 64
  br i1 %cmp1.i888, label %for.body.i875, label %for.body.i781

for.body.i781:                                    ; preds = %for.inc6.i890, %for.inc6.i796
  %indvars.iv.i775 = phi i64 [ %indvars.iv.next.i795, %for.inc6.i796 ], [ 0, %for.inc6.i890 ]
  %i_.048.in.i776 = phi i32 [ %i_.048.i778, %for.inc6.i796 ], [ %158, %for.inc6.i890 ]
  %p_.047.i777 = phi i64* [ %incdec.ptr.i779, %for.inc6.i796 ], [ %159, %for.inc6.i890 ]
  %i_.048.i778 = add nsw i32 %i_.048.in.i776, -1
  %incdec.ptr.i779 = getelementptr inbounds i64* %p_.047.i777, i64 1
  %163 = load i64* %p_.047.i777, align 8, !tbaa !7
  %tobool41.i780 = icmp eq i64 %163, 0
  br i1 %tobool41.i780, label %for.inc6.i796, label %for.body3.i786

for.body3.i786:                                   ; preds = %for.body.i781, %for.inc.i793
  %indvars.iv52.i782 = phi i64 [ %indvars.iv.next53.i792, %for.inc.i793 ], [ %indvars.iv.i775, %for.body.i781 ]
  %word_.042.i783 = phi i64 [ %shr.i790, %for.inc.i793 ], [ %163, %for.body.i781 ]
  %and.i784 = and i64 %word_.042.i783, 1
  %tobool4.i785 = icmp eq i64 %and.i784, 0
  br i1 %tobool4.i785, label %for.inc.i793, label %if.then5.i789

if.then5.i789:                                    ; preds = %for.body3.i786
  %hard_reg_conflicts.i787 = getelementptr inbounds %struct.allocno* %160, i64 %indvars.iv52.i782, i32 6
  %164 = load i64* %hard_reg_conflicts.i787, align 8, !tbaa !36
  %or.i788 = or i64 %164, 512
  store i64 %or.i788, i64* %hard_reg_conflicts.i787, align 8, !tbaa !36
  br label %for.inc.i793

for.inc.i793:                                     ; preds = %if.then5.i789, %for.body3.i786
  %shr.i790 = lshr i64 %word_.042.i783, 1
  %tobool.i791 = icmp eq i64 %shr.i790, 0
  %indvars.iv.next53.i792 = add nuw nsw i64 %indvars.iv52.i782, 1
  br i1 %tobool.i791, label %for.inc6.i796, label %for.body3.i786

for.inc6.i796:                                    ; preds = %for.inc.i793, %for.body.i781
  %cmp1.i794 = icmp sgt i32 %i_.048.i778, 0
  %indvars.iv.next.i795 = add nuw nsw i64 %indvars.iv.i775, 64
  br i1 %cmp1.i794, label %for.body.i781, label %for.body.i756

for.body.i756:                                    ; preds = %for.inc6.i796, %for.inc6.i771
  %indvars.iv.i750 = phi i64 [ %indvars.iv.next.i770, %for.inc6.i771 ], [ 0, %for.inc6.i796 ]
  %i_.048.in.i751 = phi i32 [ %i_.048.i753, %for.inc6.i771 ], [ %158, %for.inc6.i796 ]
  %p_.047.i752 = phi i64* [ %incdec.ptr.i754, %for.inc6.i771 ], [ %159, %for.inc6.i796 ]
  %i_.048.i753 = add nsw i32 %i_.048.in.i751, -1
  %incdec.ptr.i754 = getelementptr inbounds i64* %p_.047.i752, i64 1
  %165 = load i64* %p_.047.i752, align 8, !tbaa !7
  %tobool41.i755 = icmp eq i64 %165, 0
  br i1 %tobool41.i755, label %for.inc6.i771, label %for.body3.i761

for.body3.i761:                                   ; preds = %for.body.i756, %for.inc.i768
  %indvars.iv52.i757 = phi i64 [ %indvars.iv.next53.i767, %for.inc.i768 ], [ %indvars.iv.i750, %for.body.i756 ]
  %word_.042.i758 = phi i64 [ %shr.i765, %for.inc.i768 ], [ %165, %for.body.i756 ]
  %and.i759 = and i64 %word_.042.i758, 1
  %tobool4.i760 = icmp eq i64 %and.i759, 0
  br i1 %tobool4.i760, label %for.inc.i768, label %if.then5.i764

if.then5.i764:                                    ; preds = %for.body3.i761
  %hard_reg_conflicts.i762 = getelementptr inbounds %struct.allocno* %160, i64 %indvars.iv52.i757, i32 6
  %166 = load i64* %hard_reg_conflicts.i762, align 8, !tbaa !36
  %or.i763 = or i64 %166, 1024
  store i64 %or.i763, i64* %hard_reg_conflicts.i762, align 8, !tbaa !36
  br label %for.inc.i768

for.inc.i768:                                     ; preds = %if.then5.i764, %for.body3.i761
  %shr.i765 = lshr i64 %word_.042.i758, 1
  %tobool.i766 = icmp eq i64 %shr.i765, 0
  %indvars.iv.next53.i767 = add nuw nsw i64 %indvars.iv52.i757, 1
  br i1 %tobool.i766, label %for.inc6.i771, label %for.body3.i761

for.inc6.i771:                                    ; preds = %for.inc.i768, %for.body.i756
  %cmp1.i769 = icmp sgt i32 %i_.048.i753, 0
  %indvars.iv.next.i770 = add nuw nsw i64 %indvars.iv.i750, 64
  br i1 %cmp1.i769, label %for.body.i756, label %for.body.i731

for.body.i731:                                    ; preds = %for.inc6.i771, %for.inc6.i746
  %indvars.iv.i725 = phi i64 [ %indvars.iv.next.i745, %for.inc6.i746 ], [ 0, %for.inc6.i771 ]
  %i_.048.in.i726 = phi i32 [ %i_.048.i728, %for.inc6.i746 ], [ %158, %for.inc6.i771 ]
  %p_.047.i727 = phi i64* [ %incdec.ptr.i729, %for.inc6.i746 ], [ %159, %for.inc6.i771 ]
  %i_.048.i728 = add nsw i32 %i_.048.in.i726, -1
  %incdec.ptr.i729 = getelementptr inbounds i64* %p_.047.i727, i64 1
  %167 = load i64* %p_.047.i727, align 8, !tbaa !7
  %tobool41.i730 = icmp eq i64 %167, 0
  br i1 %tobool41.i730, label %for.inc6.i746, label %for.body3.i736

for.body3.i736:                                   ; preds = %for.body.i731, %for.inc.i743
  %indvars.iv52.i732 = phi i64 [ %indvars.iv.next53.i742, %for.inc.i743 ], [ %indvars.iv.i725, %for.body.i731 ]
  %word_.042.i733 = phi i64 [ %shr.i740, %for.inc.i743 ], [ %167, %for.body.i731 ]
  %and.i734 = and i64 %word_.042.i733, 1
  %tobool4.i735 = icmp eq i64 %and.i734, 0
  br i1 %tobool4.i735, label %for.inc.i743, label %if.then5.i739

if.then5.i739:                                    ; preds = %for.body3.i736
  %hard_reg_conflicts.i737 = getelementptr inbounds %struct.allocno* %160, i64 %indvars.iv52.i732, i32 6
  %168 = load i64* %hard_reg_conflicts.i737, align 8, !tbaa !36
  %or.i738 = or i64 %168, 2048
  store i64 %or.i738, i64* %hard_reg_conflicts.i737, align 8, !tbaa !36
  br label %for.inc.i743

for.inc.i743:                                     ; preds = %if.then5.i739, %for.body3.i736
  %shr.i740 = lshr i64 %word_.042.i733, 1
  %tobool.i741 = icmp eq i64 %shr.i740, 0
  %indvars.iv.next53.i742 = add nuw nsw i64 %indvars.iv52.i732, 1
  br i1 %tobool.i741, label %for.inc6.i746, label %for.body3.i736

for.inc6.i746:                                    ; preds = %for.inc.i743, %for.body.i731
  %cmp1.i744 = icmp sgt i32 %i_.048.i728, 0
  %indvars.iv.next.i745 = add nuw nsw i64 %indvars.iv.i725, 64
  br i1 %cmp1.i744, label %for.body.i731, label %for.body.i706

for.body.i706:                                    ; preds = %for.inc6.i746, %for.inc6.i721
  %indvars.iv.i700 = phi i64 [ %indvars.iv.next.i720, %for.inc6.i721 ], [ 0, %for.inc6.i746 ]
  %i_.048.in.i701 = phi i32 [ %i_.048.i703, %for.inc6.i721 ], [ %158, %for.inc6.i746 ]
  %p_.047.i702 = phi i64* [ %incdec.ptr.i704, %for.inc6.i721 ], [ %159, %for.inc6.i746 ]
  %i_.048.i703 = add nsw i32 %i_.048.in.i701, -1
  %incdec.ptr.i704 = getelementptr inbounds i64* %p_.047.i702, i64 1
  %169 = load i64* %p_.047.i702, align 8, !tbaa !7
  %tobool41.i705 = icmp eq i64 %169, 0
  br i1 %tobool41.i705, label %for.inc6.i721, label %for.body3.i711

for.body3.i711:                                   ; preds = %for.body.i706, %for.inc.i718
  %indvars.iv52.i707 = phi i64 [ %indvars.iv.next53.i717, %for.inc.i718 ], [ %indvars.iv.i700, %for.body.i706 ]
  %word_.042.i708 = phi i64 [ %shr.i715, %for.inc.i718 ], [ %169, %for.body.i706 ]
  %and.i709 = and i64 %word_.042.i708, 1
  %tobool4.i710 = icmp eq i64 %and.i709, 0
  br i1 %tobool4.i710, label %for.inc.i718, label %if.then5.i714

if.then5.i714:                                    ; preds = %for.body3.i711
  %hard_reg_conflicts.i712 = getelementptr inbounds %struct.allocno* %160, i64 %indvars.iv52.i707, i32 6
  %170 = load i64* %hard_reg_conflicts.i712, align 8, !tbaa !36
  %or.i713 = or i64 %170, 4096
  store i64 %or.i713, i64* %hard_reg_conflicts.i712, align 8, !tbaa !36
  br label %for.inc.i718

for.inc.i718:                                     ; preds = %if.then5.i714, %for.body3.i711
  %shr.i715 = lshr i64 %word_.042.i708, 1
  %tobool.i716 = icmp eq i64 %shr.i715, 0
  %indvars.iv.next53.i717 = add nuw nsw i64 %indvars.iv52.i707, 1
  br i1 %tobool.i716, label %for.inc6.i721, label %for.body3.i711

for.inc6.i721:                                    ; preds = %for.inc.i718, %for.body.i706
  %cmp1.i719 = icmp sgt i32 %i_.048.i703, 0
  %indvars.iv.next.i720 = add nuw nsw i64 %indvars.iv.i700, 64
  br i1 %cmp1.i719, label %for.body.i706, label %for.body.i681

for.body.i681:                                    ; preds = %for.inc6.i721, %for.inc6.i696
  %indvars.iv.i675 = phi i64 [ %indvars.iv.next.i695, %for.inc6.i696 ], [ 0, %for.inc6.i721 ]
  %i_.048.in.i676 = phi i32 [ %i_.048.i678, %for.inc6.i696 ], [ %158, %for.inc6.i721 ]
  %p_.047.i677 = phi i64* [ %incdec.ptr.i679, %for.inc6.i696 ], [ %159, %for.inc6.i721 ]
  %i_.048.i678 = add nsw i32 %i_.048.in.i676, -1
  %incdec.ptr.i679 = getelementptr inbounds i64* %p_.047.i677, i64 1
  %171 = load i64* %p_.047.i677, align 8, !tbaa !7
  %tobool41.i680 = icmp eq i64 %171, 0
  br i1 %tobool41.i680, label %for.inc6.i696, label %for.body3.i686

for.body3.i686:                                   ; preds = %for.body.i681, %for.inc.i693
  %indvars.iv52.i682 = phi i64 [ %indvars.iv.next53.i692, %for.inc.i693 ], [ %indvars.iv.i675, %for.body.i681 ]
  %word_.042.i683 = phi i64 [ %shr.i690, %for.inc.i693 ], [ %171, %for.body.i681 ]
  %and.i684 = and i64 %word_.042.i683, 1
  %tobool4.i685 = icmp eq i64 %and.i684, 0
  br i1 %tobool4.i685, label %for.inc.i693, label %if.then5.i689

if.then5.i689:                                    ; preds = %for.body3.i686
  %hard_reg_conflicts.i687 = getelementptr inbounds %struct.allocno* %160, i64 %indvars.iv52.i682, i32 6
  %172 = load i64* %hard_reg_conflicts.i687, align 8, !tbaa !36
  %or.i688 = or i64 %172, 8192
  store i64 %or.i688, i64* %hard_reg_conflicts.i687, align 8, !tbaa !36
  br label %for.inc.i693

for.inc.i693:                                     ; preds = %if.then5.i689, %for.body3.i686
  %shr.i690 = lshr i64 %word_.042.i683, 1
  %tobool.i691 = icmp eq i64 %shr.i690, 0
  %indvars.iv.next53.i692 = add nuw nsw i64 %indvars.iv52.i682, 1
  br i1 %tobool.i691, label %for.inc6.i696, label %for.body3.i686

for.inc6.i696:                                    ; preds = %for.inc.i693, %for.body.i681
  %cmp1.i694 = icmp sgt i32 %i_.048.i678, 0
  %indvars.iv.next.i695 = add nuw nsw i64 %indvars.iv.i675, 64
  br i1 %cmp1.i694, label %for.body.i681, label %for.body.i656

for.body.i656:                                    ; preds = %for.inc6.i696, %for.inc6.i671
  %indvars.iv.i650 = phi i64 [ %indvars.iv.next.i670, %for.inc6.i671 ], [ 0, %for.inc6.i696 ]
  %i_.048.in.i651 = phi i32 [ %i_.048.i653, %for.inc6.i671 ], [ %158, %for.inc6.i696 ]
  %p_.047.i652 = phi i64* [ %incdec.ptr.i654, %for.inc6.i671 ], [ %159, %for.inc6.i696 ]
  %i_.048.i653 = add nsw i32 %i_.048.in.i651, -1
  %incdec.ptr.i654 = getelementptr inbounds i64* %p_.047.i652, i64 1
  %173 = load i64* %p_.047.i652, align 8, !tbaa !7
  %tobool41.i655 = icmp eq i64 %173, 0
  br i1 %tobool41.i655, label %for.inc6.i671, label %for.body3.i661

for.body3.i661:                                   ; preds = %for.body.i656, %for.inc.i668
  %indvars.iv52.i657 = phi i64 [ %indvars.iv.next53.i667, %for.inc.i668 ], [ %indvars.iv.i650, %for.body.i656 ]
  %word_.042.i658 = phi i64 [ %shr.i665, %for.inc.i668 ], [ %173, %for.body.i656 ]
  %and.i659 = and i64 %word_.042.i658, 1
  %tobool4.i660 = icmp eq i64 %and.i659, 0
  br i1 %tobool4.i660, label %for.inc.i668, label %if.then5.i664

if.then5.i664:                                    ; preds = %for.body3.i661
  %hard_reg_conflicts.i662 = getelementptr inbounds %struct.allocno* %160, i64 %indvars.iv52.i657, i32 6
  %174 = load i64* %hard_reg_conflicts.i662, align 8, !tbaa !36
  %or.i663 = or i64 %174, 16384
  store i64 %or.i663, i64* %hard_reg_conflicts.i662, align 8, !tbaa !36
  br label %for.inc.i668

for.inc.i668:                                     ; preds = %if.then5.i664, %for.body3.i661
  %shr.i665 = lshr i64 %word_.042.i658, 1
  %tobool.i666 = icmp eq i64 %shr.i665, 0
  %indvars.iv.next53.i667 = add nuw nsw i64 %indvars.iv52.i657, 1
  br i1 %tobool.i666, label %for.inc6.i671, label %for.body3.i661

for.inc6.i671:                                    ; preds = %for.inc.i668, %for.body.i656
  %cmp1.i669 = icmp sgt i32 %i_.048.i653, 0
  %indvars.iv.next.i670 = add nuw nsw i64 %indvars.iv.i650, 64
  br i1 %cmp1.i669, label %for.body.i656, label %for.body.i642

for.body.i642:                                    ; preds = %for.inc6.i671, %for.inc6.i
  %indvars.iv.i641 = phi i64 [ %indvars.iv.next.i647, %for.inc6.i ], [ 0, %for.inc6.i671 ]
  %i_.048.in.i = phi i32 [ %i_.048.i, %for.inc6.i ], [ %158, %for.inc6.i671 ]
  %p_.047.i = phi i64* [ %incdec.ptr.i, %for.inc6.i ], [ %159, %for.inc6.i671 ]
  %i_.048.i = add nsw i32 %i_.048.in.i, -1
  %incdec.ptr.i = getelementptr inbounds i64* %p_.047.i, i64 1
  %175 = load i64* %p_.047.i, align 8, !tbaa !7
  %tobool41.i = icmp eq i64 %175, 0
  br i1 %tobool41.i, label %for.inc6.i, label %for.body3.i

for.body3.i:                                      ; preds = %for.body.i642, %for.inc.i646
  %indvars.iv52.i = phi i64 [ %indvars.iv.next53.i, %for.inc.i646 ], [ %indvars.iv.i641, %for.body.i642 ]
  %word_.042.i = phi i64 [ %shr.i, %for.inc.i646 ], [ %175, %for.body.i642 ]
  %and.i643 = and i64 %word_.042.i, 1
  %tobool4.i = icmp eq i64 %and.i643, 0
  br i1 %tobool4.i, label %for.inc.i646, label %if.then5.i

if.then5.i:                                       ; preds = %for.body3.i
  %hard_reg_conflicts.i = getelementptr inbounds %struct.allocno* %160, i64 %indvars.iv52.i, i32 6
  %176 = load i64* %hard_reg_conflicts.i, align 8, !tbaa !36
  %or.i644 = or i64 %176, 32768
  store i64 %or.i644, i64* %hard_reg_conflicts.i, align 8, !tbaa !36
  br label %for.inc.i646

for.inc.i646:                                     ; preds = %if.then5.i, %for.body3.i
  %shr.i = lshr i64 %word_.042.i, 1
  %tobool.i645 = icmp eq i64 %shr.i, 0
  %indvars.iv.next53.i = add nuw nsw i64 %indvars.iv52.i, 1
  br i1 %tobool.i645, label %for.inc6.i, label %for.body3.i

for.inc6.i:                                       ; preds = %for.inc.i646, %for.body.i642
  %cmp1.i = icmp sgt i32 %i_.048.i, 0
  %indvars.iv.next.i647 = add nuw nsw i64 %indvars.iv.i641, 64
  br i1 %cmp1.i, label %for.body.i642, label %if.end100.i

if.end100.i:                                      ; preds = %for.cond82.i, %for.inc6.i, %for.cond93.preheader.i, %record_conflicts.exit.i
  %head.i = getelementptr inbounds %struct.basic_block_def* %156, i64 0, i32 0
  br label %while.body106.i

while.body106.i:                                  ; preds = %if.end249.i, %if.end100.i
  %177 = phi %struct.varray_head_tag* [ %155, %if.end100.i ], [ %233, %if.end249.i ]
  %insn.0.in.i = phi %struct.rtx_def** [ %head.i, %if.end100.i ], [ %rtx252.i, %if.end249.i ]
  %insn.0.i = load %struct.rtx_def** %insn.0.in.i, align 8
  %178 = getelementptr inbounds %struct.rtx_def* %insn.0.i, i64 0, i32 0
  %bf.load107.i = load i32* %178, align 8
  %bf.clear108.i = and i32 %bf.load107.i, 65535
  store i32 0, i32* @n_regs_set, align 4, !tbaa !1
  %179 = and i32 %bf.load107.i, 65533
  %180 = icmp eq i32 %179, 32
  %cmp114.i = icmp eq i32 %bf.clear108.i, 33
  %or.cond257.i = or i1 %180, %cmp114.i
  br i1 %or.cond257.i, label %if.then116.i, label %if.end241.i

if.then116.i:                                     ; preds = %while.body106.i
  %arrayidx117.i = getelementptr inbounds %struct.rtx_def* %insn.0.i, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx117.i to %struct.rtx_def**
  %181 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  tail call void @note_stores(%struct.rtx_def* %181, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @mark_reg_clobber, i8* null) #3
  %arrayidx119.i = getelementptr inbounds %struct.rtx_def* %insn.0.i, i64 0, i32 1, i64 6
  %rtx120.i = bitcast %union.rtunion_def* %arrayidx119.i to %struct.rtx_def**
  %link.0362.i = load %struct.rtx_def** %rtx120.i, align 8
  %tobool122363.i = icmp eq %struct.rtx_def* %link.0362.i, null
  br i1 %tobool122363.i, label %for.end138.i, label %for.body123.i

for.body123.i:                                    ; preds = %if.then116.i, %for.inc134.i
  %link.0364.i = phi %struct.rtx_def* [ %link.0.i, %for.inc134.i ], [ %link.0362.i, %if.then116.i ]
  %182 = getelementptr inbounds %struct.rtx_def* %link.0364.i, i64 0, i32 0
  %bf.load124.i = load i32* %182, align 8
  %bf.clear126.i = and i32 %bf.load124.i, 16711680
  %cmp127.i = icmp eq i32 %bf.clear126.i, 65536
  br i1 %cmp127.i, label %if.then129.i, label %for.inc134.i

if.then129.i:                                     ; preds = %for.body123.i
  %arrayidx131.i = getelementptr inbounds %struct.rtx_def* %link.0364.i, i64 0, i32 1, i64 0
  %rtx132.i = bitcast %union.rtunion_def* %arrayidx131.i to %struct.rtx_def**
  %183 = load %struct.rtx_def** %rtx132.i, align 8, !tbaa !5
  tail call fastcc void @mark_reg_death(%struct.rtx_def* %183) #3
  br label %for.inc134.i

for.inc134.i:                                     ; preds = %if.then129.i, %for.body123.i
  %arrayidx136.i = getelementptr inbounds %struct.rtx_def* %link.0364.i, i64 0, i32 1, i64 1
  %rtx137.i = bitcast %union.rtunion_def* %arrayidx136.i to %struct.rtx_def**
  %link.0.i = load %struct.rtx_def** %rtx137.i, align 8
  %tobool122.i = icmp eq %struct.rtx_def* %link.0.i, null
  br i1 %tobool122.i, label %for.end138.i, label %for.body123.i

for.end138.i:                                     ; preds = %for.inc134.i, %if.then116.i
  %184 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  tail call void @note_stores(%struct.rtx_def* %184, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @mark_reg_store, i8* null) #3
  %185 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %186 = getelementptr inbounds %struct.rtx_def* %185, i64 0, i32 0
  %bf.load145.i = load i32* %186, align 8
  %bf.clear146.i = and i32 %bf.load145.i, 65535
  %cmp147.i = icmp eq i32 %bf.clear146.i, 39
  br i1 %cmp147.i, label %land.lhs.true149.i, label %while.cond224.preheader.i

land.lhs.true149.i:                               ; preds = %for.end138.i
  %call150.i = tail call i32 @multiple_sets(%struct.rtx_def* %insn.0.i) #3
  %tobool151.i = icmp eq i32 %call150.i, 0
  br i1 %tobool151.i, label %while.cond224.preheader.i, label %for.cond156.preheader.i

for.cond156.preheader.i:                          ; preds = %land.lhs.true149.i
  %link.1375.i = load %struct.rtx_def** %rtx120.i, align 8
  %tobool157376.i = icmp eq %struct.rtx_def* %link.1375.i, null
  br i1 %tobool157376.i, label %while.cond224.preheader.i, label %for.body158.i

while.cond224.preheader.i:                        ; preds = %for.inc218.i, %for.cond156.preheader.i, %land.lhs.true149.i, %for.end138.i
  %187 = load i32* @n_regs_set, align 4, !tbaa !1
  %dec225378.i = add nsw i32 %187, -1
  store i32 %dec225378.i, i32* @n_regs_set, align 4, !tbaa !1
  %cmp226379.i = icmp sgt i32 %187, 0
  br i1 %cmp226379.i, label %while.body228.i, label %if.end241.loopexit.i

for.body158.i:                                    ; preds = %for.cond156.preheader.i, %for.inc218.i
  %link.1377.i = phi %struct.rtx_def* [ %link.1.i, %for.inc218.i ], [ %link.1375.i, %for.cond156.preheader.i ]
  %188 = getelementptr inbounds %struct.rtx_def* %link.1377.i, i64 0, i32 0
  %bf.load159.i = load i32* %188, align 8
  %bf.clear161.i = and i32 %bf.load159.i, 16711680
  %cmp162.i = icmp eq i32 %bf.clear161.i, 65536
  br i1 %cmp162.i, label %if.then164.i, label %for.inc218.i

if.then164.i:                                     ; preds = %for.body158.i
  %arrayidx167.i = getelementptr inbounds %struct.rtx_def* %link.1377.i, i64 0, i32 1, i64 0
  %rtx168.i = bitcast %union.rtunion_def* %arrayidx167.i to %struct.rtx_def**
  %189 = load %struct.rtx_def** %rtx168.i, align 8, !tbaa !5
  %190 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %arrayidx173.i = getelementptr inbounds %struct.rtx_def* %190, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx173.i to %struct.rtvec_def**
  %191 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %191, i64 0, i32 0
  %192 = load i32* %num_elem.i, align 4, !tbaa !39
  %cmp175366371.i = icmp sgt i32 %192, 0
  br i1 %cmp175366371.i, label %for.body177.lr.ph.i, label %for.inc218.i

for.body177.lr.ph.i:                              ; preds = %if.then164.i, %land.lhs.true204.i
  %i165.0365373.in.i = phi i32 [ %201, %land.lhs.true204.i ], [ %192, %if.then164.i ]
  %used_in_output.0.ph372.i = phi i32 [ %used_in_output.0..i, %land.lhs.true204.i ], [ 0, %if.then164.i ]
  %193 = sext i32 %i165.0365373.in.i to i64
  br label %for.body177.i

for.body177.i:                                    ; preds = %for.cond174.backedge.i, %for.body177.lr.ph.i
  %indvars.iv390.i = phi i64 [ %193, %for.body177.lr.ph.i ], [ %indvars.iv.next391.i, %for.cond174.backedge.i ]
  %indvars.iv.next391.i = add nsw i64 %indvars.iv390.i, -1
  %194 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %arrayidx183.i = getelementptr inbounds %struct.rtx_def* %194, i64 0, i32 1, i64 0
  %rtvec184.i = bitcast %union.rtunion_def* %arrayidx183.i to %struct.rtvec_def**
  %195 = load %struct.rtvec_def** %rtvec184.i, align 8, !tbaa !5
  %arrayidx185.i = getelementptr inbounds %struct.rtvec_def* %195, i64 0, i32 1, i64 %indvars.iv.next391.i
  %196 = load %struct.rtx_def** %arrayidx185.i, align 8, !tbaa !5
  %197 = getelementptr inbounds %struct.rtx_def* %196, i64 0, i32 0
  %bf.load186.i = load i32* %197, align 8
  %bf.clear187.i = and i32 %bf.load186.i, 65535
  %cmp188.i = icmp eq i32 %bf.clear187.i, 47
  br i1 %cmp188.i, label %land.lhs.true190.i, label %for.cond174.backedge.i

land.lhs.true190.i:                               ; preds = %for.body177.i
  %arrayidx192.i = getelementptr inbounds %struct.rtx_def* %196, i64 0, i32 1, i64 0
  %rtx193.i = bitcast %union.rtunion_def* %arrayidx192.i to %struct.rtx_def**
  %198 = load %struct.rtx_def** %rtx193.i, align 8, !tbaa !5
  %199 = getelementptr inbounds %struct.rtx_def* %198, i64 0, i32 0
  %bf.load194.i = load i32* %199, align 8
  %bf.clear195.i = and i32 %bf.load194.i, 65535
  %cmp196.i = icmp eq i32 %bf.clear195.i, 61
  br i1 %cmp196.i, label %for.cond174.backedge.i, label %land.lhs.true198.i

land.lhs.true198.i:                               ; preds = %land.lhs.true190.i
  %call202.i = tail call i32 @rtx_equal_p(%struct.rtx_def* %189, %struct.rtx_def* %198) #3
  %tobool203.i = icmp eq i32 %call202.i, 0
  br i1 %tobool203.i, label %land.lhs.true204.i, label %for.cond174.backedge.i

for.cond174.backedge.i:                           ; preds = %land.lhs.true198.i, %land.lhs.true190.i, %for.body177.i
  %200 = trunc i64 %indvars.iv.next391.i to i32
  %cmp175.i = icmp sgt i32 %200, 0
  br i1 %cmp175.i, label %for.body177.i, label %for.end213.i

land.lhs.true204.i:                               ; preds = %land.lhs.true198.i
  %201 = trunc i64 %indvars.iv.next391.i to i32
  %202 = load %struct.rtx_def** %rtx193.i, align 8, !tbaa !5
  %call208.i = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %189, %struct.rtx_def* %202) #3
  %tobool209.i = icmp eq i32 %call208.i, 0
  %used_in_output.0..i = select i1 %tobool209.i, i32 %used_in_output.0.ph372.i, i32 1
  %cmp175366.i = icmp sgt i32 %201, 0
  br i1 %cmp175366.i, label %for.body177.lr.ph.i, label %for.end213.i

for.end213.i:                                     ; preds = %land.lhs.true204.i, %for.cond174.backedge.i
  %used_in_output.0.ph.lcssa.i = phi i32 [ %used_in_output.0.ph372.i, %for.cond174.backedge.i ], [ %used_in_output.0..i, %land.lhs.true204.i ]
  %tobool214.i = icmp eq i32 %used_in_output.0.ph.lcssa.i, 0
  br i1 %tobool214.i, label %for.inc218.i, label %if.then215.i

if.then215.i:                                     ; preds = %for.end213.i
  %203 = getelementptr inbounds %struct.rtx_def* %189, i64 0, i32 0
  %bf.load.i.i = load i32* %203, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 65535
  %cmp.i331.i = icmp eq i32 %bf.clear.i.i, 63
  br i1 %cmp.i331.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.then215.i
  %arrayidx.i332.i = getelementptr inbounds %struct.rtx_def* %189, i64 0, i32 1, i64 0
  %rtx.i.i = bitcast %union.rtunion_def* %arrayidx.i332.i to %struct.rtx_def**
  %204 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !5
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.rtx_def* %204, i64 0, i32 0
  %bf.load1.pre.i.i = load i32* %.phi.trans.insert.i.i, align 8
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.then215.i
  %bf.load1.i.i = phi i32 [ %bf.load1.pre.i.i, %if.then.i.i ], [ %bf.load.i.i, %if.then215.i ]
  %reg.addr.0.i.i = phi %struct.rtx_def* [ %204, %if.then.i.i ], [ %189, %if.then215.i ]
  %205 = getelementptr inbounds %struct.rtx_def* %reg.addr.0.i.i, i64 0, i32 0
  %bf.clear2.i.i = and i32 %bf.load1.i.i, 65535
  %cmp3.i.i = icmp eq i32 %bf.clear2.i.i, 61
  br i1 %cmp3.i.i, label %if.end5.i.i, label %for.inc218.i

if.end5.i.i:                                      ; preds = %if.end.i.i
  %arrayidx7.i.i = getelementptr inbounds %struct.rtx_def* %reg.addr.0.i.i, i64 0, i32 1, i64 0
  %rtuint.i.i = bitcast %union.rtunion_def* %arrayidx7.i.i to i32*
  %206 = load i32* %rtuint.i.i, align 4, !tbaa !1
  %cmp8.i.i = icmp sgt i32 %206, 52
  %idxprom.i333.i = sext i32 %206 to i64
  br i1 %cmp8.i.i, label %if.then9.i.i, label %if.end14.i.i

if.then9.i.i:                                     ; preds = %if.end5.i.i
  %207 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx10.i.i = getelementptr inbounds i32* %207, i64 %idxprom.i333.i
  %208 = load i32* %arrayidx10.i.i, align 4, !tbaa !1
  %cmp11.i.i = icmp sgt i32 %208, -1
  br i1 %cmp11.i.i, label %if.then12.i.i, label %if.end14.i.i

if.then12.i.i:                                    ; preds = %if.then9.i.i
  tail call fastcc void @record_one_conflict(i32 %206) #3
  br label %if.end14.i.i

if.end14.i.i:                                     ; preds = %if.then12.i.i, %if.then9.i.i, %if.end5.i.i
  %209 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx16.i.i = getelementptr inbounds i16* %209, i64 %idxprom.i333.i
  %210 = load i16* %arrayidx16.i.i, align 2, !tbaa !10
  %cmp17.i.i = icmp sgt i16 %210, -1
  %conv.i334.i = sext i16 %210 to i32
  %conv..i.i = select i1 %cmp17.i.i, i32 %conv.i334.i, i32 %206
  %cmp24.i.i = icmp slt i32 %conv..i.i, 53
  br i1 %cmp24.i.i, label %land.lhs.true.i.i, label %for.inc218.i

land.lhs.true.i.i:                                ; preds = %if.end14.i.i
  %idxprom26.i.i = sext i32 %conv..i.i to i64
  %arrayidx27.i.i = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom26.i.i
  %211 = load i8* %arrayidx27.i.i, align 1, !tbaa !9
  %tobool.i.i = icmp eq i8 %211, 0
  br i1 %tobool.i.i, label %if.then28.i.i, label %for.inc218.i

if.then28.i.i:                                    ; preds = %land.lhs.true.i.i
  %212 = and i32 %conv..i.i, -8
  %213 = icmp eq i32 %212, 8
  %regno.0.off.i.i = add i32 %conv..i.i, -21
  %214 = icmp ult i32 %regno.0.off.i.i, 8
  %or.cond.i335.i = or i1 %213, %214
  %regno.0.off133.i.i = add i32 %conv..i.i, -45
  %215 = icmp ult i32 %regno.0.off133.i.i, 8
  %or.cond139.i.i = or i1 %or.cond.i335.i, %215
  %regno.0.off134.i.i = add i32 %conv..i.i, -29
  %216 = icmp ult i32 %regno.0.off134.i.i, 8
  %or.cond141.i.i = or i1 %or.cond139.i.i, %216
  %bf.load51.i.i = load i32* %205, align 8
  %bf.lshr.i.i = lshr i32 %bf.load51.i.i, 16
  %bf.clear52.i.i = and i32 %bf.lshr.i.i, 255
  br i1 %or.cond141.i.i, label %cond.true.i336.i, label %cond.false.i339.i

cond.true.i336.i:                                 ; preds = %if.then28.i.i
  %idxprom53136.i.i = zext i32 %bf.clear52.i.i to i64
  %arrayidx54.i.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom53136.i.i
  %217 = load i32* %arrayidx54.i.i, align 4, !tbaa !9
  %cmp55.i.i = icmp eq i32 %217, 5
  br i1 %cmp55.i.i, label %while.body.lr.ph.i344.i, label %lor.rhs.i338.i

lor.rhs.i338.i:                                   ; preds = %cond.true.i336.i
  %cmp62.i.i = icmp eq i32 %217, 6
  %phitmp.i337.i = select i1 %cmp62.i.i, i32 2, i32 1
  br label %while.body.lr.ph.i344.i

cond.false.i339.i:                                ; preds = %if.then28.i.i
  switch i32 %bf.clear52.i.i, label %cond.end98.i.i [
    i32 18, label %cond.true69.i.i
    i32 24, label %cond.true78.i.i
  ]

cond.true69.i.i:                                  ; preds = %cond.false.i339.i
  %218 = load i32* @target_flags, align 4, !tbaa !1
  %and.i340.i = lshr i32 %218, 25
  %219 = and i32 %and.i340.i, 1
  %220 = xor i32 %219, 3
  br label %while.body.lr.ph.i344.i

cond.true78.i.i:                                  ; preds = %cond.false.i339.i
  %221 = load i32* @target_flags, align 4, !tbaa !1
  %and79.i.i = lshr i32 %221, 24
  %222 = and i32 %and79.i.i, 2
  %223 = xor i32 %222, 6
  br label %while.body.lr.ph.i344.i

cond.end98.i.i:                                   ; preds = %cond.false.i339.i
  %idxprom86135.i.i = zext i32 %bf.clear52.i.i to i64
  %arrayidx87.i.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom86135.i.i
  %224 = load i8* %arrayidx87.i.i, align 1, !tbaa !9
  %conv88.i.i = zext i8 %224 to i32
  %225 = load i32* @target_flags, align 4, !tbaa !1
  %and89.i.i = lshr i32 %225, 23
  %226 = and i32 %and89.i.i, 4
  %227 = add i32 %226, 4
  %add.i341.i = add i32 %conv88.i.i, -1
  %sub.i342.i = add i32 %add.i341.i, %227
  %div.i343.i = sdiv i32 %sub.i342.i, %227
  %cmp101142.i.i = icmp sgt i32 %div.i343.i, 0
  br i1 %cmp101142.i.i, label %while.body.lr.ph.i344.i, label %for.inc218.i

while.body.lr.ph.i344.i:                          ; preds = %cond.end98.i.i, %cond.true78.i.i, %cond.true69.i.i, %lor.rhs.i338.i, %cond.true.i336.i
  %cond99.ph.pn.i.i = phi i32 [ %div.i343.i, %cond.end98.i.i ], [ %220, %cond.true69.i.i ], [ %223, %cond.true78.i.i ], [ 2, %cond.true.i336.i ], [ %phitmp.i337.i, %lor.rhs.i338.i ]
  %add100147.i.i = add nsw i32 %cond99.ph.pn.i.i, %conv..i.i
  br label %while.body.i346.i

while.body.i346.i:                                ; preds = %while.body.i346.i, %while.body.lr.ph.i344.i
  %regno.1143.i.i = phi i32 [ %conv..i.i, %while.body.lr.ph.i344.i ], [ %inc.i345.i, %while.body.i346.i ]
  tail call fastcc void @record_one_conflict(i32 %regno.1143.i.i) #3
  %inc.i345.i = add nsw i32 %regno.1143.i.i, 1
  %cmp101.i.i = icmp slt i32 %inc.i345.i, %add100147.i.i
  br i1 %cmp101.i.i, label %while.body.i346.i, label %for.inc218.i

for.inc218.i:                                     ; preds = %while.body.i346.i, %cond.end98.i.i, %land.lhs.true.i.i, %if.end14.i.i, %if.end.i.i, %for.end213.i, %if.then164.i, %for.body158.i
  %arrayidx220.i = getelementptr inbounds %struct.rtx_def* %link.1377.i, i64 0, i32 1, i64 1
  %rtx221.i = bitcast %union.rtunion_def* %arrayidx220.i to %struct.rtx_def**
  %link.1.i = load %struct.rtx_def** %rtx221.i, align 8
  %tobool157.i = icmp eq %struct.rtx_def* %link.1.i, null
  br i1 %tobool157.i, label %while.cond224.preheader.i, label %for.body158.i

while.body228.i:                                  ; preds = %while.cond224.preheader.i, %while.cond224.backedge.i
  %dec225380.i = phi i32 [ %dec225.i, %while.cond224.backedge.i ], [ %dec225378.i, %while.cond224.preheader.i ]
  %idxprom229.i = sext i32 %dec225380.i to i64
  %228 = load %struct.rtx_def*** @regs_set, align 8, !tbaa !5
  %arrayidx230.i = getelementptr inbounds %struct.rtx_def** %228, i64 %idxprom229.i
  %229 = load %struct.rtx_def** %arrayidx230.i, align 8, !tbaa !5
  %arrayidx232.i = getelementptr inbounds %struct.rtx_def* %229, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx232.i to i32*
  %230 = load i32* %rtuint.i, align 4, !tbaa !1
  %call233.i = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn.0.i, i32 10, i32 %230) #3
  %tobool234.i = icmp eq %struct.rtx_def* %call233.i, null
  br i1 %tobool234.i, label %while.cond224.backedge.i, label %if.then235.i

if.then235.i:                                     ; preds = %while.body228.i
  %arrayidx237.i = getelementptr inbounds %struct.rtx_def* %call233.i, i64 0, i32 1, i64 0
  %rtx238.i = bitcast %union.rtunion_def* %arrayidx237.i to %struct.rtx_def**
  %231 = load %struct.rtx_def** %rtx238.i, align 8, !tbaa !5
  tail call fastcc void @mark_reg_death(%struct.rtx_def* %231) #3
  br label %while.cond224.backedge.i

while.cond224.backedge.i:                         ; preds = %if.then235.i, %while.body228.i
  %232 = load i32* @n_regs_set, align 4, !tbaa !1
  %dec225.i = add nsw i32 %232, -1
  store i32 %dec225.i, i32* @n_regs_set, align 4, !tbaa !1
  %cmp226.i = icmp sgt i32 %232, 0
  br i1 %cmp226.i, label %while.body228.i, label %if.end241.loopexit.i

if.end241.loopexit.i:                             ; preds = %while.cond224.backedge.i, %while.cond224.preheader.i
  %.pre395.i = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  br label %if.end241.i

if.end241.i:                                      ; preds = %if.end241.loopexit.i, %while.body106.i
  %233 = phi %struct.varray_head_tag* [ %.pre395.i, %if.end241.loopexit.i ], [ %177, %while.body106.i ]
  %data243.i = getelementptr inbounds %struct.varray_head_tag* %233, i64 0, i32 4
  %bb244.i = bitcast %union.varray_data_tag* %data243.i to [1 x %struct.basic_block_def*]*
  %arrayidx245.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb244.i, i64 0, i64 %indvars.iv392.i
  %234 = load %struct.basic_block_def** %arrayidx245.i, align 8, !tbaa !5
  %end.i = getelementptr inbounds %struct.basic_block_def* %234, i64 0, i32 1
  %235 = load %struct.rtx_def** %end.i, align 8, !tbaa !41
  %cmp246.i = icmp eq %struct.rtx_def* %insn.0.i, %235
  br i1 %cmp246.i, label %for.inc254.i, label %if.end249.i

if.end249.i:                                      ; preds = %if.end241.i
  %arrayidx251.i = getelementptr inbounds %struct.rtx_def* %insn.0.i, i64 0, i32 1, i64 2
  %rtx252.i = bitcast %union.rtunion_def* %arrayidx251.i to %struct.rtx_def**
  br label %while.body106.i

for.inc254.i:                                     ; preds = %if.end241.i
  %indvars.iv.next393.i = add nuw nsw i64 %indvars.iv392.i, 1
  %236 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %237 = trunc i64 %indvars.iv.next393.i to i32
  %cmp.i = icmp slt i32 %237, %236
  br i1 %cmp.i, label %for.body.i, label %global_conflicts.exit

global_conflicts.exit:                            ; preds = %for.inc254.i, %if.then401
  tail call void @free(i8* %call4.i) #3
  %238 = load %struct.rtx_def*** @regs_set, align 8, !tbaa !5
  %239 = bitcast %struct.rtx_def** %238 to i8*
  tail call void @free(i8* %239) #3
  %240 = load i32* @allocno_row_words, align 4, !tbaa !1
  %241 = load i64** @conflicts, align 8, !tbaa !5
  %242 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp38.i = icmp sgt i32 %242, 0
  br i1 %cmp38.i, label %for.body.lr.ph.i798, label %for.cond402.preheader

for.body.lr.ph.i798:                              ; preds = %global_conflicts.exit
  %mul.i = shl nsw i32 %240, 6
  %cmp333.i = icmp sgt i32 %240, 0
  %idx.ext13.i = sext i32 %mul.i to i64
  %idx.ext.i = sext i32 %240 to i64
  br i1 %cmp333.i, label %for.body.lr.ph.split.us.i, label %for.body406.lr.ph

for.body.lr.ph.split.us.i:                        ; preds = %for.body.lr.ph.i798
  %243 = add i32 %240, -1
  %244 = zext i32 %243 to i64
  %245 = add i64 %244, 1
  br label %for.body4.lr.ph.us.i

for.inc16.us.i:                                   ; preds = %for.inc12.us.i
  %scevgep.i = getelementptr i64* %p.039.us.i, i64 %245
  %shl.us.i = shl i64 %.mask.0.us.i, 1
  %cmp.us.i = icmp sgt i32 %i.042.us.i, 0
  br i1 %cmp.us.i, label %for.body4.lr.ph.us.i, label %for.cond402.preheader

for.body4.us.i:                                   ; preds = %for.body4.lr.ph.us.i, %for.inc12.us.i
  %j.036.us.in.i = phi i32 [ %240, %for.body4.lr.ph.us.i ], [ %j.036.us.i, %for.inc12.us.i ]
  %q1.035.us.i = phi i64* [ %incdec.ptr.q0.0.us.i, %for.body4.lr.ph.us.i ], [ %add.ptr14.us.i, %for.inc12.us.i ]
  %p.134.us.i = phi i64* [ %p.039.us.i, %for.body4.lr.ph.us.i ], [ %incdec.ptr5.us.i, %for.inc12.us.i ]
  %j.036.us.i = add nsw i32 %j.036.us.in.i, -1
  %incdec.ptr5.us.i = getelementptr inbounds i64* %p.134.us.i, i64 1
  %246 = load i64* %p.134.us.i, align 8, !tbaa !7
  %tobool729.us.i = icmp eq i64 %246, 0
  br i1 %tobool729.us.i, label %for.inc12.us.i, label %for.body8.us.i

for.body8.us.i:                                   ; preds = %for.body4.us.i, %for.inc.us.i
  %word.031.us.i = phi i64 [ %shr.us.i, %for.inc.us.i ], [ %246, %for.body4.us.i ]
  %q2.030.us.i = phi i64* [ %add.ptr.us.i, %for.inc.us.i ], [ %q1.035.us.i, %for.body4.us.i ]
  %and.us.i = and i64 %word.031.us.i, 1
  %tobool9.us.i = icmp eq i64 %and.us.i, 0
  br i1 %tobool9.us.i, label %for.inc.us.i, label %if.then10.us.i

if.then10.us.i:                                   ; preds = %for.body8.us.i
  %247 = load i64* %q2.030.us.i, align 8, !tbaa !7
  %or.us.i = or i64 %247, %.mask.0.us.i
  store i64 %or.us.i, i64* %q2.030.us.i, align 8, !tbaa !7
  br label %for.inc.us.i

for.inc.us.i:                                     ; preds = %if.then10.us.i, %for.body8.us.i
  %shr.us.i = lshr i64 %word.031.us.i, 1
  %add.ptr.us.i = getelementptr inbounds i64* %q2.030.us.i, i64 %idx.ext.i
  %tobool7.us.i = icmp eq i64 %shr.us.i, 0
  br i1 %tobool7.us.i, label %for.inc12.us.i, label %for.body8.us.i

for.inc12.us.i:                                   ; preds = %for.inc.us.i, %for.body4.us.i
  %add.ptr14.us.i = getelementptr inbounds i64* %q1.035.us.i, i64 %idx.ext13.i
  %cmp3.us.i = icmp sgt i32 %j.036.us.i, 0
  br i1 %cmp3.us.i, label %for.body4.us.i, label %for.inc16.us.i

for.body4.lr.ph.us.i:                             ; preds = %for.inc16.us.i, %for.body.lr.ph.split.us.i
  %i.042.us.i.in = phi i32 [ %242, %for.body.lr.ph.split.us.i ], [ %i.042.us.i, %for.inc16.us.i ]
  %mask.041.us.i = phi i64 [ 1, %for.body.lr.ph.split.us.i ], [ %shl.us.i, %for.inc16.us.i ]
  %q0.040.us.i = phi i64* [ %241, %for.body.lr.ph.split.us.i ], [ %incdec.ptr.q0.0.us.i, %for.inc16.us.i ]
  %p.039.us.i = phi i64* [ %241, %for.body.lr.ph.split.us.i ], [ %scevgep.i, %for.inc16.us.i ]
  %i.042.us.i = add nsw i32 %i.042.us.i.in, -1
  %tobool.us.i = icmp eq i64 %mask.041.us.i, 0
  %incdec.ptr.us.i = getelementptr inbounds i64* %q0.040.us.i, i64 1
  %incdec.ptr.q0.0.us.i = select i1 %tobool.us.i, i64* %incdec.ptr.us.i, i64* %q0.040.us.i
  %.mask.0.us.i = select i1 %tobool.us.i, i64 1, i64 %mask.041.us.i
  br label %for.body4.us.i

for.cond402.preheader:                            ; preds = %for.inc16.us.i, %global_conflicts.exit
  %cmp404933 = icmp eq i32 %242, 0
  br i1 %cmp404933, label %for.end417, label %for.body406.lr.ph

for.body406.lr.ph:                                ; preds = %for.body.lr.ph.i798, %for.cond402.preheader
  %248 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %conv403 = sext i32 %242 to i64
  br label %for.body406

for.body406:                                      ; preds = %for.body406.lr.ph, %for.body406
  %i.8934 = phi i64 [ 0, %for.body406.lr.ph ], [ %inc416, %for.body406 ]
  %249 = load i64* @eliminable_regset, align 8, !tbaa !7
  %neg = xor i64 %249, -1
  %hard_reg_conflicts = getelementptr inbounds %struct.allocno* %248, i64 %i.8934, i32 6
  %250 = load i64* %hard_reg_conflicts, align 8, !tbaa !36
  %and408 = and i64 %250, %neg
  store i64 %and408, i64* %hard_reg_conflicts, align 8, !tbaa !36
  %251 = load i64* @eliminable_regset, align 8, !tbaa !7
  %neg409 = xor i64 %251, -1
  %hard_reg_copy_preferences = getelementptr inbounds %struct.allocno* %248, i64 %i.8934, i32 8
  %252 = load i64* %hard_reg_copy_preferences, align 8, !tbaa !42
  %and411 = and i64 %252, %neg409
  store i64 %and411, i64* %hard_reg_copy_preferences, align 8, !tbaa !42
  %253 = load i64* @eliminable_regset, align 8, !tbaa !7
  %neg412 = xor i64 %253, -1
  %hard_reg_preferences = getelementptr inbounds %struct.allocno* %248, i64 %i.8934, i32 7
  %254 = load i64* %hard_reg_preferences, align 8, !tbaa !43
  %and414 = and i64 %254, %neg412
  store i64 %and414, i64* %hard_reg_preferences, align 8, !tbaa !43
  %inc416 = add i64 %i.8934, 1
  %cmp404 = icmp ult i64 %inc416, %conv403
  br i1 %cmp404, label %for.body406, label %for.end417

for.end417:                                       ; preds = %for.body406, %for.cond402.preheader
  %call.i800 = tail call %struct.rtx_def* @get_insns() #3
  %tobool210.i = icmp eq %struct.rtx_def* %call.i800, null
  br i1 %tobool210.i, label %expand_preferences.exit, label %for.body.i805

for.body.i805:                                    ; preds = %for.end417, %for.inc171.i
  %insn.0211.i = phi %struct.rtx_def* [ %284, %for.inc171.i ], [ %call.i800, %for.end417 ]
  %255 = getelementptr inbounds %struct.rtx_def* %insn.0211.i, i64 0, i32 0
  %bf.load.i801 = load i32* %255, align 8
  %bf.clear.i802 = and i32 %bf.load.i801, 65535
  %idxprom205.i = zext i32 %bf.clear.i802 to i64
  %arrayidx.i803 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom205.i
  %256 = load i8* %arrayidx.i803, align 1, !tbaa !9
  %cmp.i804 = icmp eq i8 %256, 105
  br i1 %cmp.i804, label %cond.true.i, label %for.inc171.i

cond.true.i:                                      ; preds = %for.body.i805
  %arrayidx9.i = getelementptr inbounds %struct.rtx_def* %insn.0211.i, i64 0, i32 1, i64 3
  %rtx.i806 = bitcast %union.rtunion_def* %arrayidx9.i to %struct.rtx_def**
  %257 = load %struct.rtx_def** %rtx.i806, align 8, !tbaa !5
  %258 = getelementptr inbounds %struct.rtx_def* %257, i64 0, i32 0
  %bf.load10.i = load i32* %258, align 8
  %bf.clear11.i = and i32 %bf.load10.i, 65535
  %cmp12.i = icmp eq i32 %bf.clear11.i, 47
  br i1 %cmp12.i, label %cond.end23.i, label %cond.false.i

cond.false.i:                                     ; preds = %cond.true.i
  %call21.i = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.0211.i, %struct.rtx_def* %257) #3
  br label %cond.end23.i

cond.end23.i:                                     ; preds = %cond.false.i, %cond.true.i
  %cond24.i = phi %struct.rtx_def* [ %call21.i, %cond.false.i ], [ %257, %cond.true.i ]
  %cmp25.i = icmp eq %struct.rtx_def* %cond24.i, null
  br i1 %cmp25.i, label %for.inc171.i, label %land.lhs.true27.i

land.lhs.true27.i:                                ; preds = %cond.end23.i
  %fld28.i = getelementptr inbounds %struct.rtx_def* %cond24.i, i64 0, i32 1
  %rtx30.i = bitcast [1 x %union.rtunion_def]* %fld28.i to %struct.rtx_def**
  %259 = load %struct.rtx_def** %rtx30.i, align 8, !tbaa !5
  %260 = getelementptr inbounds %struct.rtx_def* %259, i64 0, i32 0
  %bf.load31.i = load i32* %260, align 8
  %bf.clear32.i = and i32 %bf.load31.i, 65535
  %cmp33.i = icmp eq i32 %bf.clear32.i, 61
  br i1 %cmp33.i, label %land.lhs.true35.i, label %for.inc171.i

land.lhs.true35.i:                                ; preds = %land.lhs.true27.i
  %arrayidx40.i = getelementptr inbounds %struct.rtx_def* %259, i64 0, i32 1, i64 0
  %rtuint.i807 = bitcast %union.rtunion_def* %arrayidx40.i to i32*
  %261 = load i32* %rtuint.i807, align 4, !tbaa !1
  %idxprom41.i = zext i32 %261 to i64
  %262 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx42.i = getelementptr inbounds i32* %262, i64 %idxprom41.i
  %263 = load i32* %arrayidx42.i, align 4, !tbaa !1
  %cmp43.i = icmp sgt i32 %263, -1
  br i1 %cmp43.i, label %if.then.i, label %for.inc171.i

if.then.i:                                        ; preds = %land.lhs.true35.i
  %arrayidx46.i = getelementptr inbounds %struct.rtx_def* %insn.0211.i, i64 0, i32 1, i64 6
  %link.0.in206.i = bitcast %union.rtunion_def* %arrayidx46.i to %struct.rtx_def**
  %link.0207.i = load %struct.rtx_def** %link.0.in206.i, align 8
  %tobool49208.i = icmp eq %struct.rtx_def* %link.0207.i, null
  br i1 %tobool49208.i, label %for.inc171.i, label %for.body50.lr.ph.i

for.body50.lr.ph.i:                               ; preds = %if.then.i
  %arrayidx123.i = getelementptr inbounds %struct.rtx_def* %cond24.i, i64 0, i32 1, i64 1
  %rtx124.i = bitcast %union.rtunion_def* %arrayidx123.i to %struct.rtx_def**
  %idxprom130.i = sext i32 %263 to i64
  br label %for.body50.i

for.body50.i:                                     ; preds = %for.inc.i817, %for.body50.lr.ph.i
  %link.0209.i = phi %struct.rtx_def* [ %link.0207.i, %for.body50.lr.ph.i ], [ %link.0.i816, %for.inc.i817 ]
  %264 = getelementptr inbounds %struct.rtx_def* %link.0209.i, i64 0, i32 0
  %bf.load51.i = load i32* %264, align 8
  %bf.clear52.i = and i32 %bf.load51.i, 16711680
  %cmp53.i = icmp eq i32 %bf.clear52.i, 65536
  br i1 %cmp53.i, label %land.lhs.true55.i, label %for.inc.i817

land.lhs.true55.i:                                ; preds = %for.body50.i
  %arrayidx57.i = getelementptr inbounds %struct.rtx_def* %link.0209.i, i64 0, i32 1, i64 0
  %rtx58.i = bitcast %union.rtunion_def* %arrayidx57.i to %struct.rtx_def**
  %265 = load %struct.rtx_def** %rtx58.i, align 8, !tbaa !5
  %266 = getelementptr inbounds %struct.rtx_def* %265, i64 0, i32 0
  %bf.load59.i = load i32* %266, align 8
  %bf.clear60.i = and i32 %bf.load59.i, 65535
  %cmp61.i = icmp eq i32 %bf.clear60.i, 61
  br i1 %cmp61.i, label %land.lhs.true63.i, label %for.inc.i817

land.lhs.true63.i:                                ; preds = %land.lhs.true55.i
  %arrayidx68.i = getelementptr inbounds %struct.rtx_def* %265, i64 0, i32 1, i64 0
  %rtuint69.i = bitcast %union.rtunion_def* %arrayidx68.i to i32*
  %267 = load i32* %rtuint69.i, align 4, !tbaa !1
  %idxprom70.i = zext i32 %267 to i64
  %arrayidx71.i = getelementptr inbounds i32* %262, i64 %idxprom70.i
  %268 = load i32* %arrayidx71.i, align 4, !tbaa !1
  %cmp72.i = icmp sgt i32 %268, -1
  br i1 %cmp72.i, label %land.lhs.true74.i, label %for.inc.i817

land.lhs.true74.i:                                ; preds = %land.lhs.true63.i
  %269 = load i32* @allocno_row_words, align 4, !tbaa !1
  %mul.i808 = mul nsw i32 %269, %263
  %div.i809 = lshr i32 %268, 6
  %add.i810 = add i32 %mul.i808, %div.i809
  %idxprom91.i = zext i32 %add.i810 to i64
  %270 = load i64** @conflicts, align 8, !tbaa !5
  %arrayidx92.i = getelementptr inbounds i64* %270, i64 %idxprom91.i
  %271 = load i64* %arrayidx92.i, align 8, !tbaa !7
  %rem.i811 = and i32 %268, 63
  %sh_prom.i = zext i32 %rem.i811 to i64
  %shl.i812 = shl i64 1, %sh_prom.i
  %and.i813 = and i64 %271, %shl.i812
  %tobool101.i = icmp eq i64 %and.i813, 0
  br i1 %tobool101.i, label %if.then102.i, label %for.inc.i817

if.then102.i:                                     ; preds = %land.lhs.true74.i
  %272 = load %struct.rtx_def** %rtx124.i, align 8, !tbaa !5
  %cmp125.i = icmp eq %struct.rtx_def* %265, %272
  br i1 %cmp125.i, label %if.then127.i, label %if.then102.if.end_crit_edge.i

if.then102.if.end_crit_edge.i:                    ; preds = %if.then102.i
  %.pre.i814 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %idxprom140.pre.i = sext i32 %268 to i64
  br label %if.end.i

if.then127.i:                                     ; preds = %if.then102.i
  %idxprom128.i = sext i32 %268 to i64
  %273 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_copy_preferences.i = getelementptr inbounds %struct.allocno* %273, i64 %idxprom128.i, i32 8
  %274 = load i64* %hard_reg_copy_preferences.i, align 8, !tbaa !42
  %hard_reg_copy_preferences132.i = getelementptr inbounds %struct.allocno* %273, i64 %idxprom130.i, i32 8
  %275 = load i64* %hard_reg_copy_preferences132.i, align 8, !tbaa !42
  %or.i815 = or i64 %275, %274
  store i64 %or.i815, i64* %hard_reg_copy_preferences132.i, align 8, !tbaa !42
  %276 = load i64* %hard_reg_copy_preferences.i, align 8, !tbaa !42
  %or139.i = or i64 %276, %or.i815
  store i64 %or139.i, i64* %hard_reg_copy_preferences.i, align 8, !tbaa !42
  br label %if.end.i

if.end.i:                                         ; preds = %if.then127.i, %if.then102.if.end_crit_edge.i
  %idxprom140.pre-phi.i = phi i64 [ %idxprom140.pre.i, %if.then102.if.end_crit_edge.i ], [ %idxprom128.i, %if.then127.i ]
  %277 = phi %struct.allocno* [ %.pre.i814, %if.then102.if.end_crit_edge.i ], [ %273, %if.then127.i ]
  %hard_reg_preferences.i = getelementptr inbounds %struct.allocno* %277, i64 %idxprom140.pre-phi.i, i32 7
  %278 = load i64* %hard_reg_preferences.i, align 8, !tbaa !43
  %hard_reg_preferences144.i = getelementptr inbounds %struct.allocno* %277, i64 %idxprom130.i, i32 7
  %279 = load i64* %hard_reg_preferences144.i, align 8, !tbaa !43
  %or145.i = or i64 %279, %278
  store i64 %or145.i, i64* %hard_reg_preferences144.i, align 8, !tbaa !43
  %280 = load i64* %hard_reg_preferences.i, align 8, !tbaa !43
  %or152.i = or i64 %280, %or145.i
  store i64 %or152.i, i64* %hard_reg_preferences.i, align 8, !tbaa !43
  %hard_reg_full_preferences.i = getelementptr inbounds %struct.allocno* %277, i64 %idxprom140.pre-phi.i, i32 9
  %281 = load i64* %hard_reg_full_preferences.i, align 8, !tbaa !44
  %hard_reg_full_preferences157.i = getelementptr inbounds %struct.allocno* %277, i64 %idxprom130.i, i32 9
  %282 = load i64* %hard_reg_full_preferences157.i, align 8, !tbaa !44
  %or158.i = or i64 %282, %281
  store i64 %or158.i, i64* %hard_reg_full_preferences157.i, align 8, !tbaa !44
  %283 = load i64* %hard_reg_full_preferences.i, align 8, !tbaa !44
  %or165.i = or i64 %283, %or158.i
  store i64 %or165.i, i64* %hard_reg_full_preferences.i, align 8, !tbaa !44
  br label %for.inc.i817

for.inc.i817:                                     ; preds = %if.end.i, %land.lhs.true74.i, %land.lhs.true63.i, %land.lhs.true55.i, %for.body50.i
  %arrayidx168.i = getelementptr inbounds %struct.rtx_def* %link.0209.i, i64 0, i32 1, i64 1
  %link.0.in.i = bitcast %union.rtunion_def* %arrayidx168.i to %struct.rtx_def**
  %link.0.i816 = load %struct.rtx_def** %link.0.in.i, align 8
  %tobool49.i = icmp eq %struct.rtx_def* %link.0.i816, null
  br i1 %tobool49.i, label %for.inc171.i, label %for.body50.i

for.inc171.i:                                     ; preds = %for.inc.i817, %if.then.i, %land.lhs.true35.i, %land.lhs.true27.i, %cond.end23.i, %for.body.i805
  %arrayidx173.i818 = getelementptr inbounds %struct.rtx_def* %insn.0211.i, i64 0, i32 1, i64 2
  %rtx174.i = bitcast %union.rtunion_def* %arrayidx173.i818 to %struct.rtx_def**
  %284 = load %struct.rtx_def** %rtx174.i, align 8, !tbaa !5
  %tobool.i819 = icmp eq %struct.rtx_def* %284, null
  br i1 %tobool.i819, label %expand_preferences.exit, label %for.body.i805

expand_preferences.exit:                          ; preds = %for.inc171.i, %for.end417
  %285 = load i32* @max_allocno, align 4, !tbaa !1
  %conv418 = sext i32 %285 to i64
  %mul419 = shl nsw i64 %conv418, 2
  %call420 = tail call noalias i8* @xmalloc(i64 %mul419) #3
  %286 = bitcast i8* %call420 to i32*
  store i32* %286, i32** @allocno_order, align 8, !tbaa !5
  %287 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp423930 = icmp eq i32 %287, 0
  br i1 %cmp423930, label %for.end454, label %for.body425

for.cond431.preheader:                            ; preds = %for.body425
  %phitmp972 = icmp eq i32 %287, 0
  br i1 %phitmp972, label %for.end454, label %for.body435.lr.ph

for.body435.lr.ph:                                ; preds = %for.cond431.preheader
  %288 = load %struct.allocno** @allocno, align 8, !tbaa !5
  br label %for.body435

for.body425:                                      ; preds = %expand_preferences.exit, %for.body425
  %i.9931 = phi i64 [ %inc429, %for.body425 ], [ 0, %expand_preferences.exit ]
  %conv426 = trunc i64 %i.9931 to i32
  %arrayidx427 = getelementptr inbounds i32* %286, i64 %i.9931
  store i32 %conv426, i32* %arrayidx427, align 4, !tbaa !1
  %inc429 = add i64 %i.9931, 1
  %conv422 = sext i32 %287 to i64
  %cmp423 = icmp ult i64 %inc429, %conv422
  br i1 %cmp423, label %for.body425, label %for.cond431.preheader

for.body435:                                      ; preds = %for.body435.lr.ph, %for.inc452
  %i.10927 = phi i64 [ 0, %for.body435.lr.ph ], [ %inc453, %for.inc452 ]
  %size437 = getelementptr inbounds %struct.allocno* %288, i64 %i.10927, i32 1
  %289 = load i32* %size437, align 4, !tbaa !23
  %cmp438 = icmp eq i32 %289, 0
  br i1 %cmp438, label %if.then440, label %if.end443

if.then440:                                       ; preds = %for.body435
  store i32 1, i32* %size437, align 4, !tbaa !23
  br label %if.end443

if.end443:                                        ; preds = %if.then440, %for.body435
  %live_length445 = getelementptr inbounds %struct.allocno* %288, i64 %i.10927, i32 5
  %290 = load i32* %live_length445, align 4, !tbaa !28
  %cmp446 = icmp eq i32 %290, 0
  br i1 %cmp446, label %if.then448, label %for.inc452

if.then448:                                       ; preds = %if.end443
  store i32 -1, i32* %live_length445, align 4, !tbaa !28
  br label %for.inc452

for.inc452:                                       ; preds = %if.end443, %if.then448
  %inc453 = add i64 %i.10927, 1
  %291 = load i32* @max_allocno, align 4, !tbaa !1
  %conv432 = sext i32 %291 to i64
  %cmp433 = icmp ult i64 %inc453, %conv432
  br i1 %cmp433, label %for.body435, label %for.end454

for.end454:                                       ; preds = %for.inc452, %expand_preferences.exit, %for.cond431.preheader
  %.lcssa919 = phi i32 [ 0, %for.cond431.preheader ], [ 0, %expand_preferences.exit ], [ %291, %for.inc452 ]
  tail call void @specqsort(i8* %call420, i32 %.lcssa919, i32 4, i32 (...)* bitcast (i32 (i8*, i8*)* @allocno_compare to i32 (...)*)) #3
  %292 = load i32* @max_allocno, align 4, !tbaa !1
  %conv.i820 = sext i32 %292 to i64
  %mul.i821 = shl nsw i64 %conv.i820, 2
  %call.i822 = tail call noalias i8* @xmalloc(i64 %mul.i821) #3
  %293 = bitcast i8* %call.i822 to i32*
  %294 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp142.i = icmp sgt i32 %294, 0
  br i1 %cmp142.i, label %for.body.lr.ph.i823, label %prune_preferences.exit

for.body.lr.ph.i823:                              ; preds = %for.end454
  %295 = sext i32 %294 to i64
  %.pre155.i = load %struct.allocno** @allocno, align 8, !tbaa !5
  br label %for.body.i829

for.body.i829:                                    ; preds = %for.body.i829, %for.body.lr.ph.i823
  %296 = phi %struct.allocno* [ %.pre155.i, %for.body.lr.ph.i823 ], [ %304, %for.body.i829 ]
  %indvars.iv145.i = phi i64 [ %295, %for.body.lr.ph.i823 ], [ %indvars.iv.next146.i, %for.body.i829 ]
  %indvars.iv.next146.i = add nsw i64 %indvars.iv145.i, -1
  %297 = load i32** @allocno_order, align 8, !tbaa !5
  %arrayidx.i824 = getelementptr inbounds i32* %297, i64 %indvars.iv.next146.i
  %298 = load i32* %arrayidx.i824, align 4, !tbaa !1
  %idxprom2.i = sext i32 %298 to i64
  %arrayidx3.i = getelementptr inbounds i32* %293, i64 %idxprom2.i
  %299 = trunc i64 %indvars.iv.next146.i to i32
  store i32 %299, i32* %arrayidx3.i, align 4, !tbaa !1
  %hard_reg_conflicts.i825 = getelementptr inbounds %struct.allocno* %296, i64 %idxprom2.i, i32 6
  %300 = load i64* %hard_reg_conflicts.i825, align 8, !tbaa !36
  %calls_crossed.i = getelementptr inbounds %struct.allocno* %296, i64 %idxprom2.i, i32 2
  %301 = load i32* %calls_crossed.i, align 4, !tbaa !24
  %cmp8.i = icmp eq i32 %301, 0
  %fixed_reg_set.val.i = load i64* @fixed_reg_set, align 8
  %call_used_reg_set.val.i = load i64* @call_used_reg_set, align 8
  %.pn.i = select i1 %cmp8.i, i64 %fixed_reg_set.val.i, i64 %call_used_reg_set.val.i
  %temp.0.i = or i64 %.pn.i, %300
  %reg.i = getelementptr inbounds %struct.allocno* %296, i64 %idxprom2.i, i32 0
  %302 = load i32* %reg.i, align 4, !tbaa !16
  %call13.i = tail call i32 @reg_preferred_class(i32 %302) #3
  %idxprom14.i = sext i32 %call13.i to i64
  %arrayidx15.i = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom14.i
  %303 = load i64* %arrayidx15.i, align 8, !tbaa !7
  %temp.0.not.i = xor i64 %temp.0.i, -1
  %neg17.i = and i64 %303, %temp.0.not.i
  %304 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_preferences.i826 = getelementptr inbounds %struct.allocno* %304, i64 %idxprom2.i, i32 7
  %305 = bitcast i64* %hard_reg_preferences.i826 to <2 x i64>*
  %306 = load <2 x i64>* %305, align 8, !tbaa !7
  %307 = insertelement <2 x i64> undef, i64 %neg17.i, i32 0
  %308 = insertelement <2 x i64> %307, i64 %neg17.i, i32 1
  %309 = and <2 x i64> %308, %306
  store <2 x i64> %309, <2 x i64>* %305, align 8, !tbaa !7
  %hard_reg_full_preferences.i827 = getelementptr inbounds %struct.allocno* %304, i64 %idxprom2.i, i32 9
  %310 = load i64* %hard_reg_full_preferences.i827, align 8, !tbaa !44
  %and27.i = and i64 %310, %neg17.i
  store i64 %and27.i, i64* %hard_reg_full_preferences.i827, align 8, !tbaa !44
  %cmp.i828 = icmp sgt i32 %299, 0
  br i1 %cmp.i828, label %for.body.i829, label %for.end.i

for.end.i:                                        ; preds = %for.body.i829
  %.pre.i830 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp30139.i = icmp sgt i32 %.pre.i830, 0
  br i1 %cmp30139.i, label %for.body32.lr.ph.i, label %prune_preferences.exit

for.body32.lr.ph.i:                               ; preds = %for.end.i
  %311 = load i32** @allocno_order, align 8, !tbaa !5
  %312 = load i64** @conflicts, align 8, !tbaa !5
  %313 = load i32* @allocno_row_words, align 4, !tbaa !1
  %cmp39130.i = icmp sgt i32 %313, 0
  %314 = sext i32 %.pre.i830 to i64
  br i1 %cmp39130.i, label %for.body41.lr.ph.us.i, label %do.end.i

do.end.us.i:                                      ; preds = %for.inc74.us.i
  %hard_reg_full_preferences79.us.i = getelementptr inbounds %struct.allocno* %304, i64 %idxprom54.us.i, i32 9
  %315 = load i64* %hard_reg_full_preferences79.us.i, align 8, !tbaa !44
  %neg80.us.i = xor i64 %315, -1
  %and81.us.i = and i64 %temp33.1.lcssa.us.i, %neg80.us.i
  %or82.us.i = or i64 %and81.us.i, %temp2.1.lcssa.us.i
  %regs_someone_prefers.us.i = getelementptr inbounds %struct.allocno* %304, i64 %idxprom54.us.i, i32 10
  store i64 %or82.us.i, i64* %regs_someone_prefers.us.i, align 8, !tbaa !45
  %cmp30.us.i = icmp sgt i32 %322, 0
  br i1 %cmp30.us.i, label %for.body41.lr.ph.us.i, label %prune_preferences.exit

for.body41.us.i:                                  ; preds = %for.body41.lr.ph.us.i, %for.inc74.us.i
  %indvars.iv147.i = phi i64 [ 0, %for.body41.lr.ph.us.i ], [ %indvars.iv.next148.i, %for.inc74.us.i ]
  %i_.0135.us.in.i = phi i32 [ %313, %for.body41.lr.ph.us.i ], [ %i_.0135.us.i, %for.inc74.us.i ]
  %p_.0134.us.i = phi i64* [ %add.ptr.us.i834, %for.body41.lr.ph.us.i ], [ %incdec.ptr.us.i831, %for.inc74.us.i ]
  %temp2.0132.us.i = phi i64 [ 0, %for.body41.lr.ph.us.i ], [ %temp2.1.lcssa.us.i, %for.inc74.us.i ]
  %temp33.0131.us.i = phi i64 [ 0, %for.body41.lr.ph.us.i ], [ %temp33.1.lcssa.us.i, %for.inc74.us.i ]
  %i_.0135.us.i = add nsw i32 %i_.0135.us.in.i, -1
  %incdec.ptr.us.i831 = getelementptr inbounds i64* %p_.0134.us.i, i64 1
  %316 = load i64* %p_.0134.us.i, align 8, !tbaa !7
  %tobool123.us.i = icmp eq i64 %316, 0
  br i1 %tobool123.us.i, label %for.inc74.us.i, label %for.body43.us.i

for.body43.us.i:                                  ; preds = %for.body41.us.i, %for.inc72.us.i
  %indvars.iv149.i = phi i64 [ %indvars.iv.next150.i, %for.inc72.us.i ], [ %indvars.iv147.i, %for.body41.us.i ]
  %word_.0127.us.i = phi i64 [ %shr.us.i832, %for.inc72.us.i ], [ %316, %for.body41.us.i ]
  %temp2.1125.us.i = phi i64 [ %temp2.2.us.i, %for.inc72.us.i ], [ %temp2.0132.us.i, %for.body41.us.i ]
  %temp33.1124.us.i = phi i64 [ %temp33.2.us.i, %for.inc72.us.i ], [ %temp33.0131.us.i, %for.body41.us.i ]
  %and44.us.i = and i64 %word_.0127.us.i, 1
  %tobool45.us.i = icmp eq i64 %and44.us.i, 0
  br i1 %tobool45.us.i, label %for.inc72.us.i, label %if.then46.us.i

if.then46.us.i:                                   ; preds = %for.body43.us.i
  %arrayidx48.us.i = getelementptr inbounds i32* %293, i64 %indvars.iv149.i
  %317 = load i32* %arrayidx48.us.i, align 4, !tbaa !1
  %cmp49.us.i = icmp sgt i32 %317, %322
  br i1 %cmp49.us.i, label %if.then51.us.i, label %for.inc72.us.i

if.then51.us.i:                                   ; preds = %if.then46.us.i
  %size.us.i = getelementptr inbounds %struct.allocno* %304, i64 %indvars.iv149.i, i32 1
  %318 = load i32* %size.us.i, align 4, !tbaa !23
  %319 = load i32* %size56.us.i, align 4, !tbaa !23
  %cmp57.us.i = icmp sgt i32 %318, %319
  %hard_reg_full_preferences62.us.i = getelementptr inbounds %struct.allocno* %304, i64 %indvars.iv149.i, i32 9
  %320 = load i64* %hard_reg_full_preferences62.us.i, align 8, !tbaa !44
  br i1 %cmp57.us.i, label %if.else64.us.i, label %if.then59.us.i

if.then59.us.i:                                   ; preds = %if.then51.us.i
  %or63.us.i = or i64 %320, %temp33.1124.us.i
  br label %for.inc72.us.i

if.else64.us.i:                                   ; preds = %if.then51.us.i
  %or68.us.i = or i64 %320, %temp2.1125.us.i
  br label %for.inc72.us.i

for.inc72.us.i:                                   ; preds = %if.else64.us.i, %if.then59.us.i, %if.then46.us.i, %for.body43.us.i
  %temp33.2.us.i = phi i64 [ %or63.us.i, %if.then59.us.i ], [ %temp33.1124.us.i, %if.else64.us.i ], [ %temp33.1124.us.i, %if.then46.us.i ], [ %temp33.1124.us.i, %for.body43.us.i ]
  %temp2.2.us.i = phi i64 [ %temp2.1125.us.i, %if.then59.us.i ], [ %or68.us.i, %if.else64.us.i ], [ %temp2.1125.us.i, %if.then46.us.i ], [ %temp2.1125.us.i, %for.body43.us.i ]
  %shr.us.i832 = lshr i64 %word_.0127.us.i, 1
  %tobool.us.i833 = icmp eq i64 %shr.us.i832, 0
  %indvars.iv.next150.i = add nuw nsw i64 %indvars.iv149.i, 1
  br i1 %tobool.us.i833, label %for.inc74.us.i, label %for.body43.us.i

for.inc74.us.i:                                   ; preds = %for.inc72.us.i, %for.body41.us.i
  %temp2.1.lcssa.us.i = phi i64 [ %temp2.0132.us.i, %for.body41.us.i ], [ %temp2.2.us.i, %for.inc72.us.i ]
  %temp33.1.lcssa.us.i = phi i64 [ %temp33.0131.us.i, %for.body41.us.i ], [ %temp33.2.us.i, %for.inc72.us.i ]
  %cmp39.us.i = icmp sgt i32 %i_.0135.us.i, 0
  %indvars.iv.next148.i = add nuw nsw i64 %indvars.iv147.i, 64
  br i1 %cmp39.us.i, label %for.body41.us.i, label %do.end.us.i

for.body41.lr.ph.us.i:                            ; preds = %for.body32.lr.ph.i, %do.end.us.i
  %indvars.iv152.in.i = phi i64 [ %indvars.iv152.i, %do.end.us.i ], [ %314, %for.body32.lr.ph.i ]
  %indvars.iv152.i = add i64 %indvars.iv152.in.i, -1
  %arrayidx35.us.i = getelementptr inbounds i32* %311, i64 %indvars.iv152.i
  %321 = load i32* %arrayidx35.us.i, align 4, !tbaa !1
  %mul36.us.i = mul nsw i32 %321, %313
  %idx.ext.us.i = sext i32 %mul36.us.i to i64
  %add.ptr.us.i834 = getelementptr inbounds i64* %312, i64 %idx.ext.us.i
  %idxprom54.us.i = sext i32 %321 to i64
  %size56.us.i = getelementptr inbounds %struct.allocno* %304, i64 %idxprom54.us.i, i32 1
  %322 = trunc i64 %indvars.iv152.i to i32
  br label %for.body41.us.i

do.end.i:                                         ; preds = %for.body32.lr.ph.i, %do.end.i
  %indvars.iv.in.i = phi i64 [ %indvars.iv.i835, %do.end.i ], [ %314, %for.body32.lr.ph.i ]
  %indvars.iv.i835 = add i64 %indvars.iv.in.i, -1
  %arrayidx35.i = getelementptr inbounds i32* %311, i64 %indvars.iv.i835
  %323 = load i32* %arrayidx35.i, align 4, !tbaa !1
  %idxprom77.i = sext i32 %323 to i64
  %regs_someone_prefers.i = getelementptr inbounds %struct.allocno* %304, i64 %idxprom77.i, i32 10
  store i64 0, i64* %regs_someone_prefers.i, align 8, !tbaa !45
  %324 = trunc i64 %indvars.iv.i835 to i32
  %cmp30.i = icmp sgt i32 %324, 0
  br i1 %cmp30.i, label %do.end.i, label %prune_preferences.exit

prune_preferences.exit:                           ; preds = %do.end.i, %do.end.us.i, %for.end454, %for.end.i
  tail call void @free(i8* %call.i822) #3
  %tobool455 = icmp eq %struct._IO_FILE* %file, null
  br i1 %tobool455, label %for.cond458.preheader, label %if.then456

if.then456:                                       ; preds = %prune_preferences.exit
  %325 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp226.i836 = icmp sgt i32 %325, 0
  br i1 %cmp226.i836, label %for.body.lr.ph.i837, label %for.end.i843

for.body.lr.ph.i837:                              ; preds = %if.then456
  %326 = load i32** @allocno_order, align 8, !tbaa !5
  %327 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %328 = load i16** @reg_renumber, align 8, !tbaa !5
  br label %for.body.i841

for.body.i841:                                    ; preds = %for.body.i841, %for.body.lr.ph.i837
  %indvars.iv243.i = phi i64 [ 0, %for.body.lr.ph.i837 ], [ %indvars.iv.next244.i, %for.body.i841 ]
  %nregs.0228.i = phi i32 [ 0, %for.body.lr.ph.i837 ], [ %nregs.0.inc.i, %for.body.i841 ]
  %arrayidx.i838 = getelementptr inbounds i32* %326, i64 %indvars.iv243.i
  %329 = load i32* %arrayidx.i838, align 4, !tbaa !1
  %idxprom1.i = sext i32 %329 to i64
  %reg.i839 = getelementptr inbounds %struct.allocno* %327, i64 %idxprom1.i, i32 0
  %330 = load i32* %reg.i839, align 4, !tbaa !16
  %idxprom3.i = sext i32 %330 to i64
  %arrayidx4.i = getelementptr inbounds i16* %328, i64 %idxprom3.i
  %331 = load i16* %arrayidx4.i, align 2, !tbaa !10
  %.lobit.i = lshr i16 %331, 15
  %332 = zext i16 %.lobit.i to i32
  %nregs.0.inc.i = add nsw i32 %332, %nregs.0228.i
  %indvars.iv.next244.i = add nuw nsw i64 %indvars.iv243.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next244.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %325
  br i1 %exitcond, label %for.end.i843, label %for.body.i841

for.end.i843:                                     ; preds = %for.body.i841, %if.then456
  %nregs.0.lcssa.i = phi i32 [ 0, %if.then456 ], [ %nregs.0.inc.i, %for.body.i841 ]
  %call.i842 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([24 x i8]* @.str7, i64 0, i64 0), i32 %nregs.0.lcssa.i) #3
  %333 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp9224.i = icmp sgt i32 %333, 0
  br i1 %cmp9224.i, label %for.body11.i, label %for.end69.i

for.body11.i:                                     ; preds = %for.end.i843, %for.inc67.i
  %indvars.iv241.i = phi i64 [ %indvars.iv.next242.i, %for.inc67.i ], [ 0, %for.end.i843 ]
  %334 = load i32** @allocno_order, align 8, !tbaa !5
  %arrayidx13.i = getelementptr inbounds i32* %334, i64 %indvars.iv241.i
  %335 = load i32* %arrayidx13.i, align 4, !tbaa !1
  %idxprom14.i844 = sext i32 %335 to i64
  %336 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg16.i = getelementptr inbounds %struct.allocno* %336, i64 %idxprom14.i844, i32 0
  %337 = load i32* %reg16.i, align 4, !tbaa !16
  %idxprom17.i = sext i32 %337 to i64
  %338 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx18.i = getelementptr inbounds i16* %338, i64 %idxprom17.i
  %339 = load i16* %arrayidx18.i, align 2, !tbaa !10
  %cmp20.i = icmp sgt i16 %339, -1
  br i1 %cmp20.i, label %for.inc67.i, label %if.end23.i

if.end23.i:                                       ; preds = %for.body11.i
  %call29.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 %337) #3
  %340 = load i32* @max_regno, align 4, !tbaa !1
  %cmp31222.i = icmp sgt i32 %340, 0
  br i1 %cmp31222.i, label %for.body33.i, label %for.end52.i

for.body33.i:                                     ; preds = %if.end23.i, %for.inc50.i
  %341 = phi i32 [ %349, %for.inc50.i ], [ %340, %if.end23.i ]
  %indvars.iv239.i = phi i64 [ %indvars.iv.next240.i, %for.inc50.i ], [ 0, %if.end23.i ]
  %342 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx35.i845 = getelementptr inbounds i32* %342, i64 %indvars.iv239.i
  %343 = load i32* %arrayidx35.i845, align 4, !tbaa !1
  %344 = load i32** @allocno_order, align 8, !tbaa !5
  %arrayidx37.i = getelementptr inbounds i32* %344, i64 %indvars.iv241.i
  %345 = load i32* %arrayidx37.i, align 4, !tbaa !1
  %cmp38.i846 = icmp eq i32 %343, %345
  br i1 %cmp38.i846, label %land.lhs.true.i, label %for.inc50.i

land.lhs.true.i:                                  ; preds = %for.body33.i
  %idxprom42.i = sext i32 %343 to i64
  %346 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg44.i = getelementptr inbounds %struct.allocno* %346, i64 %idxprom42.i, i32 0
  %347 = load i32* %reg44.i, align 4, !tbaa !16
  %348 = trunc i64 %indvars.iv239.i to i32
  %cmp45.i847 = icmp eq i32 %348, %347
  br i1 %cmp45.i847, label %for.inc50.i, label %if.then47.i848

if.then47.i848:                                   ; preds = %land.lhs.true.i
  %call48.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str8, i64 0, i64 0), i32 %348) #3
  %.pre245.i = load i32* @max_regno, align 4, !tbaa !1
  br label %for.inc50.i

for.inc50.i:                                      ; preds = %if.then47.i848, %land.lhs.true.i, %for.body33.i
  %349 = phi i32 [ %341, %land.lhs.true.i ], [ %341, %for.body33.i ], [ %.pre245.i, %if.then47.i848 ]
  %indvars.iv.next240.i = add nuw nsw i64 %indvars.iv239.i, 1
  %350 = trunc i64 %indvars.iv.next240.i to i32
  %cmp31.i = icmp slt i32 %350, %349
  br i1 %cmp31.i, label %for.body33.i, label %for.end52.i

for.end52.i:                                      ; preds = %for.inc50.i, %if.end23.i
  %351 = load i32** @allocno_order, align 8, !tbaa !5
  %arrayidx54.i = getelementptr inbounds i32* %351, i64 %indvars.iv241.i
  %352 = load i32* %arrayidx54.i, align 4, !tbaa !1
  %idxprom55.i = sext i32 %352 to i64
  %353 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %size.i = getelementptr inbounds %struct.allocno* %353, i64 %idxprom55.i, i32 1
  %354 = load i32* %size.i, align 4, !tbaa !23
  %cmp57.i849 = icmp eq i32 %354, 1
  br i1 %cmp57.i849, label %for.inc67.i, label %if.then59.i850

if.then59.i850:                                   ; preds = %for.end52.i
  %call65.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8]* @.str9, i64 0, i64 0), i32 %354) #3
  br label %for.inc67.i

for.inc67.i:                                      ; preds = %if.then59.i850, %for.end52.i, %for.body11.i
  %indvars.iv.next242.i = add nuw nsw i64 %indvars.iv241.i, 1
  %355 = load i32* @max_allocno, align 4, !tbaa !1
  %356 = trunc i64 %indvars.iv.next242.i to i32
  %cmp9.i851 = icmp slt i32 %356, %355
  br i1 %cmp9.i851, label %for.body11.i, label %for.end69.i

for.end69.i:                                      ; preds = %for.inc67.i, %for.end.i843
  %fputc.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file) #3
  %357 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp72220.i = icmp sgt i32 %357, 0
  br i1 %cmp72220.i, label %for.body74.i, label %dump_conflicts.exit

for.body74.i:                                     ; preds = %for.end69.i, %for.inc152.i
  %indvars.iv237.i = phi i64 [ %indvars.iv.next238.i, %for.inc152.i ], [ 0, %for.end69.i ]
  %358 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg78.i = getelementptr inbounds %struct.allocno* %358, i64 %indvars.iv237.i, i32 0
  %359 = load i32* %reg78.i, align 4, !tbaa !16
  %call79.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([17 x i8]* @.str10, i64 0, i64 0), i32 %359) #3
  %360 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp81214.i = icmp sgt i32 %360, 0
  br i1 %cmp81214.i, label %for.body83.lr.ph.i, label %for.body98.i

for.body83.lr.ph.i:                               ; preds = %for.body74.i
  %361 = trunc i64 %indvars.iv237.i to i32
  %div.i852 = lshr i32 %361, 6
  %rem.i853 = and i64 %indvars.iv237.i, 63
  %shl.i854 = shl i64 1, %rem.i853
  br label %for.body83.i860

for.body83.i860:                                  ; preds = %for.inc92.i, %for.body83.lr.ph.i
  %362 = phi i32 [ %360, %for.body83.lr.ph.i ], [ %369, %for.inc92.i ]
  %indvars.iv.i855 = phi i64 [ 0, %for.body83.lr.ph.i ], [ %indvars.iv.next.i862, %for.inc92.i ]
  %363 = load i32* @allocno_row_words, align 4, !tbaa !1
  %364 = trunc i64 %indvars.iv.i855 to i32
  %mul.i856 = mul nsw i32 %363, %364
  %add.i857 = add i32 %mul.i856, %div.i852
  %idxprom84.i = zext i32 %add.i857 to i64
  %365 = load i64** @conflicts, align 8, !tbaa !5
  %arrayidx85.i = getelementptr inbounds i64* %365, i64 %idxprom84.i
  %366 = load i64* %arrayidx85.i, align 8, !tbaa !7
  %and.i858 = and i64 %366, %shl.i854
  %tobool.i859 = icmp eq i64 %and.i858, 0
  br i1 %tobool.i859, label %for.inc92.i, label %if.then86.i

if.then86.i:                                      ; preds = %for.body83.i860
  %367 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg89.i = getelementptr inbounds %struct.allocno* %367, i64 %indvars.iv.i855, i32 0
  %368 = load i32* %reg89.i, align 4, !tbaa !16
  %call90.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 %368) #3
  %.pre.i861 = load i32* @max_allocno, align 4, !tbaa !1
  br label %for.inc92.i

for.inc92.i:                                      ; preds = %if.then86.i, %for.body83.i860
  %369 = phi i32 [ %362, %for.body83.i860 ], [ %.pre.i861, %if.then86.i ]
  %indvars.iv.next.i862 = add nuw nsw i64 %indvars.iv.i855, 1
  %370 = trunc i64 %indvars.iv.next.i862 to i32
  %cmp81.i = icmp slt i32 %370, %369
  br i1 %cmp81.i, label %for.body83.i860, label %for.body98.i

for.body98.i:                                     ; preds = %for.body74.i, %for.inc92.i, %for.inc108.i
  %indvars.iv229.i = phi i64 [ %indvars.iv.next230.i, %for.inc108.i ], [ 0, %for.inc92.i ], [ 0, %for.body74.i ]
  %371 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_conflicts.i863 = getelementptr inbounds %struct.allocno* %371, i64 %indvars.iv237.i, i32 6
  %372 = load i64* %hard_reg_conflicts.i863, align 8, !tbaa !36
  %shl102.i = shl i64 1, %indvars.iv229.i
  %and103.i = and i64 %372, %shl102.i
  %tobool104.i = icmp eq i64 %and103.i, 0
  br i1 %tobool104.i, label %for.inc108.i, label %if.then105.i

if.then105.i:                                     ; preds = %for.body98.i
  %373 = trunc i64 %indvars.iv229.i to i32
  %call106.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 %373) #3
  br label %for.inc108.i

for.inc108.i:                                     ; preds = %if.then105.i, %for.body98.i
  %indvars.iv.next230.i = add nuw nsw i64 %indvars.iv229.i, 1
  %exitcond.i864 = icmp eq i64 %indvars.iv.next230.i, 53
  br i1 %exitcond.i864, label %for.end110.i, label %for.body98.i

for.end110.i:                                     ; preds = %for.inc108.i
  %fputc210.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file) #3
  %374 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_preferences.i865 = getelementptr inbounds %struct.allocno* %374, i64 %indvars.iv237.i, i32 7
  %375 = load i64* %hard_reg_preferences.i865, align 8, !tbaa !43
  br label %for.body115.i

for.body115.i:                                    ; preds = %for.body115.i, %for.end110.i
  %indvars.iv231.i = phi i64 [ 0, %for.end110.i ], [ %indvars.iv.next232.i, %for.body115.i ]
  %has_preferences.0217.i = phi i32 [ 0, %for.end110.i ], [ %has_preferences.0..i, %for.body115.i ]
  %shl119.i = shl i64 1, %indvars.iv231.i
  %and120.i = and i64 %shl119.i, %375
  %tobool121.i = icmp eq i64 %and120.i, 0
  %has_preferences.0..i = select i1 %tobool121.i, i32 %has_preferences.0217.i, i32 1
  %indvars.iv.next232.i = add nuw nsw i64 %indvars.iv231.i, 1
  %exitcond233.i = icmp eq i64 %indvars.iv.next232.i, 53
  br i1 %exitcond233.i, label %for.end126.i, label %for.body115.i

for.end126.i:                                     ; preds = %for.body115.i
  %tobool127.i = icmp eq i32 %has_preferences.0..i, 0
  br i1 %tobool127.i, label %for.inc152.i, label %if.end129.i

if.end129.i:                                      ; preds = %for.end126.i
  %reg132.i = getelementptr inbounds %struct.allocno* %374, i64 %indvars.iv237.i, i32 0
  %376 = load i32* %reg132.i, align 4, !tbaa !16
  %call133.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([19 x i8]* @.str11, i64 0, i64 0), i32 %376) #3
  br label %for.body137.i

for.body137.i:                                    ; preds = %for.inc148.i, %if.end129.i
  %indvars.iv234.i = phi i64 [ 0, %if.end129.i ], [ %indvars.iv.next235.i, %for.inc148.i ]
  %377 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_preferences140.i = getelementptr inbounds %struct.allocno* %377, i64 %indvars.iv237.i, i32 7
  %378 = load i64* %hard_reg_preferences140.i, align 8, !tbaa !43
  %shl142.i = shl i64 1, %indvars.iv234.i
  %and143.i = and i64 %378, %shl142.i
  %tobool144.i = icmp eq i64 %and143.i, 0
  br i1 %tobool144.i, label %for.inc148.i, label %if.then145.i

if.then145.i:                                     ; preds = %for.body137.i
  %379 = trunc i64 %indvars.iv234.i to i32
  %call146.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 %379) #3
  br label %for.inc148.i

for.inc148.i:                                     ; preds = %if.then145.i, %for.body137.i
  %indvars.iv.next235.i = add nuw nsw i64 %indvars.iv234.i, 1
  %exitcond236.i = icmp eq i64 %indvars.iv.next235.i, 53
  br i1 %exitcond236.i, label %for.end150.i, label %for.body137.i

for.end150.i:                                     ; preds = %for.inc148.i
  %fputc213.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file) #3
  br label %for.inc152.i

for.inc152.i:                                     ; preds = %for.end150.i, %for.end126.i
  %indvars.iv.next238.i = add nuw nsw i64 %indvars.iv237.i, 1
  %380 = load i32* @max_allocno, align 4, !tbaa !1
  %381 = trunc i64 %indvars.iv.next238.i to i32
  %cmp72.i866 = icmp slt i32 %381, %380
  br i1 %cmp72.i866, label %for.body74.i, label %dump_conflicts.exit

dump_conflicts.exit:                              ; preds = %for.inc152.i, %for.end69.i
  %fputc207.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file) #3
  br label %for.cond458.preheader

for.cond458.preheader:                            ; preds = %prune_preferences.exit, %dump_conflicts.exit
  %382 = load i32* @max_allocno, align 4, !tbaa !1
  %cmp460923 = icmp eq i32 %382, 0
  %383 = load i32** @allocno_order, align 8, !tbaa !5
  br i1 %cmp460923, label %for.end510, label %for.body462

for.body462:                                      ; preds = %for.cond458.preheader, %for.inc508
  %384 = phi i32* [ %402, %for.inc508 ], [ %383, %for.cond458.preheader ]
  %i.11924 = phi i64 [ %inc509, %for.inc508 ], [ 0, %for.cond458.preheader ]
  %arrayidx463 = getelementptr inbounds i32* %384, i64 %i.11924
  %385 = load i32* %arrayidx463, align 4, !tbaa !1
  %idxprom464 = sext i32 %385 to i64
  %386 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg466 = getelementptr inbounds %struct.allocno* %386, i64 %idxprom464, i32 0
  %387 = load i32* %reg466, align 4, !tbaa !16
  %idxprom467 = sext i32 %387 to i64
  %388 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx468 = getelementptr inbounds i16* %388, i64 %idxprom467
  %389 = load i16* %arrayidx468, align 2, !tbaa !10
  %cmp470 = icmp slt i16 %389, 0
  br i1 %cmp470, label %land.lhs.true472, label %for.inc508

land.lhs.true472:                                 ; preds = %for.body462
  %390 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data478 = getelementptr inbounds %struct.varray_head_tag* %390, i64 0, i32 4
  %reg479 = bitcast %union.varray_data_tag* %data478 to [1 x %struct.reg_info_def*]*
  %arrayidx480 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg479, i64 0, i64 %idxprom467
  %391 = load %struct.reg_info_def** %arrayidx480, align 8, !tbaa !5
  %live_length481 = getelementptr inbounds %struct.reg_info_def* %391, i64 0, i32 7
  %392 = load i32* %live_length481, align 4, !tbaa !14
  %cmp482 = icmp sgt i32 %392, -1
  br i1 %cmp482, label %if.then484, label %for.inc508

if.then484:                                       ; preds = %land.lhs.true472
  tail call fastcc void @find_reg(i32 %385, i64 0, i32 0, i32 0, i32 0)
  %393 = load i32** @allocno_order, align 8, !tbaa !5
  %arrayidx486 = getelementptr inbounds i32* %393, i64 %i.11924
  %394 = load i32* %arrayidx486, align 4, !tbaa !1
  %idxprom487 = sext i32 %394 to i64
  %395 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg489 = getelementptr inbounds %struct.allocno* %395, i64 %idxprom487, i32 0
  %396 = load i32* %reg489, align 4, !tbaa !16
  %idxprom490 = sext i32 %396 to i64
  %397 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx491 = getelementptr inbounds i16* %397, i64 %idxprom490
  %398 = load i16* %arrayidx491, align 2, !tbaa !10
  %cmp493 = icmp sgt i16 %398, -1
  br i1 %cmp493, label %for.inc508, label %if.end496

if.end496:                                        ; preds = %if.then484
  %call501 = tail call i32 @reg_alternate_class(i32 %396) #3
  %cmp502 = icmp eq i32 %call501, 0
  br i1 %cmp502, label %for.inc508, label %if.then504

if.then504:                                       ; preds = %if.end496
  %399 = load i32** @allocno_order, align 8, !tbaa !5
  %arrayidx505 = getelementptr inbounds i32* %399, i64 %i.11924
  %400 = load i32* %arrayidx505, align 4, !tbaa !1
  tail call fastcc void @find_reg(i32 %400, i64 0, i32 1, i32 0, i32 0)
  br label %for.inc508

for.inc508:                                       ; preds = %if.end496, %for.body462, %land.lhs.true472, %if.then504, %if.then484
  %inc509 = add i64 %i.11924, 1
  %401 = load i32* @max_allocno, align 4, !tbaa !1
  %conv459 = sext i32 %401 to i64
  %cmp460 = icmp ult i64 %inc509, %conv459
  %402 = load i32** @allocno_order, align 8, !tbaa !5
  br i1 %cmp460, label %for.body462, label %for.end510

for.end510:                                       ; preds = %for.inc508, %for.cond458.preheader
  %.lcssa = phi i32* [ %383, %for.cond458.preheader ], [ %402, %for.inc508 ]
  %403 = bitcast i32* %.lcssa to i8*
  tail call void @free(i8* %403)
  br label %if.end511

if.end511:                                        ; preds = %for.end510, %for.end389
  %call512 = tail call %struct.rtx_def* @get_insns() #3
  tail call void @build_insn_chain(%struct.rtx_def* %call512)
  %call513 = tail call %struct.rtx_def* @get_insns() #3
  %call514 = tail call i32 @reload(%struct.rtx_def* %call513, i32 1) #3
  %404 = load i32** @reg_allocno, align 8, !tbaa !5
  %405 = bitcast i32* %404 to i8*
  tail call void @free(i8* %405)
  %406 = load i32** @reg_may_share, align 8, !tbaa !5
  %407 = bitcast i32* %406 to i8*
  tail call void @free(i8* %407)
  %408 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %409 = bitcast %struct.allocno* %408 to i8*
  tail call void @free(i8* %409)
  %410 = load i64** @conflicts, align 8, !tbaa !5
  %411 = bitcast i64* %410 to i8*
  tail call void @free(i8* %411)
  %412 = load i64** @allocnos_live, align 8, !tbaa !5
  %413 = bitcast i64* %412 to i8*
  tail call void @free(i8* %413)
  ret i32 %call514

for.inc.3:                                        ; preds = %lor.end
  %or17978 = or i64 %eliminable_regset.promoted, 1114176
  store i64 %or17978, i64* @eliminable_regset, align 8, !tbaa !7
  br i1 %tobool3, label %if.then19, label %if.end21
}

declare i32 @ix86_frame_pointer_required() #1

declare noalias i8* @xmalloc(i64) #1

declare noalias i8* @xcalloc(i64, i64) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

declare void @specqsort(i8*, i32, i32, i32 (...)*) #1

; Function Attrs: nounwind uwtable
define internal i32 @allocno_compare(i8* nocapture readonly %v1p, i8* nocapture readonly %v2p) #0 {
entry:
  %0 = bitcast i8* %v1p to i32*
  %1 = load i32* %0, align 4, !tbaa !1
  %2 = bitcast i8* %v2p to i32*
  %3 = load i32* %2, align 4, !tbaa !1
  %idxprom = sext i32 %1 to i64
  %4 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %n_refs = getelementptr inbounds %struct.allocno* %4, i64 %idxprom, i32 3
  %5 = load i32* %n_refs, align 4, !tbaa !25
  %conv = sext i32 %5 to i64
  %call = tail call i32 @floor_log2_wide(i64 %conv) #3
  %6 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %freq = getelementptr inbounds %struct.allocno* %6, i64 %idxprom, i32 4
  %7 = load i32* %freq, align 4, !tbaa !27
  %mul = mul nsw i32 %7, %call
  %conv3 = sitofp i32 %mul to double
  %live_length = getelementptr inbounds %struct.allocno* %6, i64 %idxprom, i32 5
  %8 = load i32* %live_length, align 4, !tbaa !28
  %conv6 = sitofp i32 %8 to double
  %div = fdiv double %conv3, %conv6
  %mul7 = fmul double %div, 1.000000e+01
  %size = getelementptr inbounds %struct.allocno* %6, i64 %idxprom, i32 1
  %9 = load i32* %size, align 4, !tbaa !23
  %conv10 = sitofp i32 %9 to double
  %mul11 = fmul double %mul7, %conv10
  %conv12 = fptosi double %mul11 to i32
  %idxprom13 = sext i32 %3 to i64
  %n_refs15 = getelementptr inbounds %struct.allocno* %6, i64 %idxprom13, i32 3
  %10 = load i32* %n_refs15, align 4, !tbaa !25
  %conv16 = sext i32 %10 to i64
  %call17 = tail call i32 @floor_log2_wide(i64 %conv16) #3
  %11 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %freq20 = getelementptr inbounds %struct.allocno* %11, i64 %idxprom13, i32 4
  %12 = load i32* %freq20, align 4, !tbaa !27
  %mul21 = mul nsw i32 %12, %call17
  %conv22 = sitofp i32 %mul21 to double
  %live_length25 = getelementptr inbounds %struct.allocno* %11, i64 %idxprom13, i32 5
  %13 = load i32* %live_length25, align 4, !tbaa !28
  %conv26 = sitofp i32 %13 to double
  %div27 = fdiv double %conv22, %conv26
  %mul28 = fmul double %div27, 1.000000e+01
  %size31 = getelementptr inbounds %struct.allocno* %11, i64 %idxprom13, i32 1
  %14 = load i32* %size31, align 4, !tbaa !23
  %conv32 = sitofp i32 %14 to double
  %mul33 = fmul double %mul28, %conv32
  %conv34 = fptosi double %mul33 to i32
  %tobool = icmp eq i32 %conv34, %conv12
  %sub = sub nsw i32 %conv34, %conv12
  %sub36 = sub nsw i32 %1, %3
  %retval.0 = select i1 %tobool, i32 %sub36, i32 %sub
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_reg(i32 %num, i64 %losers, i32 %alt_regs_p, i32 %accept_call_clobbered, i32 %retrying) #0 {
entry:
  %tobool = icmp eq i32 %alt_regs_p, 0
  %idxprom = sext i32 %num to i64
  %0 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg = getelementptr inbounds %struct.allocno* %0, i64 %idxprom, i32 0
  %1 = load i32* %reg, align 4, !tbaa !16
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %call = tail call i32 @reg_alternate_class(i32 %1) #3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call4 = tail call i32 @reg_preferred_class(i32 %1) #3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call4, %cond.false ]
  %2 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg7 = getelementptr inbounds %struct.allocno* %2, i64 %idxprom, i32 0
  %3 = load i32* %reg7, align 4, !tbaa !16
  %idxprom8 = sext i32 %3 to i64
  %4 = load %struct.function** @cfun, align 8, !tbaa !5
  %emit = getelementptr inbounds %struct.function* %4, i64 0, i32 3
  %5 = load %struct.emit_status** %emit, align 8, !tbaa !18
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %5, i64 0, i32 12
  %6 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !21
  %arrayidx9 = getelementptr inbounds %struct.rtx_def** %6, i64 %idxprom8
  %7 = load %struct.rtx_def** %arrayidx9, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %tobool10 = icmp ne i32 %accept_call_clobbered, 0
  br i1 %tobool10, label %if.end15, label %if.else

if.else:                                          ; preds = %cond.end
  %calls_crossed = getelementptr inbounds %struct.allocno* %2, i64 %idxprom, i32 2
  %9 = load i32* %calls_crossed, align 4, !tbaa !24
  %cmp = icmp eq i32 %9, 0
  %fixed_reg_set.call_used_reg_set = select i1 %cmp, i64* @fixed_reg_set, i64* @call_used_reg_set
  br label %if.end15

if.end15:                                         ; preds = %if.else, %cond.end
  %used1.0.in = phi i64* [ @call_fixed_reg_set, %cond.end ], [ %fixed_reg_set.call_used_reg_set, %if.else ]
  %used1.0 = load i64* %used1.0.in, align 8
  %10 = load i64* @no_global_alloc_regs, align 8, !tbaa !7
  %idxprom20 = sext i32 %cond to i64
  %arrayidx21 = getelementptr inbounds [25 x i64]* @reg_class_contents, i64 0, i64 %idxprom20
  %11 = load i64* %arrayidx21, align 8, !tbaa !7
  %neg = xor i64 %11, -1
  %or = or i64 %used1.0, %losers
  %or18 = or i64 %or, %10
  %or22 = or i64 %or18, %neg
  %hard_reg_conflicts = getelementptr inbounds %struct.allocno* %2, i64 %idxprom, i32 6
  %12 = load i64* %hard_reg_conflicts, align 8, !tbaa !36
  %or25 = or i64 %12, %or22
  %13 = load i64* @regs_used_so_far, align 8, !tbaa !7
  %neg26 = xor i64 %13, -1
  %or27 = or i64 %or25, %neg26
  %regs_someone_prefers = getelementptr inbounds %struct.allocno* %2, i64 %idxprom, i32 10
  %14 = load i64* %regs_someone_prefers, align 8, !tbaa !45
  %or30 = or i64 %or27, %14
  %idxprom681152 = zext i32 %bf.clear to i64
  %arrayidx69 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom681152
  %arrayidx89 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom681152
  br label %for.body

for.body:                                         ; preds = %if.end15, %for.inc122
  %best_reg.01224 = phi i32 [ -1, %if.end15 ], [ %best_reg.1, %for.inc122 ]
  %pass.01223 = phi i32 [ 0, %if.end15 ], [ %inc123, %for.inc122 ]
  %used.01222 = phi i64 [ %or30, %if.end15 ], [ %or25.used.0, %for.inc122 ]
  %cmp33 = icmp eq i32 %pass.01223, 1
  %or25.used.0 = select i1 %cmp33, i64 %or25, i64 %used.01222
  br label %for.body38

for.body38:                                       ; preds = %for.body, %for.inc119
  %indvars.iv1269 = phi i64 [ 0, %for.body ], [ %indvars.iv.next1270, %for.inc119 ]
  %i.11220 = phi i32 [ 0, %for.body ], [ %inc120, %for.inc119 ]
  %arrayidx40 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv1269
  %15 = load i32* %arrayidx40, align 4, !tbaa !1
  %sh_prom = zext i32 %15 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %shl, %or25.used.0
  %tobool41 = icmp eq i64 %and, 0
  br i1 %tobool41, label %land.lhs.true, label %for.inc119

land.lhs.true:                                    ; preds = %for.body38
  %call42 = tail call i32 @ix86_hard_regno_mode_ok(i32 %15, i32 %bf.clear) #3
  %tobool43 = icmp eq i32 %call42, 0
  br i1 %tobool43, label %for.inc119, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %land.lhs.true
  %16 = and i32 %15, -8
  %17 = icmp eq i32 %16, 8
  %.off1148 = add i32 %15, -21
  %18 = icmp ult i32 %.off1148, 8
  %or.cond = or i1 %17, %18
  %.off1149 = add i32 %15, -45
  %19 = icmp ult i32 %.off1149, 8
  %or.cond1156 = or i1 %or.cond, %19
  %.off1150 = add i32 %15, -29
  %20 = icmp ult i32 %.off1150, 8
  %or.cond1158 = or i1 %or.cond1156, %20
  br i1 %or.cond1158, label %cond.true67, label %cond.false75

cond.true67:                                      ; preds = %land.lhs.true44
  %21 = load i32* %arrayidx69, align 4, !tbaa !9
  %cmp70 = icmp eq i32 %21, 5
  br i1 %cmp70, label %cond.end100, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true67
  %cmp73 = icmp eq i32 %21, 6
  %phitmp1153 = select i1 %cmp73, i32 2, i32 1
  br label %cond.end100

cond.false75:                                     ; preds = %land.lhs.true44
  switch i32 %bf.clear, label %cond.false87 [
    i32 18, label %cond.true77
    i32 24, label %cond.true83
  ]

cond.true77:                                      ; preds = %cond.false75
  %22 = load i32* @target_flags, align 4, !tbaa !1
  %and78 = lshr i32 %22, 25
  %23 = and i32 %and78, 1
  %24 = xor i32 %23, 3
  br label %cond.end100

cond.true83:                                      ; preds = %cond.false75
  %25 = load i32* @target_flags, align 4, !tbaa !1
  %and84 = lshr i32 %25, 24
  %26 = and i32 %and84, 2
  %27 = xor i32 %26, 6
  br label %cond.end100

cond.false87:                                     ; preds = %cond.false75
  %28 = load i8* %arrayidx89, align 1, !tbaa !9
  %conv = zext i8 %28 to i32
  %29 = load i32* @target_flags, align 4, !tbaa !1
  %and90 = lshr i32 %29, 23
  %30 = and i32 %and90, 4
  %31 = add i32 %30, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %31
  %div = sdiv i32 %sub, %31
  br label %cond.end100

cond.end100:                                      ; preds = %cond.true67, %lor.rhs, %cond.true77, %cond.false87, %cond.true83
  %cond101 = phi i32 [ %24, %cond.true77 ], [ %27, %cond.true83 ], [ %div, %cond.false87 ], [ 2, %cond.true67 ], [ %phitmp1153, %lor.rhs ]
  %add102 = add nsw i32 %cond101, %15
  br label %for.cond104

for.cond104:                                      ; preds = %land.rhs107, %cond.end100
  %j.0.in = phi i32 [ %15, %cond.end100 ], [ %j.0, %land.rhs107 ]
  %j.0 = add nsw i32 %j.0.in, 1
  %cmp105 = icmp slt i32 %j.0, %add102
  br i1 %cmp105, label %land.rhs107, label %for.end

land.rhs107:                                      ; preds = %for.cond104
  %sh_prom108 = zext i32 %j.0 to i64
  %shl109 = shl i64 1, %sh_prom108
  %and110 = and i64 %shl109, %or25.used.0
  %lnot = icmp eq i64 %and110, 0
  br i1 %lnot, label %for.cond104, label %for.end

for.end:                                          ; preds = %for.cond104, %land.rhs107
  %cmp114 = icmp eq i32 %j.0, %add102
  %32 = trunc i64 %indvars.iv1269 to i32
  br i1 %cmp114, label %for.inc122, label %for.inc119

for.inc119:                                       ; preds = %land.lhs.true, %for.body38, %for.end
  %indvars.iv.next1270 = add nuw nsw i64 %indvars.iv1269, 1
  %inc120 = add nsw i32 %i.11220, 1
  %33 = trunc i64 %indvars.iv.next1270 to i32
  %cmp37 = icmp slt i32 %33, 53
  br i1 %cmp37, label %for.body38, label %for.inc122

for.inc122:                                       ; preds = %for.end, %for.inc119
  %i.1.lcssa = phi i32 [ %32, %for.end ], [ %inc120, %for.inc119 ]
  %best_reg.1 = phi i32 [ %15, %for.end ], [ %best_reg.01224, %for.inc119 ]
  %inc123 = add nsw i32 %pass.01223, 1
  %cmp31 = icmp slt i32 %inc123, 2
  %cmp32 = icmp sgt i32 %i.1.lcssa, 52
  %or.cond895 = and i1 %cmp31, %cmp32
  br i1 %or.cond895, label %for.body, label %for.end124

for.end124:                                       ; preds = %for.inc122
  %neg125 = xor i64 %or25.used.0, -1
  %34 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_copy_preferences = getelementptr inbounds %struct.allocno* %34, i64 %idxprom, i32 8
  %35 = load i64* %hard_reg_copy_preferences, align 8, !tbaa !42
  %and128 = and i64 %35, %neg125
  store i64 %and128, i64* %hard_reg_copy_preferences, align 8, !tbaa !42
  %36 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 0), align 8, !tbaa !7
  %neg132 = xor i64 %36, -1
  %and133 = and i64 %and128, %neg132
  %cmp134 = icmp ne i64 %and133, 0
  %cmp138 = icmp sgt i32 %best_reg.1, -1
  %or.cond896 = and i1 %cmp134, %cmp138
  br i1 %or.cond896, label %for.cond141.preheader, label %no_copy_prefs

for.cond141.preheader:                            ; preds = %for.end124
  %idxprom167 = sext i32 %best_reg.1 to i64
  %arrayidx168 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %idxprom167
  br label %for.body144

for.body144:                                      ; preds = %for.inc304.for.body144_crit_edge, %for.cond141.preheader
  %37 = phi i64 [ %and128, %for.cond141.preheader ], [ %.pre1275, %for.inc304.for.body144_crit_edge ]
  %indvars.iv1263 = phi i64 [ 0, %for.cond141.preheader ], [ %indvars.iv.next1264, %for.inc304.for.body144_crit_edge ]
  %indvars.iv1259 = phi i64 [ 1, %for.cond141.preheader ], [ %indvars.iv.next1260, %for.inc304.for.body144_crit_edge ]
  %38 = trunc i64 %indvars.iv1263 to i32
  %sh_prom148 = and i64 %indvars.iv1263, 4294967295
  %shl149 = shl i64 1, %sh_prom148
  %and150 = and i64 %37, %shl149
  %tobool151 = icmp eq i64 %and150, 0
  br i1 %tobool151, label %for.inc304, label %land.lhs.true152

land.lhs.true152:                                 ; preds = %for.body144
  %call153 = tail call i32 @ix86_hard_regno_mode_ok(i32 %38, i32 %bf.clear) #3
  %tobool154 = icmp eq i32 %call153, 0
  br i1 %tobool154, label %for.inc304, label %land.lhs.true155

land.lhs.true155:                                 ; preds = %land.lhs.true152
  %arrayidx166 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %indvars.iv1263
  %39 = load i32* %arrayidx166, align 4, !tbaa !9
  %40 = load i32* %arrayidx168, align 4, !tbaa !9
  %cmp169 = icmp eq i32 %39, %40
  br i1 %cmp169, label %if.then185, label %lor.lhs.false171

lor.lhs.false171:                                 ; preds = %land.lhs.true155
  %call176 = tail call i32 @reg_class_subset_p(i32 %39, i32 %40) #3
  %tobool177 = icmp eq i32 %call176, 0
  br i1 %tobool177, label %lor.lhs.false178, label %if.then185

lor.lhs.false178:                                 ; preds = %lor.lhs.false171
  %call183 = tail call i32 @reg_class_subset_p(i32 %40, i32 %39) #3
  %tobool184 = icmp eq i32 %call183, 0
  br i1 %tobool184, label %for.inc304, label %if.then185

if.then185:                                       ; preds = %lor.lhs.false178, %lor.lhs.false171, %land.lhs.true155
  %41 = and i32 %38, -8
  %42 = icmp eq i32 %41, 8
  %43 = add i64 %indvars.iv1263, 4294967275
  %44 = trunc i64 %43 to i32
  %45 = icmp ult i32 %44, 8
  %or.cond1160 = or i1 %42, %45
  %46 = add i64 %indvars.iv1263, 4294967251
  %47 = trunc i64 %46 to i32
  %48 = icmp ult i32 %47, 8
  %or.cond1162 = or i1 %or.cond1160, %48
  %49 = add i64 %indvars.iv1263, 4294967267
  %50 = trunc i64 %49 to i32
  %51 = icmp ult i32 %50, 8
  %or.cond1164 = or i1 %or.cond1162, %51
  br i1 %or.cond1164, label %cond.true211, label %cond.false223

cond.true211:                                     ; preds = %if.then185
  %52 = load i32* %arrayidx69, align 4, !tbaa !9
  %cmp214 = icmp eq i32 %52, 5
  br i1 %cmp214, label %cond.end254, label %lor.rhs216

lor.rhs216:                                       ; preds = %cond.true211
  %cmp219 = icmp eq i32 %52, 6
  %phitmp1146 = select i1 %cmp219, i32 2, i32 1
  br label %cond.end254

cond.false223:                                    ; preds = %if.then185
  switch i32 %bf.clear, label %cond.false237 [
    i32 18, label %cond.true226
    i32 24, label %cond.true233
  ]

cond.true226:                                     ; preds = %cond.false223
  %53 = load i32* @target_flags, align 4, !tbaa !1
  %and227 = lshr i32 %53, 25
  %54 = and i32 %and227, 1
  %55 = xor i32 %54, 3
  br label %cond.end254

cond.true233:                                     ; preds = %cond.false223
  %56 = load i32* @target_flags, align 4, !tbaa !1
  %and234 = lshr i32 %56, 24
  %57 = and i32 %and234, 2
  %58 = xor i32 %57, 6
  br label %cond.end254

cond.false237:                                    ; preds = %cond.false223
  %59 = load i8* %arrayidx89, align 1, !tbaa !9
  %conv240 = zext i8 %59 to i32
  %60 = load i32* @target_flags, align 4, !tbaa !1
  %and241 = lshr i32 %60, 23
  %61 = and i32 %and241, 4
  %62 = add i32 %61, 4
  %add244 = add i32 %conv240, -1
  %sub245 = add i32 %add244, %62
  %div249 = sdiv i32 %sub245, %62
  br label %cond.end254

cond.end254:                                      ; preds = %cond.true211, %lor.rhs216, %cond.true226, %cond.false237, %cond.true233
  %cond255 = phi i32 [ %55, %cond.true226 ], [ %58, %cond.true233 ], [ %div249, %cond.false237 ], [ 2, %cond.true211 ], [ %phitmp1146, %lor.rhs216 ]
  %add256 = add nsw i32 %cond255, %38
  %63 = add nsw i64 %indvars.iv1263, 1
  %64 = trunc i64 %63 to i32
  %cmp2591213 = icmp slt i32 %64, %add256
  br i1 %cmp2591213, label %land.lhs.true261.lr.ph, label %for.end298

land.lhs.true261.lr.ph:                           ; preds = %cond.end254
  %sub269 = sub i32 %best_reg.1, %38
  br label %land.lhs.true261

land.lhs.true261:                                 ; preds = %land.lhs.true261.lr.ph, %for.cond258.backedge
  %indvars.iv1261 = phi i64 [ %indvars.iv1259, %land.lhs.true261.lr.ph ], [ %indvars.iv.next1262, %for.cond258.backedge ]
  %65 = trunc i64 %indvars.iv1261 to i32
  %sh_prom262 = and i64 %indvars.iv1261, 4294967295
  %shl263 = shl i64 1, %sh_prom262
  %and264 = and i64 %shl263, %or25.used.0
  %tobool265 = icmp eq i64 %and264, 0
  br i1 %tobool265, label %land.rhs266, label %for.end298

land.rhs266:                                      ; preds = %land.lhs.true261
  %arrayidx268 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %indvars.iv1261
  %66 = load i32* %arrayidx268, align 4, !tbaa !9
  %add270 = add i32 %sub269, %65
  %idxprom271 = sext i32 %add270 to i64
  %arrayidx272 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %idxprom271
  %67 = load i32* %arrayidx272, align 4, !tbaa !9
  %cmp273 = icmp eq i32 %66, %67
  br i1 %cmp273, label %for.cond258.backedge, label %lor.lhs.false275

lor.lhs.false275:                                 ; preds = %land.rhs266
  %call282 = tail call i32 @reg_class_subset_p(i32 %66, i32 %67) #3
  %tobool283 = icmp eq i32 %call282, 0
  br i1 %tobool283, label %lor.rhs284, label %for.cond258.backedge

lor.rhs284:                                       ; preds = %lor.lhs.false275
  %call291 = tail call i32 @reg_class_subset_p(i32 %67, i32 %66) #3
  %tobool292 = icmp eq i32 %call291, 0
  br i1 %tobool292, label %for.end298, label %for.cond258.backedge

for.cond258.backedge:                             ; preds = %lor.rhs284, %lor.lhs.false275, %land.rhs266
  %indvars.iv.next1262 = add nuw nsw i64 %indvars.iv1261, 1
  %68 = trunc i64 %indvars.iv.next1262 to i32
  %cmp259 = icmp slt i32 %68, %add256
  br i1 %cmp259, label %land.lhs.true261, label %for.end298

for.end298:                                       ; preds = %for.cond258.backedge, %land.lhs.true261, %lor.rhs284, %cond.end254
  %j186.0.lcssa = phi i32 [ %64, %cond.end254 ], [ %68, %for.cond258.backedge ], [ %65, %land.lhs.true261 ], [ %65, %lor.rhs284 ]
  %cmp299 = icmp eq i32 %j186.0.lcssa, %add256
  br i1 %cmp299, label %no_prefs, label %for.inc304

for.inc304:                                       ; preds = %lor.lhs.false178, %land.lhs.true152, %for.body144, %for.end298
  %indvars.iv.next1264 = add nuw nsw i64 %indvars.iv1263, 1
  %69 = trunc i64 %indvars.iv.next1264 to i32
  %cmp142 = icmp slt i32 %69, 53
  br i1 %cmp142, label %for.inc304.for.body144_crit_edge, label %no_copy_prefs.loopexit

for.inc304.for.body144_crit_edge:                 ; preds = %for.inc304
  %indvars.iv.next1260 = add nuw nsw i64 %indvars.iv1259, 1
  %.pre1274 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_copy_preferences147.phi.trans.insert = getelementptr inbounds %struct.allocno* %.pre1274, i64 %idxprom, i32 8
  %.pre1275 = load i64* %hard_reg_copy_preferences147.phi.trans.insert, align 8, !tbaa !42
  br label %for.body144

no_copy_prefs.loopexit:                           ; preds = %for.inc304
  %.pre1271 = load %struct.allocno** @allocno, align 8, !tbaa !5
  br label %no_copy_prefs

no_copy_prefs:                                    ; preds = %no_copy_prefs.loopexit, %for.end124
  %70 = phi %struct.allocno* [ %.pre1271, %no_copy_prefs.loopexit ], [ %34, %for.end124 ]
  %hard_reg_preferences = getelementptr inbounds %struct.allocno* %70, i64 %idxprom, i32 7
  %71 = load i64* %hard_reg_preferences, align 8, !tbaa !43
  %and311 = and i64 %71, %neg125
  store i64 %and311, i64* %hard_reg_preferences, align 8, !tbaa !43
  %72 = load i64* getelementptr inbounds ([25 x i64]* @reg_class_contents, i64 0, i64 0), align 8, !tbaa !7
  %neg315 = xor i64 %72, -1
  %and316 = and i64 %and311, %neg315
  %cmp317 = icmp ne i64 %and316, 0
  %or.cond897 = and i1 %cmp317, %cmp138
  br i1 %or.cond897, label %for.cond324.preheader, label %no_prefs

for.cond324.preheader:                            ; preds = %no_copy_prefs
  %idxprom350 = sext i32 %best_reg.1 to i64
  %arrayidx351 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %idxprom350
  br label %for.body327

for.body327:                                      ; preds = %for.inc487.for.body327_crit_edge, %for.cond324.preheader
  %73 = phi i64 [ %and311, %for.cond324.preheader ], [ %.pre1273, %for.inc487.for.body327_crit_edge ]
  %indvars.iv1253 = phi i64 [ 0, %for.cond324.preheader ], [ %indvars.iv.next1254, %for.inc487.for.body327_crit_edge ]
  %indvars.iv1249 = phi i64 [ 1, %for.cond324.preheader ], [ %indvars.iv.next1250, %for.inc487.for.body327_crit_edge ]
  %74 = trunc i64 %indvars.iv1253 to i32
  %sh_prom331 = and i64 %indvars.iv1253, 4294967295
  %shl332 = shl i64 1, %sh_prom331
  %and333 = and i64 %73, %shl332
  %tobool334 = icmp eq i64 %and333, 0
  br i1 %tobool334, label %for.inc487, label %land.lhs.true335

land.lhs.true335:                                 ; preds = %for.body327
  %call336 = tail call i32 @ix86_hard_regno_mode_ok(i32 %74, i32 %bf.clear) #3
  %tobool337 = icmp eq i32 %call336, 0
  br i1 %tobool337, label %for.inc487, label %land.lhs.true338

land.lhs.true338:                                 ; preds = %land.lhs.true335
  %arrayidx349 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %indvars.iv1253
  %75 = load i32* %arrayidx349, align 4, !tbaa !9
  %76 = load i32* %arrayidx351, align 4, !tbaa !9
  %cmp352 = icmp eq i32 %75, %76
  br i1 %cmp352, label %if.then368, label %lor.lhs.false354

lor.lhs.false354:                                 ; preds = %land.lhs.true338
  %call359 = tail call i32 @reg_class_subset_p(i32 %75, i32 %76) #3
  %tobool360 = icmp eq i32 %call359, 0
  br i1 %tobool360, label %lor.lhs.false361, label %if.then368

lor.lhs.false361:                                 ; preds = %lor.lhs.false354
  %call366 = tail call i32 @reg_class_subset_p(i32 %76, i32 %75) #3
  %tobool367 = icmp eq i32 %call366, 0
  br i1 %tobool367, label %for.inc487, label %if.then368

if.then368:                                       ; preds = %lor.lhs.false361, %lor.lhs.false354, %land.lhs.true338
  %77 = and i32 %74, -8
  %78 = icmp eq i32 %77, 8
  %79 = add i64 %indvars.iv1253, 4294967275
  %80 = trunc i64 %79 to i32
  %81 = icmp ult i32 %80, 8
  %or.cond1166 = or i1 %78, %81
  %82 = add i64 %indvars.iv1253, 4294967251
  %83 = trunc i64 %82 to i32
  %84 = icmp ult i32 %83, 8
  %or.cond1168 = or i1 %or.cond1166, %84
  %85 = add i64 %indvars.iv1253, 4294967267
  %86 = trunc i64 %85 to i32
  %87 = icmp ult i32 %86, 8
  %or.cond1170 = or i1 %or.cond1168, %87
  br i1 %or.cond1170, label %cond.true394, label %cond.false406

cond.true394:                                     ; preds = %if.then368
  %88 = load i32* %arrayidx69, align 4, !tbaa !9
  %cmp397 = icmp eq i32 %88, 5
  br i1 %cmp397, label %cond.end437, label %lor.rhs399

lor.rhs399:                                       ; preds = %cond.true394
  %cmp402 = icmp eq i32 %88, 6
  %phitmp1141 = select i1 %cmp402, i32 2, i32 1
  br label %cond.end437

cond.false406:                                    ; preds = %if.then368
  switch i32 %bf.clear, label %cond.false420 [
    i32 18, label %cond.true409
    i32 24, label %cond.true416
  ]

cond.true409:                                     ; preds = %cond.false406
  %89 = load i32* @target_flags, align 4, !tbaa !1
  %and410 = lshr i32 %89, 25
  %90 = and i32 %and410, 1
  %91 = xor i32 %90, 3
  br label %cond.end437

cond.true416:                                     ; preds = %cond.false406
  %92 = load i32* @target_flags, align 4, !tbaa !1
  %and417 = lshr i32 %92, 24
  %93 = and i32 %and417, 2
  %94 = xor i32 %93, 6
  br label %cond.end437

cond.false420:                                    ; preds = %cond.false406
  %95 = load i8* %arrayidx89, align 1, !tbaa !9
  %conv423 = zext i8 %95 to i32
  %96 = load i32* @target_flags, align 4, !tbaa !1
  %and424 = lshr i32 %96, 23
  %97 = and i32 %and424, 4
  %98 = add i32 %97, 4
  %add427 = add i32 %conv423, -1
  %sub428 = add i32 %add427, %98
  %div432 = sdiv i32 %sub428, %98
  br label %cond.end437

cond.end437:                                      ; preds = %cond.true394, %lor.rhs399, %cond.true409, %cond.false420, %cond.true416
  %cond438 = phi i32 [ %91, %cond.true409 ], [ %94, %cond.true416 ], [ %div432, %cond.false420 ], [ 2, %cond.true394 ], [ %phitmp1141, %lor.rhs399 ]
  %add439 = add nsw i32 %cond438, %74
  %99 = add nsw i64 %indvars.iv1253, 1
  %100 = trunc i64 %99 to i32
  %cmp4421205 = icmp slt i32 %100, %add439
  br i1 %cmp4421205, label %land.lhs.true444.lr.ph, label %for.end481

land.lhs.true444.lr.ph:                           ; preds = %cond.end437
  %sub452 = sub i32 %best_reg.1, %74
  br label %land.lhs.true444

land.lhs.true444:                                 ; preds = %land.lhs.true444.lr.ph, %for.cond441.backedge
  %indvars.iv1251 = phi i64 [ %indvars.iv1249, %land.lhs.true444.lr.ph ], [ %indvars.iv.next1252, %for.cond441.backedge ]
  %101 = trunc i64 %indvars.iv1251 to i32
  %sh_prom445 = and i64 %indvars.iv1251, 4294967295
  %shl446 = shl i64 1, %sh_prom445
  %and447 = and i64 %shl446, %or25.used.0
  %tobool448 = icmp eq i64 %and447, 0
  br i1 %tobool448, label %land.rhs449, label %for.end481

land.rhs449:                                      ; preds = %land.lhs.true444
  %arrayidx451 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %indvars.iv1251
  %102 = load i32* %arrayidx451, align 4, !tbaa !9
  %add453 = add i32 %sub452, %101
  %idxprom454 = sext i32 %add453 to i64
  %arrayidx455 = getelementptr inbounds [53 x i32]* @regclass_map, i64 0, i64 %idxprom454
  %103 = load i32* %arrayidx455, align 4, !tbaa !9
  %cmp456 = icmp eq i32 %102, %103
  br i1 %cmp456, label %for.cond441.backedge, label %lor.lhs.false458

lor.lhs.false458:                                 ; preds = %land.rhs449
  %call465 = tail call i32 @reg_class_subset_p(i32 %102, i32 %103) #3
  %tobool466 = icmp eq i32 %call465, 0
  br i1 %tobool466, label %lor.rhs467, label %for.cond441.backedge

lor.rhs467:                                       ; preds = %lor.lhs.false458
  %call474 = tail call i32 @reg_class_subset_p(i32 %103, i32 %102) #3
  %tobool475 = icmp eq i32 %call474, 0
  br i1 %tobool475, label %for.end481, label %for.cond441.backedge

for.cond441.backedge:                             ; preds = %lor.rhs467, %lor.lhs.false458, %land.rhs449
  %indvars.iv.next1252 = add nuw nsw i64 %indvars.iv1251, 1
  %104 = trunc i64 %indvars.iv.next1252 to i32
  %cmp442 = icmp slt i32 %104, %add439
  br i1 %cmp442, label %land.lhs.true444, label %for.end481

for.end481:                                       ; preds = %for.cond441.backedge, %land.lhs.true444, %lor.rhs467, %cond.end437
  %j369.0.lcssa = phi i32 [ %100, %cond.end437 ], [ %104, %for.cond441.backedge ], [ %101, %land.lhs.true444 ], [ %101, %lor.rhs467 ]
  %cmp482 = icmp eq i32 %j369.0.lcssa, %add439
  br i1 %cmp482, label %no_prefs, label %for.inc487

for.inc487:                                       ; preds = %lor.lhs.false361, %land.lhs.true335, %for.body327, %for.end481
  %indvars.iv.next1254 = add nuw nsw i64 %indvars.iv1253, 1
  %105 = trunc i64 %indvars.iv.next1254 to i32
  %cmp325 = icmp slt i32 %105, 53
  br i1 %cmp325, label %for.inc487.for.body327_crit_edge, label %no_prefs

for.inc487.for.body327_crit_edge:                 ; preds = %for.inc487
  %indvars.iv.next1250 = add nuw nsw i64 %indvars.iv1249, 1
  %.pre1272 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_preferences330.phi.trans.insert = getelementptr inbounds %struct.allocno* %.pre1272, i64 %idxprom, i32 7
  %.pre1273 = load i64* %hard_reg_preferences330.phi.trans.insert, align 8, !tbaa !43
  br label %for.body327

no_prefs:                                         ; preds = %for.end298, %for.end481, %for.inc487, %no_copy_prefs
  %best_reg.2 = phi i32 [ %best_reg.1, %no_copy_prefs ], [ %74, %for.end481 ], [ %best_reg.1, %for.inc487 ], [ %38, %for.end298 ]
  %106 = load i32* @flag_caller_saves, align 4, !tbaa !1
  %notlhs = icmp eq i32 %106, 0
  %notrhs = icmp sgt i32 %best_reg.2, -1
  %or.cond884.not = or i1 %notrhs, %notlhs
  %or.cond898 = or i1 %or.cond884.not, %tobool10
  br i1 %or.cond898, label %if.end528, label %land.lhs.true497

land.lhs.true497:                                 ; preds = %no_prefs
  %107 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %calls_crossed500 = getelementptr inbounds %struct.allocno* %107, i64 %idxprom, i32 2
  %108 = load i32* %calls_crossed500, align 4, !tbaa !24
  %cmp501 = icmp eq i32 %108, 0
  br i1 %cmp501, label %if.end528, label %land.lhs.true503

land.lhs.true503:                                 ; preds = %land.lhs.true497
  %mul = shl nsw i32 %108, 2
  %n_refs = getelementptr inbounds %struct.allocno* %107, i64 %idxprom, i32 3
  %109 = load i32* %n_refs, align 4, !tbaa !25
  %cmp509 = icmp slt i32 %mul, %109
  br i1 %cmp509, label %if.then511, label %if.end528

if.then511:                                       ; preds = %land.lhs.true503
  %110 = load i64* @losing_caller_save_reg_set, align 8, !tbaa !7
  %or516 = or i64 %110, %losers
  tail call fastcc void @find_reg(i32 %num, i64 %or516, i32 %alt_regs_p, i32 1, i32 %retrying)
  %111 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg519 = getelementptr inbounds %struct.allocno* %111, i64 %idxprom, i32 0
  %112 = load i32* %reg519, align 4, !tbaa !16
  %idxprom520 = sext i32 %112 to i64
  %113 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx521 = getelementptr inbounds i16* %113, i64 %idxprom520
  %114 = load i16* %arrayidx521, align 2, !tbaa !10
  %cmp523 = icmp sgt i16 %114, -1
  br i1 %cmp523, label %if.then525, label %if.end528

if.then525:                                       ; preds = %if.then511
  store i32 1, i32* @caller_save_needed, align 4, !tbaa !1
  br label %if.end865

if.end528:                                        ; preds = %land.lhs.true497, %no_prefs, %land.lhs.true503, %if.then511
  %tobool532 = icmp ne i32 %retrying, 0
  %or.cond885 = or i1 %notrhs, %tobool532
  br i1 %or.cond885, label %if.end719, label %land.lhs.true533

land.lhs.true533:                                 ; preds = %if.end528
  %115 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %size = getelementptr inbounds %struct.allocno* %115, i64 %idxprom, i32 1
  %116 = load i32* %size, align 4, !tbaa !23
  %cmp536 = icmp eq i32 %116, 1
  br i1 %cmp536, label %for.body542, label %if.end719

for.body542:                                      ; preds = %land.lhs.true533, %for.inc717
  %indvars.iv1247 = phi i64 [ %indvars.iv.next1248, %for.inc717 ], [ 52, %land.lhs.true533 ]
  %arrayidx545 = getelementptr inbounds [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv1247
  %117 = load i32* %arrayidx545, align 4, !tbaa !1
  %idxprom546 = sext i32 %117 to i64
  %arrayidx547 = getelementptr inbounds [53 x i32]* @local_reg_n_refs, i64 0, i64 %idxprom546
  %118 = load i32* %arrayidx547, align 4, !tbaa !1
  %cmp548 = icmp eq i32 %118, 0
  br i1 %cmp548, label %for.inc717, label %land.lhs.true550

land.lhs.true550:                                 ; preds = %for.body542
  %sh_prom551 = zext i32 %117 to i64
  %shl552 = shl i64 1, %sh_prom551
  %and553 = and i64 %shl552, %or22
  %tobool554 = icmp eq i64 %and553, 0
  br i1 %tobool554, label %land.lhs.true555, label %for.inc717

land.lhs.true555:                                 ; preds = %land.lhs.true550
  %call556 = tail call i32 @ix86_hard_regno_mode_ok(i32 %117, i32 %bf.clear) #3
  %tobool557 = icmp eq i32 %call556, 0
  br i1 %tobool557, label %for.inc717, label %land.lhs.true558

land.lhs.true558:                                 ; preds = %land.lhs.true555
  %119 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %arrayidx569 = getelementptr inbounds [53 x i32]* @local_reg_freq, i64 0, i64 %idxprom546
  %120 = load i32* %arrayidx569, align 4, !tbaa !1
  %conv570 = sitofp i32 %120 to double
  %arrayidx572 = getelementptr inbounds [53 x i32]* @local_reg_live_length, i64 0, i64 %idxprom546
  %121 = load i32* %arrayidx572, align 4, !tbaa !1
  %conv573 = sitofp i32 %121 to double
  %div574 = fdiv double %conv570, %conv573
  %freq = getelementptr inbounds %struct.allocno* %119, i64 %idxprom, i32 4
  %122 = load i32* %freq, align 4, !tbaa !27
  %conv577 = sitofp i32 %122 to double
  %live_length = getelementptr inbounds %struct.allocno* %119, i64 %idxprom, i32 5
  %123 = load i32* %live_length, align 4, !tbaa !28
  %conv580 = sitofp i32 %123 to double
  %div581 = fdiv double %conv577, %conv580
  %cmp582 = fcmp olt double %div574, %div581
  br i1 %cmp582, label %for.cond585.preheader, label %for.inc717

for.cond585.preheader:                            ; preds = %land.lhs.true558
  %124 = load i32* @max_regno, align 4, !tbaa !1
  %cmp5861201 = icmp sgt i32 %124, 0
  br i1 %cmp5861201, label %for.body588.lr.ph, label %if.end719

for.body588.lr.ph:                                ; preds = %for.cond585.preheader
  %.pre = load i16** @reg_renumber, align 8, !tbaa !5
  br label %for.body588

for.body588:                                      ; preds = %for.body588.lr.ph, %for.inc712
  %indvars.iv1245 = phi i64 [ 0, %for.body588.lr.ph ], [ %indvars.iv.next1246, %for.inc712 ]
  %arrayidx590 = getelementptr inbounds i16* %.pre, i64 %indvars.iv1245
  %125 = load i16* %arrayidx590, align 2, !tbaa !10
  %conv591 = sext i16 %125 to i32
  %cmp592 = icmp sgt i16 %125, -1
  br i1 %cmp592, label %if.then594, label %for.inc712

if.then594:                                       ; preds = %for.body588
  %126 = and i16 %125, -8
  %127 = icmp eq i16 %126, 8
  %.off = add i16 %125, -21
  %128 = icmp ult i16 %.off, 8
  %or.cond1172 = or i1 %127, %128
  %.off1132 = add i16 %125, -45
  %129 = icmp ult i16 %.off1132, 8
  %or.cond1174 = or i1 %or.cond1172, %129
  %.off1133 = add i16 %125, -29
  %130 = icmp ult i16 %.off1133, 8
  %or.cond1176 = or i1 %or.cond1174, %130
  %131 = load %struct.function** @cfun, align 8, !tbaa !5
  %emit623 = getelementptr inbounds %struct.function* %131, i64 0, i32 3
  %132 = load %struct.emit_status** %emit623, align 8, !tbaa !18
  %x_regno_reg_rtx624 = getelementptr inbounds %struct.emit_status* %132, i64 0, i32 12
  %133 = load %struct.rtx_def*** %x_regno_reg_rtx624, align 8, !tbaa !21
  %arrayidx625 = getelementptr inbounds %struct.rtx_def** %133, i64 %indvars.iv1245
  %134 = load %struct.rtx_def** %arrayidx625, align 8, !tbaa !5
  %135 = getelementptr inbounds %struct.rtx_def* %134, i64 0, i32 0
  %bf.load626 = load i32* %135, align 8
  %bf.lshr627 = lshr i32 %bf.load626, 16
  %bf.clear628 = and i32 %bf.lshr627, 255
  br i1 %or.cond1176, label %cond.true621, label %cond.false647

cond.true621:                                     ; preds = %if.then594
  %idxprom6291135 = zext i32 %bf.clear628 to i64
  %arrayidx630 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom6291135
  %136 = load i32* %arrayidx630, align 4, !tbaa !9
  %cmp631 = icmp eq i32 %136, 5
  br i1 %cmp631, label %cond.end699, label %lor.rhs633

lor.rhs633:                                       ; preds = %cond.true621
  %cmp643 = icmp eq i32 %136, 6
  %phitmp1136 = select i1 %cmp643, i32 2, i32 1
  br label %cond.end699

cond.false647:                                    ; preds = %if.then594
  switch i32 %bf.clear628, label %cond.false675 [
    i32 18, label %cond.true657
    i32 24, label %cond.true671
  ]

cond.true657:                                     ; preds = %cond.false647
  %137 = load i32* @target_flags, align 4, !tbaa !1
  %and658 = lshr i32 %137, 25
  %138 = and i32 %and658, 1
  %139 = xor i32 %138, 3
  br label %cond.end699

cond.true671:                                     ; preds = %cond.false647
  %140 = load i32* @target_flags, align 4, !tbaa !1
  %and672 = lshr i32 %140, 24
  %141 = and i32 %and672, 2
  %142 = xor i32 %141, 6
  br label %cond.end699

cond.false675:                                    ; preds = %cond.false647
  %idxprom6831134 = zext i32 %bf.clear628 to i64
  %arrayidx684 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom6831134
  %143 = load i8* %arrayidx684, align 1, !tbaa !9
  %conv685 = zext i8 %143 to i32
  %144 = load i32* @target_flags, align 4, !tbaa !1
  %and686 = lshr i32 %144, 23
  %145 = and i32 %and686, 4
  %146 = add i32 %145, 4
  %add689 = add i32 %conv685, -1
  %sub690 = add i32 %add689, %146
  %div694 = sdiv i32 %sub690, %146
  br label %cond.end699

cond.end699:                                      ; preds = %cond.true621, %lor.rhs633, %cond.true657, %cond.false675, %cond.true671
  %cond700 = phi i32 [ %139, %cond.true657 ], [ %142, %cond.true671 ], [ %div694, %cond.false675 ], [ 2, %cond.true621 ], [ %phitmp1136, %lor.rhs633 ]
  %cmp702 = icmp sge i32 %117, %conv591
  %add701 = add nsw i32 %cond700, %conv591
  %cmp705 = icmp slt i32 %117, %add701
  %or.cond1177 = and i1 %cmp702, %cmp705
  br i1 %or.cond1177, label %if.then707, label %for.inc712

if.then707:                                       ; preds = %cond.end699
  store i16 -1, i16* %arrayidx590, align 2, !tbaa !10
  br label %for.inc712

for.inc712:                                       ; preds = %cond.end699, %for.body588, %if.then707
  %indvars.iv.next1246 = add nuw nsw i64 %indvars.iv1245, 1
  %147 = trunc i64 %indvars.iv.next1246 to i32
  %cmp586 = icmp slt i32 %147, %124
  br i1 %cmp586, label %for.body588, label %if.end719

for.inc717:                                       ; preds = %land.lhs.true555, %land.lhs.true550, %for.body542, %land.lhs.true558
  %indvars.iv.next1248 = add nsw i64 %indvars.iv1247, -1
  %148 = trunc i64 %indvars.iv1247 to i32
  %cmp540 = icmp sgt i32 %148, 0
  br i1 %cmp540, label %for.body542, label %if.end719

if.end719:                                        ; preds = %for.inc717, %for.inc712, %for.cond585.preheader, %if.end528, %land.lhs.true533
  %best_reg.3 = phi i32 [ %best_reg.2, %if.end528 ], [ %best_reg.2, %land.lhs.true533 ], [ %117, %for.cond585.preheader ], [ %117, %for.inc712 ], [ %best_reg.2, %for.inc717 ]
  %cmp720 = icmp sgt i32 %best_reg.3, -1
  br i1 %cmp720, label %if.then722, label %if.end865

if.then722:                                       ; preds = %if.end719
  %conv725 = trunc i32 %best_reg.3 to i16
  %149 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %reg728 = getelementptr inbounds %struct.allocno* %149, i64 %idxprom, i32 0
  %150 = load i32* %reg728, align 4, !tbaa !16
  %idxprom729 = sext i32 %150 to i64
  %151 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx730 = getelementptr inbounds i16* %151, i64 %idxprom729
  store i16 %conv725, i16* %arrayidx730, align 2, !tbaa !10
  %152 = load i32** @reg_may_share, align 8, !tbaa !5
  %arrayidx735 = getelementptr inbounds i32* %152, i64 %idxprom729
  %153 = load i32* %arrayidx735, align 4, !tbaa !1
  %tobool736 = icmp eq i32 %153, 0
  br i1 %tobool736, label %if.end754, label %for.cond738.preheader

for.cond738.preheader:                            ; preds = %if.then722
  %154 = load i32* @max_regno, align 4, !tbaa !1
  %cmp7391199 = icmp sgt i32 %154, 53
  br i1 %cmp7391199, label %for.body741.lr.ph, label %if.end754

for.body741.lr.ph:                                ; preds = %for.cond738.preheader
  %155 = load i32** @reg_allocno, align 8, !tbaa !5
  br label %for.body741

for.body741:                                      ; preds = %for.body741.lr.ph, %for.inc751
  %indvars.iv1243 = phi i64 [ 53, %for.body741.lr.ph ], [ %indvars.iv.next1244, %for.inc751 ]
  %arrayidx743 = getelementptr inbounds i32* %155, i64 %indvars.iv1243
  %156 = load i32* %arrayidx743, align 4, !tbaa !1
  %cmp744 = icmp eq i32 %156, %num
  br i1 %cmp744, label %if.then746, label %for.inc751

if.then746:                                       ; preds = %for.body741
  %arrayidx749 = getelementptr inbounds i16* %151, i64 %indvars.iv1243
  store i16 %conv725, i16* %arrayidx749, align 2, !tbaa !10
  br label %for.inc751

for.inc751:                                       ; preds = %for.body741, %if.then746
  %indvars.iv.next1244 = add nuw nsw i64 %indvars.iv1243, 1
  %157 = trunc i64 %indvars.iv.next1244 to i32
  %cmp739 = icmp slt i32 %157, %154
  br i1 %cmp739, label %for.body741, label %if.end754

if.end754:                                        ; preds = %for.inc751, %for.cond738.preheader, %if.then722
  %158 = and i32 %best_reg.3, -8
  %159 = icmp eq i32 %158, 8
  %best_reg.3.off = add i32 %best_reg.3, -21
  %160 = icmp ult i32 %best_reg.3.off, 8
  %or.cond1179 = or i1 %159, %160
  %best_reg.3.off1128 = add i32 %best_reg.3, -45
  %161 = icmp ult i32 %best_reg.3.off1128, 8
  %or.cond1181 = or i1 %or.cond1179, %161
  %best_reg.3.off1129 = add i32 %best_reg.3, -29
  %162 = icmp ult i32 %best_reg.3.off1129, 8
  %or.cond1183 = or i1 %or.cond1181, %162
  br i1 %or.cond1183, label %cond.true778, label %cond.false790

cond.true778:                                     ; preds = %if.end754
  %163 = load i32* %arrayidx69, align 4, !tbaa !9
  %cmp781 = icmp eq i32 %163, 5
  br i1 %cmp781, label %for.body827.lr.ph, label %lor.rhs783

lor.rhs783:                                       ; preds = %cond.true778
  %cmp786 = icmp eq i32 %163, 6
  %phitmp = select i1 %cmp786, i32 2, i32 1
  br label %for.body827.lr.ph

cond.false790:                                    ; preds = %if.end754
  switch i32 %bf.clear, label %cond.end821 [
    i32 18, label %cond.true793
    i32 24, label %cond.true800
  ]

cond.true793:                                     ; preds = %cond.false790
  %164 = load i32* @target_flags, align 4, !tbaa !1
  %and794 = lshr i32 %164, 25
  %165 = and i32 %and794, 1
  %166 = xor i32 %165, 3
  br label %for.body827.lr.ph

cond.true800:                                     ; preds = %cond.false790
  %167 = load i32* @target_flags, align 4, !tbaa !1
  %and801 = lshr i32 %167, 24
  %168 = and i32 %and801, 2
  %169 = xor i32 %168, 6
  br label %for.body827.lr.ph

cond.end821:                                      ; preds = %cond.false790
  %170 = load i8* %arrayidx89, align 1, !tbaa !9
  %conv807 = zext i8 %170 to i32
  %171 = load i32* @target_flags, align 4, !tbaa !1
  %and808 = lshr i32 %171, 23
  %172 = and i32 %and808, 4
  %173 = add i32 %172, 4
  %add811 = add i32 %conv807, -1
  %sub812 = add i32 %add811, %173
  %div816 = sdiv i32 %sub812, %173
  %cmp8251195 = icmp sgt i32 %div816, 0
  br i1 %cmp8251195, label %for.body827.lr.ph, label %for.end840

for.body827.lr.ph:                                ; preds = %lor.rhs783, %cond.true778, %cond.true800, %cond.true793, %cond.end821
  %cond822.ph.pn = phi i32 [ %div816, %cond.end821 ], [ %166, %cond.true793 ], [ %169, %cond.true800 ], [ 2, %cond.true778 ], [ %phitmp, %lor.rhs783 ]
  %add8231278 = add i32 %cond822.ph.pn, %best_reg.3
  %regs_used_so_far.promoted = load i64* @regs_used_so_far, align 8, !tbaa !7
  %174 = sext i32 %best_reg.3 to i64
  %scevgep = getelementptr [53 x i32]* @local_reg_n_refs, i64 0, i64 %174
  %scevgep1239 = bitcast i32* %scevgep to i8*
  %175 = add i32 %best_reg.3, 1
  %176 = icmp sgt i32 %add8231278, %175
  %smax = select i1 %176, i32 %add8231278, i32 %175
  %177 = add i32 %smax, -1
  %178 = sub i32 %177, %best_reg.3
  %179 = zext i32 %178 to i64
  %180 = shl nuw nsw i64 %179, 2
  %181 = add i64 %180, 4
  call void @llvm.memset.p0i8.i64(i8* %scevgep1239, i8 0, i64 %181, i32 4, i1 false)
  %scevgep1240 = getelementptr [53 x i32]* @local_reg_freq, i64 0, i64 %174
  %scevgep12401241 = bitcast i32* %scevgep1240 to i8*
  call void @llvm.memset.p0i8.i64(i8* %scevgep12401241, i8 0, i64 %181, i32 4, i1 false)
  br label %for.body827

for.body827:                                      ; preds = %for.body827.lr.ph, %for.body827
  %indvars.iv1237 = phi i64 [ %174, %for.body827.lr.ph ], [ %indvars.iv.next1238, %for.body827 ]
  %or8331198 = phi i64 [ %regs_used_so_far.promoted, %for.body827.lr.ph ], [ %or833, %for.body827 ]
  %this_reg.01197 = phi i64 [ 0, %for.body827.lr.ph ], [ %or830, %for.body827 ]
  %sh_prom828 = and i64 %indvars.iv1237, 4294967295
  %shl829 = shl i64 1, %sh_prom828
  %or830 = or i64 %shl829, %this_reg.01197
  %or833 = or i64 %or8331198, %shl829
  %indvars.iv.next1238 = add nsw i64 %indvars.iv1237, 1
  %182 = trunc i64 %indvars.iv.next1238 to i32
  %cmp825 = icmp slt i32 %182, %add8231278
  br i1 %cmp825, label %for.body827, label %for.cond824.for.end840_crit_edge

for.cond824.for.end840_crit_edge:                 ; preds = %for.body827
  store i64 %or833, i64* @regs_used_so_far, align 8, !tbaa !7
  br label %for.end840

for.end840:                                       ; preds = %for.cond824.for.end840_crit_edge, %cond.end821
  %this_reg.0.lcssa = phi i64 [ %or830, %for.cond824.for.end840_crit_edge ], [ 0, %cond.end821 ]
  %183 = load i32* @allocno_row_words, align 4, !tbaa !1
  %cmp8441191 = icmp sgt i32 %183, 0
  br i1 %cmp8441191, label %for.body846.lr.ph, label %if.end865

for.body846.lr.ph:                                ; preds = %for.end840
  %mul841 = mul nsw i32 %183, %num
  %idx.ext = sext i32 %mul841 to i64
  %184 = load i64** @conflicts, align 8, !tbaa !5
  %add.ptr = getelementptr inbounds i64* %184, i64 %idx.ext
  br label %for.body846

for.body846:                                      ; preds = %for.body846.lr.ph, %for.inc861
  %indvars.iv = phi i64 [ 0, %for.body846.lr.ph ], [ %indvars.iv.next, %for.inc861 ]
  %i_.01194.in = phi i32 [ %183, %for.body846.lr.ph ], [ %i_.01194, %for.inc861 ]
  %p_.01193 = phi i64* [ %add.ptr, %for.body846.lr.ph ], [ %incdec.ptr, %for.inc861 ]
  %i_.01194 = add nsw i32 %i_.01194.in, -1
  %incdec.ptr = getelementptr inbounds i64* %p_.01193, i64 1
  %185 = load i64* %p_.01193, align 8, !tbaa !7
  %tobool8481187 = icmp eq i64 %185, 0
  br i1 %tobool8481187, label %for.inc861, label %for.body849

for.body849:                                      ; preds = %for.body846, %for.inc858
  %indvars.iv1234 = phi i64 [ %indvars.iv.next1235, %for.inc858 ], [ %indvars.iv, %for.body846 ]
  %word_.01189 = phi i64 [ %shr, %for.inc858 ], [ %185, %for.body846 ]
  %and850 = and i64 %word_.01189, 1
  %tobool851 = icmp eq i64 %and850, 0
  br i1 %tobool851, label %for.inc858, label %if.then852

if.then852:                                       ; preds = %for.body849
  %hard_reg_conflicts855 = getelementptr inbounds %struct.allocno* %149, i64 %indvars.iv1234, i32 6
  %186 = load i64* %hard_reg_conflicts855, align 8, !tbaa !36
  %or856 = or i64 %186, %this_reg.0.lcssa
  store i64 %or856, i64* %hard_reg_conflicts855, align 8, !tbaa !36
  br label %for.inc858

for.inc858:                                       ; preds = %for.body849, %if.then852
  %shr = lshr i64 %word_.01189, 1
  %tobool848 = icmp eq i64 %shr, 0
  %indvars.iv.next1235 = add nuw nsw i64 %indvars.iv1234, 1
  br i1 %tobool848, label %for.inc861, label %for.body849

for.inc861:                                       ; preds = %for.inc858, %for.body846
  %cmp844 = icmp sgt i32 %i_.01194, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 64
  br i1 %cmp844, label %for.body846, label %if.end865

if.end865:                                        ; preds = %for.inc861, %for.end840, %if.then525, %if.end719
  ret void
}

declare i32 @reg_alternate_class(i32) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #4

; Function Attrs: nounwind uwtable
define void @build_insn_chain(%struct.rtx_def* %first) #0 {
entry:
  %live_relevant_regs_head = alloca %struct.bitmap_head_def, align 8
  %call = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %live_relevant_regs_head) #3
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %if.end161, %entry
  %b.0 = phi i32 [ 0, %entry ], [ %inc169.b.0, %if.end161 ]
  %prev.0 = phi %struct.insn_chain* [ null, %entry ], [ %prev.1, %if.end161 ]
  %p.0 = phi %struct.insn_chain** [ @reload_insn_chain, %entry ], [ %p.1, %if.end161 ]
  %first.addr.0 = phi %struct.rtx_def* [ %first, %entry ], [ %35, %if.end161 ]
  %tobool = icmp eq %struct.rtx_def* %first.addr.0, null
  br i1 %tobool, label %do.body233, label %for.body

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %b.0 to i64
  %0 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom
  %1 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 0
  %2 = load %struct.rtx_def** %head, align 8, !tbaa !46
  %cmp = icmp eq %struct.rtx_def* %first.addr.0, %2
  br i1 %cmp, label %if.then, label %if.end54

if.then:                                          ; preds = %for.body
  %3 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  call void @bitmap_clear(%struct.bitmap_head_def* %3) #3
  %4 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data2 = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 4
  %bb3 = bitcast %union.varray_data_tag* %data2 to [1 x %struct.basic_block_def*]*
  %arrayidx4 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb3, i64 0, i64 %idxprom
  %5 = load %struct.basic_block_def** %arrayidx4, align 8, !tbaa !5
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %5, i64 0, i32 8
  %6 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !29
  %first5 = getelementptr inbounds %struct.bitmap_head_def* %6, i64 0, i32 0
  %ptr_.1313 = load %struct.bitmap_element_def** %first5, align 8
  %cmp13314 = icmp eq %struct.bitmap_element_def* %ptr_.1313, null
  br i1 %cmp13314, label %if.end54, label %for.cond15.preheader

for.cond15.preheader:                             ; preds = %if.then, %if.end47.1
  %ptr_.1315 = phi %struct.bitmap_element_def* [ %ptr_.1, %if.end47.1 ], [ %ptr_.1313, %if.then ]
  %indx28 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1315, i64 0, i32 2
  %arrayidx19 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1315, i64 0, i32 3, i64 0
  %7 = load i64* %arrayidx19, align 8, !tbaa !7
  %cmp20 = icmp eq i64 %7, 0
  br i1 %cmp20, label %if.end47, label %for.body24

for.body24:                                       ; preds = %for.cond15.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond15.preheader ]
  %word_.0 = phi i64 [ %word_.1, %for.inc ], [ %7, %for.cond15.preheader ]
  %shl = shl i64 1, %indvars.iv
  %and = and i64 %shl, %word_.0
  %cmp25 = icmp eq i64 %and, 0
  br i1 %cmp25, label %for.inc, label %if.then26

if.then26:                                        ; preds = %for.body24
  %neg = xor i64 %shl, -1
  %and27 = and i64 %word_.0, %neg
  %8 = load i32* %indx28, align 4, !tbaa !33
  %mul = shl i32 %8, 7
  %9 = trunc i64 %indvars.iv to i32
  %add30 = add i32 %9, %mul
  %cmp31 = icmp slt i32 %add30, 53
  br i1 %cmp31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then26
  %10 = load i64* @eliminable_regset, align 8, !tbaa !7
  %sh_prom32 = zext i32 %add30 to i64
  %shl33 = shl i64 1, %sh_prom32
  %and34 = and i64 %10, %shl33
  %tobool35 = icmp eq i64 %and34, 0
  br i1 %tobool35, label %if.then40, label %if.end41

cond.false:                                       ; preds = %if.then26
  %idxprom36 = sext i32 %add30 to i64
  %11 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx37 = getelementptr inbounds i16* %11, i64 %idxprom36
  %12 = load i16* %arrayidx37, align 2, !tbaa !10
  %cmp38 = icmp sgt i16 %12, -1
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %cond.true, %cond.false
  %13 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  call void @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %add30) #3
  br label %if.end41

if.end41:                                         ; preds = %cond.true, %if.then40, %cond.false
  %cmp42 = icmp eq i64 %and27, 0
  br i1 %cmp42, label %if.end47, label %for.inc

for.inc:                                          ; preds = %for.body24, %if.end41
  %word_.1 = phi i64 [ %and27, %if.end41 ], [ %word_.0, %for.body24 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %14 = trunc i64 %indvars.iv.next to i32
  %cmp23.old = icmp ult i32 %14, 64
  br i1 %cmp23.old, label %for.body24, label %if.end47

if.end47:                                         ; preds = %for.inc, %if.end41, %for.cond15.preheader
  %arrayidx19.1 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1315, i64 0, i32 3, i64 1
  %15 = load i64* %arrayidx19.1, align 8, !tbaa !7
  %cmp20.1 = icmp eq i64 %15, 0
  br i1 %cmp20.1, label %if.end47.1, label %for.body24.1

if.end54:                                         ; preds = %if.end47.1, %if.then, %for.body
  %16 = getelementptr inbounds %struct.rtx_def* %first.addr.0, i64 0, i32 0
  %bf.load = load i32* %16, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.then62 [
    i32 37, label %if.end161
    i32 35, label %if.end161
  ]

if.then62:                                        ; preds = %if.end54
  %call63 = call %struct.insn_chain* @new_insn_chain() #3
  %prev64 = getelementptr inbounds %struct.insn_chain* %call63, i64 0, i32 1
  store %struct.insn_chain* %prev.0, %struct.insn_chain** %prev64, align 8, !tbaa !47
  store %struct.insn_chain* %call63, %struct.insn_chain** %p.0, align 8, !tbaa !5
  %next65 = getelementptr inbounds %struct.insn_chain* %call63, i64 0, i32 0
  %insn = getelementptr inbounds %struct.insn_chain* %call63, i64 0, i32 4
  store %struct.rtx_def* %first.addr.0, %struct.rtx_def** %insn, align 8, !tbaa !50
  %block = getelementptr inbounds %struct.insn_chain* %call63, i64 0, i32 3
  store i32 %b.0, i32* %block, align 4, !tbaa !51
  %bf.load66 = load i32* %16, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %idxprom68306 = zext i32 %bf.clear67 to i64
  %arrayidx69 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom68306
  %17 = load i8* %arrayidx69, align 1, !tbaa !9
  %cmp71 = icmp eq i8 %17, 105
  br i1 %cmp71, label %if.then73, label %if.else

if.then73:                                        ; preds = %if.then62
  %arrayidx74 = getelementptr inbounds %struct.rtx_def* %first.addr.0, i64 0, i32 1, i64 6
  %link.0.in316 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %link.0317 = load %struct.rtx_def** %link.0.in316, align 8
  %tobool76318 = icmp eq %struct.rtx_def* %link.0317, null
  br i1 %tobool76318, label %for.end107, label %for.body77

for.body77:                                       ; preds = %if.then73, %for.inc103
  %link.0319 = phi %struct.rtx_def* [ %link.0, %for.inc103 ], [ %link.0317, %if.then73 ]
  %18 = getelementptr inbounds %struct.rtx_def* %link.0319, i64 0, i32 0
  %bf.load78 = load i32* %18, align 8
  %bf.clear79 = and i32 %bf.load78, 16711680
  %cmp80 = icmp eq i32 %bf.clear79, 65536
  br i1 %cmp80, label %land.lhs.true82, label %for.inc103

land.lhs.true82:                                  ; preds = %for.body77
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %link.0319, i64 0, i32 1, i64 0
  %rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx85, align 8, !tbaa !5
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load86 = load i32* %20, align 8
  %bf.clear87 = and i32 %bf.load86, 65535
  %cmp88 = icmp eq i32 %bf.clear87, 61
  br i1 %cmp88, label %if.then90, label %for.inc103

if.then90:                                        ; preds = %land.lhs.true82
  %arrayidx95 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx95 to i32*
  %21 = load i32* %rtuint, align 4, !tbaa !1
  %bf.lshr100 = lshr i32 %bf.load86, 16
  %bf.clear101 = and i32 %bf.lshr100, 255
  call fastcc void @reg_dies(i32 %21, i32 %bf.clear101, %struct.insn_chain* %call63)
  br label %for.inc103

for.inc103:                                       ; preds = %for.body77, %land.lhs.true82, %if.then90
  %arrayidx105 = getelementptr inbounds %struct.rtx_def* %link.0319, i64 0, i32 1, i64 1
  %link.0.in = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**
  %link.0 = load %struct.rtx_def** %link.0.in, align 8
  %tobool76 = icmp eq %struct.rtx_def* %link.0, null
  br i1 %tobool76, label %for.end107, label %for.body77

for.end107:                                       ; preds = %for.inc103, %if.then73
  %live_throughout = getelementptr inbounds %struct.insn_chain* %call63, i64 0, i32 5
  %22 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  call void @bitmap_copy(%struct.bitmap_head_def* %live_throughout, %struct.bitmap_head_def* %22) #3
  %arrayidx109 = getelementptr inbounds %struct.rtx_def* %first.addr.0, i64 0, i32 1, i64 3
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx110, align 8, !tbaa !5
  %dead_or_set = getelementptr inbounds %struct.insn_chain* %call63, i64 0, i32 6
  %24 = bitcast %struct.bitmap_head_def* %dead_or_set to i8*
  call void @note_stores(%struct.rtx_def* %23, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @reg_becomes_live, i8* %24) #3
  br label %if.end112

if.else:                                          ; preds = %if.then62
  %live_throughout111 = getelementptr inbounds %struct.insn_chain* %call63, i64 0, i32 5
  %25 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  call void @bitmap_copy(%struct.bitmap_head_def* %live_throughout111, %struct.bitmap_head_def* %25) #3
  br label %if.end112

if.end112:                                        ; preds = %if.else, %for.end107
  %bf.load113 = load i32* %16, align 8
  %bf.clear114 = and i32 %bf.load113, 65535
  %idxprom115307 = zext i32 %bf.clear114 to i64
  %arrayidx116 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom115307
  %26 = load i8* %arrayidx116, align 1, !tbaa !9
  %cmp118 = icmp eq i8 %26, 105
  br i1 %cmp118, label %if.then120, label %if.end161

if.then120:                                       ; preds = %if.end112
  %arrayidx123 = getelementptr inbounds %struct.rtx_def* %first.addr.0, i64 0, i32 1, i64 6
  %link121.0.in320 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %link121.0321 = load %struct.rtx_def** %link121.0.in320, align 8
  %tobool126322 = icmp eq %struct.rtx_def* %link121.0321, null
  br i1 %tobool126322, label %if.end161, label %for.body127

for.body127:                                      ; preds = %if.then120, %for.inc155
  %link121.0323 = phi %struct.rtx_def* [ %link121.0, %for.inc155 ], [ %link121.0321, %if.then120 ]
  %27 = getelementptr inbounds %struct.rtx_def* %link121.0323, i64 0, i32 0
  %bf.load128 = load i32* %27, align 8
  %bf.clear130 = and i32 %bf.load128, 16711680
  %cmp131 = icmp eq i32 %bf.clear130, 655360
  br i1 %cmp131, label %land.lhs.true133, label %for.inc155

land.lhs.true133:                                 ; preds = %for.body127
  %arrayidx135 = getelementptr inbounds %struct.rtx_def* %link121.0323, i64 0, i32 1, i64 0
  %rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx136, align 8, !tbaa !5
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load137 = load i32* %29, align 8
  %bf.clear138 = and i32 %bf.load137, 65535
  %cmp139 = icmp eq i32 %bf.clear138, 61
  br i1 %cmp139, label %if.then141, label %for.inc155

if.then141:                                       ; preds = %land.lhs.true133
  %arrayidx146 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtuint147 = bitcast %union.rtunion_def* %arrayidx146 to i32*
  %30 = load i32* %rtuint147, align 4, !tbaa !1
  %bf.lshr152 = lshr i32 %bf.load137, 16
  %bf.clear153 = and i32 %bf.lshr152, 255
  call fastcc void @reg_dies(i32 %30, i32 %bf.clear153, %struct.insn_chain* %call63)
  br label %for.inc155

for.inc155:                                       ; preds = %for.body127, %land.lhs.true133, %if.then141
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %link121.0323, i64 0, i32 1, i64 1
  %link121.0.in = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %link121.0 = load %struct.rtx_def** %link121.0.in, align 8
  %tobool126 = icmp eq %struct.rtx_def* %link121.0, null
  br i1 %tobool126, label %if.end161, label %for.body127

if.end161:                                        ; preds = %for.inc155, %if.then120, %if.end54, %if.end54, %if.end112
  %prev.1 = phi %struct.insn_chain* [ %call63, %if.end112 ], [ %prev.0, %if.end54 ], [ %prev.0, %if.end54 ], [ %call63, %if.then120 ], [ %call63, %for.inc155 ]
  %p.1 = phi %struct.insn_chain** [ %next65, %if.end112 ], [ %p.0, %if.end54 ], [ %p.0, %if.end54 ], [ %next65, %if.then120 ], [ %next65, %for.inc155 ]
  %31 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data163 = getelementptr inbounds %struct.varray_head_tag* %31, i64 0, i32 4
  %bb164 = bitcast %union.varray_data_tag* %data163 to [1 x %struct.basic_block_def*]*
  %arrayidx165 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb164, i64 0, i64 %idxprom
  %32 = load %struct.basic_block_def** %arrayidx165, align 8, !tbaa !5
  %end = getelementptr inbounds %struct.basic_block_def* %32, i64 0, i32 1
  %33 = load %struct.rtx_def** %end, align 8, !tbaa !41
  %cmp166 = icmp eq %struct.rtx_def* %first.addr.0, %33
  %inc169 = zext i1 %cmp166 to i32
  %inc169.b.0 = add nsw i32 %inc169, %b.0
  %34 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp171 = icmp eq i32 %inc169.b.0, %34
  %arrayidx175 = getelementptr inbounds %struct.rtx_def* %first.addr.0, i64 0, i32 1, i64 2
  %rtx176 = bitcast %union.rtunion_def* %arrayidx175 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx176, align 8, !tbaa !5
  br i1 %cmp171, label %for.cond177.preheader, label %for.cond

for.cond177.preheader:                            ; preds = %if.end161
  %tobool178310 = icmp eq %struct.rtx_def* %35, null
  br i1 %tobool178310, label %do.body233, label %for.body179

for.body179:                                      ; preds = %for.cond177.preheader, %for.inc222
  %first.addr.1311 = phi %struct.rtx_def* [ %41, %for.inc222 ], [ %35, %for.cond177.preheader ]
  %36 = getelementptr inbounds %struct.rtx_def* %first.addr.1311, i64 0, i32 0
  %bf.load180 = load i32* %36, align 8
  %bf.clear181 = and i32 %bf.load180, 65535
  %idxprom182305 = zext i32 %bf.clear181 to i64
  %arrayidx183 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom182305
  %37 = load i8* %arrayidx183, align 1, !tbaa !9
  %cmp185 = icmp eq i8 %37, 105
  br i1 %cmp185, label %land.lhs.true187, label %for.inc222

land.lhs.true187:                                 ; preds = %for.body179
  %arrayidx189 = getelementptr inbounds %struct.rtx_def* %first.addr.1311, i64 0, i32 1, i64 3
  %rtx190 = bitcast %union.rtunion_def* %arrayidx189 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx190, align 8, !tbaa !5
  %39 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load191 = load i32* %39, align 8
  %bf.clear192 = and i32 %bf.load191, 65535
  switch i32 %bf.clear192, label %if.then220 [
    i32 48, label %for.inc222
    i32 44, label %land.lhs.true210
    i32 45, label %land.lhs.true210
  ]

land.lhs.true210:                                 ; preds = %land.lhs.true187, %land.lhs.true187
  %call211 = call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %first.addr.1311) #3
  %cmp212 = icmp eq %struct.rtx_def* %call211, null
  br i1 %cmp212, label %if.then220, label %land.lhs.true214

land.lhs.true214:                                 ; preds = %land.lhs.true210
  %call215 = call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %first.addr.1311) #3
  %40 = getelementptr inbounds %struct.rtx_def* %call215, i64 0, i32 0
  %bf.load216 = load i32* %40, align 8
  %bf.clear217 = and i32 %bf.load216, 65535
  %cmp218 = icmp eq i32 %bf.clear217, 33
  br i1 %cmp218, label %for.inc222, label %if.then220

if.then220:                                       ; preds = %land.lhs.true187, %land.lhs.true210, %land.lhs.true214
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1898, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.build_insn_chain, i64 0, i64 0)) #5
  unreachable

for.inc222:                                       ; preds = %land.lhs.true187, %for.body179, %land.lhs.true214
  %arrayidx224 = getelementptr inbounds %struct.rtx_def* %first.addr.1311, i64 0, i32 1, i64 2
  %rtx225 = bitcast %union.rtunion_def* %arrayidx224 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx225, align 8, !tbaa !5
  %tobool178 = icmp eq %struct.rtx_def* %41, null
  br i1 %tobool178, label %do.body233, label %for.body179

do.body233:                                       ; preds = %for.cond, %for.inc222, %for.cond177.preheader
  %p.2 = phi %struct.insn_chain** [ %p.1, %for.cond177.preheader ], [ %p.1, %for.inc222 ], [ %p.0, %for.cond ]
  %42 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  %tobool234 = icmp eq %struct.bitmap_head_def* %42, null
  br i1 %tobool234, label %do.end237, label %if.then235

if.then235:                                       ; preds = %do.body233
  call void @bitmap_clear(%struct.bitmap_head_def* %42) #3
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  br label %do.end237

do.end237:                                        ; preds = %do.body233, %if.then235
  store %struct.insn_chain* null, %struct.insn_chain** %p.2, align 8, !tbaa !5
  ret void

for.body24.1:                                     ; preds = %if.end47, %for.inc.1
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc.1 ], [ 0, %if.end47 ]
  %word_.0.1 = phi i64 [ %word_.1.1, %for.inc.1 ], [ %15, %if.end47 ]
  %shl.1 = shl i64 1, %indvars.iv.1
  %and.1 = and i64 %shl.1, %word_.0.1
  %cmp25.1 = icmp eq i64 %and.1, 0
  br i1 %cmp25.1, label %for.inc.1, label %if.then26.1

if.then26.1:                                      ; preds = %for.body24.1
  %neg.1 = xor i64 %shl.1, -1
  %and27.1 = and i64 %word_.0.1, %neg.1
  %43 = load i32* %indx28, align 4, !tbaa !33
  %mul.1 = shl i32 %43, 7
  %44 = add i64 %indvars.iv.1, 64
  %45 = trunc i64 %44 to i32
  %add30.1 = add i32 %45, %mul.1
  %cmp31.1 = icmp slt i32 %add30.1, 53
  br i1 %cmp31.1, label %cond.true.1, label %cond.false.1

cond.false.1:                                     ; preds = %if.then26.1
  %idxprom36.1 = sext i32 %add30.1 to i64
  %46 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx37.1 = getelementptr inbounds i16* %46, i64 %idxprom36.1
  %47 = load i16* %arrayidx37.1, align 2, !tbaa !10
  %cmp38.1 = icmp sgt i16 %47, -1
  br i1 %cmp38.1, label %if.then40.1, label %if.end41.1

cond.true.1:                                      ; preds = %if.then26.1
  %48 = load i64* @eliminable_regset, align 8, !tbaa !7
  %sh_prom32.1 = zext i32 %add30.1 to i64
  %shl33.1 = shl i64 1, %sh_prom32.1
  %and34.1 = and i64 %48, %shl33.1
  %tobool35.1 = icmp eq i64 %and34.1, 0
  br i1 %tobool35.1, label %if.then40.1, label %if.end41.1

if.then40.1:                                      ; preds = %cond.true.1, %cond.false.1
  %49 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  call void @bitmap_set_bit(%struct.bitmap_head_def* %49, i32 %add30.1) #3
  br label %if.end41.1

if.end41.1:                                       ; preds = %if.then40.1, %cond.true.1, %cond.false.1
  %cmp42.1 = icmp eq i64 %and27.1, 0
  br i1 %cmp42.1, label %if.end47.1, label %for.inc.1

for.inc.1:                                        ; preds = %if.end41.1, %for.body24.1
  %word_.1.1 = phi i64 [ %and27.1, %if.end41.1 ], [ %word_.0.1, %for.body24.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %50 = trunc i64 %indvars.iv.next.1 to i32
  %cmp23.old.1 = icmp ult i32 %50, 64
  br i1 %cmp23.old.1, label %for.body24.1, label %if.end47.1

if.end47.1:                                       ; preds = %if.end41.1, %for.inc.1, %if.end47
  %next52 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1315, i64 0, i32 0
  %ptr_.1 = load %struct.bitmap_element_def** %next52, align 8
  %cmp13 = icmp eq %struct.bitmap_element_def* %ptr_.1, null
  br i1 %cmp13, label %if.end54, label %for.cond15.preheader
}

declare %struct.rtx_def* @get_insns() #1

declare i32 @reload(%struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define void @retry_global_alloc(i32 %regno, i64 %forbidden_regs) #0 {
entry:
  %idxprom = sext i32 %regno to i64
  %0 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds i32* %0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4, !tbaa !1
  %cmp = icmp sgt i32 %1, -1
  br i1 %cmp, label %if.then, label %if.end21

if.then:                                          ; preds = %entry
  tail call fastcc void @find_reg(i32 %1, i64 %forbidden_regs, i32 0, i32 0, i32 1)
  %2 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx2 = getelementptr inbounds i16* %2, i64 %idxprom
  %3 = load i16* %arrayidx2, align 2, !tbaa !10
  %cmp3 = icmp slt i16 %3, 0
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %call = tail call i32 @reg_alternate_class(i32 %regno) #3
  %cmp5 = icmp eq i32 %call, 0
  br i1 %cmp5, label %if.end, label %if.then7

if.then7:                                         ; preds = %land.lhs.true
  tail call fastcc void @find_reg(i32 %1, i64 %forbidden_regs, i32 1, i32 0, i32 1)
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.then7, %if.then
  %4 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx9 = getelementptr inbounds i16* %4, i64 %idxprom
  %5 = load i16* %arrayidx9, align 2, !tbaa !10
  %cmp11 = icmp sgt i16 %5, -1
  br i1 %cmp11, label %if.then13, label %if.end21

if.then13:                                        ; preds = %if.end
  %conv10 = sext i16 %5 to i32
  %6 = load %struct.function** @cfun, align 8, !tbaa !5
  %emit = getelementptr inbounds %struct.function* %6, i64 0, i32 3
  %7 = load %struct.emit_status** %emit, align 8, !tbaa !18
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %7, i64 0, i32 12
  %8 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !21
  %arrayidx18 = getelementptr inbounds %struct.rtx_def** %8, i64 %idxprom
  %9 = load %struct.rtx_def** %arrayidx18, align 8, !tbaa !5
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx19 to i32*
  store i32 %conv10, i32* %rtuint, align 4, !tbaa !1
  tail call void @mark_home_live(i32 %regno) #3
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then13, %entry
  ret void
}

declare void @mark_home_live(i32) #1

; Function Attrs: nounwind uwtable
define void @mark_elimination(i32 %from, i32 %to) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp6 = icmp sgt i32 %0, 0
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]
  %1 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %indvars.iv
  %2 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !5
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 8
  %3 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !29
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %3, i32 %from) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  tail call void @bitmap_clear_bit(%struct.bitmap_head_def* %3, i32 %from) #3
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 %to) #3
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %4 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %5 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %5, %4
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

declare i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #1

declare void @bitmap_clear_bit(%struct.bitmap_head_def*, i32) #1

declare void @bitmap_set_bit(%struct.bitmap_head_def*, i32) #1

declare %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def*) #1

declare void @bitmap_clear(%struct.bitmap_head_def*) #1

declare %struct.insn_chain* @new_insn_chain() #1

; Function Attrs: nounwind uwtable
define internal fastcc void @reg_dies(i32 %regno, i32 %mode, %struct.insn_chain* %chain) #0 {
entry:
  %cmp = icmp slt i32 %regno, 53
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = and i32 %regno, -8
  %1 = icmp eq i32 %0, 8
  %regno.off = add i32 %regno, -21
  %2 = icmp ult i32 %regno.off, 8
  %or.cond = or i1 %1, %2
  %regno.off79 = add i32 %regno, -45
  %3 = icmp ult i32 %regno.off79, 8
  %or.cond83 = or i1 %or.cond, %3
  %regno.off80 = add i32 %regno, -29
  %4 = icmp ult i32 %regno.off80, 8
  %or.cond85 = or i1 %or.cond83, %4
  br i1 %or.cond85, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %5 = load i32* %arrayidx, align 4, !tbaa !9
  %cmp14 = icmp eq i32 %5, 5
  br i1 %cmp14, label %while.body.lr.ph, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp17 = icmp eq i32 %5, 6
  %phitmp = select i1 %cmp17, i32 2, i32 1
  br label %while.body.lr.ph

cond.false:                                       ; preds = %if.then
  switch i32 %mode, label %while.cond.preheader [
    i32 18, label %cond.true19
    i32 24, label %cond.true23
  ]

cond.true19:                                      ; preds = %cond.false
  %6 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %6, 25
  %7 = and i32 %and, 1
  %8 = xor i32 %7, 3
  br label %while.body.lr.ph

cond.true23:                                      ; preds = %cond.false
  %9 = load i32* @target_flags, align 4, !tbaa !1
  %and24 = lshr i32 %9, 24
  %10 = and i32 %and24, 2
  %11 = xor i32 %10, 6
  br label %while.body.lr.ph

while.cond.preheader:                             ; preds = %cond.false
  %idxprom28 = sext i32 %mode to i64
  %arrayidx29 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom28
  %12 = load i8* %arrayidx29, align 1, !tbaa !9
  %conv = zext i8 %12 to i32
  %13 = load i32* @target_flags, align 4, !tbaa !1
  %and30 = lshr i32 %13, 23
  %14 = and i32 %and30, 4
  %15 = add i32 %14, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %15
  %div = sdiv i32 %sub, %15
  %cmp4187 = icmp sgt i32 %div, 0
  br i1 %cmp4187, label %while.body.lr.ph, label %if.end55

while.body.lr.ph:                                 ; preds = %cond.true, %lor.rhs, %cond.true19, %cond.true23, %while.cond.preheader
  %nregs.0.ph91 = phi i32 [ %div, %while.cond.preheader ], [ %11, %cond.true23 ], [ %8, %cond.true19 ], [ %phitmp, %lor.rhs ], [ 2, %cond.true ]
  %dead_or_set = getelementptr inbounds %struct.insn_chain* %chain, i64 0, i32 6
  %16 = sext i32 %regno to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ %16, %while.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %dec89.in = phi i32 [ %nregs.0.ph91, %while.body.lr.ph ], [ %dec89, %if.end ]
  %dec89 = add nsw i32 %dec89.in, -1
  %17 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  %18 = trunc i64 %indvars.iv to i32
  tail call void @bitmap_clear_bit(%struct.bitmap_head_def* %17, i32 %18) #3
  %arrayidx44 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv
  %19 = load i8* %arrayidx44, align 1, !tbaa !9
  %tobool45 = icmp eq i8 %19, 0
  br i1 %tobool45, label %if.then46, label %if.end

if.then46:                                        ; preds = %while.body
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %dead_or_set, i32 %18) #3
  br label %if.end

if.end:                                           ; preds = %while.body, %if.then46
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp41 = icmp sgt i32 %dec89, 0
  br i1 %cmp41, label %while.body, label %if.end55

if.else:                                          ; preds = %entry
  %20 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  tail call void @bitmap_clear_bit(%struct.bitmap_head_def* %20, i32 %regno) #3
  %idxprom47 = sext i32 %regno to i64
  %21 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx48 = getelementptr inbounds i16* %21, i64 %idxprom47
  %22 = load i16* %arrayidx48, align 2, !tbaa !10
  %cmp50 = icmp sgt i16 %22, -1
  br i1 %cmp50, label %if.then52, label %if.end55

if.then52:                                        ; preds = %if.else
  %dead_or_set53 = getelementptr inbounds %struct.insn_chain* %chain, i64 0, i32 6
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %dead_or_set53, i32 %regno) #3
  br label %if.end55

if.end55:                                         ; preds = %if.end, %while.cond.preheader, %if.else, %if.then52
  ret void
}

declare void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #1

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @reg_becomes_live(%struct.rtx_def* nocapture readonly %reg, %struct.rtx_def* nocapture readnone %setter, i8* %regs_set) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ]
  %reg.addr.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %reg, %entry ]
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %if.end5, label %if.end79

if.end5:                                          ; preds = %if.end
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !1
  %cmp8 = icmp slt i32 %2, 53
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end5
  %3 = and i32 %2, -8
  %4 = icmp eq i32 %3, 8
  %.off = add i32 %2, -21
  %5 = icmp ult i32 %.off, 8
  %or.cond = or i1 %4, %5
  %.off106 = add i32 %2, -45
  %6 = icmp ult i32 %.off106, 8
  %or.cond112 = or i1 %or.cond, %6
  %.off107 = add i32 %2, -29
  %7 = icmp ult i32 %.off107, 8
  %or.cond114 = or i1 %or.cond112, %7
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear24 = and i32 %bf.lshr, 255
  br i1 %or.cond114, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then9
  %idxprom109 = zext i32 %bf.clear24 to i64
  %arrayidx25 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom109
  %8 = load i32* %arrayidx25, align 4, !tbaa !9
  %cmp26 = icmp eq i32 %8, 5
  br i1 %cmp26, label %while.body.lr.ph, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp32 = icmp eq i32 %8, 6
  %phitmp = select i1 %cmp32, i32 2, i32 1
  br label %while.body.lr.ph

cond.false:                                       ; preds = %if.then9
  switch i32 %bf.clear24, label %while.cond.preheader [
    i32 18, label %cond.true37
    i32 24, label %cond.true44
  ]

cond.true37:                                      ; preds = %cond.false
  %9 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %9, 25
  %10 = and i32 %and, 1
  %11 = xor i32 %10, 3
  br label %while.body.lr.ph

cond.true44:                                      ; preds = %cond.false
  %12 = load i32* @target_flags, align 4, !tbaa !1
  %and45 = lshr i32 %12, 24
  %13 = and i32 %and45, 2
  %14 = xor i32 %13, 6
  br label %while.body.lr.ph

while.cond.preheader:                             ; preds = %cond.false
  %idxprom52108 = zext i32 %bf.clear24 to i64
  %arrayidx53 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom52108
  %15 = load i8* %arrayidx53, align 1, !tbaa !9
  %conv = zext i8 %15 to i32
  %16 = load i32* @target_flags, align 4, !tbaa !1
  %and54 = lshr i32 %16, 23
  %17 = and i32 %and54, 4
  %18 = add i32 %17, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %18
  %div = sdiv i32 %sub, %18
  %cmp65116 = icmp sgt i32 %div, 0
  br i1 %cmp65116, label %while.body.lr.ph, label %if.end79

while.body.lr.ph:                                 ; preds = %cond.true, %lor.rhs, %cond.true37, %cond.true44, %while.cond.preheader
  %nregs.0.ph121 = phi i32 [ %div, %while.cond.preheader ], [ %14, %cond.true44 ], [ %11, %cond.true37 ], [ %phitmp, %lor.rhs ], [ 2, %cond.true ]
  %19 = bitcast i8* %regs_set to %struct.bitmap_head_def*
  %20 = sext i32 %2 to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end71
  %indvars.iv = phi i64 [ %20, %while.body.lr.ph ], [ %indvars.iv.next, %if.end71 ]
  %dec118.in = phi i32 [ %nregs.0.ph121, %while.body.lr.ph ], [ %dec118, %if.end71 ]
  %dec118 = add nsw i32 %dec118.in, -1
  %21 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  %22 = trunc i64 %indvars.iv to i32
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %21, i32 %22) #3
  %arrayidx68 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %indvars.iv
  %23 = load i8* %arrayidx68, align 1, !tbaa !9
  %tobool69 = icmp eq i8 %23, 0
  br i1 %tobool69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %while.body
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %19, i32 %22) #3
  br label %if.end71

if.end71:                                         ; preds = %while.body, %if.then70
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp65 = icmp sgt i32 %dec118, 0
  br i1 %cmp65, label %while.body, label %if.end79

if.else:                                          ; preds = %if.end5
  %idxprom72 = sext i32 %2 to i64
  %24 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx73 = getelementptr inbounds i16* %24, i64 %idxprom72
  %25 = load i16* %arrayidx73, align 2, !tbaa !10
  %cmp75 = icmp sgt i16 %25, -1
  br i1 %cmp75, label %if.then77, label %if.end79

if.then77:                                        ; preds = %if.else
  %26 = load %struct.bitmap_head_def** @live_relevant_regs, align 8, !tbaa !5
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %26, i32 %2) #3
  %27 = bitcast i8* %regs_set to %struct.bitmap_head_def*
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %27, i32 %2) #3
  br label %if.end79

if.end79:                                         ; preds = %if.end71, %while.cond.preheader, %if.end, %if.else, %if.then77
  ret void
}

declare %struct.rtx_def* @prev_real_insn(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @dump_global_regs(%struct._IO_FILE* nocapture %file) #0 {
entry:
  %0 = tail call i64 @fwrite(i8* getelementptr inbounds ([27 x i8]* @.str1, i64 0, i64 0), i64 26, i64 1, %struct._IO_FILE* %file)
  %1 = load i32* @max_regno, align 4, !tbaa !1
  %cmp41 = icmp sgt i32 %1, 53
  br i1 %cmp41, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv44 = phi i64 [ %indvars.iv.next45, %for.inc ], [ 53, %entry ]
  %j.043 = phi i32 [ %j.1, %for.inc ], [ 0, %entry ]
  %2 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds i16* %2, i64 %indvars.iv44
  %3 = load i16* %arrayidx, align 2, !tbaa !10
  %cmp1 = icmp sgt i16 %3, -1
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %conv = sext i16 %3 to i32
  %4 = trunc i64 %indvars.iv44 to i32
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8]* @.str2, i64 0, i64 0), i32 %4, i32 %conv) #3
  %inc = add nsw i32 %j.043, 1
  %rem = srem i32 %inc, 6
  %cmp7 = icmp eq i32 %rem, 0
  br i1 %cmp7, label %if.then9, label %for.inc

if.then9:                                         ; preds = %if.then
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then9, %if.then
  %j.1 = phi i32 [ %inc, %if.then9 ], [ %inc, %if.then ], [ %j.043, %for.body ]
  %indvars.iv.next45 = add nuw nsw i64 %indvars.iv44, 1
  %5 = load i32* @max_regno, align 4, !tbaa !1
  %6 = trunc i64 %indvars.iv.next45 to i32
  %cmp = icmp slt i32 %6, %5
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([22 x i8]* @.str4, i64 0, i64 0), i64 21, i64 1, %struct._IO_FILE* %file)
  br label %for.body17

for.body17:                                       ; preds = %for.inc23, %for.end
  %indvars.iv = phi i64 [ 0, %for.end ], [ %indvars.iv.next, %for.inc23 ]
  %arrayidx19 = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %indvars.iv
  %8 = load i8* %arrayidx19, align 1, !tbaa !9
  %tobool = icmp eq i8 %8, 0
  br i1 %tobool, label %for.inc23, label %if.then20

if.then20:                                        ; preds = %for.body17
  %9 = trunc i64 %indvars.iv to i32
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 %9) #3
  br label %for.inc23

for.inc23:                                        ; preds = %for.body17, %if.then20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond, label %for.end25, label %for.body17

for.end25:                                        ; preds = %for.inc23
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %file)
  ret void
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #4

declare i32 @reg_preferred_class(i32) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

declare i32 @reg_class_subset_p(i32, i32) #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @reg_set_to_hard_reg_set(i64*, %struct.bitmap_head_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @record_one_conflict(i32 %regno) #0 {
entry:
  %cmp = icmp slt i32 %regno, 53
  br i1 %cmp, label %do.body, label %if.else

do.body:                                          ; preds = %entry
  %0 = load i32* @allocno_row_words, align 4, !tbaa !1
  %cmp145 = icmp sgt i32 %0, 0
  br i1 %cmp145, label %for.body.lr.ph, label %if.end27

for.body.lr.ph:                                   ; preds = %do.body
  %1 = load i64** @allocnos_live, align 8, !tbaa !5
  %sh_prom = zext i32 %regno to i64
  %shl = shl i64 1, %sh_prom
  %2 = load %struct.allocno** @allocno, align 8, !tbaa !5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc6
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc6 ]
  %i_.048.in = phi i32 [ %0, %for.body.lr.ph ], [ %i_.048, %for.inc6 ]
  %p_.047 = phi i64* [ %1, %for.body.lr.ph ], [ %incdec.ptr, %for.inc6 ]
  %i_.048 = add nsw i32 %i_.048.in, -1
  %incdec.ptr = getelementptr inbounds i64* %p_.047, i64 1
  %3 = load i64* %p_.047, align 8, !tbaa !7
  %tobool41 = icmp eq i64 %3, 0
  br i1 %tobool41, label %for.inc6, label %for.body3

for.body3:                                        ; preds = %for.body, %for.inc
  %indvars.iv52 = phi i64 [ %indvars.iv.next53, %for.inc ], [ %indvars.iv, %for.body ]
  %word_.042 = phi i64 [ %shr, %for.inc ], [ %3, %for.body ]
  %and = and i64 %word_.042, 1
  %tobool4 = icmp eq i64 %and, 0
  br i1 %tobool4, label %for.inc, label %if.then5

if.then5:                                         ; preds = %for.body3
  %hard_reg_conflicts = getelementptr inbounds %struct.allocno* %2, i64 %indvars.iv52, i32 6
  %4 = load i64* %hard_reg_conflicts, align 8, !tbaa !36
  %or = or i64 %4, %shl
  store i64 %or, i64* %hard_reg_conflicts, align 8, !tbaa !36
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %if.then5
  %shr = lshr i64 %word_.042, 1
  %tobool = icmp eq i64 %shr, 0
  %indvars.iv.next53 = add nuw nsw i64 %indvars.iv52, 1
  br i1 %tobool, label %for.inc6, label %for.body3

for.inc6:                                         ; preds = %for.inc, %for.body
  %cmp1 = icmp sgt i32 %i_.048, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 64
  br i1 %cmp1, label %for.body, label %if.end27

if.else:                                          ; preds = %entry
  %idxprom8 = sext i32 %regno to i64
  %5 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx9 = getelementptr inbounds i32* %5, i64 %idxprom8
  %6 = load i32* %arrayidx9, align 4, !tbaa !1
  %7 = load i32* @allocno_row_words, align 4, !tbaa !1
  %8 = load i64* @hard_regs_live, align 8, !tbaa !7
  %idxprom10 = sext i32 %6 to i64
  %9 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_conflicts12 = getelementptr inbounds %struct.allocno* %9, i64 %idxprom10, i32 6
  %10 = load i64* %hard_reg_conflicts12, align 8, !tbaa !36
  %or13 = or i64 %10, %8
  store i64 %or13, i64* %hard_reg_conflicts12, align 8, !tbaa !36
  %cmp1650 = icmp sgt i32 %7, 0
  br i1 %cmp1650, label %for.body17.lr.ph, label %if.end27

for.body17.lr.ph:                                 ; preds = %if.else
  %mul = mul nsw i32 %7, %6
  %11 = load i64** @allocnos_live, align 8, !tbaa !5
  %12 = load i64** @conflicts, align 8, !tbaa !5
  %13 = sext i32 %7 to i64
  %14 = sext i32 %mul to i64
  br label %for.body17

for.body17:                                       ; preds = %for.body17.lr.ph, %for.body17
  %indvars.iv55 = phi i64 [ %13, %for.body17.lr.ph ], [ %indvars.iv.next56, %for.body17 ]
  %indvars.iv.next56 = add nsw i64 %indvars.iv55, -1
  %arrayidx19 = getelementptr inbounds i64* %11, i64 %indvars.iv.next56
  %15 = load i64* %arrayidx19, align 8, !tbaa !7
  %16 = add nsw i64 %indvars.iv.next56, %14
  %arrayidx22 = getelementptr inbounds i64* %12, i64 %16
  %17 = load i64* %arrayidx22, align 8, !tbaa !7
  %or23 = or i64 %17, %15
  store i64 %or23, i64* %arrayidx22, align 8, !tbaa !7
  %18 = trunc i64 %indvars.iv.next56 to i32
  %cmp16 = icmp sgt i32 %18, 0
  br i1 %cmp16, label %for.body17, label %if.end27

if.end27:                                         ; preds = %for.body17, %for.inc6, %if.else, %do.body
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mark_reg_clobber(%struct.rtx_def* %reg, %struct.rtx_def* readonly %setter, i8* nocapture readnone %data) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %setter, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 49
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @mark_reg_store(%struct.rtx_def* %reg, %struct.rtx_def* %setter, i8* %data)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_reg_death(%struct.rtx_def* nocapture readonly %reg) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtuint, align 4, !tbaa !1
  %cmp = icmp sgt i32 %0, 52
  %idxprom = sext i32 %0 to i64
  br i1 %cmp, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %1 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx1 = getelementptr inbounds i32* %1, i64 %idxprom
  %2 = load i32* %arrayidx1, align 4, !tbaa !1
  %cmp2 = icmp sgt i32 %2, -1
  br i1 %cmp2, label %if.then3, label %if.end10

if.then3:                                         ; preds = %if.then
  %rem = and i32 %2, 63
  %sh_prom = zext i32 %rem to i64
  %shl = shl i64 1, %sh_prom
  %neg = xor i64 %shl, -1
  %div = lshr i32 %2, 6
  %idxprom8 = zext i32 %div to i64
  %3 = load i64** @allocnos_live, align 8, !tbaa !5
  %arrayidx9 = getelementptr inbounds i64* %3, i64 %idxprom8
  %4 = load i64* %arrayidx9, align 8, !tbaa !7
  %and = and i64 %4, %neg
  store i64 %and, i64* %arrayidx9, align 8, !tbaa !7
  br label %if.end10

if.end10:                                         ; preds = %entry, %if.then, %if.then3
  %5 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx12 = getelementptr inbounds i16* %5, i64 %idxprom
  %6 = load i16* %arrayidx12, align 2, !tbaa !10
  %cmp13 = icmp sgt i16 %6, -1
  %conv = sext i16 %6 to i32
  %conv. = select i1 %cmp13, i32 %conv, i32 %0
  %cmp20 = icmp slt i32 %conv., 53
  br i1 %cmp20, label %land.lhs.true, label %if.end103

land.lhs.true:                                    ; preds = %if.end10
  %idxprom22 = sext i32 %conv. to i64
  %arrayidx23 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom22
  %7 = load i8* %arrayidx23, align 1, !tbaa !9
  %tobool = icmp eq i8 %7, 0
  br i1 %tobool, label %if.then24, label %if.end103

if.then24:                                        ; preds = %land.lhs.true
  %8 = and i32 %conv., -8
  %9 = icmp eq i32 %8, 8
  %regno.0.off = add i32 %conv., -21
  %10 = icmp ult i32 %regno.0.off, 8
  %or.cond = or i1 %9, %10
  %regno.0.off131 = add i32 %conv., -45
  %11 = icmp ult i32 %regno.0.off131, 8
  %or.cond137 = or i1 %or.cond, %11
  %regno.0.off132 = add i32 %conv., -29
  %12 = icmp ult i32 %regno.0.off132, 8
  %or.cond139 = or i1 %or.cond137, %12
  %13 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %13, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  br i1 %or.cond139, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then24
  %idxprom47134 = zext i32 %bf.clear to i64
  %arrayidx48 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom47134
  %14 = load i32* %arrayidx48, align 4, !tbaa !9
  %cmp49 = icmp eq i32 %14, 5
  br i1 %cmp49, label %while.body.lr.ph, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp56 = icmp eq i32 %14, 6
  %phitmp = select i1 %cmp56, i32 2, i32 1
  br label %while.body.lr.ph

cond.false:                                       ; preds = %if.then24
  switch i32 %bf.clear, label %cond.end94 [
    i32 18, label %cond.true63
    i32 24, label %cond.true73
  ]

cond.true63:                                      ; preds = %cond.false
  %15 = load i32* @target_flags, align 4, !tbaa !1
  %and64 = lshr i32 %15, 25
  %16 = and i32 %and64, 1
  %17 = xor i32 %16, 3
  br label %while.body.lr.ph

cond.true73:                                      ; preds = %cond.false
  %18 = load i32* @target_flags, align 4, !tbaa !1
  %and74 = lshr i32 %18, 24
  %19 = and i32 %and74, 2
  %20 = xor i32 %19, 6
  br label %while.body.lr.ph

cond.end94:                                       ; preds = %cond.false
  %idxprom81133 = zext i32 %bf.clear to i64
  %arrayidx82 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom81133
  %21 = load i8* %arrayidx82, align 1, !tbaa !9
  %conv83 = zext i8 %21 to i32
  %22 = load i32* @target_flags, align 4, !tbaa !1
  %and84 = lshr i32 %22, 23
  %23 = and i32 %and84, 4
  %24 = add i32 %23, 4
  %add = add i32 %conv83, -1
  %sub = add i32 %add, %24
  %div90 = sdiv i32 %sub, %24
  %cmp97140 = icmp sgt i32 %div90, 0
  br i1 %cmp97140, label %while.body.lr.ph, label %if.end103

while.body.lr.ph:                                 ; preds = %lor.rhs, %cond.true, %cond.true73, %cond.true63, %cond.end94
  %cond95.ph.pn = phi i32 [ %div90, %cond.end94 ], [ %17, %cond.true63 ], [ %20, %cond.true73 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ]
  %add96145 = add nsw i32 %cond95.ph.pn, %conv.
  %hard_regs_live.promoted = load i64* @hard_regs_live, align 8, !tbaa !7
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %and102142 = phi i64 [ %hard_regs_live.promoted, %while.body.lr.ph ], [ %and102, %while.body ]
  %regno.1141 = phi i32 [ %conv., %while.body.lr.ph ], [ %inc, %while.body ]
  %sh_prom99 = zext i32 %regno.1141 to i64
  %shl100 = shl i64 1, %sh_prom99
  %neg101 = xor i64 %shl100, -1
  %and102 = and i64 %and102142, %neg101
  %inc = add nsw i32 %regno.1141, 1
  %cmp97 = icmp slt i32 %inc, %add96145
  br i1 %cmp97, label %while.body, label %while.cond.if.end103.loopexit_crit_edge

while.cond.if.end103.loopexit_crit_edge:          ; preds = %while.body
  store i64 %and102, i64* @hard_regs_live, align 8, !tbaa !7
  br label %if.end103

if.end103:                                        ; preds = %cond.end94, %while.cond.if.end103.loopexit_crit_edge, %land.lhs.true, %if.end10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mark_reg_store(%struct.rtx_def* %reg, %struct.rtx_def* readonly %setter, i8* nocapture readnone %data) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ]
  %reg.addr.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %reg, %entry ]
  %2 = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 0
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %if.end5, label %if.end126

if.end5:                                          ; preds = %if.end
  %3 = load i32* @n_regs_set, align 4, !tbaa !1
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* @n_regs_set, align 4, !tbaa !1
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.rtx_def*** @regs_set, align 8, !tbaa !5
  %arrayidx6 = getelementptr inbounds %struct.rtx_def** %4, i64 %idxprom
  store %struct.rtx_def* %reg.addr.0, %struct.rtx_def** %arrayidx6, align 8, !tbaa !5
  %tobool = icmp eq %struct.rtx_def* %setter, null
  br i1 %tobool, label %if.end14, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end5
  %5 = getelementptr inbounds %struct.rtx_def* %setter, i64 0, i32 0
  %bf.load7 = load i32* %5, align 8
  %bf.clear8 = and i32 %bf.load7, 65535
  %cmp9 = icmp eq i32 %bf.clear8, 49
  br i1 %cmp9, label %if.end14, label %if.then10

if.then10:                                        ; preds = %land.lhs.true
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %setter, i64 0, i32 1, i64 1
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx13, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load.i = load i32* %7, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom496.i = zext i32 %bf.clear.i to i64
  %arrayidx.i = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom496.i
  %8 = load i8** %arrayidx.i, align 8, !tbaa !5
  %9 = load i8* %8, align 1, !tbaa !9
  %cmp.i = icmp eq i8 %9, 101
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then10
  %arrayidx3.i = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx3.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load4.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then10
  %bf.load4.i = phi i32 [ %bf.load4.pre.i, %if.then.i ], [ %bf.load.i, %if.then10 ]
  %src.addr.0.i = phi %struct.rtx_def* [ %10, %if.then.i ], [ %6, %if.then10 ]
  %copy.0.i = phi i32 [ 0, %if.then.i ], [ 1, %if.then10 ]
  %11 = getelementptr inbounds %struct.rtx_def* %src.addr.0.i, i64 0, i32 0
  %bf.clear5.i = and i32 %bf.load4.i, 65535
  switch i32 %bf.clear5.i, label %if.end14 [
    i32 61, label %if.then8.i
    i32 63, label %land.lhs.true.i
  ]

if.then8.i:                                       ; preds = %if.end.i
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def* %src.addr.0.i, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx10.i to i32*
  %12 = load i32* %rtuint.i, align 4, !tbaa !1
  br label %if.end63.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %fld15.i = getelementptr inbounds %struct.rtx_def* %src.addr.0.i, i64 0, i32 1
  %rtx17.i = bitcast [1 x %union.rtunion_def]* %fld15.i to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx17.i, align 8, !tbaa !5
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load18.i = load i32* %14, align 8
  %bf.clear19.i = and i32 %bf.load18.i, 65535
  %cmp20.i = icmp eq i32 %bf.clear19.i, 61
  br i1 %cmp20.i, label %if.then22.i, label %if.end14

if.then22.i:                                      ; preds = %land.lhs.true.i
  %arrayidx27.i = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0
  %rtuint28.i = bitcast %union.rtunion_def* %arrayidx27.i to i32*
  %15 = load i32* %rtuint28.i, align 4, !tbaa !1
  %cmp35.i = icmp ult i32 %15, 53
  br i1 %cmp35.i, label %if.then37.i, label %if.else55.i

if.then37.i:                                      ; preds = %if.then22.i
  %bf.lshr.i = lshr i32 %bf.load18.i, 16
  %bf.clear48.i = and i32 %bf.lshr.i, 255
  %arrayidx50.i = getelementptr inbounds %struct.rtx_def* %src.addr.0.i, i64 0, i32 1, i64 1
  %rtuint51.i = bitcast %union.rtunion_def* %arrayidx50.i to i32*
  %16 = load i32* %rtuint51.i, align 4, !tbaa !1
  %bf.lshr53.i = lshr i32 %bf.load4.i, 16
  %bf.clear54.i = and i32 %bf.lshr53.i, 255
  %call.i = tail call i32 @subreg_regno_offset(i32 %15, i32 %bf.clear48.i, i32 %16, i32 %bf.clear54.i) #3
  br label %if.end63.i

if.else55.i:                                      ; preds = %if.then22.i
  %arrayidx57.i = getelementptr inbounds %struct.rtx_def* %src.addr.0.i, i64 0, i32 1, i64 1
  %rtuint58.i = bitcast %union.rtunion_def* %arrayidx57.i to i32*
  %17 = load i32* %rtuint58.i, align 4, !tbaa !1
  %18 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = lshr i32 %18, 23
  %19 = and i32 %and.i, 4
  %20 = add i32 %19, 4
  %div.i = udiv i32 %17, %20
  br label %if.end63.i

if.end63.i:                                       ; preds = %if.else55.i, %if.then37.i, %if.then8.i
  %src_regno.0.i = phi i32 [ %12, %if.then8.i ], [ %15, %if.then37.i ], [ %15, %if.else55.i ]
  %offset.0.i = phi i32 [ 0, %if.then8.i ], [ %call.i, %if.then37.i ], [ %div.i, %if.else55.i ]
  %bf.load64.i = load i32* %2, align 8
  %bf.clear65.i = and i32 %bf.load64.i, 65535
  switch i32 %bf.clear65.i, label %if.end14 [
    i32 61, label %if.then68.i
    i32 63, label %land.lhs.true77.i
  ]

if.then68.i:                                      ; preds = %if.end63.i
  %arrayidx70.i = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1, i64 0
  %rtuint71.i = bitcast %union.rtunion_def* %arrayidx70.i to i32*
  %21 = load i32* %rtuint71.i, align 4, !tbaa !1
  br label %if.end132.i

land.lhs.true77.i:                                ; preds = %if.end63.i
  %fld78.i = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1
  %rtx80.i = bitcast [1 x %union.rtunion_def]* %fld78.i to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx80.i, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load81.i = load i32* %23, align 8
  %bf.clear82.i = and i32 %bf.load81.i, 65535
  %cmp83.i = icmp eq i32 %bf.clear82.i, 61
  br i1 %cmp83.i, label %if.then85.i, label %if.end14

if.then85.i:                                      ; preds = %land.lhs.true77.i
  %arrayidx90.i = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 0
  %rtuint91.i = bitcast %union.rtunion_def* %arrayidx90.i to i32*
  %24 = load i32* %rtuint91.i, align 4, !tbaa !1
  %cmp98.i = icmp ult i32 %24, 53
  br i1 %cmp98.i, label %if.then100.i, label %if.else120.i

if.then100.i:                                     ; preds = %if.then85.i
  %bf.lshr111.i = lshr i32 %bf.load81.i, 16
  %bf.clear112.i = and i32 %bf.lshr111.i, 255
  %arrayidx114.i = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1, i64 1
  %rtuint115.i = bitcast %union.rtunion_def* %arrayidx114.i to i32*
  %25 = load i32* %rtuint115.i, align 4, !tbaa !1
  %bf.lshr117.i = lshr i32 %bf.load64.i, 16
  %bf.clear118.i = and i32 %bf.lshr117.i, 255
  %call119.i = tail call i32 @subreg_regno_offset(i32 %24, i32 %bf.clear112.i, i32 %25, i32 %bf.clear118.i) #3
  %sub.i = sub i32 %offset.0.i, %call119.i
  br label %if.end132.i

if.else120.i:                                     ; preds = %if.then85.i
  %arrayidx122.i = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1, i64 1
  %rtuint123.i = bitcast %union.rtunion_def* %arrayidx122.i to i32*
  %26 = load i32* %rtuint123.i, align 4, !tbaa !1
  %27 = load i32* @target_flags, align 4, !tbaa !1
  %and124.i = lshr i32 %27, 23
  %28 = and i32 %and124.i, 4
  %29 = add i32 %28, 4
  %div127.i = udiv i32 %26, %29
  %sub128.i = sub i32 %offset.0.i, %div127.i
  br label %if.end132.i

if.end132.i:                                      ; preds = %if.else120.i, %if.then100.i, %if.then68.i
  %dest_regno.0.i = phi i32 [ %21, %if.then68.i ], [ %24, %if.then100.i ], [ %24, %if.else120.i ]
  %offset.1.i = phi i32 [ %offset.0.i, %if.then68.i ], [ %sub.i, %if.then100.i ], [ %sub128.i, %if.else120.i ]
  %idxprom133.i = zext i32 %src_regno.0.i to i64
  %30 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx134.i = getelementptr inbounds i16* %30, i64 %idxprom133.i
  %31 = load i16* %arrayidx134.i, align 2, !tbaa !10
  %cmp136.i = icmp sgt i16 %31, -1
  %conv135.i = sext i16 %31 to i32
  %conv135.src_regno.0.i = select i1 %cmp136.i, i32 %conv135.i, i32 %src_regno.0.i
  %idxprom143.i = zext i32 %dest_regno.0.i to i64
  %arrayidx144.i = getelementptr inbounds i16* %30, i64 %idxprom143.i
  %32 = load i16* %arrayidx144.i, align 2, !tbaa !10
  %cmp146.i = icmp sgt i16 %32, -1
  %conv145.i = sext i16 %32 to i32
  %dest_regno.1.i = select i1 %cmp146.i, i32 %conv145.i, i32 %dest_regno.0.i
  %cmp153.i = icmp ult i32 %dest_regno.1.i, 53
  %cmp156.i = icmp ugt i32 %conv135.src_regno.0.i, 52
  %or.cond.i = and i1 %cmp153.i, %cmp156.i
  br i1 %or.cond.i, label %land.lhs.true158.i, label %if.end270.i

land.lhs.true158.i:                               ; preds = %if.end132.i
  %idxprom159.i = zext i32 %conv135.src_regno.0.i to i64
  %33 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx160.i = getelementptr inbounds i32* %33, i64 %idxprom159.i
  %34 = load i32* %arrayidx160.i, align 4, !tbaa !1
  %cmp161.i = icmp sgt i32 %34, -1
  br i1 %cmp161.i, label %if.then163.i, label %if.end270.i

if.then163.i:                                     ; preds = %land.lhs.true158.i
  %sub164.i = sub i32 %dest_regno.1.i, %offset.1.i
  %cmp165.i = icmp ult i32 %sub164.i, 53
  br i1 %cmp165.i, label %if.then167.i, label %if.end270.i

if.then167.i:                                     ; preds = %if.then163.i
  %tobool168.i = icmp eq i32 %copy.0.i, 0
  br i1 %tobool168.i, label %if.then167.if.end174_crit_edge.i, label %if.then169.i

if.then167.if.end174_crit_edge.i:                 ; preds = %if.then167.i
  %.pre.i = load %struct.allocno** @allocno, align 8, !tbaa !5
  %sh_prom175.pre.i = zext i32 %sub164.i to i64
  %shl176.pre.i = shl i64 1, %sh_prom175.pre.i
  %idxprom179.pre.i = sext i32 %34 to i64
  br label %if.end174.i

if.then169.i:                                     ; preds = %if.then167.i
  %sh_prom.i = zext i32 %sub164.i to i64
  %shl.i = shl i64 1, %sh_prom.i
  %idxprom172.i = sext i32 %34 to i64
  %35 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_copy_preferences.i = getelementptr inbounds %struct.allocno* %35, i64 %idxprom172.i, i32 8
  %36 = load i64* %hard_reg_copy_preferences.i, align 8, !tbaa !42
  %or.i = or i64 %36, %shl.i
  store i64 %or.i, i64* %hard_reg_copy_preferences.i, align 8, !tbaa !42
  br label %if.end174.i

if.end174.i:                                      ; preds = %if.then169.i, %if.then167.if.end174_crit_edge.i
  %idxprom179.pre-phi.i = phi i64 [ %idxprom179.pre.i, %if.then167.if.end174_crit_edge.i ], [ %idxprom172.i, %if.then169.i ]
  %shl176.pre-phi.i = phi i64 [ %shl176.pre.i, %if.then167.if.end174_crit_edge.i ], [ %shl.i, %if.then169.i ]
  %37 = phi %struct.allocno* [ %.pre.i, %if.then167.if.end174_crit_edge.i ], [ %35, %if.then169.i ]
  %hard_reg_preferences.i = getelementptr inbounds %struct.allocno* %37, i64 %idxprom179.pre-phi.i, i32 7
  %38 = load i64* %hard_reg_preferences.i, align 8, !tbaa !43
  %or181.i = or i64 %38, %shl176.pre-phi.i
  store i64 %or181.i, i64* %hard_reg_preferences.i, align 8, !tbaa !43
  %39 = and i32 %sub164.i, -8
  %40 = icmp eq i32 %39, 8
  %sub164.off.i = add i32 %sub164.i, -21
  %41 = icmp ult i32 %sub164.off.i, 8
  %or.cond507.i = or i1 %40, %41
  %sub164.off501.i = add i32 %sub164.i, -45
  %42 = icmp ult i32 %sub164.off501.i, 8
  %or.cond509.i = or i1 %or.cond507.i, %42
  %sub164.off502.i = add i32 %sub164.i, -29
  %43 = icmp ult i32 %sub164.off502.i, 8
  %or.cond511.i = or i1 %or.cond509.i, %43
  %hard_reg_full_preferences.i = getelementptr inbounds %struct.allocno* %37, i64 %idxprom179.pre-phi.i, i32 9
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %if.end174.i
  %i.0.i = phi i32 [ %sub164.i, %if.end174.i ], [ %inc.i, %for.body.i ]
  %bf.load204.i = load i32* %2, align 8
  %bf.lshr205.i = lshr i32 %bf.load204.i, 16
  %bf.clear206.i = and i32 %bf.lshr205.i, 255
  br i1 %or.cond511.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %for.cond.i
  %idxprom207504.i = zext i32 %bf.clear206.i to i64
  %arrayidx208.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom207504.i
  %44 = load i32* %arrayidx208.i, align 4, !tbaa !9
  %cmp209.i = icmp eq i32 %44, 5
  br i1 %cmp209.i, label %cond.end257.i, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %cond.true.i
  %cmp216.i = icmp eq i32 %44, 6
  %phitmp505.i = select i1 %cmp216.i, i32 2, i32 1
  br label %cond.end257.i

cond.false.i:                                     ; preds = %for.cond.i
  switch i32 %bf.clear206.i, label %cond.false238.i [
    i32 18, label %cond.true224.i
    i32 24, label %cond.true234.i
  ]

cond.true224.i:                                   ; preds = %cond.false.i
  %45 = load i32* @target_flags, align 4, !tbaa !1
  %and225.i = lshr i32 %45, 25
  %46 = and i32 %and225.i, 1
  %47 = xor i32 %46, 3
  br label %cond.end257.i

cond.true234.i:                                   ; preds = %cond.false.i
  %48 = load i32* @target_flags, align 4, !tbaa !1
  %and235.i = lshr i32 %48, 24
  %49 = and i32 %and235.i, 2
  %50 = xor i32 %49, 6
  br label %cond.end257.i

cond.false238.i:                                  ; preds = %cond.false.i
  %idxprom242503.i = zext i32 %bf.clear206.i to i64
  %arrayidx243.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom242503.i
  %51 = load i8* %arrayidx243.i, align 1, !tbaa !9
  %conv244.i = zext i8 %51 to i32
  %52 = load i32* @target_flags, align 4, !tbaa !1
  %and245.i = lshr i32 %52, 23
  %53 = and i32 %and245.i, 4
  %54 = add i32 %53, 4
  %add248.i = add i32 %conv244.i, -1
  %sub249.i = add i32 %add248.i, %54
  %div253.i = sdiv i32 %sub249.i, %54
  br label %cond.end257.i

cond.end257.i:                                    ; preds = %cond.false238.i, %cond.true234.i, %cond.true224.i, %lor.rhs.i, %cond.true.i
  %cond258.i = phi i32 [ %47, %cond.true224.i ], [ %50, %cond.true234.i ], [ %div253.i, %cond.false238.i ], [ 2, %cond.true.i ], [ %phitmp505.i, %lor.rhs.i ]
  %add259.i = add i32 %cond258.i, %sub164.i
  %cmp260.i = icmp ult i32 %i.0.i, %add259.i
  br i1 %cmp260.i, label %for.body.i, label %if.end270.i

for.body.i:                                       ; preds = %cond.end257.i
  %sh_prom262.i = zext i32 %i.0.i to i64
  %shl263.i = shl i64 1, %sh_prom262.i
  %55 = load i64* %hard_reg_full_preferences.i, align 8, !tbaa !44
  %or268.i = or i64 %55, %shl263.i
  store i64 %or268.i, i64* %hard_reg_full_preferences.i, align 8, !tbaa !44
  %inc.i = add i32 %i.0.i, 1
  br label %for.cond.i

if.end270.i:                                      ; preds = %cond.end257.i, %if.then163.i, %land.lhs.true158.i, %if.end132.i
  %dest_regno.2.i = phi i32 [ %sub164.i, %if.then163.i ], [ %dest_regno.1.i, %land.lhs.true158.i ], [ %dest_regno.1.i, %if.end132.i ], [ %sub164.i, %cond.end257.i ]
  %cmp271.i = icmp ult i32 %conv135.src_regno.0.i, 53
  %cmp274.i = icmp ugt i32 %dest_regno.2.i, 52
  %or.cond410.i = and i1 %cmp271.i, %cmp274.i
  br i1 %or.cond410.i, label %land.lhs.true276.i, label %if.end14

land.lhs.true276.i:                               ; preds = %if.end270.i
  %idxprom277.i = zext i32 %dest_regno.2.i to i64
  %56 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx278.i = getelementptr inbounds i32* %56, i64 %idxprom277.i
  %57 = load i32* %arrayidx278.i, align 4, !tbaa !1
  %cmp279.i = icmp sgt i32 %57, -1
  br i1 %cmp279.i, label %if.then281.i, label %if.end14

if.then281.i:                                     ; preds = %land.lhs.true276.i
  %add282.i = add i32 %conv135.src_regno.0.i, %offset.1.i
  %cmp283.i = icmp ult i32 %add282.i, 53
  br i1 %cmp283.i, label %if.then285.i, label %if.end14

if.then285.i:                                     ; preds = %if.then281.i
  %tobool286.i = icmp eq i32 %copy.0.i, 0
  br i1 %tobool286.i, label %if.then285.if.end296_crit_edge.i, label %if.then287.i

if.then285.if.end296_crit_edge.i:                 ; preds = %if.then285.i
  %.pre519.i = load %struct.allocno** @allocno, align 8, !tbaa !5
  %sh_prom297.pre.i = zext i32 %add282.i to i64
  %shl298.pre.i = shl i64 1, %sh_prom297.pre.i
  %idxprom301.pre.i = sext i32 %57 to i64
  br label %if.end296.i

if.then287.i:                                     ; preds = %if.then285.i
  %sh_prom288.i = zext i32 %add282.i to i64
  %shl289.i = shl i64 1, %sh_prom288.i
  %idxprom292.i = sext i32 %57 to i64
  %58 = load %struct.allocno** @allocno, align 8, !tbaa !5
  %hard_reg_copy_preferences294.i = getelementptr inbounds %struct.allocno* %58, i64 %idxprom292.i, i32 8
  %59 = load i64* %hard_reg_copy_preferences294.i, align 8, !tbaa !42
  %or295.i = or i64 %59, %shl289.i
  store i64 %or295.i, i64* %hard_reg_copy_preferences294.i, align 8, !tbaa !42
  br label %if.end296.i

if.end296.i:                                      ; preds = %if.then287.i, %if.then285.if.end296_crit_edge.i
  %idxprom301.pre-phi.i = phi i64 [ %idxprom301.pre.i, %if.then285.if.end296_crit_edge.i ], [ %idxprom292.i, %if.then287.i ]
  %shl298.pre-phi.i = phi i64 [ %shl298.pre.i, %if.then285.if.end296_crit_edge.i ], [ %shl289.i, %if.then287.i ]
  %60 = phi %struct.allocno* [ %.pre519.i, %if.then285.if.end296_crit_edge.i ], [ %58, %if.then287.i ]
  %hard_reg_preferences303.i = getelementptr inbounds %struct.allocno* %60, i64 %idxprom301.pre-phi.i, i32 7
  %61 = load i64* %hard_reg_preferences303.i, align 8, !tbaa !43
  %or304.i = or i64 %61, %shl298.pre-phi.i
  store i64 %or304.i, i64* %hard_reg_preferences303.i, align 8, !tbaa !43
  %62 = and i32 %add282.i, -8
  %63 = icmp eq i32 %62, 8
  %add282.off.i = add i32 %add282.i, -21
  %64 = icmp ult i32 %add282.off.i, 8
  %or.cond513.i = or i1 %63, %64
  %add282.off497.i = add i32 %add282.i, -45
  %65 = icmp ult i32 %add282.off497.i, 8
  %or.cond515.i = or i1 %or.cond513.i, %65
  %add282.off498.i = add i32 %add282.i, -29
  %66 = icmp ult i32 %add282.off498.i, 8
  %or.cond517.i = or i1 %or.cond515.i, %66
  %hard_reg_full_preferences399.i = getelementptr inbounds %struct.allocno* %60, i64 %idxprom301.pre-phi.i, i32 9
  br label %for.cond305.i

for.cond305.i:                                    ; preds = %for.body392.i, %if.end296.i
  %i.1.i = phi i32 [ %add282.i, %if.end296.i ], [ %inc402.i, %for.body392.i ]
  %bf.load330.i = load i32* %11, align 8
  %bf.lshr331.i = lshr i32 %bf.load330.i, 16
  %bf.clear332.i = and i32 %bf.lshr331.i, 255
  br i1 %or.cond517.i, label %cond.true329.i, label %cond.false347.i

cond.true329.i:                                   ; preds = %for.cond305.i
  %idxprom333500.i = zext i32 %bf.clear332.i to i64
  %arrayidx334.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom333500.i
  %67 = load i32* %arrayidx334.i, align 4, !tbaa !9
  %cmp335.i = icmp eq i32 %67, 5
  br i1 %cmp335.i, label %cond.end387.i, label %lor.rhs337.i

lor.rhs337.i:                                     ; preds = %cond.true329.i
  %cmp343.i = icmp eq i32 %67, 6
  %phitmp.i = select i1 %cmp343.i, i32 2, i32 1
  br label %cond.end387.i

cond.false347.i:                                  ; preds = %for.cond305.i
  switch i32 %bf.clear332.i, label %cond.false367.i [
    i32 18, label %cond.true353.i
    i32 24, label %cond.true363.i
  ]

cond.true353.i:                                   ; preds = %cond.false347.i
  %68 = load i32* @target_flags, align 4, !tbaa !1
  %and354.i = lshr i32 %68, 25
  %69 = and i32 %and354.i, 1
  %70 = xor i32 %69, 3
  br label %cond.end387.i

cond.true363.i:                                   ; preds = %cond.false347.i
  %71 = load i32* @target_flags, align 4, !tbaa !1
  %and364.i = lshr i32 %71, 24
  %72 = and i32 %and364.i, 2
  %73 = xor i32 %72, 6
  br label %cond.end387.i

cond.false367.i:                                  ; preds = %cond.false347.i
  %idxprom371499.i = zext i32 %bf.clear332.i to i64
  %arrayidx372.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom371499.i
  %74 = load i8* %arrayidx372.i, align 1, !tbaa !9
  %conv373.i = zext i8 %74 to i32
  %75 = load i32* @target_flags, align 4, !tbaa !1
  %and374.i = lshr i32 %75, 23
  %76 = and i32 %and374.i, 4
  %77 = add i32 %76, 4
  %add377.i = add i32 %conv373.i, -1
  %sub378.i = add i32 %add377.i, %77
  %div382.i = sdiv i32 %sub378.i, %77
  br label %cond.end387.i

cond.end387.i:                                    ; preds = %cond.false367.i, %cond.true363.i, %cond.true353.i, %lor.rhs337.i, %cond.true329.i
  %cond388.i = phi i32 [ %70, %cond.true353.i ], [ %73, %cond.true363.i ], [ %div382.i, %cond.false367.i ], [ 2, %cond.true329.i ], [ %phitmp.i, %lor.rhs337.i ]
  %add389.i = add i32 %cond388.i, %add282.i
  %cmp390.i = icmp ult i32 %i.1.i, %add389.i
  br i1 %cmp390.i, label %for.body392.i, label %if.end14

for.body392.i:                                    ; preds = %cond.end387.i
  %sh_prom393.i = zext i32 %i.1.i to i64
  %shl394.i = shl i64 1, %sh_prom393.i
  %78 = load i64* %hard_reg_full_preferences399.i, align 8, !tbaa !44
  %or400.i = or i64 %78, %shl394.i
  store i64 %or400.i, i64* %hard_reg_full_preferences399.i, align 8, !tbaa !44
  %inc402.i = add i32 %i.1.i, 1
  br label %for.cond305.i

if.end14:                                         ; preds = %cond.end387.i, %if.then281.i, %land.lhs.true276.i, %if.end270.i, %land.lhs.true77.i, %if.end63.i, %land.lhs.true.i, %if.end.i, %land.lhs.true, %if.end5
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx16 to i32*
  %79 = load i32* %rtuint, align 4, !tbaa !1
  %cmp17 = icmp sgt i32 %79, 52
  %idxprom19 = sext i32 %79 to i64
  br i1 %cmp17, label %if.then18, label %if.end30

if.then18:                                        ; preds = %if.end14
  %80 = load i32** @reg_allocno, align 8, !tbaa !5
  %arrayidx20 = getelementptr inbounds i32* %80, i64 %idxprom19
  %81 = load i32* %arrayidx20, align 4, !tbaa !1
  %cmp21 = icmp sgt i32 %81, -1
  br i1 %cmp21, label %if.then22, label %if.end30

if.then22:                                        ; preds = %if.then18
  %rem = and i32 %81, 63
  %sh_prom = zext i32 %rem to i64
  %shl = shl i64 1, %sh_prom
  %div = lshr i32 %81, 6
  %idxprom27 = zext i32 %div to i64
  %82 = load i64** @allocnos_live, align 8, !tbaa !5
  %arrayidx28 = getelementptr inbounds i64* %82, i64 %idxprom27
  %83 = load i64* %arrayidx28, align 8, !tbaa !7
  %or = or i64 %83, %shl
  store i64 %or, i64* %arrayidx28, align 8, !tbaa !7
  tail call fastcc void @record_one_conflict(i32 %79)
  br label %if.end30

if.end30:                                         ; preds = %if.end14, %if.then18, %if.then22
  %84 = load i16** @reg_renumber, align 8, !tbaa !5
  %arrayidx32 = getelementptr inbounds i16* %84, i64 %idxprom19
  %85 = load i16* %arrayidx32, align 2, !tbaa !10
  %cmp33 = icmp sgt i16 %85, -1
  %conv = sext i16 %85 to i32
  %conv. = select i1 %cmp33, i32 %conv, i32 %79
  %cmp40 = icmp slt i32 %conv., 53
  br i1 %cmp40, label %land.lhs.true42, label %if.end126

land.lhs.true42:                                  ; preds = %if.end30
  %idxprom43 = sext i32 %conv. to i64
  %arrayidx44 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom43
  %86 = load i8* %arrayidx44, align 1, !tbaa !9
  %tobool45 = icmp eq i8 %86, 0
  br i1 %tobool45, label %if.then46, label %if.end126

if.then46:                                        ; preds = %land.lhs.true42
  %87 = and i32 %conv., -8
  %88 = icmp eq i32 %87, 8
  %regno.0.off = add i32 %conv., -21
  %89 = icmp ult i32 %regno.0.off, 8
  %or.cond = or i1 %88, %89
  %regno.0.off163 = add i32 %conv., -45
  %90 = icmp ult i32 %regno.0.off163, 8
  %or.cond169 = or i1 %or.cond, %90
  %regno.0.off164 = add i32 %conv., -29
  %91 = icmp ult i32 %regno.0.off164, 8
  %or.cond171 = or i1 %or.cond169, %91
  %bf.load69 = load i32* %2, align 8
  %bf.lshr = lshr i32 %bf.load69, 16
  %bf.clear70 = and i32 %bf.lshr, 255
  br i1 %or.cond171, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then46
  %idxprom71166 = zext i32 %bf.clear70 to i64
  %arrayidx72 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom71166
  %92 = load i32* %arrayidx72, align 4, !tbaa !9
  %cmp73 = icmp eq i32 %92, 5
  br i1 %cmp73, label %while.body.lr.ph, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp80 = icmp eq i32 %92, 6
  %phitmp = select i1 %cmp80, i32 2, i32 1
  br label %while.body.lr.ph

cond.false:                                       ; preds = %if.then46
  switch i32 %bf.clear70, label %cond.end117 [
    i32 18, label %cond.true87
    i32 24, label %cond.true96
  ]

cond.true87:                                      ; preds = %cond.false
  %93 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %93, 25
  %94 = and i32 %and, 1
  %95 = xor i32 %94, 3
  br label %while.body.lr.ph

cond.true96:                                      ; preds = %cond.false
  %96 = load i32* @target_flags, align 4, !tbaa !1
  %and97 = lshr i32 %96, 24
  %97 = and i32 %and97, 2
  %98 = xor i32 %97, 6
  br label %while.body.lr.ph

cond.end117:                                      ; preds = %cond.false
  %idxprom104165 = zext i32 %bf.clear70 to i64
  %arrayidx105 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom104165
  %99 = load i8* %arrayidx105, align 1, !tbaa !9
  %conv106 = zext i8 %99 to i32
  %100 = load i32* @target_flags, align 4, !tbaa !1
  %and107 = lshr i32 %100, 23
  %101 = and i32 %and107, 4
  %102 = add i32 %101, 4
  %add = add i32 %conv106, -1
  %sub = add i32 %add, %102
  %div113 = sdiv i32 %sub, %102
  %cmp120172 = icmp sgt i32 %div113, 0
  br i1 %cmp120172, label %while.body.lr.ph, label %if.end126

while.body.lr.ph:                                 ; preds = %lor.rhs, %cond.true, %cond.true96, %cond.true87, %cond.end117
  %cond118.ph.pn = phi i32 [ %div113, %cond.end117 ], [ %95, %cond.true87 ], [ %98, %cond.true96 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ]
  %add119177 = add nsw i32 %cond118.ph.pn, %conv.
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %regno.1173 = phi i32 [ %conv., %while.body.lr.ph ], [ %inc125, %while.body ]
  tail call fastcc void @record_one_conflict(i32 %regno.1173)
  %sh_prom122 = zext i32 %regno.1173 to i64
  %shl123 = shl i64 1, %sh_prom122
  %103 = load i64* @hard_regs_live, align 8, !tbaa !7
  %or124 = or i64 %103, %shl123
  store i64 %or124, i64* @hard_regs_live, align 8, !tbaa !7
  %inc125 = add nsw i32 %regno.1173, 1
  %cmp120 = icmp slt i32 %inc125, %add119177
  br i1 %cmp120, label %while.body, label %if.end126

if.end126:                                        ; preds = %while.body, %cond.end117, %land.lhs.true42, %if.end, %if.end30
  ret void
}

declare i32 @multiple_sets(%struct.rtx_def*) #1

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #1

declare i32 @subreg_regno_offset(i32, i32, i32, i32) #1

declare i32 @floor_log2_wide(i64) #1

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #3

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #3

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !8, i64 0}
!8 = metadata !{metadata !"long long", metadata !3, i64 0}
!9 = metadata !{metadata !3, metadata !3, i64 0}
!10 = metadata !{metadata !11, metadata !11, i64 0}
!11 = metadata !{metadata !"short", metadata !3, i64 0}
!12 = metadata !{metadata !13, metadata !2, i64 16}
!13 = metadata !{metadata !"reg_info_def", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !2, i64 28, metadata !2, i64 32, metadata !2, i64 36, metadata !3, i64 40}
!14 = metadata !{metadata !13, metadata !2, i64 28}
!15 = metadata !{metadata !13, metadata !2, i64 32}
!16 = metadata !{metadata !17, metadata !2, i64 0}
!17 = metadata !{metadata !"allocno", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !8, i64 24, metadata !8, i64 32, metadata !8, i64 40, metadata !8, i64 48, metadata !8, i64 56}
!18 = metadata !{metadata !19, metadata !6, i64 24}
!19 = metadata !{metadata !"function", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !2, i64 64, metadata !2, i64 68, metadata !2, i64 72, metadata !2, i64 76, metadata !6, i64 80, metadata !20, i64 88, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !2, i64 152, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !8, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !2, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !2, i64 328, metadata !2, i64 332, metadata !2, i64 336, metadata !6, i64 344, metadata !2, i64 352, metadata !2, i64 356, metadata !6, i64 360, metadata !6, i64 368, metadata !6, i64 376, metadata !2, i64 384, metadata !2, i64 388, metadata !6, i64 392, metadata !2, i64 400, metadata !2, i64 404, metadata !6, i64 408, metadata !6, i64 416, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426}
!20 = metadata !{metadata !"ix86_args", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24}
!21 = metadata !{metadata !22, metadata !6, i64 80}
!22 = metadata !{metadata !"emit_status", metadata !2, i64 0, metadata !2, i64 4, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !2, i64 40, metadata !2, i64 44, metadata !6, i64 48, metadata !2, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80}
!23 = metadata !{metadata !17, metadata !2, i64 4}
!24 = metadata !{metadata !17, metadata !2, i64 8}
!25 = metadata !{metadata !17, metadata !2, i64 12}
!26 = metadata !{metadata !13, metadata !2, i64 20}
!27 = metadata !{metadata !17, metadata !2, i64 16}
!28 = metadata !{metadata !17, metadata !2, i64 20}
!29 = metadata !{metadata !30, metadata !6, i64 64}
!30 = metadata !{metadata !"basic_block_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !2, i64 88, metadata !2, i64 92, metadata !8, i64 96, metadata !2, i64 104, metadata !2, i64 108}
!31 = metadata !{metadata !32, metadata !6, i64 0}
!32 = metadata !{metadata !"bitmap_head_def", metadata !6, i64 0, metadata !6, i64 8, metadata !2, i64 16}
!33 = metadata !{metadata !34, metadata !2, i64 16}
!34 = metadata !{metadata !"bitmap_element_def", metadata !6, i64 0, metadata !6, i64 8, metadata !2, i64 16, metadata !3, i64 24}
!35 = metadata !{metadata !34, metadata !6, i64 0}
!36 = metadata !{metadata !17, metadata !8, i64 24}
!37 = metadata !{metadata !38, metadata !2, i64 48}
!38 = metadata !{metadata !"edge_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !2, i64 48, metadata !2, i64 52, metadata !8, i64 56}
!39 = metadata !{metadata !40, metadata !2, i64 0}
!40 = metadata !{metadata !"rtvec_def", metadata !2, i64 0, metadata !3, i64 8}
!41 = metadata !{metadata !30, metadata !6, i64 8}
!42 = metadata !{metadata !17, metadata !8, i64 40}
!43 = metadata !{metadata !17, metadata !8, i64 32}
!44 = metadata !{metadata !17, metadata !8, i64 48}
!45 = metadata !{metadata !17, metadata !8, i64 56}
!46 = metadata !{metadata !30, metadata !6, i64 0}
!47 = metadata !{metadata !48, metadata !6, i64 8}
!48 = metadata !{metadata !"insn_chain", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !2, i64 24, metadata !6, i64 32, metadata !32, i64 40, metadata !32, i64 64, metadata !6, i64 88, metadata !2, i64 96, metadata !8, i64 104, metadata !49, i64 112, metadata !2, i64 262, metadata !2, i64 262, metadata !2, i64 262, metadata !2, i64 262}
!49 = metadata !{metadata !"needs", metadata !3, i64 0, metadata !3, i64 100}
!50 = metadata !{metadata !48, metadata !6, i64 32}
!51 = metadata !{metadata !48, metadata !2, i64 24}
