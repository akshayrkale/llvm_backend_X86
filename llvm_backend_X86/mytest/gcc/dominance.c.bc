; ModuleID = 'dominance.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%union.tree_node = type opaque
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct.dom_info = type { i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.basic_block_def**, i32, i32 }

@n_basic_blocks = external global i32
@basic_block_info = external global %struct.varray_head_tag*
@entry_exit_blocks = external global [2 x %struct.basic_block_def]
@.str = private unnamed_addr constant [12 x i8] c"dominance.c\00", align 1
@__FUNCTION__.calc_dfs_tree = private unnamed_addr constant [14 x i8] c"calc_dfs_tree\00", align 1
@__FUNCTION__.calc_dfs_tree_nonrec = private unnamed_addr constant [21 x i8] c"calc_dfs_tree_nonrec\00", align 1

; Function Attrs: nounwind uwtable
define void @calculate_dominance_info(i32* %idom, %struct.simple_bitmap_def** %doms, i32 %reverse) #0 {
entry:
  %di = alloca %struct.dom_info, align 8
  %0 = bitcast %struct.dom_info* %di to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %tobool = icmp ne %struct.simple_bitmap_def** %doms, null
  %tobool1 = icmp ne i32* %idom, null
  %or.cond = or i1 %tobool, %tobool1
  br i1 %or.cond, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %1 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add1.i = add i32 %1, 2
  %conv.i = zext i32 %add1.i to i64
  %call.i = call noalias i8* @xcalloc(i64 %conv.i, i64 4) #1
  %2 = bitcast i8* %call.i to i32*
  %dfs_parent.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 0
  store i32* %2, i32** %dfs_parent.i, align 8, !tbaa !5
  %mul.i = shl nuw nsw i64 %conv.i, 2
  %call7.i = call noalias i8* @xmalloc(i64 %mul.i) #1
  %3 = bitcast i8* %call7.i to i32*
  %path_min8.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 2
  store i32* %3, i32** %path_min8.i, align 8, !tbaa !8
  %cmp130.i = icmp eq i32 %add1.i, 0
  br i1 %cmp130.i, label %if.else18.thread.i, label %for.body.i

if.else18.thread.i:                               ; preds = %if.end
  %call21140.i = call noalias i8* @xmalloc(i64 %mul.i) #1
  %4 = bitcast i8* %call21140.i to i32*
  %key22141.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 1
  store i32* %4, i32** %key22141.i, align 8, !tbaa !9
  br label %do.body35.i

for.body.i:                                       ; preds = %if.end, %for.body.i
  %indvars.iv136.i = phi i64 [ %indvars.iv.next137.i, %for.body.i ], [ 0, %if.end ]
  %arrayidx.i = getelementptr inbounds i32* %3, i64 %indvars.iv136.i
  %5 = trunc i64 %indvars.iv136.i to i32
  store i32 %5, i32* %arrayidx.i, align 4, !tbaa !1
  %indvars.iv.next137.i = add nuw nsw i64 %indvars.iv136.i, 1
  %lftr.wideiv101 = trunc i64 %indvars.iv.next137.i to i32
  %exitcond102 = icmp eq i32 %lftr.wideiv101, %add1.i
  br i1 %exitcond102, label %for.body26.i.preheader, label %for.body.i

for.body26.i.preheader:                           ; preds = %for.body.i
  %call21.i = call noalias i8* @xmalloc(i64 %mul.i) #1
  %6 = bitcast i8* %call21.i to i32*
  %key22.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 1
  store i32* %6, i32** %key22.i, align 8, !tbaa !9
  br label %for.body26.i

for.body26.i:                                     ; preds = %for.body26.i.preheader, %for.body26.i
  %indvars.iv132.i = phi i64 [ %indvars.iv.next133.i, %for.body26.i ], [ 0, %for.body26.i.preheader ]
  %arrayidx29.i = getelementptr inbounds i32* %6, i64 %indvars.iv132.i
  %7 = trunc i64 %indvars.iv132.i to i32
  store i32 %7, i32* %arrayidx29.i, align 4, !tbaa !1
  %indvars.iv.next133.i = add nuw nsw i64 %indvars.iv132.i, 1
  %lftr.wideiv99 = trunc i64 %indvars.iv.next133.i to i32
  %exitcond100 = icmp eq i32 %lftr.wideiv99, %add1.i
  br i1 %exitcond100, label %do.body35.i, label %for.body26.i

do.body35.i:                                      ; preds = %for.body26.i, %if.else18.thread.i
  %call38.i = call noalias i8* @xcalloc(i64 %conv.i, i64 4) #1
  %8 = bitcast i8* %call38.i to i32*
  %dom.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 5
  store i32* %8, i32** %dom.i, align 8, !tbaa !10
  %call43.i = call noalias i8* @xcalloc(i64 %conv.i, i64 4) #1
  %9 = bitcast i8* %call43.i to i32*
  %bucket.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 3
  store i32* %9, i32** %bucket.i, align 8, !tbaa !11
  %call48.i = call noalias i8* @xcalloc(i64 %conv.i, i64 4) #1
  %10 = bitcast i8* %call48.i to i32*
  %next_bucket.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 4
  store i32* %10, i32** %next_bucket.i, align 8, !tbaa !12
  %call53.i = call noalias i8* @xcalloc(i64 %conv.i, i64 4) #1
  %11 = bitcast i8* %call53.i to i32*
  %set_chain.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 6
  store i32* %11, i32** %set_chain.i, align 8, !tbaa !13
  %call59.i = call noalias i8* @xmalloc(i64 %mul.i) #1
  %12 = bitcast i8* %call59.i to i32*
  %set_size.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 7
  store i32* %12, i32** %set_size.i, align 8, !tbaa !14
  br i1 %cmp130.i, label %init_dom_info.exit, label %for.body63.i

for.body63.i:                                     ; preds = %do.body35.i, %for.body63.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body63.i ], [ 0, %do.body35.i ]
  %arrayidx66.i = getelementptr inbounds i32* %12, i64 %indvars.iv.i
  store i32 1, i32* %arrayidx66.i, align 4, !tbaa !1
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %add1.i
  br i1 %exitcond, label %init_dom_info.exit, label %for.body63.i

init_dom_info.exit:                               ; preds = %for.body63.i, %do.body35.i
  %call74.i = call noalias i8* @xcalloc(i64 %conv.i, i64 4) #1
  %13 = bitcast i8* %call74.i to i32*
  %set_child.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 8
  store i32* %13, i32** %set_child.i, align 8, !tbaa !15
  %14 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add78.i = add i32 %14, 1
  %conv79.i = zext i32 %add78.i to i64
  %call80.i = call noalias i8* @xcalloc(i64 %conv79.i, i64 4) #1
  %15 = bitcast i8* %call80.i to i32*
  %dfs_order.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 9
  store i32* %15, i32** %dfs_order.i, align 8, !tbaa !16
  %call85.i = call noalias i8* @xcalloc(i64 %conv.i, i64 8) #1
  %16 = bitcast i8* %call85.i to %struct.basic_block_def**
  %dfs_to_bb.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 10
  store %struct.basic_block_def** %16, %struct.basic_block_def*** %dfs_to_bb.i, align 8, !tbaa !17
  %dfsnum.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 11
  store i32 1, i32* %dfsnum.i, align 8, !tbaa !18
  %nodes.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 12
  store i32 0, i32* %nodes.i, align 4, !tbaa !19
  %tobool.i = icmp ne i32 %reverse, 0
  %cond.i = select i1 %tobool.i, %struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  %17 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %idxprom.i = sext i32 %17 to i64
  %18 = load i32** %dfs_order.i, align 8, !tbaa !16
  %arrayidx.i31 = getelementptr inbounds i32* %18, i64 %idxprom.i
  store i32 1, i32* %arrayidx.i31, align 4, !tbaa !1
  %19 = load i32* %dfsnum.i, align 8, !tbaa !18
  %idxprom2.i = zext i32 %19 to i64
  %arrayidx3.i = getelementptr inbounds %struct.basic_block_def** %16, i64 %idxprom2.i
  store %struct.basic_block_def* %cond.i, %struct.basic_block_def** %arrayidx3.i, align 8, !tbaa !20
  %inc.i = add i32 %19, 1
  store i32 %inc.i, i32* %dfsnum.i, align 8, !tbaa !18
  call fastcc void @calc_dfs_tree_nonrec(%struct.dom_info* %di, %struct.basic_block_def* %cond.i, i32 %reverse) #1
  br i1 %tobool.i, label %if.then.i, label %if.end24.i

if.then.i:                                        ; preds = %init_dom_info.exit
  %20 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp56.i = icmp sgt i32 %20, 0
  br i1 %cmp56.i, label %for.body.lr.ph.i, label %if.end24.i

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %21 = sext i32 %20 to i64
  br label %for.body.i35

for.body.i35:                                     ; preds = %for.cond.backedge.i, %for.body.lr.ph.i
  %indvars.iv.i33 = phi i64 [ %21, %for.body.lr.ph.i ], [ %indvars.iv.next.i34, %for.cond.backedge.i ]
  %indvars.iv.next.i34 = add nsw i64 %indvars.iv.i33, -1
  %22 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !20
  %data.i = getelementptr inbounds %struct.varray_head_tag* %22, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx7.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %indvars.iv.next.i34
  %23 = load %struct.basic_block_def** %arrayidx7.i, align 8, !tbaa !20
  %index.i = getelementptr inbounds %struct.basic_block_def* %23, i64 0, i32 11
  %24 = load i32* %index.i, align 4, !tbaa !21
  %idxprom8.i = sext i32 %24 to i64
  %25 = load i32** %dfs_order.i, align 8, !tbaa !16
  %arrayidx10.i = getelementptr inbounds i32* %25, i64 %idxprom8.i
  %26 = load i32* %arrayidx10.i, align 4, !tbaa !1
  %tobool11.i = icmp eq i32 %26, 0
  br i1 %tobool11.i, label %if.end.i, label %for.cond.backedge.i

for.cond.backedge.i:                              ; preds = %if.end.i, %for.body.i35
  %27 = trunc i64 %indvars.iv.next.i34 to i32
  %cmp.i = icmp sgt i32 %27, 0
  br i1 %cmp.i, label %for.body.i35, label %if.end24.i

if.end.i:                                         ; preds = %for.body.i35
  %28 = load i32* %dfsnum.i, align 8, !tbaa !18
  store i32 %28, i32* %arrayidx10.i, align 4, !tbaa !1
  %29 = load i32* %dfsnum.i, align 8, !tbaa !18
  %idxprom19.i = zext i32 %29 to i64
  %30 = load %struct.basic_block_def*** %dfs_to_bb.i, align 8, !tbaa !17
  %arrayidx21.i = getelementptr inbounds %struct.basic_block_def** %30, i64 %idxprom19.i
  store %struct.basic_block_def* %23, %struct.basic_block_def** %arrayidx21.i, align 8, !tbaa !20
  %inc23.i = add i32 %29, 1
  store i32 %inc23.i, i32* %dfsnum.i, align 8, !tbaa !18
  call fastcc void @calc_dfs_tree_nonrec(%struct.dom_info* %di, %struct.basic_block_def* %23, i32 %reverse) #1
  br label %for.cond.backedge.i

if.end24.i:                                       ; preds = %for.cond.backedge.i, %if.then.i, %init_dom_info.exit
  %31 = load i32* %dfsnum.i, align 8, !tbaa !18
  %sub26.i = add i32 %31, -1
  store i32 %sub26.i, i32* %nodes.i, align 4, !tbaa !19
  %32 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add.i = add i32 %32, 1
  %cmp28.i = icmp eq i32 %sub26.i, %add.i
  br i1 %cmp28.i, label %calc_dfs_tree.exit, label %if.then29.i

if.then29.i:                                      ; preds = %if.end24.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 344, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.calc_dfs_tree, i64 0, i64 0)) #5
  unreachable

calc_dfs_tree.exit:                               ; preds = %if.end24.i
  %cmp238.i = icmp ugt i32 %sub26.i, 1
  br i1 %cmp238.i, label %while.body.lr.ph.i, label %while.end.i

while.body.lr.ph.i:                               ; preds = %calc_dfs_tree.exit
  %key30.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 1
  %33 = zext i32 %sub26.i to i64
  br label %while.body.i

while.body.i:                                     ; preds = %for.end65.i, %while.body.lr.ph.i
  %indvars.iv.i45 = phi i64 [ %33, %while.body.lr.ph.i ], [ %indvars.iv.next.i50, %for.end65.i ]
  %v.0239.i = phi i32 [ %sub26.i, %while.body.lr.ph.i ], [ %dec.i, %for.end65.i ]
  %34 = load %struct.basic_block_def*** %dfs_to_bb.i, align 8, !tbaa !17
  %arrayidx.i46 = getelementptr inbounds %struct.basic_block_def** %34, i64 %indvars.iv.i45
  %35 = load %struct.basic_block_def** %arrayidx.i46, align 8, !tbaa !20
  %36 = load i32** %dfs_parent.i, align 8, !tbaa !5
  %arrayidx2.i = getelementptr inbounds i32* %36, i64 %indvars.iv.i45
  %37 = load i32* %arrayidx2.i, align 4, !tbaa !1
  %succ.i = getelementptr inbounds %struct.basic_block_def* %35, i64 0, i32 5
  %pred.i = getelementptr inbounds %struct.basic_block_def* %35, i64 0, i32 4
  %e.0.ph.in.i = select i1 %tobool.i, %struct.edge_def** %succ.i, %struct.edge_def** %pred.i
  %e.0.ph.i = load %struct.edge_def** %e.0.ph.in.i, align 8
  %tobool7201.i = icmp eq %struct.edge_def* %e.0.ph.i, null
  %38 = trunc i64 %indvars.iv.i45 to i32
  br i1 %tobool7201.i, label %for.end.i, label %for.body.lr.ph.i47

for.body.lr.ph.i47:                               ; preds = %while.body.i
  br i1 %tobool.i, label %if.end11.us.i, label %if.end11.i

if.end11.us.i:                                    ; preds = %for.body.lr.ph.i47, %if.end25.us.i
  %e.0203.us.i = phi %struct.edge_def* [ %e_next.0.us.pre.i, %if.end25.us.i ], [ %e.0.ph.i, %for.body.lr.ph.i47 ]
  %k.0202.us.i = phi i32 [ %k1.1.k.0.us.i, %if.end25.us.i ], [ %38, %for.body.lr.ph.i47 ]
  %dest.us.i = getelementptr inbounds %struct.edge_def* %e.0203.us.i, i64 0, i32 3
  %succ_next.us.i = getelementptr inbounds %struct.edge_def* %e.0203.us.i, i64 0, i32 1
  %b.0.us.pre.i = load %struct.basic_block_def** %dest.us.i, align 8
  %e_next.0.us.pre.i = load %struct.edge_def** %succ_next.us.i, align 8
  %cmp12.us.i = icmp eq %struct.basic_block_def* %b.0.us.pre.i, %cond.i
  br i1 %cmp12.us.i, label %if.then13.us.i, label %if.else16.us.i

if.else16.us.i:                                   ; preds = %if.end11.us.i
  %index.us.i = getelementptr inbounds %struct.basic_block_def* %b.0.us.pre.i, i64 0, i32 11
  %39 = load i32* %index.us.i, align 4, !tbaa !21
  %idxprom17.us.i = sext i32 %39 to i64
  %40 = load i32** %dfs_order.i, align 8, !tbaa !16
  %arrayidx19.us.i = getelementptr inbounds i32* %40, i64 %idxprom17.us.i
  br label %if.end20.us.i

if.then13.us.i:                                   ; preds = %if.end11.us.i
  %41 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %idxprom14.us.i = sext i32 %41 to i64
  %42 = load i32** %dfs_order.i, align 8, !tbaa !16
  %arrayidx15.us.i = getelementptr inbounds i32* %42, i64 %idxprom14.us.i
  br label %if.end20.us.i

if.end20.us.i:                                    ; preds = %if.then13.us.i, %if.else16.us.i
  %k1.0.in.us.i = phi i32* [ %arrayidx15.us.i, %if.then13.us.i ], [ %arrayidx19.us.i, %if.else16.us.i ]
  %k1.0.us.i = load i32* %k1.0.in.us.i, align 4
  %cmp21.us.i = icmp ugt i32 %k1.0.us.i, %38
  br i1 %cmp21.us.i, label %if.then22.us.i, label %if.end25.us.i

if.then22.us.i:                                   ; preds = %if.end20.us.i
  %idxprom.i.us.i = zext i32 %k1.0.us.i to i64
  %43 = load i32** %set_chain.i, align 8, !tbaa !13
  %arrayidx.i.us.i = getelementptr inbounds i32* %43, i64 %idxprom.i.us.i
  %44 = load i32* %arrayidx.i.us.i, align 4, !tbaa !1
  %tobool.i.us.i = icmp eq i32 %44, 0
  br i1 %tobool.i.us.i, label %if.then.i.us.i, label %if.end.i.us.i

if.end.i.us.i:                                    ; preds = %if.then22.us.i
  %idxprom3.i.us.i = zext i32 %44 to i64
  %arrayidx5.i.us.i = getelementptr inbounds i32* %43, i64 %idxprom3.i.us.i
  %45 = load i32* %arrayidx5.i.us.i, align 4, !tbaa !1
  %tobool6.i.us.i = icmp eq i32 %45, 0
  br i1 %tobool6.i.us.i, label %if.end11.i.us.i, label %if.then7.i.us.i

if.then7.i.us.i:                                  ; preds = %if.end.i.us.i
  call fastcc void @compress(%struct.dom_info* %di, i32 %k1.0.us.i) #1
  %46 = load i32** %set_chain.i, align 8, !tbaa !13
  %arrayidx10.i.us.i = getelementptr inbounds i32* %46, i64 %idxprom.i.us.i
  %47 = load i32* %arrayidx10.i.us.i, align 4, !tbaa !1
  br label %if.end11.i.us.i

if.end11.i.us.i:                                  ; preds = %if.then7.i.us.i, %if.end.i.us.i
  %rep.0.i.us.i = phi i32 [ %47, %if.then7.i.us.i ], [ %44, %if.end.i.us.i ]
  %idxprom12.i.us.i = zext i32 %rep.0.i.us.i to i64
  %48 = load i32** %path_min8.i, align 8, !tbaa !8
  %arrayidx14.i.us.i = getelementptr inbounds i32* %48, i64 %idxprom12.i.us.i
  %49 = load i32* %arrayidx14.i.us.i, align 4, !tbaa !1
  %idxprom15.i.us.i = zext i32 %49 to i64
  %50 = load i32** %key30.i, align 8, !tbaa !9
  %arrayidx16.i.us.i = getelementptr inbounds i32* %50, i64 %idxprom15.i.us.i
  %51 = load i32* %arrayidx16.i.us.i, align 4, !tbaa !1
  %arrayidx19.i.us.i = getelementptr inbounds i32* %48, i64 %idxprom.i.us.i
  %52 = load i32* %arrayidx19.i.us.i, align 4, !tbaa !1
  %idxprom20.i.us.i = zext i32 %52 to i64
  %arrayidx22.i.us.i = getelementptr inbounds i32* %50, i64 %idxprom20.i.us.i
  %53 = load i32* %arrayidx22.i.us.i, align 4, !tbaa !1
  %cmp.i.us.i = icmp ult i32 %51, %53
  %..i.us.i = select i1 %cmp.i.us.i, i32 %49, i32 %52
  br label %eval.exit.us.i

if.then.i.us.i:                                   ; preds = %if.then22.us.i
  %54 = load i32** %path_min8.i, align 8, !tbaa !8
  %arrayidx2.i.us.i = getelementptr inbounds i32* %54, i64 %idxprom.i.us.i
  %55 = load i32* %arrayidx2.i.us.i, align 4, !tbaa !1
  %.pre259.i = load i32** %key30.i, align 8, !tbaa !9
  br label %eval.exit.us.i

eval.exit.us.i:                                   ; preds = %if.then.i.us.i, %if.end11.i.us.i
  %56 = phi i32* [ %.pre259.i, %if.then.i.us.i ], [ %50, %if.end11.i.us.i ]
  %retval.0.i.us.i = phi i32 [ %55, %if.then.i.us.i ], [ %..i.us.i, %if.end11.i.us.i ]
  %idxprom23.us.i = zext i32 %retval.0.i.us.i to i64
  %arrayidx24.us.i = getelementptr inbounds i32* %56, i64 %idxprom23.us.i
  %57 = load i32* %arrayidx24.us.i, align 4, !tbaa !1
  br label %if.end25.us.i

if.end25.us.i:                                    ; preds = %eval.exit.us.i, %if.end20.us.i
  %k1.1.us.i = phi i32 [ %57, %eval.exit.us.i ], [ %k1.0.us.i, %if.end20.us.i ]
  %cmp26.us.i = icmp ult i32 %k1.1.us.i, %k.0202.us.i
  %k1.1.k.0.us.i = select i1 %cmp26.us.i, i32 %k1.1.us.i, i32 %k.0202.us.i
  %tobool7.us.i = icmp eq %struct.edge_def* %e_next.0.us.pre.i, null
  br i1 %tobool7.us.i, label %for.end.i, label %if.end11.us.i

if.end11.i:                                       ; preds = %for.body.lr.ph.i47, %if.end25.i
  %e.0203.i = phi %struct.edge_def* [ %e_next.0.pre.i, %if.end25.i ], [ %e.0.ph.i, %for.body.lr.ph.i47 ]
  %k.0202.i = phi i32 [ %k1.1.k.0.i, %if.end25.i ], [ %38, %for.body.lr.ph.i47 ]
  %src.i = getelementptr inbounds %struct.edge_def* %e.0203.i, i64 0, i32 2
  %pred_next.i = getelementptr inbounds %struct.edge_def* %e.0203.i, i64 0, i32 0
  %b.0.pre.i = load %struct.basic_block_def** %src.i, align 8
  %e_next.0.pre.i = load %struct.edge_def** %pred_next.i, align 8
  %cmp12.i = icmp eq %struct.basic_block_def* %b.0.pre.i, %cond.i
  br i1 %cmp12.i, label %if.then13.i, label %if.else16.i

if.then13.i:                                      ; preds = %if.end11.i
  %58 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %idxprom14.i = sext i32 %58 to i64
  %59 = load i32** %dfs_order.i, align 8, !tbaa !16
  %arrayidx15.i = getelementptr inbounds i32* %59, i64 %idxprom14.i
  br label %if.end20.i

if.else16.i:                                      ; preds = %if.end11.i
  %index.i48 = getelementptr inbounds %struct.basic_block_def* %b.0.pre.i, i64 0, i32 11
  %60 = load i32* %index.i48, align 4, !tbaa !21
  %idxprom17.i = sext i32 %60 to i64
  %61 = load i32** %dfs_order.i, align 8, !tbaa !16
  %arrayidx19.i = getelementptr inbounds i32* %61, i64 %idxprom17.i
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.else16.i, %if.then13.i
  %k1.0.in.i = phi i32* [ %arrayidx15.i, %if.then13.i ], [ %arrayidx19.i, %if.else16.i ]
  %k1.0.i = load i32* %k1.0.in.i, align 4
  %cmp21.i = icmp ugt i32 %k1.0.i, %38
  br i1 %cmp21.i, label %if.then22.i, label %if.end25.i

if.then22.i:                                      ; preds = %if.end20.i
  %idxprom.i.i = zext i32 %k1.0.i to i64
  %62 = load i32** %set_chain.i, align 8, !tbaa !13
  %arrayidx.i.i = getelementptr inbounds i32* %62, i64 %idxprom.i.i
  %63 = load i32* %arrayidx.i.i, align 4, !tbaa !1
  %tobool.i.i = icmp eq i32 %63, 0
  br i1 %tobool.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.then22.i
  %64 = load i32** %path_min8.i, align 8, !tbaa !8
  %arrayidx2.i.i = getelementptr inbounds i32* %64, i64 %idxprom.i.i
  %65 = load i32* %arrayidx2.i.i, align 4, !tbaa !1
  %.pre262.i = load i32** %key30.i, align 8, !tbaa !9
  br label %eval.exit.i

if.end.i.i:                                       ; preds = %if.then22.i
  %idxprom3.i.i = zext i32 %63 to i64
  %arrayidx5.i.i = getelementptr inbounds i32* %62, i64 %idxprom3.i.i
  %66 = load i32* %arrayidx5.i.i, align 4, !tbaa !1
  %tobool6.i.i = icmp eq i32 %66, 0
  br i1 %tobool6.i.i, label %if.end11.i.i, label %if.then7.i.i

if.then7.i.i:                                     ; preds = %if.end.i.i
  call fastcc void @compress(%struct.dom_info* %di, i32 %k1.0.i) #1
  %67 = load i32** %set_chain.i, align 8, !tbaa !13
  %arrayidx10.i.i = getelementptr inbounds i32* %67, i64 %idxprom.i.i
  %68 = load i32* %arrayidx10.i.i, align 4, !tbaa !1
  br label %if.end11.i.i

if.end11.i.i:                                     ; preds = %if.then7.i.i, %if.end.i.i
  %rep.0.i.i = phi i32 [ %68, %if.then7.i.i ], [ %63, %if.end.i.i ]
  %idxprom12.i.i = zext i32 %rep.0.i.i to i64
  %69 = load i32** %path_min8.i, align 8, !tbaa !8
  %arrayidx14.i.i = getelementptr inbounds i32* %69, i64 %idxprom12.i.i
  %70 = load i32* %arrayidx14.i.i, align 4, !tbaa !1
  %idxprom15.i.i = zext i32 %70 to i64
  %71 = load i32** %key30.i, align 8, !tbaa !9
  %arrayidx16.i.i = getelementptr inbounds i32* %71, i64 %idxprom15.i.i
  %72 = load i32* %arrayidx16.i.i, align 4, !tbaa !1
  %arrayidx19.i.i = getelementptr inbounds i32* %69, i64 %idxprom.i.i
  %73 = load i32* %arrayidx19.i.i, align 4, !tbaa !1
  %idxprom20.i.i = zext i32 %73 to i64
  %arrayidx22.i.i = getelementptr inbounds i32* %71, i64 %idxprom20.i.i
  %74 = load i32* %arrayidx22.i.i, align 4, !tbaa !1
  %cmp.i.i = icmp ult i32 %72, %74
  %..i.i = select i1 %cmp.i.i, i32 %70, i32 %73
  br label %eval.exit.i

eval.exit.i:                                      ; preds = %if.end11.i.i, %if.then.i.i
  %75 = phi i32* [ %.pre262.i, %if.then.i.i ], [ %71, %if.end11.i.i ]
  %retval.0.i.i = phi i32 [ %65, %if.then.i.i ], [ %..i.i, %if.end11.i.i ]
  %idxprom23.i = zext i32 %retval.0.i.i to i64
  %arrayidx24.i = getelementptr inbounds i32* %75, i64 %idxprom23.i
  %76 = load i32* %arrayidx24.i, align 4, !tbaa !1
  br label %if.end25.i

if.end25.i:                                       ; preds = %eval.exit.i, %if.end20.i
  %k1.1.i = phi i32 [ %76, %eval.exit.i ], [ %k1.0.i, %if.end20.i ]
  %cmp26.i = icmp ult i32 %k1.1.i, %k.0202.i
  %k1.1.k.0.i = select i1 %cmp26.i, i32 %k1.1.i, i32 %k.0202.i
  %tobool7.i = icmp eq %struct.edge_def* %e_next.0.pre.i, null
  br i1 %tobool7.i, label %for.end.i, label %if.end11.i

for.end.i:                                        ; preds = %if.end25.i, %if.end25.us.i, %while.body.i
  %k.0.lcssa.i = phi i32 [ %38, %while.body.i ], [ %k1.1.k.0.us.i, %if.end25.us.i ], [ %k1.1.k.0.i, %if.end25.i ]
  %77 = load i32** %key30.i, align 8, !tbaa !9
  %arrayidx31.i = getelementptr inbounds i32* %77, i64 %indvars.iv.i45
  store i32 %k.0.lcssa.i, i32* %arrayidx31.i, align 4, !tbaa !1
  %78 = load i32** %path_min8.i, align 8, !tbaa !8
  %arrayidx.i160.i = getelementptr inbounds i32* %78, i64 %indvars.iv.i45
  %79 = load i32** %set_child.i, align 8, !tbaa !15
  %arrayidx4.i219.i = getelementptr inbounds i32* %79, i64 %indvars.iv.i45
  %.pre.i220.i = load i32* %arrayidx4.i219.i, align 4, !tbaa !1
  %80 = load i32* %arrayidx.i160.i, align 4, !tbaa !1
  %idxprom1.i204221.i = zext i32 %80 to i64
  %arrayidx2.i164205222.i = getelementptr inbounds i32* %77, i64 %idxprom1.i204221.i
  %81 = load i32* %arrayidx2.i164205222.i, align 4, !tbaa !1
  %idxprom5.i206223.i = zext i32 %.pre.i220.i to i64
  %arrayidx7.i207224.i = getelementptr inbounds i32* %78, i64 %idxprom5.i206223.i
  %82 = load i32* %arrayidx7.i207224.i, align 4, !tbaa !1
  %idxprom8.i208225.i = zext i32 %82 to i64
  %arrayidx10.i165209226.i = getelementptr inbounds i32* %77, i64 %idxprom8.i208225.i
  %83 = load i32* %arrayidx10.i165209226.i, align 4, !tbaa !1
  %cmp.i166210227.i = icmp ult i32 %81, %83
  %84 = load i32** %set_size.i, align 8, !tbaa !14
  br i1 %cmp.i166210227.i, label %while.body.i.lr.ph.i.preheader, label %while.end.i.i

while.body.i.lr.ph.i.preheader:                   ; preds = %for.end.i
  %85 = load i32** %set_chain.i, align 8, !tbaa !13
  br label %while.body.i.lr.ph.i

while.body.i.lr.ph.i:                             ; preds = %while.body.i.lr.ph.i.preheader, %if.else.i.i
  %idxprom5.i206231.i = phi i64 [ %idxprom5.i206.i, %if.else.i.i ], [ %idxprom5.i206223.i, %while.body.i.lr.ph.i.preheader ]
  %arrayidx4.i230.i = phi i32* [ %arrayidx4.i.i, %if.else.i.i ], [ %arrayidx4.i219.i, %while.body.i.lr.ph.i.preheader ]
  %idxprom3.i163229.i = phi i64 [ %idxprom3.i163.i, %if.else.i.i ], [ %indvars.iv.i45, %while.body.i.lr.ph.i.preheader ]
  %s.0.ph.i228.i = phi i32 [ %96, %if.else.i.i ], [ %38, %while.body.i.lr.ph.i.preheader ]
  %arrayidx12.i.i = getelementptr inbounds i32* %84, i64 %idxprom3.i163229.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.then.i167.i, %while.body.i.lr.ph.i
  %idxprom5.i211.i = phi i64 [ %idxprom5.i206231.i, %while.body.i.lr.ph.i ], [ %idxprom5.i.i, %if.then.i167.i ]
  %86 = load i32* %arrayidx12.i.i, align 4, !tbaa !1
  %arrayidx18.i.i = getelementptr inbounds i32* %79, i64 %idxprom5.i211.i
  %87 = load i32* %arrayidx18.i.i, align 4, !tbaa !1
  %idxprom19.i.i = zext i32 %87 to i64
  %arrayidx21.i.i = getelementptr inbounds i32* %84, i64 %idxprom19.i.i
  %88 = load i32* %arrayidx21.i.i, align 4, !tbaa !1
  %add.i.i = add i32 %88, %86
  %arrayidx27.i.i = getelementptr inbounds i32* %84, i64 %idxprom5.i211.i
  %89 = load i32* %arrayidx27.i.i, align 4, !tbaa !1
  %mul.i.i = shl i32 %89, 1
  %cmp28.i.i = icmp ult i32 %add.i.i, %mul.i.i
  br i1 %cmp28.i.i, label %if.else.i.i, label %if.then.i167.i

if.then.i167.i:                                   ; preds = %while.body.i.i
  %arrayidx33.i.i = getelementptr inbounds i32* %85, i64 %idxprom5.i211.i
  store i32 %s.0.ph.i228.i, i32* %arrayidx33.i.i, align 4, !tbaa !1
  %90 = load i32* %arrayidx4.i230.i, align 4, !tbaa !1
  %idxprom37.i.i = zext i32 %90 to i64
  %arrayidx39.i.i = getelementptr inbounds i32* %79, i64 %idxprom37.i.i
  %91 = load i32* %arrayidx39.i.i, align 4, !tbaa !1
  store i32 %91, i32* %arrayidx4.i230.i, align 4, !tbaa !1
  %92 = load i32* %arrayidx.i160.i, align 4, !tbaa !1
  %idxprom1.i.i = zext i32 %92 to i64
  %arrayidx2.i164.i = getelementptr inbounds i32* %77, i64 %idxprom1.i.i
  %93 = load i32* %arrayidx2.i164.i, align 4, !tbaa !1
  %idxprom5.i.i = zext i32 %91 to i64
  %arrayidx7.i.i = getelementptr inbounds i32* %78, i64 %idxprom5.i.i
  %94 = load i32* %arrayidx7.i.i, align 4, !tbaa !1
  %idxprom8.i.i = zext i32 %94 to i64
  %arrayidx10.i165.i = getelementptr inbounds i32* %77, i64 %idxprom8.i.i
  %95 = load i32* %arrayidx10.i165.i, align 4, !tbaa !1
  %cmp.i166.i = icmp ult i32 %93, %95
  br i1 %cmp.i166.i, label %while.body.i.i, label %while.end.i.i

if.else.i.i:                                      ; preds = %while.body.i.i
  store i32 %86, i32* %arrayidx27.i.i, align 4, !tbaa !1
  %96 = load i32* %arrayidx4.i230.i, align 4, !tbaa !1
  %arrayidx57.i.i = getelementptr inbounds i32* %85, i64 %idxprom3.i163229.i
  store i32 %96, i32* %arrayidx57.i.i, align 4, !tbaa !1
  %idxprom3.i163.i = zext i32 %96 to i64
  %arrayidx4.i.i = getelementptr inbounds i32* %79, i64 %idxprom3.i163.i
  %.pre.i.i = load i32* %arrayidx4.i.i, align 4, !tbaa !1
  %97 = load i32* %arrayidx.i160.i, align 4, !tbaa !1
  %idxprom1.i204.i = zext i32 %97 to i64
  %arrayidx2.i164205.i = getelementptr inbounds i32* %77, i64 %idxprom1.i204.i
  %98 = load i32* %arrayidx2.i164205.i, align 4, !tbaa !1
  %idxprom5.i206.i = zext i32 %.pre.i.i to i64
  %arrayidx7.i207.i = getelementptr inbounds i32* %78, i64 %idxprom5.i206.i
  %99 = load i32* %arrayidx7.i207.i, align 4, !tbaa !1
  %idxprom8.i208.i = zext i32 %99 to i64
  %arrayidx10.i165209.i = getelementptr inbounds i32* %77, i64 %idxprom8.i208.i
  %100 = load i32* %arrayidx10.i165209.i, align 4, !tbaa !1
  %cmp.i166210.i = icmp ult i32 %98, %100
  br i1 %cmp.i166210.i, label %while.body.i.lr.ph.i, label %while.end.i.i

while.end.i.i:                                    ; preds = %if.else.i.i, %if.then.i167.i, %for.end.i
  %idxprom3.i163.lcssa.i = phi i64 [ %indvars.iv.i45, %for.end.i ], [ %idxprom3.i163229.i, %if.then.i167.i ], [ %idxprom3.i163.i, %if.else.i.i ]
  %s.0.ph.i.lcssa.i = phi i32 [ %38, %for.end.i ], [ %s.0.ph.i228.i, %if.then.i167.i ], [ %96, %if.else.i.i ]
  %.lcssa.i = phi i32 [ %80, %for.end.i ], [ %92, %if.then.i167.i ], [ %97, %if.else.i.i ]
  %arrayidx63.i.i = getelementptr inbounds i32* %78, i64 %idxprom3.i163.lcssa.i
  store i32 %.lcssa.i, i32* %arrayidx63.i.i, align 4, !tbaa !1
  %arrayidx66.i.i = getelementptr inbounds i32* %84, i64 %indvars.iv.i45
  %101 = load i32* %arrayidx66.i.i, align 4, !tbaa !1
  %idxprom67.i.i = zext i32 %37 to i64
  %arrayidx69.i.i = getelementptr inbounds i32* %84, i64 %idxprom67.i.i
  %102 = load i32* %arrayidx69.i.i, align 4, !tbaa !1
  %add70.i.i = add i32 %102, %101
  store i32 %add70.i.i, i32* %arrayidx69.i.i, align 4, !tbaa !1
  %103 = load i32* %arrayidx66.i.i, align 4, !tbaa !1
  %mul77.i.i = shl i32 %103, 1
  %cmp78.i.i = icmp ult i32 %add70.i.i, %mul77.i.i
  br i1 %cmp78.i.i, label %if.then79.i.i, label %while.cond87.preheader.i.i

if.then79.i.i:                                    ; preds = %while.end.i.i
  %arrayidx82.i.i = getelementptr inbounds i32* %79, i64 %idxprom67.i.i
  %104 = load i32* %arrayidx82.i.i, align 4, !tbaa !1
  store i32 %s.0.ph.i.lcssa.i, i32* %arrayidx82.i.i, align 4, !tbaa !1
  br label %while.cond87.preheader.i.i

while.cond87.preheader.i.i:                       ; preds = %if.then79.i.i, %while.end.i.i
  %s.1.ph.i.i = phi i32 [ %s.0.ph.i.lcssa.i, %while.end.i.i ], [ %104, %if.then79.i.i ]
  %tobool156.i.i = icmp eq i32 %s.1.ph.i.i, 0
  br i1 %tobool156.i.i, label %link_roots.exit.i, label %while.body88.lr.ph.i.i

while.body88.lr.ph.i.i:                           ; preds = %while.cond87.preheader.i.i
  %105 = load i32** %set_chain.i, align 8, !tbaa !13
  br label %while.body88.i.i

while.body88.i.i:                                 ; preds = %while.body88.i.i, %while.body88.lr.ph.i.i
  %s.1157.i.i = phi i32 [ %s.1.ph.i.i, %while.body88.lr.ph.i.i ], [ %106, %while.body88.i.i ]
  %idxprom89.i.i = zext i32 %s.1157.i.i to i64
  %arrayidx91.i.i = getelementptr inbounds i32* %105, i64 %idxprom89.i.i
  store i32 %37, i32* %arrayidx91.i.i, align 4, !tbaa !1
  %arrayidx94.i.i = getelementptr inbounds i32* %79, i64 %idxprom89.i.i
  %106 = load i32* %arrayidx94.i.i, align 4, !tbaa !1
  %tobool.i168.i = icmp eq i32 %106, 0
  br i1 %tobool.i168.i, label %link_roots.exit.i, label %while.body88.i.i

link_roots.exit.i:                                ; preds = %while.body88.i.i, %while.cond87.preheader.i.i
  %idxprom32.i = zext i32 %k.0.lcssa.i to i64
  %107 = load i32** %bucket.i, align 8, !tbaa !11
  %arrayidx33.i = getelementptr inbounds i32* %107, i64 %idxprom32.i
  %108 = load i32* %arrayidx33.i, align 4, !tbaa !1
  %109 = load i32** %next_bucket.i, align 8, !tbaa !12
  %arrayidx35.i = getelementptr inbounds i32* %109, i64 %indvars.iv.i45
  store i32 %108, i32* %arrayidx35.i, align 4, !tbaa !1
  store i32 %38, i32* %arrayidx33.i, align 4, !tbaa !1
  %arrayidx41.i = getelementptr inbounds i32* %107, i64 %idxprom67.i.i
  %w.0235.i = load i32* %arrayidx41.i, align 4
  %tobool43236.i = icmp eq i32 %w.0235.i, 0
  br i1 %tobool43236.i, label %for.end65.i, label %for.body44.i

for.body44.i:                                     ; preds = %link_roots.exit.i, %eval.exit196.i
  %110 = phi i32* [ %125, %eval.exit196.i ], [ %109, %link_roots.exit.i ]
  %111 = phi i32* [ %126, %eval.exit196.i ], [ %77, %link_roots.exit.i ]
  %112 = phi i32* [ %127, %eval.exit196.i ], [ %78, %link_roots.exit.i ]
  %w.0237.i = phi i32 [ %w.0.i, %eval.exit196.i ], [ %w.0235.i, %link_roots.exit.i ]
  %idxprom.i169.i = zext i32 %w.0237.i to i64
  %113 = load i32** %set_chain.i, align 8, !tbaa !13
  %arrayidx.i171.i = getelementptr inbounds i32* %113, i64 %idxprom.i169.i
  %114 = load i32* %arrayidx.i171.i, align 4, !tbaa !1
  %tobool.i172.i = icmp eq i32 %114, 0
  br i1 %tobool.i172.i, label %if.then.i175.i, label %if.end.i179.i

if.then.i175.i:                                   ; preds = %for.body44.i
  %arrayidx2.i174.i = getelementptr inbounds i32* %112, i64 %idxprom.i169.i
  %115 = load i32* %arrayidx2.i174.i, align 4, !tbaa !1
  br label %eval.exit196.i

if.end.i179.i:                                    ; preds = %for.body44.i
  %idxprom3.i176.i = zext i32 %114 to i64
  %arrayidx5.i177.i = getelementptr inbounds i32* %113, i64 %idxprom3.i176.i
  %116 = load i32* %arrayidx5.i177.i, align 4, !tbaa !1
  %tobool6.i178.i = icmp eq i32 %116, 0
  br i1 %tobool6.i178.i, label %if.end11.i194.i, label %if.then7.i181.i

if.then7.i181.i:                                  ; preds = %if.end.i179.i
  call fastcc void @compress(%struct.dom_info* %di, i32 %w.0237.i) #1
  %117 = load i32** %set_chain.i, align 8, !tbaa !13
  %arrayidx10.i180.i = getelementptr inbounds i32* %117, i64 %idxprom.i169.i
  %118 = load i32* %arrayidx10.i180.i, align 4, !tbaa !1
  %.pre253.i = load i32** %path_min8.i, align 8, !tbaa !8
  %.pre254.i = load i32** %key30.i, align 8, !tbaa !9
  %.pre252.pre.i = load i32** %next_bucket.i, align 8, !tbaa !12
  br label %if.end11.i194.i

if.end11.i194.i:                                  ; preds = %if.then7.i181.i, %if.end.i179.i
  %.pre252.i = phi i32* [ %.pre252.pre.i, %if.then7.i181.i ], [ %110, %if.end.i179.i ]
  %119 = phi i32* [ %.pre254.i, %if.then7.i181.i ], [ %111, %if.end.i179.i ]
  %120 = phi i32* [ %.pre253.i, %if.then7.i181.i ], [ %112, %if.end.i179.i ]
  %rep.0.i182.i = phi i32 [ %118, %if.then7.i181.i ], [ %114, %if.end.i179.i ]
  %idxprom12.i183.i = zext i32 %rep.0.i182.i to i64
  %arrayidx14.i185.i = getelementptr inbounds i32* %120, i64 %idxprom12.i183.i
  %121 = load i32* %arrayidx14.i185.i, align 4, !tbaa !1
  %idxprom15.i186.i = zext i32 %121 to i64
  %arrayidx16.i188.i = getelementptr inbounds i32* %119, i64 %idxprom15.i186.i
  %122 = load i32* %arrayidx16.i188.i, align 4, !tbaa !1
  %arrayidx19.i189.i = getelementptr inbounds i32* %120, i64 %idxprom.i169.i
  %123 = load i32* %arrayidx19.i189.i, align 4, !tbaa !1
  %idxprom20.i190.i = zext i32 %123 to i64
  %arrayidx22.i191.i = getelementptr inbounds i32* %119, i64 %idxprom20.i190.i
  %124 = load i32* %arrayidx22.i191.i, align 4, !tbaa !1
  %cmp.i192.i = icmp ult i32 %122, %124
  %..i193.i = select i1 %cmp.i192.i, i32 %121, i32 %123
  br label %eval.exit196.i

eval.exit196.i:                                   ; preds = %if.end11.i194.i, %if.then.i175.i
  %125 = phi i32* [ %110, %if.then.i175.i ], [ %.pre252.i, %if.end11.i194.i ]
  %126 = phi i32* [ %111, %if.then.i175.i ], [ %119, %if.end11.i194.i ]
  %127 = phi i32* [ %112, %if.then.i175.i ], [ %120, %if.end11.i194.i ]
  %retval.0.i195.i = phi i32 [ %115, %if.then.i175.i ], [ %..i193.i, %if.end11.i194.i ]
  %idxprom46.i = zext i32 %retval.0.i195.i to i64
  %arrayidx48.i = getelementptr inbounds i32* %126, i64 %idxprom46.i
  %128 = load i32* %arrayidx48.i, align 4, !tbaa !1
  %arrayidx51.i = getelementptr inbounds i32* %126, i64 %idxprom.i169.i
  %129 = load i32* %arrayidx51.i, align 4, !tbaa !1
  %cmp52.i = icmp ult i32 %128, %129
  %130 = load i32** %dom.i, align 8, !tbaa !10
  %arrayidx55.i = getelementptr inbounds i32* %130, i64 %idxprom.i169.i
  %retval.0.i195..i = select i1 %cmp52.i, i32 %retval.0.i195.i, i32 %37
  store i32 %retval.0.i195..i, i32* %arrayidx55.i, align 4, !tbaa !1
  %arrayidx64.i = getelementptr inbounds i32* %125, i64 %idxprom.i169.i
  %w.0.i = load i32* %arrayidx64.i, align 4
  %tobool43.i = icmp eq i32 %w.0.i, 0
  br i1 %tobool43.i, label %for.cond42.for.end65_crit_edge.i, label %for.body44.i

for.cond42.for.end65_crit_edge.i:                 ; preds = %eval.exit196.i
  %.pre251.i = load i32** %bucket.i, align 8, !tbaa !11
  br label %for.end65.i

for.end65.i:                                      ; preds = %for.cond42.for.end65_crit_edge.i, %link_roots.exit.i
  %131 = phi i32* [ %.pre251.i, %for.cond42.for.end65_crit_edge.i ], [ %107, %link_roots.exit.i ]
  %arrayidx68.i = getelementptr inbounds i32* %131, i64 %idxprom67.i.i
  store i32 0, i32* %arrayidx68.i, align 4, !tbaa !1
  %dec.i = add i32 %v.0239.i, -1
  %cmp.i49 = icmp ugt i32 %dec.i, 1
  %indvars.iv.next.i50 = add i64 %indvars.iv.i45, -1
  br i1 %cmp.i49, label %while.body.i, label %while.end.i

while.end.i:                                      ; preds = %for.end65.i, %calc_dfs_tree.exit
  %132 = load i32** %dom.i, align 8, !tbaa !10
  %arrayidx70.i = getelementptr inbounds i32* %132, i64 1
  store i32 0, i32* %arrayidx70.i, align 4, !tbaa !1
  %133 = load i32* %nodes.i, align 4, !tbaa !19
  %cmp73199.i = icmp ult i32 %133, 2
  br i1 %cmp73199.i, label %calc_idoms.exit, label %for.body74.lr.ph.i

for.body74.lr.ph.i:                               ; preds = %while.end.i
  %key79.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 1
  %134 = load i32** %key79.i, align 8, !tbaa !9
  br label %for.body74.i

for.body74.i:                                     ; preds = %for.inc93.i, %for.body74.lr.ph.i
  %135 = phi i32 [ %133, %for.body74.lr.ph.i ], [ %139, %for.inc93.i ]
  %v.1200.i = phi i32 [ 2, %for.body74.lr.ph.i ], [ %inc.i51, %for.inc93.i ]
  %idxprom75.i = zext i32 %v.1200.i to i64
  %arrayidx77.i = getelementptr inbounds i32* %132, i64 %idxprom75.i
  %136 = load i32* %arrayidx77.i, align 4, !tbaa !1
  %arrayidx80.i = getelementptr inbounds i32* %134, i64 %idxprom75.i
  %137 = load i32* %arrayidx80.i, align 4, !tbaa !1
  %cmp81.i = icmp eq i32 %136, %137
  br i1 %cmp81.i, label %for.inc93.i, label %if.then82.i

if.then82.i:                                      ; preds = %for.body74.i
  %idxprom86.i = zext i32 %136 to i64
  %arrayidx88.i = getelementptr inbounds i32* %132, i64 %idxprom86.i
  %138 = load i32* %arrayidx88.i, align 4, !tbaa !1
  store i32 %138, i32* %arrayidx77.i, align 4, !tbaa !1
  %.pre.i = load i32* %nodes.i, align 4, !tbaa !19
  br label %for.inc93.i

for.inc93.i:                                      ; preds = %if.then82.i, %for.body74.i
  %139 = phi i32 [ %135, %for.body74.i ], [ %.pre.i, %if.then82.i ]
  %inc.i51 = add i32 %v.1200.i, 1
  %cmp73.i = icmp ugt i32 %inc.i51, %139
  br i1 %cmp73.i, label %calc_idoms.exit, label %for.body74.i

calc_idoms.exit:                                  ; preds = %for.inc93.i, %while.end.i
  br i1 %tobool1, label %for.cond.preheader, label %if.end16

for.cond.preheader:                               ; preds = %calc_idoms.exit
  %140 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp90 = icmp sgt i32 %140, 0
  br i1 %cmp90, label %for.body.lr.ph, label %if.end16

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %141 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !20
  %data = getelementptr inbounds %struct.varray_head_tag* %141, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %142 = load i32** %dfs_order.i, align 8, !tbaa !16
  %143 = load %struct.basic_block_def*** %dfs_to_bb.i, align 8, !tbaa !17
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %144 = phi i32 [ %140, %for.body.lr.ph ], [ %151, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %indvars.iv
  %145 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !20
  %index = getelementptr inbounds %struct.basic_block_def* %145, i64 0, i32 11
  %146 = load i32* %index, align 4, !tbaa !21
  %idxprom4 = sext i32 %146 to i64
  %arrayidx5 = getelementptr inbounds i32* %142, i64 %idxprom4
  %147 = load i32* %arrayidx5, align 4, !tbaa !1
  %idxprom6 = zext i32 %147 to i64
  %arrayidx7 = getelementptr inbounds i32* %132, i64 %idxprom6
  %148 = load i32* %arrayidx7, align 4, !tbaa !1
  %cmp8 = icmp ugt i32 %148, 1
  br i1 %cmp8, label %if.then9, label %for.inc

if.then9:                                         ; preds = %for.body
  %idxprom10 = zext i32 %148 to i64
  %arrayidx11 = getelementptr inbounds %struct.basic_block_def** %143, i64 %idxprom10
  %149 = load %struct.basic_block_def** %arrayidx11, align 8, !tbaa !20
  %index12 = getelementptr inbounds %struct.basic_block_def* %149, i64 0, i32 11
  %150 = load i32* %index12, align 4, !tbaa !21
  %arrayidx14 = getelementptr inbounds i32* %idom, i64 %indvars.iv
  store i32 %150, i32* %arrayidx14, align 4, !tbaa !1
  %.pre = load i32* @n_basic_blocks, align 4, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then9
  %151 = phi i32 [ %144, %for.body ], [ %.pre, %if.then9 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %152 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %152, %151
  br i1 %cmp, label %for.body, label %if.end16

if.end16:                                         ; preds = %for.inc, %for.cond.preheader, %calc_idoms.exit
  br i1 %tobool, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end16
  %153 = load i32* @n_basic_blocks, align 4, !tbaa !1
  call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %doms, i32 %153) #1
  %154 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %idxprom.i52 = sext i32 %154 to i64
  %155 = load i32** %dfs_order.i, align 8, !tbaa !16
  %arrayidx.i54 = getelementptr inbounds i32* %155, i64 %idxprom.i52
  %156 = load i32* %arrayidx.i54, align 4, !tbaa !1
  %157 = load i32* %nodes.i, align 4, !tbaa !19
  %cmp58.i = icmp eq i32 %157, 0
  br i1 %cmp58.i, label %if.end19, label %for.body.i59

for.body.i59:                                     ; preds = %if.then18, %for.inc.i
  %158 = phi i32 [ %171, %for.inc.i ], [ %157, %if.then18 ]
  %i.059.i = phi i32 [ %inc.i69, %for.inc.i ], [ 1, %if.then18 ]
  %cmp1.i = icmp eq i32 %i.059.i, %156
  br i1 %cmp1.i, label %for.inc.i, label %if.end.i64

if.end.i64:                                       ; preds = %for.body.i59
  %idxprom2.i60 = zext i32 %i.059.i to i64
  %159 = load %struct.basic_block_def*** %dfs_to_bb.i, align 8, !tbaa !17
  %arrayidx3.i61 = getelementptr inbounds %struct.basic_block_def** %159, i64 %idxprom2.i60
  %160 = load %struct.basic_block_def** %arrayidx3.i61, align 8, !tbaa !20
  %index.i62 = getelementptr inbounds %struct.basic_block_def* %160, i64 0, i32 11
  %161 = load i32* %index.i62, align 4, !tbaa !21
  %162 = load i32** %dom.i, align 8, !tbaa !10
  %arrayidx5.i = getelementptr inbounds i32* %162, i64 %idxprom2.i60
  %163 = load i32* %arrayidx5.i, align 4, !tbaa !1
  %tobool.i63 = icmp eq i32 %163, 0
  %cmp9.i = icmp eq i32 %163, %156
  %or.cond.i = or i1 %tobool.i63, %cmp9.i
  br i1 %or.cond.i, label %if.else.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.end.i64
  %idxprom14.i65 = zext i32 %163 to i64
  %arrayidx16.i = getelementptr inbounds %struct.basic_block_def** %159, i64 %idxprom14.i65
  %164 = load %struct.basic_block_def** %arrayidx16.i, align 8, !tbaa !20
  %index17.i = getelementptr inbounds %struct.basic_block_def* %164, i64 0, i32 11
  %165 = load i32* %index17.i, align 4, !tbaa !21
  %idxprom18.i = sext i32 %161 to i64
  %arrayidx19.i66 = getelementptr inbounds %struct.simple_bitmap_def** %doms, i64 %idxprom18.i
  %166 = load %struct.simple_bitmap_def** %arrayidx19.i66, align 8, !tbaa !20
  %idxprom20.i = sext i32 %165 to i64
  %arrayidx21.i67 = getelementptr inbounds %struct.simple_bitmap_def** %doms, i64 %idxprom20.i
  %167 = load %struct.simple_bitmap_def** %arrayidx21.i67, align 8, !tbaa !20
  call void @sbitmap_copy(%struct.simple_bitmap_def* %166, %struct.simple_bitmap_def* %167) #1
  br label %if.end30.i

if.else.i:                                        ; preds = %if.end.i64
  %idxprom27.i = sext i32 %161 to i64
  %arrayidx28.i = getelementptr inbounds %struct.simple_bitmap_def** %doms, i64 %idxprom27.i
  br i1 %tobool.i63, label %if.then26.i, label %if.end30.i

if.then26.i:                                      ; preds = %if.else.i
  %168 = load %struct.simple_bitmap_def** %arrayidx28.i, align 8, !tbaa !20
  call void @sbitmap_ones(%struct.simple_bitmap_def* %168) #1
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then26.i, %if.else.i, %if.then10.i
  %arrayidx33.pre-phi.i = phi %struct.simple_bitmap_def** [ %arrayidx28.i, %if.then26.i ], [ %arrayidx19.i66, %if.then10.i ], [ %arrayidx28.i, %if.else.i ]
  %rem.i = and i32 %161, 63
  %sh_prom.i = zext i32 %rem.i to i64
  %shl.i = shl i64 1, %sh_prom.i
  %div.i = lshr i32 %161, 6
  %idxprom31.i = zext i32 %div.i to i64
  %169 = load %struct.simple_bitmap_def** %arrayidx33.pre-phi.i, align 8, !tbaa !20
  %arrayidx34.i = getelementptr inbounds %struct.simple_bitmap_def* %169, i64 0, i32 3, i64 %idxprom31.i
  %170 = load i64* %arrayidx34.i, align 8, !tbaa !24
  %or.i = or i64 %170, %shl.i
  store i64 %or.i, i64* %arrayidx34.i, align 8, !tbaa !24
  %.pre.i68 = load i32* %nodes.i, align 4, !tbaa !19
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end30.i, %for.body.i59
  %171 = phi i32 [ %158, %for.body.i59 ], [ %.pre.i68, %if.end30.i ]
  %inc.i69 = add i32 %i.059.i, 1
  %cmp.i70 = icmp ugt i32 %inc.i69, %171
  br i1 %cmp.i70, label %if.end19, label %for.body.i59

if.end19:                                         ; preds = %for.inc.i, %if.then18, %if.end16
  %172 = load i32** %dfs_parent.i, align 8, !tbaa !5
  %173 = bitcast i32* %172 to i8*
  call void @free(i8* %173) #1
  %174 = load i32** %path_min8.i, align 8, !tbaa !8
  %175 = bitcast i32* %174 to i8*
  call void @free(i8* %175) #1
  %key.i = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 1
  %176 = load i32** %key.i, align 8, !tbaa !9
  %177 = bitcast i32* %176 to i8*
  call void @free(i8* %177) #1
  %178 = load i32** %dom.i, align 8, !tbaa !10
  %179 = bitcast i32* %178 to i8*
  call void @free(i8* %179) #1
  %180 = load i32** %bucket.i, align 8, !tbaa !11
  %181 = bitcast i32* %180 to i8*
  call void @free(i8* %181) #1
  %182 = load i32** %next_bucket.i, align 8, !tbaa !12
  %183 = bitcast i32* %182 to i8*
  call void @free(i8* %183) #1
  %184 = load i32** %set_chain.i, align 8, !tbaa !13
  %185 = bitcast i32* %184 to i8*
  call void @free(i8* %185) #1
  %186 = load i32** %set_size.i, align 8, !tbaa !14
  %187 = bitcast i32* %186 to i8*
  call void @free(i8* %187) #1
  %188 = load i32** %set_child.i, align 8, !tbaa !15
  %189 = bitcast i32* %188 to i8*
  call void @free(i8* %189) #1
  %190 = load i32** %dfs_order.i, align 8, !tbaa !16
  %191 = bitcast i32* %190 to i8*
  call void @free(i8* %191) #1
  %192 = load %struct.basic_block_def*** %dfs_to_bb.i, align 8, !tbaa !17
  %193 = bitcast %struct.basic_block_def** %192 to i8*
  call void @free(i8* %193) #1
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end19
  call void @llvm.lifetime.end(i64 96, i8* %0) #1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #2

declare void @sbitmap_vector_zero(%struct.simple_bitmap_def**, i32) #3

declare void @sbitmap_copy(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #3

declare void @sbitmap_ones(%struct.simple_bitmap_def*) #3

; Function Attrs: nounwind uwtable
define internal fastcc void @compress(%struct.dom_info* nocapture readonly %di, i32 %v) #0 {
entry:
  %idxprom = zext i32 %v to i64
  %set_chain = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 6
  %0 = load i32** %set_chain, align 8, !tbaa !13
  %arrayidx = getelementptr inbounds i32* %0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4, !tbaa !1
  %idxprom1 = zext i32 %1 to i64
  %arrayidx3 = getelementptr inbounds i32* %0, i64 %idxprom1
  %2 = load i32* %arrayidx3, align 4, !tbaa !1
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end27, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @compress(%struct.dom_info* %di, i32 %1)
  %path_min = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 2
  %3 = load i32** %path_min, align 8, !tbaa !8
  %arrayidx5 = getelementptr inbounds i32* %3, i64 %idxprom1
  %4 = load i32* %arrayidx5, align 4, !tbaa !1
  %idxprom6 = zext i32 %4 to i64
  %key = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 1
  %5 = load i32** %key, align 8, !tbaa !9
  %arrayidx7 = getelementptr inbounds i32* %5, i64 %idxprom6
  %6 = load i32* %arrayidx7, align 4, !tbaa !1
  %arrayidx10 = getelementptr inbounds i32* %3, i64 %idxprom
  %7 = load i32* %arrayidx10, align 4, !tbaa !1
  %idxprom11 = zext i32 %7 to i64
  %arrayidx13 = getelementptr inbounds i32* %5, i64 %idxprom11
  %8 = load i32* %arrayidx13, align 4, !tbaa !1
  %cmp = icmp ult i32 %6, %8
  br i1 %cmp, label %if.then14, label %if.end

if.then14:                                        ; preds = %if.then
  store i32 %4, i32* %arrayidx10, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then14, %if.then
  %9 = load i32** %set_chain, align 8, !tbaa !13
  %arrayidx23 = getelementptr inbounds i32* %9, i64 %idxprom1
  %10 = load i32* %arrayidx23, align 4, !tbaa !1
  %arrayidx26 = getelementptr inbounds i32* %9, i64 %idxprom
  store i32 %10, i32* %arrayidx26, align 4, !tbaa !1
  br label %if.end27

if.end27:                                         ; preds = %entry, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @calc_dfs_tree_nonrec(%struct.dom_info* nocapture %di, %struct.basic_block_def* nocapture readonly %bb, i32 %reverse) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add = add nsw i32 %0, 3
  %conv = sext i32 %add to i64
  %mul = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @xmalloc(i64 %mul) #1
  %1 = bitcast i8* %call to %struct.edge_def**
  %tobool = icmp ne i32 %reverse, 0
  %succ = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 5
  %pred = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 4
  %e.0.ph.in = select i1 %tobool, %struct.edge_def** %pred, %struct.edge_def** %succ
  %en_block.0.ph = select i1 %tobool, %struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  %ex_block.0.ph = select i1 %tobool, %struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0), %struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  %e.0.ph = load %struct.edge_def** %e.0.ph.in, align 8
  %dfs_order = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 9
  %dfsnum = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 11
  %dfs_to_bb = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 10
  %dfs_parent = getelementptr inbounds %struct.dom_info* %di, i64 0, i32 0
  br label %while.cond1.outer

while.cond1.outer:                                ; preds = %if.else61, %if.then59, %if.end41, %entry
  %e.0.ph98 = phi %struct.edge_def* [ %e.0.ph, %entry ], [ %e_next.0, %if.end41 ], [ %22, %if.then59 ], [ %23, %if.else61 ]
  %sp.0.ph = phi i32 [ 0, %entry ], [ %inc50, %if.end41 ], [ %dec, %if.then59 ], [ %dec, %if.else61 ]
  %tobool2105 = icmp eq %struct.edge_def* %e.0.ph98, null
  br i1 %tobool2105, label %while.end, label %while.body3.lr.ph

while.body3.lr.ph:                                ; preds = %while.cond1.outer
  br i1 %tobool, label %if.then5.us, label %if.else11

if.then5.us:                                      ; preds = %while.body3.lr.ph, %while.cond1.backedge.us
  %e.0106.us = phi %struct.edge_def* [ %6, %while.cond1.backedge.us ], [ %e.0.ph98, %while.body3.lr.ph ]
  %src.us = getelementptr inbounds %struct.edge_def* %e.0106.us, i64 0, i32 2
  %2 = load %struct.basic_block_def** %src.us, align 8, !tbaa !25
  %cmp.us = icmp eq %struct.basic_block_def* %2, %ex_block.0.ph
  br i1 %cmp.us, label %while.cond1.backedge.us, label %lor.lhs.false.us

lor.lhs.false.us:                                 ; preds = %if.then5.us
  %index.us = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 11
  %3 = load i32* %index.us, align 4, !tbaa !21
  %idxprom.us = sext i32 %3 to i64
  %4 = load i32** %dfs_order, align 8, !tbaa !16
  %arrayidx.us = getelementptr inbounds i32* %4, i64 %idxprom.us
  %5 = load i32* %arrayidx.us, align 4, !tbaa !1
  %tobool7.us = icmp eq i32 %5, 0
  br i1 %tobool7.us, label %if.end9, label %while.cond1.backedge.us

while.cond1.backedge.us:                          ; preds = %if.then5.us, %lor.lhs.false.us
  %pred_next.us = getelementptr inbounds %struct.edge_def* %e.0106.us, i64 0, i32 0
  %6 = load %struct.edge_def** %pred_next.us, align 8, !tbaa !27
  %tobool2.us = icmp eq %struct.edge_def* %6, null
  br i1 %tobool2.us, label %while.end, label %if.then5.us

while.cond1.backedge:                             ; preds = %if.else11, %lor.lhs.false15
  %succ_next = getelementptr inbounds %struct.edge_def* %e.0106, i64 0, i32 1
  %7 = load %struct.edge_def** %succ_next, align 8, !tbaa !28
  %tobool2 = icmp eq %struct.edge_def* %7, null
  br i1 %tobool2, label %while.end, label %if.else11

if.end9:                                          ; preds = %lor.lhs.false.us
  %dest = getelementptr inbounds %struct.edge_def* %e.0106.us, i64 0, i32 3
  %pred10 = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 4
  br label %if.end25

if.else11:                                        ; preds = %while.body3.lr.ph, %while.cond1.backedge
  %e.0106 = phi %struct.edge_def* [ %7, %while.cond1.backedge ], [ %e.0.ph98, %while.body3.lr.ph ]
  %dest12 = getelementptr inbounds %struct.edge_def* %e.0106, i64 0, i32 3
  %8 = load %struct.basic_block_def** %dest12, align 8, !tbaa !29
  %cmp13 = icmp eq %struct.basic_block_def* %8, %ex_block.0.ph
  br i1 %cmp13, label %while.cond1.backedge, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %if.else11
  %index16 = getelementptr inbounds %struct.basic_block_def* %8, i64 0, i32 11
  %9 = load i32* %index16, align 4, !tbaa !21
  %idxprom17 = sext i32 %9 to i64
  %10 = load i32** %dfs_order, align 8, !tbaa !16
  %arrayidx19 = getelementptr inbounds i32* %10, i64 %idxprom17
  %11 = load i32* %arrayidx19, align 4, !tbaa !1
  %tobool20 = icmp eq i32 %11, 0
  br i1 %tobool20, label %if.end22, label %while.cond1.backedge

if.end22:                                         ; preds = %lor.lhs.false15
  %src23 = getelementptr inbounds %struct.edge_def* %e.0106, i64 0, i32 2
  %succ24 = getelementptr inbounds %struct.basic_block_def* %8, i64 0, i32 5
  br label %if.end25

if.end25:                                         ; preds = %if.end22, %if.end9
  %e.0103 = phi %struct.edge_def* [ %e.0106.us, %if.end9 ], [ %e.0106, %if.end22 ]
  %bb.addr.0.in = phi %struct.basic_block_def** [ %dest, %if.end9 ], [ %src23, %if.end22 ]
  %bn.0 = phi %struct.basic_block_def* [ %2, %if.end9 ], [ %8, %if.end22 ]
  %e_next.0.in = phi %struct.edge_def** [ %pred10, %if.end9 ], [ %succ24, %if.end22 ]
  %e_next.0 = load %struct.edge_def** %e_next.0.in, align 8
  %bb.addr.0 = load %struct.basic_block_def** %bb.addr.0.in, align 8
  %cmp26 = icmp eq %struct.basic_block_def* %bn.0, %en_block.0.ph
  br i1 %cmp26, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end25
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 266, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.calc_dfs_tree_nonrec, i64 0, i64 0)) #5
  unreachable

if.end29:                                         ; preds = %if.end25
  %cmp30 = icmp eq %struct.basic_block_def* %bb.addr.0, %en_block.0.ph
  br i1 %cmp30, label %if.else37, label %if.then32

if.then32:                                        ; preds = %if.end29
  %index33 = getelementptr inbounds %struct.basic_block_def* %bb.addr.0, i64 0, i32 11
  %12 = load i32* %index33, align 4, !tbaa !21
  %idxprom34 = sext i32 %12 to i64
  %13 = load i32** %dfs_order, align 8, !tbaa !16
  %arrayidx36 = getelementptr inbounds i32* %13, i64 %idxprom34
  br label %if.end41

if.else37:                                        ; preds = %if.end29
  %14 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %idxprom38 = sext i32 %14 to i64
  %15 = load i32** %dfs_order, align 8, !tbaa !16
  %arrayidx40 = getelementptr inbounds i32* %15, i64 %idxprom38
  br label %if.end41

if.end41:                                         ; preds = %if.else37, %if.then32
  %16 = phi i32* [ %13, %if.then32 ], [ %15, %if.else37 ]
  %my_i.0.in = phi i32* [ %arrayidx36, %if.then32 ], [ %arrayidx40, %if.else37 ]
  %my_i.0 = load i32* %my_i.0.in, align 4
  %17 = load i32* %dfsnum, align 4, !tbaa !18
  %inc = add i32 %17, 1
  store i32 %inc, i32* %dfsnum, align 4, !tbaa !18
  %index42 = getelementptr inbounds %struct.basic_block_def* %bn.0, i64 0, i32 11
  %18 = load i32* %index42, align 4, !tbaa !21
  %idxprom43 = sext i32 %18 to i64
  %arrayidx45 = getelementptr inbounds i32* %16, i64 %idxprom43
  store i32 %17, i32* %arrayidx45, align 4, !tbaa !1
  %idxprom46 = zext i32 %17 to i64
  %19 = load %struct.basic_block_def*** %dfs_to_bb, align 8, !tbaa !17
  %arrayidx47 = getelementptr inbounds %struct.basic_block_def** %19, i64 %idxprom46
  store %struct.basic_block_def* %bn.0, %struct.basic_block_def** %arrayidx47, align 8, !tbaa !20
  %20 = load i32** %dfs_parent, align 8, !tbaa !5
  %arrayidx49 = getelementptr inbounds i32* %20, i64 %idxprom46
  store i32 %my_i.0, i32* %arrayidx49, align 4, !tbaa !1
  %inc50 = add nsw i32 %sp.0.ph, 1
  %idxprom51 = sext i32 %sp.0.ph to i64
  %arrayidx52 = getelementptr inbounds %struct.edge_def** %1, i64 %idxprom51
  store %struct.edge_def* %e.0103, %struct.edge_def** %arrayidx52, align 8, !tbaa !20
  br label %while.cond1.outer

while.end:                                        ; preds = %while.cond1.backedge, %while.cond1.backedge.us, %while.cond1.outer
  %tobool53 = icmp eq i32 %sp.0.ph, 0
  br i1 %tobool53, label %while.end64, label %if.end55

if.end55:                                         ; preds = %while.end
  %dec = add nsw i32 %sp.0.ph, -1
  %idxprom56 = sext i32 %dec to i64
  %arrayidx57 = getelementptr inbounds %struct.edge_def** %1, i64 %idxprom56
  %21 = load %struct.edge_def** %arrayidx57, align 8, !tbaa !20
  br i1 %tobool, label %if.then59, label %if.else61

if.then59:                                        ; preds = %if.end55
  %pred_next60 = getelementptr inbounds %struct.edge_def* %21, i64 0, i32 0
  %22 = load %struct.edge_def** %pred_next60, align 8, !tbaa !27
  br label %while.cond1.outer

if.else61:                                        ; preds = %if.end55
  %succ_next62 = getelementptr inbounds %struct.edge_def* %21, i64 0, i32 1
  %23 = load %struct.edge_def** %succ_next62, align 8, !tbaa !28
  br label %while.cond1.outer

while.end64:                                      ; preds = %while.end
  tail call void @free(i8* %call)
  ret void
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #4

declare noalias i8* @xmalloc(i64) #3

declare noalias i8* @xcalloc(i64, i64) #3

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !7, i64 0}
!6 = metadata !{metadata !"dom_info", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !7, i64 80, metadata !2, i64 88, metadata !2, i64 92}
!7 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!8 = metadata !{metadata !6, metadata !7, i64 16}
!9 = metadata !{metadata !6, metadata !7, i64 8}
!10 = metadata !{metadata !6, metadata !7, i64 40}
!11 = metadata !{metadata !6, metadata !7, i64 24}
!12 = metadata !{metadata !6, metadata !7, i64 32}
!13 = metadata !{metadata !6, metadata !7, i64 48}
!14 = metadata !{metadata !6, metadata !7, i64 56}
!15 = metadata !{metadata !6, metadata !7, i64 64}
!16 = metadata !{metadata !6, metadata !7, i64 72}
!17 = metadata !{metadata !6, metadata !7, i64 80}
!18 = metadata !{metadata !6, metadata !2, i64 88}
!19 = metadata !{metadata !6, metadata !2, i64 92}
!20 = metadata !{metadata !7, metadata !7, i64 0}
!21 = metadata !{metadata !22, metadata !2, i64 88}
!22 = metadata !{metadata !"basic_block_def", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !7, i64 80, metadata !2, i64 88, metadata !2, i64 92, metadata !23, i64 96, metadata !2, i64 104, metadata !2, i64 108}
!23 = metadata !{metadata !"long long", metadata !3, i64 0}
!24 = metadata !{metadata !23, metadata !23, i64 0}
!25 = metadata !{metadata !26, metadata !7, i64 16}
!26 = metadata !{metadata !"edge_def", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !2, i64 48, metadata !2, i64 52, metadata !23, i64 56}
!27 = metadata !{metadata !26, metadata !7, i64 0}
!28 = metadata !{metadata !26, metadata !7, i64 8}
!29 = metadata !{metadata !26, metadata !7, i64 24}
