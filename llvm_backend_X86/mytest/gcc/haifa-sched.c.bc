; ModuleID = 'haifa-sched.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%struct.haifa_insn_data = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.function_unit_desc = type { i8*, i32, i32, i32, i32, i32, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i32, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%union.tree_node = type opaque
%struct.attribute_spec = type opaque
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.sched_info = type { void (%struct.ready_list*)*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, void (%struct.rtx_def*, %struct.bitmap_head_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%struct.ready_list = type { %struct.rtx_def**, i32, i32, i32 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@sched_verbose = global i32 0, align 4
@sched_dump = global %struct._IO_FILE* null, align 8
@.str = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@sched_verbose_param = internal unnamed_addr global i32 0, align 4
@.str1 = private unnamed_addr constant [35 x i8] c"fix_sched_param: unknown param: %s\00", align 1
@h_i_d = common global %struct.haifa_insn_data* null, align 8
@unit_last_insn = internal unnamed_addr global [78 x %struct.rtx_def*] zeroinitializer, align 16
@function_units = external constant [0 x %struct.function_unit_desc]
@unit_tick = internal unnamed_addr global [78 x i32] zeroinitializer, align 16
@targetm = external global %struct.gcc_target
@basic_block_info = external global %struct.varray_head_tag*
@.str2 = private unnamed_addr constant [14 x i8] c"haifa-sched.c\00", align 1
@__FUNCTION__.rm_line_notes = private unnamed_addr constant [14 x i8] c"rm_line_notes\00", align 1
@line_note_head = internal unnamed_addr global %struct.rtx_def** null, align 8
@old_max_uid = internal unnamed_addr global i32 0, align 4
@.str3 = private unnamed_addr constant [31 x i8] c";; added %d line-number notes\0A\00", align 1
@.str4 = private unnamed_addr constant [33 x i8] c";; deleted %d line-number notes\0A\00", align 1
@note_list = internal unnamed_addr global %struct.rtx_def* null, align 8
@rtx_class = external constant [153 x i8]
@__FUNCTION__.rm_other_notes = private unnamed_addr constant [15 x i8] c"rm_other_notes\00", align 1
@last_scheduled_insn = internal unnamed_addr global %struct.rtx_def* null, align 8
@current_sched_info = common global %struct.sched_info* null, align 8
@__FUNCTION__.schedule_block = private unnamed_addr constant [15 x i8] c"schedule_block\00", align 1
@.str5 = private unnamed_addr constant [61 x i8] c";;   ======================================================\0A\00", align 1
@.str6 = private unnamed_addr constant [51 x i8] c";;   -- basic block %d from %d to %d -- %s reload\0A\00", align 1
@reload_completed = external global i32
@.str7 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str8 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@issue_rate = internal unnamed_addr global i32 0, align 4
@q_ptr = internal unnamed_addr global i32 0, align 4
@q_size = internal unnamed_addr global i32 0, align 4
@last_clock_var = internal unnamed_addr global i32 0, align 4
@insn_queue = internal unnamed_addr global [128 x %struct.rtx_def*] zeroinitializer, align 16
@clock_var = internal unnamed_addr global i32 0, align 4
@.str10 = private unnamed_addr constant [39 x i8] c";;\09\09Ready list after queue_to_ready:  \00", align 1
@.str11 = private unnamed_addr constant [27 x i8] c"\0A;;\09Ready list (t =%3d):  \00", align 1
@.str12 = private unnamed_addr constant [25 x i8] c";;\09Ready list (final):  \00", align 1
@.str13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str14 = private unnamed_addr constant [41 x i8] c";;   total time = %d\0A;;   new head = %d\0A\00", align 1
@.str15 = private unnamed_addr constant [21 x i8] c";;   new tail = %d\0A\0A\00", align 1
@stderr = external constant %struct._IO_FILE*
@n_basic_blocks = external global i32
@write_symbols = external global i32
@.str16 = private unnamed_addr constant [42 x i8] c";;\09\09--> scheduling insn <<<%d>>> on unit \00", align 1
@.str17 = private unnamed_addr constant [35 x i8] c";;\09\09dependences resolved: insn %s \00", align 1
@.str18 = private unnamed_addr constant [12 x i8] c"into ready\0A\00", align 1
@.str19 = private unnamed_addr constant [25 x i8] c"into queue with cost=%d\0A\00", align 1
@.str20 = private unnamed_addr constant [25 x i8] c";;\09\09Ready-->Q: insn %s: \00", align 1
@.str21 = private unnamed_addr constant [23 x i8] c"queued for %d cycles.\0A\00", align 1
@__FUNCTION__.ready_remove_first = private unnamed_addr constant [19 x i8] c"ready_remove_first\00", align 1
@.str22 = private unnamed_addr constant [5 x i8] c"  %s\00", align 1
@.str23 = private unnamed_addr constant [25 x i8] c";;\09\09Q-->Ready: insn %s: \00", align 1
@.str24 = private unnamed_addr constant [32 x i8] c"moving to ready without stalls\0A\00", align 1
@.str25 = private unnamed_addr constant [32 x i8] c"moving to ready with %d stalls\0A\00", align 1
@__FUNCTION__.ready_lastpos = private unnamed_addr constant [14 x i8] c"ready_lastpos\00", align 1

; Function Attrs: nounwind uwtable
define void @fix_sched_param(i8* %param, i8* nocapture readonly %val) #0 {
entry:
  %call = tail call i32 @strcmp(i8* %param, i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0)) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @atoi(i8* %val) #5
  store i32 %call1, i32* @sched_verbose_param, align 4, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([35 x i8]* @.str1, i64 0, i64 0), i8* %param) #5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #1

; Function Attrs: nounwind readonly
declare i32 @atoi(i8* nocapture) #1

declare void @warning(i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define i32 @insn_unit(%struct.rtx_def* %insn) #3 {
entry:
  %fld = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %0 = load i32* %rtint, align 4, !tbaa !1
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %units = getelementptr inbounds %struct.haifa_insn_data* %1, i64 %idxprom, i32 9
  %2 = load i16* %units, align 2, !tbaa !7
  %conv = sext i16 %2 to i32
  %cmp = icmp eq i16 %2, 0
  br i1 %cmp, label %if.then, label %if.end35

if.then:                                          ; preds = %entry
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %3 = load i32* %rtint5, align 4, !tbaa !1
  %cmp6 = icmp sgt i32 %3, -1
  br i1 %cmp6, label %if.end21, label %cond.end

cond.end:                                         ; preds = %if.then
  %call = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %.pr = load i32* %rtint5, align 4, !tbaa !1
  %cmp14 = icmp slt i32 %.pr, 0
  br i1 %cmp14, label %if.end35, label %if.end21

if.end21:                                         ; preds = %cond.end, %if.then
  %call17 = tail call i32 @function_units_used(%struct.rtx_def* %insn) #5
  %call17.lobit = lshr i32 %call17, 31
  %call17.lobit.not = xor i32 %call17.lobit, 1
  %inc.call17 = add nsw i32 %call17.lobit.not, %call17
  %cmp22 = icmp sgt i32 %inc.call17, -1
  br i1 %cmp22, label %if.then26, label %if.end35

if.then26:                                        ; preds = %if.end21
  %conv27 = trunc i32 %inc.call17 to i16
  %4 = load i32* %rtint, align 4, !tbaa !1
  %idxprom31 = sext i32 %4 to i64
  %5 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %units33 = getelementptr inbounds %struct.haifa_insn_data* %5, i64 %idxprom31, i32 9
  store i16 %conv27, i16* %units33, align 2, !tbaa !7
  br label %if.end35

if.end35:                                         ; preds = %cond.end, %if.end21, %if.then26, %entry
  %unit.1 = phi i32 [ %inc.call17, %if.then26 ], [ %conv, %entry ], [ %inc.call17, %if.end21 ], [ -1, %cond.end ]
  %cmp36 = icmp sgt i32 %unit.1, 0
  %sub = sext i1 %cmp36 to i32
  %cond41 = add nsw i32 %sub, %unit.1
  ret i32 %cond41
}

declare i32 @recog_memoized_1(%struct.rtx_def*) #2

declare i32 @function_units_used(%struct.rtx_def*) #2

; Function Attrs: nounwind readonly uwtable
define %struct.rtx_def* @get_unit_last_insn(i32 %instance) #4 {
entry:
  %idxprom = sext i32 %instance to i64
  %arrayidx = getelementptr inbounds [78 x %struct.rtx_def*]* @unit_last_insn, i64 0, i64 %idxprom
  %0 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !5
  ret %struct.rtx_def* %0
}

; Function Attrs: inlinehint nounwind uwtable
define i32 @insn_issue_delay(%struct.rtx_def* %insn) #3 {
entry:
  %fld.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1
  %rtint.i = bitcast [1 x %union.rtunion_def]* %fld.i to i32*
  %0 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom.i = sext i32 %0 to i64
  %1 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %units.i = getelementptr inbounds %struct.haifa_insn_data* %1, i64 %idxprom.i, i32 9
  %2 = load i16* %units.i, align 2, !tbaa !7
  %conv.i = sext i16 %2 to i32
  %cmp.i = icmp eq i16 %2, 0
  br i1 %cmp.i, label %if.then.i, label %insn_unit.exit

if.then.i:                                        ; preds = %entry
  %arrayidx4.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint5.i = bitcast %union.rtunion_def* %arrayidx4.i to i32*
  %3 = load i32* %rtint5.i, align 4, !tbaa !1
  %cmp6.i = icmp sgt i32 %3, -1
  br i1 %cmp6.i, label %if.end21.i, label %cond.end.i

cond.end.i:                                       ; preds = %if.then.i
  %call.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %.pr.i = load i32* %rtint5.i, align 4, !tbaa !1
  %cmp14.i = icmp slt i32 %.pr.i, 0
  br i1 %cmp14.i, label %insn_unit.exit, label %if.end21.i

if.end21.i:                                       ; preds = %cond.end.i, %if.then.i
  %call17.i = tail call i32 @function_units_used(%struct.rtx_def* %insn) #5
  %call17.lobit.i = lshr i32 %call17.i, 31
  %call17.lobit.not.i = xor i32 %call17.lobit.i, 1
  %inc.call17.i = add nsw i32 %call17.lobit.not.i, %call17.i
  %cmp22.i = icmp sgt i32 %inc.call17.i, -1
  br i1 %cmp22.i, label %if.then26.i, label %insn_unit.exit

if.then26.i:                                      ; preds = %if.end21.i
  %conv27.i = trunc i32 %inc.call17.i to i16
  %4 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom31.i = sext i32 %4 to i64
  %5 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %units33.i = getelementptr inbounds %struct.haifa_insn_data* %5, i64 %idxprom31.i, i32 9
  store i16 %conv27.i, i16* %units33.i, align 2, !tbaa !7
  br label %insn_unit.exit

insn_unit.exit:                                   ; preds = %entry, %cond.end.i, %if.end21.i, %if.then26.i
  %unit.1.i = phi i32 [ %inc.call17.i, %if.then26.i ], [ %conv.i, %entry ], [ %inc.call17.i, %if.end21.i ], [ -1, %cond.end.i ]
  %cmp36.i = icmp sgt i32 %unit.1.i, 0
  %sub.i = sext i1 %cmp36.i to i32
  %cond41.i = add nsw i32 %sub.i, %unit.1.i
  %cmp = icmp sgt i32 %cond41.i, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %insn_unit.exit
  %idxprom = sext i32 %cond41.i to i64
  %blockage_range_function = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom, i32 9
  %6 = load i32 (%struct.rtx_def*)** %blockage_range_function, align 8, !tbaa !10
  %tobool = icmp eq i32 (%struct.rtx_def*)* %6, null
  br i1 %tobool, label %if.end32, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %blockage_function = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom, i32 10
  %7 = load i32 (%struct.rtx_def*, %struct.rtx_def*)** %blockage_function, align 8, !tbaa !12
  %tobool3 = icmp eq i32 (%struct.rtx_def*, %struct.rtx_def*)* %7, null
  br i1 %tobool3, label %if.end32, label %if.then4

if.then4:                                         ; preds = %land.lhs.true
  %call8 = tail call i32 %7(%struct.rtx_def* %insn, %struct.rtx_def* %insn) #5
  br label %if.end32

if.else:                                          ; preds = %insn_unit.exit
  %tobool952 = icmp eq i32 %cond41.i, -1
  br i1 %tobool952, label %if.end32, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.else
  %neg = xor i32 %cond41.i, -1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %unit.055 = phi i32 [ %neg, %for.body.lr.ph ], [ %shr, %for.inc ]
  %delay.054 = phi i32 [ 0, %for.body.lr.ph ], [ %delay.1, %for.inc ]
  %and = and i32 %unit.055, 1
  %cmp10 = icmp eq i32 %and, 0
  br i1 %cmp10, label %for.inc, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %for.body
  %blockage_range_function14 = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %indvars.iv, i32 9
  %8 = load i32 (%struct.rtx_def*)** %blockage_range_function14, align 8, !tbaa !10
  %tobool15 = icmp eq i32 (%struct.rtx_def*)* %8, null
  br i1 %tobool15, label %for.inc, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true11
  %blockage_function19 = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %indvars.iv, i32 10
  %9 = load i32 (%struct.rtx_def*, %struct.rtx_def*)** %blockage_function19, align 8, !tbaa !12
  %tobool20 = icmp eq i32 (%struct.rtx_def*, %struct.rtx_def*)* %9, null
  br i1 %tobool20, label %for.inc, label %if.then21

if.then21:                                        ; preds = %land.lhs.true16
  %call25 = tail call i32 %9(%struct.rtx_def* %insn, %struct.rtx_def* %insn) #5
  %cmp26 = icmp sgt i32 %delay.054, %call25
  br i1 %cmp26, label %for.inc, label %cond.false

cond.false:                                       ; preds = %if.then21
  %call30 = tail call i32 %9(%struct.rtx_def* %insn, %struct.rtx_def* %insn) #5
  br label %for.inc

for.inc:                                          ; preds = %cond.false, %if.then21, %land.lhs.true16, %land.lhs.true11, %for.body
  %delay.1 = phi i32 [ %delay.054, %land.lhs.true16 ], [ %delay.054, %land.lhs.true11 ], [ %delay.054, %for.body ], [ %call30, %cond.false ], [ %delay.054, %if.then21 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %shr = ashr i32 %unit.055, 1
  %tobool9 = icmp eq i32 %shr, 0
  br i1 %tobool9, label %if.end32, label %for.body

if.end32:                                         ; preds = %for.inc, %if.else, %land.lhs.true, %if.then, %if.then4
  %delay.2 = phi i32 [ %call8, %if.then4 ], [ 0, %land.lhs.true ], [ 0, %if.then ], [ 0, %if.else ], [ %delay.1, %for.inc ]
  ret i32 %delay.2
}

; Function Attrs: inlinehint nounwind uwtable
define i32 @actual_hazard_this_instance(i32 %unit, i32 %instance, %struct.rtx_def* %insn, i32 %clock, i32 %cost) #3 {
entry:
  %idxprom = sext i32 %instance to i64
  %arrayidx = getelementptr inbounds [78 x i32]* @unit_tick, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !1
  %sub = sub nsw i32 %0, %clock
  %cmp = icmp sgt i32 %sub, %cost
  br i1 %cmp, label %if.then, label %if.end28

if.then:                                          ; preds = %entry
  %idxprom1 = sext i32 %unit to i64
  %blockage_range_function = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom1, i32 9
  %1 = load i32 (%struct.rtx_def*)** %blockage_range_function, align 8, !tbaa !10
  %tobool = icmp eq i32 (%struct.rtx_def*)* %1, null
  br i1 %tobool, label %if.end22, label %if.then3

if.then3:                                         ; preds = %if.then
  %blockage_function = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom1, i32 10
  %2 = load i32 (%struct.rtx_def*, %struct.rtx_def*)** %blockage_function, align 8, !tbaa !12
  %tobool6 = icmp eq i32 (%struct.rtx_def*, %struct.rtx_def*)* %2, null
  br i1 %tobool6, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.then3
  %arrayidx12 = getelementptr inbounds [78 x %struct.rtx_def*]* @unit_last_insn, i64 0, i64 %idxprom
  %3 = load %struct.rtx_def** %arrayidx12, align 8, !tbaa !5
  %call = tail call i32 %2(%struct.rtx_def* %3, %struct.rtx_def* %insn) #5
  %max_blockage = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom1, i32 8
  %4 = load i32* %max_blockage, align 8, !tbaa !13
  %sub15 = add i32 %call, %0
  %add = sub i32 %sub15, %4
  br label %if.end22

if.else:                                          ; preds = %if.then3
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %5 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom.i = sext i32 %5 to i64
  %6 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %blockage2.i = getelementptr inbounds %struct.haifa_insn_data* %6, i64 %idxprom.i, i32 5
  %7 = load i32* %blockage2.i, align 4, !tbaa !14
  %shr.i = lshr i32 %7, 16
  %add.i = add nsw i32 %unit, 1
  %cmp.i = icmp eq i32 %shr.i, %add.i
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.else
  %call.i = tail call i32 %1(%struct.rtx_def* %insn) #5
  %shl.i = shl i32 %add.i, 8
  %shr6.i = lshr i32 %call.i, 16
  %or.i = or i32 %shr6.i, %shl.i
  %shl7.i = shl i32 %or.i, 8
  %and.i = and i32 %call.i, 65535
  %or8.i = or i32 %shl7.i, %and.i
  %8 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom12.i = sext i32 %8 to i64
  %9 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %blockage14.i = getelementptr inbounds %struct.haifa_insn_data* %9, i64 %idxprom12.i, i32 5
  store i32 %or8.i, i32* %blockage14.i, align 4, !tbaa !14
  br label %blockage_range.exit

if.else.i:                                        ; preds = %if.else
  %10 = shl i32 %7, 8
  %shl17.i = and i32 %10, 16711680
  %and18.i = and i32 %7, 255
  %or19.i = or i32 %shl17.i, %and18.i
  br label %blockage_range.exit

blockage_range.exit:                              ; preds = %if.then.i, %if.else.i
  %range.0.i = phi i32 [ %call.i, %if.then.i ], [ %or19.i, %if.else.i ]
  %and = and i32 %range.0.i, 65535
  %max_blockage19 = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom1, i32 8
  %11 = load i32* %max_blockage19, align 8, !tbaa !13
  %sub20 = sub i32 %0, %11
  %add21 = add i32 %sub20, %and
  br label %if.end22

if.end22:                                         ; preds = %if.then, %if.then7, %blockage_range.exit
  %tick.0 = phi i32 [ %add, %if.then7 ], [ %add21, %blockage_range.exit ], [ %0, %if.then ]
  %sub23 = sub nsw i32 %tick.0, %clock
  %cmp24 = icmp sgt i32 %sub23, %cost
  %sub23.cost = select i1 %cmp24, i32 %sub23, i32 %cost
  ret i32 %sub23.cost

if.end28:                                         ; preds = %entry
  ret i32 %cost
}

; Function Attrs: inlinehint nounwind uwtable
define i32 @insn_cost(%struct.rtx_def* %insn, %struct.rtx_def* %link, %struct.rtx_def* %used) #3 {
entry:
  %fld = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %0 = load i32* %rtint, align 4, !tbaa !1
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %cost2 = getelementptr inbounds %struct.haifa_insn_data* %1, i64 %idxprom, i32 8
  %2 = load i16* %cost2, align 2, !tbaa !15
  %conv = sext i16 %2 to i32
  %cmp = icmp eq i16 %2, 0
  br i1 %cmp, label %if.then, label %if.end36

if.then:                                          ; preds = %entry
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint6 = bitcast %union.rtunion_def* %arrayidx5 to i32*
  %3 = load i32* %rtint6, align 4, !tbaa !1
  %cmp7 = icmp sgt i32 %3, -1
  br i1 %cmp7, label %if.else, label %cond.end

cond.end:                                         ; preds = %if.then
  %call = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %.pr = load i32* %rtint6, align 4, !tbaa !1
  %cmp15 = icmp slt i32 %.pr, 0
  br i1 %cmp15, label %if.then17, label %if.else

if.then17:                                        ; preds = %cond.end
  %4 = load i32* %rtint, align 4, !tbaa !1
  %idxprom21 = sext i32 %4 to i64
  %5 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %cost23 = getelementptr inbounds %struct.haifa_insn_data* %5, i64 %idxprom21, i32 8
  store i16 1, i16* %cost23, align 2, !tbaa !15
  br label %return

if.else:                                          ; preds = %if.then, %cond.end
  %call24 = tail call i32 @result_ready_cost(%struct.rtx_def* %insn) #5
  %cmp25 = icmp slt i32 %call24, 1
  %.call24 = select i1 %cmp25, i32 1, i32 %call24
  %conv28 = trunc i32 %.call24 to i16
  %6 = load i32* %rtint, align 4, !tbaa !1
  %idxprom32 = sext i32 %6 to i64
  %7 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %cost34 = getelementptr inbounds %struct.haifa_insn_data* %7, i64 %idxprom32, i32 8
  store i16 %conv28, i16* %cost34, align 2, !tbaa !15
  br label %if.end36

if.end36:                                         ; preds = %if.else, %entry
  %cost.0 = phi i32 [ %.call24, %if.else ], [ %conv, %entry ]
  %cmp37 = icmp eq %struct.rtx_def* %link, null
  %cmp39 = icmp eq %struct.rtx_def* %used, null
  %or.cond = and i1 %cmp37, %cmp39
  br i1 %or.cond, label %return, label %if.end42

if.end42:                                         ; preds = %if.end36
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %used, i64 0, i32 1, i64 4
  %rtint45 = bitcast %union.rtunion_def* %arrayidx44 to i32*
  %8 = load i32* %rtint45, align 4, !tbaa !1
  %cmp46 = icmp sgt i32 %8, -1
  br i1 %cmp46, label %if.end62, label %cond.end54

cond.end54:                                       ; preds = %if.end42
  %call53 = tail call i32 @recog_memoized_1(%struct.rtx_def* %used) #5
  %.pr117 = load i32* %rtint45, align 4, !tbaa !1
  %cmp59 = icmp slt i32 %.pr117, 0
  br i1 %cmp59, label %if.then61, label %if.end62

if.then61:                                        ; preds = %cond.end54
  %9 = getelementptr inbounds %struct.rtx_def* %link, i64 0, i32 0
  %bf.load = load i32* %9, align 8
  %bf.set = or i32 %bf.load, 33554432
  store i32 %bf.set, i32* %9, align 8
  br label %if.end62

if.end62:                                         ; preds = %if.end42, %if.then61, %cond.end54
  %10 = getelementptr inbounds %struct.rtx_def* %link, i64 0, i32 0
  %bf.load63 = load i32* %10, align 8
  %bf.clear64 = and i32 %bf.load63, 33554432
  %tobool = icmp eq i32 %bf.clear64, 0
  br i1 %tobool, label %if.else66, label %return

if.else66:                                        ; preds = %if.end62
  %bf.clear69 = and i32 %bf.load63, 16777216
  %tobool70 = icmp eq i32 %bf.clear69, 0
  %11 = load i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 0), align 8
  %tobool72 = icmp ne i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* %11, null
  %or.cond91 = and i1 %tobool70, %tobool72
  br i1 %or.cond91, label %if.then73, label %return

if.then73:                                        ; preds = %if.else66
  %call74 = tail call i32 %11(%struct.rtx_def* %used, %struct.rtx_def* %link, %struct.rtx_def* %insn, i32 %cost.0) #5
  %cmp75 = icmp slt i32 %call74, 1
  br i1 %cmp75, label %if.then77, label %if.end81

if.then77:                                        ; preds = %if.then73
  %bf.load78 = load i32* %10, align 8
  %bf.set80 = or i32 %bf.load78, 33554432
  store i32 %bf.set80, i32* %10, align 8
  br label %if.end81

if.end81:                                         ; preds = %if.then77, %if.then73
  %ncost.0 = phi i32 [ 0, %if.then77 ], [ %call74, %if.then73 ]
  %cmp82 = icmp eq i32 %cost.0, %ncost.0
  br i1 %cmp82, label %if.then84, label %return

if.then84:                                        ; preds = %if.end81
  %bf.load85 = load i32* %10, align 8
  %bf.set87 = or i32 %bf.load85, 16777216
  store i32 %bf.set87, i32* %10, align 8
  br label %return

return:                                           ; preds = %if.else66, %if.end62, %if.then84, %if.end81, %if.end36, %if.then17
  %retval.0 = phi i32 [ 1, %if.then17 ], [ %cost.0, %if.end36 ], [ %cost.0, %if.else66 ], [ 0, %if.end62 ], [ %cost.0, %if.then84 ], [ %ncost.0, %if.end81 ]
  ret i32 %retval.0
}

declare i32 @result_ready_cost(%struct.rtx_def*) #2

; Function Attrs: inlinehint nounwind uwtable
define void @ready_add(%struct.ready_list* nocapture %ready, %struct.rtx_def* %insn) #3 {
entry:
  %first = getelementptr inbounds %struct.ready_list* %ready, i64 0, i32 2
  %0 = load i32* %first, align 4, !tbaa !16
  %n_ready = getelementptr inbounds %struct.ready_list* %ready, i64 0, i32 3
  %1 = load i32* %n_ready, align 4, !tbaa !18
  %cmp = icmp eq i32 %0, %1
  %vec = getelementptr inbounds %struct.ready_list* %ready, i64 0, i32 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %veclen = getelementptr inbounds %struct.ready_list* %ready, i64 0, i32 1
  %idx.ext2 = sext i32 %0 to i64
  %cmp.i = icmp eq i32 %0, 0
  br i1 %cmp.i, label %if.then.i, label %ready_lastpos.exit

if.then.i:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 893, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.ready_lastpos, i64 0, i64 0)) #8
  unreachable

ready_lastpos.exit:                               ; preds = %if.then
  %3 = load i32* %veclen, align 4, !tbaa !20
  %idx.ext = sext i32 %3 to i64
  %add.ptr.sum = sub i64 %idx.ext, %idx.ext2
  %add.ptr3 = getelementptr inbounds %struct.rtx_def** %2, i64 %add.ptr.sum
  %4 = bitcast %struct.rtx_def** %add.ptr3 to i8*
  %add.ptr4.i = getelementptr inbounds %struct.rtx_def** %2, i64 1
  %5 = bitcast %struct.rtx_def** %add.ptr4.i to i8*
  %mul = shl nsw i64 %idx.ext2, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* %4, i8* %5, i64 %mul, i32 8, i1 false)
  %6 = load i32* %veclen, align 4, !tbaa !20
  %sub = add nsw i32 %6, -1
  store i32 %sub, i32* %first, align 4, !tbaa !16
  %.pre = load i32* %n_ready, align 4, !tbaa !18
  br label %if.end

if.end:                                           ; preds = %entry, %ready_lastpos.exit
  %7 = phi i32 [ %.pre, %ready_lastpos.exit ], [ %1, %entry ]
  %8 = phi i32 [ %sub, %ready_lastpos.exit ], [ %0, %entry ]
  %sub9 = sub nsw i32 %8, %7
  %idxprom = sext i32 %sub9 to i64
  %9 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %arrayidx = getelementptr inbounds %struct.rtx_def** %9, i64 %idxprom
  store %struct.rtx_def* %insn, %struct.rtx_def** %arrayidx, align 8, !tbaa !5
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %n_ready, align 4, !tbaa !18
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define void @get_block_head_tail(i32 %b, %struct.rtx_def** nocapture %headp, %struct.rtx_def** nocapture %tailp) #0 {
entry:
  %idxprom = sext i32 %b to i64
  %0 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %0, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom
  %1 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !5
  %head1 = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 0
  %2 = load %struct.rtx_def** %head1, align 8, !tbaa !21
  %end = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 1
  %3 = load %struct.rtx_def** %end, align 8, !tbaa !24
  %cmp4348 = icmp eq %struct.rtx_def* %2, %3
  br i1 %cmp4348, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry, %while.cond.outer.backedge
  %tail.0.ph52 = phi %struct.rtx_def* [ %tail.038, %while.cond.outer.backedge ], [ %3, %entry ]
  %head.0.ph49 = phi %struct.rtx_def* [ %head.0.ph.be, %while.cond.outer.backedge ], [ %2, %entry ]
  %4 = getelementptr inbounds %struct.rtx_def* %head.0.ph49, i64 0, i32 0
  %bf.load = load i32* %4, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp6 = icmp eq i32 %bf.clear, 37
  br i1 %cmp6, label %while.cond.outer.backedge, label %if.else

while.cond.outer.backedge:                        ; preds = %if.else15, %while.body.lr.ph
  %tail.038 = phi %struct.rtx_def* [ %tail.0.ph52, %while.body.lr.ph ], [ %tail.044, %if.else15 ]
  %head.0.ph.be.in.in = getelementptr inbounds %struct.rtx_def* %head.0.ph49, i64 0, i32 1, i64 2
  %head.0.ph.be.in = bitcast %union.rtunion_def* %head.0.ph.be.in.in to %struct.rtx_def**
  %head.0.ph.be = load %struct.rtx_def** %head.0.ph.be.in, align 8
  %cmp43 = icmp eq %struct.rtx_def* %head.0.ph.be, %tail.038
  br i1 %cmp43, label %while.end, label %while.body.lr.ph

if.else:                                          ; preds = %while.body.lr.ph, %if.then11
  %tail.044 = phi %struct.rtx_def* [ %6, %if.then11 ], [ %tail.0.ph52, %while.body.lr.ph ]
  %5 = getelementptr inbounds %struct.rtx_def* %tail.044, i64 0, i32 0
  %bf.load8 = load i32* %5, align 8
  %bf.clear9 = and i32 %bf.load8, 65535
  %cmp10 = icmp eq i32 %bf.clear9, 37
  br i1 %cmp10, label %if.then11, label %if.else15

if.then11:                                        ; preds = %if.else
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %tail.044, i64 0, i32 1, i64 1
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx14, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %head.0.ph49, %6
  br i1 %cmp, label %while.end, label %if.else

if.else15:                                        ; preds = %if.else
  %phitmp = icmp eq i32 %bf.clear, 36
  br i1 %phitmp, label %while.cond.outer.backedge, label %while.end

while.end:                                        ; preds = %if.else15, %while.cond.outer.backedge, %if.then11, %entry
  %head.0.ph42 = phi %struct.rtx_def* [ %2, %entry ], [ %head.0.ph49, %if.then11 ], [ %head.0.ph49, %if.else15 ], [ %tail.038, %while.cond.outer.backedge ]
  %tail.039 = phi %struct.rtx_def* [ %2, %entry ], [ %head.0.ph49, %if.then11 ], [ %tail.044, %if.else15 ], [ %tail.038, %while.cond.outer.backedge ]
  store %struct.rtx_def* %head.0.ph42, %struct.rtx_def** %headp, align 8, !tbaa !5
  store %struct.rtx_def* %tail.039, %struct.rtx_def** %tailp, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind readonly uwtable
define i32 @no_real_insns_p(%struct.rtx_def* readonly %head, %struct.rtx_def* nocapture readonly %tail) #4 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %tail, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp11 = icmp eq %struct.rtx_def* %0, %head
  br i1 %cmp11, label %return, label %while.body

while.body:                                       ; preds = %entry, %if.end
  %head.addr.012 = phi %struct.rtx_def* [ %3, %if.end ], [ %head, %entry ]
  %1 = getelementptr inbounds %struct.rtx_def* %head.addr.012, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %2 = and i32 %bf.load, 65534
  %switch = icmp eq i32 %2, 36
  br i1 %switch, label %if.end, label %return

if.end:                                           ; preds = %while.body
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %head.addr.012, i64 0, i32 1, i64 2
  %rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx7, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %3, %0
  br i1 %cmp, label %return, label %while.body

return:                                           ; preds = %if.end, %while.body, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %if.end ], [ 0, %while.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @rm_line_notes(%struct.rtx_def* %head, %struct.rtx_def* readonly %tail) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %tail, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp31 = icmp eq %struct.rtx_def* %0, %head
  br i1 %cmp31, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %insn.032 = phi %struct.rtx_def* [ %18, %for.inc ], [ %head, %entry ]
  %1 = getelementptr inbounds %struct.rtx_def* %insn.032, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 37
  br i1 %cmp1, label %land.rhs.lr.ph.lr.ph.i, label %for.inc

land.rhs.lr.ph.lr.ph.i:                           ; preds = %for.body
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn.032, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  br label %land.rhs.lr.ph.i

while.cond.outer.loopexit.i:                      ; preds = %land.lhs.true.i, %while.body.i, %land.lhs.true.us.i, %while.body.us.i
  %.lcssa.i = phi %struct.rtx_def* [ %5, %while.body.us.i ], [ %5, %land.lhs.true.us.i ], [ %12, %while.body.i ], [ %12, %land.lhs.true.i ]
  %insn.addr.0.lcssa36.i = phi %struct.rtx_def* [ %insn.addr.038.us.i, %while.body.us.i ], [ %insn.addr.038.us.i, %land.lhs.true.us.i ], [ %insn.addr.038.i, %while.body.i ], [ %insn.addr.038.i, %land.lhs.true.i ]
  %cmp37.i = icmp eq %struct.rtx_def* %.lcssa.i, %0
  br i1 %cmp37.i, label %unlink_line_notes.exit, label %land.rhs.lr.ph.i

land.rhs.lr.ph.i:                                 ; preds = %while.cond.outer.loopexit.i, %land.rhs.lr.ph.lr.ph.i
  %insn.addr.0.ph43.i = phi %struct.rtx_def* [ %insn.032, %land.rhs.lr.ph.lr.ph.i ], [ %.lcssa.i, %while.cond.outer.loopexit.i ]
  %prev.0.ph42.i = phi %struct.rtx_def* [ %2, %land.rhs.lr.ph.lr.ph.i ], [ %insn.addr.0.lcssa36.i, %while.cond.outer.loopexit.i ]
  %tobool.i = icmp eq %struct.rtx_def* %prev.0.ph42.i, null
  %prev.0.c.i = ptrtoint %struct.rtx_def* %prev.0.ph42.i to i64
  %3 = getelementptr inbounds %struct.rtx_def* %prev.0.ph42.i, i64 0, i32 1, i64 2, i32 0
  br i1 %tobool.i, label %land.rhs.us.i, label %land.rhs.i

land.rhs.us.i:                                    ; preds = %land.rhs.lr.ph.i, %if.end18.us.i
  %insn.addr.038.us.i = phi %struct.rtx_def* [ %5, %if.end18.us.i ], [ %insn.addr.0.ph43.i, %land.rhs.lr.ph.i ]
  %4 = getelementptr inbounds %struct.rtx_def* %insn.addr.038.us.i, i64 0, i32 0
  %bf.load.us.i = load i32* %4, align 8
  %bf.clear.us.i = and i32 %bf.load.us.i, 65535
  %cmp1.us.i = icmp eq i32 %bf.clear.us.i, 37
  br i1 %cmp1.us.i, label %while.body.us.i, label %unlink_line_notes.exit

while.body.us.i:                                  ; preds = %land.rhs.us.i
  %arrayidx3.us.i = getelementptr inbounds %struct.rtx_def* %insn.addr.038.us.i, i64 0, i32 1, i64 2
  %rtx4.us.i = bitcast %union.rtunion_def* %arrayidx3.us.i to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx4.us.i, align 8, !tbaa !5
  %6 = load i32* @write_symbols, align 4, !tbaa !25
  %cmp5.us.i = icmp eq i32 %6, 0
  br i1 %cmp5.us.i, label %while.cond.outer.loopexit.i, label %land.lhs.true.us.i

land.lhs.true.us.i:                               ; preds = %while.body.us.i
  %arrayidx7.us.i = getelementptr inbounds %struct.rtx_def* %insn.addr.038.us.i, i64 0, i32 1, i64 4
  %rtint.us.i = bitcast %union.rtunion_def* %arrayidx7.us.i to i32*
  %7 = load i32* %rtint.us.i, align 4, !tbaa !1
  %cmp8.us.i = icmp sgt i32 %7, 0
  br i1 %cmp8.us.i, label %if.end.us.i, label %while.cond.outer.loopexit.i

if.end.us.i:                                      ; preds = %land.lhs.true.us.i
  %tobool13.us.i = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool13.us.i, label %if.end18.us.i, label %if.then14.us.i

if.then14.us.i:                                   ; preds = %if.end.us.i
  %8 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 1, i32 0
  store i64 %prev.0.c.i, i64* %8, align 8, !tbaa !5
  br label %if.end18.us.i

if.end18.us.i:                                    ; preds = %if.then14.us.i, %if.end.us.i
  %arrayidx20.us.i = getelementptr inbounds %struct.rtx_def* %insn.addr.038.us.i, i64 0, i32 1, i64 0
  %rtint21.us.i = bitcast %union.rtunion_def* %arrayidx20.us.i to i32*
  %9 = load i32* %rtint21.us.i, align 4, !tbaa !1
  %idxprom.us.i = sext i32 %9 to i64
  %10 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %line_note.us.i = getelementptr inbounds %struct.haifa_insn_data* %10, i64 %idxprom.us.i, i32 1
  store %struct.rtx_def* %insn.addr.038.us.i, %struct.rtx_def** %line_note.us.i, align 8, !tbaa !26
  %cmp.us.i = icmp eq %struct.rtx_def* %5, %0
  br i1 %cmp.us.i, label %unlink_line_notes.exit, label %land.rhs.us.i

land.rhs.i:                                       ; preds = %land.rhs.lr.ph.i, %if.end18.i
  %insn.addr.038.i = phi %struct.rtx_def* [ %12, %if.end18.i ], [ %insn.addr.0.ph43.i, %land.rhs.lr.ph.i ]
  %11 = getelementptr inbounds %struct.rtx_def* %insn.addr.038.i, i64 0, i32 0
  %bf.load.i = load i32* %11, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp1.i = icmp eq i32 %bf.clear.i, 37
  br i1 %cmp1.i, label %while.body.i, label %unlink_line_notes.exit

while.body.i:                                     ; preds = %land.rhs.i
  %arrayidx3.i = getelementptr inbounds %struct.rtx_def* %insn.addr.038.i, i64 0, i32 1, i64 2
  %rtx4.i = bitcast %union.rtunion_def* %arrayidx3.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx4.i, align 8, !tbaa !5
  %13 = load i32* @write_symbols, align 4, !tbaa !25
  %cmp5.i = icmp eq i32 %13, 0
  br i1 %cmp5.i, label %while.cond.outer.loopexit.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %while.body.i
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def* %insn.addr.038.i, i64 0, i32 1, i64 4
  %rtint.i = bitcast %union.rtunion_def* %arrayidx7.i to i32*
  %14 = load i32* %rtint.i, align 4, !tbaa !1
  %cmp8.i = icmp sgt i32 %14, 0
  br i1 %cmp8.i, label %if.end.i, label %while.cond.outer.loopexit.i

if.end.i:                                         ; preds = %land.lhs.true.i
  %.c.i = ptrtoint %struct.rtx_def* %12 to i64
  store i64 %.c.i, i64* %3, align 8, !tbaa !5
  %tobool13.i = icmp eq %struct.rtx_def* %12, null
  br i1 %tobool13.i, label %if.end18.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  %15 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 1, i32 0
  store i64 %prev.0.c.i, i64* %15, align 8, !tbaa !5
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then14.i, %if.end.i
  %arrayidx20.i = getelementptr inbounds %struct.rtx_def* %insn.addr.038.i, i64 0, i32 1, i64 0
  %rtint21.i = bitcast %union.rtunion_def* %arrayidx20.i to i32*
  %16 = load i32* %rtint21.i, align 4, !tbaa !1
  %idxprom.i = sext i32 %16 to i64
  %17 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %line_note.i = getelementptr inbounds %struct.haifa_insn_data* %17, i64 %idxprom.i, i32 1
  store %struct.rtx_def* %insn.addr.038.i, %struct.rtx_def** %line_note.i, align 8, !tbaa !26
  %cmp.i = icmp eq %struct.rtx_def* %12, %0
  br i1 %cmp.i, label %unlink_line_notes.exit, label %land.rhs.i

unlink_line_notes.exit:                           ; preds = %while.cond.outer.loopexit.i, %land.rhs.i, %if.end18.i, %land.rhs.us.i, %if.end18.us.i
  %insn.addr.0.lcssa.i = phi %struct.rtx_def* [ %insn.addr.038.us.i, %land.rhs.us.i ], [ %0, %if.end18.us.i ], [ %insn.addr.038.i, %land.rhs.i ], [ %0, %if.end18.i ], [ %0, %while.cond.outer.loopexit.i ]
  %cmp2 = icmp eq %struct.rtx_def* %insn.032, %tail
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %unlink_line_notes.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 1191, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.rm_line_notes, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %unlink_line_notes.exit
  %cmp4 = icmp eq %struct.rtx_def* %insn.032, %head
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 1193, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.rm_line_notes, i64 0, i64 0)) #8
  unreachable

if.end6:                                          ; preds = %if.end
  %cmp7 = icmp eq %struct.rtx_def* %insn.addr.0.lcssa.i, %0
  br i1 %cmp7, label %if.then8, label %for.inc

if.then8:                                         ; preds = %if.end6
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 1195, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.rm_line_notes, i64 0, i64 0)) #8
  unreachable

for.inc:                                          ; preds = %for.body, %if.end6
  %insn.1 = phi %struct.rtx_def* [ %insn.addr.0.lcssa.i, %if.end6 ], [ %insn.032, %for.body ]
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 2
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx13, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %18, %0
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #6

; Function Attrs: nounwind uwtable
define void @save_line_notes(i32 %b, %struct.rtx_def* %head, %struct.rtx_def* nocapture readonly %tail) #0 {
entry:
  %arrayidx1 = getelementptr inbounds %struct.rtx_def* %tail, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp19 = icmp eq %struct.rtx_def* %0, %head
  br i1 %cmp19, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %1 = load %struct.rtx_def*** @line_note_head, align 8, !tbaa !5
  %idxprom = sext i32 %b to i64
  %arrayidx = getelementptr inbounds %struct.rtx_def** %1, i64 %idxprom
  %2 = load %struct.rtx_def** %arrayidx, align 8, !tbaa !5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %insn.021 = phi %struct.rtx_def* [ %head, %for.body.lr.ph ], [ %7, %for.inc ]
  %line.020 = phi %struct.rtx_def* [ %2, %for.body.lr.ph ], [ %line.1, %for.inc ]
  %3 = getelementptr inbounds %struct.rtx_def* %insn.021, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp2 = icmp eq i32 %bf.clear, 37
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %insn.021, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %4 = load i32* %rtint, align 4, !tbaa !1
  %cmp5 = icmp sgt i32 %4, 0
  br i1 %cmp5, label %for.inc, label %if.else

if.else:                                          ; preds = %land.lhs.true, %for.body
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %insn.021, i64 0, i32 1, i64 0
  %rtint8 = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %5 = load i32* %rtint8, align 4, !tbaa !1
  %idxprom9 = sext i32 %5 to i64
  %6 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %line_note = getelementptr inbounds %struct.haifa_insn_data* %6, i64 %idxprom9, i32 1
  store %struct.rtx_def* %line.020, %struct.rtx_def** %line_note, align 8, !tbaa !26
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %if.else
  %line.1 = phi %struct.rtx_def* [ %line.020, %if.else ], [ %insn.021, %land.lhs.true ]
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %insn.021, i64 0, i32 1, i64 2
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx13, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %7, %0
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @restore_line_notes(%struct.rtx_def* %head, %struct.rtx_def* nocapture readonly %tail) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %tail, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %tobool154 = icmp eq %struct.rtx_def* %head, null
  br i1 %tobool154, label %for.cond7.preheader, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %line.0155 = phi %struct.rtx_def* [ %3, %for.inc ], [ %head, %entry ]
  %1 = getelementptr inbounds %struct.rtx_def* %line.0155, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 37
  br i1 %cmp, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %line.0155, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %2 = load i32* %rtint, align 4, !tbaa !1
  %cmp3 = icmp sgt i32 %2, 0
  br i1 %cmp3, label %for.cond7.preheader, label %for.inc

for.cond7.preheader:                              ; preds = %land.lhs.true, %for.inc, %entry
  %line.1.ph = phi %struct.rtx_def* [ null, %entry ], [ %line.0155, %land.lhs.true ], [ null, %for.inc ]
  %cmp8149 = icmp eq %struct.rtx_def* %0, %head
  br i1 %cmp8149, label %if.end108, label %for.body9

for.inc:                                          ; preds = %for.body, %land.lhs.true
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %line.0155, i64 0, i32 1, i64 1
  %rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx6, align 8, !tbaa !5
  %tobool = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool, label %for.cond7.preheader, label %for.body

for.body9:                                        ; preds = %for.cond7.preheader, %for.inc98
  %insn.0152 = phi %struct.rtx_def* [ %26, %for.inc98 ], [ %head, %for.cond7.preheader ]
  %added_notes.0151 = phi i32 [ %added_notes.1, %for.inc98 ], [ 0, %for.cond7.preheader ]
  %line.1150 = phi %struct.rtx_def* [ %line.2, %for.inc98 ], [ %line.1.ph, %for.cond7.preheader ]
  %4 = getelementptr inbounds %struct.rtx_def* %insn.0152, i64 0, i32 0
  %bf.load10 = load i32* %4, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 37
  br i1 %cmp12, label %land.lhs.true13, label %land.lhs.true22

land.lhs.true13:                                  ; preds = %for.body9
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %insn.0152, i64 0, i32 1, i64 4
  %rtint16 = bitcast %union.rtunion_def* %arrayidx15 to i32*
  %5 = load i32* %rtint16, align 4, !tbaa !1
  %cmp17 = icmp sgt i32 %5, 0
  %insn.0152.line.1150 = select i1 %cmp17, %struct.rtx_def* %insn.0152, %struct.rtx_def* %line.1150
  br label %for.inc98

land.lhs.true22:                                  ; preds = %for.body9
  %fld23 = getelementptr inbounds %struct.rtx_def* %insn.0152, i64 0, i32 1
  %rtint25 = bitcast [1 x %union.rtunion_def]* %fld23 to i32*
  %6 = load i32* %rtint25, align 4, !tbaa !1
  %7 = load i32* @old_max_uid, align 4, !tbaa !1
  %cmp26 = icmp slt i32 %6, %7
  br i1 %cmp26, label %land.lhs.true27, label %for.inc98

land.lhs.true27:                                  ; preds = %land.lhs.true22
  %idxprom = sext i32 %6 to i64
  %8 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %line_note = getelementptr inbounds %struct.haifa_insn_data* %8, i64 %idxprom, i32 1
  %9 = load %struct.rtx_def** %line_note, align 8, !tbaa !26
  %cmp32 = icmp eq %struct.rtx_def* %9, null
  %cmp34 = icmp eq %struct.rtx_def* %9, %line.1150
  %or.cond148 = or i1 %cmp32, %cmp34
  br i1 %or.cond148, label %for.inc98, label %land.lhs.true35

land.lhs.true35:                                  ; preds = %land.lhs.true27
  %cmp36 = icmp eq %struct.rtx_def* %line.1150, null
  br i1 %cmp36, label %if.then51, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true35
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 4
  %rtint39 = bitcast %union.rtunion_def* %arrayidx38 to i32*
  %10 = load i32* %rtint39, align 4, !tbaa !1
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %line.1150, i64 0, i32 1, i64 4
  %rtint42 = bitcast %union.rtunion_def* %arrayidx41 to i32*
  %11 = load i32* %rtint42, align 4, !tbaa !1
  %cmp43 = icmp eq i32 %10, %11
  br i1 %cmp43, label %lor.lhs.false44, label %if.then51

lor.lhs.false44:                                  ; preds = %lor.lhs.false
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx46 to i8**
  %12 = load i8** %rtstr, align 8, !tbaa !5
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %line.1150, i64 0, i32 1, i64 3
  %rtstr49 = bitcast %union.rtunion_def* %arrayidx48 to i8**
  %13 = load i8** %rtstr49, align 8, !tbaa !5
  %cmp50 = icmp eq i8* %12, %13
  br i1 %cmp50, label %for.inc98, label %if.then51

if.then51:                                        ; preds = %lor.lhs.false44, %lor.lhs.false, %land.lhs.true35
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %insn.0152, i64 0, i32 1, i64 1
  %rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx54, align 8, !tbaa !5
  %fld55 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1
  %rtint57 = bitcast [1 x %union.rtunion_def]* %fld55 to i32*
  %15 = load i32* %rtint57, align 4, !tbaa !1
  %idxprom58 = sext i32 %15 to i64
  %line_note60 = getelementptr inbounds %struct.haifa_insn_data* %8, i64 %idxprom58, i32 1
  %16 = load %struct.rtx_def** %line_note60, align 8, !tbaa !26
  %tobool61 = icmp eq %struct.rtx_def* %16, null
  br i1 %tobool61, label %if.else81, label %if.then62

if.then62:                                        ; preds = %if.then51
  store %struct.rtx_def* null, %struct.rtx_def** %line_note60, align 8, !tbaa !26
  %17 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1, i32 0
  %.c145 = ptrtoint %struct.rtx_def* %14 to i64
  store i64 %.c145, i64* %17, align 8, !tbaa !5
  %18 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 2, i32 0
  %.c146 = ptrtoint %struct.rtx_def* %9 to i64
  store i64 %.c146, i64* %18, align 8, !tbaa !5
  %19 = getelementptr inbounds %union.rtunion_def* %arrayidx53, i64 0, i32 0
  store i64 %.c146, i64* %19, align 8, !tbaa !5
  %20 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 2, i32 0
  %insn.0.c = ptrtoint %struct.rtx_def* %insn.0152 to i64
  store i64 %insn.0.c, i64* %20, align 8, !tbaa !5
  br label %for.inc98

if.else81:                                        ; preds = %if.then51
  %inc = add nsw i32 %added_notes.0151, 1
  %arrayidx83 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 4
  %rtint84 = bitcast %union.rtunion_def* %arrayidx83 to i32*
  %21 = load i32* %rtint84, align 4, !tbaa !1
  %call = tail call %struct.rtx_def* @emit_note_after(i32 %21, %struct.rtx_def* %14) #5
  %arrayidx86 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 3
  %rtstr87 = bitcast %union.rtunion_def* %arrayidx86 to i8**
  %22 = load i8** %rtstr87, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3, i32 0
  %.c = ptrtoint i8* %22 to i64
  store i64 %.c, i64* %23, align 8, !tbaa !5
  %24 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load91 = load i32* %24, align 8
  %bf.clear92 = and i32 %bf.load91, 1073741824
  %25 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load93 = load i32* %25, align 8
  %bf.clear94 = and i32 %bf.load93, -1073741825
  %bf.set = or i32 %bf.clear94, %bf.clear92
  store i32 %bf.set, i32* %25, align 8
  br label %for.inc98

for.inc98:                                        ; preds = %land.lhs.true13, %lor.lhs.false44, %land.lhs.true27, %if.then62, %if.else81, %land.lhs.true22
  %line.2 = phi %struct.rtx_def* [ %9, %if.then62 ], [ %9, %if.else81 ], [ %line.1150, %lor.lhs.false44 ], [ %line.1150, %land.lhs.true27 ], [ %line.1150, %land.lhs.true22 ], [ %insn.0152.line.1150, %land.lhs.true13 ]
  %added_notes.1 = phi i32 [ %added_notes.0151, %if.then62 ], [ %inc, %if.else81 ], [ %added_notes.0151, %lor.lhs.false44 ], [ %added_notes.0151, %land.lhs.true27 ], [ %added_notes.0151, %land.lhs.true22 ], [ %added_notes.0151, %land.lhs.true13 ]
  %arrayidx100 = getelementptr inbounds %struct.rtx_def* %insn.0152, i64 0, i32 1, i64 2
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx101, align 8, !tbaa !5
  %cmp8 = icmp eq %struct.rtx_def* %26, %0
  br i1 %cmp8, label %for.end102, label %for.body9

for.end102:                                       ; preds = %for.inc98
  %27 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool103 = icmp ne i32 %27, 0
  %tobool105 = icmp ne i32 %added_notes.1, 0
  %or.cond = and i1 %tobool103, %tobool105
  br i1 %or.cond, label %if.then106, label %if.end108

if.then106:                                       ; preds = %for.end102
  %28 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %call107 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([31 x i8]* @.str3, i64 0, i64 0), i32 %added_notes.1) #5
  br label %if.end108

if.end108:                                        ; preds = %for.cond7.preheader, %if.then106, %for.end102
  ret void
}

declare %struct.rtx_def* @emit_note_after(i32, %struct.rtx_def*) #2

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #7

; Function Attrs: nounwind uwtable
define void @rm_redundant_line_notes() #0 {
entry:
  %call = tail call %struct.rtx_def* @get_insns() #5
  %call1 = tail call %struct.rtx_def* @get_last_insn() #5
  %tobool97 = icmp eq %struct.rtx_def* %call1, null
  br i1 %tobool97, label %if.end74, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %notes.0102 = phi i32 [ %notes.2, %for.inc ], [ 0, %entry ]
  %active_insn.0101 = phi i32 [ %active_insn.1, %for.inc ], [ 0, %entry ]
  %insn.099 = phi %struct.rtx_def* [ %11, %for.inc ], [ %call1, %entry ]
  %line.098 = phi %struct.rtx_def* [ %line.2, %for.inc ], [ null, %entry ]
  %0 = getelementptr inbounds %struct.rtx_def* %insn.099, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.then62 [
    i32 37, label %land.lhs.true
    i32 32, label %land.lhs.true49
  ]

land.lhs.true:                                    ; preds = %for.body
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn.099, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtint, align 4, !tbaa !1
  %cmp2 = icmp sgt i32 %1, 0
  br i1 %cmp2, label %if.then, label %land.lhs.true41

if.then:                                          ; preds = %land.lhs.true
  %cmp3 = icmp eq i32 %active_insn.0101, 0
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %inc = add nsw i32 %notes.0102, 1
  %2 = getelementptr inbounds %struct.rtx_def* %insn.099, i64 0, i32 1, i64 3, i32 0
  store i64 0, i64* %2, align 8, !tbaa !5
  store i32 -99, i32* %rtint, align 4, !tbaa !1
  br label %for.inc

if.else:                                          ; preds = %if.then
  %tobool10 = icmp eq %struct.rtx_def* %line.098, null
  br i1 %tobool10, label %for.inc, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %if.else
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %line.098, i64 0, i32 1, i64 4
  %rtint14 = bitcast %union.rtunion_def* %arrayidx13 to i32*
  %3 = load i32* %rtint14, align 4, !tbaa !1
  %cmp18 = icmp eq i32 %3, %1
  br i1 %cmp18, label %land.lhs.true19, label %for.inc

land.lhs.true19:                                  ; preds = %land.lhs.true11
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %line.098, i64 0, i32 1, i64 3
  %rtstr22 = bitcast %union.rtunion_def* %arrayidx21 to i8**
  %4 = load i8** %rtstr22, align 8, !tbaa !5
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %insn.099, i64 0, i32 1, i64 3
  %rtstr25 = bitcast %union.rtunion_def* %arrayidx24 to i8**
  %5 = load i8** %rtstr25, align 8, !tbaa !5
  %cmp26 = icmp eq i8* %4, %5
  br i1 %cmp26, label %if.then27, label %for.inc

if.then27:                                        ; preds = %land.lhs.true19
  %inc28 = add nsw i32 %notes.0102, 1
  %6 = getelementptr inbounds %union.rtunion_def* %arrayidx21, i64 0, i32 0
  store i64 0, i64* %6, align 8, !tbaa !5
  store i32 -99, i32* %rtint14, align 4, !tbaa !1
  br label %for.inc

land.lhs.true41:                                  ; preds = %land.lhs.true
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %insn.099, i64 0, i32 1, i64 4
  %rtint44 = bitcast %union.rtunion_def* %arrayidx43 to i32*
  %7 = load i32* %rtint44, align 4, !tbaa !1
  %cmp45 = icmp eq i32 %7, -99
  br i1 %cmp45, label %for.inc, label %if.then62

land.lhs.true49:                                  ; preds = %for.body
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %insn.099, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load52 = load i32* %9, align 8
  %10 = and i32 %bf.load52, 65534
  %switch = icmp eq i32 %10, 48
  br i1 %switch, label %for.inc, label %if.then62

if.then62:                                        ; preds = %for.body, %land.lhs.true41, %land.lhs.true49
  %inc63 = add nsw i32 %active_insn.0101, 1
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true49, %if.then4, %if.then27, %if.else, %land.lhs.true19, %land.lhs.true11, %if.then62, %land.lhs.true41
  %line.2 = phi %struct.rtx_def* [ %line.098, %land.lhs.true41 ], [ %line.098, %if.then62 ], [ %line.098, %if.then4 ], [ %insn.099, %if.then27 ], [ %insn.099, %if.else ], [ %insn.099, %land.lhs.true19 ], [ %insn.099, %land.lhs.true11 ], [ %line.098, %land.lhs.true49 ]
  %active_insn.1 = phi i32 [ %active_insn.0101, %land.lhs.true41 ], [ %inc63, %if.then62 ], [ 0, %if.then4 ], [ 0, %if.then27 ], [ 0, %if.else ], [ 0, %land.lhs.true19 ], [ 0, %land.lhs.true11 ], [ %active_insn.0101, %land.lhs.true49 ]
  %notes.2 = phi i32 [ %notes.0102, %land.lhs.true41 ], [ %notes.0102, %if.then62 ], [ %inc, %if.then4 ], [ %inc28, %if.then27 ], [ %notes.0102, %if.else ], [ %notes.0102, %land.lhs.true19 ], [ %notes.0102, %land.lhs.true11 ], [ %notes.0102, %land.lhs.true49 ]
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %insn.099, i64 0, i32 1, i64 1
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx68, align 8, !tbaa !5
  %tobool = icmp eq %struct.rtx_def* %11, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %12 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool69 = icmp ne i32 %12, 0
  %tobool71 = icmp ne i32 %notes.2, 0
  %or.cond = and i1 %tobool69, %tobool71
  br i1 %or.cond, label %if.then72, label %if.end74

if.then72:                                        ; preds = %for.end
  %13 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %call73 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([33 x i8]* @.str4, i64 0, i64 0), i32 %notes.2) #5
  br label %if.end74

if.end74:                                         ; preds = %entry, %if.then72, %for.end
  ret void
}

declare %struct.rtx_def* @get_insns() #2

declare %struct.rtx_def* @get_last_insn() #2

; Function Attrs: nounwind uwtable
define void @rm_other_notes(%struct.rtx_def* %head, %struct.rtx_def* readonly %tail) #0 {
entry:
  store %struct.rtx_def* null, %struct.rtx_def** @note_list, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %head, %tail
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %head, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom40 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom40
  %1 = load i8* %arrayidx, align 1, !tbaa !25
  %cmp1 = icmp eq i8 %1, 105
  br i1 %cmp1, label %if.end, label %for.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %tail, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp445 = icmp eq %struct.rtx_def* %2, %head
  br i1 %cmp445, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %insn.046 = phi %struct.rtx_def* [ %20, %for.inc ], [ %head, %if.end ]
  %3 = getelementptr inbounds %struct.rtx_def* %insn.046, i64 0, i32 0
  %bf.load6 = load i32* %3, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 37
  br i1 %cmp8, label %land.rhs.lr.ph.i, label %for.inc

land.rhs.lr.ph.i:                                 ; preds = %for.body
  %arrayidx.i41 = getelementptr inbounds %struct.rtx_def* %insn.046, i64 0, i32 1, i64 1
  %rtx.i42 = bitcast %union.rtunion_def* %arrayidx.i41 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx.i42, align 8, !tbaa !5
  %tobool.i = icmp eq %struct.rtx_def* %4, null
  %.c69.i = ptrtoint %struct.rtx_def* %4 to i64
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 2, i32 0
  br i1 %tobool.i, label %land.rhs.us.i, label %land.rhs.i

land.rhs.us.i:                                    ; preds = %land.rhs.lr.ph.i, %while.cond.backedge.us.i.land.rhs.us.i_crit_edge
  %bf.load.us.i = phi i32 [ %bf.load.us.i.pre, %while.cond.backedge.us.i.land.rhs.us.i_crit_edge ], [ %bf.load6, %land.rhs.lr.ph.i ]
  %insn.addr.072.us.i = phi %struct.rtx_def* [ %6, %while.cond.backedge.us.i.land.rhs.us.i_crit_edge ], [ %insn.046, %land.rhs.lr.ph.i ]
  %bf.clear.us.i = and i32 %bf.load.us.i, 65535
  %cmp1.us.i = icmp eq i32 %bf.clear.us.i, 37
  br i1 %cmp1.us.i, label %if.end.us.i, label %unlink_other_notes.exit

if.end.us.i:                                      ; preds = %land.rhs.us.i
  %arrayidx3.us.i = getelementptr inbounds %struct.rtx_def* %insn.addr.072.us.i, i64 0, i32 1, i64 2
  %rtx4.us.i = bitcast %union.rtunion_def* %arrayidx3.us.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx4.us.i, align 8, !tbaa !5
  %tobool8.us.i = icmp eq %struct.rtx_def* %6, null
  br i1 %tobool8.us.i, label %if.end13.us.i, label %if.then9.us.i

if.then9.us.i:                                    ; preds = %if.end.us.i
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 1, i32 0
  store i64 %.c69.i, i64* %7, align 8, !tbaa !5
  br label %if.end13.us.i

if.end13.us.i:                                    ; preds = %if.then9.us.i, %if.end.us.i
  %arrayidx15.us.i = getelementptr inbounds %struct.rtx_def* %insn.addr.072.us.i, i64 0, i32 1, i64 4
  %rtint.us.i = bitcast %union.rtunion_def* %arrayidx15.us.i to i32*
  %8 = load i32* %rtint.us.i, align 4, !tbaa !1
  switch i32 %8, label %if.then41.us.i [
    i32 -96, label %while.cond.backedge.us.i
    i32 -95, label %while.cond.backedge.us.i
    i32 -83, label %while.cond.backedge.us.i
    i32 -82, label %while.cond.backedge.us.i
    i32 -86, label %while.cond.backedge.us.i
    i32 -85, label %while.cond.backedge.us.i
  ]

if.then41.us.i:                                   ; preds = %if.end13.us.i
  %9 = load %struct.rtx_def** @note_list, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.rtx_def* %insn.addr.072.us.i, i64 0, i32 1, i64 1, i32 0
  %.c.us.i = ptrtoint %struct.rtx_def* %9 to i64
  store i64 %.c.us.i, i64* %10, align 8, !tbaa !5
  %11 = load %struct.rtx_def** @note_list, align 8, !tbaa !5
  %tobool45.us.i = icmp eq %struct.rtx_def* %11, null
  br i1 %tobool45.us.i, label %if.end50.us.i, label %if.then46.us.i

if.then46.us.i:                                   ; preds = %if.then41.us.i
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 2, i32 0
  %insn.addr.0.c.us.i = ptrtoint %struct.rtx_def* %insn.addr.072.us.i to i64
  store i64 %insn.addr.0.c.us.i, i64* %12, align 8, !tbaa !5
  br label %if.end50.us.i

if.end50.us.i:                                    ; preds = %if.then46.us.i, %if.then41.us.i
  store %struct.rtx_def* %insn.addr.072.us.i, %struct.rtx_def** @note_list, align 8, !tbaa !5
  br label %while.cond.backedge.us.i

while.cond.backedge.us.i:                         ; preds = %if.end50.us.i, %if.end13.us.i, %if.end13.us.i, %if.end13.us.i, %if.end13.us.i, %if.end13.us.i, %if.end13.us.i
  %cmp.us.i = icmp eq %struct.rtx_def* %6, %2
  br i1 %cmp.us.i, label %unlink_other_notes.exit, label %while.cond.backedge.us.i.land.rhs.us.i_crit_edge

while.cond.backedge.us.i.land.rhs.us.i_crit_edge: ; preds = %while.cond.backedge.us.i
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load.us.i.pre = load i32* %.phi.trans.insert, align 8
  br label %land.rhs.us.i

land.rhs.i:                                       ; preds = %land.rhs.lr.ph.i, %while.cond.backedge.i.land.rhs.i_crit_edge
  %bf.load.i = phi i32 [ %bf.load.i.pre, %while.cond.backedge.i.land.rhs.i_crit_edge ], [ %bf.load6, %land.rhs.lr.ph.i ]
  %insn.addr.072.i = phi %struct.rtx_def* [ %13, %while.cond.backedge.i.land.rhs.i_crit_edge ], [ %insn.046, %land.rhs.lr.ph.i ]
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp1.i = icmp eq i32 %bf.clear.i, 37
  br i1 %cmp1.i, label %if.end.i, label %unlink_other_notes.exit

if.end.i:                                         ; preds = %land.rhs.i
  %arrayidx3.i = getelementptr inbounds %struct.rtx_def* %insn.addr.072.i, i64 0, i32 1, i64 2
  %rtx4.i = bitcast %union.rtunion_def* %arrayidx3.i to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx4.i, align 8, !tbaa !5
  %.c70.i = ptrtoint %struct.rtx_def* %13 to i64
  store i64 %.c70.i, i64* %5, align 8, !tbaa !5
  %tobool8.i = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool8.i, label %if.end13.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 1, i32 0
  store i64 %.c69.i, i64* %14, align 8, !tbaa !5
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then9.i, %if.end.i
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %insn.addr.072.i, i64 0, i32 1, i64 4
  %rtint.i = bitcast %union.rtunion_def* %arrayidx15.i to i32*
  %15 = load i32* %rtint.i, align 4, !tbaa !1
  switch i32 %15, label %if.then41.i [
    i32 -96, label %while.cond.backedge.i
    i32 -95, label %while.cond.backedge.i
    i32 -83, label %while.cond.backedge.i
    i32 -82, label %while.cond.backedge.i
    i32 -86, label %while.cond.backedge.i
    i32 -85, label %while.cond.backedge.i
  ]

while.cond.backedge.i:                            ; preds = %if.end50.i, %if.end13.i, %if.end13.i, %if.end13.i, %if.end13.i, %if.end13.i, %if.end13.i
  %cmp.i = icmp eq %struct.rtx_def* %13, %2
  br i1 %cmp.i, label %unlink_other_notes.exit, label %while.cond.backedge.i.land.rhs.i_crit_edge

while.cond.backedge.i.land.rhs.i_crit_edge:       ; preds = %while.cond.backedge.i
  %.phi.trans.insert48 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load.i.pre = load i32* %.phi.trans.insert48, align 8
  br label %land.rhs.i

if.then41.i:                                      ; preds = %if.end13.i
  %16 = load %struct.rtx_def** @note_list, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.rtx_def* %insn.addr.072.i, i64 0, i32 1, i64 1, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %16 to i64
  store i64 %.c.i, i64* %17, align 8, !tbaa !5
  %18 = load %struct.rtx_def** @note_list, align 8, !tbaa !5
  %tobool45.i = icmp eq %struct.rtx_def* %18, null
  br i1 %tobool45.i, label %if.end50.i, label %if.then46.i

if.then46.i:                                      ; preds = %if.then41.i
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 2, i32 0
  %insn.addr.0.c.i = ptrtoint %struct.rtx_def* %insn.addr.072.i to i64
  store i64 %insn.addr.0.c.i, i64* %19, align 8, !tbaa !5
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.then46.i, %if.then41.i
  store %struct.rtx_def* %insn.addr.072.i, %struct.rtx_def** @note_list, align 8, !tbaa !5
  br label %while.cond.backedge.i

unlink_other_notes.exit:                          ; preds = %land.rhs.i, %while.cond.backedge.i, %land.rhs.us.i, %while.cond.backedge.us.i
  %insn.addr.0.lcssa.i = phi %struct.rtx_def* [ %insn.addr.072.us.i, %land.rhs.us.i ], [ %2, %while.cond.backedge.us.i ], [ %insn.addr.072.i, %land.rhs.i ], [ %2, %while.cond.backedge.i ]
  %cmp11 = icmp eq %struct.rtx_def* %insn.046, %tail
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %unlink_other_notes.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 1371, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.rm_other_notes, i64 0, i64 0)) #8
  unreachable

if.end14:                                         ; preds = %unlink_other_notes.exit
  %cmp15 = icmp eq %struct.rtx_def* %insn.046, %head
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end14
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 1373, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.rm_other_notes, i64 0, i64 0)) #8
  unreachable

if.end18:                                         ; preds = %if.end14
  %cmp19 = icmp eq %struct.rtx_def* %insn.addr.0.lcssa.i, %2
  br i1 %cmp19, label %if.then21, label %for.inc

if.then21:                                        ; preds = %if.end18
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 1375, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.rm_other_notes, i64 0, i64 0)) #8
  unreachable

for.inc:                                          ; preds = %for.body, %if.end18
  %insn.1 = phi %struct.rtx_def* [ %insn.addr.0.lcssa.i, %if.end18 ], [ %insn.046, %for.body ]
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 2
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx26, align 8, !tbaa !5
  %cmp4 = icmp eq %struct.rtx_def* %20, %2
  br i1 %cmp4, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end, %land.lhs.true
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @sched_emit_insn(%struct.rtx_def* %pat) #0 {
entry:
  %0 = load %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %call = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %pat, %struct.rtx_def* %0) #5
  store %struct.rtx_def* %call, %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  ret %struct.rtx_def* %call
}

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define void @schedule_block(i32 %b, i32 %rgn_n_insns) #0 {
entry:
  %insn.i.i359 = alloca %struct.rtx_def*, align 8
  %insn.i.i = alloca %struct.rtx_def*, align 8
  %ready = alloca %struct.ready_list, align 8
  %0 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %prev_head1 = getelementptr inbounds %struct.sched_info* %0, i64 0, i32 8
  %1 = load %struct.rtx_def** %prev_head1, align 8, !tbaa !27
  %next_tail2 = getelementptr inbounds %struct.sched_info* %0, i64 0, i32 9
  %2 = load %struct.rtx_def** %next_tail2, align 8, !tbaa !29
  %arrayidx = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 1
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx5, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %3, %4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load = load i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom196 = zext i32 %bf.clear to i64
  %arrayidx6 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom196
  %6 = load i8* %arrayidx6, align 1, !tbaa !25
  %cmp7 = icmp eq i8 %6, 105
  br i1 %cmp7, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 1658, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.schedule_block, i64 0, i64 0)) #8
  unreachable

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool = icmp eq i32 %7, 0
  br i1 %tobool, label %if.end19, label %if.then9

if.then9:                                         ; preds = %if.end
  %8 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %9 = call i64 @fwrite(i8* getelementptr inbounds ([61 x i8]* @.str5, i64 0, i64 0), i64 60, i64 1, %struct._IO_FILE* %8)
  %10 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %11 = load i32* %rtint, align 4, !tbaa !1
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtint14 = bitcast %union.rtunion_def* %arrayidx13 to i32*
  %12 = load i32* %rtint14, align 4, !tbaa !1
  %13 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool15 = icmp ne i32 %13, 0
  %cond = select i1 %tobool15, i8* getelementptr inbounds ([6 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str8, i64 0, i64 0)
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([51 x i8]* @.str6, i64 0, i64 0), i32 %b, i32 %11, i32 %12, i8* %cond) #5
  %14 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %15 = call i64 @fwrite(i8* getelementptr inbounds ([61 x i8]* @.str5, i64 0, i64 0), i64 60, i64 1, %struct._IO_FILE* %14)
  %16 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %16)
  call void @visualize_alloc() #5
  call void @init_block_visualization() #5
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then9
  call void @llvm.memset.p0i8.i64(i8* bitcast ([78 x %struct.rtx_def*]* @unit_last_insn to i8*), i8 0, i64 624, i32 16, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* bitcast ([78 x i32]* @unit_tick to i8*), i8 0, i64 312, i32 16, i1 false) #5
  %add = add nsw i32 %rgn_n_insns, 1
  %17 = load i32* @issue_rate, align 4, !tbaa !1
  %add20 = add nsw i32 %add, %17
  %veclen = getelementptr inbounds %struct.ready_list* %ready, i64 0, i32 1
  store i32 %add20, i32* %veclen, align 8, !tbaa !20
  %sub = add i32 %17, %rgn_n_insns
  %first = getelementptr inbounds %struct.ready_list* %ready, i64 0, i32 2
  store i32 %sub, i32* %first, align 4, !tbaa !16
  %conv23 = sext i32 %add20 to i64
  %mul = shl nsw i64 %conv23, 3
  %call24 = call noalias i8* @xmalloc(i64 %mul) #5
  %18 = bitcast i8* %call24 to %struct.rtx_def**
  %vec = getelementptr inbounds %struct.ready_list* %ready, i64 0, i32 0
  store %struct.rtx_def** %18, %struct.rtx_def*** %vec, align 8, !tbaa !19
  %n_ready = getelementptr inbounds %struct.ready_list* %ready, i64 0, i32 3
  store i32 0, i32* %n_ready, align 8, !tbaa !18
  %19 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %init_ready_list = getelementptr inbounds %struct.sched_info* %19, i64 0, i32 0
  %20 = load void (%struct.ready_list*)** %init_ready_list, align 8, !tbaa !30
  call void %20(%struct.ready_list* %ready) #5
  %21 = load void (%struct._IO_FILE*, i32, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 4), align 8, !tbaa !31
  %tobool25 = icmp eq void (%struct._IO_FILE*, i32, i32)* %21, null
  br i1 %tobool25, label %if.end28, label %if.then26

if.then26:                                        ; preds = %if.end19
  %22 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %23 = load i32* @sched_verbose, align 4, !tbaa !1
  %24 = load i32* %veclen, align 8, !tbaa !20
  call void %21(%struct._IO_FILE* %22, i32 %23, i32 %24) #5
  br label %if.end28

if.end28:                                         ; preds = %if.end19, %if.then26
  store %struct.rtx_def* %1, %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  store i32 0, i32* @q_ptr, align 4, !tbaa !1
  store i32 0, i32* @q_size, align 4, !tbaa !1
  store i32 0, i32* @last_clock_var, align 4, !tbaa !1
  call void @llvm.memset.p0i8.i64(i8* bitcast ([128 x %struct.rtx_def*]* @insn_queue to i8*), i8 0, i64 1024, i32 16, i1 false)
  store i32 -1, i32* @clock_var, align 4, !tbaa !1
  %25 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %schedule_more_p411 = getelementptr inbounds %struct.sched_info* %25, i64 0, i32 2
  %26 = load i32 ()** %schedule_more_p411, align 8, !tbaa !37
  %call29412 = call i32 %26() #5
  %tobool30413 = icmp eq i32 %call29412, 0
  br i1 %tobool30413, label %while.end101, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.end28
  %27 = bitcast %struct.rtx_def** %insn.i.i to i8*
  %28 = bitcast %struct.rtx_def** %insn.i.i359 to i8*
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %29 = load i32* @clock_var, align 4, !tbaa !1
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* @clock_var, align 4, !tbaa !1
  %30 = load i32* @q_ptr, align 4, !tbaa !1
  %add.i = add nsw i32 %30, 1
  %and.i = and i32 %add.i, 127
  store i32 %and.i, i32* @q_ptr, align 4, !tbaa !1
  %idxprom83.i = zext i32 %and.i to i64
  %arrayidx.i202 = getelementptr inbounds [128 x %struct.rtx_def*]* @insn_queue, i64 0, i64 %idxprom83.i
  %link.0113.i = load %struct.rtx_def** %arrayidx.i202, align 8
  %tobool114.i = icmp eq %struct.rtx_def* %link.0113.i, null
  br i1 %tobool114.i, label %for.end.i211, label %for.body.i206

for.body.i206:                                    ; preds = %while.body, %for.inc.i
  %link.0115.i = phi %struct.rtx_def* [ %link.0.i, %for.inc.i ], [ %link.0113.i, %while.body ]
  %fld.i = getelementptr inbounds %struct.rtx_def* %link.0115.i, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %32 = load i32* @q_size, align 4, !tbaa !1
  %sub.i = add nsw i32 %32, -1
  store i32 %sub.i, i32* @q_size, align 4, !tbaa !1
  %33 = load i32* @sched_verbose, align 4, !tbaa !1
  %cmp.i205 = icmp sgt i32 %33, 1
  br i1 %cmp.i205, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %for.body.i206
  %34 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %35 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %print_insn.i207 = getelementptr inbounds %struct.sched_info* %35, i64 0, i32 5
  %36 = load i8* (%struct.rtx_def*, i32)** %print_insn.i207, align 8, !tbaa !38
  %call.i = call i8* %36(%struct.rtx_def* %31, i32 0) #5
  %call2.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([25 x i8]* @.str23, i64 0, i64 0), i8* %call.i) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.i206
  %37 = load i32* %first, align 4, !tbaa !16
  %38 = load i32* %n_ready, align 8, !tbaa !18
  %cmp.i.i = icmp eq i32 %37, %38
  br i1 %cmp.i.i, label %if.then.i.i, label %ready_add.exit.i

if.then.i.i:                                      ; preds = %if.end.i
  %39 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %idx.ext2.i.i208 = sext i32 %37 to i64
  %cmp.i.i.i = icmp eq i32 %37, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %ready_lastpos.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 893, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.ready_lastpos, i64 0, i64 0)) #8
  unreachable

ready_lastpos.exit.i.i:                           ; preds = %if.then.i.i
  %40 = load i32* %veclen, align 8, !tbaa !20
  %idx.ext.i.i209 = sext i32 %40 to i64
  %add.ptr.sum.i.i210 = sub i64 %idx.ext.i.i209, %idx.ext2.i.i208
  %add.ptr3.i.i = getelementptr inbounds %struct.rtx_def** %39, i64 %add.ptr.sum.i.i210
  %41 = bitcast %struct.rtx_def** %add.ptr3.i.i to i8*
  %add.ptr4.i.i.i = getelementptr inbounds %struct.rtx_def** %39, i64 1
  %42 = bitcast %struct.rtx_def** %add.ptr4.i.i.i to i8*
  %mul.i.i = shl nsw i64 %idx.ext2.i.i208, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %41, i8* %42, i64 %mul.i.i, i32 8, i1 false) #5
  %43 = load i32* %veclen, align 8, !tbaa !20
  %sub.i.i = add nsw i32 %43, -1
  store i32 %sub.i.i, i32* %first, align 4, !tbaa !16
  %.pre.i.i = load i32* %n_ready, align 8, !tbaa !18
  br label %ready_add.exit.i

ready_add.exit.i:                                 ; preds = %ready_lastpos.exit.i.i, %if.end.i
  %44 = phi i32 [ %.pre.i.i, %ready_lastpos.exit.i.i ], [ %38, %if.end.i ]
  %45 = phi i32 [ %sub.i.i, %ready_lastpos.exit.i.i ], [ %37, %if.end.i ]
  %sub9.i.i = sub nsw i32 %45, %44
  %idxprom.i.i = sext i32 %sub9.i.i to i64
  %46 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def** %46, i64 %idxprom.i.i
  store %struct.rtx_def* %31, %struct.rtx_def** %arrayidx.i.i, align 8, !tbaa !5
  %inc.i.i = add nsw i32 %44, 1
  store i32 %inc.i.i, i32* %n_ready, align 8, !tbaa !18
  %47 = load i32* @sched_verbose, align 4, !tbaa !1
  %cmp3.i = icmp sgt i32 %47, 1
  br i1 %cmp3.i, label %if.then4.i, label %for.inc.i

if.then4.i:                                       ; preds = %ready_add.exit.i
  %48 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %49 = call i64 @fwrite(i8* getelementptr inbounds ([32 x i8]* @.str24, i64 0, i64 0), i64 31, i64 1, %struct._IO_FILE* %48) #5
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then4.i, %ready_add.exit.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %link.0115.i, i64 0, i32 1, i64 1
  %rtx9.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtx_def**
  %link.0.i = load %struct.rtx_def** %rtx9.i, align 8
  %tobool.i = icmp eq %struct.rtx_def* %link.0.i, null
  br i1 %tobool.i, label %for.cond.for.end_crit_edge.i, label %for.body.i206

for.cond.for.end_crit_edge.i:                     ; preds = %for.inc.i
  %.pre.i = load i32* @q_ptr, align 4, !tbaa !1
  br label %for.end.i211

for.end.i211:                                     ; preds = %while.body, %for.cond.for.end_crit_edge.i
  %50 = phi i32 [ %.pre.i, %for.cond.for.end_crit_edge.i ], [ %and.i, %while.body ]
  %idxprom10.i = sext i32 %50 to i64
  %arrayidx11.i = getelementptr inbounds [128 x %struct.rtx_def*]* @insn_queue, i64 0, i64 %idxprom10.i
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx11.i, align 8, !tbaa !5
  %51 = load i32* %n_ready, align 8, !tbaa !18
  %cmp12.i = icmp eq i32 %51, 0
  br i1 %cmp12.i, label %for.body16.i, label %if.end35

for.body16.i:                                     ; preds = %for.end.i211, %for.inc54.i
  %52 = phi i32 [ %73, %for.inc54.i ], [ %50, %for.end.i211 ]
  %stalls.0111.i = phi i32 [ %inc.i, %for.inc54.i ], [ 1, %for.end.i211 ]
  %add17.i = add nsw i32 %stalls.0111.i, %52
  %and18.i = and i32 %add17.i, 127
  %idxprom1984.i = zext i32 %and18.i to i64
  %arrayidx20.i = getelementptr inbounds [128 x %struct.rtx_def*]* @insn_queue, i64 0, i64 %idxprom1984.i
  %53 = load %struct.rtx_def** %arrayidx20.i, align 8, !tbaa !5
  %tobool21.i = icmp eq %struct.rtx_def* %53, null
  br i1 %tobool21.i, label %for.inc54.i, label %for.body25.i

for.body25.i:                                     ; preds = %for.body16.i, %for.inc40.i
  %link.1110.i = phi %struct.rtx_def* [ %72, %for.inc40.i ], [ %53, %for.body16.i ]
  %fld26.i = getelementptr inbounds %struct.rtx_def* %link.1110.i, i64 0, i32 1
  %rtx28.i = bitcast [1 x %union.rtunion_def]* %fld26.i to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx28.i, align 8, !tbaa !5
  %55 = load i32* @q_size, align 4, !tbaa !1
  %sub29.i = add nsw i32 %55, -1
  store i32 %sub29.i, i32* @q_size, align 4, !tbaa !1
  %56 = load i32* @sched_verbose, align 4, !tbaa !1
  %cmp30.i = icmp sgt i32 %56, 1
  br i1 %cmp30.i, label %if.then31.i, label %if.end35.i

if.then31.i:                                      ; preds = %for.body25.i
  %57 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %58 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %print_insn32.i = getelementptr inbounds %struct.sched_info* %58, i64 0, i32 5
  %59 = load i8* (%struct.rtx_def*, i32)** %print_insn32.i, align 8, !tbaa !38
  %call33.i = call i8* %59(%struct.rtx_def* %54, i32 0) #5
  %call34.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([25 x i8]* @.str23, i64 0, i64 0), i8* %call33.i) #5
  br label %if.end35.i

if.end35.i:                                       ; preds = %if.then31.i, %for.body25.i
  %60 = load i32* %first, align 4, !tbaa !16
  %61 = load i32* %n_ready, align 8, !tbaa !18
  %cmp.i88.i = icmp eq i32 %60, %61
  br i1 %cmp.i88.i, label %if.then.i93.i, label %ready_add.exit107.i

if.then.i93.i:                                    ; preds = %if.end35.i
  %62 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %idx.ext2.i91.i = sext i32 %60 to i64
  %cmp.i.i92.i = icmp eq i32 %60, 0
  br i1 %cmp.i.i92.i, label %if.then.i.i94.i, label %ready_lastpos.exit.i102.i

if.then.i.i94.i:                                  ; preds = %if.then.i93.i
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 893, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.ready_lastpos, i64 0, i64 0)) #8
  unreachable

ready_lastpos.exit.i102.i:                        ; preds = %if.then.i93.i
  %63 = load i32* %veclen, align 8, !tbaa !20
  %idx.ext.i95.i = sext i32 %63 to i64
  %add.ptr.sum.i96.i = sub i64 %idx.ext.i95.i, %idx.ext2.i91.i
  %add.ptr3.i97.i = getelementptr inbounds %struct.rtx_def** %62, i64 %add.ptr.sum.i96.i
  %64 = bitcast %struct.rtx_def** %add.ptr3.i97.i to i8*
  %add.ptr4.i.i98.i = getelementptr inbounds %struct.rtx_def** %62, i64 1
  %65 = bitcast %struct.rtx_def** %add.ptr4.i.i98.i to i8*
  %mul.i99.i = shl nsw i64 %idx.ext2.i91.i, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %64, i8* %65, i64 %mul.i99.i, i32 8, i1 false) #5
  %66 = load i32* %veclen, align 8, !tbaa !20
  %sub.i100.i = add nsw i32 %66, -1
  store i32 %sub.i100.i, i32* %first, align 4, !tbaa !16
  %.pre.i101.i = load i32* %n_ready, align 8, !tbaa !18
  br label %ready_add.exit107.i

ready_add.exit107.i:                              ; preds = %ready_lastpos.exit.i102.i, %if.end35.i
  %67 = phi i32 [ %.pre.i101.i, %ready_lastpos.exit.i102.i ], [ %61, %if.end35.i ]
  %68 = phi i32 [ %sub.i100.i, %ready_lastpos.exit.i102.i ], [ %60, %if.end35.i ]
  %sub9.i103.i = sub nsw i32 %68, %67
  %idxprom.i104.i = sext i32 %sub9.i103.i to i64
  %69 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %arrayidx.i105.i = getelementptr inbounds %struct.rtx_def** %69, i64 %idxprom.i104.i
  store %struct.rtx_def* %54, %struct.rtx_def** %arrayidx.i105.i, align 8, !tbaa !5
  %inc.i106.i = add nsw i32 %67, 1
  store i32 %inc.i106.i, i32* %n_ready, align 8, !tbaa !18
  %70 = load i32* @sched_verbose, align 4, !tbaa !1
  %cmp36.i = icmp sgt i32 %70, 1
  br i1 %cmp36.i, label %if.then37.i, label %for.inc40.i

if.then37.i:                                      ; preds = %ready_add.exit107.i
  %71 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %call38.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([32 x i8]* @.str25, i64 0, i64 0), i32 %stalls.0111.i) #5
  br label %for.inc40.i

for.inc40.i:                                      ; preds = %if.then37.i, %ready_add.exit107.i
  %arrayidx42.i = getelementptr inbounds %struct.rtx_def* %link.1110.i, i64 0, i32 1, i64 1
  %rtx43.i = bitcast %union.rtunion_def* %arrayidx42.i to %struct.rtx_def**
  %72 = load %struct.rtx_def** %rtx43.i, align 8, !tbaa !5
  %tobool24.i = icmp eq %struct.rtx_def* %72, null
  br i1 %tobool24.i, label %for.end44.i, label %for.body25.i

for.end44.i:                                      ; preds = %for.inc40.i
  %.pre116.i = load i32* @q_ptr, align 4, !tbaa !1
  %.pre117.i = load i32* %n_ready, align 8, !tbaa !18
  %phitmp.i = icmp eq i32 %.pre117.i, 0
  %add45.i = add nsw i32 %.pre116.i, %stalls.0111.i
  %and46.i = and i32 %add45.i, 127
  %idxprom4785.i = zext i32 %and46.i to i64
  %arrayidx48.i = getelementptr inbounds [128 x %struct.rtx_def*]* @insn_queue, i64 0, i64 %idxprom4785.i
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx48.i, align 8, !tbaa !5
  br i1 %phitmp.i, label %for.inc54.i, label %for.end55.i

for.inc54.i:                                      ; preds = %for.end44.i, %for.body16.i
  %73 = phi i32 [ %.pre116.i, %for.end44.i ], [ %52, %for.body16.i ]
  %inc.i = add nsw i32 %stalls.0111.i, 1
  %cmp15.i = icmp slt i32 %inc.i, 128
  br i1 %cmp15.i, label %for.body16.i, label %for.end55.i

for.end55.i:                                      ; preds = %for.inc54.i, %for.end44.i
  %.pre423 = phi i32 [ %.pre117.i, %for.end44.i ], [ 0, %for.inc54.i ]
  %74 = phi i32 [ %.pre116.i, %for.end44.i ], [ %73, %for.inc54.i ]
  %stalls.0.lcssa.i = phi i32 [ %stalls.0111.i, %for.end44.i ], [ %inc.i, %for.inc54.i ]
  %75 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool56.i = icmp ne i32 %75, 0
  %tobool57.i = icmp ne i32 %stalls.0.lcssa.i, 0
  %or.cond.i = and i1 %tobool56.i, %tobool57.i
  br i1 %or.cond.i, label %if.then58.i, label %queue_to_ready.exit

if.then58.i:                                      ; preds = %for.end55.i
  call void @visualize_stall_cycles(i32 %stalls.0.lcssa.i) #5
  %.pre118.i = load i32* @q_ptr, align 4, !tbaa !1
  %.pre.pre = load i32* %n_ready, align 8, !tbaa !18
  br label %queue_to_ready.exit

queue_to_ready.exit:                              ; preds = %for.end55.i, %if.then58.i
  %.pre = phi i32 [ %.pre.pre, %if.then58.i ], [ %.pre423, %for.end55.i ]
  %76 = phi i32 [ %.pre118.i, %if.then58.i ], [ %74, %for.end55.i ]
  %add60.i = add nsw i32 %76, %stalls.0.lcssa.i
  %and61.i = and i32 %add60.i, 127
  store i32 %and61.i, i32* @q_ptr, align 4, !tbaa !1
  %77 = load i32* @clock_var, align 4, !tbaa !1
  %add62.i = add nsw i32 %77, %stalls.0.lcssa.i
  store i32 %add62.i, i32* @clock_var, align 4, !tbaa !1
  %cmp32 = icmp eq i32 %.pre, 0
  br i1 %cmp32, label %if.then34, label %if.end35

if.then34:                                        ; preds = %queue_to_ready.exit
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 1713, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.schedule_block, i64 0, i64 0)) #8
  unreachable

if.end35:                                         ; preds = %for.end.i211, %queue_to_ready.exit
  %78 = phi i32 [ %.pre, %queue_to_ready.exit ], [ %51, %for.end.i211 ]
  %79 = load i32* @sched_verbose, align 4, !tbaa !1
  %cmp36 = icmp sgt i32 %79, 1
  br i1 %cmp36, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.end35
  %80 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %81 = call i64 @fwrite(i8* getelementptr inbounds ([39 x i8]* @.str10, i64 0, i64 0), i64 38, i64 1, %struct._IO_FILE* %80)
  %82 = load i32* %n_ready, align 8, !tbaa !18
  %cmp.i213 = icmp eq i32 %82, 0
  br i1 %cmp.i213, label %if.then.i.i236, label %ready_lastpos.exit.i221

ready_lastpos.exit.i221:                          ; preds = %if.then38
  %83 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %84 = load i32* %first, align 4, !tbaa !16
  %idx.ext.i.i216 = sext i32 %84 to i64
  %idx.ext2.i.i217 = sext i32 %82 to i64
  %add.ptr.sum.i.i218 = sub i64 1, %idx.ext2.i.i217
  %add.ptr3.sum.i.i219 = add i64 %add.ptr.sum.i.i218, %idx.ext.i.i216
  %cmp210.i220 = icmp sgt i32 %82, 0
  %85 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  br i1 %cmp210.i220, label %for.body.i230, label %for.end.i233

for.body.i230:                                    ; preds = %ready_lastpos.exit.i221, %for.body.i230
  %indvars.iv.i222 = phi i64 [ %indvars.iv.next.i228, %for.body.i230 ], [ 0, %ready_lastpos.exit.i221 ]
  %86 = phi %struct._IO_FILE* [ %92, %for.body.i230 ], [ %85, %ready_lastpos.exit.i221 ]
  %87 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %print_insn.i223 = getelementptr inbounds %struct.sched_info* %87, i64 0, i32 5
  %88 = load i8* (%struct.rtx_def*, i32)** %print_insn.i223, align 8, !tbaa !38
  %add.ptr4.i.sum.i224 = add i64 %add.ptr3.sum.i.i219, %indvars.iv.i222
  %arrayidx.i225 = getelementptr inbounds %struct.rtx_def** %83, i64 %add.ptr4.i.sum.i224
  %89 = load %struct.rtx_def** %arrayidx.i225, align 8, !tbaa !5
  %call3.i226 = call i8* %88(%struct.rtx_def* %89, i32 0) #5
  %call4.i227 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([5 x i8]* @.str22, i64 0, i64 0), i8* %call3.i226) #5
  %indvars.iv.next.i228 = add nuw nsw i64 %indvars.iv.i222, 1
  %90 = load i32* %n_ready, align 8, !tbaa !18
  %91 = trunc i64 %indvars.iv.next.i228 to i32
  %cmp2.i229 = icmp slt i32 %91, %90
  %92 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  br i1 %cmp2.i229, label %for.body.i230, label %for.end.i233

for.end.i233:                                     ; preds = %for.body.i230, %ready_lastpos.exit.i221
  %.lcssa.i231 = phi %struct._IO_FILE* [ %85, %ready_lastpos.exit.i221 ], [ %92, %for.body.i230 ]
  %fputc.i232 = call i32 @fputc(i32 10, %struct._IO_FILE* %.lcssa.i231) #5
  %ready.idx201.val.pre = load i32* %n_ready, align 8, !tbaa !18
  br label %if.end40

if.end40:                                         ; preds = %for.end.i233, %if.end35
  %ready.idx201.val = phi i32 [ %ready.idx201.val.pre, %for.end.i233 ], [ %78, %if.end35 ]
  %ready.idx199.val = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %cmp.i.i235 = icmp eq i32 %ready.idx201.val, 0
  br i1 %cmp.i.i235, label %if.then.i.i236, label %ready_lastpos.exit.i242

if.then.i.i236:                                   ; preds = %if.then38, %if.end40
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 893, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.ready_lastpos, i64 0, i64 0)) #8
  unreachable

ready_lastpos.exit.i242:                          ; preds = %if.end40
  %ready.idx200.val = load i32* %first, align 4, !tbaa !16
  %idx.ext.i.i237 = sext i32 %ready.idx200.val to i64
  %idx.ext2.i.i238 = sext i32 %ready.idx201.val to i64
  %add.ptr.sum.i.i239 = sub i64 1, %idx.ext2.i.i238
  %add.ptr3.sum.i.i240 = add i64 %idx.ext.i.i237, %add.ptr.sum.i.i239
  %add.ptr4.i.i = getelementptr inbounds %struct.rtx_def** %ready.idx199.val, i64 %add.ptr3.sum.i.i240
  %cmp.i241 = icmp eq i32 %ready.idx201.val, 2
  br i1 %cmp.i241, label %land.rhs.i.i, label %if.else.i

land.rhs.i.i:                                     ; preds = %ready_lastpos.exit.i242
  call void @llvm.lifetime.start(i64 8, i8* %27) #5
  %add.ptr4.i.sum.i243 = add i64 %add.ptr3.sum.i.i240, 1
  %arrayidx.i.i244 = getelementptr inbounds %struct.rtx_def** %ready.idx199.val, i64 %add.ptr4.i.sum.i243
  %93 = load %struct.rtx_def** %arrayidx.i.i244, align 8, !tbaa !5
  store %struct.rtx_def* %93, %struct.rtx_def** %insn.i.i, align 8, !tbaa !5
  %94 = bitcast %struct.rtx_def** %add.ptr4.i.i to i8*
  %call.i.i = call i32 @rank_for_schedule(i8* %94, i8* %27) #5
  %cmp2.i.i = icmp sgt i32 %call.i.i, -1
  br i1 %cmp2.i.i, label %swap_sort.exit.loopexit.i, label %swap_sort.exit.i

swap_sort.exit.loopexit.i:                        ; preds = %land.rhs.i.i
  %95 = load %struct.rtx_def** %add.ptr4.i.i, align 8, !tbaa !5
  store %struct.rtx_def* %95, %struct.rtx_def** %arrayidx.i.i244, align 8, !tbaa !5
  br label %swap_sort.exit.i

swap_sort.exit.i:                                 ; preds = %swap_sort.exit.loopexit.i, %land.rhs.i.i
  %i.0.lcssa.i.i = phi i64 [ 0, %swap_sort.exit.loopexit.i ], [ 1, %land.rhs.i.i ]
  %add.ptr4.i.sum1.i = add i64 %i.0.lcssa.i.i, %add.ptr3.sum.i.i240
  %arrayidx10.i.i = getelementptr inbounds %struct.rtx_def** %ready.idx199.val, i64 %add.ptr4.i.sum1.i
  store %struct.rtx_def* %93, %struct.rtx_def** %arrayidx10.i.i, align 8, !tbaa !5
  call void @llvm.lifetime.end(i64 8, i8* %27) #5
  br label %ready_sort.exit

if.else.i:                                        ; preds = %ready_lastpos.exit.i242
  %cmp3.i245 = icmp sgt i32 %ready.idx201.val, 2
  br i1 %cmp3.i245, label %if.then4.i246, label %ready_sort.exit

if.then4.i246:                                    ; preds = %if.else.i
  %96 = bitcast %struct.rtx_def** %add.ptr4.i.i to i8*
  call void @specqsort(i8* %96, i32 %ready.idx201.val, i32 8, i32 (...)* bitcast (i32 (i8*, i8*)* @rank_for_schedule to i32 (...)*)) #5
  br label %ready_sort.exit

ready_sort.exit:                                  ; preds = %swap_sort.exit.i, %if.else.i, %if.then4.i246
  %97 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 6), align 8, !tbaa !39
  %tobool41 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* %97, null
  br i1 %tobool41, label %if.else, label %if.then42

if.then42:                                        ; preds = %ready_sort.exit
  %98 = load i32* %n_ready, align 8, !tbaa !18
  %cmp.i248 = icmp eq i32 %98, 0
  br i1 %cmp.i248, label %if.then.i249, label %ready_lastpos.exit

if.then.i249:                                     ; preds = %if.then42
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 893, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.ready_lastpos, i64 0, i64 0)) #8
  unreachable

ready_lastpos.exit:                               ; preds = %if.then42
  %99 = load i32* @sched_verbose, align 4, !tbaa !1
  %100 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %101 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %102 = load i32* %first, align 4, !tbaa !16
  %idx.ext.i = sext i32 %102 to i64
  %idx.ext2.i = sext i32 %98 to i64
  %add.ptr.sum.i = sub i64 1, %idx.ext2.i
  %add.ptr3.sum.i = add i64 %add.ptr.sum.i, %idx.ext.i
  %add.ptr4.i = getelementptr inbounds %struct.rtx_def** %101, i64 %add.ptr3.sum.i
  %103 = load i32* @clock_var, align 4, !tbaa !1
  %call45 = call i32 %97(%struct._IO_FILE* %100, i32 %99, %struct.rtx_def** %add.ptr4.i, i32* %n_ready, i32 %103) #5
  br label %if.end46

if.else:                                          ; preds = %ready_sort.exit
  %104 = load i32* @issue_rate, align 4, !tbaa !1
  br label %if.end46

if.end46:                                         ; preds = %if.else, %ready_lastpos.exit
  %can_issue_more.0 = phi i32 [ %call45, %ready_lastpos.exit ], [ %104, %if.else ]
  %105 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool47 = icmp ne i32 %105, 0
  %106 = load %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 8), align 8
  %tobool49 = icmp ne %struct.rtx_def* (i32, %struct.rtx_def*)* %106, null
  %or.cond = and i1 %tobool47, %tobool49
  br i1 %or.cond, label %if.then50, label %if.end52

if.then50:                                        ; preds = %if.end46
  %107 = load i32* @clock_var, align 4, !tbaa !1
  %108 = load %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %call51 = call %struct.rtx_def* %106(i32 %107, %struct.rtx_def* %108) #5
  store %struct.rtx_def* %call51, %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %.pr = load i32* @sched_verbose, align 4, !tbaa !1
  br label %if.end52

if.end52:                                         ; preds = %if.then50, %if.end46
  %109 = phi i32 [ %.pr, %if.then50 ], [ %105, %if.end46 ]
  %tobool53 = icmp eq i32 %109, 0
  br i1 %tobool53, label %while.cond57.preheader, label %if.then54

if.then54:                                        ; preds = %if.end52
  %110 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %111 = load i32* @clock_var, align 4, !tbaa !1
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %110, i8* getelementptr inbounds ([27 x i8]* @.str11, i64 0, i64 0), i32 %111) #5
  %112 = load i32* %n_ready, align 8, !tbaa !18
  %cmp.i252 = icmp eq i32 %112, 0
  br i1 %cmp.i252, label %while.cond57.preheader, label %ready_lastpos.exit.i260

ready_lastpos.exit.i260:                          ; preds = %if.then54
  %113 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %114 = load i32* %first, align 4, !tbaa !16
  %idx.ext.i.i255 = sext i32 %114 to i64
  %idx.ext2.i.i256 = sext i32 %112 to i64
  %add.ptr.sum.i.i257 = sub i64 1, %idx.ext2.i.i256
  %add.ptr3.sum.i.i258 = add i64 %add.ptr.sum.i.i257, %idx.ext.i.i255
  %cmp210.i259 = icmp sgt i32 %112, 0
  %115 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  br i1 %cmp210.i259, label %for.body.i269, label %for.end.i272

for.body.i269:                                    ; preds = %ready_lastpos.exit.i260, %for.body.i269
  %indvars.iv.i261 = phi i64 [ %indvars.iv.next.i267, %for.body.i269 ], [ 0, %ready_lastpos.exit.i260 ]
  %116 = phi %struct._IO_FILE* [ %122, %for.body.i269 ], [ %115, %ready_lastpos.exit.i260 ]
  %117 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %print_insn.i262 = getelementptr inbounds %struct.sched_info* %117, i64 0, i32 5
  %118 = load i8* (%struct.rtx_def*, i32)** %print_insn.i262, align 8, !tbaa !38
  %add.ptr4.i.sum.i263 = add i64 %add.ptr3.sum.i.i258, %indvars.iv.i261
  %arrayidx.i264 = getelementptr inbounds %struct.rtx_def** %113, i64 %add.ptr4.i.sum.i263
  %119 = load %struct.rtx_def** %arrayidx.i264, align 8, !tbaa !5
  %call3.i265 = call i8* %118(%struct.rtx_def* %119, i32 0) #5
  %call4.i266 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %116, i8* getelementptr inbounds ([5 x i8]* @.str22, i64 0, i64 0), i8* %call3.i265) #5
  %indvars.iv.next.i267 = add nuw nsw i64 %indvars.iv.i261, 1
  %120 = load i32* %n_ready, align 8, !tbaa !18
  %121 = trunc i64 %indvars.iv.next.i267 to i32
  %cmp2.i268 = icmp slt i32 %121, %120
  %122 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  br i1 %cmp2.i268, label %for.body.i269, label %for.end.i272

for.end.i272:                                     ; preds = %for.body.i269, %ready_lastpos.exit.i260
  %.lcssa.i270 = phi %struct._IO_FILE* [ %115, %ready_lastpos.exit.i260 ], [ %122, %for.body.i269 ]
  %fputc.i271 = call i32 @fputc(i32 10, %struct._IO_FILE* %.lcssa.i270) #5
  br label %while.cond57.preheader

while.cond57.preheader:                           ; preds = %if.end52, %if.then54, %for.end.i272
  %123 = load i32* %n_ready, align 8, !tbaa !18
  %cmp59404406 = icmp ne i32 %123, 0
  %tobool62407 = icmp ne i32 %can_issue_more.0, 0
  %or.cond166405408 = and i1 %cmp59404406, %tobool62407
  br i1 %or.cond166405408, label %land.rhs.lr.ph, label %while.end

land.rhs.lr.ph:                                   ; preds = %while.cond57.preheader, %while.cond57.outer.backedge
  %can_issue_more.1.ph409 = phi i32 [ %can_issue_more.1.ph.be, %while.cond57.outer.backedge ], [ %can_issue_more.0, %while.cond57.preheader ]
  br label %land.rhs

land.rhs:                                         ; preds = %while.cond57.backedge, %land.rhs.lr.ph
  %124 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %schedule_more_p63 = getelementptr inbounds %struct.sched_info* %124, i64 0, i32 2
  %125 = load i32 ()** %schedule_more_p63, align 8, !tbaa !37
  %call64 = call i32 %125() #5
  %tobool65 = icmp eq i32 %call64, 0
  br i1 %tobool65, label %while.end, label %while.body66

while.body66:                                     ; preds = %land.rhs
  %126 = load i32* %n_ready, align 8, !tbaa !18
  %cmp.i275 = icmp eq i32 %126, 0
  br i1 %cmp.i275, label %if.then.i276, label %if.end.i280

if.then.i276:                                     ; preds = %while.body66
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 925, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.ready_remove_first, i64 0, i64 0)) #8
  unreachable

if.end.i280:                                      ; preds = %while.body66
  %127 = load i32* %first, align 4, !tbaa !16
  %dec.i = add nsw i32 %127, -1
  store i32 %dec.i, i32* %first, align 4, !tbaa !16
  %idxprom.i = sext i32 %127 to i64
  %128 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %arrayidx.i279 = getelementptr inbounds %struct.rtx_def** %128, i64 %idxprom.i
  %129 = load %struct.rtx_def** %arrayidx.i279, align 8, !tbaa !5
  %dec2.i = add nsw i32 %126, -1
  store i32 %dec2.i, i32* %n_ready, align 8, !tbaa !18
  %cmp4.i = icmp eq i32 %dec2.i, 0
  br i1 %cmp4.i, label %if.then5.i, label %ready_remove_first.exit

if.then5.i:                                       ; preds = %if.end.i280
  %130 = load i32* %veclen, align 8, !tbaa !20
  %sub.i281 = add nsw i32 %130, -1
  store i32 %sub.i281, i32* %first, align 4, !tbaa !16
  br label %ready_remove_first.exit

ready_remove_first.exit:                          ; preds = %if.end.i280, %if.then5.i
  %fld.i282 = getelementptr inbounds %struct.rtx_def* %129, i64 0, i32 1
  %rtint.i = bitcast [1 x %union.rtunion_def]* %fld.i282 to i32*
  %131 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom.i283 = sext i32 %131 to i64
  %132 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %units.i = getelementptr inbounds %struct.haifa_insn_data* %132, i64 %idxprom.i283, i32 9
  %133 = load i16* %units.i, align 2, !tbaa !7
  %conv.i = sext i16 %133 to i32
  %cmp.i284 = icmp eq i16 %133, 0
  br i1 %cmp.i284, label %if.then.i285, label %insn_unit.exit

if.then.i285:                                     ; preds = %ready_remove_first.exit
  %arrayidx4.i = getelementptr inbounds %struct.rtx_def* %129, i64 0, i32 1, i64 4
  %rtint5.i = bitcast %union.rtunion_def* %arrayidx4.i to i32*
  %134 = load i32* %rtint5.i, align 4, !tbaa !1
  %cmp6.i = icmp sgt i32 %134, -1
  br i1 %cmp6.i, label %if.end21.i, label %cond.end.i

cond.end.i:                                       ; preds = %if.then.i285
  %call.i286 = call i32 @recog_memoized_1(%struct.rtx_def* %129) #5
  %.pr.i = load i32* %rtint5.i, align 4, !tbaa !1
  %cmp14.i = icmp slt i32 %.pr.i, 0
  br i1 %cmp14.i, label %insn_unit.exit, label %if.end21.i

if.end21.i:                                       ; preds = %cond.end.i, %if.then.i285
  %call17.i = call i32 @function_units_used(%struct.rtx_def* %129) #5
  %call17.lobit.i = lshr i32 %call17.i, 31
  %call17.lobit.not.i = xor i32 %call17.lobit.i, 1
  %inc.call17.i = add nsw i32 %call17.lobit.not.i, %call17.i
  %cmp22.i = icmp sgt i32 %inc.call17.i, -1
  br i1 %cmp22.i, label %if.then26.i, label %insn_unit.exit

if.then26.i:                                      ; preds = %if.end21.i
  %conv27.i = trunc i32 %inc.call17.i to i16
  %135 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom31.i = sext i32 %135 to i64
  %136 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %units33.i = getelementptr inbounds %struct.haifa_insn_data* %136, i64 %idxprom31.i, i32 9
  store i16 %conv27.i, i16* %units33.i, align 2, !tbaa !7
  br label %insn_unit.exit

insn_unit.exit:                                   ; preds = %ready_remove_first.exit, %cond.end.i, %if.end21.i, %if.then26.i
  %unit.1.i = phi i32 [ %inc.call17.i, %if.then26.i ], [ %conv.i, %ready_remove_first.exit ], [ %inc.call17.i, %if.end21.i ], [ -1, %cond.end.i ]
  %cmp36.i287 = icmp sgt i32 %unit.1.i, 0
  %sub.i288 = sext i1 %cmp36.i287 to i32
  %cond41.i = add nsw i32 %sub.i288, %unit.1.i
  %137 = load i32* @clock_var, align 4, !tbaa !1
  %call69 = call fastcc i32 @actual_hazard(i32 %cond41.i, %struct.rtx_def* %129, i32 %137, i32 0)
  %cmp70 = icmp sgt i32 %call69, 0
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %insn_unit.exit
  %138 = load i32* @q_ptr, align 4, !tbaa !1
  %add.i290 = add nsw i32 %138, %call69
  %and.i291 = and i32 %add.i290, 127
  %idxprom10.i292 = zext i32 %and.i291 to i64
  %arrayidx.i293 = getelementptr inbounds [128 x %struct.rtx_def*]* @insn_queue, i64 0, i64 %idxprom10.i292
  %139 = load %struct.rtx_def** %arrayidx.i293, align 8, !tbaa !5
  %call.i294 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %129, %struct.rtx_def* %139) #5
  store %struct.rtx_def* %call.i294, %struct.rtx_def** %arrayidx.i293, align 8, !tbaa !5
  %140 = load i32* @q_size, align 4, !tbaa !1
  %add3.i = add nsw i32 %140, 1
  store i32 %add3.i, i32* @q_size, align 4, !tbaa !1
  %141 = load i32* @sched_verbose, align 4, !tbaa !1
  %cmp.i295 = icmp sgt i32 %141, 1
  br i1 %cmp.i295, label %if.then.i298, label %while.cond57.backedge

while.cond57.backedge:                            ; preds = %if.then72, %if.then.i298
  %142 = load i32* %n_ready, align 8, !tbaa !18
  %cmp59 = icmp eq i32 %142, 0
  br i1 %cmp59, label %while.end, label %land.rhs

if.then.i298:                                     ; preds = %if.then72
  %143 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %144 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %print_insn.i296 = getelementptr inbounds %struct.sched_info* %144, i64 0, i32 5
  %145 = load i8* (%struct.rtx_def*, i32)** %print_insn.i296, align 8, !tbaa !38
  %call4.i297 = call i8* %145(%struct.rtx_def* %129, i32 0) #5
  %call5.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %143, i8* getelementptr inbounds ([25 x i8]* @.str20, i64 0, i64 0), i8* %call4.i297) #5
  %146 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %call6.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %146, i8* getelementptr inbounds ([23 x i8]* @.str21, i64 0, i64 0), i32 %call69) #5
  br label %while.cond57.backedge

if.end73:                                         ; preds = %insn_unit.exit
  %147 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %can_schedule_ready_p = getelementptr inbounds %struct.sched_info* %147, i64 0, i32 1
  %148 = load i32 (%struct.rtx_def*)** %can_schedule_ready_p, align 8, !tbaa !40
  %call74 = call i32 %148(%struct.rtx_def* %129) #5
  %tobool75 = icmp eq i32 %call74, 0
  br i1 %tobool75, label %next, label %if.end77

if.end77:                                         ; preds = %if.end73
  %149 = load %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %150 = getelementptr inbounds %struct.rtx_def* %129, i64 0, i32 0
  %bf.load73.i = load i32* %150, align 8
  %bf.clear74.i = and i32 %bf.load73.i, 268435456
  %tobool75.i = icmp eq i32 %bf.clear74.i, 0
  %arrayidx17.i68.pre.i = getelementptr inbounds %struct.rtx_def* %149, i64 0, i32 1, i64 2
  %rtx18.i69.pre.i = bitcast %union.rtunion_def* %arrayidx17.i68.pre.i to %struct.rtx_def**
  %.pre.i300 = getelementptr inbounds %union.rtunion_def* %arrayidx17.i68.pre.i, i64 0, i32 0
  %last.c.i72.pre.i = ptrtoint %struct.rtx_def* %149 to i64
  br i1 %tobool75.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %if.end77, %reemit_notes.exit61.i
  %insn.addr.077.i = phi %struct.rtx_def* [ %151, %reemit_notes.exit61.i ], [ %129, %if.end77 ]
  %retval1.076.i = phi %struct.rtx_def* [ %call2.retval1.0.i, %reemit_notes.exit61.i ], [ null, %if.end77 ]
  %arrayidx.i301 = getelementptr inbounds %struct.rtx_def* %insn.addr.077.i, i64 0, i32 1, i64 1
  %rtx.i302 = bitcast %union.rtunion_def* %arrayidx.i301 to %struct.rtx_def**
  %151 = load %struct.rtx_def** %rtx.i302, align 8, !tbaa !5
  %arrayidx.i.i303 = getelementptr inbounds %struct.rtx_def* %insn.addr.077.i, i64 0, i32 1, i64 2
  %rtx.i.i = bitcast %union.rtunion_def* %arrayidx.i.i303 to %struct.rtx_def**
  %152 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !5
  %153 = getelementptr inbounds %struct.rtx_def* %151, i64 0, i32 1, i64 2, i32 0
  %.c.i.i = ptrtoint %struct.rtx_def* %152 to i64
  store i64 %.c.i.i, i64* %153, align 8, !tbaa !5
  %154 = load %struct.rtx_def** %rtx.i302, align 8, !tbaa !5
  %155 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !5
  %156 = getelementptr inbounds %struct.rtx_def* %155, i64 0, i32 1, i64 1, i32 0
  %.c1.i.i = ptrtoint %struct.rtx_def* %154 to i64
  store i64 %.c1.i.i, i64* %156, align 8, !tbaa !5
  %157 = load %struct.rtx_def** %rtx18.i69.pre.i, align 8, !tbaa !5
  %158 = getelementptr inbounds %union.rtunion_def* %arrayidx.i.i303, i64 0, i32 0
  %.c2.i.i = ptrtoint %struct.rtx_def* %157 to i64
  store i64 %.c2.i.i, i64* %158, align 8, !tbaa !5
  %159 = load %struct.rtx_def** %rtx18.i69.pre.i, align 8, !tbaa !5
  %160 = getelementptr inbounds %struct.rtx_def* %159, i64 0, i32 1, i64 1, i32 0
  %insn.c.i.i = ptrtoint %struct.rtx_def* %insn.addr.077.i to i64
  store i64 %insn.c.i.i, i64* %160, align 8, !tbaa !5
  store i64 %insn.c.i.i, i64* %.pre.i300, align 8, !tbaa !5
  %161 = getelementptr inbounds %union.rtunion_def* %arrayidx.i301, i64 0, i32 0
  store i64 %last.c.i72.pre.i, i64* %161, align 8, !tbaa !5
  %cmp.i304 = icmp eq %struct.rtx_def* %retval1.076.i, null
  %arrayidx.i22.i = getelementptr inbounds %struct.rtx_def* %insn.addr.077.i, i64 0, i32 1, i64 6
  %note.0.in63.i23.i = bitcast %union.rtunion_def* %arrayidx.i22.i to %struct.rtx_def**
  %note.064.i24.i = load %struct.rtx_def** %note.0.in63.i23.i, align 8
  %tobool65.i25.i = icmp eq %struct.rtx_def* %note.064.i24.i, null
  br i1 %tobool65.i25.i, label %reemit_notes.exit61.i, label %for.body.i31.i

for.body.i31.i:                                   ; preds = %while.body.i, %for.inc.i60.i
  %note.067.i26.i = phi %struct.rtx_def* [ %note.0.i58.i, %for.inc.i60.i ], [ %note.064.i24.i, %while.body.i ]
  %last.addr.066.i27.i = phi %struct.rtx_def* [ %last.addr.1.i55.i, %for.inc.i60.i ], [ %insn.addr.077.i, %while.body.i ]
  %162 = getelementptr inbounds %struct.rtx_def* %note.067.i26.i, i64 0, i32 0
  %bf.load.i28.i = load i32* %162, align 8
  %bf.clear.i29.i = and i32 %bf.load.i28.i, 16711680
  %cmp.i30.i = icmp eq i32 %bf.clear.i29.i, 1572864
  br i1 %cmp.i30.i, label %if.then.i40.i, label %for.inc.i60.i

if.then.i40.i:                                    ; preds = %for.body.i31.i
  %fld2.i32.i = getelementptr inbounds %struct.rtx_def* %note.067.i26.i, i64 0, i32 1
  %rtx4.i33.i = bitcast [1 x %union.rtunion_def]* %fld2.i32.i to %struct.rtx_def**
  %163 = load %struct.rtx_def** %rtx4.i33.i, align 8, !tbaa !5
  %rtwint.i34.i = getelementptr inbounds %struct.rtx_def* %163, i64 0, i32 1, i64 0, i32 0
  %164 = load i64* %rtwint.i34.i, align 8, !tbaa !41
  %conv.i35.i = trunc i64 %164 to i32
  %conv.off.i36.i = add i32 %conv.i35.i, 83
  %165 = icmp ult i32 %conv.off.i36.i, 2
  %call.i37.i = call %struct.rtx_def* @emit_note_before(i32 %conv.i35.i, %struct.rtx_def* %last.addr.066.i27.i) #5
  call void @remove_note(%struct.rtx_def* %insn.addr.077.i, %struct.rtx_def* %note.067.i26.i) #5
  %arrayidx13.i38.i = getelementptr inbounds %struct.rtx_def* %note.067.i26.i, i64 0, i32 1, i64 1
  %rtx14.i39.i = bitcast %union.rtunion_def* %arrayidx13.i38.i to %struct.rtx_def**
  %166 = load %struct.rtx_def** %rtx14.i39.i, align 8, !tbaa !5
  br i1 %165, label %if.then11.i44.i, label %if.else.i45.i

if.then11.i44.i:                                  ; preds = %if.then.i40.i
  %arrayidx16.i41.i = getelementptr inbounds %struct.rtx_def* %166, i64 0, i32 1, i64 0
  %rtx17.i42.i = bitcast %union.rtunion_def* %arrayidx16.i41.i to %struct.rtx_def**
  %167 = load %struct.rtx_def** %rtx17.i42.i, align 8, !tbaa !5
  %168 = getelementptr inbounds %struct.rtx_def* %call.i37.i, i64 0, i32 1, i64 3, i32 0
  %.c.i43.i = ptrtoint %struct.rtx_def* %167 to i64
  store i64 %.c.i43.i, i64* %168, align 8, !tbaa !5
  br label %if.end40.i53.i

if.else.i45.i:                                    ; preds = %if.then.i40.i
  %169 = and i32 %conv.i35.i, -2
  %170 = icmp eq i32 %169, -86
  br i1 %170, label %if.then30.i52.i, label %if.end40.i53.i

if.then30.i52.i:                                  ; preds = %if.else.i45.i
  %arrayidx32.i46.i = getelementptr inbounds %struct.rtx_def* %166, i64 0, i32 1, i64 0
  %rtx33.i47.i = bitcast %union.rtunion_def* %arrayidx32.i46.i to %struct.rtx_def**
  %171 = load %struct.rtx_def** %rtx33.i47.i, align 8, !tbaa !5
  %rtwint36.i48.i = getelementptr inbounds %struct.rtx_def* %171, i64 0, i32 1, i64 0, i32 0
  %172 = load i64* %rtwint36.i48.i, align 8, !tbaa !41
  %conv37.i49.i = trunc i64 %172 to i32
  %arrayidx39.i50.i = getelementptr inbounds %struct.rtx_def* %call.i37.i, i64 0, i32 1, i64 3
  %rtint.i51.i = bitcast %union.rtunion_def* %arrayidx39.i50.i to i32*
  store i32 %conv37.i49.i, i32* %rtint.i51.i, align 4, !tbaa !1
  br label %if.end40.i53.i

if.end40.i53.i:                                   ; preds = %if.then30.i52.i, %if.else.i45.i, %if.then11.i44.i
  call void @remove_note(%struct.rtx_def* %insn.addr.077.i, %struct.rtx_def* %166) #5
  br label %for.inc.i60.i

for.inc.i60.i:                                    ; preds = %if.end40.i53.i, %for.body.i31.i
  %note.1.i54.i = phi %struct.rtx_def* [ %166, %if.end40.i53.i ], [ %note.067.i26.i, %for.body.i31.i ]
  %last.addr.1.i55.i = phi %struct.rtx_def* [ %call.i37.i, %if.end40.i53.i ], [ %last.addr.066.i27.i, %for.body.i31.i ]
  %arrayidx43.i56.i = getelementptr inbounds %struct.rtx_def* %note.1.i54.i, i64 0, i32 1, i64 1
  %note.0.in.i57.i = bitcast %union.rtunion_def* %arrayidx43.i56.i to %struct.rtx_def**
  %note.0.i58.i = load %struct.rtx_def** %note.0.in.i57.i, align 8
  %tobool.i59.i = icmp eq %struct.rtx_def* %note.0.i58.i, null
  br i1 %tobool.i59.i, label %reemit_notes.exit61.i, label %for.body.i31.i

reemit_notes.exit61.i:                            ; preds = %for.inc.i60.i, %while.body.i
  %call2.retval1.0.i = select i1 %cmp.i304, %struct.rtx_def* %insn.addr.077.i, %struct.rtx_def* %retval1.076.i
  %173 = getelementptr inbounds %struct.rtx_def* %151, i64 0, i32 0
  %bf.load.i = load i32* %173, align 8
  %bf.clear.i = and i32 %bf.load.i, 268435456
  %tobool.i305 = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool.i305, label %while.end.i, label %while.body.i

while.end.i:                                      ; preds = %reemit_notes.exit61.i, %if.end77
  %insn.addr.0.lcssa.i = phi %struct.rtx_def* [ %129, %if.end77 ], [ %151, %reemit_notes.exit61.i ]
  %retval1.0.lcssa.i = phi %struct.rtx_def* [ null, %if.end77 ], [ %call2.retval1.0.i, %reemit_notes.exit61.i ]
  %arrayidx.i62.i = getelementptr inbounds %struct.rtx_def* %insn.addr.0.lcssa.i, i64 0, i32 1, i64 2
  %rtx.i63.i = bitcast %union.rtunion_def* %arrayidx.i62.i to %struct.rtx_def**
  %174 = load %struct.rtx_def** %rtx.i63.i, align 8, !tbaa !5
  %arrayidx2.i64.i = getelementptr inbounds %struct.rtx_def* %insn.addr.0.lcssa.i, i64 0, i32 1, i64 1
  %rtx3.i65.i = bitcast %union.rtunion_def* %arrayidx2.i64.i to %struct.rtx_def**
  %175 = load %struct.rtx_def** %rtx3.i65.i, align 8, !tbaa !5
  %176 = getelementptr inbounds %struct.rtx_def* %175, i64 0, i32 1, i64 2, i32 0
  %.c.i66.i = ptrtoint %struct.rtx_def* %174 to i64
  store i64 %.c.i66.i, i64* %176, align 8, !tbaa !5
  %177 = load %struct.rtx_def** %rtx3.i65.i, align 8, !tbaa !5
  %178 = load %struct.rtx_def** %rtx.i63.i, align 8, !tbaa !5
  %179 = getelementptr inbounds %struct.rtx_def* %178, i64 0, i32 1, i64 1, i32 0
  %.c1.i67.i = ptrtoint %struct.rtx_def* %177 to i64
  store i64 %.c1.i67.i, i64* %179, align 8, !tbaa !5
  %180 = load %struct.rtx_def** %rtx18.i69.pre.i, align 8, !tbaa !5
  %181 = getelementptr inbounds %union.rtunion_def* %arrayidx.i62.i, i64 0, i32 0
  %.c2.i70.i = ptrtoint %struct.rtx_def* %180 to i64
  store i64 %.c2.i70.i, i64* %181, align 8, !tbaa !5
  %182 = load %struct.rtx_def** %rtx18.i69.pre.i, align 8, !tbaa !5
  %183 = getelementptr inbounds %struct.rtx_def* %182, i64 0, i32 1, i64 1, i32 0
  %insn.c.i71.i = ptrtoint %struct.rtx_def* %insn.addr.0.lcssa.i to i64
  store i64 %insn.c.i71.i, i64* %183, align 8, !tbaa !5
  store i64 %insn.c.i71.i, i64* %.pre.i300, align 8, !tbaa !5
  %184 = getelementptr inbounds %union.rtunion_def* %arrayidx2.i64.i, i64 0, i32 0
  store i64 %last.c.i72.pre.i, i64* %184, align 8, !tbaa !5
  %cmp5.i = icmp eq %struct.rtx_def* %retval1.0.lcssa.i, null
  %arrayidx.i20.i = getelementptr inbounds %struct.rtx_def* %insn.addr.0.lcssa.i, i64 0, i32 1, i64 6
  %note.0.in63.i.i = bitcast %union.rtunion_def* %arrayidx.i20.i to %struct.rtx_def**
  %note.064.i.i = load %struct.rtx_def** %note.0.in63.i.i, align 8
  %tobool65.i.i = icmp eq %struct.rtx_def* %note.064.i.i, null
  br i1 %tobool65.i.i, label %move_insn.exit, label %for.body.i.i

for.body.i.i:                                     ; preds = %while.end.i, %for.inc.i.i
  %note.067.i.i = phi %struct.rtx_def* [ %note.0.i.i, %for.inc.i.i ], [ %note.064.i.i, %while.end.i ]
  %last.addr.066.i.i = phi %struct.rtx_def* [ %last.addr.1.i.i, %for.inc.i.i ], [ %insn.addr.0.lcssa.i, %while.end.i ]
  %185 = getelementptr inbounds %struct.rtx_def* %note.067.i.i, i64 0, i32 0
  %bf.load.i.i = load i32* %185, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 16711680
  %cmp.i.i306 = icmp eq i32 %bf.clear.i.i, 1572864
  br i1 %cmp.i.i306, label %if.then.i.i308, label %for.inc.i.i

if.then.i.i308:                                   ; preds = %for.body.i.i
  %fld2.i.i = getelementptr inbounds %struct.rtx_def* %note.067.i.i, i64 0, i32 1
  %rtx4.i.i = bitcast [1 x %union.rtunion_def]* %fld2.i.i to %struct.rtx_def**
  %186 = load %struct.rtx_def** %rtx4.i.i, align 8, !tbaa !5
  %rtwint.i.i = getelementptr inbounds %struct.rtx_def* %186, i64 0, i32 1, i64 0, i32 0
  %187 = load i64* %rtwint.i.i, align 8, !tbaa !41
  %conv.i.i = trunc i64 %187 to i32
  %conv.off.i.i = add i32 %conv.i.i, 83
  %188 = icmp ult i32 %conv.off.i.i, 2
  %call.i.i307 = call %struct.rtx_def* @emit_note_before(i32 %conv.i.i, %struct.rtx_def* %last.addr.066.i.i) #5
  call void @remove_note(%struct.rtx_def* %insn.addr.0.lcssa.i, %struct.rtx_def* %note.067.i.i) #5
  %arrayidx13.i.i = getelementptr inbounds %struct.rtx_def* %note.067.i.i, i64 0, i32 1, i64 1
  %rtx14.i.i = bitcast %union.rtunion_def* %arrayidx13.i.i to %struct.rtx_def**
  %189 = load %struct.rtx_def** %rtx14.i.i, align 8, !tbaa !5
  br i1 %188, label %if.then11.i.i, label %if.else.i.i

if.then11.i.i:                                    ; preds = %if.then.i.i308
  %arrayidx16.i.i = getelementptr inbounds %struct.rtx_def* %189, i64 0, i32 1, i64 0
  %rtx17.i.i = bitcast %union.rtunion_def* %arrayidx16.i.i to %struct.rtx_def**
  %190 = load %struct.rtx_def** %rtx17.i.i, align 8, !tbaa !5
  %191 = getelementptr inbounds %struct.rtx_def* %call.i.i307, i64 0, i32 1, i64 3, i32 0
  %.c.i21.i = ptrtoint %struct.rtx_def* %190 to i64
  store i64 %.c.i21.i, i64* %191, align 8, !tbaa !5
  br label %if.end40.i.i

if.else.i.i:                                      ; preds = %if.then.i.i308
  %192 = and i32 %conv.i.i, -2
  %193 = icmp eq i32 %192, -86
  br i1 %193, label %if.then30.i.i, label %if.end40.i.i

if.then30.i.i:                                    ; preds = %if.else.i.i
  %arrayidx32.i.i = getelementptr inbounds %struct.rtx_def* %189, i64 0, i32 1, i64 0
  %rtx33.i.i = bitcast %union.rtunion_def* %arrayidx32.i.i to %struct.rtx_def**
  %194 = load %struct.rtx_def** %rtx33.i.i, align 8, !tbaa !5
  %rtwint36.i.i = getelementptr inbounds %struct.rtx_def* %194, i64 0, i32 1, i64 0, i32 0
  %195 = load i64* %rtwint36.i.i, align 8, !tbaa !41
  %conv37.i.i = trunc i64 %195 to i32
  %arrayidx39.i.i = getelementptr inbounds %struct.rtx_def* %call.i.i307, i64 0, i32 1, i64 3
  %rtint.i.i = bitcast %union.rtunion_def* %arrayidx39.i.i to i32*
  store i32 %conv37.i.i, i32* %rtint.i.i, align 4, !tbaa !1
  br label %if.end40.i.i

if.end40.i.i:                                     ; preds = %if.then30.i.i, %if.else.i.i, %if.then11.i.i
  call void @remove_note(%struct.rtx_def* %insn.addr.0.lcssa.i, %struct.rtx_def* %189) #5
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end40.i.i, %for.body.i.i
  %note.1.i.i = phi %struct.rtx_def* [ %189, %if.end40.i.i ], [ %note.067.i.i, %for.body.i.i ]
  %last.addr.1.i.i = phi %struct.rtx_def* [ %call.i.i307, %if.end40.i.i ], [ %last.addr.066.i.i, %for.body.i.i ]
  %arrayidx43.i.i = getelementptr inbounds %struct.rtx_def* %note.1.i.i, i64 0, i32 1, i64 1
  %note.0.in.i.i = bitcast %union.rtunion_def* %arrayidx43.i.i to %struct.rtx_def**
  %note.0.i.i = load %struct.rtx_def** %note.0.in.i.i, align 8
  %tobool.i.i = icmp eq %struct.rtx_def* %note.0.i.i, null
  br i1 %tobool.i.i, label %move_insn.exit, label %for.body.i.i

move_insn.exit:                                   ; preds = %for.inc.i.i, %while.end.i
  %call7.retval1.0.i = select i1 %cmp5.i, %struct.rtx_def* %insn.addr.0.lcssa.i, %struct.rtx_def* %retval1.0.lcssa.i
  store %struct.rtx_def* %call7.retval1.0.i, %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %196 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 3), align 8, !tbaa !42
  %tobool79 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)* %196, null
  br i1 %tobool79, label %if.else82, label %if.then80

if.then80:                                        ; preds = %move_insn.exit
  %197 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %198 = load i32* @sched_verbose, align 4, !tbaa !1
  %call81 = call i32 %196(%struct._IO_FILE* %197, i32 %198, %struct.rtx_def* %129, i32 %can_issue_more.1.ph409) #5
  br label %if.end83

if.else82:                                        ; preds = %move_insn.exit
  %dec = add nsw i32 %can_issue_more.1.ph409, -1
  br label %if.end83

if.end83:                                         ; preds = %if.else82, %if.then80
  %can_issue_more.2 = phi i32 [ %call81, %if.then80 ], [ %dec, %if.else82 ]
  %199 = load i32* @clock_var, align 4, !tbaa !1
  %200 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom.i.i310 = sext i32 %200 to i64
  %201 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %units.i.i = getelementptr inbounds %struct.haifa_insn_data* %201, i64 %idxprom.i.i310, i32 9
  %202 = load i16* %units.i.i, align 2, !tbaa !7
  %conv.i.i311 = sext i16 %202 to i32
  %cmp.i.i312 = icmp eq i16 %202, 0
  br i1 %cmp.i.i312, label %if.then.i.i313, label %insn_unit.exit.i

if.then.i.i313:                                   ; preds = %if.end83
  %arrayidx4.i.i = getelementptr inbounds %struct.rtx_def* %129, i64 0, i32 1, i64 4
  %rtint5.i.i = bitcast %union.rtunion_def* %arrayidx4.i.i to i32*
  %203 = load i32* %rtint5.i.i, align 4, !tbaa !1
  %cmp6.i.i = icmp sgt i32 %203, -1
  br i1 %cmp6.i.i, label %if.end21.i.i, label %cond.end.i.i

cond.end.i.i:                                     ; preds = %if.then.i.i313
  %call.i.i314 = call i32 @recog_memoized_1(%struct.rtx_def* %129) #5
  %.pr.i.i = load i32* %rtint5.i.i, align 4, !tbaa !1
  %cmp14.i.i = icmp slt i32 %.pr.i.i, 0
  br i1 %cmp14.i.i, label %insn_unit.exit.i, label %if.end21.i.i

if.end21.i.i:                                     ; preds = %cond.end.i.i, %if.then.i.i313
  %call17.i.i = call i32 @function_units_used(%struct.rtx_def* %129) #5
  %call17.lobit.i.i = lshr i32 %call17.i.i, 31
  %call17.lobit.not.i.i = xor i32 %call17.lobit.i.i, 1
  %inc.call17.i.i = add nsw i32 %call17.lobit.not.i.i, %call17.i.i
  %cmp22.i.i = icmp sgt i32 %inc.call17.i.i, -1
  br i1 %cmp22.i.i, label %if.then26.i.i, label %insn_unit.exit.i

if.then26.i.i:                                    ; preds = %if.end21.i.i
  %conv27.i.i = trunc i32 %inc.call17.i.i to i16
  %204 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom31.i.i = sext i32 %204 to i64
  %205 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %units33.i.i = getelementptr inbounds %struct.haifa_insn_data* %205, i64 %idxprom31.i.i, i32 9
  store i16 %conv27.i.i, i16* %units33.i.i, align 2, !tbaa !7
  br label %insn_unit.exit.i

insn_unit.exit.i:                                 ; preds = %if.then26.i.i, %if.end21.i.i, %cond.end.i.i, %if.end83
  %unit.1.i.i = phi i32 [ %inc.call17.i.i, %if.then26.i.i ], [ %conv.i.i311, %if.end83 ], [ %inc.call17.i.i, %if.end21.i.i ], [ -1, %cond.end.i.i ]
  %cmp36.i.i = icmp sgt i32 %unit.1.i.i, 0
  %sub.i.i315 = sext i1 %cmp36.i.i to i32
  %cond41.i.i = add nsw i32 %sub.i.i315, %unit.1.i.i
  %206 = load i32* @sched_verbose, align 4, !tbaa !1
  %cmp.i316 = icmp sgt i32 %206, 1
  br i1 %cmp.i316, label %if.then.i321, label %if.end.i325

if.then.i321:                                     ; preds = %insn_unit.exit.i
  %207 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %arrayidx.i317 = getelementptr inbounds %struct.rtx_def* %129, i64 0, i32 1, i64 0
  %rtint.i318 = bitcast %union.rtunion_def* %arrayidx.i317 to i32*
  %208 = load i32* %rtint.i318, align 4, !tbaa !1
  %call1.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %207, i8* getelementptr inbounds ([42 x i8]* @.str16, i64 0, i64 0), i32 %208) #5
  call void @insn_print_units(%struct.rtx_def* %129) #5
  %209 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %fputc.i319 = call i32 @fputc(i32 10, %struct._IO_FILE* %209) #5
  %.pre.i320 = load i32* @sched_verbose, align 4, !tbaa !1
  br label %if.end.i325

if.end.i325:                                      ; preds = %if.then.i321, %insn_unit.exit.i
  %210 = phi i32 [ %.pre.i320, %if.then.i321 ], [ %206, %insn_unit.exit.i ]
  %tobool.i322 = icmp ne i32 %210, 0
  %cmp3.i323 = icmp eq i32 %cond41.i.i, -1
  %or.cond.i324 = and i1 %tobool.i322, %cmp3.i323
  br i1 %or.cond.i324, label %if.then4.i326, label %if.end5.i

if.then4.i326:                                    ; preds = %if.end.i325
  call void @visualize_no_unit(%struct.rtx_def* %129) #5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i326, %if.end.i325
  call fastcc void @schedule_unit(i32 %cond41.i.i, %struct.rtx_def* %129, i32 %199) #5
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def* %129, i64 0, i32 1, i64 0
  %rtint8.i = bitcast %union.rtunion_def* %arrayidx7.i to i32*
  %211 = load i32* %rtint8.i, align 4, !tbaa !1
  %idxprom.i327 = sext i32 %211 to i64
  %212 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %depend.i = getelementptr inbounds %struct.haifa_insn_data* %212, i64 %idxprom.i327, i32 0
  %213 = load %struct.rtx_def** %depend.i, align 8, !tbaa !43
  %cmp10.i = icmp eq %struct.rtx_def* %213, null
  br i1 %cmp10.i, label %next, label %for.body.i336

for.body.i336:                                    ; preds = %if.end5.i, %for.inc.i355
  %link.0131.i = phi %struct.rtx_def* [ %254, %for.inc.i355 ], [ %213, %if.end5.i ]
  %fld20.i = getelementptr inbounds %struct.rtx_def* %link.0131.i, i64 0, i32 1
  %rtx.i333 = bitcast [1 x %union.rtunion_def]* %fld20.i to %struct.rtx_def**
  %214 = load %struct.rtx_def** %rtx.i333, align 8, !tbaa !5
  %call22.i = call i32 @insn_cost(%struct.rtx_def* %129, %struct.rtx_def* %link.0131.i, %struct.rtx_def* %214) #5
  %arrayidx24.i = getelementptr inbounds %struct.rtx_def* %214, i64 0, i32 1, i64 0
  %rtint25.i = bitcast %union.rtunion_def* %arrayidx24.i to i32*
  %215 = load i32* %rtint25.i, align 4, !tbaa !1
  %idxprom26.i = sext i32 %215 to i64
  %216 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %tick.i = getelementptr inbounds %struct.haifa_insn_data* %216, i64 %idxprom26.i, i32 7
  %217 = load i32* %tick.i, align 4, !tbaa !44
  %add.i334 = add nsw i32 %call22.i, %199
  %cmp28.i = icmp sgt i32 %217, %add.i334
  %.add.i = select i1 %cmp28.i, i32 %217, i32 %add.i334
  store i32 %.add.i, i32* %tick.i, align 4, !tbaa !44
  %218 = load i32* %rtint25.i, align 4, !tbaa !1
  %idxprom45.i = sext i32 %218 to i64
  %dep_count.i = getelementptr inbounds %struct.haifa_insn_data* %216, i64 %idxprom45.i, i32 4
  %219 = load i32* %dep_count.i, align 4, !tbaa !45
  %sub.i335 = add nsw i32 %219, -1
  store i32 %sub.i335, i32* %dep_count.i, align 4, !tbaa !45
  %cmp47.i = icmp eq i32 %sub.i335, 0
  br i1 %cmp47.i, label %if.then48.i, label %for.inc.i355

if.then48.i:                                      ; preds = %for.body.i336
  %220 = load i32* %rtint25.i, align 4, !tbaa !1
  %idxprom52.i = sext i32 %220 to i64
  %tick54.i = getelementptr inbounds %struct.haifa_insn_data* %216, i64 %idxprom52.i, i32 7
  %221 = load i32* %tick54.i, align 4, !tbaa !44
  %sub55.i = sub nsw i32 %221, %199
  %222 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %new_ready.i = getelementptr inbounds %struct.sched_info* %222, i64 0, i32 3
  %223 = load i32 (%struct.rtx_def*)** %new_ready.i, align 8, !tbaa !46
  %call56.i = call i32 %223(%struct.rtx_def* %214) #5
  %tobool57.i337 = icmp eq i32 %call56.i, 0
  br i1 %tobool57.i337, label %for.inc.i355, label %if.end59.i338

if.end59.i338:                                    ; preds = %if.then48.i
  %224 = load i32* @sched_verbose, align 4, !tbaa !1
  %cmp60.i = icmp sgt i32 %224, 1
  br i1 %cmp60.i, label %if.then61.i, label %if.end69.i

if.then61.i:                                      ; preds = %if.end59.i338
  %225 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %226 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %print_insn.i339 = getelementptr inbounds %struct.sched_info* %226, i64 0, i32 5
  %227 = load i8* (%struct.rtx_def*, i32)** %print_insn.i339, align 8, !tbaa !38
  %call62.i = call i8* %227(%struct.rtx_def* %214, i32 0) #5
  %call63.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %225, i8* getelementptr inbounds ([35 x i8]* @.str17, i64 0, i64 0), i8* %call62.i) #5
  %cmp64.i = icmp slt i32 %sub55.i, 1
  %228 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  br i1 %cmp64.i, label %if.then65.i, label %if.else.i340

if.then65.i:                                      ; preds = %if.then61.i
  %229 = call i64 @fwrite(i8* getelementptr inbounds ([12 x i8]* @.str18, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %228) #5
  br label %if.end69.i

if.else.i340:                                     ; preds = %if.then61.i
  %call67.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %228, i8* getelementptr inbounds ([25 x i8]* @.str19, i64 0, i64 0), i32 %sub55.i) #5
  br label %if.end69.i

if.end69.i:                                       ; preds = %if.else.i340, %if.then65.i, %if.end59.i338
  %230 = load i32 (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 1), align 8, !tbaa !47
  %tobool.i.i341 = icmp eq i32 (%struct.rtx_def*, i32)* %230, null
  br i1 %tobool.i.i341, label %adjust_priority.exit.i, label %if.then.i120.i

if.then.i120.i:                                   ; preds = %if.end69.i
  %231 = load i32* %rtint25.i, align 4, !tbaa !1
  %idxprom.i118.i = sext i32 %231 to i64
  %232 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %priority.i.i = getelementptr inbounds %struct.haifa_insn_data* %232, i64 %idxprom.i118.i, i32 3
  %233 = load i32* %priority.i.i, align 4, !tbaa !48
  %call.i119.i = call i32 %230(%struct.rtx_def* %214, i32 %233) #5
  %234 = load i32* %rtint25.i, align 4, !tbaa !1
  %idxprom5.i.i = sext i32 %234 to i64
  %235 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %priority7.i.i = getelementptr inbounds %struct.haifa_insn_data* %235, i64 %idxprom5.i.i, i32 3
  store i32 %call.i119.i, i32* %priority7.i.i, align 4, !tbaa !48
  br label %adjust_priority.exit.i

adjust_priority.exit.i:                           ; preds = %if.then.i120.i, %if.end69.i
  %cmp70.i = icmp slt i32 %sub55.i, 1
  br i1 %cmp70.i, label %if.then71.i, label %if.else72.i

if.then71.i:                                      ; preds = %adjust_priority.exit.i
  %236 = load i32* %first, align 4, !tbaa !16
  %237 = load i32* %n_ready, align 8, !tbaa !18
  %cmp.i121.i = icmp eq i32 %236, %237
  br i1 %cmp.i121.i, label %if.then.i122.i, label %ready_add.exit.i354

if.then.i122.i:                                   ; preds = %if.then71.i
  %238 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %idx.ext2.i.i342 = sext i32 %236 to i64
  %cmp.i.i.i343 = icmp eq i32 %236, 0
  br i1 %cmp.i.i.i343, label %if.then.i.i.i344, label %ready_lastpos.exit.i.i351

if.then.i.i.i344:                                 ; preds = %if.then.i122.i
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 893, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.ready_lastpos, i64 0, i64 0)) #8
  unreachable

ready_lastpos.exit.i.i351:                        ; preds = %if.then.i122.i
  %239 = load i32* %veclen, align 8, !tbaa !20
  %idx.ext.i.i345 = sext i32 %239 to i64
  %add.ptr.sum.i.i346 = sub i64 %idx.ext.i.i345, %idx.ext2.i.i342
  %add.ptr3.i.i347 = getelementptr inbounds %struct.rtx_def** %238, i64 %add.ptr.sum.i.i346
  %240 = bitcast %struct.rtx_def** %add.ptr3.i.i347 to i8*
  %add.ptr4.i.i.i348 = getelementptr inbounds %struct.rtx_def** %238, i64 1
  %241 = bitcast %struct.rtx_def** %add.ptr4.i.i.i348 to i8*
  %mul.i.i349 = shl nsw i64 %idx.ext2.i.i342, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %240, i8* %241, i64 %mul.i.i349, i32 8, i1 false) #5
  %242 = load i32* %veclen, align 8, !tbaa !20
  %sub.i123.i = add nsw i32 %242, -1
  store i32 %sub.i123.i, i32* %first, align 4, !tbaa !16
  %.pre.i.i350 = load i32* %n_ready, align 8, !tbaa !18
  br label %ready_add.exit.i354

ready_add.exit.i354:                              ; preds = %ready_lastpos.exit.i.i351, %if.then71.i
  %243 = phi i32 [ %.pre.i.i350, %ready_lastpos.exit.i.i351 ], [ %237, %if.then71.i ]
  %244 = phi i32 [ %sub.i123.i, %ready_lastpos.exit.i.i351 ], [ %236, %if.then71.i ]
  %sub9.i.i352 = sub nsw i32 %244, %243
  %idxprom.i124.i = sext i32 %sub9.i.i352 to i64
  %245 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %arrayidx.i125.i = getelementptr inbounds %struct.rtx_def** %245, i64 %idxprom.i124.i
  store %struct.rtx_def* %214, %struct.rtx_def** %arrayidx.i125.i, align 8, !tbaa !5
  %inc.i.i353 = add nsw i32 %243, 1
  store i32 %inc.i.i353, i32* %n_ready, align 8, !tbaa !18
  br label %for.inc.i355

if.else72.i:                                      ; preds = %adjust_priority.exit.i
  %246 = load i32* @q_ptr, align 4, !tbaa !1
  %add.i.i = add nsw i32 %246, %sub55.i
  %and.i.i = and i32 %add.i.i, 127
  %idxprom10.i.i = zext i32 %and.i.i to i64
  %arrayidx.i126.i = getelementptr inbounds [128 x %struct.rtx_def*]* @insn_queue, i64 0, i64 %idxprom10.i.i
  %247 = load %struct.rtx_def** %arrayidx.i126.i, align 8, !tbaa !5
  %call.i127.i = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %214, %struct.rtx_def* %247) #5
  store %struct.rtx_def* %call.i127.i, %struct.rtx_def** %arrayidx.i126.i, align 8, !tbaa !5
  %248 = load i32* @q_size, align 4, !tbaa !1
  %add3.i.i = add nsw i32 %248, 1
  store i32 %add3.i.i, i32* @q_size, align 4, !tbaa !1
  %249 = load i32* @sched_verbose, align 4, !tbaa !1
  %cmp.i128.i = icmp sgt i32 %249, 1
  br i1 %cmp.i128.i, label %if.then.i129.i, label %for.inc.i355

if.then.i129.i:                                   ; preds = %if.else72.i
  %250 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %251 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %print_insn.i.i = getelementptr inbounds %struct.sched_info* %251, i64 0, i32 5
  %252 = load i8* (%struct.rtx_def*, i32)** %print_insn.i.i, align 8, !tbaa !38
  %call4.i.i = call i8* %252(%struct.rtx_def* %214, i32 0) #5
  %call5.i.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %250, i8* getelementptr inbounds ([25 x i8]* @.str20, i64 0, i64 0), i8* %call4.i.i) #5
  %253 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %call6.i.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %253, i8* getelementptr inbounds ([23 x i8]* @.str21, i64 0, i64 0), i32 %sub55.i) #5
  br label %for.inc.i355

for.inc.i355:                                     ; preds = %if.then.i129.i, %if.else72.i, %ready_add.exit.i354, %if.then48.i, %for.body.i336
  %arrayidx76.i = getelementptr inbounds %struct.rtx_def* %link.0131.i, i64 0, i32 1, i64 1
  %rtx77.i = bitcast %union.rtunion_def* %arrayidx76.i to %struct.rtx_def**
  %254 = load %struct.rtx_def** %rtx77.i, align 8, !tbaa !5
  %cmp19.i = icmp eq %struct.rtx_def* %254, null
  br i1 %cmp19.i, label %for.end.i356, label %for.body.i336

for.end.i356:                                     ; preds = %for.inc.i355
  %255 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool78.i = icmp ne i32 %255, 0
  %256 = load i32* @issue_rate, align 4
  %cmp80.i = icmp sgt i32 %256, 1
  %or.cond85.i = and i1 %tobool78.i, %cmp80.i
  br i1 %or.cond85.i, label %if.then81.i, label %next

if.then81.i:                                      ; preds = %for.end.i356
  %257 = load i32* @last_clock_var, align 4, !tbaa !1
  %cmp82.i = icmp slt i32 %257, %199
  %cond83.i = select i1 %cmp82.i, i32 393216, i32 0
  %bf.load.i357 = load i32* %150, align 8
  %bf.clear.i358 = and i32 %bf.load.i357, -16711681
  %bf.set.i = or i32 %bf.clear.i358, %cond83.i
  store i32 %bf.set.i, i32* %150, align 8
  store i32 %199, i32* @last_clock_var, align 4, !tbaa !1
  br label %next

next:                                             ; preds = %if.then81.i, %for.end.i356, %if.end5.i, %if.end73
  %can_issue_more.3 = phi i32 [ %can_issue_more.1.ph409, %if.end73 ], [ %can_issue_more.2, %if.end5.i ], [ %can_issue_more.2, %for.end.i356 ], [ %can_issue_more.2, %if.then81.i ]
  %258 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 7), align 8, !tbaa !49
  %tobool84 = icmp eq i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* %258, null
  br i1 %tobool84, label %while.cond57.outer.backedge, label %if.then85

if.then85:                                        ; preds = %next
  %259 = load i32* %n_ready, align 8, !tbaa !18
  %cmp87 = icmp sgt i32 %259, 0
  br i1 %cmp87, label %ready_lastpos.exit.i368, label %if.end90

ready_lastpos.exit.i368:                          ; preds = %if.then85
  %ready.idx.val = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %ready.idx197.val = load i32* %first, align 4, !tbaa !16
  %idx.ext.i.i362 = sext i32 %ready.idx197.val to i64
  %idx.ext2.i.i363 = sext i32 %259 to i64
  %add.ptr.sum.i.i364 = sub i64 1, %idx.ext2.i.i363
  %add.ptr3.sum.i.i365 = add i64 %idx.ext.i.i362, %add.ptr.sum.i.i364
  %add.ptr4.i.i366 = getelementptr inbounds %struct.rtx_def** %ready.idx.val, i64 %add.ptr3.sum.i.i365
  %cmp.i367 = icmp eq i32 %259, 2
  br i1 %cmp.i367, label %land.rhs.i.i375, label %if.else.i384

land.rhs.i.i375:                                  ; preds = %ready_lastpos.exit.i368
  call void @llvm.lifetime.start(i64 8, i8* %28) #5
  %add.ptr4.i.sum.i369 = add i64 %add.ptr3.sum.i.i365, 1
  %arrayidx.i.i370 = getelementptr inbounds %struct.rtx_def** %ready.idx.val, i64 %add.ptr4.i.sum.i369
  %260 = load %struct.rtx_def** %arrayidx.i.i370, align 8, !tbaa !5
  store %struct.rtx_def* %260, %struct.rtx_def** %insn.i.i359, align 8, !tbaa !5
  %261 = bitcast %struct.rtx_def** %add.ptr4.i.i366 to i8*
  %call.i.i373 = call i32 @rank_for_schedule(i8* %261, i8* %28) #5
  %cmp2.i.i374 = icmp sgt i32 %call.i.i373, -1
  br i1 %cmp2.i.i374, label %swap_sort.exit.loopexit.i378, label %swap_sort.exit.i382

swap_sort.exit.loopexit.i378:                     ; preds = %land.rhs.i.i375
  %262 = load %struct.rtx_def** %add.ptr4.i.i366, align 8, !tbaa !5
  store %struct.rtx_def* %262, %struct.rtx_def** %arrayidx.i.i370, align 8, !tbaa !5
  br label %swap_sort.exit.i382

swap_sort.exit.i382:                              ; preds = %swap_sort.exit.loopexit.i378, %land.rhs.i.i375
  %i.0.lcssa.i.i379 = phi i64 [ 0, %swap_sort.exit.loopexit.i378 ], [ 1, %land.rhs.i.i375 ]
  %add.ptr4.i.sum1.i380 = add i64 %i.0.lcssa.i.i379, %add.ptr3.sum.i.i365
  %arrayidx10.i.i381 = getelementptr inbounds %struct.rtx_def** %ready.idx.val, i64 %add.ptr4.i.sum1.i380
  store %struct.rtx_def* %260, %struct.rtx_def** %arrayidx10.i.i381, align 8, !tbaa !5
  call void @llvm.lifetime.end(i64 8, i8* %28) #5
  br label %if.end90thread-pre-split

if.else.i384:                                     ; preds = %ready_lastpos.exit.i368
  %cmp3.i383 = icmp sgt i32 %259, 2
  br i1 %cmp3.i383, label %if.then4.i385, label %if.end90thread-pre-split

if.then4.i385:                                    ; preds = %if.else.i384
  %263 = bitcast %struct.rtx_def** %add.ptr4.i.i366 to i8*
  call void @specqsort(i8* %263, i32 %259, i32 8, i32 (...)* bitcast (i32 (i8*, i8*)* @rank_for_schedule to i32 (...)*)) #5
  br label %if.end90thread-pre-split

if.end90thread-pre-split:                         ; preds = %swap_sort.exit.i382, %if.else.i384, %if.then4.i385
  %.pr399 = load i32* %n_ready, align 8, !tbaa !18
  %.pre421 = load i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 7), align 8, !tbaa !49
  br label %if.end90

if.end90:                                         ; preds = %if.end90thread-pre-split, %if.then85
  %264 = phi i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)* [ %.pre421, %if.end90thread-pre-split ], [ %258, %if.then85 ]
  %265 = phi i32 [ %.pr399, %if.end90thread-pre-split ], [ %259, %if.then85 ]
  %266 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %267 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool92 = icmp eq i32 %265, 0
  br i1 %tobool92, label %cond.end, label %ready_lastpos.exit398

ready_lastpos.exit398:                            ; preds = %if.end90
  %268 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %269 = load i32* %first, align 4, !tbaa !16
  %idx.ext.i392 = sext i32 %269 to i64
  %idx.ext2.i393 = sext i32 %265 to i64
  %add.ptr.sum.i394 = sub i64 1, %idx.ext2.i393
  %add.ptr3.sum.i395 = add i64 %add.ptr.sum.i394, %idx.ext.i392
  %add.ptr4.i396 = getelementptr inbounds %struct.rtx_def** %268, i64 %add.ptr3.sum.i395
  br label %cond.end

cond.end:                                         ; preds = %if.end90, %ready_lastpos.exit398
  %cond94 = phi %struct.rtx_def** [ %add.ptr4.i396, %ready_lastpos.exit398 ], [ null, %if.end90 ]
  %270 = load i32* @clock_var, align 4, !tbaa !1
  %call96 = call i32 %264(%struct._IO_FILE* %266, i32 %267, %struct.rtx_def** %cond94, i32* %n_ready, i32 %270) #5
  br label %while.cond57.outer.backedge

while.cond57.outer.backedge:                      ; preds = %cond.end, %next
  %can_issue_more.1.ph.be = phi i32 [ %call96, %cond.end ], [ %can_issue_more.3, %next ]
  %271 = load i32* %n_ready, align 8, !tbaa !18
  %cmp59404 = icmp ne i32 %271, 0
  %tobool62 = icmp ne i32 %can_issue_more.1.ph.be, 0
  %or.cond166405 = and i1 %cmp59404, %tobool62
  br i1 %or.cond166405, label %land.rhs.lr.ph, label %while.end

while.end:                                        ; preds = %while.cond57.outer.backedge, %while.cond57.backedge, %land.rhs, %while.cond57.preheader
  %272 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool98 = icmp eq i32 %272, 0
  br i1 %tobool98, label %while.cond.backedge, label %if.then99

if.then99:                                        ; preds = %while.end
  %273 = load i32* @clock_var, align 4, !tbaa !1
  call void @visualize_scheduled_insns(i32 %273) #5
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then99, %while.end
  %274 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %schedule_more_p = getelementptr inbounds %struct.sched_info* %274, i64 0, i32 2
  %275 = load i32 ()** %schedule_more_p, align 8, !tbaa !37
  %call29 = call i32 %275() #5
  %tobool30 = icmp eq i32 %call29, 0
  br i1 %tobool30, label %while.end101, label %while.body

while.end101:                                     ; preds = %while.cond.backedge, %if.end28
  %276 = load void (%struct._IO_FILE*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 5), align 8, !tbaa !50
  %tobool102 = icmp eq void (%struct._IO_FILE*, i32)* %276, null
  br i1 %tobool102, label %if.end104, label %if.then103

if.then103:                                       ; preds = %while.end101
  %277 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %278 = load i32* @sched_verbose, align 4, !tbaa !1
  call void %276(%struct._IO_FILE* %277, i32 %278) #5
  br label %if.end104

if.end104:                                        ; preds = %while.end101, %if.then103
  %279 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool105 = icmp eq i32 %279, 0
  br i1 %tobool105, label %if.end108, label %if.then106

if.then106:                                       ; preds = %if.end104
  %280 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %281 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8]* @.str12, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %280)
  %282 = load i32* %n_ready, align 8, !tbaa !18
  %cmp.i = icmp eq i32 %282, 0
  br i1 %cmp.i, label %debug_ready_list.exit, label %ready_lastpos.exit.i

ready_lastpos.exit.i:                             ; preds = %if.then106
  %283 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %284 = load i32* %first, align 4, !tbaa !16
  %idx.ext.i.i = sext i32 %284 to i64
  %idx.ext2.i.i = sext i32 %282 to i64
  %add.ptr.sum.i.i = sub i64 1, %idx.ext2.i.i
  %add.ptr3.sum.i.i = add i64 %add.ptr.sum.i.i, %idx.ext.i.i
  %cmp210.i = icmp sgt i32 %282, 0
  %285 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  br i1 %cmp210.i, label %for.body.i, label %for.end.i

for.body.i:                                       ; preds = %ready_lastpos.exit.i, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %ready_lastpos.exit.i ]
  %286 = phi %struct._IO_FILE* [ %292, %for.body.i ], [ %285, %ready_lastpos.exit.i ]
  %287 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %print_insn.i = getelementptr inbounds %struct.sched_info* %287, i64 0, i32 5
  %288 = load i8* (%struct.rtx_def*, i32)** %print_insn.i, align 8, !tbaa !38
  %add.ptr4.i.sum.i = add i64 %add.ptr3.sum.i.i, %indvars.iv.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def** %283, i64 %add.ptr4.i.sum.i
  %289 = load %struct.rtx_def** %arrayidx.i, align 8, !tbaa !5
  %call3.i = call i8* %288(%struct.rtx_def* %289, i32 0) #5
  %call4.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %286, i8* getelementptr inbounds ([5 x i8]* @.str22, i64 0, i64 0), i8* %call3.i) #5
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %290 = load i32* %n_ready, align 8, !tbaa !18
  %291 = trunc i64 %indvars.iv.next.i to i32
  %cmp2.i = icmp slt i32 %291, %290
  %292 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  br i1 %cmp2.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %ready_lastpos.exit.i
  %.lcssa.i = phi %struct._IO_FILE* [ %285, %ready_lastpos.exit.i ], [ %292, %for.body.i ]
  %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %.lcssa.i) #5
  br label %debug_ready_list.exit

debug_ready_list.exit:                            ; preds = %if.then106, %for.end.i
  call void @print_block_visualization(i8* getelementptr inbounds ([1 x i8]* @.str13, i64 0, i64 0)) #5
  br label %if.end108

if.end108:                                        ; preds = %if.end104, %debug_ready_list.exit
  %293 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %queue_must_finish_empty = getelementptr inbounds %struct.sched_info* %293, i64 0, i32 12
  %bf.load109 = load i8* %queue_must_finish_empty, align 8
  %bf.clear110 = and i8 %bf.load109, 1
  %tobool111 = icmp ne i8 %bf.clear110, 0
  %294 = load i32* @q_size, align 4
  %cmp113 = icmp ne i32 %294, 0
  %or.cond167 = and i1 %tobool111, %cmp113
  br i1 %or.cond167, label %if.then115, label %if.end116

if.then115:                                       ; preds = %if.end108
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8]* @.str2, i64 0, i64 0), i32 1806, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.schedule_block, i64 0, i64 0)) #8
  unreachable

if.end116:                                        ; preds = %if.end108
  %295 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %296 = load %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %297 = load %struct.rtx_def** @note_list, align 8, !tbaa !5
  %cmp120 = icmp eq %struct.rtx_def* %297, null
  br i1 %cmp120, label %if.end151, label %while.cond123

while.cond123:                                    ; preds = %if.end116, %while.cond123
  %note_head.0 = phi %struct.rtx_def* [ %298, %while.cond123 ], [ %297, %if.end116 ]
  %arrayidx125 = getelementptr inbounds %struct.rtx_def* %note_head.0, i64 0, i32 1, i64 1
  %rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**
  %298 = load %struct.rtx_def** %rtx126, align 8, !tbaa !5
  %tobool127 = icmp eq %struct.rtx_def* %298, null
  br i1 %tobool127, label %while.end132, label %while.cond123

while.end132:                                     ; preds = %while.cond123
  %arrayidx134 = getelementptr inbounds %struct.rtx_def* %295, i64 0, i32 1, i64 1
  %rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**
  %299 = load %struct.rtx_def** %rtx135, align 8, !tbaa !5
  %300 = getelementptr inbounds %union.rtunion_def* %arrayidx125, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %299 to i64
  store i64 %.c, i64* %300, align 8, !tbaa !5
  %301 = load %struct.rtx_def** %rtx135, align 8, !tbaa !5
  %302 = getelementptr inbounds %struct.rtx_def* %301, i64 0, i32 1, i64 2, i32 0
  %note_head.0.c = ptrtoint %struct.rtx_def* %note_head.0 to i64
  store i64 %note_head.0.c, i64* %302, align 8, !tbaa !5
  %303 = load %struct.rtx_def** @note_list, align 8, !tbaa !5
  %304 = getelementptr inbounds %union.rtunion_def* %arrayidx134, i64 0, i32 0
  %.c194 = ptrtoint %struct.rtx_def* %303 to i64
  store i64 %.c194, i64* %304, align 8, !tbaa !5
  %305 = load %struct.rtx_def** @note_list, align 8, !tbaa !5
  %306 = getelementptr inbounds %struct.rtx_def* %305, i64 0, i32 1, i64 2, i32 0
  %.c195 = ptrtoint %struct.rtx_def* %295 to i64
  store i64 %.c195, i64* %306, align 8, !tbaa !5
  br label %if.end151

if.end151:                                        ; preds = %if.end116, %while.end132
  %head.0 = phi %struct.rtx_def* [ %note_head.0, %while.end132 ], [ %295, %if.end116 ]
  %307 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool152 = icmp eq i32 %307, 0
  br i1 %tobool152, label %if.end162, label %if.then153

if.then153:                                       ; preds = %if.end151
  %308 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %309 = load i32* @clock_var, align 4, !tbaa !1
  %arrayidx155 = getelementptr inbounds %struct.rtx_def* %head.0, i64 0, i32 1, i64 0
  %rtint156 = bitcast %union.rtunion_def* %arrayidx155 to i32*
  %310 = load i32* %rtint156, align 4, !tbaa !1
  %call157 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %308, i8* getelementptr inbounds ([41 x i8]* @.str14, i64 0, i64 0), i32 %309, i32 %310) #5
  %311 = load %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %arrayidx159 = getelementptr inbounds %struct.rtx_def* %296, i64 0, i32 1, i64 0
  %rtint160 = bitcast %union.rtunion_def* %arrayidx159 to i32*
  %312 = load i32* %rtint160, align 4, !tbaa !1
  %call161 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %311, i8* getelementptr inbounds ([21 x i8]* @.str15, i64 0, i64 0), i32 %312) #5
  call void @visualize_free() #5
  br label %if.end162

if.end162:                                        ; preds = %if.end151, %if.then153
  %313 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %head163 = getelementptr inbounds %struct.sched_info* %313, i64 0, i32 10
  store %struct.rtx_def* %head.0, %struct.rtx_def** %head163, align 8, !tbaa !51
  %314 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %tail164 = getelementptr inbounds %struct.sched_info* %314, i64 0, i32 11
  store %struct.rtx_def* %296, %struct.rtx_def** %tail164, align 8, !tbaa !52
  %315 = load %struct.rtx_def*** %vec, align 8, !tbaa !19
  %316 = bitcast %struct.rtx_def** %315 to i8*
  call void @free(i8* %316)
  ret void
}

declare void @visualize_alloc() #2

declare void @init_block_visualization() #2

declare noalias i8* @xmalloc(i64) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @actual_hazard(i32 %unit, %struct.rtx_def* %insn, i32 %clock, i32 %cost) #3 {
entry:
  %cmp = icmp sgt i32 %unit, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %idxprom.i = sext i32 %unit to i64
  %arrayidx.i = getelementptr inbounds [78 x i32]* @unit_tick, i64 0, i64 %idxprom.i
  %0 = load i32* %arrayidx.i, align 4, !tbaa !1
  %sub.i = sub nsw i32 %0, %clock
  %cmp.i = icmp sgt i32 %sub.i, %cost
  br i1 %cmp.i, label %if.then.i, label %if.end20

if.then.i:                                        ; preds = %if.then
  %blockage_range_function.i = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom.i, i32 9
  %1 = load i32 (%struct.rtx_def*)** %blockage_range_function.i, align 8, !tbaa !10
  %tobool.i = icmp eq i32 (%struct.rtx_def*)* %1, null
  br i1 %tobool.i, label %actual_hazard_this_instance.exit, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  %blockage_function.i = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom.i, i32 10
  %2 = load i32 (%struct.rtx_def*, %struct.rtx_def*)** %blockage_function.i, align 8, !tbaa !12
  %tobool6.i = icmp eq i32 (%struct.rtx_def*, %struct.rtx_def*)* %2, null
  br i1 %tobool6.i, label %if.else.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then3.i
  %arrayidx12.i = getelementptr inbounds [78 x %struct.rtx_def*]* @unit_last_insn, i64 0, i64 %idxprom.i
  %3 = load %struct.rtx_def** %arrayidx12.i, align 8, !tbaa !5
  %call.i = tail call i32 %2(%struct.rtx_def* %3, %struct.rtx_def* %insn) #5
  %max_blockage.i = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom.i, i32 8
  %4 = load i32* %max_blockage.i, align 8, !tbaa !13
  %sub15.i = add i32 %call.i, %0
  %add.i = sub i32 %sub15.i, %4
  br label %actual_hazard_this_instance.exit

if.else.i:                                        ; preds = %if.then3.i
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint.i.i = bitcast %union.rtunion_def* %arrayidx.i.i to i32*
  %5 = load i32* %rtint.i.i, align 4, !tbaa !1
  %idxprom.i.i = sext i32 %5 to i64
  %6 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %blockage2.i.i = getelementptr inbounds %struct.haifa_insn_data* %6, i64 %idxprom.i.i, i32 5
  %7 = load i32* %blockage2.i.i, align 4, !tbaa !14
  %shr.i.i = lshr i32 %7, 16
  %add.i.i = add nsw i32 %unit, 1
  %cmp.i.i = icmp eq i32 %shr.i.i, %add.i.i
  br i1 %cmp.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.else.i
  %call.i.i = tail call i32 %1(%struct.rtx_def* %insn) #5
  %shl.i.i = shl i32 %add.i.i, 8
  %shr6.i.i = lshr i32 %call.i.i, 16
  %or.i.i = or i32 %shr6.i.i, %shl.i.i
  %shl7.i.i = shl i32 %or.i.i, 8
  %and.i.i = and i32 %call.i.i, 65535
  %or8.i.i = or i32 %shl7.i.i, %and.i.i
  %8 = load i32* %rtint.i.i, align 4, !tbaa !1
  %idxprom12.i.i = sext i32 %8 to i64
  %9 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %blockage14.i.i = getelementptr inbounds %struct.haifa_insn_data* %9, i64 %idxprom12.i.i, i32 5
  store i32 %or8.i.i, i32* %blockage14.i.i, align 4, !tbaa !14
  br label %blockage_range.exit.i

if.else.i.i:                                      ; preds = %if.else.i
  %10 = shl i32 %7, 8
  %shl17.i.i = and i32 %10, 16711680
  %and18.i.i = and i32 %7, 255
  %or19.i.i = or i32 %shl17.i.i, %and18.i.i
  br label %blockage_range.exit.i

blockage_range.exit.i:                            ; preds = %if.else.i.i, %if.then.i.i
  %range.0.i.i = phi i32 [ %call.i.i, %if.then.i.i ], [ %or19.i.i, %if.else.i.i ]
  %and.i = and i32 %range.0.i.i, 65535
  %max_blockage19.i = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom.i, i32 8
  %11 = load i32* %max_blockage19.i, align 8, !tbaa !13
  %sub20.i = sub i32 %0, %11
  %add21.i = add i32 %sub20.i, %and.i
  br label %actual_hazard_this_instance.exit

actual_hazard_this_instance.exit:                 ; preds = %if.then.i, %if.then7.i, %blockage_range.exit.i
  %tick.0.i = phi i32 [ %add.i, %if.then7.i ], [ %add21.i, %blockage_range.exit.i ], [ %0, %if.then.i ]
  %sub23.i = sub nsw i32 %tick.0.i, %clock
  %cmp24.i = icmp sgt i32 %sub23.i, %cost
  %sub23.cost.i = select i1 %cmp24.i, i32 %sub23.i, i32 %cost
  br i1 %cmp24.i, label %if.then2, label %if.end20

if.then2:                                         ; preds = %actual_hazard_this_instance.exit
  %multiplicity = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom.i, i32 2
  %12 = load i32* %multiplicity, align 4, !tbaa !53
  %blockage_function.i59 = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom.i, i32 10
  %arrayidx.i.i68 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint.i.i69 = bitcast %union.rtunion_def* %arrayidx.i.i68 to i32*
  %add.i.i73 = add nsw i32 %unit, 1
  %max_blockage19.i92 = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom.i, i32 8
  %shl.i.i77 = shl i32 %add.i.i73, 8
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %if.then6, %if.then2
  %i.0.in.ph = phi i32 [ %12, %if.then2 ], [ %i.0, %if.then6 ]
  %instance.0.ph = phi i32 [ %unit, %if.then2 ], [ %25, %if.then6 ]
  %best_cost.0.ph = phi i32 [ %sub23.cost.i, %if.then2 ], [ %call4103, %if.then6 ]
  %13 = sext i32 %instance.0.ph to i64
  br label %for.cond

for.cond:                                         ; preds = %for.cond.outer, %actual_hazard_this_instance.exit102
  %indvars.iv = phi i64 [ %13, %for.cond.outer ], [ %indvars.iv.next, %actual_hazard_this_instance.exit102 ]
  %i.0.in = phi i32 [ %i.0.in.ph, %for.cond.outer ], [ %i.0, %actual_hazard_this_instance.exit102 ]
  %i.0 = add nsw i32 %i.0.in, -1
  %cmp3 = icmp sgt i32 %i.0, 0
  br i1 %cmp3, label %for.body, label %if.end20

for.body:                                         ; preds = %for.cond
  %indvars.iv.next = add nsw i64 %indvars.iv, 26
  %arrayidx.i52 = getelementptr inbounds [78 x i32]* @unit_tick, i64 0, i64 %indvars.iv.next
  %14 = load i32* %arrayidx.i52, align 4, !tbaa !1
  %sub.i53 = sub nsw i32 %14, %clock
  %cmp.i54 = icmp sgt i32 %sub.i53, %cost
  br i1 %cmp.i54, label %if.then.i58, label %actual_hazard_this_instance.exit102

if.then.i58:                                      ; preds = %for.body
  br i1 %tobool.i, label %if.end22.i100, label %if.then3.i61

if.then3.i61:                                     ; preds = %if.then.i58
  %15 = load i32 (%struct.rtx_def*, %struct.rtx_def*)** %blockage_function.i59, align 8, !tbaa !12
  %tobool6.i60 = icmp eq i32 (%struct.rtx_def*, %struct.rtx_def*)* %15, null
  br i1 %tobool6.i60, label %if.else.i75, label %if.then7.i67

if.then7.i67:                                     ; preds = %if.then3.i61
  %arrayidx12.i62 = getelementptr inbounds [78 x %struct.rtx_def*]* @unit_last_insn, i64 0, i64 %indvars.iv.next
  %16 = load %struct.rtx_def** %arrayidx12.i62, align 8, !tbaa !5
  %call.i63 = tail call i32 %15(%struct.rtx_def* %16, %struct.rtx_def* %insn) #5
  %17 = load i32* %max_blockage19.i92, align 8, !tbaa !13
  %sub15.i65 = add i32 %call.i63, %14
  %add.i66 = sub i32 %sub15.i65, %17
  br label %if.end22.i100

if.else.i75:                                      ; preds = %if.then3.i61
  %18 = load i32* %rtint.i.i69, align 4, !tbaa !1
  %idxprom.i.i70 = sext i32 %18 to i64
  %19 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %blockage2.i.i71 = getelementptr inbounds %struct.haifa_insn_data* %19, i64 %idxprom.i.i70, i32 5
  %20 = load i32* %blockage2.i.i71, align 4, !tbaa !14
  %shr.i.i72 = lshr i32 %20, 16
  %cmp.i.i74 = icmp eq i32 %shr.i.i72, %add.i.i73
  br i1 %cmp.i.i74, label %if.else.i.i89, label %if.then.i.i85

if.then.i.i85:                                    ; preds = %if.else.i75
  %call.i.i76 = tail call i32 %1(%struct.rtx_def* %insn) #5
  %shr6.i.i78 = lshr i32 %call.i.i76, 16
  %or.i.i79 = or i32 %shr6.i.i78, %shl.i.i77
  %shl7.i.i80 = shl i32 %or.i.i79, 8
  %and.i.i81 = and i32 %call.i.i76, 65535
  %or8.i.i82 = or i32 %shl7.i.i80, %and.i.i81
  %21 = load i32* %rtint.i.i69, align 4, !tbaa !1
  %idxprom12.i.i83 = sext i32 %21 to i64
  %22 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %blockage14.i.i84 = getelementptr inbounds %struct.haifa_insn_data* %22, i64 %idxprom12.i.i83, i32 5
  store i32 %or8.i.i82, i32* %blockage14.i.i84, align 4, !tbaa !14
  br label %blockage_range.exit.i95

if.else.i.i89:                                    ; preds = %if.else.i75
  %23 = shl i32 %20, 8
  %shl17.i.i86 = and i32 %23, 16711680
  %and18.i.i87 = and i32 %20, 255
  %or19.i.i88 = or i32 %shl17.i.i86, %and18.i.i87
  br label %blockage_range.exit.i95

blockage_range.exit.i95:                          ; preds = %if.else.i.i89, %if.then.i.i85
  %range.0.i.i90 = phi i32 [ %call.i.i76, %if.then.i.i85 ], [ %or19.i.i88, %if.else.i.i89 ]
  %and.i91 = and i32 %range.0.i.i90, 65535
  %24 = load i32* %max_blockage19.i92, align 8, !tbaa !13
  %sub20.i93 = sub i32 %14, %24
  %add21.i94 = add i32 %sub20.i93, %and.i91
  br label %if.end22.i100

if.end22.i100:                                    ; preds = %blockage_range.exit.i95, %if.then7.i67, %if.then.i58
  %tick.0.i96 = phi i32 [ %add.i66, %if.then7.i67 ], [ %add21.i94, %blockage_range.exit.i95 ], [ %14, %if.then.i58 ]
  %sub23.i97 = sub nsw i32 %tick.0.i96, %clock
  %cmp24.i98 = icmp sgt i32 %sub23.i97, %cost
  %sub23.cost.i99 = select i1 %cmp24.i98, i32 %sub23.i97, i32 %cost
  br label %actual_hazard_this_instance.exit102

actual_hazard_this_instance.exit102:              ; preds = %for.body, %if.end22.i100
  %call4103 = phi i32 [ %sub23.cost.i99, %if.end22.i100 ], [ %cost, %for.body ]
  %cmp5 = icmp slt i32 %call4103, %best_cost.0.ph
  br i1 %cmp5, label %if.then6, label %for.cond

if.then6:                                         ; preds = %actual_hazard_this_instance.exit102
  %25 = trunc i64 %indvars.iv.next to i32
  %cmp7 = icmp sgt i32 %call4103, %cost
  br i1 %cmp7, label %for.cond.outer, label %if.end20

if.else:                                          ; preds = %entry
  %tobool112 = icmp eq i32 %unit, -1
  br i1 %tobool112, label %if.end20, label %for.body13.lr.ph

for.body13.lr.ph:                                 ; preds = %if.else
  %neg = xor i32 %unit, -1
  br label %for.body13

for.body13:                                       ; preds = %for.body13.lr.ph, %for.inc18
  %unit.addr.0115 = phi i32 [ %neg, %for.body13.lr.ph ], [ %shr, %for.inc18 ]
  %i.1114 = phi i32 [ 0, %for.body13.lr.ph ], [ %inc, %for.inc18 ]
  %cost.addr.0113 = phi i32 [ %cost, %for.body13.lr.ph ], [ %cost.addr.1, %for.inc18 ]
  %and = and i32 %unit.addr.0115, 1
  %cmp14 = icmp eq i32 %and, 0
  br i1 %cmp14, label %for.inc18, label %if.then15

if.then15:                                        ; preds = %for.body13
  %call16 = tail call fastcc i32 @actual_hazard(i32 %i.1114, %struct.rtx_def* %insn, i32 %clock, i32 %cost.addr.0113)
  br label %for.inc18

for.inc18:                                        ; preds = %for.body13, %if.then15
  %cost.addr.1 = phi i32 [ %call16, %if.then15 ], [ %cost.addr.0113, %for.body13 ]
  %inc = add nsw i32 %i.1114, 1
  %shr = ashr i32 %unit.addr.0115, 1
  %tobool = icmp eq i32 %shr, 0
  br i1 %tobool, label %if.end20, label %for.body13

if.end20:                                         ; preds = %for.inc18, %if.then6, %for.cond, %if.else, %if.then, %actual_hazard_this_instance.exit
  %cost.addr.2 = phi i32 [ %sub23.cost.i, %actual_hazard_this_instance.exit ], [ %cost, %if.then ], [ %cost, %if.else ], [ %best_cost.0.ph, %for.cond ], [ %call4103, %if.then6 ], [ %cost.addr.1, %for.inc18 ]
  ret i32 %cost.addr.2
}

declare void @visualize_scheduled_insns(i32) #2

declare void @print_block_visualization(i8*) #2

declare void @visualize_free() #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) #7

; Function Attrs: nounwind uwtable
define i32 @set_priorities(%struct.rtx_def* readonly %head, %struct.rtx_def* %tail) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %head, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %head, %tail
  br i1 %cmp, label %land.lhs.true, label %for.cond.preheader

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %head, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom27 = zext i32 %bf.clear to i64
  %arrayidx1 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom27
  %2 = load i8* %arrayidx1, align 1, !tbaa !25
  %cmp2 = icmp ne i8 %2, 105
  %cmp428 = icmp eq %struct.rtx_def* %0, %tail
  %or.cond = or i1 %cmp2, %cmp428
  br i1 %or.cond, label %return, label %for.body

for.cond.preheader:                               ; preds = %entry
  %cmp428.old = icmp eq %struct.rtx_def* %0, %tail
  br i1 %cmp428.old, label %return, label %for.body

for.body:                                         ; preds = %land.lhs.true, %for.cond.preheader, %for.inc
  %n_insn.030 = phi i32 [ %n_insn.2, %for.inc ], [ 0, %for.cond.preheader ], [ 0, %land.lhs.true ]
  %insn.029 = phi %struct.rtx_def* [ %5, %for.inc ], [ %tail, %for.cond.preheader ], [ %tail, %land.lhs.true ]
  %3 = getelementptr inbounds %struct.rtx_def* %insn.029, i64 0, i32 0
  %bf.load6 = load i32* %3, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 37
  br i1 %cmp8, label %for.inc, label %if.end11

if.end11:                                         ; preds = %for.body
  %bf.clear13 = lshr i32 %bf.load6, 28
  %bf.clear13.lobit = and i32 %bf.clear13, 1
  %4 = xor i32 %bf.clear13.lobit, 1
  %inc.n_insn.0 = add nsw i32 %4, %n_insn.030
  %call = tail call fastcc i32 @priority(%struct.rtx_def* %insn.029)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.end11
  %n_insn.2 = phi i32 [ %n_insn.030, %for.body ], [ %inc.n_insn.0, %if.end11 ]
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %insn.029, i64 0, i32 1, i64 1
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx18, align 8, !tbaa !5
  %cmp4 = icmp eq %struct.rtx_def* %5, %0
  br i1 %cmp4, label %return, label %for.body

return:                                           ; preds = %for.inc, %land.lhs.true, %for.cond.preheader
  %retval.0 = phi i32 [ 0, %land.lhs.true ], [ 0, %for.cond.preheader ], [ %n_insn.2, %for.inc ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @priority(%struct.rtx_def* %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom81 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom81
  %1 = load i8* %arrayidx, align 1, !tbaa !25
  %cmp = icmp eq i8 %1, 105
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx2 to i32*
  %2 = load i32* %rtint, align 4, !tbaa !1
  %idxprom3 = sext i32 %2 to i64
  %3 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %priority_known = getelementptr inbounds %struct.haifa_insn_data* %3, i64 %idxprom3, i32 11
  %bf.load5 = load i8* %priority_known, align 2
  %bf.clear6 = and i8 %bf.load5, 8
  %tobool = icmp eq i8 %bf.clear6, 0
  br i1 %tobool, label %if.then7, label %if.end58

if.then7:                                         ; preds = %if.end
  %depend = getelementptr inbounds %struct.haifa_insn_data* %3, i64 %idxprom3, i32 0
  %4 = load %struct.rtx_def** %depend, align 8, !tbaa !43
  %cmp13 = icmp eq %struct.rtx_def* %4, null
  br i1 %cmp13, label %if.then15, label %for.body

if.then15:                                        ; preds = %if.then7
  %fld.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1
  %rtint.i = bitcast [1 x %union.rtunion_def]* %fld.i to i32*
  %cost2.i = getelementptr inbounds %struct.haifa_insn_data* %3, i64 %idxprom3, i32 8
  %5 = load i16* %cost2.i, align 2, !tbaa !15
  %conv.i = sext i16 %5 to i32
  %cmp.i = icmp eq i16 %5, 0
  br i1 %cmp.i, label %if.then.i, label %if.end44

if.then.i:                                        ; preds = %if.then15
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint6.i = bitcast %union.rtunion_def* %arrayidx5.i to i32*
  %6 = load i32* %rtint6.i, align 4, !tbaa !1
  %cmp7.i = icmp sgt i32 %6, -1
  br i1 %cmp7.i, label %if.else.i, label %cond.end.i

cond.end.i:                                       ; preds = %if.then.i
  %call.i = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn) #5
  %.pr.i = load i32* %rtint6.i, align 4, !tbaa !1
  %cmp15.i = icmp slt i32 %.pr.i, 0
  br i1 %cmp15.i, label %if.then17.i, label %if.else.i

if.then17.i:                                      ; preds = %cond.end.i
  %7 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom21.i = sext i32 %7 to i64
  %8 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %cost23.i = getelementptr inbounds %struct.haifa_insn_data* %8, i64 %idxprom21.i, i32 8
  store i16 1, i16* %cost23.i, align 2, !tbaa !15
  br label %if.end44

if.else.i:                                        ; preds = %cond.end.i, %if.then.i
  %call24.i = tail call i32 @result_ready_cost(%struct.rtx_def* %insn) #5
  %cmp25.i = icmp slt i32 %call24.i, 1
  %.call24.i = select i1 %cmp25.i, i32 1, i32 %call24.i
  %conv28.i = trunc i32 %.call24.i to i16
  %9 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom32.i = sext i32 %9 to i64
  %10 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %cost34.i = getelementptr inbounds %struct.haifa_insn_data* %10, i64 %idxprom32.i, i32 8
  store i16 %conv28.i, i16* %cost34.i, align 2, !tbaa !15
  br label %if.end44

for.body:                                         ; preds = %if.then7, %for.inc
  %link.084 = phi %struct.rtx_def* [ %15, %for.inc ], [ %4, %if.then7 ]
  %this_priority.083 = phi i32 [ %this_priority.1, %for.inc ], [ 0, %if.then7 ]
  %11 = getelementptr inbounds %struct.rtx_def* %link.084, i64 0, i32 0
  %bf.load23 = load i32* %11, align 8
  %bf.clear25 = and i32 %bf.load23, 1073741824
  %tobool26 = icmp eq i32 %bf.clear25, 0
  br i1 %tobool26, label %if.end28, label %for.inc

if.end28:                                         ; preds = %for.body
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %link.084, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %13 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %contributes_to_priority = getelementptr inbounds %struct.sched_info* %13, i64 0, i32 6
  %14 = load i32 (%struct.rtx_def*, %struct.rtx_def*)** %contributes_to_priority, align 8, !tbaa !54
  %call31 = tail call i32 %14(%struct.rtx_def* %12, %struct.rtx_def* %insn) #5
  %tobool32 = icmp eq i32 %call31, 0
  br i1 %tobool32, label %for.inc, label %if.end34

if.end34:                                         ; preds = %if.end28
  %call35 = tail call i32 @insn_cost(%struct.rtx_def* %insn, %struct.rtx_def* %link.084, %struct.rtx_def* %12)
  %call36 = tail call fastcc i32 @priority(%struct.rtx_def* %12)
  %add = add nsw i32 %call36, %call35
  %cmp37 = icmp sgt i32 %add, %this_priority.083
  %add.this_priority.0 = select i1 %cmp37, i32 %add, i32 %this_priority.083
  br label %for.inc

for.inc:                                          ; preds = %if.end34, %if.end28, %for.body
  %this_priority.1 = phi i32 [ %this_priority.083, %for.body ], [ %this_priority.083, %if.end28 ], [ %add.this_priority.0, %if.end34 ]
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %link.084, i64 0, i32 1, i64 1
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx43, align 8, !tbaa !5
  %tobool22 = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool22, label %if.end44.loopexit, label %for.body

if.end44.loopexit:                                ; preds = %for.inc
  %.pre.pre = load i32* %rtint, align 4, !tbaa !1
  %.pre85.pre = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  br label %if.end44

if.end44:                                         ; preds = %if.end44.loopexit, %if.then17.i, %if.else.i, %if.then15
  %16 = phi %struct.haifa_insn_data* [ %8, %if.then17.i ], [ %10, %if.else.i ], [ %3, %if.then15 ], [ %.pre85.pre, %if.end44.loopexit ]
  %17 = phi i32 [ %7, %if.then17.i ], [ %9, %if.else.i ], [ %2, %if.then15 ], [ %.pre.pre, %if.end44.loopexit ]
  %this_priority.2 = phi i32 [ 1, %if.then17.i ], [ %.call24.i, %if.else.i ], [ %conv.i, %if.then15 ], [ %this_priority.1, %if.end44.loopexit ]
  %idxprom48 = sext i32 %17 to i64
  %priority = getelementptr inbounds %struct.haifa_insn_data* %16, i64 %idxprom48, i32 3
  store i32 %this_priority.2, i32* %priority, align 4, !tbaa !48
  %18 = load i32* %rtint, align 4, !tbaa !1
  %idxprom53 = sext i32 %18 to i64
  %priority_known55 = getelementptr inbounds %struct.haifa_insn_data* %16, i64 %idxprom53, i32 11
  %bf.load56 = load i8* %priority_known55, align 2
  %bf.set = or i8 %bf.load56, 8
  store i8 %bf.set, i8* %priority_known55, align 2
  %.pre88 = load i32* %rtint, align 4, !tbaa !1
  %.pre89 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  br label %if.end58

if.end58:                                         ; preds = %if.end, %if.end44
  %19 = phi %struct.haifa_insn_data* [ %3, %if.end ], [ %.pre89, %if.end44 ]
  %20 = phi i32 [ %2, %if.end ], [ %.pre88, %if.end44 ]
  %idxprom62 = sext i32 %20 to i64
  %priority64 = getelementptr inbounds %struct.haifa_insn_data* %19, i64 %idxprom62, i32 3
  %21 = load i32* %priority64, align 4, !tbaa !48
  br label %return

return:                                           ; preds = %entry, %if.end58
  %retval.0 = phi i32 [ %21, %if.end58 ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @sched_init(%struct._IO_FILE* %dump_file) #0 {
entry:
  %0 = load i32* @sched_verbose_param, align 4, !tbaa !1
  %cmp = icmp eq i32 %0, 0
  %tobool = icmp ne %struct._IO_FILE* %dump_file, null
  %or.cond = and i1 %cmp, %tobool
  %. = select i1 %or.cond, i32 1, i32 %0
  store i32 %., i32* @sched_verbose, align 4, !tbaa !1
  %cmp1 = icmp slt i32 %0, 10
  %or.cond172 = and i1 %cmp1, %tobool
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !5
  %cond = select i1 %or.cond172, %struct._IO_FILE* %dump_file, %struct._IO_FILE* %1
  store %struct._IO_FILE* %cond, %struct._IO_FILE** @sched_dump, align 8, !tbaa !5
  %2 = load i32 ()** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 1, i32 2), align 8, !tbaa !55
  %tobool3 = icmp eq i32 ()* %2, null
  br i1 %tobool3, label %if.end5, label %if.then4

if.then4:                                         ; preds = %entry
  %call = tail call i32 %2() #5
  br label %if.end5

if.end5:                                          ; preds = %entry, %if.then4
  %storemerge = phi i32 [ %call, %if.then4 ], [ 1, %entry ]
  store i32 %storemerge, i32* @issue_rate, align 4, !tbaa !1
  %call6 = tail call i32 @get_max_uid() #5
  %add = add nsw i32 %call6, 1
  store i32 %add, i32* @old_max_uid, align 4, !tbaa !1
  %conv = sext i32 %add to i64
  %call7 = tail call noalias i8* @xcalloc(i64 %conv, i64 48) #5
  %3 = bitcast i8* %call7 to %struct.haifa_insn_data*
  store %struct.haifa_insn_data* %3, %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %luid8 = getelementptr inbounds i8* %call7, i64 16
  %4 = bitcast i8* %luid8 to i32*
  store i32 0, i32* %4, align 4, !tbaa !56
  %5 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp9240 = icmp sgt i32 %5, 0
  br i1 %cmp9240, label %for.body.lr.ph, label %for.end33

for.body.lr.ph:                                   ; preds = %if.end5
  %.pre255 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc31
  %indvars.iv251 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next252, %for.inc31 ]
  %luid.0241 = phi i32 [ 1, %for.body.lr.ph ], [ %luid.1.inc.lcssa, %for.inc31 ]
  %data = getelementptr inbounds %struct.varray_head_tag* %.pre255, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx11 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %indvars.iv251
  %6 = load %struct.basic_block_def** %arrayidx11, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.basic_block_def* %6, i64 0, i32 0
  %insn.0223 = load %struct.rtx_def** %head, align 8
  %fld224 = getelementptr inbounds %struct.rtx_def* %insn.0223, i64 0, i32 1
  %rtint225 = bitcast [1 x %union.rtunion_def]* %fld224 to i32*
  %7 = load i32* %rtint225, align 4, !tbaa !1
  %idxprom14226 = sext i32 %7 to i64
  %luid16227 = getelementptr inbounds %struct.haifa_insn_data* %3, i64 %idxprom14226, i32 2
  store i32 %luid.0241, i32* %luid16227, align 4, !tbaa !56
  %8 = getelementptr inbounds %struct.rtx_def* %insn.0223, i64 0, i32 0
  %bf.load228 = load i32* %8, align 8
  %bf.clear229 = and i32 %bf.load228, 65535
  %not.cmp17230 = icmp ne i32 %bf.clear229, 37
  %inc231 = zext i1 %not.cmp17230 to i32
  %luid.1.inc232 = add nsw i32 %inc231, %luid.0241
  %end236 = getelementptr inbounds %struct.basic_block_def* %6, i64 0, i32 1
  %9 = load %struct.rtx_def** %end236, align 8, !tbaa !24
  %cmp25237 = icmp eq %struct.rtx_def* %insn.0223, %9
  br i1 %cmp25237, label %for.inc31, label %for.inc

for.inc:                                          ; preds = %for.body, %for.inc
  %luid.1.inc239 = phi i32 [ %luid.1.inc, %for.inc ], [ %luid.1.inc232, %for.body ]
  %insn.0238 = phi %struct.rtx_def* [ %insn.0, %for.inc ], [ %insn.0223, %for.body ]
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %insn.0238, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx, align 8
  %fld = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %10 = load i32* %rtint, align 4, !tbaa !1
  %idxprom14 = sext i32 %10 to i64
  %luid16 = getelementptr inbounds %struct.haifa_insn_data* %3, i64 %idxprom14, i32 2
  store i32 %luid.1.inc239, i32* %luid16, align 4, !tbaa !56
  %11 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 0
  %bf.load = load i32* %11, align 8
  %bf.clear = and i32 %bf.load, 65535
  %not.cmp17 = icmp ne i32 %bf.clear, 37
  %inc = zext i1 %not.cmp17 to i32
  %luid.1.inc = add nsw i32 %inc, %luid.1.inc239
  %cmp25 = icmp eq %struct.rtx_def* %insn.0, %9
  br i1 %cmp25, label %for.inc31, label %for.inc

for.inc31:                                        ; preds = %for.inc, %for.body
  %luid.1.inc.lcssa = phi i32 [ %luid.1.inc232, %for.body ], [ %luid.1.inc, %for.inc ]
  %indvars.iv.next252 = add nuw nsw i64 %indvars.iv251, 1
  %12 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %13 = trunc i64 %indvars.iv.next252 to i32
  %cmp9 = icmp slt i32 %13, %12
  br i1 %cmp9, label %for.body, label %for.end33

for.end33:                                        ; preds = %for.inc31, %if.end5
  %luid.0.lcssa = phi i32 [ 1, %if.end5 ], [ %luid.1.inc.lcssa, %for.inc31 ]
  tail call void @init_dependency_caches(i32 %luid.0.lcssa) #5
  %14 = load i32* @old_max_uid, align 4, !tbaa !1
  tail call void @compute_bb_for_insn(i32 %14) #5
  tail call void @init_alias_analysis() #5
  %15 = load i32* @write_symbols, align 4, !tbaa !25
  %cmp34 = icmp eq i32 %15, 0
  br i1 %cmp34, label %if.end109, label %if.then36

if.then36:                                        ; preds = %for.end33
  %16 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %conv37 = sext i32 %16 to i64
  %call38 = tail call noalias i8* @xcalloc(i64 %conv37, i64 8) #5
  %17 = bitcast i8* %call38 to %struct.rtx_def**
  store %struct.rtx_def** %17, %struct.rtx_def*** @line_note_head, align 8, !tbaa !5
  %18 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp40221 = icmp sgt i32 %18, 0
  br i1 %cmp40221, label %for.body42, label %if.end109

for.body42:                                       ; preds = %if.then36, %for.inc106
  %indvars.iv249 = phi i64 [ %indvars.iv.next250, %for.inc106 ], [ 0, %if.then36 ]
  %19 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data44 = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 4
  %bb45 = bitcast %union.varray_data_tag* %data44 to [1 x %struct.basic_block_def*]*
  %arrayidx46 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb45, i64 0, i64 %indvars.iv249
  %20 = load %struct.basic_block_def** %arrayidx46, align 8, !tbaa !5
  %head47 = getelementptr inbounds %struct.basic_block_def* %20, i64 0, i32 0
  %line.0215 = load %struct.rtx_def** %head47, align 8
  %tobool49216 = icmp eq %struct.rtx_def* %line.0215, null
  br i1 %tobool49216, label %for.inc106, label %for.body50

for.body50:                                       ; preds = %for.body42, %for.inc65
  %line.0217 = phi %struct.rtx_def* [ %line.0, %for.inc65 ], [ %line.0215, %for.body42 ]
  %21 = getelementptr inbounds %struct.rtx_def* %line.0217, i64 0, i32 0
  %bf.load51 = load i32* %21, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 37
  br i1 %cmp53, label %land.lhs.true55, label %for.inc65

land.lhs.true55:                                  ; preds = %for.body50
  %arrayidx57 = getelementptr inbounds %struct.rtx_def* %line.0217, i64 0, i32 1, i64 4
  %rtint58 = bitcast %union.rtunion_def* %arrayidx57 to i32*
  %22 = load i32* %rtint58, align 4, !tbaa !1
  %cmp59 = icmp sgt i32 %22, 0
  br i1 %cmp59, label %if.then61, label %for.inc65

if.then61:                                        ; preds = %land.lhs.true55
  %23 = load %struct.rtx_def*** @line_note_head, align 8, !tbaa !5
  %arrayidx63 = getelementptr inbounds %struct.rtx_def** %23, i64 %indvars.iv249
  store %struct.rtx_def* %line.0217, %struct.rtx_def** %arrayidx63, align 8, !tbaa !5
  %.pre = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data71.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %.pre, i64 0, i32 4
  %bb72.phi.trans.insert = bitcast %union.varray_data_tag* %data71.phi.trans.insert to [1 x %struct.basic_block_def*]*
  %arrayidx73.phi.trans.insert = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb72.phi.trans.insert, i64 0, i64 %indvars.iv249
  %.pre253 = load %struct.basic_block_def** %arrayidx73.phi.trans.insert, align 8, !tbaa !5
  %head74.phi.trans.insert = getelementptr inbounds %struct.basic_block_def* %.pre253, i64 0, i32 0
  %line.1218.pre = load %struct.rtx_def** %head74.phi.trans.insert, align 8
  br label %for.end69

for.inc65:                                        ; preds = %for.body50, %land.lhs.true55
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %line.0217, i64 0, i32 1, i64 1
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %line.0 = load %struct.rtx_def** %rtx68, align 8
  %tobool49 = icmp eq %struct.rtx_def* %line.0, null
  br i1 %tobool49, label %for.end69, label %for.body50

for.end69:                                        ; preds = %for.inc65, %if.then61
  %line.1218 = phi %struct.rtx_def* [ %line.1218.pre, %if.then61 ], [ %line.0215, %for.inc65 ]
  %tobool76219 = icmp eq %struct.rtx_def* %line.1218, null
  br i1 %tobool76219, label %for.inc106, label %for.body77

for.body77:                                       ; preds = %for.end69, %for.inc101
  %line.1220 = phi %struct.rtx_def* [ %line.1, %for.inc101 ], [ %line.1218, %for.end69 ]
  %24 = getelementptr inbounds %struct.rtx_def* %line.1220, i64 0, i32 0
  %bf.load78 = load i32* %24, align 8
  %bf.clear79 = and i32 %bf.load78, 65535
  %idxprom80206 = zext i32 %bf.clear79 to i64
  %arrayidx81 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom80206
  %25 = load i8* %arrayidx81, align 1, !tbaa !25
  %cmp83 = icmp eq i8 %25, 105
  br i1 %cmp83, label %for.inc106, label %if.end86

if.end86:                                         ; preds = %for.body77
  %cmp89 = icmp eq i32 %bf.clear79, 37
  br i1 %cmp89, label %land.lhs.true91, label %for.inc101

land.lhs.true91:                                  ; preds = %if.end86
  %arrayidx93 = getelementptr inbounds %struct.rtx_def* %line.1220, i64 0, i32 1, i64 4
  %rtint94 = bitcast %union.rtunion_def* %arrayidx93 to i32*
  %26 = load i32* %rtint94, align 4, !tbaa !1
  %cmp95 = icmp sgt i32 %26, 0
  br i1 %cmp95, label %if.then97, label %for.inc101

if.then97:                                        ; preds = %land.lhs.true91
  %27 = load %struct.rtx_def*** @line_note_head, align 8, !tbaa !5
  %arrayidx99 = getelementptr inbounds %struct.rtx_def** %27, i64 %indvars.iv249
  store %struct.rtx_def* %line.1220, %struct.rtx_def** %arrayidx99, align 8, !tbaa !5
  br label %for.inc101

for.inc101:                                       ; preds = %if.end86, %land.lhs.true91, %if.then97
  %arrayidx103 = getelementptr inbounds %struct.rtx_def* %line.1220, i64 0, i32 1, i64 2
  %rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**
  %line.1 = load %struct.rtx_def** %rtx104, align 8
  %tobool76 = icmp eq %struct.rtx_def* %line.1, null
  br i1 %tobool76, label %for.inc106, label %for.body77

for.inc106:                                       ; preds = %for.body77, %for.inc101, %for.body42, %for.end69
  %indvars.iv.next250 = add nuw nsw i64 %indvars.iv249, 1
  %28 = trunc i64 %indvars.iv.next250 to i32
  %cmp40 = icmp slt i32 %28, %18
  br i1 %cmp40, label %for.body42, label %if.end109

if.end109:                                        ; preds = %for.inc106, %if.then36, %for.end33
  %29 = load i32* @sched_verbose, align 4, !tbaa !1
  %tobool110 = icmp eq i32 %29, 0
  br i1 %tobool110, label %if.end112, label %if.then111

if.then111:                                       ; preds = %if.end109
  tail call void @init_target_units() #5
  br label %if.end112

if.end112:                                        ; preds = %if.end109, %if.then111
  %30 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %sub = add nsw i32 %30, -1
  %idxprom113 = sext i32 %sub to i64
  %31 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data114 = getelementptr inbounds %struct.varray_head_tag* %31, i64 0, i32 4
  %bb115 = bitcast %union.varray_data_tag* %data114 to [1 x %struct.basic_block_def*]*
  %arrayidx116 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb115, i64 0, i64 %idxprom113
  %32 = load %struct.basic_block_def** %arrayidx116, align 8, !tbaa !5
  %end117 = getelementptr inbounds %struct.basic_block_def* %32, i64 0, i32 1
  %33 = load %struct.rtx_def** %end117, align 8, !tbaa !24
  %arrayidx119 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 1, i64 2
  %rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx120, align 8, !tbaa !5
  %cmp121 = icmp eq %struct.rtx_def* %34, null
  br i1 %cmp121, label %if.then141, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %if.end112
  %35 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 0
  %bf.load124 = load i32* %35, align 8
  %36 = and i32 %bf.load124, 65534
  %switch = icmp eq i32 %36, 36
  br i1 %switch, label %if.end164, label %land.lhs.true133

land.lhs.true133:                                 ; preds = %lor.lhs.false123
  %37 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load137 = load i32* %37, align 8
  %bf.clear138 = and i32 %bf.load137, 65535
  %cmp139 = icmp eq i32 %bf.clear138, 35
  br i1 %cmp139, label %if.end164, label %if.then141

if.then141:                                       ; preds = %land.lhs.true133, %if.end112
  %call148 = tail call %struct.rtx_def* @emit_note_after(i32 -99, %struct.rtx_def* %33) #5
  %38 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %sub149 = add nsw i32 %38, -1
  %idxprom150 = sext i32 %sub149 to i64
  %39 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data151 = getelementptr inbounds %struct.varray_head_tag* %39, i64 0, i32 4
  %bb152 = bitcast %union.varray_data_tag* %data151 to [1 x %struct.basic_block_def*]*
  %arrayidx153 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb152, i64 0, i64 %idxprom150
  %40 = load %struct.basic_block_def** %arrayidx153, align 8, !tbaa !5
  %end154 = getelementptr inbounds %struct.basic_block_def* %40, i64 0, i32 1
  %41 = load %struct.rtx_def** %end154, align 8, !tbaa !24
  %arrayidx156 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 1
  %rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx157, align 8, !tbaa !5
  store %struct.rtx_def* %42, %struct.rtx_def** %end154, align 8, !tbaa !24
  br label %if.end164

if.end164:                                        ; preds = %lor.lhs.false123, %land.lhs.true133, %if.then141
  %43 = phi i32 [ %30, %lor.lhs.false123 ], [ %30, %land.lhs.true133 ], [ %38, %if.then141 ]
  %cmp167213 = icmp sgt i32 %43, 0
  br i1 %cmp167213, label %for.body169.lr.ph, label %for.end171

for.body169.lr.ph:                                ; preds = %if.end164
  %44 = sext i32 %43 to i64
  br label %for.body169

for.body169:                                      ; preds = %for.body169.lr.ph, %for.cond166.backedge
  %indvars.iv = phi i64 [ %44, %for.body169.lr.ph ], [ %indvars.iv.next, %for.cond166.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %45 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data.i.i = getelementptr inbounds %struct.varray_head_tag* %45, i64 0, i32 4
  %bb.i.i = bitcast %union.varray_data_tag* %data.i.i to [1 x %struct.basic_block_def*]*
  %arrayidx.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i.i, i64 0, i64 %indvars.iv.next
  %46 = load %struct.basic_block_def** %arrayidx.i.i, align 8, !tbaa !5
  %head1.i.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 0
  %47 = load %struct.rtx_def** %head1.i.i, align 8, !tbaa !21
  %end.i.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 1
  %48 = load %struct.rtx_def** %end.i.i, align 8, !tbaa !24
  %cmp4348.i.i = icmp eq %struct.rtx_def* %47, %48
  br i1 %cmp4348.i.i, label %get_block_head_tail.exit.i, label %while.body.lr.ph.i.i

while.body.lr.ph.i.i:                             ; preds = %for.body169, %while.cond.outer.backedge.i.i
  %tail.0.ph52.i.i = phi %struct.rtx_def* [ %tail.038.i.i, %while.cond.outer.backedge.i.i ], [ %48, %for.body169 ]
  %head.0.ph49.i.i = phi %struct.rtx_def* [ %head.0.ph.be.i.i, %while.cond.outer.backedge.i.i ], [ %47, %for.body169 ]
  %49 = getelementptr inbounds %struct.rtx_def* %head.0.ph49.i.i, i64 0, i32 0
  %bf.load.i.i = load i32* %49, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 65535
  %cmp6.i.i = icmp eq i32 %bf.clear.i.i, 37
  br i1 %cmp6.i.i, label %while.cond.outer.backedge.i.i, label %if.else.i.i

while.cond.outer.backedge.i.i:                    ; preds = %if.else15.i.i, %while.body.lr.ph.i.i
  %tail.038.i.i = phi %struct.rtx_def* [ %tail.0.ph52.i.i, %while.body.lr.ph.i.i ], [ %tail.044.i.i, %if.else15.i.i ]
  %head.0.ph.be.in.in.i.i = getelementptr inbounds %struct.rtx_def* %head.0.ph49.i.i, i64 0, i32 1, i64 2
  %head.0.ph.be.in.i.i = bitcast %union.rtunion_def* %head.0.ph.be.in.in.i.i to %struct.rtx_def**
  %head.0.ph.be.i.i = load %struct.rtx_def** %head.0.ph.be.in.i.i, align 8
  %cmp43.i.i = icmp eq %struct.rtx_def* %head.0.ph.be.i.i, %tail.038.i.i
  br i1 %cmp43.i.i, label %get_block_head_tail.exit.i, label %while.body.lr.ph.i.i

if.else.i.i:                                      ; preds = %while.body.lr.ph.i.i, %if.then11.i.i
  %tail.044.i.i = phi %struct.rtx_def* [ %51, %if.then11.i.i ], [ %tail.0.ph52.i.i, %while.body.lr.ph.i.i ]
  %50 = getelementptr inbounds %struct.rtx_def* %tail.044.i.i, i64 0, i32 0
  %bf.load8.i.i = load i32* %50, align 8
  %bf.clear9.i.i = and i32 %bf.load8.i.i, 65535
  %cmp10.i.i = icmp eq i32 %bf.clear9.i.i, 37
  br i1 %cmp10.i.i, label %if.then11.i.i, label %if.else15.i.i

if.then11.i.i:                                    ; preds = %if.else.i.i
  %arrayidx13.i.i = getelementptr inbounds %struct.rtx_def* %tail.044.i.i, i64 0, i32 1, i64 1
  %rtx14.i.i = bitcast %union.rtunion_def* %arrayidx13.i.i to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx14.i.i, align 8, !tbaa !5
  %cmp.i.i = icmp eq %struct.rtx_def* %head.0.ph49.i.i, %51
  br i1 %cmp.i.i, label %get_block_head_tail.exit.i, label %if.else.i.i

if.else15.i.i:                                    ; preds = %if.else.i.i
  %phitmp.i.i = icmp eq i32 %bf.clear.i.i, 36
  br i1 %phitmp.i.i, label %while.cond.outer.backedge.i.i, label %get_block_head_tail.exit.i

get_block_head_tail.exit.i:                       ; preds = %if.else15.i.i, %while.cond.outer.backedge.i.i, %if.then11.i.i, %for.body169
  %head.0.ph42.i.i = phi %struct.rtx_def* [ %47, %for.body169 ], [ %head.0.ph49.i.i, %if.then11.i.i ], [ %head.0.ph49.i.i, %if.else15.i.i ], [ %tail.038.i.i, %while.cond.outer.backedge.i.i ]
  %tail.039.i.i = phi %struct.rtx_def* [ %47, %for.body169 ], [ %head.0.ph49.i.i, %if.then11.i.i ], [ %tail.044.i.i, %if.else15.i.i ], [ %tail.038.i.i, %while.cond.outer.backedge.i.i ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %tail.039.i.i, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %cmp125.i = icmp eq %struct.rtx_def* %head.0.ph42.i.i, %52
  br i1 %cmp125.i, label %for.cond166.backedge, label %for.body.i

for.cond166.backedge:                             ; preds = %for.inc88.i, %get_block_head_tail.exit.i
  %53 = trunc i64 %indvars.iv.next to i32
  %cmp167 = icmp sgt i32 %53, 0
  br i1 %cmp167, label %for.body169, label %for.end171

for.body.i:                                       ; preds = %get_block_head_tail.exit.i, %for.inc88.i
  %insn.0.in.sroa.speculated126.i = phi %struct.rtx_def* [ %insn.0.in.sroa.speculate.load.for.inc88.i, %for.inc88.i ], [ %head.0.ph42.i.i, %get_block_head_tail.exit.i ]
  %54 = getelementptr inbounds %struct.rtx_def* %insn.0.in.sroa.speculated126.i, i64 0, i32 0
  %bf.load.i = load i32* %54, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom115.i = zext i32 %bf.clear.i to i64
  %arrayidx1.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom115.i
  %55 = load i8* %arrayidx1.i, align 1, !tbaa !25
  %cmp2.i = icmp eq i8 %55, 105
  br i1 %cmp2.i, label %if.end.i, label %for.inc88.i

if.end.i:                                         ; preds = %for.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %insn.0.in.sroa.speculated126.i, i64 0, i32 1, i64 3
  %rtx6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !5
  %57 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 0
  %bf.load7.i = load i32* %57, align 8
  %bf.clear8.i = and i32 %bf.load7.i, 65535
  switch i32 %bf.clear8.i, label %if.else.i [
    i32 47, label %land.lhs.true.i
    i32 49, label %land.lhs.true.i
  ]

land.lhs.true.i:                                  ; preds = %if.end.i, %if.end.i
  %arrayidx16.i = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 0
  %rtx17.i = bitcast %union.rtunion_def* %arrayidx16.i to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx17.i, align 8, !tbaa !5
  %call.i = tail call i32 @register_operand(%struct.rtx_def* %58, i32 0) #5
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %land.lhs.true.if.else_crit_edge.i, label %if.end57.i

land.lhs.true.if.else_crit_edge.i:                ; preds = %land.lhs.true.i
  %bf.load19.pre.i = load i32* %57, align 8
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.if.else_crit_edge.i, %if.end.i
  %bf.load19.i = phi i32 [ %bf.load19.pre.i, %land.lhs.true.if.else_crit_edge.i ], [ %bf.load7.i, %if.end.i ]
  %bf.clear20.i = and i32 %bf.load19.i, 65535
  %cmp21.i = icmp eq i32 %bf.clear20.i, 39
  br i1 %cmp21.i, label %if.then23.i, label %if.end57.i

if.then23.i:                                      ; preds = %if.else.i
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx25.i to %struct.rtvec_def**
  %59 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %59, i64 0, i32 0
  %60 = load i32* %num_elem.i, align 4, !tbaa !57
  br label %for.cond26.outer.i

for.cond26.outer.i:                               ; preds = %land.lhs.true47.i, %if.then23.i
  %reg_weight.0.ph.i = phi i32 [ 0, %if.then23.i ], [ %reg_weight.0.inc54.i, %land.lhs.true47.i ]
  %j.0.in.ph.i = phi i32 [ %60, %if.then23.i ], [ %67, %land.lhs.true47.i ]
  %61 = sext i32 %j.0.in.ph.i to i64
  br label %for.cond26.i

for.cond26.i:                                     ; preds = %for.body29.i, %for.cond26.outer.i
  %indvars.iv.i = phi i64 [ %61, %for.cond26.outer.i ], [ %indvars.iv.next.i, %for.body29.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %62 = trunc i64 %indvars.iv.i to i32
  %cmp27.i = icmp sgt i32 %62, 0
  br i1 %cmp27.i, label %for.body29.i, label %if.end57.i

for.body29.i:                                     ; preds = %for.cond26.i
  %63 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !5
  %arrayidx35.i = getelementptr inbounds %struct.rtx_def* %63, i64 0, i32 1, i64 0
  %rtvec36.i = bitcast %union.rtunion_def* %arrayidx35.i to %struct.rtvec_def**
  %64 = load %struct.rtvec_def** %rtvec36.i, align 8, !tbaa !5
  %arrayidx37.i = getelementptr inbounds %struct.rtvec_def* %64, i64 0, i32 1, i64 %indvars.iv.next.i
  %65 = load %struct.rtx_def** %arrayidx37.i, align 8, !tbaa !5
  %66 = getelementptr inbounds %struct.rtx_def* %65, i64 0, i32 0
  %bf.load38.i = load i32* %66, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 65535
  switch i32 %bf.clear39.i, label %for.cond26.i [
    i32 47, label %land.lhs.true47.i
    i32 49, label %land.lhs.true47.i
  ]

land.lhs.true47.i:                                ; preds = %for.body29.i, %for.body29.i
  %67 = trunc i64 %indvars.iv.next.i to i32
  %arrayidx49.i = getelementptr inbounds %struct.rtx_def* %65, i64 0, i32 1, i64 0
  %rtx50.i = bitcast %union.rtunion_def* %arrayidx49.i to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx50.i, align 8, !tbaa !5
  %call51.i = tail call i32 @register_operand(%struct.rtx_def* %68, i32 0) #5
  %not.tobool52.i = icmp ne i32 %call51.i, 0
  %inc54.i = zext i1 %not.tobool52.i to i32
  %reg_weight.0.inc54.i = add nsw i32 %inc54.i, %reg_weight.0.ph.i
  br label %for.cond26.outer.i

if.end57.i:                                       ; preds = %for.cond26.i, %if.else.i, %land.lhs.true.i
  %reg_weight.2.i = phi i32 [ 0, %if.else.i ], [ 1, %land.lhs.true.i ], [ %reg_weight.0.ph.i, %for.cond26.i ]
  %arrayidx59.i = getelementptr inbounds %struct.rtx_def* %insn.0.in.sroa.speculated126.i, i64 0, i32 1, i64 6
  %x.0.in120.i = bitcast %union.rtunion_def* %arrayidx59.i to %struct.rtx_def**
  %x.0121.i = load %struct.rtx_def** %x.0.in120.i, align 8
  %tobool62122.i = icmp eq %struct.rtx_def* %x.0121.i, null
  br i1 %tobool62122.i, label %for.end81.i, label %for.body63.i

for.body63.i:                                     ; preds = %if.end57.i, %for.inc77.i
  %x.0124.i = phi %struct.rtx_def* [ %x.0.i, %for.inc77.i ], [ %x.0121.i, %if.end57.i ]
  %reg_weight.3123.i = phi i32 [ %reg_weight.4.i, %for.inc77.i ], [ %reg_weight.2.i, %if.end57.i ]
  %69 = getelementptr inbounds %struct.rtx_def* %x.0124.i, i64 0, i32 0
  %bf.load64.i = load i32* %69, align 8
  %bf.lshr.i = lshr i32 %bf.load64.i, 16
  %bf.clear65.i = and i32 %bf.lshr.i, 255
  switch i32 %bf.clear65.i, label %for.inc77.i [
    i32 1, label %if.then74.i
    i32 10, label %if.then74.i
  ]

if.then74.i:                                      ; preds = %for.body63.i, %for.body63.i
  %dec75.i = add nsw i32 %reg_weight.3123.i, -1
  br label %for.inc77.i

for.inc77.i:                                      ; preds = %if.then74.i, %for.body63.i
  %reg_weight.4.i = phi i32 [ %dec75.i, %if.then74.i ], [ %reg_weight.3123.i, %for.body63.i ]
  %arrayidx79.i = getelementptr inbounds %struct.rtx_def* %x.0124.i, i64 0, i32 1, i64 1
  %x.0.in.i = bitcast %union.rtunion_def* %arrayidx79.i to %struct.rtx_def**
  %x.0.i = load %struct.rtx_def** %x.0.in.i, align 8
  %tobool62.i = icmp eq %struct.rtx_def* %x.0.i, null
  br i1 %tobool62.i, label %for.end81.i, label %for.body63.i

for.end81.i:                                      ; preds = %for.inc77.i, %if.end57.i
  %reg_weight.3.lcssa.i = phi i32 [ %reg_weight.2.i, %if.end57.i ], [ %reg_weight.4.i, %for.inc77.i ]
  %conv82.i = trunc i32 %reg_weight.3.lcssa.i to i16
  %arrayidx84.i = getelementptr inbounds %struct.rtx_def* %insn.0.in.sroa.speculated126.i, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx84.i to i32*
  %70 = load i32* %rtint.i, align 4, !tbaa !1
  %idxprom85.i = sext i32 %70 to i64
  %71 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %reg_weight87.i = getelementptr inbounds %struct.haifa_insn_data* %71, i64 %idxprom85.i, i32 10
  store i16 %conv82.i, i16* %reg_weight87.i, align 2, !tbaa !59
  br label %for.inc88.i

for.inc88.i:                                      ; preds = %for.end81.i, %for.body.i
  %arrayidx90.i = getelementptr inbounds %struct.rtx_def* %insn.0.in.sroa.speculated126.i, i64 0, i32 1, i64 2
  %rtx91.i = bitcast %union.rtunion_def* %arrayidx90.i to %struct.rtx_def**
  %insn.0.in.sroa.speculate.load.for.inc88.i = load %struct.rtx_def** %rtx91.i, align 8
  %cmp.i = icmp eq %struct.rtx_def* %insn.0.in.sroa.speculate.load.for.inc88.i, %52
  br i1 %cmp.i, label %for.cond166.backedge, label %for.body.i

for.end171:                                       ; preds = %for.cond166.backedge, %if.end164
  ret void
}

declare i32 @get_max_uid() #2

declare noalias i8* @xcalloc(i64, i64) #2

declare void @init_dependency_caches(i32) #2

declare void @compute_bb_for_insn(i32) #2

declare void @init_alias_analysis() #2

declare void @init_target_units() #2

; Function Attrs: nounwind uwtable
define void @sched_finish() #0 {
entry:
  %0 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %1 = bitcast %struct.haifa_insn_data* %0 to i8*
  tail call void @free(i8* %1)
  tail call void @free_dependency_caches() #5
  tail call void @end_alias_analysis() #5
  %2 = load i32* @write_symbols, align 4, !tbaa !25
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*** @line_note_head, align 8, !tbaa !5
  %4 = bitcast %struct.rtx_def** %3 to i8*
  tail call void @free(i8* %4)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare void @free_dependency_caches() #2

declare void @end_alias_analysis() #2

declare i32 @register_operand(%struct.rtx_def*, i32) #2

declare void @insn_print_units(%struct.rtx_def*) #2

declare void @visualize_no_unit(%struct.rtx_def*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @schedule_unit(i32 %unit, %struct.rtx_def* %insn, i32 %clock) #3 {
entry:
  %cmp = icmp sgt i32 %unit, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %idxprom = sext i32 %unit to i64
  %multiplicity = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom, i32 2
  %0 = load i32* %multiplicity, align 4, !tbaa !53
  %i.040 = add nsw i32 %0, -1
  %cmp141 = icmp sgt i32 %i.040, 0
  br i1 %cmp141, label %for.body.lr.ph, label %if.then.for.end_crit_edge

if.then.for.end_crit_edge:                        ; preds = %if.then
  %max_blockage.pre = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom, i32 8
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.then
  %blockage_range_function.i = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom, i32 9
  %blockage_function.i = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom, i32 10
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint.i.i = bitcast %union.rtunion_def* %arrayidx.i.i to i32*
  %add.i.i = add nsw i32 %unit, 1
  %max_blockage19.i = getelementptr inbounds [0 x %struct.function_unit_desc]* @function_units, i64 0, i64 %idxprom, i32 8
  %shl.i.i = shl i32 %add.i.i, 8
  br label %for.body

for.cond:                                         ; preds = %if.end22.i
  %i.0 = add nsw i32 %i.043, -1
  %cmp1 = icmp sgt i32 %i.0, 0
  br i1 %cmp1, label %for.body, label %for.cond.for.end_crit_edge

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ %idxprom, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %i.043 = phi i32 [ %i.040, %for.body.lr.ph ], [ %i.0, %for.cond ]
  %arrayidx.i = getelementptr inbounds [78 x i32]* @unit_tick, i64 0, i64 %indvars.iv
  %1 = load i32* %arrayidx.i, align 4, !tbaa !1
  %sub.i = sub nsw i32 %1, %clock
  %cmp.i = icmp sgt i32 %sub.i, 0
  br i1 %cmp.i, label %if.then.i, label %for.body.for.end_crit_edge

if.then.i:                                        ; preds = %for.body
  %2 = load i32 (%struct.rtx_def*)** %blockage_range_function.i, align 8, !tbaa !10
  %tobool.i = icmp eq i32 (%struct.rtx_def*)* %2, null
  br i1 %tobool.i, label %if.end22.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  %3 = load i32 (%struct.rtx_def*, %struct.rtx_def*)** %blockage_function.i, align 8, !tbaa !12
  %tobool6.i = icmp eq i32 (%struct.rtx_def*, %struct.rtx_def*)* %3, null
  br i1 %tobool6.i, label %if.else.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then3.i
  %arrayidx12.i = getelementptr inbounds [78 x %struct.rtx_def*]* @unit_last_insn, i64 0, i64 %indvars.iv
  %4 = load %struct.rtx_def** %arrayidx12.i, align 8, !tbaa !5
  %call.i = tail call i32 %3(%struct.rtx_def* %4, %struct.rtx_def* %insn) #5
  %5 = load i32* %max_blockage19.i, align 8, !tbaa !13
  %sub15.i = add i32 %call.i, %1
  %add.i = sub i32 %sub15.i, %5
  br label %if.end22.i

if.else.i:                                        ; preds = %if.then3.i
  %6 = load i32* %rtint.i.i, align 4, !tbaa !1
  %idxprom.i.i = sext i32 %6 to i64
  %7 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %blockage2.i.i = getelementptr inbounds %struct.haifa_insn_data* %7, i64 %idxprom.i.i, i32 5
  %8 = load i32* %blockage2.i.i, align 4, !tbaa !14
  %shr.i.i = lshr i32 %8, 16
  %cmp.i.i = icmp eq i32 %shr.i.i, %add.i.i
  br i1 %cmp.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.else.i
  %call.i.i = tail call i32 %2(%struct.rtx_def* %insn) #5
  %shr6.i.i = lshr i32 %call.i.i, 16
  %or.i.i = or i32 %shr6.i.i, %shl.i.i
  %shl7.i.i = shl i32 %or.i.i, 8
  %and.i.i = and i32 %call.i.i, 65535
  %or8.i.i = or i32 %shl7.i.i, %and.i.i
  %9 = load i32* %rtint.i.i, align 4, !tbaa !1
  %idxprom12.i.i = sext i32 %9 to i64
  %10 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %blockage14.i.i = getelementptr inbounds %struct.haifa_insn_data* %10, i64 %idxprom12.i.i, i32 5
  store i32 %or8.i.i, i32* %blockage14.i.i, align 4, !tbaa !14
  br label %blockage_range.exit.i

if.else.i.i:                                      ; preds = %if.else.i
  %11 = shl i32 %8, 8
  %shl17.i.i = and i32 %11, 16711680
  %and18.i.i = and i32 %8, 255
  %or19.i.i = or i32 %shl17.i.i, %and18.i.i
  br label %blockage_range.exit.i

blockage_range.exit.i:                            ; preds = %if.else.i.i, %if.then.i.i
  %range.0.i.i = phi i32 [ %call.i.i, %if.then.i.i ], [ %or19.i.i, %if.else.i.i ]
  %and.i = and i32 %range.0.i.i, 65535
  %12 = load i32* %max_blockage19.i, align 8, !tbaa !13
  %sub20.i = sub i32 %1, %12
  %add21.i = add i32 %sub20.i, %and.i
  br label %if.end22.i

if.end22.i:                                       ; preds = %blockage_range.exit.i, %if.then7.i, %if.then.i
  %tick.0.i = phi i32 [ %add.i, %if.then7.i ], [ %add21.i, %blockage_range.exit.i ], [ %1, %if.then.i ]
  %sub23.i = sub nsw i32 %tick.0.i, %clock
  %cmp24.i = icmp sgt i32 %sub23.i, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, 26
  br i1 %cmp24.i, label %for.cond, label %if.end22.i.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  %13 = trunc i64 %indvars.iv to i32
  br label %for.end

if.end22.i.for.end_crit_edge:                     ; preds = %if.end22.i
  %14 = trunc i64 %indvars.iv to i32
  br label %for.end

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  %15 = trunc i64 %indvars.iv.next to i32
  br label %for.end

for.end:                                          ; preds = %if.then.for.end_crit_edge, %for.cond.for.end_crit_edge, %if.end22.i.for.end_crit_edge, %for.body.for.end_crit_edge
  %max_blockage.pre-phi = phi i32* [ %max_blockage.pre, %if.then.for.end_crit_edge ], [ %max_blockage19.i, %for.cond.for.end_crit_edge ], [ %max_blockage19.i, %if.end22.i.for.end_crit_edge ], [ %max_blockage19.i, %for.body.for.end_crit_edge ]
  %instance.0.lcssa = phi i32 [ %unit, %if.then.for.end_crit_edge ], [ %15, %for.cond.for.end_crit_edge ], [ %14, %if.end22.i.for.end_crit_edge ], [ %13, %for.body.for.end_crit_edge ]
  %idxprom3 = sext i32 %instance.0.lcssa to i64
  %arrayidx4 = getelementptr inbounds [78 x %struct.rtx_def*]* @unit_last_insn, i64 0, i64 %idxprom3
  store %struct.rtx_def* %insn, %struct.rtx_def** %arrayidx4, align 8, !tbaa !5
  %16 = load i32* %max_blockage.pre-phi, align 8, !tbaa !13
  %add7 = add nsw i32 %16, %clock
  %arrayidx9 = getelementptr inbounds [78 x i32]* @unit_tick, i64 0, i64 %idxprom3
  store i32 %add7, i32* %arrayidx9, align 4, !tbaa !1
  br label %if.end18

if.else:                                          ; preds = %entry
  %tobool1146 = icmp eq i32 %unit, -1
  br i1 %tobool1146, label %if.end18, label %for.body12.lr.ph

for.body12.lr.ph:                                 ; preds = %if.else
  %neg = xor i32 %unit, -1
  br label %for.body12

for.body12:                                       ; preds = %for.body12.lr.ph, %for.inc16
  %i.148 = phi i32 [ 0, %for.body12.lr.ph ], [ %inc, %for.inc16 ]
  %unit.addr.047 = phi i32 [ %neg, %for.body12.lr.ph ], [ %shr, %for.inc16 ]
  %and = and i32 %unit.addr.047, 1
  %cmp13 = icmp eq i32 %and, 0
  br i1 %cmp13, label %for.inc16, label %if.then14

if.then14:                                        ; preds = %for.body12
  tail call fastcc void @schedule_unit(i32 %i.148, %struct.rtx_def* %insn, i32 %clock)
  br label %for.inc16

for.inc16:                                        ; preds = %for.body12, %if.then14
  %inc = add nsw i32 %i.148, 1
  %shr = ashr i32 %unit.addr.047, 1
  %tobool11 = icmp eq i32 %shr, 0
  br i1 %tobool11, label %if.end18, label %for.body12

if.end18:                                         ; preds = %for.inc16, %if.else, %for.end
  ret void
}

declare %struct.rtx_def* @emit_note_before(i32, %struct.rtx_def*) #2

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) #2

declare void @specqsort(i8*, i32, i32, i32 (...)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @rank_for_schedule(i8* nocapture readonly %x, i8* nocapture readonly %y) #0 {
entry:
  %0 = bitcast i8* %y to %struct.rtx_def**
  %1 = load %struct.rtx_def** %0, align 8, !tbaa !5
  %2 = bitcast i8* %x to %struct.rtx_def**
  %3 = load %struct.rtx_def** %2, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %4 = load i32* %rtint, align 4, !tbaa !1
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %priority = getelementptr inbounds %struct.haifa_insn_data* %5, i64 %idxprom, i32 3
  %6 = load i32* %priority, align 4, !tbaa !48
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtint15 = bitcast %union.rtunion_def* %arrayidx14 to i32*
  %7 = load i32* %rtint15, align 4, !tbaa !1
  %idxprom16 = sext i32 %7 to i64
  %priority18 = getelementptr inbounds %struct.haifa_insn_data* %5, i64 %idxprom16, i32 3
  %8 = load i32* %priority18, align 4, !tbaa !48
  %tobool = icmp eq i32 %6, %8
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %sub = sub nsw i32 %6, %8
  br label %return

if.end:                                           ; preds = %entry
  %9 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool19 = icmp eq i32 %9, 0
  br i1 %tobool19, label %land.lhs.true, label %if.end35

land.lhs.true:                                    ; preds = %if.end
  %reg_weight = getelementptr inbounds %struct.haifa_insn_data* %5, i64 %idxprom16, i32 10
  %10 = load i16* %reg_weight, align 2, !tbaa !59
  %reg_weight30 = getelementptr inbounds %struct.haifa_insn_data* %5, i64 %idxprom, i32 10
  %11 = load i16* %reg_weight30, align 2, !tbaa !59
  %tobool33 = icmp eq i16 %10, %11
  br i1 %tobool33, label %if.end35, label %if.then34

if.then34:                                        ; preds = %land.lhs.true
  %conv = sext i16 %10 to i32
  %conv31 = sext i16 %11 to i32
  %sub32 = sub nsw i32 %conv, %conv31
  br label %return

if.end35:                                         ; preds = %land.lhs.true, %if.end
  %12 = load %struct.sched_info** @current_sched_info, align 8, !tbaa !5
  %rank = getelementptr inbounds %struct.sched_info* %12, i64 0, i32 4
  %13 = load i32 (%struct.rtx_def*, %struct.rtx_def*)** %rank, align 8, !tbaa !60
  %call = tail call i32 %13(%struct.rtx_def* %1, %struct.rtx_def* %3) #5
  %tobool36 = icmp eq i32 %call, 0
  br i1 %tobool36, label %if.end38, label %return

if.end38:                                         ; preds = %if.end35
  %14 = load %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %tobool39 = icmp eq %struct.rtx_def* %14, null
  br i1 %tobool39, label %if.end86, label %if.then40

if.then40:                                        ; preds = %if.end38
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0
  %rtint43 = bitcast %union.rtunion_def* %arrayidx42 to i32*
  %15 = load i32* %rtint43, align 4, !tbaa !1
  %idxprom44 = sext i32 %15 to i64
  %16 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %depend = getelementptr inbounds %struct.haifa_insn_data* %16, i64 %idxprom44, i32 0
  %17 = load %struct.rtx_def** %depend, align 8, !tbaa !43
  %call46 = tail call %struct.rtx_def* @find_insn_list(%struct.rtx_def* %1, %struct.rtx_def* %17) #5
  %cmp = icmp eq %struct.rtx_def* %call46, null
  br i1 %cmp, label %if.end57, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then40
  %18 = load %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %call48 = tail call i32 @insn_cost(%struct.rtx_def* %18, %struct.rtx_def* %call46, %struct.rtx_def* %1)
  %cmp49 = icmp eq i32 %call48, 1
  br i1 %cmp49, label %if.end57, label %if.else

if.else:                                          ; preds = %lor.lhs.false
  %19 = getelementptr inbounds %struct.rtx_def* %call46, i64 0, i32 0
  %bf.load = load i32* %19, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp52 = icmp eq i32 %bf.clear, 0
  %. = select i1 %cmp52, i32 1, i32 2
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then40, %lor.lhs.false
  %tmp_class.0 = phi i32 [ 3, %lor.lhs.false ], [ 3, %if.then40 ], [ %., %if.else ]
  %20 = load %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 0
  %rtint60 = bitcast %union.rtunion_def* %arrayidx59 to i32*
  %21 = load i32* %rtint60, align 4, !tbaa !1
  %idxprom61 = sext i32 %21 to i64
  %22 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %depend63 = getelementptr inbounds %struct.haifa_insn_data* %22, i64 %idxprom61, i32 0
  %23 = load %struct.rtx_def** %depend63, align 8, !tbaa !43
  %call64 = tail call %struct.rtx_def* @find_insn_list(%struct.rtx_def* %3, %struct.rtx_def* %23) #5
  %cmp65 = icmp eq %struct.rtx_def* %call64, null
  br i1 %cmp65, label %if.end81, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %if.end57
  %24 = load %struct.rtx_def** @last_scheduled_insn, align 8, !tbaa !5
  %call68 = tail call i32 @insn_cost(%struct.rtx_def* %24, %struct.rtx_def* %call64, %struct.rtx_def* %3)
  %cmp69 = icmp eq i32 %call68, 1
  br i1 %cmp69, label %if.end81, label %if.else72

if.else72:                                        ; preds = %lor.lhs.false67
  %25 = getelementptr inbounds %struct.rtx_def* %call64, i64 0, i32 0
  %bf.load73 = load i32* %25, align 8
  %bf.clear75 = and i32 %bf.load73, 16711680
  %cmp76 = icmp eq i32 %bf.clear75, 0
  %.153 = select i1 %cmp76, i32 1, i32 2
  br label %if.end81

if.end81:                                         ; preds = %if.else72, %if.end57, %lor.lhs.false67
  %tmp2_class.0 = phi i32 [ 3, %lor.lhs.false67 ], [ 3, %if.end57 ], [ %.153, %if.else72 ]
  %tobool83 = icmp eq i32 %tmp2_class.0, %tmp_class.0
  br i1 %tobool83, label %if.end86, label %if.then84

if.then84:                                        ; preds = %if.end81
  %sub82 = sub nsw i32 %tmp2_class.0, %tmp_class.0
  br label %return

if.end86:                                         ; preds = %if.end81, %if.end38
  %26 = load i32* %rtint15, align 4, !tbaa !1
  %idxprom90 = sext i32 %26 to i64
  %27 = load %struct.haifa_insn_data** @h_i_d, align 8, !tbaa !5
  %depend92 = getelementptr inbounds %struct.haifa_insn_data* %27, i64 %idxprom90, i32 0
  %link.0158 = load %struct.rtx_def** %depend92, align 8
  %tobool93159 = icmp eq %struct.rtx_def* %link.0158, null
  br i1 %tobool93159, label %for.end, label %for.body

for.body:                                         ; preds = %if.end86, %for.body
  %link.0161 = phi %struct.rtx_def* [ %link.0, %for.body ], [ %link.0158, %if.end86 ]
  %depend_count1.0160 = phi i32 [ %inc, %for.body ], [ 0, %if.end86 ]
  %inc = add nsw i32 %depend_count1.0160, 1
  %arrayidx95 = getelementptr inbounds %struct.rtx_def* %link.0161, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**
  %link.0 = load %struct.rtx_def** %rtx, align 8
  %tobool93 = icmp eq %struct.rtx_def* %link.0, null
  br i1 %tobool93, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end86
  %depend_count1.0.lcssa = phi i32 [ 0, %if.end86 ], [ %inc, %for.body ]
  %28 = load i32* %rtint, align 4, !tbaa !1
  %idxprom99 = sext i32 %28 to i64
  %depend101 = getelementptr inbounds %struct.haifa_insn_data* %27, i64 %idxprom99, i32 0
  %link.1154 = load %struct.rtx_def** %depend101, align 8
  %tobool103155 = icmp eq %struct.rtx_def* %link.1154, null
  br i1 %tobool103155, label %for.end110, label %for.body104

for.body104:                                      ; preds = %for.end, %for.body104
  %link.1157 = phi %struct.rtx_def* [ %link.1, %for.body104 ], [ %link.1154, %for.end ]
  %depend_count2.0156 = phi i32 [ %inc105, %for.body104 ], [ 0, %for.end ]
  %inc105 = add nsw i32 %depend_count2.0156, 1
  %arrayidx108 = getelementptr inbounds %struct.rtx_def* %link.1157, i64 0, i32 1, i64 1
  %rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**
  %link.1 = load %struct.rtx_def** %rtx109, align 8
  %tobool103 = icmp eq %struct.rtx_def* %link.1, null
  br i1 %tobool103, label %for.end110, label %for.body104

for.end110:                                       ; preds = %for.body104, %for.end
  %depend_count2.0.lcssa = phi i32 [ 0, %for.end ], [ %inc105, %for.body104 ]
  %tobool112 = icmp eq i32 %depend_count2.0.lcssa, %depend_count1.0.lcssa
  br i1 %tobool112, label %if.end114, label %if.then113

if.then113:                                       ; preds = %for.end110
  %sub111 = sub nsw i32 %depend_count2.0.lcssa, %depend_count1.0.lcssa
  br label %return

if.end114:                                        ; preds = %for.end110
  %luid = getelementptr inbounds %struct.haifa_insn_data* %27, i64 %idxprom90, i32 2
  %29 = load i32* %luid, align 4, !tbaa !56
  %luid125 = getelementptr inbounds %struct.haifa_insn_data* %27, i64 %idxprom99, i32 2
  %30 = load i32* %luid125, align 4, !tbaa !56
  %sub126 = sub nsw i32 %29, %30
  br label %return

return:                                           ; preds = %if.end35, %if.end114, %if.then113, %if.then84, %if.then34, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %sub82, %if.then84 ], [ %sub111, %if.then113 ], [ %sub126, %if.end114 ], [ %sub32, %if.then34 ], [ %call, %if.end35 ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @find_insn_list(%struct.rtx_def*, %struct.rtx_def*) #2

declare void @visualize_stall_cycles(i32) #2

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !9, i64 42}
!8 = metadata !{metadata !"haifa_insn_data", metadata !6, i64 0, metadata !6, i64 8, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !2, i64 28, metadata !2, i64 32, metadata !2, i64 36, metadata !9, i64 40, metadata !9, i64 42, metadata !9, i64 44, metadata !2, i64 46, metadata !2, i64 46, metadata !2, i64 46, metadata !2, i64 46}
!9 = metadata !{metadata !"short", metadata !3, i64 0}
!10 = metadata !{metadata !11, metadata !6, i64 56}
!11 = metadata !{metadata !"function_unit_desc", metadata !6, i64 0, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !2, i64 48, metadata !6, i64 56, metadata !6, i64 64}
!12 = metadata !{metadata !11, metadata !6, i64 64}
!13 = metadata !{metadata !11, metadata !2, i64 48}
!14 = metadata !{metadata !8, metadata !2, i64 28}
!15 = metadata !{metadata !8, metadata !9, i64 40}
!16 = metadata !{metadata !17, metadata !2, i64 12}
!17 = metadata !{metadata !"ready_list", metadata !6, i64 0, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16}
!18 = metadata !{metadata !17, metadata !2, i64 16}
!19 = metadata !{metadata !17, metadata !6, i64 0}
!20 = metadata !{metadata !17, metadata !2, i64 8}
!21 = metadata !{metadata !22, metadata !6, i64 0}
!22 = metadata !{metadata !"basic_block_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !2, i64 88, metadata !2, i64 92, metadata !23, i64 96, metadata !2, i64 104, metadata !2, i64 108}
!23 = metadata !{metadata !"long long", metadata !3, i64 0}
!24 = metadata !{metadata !22, metadata !6, i64 8}
!25 = metadata !{metadata !3, metadata !3, i64 0}
!26 = metadata !{metadata !8, metadata !6, i64 8}
!27 = metadata !{metadata !28, metadata !6, i64 64}
!28 = metadata !{metadata !"sched_info", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !6, i64 88, metadata !2, i64 96, metadata !2, i64 96}
!29 = metadata !{metadata !28, metadata !6, i64 72}
!30 = metadata !{metadata !28, metadata !6, i64 0}
!31 = metadata !{metadata !32, metadata !6, i64 200}
!32 = metadata !{metadata !"gcc_target", metadata !33, i64 0, metadata !35, i64 168, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !6, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !6, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !36, i64 328, metadata !36, i64 329, metadata !6, i64 336}
!33 = metadata !{metadata !"asm_out", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !34, i64 24, metadata !34, i64 56, metadata !6, i64 88, metadata !6, i64 96, metadata !6, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !6, i64 152, metadata !6, i64 160}
!34 = metadata !{metadata !"asm_int_op", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24}
!35 = metadata !{metadata !"sched", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64}
!36 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!37 = metadata !{metadata !28, metadata !6, i64 16}
!38 = metadata !{metadata !28, metadata !6, i64 40}
!39 = metadata !{metadata !32, metadata !6, i64 216}
!40 = metadata !{metadata !28, metadata !6, i64 8}
!41 = metadata !{metadata !23, metadata !23, i64 0}
!42 = metadata !{metadata !32, metadata !6, i64 192}
!43 = metadata !{metadata !8, metadata !6, i64 0}
!44 = metadata !{metadata !8, metadata !2, i64 36}
!45 = metadata !{metadata !8, metadata !2, i64 24}
!46 = metadata !{metadata !28, metadata !6, i64 24}
!47 = metadata !{metadata !32, metadata !6, i64 176}
!48 = metadata !{metadata !8, metadata !2, i64 20}
!49 = metadata !{metadata !32, metadata !6, i64 224}
!50 = metadata !{metadata !32, metadata !6, i64 208}
!51 = metadata !{metadata !28, metadata !6, i64 80}
!52 = metadata !{metadata !28, metadata !6, i64 88}
!53 = metadata !{metadata !11, metadata !2, i64 12}
!54 = metadata !{metadata !28, metadata !6, i64 48}
!55 = metadata !{metadata !32, metadata !6, i64 184}
!56 = metadata !{metadata !8, metadata !2, i64 16}
!57 = metadata !{metadata !58, metadata !2, i64 0}
!58 = metadata !{metadata !"rtvec_def", metadata !2, i64 0, metadata !3, i64 8}
!59 = metadata !{metadata !8, metadata !9, i64 44}
!60 = metadata !{metadata !28, metadata !6, i64 32}
