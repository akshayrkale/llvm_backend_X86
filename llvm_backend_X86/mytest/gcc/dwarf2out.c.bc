; ModuleID = 'dwarf2out.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.lang_decl = type opaque
%struct._IO_FILE = type opaque
%struct.cfa_loc = type { i64, i64, i64, i32 }
%struct.dw_fde_struct = type { i8*, i8*, i8*, %struct.dw_cfi_struct*, i32, i8 }
%struct.dw_cfi_struct = type { %struct.dw_cfi_struct*, i32, %union.dw_cfi_oprnd_struct, %union.dw_cfi_oprnd_struct }
%union.dw_cfi_oprnd_struct = type { i64 }
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i1 (%union.tree_node*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void ()*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)* }
%struct.die_struct = type { i32, i8*, %struct.dw_attr_struct*, %struct.die_struct*, %struct.die_struct*, %struct.die_struct*, i64, i64, i32 }
%struct.dw_attr_struct = type { i32, %struct.dw_attr_struct*, %struct.dw_val_struct }
%struct.dw_val_struct = type { i32, %union.anon.3 }
%union.anon.3 = type { %struct.dw_long_long_struct }
%struct.dw_long_long_struct = type { i64, i64 }
%struct.ht = type { %struct.obstack, %struct.ht_identifier**, %struct.ht_identifier* (%struct.ht*)*, i32, i32, %struct.cpp_reader*, i32, i32 }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ht_identifier = type { i32, i8* }
%struct.cpp_reader = type opaque
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.limbo_die_struct = type { %struct.die_struct*, %union.tree_node*, %struct.limbo_die_struct* }
%struct.diagnostic_context = type { %struct.output_buffer, i8*, [1 x %struct.__va_list_tag]*, i8*, i32, i32, void (%struct.output_buffer*, %struct.diagnostic_context*)*, void (%struct.output_buffer*, %struct.diagnostic_context*)*, i8* }
%struct.output_buffer = type { %struct.output_state, %struct._IO_FILE*, %struct.obstack, i32, [128 x i8], i32 (%struct.output_buffer*)* }
%struct.output_state = type { i8*, i32, i32, i32, i8, i8, i32, i8*, [1 x %struct.__va_list_tag]*, [7 x i32] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.dw_ranges_struct = type { i32 }
%struct.pubname_struct = type { %struct.die_struct*, i8* }
%struct.lang_hooks = type { i8*, i64, void ()*, i32 (i32, i8**)*, void ()*, i8* (i8*)*, void ()*, void ()*, i64 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (%struct.rtx_def*, %union.tree_node*)*, i32 (%union.tree_node*)*, i8, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (i32)*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_tree_dump }
%struct.lang_hooks_for_tree_inlining = type { %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, i8*)*, i32 (%union.tree_node**)*, i32 (%union.tree_node*)*, %union.tree_node* (i8*, %union.tree_node*)*, i32 (%union.tree_node*)*, i32 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*, i8*, i32*, i8*)*, i32 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_tree_dump = type { i32 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.dw_line_info_struct = type { i64, i64 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.queued_reg_save = type { %struct.queued_reg_save*, %struct.rtx_def*, i64 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.dw_loc_descr_struct = type { %struct.dw_loc_descr_struct*, i32, %struct.dw_val_struct, %struct.dw_val_struct, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.indirect_string_node = type { %struct.ht_identifier, i32, i32, i8* }
%struct.dw_loc_list_struct = type { %struct.dw_loc_list_struct*, i8*, i8*, i8*, i8*, %struct.dw_loc_descr_struct* }
%struct.md5_ctx = type { i32, i32, i32, i32, [2 x i32], i32, [128 x i8] }
%struct.realvaluetype = type { [3 x i64] }

@write_symbols = external global i32
@flag_unwind_tables = external global i32
@flag_exceptions = external global i32
@current_funcdef_number = global i32 0, align 4
@.str = private unnamed_addr constant [10 x i8] c".eh_frame\00", align 1
@target_flags = external global i32
@dbx64_register_map = external constant [53 x i32]
@svr4_dbx_register_map = external constant [53 x i32]
@integer_types = external global [11 x %union.tree_node*]
@mode_size = external constant [59 x i8]
@reg_raw_mode = external global [53 x i32]
@dwarf2out_cfi_label.label = internal global [20 x i8] zeroinitializer, align 16
@dwarf2out_cfi_label.label_num = internal unnamed_addr global i64 0, align 8
@.str1 = private unnamed_addr constant [7 x i8] c"*.%s%u\00", align 1
@.str2 = private unnamed_addr constant [5 x i8] c"LCFI\00", align 1
@asm_out_file = external global %struct._IO_FILE*
@.str3 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@old_args_size = internal unnamed_addr global i64 0, align 8
@cfa = internal global %struct.cfa_loc zeroinitializer, align 8
@.str4 = private unnamed_addr constant [12 x i8] c"dwarf2out.c\00", align 1
@__FUNCTION__.dwarf2out_frame_debug = private unnamed_addr constant [22 x i8] c"dwarf2out_frame_debug\00", align 1
@cfa_store = internal unnamed_addr global %struct.cfa_loc zeroinitializer, align 8
@cfa_temp.0 = internal unnamed_addr global i64 0
@cfa_temp.1 = internal unnamed_addr global i64 0
@current_function_func_begin_label = external global %union.tree_node*
@current_function_decl = external global %union.tree_node*
@.str5 = private unnamed_addr constant [4 x i8] c"LFB\00", align 1
@.str6 = private unnamed_addr constant [8 x i8] c".%s%u:\0A\00", align 1
@fde_table_in_use = internal unnamed_addr global i32 0, align 4
@fde_table_allocated = internal unnamed_addr global i32 0, align 4
@fde_table = internal unnamed_addr global %struct.dw_fde_struct* null, align 8
@current_function_nothrow = external global i32
@cfun = external global %struct.function*
@args_size = internal unnamed_addr global i64 0, align 8
@.str7 = private unnamed_addr constant [4 x i8] c"LFE\00", align 1
@dwarf2_debug_hooks = global %struct.gcc_debug_hooks { void (i8*)* @dwarf2out_init, void (i8*)* @dwarf2out_finish, void (i32, i8*)* @dwarf2out_define, void (i32, i8*)* @dwarf2out_undef, void (i32, i8*)* @dwarf2out_start_source_file, void (i32)* @dwarf2out_end_source_file, void (i32, i32)* @dwarf2out_begin_block, void (i32, i32)* @dwarf2out_end_block, i1 (%union.tree_node*)* @dwarf2out_ignore_block, void (i32, i8*)* @dwarf2out_source_line, void (i32, i8*)* @dwarf2out_begin_prologue, void (i32)* @debug_nothing_int, void ()* @dwarf2out_end_epilogue, void (%union.tree_node*)* @debug_nothing_tree, void (i32)* @debug_nothing_int, void (%union.tree_node*)* @dwarf2out_decl, void (%union.tree_node*)* @dwarf2out_global_decl, void (%union.tree_node*)* @debug_nothing_tree, void (%union.tree_node*)* @dwarf2out_abstract_function, void (%struct.rtx_def*)* @debug_nothing_rtx }, align 8
@demangle_name_func = internal unnamed_addr global i8* (i8*)* null, align 8
@stderr = external constant %struct._IO_FILE*
@print_indent = internal unnamed_addr global i32 0, align 4
@comp_unit_die = internal unnamed_addr global %struct.die_struct* null, align 8
@global_trees = external global [51 x %union.tree_node*]
@debug_info_level = external global i32
@debug_str_hash = common global %struct.ht* null, align 8
@decl_scope_table = common global %struct.varray_head_tag* null, align 8
@incomplete_types = common global %struct.varray_head_tag* null, align 8
@limbo_die_list = internal global %struct.limbo_die_struct* null, align 8
@global_dc = external global %struct.diagnostic_context*
@tree_code_type = external global [256 x i8]
@__FUNCTION__.dwarf2out_finish = private unnamed_addr constant [17 x i8] c"dwarf2out_finish\00", align 1
@flag_eliminate_dwarf2_dups = external global i32
@.str8 = private unnamed_addr constant [7 x i8] c"Letext\00", align 1
@loc_section_label = internal global [30 x i8] zeroinitializer, align 16
@separate_line_info_table_in_use = internal unnamed_addr global i32 0, align 4
@text_section_label = internal global [30 x i8] zeroinitializer, align 16
@text_end_label = internal global [30 x i8] zeroinitializer, align 16
@ranges_table_in_use = internal unnamed_addr global i32 0, align 4
@const_int_rtx = external global [129 x %struct.rtx_def*]
@debug_line_section_label = internal global [30 x i8] zeroinitializer, align 16
@macinfo_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str11 = private unnamed_addr constant [14 x i8] c".debug_abbrev\00", align 1
@pubname_table_in_use = internal unnamed_addr global i32 0, align 4
@.str12 = private unnamed_addr constant [16 x i8] c".debug_pubnames\00", align 1
@.str13 = private unnamed_addr constant [15 x i8] c".debug_aranges\00", align 1
@.str14 = private unnamed_addr constant [14 x i8] c".debug_ranges\00", align 1
@ranges_section_label = internal global [60 x i8] zeroinitializer, align 16
@.str15 = private unnamed_addr constant [15 x i8] c".debug_macinfo\00", align 1
@.str16 = private unnamed_addr constant [9 x i8] c"End file\00", align 1
@.str17 = private unnamed_addr constant [11 x i8] c".debug_str\00", align 1
@.str18 = private unnamed_addr constant [12 x i8] c"Offset 0x%x\00", align 1
@ranges_table = internal unnamed_addr global %struct.dw_ranges_struct* null, align 8
@.str19 = private unnamed_addr constant [4 x i8] c"LBB\00", align 1
@.str20 = private unnamed_addr constant [4 x i8] c"LBE\00", align 1
@.str21 = private unnamed_addr constant [30 x i8] c"Length of Address Ranges Info\00", align 1
@.str22 = private unnamed_addr constant [14 x i8] c"DWARF Version\00", align 1
@debug_info_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str23 = private unnamed_addr constant [32 x i8] c"Offset of Compilation Unit Info\00", align 1
@.str24 = private unnamed_addr constant [16 x i8] c"Size of Address\00", align 1
@.str25 = private unnamed_addr constant [27 x i8] c"Size of Segment Descriptor\00", align 1
@.str26 = private unnamed_addr constant [24 x i8] c"Pad to %d byte boundary\00", align 1
@.str27 = private unnamed_addr constant [8 x i8] c"Address\00", align 1
@.str28 = private unnamed_addr constant [7 x i8] c"Length\00", align 1
@arange_table_in_use = internal unnamed_addr global i32 0, align 4
@arange_table = internal unnamed_addr global %struct.die_struct** null, align 8
@__FUNCTION__.output_aranges = private unnamed_addr constant [15 x i8] c"output_aranges\00", align 1
@__FUNCTION__.AT_loc = private unnamed_addr constant [7 x i8] c"AT_loc\00", align 1
@__FUNCTION__.AT_ref = private unnamed_addr constant [7 x i8] c"AT_ref\00", align 1
@__FUNCTION__.AT_lbl = private unnamed_addr constant [7 x i8] c"AT_lbl\00", align 1
@.str29 = private unnamed_addr constant [28 x i8] c"Length of Public Names Info\00", align 1
@next_die_offset = internal unnamed_addr global i64 0, align 8
@.str30 = private unnamed_addr constant [24 x i8] c"Compilation Unit Length\00", align 1
@pubname_table = internal unnamed_addr global %struct.pubname_struct* null, align 8
@__FUNCTION__.output_pubnames = private unnamed_addr constant [16 x i8] c"output_pubnames\00", align 1
@.str31 = private unnamed_addr constant [11 x i8] c"DIE offset\00", align 1
@.str32 = private unnamed_addr constant [14 x i8] c"external name\00", align 1
@abbrev_die_table_in_use = internal unnamed_addr global i32 0, align 4
@abbrev_die_table = internal unnamed_addr global %struct.die_struct** null, align 8
@.str33 = private unnamed_addr constant [14 x i8] c"(abbrev code)\00", align 1
@.str34 = private unnamed_addr constant [10 x i8] c"(TAG: %s)\00", align 1
@.str35 = private unnamed_addr constant [16 x i8] c"DW_children_yes\00", align 1
@.str36 = private unnamed_addr constant [15 x i8] c"DW_children_no\00", align 1
@.str37 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@.str38 = private unnamed_addr constant [13 x i8] c"DW_FORM_addr\00", align 1
@.str39 = private unnamed_addr constant [15 x i8] c"DW_FORM_block2\00", align 1
@.str40 = private unnamed_addr constant [15 x i8] c"DW_FORM_block4\00", align 1
@.str41 = private unnamed_addr constant [14 x i8] c"DW_FORM_data2\00", align 1
@.str42 = private unnamed_addr constant [14 x i8] c"DW_FORM_data4\00", align 1
@.str43 = private unnamed_addr constant [14 x i8] c"DW_FORM_data8\00", align 1
@.str44 = private unnamed_addr constant [15 x i8] c"DW_FORM_string\00", align 1
@.str45 = private unnamed_addr constant [14 x i8] c"DW_FORM_block\00", align 1
@.str46 = private unnamed_addr constant [15 x i8] c"DW_FORM_block1\00", align 1
@.str47 = private unnamed_addr constant [14 x i8] c"DW_FORM_data1\00", align 1
@.str48 = private unnamed_addr constant [13 x i8] c"DW_FORM_flag\00", align 1
@.str49 = private unnamed_addr constant [14 x i8] c"DW_FORM_sdata\00", align 1
@.str50 = private unnamed_addr constant [13 x i8] c"DW_FORM_strp\00", align 1
@.str51 = private unnamed_addr constant [14 x i8] c"DW_FORM_udata\00", align 1
@.str52 = private unnamed_addr constant [17 x i8] c"DW_FORM_ref_addr\00", align 1
@.str53 = private unnamed_addr constant [13 x i8] c"DW_FORM_ref1\00", align 1
@.str54 = private unnamed_addr constant [13 x i8] c"DW_FORM_ref2\00", align 1
@.str55 = private unnamed_addr constant [13 x i8] c"DW_FORM_ref4\00", align 1
@.str56 = private unnamed_addr constant [13 x i8] c"DW_FORM_ref8\00", align 1
@.str57 = private unnamed_addr constant [18 x i8] c"DW_FORM_ref_udata\00", align 1
@.str58 = private unnamed_addr constant [17 x i8] c"DW_FORM_indirect\00", align 1
@.str59 = private unnamed_addr constant [18 x i8] c"DW_FORM_<unknown>\00", align 1
@__FUNCTION__.value_format = private unnamed_addr constant [13 x i8] c"value_format\00", align 1
@.str60 = private unnamed_addr constant [3 x i8] c"LC\00", align 1
@const_labelno = external global i32
@__FUNCTION__.AT_unsigned = private unnamed_addr constant [12 x i8] c"AT_unsigned\00", align 1
@.str61 = private unnamed_addr constant [14 x i8] c"DW_AT_sibling\00", align 1
@.str62 = private unnamed_addr constant [15 x i8] c"DW_AT_location\00", align 1
@.str63 = private unnamed_addr constant [11 x i8] c"DW_AT_name\00", align 1
@.str64 = private unnamed_addr constant [15 x i8] c"DW_AT_ordering\00", align 1
@.str65 = private unnamed_addr constant [18 x i8] c"DW_AT_subscr_data\00", align 1
@.str66 = private unnamed_addr constant [16 x i8] c"DW_AT_byte_size\00", align 1
@.str67 = private unnamed_addr constant [17 x i8] c"DW_AT_bit_offset\00", align 1
@.str68 = private unnamed_addr constant [15 x i8] c"DW_AT_bit_size\00", align 1
@.str69 = private unnamed_addr constant [19 x i8] c"DW_AT_element_list\00", align 1
@.str70 = private unnamed_addr constant [16 x i8] c"DW_AT_stmt_list\00", align 1
@.str71 = private unnamed_addr constant [13 x i8] c"DW_AT_low_pc\00", align 1
@.str72 = private unnamed_addr constant [14 x i8] c"DW_AT_high_pc\00", align 1
@.str73 = private unnamed_addr constant [15 x i8] c"DW_AT_language\00", align 1
@.str74 = private unnamed_addr constant [13 x i8] c"DW_AT_member\00", align 1
@.str75 = private unnamed_addr constant [12 x i8] c"DW_AT_discr\00", align 1
@.str76 = private unnamed_addr constant [18 x i8] c"DW_AT_discr_value\00", align 1
@.str77 = private unnamed_addr constant [17 x i8] c"DW_AT_visibility\00", align 1
@.str78 = private unnamed_addr constant [13 x i8] c"DW_AT_import\00", align 1
@.str79 = private unnamed_addr constant [20 x i8] c"DW_AT_string_length\00", align 1
@.str80 = private unnamed_addr constant [23 x i8] c"DW_AT_common_reference\00", align 1
@.str81 = private unnamed_addr constant [15 x i8] c"DW_AT_comp_dir\00", align 1
@.str82 = private unnamed_addr constant [18 x i8] c"DW_AT_const_value\00", align 1
@.str83 = private unnamed_addr constant [22 x i8] c"DW_AT_containing_type\00", align 1
@.str84 = private unnamed_addr constant [20 x i8] c"DW_AT_default_value\00", align 1
@.str85 = private unnamed_addr constant [13 x i8] c"DW_AT_inline\00", align 1
@.str86 = private unnamed_addr constant [18 x i8] c"DW_AT_is_optional\00", align 1
@.str87 = private unnamed_addr constant [18 x i8] c"DW_AT_lower_bound\00", align 1
@.str88 = private unnamed_addr constant [15 x i8] c"DW_AT_producer\00", align 1
@.str89 = private unnamed_addr constant [17 x i8] c"DW_AT_prototyped\00", align 1
@.str90 = private unnamed_addr constant [18 x i8] c"DW_AT_return_addr\00", align 1
@.str91 = private unnamed_addr constant [18 x i8] c"DW_AT_start_scope\00", align 1
@.str92 = private unnamed_addr constant [18 x i8] c"DW_AT_stride_size\00", align 1
@.str93 = private unnamed_addr constant [18 x i8] c"DW_AT_upper_bound\00", align 1
@.str94 = private unnamed_addr constant [22 x i8] c"DW_AT_abstract_origin\00", align 1
@.str95 = private unnamed_addr constant [20 x i8] c"DW_AT_accessibility\00", align 1
@.str96 = private unnamed_addr constant [20 x i8] c"DW_AT_address_class\00", align 1
@.str97 = private unnamed_addr constant [17 x i8] c"DW_AT_artificial\00", align 1
@.str98 = private unnamed_addr constant [17 x i8] c"DW_AT_base_types\00", align 1
@.str99 = private unnamed_addr constant [25 x i8] c"DW_AT_calling_convention\00", align 1
@.str100 = private unnamed_addr constant [12 x i8] c"DW_AT_count\00", align 1
@.str101 = private unnamed_addr constant [27 x i8] c"DW_AT_data_member_location\00", align 1
@.str102 = private unnamed_addr constant [18 x i8] c"DW_AT_decl_column\00", align 1
@.str103 = private unnamed_addr constant [16 x i8] c"DW_AT_decl_file\00", align 1
@.str104 = private unnamed_addr constant [16 x i8] c"DW_AT_decl_line\00", align 1
@.str105 = private unnamed_addr constant [18 x i8] c"DW_AT_declaration\00", align 1
@.str106 = private unnamed_addr constant [17 x i8] c"DW_AT_discr_list\00", align 1
@.str107 = private unnamed_addr constant [15 x i8] c"DW_AT_encoding\00", align 1
@.str108 = private unnamed_addr constant [15 x i8] c"DW_AT_external\00", align 1
@.str109 = private unnamed_addr constant [17 x i8] c"DW_AT_frame_base\00", align 1
@.str110 = private unnamed_addr constant [13 x i8] c"DW_AT_friend\00", align 1
@.str111 = private unnamed_addr constant [22 x i8] c"DW_AT_identifier_case\00", align 1
@.str112 = private unnamed_addr constant [17 x i8] c"DW_AT_macro_info\00", align 1
@.str113 = private unnamed_addr constant [21 x i8] c"DW_AT_namelist_items\00", align 1
@.str114 = private unnamed_addr constant [15 x i8] c"DW_AT_priority\00", align 1
@.str115 = private unnamed_addr constant [14 x i8] c"DW_AT_segment\00", align 1
@.str116 = private unnamed_addr constant [20 x i8] c"DW_AT_specification\00", align 1
@.str117 = private unnamed_addr constant [18 x i8] c"DW_AT_static_link\00", align 1
@.str118 = private unnamed_addr constant [11 x i8] c"DW_AT_type\00", align 1
@.str119 = private unnamed_addr constant [19 x i8] c"DW_AT_use_location\00", align 1
@.str120 = private unnamed_addr constant [25 x i8] c"DW_AT_variable_parameter\00", align 1
@.str121 = private unnamed_addr constant [17 x i8] c"DW_AT_virtuality\00", align 1
@.str122 = private unnamed_addr constant [27 x i8] c"DW_AT_vtable_elem_location\00", align 1
@.str123 = private unnamed_addr constant [16 x i8] c"DW_AT_allocated\00", align 1
@.str124 = private unnamed_addr constant [17 x i8] c"DW_AT_associated\00", align 1
@.str125 = private unnamed_addr constant [20 x i8] c"DW_AT_data_location\00", align 1
@.str126 = private unnamed_addr constant [13 x i8] c"DW_AT_stride\00", align 1
@.str127 = private unnamed_addr constant [15 x i8] c"DW_AT_entry_pc\00", align 1
@.str128 = private unnamed_addr constant [15 x i8] c"DW_AT_use_UTF8\00", align 1
@.str129 = private unnamed_addr constant [16 x i8] c"DW_AT_extension\00", align 1
@.str130 = private unnamed_addr constant [13 x i8] c"DW_AT_ranges\00", align 1
@.str131 = private unnamed_addr constant [17 x i8] c"DW_AT_trampoline\00", align 1
@.str132 = private unnamed_addr constant [18 x i8] c"DW_AT_call_column\00", align 1
@.str133 = private unnamed_addr constant [16 x i8] c"DW_AT_call_file\00", align 1
@.str134 = private unnamed_addr constant [16 x i8] c"DW_AT_call_line\00", align 1
@.str135 = private unnamed_addr constant [15 x i8] c"DW_AT_MIPS_fde\00", align 1
@.str136 = private unnamed_addr constant [22 x i8] c"DW_AT_MIPS_loop_begin\00", align 1
@.str137 = private unnamed_addr constant [27 x i8] c"DW_AT_MIPS_tail_loop_begin\00", align 1
@.str138 = private unnamed_addr constant [24 x i8] c"DW_AT_MIPS_epilog_begin\00", align 1
@.str139 = private unnamed_addr constant [30 x i8] c"DW_AT_MIPS_loop_unroll_factor\00", align 1
@.str140 = private unnamed_addr constant [35 x i8] c"DW_AT_MIPS_software_pipeline_depth\00", align 1
@.str141 = private unnamed_addr constant [24 x i8] c"DW_AT_MIPS_linkage_name\00", align 1
@.str142 = private unnamed_addr constant [18 x i8] c"DW_AT_MIPS_stride\00", align 1
@.str143 = private unnamed_addr constant [25 x i8] c"DW_AT_MIPS_abstract_name\00", align 1
@.str144 = private unnamed_addr constant [24 x i8] c"DW_AT_MIPS_clone_origin\00", align 1
@.str145 = private unnamed_addr constant [23 x i8] c"DW_AT_MIPS_has_inlines\00", align 1
@.str146 = private unnamed_addr constant [15 x i8] c"DW_AT_sf_names\00", align 1
@.str147 = private unnamed_addr constant [15 x i8] c"DW_AT_src_info\00", align 1
@.str148 = private unnamed_addr constant [15 x i8] c"DW_AT_mac_info\00", align 1
@.str149 = private unnamed_addr constant [17 x i8] c"DW_AT_src_coords\00", align 1
@.str150 = private unnamed_addr constant [17 x i8] c"DW_AT_body_begin\00", align 1
@.str151 = private unnamed_addr constant [15 x i8] c"DW_AT_body_end\00", align 1
@.str152 = private unnamed_addr constant [17 x i8] c"DW_AT_GNU_vector\00", align 1
@.str153 = private unnamed_addr constant [28 x i8] c"DW_AT_VMS_rtnbeg_pd_address\00", align 1
@.str154 = private unnamed_addr constant [16 x i8] c"DW_AT_<unknown>\00", align 1
@.str155 = private unnamed_addr constant [15 x i8] c"DW_TAG_padding\00", align 1
@.str156 = private unnamed_addr constant [18 x i8] c"DW_TAG_array_type\00", align 1
@.str157 = private unnamed_addr constant [18 x i8] c"DW_TAG_class_type\00", align 1
@.str158 = private unnamed_addr constant [19 x i8] c"DW_TAG_entry_point\00", align 1
@.str159 = private unnamed_addr constant [24 x i8] c"DW_TAG_enumeration_type\00", align 1
@.str160 = private unnamed_addr constant [24 x i8] c"DW_TAG_formal_parameter\00", align 1
@.str161 = private unnamed_addr constant [28 x i8] c"DW_TAG_imported_declaration\00", align 1
@.str162 = private unnamed_addr constant [13 x i8] c"DW_TAG_label\00", align 1
@.str163 = private unnamed_addr constant [21 x i8] c"DW_TAG_lexical_block\00", align 1
@.str164 = private unnamed_addr constant [14 x i8] c"DW_TAG_member\00", align 1
@.str165 = private unnamed_addr constant [20 x i8] c"DW_TAG_pointer_type\00", align 1
@.str166 = private unnamed_addr constant [22 x i8] c"DW_TAG_reference_type\00", align 1
@.str167 = private unnamed_addr constant [20 x i8] c"DW_TAG_compile_unit\00", align 1
@.str168 = private unnamed_addr constant [19 x i8] c"DW_TAG_string_type\00", align 1
@.str169 = private unnamed_addr constant [22 x i8] c"DW_TAG_structure_type\00", align 1
@.str170 = private unnamed_addr constant [23 x i8] c"DW_TAG_subroutine_type\00", align 1
@.str171 = private unnamed_addr constant [15 x i8] c"DW_TAG_typedef\00", align 1
@.str172 = private unnamed_addr constant [18 x i8] c"DW_TAG_union_type\00", align 1
@.str173 = private unnamed_addr constant [30 x i8] c"DW_TAG_unspecified_parameters\00", align 1
@.str174 = private unnamed_addr constant [15 x i8] c"DW_TAG_variant\00", align 1
@.str175 = private unnamed_addr constant [20 x i8] c"DW_TAG_common_block\00", align 1
@.str176 = private unnamed_addr constant [24 x i8] c"DW_TAG_common_inclusion\00", align 1
@.str177 = private unnamed_addr constant [19 x i8] c"DW_TAG_inheritance\00", align 1
@.str178 = private unnamed_addr constant [26 x i8] c"DW_TAG_inlined_subroutine\00", align 1
@.str179 = private unnamed_addr constant [14 x i8] c"DW_TAG_module\00", align 1
@.str180 = private unnamed_addr constant [26 x i8] c"DW_TAG_ptr_to_member_type\00", align 1
@.str181 = private unnamed_addr constant [16 x i8] c"DW_TAG_set_type\00", align 1
@.str182 = private unnamed_addr constant [21 x i8] c"DW_TAG_subrange_type\00", align 1
@.str183 = private unnamed_addr constant [17 x i8] c"DW_TAG_with_stmt\00", align 1
@.str184 = private unnamed_addr constant [26 x i8] c"DW_TAG_access_declaration\00", align 1
@.str185 = private unnamed_addr constant [17 x i8] c"DW_TAG_base_type\00", align 1
@.str186 = private unnamed_addr constant [19 x i8] c"DW_TAG_catch_block\00", align 1
@.str187 = private unnamed_addr constant [18 x i8] c"DW_TAG_const_type\00", align 1
@.str188 = private unnamed_addr constant [16 x i8] c"DW_TAG_constant\00", align 1
@.str189 = private unnamed_addr constant [18 x i8] c"DW_TAG_enumerator\00", align 1
@.str190 = private unnamed_addr constant [17 x i8] c"DW_TAG_file_type\00", align 1
@.str191 = private unnamed_addr constant [14 x i8] c"DW_TAG_friend\00", align 1
@.str192 = private unnamed_addr constant [16 x i8] c"DW_TAG_namelist\00", align 1
@.str193 = private unnamed_addr constant [21 x i8] c"DW_TAG_namelist_item\00", align 1
@.str194 = private unnamed_addr constant [19 x i8] c"DW_TAG_packed_type\00", align 1
@.str195 = private unnamed_addr constant [18 x i8] c"DW_TAG_subprogram\00", align 1
@.str196 = private unnamed_addr constant [27 x i8] c"DW_TAG_template_type_param\00", align 1
@.str197 = private unnamed_addr constant [28 x i8] c"DW_TAG_template_value_param\00", align 1
@.str198 = private unnamed_addr constant [19 x i8] c"DW_TAG_thrown_type\00", align 1
@.str199 = private unnamed_addr constant [17 x i8] c"DW_TAG_try_block\00", align 1
@.str200 = private unnamed_addr constant [20 x i8] c"DW_TAG_variant_part\00", align 1
@.str201 = private unnamed_addr constant [16 x i8] c"DW_TAG_variable\00", align 1
@.str202 = private unnamed_addr constant [21 x i8] c"DW_TAG_volatile_type\00", align 1
@.str203 = private unnamed_addr constant [17 x i8] c"DW_TAG_MIPS_loop\00", align 1
@.str204 = private unnamed_addr constant [20 x i8] c"DW_TAG_format_label\00", align 1
@.str205 = private unnamed_addr constant [25 x i8] c"DW_TAG_function_template\00", align 1
@.str206 = private unnamed_addr constant [22 x i8] c"DW_TAG_class_template\00", align 1
@.str207 = private unnamed_addr constant [17 x i8] c"DW_TAG_GNU_BINCL\00", align 1
@.str208 = private unnamed_addr constant [17 x i8] c"DW_TAG_GNU_EINCL\00", align 1
@.str209 = private unnamed_addr constant [17 x i8] c"DW_TAG_<unknown>\00", align 1
@.str210 = private unnamed_addr constant [20 x i8] c".gnu.linkonce.wi.%s\00", align 1
@.str211 = private unnamed_addr constant [12 x i8] c".debug_info\00", align 1
@.str212 = private unnamed_addr constant [17 x i8] c"(DIE (0x%lx) %s)\00", align 1
@.str213 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str214 = private unnamed_addr constant [7 x i8] c"+0x%lx\00", align 1
@.str215 = private unnamed_addr constant [19 x i8] c"long long constant\00", align 1
@.str216 = private unnamed_addr constant [20 x i8] c"fp constant word %u\00", align 1
@__FUNCTION__.output_die = private unnamed_addr constant [11 x i8] c"output_die\00", align 1
@.str217 = private unnamed_addr constant [6 x i8] c"LSFDE\00", align 1
@.str218 = private unnamed_addr constant [9 x i8] c"%s: \22%s\22\00", align 1
@.str219 = private unnamed_addr constant [29 x i8] c"end of children of DIE 0x%lx\00", align 1
@__FUNCTION__.AT_string = private unnamed_addr constant [10 x i8] c"AT_string\00", align 1
@__FUNCTION__.AT_flag = private unnamed_addr constant [8 x i8] c"AT_flag\00", align 1
@__FUNCTION__.output_loc_operands = private unnamed_addr constant [20 x i8] c"output_loc_operands\00", align 1
@.str220 = private unnamed_addr constant [11 x i8] c"DW_OP_addr\00", align 1
@.str221 = private unnamed_addr constant [12 x i8] c"DW_OP_deref\00", align 1
@.str222 = private unnamed_addr constant [14 x i8] c"DW_OP_const1u\00", align 1
@.str223 = private unnamed_addr constant [14 x i8] c"DW_OP_const1s\00", align 1
@.str224 = private unnamed_addr constant [14 x i8] c"DW_OP_const2u\00", align 1
@.str225 = private unnamed_addr constant [14 x i8] c"DW_OP_const2s\00", align 1
@.str226 = private unnamed_addr constant [14 x i8] c"DW_OP_const4u\00", align 1
@.str227 = private unnamed_addr constant [14 x i8] c"DW_OP_const4s\00", align 1
@.str228 = private unnamed_addr constant [14 x i8] c"DW_OP_const8u\00", align 1
@.str229 = private unnamed_addr constant [14 x i8] c"DW_OP_const8s\00", align 1
@.str230 = private unnamed_addr constant [13 x i8] c"DW_OP_constu\00", align 1
@.str231 = private unnamed_addr constant [13 x i8] c"DW_OP_consts\00", align 1
@.str232 = private unnamed_addr constant [10 x i8] c"DW_OP_dup\00", align 1
@.str233 = private unnamed_addr constant [11 x i8] c"DW_OP_drop\00", align 1
@.str234 = private unnamed_addr constant [11 x i8] c"DW_OP_over\00", align 1
@.str235 = private unnamed_addr constant [11 x i8] c"DW_OP_pick\00", align 1
@.str236 = private unnamed_addr constant [11 x i8] c"DW_OP_swap\00", align 1
@.str237 = private unnamed_addr constant [10 x i8] c"DW_OP_rot\00", align 1
@.str238 = private unnamed_addr constant [13 x i8] c"DW_OP_xderef\00", align 1
@.str239 = private unnamed_addr constant [10 x i8] c"DW_OP_abs\00", align 1
@.str240 = private unnamed_addr constant [10 x i8] c"DW_OP_and\00", align 1
@.str241 = private unnamed_addr constant [10 x i8] c"DW_OP_div\00", align 1
@.str242 = private unnamed_addr constant [12 x i8] c"DW_OP_minus\00", align 1
@.str243 = private unnamed_addr constant [10 x i8] c"DW_OP_mod\00", align 1
@.str244 = private unnamed_addr constant [10 x i8] c"DW_OP_mul\00", align 1
@.str245 = private unnamed_addr constant [10 x i8] c"DW_OP_neg\00", align 1
@.str246 = private unnamed_addr constant [10 x i8] c"DW_OP_not\00", align 1
@.str247 = private unnamed_addr constant [9 x i8] c"DW_OP_or\00", align 1
@.str248 = private unnamed_addr constant [11 x i8] c"DW_OP_plus\00", align 1
@.str249 = private unnamed_addr constant [18 x i8] c"DW_OP_plus_uconst\00", align 1
@.str250 = private unnamed_addr constant [10 x i8] c"DW_OP_shl\00", align 1
@.str251 = private unnamed_addr constant [10 x i8] c"DW_OP_shr\00", align 1
@.str252 = private unnamed_addr constant [11 x i8] c"DW_OP_shra\00", align 1
@.str253 = private unnamed_addr constant [10 x i8] c"DW_OP_xor\00", align 1
@.str254 = private unnamed_addr constant [10 x i8] c"DW_OP_bra\00", align 1
@.str255 = private unnamed_addr constant [9 x i8] c"DW_OP_eq\00", align 1
@.str256 = private unnamed_addr constant [9 x i8] c"DW_OP_ge\00", align 1
@.str257 = private unnamed_addr constant [9 x i8] c"DW_OP_gt\00", align 1
@.str258 = private unnamed_addr constant [9 x i8] c"DW_OP_le\00", align 1
@.str259 = private unnamed_addr constant [9 x i8] c"DW_OP_lt\00", align 1
@.str260 = private unnamed_addr constant [9 x i8] c"DW_OP_ne\00", align 1
@.str261 = private unnamed_addr constant [11 x i8] c"DW_OP_skip\00", align 1
@.str262 = private unnamed_addr constant [11 x i8] c"DW_OP_lit0\00", align 1
@.str263 = private unnamed_addr constant [11 x i8] c"DW_OP_lit1\00", align 1
@.str264 = private unnamed_addr constant [11 x i8] c"DW_OP_lit2\00", align 1
@.str265 = private unnamed_addr constant [11 x i8] c"DW_OP_lit3\00", align 1
@.str266 = private unnamed_addr constant [11 x i8] c"DW_OP_lit4\00", align 1
@.str267 = private unnamed_addr constant [11 x i8] c"DW_OP_lit5\00", align 1
@.str268 = private unnamed_addr constant [11 x i8] c"DW_OP_lit6\00", align 1
@.str269 = private unnamed_addr constant [11 x i8] c"DW_OP_lit7\00", align 1
@.str270 = private unnamed_addr constant [11 x i8] c"DW_OP_lit8\00", align 1
@.str271 = private unnamed_addr constant [11 x i8] c"DW_OP_lit9\00", align 1
@.str272 = private unnamed_addr constant [12 x i8] c"DW_OP_lit10\00", align 1
@.str273 = private unnamed_addr constant [12 x i8] c"DW_OP_lit11\00", align 1
@.str274 = private unnamed_addr constant [12 x i8] c"DW_OP_lit12\00", align 1
@.str275 = private unnamed_addr constant [12 x i8] c"DW_OP_lit13\00", align 1
@.str276 = private unnamed_addr constant [12 x i8] c"DW_OP_lit14\00", align 1
@.str277 = private unnamed_addr constant [12 x i8] c"DW_OP_lit15\00", align 1
@.str278 = private unnamed_addr constant [12 x i8] c"DW_OP_lit16\00", align 1
@.str279 = private unnamed_addr constant [12 x i8] c"DW_OP_lit17\00", align 1
@.str280 = private unnamed_addr constant [12 x i8] c"DW_OP_lit18\00", align 1
@.str281 = private unnamed_addr constant [12 x i8] c"DW_OP_lit19\00", align 1
@.str282 = private unnamed_addr constant [12 x i8] c"DW_OP_lit20\00", align 1
@.str283 = private unnamed_addr constant [12 x i8] c"DW_OP_lit21\00", align 1
@.str284 = private unnamed_addr constant [12 x i8] c"DW_OP_lit22\00", align 1
@.str285 = private unnamed_addr constant [12 x i8] c"DW_OP_lit23\00", align 1
@.str286 = private unnamed_addr constant [12 x i8] c"DW_OP_lit24\00", align 1
@.str287 = private unnamed_addr constant [12 x i8] c"DW_OP_lit25\00", align 1
@.str288 = private unnamed_addr constant [12 x i8] c"DW_OP_lit26\00", align 1
@.str289 = private unnamed_addr constant [12 x i8] c"DW_OP_lit27\00", align 1
@.str290 = private unnamed_addr constant [12 x i8] c"DW_OP_lit28\00", align 1
@.str291 = private unnamed_addr constant [12 x i8] c"DW_OP_lit29\00", align 1
@.str292 = private unnamed_addr constant [12 x i8] c"DW_OP_lit30\00", align 1
@.str293 = private unnamed_addr constant [12 x i8] c"DW_OP_lit31\00", align 1
@.str294 = private unnamed_addr constant [11 x i8] c"DW_OP_reg0\00", align 1
@.str295 = private unnamed_addr constant [11 x i8] c"DW_OP_reg1\00", align 1
@.str296 = private unnamed_addr constant [11 x i8] c"DW_OP_reg2\00", align 1
@.str297 = private unnamed_addr constant [11 x i8] c"DW_OP_reg3\00", align 1
@.str298 = private unnamed_addr constant [11 x i8] c"DW_OP_reg4\00", align 1
@.str299 = private unnamed_addr constant [11 x i8] c"DW_OP_reg5\00", align 1
@.str300 = private unnamed_addr constant [11 x i8] c"DW_OP_reg6\00", align 1
@.str301 = private unnamed_addr constant [11 x i8] c"DW_OP_reg7\00", align 1
@.str302 = private unnamed_addr constant [11 x i8] c"DW_OP_reg8\00", align 1
@.str303 = private unnamed_addr constant [11 x i8] c"DW_OP_reg9\00", align 1
@.str304 = private unnamed_addr constant [12 x i8] c"DW_OP_reg10\00", align 1
@.str305 = private unnamed_addr constant [12 x i8] c"DW_OP_reg11\00", align 1
@.str306 = private unnamed_addr constant [12 x i8] c"DW_OP_reg12\00", align 1
@.str307 = private unnamed_addr constant [12 x i8] c"DW_OP_reg13\00", align 1
@.str308 = private unnamed_addr constant [12 x i8] c"DW_OP_reg14\00", align 1
@.str309 = private unnamed_addr constant [12 x i8] c"DW_OP_reg15\00", align 1
@.str310 = private unnamed_addr constant [12 x i8] c"DW_OP_reg16\00", align 1
@.str311 = private unnamed_addr constant [12 x i8] c"DW_OP_reg17\00", align 1
@.str312 = private unnamed_addr constant [12 x i8] c"DW_OP_reg18\00", align 1
@.str313 = private unnamed_addr constant [12 x i8] c"DW_OP_reg19\00", align 1
@.str314 = private unnamed_addr constant [12 x i8] c"DW_OP_reg20\00", align 1
@.str315 = private unnamed_addr constant [12 x i8] c"DW_OP_reg21\00", align 1
@.str316 = private unnamed_addr constant [12 x i8] c"DW_OP_reg22\00", align 1
@.str317 = private unnamed_addr constant [12 x i8] c"DW_OP_reg23\00", align 1
@.str318 = private unnamed_addr constant [12 x i8] c"DW_OP_reg24\00", align 1
@.str319 = private unnamed_addr constant [12 x i8] c"DW_OP_reg25\00", align 1
@.str320 = private unnamed_addr constant [12 x i8] c"DW_OP_reg26\00", align 1
@.str321 = private unnamed_addr constant [12 x i8] c"DW_OP_reg27\00", align 1
@.str322 = private unnamed_addr constant [12 x i8] c"DW_OP_reg28\00", align 1
@.str323 = private unnamed_addr constant [12 x i8] c"DW_OP_reg29\00", align 1
@.str324 = private unnamed_addr constant [12 x i8] c"DW_OP_reg30\00", align 1
@.str325 = private unnamed_addr constant [12 x i8] c"DW_OP_reg31\00", align 1
@.str326 = private unnamed_addr constant [12 x i8] c"DW_OP_breg0\00", align 1
@.str327 = private unnamed_addr constant [12 x i8] c"DW_OP_breg1\00", align 1
@.str328 = private unnamed_addr constant [12 x i8] c"DW_OP_breg2\00", align 1
@.str329 = private unnamed_addr constant [12 x i8] c"DW_OP_breg3\00", align 1
@.str330 = private unnamed_addr constant [12 x i8] c"DW_OP_breg4\00", align 1
@.str331 = private unnamed_addr constant [12 x i8] c"DW_OP_breg5\00", align 1
@.str332 = private unnamed_addr constant [12 x i8] c"DW_OP_breg6\00", align 1
@.str333 = private unnamed_addr constant [12 x i8] c"DW_OP_breg7\00", align 1
@.str334 = private unnamed_addr constant [12 x i8] c"DW_OP_breg8\00", align 1
@.str335 = private unnamed_addr constant [12 x i8] c"DW_OP_breg9\00", align 1
@.str336 = private unnamed_addr constant [13 x i8] c"DW_OP_breg10\00", align 1
@.str337 = private unnamed_addr constant [13 x i8] c"DW_OP_breg11\00", align 1
@.str338 = private unnamed_addr constant [13 x i8] c"DW_OP_breg12\00", align 1
@.str339 = private unnamed_addr constant [13 x i8] c"DW_OP_breg13\00", align 1
@.str340 = private unnamed_addr constant [13 x i8] c"DW_OP_breg14\00", align 1
@.str341 = private unnamed_addr constant [13 x i8] c"DW_OP_breg15\00", align 1
@.str342 = private unnamed_addr constant [13 x i8] c"DW_OP_breg16\00", align 1
@.str343 = private unnamed_addr constant [13 x i8] c"DW_OP_breg17\00", align 1
@.str344 = private unnamed_addr constant [13 x i8] c"DW_OP_breg18\00", align 1
@.str345 = private unnamed_addr constant [13 x i8] c"DW_OP_breg19\00", align 1
@.str346 = private unnamed_addr constant [13 x i8] c"DW_OP_breg20\00", align 1
@.str347 = private unnamed_addr constant [13 x i8] c"DW_OP_breg21\00", align 1
@.str348 = private unnamed_addr constant [13 x i8] c"DW_OP_breg22\00", align 1
@.str349 = private unnamed_addr constant [13 x i8] c"DW_OP_breg23\00", align 1
@.str350 = private unnamed_addr constant [13 x i8] c"DW_OP_breg24\00", align 1
@.str351 = private unnamed_addr constant [13 x i8] c"DW_OP_breg25\00", align 1
@.str352 = private unnamed_addr constant [13 x i8] c"DW_OP_breg26\00", align 1
@.str353 = private unnamed_addr constant [13 x i8] c"DW_OP_breg27\00", align 1
@.str354 = private unnamed_addr constant [13 x i8] c"DW_OP_breg28\00", align 1
@.str355 = private unnamed_addr constant [13 x i8] c"DW_OP_breg29\00", align 1
@.str356 = private unnamed_addr constant [13 x i8] c"DW_OP_breg30\00", align 1
@.str357 = private unnamed_addr constant [13 x i8] c"DW_OP_breg31\00", align 1
@.str358 = private unnamed_addr constant [11 x i8] c"DW_OP_regx\00", align 1
@.str359 = private unnamed_addr constant [12 x i8] c"DW_OP_fbreg\00", align 1
@.str360 = private unnamed_addr constant [12 x i8] c"DW_OP_bregx\00", align 1
@.str361 = private unnamed_addr constant [12 x i8] c"DW_OP_piece\00", align 1
@.str362 = private unnamed_addr constant [17 x i8] c"DW_OP_deref_size\00", align 1
@.str363 = private unnamed_addr constant [18 x i8] c"DW_OP_xderef_size\00", align 1
@.str364 = private unnamed_addr constant [10 x i8] c"DW_OP_nop\00", align 1
@.str365 = private unnamed_addr constant [13 x i8] c"OP_<unknown>\00", align 1
@.str366 = private unnamed_addr constant [3 x i8] c"DW\00", align 1
@.str367 = private unnamed_addr constant [8 x i8] c".globl \00", align 1
@.str369 = private unnamed_addr constant [32 x i8] c"Length of Compilation Unit Info\00", align 1
@.str370 = private unnamed_addr constant [21 x i8] c"DWARF version number\00", align 1
@abbrev_section_label = internal global [30 x i8] zeroinitializer, align 16
@.str371 = private unnamed_addr constant [28 x i8] c"Offset Into Abbrev. Section\00", align 1
@.str372 = private unnamed_addr constant [24 x i8] c"Pointer Size (in bytes)\00", align 1
@__FUNCTION__.size_of_die = private unnamed_addr constant [12 x i8] c"size_of_die\00", align 1
@__FUNCTION__.build_abbrev_table = private unnamed_addr constant [19 x i8] c"build_abbrev_table\00", align 1
@abbrev_die_table_allocated = internal unnamed_addr global i32 0, align 4
@.str381 = private unnamed_addr constant [4 x i8] c"%s.\00", align 1
@.str382 = private unnamed_addr constant [5 x i8] c"%.2x\00", align 1
@comdat_symbol_id = internal unnamed_addr global i8* null, align 8
@comdat_symbol_number = internal unnamed_addr global i32 0, align 4
@__FUNCTION__.attr_checksum = private unnamed_addr constant [14 x i8] c"attr_checksum\00", align 1
@.str383 = private unnamed_addr constant [9 x i8] c"%s.%s.%x\00", align 1
@.str384 = private unnamed_addr constant [5 x i8] c"LDIE\00", align 1
@gen_internal_sym.label_num = internal unnamed_addr global i32 0, align 4
@lang_hooks = external constant %struct.lang_hooks
@.str385 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@version_string = external constant i8*
@.str386 = private unnamed_addr constant [8 x i8] c"GNU C++\00", align 1
@.str387 = private unnamed_addr constant [8 x i8] c"GNU Ada\00", align 1
@.str388 = private unnamed_addr constant [8 x i8] c"GNU F77\00", align 1
@.str389 = private unnamed_addr constant [11 x i8] c"GNU Pascal\00", align 1
@.str390 = private unnamed_addr constant [9 x i8] c"GNU Java\00", align 1
@flag_traditional = external global i32
@__FUNCTION__.gen_type_die = private unnamed_addr constant [13 x i8] c"gen_type_die\00", align 1
@__FUNCTION__.pop_decl_scope = private unnamed_addr constant [15 x i8] c"pop_decl_scope\00", align 1
@__FUNCTION__.splice_child_die = private unnamed_addr constant [17 x i8] c"splice_child_die\00", align 1
@__FUNCTION__.add_data_member_location_attribute = private unnamed_addr constant [35 x i8] c"add_data_member_location_attribute\00", align 1
@__FUNCTION__.field_byte_offset = private unnamed_addr constant [18 x i8] c"field_byte_offset\00", align 1
@__FUNCTION__.add_byte_size_attribute = private unnamed_addr constant [24 x i8] c"add_byte_size_attribute\00", align 1
@__FUNCTION__.scope_die_for = private unnamed_addr constant [14 x i8] c"scope_die_for\00", align 1
@optimize = external global i32
@__FUNCTION__.loc_descriptor_from_tree = private unnamed_addr constant [25 x i8] c"loc_descriptor_from_tree\00", align 1
@used_rtx_varray = internal global %struct.varray_head_tag* null, align 8
@word_mode = external global i32
@mode_unit_size = external constant [59 x i8]
@__FUNCTION__.mem_loc_descriptor = private unnamed_addr constant [19 x i8] c"mem_loc_descriptor\00", align 1
@__FUNCTION__.reg_number = private unnamed_addr constant [11 x i8] c"reg_number\00", align 1
@frame_pointer_needed = external global i32
@reload_completed = external global i32
@mode_class = external constant [59 x i32]
@__FUNCTION__.rtl_for_decl_location = private unnamed_addr constant [22 x i8] c"rtl_for_decl_location\00", align 1
@__FUNCTION__.loc_descriptor = private unnamed_addr constant [15 x i8] c"loc_descriptor\00", align 1
@__FUNCTION__.gen_formal_parameter_die = private unnamed_addr constant [25 x i8] c"gen_formal_parameter_die\00", align 1
@__FUNCTION__.add_location_or_const_value_attribute = private unnamed_addr constant [38 x i8] c"add_location_or_const_value_attribute\00", align 1
@__FUNCTION__.add_const_value_attribute = private unnamed_addr constant [26 x i8] c"add_const_value_attribute\00", align 1
@decl_die_table_allocated = internal unnamed_addr global i32 0, align 4
@decl_die_table = internal unnamed_addr global %struct.die_struct** null, align 8
@decl_die_table_in_use = internal unnamed_addr global i32 0, align 4
@lang_set_decl_assembler_name = external global void (%union.tree_node*)*
@decl_printable_name = external global i8* (%union.tree_node*, i32)*
@__FUNCTION__.add_abstract_origin_attribute = private unnamed_addr constant [30 x i8] c"add_abstract_origin_attribute\00", align 1
@__FUNCTION__.add_child_die = private unnamed_addr constant [14 x i8] c"add_child_die\00", align 1
@primary_filename = internal unnamed_addr global i8* null, align 8
@.str391 = private unnamed_addr constant [17 x i8] c"decl_scope_table\00", align 1
@line_info_table = internal unnamed_addr global %struct.dw_line_info_struct* null, align 8
@line_info_table_in_use = internal unnamed_addr global i32 0, align 4
@.str392 = private unnamed_addr constant [17 x i8] c"incomplete_types\00", align 1
@.str393 = private unnamed_addr constant [16 x i8] c"used_rtx_varray\00", align 1
@.str394 = private unnamed_addr constant [14 x i8] c"Ldebug_abbrev\00", align 1
@.str395 = private unnamed_addr constant [6 x i8] c"Ltext\00", align 1
@.str396 = private unnamed_addr constant [12 x i8] c"Ldebug_info\00", align 1
@.str397 = private unnamed_addr constant [12 x i8] c"Ldebug_line\00", align 1
@.str398 = private unnamed_addr constant [14 x i8] c"Ldebug_ranges\00", align 1
@.str399 = private unnamed_addr constant [12 x i8] c".debug_line\00", align 1
@.str400 = private unnamed_addr constant [15 x i8] c"Ldebug_macinfo\00", align 1
@ggc_pending_trees = external global %struct.varray_head_tag*
@file_table.0 = internal unnamed_addr global i8** null
@file_table.1 = internal unnamed_addr global i32 0, align 8
@file_table.2 = internal unnamed_addr global i32 0
@file_table.3 = internal unnamed_addr global i32 0, align 8
@.str401 = private unnamed_addr constant [15 x i8] c"Undefine macro\00", align 1
@.str402 = private unnamed_addr constant [18 x i8] c"At line number %d\00", align 1
@.str403 = private unnamed_addr constant [10 x i8] c"The macro\00", align 1
@.str404 = private unnamed_addr constant [13 x i8] c"Define macro\00", align 1
@.str405 = private unnamed_addr constant [15 x i8] c"Start new file\00", align 1
@.str406 = private unnamed_addr constant [29 x i8] c"Included from line number %d\00", align 1
@.str407 = private unnamed_addr constant [25 x i8] c"Filename we just started\00", align 1
@flag_debug_asm = external global i32
@.str408 = private unnamed_addr constant [11 x i8] c"\09%s %s:%d\0A\00", align 1
@.str409 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str410 = private unnamed_addr constant [15 x i8] c"\09.loc %d %d 0\0A\00", align 1
@.str411 = private unnamed_addr constant [11 x i8] c"<internal>\00", align 1
@.str412 = private unnamed_addr constant [11 x i8] c"<built-in>\00", align 1
@.str413 = private unnamed_addr constant [16 x i8] c"\09.file %u \22%s\22\0A\00", align 1
@__FUNCTION__.gen_decl_die = private unnamed_addr constant [13 x i8] c"gen_decl_die\00", align 1
@__FUNCTION__.add_bit_offset_attribute = private unnamed_addr constant [25 x i8] c"add_bit_offset_attribute\00", align 1
@__FUNCTION__.add_bit_size_attribute = private unnamed_addr constant [23 x i8] c"add_bit_size_attribute\00", align 1
@__FUNCTION__.gen_label_die = private unnamed_addr constant [14 x i8] c"gen_label_die\00", align 1
@.str414 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@__FUNCTION__.gen_typedef_die = private unnamed_addr constant [16 x i8] c"gen_typedef_die\00", align 1
@__FUNCTION__.gen_tagged_type_instantiation_die = private unnamed_addr constant [34 x i8] c"gen_tagged_type_instantiation_die\00", align 1
@__FUNCTION__.gen_subprogram_die = private unnamed_addr constant [19 x i8] c"gen_subprogram_die\00", align 1
@flag_no_inline = external global i32
@global_rtl = external global [11 x %struct.rtx_def*]
@.str415 = private unnamed_addr constant [19 x i8] c"__builtin_va_alist\00", align 1
@ranges_table_allocated = internal unnamed_addr global i32 0, align 4
@arange_table_allocated = internal unnamed_addr global i32 0, align 4
@__FUNCTION__.gen_type_die_for_member = private unnamed_addr constant [24 x i8] c"gen_type_die_for_member\00", align 1
@__FUNCTION__.modified_type_die = private unnamed_addr constant [18 x i8] c"modified_type_die\00", align 1
@.str416 = private unnamed_addr constant [12 x i8] c"__unknown__\00", align 1
@.str417 = private unnamed_addr constant [12 x i8] c"signed char\00", align 1
@.str418 = private unnamed_addr constant [14 x i8] c"unsigned char\00", align 1
@__FUNCTION__.base_type_die = private unnamed_addr constant [14 x i8] c"base_type_die\00", align 1
@__FUNCTION__.is_base_type = private unnamed_addr constant [13 x i8] c"is_base_type\00", align 1
@pubname_table_allocated = internal unnamed_addr global i32 0, align 4
@.str419 = private unnamed_addr constant [14 x i8] c"DIE %4lu: %s\0A\00", align 1
@.str420 = private unnamed_addr constant [17 x i8] c"  abbrev id: %lu\00", align 1
@.str421 = private unnamed_addr constant [14 x i8] c" offset: %lu\0A\00", align 1
@.str422 = private unnamed_addr constant [7 x i8] c"  %s: \00", align 1
@.str423 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str424 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str425 = private unnamed_addr constant [20 x i8] c"location descriptor\00", align 1
@.str426 = private unnamed_addr constant [26 x i8] c"location list -> label:%s\00", align 1
@.str427 = private unnamed_addr constant [11 x i8] c"range list\00", align 1
@.str428 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str429 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str430 = private unnamed_addr constant [19 x i8] c"constant (%lu,%lu)\00", align 1
@.str431 = private unnamed_addr constant [24 x i8] c"floating-point constant\00", align 1
@.str432 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str433 = private unnamed_addr constant [17 x i8] c"die -> label: %s\00", align 1
@.str434 = private unnamed_addr constant [11 x i8] c"die -> %lu\00", align 1
@.str435 = private unnamed_addr constant [14 x i8] c"die -> <null>\00", align 1
@.str436 = private unnamed_addr constant [10 x i8] c"label: %s\00", align 1
@.str437 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@.str438 = private unnamed_addr constant [7 x i8] c"<null>\00", align 1
@.str439 = private unnamed_addr constant [4 x i8] c"%*s\00", align 1
@.str440 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@flag_asynchronous_unwind_tables = external global i32
@targetm = external global %struct.gcc_target
@.str441 = private unnamed_addr constant [13 x i8] c".debug_frame\00", align 1
@.str442 = private unnamed_addr constant [7 x i8] c"Lframe\00", align 1
@.str443 = private unnamed_addr constant [6 x i8] c"LSCIE\00", align 1
@.str444 = private unnamed_addr constant [6 x i8] c"LECIE\00", align 1
@.str445 = private unnamed_addr constant [35 x i8] c"Length of Common Information Entry\00", align 1
@.str446 = private unnamed_addr constant [19 x i8] c"CIE Identifier Tag\00", align 1
@.str447 = private unnamed_addr constant [12 x i8] c"CIE Version\00", align 1
@flag_pic = external global i32
@libfunc_table = external global [97 x %struct.rtx_def*]
@.str448 = private unnamed_addr constant [17 x i8] c"CIE Augmentation\00", align 1
@.str449 = private unnamed_addr constant [26 x i8] c"CIE Code Alignment Factor\00", align 1
@.str450 = private unnamed_addr constant [26 x i8] c"CIE Data Alignment Factor\00", align 1
@.str451 = private unnamed_addr constant [14 x i8] c"CIE RA Column\00", align 1
@.str452 = private unnamed_addr constant [18 x i8] c"Augmentation size\00", align 1
@.str453 = private unnamed_addr constant [17 x i8] c"Personality (%s)\00", align 1
@.str454 = private unnamed_addr constant [19 x i8] c"LSDA Encoding (%s)\00", align 1
@.str455 = private unnamed_addr constant [18 x i8] c"FDE Encoding (%s)\00", align 1
@cie_cfi_head = internal global %struct.dw_cfi_struct* null, align 8
@.str456 = private unnamed_addr constant [12 x i8] c"\09.align %d\0A\00", align 1
@.str457 = private unnamed_addr constant [7 x i8] c"LASFDE\00", align 1
@.str458 = private unnamed_addr constant [6 x i8] c"LEFDE\00", align 1
@.str459 = private unnamed_addr constant [11 x i8] c"FDE Length\00", align 1
@.str460 = private unnamed_addr constant [15 x i8] c"FDE CIE offset\00", align 1
@.str461 = private unnamed_addr constant [21 x i8] c"FDE initial location\00", align 1
@.str462 = private unnamed_addr constant [18 x i8] c"FDE address range\00", align 1
@.str463 = private unnamed_addr constant [6 x i8] c"LLSDA\00", align 1
@.str464 = private unnamed_addr constant [28 x i8] c"Language Specific Data Area\00", align 1
@.str465 = private unnamed_addr constant [35 x i8] c"Language Specific Data Area (none)\00", align 1
@.str466 = private unnamed_addr constant [25 x i8] c"DW_CFA_advance_loc 0x%lx\00", align 1
@.str467 = private unnamed_addr constant [28 x i8] c"DW_CFA_offset, column 0x%lx\00", align 1
@.str468 = private unnamed_addr constant [29 x i8] c"DW_CFA_restore, column 0x%lx\00", align 1
@__FUNCTION__.output_cfi = private unnamed_addr constant [11 x i8] c"output_cfi\00", align 1
@.str472 = private unnamed_addr constant [11 x i8] c"DW_CFA_nop\00", align 1
@.str473 = private unnamed_addr constant [15 x i8] c"DW_CFA_set_loc\00", align 1
@.str474 = private unnamed_addr constant [20 x i8] c"DW_CFA_advance_loc1\00", align 1
@.str475 = private unnamed_addr constant [20 x i8] c"DW_CFA_advance_loc2\00", align 1
@.str476 = private unnamed_addr constant [20 x i8] c"DW_CFA_advance_loc4\00", align 1
@.str477 = private unnamed_addr constant [23 x i8] c"DW_CFA_offset_extended\00", align 1
@.str478 = private unnamed_addr constant [24 x i8] c"DW_CFA_restore_extended\00", align 1
@.str479 = private unnamed_addr constant [17 x i8] c"DW_CFA_undefined\00", align 1
@.str480 = private unnamed_addr constant [18 x i8] c"DW_CFA_same_value\00", align 1
@.str481 = private unnamed_addr constant [16 x i8] c"DW_CFA_register\00", align 1
@.str482 = private unnamed_addr constant [22 x i8] c"DW_CFA_remember_state\00", align 1
@.str483 = private unnamed_addr constant [21 x i8] c"DW_CFA_restore_state\00", align 1
@.str484 = private unnamed_addr constant [15 x i8] c"DW_CFA_def_cfa\00", align 1
@.str485 = private unnamed_addr constant [24 x i8] c"DW_CFA_def_cfa_register\00", align 1
@.str486 = private unnamed_addr constant [22 x i8] c"DW_CFA_def_cfa_offset\00", align 1
@.str487 = private unnamed_addr constant [26 x i8] c"DW_CFA_def_cfa_expression\00", align 1
@.str488 = private unnamed_addr constant [18 x i8] c"DW_CFA_expression\00", align 1
@.str489 = private unnamed_addr constant [26 x i8] c"DW_CFA_offset_extended_sf\00", align 1
@.str490 = private unnamed_addr constant [18 x i8] c"DW_CFA_def_cfa_sf\00", align 1
@.str491 = private unnamed_addr constant [25 x i8] c"DW_CFA_def_cfa_offset_sf\00", align 1
@.str492 = private unnamed_addr constant [25 x i8] c"DW_CFA_MIPS_advance_loc8\00", align 1
@.str493 = private unnamed_addr constant [23 x i8] c"DW_CFA_GNU_window_save\00", align 1
@.str494 = private unnamed_addr constant [21 x i8] c"DW_CFA_GNU_args_size\00", align 1
@.str495 = private unnamed_addr constant [36 x i8] c"DW_CFA_GNU_negative_offset_extended\00", align 1
@.str496 = private unnamed_addr constant [17 x i8] c"DW_CFA_<unknown>\00", align 1
@__FUNCTION__.initial_return_save = private unnamed_addr constant [20 x i8] c"initial_return_save\00", align 1
@__FUNCTION__.dwarf2out_frame_debug_expr = private unnamed_addr constant [27 x i8] c"dwarf2out_frame_debug_expr\00", align 1
@queued_reg_saves = internal unnamed_addr global %struct.queued_reg_save* null, align 8
@last_reg_save_label = internal unnamed_addr global i8* null, align 8
@__FUNCTION__.dwarf2out_stack_adjust = private unnamed_addr constant [23 x i8] c"dwarf2out_stack_adjust\00", align 1
@__FUNCTION__.stack_adjust_offset = private unnamed_addr constant [20 x i8] c"stack_adjust_offset\00", align 1
@.str497 = private unnamed_addr constant [30 x i8] c"DW_LOC_OP %s not implemented\0A\00", align 1

; Function Attrs: nounwind readonly uwtable
define i32 @dwarf2out_do_frame() #0 {
entry:
  %0 = load i32* @flag_unwind_tables, align 4
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %switch.early.test, label %lor.end

switch.early.test:                                ; preds = %entry
  %1 = load i32* @write_symbols, align 4, !tbaa !1
  switch i32 %1, label %lor.rhs [
    i32 7, label %lor.end
    i32 4, label %lor.end
  ]

lor.rhs:                                          ; preds = %switch.early.test
  %2 = load i32* @flag_exceptions, align 4, !tbaa !4
  %tobool3 = icmp ne i32 %2, 0
  br label %lor.end

lor.end:                                          ; preds = %entry, %switch.early.test, %switch.early.test, %lor.rhs
  %3 = phi i1 [ true, %switch.early.test ], [ %tobool3, %lor.rhs ], [ true, %entry ], [ true, %switch.early.test ]
  %lor.ext = zext i1 %3 to i32
  ret i32 %lor.ext
}

; Function Attrs: nounwind uwtable
define void @default_eh_frame_section() #1 {
entry:
  tail call void @named_section_flags(i8* getelementptr inbounds ([10 x i8]* @.str, i64 0, i64 0), i32 512) #5
  ret void
}

declare void @named_section_flags(i8*, i32) #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_builtin_dwarf_fp_regnum() #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !4
  %and = and i32 %0, 33554432
  %tobool = icmp ne i32 %and, 0
  %1 = load i32* getelementptr inbounds ([53 x i32]* @dbx64_register_map, i64 0, i64 6), align 4, !tbaa !4
  %2 = load i32* getelementptr inbounds ([53 x i32]* @svr4_dbx_register_map, i64 0, i64 6), align 4, !tbaa !4
  %cond = select i1 %tobool, i32 %1, i32 %2
  %conv = sext i32 %cond to i64
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #5
  ret %struct.rtx_def* %call
}

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

; Function Attrs: nounwind uwtable
define void @expand_builtin_init_dwarf_reg_sizes(%union.tree_node* %address) #1 {
entry:
  %0 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !6
  %type = bitcast %union.tree_node* %0 to %struct.tree_type*
  %mode1 = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load = load i32* %mode1, align 4
  %bf.lshr = lshr i32 %bf.load, 9
  %bf.clear = and i32 %bf.lshr, 127
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %address, %struct.rtx_def* null, i32 0, i32 0) #5
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 51, %struct.rtx_def* %call) #5
  %idxprom1637 = zext i32 %bf.clear to i64
  %arrayidx17 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1637
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %1 = load i32* @target_flags, align 4, !tbaa !4
  %and = and i32 %1, 33554432
  %tobool = icmp eq i32 %and, 0
  %svr4_dbx_register_map.dbx64_register_map = select i1 %tobool, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map, i64 0, i64 %indvars.iv
  %cond = load i32* %cond.in, align 4
  %cmp5 = icmp slt i32 %cond, 17
  br i1 %cmp5, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %2 = load i8* %arrayidx17, align 1, !tbaa !1
  %conv = zext i8 %2 to i32
  %mul = mul nsw i32 %conv, %cond
  %cmp24 = icmp slt i32 %mul, 0
  br i1 %cmp24, label %for.inc, label %if.end

if.end:                                           ; preds = %if.then
  %arrayidx20 = getelementptr inbounds [53 x i32]* @reg_raw_mode, i64 0, i64 %indvars.iv
  %3 = load i32* %arrayidx20, align 4, !tbaa !1
  %idxprom21 = sext i32 %3 to i64
  %arrayidx22 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom21
  %4 = load i8* %arrayidx22, align 1, !tbaa !1
  %conv18 = sext i32 %mul to i64
  %conv23 = zext i8 %4 to i64
  %call27 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %call2, i32 %bf.clear, i64 %conv18, i32 1, i32 1) #5
  %call28 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv23) #5
  %call29 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call27, %struct.rtx_def* %call28) #5
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.end, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 53
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  ret void
}

declare %struct.rtx_def* @expand_expr(%union.tree_node*, %struct.rtx_def*, i32, i32) #2

declare %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #2

; Function Attrs: nounwind uwtable
define i8* @dwarf2out_cfi_label() #1 {
entry:
  %0 = load i64* @dwarf2out_cfi_label.label_num, align 8, !tbaa !8
  %inc = add i64 %0, 1
  store i64 %inc, i64* @dwarf2out_cfi_label.label_num, align 8, !tbaa !8
  %conv = trunc i64 %0 to i32
  %call = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i32 %conv) #5
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(%struct._IO_FILE* %1, i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0)) #5
  %2 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %2)
  ret i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0)
}

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #3

declare void @assemble_name(%struct._IO_FILE*, i8*) #2

; Function Attrs: nounwind uwtable
define void @dwarf2out_def_cfa(i8* %label, i32 %reg, i64 %offset) #1 {
entry:
  %loc = alloca %struct.cfa_loc, align 8
  %indirect = getelementptr inbounds %struct.cfa_loc* %loc, i64 0, i32 3
  store i32 0, i32* %indirect, align 8, !tbaa !10
  %base_offset = getelementptr inbounds %struct.cfa_loc* %loc, i64 0, i32 2
  store i64 0, i64* %base_offset, align 8, !tbaa !12
  %conv = zext i32 %reg to i64
  %reg1 = getelementptr inbounds %struct.cfa_loc* %loc, i64 0, i32 0
  store i64 %conv, i64* %reg1, align 8, !tbaa !13
  %offset2 = getelementptr inbounds %struct.cfa_loc* %loc, i64 0, i32 1
  store i64 %offset, i64* %offset2, align 8, !tbaa !14
  call fastcc void @def_cfa_1(i8* %label, %struct.cfa_loc* %loc)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @def_cfa_1(i8* %label, %struct.cfa_loc* nocapture readonly %loc_p) #1 {
entry:
  %head.i = alloca %struct.dw_loc_descr_struct*, align 8
  %0 = bitcast %struct.cfa_loc* %loc_p to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.cfa_loc* @cfa to i8*), i8* %0, i64 32, i32 8, i1 false), !tbaa.struct !15
  %loc.sroa.0.0..sroa_idx = getelementptr inbounds %struct.cfa_loc* %loc_p, i64 0, i32 0
  %loc.sroa.0.0.copyload = load i64* %loc.sroa.0.0..sroa_idx, align 8
  %loc.sroa.9.0..sroa_idx218 = getelementptr inbounds %struct.cfa_loc* %loc_p, i64 0, i32 1
  %loc.sroa.9.0.copyload = load i64* %loc.sroa.9.0..sroa_idx218, align 8
  %loc.sroa.15.0..sroa_idx224 = getelementptr inbounds %struct.cfa_loc* %loc_p, i64 0, i32 2
  %loc.sroa.15.0.copyload = load i64* %loc.sroa.15.0..sroa_idx224, align 8
  %loc.sroa.17.0..sroa_idx226 = getelementptr inbounds %struct.cfa_loc* %loc_p, i64 0, i32 3
  %loc.sroa.17.0.copyload = load i32* %loc.sroa.17.0..sroa_idx226, align 8
  %1 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 0), align 8, !tbaa !13
  %cmp = icmp eq i64 %1, %loc.sroa.0.0.copyload
  %cmp1 = icmp eq i32 %loc.sroa.17.0.copyload, 0
  %or.cond264 = and i1 %cmp, %cmp1
  br i1 %or.cond264, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i64 %loc.sroa.9.0.copyload, i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32* @target_flags, align 4, !tbaa !4
  %and = and i32 %2, 33554432
  %tobool = icmp eq i32 %and, 0
  %svr4_dbx_register_map.dbx64_register_map = select i1 %tobool, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map, i64 0, i64 %loc.sroa.0.0.copyload
  %cond = load i32* %cond.in, align 4
  %conv = sext i32 %cond to i64
  %cfi.021.i = load %struct.dw_cfi_struct** @cie_cfi_head, align 8
  %tobool22.i = icmp eq %struct.dw_cfi_struct* %cfi.021.i, null
  br i1 %tobool22.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.end, %lookup_cfa_1.exit211
  %old_cfa.sroa.34.8.oldload249 = phi i32 [ %old_cfa.sroa.34.8.oldload248, %lookup_cfa_1.exit211 ], [ 0, %if.end ]
  %3 = phi i64 [ %22, %lookup_cfa_1.exit211 ], [ 0, %if.end ]
  %4 = phi i64 [ %23, %lookup_cfa_1.exit211 ], [ 0, %if.end ]
  %old_cfa.sroa.0.0.load244 = phi i64 [ %old_cfa.sroa.0.0.load243, %lookup_cfa_1.exit211 ], [ -1, %if.end ]
  %cfi.023.i = phi %struct.dw_cfi_struct* [ %cfi.0.i, %lookup_cfa_1.exit211 ], [ %cfi.021.i, %if.end ]
  %dw_cfi_opc.i91 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 1
  %5 = load i32* %dw_cfi_opc.i91, align 4, !tbaa !16
  switch i32 %5, label %lookup_cfa_1.exit211 [
    i32 14, label %sw.bb.i94
    i32 13, label %sw.bb1.i97
    i32 12, label %sw.bb3.i102
    i32 15, label %sw.bb9.i110
  ]

sw.bb.i94:                                        ; preds = %for.body.i
  %dw_cfi_offset.i92 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 2, i32 0
  %6 = load i64* %dw_cfi_offset.i92, align 8, !tbaa !8
  br label %lookup_cfa_1.exit211

sw.bb1.i97:                                       ; preds = %for.body.i
  %dw_cfi_reg_num.i95 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 2, i32 0
  %7 = load i64* %dw_cfi_reg_num.i95, align 8, !tbaa !8
  br label %lookup_cfa_1.exit211

sw.bb3.i102:                                      ; preds = %for.body.i
  %dw_cfi_reg_num5.i98 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 2, i32 0
  %8 = load i64* %dw_cfi_reg_num5.i98, align 8, !tbaa !8
  %dw_cfi_offset7.i100 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 3, i32 0
  %9 = load i64* %dw_cfi_offset7.i100, align 8, !tbaa !8
  br label %lookup_cfa_1.exit211

sw.bb9.i110:                                      ; preds = %for.body.i
  %dw_cfi_oprnd110.i103 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 2
  %dw_cfi_loc.i104 = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd110.i103 to %struct.dw_loc_descr_struct**
  %10 = load %struct.dw_loc_descr_struct** %dw_cfi_loc.i104, align 8, !tbaa !6
  %cmp48.i.i109 = icmp eq %struct.dw_loc_descr_struct* %10, null
  br i1 %cmp48.i.i109, label %lookup_cfa_1.exit211, label %for.body.i.i113

for.body.i.i113:                                  ; preds = %sw.bb9.i110, %for.inc.i.i210
  %old_cfa.sroa.34.8.oldload254 = phi i32 [ %old_cfa.sroa.34.8.oldload253, %for.inc.i.i210 ], [ 0, %sw.bb9.i110 ]
  %11 = phi i64 [ %19, %for.inc.i.i210 ], [ 0, %sw.bb9.i110 ]
  %12 = phi i64 [ %20, %for.inc.i.i210 ], [ 0, %sw.bb9.i110 ]
  %old_cfa.sroa.0.0.load247 = phi i64 [ %old_cfa.sroa.0.0.load246, %for.inc.i.i210 ], [ -1, %sw.bb9.i110 ]
  %ptr.049.i.i111 = phi %struct.dw_loc_descr_struct* [ %21, %for.inc.i.i210 ], [ %10, %sw.bb9.i110 ]
  %dw_loc_opc.i.i112 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i111, i64 0, i32 1
  %13 = load i32* %dw_loc_opc.i.i112, align 4, !tbaa !18
  switch i32 %13, label %sw.default.i.i.i203 [
    i32 80, label %sw.bb.i.i116
    i32 81, label %sw.bb.i.i116
    i32 82, label %sw.bb.i.i116
    i32 83, label %sw.bb.i.i116
    i32 84, label %sw.bb.i.i116
    i32 85, label %sw.bb.i.i116
    i32 86, label %sw.bb.i.i116
    i32 87, label %sw.bb.i.i116
    i32 88, label %sw.bb.i.i116
    i32 89, label %sw.bb.i.i116
    i32 90, label %sw.bb.i.i116
    i32 91, label %sw.bb.i.i116
    i32 92, label %sw.bb.i.i116
    i32 93, label %sw.bb.i.i116
    i32 94, label %sw.bb.i.i116
    i32 95, label %sw.bb.i.i116
    i32 96, label %sw.bb.i.i116
    i32 97, label %sw.bb.i.i116
    i32 98, label %sw.bb.i.i116
    i32 99, label %sw.bb.i.i116
    i32 100, label %sw.bb.i.i116
    i32 101, label %sw.bb.i.i116
    i32 102, label %sw.bb.i.i116
    i32 103, label %sw.bb.i.i116
    i32 104, label %sw.bb.i.i116
    i32 105, label %sw.bb.i.i116
    i32 106, label %sw.bb.i.i116
    i32 107, label %sw.bb.i.i116
    i32 108, label %sw.bb.i.i116
    i32 109, label %sw.bb.i.i116
    i32 110, label %sw.bb.i.i116
    i32 111, label %sw.bb.i.i116
    i32 144, label %sw.bb2.i.i118
    i32 112, label %sw.bb4.i.i122
    i32 113, label %sw.bb4.i.i122
    i32 114, label %sw.bb4.i.i122
    i32 115, label %sw.bb4.i.i122
    i32 116, label %sw.bb4.i.i122
    i32 117, label %sw.bb4.i.i122
    i32 118, label %sw.bb4.i.i122
    i32 119, label %sw.bb4.i.i122
    i32 120, label %sw.bb4.i.i122
    i32 121, label %sw.bb4.i.i122
    i32 122, label %sw.bb4.i.i122
    i32 123, label %sw.bb4.i.i122
    i32 124, label %sw.bb4.i.i122
    i32 125, label %sw.bb4.i.i122
    i32 126, label %sw.bb4.i.i122
    i32 127, label %sw.bb4.i.i122
    i32 128, label %sw.bb4.i.i122
    i32 129, label %sw.bb4.i.i122
    i32 130, label %sw.bb4.i.i122
    i32 131, label %sw.bb4.i.i122
    i32 132, label %sw.bb4.i.i122
    i32 133, label %sw.bb4.i.i122
    i32 134, label %sw.bb4.i.i122
    i32 135, label %sw.bb4.i.i122
    i32 136, label %sw.bb4.i.i122
    i32 137, label %sw.bb4.i.i122
    i32 138, label %sw.bb4.i.i122
    i32 139, label %sw.bb4.i.i122
    i32 140, label %sw.bb4.i.i122
    i32 141, label %sw.bb4.i.i122
    i32 142, label %sw.bb4.i.i122
    i32 143, label %sw.bb4.i.i122
    i32 146, label %sw.bb12.i.i125
    i32 6, label %for.inc.i.i210
    i32 35, label %sw.bb22.i.i128
    i32 3, label %dwarf_stack_op_name.exit.loopexit.i.i204
    i32 149, label %sw.bb143.i.i.i201
    i32 8, label %dwarf_stack_op_name.exit.i.loopexit.i205
    i32 9, label %dwarf_stack_op_name.exit.i.i207.loopexit
    i32 10, label %dwarf_stack_op_name.exit.i.i207.loopexit288
    i32 11, label %dwarf_stack_op_name.exit.i.i207
    i32 12, label %sw.bb6.i.i.i131
    i32 13, label %sw.bb7.i.i.i132
    i32 14, label %sw.bb8.i.i.i133
    i32 15, label %sw.bb9.i.i.i134
    i32 16, label %sw.bb10.i.i.i135
    i32 17, label %sw.bb11.i.i.i136
    i32 18, label %sw.bb12.i.i.i137
    i32 19, label %sw.bb13.i.i.i138
    i32 20, label %sw.bb14.i.i.i139
    i32 21, label %sw.bb15.i.i.i140
    i32 22, label %sw.bb16.i.i.i141
    i32 23, label %sw.bb17.i.i.i142
    i32 24, label %sw.bb18.i.i.i143
    i32 25, label %sw.bb19.i.i.i144
    i32 26, label %sw.bb20.i.i.i145
    i32 27, label %sw.bb21.i.i.i146
    i32 28, label %sw.bb22.i.i.i147
    i32 29, label %sw.bb23.i.i.i148
    i32 30, label %sw.bb24.i.i.i149
    i32 31, label %sw.bb25.i.i.i150
    i32 32, label %sw.bb26.i.i.i151
    i32 33, label %sw.bb27.i.i.i152
    i32 34, label %sw.bb28.i.i.i153
    i32 147, label %sw.bb141.i.i.i199
    i32 36, label %sw.bb30.i.i.i154
    i32 37, label %sw.bb31.i.i.i155
    i32 38, label %sw.bb32.i.i.i156
    i32 39, label %sw.bb33.i.i.i157
    i32 40, label %sw.bb34.i.i.i158
    i32 41, label %sw.bb35.i.i.i159
    i32 42, label %sw.bb36.i.i.i160
    i32 43, label %sw.bb37.i.i.i161
    i32 44, label %sw.bb38.i.i.i162
    i32 45, label %sw.bb39.i.i.i163
    i32 46, label %sw.bb40.i.i.i164
    i32 47, label %sw.bb41.i.i.i165
    i32 48, label %sw.bb42.i.i.i166
    i32 49, label %sw.bb43.i.i.i167
    i32 50, label %sw.bb44.i.i.i168
    i32 51, label %sw.bb45.i.i.i169
    i32 52, label %sw.bb46.i.i.i170
    i32 53, label %sw.bb47.i.i.i171
    i32 54, label %sw.bb48.i.i.i172
    i32 55, label %sw.bb49.i.i.i173
    i32 56, label %sw.bb50.i.i.i174
    i32 57, label %sw.bb51.i.i.i175
    i32 58, label %sw.bb52.i.i.i176
    i32 59, label %sw.bb53.i.i.i177
    i32 60, label %sw.bb54.i.i.i178
    i32 61, label %sw.bb55.i.i.i179
    i32 62, label %sw.bb56.i.i.i180
    i32 63, label %sw.bb57.i.i.i181
    i32 64, label %sw.bb58.i.i.i182
    i32 65, label %sw.bb59.i.i.i183
    i32 66, label %sw.bb60.i.i.i184
    i32 67, label %sw.bb61.i.i.i185
    i32 68, label %sw.bb62.i.i.i186
    i32 69, label %sw.bb63.i.i.i187
    i32 70, label %sw.bb64.i.i.i188
    i32 71, label %sw.bb65.i.i.i189
    i32 72, label %sw.bb66.i.i.i190
    i32 73, label %sw.bb67.i.i.i191
    i32 74, label %sw.bb68.i.i.i192
    i32 75, label %sw.bb69.i.i.i193
    i32 76, label %sw.bb70.i.i.i194
    i32 77, label %sw.bb71.i.i.i195
    i32 78, label %sw.bb72.i.i.i196
    i32 79, label %sw.bb73.i.i.i197
    i32 150, label %sw.bb144.i.i.i202
    i32 148, label %sw.bb142.i.i.i200
    i32 145, label %sw.bb139.i.i.i198
  ]

sw.bb.i.i116:                                     ; preds = %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113
  %sub.i.i114 = add i32 %13, -80
  %conv.i.i115 = zext i32 %sub.i.i114 to i64
  br label %for.inc.i.i210

sw.bb2.i.i118:                                    ; preds = %for.body.i.i113
  %val_int.i.i117 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i111, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i64* %val_int.i.i117, align 8, !tbaa !8
  br label %for.inc.i.i210

sw.bb4.i.i122:                                    ; preds = %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113, %for.body.i.i113
  %sub5.i.i119 = add i32 %13, -112
  %conv6.i.i120 = zext i32 %sub5.i.i119 to i64
  %val_int10.i.i121 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i111, i64 0, i32 2, i32 1, i32 0, i32 0
  %15 = load i64* %val_int10.i.i121, align 8, !tbaa !8
  br label %for.inc.i.i210

sw.bb12.i.i125:                                   ; preds = %for.body.i.i113
  %val_int15.i.i123 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i111, i64 0, i32 2, i32 1, i32 0, i32 0
  %16 = load i64* %val_int15.i.i123, align 8, !tbaa !8
  %val_int18.i.i124 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i111, i64 0, i32 3, i32 1, i32 0, i32 0
  %17 = load i64* %val_int18.i.i124, align 8, !tbaa !8
  br label %for.inc.i.i210

sw.bb22.i.i128:                                   ; preds = %for.body.i.i113
  %val_unsigned.i.i127 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i111, i64 0, i32 2, i32 1, i32 0, i32 0
  %18 = load i64* %val_unsigned.i.i127, align 8, !tbaa !8
  br label %for.inc.i.i210

sw.bb6.i.i.i131:                                  ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb7.i.i.i132:                                  ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb8.i.i.i133:                                  ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb9.i.i.i134:                                  ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb10.i.i.i135:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb11.i.i.i136:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb12.i.i.i137:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb13.i.i.i138:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb14.i.i.i139:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb15.i.i.i140:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb16.i.i.i141:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb17.i.i.i142:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb18.i.i.i143:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb19.i.i.i144:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb20.i.i.i145:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb21.i.i.i146:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb22.i.i.i147:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb23.i.i.i148:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb24.i.i.i149:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb25.i.i.i150:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb26.i.i.i151:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb27.i.i.i152:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb28.i.i.i153:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb30.i.i.i154:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb31.i.i.i155:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb32.i.i.i156:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb33.i.i.i157:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb34.i.i.i158:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb35.i.i.i159:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb36.i.i.i160:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb37.i.i.i161:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb38.i.i.i162:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb39.i.i.i163:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb40.i.i.i164:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb41.i.i.i165:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb42.i.i.i166:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb43.i.i.i167:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb44.i.i.i168:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb45.i.i.i169:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb46.i.i.i170:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb47.i.i.i171:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb48.i.i.i172:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb49.i.i.i173:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb50.i.i.i174:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb51.i.i.i175:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb52.i.i.i176:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb53.i.i.i177:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb54.i.i.i178:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb55.i.i.i179:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb56.i.i.i180:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb57.i.i.i181:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb58.i.i.i182:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb59.i.i.i183:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb60.i.i.i184:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb61.i.i.i185:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb62.i.i.i186:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb63.i.i.i187:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb64.i.i.i188:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb65.i.i.i189:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb66.i.i.i190:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb67.i.i.i191:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb68.i.i.i192:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb69.i.i.i193:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb70.i.i.i194:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb71.i.i.i195:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb72.i.i.i196:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb73.i.i.i197:                                 ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb139.i.i.i198:                                ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb141.i.i.i199:                                ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb142.i.i.i200:                                ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb143.i.i.i201:                                ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.bb144.i.i.i202:                                ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

sw.default.i.i.i203:                              ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

dwarf_stack_op_name.exit.loopexit.i.i204:         ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

dwarf_stack_op_name.exit.i.loopexit.i205:         ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

dwarf_stack_op_name.exit.i.i207.loopexit:         ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

dwarf_stack_op_name.exit.i.i207.loopexit288:      ; preds = %for.body.i.i113
  br label %dwarf_stack_op_name.exit.i.i207

dwarf_stack_op_name.exit.i.i207:                  ; preds = %for.body.i.i113, %dwarf_stack_op_name.exit.i.i207.loopexit288, %dwarf_stack_op_name.exit.i.i207.loopexit, %dwarf_stack_op_name.exit.i.loopexit.i205, %dwarf_stack_op_name.exit.loopexit.i.i204, %sw.default.i.i.i203, %sw.bb144.i.i.i202, %sw.bb143.i.i.i201, %sw.bb142.i.i.i200, %sw.bb141.i.i.i199, %sw.bb139.i.i.i198, %sw.bb73.i.i.i197, %sw.bb72.i.i.i196, %sw.bb71.i.i.i195, %sw.bb70.i.i.i194, %sw.bb69.i.i.i193, %sw.bb68.i.i.i192, %sw.bb67.i.i.i191, %sw.bb66.i.i.i190, %sw.bb65.i.i.i189, %sw.bb64.i.i.i188, %sw.bb63.i.i.i187, %sw.bb62.i.i.i186, %sw.bb61.i.i.i185, %sw.bb60.i.i.i184, %sw.bb59.i.i.i183, %sw.bb58.i.i.i182, %sw.bb57.i.i.i181, %sw.bb56.i.i.i180, %sw.bb55.i.i.i179, %sw.bb54.i.i.i178, %sw.bb53.i.i.i177, %sw.bb52.i.i.i176, %sw.bb51.i.i.i175, %sw.bb50.i.i.i174, %sw.bb49.i.i.i173, %sw.bb48.i.i.i172, %sw.bb47.i.i.i171, %sw.bb46.i.i.i170, %sw.bb45.i.i.i169, %sw.bb44.i.i.i168, %sw.bb43.i.i.i167, %sw.bb42.i.i.i166, %sw.bb41.i.i.i165, %sw.bb40.i.i.i164, %sw.bb39.i.i.i163, %sw.bb38.i.i.i162, %sw.bb37.i.i.i161, %sw.bb36.i.i.i160, %sw.bb35.i.i.i159, %sw.bb34.i.i.i158, %sw.bb33.i.i.i157, %sw.bb32.i.i.i156, %sw.bb31.i.i.i155, %sw.bb30.i.i.i154, %sw.bb28.i.i.i153, %sw.bb27.i.i.i152, %sw.bb26.i.i.i151, %sw.bb25.i.i.i150, %sw.bb24.i.i.i149, %sw.bb23.i.i.i148, %sw.bb22.i.i.i147, %sw.bb21.i.i.i146, %sw.bb20.i.i.i145, %sw.bb19.i.i.i144, %sw.bb18.i.i.i143, %sw.bb17.i.i.i142, %sw.bb16.i.i.i141, %sw.bb15.i.i.i140, %sw.bb14.i.i.i139, %sw.bb13.i.i.i138, %sw.bb12.i.i.i137, %sw.bb11.i.i.i136, %sw.bb10.i.i.i135, %sw.bb9.i.i.i134, %sw.bb8.i.i.i133, %sw.bb7.i.i.i132, %sw.bb6.i.i.i131
  %retval.0.i.i.i206 = phi i8* [ getelementptr inbounds ([13 x i8]* @.str365, i64 0, i64 0), %sw.default.i.i.i203 ], [ getelementptr inbounds ([10 x i8]* @.str364, i64 0, i64 0), %sw.bb144.i.i.i202 ], [ getelementptr inbounds ([18 x i8]* @.str363, i64 0, i64 0), %sw.bb143.i.i.i201 ], [ getelementptr inbounds ([17 x i8]* @.str362, i64 0, i64 0), %sw.bb142.i.i.i200 ], [ getelementptr inbounds ([12 x i8]* @.str361, i64 0, i64 0), %sw.bb141.i.i.i199 ], [ getelementptr inbounds ([12 x i8]* @.str359, i64 0, i64 0), %sw.bb139.i.i.i198 ], [ getelementptr inbounds ([12 x i8]* @.str293, i64 0, i64 0), %sw.bb73.i.i.i197 ], [ getelementptr inbounds ([12 x i8]* @.str292, i64 0, i64 0), %sw.bb72.i.i.i196 ], [ getelementptr inbounds ([12 x i8]* @.str291, i64 0, i64 0), %sw.bb71.i.i.i195 ], [ getelementptr inbounds ([12 x i8]* @.str290, i64 0, i64 0), %sw.bb70.i.i.i194 ], [ getelementptr inbounds ([12 x i8]* @.str289, i64 0, i64 0), %sw.bb69.i.i.i193 ], [ getelementptr inbounds ([12 x i8]* @.str288, i64 0, i64 0), %sw.bb68.i.i.i192 ], [ getelementptr inbounds ([12 x i8]* @.str287, i64 0, i64 0), %sw.bb67.i.i.i191 ], [ getelementptr inbounds ([12 x i8]* @.str286, i64 0, i64 0), %sw.bb66.i.i.i190 ], [ getelementptr inbounds ([12 x i8]* @.str285, i64 0, i64 0), %sw.bb65.i.i.i189 ], [ getelementptr inbounds ([12 x i8]* @.str284, i64 0, i64 0), %sw.bb64.i.i.i188 ], [ getelementptr inbounds ([12 x i8]* @.str283, i64 0, i64 0), %sw.bb63.i.i.i187 ], [ getelementptr inbounds ([12 x i8]* @.str282, i64 0, i64 0), %sw.bb62.i.i.i186 ], [ getelementptr inbounds ([12 x i8]* @.str281, i64 0, i64 0), %sw.bb61.i.i.i185 ], [ getelementptr inbounds ([12 x i8]* @.str280, i64 0, i64 0), %sw.bb60.i.i.i184 ], [ getelementptr inbounds ([12 x i8]* @.str279, i64 0, i64 0), %sw.bb59.i.i.i183 ], [ getelementptr inbounds ([12 x i8]* @.str278, i64 0, i64 0), %sw.bb58.i.i.i182 ], [ getelementptr inbounds ([12 x i8]* @.str277, i64 0, i64 0), %sw.bb57.i.i.i181 ], [ getelementptr inbounds ([12 x i8]* @.str276, i64 0, i64 0), %sw.bb56.i.i.i180 ], [ getelementptr inbounds ([12 x i8]* @.str275, i64 0, i64 0), %sw.bb55.i.i.i179 ], [ getelementptr inbounds ([12 x i8]* @.str274, i64 0, i64 0), %sw.bb54.i.i.i178 ], [ getelementptr inbounds ([12 x i8]* @.str273, i64 0, i64 0), %sw.bb53.i.i.i177 ], [ getelementptr inbounds ([12 x i8]* @.str272, i64 0, i64 0), %sw.bb52.i.i.i176 ], [ getelementptr inbounds ([11 x i8]* @.str271, i64 0, i64 0), %sw.bb51.i.i.i175 ], [ getelementptr inbounds ([11 x i8]* @.str270, i64 0, i64 0), %sw.bb50.i.i.i174 ], [ getelementptr inbounds ([11 x i8]* @.str269, i64 0, i64 0), %sw.bb49.i.i.i173 ], [ getelementptr inbounds ([11 x i8]* @.str268, i64 0, i64 0), %sw.bb48.i.i.i172 ], [ getelementptr inbounds ([11 x i8]* @.str267, i64 0, i64 0), %sw.bb47.i.i.i171 ], [ getelementptr inbounds ([11 x i8]* @.str266, i64 0, i64 0), %sw.bb46.i.i.i170 ], [ getelementptr inbounds ([11 x i8]* @.str265, i64 0, i64 0), %sw.bb45.i.i.i169 ], [ getelementptr inbounds ([11 x i8]* @.str264, i64 0, i64 0), %sw.bb44.i.i.i168 ], [ getelementptr inbounds ([11 x i8]* @.str263, i64 0, i64 0), %sw.bb43.i.i.i167 ], [ getelementptr inbounds ([11 x i8]* @.str262, i64 0, i64 0), %sw.bb42.i.i.i166 ], [ getelementptr inbounds ([11 x i8]* @.str261, i64 0, i64 0), %sw.bb41.i.i.i165 ], [ getelementptr inbounds ([9 x i8]* @.str260, i64 0, i64 0), %sw.bb40.i.i.i164 ], [ getelementptr inbounds ([9 x i8]* @.str259, i64 0, i64 0), %sw.bb39.i.i.i163 ], [ getelementptr inbounds ([9 x i8]* @.str258, i64 0, i64 0), %sw.bb38.i.i.i162 ], [ getelementptr inbounds ([9 x i8]* @.str257, i64 0, i64 0), %sw.bb37.i.i.i161 ], [ getelementptr inbounds ([9 x i8]* @.str256, i64 0, i64 0), %sw.bb36.i.i.i160 ], [ getelementptr inbounds ([9 x i8]* @.str255, i64 0, i64 0), %sw.bb35.i.i.i159 ], [ getelementptr inbounds ([10 x i8]* @.str254, i64 0, i64 0), %sw.bb34.i.i.i158 ], [ getelementptr inbounds ([10 x i8]* @.str253, i64 0, i64 0), %sw.bb33.i.i.i157 ], [ getelementptr inbounds ([11 x i8]* @.str252, i64 0, i64 0), %sw.bb32.i.i.i156 ], [ getelementptr inbounds ([10 x i8]* @.str251, i64 0, i64 0), %sw.bb31.i.i.i155 ], [ getelementptr inbounds ([10 x i8]* @.str250, i64 0, i64 0), %sw.bb30.i.i.i154 ], [ getelementptr inbounds ([11 x i8]* @.str248, i64 0, i64 0), %sw.bb28.i.i.i153 ], [ getelementptr inbounds ([9 x i8]* @.str247, i64 0, i64 0), %sw.bb27.i.i.i152 ], [ getelementptr inbounds ([10 x i8]* @.str246, i64 0, i64 0), %sw.bb26.i.i.i151 ], [ getelementptr inbounds ([10 x i8]* @.str245, i64 0, i64 0), %sw.bb25.i.i.i150 ], [ getelementptr inbounds ([10 x i8]* @.str244, i64 0, i64 0), %sw.bb24.i.i.i149 ], [ getelementptr inbounds ([10 x i8]* @.str243, i64 0, i64 0), %sw.bb23.i.i.i148 ], [ getelementptr inbounds ([12 x i8]* @.str242, i64 0, i64 0), %sw.bb22.i.i.i147 ], [ getelementptr inbounds ([10 x i8]* @.str241, i64 0, i64 0), %sw.bb21.i.i.i146 ], [ getelementptr inbounds ([10 x i8]* @.str240, i64 0, i64 0), %sw.bb20.i.i.i145 ], [ getelementptr inbounds ([10 x i8]* @.str239, i64 0, i64 0), %sw.bb19.i.i.i144 ], [ getelementptr inbounds ([13 x i8]* @.str238, i64 0, i64 0), %sw.bb18.i.i.i143 ], [ getelementptr inbounds ([10 x i8]* @.str237, i64 0, i64 0), %sw.bb17.i.i.i142 ], [ getelementptr inbounds ([11 x i8]* @.str236, i64 0, i64 0), %sw.bb16.i.i.i141 ], [ getelementptr inbounds ([11 x i8]* @.str235, i64 0, i64 0), %sw.bb15.i.i.i140 ], [ getelementptr inbounds ([11 x i8]* @.str234, i64 0, i64 0), %sw.bb14.i.i.i139 ], [ getelementptr inbounds ([11 x i8]* @.str233, i64 0, i64 0), %sw.bb13.i.i.i138 ], [ getelementptr inbounds ([10 x i8]* @.str232, i64 0, i64 0), %sw.bb12.i.i.i137 ], [ getelementptr inbounds ([13 x i8]* @.str231, i64 0, i64 0), %sw.bb11.i.i.i136 ], [ getelementptr inbounds ([13 x i8]* @.str230, i64 0, i64 0), %sw.bb10.i.i.i135 ], [ getelementptr inbounds ([14 x i8]* @.str229, i64 0, i64 0), %sw.bb9.i.i.i134 ], [ getelementptr inbounds ([14 x i8]* @.str228, i64 0, i64 0), %sw.bb8.i.i.i133 ], [ getelementptr inbounds ([14 x i8]* @.str227, i64 0, i64 0), %sw.bb7.i.i.i132 ], [ getelementptr inbounds ([14 x i8]* @.str226, i64 0, i64 0), %sw.bb6.i.i.i131 ], [ getelementptr inbounds ([11 x i8]* @.str220, i64 0, i64 0), %dwarf_stack_op_name.exit.loopexit.i.i204 ], [ getelementptr inbounds ([14 x i8]* @.str222, i64 0, i64 0), %dwarf_stack_op_name.exit.i.loopexit.i205 ], [ getelementptr inbounds ([14 x i8]* @.str223, i64 0, i64 0), %dwarf_stack_op_name.exit.i.i207.loopexit ], [ getelementptr inbounds ([14 x i8]* @.str224, i64 0, i64 0), %dwarf_stack_op_name.exit.i.i207.loopexit288 ], [ getelementptr inbounds ([14 x i8]* @.str225, i64 0, i64 0), %for.body.i.i113 ]
  tail call void (i8*, ...)* @internal_error(i8* getelementptr inbounds ([30 x i8]* @.str497, i64 0, i64 0), i8* %retval.0.i.i.i206) #7
  unreachable

for.inc.i.i210:                                   ; preds = %for.body.i.i113, %sw.bb22.i.i128, %sw.bb12.i.i125, %sw.bb4.i.i122, %sw.bb2.i.i118, %sw.bb.i.i116
  %old_cfa.sroa.34.8.oldload253 = phi i32 [ %old_cfa.sroa.34.8.oldload254, %sw.bb22.i.i128 ], [ %old_cfa.sroa.34.8.oldload254, %sw.bb12.i.i125 ], [ %old_cfa.sroa.34.8.oldload254, %sw.bb4.i.i122 ], [ %old_cfa.sroa.34.8.oldload254, %sw.bb2.i.i118 ], [ %old_cfa.sroa.34.8.oldload254, %sw.bb.i.i116 ], [ 1, %for.body.i.i113 ]
  %19 = phi i64 [ %11, %sw.bb22.i.i128 ], [ %17, %sw.bb12.i.i125 ], [ %15, %sw.bb4.i.i122 ], [ %11, %sw.bb2.i.i118 ], [ %11, %sw.bb.i.i116 ], [ %11, %for.body.i.i113 ]
  %20 = phi i64 [ %18, %sw.bb22.i.i128 ], [ %12, %sw.bb12.i.i125 ], [ %12, %sw.bb4.i.i122 ], [ %12, %sw.bb2.i.i118 ], [ %12, %sw.bb.i.i116 ], [ %12, %for.body.i.i113 ]
  %old_cfa.sroa.0.0.load246 = phi i64 [ %old_cfa.sroa.0.0.load247, %sw.bb22.i.i128 ], [ %16, %sw.bb12.i.i125 ], [ %conv6.i.i120, %sw.bb4.i.i122 ], [ %14, %sw.bb2.i.i118 ], [ %conv.i.i115, %sw.bb.i.i116 ], [ %old_cfa.sroa.0.0.load247, %for.body.i.i113 ]
  %dw_loc_next.i.i208 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i111, i64 0, i32 0
  %21 = load %struct.dw_loc_descr_struct** %dw_loc_next.i.i208, align 8, !tbaa !21
  %cmp.i.i209 = icmp eq %struct.dw_loc_descr_struct* %21, null
  br i1 %cmp.i.i209, label %lookup_cfa_1.exit211, label %for.body.i.i113

lookup_cfa_1.exit211:                             ; preds = %for.inc.i.i210, %for.body.i, %sw.bb.i94, %sw.bb1.i97, %sw.bb3.i102, %sw.bb9.i110
  %old_cfa.sroa.34.8.oldload248 = phi i32 [ %old_cfa.sroa.34.8.oldload249, %for.body.i ], [ %old_cfa.sroa.34.8.oldload249, %sw.bb.i94 ], [ %old_cfa.sroa.34.8.oldload249, %sw.bb1.i97 ], [ %old_cfa.sroa.34.8.oldload249, %sw.bb3.i102 ], [ 0, %sw.bb9.i110 ], [ %old_cfa.sroa.34.8.oldload253, %for.inc.i.i210 ]
  %22 = phi i64 [ %3, %for.body.i ], [ %3, %sw.bb.i94 ], [ %3, %sw.bb1.i97 ], [ %3, %sw.bb3.i102 ], [ 0, %sw.bb9.i110 ], [ %19, %for.inc.i.i210 ]
  %23 = phi i64 [ %4, %for.body.i ], [ %6, %sw.bb.i94 ], [ %4, %sw.bb1.i97 ], [ %9, %sw.bb3.i102 ], [ 0, %sw.bb9.i110 ], [ %20, %for.inc.i.i210 ]
  %old_cfa.sroa.0.0.load243 = phi i64 [ %old_cfa.sroa.0.0.load244, %for.body.i ], [ %old_cfa.sroa.0.0.load244, %sw.bb.i94 ], [ %7, %sw.bb1.i97 ], [ %8, %sw.bb3.i102 ], [ -1, %sw.bb9.i110 ], [ %old_cfa.sroa.0.0.load246, %for.inc.i.i210 ]
  %dw_cfi_next.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 0
  %cfi.0.i = load %struct.dw_cfi_struct** %dw_cfi_next.i, align 8
  %tobool.i = icmp eq %struct.dw_cfi_struct* %cfi.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %lookup_cfa_1.exit211, %if.end
  %old_cfa.sroa.34.8.oldload252 = phi i32 [ 0, %if.end ], [ %old_cfa.sroa.34.8.oldload248, %lookup_cfa_1.exit211 ]
  %24 = phi i64 [ 0, %if.end ], [ %22, %lookup_cfa_1.exit211 ]
  %25 = phi i64 [ 0, %if.end ], [ %23, %lookup_cfa_1.exit211 ]
  %old_cfa.sroa.0.0.load245 = phi i64 [ -1, %if.end ], [ %old_cfa.sroa.0.0.load243, %lookup_cfa_1.exit211 ]
  %26 = load i32* @fde_table_in_use, align 4, !tbaa !4
  %tobool1.i = icmp eq i32 %26, 0
  br i1 %tobool1.i, label %lookup_cfa.exit, label %if.then.i

if.then.i:                                        ; preds = %for.end.i
  %sub.i = add i32 %26, -1
  %idxprom.i = zext i32 %sub.i to i64
  %27 = load %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  %dw_fde_cfi.i = getelementptr inbounds %struct.dw_fde_struct* %27, i64 %idxprom.i, i32 3
  %cfi.118.i = load %struct.dw_cfi_struct** %dw_fde_cfi.i, align 8
  %tobool319.i = icmp eq %struct.dw_cfi_struct* %cfi.118.i, null
  br i1 %tobool319.i, label %lookup_cfa.exit, label %for.body4.i

for.body4.i:                                      ; preds = %if.then.i, %lookup_cfa_1.exit
  %old_cfa.sroa.34.8.oldload251 = phi i32 [ %old_cfa.sroa.34.8.oldload250, %lookup_cfa_1.exit ], [ %old_cfa.sroa.34.8.oldload252, %if.then.i ]
  %28 = phi i64 [ %47, %lookup_cfa_1.exit ], [ %24, %if.then.i ]
  %29 = phi i64 [ %48, %lookup_cfa_1.exit ], [ %25, %if.then.i ]
  %old_cfa.sroa.0.0.load238 = phi i64 [ %old_cfa.sroa.0.0.load240, %lookup_cfa_1.exit ], [ %old_cfa.sroa.0.0.load245, %if.then.i ]
  %cfi.120.i = phi %struct.dw_cfi_struct* [ %cfi.1.i, %lookup_cfa_1.exit ], [ %cfi.118.i, %if.then.i ]
  %dw_cfi_opc.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 1
  %30 = load i32* %dw_cfi_opc.i, align 4, !tbaa !16
  switch i32 %30, label %lookup_cfa_1.exit [
    i32 14, label %sw.bb.i
    i32 13, label %sw.bb1.i
    i32 12, label %sw.bb3.i
    i32 15, label %sw.bb9.i
  ]

sw.bb.i:                                          ; preds = %for.body4.i
  %dw_cfi_offset.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 2, i32 0
  %31 = load i64* %dw_cfi_offset.i, align 8, !tbaa !8
  br label %lookup_cfa_1.exit

sw.bb1.i:                                         ; preds = %for.body4.i
  %dw_cfi_reg_num.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 2, i32 0
  %32 = load i64* %dw_cfi_reg_num.i, align 8, !tbaa !8
  br label %lookup_cfa_1.exit

sw.bb3.i:                                         ; preds = %for.body4.i
  %dw_cfi_reg_num5.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 2, i32 0
  %33 = load i64* %dw_cfi_reg_num5.i, align 8, !tbaa !8
  %dw_cfi_offset7.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 3, i32 0
  %34 = load i64* %dw_cfi_offset7.i, align 8, !tbaa !8
  br label %lookup_cfa_1.exit

sw.bb9.i:                                         ; preds = %for.body4.i
  %dw_cfi_oprnd110.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 2
  %dw_cfi_loc.i = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd110.i to %struct.dw_loc_descr_struct**
  %35 = load %struct.dw_loc_descr_struct** %dw_cfi_loc.i, align 8, !tbaa !6
  %cmp48.i.i = icmp eq %struct.dw_loc_descr_struct* %35, null
  br i1 %cmp48.i.i, label %lookup_cfa_1.exit, label %for.body.i.i

for.body.i.i:                                     ; preds = %sw.bb9.i, %for.inc.i.i
  %old_cfa.sroa.34.8.oldload256 = phi i32 [ %old_cfa.sroa.34.8.oldload255, %for.inc.i.i ], [ 0, %sw.bb9.i ]
  %36 = phi i64 [ %44, %for.inc.i.i ], [ 0, %sw.bb9.i ]
  %37 = phi i64 [ %45, %for.inc.i.i ], [ 0, %sw.bb9.i ]
  %old_cfa.sroa.0.0.load242 = phi i64 [ %old_cfa.sroa.0.0.load241, %for.inc.i.i ], [ -1, %sw.bb9.i ]
  %ptr.049.i.i = phi %struct.dw_loc_descr_struct* [ %46, %for.inc.i.i ], [ %35, %sw.bb9.i ]
  %dw_loc_opc.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 1
  %38 = load i32* %dw_loc_opc.i.i, align 4, !tbaa !18
  switch i32 %38, label %sw.default.i.i.i [
    i32 80, label %sw.bb.i.i
    i32 81, label %sw.bb.i.i
    i32 82, label %sw.bb.i.i
    i32 83, label %sw.bb.i.i
    i32 84, label %sw.bb.i.i
    i32 85, label %sw.bb.i.i
    i32 86, label %sw.bb.i.i
    i32 87, label %sw.bb.i.i
    i32 88, label %sw.bb.i.i
    i32 89, label %sw.bb.i.i
    i32 90, label %sw.bb.i.i
    i32 91, label %sw.bb.i.i
    i32 92, label %sw.bb.i.i
    i32 93, label %sw.bb.i.i
    i32 94, label %sw.bb.i.i
    i32 95, label %sw.bb.i.i
    i32 96, label %sw.bb.i.i
    i32 97, label %sw.bb.i.i
    i32 98, label %sw.bb.i.i
    i32 99, label %sw.bb.i.i
    i32 100, label %sw.bb.i.i
    i32 101, label %sw.bb.i.i
    i32 102, label %sw.bb.i.i
    i32 103, label %sw.bb.i.i
    i32 104, label %sw.bb.i.i
    i32 105, label %sw.bb.i.i
    i32 106, label %sw.bb.i.i
    i32 107, label %sw.bb.i.i
    i32 108, label %sw.bb.i.i
    i32 109, label %sw.bb.i.i
    i32 110, label %sw.bb.i.i
    i32 111, label %sw.bb.i.i
    i32 144, label %sw.bb2.i.i
    i32 112, label %sw.bb4.i.i
    i32 113, label %sw.bb4.i.i
    i32 114, label %sw.bb4.i.i
    i32 115, label %sw.bb4.i.i
    i32 116, label %sw.bb4.i.i
    i32 117, label %sw.bb4.i.i
    i32 118, label %sw.bb4.i.i
    i32 119, label %sw.bb4.i.i
    i32 120, label %sw.bb4.i.i
    i32 121, label %sw.bb4.i.i
    i32 122, label %sw.bb4.i.i
    i32 123, label %sw.bb4.i.i
    i32 124, label %sw.bb4.i.i
    i32 125, label %sw.bb4.i.i
    i32 126, label %sw.bb4.i.i
    i32 127, label %sw.bb4.i.i
    i32 128, label %sw.bb4.i.i
    i32 129, label %sw.bb4.i.i
    i32 130, label %sw.bb4.i.i
    i32 131, label %sw.bb4.i.i
    i32 132, label %sw.bb4.i.i
    i32 133, label %sw.bb4.i.i
    i32 134, label %sw.bb4.i.i
    i32 135, label %sw.bb4.i.i
    i32 136, label %sw.bb4.i.i
    i32 137, label %sw.bb4.i.i
    i32 138, label %sw.bb4.i.i
    i32 139, label %sw.bb4.i.i
    i32 140, label %sw.bb4.i.i
    i32 141, label %sw.bb4.i.i
    i32 142, label %sw.bb4.i.i
    i32 143, label %sw.bb4.i.i
    i32 146, label %sw.bb12.i.i
    i32 6, label %for.inc.i.i
    i32 35, label %sw.bb22.i.i
    i32 3, label %dwarf_stack_op_name.exit.loopexit.i.i
    i32 149, label %sw.bb143.i.i.i
    i32 8, label %dwarf_stack_op_name.exit.i.loopexit.i
    i32 9, label %dwarf_stack_op_name.exit.i.i.loopexit
    i32 10, label %dwarf_stack_op_name.exit.i.i.loopexit287
    i32 11, label %dwarf_stack_op_name.exit.i.i
    i32 12, label %sw.bb6.i.i.i
    i32 13, label %sw.bb7.i.i.i
    i32 14, label %sw.bb8.i.i.i
    i32 15, label %sw.bb9.i.i.i
    i32 16, label %sw.bb10.i.i.i
    i32 17, label %sw.bb11.i.i.i
    i32 18, label %sw.bb12.i.i.i
    i32 19, label %sw.bb13.i.i.i
    i32 20, label %sw.bb14.i.i.i
    i32 21, label %sw.bb15.i.i.i
    i32 22, label %sw.bb16.i.i.i
    i32 23, label %sw.bb17.i.i.i
    i32 24, label %sw.bb18.i.i.i
    i32 25, label %sw.bb19.i.i.i
    i32 26, label %sw.bb20.i.i.i
    i32 27, label %sw.bb21.i.i.i
    i32 28, label %sw.bb22.i.i.i
    i32 29, label %sw.bb23.i.i.i
    i32 30, label %sw.bb24.i.i.i
    i32 31, label %sw.bb25.i.i.i
    i32 32, label %sw.bb26.i.i.i
    i32 33, label %sw.bb27.i.i.i
    i32 34, label %sw.bb28.i.i.i
    i32 147, label %sw.bb141.i.i.i
    i32 36, label %sw.bb30.i.i.i
    i32 37, label %sw.bb31.i.i.i
    i32 38, label %sw.bb32.i.i.i
    i32 39, label %sw.bb33.i.i.i
    i32 40, label %sw.bb34.i.i.i
    i32 41, label %sw.bb35.i.i.i
    i32 42, label %sw.bb36.i.i.i
    i32 43, label %sw.bb37.i.i.i
    i32 44, label %sw.bb38.i.i.i
    i32 45, label %sw.bb39.i.i.i
    i32 46, label %sw.bb40.i.i.i
    i32 47, label %sw.bb41.i.i.i
    i32 48, label %sw.bb42.i.i.i
    i32 49, label %sw.bb43.i.i.i
    i32 50, label %sw.bb44.i.i.i
    i32 51, label %sw.bb45.i.i.i
    i32 52, label %sw.bb46.i.i.i
    i32 53, label %sw.bb47.i.i.i
    i32 54, label %sw.bb48.i.i.i
    i32 55, label %sw.bb49.i.i.i
    i32 56, label %sw.bb50.i.i.i
    i32 57, label %sw.bb51.i.i.i
    i32 58, label %sw.bb52.i.i.i
    i32 59, label %sw.bb53.i.i.i
    i32 60, label %sw.bb54.i.i.i
    i32 61, label %sw.bb55.i.i.i
    i32 62, label %sw.bb56.i.i.i
    i32 63, label %sw.bb57.i.i.i
    i32 64, label %sw.bb58.i.i.i
    i32 65, label %sw.bb59.i.i.i
    i32 66, label %sw.bb60.i.i.i
    i32 67, label %sw.bb61.i.i.i
    i32 68, label %sw.bb62.i.i.i
    i32 69, label %sw.bb63.i.i.i
    i32 70, label %sw.bb64.i.i.i
    i32 71, label %sw.bb65.i.i.i
    i32 72, label %sw.bb66.i.i.i
    i32 73, label %sw.bb67.i.i.i
    i32 74, label %sw.bb68.i.i.i
    i32 75, label %sw.bb69.i.i.i
    i32 76, label %sw.bb70.i.i.i
    i32 77, label %sw.bb71.i.i.i
    i32 78, label %sw.bb72.i.i.i
    i32 79, label %sw.bb73.i.i.i
    i32 150, label %sw.bb144.i.i.i
    i32 148, label %sw.bb142.i.i.i
    i32 145, label %sw.bb139.i.i.i
  ]

sw.bb.i.i:                                        ; preds = %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i
  %sub.i.i = add i32 %38, -80
  %conv.i.i = zext i32 %sub.i.i to i64
  br label %for.inc.i.i

sw.bb2.i.i:                                       ; preds = %for.body.i.i
  %val_int.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %39 = load i64* %val_int.i.i, align 8, !tbaa !8
  br label %for.inc.i.i

sw.bb4.i.i:                                       ; preds = %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i
  %sub5.i.i = add i32 %38, -112
  %conv6.i.i = zext i32 %sub5.i.i to i64
  %val_int10.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %40 = load i64* %val_int10.i.i, align 8, !tbaa !8
  br label %for.inc.i.i

sw.bb12.i.i:                                      ; preds = %for.body.i.i
  %val_int15.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %41 = load i64* %val_int15.i.i, align 8, !tbaa !8
  %val_int18.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 3, i32 1, i32 0, i32 0
  %42 = load i64* %val_int18.i.i, align 8, !tbaa !8
  br label %for.inc.i.i

sw.bb22.i.i:                                      ; preds = %for.body.i.i
  %val_unsigned.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %43 = load i64* %val_unsigned.i.i, align 8, !tbaa !8
  br label %for.inc.i.i

sw.bb6.i.i.i:                                     ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb7.i.i.i:                                     ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb8.i.i.i:                                     ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb9.i.i.i:                                     ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb10.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb11.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb12.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb13.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb14.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb15.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb16.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb17.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb18.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb19.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb20.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb21.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb22.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb23.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb24.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb25.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb26.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb27.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb28.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb30.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb31.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb32.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb33.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb34.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb35.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb36.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb37.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb38.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb39.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb40.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb41.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb42.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb43.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb44.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb45.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb46.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb47.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb48.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb49.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb50.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb51.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb52.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb53.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb54.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb55.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb56.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb57.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb58.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb59.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb60.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb61.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb62.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb63.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb64.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb65.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb66.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb67.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb68.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb69.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb70.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb71.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb72.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb73.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb139.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb141.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb142.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb143.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb144.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.default.i.i.i:                                 ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.loopexit.i.i:            ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.i.loopexit.i:            ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.i.i.loopexit:            ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.i.i.loopexit287:         ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.i.i:                     ; preds = %for.body.i.i, %dwarf_stack_op_name.exit.i.i.loopexit287, %dwarf_stack_op_name.exit.i.i.loopexit, %dwarf_stack_op_name.exit.i.loopexit.i, %dwarf_stack_op_name.exit.loopexit.i.i, %sw.default.i.i.i, %sw.bb144.i.i.i, %sw.bb143.i.i.i, %sw.bb142.i.i.i, %sw.bb141.i.i.i, %sw.bb139.i.i.i, %sw.bb73.i.i.i, %sw.bb72.i.i.i, %sw.bb71.i.i.i, %sw.bb70.i.i.i, %sw.bb69.i.i.i, %sw.bb68.i.i.i, %sw.bb67.i.i.i, %sw.bb66.i.i.i, %sw.bb65.i.i.i, %sw.bb64.i.i.i, %sw.bb63.i.i.i, %sw.bb62.i.i.i, %sw.bb61.i.i.i, %sw.bb60.i.i.i, %sw.bb59.i.i.i, %sw.bb58.i.i.i, %sw.bb57.i.i.i, %sw.bb56.i.i.i, %sw.bb55.i.i.i, %sw.bb54.i.i.i, %sw.bb53.i.i.i, %sw.bb52.i.i.i, %sw.bb51.i.i.i, %sw.bb50.i.i.i, %sw.bb49.i.i.i, %sw.bb48.i.i.i, %sw.bb47.i.i.i, %sw.bb46.i.i.i, %sw.bb45.i.i.i, %sw.bb44.i.i.i, %sw.bb43.i.i.i, %sw.bb42.i.i.i, %sw.bb41.i.i.i, %sw.bb40.i.i.i, %sw.bb39.i.i.i, %sw.bb38.i.i.i, %sw.bb37.i.i.i, %sw.bb36.i.i.i, %sw.bb35.i.i.i, %sw.bb34.i.i.i, %sw.bb33.i.i.i, %sw.bb32.i.i.i, %sw.bb31.i.i.i, %sw.bb30.i.i.i, %sw.bb28.i.i.i, %sw.bb27.i.i.i, %sw.bb26.i.i.i, %sw.bb25.i.i.i, %sw.bb24.i.i.i, %sw.bb23.i.i.i, %sw.bb22.i.i.i, %sw.bb21.i.i.i, %sw.bb20.i.i.i, %sw.bb19.i.i.i, %sw.bb18.i.i.i, %sw.bb17.i.i.i, %sw.bb16.i.i.i, %sw.bb15.i.i.i, %sw.bb14.i.i.i, %sw.bb13.i.i.i, %sw.bb12.i.i.i, %sw.bb11.i.i.i, %sw.bb10.i.i.i, %sw.bb9.i.i.i, %sw.bb8.i.i.i, %sw.bb7.i.i.i, %sw.bb6.i.i.i
  %retval.0.i.i.i = phi i8* [ getelementptr inbounds ([13 x i8]* @.str365, i64 0, i64 0), %sw.default.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str364, i64 0, i64 0), %sw.bb144.i.i.i ], [ getelementptr inbounds ([18 x i8]* @.str363, i64 0, i64 0), %sw.bb143.i.i.i ], [ getelementptr inbounds ([17 x i8]* @.str362, i64 0, i64 0), %sw.bb142.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str361, i64 0, i64 0), %sw.bb141.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str359, i64 0, i64 0), %sw.bb139.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str293, i64 0, i64 0), %sw.bb73.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str292, i64 0, i64 0), %sw.bb72.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str291, i64 0, i64 0), %sw.bb71.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str290, i64 0, i64 0), %sw.bb70.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str289, i64 0, i64 0), %sw.bb69.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str288, i64 0, i64 0), %sw.bb68.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str287, i64 0, i64 0), %sw.bb67.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str286, i64 0, i64 0), %sw.bb66.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str285, i64 0, i64 0), %sw.bb65.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str284, i64 0, i64 0), %sw.bb64.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str283, i64 0, i64 0), %sw.bb63.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str282, i64 0, i64 0), %sw.bb62.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str281, i64 0, i64 0), %sw.bb61.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str280, i64 0, i64 0), %sw.bb60.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str279, i64 0, i64 0), %sw.bb59.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str278, i64 0, i64 0), %sw.bb58.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str277, i64 0, i64 0), %sw.bb57.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str276, i64 0, i64 0), %sw.bb56.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str275, i64 0, i64 0), %sw.bb55.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str274, i64 0, i64 0), %sw.bb54.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str273, i64 0, i64 0), %sw.bb53.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str272, i64 0, i64 0), %sw.bb52.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str271, i64 0, i64 0), %sw.bb51.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str270, i64 0, i64 0), %sw.bb50.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str269, i64 0, i64 0), %sw.bb49.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str268, i64 0, i64 0), %sw.bb48.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str267, i64 0, i64 0), %sw.bb47.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str266, i64 0, i64 0), %sw.bb46.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str265, i64 0, i64 0), %sw.bb45.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str264, i64 0, i64 0), %sw.bb44.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str263, i64 0, i64 0), %sw.bb43.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str262, i64 0, i64 0), %sw.bb42.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str261, i64 0, i64 0), %sw.bb41.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str260, i64 0, i64 0), %sw.bb40.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str259, i64 0, i64 0), %sw.bb39.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str258, i64 0, i64 0), %sw.bb38.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str257, i64 0, i64 0), %sw.bb37.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str256, i64 0, i64 0), %sw.bb36.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str255, i64 0, i64 0), %sw.bb35.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str254, i64 0, i64 0), %sw.bb34.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str253, i64 0, i64 0), %sw.bb33.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str252, i64 0, i64 0), %sw.bb32.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str251, i64 0, i64 0), %sw.bb31.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str250, i64 0, i64 0), %sw.bb30.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str248, i64 0, i64 0), %sw.bb28.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str247, i64 0, i64 0), %sw.bb27.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str246, i64 0, i64 0), %sw.bb26.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str245, i64 0, i64 0), %sw.bb25.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str244, i64 0, i64 0), %sw.bb24.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str243, i64 0, i64 0), %sw.bb23.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str242, i64 0, i64 0), %sw.bb22.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str241, i64 0, i64 0), %sw.bb21.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str240, i64 0, i64 0), %sw.bb20.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str239, i64 0, i64 0), %sw.bb19.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str238, i64 0, i64 0), %sw.bb18.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str237, i64 0, i64 0), %sw.bb17.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str236, i64 0, i64 0), %sw.bb16.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str235, i64 0, i64 0), %sw.bb15.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str234, i64 0, i64 0), %sw.bb14.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str233, i64 0, i64 0), %sw.bb13.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str232, i64 0, i64 0), %sw.bb12.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str231, i64 0, i64 0), %sw.bb11.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str230, i64 0, i64 0), %sw.bb10.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str229, i64 0, i64 0), %sw.bb9.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str228, i64 0, i64 0), %sw.bb8.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str227, i64 0, i64 0), %sw.bb7.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str226, i64 0, i64 0), %sw.bb6.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str220, i64 0, i64 0), %dwarf_stack_op_name.exit.loopexit.i.i ], [ getelementptr inbounds ([14 x i8]* @.str222, i64 0, i64 0), %dwarf_stack_op_name.exit.i.loopexit.i ], [ getelementptr inbounds ([14 x i8]* @.str223, i64 0, i64 0), %dwarf_stack_op_name.exit.i.i.loopexit ], [ getelementptr inbounds ([14 x i8]* @.str224, i64 0, i64 0), %dwarf_stack_op_name.exit.i.i.loopexit287 ], [ getelementptr inbounds ([14 x i8]* @.str225, i64 0, i64 0), %for.body.i.i ]
  tail call void (i8*, ...)* @internal_error(i8* getelementptr inbounds ([30 x i8]* @.str497, i64 0, i64 0), i8* %retval.0.i.i.i) #7
  unreachable

for.inc.i.i:                                      ; preds = %for.body.i.i, %sw.bb22.i.i, %sw.bb12.i.i, %sw.bb4.i.i, %sw.bb2.i.i, %sw.bb.i.i
  %old_cfa.sroa.34.8.oldload255 = phi i32 [ %old_cfa.sroa.34.8.oldload256, %sw.bb22.i.i ], [ %old_cfa.sroa.34.8.oldload256, %sw.bb12.i.i ], [ %old_cfa.sroa.34.8.oldload256, %sw.bb4.i.i ], [ %old_cfa.sroa.34.8.oldload256, %sw.bb2.i.i ], [ %old_cfa.sroa.34.8.oldload256, %sw.bb.i.i ], [ 1, %for.body.i.i ]
  %44 = phi i64 [ %36, %sw.bb22.i.i ], [ %42, %sw.bb12.i.i ], [ %40, %sw.bb4.i.i ], [ %36, %sw.bb2.i.i ], [ %36, %sw.bb.i.i ], [ %36, %for.body.i.i ]
  %45 = phi i64 [ %43, %sw.bb22.i.i ], [ %37, %sw.bb12.i.i ], [ %37, %sw.bb4.i.i ], [ %37, %sw.bb2.i.i ], [ %37, %sw.bb.i.i ], [ %37, %for.body.i.i ]
  %old_cfa.sroa.0.0.load241 = phi i64 [ %old_cfa.sroa.0.0.load242, %sw.bb22.i.i ], [ %41, %sw.bb12.i.i ], [ %conv6.i.i, %sw.bb4.i.i ], [ %39, %sw.bb2.i.i ], [ %conv.i.i, %sw.bb.i.i ], [ %old_cfa.sroa.0.0.load242, %for.body.i.i ]
  %dw_loc_next.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 0
  %46 = load %struct.dw_loc_descr_struct** %dw_loc_next.i.i, align 8, !tbaa !21
  %cmp.i.i = icmp eq %struct.dw_loc_descr_struct* %46, null
  br i1 %cmp.i.i, label %lookup_cfa_1.exit, label %for.body.i.i

lookup_cfa_1.exit:                                ; preds = %for.inc.i.i, %for.body4.i, %sw.bb.i, %sw.bb1.i, %sw.bb3.i, %sw.bb9.i
  %old_cfa.sroa.34.8.oldload250 = phi i32 [ %old_cfa.sroa.34.8.oldload251, %for.body4.i ], [ %old_cfa.sroa.34.8.oldload251, %sw.bb.i ], [ %old_cfa.sroa.34.8.oldload251, %sw.bb1.i ], [ %old_cfa.sroa.34.8.oldload251, %sw.bb3.i ], [ 0, %sw.bb9.i ], [ %old_cfa.sroa.34.8.oldload255, %for.inc.i.i ]
  %47 = phi i64 [ %28, %for.body4.i ], [ %28, %sw.bb.i ], [ %28, %sw.bb1.i ], [ %28, %sw.bb3.i ], [ 0, %sw.bb9.i ], [ %44, %for.inc.i.i ]
  %48 = phi i64 [ %29, %for.body4.i ], [ %31, %sw.bb.i ], [ %29, %sw.bb1.i ], [ %34, %sw.bb3.i ], [ 0, %sw.bb9.i ], [ %45, %for.inc.i.i ]
  %old_cfa.sroa.0.0.load240 = phi i64 [ %old_cfa.sroa.0.0.load238, %for.body4.i ], [ %old_cfa.sroa.0.0.load238, %sw.bb.i ], [ %32, %sw.bb1.i ], [ %33, %sw.bb3.i ], [ -1, %sw.bb9.i ], [ %old_cfa.sroa.0.0.load241, %for.inc.i.i ]
  %dw_cfi_next6.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 0
  %cfi.1.i = load %struct.dw_cfi_struct** %dw_cfi_next6.i, align 8
  %tobool3.i = icmp eq %struct.dw_cfi_struct* %cfi.1.i, null
  br i1 %tobool3.i, label %lookup_cfa.exit, label %for.body4.i

lookup_cfa.exit:                                  ; preds = %lookup_cfa_1.exit, %for.end.i, %if.then.i
  %old_cfa.sroa.34.8.oldload257 = phi i32 [ %old_cfa.sroa.34.8.oldload252, %for.end.i ], [ %old_cfa.sroa.34.8.oldload252, %if.then.i ], [ %old_cfa.sroa.34.8.oldload250, %lookup_cfa_1.exit ]
  %49 = phi i64 [ %24, %for.end.i ], [ %24, %if.then.i ], [ %47, %lookup_cfa_1.exit ]
  %50 = phi i64 [ %25, %for.end.i ], [ %25, %if.then.i ], [ %48, %lookup_cfa_1.exit ]
  %old_cfa.sroa.0.0.load239 = phi i64 [ %old_cfa.sroa.0.0.load245, %for.end.i ], [ %old_cfa.sroa.0.0.load245, %if.then.i ], [ %old_cfa.sroa.0.0.load240, %lookup_cfa_1.exit ]
  %cmp8 = icmp eq i64 %conv, %old_cfa.sroa.0.0.load239
  %cmp13 = icmp eq i64 %loc.sroa.9.0.copyload, %50
  %or.cond265 = and i1 %cmp8, %cmp13
  %cmp18 = icmp eq i32 %loc.sroa.17.0.copyload, %old_cfa.sroa.34.8.oldload257
  %or.cond266 = and i1 %or.cond265, %cmp18
  %cmp25 = icmp eq i64 %loc.sroa.15.0.copyload, %49
  %or.cond267 = or i1 %cmp1, %cmp25
  %or.cond286 = and i1 %or.cond266, %or.cond267
  br i1 %or.cond286, label %return, label %if.end28

if.end28:                                         ; preds = %lookup_cfa.exit
  %call.i = tail call noalias i8* @xmalloc(i64 32) #5
  %51 = bitcast i8* %call.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i82 = bitcast i8* %call.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i82, align 8, !tbaa !22
  %dw_cfi_oprnd1.i = getelementptr inbounds i8* %call.i, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* %dw_cfi_oprnd1.i, i8 0, i64 16, i32 8, i1 false) #5
  %or.cond268 = and i1 %cmp8, %cmp1
  br i1 %or.cond268, label %if.then36, label %if.else

if.then36:                                        ; preds = %if.end28
  %dw_cfi_opc = getelementptr inbounds i8* %call.i, i64 8
  %52 = bitcast i8* %dw_cfi_opc to i32*
  store i32 14, i32* %52, align 4, !tbaa !16
  %53 = bitcast i8* %dw_cfi_oprnd1.i to i64*
  store i64 %loc.sroa.9.0.copyload, i64* %53, align 8, !tbaa !8
  br label %if.end70

if.else:                                          ; preds = %if.end28
  %cmp40 = icmp ne i64 %loc.sroa.9.0.copyload, %50
  %cmp44 = icmp eq i64 %old_cfa.sroa.0.0.load239, -1
  %or.cond = or i1 %cmp40, %cmp44
  %dw_cfi_opc58 = getelementptr inbounds i8* %call.i, i64 8
  %54 = bitcast i8* %dw_cfi_opc58 to i32*
  br i1 %or.cond, label %if.else53, label %land.lhs.true46

land.lhs.true46:                                  ; preds = %if.else
  br i1 %cmp1, label %if.then49, label %if.else64

if.then49:                                        ; preds = %land.lhs.true46
  store i32 13, i32* %54, align 4, !tbaa !16
  %55 = bitcast i8* %dw_cfi_oprnd1.i to i64*
  store i64 %conv, i64* %55, align 8, !tbaa !8
  br label %if.end70

if.else53:                                        ; preds = %if.else
  br i1 %cmp1, label %if.then57, label %if.else64.thread

if.else64.thread:                                 ; preds = %if.else53
  store i32 15, i32* %54, align 4, !tbaa !16
  %head.i.0..sroa_cast262 = bitcast %struct.dw_loc_descr_struct** %head.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %head.i.0..sroa_cast262)
  br label %if.end.i

if.then57:                                        ; preds = %if.else53
  store i32 12, i32* %54, align 4, !tbaa !16
  %56 = bitcast i8* %dw_cfi_oprnd1.i to i64*
  store i64 %conv, i64* %56, align 8, !tbaa !8
  %dw_cfi_offset63 = getelementptr inbounds i8* %call.i, i64 24
  %57 = bitcast i8* %dw_cfi_offset63 to i64*
  store i64 %loc.sroa.9.0.copyload, i64* %57, align 8, !tbaa !8
  br label %if.end70

if.else64:                                        ; preds = %land.lhs.true46
  store i32 15, i32* %54, align 4, !tbaa !16
  %head.i.0..sroa_cast = bitcast %struct.dw_loc_descr_struct** %head.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %head.i.0..sroa_cast)
  br label %if.end.i

if.end.i:                                         ; preds = %if.else64, %if.else64.thread
  %head.i.0..sroa_cast263 = phi i8* [ %head.i.0..sroa_cast262, %if.else64.thread ], [ %head.i.0..sroa_cast, %if.else64 ]
  %tobool.i84 = icmp eq i64 %loc.sroa.15.0.copyload, 0
  %cmp2.i = icmp ult i32 %cond, 32
  br i1 %tobool.i84, label %if.else10.i, label %if.then1.i

if.then1.i:                                       ; preds = %if.end.i
  br i1 %cmp2.i, label %if.then3.i, label %if.else.i

if.then3.i:                                       ; preds = %if.then1.i
  %add.i = add i32 %cond, 112
  %call.i.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %58 = bitcast i8* %call.i.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i.i86 = getelementptr inbounds i8* %call.i.i, i64 8
  %59 = bitcast i8* %dw_loc_opc.i.i86 to i32*
  store i32 %add.i, i32* %59, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_loc_oprnd1.i.i to i32*
  store i32 6, i32* %val_class.i.i, align 4, !tbaa !23
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_unsigned.i.i87 = bitcast i8* %v.i.i to i64*
  store i64 %loc.sroa.15.0.copyload, i64* %val_unsigned.i.i87, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %val_class2.i.i = bitcast i8* %dw_loc_oprnd2.i.i to i32*
  store i32 6, i32* %val_class2.i.i, align 4, !tbaa !24
  %v4.i.i = getelementptr inbounds i8* %call.i.i, i64 48
  %val_unsigned5.i.i = bitcast i8* %v4.i.i to i64*
  store i64 0, i64* %val_unsigned5.i.i, align 8, !tbaa !8
  store %struct.dw_loc_descr_struct* %58, %struct.dw_loc_descr_struct** %head.i, align 8
  br label %if.end23.i

if.else.i:                                        ; preds = %if.then1.i
  %call.i39.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %60 = bitcast i8* %call.i39.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i40.i = getelementptr inbounds i8* %call.i39.i, i64 8
  %61 = bitcast i8* %dw_loc_opc.i40.i to i32*
  store i32 146, i32* %61, align 4, !tbaa !18
  %dw_loc_oprnd1.i41.i = getelementptr inbounds i8* %call.i39.i, i64 16
  %val_class.i42.i = bitcast i8* %dw_loc_oprnd1.i41.i to i32*
  store i32 6, i32* %val_class.i42.i, align 4, !tbaa !23
  %v.i43.i = getelementptr inbounds i8* %call.i39.i, i64 24
  %val_unsigned.i44.i = bitcast i8* %v.i43.i to i64*
  store i64 %conv, i64* %val_unsigned.i44.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i45.i = getelementptr inbounds i8* %call.i39.i, i64 40
  %val_class2.i46.i = bitcast i8* %dw_loc_oprnd2.i45.i to i32*
  store i32 6, i32* %val_class2.i46.i, align 4, !tbaa !24
  %v4.i47.i = getelementptr inbounds i8* %call.i39.i, i64 48
  %val_unsigned5.i48.i = bitcast i8* %v4.i47.i to i64*
  store i64 %loc.sroa.15.0.copyload, i64* %val_unsigned5.i48.i, align 8, !tbaa !8
  store %struct.dw_loc_descr_struct* %60, %struct.dw_loc_descr_struct** %head.i, align 8
  br label %if.end23.i

if.else10.i:                                      ; preds = %if.end.i
  br i1 %cmp2.i, label %if.then14.i, label %if.else19.i

if.then14.i:                                      ; preds = %if.else10.i
  %add16.i = add i32 %cond, 80
  %call.i49.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %62 = bitcast i8* %call.i49.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i50.i = getelementptr inbounds i8* %call.i49.i, i64 8
  %63 = bitcast i8* %dw_loc_opc.i50.i to i32*
  store i32 %add16.i, i32* %63, align 4, !tbaa !18
  %dw_loc_oprnd1.i51.i = getelementptr inbounds i8* %call.i49.i, i64 16
  %val_class.i52.i = bitcast i8* %dw_loc_oprnd1.i51.i to i32*
  store i32 6, i32* %val_class.i52.i, align 4, !tbaa !23
  %v.i53.i = getelementptr inbounds i8* %call.i49.i, i64 24
  %val_unsigned.i54.i = bitcast i8* %v.i53.i to i64*
  store i64 0, i64* %val_unsigned.i54.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i55.i = getelementptr inbounds i8* %call.i49.i, i64 40
  %val_class2.i56.i = bitcast i8* %dw_loc_oprnd2.i55.i to i32*
  store i32 6, i32* %val_class2.i56.i, align 4, !tbaa !24
  %v4.i57.i = getelementptr inbounds i8* %call.i49.i, i64 48
  %val_unsigned5.i58.i = bitcast i8* %v4.i57.i to i64*
  store i64 0, i64* %val_unsigned5.i58.i, align 8, !tbaa !8
  store %struct.dw_loc_descr_struct* %62, %struct.dw_loc_descr_struct** %head.i, align 8
  br label %if.end23.i

if.else19.i:                                      ; preds = %if.else10.i
  %call.i59.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %64 = bitcast i8* %call.i59.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i60.i = getelementptr inbounds i8* %call.i59.i, i64 8
  %65 = bitcast i8* %dw_loc_opc.i60.i to i32*
  store i32 144, i32* %65, align 4, !tbaa !18
  %dw_loc_oprnd1.i61.i = getelementptr inbounds i8* %call.i59.i, i64 16
  %val_class.i62.i = bitcast i8* %dw_loc_oprnd1.i61.i to i32*
  store i32 6, i32* %val_class.i62.i, align 4, !tbaa !23
  %v.i63.i = getelementptr inbounds i8* %call.i59.i, i64 24
  %val_unsigned.i64.i = bitcast i8* %v.i63.i to i64*
  store i64 %conv, i64* %val_unsigned.i64.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i65.i = getelementptr inbounds i8* %call.i59.i, i64 40
  %val_class2.i66.i = bitcast i8* %dw_loc_oprnd2.i65.i to i32*
  store i32 6, i32* %val_class2.i66.i, align 4, !tbaa !24
  %v4.i67.i = getelementptr inbounds i8* %call.i59.i, i64 48
  %val_unsigned5.i68.i = bitcast i8* %v4.i67.i to i64*
  store i64 0, i64* %val_unsigned5.i68.i, align 8, !tbaa !8
  store %struct.dw_loc_descr_struct* %64, %struct.dw_loc_descr_struct** %head.i, align 8
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.else19.i, %if.then14.i, %if.else.i, %if.then3.i
  %head.0..i = phi %struct.dw_loc_descr_struct* [ %62, %if.then14.i ], [ %64, %if.else19.i ], [ %58, %if.then3.i ], [ %60, %if.else.i ]
  %val_class.i = getelementptr inbounds %struct.dw_loc_descr_struct* %head.0..i, i64 0, i32 2, i32 0
  store i32 5, i32* %val_class.i, align 4, !tbaa !23
  %call.i69.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i70.i = getelementptr inbounds i8* %call.i69.i, i64 8
  %66 = bitcast i8* %dw_loc_opc.i70.i to i32*
  store i32 6, i32* %66, align 4, !tbaa !18
  %dw_loc_oprnd1.i71.i = getelementptr inbounds i8* %call.i69.i, i64 16
  %val_class.i72.i = bitcast i8* %dw_loc_oprnd1.i71.i to i32*
  store i32 6, i32* %val_class.i72.i, align 4, !tbaa !23
  %v.i73.i = getelementptr inbounds i8* %call.i69.i, i64 24
  %val_unsigned.i74.i = bitcast i8* %v.i73.i to i64*
  store i64 0, i64* %val_unsigned.i74.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i75.i = getelementptr inbounds i8* %call.i69.i, i64 40
  %val_class2.i76.i = bitcast i8* %dw_loc_oprnd2.i75.i to i32*
  store i32 6, i32* %val_class2.i76.i, align 4, !tbaa !24
  %v4.i77.i = getelementptr inbounds i8* %call.i69.i, i64 48
  %val_unsigned5.i78.i = bitcast i8* %v4.i77.i to i64*
  store i64 0, i64* %val_unsigned5.i78.i, align 8, !tbaa !8
  %cmp.i.i88276 = icmp eq %struct.dw_loc_descr_struct* %head.0..i, null
  br i1 %cmp.i.i88276, label %add_loc_descr.exit.i, label %for.cond.i.for.cond.i_crit_edge.i

for.cond.i.for.cond.i_crit_edge.i:                ; preds = %if.end23.i, %for.cond.i.for.cond.i_crit_edge.i
  %head.0..i.pn = phi %struct.dw_loc_descr_struct* [ %.pre.i, %for.cond.i.for.cond.i_crit_edge.i ], [ %head.0..i, %if.end23.i ]
  %dw_loc_next.i.i89278 = getelementptr inbounds %struct.dw_loc_descr_struct* %head.0..i.pn, i64 0, i32 0
  %.pre.i = load %struct.dw_loc_descr_struct** %dw_loc_next.i.i89278, align 8, !tbaa !6
  %cmp.i.i88 = icmp eq %struct.dw_loc_descr_struct* %.pre.i, null
  br i1 %cmp.i.i88, label %add_loc_descr.exit.i, label %for.cond.i.for.cond.i_crit_edge.i

add_loc_descr.exit.i:                             ; preds = %for.cond.i.for.cond.i_crit_edge.i, %if.end23.i
  %d.0.i.i.lcssa = phi %struct.dw_loc_descr_struct** [ %head.i, %if.end23.i ], [ %dw_loc_next.i.i89278, %for.cond.i.for.cond.i_crit_edge.i ]
  %67 = bitcast i8* %call.i69.i to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %67, %struct.dw_loc_descr_struct** %d.0.i.i.lcssa, align 8, !tbaa !6
  %cmp25.i = icmp eq i64 %loc.sroa.9.0.copyload, 0
  br i1 %cmp25.i, label %build_cfa_loc.exit, label %if.then27.i

if.then27.i:                                      ; preds = %add_loc_descr.exit.i
  %call.i84.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i85.i = getelementptr inbounds i8* %call.i84.i, i64 8
  %68 = bitcast i8* %dw_loc_opc.i85.i to i32*
  store i32 35, i32* %68, align 4, !tbaa !18
  %dw_loc_oprnd1.i86.i = getelementptr inbounds i8* %call.i84.i, i64 16
  %val_class.i87.i = bitcast i8* %dw_loc_oprnd1.i86.i to i32*
  store i32 6, i32* %val_class.i87.i, align 4, !tbaa !23
  %v.i88.i = getelementptr inbounds i8* %call.i84.i, i64 24
  %val_unsigned.i89.i = bitcast i8* %v.i88.i to i64*
  store i64 %loc.sroa.9.0.copyload, i64* %val_unsigned.i89.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i90.i = getelementptr inbounds i8* %call.i84.i, i64 40
  %val_class2.i91.i = bitcast i8* %dw_loc_oprnd2.i90.i to i32*
  store i32 6, i32* %val_class2.i91.i, align 4, !tbaa !24
  %v4.i92.i = getelementptr inbounds i8* %call.i84.i, i64 48
  %val_unsigned5.i93.i = bitcast i8* %v4.i92.i to i64*
  store i64 0, i64* %val_unsigned5.i93.i, align 8, !tbaa !8
  br label %for.cond.i82.i

for.cond.i82.i:                                   ; preds = %for.cond.i82.i, %if.then27.i
  %d.0.i79.i = phi %struct.dw_loc_descr_struct** [ %head.i, %if.then27.i ], [ %dw_loc_next.i81.i, %for.cond.i82.i ]
  %69 = load %struct.dw_loc_descr_struct** %d.0.i79.i, align 8, !tbaa !6
  %cmp.i80.i = icmp eq %struct.dw_loc_descr_struct* %69, null
  %dw_loc_next.i81.i = getelementptr inbounds %struct.dw_loc_descr_struct* %69, i64 0, i32 0
  br i1 %cmp.i80.i, label %add_loc_descr.exit83.i, label %for.cond.i82.i

add_loc_descr.exit83.i:                           ; preds = %for.cond.i82.i
  %70 = bitcast i8* %call.i84.i to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %70, %struct.dw_loc_descr_struct** %d.0.i79.i, align 8, !tbaa !6
  br label %build_cfa_loc.exit

build_cfa_loc.exit:                               ; preds = %add_loc_descr.exit.i, %add_loc_descr.exit83.i
  %head.i.0.head.0.94.i = load %struct.dw_loc_descr_struct** %head.i, align 8
  call void @llvm.lifetime.end(i64 8, i8* %head.i.0..sroa_cast263)
  %71 = bitcast i8* %dw_cfi_oprnd1.i to i64*
  %call66.c = ptrtoint %struct.dw_loc_descr_struct* %head.i.0.head.0.94.i to i64
  store i64 %call66.c, i64* %71, align 8, !tbaa !6
  br label %if.end70

if.end70:                                         ; preds = %if.then49, %build_cfa_loc.exit, %if.then57, %if.then36
  tail call fastcc void @add_fde_cfi(i8* %label, %struct.dw_cfi_struct* %51)
  br label %return

return:                                           ; preds = %lookup_cfa.exit, %if.end70
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_window_save(i8* %label) #1 {
entry:
  %call.i = tail call noalias i8* @xmalloc(i64 32) #5
  %0 = bitcast i8* %call.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i = bitcast i8* %call.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i = getelementptr inbounds i8* %call.i, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* %dw_cfi_oprnd1.i, i8 0, i64 16, i32 8, i1 false) #5
  %dw_cfi_opc = getelementptr inbounds i8* %call.i, i64 8
  %1 = bitcast i8* %dw_cfi_opc to i32*
  store i32 45, i32* %1, align 4, !tbaa !16
  tail call fastcc void @add_fde_cfi(i8* %label, %struct.dw_cfi_struct* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_fde_cfi(i8* %label, %struct.dw_cfi_struct* %cfi) #1 {
entry:
  %tobool = icmp eq i8* %label, null
  br i1 %tobool, label %for.cond.i37, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32* @fde_table_in_use, align 4, !tbaa !4
  %sub = add i32 %0, -1
  %idxprom = zext i32 %sub to i64
  %1 = load %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  %2 = load i8* %label, align 1, !tbaa !1
  %cmp = icmp eq i8 %2, 0
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %3 = load i64* @dwarf2out_cfi_label.label_num, align 8, !tbaa !8
  %inc.i = add i64 %3, 1
  store i64 %inc.i, i64* @dwarf2out_cfi_label.label_num, align 8, !tbaa !8
  %conv.i = trunc i64 %3 to i32
  %call.i = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i32 %conv.i) #5
  %4 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(%struct._IO_FILE* %4, i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0)) #5
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %5) #5
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %label.addr.0 = phi i8* [ getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), %if.then2 ], [ %label, %if.then ]
  %dw_fde_current_label = getelementptr inbounds %struct.dw_fde_struct* %1, i64 %idxprom, i32 1
  %7 = load i8** %dw_fde_current_label, align 8, !tbaa !25
  %cmp3 = icmp eq i8* %7, null
  br i1 %cmp3, label %if.then9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %call6 = tail call i32 @strcmp(i8* %label.addr.0, i8* %7) #5
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %lor.lhs.false.if.end13_crit_edge, label %if.then9

lor.lhs.false.if.end13_crit_edge:                 ; preds = %lor.lhs.false
  %dw_fde_cfi14.pre = getelementptr inbounds %struct.dw_fde_struct* %1, i64 %idxprom, i32 3
  br label %for.cond.i32

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %call10 = tail call noalias i8* @xstrdup(i8* %label.addr.0) #5
  store i8* %call10, i8** %dw_fde_current_label, align 8, !tbaa !25
  %call.i27 = tail call noalias i8* @xmalloc(i64 32) #5
  %dw_cfi_next.i = bitcast i8* %call.i27 to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i = getelementptr inbounds i8* %call.i27, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* %dw_cfi_oprnd1.i, i8 0, i64 16, i32 8, i1 false) #5
  %dw_cfi_opc = getelementptr inbounds i8* %call.i27, i64 8
  %8 = bitcast i8* %dw_cfi_opc to i32*
  store i32 4, i32* %8, align 4, !tbaa !16
  %9 = bitcast i8* %dw_cfi_oprnd1.i to i64*
  %call10.c = ptrtoint i8* %call10 to i64
  store i64 %call10.c, i64* %9, align 8, !tbaa !6
  %dw_fde_cfi = getelementptr inbounds %struct.dw_fde_struct* %1, i64 %idxprom, i32 3
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i, %if.then9
  %p.0.i = phi %struct.dw_cfi_struct** [ %dw_fde_cfi, %if.then9 ], [ %dw_cfi_next.i28, %for.cond.i ]
  %10 = load %struct.dw_cfi_struct** %p.0.i, align 8, !tbaa !6
  %cmp.i = icmp eq %struct.dw_cfi_struct* %10, null
  %dw_cfi_next.i28 = getelementptr inbounds %struct.dw_cfi_struct* %10, i64 0, i32 0
  br i1 %cmp.i, label %add_cfi.exit, label %for.cond.i

add_cfi.exit:                                     ; preds = %for.cond.i
  %11 = bitcast i8* %call.i27 to %struct.dw_cfi_struct*
  store %struct.dw_cfi_struct* %11, %struct.dw_cfi_struct** %p.0.i, align 8, !tbaa !6
  br label %for.cond.i32

for.cond.i32:                                     ; preds = %add_cfi.exit, %lor.lhs.false.if.end13_crit_edge, %for.cond.i32
  %p.0.i29 = phi %struct.dw_cfi_struct** [ %dw_cfi_next.i31, %for.cond.i32 ], [ %dw_fde_cfi, %add_cfi.exit ], [ %dw_fde_cfi14.pre, %lor.lhs.false.if.end13_crit_edge ]
  %12 = load %struct.dw_cfi_struct** %p.0.i29, align 8, !tbaa !6
  %cmp.i30 = icmp eq %struct.dw_cfi_struct* %12, null
  %dw_cfi_next.i31 = getelementptr inbounds %struct.dw_cfi_struct* %12, i64 0, i32 0
  br i1 %cmp.i30, label %add_cfi.exit33, label %for.cond.i32

add_cfi.exit33:                                   ; preds = %for.cond.i32
  store %struct.dw_cfi_struct* %cfi, %struct.dw_cfi_struct** %p.0.i29, align 8, !tbaa !6
  br label %if.end15

for.cond.i37:                                     ; preds = %entry, %for.cond.i37
  %p.0.i34 = phi %struct.dw_cfi_struct** [ %dw_cfi_next.i36, %for.cond.i37 ], [ @cie_cfi_head, %entry ]
  %13 = load %struct.dw_cfi_struct** %p.0.i34, align 8, !tbaa !6
  %cmp.i35 = icmp eq %struct.dw_cfi_struct* %13, null
  %dw_cfi_next.i36 = getelementptr inbounds %struct.dw_cfi_struct* %13, i64 0, i32 0
  br i1 %cmp.i35, label %add_cfi.exit38, label %for.cond.i37

add_cfi.exit38:                                   ; preds = %for.cond.i37
  store %struct.dw_cfi_struct* %cfi, %struct.dw_cfi_struct** %p.0.i34, align 8, !tbaa !6
  br label %if.end15

if.end15:                                         ; preds = %add_cfi.exit38, %add_cfi.exit33
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_args_size(i8* %label, i64 %size) #1 {
entry:
  %0 = load i64* @old_args_size, align 8, !tbaa !8
  %cmp = icmp eq i64 %0, %size
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  store i64 %size, i64* @old_args_size, align 8, !tbaa !8
  %call.i = tail call noalias i8* @xmalloc(i64 32) #5
  %1 = bitcast i8* %call.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i = bitcast i8* %call.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i = getelementptr inbounds i8* %call.i, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* %dw_cfi_oprnd1.i, i8 0, i64 16, i32 8, i1 false) #5
  %dw_cfi_opc = getelementptr inbounds i8* %call.i, i64 8
  %2 = bitcast i8* %dw_cfi_opc to i32*
  store i32 46, i32* %2, align 4, !tbaa !16
  %3 = bitcast i8* %dw_cfi_oprnd1.i to i64*
  store i64 %size, i64* %3, align 8, !tbaa !8
  tail call fastcc void @add_fde_cfi(i8* %label, %struct.dw_cfi_struct* %1)
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_reg_save(i8* %label, i32 %reg, i64 %offset) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !4
  %and = and i32 %0, 33554432
  %tobool = icmp eq i32 %and, 0
  %idxprom = zext i32 %reg to i64
  %svr4_dbx_register_map.dbx64_register_map = select i1 %tobool, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map, i64 0, i64 %idxprom
  %cond = load i32* %cond.in, align 4
  %call.i.i = tail call noalias i8* @xmalloc(i64 32) #5
  %1 = bitcast i8* %call.i.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i.i = bitcast i8* %call.i.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %conv.i = zext i32 %cond to i64
  %2 = bitcast i8* %dw_cfi_oprnd1.i.i to i64*
  store i64 %conv.i, i64* %2, align 8, !tbaa !8
  %tobool.i = icmp ugt i32 %cond, 63
  %dw_cfi_opc.i = getelementptr inbounds i8* %call.i.i, i64 8
  %3 = bitcast i8* %dw_cfi_opc.i to i32*
  %..i = select i1 %tobool.i, i32 5, i32 128
  %4 = load i32* @target_flags, align 4, !tbaa !4
  %and4.i = lshr i32 %4, 23
  %5 = and i32 %and4.i, 4
  %sub.i = sub i32 -4, %5
  %conv6.i = sext i32 %sub.i to i64
  %div.i = sdiv i64 %offset, %conv6.i
  %cmp7.i = icmp slt i64 %div.i, 0
  %...i = select i1 %cmp7.i, i32 17, i32 %..i
  store i32 %...i, i32* %3, align 4, !tbaa !16
  %dw_cfi_offset.i = getelementptr inbounds i8* %call.i.i, i64 24
  %6 = bitcast i8* %dw_cfi_offset.i to i64*
  store i64 %div.i, i64* %6, align 8, !tbaa !8
  tail call fastcc void @add_fde_cfi(i8* %label, %struct.dw_cfi_struct* %1) #5
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_return_save(i8* %label, i64 %offset) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %0, 22
  %1 = and i32 %and, 8
  %2 = add i32 %1, 8
  %call.i.i = tail call noalias i8* @xmalloc(i64 32) #5
  %3 = bitcast i8* %call.i.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i.i = bitcast i8* %call.i.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %conv.i = zext i32 %2 to i64
  %4 = bitcast i8* %dw_cfi_oprnd1.i.i to i64*
  store i64 %conv.i, i64* %4, align 8, !tbaa !8
  %dw_cfi_opc.i = getelementptr inbounds i8* %call.i.i, i64 8
  %5 = bitcast i8* %dw_cfi_opc.i to i32*
  %6 = load i32* @target_flags, align 4, !tbaa !4
  %and4.i = lshr i32 %6, 23
  %7 = and i32 %and4.i, 4
  %sub.i = sub i32 -4, %7
  %conv6.i = sext i32 %sub.i to i64
  %div.i = sdiv i64 %offset, %conv6.i
  %cmp7.i = icmp slt i64 %div.i, 0
  %...i = select i1 %cmp7.i, i32 17, i32 128
  store i32 %...i, i32* %5, align 4, !tbaa !16
  %dw_cfi_offset.i = getelementptr inbounds i8* %call.i.i, i64 24
  %8 = bitcast i8* %dw_cfi_offset.i to i64*
  store i64 %div.i, i64* %8, align 8, !tbaa !8
  tail call fastcc void @add_fde_cfi(i8* %label, %struct.dw_cfi_struct* %3) #5
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_return_reg(i8* %label, i32 %sreg) #1 {
entry:
  %0 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %0, 22
  %1 = and i32 %and, 8
  %2 = add i32 %1, 8
  %call.i.i = tail call noalias i8* @xmalloc(i64 32) #5
  %3 = bitcast i8* %call.i.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i.i = bitcast i8* %call.i.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* %dw_cfi_oprnd1.i.i, i8 0, i64 16, i32 8, i1 false) #5
  %conv.i = zext i32 %2 to i64
  %4 = bitcast i8* %dw_cfi_oprnd1.i.i to i64*
  store i64 %conv.i, i64* %4, align 8, !tbaa !8
  %cmp.i = icmp eq i32 %sreg, -1
  br i1 %cmp.i, label %if.then.i, label %if.else12.i

if.then.i:                                        ; preds = %entry
  %dw_cfi_opc.i = getelementptr inbounds i8* %call.i.i, i64 8
  %5 = bitcast i8* %dw_cfi_opc.i to i32*
  store i32 128, i32* %5, align 4, !tbaa !16
  %dw_cfi_offset.i = getelementptr inbounds i8* %call.i.i, i64 24
  %6 = bitcast i8* %dw_cfi_offset.i to i64*
  store i64 0, i64* %6, align 8, !tbaa !8
  br label %if.end22.i

if.else12.i:                                      ; preds = %entry
  %cmp13.i = icmp eq i32 %2, %sreg
  br i1 %cmp13.i, label %reg_save.exit, label %if.else16.i

if.else16.i:                                      ; preds = %if.else12.i
  %dw_cfi_opc17.i = getelementptr inbounds i8* %call.i.i, i64 8
  %7 = bitcast i8* %dw_cfi_opc17.i to i32*
  store i32 9, i32* %7, align 4, !tbaa !16
  %conv18.i = zext i32 %sreg to i64
  %dw_cfi_reg_num20.i = getelementptr inbounds i8* %call.i.i, i64 24
  %8 = bitcast i8* %dw_cfi_reg_num20.i to i64*
  store i64 %conv18.i, i64* %8, align 8, !tbaa !8
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.else16.i, %if.then.i
  tail call fastcc void @add_fde_cfi(i8* %label, %struct.dw_cfi_struct* %3) #5
  br label %reg_save.exit

reg_save.exit:                                    ; preds = %if.else12.i, %if.end22.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_frame_debug(%struct.rtx_def* %insn) #1 {
entry:
  %cmp = icmp eq %struct.rtx_def* %insn, null
  br i1 %cmp, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  tail call fastcc void @flush_queued_reg_saves()
  store i64 -1, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  tail call void @llvm.memset.p0i8.i64(i8* bitcast (i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1) to i8*), i8 0, i64 20, i32 8, i1 false) #5
  %cfi.021.i = load %struct.dw_cfi_struct** @cie_cfi_head, align 8
  %tobool22.i = icmp eq %struct.dw_cfi_struct* %cfi.021.i, null
  br i1 %tobool22.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.then, %lookup_cfa_1.exit158
  %0 = phi i64 [ %16, %lookup_cfa_1.exit158 ], [ -1, %if.then ]
  %cfi.023.i = phi %struct.dw_cfi_struct* [ %cfi.0.i, %lookup_cfa_1.exit158 ], [ %cfi.021.i, %if.then ]
  %dw_cfi_opc.i46 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 1
  %1 = load i32* %dw_cfi_opc.i46, align 4, !tbaa !16
  switch i32 %1, label %lookup_cfa_1.exit158 [
    i32 14, label %sw.bb.i48
    i32 13, label %sw.bb1.i50
    i32 12, label %sw.bb3.i53
    i32 15, label %sw.bb9.i57
  ]

sw.bb.i48:                                        ; preds = %for.body.i
  %dw_cfi_offset.i47 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 2, i32 0
  %2 = load i64* %dw_cfi_offset.i47, align 8, !tbaa !8
  store i64 %2, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %lookup_cfa_1.exit158

sw.bb1.i50:                                       ; preds = %for.body.i
  %dw_cfi_reg_num.i49 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 2, i32 0
  %3 = load i64* %dw_cfi_reg_num.i49, align 8, !tbaa !8
  store i64 %3, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  br label %lookup_cfa_1.exit158

sw.bb3.i53:                                       ; preds = %for.body.i
  %dw_cfi_reg_num5.i51 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 2, i32 0
  %4 = load i64* %dw_cfi_reg_num5.i51, align 8, !tbaa !8
  store i64 %4, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %dw_cfi_offset7.i52 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 3, i32 0
  %5 = load i64* %dw_cfi_offset7.i52, align 8, !tbaa !8
  store i64 %5, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %lookup_cfa_1.exit158

sw.bb9.i57:                                       ; preds = %for.body.i
  %dw_cfi_oprnd110.i54 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 2
  %dw_cfi_loc.i55 = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd110.i54 to %struct.dw_loc_descr_struct**
  %6 = load %struct.dw_loc_descr_struct** %dw_cfi_loc.i55, align 8, !tbaa !6
  tail call void @llvm.memset.p0i8.i64(i8* bitcast (i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1) to i8*), i8 0, i64 20, i32 8, i1 false) #5
  store i64 -1, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp48.i.i56 = icmp eq %struct.dw_loc_descr_struct* %6, null
  br i1 %cmp48.i.i56, label %lookup_cfa_1.exit158, label %for.body.i.i60

for.body.i.i60:                                   ; preds = %sw.bb9.i57, %for.inc.i.i157
  %7 = phi i64 [ %14, %for.inc.i.i157 ], [ -1, %sw.bb9.i57 ]
  %ptr.049.i.i58 = phi %struct.dw_loc_descr_struct* [ %15, %for.inc.i.i157 ], [ %6, %sw.bb9.i57 ]
  %dw_loc_opc.i.i59 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i58, i64 0, i32 1
  %8 = load i32* %dw_loc_opc.i.i59, align 4, !tbaa !18
  switch i32 %8, label %sw.default.i.i.i150 [
    i32 80, label %sw.bb.i.i63
    i32 81, label %sw.bb.i.i63
    i32 82, label %sw.bb.i.i63
    i32 83, label %sw.bb.i.i63
    i32 84, label %sw.bb.i.i63
    i32 85, label %sw.bb.i.i63
    i32 86, label %sw.bb.i.i63
    i32 87, label %sw.bb.i.i63
    i32 88, label %sw.bb.i.i63
    i32 89, label %sw.bb.i.i63
    i32 90, label %sw.bb.i.i63
    i32 91, label %sw.bb.i.i63
    i32 92, label %sw.bb.i.i63
    i32 93, label %sw.bb.i.i63
    i32 94, label %sw.bb.i.i63
    i32 95, label %sw.bb.i.i63
    i32 96, label %sw.bb.i.i63
    i32 97, label %sw.bb.i.i63
    i32 98, label %sw.bb.i.i63
    i32 99, label %sw.bb.i.i63
    i32 100, label %sw.bb.i.i63
    i32 101, label %sw.bb.i.i63
    i32 102, label %sw.bb.i.i63
    i32 103, label %sw.bb.i.i63
    i32 104, label %sw.bb.i.i63
    i32 105, label %sw.bb.i.i63
    i32 106, label %sw.bb.i.i63
    i32 107, label %sw.bb.i.i63
    i32 108, label %sw.bb.i.i63
    i32 109, label %sw.bb.i.i63
    i32 110, label %sw.bb.i.i63
    i32 111, label %sw.bb.i.i63
    i32 144, label %sw.bb2.i.i65
    i32 112, label %sw.bb4.i.i69
    i32 113, label %sw.bb4.i.i69
    i32 114, label %sw.bb4.i.i69
    i32 115, label %sw.bb4.i.i69
    i32 116, label %sw.bb4.i.i69
    i32 117, label %sw.bb4.i.i69
    i32 118, label %sw.bb4.i.i69
    i32 119, label %sw.bb4.i.i69
    i32 120, label %sw.bb4.i.i69
    i32 121, label %sw.bb4.i.i69
    i32 122, label %sw.bb4.i.i69
    i32 123, label %sw.bb4.i.i69
    i32 124, label %sw.bb4.i.i69
    i32 125, label %sw.bb4.i.i69
    i32 126, label %sw.bb4.i.i69
    i32 127, label %sw.bb4.i.i69
    i32 128, label %sw.bb4.i.i69
    i32 129, label %sw.bb4.i.i69
    i32 130, label %sw.bb4.i.i69
    i32 131, label %sw.bb4.i.i69
    i32 132, label %sw.bb4.i.i69
    i32 133, label %sw.bb4.i.i69
    i32 134, label %sw.bb4.i.i69
    i32 135, label %sw.bb4.i.i69
    i32 136, label %sw.bb4.i.i69
    i32 137, label %sw.bb4.i.i69
    i32 138, label %sw.bb4.i.i69
    i32 139, label %sw.bb4.i.i69
    i32 140, label %sw.bb4.i.i69
    i32 141, label %sw.bb4.i.i69
    i32 142, label %sw.bb4.i.i69
    i32 143, label %sw.bb4.i.i69
    i32 146, label %sw.bb12.i.i72
    i32 6, label %sw.bb20.i.i73
    i32 35, label %sw.bb22.i.i75
    i32 3, label %dwarf_stack_op_name.exit.loopexit.i.i151
    i32 149, label %sw.bb143.i.i.i148
    i32 8, label %dwarf_stack_op_name.exit.i.loopexit.i152
    i32 9, label %dwarf_stack_op_name.exit.i.i154.loopexit
    i32 10, label %dwarf_stack_op_name.exit.i.i154.loopexit162
    i32 11, label %dwarf_stack_op_name.exit.i.i154
    i32 12, label %sw.bb6.i.i.i78
    i32 13, label %sw.bb7.i.i.i79
    i32 14, label %sw.bb8.i.i.i80
    i32 15, label %sw.bb9.i.i.i81
    i32 16, label %sw.bb10.i.i.i82
    i32 17, label %sw.bb11.i.i.i83
    i32 18, label %sw.bb12.i.i.i84
    i32 19, label %sw.bb13.i.i.i85
    i32 20, label %sw.bb14.i.i.i86
    i32 21, label %sw.bb15.i.i.i87
    i32 22, label %sw.bb16.i.i.i88
    i32 23, label %sw.bb17.i.i.i89
    i32 24, label %sw.bb18.i.i.i90
    i32 25, label %sw.bb19.i.i.i91
    i32 26, label %sw.bb20.i.i.i92
    i32 27, label %sw.bb21.i.i.i93
    i32 28, label %sw.bb22.i.i.i94
    i32 29, label %sw.bb23.i.i.i95
    i32 30, label %sw.bb24.i.i.i96
    i32 31, label %sw.bb25.i.i.i97
    i32 32, label %sw.bb26.i.i.i98
    i32 33, label %sw.bb27.i.i.i99
    i32 34, label %sw.bb28.i.i.i100
    i32 147, label %sw.bb141.i.i.i146
    i32 36, label %sw.bb30.i.i.i101
    i32 37, label %sw.bb31.i.i.i102
    i32 38, label %sw.bb32.i.i.i103
    i32 39, label %sw.bb33.i.i.i104
    i32 40, label %sw.bb34.i.i.i105
    i32 41, label %sw.bb35.i.i.i106
    i32 42, label %sw.bb36.i.i.i107
    i32 43, label %sw.bb37.i.i.i108
    i32 44, label %sw.bb38.i.i.i109
    i32 45, label %sw.bb39.i.i.i110
    i32 46, label %sw.bb40.i.i.i111
    i32 47, label %sw.bb41.i.i.i112
    i32 48, label %sw.bb42.i.i.i113
    i32 49, label %sw.bb43.i.i.i114
    i32 50, label %sw.bb44.i.i.i115
    i32 51, label %sw.bb45.i.i.i116
    i32 52, label %sw.bb46.i.i.i117
    i32 53, label %sw.bb47.i.i.i118
    i32 54, label %sw.bb48.i.i.i119
    i32 55, label %sw.bb49.i.i.i120
    i32 56, label %sw.bb50.i.i.i121
    i32 57, label %sw.bb51.i.i.i122
    i32 58, label %sw.bb52.i.i.i123
    i32 59, label %sw.bb53.i.i.i124
    i32 60, label %sw.bb54.i.i.i125
    i32 61, label %sw.bb55.i.i.i126
    i32 62, label %sw.bb56.i.i.i127
    i32 63, label %sw.bb57.i.i.i128
    i32 64, label %sw.bb58.i.i.i129
    i32 65, label %sw.bb59.i.i.i130
    i32 66, label %sw.bb60.i.i.i131
    i32 67, label %sw.bb61.i.i.i132
    i32 68, label %sw.bb62.i.i.i133
    i32 69, label %sw.bb63.i.i.i134
    i32 70, label %sw.bb64.i.i.i135
    i32 71, label %sw.bb65.i.i.i136
    i32 72, label %sw.bb66.i.i.i137
    i32 73, label %sw.bb67.i.i.i138
    i32 74, label %sw.bb68.i.i.i139
    i32 75, label %sw.bb69.i.i.i140
    i32 76, label %sw.bb70.i.i.i141
    i32 77, label %sw.bb71.i.i.i142
    i32 78, label %sw.bb72.i.i.i143
    i32 79, label %sw.bb73.i.i.i144
    i32 150, label %sw.bb144.i.i.i149
    i32 148, label %sw.bb142.i.i.i147
    i32 145, label %sw.bb139.i.i.i145
  ]

sw.bb.i.i63:                                      ; preds = %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60
  %sub.i.i61 = add i32 %8, -80
  %conv.i.i62 = zext i32 %sub.i.i61 to i64
  store i64 %conv.i.i62, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  br label %for.inc.i.i157

sw.bb2.i.i65:                                     ; preds = %for.body.i.i60
  %val_int.i.i64 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i58, i64 0, i32 2, i32 1, i32 0, i32 0
  %9 = load i64* %val_int.i.i64, align 8, !tbaa !8
  store i64 %9, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  br label %for.inc.i.i157

sw.bb4.i.i69:                                     ; preds = %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60, %for.body.i.i60
  %sub5.i.i66 = add i32 %8, -112
  %conv6.i.i67 = zext i32 %sub5.i.i66 to i64
  store i64 %conv6.i.i67, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %val_int10.i.i68 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i58, i64 0, i32 2, i32 1, i32 0, i32 0
  %10 = load i64* %val_int10.i.i68, align 8, !tbaa !8
  store i64 %10, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 2), align 8, !tbaa !12
  br label %for.inc.i.i157

sw.bb12.i.i72:                                    ; preds = %for.body.i.i60
  %val_int15.i.i70 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i58, i64 0, i32 2, i32 1, i32 0, i32 0
  %11 = load i64* %val_int15.i.i70, align 8, !tbaa !8
  store i64 %11, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %val_int18.i.i71 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i58, i64 0, i32 3, i32 1, i32 0, i32 0
  %12 = load i64* %val_int18.i.i71, align 8, !tbaa !8
  store i64 %12, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 2), align 8, !tbaa !12
  br label %for.inc.i.i157

sw.bb20.i.i73:                                    ; preds = %for.body.i.i60
  store i32 1, i32* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 3), align 8, !tbaa !10
  br label %for.inc.i.i157

sw.bb22.i.i75:                                    ; preds = %for.body.i.i60
  %val_unsigned.i.i74 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i58, i64 0, i32 2, i32 1, i32 0, i32 0
  %13 = load i64* %val_unsigned.i.i74, align 8, !tbaa !8
  store i64 %13, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %for.inc.i.i157

sw.bb6.i.i.i78:                                   ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb7.i.i.i79:                                   ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb8.i.i.i80:                                   ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb9.i.i.i81:                                   ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb10.i.i.i82:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb11.i.i.i83:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb12.i.i.i84:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb13.i.i.i85:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb14.i.i.i86:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb15.i.i.i87:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb16.i.i.i88:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb17.i.i.i89:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb18.i.i.i90:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb19.i.i.i91:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb20.i.i.i92:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb21.i.i.i93:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb22.i.i.i94:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb23.i.i.i95:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb24.i.i.i96:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb25.i.i.i97:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb26.i.i.i98:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb27.i.i.i99:                                  ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb28.i.i.i100:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb30.i.i.i101:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb31.i.i.i102:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb32.i.i.i103:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb33.i.i.i104:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb34.i.i.i105:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb35.i.i.i106:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb36.i.i.i107:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb37.i.i.i108:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb38.i.i.i109:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb39.i.i.i110:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb40.i.i.i111:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb41.i.i.i112:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb42.i.i.i113:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb43.i.i.i114:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb44.i.i.i115:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb45.i.i.i116:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb46.i.i.i117:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb47.i.i.i118:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb48.i.i.i119:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb49.i.i.i120:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb50.i.i.i121:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb51.i.i.i122:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb52.i.i.i123:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb53.i.i.i124:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb54.i.i.i125:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb55.i.i.i126:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb56.i.i.i127:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb57.i.i.i128:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb58.i.i.i129:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb59.i.i.i130:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb60.i.i.i131:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb61.i.i.i132:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb62.i.i.i133:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb63.i.i.i134:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb64.i.i.i135:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb65.i.i.i136:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb66.i.i.i137:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb67.i.i.i138:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb68.i.i.i139:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb69.i.i.i140:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb70.i.i.i141:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb71.i.i.i142:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb72.i.i.i143:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb73.i.i.i144:                                 ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb139.i.i.i145:                                ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb141.i.i.i146:                                ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb142.i.i.i147:                                ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb143.i.i.i148:                                ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.bb144.i.i.i149:                                ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

sw.default.i.i.i150:                              ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

dwarf_stack_op_name.exit.loopexit.i.i151:         ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

dwarf_stack_op_name.exit.i.loopexit.i152:         ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

dwarf_stack_op_name.exit.i.i154.loopexit:         ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

dwarf_stack_op_name.exit.i.i154.loopexit162:      ; preds = %for.body.i.i60
  br label %dwarf_stack_op_name.exit.i.i154

dwarf_stack_op_name.exit.i.i154:                  ; preds = %for.body.i.i60, %dwarf_stack_op_name.exit.i.i154.loopexit162, %dwarf_stack_op_name.exit.i.i154.loopexit, %dwarf_stack_op_name.exit.i.loopexit.i152, %dwarf_stack_op_name.exit.loopexit.i.i151, %sw.default.i.i.i150, %sw.bb144.i.i.i149, %sw.bb143.i.i.i148, %sw.bb142.i.i.i147, %sw.bb141.i.i.i146, %sw.bb139.i.i.i145, %sw.bb73.i.i.i144, %sw.bb72.i.i.i143, %sw.bb71.i.i.i142, %sw.bb70.i.i.i141, %sw.bb69.i.i.i140, %sw.bb68.i.i.i139, %sw.bb67.i.i.i138, %sw.bb66.i.i.i137, %sw.bb65.i.i.i136, %sw.bb64.i.i.i135, %sw.bb63.i.i.i134, %sw.bb62.i.i.i133, %sw.bb61.i.i.i132, %sw.bb60.i.i.i131, %sw.bb59.i.i.i130, %sw.bb58.i.i.i129, %sw.bb57.i.i.i128, %sw.bb56.i.i.i127, %sw.bb55.i.i.i126, %sw.bb54.i.i.i125, %sw.bb53.i.i.i124, %sw.bb52.i.i.i123, %sw.bb51.i.i.i122, %sw.bb50.i.i.i121, %sw.bb49.i.i.i120, %sw.bb48.i.i.i119, %sw.bb47.i.i.i118, %sw.bb46.i.i.i117, %sw.bb45.i.i.i116, %sw.bb44.i.i.i115, %sw.bb43.i.i.i114, %sw.bb42.i.i.i113, %sw.bb41.i.i.i112, %sw.bb40.i.i.i111, %sw.bb39.i.i.i110, %sw.bb38.i.i.i109, %sw.bb37.i.i.i108, %sw.bb36.i.i.i107, %sw.bb35.i.i.i106, %sw.bb34.i.i.i105, %sw.bb33.i.i.i104, %sw.bb32.i.i.i103, %sw.bb31.i.i.i102, %sw.bb30.i.i.i101, %sw.bb28.i.i.i100, %sw.bb27.i.i.i99, %sw.bb26.i.i.i98, %sw.bb25.i.i.i97, %sw.bb24.i.i.i96, %sw.bb23.i.i.i95, %sw.bb22.i.i.i94, %sw.bb21.i.i.i93, %sw.bb20.i.i.i92, %sw.bb19.i.i.i91, %sw.bb18.i.i.i90, %sw.bb17.i.i.i89, %sw.bb16.i.i.i88, %sw.bb15.i.i.i87, %sw.bb14.i.i.i86, %sw.bb13.i.i.i85, %sw.bb12.i.i.i84, %sw.bb11.i.i.i83, %sw.bb10.i.i.i82, %sw.bb9.i.i.i81, %sw.bb8.i.i.i80, %sw.bb7.i.i.i79, %sw.bb6.i.i.i78
  %retval.0.i.i.i153 = phi i8* [ getelementptr inbounds ([13 x i8]* @.str365, i64 0, i64 0), %sw.default.i.i.i150 ], [ getelementptr inbounds ([10 x i8]* @.str364, i64 0, i64 0), %sw.bb144.i.i.i149 ], [ getelementptr inbounds ([18 x i8]* @.str363, i64 0, i64 0), %sw.bb143.i.i.i148 ], [ getelementptr inbounds ([17 x i8]* @.str362, i64 0, i64 0), %sw.bb142.i.i.i147 ], [ getelementptr inbounds ([12 x i8]* @.str361, i64 0, i64 0), %sw.bb141.i.i.i146 ], [ getelementptr inbounds ([12 x i8]* @.str359, i64 0, i64 0), %sw.bb139.i.i.i145 ], [ getelementptr inbounds ([12 x i8]* @.str293, i64 0, i64 0), %sw.bb73.i.i.i144 ], [ getelementptr inbounds ([12 x i8]* @.str292, i64 0, i64 0), %sw.bb72.i.i.i143 ], [ getelementptr inbounds ([12 x i8]* @.str291, i64 0, i64 0), %sw.bb71.i.i.i142 ], [ getelementptr inbounds ([12 x i8]* @.str290, i64 0, i64 0), %sw.bb70.i.i.i141 ], [ getelementptr inbounds ([12 x i8]* @.str289, i64 0, i64 0), %sw.bb69.i.i.i140 ], [ getelementptr inbounds ([12 x i8]* @.str288, i64 0, i64 0), %sw.bb68.i.i.i139 ], [ getelementptr inbounds ([12 x i8]* @.str287, i64 0, i64 0), %sw.bb67.i.i.i138 ], [ getelementptr inbounds ([12 x i8]* @.str286, i64 0, i64 0), %sw.bb66.i.i.i137 ], [ getelementptr inbounds ([12 x i8]* @.str285, i64 0, i64 0), %sw.bb65.i.i.i136 ], [ getelementptr inbounds ([12 x i8]* @.str284, i64 0, i64 0), %sw.bb64.i.i.i135 ], [ getelementptr inbounds ([12 x i8]* @.str283, i64 0, i64 0), %sw.bb63.i.i.i134 ], [ getelementptr inbounds ([12 x i8]* @.str282, i64 0, i64 0), %sw.bb62.i.i.i133 ], [ getelementptr inbounds ([12 x i8]* @.str281, i64 0, i64 0), %sw.bb61.i.i.i132 ], [ getelementptr inbounds ([12 x i8]* @.str280, i64 0, i64 0), %sw.bb60.i.i.i131 ], [ getelementptr inbounds ([12 x i8]* @.str279, i64 0, i64 0), %sw.bb59.i.i.i130 ], [ getelementptr inbounds ([12 x i8]* @.str278, i64 0, i64 0), %sw.bb58.i.i.i129 ], [ getelementptr inbounds ([12 x i8]* @.str277, i64 0, i64 0), %sw.bb57.i.i.i128 ], [ getelementptr inbounds ([12 x i8]* @.str276, i64 0, i64 0), %sw.bb56.i.i.i127 ], [ getelementptr inbounds ([12 x i8]* @.str275, i64 0, i64 0), %sw.bb55.i.i.i126 ], [ getelementptr inbounds ([12 x i8]* @.str274, i64 0, i64 0), %sw.bb54.i.i.i125 ], [ getelementptr inbounds ([12 x i8]* @.str273, i64 0, i64 0), %sw.bb53.i.i.i124 ], [ getelementptr inbounds ([12 x i8]* @.str272, i64 0, i64 0), %sw.bb52.i.i.i123 ], [ getelementptr inbounds ([11 x i8]* @.str271, i64 0, i64 0), %sw.bb51.i.i.i122 ], [ getelementptr inbounds ([11 x i8]* @.str270, i64 0, i64 0), %sw.bb50.i.i.i121 ], [ getelementptr inbounds ([11 x i8]* @.str269, i64 0, i64 0), %sw.bb49.i.i.i120 ], [ getelementptr inbounds ([11 x i8]* @.str268, i64 0, i64 0), %sw.bb48.i.i.i119 ], [ getelementptr inbounds ([11 x i8]* @.str267, i64 0, i64 0), %sw.bb47.i.i.i118 ], [ getelementptr inbounds ([11 x i8]* @.str266, i64 0, i64 0), %sw.bb46.i.i.i117 ], [ getelementptr inbounds ([11 x i8]* @.str265, i64 0, i64 0), %sw.bb45.i.i.i116 ], [ getelementptr inbounds ([11 x i8]* @.str264, i64 0, i64 0), %sw.bb44.i.i.i115 ], [ getelementptr inbounds ([11 x i8]* @.str263, i64 0, i64 0), %sw.bb43.i.i.i114 ], [ getelementptr inbounds ([11 x i8]* @.str262, i64 0, i64 0), %sw.bb42.i.i.i113 ], [ getelementptr inbounds ([11 x i8]* @.str261, i64 0, i64 0), %sw.bb41.i.i.i112 ], [ getelementptr inbounds ([9 x i8]* @.str260, i64 0, i64 0), %sw.bb40.i.i.i111 ], [ getelementptr inbounds ([9 x i8]* @.str259, i64 0, i64 0), %sw.bb39.i.i.i110 ], [ getelementptr inbounds ([9 x i8]* @.str258, i64 0, i64 0), %sw.bb38.i.i.i109 ], [ getelementptr inbounds ([9 x i8]* @.str257, i64 0, i64 0), %sw.bb37.i.i.i108 ], [ getelementptr inbounds ([9 x i8]* @.str256, i64 0, i64 0), %sw.bb36.i.i.i107 ], [ getelementptr inbounds ([9 x i8]* @.str255, i64 0, i64 0), %sw.bb35.i.i.i106 ], [ getelementptr inbounds ([10 x i8]* @.str254, i64 0, i64 0), %sw.bb34.i.i.i105 ], [ getelementptr inbounds ([10 x i8]* @.str253, i64 0, i64 0), %sw.bb33.i.i.i104 ], [ getelementptr inbounds ([11 x i8]* @.str252, i64 0, i64 0), %sw.bb32.i.i.i103 ], [ getelementptr inbounds ([10 x i8]* @.str251, i64 0, i64 0), %sw.bb31.i.i.i102 ], [ getelementptr inbounds ([10 x i8]* @.str250, i64 0, i64 0), %sw.bb30.i.i.i101 ], [ getelementptr inbounds ([11 x i8]* @.str248, i64 0, i64 0), %sw.bb28.i.i.i100 ], [ getelementptr inbounds ([9 x i8]* @.str247, i64 0, i64 0), %sw.bb27.i.i.i99 ], [ getelementptr inbounds ([10 x i8]* @.str246, i64 0, i64 0), %sw.bb26.i.i.i98 ], [ getelementptr inbounds ([10 x i8]* @.str245, i64 0, i64 0), %sw.bb25.i.i.i97 ], [ getelementptr inbounds ([10 x i8]* @.str244, i64 0, i64 0), %sw.bb24.i.i.i96 ], [ getelementptr inbounds ([10 x i8]* @.str243, i64 0, i64 0), %sw.bb23.i.i.i95 ], [ getelementptr inbounds ([12 x i8]* @.str242, i64 0, i64 0), %sw.bb22.i.i.i94 ], [ getelementptr inbounds ([10 x i8]* @.str241, i64 0, i64 0), %sw.bb21.i.i.i93 ], [ getelementptr inbounds ([10 x i8]* @.str240, i64 0, i64 0), %sw.bb20.i.i.i92 ], [ getelementptr inbounds ([10 x i8]* @.str239, i64 0, i64 0), %sw.bb19.i.i.i91 ], [ getelementptr inbounds ([13 x i8]* @.str238, i64 0, i64 0), %sw.bb18.i.i.i90 ], [ getelementptr inbounds ([10 x i8]* @.str237, i64 0, i64 0), %sw.bb17.i.i.i89 ], [ getelementptr inbounds ([11 x i8]* @.str236, i64 0, i64 0), %sw.bb16.i.i.i88 ], [ getelementptr inbounds ([11 x i8]* @.str235, i64 0, i64 0), %sw.bb15.i.i.i87 ], [ getelementptr inbounds ([11 x i8]* @.str234, i64 0, i64 0), %sw.bb14.i.i.i86 ], [ getelementptr inbounds ([11 x i8]* @.str233, i64 0, i64 0), %sw.bb13.i.i.i85 ], [ getelementptr inbounds ([10 x i8]* @.str232, i64 0, i64 0), %sw.bb12.i.i.i84 ], [ getelementptr inbounds ([13 x i8]* @.str231, i64 0, i64 0), %sw.bb11.i.i.i83 ], [ getelementptr inbounds ([13 x i8]* @.str230, i64 0, i64 0), %sw.bb10.i.i.i82 ], [ getelementptr inbounds ([14 x i8]* @.str229, i64 0, i64 0), %sw.bb9.i.i.i81 ], [ getelementptr inbounds ([14 x i8]* @.str228, i64 0, i64 0), %sw.bb8.i.i.i80 ], [ getelementptr inbounds ([14 x i8]* @.str227, i64 0, i64 0), %sw.bb7.i.i.i79 ], [ getelementptr inbounds ([14 x i8]* @.str226, i64 0, i64 0), %sw.bb6.i.i.i78 ], [ getelementptr inbounds ([11 x i8]* @.str220, i64 0, i64 0), %dwarf_stack_op_name.exit.loopexit.i.i151 ], [ getelementptr inbounds ([14 x i8]* @.str222, i64 0, i64 0), %dwarf_stack_op_name.exit.i.loopexit.i152 ], [ getelementptr inbounds ([14 x i8]* @.str223, i64 0, i64 0), %dwarf_stack_op_name.exit.i.i154.loopexit ], [ getelementptr inbounds ([14 x i8]* @.str224, i64 0, i64 0), %dwarf_stack_op_name.exit.i.i154.loopexit162 ], [ getelementptr inbounds ([14 x i8]* @.str225, i64 0, i64 0), %for.body.i.i60 ]
  tail call void (i8*, ...)* @internal_error(i8* getelementptr inbounds ([30 x i8]* @.str497, i64 0, i64 0), i8* %retval.0.i.i.i153) #7
  unreachable

for.inc.i.i157:                                   ; preds = %sw.bb22.i.i75, %sw.bb20.i.i73, %sw.bb12.i.i72, %sw.bb4.i.i69, %sw.bb2.i.i65, %sw.bb.i.i63
  %14 = phi i64 [ %7, %sw.bb22.i.i75 ], [ %7, %sw.bb20.i.i73 ], [ %11, %sw.bb12.i.i72 ], [ %conv6.i.i67, %sw.bb4.i.i69 ], [ %9, %sw.bb2.i.i65 ], [ %conv.i.i62, %sw.bb.i.i63 ]
  %dw_loc_next.i.i155 = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i58, i64 0, i32 0
  %15 = load %struct.dw_loc_descr_struct** %dw_loc_next.i.i155, align 8, !tbaa !21
  %cmp.i.i156 = icmp eq %struct.dw_loc_descr_struct* %15, null
  br i1 %cmp.i.i156, label %lookup_cfa_1.exit158, label %for.body.i.i60

lookup_cfa_1.exit158:                             ; preds = %for.inc.i.i157, %for.body.i, %sw.bb.i48, %sw.bb1.i50, %sw.bb3.i53, %sw.bb9.i57
  %16 = phi i64 [ %0, %for.body.i ], [ %0, %sw.bb.i48 ], [ %3, %sw.bb1.i50 ], [ %4, %sw.bb3.i53 ], [ -1, %sw.bb9.i57 ], [ %14, %for.inc.i.i157 ]
  %dw_cfi_next.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.023.i, i64 0, i32 0
  %cfi.0.i = load %struct.dw_cfi_struct** %dw_cfi_next.i, align 8
  %tobool.i = icmp eq %struct.dw_cfi_struct* %cfi.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %lookup_cfa_1.exit158, %if.then
  %17 = phi i64 [ -1, %if.then ], [ %16, %lookup_cfa_1.exit158 ]
  %18 = load i32* @fde_table_in_use, align 4, !tbaa !4
  %tobool1.i = icmp eq i32 %18, 0
  br i1 %tobool1.i, label %lookup_cfa.exit, label %if.then.i

if.then.i:                                        ; preds = %for.end.i
  %sub.i = add i32 %18, -1
  %idxprom.i = zext i32 %sub.i to i64
  %19 = load %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  %dw_fde_cfi.i = getelementptr inbounds %struct.dw_fde_struct* %19, i64 %idxprom.i, i32 3
  %cfi.118.i = load %struct.dw_cfi_struct** %dw_fde_cfi.i, align 8
  %tobool319.i = icmp eq %struct.dw_cfi_struct* %cfi.118.i, null
  br i1 %tobool319.i, label %lookup_cfa.exit, label %for.body4.i

for.body4.i:                                      ; preds = %if.then.i, %lookup_cfa_1.exit
  %20 = phi i64 [ %36, %lookup_cfa_1.exit ], [ %17, %if.then.i ]
  %cfi.120.i = phi %struct.dw_cfi_struct* [ %cfi.1.i, %lookup_cfa_1.exit ], [ %cfi.118.i, %if.then.i ]
  %dw_cfi_opc.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 1
  %21 = load i32* %dw_cfi_opc.i, align 4, !tbaa !16
  switch i32 %21, label %lookup_cfa_1.exit [
    i32 14, label %sw.bb.i
    i32 13, label %sw.bb1.i
    i32 12, label %sw.bb3.i
    i32 15, label %sw.bb9.i
  ]

sw.bb.i:                                          ; preds = %for.body4.i
  %dw_cfi_offset.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 2, i32 0
  %22 = load i64* %dw_cfi_offset.i, align 8, !tbaa !8
  store i64 %22, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %lookup_cfa_1.exit

sw.bb1.i:                                         ; preds = %for.body4.i
  %dw_cfi_reg_num.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 2, i32 0
  %23 = load i64* %dw_cfi_reg_num.i, align 8, !tbaa !8
  store i64 %23, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  br label %lookup_cfa_1.exit

sw.bb3.i:                                         ; preds = %for.body4.i
  %dw_cfi_reg_num5.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 2, i32 0
  %24 = load i64* %dw_cfi_reg_num5.i, align 8, !tbaa !8
  store i64 %24, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %dw_cfi_offset7.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 3, i32 0
  %25 = load i64* %dw_cfi_offset7.i, align 8, !tbaa !8
  store i64 %25, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %lookup_cfa_1.exit

sw.bb9.i:                                         ; preds = %for.body4.i
  %dw_cfi_oprnd110.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 2
  %dw_cfi_loc.i = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd110.i to %struct.dw_loc_descr_struct**
  %26 = load %struct.dw_loc_descr_struct** %dw_cfi_loc.i, align 8, !tbaa !6
  tail call void @llvm.memset.p0i8.i64(i8* bitcast (i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1) to i8*), i8 0, i64 20, i32 8, i1 false) #5
  store i64 -1, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp48.i.i = icmp eq %struct.dw_loc_descr_struct* %26, null
  br i1 %cmp48.i.i, label %lookup_cfa_1.exit, label %for.body.i.i

for.body.i.i:                                     ; preds = %sw.bb9.i, %for.inc.i.i
  %27 = phi i64 [ %34, %for.inc.i.i ], [ -1, %sw.bb9.i ]
  %ptr.049.i.i = phi %struct.dw_loc_descr_struct* [ %35, %for.inc.i.i ], [ %26, %sw.bb9.i ]
  %dw_loc_opc.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 1
  %28 = load i32* %dw_loc_opc.i.i, align 4, !tbaa !18
  switch i32 %28, label %sw.default.i.i.i [
    i32 80, label %sw.bb.i.i
    i32 81, label %sw.bb.i.i
    i32 82, label %sw.bb.i.i
    i32 83, label %sw.bb.i.i
    i32 84, label %sw.bb.i.i
    i32 85, label %sw.bb.i.i
    i32 86, label %sw.bb.i.i
    i32 87, label %sw.bb.i.i
    i32 88, label %sw.bb.i.i
    i32 89, label %sw.bb.i.i
    i32 90, label %sw.bb.i.i
    i32 91, label %sw.bb.i.i
    i32 92, label %sw.bb.i.i
    i32 93, label %sw.bb.i.i
    i32 94, label %sw.bb.i.i
    i32 95, label %sw.bb.i.i
    i32 96, label %sw.bb.i.i
    i32 97, label %sw.bb.i.i
    i32 98, label %sw.bb.i.i
    i32 99, label %sw.bb.i.i
    i32 100, label %sw.bb.i.i
    i32 101, label %sw.bb.i.i
    i32 102, label %sw.bb.i.i
    i32 103, label %sw.bb.i.i
    i32 104, label %sw.bb.i.i
    i32 105, label %sw.bb.i.i
    i32 106, label %sw.bb.i.i
    i32 107, label %sw.bb.i.i
    i32 108, label %sw.bb.i.i
    i32 109, label %sw.bb.i.i
    i32 110, label %sw.bb.i.i
    i32 111, label %sw.bb.i.i
    i32 144, label %sw.bb2.i.i
    i32 112, label %sw.bb4.i.i
    i32 113, label %sw.bb4.i.i
    i32 114, label %sw.bb4.i.i
    i32 115, label %sw.bb4.i.i
    i32 116, label %sw.bb4.i.i
    i32 117, label %sw.bb4.i.i
    i32 118, label %sw.bb4.i.i
    i32 119, label %sw.bb4.i.i
    i32 120, label %sw.bb4.i.i
    i32 121, label %sw.bb4.i.i
    i32 122, label %sw.bb4.i.i
    i32 123, label %sw.bb4.i.i
    i32 124, label %sw.bb4.i.i
    i32 125, label %sw.bb4.i.i
    i32 126, label %sw.bb4.i.i
    i32 127, label %sw.bb4.i.i
    i32 128, label %sw.bb4.i.i
    i32 129, label %sw.bb4.i.i
    i32 130, label %sw.bb4.i.i
    i32 131, label %sw.bb4.i.i
    i32 132, label %sw.bb4.i.i
    i32 133, label %sw.bb4.i.i
    i32 134, label %sw.bb4.i.i
    i32 135, label %sw.bb4.i.i
    i32 136, label %sw.bb4.i.i
    i32 137, label %sw.bb4.i.i
    i32 138, label %sw.bb4.i.i
    i32 139, label %sw.bb4.i.i
    i32 140, label %sw.bb4.i.i
    i32 141, label %sw.bb4.i.i
    i32 142, label %sw.bb4.i.i
    i32 143, label %sw.bb4.i.i
    i32 146, label %sw.bb12.i.i
    i32 6, label %sw.bb20.i.i
    i32 35, label %sw.bb22.i.i
    i32 3, label %dwarf_stack_op_name.exit.loopexit.i.i
    i32 149, label %sw.bb143.i.i.i
    i32 8, label %dwarf_stack_op_name.exit.i.loopexit.i
    i32 9, label %dwarf_stack_op_name.exit.i.i.loopexit
    i32 10, label %dwarf_stack_op_name.exit.i.i.loopexit161
    i32 11, label %dwarf_stack_op_name.exit.i.i
    i32 12, label %sw.bb6.i.i.i
    i32 13, label %sw.bb7.i.i.i
    i32 14, label %sw.bb8.i.i.i
    i32 15, label %sw.bb9.i.i.i
    i32 16, label %sw.bb10.i.i.i
    i32 17, label %sw.bb11.i.i.i
    i32 18, label %sw.bb12.i.i.i
    i32 19, label %sw.bb13.i.i.i
    i32 20, label %sw.bb14.i.i.i
    i32 21, label %sw.bb15.i.i.i
    i32 22, label %sw.bb16.i.i.i
    i32 23, label %sw.bb17.i.i.i
    i32 24, label %sw.bb18.i.i.i
    i32 25, label %sw.bb19.i.i.i
    i32 26, label %sw.bb20.i.i.i
    i32 27, label %sw.bb21.i.i.i
    i32 28, label %sw.bb22.i.i.i
    i32 29, label %sw.bb23.i.i.i
    i32 30, label %sw.bb24.i.i.i
    i32 31, label %sw.bb25.i.i.i
    i32 32, label %sw.bb26.i.i.i
    i32 33, label %sw.bb27.i.i.i
    i32 34, label %sw.bb28.i.i.i
    i32 147, label %sw.bb141.i.i.i
    i32 36, label %sw.bb30.i.i.i
    i32 37, label %sw.bb31.i.i.i
    i32 38, label %sw.bb32.i.i.i
    i32 39, label %sw.bb33.i.i.i
    i32 40, label %sw.bb34.i.i.i
    i32 41, label %sw.bb35.i.i.i
    i32 42, label %sw.bb36.i.i.i
    i32 43, label %sw.bb37.i.i.i
    i32 44, label %sw.bb38.i.i.i
    i32 45, label %sw.bb39.i.i.i
    i32 46, label %sw.bb40.i.i.i
    i32 47, label %sw.bb41.i.i.i
    i32 48, label %sw.bb42.i.i.i
    i32 49, label %sw.bb43.i.i.i
    i32 50, label %sw.bb44.i.i.i
    i32 51, label %sw.bb45.i.i.i
    i32 52, label %sw.bb46.i.i.i
    i32 53, label %sw.bb47.i.i.i
    i32 54, label %sw.bb48.i.i.i
    i32 55, label %sw.bb49.i.i.i
    i32 56, label %sw.bb50.i.i.i
    i32 57, label %sw.bb51.i.i.i
    i32 58, label %sw.bb52.i.i.i
    i32 59, label %sw.bb53.i.i.i
    i32 60, label %sw.bb54.i.i.i
    i32 61, label %sw.bb55.i.i.i
    i32 62, label %sw.bb56.i.i.i
    i32 63, label %sw.bb57.i.i.i
    i32 64, label %sw.bb58.i.i.i
    i32 65, label %sw.bb59.i.i.i
    i32 66, label %sw.bb60.i.i.i
    i32 67, label %sw.bb61.i.i.i
    i32 68, label %sw.bb62.i.i.i
    i32 69, label %sw.bb63.i.i.i
    i32 70, label %sw.bb64.i.i.i
    i32 71, label %sw.bb65.i.i.i
    i32 72, label %sw.bb66.i.i.i
    i32 73, label %sw.bb67.i.i.i
    i32 74, label %sw.bb68.i.i.i
    i32 75, label %sw.bb69.i.i.i
    i32 76, label %sw.bb70.i.i.i
    i32 77, label %sw.bb71.i.i.i
    i32 78, label %sw.bb72.i.i.i
    i32 79, label %sw.bb73.i.i.i
    i32 150, label %sw.bb144.i.i.i
    i32 148, label %sw.bb142.i.i.i
    i32 145, label %sw.bb139.i.i.i
  ]

sw.bb.i.i:                                        ; preds = %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i
  %sub.i.i = add i32 %28, -80
  %conv.i.i = zext i32 %sub.i.i to i64
  store i64 %conv.i.i, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  br label %for.inc.i.i

sw.bb2.i.i:                                       ; preds = %for.body.i.i
  %val_int.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %29 = load i64* %val_int.i.i, align 8, !tbaa !8
  store i64 %29, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  br label %for.inc.i.i

sw.bb4.i.i:                                       ; preds = %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i, %for.body.i.i
  %sub5.i.i = add i32 %28, -112
  %conv6.i.i = zext i32 %sub5.i.i to i64
  store i64 %conv6.i.i, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %val_int10.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %30 = load i64* %val_int10.i.i, align 8, !tbaa !8
  store i64 %30, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 2), align 8, !tbaa !12
  br label %for.inc.i.i

sw.bb12.i.i:                                      ; preds = %for.body.i.i
  %val_int15.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %31 = load i64* %val_int15.i.i, align 8, !tbaa !8
  store i64 %31, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %val_int18.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 3, i32 1, i32 0, i32 0
  %32 = load i64* %val_int18.i.i, align 8, !tbaa !8
  store i64 %32, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 2), align 8, !tbaa !12
  br label %for.inc.i.i

sw.bb20.i.i:                                      ; preds = %for.body.i.i
  store i32 1, i32* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 3), align 8, !tbaa !10
  br label %for.inc.i.i

sw.bb22.i.i:                                      ; preds = %for.body.i.i
  %val_unsigned.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %33 = load i64* %val_unsigned.i.i, align 8, !tbaa !8
  store i64 %33, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %for.inc.i.i

sw.bb6.i.i.i:                                     ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb7.i.i.i:                                     ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb8.i.i.i:                                     ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb9.i.i.i:                                     ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb10.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb11.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb12.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb13.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb14.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb15.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb16.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb17.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb18.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb19.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb20.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb21.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb22.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb23.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb24.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb25.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb26.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb27.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb28.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb30.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb31.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb32.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb33.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb34.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb35.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb36.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb37.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb38.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb39.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb40.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb41.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb42.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb43.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb44.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb45.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb46.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb47.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb48.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb49.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb50.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb51.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb52.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb53.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb54.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb55.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb56.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb57.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb58.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb59.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb60.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb61.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb62.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb63.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb64.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb65.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb66.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb67.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb68.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb69.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb70.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb71.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb72.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb73.i.i.i:                                    ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb139.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb141.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb142.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb143.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.bb144.i.i.i:                                   ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

sw.default.i.i.i:                                 ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.loopexit.i.i:            ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.i.loopexit.i:            ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.i.i.loopexit:            ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.i.i.loopexit161:         ; preds = %for.body.i.i
  br label %dwarf_stack_op_name.exit.i.i

dwarf_stack_op_name.exit.i.i:                     ; preds = %for.body.i.i, %dwarf_stack_op_name.exit.i.i.loopexit161, %dwarf_stack_op_name.exit.i.i.loopexit, %dwarf_stack_op_name.exit.i.loopexit.i, %dwarf_stack_op_name.exit.loopexit.i.i, %sw.default.i.i.i, %sw.bb144.i.i.i, %sw.bb143.i.i.i, %sw.bb142.i.i.i, %sw.bb141.i.i.i, %sw.bb139.i.i.i, %sw.bb73.i.i.i, %sw.bb72.i.i.i, %sw.bb71.i.i.i, %sw.bb70.i.i.i, %sw.bb69.i.i.i, %sw.bb68.i.i.i, %sw.bb67.i.i.i, %sw.bb66.i.i.i, %sw.bb65.i.i.i, %sw.bb64.i.i.i, %sw.bb63.i.i.i, %sw.bb62.i.i.i, %sw.bb61.i.i.i, %sw.bb60.i.i.i, %sw.bb59.i.i.i, %sw.bb58.i.i.i, %sw.bb57.i.i.i, %sw.bb56.i.i.i, %sw.bb55.i.i.i, %sw.bb54.i.i.i, %sw.bb53.i.i.i, %sw.bb52.i.i.i, %sw.bb51.i.i.i, %sw.bb50.i.i.i, %sw.bb49.i.i.i, %sw.bb48.i.i.i, %sw.bb47.i.i.i, %sw.bb46.i.i.i, %sw.bb45.i.i.i, %sw.bb44.i.i.i, %sw.bb43.i.i.i, %sw.bb42.i.i.i, %sw.bb41.i.i.i, %sw.bb40.i.i.i, %sw.bb39.i.i.i, %sw.bb38.i.i.i, %sw.bb37.i.i.i, %sw.bb36.i.i.i, %sw.bb35.i.i.i, %sw.bb34.i.i.i, %sw.bb33.i.i.i, %sw.bb32.i.i.i, %sw.bb31.i.i.i, %sw.bb30.i.i.i, %sw.bb28.i.i.i, %sw.bb27.i.i.i, %sw.bb26.i.i.i, %sw.bb25.i.i.i, %sw.bb24.i.i.i, %sw.bb23.i.i.i, %sw.bb22.i.i.i, %sw.bb21.i.i.i, %sw.bb20.i.i.i, %sw.bb19.i.i.i, %sw.bb18.i.i.i, %sw.bb17.i.i.i, %sw.bb16.i.i.i, %sw.bb15.i.i.i, %sw.bb14.i.i.i, %sw.bb13.i.i.i, %sw.bb12.i.i.i, %sw.bb11.i.i.i, %sw.bb10.i.i.i, %sw.bb9.i.i.i, %sw.bb8.i.i.i, %sw.bb7.i.i.i, %sw.bb6.i.i.i
  %retval.0.i.i.i = phi i8* [ getelementptr inbounds ([13 x i8]* @.str365, i64 0, i64 0), %sw.default.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str364, i64 0, i64 0), %sw.bb144.i.i.i ], [ getelementptr inbounds ([18 x i8]* @.str363, i64 0, i64 0), %sw.bb143.i.i.i ], [ getelementptr inbounds ([17 x i8]* @.str362, i64 0, i64 0), %sw.bb142.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str361, i64 0, i64 0), %sw.bb141.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str359, i64 0, i64 0), %sw.bb139.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str293, i64 0, i64 0), %sw.bb73.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str292, i64 0, i64 0), %sw.bb72.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str291, i64 0, i64 0), %sw.bb71.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str290, i64 0, i64 0), %sw.bb70.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str289, i64 0, i64 0), %sw.bb69.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str288, i64 0, i64 0), %sw.bb68.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str287, i64 0, i64 0), %sw.bb67.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str286, i64 0, i64 0), %sw.bb66.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str285, i64 0, i64 0), %sw.bb65.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str284, i64 0, i64 0), %sw.bb64.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str283, i64 0, i64 0), %sw.bb63.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str282, i64 0, i64 0), %sw.bb62.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str281, i64 0, i64 0), %sw.bb61.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str280, i64 0, i64 0), %sw.bb60.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str279, i64 0, i64 0), %sw.bb59.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str278, i64 0, i64 0), %sw.bb58.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str277, i64 0, i64 0), %sw.bb57.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str276, i64 0, i64 0), %sw.bb56.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str275, i64 0, i64 0), %sw.bb55.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str274, i64 0, i64 0), %sw.bb54.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str273, i64 0, i64 0), %sw.bb53.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str272, i64 0, i64 0), %sw.bb52.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str271, i64 0, i64 0), %sw.bb51.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str270, i64 0, i64 0), %sw.bb50.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str269, i64 0, i64 0), %sw.bb49.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str268, i64 0, i64 0), %sw.bb48.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str267, i64 0, i64 0), %sw.bb47.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str266, i64 0, i64 0), %sw.bb46.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str265, i64 0, i64 0), %sw.bb45.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str264, i64 0, i64 0), %sw.bb44.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str263, i64 0, i64 0), %sw.bb43.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str262, i64 0, i64 0), %sw.bb42.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str261, i64 0, i64 0), %sw.bb41.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str260, i64 0, i64 0), %sw.bb40.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str259, i64 0, i64 0), %sw.bb39.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str258, i64 0, i64 0), %sw.bb38.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str257, i64 0, i64 0), %sw.bb37.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str256, i64 0, i64 0), %sw.bb36.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str255, i64 0, i64 0), %sw.bb35.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str254, i64 0, i64 0), %sw.bb34.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str253, i64 0, i64 0), %sw.bb33.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str252, i64 0, i64 0), %sw.bb32.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str251, i64 0, i64 0), %sw.bb31.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str250, i64 0, i64 0), %sw.bb30.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str248, i64 0, i64 0), %sw.bb28.i.i.i ], [ getelementptr inbounds ([9 x i8]* @.str247, i64 0, i64 0), %sw.bb27.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str246, i64 0, i64 0), %sw.bb26.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str245, i64 0, i64 0), %sw.bb25.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str244, i64 0, i64 0), %sw.bb24.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str243, i64 0, i64 0), %sw.bb23.i.i.i ], [ getelementptr inbounds ([12 x i8]* @.str242, i64 0, i64 0), %sw.bb22.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str241, i64 0, i64 0), %sw.bb21.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str240, i64 0, i64 0), %sw.bb20.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str239, i64 0, i64 0), %sw.bb19.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str238, i64 0, i64 0), %sw.bb18.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str237, i64 0, i64 0), %sw.bb17.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str236, i64 0, i64 0), %sw.bb16.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str235, i64 0, i64 0), %sw.bb15.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str234, i64 0, i64 0), %sw.bb14.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str233, i64 0, i64 0), %sw.bb13.i.i.i ], [ getelementptr inbounds ([10 x i8]* @.str232, i64 0, i64 0), %sw.bb12.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str231, i64 0, i64 0), %sw.bb11.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str230, i64 0, i64 0), %sw.bb10.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str229, i64 0, i64 0), %sw.bb9.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str228, i64 0, i64 0), %sw.bb8.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str227, i64 0, i64 0), %sw.bb7.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str226, i64 0, i64 0), %sw.bb6.i.i.i ], [ getelementptr inbounds ([11 x i8]* @.str220, i64 0, i64 0), %dwarf_stack_op_name.exit.loopexit.i.i ], [ getelementptr inbounds ([14 x i8]* @.str222, i64 0, i64 0), %dwarf_stack_op_name.exit.i.loopexit.i ], [ getelementptr inbounds ([14 x i8]* @.str223, i64 0, i64 0), %dwarf_stack_op_name.exit.i.i.loopexit ], [ getelementptr inbounds ([14 x i8]* @.str224, i64 0, i64 0), %dwarf_stack_op_name.exit.i.i.loopexit161 ], [ getelementptr inbounds ([14 x i8]* @.str225, i64 0, i64 0), %for.body.i.i ]
  tail call void (i8*, ...)* @internal_error(i8* getelementptr inbounds ([30 x i8]* @.str497, i64 0, i64 0), i8* %retval.0.i.i.i) #7
  unreachable

for.inc.i.i:                                      ; preds = %sw.bb22.i.i, %sw.bb20.i.i, %sw.bb12.i.i, %sw.bb4.i.i, %sw.bb2.i.i, %sw.bb.i.i
  %34 = phi i64 [ %27, %sw.bb22.i.i ], [ %27, %sw.bb20.i.i ], [ %31, %sw.bb12.i.i ], [ %conv6.i.i, %sw.bb4.i.i ], [ %29, %sw.bb2.i.i ], [ %conv.i.i, %sw.bb.i.i ]
  %dw_loc_next.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %ptr.049.i.i, i64 0, i32 0
  %35 = load %struct.dw_loc_descr_struct** %dw_loc_next.i.i, align 8, !tbaa !21
  %cmp.i.i = icmp eq %struct.dw_loc_descr_struct* %35, null
  br i1 %cmp.i.i, label %lookup_cfa_1.exit, label %for.body.i.i

lookup_cfa_1.exit:                                ; preds = %for.inc.i.i, %for.body4.i, %sw.bb.i, %sw.bb1.i, %sw.bb3.i, %sw.bb9.i
  %36 = phi i64 [ %20, %for.body4.i ], [ %20, %sw.bb.i ], [ %23, %sw.bb1.i ], [ %24, %sw.bb3.i ], [ -1, %sw.bb9.i ], [ %34, %for.inc.i.i ]
  %dw_cfi_next6.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi.120.i, i64 0, i32 0
  %cfi.1.i = load %struct.dw_cfi_struct** %dw_cfi_next6.i, align 8
  %tobool3.i = icmp eq %struct.dw_cfi_struct* %cfi.1.i, null
  br i1 %tobool3.i, label %lookup_cfa.exit, label %for.body4.i

lookup_cfa.exit:                                  ; preds = %lookup_cfa_1.exit, %for.end.i, %if.then.i
  %37 = phi i64 [ %17, %for.end.i ], [ %17, %if.then.i ], [ %36, %lookup_cfa_1.exit ]
  %38 = load i32* @target_flags, align 4, !tbaa !4
  %and = and i32 %38, 33554432
  %tobool = icmp ne i32 %and, 0
  %39 = load i32* getelementptr inbounds ([53 x i32]* @dbx64_register_map, i64 0, i64 7), align 4, !tbaa !4
  %40 = load i32* getelementptr inbounds ([53 x i32]* @svr4_dbx_register_map, i64 0, i64 7), align 4, !tbaa !4
  %cond = select i1 %tobool, i32 %39, i32 %40
  %conv = sext i32 %cond to i64
  %cmp1 = icmp eq i64 %37, %conv
  br i1 %cmp1, label %if.end, label %if.then3

if.then3:                                         ; preds = %lookup_cfa.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1626, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.dwarf2out_frame_debug, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %lookup_cfa.exit
  store i64 7, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.cfa_loc* @cfa_store to i8*), i8* bitcast (%struct.cfa_loc* @cfa to i8*), i64 32, i32 8, i1 false), !tbaa.struct !15
  store i64 -1, i64* @cfa_temp.0, align 8, !tbaa !13
  store i64 0, i64* @cfa_temp.1, align 8, !tbaa !14
  br label %return

if.end4:                                          ; preds = %entry
  %41 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %41, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp5 = icmp eq i32 %bf.clear, 32
  br i1 %cmp5, label %lor.lhs.false, label %if.then8

lor.lhs.false:                                    ; preds = %if.end4
  %q.04.i = load %struct.queued_reg_save** @queued_reg_saves, align 8
  %tobool5.i = icmp eq %struct.queued_reg_save* %q.04.i, null
  br i1 %tobool5.i, label %if.end9, label %for.body.i36

for.cond.i:                                       ; preds = %for.body.i36
  %next.i = getelementptr inbounds %struct.queued_reg_save* %q.06.i, i64 0, i32 0
  %q.0.i = load %struct.queued_reg_save** %next.i, align 8
  %tobool.i34 = icmp eq %struct.queued_reg_save* %q.0.i, null
  br i1 %tobool.i34, label %if.end9, label %for.body.i36

for.body.i36:                                     ; preds = %lor.lhs.false, %for.cond.i
  %q.06.i = phi %struct.queued_reg_save* [ %q.0.i, %for.cond.i ], [ %q.04.i, %lor.lhs.false ]
  %reg.i = getelementptr inbounds %struct.queued_reg_save* %q.06.i, i64 0, i32 1
  %42 = load %struct.rtx_def** %reg.i, align 8, !tbaa !27
  %call.i = tail call i32 @modified_in_p(%struct.rtx_def* %42, %struct.rtx_def* %insn) #5
  %tobool1.i35 = icmp eq i32 %call.i, 0
  br i1 %tobool1.i35, label %for.cond.i, label %if.then8

if.then8:                                         ; preds = %for.body.i36, %if.end4
  tail call fastcc void @flush_queued_reg_saves()
  br label %if.end9

if.end9:                                          ; preds = %for.cond.i, %lor.lhs.false, %if.then8
  %bf.load10 = load i32* %41, align 8
  %tobool11 = icmp slt i32 %bf.load10, 0
  br i1 %tobool11, label %if.end17, label %if.then12

if.then12:                                        ; preds = %if.end9
  %43 = load i32* @target_flags, align 4, !tbaa !4
  %and13 = and i32 %43, 4096
  %tobool14 = icmp eq i32 %and13, 0
  br i1 %tobool14, label %if.then15, label %return

if.then15:                                        ; preds = %if.then12
  %44 = load i32* @flag_asynchronous_unwind_tables, align 4, !tbaa !4
  %tobool.i37 = icmp eq i32 %44, 0
  %bf.clear.i = and i32 %bf.load10, 65535
  br i1 %tobool.i37, label %land.lhs.true.i, label %if.end31.i

land.lhs.true.i:                                  ; preds = %if.then15
  %cmp.i = icmp eq i32 %bf.clear.i, 34
  br i1 %cmp.i, label %if.then.i38, label %if.else.i

if.then.i38:                                      ; preds = %land.lhs.true.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %46 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 0
  %bf.load1.i = load i32* %46, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 39
  br i1 %cmp3.i, label %if.then4.i, label %if.end.i

if.then4.i:                                       ; preds = %if.then.i38
  %arrayidx6.i = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx6.i to %struct.rtvec_def**
  %47 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !6
  %arrayidx7.i = getelementptr inbounds %struct.rtvec_def* %47, i64 0, i32 1, i64 0
  %48 = load %struct.rtx_def** %arrayidx7.i, align 8, !tbaa !6
  %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load8.pre.i = load i32* %.phi.trans.insert.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %if.then.i38
  %bf.load8.i = phi i32 [ %bf.load8.pre.i, %if.then4.i ], [ %bf.load1.i, %if.then.i38 ]
  %insn.addr.0.i = phi %struct.rtx_def* [ %48, %if.then4.i ], [ %45, %if.then.i38 ]
  %bf.clear9.i = and i32 %bf.load8.i, 65535
  %cmp10.i = icmp eq i32 %bf.clear9.i, 47
  br i1 %cmp10.i, label %if.then11.i, label %if.end15.i

if.then11.i:                                      ; preds = %if.end.i
  %arrayidx13.i = getelementptr inbounds %struct.rtx_def* %insn.addr.0.i, i64 0, i32 1, i64 1
  %rtx14.i = bitcast %union.rtunion_def* %arrayidx13.i to %struct.rtx_def**
  %49 = load %struct.rtx_def** %rtx14.i, align 8, !tbaa !6
  %.phi.trans.insert139.i = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 0
  %bf.load16.pre.i = load i32* %.phi.trans.insert139.i, align 8
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then11.i, %if.end.i
  %bf.load16.i = phi i32 [ %bf.load16.pre.i, %if.then11.i ], [ %bf.load8.i, %if.end.i ]
  %insn.addr.1.i = phi %struct.rtx_def* [ %49, %if.then11.i ], [ %insn.addr.0.i, %if.end.i ]
  %bf.clear17.i = and i32 %bf.load16.i, 65535
  %cmp18.i = icmp eq i32 %bf.clear17.i, 50
  br i1 %cmp18.i, label %if.end20.i, label %if.then19.i

if.then19.i:                                      ; preds = %if.end15.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1009, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.dwarf2out_stack_adjust, i64 0, i64 0)) #7
  unreachable

if.end20.i:                                       ; preds = %if.end15.i
  %arrayidx22.i = getelementptr inbounds %struct.rtx_def* %insn.addr.1.i, i64 0, i32 1, i64 1
  %rtx23.i = bitcast %union.rtunion_def* %arrayidx22.i to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx23.i, align 8, !tbaa !6
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1, i64 0, i32 0
  %51 = load i64* %rtwint.i, align 8, !tbaa !29
  %52 = load i64* @old_args_size, align 8, !tbaa !8
  %cmp.i.i39 = icmp eq i64 %52, %51
  br i1 %cmp.i.i39, label %return, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.end20.i
  store i64 %51, i64* @old_args_size, align 8, !tbaa !8
  %call.i.i.i = tail call noalias i8* @xmalloc(i64 32) #5
  %53 = bitcast i8* %call.i.i.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i.i.i = bitcast i8* %call.i.i.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i.i.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* %dw_cfi_oprnd1.i.i.i, i8 0, i64 16, i32 8, i1 false) #5
  %dw_cfi_opc.i.i = getelementptr inbounds i8* %call.i.i.i, i64 8
  %54 = bitcast i8* %dw_cfi_opc.i.i to i32*
  store i32 46, i32* %54, align 4, !tbaa !16
  %55 = bitcast i8* %dw_cfi_oprnd1.i.i.i to i64*
  store i64 %51, i64* %55, align 8, !tbaa !8
  tail call fastcc void @add_fde_cfi(i8* getelementptr inbounds ([1 x i8]* @.str440, i64 0, i64 0), %struct.dw_cfi_struct* %53) #5
  br label %return

if.else.i:                                        ; preds = %land.lhs.true.i
  %56 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8
  %cmp28.i = icmp eq i64 %56, 7
  br i1 %cmp28.i, label %if.end31.i, label %return

if.end31.i:                                       ; preds = %if.then15, %if.else.i
  %cmp34.i = icmp eq i32 %bf.clear.i, 35
  br i1 %cmp34.i, label %if.then35.i, label %if.else36.i

if.then35.i:                                      ; preds = %if.end31.i
  %57 = load i64* @args_size, align 8, !tbaa !8
  %sub.i40 = sub nsw i64 0, %57
  br label %if.end95.i

if.else36.i:                                      ; preds = %if.end31.i
  %arrayidx38.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx39.i = bitcast %union.rtunion_def* %arrayidx38.i to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx39.i, align 8, !tbaa !6
  %59 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 0
  %bf.load40.i = load i32* %59, align 8
  %bf.clear41.i = and i32 %bf.load40.i, 65535
  switch i32 %bf.clear41.i, label %return [
    i32 47, label %if.then43.i
    i32 39, label %if.then60.i
    i32 24, label %if.then60.i
  ]

if.then43.i:                                      ; preds = %if.else36.i
  %call.i41 = tail call fastcc i64 @stack_adjust_offset(%struct.rtx_def* %58) #5
  br label %if.end95.i

if.then60.i:                                      ; preds = %if.else36.i, %if.else36.i
  %arrayidx65.i = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 1, i64 0
  %rtvec66.i = bitcast %union.rtunion_def* %arrayidx65.i to %struct.rtvec_def**
  %60 = load %struct.rtvec_def** %rtvec66.i, align 8, !tbaa !6
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %60, i64 0, i32 0
  %61 = load i32* %num_elem.i, align 4, !tbaa !31
  br label %for.cond.outer.i

for.cond.outer.i:                                 ; preds = %if.then80.i, %if.then60.i
  %offset.0.ph.i = phi i64 [ 0, %if.then60.i ], [ %add.i, %if.then80.i ]
  %i.0.in.ph.i = phi i32 [ %61, %if.then60.i ], [ %68, %if.then80.i ]
  %62 = sext i32 %i.0.in.ph.i to i64
  br label %for.cond.i42

for.cond.i42:                                     ; preds = %for.body.i43, %for.cond.outer.i
  %indvars.iv.i = phi i64 [ %62, %for.cond.outer.i ], [ %indvars.iv.next.i, %for.body.i43 ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %63 = trunc i64 %indvars.iv.i to i32
  %cmp68.i = icmp sgt i32 %63, 0
  br i1 %cmp68.i, label %for.body.i43, label %if.end95.i

for.body.i43:                                     ; preds = %for.cond.i42
  %64 = load %struct.rtx_def** %rtx39.i, align 8, !tbaa !6
  %arrayidx73.i = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 1, i64 0
  %rtvec74.i = bitcast %union.rtunion_def* %arrayidx73.i to %struct.rtvec_def**
  %65 = load %struct.rtvec_def** %rtvec74.i, align 8, !tbaa !6
  %arrayidx76.i = getelementptr inbounds %struct.rtvec_def* %65, i64 0, i32 1, i64 %indvars.iv.next.i
  %66 = load %struct.rtx_def** %arrayidx76.i, align 8, !tbaa !6
  %67 = getelementptr inbounds %struct.rtx_def* %66, i64 0, i32 0
  %bf.load77.i = load i32* %67, align 8
  %bf.clear78.i = and i32 %bf.load77.i, 65535
  %cmp79.i = icmp eq i32 %bf.clear78.i, 47
  br i1 %cmp79.i, label %if.then80.i, label %for.cond.i42

if.then80.i:                                      ; preds = %for.body.i43
  %68 = trunc i64 %indvars.iv.next.i to i32
  %call90.i = tail call fastcc i64 @stack_adjust_offset(%struct.rtx_def* %66) #5
  %add.i = add nsw i64 %call90.i, %offset.0.ph.i
  br label %for.cond.outer.i

if.end95.i:                                       ; preds = %for.cond.i42, %if.then43.i, %if.then35.i
  %offset.2.i = phi i64 [ %sub.i40, %if.then35.i ], [ %call.i41, %if.then43.i ], [ %offset.0.ph.i, %for.cond.i42 ]
  %cmp96.i = icmp eq i64 %offset.2.i, 0
  br i1 %cmp96.i, label %return, label %if.end98.i

if.end98.i:                                       ; preds = %if.end95.i
  %69 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp99.i = icmp eq i64 %69, 7
  br i1 %cmp99.i, label %if.then100.i, label %if.end102.i

if.then100.i:                                     ; preds = %if.end98.i
  %70 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  %add101.i = add nsw i64 %70, %offset.2.i
  store i64 %add101.i, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %if.end102.i

if.end102.i:                                      ; preds = %if.then100.i, %if.end98.i
  %71 = load i64* @args_size, align 8, !tbaa !8
  %add103.i = add nsw i64 %71, %offset.2.i
  %cmp104.i = icmp slt i64 %add103.i, 0
  %.add103.i = select i1 %cmp104.i, i64 0, i64 %add103.i
  store i64 %.add103.i, i64* @args_size, align 8, !tbaa !8
  %72 = load i64* @dwarf2out_cfi_label.label_num, align 8, !tbaa !8
  %inc.i.i = add i64 %72, 1
  store i64 %inc.i.i, i64* @dwarf2out_cfi_label.label_num, align 8, !tbaa !8
  %conv.i.i44 = trunc i64 %72 to i32
  %call.i.i = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i32 %conv.i.i44) #5
  %73 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(%struct._IO_FILE* %73, i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0)) #5
  %74 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %75 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %74) #5
  tail call fastcc void @def_cfa_1(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), %struct.cfa_loc* @cfa) #5
  %76 = load i64* @args_size, align 8, !tbaa !8
  %77 = load i64* @old_args_size, align 8, !tbaa !8
  %cmp.i129.i = icmp eq i64 %77, %76
  br i1 %cmp.i129.i, label %return, label %if.end.i134.i

if.end.i134.i:                                    ; preds = %if.end102.i
  store i64 %76, i64* @old_args_size, align 8, !tbaa !8
  %call.i.i130.i = tail call noalias i8* @xmalloc(i64 32) #5
  %78 = bitcast i8* %call.i.i130.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i.i131.i = bitcast i8* %call.i.i130.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i.i131.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i.i132.i = getelementptr inbounds i8* %call.i.i130.i, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* %dw_cfi_oprnd1.i.i132.i, i8 0, i64 16, i32 8, i1 false) #5
  %dw_cfi_opc.i133.i = getelementptr inbounds i8* %call.i.i130.i, i64 8
  %79 = bitcast i8* %dw_cfi_opc.i133.i to i32*
  store i32 46, i32* %79, align 4, !tbaa !16
  %80 = bitcast i8* %dw_cfi_oprnd1.i.i132.i to i64*
  store i64 %76, i64* %80, align 8, !tbaa !8
  tail call fastcc void @add_fde_cfi(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), %struct.dw_cfi_struct* %78) #5
  br label %return

if.end17:                                         ; preds = %if.end9
  %81 = load i64* @dwarf2out_cfi_label.label_num, align 8, !tbaa !8
  %inc.i = add i64 %81, 1
  store i64 %inc.i, i64* @dwarf2out_cfi_label.label_num, align 8, !tbaa !8
  %conv.i = trunc i64 %81 to i32
  %call.i45 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i32 %conv.i) #5
  %82 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(%struct._IO_FILE* %82, i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0)) #5
  %83 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %84 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %83) #5
  %call19 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 21, %struct.rtx_def* null) #5
  %tobool20 = icmp eq %struct.rtx_def* %call19, null
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call19, i64 0, i32 1, i64 0
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %insn.addr.0.in.in = select i1 %tobool20, %union.rtunion_def* %arrayidx23, %union.rtunion_def* %arrayidx
  %insn.addr.0.in = bitcast %union.rtunion_def* %insn.addr.0.in.in to %struct.rtx_def**
  %insn.addr.0 = load %struct.rtx_def** %insn.addr.0.in, align 8
  tail call fastcc void @dwarf2out_frame_debug_expr(%struct.rtx_def* %insn.addr.0)
  br label %return

return:                                           ; preds = %if.else.i, %if.end.i134.i, %if.end102.i, %if.end95.i, %if.else36.i, %if.end.i.i, %if.end20.i, %if.then12, %if.end17, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @flush_queued_reg_saves() #1 {
entry:
  %0 = load %struct.queued_reg_save** @queued_reg_saves, align 8, !tbaa !6
  %tobool6 = icmp eq %struct.queued_reg_save* %0, null
  br i1 %tobool6, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %q.07 = phi %struct.queued_reg_save* [ %12, %for.body ], [ %0, %entry ]
  %1 = load i8** @last_reg_save_label, align 8, !tbaa !6
  %reg = getelementptr inbounds %struct.queued_reg_save* %q.07, i64 0, i32 1
  %2 = load %struct.rtx_def** %reg, align 8, !tbaa !27
  %arrayidx = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !4
  %cfa_offset = getelementptr inbounds %struct.queued_reg_save* %q.07, i64 0, i32 2
  %4 = load i64* %cfa_offset, align 8, !tbaa !33
  %5 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = and i32 %5, 33554432
  %tobool.i = icmp eq i32 %and.i, 0
  %idxprom.i = zext i32 %3 to i64
  %svr4_dbx_register_map.dbx64_register_map.i = select i1 %tobool.i, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in.i = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i, i64 0, i64 %idxprom.i
  %cond.i = load i32* %cond.in.i, align 4
  %call.i.i.i = tail call noalias i8* @xmalloc(i64 32) #5
  %6 = bitcast i8* %call.i.i.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i.i.i = bitcast i8* %call.i.i.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i.i.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 16
  %conv.i.i = zext i32 %cond.i to i64
  %7 = bitcast i8* %dw_cfi_oprnd1.i.i.i to i64*
  store i64 %conv.i.i, i64* %7, align 8, !tbaa !8
  %tobool.i.i = icmp ugt i32 %cond.i, 63
  %dw_cfi_opc.i.i = getelementptr inbounds i8* %call.i.i.i, i64 8
  %8 = bitcast i8* %dw_cfi_opc.i.i to i32*
  %..i.i = select i1 %tobool.i.i, i32 5, i32 128
  %9 = load i32* @target_flags, align 4, !tbaa !4
  %and4.i.i = lshr i32 %9, 23
  %10 = and i32 %and4.i.i, 4
  %sub.i.i = sub i32 -4, %10
  %conv6.i.i = sext i32 %sub.i.i to i64
  %div.i.i = sdiv i64 %4, %conv6.i.i
  %cmp7.i.i = icmp slt i64 %div.i.i, 0
  %...i.i = select i1 %cmp7.i.i, i32 17, i32 %..i.i
  store i32 %...i.i, i32* %8, align 4, !tbaa !16
  %dw_cfi_offset.i.i = getelementptr inbounds i8* %call.i.i.i, i64 24
  %11 = bitcast i8* %dw_cfi_offset.i.i to i64*
  store i64 %div.i.i, i64* %11, align 8, !tbaa !8
  tail call fastcc void @add_fde_cfi(i8* %1, %struct.dw_cfi_struct* %6) #5
  %next1 = getelementptr inbounds %struct.queued_reg_save* %q.07, i64 0, i32 0
  %12 = load %struct.queued_reg_save** %next1, align 8, !tbaa !34
  %13 = bitcast %struct.queued_reg_save* %q.07 to i8*
  tail call void @free(i8* %13)
  %tobool = icmp eq %struct.queued_reg_save* %12, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  store %struct.queued_reg_save* null, %struct.queued_reg_save** @queued_reg_saves, align 8, !tbaa !6
  store i8* null, i8** @last_reg_save_label, align 8, !tbaa !6
  ret void
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #4

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @dwarf2out_frame_debug_expr(%struct.rtx_def* nocapture readonly %expr) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %expr, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.then32 [
    i32 39, label %if.then
    i32 24, label %if.then
    i32 47, label %if.end33
  ]

if.then:                                          ; preds = %entry, %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %expr, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %1 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  %num_elem = getelementptr inbounds %struct.rtvec_def* %1, i64 0, i32 0
  %2 = load i32* %num_elem, align 4, !tbaa !31
  %cmp416 = icmp sgt i32 %2, 0
  br i1 %cmp416, label %for.body, label %sw.epilog601

for.body:                                         ; preds = %if.then, %for.inc.for.body_crit_edge
  %3 = phi %struct.rtvec_def* [ %.pre, %for.inc.for.body_crit_edge ], [ %1, %if.then ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.for.body_crit_edge ], [ 0, %if.then ]
  %arrayidx8 = getelementptr inbounds %struct.rtvec_def* %3, i64 0, i32 1, i64 %indvars.iv
  %4 = load %struct.rtx_def** %arrayidx8, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load9 = load i32* %5, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 47
  br i1 %cmp11, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %tobool = icmp slt i32 %bf.load9, 0
  %6 = trunc i64 %indvars.iv to i32
  %cmp20 = icmp eq i32 %6, 0
  %or.cond = or i1 %tobool, %cmp20
  br i1 %or.cond, label %if.then21, label %for.inc

if.then21:                                        ; preds = %land.lhs.true
  tail call fastcc void @dwarf2out_frame_debug_expr(%struct.rtx_def* %4)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then21, %land.lhs.true
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %2
  br i1 %exitcond, label %sw.epilog601, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !6
  br label %for.body

if.then32:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1309, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end33:                                         ; preds = %entry
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %expr, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %expr, i64 0, i32 1, i64 0
  %rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx38, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load39 = load i32* %9, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  switch i32 %bf.clear40, label %sw.default600 [
    i32 61, label %sw.bb
    i32 66, label %sw.bb336
  ]

sw.bb:                                            ; preds = %if.end33
  %10 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load41 = load i32* %10, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  switch i32 %bf.clear42, label %sw.default334 [
    i32 61, label %sw.bb43
    i32 75, label %sw.bb54
    i32 76, label %sw.bb54
    i32 135, label %sw.bb54
    i32 54, label %sw.bb280
    i32 84, label %sw.bb288
    i32 134, label %sw.epilog335
  ]

sw.bb43:                                          ; preds = %sw.bb
  %11 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx45 to i32*
  %12 = load i32* %rtuint, align 4, !tbaa !4
  %conv = zext i32 %12 to i64
  %cmp46 = icmp eq i64 %11, %conv
  br i1 %cmp46, label %if.end49, label %if.else

if.else:                                          ; preds = %sw.bb43
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1328, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end49:                                         ; preds = %sw.bb43
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint52 = bitcast %union.rtunion_def* %arrayidx51 to i32*
  %13 = load i32* %rtuint52, align 4, !tbaa !4
  %conv53 = zext i32 %13 to i64
  store i64 %conv53, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  store i64 %conv53, i64* @cfa_temp.0, align 8, !tbaa !13
  %14 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  store i64 %14, i64* @cfa_temp.1, align 8, !tbaa !14
  br label %sw.epilog335

sw.bb54:                                          ; preds = %sw.bb, %sw.bb, %sw.bb
  %15 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %cmp55 = icmp eq %struct.rtx_def* %8, %15
  br i1 %cmp55, label %if.then57, label %if.else122

if.then57:                                        ; preds = %sw.bb54
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx60, align 8, !tbaa !6
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load61 = load i32* %17, align 8
  %bf.clear62 = and i32 %bf.load61, 65535
  switch i32 %bf.clear62, label %sw.default [
    i32 54, label %sw.bb63
    i32 61, label %sw.bb69
  ]

sw.bb63:                                          ; preds = %if.then57
  %rtwint = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0, i32 0
  br label %sw.epilog

sw.bb69:                                          ; preds = %if.then57
  %arrayidx74 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtuint75 = bitcast %union.rtunion_def* %arrayidx74 to i32*
  %18 = load i32* %rtuint75, align 4, !tbaa !4
  %conv76 = zext i32 %18 to i64
  %19 = load i64* @cfa_temp.0, align 8, !tbaa !13
  %cmp77 = icmp eq i64 %conv76, %19
  br i1 %cmp77, label %sw.epilog, label %if.then79

if.then79:                                        ; preds = %sw.bb69
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1353, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

sw.default:                                       ; preds = %if.then57
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1357, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb69, %sw.bb63
  %offset.0.in = phi i64* [ %rtwint, %sw.bb63 ], [ @cfa_temp.1, %sw.bb69 ]
  %offset.0 = load i64* %offset.0.in, align 8
  %arrayidx82 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx83, align 8, !tbaa !6
  %21 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %cmp84 = icmp eq %struct.rtx_def* %20, %21
  br i1 %cmp84, label %if.then86, label %if.else91

if.then86:                                        ; preds = %sw.epilog
  %22 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp87 = icmp eq i64 %22, 6
  br i1 %cmp87, label %if.end106.thread, label %if.then89

if.then89:                                        ; preds = %if.then86
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1364, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end106.thread:                                 ; preds = %if.then86
  store i64 7, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %bf.load1078 = load i32* %10, align 8
  %bf.clear1089 = and i32 %bf.load1078, 65535
  %cmp10910 = icmp eq i32 %bf.clear1089, 76
  %sub11 = sub nsw i64 0, %offset.0
  %offset.0.sub12 = select i1 %cmp10910, i64 %offset.0, i64 %sub11
  br label %if.then115

if.else91:                                        ; preds = %sw.epilog
  %cmp94 = icmp eq i32 %bf.clear42, 135
  %cmp101 = icmp eq %struct.rtx_def* %20, %8
  %or.cond3 = or i1 %cmp94, %cmp101
  br i1 %or.cond3, label %if.end106, label %if.then103

if.then103:                                       ; preds = %if.else91
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1371, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end106:                                        ; preds = %if.else91
  %.pr = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp109 = icmp eq i32 %bf.clear42, 76
  %sub = sub nsw i64 0, %offset.0
  %offset.0.sub = select i1 %cmp109, i64 %offset.0, i64 %sub
  %cmp113 = icmp eq i64 %.pr, 7
  br i1 %cmp113, label %if.then115, label %if.end116

if.then115:                                       ; preds = %if.end106.thread, %if.end106
  %offset.0.sub15 = phi i64 [ %offset.0.sub12, %if.end106.thread ], [ %offset.0.sub, %if.end106 ]
  %23 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  %add = add nsw i64 %23, %offset.0.sub15
  store i64 %add, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %if.end116

if.end116:                                        ; preds = %if.then115, %if.end106
  %offset.0.sub14 = phi i64 [ %offset.0.sub15, %if.then115 ], [ %offset.0.sub, %if.end106 ]
  %24 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 0), align 8, !tbaa !13
  %cmp117 = icmp eq i64 %24, 7
  br i1 %cmp117, label %if.then119, label %sw.epilog335

if.then119:                                       ; preds = %if.end116
  %25 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  %add120 = add nsw i64 %25, %offset.0.sub14
  store i64 %add120, i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  br label %sw.epilog335

if.else122:                                       ; preds = %sw.bb54
  %26 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %cmp123 = icmp eq %struct.rtx_def* %8, %26
  br i1 %cmp123, label %if.then125, label %if.else171

if.then125:                                       ; preds = %if.else122
  %27 = load i32* @frame_pointer_needed, align 4, !tbaa !4
  %tobool126 = icmp eq i32 %27, 0
  br i1 %tobool126, label %if.then127, label %if.end128

if.then127:                                       ; preds = %if.then125
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1386, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end128:                                        ; preds = %if.then125
  %fld129 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1
  %rtx131 = bitcast [1 x %union.rtunion_def]* %fld129 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx131, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load132 = load i32* %29, align 8
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear133, 61
  br i1 %cmp134, label %land.lhs.true136, label %if.else169

land.lhs.true136:                                 ; preds = %if.end128
  %arrayidx141 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtuint142 = bitcast %union.rtunion_def* %arrayidx141 to i32*
  %30 = load i32* %rtuint142, align 4, !tbaa !4
  %conv143 = zext i32 %30 to i64
  %31 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp144 = icmp eq i64 %conv143, %31
  br i1 %cmp144, label %land.lhs.true146, label %if.else169

land.lhs.true146:                                 ; preds = %land.lhs.true136
  %arrayidx148 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx149, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load150 = load i32* %33, align 8
  %bf.clear151 = and i32 %bf.load150, 65535
  %cmp152 = icmp eq i32 %bf.clear151, 54
  br i1 %cmp152, label %if.then154, label %if.else169

if.then154:                                       ; preds = %land.lhs.true146
  %rtwint160 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 0, i32 0
  %34 = load i64* %rtwint160, align 8, !tbaa !29
  %cmp163 = icmp eq i32 %bf.clear42, 76
  %sub166 = sub nsw i64 0, %34
  %.sub166 = select i1 %cmp163, i64 %34, i64 %sub166
  %35 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  %add168 = add nsw i64 %.sub166, %35
  store i64 %add168, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  store i64 6, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  br label %sw.epilog335

if.else169:                                       ; preds = %land.lhs.true146, %land.lhs.true136, %if.end128
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1399, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.else171:                                       ; preds = %if.else122
  %cmp174 = icmp eq i32 %bf.clear42, 76
  br i1 %cmp174, label %if.then176, label %if.end177

if.then176:                                       ; preds = %if.else171
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1404, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end177:                                        ; preds = %if.else171
  %fld178 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1
  %rtx180 = bitcast [1 x %union.rtunion_def]* %fld178 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx180, align 8, !tbaa !6
  %37 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 0
  %bf.load181 = load i32* %37, align 8
  %bf.clear182 = and i32 %bf.load181, 65535
  %cmp183 = icmp eq i32 %bf.clear182, 61
  br i1 %cmp183, label %land.lhs.true185, label %if.else250

land.lhs.true185:                                 ; preds = %if.end177
  %arrayidx190 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 0
  %rtuint191 = bitcast %union.rtunion_def* %arrayidx190 to i32*
  %38 = load i32* %rtuint191, align 4, !tbaa !4
  %conv192 = zext i32 %38 to i64
  %39 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp193 = icmp eq i64 %conv192, %39
  br i1 %cmp193, label %land.lhs.true195, label %land.lhs.true224

land.lhs.true195:                                 ; preds = %land.lhs.true185
  %arrayidx197 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx198, align 8, !tbaa !6
  %41 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 0
  %bf.load199 = load i32* %41, align 8
  %bf.clear200 = and i32 %bf.load199, 65535
  %cmp201 = icmp eq i32 %bf.clear200, 54
  br i1 %cmp201, label %if.then203, label %if.else216

if.then203:                                       ; preds = %land.lhs.true195
  %rtwint209 = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 0, i32 0
  %42 = load i64* %rtwint209, align 8, !tbaa !29
  %43 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  %add211 = sub i64 %43, %42
  store i64 %add211, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  %arrayidx213 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint214 = bitcast %union.rtunion_def* %arrayidx213 to i32*
  %44 = load i32* %rtuint214, align 4, !tbaa !4
  %conv215 = zext i32 %44 to i64
  store i64 %conv215, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  store i64 %conv215, i64* @cfa_temp.0, align 8, !tbaa !13
  store i64 %add211, i64* @cfa_temp.1, align 8, !tbaa !14
  br label %sw.epilog335

if.else216:                                       ; preds = %land.lhs.true195
  br i1 %cmp183, label %land.lhs.true224, label %if.else250

land.lhs.true224:                                 ; preds = %land.lhs.true185, %if.else216
  %arrayidx229 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 0
  %rtuint230 = bitcast %union.rtunion_def* %arrayidx229 to i32*
  %45 = load i32* %rtuint230, align 4, !tbaa !4
  %conv231 = zext i32 %45 to i64
  %46 = load i64* @cfa_temp.0, align 8, !tbaa !13
  %cmp232 = icmp eq i64 %conv231, %46
  br i1 %cmp232, label %land.lhs.true234, label %if.else250

land.lhs.true234:                                 ; preds = %land.lhs.true224
  %arrayidx236 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx237 = bitcast %union.rtunion_def* %arrayidx236 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx237, align 8, !tbaa !6
  %cmp238 = icmp eq %struct.rtx_def* %47, %15
  br i1 %cmp238, label %if.then240, label %if.else250

if.then240:                                       ; preds = %land.lhs.true234
  %48 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp241 = icmp eq i64 %48, 7
  br i1 %cmp241, label %if.end244, label %if.then243

if.then243:                                       ; preds = %if.then240
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1429, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end244:                                        ; preds = %if.then240
  %arrayidx246 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint247 = bitcast %union.rtunion_def* %arrayidx246 to i32*
  %49 = load i32* %rtuint247, align 4, !tbaa !4
  %conv248 = zext i32 %49 to i64
  store i64 %conv248, i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 0), align 8, !tbaa !13
  %50 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  %51 = load i64* @cfa_temp.1, align 8, !tbaa !14
  %sub249 = sub nsw i64 %50, %51
  store i64 %sub249, i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  br label %sw.epilog335

if.else250:                                       ; preds = %if.end177, %land.lhs.true234, %land.lhs.true224, %if.else216
  %cmp253 = icmp eq i32 %bf.clear42, 135
  br i1 %cmp253, label %land.lhs.true255, label %if.else274

land.lhs.true255:                                 ; preds = %if.else250
  %arrayidx257 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx258 = bitcast %union.rtunion_def* %arrayidx257 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx258, align 8, !tbaa !6
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load259 = load i32* %53, align 8
  %bf.clear260 = and i32 %bf.load259, 65535
  %cmp261 = icmp eq i32 %bf.clear260, 54
  br i1 %cmp261, label %if.then263, label %if.else274

if.then263:                                       ; preds = %land.lhs.true255
  %arrayidx265 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint266 = bitcast %union.rtunion_def* %arrayidx265 to i32*
  %54 = load i32* %rtuint266, align 4, !tbaa !4
  %conv267 = zext i32 %54 to i64
  store i64 %conv267, i64* @cfa_temp.0, align 8, !tbaa !13
  %rtwint273 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 1, i64 0, i32 0
  %55 = load i64* %rtwint273, align 8, !tbaa !29
  store i64 %55, i64* @cfa_temp.1, align 8, !tbaa !14
  br label %sw.epilog335

if.else274:                                       ; preds = %land.lhs.true255, %if.else250
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1442, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

sw.bb280:                                         ; preds = %sw.bb
  %arrayidx282 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint283 = bitcast %union.rtunion_def* %arrayidx282 to i32*
  %56 = load i32* %rtuint283, align 4, !tbaa !4
  %conv284 = zext i32 %56 to i64
  store i64 %conv284, i64* @cfa_temp.0, align 8, !tbaa !13
  %rtwint287 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0, i32 0
  %57 = load i64* %rtwint287, align 8, !tbaa !29
  store i64 %57, i64* @cfa_temp.1, align 8, !tbaa !14
  br label %sw.epilog335

sw.bb288:                                         ; preds = %sw.bb
  %fld289 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1
  %rtx291 = bitcast [1 x %union.rtunion_def]* %fld289 to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx291, align 8, !tbaa !6
  %59 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 0
  %bf.load292 = load i32* %59, align 8
  %bf.clear293 = and i32 %bf.load292, 65535
  %cmp294 = icmp eq i32 %bf.clear293, 61
  br i1 %cmp294, label %lor.lhs.false296, label %if.then314

lor.lhs.false296:                                 ; preds = %sw.bb288
  %arrayidx301 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 1, i64 0
  %rtuint302 = bitcast %union.rtunion_def* %arrayidx301 to i32*
  %60 = load i32* %rtuint302, align 4, !tbaa !4
  %conv303 = zext i32 %60 to i64
  %61 = load i64* @cfa_temp.0, align 8, !tbaa !13
  %cmp304 = icmp eq i64 %conv303, %61
  br i1 %cmp304, label %lor.lhs.false306, label %if.then314

lor.lhs.false306:                                 ; preds = %lor.lhs.false296
  %arrayidx308 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx309 = bitcast %union.rtunion_def* %arrayidx308 to %struct.rtx_def**
  %62 = load %struct.rtx_def** %rtx309, align 8, !tbaa !6
  %63 = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 0
  %bf.load310 = load i32* %63, align 8
  %bf.clear311 = and i32 %bf.load310, 65535
  %cmp312 = icmp eq i32 %bf.clear311, 54
  br i1 %cmp312, label %if.end315, label %if.then314

if.then314:                                       ; preds = %lor.lhs.false306, %lor.lhs.false296, %sw.bb288
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1457, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end315:                                        ; preds = %lor.lhs.false306
  %arrayidx317 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint318 = bitcast %union.rtunion_def* %arrayidx317 to i32*
  %64 = load i32* %rtuint318, align 4, !tbaa !4
  %cmp320 = icmp eq i32 %64, %60
  br i1 %cmp320, label %if.end327, label %if.then322

if.then322:                                       ; preds = %if.end315
  %conv319 = zext i32 %64 to i64
  store i64 %conv319, i64* @cfa_temp.0, align 8, !tbaa !13
  br label %if.end327

if.end327:                                        ; preds = %if.end315, %if.then322
  %rtwint333 = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 1, i64 0, i32 0
  %65 = load i64* %rtwint333, align 8, !tbaa !29
  %66 = load i64* @cfa_temp.1, align 8, !tbaa !14
  %or = or i64 %66, %65
  store i64 %or, i64* @cfa_temp.1, align 8, !tbaa !14
  br label %sw.epilog335

sw.default334:                                    ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1471, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

sw.epilog335:                                     ; preds = %if.then119, %if.end116, %if.then203, %if.then263, %if.end244, %if.then154, %sw.bb, %if.end327, %sw.bb280, %if.end49
  tail call fastcc void @def_cfa_1(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), %struct.cfa_loc* @cfa)
  br label %sw.epilog601

sw.bb336:                                         ; preds = %if.end33
  %67 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load337 = load i32* %67, align 8
  %bf.clear338 = and i32 %bf.load337, 65535
  %cmp339 = icmp eq i32 %bf.clear338, 61
  br i1 %cmp339, label %if.end342, label %if.then341

if.then341:                                       ; preds = %sw.bb336
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1479, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end342:                                        ; preds = %sw.bb336
  %arrayidx344 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtx345 = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtx_def**
  %68 = load %struct.rtx_def** %rtx345, align 8, !tbaa !6
  %69 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 0
  %bf.load346 = load i32* %69, align 8
  %bf.clear347 = and i32 %bf.load346, 65535
  switch i32 %bf.clear347, label %sw.default552 [
    i32 100, label %sw.bb348
    i32 97, label %sw.bb399
    i32 96, label %sw.bb399
    i32 75, label %sw.bb438
    i32 76, label %sw.bb438
    i32 135, label %sw.bb438
    i32 61, label %sw.bb502
    i32 99, label %sw.bb529
  ]

sw.bb348:                                         ; preds = %if.end342
  %arrayidx353 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 1
  %rtx354 = bitcast %union.rtunion_def* %arrayidx353 to %struct.rtx_def**
  %70 = load %struct.rtx_def** %rtx354, align 8, !tbaa !6
  %arrayidx356 = getelementptr inbounds %struct.rtx_def* %70, i64 0, i32 1, i64 1
  %rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**
  %71 = load %struct.rtx_def** %rtx357, align 8, !tbaa !6
  %72 = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 0
  %bf.load358 = load i32* %72, align 8
  %bf.clear359 = and i32 %bf.load358, 65535
  %cmp360 = icmp eq i32 %bf.clear359, 54
  br i1 %cmp360, label %if.end363, label %if.then362

if.then362:                                       ; preds = %sw.bb348
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1490, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end363:                                        ; preds = %sw.bb348
  %arrayidx381 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtx382 = bitcast %union.rtunion_def* %arrayidx381 to %struct.rtx_def**
  %73 = load %struct.rtx_def** %rtx382, align 8, !tbaa !6
  %arrayidx384 = getelementptr inbounds %struct.rtx_def* %73, i64 0, i32 1, i64 0
  %rtuint385 = bitcast %union.rtunion_def* %arrayidx384 to i32*
  %74 = load i32* %rtuint385, align 4, !tbaa !4
  %cmp386 = icmp ne i32 %74, 7
  %75 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 0), align 8
  %cmp389 = icmp ne i64 %75, 7
  %or.cond602 = or i1 %cmp386, %cmp389
  br i1 %or.cond602, label %if.then391, label %if.end392

if.then391:                                       ; preds = %if.end363
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1495, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end392:                                        ; preds = %if.end363
  %rtwint375 = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 1, i64 0, i32 0
  %76 = load i64* %rtwint375, align 8, !tbaa !29
  %77 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  %add393 = sub i64 %77, %76
  store i64 %add393, i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  %78 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp394 = icmp eq i64 %78, 7
  br i1 %cmp394, label %if.then396, label %if.end397

if.then396:                                       ; preds = %if.end392
  store i64 %add393, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %if.end397

if.end397:                                        ; preds = %if.then396, %if.end392
  %sub398 = sub nsw i64 0, %add393
  br label %sw.epilog553

sw.bb399:                                         ; preds = %if.end342, %if.end342
  %bf.lshr401 = lshr i32 %bf.load39, 16
  %bf.clear402 = and i32 %bf.lshr401, 255
  %idxprom4032 = zext i32 %bf.clear402 to i64
  %arrayidx404 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom4032
  %79 = load i8* %arrayidx404, align 1, !tbaa !1
  %conv405 = zext i8 %79 to i64
  %arrayidx420 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtx421 = bitcast %union.rtunion_def* %arrayidx420 to %struct.rtx_def**
  %80 = load %struct.rtx_def** %rtx421, align 8, !tbaa !6
  %arrayidx423 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 0
  %rtuint424 = bitcast %union.rtunion_def* %arrayidx423 to i32*
  %81 = load i32* %rtuint424, align 4, !tbaa !4
  %cmp425 = icmp ne i32 %81, 7
  %82 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 0), align 8
  %cmp428 = icmp ne i64 %82, 7
  %or.cond603 = or i1 %cmp425, %cmp428
  br i1 %or.cond603, label %if.then430, label %if.end431

if.then430:                                       ; preds = %sw.bb399
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1513, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end431:                                        ; preds = %sw.bb399
  %sub414 = sub nsw i64 0, %conv405
  %cmp411 = icmp eq i32 %bf.clear347, 97
  %sub414.conv405 = select i1 %cmp411, i64 %sub414, i64 %conv405
  %83 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  %add432 = add nsw i64 %sub414.conv405, %83
  store i64 %add432, i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  %84 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp433 = icmp eq i64 %84, 7
  br i1 %cmp433, label %if.then435, label %if.end436

if.then435:                                       ; preds = %if.end431
  store i64 %add432, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  br label %if.end436

if.end436:                                        ; preds = %if.then435, %if.end431
  %sub437 = sub nsw i64 0, %add432
  br label %sw.epilog553

sw.bb438:                                         ; preds = %if.end342, %if.end342, %if.end342
  %arrayidx443 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 1
  %rtx444 = bitcast %union.rtunion_def* %arrayidx443 to %struct.rtx_def**
  %85 = load %struct.rtx_def** %rtx444, align 8, !tbaa !6
  %86 = getelementptr inbounds %struct.rtx_def* %85, i64 0, i32 0
  %bf.load445 = load i32* %86, align 8
  %bf.clear446 = and i32 %bf.load445, 65535
  %cmp447 = icmp eq i32 %bf.clear446, 54
  br i1 %cmp447, label %if.end450, label %if.then449

if.then449:                                       ; preds = %sw.bb438
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1528, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end450:                                        ; preds = %sw.bb438
  %rtwint459 = getelementptr inbounds %struct.rtx_def* %85, i64 0, i32 1, i64 0, i32 0
  %87 = load i64* %rtwint459, align 8, !tbaa !29
  %cmp465 = icmp eq i32 %bf.clear347, 76
  %sub468 = sub nsw i64 0, %87
  %sub468. = select i1 %cmp465, i64 %sub468, i64 %87
  %88 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 0), align 8, !tbaa !13
  %arrayidx474 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtx475 = bitcast %union.rtunion_def* %arrayidx474 to %struct.rtx_def**
  %89 = load %struct.rtx_def** %rtx475, align 8, !tbaa !6
  %arrayidx477 = getelementptr inbounds %struct.rtx_def* %89, i64 0, i32 1, i64 0
  %rtuint478 = bitcast %union.rtunion_def* %arrayidx477 to i32*
  %90 = load i32* %rtuint478, align 4, !tbaa !4
  %conv479 = zext i32 %90 to i64
  %cmp480 = icmp eq i64 %88, %conv479
  br i1 %cmp480, label %if.then482, label %if.else484

if.then482:                                       ; preds = %if.end450
  %91 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  %sub483 = sub nsw i64 %sub468., %91
  br label %sw.epilog553

if.else484:                                       ; preds = %if.end450
  %92 = load i64* @cfa_temp.0, align 8, !tbaa !13
  %cmp495 = icmp eq i64 %92, %conv479
  br i1 %cmp495, label %if.then497, label %if.else499

if.then497:                                       ; preds = %if.else484
  %93 = load i64* @cfa_temp.1, align 8, !tbaa !14
  %sub498 = sub nsw i64 %sub468., %93
  br label %sw.epilog553

if.else499:                                       ; preds = %if.else484
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1538, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

sw.bb502:                                         ; preds = %if.end342
  %94 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 0), align 8, !tbaa !13
  %arrayidx507 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtuint508 = bitcast %union.rtunion_def* %arrayidx507 to i32*
  %95 = load i32* %rtuint508, align 4, !tbaa !4
  %conv509 = zext i32 %95 to i64
  %cmp510 = icmp eq i64 %94, %conv509
  br i1 %cmp510, label %if.then512, label %if.else514

if.then512:                                       ; preds = %sw.bb502
  %96 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa_store, i64 0, i32 1), align 8, !tbaa !14
  %sub513 = sub nsw i64 0, %96
  br label %sw.epilog553

if.else514:                                       ; preds = %sw.bb502
  %97 = load i64* @cfa_temp.0, align 8, !tbaa !13
  %cmp522 = icmp eq i64 %97, %conv509
  br i1 %cmp522, label %if.then524, label %if.else526

if.then524:                                       ; preds = %if.else514
  %98 = load i64* @cfa_temp.1, align 8, !tbaa !14
  %sub525 = sub nsw i64 0, %98
  br label %sw.epilog553

if.else526:                                       ; preds = %if.else514
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1549, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

sw.bb529:                                         ; preds = %if.end342
  %99 = load i64* @cfa_temp.0, align 8, !tbaa !13
  %arrayidx534 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtx535 = bitcast %union.rtunion_def* %arrayidx534 to %struct.rtx_def**
  %100 = load %struct.rtx_def** %rtx535, align 8, !tbaa !6
  %arrayidx537 = getelementptr inbounds %struct.rtx_def* %100, i64 0, i32 1, i64 0
  %rtuint538 = bitcast %union.rtunion_def* %arrayidx537 to i32*
  %101 = load i32* %rtuint538, align 4, !tbaa !4
  %conv539 = zext i32 %101 to i64
  %cmp540 = icmp eq i64 %99, %conv539
  br i1 %cmp540, label %if.end543, label %if.then542

if.then542:                                       ; preds = %sw.bb529
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1555, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end543:                                        ; preds = %sw.bb529
  %102 = load i64* @cfa_temp.1, align 8, !tbaa !14
  %sub544 = sub nsw i64 0, %102
  %bf.lshr546 = lshr i32 %bf.load39, 16
  %bf.clear547 = and i32 %bf.lshr546, 255
  %idxprom5481 = zext i32 %bf.clear547 to i64
  %arrayidx549 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom5481
  %103 = load i8* %arrayidx549, align 1, !tbaa !1
  %conv550 = zext i8 %103 to i64
  %sub551 = sub nsw i64 %102, %conv550
  store i64 %sub551, i64* @cfa_temp.1, align 8, !tbaa !14
  br label %sw.epilog553

sw.default552:                                    ; preds = %if.end342
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1561, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

sw.epilog553:                                     ; preds = %if.then512, %if.then524, %if.then482, %if.then497, %if.end543, %if.end436, %if.end397
  %offset.5 = phi i64 [ %sub544, %if.end543 ], [ %sub513, %if.then512 ], [ %sub525, %if.then524 ], [ %sub483, %if.then482 ], [ %sub498, %if.then497 ], [ %sub437, %if.end436 ], [ %sub398, %if.end397 ]
  %arrayidx555 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint556 = bitcast %union.rtunion_def* %arrayidx555 to i32*
  %104 = load i32* %rtuint556, align 4, !tbaa !4
  %105 = and i32 %104, -2
  %switch = icmp eq i32 %105, 6
  br i1 %switch, label %if.end599, label %land.lhs.true565

land.lhs.true565:                                 ; preds = %sw.epilog553
  %conv569 = zext i32 %104 to i64
  %106 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  %cmp570 = icmp eq i64 %conv569, %106
  br i1 %cmp570, label %if.then572, label %if.end599

if.then572:                                       ; preds = %land.lhs.true565
  %107 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  %cmp573 = icmp eq i64 %107, 0
  br i1 %cmp573, label %if.then575, label %if.else576

if.then575:                                       ; preds = %if.then572
  tail call fastcc void @def_cfa_1(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), %struct.cfa_loc* @cfa)
  %108 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %call.i4 = tail call noalias i8* @xmalloc(i64 24) #5
  %109 = bitcast i8* %call.i4 to %struct.queued_reg_save*
  %110 = load %struct.queued_reg_save** @queued_reg_saves, align 8, !tbaa !6
  %next.i5 = bitcast i8* %call.i4 to %struct.queued_reg_save**
  store %struct.queued_reg_save* %110, %struct.queued_reg_save** %next.i5, align 8, !tbaa !34
  %reg1.i6 = getelementptr inbounds i8* %call.i4, i64 8
  %111 = bitcast i8* %reg1.i6 to %struct.rtx_def**
  store %struct.rtx_def* %108, %struct.rtx_def** %111, align 8, !tbaa !27
  %cfa_offset.i7 = getelementptr inbounds i8* %call.i4, i64 16
  %112 = bitcast i8* %cfa_offset.i7 to i64*
  store i64 %offset.5, i64* %112, align 8, !tbaa !33
  store %struct.queued_reg_save* %109, %struct.queued_reg_save** @queued_reg_saves, align 8, !tbaa !6
  store i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), i8** @last_reg_save_label, align 8, !tbaa !6
  br label %sw.epilog601

if.else576:                                       ; preds = %if.then572
  %bf.load580 = load i32* %69, align 8
  %bf.clear581 = and i32 %bf.load580, 65535
  %cmp582 = icmp eq i32 %bf.clear581, 61
  br i1 %cmp582, label %if.end588, label %if.then584

if.then584:                                       ; preds = %if.else576
  %arrayidx586 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtx587 = bitcast %union.rtunion_def* %arrayidx586 to %struct.rtx_def**
  %113 = load %struct.rtx_def** %rtx587, align 8, !tbaa !6
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %113, i64 0, i32 0
  %bf.load589.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end588

if.end588:                                        ; preds = %if.else576, %if.then584
  %bf.load589 = phi i32 [ %bf.load589.pre, %if.then584 ], [ %bf.load580, %if.else576 ]
  %x.0 = phi %struct.rtx_def* [ %113, %if.then584 ], [ %68, %if.else576 ]
  %bf.clear590 = and i32 %bf.load589, 65535
  %cmp591 = icmp eq i32 %bf.clear590, 61
  br i1 %cmp591, label %if.end594, label %if.then593

if.then593:                                       ; preds = %if.end588
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1588, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

if.end594:                                        ; preds = %if.end588
  %arrayidx596 = getelementptr inbounds %struct.rtx_def* %x.0, i64 0, i32 1, i64 0
  %rtuint597 = bitcast %union.rtunion_def* %arrayidx596 to i32*
  %114 = load i32* %rtuint597, align 4, !tbaa !4
  %conv598 = zext i32 %114 to i64
  store i64 %conv598, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 0), align 8, !tbaa !13
  store i64 %offset.5, i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 2), align 8, !tbaa !12
  store i32 1, i32* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 3), align 8, !tbaa !10
  tail call fastcc void @def_cfa_1(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), %struct.cfa_loc* @cfa)
  br label %sw.epilog601

if.end599:                                        ; preds = %sw.epilog553, %land.lhs.true565
  tail call fastcc void @def_cfa_1(i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), %struct.cfa_loc* @cfa)
  %call.i = tail call noalias i8* @xmalloc(i64 24) #5
  %115 = bitcast i8* %call.i to %struct.queued_reg_save*
  %116 = load %struct.queued_reg_save** @queued_reg_saves, align 8, !tbaa !6
  %next.i = bitcast i8* %call.i to %struct.queued_reg_save**
  store %struct.queued_reg_save* %116, %struct.queued_reg_save** %next.i, align 8, !tbaa !34
  %reg1.i = getelementptr inbounds i8* %call.i, i64 8
  %117 = bitcast i8* %reg1.i to %struct.rtx_def**
  store %struct.rtx_def* %7, %struct.rtx_def** %117, align 8, !tbaa !27
  %cfa_offset.i = getelementptr inbounds i8* %call.i, i64 16
  %118 = bitcast i8* %cfa_offset.i to i64*
  store i64 %offset.5, i64* %118, align 8, !tbaa !33
  store %struct.queued_reg_save* %115, %struct.queued_reg_save** @queued_reg_saves, align 8, !tbaa !6
  store i8* getelementptr inbounds ([20 x i8]* @dwarf2out_cfi_label.label, i64 0, i64 0), i8** @last_reg_save_label, align 8, !tbaa !6
  br label %sw.epilog601

sw.default600:                                    ; preds = %if.end33
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1603, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.dwarf2out_frame_debug_expr, i64 0, i64 0)) #7
  unreachable

sw.epilog601:                                     ; preds = %for.inc, %if.then, %if.end599, %if.end594, %if.then575, %sw.epilog335
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_begin_prologue(i32 %line, i8* %file) #1 {
entry:
  %label = alloca [30 x i8], align 16
  store %union.tree_node* null, %union.tree_node** @current_function_func_begin_label, align 8, !tbaa !6
  %0 = load i32* @flag_unwind_tables, align 4
  %tobool.i = icmp eq i32 %0, 0
  br i1 %tobool.i, label %switch.early.test.i, label %if.end

switch.early.test.i:                              ; preds = %entry
  %1 = load i32* @write_symbols, align 4, !tbaa !1
  switch i32 %1, label %lor.rhs.i [
    i32 7, label %if.end
    i32 4, label %if.end
  ]

lor.rhs.i:                                        ; preds = %switch.early.test.i
  %2 = load i32* @flag_exceptions, align 4, !tbaa !4
  %tobool3.i = icmp eq i32 %2, 0
  br i1 %tobool3.i, label %if.end23, label %if.end

if.end:                                           ; preds = %lor.rhs.i, %entry, %switch.early.test.i, %switch.early.test.i
  %3 = load i32* @current_funcdef_number, align 4, !tbaa !4
  %inc = add i32 %3, 1
  store i32 %inc, i32* @current_funcdef_number, align 4, !tbaa !4
  %4 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  call void @function_section(%union.tree_node* %4) #5
  %arraydecay = getelementptr inbounds [30 x i8]* %label, i64 0, i64 0
  %5 = load i32* @current_funcdef_number, align 4, !tbaa !4
  %call1 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 %5) #5
  %6 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %7 = load i32* @current_funcdef_number, align 4, !tbaa !4
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([8 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 %7) #5
  %call6 = call %union.tree_node* @get_identifier(i8* %arraydecay) #5
  store %union.tree_node* %call6, %union.tree_node** @current_function_func_begin_label, align 8, !tbaa !6
  %8 = load i32* @fde_table_in_use, align 4, !tbaa !4
  %9 = load i32* @fde_table_allocated, align 4, !tbaa !4
  %cmp = icmp eq i32 %8, %9
  br i1 %cmp, label %if.then7, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  %.pre35 = load %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  br label %if.end9

if.then7:                                         ; preds = %if.end
  %add = add i32 %8, 256
  store i32 %add, i32* @fde_table_allocated, align 4, !tbaa !4
  %10 = load %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  %11 = bitcast %struct.dw_fde_struct* %10 to i8*
  %conv = zext i32 %add to i64
  %mul = mul i64 %conv, 40
  %call8 = call i8* @xrealloc(i8* %11, i64 %mul) #5
  %12 = bitcast i8* %call8 to %struct.dw_fde_struct*
  store %struct.dw_fde_struct* %12, %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  %.pre = load i32* @fde_table_in_use, align 4, !tbaa !4
  br label %if.end9

if.end9:                                          ; preds = %if.end.if.end9_crit_edge, %if.then7
  %13 = phi %struct.dw_fde_struct* [ %12, %if.then7 ], [ %.pre35, %if.end.if.end9_crit_edge ]
  %14 = phi i32 [ %.pre, %if.then7 ], [ %8, %if.end.if.end9_crit_edge ]
  %inc10 = add i32 %14, 1
  store i32 %inc10, i32* @fde_table_in_use, align 4, !tbaa !4
  %idxprom = zext i32 %14 to i64
  %call12 = call noalias i8* @xstrdup(i8* %arraydecay) #5
  %dw_fde_begin = getelementptr inbounds %struct.dw_fde_struct* %13, i64 %idxprom, i32 0
  store i8* %call12, i8** %dw_fde_begin, align 8, !tbaa !35
  %dw_fde_current_label = getelementptr inbounds %struct.dw_fde_struct* %13, i64 %idxprom, i32 1
  %15 = bitcast i8** %dw_fde_current_label to i8*
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 24, i32 8, i1 false)
  %16 = load i32* @current_funcdef_number, align 4, !tbaa !4
  %funcdef_number = getelementptr inbounds %struct.dw_fde_struct* %13, i64 %idxprom, i32 4
  store i32 %16, i32* %funcdef_number, align 4, !tbaa !36
  %17 = load i32* @current_function_nothrow, align 4, !tbaa !4
  %nothrow = getelementptr inbounds %struct.dw_fde_struct* %13, i64 %idxprom, i32 5
  %18 = trunc i32 %17 to i8
  %bf.load = load i8* %nothrow, align 4
  %bf.value = and i8 %18, 1
  %bf.clear = and i8 %bf.load, -2
  %bf.set = or i8 %bf.clear, %bf.value
  store i8 %bf.set, i8* %nothrow, align 4
  %19 = load %struct.function** @cfun, align 8, !tbaa !6
  %uses_eh_lsda = getelementptr inbounds %struct.function* %19, i64 0, i32 56
  %20 = bitcast i24* %uses_eh_lsda to i32*
  %bf.load13 = load i32* %20, align 8
  %21 = lshr i32 %bf.load13, 21
  %bf.value17 = trunc i32 %21 to i8
  %bf.shl = and i8 %bf.value17, 2
  %bf.clear18 = and i8 %bf.set, -3
  %bf.set19 = or i8 %bf.shl, %bf.clear18
  store i8 %bf.set19, i8* %nothrow, align 4
  store i64 0, i64* @old_args_size, align 8, !tbaa !8
  store i64 0, i64* @args_size, align 8, !tbaa !8
  %tobool21 = icmp ne i8* %file, null
  %22 = load i32* @debug_info_level, align 4
  %cmp.i = icmp ugt i32 %22, 1
  %or.cond = and i1 %tobool21, %cmp.i
  br i1 %or.cond, label %if.then.i, label %if.end23

if.then.i:                                        ; preds = %if.end9
  %23 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  call void @function_section(%union.tree_node* %23) #5
  %24 = load i32* @flag_debug_asm, align 4, !tbaa !4
  %tobool.i33 = icmp eq i32 %24, 0
  br i1 %tobool.i33, label %if.end.i, label %if.then1.i

if.then1.i:                                       ; preds = %if.then.i
  %25 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %call.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([11 x i8]* @.str408, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str409, i64 0, i64 0), i8* %file, i32 %line) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then1.i, %if.then.i
  %call2.i = call fastcc i32 @lookup_filename(i8* %file) #5
  %26 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %call3.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([15 x i8]* @.str410, i64 0, i64 0), i32 %call2.i, i32 %line) #5
  %27 = load i32* @line_info_table_in_use, align 4, !tbaa !4
  %inc.i = add i32 %27, 1
  store i32 %inc.i, i32* @line_info_table_in_use, align 4, !tbaa !4
  %28 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  %section_name.i = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 15
  %29 = load %union.tree_node** %section_name.i, align 8, !tbaa !37
  %tobool4.i = icmp eq %union.tree_node* %29, null
  br i1 %tobool4.i, label %if.end23, label %if.then5.i

if.then5.i:                                       ; preds = %if.end.i
  %30 = load i32* @separate_line_info_table_in_use, align 4, !tbaa !4
  %inc6.i = add i32 %30, 1
  store i32 %inc6.i, i32* @separate_line_info_table_in_use, align 4, !tbaa !4
  br label %if.end23

if.end23:                                         ; preds = %lor.rhs.i, %if.end9, %if.then5.i, %if.end.i
  ret void
}

declare void @function_section(%union.tree_node*) #2

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #3

declare %union.tree_node* @get_identifier(i8*) #2

declare i8* @xrealloc(i8*, i64) #2

declare noalias i8* @xstrdup(i8*) #2

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_source_line(i32 %line, i8* %filename) #1 {
entry:
  %0 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp = icmp ugt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end8

if.then:                                          ; preds = %entry
  %1 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  tail call void @function_section(%union.tree_node* %1) #5
  %2 = load i32* @flag_debug_asm, align 4, !tbaa !4
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  %3 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([11 x i8]* @.str408, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str409, i64 0, i64 0), i8* %filename, i32 %line) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then1
  %call2 = tail call fastcc i32 @lookup_filename(i8* %filename)
  %4 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([15 x i8]* @.str410, i64 0, i64 0), i32 %call2, i32 %line) #5
  %5 = load i32* @line_info_table_in_use, align 4, !tbaa !4
  %inc = add i32 %5, 1
  store i32 %inc, i32* @line_info_table_in_use, align 4, !tbaa !4
  %6 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  %section_name = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 15
  %7 = load %union.tree_node** %section_name, align 8, !tbaa !37
  %tobool4 = icmp eq %union.tree_node* %7, null
  br i1 %tobool4, label %if.end8, label %if.then5

if.then5:                                         ; preds = %if.end
  %8 = load i32* @separate_line_info_table_in_use, align 4, !tbaa !4
  %inc6 = add i32 %8, 1
  store i32 %inc6, i32* @separate_line_info_table_in_use, align 4, !tbaa !4
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then5, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_end_epilogue() #1 {
entry:
  %label = alloca [30 x i8], align 16
  %arraydecay = getelementptr inbounds [30 x i8]* %label, i64 0, i64 0
  %0 = load i32* @current_funcdef_number, align 4, !tbaa !4
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0), i32 %0) #5
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %1, i8* %arraydecay) #5
  %2 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %3 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %2)
  %4 = load i32* @fde_table_in_use, align 4, !tbaa !4
  %sub = add i32 %4, -1
  %idxprom = zext i32 %sub to i64
  %5 = load %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  %call4 = call noalias i8* @xstrdup(i8* %arraydecay) #5
  %dw_fde_end = getelementptr inbounds %struct.dw_fde_struct* %5, i64 %idxprom, i32 2
  store i8* %call4, i8** %dw_fde_end, align 8, !tbaa !40
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_frame_init() #1 {
entry:
  %loc.i = alloca %struct.cfa_loc, align 8
  %call = tail call noalias i8* @xcalloc(i64 256, i64 40) #5
  %0 = bitcast i8* %call to %struct.dw_fde_struct*
  store %struct.dw_fde_struct* %0, %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  store i32 256, i32* @fde_table_allocated, align 4, !tbaa !4
  store i32 0, i32* @fde_table_in_use, align 4, !tbaa !4
  %1 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %1, 23
  %2 = and i32 %and, 4
  %3 = add i32 %2, 4
  %conv3 = zext i32 %3 to i64
  %4 = bitcast %struct.cfa_loc* %loc.i to i8*
  call void @llvm.lifetime.start(i64 32, i8* %4) #5
  %indirect.i = getelementptr inbounds %struct.cfa_loc* %loc.i, i64 0, i32 3
  store i32 0, i32* %indirect.i, align 8, !tbaa !10
  %base_offset.i = getelementptr inbounds %struct.cfa_loc* %loc.i, i64 0, i32 2
  store i64 0, i64* %base_offset.i, align 8, !tbaa !12
  %reg1.i = getelementptr inbounds %struct.cfa_loc* %loc.i, i64 0, i32 0
  store i64 7, i64* %reg1.i, align 8, !tbaa !13
  %offset2.i = getelementptr inbounds %struct.cfa_loc* %loc.i, i64 0, i32 1
  store i64 %conv3, i64* %offset2.i, align 8, !tbaa !14
  call fastcc void @def_cfa_1(i8* null, %struct.cfa_loc* %loc.i) #5
  call void @llvm.lifetime.end(i64 32, i8* %4) #5
  %call1 = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 7) #5
  %call2 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 0, %struct.rtx_def* %call1) #5
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.end55.i, %entry
  %rtl.tr.i = phi %struct.rtx_def* [ %call2, %entry ], [ %21, %if.end55.i ]
  %5 = getelementptr inbounds %struct.rtx_def* %rtl.tr.i, i64 0, i32 0
  %bf.load.i = load i32* %5, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %sw.default59.i [
    i32 61, label %sw.bb.i
    i32 66, label %sw.bb7.i
    i32 75, label %sw.bb47.i
  ]

sw.bb.i:                                          ; preds = %tailrecurse.i
  %6 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = and i32 %6, 33554432
  %tobool.i = icmp eq i32 %and.i, 0
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %rtl.tr.i, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %7 = load i32* %rtuint.i, align 4, !tbaa !4
  %idxprom.i = zext i32 %7 to i64
  %svr4_dbx_register_map.dbx64_register_map.i = select i1 %tobool.i, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in.i = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i, i64 0, i64 %idxprom.i
  %cond.i = load i32* %cond.in.i, align 4
  br label %sw.epilog60.i

sw.bb7.i:                                         ; preds = %tailrecurse.i
  %arrayidx9.i = getelementptr inbounds %struct.rtx_def* %rtl.tr.i, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx9.i to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load10.i = load i32* %9, align 8
  %bf.clear11.i = and i32 %bf.load10.i, 65535
  switch i32 %bf.clear11.i, label %sw.default.i [
    i32 61, label %sw.bb12.i
    i32 75, label %sw.bb16.i
    i32 76, label %sw.bb31.i
  ]

sw.bb12.i:                                        ; preds = %sw.bb7.i
  %arrayidx14.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint15.i = bitcast %union.rtunion_def* %arrayidx14.i to i32*
  %10 = load i32* %rtuint15.i, align 4, !tbaa !4
  %cmp.i = icmp eq i32 %10, 7
  br i1 %cmp.i, label %sw.epilog60.i, label %if.then.i

if.then.i:                                        ; preds = %sw.bb12.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 894, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.initial_return_save, i64 0, i64 0)) #7
  unreachable

sw.bb16.i:                                        ; preds = %sw.bb7.i
  %fld17.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1
  %rtx19.i = bitcast [1 x %union.rtunion_def]* %fld17.i to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx19.i, align 8, !tbaa !6
  %arrayidx21.i = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtuint22.i = bitcast %union.rtunion_def* %arrayidx21.i to i32*
  %12 = load i32* %rtuint22.i, align 4, !tbaa !4
  %cmp23.i = icmp eq i32 %12, 7
  br i1 %cmp23.i, label %if.end25.i, label %if.then24.i

if.then24.i:                                      ; preds = %sw.bb16.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.initial_return_save, i64 0, i64 0)) #7
  unreachable

if.end25.i:                                       ; preds = %sw.bb16.i
  %arrayidx27.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 1
  %rtx28.i = bitcast %union.rtunion_def* %arrayidx27.i to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx28.i, align 8, !tbaa !6
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 0, i32 0
  %14 = load i64* %rtwint.i, align 8, !tbaa !29
  br label %sw.epilog60.i

sw.bb31.i:                                        ; preds = %sw.bb7.i
  %fld32.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1
  %rtx34.i = bitcast [1 x %union.rtunion_def]* %fld32.i to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx34.i, align 8, !tbaa !6
  %arrayidx36.i = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0
  %rtuint37.i = bitcast %union.rtunion_def* %arrayidx36.i to i32*
  %16 = load i32* %rtuint37.i, align 4, !tbaa !4
  %cmp38.i = icmp eq i32 %16, 7
  br i1 %cmp38.i, label %if.end40.i, label %if.then39.i

if.then39.i:                                      ; preds = %sw.bb31.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 906, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.initial_return_save, i64 0, i64 0)) #7
  unreachable

if.end40.i:                                       ; preds = %sw.bb31.i
  %arrayidx42.i = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 1
  %rtx43.i = bitcast %union.rtunion_def* %arrayidx42.i to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx43.i, align 8, !tbaa !6
  %rtwint46.i = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 0, i32 0
  %18 = load i64* %rtwint46.i, align 8, !tbaa !29
  %sub.i = sub nsw i64 0, %18
  br label %sw.epilog60.i

sw.default.i:                                     ; preds = %sw.bb7.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 911, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.initial_return_save, i64 0, i64 0)) #7
  unreachable

sw.bb47.i:                                        ; preds = %tailrecurse.i
  %arrayidx49.i = getelementptr inbounds %struct.rtx_def* %rtl.tr.i, i64 0, i32 1, i64 1
  %rtx50.i = bitcast %union.rtunion_def* %arrayidx49.i to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx50.i, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load51.i = load i32* %20, align 8
  %bf.clear52.i = and i32 %bf.load51.i, 65535
  %cmp53.i = icmp eq i32 %bf.clear52.i, 54
  br i1 %cmp53.i, label %if.end55.i, label %if.then54.i

if.then54.i:                                      ; preds = %sw.bb47.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 921, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.initial_return_save, i64 0, i64 0)) #7
  unreachable

if.end55.i:                                       ; preds = %sw.bb47.i
  %arrayidx57.i = getelementptr inbounds %struct.rtx_def* %rtl.tr.i, i64 0, i32 1, i64 0
  %rtx58.i = bitcast %union.rtunion_def* %arrayidx57.i to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx58.i, align 8, !tbaa !6
  br label %tailrecurse.i

sw.default59.i:                                   ; preds = %tailrecurse.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 926, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.initial_return_save, i64 0, i64 0)) #7
  unreachable

sw.epilog60.i:                                    ; preds = %if.end40.i, %if.end25.i, %sw.bb12.i, %sw.bb.i
  %reg.0.i = phi i32 [ -1, %if.end40.i ], [ -1, %if.end25.i ], [ %cond.i, %sw.bb.i ], [ -1, %sw.bb12.i ]
  %offset.0.i = phi i64 [ %sub.i, %if.end40.i ], [ %14, %if.end25.i ], [ 0, %sw.bb.i ], [ 0, %sw.bb12.i ]
  %22 = load i32* @target_flags, align 4, !tbaa !4
  %and61.i = lshr i32 %22, 22
  %23 = and i32 %and61.i, 8
  %24 = add i32 %23, 8
  %25 = load i64* getelementptr inbounds (%struct.cfa_loc* @cfa, i64 0, i32 1), align 8, !tbaa !14
  %call.i.i.i = tail call noalias i8* @xmalloc(i64 32) #5
  %26 = bitcast i8* %call.i.i.i to %struct.dw_cfi_struct*
  %dw_cfi_next.i.i.i = bitcast i8* %call.i.i.i to %struct.dw_cfi_struct**
  store %struct.dw_cfi_struct* null, %struct.dw_cfi_struct** %dw_cfi_next.i.i.i, align 8, !tbaa !22
  %dw_cfi_oprnd1.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* %dw_cfi_oprnd1.i.i.i, i8 0, i64 16, i32 8, i1 false) #5
  %conv.i.i = zext i32 %24 to i64
  %27 = bitcast i8* %dw_cfi_oprnd1.i.i.i to i64*
  store i64 %conv.i.i, i64* %27, align 8, !tbaa !8
  %cmp.i.i = icmp eq i32 %reg.0.i, -1
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else12.i.i

if.then.i.i:                                      ; preds = %sw.epilog60.i
  %sub64.i = sub nsw i64 %offset.0.i, %25
  %dw_cfi_opc.i.i = getelementptr inbounds i8* %call.i.i.i, i64 8
  %28 = bitcast i8* %dw_cfi_opc.i.i to i32*
  %29 = load i32* @target_flags, align 4, !tbaa !4
  %and4.i.i = lshr i32 %29, 23
  %30 = and i32 %and4.i.i, 4
  %sub.i.i = sub i32 -4, %30
  %conv6.i.i = sext i32 %sub.i.i to i64
  %div.i.i = sdiv i64 %sub64.i, %conv6.i.i
  %cmp7.i.i = icmp slt i64 %div.i.i, 0
  %...i.i = select i1 %cmp7.i.i, i32 17, i32 128
  store i32 %...i.i, i32* %28, align 4, !tbaa !16
  %dw_cfi_offset.i.i = getelementptr inbounds i8* %call.i.i.i, i64 24
  %31 = bitcast i8* %dw_cfi_offset.i.i to i64*
  store i64 %div.i.i, i64* %31, align 8, !tbaa !8
  br label %for.cond.i37.i.i

if.else12.i.i:                                    ; preds = %sw.epilog60.i
  %cmp13.i.i = icmp eq i32 %reg.0.i, %24
  br i1 %cmp13.i.i, label %initial_return_save.exit, label %if.else16.i.i

if.else16.i.i:                                    ; preds = %if.else12.i.i
  %dw_cfi_opc17.i.i = getelementptr inbounds i8* %call.i.i.i, i64 8
  %32 = bitcast i8* %dw_cfi_opc17.i.i to i32*
  store i32 9, i32* %32, align 4, !tbaa !16
  %conv18.i.i = zext i32 %reg.0.i to i64
  %dw_cfi_reg_num20.i.i = getelementptr inbounds i8* %call.i.i.i, i64 24
  %33 = bitcast i8* %dw_cfi_reg_num20.i.i to i64*
  store i64 %conv18.i.i, i64* %33, align 8, !tbaa !8
  br label %for.cond.i37.i.i

for.cond.i37.i.i:                                 ; preds = %if.else16.i.i, %if.then.i.i, %for.cond.i37.i.i
  %p.0.i34.i.i = phi %struct.dw_cfi_struct** [ %dw_cfi_next.i36.i.i, %for.cond.i37.i.i ], [ @cie_cfi_head, %if.then.i.i ], [ @cie_cfi_head, %if.else16.i.i ]
  %34 = load %struct.dw_cfi_struct** %p.0.i34.i.i, align 8, !tbaa !6
  %cmp.i35.i.i = icmp eq %struct.dw_cfi_struct* %34, null
  %dw_cfi_next.i36.i.i = getelementptr inbounds %struct.dw_cfi_struct* %34, i64 0, i32 0
  br i1 %cmp.i35.i.i, label %add_fde_cfi.exit.i, label %for.cond.i37.i.i

add_fde_cfi.exit.i:                               ; preds = %for.cond.i37.i.i
  store %struct.dw_cfi_struct* %26, %struct.dw_cfi_struct** %p.0.i34.i.i, align 8, !tbaa !6
  br label %initial_return_save.exit

initial_return_save.exit:                         ; preds = %if.else12.i.i, %add_fde_cfi.exit.i
  ret void
}

declare noalias i8* @xcalloc(i64, i64) #2

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #2

; Function Attrs: nounwind uwtable
define void @dwarf2out_frame_finish() #1 {
entry:
  %0 = load i32* @write_symbols, align 4, !tbaa !1
  switch i32 %0, label %if.end [
    i32 7, label %if.then
    i32 4, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry
  tail call fastcc void @output_call_frame_info(i32 0)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %1 = load i32* @flag_unwind_tables, align 4, !tbaa !4
  %2 = load i32* @flag_exceptions, align 4
  %3 = or i32 %2, %1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  tail call fastcc void @output_call_frame_info(i32 1)
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then4
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_call_frame_info(i32 %for_eh) #1 {
entry:
  %l1 = alloca [20 x i8], align 16
  %l2 = alloca [20 x i8], align 16
  %section_start_label = alloca [20 x i8], align 16
  %augmentation = alloca [6 x i8], align 1
  %tobool = icmp ne i32 %for_eh, 0
  br i1 %tobool, label %if.then, label %if.end14

if.then:                                          ; preds = %entry
  %0 = load i32* @flag_asynchronous_unwind_tables, align 4, !tbaa !4
  %1 = load i32* @fde_table_in_use, align 4, !tbaa !4
  %cmp469 = icmp eq i32 %1, 0
  br i1 %cmp469, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then
  %2 = load %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %any_lsda_needed.0471 = phi i32 [ 0, %for.body.lr.ph ], [ %any_lsda_needed.1, %for.inc ]
  %any_eh_needed.0470 = phi i32 [ %0, %for.body.lr.ph ], [ %any_eh_needed.1, %for.inc ]
  %uses_eh_lsda = getelementptr inbounds %struct.dw_fde_struct* %2, i64 %indvars.iv, i32 5
  %bf.load = load i8* %uses_eh_lsda, align 4
  %bf.clear = and i8 %bf.load, 2
  %tobool1 = icmp eq i8 %bf.clear, 0
  br i1 %tobool1, label %if.else, label %for.inc

if.else:                                          ; preds = %for.body
  %bf.clear6 = and i8 %bf.load, 1
  %tobool8 = icmp eq i8 %bf.clear6, 0
  %.any_eh_needed.0 = select i1 %tobool8, i32 1, i32 %any_eh_needed.0470
  br label %for.inc

for.inc:                                          ; preds = %if.else, %for.body
  %any_eh_needed.1 = phi i32 [ 1, %for.body ], [ %.any_eh_needed.0, %if.else ]
  %any_lsda_needed.1 = phi i32 [ 1, %for.body ], [ %any_lsda_needed.0471, %if.else ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %3 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp ult i32 %3, %1
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %if.then
  %any_lsda_needed.0.lcssa = phi i32 [ 0, %if.then ], [ %any_lsda_needed.1, %for.inc ]
  %any_eh_needed.0.lcssa = phi i32 [ %0, %if.then ], [ %any_eh_needed.1, %for.inc ]
  %tobool11 = icmp eq i32 %any_eh_needed.0.lcssa, 0
  br i1 %tobool11, label %if.end381, label %if.end14

if.end14:                                         ; preds = %for.end, %entry
  %any_lsda_needed.2 = phi i32 [ %any_lsda_needed.0.lcssa, %for.end ], [ 0, %entry ]
  %4 = load i32* @flag_debug_asm, align 4, !tbaa !4
  %tobool15 = icmp eq i32 %4, 0
  br i1 %tobool15, label %if.end17, label %if.then16

if.then16:                                        ; preds = %if.end14
  call void @app_enable() #5
  br label %if.end17

if.end17:                                         ; preds = %if.end14, %if.then16
  br i1 %tobool, label %if.then19, label %if.else20

if.then19:                                        ; preds = %if.end17
  %5 = load void ()** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 0, i32 12), align 8, !tbaa !41
  call void %5() #5
  br label %do.body

if.else20:                                        ; preds = %if.end17
  call void @named_section_flags(i8* getelementptr inbounds ([13 x i8]* @.str441, i64 0, i64 0), i32 1024) #5
  br label %do.body

do.body:                                          ; preds = %if.then19, %if.else20
  %arraydecay = getelementptr inbounds [20 x i8]* %section_start_label, i64 0, i64 0
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str442, i64 0, i64 0), i32 %for_eh) #5
  %6 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %6, i8* %arraydecay) #5
  %7 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %8 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %7)
  %arraydecay25 = getelementptr inbounds [20 x i8]* %l1, i64 0, i64 0
  %call26 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay25, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str443, i64 0, i64 0), i32 %for_eh) #5
  %arraydecay29 = getelementptr inbounds [20 x i8]* %l2, i64 0, i64 0
  %call30 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay29, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str444, i64 0, i64 0), i32 %for_eh) #5
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 4, i8* %arraydecay29, i8* %arraydecay25, i8* getelementptr inbounds ([35 x i8]* @.str445, i64 0, i64 0)) #5
  %9 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %9, i8* %arraydecay25) #5
  %10 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %11 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %10)
  %conv = select i1 %tobool, i64 0, i64 4294967295
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %conv, i8* getelementptr inbounds ([19 x i8]* @.str446, i64 0, i64 0)) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 1, i8* getelementptr inbounds ([12 x i8]* @.str447, i64 0, i64 0)) #5
  %arrayidx41 = getelementptr inbounds [6 x i8]* %augmentation, i64 0, i64 0
  store i8 0, i8* %arrayidx41, align 1, !tbaa !1
  br i1 %tobool, label %if.then43, label %if.end109

if.then43:                                        ; preds = %do.body
  %12 = load i32* @flag_pic, align 4, !tbaa !4
  %tobool44 = icmp ne i32 %12, 0
  %cond45 = select i1 %tobool44, i32 27, i32 0
  %cond47 = select i1 %tobool44, i32 155, i32 0
  %add.ptr = getelementptr inbounds [6 x i8]* %augmentation, i64 0, i64 1
  %13 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 19), align 8, !tbaa !6
  %tobool51 = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool51, label %if.end55, label %if.then52

if.then52:                                        ; preds = %if.then43
  %incdec.ptr = getelementptr inbounds [6 x i8]* %augmentation, i64 0, i64 2
  store i8 80, i8* %add.ptr, align 1, !tbaa !1
  %call53 = call i32 @size_of_encoded_value(i32 %cond47) #5
  %add = add nsw i32 %call53, 1
  br label %if.end55

if.end55:                                         ; preds = %if.then43, %if.then52
  %p.0 = phi i8* [ %incdec.ptr, %if.then52 ], [ %add.ptr, %if.then43 ]
  %augmentation_size.0 = phi i32 [ %add, %if.then52 ], [ 0, %if.then43 ]
  %tobool56 = icmp eq i32 %any_lsda_needed.2, 0
  br i1 %tobool56, label %if.end60, label %if.then57

if.then57:                                        ; preds = %if.end55
  %incdec.ptr58 = getelementptr inbounds i8* %p.0, i64 1
  store i8 76, i8* %p.0, align 1, !tbaa !1
  %add59 = add nsw i32 %augmentation_size.0, 1
  br label %if.end60

if.end60:                                         ; preds = %if.end55, %if.then57
  %p.1 = phi i8* [ %incdec.ptr58, %if.then57 ], [ %p.0, %if.end55 ]
  %augmentation_size.1 = phi i32 [ %add59, %if.then57 ], [ %augmentation_size.0, %if.end55 ]
  br i1 %tobool44, label %if.then63, label %if.end66

if.then63:                                        ; preds = %if.end60
  %incdec.ptr64 = getelementptr inbounds i8* %p.1, i64 1
  store i8 82, i8* %p.1, align 1, !tbaa !1
  %add65 = add nsw i32 %augmentation_size.1, 1
  br label %if.end66

if.end66:                                         ; preds = %if.then63, %if.end60
  %p.2 = phi i8* [ %incdec.ptr64, %if.then63 ], [ %p.1, %if.end60 ]
  %augmentation_size.2 = phi i32 [ %add65, %if.then63 ], [ %augmentation_size.1, %if.end60 ]
  %cmp69 = icmp ugt i8* %p.2, %add.ptr
  br i1 %cmp69, label %if.then71, label %if.end109

if.then71:                                        ; preds = %if.end66
  store i8 122, i8* %arrayidx41, align 1, !tbaa !1
  store i8 0, i8* %p.2, align 1, !tbaa !1
  br label %if.end109

if.end109:                                        ; preds = %if.end66, %if.then71, %do.body
  %fde_encoding.0 = phi i32 [ 0, %do.body ], [ %cond45, %if.then71 ], [ %cond45, %if.end66 ]
  %per_encoding.0 = phi i32 [ 0, %do.body ], [ %cond47, %if.then71 ], [ %cond47, %if.end66 ]
  %augmentation_size.3 = phi i32 [ 0, %do.body ], [ %augmentation_size.2, %if.then71 ], [ %augmentation_size.2, %if.end66 ]
  call void (i8*, i64, i8*, ...)* @dw2_asm_output_nstring(i8* %arrayidx41, i64 -1, i8* getelementptr inbounds ([17 x i8]* @.str448, i64 0, i64 0)) #5
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 1, i8* getelementptr inbounds ([26 x i8]* @.str449, i64 0, i64 0)) #5
  %14 = load i32* @target_flags, align 4, !tbaa !4
  %and111 = lshr i32 %14, 23
  %15 = and i32 %and111, 4
  %sub114 = sub i32 -4, %15
  %conv115 = sext i32 %sub114 to i64
  call void (i64, i8*, ...)* @dw2_asm_output_data_sleb128(i64 %conv115, i8* getelementptr inbounds ([26 x i8]* @.str450, i64 0, i64 0)) #5
  %16 = load i32* @target_flags, align 4, !tbaa !4
  %and116 = lshr i32 %16, 22
  %17 = and i32 %and116, 8
  %18 = add i32 %17, 8
  %conv119456 = zext i32 %18 to i64
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv119456, i8* getelementptr inbounds ([14 x i8]* @.str451, i64 0, i64 0)) #5
  %19 = load i8* %arrayidx41, align 1, !tbaa !1
  %tobool121 = icmp eq i8 %19, 0
  br i1 %tobool121, label %for.cond141.preheader, label %if.then122

if.then122:                                       ; preds = %if.end109
  %conv123 = sext i32 %augmentation_size.3 to i64
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv123, i8* getelementptr inbounds ([18 x i8]* @.str452, i64 0, i64 0)) #5
  %20 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 19), align 8, !tbaa !6
  %tobool124 = icmp eq %struct.rtx_def* %20, null
  br i1 %tobool124, label %if.end128, label %if.then125

if.then125:                                       ; preds = %if.then122
  %conv126459 = zext i32 %per_encoding.0 to i64
  %call127 = call i8* @eh_data_format_name(i32 %per_encoding.0) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv126459, i8* getelementptr inbounds ([17 x i8]* @.str453, i64 0, i64 0), i8* %call127) #5
  %21 = load %struct.rtx_def** getelementptr inbounds ([97 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 19), align 8, !tbaa !6
  call void (i32, %struct.rtx_def*, i8*, ...)* @dw2_asm_output_encoded_addr_rtx(i32 %per_encoding.0, %struct.rtx_def* %21, i8* null) #5
  br label %if.end128

if.end128:                                        ; preds = %if.then122, %if.then125
  %tobool129 = icmp eq i32 %any_lsda_needed.2, 0
  br i1 %tobool129, label %if.end133, label %if.then130

if.then130:                                       ; preds = %if.end128
  %conv131458 = zext i32 %fde_encoding.0 to i64
  %call132 = call i8* @eh_data_format_name(i32 %fde_encoding.0) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv131458, i8* getelementptr inbounds ([19 x i8]* @.str454, i64 0, i64 0), i8* %call132) #5
  br label %if.end133

if.end133:                                        ; preds = %if.end128, %if.then130
  %cmp134 = icmp eq i32 %fde_encoding.0, 0
  br i1 %cmp134, label %for.cond141.preheader, label %if.then136

if.then136:                                       ; preds = %if.end133
  %conv137457 = zext i32 %fde_encoding.0 to i64
  %call138 = call i8* @eh_data_format_name(i32 %fde_encoding.0) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv137457, i8* getelementptr inbounds ([18 x i8]* @.str455, i64 0, i64 0), i8* %call138) #5
  br label %for.cond141.preheader

for.cond141.preheader:                            ; preds = %if.end133, %if.end109, %if.then136
  %cfi.0466 = load %struct.dw_cfi_struct** @cie_cfi_head, align 8
  %cmp142467 = icmp eq %struct.dw_cfi_struct* %cfi.0466, null
  br i1 %cmp142467, label %for.end146, label %for.body144

for.body144:                                      ; preds = %for.cond141.preheader, %for.body144
  %cfi.0468 = phi %struct.dw_cfi_struct* [ %cfi.0, %for.body144 ], [ %cfi.0466, %for.cond141.preheader ]
  call fastcc void @output_cfi(%struct.dw_cfi_struct* %cfi.0468, %struct.dw_fde_struct* null, i32 %for_eh)
  %dw_cfi_next = getelementptr inbounds %struct.dw_cfi_struct* %cfi.0468, i64 0, i32 0
  %cfi.0 = load %struct.dw_cfi_struct** %dw_cfi_next, align 8
  %cmp142 = icmp eq %struct.dw_cfi_struct* %cfi.0, null
  br i1 %cmp142, label %for.end146, label %for.body144

for.end146:                                       ; preds = %for.body144, %for.cond141.preheader
  %22 = load i32* @target_flags, align 4, !tbaa !4
  %and148 = lshr i32 %22, 20
  %23 = and i32 %and148, 32
  %24 = add i32 %23, 32
  %div151 = sdiv i32 %24, 8
  %conv157 = sext i32 %div151 to i64
  %call158 = call i32 @floor_log2_wide(i64 %conv157) #5
  %cmp159 = icmp eq i32 %call158, 0
  br i1 %cmp159, label %if.end178, label %if.then161

if.then161:                                       ; preds = %for.end146
  %25 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %26 = load i32* @target_flags, align 4, !tbaa !4
  %and164 = lshr i32 %26, 20
  %27 = and i32 %and164, 32
  %28 = add i32 %27, 32
  %div167 = sdiv i32 %28, 8
  %conv175 = sext i32 %div167 to i64
  %call176 = call i32 @floor_log2_wide(i64 %conv175) #5
  %shl = shl i32 1, %call176
  %call177 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([12 x i8]* @.str456, i64 0, i64 0), i32 %shl) #5
  br label %if.end178

if.end178:                                        ; preds = %for.end146, %if.then161
  %29 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %29, i8* %arraydecay29) #5
  %30 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %31 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %30)
  %32 = load i32* @fde_table_in_use, align 4, !tbaa !4
  %cmp182463 = icmp eq i32 %32, 0
  br i1 %cmp182463, label %for.end378, label %for.body184.lr.ph

for.body184.lr.ph:                                ; preds = %if.end178
  %tobool258 = icmp eq i32 %any_lsda_needed.2, 0
  br i1 %tobool, label %for.body184.us, label %if.end254

for.body184.us:                                   ; preds = %for.body184.lr.ph, %for.inc376.us
  %33 = phi i32 [ %64, %for.inc376.us ], [ %32, %for.body184.lr.ph ]
  %i.1464.us = phi i32 [ %inc377.us, %for.inc376.us ], [ 0, %for.body184.lr.ph ]
  %idxprom185.us = zext i32 %i.1464.us to i64
  %34 = load %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  %arrayidx186.us = getelementptr inbounds %struct.dw_fde_struct* %34, i64 %idxprom185.us
  %35 = load i32* @flag_asynchronous_unwind_tables, align 4, !tbaa !4
  %tobool187.us = icmp eq i32 %35, 0
  br i1 %tobool187.us, label %land.lhs.true190.us, label %if.end254.us

land.lhs.true190.us:                              ; preds = %for.body184.us
  %nothrow191.us = getelementptr inbounds %struct.dw_fde_struct* %34, i64 %idxprom185.us, i32 5
  %bf.load192.us = load i8* %nothrow191.us, align 4
  %36 = and i8 %bf.load192.us, 3
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %for.inc376.us, label %if.end254.us

if.end254.us:                                     ; preds = %land.lhs.true190.us, %for.body184.us
  %38 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %mul.us = shl i32 %i.1464.us, 1
  %add206.us = add i32 %mul.us, %for_eh
  %call207.us = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([8 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str217, i64 0, i64 0), i32 %add206.us) #5
  %call213.us = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay25, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str457, i64 0, i64 0), i32 %add206.us) #5
  %call219.us = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay29, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str458, i64 0, i64 0), i32 %add206.us) #5
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 4, i8* %arraydecay29, i8* %arraydecay25, i8* getelementptr inbounds ([11 x i8]* @.str459, i64 0, i64 0)) #5
  %39 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %39, i8* %arraydecay25) #5
  %40 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %41 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %40)
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 4, i8* %arraydecay25, i8* %arraydecay, i8* getelementptr inbounds ([15 x i8]* @.str460, i64 0, i64 0)) #5
  %42 = load i32* @target_flags, align 4, !tbaa !4
  %and236.us = lshr i32 %42, 25
  %43 = and i32 %and236.us, 1
  %44 = or i32 %43, 4
  %dw_fde_begin.us = getelementptr inbounds %struct.dw_fde_struct* %arrayidx186.us, i64 0, i32 0
  %45 = load i8** %dw_fde_begin.us, align 8, !tbaa !35
  %call239.us = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %44, i8* %45) #5
  call void (i32, %struct.rtx_def*, i8*, ...)* @dw2_asm_output_encoded_addr_rtx(i32 %fde_encoding.0, %struct.rtx_def* %call239.us, i8* getelementptr inbounds ([21 x i8]* @.str461, i64 0, i64 0)) #5
  %call240.us = call i32 @size_of_encoded_value(i32 %fde_encoding.0) #5
  %dw_fde_end.us = getelementptr inbounds %struct.dw_fde_struct* %34, i64 %idxprom185.us, i32 2
  %46 = load i8** %dw_fde_end.us, align 8, !tbaa !40
  %47 = load i8** %dw_fde_begin.us, align 8, !tbaa !35
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 %call240.us, i8* %46, i8* %47, i8* getelementptr inbounds ([18 x i8]* @.str462, i64 0, i64 0)) #5
  %48 = load i8* %arrayidx41, align 1, !tbaa !1
  %tobool256.us = icmp eq i8 %48, 0
  br i1 %tobool256.us, label %if.end329.us, label %if.then257.us

if.then257.us:                                    ; preds = %if.end254.us
  br i1 %tobool258, label %if.else327.us, label %if.then259.us

if.then259.us:                                    ; preds = %if.then257.us
  %call260.us = call i32 @size_of_encoded_value(i32 %fde_encoding.0) #5
  %conv285.us = sext i32 %call260.us to i64
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv285.us, i8* getelementptr inbounds ([18 x i8]* @.str452, i64 0, i64 0)) #5
  %uses_eh_lsda286.us = getelementptr inbounds %struct.dw_fde_struct* %34, i64 %idxprom185.us, i32 5
  %bf.load287.us = load i8* %uses_eh_lsda286.us, align 4
  %bf.clear289.us = and i8 %bf.load287.us, 2
  %tobool291.us = icmp eq i8 %bf.clear289.us, 0
  br i1 %tobool291.us, label %if.end324.us, label %do.body293.us

do.body293.us:                                    ; preds = %if.then259.us
  %funcdef_number.us = getelementptr inbounds %struct.dw_fde_struct* %34, i64 %idxprom185.us, i32 4
  %49 = load i32* %funcdef_number.us, align 4, !tbaa !36
  %call295.us = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay25, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str463, i64 0, i64 0), i32 %49) #5
  %50 = load i32* @target_flags, align 4, !tbaa !4
  %and297.us = lshr i32 %50, 25
  %51 = and i32 %and297.us, 1
  %52 = or i32 %51, 4
  %call301.us = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %52, i8* %arraydecay25) #5
  call void (i32, %struct.rtx_def*, i8*, ...)* @dw2_asm_output_encoded_addr_rtx(i32 %fde_encoding.0, %struct.rtx_def* %call301.us, i8* getelementptr inbounds ([28 x i8]* @.str464, i64 0, i64 0)) #5
  br label %if.end329.us

if.end324.us:                                     ; preds = %if.then259.us
  %call325.us = call i32 @size_of_encoded_value(i32 %fde_encoding.0) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 %call325.us, i64 0, i8* getelementptr inbounds ([35 x i8]* @.str465, i64 0, i64 0)) #5
  br label %if.end329.us

if.else327.us:                                    ; preds = %if.then257.us
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 0, i8* getelementptr inbounds ([18 x i8]* @.str452, i64 0, i64 0)) #5
  br label %if.end329.us

if.end329.us:                                     ; preds = %if.else327.us, %if.end324.us, %do.body293.us, %if.end254.us
  %dw_fde_begin330.us = getelementptr inbounds %struct.dw_fde_struct* %arrayidx186.us, i64 0, i32 0
  %53 = load i8** %dw_fde_begin330.us, align 8, !tbaa !35
  %dw_fde_current_label.us = getelementptr inbounds %struct.dw_fde_struct* %34, i64 %idxprom185.us, i32 1
  store i8* %53, i8** %dw_fde_current_label.us, align 8, !tbaa !25
  %dw_fde_cfi.us = getelementptr inbounds %struct.dw_fde_struct* %34, i64 %idxprom185.us, i32 3
  %cfi.1460.us = load %struct.dw_cfi_struct** %dw_fde_cfi.us, align 8
  %cmp332461.us = icmp eq %struct.dw_cfi_struct* %cfi.1460.us, null
  br i1 %cmp332461.us, label %for.end337.us, label %for.body334.us

for.body334.us:                                   ; preds = %if.end329.us, %for.body334.us
  %cfi.1462.us = phi %struct.dw_cfi_struct* [ %cfi.1.us, %for.body334.us ], [ %cfi.1460.us, %if.end329.us ]
  call fastcc void @output_cfi(%struct.dw_cfi_struct* %cfi.1462.us, %struct.dw_fde_struct* %arrayidx186.us, i32 %for_eh)
  %dw_cfi_next336.us = getelementptr inbounds %struct.dw_cfi_struct* %cfi.1462.us, i64 0, i32 0
  %cfi.1.us = load %struct.dw_cfi_struct** %dw_cfi_next336.us, align 8
  %cmp332.us = icmp eq %struct.dw_cfi_struct* %cfi.1.us, null
  br i1 %cmp332.us, label %for.end337.us, label %for.body334.us

for.end337.us:                                    ; preds = %for.body334.us, %if.end329.us
  %54 = load i32* @target_flags, align 4, !tbaa !4
  %and340.us = lshr i32 %54, 20
  %55 = and i32 %and340.us, 32
  %56 = add i32 %55, 32
  %div343.us = sdiv i32 %56, 8
  %conv351.us = sext i32 %div343.us to i64
  %call352.us = call i32 @floor_log2_wide(i64 %conv351.us) #5
  %cmp353.us = icmp eq i32 %call352.us, 0
  br i1 %cmp353.us, label %if.end373.us, label %if.then355.us

if.then355.us:                                    ; preds = %for.end337.us
  %57 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %58 = load i32* @target_flags, align 4, !tbaa !4
  %and358.us = lshr i32 %58, 20
  %59 = and i32 %and358.us, 32
  %60 = add i32 %59, 32
  %div361.us = sdiv i32 %60, 8
  %conv369.us = sext i32 %div361.us to i64
  %call370.us = call i32 @floor_log2_wide(i64 %conv369.us) #5
  %shl371.us = shl i32 1, %call370.us
  %call372.us = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([12 x i8]* @.str456, i64 0, i64 0), i32 %shl371.us) #5
  br label %if.end373.us

if.end373.us:                                     ; preds = %if.then355.us, %for.end337.us
  %61 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %61, i8* %arraydecay29) #5
  %62 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %63 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %62)
  %.pre = load i32* @fde_table_in_use, align 4, !tbaa !4
  br label %for.inc376.us

for.inc376.us:                                    ; preds = %if.end373.us, %land.lhs.true190.us
  %64 = phi i32 [ %.pre, %if.end373.us ], [ %33, %land.lhs.true190.us ]
  %inc377.us = add i32 %i.1464.us, 1
  %cmp182.us = icmp ult i32 %inc377.us, %64
  br i1 %cmp182.us, label %for.body184.us, label %for.end378

if.end254:                                        ; preds = %for.body184.lr.ph, %for.inc376
  %i.1464 = phi i32 [ %inc377, %for.inc376 ], [ 0, %for.body184.lr.ph ]
  %idxprom185 = zext i32 %i.1464 to i64
  %65 = load %struct.dw_fde_struct** @fde_table, align 8, !tbaa !6
  %arrayidx186 = getelementptr inbounds %struct.dw_fde_struct* %65, i64 %idxprom185
  %66 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %mul = shl i32 %i.1464, 1
  %call207 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([8 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str217, i64 0, i64 0), i32 %mul) #5
  %call213 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay25, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str457, i64 0, i64 0), i32 %mul) #5
  %call219 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay29, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str458, i64 0, i64 0), i32 %mul) #5
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 4, i8* %arraydecay29, i8* %arraydecay25, i8* getelementptr inbounds ([11 x i8]* @.str459, i64 0, i64 0)) #5
  %67 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %67, i8* %arraydecay25) #5
  %68 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %69 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %68)
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_offset(i32 4, i8* %arraydecay, i8* getelementptr inbounds ([15 x i8]* @.str460, i64 0, i64 0)) #5
  %70 = load i32* @target_flags, align 4, !tbaa !4
  %and243 = lshr i32 %70, 20
  %71 = and i32 %and243, 32
  %72 = add i32 %71, 32
  %div246 = sdiv i32 %72, 8
  %dw_fde_begin247 = getelementptr inbounds %struct.dw_fde_struct* %arrayidx186, i64 0, i32 0
  %73 = load i8** %dw_fde_begin247, align 8, !tbaa !35
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_addr(i32 %div246, i8* %73, i8* getelementptr inbounds ([21 x i8]* @.str461, i64 0, i64 0)) #5
  %74 = load i32* @target_flags, align 4, !tbaa !4
  %and248 = lshr i32 %74, 20
  %75 = and i32 %and248, 32
  %76 = add i32 %75, 32
  %div251 = sdiv i32 %76, 8
  %dw_fde_end252 = getelementptr inbounds %struct.dw_fde_struct* %65, i64 %idxprom185, i32 2
  %77 = load i8** %dw_fde_end252, align 8, !tbaa !40
  %78 = load i8** %dw_fde_begin247, align 8, !tbaa !35
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 %div251, i8* %77, i8* %78, i8* getelementptr inbounds ([18 x i8]* @.str462, i64 0, i64 0)) #5
  %79 = load i8* %arrayidx41, align 1, !tbaa !1
  %tobool256 = icmp eq i8 %79, 0
  br i1 %tobool256, label %if.end329, label %if.then257

if.then257:                                       ; preds = %if.end254
  br i1 %tobool258, label %if.else327, label %if.then259

if.then259:                                       ; preds = %if.then257
  %call260 = call i32 @size_of_encoded_value(i32 %fde_encoding.0) #5
  %conv285 = sext i32 %call260 to i64
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv285, i8* getelementptr inbounds ([18 x i8]* @.str452, i64 0, i64 0)) #5
  %uses_eh_lsda286 = getelementptr inbounds %struct.dw_fde_struct* %65, i64 %idxprom185, i32 5
  %bf.load287 = load i8* %uses_eh_lsda286, align 4
  %bf.clear289 = and i8 %bf.load287, 2
  %tobool291 = icmp eq i8 %bf.clear289, 0
  br i1 %tobool291, label %if.end324, label %do.body293

do.body293:                                       ; preds = %if.then259
  %funcdef_number = getelementptr inbounds %struct.dw_fde_struct* %65, i64 %idxprom185, i32 4
  %80 = load i32* %funcdef_number, align 4, !tbaa !36
  %call295 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay25, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str463, i64 0, i64 0), i32 %80) #5
  %81 = load i32* @target_flags, align 4, !tbaa !4
  %and297 = lshr i32 %81, 25
  %82 = and i32 %and297, 1
  %83 = or i32 %82, 4
  %call301 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %83, i8* %arraydecay25) #5
  call void (i32, %struct.rtx_def*, i8*, ...)* @dw2_asm_output_encoded_addr_rtx(i32 %fde_encoding.0, %struct.rtx_def* %call301, i8* getelementptr inbounds ([28 x i8]* @.str464, i64 0, i64 0)) #5
  br label %if.end329

if.end324:                                        ; preds = %if.then259
  %call325 = call i32 @size_of_encoded_value(i32 %fde_encoding.0) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 %call325, i64 0, i8* getelementptr inbounds ([35 x i8]* @.str465, i64 0, i64 0)) #5
  br label %if.end329

if.else327:                                       ; preds = %if.then257
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 0, i8* getelementptr inbounds ([18 x i8]* @.str452, i64 0, i64 0)) #5
  br label %if.end329

if.end329:                                        ; preds = %if.end254, %if.else327, %if.end324, %do.body293
  %dw_fde_begin330 = getelementptr inbounds %struct.dw_fde_struct* %arrayidx186, i64 0, i32 0
  %84 = load i8** %dw_fde_begin330, align 8, !tbaa !35
  %dw_fde_current_label = getelementptr inbounds %struct.dw_fde_struct* %65, i64 %idxprom185, i32 1
  store i8* %84, i8** %dw_fde_current_label, align 8, !tbaa !25
  %dw_fde_cfi = getelementptr inbounds %struct.dw_fde_struct* %65, i64 %idxprom185, i32 3
  %cfi.1460 = load %struct.dw_cfi_struct** %dw_fde_cfi, align 8
  %cmp332461 = icmp eq %struct.dw_cfi_struct* %cfi.1460, null
  br i1 %cmp332461, label %for.end337, label %for.body334

for.body334:                                      ; preds = %if.end329, %for.body334
  %cfi.1462 = phi %struct.dw_cfi_struct* [ %cfi.1, %for.body334 ], [ %cfi.1460, %if.end329 ]
  call fastcc void @output_cfi(%struct.dw_cfi_struct* %cfi.1462, %struct.dw_fde_struct* %arrayidx186, i32 0)
  %dw_cfi_next336 = getelementptr inbounds %struct.dw_cfi_struct* %cfi.1462, i64 0, i32 0
  %cfi.1 = load %struct.dw_cfi_struct** %dw_cfi_next336, align 8
  %cmp332 = icmp eq %struct.dw_cfi_struct* %cfi.1, null
  br i1 %cmp332, label %for.end337, label %for.body334

for.end337:                                       ; preds = %for.body334, %if.end329
  %85 = load i32* @target_flags, align 4, !tbaa !4
  %and340 = lshr i32 %85, 20
  %86 = and i32 %and340, 32
  %87 = add i32 %86, 32
  %div343 = sdiv i32 %87, 8
  %conv351 = sext i32 %div343 to i64
  %call352 = call i32 @floor_log2_wide(i64 %conv351) #5
  %cmp353 = icmp eq i32 %call352, 0
  br i1 %cmp353, label %for.inc376, label %if.then355

if.then355:                                       ; preds = %for.end337
  %88 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %89 = load i32* @target_flags, align 4, !tbaa !4
  %and358 = lshr i32 %89, 20
  %90 = and i32 %and358, 32
  %91 = add i32 %90, 32
  %div361 = sdiv i32 %91, 8
  %conv369 = sext i32 %div361 to i64
  %call370 = call i32 @floor_log2_wide(i64 %conv369) #5
  %shl371 = shl i32 1, %call370
  %call372 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([12 x i8]* @.str456, i64 0, i64 0), i32 %shl371) #5
  br label %for.inc376

for.inc376:                                       ; preds = %if.then355, %for.end337
  %92 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %92, i8* %arraydecay29) #5
  %93 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %94 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %93)
  %.pre474 = load i32* @fde_table_in_use, align 4, !tbaa !4
  %inc377 = add i32 %i.1464, 1
  %cmp182 = icmp ult i32 %inc377, %.pre474
  br i1 %cmp182, label %if.end254, label %for.end378

for.end378:                                       ; preds = %for.inc376, %for.inc376.us, %if.end178
  %95 = load i32* @flag_debug_asm, align 4, !tbaa !4
  %tobool379 = icmp eq i32 %95, 0
  br i1 %tobool379, label %if.end381, label %if.then380

if.then380:                                       ; preds = %for.end378
  call void @app_disable() #5
  br label %if.end381

if.end381:                                        ; preds = %for.end, %for.end378, %if.then380
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_init(i8* %main_input_filename) #1 {
entry:
  %call.i = tail call noalias i8* @xcalloc(i64 64, i64 8) #5
  %0 = bitcast i8* %call.i to i8**
  store i8** %0, i8*** @file_table.0, align 8, !tbaa !47
  store i32 64, i32* @file_table.1, align 8, !tbaa !49
  store i32 1, i32* @file_table.2, align 4, !tbaa !50
  store i32 0, i32* @file_table.3, align 8, !tbaa !51
  store i8* %main_input_filename, i8** @primary_filename, align 8, !tbaa !6
  %call = tail call fastcc i32 @lookup_filename(i8* %main_input_filename)
  %call1 = tail call noalias i8* @xcalloc(i64 256, i64 8) #5
  %1 = bitcast i8* %call1 to %struct.die_struct**
  store %struct.die_struct** %1, %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  store i32 256, i32* @decl_die_table_allocated, align 4, !tbaa !4
  store i32 0, i32* @decl_die_table_in_use, align 4, !tbaa !4
  %call2 = tail call %struct.varray_head_tag* @varray_init(i64 256, i64 8, i8* getelementptr inbounds ([17 x i8]* @.str391, i64 0, i64 0)) #5
  store %struct.varray_head_tag* %call2, %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  tail call void @ggc_add_tree_varray_root(%struct.varray_head_tag** @decl_scope_table, i32 1) #5
  %call3 = tail call noalias i8* @xcalloc(i64 256, i64 8) #5
  %2 = bitcast i8* %call3 to %struct.die_struct**
  store %struct.die_struct** %2, %struct.die_struct*** @abbrev_die_table, align 8, !tbaa !6
  store i32 256, i32* @abbrev_die_table_allocated, align 4, !tbaa !4
  store i32 1, i32* @abbrev_die_table_in_use, align 4, !tbaa !4
  %call4 = tail call noalias i8* @xcalloc(i64 1024, i64 16) #5
  %3 = bitcast i8* %call4 to %struct.dw_line_info_struct*
  store %struct.dw_line_info_struct* %3, %struct.dw_line_info_struct** @line_info_table, align 8, !tbaa !6
  store i32 1, i32* @line_info_table_in_use, align 4, !tbaa !4
  %call5 = tail call fastcc %struct.die_struct* @gen_compile_unit_die(i8* %main_input_filename)
  store %struct.die_struct* %call5, %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call6 = tail call %struct.varray_head_tag* @varray_init(i64 64, i64 8, i8* getelementptr inbounds ([17 x i8]* @.str392, i64 0, i64 0)) #5
  store %struct.varray_head_tag* %call6, %struct.varray_head_tag** @incomplete_types, align 8, !tbaa !6
  tail call void @ggc_add_tree_varray_root(%struct.varray_head_tag** @incomplete_types, i32 1) #5
  %call7 = tail call %struct.varray_head_tag* @varray_init(i64 32, i64 8, i8* getelementptr inbounds ([16 x i8]* @.str393, i64 0, i64 0)) #5
  store %struct.varray_head_tag* %call7, %struct.varray_head_tag** @used_rtx_varray, align 8, !tbaa !6
  tail call void @ggc_add_rtx_varray_root(%struct.varray_head_tag** @used_rtx_varray, i32 1) #5
  tail call void @ggc_add_root(i8* bitcast (%struct.limbo_die_struct** @limbo_die_list to i8*), i32 1, i32 1, void (i8*)* @mark_limbo_die_list) #5
  %call8 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([30 x i8]* @text_end_label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str8, i64 0, i64 0), i32 0) #5
  %call10 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([30 x i8]* @abbrev_section_label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str394, i64 0, i64 0), i32 0) #5
  %call13 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([30 x i8]* @text_section_label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str395, i64 0, i64 0), i32 0) #5
  %call16 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([30 x i8]* @debug_info_section_label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str396, i64 0, i64 0), i32 0) #5
  %call19 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([30 x i8]* @debug_line_section_label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str397, i64 0, i64 0), i32 0) #5
  %call22 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([60 x i8]* @ranges_section_label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str398, i64 0, i64 0), i32 0) #5
  tail call void @named_section_flags(i8* getelementptr inbounds ([14 x i8]* @.str11, i64 0, i64 0), i32 1024) #5
  %4 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(%struct._IO_FILE* %4, i8* getelementptr inbounds ([30 x i8]* @abbrev_section_label, i64 0, i64 0)) #5
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %5)
  tail call void @named_section_flags(i8* getelementptr inbounds ([12 x i8]* @.str211, i64 0, i64 0), i32 1024) #5
  %7 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(%struct._IO_FILE* %7, i8* getelementptr inbounds ([30 x i8]* @debug_info_section_label, i64 0, i64 0)) #5
  %8 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %8)
  tail call void @named_section_flags(i8* getelementptr inbounds ([12 x i8]* @.str399, i64 0, i64 0), i32 1024) #5
  %10 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(%struct._IO_FILE* %10, i8* getelementptr inbounds ([30 x i8]* @debug_line_section_label, i64 0, i64 0)) #5
  %11 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %12 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %11)
  %13 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp = icmp ugt i32 %13, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @named_section_flags(i8* getelementptr inbounds ([15 x i8]* @.str15, i64 0, i64 0), i32 1024) #5
  %call28 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([30 x i8]* @macinfo_section_label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8]* @.str400, i64 0, i64 0), i32 0) #5
  %14 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(%struct._IO_FILE* %14, i8* getelementptr inbounds ([30 x i8]* @macinfo_section_label, i64 0, i64 0)) #5
  %15 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %16 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %15)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void @text_section() #5
  %17 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  tail call void @assemble_name(%struct._IO_FILE* %17, i8* getelementptr inbounds ([30 x i8]* @text_section_label, i64 0, i64 0)) #5
  %18 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %19 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %18)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_finish(i8* nocapture readnone %input_filename) #1 {
entry:
  %blabel.i = alloca [30 x i8], align 16
  %elabel.i = alloca [30 x i8], align 16
  %0 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %tobool412 = icmp eq %struct.limbo_die_struct* %0, null
  br i1 %tobool412, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %if.end72
  %node.0413 = phi %struct.limbo_die_struct* [ %1, %if.end72 ], [ %0, %entry ]
  %next = getelementptr inbounds %struct.limbo_die_struct* %node.0413, i64 0, i32 2
  %1 = load %struct.limbo_die_struct** %next, align 8, !tbaa !52
  %die1 = getelementptr inbounds %struct.limbo_die_struct* %node.0413, i64 0, i32 0
  %2 = load %struct.die_struct** %die1, align 8, !tbaa !54
  %die_parent = getelementptr inbounds %struct.die_struct* %2, i64 0, i32 3
  %3 = load %struct.die_struct** %die_parent, align 8, !tbaa !55
  %cmp = icmp eq %struct.die_struct* %3, null
  br i1 %cmp, label %tailrecurse.i.i, label %if.end72

tailrecurse.i.i:                                  ; preds = %for.body, %for.end.i.i
  %die.tr.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.end.i.i ], [ %2, %for.body ]
  %cmp.i.i = icmp eq %struct.die_struct* %die.tr.i.i, null
  br i1 %cmp.i.i, label %if.else, label %if.then.i.i

if.then.i.i:                                      ; preds = %tailrecurse.i.i
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i, i64 0, i32 2
  %a.027.i.i = load %struct.dw_attr_struct** %die_attr.i.i, align 8
  %cmp128.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i, null
  br i1 %cmp128.i.i, label %if.else, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.then.i.i, %for.inc.i.i
  %a.030.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i, %for.inc.i.i ], [ %a.027.i.i, %if.then.i.i ]
  %spec.029.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.inc.i.i ], [ null, %if.then.i.i ]
  %dw_attr.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 0
  %4 = load i32* %dw_attr.i.i, align 4, !tbaa !57
  switch i32 %4, label %for.inc.i.i [
    i32 49, label %land.lhs.true.i.i
    i32 71, label %land.lhs.true.i.i.i
  ]

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i = icmp eq i32 %a.idx.val.i.i.i, 10
  br i1 %cmp.i.i.i, label %AT_ref.exit.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i:                                  ; preds = %land.lhs.true.i.i.i
  %v.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i.i = bitcast %union.anon.3* %v.i.i.i to %struct.die_struct**
  %5 = load %struct.die_struct** %die.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i, %AT_ref.exit.i.i
  %spec.1.i.i = phi %struct.die_struct* [ %5, %AT_ref.exit.i.i ], [ %spec.029.i.i, %for.body.i.i ]
  %dw_attr_next.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 1
  %a.0.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i, align 8
  %cmp1.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i, null
  br i1 %cmp1.i.i, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %tobool.i.i = icmp eq %struct.die_struct* %spec.1.i.i, null
  br i1 %tobool.i.i, label %if.else, label %tailrecurse.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %a.idx.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i = load i32* %a.idx.i.i, align 4, !tbaa !59
  %cmp.i4.i = icmp eq i32 %a.idx.val.i.i, 10
  br i1 %cmp.i4.i, label %get_AT_ref.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

get_AT_ref.exit:                                  ; preds = %land.lhs.true.i.i
  %v.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i = bitcast %union.anon.3* %v.i.i to %struct.die_struct**
  %6 = load %struct.die_struct** %die.i.i, align 8, !tbaa !60
  %tobool2 = icmp eq %struct.die_struct* %6, null
  br i1 %tobool2, label %if.else, label %if.then3

if.then3:                                         ; preds = %get_AT_ref.exit
  %die_parent4 = getelementptr inbounds %struct.die_struct* %6, i64 0, i32 3
  %7 = load %struct.die_struct** %die_parent4, align 8, !tbaa !55
  %cmp.i = icmp ne %struct.die_struct* %7, null
  %cmp1.i = icmp ne %struct.die_struct* %2, null
  %or.cond.i = and i1 %cmp.i, %cmp1.i
  br i1 %or.cond.i, label %if.then.i, label %if.end72

if.then.i:                                        ; preds = %if.then3
  %cmp2.i = icmp eq %struct.die_struct* %7, %2
  br i1 %cmp2.i, label %if.then3.i, label %if.end.i

if.then3.i:                                       ; preds = %if.then.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i:                                         ; preds = %if.then.i
  store %struct.die_struct* %7, %struct.die_struct** %die_parent, align 8, !tbaa !55
  %die_child.i = getelementptr inbounds %struct.die_struct* %7, i64 0, i32 4
  %8 = load %struct.die_struct** %die_child.i, align 8, !tbaa !62
  %die_sib.i = getelementptr inbounds %struct.die_struct* %2, i64 0, i32 5
  store %struct.die_struct* %8, %struct.die_struct** %die_sib.i, align 8, !tbaa !63
  store %struct.die_struct* %2, %struct.die_struct** %die_child.i, align 8, !tbaa !62
  br label %if.end72

if.else:                                          ; preds = %if.then.i.i, %tailrecurse.i.i, %for.end.i.i, %get_AT_ref.exit
  %9 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %cmp5 = icmp eq %struct.die_struct* %2, %9
  br i1 %cmp5, label %if.end72, label %if.else7

if.else7:                                         ; preds = %if.else
  %created_for = getelementptr inbounds %struct.limbo_die_struct* %node.0413, i64 0, i32 1
  %10 = load %union.tree_node** %created_for, align 8, !tbaa !64
  %tobool8 = icmp eq %union.tree_node* %10, null
  br i1 %tobool8, label %if.else16, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else7
  %code = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp10 = icmp eq i32 %bf.clear, 118
  br i1 %cmp10, label %land.lhs.true11, label %if.else16

land.lhs.true11:                                  ; preds = %land.lhs.true
  %operands = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %11 = bitcast i32* %arrayidx to %union.tree_node**
  %12 = load %union.tree_node** %11, align 8, !tbaa !6
  %.idx = getelementptr %union.tree_node* %12, i64 0, i32 0, i32 3
  %.idx.val = load i32* %.idx, align 4, !tbaa !65
  %13 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i164 = icmp ugt i32 %13, %.idx.val
  br i1 %cmp.i164, label %lookup_decl_die.exit, label %if.else16

lookup_decl_die.exit:                             ; preds = %land.lhs.true11
  %idxprom.i = zext i32 %.idx.val to i64
  %14 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i = getelementptr inbounds %struct.die_struct** %14, i64 %idxprom.i
  %15 = load %struct.die_struct** %arrayidx.i, align 8, !tbaa !6
  %cmp14 = icmp eq %struct.die_struct* %15, null
  br i1 %cmp14, label %if.else16, label %if.then15

if.then15:                                        ; preds = %lookup_decl_die.exit
  %cmp1.i167 = icmp eq %struct.die_struct* %2, null
  br i1 %cmp1.i167, label %if.end72, label %if.then.i170

if.then.i170:                                     ; preds = %if.then15
  %cmp2.i169 = icmp eq %struct.die_struct* %15, %2
  br i1 %cmp2.i169, label %if.then3.i171, label %if.end.i175

if.then3.i171:                                    ; preds = %if.then.i170
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i175:                                      ; preds = %if.then.i170
  store %struct.die_struct* %15, %struct.die_struct** %die_parent, align 8, !tbaa !55
  %die_child.i173 = getelementptr inbounds %struct.die_struct* %15, i64 0, i32 4
  %16 = load %struct.die_struct** %die_child.i173, align 8, !tbaa !62
  %die_sib.i174 = getelementptr inbounds %struct.die_struct* %2, i64 0, i32 5
  store %struct.die_struct* %16, %struct.die_struct** %die_sib.i174, align 8, !tbaa !63
  store %struct.die_struct* %2, %struct.die_struct** %die_child.i173, align 8, !tbaa !62
  br label %if.end72

if.else16:                                        ; preds = %land.lhs.true11, %lookup_decl_die.exit, %if.else7, %land.lhs.true
  %17 = load %struct.diagnostic_context** @global_dc, align 8, !tbaa !6
  %arrayidx17 = getelementptr inbounds %struct.diagnostic_context* %17, i64 0, i32 0, i32 0, i32 9, i64 3
  %18 = load i32* %arrayidx17, align 4, !tbaa !4
  %cmp18 = icmp sgt i32 %18, 0
  br i1 %cmp18, label %if.then23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else16
  %arrayidx21 = getelementptr inbounds %struct.diagnostic_context* %17, i64 0, i32 0, i32 0, i32 9, i64 2
  %19 = load i32* %arrayidx21, align 4, !tbaa !4
  %cmp22 = icmp sgt i32 %19, 0
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %lor.lhs.false, %if.else16
  %cmp.i177 = icmp ne %struct.die_struct* %9, null
  %cmp1.i178 = icmp ne %struct.die_struct* %2, null
  %or.cond.i179 = and i1 %cmp.i177, %cmp1.i178
  br i1 %or.cond.i179, label %if.end.i186, label %if.end72

if.end.i186:                                      ; preds = %if.then23
  store %struct.die_struct* %9, %struct.die_struct** %die_parent, align 8, !tbaa !55
  %die_child.i184 = getelementptr inbounds %struct.die_struct* %9, i64 0, i32 4
  %20 = load %struct.die_struct** %die_child.i184, align 8, !tbaa !62
  %die_sib.i185 = getelementptr inbounds %struct.die_struct* %2, i64 0, i32 5
  store %struct.die_struct* %20, %struct.die_struct** %die_sib.i185, align 8, !tbaa !63
  store %struct.die_struct* %2, %struct.die_struct** %die_child.i184, align 8, !tbaa !62
  br label %if.end72

if.else24:                                        ; preds = %lor.lhs.false
  br i1 %tobool8, label %if.else66, label %land.lhs.true27

land.lhs.true27:                                  ; preds = %if.else24
  %code30 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load31 = load i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %idxprom162 = zext i32 %bf.clear32 to i64
  %arrayidx33 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom162
  %21 = load i8* %arrayidx33, align 1, !tbaa !1
  switch i8 %21, label %if.else66 [
    i8 100, label %land.lhs.true36
    i8 116, label %land.lhs.true51
  ]

land.lhs.true36:                                  ; preds = %land.lhs.true27
  %context38 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 9
  %22 = load %union.tree_node** %context38, align 8, !tbaa !66
  %tobool39 = icmp eq %union.tree_node* %22, null
  br i1 %tobool39, label %if.else66, label %land.lhs.true55

land.lhs.true51:                                  ; preds = %land.lhs.true27
  %context53 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 17
  %23 = load %struct.rtx_def** %context53, align 8
  %24 = bitcast %struct.rtx_def* %23 to %union.tree_node*
  %tobool54 = icmp eq %struct.rtx_def* %23, null
  br i1 %tobool54, label %if.else66, label %land.lhs.true55

land.lhs.true55:                                  ; preds = %land.lhs.true36, %land.lhs.true51
  %context.0 = phi %union.tree_node* [ %22, %land.lhs.true36 ], [ %24, %land.lhs.true51 ]
  %code57 = getelementptr inbounds %union.tree_node* %context.0, i64 0, i32 0, i32 0, i32 2
  %bf.load58 = load i32* %code57, align 8
  %bf.clear59 = and i32 %bf.load58, 255
  %cmp60 = icmp eq i32 %bf.clear59, 30
  br i1 %cmp60, label %if.then62, label %if.else66

if.then62:                                        ; preds = %land.lhs.true55
  %context.0.idx = getelementptr %union.tree_node* %context.0, i64 0, i32 0, i32 3
  %context.0.idx.val = load i32* %context.0.idx, align 4, !tbaa !65
  %25 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i188 = icmp ugt i32 %25, %context.0.idx.val
  br i1 %cmp.i188, label %lookup_decl_die.exit193, label %if.then65

lookup_decl_die.exit193:                          ; preds = %if.then62
  %idxprom.i189 = zext i32 %context.0.idx.val to i64
  %26 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i190 = getelementptr inbounds %struct.die_struct** %26, i64 %idxprom.i189
  %27 = load %struct.die_struct** %arrayidx.i190, align 8, !tbaa !6
  %tobool64 = icmp eq %struct.die_struct* %27, null
  br i1 %tobool64, label %if.then65, label %if.end

if.then65:                                        ; preds = %if.then62, %lookup_decl_die.exit193
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 12180, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.dwarf2out_finish, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %lookup_decl_die.exit193
  %cmp1.i197 = icmp eq %struct.die_struct* %2, null
  br i1 %cmp1.i197, label %if.end72, label %if.then.i200

if.then.i200:                                     ; preds = %if.end
  %cmp2.i199 = icmp eq %struct.die_struct* %27, %2
  br i1 %cmp2.i199, label %if.then3.i201, label %if.end.i205

if.then3.i201:                                    ; preds = %if.then.i200
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i205:                                      ; preds = %if.then.i200
  store %struct.die_struct* %27, %struct.die_struct** %die_parent, align 8, !tbaa !55
  %die_child.i203 = getelementptr inbounds %struct.die_struct* %27, i64 0, i32 4
  %28 = load %struct.die_struct** %die_child.i203, align 8, !tbaa !62
  %die_sib.i204 = getelementptr inbounds %struct.die_struct* %2, i64 0, i32 5
  store %struct.die_struct* %28, %struct.die_struct** %die_sib.i204, align 8, !tbaa !63
  store %struct.die_struct* %2, %struct.die_struct** %die_child.i203, align 8, !tbaa !62
  br label %if.end72

if.else66:                                        ; preds = %land.lhs.true27, %land.lhs.true36, %land.lhs.true51, %if.else24, %land.lhs.true55
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 12184, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.dwarf2out_finish, i64 0, i64 0)) #7
  unreachable

if.end72:                                         ; preds = %if.then15, %if.end, %if.end.i205, %if.end.i186, %if.then23, %if.end.i175, %if.end.i, %if.then3, %if.else, %for.body
  %29 = bitcast %struct.limbo_die_struct* %node.0413 to i8*
  call void @free(i8* %29)
  %tobool = icmp eq %struct.limbo_die_struct* %1, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %if.end72, %entry
  store %struct.limbo_die_struct* null, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %30 = load %struct.varray_head_tag** @incomplete_types, align 8, !tbaa !6
  %elements_used.i = getelementptr inbounds %struct.varray_head_tag* %30, i64 0, i32 1
  %31 = load i64* %elements_used.i, align 8, !tbaa !67
  %sub.i = add i64 %31, 4294967295
  %conv.i = trunc i64 %sub.i to i32
  %cmp4.i = icmp sgt i32 %conv.i, -1
  br i1 %cmp4.i, label %for.body.lr.ph.i207, label %retry_incomplete_types.exit

for.body.lr.ph.i207:                              ; preds = %for.end
  %sext.i = shl i64 %sub.i, 32
  %32 = ashr exact i64 %sext.i, 32
  %data.i407 = getelementptr inbounds %struct.varray_head_tag* %30, i64 0, i32 4
  %tree.i408 = bitcast %union.varray_data_tag* %data.i407 to [1 x %union.tree_node*]*
  %arrayidx.i208409 = getelementptr inbounds [1 x %union.tree_node*]* %tree.i408, i64 0, i64 %32
  %33 = load %union.tree_node** %arrayidx.i208409, align 8, !tbaa !6
  %34 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  call fastcc void @gen_type_die(%union.tree_node* %33, %struct.die_struct* %34) #5
  %35 = trunc i64 %32 to i32
  %cmp.i209410 = icmp sgt i32 %35, 0
  br i1 %cmp.i209410, label %for.body.for.body_crit_edge.i, label %retry_incomplete_types.exit

for.body.for.body_crit_edge.i:                    ; preds = %for.body.lr.ph.i207, %for.body.for.body_crit_edge.i
  %indvars.iv.i411 = phi i64 [ %indvars.iv.next.i, %for.body.for.body_crit_edge.i ], [ %32, %for.body.lr.ph.i207 ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i411, -1
  %.pre.i = load %struct.varray_head_tag** @incomplete_types, align 8, !tbaa !6
  %data.i = getelementptr inbounds %struct.varray_head_tag* %.pre.i, i64 0, i32 4
  %tree.i = bitcast %union.varray_data_tag* %data.i to [1 x %union.tree_node*]*
  %arrayidx.i208 = getelementptr inbounds [1 x %union.tree_node*]* %tree.i, i64 0, i64 %indvars.iv.next.i
  %36 = load %union.tree_node** %arrayidx.i208, align 8, !tbaa !6
  %37 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  call fastcc void @gen_type_die(%union.tree_node* %36, %struct.die_struct* %37) #5
  %38 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i209 = icmp sgt i32 %38, 0
  br i1 %cmp.i209, label %for.body.for.body_crit_edge.i, label %retry_incomplete_types.exit

retry_incomplete_types.exit:                      ; preds = %for.body.for.body_crit_edge.i, %for.body.lr.ph.i207, %for.end
  %39 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  call fastcc void @reverse_all_dies(%struct.die_struct* %39)
  %40 = load i32* @flag_eliminate_dwarf2_dups, align 4, !tbaa !4
  %tobool73 = icmp eq i32 %40, 0
  br i1 %tobool73, label %if.end75, label %if.then74

if.then74:                                        ; preds = %retry_incomplete_types.exit
  %41 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %die_child.i211 = getelementptr inbounds %struct.die_struct* %41, i64 0, i32 4
  %42 = load %struct.die_struct** %die_child.i211, align 8, !tbaa !6
  %tobool105106108.i = icmp eq %struct.die_struct* %42, null
  br i1 %tobool105106108.i, label %for.end.i, label %for.body.lr.ph.lr.ph.i

for.body.lr.ph.lr.ph.i:                           ; preds = %if.then74, %for.cond.outer.backedge.i
  %43 = phi %struct.die_struct* [ %58, %for.cond.outer.backedge.i ], [ %42, %if.then74 ]
  %ptr.0.ph110.i = phi %struct.die_struct** [ %ptr.0.ph82107.i, %for.cond.outer.backedge.i ], [ %die_child.i211, %if.then74 ]
  %unit.0.ph109.i = phi %struct.die_struct* [ %unit.0.ph.be.i, %for.cond.outer.backedge.i ], [ null, %if.then74 ]
  %cmp.i.i212 = icmp ne %struct.die_struct* %unit.0.ph109.i, null
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %unit.0.ph109.i, i64 0, i32 4
  %tobool4.i = icmp eq %struct.die_struct* %unit.0.ph109.i, null
  br label %for.body.lr.ph.i213

for.body.lr.ph.i213:                              ; preds = %if.else16.i, %for.body.lr.ph.lr.ph.i
  %44 = phi %struct.die_struct* [ %43, %for.body.lr.ph.lr.ph.i ], [ %63, %if.else16.i ]
  %ptr.0.ph82107.i = phi %struct.die_struct** [ %ptr.0.ph110.i, %for.body.lr.ph.lr.ph.i ], [ %die_sib17.i, %if.else16.i ]
  br label %for.body.i214

for.body.i214:                                    ; preds = %for.cond.backedge.i, %for.body.lr.ph.i213
  %45 = phi %struct.die_struct* [ %44, %for.body.lr.ph.i213 ], [ %61, %for.cond.backedge.i ]
  %die_tag.i = getelementptr inbounds %struct.die_struct* %45, i64 0, i32 0
  %46 = load i32* %die_tag.i, align 4, !tbaa !69
  %47 = and i32 %46, -2
  %switch.i = icmp eq i32 %47, 16644
  br i1 %switch.i, label %if.then.i218, label %lor.lhs.false3.i

lor.lhs.false3.i:                                 ; preds = %for.body.i214
  br i1 %tobool4.i, label %if.else16.i, label %tailrecurse.i.i215

tailrecurse.i.i215:                               ; preds = %lor.lhs.false3.i, %get_AT_ref.exit.i.tailrecurse.i_crit_edge.i
  %48 = phi i32 [ %.pre130.i, %get_AT_ref.exit.i.tailrecurse.i_crit_edge.i ], [ %46, %lor.lhs.false3.i ]
  %c.tr.i.i = phi %struct.die_struct* [ %51, %get_AT_ref.exit.i.tailrecurse.i_crit_edge.i ], [ %45, %lor.lhs.false3.i ]
  switch i32 %48, label %if.else16.i [
    i32 33, label %if.then.i218
    i32 15, label %tailrecurse.i.i.i.i
    i32 16, label %tailrecurse.i.i.i.i
    i32 38, label %tailrecurse.i.i.i.i
    i32 53, label %tailrecurse.i.i.i.i
    i32 1, label %if.then.i218
    i32 2, label %if.then.i218
    i32 4, label %if.then.i218
    i32 45, label %if.then.i218
    i32 41, label %if.then.i218
    i32 18, label %if.then.i218
    i32 19, label %if.then.i218
    i32 21, label %if.then.i218
    i32 23, label %if.then.i218
    i32 31, label %if.then.i218
    i32 32, label %if.then.i218
  ]

tailrecurse.i.i.i.i:                              ; preds = %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %for.end.i.i.i.i
  %die.tr.i.i.i.i = phi %struct.die_struct* [ %spec.1.i.i.i.i, %for.end.i.i.i.i ], [ %c.tr.i.i, %tailrecurse.i.i215 ], [ %c.tr.i.i, %tailrecurse.i.i215 ], [ %c.tr.i.i, %tailrecurse.i.i215 ], [ %c.tr.i.i, %tailrecurse.i.i215 ]
  %cmp.i.i.i.i = icmp eq %struct.die_struct* %die.tr.i.i.i.i, null
  br i1 %cmp.i.i.i.i, label %if.else16.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %tailrecurse.i.i.i.i
  %die_attr.i.i.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i.i, i64 0, i32 2
  %a.027.i.i.i.i = load %struct.dw_attr_struct** %die_attr.i.i.i.i, align 8
  %cmp128.i.i.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i.i.i, null
  br i1 %cmp128.i.i.i.i, label %if.else16.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %if.then.i.i.i.i, %for.inc.i.i.i.i
  %a.030.i.i.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i.i.i, %for.inc.i.i.i.i ], [ %a.027.i.i.i.i, %if.then.i.i.i.i ]
  %spec.029.i.i.i.i = phi %struct.die_struct* [ %spec.1.i.i.i.i, %for.inc.i.i.i.i ], [ null, %if.then.i.i.i.i ]
  %dw_attr.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i.i, i64 0, i32 0
  %49 = load i32* %dw_attr.i.i.i.i, align 4, !tbaa !57
  switch i32 %49, label %for.inc.i.i.i.i [
    i32 73, label %land.lhs.true.i.i.i.i
    i32 71, label %land.lhs.true.i.i.i.i.i
    i32 49, label %land.lhs.true.i.i.i.i.i
  ]

land.lhs.true.i.i.i.i.i:                          ; preds = %for.body.i.i.i.i, %for.body.i.i.i.i
  %a.idx.i.i.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i.i = load i32* %a.idx.i.i.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i.i.i = icmp eq i32 %a.idx.val.i.i.i.i.i, 10
  br i1 %cmp.i.i.i.i.i, label %AT_ref.exit.i.i.i.i, label %if.end.i.i.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %land.lhs.true.i.i.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i.i:                              ; preds = %land.lhs.true.i.i.i.i.i
  %v.i.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i.i, i64 0, i32 2, i32 1
  %die.i.i.i.i.i = bitcast %union.anon.3* %v.i.i.i.i.i to %struct.die_struct**
  %50 = load %struct.die_struct** %die.i.i.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i.i.i

for.inc.i.i.i.i:                                  ; preds = %AT_ref.exit.i.i.i.i, %for.body.i.i.i.i
  %spec.1.i.i.i.i = phi %struct.die_struct* [ %50, %AT_ref.exit.i.i.i.i ], [ %spec.029.i.i.i.i, %for.body.i.i.i.i ]
  %dw_attr_next.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i.i, i64 0, i32 1
  %a.0.i.i.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i.i.i, align 8
  %cmp1.i.i.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i.i.i, null
  br i1 %cmp1.i.i.i.i, label %for.end.i.i.i.i, label %for.body.i.i.i.i

for.end.i.i.i.i:                                  ; preds = %for.inc.i.i.i.i
  %tobool.i.i.i.i = icmp eq %struct.die_struct* %spec.1.i.i.i.i, null
  br i1 %tobool.i.i.i.i, label %if.else16.i, label %tailrecurse.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %for.body.i.i.i.i
  %a.idx.i.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i = load i32* %a.idx.i.i.i.i, align 4, !tbaa !59
  %cmp.i4.i.i.i = icmp eq i32 %a.idx.val.i.i.i.i, 10
  br i1 %cmp.i4.i.i.i, label %get_AT_ref.exit.i.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

get_AT_ref.exit.i.i:                              ; preds = %land.lhs.true.i.i.i.i
  %v.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i.i, i64 0, i32 2, i32 1
  %die.i.i.i.i = bitcast %union.anon.3* %v.i.i.i.i to %struct.die_struct**
  %51 = load %struct.die_struct** %die.i.i.i.i, align 8, !tbaa !60
  %tobool.i.i216 = icmp eq %struct.die_struct* %51, null
  br i1 %tobool.i.i216, label %if.else16.i, label %get_AT_ref.exit.i.tailrecurse.i_crit_edge.i

get_AT_ref.exit.i.tailrecurse.i_crit_edge.i:      ; preds = %get_AT_ref.exit.i.i
  %die_tag.i.phi.trans.insert.i = getelementptr inbounds %struct.die_struct* %51, i64 0, i32 0
  %.pre130.i = load i32* %die_tag.i.phi.trans.insert.i, align 4, !tbaa !69
  br label %tailrecurse.i.i215

if.then.i218:                                     ; preds = %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %tailrecurse.i.i215, %for.body.i214
  %die_sib.i217 = getelementptr inbounds %struct.die_struct* %45, i64 0, i32 5
  %52 = load %struct.die_struct** %die_sib.i217, align 8, !tbaa !63
  store %struct.die_struct* %52, %struct.die_struct** %ptr.0.ph82107.i, align 8, !tbaa !6
  switch i32 %46, label %if.else14.i [
    i32 16644, label %tailrecurse.i.i.i45.i
    i32 16645, label %if.then12.i
  ]

tailrecurse.i.i.i45.i:                            ; preds = %if.then.i218, %for.end.i.i.i68.i
  %die.tr.i.i.i43.i = phi %struct.die_struct* [ %spec.1.i.i.i62.i, %for.end.i.i.i68.i ], [ %45, %if.then.i218 ]
  %cmp.i.i.i44.i = icmp eq %struct.die_struct* %die.tr.i.i.i43.i, null
  br i1 %cmp.i.i.i44.i, label %push_new_compile_unit.exit.i, label %if.then.i.i.i49.i

if.then.i.i.i49.i:                                ; preds = %tailrecurse.i.i.i45.i
  %die_attr.i.i.i46.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i43.i, i64 0, i32 2
  %a.027.i.i.i47.i = load %struct.dw_attr_struct** %die_attr.i.i.i46.i, align 8
  %cmp128.i.i.i48.i = icmp eq %struct.dw_attr_struct* %a.027.i.i.i47.i, null
  br i1 %cmp128.i.i.i48.i, label %push_new_compile_unit.exit.i, label %for.body.i.i.i53.i

for.body.i.i.i53.i:                               ; preds = %if.then.i.i.i49.i, %for.inc.i.i.i66.i
  %a.030.i.i.i50.i = phi %struct.dw_attr_struct* [ %a.0.i.i.i64.i, %for.inc.i.i.i66.i ], [ %a.027.i.i.i47.i, %if.then.i.i.i49.i ]
  %spec.029.i.i.i51.i = phi %struct.die_struct* [ %spec.1.i.i.i62.i, %for.inc.i.i.i66.i ], [ null, %if.then.i.i.i49.i ]
  %dw_attr.i.i.i52.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i50.i, i64 0, i32 0
  %53 = load i32* %dw_attr.i.i.i52.i, align 4, !tbaa !57
  switch i32 %53, label %for.inc.i.i.i66.i [
    i32 3, label %land.lhs.true.i.i.i71.i
    i32 71, label %land.lhs.true.i.i.i.i57.i
    i32 49, label %land.lhs.true.i.i.i.i57.i
  ]

land.lhs.true.i.i.i.i57.i:                        ; preds = %for.body.i.i.i53.i, %for.body.i.i.i53.i
  %a.idx.i.i.i.i54.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i50.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i55.i = load i32* %a.idx.i.i.i.i54.i, align 4, !tbaa !59
  %cmp.i.i.i.i56.i = icmp eq i32 %a.idx.val.i.i.i.i55.i, 10
  br i1 %cmp.i.i.i.i56.i, label %AT_ref.exit.i.i.i61.i, label %if.end.i.i.i.i58.i

if.end.i.i.i.i58.i:                               ; preds = %land.lhs.true.i.i.i.i57.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i61.i:                            ; preds = %land.lhs.true.i.i.i.i57.i
  %v.i.i.i.i59.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i50.i, i64 0, i32 2, i32 1
  %die.i.i.i.i60.i = bitcast %union.anon.3* %v.i.i.i.i59.i to %struct.die_struct**
  %54 = load %struct.die_struct** %die.i.i.i.i60.i, align 8, !tbaa !60
  br label %for.inc.i.i.i66.i

for.inc.i.i.i66.i:                                ; preds = %AT_ref.exit.i.i.i61.i, %for.body.i.i.i53.i
  %spec.1.i.i.i62.i = phi %struct.die_struct* [ %54, %AT_ref.exit.i.i.i61.i ], [ %spec.029.i.i.i51.i, %for.body.i.i.i53.i ]
  %dw_attr_next.i.i.i63.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i50.i, i64 0, i32 1
  %a.0.i.i.i64.i = load %struct.dw_attr_struct** %dw_attr_next.i.i.i63.i, align 8
  %cmp1.i.i.i65.i = icmp eq %struct.dw_attr_struct* %a.0.i.i.i64.i, null
  br i1 %cmp1.i.i.i65.i, label %for.end.i.i.i68.i, label %for.body.i.i.i53.i

for.end.i.i.i68.i:                                ; preds = %for.inc.i.i.i66.i
  %tobool.i.i.i67.i = icmp eq %struct.die_struct* %spec.1.i.i.i62.i, null
  br i1 %tobool.i.i.i67.i, label %push_new_compile_unit.exit.i, label %tailrecurse.i.i.i45.i

land.lhs.true.i.i.i71.i:                          ; preds = %for.body.i.i.i53.i
  %a.idx.i.i.i69.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i50.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i70.i = load i32* %a.idx.i.i.i69.i, align 4, !tbaa !59
  %cmp.i2.i.i.i = icmp eq i32 %a.idx.val.i.i.i70.i, 14
  br i1 %cmp.i2.i.i.i, label %AT_string.exit.i.i.i, label %if.end.i.i.i72.i

if.end.i.i.i72.i:                                 ; preds = %land.lhs.true.i.i.i71.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4518, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.AT_string, i64 0, i64 0)) #7
  unreachable

AT_string.exit.i.i.i:                             ; preds = %land.lhs.true.i.i.i71.i
  %v.i.i.i73.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i50.i, i64 0, i32 2, i32 1
  %val_str.i.i.i.i = bitcast %union.anon.3* %v.i.i.i73.i to %struct.indirect_string_node**
  %55 = load %struct.indirect_string_node** %val_str.i.i.i.i, align 8, !tbaa !6
  %str.i.i.i.i = getelementptr inbounds %struct.indirect_string_node* %55, i64 0, i32 0, i32 1
  %56 = load i8** %str.i.i.i.i, align 8, !tbaa !70
  br label %push_new_compile_unit.exit.i

push_new_compile_unit.exit.i:                     ; preds = %for.end.i.i.i68.i, %if.then.i.i.i49.i, %tailrecurse.i.i.i45.i, %AT_string.exit.i.i.i
  %cond.i.i.i = phi i8* [ %56, %AT_string.exit.i.i.i ], [ null, %tailrecurse.i.i.i45.i ], [ null, %if.then.i.i.i49.i ], [ null, %for.end.i.i.i68.i ]
  %call1.i.i = call fastcc %struct.die_struct* @gen_compile_unit_die(i8* %cond.i.i.i) #5
  %die_sib.i.i = getelementptr inbounds %struct.die_struct* %call1.i.i, i64 0, i32 5
  store %struct.die_struct* %unit.0.ph109.i, %struct.die_struct** %die_sib.i.i, align 8, !tbaa !63
  call fastcc void @remove_children(%struct.die_struct* %45) #5
  %57 = bitcast %struct.die_struct* %45 to i8*
  call void @free(i8* %57) #5
  br label %for.cond.outer.backedge.i

for.cond.outer.backedge.i:                        ; preds = %if.then12.i, %push_new_compile_unit.exit.i
  %unit.0.ph.be.i = phi %struct.die_struct* [ %call1.i.i, %push_new_compile_unit.exit.i ], [ %59, %if.then12.i ]
  %58 = load %struct.die_struct** %ptr.0.ph82107.i, align 8, !tbaa !6
  %tobool105106.i = icmp eq %struct.die_struct* %58, null
  br i1 %tobool105106.i, label %for.end.i, label %for.body.lr.ph.lr.ph.i

if.then12.i:                                      ; preds = %if.then.i218
  %die_sib.i74.i = getelementptr inbounds %struct.die_struct* %unit.0.ph109.i, i64 0, i32 5
  %59 = load %struct.die_struct** %die_sib.i74.i, align 8, !tbaa !63
  store %struct.die_struct* null, %struct.die_struct** %die_sib.i74.i, align 8, !tbaa !63
  call fastcc void @remove_children(%struct.die_struct* %45) #5
  %60 = bitcast %struct.die_struct* %45 to i8*
  call void @free(i8* %60) #5
  br label %for.cond.outer.backedge.i

if.else14.i:                                      ; preds = %if.then.i218
  %cmp1.i.i219 = icmp ne %struct.die_struct* %45, null
  %or.cond.i.i = and i1 %cmp.i.i212, %cmp1.i.i219
  br i1 %or.cond.i.i, label %if.then.i.i222, label %for.cond.backedge.i

for.cond.backedge.i:                              ; preds = %if.end.i.i224, %if.else14.i
  %61 = phi %struct.die_struct* [ %52, %if.else14.i ], [ %.pre.i223, %if.end.i.i224 ]
  %tobool.i220 = icmp eq %struct.die_struct* %61, null
  br i1 %tobool.i220, label %for.end.i, label %for.body.i214

if.then.i.i222:                                   ; preds = %if.else14.i
  %cmp2.i.i221 = icmp eq %struct.die_struct* %unit.0.ph109.i, %45
  br i1 %cmp2.i.i221, label %if.then3.i.i, label %if.end.i.i224

if.then3.i.i:                                     ; preds = %if.then.i.i222
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i224:                                    ; preds = %if.then.i.i222
  %die_parent.i.i = getelementptr inbounds %struct.die_struct* %45, i64 0, i32 3
  store %struct.die_struct* %unit.0.ph109.i, %struct.die_struct** %die_parent.i.i, align 8, !tbaa !55
  %62 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  store %struct.die_struct* %62, %struct.die_struct** %die_sib.i217, align 8, !tbaa !63
  store %struct.die_struct* %45, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %.pre.i223 = load %struct.die_struct** %ptr.0.ph82107.i, align 8, !tbaa !6
  br label %for.cond.backedge.i

if.else16.i:                                      ; preds = %lor.lhs.false3.i, %get_AT_ref.exit.i.i, %tailrecurse.i.i215, %for.end.i.i.i.i, %if.then.i.i.i.i, %tailrecurse.i.i.i.i
  %die_sib17.i = getelementptr inbounds %struct.die_struct* %45, i64 0, i32 5
  %63 = load %struct.die_struct** %die_sib17.i, align 8, !tbaa !6
  %tobool105.i = icmp eq %struct.die_struct* %63, null
  br i1 %tobool105.i, label %for.end.i, label %for.body.lr.ph.i213

for.end.i:                                        ; preds = %for.cond.outer.backedge.i, %if.else16.i, %for.cond.backedge.i, %if.then74
  call fastcc void @assign_symbol_names(%struct.die_struct* %41) #5
  %node.0102.i = load %struct.limbo_die_struct** @limbo_die_list, align 8
  %tobool20103.i = icmp eq %struct.limbo_die_struct* %node.0102.i, null
  br i1 %tobool20103.i, label %if.end75, label %for.body21.i

for.body21.i:                                     ; preds = %for.end.i, %for.body21.i
  %node.0104.i = phi %struct.limbo_die_struct* [ %node.0.i, %for.body21.i ], [ %node.0102.i, %for.end.i ]
  %die22.i = getelementptr inbounds %struct.limbo_die_struct* %node.0104.i, i64 0, i32 0
  %64 = load %struct.die_struct** %die22.i, align 8, !tbaa !54
  call fastcc void @compute_section_prefix(%struct.die_struct* %64) #5
  %65 = load %struct.die_struct** %die22.i, align 8, !tbaa !54
  call fastcc void @assign_symbol_names(%struct.die_struct* %65) #5
  %next.i = getelementptr inbounds %struct.limbo_die_struct* %node.0104.i, i64 0, i32 2
  %node.0.i = load %struct.limbo_die_struct** %next.i, align 8
  %tobool20.i = icmp eq %struct.limbo_die_struct* %node.0.i, null
  br i1 %tobool20.i, label %if.end75, label %for.body21.i

if.end75:                                         ; preds = %for.body21.i, %for.end.i, %retry_incomplete_types.exit
  %66 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  call fastcc void @add_sibling_attributes(%struct.die_struct* %66)
  %node.1404 = load %struct.limbo_die_struct** @limbo_die_list, align 8
  %tobool77405 = icmp eq %struct.limbo_die_struct* %node.1404, null
  br i1 %tobool77405, label %for.end82, label %for.body78

for.body78:                                       ; preds = %if.end75, %for.body78
  %node.1406 = phi %struct.limbo_die_struct* [ %node.1, %for.body78 ], [ %node.1404, %if.end75 ]
  %die79 = getelementptr inbounds %struct.limbo_die_struct* %node.1406, i64 0, i32 0
  %67 = load %struct.die_struct** %die79, align 8, !tbaa !54
  call fastcc void @add_sibling_attributes(%struct.die_struct* %67)
  %next81 = getelementptr inbounds %struct.limbo_die_struct* %node.1406, i64 0, i32 2
  %node.1 = load %struct.limbo_die_struct** %next81, align 8
  %tobool77 = icmp eq %struct.limbo_die_struct* %node.1, null
  br i1 %tobool77, label %for.end82, label %for.body78

for.end82:                                        ; preds = %for.body78, %if.end75
  call void @text_section() #5
  %68 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %call83 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([8 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str8, i64 0, i64 0), i32 0) #5
  %69 = load i32* @separate_line_info_table_in_use, align 4, !tbaa !4
  %cmp91 = icmp eq i32 %69, 0
  br i1 %cmp91, label %if.then93, label %if.else94

if.then93:                                        ; preds = %for.end82
  %70 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i225 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i225, i64 8
  %71 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %71, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i225 to i32*
  store i32 17, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i225, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 12, i32* %val_class.i, align 4, !tbaa !59
  %call1.i = call noalias i8* @xstrdup(i8* getelementptr inbounds ([30 x i8]* @text_section_label, i64 0, i64 0)) #5
  %v.i = getelementptr inbounds i8* %call.i225, i64 24
  %val_lbl_id.i = bitcast i8* %v.i to i8**
  store i8* %call1.i, i8** %val_lbl_id.i, align 8, !tbaa !6
  %cmp.i.i226 = icmp ne %struct.die_struct* %70, null
  %cmp1.i.i227 = icmp ne i8* %call.i225, null
  %or.cond.i.i228 = and i1 %cmp.i.i226, %cmp1.i.i227
  br i1 %or.cond.i.i228, label %if.then.i.i230, label %add_AT_lbl_id.exit

if.then.i.i230:                                   ; preds = %if.then93
  %72 = bitcast i8* %call.i225 to %struct.dw_attr_struct*
  %die_attr.i.i229 = getelementptr inbounds %struct.die_struct* %70, i64 0, i32 2
  %73 = load %struct.dw_attr_struct** %die_attr.i.i229, align 8, !tbaa !73
  store %struct.dw_attr_struct* %73, %struct.dw_attr_struct** %71, align 8, !tbaa !72
  store %struct.dw_attr_struct* %72, %struct.dw_attr_struct** %die_attr.i.i229, align 8, !tbaa !73
  br label %add_AT_lbl_id.exit

add_AT_lbl_id.exit:                               ; preds = %if.then93, %if.then.i.i230
  %74 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i231 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i232 = getelementptr inbounds i8* %call.i231, i64 8
  %75 = bitcast i8* %dw_attr_next.i232 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %75, align 8, !tbaa !72
  %dw_attr.i233 = bitcast i8* %call.i231 to i32*
  store i32 18, i32* %dw_attr.i233, align 4, !tbaa !57
  %dw_attr_val.i234 = getelementptr inbounds i8* %call.i231, i64 16
  %val_class.i235 = bitcast i8* %dw_attr_val.i234 to i32*
  store i32 12, i32* %val_class.i235, align 4, !tbaa !59
  %call1.i236 = call noalias i8* @xstrdup(i8* getelementptr inbounds ([30 x i8]* @text_end_label, i64 0, i64 0)) #5
  %v.i237 = getelementptr inbounds i8* %call.i231, i64 24
  %val_lbl_id.i238 = bitcast i8* %v.i237 to i8**
  store i8* %call1.i236, i8** %val_lbl_id.i238, align 8, !tbaa !6
  %cmp.i.i239 = icmp ne %struct.die_struct* %74, null
  %cmp1.i.i240 = icmp ne i8* %call.i231, null
  %or.cond.i.i241 = and i1 %cmp.i.i239, %cmp1.i.i240
  br i1 %or.cond.i.i241, label %if.then.i.i243, label %if.end100

if.then.i.i243:                                   ; preds = %add_AT_lbl_id.exit
  %76 = bitcast i8* %call.i231 to %struct.dw_attr_struct*
  %die_attr.i.i242 = getelementptr inbounds %struct.die_struct* %74, i64 0, i32 2
  %77 = load %struct.dw_attr_struct** %die_attr.i.i242, align 8, !tbaa !73
  store %struct.dw_attr_struct* %77, %struct.dw_attr_struct** %75, align 8, !tbaa !72
  store %struct.dw_attr_struct* %76, %struct.dw_attr_struct** %die_attr.i.i242, align 8, !tbaa !73
  br label %if.end100

if.else94:                                        ; preds = %for.end82
  %78 = load i32* @ranges_table_in_use, align 4
  %tobool97 = icmp eq i32 %78, 0
  br i1 %tobool97, label %if.end100, label %if.then98

if.then98:                                        ; preds = %if.else94
  %79 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %80 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call.i245 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i246 = getelementptr inbounds i8* %call.i245, i64 8
  %81 = bitcast i8* %dw_attr_next.i246 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %81, align 8, !tbaa !72
  %dw_attr.i247 = bitcast i8* %call.i245 to i32*
  store i32 82, i32* %dw_attr.i247, align 4, !tbaa !57
  %dw_attr_val.i248 = getelementptr inbounds i8* %call.i245, i64 16
  %val_class.i249 = bitcast i8* %dw_attr_val.i248 to i32*
  store i32 0, i32* %val_class.i249, align 4, !tbaa !59
  %v.i250 = getelementptr inbounds i8* %call.i245, i64 24
  %val_addr.i = bitcast i8* %v.i250 to %struct.rtx_def**
  store %struct.rtx_def* %80, %struct.rtx_def** %val_addr.i, align 8, !tbaa !6
  %cmp.i.i251 = icmp ne %struct.die_struct* %79, null
  %cmp1.i.i252 = icmp ne i8* %call.i245, null
  %or.cond.i.i253 = and i1 %cmp.i.i251, %cmp1.i.i252
  br i1 %or.cond.i.i253, label %if.then.i.i255, label %if.end100

if.then.i.i255:                                   ; preds = %if.then98
  %82 = bitcast i8* %call.i245 to %struct.dw_attr_struct*
  %die_attr.i.i254 = getelementptr inbounds %struct.die_struct* %79, i64 0, i32 2
  %83 = load %struct.dw_attr_struct** %die_attr.i.i254, align 8, !tbaa !73
  store %struct.dw_attr_struct* %83, %struct.dw_attr_struct** %81, align 8, !tbaa !72
  store %struct.dw_attr_struct* %82, %struct.dw_attr_struct** %die_attr.i.i254, align 8, !tbaa !73
  br label %if.end100

if.end100:                                        ; preds = %if.then.i.i255, %if.then98, %if.then.i.i243, %add_AT_lbl_id.exit, %if.else94
  %84 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp101 = icmp ugt i32 %84, 1
  br i1 %cmp101, label %if.then103, label %for.cond109.preheader

if.then103:                                       ; preds = %if.end100
  %85 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i256 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i257 = getelementptr inbounds i8* %call.i256, i64 8
  %86 = bitcast i8* %dw_attr_next.i257 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %86, align 8, !tbaa !72
  %dw_attr.i258 = bitcast i8* %call.i256 to i32*
  store i32 16, i32* %dw_attr.i258, align 4, !tbaa !57
  %dw_attr_val.i259 = getelementptr inbounds i8* %call.i256, i64 16
  %val_class.i260 = bitcast i8* %dw_attr_val.i259 to i32*
  store i32 13, i32* %val_class.i260, align 4, !tbaa !59
  %call1.i261 = call noalias i8* @xstrdup(i8* getelementptr inbounds ([30 x i8]* @debug_line_section_label, i64 0, i64 0)) #5
  %v.i262 = getelementptr inbounds i8* %call.i256, i64 24
  %val_lbl_id.i263 = bitcast i8* %v.i262 to i8**
  store i8* %call1.i261, i8** %val_lbl_id.i263, align 8, !tbaa !6
  %cmp.i.i264 = icmp ne %struct.die_struct* %85, null
  %cmp1.i.i265 = icmp ne i8* %call.i256, null
  %or.cond.i.i266 = and i1 %cmp.i.i264, %cmp1.i.i265
  br i1 %or.cond.i.i266, label %if.then.i.i268, label %if.end104

if.then.i.i268:                                   ; preds = %if.then103
  %87 = bitcast i8* %call.i256 to %struct.dw_attr_struct*
  %die_attr.i.i267 = getelementptr inbounds %struct.die_struct* %85, i64 0, i32 2
  %88 = load %struct.dw_attr_struct** %die_attr.i.i267, align 8, !tbaa !73
  store %struct.dw_attr_struct* %88, %struct.dw_attr_struct** %86, align 8, !tbaa !72
  store %struct.dw_attr_struct* %87, %struct.dw_attr_struct** %die_attr.i.i267, align 8, !tbaa !73
  br label %if.end104

if.end104:                                        ; preds = %if.then.i.i268, %if.then103
  %.pr = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp105 = icmp ugt i32 %.pr, 2
  br i1 %cmp105, label %if.then107, label %for.cond109.preheader

if.then107:                                       ; preds = %if.end104
  %89 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i269 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i270 = getelementptr inbounds i8* %call.i269, i64 8
  %90 = bitcast i8* %dw_attr_next.i270 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %90, align 8, !tbaa !72
  %dw_attr.i271 = bitcast i8* %call.i269 to i32*
  store i32 67, i32* %dw_attr.i271, align 4, !tbaa !57
  %dw_attr_val.i272 = getelementptr inbounds i8* %call.i269, i64 16
  %val_class.i273 = bitcast i8* %dw_attr_val.i272 to i32*
  store i32 13, i32* %val_class.i273, align 4, !tbaa !59
  %call1.i274 = call noalias i8* @xstrdup(i8* getelementptr inbounds ([30 x i8]* @macinfo_section_label, i64 0, i64 0)) #5
  %v.i275 = getelementptr inbounds i8* %call.i269, i64 24
  %val_lbl_id.i276 = bitcast i8* %v.i275 to i8**
  store i8* %call1.i274, i8** %val_lbl_id.i276, align 8, !tbaa !6
  %cmp.i.i277 = icmp ne %struct.die_struct* %89, null
  %cmp1.i.i278 = icmp ne i8* %call.i269, null
  %or.cond.i.i279 = and i1 %cmp.i.i277, %cmp1.i.i278
  br i1 %or.cond.i.i279, label %if.then.i.i281, label %for.cond109.preheader

if.then.i.i281:                                   ; preds = %if.then107
  %91 = bitcast i8* %call.i269 to %struct.dw_attr_struct*
  %die_attr.i.i280 = getelementptr inbounds %struct.die_struct* %89, i64 0, i32 2
  %92 = load %struct.dw_attr_struct** %die_attr.i.i280, align 8, !tbaa !73
  store %struct.dw_attr_struct* %92, %struct.dw_attr_struct** %90, align 8, !tbaa !72
  store %struct.dw_attr_struct* %91, %struct.dw_attr_struct** %die_attr.i.i280, align 8, !tbaa !73
  br label %for.cond109.preheader

for.cond109.preheader:                            ; preds = %if.end104, %if.then107, %if.then.i.i281, %if.end100
  %node.2401 = load %struct.limbo_die_struct** @limbo_die_list, align 8
  %tobool110402 = icmp eq %struct.limbo_die_struct* %node.2401, null
  br i1 %tobool110402, label %for.end115, label %for.body111

for.body111:                                      ; preds = %for.cond109.preheader, %for.body111
  %node.2403 = phi %struct.limbo_die_struct* [ %node.2, %for.body111 ], [ %node.2401, %for.cond109.preheader ]
  %die112 = getelementptr inbounds %struct.limbo_die_struct* %node.2403, i64 0, i32 0
  %93 = load %struct.die_struct** %die112, align 8, !tbaa !54
  call fastcc void @output_comp_unit(%struct.die_struct* %93)
  %next114 = getelementptr inbounds %struct.limbo_die_struct* %node.2403, i64 0, i32 2
  %node.2 = load %struct.limbo_die_struct** %next114, align 8
  %tobool110 = icmp eq %struct.limbo_die_struct* %node.2, null
  br i1 %tobool110, label %for.end115, label %for.body111

for.end115:                                       ; preds = %for.body111, %for.cond109.preheader
  %94 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  call fastcc void @output_comp_unit(%struct.die_struct* %94)
  call void @named_section_flags(i8* getelementptr inbounds ([14 x i8]* @.str11, i64 0, i64 0), i32 1024) #5
  %95 = load i32* @abbrev_die_table_in_use, align 4, !tbaa !4
  %cmp84.i = icmp ugt i32 %95, 1
  br i1 %cmp84.i, label %for.body.i285, label %output_abbrev_section.exit

for.body.i285:                                    ; preds = %for.end115, %for.end.i296
  %abbrev_id.085.i = phi i64 [ %inc.i293, %for.end.i296 ], [ 1, %for.end115 ]
  %96 = load %struct.die_struct*** @abbrev_die_table, align 8, !tbaa !6
  %arrayidx.i283 = getelementptr inbounds %struct.die_struct** %96, i64 %abbrev_id.085.i
  %97 = load %struct.die_struct** %arrayidx.i283, align 8, !tbaa !6
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %abbrev_id.085.i, i8* getelementptr inbounds ([14 x i8]* @.str33, i64 0, i64 0)) #5
  %die_tag.i284 = getelementptr inbounds %struct.die_struct* %97, i64 0, i32 0
  %98 = load i32* %die_tag.i284, align 4, !tbaa !69
  %conv2.i = zext i32 %98 to i64
  switch i32 %98, label %sw.default.i.i [
    i32 0, label %dwarf_tag_name.exit.i
    i32 1, label %sw.bb1.i.i
    i32 2, label %sw.bb2.i.i
    i32 3, label %sw.bb3.i.i
    i32 4, label %sw.bb4.i.i
    i32 5, label %sw.bb5.i.i
    i32 8, label %sw.bb6.i.i
    i32 10, label %sw.bb7.i.i
    i32 11, label %sw.bb8.i.i
    i32 13, label %sw.bb9.i.i
    i32 15, label %sw.bb10.i.i
    i32 16, label %sw.bb11.i.i
    i32 17, label %sw.bb12.i.i
    i32 18, label %sw.bb13.i.i
    i32 19, label %sw.bb14.i.i
    i32 21, label %sw.bb15.i.i
    i32 22, label %sw.bb16.i.i
    i32 23, label %sw.bb17.i.i
    i32 24, label %sw.bb18.i.i
    i32 25, label %sw.bb19.i.i
    i32 26, label %sw.bb20.i.i
    i32 27, label %sw.bb21.i.i
    i32 28, label %sw.bb22.i.i
    i32 29, label %sw.bb23.i.i
    i32 30, label %sw.bb24.i.i
    i32 31, label %sw.bb25.i.i
    i32 32, label %sw.bb26.i.i
    i32 33, label %sw.bb27.i.i
    i32 34, label %sw.bb28.i.i
    i32 35, label %sw.bb29.i.i
    i32 36, label %sw.bb30.i.i
    i32 37, label %sw.bb31.i.i
    i32 38, label %sw.bb32.i.i
    i32 39, label %sw.bb33.i.i
    i32 40, label %sw.bb34.i.i
    i32 41, label %sw.bb35.i.i
    i32 42, label %sw.bb36.i.i
    i32 43, label %sw.bb37.i.i
    i32 44, label %sw.bb38.i.i
    i32 45, label %sw.bb39.i.i
    i32 46, label %sw.bb40.i.i
    i32 47, label %sw.bb41.i.i
    i32 48, label %sw.bb42.i.i
    i32 49, label %sw.bb43.i.i
    i32 50, label %sw.bb44.i.i
    i32 51, label %sw.bb45.i.i
    i32 52, label %sw.bb46.i.i
    i32 53, label %sw.bb47.i.i
    i32 16513, label %sw.bb48.i.i
    i32 16641, label %sw.bb49.i.i
    i32 16642, label %sw.bb50.i.i
    i32 16643, label %sw.bb51.i.i
    i32 16644, label %sw.bb52.i.i
    i32 16645, label %sw.bb53.i.i
  ]

sw.bb1.i.i:                                       ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb2.i.i:                                       ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb3.i.i:                                       ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb4.i.i:                                       ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb5.i.i:                                       ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb6.i.i:                                       ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb7.i.i:                                       ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb8.i.i:                                       ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb9.i.i:                                       ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb10.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb11.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb12.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb13.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb14.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb15.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb16.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb17.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb18.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb19.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb20.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb21.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb22.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb23.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb24.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb25.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb26.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb27.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb28.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb29.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb30.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb31.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb32.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb33.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb34.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb35.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb36.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb37.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb38.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb39.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb40.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb41.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb42.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb43.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb44.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb45.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb46.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb47.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb48.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb49.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb50.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb51.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb52.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.bb53.i.i:                                      ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

sw.default.i.i:                                   ; preds = %for.body.i285
  br label %dwarf_tag_name.exit.i

dwarf_tag_name.exit.i:                            ; preds = %sw.default.i.i, %sw.bb53.i.i, %sw.bb52.i.i, %sw.bb51.i.i, %sw.bb50.i.i, %sw.bb49.i.i, %sw.bb48.i.i, %sw.bb47.i.i, %sw.bb46.i.i, %sw.bb45.i.i, %sw.bb44.i.i, %sw.bb43.i.i, %sw.bb42.i.i, %sw.bb41.i.i, %sw.bb40.i.i, %sw.bb39.i.i, %sw.bb38.i.i, %sw.bb37.i.i, %sw.bb36.i.i, %sw.bb35.i.i, %sw.bb34.i.i, %sw.bb33.i.i, %sw.bb32.i.i, %sw.bb31.i.i, %sw.bb30.i.i, %sw.bb29.i.i, %sw.bb28.i.i, %sw.bb27.i.i, %sw.bb26.i.i, %sw.bb25.i.i, %sw.bb24.i.i, %sw.bb23.i.i, %sw.bb22.i.i, %sw.bb21.i.i, %sw.bb20.i.i, %sw.bb19.i.i, %sw.bb18.i.i, %sw.bb17.i.i, %sw.bb16.i.i, %sw.bb15.i.i, %sw.bb14.i.i, %sw.bb13.i.i, %sw.bb12.i.i, %sw.bb11.i.i, %sw.bb10.i.i, %sw.bb9.i.i, %sw.bb8.i.i, %sw.bb7.i.i, %sw.bb6.i.i, %sw.bb5.i.i, %sw.bb4.i.i, %sw.bb3.i.i, %sw.bb2.i.i, %sw.bb1.i.i, %for.body.i285
  %retval.0.i.i = phi i8* [ getelementptr inbounds ([17 x i8]* @.str209, i64 0, i64 0), %sw.default.i.i ], [ getelementptr inbounds ([17 x i8]* @.str208, i64 0, i64 0), %sw.bb53.i.i ], [ getelementptr inbounds ([17 x i8]* @.str207, i64 0, i64 0), %sw.bb52.i.i ], [ getelementptr inbounds ([22 x i8]* @.str206, i64 0, i64 0), %sw.bb51.i.i ], [ getelementptr inbounds ([25 x i8]* @.str205, i64 0, i64 0), %sw.bb50.i.i ], [ getelementptr inbounds ([20 x i8]* @.str204, i64 0, i64 0), %sw.bb49.i.i ], [ getelementptr inbounds ([17 x i8]* @.str203, i64 0, i64 0), %sw.bb48.i.i ], [ getelementptr inbounds ([21 x i8]* @.str202, i64 0, i64 0), %sw.bb47.i.i ], [ getelementptr inbounds ([16 x i8]* @.str201, i64 0, i64 0), %sw.bb46.i.i ], [ getelementptr inbounds ([20 x i8]* @.str200, i64 0, i64 0), %sw.bb45.i.i ], [ getelementptr inbounds ([17 x i8]* @.str199, i64 0, i64 0), %sw.bb44.i.i ], [ getelementptr inbounds ([19 x i8]* @.str198, i64 0, i64 0), %sw.bb43.i.i ], [ getelementptr inbounds ([28 x i8]* @.str197, i64 0, i64 0), %sw.bb42.i.i ], [ getelementptr inbounds ([27 x i8]* @.str196, i64 0, i64 0), %sw.bb41.i.i ], [ getelementptr inbounds ([18 x i8]* @.str195, i64 0, i64 0), %sw.bb40.i.i ], [ getelementptr inbounds ([19 x i8]* @.str194, i64 0, i64 0), %sw.bb39.i.i ], [ getelementptr inbounds ([21 x i8]* @.str193, i64 0, i64 0), %sw.bb38.i.i ], [ getelementptr inbounds ([16 x i8]* @.str192, i64 0, i64 0), %sw.bb37.i.i ], [ getelementptr inbounds ([14 x i8]* @.str191, i64 0, i64 0), %sw.bb36.i.i ], [ getelementptr inbounds ([17 x i8]* @.str190, i64 0, i64 0), %sw.bb35.i.i ], [ getelementptr inbounds ([18 x i8]* @.str189, i64 0, i64 0), %sw.bb34.i.i ], [ getelementptr inbounds ([16 x i8]* @.str188, i64 0, i64 0), %sw.bb33.i.i ], [ getelementptr inbounds ([18 x i8]* @.str187, i64 0, i64 0), %sw.bb32.i.i ], [ getelementptr inbounds ([19 x i8]* @.str186, i64 0, i64 0), %sw.bb31.i.i ], [ getelementptr inbounds ([17 x i8]* @.str185, i64 0, i64 0), %sw.bb30.i.i ], [ getelementptr inbounds ([26 x i8]* @.str184, i64 0, i64 0), %sw.bb29.i.i ], [ getelementptr inbounds ([17 x i8]* @.str183, i64 0, i64 0), %sw.bb28.i.i ], [ getelementptr inbounds ([21 x i8]* @.str182, i64 0, i64 0), %sw.bb27.i.i ], [ getelementptr inbounds ([16 x i8]* @.str181, i64 0, i64 0), %sw.bb26.i.i ], [ getelementptr inbounds ([26 x i8]* @.str180, i64 0, i64 0), %sw.bb25.i.i ], [ getelementptr inbounds ([14 x i8]* @.str179, i64 0, i64 0), %sw.bb24.i.i ], [ getelementptr inbounds ([26 x i8]* @.str178, i64 0, i64 0), %sw.bb23.i.i ], [ getelementptr inbounds ([19 x i8]* @.str177, i64 0, i64 0), %sw.bb22.i.i ], [ getelementptr inbounds ([24 x i8]* @.str176, i64 0, i64 0), %sw.bb21.i.i ], [ getelementptr inbounds ([20 x i8]* @.str175, i64 0, i64 0), %sw.bb20.i.i ], [ getelementptr inbounds ([15 x i8]* @.str174, i64 0, i64 0), %sw.bb19.i.i ], [ getelementptr inbounds ([30 x i8]* @.str173, i64 0, i64 0), %sw.bb18.i.i ], [ getelementptr inbounds ([18 x i8]* @.str172, i64 0, i64 0), %sw.bb17.i.i ], [ getelementptr inbounds ([15 x i8]* @.str171, i64 0, i64 0), %sw.bb16.i.i ], [ getelementptr inbounds ([23 x i8]* @.str170, i64 0, i64 0), %sw.bb15.i.i ], [ getelementptr inbounds ([22 x i8]* @.str169, i64 0, i64 0), %sw.bb14.i.i ], [ getelementptr inbounds ([19 x i8]* @.str168, i64 0, i64 0), %sw.bb13.i.i ], [ getelementptr inbounds ([20 x i8]* @.str167, i64 0, i64 0), %sw.bb12.i.i ], [ getelementptr inbounds ([22 x i8]* @.str166, i64 0, i64 0), %sw.bb11.i.i ], [ getelementptr inbounds ([20 x i8]* @.str165, i64 0, i64 0), %sw.bb10.i.i ], [ getelementptr inbounds ([14 x i8]* @.str164, i64 0, i64 0), %sw.bb9.i.i ], [ getelementptr inbounds ([21 x i8]* @.str163, i64 0, i64 0), %sw.bb8.i.i ], [ getelementptr inbounds ([13 x i8]* @.str162, i64 0, i64 0), %sw.bb7.i.i ], [ getelementptr inbounds ([28 x i8]* @.str161, i64 0, i64 0), %sw.bb6.i.i ], [ getelementptr inbounds ([24 x i8]* @.str160, i64 0, i64 0), %sw.bb5.i.i ], [ getelementptr inbounds ([24 x i8]* @.str159, i64 0, i64 0), %sw.bb4.i.i ], [ getelementptr inbounds ([19 x i8]* @.str158, i64 0, i64 0), %sw.bb3.i.i ], [ getelementptr inbounds ([18 x i8]* @.str157, i64 0, i64 0), %sw.bb2.i.i ], [ getelementptr inbounds ([18 x i8]* @.str156, i64 0, i64 0), %sw.bb1.i.i ], [ getelementptr inbounds ([15 x i8]* @.str155, i64 0, i64 0), %for.body.i285 ]
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv2.i, i8* getelementptr inbounds ([10 x i8]* @.str34, i64 0, i64 0), i8* %retval.0.i.i) #5
  %die_child.i286 = getelementptr inbounds %struct.die_struct* %97, i64 0, i32 4
  %99 = load %struct.die_struct** %die_child.i286, align 8, !tbaa !62
  %cmp4.i287 = icmp eq %struct.die_struct* %99, null
  br i1 %cmp4.i287, label %if.else.i289, label %if.then.i288

if.then.i288:                                     ; preds = %dwarf_tag_name.exit.i
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 1, i8* getelementptr inbounds ([16 x i8]* @.str35, i64 0, i64 0)) #5
  br label %if.end.i290

if.else.i289:                                     ; preds = %dwarf_tag_name.exit.i
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 0, i8* getelementptr inbounds ([15 x i8]* @.str36, i64 0, i64 0)) #5
  br label %if.end.i290

if.end.i290:                                      ; preds = %if.else.i289, %if.then.i288
  %die_attr.i = getelementptr inbounds %struct.die_struct* %97, i64 0, i32 2
  %a_attr.080.i = load %struct.dw_attr_struct** %die_attr.i, align 8
  %cmp781.i = icmp eq %struct.dw_attr_struct* %a_attr.080.i, null
  br i1 %cmp781.i, label %for.end.i296, label %for.body9.i

for.body9.i:                                      ; preds = %if.end.i290, %output_value_format.exit.i
  %a_attr.082.i = phi %struct.dw_attr_struct* [ %a_attr.0.i, %output_value_format.exit.i ], [ %a_attr.080.i, %if.end.i290 ]
  %dw_attr.i291 = getelementptr inbounds %struct.dw_attr_struct* %a_attr.082.i, i64 0, i32 0
  %100 = load i32* %dw_attr.i291, align 4, !tbaa !57
  %conv10.i = zext i32 %100 to i64
  switch i32 %100, label %sw.default.i78.i [
    i32 1, label %dwarf_attr_name.exit.i
    i32 2, label %sw.bb1.i25.i
    i32 3, label %sw.bb2.i26.i
    i32 9, label %sw.bb3.i27.i
    i32 10, label %sw.bb4.i28.i
    i32 11, label %sw.bb5.i29.i
    i32 12, label %sw.bb6.i30.i
    i32 13, label %sw.bb7.i31.i
    i32 15, label %sw.bb8.i32.i
    i32 16, label %sw.bb9.i33.i
    i32 17, label %sw.bb10.i34.i
    i32 18, label %sw.bb11.i35.i
    i32 19, label %sw.bb12.i36.i
    i32 20, label %sw.bb13.i37.i
    i32 21, label %sw.bb14.i38.i
    i32 22, label %sw.bb15.i39.i
    i32 23, label %sw.bb16.i40.i
    i32 24, label %sw.bb17.i41.i
    i32 25, label %sw.bb18.i42.i
    i32 26, label %sw.bb19.i43.i
    i32 27, label %sw.bb20.i44.i
    i32 28, label %sw.bb21.i45.i
    i32 29, label %sw.bb22.i46.i
    i32 30, label %sw.bb23.i47.i
    i32 32, label %sw.bb24.i48.i
    i32 33, label %sw.bb25.i49.i
    i32 34, label %sw.bb26.i50.i
    i32 37, label %sw.bb27.i51.i
    i32 39, label %sw.bb28.i52.i
    i32 42, label %sw.bb29.i53.i
    i32 44, label %sw.bb30.i54.i
    i32 46, label %sw.bb31.i55.i
    i32 47, label %sw.bb32.i56.i
    i32 49, label %sw.bb33.i57.i
    i32 50, label %sw.bb34.i58.i
    i32 51, label %sw.bb35.i59.i
    i32 52, label %sw.bb36.i60.i
    i32 53, label %sw.bb37.i61.i
    i32 54, label %sw.bb38.i62.i
    i32 55, label %sw.bb39.i63.i
    i32 56, label %sw.bb40.i64.i
    i32 57, label %sw.bb41.i65.i
    i32 58, label %sw.bb42.i66.i
    i32 59, label %sw.bb43.i67.i
    i32 60, label %sw.bb44.i68.i
    i32 61, label %sw.bb45.i69.i
    i32 62, label %sw.bb46.i70.i
    i32 63, label %sw.bb47.i71.i
    i32 64, label %sw.bb48.i72.i
    i32 65, label %sw.bb49.i73.i
    i32 66, label %sw.bb50.i74.i
    i32 67, label %sw.bb51.i75.i
    i32 68, label %sw.bb52.i76.i
    i32 69, label %sw.bb53.i77.i
    i32 70, label %sw.bb54.i.i
    i32 71, label %sw.bb55.i.i
    i32 72, label %sw.bb56.i.i
    i32 73, label %sw.bb57.i.i
    i32 74, label %sw.bb58.i.i
    i32 75, label %sw.bb59.i.i
    i32 76, label %sw.bb60.i.i
    i32 77, label %sw.bb61.i.i
    i32 78, label %sw.bb62.i.i
    i32 79, label %sw.bb63.i.i
    i32 80, label %sw.bb64.i.i
    i32 81, label %sw.bb65.i.i
    i32 82, label %sw.bb66.i.i
    i32 83, label %sw.bb67.i.i
    i32 84, label %sw.bb68.i.i
    i32 85, label %sw.bb69.i.i
    i32 86, label %sw.bb70.i.i
    i32 87, label %sw.bb71.i.i
    i32 88, label %sw.bb72.i.i
    i32 89, label %sw.bb73.i.i
    i32 8193, label %sw.bb74.i.i
    i32 8194, label %sw.bb75.i.i
    i32 8195, label %sw.bb76.i.i
    i32 8196, label %sw.bb77.i.i
    i32 8197, label %sw.bb78.i.i
    i32 8198, label %sw.bb79.i.i
    i32 8199, label %sw.bb80.i.i
    i32 8200, label %sw.bb81.i.i
    i32 8201, label %sw.bb82.i.i
    i32 8202, label %sw.bb83.i.i
    i32 8203, label %sw.bb84.i.i
    i32 8449, label %sw.bb85.i.i
    i32 8450, label %sw.bb86.i.i
    i32 8451, label %sw.bb87.i.i
    i32 8452, label %sw.bb88.i.i
    i32 8453, label %sw.bb89.i.i
    i32 8454, label %sw.bb90.i.i
    i32 8455, label %sw.bb91.i.i
    i32 8705, label %sw.bb92.i.i
  ]

sw.bb1.i25.i:                                     ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb2.i26.i:                                     ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb3.i27.i:                                     ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb4.i28.i:                                     ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb5.i29.i:                                     ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb6.i30.i:                                     ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb7.i31.i:                                     ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb8.i32.i:                                     ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb9.i33.i:                                     ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb10.i34.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb11.i35.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb12.i36.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb13.i37.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb14.i38.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb15.i39.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb16.i40.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb17.i41.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb18.i42.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb19.i43.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb20.i44.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb21.i45.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb22.i46.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb23.i47.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb24.i48.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb25.i49.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb26.i50.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb27.i51.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb28.i52.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb29.i53.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb30.i54.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb31.i55.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb32.i56.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb33.i57.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb34.i58.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb35.i59.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb36.i60.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb37.i61.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb38.i62.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb39.i63.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb40.i64.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb41.i65.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb42.i66.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb43.i67.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb44.i68.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb45.i69.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb46.i70.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb47.i71.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb48.i72.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb49.i73.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb50.i74.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb51.i75.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb52.i76.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb53.i77.i:                                    ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb54.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb55.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb56.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb57.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb58.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb59.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb60.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb61.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb62.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb63.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb64.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb65.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb66.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb67.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb68.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb69.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb70.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb71.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb72.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb73.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb74.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb75.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb76.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb77.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb78.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb79.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb80.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb81.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb82.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb83.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb84.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb85.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb86.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb87.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb88.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb89.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb90.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb91.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.bb92.i.i:                                      ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

sw.default.i78.i:                                 ; preds = %for.body9.i
  br label %dwarf_attr_name.exit.i

dwarf_attr_name.exit.i:                           ; preds = %sw.default.i78.i, %sw.bb92.i.i, %sw.bb91.i.i, %sw.bb90.i.i, %sw.bb89.i.i, %sw.bb88.i.i, %sw.bb87.i.i, %sw.bb86.i.i, %sw.bb85.i.i, %sw.bb84.i.i, %sw.bb83.i.i, %sw.bb82.i.i, %sw.bb81.i.i, %sw.bb80.i.i, %sw.bb79.i.i, %sw.bb78.i.i, %sw.bb77.i.i, %sw.bb76.i.i, %sw.bb75.i.i, %sw.bb74.i.i, %sw.bb73.i.i, %sw.bb72.i.i, %sw.bb71.i.i, %sw.bb70.i.i, %sw.bb69.i.i, %sw.bb68.i.i, %sw.bb67.i.i, %sw.bb66.i.i, %sw.bb65.i.i, %sw.bb64.i.i, %sw.bb63.i.i, %sw.bb62.i.i, %sw.bb61.i.i, %sw.bb60.i.i, %sw.bb59.i.i, %sw.bb58.i.i, %sw.bb57.i.i, %sw.bb56.i.i, %sw.bb55.i.i, %sw.bb54.i.i, %sw.bb53.i77.i, %sw.bb52.i76.i, %sw.bb51.i75.i, %sw.bb50.i74.i, %sw.bb49.i73.i, %sw.bb48.i72.i, %sw.bb47.i71.i, %sw.bb46.i70.i, %sw.bb45.i69.i, %sw.bb44.i68.i, %sw.bb43.i67.i, %sw.bb42.i66.i, %sw.bb41.i65.i, %sw.bb40.i64.i, %sw.bb39.i63.i, %sw.bb38.i62.i, %sw.bb37.i61.i, %sw.bb36.i60.i, %sw.bb35.i59.i, %sw.bb34.i58.i, %sw.bb33.i57.i, %sw.bb32.i56.i, %sw.bb31.i55.i, %sw.bb30.i54.i, %sw.bb29.i53.i, %sw.bb28.i52.i, %sw.bb27.i51.i, %sw.bb26.i50.i, %sw.bb25.i49.i, %sw.bb24.i48.i, %sw.bb23.i47.i, %sw.bb22.i46.i, %sw.bb21.i45.i, %sw.bb20.i44.i, %sw.bb19.i43.i, %sw.bb18.i42.i, %sw.bb17.i41.i, %sw.bb16.i40.i, %sw.bb15.i39.i, %sw.bb14.i38.i, %sw.bb13.i37.i, %sw.bb12.i36.i, %sw.bb11.i35.i, %sw.bb10.i34.i, %sw.bb9.i33.i, %sw.bb8.i32.i, %sw.bb7.i31.i, %sw.bb6.i30.i, %sw.bb5.i29.i, %sw.bb4.i28.i, %sw.bb3.i27.i, %sw.bb2.i26.i, %sw.bb1.i25.i, %for.body9.i
  %retval.0.i79.i = phi i8* [ getelementptr inbounds ([16 x i8]* @.str154, i64 0, i64 0), %sw.default.i78.i ], [ getelementptr inbounds ([28 x i8]* @.str153, i64 0, i64 0), %sw.bb92.i.i ], [ getelementptr inbounds ([17 x i8]* @.str152, i64 0, i64 0), %sw.bb91.i.i ], [ getelementptr inbounds ([15 x i8]* @.str151, i64 0, i64 0), %sw.bb90.i.i ], [ getelementptr inbounds ([17 x i8]* @.str150, i64 0, i64 0), %sw.bb89.i.i ], [ getelementptr inbounds ([17 x i8]* @.str149, i64 0, i64 0), %sw.bb88.i.i ], [ getelementptr inbounds ([15 x i8]* @.str148, i64 0, i64 0), %sw.bb87.i.i ], [ getelementptr inbounds ([15 x i8]* @.str147, i64 0, i64 0), %sw.bb86.i.i ], [ getelementptr inbounds ([15 x i8]* @.str146, i64 0, i64 0), %sw.bb85.i.i ], [ getelementptr inbounds ([23 x i8]* @.str145, i64 0, i64 0), %sw.bb84.i.i ], [ getelementptr inbounds ([24 x i8]* @.str144, i64 0, i64 0), %sw.bb83.i.i ], [ getelementptr inbounds ([25 x i8]* @.str143, i64 0, i64 0), %sw.bb82.i.i ], [ getelementptr inbounds ([18 x i8]* @.str142, i64 0, i64 0), %sw.bb81.i.i ], [ getelementptr inbounds ([24 x i8]* @.str141, i64 0, i64 0), %sw.bb80.i.i ], [ getelementptr inbounds ([35 x i8]* @.str140, i64 0, i64 0), %sw.bb79.i.i ], [ getelementptr inbounds ([30 x i8]* @.str139, i64 0, i64 0), %sw.bb78.i.i ], [ getelementptr inbounds ([24 x i8]* @.str138, i64 0, i64 0), %sw.bb77.i.i ], [ getelementptr inbounds ([27 x i8]* @.str137, i64 0, i64 0), %sw.bb76.i.i ], [ getelementptr inbounds ([22 x i8]* @.str136, i64 0, i64 0), %sw.bb75.i.i ], [ getelementptr inbounds ([15 x i8]* @.str135, i64 0, i64 0), %sw.bb74.i.i ], [ getelementptr inbounds ([16 x i8]* @.str134, i64 0, i64 0), %sw.bb73.i.i ], [ getelementptr inbounds ([16 x i8]* @.str133, i64 0, i64 0), %sw.bb72.i.i ], [ getelementptr inbounds ([18 x i8]* @.str132, i64 0, i64 0), %sw.bb71.i.i ], [ getelementptr inbounds ([17 x i8]* @.str131, i64 0, i64 0), %sw.bb70.i.i ], [ getelementptr inbounds ([13 x i8]* @.str130, i64 0, i64 0), %sw.bb69.i.i ], [ getelementptr inbounds ([16 x i8]* @.str129, i64 0, i64 0), %sw.bb68.i.i ], [ getelementptr inbounds ([15 x i8]* @.str128, i64 0, i64 0), %sw.bb67.i.i ], [ getelementptr inbounds ([15 x i8]* @.str127, i64 0, i64 0), %sw.bb66.i.i ], [ getelementptr inbounds ([13 x i8]* @.str126, i64 0, i64 0), %sw.bb65.i.i ], [ getelementptr inbounds ([20 x i8]* @.str125, i64 0, i64 0), %sw.bb64.i.i ], [ getelementptr inbounds ([17 x i8]* @.str124, i64 0, i64 0), %sw.bb63.i.i ], [ getelementptr inbounds ([16 x i8]* @.str123, i64 0, i64 0), %sw.bb62.i.i ], [ getelementptr inbounds ([27 x i8]* @.str122, i64 0, i64 0), %sw.bb61.i.i ], [ getelementptr inbounds ([17 x i8]* @.str121, i64 0, i64 0), %sw.bb60.i.i ], [ getelementptr inbounds ([25 x i8]* @.str120, i64 0, i64 0), %sw.bb59.i.i ], [ getelementptr inbounds ([19 x i8]* @.str119, i64 0, i64 0), %sw.bb58.i.i ], [ getelementptr inbounds ([11 x i8]* @.str118, i64 0, i64 0), %sw.bb57.i.i ], [ getelementptr inbounds ([18 x i8]* @.str117, i64 0, i64 0), %sw.bb56.i.i ], [ getelementptr inbounds ([20 x i8]* @.str116, i64 0, i64 0), %sw.bb55.i.i ], [ getelementptr inbounds ([14 x i8]* @.str115, i64 0, i64 0), %sw.bb54.i.i ], [ getelementptr inbounds ([15 x i8]* @.str114, i64 0, i64 0), %sw.bb53.i77.i ], [ getelementptr inbounds ([21 x i8]* @.str113, i64 0, i64 0), %sw.bb52.i76.i ], [ getelementptr inbounds ([17 x i8]* @.str112, i64 0, i64 0), %sw.bb51.i75.i ], [ getelementptr inbounds ([22 x i8]* @.str111, i64 0, i64 0), %sw.bb50.i74.i ], [ getelementptr inbounds ([13 x i8]* @.str110, i64 0, i64 0), %sw.bb49.i73.i ], [ getelementptr inbounds ([17 x i8]* @.str109, i64 0, i64 0), %sw.bb48.i72.i ], [ getelementptr inbounds ([15 x i8]* @.str108, i64 0, i64 0), %sw.bb47.i71.i ], [ getelementptr inbounds ([15 x i8]* @.str107, i64 0, i64 0), %sw.bb46.i70.i ], [ getelementptr inbounds ([17 x i8]* @.str106, i64 0, i64 0), %sw.bb45.i69.i ], [ getelementptr inbounds ([18 x i8]* @.str105, i64 0, i64 0), %sw.bb44.i68.i ], [ getelementptr inbounds ([16 x i8]* @.str104, i64 0, i64 0), %sw.bb43.i67.i ], [ getelementptr inbounds ([16 x i8]* @.str103, i64 0, i64 0), %sw.bb42.i66.i ], [ getelementptr inbounds ([18 x i8]* @.str102, i64 0, i64 0), %sw.bb41.i65.i ], [ getelementptr inbounds ([27 x i8]* @.str101, i64 0, i64 0), %sw.bb40.i64.i ], [ getelementptr inbounds ([12 x i8]* @.str100, i64 0, i64 0), %sw.bb39.i63.i ], [ getelementptr inbounds ([25 x i8]* @.str99, i64 0, i64 0), %sw.bb38.i62.i ], [ getelementptr inbounds ([17 x i8]* @.str98, i64 0, i64 0), %sw.bb37.i61.i ], [ getelementptr inbounds ([17 x i8]* @.str97, i64 0, i64 0), %sw.bb36.i60.i ], [ getelementptr inbounds ([20 x i8]* @.str96, i64 0, i64 0), %sw.bb35.i59.i ], [ getelementptr inbounds ([20 x i8]* @.str95, i64 0, i64 0), %sw.bb34.i58.i ], [ getelementptr inbounds ([22 x i8]* @.str94, i64 0, i64 0), %sw.bb33.i57.i ], [ getelementptr inbounds ([18 x i8]* @.str93, i64 0, i64 0), %sw.bb32.i56.i ], [ getelementptr inbounds ([18 x i8]* @.str92, i64 0, i64 0), %sw.bb31.i55.i ], [ getelementptr inbounds ([18 x i8]* @.str91, i64 0, i64 0), %sw.bb30.i54.i ], [ getelementptr inbounds ([18 x i8]* @.str90, i64 0, i64 0), %sw.bb29.i53.i ], [ getelementptr inbounds ([17 x i8]* @.str89, i64 0, i64 0), %sw.bb28.i52.i ], [ getelementptr inbounds ([15 x i8]* @.str88, i64 0, i64 0), %sw.bb27.i51.i ], [ getelementptr inbounds ([18 x i8]* @.str87, i64 0, i64 0), %sw.bb26.i50.i ], [ getelementptr inbounds ([18 x i8]* @.str86, i64 0, i64 0), %sw.bb25.i49.i ], [ getelementptr inbounds ([13 x i8]* @.str85, i64 0, i64 0), %sw.bb24.i48.i ], [ getelementptr inbounds ([20 x i8]* @.str84, i64 0, i64 0), %sw.bb23.i47.i ], [ getelementptr inbounds ([22 x i8]* @.str83, i64 0, i64 0), %sw.bb22.i46.i ], [ getelementptr inbounds ([18 x i8]* @.str82, i64 0, i64 0), %sw.bb21.i45.i ], [ getelementptr inbounds ([15 x i8]* @.str81, i64 0, i64 0), %sw.bb20.i44.i ], [ getelementptr inbounds ([23 x i8]* @.str80, i64 0, i64 0), %sw.bb19.i43.i ], [ getelementptr inbounds ([20 x i8]* @.str79, i64 0, i64 0), %sw.bb18.i42.i ], [ getelementptr inbounds ([13 x i8]* @.str78, i64 0, i64 0), %sw.bb17.i41.i ], [ getelementptr inbounds ([17 x i8]* @.str77, i64 0, i64 0), %sw.bb16.i40.i ], [ getelementptr inbounds ([18 x i8]* @.str76, i64 0, i64 0), %sw.bb15.i39.i ], [ getelementptr inbounds ([12 x i8]* @.str75, i64 0, i64 0), %sw.bb14.i38.i ], [ getelementptr inbounds ([13 x i8]* @.str74, i64 0, i64 0), %sw.bb13.i37.i ], [ getelementptr inbounds ([15 x i8]* @.str73, i64 0, i64 0), %sw.bb12.i36.i ], [ getelementptr inbounds ([14 x i8]* @.str72, i64 0, i64 0), %sw.bb11.i35.i ], [ getelementptr inbounds ([13 x i8]* @.str71, i64 0, i64 0), %sw.bb10.i34.i ], [ getelementptr inbounds ([16 x i8]* @.str70, i64 0, i64 0), %sw.bb9.i33.i ], [ getelementptr inbounds ([19 x i8]* @.str69, i64 0, i64 0), %sw.bb8.i32.i ], [ getelementptr inbounds ([15 x i8]* @.str68, i64 0, i64 0), %sw.bb7.i31.i ], [ getelementptr inbounds ([17 x i8]* @.str67, i64 0, i64 0), %sw.bb6.i30.i ], [ getelementptr inbounds ([16 x i8]* @.str66, i64 0, i64 0), %sw.bb5.i29.i ], [ getelementptr inbounds ([18 x i8]* @.str65, i64 0, i64 0), %sw.bb4.i28.i ], [ getelementptr inbounds ([15 x i8]* @.str64, i64 0, i64 0), %sw.bb3.i27.i ], [ getelementptr inbounds ([11 x i8]* @.str63, i64 0, i64 0), %sw.bb2.i26.i ], [ getelementptr inbounds ([15 x i8]* @.str62, i64 0, i64 0), %sw.bb1.i25.i ], [ getelementptr inbounds ([14 x i8]* @.str61, i64 0, i64 0), %for.body9.i ]
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv10.i, i8* getelementptr inbounds ([5 x i8]* @.str37, i64 0, i64 0), i8* %retval.0.i79.i) #5
  %call.i.i = call fastcc i32 @value_format(%struct.dw_attr_struct* %a_attr.082.i) #5
  %conv.i.i = zext i32 %call.i.i to i64
  switch i32 %call.i.i, label %sw.default.i.i.i [
    i32 1, label %output_value_format.exit.i
    i32 3, label %sw.bb1.i.i.i
    i32 4, label %sw.bb2.i.i.i
    i32 5, label %sw.bb3.i.i.i
    i32 6, label %sw.bb4.i.i.i
    i32 7, label %sw.bb5.i.i.i
    i32 8, label %sw.bb6.i.i.i
    i32 9, label %sw.bb7.i.i.i
    i32 10, label %sw.bb8.i.i.i
    i32 11, label %sw.bb9.i.i.i
    i32 12, label %sw.bb10.i.i.i
    i32 13, label %sw.bb11.i.i.i
    i32 14, label %sw.bb12.i.i.i
    i32 15, label %sw.bb13.i.i.i
    i32 16, label %sw.bb14.i.i.i
    i32 17, label %sw.bb15.i.i.i
    i32 18, label %sw.bb16.i.i.i
    i32 19, label %sw.bb17.i.i.i
    i32 20, label %sw.bb18.i.i.i
    i32 21, label %sw.bb19.i.i.i
    i32 22, label %sw.bb20.i.i.i
  ]

sw.bb1.i.i.i:                                     ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb2.i.i.i:                                     ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb3.i.i.i:                                     ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb4.i.i.i:                                     ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb5.i.i.i:                                     ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb6.i.i.i:                                     ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb7.i.i.i:                                     ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb8.i.i.i:                                     ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb9.i.i.i:                                     ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb10.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb11.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb12.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb13.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb14.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb15.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb16.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb17.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb18.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb19.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.bb20.i.i.i:                                    ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

sw.default.i.i.i:                                 ; preds = %dwarf_attr_name.exit.i
  br label %output_value_format.exit.i

output_value_format.exit.i:                       ; preds = %sw.default.i.i.i, %sw.bb20.i.i.i, %sw.bb19.i.i.i, %sw.bb18.i.i.i, %sw.bb17.i.i.i, %sw.bb16.i.i.i, %sw.bb15.i.i.i, %sw.bb14.i.i.i, %sw.bb13.i.i.i, %sw.bb12.i.i.i, %sw.bb11.i.i.i, %sw.bb10.i.i.i, %sw.bb9.i.i.i, %sw.bb8.i.i.i, %sw.bb7.i.i.i, %sw.bb6.i.i.i, %sw.bb5.i.i.i, %sw.bb4.i.i.i, %sw.bb3.i.i.i, %sw.bb2.i.i.i, %sw.bb1.i.i.i, %dwarf_attr_name.exit.i
  %retval.0.i.i.i = phi i8* [ getelementptr inbounds ([18 x i8]* @.str59, i64 0, i64 0), %sw.default.i.i.i ], [ getelementptr inbounds ([17 x i8]* @.str58, i64 0, i64 0), %sw.bb20.i.i.i ], [ getelementptr inbounds ([18 x i8]* @.str57, i64 0, i64 0), %sw.bb19.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str56, i64 0, i64 0), %sw.bb18.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str55, i64 0, i64 0), %sw.bb17.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str54, i64 0, i64 0), %sw.bb16.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str53, i64 0, i64 0), %sw.bb15.i.i.i ], [ getelementptr inbounds ([17 x i8]* @.str52, i64 0, i64 0), %sw.bb14.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str51, i64 0, i64 0), %sw.bb13.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str50, i64 0, i64 0), %sw.bb12.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str49, i64 0, i64 0), %sw.bb11.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str48, i64 0, i64 0), %sw.bb10.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str47, i64 0, i64 0), %sw.bb9.i.i.i ], [ getelementptr inbounds ([15 x i8]* @.str46, i64 0, i64 0), %sw.bb8.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str45, i64 0, i64 0), %sw.bb7.i.i.i ], [ getelementptr inbounds ([15 x i8]* @.str44, i64 0, i64 0), %sw.bb6.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str43, i64 0, i64 0), %sw.bb5.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str42, i64 0, i64 0), %sw.bb4.i.i.i ], [ getelementptr inbounds ([14 x i8]* @.str41, i64 0, i64 0), %sw.bb3.i.i.i ], [ getelementptr inbounds ([15 x i8]* @.str40, i64 0, i64 0), %sw.bb2.i.i.i ], [ getelementptr inbounds ([15 x i8]* @.str39, i64 0, i64 0), %sw.bb1.i.i.i ], [ getelementptr inbounds ([13 x i8]* @.str38, i64 0, i64 0), %dwarf_attr_name.exit.i ]
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv.i.i, i8* getelementptr inbounds ([5 x i8]* @.str37, i64 0, i64 0), i8* %retval.0.i.i.i) #5
  %dw_attr_next.i292 = getelementptr inbounds %struct.dw_attr_struct* %a_attr.082.i, i64 0, i32 1
  %a_attr.0.i = load %struct.dw_attr_struct** %dw_attr_next.i292, align 8
  %cmp7.i = icmp eq %struct.dw_attr_struct* %a_attr.0.i, null
  br i1 %cmp7.i, label %for.end.i296, label %for.body9.i

for.end.i296:                                     ; preds = %output_value_format.exit.i, %if.end.i290
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 0, i8* null) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 0, i8* null) #5
  %inc.i293 = add i64 %abbrev_id.085.i, 1
  %101 = load i32* @abbrev_die_table_in_use, align 4, !tbaa !4
  %conv.i294 = zext i32 %101 to i64
  %cmp.i295 = icmp ult i64 %inc.i293, %conv.i294
  br i1 %cmp.i295, label %for.body.i285, label %output_abbrev_section.exit

output_abbrev_section.exit:                       ; preds = %for.end.i296, %for.end115
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 0, i8* null) #5
  %102 = load i32* @pubname_table_in_use, align 4, !tbaa !4
  %tobool116 = icmp eq i32 %102, 0
  br i1 %tobool116, label %if.end118, label %if.then117

if.then117:                                       ; preds = %output_abbrev_section.exit
  call void @named_section_flags(i8* getelementptr inbounds ([16 x i8]* @.str12, i64 0, i64 0), i32 1024) #5
  %103 = load i32* @pubname_table_in_use, align 4, !tbaa !4
  %cmp8.i.i = icmp eq i32 %103, 0
  br i1 %cmp8.i.i, label %size_of_pubnames.exit.i, label %for.body.lr.ph.i.i

for.body.lr.ph.i.i:                               ; preds = %if.then117
  %104 = load %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  br label %for.body.i.i298

for.body.i.i298:                                  ; preds = %for.body.i.i298, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.body.i.i298 ]
  %size.010.i.i = phi i64 [ 10, %for.body.lr.ph.i.i ], [ %add2.i.i, %for.body.i.i298 ]
  %name.i.i = getelementptr inbounds %struct.pubname_struct* %104, i64 %indvars.iv.i.i, i32 1
  %105 = load i8** %name.i.i, align 8, !tbaa !74
  %call.i.i297 = call i64 @strlen(i8* %105) #5
  %add1.i.i = add i64 %size.010.i.i, 5
  %add2.i.i = add i64 %add1.i.i, %call.i.i297
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %103
  br i1 %exitcond, label %for.cond.for.end_crit_edge.i.i, label %for.body.i.i298

for.cond.for.end_crit_edge.i.i:                   ; preds = %for.body.i.i298
  %phitmp.i.i = add i64 %add2.i.i, 4
  br label %size_of_pubnames.exit.i

size_of_pubnames.exit.i:                          ; preds = %for.cond.for.end_crit_edge.i.i, %if.then117
  %size.0.lcssa.i.i = phi i64 [ %phitmp.i.i, %for.cond.for.end_crit_edge.i.i ], [ 14, %if.then117 ]
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %size.0.lcssa.i.i, i8* getelementptr inbounds ([28 x i8]* @.str29, i64 0, i64 0)) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 2, i64 2, i8* getelementptr inbounds ([14 x i8]* @.str22, i64 0, i64 0)) #5
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_offset(i32 4, i8* getelementptr inbounds ([30 x i8]* @debug_info_section_label, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8]* @.str23, i64 0, i64 0)) #5
  %106 = load i64* @next_die_offset, align 8, !tbaa !8
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %106, i8* getelementptr inbounds ([24 x i8]* @.str30, i64 0, i64 0)) #5
  %107 = load i32* @pubname_table_in_use, align 4, !tbaa !4
  %cmp7.i299 = icmp eq i32 %107, 0
  br i1 %cmp7.i299, label %output_pubnames.exit, label %for.body.i302

for.body.i302:                                    ; preds = %size_of_pubnames.exit.i, %if.end.i306
  %i.08.i = phi i32 [ %inc.i304, %if.end.i306 ], [ 0, %size_of_pubnames.exit.i ]
  %idxprom.i300 = zext i32 %i.08.i to i64
  %108 = load %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  %die.i = getelementptr inbounds %struct.pubname_struct* %108, i64 %idxprom.i300, i32 0
  %109 = load %struct.die_struct** %die.i, align 8, !tbaa !76
  %die_mark.i = getelementptr inbounds %struct.die_struct* %109, i64 0, i32 8
  %110 = load i32* %die_mark.i, align 4, !tbaa !77
  %cmp1.i301 = icmp eq i32 %110, 0
  br i1 %cmp1.i301, label %if.then.i303, label %if.end.i306

if.then.i303:                                     ; preds = %for.body.i302
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6543, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.output_pubnames, i64 0, i64 0)) #7
  unreachable

if.end.i306:                                      ; preds = %for.body.i302
  %die_offset.i = getelementptr inbounds %struct.die_struct* %109, i64 0, i32 6
  %111 = load i64* %die_offset.i, align 8, !tbaa !78
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %111, i8* getelementptr inbounds ([11 x i8]* @.str31, i64 0, i64 0)) #5
  %name.i = getelementptr inbounds %struct.pubname_struct* %108, i64 %idxprom.i300, i32 1
  %112 = load i8** %name.i, align 8, !tbaa !74
  call void (i8*, i64, i8*, ...)* @dw2_asm_output_nstring(i8* %112, i64 -1, i8* getelementptr inbounds ([14 x i8]* @.str32, i64 0, i64 0)) #5
  %inc.i304 = add i32 %i.08.i, 1
  %113 = load i32* @pubname_table_in_use, align 4, !tbaa !4
  %cmp.i305 = icmp ult i32 %inc.i304, %113
  br i1 %cmp.i305, label %for.body.i302, label %output_pubnames.exit

output_pubnames.exit:                             ; preds = %if.end.i306, %size_of_pubnames.exit.i
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 0, i8* null) #5
  br label %if.end118

if.end118:                                        ; preds = %output_abbrev_section.exit, %output_pubnames.exit
  %114 = load i32* @fde_table_in_use, align 4, !tbaa !4
  %tobool119 = icmp eq i32 %114, 0
  br i1 %tobool119, label %if.end121, label %if.then120

if.then120:                                       ; preds = %if.end118
  call void @named_section_flags(i8* getelementptr inbounds ([15 x i8]* @.str13, i64 0, i64 0), i32 1024) #5
  %115 = load i32* @target_flags, align 4, !tbaa !4
  %and.i.i = lshr i32 %115, 20
  %116 = and i32 %and.i.i, 32
  %117 = add i32 %116, 32
  %div.i.i = sdiv i32 %117, 8
  %mul.i.i = shl nsw i32 %div.i.i, 1
  %sub.i.i = add nsw i32 %mul.i.i, 11
  %div6.i.i = srem i32 %sub.i.i, %mul.i.i
  %mul12.i.i = sub i32 -4, %div6.i.i
  %sub13.i.i = add i32 %mul12.i.i, %sub.i.i
  %conv.i.i308 = sext i32 %sub13.i.i to i64
  %conv19.i.i = sext i32 %mul.i.i to i64
  %118 = load i32* @arange_table_in_use, align 4, !tbaa !4
  %mul26.i.i = mul i32 %118, %mul.i.i
  %conv27.i.i = zext i32 %mul26.i.i to i64
  %factor.i.i = shl nsw i64 %conv19.i.i, 1
  %add28.i.i = add i64 %conv.i.i308, %factor.i.i
  %add35.i.i = add i64 %add28.i.i, %conv27.i.i
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %add35.i.i, i8* getelementptr inbounds ([30 x i8]* @.str21, i64 0, i64 0)) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 2, i64 2, i8* getelementptr inbounds ([14 x i8]* @.str22, i64 0, i64 0)) #5
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_offset(i32 4, i8* getelementptr inbounds ([30 x i8]* @debug_info_section_label, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8]* @.str23, i64 0, i64 0)) #5
  %119 = load i32* @target_flags, align 4, !tbaa !4
  %and.i309 = lshr i32 %119, 20
  %120 = and i32 %and.i309, 32
  %121 = add i32 %120, 32
  %div.i310 = sdiv i32 %121, 8
  %conv.i311 = sext i32 %div.i310 to i64
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv.i311, i8* getelementptr inbounds ([16 x i8]* @.str24, i64 0, i64 0)) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 0, i8* getelementptr inbounds ([27 x i8]* @.str25, i64 0, i64 0)) #5
  %122 = load i32* @target_flags, align 4, !tbaa !4
  %and1.i = lshr i32 %122, 20
  %123 = and i32 %and1.i, 32
  %124 = add i32 %123, 32
  %div4.i = sdiv i32 %124, 8
  %mul.i312 = shl nsw i32 %div4.i, 1
  %sub.i313 = add nsw i32 %mul.i312, 11
  %div10.i = srem i32 %sub.i313, %mul.i312
  %mul16.i = sub i32 %sub.i313, %div10.i
  %tobool18.i = icmp eq i32 %mul16.i, 12
  br i1 %tobool18.i, label %if.end.i317, label %if.then.i314

if.then.i314:                                     ; preds = %if.then120
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 2, i64 0, i8* getelementptr inbounds ([24 x i8]* @.str26, i64 0, i64 0), i32 %mul.i312) #5
  %125 = load i32* @target_flags, align 4, !tbaa !4
  %and24249.i = lshr i32 %125, 20
  %126 = and i32 %and24249.i, 32
  %127 = add i32 %126, 32
  %div27250.i = sdiv i32 %127, 8
  %mul28251.i = shl nsw i32 %div27250.i, 1
  %sub30252.i = add nsw i32 %mul28251.i, 11
  %div36253.i = srem i32 %sub30252.i, %mul28251.i
  %mul42255.i = sub i32 -12, %div36253.i
  %sub43256.i = add i32 %mul42255.i, %sub30252.i
  %cmp257.i = icmp ugt i32 %sub43256.i, 2
  br i1 %cmp257.i, label %for.body.i316, label %if.end.i317

for.body.i316:                                    ; preds = %if.then.i314, %for.body.i316
  %i.0258.i = phi i32 [ %add45.i, %for.body.i316 ], [ 2, %if.then.i314 ]
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 2, i64 0, i8* null) #5
  %add45.i = add i32 %i.0258.i, 2
  %128 = load i32* @target_flags, align 4, !tbaa !4
  %and24.i = lshr i32 %128, 20
  %129 = and i32 %and24.i, 32
  %130 = add i32 %129, 32
  %div27.i = sdiv i32 %130, 8
  %mul28.i = shl nsw i32 %div27.i, 1
  %sub30.i = add nsw i32 %mul28.i, 11
  %div36.i = srem i32 %sub30.i, %mul28.i
  %mul42.i = sub i32 -12, %div36.i
  %sub43.i = add i32 %mul42.i, %sub30.i
  %cmp.i315 = icmp ult i32 %add45.i, %sub43.i
  br i1 %cmp.i315, label %for.body.i316, label %if.end.i317

if.end.i317:                                      ; preds = %for.body.i316, %if.then.i314, %if.then120
  %131 = phi i32 [ %122, %if.then120 ], [ %125, %if.then.i314 ], [ %128, %for.body.i316 ]
  %and46.i = lshr i32 %131, 20
  %132 = and i32 %and46.i, 32
  %133 = add i32 %132, 32
  %div49.i = sdiv i32 %133, 8
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_addr(i32 %div49.i, i8* getelementptr inbounds ([30 x i8]* @text_section_label, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str27, i64 0, i64 0)) #5
  %134 = load i32* @target_flags, align 4, !tbaa !4
  %and50.i = lshr i32 %134, 20
  %135 = and i32 %and50.i, 32
  %136 = add i32 %135, 32
  %div53.i = sdiv i32 %136, 8
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 %div53.i, i8* getelementptr inbounds ([30 x i8]* @text_end_label, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @text_section_label, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str28, i64 0, i64 0)) #5
  %137 = load i32* @arange_table_in_use, align 4, !tbaa !4
  %cmp55247.i = icmp eq i32 %137, 0
  br i1 %cmp55247.i, label %output_aranges.exit, label %for.body57.i

for.body57.i:                                     ; preds = %if.end.i317, %for.inc99.i
  %i.1248.i = phi i32 [ %inc.i359, %for.inc99.i ], [ 0, %if.end.i317 ]
  %idxprom.i318 = zext i32 %i.1248.i to i64
  %138 = load %struct.die_struct*** @arange_table, align 8, !tbaa !6
  %arrayidx.i319 = getelementptr inbounds %struct.die_struct** %138, i64 %idxprom.i318
  %139 = load %struct.die_struct** %arrayidx.i319, align 8, !tbaa !6
  %die_mark.i320 = getelementptr inbounds %struct.die_struct* %139, i64 0, i32 8
  %140 = load i32* %die_mark.i320, align 4, !tbaa !77
  %cmp58.i = icmp eq i32 %140, 0
  br i1 %cmp58.i, label %if.then60.i, label %if.end61.i

if.then60.i:                                      ; preds = %for.body57.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6613, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.output_aranges, i64 0, i64 0)) #7
  unreachable

if.end61.i:                                       ; preds = %for.body57.i
  %die_tag.i321 = getelementptr inbounds %struct.die_struct* %139, i64 0, i32 0
  %141 = load i32* %die_tag.i321, align 4, !tbaa !69
  %cmp62.i = icmp eq i32 %141, 46
  br i1 %cmp62.i, label %if.then64.i, label %tailrecurse.i.i325

if.then64.i:                                      ; preds = %if.end61.i
  %142 = load i32* @target_flags, align 4, !tbaa !4
  %and65.i = lshr i32 %142, 20
  %143 = and i32 %and65.i, 32
  %144 = add i32 %143, 32
  %div68.i = sdiv i32 %144, 8
  br label %tailrecurse.i.i124.i

tailrecurse.i.i124.i:                             ; preds = %for.end.i.i147.i, %if.then64.i
  %die.tr.i.i122.i = phi %struct.die_struct* [ %139, %if.then64.i ], [ %spec.1.i.i141.i, %for.end.i.i147.i ]
  %cmp.i.i123.i = icmp eq %struct.die_struct* %die.tr.i.i122.i, null
  br i1 %cmp.i.i123.i, label %get_AT_low_pc.exit.i, label %if.then.i.i128.i

if.then.i.i128.i:                                 ; preds = %tailrecurse.i.i124.i
  %die_attr.i.i125.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i122.i, i64 0, i32 2
  %a.027.i.i126.i = load %struct.dw_attr_struct** %die_attr.i.i125.i, align 8
  %cmp128.i.i127.i = icmp eq %struct.dw_attr_struct* %a.027.i.i126.i, null
  br i1 %cmp128.i.i127.i, label %get_AT_low_pc.exit.i, label %for.body.i.i132.i

for.body.i.i132.i:                                ; preds = %if.then.i.i128.i, %for.inc.i.i145.i
  %a.030.i.i129.i = phi %struct.dw_attr_struct* [ %a.0.i.i143.i, %for.inc.i.i145.i ], [ %a.027.i.i126.i, %if.then.i.i128.i ]
  %spec.029.i.i130.i = phi %struct.die_struct* [ %spec.1.i.i141.i, %for.inc.i.i145.i ], [ null, %if.then.i.i128.i ]
  %dw_attr.i.i131.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i129.i, i64 0, i32 0
  %145 = load i32* %dw_attr.i.i131.i, align 4, !tbaa !57
  switch i32 %145, label %for.inc.i.i145.i [
    i32 17, label %land.lhs.true.i.i148.i
    i32 71, label %land.lhs.true.i.i.i136.i
    i32 49, label %land.lhs.true.i.i.i136.i
  ]

land.lhs.true.i.i.i136.i:                         ; preds = %for.body.i.i132.i, %for.body.i.i132.i
  %a.idx.i.i.i133.i = getelementptr %struct.dw_attr_struct* %a.030.i.i129.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i134.i = load i32* %a.idx.i.i.i133.i, align 4, !tbaa !59
  %cmp.i.i.i135.i = icmp eq i32 %a.idx.val.i.i.i134.i, 10
  br i1 %cmp.i.i.i135.i, label %AT_ref.exit.i.i140.i, label %if.end.i.i.i137.i

if.end.i.i.i137.i:                                ; preds = %land.lhs.true.i.i.i136.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i140.i:                             ; preds = %land.lhs.true.i.i.i136.i
  %v.i.i.i138.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i129.i, i64 0, i32 2, i32 1
  %die.i.i.i139.i = bitcast %union.anon.3* %v.i.i.i138.i to %struct.die_struct**
  %146 = load %struct.die_struct** %die.i.i.i139.i, align 8, !tbaa !60
  br label %for.inc.i.i145.i

for.inc.i.i145.i:                                 ; preds = %AT_ref.exit.i.i140.i, %for.body.i.i132.i
  %spec.1.i.i141.i = phi %struct.die_struct* [ %146, %AT_ref.exit.i.i140.i ], [ %spec.029.i.i130.i, %for.body.i.i132.i ]
  %dw_attr_next.i.i142.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i129.i, i64 0, i32 1
  %a.0.i.i143.i = load %struct.dw_attr_struct** %dw_attr_next.i.i142.i, align 8
  %cmp1.i.i144.i = icmp eq %struct.dw_attr_struct* %a.0.i.i143.i, null
  br i1 %cmp1.i.i144.i, label %for.end.i.i147.i, label %for.body.i.i132.i

for.end.i.i147.i:                                 ; preds = %for.inc.i.i145.i
  %tobool.i.i146.i = icmp eq %struct.die_struct* %spec.1.i.i141.i, null
  br i1 %tobool.i.i146.i, label %get_AT_low_pc.exit.i, label %tailrecurse.i.i124.i

land.lhs.true.i.i148.i:                           ; preds = %for.body.i.i132.i
  %a.idx6.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i129.i, i64 0, i32 2, i32 0
  %a.idx6.val.i.i.i = load i32* %a.idx6.i.i.i, align 4, !tbaa !59
  %147 = and i32 %a.idx6.val.i.i.i, -2
  %switch.i.i.i = icmp eq i32 %147, 12
  br i1 %switch.i.i.i, label %AT_lbl.exit.i.i, label %if.end.i.i149.i

if.end.i.i149.i:                                  ; preds = %land.lhs.true.i.i148.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4785, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_lbl, i64 0, i64 0)) #7
  unreachable

AT_lbl.exit.i.i:                                  ; preds = %land.lhs.true.i.i148.i
  %v.i.i.i322 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i129.i, i64 0, i32 2, i32 1
  %val_lbl_id.i.i.i = bitcast %union.anon.3* %v.i.i.i322 to i8**
  %148 = load i8** %val_lbl_id.i.i.i, align 8, !tbaa !6
  br label %get_AT_low_pc.exit.i

get_AT_low_pc.exit.i:                             ; preds = %for.end.i.i147.i, %if.then.i.i128.i, %tailrecurse.i.i124.i, %AT_lbl.exit.i.i
  %cond.i150.i = phi i8* [ %148, %AT_lbl.exit.i.i ], [ null, %tailrecurse.i.i124.i ], [ null, %if.then.i.i128.i ], [ null, %for.end.i.i147.i ]
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_addr(i32 %div68.i, i8* %cond.i150.i, i8* getelementptr inbounds ([8 x i8]* @.str27, i64 0, i64 0)) #5
  %149 = load i32* @target_flags, align 4, !tbaa !4
  %and70.i = lshr i32 %149, 20
  %150 = and i32 %and70.i, 32
  %151 = add i32 %150, 32
  %div73.i = sdiv i32 %151, 8
  br label %tailrecurse.i.i153.i

tailrecurse.i.i153.i:                             ; preds = %for.end.i.i176.i, %get_AT_low_pc.exit.i
  %die.tr.i.i151.i = phi %struct.die_struct* [ %139, %get_AT_low_pc.exit.i ], [ %spec.1.i.i170.i, %for.end.i.i176.i ]
  %cmp.i.i152.i = icmp eq %struct.die_struct* %die.tr.i.i151.i, null
  br i1 %cmp.i.i152.i, label %get_AT_hi_pc.exit.i, label %if.then.i.i157.i

if.then.i.i157.i:                                 ; preds = %tailrecurse.i.i153.i
  %die_attr.i.i154.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i151.i, i64 0, i32 2
  %a.027.i.i155.i = load %struct.dw_attr_struct** %die_attr.i.i154.i, align 8
  %cmp128.i.i156.i = icmp eq %struct.dw_attr_struct* %a.027.i.i155.i, null
  br i1 %cmp128.i.i156.i, label %get_AT_hi_pc.exit.i, label %for.body.i.i161.i

for.body.i.i161.i:                                ; preds = %if.then.i.i157.i, %for.inc.i.i174.i
  %a.030.i.i158.i = phi %struct.dw_attr_struct* [ %a.0.i.i172.i, %for.inc.i.i174.i ], [ %a.027.i.i155.i, %if.then.i.i157.i ]
  %spec.029.i.i159.i = phi %struct.die_struct* [ %spec.1.i.i170.i, %for.inc.i.i174.i ], [ null, %if.then.i.i157.i ]
  %dw_attr.i.i160.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i158.i, i64 0, i32 0
  %152 = load i32* %dw_attr.i.i160.i, align 4, !tbaa !57
  switch i32 %152, label %for.inc.i.i174.i [
    i32 18, label %land.lhs.true.i.i180.i
    i32 71, label %land.lhs.true.i.i.i165.i
    i32 49, label %land.lhs.true.i.i.i165.i
  ]

land.lhs.true.i.i.i165.i:                         ; preds = %for.body.i.i161.i, %for.body.i.i161.i
  %a.idx.i.i.i162.i = getelementptr %struct.dw_attr_struct* %a.030.i.i158.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i163.i = load i32* %a.idx.i.i.i162.i, align 4, !tbaa !59
  %cmp.i.i.i164.i = icmp eq i32 %a.idx.val.i.i.i163.i, 10
  br i1 %cmp.i.i.i164.i, label %AT_ref.exit.i.i169.i, label %if.end.i.i.i166.i

if.end.i.i.i166.i:                                ; preds = %land.lhs.true.i.i.i165.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i169.i:                             ; preds = %land.lhs.true.i.i.i165.i
  %v.i.i.i167.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i158.i, i64 0, i32 2, i32 1
  %die.i.i.i168.i = bitcast %union.anon.3* %v.i.i.i167.i to %struct.die_struct**
  %153 = load %struct.die_struct** %die.i.i.i168.i, align 8, !tbaa !60
  br label %for.inc.i.i174.i

for.inc.i.i174.i:                                 ; preds = %AT_ref.exit.i.i169.i, %for.body.i.i161.i
  %spec.1.i.i170.i = phi %struct.die_struct* [ %153, %AT_ref.exit.i.i169.i ], [ %spec.029.i.i159.i, %for.body.i.i161.i ]
  %dw_attr_next.i.i171.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i158.i, i64 0, i32 1
  %a.0.i.i172.i = load %struct.dw_attr_struct** %dw_attr_next.i.i171.i, align 8
  %cmp1.i.i173.i = icmp eq %struct.dw_attr_struct* %a.0.i.i172.i, null
  br i1 %cmp1.i.i173.i, label %for.end.i.i176.i, label %for.body.i.i161.i

for.end.i.i176.i:                                 ; preds = %for.inc.i.i174.i
  %tobool.i.i175.i = icmp eq %struct.die_struct* %spec.1.i.i170.i, null
  br i1 %tobool.i.i175.i, label %get_AT_hi_pc.exit.i, label %tailrecurse.i.i153.i

land.lhs.true.i.i180.i:                           ; preds = %for.body.i.i161.i
  %a.idx6.i.i177.i = getelementptr %struct.dw_attr_struct* %a.030.i.i158.i, i64 0, i32 2, i32 0
  %a.idx6.val.i.i178.i = load i32* %a.idx6.i.i177.i, align 4, !tbaa !59
  %154 = and i32 %a.idx6.val.i.i178.i, -2
  %switch.i.i179.i = icmp eq i32 %154, 12
  br i1 %switch.i.i179.i, label %AT_lbl.exit.i184.i, label %if.end.i.i181.i

if.end.i.i181.i:                                  ; preds = %land.lhs.true.i.i180.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4785, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_lbl, i64 0, i64 0)) #7
  unreachable

AT_lbl.exit.i184.i:                               ; preds = %land.lhs.true.i.i180.i
  %v.i.i182.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i158.i, i64 0, i32 2, i32 1
  %val_lbl_id.i.i183.i = bitcast %union.anon.3* %v.i.i182.i to i8**
  %155 = load i8** %val_lbl_id.i.i183.i, align 8, !tbaa !6
  br label %get_AT_hi_pc.exit.i

get_AT_hi_pc.exit.i:                              ; preds = %for.end.i.i176.i, %if.then.i.i157.i, %tailrecurse.i.i153.i, %AT_lbl.exit.i184.i
  %cond.i185.i = phi i8* [ %155, %AT_lbl.exit.i184.i ], [ null, %tailrecurse.i.i153.i ], [ null, %if.then.i.i157.i ], [ null, %for.end.i.i176.i ]
  br label %tailrecurse.i.i188.i

tailrecurse.i.i188.i:                             ; preds = %for.end.i.i211.i, %get_AT_hi_pc.exit.i
  %die.tr.i.i186.i = phi %struct.die_struct* [ %139, %get_AT_hi_pc.exit.i ], [ %spec.1.i.i205.i, %for.end.i.i211.i ]
  %cmp.i.i187.i = icmp eq %struct.die_struct* %die.tr.i.i186.i, null
  br i1 %cmp.i.i187.i, label %get_AT_low_pc.exit221.i, label %if.then.i.i192.i

if.then.i.i192.i:                                 ; preds = %tailrecurse.i.i188.i
  %die_attr.i.i189.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i186.i, i64 0, i32 2
  %a.027.i.i190.i = load %struct.dw_attr_struct** %die_attr.i.i189.i, align 8
  %cmp128.i.i191.i = icmp eq %struct.dw_attr_struct* %a.027.i.i190.i, null
  br i1 %cmp128.i.i191.i, label %get_AT_low_pc.exit221.i, label %for.body.i.i196.i

for.body.i.i196.i:                                ; preds = %if.then.i.i192.i, %for.inc.i.i209.i
  %a.030.i.i193.i = phi %struct.dw_attr_struct* [ %a.0.i.i207.i, %for.inc.i.i209.i ], [ %a.027.i.i190.i, %if.then.i.i192.i ]
  %spec.029.i.i194.i = phi %struct.die_struct* [ %spec.1.i.i205.i, %for.inc.i.i209.i ], [ null, %if.then.i.i192.i ]
  %dw_attr.i.i195.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i193.i, i64 0, i32 0
  %156 = load i32* %dw_attr.i.i195.i, align 4, !tbaa !57
  switch i32 %156, label %for.inc.i.i209.i [
    i32 17, label %land.lhs.true.i.i215.i
    i32 71, label %land.lhs.true.i.i.i200.i
    i32 49, label %land.lhs.true.i.i.i200.i
  ]

land.lhs.true.i.i.i200.i:                         ; preds = %for.body.i.i196.i, %for.body.i.i196.i
  %a.idx.i.i.i197.i = getelementptr %struct.dw_attr_struct* %a.030.i.i193.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i198.i = load i32* %a.idx.i.i.i197.i, align 4, !tbaa !59
  %cmp.i.i.i199.i = icmp eq i32 %a.idx.val.i.i.i198.i, 10
  br i1 %cmp.i.i.i199.i, label %AT_ref.exit.i.i204.i, label %if.end.i.i.i201.i

if.end.i.i.i201.i:                                ; preds = %land.lhs.true.i.i.i200.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i204.i:                             ; preds = %land.lhs.true.i.i.i200.i
  %v.i.i.i202.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i193.i, i64 0, i32 2, i32 1
  %die.i.i.i203.i = bitcast %union.anon.3* %v.i.i.i202.i to %struct.die_struct**
  %157 = load %struct.die_struct** %die.i.i.i203.i, align 8, !tbaa !60
  br label %for.inc.i.i209.i

for.inc.i.i209.i:                                 ; preds = %AT_ref.exit.i.i204.i, %for.body.i.i196.i
  %spec.1.i.i205.i = phi %struct.die_struct* [ %157, %AT_ref.exit.i.i204.i ], [ %spec.029.i.i194.i, %for.body.i.i196.i ]
  %dw_attr_next.i.i206.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i193.i, i64 0, i32 1
  %a.0.i.i207.i = load %struct.dw_attr_struct** %dw_attr_next.i.i206.i, align 8
  %cmp1.i.i208.i = icmp eq %struct.dw_attr_struct* %a.0.i.i207.i, null
  br i1 %cmp1.i.i208.i, label %for.end.i.i211.i, label %for.body.i.i196.i

for.end.i.i211.i:                                 ; preds = %for.inc.i.i209.i
  %tobool.i.i210.i = icmp eq %struct.die_struct* %spec.1.i.i205.i, null
  br i1 %tobool.i.i210.i, label %get_AT_low_pc.exit221.i, label %tailrecurse.i.i188.i

land.lhs.true.i.i215.i:                           ; preds = %for.body.i.i196.i
  %a.idx6.i.i212.i = getelementptr %struct.dw_attr_struct* %a.030.i.i193.i, i64 0, i32 2, i32 0
  %a.idx6.val.i.i213.i = load i32* %a.idx6.i.i212.i, align 4, !tbaa !59
  %158 = and i32 %a.idx6.val.i.i213.i, -2
  %switch.i.i214.i = icmp eq i32 %158, 12
  br i1 %switch.i.i214.i, label %AT_lbl.exit.i219.i, label %if.end.i.i216.i

if.end.i.i216.i:                                  ; preds = %land.lhs.true.i.i215.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4785, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_lbl, i64 0, i64 0)) #7
  unreachable

AT_lbl.exit.i219.i:                               ; preds = %land.lhs.true.i.i215.i
  %v.i.i217.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i193.i, i64 0, i32 2, i32 1
  %val_lbl_id.i.i218.i = bitcast %union.anon.3* %v.i.i217.i to i8**
  %159 = load i8** %val_lbl_id.i.i218.i, align 8, !tbaa !6
  br label %get_AT_low_pc.exit221.i

get_AT_low_pc.exit221.i:                          ; preds = %for.end.i.i211.i, %if.then.i.i192.i, %tailrecurse.i.i188.i, %AT_lbl.exit.i219.i
  %cond.i220.i = phi i8* [ %159, %AT_lbl.exit.i219.i ], [ null, %tailrecurse.i.i188.i ], [ null, %if.then.i.i192.i ], [ null, %for.end.i.i211.i ]
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 %div73.i, i8* %cond.i185.i, i8* %cond.i220.i, i8* getelementptr inbounds ([7 x i8]* @.str28, i64 0, i64 0)) #5
  br label %for.inc99.i

tailrecurse.i.i325:                               ; preds = %if.end61.i, %for.end.i.i342
  %die.tr.i.i323 = phi %struct.die_struct* [ %spec.1.i.i336, %for.end.i.i342 ], [ %139, %if.end61.i ]
  %cmp.i.i324 = icmp eq %struct.die_struct* %die.tr.i.i323, null
  br i1 %cmp.i.i324, label %if.then81.i, label %if.then.i.i329

if.then.i.i329:                                   ; preds = %tailrecurse.i.i325
  %die_attr.i.i326 = getelementptr inbounds %struct.die_struct* %die.tr.i.i323, i64 0, i32 2
  %a.027.i.i327 = load %struct.dw_attr_struct** %die_attr.i.i326, align 8
  %cmp128.i.i328 = icmp eq %struct.dw_attr_struct* %a.027.i.i327, null
  br i1 %cmp128.i.i328, label %if.then81.i, label %for.body.i.i333

for.body.i.i333:                                  ; preds = %if.then.i.i329, %for.inc.i.i340
  %a.030.i.i330 = phi %struct.dw_attr_struct* [ %a.0.i.i338, %for.inc.i.i340 ], [ %a.027.i.i327, %if.then.i.i329 ]
  %spec.029.i.i331 = phi %struct.die_struct* [ %spec.1.i.i336, %for.inc.i.i340 ], [ null, %if.then.i.i329 ]
  %dw_attr.i.i332 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i330, i64 0, i32 0
  %160 = load i32* %dw_attr.i.i332, align 4, !tbaa !57
  switch i32 %160, label %for.inc.i.i340 [
    i32 2, label %lor.lhs.false.i
    i32 71, label %land.lhs.true.i.i225.i
    i32 49, label %land.lhs.true.i.i225.i
  ]

land.lhs.true.i.i225.i:                           ; preds = %for.body.i.i333, %for.body.i.i333
  %a.idx.i.i222.i = getelementptr %struct.dw_attr_struct* %a.030.i.i330, i64 0, i32 2, i32 0
  %a.idx.val.i.i223.i = load i32* %a.idx.i.i222.i, align 4, !tbaa !59
  %cmp.i.i224.i = icmp eq i32 %a.idx.val.i.i223.i, 10
  br i1 %cmp.i.i224.i, label %AT_ref.exit.i.i335, label %if.end.i.i226.i

if.end.i.i226.i:                                  ; preds = %land.lhs.true.i.i225.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i335:                               ; preds = %land.lhs.true.i.i225.i
  %v.i.i227.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i330, i64 0, i32 2, i32 1
  %die.i.i.i334 = bitcast %union.anon.3* %v.i.i227.i to %struct.die_struct**
  %161 = load %struct.die_struct** %die.i.i.i334, align 8, !tbaa !60
  br label %for.inc.i.i340

for.inc.i.i340:                                   ; preds = %AT_ref.exit.i.i335, %for.body.i.i333
  %spec.1.i.i336 = phi %struct.die_struct* [ %161, %AT_ref.exit.i.i335 ], [ %spec.029.i.i331, %for.body.i.i333 ]
  %dw_attr_next.i.i337 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i330, i64 0, i32 1
  %a.0.i.i338 = load %struct.dw_attr_struct** %dw_attr_next.i.i337, align 8
  %cmp1.i.i339 = icmp eq %struct.dw_attr_struct* %a.0.i.i338, null
  br i1 %cmp1.i.i339, label %for.end.i.i342, label %for.body.i.i333

for.end.i.i342:                                   ; preds = %for.inc.i.i340
  %tobool.i.i341 = icmp eq %struct.die_struct* %spec.1.i.i336, null
  br i1 %tobool.i.i341, label %if.then81.i, label %tailrecurse.i.i325

lor.lhs.false.i:                                  ; preds = %for.body.i.i333
  %call76.idx.i = getelementptr %struct.dw_attr_struct* %a.030.i.i330, i64 0, i32 2, i32 0
  %call76.idx.val.i = load i32* %call76.idx.i, align 4, !tbaa !59
  %cmp79.i = icmp eq i32 %call76.idx.val.i, 2
  br i1 %cmp79.i, label %AT_loc.exit.i, label %if.then81.i

if.then81.i:                                      ; preds = %lor.lhs.false.i, %for.end.i.i342, %if.then.i.i329, %tailrecurse.i.i325
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6631, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.output_aranges, i64 0, i64 0)) #7
  unreachable

AT_loc.exit.i:                                    ; preds = %lor.lhs.false.i
  %v.i.i343 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i330, i64 0, i32 2, i32 1
  %val_loc.i.i = bitcast %union.anon.3* %v.i.i343 to %struct.dw_loc_descr_struct**
  %162 = load %struct.dw_loc_descr_struct** %val_loc.i.i, align 8, !tbaa !6
  %dw_loc_opc.i = getelementptr inbounds %struct.dw_loc_descr_struct* %162, i64 0, i32 1
  %163 = load i32* %dw_loc_opc.i, align 4, !tbaa !18
  %cmp84.i344 = icmp eq i32 %163, 3
  br i1 %cmp84.i344, label %if.end87.i, label %if.then86.i

if.then86.i:                                      ; preds = %AT_loc.exit.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6635, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.output_aranges, i64 0, i64 0)) #7
  unreachable

if.end87.i:                                       ; preds = %AT_loc.exit.i
  %164 = load i32* @target_flags, align 4, !tbaa !4
  %and88.i = lshr i32 %164, 20
  %165 = and i32 %and88.i, 32
  %166 = add i32 %165, 32
  %div91.i = sdiv i32 %166, 8
  %v.i345 = getelementptr inbounds %struct.dw_loc_descr_struct* %162, i64 0, i32 2, i32 1
  %val_addr.i346 = bitcast %union.anon.3* %v.i345 to %struct.rtx_def**
  %167 = load %struct.rtx_def** %val_addr.i346, align 8, !tbaa !6
  call void (i32, %struct.rtx_def*, i8*, ...)* @dw2_asm_output_addr_rtx(i32 %div91.i, %struct.rtx_def* %167, i8* getelementptr inbounds ([8 x i8]* @.str27, i64 0, i64 0)) #5
  %168 = load i32* @target_flags, align 4, !tbaa !4
  %and92.i = lshr i32 %168, 20
  %169 = and i32 %and92.i, 32
  %170 = add i32 %169, 32
  %div95.i = sdiv i32 %170, 8
  br label %tailrecurse.i.i.i

tailrecurse.i.i.i:                                ; preds = %for.end.i.i.i, %if.end87.i
  %die.tr.i.i.i = phi %struct.die_struct* [ %139, %if.end87.i ], [ %spec.1.i.i.i, %for.end.i.i.i ]
  %cmp.i.i.i347 = icmp eq %struct.die_struct* %die.tr.i.i.i, null
  br i1 %cmp.i.i.i347, label %get_AT_unsigned.exit.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %tailrecurse.i.i.i
  %die_attr.i.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i, i64 0, i32 2
  %a.027.i.i.i = load %struct.dw_attr_struct** %die_attr.i.i.i, align 8
  %cmp128.i.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i.i, null
  br i1 %cmp128.i.i.i, label %get_AT_unsigned.exit.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %if.then.i.i.i, %for.inc.i.i.i
  %a.030.i.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i.i, %for.inc.i.i.i ], [ %a.027.i.i.i, %if.then.i.i.i ]
  %spec.029.i.i.i = phi %struct.die_struct* [ %spec.1.i.i.i, %for.inc.i.i.i ], [ null, %if.then.i.i.i ]
  %dw_attr.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 0
  %171 = load i32* %dw_attr.i.i.i, align 4, !tbaa !57
  switch i32 %171, label %for.inc.i.i.i [
    i32 11, label %land.lhs.true.i.i.i357
    i32 71, label %land.lhs.true.i.i.i.i351
    i32 49, label %land.lhs.true.i.i.i.i351
  ]

land.lhs.true.i.i.i.i351:                         ; preds = %for.body.i.i.i, %for.body.i.i.i
  %a.idx.i.i.i.i348 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i349 = load i32* %a.idx.i.i.i.i348, align 4, !tbaa !59
  %cmp.i.i.i.i350 = icmp eq i32 %a.idx.val.i.i.i.i349, 10
  br i1 %cmp.i.i.i.i350, label %AT_ref.exit.i.i.i, label %if.end.i.i.i.i352

if.end.i.i.i.i352:                                ; preds = %land.lhs.true.i.i.i.i351
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i:                                ; preds = %land.lhs.true.i.i.i.i351
  %v.i.i.i.i353 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1
  %die.i.i.i.i354 = bitcast %union.anon.3* %v.i.i.i.i353 to %struct.die_struct**
  %172 = load %struct.die_struct** %die.i.i.i.i354, align 8, !tbaa !60
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %AT_ref.exit.i.i.i, %for.body.i.i.i
  %spec.1.i.i.i = phi %struct.die_struct* [ %172, %AT_ref.exit.i.i.i ], [ %spec.029.i.i.i, %for.body.i.i.i ]
  %dw_attr_next.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 1
  %a.0.i.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i.i, align 8
  %cmp1.i.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i.i, null
  br i1 %cmp1.i.i.i, label %for.end.i.i.i, label %for.body.i.i.i

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i
  %tobool.i.i.i = icmp eq %struct.die_struct* %spec.1.i.i.i, null
  br i1 %tobool.i.i.i, label %get_AT_unsigned.exit.i, label %tailrecurse.i.i.i

land.lhs.true.i.i.i357:                           ; preds = %for.body.i.i.i
  %a.idx.i.i.i355 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i356 = load i32* %a.idx.i.i.i355, align 4, !tbaa !59
  %cmp.i4.i.i = icmp eq i32 %a.idx.val.i.i.i356, 6
  br i1 %cmp.i4.i.i, label %AT_unsigned.exit.i.i, label %if.end.i.i.i358

if.end.i.i.i358:                                  ; preds = %land.lhs.true.i.i.i357
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i.i:                             ; preds = %land.lhs.true.i.i.i357
  %val_unsigned.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %173 = load i64* %val_unsigned.i.i.i, align 8, !tbaa !8
  %phitmp.i = and i64 %173, 4294967295
  br label %get_AT_unsigned.exit.i

get_AT_unsigned.exit.i:                           ; preds = %for.end.i.i.i, %if.then.i.i.i, %tailrecurse.i.i.i, %AT_unsigned.exit.i.i
  %cond.i.i = phi i64 [ %phitmp.i, %AT_unsigned.exit.i.i ], [ 0, %tailrecurse.i.i.i ], [ 0, %if.then.i.i.i ], [ 0, %for.end.i.i.i ]
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 %div95.i, i64 %cond.i.i, i8* getelementptr inbounds ([7 x i8]* @.str28, i64 0, i64 0)) #5
  br label %for.inc99.i

for.inc99.i:                                      ; preds = %get_AT_unsigned.exit.i, %get_AT_low_pc.exit221.i
  %inc.i359 = add i32 %i.1248.i, 1
  %174 = load i32* @arange_table_in_use, align 4, !tbaa !4
  %cmp55.i = icmp ult i32 %inc.i359, %174
  br i1 %cmp55.i, label %for.body57.i, label %output_aranges.exit

output_aranges.exit:                              ; preds = %for.inc99.i, %if.end.i317
  %175 = load i32* @target_flags, align 4, !tbaa !4
  %and101.i = lshr i32 %175, 20
  %176 = and i32 %and101.i, 32
  %177 = add i32 %176, 32
  %div104.i = sdiv i32 %177, 8
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 %div104.i, i64 0, i8* null) #5
  %178 = load i32* @target_flags, align 4, !tbaa !4
  %and105.i = lshr i32 %178, 20
  %179 = and i32 %and105.i, 32
  %180 = add i32 %179, 32
  %div108.i = sdiv i32 %180, 8
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 %div108.i, i64 0, i8* null) #5
  br label %if.end121

if.end121:                                        ; preds = %if.end118, %output_aranges.exit
  %181 = load i32* @ranges_table_in_use, align 4, !tbaa !4
  %tobool122 = icmp eq i32 %181, 0
  br i1 %tobool122, label %if.end125, label %if.then123

if.then123:                                       ; preds = %if.end121
  call void @named_section_flags(i8* getelementptr inbounds ([14 x i8]* @.str14, i64 0, i64 0), i32 1024) #5
  %182 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %182, i8* getelementptr inbounds ([60 x i8]* @ranges_section_label, i64 0, i64 0)) #5
  %183 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %184 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %183)
  %185 = getelementptr inbounds [30 x i8]* %blabel.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 30, i8* %185) #5
  %186 = getelementptr inbounds [30 x i8]* %elabel.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 30, i8* %186) #5
  %187 = load i32* @ranges_table_in_use, align 4, !tbaa !4
  %cmp51.i = icmp eq i32 %187, 0
  br i1 %cmp51.i, label %if.end125, label %for.body.i

for.body.i:                                       ; preds = %if.then123, %for.inc.i
  %i.053.i = phi i32 [ %inc.i, %for.inc.i ], [ 0, %if.then123 ]
  %fmt.052.i = phi i8* [ %fmt.1.i, %for.inc.i ], [ getelementptr inbounds ([12 x i8]* @.str18, i64 0, i64 0), %if.then123 ]
  %idxprom.i194 = zext i32 %i.053.i to i64
  %188 = load %struct.dw_ranges_struct** @ranges_table, align 8, !tbaa !6
  %block_num1.i = getelementptr inbounds %struct.dw_ranges_struct* %188, i64 %idxprom.i194, i32 0
  %189 = load i32* %block_num1.i, align 4, !tbaa !79
  %tobool.i = icmp eq i32 %189, 0
  br i1 %tobool.i, label %if.else36.i, label %do.body.i

do.body.i:                                        ; preds = %for.body.i
  %call.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %185, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0), i32 %189) #5
  %call4.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %186, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str20, i64 0, i64 0), i32 %189) #5
  %190 = load i32* @separate_line_info_table_in_use, align 4, !tbaa !4
  %cmp6.i = icmp eq i32 %190, 0
  %191 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %191, 20
  %192 = and i32 %and.i, 32
  %193 = add i32 %192, 32
  %div.i = sdiv i32 %193, 8
  %mul.i = shl i32 %i.053.i, 1
  %mul14.i = mul i32 %div.i, %mul.i
  br i1 %cmp6.i, label %if.then7.i, label %if.else.i

if.then7.i:                                       ; preds = %do.body.i
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 %div.i, i8* %185, i8* getelementptr inbounds ([30 x i8]* @text_section_label, i64 0, i64 0), i8* %fmt.052.i, i32 %mul14.i) #5
  %194 = load i32* @target_flags, align 4, !tbaa !4
  %and15.i = lshr i32 %194, 20
  %195 = and i32 %and15.i, 32
  %196 = add i32 %195, 32
  %div18.i = sdiv i32 %196, 8
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 %div18.i, i8* %186, i8* getelementptr inbounds ([30 x i8]* @text_section_label, i64 0, i64 0), i8* null) #5
  br label %for.inc.i

if.else.i:                                        ; preds = %do.body.i
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_addr(i32 %div.i, i8* %185, i8* %fmt.052.i, i32 %mul14.i) #5
  %197 = load i32* @target_flags, align 4, !tbaa !4
  %and31.i = lshr i32 %197, 20
  %198 = and i32 %and31.i, 32
  %199 = add i32 %198, 32
  %div34.i = sdiv i32 %199, 8
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_addr(i32 %div34.i, i8* %186, i8* null) #5
  br label %for.inc.i

if.else36.i:                                      ; preds = %for.body.i
  %200 = load i32* @target_flags, align 4, !tbaa !4
  %and37.i = lshr i32 %200, 20
  %201 = and i32 %and37.i, 32
  %202 = add i32 %201, 32
  %div40.i = sdiv i32 %202, 8
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 %div40.i, i64 0, i8* null) #5
  %203 = load i32* @target_flags, align 4, !tbaa !4
  %and41.i = lshr i32 %203, 20
  %204 = and i32 %and41.i, 32
  %205 = add i32 %204, 32
  %div44.i = sdiv i32 %205, 8
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 %div44.i, i64 0, i8* null) #5
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else36.i, %if.else.i, %if.then7.i
  %fmt.1.i = phi i8* [ getelementptr inbounds ([12 x i8]* @.str18, i64 0, i64 0), %if.else36.i ], [ null, %if.else.i ], [ null, %if.then7.i ]
  %inc.i = add i32 %i.053.i, 1
  %206 = load i32* @ranges_table_in_use, align 4, !tbaa !4
  %cmp.i195 = icmp ult i32 %inc.i, %206
  br i1 %cmp.i195, label %for.body.i, label %if.end125

if.end125:                                        ; preds = %for.inc.i, %if.then123, %if.end121
  %207 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp126 = icmp ugt i32 %207, 2
  br i1 %cmp126, label %if.then128, label %if.end129

if.then128:                                       ; preds = %if.end125
  call void @named_section_flags(i8* getelementptr inbounds ([15 x i8]* @.str15, i64 0, i64 0), i32 1024) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 4, i8* getelementptr inbounds ([9 x i8]* @.str16, i64 0, i64 0)) #5
  br label %if.end129

if.end129:                                        ; preds = %if.then128, %if.end125
  %208 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool130 = icmp eq %struct.ht* %208, null
  br i1 %tobool130, label %if.end132, label %if.then131

if.then131:                                       ; preds = %if.end129
  call void @ht_forall(%struct.ht* %208, i32 (%struct.cpp_reader*, %struct.ht_identifier*, i8*)* @output_indirect_string, i8* null) #5
  br label %if.end132

if.end132:                                        ; preds = %if.end129, %if.then131
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_define(i32 %lineno, i8* %buffer) #1 {
entry:
  %0 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp = icmp ugt i32 %0, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @named_section_flags(i8* getelementptr inbounds ([15 x i8]* @.str15, i64 0, i64 0), i32 1024) #5
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 1, i8* getelementptr inbounds ([13 x i8]* @.str404, i64 0, i64 0)) #5
  %conv = zext i32 %lineno to i64
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv, i8* getelementptr inbounds ([18 x i8]* @.str402, i64 0, i64 0), i32 %lineno) #5
  tail call void (i8*, i64, i8*, ...)* @dw2_asm_output_nstring(i8* %buffer, i64 -1, i8* getelementptr inbounds ([10 x i8]* @.str403, i64 0, i64 0)) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_undef(i32 %lineno, i8* %buffer) #1 {
entry:
  %0 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp = icmp ugt i32 %0, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @named_section_flags(i8* getelementptr inbounds ([15 x i8]* @.str15, i64 0, i64 0), i32 1024) #5
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 2, i8* getelementptr inbounds ([15 x i8]* @.str401, i64 0, i64 0)) #5
  %conv = zext i32 %lineno to i64
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv, i8* getelementptr inbounds ([18 x i8]* @.str402, i64 0, i64 0), i32 %lineno) #5
  tail call void (i8*, i64, i8*, ...)* @dw2_asm_output_nstring(i8* %buffer, i64 -1, i8* getelementptr inbounds ([10 x i8]* @.str403, i64 0, i64 0)) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_start_source_file(i32 %lineno, i8* %filename) #1 {
entry:
  %0 = load i32* @flag_eliminate_dwarf2_dups, align 4, !tbaa !4
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %2 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 16644, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i = icmp eq %struct.die_struct* %1, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %new_die.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %2, %1
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %3 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %1, %struct.die_struct** %3, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %1, i64 0, i32 4
  %4 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %5 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %4, %struct.die_struct** %5, align 8, !tbaa !63
  store %struct.die_struct* %2, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i:                                        ; preds = %if.then
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #5
  %6 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %2, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %7 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %7, align 8, !tbaa !64
  %8 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %9 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %8, %struct.limbo_die_struct** %9, align 8, !tbaa !52
  store %struct.limbo_die_struct* %6, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %call.i7 = tail call noalias i8* @xmalloc(i64 40) #5
  %10 = bitcast i8* %call.i7 to %struct.dw_attr_struct*
  %11 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i = icmp eq %struct.ht* %11, null
  br i1 %tobool.i, label %if.then.i9, label %if.end.i

if.then.i9:                                       ; preds = %new_die.exit
  %call1.i8 = tail call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i8, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i = getelementptr inbounds %struct.ht* %call1.i8, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i, align 8, !tbaa !81
  %.pre.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i9, %new_die.exit
  %12 = phi %struct.ht* [ %11, %new_die.exit ], [ %.pre.i, %if.then.i9 ]
  %call2.i = tail call i64 @strlen(i8* %filename) #5
  %conv.i = trunc i64 %call2.i to i32
  %call3.i = tail call %struct.ht_identifier* @ht_lookup(%struct.ht* %12, i8* %filename, i32 %conv.i, i32 1) #5
  %13 = bitcast %struct.ht_identifier* %call3.i to %struct.indirect_string_node*
  %14 = getelementptr inbounds %struct.ht_identifier* %call3.i, i64 1, i32 0
  %15 = load i32* %14, align 4, !tbaa !84
  %inc.i = add i32 %15, 1
  store i32 %inc.i, i32* %14, align 4, !tbaa !84
  %dw_attr_next.i = getelementptr inbounds i8* %call.i7, i64 8
  %16 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %16, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i7 to i32*
  store i32 3, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i7, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 14, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i7, i64 24
  %val_str.i = bitcast i8* %v.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %13, %struct.indirect_string_node** %val_str.i, align 8, !tbaa !6
  %cmp.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i10 = icmp ne i8* %call.i7, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i10
  br i1 %or.cond.i.i, label %if.then.i.i11, label %if.end

if.then.i.i11:                                    ; preds = %if.end.i
  %die_attr.i.i = getelementptr inbounds i8* %call.i, i64 16
  %17 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %18 = load %struct.dw_attr_struct** %17, align 8, !tbaa !73
  store %struct.dw_attr_struct* %18, %struct.dw_attr_struct** %16, align 8, !tbaa !72
  store %struct.dw_attr_struct* %10, %struct.dw_attr_struct** %17, align 8, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.then.i.i11, %if.end.i, %entry
  %19 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp = icmp ugt i32 %19, 2
  br i1 %cmp, label %if.then1, label %if.end4

if.then1:                                         ; preds = %if.end
  tail call void @named_section_flags(i8* getelementptr inbounds ([15 x i8]* @.str15, i64 0, i64 0), i32 1024) #5
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 3, i8* getelementptr inbounds ([15 x i8]* @.str405, i64 0, i64 0)) #5
  %conv = zext i32 %lineno to i64
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv, i8* getelementptr inbounds ([29 x i8]* @.str406, i64 0, i64 0), i32 %lineno) #5
  %call2 = tail call fastcc i32 @lookup_filename(i8* %filename)
  %conv3 = zext i32 %call2 to i64
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %conv3, i8* getelementptr inbounds ([25 x i8]* @.str407, i64 0, i64 0)) #5
  br label %if.end4

if.end4:                                          ; preds = %if.then1, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_end_source_file(i32 %lineno) #1 {
entry:
  %0 = load i32* @flag_eliminate_dwarf2_dups, align 4, !tbaa !4
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %2 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 16645, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i = icmp eq %struct.die_struct* %1, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %if.end, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %2, %1
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %3 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %1, %struct.die_struct** %3, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %1, i64 0, i32 4
  %4 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %5 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %4, %struct.die_struct** %5, align 8, !tbaa !63
  store %struct.die_struct* %2, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %if.end

if.else.i:                                        ; preds = %if.then
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #5
  %6 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %2, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %7 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %7, align 8, !tbaa !64
  %8 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %9 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %8, %struct.limbo_die_struct** %9, align 8, !tbaa !52
  store %struct.limbo_die_struct* %6, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.else.i, %if.end.i.i, %if.then.i, %entry
  %10 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp = icmp ugt i32 %10, 2
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  tail call void @named_section_flags(i8* getelementptr inbounds ([15 x i8]* @.str15, i64 0, i64 0), i32 1024) #5
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 4, i8* getelementptr inbounds ([9 x i8]* @.str16, i64 0, i64 0)) #5
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_begin_block(i32 %line, i32 %blocknum) #1 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  tail call void @function_section(%union.tree_node* %0) #5
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([8 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0), i32 %blocknum) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_end_block(i32 %line, i32 %blocknum) #1 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  tail call void @function_section(%union.tree_node* %0) #5
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([8 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str20, i64 0, i64 0), i32 %blocknum) #5
  ret void
}

; Function Attrs: nounwind readonly uwtable
define internal zeroext i1 @dwarf2out_ignore_block(%union.tree_node* nocapture readonly %block) #0 {
entry:
  %vars = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 2
  %0 = bitcast i32* %vars to %union.tree_node**
  %decl.045 = load %union.tree_node** %0, align 8
  %tobool46 = icmp eq %union.tree_node* %decl.045, null
  br i1 %tobool46, label %return, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %decl.047 = phi %union.tree_node* [ %decl.0, %for.inc ], [ %decl.045, %entry ]
  %code = getelementptr inbounds %union.tree_node* %decl.047, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %for.inc [
    i32 30, label %return
    i32 33, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %for.body
  %name = getelementptr inbounds %union.tree_node* %decl.047, i64 0, i32 0, i32 8
  %1 = load %union.tree_node** %name, align 8, !tbaa !86
  %cmp8 = icmp eq %union.tree_node* %1, null
  br i1 %cmp8, label %return, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %artificial_flag = getelementptr inbounds %union.tree_node* %decl.047, i64 0, i32 0, i32 5
  %2 = bitcast i48* %artificial_flag to i64*
  %bf.load11 = load i64* %2, align 8
  %bf.cast = and i64 %bf.load11, 4194304
  %tobool13 = icmp eq i64 %bf.cast, 0
  br i1 %tobool13, label %for.inc, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %lor.lhs.false9
  %type = getelementptr inbounds %union.tree_node* %decl.047, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type, align 8, !tbaa !87
  %.idx = getelementptr %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %.idx.val = load i32* %.idx, align 8
  %bf.clear.i = and i32 %.idx.val, 255
  %4 = and i32 %.idx.val, 254
  %5 = icmp eq i32 %4, 20
  %cmp4.i = icmp eq i32 %bf.clear.i, 22
  %or.cond6.i = or i1 %5, %cmp4.i
  %cmp5.i = icmp eq i32 %bf.clear.i, 10
  %.cmp5.i = or i1 %or.cond6.i, %cmp5.i
  br i1 %.cmp5.i, label %land.lhs.true17, label %for.inc

land.lhs.true17:                                  ; preds = %land.lhs.true14
  %chain = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0
  %6 = load %union.tree_node** %chain, align 8, !tbaa !88
  %cmp21 = icmp eq %union.tree_node* %decl.047, %6
  br i1 %cmp21, label %return, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %land.lhs.true17
  %abstract_origin = getelementptr inbounds %union.tree_node* %decl.047, i64 0, i32 0, i32 13
  %7 = load %union.tree_node** %abstract_origin, align 8, !tbaa !89
  %cmp24 = icmp eq %union.tree_node* %7, null
  br i1 %cmp24, label %for.inc, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %lor.lhs.false22
  %bf.cast.i = and i64 %bf.load11, 32768
  %tobool.i = icmp ne i64 %bf.cast.i, 0
  %cmp.i = icmp eq %union.tree_node* %7, %decl.047
  %or.cond.i = and i1 %tobool.i, %cmp.i
  %retval.0.i = select i1 %or.cond.i, %union.tree_node* null, %union.tree_node* %7
  %cmp31 = icmp eq %union.tree_node* %retval.0.i, %6
  br i1 %cmp31, label %return, label %for.inc

for.inc:                                          ; preds = %land.lhs.true14, %for.body, %lor.lhs.false22, %lor.lhs.false9, %land.lhs.true25
  %chain33 = getelementptr inbounds %union.tree_node* %decl.047, i64 0, i32 0, i32 0, i32 0
  %decl.0 = load %union.tree_node** %chain33, align 8
  %tobool = icmp eq %union.tree_node* %decl.0, null
  br i1 %tobool, label %return, label %for.body

return:                                           ; preds = %for.body, %land.lhs.true25, %land.lhs.true17, %land.lhs.true, %for.inc, %entry
  %retval.0 = phi i1 [ true, %entry ], [ false, %for.body ], [ false, %land.lhs.true25 ], [ false, %land.lhs.true17 ], [ false, %land.lhs.true ], [ true, %for.inc ]
  ret i1 %retval.0
}

declare void @debug_nothing_int(i32) #2

declare void @debug_nothing_tree(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define void @dwarf2out_decl(%union.tree_node* %decl) #1 {
entry:
  %0 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %return [
    i32 33, label %sw.bb36
    i32 30, label %sw.bb1
    i32 34, label %sw.bb17
  ]

sw.bb1:                                           ; preds = %entry
  %external_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %1 = bitcast i48* %external_flag to i64*
  %bf.load3 = load i64* %1, align 8
  %bf.cast = and i64 %bf.load3, 256
  %tobool = icmp eq i64 %bf.cast, 0
  %bf.cast9 = and i64 %bf.load3, 1610612736
  %cmp = icmp eq i64 %bf.cast9, 0
  %or.cond92 = or i1 %tobool, %cmp
  br i1 %or.cond92, label %if.end, label %return

if.end:                                           ; preds = %sw.bb1
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %2 = load %union.tree_node** %initial, align 8, !tbaa !90
  %cmp11 = icmp eq %union.tree_node* %2, null
  br i1 %cmp11, label %return, label %if.end13

if.end13:                                         ; preds = %if.end
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #5
  %tobool14 = icmp eq %union.tree_node* %call, null
  %. = select i1 %tobool14, %struct.die_struct* %0, %struct.die_struct* null
  br label %sw.epilog

sw.bb17:                                          ; preds = %entry
  %external_flag19 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %3 = bitcast i48* %external_flag19 to i64*
  %bf.load20 = load i64* %3, align 8
  %bf.cast23 = and i64 %bf.load20, 256
  %tobool24 = icmp eq i64 %bf.cast23, 0
  br i1 %tobool24, label %if.end32, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %sw.bb17
  %bf.clear29 = and i32 %bf.load, 65536
  %tobool30 = icmp eq i32 %bf.clear29, 0
  %4 = load i32* @debug_info_level, align 4
  %cmp33 = icmp ult i32 %4, 2
  %or.cond = or i1 %tobool30, %cmp33
  br i1 %or.cond, label %return, label %sw.epilog

if.end32:                                         ; preds = %sw.bb17
  %.old = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp33.old = icmp ult i32 %.old, 2
  br i1 %cmp33.old, label %return, label %sw.epilog

sw.bb36:                                          ; preds = %entry
  %external_flag38 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %5 = bitcast i48* %external_flag38 to i64*
  %bf.load39 = load i64* %5, align 8
  %bf.cast42 = and i64 %bf.load39, 256
  %tobool43 = icmp eq i64 %bf.cast42, 0
  br i1 %tobool43, label %if.end45, label %return

if.end45:                                         ; preds = %sw.bb36
  %linenum = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %6 = load i32* %linenum, align 4, !tbaa !91
  %cmp47 = icmp eq i32 %6, 0
  br i1 %cmp47, label %tailrecurse.i.i, label %if.end70

tailrecurse.i.i:                                  ; preds = %if.end45, %for.end.i.i
  %die.tr.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.end.i.i ], [ %0, %if.end45 ]
  %cmp.i.i = icmp eq %struct.die_struct* %die.tr.i.i, null
  br i1 %cmp.i.i, label %return, label %if.then.i.i

if.then.i.i:                                      ; preds = %tailrecurse.i.i
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i, i64 0, i32 2
  %a.027.i.i = load %struct.dw_attr_struct** %die_attr.i.i, align 8
  %cmp128.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i, null
  br i1 %cmp128.i.i, label %return, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.then.i.i, %for.inc.i.i
  %a.030.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i, %for.inc.i.i ], [ %a.027.i.i, %if.then.i.i ]
  %spec.029.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.inc.i.i ], [ null, %if.then.i.i ]
  %dw_attr.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 0
  %7 = load i32* %dw_attr.i.i, align 4, !tbaa !57
  switch i32 %7, label %for.inc.i.i [
    i32 19, label %land.lhs.true.i.i
    i32 71, label %land.lhs.true.i.i.i
    i32 49, label %land.lhs.true.i.i.i
  ]

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i, %for.body.i.i
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i = icmp eq i32 %a.idx.val.i.i.i, 10
  br i1 %cmp.i.i.i, label %AT_ref.exit.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i:                                  ; preds = %land.lhs.true.i.i.i
  %v.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i.i = bitcast %union.anon.3* %v.i.i.i to %struct.die_struct**
  %8 = load %struct.die_struct** %die.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i, %AT_ref.exit.i.i
  %spec.1.i.i = phi %struct.die_struct* [ %8, %AT_ref.exit.i.i ], [ %spec.029.i.i, %for.body.i.i ]
  %dw_attr_next.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 1
  %a.0.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i, align 8
  %cmp1.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i, null
  br i1 %cmp1.i.i, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %tobool.i.i = icmp eq %struct.die_struct* %spec.1.i.i, null
  br i1 %tobool.i.i, label %return, label %tailrecurse.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %a.idx.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i = load i32* %a.idx.i.i, align 4, !tbaa !59
  %cmp.i4.i = icmp eq i32 %a.idx.val.i.i, 6
  br i1 %cmp.i4.i, label %get_AT_unsigned.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

get_AT_unsigned.exit:                             ; preds = %land.lhs.true.i.i
  %val_unsigned.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %9 = load i64* %val_unsigned.i.i, align 8, !tbaa !8
  %phitmp.i = trunc i64 %9 to i32
  %cmp50 = icmp eq i32 %phitmp.i, 4
  br i1 %cmp50, label %land.lhs.true51, label %return

land.lhs.true51:                                  ; preds = %get_AT_unsigned.exit
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type, align 8, !tbaa !87
  %code54 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load55 = load i32* %code54, align 8
  %bf.clear56 = and i32 %bf.load55, 255
  %cmp57 = icmp eq i32 %bf.clear56, 11
  %bf.cast63 = and i64 %bf.load39, 16384
  %tobool64 = icmp eq i64 %bf.cast63, 0
  %or.cond100 = and i1 %cmp57, %tobool64
  br i1 %or.cond100, label %if.then65, label %return

if.then65:                                        ; preds = %land.lhs.true51
  %call68 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %10, i32 0, i32 0, %struct.die_struct* null)
  br label %return

if.end70:                                         ; preds = %if.end45
  %11 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp71 = icmp ult i32 %11, 2
  br i1 %cmp71, label %return, label %if.end73

if.end73:                                         ; preds = %if.end70
  %call74 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #5
  %tobool75 = icmp eq %union.tree_node* %call74, null
  %.93 = select i1 %tobool75, %struct.die_struct* %0, %struct.die_struct* null
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end73, %if.end13, %land.lhs.true25, %if.end32
  %context_die.0 = phi %struct.die_struct* [ %0, %land.lhs.true25 ], [ %0, %if.end32 ], [ %., %if.end13 ], [ %.93, %if.end73 ]
  tail call fastcc void @gen_decl_die(%union.tree_node* %decl, %struct.die_struct* %context_die.0)
  br label %return

return:                                           ; preds = %if.then.i.i, %tailrecurse.i.i, %for.end.i.i, %sw.bb1, %sw.bb36, %land.lhs.true25, %entry, %if.end70, %get_AT_unsigned.exit, %land.lhs.true51, %if.then65, %if.end32, %if.end, %sw.epilog
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_global_decl(%union.tree_node* %decl) #1 {
entry:
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 30
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %0 = load %union.tree_node** %initial, align 8, !tbaa !90
  %tobool = icmp eq %union.tree_node* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @dwarf2out_decl(%union.tree_node* %decl)
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dwarf2out_abstract_function(%union.tree_node* %decl) #1 {
entry:
  %abstract_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %0 = bitcast i48* %abstract_flag to i64*
  %bf.load = load i64* %0, align 8
  %abstract_origin = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %1 = load %union.tree_node** %abstract_origin, align 8, !tbaa !89
  %tobool = icmp eq %union.tree_node* %1, null
  %decl. = select i1 %tobool, %union.tree_node* %decl, %union.tree_node* %1
  %decl..idx = getelementptr %union.tree_node* %decl., i64 0, i32 0, i32 3
  %decl..idx.val = load i32* %decl..idx, align 4, !tbaa !65
  %2 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i36 = icmp ugt i32 %2, %decl..idx.val
  br i1 %cmp.i36, label %lookup_decl_die.exit, label %if.end

lookup_decl_die.exit:                             ; preds = %entry
  %idxprom.i = zext i32 %decl..idx.val to i64
  %3 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i37 = getelementptr inbounds %struct.die_struct** %3, i64 %idxprom.i
  %4 = load %struct.die_struct** %arrayidx.i37, align 8, !tbaa !6
  %tobool5 = icmp eq %struct.die_struct* %4, null
  br i1 %tobool5, label %if.end, label %tailrecurse.i.i

tailrecurse.i.i:                                  ; preds = %lookup_decl_die.exit, %for.end.i.i
  %die.tr.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.end.i.i ], [ %4, %lookup_decl_die.exit ]
  %cmp.i.i = icmp eq %struct.die_struct* %die.tr.i.i, null
  br i1 %cmp.i.i, label %if.end, label %if.then.i.i

if.then.i.i:                                      ; preds = %tailrecurse.i.i
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i, i64 0, i32 2
  %a.027.i.i = load %struct.dw_attr_struct** %die_attr.i.i, align 8
  %cmp128.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i, null
  br i1 %cmp128.i.i, label %if.end, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.then.i.i, %for.inc.i.i
  %a.030.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i, %for.inc.i.i ], [ %a.027.i.i, %if.then.i.i ]
  %spec.029.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.inc.i.i ], [ null, %if.then.i.i ]
  %dw_attr.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 0
  %5 = load i32* %dw_attr.i.i, align 4, !tbaa !57
  switch i32 %5, label %for.inc.i.i [
    i32 32, label %land.lhs.true.i.i
    i32 71, label %land.lhs.true.i.i.i
    i32 49, label %land.lhs.true.i.i.i
  ]

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i, %for.body.i.i
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i = icmp eq i32 %a.idx.val.i.i.i, 10
  br i1 %cmp.i.i.i, label %AT_ref.exit.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i:                                  ; preds = %land.lhs.true.i.i.i
  %v.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i.i = bitcast %union.anon.3* %v.i.i.i to %struct.die_struct**
  %6 = load %struct.die_struct** %die.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i, %AT_ref.exit.i.i
  %spec.1.i.i = phi %struct.die_struct* [ %6, %AT_ref.exit.i.i ], [ %spec.029.i.i, %for.body.i.i ]
  %dw_attr_next.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 1
  %a.0.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i, align 8
  %cmp1.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i, null
  br i1 %cmp1.i.i, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %tobool.i.i = icmp eq %struct.die_struct* %spec.1.i.i, null
  br i1 %tobool.i.i, label %if.end, label %tailrecurse.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %a.idx.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i = load i32* %a.idx.i.i, align 4, !tbaa !59
  %cmp.i4.i = icmp eq i32 %a.idx.val.i.i, 6
  br i1 %cmp.i4.i, label %get_AT_unsigned.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

get_AT_unsigned.exit:                             ; preds = %land.lhs.true.i.i
  %val_unsigned.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %7 = load i64* %val_unsigned.i.i, align 8, !tbaa !8
  %phitmp.i = trunc i64 %7 to i32
  %tobool7 = icmp eq i32 %phitmp.i, 0
  br i1 %tobool7, label %if.end, label %return

if.end:                                           ; preds = %if.then.i.i, %tailrecurse.i.i, %for.end.i.i, %entry, %get_AT_unsigned.exit, %lookup_decl_die.exit
  %8 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp = icmp ugt i32 %8, 1
  br i1 %cmp, label %if.then8, label %if.end19

if.then8:                                         ; preds = %if.end
  %code.i = getelementptr inbounds %union.tree_node* %decl., i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp.i = icmp eq i32 %bf.clear.i, 30
  br i1 %cmp.i, label %lor.lhs.false.i, label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.then8
  %vindex.i = getelementptr inbounds %union.tree_node* %decl., i64 0, i32 0, i32 22
  %9 = load %union.tree_node** %vindex.i, align 8, !tbaa !92
  %tobool.i = icmp eq %union.tree_node* %9, null
  br i1 %tobool.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.then8
  %context3.i = getelementptr inbounds %union.tree_node* %decl., i64 0, i32 0, i32 9
  br label %if.end.i

if.else.i:                                        ; preds = %lor.lhs.false.i
  %type.i = getelementptr inbounds %union.tree_node* %decl., i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type.i, align 8, !tbaa !87
  %values.i = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 1
  %11 = load i8** %values.i, align 8
  %value.i = getelementptr inbounds i8* %11, i64 32
  %12 = bitcast i8* %value.i to %union.tree_node**
  %13 = load %union.tree_node** %12, align 8, !tbaa !93
  %type7.i = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 1
  %14 = load %union.tree_node** %type7.i, align 8, !tbaa !87
  %15 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 15
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %context.0.in.i = phi %union.tree_node** [ %context3.i, %if.then.i ], [ %15, %if.else.i ]
  %context.0.i = load %union.tree_node** %context.0.in.i, align 8
  %tobool9.i = icmp eq %union.tree_node* %context.0.i, null
  br i1 %tobool9.i, label %if.end19, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %code11.i = getelementptr inbounds %union.tree_node* %context.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load12.i = load i32* %code11.i, align 8
  %bf.clear13.i = and i32 %bf.load12.i, 255
  %idxprom23.i = zext i32 %bf.clear13.i to i64
  %arrayidx.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom23.i
  %16 = load i8* %arrayidx.i, align 1, !tbaa !1
  %cmp14.i = icmp eq i8 %16, 116
  br i1 %cmp14.i, label %if.then11, label %if.end19

if.then11:                                        ; preds = %land.lhs.true.i
  %call12 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl.) #5
  %tobool13 = icmp ne %union.tree_node* %call12, null
  %17 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %cond17 = select i1 %tobool13, %struct.die_struct* null, %struct.die_struct* %17
  tail call fastcc void @gen_type_die_for_member(%union.tree_node* %context.0.i, %union.tree_node* %decl., %struct.die_struct* %cond17)
  br label %if.end19

if.end19:                                         ; preds = %if.end.i, %land.lhs.true.i, %if.then11, %if.end
  %18 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  store %union.tree_node* %decl., %union.tree_node** @current_function_decl, align 8, !tbaa !6
  tail call void @set_decl_abstract_flags(%union.tree_node* %decl., i32 1) #5
  tail call void @dwarf2out_decl(%union.tree_node* %decl.)
  %bf.cast = and i64 %bf.load, 32768
  %tobool20 = icmp eq i64 %bf.cast, 0
  br i1 %tobool20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end19
  tail call void @set_decl_abstract_flags(%union.tree_node* %decl., i32 0) #5
  br label %if.end22

if.end22:                                         ; preds = %if.end19, %if.then21
  store %union.tree_node* %18, %union.tree_node** @current_function_decl, align 8, !tbaa !6
  br label %return

return:                                           ; preds = %get_AT_unsigned.exit, %if.end22
  ret void
}

declare void @debug_nothing_rtx(%struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define void @dwarf2out_set_demangle_name_func(i8* (i8*)* %func) #1 {
entry:
  store i8* (i8*)* %func, i8* (i8*)** @demangle_name_func, align 8, !tbaa !6
  ret void
}

; Function Attrs: nounwind uwtable
define void @debug_dwarf_die(%struct.die_struct* nocapture readonly %die) #1 {
entry:
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  tail call fastcc void @print_die(%struct.die_struct* %die, %struct._IO_FILE* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_die(%struct.die_struct* nocapture readonly %die, %struct._IO_FILE* %outfile) #1 {
entry:
  %0 = load i32* @print_indent, align 4, !tbaa !4
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([4 x i8]* @.str439, i64 0, i64 0), i32 %0, i8* getelementptr inbounds ([1 x i8]* @.str440, i64 0, i64 0)) #5
  %die_offset = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 6
  %1 = load i64* %die_offset, align 8, !tbaa !78
  %die_tag = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 0
  %2 = load i32* %die_tag, align 4, !tbaa !69
  switch i32 %2, label %sw.default.i [
    i32 0, label %dwarf_tag_name.exit
    i32 1, label %sw.bb1.i
    i32 2, label %sw.bb2.i
    i32 3, label %sw.bb3.i
    i32 4, label %sw.bb4.i
    i32 5, label %sw.bb5.i
    i32 8, label %sw.bb6.i
    i32 10, label %sw.bb7.i
    i32 11, label %sw.bb8.i
    i32 13, label %sw.bb9.i
    i32 15, label %sw.bb10.i
    i32 16, label %sw.bb11.i
    i32 17, label %sw.bb12.i
    i32 18, label %sw.bb13.i
    i32 19, label %sw.bb14.i
    i32 21, label %sw.bb15.i
    i32 22, label %sw.bb16.i
    i32 23, label %sw.bb17.i
    i32 24, label %sw.bb18.i
    i32 25, label %sw.bb19.i
    i32 26, label %sw.bb20.i
    i32 27, label %sw.bb21.i
    i32 28, label %sw.bb22.i
    i32 29, label %sw.bb23.i
    i32 30, label %sw.bb24.i
    i32 31, label %sw.bb25.i
    i32 32, label %sw.bb26.i
    i32 33, label %sw.bb27.i
    i32 34, label %sw.bb28.i
    i32 35, label %sw.bb29.i
    i32 36, label %sw.bb30.i
    i32 37, label %sw.bb31.i
    i32 38, label %sw.bb32.i
    i32 39, label %sw.bb33.i
    i32 40, label %sw.bb34.i
    i32 41, label %sw.bb35.i
    i32 42, label %sw.bb36.i
    i32 43, label %sw.bb37.i
    i32 44, label %sw.bb38.i
    i32 45, label %sw.bb39.i
    i32 46, label %sw.bb40.i
    i32 47, label %sw.bb41.i
    i32 48, label %sw.bb42.i
    i32 49, label %sw.bb43.i
    i32 50, label %sw.bb44.i
    i32 51, label %sw.bb45.i
    i32 52, label %sw.bb46.i
    i32 53, label %sw.bb47.i
    i32 16513, label %sw.bb48.i
    i32 16641, label %sw.bb49.i
    i32 16642, label %sw.bb50.i
    i32 16643, label %sw.bb51.i
    i32 16644, label %sw.bb52.i
    i32 16645, label %sw.bb53.i
  ]

sw.bb1.i:                                         ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb2.i:                                         ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb3.i:                                         ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb4.i:                                         ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb5.i:                                         ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb6.i:                                         ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb7.i:                                         ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb8.i:                                         ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb9.i:                                         ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb10.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb11.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb12.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb13.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb14.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb15.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb16.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb17.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb18.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb19.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb20.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb21.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb22.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb23.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb24.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb25.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb26.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb27.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb28.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb29.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb30.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb31.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb32.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb33.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb34.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb35.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb36.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb37.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb38.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb39.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb40.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb41.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb42.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb43.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb44.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb45.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb46.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb47.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb48.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb49.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb50.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb51.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb52.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.bb53.i:                                        ; preds = %entry
  br label %dwarf_tag_name.exit

sw.default.i:                                     ; preds = %entry
  br label %dwarf_tag_name.exit

dwarf_tag_name.exit:                              ; preds = %entry, %sw.bb1.i, %sw.bb2.i, %sw.bb3.i, %sw.bb4.i, %sw.bb5.i, %sw.bb6.i, %sw.bb7.i, %sw.bb8.i, %sw.bb9.i, %sw.bb10.i, %sw.bb11.i, %sw.bb12.i, %sw.bb13.i, %sw.bb14.i, %sw.bb15.i, %sw.bb16.i, %sw.bb17.i, %sw.bb18.i, %sw.bb19.i, %sw.bb20.i, %sw.bb21.i, %sw.bb22.i, %sw.bb23.i, %sw.bb24.i, %sw.bb25.i, %sw.bb26.i, %sw.bb27.i, %sw.bb28.i, %sw.bb29.i, %sw.bb30.i, %sw.bb31.i, %sw.bb32.i, %sw.bb33.i, %sw.bb34.i, %sw.bb35.i, %sw.bb36.i, %sw.bb37.i, %sw.bb38.i, %sw.bb39.i, %sw.bb40.i, %sw.bb41.i, %sw.bb42.i, %sw.bb43.i, %sw.bb44.i, %sw.bb45.i, %sw.bb46.i, %sw.bb47.i, %sw.bb48.i, %sw.bb49.i, %sw.bb50.i, %sw.bb51.i, %sw.bb52.i, %sw.bb53.i, %sw.default.i
  %retval.0.i = phi i8* [ getelementptr inbounds ([17 x i8]* @.str209, i64 0, i64 0), %sw.default.i ], [ getelementptr inbounds ([17 x i8]* @.str208, i64 0, i64 0), %sw.bb53.i ], [ getelementptr inbounds ([17 x i8]* @.str207, i64 0, i64 0), %sw.bb52.i ], [ getelementptr inbounds ([22 x i8]* @.str206, i64 0, i64 0), %sw.bb51.i ], [ getelementptr inbounds ([25 x i8]* @.str205, i64 0, i64 0), %sw.bb50.i ], [ getelementptr inbounds ([20 x i8]* @.str204, i64 0, i64 0), %sw.bb49.i ], [ getelementptr inbounds ([17 x i8]* @.str203, i64 0, i64 0), %sw.bb48.i ], [ getelementptr inbounds ([21 x i8]* @.str202, i64 0, i64 0), %sw.bb47.i ], [ getelementptr inbounds ([16 x i8]* @.str201, i64 0, i64 0), %sw.bb46.i ], [ getelementptr inbounds ([20 x i8]* @.str200, i64 0, i64 0), %sw.bb45.i ], [ getelementptr inbounds ([17 x i8]* @.str199, i64 0, i64 0), %sw.bb44.i ], [ getelementptr inbounds ([19 x i8]* @.str198, i64 0, i64 0), %sw.bb43.i ], [ getelementptr inbounds ([28 x i8]* @.str197, i64 0, i64 0), %sw.bb42.i ], [ getelementptr inbounds ([27 x i8]* @.str196, i64 0, i64 0), %sw.bb41.i ], [ getelementptr inbounds ([18 x i8]* @.str195, i64 0, i64 0), %sw.bb40.i ], [ getelementptr inbounds ([19 x i8]* @.str194, i64 0, i64 0), %sw.bb39.i ], [ getelementptr inbounds ([21 x i8]* @.str193, i64 0, i64 0), %sw.bb38.i ], [ getelementptr inbounds ([16 x i8]* @.str192, i64 0, i64 0), %sw.bb37.i ], [ getelementptr inbounds ([14 x i8]* @.str191, i64 0, i64 0), %sw.bb36.i ], [ getelementptr inbounds ([17 x i8]* @.str190, i64 0, i64 0), %sw.bb35.i ], [ getelementptr inbounds ([18 x i8]* @.str189, i64 0, i64 0), %sw.bb34.i ], [ getelementptr inbounds ([16 x i8]* @.str188, i64 0, i64 0), %sw.bb33.i ], [ getelementptr inbounds ([18 x i8]* @.str187, i64 0, i64 0), %sw.bb32.i ], [ getelementptr inbounds ([19 x i8]* @.str186, i64 0, i64 0), %sw.bb31.i ], [ getelementptr inbounds ([17 x i8]* @.str185, i64 0, i64 0), %sw.bb30.i ], [ getelementptr inbounds ([26 x i8]* @.str184, i64 0, i64 0), %sw.bb29.i ], [ getelementptr inbounds ([17 x i8]* @.str183, i64 0, i64 0), %sw.bb28.i ], [ getelementptr inbounds ([21 x i8]* @.str182, i64 0, i64 0), %sw.bb27.i ], [ getelementptr inbounds ([16 x i8]* @.str181, i64 0, i64 0), %sw.bb26.i ], [ getelementptr inbounds ([26 x i8]* @.str180, i64 0, i64 0), %sw.bb25.i ], [ getelementptr inbounds ([14 x i8]* @.str179, i64 0, i64 0), %sw.bb24.i ], [ getelementptr inbounds ([26 x i8]* @.str178, i64 0, i64 0), %sw.bb23.i ], [ getelementptr inbounds ([19 x i8]* @.str177, i64 0, i64 0), %sw.bb22.i ], [ getelementptr inbounds ([24 x i8]* @.str176, i64 0, i64 0), %sw.bb21.i ], [ getelementptr inbounds ([20 x i8]* @.str175, i64 0, i64 0), %sw.bb20.i ], [ getelementptr inbounds ([15 x i8]* @.str174, i64 0, i64 0), %sw.bb19.i ], [ getelementptr inbounds ([30 x i8]* @.str173, i64 0, i64 0), %sw.bb18.i ], [ getelementptr inbounds ([18 x i8]* @.str172, i64 0, i64 0), %sw.bb17.i ], [ getelementptr inbounds ([15 x i8]* @.str171, i64 0, i64 0), %sw.bb16.i ], [ getelementptr inbounds ([23 x i8]* @.str170, i64 0, i64 0), %sw.bb15.i ], [ getelementptr inbounds ([22 x i8]* @.str169, i64 0, i64 0), %sw.bb14.i ], [ getelementptr inbounds ([19 x i8]* @.str168, i64 0, i64 0), %sw.bb13.i ], [ getelementptr inbounds ([20 x i8]* @.str167, i64 0, i64 0), %sw.bb12.i ], [ getelementptr inbounds ([22 x i8]* @.str166, i64 0, i64 0), %sw.bb11.i ], [ getelementptr inbounds ([20 x i8]* @.str165, i64 0, i64 0), %sw.bb10.i ], [ getelementptr inbounds ([14 x i8]* @.str164, i64 0, i64 0), %sw.bb9.i ], [ getelementptr inbounds ([21 x i8]* @.str163, i64 0, i64 0), %sw.bb8.i ], [ getelementptr inbounds ([13 x i8]* @.str162, i64 0, i64 0), %sw.bb7.i ], [ getelementptr inbounds ([28 x i8]* @.str161, i64 0, i64 0), %sw.bb6.i ], [ getelementptr inbounds ([24 x i8]* @.str160, i64 0, i64 0), %sw.bb5.i ], [ getelementptr inbounds ([24 x i8]* @.str159, i64 0, i64 0), %sw.bb4.i ], [ getelementptr inbounds ([19 x i8]* @.str158, i64 0, i64 0), %sw.bb3.i ], [ getelementptr inbounds ([18 x i8]* @.str157, i64 0, i64 0), %sw.bb2.i ], [ getelementptr inbounds ([18 x i8]* @.str156, i64 0, i64 0), %sw.bb1.i ], [ getelementptr inbounds ([15 x i8]* @.str155, i64 0, i64 0), %entry ]
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([14 x i8]* @.str419, i64 0, i64 0), i64 %1, i8* %retval.0.i) #5
  %3 = load i32* @print_indent, align 4, !tbaa !4
  %call.i123 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([4 x i8]* @.str439, i64 0, i64 0), i32 %3, i8* getelementptr inbounds ([1 x i8]* @.str440, i64 0, i64 0)) #5
  %die_abbrev = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 7
  %4 = load i64* %die_abbrev, align 8, !tbaa !95
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([17 x i8]* @.str420, i64 0, i64 0), i64 %4) #5
  %5 = load i64* %die_offset, align 8, !tbaa !78
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([14 x i8]* @.str421, i64 0, i64 0), i64 %5) #5
  %die_attr = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %a.0248 = load %struct.dw_attr_struct** %die_attr, align 8
  %cmp249 = icmp eq %struct.dw_attr_struct* %a.0248, null
  br i1 %cmp249, label %for.end, label %for.body

for.body:                                         ; preds = %dwarf_tag_name.exit, %sw.epilog
  %a.0250 = phi %struct.dw_attr_struct* [ %a.0, %sw.epilog ], [ %a.0248, %dwarf_tag_name.exit ]
  %6 = load i32* @print_indent, align 4, !tbaa !4
  %call.i124 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([4 x i8]* @.str439, i64 0, i64 0), i32 %6, i8* getelementptr inbounds ([1 x i8]* @.str440, i64 0, i64 0)) #5
  %dw_attr = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 0
  %7 = load i32* %dw_attr, align 4, !tbaa !57
  switch i32 %7, label %sw.default.i178 [
    i32 1, label %dwarf_attr_name.exit
    i32 2, label %sw.bb1.i125
    i32 3, label %sw.bb2.i126
    i32 9, label %sw.bb3.i127
    i32 10, label %sw.bb4.i128
    i32 11, label %sw.bb5.i129
    i32 12, label %sw.bb6.i130
    i32 13, label %sw.bb7.i131
    i32 15, label %sw.bb8.i132
    i32 16, label %sw.bb9.i133
    i32 17, label %sw.bb10.i134
    i32 18, label %sw.bb11.i135
    i32 19, label %sw.bb12.i136
    i32 20, label %sw.bb13.i137
    i32 21, label %sw.bb14.i138
    i32 22, label %sw.bb15.i139
    i32 23, label %sw.bb16.i140
    i32 24, label %sw.bb17.i141
    i32 25, label %sw.bb18.i142
    i32 26, label %sw.bb19.i143
    i32 27, label %sw.bb20.i144
    i32 28, label %sw.bb21.i145
    i32 29, label %sw.bb22.i146
    i32 30, label %sw.bb23.i147
    i32 32, label %sw.bb24.i148
    i32 33, label %sw.bb25.i149
    i32 34, label %sw.bb26.i150
    i32 37, label %sw.bb27.i151
    i32 39, label %sw.bb28.i152
    i32 42, label %sw.bb29.i153
    i32 44, label %sw.bb30.i154
    i32 46, label %sw.bb31.i155
    i32 47, label %sw.bb32.i156
    i32 49, label %sw.bb33.i157
    i32 50, label %sw.bb34.i158
    i32 51, label %sw.bb35.i159
    i32 52, label %sw.bb36.i160
    i32 53, label %sw.bb37.i161
    i32 54, label %sw.bb38.i162
    i32 55, label %sw.bb39.i163
    i32 56, label %sw.bb40.i164
    i32 57, label %sw.bb41.i165
    i32 58, label %sw.bb42.i166
    i32 59, label %sw.bb43.i167
    i32 60, label %sw.bb44.i168
    i32 61, label %sw.bb45.i169
    i32 62, label %sw.bb46.i170
    i32 63, label %sw.bb47.i171
    i32 64, label %sw.bb48.i172
    i32 65, label %sw.bb49.i173
    i32 66, label %sw.bb50.i174
    i32 67, label %sw.bb51.i175
    i32 68, label %sw.bb52.i176
    i32 69, label %sw.bb53.i177
    i32 70, label %sw.bb54.i
    i32 71, label %sw.bb55.i
    i32 72, label %sw.bb56.i
    i32 73, label %sw.bb57.i
    i32 74, label %sw.bb58.i
    i32 75, label %sw.bb59.i
    i32 76, label %sw.bb60.i
    i32 77, label %sw.bb61.i
    i32 78, label %sw.bb62.i
    i32 79, label %sw.bb63.i
    i32 80, label %sw.bb64.i
    i32 81, label %sw.bb65.i
    i32 82, label %sw.bb66.i
    i32 83, label %sw.bb67.i
    i32 84, label %sw.bb68.i
    i32 85, label %sw.bb69.i
    i32 86, label %sw.bb70.i
    i32 87, label %sw.bb71.i
    i32 88, label %sw.bb72.i
    i32 89, label %sw.bb73.i
    i32 8193, label %sw.bb74.i
    i32 8194, label %sw.bb75.i
    i32 8195, label %sw.bb76.i
    i32 8196, label %sw.bb77.i
    i32 8197, label %sw.bb78.i
    i32 8198, label %sw.bb79.i
    i32 8199, label %sw.bb80.i
    i32 8200, label %sw.bb81.i
    i32 8201, label %sw.bb82.i
    i32 8202, label %sw.bb83.i
    i32 8203, label %sw.bb84.i
    i32 8449, label %sw.bb85.i
    i32 8450, label %sw.bb86.i
    i32 8451, label %sw.bb87.i
    i32 8452, label %sw.bb88.i
    i32 8453, label %sw.bb89.i
    i32 8454, label %sw.bb90.i
    i32 8455, label %sw.bb91.i
    i32 8705, label %sw.bb92.i
  ]

sw.bb1.i125:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb2.i126:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb3.i127:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb4.i128:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb5.i129:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb6.i130:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb7.i131:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb8.i132:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb9.i133:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb10.i134:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb11.i135:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb12.i136:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb13.i137:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb14.i138:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb15.i139:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb16.i140:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb17.i141:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb18.i142:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb19.i143:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb20.i144:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb21.i145:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb22.i146:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb23.i147:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb24.i148:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb25.i149:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb26.i150:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb27.i151:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb28.i152:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb29.i153:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb30.i154:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb31.i155:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb32.i156:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb33.i157:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb34.i158:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb35.i159:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb36.i160:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb37.i161:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb38.i162:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb39.i163:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb40.i164:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb41.i165:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb42.i166:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb43.i167:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb44.i168:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb45.i169:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb46.i170:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb47.i171:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb48.i172:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb49.i173:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb50.i174:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb51.i175:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb52.i176:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb53.i177:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb54.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb55.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb56.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb57.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb58.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb59.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb60.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb61.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb62.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb63.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb64.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb65.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb66.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb67.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb68.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb69.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb70.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb71.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb72.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb73.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb74.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb75.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb76.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb77.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb78.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb79.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb80.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb81.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb82.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb83.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb84.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb85.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb86.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb87.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb88.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb89.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb90.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb91.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb92.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.default.i178:                                  ; preds = %for.body
  br label %dwarf_attr_name.exit

dwarf_attr_name.exit:                             ; preds = %for.body, %sw.bb1.i125, %sw.bb2.i126, %sw.bb3.i127, %sw.bb4.i128, %sw.bb5.i129, %sw.bb6.i130, %sw.bb7.i131, %sw.bb8.i132, %sw.bb9.i133, %sw.bb10.i134, %sw.bb11.i135, %sw.bb12.i136, %sw.bb13.i137, %sw.bb14.i138, %sw.bb15.i139, %sw.bb16.i140, %sw.bb17.i141, %sw.bb18.i142, %sw.bb19.i143, %sw.bb20.i144, %sw.bb21.i145, %sw.bb22.i146, %sw.bb23.i147, %sw.bb24.i148, %sw.bb25.i149, %sw.bb26.i150, %sw.bb27.i151, %sw.bb28.i152, %sw.bb29.i153, %sw.bb30.i154, %sw.bb31.i155, %sw.bb32.i156, %sw.bb33.i157, %sw.bb34.i158, %sw.bb35.i159, %sw.bb36.i160, %sw.bb37.i161, %sw.bb38.i162, %sw.bb39.i163, %sw.bb40.i164, %sw.bb41.i165, %sw.bb42.i166, %sw.bb43.i167, %sw.bb44.i168, %sw.bb45.i169, %sw.bb46.i170, %sw.bb47.i171, %sw.bb48.i172, %sw.bb49.i173, %sw.bb50.i174, %sw.bb51.i175, %sw.bb52.i176, %sw.bb53.i177, %sw.bb54.i, %sw.bb55.i, %sw.bb56.i, %sw.bb57.i, %sw.bb58.i, %sw.bb59.i, %sw.bb60.i, %sw.bb61.i, %sw.bb62.i, %sw.bb63.i, %sw.bb64.i, %sw.bb65.i, %sw.bb66.i, %sw.bb67.i, %sw.bb68.i, %sw.bb69.i, %sw.bb70.i, %sw.bb71.i, %sw.bb72.i, %sw.bb73.i, %sw.bb74.i, %sw.bb75.i, %sw.bb76.i, %sw.bb77.i, %sw.bb78.i, %sw.bb79.i, %sw.bb80.i, %sw.bb81.i, %sw.bb82.i, %sw.bb83.i, %sw.bb84.i, %sw.bb85.i, %sw.bb86.i, %sw.bb87.i, %sw.bb88.i, %sw.bb89.i, %sw.bb90.i, %sw.bb91.i, %sw.bb92.i, %sw.default.i178
  %retval.0.i179 = phi i8* [ getelementptr inbounds ([16 x i8]* @.str154, i64 0, i64 0), %sw.default.i178 ], [ getelementptr inbounds ([28 x i8]* @.str153, i64 0, i64 0), %sw.bb92.i ], [ getelementptr inbounds ([17 x i8]* @.str152, i64 0, i64 0), %sw.bb91.i ], [ getelementptr inbounds ([15 x i8]* @.str151, i64 0, i64 0), %sw.bb90.i ], [ getelementptr inbounds ([17 x i8]* @.str150, i64 0, i64 0), %sw.bb89.i ], [ getelementptr inbounds ([17 x i8]* @.str149, i64 0, i64 0), %sw.bb88.i ], [ getelementptr inbounds ([15 x i8]* @.str148, i64 0, i64 0), %sw.bb87.i ], [ getelementptr inbounds ([15 x i8]* @.str147, i64 0, i64 0), %sw.bb86.i ], [ getelementptr inbounds ([15 x i8]* @.str146, i64 0, i64 0), %sw.bb85.i ], [ getelementptr inbounds ([23 x i8]* @.str145, i64 0, i64 0), %sw.bb84.i ], [ getelementptr inbounds ([24 x i8]* @.str144, i64 0, i64 0), %sw.bb83.i ], [ getelementptr inbounds ([25 x i8]* @.str143, i64 0, i64 0), %sw.bb82.i ], [ getelementptr inbounds ([18 x i8]* @.str142, i64 0, i64 0), %sw.bb81.i ], [ getelementptr inbounds ([24 x i8]* @.str141, i64 0, i64 0), %sw.bb80.i ], [ getelementptr inbounds ([35 x i8]* @.str140, i64 0, i64 0), %sw.bb79.i ], [ getelementptr inbounds ([30 x i8]* @.str139, i64 0, i64 0), %sw.bb78.i ], [ getelementptr inbounds ([24 x i8]* @.str138, i64 0, i64 0), %sw.bb77.i ], [ getelementptr inbounds ([27 x i8]* @.str137, i64 0, i64 0), %sw.bb76.i ], [ getelementptr inbounds ([22 x i8]* @.str136, i64 0, i64 0), %sw.bb75.i ], [ getelementptr inbounds ([15 x i8]* @.str135, i64 0, i64 0), %sw.bb74.i ], [ getelementptr inbounds ([16 x i8]* @.str134, i64 0, i64 0), %sw.bb73.i ], [ getelementptr inbounds ([16 x i8]* @.str133, i64 0, i64 0), %sw.bb72.i ], [ getelementptr inbounds ([18 x i8]* @.str132, i64 0, i64 0), %sw.bb71.i ], [ getelementptr inbounds ([17 x i8]* @.str131, i64 0, i64 0), %sw.bb70.i ], [ getelementptr inbounds ([13 x i8]* @.str130, i64 0, i64 0), %sw.bb69.i ], [ getelementptr inbounds ([16 x i8]* @.str129, i64 0, i64 0), %sw.bb68.i ], [ getelementptr inbounds ([15 x i8]* @.str128, i64 0, i64 0), %sw.bb67.i ], [ getelementptr inbounds ([15 x i8]* @.str127, i64 0, i64 0), %sw.bb66.i ], [ getelementptr inbounds ([13 x i8]* @.str126, i64 0, i64 0), %sw.bb65.i ], [ getelementptr inbounds ([20 x i8]* @.str125, i64 0, i64 0), %sw.bb64.i ], [ getelementptr inbounds ([17 x i8]* @.str124, i64 0, i64 0), %sw.bb63.i ], [ getelementptr inbounds ([16 x i8]* @.str123, i64 0, i64 0), %sw.bb62.i ], [ getelementptr inbounds ([27 x i8]* @.str122, i64 0, i64 0), %sw.bb61.i ], [ getelementptr inbounds ([17 x i8]* @.str121, i64 0, i64 0), %sw.bb60.i ], [ getelementptr inbounds ([25 x i8]* @.str120, i64 0, i64 0), %sw.bb59.i ], [ getelementptr inbounds ([19 x i8]* @.str119, i64 0, i64 0), %sw.bb58.i ], [ getelementptr inbounds ([11 x i8]* @.str118, i64 0, i64 0), %sw.bb57.i ], [ getelementptr inbounds ([18 x i8]* @.str117, i64 0, i64 0), %sw.bb56.i ], [ getelementptr inbounds ([20 x i8]* @.str116, i64 0, i64 0), %sw.bb55.i ], [ getelementptr inbounds ([14 x i8]* @.str115, i64 0, i64 0), %sw.bb54.i ], [ getelementptr inbounds ([15 x i8]* @.str114, i64 0, i64 0), %sw.bb53.i177 ], [ getelementptr inbounds ([21 x i8]* @.str113, i64 0, i64 0), %sw.bb52.i176 ], [ getelementptr inbounds ([17 x i8]* @.str112, i64 0, i64 0), %sw.bb51.i175 ], [ getelementptr inbounds ([22 x i8]* @.str111, i64 0, i64 0), %sw.bb50.i174 ], [ getelementptr inbounds ([13 x i8]* @.str110, i64 0, i64 0), %sw.bb49.i173 ], [ getelementptr inbounds ([17 x i8]* @.str109, i64 0, i64 0), %sw.bb48.i172 ], [ getelementptr inbounds ([15 x i8]* @.str108, i64 0, i64 0), %sw.bb47.i171 ], [ getelementptr inbounds ([15 x i8]* @.str107, i64 0, i64 0), %sw.bb46.i170 ], [ getelementptr inbounds ([17 x i8]* @.str106, i64 0, i64 0), %sw.bb45.i169 ], [ getelementptr inbounds ([18 x i8]* @.str105, i64 0, i64 0), %sw.bb44.i168 ], [ getelementptr inbounds ([16 x i8]* @.str104, i64 0, i64 0), %sw.bb43.i167 ], [ getelementptr inbounds ([16 x i8]* @.str103, i64 0, i64 0), %sw.bb42.i166 ], [ getelementptr inbounds ([18 x i8]* @.str102, i64 0, i64 0), %sw.bb41.i165 ], [ getelementptr inbounds ([27 x i8]* @.str101, i64 0, i64 0), %sw.bb40.i164 ], [ getelementptr inbounds ([12 x i8]* @.str100, i64 0, i64 0), %sw.bb39.i163 ], [ getelementptr inbounds ([25 x i8]* @.str99, i64 0, i64 0), %sw.bb38.i162 ], [ getelementptr inbounds ([17 x i8]* @.str98, i64 0, i64 0), %sw.bb37.i161 ], [ getelementptr inbounds ([17 x i8]* @.str97, i64 0, i64 0), %sw.bb36.i160 ], [ getelementptr inbounds ([20 x i8]* @.str96, i64 0, i64 0), %sw.bb35.i159 ], [ getelementptr inbounds ([20 x i8]* @.str95, i64 0, i64 0), %sw.bb34.i158 ], [ getelementptr inbounds ([22 x i8]* @.str94, i64 0, i64 0), %sw.bb33.i157 ], [ getelementptr inbounds ([18 x i8]* @.str93, i64 0, i64 0), %sw.bb32.i156 ], [ getelementptr inbounds ([18 x i8]* @.str92, i64 0, i64 0), %sw.bb31.i155 ], [ getelementptr inbounds ([18 x i8]* @.str91, i64 0, i64 0), %sw.bb30.i154 ], [ getelementptr inbounds ([18 x i8]* @.str90, i64 0, i64 0), %sw.bb29.i153 ], [ getelementptr inbounds ([17 x i8]* @.str89, i64 0, i64 0), %sw.bb28.i152 ], [ getelementptr inbounds ([15 x i8]* @.str88, i64 0, i64 0), %sw.bb27.i151 ], [ getelementptr inbounds ([18 x i8]* @.str87, i64 0, i64 0), %sw.bb26.i150 ], [ getelementptr inbounds ([18 x i8]* @.str86, i64 0, i64 0), %sw.bb25.i149 ], [ getelementptr inbounds ([13 x i8]* @.str85, i64 0, i64 0), %sw.bb24.i148 ], [ getelementptr inbounds ([20 x i8]* @.str84, i64 0, i64 0), %sw.bb23.i147 ], [ getelementptr inbounds ([22 x i8]* @.str83, i64 0, i64 0), %sw.bb22.i146 ], [ getelementptr inbounds ([18 x i8]* @.str82, i64 0, i64 0), %sw.bb21.i145 ], [ getelementptr inbounds ([15 x i8]* @.str81, i64 0, i64 0), %sw.bb20.i144 ], [ getelementptr inbounds ([23 x i8]* @.str80, i64 0, i64 0), %sw.bb19.i143 ], [ getelementptr inbounds ([20 x i8]* @.str79, i64 0, i64 0), %sw.bb18.i142 ], [ getelementptr inbounds ([13 x i8]* @.str78, i64 0, i64 0), %sw.bb17.i141 ], [ getelementptr inbounds ([17 x i8]* @.str77, i64 0, i64 0), %sw.bb16.i140 ], [ getelementptr inbounds ([18 x i8]* @.str76, i64 0, i64 0), %sw.bb15.i139 ], [ getelementptr inbounds ([12 x i8]* @.str75, i64 0, i64 0), %sw.bb14.i138 ], [ getelementptr inbounds ([13 x i8]* @.str74, i64 0, i64 0), %sw.bb13.i137 ], [ getelementptr inbounds ([15 x i8]* @.str73, i64 0, i64 0), %sw.bb12.i136 ], [ getelementptr inbounds ([14 x i8]* @.str72, i64 0, i64 0), %sw.bb11.i135 ], [ getelementptr inbounds ([13 x i8]* @.str71, i64 0, i64 0), %sw.bb10.i134 ], [ getelementptr inbounds ([16 x i8]* @.str70, i64 0, i64 0), %sw.bb9.i133 ], [ getelementptr inbounds ([19 x i8]* @.str69, i64 0, i64 0), %sw.bb8.i132 ], [ getelementptr inbounds ([15 x i8]* @.str68, i64 0, i64 0), %sw.bb7.i131 ], [ getelementptr inbounds ([17 x i8]* @.str67, i64 0, i64 0), %sw.bb6.i130 ], [ getelementptr inbounds ([16 x i8]* @.str66, i64 0, i64 0), %sw.bb5.i129 ], [ getelementptr inbounds ([18 x i8]* @.str65, i64 0, i64 0), %sw.bb4.i128 ], [ getelementptr inbounds ([15 x i8]* @.str64, i64 0, i64 0), %sw.bb3.i127 ], [ getelementptr inbounds ([11 x i8]* @.str63, i64 0, i64 0), %sw.bb2.i126 ], [ getelementptr inbounds ([15 x i8]* @.str62, i64 0, i64 0), %sw.bb1.i125 ], [ getelementptr inbounds ([14 x i8]* @.str61, i64 0, i64 0), %for.body ]
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([7 x i8]* @.str422, i64 0, i64 0), i8* %retval.0.i179) #5
  %a.0.idx = getelementptr %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 0
  %a.0.idx.val = load i32* %a.0.idx, align 4, !tbaa !59
  switch i32 %a.0.idx.val, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb11
    i32 3, label %AT_loc_list.exit
    i32 4, label %sw.bb16
    i32 5, label %AT_int.exit
    i32 6, label %AT_unsigned.exit
    i32 7, label %sw.bb24
    i32 8, label %sw.bb29
    i32 9, label %AT_flag.exit
    i32 10, label %AT_ref.exit
    i32 12, label %land.lhs.true.i242
    i32 13, label %land.lhs.true.i242
    i32 14, label %AT_string.exit189
  ]

sw.bb:                                            ; preds = %dwarf_attr_name.exit
  %8 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str423, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %outfile)
  br label %sw.epilog

sw.bb9:                                           ; preds = %dwarf_attr_name.exit
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8]* @.str424, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %outfile)
  br label %sw.epilog

sw.bb11:                                          ; preds = %dwarf_attr_name.exit
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([20 x i8]* @.str425, i64 0, i64 0), i64 19, i64 1, %struct._IO_FILE* %outfile)
  br label %sw.epilog

AT_loc_list.exit:                                 ; preds = %dwarf_attr_name.exit
  %v.i195 = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 1
  %val_loc_list.i = bitcast %union.anon.3* %v.i195 to %struct.dw_loc_list_struct**
  %11 = load %struct.dw_loc_list_struct** %val_loc_list.i, align 8, !tbaa !6
  %ll_symbol = getelementptr inbounds %struct.dw_loc_list_struct* %11, i64 0, i32 3
  %12 = load i8** %ll_symbol, align 8, !tbaa !96
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([26 x i8]* @.str426, i64 0, i64 0), i8* %12) #5
  br label %sw.epilog

sw.bb16:                                          ; preds = %dwarf_attr_name.exit
  %13 = tail call i64 @fwrite(i8* getelementptr inbounds ([11 x i8]* @.str427, i64 0, i64 0), i64 10, i64 1, %struct._IO_FILE* %outfile)
  br label %sw.epilog

AT_int.exit:                                      ; preds = %dwarf_attr_name.exit
  %val_int.i = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i64* %val_int.i, align 8, !tbaa !8
  %call20 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([4 x i8]* @.str428, i64 0, i64 0), i64 %14) #5
  br label %sw.epilog

AT_unsigned.exit:                                 ; preds = %dwarf_attr_name.exit
  %val_unsigned.i = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 1, i32 0, i32 0
  %15 = load i64* %val_unsigned.i, align 8, !tbaa !8
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([4 x i8]* @.str429, i64 0, i64 0), i64 %15) #5
  br label %sw.epilog

sw.bb24:                                          ; preds = %dwarf_attr_name.exit
  %hi = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 1, i32 0, i32 0
  %16 = load i64* %hi, align 8, !tbaa !98
  %low = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 1, i32 0, i32 1
  %17 = load i64* %low, align 8, !tbaa !100
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([19 x i8]* @.str430, i64 0, i64 0), i64 %16, i64 %17) #5
  br label %sw.epilog

sw.bb29:                                          ; preds = %dwarf_attr_name.exit
  %18 = tail call i64 @fwrite(i8* getelementptr inbounds ([24 x i8]* @.str431, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %outfile)
  br label %sw.epilog

AT_flag.exit:                                     ; preds = %dwarf_attr_name.exit
  %v.i214 = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 1
  %val_flag.i = bitcast %union.anon.3* %v.i214 to i8*
  %19 = load i8* %val_flag.i, align 1, !tbaa !1
  %conv.i = zext i8 %19 to i32
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([3 x i8]* @.str432, i64 0, i64 0), i32 %conv.i) #5
  br label %sw.epilog

AT_ref.exit:                                      ; preds = %dwarf_attr_name.exit
  %v.i221 = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 1
  %die.i = bitcast %union.anon.3* %v.i221 to %struct.die_struct**
  %20 = load %struct.die_struct** %die.i, align 8, !tbaa !60
  %cmp36 = icmp eq %struct.die_struct* %20, null
  br i1 %cmp36, label %if.else45, label %AT_ref.exit240

AT_ref.exit240:                                   ; preds = %AT_ref.exit
  %die_symbol = getelementptr inbounds %struct.die_struct* %20, i64 0, i32 1
  %21 = load i8** %die_symbol, align 8, !tbaa !101
  %tobool = icmp eq i8* %21, null
  br i1 %tobool, label %if.else, label %if.then38

if.then38:                                        ; preds = %AT_ref.exit240
  %call41 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([17 x i8]* @.str433, i64 0, i64 0), i8* %21) #5
  br label %sw.epilog

if.else:                                          ; preds = %AT_ref.exit240
  %die_offset43 = getelementptr inbounds %struct.die_struct* %20, i64 0, i32 6
  %22 = load i64* %die_offset43, align 8, !tbaa !78
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([11 x i8]* @.str434, i64 0, i64 0), i64 %22) #5
  br label %sw.epilog

if.else45:                                        ; preds = %AT_ref.exit
  %23 = tail call i64 @fwrite(i8* getelementptr inbounds ([14 x i8]* @.str435, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %outfile)
  br label %sw.epilog

land.lhs.true.i242:                               ; preds = %dwarf_attr_name.exit, %dwarf_attr_name.exit
  %24 = and i32 %a.0.idx.val, -2
  %switch.i = icmp eq i32 %24, 12
  br i1 %switch.i, label %AT_lbl.exit, label %if.end.i244

if.end.i244:                                      ; preds = %land.lhs.true.i242
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4785, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_lbl, i64 0, i64 0)) #7
  unreachable

AT_lbl.exit:                                      ; preds = %land.lhs.true.i242
  %v.i243 = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 1
  %val_lbl_id.i = bitcast %union.anon.3* %v.i243 to i8**
  %25 = load i8** %val_lbl_id.i, align 8, !tbaa !6
  %call50 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([10 x i8]* @.str436, i64 0, i64 0), i8* %25) #5
  br label %sw.epilog

AT_string.exit189:                                ; preds = %dwarf_attr_name.exit
  %v.i185 = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 2, i32 1
  %val_str.i186 = bitcast %union.anon.3* %v.i185 to %struct.indirect_string_node**
  %26 = load %struct.indirect_string_node** %val_str.i186, align 8, !tbaa !6
  %str.i187 = getelementptr inbounds %struct.indirect_string_node* %26, i64 0, i32 0, i32 1
  %27 = load i8** %str.i187, align 8, !tbaa !70
  %cmp53 = icmp eq i8* %27, null
  br i1 %cmp53, label %if.else57, label %AT_string.exit

AT_string.exit:                                   ; preds = %AT_string.exit189
  %call56 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outfile, i8* getelementptr inbounds ([5 x i8]* @.str437, i64 0, i64 0), i8* %27) #5
  br label %sw.epilog

if.else57:                                        ; preds = %AT_string.exit189
  %28 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8]* @.str438, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %outfile)
  br label %sw.epilog

sw.epilog:                                        ; preds = %dwarf_attr_name.exit, %AT_string.exit, %if.else57, %if.else45, %if.else, %if.then38, %AT_lbl.exit, %AT_flag.exit, %sw.bb29, %sw.bb24, %AT_unsigned.exit, %AT_int.exit, %sw.bb16, %AT_loc_list.exit, %sw.bb11, %sw.bb9, %sw.bb
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %outfile)
  %dw_attr_next = getelementptr inbounds %struct.dw_attr_struct* %a.0250, i64 0, i32 1
  %a.0 = load %struct.dw_attr_struct** %dw_attr_next, align 8
  %cmp = icmp eq %struct.dw_attr_struct* %a.0, null
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %sw.epilog, %dwarf_tag_name.exit
  %die_child = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %29 = load %struct.die_struct** %die_child, align 8, !tbaa !62
  %cmp61 = icmp eq %struct.die_struct* %29, null
  %.pr = load i32* @print_indent, align 4, !tbaa !4
  br i1 %cmp61, label %if.end69, label %for.body66.lr.ph

for.body66.lr.ph:                                 ; preds = %for.end
  %add = add nsw i32 %.pr, 4
  store i32 %add, i32* @print_indent, align 4, !tbaa !4
  br label %for.body66

for.body66:                                       ; preds = %for.body66.lr.ph, %for.body66
  %c.0247 = phi %struct.die_struct* [ %29, %for.body66.lr.ph ], [ %c.0, %for.body66 ]
  tail call fastcc void @print_die(%struct.die_struct* %c.0247, %struct._IO_FILE* %outfile)
  %die_sib = getelementptr inbounds %struct.die_struct* %c.0247, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib, align 8
  %cmp65 = icmp eq %struct.die_struct* %c.0, null
  br i1 %cmp65, label %for.end68, label %for.body66

for.end68:                                        ; preds = %for.body66
  %.pre = load i32* @print_indent, align 4, !tbaa !4
  %sub = add nsw i32 %.pre, -4
  store i32 %sub, i32* @print_indent, align 4, !tbaa !4
  br label %if.end69

if.end69:                                         ; preds = %for.end, %for.end68
  %30 = phi i32 [ %sub, %for.end68 ], [ %.pr, %for.end ]
  %cmp70 = icmp eq i32 %30, 0
  br i1 %cmp70, label %if.then71, label %if.end73

if.then71:                                        ; preds = %if.end69
  %fputc122 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %outfile)
  br label %if.end73

if.end73:                                         ; preds = %if.then71, %if.end69
  ret void
}

; Function Attrs: nounwind uwtable
define void @debug_dwarf() #1 {
entry:
  store i32 0, i32* @print_indent, align 4, !tbaa !4
  %0 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !6
  tail call fastcc void @print_die(%struct.die_struct* %0, %struct._IO_FILE* %1)
  ret void
}

; Function Attrs: nounwind uwtable
define void @dwarf2out_add_library_unit_info(i8* %filename, i8* %context_list) #1 {
entry:
  %cmp = icmp eq i8* %filename, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %1 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 30, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i = icmp eq %struct.die_struct* %0, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %new_die.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %1, %0
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %2 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %0, %struct.die_struct** %2, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %0, i64 0, i32 4
  %3 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %4 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %3, %struct.die_struct** %4, align 8, !tbaa !63
  store %struct.die_struct* %1, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i:                                        ; preds = %if.then
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #5
  %5 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %1, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %6 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %6, align 8, !tbaa !64
  %7 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %8 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %7, %struct.limbo_die_struct** %8, align 8, !tbaa !52
  store %struct.limbo_die_struct* %5, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %call1 = tail call %union.tree_node* @get_identifier(i8* %context_list) #5
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %call2 = tail call %union.tree_node* @build_decl(i32 31, %union.tree_node* %call1, %union.tree_node* %9) #5
  %public_flag = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %public_flag, align 8
  %bf.set = or i32 %bf.load, 524288
  store i32 %bf.set, i32* %public_flag, align 8
  %cmp.i9 = icmp eq i8* %context_list, null
  br i1 %cmp.i9, label %add_name_attribute.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %new_die.exit
  %10 = load i8* %context_list, align 1, !tbaa !1
  %cmp1.i = icmp eq i8 %10, 0
  br i1 %cmp1.i, label %add_name_attribute.exit, label %if.then.i10

if.then.i10:                                      ; preds = %land.lhs.true.i
  %11 = load i8* (i8*)** @demangle_name_func, align 8, !tbaa !6
  %tobool.i = icmp eq i8* (i8*)* %11, null
  br i1 %tobool.i, label %if.end.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i10
  %call.i11 = tail call i8* %11(i8* %context_list) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i10
  %name_string.addr.0.i = phi i8* [ %call.i11, %if.then3.i ], [ %context_list, %if.then.i10 ]
  %call.i.i = tail call noalias i8* @xmalloc(i64 40) #5
  %12 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %13 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i.i = icmp eq %struct.ht* %13, null
  br i1 %tobool.i.i, label %if.then.i.i12, label %if.end.i.i13

if.then.i.i12:                                    ; preds = %if.end.i
  %call1.i.i = tail call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i.i, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i.i = getelementptr inbounds %struct.ht* %call1.i.i, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i.i, align 8, !tbaa !81
  %.pre.i.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i.i13

if.end.i.i13:                                     ; preds = %if.then.i.i12, %if.end.i
  %14 = phi %struct.ht* [ %13, %if.end.i ], [ %.pre.i.i, %if.then.i.i12 ]
  %call2.i.i = tail call i64 @strlen(i8* %name_string.addr.0.i) #5
  %conv.i.i = trunc i64 %call2.i.i to i32
  %call3.i.i = tail call %struct.ht_identifier* @ht_lookup(%struct.ht* %14, i8* %name_string.addr.0.i, i32 %conv.i.i, i32 1) #5
  %15 = bitcast %struct.ht_identifier* %call3.i.i to %struct.indirect_string_node*
  %16 = getelementptr inbounds %struct.ht_identifier* %call3.i.i, i64 1, i32 0
  %17 = load i32* %16, align 4, !tbaa !84
  %inc.i.i = add i32 %17, 1
  store i32 %inc.i.i, i32* %16, align 4, !tbaa !84
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %18 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %18, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i.i to i32*
  store i32 3, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 14, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_str.i.i = bitcast i8* %v.i.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %15, %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %cmp.i.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i.i = icmp ne i8* %call.i.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %add_name_attribute.exit

if.then.i.i.i:                                    ; preds = %if.end.i.i13
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i, i64 16
  %19 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %20 = load %struct.dw_attr_struct** %19, align 8, !tbaa !73
  store %struct.dw_attr_struct* %20, %struct.dw_attr_struct** %18, align 8, !tbaa !72
  store %struct.dw_attr_struct* %12, %struct.dw_attr_struct** %19, align 8, !tbaa !73
  br label %add_name_attribute.exit

add_name_attribute.exit:                          ; preds = %new_die.exit, %land.lhs.true.i, %if.end.i.i13, %if.then.i.i.i
  %call3 = tail call fastcc i32 @lookup_filename(i8* %filename)
  %conv = zext i32 %call3 to i64
  %call.i14 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i14, i64 8
  %21 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %21, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i14 to i32*
  store i32 58, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i14, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 6, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i14, i64 24
  %val_unsigned.i = bitcast i8* %v.i to i64*
  store i64 %conv, i64* %val_unsigned.i, align 8, !tbaa !8
  %cmp.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i15 = icmp ne i8* %call.i14, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i15
  br i1 %or.cond.i.i, label %if.then.i.i16, label %add_AT_unsigned.exit

if.then.i.i16:                                    ; preds = %add_name_attribute.exit
  %22 = bitcast i8* %call.i14 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds i8* %call.i, i64 16
  %23 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %24 = load %struct.dw_attr_struct** %23, align 8, !tbaa !73
  store %struct.dw_attr_struct* %24, %struct.dw_attr_struct** %21, align 8, !tbaa !72
  store %struct.dw_attr_struct* %22, %struct.dw_attr_struct** %23, align 8, !tbaa !73
  br label %add_AT_unsigned.exit

add_AT_unsigned.exit:                             ; preds = %add_name_attribute.exit, %if.then.i.i16
  %bf.load.i = load i32* %public_flag, align 8
  %bf.clear.i = and i32 %bf.load.i, 524288
  %tobool.i17 = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool.i17, label %if.end, label %if.end.i19

if.end.i19:                                       ; preds = %add_AT_unsigned.exit
  %25 = load i32* @pubname_table_in_use, align 4, !tbaa !4
  %26 = load i32* @pubname_table_allocated, align 4, !tbaa !4
  %cmp.i18 = icmp eq i32 %25, %26
  br i1 %cmp.i18, label %if.then1.i, label %if.end.if.end2_crit_edge.i

if.end.if.end2_crit_edge.i:                       ; preds = %if.end.i19
  %.pre8.i = load %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  br label %if.end2.i

if.then1.i:                                       ; preds = %if.end.i19
  %add.i = add i32 %25, 64
  store i32 %add.i, i32* @pubname_table_allocated, align 4, !tbaa !4
  %27 = load %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  %28 = bitcast %struct.pubname_struct* %27 to i8*
  %conv.i = zext i32 %add.i to i64
  %mul.i = shl nuw nsw i64 %conv.i, 4
  %call.i20 = tail call i8* @xrealloc(i8* %28, i64 %mul.i) #5
  %29 = bitcast i8* %call.i20 to %struct.pubname_struct*
  store %struct.pubname_struct* %29, %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  %.pre.i = load i32* @pubname_table_in_use, align 4, !tbaa !4
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.then1.i, %if.end.if.end2_crit_edge.i
  %30 = phi %struct.pubname_struct* [ %29, %if.then1.i ], [ %.pre8.i, %if.end.if.end2_crit_edge.i ]
  %31 = phi i32 [ %.pre.i, %if.then1.i ], [ %25, %if.end.if.end2_crit_edge.i ]
  %inc.i = add i32 %31, 1
  store i32 %inc.i, i32* @pubname_table_in_use, align 4, !tbaa !4
  %idxprom.i = zext i32 %31 to i64
  %die3.i = getelementptr inbounds %struct.pubname_struct* %30, i64 %idxprom.i, i32 0
  store %struct.die_struct* %1, %struct.die_struct** %die3.i, align 8, !tbaa !76
  %32 = load i8* (%union.tree_node*, i32)** @decl_printable_name, align 8, !tbaa !6
  %call.i.i21 = tail call i8* %32(%union.tree_node* %call2, i32 1) #5
  %call5.i = tail call noalias i8* @xstrdup(i8* %call.i.i21) #5
  %name.i = getelementptr inbounds %struct.pubname_struct* %30, i64 %idxprom.i, i32 1
  store i8* %call5.i, i8** %name.i, align 8, !tbaa !74
  br label %if.end

if.end:                                           ; preds = %if.end2.i, %add_AT_unsigned.exit, %entry
  ret void
}

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @lookup_filename(i8* %file_name) #1 {
entry:
  %call = tail call i32 @strcmp(i8* %file_name, i8* getelementptr inbounds ([11 x i8]* @.str411, i64 0, i64 0)) #5
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @strcmp(i8* %file_name, i8* getelementptr inbounds ([11 x i8]* @.str412, i64 0, i64 0)) #5
  %cmp2 = icmp eq i32 %call1, 0
  br i1 %cmp2, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %0 = load i32* @file_table.3, align 8, !tbaa !51
  %cmp3 = icmp eq i32 %0, 0
  br i1 %cmp3, label %for.cond.preheader, label %if.then4

if.then4:                                         ; preds = %if.end
  %idxprom = zext i32 %0 to i64
  %1 = load i8*** @file_table.0, align 8, !tbaa !47
  %arrayidx = getelementptr inbounds i8** %1, i64 %idxprom
  %2 = load i8** %arrayidx, align 8, !tbaa !6
  %call5 = tail call i32 @strcmp(i8* %file_name, i8* %2) #5
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end, %if.then4
  %3 = load i32* @file_table.2, align 4, !tbaa !50
  %cmp1042 = icmp ugt i32 %3, 1
  br i1 %cmp1042, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %4 = load i8*** @file_table.0, align 8, !tbaa !47
  br label %for.body

for.cond:                                         ; preds = %for.body
  %5 = trunc i64 %indvars.iv.next to i32
  %cmp10 = icmp ult i32 %5, %3
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx12 = getelementptr inbounds i8** %4, i64 %indvars.iv
  %6 = load i8** %arrayidx12, align 8, !tbaa !6
  %call13 = tail call i32 @strcmp(i8* %file_name, i8* %6) #5
  %cmp14 = icmp eq i32 %call13, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp14, label %if.then15, label %for.cond

if.then15:                                        ; preds = %for.body
  %7 = trunc i64 %indvars.iv to i32
  store i32 %7, i32* @file_table.3, align 8, !tbaa !51
  br label %return

for.end:                                          ; preds = %for.cond, %for.cond.preheader
  %i.0.lcssa = phi i32 [ 1, %for.cond.preheader ], [ %5, %for.cond ]
  %8 = load i32* @file_table.1, align 8, !tbaa !49
  %cmp17 = icmp eq i32 %i.0.lcssa, %8
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %for.end
  %add = add i32 %i.0.lcssa, 64
  store i32 %add, i32* @file_table.1, align 8, !tbaa !49
  %9 = load i8*** @file_table.0, align 8, !tbaa !47
  %10 = bitcast i8** %9 to i8*
  %conv = zext i32 %add to i64
  %mul = shl nuw nsw i64 %conv, 3
  %call19 = tail call i8* @xrealloc(i8* %10, i64 %mul) #5
  %11 = bitcast i8* %call19 to i8**
  store i8** %11, i8*** @file_table.0, align 8, !tbaa !47
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %for.end
  %call21 = tail call noalias i8* @xstrdup(i8* %file_name) #5
  %idxprom22 = zext i32 %i.0.lcssa to i64
  %12 = load i8*** @file_table.0, align 8, !tbaa !47
  %arrayidx23 = getelementptr inbounds i8** %12, i64 %idxprom22
  store i8* %call21, i8** %arrayidx23, align 8, !tbaa !6
  %add24 = add i32 %i.0.lcssa, 1
  store i32 %add24, i32* @file_table.2, align 4, !tbaa !50
  store i32 %i.0.lcssa, i32* @file_table.3, align 8, !tbaa !51
  %13 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([16 x i8]* @.str413, i64 0, i64 0), i32 %i.0.lcssa, i8* %file_name) #5
  br label %return

return:                                           ; preds = %if.then4, %entry, %lor.lhs.false, %if.end20, %if.then15
  %retval.0 = phi i32 [ %7, %if.then15 ], [ %i.0.lcssa, %if.end20 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ %0, %if.then4 ]
  ret i32 %retval.0
}

declare %union.tree_node* @decl_function_context(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type, i32 %is_const_type, i32 %is_volatile_type, %struct.die_struct* %context_die) #1 {
entry:
  %code1 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %if.then101, label %if.then

if.then:                                          ; preds = %entry
  %tobool = icmp ne i32 %is_const_type, 0
  %cond = zext i1 %tobool to i32
  %tobool2 = icmp ne i32 %is_volatile_type, 0
  %cond3 = select i1 %tobool2, i32 2, i32 0
  %or = or i32 %cond3, %cond
  %call = tail call %union.tree_node* @get_qualified_type(%union.tree_node* %type, i32 %or) #5
  %tobool4 = icmp eq %union.tree_node* %call, null
  br i1 %tobool4, label %if.else51, label %if.then5

if.then5:                                         ; preds = %if.then
  %call.idx174 = getelementptr %union.tree_node* %call, i64 0, i32 0, i32 10
  %call.idx174.val = load %union.tree_node** %call.idx174, align 8
  %0 = bitcast %union.tree_node* %call.idx174.val to %struct.die_struct*
  %tobool7 = icmp eq %union.tree_node* %call.idx174.val, null
  br i1 %tobool7, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %if.then5
  %1 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 11
  %2 = load %union.tree_node** %1, align 8, !tbaa !102
  %tobool12 = icmp eq %union.tree_node* %2, null
  br i1 %tobool12, label %if.else51, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %land.lhs.true
  %code17 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load18 = load i32* %code17, align 8
  %bf.clear19 = and i32 %bf.load18, 255
  %cmp20 = icmp eq i32 %bf.clear19, 33
  br i1 %cmp20, label %land.lhs.true21, label %if.end48

land.lhs.true21:                                  ; preds = %land.lhs.true13
  %result = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 11
  %3 = load %union.tree_node** %result, align 8, !tbaa !104
  %tobool24 = icmp eq %union.tree_node* %3, null
  br i1 %tobool24, label %if.end48, label %if.then25

if.then25:                                        ; preds = %land.lhs.true21
  %type29 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type29, align 8, !tbaa !87
  %cmp30 = icmp eq %union.tree_node* %call, %4
  br i1 %cmp30, label %if.then31, label %if.else

if.then31:                                        ; preds = %if.then25
  tail call fastcc void @gen_type_die(%union.tree_node* %call, %struct.die_struct* %context_die)
  %call.idx.val = load %union.tree_node** %call.idx174, align 8
  %5 = bitcast %union.tree_node* %call.idx.val to %struct.die_struct*
  br label %if.end48

if.else:                                          ; preds = %if.then25
  %readonly_flag = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load34 = load i32* %readonly_flag, align 8
  %bf.lshr = lshr i32 %bf.load34, 12
  %bf.clear35 = and i32 %bf.lshr, 1
  %cmp36 = icmp sgt i32 %bf.clear35, %is_const_type
  br i1 %cmp36, label %if.then42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %bf.lshr39 = lshr i32 %bf.load34, 11
  %bf.clear40 = and i32 %bf.lshr39, 1
  %cmp41 = icmp sgt i32 %bf.clear40, %is_volatile_type
  br i1 %cmp41, label %if.then42, label %if.end48

if.then42:                                        ; preds = %lor.lhs.false, %if.else
  %call45 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %3, i32 %is_const_type, i32 %is_volatile_type, %struct.die_struct* %context_die)
  br label %if.end48

if.end48:                                         ; preds = %land.lhs.true21, %if.then31, %if.then42, %lor.lhs.false, %land.lhs.true13
  %mod_type_die.1 = phi %struct.die_struct* [ %5, %if.then31 ], [ %call45, %if.then42 ], [ %0, %lor.lhs.false ], [ %0, %land.lhs.true21 ], [ %0, %land.lhs.true13 ]
  %tobool49 = icmp eq %struct.die_struct* %mod_type_die.1, null
  br i1 %tobool49, label %if.else51, label %if.end99

if.else51:                                        ; preds = %if.then, %land.lhs.true, %if.end48
  br i1 %tobool, label %if.then53, label %if.else56

if.then53:                                        ; preds = %if.else51
  %6 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %7 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 38, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i = icmp eq %struct.die_struct* %6, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then53
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %new_die.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %7, %6
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %8 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %6, %struct.die_struct** %8, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %6, i64 0, i32 4
  %9 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %10 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %9, %struct.die_struct** %10, align 8, !tbaa !63
  store %struct.die_struct* %7, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i:                                        ; preds = %if.then53
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #5
  %11 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %7, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %12 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %type, %union.tree_node** %12, align 8, !tbaa !64
  %13 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %14 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %13, %struct.limbo_die_struct** %14, align 8, !tbaa !52
  store %struct.limbo_die_struct* %11, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %call55 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type, i32 0, i32 %is_volatile_type, %struct.die_struct* %context_die)
  br label %if.end99

if.else56:                                        ; preds = %if.else51
  br i1 %tobool2, label %if.then58, label %if.else61

if.then58:                                        ; preds = %if.else56
  %15 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i176 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %16 = bitcast i8* %call.i176 to %struct.die_struct*
  %die_tag.i177 = bitcast i8* %call.i176 to i32*
  store i32 53, i32* %die_tag.i177, align 4, !tbaa !69
  %cmp.i178 = icmp eq %struct.die_struct* %15, null
  br i1 %cmp.i178, label %if.else.i192, label %if.then.i180

if.then.i180:                                     ; preds = %if.then58
  %cmp1.i.i179 = icmp eq i8* %call.i176, null
  br i1 %cmp1.i.i179, label %new_die.exit193, label %if.then.i.i182

if.then.i.i182:                                   ; preds = %if.then.i180
  %cmp2.i.i181 = icmp eq %struct.die_struct* %16, %15
  br i1 %cmp2.i.i181, label %if.then3.i.i183, label %if.end.i.i187

if.then3.i.i183:                                  ; preds = %if.then.i.i182
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i187:                                    ; preds = %if.then.i.i182
  %die_parent.i.i184 = getelementptr inbounds i8* %call.i176, i64 24
  %17 = bitcast i8* %die_parent.i.i184 to %struct.die_struct**
  store %struct.die_struct* %15, %struct.die_struct** %17, align 8, !tbaa !55
  %die_child.i.i185 = getelementptr inbounds %struct.die_struct* %15, i64 0, i32 4
  %18 = load %struct.die_struct** %die_child.i.i185, align 8, !tbaa !62
  %die_sib.i.i186 = getelementptr inbounds i8* %call.i176, i64 40
  %19 = bitcast i8* %die_sib.i.i186 to %struct.die_struct**
  store %struct.die_struct* %18, %struct.die_struct** %19, align 8, !tbaa !63
  store %struct.die_struct* %16, %struct.die_struct** %die_child.i.i185, align 8, !tbaa !62
  br label %new_die.exit193

if.else.i192:                                     ; preds = %if.then58
  %call1.i188 = tail call noalias i8* @xmalloc(i64 24) #5
  %20 = bitcast i8* %call1.i188 to %struct.limbo_die_struct*
  %die2.i189 = bitcast i8* %call1.i188 to %struct.die_struct**
  store %struct.die_struct* %16, %struct.die_struct** %die2.i189, align 8, !tbaa !54
  %created_for.i190 = getelementptr inbounds i8* %call1.i188, i64 8
  %21 = bitcast i8* %created_for.i190 to %union.tree_node**
  store %union.tree_node* %type, %union.tree_node** %21, align 8, !tbaa !64
  %22 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i191 = getelementptr inbounds i8* %call1.i188, i64 16
  %23 = bitcast i8* %next.i191 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %22, %struct.limbo_die_struct** %23, align 8, !tbaa !52
  store %struct.limbo_die_struct* %20, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit193

new_die.exit193:                                  ; preds = %if.then.i180, %if.end.i.i187, %if.else.i192
  %call60 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type, i32 0, i32 0, %struct.die_struct* %context_die)
  br label %if.end99

if.else61:                                        ; preds = %if.else56
  switch i32 %bf.clear, label %if.else81 [
    i32 13, label %if.then63
    i32 15, label %if.then72
  ]

if.then63:                                        ; preds = %if.else61
  %24 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i194 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %25 = bitcast i8* %call.i194 to %struct.die_struct*
  %die_tag.i195 = bitcast i8* %call.i194 to i32*
  store i32 15, i32* %die_tag.i195, align 4, !tbaa !69
  %cmp.i196 = icmp eq %struct.die_struct* %24, null
  br i1 %cmp.i196, label %if.else.i210, label %if.then.i198

if.then.i198:                                     ; preds = %if.then63
  %cmp1.i.i197 = icmp eq i8* %call.i194, null
  br i1 %cmp1.i.i197, label %new_die.exit211, label %if.then.i.i200

if.then.i.i200:                                   ; preds = %if.then.i198
  %cmp2.i.i199 = icmp eq %struct.die_struct* %25, %24
  br i1 %cmp2.i.i199, label %if.then3.i.i201, label %if.end.i.i205

if.then3.i.i201:                                  ; preds = %if.then.i.i200
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i205:                                    ; preds = %if.then.i.i200
  %die_parent.i.i202 = getelementptr inbounds i8* %call.i194, i64 24
  %26 = bitcast i8* %die_parent.i.i202 to %struct.die_struct**
  store %struct.die_struct* %24, %struct.die_struct** %26, align 8, !tbaa !55
  %die_child.i.i203 = getelementptr inbounds %struct.die_struct* %24, i64 0, i32 4
  %27 = load %struct.die_struct** %die_child.i.i203, align 8, !tbaa !62
  %die_sib.i.i204 = getelementptr inbounds i8* %call.i194, i64 40
  %28 = bitcast i8* %die_sib.i.i204 to %struct.die_struct**
  store %struct.die_struct* %27, %struct.die_struct** %28, align 8, !tbaa !63
  store %struct.die_struct* %25, %struct.die_struct** %die_child.i.i203, align 8, !tbaa !62
  br label %new_die.exit211

if.else.i210:                                     ; preds = %if.then63
  %call1.i206 = tail call noalias i8* @xmalloc(i64 24) #5
  %29 = bitcast i8* %call1.i206 to %struct.limbo_die_struct*
  %die2.i207 = bitcast i8* %call1.i206 to %struct.die_struct**
  store %struct.die_struct* %25, %struct.die_struct** %die2.i207, align 8, !tbaa !54
  %created_for.i208 = getelementptr inbounds i8* %call1.i206, i64 8
  %30 = bitcast i8* %created_for.i208 to %union.tree_node**
  store %union.tree_node* %type, %union.tree_node** %30, align 8, !tbaa !64
  %31 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i209 = getelementptr inbounds i8* %call1.i206, i64 16
  %32 = bitcast i8* %next.i209 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %31, %struct.limbo_die_struct** %32, align 8, !tbaa !52
  store %struct.limbo_die_struct* %29, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit211

new_die.exit211:                                  ; preds = %if.then.i198, %if.end.i.i205, %if.else.i210
  %33 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %33, 20
  %34 = and i32 %and, 32
  %35 = add i32 %34, 32
  %div = sdiv i32 %35, 8
  %conv = sext i32 %div to i64
  %call.i212 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i212, i64 8
  %36 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %36, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i212 to i32*
  store i32 11, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i212, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 6, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i212, i64 24
  %val_unsigned.i = bitcast i8* %v.i to i64*
  store i64 %conv, i64* %val_unsigned.i, align 8, !tbaa !8
  %cmp.i.i = icmp ne i8* %call.i194, null
  %cmp1.i.i213 = icmp ne i8* %call.i212, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i213
  br i1 %or.cond.i.i, label %if.then.i.i214, label %add_AT_unsigned.exit

if.then.i.i214:                                   ; preds = %new_die.exit211
  %37 = bitcast i8* %call.i212 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds i8* %call.i194, i64 16
  %38 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %39 = load %struct.dw_attr_struct** %38, align 8, !tbaa !73
  store %struct.dw_attr_struct* %39, %struct.dw_attr_struct** %36, align 8, !tbaa !72
  store %struct.dw_attr_struct* %37, %struct.dw_attr_struct** %38, align 8, !tbaa !73
  br label %add_AT_unsigned.exit

add_AT_unsigned.exit:                             ; preds = %new_die.exit211, %if.then.i.i214
  %type68 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %40 = load %union.tree_node** %type68, align 8, !tbaa !87
  br label %if.end99

if.then72:                                        ; preds = %if.else61
  %41 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i215 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %42 = bitcast i8* %call.i215 to %struct.die_struct*
  %die_tag.i216 = bitcast i8* %call.i215 to i32*
  store i32 16, i32* %die_tag.i216, align 4, !tbaa !69
  %cmp.i217 = icmp eq %struct.die_struct* %41, null
  br i1 %cmp.i217, label %if.else.i231, label %if.then.i219

if.then.i219:                                     ; preds = %if.then72
  %cmp1.i.i218 = icmp eq i8* %call.i215, null
  br i1 %cmp1.i.i218, label %new_die.exit232, label %if.then.i.i221

if.then.i.i221:                                   ; preds = %if.then.i219
  %cmp2.i.i220 = icmp eq %struct.die_struct* %42, %41
  br i1 %cmp2.i.i220, label %if.then3.i.i222, label %if.end.i.i226

if.then3.i.i222:                                  ; preds = %if.then.i.i221
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i226:                                    ; preds = %if.then.i.i221
  %die_parent.i.i223 = getelementptr inbounds i8* %call.i215, i64 24
  %43 = bitcast i8* %die_parent.i.i223 to %struct.die_struct**
  store %struct.die_struct* %41, %struct.die_struct** %43, align 8, !tbaa !55
  %die_child.i.i224 = getelementptr inbounds %struct.die_struct* %41, i64 0, i32 4
  %44 = load %struct.die_struct** %die_child.i.i224, align 8, !tbaa !62
  %die_sib.i.i225 = getelementptr inbounds i8* %call.i215, i64 40
  %45 = bitcast i8* %die_sib.i.i225 to %struct.die_struct**
  store %struct.die_struct* %44, %struct.die_struct** %45, align 8, !tbaa !63
  store %struct.die_struct* %42, %struct.die_struct** %die_child.i.i224, align 8, !tbaa !62
  br label %new_die.exit232

if.else.i231:                                     ; preds = %if.then72
  %call1.i227 = tail call noalias i8* @xmalloc(i64 24) #5
  %46 = bitcast i8* %call1.i227 to %struct.limbo_die_struct*
  %die2.i228 = bitcast i8* %call1.i227 to %struct.die_struct**
  store %struct.die_struct* %42, %struct.die_struct** %die2.i228, align 8, !tbaa !54
  %created_for.i229 = getelementptr inbounds i8* %call1.i227, i64 8
  %47 = bitcast i8* %created_for.i229 to %union.tree_node**
  store %union.tree_node* %type, %union.tree_node** %47, align 8, !tbaa !64
  %48 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i230 = getelementptr inbounds i8* %call1.i227, i64 16
  %49 = bitcast i8* %next.i230 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %48, %struct.limbo_die_struct** %49, align 8, !tbaa !52
  store %struct.limbo_die_struct* %46, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit232

new_die.exit232:                                  ; preds = %if.then.i219, %if.end.i.i226, %if.else.i231
  %50 = load i32* @target_flags, align 4, !tbaa !4
  %and74 = lshr i32 %50, 20
  %51 = and i32 %and74, 32
  %52 = add i32 %51, 32
  %div77 = sdiv i32 %52, 8
  %conv78 = sext i32 %div77 to i64
  %call.i233 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i234 = getelementptr inbounds i8* %call.i233, i64 8
  %53 = bitcast i8* %dw_attr_next.i234 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %53, align 8, !tbaa !72
  %dw_attr.i235 = bitcast i8* %call.i233 to i32*
  store i32 11, i32* %dw_attr.i235, align 4, !tbaa !57
  %dw_attr_val.i236 = getelementptr inbounds i8* %call.i233, i64 16
  %val_class.i237 = bitcast i8* %dw_attr_val.i236 to i32*
  store i32 6, i32* %val_class.i237, align 4, !tbaa !59
  %v.i238 = getelementptr inbounds i8* %call.i233, i64 24
  %val_unsigned.i239 = bitcast i8* %v.i238 to i64*
  store i64 %conv78, i64* %val_unsigned.i239, align 8, !tbaa !8
  %cmp.i.i240 = icmp ne i8* %call.i215, null
  %cmp1.i.i241 = icmp ne i8* %call.i233, null
  %or.cond.i.i242 = and i1 %cmp.i.i240, %cmp1.i.i241
  br i1 %or.cond.i.i242, label %if.then.i.i244, label %add_AT_unsigned.exit245

if.then.i.i244:                                   ; preds = %new_die.exit232
  %54 = bitcast i8* %call.i233 to %struct.dw_attr_struct*
  %die_attr.i.i243 = getelementptr inbounds i8* %call.i215, i64 16
  %55 = bitcast i8* %die_attr.i.i243 to %struct.dw_attr_struct**
  %56 = load %struct.dw_attr_struct** %55, align 8, !tbaa !73
  store %struct.dw_attr_struct* %56, %struct.dw_attr_struct** %53, align 8, !tbaa !72
  store %struct.dw_attr_struct* %54, %struct.dw_attr_struct** %55, align 8, !tbaa !73
  br label %add_AT_unsigned.exit245

add_AT_unsigned.exit245:                          ; preds = %new_die.exit232, %if.then.i.i244
  %type80 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %57 = load %union.tree_node** %type80, align 8, !tbaa !87
  br label %if.end99

if.else81:                                        ; preds = %if.else61
  %type.idx175.val = load i32* %code1, align 8
  %bf.clear.i = and i32 %type.idx175.val, 255
  switch i32 %bf.clear.i, label %sw.default.i [
    i32 0, label %if.then84
    i32 5, label %if.then84
    i32 6, label %if.then84
    i32 7, label %if.then84
    i32 8, label %if.then84
    i32 11, label %if.then84
    i32 12, label %if.then84
    i32 19, label %if.else86
    i32 18, label %if.else86
    i32 20, label %if.else86
    i32 21, label %if.else86
    i32 22, label %if.else86
    i32 10, label %if.else86
    i32 23, label %if.else86
    i32 16, label %if.else86
    i32 13, label %if.else86
    i32 15, label %if.else86
    i32 17, label %if.else86
    i32 14, label %if.else86
    i32 24, label %if.else86
    i32 9, label %if.else86
  ]

sw.default.i:                                     ; preds = %if.else81
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 7461, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.is_base_type, i64 0, i64 0)) #7
  unreachable

if.then84:                                        ; preds = %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81
  %type1.i = bitcast %union.tree_node* %type to %struct.tree_type*
  %58 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 11
  %59 = load %union.tree_node** %58, align 8, !tbaa !102
  switch i32 %bf.clear.i, label %if.end.i [
    i32 0, label %if.end99
    i32 5, label %if.end99
  ]

if.end.i:                                         ; preds = %if.then84
  %tobool.i = icmp eq %union.tree_node* %59, null
  br i1 %tobool.i, label %if.end17.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.end.i
  %code10.i = getelementptr inbounds %union.tree_node* %59, i64 0, i32 0, i32 0, i32 2
  %bf.load11.i = load i32* %code10.i, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 255
  %cmp13.i = icmp eq i32 %bf.clear12.i, 33
  br i1 %cmp13.i, label %if.then14.i, label %if.end16.i

if.then14.i:                                      ; preds = %if.then8.i
  %name15.i = getelementptr inbounds %union.tree_node* %59, i64 0, i32 0, i32 8
  %60 = load %union.tree_node** %name15.i, align 8, !tbaa !86
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then14.i, %if.then8.i
  %name.0.i = phi %union.tree_node* [ %60, %if.then14.i ], [ %59, %if.then8.i ]
  %id.i = getelementptr inbounds %union.tree_node* %name.0.i, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds i8** %id.i, i64 1
  %62 = load i8** %61, align 8, !tbaa !105
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.end16.i, %if.end.i
  %type_name.0.i = phi i8* [ %62, %if.end16.i ], [ getelementptr inbounds ([12 x i8]* @.str416, i64 0, i64 0), %if.end.i ]
  switch i32 %bf.clear.i, label %sw.default.i248 [
    i32 6, label %sw.bb.i
    i32 12, label %sw.bb41.i
    i32 7, label %sw.epilog.i
    i32 8, label %sw.bb52.i
    i32 11, label %sw.bb63.i
  ]

sw.bb.i:                                          ; preds = %if.end17.i
  %precision.i = getelementptr inbounds %struct.tree_type* %type1.i, i64 0, i32 6
  %bf.load23.i = load i32* %precision.i, align 4
  %bf.clear24.i = and i32 %bf.load23.i, 511
  %cmp25.i = icmp eq i32 %bf.clear24.i, 8
  br i1 %cmp25.i, label %land.lhs.true.i, label %if.then32.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  %63 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !6
  %cmp26.i = icmp eq %union.tree_node* %63, %type
  br i1 %cmp26.i, label %sw.bb41.i, label %lor.lhs.false27.i

lor.lhs.false27.i:                                ; preds = %land.lhs.true.i
  %call.i247 = tail call i32 @strcmp(i8* %type_name.0.i, i8* getelementptr inbounds ([12 x i8]* @.str417, i64 0, i64 0)) #5
  %tobool28.i = icmp eq i32 %call.i247, 0
  br i1 %tobool28.i, label %sw.bb41.i, label %lor.lhs.false29.i

lor.lhs.false29.i:                                ; preds = %lor.lhs.false27.i
  %call30.i = tail call i32 @strcmp(i8* %type_name.0.i, i8* getelementptr inbounds ([14 x i8]* @.str418, i64 0, i64 0)) #5
  %tobool31.i = icmp eq i32 %call30.i, 0
  br i1 %tobool31.i, label %sw.bb41.i, label %if.then32.i

if.then32.i:                                      ; preds = %lor.lhs.false29.i, %sw.bb.i
  %bf.clear35.i = and i32 %type.idx175.val, 8192
  %64 = zext i32 %bf.clear35.i to i64
  %65 = lshr exact i64 %64, 12
  %66 = or i64 %65, 5
  br label %sw.epilog.i

sw.bb41.i:                                        ; preds = %lor.lhs.false29.i, %lor.lhs.false27.i, %land.lhs.true.i, %if.end17.i
  %bf.clear46.i = and i32 %type.idx175.val, 8192
  %67 = zext i32 %bf.clear46.i to i64
  %68 = lshr exact i64 %67, 12
  %69 = add i64 %68, 6
  br label %sw.epilog.i

sw.bb52.i:                                        ; preds = %if.end17.i
  %type54.i = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 1
  %70 = load %union.tree_node** %type54.i, align 8, !tbaa !87
  %code56.i = getelementptr inbounds %union.tree_node* %70, i64 0, i32 0, i32 0, i32 2
  %bf.load57.i = load i32* %code56.i, align 8
  %bf.clear58.i = and i32 %bf.load57.i, 255
  %cmp59.i = icmp eq i32 %bf.clear58.i, 7
  %.90.i = select i1 %cmp59.i, i64 3, i64 128
  br label %sw.epilog.i

sw.bb63.i:                                        ; preds = %if.end17.i
  br label %sw.epilog.i

sw.default.i248:                                  ; preds = %if.end17.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 7381, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.base_type_die, i64 0, i64 0)) #7
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb63.i, %sw.bb52.i, %sw.bb41.i, %if.then32.i, %if.end17.i
  %encoding.0.i = phi i64 [ 2, %sw.bb63.i ], [ %66, %if.then32.i ], [ %69, %sw.bb41.i ], [ 4, %if.end17.i ], [ %.90.i, %sw.bb52.i ]
  %71 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %call.i.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %72 = bitcast i8* %call.i.i to %struct.die_struct*
  %die_tag.i.i = bitcast i8* %call.i.i to i32*
  store i32 36, i32* %die_tag.i.i, align 4, !tbaa !69
  %cmp.i.i249 = icmp eq %struct.die_struct* %71, null
  br i1 %cmp.i.i249, label %if.else.i.i, label %if.then.i.i250

if.then.i.i250:                                   ; preds = %sw.epilog.i
  %cmp1.i.i.i = icmp eq i8* %call.i.i, null
  br i1 %cmp1.i.i.i, label %new_die.exit.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i250
  %cmp2.i.i.i = icmp eq %struct.die_struct* %72, %71
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i:                                     ; preds = %if.then.i.i.i
  %die_parent.i.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %73 = bitcast i8* %die_parent.i.i.i to %struct.die_struct**
  store %struct.die_struct* %71, %struct.die_struct** %73, align 8, !tbaa !55
  %die_child.i.i.i = getelementptr inbounds %struct.die_struct* %71, i64 0, i32 4
  %74 = load %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  %die_sib.i.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %75 = bitcast i8* %die_sib.i.i.i to %struct.die_struct**
  store %struct.die_struct* %74, %struct.die_struct** %75, align 8, !tbaa !63
  store %struct.die_struct* %72, %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  br label %new_die.exit.i

if.else.i.i:                                      ; preds = %sw.epilog.i
  %call1.i.i = tail call noalias i8* @xmalloc(i64 24) #5
  %76 = bitcast i8* %call1.i.i to %struct.limbo_die_struct*
  %die2.i.i = bitcast i8* %call1.i.i to %struct.die_struct**
  store %struct.die_struct* %72, %struct.die_struct** %die2.i.i, align 8, !tbaa !54
  %created_for.i.i = getelementptr inbounds i8* %call1.i.i, i64 8
  %77 = bitcast i8* %created_for.i.i to %union.tree_node**
  store %union.tree_node* %type, %union.tree_node** %77, align 8, !tbaa !64
  %78 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i = getelementptr inbounds i8* %call1.i.i, i64 16
  %79 = bitcast i8* %next.i.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %78, %struct.limbo_die_struct** %79, align 8, !tbaa !52
  store %struct.limbo_die_struct* %76, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i

new_die.exit.i:                                   ; preds = %if.else.i.i, %if.end.i.i.i, %if.then.i.i250
  %80 = load i8* (i8*)** @demangle_name_func, align 8, !tbaa !6
  %tobool65.i = icmp eq i8* (i8*)* %80, null
  br i1 %tobool65.i, label %if.end68.i, label %if.then66.i

if.then66.i:                                      ; preds = %new_die.exit.i
  %call67.i = tail call i8* %80(i8* %type_name.0.i) #5
  br label %if.end68.i

if.end68.i:                                       ; preds = %if.then66.i, %new_die.exit.i
  %type_name.1.i = phi i8* [ %call67.i, %if.then66.i ], [ %type_name.0.i, %new_die.exit.i ]
  %call.i91.i = tail call noalias i8* @xmalloc(i64 40) #5
  %81 = bitcast i8* %call.i91.i to %struct.dw_attr_struct*
  %82 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i.i = icmp eq %struct.ht* %82, null
  br i1 %tobool.i.i, label %if.then.i93.i, label %if.end.i.i251

if.then.i93.i:                                    ; preds = %if.end68.i
  %call1.i92.i = tail call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i92.i, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i.i = getelementptr inbounds %struct.ht* %call1.i92.i, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i.i, align 8, !tbaa !81
  %.pre.i.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i.i251

if.end.i.i251:                                    ; preds = %if.then.i93.i, %if.end68.i
  %83 = phi %struct.ht* [ %82, %if.end68.i ], [ %.pre.i.i, %if.then.i93.i ]
  %call2.i.i = tail call i64 @strlen(i8* %type_name.1.i) #5
  %conv.i.i = trunc i64 %call2.i.i to i32
  %call3.i.i = tail call %struct.ht_identifier* @ht_lookup(%struct.ht* %83, i8* %type_name.1.i, i32 %conv.i.i, i32 1) #5
  %84 = bitcast %struct.ht_identifier* %call3.i.i to %struct.indirect_string_node*
  %85 = getelementptr inbounds %struct.ht_identifier* %call3.i.i, i64 1, i32 0
  %86 = load i32* %85, align 4, !tbaa !84
  %inc.i.i = add i32 %86, 1
  store i32 %inc.i.i, i32* %85, align 4, !tbaa !84
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i91.i, i64 8
  %87 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %87, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i91.i to i32*
  store i32 3, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i91.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 14, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i91.i, i64 24
  %val_str.i.i = bitcast i8* %v.i.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %84, %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %cmp.i.i.i = icmp ne i8* %call.i.i, null
  %cmp1.i.i94.i = icmp ne i8* %call.i91.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i, %cmp1.i.i94.i
  br i1 %or.cond.i.i.i, label %if.then.i.i95.i, label %add_AT_string.exit.i

if.then.i.i95.i:                                  ; preds = %if.end.i.i251
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %88 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %89 = load %struct.dw_attr_struct** %88, align 8, !tbaa !73
  store %struct.dw_attr_struct* %89, %struct.dw_attr_struct** %87, align 8, !tbaa !72
  store %struct.dw_attr_struct* %81, %struct.dw_attr_struct** %88, align 8, !tbaa !73
  br label %add_AT_string.exit.i

add_AT_string.exit.i:                             ; preds = %if.then.i.i95.i, %if.end.i.i251
  %call69.i = tail call i64 @int_size_in_bytes(%union.tree_node* %type) #5
  %call.i96.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i97.i = getelementptr inbounds i8* %call.i96.i, i64 8
  %90 = bitcast i8* %dw_attr_next.i97.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %90, align 8, !tbaa !72
  %dw_attr.i98.i = bitcast i8* %call.i96.i to i32*
  store i32 11, i32* %dw_attr.i98.i, align 4, !tbaa !57
  %dw_attr_val.i99.i = getelementptr inbounds i8* %call.i96.i, i64 16
  %val_class.i100.i = bitcast i8* %dw_attr_val.i99.i to i32*
  store i32 6, i32* %val_class.i100.i, align 4, !tbaa !59
  %v.i101.i = getelementptr inbounds i8* %call.i96.i, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i101.i to i64*
  store i64 %call69.i, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %cmp1.i.i103.i = icmp ne i8* %call.i96.i, null
  %or.cond.i.i104.i = and i1 %cmp.i.i.i, %cmp1.i.i103.i
  br i1 %or.cond.i.i104.i, label %if.then.i.i106.i, label %add_AT_unsigned.exit.i

if.then.i.i106.i:                                 ; preds = %add_AT_string.exit.i
  %91 = bitcast i8* %call.i96.i to %struct.dw_attr_struct*
  %die_attr.i.i105.i = getelementptr inbounds i8* %call.i.i, i64 16
  %92 = bitcast i8* %die_attr.i.i105.i to %struct.dw_attr_struct**
  %93 = load %struct.dw_attr_struct** %92, align 8, !tbaa !73
  store %struct.dw_attr_struct* %93, %struct.dw_attr_struct** %90, align 8, !tbaa !72
  store %struct.dw_attr_struct* %91, %struct.dw_attr_struct** %92, align 8, !tbaa !73
  br label %add_AT_unsigned.exit.i

add_AT_unsigned.exit.i:                           ; preds = %if.then.i.i106.i, %add_AT_string.exit.i
  %call.i107.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i108.i = getelementptr inbounds i8* %call.i107.i, i64 8
  %94 = bitcast i8* %dw_attr_next.i108.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %94, align 8, !tbaa !72
  %dw_attr.i109.i = bitcast i8* %call.i107.i to i32*
  store i32 62, i32* %dw_attr.i109.i, align 4, !tbaa !57
  %dw_attr_val.i110.i = getelementptr inbounds i8* %call.i107.i, i64 16
  %val_class.i111.i = bitcast i8* %dw_attr_val.i110.i to i32*
  store i32 6, i32* %val_class.i111.i, align 4, !tbaa !59
  %v.i112.i = getelementptr inbounds i8* %call.i107.i, i64 24
  %val_unsigned.i113.i = bitcast i8* %v.i112.i to i64*
  store i64 %encoding.0.i, i64* %val_unsigned.i113.i, align 8, !tbaa !8
  %cmp1.i.i115.i = icmp ne i8* %call.i107.i, null
  %or.cond.i.i116.i = and i1 %cmp.i.i.i, %cmp1.i.i115.i
  br i1 %or.cond.i.i116.i, label %if.then.i.i118.i, label %if.end99

if.then.i.i118.i:                                 ; preds = %add_AT_unsigned.exit.i
  %95 = bitcast i8* %call.i107.i to %struct.dw_attr_struct*
  %die_attr.i.i117.i = getelementptr inbounds i8* %call.i.i, i64 16
  %96 = bitcast i8* %die_attr.i.i117.i to %struct.dw_attr_struct**
  %97 = load %struct.dw_attr_struct** %96, align 8, !tbaa !73
  store %struct.dw_attr_struct* %97, %struct.dw_attr_struct** %94, align 8, !tbaa !72
  store %struct.dw_attr_struct* %95, %struct.dw_attr_struct** %96, align 8, !tbaa !73
  br label %if.end99

if.else86:                                        ; preds = %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81, %if.else81
  tail call fastcc void @gen_type_die(%union.tree_node* %type, %struct.die_struct* %context_die)
  %type.idx = getelementptr %union.tree_node* %type, i64 0, i32 0, i32 15
  %type.idx.val = load %union.tree_node** %type.idx, align 8, !tbaa !107
  %code.i253 = getelementptr inbounds %union.tree_node* %type.idx.val, i64 0, i32 0, i32 0, i32 2
  %bf.load.i254 = load i32* %code.i253, align 8
  %bf.clear.i255 = and i32 %bf.load.i254, 255
  %cmp.i256 = icmp eq i32 %bf.clear.i255, 18
  br i1 %cmp.i256, label %while.cond.i, label %type_main_variant.exit

while.cond.i:                                     ; preds = %if.else86, %while.cond.i
  %type.addr.0.i = phi %union.tree_node* [ %99, %while.cond.i ], [ %type.idx.val, %if.else86 ]
  %98 = getelementptr inbounds %union.tree_node* %type.addr.0.i, i64 0, i32 0, i32 15
  %99 = load %union.tree_node** %98, align 8, !tbaa !107
  %cmp4.i = icmp eq %union.tree_node* %type.addr.0.i, %99
  br i1 %cmp4.i, label %type_main_variant.exit, label %while.cond.i

type_main_variant.exit:                           ; preds = %while.cond.i, %if.else86
  %type.addr.1.i = phi %union.tree_node* [ %type.idx.val, %if.else86 ], [ %type.addr.0.i, %while.cond.i ]
  %call87.idx = getelementptr %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 10
  %call87.idx.val = load %union.tree_node** %call87.idx, align 8
  %100 = bitcast %union.tree_node* %call87.idx.val to %struct.die_struct*
  %cmp89 = icmp eq %union.tree_node* %call87.idx.val, null
  br i1 %cmp89, label %if.then91, label %if.end99

if.then91:                                        ; preds = %type_main_variant.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 7573, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.modified_type_die, i64 0, i64 0)) #7
  unreachable

if.end99:                                         ; preds = %if.then.i.i118.i, %add_AT_unsigned.exit.i, %if.then84, %if.then84, %new_die.exit193, %add_AT_unsigned.exit245, %type_main_variant.exit, %add_AT_unsigned.exit, %new_die.exit, %if.end48
  %sub_die.1 = phi %struct.die_struct* [ null, %if.end48 ], [ %call55, %new_die.exit ], [ %call60, %new_die.exit193 ], [ null, %add_AT_unsigned.exit ], [ null, %add_AT_unsigned.exit245 ], [ null, %type_main_variant.exit ], [ null, %if.then84 ], [ null, %if.then84 ], [ null, %add_AT_unsigned.exit.i ], [ null, %if.then.i.i118.i ]
  %item_type.1 = phi %union.tree_node* [ null, %if.end48 ], [ null, %new_die.exit ], [ null, %new_die.exit193 ], [ %40, %add_AT_unsigned.exit ], [ %57, %add_AT_unsigned.exit245 ], [ null, %type_main_variant.exit ], [ null, %if.then84 ], [ null, %if.then84 ], [ null, %add_AT_unsigned.exit.i ], [ null, %if.then.i.i118.i ]
  %mod_type_die.3 = phi %struct.die_struct* [ %mod_type_die.1, %if.end48 ], [ %7, %new_die.exit ], [ %16, %new_die.exit193 ], [ %25, %add_AT_unsigned.exit ], [ %42, %add_AT_unsigned.exit245 ], [ %100, %type_main_variant.exit ], [ null, %if.then84 ], [ null, %if.then84 ], [ %72, %add_AT_unsigned.exit.i ], [ %72, %if.then.i.i118.i ]
  br i1 %tobool4, label %if.end102, label %if.then101

if.then101:                                       ; preds = %entry, %if.end99
  %type.addr.0282 = phi %union.tree_node* [ %call, %if.end99 ], [ %type, %entry ]
  %mod_type_die.3280 = phi %struct.die_struct* [ %mod_type_die.3, %if.end99 ], [ null, %entry ]
  %item_type.1278 = phi %union.tree_node* [ %item_type.1, %if.end99 ], [ null, %entry ]
  %sub_die.1276 = phi %struct.die_struct* [ %sub_die.1, %if.end99 ], [ null, %entry ]
  %symtab.i = getelementptr inbounds %union.tree_node* %type.addr.0282, i64 0, i32 0, i32 10
  %.c.i = bitcast %struct.die_struct* %mod_type_die.3280 to %union.tree_node*
  store %union.tree_node* %.c.i, %union.tree_node** %symtab.i, align 8, !tbaa !6
  br label %if.end102

if.end102:                                        ; preds = %if.end99, %if.then101
  %mod_type_die.3281 = phi %struct.die_struct* [ %mod_type_die.3, %if.end99 ], [ %mod_type_die.3280, %if.then101 ]
  %item_type.1279 = phi %union.tree_node* [ %item_type.1, %if.end99 ], [ %item_type.1278, %if.then101 ]
  %sub_die.1277 = phi %struct.die_struct* [ %sub_die.1, %if.end99 ], [ %sub_die.1276, %if.then101 ]
  %tobool103 = icmp eq %union.tree_node* %item_type.1279, null
  br i1 %tobool103, label %if.end116, label %if.then104

if.then104:                                       ; preds = %if.end102
  %readonly_flag106 = getelementptr inbounds %union.tree_node* %item_type.1279, i64 0, i32 0, i32 0, i32 2
  %bf.load107 = load i32* %readonly_flag106, align 8
  %bf.lshr108 = lshr i32 %bf.load107, 12
  %bf.clear109 = and i32 %bf.lshr108, 1
  %bf.lshr113 = lshr i32 %bf.load107, 11
  %bf.clear114 = and i32 %bf.lshr113, 1
  %call115 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %item_type.1279, i32 %bf.clear109, i32 %bf.clear114, %struct.die_struct* %context_die)
  br label %if.end116

if.end116:                                        ; preds = %if.end102, %if.then104
  %sub_die.2 = phi %struct.die_struct* [ %call115, %if.then104 ], [ %sub_die.1277, %if.end102 ]
  %cmp117 = icmp eq %struct.die_struct* %sub_die.2, null
  br i1 %cmp117, label %return, label %if.then119

if.then119:                                       ; preds = %if.end116
  %call.i258 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i259 = getelementptr inbounds i8* %call.i258, i64 8
  %101 = bitcast i8* %dw_attr_next.i259 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %101, align 8, !tbaa !72
  %dw_attr.i260 = bitcast i8* %call.i258 to i32*
  store i32 73, i32* %dw_attr.i260, align 4, !tbaa !57
  %dw_attr_val.i261 = getelementptr inbounds i8* %call.i258, i64 16
  %val_class.i262 = bitcast i8* %dw_attr_val.i261 to i32*
  store i32 10, i32* %val_class.i262, align 4, !tbaa !59
  %v.i263 = getelementptr inbounds i8* %call.i258, i64 24
  %die2.i264 = bitcast i8* %v.i263 to %struct.die_struct**
  store %struct.die_struct* %sub_die.2, %struct.die_struct** %die2.i264, align 8, !tbaa !60
  %external.i = getelementptr inbounds i8* %call.i258, i64 32
  %102 = bitcast i8* %external.i to i32*
  store i32 0, i32* %102, align 4, !tbaa !108
  %cmp.i.i265 = icmp ne %struct.die_struct* %mod_type_die.3281, null
  %cmp1.i.i266 = icmp ne i8* %call.i258, null
  %or.cond.i.i267 = and i1 %cmp.i.i265, %cmp1.i.i266
  br i1 %or.cond.i.i267, label %if.then.i.i269, label %return

if.then.i.i269:                                   ; preds = %if.then119
  %103 = bitcast i8* %call.i258 to %struct.dw_attr_struct*
  %die_attr.i.i268 = getelementptr inbounds %struct.die_struct* %mod_type_die.3281, i64 0, i32 2
  %104 = load %struct.dw_attr_struct** %die_attr.i.i268, align 8, !tbaa !73
  store %struct.dw_attr_struct* %104, %struct.dw_attr_struct** %101, align 8, !tbaa !72
  store %struct.dw_attr_struct* %103, %struct.dw_attr_struct** %die_attr.i.i268, align 8, !tbaa !73
  br label %return

return:                                           ; preds = %if.then.i.i269, %if.then119, %if.end116, %if.then5
  %retval.0 = phi %struct.die_struct* [ %0, %if.then5 ], [ %mod_type_die.3281, %if.end116 ], [ %mod_type_die.3281, %if.then119 ], [ %mod_type_die.3281, %if.then.i.i269 ]
  ret %struct.die_struct* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_decl_die(%union.tree_node* %decl, %struct.die_struct* %context_die) #1 {
entry:
  %label.i = alloca [30 x i8], align 16
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom251 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom251
  %0 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %0, 100
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %ignored_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %1 = bitcast i48* %ignored_flag to i64*
  %bf.load3 = load i64* %1, align 8
  %bf.cast = and i64 %bf.load3, 16384
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.end, label %sw.epilog

if.end:                                           ; preds = %land.lhs.true, %entry
  switch i32 %bf.clear, label %sw.default [
    i32 0, label %sw.epilog
    i32 32, label %sw.epilog
    i32 30, label %sw.bb
    i32 33, label %sw.bb79
    i32 31, label %sw.bb134
    i32 34, label %sw.bb139
    i32 37, label %sw.bb165
    i32 35, label %sw.bb182
    i32 38, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.end
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %2 = load %union.tree_node** %initial, align 8, !tbaa !90
  %cmp10 = icmp eq %union.tree_node* %2, null
  br i1 %cmp10, label %land.lhs.true12, label %if.end26

land.lhs.true12:                                  ; preds = %sw.bb
  %context = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %3 = load %union.tree_node** %context, align 8, !tbaa !66
  %cmp14 = icmp eq %union.tree_node* %3, null
  br i1 %cmp14, label %land.lhs.true16, label %if.end26

land.lhs.true16:                                  ; preds = %land.lhs.true12
  %4 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  %cmp17 = icmp eq %union.tree_node* %4, null
  br i1 %cmp17, label %sw.epilog, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true16
  %artificial_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %5 = bitcast i48* %artificial_flag to i64*
  %bf.load20 = load i64* %5, align 8
  %bf.cast23 = and i64 %bf.load20, 4194304
  %tobool24 = icmp eq i64 %bf.cast23, 0
  br i1 %tobool24, label %if.end26, label %sw.epilog

if.end26:                                         ; preds = %lor.lhs.false, %land.lhs.true12, %sw.bb
  %abstract_origin = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %6 = load %union.tree_node** %abstract_origin, align 8, !tbaa !89
  %tobool28 = icmp eq %union.tree_node* %6, null
  %decl. = select i1 %tobool28, %union.tree_node* %decl, %union.tree_node* %6
  %cmp31 = icmp eq %union.tree_node* %decl., %decl
  br i1 %cmp31, label %if.else, label %if.then33

if.then33:                                        ; preds = %if.end26
  call void @dwarf2out_abstract_function(%union.tree_node* %6)
  br label %if.end78

if.else:                                          ; preds = %if.end26
  %inline_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %7 = bitcast i48* %inline_flag to i64*
  %bf.load37 = load i64* %7, align 8
  %8 = and i64 %bf.load37, 34816
  %9 = icmp eq i64 %8, 2048
  br i1 %9, label %land.lhs.true49, label %if.else57

land.lhs.true49:                                  ; preds = %if.else
  %tobool.i316 = icmp eq %struct.die_struct* %context_die, null
  br i1 %tobool.i316, label %land.lhs.true51, label %land.rhs.i

land.rhs.i:                                       ; preds = %land.lhs.true49
  %die_tag.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 0
  %10 = load i32* %die_tag.i, align 4, !tbaa !69
  %11 = and i32 %10, -5
  %12 = icmp eq i32 %11, 19
  %brmerge = or i1 %12, %cmp10
  br i1 %brmerge, label %if.else57, label %if.then56

land.lhs.true51:                                  ; preds = %land.lhs.true49
  br i1 %cmp10, label %if.else57, label %if.then56

if.then56:                                        ; preds = %land.rhs.i, %land.lhs.true51
  call void @dwarf2out_abstract_function(%union.tree_node* %decl)
  call void @set_decl_origin_self(%union.tree_node* %decl) #5
  br label %if.end78

if.else57:                                        ; preds = %land.rhs.i, %if.else, %land.lhs.true51
  %13 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp58 = icmp ugt i32 %13, 1
  br i1 %cmp58, label %if.then60, label %if.end78

if.then60:                                        ; preds = %if.else57
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %14 = load %union.tree_node** %type, align 8, !tbaa !87
  %type63 = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type63, align 8, !tbaa !87
  call fastcc void @gen_type_die(%union.tree_node* %15, %struct.die_struct* %context_die)
  %vindex = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 22
  %16 = load %union.tree_node** %vindex, align 8, !tbaa !92
  %cmp65 = icmp eq %union.tree_node* %16, null
  br i1 %cmp65, label %if.end70, label %if.then67

if.then67:                                        ; preds = %if.then60
  %context69 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %17 = load %union.tree_node** %context69, align 8, !tbaa !66
  call fastcc void @gen_type_die(%union.tree_node* %17, %struct.die_struct* %context_die)
  br label %if.end70

if.end70:                                         ; preds = %if.then60, %if.then67
  %bf.load.i288 = load i32* %code, align 8
  %bf.clear.i289 = and i32 %bf.load.i288, 255
  %cmp.i290 = icmp eq i32 %bf.clear.i289, 30
  br i1 %cmp.i290, label %lor.lhs.false.i293, label %if.then.i295

lor.lhs.false.i293:                               ; preds = %if.end70
  %18 = load %union.tree_node** %vindex, align 8, !tbaa !92
  %tobool.i292 = icmp eq %union.tree_node* %18, null
  br i1 %tobool.i292, label %if.then.i295, label %if.else.i300

if.then.i295:                                     ; preds = %lor.lhs.false.i293, %if.end70
  %context3.i294 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  br label %if.end.i304

if.else.i300:                                     ; preds = %lor.lhs.false.i293
  %19 = load %union.tree_node** %type, align 8, !tbaa !87
  %values.i297 = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 1
  %20 = load i8** %values.i297, align 8
  %value.i298 = getelementptr inbounds i8* %20, i64 32
  %21 = bitcast i8* %value.i298 to %union.tree_node**
  %22 = load %union.tree_node** %21, align 8, !tbaa !93
  %type7.i299 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type7.i299, align 8, !tbaa !87
  %24 = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 15
  br label %if.end.i304

if.end.i304:                                      ; preds = %if.else.i300, %if.then.i295
  %context.0.in.i301 = phi %union.tree_node** [ %context3.i294, %if.then.i295 ], [ %24, %if.else.i300 ]
  %context.0.i302 = load %union.tree_node** %context.0.in.i301, align 8
  %tobool9.i303 = icmp eq %union.tree_node* %context.0.i302, null
  br i1 %tobool9.i303, label %if.end78, label %land.lhs.true.i312

land.lhs.true.i312:                               ; preds = %if.end.i304
  %code11.i305 = getelementptr inbounds %union.tree_node* %context.0.i302, i64 0, i32 0, i32 0, i32 2
  %bf.load12.i306 = load i32* %code11.i305, align 8
  %bf.clear13.i307 = and i32 %bf.load12.i306, 255
  %idxprom23.i308 = zext i32 %bf.clear13.i307 to i64
  %arrayidx.i309 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom23.i308
  %25 = load i8* %arrayidx.i309, align 1, !tbaa !1
  %cmp14.i310 = icmp eq i8 %25, 116
  br i1 %cmp14.i310, label %if.then74, label %if.end78

if.then74:                                        ; preds = %land.lhs.true.i312
  call fastcc void @gen_type_die_for_member(%union.tree_node* %context.0.i302, %union.tree_node* %decl, %struct.die_struct* %context_die)
  br label %if.end78

if.end78:                                         ; preds = %if.end.i304, %land.lhs.true.i312, %if.then56, %if.then74, %if.else57, %if.then33
  call fastcc void @gen_subprogram_die(%union.tree_node* %decl, %struct.die_struct* %context_die)
  br label %sw.epilog

sw.bb79:                                          ; preds = %if.end
  %26 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp80 = icmp ult i32 %26, 2
  br i1 %cmp80, label %sw.epilog, label %if.end83

if.end83:                                         ; preds = %sw.bb79
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %27 = load %union.tree_node** %name, align 8, !tbaa !86
  %cmp85 = icmp eq %union.tree_node* %27, null
  %abstract_flag.i268.phi.trans.insert = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %.phi.trans.insert = bitcast i48* %abstract_flag.i268.phi.trans.insert to i64*
  %bf.load.i269.pre = load i64* %.phi.trans.insert, align 8
  br i1 %cmp85, label %land.lhs.true119, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %if.end83
  %bf.cast93 = and i64 %bf.load.i269.pre, 4194304
  %tobool94 = icmp eq i64 %bf.cast93, 0
  br i1 %tobool94, label %lor.lhs.false.i262, label %land.lhs.true95

land.lhs.true95:                                  ; preds = %lor.lhs.false87
  %type97 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %28 = load %union.tree_node** %type97, align 8, !tbaa !87
  %.idx = getelementptr %union.tree_node* %28, i64 0, i32 0, i32 0, i32 2
  %.idx.val = load i32* %.idx, align 8
  %bf.clear.i286 = and i32 %.idx.val, 255
  %29 = and i32 %.idx.val, 254
  %30 = icmp eq i32 %29, 20
  %cmp4.i = icmp eq i32 %bf.clear.i286, 22
  %or.cond6.i = or i1 %30, %cmp4.i
  %cmp5.i = icmp eq i32 %bf.clear.i286, 10
  %.cmp5.i = or i1 %or.cond6.i, %cmp5.i
  br i1 %.cmp5.i, label %land.lhs.true100, label %if.end126

land.lhs.true100:                                 ; preds = %land.lhs.true95
  %chain = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %union.tree_node** %chain, align 8, !tbaa !88
  %cmp104 = icmp eq %union.tree_node* %31, %decl
  br i1 %cmp104, label %land.lhs.true119, label %lor.lhs.false106

lor.lhs.false106:                                 ; preds = %land.lhs.true100
  %abstract_origin108 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %32 = load %union.tree_node** %abstract_origin108, align 8, !tbaa !89
  %cmp109 = icmp eq %union.tree_node* %32, null
  br i1 %cmp109, label %if.end126, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %lor.lhs.false106
  %bf.cast.i279 = and i64 %bf.load.i269.pre, 32768
  %tobool.i280 = icmp ne i64 %bf.cast.i279, 0
  %cmp.i283 = icmp eq %union.tree_node* %32, %decl
  %or.cond.i284 = and i1 %tobool.i280, %cmp.i283
  %retval.0.i285 = select i1 %or.cond.i284, %union.tree_node* null, %union.tree_node* %32
  %cmp117 = icmp eq %union.tree_node* %retval.0.i285, %31
  br i1 %cmp117, label %land.lhs.true119, label %if.end126

land.lhs.true119:                                 ; preds = %if.end83, %land.lhs.true111, %land.lhs.true100
  %bf.cast.i270 = and i64 %bf.load.i269.pre, 32768
  %tobool.i271 = icmp ne i64 %bf.cast.i270, 0
  %abstract_origin4.phi.trans.insert.i272 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %.pre.i273 = load %union.tree_node** %abstract_origin4.phi.trans.insert.i272, align 8, !tbaa !89
  %cmp.i274 = icmp eq %union.tree_node* %.pre.i273, %decl
  %or.cond.i275 = and i1 %tobool.i271, %cmp.i274
  %cmp121700 = icmp eq %union.tree_node* %.pre.i273, null
  %cmp121 = or i1 %or.cond.i275, %cmp121700
  br i1 %cmp121, label %if.end126, label %if.then123

if.then123:                                       ; preds = %land.lhs.true119
  %type125 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %33 = load %union.tree_node** %type125, align 8, !tbaa !87
  %cmp.i317 = icmp eq %union.tree_node* %33, null
  %34 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp1.i = icmp eq %union.tree_node* %34, %33
  %or.cond.i318 = or i1 %cmp.i317, %cmp1.i
  br i1 %or.cond.i318, label %sw.epilog, label %if.end.i321

if.end.i321:                                      ; preds = %if.then123
  %type.idx.i = getelementptr %union.tree_node* %33, i64 0, i32 0, i32 15
  %type.idx.val.i = load %union.tree_node** %type.idx.i, align 8, !tbaa !107
  %code.i.i = getelementptr inbounds %union.tree_node* %type.idx.val.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i = load i32* %code.i.i, align 8
  %bf.clear.i.i319 = and i32 %bf.load.i.i, 255
  %cmp.i.i320 = icmp eq i32 %bf.clear.i.i319, 18
  br i1 %cmp.i.i320, label %while.cond.i.i, label %type_main_variant.exit.i

while.cond.i.i:                                   ; preds = %if.end.i321, %while.cond.i.i
  %type.addr.0.i.i = phi %union.tree_node* [ %36, %while.cond.i.i ], [ %type.idx.val.i, %if.end.i321 ]
  %35 = getelementptr inbounds %union.tree_node* %type.addr.0.i.i, i64 0, i32 0, i32 15
  %36 = load %union.tree_node** %35, align 8, !tbaa !107
  %cmp4.i.i322 = icmp eq %union.tree_node* %type.addr.0.i.i, %36
  br i1 %cmp4.i.i322, label %type_main_variant.exit.i, label %while.cond.i.i

type_main_variant.exit.i:                         ; preds = %while.cond.i.i, %if.end.i321
  %type.addr.1.i.i = phi %union.tree_node* [ %type.idx.val.i, %if.end.i321 ], [ %type.addr.0.i.i, %while.cond.i.i ]
  %cmp2.i = icmp eq %union.tree_node* %type.addr.1.i.i, %33
  br i1 %cmp2.i, label %if.end4.i, label %if.then3.i

if.then3.i:                                       ; preds = %type_main_variant.exit.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 11221, i8* getelementptr inbounds ([34 x i8]* @__FUNCTION__.gen_tagged_type_instantiation_die, i64 0, i64 0)) #7
  unreachable

if.end4.i:                                        ; preds = %type_main_variant.exit.i
  %code.i323 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 2
  %bf.load.i324 = load i32* %code.i323, align 8
  %bf.clear.i325 = and i32 %bf.load.i324, 255
  switch i32 %bf.clear.i325, label %sw.default.i [
    i32 0, label %sw.epilog
    i32 10, label %sw.bb.i
    i32 20, label %sw.bb5.i
    i32 21, label %sw.bb6.i
    i32 22, label %sw.bb6.i
  ]

sw.bb.i:                                          ; preds = %if.end4.i
  %call.i.i33.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %37 = bitcast i8* %call.i.i33.i to %struct.die_struct*
  %die_tag.i.i34.i = bitcast i8* %call.i.i33.i to i32*
  store i32 4, i32* %die_tag.i.i34.i, align 4, !tbaa !69
  %cmp.i.i35.i = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i.i35.i, label %if.else.i.i49.i, label %if.then.i.i37.i

if.then.i.i37.i:                                  ; preds = %sw.bb.i
  %cmp1.i.i.i36.i = icmp eq i8* %call.i.i33.i, null
  br i1 %cmp1.i.i.i36.i, label %gen_inlined_enumeration_type_die.exit.i, label %if.then.i.i.i39.i

if.then.i.i.i39.i:                                ; preds = %if.then.i.i37.i
  %cmp2.i.i.i38.i = icmp eq %struct.die_struct* %37, %context_die
  br i1 %cmp2.i.i.i38.i, label %if.then3.i.i.i40.i, label %if.end.i.i.i44.i

if.then3.i.i.i40.i:                               ; preds = %if.then.i.i.i39.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i44.i:                                 ; preds = %if.then.i.i.i39.i
  %die_parent.i.i.i41.i = getelementptr inbounds i8* %call.i.i33.i, i64 24
  %38 = bitcast i8* %die_parent.i.i.i41.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %38, align 8, !tbaa !55
  %die_child.i.i.i42.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %39 = load %struct.die_struct** %die_child.i.i.i42.i, align 8, !tbaa !62
  %die_sib.i.i.i43.i = getelementptr inbounds i8* %call.i.i33.i, i64 40
  %40 = bitcast i8* %die_sib.i.i.i43.i to %struct.die_struct**
  store %struct.die_struct* %39, %struct.die_struct** %40, align 8, !tbaa !63
  store %struct.die_struct* %37, %struct.die_struct** %die_child.i.i.i42.i, align 8, !tbaa !62
  br label %gen_inlined_enumeration_type_die.exit.i

if.else.i.i49.i:                                  ; preds = %sw.bb.i
  %call1.i.i45.i = call noalias i8* @xmalloc(i64 24) #5
  %41 = bitcast i8* %call1.i.i45.i to %struct.limbo_die_struct*
  %die2.i.i46.i = bitcast i8* %call1.i.i45.i to %struct.die_struct**
  store %struct.die_struct* %37, %struct.die_struct** %die2.i.i46.i, align 8, !tbaa !54
  %created_for.i.i47.i = getelementptr inbounds i8* %call1.i.i45.i, i64 8
  %42 = bitcast i8* %created_for.i.i47.i to %union.tree_node**
  store %union.tree_node* %33, %union.tree_node** %42, align 8, !tbaa !64
  %43 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i48.i = getelementptr inbounds i8* %call1.i.i45.i, i64 16
  %44 = bitcast i8* %next.i.i48.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %43, %struct.limbo_die_struct** %44, align 8, !tbaa !52
  store %struct.limbo_die_struct* %41, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %gen_inlined_enumeration_type_die.exit.i

gen_inlined_enumeration_type_die.exit.i:          ; preds = %if.else.i.i49.i, %if.end.i.i.i44.i, %if.then.i.i37.i
  %bf.load.i585 = load i32* %code.i323, align 8
  %bf.clear.i586 = and i32 %bf.load.i585, 255
  %cmp.i587 = icmp eq i32 %bf.clear.i586, 30
  br i1 %cmp.i587, label %if.end11.i603, label %if.then.i591

if.then.i591:                                     ; preds = %gen_inlined_enumeration_type_die.exit.i
  %idxprom50.i588 = zext i32 %bf.clear.i586 to i64
  %arrayidx.i589 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50.i588
  %45 = load i8* %arrayidx.i589, align 1, !tbaa !1
  %cmp5.i590 = icmp eq i8 %45, 116
  br i1 %cmp5.i590, label %if.then7.i593, label %if.end.i597

if.then7.i593:                                    ; preds = %if.then.i591
  %chain.i592 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0
  %46 = load %union.tree_node** %chain.i592, align 8, !tbaa !88
  br label %if.end.i597

if.end.i597:                                      ; preds = %if.then7.i593, %if.then.i591
  %fn.0.i594 = phi %union.tree_node* [ %46, %if.then7.i593 ], [ %33, %if.then.i591 ]
  %call.i595 = call %union.tree_node* @decl_function_context(%union.tree_node* %fn.0.i594) #5
  %tobool.i596 = icmp eq %union.tree_node* %call.i595, null
  br i1 %tobool.i596, label %if.end11.i603, label %if.then9.i598

if.then9.i598:                                    ; preds = %if.end.i597
  call void @dwarf2out_abstract_function(%union.tree_node* %call.i595) #5
  br label %if.end11.i603

if.end11.i603:                                    ; preds = %if.then9.i598, %if.end.i597, %gen_inlined_enumeration_type_die.exit.i
  %bf.load14.i599 = load i32* %code.i323, align 8
  %bf.clear15.i600 = and i32 %bf.load14.i599, 255
  %idxprom1649.i601 = zext i32 %bf.clear15.i600 to i64
  %arrayidx17.i602 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1649.i601
  %47 = load i8* %arrayidx17.i602, align 1, !tbaa !1
  switch i8 %47, label %if.then38.i619 [
    i8 100, label %if.then21.i607
    i8 116, label %if.then32.i615
  ]

if.then21.i607:                                   ; preds = %if.end11.i603
  %origin.idx.i604 = getelementptr %union.tree_node* %33, i64 0, i32 0, i32 3
  %origin.idx.val.i605 = load i32* %origin.idx.i604, align 4, !tbaa !65
  %48 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i606 = icmp ugt i32 %48, %origin.idx.val.i605
  br i1 %cmp.i.i606, label %cond.true.i.i610, label %if.then38.i619

cond.true.i.i610:                                 ; preds = %if.then21.i607
  %idxprom.i.i608 = zext i32 %origin.idx.val.i605 to i64
  %49 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i609 = getelementptr inbounds %struct.die_struct** %49, i64 %idxprom.i.i608
  %50 = load %struct.die_struct** %arrayidx.i.i609, align 8, !tbaa !6
  br label %if.end35.i618

if.then32.i615:                                   ; preds = %if.end11.i603
  %origin.idx51.i613 = getelementptr %union.tree_node* %33, i64 0, i32 0, i32 10
  %origin.idx51.val.i614 = load %union.tree_node** %origin.idx51.i613, align 8
  %51 = bitcast %union.tree_node* %origin.idx51.val.i614 to %struct.die_struct*
  br label %if.end35.i618

if.end35.i618:                                    ; preds = %cond.true.i.i610, %if.then32.i615
  %origin_die.0.i616 = phi %struct.die_struct* [ %51, %if.then32.i615 ], [ %50, %cond.true.i.i610 ]
  %cmp36.i617 = icmp eq %struct.die_struct* %origin_die.0.i616, null
  br i1 %cmp36.i617, label %if.then38.i619, label %add_abstract_origin_attribute.exit620

if.then38.i619:                                   ; preds = %if.then21.i607, %if.end11.i603, %if.end35.i618
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9459, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.add_abstract_origin_attribute, i64 0, i64 0)) #7
  unreachable

add_abstract_origin_attribute.exit620:            ; preds = %if.end35.i618
  %call.i678 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i679 = getelementptr inbounds i8* %call.i678, i64 8
  %52 = bitcast i8* %dw_attr_next.i679 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %52, align 8, !tbaa !72
  %dw_attr.i680 = bitcast i8* %call.i678 to i32*
  store i32 49, i32* %dw_attr.i680, align 4, !tbaa !57
  %dw_attr_val.i681 = getelementptr inbounds i8* %call.i678, i64 16
  %val_class.i682 = bitcast i8* %dw_attr_val.i681 to i32*
  store i32 10, i32* %val_class.i682, align 4, !tbaa !59
  %v.i683 = getelementptr inbounds i8* %call.i678, i64 24
  %die2.i684 = bitcast i8* %v.i683 to %struct.die_struct**
  store %struct.die_struct* %origin_die.0.i616, %struct.die_struct** %die2.i684, align 8, !tbaa !60
  %external.i685 = getelementptr inbounds i8* %call.i678, i64 32
  %53 = bitcast i8* %external.i685 to i32*
  store i32 0, i32* %53, align 4, !tbaa !108
  %cmp.i.i686 = icmp ne i8* %call.i.i33.i, null
  %cmp1.i.i687 = icmp ne i8* %call.i678, null
  %or.cond.i.i688 = and i1 %cmp.i.i686, %cmp1.i.i687
  br i1 %or.cond.i.i688, label %if.then.i.i690, label %sw.epilog

if.then.i.i690:                                   ; preds = %add_abstract_origin_attribute.exit620
  %54 = bitcast i8* %call.i678 to %struct.dw_attr_struct*
  %die_attr.i.i689 = getelementptr inbounds i8* %call.i.i33.i, i64 16
  %55 = bitcast i8* %die_attr.i.i689 to %struct.dw_attr_struct**
  %56 = load %struct.dw_attr_struct** %55, align 8, !tbaa !73
  store %struct.dw_attr_struct* %56, %struct.dw_attr_struct** %52, align 8, !tbaa !72
  store %struct.dw_attr_struct* %54, %struct.dw_attr_struct** %55, align 8, !tbaa !73
  br label %sw.epilog

sw.bb5.i:                                         ; preds = %if.end4.i
  %call.i.i16.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %57 = bitcast i8* %call.i.i16.i to %struct.die_struct*
  %die_tag.i.i17.i = bitcast i8* %call.i.i16.i to i32*
  store i32 19, i32* %die_tag.i.i17.i, align 4, !tbaa !69
  %cmp.i.i18.i = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i.i18.i, label %if.else.i.i32.i, label %if.then.i.i20.i

if.then.i.i20.i:                                  ; preds = %sw.bb5.i
  %cmp1.i.i.i19.i = icmp eq i8* %call.i.i16.i, null
  br i1 %cmp1.i.i.i19.i, label %gen_inlined_structure_type_die.exit.i, label %if.then.i.i.i22.i

if.then.i.i.i22.i:                                ; preds = %if.then.i.i20.i
  %cmp2.i.i.i21.i = icmp eq %struct.die_struct* %57, %context_die
  br i1 %cmp2.i.i.i21.i, label %if.then3.i.i.i23.i, label %if.end.i.i.i27.i

if.then3.i.i.i23.i:                               ; preds = %if.then.i.i.i22.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i27.i:                                 ; preds = %if.then.i.i.i22.i
  %die_parent.i.i.i24.i = getelementptr inbounds i8* %call.i.i16.i, i64 24
  %58 = bitcast i8* %die_parent.i.i.i24.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %58, align 8, !tbaa !55
  %die_child.i.i.i25.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %59 = load %struct.die_struct** %die_child.i.i.i25.i, align 8, !tbaa !62
  %die_sib.i.i.i26.i = getelementptr inbounds i8* %call.i.i16.i, i64 40
  %60 = bitcast i8* %die_sib.i.i.i26.i to %struct.die_struct**
  store %struct.die_struct* %59, %struct.die_struct** %60, align 8, !tbaa !63
  store %struct.die_struct* %57, %struct.die_struct** %die_child.i.i.i25.i, align 8, !tbaa !62
  br label %gen_inlined_structure_type_die.exit.i

if.else.i.i32.i:                                  ; preds = %sw.bb5.i
  %call1.i.i28.i = call noalias i8* @xmalloc(i64 24) #5
  %61 = bitcast i8* %call1.i.i28.i to %struct.limbo_die_struct*
  %die2.i.i29.i = bitcast i8* %call1.i.i28.i to %struct.die_struct**
  store %struct.die_struct* %57, %struct.die_struct** %die2.i.i29.i, align 8, !tbaa !54
  %created_for.i.i30.i = getelementptr inbounds i8* %call1.i.i28.i, i64 8
  %62 = bitcast i8* %created_for.i.i30.i to %union.tree_node**
  store %union.tree_node* %33, %union.tree_node** %62, align 8, !tbaa !64
  %63 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i31.i = getelementptr inbounds i8* %call1.i.i28.i, i64 16
  %64 = bitcast i8* %next.i.i31.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %63, %struct.limbo_die_struct** %64, align 8, !tbaa !52
  store %struct.limbo_die_struct* %61, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %gen_inlined_structure_type_die.exit.i

gen_inlined_structure_type_die.exit.i:            ; preds = %if.else.i.i32.i, %if.end.i.i.i27.i, %if.then.i.i20.i
  %bf.load.i548 = load i32* %code.i323, align 8
  %bf.clear.i549 = and i32 %bf.load.i548, 255
  %cmp.i550 = icmp eq i32 %bf.clear.i549, 30
  br i1 %cmp.i550, label %if.end11.i566, label %if.then.i554

if.then.i554:                                     ; preds = %gen_inlined_structure_type_die.exit.i
  %idxprom50.i551 = zext i32 %bf.clear.i549 to i64
  %arrayidx.i552 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50.i551
  %65 = load i8* %arrayidx.i552, align 1, !tbaa !1
  %cmp5.i553 = icmp eq i8 %65, 116
  br i1 %cmp5.i553, label %if.then7.i556, label %if.end.i560

if.then7.i556:                                    ; preds = %if.then.i554
  %chain.i555 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0
  %66 = load %union.tree_node** %chain.i555, align 8, !tbaa !88
  br label %if.end.i560

if.end.i560:                                      ; preds = %if.then7.i556, %if.then.i554
  %fn.0.i557 = phi %union.tree_node* [ %66, %if.then7.i556 ], [ %33, %if.then.i554 ]
  %call.i558 = call %union.tree_node* @decl_function_context(%union.tree_node* %fn.0.i557) #5
  %tobool.i559 = icmp eq %union.tree_node* %call.i558, null
  br i1 %tobool.i559, label %if.end11.i566, label %if.then9.i561

if.then9.i561:                                    ; preds = %if.end.i560
  call void @dwarf2out_abstract_function(%union.tree_node* %call.i558) #5
  br label %if.end11.i566

if.end11.i566:                                    ; preds = %if.then9.i561, %if.end.i560, %gen_inlined_structure_type_die.exit.i
  %bf.load14.i562 = load i32* %code.i323, align 8
  %bf.clear15.i563 = and i32 %bf.load14.i562, 255
  %idxprom1649.i564 = zext i32 %bf.clear15.i563 to i64
  %arrayidx17.i565 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1649.i564
  %67 = load i8* %arrayidx17.i565, align 1, !tbaa !1
  switch i8 %67, label %if.then38.i582 [
    i8 100, label %if.then21.i570
    i8 116, label %if.then32.i578
  ]

if.then21.i570:                                   ; preds = %if.end11.i566
  %origin.idx.i567 = getelementptr %union.tree_node* %33, i64 0, i32 0, i32 3
  %origin.idx.val.i568 = load i32* %origin.idx.i567, align 4, !tbaa !65
  %68 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i569 = icmp ugt i32 %68, %origin.idx.val.i568
  br i1 %cmp.i.i569, label %cond.true.i.i573, label %if.then38.i582

cond.true.i.i573:                                 ; preds = %if.then21.i570
  %idxprom.i.i571 = zext i32 %origin.idx.val.i568 to i64
  %69 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i572 = getelementptr inbounds %struct.die_struct** %69, i64 %idxprom.i.i571
  %70 = load %struct.die_struct** %arrayidx.i.i572, align 8, !tbaa !6
  br label %if.end35.i581

if.then32.i578:                                   ; preds = %if.end11.i566
  %origin.idx51.i576 = getelementptr %union.tree_node* %33, i64 0, i32 0, i32 10
  %origin.idx51.val.i577 = load %union.tree_node** %origin.idx51.i576, align 8
  %71 = bitcast %union.tree_node* %origin.idx51.val.i577 to %struct.die_struct*
  br label %if.end35.i581

if.end35.i581:                                    ; preds = %cond.true.i.i573, %if.then32.i578
  %origin_die.0.i579 = phi %struct.die_struct* [ %71, %if.then32.i578 ], [ %70, %cond.true.i.i573 ]
  %cmp36.i580 = icmp eq %struct.die_struct* %origin_die.0.i579, null
  br i1 %cmp36.i580, label %if.then38.i582, label %add_abstract_origin_attribute.exit583

if.then38.i582:                                   ; preds = %if.then21.i570, %if.end11.i566, %if.end35.i581
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9459, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.add_abstract_origin_attribute, i64 0, i64 0)) #7
  unreachable

add_abstract_origin_attribute.exit583:            ; preds = %if.end35.i581
  %call.i664 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i665 = getelementptr inbounds i8* %call.i664, i64 8
  %72 = bitcast i8* %dw_attr_next.i665 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %72, align 8, !tbaa !72
  %dw_attr.i666 = bitcast i8* %call.i664 to i32*
  store i32 49, i32* %dw_attr.i666, align 4, !tbaa !57
  %dw_attr_val.i667 = getelementptr inbounds i8* %call.i664, i64 16
  %val_class.i668 = bitcast i8* %dw_attr_val.i667 to i32*
  store i32 10, i32* %val_class.i668, align 4, !tbaa !59
  %v.i669 = getelementptr inbounds i8* %call.i664, i64 24
  %die2.i670 = bitcast i8* %v.i669 to %struct.die_struct**
  store %struct.die_struct* %origin_die.0.i579, %struct.die_struct** %die2.i670, align 8, !tbaa !60
  %external.i671 = getelementptr inbounds i8* %call.i664, i64 32
  %73 = bitcast i8* %external.i671 to i32*
  store i32 0, i32* %73, align 4, !tbaa !108
  %cmp.i.i672 = icmp ne i8* %call.i.i16.i, null
  %cmp1.i.i673 = icmp ne i8* %call.i664, null
  %or.cond.i.i674 = and i1 %cmp.i.i672, %cmp1.i.i673
  br i1 %or.cond.i.i674, label %if.then.i.i676, label %sw.epilog

if.then.i.i676:                                   ; preds = %add_abstract_origin_attribute.exit583
  %74 = bitcast i8* %call.i664 to %struct.dw_attr_struct*
  %die_attr.i.i675 = getelementptr inbounds i8* %call.i.i16.i, i64 16
  %75 = bitcast i8* %die_attr.i.i675 to %struct.dw_attr_struct**
  %76 = load %struct.dw_attr_struct** %75, align 8, !tbaa !73
  store %struct.dw_attr_struct* %76, %struct.dw_attr_struct** %72, align 8, !tbaa !72
  store %struct.dw_attr_struct* %74, %struct.dw_attr_struct** %75, align 8, !tbaa !73
  br label %sw.epilog

sw.bb6.i:                                         ; preds = %if.end4.i, %if.end4.i
  %call.i.i.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %77 = bitcast i8* %call.i.i.i to %struct.die_struct*
  %die_tag.i.i.i = bitcast i8* %call.i.i.i to i32*
  store i32 23, i32* %die_tag.i.i.i, align 4, !tbaa !69
  %cmp.i.i.i = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %sw.bb6.i
  %cmp1.i.i.i.i = icmp eq i8* %call.i.i.i, null
  br i1 %cmp1.i.i.i.i, label %gen_inlined_union_type_die.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i.i
  %cmp2.i.i.i.i = icmp eq %struct.die_struct* %77, %context_die
  br i1 %cmp2.i.i.i.i, label %if.then3.i.i.i.i, label %if.end.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %if.then.i.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i.i:                                   ; preds = %if.then.i.i.i.i
  %die_parent.i.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 24
  %78 = bitcast i8* %die_parent.i.i.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %78, align 8, !tbaa !55
  %die_child.i.i.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %79 = load %struct.die_struct** %die_child.i.i.i.i, align 8, !tbaa !62
  %die_sib.i.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 40
  %80 = bitcast i8* %die_sib.i.i.i.i to %struct.die_struct**
  store %struct.die_struct* %79, %struct.die_struct** %80, align 8, !tbaa !63
  store %struct.die_struct* %77, %struct.die_struct** %die_child.i.i.i.i, align 8, !tbaa !62
  br label %gen_inlined_union_type_die.exit.i

if.else.i.i.i:                                    ; preds = %sw.bb6.i
  %call1.i.i.i = call noalias i8* @xmalloc(i64 24) #5
  %81 = bitcast i8* %call1.i.i.i to %struct.limbo_die_struct*
  %die2.i.i.i = bitcast i8* %call1.i.i.i to %struct.die_struct**
  store %struct.die_struct* %77, %struct.die_struct** %die2.i.i.i, align 8, !tbaa !54
  %created_for.i.i.i = getelementptr inbounds i8* %call1.i.i.i, i64 8
  %82 = bitcast i8* %created_for.i.i.i to %union.tree_node**
  store %union.tree_node* %33, %union.tree_node** %82, align 8, !tbaa !64
  %83 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i.i = getelementptr inbounds i8* %call1.i.i.i, i64 16
  %84 = bitcast i8* %next.i.i.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %83, %struct.limbo_die_struct** %84, align 8, !tbaa !52
  store %struct.limbo_die_struct* %81, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %gen_inlined_union_type_die.exit.i

gen_inlined_union_type_die.exit.i:                ; preds = %if.else.i.i.i, %if.end.i.i.i.i, %if.then.i.i.i
  %bf.load.i531 = load i32* %code.i323, align 8
  %bf.clear.i532 = and i32 %bf.load.i531, 255
  %cmp.i533 = icmp eq i32 %bf.clear.i532, 30
  br i1 %cmp.i533, label %if.end11.i, label %if.then.i536

if.then.i536:                                     ; preds = %gen_inlined_union_type_die.exit.i
  %idxprom50.i = zext i32 %bf.clear.i532 to i64
  %arrayidx.i534 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50.i
  %85 = load i8* %arrayidx.i534, align 1, !tbaa !1
  %cmp5.i535 = icmp eq i8 %85, 116
  br i1 %cmp5.i535, label %if.then7.i, label %if.end.i539

if.then7.i:                                       ; preds = %if.then.i536
  %chain.i537 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0
  %86 = load %union.tree_node** %chain.i537, align 8, !tbaa !88
  br label %if.end.i539

if.end.i539:                                      ; preds = %if.then7.i, %if.then.i536
  %fn.0.i = phi %union.tree_node* [ %86, %if.then7.i ], [ %33, %if.then.i536 ]
  %call.i = call %union.tree_node* @decl_function_context(%union.tree_node* %fn.0.i) #5
  %tobool.i538 = icmp eq %union.tree_node* %call.i, null
  br i1 %tobool.i538, label %if.end11.i, label %if.then9.i540

if.then9.i540:                                    ; preds = %if.end.i539
  call void @dwarf2out_abstract_function(%union.tree_node* %call.i) #5
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i540, %if.end.i539, %gen_inlined_union_type_die.exit.i
  %bf.load14.i541 = load i32* %code.i323, align 8
  %bf.clear15.i = and i32 %bf.load14.i541, 255
  %idxprom1649.i = zext i32 %bf.clear15.i to i64
  %arrayidx17.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1649.i
  %87 = load i8* %arrayidx17.i, align 1, !tbaa !1
  switch i8 %87, label %if.then38.i546 [
    i8 100, label %if.then21.i
    i8 116, label %if.then32.i
  ]

if.then21.i:                                      ; preds = %if.end11.i
  %origin.idx.i = getelementptr %union.tree_node* %33, i64 0, i32 0, i32 3
  %origin.idx.val.i = load i32* %origin.idx.i, align 4, !tbaa !65
  %88 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i542 = icmp ugt i32 %88, %origin.idx.val.i
  br i1 %cmp.i.i542, label %cond.true.i.i, label %if.then38.i546

cond.true.i.i:                                    ; preds = %if.then21.i
  %idxprom.i.i543 = zext i32 %origin.idx.val.i to i64
  %89 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i544 = getelementptr inbounds %struct.die_struct** %89, i64 %idxprom.i.i543
  %90 = load %struct.die_struct** %arrayidx.i.i544, align 8, !tbaa !6
  br label %if.end35.i

if.then32.i:                                      ; preds = %if.end11.i
  %origin.idx51.i = getelementptr %union.tree_node* %33, i64 0, i32 0, i32 10
  %origin.idx51.val.i = load %union.tree_node** %origin.idx51.i, align 8
  %91 = bitcast %union.tree_node* %origin.idx51.val.i to %struct.die_struct*
  br label %if.end35.i

if.end35.i:                                       ; preds = %cond.true.i.i, %if.then32.i
  %origin_die.0.i = phi %struct.die_struct* [ %91, %if.then32.i ], [ %90, %cond.true.i.i ]
  %cmp36.i = icmp eq %struct.die_struct* %origin_die.0.i, null
  br i1 %cmp36.i, label %if.then38.i546, label %add_abstract_origin_attribute.exit

if.then38.i546:                                   ; preds = %if.then21.i, %if.end11.i, %if.end35.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9459, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.add_abstract_origin_attribute, i64 0, i64 0)) #7
  unreachable

add_abstract_origin_attribute.exit:               ; preds = %if.end35.i
  %call.i650 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i651 = getelementptr inbounds i8* %call.i650, i64 8
  %92 = bitcast i8* %dw_attr_next.i651 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %92, align 8, !tbaa !72
  %dw_attr.i652 = bitcast i8* %call.i650 to i32*
  store i32 49, i32* %dw_attr.i652, align 4, !tbaa !57
  %dw_attr_val.i653 = getelementptr inbounds i8* %call.i650, i64 16
  %val_class.i654 = bitcast i8* %dw_attr_val.i653 to i32*
  store i32 10, i32* %val_class.i654, align 4, !tbaa !59
  %v.i655 = getelementptr inbounds i8* %call.i650, i64 24
  %die2.i656 = bitcast i8* %v.i655 to %struct.die_struct**
  store %struct.die_struct* %origin_die.0.i, %struct.die_struct** %die2.i656, align 8, !tbaa !60
  %external.i657 = getelementptr inbounds i8* %call.i650, i64 32
  %93 = bitcast i8* %external.i657 to i32*
  store i32 0, i32* %93, align 4, !tbaa !108
  %cmp.i.i658 = icmp ne i8* %call.i.i.i, null
  %cmp1.i.i659 = icmp ne i8* %call.i650, null
  %or.cond.i.i660 = and i1 %cmp.i.i658, %cmp1.i.i659
  br i1 %or.cond.i.i660, label %if.then.i.i662, label %sw.epilog

if.then.i.i662:                                   ; preds = %add_abstract_origin_attribute.exit
  %94 = bitcast i8* %call.i650 to %struct.dw_attr_struct*
  %die_attr.i.i661 = getelementptr inbounds i8* %call.i.i.i, i64 16
  %95 = bitcast i8* %die_attr.i.i661 to %struct.dw_attr_struct**
  %96 = load %struct.dw_attr_struct** %95, align 8, !tbaa !73
  store %struct.dw_attr_struct* %96, %struct.dw_attr_struct** %92, align 8, !tbaa !72
  store %struct.dw_attr_struct* %94, %struct.dw_attr_struct** %95, align 8, !tbaa !73
  br label %sw.epilog

sw.default.i:                                     ; preds = %if.end4.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 11245, i8* getelementptr inbounds ([34 x i8]* @__FUNCTION__.gen_tagged_type_instantiation_die, i64 0, i64 0)) #7
  unreachable

if.end126:                                        ; preds = %land.lhs.true95, %land.lhs.true119, %lor.lhs.false106, %land.lhs.true111
  br i1 %cmp85, label %if.end126.if.then129_crit_edge, label %lor.lhs.false.i262

if.end126.if.then129_crit_edge:                   ; preds = %if.end126
  %type131.phi.trans.insert = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %.pre = load %union.tree_node** %type131.phi.trans.insert, align 8, !tbaa !87
  br label %if.then129

lor.lhs.false.i262:                               ; preds = %lor.lhs.false87, %if.end126
  %artificial_flag.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %97 = bitcast i48* %artificial_flag.i to i64*
  %bf.cast.i260 = and i64 %bf.load.i269.pre, 4194304
  %tobool.i261 = icmp eq i64 %bf.cast.i260, 0
  br i1 %tobool.i261, label %if.else132, label %land.lhs.true.i264

land.lhs.true.i264:                               ; preds = %lor.lhs.false.i262
  %type.i263 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %98 = load %union.tree_node** %type.i263, align 8, !tbaa !87
  %.idx68.i = getelementptr %union.tree_node* %98, i64 0, i32 0, i32 0, i32 2
  %.idx68.val.i = load i32* %.idx68.i, align 8
  %bf.clear.i.i = and i32 %.idx68.val.i, 255
  %99 = and i32 %.idx68.val.i, 254
  %100 = icmp eq i32 %99, 20
  %cmp4.i.i = icmp eq i32 %bf.clear.i.i, 22
  %or.cond6.i.i = or i1 %100, %cmp4.i.i
  %cmp5.i.i = icmp eq i32 %bf.clear.i.i, 10
  %.cmp5.i.i = or i1 %or.cond6.i.i, %cmp5.i.i
  br i1 %.cmp5.i.i, label %land.lhs.true4.i, label %land.lhs.true26.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i264
  %chain.i = getelementptr inbounds %union.tree_node* %98, i64 0, i32 0, i32 0, i32 0
  %101 = load %union.tree_node** %chain.i, align 8, !tbaa !88
  %cmp8.i = icmp eq %union.tree_node* %101, %decl
  br i1 %cmp8.i, label %if.then129, label %lor.lhs.false9.i

lor.lhs.false9.i:                                 ; preds = %land.lhs.true4.i
  %abstract_origin.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %102 = load %union.tree_node** %abstract_origin.i, align 8, !tbaa !89
  %cmp11.i = icmp eq %union.tree_node* %102, null
  br i1 %cmp11.i, label %land.lhs.true26.i, label %land.lhs.true12.i

land.lhs.true12.i:                                ; preds = %lor.lhs.false9.i
  %bf.cast.i.i = and i64 %bf.load.i269.pre, 32768
  %tobool.i.i = icmp ne i64 %bf.cast.i.i, 0
  %cmp.i.i = icmp eq %union.tree_node* %102, %decl
  %or.cond.i.i = and i1 %tobool.i.i, %cmp.i.i
  %retval.0.i.i = select i1 %or.cond.i.i, %union.tree_node* null, %union.tree_node* %102
  %cmp18.i = icmp eq %union.tree_node* %retval.0.i.i, %101
  br i1 %cmp18.i, label %if.then129, label %land.lhs.true26.i

land.lhs.true26.i:                                ; preds = %lor.lhs.false9.i, %land.lhs.true12.i, %land.lhs.true.i264
  %context.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %103 = load %union.tree_node** %context.i, align 8, !tbaa !66
  %tobool28.i = icmp eq %union.tree_node* %103, null
  br i1 %tobool28.i, label %if.else132, label %land.lhs.true29.i

land.lhs.true29.i:                                ; preds = %land.lhs.true26.i
  %.idx.i = getelementptr %union.tree_node* %103, i64 0, i32 0, i32 0, i32 2
  %.idx.val.i = load i32* %.idx.i, align 8
  %bf.clear.i69.i = and i32 %.idx.val.i, 255
  %104 = and i32 %.idx.val.i, 254
  %105 = icmp eq i32 %104, 20
  %cmp4.i70.i = icmp eq i32 %bf.clear.i69.i, 22
  %or.cond6.i71.i = or i1 %105, %cmp4.i70.i
  %cmp5.i72.i = icmp eq i32 %bf.clear.i69.i, 10
  %.cmp5.i73.i = or i1 %or.cond6.i71.i, %cmp5.i72.i
  br i1 %.cmp5.i73.i, label %land.lhs.true34.i, label %if.else132

land.lhs.true34.i:                                ; preds = %land.lhs.true29.i
  %106 = getelementptr inbounds %union.tree_node* %103, i64 0, i32 0, i32 11
  %107 = load %union.tree_node** %106, align 8, !tbaa !102
  %code.i266 = getelementptr inbounds %union.tree_node* %107, i64 0, i32 0, i32 0, i32 2
  %bf.load40.i = load i32* %code.i266, align 8
  %bf.clear41.i = and i32 %bf.load40.i, 255
  %cmp42.i = icmp eq i32 %bf.clear41.i, 33
  br i1 %cmp42.i, label %land.lhs.true43.i, label %if.else132

land.lhs.true43.i:                                ; preds = %land.lhs.true34.i
  %name51.i = getelementptr inbounds %union.tree_node* %107, i64 0, i32 0, i32 8
  %108 = load %union.tree_node** %name51.i, align 8, !tbaa !86
  %cmp52.i = icmp eq %union.tree_node* %27, %108
  br i1 %cmp52.i, label %if.then129, label %if.else132

if.then129:                                       ; preds = %if.end126.if.then129_crit_edge, %land.lhs.true12.i, %land.lhs.true4.i, %land.lhs.true43.i
  %109 = phi %union.tree_node* [ %.pre, %if.end126.if.then129_crit_edge ], [ %98, %land.lhs.true12.i ], [ %98, %land.lhs.true4.i ], [ %98, %land.lhs.true43.i ]
  call fastcc void @gen_type_die(%union.tree_node* %109, %struct.die_struct* %context_die)
  br label %sw.epilog

if.else132:                                       ; preds = %land.lhs.true43.i, %land.lhs.true34.i, %land.lhs.true29.i, %land.lhs.true26.i, %lor.lhs.false.i262
  %bf.clear.i327 = and i32 %bf.load, 16384
  %tobool.i328 = icmp eq i32 %bf.clear.i327, 0
  br i1 %tobool.i328, label %if.end.i330, label %sw.epilog

if.end.i330:                                      ; preds = %if.else132
  %bf.set.i = or i32 %bf.load, 16384
  store i32 %bf.set.i, i32* %code, align 8
  %call.i.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %110 = bitcast i8* %call.i.i to %struct.die_struct*
  %die_tag.i.i = bitcast i8* %call.i.i to i32*
  store i32 22, i32* %die_tag.i.i, align 4, !tbaa !69
  %cmp.i.i329 = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i.i329, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i330
  %cmp1.i.i.i = icmp eq i8* %call.i.i, null
  br i1 %cmp1.i.i.i, label %new_die.exit.i, label %if.then.i.i.i331

if.then.i.i.i331:                                 ; preds = %if.then.i.i
  %cmp2.i.i.i = icmp eq %struct.die_struct* %110, %context_die
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i.i.i331
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i:                                     ; preds = %if.then.i.i.i331
  %die_parent.i.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %111 = bitcast i8* %die_parent.i.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %111, align 8, !tbaa !55
  %die_child.i.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %112 = load %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  %die_sib.i.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %113 = bitcast i8* %die_sib.i.i.i to %struct.die_struct**
  store %struct.die_struct* %112, %struct.die_struct** %113, align 8, !tbaa !63
  store %struct.die_struct* %110, %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  br label %new_die.exit.i

if.else.i.i:                                      ; preds = %if.end.i330
  %call1.i.i = call noalias i8* @xmalloc(i64 24) #5
  %114 = bitcast i8* %call1.i.i to %struct.limbo_die_struct*
  %die2.i.i = bitcast i8* %call1.i.i to %struct.die_struct**
  store %struct.die_struct* %110, %struct.die_struct** %die2.i.i, align 8, !tbaa !54
  %created_for.i.i = getelementptr inbounds i8* %call1.i.i, i64 8
  %115 = bitcast i8* %created_for.i.i to %union.tree_node**
  store %union.tree_node* %decl, %union.tree_node** %115, align 8, !tbaa !64
  %116 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i = getelementptr inbounds i8* %call1.i.i, i64 16
  %117 = bitcast i8* %next.i.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %116, %struct.limbo_die_struct** %117, align 8, !tbaa !52
  store %struct.limbo_die_struct* %114, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i

new_die.exit.i:                                   ; preds = %if.else.i.i, %if.end.i.i.i, %if.then.i.i
  %bf.load.i.i332 = load i64* %97, align 8
  %bf.cast.i.i333 = and i64 %bf.load.i.i332, 32768
  %tobool.i.i334 = icmp ne i64 %bf.cast.i.i333, 0
  %abstract_origin4.phi.trans.insert.i.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %.pre.i.i = load %union.tree_node** %abstract_origin4.phi.trans.insert.i.i, align 8, !tbaa !89
  %cmp.i58.i = icmp eq %union.tree_node* %.pre.i.i, %decl
  %or.cond.i.i335 = and i1 %tobool.i.i334, %cmp.i58.i
  %retval.0.i.i336 = select i1 %or.cond.i.i335, %union.tree_node* null, %union.tree_node* %.pre.i.i
  %cmp.i337 = icmp eq %union.tree_node* %retval.0.i.i336, null
  br i1 %cmp.i337, label %if.else.i341, label %if.then6.i

if.then6.i:                                       ; preds = %new_die.exit.i
  %code.i.i338 = getelementptr inbounds %union.tree_node* %retval.0.i.i336, i64 0, i32 0, i32 0, i32 2
  %bf.load.i67.i = load i32* %code.i.i338, align 8
  %bf.clear.i68.i = and i32 %bf.load.i67.i, 255
  %cmp.i69.i = icmp eq i32 %bf.clear.i68.i, 30
  br i1 %cmp.i69.i, label %if.end11.i.i, label %if.then.i72.i

if.then.i72.i:                                    ; preds = %if.then6.i
  %idxprom50.i.i = zext i32 %bf.clear.i68.i to i64
  %arrayidx.i70.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50.i.i
  %118 = load i8* %arrayidx.i70.i, align 1, !tbaa !1
  %cmp5.i71.i = icmp eq i8 %118, 116
  br i1 %cmp5.i71.i, label %if.then7.i.i, label %if.end.i75.i

if.then7.i.i:                                     ; preds = %if.then.i72.i
  %chain.i.i = getelementptr inbounds %union.tree_node* %retval.0.i.i336, i64 0, i32 0, i32 0, i32 0
  %119 = load %union.tree_node** %chain.i.i, align 8, !tbaa !88
  br label %if.end.i75.i

if.end.i75.i:                                     ; preds = %if.then7.i.i, %if.then.i72.i
  %fn.0.i.i = phi %union.tree_node* [ %119, %if.then7.i.i ], [ %retval.0.i.i336, %if.then.i72.i ]
  %call.i73.i = call %union.tree_node* @decl_function_context(%union.tree_node* %fn.0.i.i) #5
  %tobool.i74.i = icmp eq %union.tree_node* %call.i73.i, null
  br i1 %tobool.i74.i, label %if.end11.i.i, label %if.then9.i76.i

if.then9.i76.i:                                   ; preds = %if.end.i75.i
  call void @dwarf2out_abstract_function(%union.tree_node* %call.i73.i) #5
  br label %if.end11.i.i

if.end11.i.i:                                     ; preds = %if.then9.i76.i, %if.end.i75.i, %if.then6.i
  %bf.load14.i.i = load i32* %code.i.i338, align 8
  %bf.clear15.i.i = and i32 %bf.load14.i.i, 255
  %idxprom1649.i.i = zext i32 %bf.clear15.i.i to i64
  %arrayidx17.i.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1649.i.i
  %120 = load i8* %arrayidx17.i.i, align 1, !tbaa !1
  switch i8 %120, label %if.then38.i.i [
    i8 100, label %if.then21.i.i
    i8 116, label %if.then32.i.i
  ]

if.then21.i.i:                                    ; preds = %if.end11.i.i
  %origin.idx.i.i = getelementptr %union.tree_node* %retval.0.i.i336, i64 0, i32 0, i32 3
  %origin.idx.val.i.i = load i32* %origin.idx.i.i, align 4, !tbaa !65
  %121 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i.i339 = icmp ugt i32 %121, %origin.idx.val.i.i
  br i1 %cmp.i.i.i339, label %cond.true.i.i.i, label %if.then38.i.i

cond.true.i.i.i:                                  ; preds = %if.then21.i.i
  %idxprom.i.i.i = zext i32 %origin.idx.val.i.i to i64
  %122 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i.i = getelementptr inbounds %struct.die_struct** %122, i64 %idxprom.i.i.i
  %123 = load %struct.die_struct** %arrayidx.i.i.i, align 8, !tbaa !6
  br label %if.end35.i.i

if.then32.i.i:                                    ; preds = %if.end11.i.i
  %origin.idx51.i.i = getelementptr %union.tree_node* %retval.0.i.i336, i64 0, i32 0, i32 10
  %origin.idx51.val.i.i = load %union.tree_node** %origin.idx51.i.i, align 8
  %124 = bitcast %union.tree_node* %origin.idx51.val.i.i to %struct.die_struct*
  br label %if.end35.i.i

if.end35.i.i:                                     ; preds = %cond.true.i.i.i, %if.then32.i.i
  %origin_die.0.i.i = phi %struct.die_struct* [ %124, %if.then32.i.i ], [ %123, %cond.true.i.i.i ]
  %cmp36.i.i = icmp eq %struct.die_struct* %origin_die.0.i.i, null
  br i1 %cmp36.i.i, label %if.then38.i.i, label %add_abstract_origin_attribute.exit.i

if.then38.i.i:                                    ; preds = %if.then21.i.i, %if.end11.i.i, %if.end35.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9459, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.add_abstract_origin_attribute, i64 0, i64 0)) #7
  unreachable

add_abstract_origin_attribute.exit.i:             ; preds = %if.end35.i.i
  %call.i621 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i621, i64 8
  %125 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %125, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i621 to i32*
  store i32 49, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i621, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 10, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i621, i64 24
  %die2.i = bitcast i8* %v.i to %struct.die_struct**
  store %struct.die_struct* %origin_die.0.i.i, %struct.die_struct** %die2.i, align 8, !tbaa !60
  %external.i = getelementptr inbounds i8* %call.i621, i64 32
  %126 = bitcast i8* %external.i to i32*
  store i32 0, i32* %126, align 4, !tbaa !108
  %cmp.i.i622 = icmp ne i8* %call.i.i, null
  %cmp1.i.i = icmp ne i8* %call.i621, null
  %or.cond.i.i623 = and i1 %cmp.i.i622, %cmp1.i.i
  br i1 %or.cond.i.i623, label %if.then.i.i624, label %if.end32.i

if.then.i.i624:                                   ; preds = %add_abstract_origin_attribute.exit.i
  %127 = bitcast i8* %call.i621 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %128 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %129 = load %struct.dw_attr_struct** %128, align 8, !tbaa !73
  store %struct.dw_attr_struct* %129, %struct.dw_attr_struct** %125, align 8, !tbaa !72
  store %struct.dw_attr_struct* %127, %struct.dw_attr_struct** %128, align 8, !tbaa !73
  br label %if.end32.i

if.else.i341:                                     ; preds = %new_die.exit.i
  call fastcc void @add_name_and_src_coords_attributes(%struct.die_struct* %110, %union.tree_node* %decl) #5
  %result.i340 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 11
  %130 = load %union.tree_node** %result.i340, align 8, !tbaa !104
  %tobool8.i = icmp eq %union.tree_node* %130, null
  %type22.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %131 = load %union.tree_node** %type22.i, align 8, !tbaa !87
  br i1 %tobool8.i, label %if.end23.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.else.i341
  %cmp14.i342 = icmp eq %union.tree_node* %130, %131
  br i1 %cmp14.i342, label %if.then15.i, label %if.else16.i

if.then15.i:                                      ; preds = %if.then9.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 11035, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.gen_typedef_die, i64 0, i64 0)) #7
  unreachable

if.else16.i:                                      ; preds = %if.then9.i
  %symtab.i.i = getelementptr inbounds %union.tree_node* %131, i64 0, i32 0, i32 10
  %.c.i.i = bitcast i8* %call.i.i to %union.tree_node*
  store %union.tree_node* %.c.i.i, %union.tree_node** %symtab.i.i, align 8, !tbaa !6
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.else16.i, %if.else.i341
  %type.0.i = phi %union.tree_node* [ %130, %if.else16.i ], [ %131, %if.else.i341 ]
  %bf.load25.i = load i32* %code, align 8
  %bf.clear27.i = and i32 %bf.load25.i, 4096
  %bf.clear31.i = and i32 %bf.load25.i, 2048
  %code1.i.i = getelementptr inbounds %union.tree_node* %type.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i62.i = load i32* %code1.i.i, align 8
  %bf.clear.i.i343 = and i32 %bf.load.i62.i, 255
  %132 = and i32 %bf.load.i62.i, 254
  %133 = icmp eq i32 %132, 6
  br i1 %133, label %land.lhs.true.i.i, label %if.end.i64.i

land.lhs.true.i.i:                                ; preds = %if.end23.i
  %type4.i.i = getelementptr inbounds %union.tree_node* %type.0.i, i64 0, i32 0, i32 0, i32 1
  %134 = load %union.tree_node** %type4.i.i, align 8, !tbaa !87
  %cmp5.i.i344 = icmp eq %union.tree_node* %134, null
  br i1 %cmp5.i.i344, label %if.end.i64.i, label %land.lhs.true6.i.i

land.lhs.true6.i.i:                               ; preds = %land.lhs.true.i.i
  %135 = getelementptr inbounds %union.tree_node* %type.0.i, i64 0, i32 0, i32 11
  %136 = load %union.tree_node** %135, align 8, !tbaa !102
  %cmp8.i.i = icmp eq %union.tree_node* %136, null
  br i1 %cmp8.i.i, label %if.then.i63.i, label %if.end.i64.i

if.then.i63.i:                                    ; preds = %land.lhs.true6.i.i
  %code12.i.i = getelementptr inbounds %union.tree_node* %134, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i.i = load i32* %code12.i.i, align 8
  %bf.clear14.i.i = and i32 %bf.load13.i.i, 255
  br label %if.end.i64.i

if.end.i64.i:                                     ; preds = %if.then.i63.i, %land.lhs.true6.i.i, %land.lhs.true.i.i, %if.end23.i
  %bf.load27.i.i = phi i32 [ %bf.load13.i.i, %if.then.i63.i ], [ %bf.load.i62.i, %land.lhs.true6.i.i ], [ %bf.load.i62.i, %land.lhs.true.i.i ], [ %bf.load.i62.i, %if.end23.i ]
  %type.addr.0.i.i345 = phi %union.tree_node* [ %134, %if.then.i63.i ], [ %type.0.i, %land.lhs.true6.i.i ], [ %type.0.i, %land.lhs.true.i.i ], [ %type.0.i, %if.end23.i ]
  %code.0.i.i = phi i32 [ %bf.clear14.i.i, %if.then.i63.i ], [ %bf.clear.i.i343, %land.lhs.true6.i.i ], [ %bf.clear.i.i343, %land.lhs.true.i.i ], [ %bf.clear.i.i343, %if.end23.i ]
  switch i32 %code.0.i.i, label %if.end19.i.i [
    i32 5, label %if.end32.i
    i32 0, label %if.end32.i
  ]

if.end19.i.i:                                     ; preds = %if.end.i64.i
  %tobool.i65.i = icmp eq i32 %bf.clear27.i, 0
  br i1 %tobool.i65.i, label %lor.rhs.i.i, label %lor.end.i.i

lor.rhs.i.i:                                      ; preds = %if.end19.i.i
  %bf.clear22.i.i = and i32 %bf.load27.i.i, 4096
  %tobool23.i.i = icmp ne i32 %bf.clear22.i.i, 0
  br label %lor.end.i.i

lor.end.i.i:                                      ; preds = %lor.rhs.i.i, %if.end19.i.i
  %137 = phi i1 [ true, %if.end19.i.i ], [ %tobool23.i.i, %lor.rhs.i.i ]
  %lor.ext.i.i = zext i1 %137 to i32
  %tobool24.i.i = icmp eq i32 %bf.clear31.i, 0
  br i1 %tobool24.i.i, label %lor.rhs25.i.i, label %lor.end31.i.i

lor.rhs25.i.i:                                    ; preds = %lor.end.i.i
  %bf.clear29.i.i = and i32 %bf.load27.i.i, 2048
  %tobool30.i.i = icmp ne i32 %bf.clear29.i.i, 0
  br label %lor.end31.i.i

lor.end31.i.i:                                    ; preds = %lor.rhs25.i.i, %lor.end.i.i
  %138 = phi i1 [ true, %lor.end.i.i ], [ %tobool30.i.i, %lor.rhs25.i.i ]
  %lor.ext32.i.i = zext i1 %138 to i32
  %call.i66.i = call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i.i345, i32 %lor.ext.i.i, i32 %lor.ext32.i.i, %struct.die_struct* %context_die) #5
  %cmp33.i.i = icmp eq %struct.die_struct* %call.i66.i, null
  br i1 %cmp33.i.i, label %if.end32.i, label %if.then34.i.i

if.then34.i.i:                                    ; preds = %lor.end31.i.i
  %call.i.i.i346 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i.i = getelementptr inbounds i8* %call.i.i.i346, i64 8
  %139 = bitcast i8* %dw_attr_next.i.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %139, align 8, !tbaa !72
  %dw_attr.i.i.i = bitcast i8* %call.i.i.i346 to i32*
  store i32 73, i32* %dw_attr.i.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i.i = getelementptr inbounds i8* %call.i.i.i346, i64 16
  %val_class.i.i.i = bitcast i8* %dw_attr_val.i.i.i to i32*
  store i32 10, i32* %val_class.i.i.i, align 4, !tbaa !59
  %v.i.i.i = getelementptr inbounds i8* %call.i.i.i346, i64 24
  %die2.i.i.i347 = bitcast i8* %v.i.i.i to %struct.die_struct**
  store %struct.die_struct* %call.i66.i, %struct.die_struct** %die2.i.i.i347, align 8, !tbaa !60
  %external.i.i.i = getelementptr inbounds i8* %call.i.i.i346, i64 32
  %140 = bitcast i8* %external.i.i.i to i32*
  store i32 0, i32* %140, align 4, !tbaa !108
  %cmp.i.i.i.i = icmp ne i8* %call.i.i, null
  %cmp1.i.i.i.i348 = icmp ne i8* %call.i.i.i346, null
  %or.cond.i.i.i.i = and i1 %cmp.i.i.i.i, %cmp1.i.i.i.i348
  br i1 %or.cond.i.i.i.i, label %if.then.i.i.i.i349, label %if.end32.i

if.then.i.i.i.i349:                               ; preds = %if.then34.i.i
  %141 = bitcast i8* %call.i.i.i346 to %struct.dw_attr_struct*
  %die_attr.i.i.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %142 = bitcast i8* %die_attr.i.i.i.i to %struct.dw_attr_struct**
  %143 = load %struct.dw_attr_struct** %142, align 8, !tbaa !73
  store %struct.dw_attr_struct* %143, %struct.dw_attr_struct** %139, align 8, !tbaa !72
  store %struct.dw_attr_struct* %141, %struct.dw_attr_struct** %142, align 8, !tbaa !73
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.end.i64.i, %if.end.i64.i, %lor.end31.i.i, %if.then.i.i.i.i349, %if.then34.i.i, %if.then.i.i624, %add_abstract_origin_attribute.exit.i
  %bf.load34.i = load i64* %97, align 8
  %bf.cast.i351 = and i64 %bf.load34.i, 32768
  %tobool37.i = icmp eq i64 %bf.cast.i351, 0
  br i1 %tobool37.i, label %sw.epilog, label %if.then38.i

if.then38.i:                                      ; preds = %if.end32.i
  %decl.idx.i = getelementptr %union.tree_node* %decl, i64 0, i32 0, i32 3
  %decl.idx.val.i = load i32* %decl.idx.i, align 4, !tbaa !65
  %144 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %cmp.i59.i = icmp ugt i32 %144, %decl.idx.val.i
  br i1 %cmp.i59.i, label %if.end.i.i, label %if.then.i61.i

if.then.i61.i:                                    ; preds = %if.then38.i
  %sub.i.i = add i32 %decl.idx.val.i, 256
  %div.i.i = and i32 %sub.i.i, -256
  %145 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %146 = bitcast %struct.die_struct** %145 to i8*
  %conv.i.i = zext i32 %div.i.i to i64
  %mul3.i.i = shl nuw nsw i64 %conv.i.i, 3
  %call.i60.i = call i8* @xrealloc(i8* %146, i64 %mul3.i.i) #5
  %147 = bitcast i8* %call.i60.i to %struct.die_struct**
  store %struct.die_struct** %147, %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %148 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %idxprom.i.i = zext i32 %148 to i64
  %arrayidx.i.i = getelementptr inbounds %struct.die_struct** %147, i64 %idxprom.i.i
  %149 = bitcast %struct.die_struct** %arrayidx.i.i to i8*
  %sub4.i.i = sub i32 %div.i.i, %148
  %conv5.i.i = zext i32 %sub4.i.i to i64
  %mul6.i.i = shl nuw nsw i64 %conv5.i.i, 3
  call void @llvm.memset.p0i8.i64(i8* %149, i8 0, i64 %mul6.i.i, i32 1, i1 false) #5
  store i32 %div.i.i, i32* @decl_die_table_allocated, align 4, !tbaa !4
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i61.i, %if.then38.i
  %150 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp7.i.i = icmp ugt i32 %150, %decl.idx.val.i
  br i1 %cmp7.i.i, label %equate_decl_number_to_die.exit.i, label %if.then9.i.i

if.then9.i.i:                                     ; preds = %if.end.i.i
  %add10.i.i = add i32 %decl.idx.val.i, 1
  store i32 %add10.i.i, i32* @decl_die_table_in_use, align 4, !tbaa !4
  br label %equate_decl_number_to_die.exit.i

equate_decl_number_to_die.exit.i:                 ; preds = %if.then9.i.i, %if.end.i.i
  %idxprom12.i.i = zext i32 %decl.idx.val.i to i64
  %151 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx13.i.i = getelementptr inbounds %struct.die_struct** %151, i64 %idxprom12.i.i
  store %struct.die_struct* %110, %struct.die_struct** %arrayidx13.i.i, align 8, !tbaa !6
  br label %sw.epilog

sw.bb134:                                         ; preds = %if.end
  %152 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp135 = icmp ugt i32 %152, 1
  br i1 %cmp135, label %if.then137, label %sw.epilog

if.then137:                                       ; preds = %sw.bb134
  %153 = getelementptr inbounds [30 x i8]* %label.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 30, i8* %153) #5
  %abstract_flag.i.i352 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %154 = bitcast i48* %abstract_flag.i.i352 to i64*
  %bf.load.i.i353 = load i64* %154, align 8
  %bf.cast.i.i354 = and i64 %bf.load.i.i353, 32768
  %tobool.i.i355 = icmp ne i64 %bf.cast.i.i354, 0
  %abstract_origin4.phi.trans.insert.i.i356 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %.pre.i.i357 = load %union.tree_node** %abstract_origin4.phi.trans.insert.i.i356, align 8, !tbaa !89
  %cmp.i.i358 = icmp eq %union.tree_node* %.pre.i.i357, %decl
  %or.cond.i.i359 = and i1 %tobool.i.i355, %cmp.i.i358
  %retval.0.i.i360 = select i1 %or.cond.i.i359, %union.tree_node* null, %union.tree_node* %.pre.i.i357
  %call.i.i361 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %155 = bitcast i8* %call.i.i361 to %struct.die_struct*
  %die_tag.i.i362 = bitcast i8* %call.i.i361 to i32*
  store i32 10, i32* %die_tag.i.i362, align 4, !tbaa !69
  %cmp.i45.i = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i45.i, label %if.else.i.i376, label %if.then.i.i364

if.then.i.i364:                                   ; preds = %if.then137
  %cmp1.i.i.i363 = icmp eq i8* %call.i.i361, null
  br i1 %cmp1.i.i.i363, label %new_die.exit.i378, label %if.then.i.i.i366

if.then.i.i.i366:                                 ; preds = %if.then.i.i364
  %cmp2.i.i.i365 = icmp eq %struct.die_struct* %155, %context_die
  br i1 %cmp2.i.i.i365, label %if.then3.i.i.i367, label %if.end.i.i.i371

if.then3.i.i.i367:                                ; preds = %if.then.i.i.i366
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i371:                                  ; preds = %if.then.i.i.i366
  %die_parent.i.i.i368 = getelementptr inbounds i8* %call.i.i361, i64 24
  %156 = bitcast i8* %die_parent.i.i.i368 to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %156, align 8, !tbaa !55
  %die_child.i.i.i369 = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %157 = load %struct.die_struct** %die_child.i.i.i369, align 8, !tbaa !62
  %die_sib.i.i.i370 = getelementptr inbounds i8* %call.i.i361, i64 40
  %158 = bitcast i8* %die_sib.i.i.i370 to %struct.die_struct**
  store %struct.die_struct* %157, %struct.die_struct** %158, align 8, !tbaa !63
  store %struct.die_struct* %155, %struct.die_struct** %die_child.i.i.i369, align 8, !tbaa !62
  br label %new_die.exit.i378

if.else.i.i376:                                   ; preds = %if.then137
  %call1.i.i372 = call noalias i8* @xmalloc(i64 24) #5
  %159 = bitcast i8* %call1.i.i372 to %struct.limbo_die_struct*
  %die2.i.i373 = bitcast i8* %call1.i.i372 to %struct.die_struct**
  store %struct.die_struct* %155, %struct.die_struct** %die2.i.i373, align 8, !tbaa !54
  %created_for.i.i374 = getelementptr inbounds i8* %call1.i.i372, i64 8
  %160 = bitcast i8* %created_for.i.i374 to %union.tree_node**
  store %union.tree_node* %decl, %union.tree_node** %160, align 8, !tbaa !64
  %161 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i375 = getelementptr inbounds i8* %call1.i.i372, i64 16
  %162 = bitcast i8* %next.i.i375 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %161, %struct.limbo_die_struct** %162, align 8, !tbaa !52
  store %struct.limbo_die_struct* %159, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i378

new_die.exit.i378:                                ; preds = %if.else.i.i376, %if.end.i.i.i371, %if.then.i.i364
  %cmp.i377 = icmp eq %union.tree_node* %retval.0.i.i360, null
  br i1 %cmp.i377, label %if.else.i408, label %if.then.i381

if.then.i381:                                     ; preds = %new_die.exit.i378
  %code.i.i379 = getelementptr inbounds %union.tree_node* %retval.0.i.i360, i64 0, i32 0, i32 0, i32 2
  %bf.load.i53.i = load i32* %code.i.i379, align 8
  %bf.clear.i.i380 = and i32 %bf.load.i53.i, 255
  %cmp.i54.i = icmp eq i32 %bf.clear.i.i380, 30
  br i1 %cmp.i54.i, label %if.end11.i.i391, label %if.then.i56.i

if.then.i56.i:                                    ; preds = %if.then.i381
  %idxprom50.i.i382 = zext i32 %bf.clear.i.i380 to i64
  %arrayidx.i55.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50.i.i382
  %163 = load i8* %arrayidx.i55.i, align 1, !tbaa !1
  %cmp5.i.i383 = icmp eq i8 %163, 116
  br i1 %cmp5.i.i383, label %if.then7.i.i385, label %if.end.i59.i

if.then7.i.i385:                                  ; preds = %if.then.i56.i
  %chain.i.i384 = getelementptr inbounds %union.tree_node* %retval.0.i.i360, i64 0, i32 0, i32 0, i32 0
  %164 = load %union.tree_node** %chain.i.i384, align 8, !tbaa !88
  br label %if.end.i59.i

if.end.i59.i:                                     ; preds = %if.then7.i.i385, %if.then.i56.i
  %fn.0.i.i386 = phi %union.tree_node* [ %164, %if.then7.i.i385 ], [ %retval.0.i.i360, %if.then.i56.i ]
  %call.i57.i = call %union.tree_node* @decl_function_context(%union.tree_node* %fn.0.i.i386) #5
  %tobool.i58.i = icmp eq %union.tree_node* %call.i57.i, null
  br i1 %tobool.i58.i, label %if.end11.i.i391, label %if.then9.i60.i

if.then9.i60.i:                                   ; preds = %if.end.i59.i
  call void @dwarf2out_abstract_function(%union.tree_node* %call.i57.i) #5
  br label %if.end11.i.i391

if.end11.i.i391:                                  ; preds = %if.then9.i60.i, %if.end.i59.i, %if.then.i381
  %bf.load14.i.i387 = load i32* %code.i.i379, align 8
  %bf.clear15.i.i388 = and i32 %bf.load14.i.i387, 255
  %idxprom1649.i.i389 = zext i32 %bf.clear15.i.i388 to i64
  %arrayidx17.i.i390 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1649.i.i389
  %165 = load i8* %arrayidx17.i.i390, align 1, !tbaa !1
  switch i8 %165, label %if.then38.i.i406 [
    i8 100, label %if.then21.i.i394
    i8 116, label %if.then32.i.i402
  ]

if.then21.i.i394:                                 ; preds = %if.end11.i.i391
  %origin.idx.i.i392 = getelementptr %union.tree_node* %retval.0.i.i360, i64 0, i32 0, i32 3
  %origin.idx.val.i.i393 = load i32* %origin.idx.i.i392, align 4, !tbaa !65
  %166 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i61.i = icmp ugt i32 %166, %origin.idx.val.i.i393
  br i1 %cmp.i.i61.i, label %cond.true.i.i.i397, label %if.then38.i.i406

cond.true.i.i.i397:                               ; preds = %if.then21.i.i394
  %idxprom.i.i.i395 = zext i32 %origin.idx.val.i.i393 to i64
  %167 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i.i396 = getelementptr inbounds %struct.die_struct** %167, i64 %idxprom.i.i.i395
  %168 = load %struct.die_struct** %arrayidx.i.i.i396, align 8, !tbaa !6
  br label %if.end35.i.i405

if.then32.i.i402:                                 ; preds = %if.end11.i.i391
  %origin.idx51.i.i400 = getelementptr %union.tree_node* %retval.0.i.i360, i64 0, i32 0, i32 10
  %origin.idx51.val.i.i401 = load %union.tree_node** %origin.idx51.i.i400, align 8
  %169 = bitcast %union.tree_node* %origin.idx51.val.i.i401 to %struct.die_struct*
  br label %if.end35.i.i405

if.end35.i.i405:                                  ; preds = %cond.true.i.i.i397, %if.then32.i.i402
  %origin_die.0.i.i403 = phi %struct.die_struct* [ %169, %if.then32.i.i402 ], [ %168, %cond.true.i.i.i397 ]
  %cmp36.i.i404 = icmp eq %struct.die_struct* %origin_die.0.i.i403, null
  br i1 %cmp36.i.i404, label %if.then38.i.i406, label %add_abstract_origin_attribute.exit.i407

if.then38.i.i406:                                 ; preds = %if.then21.i.i394, %if.end11.i.i391, %if.end35.i.i405
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9459, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.add_abstract_origin_attribute, i64 0, i64 0)) #7
  unreachable

add_abstract_origin_attribute.exit.i407:          ; preds = %if.end35.i.i405
  %call.i625 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i626 = getelementptr inbounds i8* %call.i625, i64 8
  %170 = bitcast i8* %dw_attr_next.i626 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %170, align 8, !tbaa !72
  %dw_attr.i627 = bitcast i8* %call.i625 to i32*
  store i32 49, i32* %dw_attr.i627, align 4, !tbaa !57
  %dw_attr_val.i628 = getelementptr inbounds i8* %call.i625, i64 16
  %val_class.i629 = bitcast i8* %dw_attr_val.i628 to i32*
  store i32 10, i32* %val_class.i629, align 4, !tbaa !59
  %v.i630 = getelementptr inbounds i8* %call.i625, i64 24
  %die2.i631 = bitcast i8* %v.i630 to %struct.die_struct**
  store %struct.die_struct* %origin_die.0.i.i403, %struct.die_struct** %die2.i631, align 8, !tbaa !60
  %external.i632 = getelementptr inbounds i8* %call.i625, i64 32
  %171 = bitcast i8* %external.i632 to i32*
  store i32 0, i32* %171, align 4, !tbaa !108
  %cmp.i.i633 = icmp ne i8* %call.i.i361, null
  %cmp1.i.i634 = icmp ne i8* %call.i625, null
  %or.cond.i.i635 = and i1 %cmp.i.i633, %cmp1.i.i634
  br i1 %or.cond.i.i635, label %if.then.i.i637, label %if.end.i413

if.then.i.i637:                                   ; preds = %add_abstract_origin_attribute.exit.i407
  %172 = bitcast i8* %call.i625 to %struct.dw_attr_struct*
  %die_attr.i.i636 = getelementptr inbounds i8* %call.i.i361, i64 16
  %173 = bitcast i8* %die_attr.i.i636 to %struct.dw_attr_struct**
  %174 = load %struct.dw_attr_struct** %173, align 8, !tbaa !73
  store %struct.dw_attr_struct* %174, %struct.dw_attr_struct** %170, align 8, !tbaa !72
  store %struct.dw_attr_struct* %172, %struct.dw_attr_struct** %173, align 8, !tbaa !73
  br label %if.end.i413

if.else.i408:                                     ; preds = %new_die.exit.i378
  call fastcc void @add_name_and_src_coords_attributes(%struct.die_struct* %155, %union.tree_node* %decl) #5
  br label %if.end.i413

if.end.i413:                                      ; preds = %if.then.i.i637, %add_abstract_origin_attribute.exit.i407, %if.else.i408
  %bf.load.i410 = load i64* %154, align 8
  %bf.cast.i411 = and i64 %bf.load.i410, 32768
  %tobool.i412 = icmp eq i64 %bf.cast.i411, 0
  br i1 %tobool.i412, label %if.else4.i, label %if.then3.i416

if.then3.i416:                                    ; preds = %if.end.i413
  %decl.idx.i414 = getelementptr %union.tree_node* %decl, i64 0, i32 0, i32 3
  %decl.idx.val.i415 = load i32* %decl.idx.i414, align 4, !tbaa !65
  %175 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %cmp.i46.i = icmp ugt i32 %175, %decl.idx.val.i415
  br i1 %cmp.i46.i, label %if.end.i.i427, label %if.then.i48.i

if.then.i48.i:                                    ; preds = %if.then3.i416
  %sub.i.i417 = add i32 %decl.idx.val.i415, 256
  %div.i.i418 = and i32 %sub.i.i417, -256
  %176 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %177 = bitcast %struct.die_struct** %176 to i8*
  %conv.i.i419 = zext i32 %div.i.i418 to i64
  %mul3.i.i420 = shl nuw nsw i64 %conv.i.i419, 3
  %call.i47.i = call i8* @xrealloc(i8* %177, i64 %mul3.i.i420) #5
  %178 = bitcast i8* %call.i47.i to %struct.die_struct**
  store %struct.die_struct** %178, %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %179 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %idxprom.i.i421 = zext i32 %179 to i64
  %arrayidx.i.i422 = getelementptr inbounds %struct.die_struct** %178, i64 %idxprom.i.i421
  %180 = bitcast %struct.die_struct** %arrayidx.i.i422 to i8*
  %sub4.i.i423 = sub i32 %div.i.i418, %179
  %conv5.i.i424 = zext i32 %sub4.i.i423 to i64
  %mul6.i.i425 = shl nuw nsw i64 %conv5.i.i424, 3
  call void @llvm.memset.p0i8.i64(i8* %180, i8 0, i64 %mul6.i.i425, i32 1, i1 false) #5
  store i32 %div.i.i418, i32* @decl_die_table_allocated, align 4, !tbaa !4
  br label %if.end.i.i427

if.end.i.i427:                                    ; preds = %if.then.i48.i, %if.then3.i416
  %181 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp7.i.i426 = icmp ugt i32 %181, %decl.idx.val.i415
  br i1 %cmp7.i.i426, label %equate_decl_number_to_die.exit.i432, label %if.then9.i.i429

if.then9.i.i429:                                  ; preds = %if.end.i.i427
  %add10.i.i428 = add i32 %decl.idx.val.i415, 1
  store i32 %add10.i.i428, i32* @decl_die_table_in_use, align 4, !tbaa !4
  br label %equate_decl_number_to_die.exit.i432

equate_decl_number_to_die.exit.i432:              ; preds = %if.then9.i.i429, %if.end.i.i427
  %idxprom12.i.i430 = zext i32 %decl.idx.val.i415 to i64
  %182 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx13.i.i431 = getelementptr inbounds %struct.die_struct** %182, i64 %idxprom12.i.i430
  store %struct.die_struct* %155, %struct.die_struct** %arrayidx13.i.i431, align 8, !tbaa !6
  br label %sw.epilog

if.else4.i:                                       ; preds = %if.end.i413
  %rtl.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %183 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !109
  %tobool6.i = icmp eq %struct.rtx_def* %183, null
  br i1 %tobool6.i, label %cond.false.i433, label %cond.end.i

cond.false.i433:                                  ; preds = %if.else4.i
  call void @make_decl_rtl(%union.tree_node* %decl, i8* null) #5
  %184 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !109
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i433, %if.else4.i
  %cond.i434 = phi %struct.rtx_def* [ %184, %cond.false.i433 ], [ %183, %if.else4.i ]
  %185 = getelementptr inbounds %struct.rtx_def* %cond.i434, i64 0, i32 0
  %bf.load11.i = load i32* %185, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 65535
  switch i32 %bf.clear12.i, label %sw.epilog [
    i32 36, label %if.then18.i
    i32 37, label %land.lhs.true.i436
  ]

land.lhs.true.i436:                               ; preds = %cond.end.i
  %arrayidx.i435 = getelementptr inbounds %struct.rtx_def* %cond.i434, i64 0, i32 1, i64 4
  %rtint.i = bitcast %union.rtunion_def* %arrayidx.i435 to i32*
  %186 = load i32* %rtint.i, align 4, !tbaa !4
  %cmp17.i = icmp eq i32 %186, -88
  br i1 %cmp17.i, label %if.then18.i, label %sw.epilog

if.then18.i:                                      ; preds = %land.lhs.true.i436, %cond.end.i
  %bf.clear21.i = and i32 %bf.load11.i, 134217728
  %tobool22.i = icmp eq i32 %bf.clear21.i, 0
  br i1 %tobool22.i, label %do.body.i, label %if.then23.i

if.then23.i:                                      ; preds = %if.then18.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 10568, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.gen_label_die, i64 0, i64 0)) #7
  unreachable

do.body.i:                                        ; preds = %if.then18.i
  %arrayidx26.i = getelementptr inbounds %struct.rtx_def* %cond.i434, i64 0, i32 1, i64 5
  %rtint27.i = bitcast %union.rtunion_def* %arrayidx26.i to i32*
  %187 = load i32* %rtint27.i, align 4, !tbaa !4
  %call28.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %153, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str414, i64 0, i64 0), i32 %187) #5
  %call.i49.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i49.i, i64 8
  %188 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %188, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i49.i to i32*
  store i32 17, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i49.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 12, i32* %val_class.i.i, align 4, !tbaa !59
  %call1.i50.i = call noalias i8* @xstrdup(i8* %153) #5
  %v.i.i = getelementptr inbounds i8* %call.i49.i, i64 24
  %val_lbl_id.i.i = bitcast i8* %v.i.i to i8**
  store i8* %call1.i50.i, i8** %val_lbl_id.i.i, align 8, !tbaa !6
  %cmp.i.i.i437 = icmp ne i8* %call.i.i361, null
  %cmp1.i.i51.i = icmp ne i8* %call.i49.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i437, %cmp1.i.i51.i
  br i1 %or.cond.i.i.i, label %if.then.i.i52.i, label %sw.epilog

if.then.i.i52.i:                                  ; preds = %do.body.i
  %189 = bitcast i8* %call.i49.i to %struct.dw_attr_struct*
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i.i361, i64 16
  %190 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %191 = load %struct.dw_attr_struct** %190, align 8, !tbaa !73
  store %struct.dw_attr_struct* %191, %struct.dw_attr_struct** %188, align 8, !tbaa !72
  store %struct.dw_attr_struct* %189, %struct.dw_attr_struct** %190, align 8, !tbaa !73
  br label %sw.epilog

sw.bb139:                                         ; preds = %if.end
  %192 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp140 = icmp ult i32 %192, 2
  br i1 %cmp140, label %sw.epilog, label %if.end143

if.end143:                                        ; preds = %sw.bb139
  %type145 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %193 = load %union.tree_node** %type145, align 8, !tbaa !87
  call fastcc void @gen_type_die(%union.tree_node* %193, %struct.die_struct* %context_die)
  %bf.load.i253 = load i32* %code, align 8
  %bf.clear.i = and i32 %bf.load.i253, 255
  %cmp.i254 = icmp eq i32 %bf.clear.i, 30
  br i1 %cmp.i254, label %lor.lhs.false.i, label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end143
  %vindex.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 22
  %194 = load %union.tree_node** %vindex.i, align 8, !tbaa !92
  %tobool.i255 = icmp eq %union.tree_node* %194, null
  br i1 %tobool.i255, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end143
  %context3.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  br label %if.end.i

if.else.i:                                        ; preds = %lor.lhs.false.i
  %195 = load %union.tree_node** %type145, align 8, !tbaa !87
  %values.i = getelementptr inbounds %union.tree_node* %195, i64 0, i32 0, i32 1
  %196 = load i8** %values.i, align 8
  %value.i = getelementptr inbounds i8* %196, i64 32
  %197 = bitcast i8* %value.i to %union.tree_node**
  %198 = load %union.tree_node** %197, align 8, !tbaa !93
  %type7.i = getelementptr inbounds %union.tree_node* %198, i64 0, i32 0, i32 0, i32 1
  %199 = load %union.tree_node** %type7.i, align 8, !tbaa !87
  %200 = getelementptr inbounds %union.tree_node* %199, i64 0, i32 0, i32 15
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %context.0.in.i = phi %union.tree_node** [ %context3.i, %if.then.i ], [ %200, %if.else.i ]
  %context.0.i = load %union.tree_node** %context.0.in.i, align 8
  %tobool9.i = icmp eq %union.tree_node* %context.0.i, null
  br i1 %tobool9.i, label %if.end150, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %code11.i = getelementptr inbounds %union.tree_node* %context.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load12.i = load i32* %code11.i, align 8
  %bf.clear13.i = and i32 %bf.load12.i, 255
  %idxprom23.i = zext i32 %bf.clear13.i to i64
  %arrayidx.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom23.i
  %201 = load i8* %arrayidx.i, align 1, !tbaa !1
  %cmp14.i = icmp eq i8 %201, 116
  br i1 %cmp14.i, label %if.then149, label %if.end150

if.then149:                                       ; preds = %land.lhs.true.i
  call fastcc void @gen_type_die_for_member(%union.tree_node* %context.0.i, %union.tree_node* %decl, %struct.die_struct* %context_die)
  br label %if.end150

if.end150:                                        ; preds = %if.end.i, %land.lhs.true.i, %if.then149
  %abstract_flag.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %202 = bitcast i48* %abstract_flag.i to i64*
  %bf.load.i = load i64* %202, align 8
  %bf.cast.i = and i64 %bf.load.i, 32768
  %tobool.i252 = icmp ne i64 %bf.cast.i, 0
  %abstract_origin4.phi.trans.insert.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %.pre.i = load %union.tree_node** %abstract_origin4.phi.trans.insert.i, align 8, !tbaa !89
  %cmp.i = icmp eq %union.tree_node* %.pre.i, %decl
  %or.cond.i = and i1 %tobool.i252, %cmp.i
  %retval.0.i = select i1 %or.cond.i, %union.tree_node* null, %union.tree_node* %.pre.i
  %cmp152 = icmp eq %union.tree_node* %retval.0.i, null
  br i1 %cmp152, label %if.else163, label %land.lhs.true154

land.lhs.true154:                                 ; preds = %if.end150
  %code156 = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load157 = load i32* %code156, align 8
  %bf.clear158 = and i32 %bf.load157, 255
  %cmp159 = icmp eq i32 %bf.clear158, 35
  br i1 %cmp159, label %if.then161, label %if.else163

if.then161:                                       ; preds = %land.lhs.true154
  %call162 = call fastcc %struct.die_struct* @gen_formal_parameter_die(%union.tree_node* %decl, %struct.die_struct* %context_die)
  br label %sw.epilog

if.else163:                                       ; preds = %if.end150, %land.lhs.true154
  call fastcc void @gen_variable_die(%union.tree_node* %decl, %struct.die_struct* %context_die)
  br label %sw.epilog

sw.bb165:                                         ; preds = %if.end
  %name167 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %203 = load %union.tree_node** %name167, align 8, !tbaa !86
  %cmp168 = icmp eq %union.tree_node* %203, null
  br i1 %cmp168, label %lor.lhs.false170, label %if.then179

lor.lhs.false170:                                 ; preds = %sw.bb165
  %type172 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %204 = load %union.tree_node** %type172, align 8, !tbaa !87
  %code174 = getelementptr inbounds %union.tree_node* %204, i64 0, i32 0, i32 0, i32 2
  %bf.load175 = load i32* %code174, align 8
  %bf.clear176 = and i32 %bf.load175, 255
  %cmp177 = icmp eq i32 %bf.clear176, 21
  br i1 %cmp177, label %if.then179, label %sw.epilog

if.then179:                                       ; preds = %sw.bb165, %lor.lhs.false170
  %result.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 11
  %205 = load %union.tree_node** %result.i, align 8, !tbaa !104
  %tobool.i = icmp eq %union.tree_node* %205, null
  br i1 %tobool.i, label %cond.false.i, label %member_declared_type.exit

cond.false.i:                                     ; preds = %if.then179
  %type.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %206 = load %union.tree_node** %type.i, align 8, !tbaa !87
  br label %member_declared_type.exit

member_declared_type.exit:                        ; preds = %if.then179, %cond.false.i
  %cond.i = phi %union.tree_node* [ %206, %cond.false.i ], [ %205, %if.then179 ]
  call fastcc void @gen_type_die(%union.tree_node* %cond.i, %struct.die_struct* %context_die)
  %call.i.i438 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %207 = bitcast i8* %call.i.i438 to %struct.die_struct*
  %die_tag.i.i439 = bitcast i8* %call.i.i438 to i32*
  store i32 13, i32* %die_tag.i.i439, align 4, !tbaa !69
  %cmp.i.i440 = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i.i440, label %if.else.i.i454, label %if.then.i.i442

if.then.i.i442:                                   ; preds = %member_declared_type.exit
  %cmp1.i.i.i441 = icmp eq i8* %call.i.i438, null
  br i1 %cmp1.i.i.i441, label %new_die.exit.i456, label %if.then.i.i.i444

if.then.i.i.i444:                                 ; preds = %if.then.i.i442
  %cmp2.i.i.i443 = icmp eq %struct.die_struct* %207, %context_die
  br i1 %cmp2.i.i.i443, label %if.then3.i.i.i445, label %if.end.i.i.i449

if.then3.i.i.i445:                                ; preds = %if.then.i.i.i444
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i449:                                  ; preds = %if.then.i.i.i444
  %die_parent.i.i.i446 = getelementptr inbounds i8* %call.i.i438, i64 24
  %208 = bitcast i8* %die_parent.i.i.i446 to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %208, align 8, !tbaa !55
  %die_child.i.i.i447 = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %209 = load %struct.die_struct** %die_child.i.i.i447, align 8, !tbaa !62
  %die_sib.i.i.i448 = getelementptr inbounds i8* %call.i.i438, i64 40
  %210 = bitcast i8* %die_sib.i.i.i448 to %struct.die_struct**
  store %struct.die_struct* %209, %struct.die_struct** %210, align 8, !tbaa !63
  store %struct.die_struct* %207, %struct.die_struct** %die_child.i.i.i447, align 8, !tbaa !62
  br label %new_die.exit.i456

if.else.i.i454:                                   ; preds = %member_declared_type.exit
  %call1.i.i450 = call noalias i8* @xmalloc(i64 24) #5
  %211 = bitcast i8* %call1.i.i450 to %struct.limbo_die_struct*
  %die2.i.i451 = bitcast i8* %call1.i.i450 to %struct.die_struct**
  store %struct.die_struct* %207, %struct.die_struct** %die2.i.i451, align 8, !tbaa !54
  %created_for.i.i452 = getelementptr inbounds i8* %call1.i.i450, i64 8
  %212 = bitcast i8* %created_for.i.i452 to %union.tree_node**
  store %union.tree_node* %decl, %union.tree_node** %212, align 8, !tbaa !64
  %213 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i453 = getelementptr inbounds i8* %call1.i.i450, i64 16
  %214 = bitcast i8* %next.i.i453 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %213, %struct.limbo_die_struct** %214, align 8, !tbaa !52
  store %struct.limbo_die_struct* %211, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i456

new_die.exit.i456:                                ; preds = %if.else.i.i454, %if.end.i.i.i449, %if.then.i.i442
  call fastcc void @add_name_and_src_coords_attributes(%struct.die_struct* %207, %union.tree_node* %decl) #5
  %215 = load %union.tree_node** %result.i, align 8, !tbaa !104
  %tobool.i.i455 = icmp eq %union.tree_node* %215, null
  br i1 %tobool.i.i455, label %cond.false.i.i, label %member_declared_type.exit.i

cond.false.i.i:                                   ; preds = %new_die.exit.i456
  %type.i.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %216 = load %union.tree_node** %type.i.i, align 8, !tbaa !87
  br label %member_declared_type.exit.i

member_declared_type.exit.i:                      ; preds = %cond.false.i.i, %new_die.exit.i456
  %cond.i.i = phi %union.tree_node* [ %216, %cond.false.i.i ], [ %215, %new_die.exit.i456 ]
  %bf.load.i457 = load i32* %code, align 8
  %bf.clear.i458 = and i32 %bf.load.i457, 4096
  %bf.clear5.i = and i32 %bf.load.i457, 2048
  %code1.i.i459 = getelementptr inbounds %union.tree_node* %cond.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i135.i = load i32* %code1.i.i459, align 8
  %bf.clear.i136.i = and i32 %bf.load.i135.i, 255
  %217 = and i32 %bf.load.i135.i, 254
  %218 = icmp eq i32 %217, 6
  br i1 %218, label %land.lhs.true.i.i462, label %if.end.i138.i

land.lhs.true.i.i462:                             ; preds = %member_declared_type.exit.i
  %type4.i.i460 = getelementptr inbounds %union.tree_node* %cond.i.i, i64 0, i32 0, i32 0, i32 1
  %219 = load %union.tree_node** %type4.i.i460, align 8, !tbaa !87
  %cmp5.i.i461 = icmp eq %union.tree_node* %219, null
  br i1 %cmp5.i.i461, label %if.end.i138.i, label %land.lhs.true6.i.i464

land.lhs.true6.i.i464:                            ; preds = %land.lhs.true.i.i462
  %220 = getelementptr inbounds %union.tree_node* %cond.i.i, i64 0, i32 0, i32 11
  %221 = load %union.tree_node** %220, align 8, !tbaa !102
  %cmp8.i.i463 = icmp eq %union.tree_node* %221, null
  br i1 %cmp8.i.i463, label %if.then.i137.i, label %if.end.i138.i

if.then.i137.i:                                   ; preds = %land.lhs.true6.i.i464
  %code12.i.i465 = getelementptr inbounds %union.tree_node* %219, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i.i466 = load i32* %code12.i.i465, align 8
  %bf.clear14.i.i467 = and i32 %bf.load13.i.i466, 255
  br label %if.end.i138.i

if.end.i138.i:                                    ; preds = %if.then.i137.i, %land.lhs.true6.i.i464, %land.lhs.true.i.i462, %member_declared_type.exit.i
  %bf.load27.i.i480 = phi i32 [ %bf.load13.i.i466, %if.then.i137.i ], [ %bf.load.i135.i, %land.lhs.true6.i.i464 ], [ %bf.load.i135.i, %land.lhs.true.i.i462 ], [ %bf.load.i135.i, %member_declared_type.exit.i ]
  %type.addr.0.i.i468 = phi %union.tree_node* [ %219, %if.then.i137.i ], [ %cond.i.i, %land.lhs.true6.i.i464 ], [ %cond.i.i, %land.lhs.true.i.i462 ], [ %cond.i.i, %member_declared_type.exit.i ]
  %code.0.i.i469 = phi i32 [ %bf.clear14.i.i467, %if.then.i137.i ], [ %bf.clear.i136.i, %land.lhs.true6.i.i464 ], [ %bf.clear.i136.i, %land.lhs.true.i.i462 ], [ %bf.clear.i136.i, %member_declared_type.exit.i ]
  switch i32 %code.0.i.i469, label %if.end19.i.i470 [
    i32 5, label %add_type_attribute.exit.i493
    i32 0, label %add_type_attribute.exit.i493
  ]

if.end19.i.i470:                                  ; preds = %if.end.i138.i
  %tobool.i139.i = icmp eq i32 %bf.clear.i458, 0
  br i1 %tobool.i139.i, label %lor.rhs.i.i475, label %lor.end.i.i478

lor.rhs.i.i475:                                   ; preds = %if.end19.i.i470
  %bf.clear22.i.i473 = and i32 %bf.load27.i.i480, 4096
  %tobool23.i.i474 = icmp ne i32 %bf.clear22.i.i473, 0
  br label %lor.end.i.i478

lor.end.i.i478:                                   ; preds = %lor.rhs.i.i475, %if.end19.i.i470
  %222 = phi i1 [ true, %if.end19.i.i470 ], [ %tobool23.i.i474, %lor.rhs.i.i475 ]
  %lor.ext.i.i476 = zext i1 %222 to i32
  %tobool24.i.i477 = icmp eq i32 %bf.clear5.i, 0
  br i1 %tobool24.i.i477, label %lor.rhs25.i.i483, label %lor.end31.i.i486

lor.rhs25.i.i483:                                 ; preds = %lor.end.i.i478
  %bf.clear29.i.i481 = and i32 %bf.load27.i.i480, 2048
  %tobool30.i.i482 = icmp ne i32 %bf.clear29.i.i481, 0
  br label %lor.end31.i.i486

lor.end31.i.i486:                                 ; preds = %lor.rhs25.i.i483, %lor.end.i.i478
  %223 = phi i1 [ true, %lor.end.i.i478 ], [ %tobool30.i.i482, %lor.rhs25.i.i483 ]
  %lor.ext32.i.i484 = zext i1 %223 to i32
  %call.i140.i = call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i.i468, i32 %lor.ext.i.i476, i32 %lor.ext32.i.i484, %struct.die_struct* %context_die) #5
  %cmp33.i.i485 = icmp eq %struct.die_struct* %call.i140.i, null
  br i1 %cmp33.i.i485, label %add_type_attribute.exit.i493, label %if.then34.i.i489

if.then34.i.i489:                                 ; preds = %lor.end31.i.i486
  %call.i.i141.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i142.i = getelementptr inbounds i8* %call.i.i141.i, i64 8
  %224 = bitcast i8* %dw_attr_next.i.i142.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %224, align 8, !tbaa !72
  %dw_attr.i.i143.i = bitcast i8* %call.i.i141.i to i32*
  store i32 73, i32* %dw_attr.i.i143.i, align 4, !tbaa !57
  %dw_attr_val.i.i144.i = getelementptr inbounds i8* %call.i.i141.i, i64 16
  %val_class.i.i145.i = bitcast i8* %dw_attr_val.i.i144.i to i32*
  store i32 10, i32* %val_class.i.i145.i, align 4, !tbaa !59
  %v.i.i146.i = getelementptr inbounds i8* %call.i.i141.i, i64 24
  %die2.i.i.i487 = bitcast i8* %v.i.i146.i to %struct.die_struct**
  store %struct.die_struct* %call.i140.i, %struct.die_struct** %die2.i.i.i487, align 8, !tbaa !60
  %external.i.i.i488 = getelementptr inbounds i8* %call.i.i141.i, i64 32
  %225 = bitcast i8* %external.i.i.i488 to i32*
  store i32 0, i32* %225, align 4, !tbaa !108
  %cmp.i.i.i147.i = icmp ne i8* %call.i.i438, null
  %cmp1.i.i.i148.i = icmp ne i8* %call.i.i141.i, null
  %or.cond.i.i.i149.i = and i1 %cmp.i.i.i147.i, %cmp1.i.i.i148.i
  br i1 %or.cond.i.i.i149.i, label %if.then.i.i.i151.i, label %add_type_attribute.exit.i493

if.then.i.i.i151.i:                               ; preds = %if.then34.i.i489
  %226 = bitcast i8* %call.i.i141.i to %struct.dw_attr_struct*
  %die_attr.i.i.i150.i = getelementptr inbounds i8* %call.i.i438, i64 16
  %227 = bitcast i8* %die_attr.i.i.i150.i to %struct.dw_attr_struct**
  %228 = load %struct.dw_attr_struct** %227, align 8, !tbaa !73
  store %struct.dw_attr_struct* %228, %struct.dw_attr_struct** %224, align 8, !tbaa !72
  store %struct.dw_attr_struct* %226, %struct.dw_attr_struct** %227, align 8, !tbaa !73
  br label %add_type_attribute.exit.i493

add_type_attribute.exit.i493:                     ; preds = %if.then34.i.i489, %if.then.i.i.i151.i, %lor.end31.i.i486, %if.end.i138.i, %if.end.i138.i
  %229 = load %union.tree_node** %result.i, align 8, !tbaa !104
  %tobool.i492 = icmp eq %union.tree_node* %229, null
  br i1 %tobool.i492, label %if.end.i518, label %if.then.i497

if.then.i497:                                     ; preds = %add_type_attribute.exit.i493
  %bf.load.i.i495 = load i32* %code, align 8
  %bf.clear.i.i496 = and i32 %bf.load.i.i495, 255
  switch i32 %bf.clear.i.i496, label %sw.default.i.i [
    i32 0, label %sw.epilog.i.i
    i32 10, label %sw.bb1.i.i
    i32 20, label %sw.bb1.i.i
    i32 21, label %sw.bb1.i.i
    i32 22, label %sw.bb1.i.i
    i32 37, label %field_type.exit.i.i
  ]

sw.bb1.i.i:                                       ; preds = %if.then.i497, %if.then.i497, %if.then.i497, %if.then.i497
  %call.i56.i = call i64 @int_size_in_bytes(%union.tree_node* %decl) #5
  br label %sw.epilog.i.i

field_type.exit.i.i:                              ; preds = %if.then.i497
  %code.i639 = getelementptr inbounds %union.tree_node* %229, i64 0, i32 0, i32 0, i32 2
  %bf.load.i640 = load i32* %code.i639, align 8
  %bf.clear.i641 = and i32 %bf.load.i640, 255
  %cmp.i642 = icmp eq i32 %bf.clear.i641, 0
  br i1 %cmp.i642, label %if.then.i643, label %if.else.i645

if.then.i643:                                     ; preds = %field_type.exit.i.i
  %230 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %230, 20
  %231 = and i32 %and.i, 32
  %232 = add i32 %231, 32
  %conv19.i = zext i32 %232 to i64
  br label %simple_type_size_in_bits.exit

if.else.i645:                                     ; preds = %field_type.exit.i.i
  %size.i = getelementptr inbounds %union.tree_node* %229, i64 0, i32 0, i32 2
  %233 = bitcast i32* %size.i to %union.tree_node**
  %234 = load %union.tree_node** %233, align 8, !tbaa !110
  %cmp2.i644 = icmp eq %union.tree_node* %234, null
  br i1 %cmp2.i644, label %simple_type_size_in_bits.exit, label %if.else5.i

if.else5.i:                                       ; preds = %if.else.i645
  %call.i646 = call i32 @host_integerp(%union.tree_node* %234, i32 1) #5
  %tobool8.i647 = icmp eq i32 %call.i646, 0
  br i1 %tobool8.i647, label %if.else13.i, label %if.then9.i648

if.then9.i648:                                    ; preds = %if.else5.i
  %235 = load %union.tree_node** %233, align 8, !tbaa !110
  %call12.i = call i64 @tree_low_cst(%union.tree_node* %235, i32 1) #5
  br label %simple_type_size_in_bits.exit

if.else13.i:                                      ; preds = %if.else5.i
  %align.i = getelementptr inbounds %union.tree_node* %229, i64 0, i32 0, i32 7
  %236 = bitcast %union.tree_node** %align.i to i32*
  %237 = load i32* %236, align 4, !tbaa !111
  %conv15.i = zext i32 %237 to i64
  br label %simple_type_size_in_bits.exit

simple_type_size_in_bits.exit:                    ; preds = %if.then.i643, %if.else.i645, %if.then9.i648, %if.else13.i
  %retval.0.i649 = phi i64 [ %conv19.i, %if.then.i643 ], [ %call12.i, %if.then9.i648 ], [ %conv15.i, %if.else13.i ], [ 0, %if.else.i645 ]
  %div.i.i498 = lshr i64 %retval.0.i649, 3
  br label %sw.epilog.i.i

sw.default.i.i:                                   ; preds = %if.then.i497
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9320, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.add_byte_size_attribute, i64 0, i64 0)) #7
  unreachable

sw.epilog.i.i:                                    ; preds = %simple_type_size_in_bits.exit, %sw.bb1.i.i, %if.then.i497
  %size.0.i.i = phi i64 [ %div.i.i498, %simple_type_size_in_bits.exit ], [ %call.i56.i, %sw.bb1.i.i ], [ 0, %if.then.i497 ]
  %conv6.i.i = and i64 %size.0.i.i, 4294967295
  %call.i.i.i499 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i.i500 = getelementptr inbounds i8* %call.i.i.i499, i64 8
  %238 = bitcast i8* %dw_attr_next.i.i.i500 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %238, align 8, !tbaa !72
  %dw_attr.i.i.i501 = bitcast i8* %call.i.i.i499 to i32*
  store i32 11, i32* %dw_attr.i.i.i501, align 4, !tbaa !57
  %dw_attr_val.i.i.i502 = getelementptr inbounds i8* %call.i.i.i499, i64 16
  %val_class.i.i.i503 = bitcast i8* %dw_attr_val.i.i.i502 to i32*
  store i32 6, i32* %val_class.i.i.i503, align 4, !tbaa !59
  %v.i.i.i504 = getelementptr inbounds i8* %call.i.i.i499, i64 24
  %val_unsigned.i.i.i = bitcast i8* %v.i.i.i504 to i64*
  store i64 %conv6.i.i, i64* %val_unsigned.i.i.i, align 8, !tbaa !8
  %cmp.i.i.i.i505 = icmp ne i8* %call.i.i438, null
  %cmp1.i.i.i.i506 = icmp ne i8* %call.i.i.i499, null
  %or.cond.i.i.i.i507 = and i1 %cmp.i.i.i.i505, %cmp1.i.i.i.i506
  br i1 %or.cond.i.i.i.i507, label %if.then.i.i.i.i509, label %add_byte_size_attribute.exit.i

if.then.i.i.i.i509:                               ; preds = %sw.epilog.i.i
  %239 = bitcast i8* %call.i.i.i499 to %struct.dw_attr_struct*
  %die_attr.i.i.i.i508 = getelementptr inbounds i8* %call.i.i438, i64 16
  %240 = bitcast i8* %die_attr.i.i.i.i508 to %struct.dw_attr_struct**
  %241 = load %struct.dw_attr_struct** %240, align 8, !tbaa !73
  store %struct.dw_attr_struct* %241, %struct.dw_attr_struct** %238, align 8, !tbaa !72
  store %struct.dw_attr_struct* %239, %struct.dw_attr_struct** %240, align 8, !tbaa !73
  br label %add_byte_size_attribute.exit.i

add_byte_size_attribute.exit.i:                   ; preds = %if.then.i.i.i.i509, %sw.epilog.i.i
  %bf.load.i61.i = load i32* %code, align 8
  %bf.clear.i62.i = and i32 %bf.load.i61.i, 255
  %cmp.i63.i = icmp eq i32 %bf.clear.i62.i, 37
  br i1 %cmp.i63.i, label %lor.lhs.false.i.i, label %if.then.i66.i

lor.lhs.false.i.i:                                ; preds = %add_byte_size_attribute.exit.i
  %242 = load %union.tree_node** %result.i, align 8, !tbaa !104
  %tobool.i65.i510 = icmp eq %union.tree_node* %242, null
  br i1 %tobool.i65.i510, label %if.then.i66.i, label %if.end.i.i511

if.then.i66.i:                                    ; preds = %lor.lhs.false.i.i, %add_byte_size_attribute.exit.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9405, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.add_bit_size_attribute, i64 0, i64 0)) #7
  unreachable

if.end.i.i511:                                    ; preds = %lor.lhs.false.i.i
  %size.i.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 4
  %243 = load %union.tree_node** %size.i.i, align 8, !tbaa !112
  %call.i67.i = call i32 @host_integerp(%union.tree_node* %243, i32 1) #5
  %tobool3.i.i = icmp eq i32 %call.i67.i, 0
  br i1 %tobool3.i.i, label %add_bit_size_attribute.exit.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i511
  %244 = load %union.tree_node** %size.i.i, align 8, !tbaa !112
  %call7.i.i = call i64 @tree_low_cst(%union.tree_node* %244, i32 1) #5
  %call.i.i68.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i69.i = getelementptr inbounds i8* %call.i.i68.i, i64 8
  %245 = bitcast i8* %dw_attr_next.i.i69.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %245, align 8, !tbaa !72
  %dw_attr.i.i70.i = bitcast i8* %call.i.i68.i to i32*
  store i32 13, i32* %dw_attr.i.i70.i, align 4, !tbaa !57
  %dw_attr_val.i.i71.i = getelementptr inbounds i8* %call.i.i68.i, i64 16
  %val_class.i.i72.i = bitcast i8* %dw_attr_val.i.i71.i to i32*
  store i32 6, i32* %val_class.i.i72.i, align 4, !tbaa !59
  %v.i.i73.i = getelementptr inbounds i8* %call.i.i68.i, i64 24
  %val_unsigned.i.i74.i = bitcast i8* %v.i.i73.i to i64*
  store i64 %call7.i.i, i64* %val_unsigned.i.i74.i, align 8, !tbaa !8
  %cmp1.i.i.i76.i = icmp ne i8* %call.i.i68.i, null
  %or.cond.i.i.i77.i = and i1 %cmp.i.i.i.i505, %cmp1.i.i.i76.i
  br i1 %or.cond.i.i.i77.i, label %if.then.i.i.i79.i, label %add_bit_size_attribute.exit.i

if.then.i.i.i79.i:                                ; preds = %if.then4.i.i
  %246 = bitcast i8* %call.i.i68.i to %struct.dw_attr_struct*
  %die_attr.i.i.i78.i = getelementptr inbounds i8* %call.i.i438, i64 16
  %247 = bitcast i8* %die_attr.i.i.i78.i to %struct.dw_attr_struct**
  %248 = load %struct.dw_attr_struct** %247, align 8, !tbaa !73
  store %struct.dw_attr_struct* %248, %struct.dw_attr_struct** %245, align 8, !tbaa !72
  store %struct.dw_attr_struct* %246, %struct.dw_attr_struct** %247, align 8, !tbaa !73
  br label %add_bit_size_attribute.exit.i

add_bit_size_attribute.exit.i:                    ; preds = %if.then.i.i.i79.i, %if.then4.i.i, %if.end.i.i511
  %call.i80.i = call fastcc i64 @field_byte_offset(%union.tree_node* %decl) #5
  %249 = load %union.tree_node** %result.i, align 8, !tbaa !104
  %tobool.i82.i = icmp eq %union.tree_node* %249, null
  br i1 %tobool.i82.i, label %if.then.i88.i, label %lor.lhs.false.i87.i

lor.lhs.false.i87.i:                              ; preds = %add_bit_size_attribute.exit.i
  %bf.load.i84.i = load i32* %code, align 8
  %bf.clear.i85.i = and i32 %bf.load.i84.i, 255
  %cmp.i86.i = icmp eq i32 %bf.clear.i85.i, 37
  br i1 %cmp.i86.i, label %if.end.i89.i, label %if.then.i88.i

if.then.i88.i:                                    ; preds = %lor.lhs.false.i87.i, %add_bit_size_attribute.exit.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9361, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.add_bit_offset_attribute, i64 0, i64 0)) #7
  unreachable

if.end.i89.i:                                     ; preds = %lor.lhs.false.i87.i
  %call2.i.i = call %union.tree_node* @bit_position(%union.tree_node* %decl) #5
  %call3.i.i = call i32 @host_integerp(%union.tree_node* %call2.i.i, i32 0) #5
  %tobool4.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.i.i, label %if.end.i518, label %lor.lhs.false5.i.i

lor.lhs.false5.i.i:                               ; preds = %if.end.i89.i
  %250 = load %union.tree_node** %size.i.i, align 8, !tbaa !112
  %call7.i91.i = call i32 @host_integerp(%union.tree_node* %250, i32 1) #5
  %tobool8.i.i = icmp eq i32 %call7.i91.i, 0
  br i1 %tobool8.i.i, label %if.end.i518, label %if.end10.i.i

if.end10.i.i:                                     ; preds = %lor.lhs.false5.i.i
  %call11.i.i = call i64 @int_bit_position(%union.tree_node* %decl) #5
  %mul.i.i = shl i64 %call.i80.i, 3
  %251 = load %union.tree_node** %size.i.i, align 8, !tbaa !112
  %call14.i.i = call i64 @tree_low_cst(%union.tree_node* %251, i32 0) #5
  %code.i.i.i = getelementptr inbounds %union.tree_node* %249, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i.i = load i32* %code.i.i.i, align 8
  %bf.clear.i.i.i = and i32 %bf.load.i.i.i, 255
  %cmp.i.i.i512 = icmp eq i32 %bf.clear.i.i.i, 0
  br i1 %cmp.i.i.i512, label %if.then.i.i92.i, label %if.else.i.i.i513

if.then.i.i92.i:                                  ; preds = %if.end10.i.i
  %252 = load i32* @target_flags, align 4, !tbaa !4
  %and.i.i.i = lshr i32 %252, 20
  %253 = and i32 %and.i.i.i, 32
  %254 = add i32 %253, 32
  %conv19.i.i.i = zext i32 %254 to i64
  br label %simple_type_size_in_bits.exit.i.i

if.else.i.i.i513:                                 ; preds = %if.end10.i.i
  %size.i.i.i = getelementptr inbounds %union.tree_node* %249, i64 0, i32 0, i32 2
  %255 = bitcast i32* %size.i.i.i to %union.tree_node**
  %256 = load %union.tree_node** %255, align 8, !tbaa !110
  %cmp2.i.i93.i = icmp eq %union.tree_node* %256, null
  br i1 %cmp2.i.i93.i, label %simple_type_size_in_bits.exit.i.i, label %if.else5.i.i.i

if.else5.i.i.i:                                   ; preds = %if.else.i.i.i513
  %call.i.i94.i = call i32 @host_integerp(%union.tree_node* %256, i32 1) #5
  %tobool8.i.i.i = icmp eq i32 %call.i.i94.i, 0
  br i1 %tobool8.i.i.i, label %if.else13.i.i.i, label %if.then9.i.i.i

if.then9.i.i.i:                                   ; preds = %if.else5.i.i.i
  %257 = load %union.tree_node** %255, align 8, !tbaa !110
  %call12.i.i.i = call i64 @tree_low_cst(%union.tree_node* %257, i32 1) #5
  br label %simple_type_size_in_bits.exit.i.i

if.else13.i.i.i:                                  ; preds = %if.else5.i.i.i
  %align.i.i.i = getelementptr inbounds %union.tree_node* %249, i64 0, i32 0, i32 7
  %258 = bitcast %union.tree_node** %align.i.i.i to i32*
  %259 = load i32* %258, align 4, !tbaa !111
  %conv15.i.i.i = zext i32 %259 to i64
  br label %simple_type_size_in_bits.exit.i.i

simple_type_size_in_bits.exit.i.i:                ; preds = %if.else13.i.i.i, %if.then9.i.i.i, %if.else.i.i.i513, %if.then.i.i92.i
  %retval.0.i.i95.i = phi i64 [ %conv19.i.i.i, %if.then.i.i92.i ], [ %call12.i.i.i, %if.then9.i.i.i ], [ %conv15.i.i.i, %if.else13.i.i.i ], [ 0, %if.else.i.i.i513 ]
  %add.neg.i.i = sub i64 %mul.i.i, %call11.i.i
  %add16.i.i = sub i64 %add.neg.i.i, %call14.i.i
  %sub.i.i514 = add i64 %add16.i.i, %retval.0.i.i95.i
  %call.i26.i.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i96.i = getelementptr inbounds i8* %call.i26.i.i, i64 8
  %260 = bitcast i8* %dw_attr_next.i.i96.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %260, align 8, !tbaa !72
  %dw_attr.i.i97.i = bitcast i8* %call.i26.i.i to i32*
  store i32 12, i32* %dw_attr.i.i97.i, align 4, !tbaa !57
  %dw_attr_val.i.i98.i = getelementptr inbounds i8* %call.i26.i.i, i64 16
  %val_class.i.i99.i = bitcast i8* %dw_attr_val.i.i98.i to i32*
  store i32 6, i32* %val_class.i.i99.i, align 4, !tbaa !59
  %v.i.i100.i = getelementptr inbounds i8* %call.i26.i.i, i64 24
  %val_unsigned.i.i101.i = bitcast i8* %v.i.i100.i to i64*
  store i64 %sub.i.i514, i64* %val_unsigned.i.i101.i, align 8, !tbaa !8
  %cmp1.i.i.i103.i = icmp ne i8* %call.i26.i.i, null
  %or.cond.i.i.i104.i = and i1 %cmp.i.i.i.i505, %cmp1.i.i.i103.i
  br i1 %or.cond.i.i.i104.i, label %if.then.i.i.i106.i, label %if.end.i518

if.then.i.i.i106.i:                               ; preds = %simple_type_size_in_bits.exit.i.i
  %261 = bitcast i8* %call.i26.i.i to %struct.dw_attr_struct*
  %die_attr.i.i.i105.i = getelementptr inbounds i8* %call.i.i438, i64 16
  %262 = bitcast i8* %die_attr.i.i.i105.i to %struct.dw_attr_struct**
  %263 = load %struct.dw_attr_struct** %262, align 8, !tbaa !73
  store %struct.dw_attr_struct* %263, %struct.dw_attr_struct** %260, align 8, !tbaa !72
  store %struct.dw_attr_struct* %261, %struct.dw_attr_struct** %262, align 8, !tbaa !73
  br label %if.end.i518

if.end.i518:                                      ; preds = %if.end.i89.i, %lor.lhs.false5.i.i, %simple_type_size_in_bits.exit.i.i, %if.then.i.i.i106.i, %add_type_attribute.exit.i493
  %context.i515 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %264 = load %union.tree_node** %context.i515, align 8, !tbaa !66
  %code.i516 = getelementptr inbounds %union.tree_node* %264, i64 0, i32 0, i32 0, i32 2
  %bf.load9.i = load i32* %code.i516, align 8
  %bf.clear10.i = and i32 %bf.load9.i, 255
  %cmp.i517 = icmp eq i32 %bf.clear10.i, 21
  br i1 %cmp.i517, label %if.end12.i, label %if.then11.i

if.then11.i:                                      ; preds = %if.end.i518
  call fastcc void @add_data_member_location_attribute(%struct.die_struct* %207, %union.tree_node* %decl) #5
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then11.i, %if.end.i518
  %artificial_flag.i519 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %265 = bitcast i48* %artificial_flag.i519 to i64*
  %bf.load14.i = load i64* %265, align 8
  %bf.cast.i520 = and i64 %bf.load14.i, 4194304
  %tobool17.i = icmp eq i64 %bf.cast.i520, 0
  br i1 %tobool17.i, label %if.end19.i, label %if.then18.i527

if.then18.i527:                                   ; preds = %if.end12.i
  %call.i107.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i521 = getelementptr inbounds i8* %call.i107.i, i64 8
  %266 = bitcast i8* %dw_attr_next.i.i521 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %266, align 8, !tbaa !72
  %dw_attr.i.i522 = bitcast i8* %call.i107.i to i32*
  store i32 52, i32* %dw_attr.i.i522, align 4, !tbaa !57
  %dw_attr_val.i.i523 = getelementptr inbounds i8* %call.i107.i, i64 16
  %val_class.i.i524 = bitcast i8* %dw_attr_val.i.i523 to i32*
  store i32 9, i32* %val_class.i.i524, align 4, !tbaa !59
  %v.i.i525 = getelementptr inbounds i8* %call.i107.i, i64 24
  store i8 1, i8* %v.i.i525, align 1, !tbaa !1
  %cmp.i.i108.i = icmp ne i8* %call.i.i438, null
  %cmp1.i.i109.i = icmp ne i8* %call.i107.i, null
  %or.cond.i.i.i526 = and i1 %cmp.i.i108.i, %cmp1.i.i109.i
  br i1 %or.cond.i.i.i526, label %if.then.i.i110.i, label %if.end19.i

if.then.i.i110.i:                                 ; preds = %if.then18.i527
  %267 = bitcast i8* %call.i107.i to %struct.dw_attr_struct*
  %die_attr.i.i.i528 = getelementptr inbounds i8* %call.i.i438, i64 16
  %268 = bitcast i8* %die_attr.i.i.i528 to %struct.dw_attr_struct**
  %269 = load %struct.dw_attr_struct** %268, align 8, !tbaa !73
  store %struct.dw_attr_struct* %269, %struct.dw_attr_struct** %266, align 8, !tbaa !72
  store %struct.dw_attr_struct* %267, %struct.dw_attr_struct** %268, align 8, !tbaa !73
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then18.i527, %if.then.i.i110.i, %if.end12.i
  %bf.load21.i = load i32* %code, align 8
  %bf.clear23.i = and i32 %bf.load21.i, 2097152
  %tobool24.i = icmp eq i32 %bf.clear23.i, 0
  br i1 %tobool24.i, label %if.else.i529, label %if.then25.i

if.then25.i:                                      ; preds = %if.end19.i
  %call.i111.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i112.i = getelementptr inbounds i8* %call.i111.i, i64 8
  %270 = bitcast i8* %dw_attr_next.i112.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %270, align 8, !tbaa !72
  %dw_attr.i113.i = bitcast i8* %call.i111.i to i32*
  store i32 50, i32* %dw_attr.i113.i, align 4, !tbaa !57
  %dw_attr_val.i114.i = getelementptr inbounds i8* %call.i111.i, i64 16
  %val_class.i115.i = bitcast i8* %dw_attr_val.i114.i to i32*
  store i32 6, i32* %val_class.i115.i, align 4, !tbaa !59
  %v.i116.i = getelementptr inbounds i8* %call.i111.i, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i116.i to i64*
  store i64 2, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %cmp.i.i117.i = icmp ne i8* %call.i.i438, null
  %cmp1.i.i118.i = icmp ne i8* %call.i111.i, null
  %or.cond.i.i119.i = and i1 %cmp.i.i117.i, %cmp1.i.i118.i
  br i1 %or.cond.i.i119.i, label %if.then.i.i121.i, label %sw.epilog

if.then.i.i121.i:                                 ; preds = %if.then25.i
  %271 = bitcast i8* %call.i111.i to %struct.dw_attr_struct*
  %die_attr.i.i120.i = getelementptr inbounds i8* %call.i.i438, i64 16
  %272 = bitcast i8* %die_attr.i.i120.i to %struct.dw_attr_struct**
  %273 = load %struct.dw_attr_struct** %272, align 8, !tbaa !73
  store %struct.dw_attr_struct* %273, %struct.dw_attr_struct** %270, align 8, !tbaa !72
  store %struct.dw_attr_struct* %271, %struct.dw_attr_struct** %272, align 8, !tbaa !73
  br label %sw.epilog

if.else.i529:                                     ; preds = %if.end19.i
  %bf.clear29.i = and i32 %bf.load21.i, 1048576
  %tobool30.i = icmp eq i32 %bf.clear29.i, 0
  br i1 %tobool30.i, label %sw.epilog, label %if.then31.i

if.then31.i:                                      ; preds = %if.else.i529
  %call.i122.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i123.i = getelementptr inbounds i8* %call.i122.i, i64 8
  %274 = bitcast i8* %dw_attr_next.i123.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %274, align 8, !tbaa !72
  %dw_attr.i124.i = bitcast i8* %call.i122.i to i32*
  store i32 50, i32* %dw_attr.i124.i, align 4, !tbaa !57
  %dw_attr_val.i125.i = getelementptr inbounds i8* %call.i122.i, i64 16
  %val_class.i126.i = bitcast i8* %dw_attr_val.i125.i to i32*
  store i32 6, i32* %val_class.i126.i, align 4, !tbaa !59
  %v.i127.i = getelementptr inbounds i8* %call.i122.i, i64 24
  %val_unsigned.i128.i = bitcast i8* %v.i127.i to i64*
  store i64 3, i64* %val_unsigned.i128.i, align 8, !tbaa !8
  %cmp.i.i129.i = icmp ne i8* %call.i.i438, null
  %cmp1.i.i130.i = icmp ne i8* %call.i122.i, null
  %or.cond.i.i131.i = and i1 %cmp.i.i129.i, %cmp1.i.i130.i
  br i1 %or.cond.i.i131.i, label %if.then.i.i133.i, label %sw.epilog

if.then.i.i133.i:                                 ; preds = %if.then31.i
  %275 = bitcast i8* %call.i122.i to %struct.dw_attr_struct*
  %die_attr.i.i132.i = getelementptr inbounds i8* %call.i.i438, i64 16
  %276 = bitcast i8* %die_attr.i.i132.i to %struct.dw_attr_struct**
  %277 = load %struct.dw_attr_struct** %276, align 8, !tbaa !73
  store %struct.dw_attr_struct* %277, %struct.dw_attr_struct** %274, align 8, !tbaa !72
  store %struct.dw_attr_struct* %275, %struct.dw_attr_struct** %276, align 8, !tbaa !73
  br label %sw.epilog

sw.bb182:                                         ; preds = %if.end
  %type184 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %278 = load %union.tree_node** %type184, align 8, !tbaa !87
  call fastcc void @gen_type_die(%union.tree_node* %278, %struct.die_struct* %context_die)
  %call185 = call fastcc %struct.die_struct* @gen_formal_parameter_die(%union.tree_node* %decl, %struct.die_struct* %context_die)
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 11553, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.gen_decl_die, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %land.lhs.true.i436, %cond.end.i, %equate_decl_number_to_die.exit.i432, %if.then.i.i52.i, %do.body.i, %if.else.i529, %if.then.i.i121.i, %if.then25.i, %if.then.i.i133.i, %if.then31.i, %equate_decl_number_to_die.exit.i, %if.end32.i, %if.else132, %if.end4.i, %if.then123, %add_abstract_origin_attribute.exit620, %if.then.i.i690, %add_abstract_origin_attribute.exit583, %if.then.i.i676, %add_abstract_origin_attribute.exit, %if.then.i.i662, %land.lhs.true, %lor.lhs.false, %lor.lhs.false170, %if.then161, %if.else163, %sw.bb139, %sw.bb134, %if.then129, %sw.bb79, %land.lhs.true16, %if.end, %sw.bb182, %if.end78, %if.end, %if.end
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #3

; Function Attrs: nounwind uwtable
define internal fastcc void @reverse_all_dies(%struct.die_struct* nocapture %die) #1 {
entry:
  %die_attr.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %0 = load %struct.dw_attr_struct** %die_attr.i, align 8, !tbaa !73
  %tobool24.i = icmp eq %struct.dw_attr_struct* %0, null
  br i1 %tobool24.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %entry, %for.body.i
  %ap.026.i = phi %struct.dw_attr_struct* [ %a.025.i, %for.body.i ], [ null, %entry ]
  %a.025.i = phi %struct.dw_attr_struct* [ %1, %for.body.i ], [ %0, %entry ]
  %dw_attr_next.i = getelementptr inbounds %struct.dw_attr_struct* %a.025.i, i64 0, i32 1
  %1 = load %struct.dw_attr_struct** %dw_attr_next.i, align 8, !tbaa !72
  store %struct.dw_attr_struct* %ap.026.i, %struct.dw_attr_struct** %dw_attr_next.i, align 8, !tbaa !72
  %tobool.i = icmp eq %struct.dw_attr_struct* %1, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i, %entry
  %ap.0.lcssa.i = phi %struct.dw_attr_struct* [ null, %entry ], [ %a.025.i, %for.body.i ]
  store %struct.dw_attr_struct* %ap.0.lcssa.i, %struct.dw_attr_struct** %die_attr.i, align 8, !tbaa !73
  %die_child.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %2 = load %struct.die_struct** %die_child.i, align 8, !tbaa !62
  %tobool421.i = icmp eq %struct.die_struct* %2, null
  br i1 %tobool421.i, label %reverse_die_lists.exit.thread, label %for.body5.i

reverse_die_lists.exit.thread:                    ; preds = %for.end.i
  store %struct.die_struct* null, %struct.die_struct** %die_child.i, align 8, !tbaa !62
  br label %for.end

for.body5.i:                                      ; preds = %for.end.i, %for.body5.i
  %c.023.i = phi %struct.die_struct* [ %3, %for.body5.i ], [ %2, %for.end.i ]
  %cp.022.i = phi %struct.die_struct* [ %c.023.i, %for.body5.i ], [ null, %for.end.i ]
  %die_sib.i = getelementptr inbounds %struct.die_struct* %c.023.i, i64 0, i32 5
  %3 = load %struct.die_struct** %die_sib.i, align 8, !tbaa !63
  store %struct.die_struct* %cp.022.i, %struct.die_struct** %die_sib.i, align 8, !tbaa !63
  %tobool4.i = icmp eq %struct.die_struct* %3, null
  br i1 %tobool4.i, label %for.body.lr.ph, label %for.body5.i

for.body.lr.ph:                                   ; preds = %for.body5.i
  store %struct.die_struct* %c.023.i, %struct.die_struct** %die_child.i, align 8, !tbaa !62
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %c.06 = phi %struct.die_struct* [ %c.023.i, %for.body.lr.ph ], [ %c.0, %for.body ]
  tail call fastcc void @reverse_all_dies(%struct.die_struct* %c.06)
  %die_sib = getelementptr inbounds %struct.die_struct* %c.06, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib, align 8
  %tobool = icmp eq %struct.die_struct* %c.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %reverse_die_lists.exit.thread
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_sibling_attributes(%struct.die_struct* %die) #1 {
entry:
  %die_tag = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 0
  %0 = load i32* %die_tag, align 4, !tbaa !69
  %cmp = icmp eq i32 %0, 17
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %die_sib = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 5
  %1 = load %struct.die_struct** %die_sib, align 8, !tbaa !63
  %tobool = icmp eq %struct.die_struct* %1, null
  br i1 %tobool, label %if.end, label %land.lhs.true1

land.lhs.true1:                                   ; preds = %land.lhs.true
  %die_child = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %2 = load %struct.die_struct** %die_child, align 8, !tbaa !62
  %cmp2 = icmp eq %struct.die_struct* %2, null
  br i1 %cmp2, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true1
  %call.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i, i64 8
  %3 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %3, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i to i32*
  store i32 1, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 10, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %die2.i = bitcast i8* %v.i to %struct.die_struct**
  store %struct.die_struct* %1, %struct.die_struct** %die2.i, align 8, !tbaa !60
  %external.i = getelementptr inbounds i8* %call.i, i64 32
  %4 = bitcast i8* %external.i to i32*
  store i32 0, i32* %4, align 4, !tbaa !108
  %cmp.i.i = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i = icmp ne i8* %call.i, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %if.end

if.then.i.i:                                      ; preds = %if.then
  %5 = bitcast i8* %call.i to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %6 = load %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %6, %struct.dw_attr_struct** %3, align 8, !tbaa !72
  store %struct.dw_attr_struct* %5, %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.then.i.i, %if.then, %land.lhs.true1, %land.lhs.true, %entry
  %die_child4 = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %c.014 = load %struct.die_struct** %die_child4, align 8
  %cmp515 = icmp eq %struct.die_struct* %c.014, null
  br i1 %cmp515, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.body
  %c.016 = phi %struct.die_struct* [ %c.0, %for.body ], [ %c.014, %if.end ]
  tail call fastcc void @add_sibling_attributes(%struct.die_struct* %c.016)
  %die_sib6 = getelementptr inbounds %struct.die_struct* %c.016, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib6, align 8
  %cmp5 = icmp eq %struct.die_struct* %c.0, null
  br i1 %cmp5, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end
  ret void
}

declare void @text_section() #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_comp_unit(%struct.die_struct* %die) #1 {
entry:
  call fastcc void @mark_dies(%struct.die_struct* %die)
  call fastcc void @build_abbrev_table(%struct.die_struct* %die)
  store i64 11, i64* @next_die_offset, align 8, !tbaa !8
  call fastcc void @calc_die_sizes(%struct.die_struct* %die)
  %die_symbol = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 1
  %0 = load i8** %die_symbol, align 8, !tbaa !101
  %tobool = icmp eq i8* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = call i64 @strlen(i8* %0) #5
  %add = add i64 %call, 24
  %1 = alloca i8, i64 %add, align 1
  %call3 = call i32 (i8*, i8*, ...)* @sprintf(i8* %1, i8* getelementptr inbounds ([20 x i8]* @.str210, i64 0, i64 0), i8* %0) #5
  store i8* null, i8** %die_symbol, align 8, !tbaa !101
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %secname.0 = phi i8* [ %1, %if.then ], [ getelementptr inbounds ([12 x i8]* @.str211, i64 0, i64 0), %entry ]
  call void @named_section_flags(i8* %secname.0, i32 1024) #5
  %2 = load i64* @next_die_offset, align 8, !tbaa !8
  %sub.i = add i64 %2, -4
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %sub.i, i8* getelementptr inbounds ([32 x i8]* @.str369, i64 0, i64 0)) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 2, i64 2, i8* getelementptr inbounds ([21 x i8]* @.str370, i64 0, i64 0)) #5
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_offset(i32 4, i8* getelementptr inbounds ([30 x i8]* @abbrev_section_label, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8]* @.str371, i64 0, i64 0)) #5
  %3 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %3, 20
  %4 = and i32 %and.i, 32
  %5 = add i32 %4, 32
  %div.i = sdiv i32 %5, 8
  %conv.i = sext i32 %div.i to i64
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv.i, i8* getelementptr inbounds ([24 x i8]* @.str372, i64 0, i64 0)) #5
  call fastcc void @output_die(%struct.die_struct* %die)
  %6 = load i8** %die_symbol, align 8, !tbaa !101
  %tobool6 = icmp eq i8* %6, null
  br i1 %tobool6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end
  call fastcc void @unmark_dies(%struct.die_struct* %die)
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then7
  ret void
}

declare void @dw2_asm_output_data(i32, i64, i8*, ...) #2

declare void @ht_forall(%struct.ht*, i32 (%struct.cpp_reader*, %struct.ht_identifier*, i8*)*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @output_indirect_string(%struct.cpp_reader* nocapture readnone %pfile, %struct.ht_identifier* nocapture readonly %h, i8* nocapture readnone %v) #1 {
entry:
  %0 = bitcast %struct.ht_identifier* %h to %struct.indirect_string_node*
  %form = getelementptr inbounds %struct.indirect_string_node* %0, i64 0, i32 2
  %1 = load i32* %form, align 4, !tbaa !113
  %cmp = icmp eq i32 %1, 14
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @named_section_flags(i8* getelementptr inbounds ([11 x i8]* @.str17, i64 0, i64 0), i32 99329) #5
  %2 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.ht_identifier* %h, i64 1, i32 1
  %4 = load i8** %3, align 8, !tbaa !114
  tail call void @assemble_name(%struct._IO_FILE* %2, i8* %4) #5
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %5)
  %str = getelementptr inbounds %struct.ht_identifier* %h, i64 0, i32 1
  %7 = load i8** %str, align 8, !tbaa !70
  %len = getelementptr inbounds %struct.ht_identifier* %h, i64 0, i32 0
  %8 = load i32* %len, align 4, !tbaa !115
  %add = add i32 %8, 1
  tail call void @assemble_string(i8* %7, i32 %add) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 1
}

declare void @assemble_string(i8*, i32) #2

declare void @dw2_asm_output_delta(i32, i8*, i8*, i8*, ...) #2

declare void @dw2_asm_output_addr(i32, i8*, i8*, ...) #2

declare void @dw2_asm_output_offset(i32, i8*, i8*, ...) #2

declare void @dw2_asm_output_addr_rtx(i32, %struct.rtx_def*, i8*, ...) #2

declare void @dw2_asm_output_nstring(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #6

declare void @dw2_asm_output_data_uleb128(i64, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @value_format(%struct.dw_attr_struct* readonly %a) #1 {
entry:
  %label.i = alloca [32 x i8], align 16
  %val_class = getelementptr inbounds %struct.dw_attr_struct* %a, i64 0, i32 2, i32 0
  %0 = load i32* %val_class, align 4, !tbaa !59
  switch i32 %0, label %sw.default27 [
    i32 0, label %return
    i32 4, label %sw.bb1
    i32 1, label %sw.bb1
    i32 3, label %sw.bb2
    i32 2, label %AT_loc.exit
    i32 5, label %sw.bb8
    i32 6, label %AT_unsigned.exit
    i32 7, label %sw.bb17
    i32 8, label %sw.bb18
    i32 9, label %sw.bb19
    i32 10, label %if.then.i
    i32 11, label %sw.bb22
    i32 12, label %return
    i32 13, label %sw.bb24
    i32 14, label %if.then.i62
  ]

sw.bb1:                                           ; preds = %entry, %entry
  br label %return

sw.bb2:                                           ; preds = %entry
  br label %return

AT_loc.exit:                                      ; preds = %entry
  %v.i = getelementptr inbounds %struct.dw_attr_struct* %a, i64 0, i32 2, i32 1
  %val_loc.i = bitcast %union.anon.3* %v.i to %struct.dw_loc_descr_struct**
  %1 = load %struct.dw_loc_descr_struct** %val_loc.i, align 8, !tbaa !6
  %call4 = call fastcc i64 @size_of_locs(%struct.dw_loc_descr_struct* %1)
  %cmp.i32 = icmp eq i64 %call4, 0
  br i1 %cmp.i32, label %constant_size.exit, label %if.else.i

if.else.i:                                        ; preds = %AT_loc.exit
  %call.i = call i32 @floor_log2_wide(i64 %call4) #5
  %phitmp.i = sdiv i32 %call.i, 8
  %phitmp5.i = sext i32 %phitmp.i to i64
  br label %constant_size.exit

constant_size.exit:                               ; preds = %AT_loc.exit, %if.else.i
  %log.0.i = phi i64 [ %phitmp5.i, %if.else.i ], [ 0, %AT_loc.exit ]
  %call1.i = call i32 @floor_log2_wide(i64 %log.0.i) #5
  %add.i = add nsw i32 %call1.i, 1
  %shl.i = shl i32 1, %add.i
  switch i32 %shl.i, label %sw.default [
    i32 1, label %return
    i32 2, label %sw.bb7
  ]

sw.bb7:                                           ; preds = %constant_size.exit
  br label %return

sw.default:                                       ; preds = %constant_size.exit
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6039, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.value_format, i64 0, i64 0)) #7
  unreachable

sw.bb8:                                           ; preds = %entry
  br label %return

AT_unsigned.exit:                                 ; preds = %entry
  %val_unsigned.i = getelementptr inbounds %struct.dw_attr_struct* %a, i64 0, i32 2, i32 1, i32 0, i32 0
  %2 = load i64* %val_unsigned.i, align 8, !tbaa !8
  %cmp.i40 = icmp eq i64 %2, 0
  br i1 %cmp.i40, label %constant_size.exit50, label %if.else.i44

if.else.i44:                                      ; preds = %AT_unsigned.exit
  %call.i41 = call i32 @floor_log2_wide(i64 %2) #5
  %phitmp.i42 = sdiv i32 %call.i41, 8
  %phitmp5.i43 = sext i32 %phitmp.i42 to i64
  br label %constant_size.exit50

constant_size.exit50:                             ; preds = %AT_unsigned.exit, %if.else.i44
  %log.0.i45 = phi i64 [ %phitmp5.i43, %if.else.i44 ], [ 0, %AT_unsigned.exit ]
  %call1.i46 = call i32 @floor_log2_wide(i64 %log.0.i45) #5
  %add.i47 = add nsw i32 %call1.i46, 1
  %shl.i48 = shl i32 1, %add.i47
  switch i32 %shl.i48, label %sw.default16 [
    i32 1, label %return
    i32 2, label %sw.bb13
    i32 4, label %sw.bb14
    i32 8, label %sw.bb15
  ]

sw.bb13:                                          ; preds = %constant_size.exit50
  br label %return

sw.bb14:                                          ; preds = %constant_size.exit50
  br label %return

sw.bb15:                                          ; preds = %constant_size.exit50
  br label %return

sw.default16:                                     ; preds = %constant_size.exit50
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6055, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.value_format, i64 0, i64 0)) #7
  unreachable

sw.bb17:                                          ; preds = %entry
  br label %return

sw.bb18:                                          ; preds = %entry
  br label %return

sw.bb19:                                          ; preds = %entry
  br label %return

if.then.i:                                        ; preds = %entry
  %external.i = getelementptr inbounds %struct.dw_attr_struct* %a, i64 0, i32 2, i32 1, i32 0, i32 1
  %3 = bitcast i64* %external.i to i32*
  %4 = load i32* %3, align 4, !tbaa !108
  %phitmp = icmp eq i32 %4, 0
  %phitmp66 = select i1 %phitmp, i32 19, i32 16
  br label %return

sw.bb22:                                          ; preds = %entry
  br label %return

sw.bb24:                                          ; preds = %entry
  br label %return

if.then.i62:                                      ; preds = %entry
  %5 = getelementptr inbounds [32 x i8]* %label.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %5) #5
  %v.i61 = getelementptr inbounds %struct.dw_attr_struct* %a, i64 0, i32 2, i32 1
  %val_str.i = bitcast %union.anon.3* %v.i61 to %struct.indirect_string_node**
  %6 = load %struct.indirect_string_node** %val_str.i, align 8, !tbaa !6
  %form.i = getelementptr inbounds %struct.indirect_string_node* %6, i64 0, i32 2
  %7 = load i32* %form.i, align 4, !tbaa !113
  %tobool1.i = icmp eq i32 %7, 0
  br i1 %tobool1.i, label %if.end.i64, label %return

if.end.i64:                                       ; preds = %if.then.i62
  %len4.i = getelementptr inbounds %struct.indirect_string_node* %6, i64 0, i32 0, i32 0
  %8 = load i32* %len4.i, align 4, !tbaa !115
  %add.i63 = add i32 %8, 1
  %cmp5.i = icmp ult i32 %add.i63, 5
  br i1 %cmp5.i, label %if.then7.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end.i64
  %refcount.i = getelementptr inbounds %struct.indirect_string_node* %6, i64 0, i32 1
  %9 = load i32* %refcount.i, align 4, !tbaa !84
  %cmp6.i = icmp eq i32 %9, 0
  br i1 %cmp6.i, label %if.then7.i, label %do.body.i

if.then7.i:                                       ; preds = %lor.lhs.false.i, %if.end.i64
  store i32 8, i32* %form.i, align 4, !tbaa !113
  br label %return

do.body.i:                                        ; preds = %lor.lhs.false.i
  %10 = load i32* @const_labelno, align 4, !tbaa !4
  %call10.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %5, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str60, i64 0, i64 0), i32 %10) #5
  %11 = load i32* @const_labelno, align 4, !tbaa !4
  %inc.i = add nsw i32 %11, 1
  store i32 %inc.i, i32* @const_labelno, align 4, !tbaa !4
  %call12.i = call noalias i8* @xstrdup(i8* %5) #5
  %label13.i = getelementptr inbounds %struct.indirect_string_node* %6, i64 0, i32 3
  store i8* %call12.i, i8** %label13.i, align 8, !tbaa !114
  store i32 14, i32* %form.i, align 4, !tbaa !113
  br label %return

sw.default27:                                     ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6078, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.value_format, i64 0, i64 0)) #7
  unreachable

return:                                           ; preds = %if.then.i, %do.body.i, %if.then7.i, %if.then.i62, %entry, %constant_size.exit50, %constant_size.exit, %entry, %sw.bb24, %sw.bb22, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb8, %sw.bb7, %sw.bb2, %sw.bb1
  %retval.0 = phi i32 [ 6, %sw.bb24 ], [ 6, %sw.bb22 ], [ 12, %sw.bb19 ], [ 10, %sw.bb18 ], [ 10, %sw.bb17 ], [ 7, %sw.bb15 ], [ 6, %sw.bb14 ], [ 5, %sw.bb13 ], [ 13, %sw.bb8 ], [ 3, %sw.bb7 ], [ 6, %sw.bb2 ], [ 6, %sw.bb1 ], [ 1, %entry ], [ 10, %constant_size.exit ], [ 11, %constant_size.exit50 ], [ 1, %entry ], [ 8, %if.then7.i ], [ 14, %do.body.i ], [ %7, %if.then.i62 ], [ %phitmp66, %if.then.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @size_of_locs(%struct.dw_loc_descr_struct* %loc) #1 {
entry:
  %cmp5 = icmp eq %struct.dw_loc_descr_struct* %loc, null
  br i1 %cmp5, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %size_of_loc_descr.exit
  %size.08 = phi i64 [ %add, %size_of_loc_descr.exit ], [ 0, %entry ]
  %loc.addr.06 = phi %struct.dw_loc_descr_struct* [ %13, %size_of_loc_descr.exit ], [ %loc, %entry ]
  %conv = trunc i64 %size.08 to i32
  %dw_loc_addr = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 4
  store i32 %conv, i32* %dw_loc_addr, align 4, !tbaa !116
  %dw_loc_opc.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 1
  %0 = load i32* %dw_loc_opc.i, align 4, !tbaa !18
  switch i32 %0, label %size_of_loc_descr.exit [
    i32 3, label %sw.bb.i
    i32 8, label %sw.bb1.i
    i32 9, label %sw.bb1.i
    i32 10, label %sw.bb3.i
    i32 11, label %sw.bb3.i
    i32 12, label %sw.bb5.i
    i32 13, label %sw.bb5.i
    i32 14, label %sw.bb7.i
    i32 15, label %sw.bb7.i
    i32 16, label %sw.bb9.i
    i32 17, label %sw.bb12.i
    i32 21, label %sw.bb18.i
    i32 35, label %sw.bb20.i
    i32 47, label %sw.bb27.i
    i32 40, label %sw.bb27.i
    i32 112, label %sw.bb29.i
    i32 113, label %sw.bb29.i
    i32 114, label %sw.bb29.i
    i32 115, label %sw.bb29.i
    i32 116, label %sw.bb29.i
    i32 117, label %sw.bb29.i
    i32 118, label %sw.bb29.i
    i32 119, label %sw.bb29.i
    i32 120, label %sw.bb29.i
    i32 121, label %sw.bb29.i
    i32 122, label %sw.bb29.i
    i32 123, label %sw.bb29.i
    i32 124, label %sw.bb29.i
    i32 125, label %sw.bb29.i
    i32 126, label %sw.bb29.i
    i32 127, label %sw.bb29.i
    i32 128, label %sw.bb29.i
    i32 129, label %sw.bb29.i
    i32 130, label %sw.bb29.i
    i32 131, label %sw.bb29.i
    i32 132, label %sw.bb29.i
    i32 133, label %sw.bb29.i
    i32 134, label %sw.bb29.i
    i32 135, label %sw.bb29.i
    i32 136, label %sw.bb29.i
    i32 137, label %sw.bb29.i
    i32 138, label %sw.bb29.i
    i32 139, label %sw.bb29.i
    i32 140, label %sw.bb29.i
    i32 141, label %sw.bb29.i
    i32 142, label %sw.bb29.i
    i32 143, label %sw.bb29.i
    i32 144, label %sw.bb36.i
    i32 145, label %sw.bb43.i
    i32 146, label %sw.bb50.i
    i32 147, label %sw.bb62.i
    i32 148, label %sw.bb69.i
    i32 149, label %sw.bb69.i
  ]

sw.bb.i:                                          ; preds = %for.body
  %1 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %1, 20
  %2 = and i32 %and.i, 32
  %3 = add i32 %2, 32
  %div.i = sdiv i32 %3, 8
  %conv.i = sext i32 %div.i to i64
  %add.i = add i64 %conv.i, 1
  br label %size_of_loc_descr.exit

sw.bb1.i:                                         ; preds = %for.body, %for.body
  br label %size_of_loc_descr.exit

sw.bb3.i:                                         ; preds = %for.body, %for.body
  br label %size_of_loc_descr.exit

sw.bb5.i:                                         ; preds = %for.body, %for.body
  br label %size_of_loc_descr.exit

sw.bb7.i:                                         ; preds = %for.body, %for.body
  br label %size_of_loc_descr.exit

sw.bb9.i:                                         ; preds = %for.body
  %val_unsigned.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 2, i32 1, i32 0, i32 0
  %4 = load i64* %val_unsigned.i, align 8, !tbaa !8
  %call.i = tail call i32 @size_of_uleb128(i64 %4) #5
  %conv10.i = sext i32 %call.i to i64
  %add11.i = add i64 %conv10.i, 1
  br label %size_of_loc_descr.exit

sw.bb12.i:                                        ; preds = %for.body
  %val_int.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 2, i32 1, i32 0, i32 0
  %5 = load i64* %val_int.i, align 8, !tbaa !8
  %call15.i = tail call i32 @size_of_sleb128(i64 %5) #5
  %conv16.i = sext i32 %call15.i to i64
  %add17.i = add i64 %conv16.i, 1
  br label %size_of_loc_descr.exit

sw.bb18.i:                                        ; preds = %for.body
  br label %size_of_loc_descr.exit

sw.bb20.i:                                        ; preds = %for.body
  %val_unsigned23.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 2, i32 1, i32 0, i32 0
  %6 = load i64* %val_unsigned23.i, align 8, !tbaa !8
  %call24.i = tail call i32 @size_of_uleb128(i64 %6) #5
  %conv25.i = sext i32 %call24.i to i64
  %add26.i = add i64 %conv25.i, 1
  br label %size_of_loc_descr.exit

sw.bb27.i:                                        ; preds = %for.body, %for.body
  br label %size_of_loc_descr.exit

sw.bb29.i:                                        ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %val_int32.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 2, i32 1, i32 0, i32 0
  %7 = load i64* %val_int32.i, align 8, !tbaa !8
  %call33.i = tail call i32 @size_of_sleb128(i64 %7) #5
  %conv34.i = sext i32 %call33.i to i64
  %add35.i = add i64 %conv34.i, 1
  br label %size_of_loc_descr.exit

sw.bb36.i:                                        ; preds = %for.body
  %val_unsigned39.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 2, i32 1, i32 0, i32 0
  %8 = load i64* %val_unsigned39.i, align 8, !tbaa !8
  %call40.i = tail call i32 @size_of_uleb128(i64 %8) #5
  %conv41.i = sext i32 %call40.i to i64
  %add42.i = add i64 %conv41.i, 1
  br label %size_of_loc_descr.exit

sw.bb43.i:                                        ; preds = %for.body
  %val_int46.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 2, i32 1, i32 0, i32 0
  %9 = load i64* %val_int46.i, align 8, !tbaa !8
  %call47.i = tail call i32 @size_of_sleb128(i64 %9) #5
  %conv48.i = sext i32 %call47.i to i64
  %add49.i = add i64 %conv48.i, 1
  br label %size_of_loc_descr.exit

sw.bb50.i:                                        ; preds = %for.body
  %val_unsigned53.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 2, i32 1, i32 0, i32 0
  %10 = load i64* %val_unsigned53.i, align 8, !tbaa !8
  %call54.i = tail call i32 @size_of_uleb128(i64 %10) #5
  %conv55.i = sext i32 %call54.i to i64
  %add56.i = add i64 %conv55.i, 1
  %val_int58.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 3, i32 1, i32 0, i32 0
  %11 = load i64* %val_int58.i, align 8, !tbaa !8
  %call59.i = tail call i32 @size_of_sleb128(i64 %11) #5
  %conv60.i = sext i32 %call59.i to i64
  %add61.i = add i64 %add56.i, %conv60.i
  br label %size_of_loc_descr.exit

sw.bb62.i:                                        ; preds = %for.body
  %val_unsigned65.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 2, i32 1, i32 0, i32 0
  %12 = load i64* %val_unsigned65.i, align 8, !tbaa !8
  %call66.i = tail call i32 @size_of_uleb128(i64 %12) #5
  %conv67.i = sext i32 %call66.i to i64
  %add68.i = add i64 %conv67.i, 1
  br label %size_of_loc_descr.exit

sw.bb69.i:                                        ; preds = %for.body, %for.body
  br label %size_of_loc_descr.exit

size_of_loc_descr.exit:                           ; preds = %for.body, %sw.bb.i, %sw.bb1.i, %sw.bb3.i, %sw.bb5.i, %sw.bb7.i, %sw.bb9.i, %sw.bb12.i, %sw.bb18.i, %sw.bb20.i, %sw.bb27.i, %sw.bb29.i, %sw.bb36.i, %sw.bb43.i, %sw.bb50.i, %sw.bb62.i, %sw.bb69.i
  %size.0.i = phi i64 [ 1, %for.body ], [ 2, %sw.bb69.i ], [ %add68.i, %sw.bb62.i ], [ %add61.i, %sw.bb50.i ], [ %add49.i, %sw.bb43.i ], [ %add42.i, %sw.bb36.i ], [ %add35.i, %sw.bb29.i ], [ 3, %sw.bb27.i ], [ %add26.i, %sw.bb20.i ], [ 2, %sw.bb18.i ], [ %add17.i, %sw.bb12.i ], [ %add11.i, %sw.bb9.i ], [ 9, %sw.bb7.i ], [ 5, %sw.bb5.i ], [ 3, %sw.bb3.i ], [ 2, %sw.bb1.i ], [ %add.i, %sw.bb.i ]
  %add = add i64 %size.0.i, %size.08
  %dw_loc_next = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.06, i64 0, i32 0
  %13 = load %struct.dw_loc_descr_struct** %dw_loc_next, align 8, !tbaa !21
  %cmp = icmp eq %struct.dw_loc_descr_struct* %13, null
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %size_of_loc_descr.exit, %entry
  %size.0.lcssa = phi i64 [ 0, %entry ], [ %add, %size_of_loc_descr.exit ]
  ret i64 %size.0.lcssa
}

declare i32 @size_of_uleb128(i64) #2

declare i32 @size_of_sleb128(i64) #2

declare i32 @floor_log2_wide(i64) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_dies(%struct.die_struct* nocapture %die) #1 {
entry:
  %die_mark = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 8
  store i32 1, i32* %die_mark, align 4, !tbaa !77
  %die_child = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %c.04 = load %struct.die_struct** %die_child, align 8
  %tobool5 = icmp eq %struct.die_struct* %c.04, null
  br i1 %tobool5, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %c.06 = phi %struct.die_struct* [ %c.0, %for.body ], [ %c.04, %entry ]
  tail call fastcc void @mark_dies(%struct.die_struct* %c.06)
  %die_sib = getelementptr inbounds %struct.die_struct* %c.06, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib, align 8
  %tobool = icmp eq %struct.die_struct* %c.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @build_abbrev_table(%struct.die_struct* %die) #1 {
entry:
  %die_attr = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %d_attr.0141 = load %struct.dw_attr_struct** %die_attr, align 8
  %tobool142 = icmp eq %struct.dw_attr_struct* %d_attr.0141, null
  br i1 %tobool142, label %for.cond7.preheader, label %for.body

for.cond7.preheader:                              ; preds = %for.inc, %entry
  %0 = load i32* @abbrev_die_table_in_use, align 4, !tbaa !4
  %cmp8136 = icmp ugt i32 %0, 1
  br i1 %cmp8136, label %for.body10.lr.ph, label %for.end50

for.body10.lr.ph:                                 ; preds = %for.cond7.preheader
  %die_tag11 = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 0
  %die_child17 = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  br label %for.body10

for.body:                                         ; preds = %entry, %for.inc
  %d_attr.0143 = phi %struct.dw_attr_struct* [ %d_attr.0, %for.inc ], [ %d_attr.0141, %entry ]
  %d_attr.0.idx = getelementptr %struct.dw_attr_struct* %d_attr.0143, i64 0, i32 2, i32 0
  %d_attr.0.idx.val = load i32* %d_attr.0.idx, align 4, !tbaa !59
  %cmp = icmp eq i32 %d_attr.0.idx.val, 10
  br i1 %cmp, label %AT_ref.exit, label %for.inc

AT_ref.exit:                                      ; preds = %for.body
  %v.i = getelementptr inbounds %struct.dw_attr_struct* %d_attr.0143, i64 0, i32 2, i32 1
  %die.i = bitcast %union.anon.3* %v.i to %struct.die_struct**
  %1 = load %struct.die_struct** %die.i, align 8, !tbaa !60
  %die_mark = getelementptr inbounds %struct.die_struct* %1, i64 0, i32 8
  %2 = load i32* %die_mark, align 4, !tbaa !77
  %cmp2 = icmp eq i32 %2, 0
  br i1 %cmp2, label %AT_ref.exit114, label %for.inc

AT_ref.exit114:                                   ; preds = %AT_ref.exit
  %die_symbol = getelementptr inbounds %struct.die_struct* %1, i64 0, i32 1
  %3 = load i8** %die_symbol, align 8, !tbaa !101
  %cmp4 = icmp eq i8* %3, null
  br i1 %cmp4, label %if.then5, label %set_AT_ref_external.exit

if.then5:                                         ; preds = %AT_ref.exit114
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5770, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.build_abbrev_table, i64 0, i64 0)) #7
  unreachable

set_AT_ref_external.exit:                         ; preds = %AT_ref.exit114
  %external.i = getelementptr inbounds %struct.dw_attr_struct* %d_attr.0143, i64 0, i32 2, i32 1, i32 0, i32 1
  %4 = bitcast i64* %external.i to i32*
  store i32 1, i32* %4, align 4, !tbaa !108
  br label %for.inc

for.inc:                                          ; preds = %for.body, %AT_ref.exit, %set_AT_ref_external.exit
  %dw_attr_next = getelementptr inbounds %struct.dw_attr_struct* %d_attr.0143, i64 0, i32 1
  %d_attr.0 = load %struct.dw_attr_struct** %dw_attr_next, align 8
  %tobool = icmp eq %struct.dw_attr_struct* %d_attr.0, null
  br i1 %tobool, label %for.cond7.preheader, label %for.body

for.body10:                                       ; preds = %for.body10.lr.ph, %for.inc49
  %5 = phi i32 [ %0, %for.body10.lr.ph ], [ %14, %for.inc49 ]
  %abbrev_id.0137 = phi i64 [ 1, %for.body10.lr.ph ], [ %inc, %for.inc49 ]
  %6 = load %struct.die_struct*** @abbrev_die_table, align 8, !tbaa !6
  %arrayidx = getelementptr inbounds %struct.die_struct** %6, i64 %abbrev_id.0137
  %7 = load %struct.die_struct** %arrayidx, align 8, !tbaa !6
  %die_tag = getelementptr inbounds %struct.die_struct* %7, i64 0, i32 0
  %8 = load i32* %die_tag, align 4, !tbaa !69
  %9 = load i32* %die_tag11, align 4, !tbaa !69
  %cmp12 = icmp eq i32 %8, %9
  br i1 %cmp12, label %if.then14, label %for.inc49

if.then14:                                        ; preds = %for.body10
  %die_child = getelementptr inbounds %struct.die_struct* %7, i64 0, i32 4
  %10 = load %struct.die_struct** %die_child, align 8, !tbaa !62
  %cmp15 = icmp ne %struct.die_struct* %10, null
  %11 = load %struct.die_struct** %die_child17, align 8, !tbaa !62
  %cmp18 = icmp ne %struct.die_struct* %11, null
  %cmp20tmp = xor i1 %cmp15, %cmp18
  br i1 %cmp20tmp, label %for.inc49, label %if.then22

if.then22:                                        ; preds = %if.then14
  %die_attr23 = getelementptr inbounds %struct.die_struct* %7, i64 0, i32 2
  %a_attr.0123 = load %struct.dw_attr_struct** %die_attr23, align 8
  %d_attr.1124 = load %struct.dw_attr_struct** %die_attr, align 8
  %cmp25125 = icmp ne %struct.dw_attr_struct* %a_attr.0123, null
  %cmp27126 = icmp ne %struct.dw_attr_struct* %d_attr.1124, null
  %or.cond74127 = and i1 %cmp25125, %cmp27126
  br i1 %or.cond74127, label %while.body, label %while.end

while.body:                                       ; preds = %if.then22, %if.end37
  %d_attr.1129 = phi %struct.dw_attr_struct* [ %d_attr.1, %if.end37 ], [ %d_attr.1124, %if.then22 ]
  %a_attr.0128 = phi %struct.dw_attr_struct* [ %a_attr.0, %if.end37 ], [ %a_attr.0123, %if.then22 ]
  %dw_attr = getelementptr inbounds %struct.dw_attr_struct* %a_attr.0128, i64 0, i32 0
  %12 = load i32* %dw_attr, align 4, !tbaa !57
  %dw_attr29 = getelementptr inbounds %struct.dw_attr_struct* %d_attr.1129, i64 0, i32 0
  %13 = load i32* %dw_attr29, align 4, !tbaa !57
  %cmp30 = icmp eq i32 %12, %13
  br i1 %cmp30, label %lor.lhs.false, label %while.end

lor.lhs.false:                                    ; preds = %while.body
  %call32 = tail call fastcc i32 @value_format(%struct.dw_attr_struct* %a_attr.0128)
  %call33 = tail call fastcc i32 @value_format(%struct.dw_attr_struct* %d_attr.1129)
  %cmp34 = icmp eq i32 %call32, %call33
  br i1 %cmp34, label %if.end37, label %while.end

if.end37:                                         ; preds = %lor.lhs.false
  %dw_attr_next38 = getelementptr inbounds %struct.dw_attr_struct* %a_attr.0128, i64 0, i32 1
  %dw_attr_next39 = getelementptr inbounds %struct.dw_attr_struct* %d_attr.1129, i64 0, i32 1
  %a_attr.0 = load %struct.dw_attr_struct** %dw_attr_next38, align 8
  %d_attr.1 = load %struct.dw_attr_struct** %dw_attr_next39, align 8
  %cmp25 = icmp ne %struct.dw_attr_struct* %a_attr.0, null
  %cmp27 = icmp ne %struct.dw_attr_struct* %d_attr.1, null
  %or.cond74 = and i1 %cmp25, %cmp27
  br i1 %or.cond74, label %while.body, label %while.end

while.end:                                        ; preds = %if.end37, %while.body, %lor.lhs.false, %if.then22
  %d_attr.1.lcssa = phi %struct.dw_attr_struct* [ %d_attr.1124, %if.then22 ], [ %d_attr.1, %if.end37 ], [ %d_attr.1129, %while.body ], [ %d_attr.1129, %lor.lhs.false ]
  %a_attr.0.lcssa = phi %struct.dw_attr_struct* [ %a_attr.0123, %if.then22 ], [ %a_attr.0, %if.end37 ], [ %a_attr.0128, %while.body ], [ %a_attr.0128, %lor.lhs.false ]
  %cmp40 = icmp eq %struct.dw_attr_struct* %a_attr.0.lcssa, null
  %cmp43 = icmp eq %struct.dw_attr_struct* %d_attr.1.lcssa, null
  %or.cond = and i1 %cmp40, %cmp43
  %.pre = load i32* @abbrev_die_table_in_use, align 4, !tbaa !4
  br i1 %or.cond, label %for.end50, label %for.inc49

for.inc49:                                        ; preds = %while.end, %if.then14, %for.body10
  %14 = phi i32 [ %5, %if.then14 ], [ %5, %for.body10 ], [ %.pre, %while.end ]
  %inc = add i64 %abbrev_id.0137, 1
  %conv = zext i32 %14 to i64
  %cmp8 = icmp ult i64 %inc, %conv
  br i1 %cmp8, label %for.body10, label %for.end50

for.end50:                                        ; preds = %while.end, %for.inc49, %for.cond7.preheader
  %15 = phi i32 [ %0, %for.cond7.preheader ], [ %.pre, %while.end ], [ %14, %for.inc49 ]
  %abbrev_id.0.lcssa = phi i64 [ 1, %for.cond7.preheader ], [ %abbrev_id.0137, %while.end ], [ %inc, %for.inc49 ]
  %conv51 = zext i32 %15 to i64
  %cmp52 = icmp ult i64 %abbrev_id.0.lcssa, %conv51
  br i1 %cmp52, label %if.end66, label %if.then54

if.then54:                                        ; preds = %for.end50
  %16 = load i32* @abbrev_die_table_allocated, align 4, !tbaa !4
  %cmp55 = icmp ult i32 %15, %16
  br i1 %cmp55, label %if.end63, label %if.then57

if.then57:                                        ; preds = %if.then54
  %add = add i32 %16, 256
  %17 = load %struct.die_struct*** @abbrev_die_table, align 8, !tbaa !6
  %18 = bitcast %struct.die_struct** %17 to i8*
  %conv58 = zext i32 %add to i64
  %mul = shl nuw nsw i64 %conv58, 3
  %call59 = tail call i8* @xrealloc(i8* %18, i64 %mul) #5
  %19 = bitcast i8* %call59 to %struct.die_struct**
  store %struct.die_struct** %19, %struct.die_struct*** @abbrev_die_table, align 8, !tbaa !6
  %20 = load i32* @abbrev_die_table_allocated, align 4, !tbaa !4
  %idxprom = zext i32 %20 to i64
  %arrayidx60 = getelementptr inbounds %struct.die_struct** %19, i64 %idxprom
  %21 = bitcast %struct.die_struct** %arrayidx60 to i8*
  %sub = sub i32 %add, %20
  %conv61 = zext i32 %sub to i64
  %mul62 = shl nuw nsw i64 %conv61, 3
  tail call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 %mul62, i32 1, i1 false)
  store i32 %add, i32* @abbrev_die_table_allocated, align 4, !tbaa !4
  %.pre151 = load i32* @abbrev_die_table_in_use, align 4, !tbaa !4
  br label %if.end63

if.end63:                                         ; preds = %if.then54, %if.then57
  %22 = phi i32 [ %15, %if.then54 ], [ %.pre151, %if.then57 ]
  %inc64 = add i32 %22, 1
  store i32 %inc64, i32* @abbrev_die_table_in_use, align 4, !tbaa !4
  %23 = load %struct.die_struct*** @abbrev_die_table, align 8, !tbaa !6
  %arrayidx65 = getelementptr inbounds %struct.die_struct** %23, i64 %abbrev_id.0.lcssa
  store %struct.die_struct* %die, %struct.die_struct** %arrayidx65, align 8, !tbaa !6
  br label %if.end66

if.end66:                                         ; preds = %for.end50, %if.end63
  %die_abbrev = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 7
  store i64 %abbrev_id.0.lcssa, i64* %die_abbrev, align 8, !tbaa !95
  %die_child67 = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %c.0120 = load %struct.die_struct** %die_child67, align 8
  %cmp69121 = icmp eq %struct.die_struct* %c.0120, null
  br i1 %cmp69121, label %for.end73, label %for.body71

for.body71:                                       ; preds = %if.end66, %for.body71
  %c.0122 = phi %struct.die_struct* [ %c.0, %for.body71 ], [ %c.0120, %if.end66 ]
  tail call fastcc void @build_abbrev_table(%struct.die_struct* %c.0122)
  %die_sib = getelementptr inbounds %struct.die_struct* %c.0122, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib, align 8
  %cmp69 = icmp eq %struct.die_struct* %c.0, null
  br i1 %cmp69, label %for.end73, label %for.body71

for.end73:                                        ; preds = %for.body71, %if.end66
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @calc_die_sizes(%struct.die_struct* nocapture %die) #1 {
entry:
  %label.i.i = alloca [32 x i8], align 16
  %0 = load i64* @next_die_offset, align 8, !tbaa !8
  %die_offset = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 6
  store i64 %0, i64* %die_offset, align 8, !tbaa !78
  %die_abbrev.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 7
  %1 = load i64* %die_abbrev.i, align 8, !tbaa !95
  %call.i = call i32 @size_of_uleb128(i64 %1) #5
  %conv.i = sext i32 %call.i to i64
  %die_attr.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %a.0129.i = load %struct.dw_attr_struct** %die_attr.i, align 8
  %cmp130.i = icmp eq %struct.dw_attr_struct* %a.0129.i, null
  br i1 %cmp130.i, label %size_of_die.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %entry
  %2 = getelementptr inbounds [32 x i8]* %label.i.i, i64 0, i64 0
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %a.0132.i = phi %struct.dw_attr_struct* [ %a.0129.i, %for.body.lr.ph.i ], [ %a.0.i, %for.inc.i ]
  %size.0131.i = phi i64 [ %conv.i, %for.body.lr.ph.i ], [ %size.1.i, %for.inc.i ]
  %a.0.idx.i = getelementptr %struct.dw_attr_struct* %a.0132.i, i64 0, i32 2, i32 0
  %a.0.idx.val.i = load i32* %a.0.idx.i, align 4, !tbaa !59
  switch i32 %a.0.idx.val.i, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb5.i
    i32 2, label %AT_loc.exit.i
    i32 3, label %sw.bb14.i
    i32 4, label %sw.bb16.i
    i32 5, label %AT_int.exit.i
    i32 6, label %AT_unsigned.exit.i
    i32 7, label %sw.bb28.i
    i32 8, label %sw.bb30.i
    i32 9, label %sw.bb34.i
    i32 10, label %sw.bb36.i
    i32 11, label %sw.bb38.i
    i32 12, label %sw.bb40.i
    i32 13, label %sw.bb47.i
    i32 14, label %if.then.i.i
  ]

sw.bb.i:                                          ; preds = %for.body.i
  %3 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %3, 20
  %4 = and i32 %and.i, 32
  %5 = add i32 %4, 32
  %div.i = sdiv i32 %5, 8
  %conv3.i = sext i32 %div.i to i64
  %add4.i = add i64 %conv3.i, %size.0131.i
  br label %for.inc.i

sw.bb5.i:                                         ; preds = %for.body.i
  %add6.i = add i64 %size.0131.i, 4
  br label %for.inc.i

AT_loc.exit.i:                                    ; preds = %for.body.i
  %v.i93.i = getelementptr inbounds %struct.dw_attr_struct* %a.0132.i, i64 0, i32 2, i32 1
  %val_loc.i.i = bitcast %union.anon.3* %v.i93.i to %struct.dw_loc_descr_struct**
  %6 = load %struct.dw_loc_descr_struct** %val_loc.i.i, align 8, !tbaa !6
  %call9.i = call fastcc i64 @size_of_locs(%struct.dw_loc_descr_struct* %6) #5
  %cmp.i96.i = icmp eq i64 %call9.i, 0
  br i1 %cmp.i96.i, label %constant_size.exit.i, label %if.else.i.i

if.else.i.i:                                      ; preds = %AT_loc.exit.i
  %call.i.i = call i32 @floor_log2_wide(i64 %call9.i) #5
  %phitmp.i.i = sdiv i32 %call.i.i, 8
  %phitmp5.i.i = sext i32 %phitmp.i.i to i64
  br label %constant_size.exit.i

constant_size.exit.i:                             ; preds = %if.else.i.i, %AT_loc.exit.i
  %log.0.i.i = phi i64 [ %phitmp5.i.i, %if.else.i.i ], [ 0, %AT_loc.exit.i ]
  %call1.i.i = call i32 @floor_log2_wide(i64 %log.0.i.i) #5
  %add.i97.i = add nsw i32 %call1.i.i, 1
  %shl.i.i = shl i32 1, %add.i97.i
  %conv11.i = sext i32 %shl.i.i to i64
  %add12.i = add i64 %call9.i, %size.0131.i
  %add13.i = add i64 %add12.i, %conv11.i
  br label %for.inc.i

sw.bb14.i:                                        ; preds = %for.body.i
  %add15.i = add i64 %size.0131.i, 4
  br label %for.inc.i

sw.bb16.i:                                        ; preds = %for.body.i
  %add17.i = add i64 %size.0131.i, 4
  br label %for.inc.i

AT_int.exit.i:                                    ; preds = %for.body.i
  %val_int.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.0132.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %7 = load i64* %val_int.i.i, align 8, !tbaa !8
  %call20.i = call i32 @size_of_sleb128(i64 %7) #5
  %conv21.i = sext i32 %call20.i to i64
  %add22.i = add i64 %conv21.i, %size.0131.i
  br label %for.inc.i

AT_unsigned.exit.i:                               ; preds = %for.body.i
  %val_unsigned.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.0132.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %8 = load i64* %val_unsigned.i.i, align 8, !tbaa !8
  %cmp.i113.i = icmp eq i64 %8, 0
  br i1 %cmp.i113.i, label %constant_size.exit123.i, label %if.else.i117.i

if.else.i117.i:                                   ; preds = %AT_unsigned.exit.i
  %call.i114.i = call i32 @floor_log2_wide(i64 %8) #5
  %phitmp.i115.i = sdiv i32 %call.i114.i, 8
  %phitmp5.i116.i = sext i32 %phitmp.i115.i to i64
  br label %constant_size.exit123.i

constant_size.exit123.i:                          ; preds = %if.else.i117.i, %AT_unsigned.exit.i
  %log.0.i118.i = phi i64 [ %phitmp5.i116.i, %if.else.i117.i ], [ 0, %AT_unsigned.exit.i ]
  %call1.i119.i = call i32 @floor_log2_wide(i64 %log.0.i118.i) #5
  %add.i120.i = add nsw i32 %call1.i119.i, 1
  %shl.i121.i = shl i32 1, %add.i120.i
  %conv26.i = sext i32 %shl.i121.i to i64
  %add27.i = add i64 %conv26.i, %size.0131.i
  br label %for.inc.i

sw.bb28.i:                                        ; preds = %for.body.i
  %add29.i = add i64 %size.0131.i, 9
  br label %for.inc.i

sw.bb30.i:                                        ; preds = %for.body.i
  %length.i = getelementptr inbounds %struct.dw_attr_struct* %a.0132.i, i64 0, i32 2, i32 1, i32 0, i32 1
  %9 = bitcast i64* %length.i to i32*
  %10 = load i32* %9, align 4, !tbaa !117
  %mul.i = shl i32 %10, 2
  %add3187.i = or i32 %mul.i, 1
  %conv32.i = zext i32 %add3187.i to i64
  %add33.i = add i64 %conv32.i, %size.0131.i
  br label %for.inc.i

sw.bb34.i:                                        ; preds = %for.body.i
  %add35.i = add i64 %size.0131.i, 1
  br label %for.inc.i

sw.bb36.i:                                        ; preds = %for.body.i
  %add37.i = add i64 %size.0131.i, 4
  br label %for.inc.i

sw.bb38.i:                                        ; preds = %for.body.i
  %add39.i = add i64 %size.0131.i, 4
  br label %for.inc.i

sw.bb40.i:                                        ; preds = %for.body.i
  %11 = load i32* @target_flags, align 4, !tbaa !4
  %and41.i = lshr i32 %11, 20
  %12 = and i32 %and41.i, 32
  %13 = add i32 %12, 32
  %div44.i = sdiv i32 %13, 8
  %conv45.i = sext i32 %div44.i to i64
  %add46.i = add i64 %conv45.i, %size.0131.i
  br label %for.inc.i

sw.bb47.i:                                        ; preds = %for.body.i
  %add48.i = add i64 %size.0131.i, 4
  br label %for.inc.i

if.then.i.i:                                      ; preds = %for.body.i
  call void @llvm.lifetime.start(i64 32, i8* %2) #5
  %v.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.0132.i, i64 0, i32 2, i32 1
  %val_str.i.i = bitcast %union.anon.3* %v.i.i to %struct.indirect_string_node**
  %14 = load %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %form.i.i = getelementptr inbounds %struct.indirect_string_node* %14, i64 0, i32 2
  %15 = load i32* %form.i.i, align 4, !tbaa !113
  %tobool1.i.i = icmp eq i32 %15, 0
  br i1 %tobool1.i.i, label %if.end.i.i, label %AT_string_form.exit.i

if.end.i.i:                                       ; preds = %if.then.i.i
  %len4.i.i = getelementptr inbounds %struct.indirect_string_node* %14, i64 0, i32 0, i32 0
  %16 = load i32* %len4.i.i, align 4, !tbaa !115
  %add.i.i = add i32 %16, 1
  %cmp5.i.i = icmp ult i32 %add.i.i, 5
  br i1 %cmp5.i.i, label %AT_string_form.exit.thread125.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.end.i.i
  %refcount.i.i = getelementptr inbounds %struct.indirect_string_node* %14, i64 0, i32 1
  %17 = load i32* %refcount.i.i, align 4, !tbaa !84
  %cmp6.i.i = icmp eq i32 %17, 0
  br i1 %cmp6.i.i, label %AT_string_form.exit.thread125.i, label %AT_string_form.exit.thread.i

AT_string_form.exit.thread125.i:                  ; preds = %lor.lhs.false.i.i, %if.end.i.i
  store i32 8, i32* %form.i.i, align 4, !tbaa !113
  call void @llvm.lifetime.end(i64 32, i8* %2) #5
  br label %if.else.i

AT_string_form.exit.thread.i:                     ; preds = %lor.lhs.false.i.i
  %18 = load i32* @const_labelno, align 4, !tbaa !4
  %call10.i.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %2, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str60, i64 0, i64 0), i32 %18) #5
  %19 = load i32* @const_labelno, align 4, !tbaa !4
  %inc.i.i = add nsw i32 %19, 1
  store i32 %inc.i.i, i32* @const_labelno, align 4, !tbaa !4
  %call12.i.i = call noalias i8* @xstrdup(i8* %2) #5
  %label13.i.i = getelementptr inbounds %struct.indirect_string_node* %14, i64 0, i32 3
  store i8* %call12.i.i, i8** %label13.i.i, align 8, !tbaa !114
  store i32 14, i32* %form.i.i, align 4, !tbaa !113
  call void @llvm.lifetime.end(i64 32, i8* %2) #5
  br label %if.then.i

AT_string_form.exit.i:                            ; preds = %if.then.i.i
  call void @llvm.lifetime.end(i64 32, i8* %2) #5
  %cmp51.i = icmp eq i32 %15, 14
  br i1 %cmp51.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %AT_string_form.exit.i, %AT_string_form.exit.thread.i
  %add53.i = add i64 %size.0131.i, 4
  br label %for.inc.i

if.else.i:                                        ; preds = %AT_string_form.exit.i, %AT_string_form.exit.thread125.i
  %20 = load %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %len.i = getelementptr inbounds %struct.indirect_string_node* %20, i64 0, i32 0, i32 0
  %21 = load i32* %len.i, align 4, !tbaa !115
  %add56.i = add i32 %21, 1
  %conv57.i = zext i32 %add56.i to i64
  %add58.i = add i64 %conv57.i, %size.0131.i
  br label %for.inc.i

sw.default.i:                                     ; preds = %for.body.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5914, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.size_of_die, i64 0, i64 0)) #7
  unreachable

for.inc.i:                                        ; preds = %if.else.i, %if.then.i, %sw.bb47.i, %sw.bb40.i, %sw.bb38.i, %sw.bb36.i, %sw.bb34.i, %sw.bb30.i, %sw.bb28.i, %constant_size.exit123.i, %AT_int.exit.i, %sw.bb16.i, %sw.bb14.i, %constant_size.exit.i, %sw.bb5.i, %sw.bb.i
  %size.1.i = phi i64 [ %add53.i, %if.then.i ], [ %add58.i, %if.else.i ], [ %add48.i, %sw.bb47.i ], [ %add46.i, %sw.bb40.i ], [ %add39.i, %sw.bb38.i ], [ %add37.i, %sw.bb36.i ], [ %add35.i, %sw.bb34.i ], [ %add33.i, %sw.bb30.i ], [ %add29.i, %sw.bb28.i ], [ %add27.i, %constant_size.exit123.i ], [ %add22.i, %AT_int.exit.i ], [ %add17.i, %sw.bb16.i ], [ %add15.i, %sw.bb14.i ], [ %add13.i, %constant_size.exit.i ], [ %add6.i, %sw.bb5.i ], [ %add4.i, %sw.bb.i ]
  %dw_attr_next.i = getelementptr inbounds %struct.dw_attr_struct* %a.0132.i, i64 0, i32 1
  %a.0.i = load %struct.dw_attr_struct** %dw_attr_next.i, align 8
  %cmp.i = icmp eq %struct.dw_attr_struct* %a.0.i, null
  br i1 %cmp.i, label %size_of_die.exit, label %for.body.i

size_of_die.exit:                                 ; preds = %for.inc.i, %entry
  %size.0.lcssa.i = phi i64 [ %conv.i, %entry ], [ %size.1.i, %for.inc.i ]
  %22 = load i64* @next_die_offset, align 8, !tbaa !8
  %add = add i64 %22, %size.0.lcssa.i
  store i64 %add, i64* @next_die_offset, align 8, !tbaa !8
  %die_child = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %c.09 = load %struct.die_struct** %die_child, align 8
  %cmp10 = icmp eq %struct.die_struct* %c.09, null
  br i1 %cmp10, label %if.end, label %for.body

for.body:                                         ; preds = %size_of_die.exit, %for.body
  %c.011 = phi %struct.die_struct* [ %c.0, %for.body ], [ %c.09, %size_of_die.exit ]
  call fastcc void @calc_die_sizes(%struct.die_struct* %c.011)
  %die_sib = getelementptr inbounds %struct.die_struct* %c.011, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib, align 8
  %cmp = icmp eq %struct.die_struct* %c.0, null
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.pre = load %struct.die_struct** %die_child, align 8, !tbaa !62
  %phitmp = icmp eq %struct.die_struct* %.pre, null
  br i1 %phitmp, label %if.end, label %if.then

if.then:                                          ; preds = %for.end
  %23 = load i64* @next_die_offset, align 8, !tbaa !8
  %add3 = add i64 %23, 1
  store i64 %add3, i64* @next_die_offset, align 8, !tbaa !8
  br label %if.end

if.end:                                           ; preds = %size_of_die.exit, %for.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_die(%struct.die_struct* nocapture readonly %die) #1 {
entry:
  %label.i = alloca [32 x i8], align 16
  %l1 = alloca [20 x i8], align 16
  %die_symbol = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 1
  %0 = load i8** %die_symbol, align 8, !tbaa !101
  %tobool = icmp eq i8* %0, null
  br i1 %tobool, label %if.end, label %if.end.i

if.end.i:                                         ; preds = %entry
  %call.i = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([3 x i8]* @.str366, i64 0, i64 0), i64 2) #5
  %cmp1.i = icmp eq i32 %call.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %if.end5.i

if.then2.i:                                       ; preds = %if.end.i
  %1 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %2 = call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str367, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %1) #5
  %3 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %3, i8* %0) #5
  %4 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %4) #5
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then2.i, %if.end.i
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  call void @assemble_name(%struct._IO_FILE* %5, i8* %0) #5
  %6 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !6
  %7 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %6) #5
  br label %if.end

if.end:                                           ; preds = %if.end5.i, %entry
  %die_abbrev = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 7
  %8 = load i64* %die_abbrev, align 8, !tbaa !95
  %die_offset = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 6
  %9 = load i64* %die_offset, align 8, !tbaa !78
  %die_tag = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 0
  %10 = load i32* %die_tag, align 4, !tbaa !69
  switch i32 %10, label %sw.default.i [
    i32 0, label %dwarf_tag_name.exit
    i32 1, label %sw.bb1.i
    i32 2, label %sw.bb2.i
    i32 3, label %sw.bb3.i
    i32 4, label %sw.bb4.i
    i32 5, label %sw.bb5.i
    i32 8, label %sw.bb6.i
    i32 10, label %sw.bb7.i
    i32 11, label %sw.bb8.i
    i32 13, label %sw.bb9.i
    i32 15, label %sw.bb10.i
    i32 16, label %sw.bb11.i
    i32 17, label %sw.bb12.i
    i32 18, label %sw.bb13.i
    i32 19, label %sw.bb14.i
    i32 21, label %sw.bb15.i
    i32 22, label %sw.bb16.i
    i32 23, label %sw.bb17.i
    i32 24, label %sw.bb18.i
    i32 25, label %sw.bb19.i
    i32 26, label %sw.bb20.i
    i32 27, label %sw.bb21.i
    i32 28, label %sw.bb22.i
    i32 29, label %sw.bb23.i
    i32 30, label %sw.bb24.i
    i32 31, label %sw.bb25.i
    i32 32, label %sw.bb26.i
    i32 33, label %sw.bb27.i
    i32 34, label %sw.bb28.i
    i32 35, label %sw.bb29.i
    i32 36, label %sw.bb30.i
    i32 37, label %sw.bb31.i
    i32 38, label %sw.bb32.i
    i32 39, label %sw.bb33.i
    i32 40, label %sw.bb34.i
    i32 41, label %sw.bb35.i
    i32 42, label %sw.bb36.i
    i32 43, label %sw.bb37.i
    i32 44, label %sw.bb38.i
    i32 45, label %sw.bb39.i
    i32 46, label %sw.bb40.i
    i32 47, label %sw.bb41.i
    i32 48, label %sw.bb42.i
    i32 49, label %sw.bb43.i
    i32 50, label %sw.bb44.i
    i32 51, label %sw.bb45.i
    i32 52, label %sw.bb46.i
    i32 53, label %sw.bb47.i
    i32 16513, label %sw.bb48.i
    i32 16641, label %sw.bb49.i
    i32 16642, label %sw.bb50.i
    i32 16643, label %sw.bb51.i
    i32 16644, label %sw.bb52.i
    i32 16645, label %sw.bb53.i
  ]

sw.bb1.i:                                         ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb2.i:                                         ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb3.i:                                         ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb4.i:                                         ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb5.i:                                         ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb6.i:                                         ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb7.i:                                         ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb8.i:                                         ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb9.i:                                         ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb10.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb11.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb12.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb13.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb14.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb15.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb16.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb17.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb18.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb19.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb20.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb21.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb22.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb23.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb24.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb25.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb26.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb27.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb28.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb29.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb30.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb31.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb32.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb33.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb34.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb35.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb36.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb37.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb38.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb39.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb40.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb41.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb42.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb43.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb44.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb45.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb46.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb47.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb48.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb49.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb50.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb51.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb52.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.bb53.i:                                        ; preds = %if.end
  br label %dwarf_tag_name.exit

sw.default.i:                                     ; preds = %if.end
  br label %dwarf_tag_name.exit

dwarf_tag_name.exit:                              ; preds = %if.end, %sw.bb1.i, %sw.bb2.i, %sw.bb3.i, %sw.bb4.i, %sw.bb5.i, %sw.bb6.i, %sw.bb7.i, %sw.bb8.i, %sw.bb9.i, %sw.bb10.i, %sw.bb11.i, %sw.bb12.i, %sw.bb13.i, %sw.bb14.i, %sw.bb15.i, %sw.bb16.i, %sw.bb17.i, %sw.bb18.i, %sw.bb19.i, %sw.bb20.i, %sw.bb21.i, %sw.bb22.i, %sw.bb23.i, %sw.bb24.i, %sw.bb25.i, %sw.bb26.i, %sw.bb27.i, %sw.bb28.i, %sw.bb29.i, %sw.bb30.i, %sw.bb31.i, %sw.bb32.i, %sw.bb33.i, %sw.bb34.i, %sw.bb35.i, %sw.bb36.i, %sw.bb37.i, %sw.bb38.i, %sw.bb39.i, %sw.bb40.i, %sw.bb41.i, %sw.bb42.i, %sw.bb43.i, %sw.bb44.i, %sw.bb45.i, %sw.bb46.i, %sw.bb47.i, %sw.bb48.i, %sw.bb49.i, %sw.bb50.i, %sw.bb51.i, %sw.bb52.i, %sw.bb53.i, %sw.default.i
  %retval.0.i = phi i8* [ getelementptr inbounds ([17 x i8]* @.str209, i64 0, i64 0), %sw.default.i ], [ getelementptr inbounds ([17 x i8]* @.str208, i64 0, i64 0), %sw.bb53.i ], [ getelementptr inbounds ([17 x i8]* @.str207, i64 0, i64 0), %sw.bb52.i ], [ getelementptr inbounds ([22 x i8]* @.str206, i64 0, i64 0), %sw.bb51.i ], [ getelementptr inbounds ([25 x i8]* @.str205, i64 0, i64 0), %sw.bb50.i ], [ getelementptr inbounds ([20 x i8]* @.str204, i64 0, i64 0), %sw.bb49.i ], [ getelementptr inbounds ([17 x i8]* @.str203, i64 0, i64 0), %sw.bb48.i ], [ getelementptr inbounds ([21 x i8]* @.str202, i64 0, i64 0), %sw.bb47.i ], [ getelementptr inbounds ([16 x i8]* @.str201, i64 0, i64 0), %sw.bb46.i ], [ getelementptr inbounds ([20 x i8]* @.str200, i64 0, i64 0), %sw.bb45.i ], [ getelementptr inbounds ([17 x i8]* @.str199, i64 0, i64 0), %sw.bb44.i ], [ getelementptr inbounds ([19 x i8]* @.str198, i64 0, i64 0), %sw.bb43.i ], [ getelementptr inbounds ([28 x i8]* @.str197, i64 0, i64 0), %sw.bb42.i ], [ getelementptr inbounds ([27 x i8]* @.str196, i64 0, i64 0), %sw.bb41.i ], [ getelementptr inbounds ([18 x i8]* @.str195, i64 0, i64 0), %sw.bb40.i ], [ getelementptr inbounds ([19 x i8]* @.str194, i64 0, i64 0), %sw.bb39.i ], [ getelementptr inbounds ([21 x i8]* @.str193, i64 0, i64 0), %sw.bb38.i ], [ getelementptr inbounds ([16 x i8]* @.str192, i64 0, i64 0), %sw.bb37.i ], [ getelementptr inbounds ([14 x i8]* @.str191, i64 0, i64 0), %sw.bb36.i ], [ getelementptr inbounds ([17 x i8]* @.str190, i64 0, i64 0), %sw.bb35.i ], [ getelementptr inbounds ([18 x i8]* @.str189, i64 0, i64 0), %sw.bb34.i ], [ getelementptr inbounds ([16 x i8]* @.str188, i64 0, i64 0), %sw.bb33.i ], [ getelementptr inbounds ([18 x i8]* @.str187, i64 0, i64 0), %sw.bb32.i ], [ getelementptr inbounds ([19 x i8]* @.str186, i64 0, i64 0), %sw.bb31.i ], [ getelementptr inbounds ([17 x i8]* @.str185, i64 0, i64 0), %sw.bb30.i ], [ getelementptr inbounds ([26 x i8]* @.str184, i64 0, i64 0), %sw.bb29.i ], [ getelementptr inbounds ([17 x i8]* @.str183, i64 0, i64 0), %sw.bb28.i ], [ getelementptr inbounds ([21 x i8]* @.str182, i64 0, i64 0), %sw.bb27.i ], [ getelementptr inbounds ([16 x i8]* @.str181, i64 0, i64 0), %sw.bb26.i ], [ getelementptr inbounds ([26 x i8]* @.str180, i64 0, i64 0), %sw.bb25.i ], [ getelementptr inbounds ([14 x i8]* @.str179, i64 0, i64 0), %sw.bb24.i ], [ getelementptr inbounds ([26 x i8]* @.str178, i64 0, i64 0), %sw.bb23.i ], [ getelementptr inbounds ([19 x i8]* @.str177, i64 0, i64 0), %sw.bb22.i ], [ getelementptr inbounds ([24 x i8]* @.str176, i64 0, i64 0), %sw.bb21.i ], [ getelementptr inbounds ([20 x i8]* @.str175, i64 0, i64 0), %sw.bb20.i ], [ getelementptr inbounds ([15 x i8]* @.str174, i64 0, i64 0), %sw.bb19.i ], [ getelementptr inbounds ([30 x i8]* @.str173, i64 0, i64 0), %sw.bb18.i ], [ getelementptr inbounds ([18 x i8]* @.str172, i64 0, i64 0), %sw.bb17.i ], [ getelementptr inbounds ([15 x i8]* @.str171, i64 0, i64 0), %sw.bb16.i ], [ getelementptr inbounds ([23 x i8]* @.str170, i64 0, i64 0), %sw.bb15.i ], [ getelementptr inbounds ([22 x i8]* @.str169, i64 0, i64 0), %sw.bb14.i ], [ getelementptr inbounds ([19 x i8]* @.str168, i64 0, i64 0), %sw.bb13.i ], [ getelementptr inbounds ([20 x i8]* @.str167, i64 0, i64 0), %sw.bb12.i ], [ getelementptr inbounds ([22 x i8]* @.str166, i64 0, i64 0), %sw.bb11.i ], [ getelementptr inbounds ([20 x i8]* @.str165, i64 0, i64 0), %sw.bb10.i ], [ getelementptr inbounds ([14 x i8]* @.str164, i64 0, i64 0), %sw.bb9.i ], [ getelementptr inbounds ([21 x i8]* @.str163, i64 0, i64 0), %sw.bb8.i ], [ getelementptr inbounds ([13 x i8]* @.str162, i64 0, i64 0), %sw.bb7.i ], [ getelementptr inbounds ([28 x i8]* @.str161, i64 0, i64 0), %sw.bb6.i ], [ getelementptr inbounds ([24 x i8]* @.str160, i64 0, i64 0), %sw.bb5.i ], [ getelementptr inbounds ([24 x i8]* @.str159, i64 0, i64 0), %sw.bb4.i ], [ getelementptr inbounds ([19 x i8]* @.str158, i64 0, i64 0), %sw.bb3.i ], [ getelementptr inbounds ([18 x i8]* @.str157, i64 0, i64 0), %sw.bb2.i ], [ getelementptr inbounds ([18 x i8]* @.str156, i64 0, i64 0), %sw.bb1.i ], [ getelementptr inbounds ([15 x i8]* @.str155, i64 0, i64 0), %if.end ]
  call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %8, i8* getelementptr inbounds ([17 x i8]* @.str212, i64 0, i64 0), i64 %9, i8* %retval.0.i) #5
  %die_attr = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %a.0377 = load %struct.dw_attr_struct** %die_attr, align 8
  %cmp378 = icmp eq %struct.dw_attr_struct* %a.0377, null
  br i1 %cmp378, label %for.end103, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %dwarf_tag_name.exit
  %arraydecay = getelementptr inbounds [20 x i8]* %l1, i64 0, i64 0
  %11 = getelementptr inbounds [32 x i8]* %label.i, i64 0, i64 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc102
  %a.0379 = phi %struct.dw_attr_struct* [ %a.0377, %for.body.lr.ph ], [ %a.0, %for.inc102 ]
  %dw_attr = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 0
  %12 = load i32* %dw_attr, align 4, !tbaa !57
  switch i32 %12, label %sw.default.i229 [
    i32 1, label %dwarf_attr_name.exit
    i32 2, label %sw.bb1.i176
    i32 3, label %sw.bb2.i177
    i32 9, label %sw.bb3.i178
    i32 10, label %sw.bb4.i179
    i32 11, label %sw.bb5.i180
    i32 12, label %sw.bb6.i181
    i32 13, label %sw.bb7.i182
    i32 15, label %sw.bb8.i183
    i32 16, label %sw.bb9.i184
    i32 17, label %sw.bb10.i185
    i32 18, label %sw.bb11.i186
    i32 19, label %sw.bb12.i187
    i32 20, label %sw.bb13.i188
    i32 21, label %sw.bb14.i189
    i32 22, label %sw.bb15.i190
    i32 23, label %sw.bb16.i191
    i32 24, label %sw.bb17.i192
    i32 25, label %sw.bb18.i193
    i32 26, label %sw.bb19.i194
    i32 27, label %sw.bb20.i195
    i32 28, label %sw.bb21.i196
    i32 29, label %sw.bb22.i197
    i32 30, label %sw.bb23.i198
    i32 32, label %sw.bb24.i199
    i32 33, label %sw.bb25.i200
    i32 34, label %sw.bb26.i201
    i32 37, label %sw.bb27.i202
    i32 39, label %sw.bb28.i203
    i32 42, label %sw.bb29.i204
    i32 44, label %sw.bb30.i205
    i32 46, label %sw.bb31.i206
    i32 47, label %sw.bb32.i207
    i32 49, label %sw.bb33.i208
    i32 50, label %sw.bb34.i209
    i32 51, label %sw.bb35.i210
    i32 52, label %sw.bb36.i211
    i32 53, label %sw.bb37.i212
    i32 54, label %sw.bb38.i213
    i32 55, label %sw.bb39.i214
    i32 56, label %sw.bb40.i215
    i32 57, label %sw.bb41.i216
    i32 58, label %sw.bb42.i217
    i32 59, label %sw.bb43.i218
    i32 60, label %sw.bb44.i219
    i32 61, label %sw.bb45.i220
    i32 62, label %sw.bb46.i221
    i32 63, label %sw.bb47.i222
    i32 64, label %sw.bb48.i223
    i32 65, label %sw.bb49.i224
    i32 66, label %sw.bb50.i225
    i32 67, label %sw.bb51.i226
    i32 68, label %sw.bb52.i227
    i32 69, label %sw.bb53.i228
    i32 70, label %sw.bb54.i
    i32 71, label %sw.bb55.i
    i32 72, label %sw.bb56.i
    i32 73, label %sw.bb57.i
    i32 74, label %sw.bb58.i
    i32 75, label %sw.bb59.i
    i32 76, label %sw.bb60.i
    i32 77, label %sw.bb61.i
    i32 78, label %sw.bb62.i
    i32 79, label %sw.bb63.i
    i32 80, label %sw.bb64.i
    i32 81, label %sw.bb65.i
    i32 82, label %sw.bb66.i
    i32 83, label %sw.bb67.i
    i32 84, label %sw.bb68.i
    i32 85, label %sw.bb69.i
    i32 86, label %sw.bb70.i
    i32 87, label %sw.bb71.i
    i32 88, label %sw.bb72.i
    i32 89, label %sw.bb73.i
    i32 8193, label %sw.bb74.i
    i32 8194, label %sw.bb75.i
    i32 8195, label %sw.bb76.i
    i32 8196, label %sw.bb77.i
    i32 8197, label %sw.bb78.i
    i32 8198, label %sw.bb79.i
    i32 8199, label %sw.bb80.i
    i32 8200, label %sw.bb81.i
    i32 8201, label %sw.bb82.i
    i32 8202, label %sw.bb83.i
    i32 8203, label %sw.bb84.i
    i32 8449, label %sw.bb85.i
    i32 8450, label %sw.bb86.i
    i32 8451, label %sw.bb87.i
    i32 8452, label %sw.bb88.i
    i32 8453, label %sw.bb89.i
    i32 8454, label %sw.bb90.i
    i32 8455, label %sw.bb91.i
    i32 8705, label %sw.bb92.i
  ]

sw.bb1.i176:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb2.i177:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb3.i178:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb4.i179:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb5.i180:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb6.i181:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb7.i182:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb8.i183:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb9.i184:                                      ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb10.i185:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb11.i186:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb12.i187:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb13.i188:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb14.i189:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb15.i190:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb16.i191:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb17.i192:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb18.i193:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb19.i194:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb20.i195:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb21.i196:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb22.i197:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb23.i198:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb24.i199:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb25.i200:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb26.i201:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb27.i202:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb28.i203:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb29.i204:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb30.i205:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb31.i206:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb32.i207:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb33.i208:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb34.i209:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb35.i210:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb36.i211:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb37.i212:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb38.i213:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb39.i214:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb40.i215:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb41.i216:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb42.i217:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb43.i218:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb44.i219:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb45.i220:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb46.i221:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb47.i222:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb48.i223:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb49.i224:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb50.i225:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb51.i226:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb52.i227:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb53.i228:                                     ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb54.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb55.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb56.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb57.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb58.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb59.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb60.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb61.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb62.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb63.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb64.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb65.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb66.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb67.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb68.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb69.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb70.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb71.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb72.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb73.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb74.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb75.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb76.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb77.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb78.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb79.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb80.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb81.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb82.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb83.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb84.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb85.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb86.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb87.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb88.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb89.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb90.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb91.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.bb92.i:                                        ; preds = %for.body
  br label %dwarf_attr_name.exit

sw.default.i229:                                  ; preds = %for.body
  br label %dwarf_attr_name.exit

dwarf_attr_name.exit:                             ; preds = %for.body, %sw.bb1.i176, %sw.bb2.i177, %sw.bb3.i178, %sw.bb4.i179, %sw.bb5.i180, %sw.bb6.i181, %sw.bb7.i182, %sw.bb8.i183, %sw.bb9.i184, %sw.bb10.i185, %sw.bb11.i186, %sw.bb12.i187, %sw.bb13.i188, %sw.bb14.i189, %sw.bb15.i190, %sw.bb16.i191, %sw.bb17.i192, %sw.bb18.i193, %sw.bb19.i194, %sw.bb20.i195, %sw.bb21.i196, %sw.bb22.i197, %sw.bb23.i198, %sw.bb24.i199, %sw.bb25.i200, %sw.bb26.i201, %sw.bb27.i202, %sw.bb28.i203, %sw.bb29.i204, %sw.bb30.i205, %sw.bb31.i206, %sw.bb32.i207, %sw.bb33.i208, %sw.bb34.i209, %sw.bb35.i210, %sw.bb36.i211, %sw.bb37.i212, %sw.bb38.i213, %sw.bb39.i214, %sw.bb40.i215, %sw.bb41.i216, %sw.bb42.i217, %sw.bb43.i218, %sw.bb44.i219, %sw.bb45.i220, %sw.bb46.i221, %sw.bb47.i222, %sw.bb48.i223, %sw.bb49.i224, %sw.bb50.i225, %sw.bb51.i226, %sw.bb52.i227, %sw.bb53.i228, %sw.bb54.i, %sw.bb55.i, %sw.bb56.i, %sw.bb57.i, %sw.bb58.i, %sw.bb59.i, %sw.bb60.i, %sw.bb61.i, %sw.bb62.i, %sw.bb63.i, %sw.bb64.i, %sw.bb65.i, %sw.bb66.i, %sw.bb67.i, %sw.bb68.i, %sw.bb69.i, %sw.bb70.i, %sw.bb71.i, %sw.bb72.i, %sw.bb73.i, %sw.bb74.i, %sw.bb75.i, %sw.bb76.i, %sw.bb77.i, %sw.bb78.i, %sw.bb79.i, %sw.bb80.i, %sw.bb81.i, %sw.bb82.i, %sw.bb83.i, %sw.bb84.i, %sw.bb85.i, %sw.bb86.i, %sw.bb87.i, %sw.bb88.i, %sw.bb89.i, %sw.bb90.i, %sw.bb91.i, %sw.bb92.i, %sw.default.i229
  %retval.0.i230 = phi i8* [ getelementptr inbounds ([16 x i8]* @.str154, i64 0, i64 0), %sw.default.i229 ], [ getelementptr inbounds ([28 x i8]* @.str153, i64 0, i64 0), %sw.bb92.i ], [ getelementptr inbounds ([17 x i8]* @.str152, i64 0, i64 0), %sw.bb91.i ], [ getelementptr inbounds ([15 x i8]* @.str151, i64 0, i64 0), %sw.bb90.i ], [ getelementptr inbounds ([17 x i8]* @.str150, i64 0, i64 0), %sw.bb89.i ], [ getelementptr inbounds ([17 x i8]* @.str149, i64 0, i64 0), %sw.bb88.i ], [ getelementptr inbounds ([15 x i8]* @.str148, i64 0, i64 0), %sw.bb87.i ], [ getelementptr inbounds ([15 x i8]* @.str147, i64 0, i64 0), %sw.bb86.i ], [ getelementptr inbounds ([15 x i8]* @.str146, i64 0, i64 0), %sw.bb85.i ], [ getelementptr inbounds ([23 x i8]* @.str145, i64 0, i64 0), %sw.bb84.i ], [ getelementptr inbounds ([24 x i8]* @.str144, i64 0, i64 0), %sw.bb83.i ], [ getelementptr inbounds ([25 x i8]* @.str143, i64 0, i64 0), %sw.bb82.i ], [ getelementptr inbounds ([18 x i8]* @.str142, i64 0, i64 0), %sw.bb81.i ], [ getelementptr inbounds ([24 x i8]* @.str141, i64 0, i64 0), %sw.bb80.i ], [ getelementptr inbounds ([35 x i8]* @.str140, i64 0, i64 0), %sw.bb79.i ], [ getelementptr inbounds ([30 x i8]* @.str139, i64 0, i64 0), %sw.bb78.i ], [ getelementptr inbounds ([24 x i8]* @.str138, i64 0, i64 0), %sw.bb77.i ], [ getelementptr inbounds ([27 x i8]* @.str137, i64 0, i64 0), %sw.bb76.i ], [ getelementptr inbounds ([22 x i8]* @.str136, i64 0, i64 0), %sw.bb75.i ], [ getelementptr inbounds ([15 x i8]* @.str135, i64 0, i64 0), %sw.bb74.i ], [ getelementptr inbounds ([16 x i8]* @.str134, i64 0, i64 0), %sw.bb73.i ], [ getelementptr inbounds ([16 x i8]* @.str133, i64 0, i64 0), %sw.bb72.i ], [ getelementptr inbounds ([18 x i8]* @.str132, i64 0, i64 0), %sw.bb71.i ], [ getelementptr inbounds ([17 x i8]* @.str131, i64 0, i64 0), %sw.bb70.i ], [ getelementptr inbounds ([13 x i8]* @.str130, i64 0, i64 0), %sw.bb69.i ], [ getelementptr inbounds ([16 x i8]* @.str129, i64 0, i64 0), %sw.bb68.i ], [ getelementptr inbounds ([15 x i8]* @.str128, i64 0, i64 0), %sw.bb67.i ], [ getelementptr inbounds ([15 x i8]* @.str127, i64 0, i64 0), %sw.bb66.i ], [ getelementptr inbounds ([13 x i8]* @.str126, i64 0, i64 0), %sw.bb65.i ], [ getelementptr inbounds ([20 x i8]* @.str125, i64 0, i64 0), %sw.bb64.i ], [ getelementptr inbounds ([17 x i8]* @.str124, i64 0, i64 0), %sw.bb63.i ], [ getelementptr inbounds ([16 x i8]* @.str123, i64 0, i64 0), %sw.bb62.i ], [ getelementptr inbounds ([27 x i8]* @.str122, i64 0, i64 0), %sw.bb61.i ], [ getelementptr inbounds ([17 x i8]* @.str121, i64 0, i64 0), %sw.bb60.i ], [ getelementptr inbounds ([25 x i8]* @.str120, i64 0, i64 0), %sw.bb59.i ], [ getelementptr inbounds ([19 x i8]* @.str119, i64 0, i64 0), %sw.bb58.i ], [ getelementptr inbounds ([11 x i8]* @.str118, i64 0, i64 0), %sw.bb57.i ], [ getelementptr inbounds ([18 x i8]* @.str117, i64 0, i64 0), %sw.bb56.i ], [ getelementptr inbounds ([20 x i8]* @.str116, i64 0, i64 0), %sw.bb55.i ], [ getelementptr inbounds ([14 x i8]* @.str115, i64 0, i64 0), %sw.bb54.i ], [ getelementptr inbounds ([15 x i8]* @.str114, i64 0, i64 0), %sw.bb53.i228 ], [ getelementptr inbounds ([21 x i8]* @.str113, i64 0, i64 0), %sw.bb52.i227 ], [ getelementptr inbounds ([17 x i8]* @.str112, i64 0, i64 0), %sw.bb51.i226 ], [ getelementptr inbounds ([22 x i8]* @.str111, i64 0, i64 0), %sw.bb50.i225 ], [ getelementptr inbounds ([13 x i8]* @.str110, i64 0, i64 0), %sw.bb49.i224 ], [ getelementptr inbounds ([17 x i8]* @.str109, i64 0, i64 0), %sw.bb48.i223 ], [ getelementptr inbounds ([15 x i8]* @.str108, i64 0, i64 0), %sw.bb47.i222 ], [ getelementptr inbounds ([15 x i8]* @.str107, i64 0, i64 0), %sw.bb46.i221 ], [ getelementptr inbounds ([17 x i8]* @.str106, i64 0, i64 0), %sw.bb45.i220 ], [ getelementptr inbounds ([18 x i8]* @.str105, i64 0, i64 0), %sw.bb44.i219 ], [ getelementptr inbounds ([16 x i8]* @.str104, i64 0, i64 0), %sw.bb43.i218 ], [ getelementptr inbounds ([16 x i8]* @.str103, i64 0, i64 0), %sw.bb42.i217 ], [ getelementptr inbounds ([18 x i8]* @.str102, i64 0, i64 0), %sw.bb41.i216 ], [ getelementptr inbounds ([27 x i8]* @.str101, i64 0, i64 0), %sw.bb40.i215 ], [ getelementptr inbounds ([12 x i8]* @.str100, i64 0, i64 0), %sw.bb39.i214 ], [ getelementptr inbounds ([25 x i8]* @.str99, i64 0, i64 0), %sw.bb38.i213 ], [ getelementptr inbounds ([17 x i8]* @.str98, i64 0, i64 0), %sw.bb37.i212 ], [ getelementptr inbounds ([17 x i8]* @.str97, i64 0, i64 0), %sw.bb36.i211 ], [ getelementptr inbounds ([20 x i8]* @.str96, i64 0, i64 0), %sw.bb35.i210 ], [ getelementptr inbounds ([20 x i8]* @.str95, i64 0, i64 0), %sw.bb34.i209 ], [ getelementptr inbounds ([22 x i8]* @.str94, i64 0, i64 0), %sw.bb33.i208 ], [ getelementptr inbounds ([18 x i8]* @.str93, i64 0, i64 0), %sw.bb32.i207 ], [ getelementptr inbounds ([18 x i8]* @.str92, i64 0, i64 0), %sw.bb31.i206 ], [ getelementptr inbounds ([18 x i8]* @.str91, i64 0, i64 0), %sw.bb30.i205 ], [ getelementptr inbounds ([18 x i8]* @.str90, i64 0, i64 0), %sw.bb29.i204 ], [ getelementptr inbounds ([17 x i8]* @.str89, i64 0, i64 0), %sw.bb28.i203 ], [ getelementptr inbounds ([15 x i8]* @.str88, i64 0, i64 0), %sw.bb27.i202 ], [ getelementptr inbounds ([18 x i8]* @.str87, i64 0, i64 0), %sw.bb26.i201 ], [ getelementptr inbounds ([18 x i8]* @.str86, i64 0, i64 0), %sw.bb25.i200 ], [ getelementptr inbounds ([13 x i8]* @.str85, i64 0, i64 0), %sw.bb24.i199 ], [ getelementptr inbounds ([20 x i8]* @.str84, i64 0, i64 0), %sw.bb23.i198 ], [ getelementptr inbounds ([22 x i8]* @.str83, i64 0, i64 0), %sw.bb22.i197 ], [ getelementptr inbounds ([18 x i8]* @.str82, i64 0, i64 0), %sw.bb21.i196 ], [ getelementptr inbounds ([15 x i8]* @.str81, i64 0, i64 0), %sw.bb20.i195 ], [ getelementptr inbounds ([23 x i8]* @.str80, i64 0, i64 0), %sw.bb19.i194 ], [ getelementptr inbounds ([20 x i8]* @.str79, i64 0, i64 0), %sw.bb18.i193 ], [ getelementptr inbounds ([13 x i8]* @.str78, i64 0, i64 0), %sw.bb17.i192 ], [ getelementptr inbounds ([17 x i8]* @.str77, i64 0, i64 0), %sw.bb16.i191 ], [ getelementptr inbounds ([18 x i8]* @.str76, i64 0, i64 0), %sw.bb15.i190 ], [ getelementptr inbounds ([12 x i8]* @.str75, i64 0, i64 0), %sw.bb14.i189 ], [ getelementptr inbounds ([13 x i8]* @.str74, i64 0, i64 0), %sw.bb13.i188 ], [ getelementptr inbounds ([15 x i8]* @.str73, i64 0, i64 0), %sw.bb12.i187 ], [ getelementptr inbounds ([14 x i8]* @.str72, i64 0, i64 0), %sw.bb11.i186 ], [ getelementptr inbounds ([13 x i8]* @.str71, i64 0, i64 0), %sw.bb10.i185 ], [ getelementptr inbounds ([16 x i8]* @.str70, i64 0, i64 0), %sw.bb9.i184 ], [ getelementptr inbounds ([19 x i8]* @.str69, i64 0, i64 0), %sw.bb8.i183 ], [ getelementptr inbounds ([15 x i8]* @.str68, i64 0, i64 0), %sw.bb7.i182 ], [ getelementptr inbounds ([17 x i8]* @.str67, i64 0, i64 0), %sw.bb6.i181 ], [ getelementptr inbounds ([16 x i8]* @.str66, i64 0, i64 0), %sw.bb5.i180 ], [ getelementptr inbounds ([18 x i8]* @.str65, i64 0, i64 0), %sw.bb4.i179 ], [ getelementptr inbounds ([15 x i8]* @.str64, i64 0, i64 0), %sw.bb3.i178 ], [ getelementptr inbounds ([11 x i8]* @.str63, i64 0, i64 0), %sw.bb2.i177 ], [ getelementptr inbounds ([15 x i8]* @.str62, i64 0, i64 0), %sw.bb1.i176 ], [ getelementptr inbounds ([14 x i8]* @.str61, i64 0, i64 0), %for.body ]
  %a.0.idx = getelementptr %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 0
  %a.0.idx.val = load i32* %a.0.idx, align 4, !tbaa !59
  switch i32 %a.0.idx.val, label %sw.default [
    i32 0, label %AT_addr.exit
    i32 1, label %sw.bb5
    i32 4, label %sw.bb6
    i32 2, label %AT_loc.exit
    i32 5, label %AT_int.exit
    i32 6, label %AT_unsigned.exit
    i32 7, label %sw.bb23
    i32 8, label %sw.bb29
    i32 9, label %AT_flag.exit
    i32 3, label %AT_loc_list.exit
    i32 10, label %AT_ref.exit
    i32 11, label %do.body
    i32 12, label %AT_lbl.exit
    i32 13, label %AT_lbl.exit335
    i32 14, label %if.then.i342
  ]

AT_addr.exit:                                     ; preds = %dwarf_attr_name.exit
  %13 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %13, 20
  %14 = and i32 %and, 32
  %15 = add i32 %14, 32
  %div = sdiv i32 %15, 8
  %v.i = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %val_addr.i = bitcast %union.anon.3* %v.i to %struct.rtx_def**
  %16 = load %struct.rtx_def** %val_addr.i, align 8, !tbaa !6
  call void (i32, %struct.rtx_def*, i8*, ...)* @dw2_asm_output_addr_rtx(i32 %div, %struct.rtx_def* %16, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

sw.bb5:                                           ; preds = %dwarf_attr_name.exit
  %val_offset = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1, i32 0, i32 0
  %17 = load i64* %val_offset, align 8, !tbaa !8
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %17, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

sw.bb6:                                           ; preds = %dwarf_attr_name.exit
  %strlen = call i64 @strlen(i8* getelementptr inbounds ([60 x i8]* @ranges_section_label, i64 0, i64 0)) #5
  %strchr = getelementptr [60 x i8]* @ranges_section_label, i64 0, i64 %strlen
  %val_offset10 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1, i32 0, i32 0
  %18 = load i64* %val_offset10, align 8, !tbaa !8
  %call11 = call i32 (i8*, i8*, ...)* @sprintf(i8* %strchr, i8* getelementptr inbounds ([7 x i8]* @.str214, i64 0, i64 0), i64 %18) #5
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_offset(i32 4, i8* getelementptr inbounds ([60 x i8]* @ranges_section_label, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  store i8 0, i8* %strchr, align 1, !tbaa !1
  br label %for.inc102

AT_loc.exit:                                      ; preds = %dwarf_attr_name.exit
  %v.i238 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %val_loc.i = bitcast %union.anon.3* %v.i238 to %struct.dw_loc_descr_struct**
  %19 = load %struct.dw_loc_descr_struct** %val_loc.i, align 8, !tbaa !6
  %call14 = call fastcc i64 @size_of_locs(%struct.dw_loc_descr_struct* %19)
  %cmp.i240 = icmp eq i64 %call14, 0
  br i1 %cmp.i240, label %land.lhs.true.i247, label %if.else.i

if.else.i:                                        ; preds = %AT_loc.exit
  %call.i241 = call i32 @floor_log2_wide(i64 %call14) #5
  %phitmp.i = sdiv i32 %call.i241, 8
  %phitmp5.i = sext i32 %phitmp.i to i64
  br label %land.lhs.true.i247

land.lhs.true.i247:                               ; preds = %if.else.i, %AT_loc.exit
  %log.0.i = phi i64 [ %phitmp5.i, %if.else.i ], [ 0, %AT_loc.exit ]
  %call1.i = call i32 @floor_log2_wide(i64 %log.0.i) #5
  %add.i = add nsw i32 %call1.i, 1
  %shl.i = shl i32 1, %add.i
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 %shl.i, i64 %call14, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  %a.idx.val.i245 = load i32* %a.0.idx, align 4, !tbaa !59
  %cmp.i246 = icmp eq i32 %a.idx.val.i245, 2
  br i1 %cmp.i246, label %AT_loc.exit251, label %if.end.i250

if.end.i250:                                      ; preds = %land.lhs.true.i247
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4653, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_loc, i64 0, i64 0)) #7
  unreachable

AT_loc.exit251:                                   ; preds = %land.lhs.true.i247
  %20 = load %struct.dw_loc_descr_struct** %val_loc.i, align 8, !tbaa !6
  call fastcc void @output_loc_sequence(%struct.dw_loc_descr_struct* %20)
  br label %for.inc102

AT_int.exit:                                      ; preds = %dwarf_attr_name.exit
  %val_int.i = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1, i32 0, i32 0
  %21 = load i64* %val_int.i, align 8, !tbaa !8
  call void (i64, i8*, ...)* @dw2_asm_output_data_sleb128(i64 %21, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

AT_unsigned.exit:                                 ; preds = %dwarf_attr_name.exit
  %val_unsigned.i = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1, i32 0, i32 0
  %22 = load i64* %val_unsigned.i, align 8, !tbaa !8
  %cmp.i264 = icmp eq i64 %22, 0
  br i1 %cmp.i264, label %land.lhs.true.i279, label %if.else.i268

if.else.i268:                                     ; preds = %AT_unsigned.exit
  %call.i265 = call i32 @floor_log2_wide(i64 %22) #5
  %phitmp.i266 = sdiv i32 %call.i265, 8
  %phitmp5.i267 = sext i32 %phitmp.i266 to i64
  br label %land.lhs.true.i279

land.lhs.true.i279:                               ; preds = %if.else.i268, %AT_unsigned.exit
  %log.0.i269 = phi i64 [ %phitmp5.i267, %if.else.i268 ], [ 0, %AT_unsigned.exit ]
  %call1.i270 = call i32 @floor_log2_wide(i64 %log.0.i269) #5
  %a.idx.val.i277 = load i32* %a.0.idx, align 4, !tbaa !59
  %cmp.i278 = icmp eq i32 %a.idx.val.i277, 6
  br i1 %cmp.i278, label %AT_unsigned.exit282, label %if.end.i281

if.end.i281:                                      ; preds = %land.lhs.true.i279
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit282:                              ; preds = %land.lhs.true.i279
  %add.i271 = add nsw i32 %call1.i270, 1
  %shl.i272 = shl i32 1, %add.i271
  %23 = load i64* %val_unsigned.i, align 8, !tbaa !8
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 %shl.i272, i64 %23, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

sw.bb23:                                          ; preds = %dwarf_attr_name.exit
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 8, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  %low = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1, i32 0, i32 1
  %24 = load i64* %low, align 8, !tbaa !100
  %hi = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1, i32 0, i32 0
  %25 = load i64* %hi, align 8, !tbaa !98
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %24, i8* getelementptr inbounds ([19 x i8]* @.str215, i64 0, i64 0)) #5
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %25, i8* null) #5
  br label %for.inc102

sw.bb29:                                          ; preds = %dwarf_attr_name.exit
  %length = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1, i32 0, i32 1
  %26 = bitcast i64* %length to i32*
  %27 = load i32* %26, align 4, !tbaa !117
  %mul = shl i32 %27, 2
  %conv = zext i32 %mul to i64
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  %28 = load i32* %26, align 4, !tbaa !117
  %cmp37375 = icmp eq i32 %28, 0
  br i1 %cmp37375, label %for.inc102, label %for.body39.lr.ph

for.body39.lr.ph:                                 ; preds = %sw.bb29
  %v31 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %array = bitcast %union.anon.3* %v31 to i64**
  br label %for.body39

for.body39:                                       ; preds = %for.body39.lr.ph, %for.body39
  %i.0376 = phi i32 [ 0, %for.body39.lr.ph ], [ %inc, %for.body39 ]
  %idxprom = zext i32 %i.0376 to i64
  %29 = load i64** %array, align 8, !tbaa !119
  %arrayidx = getelementptr inbounds i64* %29, i64 %idxprom
  %30 = load i64* %arrayidx, align 8, !tbaa !8
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %30, i8* getelementptr inbounds ([20 x i8]* @.str216, i64 0, i64 0), i32 %i.0376) #5
  %inc = add i32 %i.0376, 1
  %31 = load i32* %26, align 4, !tbaa !117
  %cmp37 = icmp ult i32 %inc, %31
  br i1 %cmp37, label %for.body39, label %for.inc102

AT_flag.exit:                                     ; preds = %dwarf_attr_name.exit
  %v.i288 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %val_flag.i = bitcast %union.anon.3* %v.i288 to i8*
  %32 = load i8* %val_flag.i, align 1, !tbaa !1
  %conv45 = zext i8 %32 to i64
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv45, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

AT_loc_list.exit:                                 ; preds = %dwarf_attr_name.exit
  %v.i295 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %val_loc_list.i = bitcast %union.anon.3* %v.i295 to %struct.dw_loc_list_struct**
  %33 = load %struct.dw_loc_list_struct** %val_loc_list.i, align 8, !tbaa !6
  %ll_symbol = getelementptr inbounds %struct.dw_loc_list_struct* %33, i64 0, i32 3
  %34 = load i8** %ll_symbol, align 8, !tbaa !96
  %cmp48 = icmp eq i8* %34, null
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %AT_loc_list.exit
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6361, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.output_die, i64 0, i64 0)) #7
  unreachable

if.end51:                                         ; preds = %AT_loc_list.exit
  call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 4, i8* %34, i8* getelementptr inbounds ([30 x i8]* @loc_section_label, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

AT_ref.exit:                                      ; preds = %dwarf_attr_name.exit
  %external.i = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1, i32 0, i32 1
  %35 = bitcast i64* %external.i to i32*
  %36 = load i32* %35, align 4, !tbaa !108
  %tobool54 = icmp eq i32 %36, 0
  %v.i308 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %die.i = bitcast %union.anon.3* %v.i308 to %struct.die_struct**
  %37 = load %struct.die_struct** %die.i, align 8, !tbaa !60
  br i1 %tobool54, label %if.else, label %if.then55

if.then55:                                        ; preds = %AT_ref.exit
  %die_symbol58 = getelementptr inbounds %struct.die_struct* %37, i64 0, i32 1
  %38 = load i8** %die_symbol58, align 8, !tbaa !101
  %cmp59 = icmp eq i8* %38, null
  br i1 %cmp59, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.then55
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6373, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.output_die, i64 0, i64 0)) #7
  unreachable

if.end62:                                         ; preds = %if.then55
  %39 = load i32* @target_flags, align 4, !tbaa !4
  %and63 = lshr i32 %39, 20
  %40 = and i32 %and63, 32
  %41 = add i32 %40, 32
  %div66 = sdiv i32 %41, 8
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_offset(i32 %div66, i8* %38, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

if.else:                                          ; preds = %AT_ref.exit
  %die_offset68 = getelementptr inbounds %struct.die_struct* %37, i64 0, i32 6
  %42 = load i64* %die_offset68, align 8, !tbaa !78
  %cmp69 = icmp eq i64 %42, 0
  br i1 %cmp69, label %if.then71, label %AT_ref.exit320

if.then71:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6377, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.output_die, i64 0, i64 0)) #7
  unreachable

AT_ref.exit320:                                   ; preds = %if.else
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %42, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

do.body:                                          ; preds = %dwarf_attr_name.exit
  %v79 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %val_fde_index = bitcast %union.anon.3* %v79 to i32*
  %43 = load i32* %val_fde_index, align 4, !tbaa !4
  %mul80 = shl i32 %43, 1
  %call81 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str217, i64 0, i64 0), i32 %mul80) #5
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_offset(i32 4, i8* %arraydecay, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

AT_lbl.exit:                                      ; preds = %dwarf_attr_name.exit
  %44 = load i32* @target_flags, align 4, !tbaa !4
  %and84 = lshr i32 %44, 20
  %45 = and i32 %and84, 32
  %46 = add i32 %45, 32
  %div87 = sdiv i32 %46, 8
  %v.i323 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %val_lbl_id.i = bitcast %union.anon.3* %v.i323 to i8**
  %47 = load i8** %val_lbl_id.i, align 8, !tbaa !6
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_addr(i32 %div87, i8* %47, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

AT_lbl.exit335:                                   ; preds = %dwarf_attr_name.exit
  %v.i331 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %val_lbl_id.i332 = bitcast %union.anon.3* %v.i331 to i8**
  %48 = load i8** %val_lbl_id.i332, align 8, !tbaa !6
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_offset(i32 4, i8* %48, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

if.then.i342:                                     ; preds = %dwarf_attr_name.exit
  call void @llvm.lifetime.start(i64 32, i8* %11) #5
  %v.i341 = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 2, i32 1
  %val_str.i = bitcast %union.anon.3* %v.i341 to %struct.indirect_string_node**
  %49 = load %struct.indirect_string_node** %val_str.i, align 8, !tbaa !6
  %form.i = getelementptr inbounds %struct.indirect_string_node* %49, i64 0, i32 2
  %50 = load i32* %form.i, align 4, !tbaa !113
  %tobool1.i = icmp eq i32 %50, 0
  br i1 %tobool1.i, label %if.end.i344, label %AT_string_form.exit

if.end.i344:                                      ; preds = %if.then.i342
  %len4.i = getelementptr inbounds %struct.indirect_string_node* %49, i64 0, i32 0, i32 0
  %51 = load i32* %len4.i, align 4, !tbaa !115
  %add.i343 = add i32 %51, 1
  %cmp5.i = icmp ult i32 %add.i343, 5
  br i1 %cmp5.i, label %AT_string_form.exit.thread370, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end.i344
  %refcount.i = getelementptr inbounds %struct.indirect_string_node* %49, i64 0, i32 1
  %52 = load i32* %refcount.i, align 4, !tbaa !84
  %cmp6.i = icmp eq i32 %52, 0
  br i1 %cmp6.i, label %AT_string_form.exit.thread370, label %AT_string_form.exit.thread

AT_string_form.exit.thread370:                    ; preds = %if.end.i344, %lor.lhs.false.i
  store i32 8, i32* %form.i, align 4, !tbaa !113
  call void @llvm.lifetime.end(i64 32, i8* %11) #5
  br label %land.lhs.true.i359

AT_string_form.exit.thread:                       ; preds = %lor.lhs.false.i
  %53 = load i32* @const_labelno, align 4, !tbaa !4
  %call10.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %11, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str60, i64 0, i64 0), i32 %53) #5
  %54 = load i32* @const_labelno, align 4, !tbaa !4
  %inc.i = add nsw i32 %54, 1
  store i32 %inc.i, i32* @const_labelno, align 4, !tbaa !4
  %call12.i = call noalias i8* @xstrdup(i8* %11) #5
  %label13.i = getelementptr inbounds %struct.indirect_string_node* %49, i64 0, i32 3
  store i8* %call12.i, i8** %label13.i, align 8, !tbaa !114
  store i32 14, i32* %form.i, align 4, !tbaa !113
  call void @llvm.lifetime.end(i64 32, i8* %11) #5
  br label %land.lhs.true.i350

AT_string_form.exit:                              ; preds = %if.then.i342
  call void @llvm.lifetime.end(i64 32, i8* %11) #5
  %cmp93 = icmp eq i32 %50, 14
  br i1 %cmp93, label %land.lhs.true.i350, label %land.lhs.true.i359

land.lhs.true.i350:                               ; preds = %AT_string_form.exit, %AT_string_form.exit.thread
  %55 = load %struct.indirect_string_node** %val_str.i, align 8, !tbaa !6
  %a.idx.val.i348 = load i32* %a.0.idx, align 4, !tbaa !59
  %cmp.i349 = icmp eq i32 %a.idx.val.i348, 14
  br i1 %cmp.i349, label %AT_string.exit, label %if.end.i354

if.end.i354:                                      ; preds = %land.lhs.true.i350
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4518, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.AT_string, i64 0, i64 0)) #7
  unreachable

AT_string.exit:                                   ; preds = %land.lhs.true.i350
  %label = getelementptr inbounds %struct.indirect_string_node* %55, i64 0, i32 3
  %56 = load i8** %label, align 8, !tbaa !114
  %str.i = getelementptr inbounds %struct.indirect_string_node* %55, i64 0, i32 0, i32 1
  %57 = load i8** %str.i, align 8, !tbaa !70
  call void (i32, i8*, i8*, ...)* @dw2_asm_output_offset(i32 4, i8* %56, i8* getelementptr inbounds ([9 x i8]* @.str218, i64 0, i64 0), i8* %retval.0.i230, i8* %57) #5
  br label %for.inc102

land.lhs.true.i359:                               ; preds = %AT_string_form.exit, %AT_string_form.exit.thread370
  %a.idx.val.i357 = load i32* %a.0.idx, align 4, !tbaa !59
  %cmp.i358 = icmp eq i32 %a.idx.val.i357, 14
  br i1 %cmp.i358, label %AT_string.exit365, label %if.end.i364

if.end.i364:                                      ; preds = %land.lhs.true.i359
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4518, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.AT_string, i64 0, i64 0)) #7
  unreachable

AT_string.exit365:                                ; preds = %land.lhs.true.i359
  %58 = load %struct.indirect_string_node** %val_str.i, align 8, !tbaa !6
  %str.i362 = getelementptr inbounds %struct.indirect_string_node* %58, i64 0, i32 0, i32 1
  %59 = load i8** %str.i362, align 8, !tbaa !70
  call void (i8*, i64, i8*, ...)* @dw2_asm_output_nstring(i8* %59, i64 -1, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i230) #5
  br label %for.inc102

sw.default:                                       ; preds = %dwarf_attr_name.exit
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 6411, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.output_die, i64 0, i64 0)) #7
  unreachable

for.inc102:                                       ; preds = %for.body39, %sw.bb29, %AT_addr.exit, %sw.bb5, %sw.bb6, %AT_loc.exit251, %AT_int.exit, %AT_unsigned.exit282, %sw.bb23, %AT_flag.exit, %if.end51, %do.body, %AT_lbl.exit, %AT_lbl.exit335, %AT_ref.exit320, %if.end62, %AT_string.exit365, %AT_string.exit
  %dw_attr_next = getelementptr inbounds %struct.dw_attr_struct* %a.0379, i64 0, i32 1
  %a.0 = load %struct.dw_attr_struct** %dw_attr_next, align 8
  %cmp = icmp eq %struct.dw_attr_struct* %a.0, null
  br i1 %cmp, label %for.end103, label %for.body

for.end103:                                       ; preds = %for.inc102, %dwarf_tag_name.exit
  %die_child = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %c.0372 = load %struct.die_struct** %die_child, align 8
  %cmp105373 = icmp eq %struct.die_struct* %c.0372, null
  br i1 %cmp105373, label %if.end115, label %for.body107

for.body107:                                      ; preds = %for.end103, %for.body107
  %c.0374 = phi %struct.die_struct* [ %c.0, %for.body107 ], [ %c.0372, %for.end103 ]
  call fastcc void @output_die(%struct.die_struct* %c.0374)
  %die_sib = getelementptr inbounds %struct.die_struct* %c.0374, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib, align 8
  %cmp105 = icmp eq %struct.die_struct* %c.0, null
  br i1 %cmp105, label %for.end109, label %for.body107

for.end109:                                       ; preds = %for.body107
  %.pre = load %struct.die_struct** %die_child, align 8, !tbaa !62
  %phitmp = icmp eq %struct.die_struct* %.pre, null
  br i1 %phitmp, label %if.end115, label %if.then113

if.then113:                                       ; preds = %for.end109
  %60 = load i64* %die_offset, align 8, !tbaa !78
  call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 0, i8* getelementptr inbounds ([29 x i8]* @.str219, i64 0, i64 0), i64 %60) #5
  br label %if.end115

if.end115:                                        ; preds = %for.end103, %for.end109, %if.then113
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unmark_dies(%struct.die_struct* nocapture %die) #1 {
entry:
  %die_mark = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 8
  store i32 0, i32* %die_mark, align 4, !tbaa !77
  %die_child = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %c.04 = load %struct.die_struct** %die_child, align 8
  %tobool5 = icmp eq %struct.die_struct* %c.04, null
  br i1 %tobool5, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %c.06 = phi %struct.die_struct* [ %c.0, %for.body ], [ %c.04, %entry ]
  tail call fastcc void @unmark_dies(%struct.die_struct* %c.06)
  %die_sib = getelementptr inbounds %struct.die_struct* %c.06, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib, align 8
  %tobool = icmp eq %struct.die_struct* %c.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @output_loc_sequence(%struct.dw_loc_descr_struct* readonly %loc) #1 {
entry:
  %cmp21 = icmp eq %struct.dw_loc_descr_struct* %loc, null
  br i1 %cmp21, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %output_loc_operands.exit
  %loc.addr.022 = phi %struct.dw_loc_descr_struct* [ %24, %output_loc_operands.exit ], [ %loc, %entry ]
  %dw_loc_opc = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 1
  %0 = load i32* %dw_loc_opc, align 4, !tbaa !18
  %conv = zext i32 %0 to i64
  switch i32 %0, label %sw.default.i [
    i32 3, label %dwarf_stack_op_name.exit
    i32 6, label %sw.bb1.i
    i32 8, label %sw.bb2.i
    i32 9, label %sw.bb3.i
    i32 10, label %sw.bb4.i
    i32 11, label %sw.bb5.i
    i32 12, label %sw.bb6.i
    i32 13, label %sw.bb7.i
    i32 14, label %sw.bb8.i
    i32 15, label %sw.bb9.i
    i32 16, label %sw.bb10.i
    i32 17, label %sw.bb11.i
    i32 18, label %sw.bb12.i
    i32 19, label %sw.bb13.i
    i32 20, label %sw.bb14.i
    i32 21, label %sw.bb15.i
    i32 22, label %sw.bb16.i
    i32 23, label %sw.bb17.i
    i32 24, label %sw.bb18.i
    i32 25, label %sw.bb19.i
    i32 26, label %sw.bb20.i
    i32 27, label %sw.bb21.i
    i32 28, label %sw.bb22.i
    i32 29, label %sw.bb23.i
    i32 30, label %sw.bb24.i
    i32 31, label %sw.bb25.i
    i32 32, label %sw.bb26.i
    i32 33, label %sw.bb27.i
    i32 34, label %sw.bb28.i
    i32 35, label %sw.bb29.i
    i32 36, label %sw.bb30.i
    i32 37, label %sw.bb31.i
    i32 38, label %sw.bb32.i
    i32 39, label %sw.bb33.i
    i32 40, label %sw.bb34.i
    i32 41, label %sw.bb35.i
    i32 42, label %sw.bb36.i
    i32 43, label %sw.bb37.i
    i32 44, label %sw.bb38.i
    i32 45, label %sw.bb39.i
    i32 46, label %sw.bb40.i
    i32 47, label %sw.bb41.i
    i32 48, label %sw.bb42.i
    i32 49, label %sw.bb43.i
    i32 50, label %sw.bb44.i
    i32 51, label %sw.bb45.i
    i32 52, label %sw.bb46.i
    i32 53, label %sw.bb47.i
    i32 54, label %sw.bb48.i
    i32 55, label %sw.bb49.i
    i32 56, label %sw.bb50.i
    i32 57, label %sw.bb51.i
    i32 58, label %sw.bb52.i
    i32 59, label %sw.bb53.i
    i32 60, label %sw.bb54.i
    i32 61, label %sw.bb55.i
    i32 62, label %sw.bb56.i
    i32 63, label %sw.bb57.i
    i32 64, label %sw.bb58.i
    i32 65, label %sw.bb59.i
    i32 66, label %sw.bb60.i
    i32 67, label %sw.bb61.i
    i32 68, label %sw.bb62.i
    i32 69, label %sw.bb63.i
    i32 70, label %sw.bb64.i
    i32 71, label %sw.bb65.i
    i32 72, label %sw.bb66.i
    i32 73, label %sw.bb67.i
    i32 74, label %sw.bb68.i
    i32 75, label %sw.bb69.i
    i32 76, label %sw.bb70.i
    i32 77, label %sw.bb71.i
    i32 78, label %sw.bb72.i
    i32 79, label %sw.bb73.i
    i32 80, label %sw.bb74.i
    i32 81, label %sw.bb75.i
    i32 82, label %sw.bb76.i
    i32 83, label %sw.bb77.i
    i32 84, label %sw.bb78.i
    i32 85, label %sw.bb79.i
    i32 86, label %sw.bb80.i
    i32 87, label %sw.bb81.i
    i32 88, label %sw.bb82.i
    i32 89, label %sw.bb83.i
    i32 90, label %sw.bb84.i
    i32 91, label %sw.bb85.i
    i32 92, label %sw.bb86.i
    i32 93, label %sw.bb87.i
    i32 94, label %sw.bb88.i
    i32 95, label %sw.bb89.i
    i32 96, label %sw.bb90.i
    i32 97, label %sw.bb91.i
    i32 98, label %sw.bb92.i
    i32 99, label %sw.bb93.i
    i32 100, label %sw.bb94.i
    i32 101, label %sw.bb95.i
    i32 102, label %sw.bb96.i
    i32 103, label %sw.bb97.i
    i32 104, label %sw.bb98.i
    i32 105, label %sw.bb99.i
    i32 106, label %sw.bb100.i
    i32 107, label %sw.bb101.i
    i32 108, label %sw.bb102.i
    i32 109, label %sw.bb103.i
    i32 110, label %sw.bb104.i
    i32 111, label %sw.bb105.i
    i32 112, label %sw.bb106.i
    i32 113, label %sw.bb107.i
    i32 114, label %sw.bb108.i
    i32 115, label %sw.bb109.i
    i32 116, label %sw.bb110.i
    i32 117, label %sw.bb111.i
    i32 118, label %sw.bb112.i
    i32 119, label %sw.bb113.i
    i32 120, label %sw.bb114.i
    i32 121, label %sw.bb115.i
    i32 122, label %sw.bb116.i
    i32 123, label %sw.bb117.i
    i32 124, label %sw.bb118.i
    i32 125, label %sw.bb119.i
    i32 126, label %sw.bb120.i
    i32 127, label %sw.bb121.i
    i32 128, label %sw.bb122.i
    i32 129, label %sw.bb123.i
    i32 130, label %sw.bb124.i
    i32 131, label %sw.bb125.i
    i32 132, label %sw.bb126.i
    i32 133, label %sw.bb127.i
    i32 134, label %sw.bb128.i
    i32 135, label %sw.bb129.i
    i32 136, label %sw.bb130.i
    i32 137, label %sw.bb131.i
    i32 138, label %sw.bb132.i
    i32 139, label %sw.bb133.i
    i32 140, label %sw.bb134.i
    i32 141, label %sw.bb135.i
    i32 142, label %sw.bb136.i
    i32 143, label %sw.bb137.i
    i32 144, label %sw.bb138.i
    i32 145, label %sw.bb139.i
    i32 146, label %sw.bb140.i
    i32 147, label %sw.bb141.i
    i32 148, label %sw.bb142.i
    i32 149, label %sw.bb143.i
    i32 150, label %sw.bb144.i
  ]

sw.bb1.i:                                         ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb2.i:                                         ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb3.i:                                         ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb4.i:                                         ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb5.i:                                         ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb6.i:                                         ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb7.i:                                         ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb8.i:                                         ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb9.i:                                         ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb10.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb11.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb12.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb13.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb14.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb15.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb16.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb17.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb18.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb19.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb20.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb21.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb22.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb23.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb24.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb25.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb26.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb27.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb28.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb29.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb30.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb31.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb32.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb33.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb34.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb35.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb36.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb37.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb38.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb39.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb40.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb41.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb42.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb43.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb44.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb45.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb46.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb47.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb48.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb49.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb50.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb51.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb52.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb53.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb54.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb55.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb56.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb57.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb58.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb59.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb60.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb61.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb62.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb63.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb64.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb65.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb66.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb67.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb68.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb69.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb70.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb71.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb72.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb73.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb74.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb75.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb76.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb77.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb78.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb79.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb80.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb81.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb82.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb83.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb84.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb85.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb86.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb87.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb88.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb89.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb90.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb91.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb92.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb93.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb94.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb95.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb96.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb97.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb98.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb99.i:                                        ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb100.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb101.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb102.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb103.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb104.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb105.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb106.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb107.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb108.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb109.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb110.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb111.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb112.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb113.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb114.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb115.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb116.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb117.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb118.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb119.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb120.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb121.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb122.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb123.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb124.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb125.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb126.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb127.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb128.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb129.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb130.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb131.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb132.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb133.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb134.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb135.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb136.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb137.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb138.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb139.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb140.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb141.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb142.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb143.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.bb144.i:                                       ; preds = %for.body
  br label %dwarf_stack_op_name.exit

sw.default.i:                                     ; preds = %for.body
  br label %dwarf_stack_op_name.exit

dwarf_stack_op_name.exit:                         ; preds = %for.body, %sw.bb1.i, %sw.bb2.i, %sw.bb3.i, %sw.bb4.i, %sw.bb5.i, %sw.bb6.i, %sw.bb7.i, %sw.bb8.i, %sw.bb9.i, %sw.bb10.i, %sw.bb11.i, %sw.bb12.i, %sw.bb13.i, %sw.bb14.i, %sw.bb15.i, %sw.bb16.i, %sw.bb17.i, %sw.bb18.i, %sw.bb19.i, %sw.bb20.i, %sw.bb21.i, %sw.bb22.i, %sw.bb23.i, %sw.bb24.i, %sw.bb25.i, %sw.bb26.i, %sw.bb27.i, %sw.bb28.i, %sw.bb29.i, %sw.bb30.i, %sw.bb31.i, %sw.bb32.i, %sw.bb33.i, %sw.bb34.i, %sw.bb35.i, %sw.bb36.i, %sw.bb37.i, %sw.bb38.i, %sw.bb39.i, %sw.bb40.i, %sw.bb41.i, %sw.bb42.i, %sw.bb43.i, %sw.bb44.i, %sw.bb45.i, %sw.bb46.i, %sw.bb47.i, %sw.bb48.i, %sw.bb49.i, %sw.bb50.i, %sw.bb51.i, %sw.bb52.i, %sw.bb53.i, %sw.bb54.i, %sw.bb55.i, %sw.bb56.i, %sw.bb57.i, %sw.bb58.i, %sw.bb59.i, %sw.bb60.i, %sw.bb61.i, %sw.bb62.i, %sw.bb63.i, %sw.bb64.i, %sw.bb65.i, %sw.bb66.i, %sw.bb67.i, %sw.bb68.i, %sw.bb69.i, %sw.bb70.i, %sw.bb71.i, %sw.bb72.i, %sw.bb73.i, %sw.bb74.i, %sw.bb75.i, %sw.bb76.i, %sw.bb77.i, %sw.bb78.i, %sw.bb79.i, %sw.bb80.i, %sw.bb81.i, %sw.bb82.i, %sw.bb83.i, %sw.bb84.i, %sw.bb85.i, %sw.bb86.i, %sw.bb87.i, %sw.bb88.i, %sw.bb89.i, %sw.bb90.i, %sw.bb91.i, %sw.bb92.i, %sw.bb93.i, %sw.bb94.i, %sw.bb95.i, %sw.bb96.i, %sw.bb97.i, %sw.bb98.i, %sw.bb99.i, %sw.bb100.i, %sw.bb101.i, %sw.bb102.i, %sw.bb103.i, %sw.bb104.i, %sw.bb105.i, %sw.bb106.i, %sw.bb107.i, %sw.bb108.i, %sw.bb109.i, %sw.bb110.i, %sw.bb111.i, %sw.bb112.i, %sw.bb113.i, %sw.bb114.i, %sw.bb115.i, %sw.bb116.i, %sw.bb117.i, %sw.bb118.i, %sw.bb119.i, %sw.bb120.i, %sw.bb121.i, %sw.bb122.i, %sw.bb123.i, %sw.bb124.i, %sw.bb125.i, %sw.bb126.i, %sw.bb127.i, %sw.bb128.i, %sw.bb129.i, %sw.bb130.i, %sw.bb131.i, %sw.bb132.i, %sw.bb133.i, %sw.bb134.i, %sw.bb135.i, %sw.bb136.i, %sw.bb137.i, %sw.bb138.i, %sw.bb139.i, %sw.bb140.i, %sw.bb141.i, %sw.bb142.i, %sw.bb143.i, %sw.bb144.i, %sw.default.i
  %retval.0.i = phi i8* [ getelementptr inbounds ([13 x i8]* @.str365, i64 0, i64 0), %sw.default.i ], [ getelementptr inbounds ([10 x i8]* @.str364, i64 0, i64 0), %sw.bb144.i ], [ getelementptr inbounds ([18 x i8]* @.str363, i64 0, i64 0), %sw.bb143.i ], [ getelementptr inbounds ([17 x i8]* @.str362, i64 0, i64 0), %sw.bb142.i ], [ getelementptr inbounds ([12 x i8]* @.str361, i64 0, i64 0), %sw.bb141.i ], [ getelementptr inbounds ([12 x i8]* @.str360, i64 0, i64 0), %sw.bb140.i ], [ getelementptr inbounds ([12 x i8]* @.str359, i64 0, i64 0), %sw.bb139.i ], [ getelementptr inbounds ([11 x i8]* @.str358, i64 0, i64 0), %sw.bb138.i ], [ getelementptr inbounds ([13 x i8]* @.str357, i64 0, i64 0), %sw.bb137.i ], [ getelementptr inbounds ([13 x i8]* @.str356, i64 0, i64 0), %sw.bb136.i ], [ getelementptr inbounds ([13 x i8]* @.str355, i64 0, i64 0), %sw.bb135.i ], [ getelementptr inbounds ([13 x i8]* @.str354, i64 0, i64 0), %sw.bb134.i ], [ getelementptr inbounds ([13 x i8]* @.str353, i64 0, i64 0), %sw.bb133.i ], [ getelementptr inbounds ([13 x i8]* @.str352, i64 0, i64 0), %sw.bb132.i ], [ getelementptr inbounds ([13 x i8]* @.str351, i64 0, i64 0), %sw.bb131.i ], [ getelementptr inbounds ([13 x i8]* @.str350, i64 0, i64 0), %sw.bb130.i ], [ getelementptr inbounds ([13 x i8]* @.str349, i64 0, i64 0), %sw.bb129.i ], [ getelementptr inbounds ([13 x i8]* @.str348, i64 0, i64 0), %sw.bb128.i ], [ getelementptr inbounds ([13 x i8]* @.str347, i64 0, i64 0), %sw.bb127.i ], [ getelementptr inbounds ([13 x i8]* @.str346, i64 0, i64 0), %sw.bb126.i ], [ getelementptr inbounds ([13 x i8]* @.str345, i64 0, i64 0), %sw.bb125.i ], [ getelementptr inbounds ([13 x i8]* @.str344, i64 0, i64 0), %sw.bb124.i ], [ getelementptr inbounds ([13 x i8]* @.str343, i64 0, i64 0), %sw.bb123.i ], [ getelementptr inbounds ([13 x i8]* @.str342, i64 0, i64 0), %sw.bb122.i ], [ getelementptr inbounds ([13 x i8]* @.str341, i64 0, i64 0), %sw.bb121.i ], [ getelementptr inbounds ([13 x i8]* @.str340, i64 0, i64 0), %sw.bb120.i ], [ getelementptr inbounds ([13 x i8]* @.str339, i64 0, i64 0), %sw.bb119.i ], [ getelementptr inbounds ([13 x i8]* @.str338, i64 0, i64 0), %sw.bb118.i ], [ getelementptr inbounds ([13 x i8]* @.str337, i64 0, i64 0), %sw.bb117.i ], [ getelementptr inbounds ([13 x i8]* @.str336, i64 0, i64 0), %sw.bb116.i ], [ getelementptr inbounds ([12 x i8]* @.str335, i64 0, i64 0), %sw.bb115.i ], [ getelementptr inbounds ([12 x i8]* @.str334, i64 0, i64 0), %sw.bb114.i ], [ getelementptr inbounds ([12 x i8]* @.str333, i64 0, i64 0), %sw.bb113.i ], [ getelementptr inbounds ([12 x i8]* @.str332, i64 0, i64 0), %sw.bb112.i ], [ getelementptr inbounds ([12 x i8]* @.str331, i64 0, i64 0), %sw.bb111.i ], [ getelementptr inbounds ([12 x i8]* @.str330, i64 0, i64 0), %sw.bb110.i ], [ getelementptr inbounds ([12 x i8]* @.str329, i64 0, i64 0), %sw.bb109.i ], [ getelementptr inbounds ([12 x i8]* @.str328, i64 0, i64 0), %sw.bb108.i ], [ getelementptr inbounds ([12 x i8]* @.str327, i64 0, i64 0), %sw.bb107.i ], [ getelementptr inbounds ([12 x i8]* @.str326, i64 0, i64 0), %sw.bb106.i ], [ getelementptr inbounds ([12 x i8]* @.str325, i64 0, i64 0), %sw.bb105.i ], [ getelementptr inbounds ([12 x i8]* @.str324, i64 0, i64 0), %sw.bb104.i ], [ getelementptr inbounds ([12 x i8]* @.str323, i64 0, i64 0), %sw.bb103.i ], [ getelementptr inbounds ([12 x i8]* @.str322, i64 0, i64 0), %sw.bb102.i ], [ getelementptr inbounds ([12 x i8]* @.str321, i64 0, i64 0), %sw.bb101.i ], [ getelementptr inbounds ([12 x i8]* @.str320, i64 0, i64 0), %sw.bb100.i ], [ getelementptr inbounds ([12 x i8]* @.str319, i64 0, i64 0), %sw.bb99.i ], [ getelementptr inbounds ([12 x i8]* @.str318, i64 0, i64 0), %sw.bb98.i ], [ getelementptr inbounds ([12 x i8]* @.str317, i64 0, i64 0), %sw.bb97.i ], [ getelementptr inbounds ([12 x i8]* @.str316, i64 0, i64 0), %sw.bb96.i ], [ getelementptr inbounds ([12 x i8]* @.str315, i64 0, i64 0), %sw.bb95.i ], [ getelementptr inbounds ([12 x i8]* @.str314, i64 0, i64 0), %sw.bb94.i ], [ getelementptr inbounds ([12 x i8]* @.str313, i64 0, i64 0), %sw.bb93.i ], [ getelementptr inbounds ([12 x i8]* @.str312, i64 0, i64 0), %sw.bb92.i ], [ getelementptr inbounds ([12 x i8]* @.str311, i64 0, i64 0), %sw.bb91.i ], [ getelementptr inbounds ([12 x i8]* @.str310, i64 0, i64 0), %sw.bb90.i ], [ getelementptr inbounds ([12 x i8]* @.str309, i64 0, i64 0), %sw.bb89.i ], [ getelementptr inbounds ([12 x i8]* @.str308, i64 0, i64 0), %sw.bb88.i ], [ getelementptr inbounds ([12 x i8]* @.str307, i64 0, i64 0), %sw.bb87.i ], [ getelementptr inbounds ([12 x i8]* @.str306, i64 0, i64 0), %sw.bb86.i ], [ getelementptr inbounds ([12 x i8]* @.str305, i64 0, i64 0), %sw.bb85.i ], [ getelementptr inbounds ([12 x i8]* @.str304, i64 0, i64 0), %sw.bb84.i ], [ getelementptr inbounds ([11 x i8]* @.str303, i64 0, i64 0), %sw.bb83.i ], [ getelementptr inbounds ([11 x i8]* @.str302, i64 0, i64 0), %sw.bb82.i ], [ getelementptr inbounds ([11 x i8]* @.str301, i64 0, i64 0), %sw.bb81.i ], [ getelementptr inbounds ([11 x i8]* @.str300, i64 0, i64 0), %sw.bb80.i ], [ getelementptr inbounds ([11 x i8]* @.str299, i64 0, i64 0), %sw.bb79.i ], [ getelementptr inbounds ([11 x i8]* @.str298, i64 0, i64 0), %sw.bb78.i ], [ getelementptr inbounds ([11 x i8]* @.str297, i64 0, i64 0), %sw.bb77.i ], [ getelementptr inbounds ([11 x i8]* @.str296, i64 0, i64 0), %sw.bb76.i ], [ getelementptr inbounds ([11 x i8]* @.str295, i64 0, i64 0), %sw.bb75.i ], [ getelementptr inbounds ([11 x i8]* @.str294, i64 0, i64 0), %sw.bb74.i ], [ getelementptr inbounds ([12 x i8]* @.str293, i64 0, i64 0), %sw.bb73.i ], [ getelementptr inbounds ([12 x i8]* @.str292, i64 0, i64 0), %sw.bb72.i ], [ getelementptr inbounds ([12 x i8]* @.str291, i64 0, i64 0), %sw.bb71.i ], [ getelementptr inbounds ([12 x i8]* @.str290, i64 0, i64 0), %sw.bb70.i ], [ getelementptr inbounds ([12 x i8]* @.str289, i64 0, i64 0), %sw.bb69.i ], [ getelementptr inbounds ([12 x i8]* @.str288, i64 0, i64 0), %sw.bb68.i ], [ getelementptr inbounds ([12 x i8]* @.str287, i64 0, i64 0), %sw.bb67.i ], [ getelementptr inbounds ([12 x i8]* @.str286, i64 0, i64 0), %sw.bb66.i ], [ getelementptr inbounds ([12 x i8]* @.str285, i64 0, i64 0), %sw.bb65.i ], [ getelementptr inbounds ([12 x i8]* @.str284, i64 0, i64 0), %sw.bb64.i ], [ getelementptr inbounds ([12 x i8]* @.str283, i64 0, i64 0), %sw.bb63.i ], [ getelementptr inbounds ([12 x i8]* @.str282, i64 0, i64 0), %sw.bb62.i ], [ getelementptr inbounds ([12 x i8]* @.str281, i64 0, i64 0), %sw.bb61.i ], [ getelementptr inbounds ([12 x i8]* @.str280, i64 0, i64 0), %sw.bb60.i ], [ getelementptr inbounds ([12 x i8]* @.str279, i64 0, i64 0), %sw.bb59.i ], [ getelementptr inbounds ([12 x i8]* @.str278, i64 0, i64 0), %sw.bb58.i ], [ getelementptr inbounds ([12 x i8]* @.str277, i64 0, i64 0), %sw.bb57.i ], [ getelementptr inbounds ([12 x i8]* @.str276, i64 0, i64 0), %sw.bb56.i ], [ getelementptr inbounds ([12 x i8]* @.str275, i64 0, i64 0), %sw.bb55.i ], [ getelementptr inbounds ([12 x i8]* @.str274, i64 0, i64 0), %sw.bb54.i ], [ getelementptr inbounds ([12 x i8]* @.str273, i64 0, i64 0), %sw.bb53.i ], [ getelementptr inbounds ([12 x i8]* @.str272, i64 0, i64 0), %sw.bb52.i ], [ getelementptr inbounds ([11 x i8]* @.str271, i64 0, i64 0), %sw.bb51.i ], [ getelementptr inbounds ([11 x i8]* @.str270, i64 0, i64 0), %sw.bb50.i ], [ getelementptr inbounds ([11 x i8]* @.str269, i64 0, i64 0), %sw.bb49.i ], [ getelementptr inbounds ([11 x i8]* @.str268, i64 0, i64 0), %sw.bb48.i ], [ getelementptr inbounds ([11 x i8]* @.str267, i64 0, i64 0), %sw.bb47.i ], [ getelementptr inbounds ([11 x i8]* @.str266, i64 0, i64 0), %sw.bb46.i ], [ getelementptr inbounds ([11 x i8]* @.str265, i64 0, i64 0), %sw.bb45.i ], [ getelementptr inbounds ([11 x i8]* @.str264, i64 0, i64 0), %sw.bb44.i ], [ getelementptr inbounds ([11 x i8]* @.str263, i64 0, i64 0), %sw.bb43.i ], [ getelementptr inbounds ([11 x i8]* @.str262, i64 0, i64 0), %sw.bb42.i ], [ getelementptr inbounds ([11 x i8]* @.str261, i64 0, i64 0), %sw.bb41.i ], [ getelementptr inbounds ([9 x i8]* @.str260, i64 0, i64 0), %sw.bb40.i ], [ getelementptr inbounds ([9 x i8]* @.str259, i64 0, i64 0), %sw.bb39.i ], [ getelementptr inbounds ([9 x i8]* @.str258, i64 0, i64 0), %sw.bb38.i ], [ getelementptr inbounds ([9 x i8]* @.str257, i64 0, i64 0), %sw.bb37.i ], [ getelementptr inbounds ([9 x i8]* @.str256, i64 0, i64 0), %sw.bb36.i ], [ getelementptr inbounds ([9 x i8]* @.str255, i64 0, i64 0), %sw.bb35.i ], [ getelementptr inbounds ([10 x i8]* @.str254, i64 0, i64 0), %sw.bb34.i ], [ getelementptr inbounds ([10 x i8]* @.str253, i64 0, i64 0), %sw.bb33.i ], [ getelementptr inbounds ([11 x i8]* @.str252, i64 0, i64 0), %sw.bb32.i ], [ getelementptr inbounds ([10 x i8]* @.str251, i64 0, i64 0), %sw.bb31.i ], [ getelementptr inbounds ([10 x i8]* @.str250, i64 0, i64 0), %sw.bb30.i ], [ getelementptr inbounds ([18 x i8]* @.str249, i64 0, i64 0), %sw.bb29.i ], [ getelementptr inbounds ([11 x i8]* @.str248, i64 0, i64 0), %sw.bb28.i ], [ getelementptr inbounds ([9 x i8]* @.str247, i64 0, i64 0), %sw.bb27.i ], [ getelementptr inbounds ([10 x i8]* @.str246, i64 0, i64 0), %sw.bb26.i ], [ getelementptr inbounds ([10 x i8]* @.str245, i64 0, i64 0), %sw.bb25.i ], [ getelementptr inbounds ([10 x i8]* @.str244, i64 0, i64 0), %sw.bb24.i ], [ getelementptr inbounds ([10 x i8]* @.str243, i64 0, i64 0), %sw.bb23.i ], [ getelementptr inbounds ([12 x i8]* @.str242, i64 0, i64 0), %sw.bb22.i ], [ getelementptr inbounds ([10 x i8]* @.str241, i64 0, i64 0), %sw.bb21.i ], [ getelementptr inbounds ([10 x i8]* @.str240, i64 0, i64 0), %sw.bb20.i ], [ getelementptr inbounds ([10 x i8]* @.str239, i64 0, i64 0), %sw.bb19.i ], [ getelementptr inbounds ([13 x i8]* @.str238, i64 0, i64 0), %sw.bb18.i ], [ getelementptr inbounds ([10 x i8]* @.str237, i64 0, i64 0), %sw.bb17.i ], [ getelementptr inbounds ([11 x i8]* @.str236, i64 0, i64 0), %sw.bb16.i ], [ getelementptr inbounds ([11 x i8]* @.str235, i64 0, i64 0), %sw.bb15.i ], [ getelementptr inbounds ([11 x i8]* @.str234, i64 0, i64 0), %sw.bb14.i ], [ getelementptr inbounds ([11 x i8]* @.str233, i64 0, i64 0), %sw.bb13.i ], [ getelementptr inbounds ([10 x i8]* @.str232, i64 0, i64 0), %sw.bb12.i ], [ getelementptr inbounds ([13 x i8]* @.str231, i64 0, i64 0), %sw.bb11.i ], [ getelementptr inbounds ([13 x i8]* @.str230, i64 0, i64 0), %sw.bb10.i ], [ getelementptr inbounds ([14 x i8]* @.str229, i64 0, i64 0), %sw.bb9.i ], [ getelementptr inbounds ([14 x i8]* @.str228, i64 0, i64 0), %sw.bb8.i ], [ getelementptr inbounds ([14 x i8]* @.str227, i64 0, i64 0), %sw.bb7.i ], [ getelementptr inbounds ([14 x i8]* @.str226, i64 0, i64 0), %sw.bb6.i ], [ getelementptr inbounds ([14 x i8]* @.str225, i64 0, i64 0), %sw.bb5.i ], [ getelementptr inbounds ([14 x i8]* @.str224, i64 0, i64 0), %sw.bb4.i ], [ getelementptr inbounds ([14 x i8]* @.str223, i64 0, i64 0), %sw.bb3.i ], [ getelementptr inbounds ([14 x i8]* @.str222, i64 0, i64 0), %sw.bb2.i ], [ getelementptr inbounds ([12 x i8]* @.str221, i64 0, i64 0), %sw.bb1.i ], [ getelementptr inbounds ([11 x i8]* @.str220, i64 0, i64 0), %for.body ]
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i) #5
  %1 = load i32* %dw_loc_opc, align 4, !tbaa !18
  switch i32 %1, label %output_loc_operands.exit [
    i32 3, label %sw.bb.i
    i32 10, label %sw.bb1.i6
    i32 11, label %sw.bb1.i6
    i32 12, label %sw.bb3.i7
    i32 13, label %sw.bb3.i7
    i32 14, label %sw.bb6.i8
    i32 15, label %sw.bb6.i8
    i32 47, label %sw.bb7.i9
    i32 40, label %sw.bb7.i9
    i32 8, label %sw.bb10.i10
    i32 9, label %sw.bb10.i10
    i32 16, label %sw.bb13.i11
    i32 17, label %sw.bb15.i12
    i32 21, label %sw.bb18.i13
    i32 35, label %sw.bb21.i14
    i32 112, label %sw.bb24.i15
    i32 113, label %sw.bb24.i15
    i32 114, label %sw.bb24.i15
    i32 115, label %sw.bb24.i15
    i32 116, label %sw.bb24.i15
    i32 117, label %sw.bb24.i15
    i32 118, label %sw.bb24.i15
    i32 119, label %sw.bb24.i15
    i32 120, label %sw.bb24.i15
    i32 121, label %sw.bb24.i15
    i32 122, label %sw.bb24.i15
    i32 123, label %sw.bb24.i15
    i32 124, label %sw.bb24.i15
    i32 125, label %sw.bb24.i15
    i32 126, label %sw.bb24.i15
    i32 127, label %sw.bb24.i15
    i32 128, label %sw.bb24.i15
    i32 129, label %sw.bb24.i15
    i32 130, label %sw.bb24.i15
    i32 131, label %sw.bb24.i15
    i32 132, label %sw.bb24.i15
    i32 133, label %sw.bb24.i15
    i32 134, label %sw.bb24.i15
    i32 135, label %sw.bb24.i15
    i32 136, label %sw.bb24.i15
    i32 137, label %sw.bb24.i15
    i32 138, label %sw.bb24.i15
    i32 139, label %sw.bb24.i15
    i32 140, label %sw.bb24.i15
    i32 141, label %sw.bb24.i15
    i32 142, label %sw.bb24.i15
    i32 143, label %sw.bb24.i15
    i32 144, label %sw.bb27.i16
    i32 145, label %sw.bb30.i17
    i32 146, label %sw.bb33.i18
    i32 147, label %sw.bb38.i19
    i32 148, label %sw.bb41.i20
    i32 149, label %sw.bb41.i20
  ]

sw.bb.i:                                          ; preds = %dwarf_stack_op_name.exit
  %2 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %2, 20
  %3 = and i32 %and.i, 32
  %4 = add i32 %3, 32
  %div.i = sdiv i32 %4, 8
  %v.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1
  %val_addr.i = bitcast %union.anon.3* %v.i to %struct.rtx_def**
  %5 = load %struct.rtx_def** %val_addr.i, align 8, !tbaa !6
  tail call void (i32, %struct.rtx_def*, i8*, ...)* @dw2_asm_output_addr_rtx(i32 %div.i, %struct.rtx_def* %5, i8* null) #5
  br label %output_loc_operands.exit

sw.bb1.i6:                                        ; preds = %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit
  %val_int.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %6 = load i64* %val_int.i, align 8, !tbaa !8
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 2, i64 %6, i8* null) #5
  br label %output_loc_operands.exit

sw.bb3.i7:                                        ; preds = %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit
  %val_int5.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %7 = load i64* %val_int5.i, align 8, !tbaa !8
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 4, i64 %7, i8* null) #5
  br label %output_loc_operands.exit

sw.bb6.i8:                                        ; preds = %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 2778, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.output_loc_operands, i64 0, i64 0)) #7
  unreachable

sw.bb7.i9:                                        ; preds = %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit
  %val_class.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 0
  %8 = load i32* %val_class.i, align 4, !tbaa !120
  %cmp.i = icmp eq i32 %8, 2
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb7.i9
  %v8.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1
  %val_loc.i = bitcast %union.anon.3* %v8.i to %struct.dw_loc_descr_struct**
  %9 = load %struct.dw_loc_descr_struct** %val_loc.i, align 8, !tbaa !6
  %dw_loc_addr.i = getelementptr inbounds %struct.dw_loc_descr_struct* %9, i64 0, i32 4
  %10 = load i32* %dw_loc_addr.i, align 4, !tbaa !116
  %dw_loc_addr9.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 4
  %11 = load i32* %dw_loc_addr9.i, align 4, !tbaa !116
  %add.neg.i = add i32 %10, -3
  %sub.i = sub i32 %add.neg.i, %11
  %conv.i = sext i32 %sub.i to i64
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 2, i64 %conv.i, i8* null) #5
  br label %output_loc_operands.exit

if.else.i:                                        ; preds = %sw.bb7.i9
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 2789, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.output_loc_operands, i64 0, i64 0)) #7
  unreachable

sw.bb10.i10:                                      ; preds = %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit
  %val_int12.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %12 = load i64* %val_int12.i, align 8, !tbaa !8
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %12, i8* null) #5
  br label %output_loc_operands.exit

sw.bb13.i11:                                      ; preds = %dwarf_stack_op_name.exit
  %val_unsigned.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %13 = load i64* %val_unsigned.i, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %13, i8* null) #5
  br label %output_loc_operands.exit

sw.bb15.i12:                                      ; preds = %dwarf_stack_op_name.exit
  %val_int17.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i64* %val_int17.i, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_sleb128(i64 %14, i8* null) #5
  br label %output_loc_operands.exit

sw.bb18.i13:                                      ; preds = %dwarf_stack_op_name.exit
  %val_int20.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %15 = load i64* %val_int20.i, align 8, !tbaa !8
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %15, i8* null) #5
  br label %output_loc_operands.exit

sw.bb21.i14:                                      ; preds = %dwarf_stack_op_name.exit
  %val_unsigned23.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %16 = load i64* %val_unsigned23.i, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %16, i8* null) #5
  br label %output_loc_operands.exit

sw.bb24.i15:                                      ; preds = %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit
  %val_int26.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %17 = load i64* %val_int26.i, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_sleb128(i64 %17, i8* null) #5
  br label %output_loc_operands.exit

sw.bb27.i16:                                      ; preds = %dwarf_stack_op_name.exit
  %val_unsigned29.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %18 = load i64* %val_unsigned29.i, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %18, i8* null) #5
  br label %output_loc_operands.exit

sw.bb30.i17:                                      ; preds = %dwarf_stack_op_name.exit
  %val_int32.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %19 = load i64* %val_int32.i, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_sleb128(i64 %19, i8* null) #5
  br label %output_loc_operands.exit

sw.bb33.i18:                                      ; preds = %dwarf_stack_op_name.exit
  %val_unsigned35.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %20 = load i64* %val_unsigned35.i, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %20, i8* null) #5
  %val_int37.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 3, i32 1, i32 0, i32 0
  %21 = load i64* %val_int37.i, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_sleb128(i64 %21, i8* null) #5
  br label %output_loc_operands.exit

sw.bb38.i19:                                      ; preds = %dwarf_stack_op_name.exit
  %val_unsigned40.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %22 = load i64* %val_unsigned40.i, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %22, i8* null) #5
  br label %output_loc_operands.exit

sw.bb41.i20:                                      ; preds = %dwarf_stack_op_name.exit, %dwarf_stack_op_name.exit
  %val_int43.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 2, i32 1, i32 0, i32 0
  %23 = load i64* %val_int43.i, align 8, !tbaa !8
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %23, i8* null) #5
  br label %output_loc_operands.exit

output_loc_operands.exit:                         ; preds = %dwarf_stack_op_name.exit, %sw.bb.i, %sw.bb1.i6, %sw.bb3.i7, %if.then.i, %sw.bb10.i10, %sw.bb13.i11, %sw.bb15.i12, %sw.bb18.i13, %sw.bb21.i14, %sw.bb24.i15, %sw.bb27.i16, %sw.bb30.i17, %sw.bb33.i18, %sw.bb38.i19, %sw.bb41.i20
  %dw_loc_next = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.addr.022, i64 0, i32 0
  %24 = load %struct.dw_loc_descr_struct** %dw_loc_next, align 8, !tbaa !21
  %cmp = icmp eq %struct.dw_loc_descr_struct* %24, null
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %output_loc_operands.exit, %entry
  ret void
}

declare void @dw2_asm_output_data_sleb128(i64, i8*, ...) #2

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #6

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

declare noalias i8* @xmalloc(i64) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #6

; Function Attrs: nounwind uwtable
define internal fastcc void @assign_symbol_names(%struct.die_struct* %die) #1 {
entry:
  %buf.i = alloca [256 x i8], align 16
  %c.idx.i = getelementptr %struct.die_struct* %die, i64 0, i32 0
  %c.idx.val.i = load i32* %c.idx.i, align 4, !tbaa !69
  switch i32 %c.idx.val.i, label %tailrecurse.i10.i [
    i32 1, label %if.then
    i32 2, label %if.then
    i32 4, label %if.then
    i32 15, label %if.then
    i32 16, label %if.then
    i32 18, label %if.then
    i32 19, label %if.then
    i32 21, label %if.then
    i32 23, label %if.then
    i32 31, label %if.then
    i32 32, label %if.then
    i32 33, label %if.then
    i32 36, label %if.then
    i32 38, label %if.then
    i32 41, label %if.then
    i32 45, label %if.then
    i32 53, label %if.then
  ]

tailrecurse.i10.i:                                ; preds = %entry, %for.end.i35.i
  %die.tr.i8.i = phi %struct.die_struct* [ %spec.1.i29.i, %for.end.i35.i ], [ %die, %entry ]
  %cmp.i9.i = icmp eq %struct.die_struct* %die.tr.i8.i, null
  br i1 %cmp.i9.i, label %if.end8, label %if.then.i14.i

if.then.i14.i:                                    ; preds = %tailrecurse.i10.i
  %die_attr.i11.i = getelementptr inbounds %struct.die_struct* %die.tr.i8.i, i64 0, i32 2
  %a.027.i12.i = load %struct.dw_attr_struct** %die_attr.i11.i, align 8
  %cmp128.i13.i = icmp eq %struct.dw_attr_struct* %a.027.i12.i, null
  br i1 %cmp128.i13.i, label %if.end8, label %for.body.i19.i

for.body.i19.i:                                   ; preds = %if.then.i14.i, %for.inc.i33.i
  %a.030.i15.i = phi %struct.dw_attr_struct* [ %a.0.i31.i, %for.inc.i33.i ], [ %a.027.i12.i, %if.then.i14.i ]
  %spec.029.i16.i = phi %struct.die_struct* [ %spec.1.i29.i, %for.inc.i33.i ], [ null, %if.then.i14.i ]
  %dw_attr.i17.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i15.i, i64 0, i32 0
  %0 = load i32* %dw_attr.i17.i, align 4, !tbaa !57
  switch i32 %0, label %for.inc.i33.i [
    i32 60, label %tailrecurse.i.i
    i32 71, label %land.lhs.true.i.i24.i
    i32 49, label %land.lhs.true.i.i24.i
  ]

land.lhs.true.i.i24.i:                            ; preds = %for.body.i19.i, %for.body.i19.i
  %a.idx.i.i21.i = getelementptr %struct.dw_attr_struct* %a.030.i15.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i22.i = load i32* %a.idx.i.i21.i, align 4, !tbaa !59
  %cmp.i.i23.i = icmp eq i32 %a.idx.val.i.i22.i, 10
  br i1 %cmp.i.i23.i, label %AT_ref.exit.i28.i, label %if.end.i.i25.i

if.end.i.i25.i:                                   ; preds = %land.lhs.true.i.i24.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i28.i:                                ; preds = %land.lhs.true.i.i24.i
  %v.i.i26.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i15.i, i64 0, i32 2, i32 1
  %die.i.i27.i = bitcast %union.anon.3* %v.i.i26.i to %struct.die_struct**
  %1 = load %struct.die_struct** %die.i.i27.i, align 8, !tbaa !60
  br label %for.inc.i33.i

for.inc.i33.i:                                    ; preds = %AT_ref.exit.i28.i, %for.body.i19.i
  %spec.1.i29.i = phi %struct.die_struct* [ %1, %AT_ref.exit.i28.i ], [ %spec.029.i16.i, %for.body.i19.i ]
  %dw_attr_next.i30.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i15.i, i64 0, i32 1
  %a.0.i31.i = load %struct.dw_attr_struct** %dw_attr_next.i30.i, align 8
  %cmp1.i32.i = icmp eq %struct.dw_attr_struct* %a.0.i31.i, null
  br i1 %cmp1.i32.i, label %for.end.i35.i, label %for.body.i19.i

for.end.i35.i:                                    ; preds = %for.inc.i33.i
  %tobool.i34.i = icmp eq %struct.die_struct* %spec.1.i29.i, null
  br i1 %tobool.i34.i, label %if.end8, label %tailrecurse.i10.i

tailrecurse.i.i:                                  ; preds = %for.body.i19.i, %for.end.i.i
  %die.tr.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.end.i.i ], [ %die, %for.body.i19.i ]
  %cmp.i.i = icmp eq %struct.die_struct* %die.tr.i.i, null
  br i1 %cmp.i.i, label %if.then, label %if.then.i.i

if.then.i.i:                                      ; preds = %tailrecurse.i.i
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i, i64 0, i32 2
  %a.027.i.i = load %struct.dw_attr_struct** %die_attr.i.i, align 8
  %cmp128.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i, null
  br i1 %cmp128.i.i, label %if.then, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.then.i.i, %for.inc.i.i
  %a.030.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i, %for.inc.i.i ], [ %a.027.i.i, %if.then.i.i ]
  %spec.029.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.inc.i.i ], [ null, %if.then.i.i ]
  %dw_attr.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 0
  %2 = load i32* %dw_attr.i.i, align 4, !tbaa !57
  switch i32 %2, label %for.inc.i.i [
    i32 71, label %if.end8
    i32 49, label %land.lhs.true.i.i.i
  ]

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i = icmp eq i32 %a.idx.val.i.i.i, 10
  br i1 %cmp.i.i.i, label %AT_ref.exit.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i:                                  ; preds = %land.lhs.true.i.i.i
  %v.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i.i = bitcast %union.anon.3* %v.i.i.i to %struct.die_struct**
  %3 = load %struct.die_struct** %die.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %AT_ref.exit.i.i, %for.body.i.i
  %spec.1.i.i = phi %struct.die_struct* [ %3, %AT_ref.exit.i.i ], [ %spec.029.i.i, %for.body.i.i ]
  %dw_attr_next.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 1
  %a.0.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i, align 8
  %cmp1.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i, null
  br i1 %cmp1.i.i, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %tobool.i.i = icmp eq %struct.die_struct* %spec.1.i.i, null
  br i1 %tobool.i.i, label %if.then, label %tailrecurse.i.i

if.then:                                          ; preds = %for.end.i.i, %if.then.i.i, %tailrecurse.i.i, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %4 = load i8** @comdat_symbol_id, align 8, !tbaa !6
  %tobool1 = icmp eq i8* %4, null
  br i1 %tobool1, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  %call3 = call i64 @strlen(i8* %4) #5
  %add = add i64 %call3, 64
  %5 = alloca i8, i64 %add, align 1
  %6 = load i32* @comdat_symbol_number, align 4, !tbaa !4
  %inc = add i32 %6, 1
  store i32 %inc, i32* @comdat_symbol_number, align 4, !tbaa !4
  %call4 = call i32 (i8*, i8*, ...)* @sprintf(i8* %5, i8* getelementptr inbounds ([9 x i8]* @.str383, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str366, i64 0, i64 0), i8* %4, i32 %6) #5
  %call5 = call noalias i8* @xstrdup(i8* %5) #5
  %die_symbol = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 1
  store i8* %call5, i8** %die_symbol, align 8, !tbaa !101
  br label %if.end8

if.else:                                          ; preds = %if.then
  %7 = getelementptr inbounds [256 x i8]* %buf.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 256, i8* %7) #5
  %8 = load i32* @gen_internal_sym.label_num, align 4, !tbaa !4
  %inc.i = add nsw i32 %8, 1
  store i32 %inc.i, i32* @gen_internal_sym.label_num, align 4, !tbaa !4
  %call.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %7, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str384, i64 0, i64 0), i32 %8) #5
  %call2.i = call noalias i8* @xstrdup(i8* %7) #5
  call void @llvm.lifetime.end(i64 256, i8* %7) #5
  %die_symbol7 = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 1
  store i8* %call2.i, i8** %die_symbol7, align 8, !tbaa !101
  br label %if.end8

if.end8:                                          ; preds = %if.then.i14.i, %tailrecurse.i10.i, %for.end.i35.i, %for.body.i.i, %if.then2, %if.else
  %die_child = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %c.020 = load %struct.die_struct** %die_child, align 8
  %cmp21 = icmp eq %struct.die_struct* %c.020, null
  br i1 %cmp21, label %for.end, label %for.body

for.body:                                         ; preds = %if.end8, %for.body
  %c.022 = phi %struct.die_struct* [ %c.0, %for.body ], [ %c.020, %if.end8 ]
  call fastcc void @assign_symbol_names(%struct.die_struct* %c.022)
  %die_sib = getelementptr inbounds %struct.die_struct* %c.022, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib, align 8
  %cmp = icmp eq %struct.die_struct* %c.0, null
  br i1 %cmp, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end8
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_section_prefix(%struct.die_struct* %unit_die) #1 {
entry:
  %checksum = alloca [16 x i8], align 16
  %ctx = alloca %struct.md5_ctx, align 4
  br label %tailrecurse.i.i

tailrecurse.i.i:                                  ; preds = %for.end.i.i, %entry
  %die.tr.i.i = phi %struct.die_struct* [ %unit_die, %entry ], [ %spec.1.i.i, %for.end.i.i ]
  %cmp.i.i = icmp eq %struct.die_struct* %die.tr.i.i, null
  br i1 %cmp.i.i, label %get_AT_string.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %tailrecurse.i.i
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i, i64 0, i32 2
  %a.027.i.i = load %struct.dw_attr_struct** %die_attr.i.i, align 8
  %cmp128.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i, null
  br i1 %cmp128.i.i, label %get_AT_string.exit, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.then.i.i, %for.inc.i.i
  %a.030.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i, %for.inc.i.i ], [ %a.027.i.i, %if.then.i.i ]
  %spec.029.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.inc.i.i ], [ null, %if.then.i.i ]
  %dw_attr.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 0
  %0 = load i32* %dw_attr.i.i, align 4, !tbaa !57
  switch i32 %0, label %for.inc.i.i [
    i32 3, label %land.lhs.true.i.i
    i32 71, label %land.lhs.true.i.i.i
    i32 49, label %land.lhs.true.i.i.i
  ]

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i, %for.body.i.i
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i = icmp eq i32 %a.idx.val.i.i.i, 10
  br i1 %cmp.i.i.i, label %AT_ref.exit.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i:                                  ; preds = %land.lhs.true.i.i.i
  %v.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i.i = bitcast %union.anon.3* %v.i.i.i to %struct.die_struct**
  %1 = load %struct.die_struct** %die.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %AT_ref.exit.i.i, %for.body.i.i
  %spec.1.i.i = phi %struct.die_struct* [ %1, %AT_ref.exit.i.i ], [ %spec.029.i.i, %for.body.i.i ]
  %dw_attr_next.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 1
  %a.0.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i, align 8
  %cmp1.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i, null
  br i1 %cmp1.i.i, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %tobool.i.i = icmp eq %struct.die_struct* %spec.1.i.i, null
  br i1 %tobool.i.i, label %get_AT_string.exit, label %tailrecurse.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %a.idx.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i = load i32* %a.idx.i.i, align 4, !tbaa !59
  %cmp.i2.i = icmp eq i32 %a.idx.val.i.i, 14
  br i1 %cmp.i2.i, label %AT_string.exit.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4518, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.AT_string, i64 0, i64 0)) #7
  unreachable

AT_string.exit.i:                                 ; preds = %land.lhs.true.i.i
  %v.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %val_str.i.i = bitcast %union.anon.3* %v.i.i to %struct.indirect_string_node**
  %2 = load %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %str.i.i = getelementptr inbounds %struct.indirect_string_node* %2, i64 0, i32 0, i32 1
  %3 = load i8** %str.i.i, align 8, !tbaa !70
  br label %get_AT_string.exit

get_AT_string.exit:                               ; preds = %tailrecurse.i.i, %if.then.i.i, %for.end.i.i, %AT_string.exit.i
  %cond.i = phi i8* [ %3, %AT_string.exit.i ], [ null, %for.end.i.i ], [ null, %if.then.i.i ], [ null, %tailrecurse.i.i ]
  %call1 = call i8* @lbasename(i8* %cond.i) #5
  %call2 = call i64 @strlen(i8* %call1) #5
  %add = add i64 %call2, 64
  %4 = alloca i8, i64 %add, align 1
  %5 = bitcast %struct.md5_ctx* %ctx to i8*
  call void @llvm.lifetime.start(i64 156, i8* %5) #5
  call void @md5_init_ctx(%struct.md5_ctx* %ctx) #5
  call fastcc void @die_checksum(%struct.die_struct* %unit_die, %struct.md5_ctx* %ctx)
  %arraydecay = getelementptr inbounds [16 x i8]* %checksum, i64 0, i64 0
  %call3 = call i8* @md5_finish_ctx(%struct.md5_ctx* %ctx, i8* %arraydecay) #5
  %call4 = call i32 (i8*, i8*, ...)* @sprintf(i8* %4, i8* getelementptr inbounds ([4 x i8]* @.str381, i64 0, i64 0), i8* %call1) #5
  call void @clean_symbol_name(i8* %4) #5
  %call5 = call i64 @strlen(i8* %4) #5
  %add.ptr = getelementptr inbounds i8* %4, i64 %call5
  %6 = load i8* %arraydecay, align 16, !tbaa !1
  %conv = zext i8 %6 to i32
  %call6 = call i32 (i8*, i8*, ...)* @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8]* @.str382, i64 0, i64 0), i32 %conv) #5
  %add.ptr.sum = add i64 %call5, 2
  %add.ptr7 = getelementptr inbounds i8* %4, i64 %add.ptr.sum
  %arrayidx.1 = getelementptr inbounds [16 x i8]* %checksum, i64 0, i64 1
  %7 = load i8* %arrayidx.1, align 1, !tbaa !1
  %conv.1 = zext i8 %7 to i32
  %call6.1 = call i32 (i8*, i8*, ...)* @sprintf(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8]* @.str382, i64 0, i64 0), i32 %conv.1) #5
  %add.ptr7.sum = add i64 %call5, 4
  %add.ptr7.1 = getelementptr inbounds i8* %4, i64 %add.ptr7.sum
  %arrayidx.2 = getelementptr inbounds [16 x i8]* %checksum, i64 0, i64 2
  %8 = load i8* %arrayidx.2, align 2, !tbaa !1
  %conv.2 = zext i8 %8 to i32
  %call6.2 = call i32 (i8*, i8*, ...)* @sprintf(i8* %add.ptr7.1, i8* getelementptr inbounds ([5 x i8]* @.str382, i64 0, i64 0), i32 %conv.2) #5
  %add.ptr7.1.sum = add i64 %call5, 6
  %add.ptr7.2 = getelementptr inbounds i8* %4, i64 %add.ptr7.1.sum
  %arrayidx.3 = getelementptr inbounds [16 x i8]* %checksum, i64 0, i64 3
  %9 = load i8* %arrayidx.3, align 1, !tbaa !1
  %conv.3 = zext i8 %9 to i32
  %call6.3 = call i32 (i8*, i8*, ...)* @sprintf(i8* %add.ptr7.2, i8* getelementptr inbounds ([5 x i8]* @.str382, i64 0, i64 0), i32 %conv.3) #5
  %call8 = call noalias i8* @xstrdup(i8* %4) #5
  %die_symbol = getelementptr inbounds %struct.die_struct* %unit_die, i64 0, i32 1
  store i8* %call8, i8** %die_symbol, align 8, !tbaa !101
  store i8* %call8, i8** @comdat_symbol_id, align 8, !tbaa !6
  store i32 0, i32* @comdat_symbol_number, align 4, !tbaa !4
  call void @llvm.lifetime.end(i64 156, i8* %5) #5
  ret void
}

declare i8* @lbasename(i8*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

declare void @md5_init_ctx(%struct.md5_ctx*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @die_checksum(%struct.die_struct* %die, %struct.md5_ctx* %ctx) #1 {
entry:
  %0 = bitcast %struct.die_struct* %die to i8*
  tail call void @md5_process_bytes(i8* %0, i64 4, %struct.md5_ctx* %ctx) #5
  %die_attr = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %a.017 = load %struct.dw_attr_struct** %die_attr, align 8
  %tobool18 = icmp eq %struct.dw_attr_struct* %a.017, null
  br i1 %tobool18, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %attr_checksum.exit
  %a.019 = phi %struct.dw_attr_struct* [ %a.0, %attr_checksum.exit ], [ %a.017, %entry ]
  %dw_attr.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 0
  %1 = bitcast %struct.dw_attr_struct* %a.019 to i8*
  tail call void @md5_process_bytes(i8* %1, i64 4, %struct.md5_ctx* %ctx) #5
  %2 = load i32* %dw_attr.i, align 4, !tbaa !57
  switch i32 %2, label %if.end.i [
    i32 58, label %attr_checksum.exit
    i32 37, label %attr_checksum.exit
  ]

if.end.i:                                         ; preds = %for.body
  %at.idx.i = getelementptr %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 0
  %at.idx.val.i = load i32* %at.idx.i, align 4, !tbaa !59
  switch i32 %at.idx.val.i, label %attr_checksum.exit [
    i32 5, label %sw.bb.i
    i32 6, label %sw.bb4.i
    i32 7, label %sw.bb7.i
    i32 8, label %sw.bb10.i
    i32 9, label %sw.bb13.i
    i32 14, label %AT_string.exit87.i
    i32 0, label %AT_addr.exit.i
    i32 1, label %sw.bb27.i
    i32 2, label %AT_loc.exit.i
    i32 10, label %AT_ref.exit110.i
  ]

sw.bb.i:                                          ; preds = %if.end.i
  %val_int.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = bitcast i64* %val_int.i to i8*
  tail call void @md5_process_bytes(i8* %3, i64 8, %struct.md5_ctx* %ctx) #5
  br label %attr_checksum.exit

sw.bb4.i:                                         ; preds = %if.end.i
  %val_unsigned.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1, i32 0, i32 0
  %4 = bitcast i64* %val_unsigned.i to i8*
  tail call void @md5_process_bytes(i8* %4, i64 8, %struct.md5_ctx* %ctx) #5
  br label %attr_checksum.exit

sw.bb7.i:                                         ; preds = %if.end.i
  %val_long_long.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1, i32 0
  %5 = bitcast %struct.dw_long_long_struct* %val_long_long.i to i8*
  tail call void @md5_process_bytes(i8* %5, i64 16, %struct.md5_ctx* %ctx) #5
  br label %attr_checksum.exit

sw.bb10.i:                                        ; preds = %if.end.i
  %v12.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1
  %6 = bitcast %union.anon.3* %v12.i to i8*
  tail call void @md5_process_bytes(i8* %6, i64 16, %struct.md5_ctx* %ctx) #5
  br label %attr_checksum.exit

sw.bb13.i:                                        ; preds = %if.end.i
  %v15.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1
  %val_flag.i = bitcast %union.anon.3* %v15.i to i8*
  tail call void @md5_process_bytes(i8* %val_flag.i, i64 1, %struct.md5_ctx* %ctx) #5
  br label %attr_checksum.exit

AT_string.exit87.i:                               ; preds = %if.end.i
  %v.i76.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1
  %val_str.i.i = bitcast %union.anon.3* %v.i76.i to %struct.indirect_string_node**
  %7 = load %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %str.i.i = getelementptr inbounds %struct.indirect_string_node* %7, i64 0, i32 0, i32 1
  %8 = load i8** %str.i.i, align 8, !tbaa !70
  %call19.i = tail call i64 @strlen(i8* %8) #5
  tail call void @md5_process_bytes(i8* %8, i64 %call19.i, %struct.md5_ctx* %ctx) #5
  br label %attr_checksum.exit

AT_addr.exit.i:                                   ; preds = %if.end.i
  %v.i93.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1
  %val_addr.i.i = bitcast %union.anon.3* %v.i93.i to %struct.rtx_def**
  %9 = load %struct.rtx_def** %val_addr.i.i, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load.i = load i32* %10, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cond.i = icmp eq i32 %bf.clear.i, 68
  br i1 %cond.i, label %sw.bb22.i, label %sw.default.i

sw.bb22.i:                                        ; preds = %AT_addr.exit.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtstr.i = bitcast %union.rtunion_def* %arrayidx.i to i8**
  %11 = load i8** %rtstr.i, align 8, !tbaa !6
  %call26.i = tail call i64 @strlen(i8* %11) #5
  tail call void @md5_process_bytes(i8* %11, i64 %call26.i, %struct.md5_ctx* %ctx) #5
  br label %attr_checksum.exit

sw.default.i:                                     ; preds = %AT_addr.exit.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5453, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.attr_checksum, i64 0, i64 0)) #7
  unreachable

sw.bb27.i:                                        ; preds = %if.end.i
  %val_offset.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1, i32 0, i32 0
  %12 = bitcast i64* %val_offset.i to i8*
  tail call void @md5_process_bytes(i8* %12, i64 8, %struct.md5_ctx* %ctx) #5
  br label %attr_checksum.exit

AT_loc.exit.i:                                    ; preds = %if.end.i
  %v.i100.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1
  %val_loc.i.i = bitcast %union.anon.3* %v.i100.i to %struct.dw_loc_descr_struct**
  %loc.0111.i = load %struct.dw_loc_descr_struct** %val_loc.i.i, align 8
  %tobool112.i = icmp eq %struct.dw_loc_descr_struct* %loc.0111.i, null
  br i1 %tobool112.i, label %attr_checksum.exit, label %for.body.i

for.body.i:                                       ; preds = %AT_loc.exit.i, %for.body.i
  %loc.0113.i = phi %struct.dw_loc_descr_struct* [ %loc.0.i, %for.body.i ], [ %loc.0111.i, %AT_loc.exit.i ]
  %dw_loc_opc.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.0113.i, i64 0, i32 1
  %13 = bitcast i32* %dw_loc_opc.i.i to i8*
  tail call void @md5_process_bytes(i8* %13, i64 4, %struct.md5_ctx* %ctx) #5
  %dw_loc_oprnd1.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.0113.i, i64 0, i32 2
  %14 = bitcast %struct.dw_val_struct* %dw_loc_oprnd1.i.i to i8*
  tail call void @md5_process_bytes(i8* %14, i64 24, %struct.md5_ctx* %ctx) #5
  %dw_loc_oprnd2.i.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.0113.i, i64 0, i32 3
  %15 = bitcast %struct.dw_val_struct* %dw_loc_oprnd2.i.i to i8*
  tail call void @md5_process_bytes(i8* %15, i64 24, %struct.md5_ctx* %ctx) #5
  %dw_loc_next.i = getelementptr inbounds %struct.dw_loc_descr_struct* %loc.0113.i, i64 0, i32 0
  %loc.0.i = load %struct.dw_loc_descr_struct** %dw_loc_next.i, align 8
  %tobool.i = icmp eq %struct.dw_loc_descr_struct* %loc.0.i, null
  br i1 %tobool.i, label %attr_checksum.exit, label %for.body.i

AT_ref.exit110.i:                                 ; preds = %if.end.i
  %v.i107.i = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 2, i32 1
  %die.i108.i = bitcast %union.anon.3* %v.i107.i to %struct.die_struct**
  %16 = load %struct.die_struct** %die.i108.i, align 8, !tbaa !60
  %die_offset.i = getelementptr inbounds %struct.die_struct* %16, i64 0, i32 6
  %17 = load i64* %die_offset.i, align 8, !tbaa !78
  %tobool34.i = icmp eq i64 %17, 0
  br i1 %tobool34.i, label %attr_checksum.exit, label %AT_ref.exit.i

AT_ref.exit.i:                                    ; preds = %AT_ref.exit110.i
  %18 = bitcast i64* %die_offset.i to i8*
  tail call void @md5_process_bytes(i8* %18, i64 8, %struct.md5_ctx* %ctx) #5
  br label %attr_checksum.exit

attr_checksum.exit:                               ; preds = %for.body.i, %for.body, %for.body, %if.end.i, %sw.bb.i, %sw.bb4.i, %sw.bb7.i, %sw.bb10.i, %sw.bb13.i, %AT_string.exit87.i, %sw.bb22.i, %sw.bb27.i, %AT_loc.exit.i, %AT_ref.exit110.i, %AT_ref.exit.i
  %dw_attr_next = getelementptr inbounds %struct.dw_attr_struct* %a.019, i64 0, i32 1
  %a.0 = load %struct.dw_attr_struct** %dw_attr_next, align 8
  %tobool = icmp eq %struct.dw_attr_struct* %a.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %attr_checksum.exit, %entry
  %die_child = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %c.014 = load %struct.die_struct** %die_child, align 8
  %tobool215 = icmp eq %struct.die_struct* %c.014, null
  br i1 %tobool215, label %for.end5, label %for.body3

for.body3:                                        ; preds = %for.end, %for.body3
  %c.016 = phi %struct.die_struct* [ %c.0, %for.body3 ], [ %c.014, %for.end ]
  tail call fastcc void @die_checksum(%struct.die_struct* %c.016, %struct.md5_ctx* %ctx)
  %die_sib = getelementptr inbounds %struct.die_struct* %c.016, i64 0, i32 5
  %c.0 = load %struct.die_struct** %die_sib, align 8
  %tobool2 = icmp eq %struct.die_struct* %c.0, null
  br i1 %tobool2, label %for.end5, label %for.body3

for.end5:                                         ; preds = %for.body3, %for.end
  ret void
}

declare i8* @md5_finish_ctx(%struct.md5_ctx*, i8*) #2

declare void @clean_symbol_name(i8*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

declare void @md5_process_bytes(i8*, i64, %struct.md5_ctx*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @remove_children(%struct.die_struct* nocapture %die) #1 {
entry:
  %die_child = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 4
  %0 = load %struct.die_struct** %die_child, align 8, !tbaa !62
  store %struct.die_struct* null, %struct.die_struct** %die_child, align 8, !tbaa !62
  %cmp12 = icmp eq %struct.die_struct* %0, null
  br i1 %cmp12, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %for.end
  %child_die.013 = phi %struct.die_struct* [ %1, %for.end ], [ %0, %entry ]
  %die_sib = getelementptr inbounds %struct.die_struct* %child_die.013, i64 0, i32 5
  %1 = load %struct.die_struct** %die_sib, align 8, !tbaa !63
  %die_attr = getelementptr inbounds %struct.die_struct* %child_die.013, i64 0, i32 2
  %2 = load %struct.dw_attr_struct** %die_attr, align 8, !tbaa !73
  %cmp29 = icmp eq %struct.dw_attr_struct* %2, null
  br i1 %cmp29, label %for.end, label %for.body

for.body:                                         ; preds = %while.body, %free_AT.exit
  %a.010 = phi %struct.dw_attr_struct* [ %3, %free_AT.exit ], [ %2, %while.body ]
  %dw_attr_next = getelementptr inbounds %struct.dw_attr_struct* %a.010, i64 0, i32 1
  %3 = load %struct.dw_attr_struct** %dw_attr_next, align 8, !tbaa !72
  %a.idx.i = getelementptr %struct.dw_attr_struct* %a.010, i64 0, i32 2, i32 0
  %a.idx.val.i = load i32* %a.idx.i, align 4, !tbaa !59
  switch i32 %a.idx.val.i, label %free_AT.exit [
    i32 14, label %sw.bb.i
    i32 12, label %sw.bb5.i
    i32 13, label %sw.bb5.i
    i32 8, label %sw.bb8.i
  ]

sw.bb.i:                                          ; preds = %for.body
  %v.i = getelementptr inbounds %struct.dw_attr_struct* %a.010, i64 0, i32 2, i32 1
  %val_str.i = bitcast %union.anon.3* %v.i to %struct.indirect_string_node**
  %4 = load %struct.indirect_string_node** %val_str.i, align 8, !tbaa !6
  %refcount.i = getelementptr inbounds %struct.indirect_string_node* %4, i64 0, i32 1
  %5 = load i32* %refcount.i, align 4, !tbaa !84
  %tobool.i = icmp eq i32 %5, 0
  br i1 %tobool.i, label %free_AT.exit, label %if.then.i

if.then.i:                                        ; preds = %sw.bb.i
  %dec.i = add i32 %5, -1
  store i32 %dec.i, i32* %refcount.i, align 4, !tbaa !84
  br label %free_AT.exit

sw.bb5.i:                                         ; preds = %for.body, %for.body
  %v7.i = getelementptr inbounds %struct.dw_attr_struct* %a.010, i64 0, i32 2, i32 1
  %val_lbl_id.i = bitcast %union.anon.3* %v7.i to i8**
  %6 = load i8** %val_lbl_id.i, align 8, !tbaa !6
  tail call void @free(i8* %6) #5
  br label %free_AT.exit

sw.bb8.i:                                         ; preds = %for.body
  %v10.i = getelementptr inbounds %struct.dw_attr_struct* %a.010, i64 0, i32 2, i32 1
  %array.i = bitcast %union.anon.3* %v10.i to i64**
  %7 = load i64** %array.i, align 8, !tbaa !119
  %8 = bitcast i64* %7 to i8*
  tail call void @free(i8* %8) #5
  br label %free_AT.exit

free_AT.exit:                                     ; preds = %for.body, %sw.bb.i, %if.then.i, %sw.bb5.i, %sw.bb8.i
  %9 = bitcast %struct.dw_attr_struct* %a.010 to i8*
  tail call void @free(i8* %9) #5
  %cmp2 = icmp eq %struct.dw_attr_struct* %3, null
  br i1 %cmp2, label %for.end, label %for.body

for.end:                                          ; preds = %free_AT.exit, %while.body
  tail call fastcc void @remove_children(%struct.die_struct* %child_die.013) #5
  %10 = bitcast %struct.die_struct* %child_die.013 to i8*
  tail call void @free(i8* %10) #5
  %cmp = icmp eq %struct.die_struct* %1, null
  br i1 %cmp, label %while.end, label %while.body

while.end:                                        ; preds = %for.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.die_struct* @gen_compile_unit_die(i8* %filename) #1 {
entry:
  %producer = alloca [250 x i8], align 16
  %0 = getelementptr inbounds [250 x i8]* %producer, i64 0, i64 0
  call void @llvm.lifetime.start(i64 250, i8* %0) #5
  %call = call i8* @getpwd() #5
  %1 = load i8** getelementptr inbounds (%struct.lang_hooks* @lang_hooks, i64 0, i32 0), align 8, !tbaa !121
  %call.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %2 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 17, i32* %die_tag.i, align 4, !tbaa !69
  %call1.i = call noalias i8* @xmalloc(i64 24) #5
  %3 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %2, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %4 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %4, align 8, !tbaa !64
  %5 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %6 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %5, %struct.limbo_die_struct** %6, align 8, !tbaa !52
  store %struct.limbo_die_struct* %3, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %cmp.i = icmp eq i8* %filename, null
  br i1 %cmp.i, label %add_name_attribute.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %entry
  %7 = load i8* %filename, align 1, !tbaa !1
  %cmp1.i = icmp eq i8 %7, 0
  br i1 %cmp1.i, label %add_name_attribute.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %8 = load i8* (i8*)** @demangle_name_func, align 8, !tbaa !6
  %tobool.i = icmp eq i8* (i8*)* %8, null
  br i1 %tobool.i, label %if.end.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  %call.i50 = call i8* %8(i8* %filename) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i
  %name_string.addr.0.i = phi i8* [ %call.i50, %if.then3.i ], [ %filename, %if.then.i ]
  %call.i.i = call noalias i8* @xmalloc(i64 40) #5
  %9 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %10 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i.i = icmp eq %struct.ht* %10, null
  br i1 %tobool.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.end.i
  %call1.i.i = call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i.i, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i.i = getelementptr inbounds %struct.ht* %call1.i.i, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i.i, align 8, !tbaa !81
  %.pre.i.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.end.i
  %11 = phi %struct.ht* [ %10, %if.end.i ], [ %.pre.i.i, %if.then.i.i ]
  %call2.i.i = call i64 @strlen(i8* %name_string.addr.0.i) #5
  %conv.i.i = trunc i64 %call2.i.i to i32
  %call3.i.i = call %struct.ht_identifier* @ht_lookup(%struct.ht* %11, i8* %name_string.addr.0.i, i32 %conv.i.i, i32 1) #5
  %12 = bitcast %struct.ht_identifier* %call3.i.i to %struct.indirect_string_node*
  %13 = getelementptr inbounds %struct.ht_identifier* %call3.i.i, i64 1, i32 0
  %14 = load i32* %13, align 4, !tbaa !84
  %inc.i.i = add i32 %14, 1
  store i32 %inc.i.i, i32* %13, align 4, !tbaa !84
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %15 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %15, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i.i to i32*
  store i32 3, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 14, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_str.i.i = bitcast i8* %v.i.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %12, %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %cmp.i.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i.i = icmp ne i8* %call.i.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %add_name_attribute.exit

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i, i64 16
  %16 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %17 = load %struct.dw_attr_struct** %16, align 8, !tbaa !73
  store %struct.dw_attr_struct* %17, %struct.dw_attr_struct** %15, align 8, !tbaa !72
  store %struct.dw_attr_struct* %9, %struct.dw_attr_struct** %16, align 8, !tbaa !73
  br label %add_name_attribute.exit

add_name_attribute.exit:                          ; preds = %entry, %land.lhs.true.i, %if.end.i.i, %if.then.i.i.i
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %add_name_attribute.exit
  %18 = load i8* %filename, align 1, !tbaa !1
  %cmp2 = icmp eq i8 %18, 47
  br i1 %cmp2, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %call.i51 = call noalias i8* @xmalloc(i64 40) #5
  %19 = bitcast i8* %call.i51 to %struct.dw_attr_struct*
  %20 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i52 = icmp eq %struct.ht* %20, null
  br i1 %tobool.i52, label %if.then.i54, label %if.end.i55

if.then.i54:                                      ; preds = %if.then
  %call1.i53 = call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i53, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i = getelementptr inbounds %struct.ht* %call1.i53, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i, align 8, !tbaa !81
  %.pre.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i55

if.end.i55:                                       ; preds = %if.then.i54, %if.then
  %21 = phi %struct.ht* [ %20, %if.then ], [ %.pre.i, %if.then.i54 ]
  %call2.i = call i64 @strlen(i8* %call) #5
  %conv.i = trunc i64 %call2.i to i32
  %call3.i = call %struct.ht_identifier* @ht_lookup(%struct.ht* %21, i8* %call, i32 %conv.i, i32 1) #5
  %22 = bitcast %struct.ht_identifier* %call3.i to %struct.indirect_string_node*
  %23 = getelementptr inbounds %struct.ht_identifier* %call3.i, i64 1, i32 0
  %24 = load i32* %23, align 4, !tbaa !84
  %inc.i = add i32 %24, 1
  store i32 %inc.i, i32* %23, align 4, !tbaa !84
  %dw_attr_next.i = getelementptr inbounds i8* %call.i51, i64 8
  %25 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %25, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i51 to i32*
  store i32 27, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i51, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 14, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i51, i64 24
  %val_str.i = bitcast i8* %v.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %22, %struct.indirect_string_node** %val_str.i, align 8, !tbaa !6
  %cmp.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i = icmp ne i8* %call.i51, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %if.then.i.i56, label %if.end

if.then.i.i56:                                    ; preds = %if.end.i55
  %die_attr.i.i = getelementptr inbounds i8* %call.i, i64 16
  %26 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %27 = load %struct.dw_attr_struct** %26, align 8, !tbaa !73
  store %struct.dw_attr_struct* %27, %struct.dw_attr_struct** %25, align 8, !tbaa !72
  store %struct.dw_attr_struct* %19, %struct.dw_attr_struct** %26, align 8, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.then.i.i56, %if.end.i55, %land.lhs.true, %add_name_attribute.exit
  %28 = load i8** @version_string, align 8, !tbaa !6
  %call4 = call i32 (i8*, i8*, ...)* @sprintf(i8* %0, i8* getelementptr inbounds ([6 x i8]* @.str385, i64 0, i64 0), i8* %1, i8* %28) #5
  %call.i57 = call noalias i8* @xmalloc(i64 40) #5
  %29 = bitcast i8* %call.i57 to %struct.dw_attr_struct*
  %30 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i58 = icmp eq %struct.ht* %30, null
  br i1 %tobool.i58, label %if.then.i62, label %if.end.i76

if.then.i62:                                      ; preds = %if.end
  %call1.i59 = call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i59, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i60 = getelementptr inbounds %struct.ht* %call1.i59, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i60, align 8, !tbaa !81
  %.pre.i61 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i76

if.end.i76:                                       ; preds = %if.then.i62, %if.end
  %31 = phi %struct.ht* [ %30, %if.end ], [ %.pre.i61, %if.then.i62 ]
  %call2.i63 = call i64 @strlen(i8* %0) #5
  %conv.i64 = trunc i64 %call2.i63 to i32
  %call3.i65 = call %struct.ht_identifier* @ht_lookup(%struct.ht* %31, i8* %0, i32 %conv.i64, i32 1) #5
  %32 = bitcast %struct.ht_identifier* %call3.i65 to %struct.indirect_string_node*
  %33 = getelementptr inbounds %struct.ht_identifier* %call3.i65, i64 1, i32 0
  %34 = load i32* %33, align 4, !tbaa !84
  %inc.i66 = add i32 %34, 1
  store i32 %inc.i66, i32* %33, align 4, !tbaa !84
  %dw_attr_next.i67 = getelementptr inbounds i8* %call.i57, i64 8
  %35 = bitcast i8* %dw_attr_next.i67 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %35, align 8, !tbaa !72
  %dw_attr.i68 = bitcast i8* %call.i57 to i32*
  store i32 37, i32* %dw_attr.i68, align 4, !tbaa !57
  %dw_attr_val.i69 = getelementptr inbounds i8* %call.i57, i64 16
  %val_class.i70 = bitcast i8* %dw_attr_val.i69 to i32*
  store i32 14, i32* %val_class.i70, align 4, !tbaa !59
  %v.i71 = getelementptr inbounds i8* %call.i57, i64 24
  %val_str.i72 = bitcast i8* %v.i71 to %struct.indirect_string_node**
  store %struct.indirect_string_node* %32, %struct.indirect_string_node** %val_str.i72, align 8, !tbaa !6
  %cmp.i.i73 = icmp ne i8* %call.i, null
  %cmp1.i.i74 = icmp ne i8* %call.i57, null
  %or.cond.i.i75 = and i1 %cmp.i.i73, %cmp1.i.i74
  br i1 %or.cond.i.i75, label %if.then.i.i78, label %add_AT_string.exit79

if.then.i.i78:                                    ; preds = %if.end.i76
  %die_attr.i.i77 = getelementptr inbounds i8* %call.i, i64 16
  %36 = bitcast i8* %die_attr.i.i77 to %struct.dw_attr_struct**
  %37 = load %struct.dw_attr_struct** %36, align 8, !tbaa !73
  store %struct.dw_attr_struct* %37, %struct.dw_attr_struct** %35, align 8, !tbaa !72
  store %struct.dw_attr_struct* %29, %struct.dw_attr_struct** %36, align 8, !tbaa !73
  br label %add_AT_string.exit79

add_AT_string.exit79:                             ; preds = %if.end.i76, %if.then.i.i78
  %call6 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8]* @.str386, i64 0, i64 0)) #5
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.end37, label %if.else

if.else:                                          ; preds = %add_AT_string.exit79
  %call10 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8]* @.str387, i64 0, i64 0)) #5
  %cmp11 = icmp eq i32 %call10, 0
  br i1 %cmp11, label %if.end37, label %if.else14

if.else14:                                        ; preds = %if.else
  %call15 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8]* @.str388, i64 0, i64 0)) #5
  %cmp16 = icmp eq i32 %call15, 0
  br i1 %cmp16, label %if.end37, label %if.else19

if.else19:                                        ; preds = %if.else14
  %call20 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([11 x i8]* @.str389, i64 0, i64 0)) #5
  %cmp21 = icmp eq i32 %call20, 0
  br i1 %cmp21, label %if.end37, label %if.else24

if.else24:                                        ; preds = %if.else19
  %call25 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([9 x i8]* @.str390, i64 0, i64 0)) #5
  %cmp26 = icmp eq i32 %call25, 0
  br i1 %cmp26, label %if.end37, label %if.else29

if.else29:                                        ; preds = %if.else24
  %38 = load i32* @flag_traditional, align 4, !tbaa !4
  %tobool = icmp eq i32 %38, 0
  %. = select i1 %tobool, i64 1, i64 2
  br label %if.end37

if.end37:                                         ; preds = %if.else29, %if.else24, %if.else19, %if.else14, %if.else, %add_AT_string.exit79
  %language.0 = phi i64 [ 4, %add_AT_string.exit79 ], [ 3, %if.else ], [ 7, %if.else14 ], [ 9, %if.else19 ], [ 11, %if.else24 ], [ %., %if.else29 ]
  %call.i80 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i81 = getelementptr inbounds i8* %call.i80, i64 8
  %39 = bitcast i8* %dw_attr_next.i81 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %39, align 8, !tbaa !72
  %dw_attr.i82 = bitcast i8* %call.i80 to i32*
  store i32 19, i32* %dw_attr.i82, align 4, !tbaa !57
  %dw_attr_val.i83 = getelementptr inbounds i8* %call.i80, i64 16
  %val_class.i84 = bitcast i8* %dw_attr_val.i83 to i32*
  store i32 6, i32* %val_class.i84, align 4, !tbaa !59
  %v.i85 = getelementptr inbounds i8* %call.i80, i64 24
  %val_unsigned.i = bitcast i8* %v.i85 to i64*
  store i64 %language.0, i64* %val_unsigned.i, align 8, !tbaa !8
  %cmp1.i.i87 = icmp ne i8* %call.i80, null
  %or.cond.i.i88 = and i1 %cmp.i.i73, %cmp1.i.i87
  br i1 %or.cond.i.i88, label %if.then.i.i90, label %add_AT_unsigned.exit

if.then.i.i90:                                    ; preds = %if.end37
  %40 = bitcast i8* %call.i80 to %struct.dw_attr_struct*
  %die_attr.i.i89 = getelementptr inbounds i8* %call.i, i64 16
  %41 = bitcast i8* %die_attr.i.i89 to %struct.dw_attr_struct**
  %42 = load %struct.dw_attr_struct** %41, align 8, !tbaa !73
  store %struct.dw_attr_struct* %42, %struct.dw_attr_struct** %39, align 8, !tbaa !72
  store %struct.dw_attr_struct* %40, %struct.dw_attr_struct** %41, align 8, !tbaa !73
  br label %add_AT_unsigned.exit

add_AT_unsigned.exit:                             ; preds = %if.end37, %if.then.i.i90
  call void @llvm.lifetime.end(i64 250, i8* %0) #5
  ret %struct.die_struct* %2
}

declare i8* @getpwd() #2

declare %struct.ht* @ht_create(i32) #2

; Function Attrs: nounwind uwtable
define internal noalias %struct.ht_identifier* @indirect_string_alloc(%struct.ht* nocapture readnone %tab) #1 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 32) #5
  %refcount = getelementptr inbounds i8* %call, i64 16
  %0 = bitcast i8* %call to %struct.ht_identifier*
  call void @llvm.memset.p0i8.i64(i8* %refcount, i8 0, i64 16, i32 4, i1 false)
  ret %struct.ht_identifier* %0
}

declare %struct.ht_identifier* @ht_lookup(%struct.ht*, i8*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_type_die(%union.tree_node* readonly %type, %struct.die_struct* %context_die) #1 {
entry:
  %cmp = icmp eq %union.tree_node* %type, null
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp1 = icmp eq %union.tree_node* %0, %type
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  %type.idx = getelementptr %union.tree_node* %type, i64 0, i32 0, i32 15
  %type.idx.val = load %union.tree_node** %type.idx, align 8, !tbaa !107
  %code.i = getelementptr inbounds %union.tree_node* %type.idx.val, i64 0, i32 0, i32 0, i32 2
  %bf.load.i239 = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i239, 255
  %cmp.i240 = icmp eq i32 %bf.clear.i, 18
  br i1 %cmp.i240, label %while.cond.i, label %type_main_variant.exit

while.cond.i:                                     ; preds = %if.end, %while.cond.i
  %type.addr.0.i = phi %union.tree_node* [ %2, %while.cond.i ], [ %type.idx.val, %if.end ]
  %1 = getelementptr inbounds %union.tree_node* %type.addr.0.i, i64 0, i32 0, i32 15
  %2 = load %union.tree_node** %1, align 8, !tbaa !107
  %cmp4.i = icmp eq %union.tree_node* %type.addr.0.i, %2
  br i1 %cmp4.i, label %type_main_variant.exit.loopexit, label %while.cond.i

type_main_variant.exit.loopexit:                  ; preds = %while.cond.i
  %asm_written_flag.phi.trans.insert = getelementptr inbounds %union.tree_node* %type.addr.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.pre = load i32* %asm_written_flag.phi.trans.insert, align 8
  br label %type_main_variant.exit

type_main_variant.exit:                           ; preds = %type_main_variant.exit.loopexit, %if.end
  %bf.load30 = phi i32 [ %bf.load.i239, %if.end ], [ %bf.load.pre, %type_main_variant.exit.loopexit ]
  %type.addr.1.i = phi %union.tree_node* [ %type.idx.val, %if.end ], [ %type.addr.0.i, %type_main_variant.exit.loopexit ]
  %asm_written_flag = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 2
  %bf.clear = and i32 %bf.load30, 16384
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end3, label %return

if.end3:                                          ; preds = %type_main_variant.exit
  %type4 = bitcast %union.tree_node* %type.addr.1.i to %struct.tree_type*
  %3 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 11
  %4 = load %union.tree_node** %3, align 8, !tbaa !102
  %tobool5 = icmp eq %union.tree_node* %4, null
  br i1 %tobool5, label %if.end23, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end3
  %code = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load9 = load i32* %code, align 8
  %bf.clear10 = and i32 %bf.load9, 255
  %cmp11 = icmp eq i32 %bf.clear10, 33
  br i1 %cmp11, label %land.lhs.true12, label %if.end23

land.lhs.true12:                                  ; preds = %land.lhs.true
  %result = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 11
  %5 = load %union.tree_node** %result, align 8, !tbaa !104
  %tobool15 = icmp eq %union.tree_node* %5, null
  br i1 %tobool15, label %if.end23, label %if.then16

if.then16:                                        ; preds = %land.lhs.true12
  %bf.set = or i32 %bf.load30, 16384
  store i32 %bf.set, i32* %asm_written_flag, align 8
  tail call fastcc void @gen_decl_die(%union.tree_node* %4, %struct.die_struct* %context_die)
  br label %return

if.end23:                                         ; preds = %land.lhs.true12, %if.end3, %land.lhs.true
  %bf.clear27 = and i32 %bf.load30, 255
  switch i32 %bf.clear27, label %sw.default [
    i32 0, label %sw.epilog
    i32 13, label %sw.bb
    i32 15, label %sw.bb
    i32 14, label %sw.bb35
    i32 19, label %sw.bb39
    i32 17, label %sw.bb41
    i32 23, label %sw.bb44
    i32 16, label %sw.bb47
    i32 18, label %sw.bb50
    i32 9, label %sw.bb68
    i32 10, label %sw.bb69
    i32 20, label %sw.bb69
    i32 21, label %sw.bb69
    i32 22, label %sw.bb69
    i32 5, label %sw.epilog
    i32 6, label %sw.epilog
    i32 7, label %sw.epilog
    i32 8, label %sw.epilog
    i32 11, label %sw.epilog
    i32 12, label %sw.epilog
    i32 24, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.end23, %if.end23
  %bf.set32 = or i32 %bf.load30, 16384
  store i32 %bf.set32, i32* %asm_written_flag, align 8
  %type34 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type34, align 8, !tbaa !87
  tail call fastcc void @gen_type_die(%union.tree_node* %6, %struct.die_struct* %context_die)
  br label %sw.epilog

sw.bb35:                                          ; preds = %if.end23
  %7 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 13
  %8 = load %union.tree_node** %7, align 8, !tbaa !125
  tail call fastcc void @gen_type_die(%union.tree_node* %8, %struct.die_struct* %context_die)
  %type38 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 1
  %9 = load %union.tree_node** %type38, align 8, !tbaa !87
  tail call fastcc void @gen_type_die(%union.tree_node* %9, %struct.die_struct* %context_die)
  %call.i241 = tail call fastcc %struct.die_struct* @scope_die_for(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die) #5
  %call.i.i242 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %10 = bitcast i8* %call.i.i242 to %struct.die_struct*
  %die_tag.i.i243 = bitcast i8* %call.i.i242 to i32*
  store i32 31, i32* %die_tag.i.i243, align 4, !tbaa !69
  %cmp.i.i244 = icmp eq %struct.die_struct* %call.i241, null
  br i1 %cmp.i.i244, label %if.else.i.i258, label %if.then.i.i246

if.then.i.i246:                                   ; preds = %sw.bb35
  %cmp1.i.i.i245 = icmp eq i8* %call.i.i242, null
  br i1 %cmp1.i.i.i245, label %new_die.exit.i268, label %if.then.i.i.i248

if.then.i.i.i248:                                 ; preds = %if.then.i.i246
  %cmp2.i.i.i247 = icmp eq %struct.die_struct* %10, %call.i241
  br i1 %cmp2.i.i.i247, label %if.then3.i.i.i249, label %if.end.i.i.i253

if.then3.i.i.i249:                                ; preds = %if.then.i.i.i248
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i253:                                  ; preds = %if.then.i.i.i248
  %die_parent.i.i.i250 = getelementptr inbounds i8* %call.i.i242, i64 24
  %11 = bitcast i8* %die_parent.i.i.i250 to %struct.die_struct**
  store %struct.die_struct* %call.i241, %struct.die_struct** %11, align 8, !tbaa !55
  %die_child.i.i.i251 = getelementptr inbounds %struct.die_struct* %call.i241, i64 0, i32 4
  %12 = load %struct.die_struct** %die_child.i.i.i251, align 8, !tbaa !62
  %die_sib.i.i.i252 = getelementptr inbounds i8* %call.i.i242, i64 40
  %13 = bitcast i8* %die_sib.i.i.i252 to %struct.die_struct**
  store %struct.die_struct* %12, %struct.die_struct** %13, align 8, !tbaa !63
  store %struct.die_struct* %10, %struct.die_struct** %die_child.i.i.i251, align 8, !tbaa !62
  br label %new_die.exit.i268

if.else.i.i258:                                   ; preds = %sw.bb35
  %call1.i.i254 = tail call noalias i8* @xmalloc(i64 24) #5
  %14 = bitcast i8* %call1.i.i254 to %struct.limbo_die_struct*
  %die2.i.i255 = bitcast i8* %call1.i.i254 to %struct.die_struct**
  store %struct.die_struct* %10, %struct.die_struct** %die2.i.i255, align 8, !tbaa !54
  %created_for.i.i256 = getelementptr inbounds i8* %call1.i.i254, i64 8
  %15 = bitcast i8* %created_for.i.i256 to %union.tree_node**
  store %union.tree_node* %type.addr.1.i, %union.tree_node** %15, align 8, !tbaa !64
  %16 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i257 = getelementptr inbounds i8* %call1.i.i254, i64 16
  %17 = bitcast i8* %next.i.i257 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %16, %struct.limbo_die_struct** %17, align 8, !tbaa !52
  store %struct.limbo_die_struct* %14, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i268

new_die.exit.i268:                                ; preds = %if.else.i.i258, %if.end.i.i.i253, %if.then.i.i246
  %symtab.i.i259 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 10
  %.c.i.i260 = bitcast i8* %call.i.i242 to %union.tree_node*
  store %union.tree_node* %.c.i.i260, %union.tree_node** %symtab.i.i259, align 8, !tbaa !6
  %18 = load %union.tree_node** %7, align 8, !tbaa !125
  %.idx.i = getelementptr %union.tree_node* %18, i64 0, i32 0, i32 10
  %.idx.val.i = load %union.tree_node** %.idx.i, align 8
  %19 = bitcast %union.tree_node* %.idx.val.i to %struct.die_struct*
  %call.i12.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i261 = getelementptr inbounds i8* %call.i12.i, i64 8
  %20 = bitcast i8* %dw_attr_next.i.i261 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %20, align 8, !tbaa !72
  %dw_attr.i.i262 = bitcast i8* %call.i12.i to i32*
  store i32 29, i32* %dw_attr.i.i262, align 4, !tbaa !57
  %dw_attr_val.i.i263 = getelementptr inbounds i8* %call.i12.i, i64 16
  %val_class.i.i264 = bitcast i8* %dw_attr_val.i.i263 to i32*
  store i32 10, i32* %val_class.i.i264, align 4, !tbaa !59
  %v.i.i265 = getelementptr inbounds i8* %call.i12.i, i64 24
  %die2.i13.i = bitcast i8* %v.i.i265 to %struct.die_struct**
  store %struct.die_struct* %19, %struct.die_struct** %die2.i13.i, align 8, !tbaa !60
  %external.i.i = getelementptr inbounds i8* %call.i12.i, i64 32
  %21 = bitcast i8* %external.i.i to i32*
  store i32 0, i32* %21, align 4, !tbaa !108
  %cmp.i.i.i266 = icmp ne i8* %call.i.i242, null
  %cmp1.i.i14.i = icmp ne i8* %call.i12.i, null
  %or.cond.i.i.i267 = and i1 %cmp.i.i.i266, %cmp1.i.i14.i
  br i1 %or.cond.i.i.i267, label %if.then.i.i15.i, label %add_AT_die_ref.exit.i

if.then.i.i15.i:                                  ; preds = %new_die.exit.i268
  %22 = bitcast i8* %call.i12.i to %struct.dw_attr_struct*
  %die_attr.i.i.i269 = getelementptr inbounds i8* %call.i.i242, i64 16
  %23 = bitcast i8* %die_attr.i.i.i269 to %struct.dw_attr_struct**
  %24 = load %struct.dw_attr_struct** %23, align 8, !tbaa !73
  store %struct.dw_attr_struct* %24, %struct.dw_attr_struct** %20, align 8, !tbaa !72
  store %struct.dw_attr_struct* %22, %struct.dw_attr_struct** %23, align 8, !tbaa !73
  br label %add_AT_die_ref.exit.i

add_AT_die_ref.exit.i:                            ; preds = %if.then.i.i15.i, %new_die.exit.i268
  %25 = load %union.tree_node** %type38, align 8, !tbaa !87
  %code1.i.i = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i270 = load i32* %code1.i.i, align 8
  %bf.clear.i.i271 = and i32 %bf.load.i.i270, 255
  %26 = and i32 %bf.load.i.i270, 254
  %27 = icmp eq i32 %26, 6
  br i1 %27, label %land.lhs.true.i.i272, label %if.end.i.i273

land.lhs.true.i.i272:                             ; preds = %add_AT_die_ref.exit.i
  %type4.i.i = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 0, i32 1
  %28 = load %union.tree_node** %type4.i.i, align 8, !tbaa !87
  %cmp5.i.i = icmp eq %union.tree_node* %28, null
  br i1 %cmp5.i.i, label %if.end.i.i273, label %land.lhs.true6.i.i

land.lhs.true6.i.i:                               ; preds = %land.lhs.true.i.i272
  %29 = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 11
  %30 = load %union.tree_node** %29, align 8, !tbaa !102
  %cmp8.i.i = icmp eq %union.tree_node* %30, null
  br i1 %cmp8.i.i, label %if.then.i16.i, label %if.end.i.i273

if.then.i16.i:                                    ; preds = %land.lhs.true6.i.i
  %code12.i.i = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i.i = load i32* %code12.i.i, align 8
  %bf.clear14.i.i = and i32 %bf.load13.i.i, 255
  br label %if.end.i.i273

if.end.i.i273:                                    ; preds = %if.then.i16.i, %land.lhs.true6.i.i, %land.lhs.true.i.i272, %add_AT_die_ref.exit.i
  %bf.load21.i.i = phi i32 [ %bf.load13.i.i, %if.then.i16.i ], [ %bf.load.i.i270, %land.lhs.true6.i.i ], [ %bf.load.i.i270, %land.lhs.true.i.i272 ], [ %bf.load.i.i270, %add_AT_die_ref.exit.i ]
  %type.addr.0.i.i = phi %union.tree_node* [ %28, %if.then.i16.i ], [ %25, %land.lhs.true6.i.i ], [ %25, %land.lhs.true.i.i272 ], [ %25, %add_AT_die_ref.exit.i ]
  %code.0.i.i = phi i32 [ %bf.clear14.i.i, %if.then.i16.i ], [ %bf.clear.i.i271, %land.lhs.true6.i.i ], [ %bf.clear.i.i271, %land.lhs.true.i.i272 ], [ %bf.clear.i.i271, %add_AT_die_ref.exit.i ]
  switch i32 %code.0.i.i, label %if.end19.i.i [
    i32 5, label %sw.epilog
    i32 0, label %sw.epilog
  ]

if.end19.i.i:                                     ; preds = %if.end.i.i273
  %bf.clear22.i.i = lshr i32 %bf.load21.i.i, 12
  %bf.clear22.i.i.lobit = and i32 %bf.clear22.i.i, 1
  %bf.clear29.i.i = lshr i32 %bf.load21.i.i, 11
  %bf.clear29.i.i.lobit = and i32 %bf.clear29.i.i, 1
  %call.i17.i = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i.i, i32 %bf.clear22.i.i.lobit, i32 %bf.clear29.i.i.lobit, %struct.die_struct* %context_die) #5
  %cmp33.i.i = icmp eq %struct.die_struct* %call.i17.i, null
  br i1 %cmp33.i.i, label %sw.epilog, label %if.then34.i.i

if.then34.i.i:                                    ; preds = %if.end19.i.i
  %call.i.i.i274 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i.i275 = getelementptr inbounds i8* %call.i.i.i274, i64 8
  %31 = bitcast i8* %dw_attr_next.i.i.i275 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %31, align 8, !tbaa !72
  %dw_attr.i.i.i276 = bitcast i8* %call.i.i.i274 to i32*
  store i32 73, i32* %dw_attr.i.i.i276, align 4, !tbaa !57
  %dw_attr_val.i.i.i277 = getelementptr inbounds i8* %call.i.i.i274, i64 16
  %val_class.i.i.i278 = bitcast i8* %dw_attr_val.i.i.i277 to i32*
  store i32 10, i32* %val_class.i.i.i278, align 4, !tbaa !59
  %v.i.i.i279 = getelementptr inbounds i8* %call.i.i.i274, i64 24
  %die2.i.i.i = bitcast i8* %v.i.i.i279 to %struct.die_struct**
  store %struct.die_struct* %call.i17.i, %struct.die_struct** %die2.i.i.i, align 8, !tbaa !60
  %external.i.i.i = getelementptr inbounds i8* %call.i.i.i274, i64 32
  %32 = bitcast i8* %external.i.i.i to i32*
  store i32 0, i32* %32, align 4, !tbaa !108
  %cmp1.i.i.i.i281 = icmp ne i8* %call.i.i.i274, null
  %or.cond.i.i.i.i282 = and i1 %cmp.i.i.i266, %cmp1.i.i.i.i281
  br i1 %or.cond.i.i.i.i282, label %if.then.i.i.i.i284, label %sw.epilog

if.then.i.i.i.i284:                               ; preds = %if.then34.i.i
  %33 = bitcast i8* %call.i.i.i274 to %struct.dw_attr_struct*
  %die_attr.i.i.i.i283 = getelementptr inbounds i8* %call.i.i242, i64 16
  %34 = bitcast i8* %die_attr.i.i.i.i283 to %struct.dw_attr_struct**
  %35 = load %struct.dw_attr_struct** %34, align 8, !tbaa !73
  store %struct.dw_attr_struct* %35, %struct.dw_attr_struct** %31, align 8, !tbaa !72
  store %struct.dw_attr_struct* %33, %struct.dw_attr_struct** %34, align 8, !tbaa !73
  br label %sw.epilog

sw.bb39:                                          ; preds = %if.end23
  %values = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 1
  %36 = load i8** %values, align 8
  %37 = bitcast i8* %36 to %union.tree_node*
  tail call fastcc void @gen_type_die(%union.tree_node* %37, %struct.die_struct* %context_die)
  %call.i285 = tail call fastcc %struct.die_struct* @scope_die_for(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die) #5
  %call.i.i286 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %38 = bitcast i8* %call.i.i286 to %struct.die_struct*
  %die_tag.i.i287 = bitcast i8* %call.i.i286 to i32*
  store i32 32, i32* %die_tag.i.i287, align 4, !tbaa !69
  %cmp.i.i288 = icmp eq %struct.die_struct* %call.i285, null
  br i1 %cmp.i.i288, label %if.else.i.i302, label %if.then.i.i290

if.then.i.i290:                                   ; preds = %sw.bb39
  %cmp1.i.i.i289 = icmp eq i8* %call.i.i286, null
  br i1 %cmp1.i.i.i289, label %new_die.exit.i308, label %if.then.i.i.i292

if.then.i.i.i292:                                 ; preds = %if.then.i.i290
  %cmp2.i.i.i291 = icmp eq %struct.die_struct* %38, %call.i285
  br i1 %cmp2.i.i.i291, label %if.then3.i.i.i293, label %if.end.i.i.i297

if.then3.i.i.i293:                                ; preds = %if.then.i.i.i292
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i297:                                  ; preds = %if.then.i.i.i292
  %die_parent.i.i.i294 = getelementptr inbounds i8* %call.i.i286, i64 24
  %39 = bitcast i8* %die_parent.i.i.i294 to %struct.die_struct**
  store %struct.die_struct* %call.i285, %struct.die_struct** %39, align 8, !tbaa !55
  %die_child.i.i.i295 = getelementptr inbounds %struct.die_struct* %call.i285, i64 0, i32 4
  %40 = load %struct.die_struct** %die_child.i.i.i295, align 8, !tbaa !62
  %die_sib.i.i.i296 = getelementptr inbounds i8* %call.i.i286, i64 40
  %41 = bitcast i8* %die_sib.i.i.i296 to %struct.die_struct**
  store %struct.die_struct* %40, %struct.die_struct** %41, align 8, !tbaa !63
  store %struct.die_struct* %38, %struct.die_struct** %die_child.i.i.i295, align 8, !tbaa !62
  br label %new_die.exit.i308

if.else.i.i302:                                   ; preds = %sw.bb39
  %call1.i.i298 = tail call noalias i8* @xmalloc(i64 24) #5
  %42 = bitcast i8* %call1.i.i298 to %struct.limbo_die_struct*
  %die2.i.i299 = bitcast i8* %call1.i.i298 to %struct.die_struct**
  store %struct.die_struct* %38, %struct.die_struct** %die2.i.i299, align 8, !tbaa !54
  %created_for.i.i300 = getelementptr inbounds i8* %call1.i.i298, i64 8
  %43 = bitcast i8* %created_for.i.i300 to %union.tree_node**
  store %union.tree_node* %type.addr.1.i, %union.tree_node** %43, align 8, !tbaa !64
  %44 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i301 = getelementptr inbounds i8* %call1.i.i298, i64 16
  %45 = bitcast i8* %next.i.i301 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %44, %struct.limbo_die_struct** %45, align 8, !tbaa !52
  store %struct.limbo_die_struct* %42, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i308

new_die.exit.i308:                                ; preds = %if.else.i.i302, %if.end.i.i.i297, %if.then.i.i290
  %symtab.i.i303 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 10
  %.c.i.i304 = bitcast i8* %call.i.i286 to %union.tree_node*
  store %union.tree_node* %.c.i.i304, %union.tree_node** %symtab.i.i303, align 8, !tbaa !6
  %type2.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 1
  %46 = load %union.tree_node** %type2.i, align 8, !tbaa !87
  %code1.i.i305 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i306 = load i32* %code1.i.i305, align 8
  %bf.clear.i.i307 = and i32 %bf.load.i.i306, 255
  %47 = and i32 %bf.load.i.i306, 254
  %48 = icmp eq i32 %47, 6
  br i1 %48, label %land.lhs.true.i.i311, label %if.end.i.i319

land.lhs.true.i.i311:                             ; preds = %new_die.exit.i308
  %type4.i.i309 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 1
  %49 = load %union.tree_node** %type4.i.i309, align 8, !tbaa !87
  %cmp5.i.i310 = icmp eq %union.tree_node* %49, null
  br i1 %cmp5.i.i310, label %if.end.i.i319, label %land.lhs.true6.i.i313

land.lhs.true6.i.i313:                            ; preds = %land.lhs.true.i.i311
  %50 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 11
  %51 = load %union.tree_node** %50, align 8, !tbaa !102
  %cmp8.i.i312 = icmp eq %union.tree_node* %51, null
  br i1 %cmp8.i.i312, label %if.then.i8.i, label %if.end.i.i319

if.then.i8.i:                                     ; preds = %land.lhs.true6.i.i313
  %code12.i.i314 = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i.i315 = load i32* %code12.i.i314, align 8
  %bf.clear14.i.i316 = and i32 %bf.load13.i.i315, 255
  br label %if.end.i.i319

if.end.i.i319:                                    ; preds = %if.then.i8.i, %land.lhs.true6.i.i313, %land.lhs.true.i.i311, %new_die.exit.i308
  %bf.load21.i.i321 = phi i32 [ %bf.load13.i.i315, %if.then.i8.i ], [ %bf.load.i.i306, %land.lhs.true6.i.i313 ], [ %bf.load.i.i306, %land.lhs.true.i.i311 ], [ %bf.load.i.i306, %new_die.exit.i308 ]
  %type.addr.0.i.i317 = phi %union.tree_node* [ %49, %if.then.i8.i ], [ %46, %land.lhs.true6.i.i313 ], [ %46, %land.lhs.true.i.i311 ], [ %46, %new_die.exit.i308 ]
  %code.0.i.i318 = phi i32 [ %bf.clear14.i.i316, %if.then.i8.i ], [ %bf.clear.i.i307, %land.lhs.true6.i.i313 ], [ %bf.clear.i.i307, %land.lhs.true.i.i311 ], [ %bf.clear.i.i307, %new_die.exit.i308 ]
  switch i32 %code.0.i.i318, label %if.end19.i.i331 [
    i32 5, label %sw.epilog
    i32 0, label %sw.epilog
  ]

if.end19.i.i331:                                  ; preds = %if.end.i.i319
  %bf.clear22.i.i322 = lshr i32 %bf.load21.i.i321, 12
  %bf.clear22.i.i322.lobit = and i32 %bf.clear22.i.i322, 1
  %bf.clear29.i.i327 = lshr i32 %bf.load21.i.i321, 11
  %bf.clear29.i.i327.lobit = and i32 %bf.clear29.i.i327, 1
  %call.i9.i = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i.i317, i32 %bf.clear22.i.i322.lobit, i32 %bf.clear29.i.i327.lobit, %struct.die_struct* %context_die) #5
  %cmp33.i.i330 = icmp eq %struct.die_struct* %call.i9.i, null
  br i1 %cmp33.i.i330, label %sw.epilog, label %if.then34.i.i343

if.then34.i.i343:                                 ; preds = %if.end19.i.i331
  %call.i.i.i332 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i.i333 = getelementptr inbounds i8* %call.i.i.i332, i64 8
  %52 = bitcast i8* %dw_attr_next.i.i.i333 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %52, align 8, !tbaa !72
  %dw_attr.i.i.i334 = bitcast i8* %call.i.i.i332 to i32*
  store i32 73, i32* %dw_attr.i.i.i334, align 4, !tbaa !57
  %dw_attr_val.i.i.i335 = getelementptr inbounds i8* %call.i.i.i332, i64 16
  %val_class.i.i.i336 = bitcast i8* %dw_attr_val.i.i.i335 to i32*
  store i32 10, i32* %val_class.i.i.i336, align 4, !tbaa !59
  %v.i.i.i337 = getelementptr inbounds i8* %call.i.i.i332, i64 24
  %die2.i.i.i338 = bitcast i8* %v.i.i.i337 to %struct.die_struct**
  store %struct.die_struct* %call.i9.i, %struct.die_struct** %die2.i.i.i338, align 8, !tbaa !60
  %external.i.i.i339 = getelementptr inbounds i8* %call.i.i.i332, i64 32
  %53 = bitcast i8* %external.i.i.i339 to i32*
  store i32 0, i32* %53, align 4, !tbaa !108
  %cmp.i.i.i.i340 = icmp ne i8* %call.i.i286, null
  %cmp1.i.i.i.i341 = icmp ne i8* %call.i.i.i332, null
  %or.cond.i.i.i.i342 = and i1 %cmp.i.i.i.i340, %cmp1.i.i.i.i341
  br i1 %or.cond.i.i.i.i342, label %if.then.i.i.i.i345, label %sw.epilog

if.then.i.i.i.i345:                               ; preds = %if.then34.i.i343
  %54 = bitcast i8* %call.i.i.i332 to %struct.dw_attr_struct*
  %die_attr.i.i.i.i344 = getelementptr inbounds i8* %call.i.i286, i64 16
  %55 = bitcast i8* %die_attr.i.i.i.i344 to %struct.dw_attr_struct**
  %56 = load %struct.dw_attr_struct** %55, align 8, !tbaa !73
  store %struct.dw_attr_struct* %56, %struct.dw_attr_struct** %52, align 8, !tbaa !72
  store %struct.dw_attr_struct* %54, %struct.dw_attr_struct** %55, align 8, !tbaa !73
  br label %sw.epilog

sw.bb41:                                          ; preds = %if.end23
  %type43 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 1
  %57 = load %union.tree_node** %type43, align 8, !tbaa !87
  tail call fastcc void @gen_type_die(%union.tree_node* %57, %struct.die_struct* %context_die)
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 11117, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.gen_type_die, i64 0, i64 0)) #7
  unreachable

sw.bb44:                                          ; preds = %if.end23
  %type46 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 1
  %58 = load %union.tree_node** %type46, align 8, !tbaa !87
  tail call fastcc void @gen_type_die(%union.tree_node* %58, %struct.die_struct* %context_die)
  %59 = load %union.tree_node** %type46, align 8, !tbaa !87
  %call.i347 = tail call fastcc %struct.die_struct* @scope_die_for(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die) #5
  %call.i496 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %60 = bitcast i8* %call.i496 to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i496 to i32*
  store i32 21, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i497 = icmp eq %struct.die_struct* %call.i347, null
  br i1 %cmp.i497, label %if.else.i508, label %if.then.i499

if.then.i499:                                     ; preds = %sw.bb44
  %cmp1.i.i498 = icmp eq i8* %call.i496, null
  br i1 %cmp1.i.i498, label %new_die.exit, label %if.then.i.i501

if.then.i.i501:                                   ; preds = %if.then.i499
  %cmp2.i.i500 = icmp eq %struct.die_struct* %60, %call.i347
  br i1 %cmp2.i.i500, label %if.then3.i.i502, label %if.end.i.i506

if.then3.i.i502:                                  ; preds = %if.then.i.i501
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i506:                                    ; preds = %if.then.i.i501
  %die_parent.i.i503 = getelementptr inbounds i8* %call.i496, i64 24
  %61 = bitcast i8* %die_parent.i.i503 to %struct.die_struct**
  store %struct.die_struct* %call.i347, %struct.die_struct** %61, align 8, !tbaa !55
  %die_child.i.i504 = getelementptr inbounds %struct.die_struct* %call.i347, i64 0, i32 4
  %62 = load %struct.die_struct** %die_child.i.i504, align 8, !tbaa !62
  %die_sib.i.i505 = getelementptr inbounds i8* %call.i496, i64 40
  %63 = bitcast i8* %die_sib.i.i505 to %struct.die_struct**
  store %struct.die_struct* %62, %struct.die_struct** %63, align 8, !tbaa !63
  store %struct.die_struct* %60, %struct.die_struct** %die_child.i.i504, align 8, !tbaa !62
  br label %new_die.exit

if.else.i508:                                     ; preds = %sw.bb44
  %call1.i507 = tail call noalias i8* @xmalloc(i64 24) #5
  %64 = bitcast i8* %call1.i507 to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i507 to %struct.die_struct**
  store %struct.die_struct* %60, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i507, i64 8
  %65 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %type.addr.1.i, %union.tree_node** %65, align 8, !tbaa !64
  %66 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i507, i64 16
  %67 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %66, %struct.limbo_die_struct** %67, align 8, !tbaa !52
  store %struct.limbo_die_struct* %64, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i499, %if.end.i.i506, %if.else.i508
  %symtab.i.i348 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 10
  %.c.i.i349 = bitcast i8* %call.i496 to %union.tree_node*
  store %union.tree_node* %.c.i.i349, %union.tree_node** %symtab.i.i348, align 8, !tbaa !6
  %68 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  br label %tailrecurse.i.i.i

tailrecurse.i.i.i:                                ; preds = %for.end.i.i.i, %new_die.exit
  %die.tr.i.i.i = phi %struct.die_struct* [ %68, %new_die.exit ], [ %spec.1.i.i.i, %for.end.i.i.i ]
  %cmp.i.i.i510 = icmp eq %struct.die_struct* %die.tr.i.i.i, null
  br i1 %cmp.i.i.i510, label %add_prototyped_attribute.exit, label %if.then.i.i.i512

if.then.i.i.i512:                                 ; preds = %tailrecurse.i.i.i
  %die_attr.i.i.i511 = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i, i64 0, i32 2
  %a.027.i.i.i = load %struct.dw_attr_struct** %die_attr.i.i.i511, align 8
  %cmp128.i.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i.i, null
  br i1 %cmp128.i.i.i, label %add_prototyped_attribute.exit, label %for.body.i.i.i514

for.body.i.i.i514:                                ; preds = %if.then.i.i.i512, %for.inc.i.i.i
  %a.030.i.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i.i, %for.inc.i.i.i ], [ %a.027.i.i.i, %if.then.i.i.i512 ]
  %spec.029.i.i.i = phi %struct.die_struct* [ %spec.1.i.i.i, %for.inc.i.i.i ], [ null, %if.then.i.i.i512 ]
  %dw_attr.i.i.i513 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 0
  %69 = load i32* %dw_attr.i.i.i513, align 4, !tbaa !57
  switch i32 %69, label %for.inc.i.i.i [
    i32 19, label %land.lhs.true.i.i.i521
    i32 71, label %land.lhs.true.i.i.i.i
    i32 49, label %land.lhs.true.i.i.i.i
  ]

land.lhs.true.i.i.i.i:                            ; preds = %for.body.i.i.i514, %for.body.i.i.i514
  %a.idx.i.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i = load i32* %a.idx.i.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i.i515 = icmp eq i32 %a.idx.val.i.i.i.i, 10
  br i1 %cmp.i.i.i.i515, label %AT_ref.exit.i.i.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i:                                ; preds = %land.lhs.true.i.i.i.i
  %v.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1
  %die.i.i.i.i = bitcast %union.anon.3* %v.i.i.i.i to %struct.die_struct**
  %70 = load %struct.die_struct** %die.i.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %AT_ref.exit.i.i.i, %for.body.i.i.i514
  %spec.1.i.i.i = phi %struct.die_struct* [ %70, %AT_ref.exit.i.i.i ], [ %spec.029.i.i.i, %for.body.i.i.i514 ]
  %dw_attr_next.i.i.i516 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 1
  %a.0.i.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i.i516, align 8
  %cmp1.i.i.i517 = icmp eq %struct.dw_attr_struct* %a.0.i.i.i, null
  br i1 %cmp1.i.i.i517, label %for.end.i.i.i, label %for.body.i.i.i514

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i
  %tobool.i.i.i518 = icmp eq %struct.die_struct* %spec.1.i.i.i, null
  br i1 %tobool.i.i.i518, label %add_prototyped_attribute.exit, label %tailrecurse.i.i.i

land.lhs.true.i.i.i521:                           ; preds = %for.body.i.i.i514
  %a.idx.i.i.i519 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i520 = load i32* %a.idx.i.i.i519, align 4, !tbaa !59
  %cmp.i4.i.i = icmp eq i32 %a.idx.val.i.i.i520, 6
  br i1 %cmp.i4.i.i, label %get_AT_unsigned.exit.i, label %if.end.i.i.i522

if.end.i.i.i522:                                  ; preds = %land.lhs.true.i.i.i521
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

get_AT_unsigned.exit.i:                           ; preds = %land.lhs.true.i.i.i521
  %val_unsigned.i.i.i523 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %71 = load i64* %val_unsigned.i.i.i523, align 8, !tbaa !8
  %phitmp.i.i = trunc i64 %71 to i32
  %cmp.i524 = icmp eq i32 %phitmp.i.i, 1
  br i1 %cmp.i524, label %land.lhs.true.i, label %add_prototyped_attribute.exit

land.lhs.true.i:                                  ; preds = %get_AT_unsigned.exit.i
  %values.i525 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 1
  %72 = load i8** %values.i525, align 8
  %cmp1.i = icmp eq i8* %72, null
  br i1 %cmp1.i, label %add_prototyped_attribute.exit, label %if.then.i533

if.then.i533:                                     ; preds = %land.lhs.true.i
  %call.i.i526 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i527 = getelementptr inbounds i8* %call.i.i526, i64 8
  %73 = bitcast i8* %dw_attr_next.i.i527 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %73, align 8, !tbaa !72
  %dw_attr.i.i528 = bitcast i8* %call.i.i526 to i32*
  store i32 39, i32* %dw_attr.i.i528, align 4, !tbaa !57
  %dw_attr_val.i.i529 = getelementptr inbounds i8* %call.i.i526, i64 16
  %val_class.i.i530 = bitcast i8* %dw_attr_val.i.i529 to i32*
  store i32 9, i32* %val_class.i.i530, align 4, !tbaa !59
  %v.i.i531 = getelementptr inbounds i8* %call.i.i526, i64 24
  store i8 1, i8* %v.i.i531, align 1, !tbaa !1
  %cmp.i.i2.i = icmp ne i8* %call.i496, null
  %cmp1.i.i3.i = icmp ne i8* %call.i.i526, null
  %or.cond.i.i.i532 = and i1 %cmp.i.i2.i, %cmp1.i.i3.i
  br i1 %or.cond.i.i.i532, label %if.then.i.i5.i, label %add_prototyped_attribute.exit

if.then.i.i5.i:                                   ; preds = %if.then.i533
  %74 = bitcast i8* %call.i.i526 to %struct.dw_attr_struct*
  %die_attr.i.i4.i = getelementptr inbounds i8* %call.i496, i64 16
  %75 = bitcast i8* %die_attr.i.i4.i to %struct.dw_attr_struct**
  %76 = load %struct.dw_attr_struct** %75, align 8, !tbaa !73
  store %struct.dw_attr_struct* %76, %struct.dw_attr_struct** %73, align 8, !tbaa !72
  store %struct.dw_attr_struct* %74, %struct.dw_attr_struct** %75, align 8, !tbaa !73
  br label %add_prototyped_attribute.exit

add_prototyped_attribute.exit:                    ; preds = %tailrecurse.i.i.i, %if.then.i.i.i512, %for.end.i.i.i, %get_AT_unsigned.exit.i, %land.lhs.true.i, %if.then.i533, %if.then.i.i5.i
  %code1.i = getelementptr inbounds %union.tree_node* %59, i64 0, i32 0, i32 0, i32 2
  %bf.load.i535 = load i32* %code1.i, align 8
  %bf.clear.i536 = and i32 %bf.load.i535, 255
  %77 = and i32 %bf.load.i535, 254
  %78 = icmp eq i32 %77, 6
  br i1 %78, label %land.lhs.true.i538, label %if.end.i543

land.lhs.true.i538:                               ; preds = %add_prototyped_attribute.exit
  %type4.i537 = getelementptr inbounds %union.tree_node* %59, i64 0, i32 0, i32 0, i32 1
  %79 = load %union.tree_node** %type4.i537, align 8, !tbaa !87
  %cmp5.i = icmp eq %union.tree_node* %79, null
  br i1 %cmp5.i, label %if.end.i543, label %land.lhs.true6.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i538
  %80 = getelementptr inbounds %union.tree_node* %59, i64 0, i32 0, i32 11
  %81 = load %union.tree_node** %80, align 8, !tbaa !102
  %cmp8.i = icmp eq %union.tree_node* %81, null
  br i1 %cmp8.i, label %if.then.i541, label %if.end.i543

if.then.i541:                                     ; preds = %land.lhs.true6.i
  %code12.i = getelementptr inbounds %union.tree_node* %79, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i539 = load i32* %code12.i, align 8
  %bf.clear14.i540 = and i32 %bf.load13.i539, 255
  br label %if.end.i543

if.end.i543:                                      ; preds = %if.then.i541, %land.lhs.true6.i, %land.lhs.true.i538, %add_prototyped_attribute.exit
  %bf.load21.i = phi i32 [ %bf.load13.i539, %if.then.i541 ], [ %bf.load.i535, %land.lhs.true6.i ], [ %bf.load.i535, %land.lhs.true.i538 ], [ %bf.load.i535, %add_prototyped_attribute.exit ]
  %type.addr.0.i542 = phi %union.tree_node* [ %79, %if.then.i541 ], [ %59, %land.lhs.true6.i ], [ %59, %land.lhs.true.i538 ], [ %59, %add_prototyped_attribute.exit ]
  %code.0.i = phi i32 [ %bf.clear14.i540, %if.then.i541 ], [ %bf.clear.i536, %land.lhs.true6.i ], [ %bf.clear.i536, %land.lhs.true.i538 ], [ %bf.clear.i536, %add_prototyped_attribute.exit ]
  switch i32 %code.0.i, label %if.end19.i [
    i32 5, label %add_type_attribute.exit
    i32 0, label %add_type_attribute.exit
  ]

if.end19.i:                                       ; preds = %if.end.i543
  %bf.clear22.i = lshr i32 %bf.load21.i, 12
  %bf.clear22.i.lobit = and i32 %bf.clear22.i, 1
  %bf.clear29.i = lshr i32 %bf.load21.i, 11
  %bf.clear29.i.lobit = and i32 %bf.clear29.i, 1
  %call.i545 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i542, i32 %bf.clear22.i.lobit, i32 %bf.clear29.i.lobit, %struct.die_struct* %context_die) #5
  %cmp33.i = icmp eq %struct.die_struct* %call.i545, null
  br i1 %cmp33.i, label %add_type_attribute.exit, label %if.then34.i

if.then34.i:                                      ; preds = %if.end19.i
  %call.i.i546 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i547 = getelementptr inbounds i8* %call.i.i546, i64 8
  %82 = bitcast i8* %dw_attr_next.i.i547 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %82, align 8, !tbaa !72
  %dw_attr.i.i548 = bitcast i8* %call.i.i546 to i32*
  store i32 73, i32* %dw_attr.i.i548, align 4, !tbaa !57
  %dw_attr_val.i.i549 = getelementptr inbounds i8* %call.i.i546, i64 16
  %val_class.i.i550 = bitcast i8* %dw_attr_val.i.i549 to i32*
  store i32 10, i32* %val_class.i.i550, align 4, !tbaa !59
  %v.i.i551 = getelementptr inbounds i8* %call.i.i546, i64 24
  %die2.i.i552 = bitcast i8* %v.i.i551 to %struct.die_struct**
  store %struct.die_struct* %call.i545, %struct.die_struct** %die2.i.i552, align 8, !tbaa !60
  %external.i.i553 = getelementptr inbounds i8* %call.i.i546, i64 32
  %83 = bitcast i8* %external.i.i553 to i32*
  store i32 0, i32* %83, align 4, !tbaa !108
  %cmp.i.i.i554 = icmp ne i8* %call.i496, null
  %cmp1.i.i.i555 = icmp ne i8* %call.i.i546, null
  %or.cond.i.i.i556 = and i1 %cmp.i.i.i554, %cmp1.i.i.i555
  br i1 %or.cond.i.i.i556, label %if.then.i.i.i558, label %add_type_attribute.exit

if.then.i.i.i558:                                 ; preds = %if.then34.i
  %84 = bitcast i8* %call.i.i546 to %struct.dw_attr_struct*
  %die_attr.i.i.i557 = getelementptr inbounds i8* %call.i496, i64 16
  %85 = bitcast i8* %die_attr.i.i.i557 to %struct.dw_attr_struct**
  %86 = load %struct.dw_attr_struct** %85, align 8, !tbaa !73
  store %struct.dw_attr_struct* %86, %struct.dw_attr_struct** %82, align 8, !tbaa !72
  store %struct.dw_attr_struct* %84, %struct.dw_attr_struct** %85, align 8, !tbaa !73
  br label %add_type_attribute.exit

add_type_attribute.exit:                          ; preds = %if.then34.i, %if.then.i.i.i558, %if.end.i543, %if.end.i543, %if.end19.i
  tail call fastcc void @gen_formal_types_die(%union.tree_node* %type.addr.1.i, %struct.die_struct* %60) #5
  br label %sw.epilog

sw.bb47:                                          ; preds = %if.end23
  %type49 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 1
  %87 = load %union.tree_node** %type49, align 8, !tbaa !87
  tail call fastcc void @gen_type_die(%union.tree_node* %87, %struct.die_struct* %context_die)
  %88 = load %union.tree_node** %type49, align 8, !tbaa !87
  %call.i351 = tail call fastcc %struct.die_struct* @scope_die_for(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die) #5
  %call.i560 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %89 = bitcast i8* %call.i560 to %struct.die_struct*
  %die_tag.i561 = bitcast i8* %call.i560 to i32*
  store i32 21, i32* %die_tag.i561, align 4, !tbaa !69
  %cmp.i562 = icmp eq %struct.die_struct* %call.i351, null
  br i1 %cmp.i562, label %if.else.i576, label %if.then.i564

if.then.i564:                                     ; preds = %sw.bb47
  %cmp1.i.i563 = icmp eq i8* %call.i560, null
  br i1 %cmp1.i.i563, label %new_die.exit578, label %if.then.i.i566

if.then.i.i566:                                   ; preds = %if.then.i564
  %cmp2.i.i565 = icmp eq %struct.die_struct* %89, %call.i351
  br i1 %cmp2.i.i565, label %if.then3.i.i567, label %if.end.i.i571

if.then3.i.i567:                                  ; preds = %if.then.i.i566
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i571:                                    ; preds = %if.then.i.i566
  %die_parent.i.i568 = getelementptr inbounds i8* %call.i560, i64 24
  %90 = bitcast i8* %die_parent.i.i568 to %struct.die_struct**
  store %struct.die_struct* %call.i351, %struct.die_struct** %90, align 8, !tbaa !55
  %die_child.i.i569 = getelementptr inbounds %struct.die_struct* %call.i351, i64 0, i32 4
  %91 = load %struct.die_struct** %die_child.i.i569, align 8, !tbaa !62
  %die_sib.i.i570 = getelementptr inbounds i8* %call.i560, i64 40
  %92 = bitcast i8* %die_sib.i.i570 to %struct.die_struct**
  store %struct.die_struct* %91, %struct.die_struct** %92, align 8, !tbaa !63
  store %struct.die_struct* %89, %struct.die_struct** %die_child.i.i569, align 8, !tbaa !62
  br label %new_die.exit578

if.else.i576:                                     ; preds = %sw.bb47
  %call1.i572 = tail call noalias i8* @xmalloc(i64 24) #5
  %93 = bitcast i8* %call1.i572 to %struct.limbo_die_struct*
  %die2.i573 = bitcast i8* %call1.i572 to %struct.die_struct**
  store %struct.die_struct* %89, %struct.die_struct** %die2.i573, align 8, !tbaa !54
  %created_for.i574 = getelementptr inbounds i8* %call1.i572, i64 8
  %94 = bitcast i8* %created_for.i574 to %union.tree_node**
  store %union.tree_node* %type.addr.1.i, %union.tree_node** %94, align 8, !tbaa !64
  %95 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i575 = getelementptr inbounds i8* %call1.i572, i64 16
  %96 = bitcast i8* %next.i575 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %95, %struct.limbo_die_struct** %96, align 8, !tbaa !52
  store %struct.limbo_die_struct* %93, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit578

new_die.exit578:                                  ; preds = %if.then.i564, %if.end.i.i571, %if.else.i576
  %symtab.i.i353 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 10
  %.c.i.i354 = bitcast i8* %call.i560 to %union.tree_node*
  store %union.tree_node* %.c.i.i354, %union.tree_node** %symtab.i.i353, align 8, !tbaa !6
  %97 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  br label %tailrecurse.i.i.i581

tailrecurse.i.i.i581:                             ; preds = %for.end.i.i.i604, %new_die.exit578
  %die.tr.i.i.i579 = phi %struct.die_struct* [ %97, %new_die.exit578 ], [ %spec.1.i.i.i598, %for.end.i.i.i604 ]
  %cmp.i.i.i580 = icmp eq %struct.die_struct* %die.tr.i.i.i579, null
  br i1 %cmp.i.i.i580, label %add_prototyped_attribute.exit630, label %if.then.i.i.i585

if.then.i.i.i585:                                 ; preds = %tailrecurse.i.i.i581
  %die_attr.i.i.i582 = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i579, i64 0, i32 2
  %a.027.i.i.i583 = load %struct.dw_attr_struct** %die_attr.i.i.i582, align 8
  %cmp128.i.i.i584 = icmp eq %struct.dw_attr_struct* %a.027.i.i.i583, null
  br i1 %cmp128.i.i.i584, label %add_prototyped_attribute.exit630, label %for.body.i.i.i589

for.body.i.i.i589:                                ; preds = %if.then.i.i.i585, %for.inc.i.i.i602
  %a.030.i.i.i586 = phi %struct.dw_attr_struct* [ %a.0.i.i.i600, %for.inc.i.i.i602 ], [ %a.027.i.i.i583, %if.then.i.i.i585 ]
  %spec.029.i.i.i587 = phi %struct.die_struct* [ %spec.1.i.i.i598, %for.inc.i.i.i602 ], [ null, %if.then.i.i.i585 ]
  %dw_attr.i.i.i588 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i586, i64 0, i32 0
  %98 = load i32* %dw_attr.i.i.i588, align 4, !tbaa !57
  switch i32 %98, label %for.inc.i.i.i602 [
    i32 19, label %land.lhs.true.i.i.i608
    i32 71, label %land.lhs.true.i.i.i.i593
    i32 49, label %land.lhs.true.i.i.i.i593
  ]

land.lhs.true.i.i.i.i593:                         ; preds = %for.body.i.i.i589, %for.body.i.i.i589
  %a.idx.i.i.i.i590 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i586, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i591 = load i32* %a.idx.i.i.i.i590, align 4, !tbaa !59
  %cmp.i.i.i.i592 = icmp eq i32 %a.idx.val.i.i.i.i591, 10
  br i1 %cmp.i.i.i.i592, label %AT_ref.exit.i.i.i597, label %if.end.i.i.i.i594

if.end.i.i.i.i594:                                ; preds = %land.lhs.true.i.i.i.i593
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i597:                             ; preds = %land.lhs.true.i.i.i.i593
  %v.i.i.i.i595 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i586, i64 0, i32 2, i32 1
  %die.i.i.i.i596 = bitcast %union.anon.3* %v.i.i.i.i595 to %struct.die_struct**
  %99 = load %struct.die_struct** %die.i.i.i.i596, align 8, !tbaa !60
  br label %for.inc.i.i.i602

for.inc.i.i.i602:                                 ; preds = %AT_ref.exit.i.i.i597, %for.body.i.i.i589
  %spec.1.i.i.i598 = phi %struct.die_struct* [ %99, %AT_ref.exit.i.i.i597 ], [ %spec.029.i.i.i587, %for.body.i.i.i589 ]
  %dw_attr_next.i.i.i599 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i586, i64 0, i32 1
  %a.0.i.i.i600 = load %struct.dw_attr_struct** %dw_attr_next.i.i.i599, align 8
  %cmp1.i.i.i601 = icmp eq %struct.dw_attr_struct* %a.0.i.i.i600, null
  br i1 %cmp1.i.i.i601, label %for.end.i.i.i604, label %for.body.i.i.i589

for.end.i.i.i604:                                 ; preds = %for.inc.i.i.i602
  %tobool.i.i.i603 = icmp eq %struct.die_struct* %spec.1.i.i.i598, null
  br i1 %tobool.i.i.i603, label %add_prototyped_attribute.exit630, label %tailrecurse.i.i.i581

land.lhs.true.i.i.i608:                           ; preds = %for.body.i.i.i589
  %a.idx.i.i.i605 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i586, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i606 = load i32* %a.idx.i.i.i605, align 4, !tbaa !59
  %cmp.i4.i.i607 = icmp eq i32 %a.idx.val.i.i.i606, 6
  br i1 %cmp.i4.i.i607, label %get_AT_unsigned.exit.i613, label %if.end.i.i.i609

if.end.i.i.i609:                                  ; preds = %land.lhs.true.i.i.i608
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

get_AT_unsigned.exit.i613:                        ; preds = %land.lhs.true.i.i.i608
  %val_unsigned.i.i.i610 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i586, i64 0, i32 2, i32 1, i32 0, i32 0
  %100 = load i64* %val_unsigned.i.i.i610, align 8, !tbaa !8
  %phitmp.i.i611 = trunc i64 %100 to i32
  %cmp.i612 = icmp eq i32 %phitmp.i.i611, 1
  br i1 %cmp.i612, label %land.lhs.true.i616, label %add_prototyped_attribute.exit630

land.lhs.true.i616:                               ; preds = %get_AT_unsigned.exit.i613
  %values.i614 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 1
  %101 = load i8** %values.i614, align 8
  %cmp1.i615 = icmp eq i8* %101, null
  br i1 %cmp1.i615, label %add_prototyped_attribute.exit630, label %if.then.i626

if.then.i626:                                     ; preds = %land.lhs.true.i616
  %call.i.i617 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i618 = getelementptr inbounds i8* %call.i.i617, i64 8
  %102 = bitcast i8* %dw_attr_next.i.i618 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %102, align 8, !tbaa !72
  %dw_attr.i.i619 = bitcast i8* %call.i.i617 to i32*
  store i32 39, i32* %dw_attr.i.i619, align 4, !tbaa !57
  %dw_attr_val.i.i620 = getelementptr inbounds i8* %call.i.i617, i64 16
  %val_class.i.i621 = bitcast i8* %dw_attr_val.i.i620 to i32*
  store i32 9, i32* %val_class.i.i621, align 4, !tbaa !59
  %v.i.i622 = getelementptr inbounds i8* %call.i.i617, i64 24
  store i8 1, i8* %v.i.i622, align 1, !tbaa !1
  %cmp.i.i2.i623 = icmp ne i8* %call.i560, null
  %cmp1.i.i3.i624 = icmp ne i8* %call.i.i617, null
  %or.cond.i.i.i625 = and i1 %cmp.i.i2.i623, %cmp1.i.i3.i624
  br i1 %or.cond.i.i.i625, label %if.then.i.i5.i628, label %add_prototyped_attribute.exit630

if.then.i.i5.i628:                                ; preds = %if.then.i626
  %103 = bitcast i8* %call.i.i617 to %struct.dw_attr_struct*
  %die_attr.i.i4.i627 = getelementptr inbounds i8* %call.i560, i64 16
  %104 = bitcast i8* %die_attr.i.i4.i627 to %struct.dw_attr_struct**
  %105 = load %struct.dw_attr_struct** %104, align 8, !tbaa !73
  store %struct.dw_attr_struct* %105, %struct.dw_attr_struct** %102, align 8, !tbaa !72
  store %struct.dw_attr_struct* %103, %struct.dw_attr_struct** %104, align 8, !tbaa !73
  br label %add_prototyped_attribute.exit630

add_prototyped_attribute.exit630:                 ; preds = %tailrecurse.i.i.i581, %if.then.i.i.i585, %for.end.i.i.i604, %get_AT_unsigned.exit.i613, %land.lhs.true.i616, %if.then.i626, %if.then.i.i5.i628
  %code1.i631 = getelementptr inbounds %union.tree_node* %88, i64 0, i32 0, i32 0, i32 2
  %bf.load.i632 = load i32* %code1.i631, align 8
  %bf.clear.i633 = and i32 %bf.load.i632, 255
  %106 = and i32 %bf.load.i632, 254
  %107 = icmp eq i32 %106, 6
  br i1 %107, label %land.lhs.true.i636, label %if.end.i645

land.lhs.true.i636:                               ; preds = %add_prototyped_attribute.exit630
  %type4.i634 = getelementptr inbounds %union.tree_node* %88, i64 0, i32 0, i32 0, i32 1
  %108 = load %union.tree_node** %type4.i634, align 8, !tbaa !87
  %cmp5.i635 = icmp eq %union.tree_node* %108, null
  br i1 %cmp5.i635, label %if.end.i645, label %land.lhs.true6.i638

land.lhs.true6.i638:                              ; preds = %land.lhs.true.i636
  %109 = getelementptr inbounds %union.tree_node* %88, i64 0, i32 0, i32 11
  %110 = load %union.tree_node** %109, align 8, !tbaa !102
  %cmp8.i637 = icmp eq %union.tree_node* %110, null
  br i1 %cmp8.i637, label %if.then.i642, label %if.end.i645

if.then.i642:                                     ; preds = %land.lhs.true6.i638
  %code12.i639 = getelementptr inbounds %union.tree_node* %108, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i640 = load i32* %code12.i639, align 8
  %bf.clear14.i641 = and i32 %bf.load13.i640, 255
  br label %if.end.i645

if.end.i645:                                      ; preds = %if.then.i642, %land.lhs.true6.i638, %land.lhs.true.i636, %add_prototyped_attribute.exit630
  %bf.load21.i648 = phi i32 [ %bf.load13.i640, %if.then.i642 ], [ %bf.load.i632, %land.lhs.true6.i638 ], [ %bf.load.i632, %land.lhs.true.i636 ], [ %bf.load.i632, %add_prototyped_attribute.exit630 ]
  %type.addr.0.i643 = phi %union.tree_node* [ %108, %if.then.i642 ], [ %88, %land.lhs.true6.i638 ], [ %88, %land.lhs.true.i636 ], [ %88, %add_prototyped_attribute.exit630 ]
  %code.0.i644 = phi i32 [ %bf.clear14.i641, %if.then.i642 ], [ %bf.clear.i633, %land.lhs.true6.i638 ], [ %bf.clear.i633, %land.lhs.true.i636 ], [ %bf.clear.i633, %add_prototyped_attribute.exit630 ]
  switch i32 %code.0.i644, label %if.end19.i646 [
    i32 5, label %add_type_attribute.exit675
    i32 0, label %add_type_attribute.exit675
  ]

if.end19.i646:                                    ; preds = %if.end.i645
  %bf.clear22.i649 = lshr i32 %bf.load21.i648, 12
  %bf.clear22.i649.lobit = and i32 %bf.clear22.i649, 1
  %bf.clear29.i655 = lshr i32 %bf.load21.i648, 11
  %bf.clear29.i655.lobit = and i32 %bf.clear29.i655, 1
  %call.i658 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i643, i32 %bf.clear22.i649.lobit, i32 %bf.clear29.i655.lobit, %struct.die_struct* %context_die) #5
  %cmp33.i659 = icmp eq %struct.die_struct* %call.i658, null
  br i1 %cmp33.i659, label %add_type_attribute.exit675, label %if.then34.i671

if.then34.i671:                                   ; preds = %if.end19.i646
  %call.i.i660 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i661 = getelementptr inbounds i8* %call.i.i660, i64 8
  %111 = bitcast i8* %dw_attr_next.i.i661 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %111, align 8, !tbaa !72
  %dw_attr.i.i662 = bitcast i8* %call.i.i660 to i32*
  store i32 73, i32* %dw_attr.i.i662, align 4, !tbaa !57
  %dw_attr_val.i.i663 = getelementptr inbounds i8* %call.i.i660, i64 16
  %val_class.i.i664 = bitcast i8* %dw_attr_val.i.i663 to i32*
  store i32 10, i32* %val_class.i.i664, align 4, !tbaa !59
  %v.i.i665 = getelementptr inbounds i8* %call.i.i660, i64 24
  %die2.i.i666 = bitcast i8* %v.i.i665 to %struct.die_struct**
  store %struct.die_struct* %call.i658, %struct.die_struct** %die2.i.i666, align 8, !tbaa !60
  %external.i.i667 = getelementptr inbounds i8* %call.i.i660, i64 32
  %112 = bitcast i8* %external.i.i667 to i32*
  store i32 0, i32* %112, align 4, !tbaa !108
  %cmp.i.i.i668 = icmp ne i8* %call.i560, null
  %cmp1.i.i.i669 = icmp ne i8* %call.i.i660, null
  %or.cond.i.i.i670 = and i1 %cmp.i.i.i668, %cmp1.i.i.i669
  br i1 %or.cond.i.i.i670, label %if.then.i.i.i673, label %add_type_attribute.exit675

if.then.i.i.i673:                                 ; preds = %if.then34.i671
  %113 = bitcast i8* %call.i.i660 to %struct.dw_attr_struct*
  %die_attr.i.i.i672 = getelementptr inbounds i8* %call.i560, i64 16
  %114 = bitcast i8* %die_attr.i.i.i672 to %struct.dw_attr_struct**
  %115 = load %struct.dw_attr_struct** %114, align 8, !tbaa !73
  store %struct.dw_attr_struct* %115, %struct.dw_attr_struct** %111, align 8, !tbaa !72
  store %struct.dw_attr_struct* %113, %struct.dw_attr_struct** %114, align 8, !tbaa !73
  br label %add_type_attribute.exit675

add_type_attribute.exit675:                       ; preds = %if.then34.i671, %if.then.i.i.i673, %if.end.i645, %if.end.i645, %if.end19.i646
  tail call fastcc void @gen_formal_types_die(%union.tree_node* %type.addr.1.i, %struct.die_struct* %89) #5
  br label %sw.epilog

sw.bb50:                                          ; preds = %if.end23
  %string_flag = getelementptr inbounds %struct.tree_type* %type4, i64 0, i32 6
  %bf.load52 = load i32* %string_flag, align 4
  %bf.clear54 = and i32 %bf.load52, 65536
  %tobool55 = icmp eq i32 %bf.clear54, 0
  br i1 %tobool55, label %if.else, label %land.lhs.true56

land.lhs.true56:                                  ; preds = %sw.bb50
  %type58 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 1
  %116 = load %union.tree_node** %type58, align 8, !tbaa !87
  %code60 = getelementptr inbounds %union.tree_node* %116, i64 0, i32 0, i32 0, i32 2
  %bf.load61 = load i32* %code60, align 8
  %bf.clear62 = and i32 %bf.load61, 255
  %cmp63 = icmp eq i32 %bf.clear62, 12
  br i1 %cmp63, label %if.then64, label %if.else

if.then64:                                        ; preds = %land.lhs.true56
  tail call fastcc void @gen_type_die(%union.tree_node* %116, %struct.die_struct* %context_die)
  %call.i219 = tail call fastcc %struct.die_struct* @scope_die_for(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die) #5
  %call.i.i220 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %117 = bitcast i8* %call.i.i220 to %struct.die_struct*
  %die_tag.i.i221 = bitcast i8* %call.i.i220 to i32*
  store i32 18, i32* %die_tag.i.i221, align 4, !tbaa !69
  %cmp.i.i222 = icmp eq %struct.die_struct* %call.i219, null
  br i1 %cmp.i.i222, label %if.else.i.i236, label %if.then.i.i224

if.then.i.i224:                                   ; preds = %if.then64
  %cmp1.i.i.i223 = icmp eq i8* %call.i.i220, null
  br i1 %cmp1.i.i.i223, label %gen_string_type_die.exit, label %if.then.i.i.i226

if.then.i.i.i226:                                 ; preds = %if.then.i.i224
  %cmp2.i.i.i225 = icmp eq %struct.die_struct* %117, %call.i219
  br i1 %cmp2.i.i.i225, label %if.then3.i.i.i227, label %if.end.i.i.i231

if.then3.i.i.i227:                                ; preds = %if.then.i.i.i226
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i231:                                  ; preds = %if.then.i.i.i226
  %die_parent.i.i.i228 = getelementptr inbounds i8* %call.i.i220, i64 24
  %118 = bitcast i8* %die_parent.i.i.i228 to %struct.die_struct**
  store %struct.die_struct* %call.i219, %struct.die_struct** %118, align 8, !tbaa !55
  %die_child.i.i.i229 = getelementptr inbounds %struct.die_struct* %call.i219, i64 0, i32 4
  %119 = load %struct.die_struct** %die_child.i.i.i229, align 8, !tbaa !62
  %die_sib.i.i.i230 = getelementptr inbounds i8* %call.i.i220, i64 40
  %120 = bitcast i8* %die_sib.i.i.i230 to %struct.die_struct**
  store %struct.die_struct* %119, %struct.die_struct** %120, align 8, !tbaa !63
  store %struct.die_struct* %117, %struct.die_struct** %die_child.i.i.i229, align 8, !tbaa !62
  br label %gen_string_type_die.exit

if.else.i.i236:                                   ; preds = %if.then64
  %call1.i.i232 = tail call noalias i8* @xmalloc(i64 24) #5
  %121 = bitcast i8* %call1.i.i232 to %struct.limbo_die_struct*
  %die2.i.i233 = bitcast i8* %call1.i.i232 to %struct.die_struct**
  store %struct.die_struct* %117, %struct.die_struct** %die2.i.i233, align 8, !tbaa !54
  %created_for.i.i234 = getelementptr inbounds i8* %call1.i.i232, i64 8
  %122 = bitcast i8* %created_for.i.i234 to %union.tree_node**
  store %union.tree_node* %type.addr.1.i, %union.tree_node** %122, align 8, !tbaa !64
  %123 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i235 = getelementptr inbounds i8* %call1.i.i232, i64 16
  %124 = bitcast i8* %next.i.i235 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %123, %struct.limbo_die_struct** %124, align 8, !tbaa !52
  store %struct.limbo_die_struct* %121, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %gen_string_type_die.exit

gen_string_type_die.exit:                         ; preds = %if.then.i.i224, %if.end.i.i.i231, %if.else.i.i236
  %symtab.i.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 10
  %.c.i.i237 = bitcast i8* %call.i.i220 to %union.tree_node*
  store %union.tree_node* %.c.i.i237, %union.tree_node** %symtab.i.i, align 8, !tbaa !6
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb50, %land.lhs.true56
  tail call fastcc void @gen_array_type_die(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die)
  br label %sw.epilog

sw.bb68:                                          ; preds = %if.end23
  tail call fastcc void @gen_array_type_die(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die)
  br label %sw.epilog

sw.bb69:                                          ; preds = %if.end23, %if.end23, %if.end23, %if.end23
  %context = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 17
  %125 = load %struct.rtx_def** %context, align 8
  %tobool71 = icmp eq %struct.rtx_def* %125, null
  br i1 %tobool71, label %if.end138, label %land.lhs.true72

land.lhs.true72:                                  ; preds = %sw.bb69
  %126 = getelementptr inbounds %struct.rtx_def* %125, i64 1, i32 0
  %bf.load77 = load i32* %126, align 8
  %bf.clear78 = and i32 %bf.load77, 255
  %bf.clear78.off = add i32 %bf.clear78, -18
  %switch = icmp ult i32 %bf.clear78.off, 5
  %bf.clear119 = and i32 %bf.load77, 16384
  %tobool120 = icmp eq i32 %bf.clear119, 0
  %or.cond830 = and i1 %switch, %tobool120
  br i1 %or.cond830, label %if.then121, label %if.end138

if.then121:                                       ; preds = %land.lhs.true72
  %127 = bitcast %struct.rtx_def* %125 to %union.tree_node*
  tail call fastcc void @gen_type_die(%union.tree_node* %127, %struct.die_struct* %context_die)
  %bf.load126 = load i32* %asm_written_flag, align 8
  %bf.clear128 = and i32 %bf.load126, 16384
  %tobool129 = icmp eq i32 %bf.clear128, 0
  br i1 %tobool129, label %if.end131, label %return

if.end131:                                        ; preds = %if.then121
  %128 = load %struct.rtx_def** %context, align 8
  %129 = bitcast %struct.rtx_def* %128 to %union.tree_node*
  %130 = load %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used.i216 = getelementptr inbounds %struct.varray_head_tag* %130, i64 0, i32 1
  %131 = load i64* %elements_used.i216, align 8, !tbaa !67
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %130, i64 0, i32 0
  %132 = load i64* %num_elements.i, align 8, !tbaa !126
  %cmp.i217 = icmp ult i64 %131, %132
  br i1 %cmp.i217, label %push_decl_scope.exit, label %if.then.i218

if.then.i218:                                     ; preds = %if.end131
  %mul.i = shl i64 %132, 1
  %call.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %130, i64 %mul.i) #5
  store %struct.varray_head_tag* %call.i, %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used2.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call.i, i64 0, i32 1
  %.pre.i = load i64* %elements_used2.phi.trans.insert.i, align 8, !tbaa !67
  br label %push_decl_scope.exit

push_decl_scope.exit:                             ; preds = %if.end131, %if.then.i218
  %133 = phi i64 [ %131, %if.end131 ], [ %.pre.i, %if.then.i218 ]
  %134 = phi %struct.varray_head_tag* [ %130, %if.end131 ], [ %call.i, %if.then.i218 ]
  %elements_used2.i = getelementptr inbounds %struct.varray_head_tag* %134, i64 0, i32 1
  %inc.i = add i64 %133, 1
  store i64 %inc.i, i64* %elements_used2.i, align 8, !tbaa !67
  %data.i = getelementptr inbounds %struct.varray_head_tag* %134, i64 0, i32 4
  %tree.i = bitcast %union.varray_data_tag* %data.i to [1 x %union.tree_node*]*
  %arrayidx.i = getelementptr inbounds [1 x %union.tree_node*]* %tree.i, i64 0, i64 %133
  store %union.tree_node* %129, %union.tree_node** %arrayidx.i, align 8, !tbaa !6
  %135 = load %struct.rtx_def** %context, align 8
  %.idx = getelementptr %struct.rtx_def* %135, i64 5, i32 1
  %136 = bitcast [1 x %union.rtunion_def]* %.idx to %union.tree_node**
  %.idx.val = load %union.tree_node** %136, align 8
  %137 = bitcast %union.tree_node* %.idx.val to %struct.die_struct*
  %bf.load141.pre = load i32* %asm_written_flag, align 8
  br label %if.end138

if.end138:                                        ; preds = %land.lhs.true72, %sw.bb69, %push_decl_scope.exit
  %138 = phi %struct.rtx_def* [ %135, %push_decl_scope.exit ], [ %125, %land.lhs.true72 ], [ null, %sw.bb69 ]
  %bf.load141 = phi i32 [ %bf.load141.pre, %push_decl_scope.exit ], [ %bf.load30, %land.lhs.true72 ], [ %bf.load30, %sw.bb69 ]
  %context_die.addr.0 = phi %struct.die_struct* [ %137, %push_decl_scope.exit ], [ %context_die, %land.lhs.true72 ], [ %context_die, %sw.bb69 ]
  %need_pop.0 = phi i32 [ 1, %push_decl_scope.exit ], [ 0, %land.lhs.true72 ], [ 0, %sw.bb69 ]
  %bf.clear142 = and i32 %bf.load141, 255
  %cmp143 = icmp eq i32 %bf.clear142, 10
  %type.idx.i = getelementptr %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 10
  %type.idx.val.i = load %union.tree_node** %type.idx.i, align 8
  %139 = bitcast %union.tree_node* %type.idx.val.i to %struct.die_struct*
  br i1 %cmp143, label %if.then144, label %if.else145

if.then144:                                       ; preds = %if.end138
  %cmp.i214 = icmp eq %union.tree_node* %type.idx.val.i, null
  br i1 %cmp.i214, label %if.then.i215, label %if.else.i

if.then.i215:                                     ; preds = %if.then144
  %call1.i = tail call fastcc %struct.die_struct* @scope_die_for(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die.addr.0) #5
  %call.i76.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %140 = bitcast i8* %call.i76.i to %struct.die_struct*
  %die_tag.i.i = bitcast i8* %call.i76.i to i32*
  store i32 4, i32* %die_tag.i.i, align 4, !tbaa !69
  %cmp.i.i = icmp eq %struct.die_struct* %call1.i, null
  br i1 %cmp.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i215
  %cmp1.i.i77.i = icmp eq i8* %call.i76.i, null
  br i1 %cmp1.i.i77.i, label %new_die.exit.i, label %if.then.i.i78.i

if.then.i.i78.i:                                  ; preds = %if.then.i.i
  %cmp2.i.i.i = icmp eq %struct.die_struct* %140, %call1.i
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i.i78.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i:                                     ; preds = %if.then.i.i78.i
  %die_parent.i.i.i = getelementptr inbounds i8* %call.i76.i, i64 24
  %141 = bitcast i8* %die_parent.i.i.i to %struct.die_struct**
  store %struct.die_struct* %call1.i, %struct.die_struct** %141, align 8, !tbaa !55
  %die_child.i.i.i = getelementptr inbounds %struct.die_struct* %call1.i, i64 0, i32 4
  %142 = load %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  %die_sib.i.i.i = getelementptr inbounds i8* %call.i76.i, i64 40
  %143 = bitcast i8* %die_sib.i.i.i to %struct.die_struct**
  store %struct.die_struct* %142, %struct.die_struct** %143, align 8, !tbaa !63
  store %struct.die_struct* %140, %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  br label %new_die.exit.i

if.else.i.i:                                      ; preds = %if.then.i215
  %call1.i.i = tail call noalias i8* @xmalloc(i64 24) #5
  %144 = bitcast i8* %call1.i.i to %struct.limbo_die_struct*
  %die2.i.i = bitcast i8* %call1.i.i to %struct.die_struct**
  store %struct.die_struct* %140, %struct.die_struct** %die2.i.i, align 8, !tbaa !54
  %created_for.i.i = getelementptr inbounds i8* %call1.i.i, i64 8
  %145 = bitcast i8* %created_for.i.i to %union.tree_node**
  store %union.tree_node* %type.addr.1.i, %union.tree_node** %145, align 8, !tbaa !64
  %146 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i = getelementptr inbounds i8* %call1.i.i, i64 16
  %147 = bitcast i8* %next.i.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %146, %struct.limbo_die_struct** %147, align 8, !tbaa !52
  store %struct.limbo_die_struct* %144, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i

new_die.exit.i:                                   ; preds = %if.else.i.i, %if.end.i.i.i, %if.then.i.i
  %.c.i.i = bitcast i8* %call.i76.i to %union.tree_node*
  store %union.tree_node* %.c.i.i, %union.tree_node** %type.idx.i, align 8, !tbaa !6
  %type.idx75.val.i = load %union.tree_node** %3, align 8, !tbaa !102
  %cmp.i79.i = icmp eq %union.tree_node* %type.idx75.val.i, null
  br i1 %cmp.i79.i, label %if.end7.i, label %if.then.i80.i

if.then.i80.i:                                    ; preds = %new_die.exit.i
  %code.i.i = getelementptr inbounds %union.tree_node* %type.idx75.val.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i = load i32* %code.i.i, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 255
  switch i32 %bf.clear.i.i, label %if.end7.i [
    i32 1, label %if.end29.i.i
    i32 33, label %land.lhs.true.i.i
  ]

land.lhs.true.i.i:                                ; preds = %if.then.i80.i
  %ignored_flag.i.i = getelementptr inbounds %union.tree_node* %type.idx75.val.i, i64 0, i32 0, i32 5
  %148 = bitcast i48* %ignored_flag.i.i to i64*
  %bf.load18.i.i = load i64* %148, align 8
  %bf.cast.i.i = and i64 %bf.load18.i.i, 16384
  %tobool.i.i = icmp eq i64 %bf.cast.i.i, 0
  br i1 %tobool.i.i, label %if.end25.i.i, label %if.end7.i

if.end25.i.i:                                     ; preds = %land.lhs.true.i.i
  %name24.i.i = getelementptr inbounds %union.tree_node* %type.idx75.val.i, i64 0, i32 0, i32 8
  %149 = load %union.tree_node** %name24.i.i, align 8, !tbaa !86
  %cmp26.i.i = icmp eq %union.tree_node* %149, null
  br i1 %cmp26.i.i, label %if.end7.i, label %if.end29.i.i

if.end29.i.i:                                     ; preds = %if.end25.i.i, %if.then.i80.i
  %t.04.i.i = phi %union.tree_node* [ %149, %if.end25.i.i ], [ %type.idx75.val.i, %if.then.i80.i ]
  %id.i.i = getelementptr inbounds %union.tree_node* %t.04.i.i, i64 0, i32 0, i32 1
  %150 = getelementptr inbounds i8** %id.i.i, i64 1
  %151 = load i8** %150, align 8, !tbaa !105
  %cmp30.i.i = icmp eq i8* %151, null
  br i1 %cmp30.i.i, label %if.end7.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.end29.i.i
  %152 = load i8* %151, align 1, !tbaa !1
  %cmp31.i.i = icmp eq i8 %152, 0
  br i1 %cmp31.i.i, label %if.end7.i, label %if.then.i85.i

if.then.i85.i:                                    ; preds = %lor.lhs.false.i.i
  %153 = load i8* (i8*)** @demangle_name_func, align 8, !tbaa !6
  %tobool.i84.i = icmp eq i8* (i8*)* %153, null
  br i1 %tobool.i84.i, label %if.end.i.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %if.then.i85.i
  %call.i86.i = tail call i8* %153(i8* %151) #5
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then3.i.i, %if.then.i85.i
  %name_string.addr.0.i.i = phi i8* [ %call.i86.i, %if.then3.i.i ], [ %151, %if.then.i85.i ]
  %call.i.i.i = tail call noalias i8* @xmalloc(i64 40) #5
  %154 = bitcast i8* %call.i.i.i to %struct.dw_attr_struct*
  %155 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i.i.i = icmp eq %struct.ht* %155, null
  br i1 %tobool.i.i.i, label %if.then.i.i87.i, label %if.end.i.i88.i

if.then.i.i87.i:                                  ; preds = %if.end.i.i
  %call1.i.i.i = tail call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i.i.i, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i.i.i = getelementptr inbounds %struct.ht* %call1.i.i.i, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i.i.i, align 8, !tbaa !81
  %.pre.i.i.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i.i88.i

if.end.i.i88.i:                                   ; preds = %if.then.i.i87.i, %if.end.i.i
  %156 = phi %struct.ht* [ %155, %if.end.i.i ], [ %.pre.i.i.i, %if.then.i.i87.i ]
  %call2.i.i.i = tail call i64 @strlen(i8* %name_string.addr.0.i.i) #5
  %conv.i.i.i = trunc i64 %call2.i.i.i to i32
  %call3.i.i.i = tail call %struct.ht_identifier* @ht_lookup(%struct.ht* %156, i8* %name_string.addr.0.i.i, i32 %conv.i.i.i, i32 1) #5
  %157 = bitcast %struct.ht_identifier* %call3.i.i.i to %struct.indirect_string_node*
  %158 = getelementptr inbounds %struct.ht_identifier* %call3.i.i.i, i64 1, i32 0
  %159 = load i32* %158, align 4, !tbaa !84
  %inc.i.i.i = add i32 %159, 1
  store i32 %inc.i.i.i, i32* %158, align 4, !tbaa !84
  %dw_attr_next.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 8
  %160 = bitcast i8* %dw_attr_next.i.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %160, align 8, !tbaa !72
  %dw_attr.i.i.i = bitcast i8* %call.i.i.i to i32*
  store i32 3, i32* %dw_attr.i.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 16
  %val_class.i.i.i = bitcast i8* %dw_attr_val.i.i.i to i32*
  store i32 14, i32* %val_class.i.i.i, align 4, !tbaa !59
  %v.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 24
  %val_str.i.i.i = bitcast i8* %v.i.i.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %157, %struct.indirect_string_node** %val_str.i.i.i, align 8, !tbaa !6
  %cmp.i.i.i.i = icmp ne i8* %call.i76.i, null
  %cmp1.i.i.i.i = icmp ne i8* %call.i.i.i, null
  %or.cond.i.i.i.i = and i1 %cmp.i.i.i.i, %cmp1.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %if.then.i.i.i.i, label %if.end7.i

if.then.i.i.i.i:                                  ; preds = %if.end.i.i88.i
  %die_attr.i.i.i.i = getelementptr inbounds i8* %call.i76.i, i64 16
  %161 = bitcast i8* %die_attr.i.i.i.i to %struct.dw_attr_struct**
  %162 = load %struct.dw_attr_struct** %161, align 8, !tbaa !73
  store %struct.dw_attr_struct* %162, %struct.dw_attr_struct** %160, align 8, !tbaa !72
  store %struct.dw_attr_struct* %154, %struct.dw_attr_struct** %161, align 8, !tbaa !73
  br label %if.end7.i

if.else.i:                                        ; preds = %if.then144
  %size.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 2
  %163 = bitcast i32* %size.i to %union.tree_node**
  %164 = load %union.tree_node** %163, align 8, !tbaa !110
  %tobool.i = icmp eq %union.tree_node* %164, null
  br i1 %tobool.i, label %if.end146, label %if.then.i90.i

if.then.i90.i:                                    ; preds = %if.else.i
  %die_attr.i.i = getelementptr inbounds %union.tree_node* %type.idx.val.i, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32* %die_attr.i.i to %struct.dw_attr_struct**
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i, %if.then.i90.i
  %p.0.i.i = phi %struct.dw_attr_struct** [ %165, %if.then.i90.i ], [ %dw_attr_next.i94.i, %for.body.i.i ]
  %166 = load %struct.dw_attr_struct** %p.0.i.i, align 8, !tbaa !6
  %tobool.i91.i = icmp eq %struct.dw_attr_struct* %166, null
  br i1 %tobool.i91.i, label %if.end7.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %dw_attr.i92.i = getelementptr inbounds %struct.dw_attr_struct* %166, i64 0, i32 0
  %167 = load i32* %dw_attr.i92.i, align 4, !tbaa !57
  %cmp1.i93.i = icmp eq i32 %167, 60
  %dw_attr_next.i94.i = getelementptr inbounds %struct.dw_attr_struct* %166, i64 0, i32 1
  br i1 %cmp1.i93.i, label %if.then5.i.i, label %for.cond.i.i

if.then5.i.i:                                     ; preds = %for.body.i.i
  %168 = load %struct.dw_attr_struct** %dw_attr_next.i94.i, align 8, !tbaa !72
  store %struct.dw_attr_struct* %168, %struct.dw_attr_struct** %p.0.i.i, align 8, !tbaa !6
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %166, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  switch i32 %a.idx.val.i.i.i, label %free_AT.exit.i.i [
    i32 14, label %sw.bb.i.i.i
    i32 12, label %sw.bb5.i.i.i
    i32 13, label %sw.bb5.i.i.i
    i32 8, label %sw.bb8.i.i.i
  ]

sw.bb.i.i.i:                                      ; preds = %if.then5.i.i
  %v.i.i95.i = getelementptr inbounds %struct.dw_attr_struct* %166, i64 0, i32 2, i32 1
  %val_str.i.i96.i = bitcast %union.anon.3* %v.i.i95.i to %struct.indirect_string_node**
  %169 = load %struct.indirect_string_node** %val_str.i.i96.i, align 8, !tbaa !6
  %refcount.i.i.i = getelementptr inbounds %struct.indirect_string_node* %169, i64 0, i32 1
  %170 = load i32* %refcount.i.i.i, align 4, !tbaa !84
  %tobool.i.i97.i = icmp eq i32 %170, 0
  br i1 %tobool.i.i97.i, label %free_AT.exit.i.i, label %if.then.i.i98.i

if.then.i.i98.i:                                  ; preds = %sw.bb.i.i.i
  %dec.i.i.i = add i32 %170, -1
  store i32 %dec.i.i.i, i32* %refcount.i.i.i, align 4, !tbaa !84
  br label %free_AT.exit.i.i

sw.bb5.i.i.i:                                     ; preds = %if.then5.i.i, %if.then5.i.i
  %v7.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %166, i64 0, i32 2, i32 1
  %val_lbl_id.i.i.i = bitcast %union.anon.3* %v7.i.i.i to i8**
  %171 = load i8** %val_lbl_id.i.i.i, align 8, !tbaa !6
  tail call void @free(i8* %171) #5
  br label %free_AT.exit.i.i

sw.bb8.i.i.i:                                     ; preds = %if.then5.i.i
  %v10.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %166, i64 0, i32 2, i32 1
  %array.i.i.i = bitcast %union.anon.3* %v10.i.i.i to i64**
  %172 = load i64** %array.i.i.i, align 8, !tbaa !119
  %173 = bitcast i64* %172 to i8*
  tail call void @free(i8* %173) #5
  br label %free_AT.exit.i.i

free_AT.exit.i.i:                                 ; preds = %sw.bb8.i.i.i, %sw.bb5.i.i.i, %if.then.i.i98.i, %sw.bb.i.i.i, %if.then5.i.i
  %174 = bitcast %struct.dw_attr_struct* %166 to i8*
  tail call void @free(i8* %174) #5
  br label %if.end7.i

if.end7.i:                                        ; preds = %for.cond.i.i, %free_AT.exit.i.i, %if.then.i.i.i.i, %if.end.i.i88.i, %lor.lhs.false.i.i, %if.end29.i.i, %if.end25.i.i, %land.lhs.true.i.i, %if.then.i80.i, %new_die.exit.i
  %type_die.0.i = phi %struct.die_struct* [ %140, %if.end.i.i88.i ], [ %140, %if.then.i.i.i.i ], [ %139, %free_AT.exit.i.i ], [ %140, %if.end29.i.i ], [ %140, %if.end25.i.i ], [ %140, %land.lhs.true.i.i ], [ %140, %if.then.i80.i ], [ %140, %new_die.exit.i ], [ %140, %lor.lhs.false.i.i ], [ %139, %for.cond.i.i ]
  %size9.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 2
  %175 = bitcast i32* %size9.i to %union.tree_node**
  %176 = load %union.tree_node** %175, align 8, !tbaa !110
  %tobool10.i = icmp eq %union.tree_node* %176, null
  br i1 %tobool10.i, label %if.else45.i, label %if.then11.i

if.then11.i:                                      ; preds = %if.end7.i
  %bf.load.i = load i32* %asm_written_flag, align 8
  %bf.set.i = or i32 %bf.load.i, 16384
  store i32 %bf.set.i, i32* %asm_written_flag, align 8
  %bf.clear.i101.i = and i32 %bf.load.i, 255
  switch i32 %bf.clear.i101.i, label %sw.default.i.i [
    i32 0, label %sw.epilog.i.i
    i32 10, label %sw.bb1.i.i
    i32 20, label %sw.bb1.i.i
    i32 21, label %sw.bb1.i.i
    i32 22, label %sw.bb1.i.i
    i32 37, label %if.end.i.i104.i
  ]

sw.bb1.i.i:                                       ; preds = %if.then11.i, %if.then11.i, %if.then11.i, %if.then11.i
  %call.i102.i = tail call i64 @int_size_in_bytes(%union.tree_node* %type.addr.1.i) #5
  br label %sw.epilog.i.i

if.end.i.i104.i:                                  ; preds = %if.then11.i
  %177 = load %union.tree_node** %3, align 8, !tbaa !104
  %cmp2.i.i103.i = icmp eq %union.tree_node* %177, null
  br i1 %cmp2.i.i103.i, label %if.then3.i.i105.i, label %field_type.exit.i.i

if.then3.i.i105.i:                                ; preds = %if.end.i.i104.i
  %type5.i.i.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 1
  %178 = load %union.tree_node** %type5.i.i.i, align 8, !tbaa !87
  br label %field_type.exit.i.i

field_type.exit.i.i:                              ; preds = %if.then3.i.i105.i, %if.end.i.i104.i
  %retval.0.i.i.i = phi %union.tree_node* [ %178, %if.then3.i.i105.i ], [ %177, %if.end.i.i104.i ]
  %code.i208.i = getelementptr inbounds %union.tree_node* %retval.0.i.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i209.i = load i32* %code.i208.i, align 8
  %bf.clear.i210.i = and i32 %bf.load.i209.i, 255
  %cmp.i211.i = icmp eq i32 %bf.clear.i210.i, 0
  br i1 %cmp.i211.i, label %if.then.i212.i, label %if.else.i214.i

if.then.i212.i:                                   ; preds = %field_type.exit.i.i
  %179 = load i32* @target_flags, align 4, !tbaa !4
  %and.i.i = lshr i32 %179, 20
  %180 = and i32 %and.i.i, 32
  %181 = add i32 %180, 32
  %conv19.i.i = zext i32 %181 to i64
  br label %simple_type_size_in_bits.exit.i

if.else.i214.i:                                   ; preds = %field_type.exit.i.i
  %size.i.i = getelementptr inbounds %union.tree_node* %retval.0.i.i.i, i64 0, i32 0, i32 2
  %182 = bitcast i32* %size.i.i to %union.tree_node**
  %183 = load %union.tree_node** %182, align 8, !tbaa !110
  %cmp2.i213.i = icmp eq %union.tree_node* %183, null
  br i1 %cmp2.i213.i, label %simple_type_size_in_bits.exit.i, label %if.else5.i.i

if.else5.i.i:                                     ; preds = %if.else.i214.i
  %call.i215.i = tail call i32 @host_integerp(%union.tree_node* %183, i32 1) #5
  %tobool8.i.i = icmp eq i32 %call.i215.i, 0
  br i1 %tobool8.i.i, label %if.else13.i.i, label %if.then9.i.i

if.then9.i.i:                                     ; preds = %if.else5.i.i
  %184 = load %union.tree_node** %182, align 8, !tbaa !110
  %call12.i.i = tail call i64 @tree_low_cst(%union.tree_node* %184, i32 1) #5
  br label %simple_type_size_in_bits.exit.i

if.else13.i.i:                                    ; preds = %if.else5.i.i
  %align.i.i = getelementptr inbounds %union.tree_node* %retval.0.i.i.i, i64 0, i32 0, i32 7
  %185 = bitcast %union.tree_node** %align.i.i to i32*
  %186 = load i32* %185, align 4, !tbaa !111
  %conv15.i.i = zext i32 %186 to i64
  br label %simple_type_size_in_bits.exit.i

simple_type_size_in_bits.exit.i:                  ; preds = %if.else13.i.i, %if.then9.i.i, %if.else.i214.i, %if.then.i212.i
  %retval.0.i.i = phi i64 [ %conv19.i.i, %if.then.i212.i ], [ %call12.i.i, %if.then9.i.i ], [ %conv15.i.i, %if.else13.i.i ], [ 0, %if.else.i214.i ]
  %div.i.i = lshr i64 %retval.0.i.i, 3
  br label %sw.epilog.i.i

sw.default.i.i:                                   ; preds = %if.then11.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9320, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.add_byte_size_attribute, i64 0, i64 0)) #7
  unreachable

sw.epilog.i.i:                                    ; preds = %simple_type_size_in_bits.exit.i, %sw.bb1.i.i, %if.then11.i
  %size.0.i.i = phi i64 [ %div.i.i, %simple_type_size_in_bits.exit.i ], [ %call.i102.i, %sw.bb1.i.i ], [ 0, %if.then11.i ]
  %conv6.i.i = and i64 %size.0.i.i, 4294967295
  %call.i.i106.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i107.i = getelementptr inbounds i8* %call.i.i106.i, i64 8
  %187 = bitcast i8* %dw_attr_next.i.i107.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %187, align 8, !tbaa !72
  %dw_attr.i.i108.i = bitcast i8* %call.i.i106.i to i32*
  store i32 11, i32* %dw_attr.i.i108.i, align 4, !tbaa !57
  %dw_attr_val.i.i109.i = getelementptr inbounds i8* %call.i.i106.i, i64 16
  %val_class.i.i110.i = bitcast i8* %dw_attr_val.i.i109.i to i32*
  store i32 6, i32* %val_class.i.i110.i, align 4, !tbaa !59
  %v.i.i111.i = getelementptr inbounds i8* %call.i.i106.i, i64 24
  %val_unsigned.i.i.i = bitcast i8* %v.i.i111.i to i64*
  store i64 %conv6.i.i, i64* %val_unsigned.i.i.i, align 8, !tbaa !8
  %cmp.i.i.i112.i = icmp ne %struct.die_struct* %type_die.0.i, null
  %cmp1.i.i.i113.i = icmp ne i8* %call.i.i106.i, null
  %or.cond.i.i.i114.i = and i1 %cmp.i.i.i112.i, %cmp1.i.i.i113.i
  br i1 %or.cond.i.i.i114.i, label %if.then.i.i.i116.i, label %add_byte_size_attribute.exit.i

if.then.i.i.i116.i:                               ; preds = %sw.epilog.i.i
  %188 = bitcast i8* %call.i.i106.i to %struct.dw_attr_struct*
  %die_attr.i.i.i115.i = getelementptr inbounds %struct.die_struct* %type_die.0.i, i64 0, i32 2
  %189 = load %struct.dw_attr_struct** %die_attr.i.i.i115.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %189, %struct.dw_attr_struct** %187, align 8, !tbaa !72
  store %struct.dw_attr_struct* %188, %struct.dw_attr_struct** %die_attr.i.i.i115.i, align 8, !tbaa !73
  br label %add_byte_size_attribute.exit.i

add_byte_size_attribute.exit.i:                   ; preds = %if.then.i.i.i116.i, %sw.epilog.i.i
  %chain.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 0
  %190 = load %union.tree_node** %chain.i, align 8, !tbaa !88
  %cmp13.i = icmp eq %union.tree_node* %190, null
  br i1 %cmp13.i, label %if.end17.i, label %if.then14.i

if.then14.i:                                      ; preds = %add_byte_size_attribute.exit.i
  %filename.i.i = getelementptr inbounds %union.tree_node* %190, i64 0, i32 0, i32 1
  %191 = load i8** %filename.i.i, align 8, !tbaa !127
  %call.i117.i = tail call fastcc i32 @lookup_filename(i8* %191) #5
  %conv.i.i = zext i32 %call.i117.i to i64
  %call.i.i118.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i119.i = getelementptr inbounds i8* %call.i.i118.i, i64 8
  %192 = bitcast i8* %dw_attr_next.i.i119.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %192, align 8, !tbaa !72
  %dw_attr.i.i120.i = bitcast i8* %call.i.i118.i to i32*
  store i32 58, i32* %dw_attr.i.i120.i, align 4, !tbaa !57
  %dw_attr_val.i.i121.i = getelementptr inbounds i8* %call.i.i118.i, i64 16
  %val_class.i.i122.i = bitcast i8* %dw_attr_val.i.i121.i to i32*
  store i32 6, i32* %val_class.i.i122.i, align 4, !tbaa !59
  %v.i.i123.i = getelementptr inbounds i8* %call.i.i118.i, i64 24
  %val_unsigned.i.i124.i = bitcast i8* %v.i.i123.i to i64*
  store i64 %conv.i.i, i64* %val_unsigned.i.i124.i, align 8, !tbaa !8
  %cmp1.i.i.i126.i = icmp ne i8* %call.i.i118.i, null
  %or.cond.i.i.i127.i = and i1 %cmp.i.i.i112.i, %cmp1.i.i.i126.i
  br i1 %or.cond.i.i.i127.i, label %if.then.i.i.i129.i, label %add_AT_unsigned.exit.i.i

if.then.i.i.i129.i:                               ; preds = %if.then14.i
  %193 = bitcast i8* %call.i.i118.i to %struct.dw_attr_struct*
  %die_attr.i.i.i128.i = getelementptr inbounds %struct.die_struct* %type_die.0.i, i64 0, i32 2
  %194 = load %struct.dw_attr_struct** %die_attr.i.i.i128.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %194, %struct.dw_attr_struct** %192, align 8, !tbaa !72
  store %struct.dw_attr_struct* %193, %struct.dw_attr_struct** %die_attr.i.i.i128.i, align 8, !tbaa !73
  br label %add_AT_unsigned.exit.i.i

add_AT_unsigned.exit.i.i:                         ; preds = %if.then.i.i.i129.i, %if.then14.i
  %linenum.i.i = getelementptr inbounds %union.tree_node* %190, i64 0, i32 0, i32 2
  %195 = load i32* %linenum.i.i, align 4, !tbaa !91
  %conv3.i.i = sext i32 %195 to i64
  %call.i6.i.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i7.i.i = getelementptr inbounds i8* %call.i6.i.i, i64 8
  %196 = bitcast i8* %dw_attr_next.i7.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %196, align 8, !tbaa !72
  %dw_attr.i8.i.i = bitcast i8* %call.i6.i.i to i32*
  store i32 59, i32* %dw_attr.i8.i.i, align 4, !tbaa !57
  %dw_attr_val.i9.i.i = getelementptr inbounds i8* %call.i6.i.i, i64 16
  %val_class.i10.i.i = bitcast i8* %dw_attr_val.i9.i.i to i32*
  store i32 6, i32* %val_class.i10.i.i, align 4, !tbaa !59
  %v.i11.i.i = getelementptr inbounds i8* %call.i6.i.i, i64 24
  %val_unsigned.i12.i.i = bitcast i8* %v.i11.i.i to i64*
  store i64 %conv3.i.i, i64* %val_unsigned.i12.i.i, align 8, !tbaa !8
  %cmp1.i.i14.i.i = icmp ne i8* %call.i6.i.i, null
  %or.cond.i.i15.i.i = and i1 %cmp.i.i.i112.i, %cmp1.i.i14.i.i
  br i1 %or.cond.i.i15.i.i, label %if.then.i.i17.i.i, label %if.end17.i

if.then.i.i17.i.i:                                ; preds = %add_AT_unsigned.exit.i.i
  %197 = bitcast i8* %call.i6.i.i to %struct.dw_attr_struct*
  %die_attr.i.i16.i.i = getelementptr inbounds %struct.die_struct* %type_die.0.i, i64 0, i32 2
  %198 = load %struct.dw_attr_struct** %die_attr.i.i16.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %198, %struct.dw_attr_struct** %196, align 8, !tbaa !72
  store %struct.dw_attr_struct* %197, %struct.dw_attr_struct** %die_attr.i.i16.i.i, align 8, !tbaa !73
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then.i.i17.i.i, %add_AT_unsigned.exit.i.i, %add_byte_size_attribute.exit.i
  %die_parent.i = getelementptr inbounds %struct.die_struct* %type_die.0.i, i64 0, i32 3
  %199 = load %struct.die_struct** %die_parent.i, align 8, !tbaa !55
  %cmp18.i = icmp eq %struct.die_struct* %199, null
  br i1 %cmp18.i, label %if.then19.i, label %if.end21.i

if.then19.i:                                      ; preds = %if.end17.i
  %call20.i = tail call fastcc %struct.die_struct* @scope_die_for(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die.addr.0) #5
  %cmp.i130.i = icmp ne %struct.die_struct* %call20.i, null
  %or.cond.i.i = and i1 %cmp.i130.i, %cmp.i.i.i112.i
  br i1 %or.cond.i.i, label %if.then.i132.i, label %if.end21.i

if.then.i132.i:                                   ; preds = %if.then19.i
  %cmp2.i.i = icmp eq %struct.die_struct* %call20.i, %type_die.0.i
  br i1 %cmp2.i.i, label %if.then3.i133.i, label %if.end.i134.i

if.then3.i133.i:                                  ; preds = %if.then.i132.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i134.i:                                    ; preds = %if.then.i132.i
  store %struct.die_struct* %call20.i, %struct.die_struct** %die_parent.i, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %call20.i, i64 0, i32 4
  %200 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds %struct.die_struct* %type_die.0.i, i64 0, i32 5
  store %struct.die_struct* %200, %struct.die_struct** %die_sib.i.i, align 8, !tbaa !63
  store %struct.die_struct* %type_die.0.i, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end.i134.i, %if.then19.i, %if.end17.i
  %values.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 1
  %201 = load i8** %values.i, align 8
  %cmp23222.i = icmp eq i8* %201, null
  br i1 %cmp23222.i, label %if.end146, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end21.i
  %202 = bitcast i8* %201 to %union.tree_node*
  %cmp.i137.i = icmp eq %struct.die_struct* %type_die.0.i, null
  %die_child.i.i144.i = getelementptr inbounds %struct.die_struct* %type_die.0.i, i64 0, i32 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %link.0223.i = phi %union.tree_node* [ %202, %for.body.lr.ph.i ], [ %236, %for.inc.i ]
  %call.i135.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %203 = bitcast i8* %call.i135.i to %struct.die_struct*
  %die_tag.i136.i = bitcast i8* %call.i135.i to i32*
  store i32 40, i32* %die_tag.i136.i, align 4, !tbaa !69
  br i1 %cmp.i137.i, label %if.else.i151.i, label %if.then.i139.i

if.then.i139.i:                                   ; preds = %for.body.i
  %cmp1.i.i138.i = icmp eq i8* %call.i135.i, null
  br i1 %cmp1.i.i138.i, label %new_die.exit153.i, label %if.then.i.i141.i

if.then.i.i141.i:                                 ; preds = %if.then.i139.i
  %cmp2.i.i140.i = icmp eq %struct.die_struct* %203, %type_die.0.i
  br i1 %cmp2.i.i140.i, label %if.then3.i.i142.i, label %if.end.i.i146.i

if.then3.i.i142.i:                                ; preds = %if.then.i.i141.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i146.i:                                  ; preds = %if.then.i.i141.i
  %die_parent.i.i143.i = getelementptr inbounds i8* %call.i135.i, i64 24
  %204 = bitcast i8* %die_parent.i.i143.i to %struct.die_struct**
  store %struct.die_struct* %type_die.0.i, %struct.die_struct** %204, align 8, !tbaa !55
  %205 = load %struct.die_struct** %die_child.i.i144.i, align 8, !tbaa !62
  %die_sib.i.i145.i = getelementptr inbounds i8* %call.i135.i, i64 40
  %206 = bitcast i8* %die_sib.i.i145.i to %struct.die_struct**
  store %struct.die_struct* %205, %struct.die_struct** %206, align 8, !tbaa !63
  store %struct.die_struct* %203, %struct.die_struct** %die_child.i.i144.i, align 8, !tbaa !62
  br label %new_die.exit153.i

if.else.i151.i:                                   ; preds = %for.body.i
  %call1.i147.i = tail call noalias i8* @xmalloc(i64 24) #5
  %207 = bitcast i8* %call1.i147.i to %struct.limbo_die_struct*
  %die2.i148.i = bitcast i8* %call1.i147.i to %struct.die_struct**
  store %struct.die_struct* %203, %struct.die_struct** %die2.i148.i, align 8, !tbaa !54
  %created_for.i149.i = getelementptr inbounds i8* %call1.i147.i, i64 8
  %208 = bitcast i8* %created_for.i149.i to %union.tree_node**
  store %union.tree_node* %link.0223.i, %union.tree_node** %208, align 8, !tbaa !64
  %209 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i150.i = getelementptr inbounds i8* %call1.i147.i, i64 16
  %210 = bitcast i8* %next.i150.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %209, %struct.limbo_die_struct** %210, align 8, !tbaa !52
  store %struct.limbo_die_struct* %207, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit153.i

new_die.exit153.i:                                ; preds = %if.else.i151.i, %if.end.i.i146.i, %if.then.i139.i
  %purpose.i = getelementptr inbounds %union.tree_node* %link.0223.i, i64 0, i32 0, i32 1
  %211 = load i8** %purpose.i, align 8
  %str.i = getelementptr inbounds i8* %211, i64 32
  %212 = bitcast i8* %str.i to i8**
  %213 = load i8** %212, align 8, !tbaa !105
  %cmp.i154.i = icmp eq i8* %213, null
  br i1 %cmp.i154.i, label %add_name_attribute.exit185.i, label %land.lhs.true.i156.i

land.lhs.true.i156.i:                             ; preds = %new_die.exit153.i
  %214 = load i8* %213, align 1, !tbaa !1
  %cmp1.i155.i = icmp eq i8 %214, 0
  br i1 %cmp1.i155.i, label %add_name_attribute.exit185.i, label %if.then.i158.i

if.then.i158.i:                                   ; preds = %land.lhs.true.i156.i
  %215 = load i8* (i8*)** @demangle_name_func, align 8, !tbaa !6
  %tobool.i157.i = icmp eq i8* (i8*)* %215, null
  br i1 %tobool.i157.i, label %if.end.i164.i, label %if.then3.i160.i

if.then3.i160.i:                                  ; preds = %if.then.i158.i
  %call.i159.i = tail call i8* %215(i8* %213) #5
  br label %if.end.i164.i

if.end.i164.i:                                    ; preds = %if.then3.i160.i, %if.then.i158.i
  %name_string.addr.0.i161.i = phi i8* [ %call.i159.i, %if.then3.i160.i ], [ %213, %if.then.i158.i ]
  %call.i.i162.i = tail call noalias i8* @xmalloc(i64 40) #5
  %216 = bitcast i8* %call.i.i162.i to %struct.dw_attr_struct*
  %217 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i.i163.i = icmp eq %struct.ht* %217, null
  br i1 %tobool.i.i163.i, label %if.then.i.i168.i, label %if.end.i.i182.i

if.then.i.i168.i:                                 ; preds = %if.end.i164.i
  %call1.i.i165.i = tail call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i.i165.i, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i.i166.i = getelementptr inbounds %struct.ht* %call1.i.i165.i, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i.i166.i, align 8, !tbaa !81
  %.pre.i.i167.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i.i182.i

if.end.i.i182.i:                                  ; preds = %if.then.i.i168.i, %if.end.i164.i
  %218 = phi %struct.ht* [ %217, %if.end.i164.i ], [ %.pre.i.i167.i, %if.then.i.i168.i ]
  %call2.i.i169.i = tail call i64 @strlen(i8* %name_string.addr.0.i161.i) #5
  %conv.i.i170.i = trunc i64 %call2.i.i169.i to i32
  %call3.i.i171.i = tail call %struct.ht_identifier* @ht_lookup(%struct.ht* %218, i8* %name_string.addr.0.i161.i, i32 %conv.i.i170.i, i32 1) #5
  %219 = bitcast %struct.ht_identifier* %call3.i.i171.i to %struct.indirect_string_node*
  %220 = getelementptr inbounds %struct.ht_identifier* %call3.i.i171.i, i64 1, i32 0
  %221 = load i32* %220, align 4, !tbaa !84
  %inc.i.i172.i = add i32 %221, 1
  store i32 %inc.i.i172.i, i32* %220, align 4, !tbaa !84
  %dw_attr_next.i.i173.i = getelementptr inbounds i8* %call.i.i162.i, i64 8
  %222 = bitcast i8* %dw_attr_next.i.i173.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %222, align 8, !tbaa !72
  %dw_attr.i.i174.i = bitcast i8* %call.i.i162.i to i32*
  store i32 3, i32* %dw_attr.i.i174.i, align 4, !tbaa !57
  %dw_attr_val.i.i175.i = getelementptr inbounds i8* %call.i.i162.i, i64 16
  %val_class.i.i176.i = bitcast i8* %dw_attr_val.i.i175.i to i32*
  store i32 14, i32* %val_class.i.i176.i, align 4, !tbaa !59
  %v.i.i177.i = getelementptr inbounds i8* %call.i.i162.i, i64 24
  %val_str.i.i178.i = bitcast i8* %v.i.i177.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %219, %struct.indirect_string_node** %val_str.i.i178.i, align 8, !tbaa !6
  %cmp.i.i.i179.i = icmp ne i8* %call.i135.i, null
  %cmp1.i.i.i180.i = icmp ne i8* %call.i.i162.i, null
  %or.cond.i.i.i181.i = and i1 %cmp.i.i.i179.i, %cmp1.i.i.i180.i
  br i1 %or.cond.i.i.i181.i, label %if.then.i.i.i184.i, label %add_name_attribute.exit185.i

if.then.i.i.i184.i:                               ; preds = %if.end.i.i182.i
  %die_attr.i.i.i183.i = getelementptr inbounds i8* %call.i135.i, i64 16
  %223 = bitcast i8* %die_attr.i.i.i183.i to %struct.dw_attr_struct**
  %224 = load %struct.dw_attr_struct** %223, align 8, !tbaa !73
  store %struct.dw_attr_struct* %224, %struct.dw_attr_struct** %222, align 8, !tbaa !72
  store %struct.dw_attr_struct* %216, %struct.dw_attr_struct** %223, align 8, !tbaa !73
  br label %add_name_attribute.exit185.i

add_name_attribute.exit185.i:                     ; preds = %if.then.i.i.i184.i, %if.end.i.i182.i, %land.lhs.true.i156.i, %new_die.exit153.i
  %value.i = getelementptr inbounds %union.tree_node* %link.0223.i, i64 0, i32 0, i32 2
  %225 = bitcast i32* %value.i to %union.tree_node**
  %226 = load %union.tree_node** %225, align 8, !tbaa !93
  %call26.i = tail call i32 @host_integerp(%union.tree_node* %226, i32 0) #5
  %tobool27.i = icmp eq i32 %call26.i, 0
  br i1 %tobool27.i, label %for.inc.i, label %if.then28.i

if.then28.i:                                      ; preds = %add_name_attribute.exit185.i
  %227 = load %union.tree_node** %225, align 8, !tbaa !93
  %call31.i = tail call i32 @tree_int_cst_sgn(%union.tree_node* %227) #5
  %cmp32.i = icmp slt i32 %call31.i, 0
  %228 = load %union.tree_node** %225, align 8, !tbaa !93
  %call36.i = tail call i64 @tree_low_cst(%union.tree_node* %228, i32 0) #5
  %call.i186.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i187.i = getelementptr inbounds i8* %call.i186.i, i64 8
  %229 = bitcast i8* %dw_attr_next.i187.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %229, align 8, !tbaa !72
  %dw_attr.i188.i = bitcast i8* %call.i186.i to i32*
  store i32 28, i32* %dw_attr.i188.i, align 4, !tbaa !57
  %dw_attr_val.i189.i = getelementptr inbounds i8* %call.i186.i, i64 16
  %val_class.i190.i = bitcast i8* %dw_attr_val.i189.i to i32*
  br i1 %cmp32.i, label %if.then33.i, label %if.else37.i

if.then33.i:                                      ; preds = %if.then28.i
  store i32 5, i32* %val_class.i190.i, align 4, !tbaa !59
  %v.i191.i = getelementptr inbounds i8* %call.i186.i, i64 24
  %val_int.i.i = bitcast i8* %v.i191.i to i64*
  store i64 %call36.i, i64* %val_int.i.i, align 8, !tbaa !8
  %cmp.i.i192.i = icmp ne i8* %call.i135.i, null
  %cmp1.i.i193.i = icmp ne i8* %call.i186.i, null
  %or.cond.i.i194.i = and i1 %cmp.i.i192.i, %cmp1.i.i193.i
  br i1 %or.cond.i.i194.i, label %if.then.i.i196.i, label %for.inc.i

if.then.i.i196.i:                                 ; preds = %if.then33.i
  %230 = bitcast i8* %call.i186.i to %struct.dw_attr_struct*
  %die_attr.i.i195.i = getelementptr inbounds i8* %call.i135.i, i64 16
  %231 = bitcast i8* %die_attr.i.i195.i to %struct.dw_attr_struct**
  %232 = load %struct.dw_attr_struct** %231, align 8, !tbaa !73
  store %struct.dw_attr_struct* %232, %struct.dw_attr_struct** %229, align 8, !tbaa !72
  store %struct.dw_attr_struct* %230, %struct.dw_attr_struct** %231, align 8, !tbaa !73
  br label %for.inc.i

if.else37.i:                                      ; preds = %if.then28.i
  store i32 6, i32* %val_class.i190.i, align 4, !tbaa !59
  %v.i202.i = getelementptr inbounds i8* %call.i186.i, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i202.i to i64*
  store i64 %call36.i, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %cmp.i.i203.i = icmp ne i8* %call.i135.i, null
  %cmp1.i.i204.i = icmp ne i8* %call.i186.i, null
  %or.cond.i.i205.i = and i1 %cmp.i.i203.i, %cmp1.i.i204.i
  br i1 %or.cond.i.i205.i, label %if.then.i.i207.i, label %for.inc.i

if.then.i.i207.i:                                 ; preds = %if.else37.i
  %233 = bitcast i8* %call.i186.i to %struct.dw_attr_struct*
  %die_attr.i.i206.i = getelementptr inbounds i8* %call.i135.i, i64 16
  %234 = bitcast i8* %die_attr.i.i206.i to %struct.dw_attr_struct**
  %235 = load %struct.dw_attr_struct** %234, align 8, !tbaa !73
  store %struct.dw_attr_struct* %235, %struct.dw_attr_struct** %229, align 8, !tbaa !72
  store %struct.dw_attr_struct* %233, %struct.dw_attr_struct** %234, align 8, !tbaa !73
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i.i207.i, %if.else37.i, %if.then.i.i196.i, %if.then33.i, %add_name_attribute.exit185.i
  %chain44.i = getelementptr inbounds %union.tree_node* %link.0223.i, i64 0, i32 0, i32 0, i32 0
  %236 = load %union.tree_node** %chain44.i, align 8, !tbaa !88
  %cmp23.i = icmp eq %union.tree_node* %236, null
  br i1 %cmp23.i, label %if.end146, label %for.body.i

if.else45.i:                                      ; preds = %if.end7.i
  %call.i.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %237 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %237, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i.i to i32*
  store i32 60, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 9, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  store i8 1, i8* %v.i.i, align 1, !tbaa !1
  %cmp.i.i.i = icmp ne %struct.die_struct* %type_die.0.i, null
  %cmp1.i.i.i = icmp ne i8* %call.i.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %if.end146

if.then.i.i.i:                                    ; preds = %if.else45.i
  %238 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %die_attr.i.i.i = getelementptr inbounds %struct.die_struct* %type_die.0.i, i64 0, i32 2
  %239 = load %struct.dw_attr_struct** %die_attr.i.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %239, %struct.dw_attr_struct** %237, align 8, !tbaa !72
  store %struct.dw_attr_struct* %238, %struct.dw_attr_struct** %die_attr.i.i.i, align 8, !tbaa !73
  br label %if.end146

if.else145:                                       ; preds = %if.end138
  %size.i357 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 2
  %240 = bitcast i32* %size.i357 to %union.tree_node**
  %241 = load %union.tree_node** %240, align 8, !tbaa !110
  %tobool.i358 = icmp eq %union.tree_node* %241, null
  br i1 %tobool.i358, label %land.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.else145
  %chain.i359 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 0
  %242 = load %union.tree_node** %chain.i359, align 8, !tbaa !88
  %tobool2.i = icmp eq %union.tree_node* %242, null
  br i1 %tobool2.i, label %land.end.i.thread, label %lor.rhs.i

land.end.i.thread:                                ; preds = %land.rhs.i
  %tobool6.i818 = icmp eq %union.tree_node* %type.idx.val.i, null
  br label %if.end.i

lor.rhs.i:                                        ; preds = %land.rhs.i
  %external_flag.i = getelementptr inbounds %union.tree_node* %242, i64 0, i32 0, i32 5
  %243 = bitcast i48* %external_flag.i to i64*
  %bf.load.i360 = load i64* %243, align 8
  %bf.cast.i = and i64 %bf.load.i360, 256
  %lnot.i = icmp eq i64 %bf.cast.i, 0
  br label %land.end.i

land.end.i:                                       ; preds = %lor.rhs.i, %if.else145
  %244 = phi i1 [ false, %if.else145 ], [ %lnot.i, %lor.rhs.i ]
  %tobool6.i = icmp eq %union.tree_node* %type.idx.val.i, null
  %or.cond.i = or i1 %tobool6.i, %244
  br i1 %or.cond.i, label %if.end.i, label %if.end146

if.end.i:                                         ; preds = %land.end.i.thread, %land.end.i
  %tobool6.i820 = phi i1 [ %tobool6.i818, %land.end.i.thread ], [ %tobool6.i, %land.end.i ]
  %245 = phi i1 [ true, %land.end.i.thread ], [ %244, %land.end.i ]
  %cmp.i361 = icmp eq %struct.rtx_def* %138, null
  br i1 %cmp.i361, label %if.end48.i, label %land.lhs.true9.i

land.lhs.true9.i:                                 ; preds = %if.end.i
  %246 = getelementptr inbounds %struct.rtx_def* %138, i64 1, i32 0
  %bf.load13.i = load i32* %246, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 255
  %bf.clear14.off.i = add i32 %bf.clear14.i, -18
  %switch.i = icmp ult i32 %bf.clear14.off.i, 5
  %..i = zext i1 %switch.i to i32
  br label %if.end48.i

if.end48.i:                                       ; preds = %land.lhs.true9.i, %if.end.i
  %nested.0.i = phi i32 [ 0, %if.end.i ], [ %..i, %land.lhs.true9.i ]
  %call49.i = tail call fastcc %struct.die_struct* @scope_die_for(%union.tree_node* %type.addr.1.i, %struct.die_struct* %context_die.addr.0) #5
  %tobool50.i = icmp ne %union.tree_node* %type.idx.val.i, null
  br i1 %tobool50.i, label %lor.lhs.false51.i, label %if.then55.i

lor.lhs.false51.i:                                ; preds = %if.end48.i
  %tobool52.i = icmp ne i32 %nested.0.i, 0
  %247 = load %struct.die_struct** @comp_unit_die, align 8
  %cmp54.i = icmp eq %struct.die_struct* %call49.i, %247
  %or.cond152.i = and i1 %tobool52.i, %cmp54.i
  br i1 %or.cond152.i, label %if.then55.i, label %if.else66.i

if.then55.i:                                      ; preds = %lor.lhs.false51.i, %if.end48.i
  %bf.load58.i = load i32* %asm_written_flag, align 8
  %bf.clear59.i = and i32 %bf.load58.i, 255
  %cmp60.i = icmp eq i32 %bf.clear59.i, 20
  %cond.i = select i1 %cmp60.i, i32 19, i32 23
  %call.i.i362 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %248 = bitcast i8* %call.i.i362 to %struct.die_struct*
  %die_tag.i.i363 = bitcast i8* %call.i.i362 to i32*
  store i32 %cond.i, i32* %die_tag.i.i363, align 4, !tbaa !69
  %cmp.i.i364 = icmp eq %struct.die_struct* %call49.i, null
  br i1 %cmp.i.i364, label %if.else.i.i378, label %if.then.i.i366

if.then.i.i366:                                   ; preds = %if.then55.i
  %cmp1.i.i.i365 = icmp eq i8* %call.i.i362, null
  br i1 %cmp1.i.i.i365, label %new_die.exit.i381, label %if.then.i.i.i368

if.then.i.i.i368:                                 ; preds = %if.then.i.i366
  %cmp2.i.i.i367 = icmp eq %struct.die_struct* %248, %call49.i
  br i1 %cmp2.i.i.i367, label %if.then3.i.i.i369, label %if.end.i.i.i373

if.then3.i.i.i369:                                ; preds = %if.then.i.i.i368
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i373:                                  ; preds = %if.then.i.i.i368
  %die_parent.i.i.i370 = getelementptr inbounds i8* %call.i.i362, i64 24
  %249 = bitcast i8* %die_parent.i.i.i370 to %struct.die_struct**
  store %struct.die_struct* %call49.i, %struct.die_struct** %249, align 8, !tbaa !55
  %die_child.i.i.i371 = getelementptr inbounds %struct.die_struct* %call49.i, i64 0, i32 4
  %250 = load %struct.die_struct** %die_child.i.i.i371, align 8, !tbaa !62
  %die_sib.i.i.i372 = getelementptr inbounds i8* %call.i.i362, i64 40
  %251 = bitcast i8* %die_sib.i.i.i372 to %struct.die_struct**
  store %struct.die_struct* %250, %struct.die_struct** %251, align 8, !tbaa !63
  store %struct.die_struct* %248, %struct.die_struct** %die_child.i.i.i371, align 8, !tbaa !62
  br label %new_die.exit.i381

if.else.i.i378:                                   ; preds = %if.then55.i
  %call1.i.i374 = tail call noalias i8* @xmalloc(i64 24) #5
  %252 = bitcast i8* %call1.i.i374 to %struct.limbo_die_struct*
  %die2.i.i375 = bitcast i8* %call1.i.i374 to %struct.die_struct**
  store %struct.die_struct* %248, %struct.die_struct** %die2.i.i375, align 8, !tbaa !54
  %created_for.i.i376 = getelementptr inbounds i8* %call1.i.i374, i64 8
  %253 = bitcast i8* %created_for.i.i376 to %union.tree_node**
  store %union.tree_node* %type.addr.1.i, %union.tree_node** %253, align 8, !tbaa !64
  %254 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i377 = getelementptr inbounds i8* %call1.i.i374, i64 16
  %255 = bitcast i8* %next.i.i377 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %254, %struct.limbo_die_struct** %255, align 8, !tbaa !52
  store %struct.limbo_die_struct* %252, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i381

new_die.exit.i381:                                ; preds = %if.else.i.i378, %if.end.i.i.i373, %if.then.i.i366
  %.c.i.i380 = bitcast i8* %call.i.i362 to %union.tree_node*
  store %union.tree_node* %.c.i.i380, %union.tree_node** %type.idx.i, align 8, !tbaa !6
  br i1 %tobool50.i, label %if.then63.i, label %if.else.i392

if.then63.i:                                      ; preds = %new_die.exit.i381
  %call.i154.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i382 = getelementptr inbounds i8* %call.i154.i, i64 8
  %256 = bitcast i8* %dw_attr_next.i.i382 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %256, align 8, !tbaa !72
  %dw_attr.i.i383 = bitcast i8* %call.i154.i to i32*
  store i32 71, i32* %dw_attr.i.i383, align 4, !tbaa !57
  %dw_attr_val.i.i384 = getelementptr inbounds i8* %call.i154.i, i64 16
  %val_class.i.i385 = bitcast i8* %dw_attr_val.i.i384 to i32*
  store i32 10, i32* %val_class.i.i385, align 4, !tbaa !59
  %v.i.i386 = getelementptr inbounds i8* %call.i154.i, i64 24
  %die2.i155.i = bitcast i8* %v.i.i386 to %struct.die_struct**
  store %struct.die_struct* %139, %struct.die_struct** %die2.i155.i, align 8, !tbaa !60
  %external.i.i387 = getelementptr inbounds i8* %call.i154.i, i64 32
  %257 = bitcast i8* %external.i.i387 to i32*
  store i32 0, i32* %257, align 4, !tbaa !108
  %cmp.i.i.i388 = icmp ne i8* %call.i.i362, null
  %cmp1.i.i156.i = icmp ne i8* %call.i154.i, null
  %or.cond.i.i.i389 = and i1 %cmp.i.i.i388, %cmp1.i.i156.i
  br i1 %or.cond.i.i.i389, label %if.then.i.i157.i, label %if.end67.i

if.then.i.i157.i:                                 ; preds = %if.then63.i
  %258 = bitcast i8* %call.i154.i to %struct.dw_attr_struct*
  %die_attr.i.i.i390 = getelementptr inbounds i8* %call.i.i362, i64 16
  %259 = bitcast i8* %die_attr.i.i.i390 to %struct.dw_attr_struct**
  %260 = load %struct.dw_attr_struct** %259, align 8, !tbaa !73
  store %struct.dw_attr_struct* %260, %struct.dw_attr_struct** %256, align 8, !tbaa !72
  store %struct.dw_attr_struct* %258, %struct.dw_attr_struct** %259, align 8, !tbaa !73
  br label %if.end67.i

if.else.i392:                                     ; preds = %new_die.exit.i381
  %type.idx153.val.i = load %union.tree_node** %3, align 8, !tbaa !102
  %cmp.i158.i = icmp eq %union.tree_node* %type.idx153.val.i, null
  br i1 %cmp.i158.i, label %if.end67.i, label %if.then.i159.i

if.then.i159.i:                                   ; preds = %if.else.i392
  %code.i.i393 = getelementptr inbounds %union.tree_node* %type.idx153.val.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i.i394 = load i32* %code.i.i393, align 8
  %bf.clear.i.i395 = and i32 %bf.load.i.i394, 255
  switch i32 %bf.clear.i.i395, label %if.end67.i [
    i32 1, label %if.end29.i.i407
    i32 33, label %land.lhs.true.i.i400
  ]

land.lhs.true.i.i400:                             ; preds = %if.then.i159.i
  %ignored_flag.i.i396 = getelementptr inbounds %union.tree_node* %type.idx153.val.i, i64 0, i32 0, i32 5
  %261 = bitcast i48* %ignored_flag.i.i396 to i64*
  %bf.load18.i.i397 = load i64* %261, align 8
  %bf.cast.i.i398 = and i64 %bf.load18.i.i397, 16384
  %tobool.i.i399 = icmp eq i64 %bf.cast.i.i398, 0
  br i1 %tobool.i.i399, label %if.end25.i.i403, label %if.end67.i

if.end25.i.i403:                                  ; preds = %land.lhs.true.i.i400
  %name24.i.i401 = getelementptr inbounds %union.tree_node* %type.idx153.val.i, i64 0, i32 0, i32 8
  %262 = load %union.tree_node** %name24.i.i401, align 8, !tbaa !86
  %cmp26.i.i402 = icmp eq %union.tree_node* %262, null
  br i1 %cmp26.i.i402, label %if.end67.i, label %if.end29.i.i407

if.end29.i.i407:                                  ; preds = %if.end25.i.i403, %if.then.i159.i
  %t.04.i.i404 = phi %union.tree_node* [ %262, %if.end25.i.i403 ], [ %type.idx153.val.i, %if.then.i159.i ]
  %id.i.i405 = getelementptr inbounds %union.tree_node* %t.04.i.i404, i64 0, i32 0, i32 1
  %263 = getelementptr inbounds i8** %id.i.i405, i64 1
  %264 = load i8** %263, align 8, !tbaa !105
  %cmp30.i.i406 = icmp eq i8* %264, null
  br i1 %cmp30.i.i406, label %if.end67.i, label %lor.lhs.false.i.i409

lor.lhs.false.i.i409:                             ; preds = %if.end29.i.i407
  %265 = load i8* %264, align 1, !tbaa !1
  %cmp31.i.i408 = icmp eq i8 %265, 0
  br i1 %cmp31.i.i408, label %if.end67.i, label %if.then.i164.i

if.then.i164.i:                                   ; preds = %lor.lhs.false.i.i409
  %266 = load i8* (i8*)** @demangle_name_func, align 8, !tbaa !6
  %tobool.i163.i = icmp eq i8* (i8*)* %266, null
  br i1 %tobool.i163.i, label %if.end.i.i414, label %if.then3.i.i410

if.then3.i.i410:                                  ; preds = %if.then.i164.i
  %call.i165.i = tail call i8* %266(i8* %264) #5
  br label %if.end.i.i414

if.end.i.i414:                                    ; preds = %if.then3.i.i410, %if.then.i164.i
  %name_string.addr.0.i.i411 = phi i8* [ %call.i165.i, %if.then3.i.i410 ], [ %264, %if.then.i164.i ]
  %call.i.i.i412 = tail call noalias i8* @xmalloc(i64 40) #5
  %267 = bitcast i8* %call.i.i.i412 to %struct.dw_attr_struct*
  %268 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i.i.i413 = icmp eq %struct.ht* %268, null
  br i1 %tobool.i.i.i413, label %if.then.i.i166.i, label %if.end.i.i167.i

if.then.i.i166.i:                                 ; preds = %if.end.i.i414
  %call1.i.i.i415 = tail call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i.i.i415, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i.i.i416 = getelementptr inbounds %struct.ht* %call1.i.i.i415, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i.i.i416, align 8, !tbaa !81
  %.pre.i.i.i417 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i.i167.i

if.end.i.i167.i:                                  ; preds = %if.then.i.i166.i, %if.end.i.i414
  %269 = phi %struct.ht* [ %268, %if.end.i.i414 ], [ %.pre.i.i.i417, %if.then.i.i166.i ]
  %call2.i.i.i418 = tail call i64 @strlen(i8* %name_string.addr.0.i.i411) #5
  %conv.i.i.i419 = trunc i64 %call2.i.i.i418 to i32
  %call3.i.i.i420 = tail call %struct.ht_identifier* @ht_lookup(%struct.ht* %269, i8* %name_string.addr.0.i.i411, i32 %conv.i.i.i419, i32 1) #5
  %270 = bitcast %struct.ht_identifier* %call3.i.i.i420 to %struct.indirect_string_node*
  %271 = getelementptr inbounds %struct.ht_identifier* %call3.i.i.i420, i64 1, i32 0
  %272 = load i32* %271, align 4, !tbaa !84
  %inc.i.i.i421 = add i32 %272, 1
  store i32 %inc.i.i.i421, i32* %271, align 4, !tbaa !84
  %dw_attr_next.i.i.i422 = getelementptr inbounds i8* %call.i.i.i412, i64 8
  %273 = bitcast i8* %dw_attr_next.i.i.i422 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %273, align 8, !tbaa !72
  %dw_attr.i.i.i423 = bitcast i8* %call.i.i.i412 to i32*
  store i32 3, i32* %dw_attr.i.i.i423, align 4, !tbaa !57
  %dw_attr_val.i.i.i424 = getelementptr inbounds i8* %call.i.i.i412, i64 16
  %val_class.i.i.i425 = bitcast i8* %dw_attr_val.i.i.i424 to i32*
  store i32 14, i32* %val_class.i.i.i425, align 4, !tbaa !59
  %v.i.i.i426 = getelementptr inbounds i8* %call.i.i.i412, i64 24
  %val_str.i.i.i427 = bitcast i8* %v.i.i.i426 to %struct.indirect_string_node**
  store %struct.indirect_string_node* %270, %struct.indirect_string_node** %val_str.i.i.i427, align 8, !tbaa !6
  %cmp.i.i.i.i428 = icmp ne i8* %call.i.i362, null
  %cmp1.i.i.i.i429 = icmp ne i8* %call.i.i.i412, null
  %or.cond.i.i.i.i430 = and i1 %cmp.i.i.i.i428, %cmp1.i.i.i.i429
  br i1 %or.cond.i.i.i.i430, label %if.then.i.i.i.i432, label %if.end67.i

if.then.i.i.i.i432:                               ; preds = %if.end.i.i167.i
  %die_attr.i.i.i.i431 = getelementptr inbounds i8* %call.i.i362, i64 16
  %274 = bitcast i8* %die_attr.i.i.i.i431 to %struct.dw_attr_struct**
  %275 = load %struct.dw_attr_struct** %274, align 8, !tbaa !73
  store %struct.dw_attr_struct* %275, %struct.dw_attr_struct** %273, align 8, !tbaa !72
  store %struct.dw_attr_struct* %267, %struct.dw_attr_struct** %274, align 8, !tbaa !73
  br label %if.end67.i

if.else66.i:                                      ; preds = %lor.lhs.false51.i
  br i1 %tobool6.i820, label %if.end67.i, label %if.then.i169.i

if.then.i169.i:                                   ; preds = %if.else66.i
  %die_attr.i.i433 = getelementptr inbounds %union.tree_node* %type.idx.val.i, i64 0, i32 0, i32 0, i32 2
  %276 = bitcast i32* %die_attr.i.i433 to %struct.dw_attr_struct**
  br label %for.cond.i.i435

for.cond.i.i435:                                  ; preds = %for.body.i.i436, %if.then.i169.i
  %p.0.i.i434 = phi %struct.dw_attr_struct** [ %276, %if.then.i169.i ], [ %dw_attr_next.i173.i, %for.body.i.i436 ]
  %277 = load %struct.dw_attr_struct** %p.0.i.i434, align 8, !tbaa !6
  %tobool.i170.i = icmp eq %struct.dw_attr_struct* %277, null
  br i1 %tobool.i170.i, label %if.end67.i, label %for.body.i.i436

for.body.i.i436:                                  ; preds = %for.cond.i.i435
  %dw_attr.i171.i = getelementptr inbounds %struct.dw_attr_struct* %277, i64 0, i32 0
  %278 = load i32* %dw_attr.i171.i, align 4, !tbaa !57
  %cmp1.i172.i = icmp eq i32 %278, 60
  %dw_attr_next.i173.i = getelementptr inbounds %struct.dw_attr_struct* %277, i64 0, i32 1
  br i1 %cmp1.i172.i, label %if.then5.i.i439, label %for.cond.i.i435

if.then5.i.i439:                                  ; preds = %for.body.i.i436
  %279 = load %struct.dw_attr_struct** %dw_attr_next.i173.i, align 8, !tbaa !72
  store %struct.dw_attr_struct* %279, %struct.dw_attr_struct** %p.0.i.i434, align 8, !tbaa !6
  %a.idx.i.i.i437 = getelementptr %struct.dw_attr_struct* %277, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i438 = load i32* %a.idx.i.i.i437, align 4, !tbaa !59
  switch i32 %a.idx.val.i.i.i438, label %free_AT.exit.i.i449 [
    i32 14, label %sw.bb.i.i.i441
    i32 12, label %sw.bb5.i.i.i445
    i32 13, label %sw.bb5.i.i.i445
    i32 8, label %sw.bb8.i.i.i448
  ]

sw.bb.i.i.i441:                                   ; preds = %if.then5.i.i439
  %v.i.i174.i = getelementptr inbounds %struct.dw_attr_struct* %277, i64 0, i32 2, i32 1
  %val_str.i.i175.i = bitcast %union.anon.3* %v.i.i174.i to %struct.indirect_string_node**
  %280 = load %struct.indirect_string_node** %val_str.i.i175.i, align 8, !tbaa !6
  %refcount.i.i.i440 = getelementptr inbounds %struct.indirect_string_node* %280, i64 0, i32 1
  %281 = load i32* %refcount.i.i.i440, align 4, !tbaa !84
  %tobool.i.i176.i = icmp eq i32 %281, 0
  br i1 %tobool.i.i176.i, label %free_AT.exit.i.i449, label %if.then.i.i177.i

if.then.i.i177.i:                                 ; preds = %sw.bb.i.i.i441
  %dec.i.i.i442 = add i32 %281, -1
  store i32 %dec.i.i.i442, i32* %refcount.i.i.i440, align 4, !tbaa !84
  br label %free_AT.exit.i.i449

sw.bb5.i.i.i445:                                  ; preds = %if.then5.i.i439, %if.then5.i.i439
  %v7.i.i.i443 = getelementptr inbounds %struct.dw_attr_struct* %277, i64 0, i32 2, i32 1
  %val_lbl_id.i.i.i444 = bitcast %union.anon.3* %v7.i.i.i443 to i8**
  %282 = load i8** %val_lbl_id.i.i.i444, align 8, !tbaa !6
  tail call void @free(i8* %282) #5
  br label %free_AT.exit.i.i449

sw.bb8.i.i.i448:                                  ; preds = %if.then5.i.i439
  %v10.i.i.i446 = getelementptr inbounds %struct.dw_attr_struct* %277, i64 0, i32 2, i32 1
  %array.i.i.i447 = bitcast %union.anon.3* %v10.i.i.i446 to i64**
  %283 = load i64** %array.i.i.i447, align 8, !tbaa !119
  %284 = bitcast i64* %283 to i8*
  tail call void @free(i8* %284) #5
  br label %free_AT.exit.i.i449

free_AT.exit.i.i449:                              ; preds = %sw.bb8.i.i.i448, %sw.bb5.i.i.i445, %if.then.i.i177.i, %sw.bb.i.i.i441, %if.then5.i.i439
  %285 = bitcast %struct.dw_attr_struct* %277 to i8*
  tail call void @free(i8* %285) #5
  br label %if.end67.i

if.end67.i:                                       ; preds = %for.cond.i.i435, %lor.lhs.false.i.i409, %if.else.i392, %if.then.i159.i, %land.lhs.true.i.i400, %if.end25.i.i403, %if.end29.i.i407, %if.else66.i, %free_AT.exit.i.i449, %if.end.i.i167.i, %if.then.i.i.i.i432, %if.then63.i, %if.then.i.i157.i
  %type_die.0.i450 = phi %struct.die_struct* [ %248, %if.then.i.i157.i ], [ %248, %if.then63.i ], [ %248, %if.then.i.i.i.i432 ], [ %248, %if.end.i.i167.i ], [ %139, %free_AT.exit.i.i449 ], [ %139, %if.else66.i ], [ %248, %if.end29.i.i407 ], [ %248, %if.end25.i.i403 ], [ %248, %land.lhs.true.i.i400 ], [ %248, %if.then.i159.i ], [ %248, %if.else.i392 ], [ %248, %lor.lhs.false.i.i409 ], [ %139, %for.cond.i.i435 ]
  br i1 %245, label %if.then69.i, label %if.else91.i

if.then69.i:                                      ; preds = %if.end67.i
  %bf.load71.i = load i32* %asm_written_flag, align 8
  %bf.set.i452 = or i32 %bf.load71.i, 16384
  store i32 %bf.set.i452, i32* %asm_written_flag, align 8
  %bf.clear.i180.i = and i32 %bf.load71.i, 255
  switch i32 %bf.clear.i180.i, label %sw.default.i.i459 [
    i32 0, label %sw.epilog.i.i463
    i32 10, label %sw.bb1.i.i453
    i32 20, label %sw.bb1.i.i453
    i32 21, label %sw.bb1.i.i453
    i32 22, label %sw.bb1.i.i453
    i32 37, label %if.end.i.i183.i
  ]

sw.bb1.i.i453:                                    ; preds = %if.then69.i, %if.then69.i, %if.then69.i, %if.then69.i
  %call.i181.i = tail call i64 @int_size_in_bytes(%union.tree_node* %type.addr.1.i) #5
  br label %sw.epilog.i.i463

if.end.i.i183.i:                                  ; preds = %if.then69.i
  %286 = load %union.tree_node** %3, align 8, !tbaa !104
  %cmp2.i.i182.i = icmp eq %union.tree_node* %286, null
  br i1 %cmp2.i.i182.i, label %if.then3.i.i184.i, label %field_type.exit.i.i458

if.then3.i.i184.i:                                ; preds = %if.end.i.i183.i
  %type5.i.i.i455 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 1
  %287 = load %union.tree_node** %type5.i.i.i455, align 8, !tbaa !87
  br label %field_type.exit.i.i458

field_type.exit.i.i458:                           ; preds = %if.then3.i.i184.i, %if.end.i.i183.i
  %retval.0.i.i.i456 = phi %union.tree_node* [ %287, %if.then3.i.i184.i ], [ %286, %if.end.i.i183.i ]
  %code.i696 = getelementptr inbounds %union.tree_node* %retval.0.i.i.i456, i64 0, i32 0, i32 0, i32 2
  %bf.load.i697 = load i32* %code.i696, align 8
  %bf.clear.i698 = and i32 %bf.load.i697, 255
  %cmp.i699 = icmp eq i32 %bf.clear.i698, 0
  br i1 %cmp.i699, label %if.then.i700, label %if.else.i702

if.then.i700:                                     ; preds = %field_type.exit.i.i458
  %288 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %288, 20
  %289 = and i32 %and.i, 32
  %290 = add i32 %289, 32
  %conv19.i = zext i32 %290 to i64
  br label %simple_type_size_in_bits.exit

if.else.i702:                                     ; preds = %field_type.exit.i.i458
  %size.i701 = getelementptr inbounds %union.tree_node* %retval.0.i.i.i456, i64 0, i32 0, i32 2
  %291 = bitcast i32* %size.i701 to %union.tree_node**
  %292 = load %union.tree_node** %291, align 8, !tbaa !110
  %cmp2.i = icmp eq %union.tree_node* %292, null
  br i1 %cmp2.i, label %simple_type_size_in_bits.exit, label %if.else5.i

if.else5.i:                                       ; preds = %if.else.i702
  %call.i703 = tail call i32 @host_integerp(%union.tree_node* %292, i32 1) #5
  %tobool8.i = icmp eq i32 %call.i703, 0
  br i1 %tobool8.i, label %if.else13.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.else5.i
  %293 = load %union.tree_node** %291, align 8, !tbaa !110
  %call12.i = tail call i64 @tree_low_cst(%union.tree_node* %293, i32 1) #5
  br label %simple_type_size_in_bits.exit

if.else13.i:                                      ; preds = %if.else5.i
  %align.i = getelementptr inbounds %union.tree_node* %retval.0.i.i.i456, i64 0, i32 0, i32 7
  %294 = bitcast %union.tree_node** %align.i to i32*
  %295 = load i32* %294, align 4, !tbaa !111
  %conv15.i = zext i32 %295 to i64
  br label %simple_type_size_in_bits.exit

simple_type_size_in_bits.exit:                    ; preds = %if.then.i700, %if.else.i702, %if.then9.i, %if.else13.i
  %retval.0.i = phi i64 [ %conv19.i, %if.then.i700 ], [ %call12.i, %if.then9.i ], [ %conv15.i, %if.else13.i ], [ 0, %if.else.i702 ]
  %div.i.i457 = lshr i64 %retval.0.i, 3
  br label %sw.epilog.i.i463

sw.default.i.i459:                                ; preds = %if.then69.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9320, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.add_byte_size_attribute, i64 0, i64 0)) #7
  unreachable

sw.epilog.i.i463:                                 ; preds = %simple_type_size_in_bits.exit, %sw.bb1.i.i453, %if.then69.i
  %size.0.i.i460 = phi i64 [ %div.i.i457, %simple_type_size_in_bits.exit ], [ %call.i181.i, %sw.bb1.i.i453 ], [ 0, %if.then69.i ]
  %conv6.i.i461 = and i64 %size.0.i.i460, 4294967295
  %call.i.i185.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i186.i = getelementptr inbounds i8* %call.i.i185.i, i64 8
  %296 = bitcast i8* %dw_attr_next.i.i186.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %296, align 8, !tbaa !72
  %dw_attr.i.i187.i = bitcast i8* %call.i.i185.i to i32*
  store i32 11, i32* %dw_attr.i.i187.i, align 4, !tbaa !57
  %dw_attr_val.i.i188.i = getelementptr inbounds i8* %call.i.i185.i, i64 16
  %val_class.i.i189.i = bitcast i8* %dw_attr_val.i.i188.i to i32*
  store i32 6, i32* %val_class.i.i189.i, align 4, !tbaa !59
  %v.i.i190.i = getelementptr inbounds i8* %call.i.i185.i, i64 24
  %val_unsigned.i.i.i462 = bitcast i8* %v.i.i190.i to i64*
  store i64 %conv6.i.i461, i64* %val_unsigned.i.i.i462, align 8, !tbaa !8
  %cmp.i.i.i191.i = icmp ne %struct.die_struct* %type_die.0.i450, null
  %cmp1.i.i.i192.i = icmp ne i8* %call.i.i185.i, null
  %or.cond.i.i.i193.i = and i1 %cmp.i.i.i191.i, %cmp1.i.i.i192.i
  br i1 %or.cond.i.i.i193.i, label %if.then.i.i.i195.i, label %add_byte_size_attribute.exit.i464

if.then.i.i.i195.i:                               ; preds = %sw.epilog.i.i463
  %297 = bitcast i8* %call.i.i185.i to %struct.dw_attr_struct*
  %die_attr.i.i.i194.i = getelementptr inbounds %struct.die_struct* %type_die.0.i450, i64 0, i32 2
  %298 = load %struct.dw_attr_struct** %die_attr.i.i.i194.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %298, %struct.dw_attr_struct** %296, align 8, !tbaa !72
  store %struct.dw_attr_struct* %297, %struct.dw_attr_struct** %die_attr.i.i.i194.i, align 8, !tbaa !73
  br label %add_byte_size_attribute.exit.i464

add_byte_size_attribute.exit.i464:                ; preds = %if.then.i.i.i195.i, %sw.epilog.i.i463
  %chain74.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 0
  %299 = load %union.tree_node** %chain74.i, align 8, !tbaa !88
  %cmp75.i = icmp eq %union.tree_node* %299, null
  br i1 %cmp75.i, label %if.end79.i, label %if.then76.i

if.then76.i:                                      ; preds = %add_byte_size_attribute.exit.i464
  %filename.i.i465 = getelementptr inbounds %union.tree_node* %299, i64 0, i32 0, i32 1
  %300 = load i8** %filename.i.i465, align 8, !tbaa !127
  %call.i196.i = tail call fastcc i32 @lookup_filename(i8* %300) #5
  %conv.i.i466 = zext i32 %call.i196.i to i64
  %call.i.i197.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i198.i = getelementptr inbounds i8* %call.i.i197.i, i64 8
  %301 = bitcast i8* %dw_attr_next.i.i198.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %301, align 8, !tbaa !72
  %dw_attr.i.i199.i = bitcast i8* %call.i.i197.i to i32*
  store i32 58, i32* %dw_attr.i.i199.i, align 4, !tbaa !57
  %dw_attr_val.i.i200.i = getelementptr inbounds i8* %call.i.i197.i, i64 16
  %val_class.i.i201.i = bitcast i8* %dw_attr_val.i.i200.i to i32*
  store i32 6, i32* %val_class.i.i201.i, align 4, !tbaa !59
  %v.i.i202.i = getelementptr inbounds i8* %call.i.i197.i, i64 24
  %val_unsigned.i.i203.i = bitcast i8* %v.i.i202.i to i64*
  store i64 %conv.i.i466, i64* %val_unsigned.i.i203.i, align 8, !tbaa !8
  %cmp1.i.i.i205.i = icmp ne i8* %call.i.i197.i, null
  %or.cond.i.i.i206.i = and i1 %cmp.i.i.i191.i, %cmp1.i.i.i205.i
  br i1 %or.cond.i.i.i206.i, label %if.then.i.i.i208.i, label %add_AT_unsigned.exit.i.i478

if.then.i.i.i208.i:                               ; preds = %if.then76.i
  %302 = bitcast i8* %call.i.i197.i to %struct.dw_attr_struct*
  %die_attr.i.i.i207.i = getelementptr inbounds %struct.die_struct* %type_die.0.i450, i64 0, i32 2
  %303 = load %struct.dw_attr_struct** %die_attr.i.i.i207.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %303, %struct.dw_attr_struct** %301, align 8, !tbaa !72
  store %struct.dw_attr_struct* %302, %struct.dw_attr_struct** %die_attr.i.i.i207.i, align 8, !tbaa !73
  br label %add_AT_unsigned.exit.i.i478

add_AT_unsigned.exit.i.i478:                      ; preds = %if.then.i.i.i208.i, %if.then76.i
  %linenum.i.i467 = getelementptr inbounds %union.tree_node* %299, i64 0, i32 0, i32 2
  %304 = load i32* %linenum.i.i467, align 4, !tbaa !91
  %conv3.i.i468 = sext i32 %304 to i64
  %call.i6.i.i469 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i7.i.i470 = getelementptr inbounds i8* %call.i6.i.i469, i64 8
  %305 = bitcast i8* %dw_attr_next.i7.i.i470 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %305, align 8, !tbaa !72
  %dw_attr.i8.i.i471 = bitcast i8* %call.i6.i.i469 to i32*
  store i32 59, i32* %dw_attr.i8.i.i471, align 4, !tbaa !57
  %dw_attr_val.i9.i.i472 = getelementptr inbounds i8* %call.i6.i.i469, i64 16
  %val_class.i10.i.i473 = bitcast i8* %dw_attr_val.i9.i.i472 to i32*
  store i32 6, i32* %val_class.i10.i.i473, align 4, !tbaa !59
  %v.i11.i.i474 = getelementptr inbounds i8* %call.i6.i.i469, i64 24
  %val_unsigned.i12.i.i475 = bitcast i8* %v.i11.i.i474 to i64*
  store i64 %conv3.i.i468, i64* %val_unsigned.i12.i.i475, align 8, !tbaa !8
  %cmp1.i.i14.i.i476 = icmp ne i8* %call.i6.i.i469, null
  %or.cond.i.i15.i.i477 = and i1 %cmp.i.i.i191.i, %cmp1.i.i14.i.i476
  br i1 %or.cond.i.i15.i.i477, label %if.then.i.i17.i.i480, label %if.end79.i

if.then.i.i17.i.i480:                             ; preds = %add_AT_unsigned.exit.i.i478
  %306 = bitcast i8* %call.i6.i.i469 to %struct.dw_attr_struct*
  %die_attr.i.i16.i.i479 = getelementptr inbounds %struct.die_struct* %type_die.0.i450, i64 0, i32 2
  %307 = load %struct.dw_attr_struct** %die_attr.i.i16.i.i479, align 8, !tbaa !73
  store %struct.dw_attr_struct* %307, %struct.dw_attr_struct** %305, align 8, !tbaa !72
  store %struct.dw_attr_struct* %306, %struct.dw_attr_struct** %die_attr.i.i16.i.i479, align 8, !tbaa !73
  br label %if.end79.i

if.end79.i:                                       ; preds = %add_AT_unsigned.exit.i.i478, %if.then.i.i17.i.i480, %add_byte_size_attribute.exit.i464
  %die_parent.i481 = getelementptr inbounds %struct.die_struct* %type_die.0.i450, i64 0, i32 3
  %308 = load %struct.die_struct** %die_parent.i481, align 8, !tbaa !55
  %cmp80.i = icmp eq %struct.die_struct* %308, null
  %cmp.i209.i = icmp ne %struct.die_struct* %call49.i, null
  %or.cond.i.i482 = and i1 %cmp.i209.i, %cmp.i.i.i191.i
  %or.cond831 = and i1 %cmp80.i, %or.cond.i.i482
  br i1 %or.cond831, label %if.then.i211.i, label %if.end82.i

if.then.i211.i:                                   ; preds = %if.end79.i
  %cmp2.i.i483 = icmp eq %struct.die_struct* %call49.i, %type_die.0.i450
  br i1 %cmp2.i.i483, label %if.then3.i212.i, label %if.end.i213.i

if.then3.i212.i:                                  ; preds = %if.then.i211.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i213.i:                                    ; preds = %if.then.i211.i
  store %struct.die_struct* %call49.i, %struct.die_struct** %die_parent.i481, align 8, !tbaa !55
  %die_child.i.i484 = getelementptr inbounds %struct.die_struct* %call49.i, i64 0, i32 4
  %309 = load %struct.die_struct** %die_child.i.i484, align 8, !tbaa !62
  %die_sib.i.i485 = getelementptr inbounds %struct.die_struct* %type_die.0.i450, i64 0, i32 5
  store %struct.die_struct* %309, %struct.die_struct** %die_sib.i.i485, align 8, !tbaa !63
  store %struct.die_struct* %type_die.0.i450, %struct.die_struct** %die_child.i.i484, align 8, !tbaa !62
  br label %if.end82.i

if.end82.i:                                       ; preds = %if.end.i213.i, %if.end79.i
  %310 = load %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used.i.i = getelementptr inbounds %struct.varray_head_tag* %310, i64 0, i32 1
  %311 = load i64* %elements_used.i.i, align 8, !tbaa !67
  %num_elements.i.i = getelementptr inbounds %struct.varray_head_tag* %310, i64 0, i32 0
  %312 = load i64* %num_elements.i.i, align 8, !tbaa !126
  %cmp.i214.i = icmp ult i64 %311, %312
  br i1 %cmp.i214.i, label %push_decl_scope.exit.i, label %if.then.i216.i

if.then.i216.i:                                   ; preds = %if.end82.i
  %mul.i.i = shl i64 %312, 1
  %call.i215.i486 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %310, i64 %mul.i.i) #5
  store %struct.varray_head_tag* %call.i215.i486, %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used2.phi.trans.insert.i.i = getelementptr inbounds %struct.varray_head_tag* %call.i215.i486, i64 0, i32 1
  %.pre.i.i = load i64* %elements_used2.phi.trans.insert.i.i, align 8, !tbaa !67
  br label %push_decl_scope.exit.i

push_decl_scope.exit.i:                           ; preds = %if.then.i216.i, %if.end82.i
  %313 = phi i64 [ %311, %if.end82.i ], [ %.pre.i.i, %if.then.i216.i ]
  %314 = phi %struct.varray_head_tag* [ %310, %if.end82.i ], [ %call.i215.i486, %if.then.i216.i ]
  %elements_used2.i.i = getelementptr inbounds %struct.varray_head_tag* %314, i64 0, i32 1
  %inc.i.i = add i64 %313, 1
  store i64 %inc.i.i, i64* %elements_used2.i.i, align 8, !tbaa !67
  %data.i.i = getelementptr inbounds %struct.varray_head_tag* %314, i64 0, i32 4
  %tree.i.i = bitcast %union.varray_data_tag* %data.i.i to [1 x %union.tree_node*]*
  %arrayidx.i.i = getelementptr inbounds [1 x %union.tree_node*]* %tree.i.i, i64 0, i64 %313
  store %union.tree_node* %type.addr.1.i, %union.tree_node** %arrayidx.i.i, align 8, !tbaa !6
  %315 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 16
  %316 = load %union.tree_node** %315, align 8, !tbaa !128
  %tobool.i247.i = icmp eq %union.tree_node* %316, null
  br i1 %tobool.i247.i, label %if.end.i255.i, label %land.lhs.true.i249.i

land.lhs.true.i249.i:                             ; preds = %push_decl_scope.exit.i
  %a.i.i = getelementptr inbounds %union.tree_node* %316, i64 0, i32 0, i32 2
  %arrayidx.i248.i = getelementptr inbounds i32* %a.i.i, i64 8
  %317 = bitcast i32* %arrayidx.i248.i to %union.tree_node**
  %318 = load %union.tree_node** %317, align 8, !tbaa !6
  %tobool4.i.i = icmp eq %union.tree_node* %318, null
  br i1 %tobool4.i.i, label %if.end.i255.i, label %if.then.i250.i

if.then.i250.i:                                   ; preds = %land.lhs.true.i249.i
  %length.i.i = getelementptr inbounds %union.tree_node* %318, i64 0, i32 0, i32 1
  %319 = bitcast i8** %length.i.i to i32*
  %320 = load i32* %319, align 4, !tbaa !129
  %cmp.i251.i857 = icmp sgt i32 %320, 0
  br i1 %cmp.i251.i857, label %for.body.i254.i.lr.ph, label %if.end.i255.i

for.body.i254.i.lr.ph:                            ; preds = %if.then.i250.i
  %a12.i.i = getelementptr inbounds %union.tree_node* %318, i64 0, i32 0, i32 2
  %321 = bitcast i32* %a12.i.i to [1 x %union.tree_node*]*
  br label %for.body.i254.i

for.body.i254.i:                                  ; preds = %for.body.i254.i, %for.body.i254.i.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.i254.i.lr.ph ], [ %indvars.iv.next, %for.body.i254.i ]
  %arrayidx13.i.i = getelementptr inbounds [1 x %union.tree_node*]* %321, i64 0, i64 %indvars.iv
  %322 = load %union.tree_node** %arrayidx13.i.i, align 8, !tbaa !6
  tail call fastcc void @gen_inheritance_die(%union.tree_node* %322, %struct.die_struct* %type_die.0.i450) #5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %320
  br i1 %exitcond, label %if.end.i255.i, label %for.body.i254.i

if.end.i255.i:                                    ; preds = %for.body.i254.i, %if.then.i250.i, %land.lhs.true.i249.i, %push_decl_scope.exit.i
  %values.i.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 1
  %323 = load i8** %values.i.i, align 8
  %tobool16.i.i854 = icmp eq i8* %323, null
  br i1 %tobool16.i.i854, label %for.end22.i.i, label %for.body17.i.i.lr.ph

for.body17.i.i.lr.ph:                             ; preds = %if.end.i255.i
  %324 = bitcast i8* %323 to %union.tree_node*
  %die_child16.i.i.i = getelementptr inbounds %struct.die_struct* %type_die.0.i450, i64 0, i32 4
  br label %for.body17.i.i

for.body17.i.i:                                   ; preds = %for.body17.i.i.lr.ph, %for.inc21.i.i
  %member.0.i.i855 = phi %union.tree_node* [ %324, %for.body17.i.i.lr.ph ], [ %341, %for.inc21.i.i ]
  %member.0.idx.i.i = getelementptr %union.tree_node* %member.0.i.i855, i64 0, i32 0, i32 3
  %member.0.idx.val.i.i = load i32* %member.0.idx.i.i, align 4, !tbaa !65
  %325 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i256.i = icmp ugt i32 %325, %member.0.idx.val.i.i
  br i1 %cmp.i.i256.i, label %lookup_decl_die.exit.i.i, label %if.else.i263.i

lookup_decl_die.exit.i.i:                         ; preds = %for.body17.i.i
  %idxprom.i.i.i = zext i32 %member.0.idx.val.i.i to i64
  %326 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i.i = getelementptr inbounds %struct.die_struct** %326, i64 %idxprom.i.i.i
  %327 = load %struct.die_struct** %arrayidx.i.i.i, align 8, !tbaa !6
  %tobool18.i.i = icmp eq %struct.die_struct* %327, null
  br i1 %tobool18.i.i, label %if.else.i263.i, label %if.then19.i.i

if.then19.i.i:                                    ; preds = %lookup_decl_die.exit.i.i
  %die_parent.i.i257.i = getelementptr inbounds %struct.die_struct* %327, i64 0, i32 3
  %328 = load %struct.die_struct** %die_parent.i.i257.i, align 8, !tbaa !55
  %cmp.i61.i.i = icmp eq %struct.die_struct* %328, %type_die.0.i450
  br i1 %cmp.i61.i.i, label %if.end9.i.i.i, label %tailrecurse.i.i744

tailrecurse.i.i744:                               ; preds = %if.then19.i.i, %for.end.i.i769
  %die.tr.i.i742 = phi %struct.die_struct* [ %spec.1.i.i763, %for.end.i.i769 ], [ %327, %if.then19.i.i ]
  %cmp.i.i743 = icmp eq %struct.die_struct* %die.tr.i.i742, null
  br i1 %cmp.i.i743, label %get_AT_ref.exit779, label %if.then.i.i748

if.then.i.i748:                                   ; preds = %tailrecurse.i.i744
  %die_attr.i.i745 = getelementptr inbounds %struct.die_struct* %die.tr.i.i742, i64 0, i32 2
  %a.027.i.i746 = load %struct.dw_attr_struct** %die_attr.i.i745, align 8
  %cmp128.i.i747 = icmp eq %struct.dw_attr_struct* %a.027.i.i746, null
  br i1 %cmp128.i.i747, label %get_AT_ref.exit779, label %for.body.i.i753

for.body.i.i753:                                  ; preds = %if.then.i.i748, %for.inc.i.i767
  %a.030.i.i749 = phi %struct.dw_attr_struct* [ %a.0.i.i765, %for.inc.i.i767 ], [ %a.027.i.i746, %if.then.i.i748 ]
  %spec.029.i.i750 = phi %struct.die_struct* [ %spec.1.i.i763, %for.inc.i.i767 ], [ null, %if.then.i.i748 ]
  %dw_attr.i.i751 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i749, i64 0, i32 0
  %329 = load i32* %dw_attr.i.i751, align 4, !tbaa !57
  switch i32 %329, label %for.inc.i.i767 [
    i32 71, label %land.lhs.true.i.i773
    i32 49, label %land.lhs.true.i.i.i758
  ]

land.lhs.true.i.i.i758:                           ; preds = %for.body.i.i753
  %a.idx.i.i.i755 = getelementptr %struct.dw_attr_struct* %a.030.i.i749, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i756 = load i32* %a.idx.i.i.i755, align 4, !tbaa !59
  %cmp.i.i.i757 = icmp eq i32 %a.idx.val.i.i.i756, 10
  br i1 %cmp.i.i.i757, label %AT_ref.exit.i.i762, label %if.end.i.i.i759

if.end.i.i.i759:                                  ; preds = %land.lhs.true.i.i.i758
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i762:                               ; preds = %land.lhs.true.i.i.i758
  %v.i.i.i760 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i749, i64 0, i32 2, i32 1
  %die.i.i.i761 = bitcast %union.anon.3* %v.i.i.i760 to %struct.die_struct**
  %330 = load %struct.die_struct** %die.i.i.i761, align 8, !tbaa !60
  br label %for.inc.i.i767

for.inc.i.i767:                                   ; preds = %for.body.i.i753, %AT_ref.exit.i.i762
  %spec.1.i.i763 = phi %struct.die_struct* [ %330, %AT_ref.exit.i.i762 ], [ %spec.029.i.i750, %for.body.i.i753 ]
  %dw_attr_next.i.i764 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i749, i64 0, i32 1
  %a.0.i.i765 = load %struct.dw_attr_struct** %dw_attr_next.i.i764, align 8
  %cmp1.i.i766 = icmp eq %struct.dw_attr_struct* %a.0.i.i765, null
  br i1 %cmp1.i.i766, label %for.end.i.i769, label %for.body.i.i753

for.end.i.i769:                                   ; preds = %for.inc.i.i767
  %tobool.i.i768 = icmp eq %struct.die_struct* %spec.1.i.i763, null
  br i1 %tobool.i.i768, label %get_AT_ref.exit779, label %tailrecurse.i.i744

land.lhs.true.i.i773:                             ; preds = %for.body.i.i753
  %a.idx.i.i770 = getelementptr %struct.dw_attr_struct* %a.030.i.i749, i64 0, i32 2, i32 0
  %a.idx.val.i.i771 = load i32* %a.idx.i.i770, align 4, !tbaa !59
  %cmp.i4.i772 = icmp eq i32 %a.idx.val.i.i771, 10
  br i1 %cmp.i4.i772, label %AT_ref.exit.i777, label %if.end.i.i774

if.end.i.i774:                                    ; preds = %land.lhs.true.i.i773
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i777:                                 ; preds = %land.lhs.true.i.i773
  %v.i.i775 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i749, i64 0, i32 2, i32 1
  %die.i.i776 = bitcast %union.anon.3* %v.i.i775 to %struct.die_struct**
  %331 = load %struct.die_struct** %die.i.i776, align 8, !tbaa !60
  br label %get_AT_ref.exit779

get_AT_ref.exit779:                               ; preds = %tailrecurse.i.i744, %if.then.i.i748, %for.end.i.i769, %AT_ref.exit.i777
  %cond.i778 = phi %struct.die_struct* [ %331, %AT_ref.exit.i777 ], [ null, %for.end.i.i769 ], [ null, %if.then.i.i748 ], [ null, %tailrecurse.i.i744 ]
  %tobool.i.i259.i = icmp eq %struct.die_struct* %cond.i778, null
  %child.call.i.i.i = select i1 %tobool.i.i259.i, %struct.die_struct* %327, %struct.die_struct* %cond.i778
  %die_parent3.phi.trans.insert.i.i.i = getelementptr inbounds %struct.die_struct* %child.call.i.i.i, i64 0, i32 3
  %.pre.i.i260.i = load %struct.die_struct** %die_parent3.phi.trans.insert.i.i.i, align 8, !tbaa !55
  %cmp4.i.i.i = icmp eq %struct.die_struct* %.pre.i.i260.i, %type_die.0.i450
  br i1 %cmp4.i.i.i, label %if.end9.i.i.i, label %tailrecurse.i.i706

tailrecurse.i.i706:                               ; preds = %get_AT_ref.exit779, %for.end.i.i731
  %die.tr.i.i704 = phi %struct.die_struct* [ %spec.1.i.i725, %for.end.i.i731 ], [ %type_die.0.i450, %get_AT_ref.exit779 ]
  %cmp.i.i705 = icmp eq %struct.die_struct* %die.tr.i.i704, null
  br i1 %cmp.i.i705, label %get_AT_ref.exit741, label %if.then.i.i710

if.then.i.i710:                                   ; preds = %tailrecurse.i.i706
  %die_attr.i.i707 = getelementptr inbounds %struct.die_struct* %die.tr.i.i704, i64 0, i32 2
  %a.027.i.i708 = load %struct.dw_attr_struct** %die_attr.i.i707, align 8
  %cmp128.i.i709 = icmp eq %struct.dw_attr_struct* %a.027.i.i708, null
  br i1 %cmp128.i.i709, label %get_AT_ref.exit741, label %for.body.i.i715

for.body.i.i715:                                  ; preds = %if.then.i.i710, %for.inc.i.i729
  %a.030.i.i711 = phi %struct.dw_attr_struct* [ %a.0.i.i727, %for.inc.i.i729 ], [ %a.027.i.i708, %if.then.i.i710 ]
  %spec.029.i.i712 = phi %struct.die_struct* [ %spec.1.i.i725, %for.inc.i.i729 ], [ null, %if.then.i.i710 ]
  %dw_attr.i.i713 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i711, i64 0, i32 0
  %332 = load i32* %dw_attr.i.i713, align 4, !tbaa !57
  switch i32 %332, label %for.inc.i.i729 [
    i32 71, label %land.lhs.true.i.i735
    i32 49, label %land.lhs.true.i.i.i720
  ]

land.lhs.true.i.i.i720:                           ; preds = %for.body.i.i715
  %a.idx.i.i.i717 = getelementptr %struct.dw_attr_struct* %a.030.i.i711, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i718 = load i32* %a.idx.i.i.i717, align 4, !tbaa !59
  %cmp.i.i.i719 = icmp eq i32 %a.idx.val.i.i.i718, 10
  br i1 %cmp.i.i.i719, label %AT_ref.exit.i.i724, label %if.end.i.i.i721

if.end.i.i.i721:                                  ; preds = %land.lhs.true.i.i.i720
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i724:                               ; preds = %land.lhs.true.i.i.i720
  %v.i.i.i722 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i711, i64 0, i32 2, i32 1
  %die.i.i.i723 = bitcast %union.anon.3* %v.i.i.i722 to %struct.die_struct**
  %333 = load %struct.die_struct** %die.i.i.i723, align 8, !tbaa !60
  br label %for.inc.i.i729

for.inc.i.i729:                                   ; preds = %for.body.i.i715, %AT_ref.exit.i.i724
  %spec.1.i.i725 = phi %struct.die_struct* [ %333, %AT_ref.exit.i.i724 ], [ %spec.029.i.i712, %for.body.i.i715 ]
  %dw_attr_next.i.i726 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i711, i64 0, i32 1
  %a.0.i.i727 = load %struct.dw_attr_struct** %dw_attr_next.i.i726, align 8
  %cmp1.i.i728 = icmp eq %struct.dw_attr_struct* %a.0.i.i727, null
  br i1 %cmp1.i.i728, label %for.end.i.i731, label %for.body.i.i715

for.end.i.i731:                                   ; preds = %for.inc.i.i729
  %tobool.i.i730 = icmp eq %struct.die_struct* %spec.1.i.i725, null
  br i1 %tobool.i.i730, label %get_AT_ref.exit741, label %tailrecurse.i.i706

land.lhs.true.i.i735:                             ; preds = %for.body.i.i715
  %a.idx.i.i732 = getelementptr %struct.dw_attr_struct* %a.030.i.i711, i64 0, i32 2, i32 0
  %a.idx.val.i.i733 = load i32* %a.idx.i.i732, align 4, !tbaa !59
  %cmp.i4.i734 = icmp eq i32 %a.idx.val.i.i733, 10
  br i1 %cmp.i4.i734, label %AT_ref.exit.i739, label %if.end.i.i736

if.end.i.i736:                                    ; preds = %land.lhs.true.i.i735
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i739:                                 ; preds = %land.lhs.true.i.i735
  %v.i.i737 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i711, i64 0, i32 2, i32 1
  %die.i.i738 = bitcast %union.anon.3* %v.i.i737 to %struct.die_struct**
  %334 = load %struct.die_struct** %die.i.i738, align 8, !tbaa !60
  br label %get_AT_ref.exit741

get_AT_ref.exit741:                               ; preds = %tailrecurse.i.i706, %if.then.i.i710, %for.end.i.i731, %AT_ref.exit.i739
  %cond.i740 = phi %struct.die_struct* [ %334, %AT_ref.exit.i739 ], [ null, %for.end.i.i731 ], [ null, %if.then.i.i710 ], [ null, %tailrecurse.i.i706 ]
  %cmp7.i.i.i = icmp eq %struct.die_struct* %.pre.i.i260.i, %cond.i740
  br i1 %cmp7.i.i.i, label %if.end9.i.i.i, label %if.then8.i.i.i

if.then8.i.i.i:                                   ; preds = %get_AT_ref.exit741
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5055, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.splice_child_die, i64 0, i64 0)) #7
  unreachable

if.end9.i.i.i:                                    ; preds = %get_AT_ref.exit741, %get_AT_ref.exit779, %if.then19.i.i
  %child.addr.042.i.i.i = phi %struct.die_struct* [ %child.call.i.i.i, %get_AT_ref.exit779 ], [ %327, %if.then19.i.i ], [ %child.call.i.i.i, %get_AT_ref.exit741 ]
  %335 = phi %struct.die_struct* [ %type_die.0.i450, %get_AT_ref.exit779 ], [ %type_die.0.i450, %if.then19.i.i ], [ %.pre.i.i260.i, %get_AT_ref.exit741 ]
  %die_child.i.i261.i = getelementptr inbounds %struct.die_struct* %335, i64 0, i32 4
  %336 = load %struct.die_struct** %die_child.i.i261.i, align 8, !tbaa !6
  %tobool1136.i.i.i = icmp eq %struct.die_struct* %336, null
  br i1 %tobool1136.i.i.i, label %for.end.loopexit.i.i.i, label %for.body.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i
  %337 = load %struct.die_struct** %die_sib15.i.i.i, align 8, !tbaa !6
  %tobool11.i.i.i = icmp eq %struct.die_struct* %337, null
  br i1 %tobool11.i.i.i, label %for.end.loopexit.i.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %if.end9.i.i.i, %for.cond.i.i.i
  %338 = phi %struct.die_struct* [ %337, %for.cond.i.i.i ], [ %336, %if.end9.i.i.i ]
  %p.037.i.i.i = phi %struct.die_struct** [ %die_sib15.i.i.i, %for.cond.i.i.i ], [ %die_child.i.i261.i, %if.end9.i.i.i ]
  %cmp12.i.i.i = icmp eq %struct.die_struct* %338, %child.addr.042.i.i.i
  %die_sib15.i.i.i = getelementptr inbounds %struct.die_struct* %338, i64 0, i32 5
  br i1 %cmp12.i.i.i, label %if.then13.i.i.i, label %for.cond.i.i.i

if.then13.i.i.i:                                  ; preds = %for.body.i.i.i
  %die_sib.i.i262.i = getelementptr inbounds %struct.die_struct* %child.addr.042.i.i.i, i64 0, i32 5
  %339 = load %struct.die_struct** %die_sib.i.i262.i, align 8, !tbaa !63
  store %struct.die_struct* %339, %struct.die_struct** %p.037.i.i.i, align 8, !tbaa !6
  br label %splice_child_die.exit.i.i

for.end.loopexit.i.i.i:                           ; preds = %for.cond.i.i.i, %if.end9.i.i.i
  %die_sib17.pre.i.i.i = getelementptr inbounds %struct.die_struct* %child.addr.042.i.i.i, i64 0, i32 5
  br label %splice_child_die.exit.i.i

splice_child_die.exit.i.i:                        ; preds = %for.end.loopexit.i.i.i, %if.then13.i.i.i
  %die_sib17.pre-phi.i.i.i = phi %struct.die_struct** [ %die_sib17.pre.i.i.i, %for.end.loopexit.i.i.i ], [ %die_sib.i.i262.i, %if.then13.i.i.i ]
  %340 = load %struct.die_struct** %die_child16.i.i.i, align 8, !tbaa !62
  store %struct.die_struct* %340, %struct.die_struct** %die_sib17.pre-phi.i.i.i, align 8, !tbaa !63
  store %struct.die_struct* %child.addr.042.i.i.i, %struct.die_struct** %die_child16.i.i.i, align 8, !tbaa !62
  br label %for.inc21.i.i

if.else.i263.i:                                   ; preds = %for.body17.i.i, %lookup_decl_die.exit.i.i
  tail call fastcc void @gen_decl_die(%union.tree_node* %member.0.i.i855, %struct.die_struct* %type_die.0.i450) #5
  br label %for.inc21.i.i

for.inc21.i.i:                                    ; preds = %if.else.i263.i, %splice_child_die.exit.i.i
  %chain.i.i = getelementptr inbounds %union.tree_node* %member.0.i.i855, i64 0, i32 0, i32 0, i32 0
  %341 = load %union.tree_node** %chain.i.i, align 8, !tbaa !88
  %tobool16.i.i = icmp eq %union.tree_node* %341, null
  br i1 %tobool16.i.i, label %for.end22.i.i, label %for.body17.i.i

for.end22.i.i:                                    ; preds = %for.inc21.i.i, %if.end.i255.i
  %342 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 13
  %member.1.i.i850 = load %union.tree_node** %342, align 8
  %tobool25.i.i851 = icmp eq %union.tree_node* %member.1.i.i850, null
  br i1 %tobool25.i.i851, label %gen_member_die.exit.i, label %for.body26.i.i.lr.ph

for.body26.i.i.lr.ph:                             ; preds = %for.end22.i.i
  %die_child16.i99.i.i = getelementptr inbounds %struct.die_struct* %type_die.0.i450, i64 0, i32 4
  br label %for.body26.i.i

for.body26.i.i:                                   ; preds = %for.body26.i.i.lr.ph, %for.inc35.i.i
  %member.1.i.i852 = phi %union.tree_node* [ %member.1.i.i850, %for.body26.i.i.lr.ph ], [ %member.1.i.i, %for.inc35.i.i ]
  %abstract_origin.i.i = getelementptr inbounds %union.tree_node* %member.1.i.i852, i64 0, i32 0, i32 13
  %343 = load %union.tree_node** %abstract_origin.i.i, align 8, !tbaa !89
  %tobool27.i.i = icmp eq %union.tree_node* %343, null
  br i1 %tobool27.i.i, label %if.end29.i264.i, label %for.inc35.i.i

if.end29.i264.i:                                  ; preds = %for.body26.i.i
  %member.1.idx.i.i = getelementptr %union.tree_node* %member.1.i.i852, i64 0, i32 0, i32 3
  %member.1.idx.val.i.i = load i32* %member.1.idx.i.i, align 4, !tbaa !65
  %344 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i62.i.i = icmp ugt i32 %344, %member.1.idx.val.i.i
  br i1 %cmp.i62.i.i, label %lookup_decl_die.exit67.i.i, label %if.else33.i.i

lookup_decl_die.exit67.i.i:                       ; preds = %if.end29.i264.i
  %idxprom.i63.i.i = zext i32 %member.1.idx.val.i.i to i64
  %345 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i64.i.i = getelementptr inbounds %struct.die_struct** %345, i64 %idxprom.i63.i.i
  %346 = load %struct.die_struct** %arrayidx.i64.i.i, align 8, !tbaa !6
  %tobool31.i.i = icmp eq %struct.die_struct* %346, null
  br i1 %tobool31.i.i, label %if.else33.i.i, label %if.then32.i.i

if.then32.i.i:                                    ; preds = %lookup_decl_die.exit67.i.i
  %die_parent.i68.i.i = getelementptr inbounds %struct.die_struct* %346, i64 0, i32 3
  %347 = load %struct.die_struct** %die_parent.i68.i.i, align 8, !tbaa !55
  %cmp.i69.i.i = icmp eq %struct.die_struct* %347, %type_die.0.i450
  br i1 %cmp.i69.i.i, label %if.end9.i87.i.i, label %tailrecurse.i.i782

tailrecurse.i.i782:                               ; preds = %if.then32.i.i, %for.end.i.i807
  %die.tr.i.i780 = phi %struct.die_struct* [ %spec.1.i.i801, %for.end.i.i807 ], [ %346, %if.then32.i.i ]
  %cmp.i.i781 = icmp eq %struct.die_struct* %die.tr.i.i780, null
  br i1 %cmp.i.i781, label %get_AT_ref.exit817, label %if.then.i.i786

if.then.i.i786:                                   ; preds = %tailrecurse.i.i782
  %die_attr.i.i783 = getelementptr inbounds %struct.die_struct* %die.tr.i.i780, i64 0, i32 2
  %a.027.i.i784 = load %struct.dw_attr_struct** %die_attr.i.i783, align 8
  %cmp128.i.i785 = icmp eq %struct.dw_attr_struct* %a.027.i.i784, null
  br i1 %cmp128.i.i785, label %get_AT_ref.exit817, label %for.body.i.i791

for.body.i.i791:                                  ; preds = %if.then.i.i786, %for.inc.i.i805
  %a.030.i.i787 = phi %struct.dw_attr_struct* [ %a.0.i.i803, %for.inc.i.i805 ], [ %a.027.i.i784, %if.then.i.i786 ]
  %spec.029.i.i788 = phi %struct.die_struct* [ %spec.1.i.i801, %for.inc.i.i805 ], [ null, %if.then.i.i786 ]
  %dw_attr.i.i789 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i787, i64 0, i32 0
  %348 = load i32* %dw_attr.i.i789, align 4, !tbaa !57
  switch i32 %348, label %for.inc.i.i805 [
    i32 71, label %land.lhs.true.i.i811
    i32 49, label %land.lhs.true.i.i.i796
  ]

land.lhs.true.i.i.i796:                           ; preds = %for.body.i.i791
  %a.idx.i.i.i793 = getelementptr %struct.dw_attr_struct* %a.030.i.i787, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i794 = load i32* %a.idx.i.i.i793, align 4, !tbaa !59
  %cmp.i.i.i795 = icmp eq i32 %a.idx.val.i.i.i794, 10
  br i1 %cmp.i.i.i795, label %AT_ref.exit.i.i800, label %if.end.i.i.i797

if.end.i.i.i797:                                  ; preds = %land.lhs.true.i.i.i796
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i800:                               ; preds = %land.lhs.true.i.i.i796
  %v.i.i.i798 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i787, i64 0, i32 2, i32 1
  %die.i.i.i799 = bitcast %union.anon.3* %v.i.i.i798 to %struct.die_struct**
  %349 = load %struct.die_struct** %die.i.i.i799, align 8, !tbaa !60
  br label %for.inc.i.i805

for.inc.i.i805:                                   ; preds = %for.body.i.i791, %AT_ref.exit.i.i800
  %spec.1.i.i801 = phi %struct.die_struct* [ %349, %AT_ref.exit.i.i800 ], [ %spec.029.i.i788, %for.body.i.i791 ]
  %dw_attr_next.i.i802 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i787, i64 0, i32 1
  %a.0.i.i803 = load %struct.dw_attr_struct** %dw_attr_next.i.i802, align 8
  %cmp1.i.i804 = icmp eq %struct.dw_attr_struct* %a.0.i.i803, null
  br i1 %cmp1.i.i804, label %for.end.i.i807, label %for.body.i.i791

for.end.i.i807:                                   ; preds = %for.inc.i.i805
  %tobool.i.i806 = icmp eq %struct.die_struct* %spec.1.i.i801, null
  br i1 %tobool.i.i806, label %get_AT_ref.exit817, label %tailrecurse.i.i782

land.lhs.true.i.i811:                             ; preds = %for.body.i.i791
  %a.idx.i.i808 = getelementptr %struct.dw_attr_struct* %a.030.i.i787, i64 0, i32 2, i32 0
  %a.idx.val.i.i809 = load i32* %a.idx.i.i808, align 4, !tbaa !59
  %cmp.i4.i810 = icmp eq i32 %a.idx.val.i.i809, 10
  br i1 %cmp.i4.i810, label %AT_ref.exit.i815, label %if.end.i.i812

if.end.i.i812:                                    ; preds = %land.lhs.true.i.i811
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i815:                                 ; preds = %land.lhs.true.i.i811
  %v.i.i813 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i787, i64 0, i32 2, i32 1
  %die.i.i814 = bitcast %union.anon.3* %v.i.i813 to %struct.die_struct**
  %350 = load %struct.die_struct** %die.i.i814, align 8, !tbaa !60
  br label %get_AT_ref.exit817

get_AT_ref.exit817:                               ; preds = %tailrecurse.i.i782, %if.then.i.i786, %for.end.i.i807, %AT_ref.exit.i815
  %cond.i816 = phi %struct.die_struct* [ %350, %AT_ref.exit.i815 ], [ null, %for.end.i.i807 ], [ null, %if.then.i.i786 ], [ null, %tailrecurse.i.i782 ]
  %tobool.i71.i.i = icmp eq %struct.die_struct* %cond.i816, null
  %child.call.i72.i.i = select i1 %tobool.i71.i.i, %struct.die_struct* %346, %struct.die_struct* %cond.i816
  %die_parent3.phi.trans.insert.i73.i.i = getelementptr inbounds %struct.die_struct* %child.call.i72.i.i, i64 0, i32 3
  %.pre.i74.i.i = load %struct.die_struct** %die_parent3.phi.trans.insert.i73.i.i, align 8, !tbaa !55
  %cmp4.i76.i.i = icmp eq %struct.die_struct* %.pre.i74.i.i, %type_die.0.i450
  br i1 %cmp4.i76.i.i, label %if.end9.i87.i.i, label %tailrecurse.i.i

tailrecurse.i.i:                                  ; preds = %get_AT_ref.exit817, %for.end.i.i
  %die.tr.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.end.i.i ], [ %type_die.0.i450, %get_AT_ref.exit817 ]
  %cmp.i.i676 = icmp eq %struct.die_struct* %die.tr.i.i, null
  br i1 %cmp.i.i676, label %get_AT_ref.exit, label %if.then.i.i678

if.then.i.i678:                                   ; preds = %tailrecurse.i.i
  %die_attr.i.i677 = getelementptr inbounds %struct.die_struct* %die.tr.i.i, i64 0, i32 2
  %a.027.i.i = load %struct.dw_attr_struct** %die_attr.i.i677, align 8
  %cmp128.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i, null
  br i1 %cmp128.i.i, label %get_AT_ref.exit, label %for.body.i.i681

for.body.i.i681:                                  ; preds = %if.then.i.i678, %for.inc.i.i
  %a.030.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i, %for.inc.i.i ], [ %a.027.i.i, %if.then.i.i678 ]
  %spec.029.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.inc.i.i ], [ null, %if.then.i.i678 ]
  %dw_attr.i.i679 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 0
  %351 = load i32* %dw_attr.i.i679, align 4, !tbaa !57
  switch i32 %351, label %for.inc.i.i [
    i32 71, label %land.lhs.true.i.i692
    i32 49, label %land.lhs.true.i.i.i686
  ]

land.lhs.true.i.i.i686:                           ; preds = %for.body.i.i681
  %a.idx.i.i.i683 = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i684 = load i32* %a.idx.i.i.i683, align 4, !tbaa !59
  %cmp.i.i.i685 = icmp eq i32 %a.idx.val.i.i.i684, 10
  br i1 %cmp.i.i.i685, label %AT_ref.exit.i.i, label %if.end.i.i.i687

if.end.i.i.i687:                                  ; preds = %land.lhs.true.i.i.i686
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i:                                  ; preds = %land.lhs.true.i.i.i686
  %v.i.i.i688 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i.i = bitcast %union.anon.3* %v.i.i.i688 to %struct.die_struct**
  %352 = load %struct.die_struct** %die.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i681, %AT_ref.exit.i.i
  %spec.1.i.i = phi %struct.die_struct* [ %352, %AT_ref.exit.i.i ], [ %spec.029.i.i, %for.body.i.i681 ]
  %dw_attr_next.i.i689 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 1
  %a.0.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i689, align 8
  %cmp1.i.i690 = icmp eq %struct.dw_attr_struct* %a.0.i.i, null
  br i1 %cmp1.i.i690, label %for.end.i.i, label %for.body.i.i681

for.end.i.i:                                      ; preds = %for.inc.i.i
  %tobool.i.i691 = icmp eq %struct.die_struct* %spec.1.i.i, null
  br i1 %tobool.i.i691, label %get_AT_ref.exit, label %tailrecurse.i.i

land.lhs.true.i.i692:                             ; preds = %for.body.i.i681
  %a.idx.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i = load i32* %a.idx.i.i, align 4, !tbaa !59
  %cmp.i4.i = icmp eq i32 %a.idx.val.i.i, 10
  br i1 %cmp.i4.i, label %AT_ref.exit.i, label %if.end.i.i693

if.end.i.i693:                                    ; preds = %land.lhs.true.i.i692
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i:                                    ; preds = %land.lhs.true.i.i692
  %v.i.i694 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i = bitcast %union.anon.3* %v.i.i694 to %struct.die_struct**
  %353 = load %struct.die_struct** %die.i.i, align 8, !tbaa !60
  br label %get_AT_ref.exit

get_AT_ref.exit:                                  ; preds = %tailrecurse.i.i, %if.then.i.i678, %for.end.i.i, %AT_ref.exit.i
  %cond.i695 = phi %struct.die_struct* [ %353, %AT_ref.exit.i ], [ null, %for.end.i.i ], [ null, %if.then.i.i678 ], [ null, %tailrecurse.i.i ]
  %cmp7.i79.i.i = icmp eq %struct.die_struct* %.pre.i74.i.i, %cond.i695
  br i1 %cmp7.i79.i.i, label %if.end9.i87.i.i, label %if.then8.i83.i.i

if.then8.i83.i.i:                                 ; preds = %get_AT_ref.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5055, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.splice_child_die, i64 0, i64 0)) #7
  unreachable

if.end9.i87.i.i:                                  ; preds = %get_AT_ref.exit, %get_AT_ref.exit817, %if.then32.i.i
  %child.addr.042.i84.i.i = phi %struct.die_struct* [ %child.call.i72.i.i, %get_AT_ref.exit817 ], [ %346, %if.then32.i.i ], [ %child.call.i72.i.i, %get_AT_ref.exit ]
  %354 = phi %struct.die_struct* [ %type_die.0.i450, %get_AT_ref.exit817 ], [ %type_die.0.i450, %if.then32.i.i ], [ %.pre.i74.i.i, %get_AT_ref.exit ]
  %die_child.i85.i.i = getelementptr inbounds %struct.die_struct* %354, i64 0, i32 4
  %355 = load %struct.die_struct** %die_child.i85.i.i, align 8, !tbaa !6
  %tobool1136.i86.i.i = icmp eq %struct.die_struct* %355, null
  br i1 %tobool1136.i86.i.i, label %for.end.loopexit.i97.i.i, label %for.body.i93.i.i

for.cond.i89.i.i:                                 ; preds = %for.body.i93.i.i
  %356 = load %struct.die_struct** %die_sib15.i92.i.i, align 8, !tbaa !6
  %tobool11.i88.i.i = icmp eq %struct.die_struct* %356, null
  br i1 %tobool11.i88.i.i, label %for.end.loopexit.i97.i.i, label %for.body.i93.i.i

for.body.i93.i.i:                                 ; preds = %if.end9.i87.i.i, %for.cond.i89.i.i
  %357 = phi %struct.die_struct* [ %356, %for.cond.i89.i.i ], [ %355, %if.end9.i87.i.i ]
  %p.037.i90.i.i = phi %struct.die_struct** [ %die_sib15.i92.i.i, %for.cond.i89.i.i ], [ %die_child.i85.i.i, %if.end9.i87.i.i ]
  %cmp12.i91.i.i = icmp eq %struct.die_struct* %357, %child.addr.042.i84.i.i
  %die_sib15.i92.i.i = getelementptr inbounds %struct.die_struct* %357, i64 0, i32 5
  br i1 %cmp12.i91.i.i, label %if.then13.i95.i.i, label %for.cond.i89.i.i

if.then13.i95.i.i:                                ; preds = %for.body.i93.i.i
  %die_sib.i94.i.i = getelementptr inbounds %struct.die_struct* %child.addr.042.i84.i.i, i64 0, i32 5
  %358 = load %struct.die_struct** %die_sib.i94.i.i, align 8, !tbaa !63
  store %struct.die_struct* %358, %struct.die_struct** %p.037.i90.i.i, align 8, !tbaa !6
  br label %splice_child_die.exit100.i.i

for.end.loopexit.i97.i.i:                         ; preds = %for.cond.i89.i.i, %if.end9.i87.i.i
  %die_sib17.pre.i96.i.i = getelementptr inbounds %struct.die_struct* %child.addr.042.i84.i.i, i64 0, i32 5
  br label %splice_child_die.exit100.i.i

splice_child_die.exit100.i.i:                     ; preds = %for.end.loopexit.i97.i.i, %if.then13.i95.i.i
  %die_sib17.pre-phi.i98.i.i = phi %struct.die_struct** [ %die_sib17.pre.i96.i.i, %for.end.loopexit.i97.i.i ], [ %die_sib.i94.i.i, %if.then13.i95.i.i ]
  %359 = load %struct.die_struct** %die_child16.i99.i.i, align 8, !tbaa !62
  store %struct.die_struct* %359, %struct.die_struct** %die_sib17.pre-phi.i98.i.i, align 8, !tbaa !63
  store %struct.die_struct* %child.addr.042.i84.i.i, %struct.die_struct** %die_child16.i99.i.i, align 8, !tbaa !62
  br label %for.inc35.i.i

if.else33.i.i:                                    ; preds = %if.end29.i264.i, %lookup_decl_die.exit67.i.i
  tail call fastcc void @gen_decl_die(%union.tree_node* %member.1.i.i852, %struct.die_struct* %type_die.0.i450) #5
  br label %for.inc35.i.i

for.inc35.i.i:                                    ; preds = %if.else33.i.i, %splice_child_die.exit100.i.i, %for.body26.i.i
  %chain37.i.i = getelementptr inbounds %union.tree_node* %member.1.i.i852, i64 0, i32 0, i32 0, i32 0
  %member.1.i.i = load %union.tree_node** %chain37.i.i, align 8
  %tobool25.i.i = icmp eq %union.tree_node* %member.1.i.i, null
  br i1 %tobool25.i.i, label %gen_member_die.exit.i, label %for.body26.i.i

gen_member_die.exit.i:                            ; preds = %for.inc35.i.i, %for.end22.i.i
  %360 = load %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used.i218.i = getelementptr inbounds %struct.varray_head_tag* %360, i64 0, i32 1
  %361 = load i64* %elements_used.i218.i, align 8, !tbaa !67
  %cmp.i219.i = icmp eq i64 %361, 0
  br i1 %cmp.i219.i, label %if.then.i220.i, label %pop_decl_scope.exit.i

if.then.i220.i:                                   ; preds = %gen_member_die.exit.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9553, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.pop_decl_scope, i64 0, i64 0)) #7
  unreachable

pop_decl_scope.exit.i:                            ; preds = %gen_member_die.exit.i
  %dec.i.i = add i64 %361, -1
  store i64 %dec.i.i, i64* %elements_used.i218.i, align 8, !tbaa !67
  %362 = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 12
  %363 = load %union.tree_node** %362, align 8, !tbaa !131
  %tobool84.i = icmp eq %union.tree_node* %363, null
  br i1 %tobool84.i, label %if.end146, label %if.then85.i

if.then85.i:                                      ; preds = %pop_decl_scope.exit.i
  %vindex.i = getelementptr inbounds %union.tree_node* %363, i64 0, i32 0, i32 22
  %364 = load %union.tree_node** %vindex.i, align 8, !tbaa !92
  tail call fastcc void @gen_type_die(%union.tree_node* %364, %struct.die_struct* %context_die.addr.0) #5
  %.idx.i487 = getelementptr %union.tree_node* %364, i64 0, i32 0, i32 10
  %.idx.val.i488 = load %union.tree_node** %.idx.i487, align 8
  %365 = bitcast %union.tree_node* %.idx.val.i488 to %struct.die_struct*
  %call.i222.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i223.i = getelementptr inbounds i8* %call.i222.i, i64 8
  %366 = bitcast i8* %dw_attr_next.i223.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %366, align 8, !tbaa !72
  %dw_attr.i224.i = bitcast i8* %call.i222.i to i32*
  store i32 29, i32* %dw_attr.i224.i, align 4, !tbaa !57
  %dw_attr_val.i225.i = getelementptr inbounds i8* %call.i222.i, i64 16
  %val_class.i226.i = bitcast i8* %dw_attr_val.i225.i to i32*
  store i32 10, i32* %val_class.i226.i, align 4, !tbaa !59
  %v.i227.i = getelementptr inbounds i8* %call.i222.i, i64 24
  %die2.i228.i = bitcast i8* %v.i227.i to %struct.die_struct**
  store %struct.die_struct* %365, %struct.die_struct** %die2.i228.i, align 8, !tbaa !60
  %external.i229.i = getelementptr inbounds i8* %call.i222.i, i64 32
  %367 = bitcast i8* %external.i229.i to i32*
  store i32 0, i32* %367, align 4, !tbaa !108
  %cmp1.i.i231.i = icmp ne i8* %call.i222.i, null
  %or.cond.i.i232.i = and i1 %cmp.i.i.i191.i, %cmp1.i.i231.i
  br i1 %or.cond.i.i232.i, label %if.then.i.i234.i, label %if.end146

if.then.i.i234.i:                                 ; preds = %if.then85.i
  %368 = bitcast i8* %call.i222.i to %struct.dw_attr_struct*
  %die_attr.i.i233.i = getelementptr inbounds %struct.die_struct* %type_die.0.i450, i64 0, i32 2
  %369 = load %struct.dw_attr_struct** %die_attr.i.i233.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %369, %struct.dw_attr_struct** %366, align 8, !tbaa !72
  store %struct.dw_attr_struct* %368, %struct.dw_attr_struct** %die_attr.i.i233.i, align 8, !tbaa !73
  br label %if.end146

if.else91.i:                                      ; preds = %if.end67.i
  %call.i236.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i237.i = getelementptr inbounds i8* %call.i236.i, i64 8
  %370 = bitcast i8* %dw_attr_next.i237.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %370, align 8, !tbaa !72
  %dw_attr.i238.i = bitcast i8* %call.i236.i to i32*
  store i32 60, i32* %dw_attr.i238.i, align 4, !tbaa !57
  %dw_attr_val.i239.i = getelementptr inbounds i8* %call.i236.i, i64 16
  %val_class.i240.i = bitcast i8* %dw_attr_val.i239.i to i32*
  store i32 9, i32* %val_class.i240.i, align 4, !tbaa !59
  %v.i241.i = getelementptr inbounds i8* %call.i236.i, i64 24
  store i8 1, i8* %v.i241.i, align 1, !tbaa !1
  %cmp.i.i242.i = icmp ne %struct.die_struct* %type_die.0.i450, null
  %cmp1.i.i243.i = icmp ne i8* %call.i236.i, null
  %or.cond.i.i244.i = and i1 %cmp.i.i242.i, %cmp1.i.i243.i
  br i1 %or.cond.i.i244.i, label %if.then.i.i246.i, label %add_AT_flag.exit.i

if.then.i.i246.i:                                 ; preds = %if.else91.i
  %371 = bitcast i8* %call.i236.i to %struct.dw_attr_struct*
  %die_attr.i.i245.i = getelementptr inbounds %struct.die_struct* %type_die.0.i450, i64 0, i32 2
  %372 = load %struct.dw_attr_struct** %die_attr.i.i245.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %372, %struct.dw_attr_struct** %370, align 8, !tbaa !72
  store %struct.dw_attr_struct* %371, %struct.dw_attr_struct** %die_attr.i.i245.i, align 8, !tbaa !73
  br label %add_AT_flag.exit.i

add_AT_flag.exit.i:                               ; preds = %if.then.i.i246.i, %if.else91.i
  %chain93.i = getelementptr inbounds %union.tree_node* %type.addr.1.i, i64 0, i32 0, i32 0, i32 0
  %373 = load %union.tree_node** %chain93.i, align 8, !tbaa !88
  %tobool94.i = icmp eq %union.tree_node* %373, null
  br i1 %tobool94.i, label %if.end146, label %land.lhs.true95.i

land.lhs.true95.i:                                ; preds = %add_AT_flag.exit.i
  %call98.i = tail call %union.tree_node* @decl_function_context(%union.tree_node* %373) #5
  %tobool99.i = icmp eq %union.tree_node* %call98.i, null
  br i1 %tobool99.i, label %do.body.i, label %if.end146

do.body.i:                                        ; preds = %land.lhs.true95.i
  %374 = load %struct.varray_head_tag** @incomplete_types, align 8, !tbaa !6
  %elements_used.i489 = getelementptr inbounds %struct.varray_head_tag* %374, i64 0, i32 1
  %375 = load i64* %elements_used.i489, align 8, !tbaa !67
  %num_elements.i490 = getelementptr inbounds %struct.varray_head_tag* %374, i64 0, i32 0
  %376 = load i64* %num_elements.i490, align 8, !tbaa !126
  %cmp101.i = icmp ult i64 %375, %376
  br i1 %cmp101.i, label %if.end105.i, label %if.then102.i

if.then102.i:                                     ; preds = %do.body.i
  %mul.i491 = shl i64 %376, 1
  %call104.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %374, i64 %mul.i491) #5
  store %struct.varray_head_tag* %call104.i, %struct.varray_head_tag** @incomplete_types, align 8, !tbaa !6
  %elements_used106.i.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call104.i, i64 0, i32 1
  %.pre = load i64* %elements_used106.i.phi.trans.insert, align 8, !tbaa !67
  br label %if.end105.i

if.end105.i:                                      ; preds = %if.then102.i, %do.body.i
  %377 = phi i64 [ %.pre, %if.then102.i ], [ %375, %do.body.i ]
  %378 = phi %struct.varray_head_tag* [ %call104.i, %if.then102.i ], [ %374, %do.body.i ]
  %elements_used106.i = getelementptr inbounds %struct.varray_head_tag* %378, i64 0, i32 1
  %inc.i492 = add i64 %377, 1
  store i64 %inc.i492, i64* %elements_used106.i, align 8, !tbaa !67
  %data.i493 = getelementptr inbounds %struct.varray_head_tag* %378, i64 0, i32 4
  %tree.i494 = bitcast %union.varray_data_tag* %data.i493 to [1 x %union.tree_node*]*
  %arrayidx.i495 = getelementptr inbounds [1 x %union.tree_node*]* %tree.i494, i64 0, i64 %377
  store %union.tree_node* %type.addr.1.i, %union.tree_node** %arrayidx.i495, align 8, !tbaa !6
  br label %if.end146

if.end146:                                        ; preds = %for.inc.i, %if.end105.i, %land.lhs.true95.i, %add_AT_flag.exit.i, %pop_decl_scope.exit.i, %land.end.i, %if.then.i.i234.i, %if.then85.i, %if.then.i.i.i, %if.else45.i, %if.end21.i, %if.else.i
  %tobool147 = icmp eq i32 %need_pop.0, 0
  br i1 %tobool147, label %return, label %if.then148

if.then148:                                       ; preds = %if.end146
  %379 = load %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used.i = getelementptr inbounds %struct.varray_head_tag* %379, i64 0, i32 1
  %380 = load i64* %elements_used.i, align 8, !tbaa !67
  %cmp.i = icmp eq i64 %380, 0
  br i1 %cmp.i, label %if.then.i, label %pop_decl_scope.exit

if.then.i:                                        ; preds = %if.then148
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9553, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.pop_decl_scope, i64 0, i64 0)) #7
  unreachable

pop_decl_scope.exit:                              ; preds = %if.then148
  %dec.i = add i64 %380, -1
  store i64 %dec.i, i64* %elements_used.i, align 8, !tbaa !67
  br label %return

sw.default:                                       ; preds = %if.end23
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 11200, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.gen_type_die, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %if.end19.i.i331, %if.end.i.i319, %if.end.i.i319, %if.then.i.i.i.i345, %if.then34.i.i343, %if.end19.i.i, %if.end.i.i273, %if.end.i.i273, %if.then.i.i.i.i284, %if.then34.i.i, %if.end23, %if.end23, %if.end23, %if.end23, %if.end23, %if.end23, %gen_string_type_die.exit, %if.else, %if.end23, %if.end23, %sw.bb68, %add_type_attribute.exit675, %add_type_attribute.exit, %sw.bb
  %bf.load153 = load i32* %asm_written_flag, align 8
  %bf.set155 = or i32 %bf.load153, 16384
  store i32 %bf.set155, i32* %asm_written_flag, align 8
  br label %return

return:                                           ; preds = %if.then121, %if.end146, %type_main_variant.exit, %pop_decl_scope.exit, %entry, %sw.epilog, %if.then16
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_array_type_die(%union.tree_node* %type, %struct.die_struct* %context_die) #1 {
entry:
  %call = tail call fastcc %struct.die_struct* @scope_die_for(%union.tree_node* %type, %struct.die_struct* %context_die)
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %0 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 1, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i = icmp eq %struct.die_struct* %call, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %new_die.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %0, %call
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %1 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %call, %struct.die_struct** %1, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %call, i64 0, i32 4
  %2 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %3 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %2, %struct.die_struct** %3, align 8, !tbaa !63
  store %struct.die_struct* %0, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i:                                        ; preds = %entry
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #5
  %4 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %0, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %5 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %type, %union.tree_node** %5, align 8, !tbaa !64
  %6 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %7 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %6, %struct.limbo_die_struct** %7, align 8, !tbaa !52
  store %struct.limbo_die_struct* %4, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %type.idx = getelementptr %union.tree_node* %type, i64 0, i32 0, i32 11
  %type.idx.val = load %union.tree_node** %type.idx, align 8, !tbaa !102
  %cmp.i32 = icmp eq %union.tree_node* %type.idx.val, null
  br i1 %cmp.i32, label %add_name_attribute.exit, label %if.then.i33

if.then.i33:                                      ; preds = %new_die.exit
  %code.i = getelementptr inbounds %union.tree_node* %type.idx.val, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  switch i32 %bf.clear.i, label %add_name_attribute.exit [
    i32 1, label %if.end29.i
    i32 33, label %land.lhs.true.i
  ]

land.lhs.true.i:                                  ; preds = %if.then.i33
  %ignored_flag.i = getelementptr inbounds %union.tree_node* %type.idx.val, i64 0, i32 0, i32 5
  %8 = bitcast i48* %ignored_flag.i to i64*
  %bf.load18.i = load i64* %8, align 8
  %bf.cast.i = and i64 %bf.load18.i, 16384
  %tobool.i = icmp eq i64 %bf.cast.i, 0
  br i1 %tobool.i, label %if.end25.i, label %add_name_attribute.exit

if.end25.i:                                       ; preds = %land.lhs.true.i
  %name24.i = getelementptr inbounds %union.tree_node* %type.idx.val, i64 0, i32 0, i32 8
  %9 = load %union.tree_node** %name24.i, align 8, !tbaa !86
  %cmp26.i = icmp eq %union.tree_node* %9, null
  br i1 %cmp26.i, label %add_name_attribute.exit, label %if.end29.i

if.end29.i:                                       ; preds = %if.end25.i, %if.then.i33
  %t.04.i = phi %union.tree_node* [ %9, %if.end25.i ], [ %type.idx.val, %if.then.i33 ]
  %id.i = getelementptr inbounds %union.tree_node* %t.04.i, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds i8** %id.i, i64 1
  %11 = load i8** %10, align 8, !tbaa !105
  %cmp30.i = icmp eq i8* %11, null
  br i1 %cmp30.i, label %add_name_attribute.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end29.i
  %12 = load i8* %11, align 1, !tbaa !1
  %cmp31.i = icmp eq i8 %12, 0
  br i1 %cmp31.i, label %add_name_attribute.exit, label %if.then.i38

if.then.i38:                                      ; preds = %lor.lhs.false.i
  %13 = load i8* (i8*)** @demangle_name_func, align 8, !tbaa !6
  %tobool.i37 = icmp eq i8* (i8*)* %13, null
  br i1 %tobool.i37, label %if.end.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i38
  %call.i39 = tail call i8* %13(i8* %11) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i38
  %name_string.addr.0.i = phi i8* [ %call.i39, %if.then3.i ], [ %11, %if.then.i38 ]
  %call.i.i = tail call noalias i8* @xmalloc(i64 40) #5
  %14 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %15 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i.i = icmp eq %struct.ht* %15, null
  br i1 %tobool.i.i, label %if.then.i.i40, label %if.end.i.i41

if.then.i.i40:                                    ; preds = %if.end.i
  %call1.i.i = tail call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i.i, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i.i = getelementptr inbounds %struct.ht* %call1.i.i, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i.i, align 8, !tbaa !81
  %.pre.i.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i.i41

if.end.i.i41:                                     ; preds = %if.then.i.i40, %if.end.i
  %16 = phi %struct.ht* [ %15, %if.end.i ], [ %.pre.i.i, %if.then.i.i40 ]
  %call2.i.i = tail call i64 @strlen(i8* %name_string.addr.0.i) #5
  %conv.i.i = trunc i64 %call2.i.i to i32
  %call3.i.i = tail call %struct.ht_identifier* @ht_lookup(%struct.ht* %16, i8* %name_string.addr.0.i, i32 %conv.i.i, i32 1) #5
  %17 = bitcast %struct.ht_identifier* %call3.i.i to %struct.indirect_string_node*
  %18 = getelementptr inbounds %struct.ht_identifier* %call3.i.i, i64 1, i32 0
  %19 = load i32* %18, align 4, !tbaa !84
  %inc.i.i = add i32 %19, 1
  store i32 %inc.i.i, i32* %18, align 4, !tbaa !84
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %20 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %20, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i.i to i32*
  store i32 3, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 14, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_str.i.i = bitcast i8* %v.i.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %17, %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %cmp.i.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i.i = icmp ne i8* %call.i.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %add_name_attribute.exit

if.then.i.i.i:                                    ; preds = %if.end.i.i41
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i, i64 16
  %21 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %22 = load %struct.dw_attr_struct** %21, align 8, !tbaa !73
  store %struct.dw_attr_struct* %22, %struct.dw_attr_struct** %20, align 8, !tbaa !72
  store %struct.dw_attr_struct* %14, %struct.dw_attr_struct** %21, align 8, !tbaa !73
  br label %add_name_attribute.exit

add_name_attribute.exit:                          ; preds = %lor.lhs.false.i, %new_die.exit, %if.then.i33, %land.lhs.true.i, %if.end25.i, %if.end29.i, %if.end.i.i41, %if.then.i.i.i
  %symtab.i = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 10
  %.c.i = bitcast i8* %call.i to %union.tree_node*
  store %union.tree_node* %.c.i, %union.tree_node** %symtab.i, align 8, !tbaa !6
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %add_name_attribute.exit
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %23 = load i8** %values, align 8
  %values5 = getelementptr inbounds i8* %23, i64 24
  %24 = bitcast i8* %values5 to %union.tree_node**
  %25 = load %union.tree_node** %24, align 8, !tbaa !132
  %type7 = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 0, i32 1
  %26 = load %union.tree_node** %type7, align 8, !tbaa !87
  %call.i42 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i42, i64 8
  %27 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %27, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i42 to i32*
  store i32 8455, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i42, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 9, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i42, i64 24
  store i8 1, i8* %v.i, align 1, !tbaa !1
  %cmp.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i43 = icmp ne i8* %call.i42, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i43
  br i1 %or.cond.i.i, label %if.then.i.i44, label %if.end

if.then.i.i44:                                    ; preds = %if.then
  %28 = bitcast i8* %call.i42 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds i8* %call.i, i64 16
  %29 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %30 = load %struct.dw_attr_struct** %29, align 8, !tbaa !73
  store %struct.dw_attr_struct* %30, %struct.dw_attr_struct** %27, align 8, !tbaa !72
  store %struct.dw_attr_struct* %28, %struct.dw_attr_struct** %29, align 8, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.then.i.i44, %if.then, %add_name_attribute.exit
  %type.addr.0 = phi %union.tree_node* [ %type, %add_name_attribute.exit ], [ %26, %if.then ], [ %26, %if.then.i.i44 ]
  %code.i63127 = getelementptr inbounds %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load.i64128 = load i32* %code.i63127, align 8
  %bf.clear.i65129 = and i32 %bf.load.i64128, 255
  %cmp.i66130 = icmp eq i32 %bf.clear.i65129, 18
  br i1 %cmp.i66130, label %for.body.i.lr.ph, label %while.cond

for.body.i.lr.ph:                                 ; preds = %if.end
  %cmp.i.i68 = icmp eq i8* %call.i, null
  %die_child.i.i.i = getelementptr inbounds i8* %call.i, i64 32
  %31 = bitcast i8* %die_child.i.i.i to %struct.die_struct**
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %for.inc.i
  %type.addr.0.i62131 = phi %union.tree_node* [ %type.addr.0, %for.body.i.lr.ph ], [ %62, %for.inc.i ]
  %values.i = getelementptr inbounds %union.tree_node* %type.addr.0.i62131, i64 0, i32 0, i32 1
  %32 = load i8** %values.i, align 8
  %call.i.i67 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %33 = bitcast i8* %call.i.i67 to %struct.die_struct*
  %die_tag.i.i = bitcast i8* %call.i.i67 to i32*
  store i32 33, i32* %die_tag.i.i, align 4, !tbaa !69
  br i1 %cmp.i.i68, label %if.else.i.i, label %if.then.i.i70

if.then.i.i70:                                    ; preds = %for.body.i
  %cmp1.i.i.i69 = icmp eq i8* %call.i.i67, null
  br i1 %cmp1.i.i.i69, label %new_die.exit.i, label %if.then.i.i.i71

if.then.i.i.i71:                                  ; preds = %if.then.i.i70
  %cmp2.i.i.i = icmp eq i8* %call.i.i67, %call.i
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i.i.i71
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i:                                     ; preds = %if.then.i.i.i71
  %die_parent.i.i.i = getelementptr inbounds i8* %call.i.i67, i64 24
  %34 = bitcast i8* %die_parent.i.i.i to %struct.die_struct**
  store %struct.die_struct* %0, %struct.die_struct** %34, align 8, !tbaa !55
  %35 = load %struct.die_struct** %31, align 8, !tbaa !62
  %die_sib.i.i.i = getelementptr inbounds i8* %call.i.i67, i64 40
  %36 = bitcast i8* %die_sib.i.i.i to %struct.die_struct**
  store %struct.die_struct* %35, %struct.die_struct** %36, align 8, !tbaa !63
  store %struct.die_struct* %33, %struct.die_struct** %31, align 8, !tbaa !62
  br label %new_die.exit.i

if.else.i.i:                                      ; preds = %for.body.i
  %call1.i.i72 = tail call noalias i8* @xmalloc(i64 24) #5
  %37 = bitcast i8* %call1.i.i72 to %struct.limbo_die_struct*
  %die2.i.i73 = bitcast i8* %call1.i.i72 to %struct.die_struct**
  store %struct.die_struct* %33, %struct.die_struct** %die2.i.i73, align 8, !tbaa !54
  %created_for.i.i = getelementptr inbounds i8* %call1.i.i72, i64 8
  %38 = bitcast i8* %created_for.i.i to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %38, align 8, !tbaa !64
  %39 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i = getelementptr inbounds i8* %call1.i.i72, i64 16
  %40 = bitcast i8* %next.i.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %39, %struct.limbo_die_struct** %40, align 8, !tbaa !52
  store %struct.limbo_die_struct* %37, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i

new_die.exit.i:                                   ; preds = %if.else.i.i, %if.end.i.i.i, %if.then.i.i70
  %tobool.i74 = icmp eq i8* %32, null
  br i1 %tobool.i74, label %for.inc.i, label %if.then.i75

if.then.i75:                                      ; preds = %new_die.exit.i
  %minval.i = getelementptr inbounds i8* %32, i64 104
  %41 = bitcast i8* %minval.i to %union.tree_node**
  %42 = load %union.tree_node** %41, align 8, !tbaa !131
  %maxval.i = getelementptr inbounds i8* %32, i64 112
  %43 = bitcast i8* %maxval.i to %union.tree_node**
  %44 = load %union.tree_node** %43, align 8, !tbaa !125
  %type5.i = getelementptr inbounds i8* %32, i64 8
  %45 = bitcast i8* %type5.i to %union.tree_node**
  %46 = load %union.tree_node** %45, align 8, !tbaa !87
  %tobool6.i = icmp eq %union.tree_node* %46, null
  br i1 %tobool6.i, label %if.end32.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i75
  %code9.i = getelementptr inbounds i8* %32, i64 16
  %47 = bitcast i8* %code9.i to i32*
  %bf.load10.i = load i32* %47, align 8
  %bf.clear11.i = and i32 %bf.load10.i, 255
  %cmp12.i = icmp eq i32 %bf.clear11.i, 6
  br i1 %cmp12.i, label %land.lhs.true.i76, label %if.else.i77

land.lhs.true.i76:                                ; preds = %if.then7.i
  %name.i = getelementptr inbounds i8* %32, i64 96
  %48 = bitcast i8* %name.i to %union.tree_node**
  %49 = load %union.tree_node** %48, align 8, !tbaa !102
  %cmp14.i = icmp eq %union.tree_node* %49, null
  br i1 %cmp14.i, label %land.lhs.true15.i, label %if.else.i77

land.lhs.true15.i:                                ; preds = %land.lhs.true.i76
  %code19.i = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 2
  %bf.load20.i = load i32* %code19.i, align 8
  %bf.clear21.i = and i32 %bf.load20.i, 255
  %cmp22.i = icmp eq i32 %bf.clear21.i, 6
  br i1 %cmp22.i, label %land.lhs.true23.i, label %if.else.i77

land.lhs.true23.i:                                ; preds = %land.lhs.true15.i
  %50 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 11
  %51 = load %union.tree_node** %50, align 8, !tbaa !102
  %cmp28.i = icmp eq %union.tree_node* %51, null
  br i1 %cmp28.i, label %if.end32.i, label %if.else.i77

if.else.i77:                                      ; preds = %land.lhs.true23.i, %land.lhs.true15.i, %land.lhs.true.i76, %if.then7.i
  %code1.i79 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 2
  %bf.load.i80 = load i32* %code1.i79, align 8
  %bf.clear.i81 = and i32 %bf.load.i80, 255
  %52 = and i32 %bf.load.i80, 254
  %53 = icmp eq i32 %52, 6
  br i1 %53, label %land.lhs.true.i84, label %if.end.i93

land.lhs.true.i84:                                ; preds = %if.else.i77
  %type4.i82 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 1
  %54 = load %union.tree_node** %type4.i82, align 8, !tbaa !87
  %cmp5.i83 = icmp eq %union.tree_node* %54, null
  br i1 %cmp5.i83, label %if.end.i93, label %land.lhs.true6.i86

land.lhs.true6.i86:                               ; preds = %land.lhs.true.i84
  %55 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 11
  %56 = load %union.tree_node** %55, align 8, !tbaa !102
  %cmp8.i85 = icmp eq %union.tree_node* %56, null
  br i1 %cmp8.i85, label %if.then.i90, label %if.end.i93

if.then.i90:                                      ; preds = %land.lhs.true6.i86
  %code12.i87 = getelementptr inbounds %union.tree_node* %54, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i88 = load i32* %code12.i87, align 8
  %bf.clear14.i89 = and i32 %bf.load13.i88, 255
  br label %if.end.i93

if.end.i93:                                       ; preds = %if.then.i90, %land.lhs.true6.i86, %land.lhs.true.i84, %if.else.i77
  %bf.load21.i96 = phi i32 [ %bf.load13.i88, %if.then.i90 ], [ %bf.load.i80, %land.lhs.true6.i86 ], [ %bf.load.i80, %land.lhs.true.i84 ], [ %bf.load.i80, %if.else.i77 ]
  %type.addr.0.i91 = phi %union.tree_node* [ %54, %if.then.i90 ], [ %46, %land.lhs.true6.i86 ], [ %46, %land.lhs.true.i84 ], [ %46, %if.else.i77 ]
  %code.0.i92 = phi i32 [ %bf.clear14.i89, %if.then.i90 ], [ %bf.clear.i81, %land.lhs.true6.i86 ], [ %bf.clear.i81, %land.lhs.true.i84 ], [ %bf.clear.i81, %if.else.i77 ]
  switch i32 %code.0.i92, label %if.end19.i94 [
    i32 5, label %if.end32.i
    i32 0, label %if.end32.i
  ]

if.end19.i94:                                     ; preds = %if.end.i93
  %bf.clear22.i97 = lshr i32 %bf.load21.i96, 12
  %bf.clear22.i97.lobit = and i32 %bf.clear22.i97, 1
  %bf.clear29.i102 = lshr i32 %bf.load21.i96, 11
  %bf.clear29.i102.lobit = and i32 %bf.clear29.i102, 1
  %call.i105 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i91, i32 %bf.clear22.i97.lobit, i32 %bf.clear29.i102.lobit, %struct.die_struct* %0) #5
  %cmp33.i106 = icmp eq %struct.die_struct* %call.i105, null
  br i1 %cmp33.i106, label %if.end32.i, label %if.then34.i118

if.then34.i118:                                   ; preds = %if.end19.i94
  %call.i.i107 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i108 = getelementptr inbounds i8* %call.i.i107, i64 8
  %57 = bitcast i8* %dw_attr_next.i.i108 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %57, align 8, !tbaa !72
  %dw_attr.i.i109 = bitcast i8* %call.i.i107 to i32*
  store i32 73, i32* %dw_attr.i.i109, align 4, !tbaa !57
  %dw_attr_val.i.i110 = getelementptr inbounds i8* %call.i.i107, i64 16
  %val_class.i.i111 = bitcast i8* %dw_attr_val.i.i110 to i32*
  store i32 10, i32* %val_class.i.i111, align 4, !tbaa !59
  %v.i.i112 = getelementptr inbounds i8* %call.i.i107, i64 24
  %die2.i.i113 = bitcast i8* %v.i.i112 to %struct.die_struct**
  store %struct.die_struct* %call.i105, %struct.die_struct** %die2.i.i113, align 8, !tbaa !60
  %external.i.i114 = getelementptr inbounds i8* %call.i.i107, i64 32
  %58 = bitcast i8* %external.i.i114 to i32*
  store i32 0, i32* %58, align 4, !tbaa !108
  %cmp.i.i.i115 = icmp ne i8* %call.i.i67, null
  %cmp1.i.i.i116 = icmp ne i8* %call.i.i107, null
  %or.cond.i.i.i117 = and i1 %cmp.i.i.i115, %cmp1.i.i.i116
  br i1 %or.cond.i.i.i117, label %if.then.i.i.i120, label %if.end32.i

if.then.i.i.i120:                                 ; preds = %if.then34.i118
  %59 = bitcast i8* %call.i.i107 to %struct.dw_attr_struct*
  %die_attr.i.i.i119 = getelementptr inbounds i8* %call.i.i67, i64 16
  %60 = bitcast i8* %die_attr.i.i.i119 to %struct.dw_attr_struct**
  %61 = load %struct.dw_attr_struct** %60, align 8, !tbaa !73
  store %struct.dw_attr_struct* %61, %struct.dw_attr_struct** %57, align 8, !tbaa !72
  store %struct.dw_attr_struct* %59, %struct.dw_attr_struct** %60, align 8, !tbaa !73
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.end19.i94, %if.end.i93, %if.end.i93, %if.then.i.i.i120, %if.then34.i118, %land.lhs.true23.i, %if.then.i75
  tail call fastcc void @add_bound_info(%struct.die_struct* %33, i32 34, %union.tree_node* %42) #5
  %tobool33.i = icmp eq %union.tree_node* %44, null
  br i1 %tobool33.i, label %for.inc.i, label %if.then34.i78

if.then34.i78:                                    ; preds = %if.end32.i
  tail call fastcc void @add_bound_info(%struct.die_struct* %33, i32 47, %union.tree_node* %44) #5
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then34.i78, %if.end32.i, %new_die.exit.i
  %type38.i = getelementptr inbounds %union.tree_node* %type.addr.0.i62131, i64 0, i32 0, i32 0, i32 1
  %62 = load %union.tree_node** %type38.i, align 8, !tbaa !87
  %code.i63 = getelementptr inbounds %union.tree_node* %62, i64 0, i32 0, i32 0, i32 2
  %bf.load.i64 = load i32* %code.i63, align 8
  %bf.clear.i65 = and i32 %bf.load.i64, 255
  %cmp.i66 = icmp eq i32 %bf.clear.i65, 18
  br i1 %cmp.i66, label %for.body.i, label %while.cond

while.cond:                                       ; preds = %if.end, %for.inc.i, %while.cond
  %type.addr.0.pn = phi %union.tree_node* [ %element_type.0, %while.cond ], [ %type.addr.0, %for.inc.i ], [ %type.addr.0, %if.end ]
  %element_type.0.in = getelementptr inbounds %union.tree_node* %type.addr.0.pn, i64 0, i32 0, i32 0, i32 1
  %element_type.0 = load %union.tree_node** %element_type.0.in, align 8
  %code11 = getelementptr inbounds %union.tree_node* %element_type.0, i64 0, i32 0, i32 0, i32 2
  %bf.load12 = load i32* %code11, align 8
  %bf.clear13 = and i32 %bf.load12, 255
  %cmp14 = icmp eq i32 %bf.clear13, 18
  br i1 %cmp14, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  tail call fastcc void @gen_type_die(%union.tree_node* %element_type.0, %struct.die_struct* %context_die)
  %bf.load.i45 = load i32* %code11, align 8
  %bf.clear.i46 = and i32 %bf.load.i45, 255
  %63 = and i32 %bf.load.i45, 254
  %64 = icmp eq i32 %63, 6
  br i1 %64, label %land.lhs.true.i47, label %if.end.i49

land.lhs.true.i47:                                ; preds = %while.end
  %type4.i = getelementptr inbounds %union.tree_node* %element_type.0, i64 0, i32 0, i32 0, i32 1
  %65 = load %union.tree_node** %type4.i, align 8, !tbaa !87
  %cmp5.i = icmp eq %union.tree_node* %65, null
  br i1 %cmp5.i, label %if.end.i49, label %land.lhs.true6.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i47
  %66 = getelementptr inbounds %union.tree_node* %element_type.0, i64 0, i32 0, i32 11
  %67 = load %union.tree_node** %66, align 8, !tbaa !102
  %cmp8.i = icmp eq %union.tree_node* %67, null
  br i1 %cmp8.i, label %if.then.i48, label %if.end.i49

if.then.i48:                                      ; preds = %land.lhs.true6.i
  %code12.i = getelementptr inbounds %union.tree_node* %65, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i = load i32* %code12.i, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 255
  br label %if.end.i49

if.end.i49:                                       ; preds = %if.then.i48, %land.lhs.true6.i, %land.lhs.true.i47, %while.end
  %bf.load21.i = phi i32 [ %bf.load13.i, %if.then.i48 ], [ %bf.load.i45, %land.lhs.true6.i ], [ %bf.load.i45, %land.lhs.true.i47 ], [ %bf.load.i45, %while.end ]
  %type.addr.0.i = phi %union.tree_node* [ %65, %if.then.i48 ], [ %element_type.0, %land.lhs.true6.i ], [ %element_type.0, %land.lhs.true.i47 ], [ %element_type.0, %while.end ]
  %code.0.i = phi i32 [ %bf.clear14.i, %if.then.i48 ], [ %bf.clear.i46, %land.lhs.true6.i ], [ %bf.clear.i46, %land.lhs.true.i47 ], [ %bf.clear.i46, %while.end ]
  switch i32 %code.0.i, label %if.end19.i [
    i32 5, label %add_type_attribute.exit
    i32 0, label %add_type_attribute.exit
  ]

if.end19.i:                                       ; preds = %if.end.i49
  %bf.clear22.i = lshr i32 %bf.load21.i, 12
  %bf.clear22.i.lobit = and i32 %bf.clear22.i, 1
  %bf.clear29.i = lshr i32 %bf.load21.i, 11
  %bf.clear29.i.lobit = and i32 %bf.clear29.i, 1
  %call.i50 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i, i32 %bf.clear22.i.lobit, i32 %bf.clear29.i.lobit, %struct.die_struct* %context_die) #5
  %cmp33.i = icmp eq %struct.die_struct* %call.i50, null
  br i1 %cmp33.i, label %add_type_attribute.exit, label %if.then34.i

if.then34.i:                                      ; preds = %if.end19.i
  %call.i.i51 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i52 = getelementptr inbounds i8* %call.i.i51, i64 8
  %68 = bitcast i8* %dw_attr_next.i.i52 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %68, align 8, !tbaa !72
  %dw_attr.i.i53 = bitcast i8* %call.i.i51 to i32*
  store i32 73, i32* %dw_attr.i.i53, align 4, !tbaa !57
  %dw_attr_val.i.i54 = getelementptr inbounds i8* %call.i.i51, i64 16
  %val_class.i.i55 = bitcast i8* %dw_attr_val.i.i54 to i32*
  store i32 10, i32* %val_class.i.i55, align 4, !tbaa !59
  %v.i.i56 = getelementptr inbounds i8* %call.i.i51, i64 24
  %die2.i.i = bitcast i8* %v.i.i56 to %struct.die_struct**
  store %struct.die_struct* %call.i50, %struct.die_struct** %die2.i.i, align 8, !tbaa !60
  %external.i.i = getelementptr inbounds i8* %call.i.i51, i64 32
  %69 = bitcast i8* %external.i.i to i32*
  store i32 0, i32* %69, align 4, !tbaa !108
  %cmp.i.i.i57 = icmp ne i8* %call.i, null
  %cmp1.i.i.i58 = icmp ne i8* %call.i.i51, null
  %or.cond.i.i.i59 = and i1 %cmp.i.i.i57, %cmp1.i.i.i58
  br i1 %or.cond.i.i.i59, label %if.then.i.i.i61, label %add_type_attribute.exit

if.then.i.i.i61:                                  ; preds = %if.then34.i
  %70 = bitcast i8* %call.i.i51 to %struct.dw_attr_struct*
  %die_attr.i.i.i60 = getelementptr inbounds i8* %call.i, i64 16
  %71 = bitcast i8* %die_attr.i.i.i60 to %struct.dw_attr_struct**
  %72 = load %struct.dw_attr_struct** %71, align 8, !tbaa !73
  store %struct.dw_attr_struct* %72, %struct.dw_attr_struct** %68, align 8, !tbaa !72
  store %struct.dw_attr_struct* %70, %struct.dw_attr_struct** %71, align 8, !tbaa !73
  br label %add_type_attribute.exit

add_type_attribute.exit:                          ; preds = %if.then34.i, %if.then.i.i.i61, %if.end.i49, %if.end.i49, %if.end19.i
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.die_struct* @scope_die_for(%union.tree_node* nocapture readonly %t, %struct.die_struct* readnone %context_die) #1 {
entry:
  %code = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom71 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom71
  %0 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %0, 116
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9575, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.scope_die_for, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %entry
  %context = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 17
  %1 = load %struct.rtx_def** %context, align 8
  %2 = bitcast %struct.rtx_def* %1 to %union.tree_node*
  %tobool = icmp eq %struct.rtx_def* %1, null
  br i1 %tobool, label %if.then22, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %3 = getelementptr inbounds %struct.rtx_def* %1, i64 1, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.clear5 = and i32 %bf.load4, 255
  switch i32 %bf.clear5, label %if.else [
    i32 38, label %if.then22
    i32 23, label %if.then22
  ]

if.then22:                                        ; preds = %land.lhs.true, %land.lhs.true, %if.end
  %4 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  br label %if.end58

if.else:                                          ; preds = %land.lhs.true
  %idxprom2772 = zext i32 %bf.clear5 to i64
  %arrayidx28 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom2772
  %5 = load i8* %arrayidx28, align 1, !tbaa !1
  %cmp30 = icmp eq i8 %5, 116
  br i1 %cmp30, label %if.then32, label %if.end58

if.then32:                                        ; preds = %if.else
  %6 = load %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 1
  %7 = load i64* %elements_used, align 8, !tbaa !67
  %sub = add i64 %7, 4294967295
  %conv33 = trunc i64 %sub to i32
  %cmp3481 = icmp sgt i32 %conv33, -1
  br i1 %cmp3481, label %for.body.lr.ph, label %if.then44

for.body.lr.ph:                                   ; preds = %if.then32
  %data = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %sext = shl i64 %sub, 32
  %8 = ashr exact i64 %sext, 32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %9 = trunc i64 %indvars.iv to i32
  %cmp34 = icmp sgt i32 %9, 0
  br i1 %cmp34, label %for.body, label %if.then44

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx37 = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %indvars.iv
  %10 = load %union.tree_node** %arrayidx37, align 8, !tbaa !6
  %cmp38 = icmp eq %union.tree_node* %10, %2
  br i1 %cmp38, label %for.end, label %for.cond

for.end:                                          ; preds = %for.body
  %11 = trunc i64 %indvars.iv to i32
  %cmp42 = icmp slt i32 %11, 0
  br i1 %cmp42, label %if.then44, label %if.else54

if.then44:                                        ; preds = %for.cond, %if.then32, %for.end
  %12 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp45 = icmp ugt i32 %12, 1
  %bf.clear50 = and i32 %bf.load4, 16384
  %tobool51 = icmp eq i32 %bf.clear50, 0
  %or.cond = and i1 %cmp45, %tobool51
  br i1 %or.cond, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.then44
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9604, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.scope_die_for, i64 0, i64 0)) #7
  unreachable

if.end53:                                         ; preds = %if.then44
  %13 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  br label %if.end58

if.else54:                                        ; preds = %for.end
  %containing_scope.1.idx = getelementptr %struct.rtx_def* %1, i64 5, i32 1
  %14 = bitcast [1 x %union.rtunion_def]* %containing_scope.1.idx to %union.tree_node**
  %containing_scope.1.idx.val = load %union.tree_node** %14, align 8
  %15 = bitcast %union.tree_node* %containing_scope.1.idx.val to %struct.die_struct*
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.else54, %if.end53, %if.then22
  %scope_die.0 = phi %struct.die_struct* [ %4, %if.then22 ], [ %13, %if.end53 ], [ %15, %if.else54 ], [ %context_die, %if.else ]
  ret %struct.die_struct* %scope_die.0
}

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_inheritance_die(%union.tree_node* %binfo, %struct.die_struct* %context_die) #1 {
entry:
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %0 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 28, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %new_die.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %0, %context_die
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %1 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %1, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %2 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %3 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %2, %struct.die_struct** %3, align 8, !tbaa !63
  store %struct.die_struct* %0, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i:                                        ; preds = %entry
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #5
  %4 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %0, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %5 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %binfo, %union.tree_node** %5, align 8, !tbaa !64
  %6 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %7 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %6, %struct.limbo_die_struct** %7, align 8, !tbaa !52
  store %struct.limbo_die_struct* %4, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %type = getelementptr inbounds %union.tree_node* %binfo, i64 0, i32 0, i32 0, i32 1
  %8 = load %union.tree_node** %type, align 8, !tbaa !87
  %code1.i = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code1.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %9 = and i32 %bf.load.i, 254
  %10 = icmp eq i32 %9, 6
  br i1 %10, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %new_die.exit
  %type4.i = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type4.i, align 8, !tbaa !87
  %cmp5.i = icmp eq %union.tree_node* %11, null
  br i1 %cmp5.i, label %if.end.i, label %land.lhs.true6.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i
  %12 = getelementptr inbounds %union.tree_node* %8, i64 0, i32 0, i32 11
  %13 = load %union.tree_node** %12, align 8, !tbaa !102
  %cmp8.i = icmp eq %union.tree_node* %13, null
  br i1 %cmp8.i, label %if.then.i55, label %if.end.i

if.then.i55:                                      ; preds = %land.lhs.true6.i
  %code12.i = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i = load i32* %code12.i, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 255
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i55, %land.lhs.true6.i, %land.lhs.true.i, %new_die.exit
  %bf.load21.i = phi i32 [ %bf.load13.i, %if.then.i55 ], [ %bf.load.i, %land.lhs.true6.i ], [ %bf.load.i, %land.lhs.true.i ], [ %bf.load.i, %new_die.exit ]
  %type.addr.0.i = phi %union.tree_node* [ %11, %if.then.i55 ], [ %8, %land.lhs.true6.i ], [ %8, %land.lhs.true.i ], [ %8, %new_die.exit ]
  %code.0.i = phi i32 [ %bf.clear14.i, %if.then.i55 ], [ %bf.clear.i, %land.lhs.true6.i ], [ %bf.clear.i, %land.lhs.true.i ], [ %bf.clear.i, %new_die.exit ]
  switch i32 %code.0.i, label %if.end19.i [
    i32 5, label %add_type_attribute.exit
    i32 0, label %add_type_attribute.exit
  ]

if.end19.i:                                       ; preds = %if.end.i
  %bf.clear22.i = lshr i32 %bf.load21.i, 12
  %bf.clear22.i.lobit = and i32 %bf.clear22.i, 1
  %bf.clear29.i = lshr i32 %bf.load21.i, 11
  %bf.clear29.i.lobit = and i32 %bf.clear29.i, 1
  %call.i56 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i, i32 %bf.clear22.i.lobit, i32 %bf.clear29.i.lobit, %struct.die_struct* %context_die) #5
  %cmp33.i = icmp eq %struct.die_struct* %call.i56, null
  br i1 %cmp33.i, label %add_type_attribute.exit, label %if.then34.i

if.then34.i:                                      ; preds = %if.end19.i
  %call.i.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %14 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %14, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i.i to i32*
  store i32 73, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 10, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %die2.i.i = bitcast i8* %v.i.i to %struct.die_struct**
  store %struct.die_struct* %call.i56, %struct.die_struct** %die2.i.i, align 8, !tbaa !60
  %external.i.i = getelementptr inbounds i8* %call.i.i, i64 32
  %15 = bitcast i8* %external.i.i to i32*
  store i32 0, i32* %15, align 4, !tbaa !108
  %cmp.i.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i.i = icmp ne i8* %call.i.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %add_type_attribute.exit

if.then.i.i.i:                                    ; preds = %if.then34.i
  %16 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i, i64 16
  %17 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %18 = load %struct.dw_attr_struct** %17, align 8, !tbaa !73
  store %struct.dw_attr_struct* %18, %struct.dw_attr_struct** %14, align 8, !tbaa !72
  store %struct.dw_attr_struct* %16, %struct.dw_attr_struct** %17, align 8, !tbaa !73
  br label %add_type_attribute.exit

add_type_attribute.exit:                          ; preds = %if.then34.i, %if.then.i.i.i, %if.end.i, %if.end.i, %if.end19.i
  tail call fastcc void @add_data_member_location_attribute(%struct.die_struct* %0, %union.tree_node* %binfo)
  %static_flag = getelementptr inbounds %union.tree_node* %binfo, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %static_flag, align 8
  %bf.clear = and i32 %bf.load, 262144
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %add_type_attribute.exit
  %call.i26 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i26, i64 8
  %19 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %19, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i26 to i32*
  store i32 76, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i26, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 6, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i26, i64 24
  %val_unsigned.i = bitcast i8* %v.i to i64*
  store i64 1, i64* %val_unsigned.i, align 8, !tbaa !8
  %cmp.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i27 = icmp ne i8* %call.i26, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i27
  br i1 %or.cond.i.i, label %if.then.i.i28, label %if.end

if.then.i.i28:                                    ; preds = %if.then
  %20 = bitcast i8* %call.i26 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds i8* %call.i, i64 16
  %21 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %22 = load %struct.dw_attr_struct** %21, align 8, !tbaa !73
  store %struct.dw_attr_struct* %22, %struct.dw_attr_struct** %19, align 8, !tbaa !72
  store %struct.dw_attr_struct* %20, %struct.dw_attr_struct** %21, align 8, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.then.i.i28, %if.then, %add_type_attribute.exit
  %bf.load3 = load i32* %static_flag, align 8
  %bf.clear5 = and i32 %bf.load3, 524288
  %tobool6 = icmp eq i32 %bf.clear5, 0
  br i1 %tobool6, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end
  %call.i29 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i30 = getelementptr inbounds i8* %call.i29, i64 8
  %23 = bitcast i8* %dw_attr_next.i30 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %23, align 8, !tbaa !72
  %dw_attr.i31 = bitcast i8* %call.i29 to i32*
  store i32 50, i32* %dw_attr.i31, align 4, !tbaa !57
  %dw_attr_val.i32 = getelementptr inbounds i8* %call.i29, i64 16
  %val_class.i33 = bitcast i8* %dw_attr_val.i32 to i32*
  store i32 6, i32* %val_class.i33, align 4, !tbaa !59
  %v.i34 = getelementptr inbounds i8* %call.i29, i64 24
  %val_unsigned.i35 = bitcast i8* %v.i34 to i64*
  store i64 1, i64* %val_unsigned.i35, align 8, !tbaa !8
  %cmp.i.i36 = icmp ne i8* %call.i, null
  %cmp1.i.i37 = icmp ne i8* %call.i29, null
  %or.cond.i.i38 = and i1 %cmp.i.i36, %cmp1.i.i37
  br i1 %or.cond.i.i38, label %if.then.i.i40, label %if.end15

if.then.i.i40:                                    ; preds = %if.then7
  %24 = bitcast i8* %call.i29 to %struct.dw_attr_struct*
  %die_attr.i.i39 = getelementptr inbounds i8* %call.i, i64 16
  %25 = bitcast i8* %die_attr.i.i39 to %struct.dw_attr_struct**
  %26 = load %struct.dw_attr_struct** %25, align 8, !tbaa !73
  store %struct.dw_attr_struct* %26, %struct.dw_attr_struct** %23, align 8, !tbaa !72
  store %struct.dw_attr_struct* %24, %struct.dw_attr_struct** %25, align 8, !tbaa !73
  br label %if.end15

if.else:                                          ; preds = %if.end
  %bf.clear11 = and i32 %bf.load3, 2097152
  %tobool12 = icmp eq i32 %bf.clear11, 0
  br i1 %tobool12, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.else
  %call.i42 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i43 = getelementptr inbounds i8* %call.i42, i64 8
  %27 = bitcast i8* %dw_attr_next.i43 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %27, align 8, !tbaa !72
  %dw_attr.i44 = bitcast i8* %call.i42 to i32*
  store i32 50, i32* %dw_attr.i44, align 4, !tbaa !57
  %dw_attr_val.i45 = getelementptr inbounds i8* %call.i42, i64 16
  %val_class.i46 = bitcast i8* %dw_attr_val.i45 to i32*
  store i32 6, i32* %val_class.i46, align 4, !tbaa !59
  %v.i47 = getelementptr inbounds i8* %call.i42, i64 24
  %val_unsigned.i48 = bitcast i8* %v.i47 to i64*
  store i64 2, i64* %val_unsigned.i48, align 8, !tbaa !8
  %cmp.i.i49 = icmp ne i8* %call.i, null
  %cmp1.i.i50 = icmp ne i8* %call.i42, null
  %or.cond.i.i51 = and i1 %cmp.i.i49, %cmp1.i.i50
  br i1 %or.cond.i.i51, label %if.then.i.i53, label %if.end15

if.then.i.i53:                                    ; preds = %if.then13
  %28 = bitcast i8* %call.i42 to %struct.dw_attr_struct*
  %die_attr.i.i52 = getelementptr inbounds i8* %call.i, i64 16
  %29 = bitcast i8* %die_attr.i.i52 to %struct.dw_attr_struct**
  %30 = load %struct.dw_attr_struct** %29, align 8, !tbaa !73
  store %struct.dw_attr_struct* %30, %struct.dw_attr_struct** %27, align 8, !tbaa !72
  store %struct.dw_attr_struct* %28, %struct.dw_attr_struct** %29, align 8, !tbaa !73
  br label %if.end15

if.end15:                                         ; preds = %if.then.i.i53, %if.then13, %if.then.i.i40, %if.then7, %if.else
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_data_member_location_attribute(%struct.die_struct* %die, %union.tree_node* %decl) #1 {
entry:
  %loc_descr = alloca %struct.dw_loc_descr_struct*, align 8
  store %struct.dw_loc_descr_struct* null, %struct.dw_loc_descr_struct** %loc_descr, align 8
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 3
  br i1 %cmp, label %if.then, label %if.else20

if.then:                                          ; preds = %entry
  %bf.clear3 = and i32 %bf.load, 262144
  %tobool = icmp eq i32 %bf.clear3, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %0 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  br label %tailrecurse.i.i.i

tailrecurse.i.i.i:                                ; preds = %for.end.i.i.i, %land.lhs.true
  %die.tr.i.i.i = phi %struct.die_struct* [ %0, %land.lhs.true ], [ %spec.1.i.i.i, %for.end.i.i.i ]
  %cmp.i.i.i = icmp eq %struct.die_struct* %die.tr.i.i.i, null
  br i1 %cmp.i.i.i, label %if.else, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %tailrecurse.i.i.i
  %die_attr.i.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i, i64 0, i32 2
  %a.027.i.i.i = load %struct.dw_attr_struct** %die_attr.i.i.i, align 8
  %cmp128.i.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i.i, null
  br i1 %cmp128.i.i.i, label %if.else, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %if.then.i.i.i, %for.inc.i.i.i
  %a.030.i.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i.i, %for.inc.i.i.i ], [ %a.027.i.i.i, %if.then.i.i.i ]
  %spec.029.i.i.i = phi %struct.die_struct* [ %spec.1.i.i.i, %for.inc.i.i.i ], [ null, %if.then.i.i.i ]
  %dw_attr.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 0
  %1 = load i32* %dw_attr.i.i.i, align 4, !tbaa !57
  switch i32 %1, label %for.inc.i.i.i [
    i32 19, label %land.lhs.true.i.i.i
    i32 71, label %land.lhs.true.i.i.i.i
    i32 49, label %land.lhs.true.i.i.i.i
  ]

land.lhs.true.i.i.i.i:                            ; preds = %for.body.i.i.i, %for.body.i.i.i
  %a.idx.i.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i = load i32* %a.idx.i.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i.i = icmp eq i32 %a.idx.val.i.i.i.i, 10
  br i1 %cmp.i.i.i.i, label %AT_ref.exit.i.i.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i:                                ; preds = %land.lhs.true.i.i.i.i
  %v.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1
  %die.i.i.i.i = bitcast %union.anon.3* %v.i.i.i.i to %struct.die_struct**
  %2 = load %struct.die_struct** %die.i.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %AT_ref.exit.i.i.i, %for.body.i.i.i
  %spec.1.i.i.i = phi %struct.die_struct* [ %2, %AT_ref.exit.i.i.i ], [ %spec.029.i.i.i, %for.body.i.i.i ]
  %dw_attr_next.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 1
  %a.0.i.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i.i, align 8
  %cmp1.i.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i.i, null
  br i1 %cmp1.i.i.i, label %for.end.i.i.i, label %for.body.i.i.i

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i
  %tobool.i.i.i = icmp eq %struct.die_struct* %spec.1.i.i.i, null
  br i1 %tobool.i.i.i, label %if.else, label %tailrecurse.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  %cmp.i4.i.i = icmp eq i32 %a.idx.val.i.i.i, 6
  br i1 %cmp.i4.i.i, label %AT_unsigned.exit.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i.i:                             ; preds = %land.lhs.true.i.i.i
  %val_unsigned.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i64* %val_unsigned.i.i.i, align 8, !tbaa !8
  %phitmp.i.i = trunc i64 %3 to i32
  %phitmp.i = icmp eq i32 %phitmp.i.i, 4
  br i1 %phitmp.i, label %add_loc_descr.exit, label %if.else

add_loc_descr.exit:                               ; preds = %AT_unsigned.exit.i.i
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i = getelementptr inbounds i8* %call.i, i64 8
  %4 = bitcast i8* %dw_loc_opc.i to i32*
  store i32 18, i32* %4, align 4, !tbaa !18
  %dw_loc_oprnd1.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_loc_oprnd1.i to i32*
  store i32 6, i32* %val_class.i, align 4, !tbaa !23
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %val_unsigned.i = bitcast i8* %v.i to i64*
  store i64 0, i64* %val_unsigned.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i = getelementptr inbounds i8* %call.i, i64 40
  %val_class2.i = bitcast i8* %dw_loc_oprnd2.i to i32*
  store i32 6, i32* %val_class2.i, align 4, !tbaa !24
  %v4.i = getelementptr inbounds i8* %call.i, i64 48
  %val_unsigned5.i = bitcast i8* %v4.i to i64*
  store i64 0, i64* %val_unsigned5.i, align 8, !tbaa !8
  %5 = bitcast i8* %call.i to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %5, %struct.dw_loc_descr_struct** %loc_descr, align 8, !tbaa !6
  %call.i38 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i39 = getelementptr inbounds i8* %call.i38, i64 8
  %6 = bitcast i8* %dw_loc_opc.i39 to i32*
  store i32 6, i32* %6, align 4, !tbaa !18
  %dw_loc_oprnd1.i40 = getelementptr inbounds i8* %call.i38, i64 16
  %val_class.i41 = bitcast i8* %dw_loc_oprnd1.i40 to i32*
  store i32 6, i32* %val_class.i41, align 4, !tbaa !23
  %v.i42 = getelementptr inbounds i8* %call.i38, i64 24
  %val_unsigned.i43 = bitcast i8* %v.i42 to i64*
  store i64 0, i64* %val_unsigned.i43, align 8, !tbaa !8
  %dw_loc_oprnd2.i44 = getelementptr inbounds i8* %call.i38, i64 40
  %val_class2.i45 = bitcast i8* %dw_loc_oprnd2.i44 to i32*
  store i32 6, i32* %val_class2.i45, align 4, !tbaa !24
  %v4.i46 = getelementptr inbounds i8* %call.i38, i64 48
  %val_unsigned5.i47 = bitcast i8* %v4.i46 to i64*
  store i64 0, i64* %val_unsigned5.i47, align 8, !tbaa !8
  br label %for.cond.i51

for.cond.i51:                                     ; preds = %for.cond.i51, %add_loc_descr.exit
  %d.0.i48 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %add_loc_descr.exit ], [ %dw_loc_next.i50, %for.cond.i51 ]
  %7 = load %struct.dw_loc_descr_struct** %d.0.i48, align 8, !tbaa !6
  %cmp.i49 = icmp eq %struct.dw_loc_descr_struct* %7, null
  %dw_loc_next.i50 = getelementptr inbounds %struct.dw_loc_descr_struct* %7, i64 0, i32 0
  br i1 %cmp.i49, label %add_loc_descr.exit52, label %for.cond.i51

add_loc_descr.exit52:                             ; preds = %for.cond.i51
  %8 = bitcast i8* %call.i38 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %8, %struct.dw_loc_descr_struct** %d.0.i48, align 8, !tbaa !6
  %a = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %a, i64 10
  %9 = bitcast i32* %arrayidx to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !6
  %call8 = tail call i64 @tree_low_cst(%union.tree_node* %10, i32 0) #5
  %cmp9 = icmp sgt i64 %call8, -1
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %add_loc_descr.exit52
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 8599, i8* getelementptr inbounds ([35 x i8]* @__FUNCTION__.add_data_member_location_attribute, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %add_loc_descr.exit52
  %sub = sub nsw i64 0, %call8
  %cmp.i56 = icmp sgt i64 %sub, -1
  br i1 %cmp.i56, label %if.then.i, label %if.else18.i

if.then.i:                                        ; preds = %if.end
  %cmp1.i = icmp slt i64 %sub, 32
  br i1 %cmp1.i, label %if.then2.i, label %if.else.i

if.then2.i:                                       ; preds = %if.then.i
  %add.i = sub i64 48, %call8
  %conv.i57 = trunc i64 %add.i to i32
  br label %int_loc_descriptor.exit

if.else.i:                                        ; preds = %if.then.i
  %cmp3.i = icmp slt i64 %sub, 256
  br i1 %cmp3.i, label %int_loc_descriptor.exit, label %if.else6.i

if.else6.i:                                       ; preds = %if.else.i
  %cmp7.i = icmp slt i64 %sub, 65536
  br i1 %cmp7.i, label %int_loc_descriptor.exit, label %if.else10.i

if.else10.i:                                      ; preds = %if.else6.i
  %cmp11.i = icmp slt i64 %sub, 4294967296
  %..i = select i1 %cmp11.i, i32 12, i32 16
  br label %int_loc_descriptor.exit

if.else18.i:                                      ; preds = %if.end
  %cmp19.i = icmp sgt i64 %sub, -129
  br i1 %cmp19.i, label %int_loc_descriptor.exit, label %if.else22.i

if.else22.i:                                      ; preds = %if.else18.i
  %cmp23.i = icmp sgt i64 %sub, -32769
  %.43.i = select i1 %cmp23.i, i32 11, i32 17
  br label %int_loc_descriptor.exit

int_loc_descriptor.exit:                          ; preds = %if.then2.i, %if.else.i, %if.else6.i, %if.else10.i, %if.else18.i, %if.else22.i
  %op.0.i = phi i32 [ %conv.i57, %if.then2.i ], [ 8, %if.else.i ], [ 10, %if.else6.i ], [ %..i, %if.else10.i ], [ 9, %if.else18.i ], [ %.43.i, %if.else22.i ]
  %call.i.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %11 = bitcast i8* %dw_loc_opc.i.i to i32*
  store i32 %op.0.i, i32* %11, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_loc_oprnd1.i.i to i32*
  store i32 6, i32* %val_class.i.i, align 4, !tbaa !23
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i.i to i64*
  store i64 %sub, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %val_class2.i.i = bitcast i8* %dw_loc_oprnd2.i.i to i32*
  store i32 6, i32* %val_class2.i.i, align 4, !tbaa !24
  %v4.i.i = getelementptr inbounds i8* %call.i.i, i64 48
  %val_unsigned5.i.i = bitcast i8* %v4.i.i to i64*
  store i64 0, i64* %val_unsigned5.i.i, align 8, !tbaa !8
  br label %for.cond.i61

for.cond.i61:                                     ; preds = %for.cond.i61, %int_loc_descriptor.exit
  %d.0.i58 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %int_loc_descriptor.exit ], [ %dw_loc_next.i60, %for.cond.i61 ]
  %12 = load %struct.dw_loc_descr_struct** %d.0.i58, align 8, !tbaa !6
  %cmp.i59 = icmp eq %struct.dw_loc_descr_struct* %12, null
  %dw_loc_next.i60 = getelementptr inbounds %struct.dw_loc_descr_struct* %12, i64 0, i32 0
  br i1 %cmp.i59, label %add_loc_descr.exit62, label %for.cond.i61

add_loc_descr.exit62:                             ; preds = %for.cond.i61
  %13 = bitcast i8* %call.i.i to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %13, %struct.dw_loc_descr_struct** %d.0.i58, align 8, !tbaa !6
  %call.i73 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i74 = getelementptr inbounds i8* %call.i73, i64 8
  %14 = bitcast i8* %dw_loc_opc.i74 to i32*
  store i32 28, i32* %14, align 4, !tbaa !18
  %dw_loc_oprnd1.i75 = getelementptr inbounds i8* %call.i73, i64 16
  %val_class.i76 = bitcast i8* %dw_loc_oprnd1.i75 to i32*
  store i32 6, i32* %val_class.i76, align 4, !tbaa !23
  %v.i77 = getelementptr inbounds i8* %call.i73, i64 24
  %val_unsigned.i78 = bitcast i8* %v.i77 to i64*
  store i64 0, i64* %val_unsigned.i78, align 8, !tbaa !8
  %dw_loc_oprnd2.i79 = getelementptr inbounds i8* %call.i73, i64 40
  %val_class2.i80 = bitcast i8* %dw_loc_oprnd2.i79 to i32*
  store i32 6, i32* %val_class2.i80, align 4, !tbaa !24
  %v4.i81 = getelementptr inbounds i8* %call.i73, i64 48
  %val_unsigned5.i82 = bitcast i8* %v4.i81 to i64*
  store i64 0, i64* %val_unsigned5.i82, align 8, !tbaa !8
  br label %for.cond.i86

for.cond.i86:                                     ; preds = %for.cond.i86, %add_loc_descr.exit62
  %d.0.i83 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %add_loc_descr.exit62 ], [ %dw_loc_next.i85, %for.cond.i86 ]
  %15 = load %struct.dw_loc_descr_struct** %d.0.i83, align 8, !tbaa !6
  %cmp.i84 = icmp eq %struct.dw_loc_descr_struct* %15, null
  %dw_loc_next.i85 = getelementptr inbounds %struct.dw_loc_descr_struct* %15, i64 0, i32 0
  br i1 %cmp.i84, label %add_loc_descr.exit87, label %for.cond.i86

add_loc_descr.exit87:                             ; preds = %for.cond.i86
  %16 = bitcast i8* %call.i73 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %16, %struct.dw_loc_descr_struct** %d.0.i83, align 8, !tbaa !6
  %call.i88 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i89 = getelementptr inbounds i8* %call.i88, i64 8
  %17 = bitcast i8* %dw_loc_opc.i89 to i32*
  store i32 6, i32* %17, align 4, !tbaa !18
  %dw_loc_oprnd1.i90 = getelementptr inbounds i8* %call.i88, i64 16
  %val_class.i91 = bitcast i8* %dw_loc_oprnd1.i90 to i32*
  store i32 6, i32* %val_class.i91, align 4, !tbaa !23
  %v.i92 = getelementptr inbounds i8* %call.i88, i64 24
  %val_unsigned.i93 = bitcast i8* %v.i92 to i64*
  store i64 0, i64* %val_unsigned.i93, align 8, !tbaa !8
  %dw_loc_oprnd2.i94 = getelementptr inbounds i8* %call.i88, i64 40
  %val_class2.i95 = bitcast i8* %dw_loc_oprnd2.i94 to i32*
  store i32 6, i32* %val_class2.i95, align 4, !tbaa !24
  %v4.i96 = getelementptr inbounds i8* %call.i88, i64 48
  %val_unsigned5.i97 = bitcast i8* %v4.i96 to i64*
  store i64 0, i64* %val_unsigned5.i97, align 8, !tbaa !8
  br label %for.cond.i101

for.cond.i101:                                    ; preds = %for.cond.i101, %add_loc_descr.exit87
  %d.0.i98 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %add_loc_descr.exit87 ], [ %dw_loc_next.i100, %for.cond.i101 ]
  %18 = load %struct.dw_loc_descr_struct** %d.0.i98, align 8, !tbaa !6
  %cmp.i99 = icmp eq %struct.dw_loc_descr_struct* %18, null
  %dw_loc_next.i100 = getelementptr inbounds %struct.dw_loc_descr_struct* %18, i64 0, i32 0
  br i1 %cmp.i99, label %add_loc_descr.exit102, label %for.cond.i101

add_loc_descr.exit102:                            ; preds = %for.cond.i101
  %19 = bitcast i8* %call.i88 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %19, %struct.dw_loc_descr_struct** %d.0.i98, align 8, !tbaa !6
  %call.i108 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i109 = getelementptr inbounds i8* %call.i108, i64 8
  %20 = bitcast i8* %dw_loc_opc.i109 to i32*
  store i32 34, i32* %20, align 4, !tbaa !18
  %dw_loc_oprnd1.i110 = getelementptr inbounds i8* %call.i108, i64 16
  %val_class.i111 = bitcast i8* %dw_loc_oprnd1.i110 to i32*
  store i32 6, i32* %val_class.i111, align 4, !tbaa !23
  %v.i112 = getelementptr inbounds i8* %call.i108, i64 24
  %val_unsigned.i113 = bitcast i8* %v.i112 to i64*
  store i64 0, i64* %val_unsigned.i113, align 8, !tbaa !8
  %dw_loc_oprnd2.i114 = getelementptr inbounds i8* %call.i108, i64 40
  %val_class2.i115 = bitcast i8* %dw_loc_oprnd2.i114 to i32*
  store i32 6, i32* %val_class2.i115, align 4, !tbaa !24
  %v4.i116 = getelementptr inbounds i8* %call.i108, i64 48
  %val_unsigned5.i117 = bitcast i8* %v4.i116 to i64*
  store i64 0, i64* %val_unsigned5.i117, align 8, !tbaa !8
  br label %for.cond.i106

for.cond.i106:                                    ; preds = %for.cond.i106, %add_loc_descr.exit102
  %d.0.i103 = phi %struct.dw_loc_descr_struct** [ %loc_descr, %add_loc_descr.exit102 ], [ %dw_loc_next.i105, %for.cond.i106 ]
  %21 = load %struct.dw_loc_descr_struct** %d.0.i103, align 8, !tbaa !6
  %cmp.i104 = icmp eq %struct.dw_loc_descr_struct* %21, null
  %dw_loc_next.i105 = getelementptr inbounds %struct.dw_loc_descr_struct* %21, i64 0, i32 0
  br i1 %cmp.i104, label %if.end22, label %for.cond.i106

if.else:                                          ; preds = %tailrecurse.i.i.i, %if.then.i.i.i, %for.end.i.i.i, %AT_unsigned.exit.i.i, %if.then
  %a16 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %arrayidx17 = getelementptr inbounds i32* %a16, i64 2
  %22 = bitcast i32* %arrayidx17 to %union.tree_node**
  %23 = load %union.tree_node** %22, align 8, !tbaa !6
  %call18 = tail call i64 @tree_low_cst(%union.tree_node* %23, i32 0) #5
  br label %if.then24

if.else20:                                        ; preds = %entry
  %call21 = tail call fastcc i64 @field_byte_offset(%union.tree_node* %decl)
  br label %if.then24

if.end22:                                         ; preds = %for.cond.i106
  %24 = bitcast i8* %call.i108 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %24, %struct.dw_loc_descr_struct** %d.0.i103, align 8, !tbaa !6
  %loc_descr.0..pre = load %struct.dw_loc_descr_struct** %loc_descr, align 8
  %tobool23 = icmp eq %struct.dw_loc_descr_struct* %loc_descr.0..pre, null
  br i1 %tobool23, label %if.then24, label %if.end27

if.then24:                                        ; preds = %if.else20, %if.else, %if.end22
  %offset.0128 = phi i64 [ %call8, %if.end22 ], [ %call18, %if.else ], [ %call21, %if.else20 ]
  %call.i63 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %25 = bitcast i8* %call.i63 to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i64 = getelementptr inbounds i8* %call.i63, i64 8
  %26 = bitcast i8* %dw_loc_opc.i64 to i32*
  store i32 35, i32* %26, align 4, !tbaa !18
  %dw_loc_oprnd1.i65 = getelementptr inbounds i8* %call.i63, i64 16
  %val_class.i66 = bitcast i8* %dw_loc_oprnd1.i65 to i32*
  store i32 6, i32* %val_class.i66, align 4, !tbaa !23
  %v.i67 = getelementptr inbounds i8* %call.i63, i64 24
  %val_unsigned.i68 = bitcast i8* %v.i67 to i64*
  store i64 %offset.0128, i64* %val_unsigned.i68, align 8, !tbaa !8
  %dw_loc_oprnd2.i69 = getelementptr inbounds i8* %call.i63, i64 40
  %val_class2.i70 = bitcast i8* %dw_loc_oprnd2.i69 to i32*
  store i32 6, i32* %val_class2.i70, align 4, !tbaa !24
  %v4.i71 = getelementptr inbounds i8* %call.i63, i64 48
  %val_unsigned5.i72 = bitcast i8* %v4.i71 to i64*
  store i64 0, i64* %val_unsigned5.i72, align 8, !tbaa !8
  store %struct.dw_loc_descr_struct* %25, %struct.dw_loc_descr_struct** %loc_descr, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.end22, %if.then24
  %loc_descr.0.118 = phi %struct.dw_loc_descr_struct* [ %loc_descr.0..pre, %if.end22 ], [ %25, %if.then24 ]
  %call.i53 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i53, i64 8
  %27 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %27, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i53 to i32*
  store i32 56, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i53, i64 16
  %val_class.i54 = bitcast i8* %dw_attr_val.i to i32*
  store i32 2, i32* %val_class.i54, align 4, !tbaa !59
  %v.i55 = getelementptr inbounds i8* %call.i53, i64 24
  %val_loc.i = bitcast i8* %v.i55 to %struct.dw_loc_descr_struct**
  store %struct.dw_loc_descr_struct* %loc_descr.0.118, %struct.dw_loc_descr_struct** %val_loc.i, align 8, !tbaa !6
  %cmp.i.i = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i = icmp ne i8* %call.i53, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %add_AT_loc.exit

if.then.i.i:                                      ; preds = %if.end27
  %28 = bitcast i8* %call.i53 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %29 = load %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %29, %struct.dw_attr_struct** %27, align 8, !tbaa !72
  store %struct.dw_attr_struct* %28, %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  br label %add_AT_loc.exit

add_AT_loc.exit:                                  ; preds = %if.end27, %if.then.i.i
  ret void
}

declare i64 @tree_low_cst(%union.tree_node*, i32) #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @field_byte_offset(%union.tree_node* %decl) #1 {
entry:
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.then6 [
    i32 0, label %return
    i32 37, label %if.end.i
  ]

if.then6:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 8430, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.field_byte_offset, i64 0, i64 0)) #7
  unreachable

if.end.i:                                         ; preds = %entry
  %result.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 11
  %0 = load %union.tree_node** %result.i, align 8, !tbaa !104
  %cmp2.i = icmp eq %union.tree_node* %0, null
  br i1 %cmp2.i, label %if.then3.i, label %field_type.exit

if.then3.i:                                       ; preds = %if.end.i
  %type5.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type5.i, align 8, !tbaa !87
  br label %field_type.exit

field_type.exit:                                  ; preds = %if.end.i, %if.then3.i
  %retval.0.i = phi %union.tree_node* [ %1, %if.then3.i ], [ %0, %if.end.i ]
  %size = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 4
  %2 = load %union.tree_node** %size, align 8, !tbaa !112
  %tobool = icmp eq %union.tree_node* %2, null
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !tbaa !6
  %. = select i1 %tobool, %union.tree_node* %3, %union.tree_node* %2
  %call11 = tail call %union.tree_node* @bit_position(%union.tree_node* %decl) #5
  %call12 = tail call i32 @host_integerp(%union.tree_node* %call11, i32 0) #5
  %tobool13 = icmp eq i32 %call12, 0
  br i1 %tobool13, label %return, label %if.end15

if.end15:                                         ; preds = %field_type.exit
  %call16 = tail call i64 @int_bit_position(%union.tree_node* %decl) #5
  %call17 = tail call i32 @host_integerp(%union.tree_node* %., i32 1) #5
  %tobool18 = icmp eq i32 %call17, 0
  br i1 %tobool18, label %if.else21, label %if.then19

if.then19:                                        ; preds = %if.end15
  %call20 = tail call i64 @tree_low_cst(%union.tree_node* %., i32 1) #5
  br label %if.end23

if.else21:                                        ; preds = %if.end15
  %4 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %4, 20
  %5 = and i32 %and, 32
  %6 = add i32 %5, 32
  %conv68 = zext i32 %6 to i64
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then19
  %field_size_in_bits.0 = phi i64 [ %call20, %if.then19 ], [ %conv68, %if.else21 ]
  %code.i76 = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i77 = load i32* %code.i76, align 8
  %bf.clear.i78 = and i32 %bf.load.i77, 255
  %cmp.i79 = icmp eq i32 %bf.clear.i78, 0
  br i1 %cmp.i79, label %if.then.i81, label %if.else.i

if.then.i81:                                      ; preds = %if.end23
  %7 = load i32* @target_flags, align 4, !tbaa !4
  %and.i80 = lshr i32 %7, 20
  %8 = and i32 %and.i80, 32
  %9 = add i32 %8, 32
  %conv19.i = zext i32 %9 to i64
  br label %simple_type_size_in_bits.exit

if.else.i:                                        ; preds = %if.end23
  %size.i = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 2
  %10 = bitcast i32* %size.i to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !110
  %cmp2.i82 = icmp eq %union.tree_node* %11, null
  br i1 %cmp2.i82, label %simple_type_size_in_bits.exit, label %if.else5.i

if.else5.i:                                       ; preds = %if.else.i
  %call.i83 = tail call i32 @host_integerp(%union.tree_node* %11, i32 1) #5
  %tobool8.i = icmp eq i32 %call.i83, 0
  br i1 %tobool8.i, label %if.else13.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.else5.i
  %12 = load %union.tree_node** %10, align 8, !tbaa !110
  %call12.i = tail call i64 @tree_low_cst(%union.tree_node* %12, i32 1) #5
  br label %simple_type_size_in_bits.exit

if.else13.i:                                      ; preds = %if.else5.i
  %align.i = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 7
  %13 = bitcast %union.tree_node** %align.i to i32*
  %14 = load i32* %13, align 4, !tbaa !111
  %conv15.i = zext i32 %14 to i64
  br label %simple_type_size_in_bits.exit

simple_type_size_in_bits.exit:                    ; preds = %if.then.i81, %if.else.i, %if.then9.i, %if.else13.i
  %retval.0.i84 = phi i64 [ %conv19.i, %if.then.i81 ], [ %call12.i, %if.then9.i ], [ %conv15.i, %if.else13.i ], [ 0, %if.else.i ]
  %bf.load.i86 = load i32* %code.i76, align 8
  %bf.clear.i87 = and i32 %bf.load.i86, 255
  %cmp.i88 = icmp eq i32 %bf.clear.i87, 0
  br i1 %cmp.i88, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %simple_type_size_in_bits.exit
  %align.i89 = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 7
  %15 = bitcast %union.tree_node** %align.i89 to i32*
  %16 = load i32* %15, align 4, !tbaa !111
  br label %simple_type_align_in_bits.exit

cond.false.i:                                     ; preds = %simple_type_size_in_bits.exit
  %17 = load i32* @target_flags, align 4, !tbaa !4
  %and.i90 = lshr i32 %17, 20
  %18 = and i32 %and.i90, 32
  %19 = add i32 %18, 32
  br label %simple_type_align_in_bits.exit

simple_type_align_in_bits.exit:                   ; preds = %cond.true.i, %cond.false.i
  %cond2.i = phi i32 [ %16, %cond.true.i ], [ %19, %cond.false.i ]
  %bf.load.i70 = load i32* %code, align 8
  %bf.clear.i71 = and i32 %bf.load.i70, 255
  %cmp.i72 = icmp eq i32 %bf.clear.i71, 0
  br i1 %cmp.i72, label %if.then.i73, label %if.end.i74

if.then.i73:                                      ; preds = %simple_type_align_in_bits.exit
  %20 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %20, 20
  %21 = and i32 %and.i, 32
  %22 = add i32 %21, 32
  br label %simple_field_decl_align_in_bits.exit

if.end.i74:                                       ; preds = %simple_type_align_in_bits.exit
  %u1.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 6
  %23 = bitcast %union.anon* %u1.i to i32*
  %bf.load1.i = load i32* %23, align 4
  %bf.clear2.i = and i32 %bf.load1.i, 16777215
  %call.i = tail call i32 @x86_field_alignment(%union.tree_node* %decl, i32 %bf.clear2.i) #5
  br label %simple_field_decl_align_in_bits.exit

simple_field_decl_align_in_bits.exit:             ; preds = %if.then.i73, %if.end.i74
  %retval.0.i75 = phi i32 [ %22, %if.then.i73 ], [ %call.i, %if.end.i74 ]
  %add = add i64 %field_size_in_bits.0, %call16
  %sub = sub i64 %add, %retval.0.i84
  %sub27 = add i32 %cond2.i, -1
  %conv28 = zext i32 %sub27 to i64
  %add29 = add nsw i64 %conv28, %sub
  %conv30 = zext i32 %cond2.i to i64
  %div = srem i64 %add29, %conv30
  %mul = sub i64 %add29, %div
  %cmp32 = icmp sgt i64 %mul, %call16
  br i1 %cmp32, label %if.then34, label %if.end43

if.then34:                                        ; preds = %simple_field_decl_align_in_bits.exit
  %sub36 = add i32 %retval.0.i75, -1
  %conv37 = zext i32 %sub36 to i64
  %add38 = add nsw i64 %conv37, %sub
  %conv39 = zext i32 %retval.0.i75 to i64
  %div40 = srem i64 %add38, %conv39
  %mul42 = sub i64 %add38, %div40
  br label %if.end43

if.end43:                                         ; preds = %if.then34, %simple_field_decl_align_in_bits.exit
  %object_offset_in_bits.0 = phi i64 [ %mul42, %if.then34 ], [ %mul, %simple_field_decl_align_in_bits.exit ]
  %div44 = sdiv i64 %object_offset_in_bits.0, 8
  br label %return

return:                                           ; preds = %field_type.exit, %entry, %if.end43
  %retval.0 = phi i64 [ %div44, %if.end43 ], [ 0, %entry ], [ 0, %field_type.exit ]
  ret i64 %retval.0
}

declare i32 @host_integerp(%union.tree_node*, i32) #2

declare %union.tree_node* @bit_position(%union.tree_node*) #2

declare i64 @int_bit_position(%union.tree_node*) #2

declare i32 @x86_field_alignment(%union.tree_node*, i32) #2

declare i64 @int_size_in_bytes(%union.tree_node*) #2

declare i32 @tree_int_cst_sgn(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_bound_info(%struct.die_struct* %subrange_die, i32 %bound_attr, %union.tree_node* %bound) #1 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %sw.bb17, %entry
  %bound.tr = phi %union.tree_node* [ %bound, %entry ], [ %13, %sw.bb17 ]
  %code = getelementptr inbounds %union.tree_node* %bound.tr, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 0, label %sw.epilog
    i32 25, label %sw.bb1
    i32 114, label %sw.bb17
    i32 115, label %sw.bb17
    i32 116, label %sw.bb17
    i32 117, label %sw.bb17
    i32 118, label %sw.bb18
    i32 34, label %sw.bb56
    i32 35, label %sw.bb56
  ]

sw.bb1:                                           ; preds = %tailrecurse
  %call = tail call i32 @host_integerp(%union.tree_node* %bound.tr, i32 0) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %sw.epilog, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb1
  %cmp = icmp eq i32 %bound_attr, 34
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false
  %0 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  br label %tailrecurse.i.i.i

tailrecurse.i.i.i:                                ; preds = %for.end.i.i.i, %land.lhs.true
  %die.tr.i.i.i = phi %struct.die_struct* [ %0, %land.lhs.true ], [ %spec.1.i.i.i, %for.end.i.i.i ]
  %cmp.i.i.i = icmp eq %struct.die_struct* %die.tr.i.i.i, null
  br i1 %cmp.i.i.i, label %tailrecurse.i.i.i128, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %tailrecurse.i.i.i
  %die_attr.i.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i, i64 0, i32 2
  %a.027.i.i.i = load %struct.dw_attr_struct** %die_attr.i.i.i, align 8
  %cmp128.i.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i.i, null
  br i1 %cmp128.i.i.i, label %tailrecurse.i.i.i128, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %if.then.i.i.i, %for.inc.i.i.i
  %a.030.i.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i.i, %for.inc.i.i.i ], [ %a.027.i.i.i, %if.then.i.i.i ]
  %spec.029.i.i.i = phi %struct.die_struct* [ %spec.1.i.i.i, %for.inc.i.i.i ], [ null, %if.then.i.i.i ]
  %dw_attr.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 0
  %1 = load i32* %dw_attr.i.i.i, align 4, !tbaa !57
  switch i32 %1, label %for.inc.i.i.i [
    i32 19, label %land.lhs.true.i.i.i
    i32 71, label %land.lhs.true.i.i.i.i
    i32 49, label %land.lhs.true.i.i.i.i
  ]

land.lhs.true.i.i.i.i:                            ; preds = %for.body.i.i.i, %for.body.i.i.i
  %a.idx.i.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i = load i32* %a.idx.i.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i.i = icmp eq i32 %a.idx.val.i.i.i.i, 10
  br i1 %cmp.i.i.i.i, label %AT_ref.exit.i.i.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i:                                ; preds = %land.lhs.true.i.i.i.i
  %v.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1
  %die.i.i.i.i = bitcast %union.anon.3* %v.i.i.i.i to %struct.die_struct**
  %2 = load %struct.die_struct** %die.i.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %AT_ref.exit.i.i.i, %for.body.i.i.i
  %spec.1.i.i.i = phi %struct.die_struct* [ %2, %AT_ref.exit.i.i.i ], [ %spec.029.i.i.i, %for.body.i.i.i ]
  %dw_attr_next.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 1
  %a.0.i.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i.i, align 8
  %cmp1.i.i.i = icmp eq %struct.dw_attr_struct* %a.0.i.i.i, null
  br i1 %cmp1.i.i.i, label %for.end.i.i.i, label %for.body.i.i.i

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i
  %tobool.i.i.i = icmp eq %struct.die_struct* %spec.1.i.i.i, null
  br i1 %tobool.i.i.i, label %tailrecurse.i.i.i128, label %tailrecurse.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  %cmp.i4.i.i = icmp eq i32 %a.idx.val.i.i.i, 6
  br i1 %cmp.i4.i.i, label %is_c_family.exit, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

is_c_family.exit:                                 ; preds = %land.lhs.true.i.i.i
  %val_unsigned.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i64* %val_unsigned.i.i.i, align 8, !tbaa !8
  %phitmp.i.i = trunc i64 %3 to i32
  switch i32 %phitmp.i.i, label %tailrecurse.i.i.i128 [
    i32 4, label %land.lhs.true7
    i32 2, label %land.lhs.true7
    i32 1, label %land.lhs.true7
  ]

tailrecurse.i.i.i128:                             ; preds = %is_c_family.exit, %tailrecurse.i.i.i, %if.then.i.i.i, %for.end.i.i.i, %for.end.i.i.i151
  %die.tr.i.i.i126 = phi %struct.die_struct* [ %spec.1.i.i.i145, %for.end.i.i.i151 ], [ %0, %for.end.i.i.i ], [ %0, %if.then.i.i.i ], [ %0, %tailrecurse.i.i.i ], [ %0, %is_c_family.exit ]
  %cmp.i.i.i127 = icmp eq %struct.die_struct* %die.tr.i.i.i126, null
  br i1 %cmp.i.i.i127, label %tailrecurse.i.i.i163, label %if.then.i.i.i132

if.then.i.i.i132:                                 ; preds = %tailrecurse.i.i.i128
  %die_attr.i.i.i129 = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i126, i64 0, i32 2
  %a.027.i.i.i130 = load %struct.dw_attr_struct** %die_attr.i.i.i129, align 8
  %cmp128.i.i.i131 = icmp eq %struct.dw_attr_struct* %a.027.i.i.i130, null
  br i1 %cmp128.i.i.i131, label %tailrecurse.i.i.i163, label %for.body.i.i.i136

for.body.i.i.i136:                                ; preds = %if.then.i.i.i132, %for.inc.i.i.i149
  %a.030.i.i.i133 = phi %struct.dw_attr_struct* [ %a.0.i.i.i147, %for.inc.i.i.i149 ], [ %a.027.i.i.i130, %if.then.i.i.i132 ]
  %spec.029.i.i.i134 = phi %struct.die_struct* [ %spec.1.i.i.i145, %for.inc.i.i.i149 ], [ null, %if.then.i.i.i132 ]
  %dw_attr.i.i.i135 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i133, i64 0, i32 0
  %4 = load i32* %dw_attr.i.i.i135, align 4, !tbaa !57
  switch i32 %4, label %for.inc.i.i.i149 [
    i32 19, label %land.lhs.true.i.i.i155
    i32 71, label %land.lhs.true.i.i.i.i140
    i32 49, label %land.lhs.true.i.i.i.i140
  ]

land.lhs.true.i.i.i.i140:                         ; preds = %for.body.i.i.i136, %for.body.i.i.i136
  %a.idx.i.i.i.i137 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i133, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i138 = load i32* %a.idx.i.i.i.i137, align 4, !tbaa !59
  %cmp.i.i.i.i139 = icmp eq i32 %a.idx.val.i.i.i.i138, 10
  br i1 %cmp.i.i.i.i139, label %AT_ref.exit.i.i.i144, label %if.end.i.i.i.i141

if.end.i.i.i.i141:                                ; preds = %land.lhs.true.i.i.i.i140
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i144:                             ; preds = %land.lhs.true.i.i.i.i140
  %v.i.i.i.i142 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i133, i64 0, i32 2, i32 1
  %die.i.i.i.i143 = bitcast %union.anon.3* %v.i.i.i.i142 to %struct.die_struct**
  %5 = load %struct.die_struct** %die.i.i.i.i143, align 8, !tbaa !60
  br label %for.inc.i.i.i149

for.inc.i.i.i149:                                 ; preds = %AT_ref.exit.i.i.i144, %for.body.i.i.i136
  %spec.1.i.i.i145 = phi %struct.die_struct* [ %5, %AT_ref.exit.i.i.i144 ], [ %spec.029.i.i.i134, %for.body.i.i.i136 ]
  %dw_attr_next.i.i.i146 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i133, i64 0, i32 1
  %a.0.i.i.i147 = load %struct.dw_attr_struct** %dw_attr_next.i.i.i146, align 8
  %cmp1.i.i.i148 = icmp eq %struct.dw_attr_struct* %a.0.i.i.i147, null
  br i1 %cmp1.i.i.i148, label %for.end.i.i.i151, label %for.body.i.i.i136

for.end.i.i.i151:                                 ; preds = %for.inc.i.i.i149
  %tobool.i.i.i150 = icmp eq %struct.die_struct* %spec.1.i.i.i145, null
  br i1 %tobool.i.i.i150, label %tailrecurse.i.i.i163, label %tailrecurse.i.i.i128

land.lhs.true.i.i.i155:                           ; preds = %for.body.i.i.i136
  %a.idx.i.i.i152 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i133, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i153 = load i32* %a.idx.i.i.i152, align 4, !tbaa !59
  %cmp.i4.i.i154 = icmp eq i32 %a.idx.val.i.i.i153, 6
  br i1 %cmp.i4.i.i154, label %AT_unsigned.exit.i.i159, label %if.end.i.i.i156

if.end.i.i.i156:                                  ; preds = %land.lhs.true.i.i.i155
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i.i159:                          ; preds = %land.lhs.true.i.i.i155
  %val_unsigned.i.i.i157 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i133, i64 0, i32 2, i32 1, i32 0, i32 0
  %6 = load i64* %val_unsigned.i.i.i157, align 8, !tbaa !8
  %phitmp.i.i158 = trunc i64 %6 to i32
  %phitmp.i = icmp eq i32 %phitmp.i.i158, 11
  br i1 %phitmp.i, label %land.lhs.true7, label %tailrecurse.i.i.i163

land.lhs.true7:                                   ; preds = %is_c_family.exit, %is_c_family.exit, %is_c_family.exit, %AT_unsigned.exit.i.i159
  %call8 = tail call i32 @integer_zerop(%union.tree_node* %bound.tr) #5
  %tobool9 = icmp eq i32 %call8, 0
  br i1 %tobool9, label %land.lhs.true7.lor.lhs.false10_crit_edge, label %sw.epilog

land.lhs.true7.lor.lhs.false10_crit_edge:         ; preds = %land.lhs.true7
  %.pre = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  br label %tailrecurse.i.i.i163

tailrecurse.i.i.i163:                             ; preds = %AT_unsigned.exit.i.i159, %land.lhs.true7.lor.lhs.false10_crit_edge, %for.end.i.i.i151, %if.then.i.i.i132, %tailrecurse.i.i.i128, %for.end.i.i.i186
  %die.tr.i.i.i161 = phi %struct.die_struct* [ %spec.1.i.i.i180, %for.end.i.i.i186 ], [ %0, %AT_unsigned.exit.i.i159 ], [ %.pre, %land.lhs.true7.lor.lhs.false10_crit_edge ], [ %0, %for.end.i.i.i151 ], [ %0, %if.then.i.i.i132 ], [ %0, %tailrecurse.i.i.i128 ]
  %cmp.i.i.i162 = icmp eq %struct.die_struct* %die.tr.i.i.i161, null
  br i1 %cmp.i.i.i162, label %if.else, label %if.then.i.i.i167

if.then.i.i.i167:                                 ; preds = %tailrecurse.i.i.i163
  %die_attr.i.i.i164 = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i161, i64 0, i32 2
  %a.027.i.i.i165 = load %struct.dw_attr_struct** %die_attr.i.i.i164, align 8
  %cmp128.i.i.i166 = icmp eq %struct.dw_attr_struct* %a.027.i.i.i165, null
  br i1 %cmp128.i.i.i166, label %if.else, label %for.body.i.i.i171

for.body.i.i.i171:                                ; preds = %if.then.i.i.i167, %for.inc.i.i.i184
  %a.030.i.i.i168 = phi %struct.dw_attr_struct* [ %a.0.i.i.i182, %for.inc.i.i.i184 ], [ %a.027.i.i.i165, %if.then.i.i.i167 ]
  %spec.029.i.i.i169 = phi %struct.die_struct* [ %spec.1.i.i.i180, %for.inc.i.i.i184 ], [ null, %if.then.i.i.i167 ]
  %dw_attr.i.i.i170 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i168, i64 0, i32 0
  %7 = load i32* %dw_attr.i.i.i170, align 4, !tbaa !57
  switch i32 %7, label %for.inc.i.i.i184 [
    i32 19, label %land.lhs.true.i.i.i190
    i32 71, label %land.lhs.true.i.i.i.i175
    i32 49, label %land.lhs.true.i.i.i.i175
  ]

land.lhs.true.i.i.i.i175:                         ; preds = %for.body.i.i.i171, %for.body.i.i.i171
  %a.idx.i.i.i.i172 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i168, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i173 = load i32* %a.idx.i.i.i.i172, align 4, !tbaa !59
  %cmp.i.i.i.i174 = icmp eq i32 %a.idx.val.i.i.i.i173, 10
  br i1 %cmp.i.i.i.i174, label %AT_ref.exit.i.i.i179, label %if.end.i.i.i.i176

if.end.i.i.i.i176:                                ; preds = %land.lhs.true.i.i.i.i175
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i179:                             ; preds = %land.lhs.true.i.i.i.i175
  %v.i.i.i.i177 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i168, i64 0, i32 2, i32 1
  %die.i.i.i.i178 = bitcast %union.anon.3* %v.i.i.i.i177 to %struct.die_struct**
  %8 = load %struct.die_struct** %die.i.i.i.i178, align 8, !tbaa !60
  br label %for.inc.i.i.i184

for.inc.i.i.i184:                                 ; preds = %AT_ref.exit.i.i.i179, %for.body.i.i.i171
  %spec.1.i.i.i180 = phi %struct.die_struct* [ %8, %AT_ref.exit.i.i.i179 ], [ %spec.029.i.i.i169, %for.body.i.i.i171 ]
  %dw_attr_next.i.i.i181 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i168, i64 0, i32 1
  %a.0.i.i.i182 = load %struct.dw_attr_struct** %dw_attr_next.i.i.i181, align 8
  %cmp1.i.i.i183 = icmp eq %struct.dw_attr_struct* %a.0.i.i.i182, null
  br i1 %cmp1.i.i.i183, label %for.end.i.i.i186, label %for.body.i.i.i171

for.end.i.i.i186:                                 ; preds = %for.inc.i.i.i184
  %tobool.i.i.i185 = icmp eq %struct.die_struct* %spec.1.i.i.i180, null
  br i1 %tobool.i.i.i185, label %if.else, label %tailrecurse.i.i.i163

land.lhs.true.i.i.i190:                           ; preds = %for.body.i.i.i171
  %a.idx.i.i.i187 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i168, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i188 = load i32* %a.idx.i.i.i187, align 4, !tbaa !59
  %cmp.i4.i.i189 = icmp eq i32 %a.idx.val.i.i.i188, 6
  br i1 %cmp.i4.i.i189, label %AT_unsigned.exit.i.i195, label %if.end.i.i.i191

if.end.i.i.i191:                                  ; preds = %land.lhs.true.i.i.i190
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i.i195:                          ; preds = %land.lhs.true.i.i.i190
  %val_unsigned.i.i.i192 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i168, i64 0, i32 2, i32 1, i32 0, i32 0
  %9 = load i64* %val_unsigned.i.i.i192, align 8, !tbaa !8
  %phitmp.i.i193 = trunc i64 %9 to i32
  %phitmp.i194 = add i32 %phitmp.i.i193, -7
  %phitmp3.i = icmp ult i32 %phitmp.i194, 2
  br i1 %phitmp3.i, label %land.lhs.true13, label %if.else

land.lhs.true13:                                  ; preds = %AT_unsigned.exit.i.i195
  %call14 = tail call i32 @integer_onep(%union.tree_node* %bound.tr) #5
  %tobool15 = icmp eq i32 %call14, 0
  br i1 %tobool15, label %if.else, label %sw.epilog

if.else:                                          ; preds = %tailrecurse.i.i.i163, %if.then.i.i.i167, %for.end.i.i.i186, %AT_unsigned.exit.i.i195, %land.lhs.true13, %lor.lhs.false
  %call16 = tail call i64 @tree_low_cst(%union.tree_node* %bound.tr, i32 0) #5
  %call.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i, i64 8
  %10 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %10, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i to i32*
  store i32 %bound_attr, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 6, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %val_unsigned.i = bitcast i8* %v.i to i64*
  store i64 %call16, i64* %val_unsigned.i, align 8, !tbaa !8
  %cmp.i.i = icmp ne %struct.die_struct* %subrange_die, null
  %cmp1.i.i = icmp ne i8* %call.i, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %sw.epilog

if.then.i.i:                                      ; preds = %if.else
  %11 = bitcast i8* %call.i to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %subrange_die, i64 0, i32 2
  %12 = load %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %12, %struct.dw_attr_struct** %10, align 8, !tbaa !72
  store %struct.dw_attr_struct* %11, %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  br label %sw.epilog

sw.bb17:                                          ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %operands = getelementptr inbounds %union.tree_node* %bound.tr, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %13 = load %union.tree_node** %arrayidx, align 8, !tbaa !6
  br label %tailrecurse

sw.bb18:                                          ; preds = %tailrecurse
  %operands20 = getelementptr inbounds %union.tree_node* %bound.tr, i64 0, i32 0, i32 2
  %arrayidx21 = getelementptr inbounds i32* %operands20, i64 4
  %14 = bitcast i32* %arrayidx21 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %14, align 8, !tbaa !6
  %tobool22 = icmp eq %struct.rtx_def* %15, null
  br i1 %tobool22, label %sw.epilog, label %land.lhs.true23

land.lhs.true23:                                  ; preds = %sw.bb18
  %16 = load i32* @optimize, align 4, !tbaa !4
  %tobool24 = icmp eq i32 %16, 0
  br i1 %tobool24, label %if.then32, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %land.lhs.true23
  %17 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load29 = load i32* %17, align 8
  %bf.clear30 = and i32 %bf.load29, 65535
  %cmp31 = icmp eq i32 %bf.clear30, 66
  br i1 %cmp31, label %if.then32, label %sw.epilog

if.then32:                                        ; preds = %land.lhs.true23, %lor.lhs.false25
  %18 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  %.idx125 = getelementptr %union.tree_node* %18, i64 0, i32 0, i32 3
  %.idx125.val = load i32* %.idx125, align 4, !tbaa !65
  %19 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i = icmp ugt i32 %19, %.idx125.val
  br i1 %cmp.i, label %lookup_decl_die.exit, label %lookup_decl_die.exit.thread

lookup_decl_die.exit.thread:                      ; preds = %if.then32
  %call.i198353 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %20 = bitcast i8* %call.i198353 to %struct.die_struct*
  %die_tag.i354 = bitcast i8* %call.i198353 to i32*
  store i32 52, i32* %die_tag.i354, align 4, !tbaa !69
  br label %if.else.i

lookup_decl_die.exit:                             ; preds = %if.then32
  %idxprom.i = zext i32 %.idx125.val to i64
  %21 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i = getelementptr inbounds %struct.die_struct** %21, i64 %idxprom.i
  %22 = load %struct.die_struct** %arrayidx.i, align 8, !tbaa !6
  %call.i198 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %23 = bitcast i8* %call.i198 to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i198 to i32*
  store i32 52, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i199 = icmp eq %struct.die_struct* %22, null
  br i1 %cmp.i199, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %lookup_decl_die.exit
  %cmp1.i.i200 = icmp eq i8* %call.i198, null
  br i1 %cmp1.i.i200, label %new_die.exit, label %if.then.i.i201

if.then.i.i201:                                   ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %23, %22
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i201
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i201
  %die_parent.i.i = getelementptr inbounds i8* %call.i198, i64 24
  %24 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %22, %struct.die_struct** %24, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %22, i64 0, i32 4
  %25 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i198, i64 40
  %26 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %25, %struct.die_struct** %26, align 8, !tbaa !63
  store %struct.die_struct* %23, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i:                                        ; preds = %lookup_decl_die.exit.thread, %lookup_decl_die.exit
  %27 = phi %struct.die_struct* [ %20, %lookup_decl_die.exit.thread ], [ %23, %lookup_decl_die.exit ]
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #5
  %28 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %27, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %29 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %bound.tr, %union.tree_node** %29, align 8, !tbaa !64
  %30 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %31 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %30, %struct.limbo_die_struct** %31, align 8, !tbaa !52
  store %struct.limbo_die_struct* %28, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %32 = phi %struct.die_struct* [ %23, %if.then.i ], [ %23, %if.end.i.i ], [ %27, %if.else.i ]
  %cond.i356 = phi %struct.die_struct* [ %22, %if.then.i ], [ %22, %if.end.i.i ], [ null, %if.else.i ]
  %33 = load %struct.rtx_def** %14, align 8, !tbaa !6
  %34 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 0
  %bf.load38 = load i32* %34, align 8
  %bf.clear39 = and i32 %bf.load38, 65535
  %cmp40 = icmp eq i32 %bf.clear39, 66
  br i1 %cmp40, label %if.then41, label %if.end53

if.then41:                                        ; preds = %new_die.exit
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call43 = tail call %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def* %35, %union.tree_node* %bound.tr) #5
  %36 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %cmp47 = icmp eq %struct.rtx_def* %36, %call43
  br i1 %cmp47, label %if.end53, label %if.then48

if.then48:                                        ; preds = %if.then41
  %bf.load49 = load i32* %34, align 8
  %bf.lshr = lshr i32 %bf.load49, 16
  %bf.clear50 = and i32 %bf.lshr, 255
  %call51 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear50, %struct.rtx_def* %call43) #5
  br label %if.end53

if.end53:                                         ; preds = %if.then41, %if.then48, %new_die.exit
  %loc.0 = phi %struct.rtx_def* [ %call51, %if.then48 ], [ %33, %if.then41 ], [ %33, %new_die.exit ]
  %call.i202 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i203 = getelementptr inbounds i8* %call.i202, i64 8
  %37 = bitcast i8* %dw_attr_next.i203 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %37, align 8, !tbaa !72
  %dw_attr.i204 = bitcast i8* %call.i202 to i32*
  store i32 52, i32* %dw_attr.i204, align 4, !tbaa !57
  %dw_attr_val.i205 = getelementptr inbounds i8* %call.i202, i64 16
  %val_class.i206 = bitcast i8* %dw_attr_val.i205 to i32*
  store i32 9, i32* %val_class.i206, align 4, !tbaa !59
  %v.i207 = getelementptr inbounds i8* %call.i202, i64 24
  store i8 1, i8* %v.i207, align 1, !tbaa !1
  %cmp.i.i208 = icmp ne %struct.die_struct* %32, null
  %cmp1.i.i209 = icmp ne i8* %call.i202, null
  %or.cond.i.i210 = and i1 %cmp.i.i208, %cmp1.i.i209
  br i1 %or.cond.i.i210, label %if.then.i.i212, label %add_AT_flag.exit

if.then.i.i212:                                   ; preds = %if.end53
  %38 = bitcast i8* %call.i202 to %struct.dw_attr_struct*
  %die_attr.i.i211 = getelementptr inbounds %struct.die_struct* %32, i64 0, i32 2
  %39 = load %struct.dw_attr_struct** %die_attr.i.i211, align 8, !tbaa !73
  store %struct.dw_attr_struct* %39, %struct.dw_attr_struct** %37, align 8, !tbaa !72
  store %struct.dw_attr_struct* %38, %struct.dw_attr_struct** %die_attr.i.i211, align 8, !tbaa !73
  br label %add_AT_flag.exit

add_AT_flag.exit:                                 ; preds = %if.end53, %if.then.i.i212
  %type = getelementptr inbounds %union.tree_node* %bound.tr, i64 0, i32 0, i32 0, i32 1
  %40 = load %union.tree_node** %type, align 8, !tbaa !87
  %code1.i313 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 0, i32 2
  %bf.load.i314 = load i32* %code1.i313, align 8
  %bf.clear.i315 = and i32 %bf.load.i314, 255
  %41 = and i32 %bf.load.i314, 254
  %42 = icmp eq i32 %41, 6
  br i1 %42, label %land.lhs.true.i318, label %if.end.i327

land.lhs.true.i318:                               ; preds = %add_AT_flag.exit
  %type4.i316 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 0, i32 1
  %43 = load %union.tree_node** %type4.i316, align 8, !tbaa !87
  %cmp5.i317 = icmp eq %union.tree_node* %43, null
  br i1 %cmp5.i317, label %if.end.i327, label %land.lhs.true6.i320

land.lhs.true6.i320:                              ; preds = %land.lhs.true.i318
  %44 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 11
  %45 = load %union.tree_node** %44, align 8, !tbaa !102
  %cmp8.i319 = icmp eq %union.tree_node* %45, null
  br i1 %cmp8.i319, label %if.then.i324, label %if.end.i327

if.then.i324:                                     ; preds = %land.lhs.true6.i320
  %code12.i321 = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i322 = load i32* %code12.i321, align 8
  %bf.clear14.i323 = and i32 %bf.load13.i322, 255
  br label %if.end.i327

if.end.i327:                                      ; preds = %if.then.i324, %land.lhs.true6.i320, %land.lhs.true.i318, %add_AT_flag.exit
  %bf.load27.i331 = phi i32 [ %bf.load13.i322, %if.then.i324 ], [ %bf.load.i314, %land.lhs.true6.i320 ], [ %bf.load.i314, %land.lhs.true.i318 ], [ %bf.load.i314, %add_AT_flag.exit ]
  %type.addr.0.i325 = phi %union.tree_node* [ %43, %if.then.i324 ], [ %40, %land.lhs.true6.i320 ], [ %40, %land.lhs.true.i318 ], [ %40, %add_AT_flag.exit ]
  %code.0.i326 = phi i32 [ %bf.clear14.i323, %if.then.i324 ], [ %bf.clear.i315, %land.lhs.true6.i320 ], [ %bf.clear.i315, %land.lhs.true.i318 ], [ %bf.clear.i315, %add_AT_flag.exit ]
  switch i32 %code.0.i326, label %if.end19.i328 [
    i32 5, label %add_type_attribute.exit352
    i32 0, label %add_type_attribute.exit352
  ]

if.end19.i328:                                    ; preds = %if.end.i327
  %bf.clear29.i332 = lshr i32 %bf.load27.i331, 11
  %bf.clear29.i332.lobit = and i32 %bf.clear29.i332, 1
  %call.i335 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i325, i32 1, i32 %bf.clear29.i332.lobit, %struct.die_struct* %cond.i356) #5
  %cmp33.i336 = icmp eq %struct.die_struct* %call.i335, null
  br i1 %cmp33.i336, label %add_type_attribute.exit352, label %if.then34.i348

if.then34.i348:                                   ; preds = %if.end19.i328
  %call.i.i337 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i338 = getelementptr inbounds i8* %call.i.i337, i64 8
  %46 = bitcast i8* %dw_attr_next.i.i338 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %46, align 8, !tbaa !72
  %dw_attr.i.i339 = bitcast i8* %call.i.i337 to i32*
  store i32 73, i32* %dw_attr.i.i339, align 4, !tbaa !57
  %dw_attr_val.i.i340 = getelementptr inbounds i8* %call.i.i337, i64 16
  %val_class.i.i341 = bitcast i8* %dw_attr_val.i.i340 to i32*
  store i32 10, i32* %val_class.i.i341, align 4, !tbaa !59
  %v.i.i342 = getelementptr inbounds i8* %call.i.i337, i64 24
  %die2.i.i343 = bitcast i8* %v.i.i342 to %struct.die_struct**
  store %struct.die_struct* %call.i335, %struct.die_struct** %die2.i.i343, align 8, !tbaa !60
  %external.i.i344 = getelementptr inbounds i8* %call.i.i337, i64 32
  %47 = bitcast i8* %external.i.i344 to i32*
  store i32 0, i32* %47, align 4, !tbaa !108
  %cmp1.i.i.i346 = icmp ne i8* %call.i.i337, null
  %or.cond.i.i.i347 = and i1 %cmp.i.i208, %cmp1.i.i.i346
  br i1 %or.cond.i.i.i347, label %if.then.i.i.i350, label %add_type_attribute.exit352

if.then.i.i.i350:                                 ; preds = %if.then34.i348
  %48 = bitcast i8* %call.i.i337 to %struct.dw_attr_struct*
  %die_attr.i.i.i349 = getelementptr inbounds %struct.die_struct* %32, i64 0, i32 2
  %49 = load %struct.dw_attr_struct** %die_attr.i.i.i349, align 8, !tbaa !73
  store %struct.dw_attr_struct* %49, %struct.dw_attr_struct** %46, align 8, !tbaa !72
  store %struct.dw_attr_struct* %48, %struct.dw_attr_struct** %die_attr.i.i.i349, align 8, !tbaa !73
  br label %add_type_attribute.exit352

add_type_attribute.exit352:                       ; preds = %if.then34.i348, %if.then.i.i.i350, %if.end.i327, %if.end.i327, %if.end19.i328
  tail call fastcc void @add_AT_location_description(%struct.die_struct* %32, %struct.rtx_def* %loc.0)
  %call.i213 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i214 = getelementptr inbounds i8* %call.i213, i64 8
  %50 = bitcast i8* %dw_attr_next.i214 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %50, align 8, !tbaa !72
  %dw_attr.i215 = bitcast i8* %call.i213 to i32*
  store i32 %bound_attr, i32* %dw_attr.i215, align 4, !tbaa !57
  %dw_attr_val.i216 = getelementptr inbounds i8* %call.i213, i64 16
  %val_class.i217 = bitcast i8* %dw_attr_val.i216 to i32*
  store i32 10, i32* %val_class.i217, align 4, !tbaa !59
  %v.i218 = getelementptr inbounds i8* %call.i213, i64 24
  %die2.i219 = bitcast i8* %v.i218 to %struct.die_struct**
  store %struct.die_struct* %32, %struct.die_struct** %die2.i219, align 8, !tbaa !60
  %external.i = getelementptr inbounds i8* %call.i213, i64 32
  %51 = bitcast i8* %external.i to i32*
  store i32 0, i32* %51, align 4, !tbaa !108
  %cmp.i.i220 = icmp ne %struct.die_struct* %subrange_die, null
  %cmp1.i.i221 = icmp ne i8* %call.i213, null
  %or.cond.i.i222 = and i1 %cmp.i.i220, %cmp1.i.i221
  br i1 %or.cond.i.i222, label %if.then.i.i224, label %sw.epilog

if.then.i.i224:                                   ; preds = %add_type_attribute.exit352
  %52 = bitcast i8* %call.i213 to %struct.dw_attr_struct*
  %die_attr.i.i223 = getelementptr inbounds %struct.die_struct* %subrange_die, i64 0, i32 2
  %53 = load %struct.dw_attr_struct** %die_attr.i.i223, align 8, !tbaa !73
  store %struct.dw_attr_struct* %53, %struct.dw_attr_struct** %50, align 8, !tbaa !72
  store %struct.dw_attr_struct* %52, %struct.dw_attr_struct** %die_attr.i.i223, align 8, !tbaa !73
  br label %sw.epilog

sw.bb56:                                          ; preds = %tailrecurse, %tailrecurse
  %bound.idx = getelementptr %union.tree_node* %bound.tr, i64 0, i32 0, i32 3
  %bound.idx.val = load i32* %bound.idx, align 4, !tbaa !65
  %54 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i225 = icmp ugt i32 %54, %bound.idx.val
  br i1 %cmp.i225, label %lookup_decl_die.exit230, label %sw.epilog

lookup_decl_die.exit230:                          ; preds = %sw.bb56
  %idxprom.i226 = zext i32 %bound.idx.val to i64
  %55 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i227 = getelementptr inbounds %struct.die_struct** %55, i64 %idxprom.i226
  %56 = load %struct.die_struct** %arrayidx.i227, align 8, !tbaa !6
  %cmp59 = icmp eq %struct.die_struct* %56, null
  br i1 %cmp59, label %sw.epilog, label %if.then60

if.then60:                                        ; preds = %lookup_decl_die.exit230
  %call.i231 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i232 = getelementptr inbounds i8* %call.i231, i64 8
  %57 = bitcast i8* %dw_attr_next.i232 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %57, align 8, !tbaa !72
  %dw_attr.i233 = bitcast i8* %call.i231 to i32*
  store i32 %bound_attr, i32* %dw_attr.i233, align 4, !tbaa !57
  %dw_attr_val.i234 = getelementptr inbounds i8* %call.i231, i64 16
  %val_class.i235 = bitcast i8* %dw_attr_val.i234 to i32*
  store i32 10, i32* %val_class.i235, align 4, !tbaa !59
  %v.i236 = getelementptr inbounds i8* %call.i231, i64 24
  %die2.i237 = bitcast i8* %v.i236 to %struct.die_struct**
  store %struct.die_struct* %56, %struct.die_struct** %die2.i237, align 8, !tbaa !60
  %external.i238 = getelementptr inbounds i8* %call.i231, i64 32
  %58 = bitcast i8* %external.i238 to i32*
  store i32 0, i32* %58, align 4, !tbaa !108
  %cmp.i.i239 = icmp ne %struct.die_struct* %subrange_die, null
  %cmp1.i.i240 = icmp ne i8* %call.i231, null
  %or.cond.i.i241 = and i1 %cmp.i.i239, %cmp1.i.i240
  br i1 %or.cond.i.i241, label %if.then.i.i243, label %sw.epilog

if.then.i.i243:                                   ; preds = %if.then60
  %59 = bitcast i8* %call.i231 to %struct.dw_attr_struct*
  %die_attr.i.i242 = getelementptr inbounds %struct.die_struct* %subrange_die, i64 0, i32 2
  %60 = load %struct.dw_attr_struct** %die_attr.i.i242, align 8, !tbaa !73
  store %struct.dw_attr_struct* %60, %struct.dw_attr_struct** %57, align 8, !tbaa !72
  store %struct.dw_attr_struct* %59, %struct.dw_attr_struct** %die_attr.i.i242, align 8, !tbaa !73
  br label %sw.epilog

sw.default:                                       ; preds = %tailrecurse
  %call65 = tail call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %bound.tr, i32 0)
  %cmp66 = icmp eq %struct.dw_loc_descr_struct* %call65, null
  br i1 %cmp66, label %sw.epilog, label %if.end68

if.end68:                                         ; preds = %sw.default
  %61 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  %cmp69 = icmp eq %union.tree_node* %61, null
  br i1 %cmp69, label %if.end73, label %if.else71

if.else71:                                        ; preds = %if.end68
  %.idx = getelementptr %union.tree_node* %61, i64 0, i32 0, i32 3
  %.idx.val = load i32* %.idx, align 4, !tbaa !65
  %62 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i245 = icmp ugt i32 %62, %.idx.val
  br i1 %cmp.i245, label %cond.true.i248, label %if.else.i267

cond.true.i248:                                   ; preds = %if.else71
  %idxprom.i246 = zext i32 %.idx.val to i64
  %63 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i247 = getelementptr inbounds %struct.die_struct** %63, i64 %idxprom.i246
  br label %if.end73

if.end73:                                         ; preds = %if.end68, %cond.true.i248
  %ctx62.0.in = phi %struct.die_struct** [ %arrayidx.i247, %cond.true.i248 ], [ @comp_unit_die, %if.end68 ]
  %ctx62.0 = load %struct.die_struct** %ctx62.0.in, align 8
  %cmp74 = icmp eq %struct.die_struct* %ctx62.0, null
  br i1 %cmp74, label %if.else.i267, label %if.then.i255

if.then.i255:                                     ; preds = %if.end73
  %call.i251371 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %64 = bitcast i8* %call.i251371 to %struct.die_struct*
  %die_tag.i252372 = bitcast i8* %call.i251371 to i32*
  store i32 52, i32* %die_tag.i252372, align 4, !tbaa !69
  %cmp1.i.i254 = icmp eq i8* %call.i251371, null
  br i1 %cmp1.i.i254, label %new_die.exit268, label %if.then.i.i257

if.then.i.i257:                                   ; preds = %if.then.i255
  %cmp2.i.i256 = icmp eq %struct.die_struct* %64, %ctx62.0
  br i1 %cmp2.i.i256, label %if.then3.i.i258, label %if.end.i.i262

if.then3.i.i258:                                  ; preds = %if.then.i.i257
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i262:                                    ; preds = %if.then.i.i257
  %die_parent.i.i259 = getelementptr inbounds i8* %call.i251371, i64 24
  %65 = bitcast i8* %die_parent.i.i259 to %struct.die_struct**
  store %struct.die_struct* %ctx62.0, %struct.die_struct** %65, align 8, !tbaa !55
  %die_child.i.i260 = getelementptr inbounds %struct.die_struct* %ctx62.0, i64 0, i32 4
  %66 = load %struct.die_struct** %die_child.i.i260, align 8, !tbaa !62
  %die_sib.i.i261 = getelementptr inbounds i8* %call.i251371, i64 40
  %67 = bitcast i8* %die_sib.i.i261 to %struct.die_struct**
  store %struct.die_struct* %66, %struct.die_struct** %67, align 8, !tbaa !63
  store %struct.die_struct* %64, %struct.die_struct** %die_child.i.i260, align 8, !tbaa !62
  br label %new_die.exit268

if.else.i267:                                     ; preds = %if.else71, %if.end73
  %type77 = getelementptr inbounds %union.tree_node* %bound.tr, i64 0, i32 0, i32 0, i32 1
  %68 = load %union.tree_node** %type77, align 8, !tbaa !87
  %call78 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 118, %union.tree_node* %68, %union.tree_node* %bound.tr, %union.tree_node* %61, %union.tree_node* null) #5
  %call.i251364 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %69 = bitcast i8* %call.i251364 to %struct.die_struct*
  %die_tag.i252365 = bitcast i8* %call.i251364 to i32*
  store i32 52, i32* %die_tag.i252365, align 4, !tbaa !69
  %call1.i263 = tail call noalias i8* @xmalloc(i64 24) #5
  %70 = bitcast i8* %call1.i263 to %struct.limbo_die_struct*
  %die2.i264 = bitcast i8* %call1.i263 to %struct.die_struct**
  store %struct.die_struct* %69, %struct.die_struct** %die2.i264, align 8, !tbaa !54
  %created_for.i265 = getelementptr inbounds i8* %call1.i263, i64 8
  %71 = bitcast i8* %created_for.i265 to %union.tree_node**
  store %union.tree_node* %call78, %union.tree_node** %71, align 8, !tbaa !64
  %72 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i266 = getelementptr inbounds i8* %call1.i263, i64 16
  %73 = bitcast i8* %next.i266 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %72, %struct.limbo_die_struct** %73, align 8, !tbaa !52
  store %struct.limbo_die_struct* %70, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit268

new_die.exit268:                                  ; preds = %if.then.i255, %if.end.i.i262, %if.else.i267
  %74 = phi %struct.die_struct* [ %64, %if.then.i255 ], [ %64, %if.end.i.i262 ], [ %69, %if.else.i267 ]
  %bound.addr.0368 = phi %union.tree_node* [ %bound.tr, %if.then.i255 ], [ %bound.tr, %if.end.i.i262 ], [ %call78, %if.else.i267 ]
  %ctx62.0360366 = phi %struct.die_struct* [ %ctx62.0, %if.then.i255 ], [ %ctx62.0, %if.end.i.i262 ], [ null, %if.else.i267 ]
  %call.i269 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i270 = getelementptr inbounds i8* %call.i269, i64 8
  %75 = bitcast i8* %dw_attr_next.i270 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %75, align 8, !tbaa !72
  %dw_attr.i271 = bitcast i8* %call.i269 to i32*
  store i32 52, i32* %dw_attr.i271, align 4, !tbaa !57
  %dw_attr_val.i272 = getelementptr inbounds i8* %call.i269, i64 16
  %val_class.i273 = bitcast i8* %dw_attr_val.i272 to i32*
  store i32 9, i32* %val_class.i273, align 4, !tbaa !59
  %v.i274 = getelementptr inbounds i8* %call.i269, i64 24
  store i8 1, i8* %v.i274, align 1, !tbaa !1
  %cmp.i.i275 = icmp ne %struct.die_struct* %74, null
  %cmp1.i.i276 = icmp ne i8* %call.i269, null
  %or.cond.i.i277 = and i1 %cmp.i.i275, %cmp1.i.i276
  br i1 %or.cond.i.i277, label %if.then.i.i279, label %add_AT_flag.exit280

if.then.i.i279:                                   ; preds = %new_die.exit268
  %76 = bitcast i8* %call.i269 to %struct.dw_attr_struct*
  %die_attr.i.i278 = getelementptr inbounds %struct.die_struct* %74, i64 0, i32 2
  %77 = load %struct.dw_attr_struct** %die_attr.i.i278, align 8, !tbaa !73
  store %struct.dw_attr_struct* %77, %struct.dw_attr_struct** %75, align 8, !tbaa !72
  store %struct.dw_attr_struct* %76, %struct.dw_attr_struct** %die_attr.i.i278, align 8, !tbaa !73
  br label %add_AT_flag.exit280

add_AT_flag.exit280:                              ; preds = %new_die.exit268, %if.then.i.i279
  %type82 = getelementptr inbounds %union.tree_node* %bound.addr.0368, i64 0, i32 0, i32 0, i32 1
  %78 = load %union.tree_node** %type82, align 8, !tbaa !87
  %code1.i = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code1.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %79 = and i32 %bf.load.i, 254
  %80 = icmp eq i32 %79, 6
  br i1 %80, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %add_AT_flag.exit280
  %type4.i = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 0, i32 1
  %81 = load %union.tree_node** %type4.i, align 8, !tbaa !87
  %cmp5.i = icmp eq %union.tree_node* %81, null
  br i1 %cmp5.i, label %if.end.i, label %land.lhs.true6.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i
  %82 = getelementptr inbounds %union.tree_node* %78, i64 0, i32 0, i32 11
  %83 = load %union.tree_node** %82, align 8, !tbaa !102
  %cmp8.i = icmp eq %union.tree_node* %83, null
  br i1 %cmp8.i, label %if.then.i306, label %if.end.i

if.then.i306:                                     ; preds = %land.lhs.true6.i
  %code12.i = getelementptr inbounds %union.tree_node* %81, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i = load i32* %code12.i, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 255
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i306, %land.lhs.true6.i, %land.lhs.true.i, %add_AT_flag.exit280
  %bf.load27.i = phi i32 [ %bf.load13.i, %if.then.i306 ], [ %bf.load.i, %land.lhs.true6.i ], [ %bf.load.i, %land.lhs.true.i ], [ %bf.load.i, %add_AT_flag.exit280 ]
  %type.addr.0.i = phi %union.tree_node* [ %81, %if.then.i306 ], [ %78, %land.lhs.true6.i ], [ %78, %land.lhs.true.i ], [ %78, %add_AT_flag.exit280 ]
  %code.0.i = phi i32 [ %bf.clear14.i, %if.then.i306 ], [ %bf.clear.i, %land.lhs.true6.i ], [ %bf.clear.i, %land.lhs.true.i ], [ %bf.clear.i, %add_AT_flag.exit280 ]
  switch i32 %code.0.i, label %if.end19.i [
    i32 5, label %add_type_attribute.exit
    i32 0, label %add_type_attribute.exit
  ]

if.end19.i:                                       ; preds = %if.end.i
  %bf.clear29.i = lshr i32 %bf.load27.i, 11
  %bf.clear29.i.lobit = and i32 %bf.clear29.i, 1
  %call.i308 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i, i32 1, i32 %bf.clear29.i.lobit, %struct.die_struct* %ctx62.0360366) #5
  %cmp33.i = icmp eq %struct.die_struct* %call.i308, null
  br i1 %cmp33.i, label %add_type_attribute.exit, label %if.then34.i

if.then34.i:                                      ; preds = %if.end19.i
  %call.i.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %84 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %84, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i.i to i32*
  store i32 73, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 10, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %die2.i.i = bitcast i8* %v.i.i to %struct.die_struct**
  store %struct.die_struct* %call.i308, %struct.die_struct** %die2.i.i, align 8, !tbaa !60
  %external.i.i = getelementptr inbounds i8* %call.i.i, i64 32
  %85 = bitcast i8* %external.i.i to i32*
  store i32 0, i32* %85, align 4, !tbaa !108
  %cmp1.i.i.i310 = icmp ne i8* %call.i.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i275, %cmp1.i.i.i310
  br i1 %or.cond.i.i.i, label %if.then.i.i.i312, label %add_type_attribute.exit

if.then.i.i.i312:                                 ; preds = %if.then34.i
  %86 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %die_attr.i.i.i311 = getelementptr inbounds %struct.die_struct* %74, i64 0, i32 2
  %87 = load %struct.dw_attr_struct** %die_attr.i.i.i311, align 8, !tbaa !73
  store %struct.dw_attr_struct* %87, %struct.dw_attr_struct** %84, align 8, !tbaa !72
  store %struct.dw_attr_struct* %86, %struct.dw_attr_struct** %die_attr.i.i.i311, align 8, !tbaa !73
  br label %add_type_attribute.exit

add_type_attribute.exit:                          ; preds = %if.then34.i, %if.then.i.i.i312, %if.end.i, %if.end.i, %if.end19.i
  %call.i281 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i282 = getelementptr inbounds i8* %call.i281, i64 8
  %88 = bitcast i8* %dw_attr_next.i282 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %88, align 8, !tbaa !72
  %dw_attr.i283 = bitcast i8* %call.i281 to i32*
  store i32 2, i32* %dw_attr.i283, align 4, !tbaa !57
  %dw_attr_val.i284 = getelementptr inbounds i8* %call.i281, i64 16
  %val_class.i285 = bitcast i8* %dw_attr_val.i284 to i32*
  store i32 2, i32* %val_class.i285, align 4, !tbaa !59
  %v.i286 = getelementptr inbounds i8* %call.i281, i64 24
  %val_loc.i = bitcast i8* %v.i286 to %struct.dw_loc_descr_struct**
  store %struct.dw_loc_descr_struct* %call65, %struct.dw_loc_descr_struct** %val_loc.i, align 8, !tbaa !6
  %cmp1.i.i288 = icmp ne i8* %call.i281, null
  %or.cond.i.i289 = and i1 %cmp.i.i275, %cmp1.i.i288
  br i1 %or.cond.i.i289, label %if.then.i.i291, label %add_AT_loc.exit

if.then.i.i291:                                   ; preds = %add_type_attribute.exit
  %89 = bitcast i8* %call.i281 to %struct.dw_attr_struct*
  %die_attr.i.i290 = getelementptr inbounds %struct.die_struct* %74, i64 0, i32 2
  %90 = load %struct.dw_attr_struct** %die_attr.i.i290, align 8, !tbaa !73
  store %struct.dw_attr_struct* %90, %struct.dw_attr_struct** %88, align 8, !tbaa !72
  store %struct.dw_attr_struct* %89, %struct.dw_attr_struct** %die_attr.i.i290, align 8, !tbaa !73
  br label %add_AT_loc.exit

add_AT_loc.exit:                                  ; preds = %add_type_attribute.exit, %if.then.i.i291
  %call.i292 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i293 = getelementptr inbounds i8* %call.i292, i64 8
  %91 = bitcast i8* %dw_attr_next.i293 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %91, align 8, !tbaa !72
  %dw_attr.i294 = bitcast i8* %call.i292 to i32*
  store i32 %bound_attr, i32* %dw_attr.i294, align 4, !tbaa !57
  %dw_attr_val.i295 = getelementptr inbounds i8* %call.i292, i64 16
  %val_class.i296 = bitcast i8* %dw_attr_val.i295 to i32*
  store i32 10, i32* %val_class.i296, align 4, !tbaa !59
  %v.i297 = getelementptr inbounds i8* %call.i292, i64 24
  %die2.i298 = bitcast i8* %v.i297 to %struct.die_struct**
  store %struct.die_struct* %74, %struct.die_struct** %die2.i298, align 8, !tbaa !60
  %external.i299 = getelementptr inbounds i8* %call.i292, i64 32
  %92 = bitcast i8* %external.i299 to i32*
  store i32 0, i32* %92, align 4, !tbaa !108
  %cmp.i.i300 = icmp ne %struct.die_struct* %subrange_die, null
  %cmp1.i.i301 = icmp ne i8* %call.i292, null
  %or.cond.i.i302 = and i1 %cmp.i.i300, %cmp1.i.i301
  br i1 %or.cond.i.i302, label %if.then.i.i304, label %sw.epilog

if.then.i.i304:                                   ; preds = %add_AT_loc.exit
  %93 = bitcast i8* %call.i292 to %struct.dw_attr_struct*
  %die_attr.i.i303 = getelementptr inbounds %struct.die_struct* %subrange_die, i64 0, i32 2
  %94 = load %struct.dw_attr_struct** %die_attr.i.i303, align 8, !tbaa !73
  store %struct.dw_attr_struct* %94, %struct.dw_attr_struct** %91, align 8, !tbaa !72
  store %struct.dw_attr_struct* %93, %struct.dw_attr_struct** %die_attr.i.i303, align 8, !tbaa !73
  br label %sw.epilog

sw.epilog:                                        ; preds = %tailrecurse, %sw.bb56, %if.then.i.i304, %add_AT_loc.exit, %if.then.i.i243, %if.then60, %if.then.i.i224, %add_type_attribute.exit352, %if.then.i.i, %if.else, %land.lhs.true7, %land.lhs.true13, %sw.bb1, %sw.bb18, %lookup_decl_die.exit230, %sw.default, %lor.lhs.false25
  ret void
}

declare i32 @integer_zerop(%union.tree_node*) #2

declare i32 @integer_onep(%union.tree_node*) #2

declare %struct.rtx_def* @fix_lexical_addr(%struct.rtx_def*, %union.tree_node*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @add_AT_location_description(%struct.die_struct* %die, %struct.rtx_def* nocapture readonly %rtl) #1 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %rtl, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %sw.default.i [
    i32 63, label %sw.bb.i
    i32 61, label %sw.bb1.i
    i32 66, label %sw.bb2.i
    i32 65, label %sw.bb9.i
  ]

sw.bb.i:                                          ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %rtl, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  br label %sw.bb1.i

sw.bb1.i:                                         ; preds = %sw.bb.i, %entry
  %rtl.addr.0.i = phi %struct.rtx_def* [ %rtl, %entry ], [ %1, %sw.bb.i ]
  %arrayidx.i.i = getelementptr inbounds %struct.rtx_def* %rtl.addr.0.i, i64 0, i32 1, i64 0
  %rtuint.i.i = bitcast %union.rtunion_def* %arrayidx.i.i to i32*
  %2 = load i32* %rtuint.i.i, align 4, !tbaa !4
  %cmp.i.i = icmp ugt i32 %2, 52
  br i1 %cmp.i.i, label %if.end, label %reg_number.exit.i.i

reg_number.exit.i.i:                              ; preds = %sw.bb1.i
  %3 = load i32* @target_flags, align 4, !tbaa !4
  %and.i.i.i = and i32 %3, 33554432
  %tobool.i.i.i = icmp eq i32 %and.i.i.i, 0
  %idxprom.i.i.i = zext i32 %2 to i64
  %svr4_dbx_register_map.dbx64_register_map.i.i.i = select i1 %tobool.i.i.i, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in.i.i.i = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i.i.i, i64 0, i64 %idxprom.i.i.i
  %cond.i.i.i = load i32* %cond.in.i.i.i, align 4
  %cmp1.i.i = icmp ult i32 %cond.i.i.i, 32
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else.i.i

if.then2.i.i:                                     ; preds = %reg_number.exit.i.i
  %add.i.i = add i32 %cond.i.i.i, 80
  %call.i.i.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %4 = bitcast i8* %call.i.i.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 8
  %5 = bitcast i8* %dw_loc_opc.i.i.i to i32*
  store i32 %add.i.i, i32* %5, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 16
  %val_class.i.i.i = bitcast i8* %dw_loc_oprnd1.i.i.i to i32*
  store i32 6, i32* %val_class.i.i.i, align 4, !tbaa !23
  %v.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 24
  %val_unsigned.i.i.i = bitcast i8* %v.i.i.i to i64*
  store i64 0, i64* %val_unsigned.i.i.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 40
  %val_class2.i.i.i = bitcast i8* %dw_loc_oprnd2.i.i.i to i32*
  store i32 6, i32* %val_class2.i.i.i, align 4, !tbaa !24
  %v4.i.i.i = getelementptr inbounds i8* %call.i.i.i, i64 48
  %val_unsigned5.i.i.i = bitcast i8* %v4.i.i.i to i64*
  store i64 0, i64* %val_unsigned5.i.i.i, align 8, !tbaa !8
  br label %loc_descriptor.exit

if.else.i.i:                                      ; preds = %reg_number.exit.i.i
  %conv.i.i = zext i32 %cond.i.i.i to i64
  %call.i8.i.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %6 = bitcast i8* %call.i8.i.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i9.i.i = getelementptr inbounds i8* %call.i8.i.i, i64 8
  %7 = bitcast i8* %dw_loc_opc.i9.i.i to i32*
  store i32 144, i32* %7, align 4, !tbaa !18
  %dw_loc_oprnd1.i10.i.i = getelementptr inbounds i8* %call.i8.i.i, i64 16
  %val_class.i11.i.i = bitcast i8* %dw_loc_oprnd1.i10.i.i to i32*
  store i32 6, i32* %val_class.i11.i.i, align 4, !tbaa !23
  %v.i12.i.i = getelementptr inbounds i8* %call.i8.i.i, i64 24
  %val_unsigned.i13.i.i = bitcast i8* %v.i12.i.i to i64*
  store i64 %conv.i.i, i64* %val_unsigned.i13.i.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i14.i.i = getelementptr inbounds i8* %call.i8.i.i, i64 40
  %val_class2.i15.i.i = bitcast i8* %dw_loc_oprnd2.i14.i.i to i32*
  store i32 6, i32* %val_class2.i15.i.i, align 4, !tbaa !24
  %v4.i16.i.i = getelementptr inbounds i8* %call.i8.i.i, i64 48
  %val_unsigned5.i17.i.i = bitcast i8* %v4.i16.i.i to i64*
  store i64 0, i64* %val_unsigned5.i17.i.i, align 8, !tbaa !8
  br label %loc_descriptor.exit

sw.bb2.i:                                         ; preds = %entry
  %arrayidx4.i = getelementptr inbounds %struct.rtx_def* %rtl, i64 0, i32 1, i64 0
  %rtx5.i = bitcast %union.rtunion_def* %arrayidx4.i to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx5.i, align 8, !tbaa !6
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear7.i = and i32 %bf.lshr.i, 255
  %call8.i = tail call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %8, i32 %bf.clear7.i) #5
  br label %loc_descriptor.exit

sw.bb9.i:                                         ; preds = %entry
  %fld10.i = getelementptr inbounds %struct.rtx_def* %rtl, i64 0, i32 1
  %rtx12.i = bitcast [1 x %union.rtunion_def]* %fld10.i to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx12.i, align 8, !tbaa !6
  %arrayidx14.i = getelementptr inbounds %struct.rtx_def* %rtl, i64 0, i32 1, i64 1
  %rtx15.i = bitcast %union.rtunion_def* %arrayidx14.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx15.i, align 8, !tbaa !6
  %call16.i = tail call fastcc %struct.dw_loc_descr_struct* @concat_loc_descriptor(%struct.rtx_def* %9, %struct.rtx_def* %10) #5
  br label %loc_descriptor.exit

sw.default.i:                                     ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 7976, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.loc_descriptor, i64 0, i64 0)) #7
  unreachable

loc_descriptor.exit:                              ; preds = %if.then2.i.i, %if.else.i.i, %sw.bb2.i, %sw.bb9.i
  %loc_result.0.i = phi %struct.dw_loc_descr_struct* [ %call16.i, %sw.bb9.i ], [ %call8.i, %sw.bb2.i ], [ %4, %if.then2.i.i ], [ %6, %if.else.i.i ]
  %cmp = icmp eq %struct.dw_loc_descr_struct* %loc_result.0.i, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %loc_descriptor.exit
  %call.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i, i64 8
  %11 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %11, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i to i32*
  store i32 2, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 2, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %val_loc.i = bitcast i8* %v.i to %struct.dw_loc_descr_struct**
  store %struct.dw_loc_descr_struct* %loc_result.0.i, %struct.dw_loc_descr_struct** %val_loc.i, align 8, !tbaa !6
  %cmp.i.i1 = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i2 = icmp ne i8* %call.i, null
  %or.cond.i.i = and i1 %cmp.i.i1, %cmp1.i.i2
  br i1 %or.cond.i.i, label %if.then.i.i, label %if.end

if.then.i.i:                                      ; preds = %if.then
  %12 = bitcast i8* %call.i to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %13 = load %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %13, %struct.dw_attr_struct** %11, align 8, !tbaa !72
  store %struct.dw_attr_struct* %12, %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %sw.bb1.i, %if.then.i.i, %if.then, %loc_descriptor.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %loc, i32 %addressp) #1 {
entry:
  %ret = alloca %struct.dw_loc_descr_struct*, align 8
  %unsignedp = alloca i32, align 4
  %offset = alloca %union.tree_node*, align 8
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %mode110 = alloca i32, align 4
  %volatilep = alloca i32, align 4
  %type = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !87
  %unsigned_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %unsigned_flag, align 8
  %bf.lshr = lshr i32 %bf.load, 13
  %bf.clear = and i32 %bf.lshr, 1
  store i32 %bf.clear, i32* %unsignedp, align 4, !tbaa !4
  %code = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 0, i32 2
  %bf.load3 = load i32* %code, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  switch i32 %bf.clear4, label %sw.default [
    i32 0, label %return
    i32 58, label %return
    i32 57, label %return
    i32 53, label %return
    i32 121, label %for.cond
    i32 34, label %sw.bb45
    i32 35, label %sw.bb45
    i32 41, label %sw.bb94
    i32 47, label %sw.bb99
    i32 115, label %sw.bb104
    i32 114, label %sw.bb104
    i32 116, label %sw.bb104
    i32 117, label %sw.bb104
    i32 118, label %sw.bb104
    i32 39, label %sw.bb109
    i32 40, label %sw.bb109
    i32 43, label %sw.bb109
    i32 44, label %sw.bb109
    i32 25, label %sw.bb141
    i32 93, label %do_binop
    i32 91, label %do_binop
    i32 88, label %do_binop
    i32 95, label %sw.bb150
    i32 87, label %sw.bb150
    i32 94, label %sw.bb151
    i32 92, label %sw.bb151
    i32 86, label %sw.bb151
    i32 62, label %sw.bb152
    i32 60, label %sw.bb153
    i32 66, label %sw.bb154
    i32 61, label %sw.bb155
    i32 82, label %sw.bb156
    i32 83, label %sw.bb157
    i32 59, label %sw.bb160
    i32 98, label %sw.bb188
    i32 100, label %sw.bb202
    i32 97, label %sw.bb216
    i32 99, label %sw.bb230
    i32 101, label %sw.bb244
    i32 102, label %sw.bb245
    i32 96, label %do_unop
    i32 90, label %do_unop
    i32 80, label %sw.bb261
    i32 77, label %sw.bb262
    i32 79, label %sw.bb271
    i32 51, label %sw.bb288
  ]

for.cond:                                         ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %entry
  %loc.pn = phi %union.tree_node* [ %loc, %entry ], [ %loc.addr.0, %for.cond ], [ %loc.addr.0, %for.cond ], [ %loc.addr.0, %for.cond ], [ %loc.addr.0, %for.cond ], [ %loc.addr.0, %for.cond ]
  %loc.addr.0.in.in = getelementptr inbounds %union.tree_node* %loc.pn, i64 0, i32 0, i32 2
  %loc.addr.0.in = bitcast i32* %loc.addr.0.in.in to %union.tree_node**
  %loc.addr.0 = load %union.tree_node** %loc.addr.0.in, align 8
  %code9 = getelementptr inbounds %union.tree_node* %loc.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load10 = load i32* %code9, align 8
  %bf.clear11 = and i32 %bf.load10, 255
  switch i32 %bf.clear11, label %return [
    i32 114, label %for.cond
    i32 115, label %for.cond
    i32 116, label %for.cond
    i32 117, label %for.cond
    i32 118, label %for.cond
    i32 41, label %cond.true
  ]

cond.true:                                        ; preds = %for.cond
  %operands43 = getelementptr inbounds %union.tree_node* %loc.addr.0, i64 0, i32 0, i32 2
  %arrayidx44 = bitcast i32* %operands43 to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx44, align 8, !tbaa !6
  %call = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %1, i32 %addressp)
  br label %return

sw.bb45:                                          ; preds = %entry, %entry
  %call46 = call fastcc %struct.rtx_def* @rtl_for_decl_location(%union.tree_node* %loc)
  %cmp47 = icmp eq %struct.rtx_def* %call46, null
  br i1 %cmp47, label %return, label %if.else

if.else:                                          ; preds = %sw.bb45
  %2 = getelementptr inbounds %struct.rtx_def* %call46, i64 0, i32 0
  %bf.load48 = load i32* %2, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  switch i32 %bf.clear49, label %if.else82 [
    i32 67, label %if.then79
    i32 68, label %if.then79
    i32 54, label %if.then79
    i32 55, label %if.then79
    i32 58, label %if.then79
    i32 134, label %if.then79
    i32 56, label %if.then79
    i32 140, label %if.then79
  ]

if.then79:                                        ; preds = %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else, %if.else
  %call.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %3 = bitcast i8* %call.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i = getelementptr inbounds i8* %call.i, i64 8
  %4 = bitcast i8* %dw_loc_opc.i to i32*
  store i32 3, i32* %4, align 4, !tbaa !18
  %dw_loc_oprnd1.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_loc_oprnd1.i to i32*
  %dw_loc_oprnd2.i = getelementptr inbounds i8* %call.i, i64 40
  %val_class2.i = bitcast i8* %dw_loc_oprnd2.i to i32*
  store i32 6, i32* %val_class2.i, align 4, !tbaa !24
  %v4.i = getelementptr inbounds i8* %call.i, i64 48
  %val_unsigned5.i = bitcast i8* %v4.i to i64*
  store i64 0, i64* %val_unsigned5.i, align 8, !tbaa !8
  store %struct.dw_loc_descr_struct* %3, %struct.dw_loc_descr_struct** %ret, align 8
  store i32 0, i32* %val_class.i, align 4, !tbaa !23
  %5 = getelementptr inbounds i8* %call.i, i64 24
  %6 = bitcast i8* %5 to i64*
  %call46.c = ptrtoint %struct.rtx_def* %call46 to i64
  store i64 %call46.c, i64* %6, align 8, !tbaa !6
  br label %if.end324

if.else82:                                        ; preds = %if.else
  %bf.lshr84 = lshr i32 %bf.load48, 16
  %bf.clear85 = and i32 %bf.lshr84, 255
  %cmp88 = icmp eq i32 %bf.clear49, 66
  br i1 %cmp88, label %if.then89, label %if.end

if.then89:                                        ; preds = %if.else82
  %arrayidx90 = getelementptr inbounds %struct.rtx_def* %call46, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then89, %if.else82
  %rtl.0 = phi %struct.rtx_def* [ %7, %if.then89 ], [ %call46, %if.else82 ]
  %indirect_p.0 = phi i32 [ 1, %if.then89 ], [ 0, %if.else82 ]
  %call91 = call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %rtl.0, i32 %bf.clear85)
  store %struct.dw_loc_descr_struct* %call91, %struct.dw_loc_descr_struct** %ret, align 8
  br label %sw.epilog

sw.bb94:                                          ; preds = %entry
  %operands96 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx97 = bitcast i32* %operands96 to %union.tree_node**
  %8 = load %union.tree_node** %arrayidx97, align 8, !tbaa !6
  %call98 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %8, i32 0)
  store %struct.dw_loc_descr_struct* %call98, %struct.dw_loc_descr_struct** %ret, align 8
  br label %if.end324

sw.bb99:                                          ; preds = %entry
  %operands101 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx102 = getelementptr inbounds i32* %operands101, i64 2
  %9 = bitcast i32* %arrayidx102 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !6
  %call103 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %10, i32 %addressp)
  br label %return

sw.bb104:                                         ; preds = %entry, %entry, %entry, %entry, %entry
  %operands106 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx107 = bitcast i32* %operands106 to %union.tree_node**
  %11 = load %union.tree_node** %arrayidx107, align 8, !tbaa !6
  %call108 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %11, i32 %addressp)
  br label %return

sw.bb109:                                         ; preds = %entry, %entry, %entry, %entry
  %call111 = call %union.tree_node* @get_inner_reference(%union.tree_node* %loc, i64* %bitsize, i64* %bitpos, %union.tree_node** %offset, i32* %mode110, i32* %unsignedp, i32* %volatilep) #5
  %cmp112 = icmp eq %union.tree_node* %call111, %loc
  br i1 %cmp112, label %return, label %if.end114

if.end114:                                        ; preds = %sw.bb109
  %call115 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %call111, i32 1)
  store %struct.dw_loc_descr_struct* %call115, %struct.dw_loc_descr_struct** %ret, align 8
  %cmp116 = icmp eq %struct.dw_loc_descr_struct* %call115, null
  br i1 %cmp116, label %return, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %if.end114
  %12 = load i64* %bitpos, align 8, !tbaa !29
  %rem438 = and i64 %12, 7
  %cmp118 = icmp eq i64 %rem438, 0
  br i1 %cmp118, label %lor.lhs.false119, label %return

lor.lhs.false119:                                 ; preds = %lor.lhs.false117
  %13 = load i64* %bitsize, align 8, !tbaa !29
  %rem120439 = and i64 %13, 7
  %cmp121 = icmp eq i64 %rem120439, 0
  br i1 %cmp121, label %if.end123, label %return

if.end123:                                        ; preds = %lor.lhs.false119
  %14 = load %union.tree_node** %offset, align 8, !tbaa !6
  %cmp124 = icmp eq %union.tree_node* %14, null
  br i1 %cmp124, label %if.end128, label %if.then125

if.then125:                                       ; preds = %if.end123
  %call126 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %14, i32 0)
  br label %for.cond.i479

for.cond.i479:                                    ; preds = %for.cond.i479, %if.then125
  %d.0.i476 = phi %struct.dw_loc_descr_struct** [ %ret, %if.then125 ], [ %dw_loc_next.i478, %for.cond.i479 ]
  %15 = load %struct.dw_loc_descr_struct** %d.0.i476, align 8, !tbaa !6
  %cmp.i477 = icmp eq %struct.dw_loc_descr_struct* %15, null
  %dw_loc_next.i478 = getelementptr inbounds %struct.dw_loc_descr_struct* %15, i64 0, i32 0
  br i1 %cmp.i477, label %add_loc_descr.exit480, label %for.cond.i479

add_loc_descr.exit480:                            ; preds = %for.cond.i479
  store %struct.dw_loc_descr_struct* %call126, %struct.dw_loc_descr_struct** %d.0.i476, align 8, !tbaa !6
  %call.i481 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i482 = getelementptr inbounds i8* %call.i481, i64 8
  %16 = bitcast i8* %dw_loc_opc.i482 to i32*
  store i32 34, i32* %16, align 4, !tbaa !18
  %dw_loc_oprnd1.i483 = getelementptr inbounds i8* %call.i481, i64 16
  %val_class.i484 = bitcast i8* %dw_loc_oprnd1.i483 to i32*
  store i32 6, i32* %val_class.i484, align 4, !tbaa !23
  %v.i485 = getelementptr inbounds i8* %call.i481, i64 24
  %val_unsigned.i486 = bitcast i8* %v.i485 to i64*
  store i64 0, i64* %val_unsigned.i486, align 8, !tbaa !8
  %dw_loc_oprnd2.i487 = getelementptr inbounds i8* %call.i481, i64 40
  %val_class2.i488 = bitcast i8* %dw_loc_oprnd2.i487 to i32*
  store i32 6, i32* %val_class2.i488, align 4, !tbaa !24
  %v4.i489 = getelementptr inbounds i8* %call.i481, i64 48
  %val_unsigned5.i490 = bitcast i8* %v4.i489 to i64*
  store i64 0, i64* %val_unsigned5.i490, align 8, !tbaa !8
  br label %for.cond.i494

for.cond.i494:                                    ; preds = %for.cond.i494, %add_loc_descr.exit480
  %d.0.i491 = phi %struct.dw_loc_descr_struct** [ %ret, %add_loc_descr.exit480 ], [ %dw_loc_next.i493, %for.cond.i494 ]
  %17 = load %struct.dw_loc_descr_struct** %d.0.i491, align 8, !tbaa !6
  %cmp.i492 = icmp eq %struct.dw_loc_descr_struct* %17, null
  %dw_loc_next.i493 = getelementptr inbounds %struct.dw_loc_descr_struct* %17, i64 0, i32 0
  br i1 %cmp.i492, label %add_loc_descr.exit495, label %for.cond.i494

add_loc_descr.exit495:                            ; preds = %for.cond.i494
  %18 = bitcast i8* %call.i481 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %18, %struct.dw_loc_descr_struct** %d.0.i491, align 8, !tbaa !6
  %.pre = load i64* %bitpos, align 8, !tbaa !29
  br label %if.end128

if.end128:                                        ; preds = %if.end123, %add_loc_descr.exit495
  %19 = phi i64 [ %12, %if.end123 ], [ %.pre, %add_loc_descr.exit495 ]
  %tobool = icmp eq i32 %addressp, 0
  %. = zext i1 %tobool to i32
  %div = sdiv i64 %19, 8
  %cmp131 = icmp sgt i64 %19, 7
  br i1 %cmp131, label %if.then132, label %if.else134

if.then132:                                       ; preds = %if.end128
  %call.i496 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i497 = getelementptr inbounds i8* %call.i496, i64 8
  %20 = bitcast i8* %dw_loc_opc.i497 to i32*
  store i32 35, i32* %20, align 4, !tbaa !18
  %dw_loc_oprnd1.i498 = getelementptr inbounds i8* %call.i496, i64 16
  %val_class.i499 = bitcast i8* %dw_loc_oprnd1.i498 to i32*
  store i32 6, i32* %val_class.i499, align 4, !tbaa !23
  %v.i500 = getelementptr inbounds i8* %call.i496, i64 24
  %val_unsigned.i501 = bitcast i8* %v.i500 to i64*
  store i64 %div, i64* %val_unsigned.i501, align 8, !tbaa !8
  %dw_loc_oprnd2.i502 = getelementptr inbounds i8* %call.i496, i64 40
  %val_class2.i503 = bitcast i8* %dw_loc_oprnd2.i502 to i32*
  store i32 6, i32* %val_class2.i503, align 4, !tbaa !24
  %v4.i504 = getelementptr inbounds i8* %call.i496, i64 48
  %val_unsigned5.i505 = bitcast i8* %v4.i504 to i64*
  store i64 0, i64* %val_unsigned5.i505, align 8, !tbaa !8
  br label %for.cond.i509

for.cond.i509:                                    ; preds = %for.cond.i509, %if.then132
  %d.0.i506 = phi %struct.dw_loc_descr_struct** [ %ret, %if.then132 ], [ %dw_loc_next.i508, %for.cond.i509 ]
  %21 = load %struct.dw_loc_descr_struct** %d.0.i506, align 8, !tbaa !6
  %cmp.i507 = icmp eq %struct.dw_loc_descr_struct* %21, null
  %dw_loc_next.i508 = getelementptr inbounds %struct.dw_loc_descr_struct* %21, i64 0, i32 0
  br i1 %cmp.i507, label %add_loc_descr.exit510, label %for.cond.i509

add_loc_descr.exit510:                            ; preds = %for.cond.i509
  %22 = bitcast i8* %call.i496 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %22, %struct.dw_loc_descr_struct** %d.0.i506, align 8, !tbaa !6
  br label %sw.epilog

if.else134:                                       ; preds = %if.end128
  %cmp135 = icmp slt i64 %19, -7
  br i1 %cmp135, label %if.else18.i, label %sw.epilog

if.else18.i:                                      ; preds = %if.else134
  %cmp19.i = icmp sgt i64 %19, -1032
  br i1 %cmp19.i, label %int_loc_descriptor.exit, label %if.else22.i

if.else22.i:                                      ; preds = %if.else18.i
  %cmp23.i = icmp sgt i64 %19, -262152
  %.43.i = select i1 %cmp23.i, i32 11, i32 17
  br label %int_loc_descriptor.exit

int_loc_descriptor.exit:                          ; preds = %if.else18.i, %if.else22.i
  %op.0.i = phi i32 [ 9, %if.else18.i ], [ %.43.i, %if.else22.i ]
  %call.i.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %23 = bitcast i8* %dw_loc_opc.i.i to i32*
  store i32 %op.0.i, i32* %23, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_loc_oprnd1.i.i to i32*
  store i32 6, i32* %val_class.i.i, align 4, !tbaa !23
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i.i to i64*
  store i64 %div, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %val_class2.i.i = bitcast i8* %dw_loc_oprnd2.i.i to i32*
  store i32 6, i32* %val_class2.i.i, align 4, !tbaa !24
  %v4.i.i = getelementptr inbounds i8* %call.i.i, i64 48
  %val_unsigned5.i.i = bitcast i8* %v4.i.i to i64*
  store i64 0, i64* %val_unsigned5.i.i, align 8, !tbaa !8
  br label %for.cond.i515

for.cond.i515:                                    ; preds = %for.cond.i515, %int_loc_descriptor.exit
  %d.0.i512 = phi %struct.dw_loc_descr_struct** [ %ret, %int_loc_descriptor.exit ], [ %dw_loc_next.i514, %for.cond.i515 ]
  %24 = load %struct.dw_loc_descr_struct** %d.0.i512, align 8, !tbaa !6
  %cmp.i513 = icmp eq %struct.dw_loc_descr_struct* %24, null
  %dw_loc_next.i514 = getelementptr inbounds %struct.dw_loc_descr_struct* %24, i64 0, i32 0
  br i1 %cmp.i513, label %add_loc_descr.exit516, label %for.cond.i515

add_loc_descr.exit516:                            ; preds = %for.cond.i515
  %25 = bitcast i8* %call.i.i to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %25, %struct.dw_loc_descr_struct** %d.0.i512, align 8, !tbaa !6
  %call.i517 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i518 = getelementptr inbounds i8* %call.i517, i64 8
  %26 = bitcast i8* %dw_loc_opc.i518 to i32*
  store i32 34, i32* %26, align 4, !tbaa !18
  %dw_loc_oprnd1.i519 = getelementptr inbounds i8* %call.i517, i64 16
  %val_class.i520 = bitcast i8* %dw_loc_oprnd1.i519 to i32*
  store i32 6, i32* %val_class.i520, align 4, !tbaa !23
  %v.i521 = getelementptr inbounds i8* %call.i517, i64 24
  %val_unsigned.i522 = bitcast i8* %v.i521 to i64*
  store i64 0, i64* %val_unsigned.i522, align 8, !tbaa !8
  %dw_loc_oprnd2.i523 = getelementptr inbounds i8* %call.i517, i64 40
  %val_class2.i524 = bitcast i8* %dw_loc_oprnd2.i523 to i32*
  store i32 6, i32* %val_class2.i524, align 4, !tbaa !24
  %v4.i525 = getelementptr inbounds i8* %call.i517, i64 48
  %val_unsigned5.i526 = bitcast i8* %v4.i525 to i64*
  store i64 0, i64* %val_unsigned5.i526, align 8, !tbaa !8
  br label %for.cond.i530

for.cond.i530:                                    ; preds = %for.cond.i530, %add_loc_descr.exit516
  %d.0.i527 = phi %struct.dw_loc_descr_struct** [ %ret, %add_loc_descr.exit516 ], [ %dw_loc_next.i529, %for.cond.i530 ]
  %27 = load %struct.dw_loc_descr_struct** %d.0.i527, align 8, !tbaa !6
  %cmp.i528 = icmp eq %struct.dw_loc_descr_struct* %27, null
  %dw_loc_next.i529 = getelementptr inbounds %struct.dw_loc_descr_struct* %27, i64 0, i32 0
  br i1 %cmp.i528, label %add_loc_descr.exit531, label %for.cond.i530

add_loc_descr.exit531:                            ; preds = %for.cond.i530
  %28 = bitcast i8* %call.i517 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %28, %struct.dw_loc_descr_struct** %d.0.i527, align 8, !tbaa !6
  br label %sw.epilog

sw.bb141:                                         ; preds = %entry
  %call142 = call i32 @host_integerp(%union.tree_node* %loc, i32 0) #5
  %tobool143 = icmp eq i32 %call142, 0
  br i1 %tobool143, label %return, label %if.then144

if.then144:                                       ; preds = %sw.bb141
  %call145 = call i64 @tree_low_cst(%union.tree_node* %loc, i32 0) #5
  %cmp.i532 = icmp sgt i64 %call145, -1
  br i1 %cmp.i532, label %if.then.i534, label %if.else18.i546

if.then.i534:                                     ; preds = %if.then144
  %cmp1.i533 = icmp slt i64 %call145, 32
  br i1 %cmp1.i533, label %if.then2.i537, label %if.else.i539

if.then2.i537:                                    ; preds = %if.then.i534
  %add.i535 = add nsw i64 %call145, 48
  %conv.i536 = trunc i64 %add.i535 to i32
  br label %int_loc_descriptor.exit561

if.else.i539:                                     ; preds = %if.then.i534
  %cmp3.i538 = icmp slt i64 %call145, 256
  br i1 %cmp3.i538, label %int_loc_descriptor.exit561, label %if.else6.i541

if.else6.i541:                                    ; preds = %if.else.i539
  %cmp7.i540 = icmp slt i64 %call145, 65536
  br i1 %cmp7.i540, label %int_loc_descriptor.exit561, label %if.else10.i544

if.else10.i544:                                   ; preds = %if.else6.i541
  %cmp11.i542 = icmp slt i64 %call145, 4294967296
  %..i543 = select i1 %cmp11.i542, i32 12, i32 16
  br label %int_loc_descriptor.exit561

if.else18.i546:                                   ; preds = %if.then144
  %cmp19.i545 = icmp sgt i64 %call145, -129
  br i1 %cmp19.i545, label %int_loc_descriptor.exit561, label %if.else22.i549

if.else22.i549:                                   ; preds = %if.else18.i546
  %cmp23.i547 = icmp sgt i64 %call145, -32769
  %.43.i548 = select i1 %cmp23.i547, i32 11, i32 17
  br label %int_loc_descriptor.exit561

int_loc_descriptor.exit561:                       ; preds = %if.then2.i537, %if.else.i539, %if.else6.i541, %if.else10.i544, %if.else18.i546, %if.else22.i549
  %op.0.i550 = phi i32 [ %conv.i536, %if.then2.i537 ], [ 8, %if.else.i539 ], [ 10, %if.else6.i541 ], [ %..i543, %if.else10.i544 ], [ 9, %if.else18.i546 ], [ %.43.i548, %if.else22.i549 ]
  %call.i.i551 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %29 = bitcast i8* %call.i.i551 to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i.i552 = getelementptr inbounds i8* %call.i.i551, i64 8
  %30 = bitcast i8* %dw_loc_opc.i.i552 to i32*
  store i32 %op.0.i550, i32* %30, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i553 = getelementptr inbounds i8* %call.i.i551, i64 16
  %val_class.i.i554 = bitcast i8* %dw_loc_oprnd1.i.i553 to i32*
  store i32 6, i32* %val_class.i.i554, align 4, !tbaa !23
  %v.i.i555 = getelementptr inbounds i8* %call.i.i551, i64 24
  %val_unsigned.i.i556 = bitcast i8* %v.i.i555 to i64*
  store i64 %call145, i64* %val_unsigned.i.i556, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i557 = getelementptr inbounds i8* %call.i.i551, i64 40
  %val_class2.i.i558 = bitcast i8* %dw_loc_oprnd2.i.i557 to i32*
  store i32 6, i32* %val_class2.i.i558, align 4, !tbaa !24
  %v4.i.i559 = getelementptr inbounds i8* %call.i.i551, i64 48
  %val_unsigned5.i.i560 = bitcast i8* %v4.i.i559 to i64*
  store i64 0, i64* %val_unsigned5.i.i560, align 8, !tbaa !8
  store %struct.dw_loc_descr_struct* %29, %struct.dw_loc_descr_struct** %ret, align 8
  br label %sw.epilog

sw.bb150:                                         ; preds = %entry, %entry
  br label %do_binop

sw.bb151:                                         ; preds = %entry, %entry, %entry
  br label %do_binop

sw.bb152:                                         ; preds = %entry
  br label %do_binop

sw.bb153:                                         ; preds = %entry
  br label %do_binop

sw.bb154:                                         ; preds = %entry
  br label %do_binop

sw.bb155:                                         ; preds = %entry
  br label %do_binop

sw.bb156:                                         ; preds = %entry
  br label %do_binop

sw.bb157:                                         ; preds = %entry
  %31 = sub i32 38, %bf.clear
  br label %do_binop

sw.bb160:                                         ; preds = %entry
  %operands162 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx163 = getelementptr inbounds i32* %operands162, i64 2
  %32 = bitcast i32* %arrayidx163 to %union.tree_node**
  %33 = load %union.tree_node** %32, align 8, !tbaa !6
  %code165 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 2
  %bf.load166 = load i32* %code165, align 8
  %bf.clear167 = and i32 %bf.load166, 255
  %cmp168 = icmp eq i32 %bf.clear167, 25
  br i1 %cmp168, label %land.lhs.true, label %do_binop

land.lhs.true:                                    ; preds = %sw.bb160
  %call172 = call i32 @host_integerp(%union.tree_node* %33, i32 0) #5
  %tobool173 = icmp eq i32 %call172, 0
  br i1 %tobool173, label %do_binop, label %if.then174

if.then174:                                       ; preds = %land.lhs.true
  %arrayidx177 = bitcast i32* %operands162 to %union.tree_node**
  %34 = load %union.tree_node** %arrayidx177, align 8, !tbaa !6
  %call178 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %34, i32 0)
  store %struct.dw_loc_descr_struct* %call178, %struct.dw_loc_descr_struct** %ret, align 8
  %cmp179 = icmp eq %struct.dw_loc_descr_struct* %call178, null
  br i1 %cmp179, label %return, label %if.end181

if.end181:                                        ; preds = %if.then174
  %35 = load %union.tree_node** %32, align 8, !tbaa !6
  %call185 = call i64 @tree_low_cst(%union.tree_node* %35, i32 0) #5
  %call.i572 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i573 = getelementptr inbounds i8* %call.i572, i64 8
  %36 = bitcast i8* %dw_loc_opc.i573 to i32*
  store i32 35, i32* %36, align 4, !tbaa !18
  %dw_loc_oprnd1.i574 = getelementptr inbounds i8* %call.i572, i64 16
  %val_class.i575 = bitcast i8* %dw_loc_oprnd1.i574 to i32*
  store i32 6, i32* %val_class.i575, align 4, !tbaa !23
  %v.i576 = getelementptr inbounds i8* %call.i572, i64 24
  %val_unsigned.i577 = bitcast i8* %v.i576 to i64*
  store i64 %call185, i64* %val_unsigned.i577, align 8, !tbaa !8
  %dw_loc_oprnd2.i578 = getelementptr inbounds i8* %call.i572, i64 40
  %val_class2.i579 = bitcast i8* %dw_loc_oprnd2.i578 to i32*
  store i32 6, i32* %val_class2.i579, align 4, !tbaa !24
  %v4.i580 = getelementptr inbounds i8* %call.i572, i64 48
  %val_unsigned5.i581 = bitcast i8* %v4.i580 to i64*
  store i64 0, i64* %val_unsigned5.i581, align 8, !tbaa !8
  br label %for.cond.i585

for.cond.i585:                                    ; preds = %for.cond.i585, %if.end181
  %d.0.i582 = phi %struct.dw_loc_descr_struct** [ %ret, %if.end181 ], [ %dw_loc_next.i584, %for.cond.i585 ]
  %37 = load %struct.dw_loc_descr_struct** %d.0.i582, align 8, !tbaa !6
  %cmp.i583 = icmp eq %struct.dw_loc_descr_struct* %37, null
  %dw_loc_next.i584 = getelementptr inbounds %struct.dw_loc_descr_struct* %37, i64 0, i32 0
  br i1 %cmp.i583, label %add_loc_descr.exit586, label %for.cond.i585

add_loc_descr.exit586:                            ; preds = %for.cond.i585
  %38 = bitcast i8* %call.i572 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %38, %struct.dw_loc_descr_struct** %d.0.i582, align 8, !tbaa !6
  br label %sw.epilog

sw.bb188:                                         ; preds = %entry
  %operands190 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx191 = bitcast i32* %operands190 to %union.tree_node**
  %39 = load %union.tree_node** %arrayidx191, align 8, !tbaa !6
  %type193 = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 0, i32 1
  %40 = load %union.tree_node** %type193, align 8, !tbaa !87
  %unsigned_flag195 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 0, i32 2
  %bf.load196 = load i32* %unsigned_flag195, align 8
  %bf.clear198 = and i32 %bf.load196, 8192
  %tobool199 = icmp eq i32 %bf.clear198, 0
  br i1 %tobool199, label %do_binop, label %return

sw.bb202:                                         ; preds = %entry
  %operands204 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx205 = bitcast i32* %operands204 to %union.tree_node**
  %41 = load %union.tree_node** %arrayidx205, align 8, !tbaa !6
  %type207 = getelementptr inbounds %union.tree_node* %41, i64 0, i32 0, i32 0, i32 1
  %42 = load %union.tree_node** %type207, align 8, !tbaa !87
  %unsigned_flag209 = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 0, i32 2
  %bf.load210 = load i32* %unsigned_flag209, align 8
  %bf.clear212 = and i32 %bf.load210, 8192
  %tobool213 = icmp eq i32 %bf.clear212, 0
  br i1 %tobool213, label %do_binop, label %return

sw.bb216:                                         ; preds = %entry
  %operands218 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx219 = bitcast i32* %operands218 to %union.tree_node**
  %43 = load %union.tree_node** %arrayidx219, align 8, !tbaa !6
  %type221 = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 1
  %44 = load %union.tree_node** %type221, align 8, !tbaa !87
  %unsigned_flag223 = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 0, i32 2
  %bf.load224 = load i32* %unsigned_flag223, align 8
  %bf.clear226 = and i32 %bf.load224, 8192
  %tobool227 = icmp eq i32 %bf.clear226, 0
  br i1 %tobool227, label %do_binop, label %return

sw.bb230:                                         ; preds = %entry
  %operands232 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx233 = bitcast i32* %operands232 to %union.tree_node**
  %45 = load %union.tree_node** %arrayidx233, align 8, !tbaa !6
  %type235 = getelementptr inbounds %union.tree_node* %45, i64 0, i32 0, i32 0, i32 1
  %46 = load %union.tree_node** %type235, align 8, !tbaa !87
  %unsigned_flag237 = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 0, i32 2
  %bf.load238 = load i32* %unsigned_flag237, align 8
  %bf.clear240 = and i32 %bf.load238, 8192
  %tobool241 = icmp eq i32 %bf.clear240, 0
  br i1 %tobool241, label %do_binop, label %return

sw.bb244:                                         ; preds = %entry
  br label %do_binop

sw.bb245:                                         ; preds = %entry
  br label %do_binop

do_binop:                                         ; preds = %sw.bb230, %sw.bb216, %sw.bb202, %sw.bb188, %sw.bb160, %land.lhs.true, %entry, %entry, %entry, %sw.bb245, %sw.bb244, %sw.bb157, %sw.bb156, %sw.bb155, %sw.bb154, %sw.bb153, %sw.bb152, %sw.bb151, %sw.bb150
  %op.0 = phi i32 [ 46, %sw.bb245 ], [ 41, %sw.bb244 ], [ %31, %sw.bb157 ], [ 36, %sw.bb156 ], [ 30, %sw.bb155 ], [ 29, %sw.bb154 ], [ 28, %sw.bb153 ], [ 27, %sw.bb152 ], [ 33, %sw.bb151 ], [ 39, %sw.bb150 ], [ 26, %entry ], [ 26, %entry ], [ 26, %entry ], [ 34, %land.lhs.true ], [ 34, %sw.bb160 ], [ 44, %sw.bb188 ], [ 42, %sw.bb202 ], [ 45, %sw.bb216 ], [ 43, %sw.bb230 ]
  %operands247 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx248 = bitcast i32* %operands247 to %union.tree_node**
  %47 = load %union.tree_node** %arrayidx248, align 8, !tbaa !6
  %call249 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %47, i32 0)
  store %struct.dw_loc_descr_struct* %call249, %struct.dw_loc_descr_struct** %ret, align 8
  %arrayidx252 = getelementptr inbounds i32* %operands247, i64 2
  %48 = bitcast i32* %arrayidx252 to %union.tree_node**
  %49 = load %union.tree_node** %48, align 8, !tbaa !6
  %call253 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %49, i32 0)
  %ret.0.642 = load %struct.dw_loc_descr_struct** %ret, align 8
  %cmp254 = icmp eq %struct.dw_loc_descr_struct* %ret.0.642, null
  %cmp256 = icmp eq %struct.dw_loc_descr_struct* %call253, null
  %or.cond = or i1 %cmp254, %cmp256
  br i1 %or.cond, label %return, label %for.cond.i600

for.cond.i600:                                    ; preds = %do_binop, %for.cond.i600.for.cond.i600_crit_edge
  %50 = phi %struct.dw_loc_descr_struct* [ %.pre651, %for.cond.i600.for.cond.i600_crit_edge ], [ %ret.0.642, %do_binop ]
  %d.0.i597 = phi %struct.dw_loc_descr_struct** [ %dw_loc_next.i599, %for.cond.i600.for.cond.i600_crit_edge ], [ %ret, %do_binop ]
  %cmp.i598 = icmp eq %struct.dw_loc_descr_struct* %50, null
  %dw_loc_next.i599 = getelementptr inbounds %struct.dw_loc_descr_struct* %50, i64 0, i32 0
  br i1 %cmp.i598, label %add_loc_descr.exit601, label %for.cond.i600.for.cond.i600_crit_edge

for.cond.i600.for.cond.i600_crit_edge:            ; preds = %for.cond.i600
  %.pre651 = load %struct.dw_loc_descr_struct** %dw_loc_next.i599, align 8, !tbaa !6
  br label %for.cond.i600

add_loc_descr.exit601:                            ; preds = %for.cond.i600
  store %struct.dw_loc_descr_struct* %call253, %struct.dw_loc_descr_struct** %d.0.i597, align 8, !tbaa !6
  %call.i602 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i603 = getelementptr inbounds i8* %call.i602, i64 8
  %51 = bitcast i8* %dw_loc_opc.i603 to i32*
  store i32 %op.0, i32* %51, align 4, !tbaa !18
  %dw_loc_oprnd1.i604 = getelementptr inbounds i8* %call.i602, i64 16
  %val_class.i605 = bitcast i8* %dw_loc_oprnd1.i604 to i32*
  store i32 6, i32* %val_class.i605, align 4, !tbaa !23
  %v.i606 = getelementptr inbounds i8* %call.i602, i64 24
  %val_unsigned.i607 = bitcast i8* %v.i606 to i64*
  store i64 0, i64* %val_unsigned.i607, align 8, !tbaa !8
  %dw_loc_oprnd2.i608 = getelementptr inbounds i8* %call.i602, i64 40
  %val_class2.i609 = bitcast i8* %dw_loc_oprnd2.i608 to i32*
  store i32 6, i32* %val_class2.i609, align 4, !tbaa !24
  %v4.i610 = getelementptr inbounds i8* %call.i602, i64 48
  %val_unsigned5.i611 = bitcast i8* %v4.i610 to i64*
  store i64 0, i64* %val_unsigned5.i611, align 8, !tbaa !8
  br label %for.cond.i615

for.cond.i615:                                    ; preds = %for.cond.i615, %add_loc_descr.exit601
  %d.0.i612 = phi %struct.dw_loc_descr_struct** [ %ret, %add_loc_descr.exit601 ], [ %dw_loc_next.i614, %for.cond.i615 ]
  %52 = load %struct.dw_loc_descr_struct** %d.0.i612, align 8, !tbaa !6
  %cmp.i613 = icmp eq %struct.dw_loc_descr_struct* %52, null
  %dw_loc_next.i614 = getelementptr inbounds %struct.dw_loc_descr_struct* %52, i64 0, i32 0
  br i1 %cmp.i613, label %add_loc_descr.exit616, label %for.cond.i615

add_loc_descr.exit616:                            ; preds = %for.cond.i615
  %53 = bitcast i8* %call.i602 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %53, %struct.dw_loc_descr_struct** %d.0.i612, align 8, !tbaa !6
  br label %sw.epilog

sw.bb261:                                         ; preds = %entry
  br label %do_unop

sw.bb262:                                         ; preds = %entry
  br label %do_unop

do_unop:                                          ; preds = %entry, %entry, %sw.bb262, %sw.bb261
  %op.1 = phi i32 [ 31, %sw.bb262 ], [ 25, %sw.bb261 ], [ 32, %entry ], [ 32, %entry ]
  %operands264 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx265 = bitcast i32* %operands264 to %union.tree_node**
  %54 = load %union.tree_node** %arrayidx265, align 8, !tbaa !6
  %call266 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %54, i32 0)
  store %struct.dw_loc_descr_struct* %call266, %struct.dw_loc_descr_struct** %ret, align 8
  %cmp267 = icmp eq %struct.dw_loc_descr_struct* %call266, null
  br i1 %cmp267, label %return, label %if.end269

if.end269:                                        ; preds = %do_unop
  %call.i622 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i623 = getelementptr inbounds i8* %call.i622, i64 8
  %55 = bitcast i8* %dw_loc_opc.i623 to i32*
  store i32 %op.1, i32* %55, align 4, !tbaa !18
  %dw_loc_oprnd1.i624 = getelementptr inbounds i8* %call.i622, i64 16
  %val_class.i625 = bitcast i8* %dw_loc_oprnd1.i624 to i32*
  store i32 6, i32* %val_class.i625, align 4, !tbaa !23
  %v.i626 = getelementptr inbounds i8* %call.i622, i64 24
  %val_unsigned.i627 = bitcast i8* %v.i626 to i64*
  store i64 0, i64* %val_unsigned.i627, align 8, !tbaa !8
  %dw_loc_oprnd2.i628 = getelementptr inbounds i8* %call.i622, i64 40
  %val_class2.i629 = bitcast i8* %dw_loc_oprnd2.i628 to i32*
  store i32 6, i32* %val_class2.i629, align 4, !tbaa !24
  %v4.i630 = getelementptr inbounds i8* %call.i622, i64 48
  %val_unsigned5.i631 = bitcast i8* %v4.i630 to i64*
  store i64 0, i64* %val_unsigned5.i631, align 8, !tbaa !8
  br label %for.cond.i620

for.cond.i620:                                    ; preds = %for.cond.i620, %if.end269
  %d.0.i617 = phi %struct.dw_loc_descr_struct** [ %ret, %if.end269 ], [ %dw_loc_next.i619, %for.cond.i620 ]
  %56 = load %struct.dw_loc_descr_struct** %d.0.i617, align 8, !tbaa !6
  %cmp.i618 = icmp eq %struct.dw_loc_descr_struct* %56, null
  %dw_loc_next.i619 = getelementptr inbounds %struct.dw_loc_descr_struct* %56, i64 0, i32 0
  br i1 %cmp.i618, label %add_loc_descr.exit621, label %for.cond.i620

add_loc_descr.exit621:                            ; preds = %for.cond.i620
  %57 = bitcast i8* %call.i622 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %57, %struct.dw_loc_descr_struct** %d.0.i617, align 8, !tbaa !6
  br label %sw.epilog

sw.bb271:                                         ; preds = %entry
  %58 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !6
  %operands275 = getelementptr inbounds %union.tree_node* %loc, i64 0, i32 0, i32 2
  %arrayidx276 = bitcast i32* %operands275 to %union.tree_node**
  %59 = load %union.tree_node** %arrayidx276, align 8, !tbaa !6
  %arrayidx279 = getelementptr inbounds i32* %operands275, i64 2
  %60 = bitcast i32* %arrayidx279 to %union.tree_node**
  %61 = load %union.tree_node** %60, align 8, !tbaa !6
  %call280 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 97, %union.tree_node* %58, %union.tree_node* %59, %union.tree_node* %61) #5
  %62 = load %union.tree_node** %60, align 8, !tbaa !6
  %63 = load %union.tree_node** %arrayidx276, align 8, !tbaa !6
  %call287 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 51, %union.tree_node* %0, %union.tree_node* %call280, %union.tree_node* %62, %union.tree_node* %63) #5
  br label %sw.bb288

sw.bb288:                                         ; preds = %entry, %sw.bb271
  %loc.addr.1 = phi %union.tree_node* [ %loc, %entry ], [ %call287, %sw.bb271 ]
  %operands290 = getelementptr inbounds %union.tree_node* %loc.addr.1, i64 0, i32 0, i32 2
  %arrayidx291 = getelementptr inbounds i32* %operands290, i64 2
  %64 = bitcast i32* %arrayidx291 to %union.tree_node**
  %65 = load %union.tree_node** %64, align 8, !tbaa !6
  %call292 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %65, i32 0)
  %arrayidx295 = getelementptr inbounds i32* %operands290, i64 4
  %66 = bitcast i32* %arrayidx295 to %union.tree_node**
  %67 = load %union.tree_node** %66, align 8, !tbaa !6
  %call296 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %67, i32 0)
  %arrayidx299 = bitcast i32* %operands290 to %union.tree_node**
  %68 = load %union.tree_node** %arrayidx299, align 8, !tbaa !6
  %call300 = call fastcc %struct.dw_loc_descr_struct* @loc_descriptor_from_tree(%union.tree_node* %68, i32 0)
  store %struct.dw_loc_descr_struct* %call300, %struct.dw_loc_descr_struct** %ret, align 8
  %cmp301 = icmp eq %struct.dw_loc_descr_struct* %call300, null
  %cmp303 = icmp eq %struct.dw_loc_descr_struct* %call292, null
  %or.cond359 = or i1 %cmp301, %cmp303
  %cmp305 = icmp eq %struct.dw_loc_descr_struct* %call296, null
  %or.cond360 = or i1 %or.cond359, %cmp305
  br i1 %or.cond360, label %return, label %if.end307

if.end307:                                        ; preds = %sw.bb288
  %call.i632 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i633 = getelementptr inbounds i8* %call.i632, i64 8
  %69 = bitcast i8* %dw_loc_opc.i633 to i32*
  store i32 40, i32* %69, align 4, !tbaa !18
  %dw_loc_oprnd1.i634 = getelementptr inbounds i8* %call.i632, i64 16
  %val_class.i635 = bitcast i8* %dw_loc_oprnd1.i634 to i32*
  store i32 6, i32* %val_class.i635, align 4, !tbaa !23
  %v.i636 = getelementptr inbounds i8* %call.i632, i64 24
  %val_unsigned.i637 = bitcast i8* %v.i636 to i64*
  store i64 0, i64* %val_unsigned.i637, align 8, !tbaa !8
  %dw_loc_oprnd2.i638 = getelementptr inbounds i8* %call.i632, i64 40
  %val_class2.i639 = bitcast i8* %dw_loc_oprnd2.i638 to i32*
  store i32 6, i32* %val_class2.i639, align 4, !tbaa !24
  %v4.i640 = getelementptr inbounds i8* %call.i632, i64 48
  %val_unsigned5.i641 = bitcast i8* %v4.i640 to i64*
  store i64 0, i64* %val_unsigned5.i641, align 8, !tbaa !8
  br label %for.cond.i595

for.cond.i595:                                    ; preds = %for.cond.i595, %if.end307
  %d.0.i592 = phi %struct.dw_loc_descr_struct** [ %ret, %if.end307 ], [ %dw_loc_next.i594, %for.cond.i595 ]
  %70 = load %struct.dw_loc_descr_struct** %d.0.i592, align 8, !tbaa !6
  %cmp.i593 = icmp eq %struct.dw_loc_descr_struct* %70, null
  %dw_loc_next.i594 = getelementptr inbounds %struct.dw_loc_descr_struct* %70, i64 0, i32 0
  br i1 %cmp.i593, label %add_loc_descr.exit596, label %for.cond.i595

add_loc_descr.exit596:                            ; preds = %for.cond.i595
  %71 = bitcast i8* %call.i632 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %71, %struct.dw_loc_descr_struct** %d.0.i592, align 8, !tbaa !6
  br label %for.cond.i590

for.cond.i590:                                    ; preds = %for.cond.i590, %add_loc_descr.exit596
  %d.0.i587 = phi %struct.dw_loc_descr_struct** [ %ret, %add_loc_descr.exit596 ], [ %dw_loc_next.i589, %for.cond.i590 ]
  %72 = load %struct.dw_loc_descr_struct** %d.0.i587, align 8, !tbaa !6
  %cmp.i588 = icmp eq %struct.dw_loc_descr_struct* %72, null
  %dw_loc_next.i589 = getelementptr inbounds %struct.dw_loc_descr_struct* %72, i64 0, i32 0
  br i1 %cmp.i588, label %add_loc_descr.exit591, label %for.cond.i590

add_loc_descr.exit591:                            ; preds = %for.cond.i590
  store %struct.dw_loc_descr_struct* %call296, %struct.dw_loc_descr_struct** %d.0.i587, align 8, !tbaa !6
  %call.i562 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i563 = getelementptr inbounds i8* %call.i562, i64 8
  %73 = bitcast i8* %dw_loc_opc.i563 to i32*
  store i32 47, i32* %73, align 4, !tbaa !18
  %dw_loc_oprnd1.i564 = getelementptr inbounds i8* %call.i562, i64 16
  %val_class.i565 = bitcast i8* %dw_loc_oprnd1.i564 to i32*
  store i32 6, i32* %val_class.i565, align 4, !tbaa !23
  %v.i566 = getelementptr inbounds i8* %call.i562, i64 24
  %val_unsigned.i567 = bitcast i8* %v.i566 to i64*
  store i64 0, i64* %val_unsigned.i567, align 8, !tbaa !8
  %dw_loc_oprnd2.i568 = getelementptr inbounds i8* %call.i562, i64 40
  %val_class2.i569 = bitcast i8* %dw_loc_oprnd2.i568 to i32*
  store i32 6, i32* %val_class2.i569, align 4, !tbaa !24
  %v4.i570 = getelementptr inbounds i8* %call.i562, i64 48
  %val_unsigned5.i571 = bitcast i8* %v4.i570 to i64*
  store i64 0, i64* %val_unsigned5.i571, align 8, !tbaa !8
  br label %for.cond.i474

for.cond.i474:                                    ; preds = %for.cond.i474, %add_loc_descr.exit591
  %d.0.i471 = phi %struct.dw_loc_descr_struct** [ %ret, %add_loc_descr.exit591 ], [ %dw_loc_next.i473, %for.cond.i474 ]
  %74 = load %struct.dw_loc_descr_struct** %d.0.i471, align 8, !tbaa !6
  %cmp.i472 = icmp eq %struct.dw_loc_descr_struct* %74, null
  %dw_loc_next.i473 = getelementptr inbounds %struct.dw_loc_descr_struct* %74, i64 0, i32 0
  br i1 %cmp.i472, label %add_loc_descr.exit475, label %for.cond.i474

add_loc_descr.exit475:                            ; preds = %for.cond.i474
  %75 = bitcast i8* %call.i562 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %75, %struct.dw_loc_descr_struct** %d.0.i471, align 8, !tbaa !6
  br label %for.cond.i469

for.cond.i469:                                    ; preds = %for.cond.i469, %add_loc_descr.exit475
  %d.0.i466 = phi %struct.dw_loc_descr_struct** [ %ret, %add_loc_descr.exit475 ], [ %dw_loc_next.i468, %for.cond.i469 ]
  %76 = load %struct.dw_loc_descr_struct** %d.0.i466, align 8, !tbaa !6
  %cmp.i467 = icmp eq %struct.dw_loc_descr_struct* %76, null
  %dw_loc_next.i468 = getelementptr inbounds %struct.dw_loc_descr_struct* %76, i64 0, i32 0
  br i1 %cmp.i467, label %add_loc_descr.exit470, label %for.cond.i469

add_loc_descr.exit470:                            ; preds = %for.cond.i469
  store %struct.dw_loc_descr_struct* %call292, %struct.dw_loc_descr_struct** %d.0.i466, align 8, !tbaa !6
  store i32 2, i32* %val_class.i635, align 4, !tbaa !23
  %call292.c = ptrtoint %struct.dw_loc_descr_struct* %call292 to i64
  store i64 %call292.c, i64* %val_unsigned.i637, align 8, !tbaa !6
  %call.i456 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i457 = getelementptr inbounds i8* %call.i456, i64 8
  %77 = bitcast i8* %dw_loc_opc.i457 to i32*
  store i32 150, i32* %77, align 4, !tbaa !18
  %dw_loc_oprnd1.i458 = getelementptr inbounds i8* %call.i456, i64 16
  %val_class.i459 = bitcast i8* %dw_loc_oprnd1.i458 to i32*
  store i32 6, i32* %val_class.i459, align 4, !tbaa !23
  %v.i460 = getelementptr inbounds i8* %call.i456, i64 24
  %val_unsigned.i461 = bitcast i8* %v.i460 to i64*
  store i64 0, i64* %val_unsigned.i461, align 8, !tbaa !8
  %dw_loc_oprnd2.i462 = getelementptr inbounds i8* %call.i456, i64 40
  %val_class2.i463 = bitcast i8* %dw_loc_oprnd2.i462 to i32*
  store i32 6, i32* %val_class2.i463, align 4, !tbaa !24
  %v4.i464 = getelementptr inbounds i8* %call.i456, i64 48
  %val_unsigned5.i465 = bitcast i8* %v4.i464 to i64*
  store i64 0, i64* %val_unsigned5.i465, align 8, !tbaa !8
  br label %for.cond.i454

for.cond.i454:                                    ; preds = %for.cond.i454, %add_loc_descr.exit470
  %d.0.i451 = phi %struct.dw_loc_descr_struct** [ %ret, %add_loc_descr.exit470 ], [ %dw_loc_next.i453, %for.cond.i454 ]
  %78 = load %struct.dw_loc_descr_struct** %d.0.i451, align 8, !tbaa !6
  %cmp.i452 = icmp eq %struct.dw_loc_descr_struct* %78, null
  %dw_loc_next.i453 = getelementptr inbounds %struct.dw_loc_descr_struct* %78, i64 0, i32 0
  br i1 %cmp.i452, label %add_loc_descr.exit455, label %for.cond.i454

add_loc_descr.exit455:                            ; preds = %for.cond.i454
  %79 = bitcast i8* %call.i456 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %79, %struct.dw_loc_descr_struct** %d.0.i451, align 8, !tbaa !6
  store i32 2, i32* %val_class.i565, align 4, !tbaa !23
  %call314.c = ptrtoint i8* %call.i456 to i64
  store i64 %call314.c, i64* %val_unsigned.i567, align 8, !tbaa !6
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 8292, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.loc_descriptor_from_tree, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %add_loc_descr.exit510, %add_loc_descr.exit531, %if.else134, %if.end, %add_loc_descr.exit455, %add_loc_descr.exit621, %add_loc_descr.exit616, %add_loc_descr.exit586, %int_loc_descriptor.exit561
  %indirect_p.2 = phi i32 [ 0, %add_loc_descr.exit455 ], [ 0, %add_loc_descr.exit621 ], [ 0, %add_loc_descr.exit616 ], [ 0, %add_loc_descr.exit586 ], [ 0, %int_loc_descriptor.exit561 ], [ %., %add_loc_descr.exit510 ], [ %., %add_loc_descr.exit531 ], [ %., %if.else134 ], [ %indirect_p.0, %if.end ]
  %loc.addr.2 = phi %union.tree_node* [ %loc.addr.1, %add_loc_descr.exit455 ], [ %loc, %add_loc_descr.exit621 ], [ %loc, %add_loc_descr.exit616 ], [ %loc, %add_loc_descr.exit586 ], [ %loc, %int_loc_descriptor.exit561 ], [ %loc, %add_loc_descr.exit510 ], [ %loc, %add_loc_descr.exit531 ], [ %loc, %if.else134 ], [ %loc, %if.end ]
  %tobool320 = icmp ne i32 %addressp, 0
  %cmp322 = icmp eq i32 %indirect_p.2, 0
  %or.cond361 = and i1 %tobool320, %cmp322
  br i1 %or.cond361, label %return, label %if.end324

if.end324:                                        ; preds = %if.then79, %sw.bb94, %sw.epilog
  %loc.addr.2648 = phi %union.tree_node* [ %loc.addr.2, %sw.epilog ], [ %loc, %sw.bb94 ], [ %loc, %if.then79 ]
  %indirect_p.2647 = phi i32 [ %indirect_p.2, %sw.epilog ], [ 1, %sw.bb94 ], [ 1, %if.then79 ]
  %tobool325 = icmp eq i32 %addressp, 0
  %cmp327 = icmp sgt i32 %indirect_p.2647, 0
  %or.cond362 = and i1 %tobool325, %cmp327
  br i1 %or.cond362, label %if.then328, label %if.end355

if.then328:                                       ; preds = %if.end324
  %type331 = getelementptr inbounds %union.tree_node* %loc.addr.2648, i64 0, i32 0, i32 0, i32 1
  %80 = load %union.tree_node** %type331, align 8, !tbaa !87
  %call332 = call i64 @int_size_in_bytes(%union.tree_node* %80) #5
  %81 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %81, 20
  %82 = and i32 %and, 32
  %83 = add i32 %82, 32
  %div335 = sdiv i32 %83, 8
  %conv = sext i32 %div335 to i64
  %cmp336 = icmp sgt i64 %call332, %conv
  %cmp339 = icmp eq i64 %call332, -1
  %or.cond363 = or i1 %cmp336, %cmp339
  br i1 %or.cond363, label %return, label %if.else342

if.else342:                                       ; preds = %if.then328
  %cmp348 = icmp eq i64 %call332, %conv
  %.440 = select i1 %cmp348, i32 6, i32 148
  %call.i441 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i442 = getelementptr inbounds i8* %call.i441, i64 8
  %84 = bitcast i8* %dw_loc_opc.i442 to i32*
  store i32 %.440, i32* %84, align 4, !tbaa !18
  %dw_loc_oprnd1.i443 = getelementptr inbounds i8* %call.i441, i64 16
  %val_class.i444 = bitcast i8* %dw_loc_oprnd1.i443 to i32*
  store i32 6, i32* %val_class.i444, align 4, !tbaa !23
  %v.i445 = getelementptr inbounds i8* %call.i441, i64 24
  %val_unsigned.i446 = bitcast i8* %v.i445 to i64*
  store i64 %call332, i64* %val_unsigned.i446, align 8, !tbaa !8
  %dw_loc_oprnd2.i447 = getelementptr inbounds i8* %call.i441, i64 40
  %val_class2.i448 = bitcast i8* %dw_loc_oprnd2.i447 to i32*
  store i32 6, i32* %val_class2.i448, align 4, !tbaa !24
  %v4.i449 = getelementptr inbounds i8* %call.i441, i64 48
  %val_unsigned5.i450 = bitcast i8* %v4.i449 to i64*
  store i64 0, i64* %val_unsigned5.i450, align 8, !tbaa !8
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i, %if.else342
  %d.0.i = phi %struct.dw_loc_descr_struct** [ %ret, %if.else342 ], [ %dw_loc_next.i, %for.cond.i ]
  %85 = load %struct.dw_loc_descr_struct** %d.0.i, align 8, !tbaa !6
  %cmp.i = icmp eq %struct.dw_loc_descr_struct* %85, null
  %dw_loc_next.i = getelementptr inbounds %struct.dw_loc_descr_struct* %85, i64 0, i32 0
  br i1 %cmp.i, label %add_loc_descr.exit, label %for.cond.i

add_loc_descr.exit:                               ; preds = %for.cond.i
  %86 = bitcast i8* %call.i441 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %86, %struct.dw_loc_descr_struct** %d.0.i, align 8, !tbaa !6
  br label %if.end355

if.end355:                                        ; preds = %if.end324, %add_loc_descr.exit
  %ret.0. = load %struct.dw_loc_descr_struct** %ret, align 8
  br label %return

return:                                           ; preds = %for.cond, %if.then328, %sw.epilog, %sw.bb288, %do_unop, %do_binop, %sw.bb230, %sw.bb216, %sw.bb202, %sw.bb188, %if.then174, %sw.bb141, %if.end114, %lor.lhs.false117, %lor.lhs.false119, %sw.bb109, %sw.bb45, %cond.true, %entry, %entry, %entry, %entry, %if.end355, %sw.bb104, %sw.bb99
  %retval.0 = phi %struct.dw_loc_descr_struct* [ %ret.0., %if.end355 ], [ %call108, %sw.bb104 ], [ %call103, %sw.bb99 ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ %call, %cond.true ], [ null, %sw.bb45 ], [ null, %sw.bb109 ], [ null, %lor.lhs.false119 ], [ null, %lor.lhs.false117 ], [ null, %if.end114 ], [ null, %sw.bb141 ], [ null, %if.then174 ], [ null, %sw.bb188 ], [ null, %sw.bb202 ], [ null, %sw.bb216 ], [ null, %sw.bb230 ], [ null, %do_binop ], [ null, %do_unop ], [ null, %sw.bb288 ], [ null, %sw.epilog ], [ null, %if.then328 ], [ null, %for.cond ]
  ret %struct.dw_loc_descr_struct* %retval.0
}

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @rtl_for_decl_location(%union.tree_node* nocapture readonly %decl) #1 {
entry:
  %rtl2 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  %0 = load %struct.rtx_def** %rtl2, align 8, !tbaa !109
  %1 = load i32* @reload_completed, align 4, !tbaa !4
  %tobool13 = icmp eq i32 %1, 0
  br i1 %tobool13, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %tobool14 = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool14, label %if.else325, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.else325 [
    i32 67, label %if.then100
    i32 68, label %if.then100
    i32 54, label %if.then100
    i32 55, label %if.then100
    i32 58, label %if.then100
    i32 134, label %if.then100
    i32 56, label %if.then100
    i32 140, label %if.then100
    i32 66, label %land.lhs.true47
  ]

land.lhs.true47:                                  ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load48 = load i32* %4, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  switch i32 %bf.clear49, label %if.else325 [
    i32 67, label %if.then100
    i32 68, label %if.then100
    i32 54, label %if.then100
    i32 55, label %if.then100
    i32 58, label %if.then100
    i32 134, label %if.then100
    i32 56, label %if.then100
    i32 140, label %if.then100
  ]

if.then100:                                       ; preds = %land.lhs.true47, %land.lhs.true47, %land.lhs.true47, %land.lhs.true47, %land.lhs.true47, %land.lhs.true47, %land.lhs.true47, %land.lhs.true47, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true, %land.lhs.true
  %call = tail call %struct.rtx_def* @i386_simplify_dwarf_addr(%struct.rtx_def* %0) #5
  br label %return

if.else:                                          ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load101 = load i32* %code, align 8
  %bf.clear102 = and i32 %bf.load101, 255
  %cmp103 = icmp eq i32 %bf.clear102, 35
  br i1 %cmp103, label %if.then104, label %if.end320

if.then104:                                       ; preds = %if.else
  %cmp105 = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp105, label %if.then109, label %lor.lhs.false106

lor.lhs.false106:                                 ; preds = %if.then104
  %5 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load.i = load i32* %5, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.then323 [
    i32 61, label %is_pseudo_reg.exit
    i32 63, label %land.rhs.i
  ]

land.rhs.i:                                       ; preds = %lor.lhs.false106
  %arrayidx6.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx6.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  br label %is_pseudo_reg.exit

is_pseudo_reg.exit:                               ; preds = %lor.lhs.false106, %land.rhs.i
  %.pn = phi %struct.rtx_def* [ %6, %land.rhs.i ], [ %0, %lor.lhs.false106 ]
  %.sink.in.in = getelementptr inbounds %struct.rtx_def* %.pn, i64 0, i32 1, i64 0
  %.sink.in = bitcast %union.rtunion_def* %.sink.in.in to i32*
  %.sink = load i32* %.sink.in, align 4
  %cmp1.i = icmp ugt i32 %.sink, 52
  br i1 %cmp1.i, label %if.then109, label %if.end320

if.then109:                                       ; preds = %is_pseudo_reg.exit, %if.then104
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type, align 8, !tbaa !87
  %.idx500 = getelementptr %union.tree_node* %7, i64 0, i32 0, i32 15
  %.idx500.val = load %union.tree_node** %.idx500, align 8, !tbaa !107
  %code.i503 = getelementptr inbounds %union.tree_node* %.idx500.val, i64 0, i32 0, i32 0, i32 2
  %bf.load.i504 = load i32* %code.i503, align 8
  %bf.clear.i505 = and i32 %bf.load.i504, 255
  %cmp.i506 = icmp eq i32 %bf.clear.i505, 18
  br i1 %cmp.i506, label %while.cond.i509, label %type_main_variant.exit511

while.cond.i509:                                  ; preds = %if.then109, %while.cond.i509
  %type.addr.0.i507 = phi %union.tree_node* [ %9, %while.cond.i509 ], [ %.idx500.val, %if.then109 ]
  %8 = getelementptr inbounds %union.tree_node* %type.addr.0.i507, i64 0, i32 0, i32 15
  %9 = load %union.tree_node** %8, align 8, !tbaa !107
  %cmp4.i508 = icmp eq %union.tree_node* %type.addr.0.i507, %9
  br i1 %cmp4.i508, label %type_main_variant.exit511, label %while.cond.i509

type_main_variant.exit511:                        ; preds = %while.cond.i509, %if.then109
  %type.addr.1.i510 = phi %union.tree_node* [ %.idx500.val, %if.then109 ], [ %type.addr.0.i507, %while.cond.i509 ]
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %10 = load %union.tree_node** %initial, align 8, !tbaa !90
  %.idx = getelementptr %union.tree_node* %10, i64 0, i32 0, i32 15
  %.idx.val = load %union.tree_node** %.idx, align 8, !tbaa !107
  %code.i = getelementptr inbounds %union.tree_node* %.idx.val, i64 0, i32 0, i32 0, i32 2
  %bf.load.i501 = load i32* %code.i, align 8
  %bf.clear.i502 = and i32 %bf.load.i501, 255
  %cmp.i = icmp eq i32 %bf.clear.i502, 18
  br i1 %cmp.i, label %while.cond.i, label %type_main_variant.exit

while.cond.i:                                     ; preds = %type_main_variant.exit511, %while.cond.i
  %type.addr.0.i = phi %union.tree_node* [ %12, %while.cond.i ], [ %.idx.val, %type_main_variant.exit511 ]
  %11 = getelementptr inbounds %union.tree_node* %type.addr.0.i, i64 0, i32 0, i32 15
  %12 = load %union.tree_node** %11, align 8, !tbaa !107
  %cmp4.i = icmp eq %union.tree_node* %type.addr.0.i, %12
  br i1 %cmp4.i, label %type_main_variant.exit, label %while.cond.i

type_main_variant.exit:                           ; preds = %while.cond.i, %type_main_variant.exit511
  %type.addr.1.i = phi %union.tree_node* [ %.idx.val, %type_main_variant.exit511 ], [ %type.addr.0.i, %while.cond.i ]
  %cmp114 = icmp eq %union.tree_node* %type.addr.1.i510, %type.addr.1.i
  br i1 %cmp114, label %if.then115, label %if.else117

if.then115:                                       ; preds = %type_main_variant.exit
  %u2 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 19
  %r = bitcast %union.anon.1* %u2 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %r, align 8, !tbaa !6
  br label %if.end320

if.else117:                                       ; preds = %type_main_variant.exit
  %code119 = getelementptr inbounds %union.tree_node* %type.addr.1.i510, i64 0, i32 0, i32 0, i32 2
  %bf.load120 = load i32* %code119, align 8
  %bf.clear121 = and i32 %bf.load120, 255
  %cmp122 = icmp eq i32 %bf.clear121, 6
  br i1 %cmp122, label %land.lhs.true123, label %if.end320

land.lhs.true123:                                 ; preds = %if.else117
  %type124 = bitcast %union.tree_node* %type.addr.1.i510 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type124, i64 0, i32 6
  %bf.load125 = load i32* %mode, align 4
  %bf.lshr = lshr i32 %bf.load125, 9
  %bf.clear126 = and i32 %bf.lshr, 127
  %idxprom498 = zext i32 %bf.clear126 to i64
  %arrayidx127 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom498
  %14 = load i8* %arrayidx127, align 1, !tbaa !1
  %type128 = bitcast %union.tree_node* %type.addr.1.i to %struct.tree_type*
  %mode129 = getelementptr inbounds %struct.tree_type* %type128, i64 0, i32 6
  %bf.load130 = load i32* %mode129, align 4
  %bf.lshr131 = lshr i32 %bf.load130, 9
  %bf.clear132 = and i32 %bf.lshr131, 127
  %idxprom133499 = zext i32 %bf.clear132 to i64
  %arrayidx134 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom133499
  %15 = load i8* %arrayidx134, align 1, !tbaa !1
  %cmp136 = icmp ugt i8 %14, %15
  br i1 %cmp136, label %if.end320, label %if.then138

if.then138:                                       ; preds = %land.lhs.true123
  %u2140 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 19
  %r141 = bitcast %union.anon.1* %u2140 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %r141, align 8, !tbaa !6
  br label %if.end320

if.end320:                                        ; preds = %is_pseudo_reg.exit, %land.lhs.true123, %if.else, %if.then115, %if.then138, %if.else117
  %rtl.0 = phi %struct.rtx_def* [ %13, %if.then115 ], [ %16, %if.then138 ], [ %0, %land.lhs.true123 ], [ %0, %if.else117 ], [ %0, %is_pseudo_reg.exit ], [ %0, %if.else ]
  %cmp321 = icmp eq %struct.rtx_def* %rtl.0, null
  br i1 %cmp321, label %if.else325, label %if.then323

if.then323:                                       ; preds = %lor.lhs.false106, %if.end320
  %rtl.0519 = phi %struct.rtx_def* [ %rtl.0, %if.end320 ], [ %0, %lor.lhs.false106 ]
  %call324 = tail call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %rtl.0519, i32 0, %struct.rtx_def* null) #5
  br label %if.end437

if.else325:                                       ; preds = %if.then, %land.lhs.true, %land.lhs.true47, %if.end320
  %code327 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load328 = load i32* %code327, align 8
  %bf.clear329 = and i32 %bf.load328, 255
  %cmp330 = icmp eq i32 %bf.clear329, 34
  br i1 %cmp330, label %land.lhs.true332, label %return

land.lhs.true332:                                 ; preds = %if.else325
  %initial334 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %17 = load %union.tree_node** %initial334, align 8, !tbaa !90
  %tobool335 = icmp eq %union.tree_node* %17, null
  br i1 %tobool335, label %return, label %if.then336

if.then336:                                       ; preds = %land.lhs.true332
  %code340 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 2
  %bf.load341 = load i32* %code340, align 8
  %bf.clear342 = and i32 %bf.load341, 255
  %cmp343 = icmp eq i32 %bf.clear342, 29
  br i1 %cmp343, label %land.lhs.true345, label %if.else404

land.lhs.true345:                                 ; preds = %if.then336
  %type347 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type347, align 8, !tbaa !87
  %code349 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 2
  %bf.load350 = load i32* %code349, align 8
  %bf.clear351 = and i32 %bf.load350, 255
  %cmp352 = icmp eq i32 %bf.clear351, 18
  br i1 %cmp352, label %if.then354, label %return

if.then354:                                       ; preds = %land.lhs.true345
  %type358 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 1
  %19 = load %union.tree_node** %type358, align 8, !tbaa !87
  %values = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 1
  %20 = load i8** %values, align 8
  %type363 = bitcast %union.tree_node* %19 to %struct.tree_type*
  %mode364 = getelementptr inbounds %struct.tree_type* %type363, i64 0, i32 6
  %bf.load365 = load i32* %mode364, align 4
  %bf.lshr366 = lshr i32 %bf.load365, 9
  %bf.clear367 = and i32 %bf.lshr366, 127
  %idxprom368497 = zext i32 %bf.clear367 to i64
  %arrayidx369 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom368497
  %21 = load i32* %arrayidx369, align 4, !tbaa !1
  %cmp370 = icmp eq i32 %21, 1
  br i1 %cmp370, label %land.lhs.true372, label %return

land.lhs.true372:                                 ; preds = %if.then354
  %arrayidx374 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom368497
  %22 = load i8* %arrayidx374, align 1, !tbaa !1
  %cmp376 = icmp eq i8 %22, 1
  %tobool379 = icmp ne i8* %20, null
  %or.cond = and i1 %cmp376, %tobool379
  br i1 %or.cond, label %land.lhs.true380, label %return

land.lhs.true380:                                 ; preds = %land.lhs.true372
  %minval = getelementptr inbounds i8* %20, i64 104
  %23 = bitcast i8* %minval to %union.tree_node**
  %24 = load %union.tree_node** %23, align 8, !tbaa !131
  %call382 = tail call i32 @integer_zerop(%union.tree_node* %24) #5
  %tobool383 = icmp eq i32 %call382, 0
  br i1 %tobool383, label %return, label %land.lhs.true384

land.lhs.true384:                                 ; preds = %land.lhs.true380
  %maxval = getelementptr inbounds i8* %20, i64 112
  %25 = bitcast i8* %maxval to %union.tree_node**
  %26 = load %union.tree_node** %25, align 8, !tbaa !125
  %27 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 2
  %28 = load i32* %27, align 4, !tbaa !133
  %sub386 = add nsw i32 %28, -1
  %conv387 = sext i32 %sub386 to i64
  %call388 = tail call i32 @compare_tree_int(%union.tree_node* %26, i64 %conv387) #5
  %cmp389 = icmp eq i32 %call388, 0
  br i1 %cmp389, label %land.lhs.true391, label %return

land.lhs.true391:                                 ; preds = %land.lhs.true384
  %29 = load i32* %27, align 4, !tbaa !133
  %conv394 = sext i32 %29 to i64
  %pointer = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 4
  %30 = load %union.tree_node** %pointer, align 8
  %31 = bitcast %union.tree_node* %30 to i8*
  %call396 = tail call i64 @strlen(i8* %31) #5
  %add = add i64 %call396, 1
  %cmp397 = icmp eq i64 %conv394, %add
  br i1 %cmp397, label %if.then399, label %return

if.then399:                                       ; preds = %land.lhs.true391
  %call402 = tail call %struct.rtx_def* @gen_rtx_fmt_s(i32 57, i32 0, i8* %31) #5
  br label %if.end437

if.else404:                                       ; preds = %if.then336
  %bf.clear410.off = add i32 %bf.clear342, -25
  %switch = icmp ult i32 %bf.clear410.off, 2
  br i1 %switch, label %if.then422, label %return

if.then422:                                       ; preds = %if.else404
  %call425 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %17, %struct.rtx_def* null, i32 0, i32 3) #5
  %tobool426 = icmp eq %struct.rtx_def* %call425, null
  br i1 %tobool426, label %return, label %land.lhs.true427

land.lhs.true427:                                 ; preds = %if.then422
  %32 = getelementptr inbounds %struct.rtx_def* %call425, i64 0, i32 0
  %bf.load428 = load i32* %32, align 8
  %bf.clear429 = and i32 %bf.load428, 65535
  %cmp430 = icmp eq i32 %bf.clear429, 66
  br i1 %cmp430, label %if.then432, label %if.then439

if.then432:                                       ; preds = %land.lhs.true427
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 8957, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.rtl_for_decl_location, i64 0, i64 0)) #7
  unreachable

if.end437:                                        ; preds = %if.then399, %if.then323
  %rtl.1 = phi %struct.rtx_def* [ %call324, %if.then323 ], [ %call402, %if.then399 ]
  %tobool438 = icmp eq %struct.rtx_def* %rtl.1, null
  br i1 %tobool438, label %return, label %if.then439

if.then439:                                       ; preds = %land.lhs.true427, %if.end437
  %rtl.1517 = phi %struct.rtx_def* [ %rtl.1, %if.end437 ], [ %call425, %land.lhs.true427 ]
  %call440 = tail call %struct.rtx_def* @i386_simplify_dwarf_addr(%struct.rtx_def* %rtl.1517) #5
  br label %return

return:                                           ; preds = %land.lhs.true345, %if.else404, %land.lhs.true332, %if.then354, %land.lhs.true372, %land.lhs.true380, %land.lhs.true384, %land.lhs.true391, %if.else325, %if.then422, %if.then439, %if.end437, %if.then100
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then100 ], [ %call440, %if.then439 ], [ null, %if.end437 ], [ null, %if.then422 ], [ null, %if.else325 ], [ null, %land.lhs.true391 ], [ null, %land.lhs.true384 ], [ null, %land.lhs.true380 ], [ null, %land.lhs.true372 ], [ null, %if.then354 ], [ null, %land.lhs.true332 ], [ null, %if.else404 ], [ null, %land.lhs.true345 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %rtl, i32 %mode) #1 {
entry:
  %mem_loc_result = alloca %struct.dw_loc_descr_struct*, align 8
  %marked = alloca i8, align 1
  store %struct.dw_loc_descr_struct* null, %struct.dw_loc_descr_struct** %mem_loc_result, align 8
  %call = call %struct.rtx_def* @i386_simplify_dwarf_addr(%struct.rtx_def* %rtl) #5
  %0 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 99, label %sw.bb
    i32 98, label %sw.bb
    i32 101, label %sw.bb
    i32 63, label %sw.bb
    i32 61, label %sw.bb1
    i32 66, label %sw.bb6
    i32 67, label %sw.bb17
    i32 58, label %sw.bb17
    i32 68, label %sw.bb17
    i32 100, label %sw.bb52
    i32 97, label %sw.bb56
    i32 96, label %sw.bb56
    i32 75, label %plus
    i32 78, label %sw.bb125
    i32 54, label %sw.bb143
    i32 70, label %sw.bb148
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  br label %sw.bb1

sw.bb1:                                           ; preds = %entry, %sw.bb
  %rtl.addr.0 = phi %struct.rtx_def* [ %call, %entry ], [ %1, %sw.bb ]
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %rtl.addr.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx3 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !4
  %cmp = icmp ult i32 %2, 53
  br i1 %cmp, label %reg_number.exit, label %sw.epilog

reg_number.exit:                                  ; preds = %sw.bb1
  %3 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = and i32 %3, 33554432
  %tobool.i = icmp eq i32 %and.i, 0
  %idxprom.i = zext i32 %2 to i64
  %svr4_dbx_register_map.dbx64_register_map.i = select i1 %tobool.i, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in.i = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i, i64 0, i64 %idxprom.i
  %cond.i = load i32* %cond.in.i, align 4
  %4 = load i32* @frame_pointer_needed, align 4, !tbaa !4
  %tobool1.i = icmp ne i32 %4, 0
  %idxprom.i204 = select i1 %tobool1.i, i64 6, i64 7
  %cond6.in.i = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i, i64 0, i64 %idxprom.i204
  %cond6.i = load i32* %cond6.in.i, align 4
  %cmp.i206 = icmp eq i32 %cond6.i, %cond.i
  br i1 %cmp.i206, label %if.then.i207, label %if.else.i

if.then.i207:                                     ; preds = %reg_number.exit
  %call.i.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %5 = bitcast i8* %dw_loc_opc.i.i to i32*
  store i32 145, i32* %5, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_loc_oprnd1.i.i to i32*
  store i32 6, i32* %val_class.i.i, align 4, !tbaa !23
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i.i to i64*
  store i64 0, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %val_class2.i.i = bitcast i8* %dw_loc_oprnd2.i.i to i32*
  store i32 6, i32* %val_class2.i.i, align 4, !tbaa !24
  %v4.i.i = getelementptr inbounds i8* %call.i.i, i64 48
  %val_unsigned5.i.i = bitcast i8* %v4.i.i to i64*
  store i64 0, i64* %val_unsigned5.i.i, align 8, !tbaa !8
  br label %based_loc_descr.exit

if.else.i:                                        ; preds = %reg_number.exit
  %cmp7.i = icmp ult i32 %cond.i, 32
  br i1 %cmp7.i, label %if.then8.i, label %if.else10.i

if.then8.i:                                       ; preds = %if.else.i
  %add.i = add i32 %cond.i, 112
  %call.i17.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i18.i = getelementptr inbounds i8* %call.i17.i, i64 8
  %6 = bitcast i8* %dw_loc_opc.i18.i to i32*
  store i32 %add.i, i32* %6, align 4, !tbaa !18
  %dw_loc_oprnd1.i19.i = getelementptr inbounds i8* %call.i17.i, i64 16
  %val_class.i20.i = bitcast i8* %dw_loc_oprnd1.i19.i to i32*
  store i32 6, i32* %val_class.i20.i, align 4, !tbaa !23
  %v.i21.i = getelementptr inbounds i8* %call.i17.i, i64 24
  %val_unsigned.i22.i = bitcast i8* %v.i21.i to i64*
  store i64 0, i64* %val_unsigned.i22.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i23.i = getelementptr inbounds i8* %call.i17.i, i64 40
  %val_class2.i24.i = bitcast i8* %dw_loc_oprnd2.i23.i to i32*
  store i32 6, i32* %val_class2.i24.i, align 4, !tbaa !24
  %v4.i25.i = getelementptr inbounds i8* %call.i17.i, i64 48
  %val_unsigned5.i26.i = bitcast i8* %v4.i25.i to i64*
  store i64 0, i64* %val_unsigned5.i26.i, align 8, !tbaa !8
  br label %based_loc_descr.exit

if.else10.i:                                      ; preds = %if.else.i
  %conv.i = zext i32 %cond.i to i64
  %call.i27.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i28.i = getelementptr inbounds i8* %call.i27.i, i64 8
  %7 = bitcast i8* %dw_loc_opc.i28.i to i32*
  store i32 146, i32* %7, align 4, !tbaa !18
  %dw_loc_oprnd1.i29.i = getelementptr inbounds i8* %call.i27.i, i64 16
  %val_class.i30.i = bitcast i8* %dw_loc_oprnd1.i29.i to i32*
  store i32 6, i32* %val_class.i30.i, align 4, !tbaa !23
  %v.i31.i = getelementptr inbounds i8* %call.i27.i, i64 24
  %val_unsigned.i32.i = bitcast i8* %v.i31.i to i64*
  store i64 %conv.i, i64* %val_unsigned.i32.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i33.i = getelementptr inbounds i8* %call.i27.i, i64 40
  %val_class2.i34.i = bitcast i8* %dw_loc_oprnd2.i33.i to i32*
  store i32 6, i32* %val_class2.i34.i, align 4, !tbaa !24
  %v4.i35.i = getelementptr inbounds i8* %call.i27.i, i64 48
  %val_unsigned5.i36.i = bitcast i8* %v4.i35.i to i64*
  store i64 0, i64* %val_unsigned5.i36.i, align 8, !tbaa !8
  br label %based_loc_descr.exit

based_loc_descr.exit:                             ; preds = %if.then.i207, %if.then8.i, %if.else10.i
  %loc_result.0.in.i = phi i8* [ %call.i.i, %if.then.i207 ], [ %call.i17.i, %if.then8.i ], [ %call.i27.i, %if.else10.i ]
  %loc_result.0.i = bitcast i8* %loc_result.0.in.i to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %loc_result.0.i, %struct.dw_loc_descr_struct** %mem_loc_result, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx9, align 8, !tbaa !6
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear11 = and i32 %bf.lshr, 255
  %call12 = call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %8, i32 %bf.clear11)
  store %struct.dw_loc_descr_struct* %call12, %struct.dw_loc_descr_struct** %mem_loc_result, align 8
  %cmp13 = icmp eq %struct.dw_loc_descr_struct* %call12, null
  br i1 %cmp13, label %sw.epilog, label %if.then14

if.then14:                                        ; preds = %sw.bb6
  %call.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i = getelementptr inbounds i8* %call.i, i64 8
  %9 = bitcast i8* %dw_loc_opc.i to i32*
  store i32 6, i32* %9, align 4, !tbaa !18
  %dw_loc_oprnd1.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_loc_oprnd1.i to i32*
  store i32 6, i32* %val_class.i, align 4, !tbaa !23
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %val_unsigned.i = bitcast i8* %v.i to i64*
  store i64 0, i64* %val_unsigned.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i = getelementptr inbounds i8* %call.i, i64 40
  %val_class2.i = bitcast i8* %dw_loc_oprnd2.i to i32*
  store i32 6, i32* %val_class2.i, align 4, !tbaa !24
  %v4.i = getelementptr inbounds i8* %call.i, i64 48
  %val_unsigned5.i = bitcast i8* %v4.i to i64*
  store i64 0, i64* %val_unsigned5.i, align 8, !tbaa !8
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i.for.cond.i_crit_edge, %if.then14
  %10 = phi %struct.dw_loc_descr_struct* [ %call12, %if.then14 ], [ %.pre, %for.cond.i.for.cond.i_crit_edge ]
  %d.0.i = phi %struct.dw_loc_descr_struct** [ %mem_loc_result, %if.then14 ], [ %dw_loc_next.i, %for.cond.i.for.cond.i_crit_edge ]
  %cmp.i225 = icmp eq %struct.dw_loc_descr_struct* %10, null
  %dw_loc_next.i = getelementptr inbounds %struct.dw_loc_descr_struct* %10, i64 0, i32 0
  br i1 %cmp.i225, label %add_loc_descr.exit, label %for.cond.i.for.cond.i_crit_edge

for.cond.i.for.cond.i_crit_edge:                  ; preds = %for.cond.i
  %.pre = load %struct.dw_loc_descr_struct** %dw_loc_next.i, align 8, !tbaa !6
  br label %for.cond.i

add_loc_descr.exit:                               ; preds = %for.cond.i
  %11 = bitcast i8* %call.i to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %11, %struct.dw_loc_descr_struct** %d.0.i, align 8, !tbaa !6
  br label %sw.epilog

sw.bb17:                                          ; preds = %entry, %entry, %entry
  %12 = and i32 %bf.load, 67174399
  %13 = icmp eq i32 %12, 67108932
  br i1 %13, label %if.then24, label %if.end41

if.then24:                                        ; preds = %sw.bb17
  %call25 = call %struct.rtx_def* @get_pool_constant_mark(%struct.rtx_def* %call, i8* %marked) #5
  %14 = getelementptr inbounds %struct.rtx_def* %call25, i64 0, i32 0
  %bf.load26 = load i32* %14, align 8
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 68
  br i1 %cmp28, label %if.then29, label %if.end37

if.then29:                                        ; preds = %if.then24
  %bf.clear32 = and i32 %bf.load26, 67108864
  %tobool33 = icmp eq i32 %bf.clear32, 0
  br i1 %tobool33, label %if.end37.thread, label %if.then34

if.then34:                                        ; preds = %if.then29
  %call35 = call %struct.rtx_def* @get_pool_constant_mark(%struct.rtx_def* %call25, i8* %marked) #5
  br label %if.end37

if.end37.thread:                                  ; preds = %if.then29
  store i8 1, i8* %marked, align 1, !tbaa !135
  br label %if.end41

if.end37:                                         ; preds = %if.then34, %if.then24
  %rtl.addr.1.ph = phi %struct.rtx_def* [ %call25, %if.then34 ], [ %call, %if.then24 ]
  %.pr = load i8* %marked, align 1, !tbaa !135
  %tobool38 = icmp eq i8 %.pr, 0
  br i1 %tobool38, label %return, label %if.end41

if.end41:                                         ; preds = %sw.bb17, %if.end37.thread, %if.end37
  %rtl.addr.2 = phi %struct.rtx_def* [ %rtl.addr.1.ph, %if.end37 ], [ %call, %sw.bb17 ], [ %call25, %if.end37.thread ]
  %call.i226 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %15 = bitcast i8* %call.i226 to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i227 = getelementptr inbounds i8* %call.i226, i64 8
  %16 = bitcast i8* %dw_loc_opc.i227 to i32*
  store i32 3, i32* %16, align 4, !tbaa !18
  %dw_loc_oprnd1.i228 = getelementptr inbounds i8* %call.i226, i64 16
  %val_class.i229 = bitcast i8* %dw_loc_oprnd1.i228 to i32*
  %dw_loc_oprnd2.i232 = getelementptr inbounds i8* %call.i226, i64 40
  %val_class2.i233 = bitcast i8* %dw_loc_oprnd2.i232 to i32*
  store i32 6, i32* %val_class2.i233, align 4, !tbaa !24
  %v4.i234 = getelementptr inbounds i8* %call.i226, i64 48
  %val_unsigned5.i235 = bitcast i8* %v4.i234 to i64*
  store i64 0, i64* %val_unsigned5.i235, align 8, !tbaa !8
  store %struct.dw_loc_descr_struct* %15, %struct.dw_loc_descr_struct** %mem_loc_result, align 8
  store i32 0, i32* %val_class.i229, align 4, !tbaa !23
  %17 = getelementptr inbounds i8* %call.i226, i64 24
  %18 = bitcast i8* %17 to i64*
  %rtl.addr.2.c = ptrtoint %struct.rtx_def* %rtl.addr.2 to i64
  store i64 %rtl.addr.2.c, i64* %18, align 8, !tbaa !6
  %19 = load %struct.varray_head_tag** @used_rtx_varray, align 8, !tbaa !6
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 1
  %20 = load i64* %elements_used, align 8, !tbaa !67
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 0
  %21 = load i64* %num_elements, align 8, !tbaa !126
  %cmp44 = icmp ult i64 %20, %21
  br i1 %cmp44, label %if.end48, label %if.then45

if.then45:                                        ; preds = %if.end41
  %mul = shl i64 %21, 1
  %call47 = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %19, i64 %mul) #5
  store %struct.varray_head_tag* %call47, %struct.varray_head_tag** @used_rtx_varray, align 8, !tbaa !6
  %elements_used49.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call47, i64 0, i32 1
  %.pre355 = load i64* %elements_used49.phi.trans.insert, align 8, !tbaa !67
  br label %if.end48

if.end48:                                         ; preds = %if.end41, %if.then45
  %22 = phi i64 [ %20, %if.end41 ], [ %.pre355, %if.then45 ]
  %23 = phi %struct.varray_head_tag* [ %19, %if.end41 ], [ %call47, %if.then45 ]
  %elements_used49 = getelementptr inbounds %struct.varray_head_tag* %23, i64 0, i32 1
  %inc = add i64 %22, 1
  store i64 %inc, i64* %elements_used49, align 8, !tbaa !67
  %data = getelementptr inbounds %struct.varray_head_tag* %23, i64 0, i32 4
  %rtx50 = bitcast %union.varray_data_tag* %data to [1 x %struct.rtx_def*]*
  %arrayidx51 = getelementptr inbounds [1 x %struct.rtx_def*]* %rtx50, i64 0, i64 %22
  store %struct.rtx_def* %rtl.addr.2, %struct.rtx_def** %arrayidx51, align 8, !tbaa !6
  br label %sw.epilog

sw.bb52:                                          ; preds = %entry
  %arrayidx54 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx55, align 8, !tbaa !6
  br label %plus

sw.bb56:                                          ; preds = %entry, %entry
  %25 = load i32* @word_mode, align 4, !tbaa !1
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx59, align 8, !tbaa !6
  %cmp62 = icmp eq i32 %bf.clear, 97
  %idxprom = sext i32 %mode to i64
  %arrayidx63 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom
  %27 = load i8* %arrayidx63, align 1, !tbaa !1
  %conv = zext i8 %27 to i32
  %sub = sub nsw i32 0, %conv
  %cond = select i1 %cmp62, i32 %conv, i32 %sub
  %conv67 = sext i32 %cond to i64
  %call68 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv67) #5
  %call69 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %25, %struct.rtx_def* %26, %struct.rtx_def* %call68) #5
  br label %plus

plus:                                             ; preds = %sw.bb56, %entry, %sw.bb52
  %rtl.addr.3 = phi %struct.rtx_def* [ %call, %entry ], [ %call69, %sw.bb56 ], [ %24, %sw.bb52 ]
  %28 = getelementptr inbounds %struct.rtx_def* %rtl.addr.3, i64 0, i32 0
  %bf.load.i = load i32* %28, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i236 = icmp eq i32 %bf.clear.i, 75
  %fld.i = getelementptr inbounds %struct.rtx_def* %rtl.addr.3, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  br i1 %cmp.i236, label %land.rhs.i, label %if.else84

land.rhs.i:                                       ; preds = %plus
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load1.i = load i32* %30, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i237 = icmp eq i32 %bf.clear2.i, 61
  br i1 %cmp3.i237, label %land.lhs.true.i, label %if.else84

land.lhs.true.i:                                  ; preds = %land.rhs.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0
  %rtuint.i238 = bitcast %union.rtunion_def* %arrayidx8.i to i32*
  %31 = load i32* %rtuint.i238, align 4, !tbaa !4
  %cmp9.i = icmp ult i32 %31, 53
  br i1 %cmp9.i, label %is_based_loc.exit, label %if.else84

is_based_loc.exit:                                ; preds = %land.lhs.true.i
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %rtl.addr.3, i64 0, i32 1, i64 1
  %rtx13.i = bitcast %union.rtunion_def* %arrayidx12.i to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx13.i, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load14.i = load i32* %33, align 8
  %bf.clear15.i = and i32 %bf.load14.i, 65535
  %cmp16.i = icmp eq i32 %bf.clear15.i, 54
  br i1 %cmp16.i, label %if.then73, label %if.else84

if.then73:                                        ; preds = %is_based_loc.exit
  %arrayidx.i239 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0
  %rtuint.i240 = bitcast %union.rtunion_def* %arrayidx.i239 to i32*
  %34 = load i32* %rtuint.i240, align 4, !tbaa !4
  %cmp.i241 = icmp ugt i32 %34, 52
  br i1 %cmp.i241, label %if.then.i242, label %reg_number.exit249

if.then.i242:                                     ; preds = %if.then73
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 7617, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.reg_number, i64 0, i64 0)) #7
  unreachable

reg_number.exit249:                               ; preds = %if.then73
  %35 = load i32* @target_flags, align 4, !tbaa !4
  %and.i243 = and i32 %35, 33554432
  %tobool.i244 = icmp eq i32 %and.i243, 0
  %idxprom.i245 = zext i32 %34 to i64
  %svr4_dbx_register_map.dbx64_register_map.i246 = select i1 %tobool.i244, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in.i247 = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i246, i64 0, i64 %idxprom.i245
  %cond.i248 = load i32* %cond.in.i247, align 4
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %rtl.addr.3, i64 0, i32 1, i64 1
  %rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx80, align 8, !tbaa !6
  %rtwint = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 0, i32 0
  %37 = load i64* %rtwint, align 8, !tbaa !29
  %38 = load i32* @frame_pointer_needed, align 4, !tbaa !4
  %tobool1.i252 = icmp ne i32 %38, 0
  %idxprom.i253 = select i1 %tobool1.i252, i64 6, i64 7
  %cond6.in.i255 = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i246, i64 0, i64 %idxprom.i253
  %cond6.i256 = load i32* %cond6.in.i255, align 4
  %cmp.i257 = icmp eq i32 %cond6.i256, %cond.i248
  br i1 %cmp.i257, label %if.then.i268, label %if.else.i270

if.then.i268:                                     ; preds = %reg_number.exit249
  %call.i.i258 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i.i259 = getelementptr inbounds i8* %call.i.i258, i64 8
  %39 = bitcast i8* %dw_loc_opc.i.i259 to i32*
  store i32 145, i32* %39, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i260 = getelementptr inbounds i8* %call.i.i258, i64 16
  %val_class.i.i261 = bitcast i8* %dw_loc_oprnd1.i.i260 to i32*
  store i32 6, i32* %val_class.i.i261, align 4, !tbaa !23
  %v.i.i262 = getelementptr inbounds i8* %call.i.i258, i64 24
  %val_unsigned.i.i263 = bitcast i8* %v.i.i262 to i64*
  store i64 %37, i64* %val_unsigned.i.i263, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i264 = getelementptr inbounds i8* %call.i.i258, i64 40
  %val_class2.i.i265 = bitcast i8* %dw_loc_oprnd2.i.i264 to i32*
  store i32 6, i32* %val_class2.i.i265, align 4, !tbaa !24
  %v4.i.i266 = getelementptr inbounds i8* %call.i.i258, i64 48
  %val_unsigned5.i.i267 = bitcast i8* %v4.i.i266 to i64*
  store i64 0, i64* %val_unsigned5.i.i267, align 8, !tbaa !8
  br label %based_loc_descr.exit297

if.else.i270:                                     ; preds = %reg_number.exit249
  %cmp7.i269 = icmp ult i32 %cond.i248, 32
  br i1 %cmp7.i269, label %if.then8.i282, label %if.else10.i294

if.then8.i282:                                    ; preds = %if.else.i270
  %add.i271 = add i32 %cond.i248, 112
  %call.i17.i272 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i18.i273 = getelementptr inbounds i8* %call.i17.i272, i64 8
  %40 = bitcast i8* %dw_loc_opc.i18.i273 to i32*
  store i32 %add.i271, i32* %40, align 4, !tbaa !18
  %dw_loc_oprnd1.i19.i274 = getelementptr inbounds i8* %call.i17.i272, i64 16
  %val_class.i20.i275 = bitcast i8* %dw_loc_oprnd1.i19.i274 to i32*
  store i32 6, i32* %val_class.i20.i275, align 4, !tbaa !23
  %v.i21.i276 = getelementptr inbounds i8* %call.i17.i272, i64 24
  %val_unsigned.i22.i277 = bitcast i8* %v.i21.i276 to i64*
  store i64 %37, i64* %val_unsigned.i22.i277, align 8, !tbaa !8
  %dw_loc_oprnd2.i23.i278 = getelementptr inbounds i8* %call.i17.i272, i64 40
  %val_class2.i24.i279 = bitcast i8* %dw_loc_oprnd2.i23.i278 to i32*
  store i32 6, i32* %val_class2.i24.i279, align 4, !tbaa !24
  %v4.i25.i280 = getelementptr inbounds i8* %call.i17.i272, i64 48
  %val_unsigned5.i26.i281 = bitcast i8* %v4.i25.i280 to i64*
  store i64 0, i64* %val_unsigned5.i26.i281, align 8, !tbaa !8
  br label %based_loc_descr.exit297

if.else10.i294:                                   ; preds = %if.else.i270
  %conv.i283 = zext i32 %cond.i248 to i64
  %call.i27.i284 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i28.i285 = getelementptr inbounds i8* %call.i27.i284, i64 8
  %41 = bitcast i8* %dw_loc_opc.i28.i285 to i32*
  store i32 146, i32* %41, align 4, !tbaa !18
  %dw_loc_oprnd1.i29.i286 = getelementptr inbounds i8* %call.i27.i284, i64 16
  %val_class.i30.i287 = bitcast i8* %dw_loc_oprnd1.i29.i286 to i32*
  store i32 6, i32* %val_class.i30.i287, align 4, !tbaa !23
  %v.i31.i288 = getelementptr inbounds i8* %call.i27.i284, i64 24
  %val_unsigned.i32.i289 = bitcast i8* %v.i31.i288 to i64*
  store i64 %conv.i283, i64* %val_unsigned.i32.i289, align 8, !tbaa !8
  %dw_loc_oprnd2.i33.i290 = getelementptr inbounds i8* %call.i27.i284, i64 40
  %val_class2.i34.i291 = bitcast i8* %dw_loc_oprnd2.i33.i290 to i32*
  store i32 6, i32* %val_class2.i34.i291, align 4, !tbaa !24
  %v4.i35.i292 = getelementptr inbounds i8* %call.i27.i284, i64 48
  %val_unsigned5.i36.i293 = bitcast i8* %v4.i35.i292 to i64*
  store i64 %37, i64* %val_unsigned5.i36.i293, align 8, !tbaa !8
  br label %based_loc_descr.exit297

based_loc_descr.exit297:                          ; preds = %if.then.i268, %if.then8.i282, %if.else10.i294
  %loc_result.0.in.i295 = phi i8* [ %call.i.i258, %if.then.i268 ], [ %call.i17.i272, %if.then8.i282 ], [ %call.i27.i284, %if.else10.i294 ]
  %loc_result.0.i296 = bitcast i8* %loc_result.0.in.i295 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %loc_result.0.i296, %struct.dw_loc_descr_struct** %mem_loc_result, align 8
  br label %sw.epilog

if.else84:                                        ; preds = %plus, %land.rhs.i, %land.lhs.true.i, %is_based_loc.exit
  %call88 = call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %29, i32 %mode)
  store %struct.dw_loc_descr_struct* %call88, %struct.dw_loc_descr_struct** %mem_loc_result, align 8
  %cmp89 = icmp eq %struct.dw_loc_descr_struct* %call88, null
  br i1 %cmp89, label %sw.epilog, label %if.end92

if.end92:                                         ; preds = %if.else84
  %arrayidx94 = getelementptr inbounds %struct.rtx_def* %rtl.addr.3, i64 0, i32 1, i64 1
  %rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx95, align 8, !tbaa !6
  %43 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load96 = load i32* %43, align 8
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 54
  br i1 %cmp98, label %land.lhs.true100, label %if.else117

land.lhs.true100:                                 ; preds = %if.end92
  %rtwint106 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 1, i64 0, i32 0
  %44 = load i64* %rtwint106, align 8, !tbaa !29
  %cmp107 = icmp sgt i64 %44, -1
  br i1 %cmp107, label %if.then109, label %if.else117

if.then109:                                       ; preds = %land.lhs.true100
  %call.i303 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i304 = getelementptr inbounds i8* %call.i303, i64 8
  %45 = bitcast i8* %dw_loc_opc.i304 to i32*
  store i32 35, i32* %45, align 4, !tbaa !18
  %dw_loc_oprnd1.i305 = getelementptr inbounds i8* %call.i303, i64 16
  %val_class.i306 = bitcast i8* %dw_loc_oprnd1.i305 to i32*
  store i32 6, i32* %val_class.i306, align 4, !tbaa !23
  %v.i307 = getelementptr inbounds i8* %call.i303, i64 24
  %val_unsigned.i308 = bitcast i8* %v.i307 to i64*
  store i64 %44, i64* %val_unsigned.i308, align 8, !tbaa !8
  %dw_loc_oprnd2.i309 = getelementptr inbounds i8* %call.i303, i64 40
  %val_class2.i310 = bitcast i8* %dw_loc_oprnd2.i309 to i32*
  store i32 6, i32* %val_class2.i310, align 4, !tbaa !24
  %v4.i311 = getelementptr inbounds i8* %call.i303, i64 48
  %val_unsigned5.i312 = bitcast i8* %v4.i311 to i64*
  store i64 0, i64* %val_unsigned5.i312, align 8, !tbaa !8
  br label %for.cond.i316

for.cond.i316:                                    ; preds = %for.cond.i316.for.cond.i316_crit_edge, %if.then109
  %46 = phi %struct.dw_loc_descr_struct* [ %call88, %if.then109 ], [ %.pre357, %for.cond.i316.for.cond.i316_crit_edge ]
  %d.0.i313 = phi %struct.dw_loc_descr_struct** [ %mem_loc_result, %if.then109 ], [ %dw_loc_next.i315, %for.cond.i316.for.cond.i316_crit_edge ]
  %cmp.i314 = icmp eq %struct.dw_loc_descr_struct* %46, null
  %dw_loc_next.i315 = getelementptr inbounds %struct.dw_loc_descr_struct* %46, i64 0, i32 0
  br i1 %cmp.i314, label %add_loc_descr.exit317, label %for.cond.i316.for.cond.i316_crit_edge

for.cond.i316.for.cond.i316_crit_edge:            ; preds = %for.cond.i316
  %.pre357 = load %struct.dw_loc_descr_struct** %dw_loc_next.i315, align 8, !tbaa !6
  br label %for.cond.i316

add_loc_descr.exit317:                            ; preds = %for.cond.i316
  %47 = bitcast i8* %call.i303 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %47, %struct.dw_loc_descr_struct** %d.0.i313, align 8, !tbaa !6
  br label %sw.epilog

if.else117:                                       ; preds = %land.lhs.true100, %if.end92
  %call121 = call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %42, i32 %mode)
  br label %for.cond.i331

for.cond.i331:                                    ; preds = %for.cond.i331.for.cond.i331_crit_edge, %if.else117
  %48 = phi %struct.dw_loc_descr_struct* [ %call88, %if.else117 ], [ %.pre358, %for.cond.i331.for.cond.i331_crit_edge ]
  %d.0.i328 = phi %struct.dw_loc_descr_struct** [ %mem_loc_result, %if.else117 ], [ %dw_loc_next.i330, %for.cond.i331.for.cond.i331_crit_edge ]
  %cmp.i329 = icmp eq %struct.dw_loc_descr_struct* %48, null
  %dw_loc_next.i330 = getelementptr inbounds %struct.dw_loc_descr_struct* %48, i64 0, i32 0
  br i1 %cmp.i329, label %add_loc_descr.exit332, label %for.cond.i331.for.cond.i331_crit_edge

for.cond.i331.for.cond.i331_crit_edge:            ; preds = %for.cond.i331
  %.pre358 = load %struct.dw_loc_descr_struct** %dw_loc_next.i330, align 8, !tbaa !6
  br label %for.cond.i331

add_loc_descr.exit332:                            ; preds = %for.cond.i331
  store %struct.dw_loc_descr_struct* %call121, %struct.dw_loc_descr_struct** %d.0.i328, align 8, !tbaa !6
  %call.i333 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i334 = getelementptr inbounds i8* %call.i333, i64 8
  %49 = bitcast i8* %dw_loc_opc.i334 to i32*
  store i32 34, i32* %49, align 4, !tbaa !18
  %dw_loc_oprnd1.i335 = getelementptr inbounds i8* %call.i333, i64 16
  %val_class.i336 = bitcast i8* %dw_loc_oprnd1.i335 to i32*
  store i32 6, i32* %val_class.i336, align 4, !tbaa !23
  %v.i337 = getelementptr inbounds i8* %call.i333, i64 24
  %val_unsigned.i338 = bitcast i8* %v.i337 to i64*
  store i64 0, i64* %val_unsigned.i338, align 8, !tbaa !8
  %dw_loc_oprnd2.i339 = getelementptr inbounds i8* %call.i333, i64 40
  %val_class2.i340 = bitcast i8* %dw_loc_oprnd2.i339 to i32*
  store i32 6, i32* %val_class2.i340, align 4, !tbaa !24
  %v4.i341 = getelementptr inbounds i8* %call.i333, i64 48
  %val_unsigned5.i342 = bitcast i8* %v4.i341 to i64*
  store i64 0, i64* %val_unsigned5.i342, align 8, !tbaa !8
  br label %for.cond.i346

for.cond.i346:                                    ; preds = %for.cond.i346, %add_loc_descr.exit332
  %d.0.i343 = phi %struct.dw_loc_descr_struct** [ %mem_loc_result, %add_loc_descr.exit332 ], [ %dw_loc_next.i345, %for.cond.i346 ]
  %50 = load %struct.dw_loc_descr_struct** %d.0.i343, align 8, !tbaa !6
  %cmp.i344 = icmp eq %struct.dw_loc_descr_struct* %50, null
  %dw_loc_next.i345 = getelementptr inbounds %struct.dw_loc_descr_struct* %50, i64 0, i32 0
  br i1 %cmp.i344, label %add_loc_descr.exit347, label %for.cond.i346

add_loc_descr.exit347:                            ; preds = %for.cond.i346
  %51 = bitcast i8* %call.i333 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %51, %struct.dw_loc_descr_struct** %d.0.i343, align 8, !tbaa !6
  br label %sw.epilog

sw.bb125:                                         ; preds = %entry
  %fld127 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1
  %rtx129 = bitcast [1 x %union.rtunion_def]* %fld127 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx129, align 8, !tbaa !6
  %call130 = call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %52, i32 %mode)
  %arrayidx133 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 1
  %rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx134, align 8, !tbaa !6
  %call135 = call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %53, i32 %mode)
  %cmp136 = icmp eq %struct.dw_loc_descr_struct* %call130, null
  %cmp138 = icmp eq %struct.dw_loc_descr_struct* %call135, null
  %or.cond = or i1 %cmp136, %cmp138
  br i1 %or.cond, label %sw.epilog, label %if.end141

if.end141:                                        ; preds = %sw.bb125
  store %struct.dw_loc_descr_struct* %call130, %struct.dw_loc_descr_struct** %mem_loc_result, align 8
  br label %for.cond.i351

for.cond.i351:                                    ; preds = %for.cond.i351.for.cond.i351_crit_edge, %if.end141
  %54 = phi %struct.dw_loc_descr_struct* [ %call130, %if.end141 ], [ %.pre359, %for.cond.i351.for.cond.i351_crit_edge ]
  %d.0.i348 = phi %struct.dw_loc_descr_struct** [ %mem_loc_result, %if.end141 ], [ %dw_loc_next.i350, %for.cond.i351.for.cond.i351_crit_edge ]
  %cmp.i349 = icmp eq %struct.dw_loc_descr_struct* %54, null
  %dw_loc_next.i350 = getelementptr inbounds %struct.dw_loc_descr_struct* %54, i64 0, i32 0
  br i1 %cmp.i349, label %add_loc_descr.exit352, label %for.cond.i351.for.cond.i351_crit_edge

for.cond.i351.for.cond.i351_crit_edge:            ; preds = %for.cond.i351
  %.pre359 = load %struct.dw_loc_descr_struct** %dw_loc_next.i350, align 8, !tbaa !6
  br label %for.cond.i351

add_loc_descr.exit352:                            ; preds = %for.cond.i351
  store %struct.dw_loc_descr_struct* %call135, %struct.dw_loc_descr_struct** %d.0.i348, align 8, !tbaa !6
  %call.i318 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i319 = getelementptr inbounds i8* %call.i318, i64 8
  %55 = bitcast i8* %dw_loc_opc.i319 to i32*
  store i32 30, i32* %55, align 4, !tbaa !18
  %dw_loc_oprnd1.i320 = getelementptr inbounds i8* %call.i318, i64 16
  %val_class.i321 = bitcast i8* %dw_loc_oprnd1.i320 to i32*
  store i32 6, i32* %val_class.i321, align 4, !tbaa !23
  %v.i322 = getelementptr inbounds i8* %call.i318, i64 24
  %val_unsigned.i323 = bitcast i8* %v.i322 to i64*
  store i64 0, i64* %val_unsigned.i323, align 8, !tbaa !8
  %dw_loc_oprnd2.i324 = getelementptr inbounds i8* %call.i318, i64 40
  %val_class2.i325 = bitcast i8* %dw_loc_oprnd2.i324 to i32*
  store i32 6, i32* %val_class2.i325, align 4, !tbaa !24
  %v4.i326 = getelementptr inbounds i8* %call.i318, i64 48
  %val_unsigned5.i327 = bitcast i8* %v4.i326 to i64*
  store i64 0, i64* %val_unsigned5.i327, align 8, !tbaa !8
  br label %for.cond.i301

for.cond.i301:                                    ; preds = %for.cond.i301, %add_loc_descr.exit352
  %d.0.i298 = phi %struct.dw_loc_descr_struct** [ %mem_loc_result, %add_loc_descr.exit352 ], [ %dw_loc_next.i300, %for.cond.i301 ]
  %56 = load %struct.dw_loc_descr_struct** %d.0.i298, align 8, !tbaa !6
  %cmp.i299 = icmp eq %struct.dw_loc_descr_struct* %56, null
  %dw_loc_next.i300 = getelementptr inbounds %struct.dw_loc_descr_struct* %56, i64 0, i32 0
  br i1 %cmp.i299, label %add_loc_descr.exit302, label %for.cond.i301

add_loc_descr.exit302:                            ; preds = %for.cond.i301
  %57 = bitcast i8* %call.i318 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %57, %struct.dw_loc_descr_struct** %d.0.i298, align 8, !tbaa !6
  br label %sw.epilog

sw.bb143:                                         ; preds = %entry
  %rtwint146 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0
  %58 = load i64* %rtwint146, align 8, !tbaa !29
  %cmp.i208 = icmp sgt i64 %58, -1
  br i1 %cmp.i208, label %if.then.i209, label %if.else18.i

if.then.i209:                                     ; preds = %sw.bb143
  %cmp1.i = icmp slt i64 %58, 32
  br i1 %cmp1.i, label %if.then2.i, label %if.else.i212

if.then2.i:                                       ; preds = %if.then.i209
  %add.i210 = add nsw i64 %58, 48
  %conv.i211 = trunc i64 %add.i210 to i32
  br label %int_loc_descriptor.exit

if.else.i212:                                     ; preds = %if.then.i209
  %cmp3.i = icmp slt i64 %58, 256
  br i1 %cmp3.i, label %int_loc_descriptor.exit, label %if.else6.i

if.else6.i:                                       ; preds = %if.else.i212
  %cmp7.i213 = icmp slt i64 %58, 65536
  br i1 %cmp7.i213, label %int_loc_descriptor.exit, label %if.else10.i214

if.else10.i214:                                   ; preds = %if.else6.i
  %cmp11.i = icmp slt i64 %58, 4294967296
  %..i = select i1 %cmp11.i, i32 12, i32 16
  br label %int_loc_descriptor.exit

if.else18.i:                                      ; preds = %sw.bb143
  %cmp19.i = icmp sgt i64 %58, -129
  br i1 %cmp19.i, label %int_loc_descriptor.exit, label %if.else22.i

if.else22.i:                                      ; preds = %if.else18.i
  %cmp23.i = icmp sgt i64 %58, -32769
  %.43.i = select i1 %cmp23.i, i32 11, i32 17
  br label %int_loc_descriptor.exit

int_loc_descriptor.exit:                          ; preds = %if.then2.i, %if.else.i212, %if.else6.i, %if.else10.i214, %if.else18.i, %if.else22.i
  %op.0.i = phi i32 [ %conv.i211, %if.then2.i ], [ 8, %if.else.i212 ], [ 10, %if.else6.i ], [ %..i, %if.else10.i214 ], [ 9, %if.else18.i ], [ %.43.i, %if.else22.i ]
  %call.i.i215 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %59 = bitcast i8* %call.i.i215 to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i.i216 = getelementptr inbounds i8* %call.i.i215, i64 8
  %60 = bitcast i8* %dw_loc_opc.i.i216 to i32*
  store i32 %op.0.i, i32* %60, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i217 = getelementptr inbounds i8* %call.i.i215, i64 16
  %val_class.i.i218 = bitcast i8* %dw_loc_oprnd1.i.i217 to i32*
  store i32 6, i32* %val_class.i.i218, align 4, !tbaa !23
  %v.i.i219 = getelementptr inbounds i8* %call.i.i215, i64 24
  %val_unsigned.i.i220 = bitcast i8* %v.i.i219 to i64*
  store i64 %58, i64* %val_unsigned.i.i220, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i221 = getelementptr inbounds i8* %call.i.i215, i64 40
  %val_class2.i.i222 = bitcast i8* %dw_loc_oprnd2.i.i221 to i32*
  store i32 6, i32* %val_class2.i.i222, align 4, !tbaa !24
  %v4.i.i223 = getelementptr inbounds i8* %call.i.i215, i64 48
  %val_unsigned5.i.i224 = bitcast i8* %v4.i.i223 to i64*
  store i64 0, i64* %val_unsigned5.i.i224, align 8, !tbaa !8
  store %struct.dw_loc_descr_struct* %59, %struct.dw_loc_descr_struct** %mem_loc_result, align 8
  br label %sw.epilog

sw.bb148:                                         ; preds = %entry
  %arrayidx150 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx151 = bitcast %union.rtunion_def* %arrayidx150 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx151, align 8, !tbaa !6
  %62 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 0
  %bf.load152 = load i32* %62, align 8
  %bf.clear153 = and i32 %bf.load152, 65535
  %cmp154 = icmp eq i32 %bf.clear153, 66
  br i1 %cmp154, label %if.then156, label %return

if.then156:                                       ; preds = %sw.bb148
  %arrayidx161 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 1, i64 0
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %63 = load %struct.rtx_def** %rtx162, align 8, !tbaa !6
  %call163 = call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %63, i32 %mode)
  br label %return

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 7904, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.mem_loc_descriptor, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb6, %sw.bb125, %based_loc_descr.exit297, %add_loc_descr.exit347, %add_loc_descr.exit317, %if.else84, %add_loc_descr.exit, %sw.bb1, %based_loc_descr.exit, %int_loc_descriptor.exit, %add_loc_descr.exit302, %if.end48
  %mem_loc_result.0.353 = load %struct.dw_loc_descr_struct** %mem_loc_result, align 8
  br label %return

return:                                           ; preds = %sw.bb148, %if.end37, %sw.epilog, %if.then156
  %retval.0 = phi %struct.dw_loc_descr_struct* [ %call163, %if.then156 ], [ %mem_loc_result.0.353, %sw.epilog ], [ null, %if.end37 ], [ null, %sw.bb148 ]
  ret %struct.dw_loc_descr_struct* %retval.0
}

declare %union.tree_node* @get_inner_reference(%union.tree_node*, i64*, i64*, %union.tree_node**, i32*, i32*, i32*) #2

declare %struct.rtx_def* @i386_simplify_dwarf_addr(%struct.rtx_def*) #2

declare %struct.rtx_def* @get_pool_constant_mark(%struct.rtx_def*, i8*) #2

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare void @make_decl_rtl(%union.tree_node*, i8*) #2

declare %struct.rtx_def* @eliminate_regs(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare i32 @compare_tree_int(%union.tree_node*, i64) #2

declare %struct.rtx_def* @gen_rtx_fmt_s(i32, i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.dw_loc_descr_struct* @concat_loc_descriptor(%struct.rtx_def* nocapture readonly %x0, %struct.rtx_def* nocapture readonly %x1) #1 {
entry:
  %cc_loc_result = alloca %struct.dw_loc_descr_struct*, align 8
  store %struct.dw_loc_descr_struct* null, %struct.dw_loc_descr_struct** %cc_loc_result, align 8
  %0 = getelementptr inbounds %struct.rtx_def* %x0, i64 0, i32 0
  %bf.load.i38 = load i32* %0, align 8
  %bf.clear.i39 = and i32 %bf.load.i38, 65535
  switch i32 %bf.clear.i39, label %sw.default.i58 [
    i32 63, label %sw.bb.i42
    i32 61, label %sw.bb1.i45
    i32 66, label %sw.bb2.i51
    i32 65, label %sw.bb9.i57
  ]

sw.bb.i42:                                        ; preds = %entry
  %arrayidx.i40 = getelementptr inbounds %struct.rtx_def* %x0, i64 0, i32 1, i64 0
  %rtx.i41 = bitcast %union.rtunion_def* %arrayidx.i40 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx.i41, align 8, !tbaa !6
  br label %sw.bb1.i45

sw.bb1.i45:                                       ; preds = %sw.bb.i42, %entry
  %rtl.addr.0.i43 = phi %struct.rtx_def* [ %x0, %entry ], [ %1, %sw.bb.i42 ]
  %arrayidx.i63 = getelementptr inbounds %struct.rtx_def* %rtl.addr.0.i43, i64 0, i32 1, i64 0
  %rtuint.i64 = bitcast %union.rtunion_def* %arrayidx.i63 to i32*
  %2 = load i32* %rtuint.i64, align 4, !tbaa !4
  %cmp.i65 = icmp ugt i32 %2, 52
  br i1 %cmp.i65, label %loc_descriptor.exit60, label %reg_number.exit.i73

reg_number.exit.i73:                              ; preds = %sw.bb1.i45
  %3 = load i32* @target_flags, align 4, !tbaa !4
  %and.i.i66 = and i32 %3, 33554432
  %tobool.i.i67 = icmp eq i32 %and.i.i66, 0
  %idxprom.i.i68 = zext i32 %2 to i64
  %svr4_dbx_register_map.dbx64_register_map.i.i69 = select i1 %tobool.i.i67, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in.i.i70 = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i.i69, i64 0, i64 %idxprom.i.i68
  %cond.i.i71 = load i32* %cond.in.i.i70, align 4
  %cmp1.i72 = icmp ult i32 %cond.i.i71, 32
  br i1 %cmp1.i72, label %if.then2.i85, label %if.else.i97

if.then2.i85:                                     ; preds = %reg_number.exit.i73
  %add.i74 = add i32 %cond.i.i71, 80
  %call.i.i75 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %4 = bitcast i8* %call.i.i75 to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i.i76 = getelementptr inbounds i8* %call.i.i75, i64 8
  %5 = bitcast i8* %dw_loc_opc.i.i76 to i32*
  store i32 %add.i74, i32* %5, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i77 = getelementptr inbounds i8* %call.i.i75, i64 16
  %val_class.i.i78 = bitcast i8* %dw_loc_oprnd1.i.i77 to i32*
  store i32 6, i32* %val_class.i.i78, align 4, !tbaa !23
  %v.i.i79 = getelementptr inbounds i8* %call.i.i75, i64 24
  %val_unsigned.i.i80 = bitcast i8* %v.i.i79 to i64*
  store i64 0, i64* %val_unsigned.i.i80, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i81 = getelementptr inbounds i8* %call.i.i75, i64 40
  %val_class2.i.i82 = bitcast i8* %dw_loc_oprnd2.i.i81 to i32*
  store i32 6, i32* %val_class2.i.i82, align 4, !tbaa !24
  %v4.i.i83 = getelementptr inbounds i8* %call.i.i75, i64 48
  %val_unsigned5.i.i84 = bitcast i8* %v4.i.i83 to i64*
  store i64 0, i64* %val_unsigned5.i.i84, align 8, !tbaa !8
  br label %loc_descriptor.exit60

if.else.i97:                                      ; preds = %reg_number.exit.i73
  %conv.i86 = zext i32 %cond.i.i71 to i64
  %call.i8.i87 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %6 = bitcast i8* %call.i8.i87 to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i9.i88 = getelementptr inbounds i8* %call.i8.i87, i64 8
  %7 = bitcast i8* %dw_loc_opc.i9.i88 to i32*
  store i32 144, i32* %7, align 4, !tbaa !18
  %dw_loc_oprnd1.i10.i89 = getelementptr inbounds i8* %call.i8.i87, i64 16
  %val_class.i11.i90 = bitcast i8* %dw_loc_oprnd1.i10.i89 to i32*
  store i32 6, i32* %val_class.i11.i90, align 4, !tbaa !23
  %v.i12.i91 = getelementptr inbounds i8* %call.i8.i87, i64 24
  %val_unsigned.i13.i92 = bitcast i8* %v.i12.i91 to i64*
  store i64 %conv.i86, i64* %val_unsigned.i13.i92, align 8, !tbaa !8
  %dw_loc_oprnd2.i14.i93 = getelementptr inbounds i8* %call.i8.i87, i64 40
  %val_class2.i15.i94 = bitcast i8* %dw_loc_oprnd2.i14.i93 to i32*
  store i32 6, i32* %val_class2.i15.i94, align 4, !tbaa !24
  %v4.i16.i95 = getelementptr inbounds i8* %call.i8.i87, i64 48
  %val_unsigned5.i17.i96 = bitcast i8* %v4.i16.i95 to i64*
  store i64 0, i64* %val_unsigned5.i17.i96, align 8, !tbaa !8
  br label %loc_descriptor.exit60

sw.bb2.i51:                                       ; preds = %entry
  %arrayidx4.i46 = getelementptr inbounds %struct.rtx_def* %x0, i64 0, i32 1, i64 0
  %rtx5.i47 = bitcast %union.rtunion_def* %arrayidx4.i46 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx5.i47, align 8, !tbaa !6
  %bf.lshr.i48 = lshr i32 %bf.load.i38, 16
  %bf.clear7.i49 = and i32 %bf.lshr.i48, 255
  %call8.i50 = tail call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %8, i32 %bf.clear7.i49) #5
  br label %loc_descriptor.exit60

sw.bb9.i57:                                       ; preds = %entry
  %fld10.i52 = getelementptr inbounds %struct.rtx_def* %x0, i64 0, i32 1
  %rtx12.i53 = bitcast [1 x %union.rtunion_def]* %fld10.i52 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx12.i53, align 8, !tbaa !6
  %arrayidx14.i54 = getelementptr inbounds %struct.rtx_def* %x0, i64 0, i32 1, i64 1
  %rtx15.i55 = bitcast %union.rtunion_def* %arrayidx14.i54 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx15.i55, align 8, !tbaa !6
  %call16.i56 = tail call fastcc %struct.dw_loc_descr_struct* @concat_loc_descriptor(%struct.rtx_def* %9, %struct.rtx_def* %10) #5
  br label %loc_descriptor.exit60

sw.default.i58:                                   ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 7976, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.loc_descriptor, i64 0, i64 0)) #7
  unreachable

loc_descriptor.exit60:                            ; preds = %if.else.i97, %if.then2.i85, %sw.bb1.i45, %sw.bb2.i51, %sw.bb9.i57
  %loc_result.0.i59 = phi %struct.dw_loc_descr_struct* [ %call16.i56, %sw.bb9.i57 ], [ %call8.i50, %sw.bb2.i51 ], [ null, %sw.bb1.i45 ], [ %4, %if.then2.i85 ], [ %6, %if.else.i97 ]
  %11 = getelementptr inbounds %struct.rtx_def* %x1, i64 0, i32 0
  %bf.load.i = load i32* %11, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %sw.default.i [
    i32 63, label %sw.bb.i
    i32 61, label %sw.bb1.i
    i32 66, label %sw.bb2.i
    i32 65, label %sw.bb9.i
  ]

sw.bb.i:                                          ; preds = %loc_descriptor.exit60
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %x1, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  br label %sw.bb1.i

sw.bb1.i:                                         ; preds = %sw.bb.i, %loc_descriptor.exit60
  %rtl.addr.0.i = phi %struct.rtx_def* [ %x1, %loc_descriptor.exit60 ], [ %12, %sw.bb.i ]
  %arrayidx.i61 = getelementptr inbounds %struct.rtx_def* %rtl.addr.0.i, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i61 to i32*
  %13 = load i32* %rtuint.i, align 4, !tbaa !4
  %cmp.i62 = icmp ugt i32 %13, 52
  br i1 %cmp.i62, label %return, label %reg_number.exit.i

reg_number.exit.i:                                ; preds = %sw.bb1.i
  %14 = load i32* @target_flags, align 4, !tbaa !4
  %and.i.i = and i32 %14, 33554432
  %tobool.i.i = icmp eq i32 %and.i.i, 0
  %idxprom.i.i = zext i32 %13 to i64
  %svr4_dbx_register_map.dbx64_register_map.i.i = select i1 %tobool.i.i, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in.i.i = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i.i, i64 0, i64 %idxprom.i.i
  %cond.i.i = load i32* %cond.in.i.i, align 4
  %cmp1.i = icmp ult i32 %cond.i.i, 32
  br i1 %cmp1.i, label %if.then2.i, label %if.else.i

if.then2.i:                                       ; preds = %reg_number.exit.i
  %add.i = add i32 %cond.i.i, 80
  %call.i.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %15 = bitcast i8* %call.i.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %16 = bitcast i8* %dw_loc_opc.i.i to i32*
  store i32 %add.i, i32* %16, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_loc_oprnd1.i.i to i32*
  store i32 6, i32* %val_class.i.i, align 4, !tbaa !23
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i.i to i64*
  store i64 0, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %val_class2.i.i = bitcast i8* %dw_loc_oprnd2.i.i to i32*
  store i32 6, i32* %val_class2.i.i, align 4, !tbaa !24
  %v4.i.i = getelementptr inbounds i8* %call.i.i, i64 48
  %val_unsigned5.i.i = bitcast i8* %v4.i.i to i64*
  store i64 0, i64* %val_unsigned5.i.i, align 8, !tbaa !8
  br label %loc_descriptor.exit

if.else.i:                                        ; preds = %reg_number.exit.i
  %conv.i = zext i32 %cond.i.i to i64
  %call.i8.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %17 = bitcast i8* %call.i8.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i9.i = getelementptr inbounds i8* %call.i8.i, i64 8
  %18 = bitcast i8* %dw_loc_opc.i9.i to i32*
  store i32 144, i32* %18, align 4, !tbaa !18
  %dw_loc_oprnd1.i10.i = getelementptr inbounds i8* %call.i8.i, i64 16
  %val_class.i11.i = bitcast i8* %dw_loc_oprnd1.i10.i to i32*
  store i32 6, i32* %val_class.i11.i, align 4, !tbaa !23
  %v.i12.i = getelementptr inbounds i8* %call.i8.i, i64 24
  %val_unsigned.i13.i = bitcast i8* %v.i12.i to i64*
  store i64 %conv.i, i64* %val_unsigned.i13.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i14.i = getelementptr inbounds i8* %call.i8.i, i64 40
  %val_class2.i15.i = bitcast i8* %dw_loc_oprnd2.i14.i to i32*
  store i32 6, i32* %val_class2.i15.i, align 4, !tbaa !24
  %v4.i16.i = getelementptr inbounds i8* %call.i8.i, i64 48
  %val_unsigned5.i17.i = bitcast i8* %v4.i16.i to i64*
  store i64 0, i64* %val_unsigned5.i17.i, align 8, !tbaa !8
  br label %loc_descriptor.exit

sw.bb2.i:                                         ; preds = %loc_descriptor.exit60
  %arrayidx4.i = getelementptr inbounds %struct.rtx_def* %x1, i64 0, i32 1, i64 0
  %rtx5.i = bitcast %union.rtunion_def* %arrayidx4.i to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx5.i, align 8, !tbaa !6
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear7.i = and i32 %bf.lshr.i, 255
  %call8.i = tail call fastcc %struct.dw_loc_descr_struct* @mem_loc_descriptor(%struct.rtx_def* %19, i32 %bf.clear7.i) #5
  br label %loc_descriptor.exit

sw.bb9.i:                                         ; preds = %loc_descriptor.exit60
  %fld10.i = getelementptr inbounds %struct.rtx_def* %x1, i64 0, i32 1
  %rtx12.i = bitcast [1 x %union.rtunion_def]* %fld10.i to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx12.i, align 8, !tbaa !6
  %arrayidx14.i = getelementptr inbounds %struct.rtx_def* %x1, i64 0, i32 1, i64 1
  %rtx15.i = bitcast %union.rtunion_def* %arrayidx14.i to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx15.i, align 8, !tbaa !6
  %call16.i = tail call fastcc %struct.dw_loc_descr_struct* @concat_loc_descriptor(%struct.rtx_def* %20, %struct.rtx_def* %21) #5
  br label %loc_descriptor.exit

sw.default.i:                                     ; preds = %loc_descriptor.exit60
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 7976, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.loc_descriptor, i64 0, i64 0)) #7
  unreachable

loc_descriptor.exit:                              ; preds = %if.else.i, %if.then2.i, %sw.bb2.i, %sw.bb9.i
  %loc_result.0.i = phi %struct.dw_loc_descr_struct* [ %call16.i, %sw.bb9.i ], [ %call8.i, %sw.bb2.i ], [ %15, %if.then2.i ], [ %17, %if.else.i ]
  %cmp = icmp eq %struct.dw_loc_descr_struct* %loc_result.0.i59, null
  %cmp2 = icmp eq %struct.dw_loc_descr_struct* %loc_result.0.i, null
  %or.cond = or i1 %cmp, %cmp2
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %loc_descriptor.exit
  store %struct.dw_loc_descr_struct* %loc_result.0.i59, %struct.dw_loc_descr_struct** %cc_loc_result, align 8
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom15 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom15
  %22 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %22 to i64
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i = getelementptr inbounds i8* %call.i, i64 8
  %23 = bitcast i8* %dw_loc_opc.i to i32*
  store i32 147, i32* %23, align 4, !tbaa !18
  %dw_loc_oprnd1.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_loc_oprnd1.i to i32*
  store i32 6, i32* %val_class.i, align 4, !tbaa !23
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %val_unsigned.i = bitcast i8* %v.i to i64*
  store i64 %conv, i64* %val_unsigned.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i = getelementptr inbounds i8* %call.i, i64 40
  %val_class2.i = bitcast i8* %dw_loc_oprnd2.i to i32*
  store i32 6, i32* %val_class2.i, align 4, !tbaa !24
  %v4.i = getelementptr inbounds i8* %call.i, i64 48
  %val_unsigned5.i = bitcast i8* %v4.i to i64*
  store i64 0, i64* %val_unsigned5.i, align 8, !tbaa !8
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i.for.cond.i_crit_edge, %if.end
  %24 = phi %struct.dw_loc_descr_struct* [ %loc_result.0.i59, %if.end ], [ %.pre, %for.cond.i.for.cond.i_crit_edge ]
  %d.0.i = phi %struct.dw_loc_descr_struct** [ %cc_loc_result, %if.end ], [ %dw_loc_next.i, %for.cond.i.for.cond.i_crit_edge ]
  %cmp.i = icmp eq %struct.dw_loc_descr_struct* %24, null
  %dw_loc_next.i = getelementptr inbounds %struct.dw_loc_descr_struct* %24, i64 0, i32 0
  br i1 %cmp.i, label %add_loc_descr.exit, label %for.cond.i.for.cond.i_crit_edge

for.cond.i.for.cond.i_crit_edge:                  ; preds = %for.cond.i
  %.pre = load %struct.dw_loc_descr_struct** %dw_loc_next.i, align 8, !tbaa !6
  br label %for.cond.i

add_loc_descr.exit:                               ; preds = %for.cond.i
  %25 = bitcast i8* %call.i to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %25, %struct.dw_loc_descr_struct** %d.0.i, align 8, !tbaa !6
  br label %for.cond.i20

for.cond.i20:                                     ; preds = %for.cond.i20, %add_loc_descr.exit
  %d.0.i17 = phi %struct.dw_loc_descr_struct** [ %cc_loc_result, %add_loc_descr.exit ], [ %dw_loc_next.i19, %for.cond.i20 ]
  %26 = load %struct.dw_loc_descr_struct** %d.0.i17, align 8, !tbaa !6
  %cmp.i18 = icmp eq %struct.dw_loc_descr_struct* %26, null
  %dw_loc_next.i19 = getelementptr inbounds %struct.dw_loc_descr_struct* %26, i64 0, i32 0
  br i1 %cmp.i18, label %add_loc_descr.exit21, label %for.cond.i20

add_loc_descr.exit21:                             ; preds = %for.cond.i20
  store %struct.dw_loc_descr_struct* %loc_result.0.i, %struct.dw_loc_descr_struct** %d.0.i17, align 8, !tbaa !6
  %bf.load4 = load i32* %11, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %idxprom716 = zext i32 %bf.clear6 to i64
  %arrayidx8 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom716
  %27 = load i8* %arrayidx8, align 1, !tbaa !1
  %conv9 = zext i8 %27 to i64
  %call.i22 = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %dw_loc_opc.i23 = getelementptr inbounds i8* %call.i22, i64 8
  %28 = bitcast i8* %dw_loc_opc.i23 to i32*
  store i32 147, i32* %28, align 4, !tbaa !18
  %dw_loc_oprnd1.i24 = getelementptr inbounds i8* %call.i22, i64 16
  %val_class.i25 = bitcast i8* %dw_loc_oprnd1.i24 to i32*
  store i32 6, i32* %val_class.i25, align 4, !tbaa !23
  %v.i26 = getelementptr inbounds i8* %call.i22, i64 24
  %val_unsigned.i27 = bitcast i8* %v.i26 to i64*
  store i64 %conv9, i64* %val_unsigned.i27, align 8, !tbaa !8
  %dw_loc_oprnd2.i28 = getelementptr inbounds i8* %call.i22, i64 40
  %val_class2.i29 = bitcast i8* %dw_loc_oprnd2.i28 to i32*
  store i32 6, i32* %val_class2.i29, align 4, !tbaa !24
  %v4.i30 = getelementptr inbounds i8* %call.i22, i64 48
  %val_unsigned5.i31 = bitcast i8* %v4.i30 to i64*
  store i64 0, i64* %val_unsigned5.i31, align 8, !tbaa !8
  br label %for.cond.i35

for.cond.i35:                                     ; preds = %for.cond.i35, %add_loc_descr.exit21
  %d.0.i32 = phi %struct.dw_loc_descr_struct** [ %cc_loc_result, %add_loc_descr.exit21 ], [ %dw_loc_next.i34, %for.cond.i35 ]
  %29 = load %struct.dw_loc_descr_struct** %d.0.i32, align 8, !tbaa !6
  %cmp.i33 = icmp eq %struct.dw_loc_descr_struct* %29, null
  %dw_loc_next.i34 = getelementptr inbounds %struct.dw_loc_descr_struct* %29, i64 0, i32 0
  br i1 %cmp.i33, label %add_loc_descr.exit36, label %for.cond.i35

add_loc_descr.exit36:                             ; preds = %for.cond.i35
  %30 = bitcast i8* %call.i22 to %struct.dw_loc_descr_struct*
  store %struct.dw_loc_descr_struct* %30, %struct.dw_loc_descr_struct** %d.0.i32, align 8, !tbaa !6
  %cc_loc_result.0. = load %struct.dw_loc_descr_struct** %cc_loc_result, align 8
  br label %return

return:                                           ; preds = %sw.bb1.i, %loc_descriptor.exit, %add_loc_descr.exit36
  %retval.0 = phi %struct.dw_loc_descr_struct* [ %cc_loc_result.0., %add_loc_descr.exit36 ], [ null, %loc_descriptor.exit ], [ null, %sw.bb1.i ]
  ret %struct.dw_loc_descr_struct* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_formal_types_die(%union.tree_node* %function_or_method_type, %struct.die_struct* %context_die) #1 {
entry:
  %code = getelementptr inbounds %union.tree_node* %function_or_method_type, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 30
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arguments = getelementptr inbounds %union.tree_node* %function_or_method_type, i64 0, i32 0, i32 10
  %0 = load %union.tree_node** %arguments, align 8, !tbaa !136
  %type = getelementptr inbounds %union.tree_node* %function_or_method_type, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type, align 8, !tbaa !87
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %arg.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ]
  %function_or_method_type.addr.0 = phi %union.tree_node* [ %1, %if.then ], [ %function_or_method_type, %entry ]
  %values = getelementptr inbounds %union.tree_node* %function_or_method_type.addr.0, i64 0, i32 0, i32 1
  %2 = load i8** %values, align 8
  %3 = bitcast i8* %2 to %union.tree_node*
  %tobool72 = icmp eq i8* %2, null
  br i1 %tobool72, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %code7 = getelementptr inbounds %union.tree_node* %function_or_method_type.addr.0, i64 0, i32 0, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %arg.174 = phi %union.tree_node* [ %arg.0, %for.body.lr.ph ], [ %arg.1.be, %for.cond.backedge ]
  %link.073 = phi %union.tree_node* [ %3, %for.body.lr.ph ], [ %link.0.be, %for.cond.backedge ]
  %value = getelementptr inbounds %union.tree_node* %link.073, i64 0, i32 0, i32 2
  %4 = bitcast i32* %value to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !93
  %6 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %cmp3 = icmp eq %union.tree_node* %5, %6
  br i1 %cmp3, label %for.end, label %if.end5

if.end5:                                          ; preds = %for.body
  %call = tail call fastcc %struct.die_struct* @gen_formal_parameter_die(%union.tree_node* %5, %struct.die_struct* %context_die)
  %bf.load8 = load i32* %code7, align 8
  %bf.clear9 = and i32 %bf.load8, 255
  %cmp10 = icmp eq i32 %bf.clear9, 16
  %cmp11 = icmp eq %union.tree_node* %link.073, %3
  %or.cond = and i1 %cmp10, %cmp11
  br i1 %or.cond, label %if.then18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end5
  %tobool12 = icmp eq %union.tree_node* %arg.174, null
  br i1 %tobool12, label %if.end19.thread, label %land.lhs.true13

if.end19.thread:                                  ; preds = %lor.lhs.false
  %chain65 = getelementptr inbounds %union.tree_node* %link.073, i64 0, i32 0, i32 0, i32 0
  %7 = load %union.tree_node** %chain65, align 8, !tbaa !88
  br label %for.cond.backedge

land.lhs.true13:                                  ; preds = %lor.lhs.false
  %artificial_flag = getelementptr inbounds %union.tree_node* %arg.174, i64 0, i32 0, i32 5
  %8 = bitcast i48* %artificial_flag to i64*
  %bf.load15 = load i64* %8, align 8
  %bf.cast = and i64 %bf.load15, 4194304
  %tobool17 = icmp eq i64 %bf.cast, 0
  br i1 %tobool17, label %if.end19.thread67, label %if.then18

if.end19.thread67:                                ; preds = %land.lhs.true13
  %chain68 = getelementptr inbounds %union.tree_node* %link.073, i64 0, i32 0, i32 0, i32 0
  %9 = load %union.tree_node** %chain68, align 8, !tbaa !88
  br label %if.then22

if.then18:                                        ; preds = %if.end5, %land.lhs.true13
  %call.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i, i64 8
  %10 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %10, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i to i32*
  store i32 52, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 9, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  store i8 1, i8* %v.i, align 1, !tbaa !1
  %cmp.i.i = icmp ne %struct.die_struct* %call, null
  %cmp1.i.i = icmp ne i8* %call.i, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %if.end19

if.then.i.i:                                      ; preds = %if.then18
  %11 = bitcast i8* %call.i to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %call, i64 0, i32 2
  %12 = load %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %12, %struct.dw_attr_struct** %10, align 8, !tbaa !72
  store %struct.dw_attr_struct* %11, %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  br label %if.end19

if.end19:                                         ; preds = %if.then.i.i, %if.then18
  %chain = getelementptr inbounds %union.tree_node* %link.073, i64 0, i32 0, i32 0, i32 0
  %13 = load %union.tree_node** %chain, align 8, !tbaa !88
  %tobool21 = icmp eq %union.tree_node* %arg.174, null
  br i1 %tobool21, label %for.cond.backedge, label %if.then22

if.then22:                                        ; preds = %if.end19.thread67, %if.end19
  %14 = phi %union.tree_node* [ %9, %if.end19.thread67 ], [ %13, %if.end19 ]
  %chain24 = getelementptr inbounds %union.tree_node* %arg.174, i64 0, i32 0, i32 0, i32 0
  %15 = load %union.tree_node** %chain24, align 8, !tbaa !88
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.then22, %if.end19, %if.end19.thread
  %link.0.be = phi %union.tree_node* [ %14, %if.then22 ], [ %13, %if.end19 ], [ %7, %if.end19.thread ]
  %arg.1.be = phi %union.tree_node* [ %15, %if.then22 ], [ null, %if.end19 ], [ null, %if.end19.thread ]
  %tobool = icmp eq %union.tree_node* %link.0.be, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %for.cond.backedge, %if.end
  %formal_type.1 = phi %union.tree_node* [ null, %if.end ], [ %5, %for.cond.backedge ], [ %5, %for.body ]
  %16 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %cmp26 = icmp eq %union.tree_node* %formal_type.1, %16
  br i1 %cmp26, label %if.end28, label %if.then27

if.then27:                                        ; preds = %for.end
  %call.i.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %17 = bitcast i8* %call.i.i to %struct.die_struct*
  %die_tag.i.i = bitcast i8* %call.i.i to i32*
  store i32 24, i32* %die_tag.i.i, align 4, !tbaa !69
  %cmp.i.i63 = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i.i63, label %if.else.i.i, label %if.then.i.i64

if.then.i.i64:                                    ; preds = %if.then27
  %cmp1.i.i.i = icmp eq i8* %call.i.i, null
  br i1 %cmp1.i.i.i, label %if.end28, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i64
  %cmp2.i.i.i = icmp eq %struct.die_struct* %17, %context_die
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i:                                     ; preds = %if.then.i.i.i
  %die_parent.i.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %18 = bitcast i8* %die_parent.i.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %18, align 8, !tbaa !55
  %die_child.i.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %19 = load %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  %die_sib.i.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %20 = bitcast i8* %die_sib.i.i.i to %struct.die_struct**
  store %struct.die_struct* %19, %struct.die_struct** %20, align 8, !tbaa !63
  store %struct.die_struct* %17, %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  br label %if.end28

if.else.i.i:                                      ; preds = %if.then27
  %call1.i.i = tail call noalias i8* @xmalloc(i64 24) #5
  %21 = bitcast i8* %call1.i.i to %struct.limbo_die_struct*
  %die2.i.i = bitcast i8* %call1.i.i to %struct.die_struct**
  store %struct.die_struct* %17, %struct.die_struct** %die2.i.i, align 8, !tbaa !54
  %created_for.i.i = getelementptr inbounds i8* %call1.i.i, i64 8
  %22 = bitcast i8* %created_for.i.i to %union.tree_node**
  store %union.tree_node* %function_or_method_type.addr.0, %union.tree_node** %22, align 8, !tbaa !64
  %23 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i = getelementptr inbounds i8* %call1.i.i, i64 16
  %24 = bitcast i8* %next.i.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %23, %struct.limbo_die_struct** %24, align 8, !tbaa !52
  store %struct.limbo_die_struct* %21, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %if.end28

if.end28:                                         ; preds = %if.else.i.i, %if.end.i.i.i, %if.then.i.i64, %for.end
  %25 = load i8** %values, align 8
  %tobool3270 = icmp eq i8* %25, null
  br i1 %tobool3270, label %for.end41, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %if.end28
  %26 = bitcast i8* %25 to %union.tree_node*
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.body36
  %link.171 = phi %union.tree_node* [ %26, %land.rhs.lr.ph ], [ %29, %for.body36 ]
  %value34 = getelementptr inbounds %union.tree_node* %link.171, i64 0, i32 0, i32 2
  %27 = bitcast i32* %value34 to %union.tree_node**
  %28 = load %union.tree_node** %27, align 8, !tbaa !93
  %tobool35 = icmp eq %union.tree_node* %28, null
  br i1 %tobool35, label %for.end41, label %for.body36

for.body36:                                       ; preds = %land.rhs
  tail call fastcc void @gen_type_die(%union.tree_node* %28, %struct.die_struct* %context_die)
  %chain40 = getelementptr inbounds %union.tree_node* %link.171, i64 0, i32 0, i32 0, i32 0
  %29 = load %union.tree_node** %chain40, align 8, !tbaa !88
  %tobool32 = icmp eq %union.tree_node* %29, null
  br i1 %tobool32, label %for.end41, label %land.rhs

for.end41:                                        ; preds = %for.body36, %land.rhs, %if.end28
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.die_struct* @gen_formal_parameter_die(%union.tree_node* %node, %struct.die_struct* %context_die) #1 {
entry:
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %0 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 5, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %new_die.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %0, %context_die
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %1 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %1, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %2 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %3 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %2, %struct.die_struct** %3, align 8, !tbaa !63
  store %struct.die_struct* %0, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i:                                        ; preds = %entry
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #5
  %4 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %0, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %5 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %node, %union.tree_node** %5, align 8, !tbaa !64
  %6 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %7 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %6, %struct.limbo_die_struct** %7, align 8, !tbaa !52
  store %struct.limbo_die_struct* %4, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %code = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %idxprom45 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom45
  %8 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = sext i8 %8 to i32
  switch i32 %conv, label %sw.default [
    i32 100, label %sw.bb
    i32 116, label %sw.bb24
  ]

sw.bb:                                            ; preds = %new_die.exit
  %abstract_flag.i = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 5
  %9 = bitcast i48* %abstract_flag.i to i64*
  %bf.load.i = load i64* %9, align 8
  %bf.cast.i = and i64 %bf.load.i, 32768
  %tobool.i = icmp ne i64 %bf.cast.i, 0
  %abstract_origin4.phi.trans.insert.i = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 13
  %.pre.i = load %union.tree_node** %abstract_origin4.phi.trans.insert.i, align 8, !tbaa !89
  %cmp.i46 = icmp eq %union.tree_node* %.pre.i, %node
  %or.cond.i = and i1 %tobool.i, %cmp.i46
  %retval.0.i = select i1 %or.cond.i, %union.tree_node* null, %union.tree_node* %.pre.i
  %cmp = icmp eq %union.tree_node* %retval.0.i, null
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %sw.bb
  %code.i = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i102 = load i32* %code.i, align 8
  %bf.clear.i103 = and i32 %bf.load.i102, 255
  %cmp.i104 = icmp eq i32 %bf.clear.i103, 30
  br i1 %cmp.i104, label %if.end11.i, label %if.then.i107

if.then.i107:                                     ; preds = %if.then
  %idxprom50.i = zext i32 %bf.clear.i103 to i64
  %arrayidx.i105 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50.i
  %10 = load i8* %arrayidx.i105, align 1, !tbaa !1
  %cmp5.i106 = icmp eq i8 %10, 116
  br i1 %cmp5.i106, label %if.then7.i, label %if.end.i110

if.then7.i:                                       ; preds = %if.then.i107
  %chain.i = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 0, i32 0
  %11 = load %union.tree_node** %chain.i, align 8, !tbaa !88
  br label %if.end.i110

if.end.i110:                                      ; preds = %if.then7.i, %if.then.i107
  %fn.0.i = phi %union.tree_node* [ %11, %if.then7.i ], [ %retval.0.i, %if.then.i107 ]
  %call.i108 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %fn.0.i) #5
  %tobool.i109 = icmp eq %union.tree_node* %call.i108, null
  br i1 %tobool.i109, label %if.end11.i, label %if.then9.i111

if.then9.i111:                                    ; preds = %if.end.i110
  tail call void @dwarf2out_abstract_function(%union.tree_node* %call.i108) #5
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i111, %if.end.i110, %if.then
  %bf.load14.i = load i32* %code.i, align 8
  %bf.clear15.i = and i32 %bf.load14.i, 255
  %idxprom1649.i = zext i32 %bf.clear15.i to i64
  %arrayidx17.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1649.i
  %12 = load i8* %arrayidx17.i, align 1, !tbaa !1
  switch i8 %12, label %if.then38.i [
    i8 100, label %if.then21.i
    i8 116, label %if.then32.i
  ]

if.then21.i:                                      ; preds = %if.end11.i
  %origin.idx.i = getelementptr %union.tree_node* %retval.0.i, i64 0, i32 0, i32 3
  %origin.idx.val.i = load i32* %origin.idx.i, align 4, !tbaa !65
  %13 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i112 = icmp ugt i32 %13, %origin.idx.val.i
  br i1 %cmp.i.i112, label %cond.true.i.i, label %if.then38.i

cond.true.i.i:                                    ; preds = %if.then21.i
  %idxprom.i.i = zext i32 %origin.idx.val.i to i64
  %14 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i = getelementptr inbounds %struct.die_struct** %14, i64 %idxprom.i.i
  %15 = load %struct.die_struct** %arrayidx.i.i, align 8, !tbaa !6
  br label %if.end35.i

if.then32.i:                                      ; preds = %if.end11.i
  %origin.idx51.i = getelementptr %union.tree_node* %retval.0.i, i64 0, i32 0, i32 10
  %origin.idx51.val.i = load %union.tree_node** %origin.idx51.i, align 8
  %16 = bitcast %union.tree_node* %origin.idx51.val.i to %struct.die_struct*
  br label %if.end35.i

if.end35.i:                                       ; preds = %cond.true.i.i, %if.then32.i
  %origin_die.0.i = phi %struct.die_struct* [ %16, %if.then32.i ], [ %15, %cond.true.i.i ]
  %cmp36.i = icmp eq %struct.die_struct* %origin_die.0.i, null
  br i1 %cmp36.i, label %if.then38.i, label %add_abstract_origin_attribute.exit

if.then38.i:                                      ; preds = %if.then21.i, %if.end11.i, %if.end35.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9459, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.add_abstract_origin_attribute, i64 0, i64 0)) #7
  unreachable

add_abstract_origin_attribute.exit:               ; preds = %if.end35.i
  %call.i113 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i114 = getelementptr inbounds i8* %call.i113, i64 8
  %17 = bitcast i8* %dw_attr_next.i114 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %17, align 8, !tbaa !72
  %dw_attr.i115 = bitcast i8* %call.i113 to i32*
  store i32 49, i32* %dw_attr.i115, align 4, !tbaa !57
  %dw_attr_val.i116 = getelementptr inbounds i8* %call.i113, i64 16
  %val_class.i117 = bitcast i8* %dw_attr_val.i116 to i32*
  store i32 10, i32* %val_class.i117, align 4, !tbaa !59
  %v.i118 = getelementptr inbounds i8* %call.i113, i64 24
  %die2.i119 = bitcast i8* %v.i118 to %struct.die_struct**
  store %struct.die_struct* %origin_die.0.i, %struct.die_struct** %die2.i119, align 8, !tbaa !60
  %external.i = getelementptr inbounds i8* %call.i113, i64 32
  %18 = bitcast i8* %external.i to i32*
  store i32 0, i32* %18, align 4, !tbaa !108
  %cmp.i.i120 = icmp ne i8* %call.i, null
  %cmp1.i.i121 = icmp ne i8* %call.i113, null
  %or.cond.i.i122 = and i1 %cmp.i.i120, %cmp1.i.i121
  br i1 %or.cond.i.i122, label %if.then.i.i124, label %if.end15

if.then.i.i124:                                   ; preds = %add_abstract_origin_attribute.exit
  %19 = bitcast i8* %call.i113 to %struct.dw_attr_struct*
  %die_attr.i.i123 = getelementptr inbounds i8* %call.i, i64 16
  %20 = bitcast i8* %die_attr.i.i123 to %struct.dw_attr_struct**
  %21 = load %struct.dw_attr_struct** %20, align 8, !tbaa !73
  store %struct.dw_attr_struct* %21, %struct.dw_attr_struct** %17, align 8, !tbaa !72
  store %struct.dw_attr_struct* %19, %struct.dw_attr_struct** %20, align 8, !tbaa !73
  br label %if.end15

if.else:                                          ; preds = %sw.bb
  tail call fastcc void @add_name_and_src_coords_attributes(%struct.die_struct* %0, %union.tree_node* %node)
  %type = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 0, i32 1
  %22 = load %union.tree_node** %type, align 8, !tbaa !87
  %bf.load5 = load i32* %code, align 8
  %bf.clear6 = and i32 %bf.load5, 4096
  %bf.clear10 = and i32 %bf.load5, 2048
  %code1.i57 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %bf.load.i58 = load i32* %code1.i57, align 8
  %bf.clear.i59 = and i32 %bf.load.i58, 255
  %23 = and i32 %bf.load.i58, 254
  %24 = icmp eq i32 %23, 6
  br i1 %24, label %land.lhs.true.i62, label %if.end.i71

land.lhs.true.i62:                                ; preds = %if.else
  %type4.i60 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type4.i60, align 8, !tbaa !87
  %cmp5.i61 = icmp eq %union.tree_node* %25, null
  br i1 %cmp5.i61, label %if.end.i71, label %land.lhs.true6.i64

land.lhs.true6.i64:                               ; preds = %land.lhs.true.i62
  %26 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 11
  %27 = load %union.tree_node** %26, align 8, !tbaa !102
  %cmp8.i63 = icmp eq %union.tree_node* %27, null
  br i1 %cmp8.i63, label %if.then.i68, label %if.end.i71

if.then.i68:                                      ; preds = %land.lhs.true6.i64
  %code12.i65 = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i66 = load i32* %code12.i65, align 8
  %bf.clear14.i67 = and i32 %bf.load13.i66, 255
  br label %if.end.i71

if.end.i71:                                       ; preds = %if.then.i68, %land.lhs.true6.i64, %land.lhs.true.i62, %if.else
  %bf.load27.i80 = phi i32 [ %bf.load13.i66, %if.then.i68 ], [ %bf.load.i58, %land.lhs.true6.i64 ], [ %bf.load.i58, %land.lhs.true.i62 ], [ %bf.load.i58, %if.else ]
  %type.addr.0.i69 = phi %union.tree_node* [ %25, %if.then.i68 ], [ %22, %land.lhs.true6.i64 ], [ %22, %land.lhs.true.i62 ], [ %22, %if.else ]
  %code.0.i70 = phi i32 [ %bf.clear14.i67, %if.then.i68 ], [ %bf.clear.i59, %land.lhs.true6.i64 ], [ %bf.clear.i59, %land.lhs.true.i62 ], [ %bf.clear.i59, %if.else ]
  switch i32 %code.0.i70, label %if.end19.i73 [
    i32 5, label %add_type_attribute.exit101
    i32 0, label %add_type_attribute.exit101
  ]

if.end19.i73:                                     ; preds = %if.end.i71
  %tobool.i72 = icmp eq i32 %bf.clear6, 0
  br i1 %tobool.i72, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %if.end19.i73
  %bf.clear22.i76 = and i32 %bf.load27.i80, 4096
  %tobool23.i77 = icmp ne i32 %bf.clear22.i76, 0
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %if.end19.i73
  %28 = phi i1 [ true, %if.end19.i73 ], [ %tobool23.i77, %lor.rhs.i ]
  %lor.ext.i78 = zext i1 %28 to i32
  %tobool24.i = icmp eq i32 %bf.clear10, 0
  br i1 %tobool24.i, label %lor.rhs25.i, label %lor.end31.i

lor.rhs25.i:                                      ; preds = %lor.end.i
  %bf.clear29.i81 = and i32 %bf.load27.i80, 2048
  %tobool30.i82 = icmp ne i32 %bf.clear29.i81, 0
  br label %lor.end31.i

lor.end31.i:                                      ; preds = %lor.rhs25.i, %lor.end.i
  %29 = phi i1 [ true, %lor.end.i ], [ %tobool30.i82, %lor.rhs25.i ]
  %lor.ext32.i83 = zext i1 %29 to i32
  %call.i84 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i69, i32 %lor.ext.i78, i32 %lor.ext32.i83, %struct.die_struct* %context_die) #5
  %cmp33.i85 = icmp eq %struct.die_struct* %call.i84, null
  br i1 %cmp33.i85, label %add_type_attribute.exit101, label %if.then34.i97

if.then34.i97:                                    ; preds = %lor.end31.i
  %call.i.i86 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i87 = getelementptr inbounds i8* %call.i.i86, i64 8
  %30 = bitcast i8* %dw_attr_next.i.i87 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %30, align 8, !tbaa !72
  %dw_attr.i.i88 = bitcast i8* %call.i.i86 to i32*
  store i32 73, i32* %dw_attr.i.i88, align 4, !tbaa !57
  %dw_attr_val.i.i89 = getelementptr inbounds i8* %call.i.i86, i64 16
  %val_class.i.i90 = bitcast i8* %dw_attr_val.i.i89 to i32*
  store i32 10, i32* %val_class.i.i90, align 4, !tbaa !59
  %v.i.i91 = getelementptr inbounds i8* %call.i.i86, i64 24
  %die2.i.i92 = bitcast i8* %v.i.i91 to %struct.die_struct**
  store %struct.die_struct* %call.i84, %struct.die_struct** %die2.i.i92, align 8, !tbaa !60
  %external.i.i93 = getelementptr inbounds i8* %call.i.i86, i64 32
  %31 = bitcast i8* %external.i.i93 to i32*
  store i32 0, i32* %31, align 4, !tbaa !108
  %cmp.i.i.i94 = icmp ne i8* %call.i, null
  %cmp1.i.i.i95 = icmp ne i8* %call.i.i86, null
  %or.cond.i.i.i96 = and i1 %cmp.i.i.i94, %cmp1.i.i.i95
  br i1 %or.cond.i.i.i96, label %if.then.i.i.i99, label %add_type_attribute.exit101

if.then.i.i.i99:                                  ; preds = %if.then34.i97
  %32 = bitcast i8* %call.i.i86 to %struct.dw_attr_struct*
  %die_attr.i.i.i98 = getelementptr inbounds i8* %call.i, i64 16
  %33 = bitcast i8* %die_attr.i.i.i98 to %struct.dw_attr_struct**
  %34 = load %struct.dw_attr_struct** %33, align 8, !tbaa !73
  store %struct.dw_attr_struct* %34, %struct.dw_attr_struct** %30, align 8, !tbaa !72
  store %struct.dw_attr_struct* %32, %struct.dw_attr_struct** %33, align 8, !tbaa !73
  br label %add_type_attribute.exit101

add_type_attribute.exit101:                       ; preds = %if.then34.i97, %if.then.i.i.i99, %if.end.i71, %if.end.i71, %lor.end31.i
  %bf.load11 = load i64* %9, align 8
  %bf.cast = and i64 %bf.load11, 4194304
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.end15, label %if.then14

if.then14:                                        ; preds = %add_type_attribute.exit101
  %call.i47 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i47, i64 8
  %35 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %35, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i47 to i32*
  store i32 52, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i47, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 9, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i47, i64 24
  store i8 1, i8* %v.i, align 1, !tbaa !1
  %cmp.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i48 = icmp ne i8* %call.i47, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i48
  br i1 %or.cond.i.i, label %if.then.i.i49, label %if.end15

if.then.i.i49:                                    ; preds = %if.then14
  %36 = bitcast i8* %call.i47 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds i8* %call.i, i64 16
  %37 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %38 = load %struct.dw_attr_struct** %37, align 8, !tbaa !73
  store %struct.dw_attr_struct* %38, %struct.dw_attr_struct** %35, align 8, !tbaa !72
  store %struct.dw_attr_struct* %36, %struct.dw_attr_struct** %37, align 8, !tbaa !73
  br label %if.end15

if.end15:                                         ; preds = %if.then.i.i49, %if.then14, %if.then.i.i124, %add_abstract_origin_attribute.exit, %add_type_attribute.exit101
  %node.idx = getelementptr %union.tree_node* %node, i64 0, i32 0, i32 3
  %node.idx.val = load i32* %node.idx, align 4, !tbaa !65
  %39 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %cmp.i50 = icmp ugt i32 %39, %node.idx.val
  br i1 %cmp.i50, label %if.end.i, label %if.then.i52

if.then.i52:                                      ; preds = %if.end15
  %sub.i = add i32 %node.idx.val, 256
  %div.i = and i32 %sub.i, -256
  %40 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %41 = bitcast %struct.die_struct** %40 to i8*
  %conv.i = zext i32 %div.i to i64
  %mul3.i = shl nuw nsw i64 %conv.i, 3
  %call.i51 = tail call i8* @xrealloc(i8* %41, i64 %mul3.i) #5
  %42 = bitcast i8* %call.i51 to %struct.die_struct**
  store %struct.die_struct** %42, %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %43 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %idxprom.i = zext i32 %43 to i64
  %arrayidx.i = getelementptr inbounds %struct.die_struct** %42, i64 %idxprom.i
  %44 = bitcast %struct.die_struct** %arrayidx.i to i8*
  %sub4.i = sub i32 %div.i, %43
  %conv5.i = zext i32 %sub4.i to i64
  %mul6.i = shl nuw nsw i64 %conv5.i, 3
  tail call void @llvm.memset.p0i8.i64(i8* %44, i8 0, i64 %mul6.i, i32 1, i1 false) #5
  store i32 %div.i, i32* @decl_die_table_allocated, align 4, !tbaa !4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i52, %if.end15
  %45 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp7.i = icmp ugt i32 %45, %node.idx.val
  br i1 %cmp7.i, label %equate_decl_number_to_die.exit, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  %add10.i = add i32 %node.idx.val, 1
  store i32 %add10.i, i32* @decl_die_table_in_use, align 4, !tbaa !4
  br label %equate_decl_number_to_die.exit

equate_decl_number_to_die.exit:                   ; preds = %if.end.i, %if.then9.i
  %idxprom12.i = zext i32 %node.idx.val to i64
  %46 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx13.i = getelementptr inbounds %struct.die_struct** %46, i64 %idxprom12.i
  store %struct.die_struct* %0, %struct.die_struct** %arrayidx13.i, align 8, !tbaa !6
  %bf.load17 = load i64* %9, align 8
  %bf.cast20 = and i64 %bf.load17, 32768
  %tobool21 = icmp eq i64 %bf.cast20, 0
  br i1 %tobool21, label %if.then22, label %sw.epilog

if.then22:                                        ; preds = %equate_decl_number_to_die.exit
  tail call fastcc void @add_location_or_const_value_attribute(%struct.die_struct* %0, %union.tree_node* %node)
  br label %sw.epilog

sw.bb24:                                          ; preds = %new_die.exit
  %47 = and i32 %bf.load, 254
  %48 = icmp eq i32 %47, 6
  br i1 %48, label %land.lhs.true.i, label %if.end.i55

land.lhs.true.i:                                  ; preds = %sw.bb24
  %type4.i = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 0, i32 1
  %49 = load %union.tree_node** %type4.i, align 8, !tbaa !87
  %cmp5.i = icmp eq %union.tree_node* %49, null
  br i1 %cmp5.i, label %if.end.i55, label %land.lhs.true6.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i
  %50 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 11
  %51 = load %union.tree_node** %50, align 8, !tbaa !102
  %cmp8.i = icmp eq %union.tree_node* %51, null
  br i1 %cmp8.i, label %if.then.i54, label %if.end.i55

if.then.i54:                                      ; preds = %land.lhs.true6.i
  %code12.i = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i = load i32* %code12.i, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 255
  br label %if.end.i55

if.end.i55:                                       ; preds = %if.then.i54, %land.lhs.true6.i, %land.lhs.true.i, %sw.bb24
  %bf.load21.i = phi i32 [ %bf.load13.i, %if.then.i54 ], [ %bf.load, %land.lhs.true6.i ], [ %bf.load, %land.lhs.true.i ], [ %bf.load, %sw.bb24 ]
  %type.addr.0.i = phi %union.tree_node* [ %49, %if.then.i54 ], [ %node, %land.lhs.true6.i ], [ %node, %land.lhs.true.i ], [ %node, %sw.bb24 ]
  %code.0.i = phi i32 [ %bf.clear14.i, %if.then.i54 ], [ %bf.clear, %land.lhs.true6.i ], [ %bf.clear, %land.lhs.true.i ], [ %bf.clear, %sw.bb24 ]
  switch i32 %code.0.i, label %if.end19.i [
    i32 5, label %sw.epilog
    i32 0, label %sw.epilog
  ]

if.end19.i:                                       ; preds = %if.end.i55
  %bf.clear22.i = lshr i32 %bf.load21.i, 12
  %bf.clear22.i.lobit = and i32 %bf.clear22.i, 1
  %bf.clear29.i = lshr i32 %bf.load21.i, 11
  %bf.clear29.i.lobit = and i32 %bf.clear29.i, 1
  %call.i56 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i, i32 %bf.clear22.i.lobit, i32 %bf.clear29.i.lobit, %struct.die_struct* %context_die) #5
  %cmp33.i = icmp eq %struct.die_struct* %call.i56, null
  br i1 %cmp33.i, label %sw.epilog, label %if.then34.i

if.then34.i:                                      ; preds = %if.end19.i
  %call.i.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %52 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %52, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i.i to i32*
  store i32 73, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 10, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %die2.i.i = bitcast i8* %v.i.i to %struct.die_struct**
  store %struct.die_struct* %call.i56, %struct.die_struct** %die2.i.i, align 8, !tbaa !60
  %external.i.i = getelementptr inbounds i8* %call.i.i, i64 32
  %53 = bitcast i8* %external.i.i to i32*
  store i32 0, i32* %53, align 4, !tbaa !108
  %cmp.i.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i.i = icmp ne i8* %call.i.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %sw.epilog

if.then.i.i.i:                                    ; preds = %if.then34.i
  %54 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i, i64 16
  %55 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %56 = load %struct.dw_attr_struct** %55, align 8, !tbaa !73
  store %struct.dw_attr_struct* %56, %struct.dw_attr_struct** %52, align 8, !tbaa !72
  store %struct.dw_attr_struct* %54, %struct.dw_attr_struct** %55, align 8, !tbaa !73
  br label %sw.epilog

sw.default:                                       ; preds = %new_die.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 10025, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.gen_formal_parameter_die, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %if.end19.i, %if.end.i55, %if.end.i55, %if.then.i.i.i, %if.then34.i, %equate_decl_number_to_die.exit, %if.then22
  ret %struct.die_struct* %0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_name_and_src_coords_attributes(%struct.die_struct* %die, %union.tree_node* %decl) #1 {
entry:
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %0 = load %union.tree_node** %name, align 8, !tbaa !86
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.end47, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %id = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %1 = getelementptr inbounds i8** %id, i64 1
  %2 = load i8** %1, align 8, !tbaa !105
  %cmp2 = icmp eq i8* %2, null
  br i1 %cmp2, label %if.end47, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8* (%union.tree_node*, i32)** @decl_printable_name, align 8, !tbaa !6
  %call.i = tail call i8* %3(%union.tree_node* %decl, i32 0) #5
  %cmp.i = icmp eq i8* %call.i, null
  br i1 %cmp.i, label %add_name_attribute.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then
  %4 = load i8* %call.i, align 1, !tbaa !1
  %cmp1.i = icmp eq i8 %4, 0
  br i1 %cmp1.i, label %add_name_attribute.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %5 = load i8* (i8*)** @demangle_name_func, align 8, !tbaa !6
  %tobool.i = icmp eq i8* (i8*)* %5, null
  br i1 %tobool.i, label %if.end.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i
  %call.i65 = tail call i8* %5(i8* %call.i) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i, %if.then.i
  %name_string.addr.0.i = phi i8* [ %call.i65, %if.then3.i ], [ %call.i, %if.then.i ]
  %call.i.i = tail call noalias i8* @xmalloc(i64 40) #5
  %6 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %7 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i.i = icmp eq %struct.ht* %7, null
  br i1 %tobool.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.end.i
  %call1.i.i = tail call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i.i, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i.i = getelementptr inbounds %struct.ht* %call1.i.i, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i.i, align 8, !tbaa !81
  %.pre.i.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.end.i
  %8 = phi %struct.ht* [ %7, %if.end.i ], [ %.pre.i.i, %if.then.i.i ]
  %call2.i.i = tail call i64 @strlen(i8* %name_string.addr.0.i) #5
  %conv.i.i = trunc i64 %call2.i.i to i32
  %call3.i.i = tail call %struct.ht_identifier* @ht_lookup(%struct.ht* %8, i8* %name_string.addr.0.i, i32 %conv.i.i, i32 1) #5
  %9 = bitcast %struct.ht_identifier* %call3.i.i to %struct.indirect_string_node*
  %10 = getelementptr inbounds %struct.ht_identifier* %call3.i.i, i64 1, i32 0
  %11 = load i32* %10, align 4, !tbaa !84
  %inc.i.i = add i32 %11, 1
  store i32 %inc.i.i, i32* %10, align 4, !tbaa !84
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %12 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %12, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i.i to i32*
  store i32 3, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 14, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_str.i.i = bitcast i8* %v.i.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %9, %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %cmp.i.i.i = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i.i = icmp ne i8* %call.i.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %add_name_attribute.exit

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %die_attr.i.i.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %13 = load %struct.dw_attr_struct** %die_attr.i.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %13, %struct.dw_attr_struct** %12, align 8, !tbaa !72
  store %struct.dw_attr_struct* %6, %struct.dw_attr_struct** %die_attr.i.i.i, align 8, !tbaa !73
  br label %add_name_attribute.exit

add_name_attribute.exit:                          ; preds = %if.then, %land.lhs.true.i, %if.end.i.i, %if.then.i.i.i
  %artificial_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %14 = bitcast i48* %artificial_flag to i64*
  %bf.load = load i64* %14, align 8
  %bf.cast = and i64 %bf.load, 4194304
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.then4, label %if.end

if.then4:                                         ; preds = %add_name_attribute.exit
  %filename.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 1
  %15 = load i8** %filename.i, align 8, !tbaa !127
  %call.i66 = tail call fastcc i32 @lookup_filename(i8* %15) #5
  %conv.i = zext i32 %call.i66 to i64
  %call.i.i67 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i68 = getelementptr inbounds i8* %call.i.i67, i64 8
  %16 = bitcast i8* %dw_attr_next.i.i68 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %16, align 8, !tbaa !72
  %dw_attr.i.i69 = bitcast i8* %call.i.i67 to i32*
  store i32 58, i32* %dw_attr.i.i69, align 4, !tbaa !57
  %dw_attr_val.i.i70 = getelementptr inbounds i8* %call.i.i67, i64 16
  %val_class.i.i71 = bitcast i8* %dw_attr_val.i.i70 to i32*
  store i32 6, i32* %val_class.i.i71, align 4, !tbaa !59
  %v.i.i72 = getelementptr inbounds i8* %call.i.i67, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i.i72 to i64*
  store i64 %conv.i, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %cmp.i.i.i73 = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i.i74 = icmp ne i8* %call.i.i67, null
  %or.cond.i.i.i75 = and i1 %cmp.i.i.i73, %cmp1.i.i.i74
  br i1 %or.cond.i.i.i75, label %if.then.i.i.i77, label %add_AT_unsigned.exit.i

if.then.i.i.i77:                                  ; preds = %if.then4
  %17 = bitcast i8* %call.i.i67 to %struct.dw_attr_struct*
  %die_attr.i.i.i76 = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %18 = load %struct.dw_attr_struct** %die_attr.i.i.i76, align 8, !tbaa !73
  store %struct.dw_attr_struct* %18, %struct.dw_attr_struct** %16, align 8, !tbaa !72
  store %struct.dw_attr_struct* %17, %struct.dw_attr_struct** %die_attr.i.i.i76, align 8, !tbaa !73
  br label %add_AT_unsigned.exit.i

add_AT_unsigned.exit.i:                           ; preds = %if.then.i.i.i77, %if.then4
  %linenum.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %19 = load i32* %linenum.i, align 4, !tbaa !91
  %conv3.i = sext i32 %19 to i64
  %call.i6.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i7.i = getelementptr inbounds i8* %call.i6.i, i64 8
  %20 = bitcast i8* %dw_attr_next.i7.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %20, align 8, !tbaa !72
  %dw_attr.i8.i = bitcast i8* %call.i6.i to i32*
  store i32 59, i32* %dw_attr.i8.i, align 4, !tbaa !57
  %dw_attr_val.i9.i = getelementptr inbounds i8* %call.i6.i, i64 16
  %val_class.i10.i = bitcast i8* %dw_attr_val.i9.i to i32*
  store i32 6, i32* %val_class.i10.i, align 4, !tbaa !59
  %v.i11.i = getelementptr inbounds i8* %call.i6.i, i64 24
  %val_unsigned.i12.i = bitcast i8* %v.i11.i to i64*
  store i64 %conv3.i, i64* %val_unsigned.i12.i, align 8, !tbaa !8
  %cmp1.i.i14.i = icmp ne i8* %call.i6.i, null
  %or.cond.i.i15.i = and i1 %cmp.i.i.i73, %cmp1.i.i14.i
  br i1 %or.cond.i.i15.i, label %if.then.i.i17.i, label %if.end

if.then.i.i17.i:                                  ; preds = %add_AT_unsigned.exit.i
  %21 = bitcast i8* %call.i6.i to %struct.dw_attr_struct*
  %die_attr.i.i16.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %22 = load %struct.dw_attr_struct** %die_attr.i.i16.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %22, %struct.dw_attr_struct** %20, align 8, !tbaa !72
  store %struct.dw_attr_struct* %21, %struct.dw_attr_struct** %die_attr.i.i16.i, align 8, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.then.i.i17.i, %add_AT_unsigned.exit.i, %add_name_attribute.exit
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load5 = load i32* %code, align 8
  %bf.clear6 = and i32 %bf.load5, 255
  switch i32 %bf.clear6, label %if.end47 [
    i32 30, label %land.lhs.true13
    i32 34, label %land.lhs.true13
  ]

land.lhs.true13:                                  ; preds = %if.end, %if.end
  %bf.clear17 = and i32 %bf.load5, 524288
  %tobool18 = icmp eq i32 %bf.clear17, 0
  br i1 %tobool18, label %if.end47, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %land.lhs.true13
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  %23 = load %union.tree_node** %assembler_name, align 8, !tbaa !137
  %cmp21 = icmp eq %union.tree_node* %23, null
  br i1 %cmp21, label %cond.false, label %cond.end

cond.false:                                       ; preds = %land.lhs.true19
  %24 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !6
  tail call void %24(%union.tree_node* %decl) #5
  %.pr = load %union.tree_node** %assembler_name, align 8, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true19, %cond.false
  %25 = phi %union.tree_node* [ %23, %land.lhs.true19 ], [ %.pr, %cond.false ]
  %26 = load %union.tree_node** %name, align 8, !tbaa !86
  %cmp26 = icmp eq %union.tree_node* %25, %26
  br i1 %cmp26, label %if.end47, label %land.lhs.true27

land.lhs.true27:                                  ; preds = %cond.end
  %bf.load29 = load i64* %14, align 8
  %bf.cast32 = and i64 %bf.load29, 32768
  %tobool33 = icmp eq i64 %bf.cast32, 0
  br i1 %tobool33, label %if.then34, label %if.end47

if.then34:                                        ; preds = %land.lhs.true27
  %cmp37 = icmp eq %union.tree_node* %25, null
  br i1 %cmp37, label %cond.false39, label %cond.end40

cond.false39:                                     ; preds = %if.then34
  %27 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !6
  tail call void %27(%union.tree_node* %decl) #5
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !137
  br label %cond.end40

cond.end40:                                       ; preds = %if.then34, %cond.false39
  %28 = phi %union.tree_node* [ %25, %if.then34 ], [ %.pre, %cond.false39 ]
  %id44 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds i8** %id44, i64 1
  %30 = load i8** %29, align 8, !tbaa !105
  %call.i78 = tail call noalias i8* @xmalloc(i64 40) #5
  %31 = bitcast i8* %call.i78 to %struct.dw_attr_struct*
  %32 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i79 = icmp eq %struct.ht* %32, null
  br i1 %tobool.i79, label %if.then.i80, label %if.end.i82

if.then.i80:                                      ; preds = %cond.end40
  %call1.i = tail call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i = getelementptr inbounds %struct.ht* %call1.i, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i, align 8, !tbaa !81
  %.pre.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i82

if.end.i82:                                       ; preds = %if.then.i80, %cond.end40
  %33 = phi %struct.ht* [ %32, %cond.end40 ], [ %.pre.i, %if.then.i80 ]
  %call2.i = tail call i64 @strlen(i8* %30) #5
  %conv.i81 = trunc i64 %call2.i to i32
  %call3.i = tail call %struct.ht_identifier* @ht_lookup(%struct.ht* %33, i8* %30, i32 %conv.i81, i32 1) #5
  %34 = bitcast %struct.ht_identifier* %call3.i to %struct.indirect_string_node*
  %35 = getelementptr inbounds %struct.ht_identifier* %call3.i, i64 1, i32 0
  %36 = load i32* %35, align 4, !tbaa !84
  %inc.i = add i32 %36, 1
  store i32 %inc.i, i32* %35, align 4, !tbaa !84
  %dw_attr_next.i = getelementptr inbounds i8* %call.i78, i64 8
  %37 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %37, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i78 to i32*
  store i32 8199, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i78, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 14, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i78, i64 24
  %val_str.i = bitcast i8* %v.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %34, %struct.indirect_string_node** %val_str.i, align 8, !tbaa !6
  %cmp.i.i = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i = icmp ne i8* %call.i78, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %if.then.i.i83, label %if.end47

if.then.i.i83:                                    ; preds = %if.end.i82
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %38 = load %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %38, %struct.dw_attr_struct** %37, align 8, !tbaa !72
  store %struct.dw_attr_struct* %31, %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  br label %if.end47

if.end47:                                         ; preds = %if.then.i.i83, %if.end.i82, %if.end, %land.lhs.true27, %cond.end, %land.lhs.true13, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @add_location_or_const_value_attribute(%struct.die_struct* %die, %union.tree_node* nocapture readonly %decl) #1 {
entry:
  %rv.i = alloca %struct.realvaluetype, align 8
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.then11 [
    i32 0, label %sw.epilog
    i32 34, label %if.end12
    i32 35, label %if.end12
  ]

if.then11:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 8989, i8* getelementptr inbounds ([38 x i8]* @__FUNCTION__.add_location_or_const_value_attribute, i64 0, i64 0)) #7
  unreachable

if.end12:                                         ; preds = %entry, %entry
  %call = call fastcc %struct.rtx_def* @rtl_for_decl_location(%union.tree_node* %decl)
  %cmp13 = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp13, label %sw.epilog, label %if.end15

if.end15:                                         ; preds = %if.end12
  %call16 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %call) #5
  %0 = getelementptr inbounds %struct.rtx_def* %call16, i64 0, i32 0
  %bf.load17 = load i32* %0, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  switch i32 %bf.clear18, label %sw.default [
    i32 70, label %sw.epilog
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 57, label %sw.bb
    i32 68, label %sw.bb
    i32 67, label %sw.bb
    i32 58, label %sw.bb
    i32 75, label %sw.bb
    i32 66, label %sw.bb19
    i32 61, label %sw.bb19
    i32 63, label %sw.bb19
    i32 65, label %sw.bb19
  ]

sw.bb:                                            ; preds = %if.end15, %if.end15, %if.end15, %if.end15, %if.end15, %if.end15, %if.end15
  %1 = bitcast %struct.realvaluetype* %rv.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #5
  switch i32 %bf.clear18, label %sw.default58.i [
    i32 54, label %sw.bb.i
    i32 55, label %sw.bb6.i
    i32 57, label %sw.bb43.i
    i32 68, label %sw.bb46.i
    i32 67, label %sw.bb46.i
    i32 58, label %sw.bb46.i
    i32 75, label %sw.epilog
  ]

sw.bb.i:                                          ; preds = %sw.bb
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %call16, i64 0, i32 1, i64 0, i32 0
  %2 = load i64* %rtwint.i, align 8, !tbaa !29
  %cmp.i = icmp slt i64 %2, 0
  %call.i.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i.i, i64 8
  %3 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %3, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i.i to i32*
  store i32 28, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  br i1 %cmp.i, label %if.then.i, label %if.then3.i

if.then.i:                                        ; preds = %sw.bb.i
  store i32 5, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_int.i.i = bitcast i8* %v.i.i to i64*
  store i64 %2, i64* %val_int.i.i, align 8, !tbaa !8
  %cmp.i.i.i = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i.i = icmp ne i8* %call.i.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %sw.epilog

if.then.i.i.i:                                    ; preds = %if.then.i
  %4 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %die_attr.i.i.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %5 = load %struct.dw_attr_struct** %die_attr.i.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %5, %struct.dw_attr_struct** %3, align 8, !tbaa !72
  store %struct.dw_attr_struct* %4, %struct.dw_attr_struct** %die_attr.i.i.i, align 8, !tbaa !73
  br label %sw.epilog

if.then3.i:                                       ; preds = %sw.bb.i
  store i32 6, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i95.i = getelementptr inbounds i8* %call.i.i, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i95.i to i64*
  store i64 %2, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %cmp.i.i96.i = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i97.i = icmp ne i8* %call.i.i, null
  %or.cond.i.i98.i = and i1 %cmp.i.i96.i, %cmp1.i.i97.i
  br i1 %or.cond.i.i98.i, label %if.then.i.i100.i, label %sw.epilog

if.then.i.i100.i:                                 ; preds = %if.then3.i
  %6 = bitcast i8* %call.i.i to %struct.dw_attr_struct*
  %die_attr.i.i99.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %7 = load %struct.dw_attr_struct** %die_attr.i.i99.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %7, %struct.dw_attr_struct** %3, align 8, !tbaa !72
  store %struct.dw_attr_struct* %6, %struct.dw_attr_struct** %die_attr.i.i99.i, align 8, !tbaa !73
  br label %sw.epilog

sw.bb6.i:                                         ; preds = %sw.bb
  %bf.lshr.i = lshr i32 %bf.load17, 16
  %bf.clear8.i = and i32 %bf.lshr.i, 255
  %idxprom88.i = zext i32 %bf.clear8.i to i64
  %arrayidx9.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom88.i
  %8 = load i32* %arrayidx9.i, align 4, !tbaa !1
  %cmp10.i = icmp eq i32 %8, 2
  br i1 %cmp10.i, label %if.then11.i, label %if.else41.i

if.then11.i:                                      ; preds = %sw.bb6.i
  %arrayidx13.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom88.i
  %9 = load i8* %arrayidx13.i, align 1, !tbaa !1
  %div89.i = lshr i8 %9, 2
  %div.i = zext i8 %div89.i to i32
  %conv14.i = zext i8 %div89.i to i64
  %mul.i = shl nuw nsw i64 %conv14.i, 3
  %call.i = call noalias i8* @xmalloc(i64 %mul.i) #5
  %10 = bitcast i8* %call.i to i64*
  %rtwint17.i = getelementptr inbounds %struct.rtx_def* %call16, i64 0, i32 1, i64 1, i32 0
  %u.sroa.0.0..sroa_cast.i = bitcast i64* %rtwint17.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %u.sroa.0.0..sroa_cast.i, i64 24, i32 8, i1 false) #5
  switch i32 %bf.clear8.i, label %sw.default.i [
    i32 15, label %sw.bb18.i
    i32 16, label %sw.bb21.i
    i32 17, label %sw.bb22.i
    i32 18, label %sw.bb22.i
  ]

sw.bb18.i:                                        ; preds = %if.then11.i
  %call19.i = call i64 @etarsingle(%struct.realvaluetype* byval align 8 %rv.i) #5
  store i64 %call19.i, i64* %10, align 8, !tbaa !8
  br label %sw.epilog.i

sw.bb21.i:                                        ; preds = %if.then11.i
  call void @etardouble(%struct.realvaluetype* byval align 8 %rv.i, i64* %10) #5
  br label %sw.epilog.i

sw.bb22.i:                                        ; preds = %if.then11.i, %if.then11.i
  %11 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = and i32 %11, 16777216
  %cmp28.i = icmp eq i32 %and.i, 0
  br i1 %cmp28.i, label %cond.true30.i, label %cond.true37.i

cond.true30.i:                                    ; preds = %sw.bb22.i
  call void @etarldouble(%struct.realvaluetype* byval align 8 %rv.i, i64* %10) #5
  br label %sw.epilog.i

cond.true37.i:                                    ; preds = %sw.bb22.i
  call void @etartdouble(%struct.realvaluetype* byval align 8 %rv.i, i64* %10) #5
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.then11.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 8713, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.add_const_value_attribute, i64 0, i64 0)) #7
  unreachable

sw.epilog.i:                                      ; preds = %cond.true37.i, %cond.true30.i, %sw.bb21.i, %sw.bb18.i
  %call.i101.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i102.i = getelementptr inbounds i8* %call.i101.i, i64 8
  %12 = bitcast i8* %dw_attr_next.i102.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %12, align 8, !tbaa !72
  %dw_attr.i103.i = bitcast i8* %call.i101.i to i32*
  store i32 28, i32* %dw_attr.i103.i, align 4, !tbaa !57
  %dw_attr_val.i104.i = getelementptr inbounds i8* %call.i101.i, i64 16
  %val_class.i105.i = bitcast i8* %dw_attr_val.i104.i to i32*
  store i32 8, i32* %val_class.i105.i, align 4, !tbaa !59
  %v.i106.i = getelementptr inbounds i8* %call.i101.i, i64 24
  %length2.i.i = getelementptr inbounds i8* %call.i101.i, i64 32
  %13 = bitcast i8* %length2.i.i to i32*
  store i32 %div.i, i32* %13, align 4, !tbaa !117
  %array6.i.i = bitcast i8* %v.i106.i to i64**
  store i64* %10, i64** %array6.i.i, align 8, !tbaa !119
  %cmp.i.i107.i = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i108.i = icmp ne i8* %call.i101.i, null
  %or.cond.i.i109.i = and i1 %cmp.i.i107.i, %cmp1.i.i108.i
  br i1 %or.cond.i.i109.i, label %if.then.i.i111.i, label %sw.epilog

if.then.i.i111.i:                                 ; preds = %sw.epilog.i
  %14 = bitcast i8* %call.i101.i to %struct.dw_attr_struct*
  %die_attr.i.i110.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %15 = load %struct.dw_attr_struct** %die_attr.i.i110.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %15, %struct.dw_attr_struct** %12, align 8, !tbaa !72
  store %struct.dw_attr_struct* %14, %struct.dw_attr_struct** %die_attr.i.i110.i, align 8, !tbaa !73
  br label %sw.epilog

if.else41.i:                                      ; preds = %sw.bb6.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 8722, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.add_const_value_attribute, i64 0, i64 0)) #7
  unreachable

sw.bb43.i:                                        ; preds = %sw.bb
  %arrayidx45.i = getelementptr inbounds %struct.rtx_def* %call16, i64 0, i32 1, i64 0
  %rtstr.i = bitcast %union.rtunion_def* %arrayidx45.i to i8**
  %16 = load i8** %rtstr.i, align 8, !tbaa !6
  %call.i112.i = call noalias i8* @xmalloc(i64 40) #5
  %17 = bitcast i8* %call.i112.i to %struct.dw_attr_struct*
  %18 = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %tobool.i.i = icmp eq %struct.ht* %18, null
  br i1 %tobool.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %sw.bb43.i
  %call1.i.i = call %struct.ht* @ht_create(i32 10) #5
  store %struct.ht* %call1.i.i, %struct.ht** @debug_str_hash, align 8, !tbaa !6
  %alloc_node.i.i = getelementptr inbounds %struct.ht* %call1.i.i, i64 0, i32 2
  store %struct.ht_identifier* (%struct.ht*)* @indirect_string_alloc, %struct.ht_identifier* (%struct.ht*)** %alloc_node.i.i, align 8, !tbaa !81
  %.pre.i.i = load %struct.ht** @debug_str_hash, align 8, !tbaa !6
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %sw.bb43.i
  %19 = phi %struct.ht* [ %18, %sw.bb43.i ], [ %.pre.i.i, %if.then.i.i ]
  %call2.i.i = call i64 @strlen(i8* %16) #5
  %conv.i.i = trunc i64 %call2.i.i to i32
  %call3.i.i = call %struct.ht_identifier* @ht_lookup(%struct.ht* %19, i8* %16, i32 %conv.i.i, i32 1) #5
  %20 = bitcast %struct.ht_identifier* %call3.i.i to %struct.indirect_string_node*
  %21 = getelementptr inbounds %struct.ht_identifier* %call3.i.i, i64 1, i32 0
  %22 = load i32* %21, align 4, !tbaa !84
  %inc.i.i = add i32 %22, 1
  store i32 %inc.i.i, i32* %21, align 4, !tbaa !84
  %dw_attr_next.i113.i = getelementptr inbounds i8* %call.i112.i, i64 8
  %23 = bitcast i8* %dw_attr_next.i113.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %23, align 8, !tbaa !72
  %dw_attr.i114.i = bitcast i8* %call.i112.i to i32*
  store i32 28, i32* %dw_attr.i114.i, align 4, !tbaa !57
  %dw_attr_val.i115.i = getelementptr inbounds i8* %call.i112.i, i64 16
  %val_class.i116.i = bitcast i8* %dw_attr_val.i115.i to i32*
  store i32 14, i32* %val_class.i116.i, align 4, !tbaa !59
  %v.i117.i = getelementptr inbounds i8* %call.i112.i, i64 24
  %val_str.i.i = bitcast i8* %v.i117.i to %struct.indirect_string_node**
  store %struct.indirect_string_node* %20, %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %cmp.i.i118.i = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i119.i = icmp ne i8* %call.i112.i, null
  %or.cond.i.i120.i = and i1 %cmp.i.i118.i, %cmp1.i.i119.i
  br i1 %or.cond.i.i120.i, label %if.then.i.i122.i, label %sw.epilog

if.then.i.i122.i:                                 ; preds = %if.end.i.i
  %die_attr.i.i121.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %24 = load %struct.dw_attr_struct** %die_attr.i.i121.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %24, %struct.dw_attr_struct** %23, align 8, !tbaa !72
  store %struct.dw_attr_struct* %17, %struct.dw_attr_struct** %die_attr.i.i121.i, align 8, !tbaa !73
  br label %sw.epilog

sw.bb46.i:                                        ; preds = %sw.bb, %sw.bb, %sw.bb
  %call.i123.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i124.i = getelementptr inbounds i8* %call.i123.i, i64 8
  %25 = bitcast i8* %dw_attr_next.i124.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %25, align 8, !tbaa !72
  %dw_attr.i125.i = bitcast i8* %call.i123.i to i32*
  store i32 28, i32* %dw_attr.i125.i, align 4, !tbaa !57
  %dw_attr_val.i126.i = getelementptr inbounds i8* %call.i123.i, i64 16
  %val_class.i127.i = bitcast i8* %dw_attr_val.i126.i to i32*
  store i32 0, i32* %val_class.i127.i, align 4, !tbaa !59
  %v.i128.i = getelementptr inbounds i8* %call.i123.i, i64 24
  %val_addr.i.i = bitcast i8* %v.i128.i to %struct.rtx_def**
  store %struct.rtx_def* %call16, %struct.rtx_def** %val_addr.i.i, align 8, !tbaa !6
  %cmp.i.i129.i = icmp ne %struct.die_struct* %die, null
  %cmp1.i.i130.i = icmp ne i8* %call.i123.i, null
  %or.cond.i.i131.i = and i1 %cmp.i.i129.i, %cmp1.i.i130.i
  br i1 %or.cond.i.i131.i, label %if.then.i.i133.i, label %add_AT_addr.exit.i

if.then.i.i133.i:                                 ; preds = %sw.bb46.i
  %26 = bitcast i8* %call.i123.i to %struct.dw_attr_struct*
  %die_attr.i.i132.i = getelementptr inbounds %struct.die_struct* %die, i64 0, i32 2
  %27 = load %struct.dw_attr_struct** %die_attr.i.i132.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %27, %struct.dw_attr_struct** %25, align 8, !tbaa !72
  store %struct.dw_attr_struct* %26, %struct.dw_attr_struct** %die_attr.i.i132.i, align 8, !tbaa !73
  br label %add_AT_addr.exit.i

add_AT_addr.exit.i:                               ; preds = %if.then.i.i133.i, %sw.bb46.i
  %28 = load %struct.varray_head_tag** @used_rtx_varray, align 8, !tbaa !6
  %elements_used.i = getelementptr inbounds %struct.varray_head_tag* %28, i64 0, i32 1
  %29 = load i64* %elements_used.i, align 8, !tbaa !67
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %28, i64 0, i32 0
  %30 = load i64* %num_elements.i, align 8, !tbaa !126
  %cmp48.i = icmp ult i64 %29, %30
  br i1 %cmp48.i, label %if.end54.i, label %if.then50.i

if.then50.i:                                      ; preds = %add_AT_addr.exit.i
  %mul52.i = shl i64 %30, 1
  %call53.i = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %28, i64 %mul52.i) #5
  store %struct.varray_head_tag* %call53.i, %struct.varray_head_tag** @used_rtx_varray, align 8, !tbaa !6
  %elements_used55.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call53.i, i64 0, i32 1
  %.pre.i = load i64* %elements_used55.phi.trans.insert.i, align 8, !tbaa !67
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.then50.i, %add_AT_addr.exit.i
  %31 = phi i64 [ %29, %add_AT_addr.exit.i ], [ %.pre.i, %if.then50.i ]
  %32 = phi %struct.varray_head_tag* [ %28, %add_AT_addr.exit.i ], [ %call53.i, %if.then50.i ]
  %elements_used55.i = getelementptr inbounds %struct.varray_head_tag* %32, i64 0, i32 1
  %inc.i = add i64 %31, 1
  store i64 %inc.i, i64* %elements_used55.i, align 8, !tbaa !67
  %data.i = getelementptr inbounds %struct.varray_head_tag* %32, i64 0, i32 4
  %rtx.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.rtx_def*]*
  %arrayidx56.i = getelementptr inbounds [1 x %struct.rtx_def*]* %rtx.i, i64 0, i64 %31
  store %struct.rtx_def* %call16, %struct.rtx_def** %arrayidx56.i, align 8, !tbaa !6
  br label %sw.epilog

sw.default58.i:                                   ; preds = %sw.bb
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 8757, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.add_const_value_attribute, i64 0, i64 0)) #7
  unreachable

sw.bb19:                                          ; preds = %if.end15, %if.end15, %if.end15, %if.end15
  call fastcc void @add_AT_location_description(%struct.die_struct* %die, %struct.rtx_def* %call16)
  br label %sw.epilog

sw.default:                                       ; preds = %if.end15
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9026, i8* getelementptr inbounds ([38 x i8]* @__FUNCTION__.add_location_or_const_value_attribute, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %if.end54.i, %if.then.i.i122.i, %if.end.i.i, %if.then.i.i111.i, %sw.epilog.i, %if.then.i.i100.i, %if.then3.i, %if.then.i.i.i, %if.then.i, %sw.bb, %entry, %if.end12, %sw.bb19, %if.end15
  ret void
}

declare %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def*) #2

declare i64 @etarsingle(%struct.realvaluetype* byval align 8) #2

declare void @etardouble(%struct.realvaluetype* byval align 8, i64*) #2

declare void @etarldouble(%struct.realvaluetype* byval align 8, i64*) #2

declare void @etartdouble(%struct.realvaluetype* byval align 8, i64*) #2

declare %struct.varray_head_tag* @varray_init(i64, i64, i8*) #2

declare void @ggc_add_tree_varray_root(%struct.varray_head_tag**, i32) #2

declare void @ggc_add_rtx_varray_root(%struct.varray_head_tag**, i32) #2

declare void @ggc_add_root(i8*, i32, i32, void (i8*)*) #2

; Function Attrs: nounwind uwtable
define internal void @mark_limbo_die_list(i8* nocapture readnone %ptr) #1 {
entry:
  %node.014 = load %struct.limbo_die_struct** @limbo_die_list, align 8
  %tobool15 = icmp eq %struct.limbo_die_struct* %node.014, null
  br i1 %tobool15, label %for.end, label %do.body

do.body:                                          ; preds = %entry, %for.inc
  %node.016 = phi %struct.limbo_die_struct* [ %node.0, %for.inc ], [ %node.014, %entry ]
  %created_for = getelementptr inbounds %struct.limbo_die_struct* %node.016, i64 0, i32 1
  %0 = load %union.tree_node** %created_for, align 8, !tbaa !64
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %1 = bitcast %union.tree_node* %0 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %1) #5
  %tobool1 = icmp eq i32 %call, 0
  br i1 %tobool1, label %do.body2, label %for.inc

do.body2:                                         ; preds = %land.lhs.true
  %2 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !6
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 1
  %3 = load i64* %elements_used, align 8, !tbaa !67
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 0
  %4 = load i64* %num_elements, align 8, !tbaa !126
  %cmp3 = icmp ult i64 %3, %4
  br i1 %cmp3, label %if.end, label %if.then4

if.then4:                                         ; preds = %do.body2
  %mul = shl i64 %4, 1
  %call6 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %2, i64 %mul) #5
  store %struct.varray_head_tag* %call6, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !6
  %elements_used7.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call6, i64 0, i32 1
  %.pre = load i64* %elements_used7.phi.trans.insert, align 8, !tbaa !67
  br label %if.end

if.end:                                           ; preds = %do.body2, %if.then4
  %5 = phi i64 [ %3, %do.body2 ], [ %.pre, %if.then4 ]
  %6 = phi %struct.varray_head_tag* [ %2, %do.body2 ], [ %call6, %if.then4 ]
  %elements_used7 = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 1
  %inc = add i64 %5, 1
  store i64 %inc, i64* %elements_used7, align 8, !tbaa !67
  %data = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %5
  store %union.tree_node* %0, %union.tree_node** %arrayidx, align 8, !tbaa !6
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %do.body, %if.end
  %next = getelementptr inbounds %struct.limbo_die_struct* %node.016, i64 0, i32 2
  %node.0 = load %struct.limbo_die_struct** %next, align 8
  %tobool = icmp eq %struct.limbo_die_struct* %node.0, null
  br i1 %tobool, label %for.end, label %do.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

declare i32 @ggc_set_mark(i8*) #2

declare void @set_decl_origin_self(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_type_die_for_member(%union.tree_node* %type, %union.tree_node* %member, %struct.die_struct* %context_die) #1 {
entry:
  tail call fastcc void @gen_type_die(%union.tree_node* %type, %struct.die_struct* %context_die)
  %chain = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0
  %0 = load %union.tree_node** %chain, align 8, !tbaa !88
  %external_flag = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 5
  %1 = bitcast i48* %external_flag to i64*
  %bf.load = load i64* %1, align 8
  %bf.cast = and i64 %bf.load, 256
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.end12, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %member.idx = getelementptr %union.tree_node* %member, i64 0, i32 0, i32 3
  %member.idx.val = load i32* %member.idx, align 4, !tbaa !65
  %2 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i24 = icmp ugt i32 %2, %member.idx.val
  br i1 %cmp.i24, label %lookup_decl_die.exit, label %if.then

lookup_decl_die.exit:                             ; preds = %land.lhs.true
  %idxprom.i = zext i32 %member.idx.val to i64
  %3 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i25 = getelementptr inbounds %struct.die_struct** %3, i64 %idxprom.i
  %4 = load %struct.die_struct** %arrayidx.i25, align 8, !tbaa !6
  %tobool1 = icmp eq %struct.die_struct* %4, null
  br i1 %tobool1, label %if.then, label %if.end12

if.then:                                          ; preds = %land.lhs.true, %lookup_decl_die.exit
  %abstract_flag.i = getelementptr inbounds %union.tree_node* %member, i64 0, i32 0, i32 5
  %5 = bitcast i48* %abstract_flag.i to i64*
  %bf.load.i = load i64* %5, align 8
  %bf.cast.i = and i64 %bf.load.i, 32768
  %tobool.i = icmp ne i64 %bf.cast.i, 0
  %abstract_origin4.phi.trans.insert.i = getelementptr inbounds %union.tree_node* %member, i64 0, i32 0, i32 13
  %.pre.i22 = load %union.tree_node** %abstract_origin4.phi.trans.insert.i, align 8, !tbaa !89
  %cmp.i23 = icmp eq %union.tree_node* %.pre.i22, %member
  %or.cond.i = and i1 %tobool.i, %cmp.i23
  %tobool327 = icmp eq %union.tree_node* %.pre.i22, null
  %tobool3 = or i1 %or.cond.i, %tobool327
  br i1 %tobool3, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 10121, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.gen_type_die_for_member, i64 0, i64 0)) #7
  unreachable

if.end:                                           ; preds = %if.then
  %6 = load %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used.i19 = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 1
  %7 = load i64* %elements_used.i19, align 8, !tbaa !67
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 0
  %8 = load i64* %num_elements.i, align 8, !tbaa !126
  %cmp.i20 = icmp ult i64 %7, %8
  br i1 %cmp.i20, label %push_decl_scope.exit, label %if.then.i21

if.then.i21:                                      ; preds = %if.end
  %mul.i = shl i64 %8, 1
  %call.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %6, i64 %mul.i) #5
  store %struct.varray_head_tag* %call.i, %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used2.phi.trans.insert.i = getelementptr inbounds %struct.varray_head_tag* %call.i, i64 0, i32 1
  %.pre.i = load i64* %elements_used2.phi.trans.insert.i, align 8, !tbaa !67
  br label %push_decl_scope.exit

push_decl_scope.exit:                             ; preds = %if.end, %if.then.i21
  %9 = phi i64 [ %7, %if.end ], [ %.pre.i, %if.then.i21 ]
  %10 = phi %struct.varray_head_tag* [ %6, %if.end ], [ %call.i, %if.then.i21 ]
  %elements_used2.i = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 1
  %inc.i = add i64 %9, 1
  store i64 %inc.i, i64* %elements_used2.i, align 8, !tbaa !67
  %data.i = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 4
  %tree.i = bitcast %union.varray_data_tag* %data.i to [1 x %union.tree_node*]*
  %arrayidx.i = getelementptr inbounds [1 x %union.tree_node*]* %tree.i, i64 0, i64 %9
  store %union.tree_node* %type, %union.tree_node** %arrayidx.i, align 8, !tbaa !6
  %code = getelementptr inbounds %union.tree_node* %member, i64 0, i32 0, i32 0, i32 2
  %bf.load6 = load i32* %code, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  %cmp = icmp eq i32 %bf.clear7, 30
  %type.idx = getelementptr %union.tree_node* %type, i64 0, i32 0, i32 10
  %type.idx.val = load %union.tree_node** %type.idx, align 8
  %11 = bitcast %union.tree_node* %type.idx.val to %struct.die_struct*
  br i1 %cmp, label %if.then8, label %if.else

if.then8:                                         ; preds = %push_decl_scope.exit
  tail call fastcc void @gen_subprogram_die(%union.tree_node* %member, %struct.die_struct* %11)
  br label %if.end11

if.else:                                          ; preds = %push_decl_scope.exit
  tail call fastcc void @gen_variable_die(%union.tree_node* %member, %struct.die_struct* %11)
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  %12 = load %struct.varray_head_tag** @decl_scope_table, align 8, !tbaa !6
  %elements_used.i = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 1
  %13 = load i64* %elements_used.i, align 8, !tbaa !67
  %cmp.i = icmp eq i64 %13, 0
  br i1 %cmp.i, label %if.then.i, label %pop_decl_scope.exit

if.then.i:                                        ; preds = %if.end11
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9553, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.pop_decl_scope, i64 0, i64 0)) #7
  unreachable

pop_decl_scope.exit:                              ; preds = %if.end11
  %dec.i = add i64 %13, -1
  store i64 %dec.i, i64* %elements_used.i, align 8, !tbaa !67
  br label %if.end12

if.end12:                                         ; preds = %lookup_decl_die.exit, %entry, %pop_decl_scope.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_subprogram_die(%union.tree_node* %decl, %struct.die_struct* %context_die) #1 {
entry:
  %label_id = alloca [30 x i8], align 16
  %abstract_flag.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %0 = bitcast i48* %abstract_flag.i to i64*
  %bf.load.i821 = load i64* %0, align 8
  %bf.cast.i = and i64 %bf.load.i821, 32768
  %tobool.i822 = icmp ne i64 %bf.cast.i, 0
  %abstract_origin4.phi.trans.insert.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %.pre.i823 = load %union.tree_node** %abstract_origin4.phi.trans.insert.i, align 8, !tbaa !89
  %cmp.i824 = icmp eq %union.tree_node* %.pre.i823, %decl
  %or.cond.i = and i1 %tobool.i822, %cmp.i824
  %retval.0.i825 = select i1 %or.cond.i, %union.tree_node* null, %union.tree_node* %.pre.i823
  %decl.idx = getelementptr %union.tree_node* %decl, i64 0, i32 0, i32 3
  %decl.idx.val = load i32* %decl.idx, align 4, !tbaa !65
  %1 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i826 = icmp ugt i32 %1, %decl.idx.val
  br i1 %cmp.i826, label %cond.true.i, label %lookup_decl_die.exit

cond.true.i:                                      ; preds = %entry
  %idxprom.i827 = zext i32 %decl.idx.val to i64
  %2 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i828 = getelementptr inbounds %struct.die_struct** %2, i64 %idxprom.i827
  %3 = load %struct.die_struct** %arrayidx.i828, align 8, !tbaa !6
  br label %lookup_decl_die.exit

lookup_decl_die.exit:                             ; preds = %entry, %cond.true.i
  %cond.i829 = phi %struct.die_struct* [ %3, %cond.true.i ], [ null, %entry ]
  %4 = load %union.tree_node** @current_function_decl, align 8, !tbaa !6
  %cmp = icmp eq %union.tree_node* %4, %decl
  br i1 %cmp, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %lookup_decl_die.exit
  %tobool.i830 = icmp eq %struct.die_struct* %context_die, null
  br i1 %tobool.i830, label %if.end10, label %land.rhs.i

land.rhs.i:                                       ; preds = %lor.rhs
  %die_tag.i831 = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 0
  %5 = load i32* %die_tag.i831, align 4, !tbaa !69
  %6 = and i32 %5, -5
  %7 = icmp eq i32 %6, 19
  br label %lor.end

lor.end:                                          ; preds = %land.rhs.i, %lookup_decl_die.exit
  %8 = phi i1 [ true, %lookup_decl_die.exit ], [ %7, %land.rhs.i ]
  %tobool3 = icmp ne %union.tree_node* %retval.0.i825, null
  %or.cond = and i1 %tobool3, %8
  %or.cond.not = xor i1 %or.cond, true
  %tobool.i832 = icmp eq %struct.die_struct* %context_die, null
  %or.cond1072 = or i1 %tobool.i832, %or.cond.not
  br i1 %or.cond1072, label %if.end10, label %land.rhs.i834

land.rhs.i834:                                    ; preds = %lor.end
  %die_tag.i833 = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 0
  %9 = load i32* %die_tag.i833, align 4, !tbaa !69
  %10 = and i32 %9, -5
  %11 = icmp eq i32 %10, 19
  br i1 %11, label %if.then, label %if.end10

if.then:                                          ; preds = %land.rhs.i834
  %tobool8 = icmp eq %struct.die_struct* %cond.i829, null
  br i1 %tobool8, label %if.else70, label %if.then9

if.then9:                                         ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 10204, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.gen_subprogram_die, i64 0, i64 0)) #7
  unreachable

if.end10:                                         ; preds = %lor.rhs, %lor.end, %land.rhs.i834
  %tobool.i8321122 = phi i1 [ %tobool.i832, %lor.end ], [ %tobool.i832, %land.rhs.i834 ], [ true, %lor.rhs ]
  %12 = phi i1 [ %8, %lor.end ], [ %8, %land.rhs.i834 ], [ false, %lor.rhs ]
  %cmp11 = icmp eq %union.tree_node* %retval.0.i825, null
  br i1 %cmp11, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.end10
  br i1 %12, label %land.lhs.true14, label %if.end18

land.lhs.true14:                                  ; preds = %if.then12
  br i1 %tobool.i8321122, label %if.then17, label %for.body.i838

for.body.i838:                                    ; preds = %land.lhs.true14, %for.inc.i
  %context_die.addr.07.i = phi %struct.die_struct* [ %14, %for.inc.i ], [ %context_die, %land.lhs.true14 ]
  %die_tag.i837 = getelementptr inbounds %struct.die_struct* %context_die.addr.07.i, i64 0, i32 0
  %13 = load i32* %die_tag.i837, align 4, !tbaa !69
  switch i32 %13, label %for.inc.i [
    i32 29, label %if.end18
    i32 46, label %if.end18
  ]

for.inc.i:                                        ; preds = %for.body.i838
  %die_parent.i = getelementptr inbounds %struct.die_struct* %context_die.addr.07.i, i64 0, i32 3
  %14 = load %struct.die_struct** %die_parent.i, align 8, !tbaa !55
  %tobool.i839 = icmp eq %struct.die_struct* %14, null
  br i1 %tobool.i839, label %if.then17, label %for.body.i838

if.then17:                                        ; preds = %for.inc.i, %land.lhs.true14
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 10210, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.gen_subprogram_die, i64 0, i64 0)) #7
  unreachable

if.end18:                                         ; preds = %for.body.i838, %for.body.i838, %if.then12
  %tobool19 = icmp eq %struct.die_struct* %cond.i829, null
  br i1 %tobool19, label %if.end23, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %if.end18
  %die_parent = getelementptr inbounds %struct.die_struct* %cond.i829, i64 0, i32 3
  %15 = load %struct.die_struct** %die_parent, align 8, !tbaa !55
  %cmp21 = icmp eq %struct.die_struct* %15, null
  %cmp.i841 = icmp ne %struct.die_struct* %context_die, null
  %or.cond1071 = and i1 %cmp21, %cmp.i841
  br i1 %or.cond1071, label %if.then.i844, label %if.end23

if.then.i844:                                     ; preds = %land.lhs.true20
  %cmp2.i = icmp eq %struct.die_struct* %cond.i829, %context_die
  br i1 %cmp2.i, label %if.then3.i, label %if.end.i846

if.then3.i:                                       ; preds = %if.then.i844
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i846:                                      ; preds = %if.then.i844
  store %struct.die_struct* %context_die, %struct.die_struct** %die_parent, align 8, !tbaa !55
  %die_child.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %16 = load %struct.die_struct** %die_child.i, align 8, !tbaa !62
  %die_sib.i = getelementptr inbounds %struct.die_struct* %cond.i829, i64 0, i32 5
  store %struct.die_struct* %16, %struct.die_struct** %die_sib.i, align 8, !tbaa !63
  store %struct.die_struct* %cond.i829, %struct.die_struct** %die_child.i, align 8, !tbaa !62
  br label %if.end23

if.end23:                                         ; preds = %if.end.i846, %if.end18, %land.lhs.true20
  %call.i847 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %17 = bitcast i8* %call.i847 to %struct.die_struct*
  %die_tag.i848 = bitcast i8* %call.i847 to i32*
  store i32 46, i32* %die_tag.i848, align 4, !tbaa !69
  br i1 %tobool.i8321122, label %if.else.i863, label %if.then.i851

if.then.i851:                                     ; preds = %if.end23
  %cmp1.i.i850 = icmp eq i8* %call.i847, null
  br i1 %cmp1.i.i850, label %new_die.exit865, label %if.then.i.i853

if.then.i.i853:                                   ; preds = %if.then.i851
  %cmp2.i.i852 = icmp eq %struct.die_struct* %17, %context_die
  br i1 %cmp2.i.i852, label %if.then3.i.i854, label %if.end.i.i858

if.then3.i.i854:                                  ; preds = %if.then.i.i853
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i858:                                    ; preds = %if.then.i.i853
  %die_parent.i.i855 = getelementptr inbounds i8* %call.i847, i64 24
  %18 = bitcast i8* %die_parent.i.i855 to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %18, align 8, !tbaa !55
  %die_child.i.i856 = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %19 = load %struct.die_struct** %die_child.i.i856, align 8, !tbaa !62
  %die_sib.i.i857 = getelementptr inbounds i8* %call.i847, i64 40
  %20 = bitcast i8* %die_sib.i.i857 to %struct.die_struct**
  store %struct.die_struct* %19, %struct.die_struct** %20, align 8, !tbaa !63
  store %struct.die_struct* %17, %struct.die_struct** %die_child.i.i856, align 8, !tbaa !62
  br label %new_die.exit865

if.else.i863:                                     ; preds = %if.end23
  %call1.i859 = call noalias i8* @xmalloc(i64 24) #5
  %21 = bitcast i8* %call1.i859 to %struct.limbo_die_struct*
  %die2.i860 = bitcast i8* %call1.i859 to %struct.die_struct**
  store %struct.die_struct* %17, %struct.die_struct** %die2.i860, align 8, !tbaa !54
  %created_for.i861 = getelementptr inbounds i8* %call1.i859, i64 8
  %22 = bitcast i8* %created_for.i861 to %union.tree_node**
  store %union.tree_node* %decl, %union.tree_node** %22, align 8, !tbaa !64
  %23 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i862 = getelementptr inbounds i8* %call1.i859, i64 16
  %24 = bitcast i8* %next.i862 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %23, %struct.limbo_die_struct** %24, align 8, !tbaa !52
  store %struct.limbo_die_struct* %21, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit865

new_die.exit865:                                  ; preds = %if.then.i851, %if.end.i.i858, %if.else.i863
  %code.i = getelementptr inbounds %union.tree_node* %retval.0.i825, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1012 = load i32* %code.i, align 8
  %bf.clear.i1013 = and i32 %bf.load.i1012, 255
  %cmp.i1014 = icmp eq i32 %bf.clear.i1013, 30
  br i1 %cmp.i1014, label %if.end11.i, label %if.then.i1016

if.then.i1016:                                    ; preds = %new_die.exit865
  %idxprom50.i = zext i32 %bf.clear.i1013 to i64
  %arrayidx.i1015 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50.i
  %25 = load i8* %arrayidx.i1015, align 1, !tbaa !1
  %cmp5.i = icmp eq i8 %25, 116
  br i1 %cmp5.i, label %if.then7.i, label %if.end.i1019

if.then7.i:                                       ; preds = %if.then.i1016
  %chain.i = getelementptr inbounds %union.tree_node* %retval.0.i825, i64 0, i32 0, i32 0, i32 0
  %26 = load %union.tree_node** %chain.i, align 8, !tbaa !88
  br label %if.end.i1019

if.end.i1019:                                     ; preds = %if.then7.i, %if.then.i1016
  %fn.0.i = phi %union.tree_node* [ %26, %if.then7.i ], [ %retval.0.i825, %if.then.i1016 ]
  %call.i1017 = call %union.tree_node* @decl_function_context(%union.tree_node* %fn.0.i) #5
  %tobool.i1018 = icmp eq %union.tree_node* %call.i1017, null
  br i1 %tobool.i1018, label %if.end11.i, label %if.then9.i1020

if.then9.i1020:                                   ; preds = %if.end.i1019
  call void @dwarf2out_abstract_function(%union.tree_node* %call.i1017) #5
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i1020, %if.end.i1019, %new_die.exit865
  %bf.load14.i = load i32* %code.i, align 8
  %bf.clear15.i = and i32 %bf.load14.i, 255
  %idxprom1649.i = zext i32 %bf.clear15.i to i64
  %arrayidx17.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1649.i
  %27 = load i8* %arrayidx17.i, align 1, !tbaa !1
  switch i8 %27, label %if.then38.i [
    i8 100, label %if.then21.i
    i8 116, label %if.then32.i
  ]

if.then21.i:                                      ; preds = %if.end11.i
  %origin.idx.i = getelementptr %union.tree_node* %retval.0.i825, i64 0, i32 0, i32 3
  %origin.idx.val.i = load i32* %origin.idx.i, align 4, !tbaa !65
  %28 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i1021 = icmp ugt i32 %28, %origin.idx.val.i
  br i1 %cmp.i.i1021, label %cond.true.i.i, label %if.then38.i

cond.true.i.i:                                    ; preds = %if.then21.i
  %idxprom.i.i1022 = zext i32 %origin.idx.val.i to i64
  %29 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i = getelementptr inbounds %struct.die_struct** %29, i64 %idxprom.i.i1022
  %30 = load %struct.die_struct** %arrayidx.i.i, align 8, !tbaa !6
  br label %if.end35.i

if.then32.i:                                      ; preds = %if.end11.i
  %origin.idx51.i = getelementptr %union.tree_node* %retval.0.i825, i64 0, i32 0, i32 10
  %origin.idx51.val.i = load %union.tree_node** %origin.idx51.i, align 8
  %31 = bitcast %union.tree_node* %origin.idx51.val.i to %struct.die_struct*
  br label %if.end35.i

if.end35.i:                                       ; preds = %cond.true.i.i, %if.then32.i
  %origin_die.0.i = phi %struct.die_struct* [ %31, %if.then32.i ], [ %30, %cond.true.i.i ]
  %cmp36.i = icmp eq %struct.die_struct* %origin_die.0.i, null
  br i1 %cmp36.i, label %if.then38.i, label %add_abstract_origin_attribute.exit

if.then38.i:                                      ; preds = %if.then21.i, %if.end11.i, %if.end35.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9459, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.add_abstract_origin_attribute, i64 0, i64 0)) #7
  unreachable

add_abstract_origin_attribute.exit:               ; preds = %if.end35.i
  %call.i1045 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i1046 = getelementptr inbounds i8* %call.i1045, i64 8
  %32 = bitcast i8* %dw_attr_next.i1046 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %32, align 8, !tbaa !72
  %dw_attr.i1047 = bitcast i8* %call.i1045 to i32*
  store i32 49, i32* %dw_attr.i1047, align 4, !tbaa !57
  %dw_attr_val.i1048 = getelementptr inbounds i8* %call.i1045, i64 16
  %val_class.i1049 = bitcast i8* %dw_attr_val.i1048 to i32*
  store i32 10, i32* %val_class.i1049, align 4, !tbaa !59
  %v.i1050 = getelementptr inbounds i8* %call.i1045, i64 24
  %die2.i1051 = bitcast i8* %v.i1050 to %struct.die_struct**
  store %struct.die_struct* %origin_die.0.i, %struct.die_struct** %die2.i1051, align 8, !tbaa !60
  %external.i1052 = getelementptr inbounds i8* %call.i1045, i64 32
  %33 = bitcast i8* %external.i1052 to i32*
  store i32 0, i32* %33, align 4, !tbaa !108
  %cmp.i.i1053 = icmp ne i8* %call.i847, null
  %cmp1.i.i1054 = icmp ne i8* %call.i1045, null
  %or.cond.i.i1055 = and i1 %cmp.i.i1053, %cmp1.i.i1054
  br i1 %or.cond.i.i1055, label %if.then.i.i1057, label %if.end112

if.then.i.i1057:                                  ; preds = %add_abstract_origin_attribute.exit
  %34 = bitcast i8* %call.i1045 to %struct.dw_attr_struct*
  %die_attr.i.i1056 = getelementptr inbounds i8* %call.i847, i64 16
  %35 = bitcast i8* %die_attr.i.i1056 to %struct.dw_attr_struct**
  %36 = load %struct.dw_attr_struct** %35, align 8, !tbaa !73
  store %struct.dw_attr_struct* %36, %struct.dw_attr_struct** %32, align 8, !tbaa !72
  store %struct.dw_attr_struct* %34, %struct.dw_attr_struct** %35, align 8, !tbaa !73
  br i1 %12, label %if.then114, label %if.else132

if.else:                                          ; preds = %if.end10
  %tobool25 = icmp eq %struct.die_struct* %cond.i829, null
  br i1 %tobool25, label %if.else70, label %if.then26

if.then26:                                        ; preds = %if.else
  %filename = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 1
  %37 = load i8** %filename, align 8, !tbaa !127
  %call28 = call fastcc i32 @lookup_filename(i8* %37)
  br label %tailrecurse.i.i906

tailrecurse.i.i906:                               ; preds = %for.end.i.i929, %if.then26
  %die.tr.i.i904 = phi %struct.die_struct* [ %cond.i829, %if.then26 ], [ %spec.1.i.i923, %for.end.i.i929 ]
  %cmp.i.i905 = icmp eq %struct.die_struct* %die.tr.i.i904, null
  br i1 %cmp.i.i905, label %tailrecurse.i.i938, label %if.then.i.i910

if.then.i.i910:                                   ; preds = %tailrecurse.i.i906
  %die_attr.i.i907 = getelementptr inbounds %struct.die_struct* %die.tr.i.i904, i64 0, i32 2
  %a.027.i.i908 = load %struct.dw_attr_struct** %die_attr.i.i907, align 8
  %cmp128.i.i909 = icmp eq %struct.dw_attr_struct* %a.027.i.i908, null
  br i1 %cmp128.i.i909, label %tailrecurse.i.i938, label %for.body.i.i914

for.body.i.i914:                                  ; preds = %if.then.i.i910, %for.inc.i.i927
  %a.030.i.i911 = phi %struct.dw_attr_struct* [ %a.0.i.i925, %for.inc.i.i927 ], [ %a.027.i.i908, %if.then.i.i910 ]
  %spec.029.i.i912 = phi %struct.die_struct* [ %spec.1.i.i923, %for.inc.i.i927 ], [ null, %if.then.i.i910 ]
  %dw_attr.i.i913 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i911, i64 0, i32 0
  %38 = load i32* %dw_attr.i.i913, align 4, !tbaa !57
  switch i32 %38, label %for.inc.i.i927 [
    i32 60, label %land.lhs.true.i.i932
    i32 71, label %land.lhs.true.i.i.i918
    i32 49, label %land.lhs.true.i.i.i918
  ]

land.lhs.true.i.i.i918:                           ; preds = %for.body.i.i914, %for.body.i.i914
  %a.idx.i.i.i915 = getelementptr %struct.dw_attr_struct* %a.030.i.i911, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i916 = load i32* %a.idx.i.i.i915, align 4, !tbaa !59
  %cmp.i.i.i917 = icmp eq i32 %a.idx.val.i.i.i916, 10
  br i1 %cmp.i.i.i917, label %AT_ref.exit.i.i922, label %if.end.i.i.i919

if.end.i.i.i919:                                  ; preds = %land.lhs.true.i.i.i918
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i922:                               ; preds = %land.lhs.true.i.i.i918
  %v.i.i.i920 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i911, i64 0, i32 2, i32 1
  %die.i.i.i921 = bitcast %union.anon.3* %v.i.i.i920 to %struct.die_struct**
  %39 = load %struct.die_struct** %die.i.i.i921, align 8, !tbaa !60
  br label %for.inc.i.i927

for.inc.i.i927:                                   ; preds = %AT_ref.exit.i.i922, %for.body.i.i914
  %spec.1.i.i923 = phi %struct.die_struct* [ %39, %AT_ref.exit.i.i922 ], [ %spec.029.i.i912, %for.body.i.i914 ]
  %dw_attr_next.i.i924 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i911, i64 0, i32 1
  %a.0.i.i925 = load %struct.dw_attr_struct** %dw_attr_next.i.i924, align 8
  %cmp1.i.i926 = icmp eq %struct.dw_attr_struct* %a.0.i.i925, null
  br i1 %cmp1.i.i926, label %for.end.i.i929, label %for.body.i.i914

for.end.i.i929:                                   ; preds = %for.inc.i.i927
  %tobool.i.i928 = icmp eq %struct.die_struct* %spec.1.i.i923, null
  br i1 %tobool.i.i928, label %tailrecurse.i.i938, label %tailrecurse.i.i906

land.lhs.true.i.i932:                             ; preds = %for.body.i.i914
  %a.idx.i.i930 = getelementptr %struct.dw_attr_struct* %a.030.i.i911, i64 0, i32 2, i32 0
  %a.idx.val.i.i931 = load i32* %a.idx.i.i930, align 4, !tbaa !59
  %cmp.i2.i = icmp eq i32 %a.idx.val.i.i931, 9
  br i1 %cmp.i2.i, label %get_AT_flag.exit, label %if.end.i.i933

if.end.i.i933:                                    ; preds = %land.lhs.true.i.i932
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4387, i8* getelementptr inbounds ([8 x i8]* @__FUNCTION__.AT_flag, i64 0, i64 0)) #7
  unreachable

get_AT_flag.exit:                                 ; preds = %land.lhs.true.i.i932
  %v.i.i934 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i911, i64 0, i32 2, i32 1
  %val_flag.i.i = bitcast %union.anon.3* %v.i.i934 to i8*
  %40 = load i8* %val_flag.i.i, align 1, !tbaa !1
  %tobool30 = icmp eq i8 %40, 0
  br i1 %tobool30, label %tailrecurse.i.i938, label %if.end38

tailrecurse.i.i938:                               ; preds = %get_AT_flag.exit, %if.then.i.i910, %tailrecurse.i.i906, %for.end.i.i929, %for.end.i.i963
  %die.tr.i.i936 = phi %struct.die_struct* [ %spec.1.i.i957, %for.end.i.i963 ], [ %cond.i829, %for.end.i.i929 ], [ %cond.i829, %tailrecurse.i.i906 ], [ %cond.i829, %if.then.i.i910 ], [ %cond.i829, %get_AT_flag.exit ]
  %cmp.i.i937 = icmp eq %struct.die_struct* %die.tr.i.i936, null
  br i1 %cmp.i.i937, label %if.then34, label %if.then.i.i942

if.then.i.i942:                                   ; preds = %tailrecurse.i.i938
  %die_attr.i.i939 = getelementptr inbounds %struct.die_struct* %die.tr.i.i936, i64 0, i32 2
  %a.027.i.i940 = load %struct.dw_attr_struct** %die_attr.i.i939, align 8
  %cmp128.i.i941 = icmp eq %struct.dw_attr_struct* %a.027.i.i940, null
  br i1 %cmp128.i.i941, label %if.then34, label %for.body.i.i947

for.body.i.i947:                                  ; preds = %if.then.i.i942, %for.inc.i.i961
  %a.030.i.i943 = phi %struct.dw_attr_struct* [ %a.0.i.i959, %for.inc.i.i961 ], [ %a.027.i.i940, %if.then.i.i942 ]
  %spec.029.i.i944 = phi %struct.die_struct* [ %spec.1.i.i957, %for.inc.i.i961 ], [ null, %if.then.i.i942 ]
  %dw_attr.i.i945 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i943, i64 0, i32 0
  %41 = load i32* %dw_attr.i.i945, align 4, !tbaa !57
  switch i32 %41, label %for.inc.i.i961 [
    i32 32, label %land.lhs.true.i.i967
    i32 71, label %land.lhs.true.i.i.i952
    i32 49, label %land.lhs.true.i.i.i952
  ]

land.lhs.true.i.i.i952:                           ; preds = %for.body.i.i947, %for.body.i.i947
  %a.idx.i.i.i949 = getelementptr %struct.dw_attr_struct* %a.030.i.i943, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i950 = load i32* %a.idx.i.i.i949, align 4, !tbaa !59
  %cmp.i.i.i951 = icmp eq i32 %a.idx.val.i.i.i950, 10
  br i1 %cmp.i.i.i951, label %AT_ref.exit.i.i956, label %if.end.i.i.i953

if.end.i.i.i953:                                  ; preds = %land.lhs.true.i.i.i952
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i956:                               ; preds = %land.lhs.true.i.i.i952
  %v.i.i.i954 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i943, i64 0, i32 2, i32 1
  %die.i.i.i955 = bitcast %union.anon.3* %v.i.i.i954 to %struct.die_struct**
  %42 = load %struct.die_struct** %die.i.i.i955, align 8, !tbaa !60
  br label %for.inc.i.i961

for.inc.i.i961:                                   ; preds = %for.body.i.i947, %AT_ref.exit.i.i956
  %spec.1.i.i957 = phi %struct.die_struct* [ %42, %AT_ref.exit.i.i956 ], [ %spec.029.i.i944, %for.body.i.i947 ]
  %dw_attr_next.i.i958 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i943, i64 0, i32 1
  %a.0.i.i959 = load %struct.dw_attr_struct** %dw_attr_next.i.i958, align 8
  %cmp1.i.i960 = icmp eq %struct.dw_attr_struct* %a.0.i.i959, null
  br i1 %cmp1.i.i960, label %for.end.i.i963, label %for.body.i.i947

for.end.i.i963:                                   ; preds = %for.inc.i.i961
  %tobool.i.i962 = icmp eq %struct.die_struct* %spec.1.i.i957, null
  br i1 %tobool.i.i962, label %if.then34, label %tailrecurse.i.i938

land.lhs.true.i.i967:                             ; preds = %for.body.i.i947
  %a.idx.i.i964 = getelementptr %struct.dw_attr_struct* %a.030.i.i943, i64 0, i32 2, i32 0
  %a.idx.val.i.i965 = load i32* %a.idx.i.i964, align 4, !tbaa !59
  %cmp.i4.i966 = icmp eq i32 %a.idx.val.i.i965, 6
  br i1 %cmp.i4.i966, label %get_AT_unsigned.exit973, label %if.end.i.i968

if.end.i.i968:                                    ; preds = %land.lhs.true.i.i967
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

get_AT_unsigned.exit973:                          ; preds = %land.lhs.true.i.i967
  %val_unsigned.i.i969 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i943, i64 0, i32 2, i32 1, i32 0, i32 0
  %43 = load i64* %val_unsigned.i.i969, align 8, !tbaa !8
  %phitmp.i970 = trunc i64 %43 to i32
  %tobool33 = icmp eq i32 %phitmp.i970, 0
  br i1 %tobool33, label %if.then34, label %if.end38

if.then34:                                        ; preds = %if.then.i.i942, %tailrecurse.i.i938, %for.end.i.i963, %get_AT_unsigned.exit973
  %44 = load %struct.diagnostic_context** @global_dc, align 8, !tbaa !6
  %arrayidx = getelementptr inbounds %struct.diagnostic_context* %44, i64 0, i32 0, i32 0, i32 9, i64 3
  %45 = load i32* %arrayidx, align 4, !tbaa !4
  %tobool35 = icmp eq i32 %45, 0
  br i1 %tobool35, label %if.end37, label %if.end245

if.end37:                                         ; preds = %if.then34
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 10237, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.gen_subprogram_die, i64 0, i64 0)) #7
  unreachable

if.end38:                                         ; preds = %get_AT_unsigned.exit973, %get_AT_flag.exit
  %die_parent39 = getelementptr inbounds %struct.die_struct* %cond.i829, i64 0, i32 3
  %46 = load %struct.die_struct** %die_parent39, align 8, !tbaa !55
  %47 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  %cmp40 = icmp eq %struct.die_struct* %46, %47
  %or.cond246 = or i1 %cmp40, %tobool.i8321122
  br i1 %or.cond246, label %land.lhs.true42, label %if.else53

land.lhs.true42:                                  ; preds = %if.end38
  %bf.load = load i64* %0, align 8
  %bf.cast = and i64 %bf.load, 4194304
  %tobool44 = icmp eq i64 %bf.cast, 0
  br i1 %tobool44, label %tailrecurse.i.i976, label %if.then.i811

tailrecurse.i.i976:                               ; preds = %land.lhs.true42, %for.end.i.i1001
  %die.tr.i.i974 = phi %struct.die_struct* [ %spec.1.i.i995, %for.end.i.i1001 ], [ %cond.i829, %land.lhs.true42 ]
  %cmp.i.i975 = icmp eq %struct.die_struct* %die.tr.i.i974, null
  br i1 %cmp.i.i975, label %get_AT_unsigned.exit1011, label %if.then.i.i980

if.then.i.i980:                                   ; preds = %tailrecurse.i.i976
  %die_attr.i.i977 = getelementptr inbounds %struct.die_struct* %die.tr.i.i974, i64 0, i32 2
  %a.027.i.i978 = load %struct.dw_attr_struct** %die_attr.i.i977, align 8
  %cmp128.i.i979 = icmp eq %struct.dw_attr_struct* %a.027.i.i978, null
  br i1 %cmp128.i.i979, label %get_AT_unsigned.exit1011, label %for.body.i.i985

for.body.i.i985:                                  ; preds = %if.then.i.i980, %for.inc.i.i999
  %a.030.i.i981 = phi %struct.dw_attr_struct* [ %a.0.i.i997, %for.inc.i.i999 ], [ %a.027.i.i978, %if.then.i.i980 ]
  %spec.029.i.i982 = phi %struct.die_struct* [ %spec.1.i.i995, %for.inc.i.i999 ], [ null, %if.then.i.i980 ]
  %dw_attr.i.i983 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i981, i64 0, i32 0
  %48 = load i32* %dw_attr.i.i983, align 4, !tbaa !57
  switch i32 %48, label %for.inc.i.i999 [
    i32 58, label %land.lhs.true.i.i1005
    i32 71, label %land.lhs.true.i.i.i990
    i32 49, label %land.lhs.true.i.i.i990
  ]

land.lhs.true.i.i.i990:                           ; preds = %for.body.i.i985, %for.body.i.i985
  %a.idx.i.i.i987 = getelementptr %struct.dw_attr_struct* %a.030.i.i981, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i988 = load i32* %a.idx.i.i.i987, align 4, !tbaa !59
  %cmp.i.i.i989 = icmp eq i32 %a.idx.val.i.i.i988, 10
  br i1 %cmp.i.i.i989, label %AT_ref.exit.i.i994, label %if.end.i.i.i991

if.end.i.i.i991:                                  ; preds = %land.lhs.true.i.i.i990
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i994:                               ; preds = %land.lhs.true.i.i.i990
  %v.i.i.i992 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i981, i64 0, i32 2, i32 1
  %die.i.i.i993 = bitcast %union.anon.3* %v.i.i.i992 to %struct.die_struct**
  %49 = load %struct.die_struct** %die.i.i.i993, align 8, !tbaa !60
  br label %for.inc.i.i999

for.inc.i.i999:                                   ; preds = %for.body.i.i985, %AT_ref.exit.i.i994
  %spec.1.i.i995 = phi %struct.die_struct* [ %49, %AT_ref.exit.i.i994 ], [ %spec.029.i.i982, %for.body.i.i985 ]
  %dw_attr_next.i.i996 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i981, i64 0, i32 1
  %a.0.i.i997 = load %struct.dw_attr_struct** %dw_attr_next.i.i996, align 8
  %cmp1.i.i998 = icmp eq %struct.dw_attr_struct* %a.0.i.i997, null
  br i1 %cmp1.i.i998, label %for.end.i.i1001, label %for.body.i.i985

for.end.i.i1001:                                  ; preds = %for.inc.i.i999
  %tobool.i.i1000 = icmp eq %struct.die_struct* %spec.1.i.i995, null
  br i1 %tobool.i.i1000, label %get_AT_unsigned.exit1011, label %tailrecurse.i.i976

land.lhs.true.i.i1005:                            ; preds = %for.body.i.i985
  %a.idx.i.i1002 = getelementptr %struct.dw_attr_struct* %a.030.i.i981, i64 0, i32 2, i32 0
  %a.idx.val.i.i1003 = load i32* %a.idx.i.i1002, align 4, !tbaa !59
  %cmp.i4.i1004 = icmp eq i32 %a.idx.val.i.i1003, 6
  br i1 %cmp.i4.i1004, label %AT_unsigned.exit.i1009, label %if.end.i.i1006

if.end.i.i1006:                                   ; preds = %land.lhs.true.i.i1005
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i1009:                           ; preds = %land.lhs.true.i.i1005
  %val_unsigned.i.i1007 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i981, i64 0, i32 2, i32 1, i32 0, i32 0
  %50 = load i64* %val_unsigned.i.i1007, align 8, !tbaa !8
  %phitmp.i1008 = trunc i64 %50 to i32
  br label %get_AT_unsigned.exit1011

get_AT_unsigned.exit1011:                         ; preds = %tailrecurse.i.i976, %if.then.i.i980, %for.end.i.i1001, %AT_unsigned.exit.i1009
  %cond.i1010 = phi i32 [ %phitmp.i1008, %AT_unsigned.exit.i1009 ], [ 0, %for.end.i.i1001 ], [ 0, %if.then.i.i980 ], [ 0, %tailrecurse.i.i976 ]
  %cmp47 = icmp eq i32 %cond.i1010, %call28
  br i1 %cmp47, label %tailrecurse.i.i868, label %if.else53

tailrecurse.i.i868:                               ; preds = %get_AT_unsigned.exit1011, %for.end.i.i893
  %die.tr.i.i866 = phi %struct.die_struct* [ %spec.1.i.i887, %for.end.i.i893 ], [ %cond.i829, %get_AT_unsigned.exit1011 ]
  %cmp.i.i867 = icmp eq %struct.die_struct* %die.tr.i.i866, null
  br i1 %cmp.i.i867, label %get_AT_unsigned.exit903, label %if.then.i.i872

if.then.i.i872:                                   ; preds = %tailrecurse.i.i868
  %die_attr.i.i869 = getelementptr inbounds %struct.die_struct* %die.tr.i.i866, i64 0, i32 2
  %a.027.i.i870 = load %struct.dw_attr_struct** %die_attr.i.i869, align 8
  %cmp128.i.i871 = icmp eq %struct.dw_attr_struct* %a.027.i.i870, null
  br i1 %cmp128.i.i871, label %get_AT_unsigned.exit903, label %for.body.i.i877

for.body.i.i877:                                  ; preds = %if.then.i.i872, %for.inc.i.i891
  %a.030.i.i873 = phi %struct.dw_attr_struct* [ %a.0.i.i889, %for.inc.i.i891 ], [ %a.027.i.i870, %if.then.i.i872 ]
  %spec.029.i.i874 = phi %struct.die_struct* [ %spec.1.i.i887, %for.inc.i.i891 ], [ null, %if.then.i.i872 ]
  %dw_attr.i.i875 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i873, i64 0, i32 0
  %51 = load i32* %dw_attr.i.i875, align 4, !tbaa !57
  switch i32 %51, label %for.inc.i.i891 [
    i32 59, label %land.lhs.true.i.i897
    i32 71, label %land.lhs.true.i.i.i882
    i32 49, label %land.lhs.true.i.i.i882
  ]

land.lhs.true.i.i.i882:                           ; preds = %for.body.i.i877, %for.body.i.i877
  %a.idx.i.i.i879 = getelementptr %struct.dw_attr_struct* %a.030.i.i873, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i880 = load i32* %a.idx.i.i.i879, align 4, !tbaa !59
  %cmp.i.i.i881 = icmp eq i32 %a.idx.val.i.i.i880, 10
  br i1 %cmp.i.i.i881, label %AT_ref.exit.i.i886, label %if.end.i.i.i883

if.end.i.i.i883:                                  ; preds = %land.lhs.true.i.i.i882
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i886:                               ; preds = %land.lhs.true.i.i.i882
  %v.i.i.i884 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i873, i64 0, i32 2, i32 1
  %die.i.i.i885 = bitcast %union.anon.3* %v.i.i.i884 to %struct.die_struct**
  %52 = load %struct.die_struct** %die.i.i.i885, align 8, !tbaa !60
  br label %for.inc.i.i891

for.inc.i.i891:                                   ; preds = %for.body.i.i877, %AT_ref.exit.i.i886
  %spec.1.i.i887 = phi %struct.die_struct* [ %52, %AT_ref.exit.i.i886 ], [ %spec.029.i.i874, %for.body.i.i877 ]
  %dw_attr_next.i.i888 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i873, i64 0, i32 1
  %a.0.i.i889 = load %struct.dw_attr_struct** %dw_attr_next.i.i888, align 8
  %cmp1.i.i890 = icmp eq %struct.dw_attr_struct* %a.0.i.i889, null
  br i1 %cmp1.i.i890, label %for.end.i.i893, label %for.body.i.i877

for.end.i.i893:                                   ; preds = %for.inc.i.i891
  %tobool.i.i892 = icmp eq %struct.die_struct* %spec.1.i.i887, null
  br i1 %tobool.i.i892, label %get_AT_unsigned.exit903, label %tailrecurse.i.i868

land.lhs.true.i.i897:                             ; preds = %for.body.i.i877
  %a.idx.i.i894 = getelementptr %struct.dw_attr_struct* %a.030.i.i873, i64 0, i32 2, i32 0
  %a.idx.val.i.i895 = load i32* %a.idx.i.i894, align 4, !tbaa !59
  %cmp.i4.i896 = icmp eq i32 %a.idx.val.i.i895, 6
  br i1 %cmp.i4.i896, label %AT_unsigned.exit.i901, label %if.end.i.i898

if.end.i.i898:                                    ; preds = %land.lhs.true.i.i897
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i901:                            ; preds = %land.lhs.true.i.i897
  %val_unsigned.i.i899 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i873, i64 0, i32 2, i32 1, i32 0, i32 0
  %53 = load i64* %val_unsigned.i.i899, align 8, !tbaa !8
  %phitmp.i900 = trunc i64 %53 to i32
  br label %get_AT_unsigned.exit903

get_AT_unsigned.exit903:                          ; preds = %tailrecurse.i.i868, %if.then.i.i872, %for.end.i.i893, %AT_unsigned.exit.i901
  %cond.i902 = phi i32 [ %phitmp.i900, %AT_unsigned.exit.i901 ], [ 0, %for.end.i.i893 ], [ 0, %if.then.i.i872 ], [ 0, %tailrecurse.i.i868 ]
  %linenum = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %54 = load i32* %linenum, align 4, !tbaa !91
  %cmp51 = icmp eq i32 %cond.i902, %54
  br i1 %cmp51, label %if.then.i811, label %if.else53

if.then.i811:                                     ; preds = %get_AT_unsigned.exit903, %land.lhs.true42
  %die_attr.i = getelementptr inbounds %struct.die_struct* %cond.i829, i64 0, i32 2
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %if.then.i811
  %p.0.i = phi %struct.dw_attr_struct** [ %die_attr.i, %if.then.i811 ], [ %dw_attr_next.i815, %for.body.i ]
  %55 = load %struct.dw_attr_struct** %p.0.i, align 8, !tbaa !6
  %tobool.i812 = icmp eq %struct.dw_attr_struct* %55, null
  br i1 %tobool.i812, label %remove_AT.exit, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %dw_attr.i813 = getelementptr inbounds %struct.dw_attr_struct* %55, i64 0, i32 0
  %56 = load i32* %dw_attr.i813, align 4, !tbaa !57
  %cmp1.i814 = icmp eq i32 %56, 60
  %dw_attr_next.i815 = getelementptr inbounds %struct.dw_attr_struct* %55, i64 0, i32 1
  br i1 %cmp1.i814, label %if.then5.i, label %for.cond.i

if.then5.i:                                       ; preds = %for.body.i
  %57 = load %struct.dw_attr_struct** %dw_attr_next.i815, align 8, !tbaa !72
  store %struct.dw_attr_struct* %57, %struct.dw_attr_struct** %p.0.i, align 8, !tbaa !6
  %a.idx.i.i816 = getelementptr %struct.dw_attr_struct* %55, i64 0, i32 2, i32 0
  %a.idx.val.i.i817 = load i32* %a.idx.i.i816, align 4, !tbaa !59
  switch i32 %a.idx.val.i.i817, label %free_AT.exit.i [
    i32 14, label %sw.bb.i.i
    i32 12, label %sw.bb5.i.i
    i32 13, label %sw.bb5.i.i
    i32 8, label %sw.bb8.i.i
  ]

sw.bb.i.i:                                        ; preds = %if.then5.i
  %v.i.i818 = getelementptr inbounds %struct.dw_attr_struct* %55, i64 0, i32 2, i32 1
  %val_str.i.i = bitcast %union.anon.3* %v.i.i818 to %struct.indirect_string_node**
  %58 = load %struct.indirect_string_node** %val_str.i.i, align 8, !tbaa !6
  %refcount.i.i = getelementptr inbounds %struct.indirect_string_node* %58, i64 0, i32 1
  %59 = load i32* %refcount.i.i, align 4, !tbaa !84
  %tobool.i.i819 = icmp eq i32 %59, 0
  br i1 %tobool.i.i819, label %free_AT.exit.i, label %if.then.i.i820

if.then.i.i820:                                   ; preds = %sw.bb.i.i
  %dec.i.i = add i32 %59, -1
  store i32 %dec.i.i, i32* %refcount.i.i, align 4, !tbaa !84
  br label %free_AT.exit.i

sw.bb5.i.i:                                       ; preds = %if.then5.i, %if.then5.i
  %v7.i.i = getelementptr inbounds %struct.dw_attr_struct* %55, i64 0, i32 2, i32 1
  %val_lbl_id.i.i = bitcast %union.anon.3* %v7.i.i to i8**
  %60 = load i8** %val_lbl_id.i.i, align 8, !tbaa !6
  call void @free(i8* %60) #5
  br label %free_AT.exit.i

sw.bb8.i.i:                                       ; preds = %if.then5.i
  %v10.i.i = getelementptr inbounds %struct.dw_attr_struct* %55, i64 0, i32 2, i32 1
  %array.i.i = bitcast %union.anon.3* %v10.i.i to i64**
  %61 = load i64** %array.i.i, align 8, !tbaa !119
  %62 = bitcast i64* %61 to i8*
  call void @free(i8* %62) #5
  br label %free_AT.exit.i

free_AT.exit.i:                                   ; preds = %sw.bb8.i.i, %sw.bb5.i.i, %if.then.i.i820, %sw.bb.i.i, %if.then5.i
  %63 = bitcast %struct.dw_attr_struct* %55 to i8*
  call void @free(i8* %63) #5
  br label %remove_AT.exit

remove_AT.exit:                                   ; preds = %for.cond.i, %free_AT.exit.i
  call fastcc void @remove_children(%struct.die_struct* %cond.i829)
  br i1 %12, label %if.then114, label %if.else132

if.else53:                                        ; preds = %if.end38, %get_AT_unsigned.exit903, %get_AT_unsigned.exit1011
  %call.i791 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %64 = bitcast i8* %call.i791 to %struct.die_struct*
  %die_tag.i792 = bitcast i8* %call.i791 to i32*
  store i32 46, i32* %die_tag.i792, align 4, !tbaa !69
  br i1 %tobool.i8321122, label %if.else.i807, label %if.then.i795

if.then.i795:                                     ; preds = %if.else53
  %cmp1.i.i794 = icmp eq i8* %call.i791, null
  br i1 %cmp1.i.i794, label %new_die.exit809, label %if.then.i.i797

if.then.i.i797:                                   ; preds = %if.then.i795
  %cmp2.i.i796 = icmp eq %struct.die_struct* %64, %context_die
  br i1 %cmp2.i.i796, label %if.then3.i.i798, label %if.end.i.i802

if.then3.i.i798:                                  ; preds = %if.then.i.i797
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i802:                                    ; preds = %if.then.i.i797
  %die_parent.i.i799 = getelementptr inbounds i8* %call.i791, i64 24
  %65 = bitcast i8* %die_parent.i.i799 to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %65, align 8, !tbaa !55
  %die_child.i.i800 = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %66 = load %struct.die_struct** %die_child.i.i800, align 8, !tbaa !62
  %die_sib.i.i801 = getelementptr inbounds i8* %call.i791, i64 40
  %67 = bitcast i8* %die_sib.i.i801 to %struct.die_struct**
  store %struct.die_struct* %66, %struct.die_struct** %67, align 8, !tbaa !63
  store %struct.die_struct* %64, %struct.die_struct** %die_child.i.i800, align 8, !tbaa !62
  br label %new_die.exit809

if.else.i807:                                     ; preds = %if.else53
  %call1.i803 = call noalias i8* @xmalloc(i64 24) #5
  %68 = bitcast i8* %call1.i803 to %struct.limbo_die_struct*
  %die2.i804 = bitcast i8* %call1.i803 to %struct.die_struct**
  store %struct.die_struct* %64, %struct.die_struct** %die2.i804, align 8, !tbaa !54
  %created_for.i805 = getelementptr inbounds i8* %call1.i803, i64 8
  %69 = bitcast i8* %created_for.i805 to %union.tree_node**
  store %union.tree_node* %decl, %union.tree_node** %69, align 8, !tbaa !64
  %70 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i806 = getelementptr inbounds i8* %call1.i803, i64 16
  %71 = bitcast i8* %next.i806 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %70, %struct.limbo_die_struct** %71, align 8, !tbaa !52
  store %struct.limbo_die_struct* %68, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit809

new_die.exit809:                                  ; preds = %if.then.i795, %if.end.i.i802, %if.else.i807
  %call.i779 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i780 = getelementptr inbounds i8* %call.i779, i64 8
  %72 = bitcast i8* %dw_attr_next.i780 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %72, align 8, !tbaa !72
  %dw_attr.i781 = bitcast i8* %call.i779 to i32*
  store i32 71, i32* %dw_attr.i781, align 4, !tbaa !57
  %dw_attr_val.i782 = getelementptr inbounds i8* %call.i779, i64 16
  %val_class.i783 = bitcast i8* %dw_attr_val.i782 to i32*
  store i32 10, i32* %val_class.i783, align 4, !tbaa !59
  %v.i784 = getelementptr inbounds i8* %call.i779, i64 24
  %die2.i785 = bitcast i8* %v.i784 to %struct.die_struct**
  store %struct.die_struct* %cond.i829, %struct.die_struct** %die2.i785, align 8, !tbaa !60
  %external.i = getelementptr inbounds i8* %call.i779, i64 32
  %73 = bitcast i8* %external.i to i32*
  store i32 0, i32* %73, align 4, !tbaa !108
  %cmp.i.i786 = icmp ne i8* %call.i791, null
  %cmp1.i.i787 = icmp ne i8* %call.i779, null
  %or.cond.i.i788 = and i1 %cmp.i.i786, %cmp1.i.i787
  br i1 %or.cond.i.i788, label %if.then.i.i790, label %tailrecurse.i.i743

if.then.i.i790:                                   ; preds = %new_die.exit809
  %74 = bitcast i8* %call.i779 to %struct.dw_attr_struct*
  %die_attr.i.i789 = getelementptr inbounds i8* %call.i791, i64 16
  %75 = bitcast i8* %die_attr.i.i789 to %struct.dw_attr_struct**
  %76 = load %struct.dw_attr_struct** %75, align 8, !tbaa !73
  store %struct.dw_attr_struct* %76, %struct.dw_attr_struct** %72, align 8, !tbaa !72
  store %struct.dw_attr_struct* %74, %struct.dw_attr_struct** %75, align 8, !tbaa !73
  br label %tailrecurse.i.i743

tailrecurse.i.i743:                               ; preds = %if.then.i.i790, %new_die.exit809, %for.end.i.i768
  %die.tr.i.i741 = phi %struct.die_struct* [ %spec.1.i.i762, %for.end.i.i768 ], [ %cond.i829, %new_die.exit809 ], [ %cond.i829, %if.then.i.i790 ]
  %cmp.i.i742 = icmp eq %struct.die_struct* %die.tr.i.i741, null
  br i1 %cmp.i.i742, label %get_AT_unsigned.exit778, label %if.then.i.i747

if.then.i.i747:                                   ; preds = %tailrecurse.i.i743
  %die_attr.i.i744 = getelementptr inbounds %struct.die_struct* %die.tr.i.i741, i64 0, i32 2
  %a.027.i.i745 = load %struct.dw_attr_struct** %die_attr.i.i744, align 8
  %cmp128.i.i746 = icmp eq %struct.dw_attr_struct* %a.027.i.i745, null
  br i1 %cmp128.i.i746, label %get_AT_unsigned.exit778, label %for.body.i.i752

for.body.i.i752:                                  ; preds = %if.then.i.i747, %for.inc.i.i766
  %a.030.i.i748 = phi %struct.dw_attr_struct* [ %a.0.i.i764, %for.inc.i.i766 ], [ %a.027.i.i745, %if.then.i.i747 ]
  %spec.029.i.i749 = phi %struct.die_struct* [ %spec.1.i.i762, %for.inc.i.i766 ], [ null, %if.then.i.i747 ]
  %dw_attr.i.i750 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i748, i64 0, i32 0
  %77 = load i32* %dw_attr.i.i750, align 4, !tbaa !57
  switch i32 %77, label %for.inc.i.i766 [
    i32 58, label %land.lhs.true.i.i772
    i32 71, label %land.lhs.true.i.i.i757
    i32 49, label %land.lhs.true.i.i.i757
  ]

land.lhs.true.i.i.i757:                           ; preds = %for.body.i.i752, %for.body.i.i752
  %a.idx.i.i.i754 = getelementptr %struct.dw_attr_struct* %a.030.i.i748, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i755 = load i32* %a.idx.i.i.i754, align 4, !tbaa !59
  %cmp.i.i.i756 = icmp eq i32 %a.idx.val.i.i.i755, 10
  br i1 %cmp.i.i.i756, label %AT_ref.exit.i.i761, label %if.end.i.i.i758

if.end.i.i.i758:                                  ; preds = %land.lhs.true.i.i.i757
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i761:                               ; preds = %land.lhs.true.i.i.i757
  %v.i.i.i759 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i748, i64 0, i32 2, i32 1
  %die.i.i.i760 = bitcast %union.anon.3* %v.i.i.i759 to %struct.die_struct**
  %78 = load %struct.die_struct** %die.i.i.i760, align 8, !tbaa !60
  br label %for.inc.i.i766

for.inc.i.i766:                                   ; preds = %for.body.i.i752, %AT_ref.exit.i.i761
  %spec.1.i.i762 = phi %struct.die_struct* [ %78, %AT_ref.exit.i.i761 ], [ %spec.029.i.i749, %for.body.i.i752 ]
  %dw_attr_next.i.i763 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i748, i64 0, i32 1
  %a.0.i.i764 = load %struct.dw_attr_struct** %dw_attr_next.i.i763, align 8
  %cmp1.i.i765 = icmp eq %struct.dw_attr_struct* %a.0.i.i764, null
  br i1 %cmp1.i.i765, label %for.end.i.i768, label %for.body.i.i752

for.end.i.i768:                                   ; preds = %for.inc.i.i766
  %tobool.i.i767 = icmp eq %struct.die_struct* %spec.1.i.i762, null
  br i1 %tobool.i.i767, label %get_AT_unsigned.exit778, label %tailrecurse.i.i743

land.lhs.true.i.i772:                             ; preds = %for.body.i.i752
  %a.idx.i.i769 = getelementptr %struct.dw_attr_struct* %a.030.i.i748, i64 0, i32 2, i32 0
  %a.idx.val.i.i770 = load i32* %a.idx.i.i769, align 4, !tbaa !59
  %cmp.i4.i771 = icmp eq i32 %a.idx.val.i.i770, 6
  br i1 %cmp.i4.i771, label %AT_unsigned.exit.i776, label %if.end.i.i773

if.end.i.i773:                                    ; preds = %land.lhs.true.i.i772
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i776:                            ; preds = %land.lhs.true.i.i772
  %val_unsigned.i.i774 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i748, i64 0, i32 2, i32 1, i32 0, i32 0
  %79 = load i64* %val_unsigned.i.i774, align 8, !tbaa !8
  %phitmp.i775 = trunc i64 %79 to i32
  br label %get_AT_unsigned.exit778

get_AT_unsigned.exit778:                          ; preds = %tailrecurse.i.i743, %if.then.i.i747, %for.end.i.i768, %AT_unsigned.exit.i776
  %cond.i777 = phi i32 [ %phitmp.i775, %AT_unsigned.exit.i776 ], [ 0, %for.end.i.i768 ], [ 0, %if.then.i.i747 ], [ 0, %tailrecurse.i.i743 ]
  %cmp56 = icmp eq i32 %cond.i777, %call28
  br i1 %cmp56, label %tailrecurse.i.i692, label %if.then57

if.then57:                                        ; preds = %get_AT_unsigned.exit778
  %conv = zext i32 %call28 to i64
  %call.i728 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i729 = getelementptr inbounds i8* %call.i728, i64 8
  %80 = bitcast i8* %dw_attr_next.i729 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %80, align 8, !tbaa !72
  %dw_attr.i730 = bitcast i8* %call.i728 to i32*
  store i32 58, i32* %dw_attr.i730, align 4, !tbaa !57
  %dw_attr_val.i731 = getelementptr inbounds i8* %call.i728, i64 16
  %val_class.i732 = bitcast i8* %dw_attr_val.i731 to i32*
  store i32 6, i32* %val_class.i732, align 4, !tbaa !59
  %v.i733 = getelementptr inbounds i8* %call.i728, i64 24
  %val_unsigned.i734 = bitcast i8* %v.i733 to i64*
  store i64 %conv, i64* %val_unsigned.i734, align 8, !tbaa !8
  %cmp1.i.i736 = icmp ne i8* %call.i728, null
  %or.cond.i.i737 = and i1 %cmp.i.i786, %cmp1.i.i736
  br i1 %or.cond.i.i737, label %if.then.i.i739, label %tailrecurse.i.i692

if.then.i.i739:                                   ; preds = %if.then57
  %81 = bitcast i8* %call.i728 to %struct.dw_attr_struct*
  %die_attr.i.i738 = getelementptr inbounds i8* %call.i791, i64 16
  %82 = bitcast i8* %die_attr.i.i738 to %struct.dw_attr_struct**
  %83 = load %struct.dw_attr_struct** %82, align 8, !tbaa !73
  store %struct.dw_attr_struct* %83, %struct.dw_attr_struct** %80, align 8, !tbaa !72
  store %struct.dw_attr_struct* %81, %struct.dw_attr_struct** %82, align 8, !tbaa !73
  br label %tailrecurse.i.i692

tailrecurse.i.i692:                               ; preds = %get_AT_unsigned.exit778, %if.then57, %if.then.i.i739, %for.end.i.i717
  %die.tr.i.i690 = phi %struct.die_struct* [ %spec.1.i.i711, %for.end.i.i717 ], [ %cond.i829, %if.then.i.i739 ], [ %cond.i829, %if.then57 ], [ %cond.i829, %get_AT_unsigned.exit778 ]
  %cmp.i.i691 = icmp eq %struct.die_struct* %die.tr.i.i690, null
  br i1 %cmp.i.i691, label %get_AT_unsigned.exit727, label %if.then.i.i696

if.then.i.i696:                                   ; preds = %tailrecurse.i.i692
  %die_attr.i.i693 = getelementptr inbounds %struct.die_struct* %die.tr.i.i690, i64 0, i32 2
  %a.027.i.i694 = load %struct.dw_attr_struct** %die_attr.i.i693, align 8
  %cmp128.i.i695 = icmp eq %struct.dw_attr_struct* %a.027.i.i694, null
  br i1 %cmp128.i.i695, label %get_AT_unsigned.exit727, label %for.body.i.i701

for.body.i.i701:                                  ; preds = %if.then.i.i696, %for.inc.i.i715
  %a.030.i.i697 = phi %struct.dw_attr_struct* [ %a.0.i.i713, %for.inc.i.i715 ], [ %a.027.i.i694, %if.then.i.i696 ]
  %spec.029.i.i698 = phi %struct.die_struct* [ %spec.1.i.i711, %for.inc.i.i715 ], [ null, %if.then.i.i696 ]
  %dw_attr.i.i699 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i697, i64 0, i32 0
  %84 = load i32* %dw_attr.i.i699, align 4, !tbaa !57
  switch i32 %84, label %for.inc.i.i715 [
    i32 59, label %land.lhs.true.i.i721
    i32 71, label %land.lhs.true.i.i.i706
    i32 49, label %land.lhs.true.i.i.i706
  ]

land.lhs.true.i.i.i706:                           ; preds = %for.body.i.i701, %for.body.i.i701
  %a.idx.i.i.i703 = getelementptr %struct.dw_attr_struct* %a.030.i.i697, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i704 = load i32* %a.idx.i.i.i703, align 4, !tbaa !59
  %cmp.i.i.i705 = icmp eq i32 %a.idx.val.i.i.i704, 10
  br i1 %cmp.i.i.i705, label %AT_ref.exit.i.i710, label %if.end.i.i.i707

if.end.i.i.i707:                                  ; preds = %land.lhs.true.i.i.i706
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i710:                               ; preds = %land.lhs.true.i.i.i706
  %v.i.i.i708 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i697, i64 0, i32 2, i32 1
  %die.i.i.i709 = bitcast %union.anon.3* %v.i.i.i708 to %struct.die_struct**
  %85 = load %struct.die_struct** %die.i.i.i709, align 8, !tbaa !60
  br label %for.inc.i.i715

for.inc.i.i715:                                   ; preds = %for.body.i.i701, %AT_ref.exit.i.i710
  %spec.1.i.i711 = phi %struct.die_struct* [ %85, %AT_ref.exit.i.i710 ], [ %spec.029.i.i698, %for.body.i.i701 ]
  %dw_attr_next.i.i712 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i697, i64 0, i32 1
  %a.0.i.i713 = load %struct.dw_attr_struct** %dw_attr_next.i.i712, align 8
  %cmp1.i.i714 = icmp eq %struct.dw_attr_struct* %a.0.i.i713, null
  br i1 %cmp1.i.i714, label %for.end.i.i717, label %for.body.i.i701

for.end.i.i717:                                   ; preds = %for.inc.i.i715
  %tobool.i.i716 = icmp eq %struct.die_struct* %spec.1.i.i711, null
  br i1 %tobool.i.i716, label %get_AT_unsigned.exit727, label %tailrecurse.i.i692

land.lhs.true.i.i721:                             ; preds = %for.body.i.i701
  %a.idx.i.i718 = getelementptr %struct.dw_attr_struct* %a.030.i.i697, i64 0, i32 2, i32 0
  %a.idx.val.i.i719 = load i32* %a.idx.i.i718, align 4, !tbaa !59
  %cmp.i4.i720 = icmp eq i32 %a.idx.val.i.i719, 6
  br i1 %cmp.i4.i720, label %AT_unsigned.exit.i725, label %if.end.i.i722

if.end.i.i722:                                    ; preds = %land.lhs.true.i.i721
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i725:                            ; preds = %land.lhs.true.i.i721
  %val_unsigned.i.i723 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i697, i64 0, i32 2, i32 1, i32 0, i32 0
  %86 = load i64* %val_unsigned.i.i723, align 8, !tbaa !8
  %phitmp.i724 = trunc i64 %86 to i32
  br label %get_AT_unsigned.exit727

get_AT_unsigned.exit727:                          ; preds = %tailrecurse.i.i692, %if.then.i.i696, %for.end.i.i717, %AT_unsigned.exit.i725
  %cond.i726 = phi i32 [ %phitmp.i724, %AT_unsigned.exit.i725 ], [ 0, %for.end.i.i717 ], [ 0, %if.then.i.i696 ], [ 0, %tailrecurse.i.i692 ]
  %linenum61 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %87 = load i32* %linenum61, align 4, !tbaa !91
  %cmp62 = icmp eq i32 %cond.i726, %87
  br i1 %cmp62, label %if.end112, label %if.then64

if.then64:                                        ; preds = %get_AT_unsigned.exit727
  %conv67 = sext i32 %87 to i64
  %call.i677 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i678 = getelementptr inbounds i8* %call.i677, i64 8
  %88 = bitcast i8* %dw_attr_next.i678 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %88, align 8, !tbaa !72
  %dw_attr.i679 = bitcast i8* %call.i677 to i32*
  store i32 59, i32* %dw_attr.i679, align 4, !tbaa !57
  %dw_attr_val.i680 = getelementptr inbounds i8* %call.i677, i64 16
  %val_class.i681 = bitcast i8* %dw_attr_val.i680 to i32*
  store i32 6, i32* %val_class.i681, align 4, !tbaa !59
  %v.i682 = getelementptr inbounds i8* %call.i677, i64 24
  %val_unsigned.i683 = bitcast i8* %v.i682 to i64*
  store i64 %conv67, i64* %val_unsigned.i683, align 8, !tbaa !8
  %cmp1.i.i685 = icmp ne i8* %call.i677, null
  %or.cond.i.i686 = and i1 %cmp.i.i786, %cmp1.i.i685
  br i1 %or.cond.i.i686, label %if.then.i.i688, label %if.end112

if.then.i.i688:                                   ; preds = %if.then64
  %89 = bitcast i8* %call.i677 to %struct.dw_attr_struct*
  %die_attr.i.i687 = getelementptr inbounds i8* %call.i791, i64 16
  %90 = bitcast i8* %die_attr.i.i687 to %struct.dw_attr_struct**
  %91 = load %struct.dw_attr_struct** %90, align 8, !tbaa !73
  store %struct.dw_attr_struct* %91, %struct.dw_attr_struct** %88, align 8, !tbaa !72
  store %struct.dw_attr_struct* %89, %struct.dw_attr_struct** %90, align 8, !tbaa !73
  br i1 %12, label %if.then114, label %if.else132

if.else70:                                        ; preds = %if.then, %if.else
  %tobool.i8321123 = phi i1 [ %tobool.i832, %if.then ], [ %tobool.i8321122, %if.else ]
  %92 = phi i1 [ %8, %if.then ], [ %12, %if.else ]
  %call.i667 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %93 = bitcast i8* %call.i667 to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i667 to i32*
  store i32 46, i32* %die_tag.i, align 4, !tbaa !69
  br i1 %tobool.i8321123, label %if.else.i675, label %if.then.i670

if.then.i670:                                     ; preds = %if.else70
  %cmp1.i.i669 = icmp eq i8* %call.i667, null
  br i1 %cmp1.i.i669, label %new_die.exit, label %if.then.i.i672

if.then.i.i672:                                   ; preds = %if.then.i670
  %cmp2.i.i671 = icmp eq %struct.die_struct* %93, %context_die
  br i1 %cmp2.i.i671, label %if.then3.i.i, label %if.end.i.i673

if.then3.i.i:                                     ; preds = %if.then.i.i672
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i673:                                    ; preds = %if.then.i.i672
  %die_parent.i.i = getelementptr inbounds i8* %call.i667, i64 24
  %94 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %94, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %95 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i667, i64 40
  %96 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %95, %struct.die_struct** %96, align 8, !tbaa !63
  store %struct.die_struct* %93, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i675:                                     ; preds = %if.else70
  %call1.i674 = call noalias i8* @xmalloc(i64 24) #5
  %97 = bitcast i8* %call1.i674 to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i674 to %struct.die_struct**
  store %struct.die_struct* %93, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i674, i64 8
  %98 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %decl, %union.tree_node** %98, align 8, !tbaa !64
  %99 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i674, i64 16
  %100 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %99, %struct.limbo_die_struct** %100, align 8, !tbaa !52
  store %struct.limbo_die_struct* %97, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i670, %if.end.i.i673, %if.else.i675
  %public_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load72 = load i32* %public_flag, align 8
  %bf.clear74 = and i32 %bf.load72, 524288
  %tobool75 = icmp eq i32 %bf.clear74, 0
  br i1 %tobool75, label %if.end77, label %if.then76

if.then76:                                        ; preds = %new_die.exit
  %call.i655 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i656 = getelementptr inbounds i8* %call.i655, i64 8
  %101 = bitcast i8* %dw_attr_next.i656 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %101, align 8, !tbaa !72
  %dw_attr.i657 = bitcast i8* %call.i655 to i32*
  store i32 63, i32* %dw_attr.i657, align 4, !tbaa !57
  %dw_attr_val.i658 = getelementptr inbounds i8* %call.i655, i64 16
  %val_class.i659 = bitcast i8* %dw_attr_val.i658 to i32*
  store i32 9, i32* %val_class.i659, align 4, !tbaa !59
  %v.i660 = getelementptr inbounds i8* %call.i655, i64 24
  store i8 1, i8* %v.i660, align 1, !tbaa !1
  %cmp.i.i661 = icmp ne i8* %call.i667, null
  %cmp1.i.i662 = icmp ne i8* %call.i655, null
  %or.cond.i.i663 = and i1 %cmp.i.i661, %cmp1.i.i662
  br i1 %or.cond.i.i663, label %if.then.i.i665, label %if.end77

if.then.i.i665:                                   ; preds = %if.then76
  %102 = bitcast i8* %call.i655 to %struct.dw_attr_struct*
  %die_attr.i.i664 = getelementptr inbounds i8* %call.i667, i64 16
  %103 = bitcast i8* %die_attr.i.i664 to %struct.dw_attr_struct**
  %104 = load %struct.dw_attr_struct** %103, align 8, !tbaa !73
  store %struct.dw_attr_struct* %104, %struct.dw_attr_struct** %101, align 8, !tbaa !72
  store %struct.dw_attr_struct* %102, %struct.dw_attr_struct** %103, align 8, !tbaa !73
  br label %if.end77

if.end77:                                         ; preds = %if.then.i.i665, %if.then76, %new_die.exit
  call fastcc void @add_name_and_src_coords_attributes(%struct.die_struct* %93, %union.tree_node* %decl)
  %105 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp78 = icmp ugt i32 %105, 1
  br i1 %cmp78, label %if.then80, label %if.end86

if.then80:                                        ; preds = %if.end77
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %106 = load %union.tree_node** %type, align 8, !tbaa !87
  %107 = load %struct.die_struct** @comp_unit_die, align 8, !tbaa !6
  br label %tailrecurse.i.i.i

tailrecurse.i.i.i:                                ; preds = %for.end.i.i.i, %if.then80
  %die.tr.i.i.i = phi %struct.die_struct* [ %107, %if.then80 ], [ %spec.1.i.i.i, %for.end.i.i.i ]
  %cmp.i.i.i636 = icmp eq %struct.die_struct* %die.tr.i.i.i, null
  br i1 %cmp.i.i.i636, label %add_prototyped_attribute.exit, label %if.then.i.i.i638

if.then.i.i.i638:                                 ; preds = %tailrecurse.i.i.i
  %die_attr.i.i.i637 = getelementptr inbounds %struct.die_struct* %die.tr.i.i.i, i64 0, i32 2
  %a.027.i.i.i = load %struct.dw_attr_struct** %die_attr.i.i.i637, align 8
  %cmp128.i.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i.i, null
  br i1 %cmp128.i.i.i, label %add_prototyped_attribute.exit, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %if.then.i.i.i638, %for.inc.i.i.i
  %a.030.i.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i.i, %for.inc.i.i.i ], [ %a.027.i.i.i, %if.then.i.i.i638 ]
  %spec.029.i.i.i = phi %struct.die_struct* [ %spec.1.i.i.i, %for.inc.i.i.i ], [ null, %if.then.i.i.i638 ]
  %dw_attr.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 0
  %108 = load i32* %dw_attr.i.i.i, align 4, !tbaa !57
  switch i32 %108, label %for.inc.i.i.i [
    i32 19, label %land.lhs.true.i.i.i642
    i32 71, label %land.lhs.true.i.i.i.i
    i32 49, label %land.lhs.true.i.i.i.i
  ]

land.lhs.true.i.i.i.i:                            ; preds = %for.body.i.i.i, %for.body.i.i.i
  %a.idx.i.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i.i = load i32* %a.idx.i.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i.i = icmp eq i32 %a.idx.val.i.i.i.i, 10
  br i1 %cmp.i.i.i.i, label %AT_ref.exit.i.i.i, label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i.i:                                ; preds = %land.lhs.true.i.i.i.i
  %v.i.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1
  %die.i.i.i.i = bitcast %union.anon.3* %v.i.i.i.i to %struct.die_struct**
  %109 = load %struct.die_struct** %die.i.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %AT_ref.exit.i.i.i, %for.body.i.i.i
  %spec.1.i.i.i = phi %struct.die_struct* [ %109, %AT_ref.exit.i.i.i ], [ %spec.029.i.i.i, %for.body.i.i.i ]
  %dw_attr_next.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 1
  %a.0.i.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i.i, align 8
  %cmp1.i.i.i639 = icmp eq %struct.dw_attr_struct* %a.0.i.i.i, null
  br i1 %cmp1.i.i.i639, label %for.end.i.i.i, label %for.body.i.i.i

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i
  %tobool.i.i.i = icmp eq %struct.die_struct* %spec.1.i.i.i, null
  br i1 %tobool.i.i.i, label %add_prototyped_attribute.exit, label %tailrecurse.i.i.i

land.lhs.true.i.i.i642:                           ; preds = %for.body.i.i.i
  %a.idx.i.i.i640 = getelementptr %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i641 = load i32* %a.idx.i.i.i640, align 4, !tbaa !59
  %cmp.i4.i.i = icmp eq i32 %a.idx.val.i.i.i641, 6
  br i1 %cmp.i4.i.i, label %get_AT_unsigned.exit.i, label %if.end.i.i.i643

if.end.i.i.i643:                                  ; preds = %land.lhs.true.i.i.i642
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

get_AT_unsigned.exit.i:                           ; preds = %land.lhs.true.i.i.i642
  %val_unsigned.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %110 = load i64* %val_unsigned.i.i.i, align 8, !tbaa !8
  %phitmp.i.i = trunc i64 %110 to i32
  %cmp.i644 = icmp eq i32 %phitmp.i.i, 1
  br i1 %cmp.i644, label %land.lhs.true.i, label %add_prototyped_attribute.exit

land.lhs.true.i:                                  ; preds = %get_AT_unsigned.exit.i
  %values.i = getelementptr inbounds %union.tree_node* %106, i64 0, i32 0, i32 1
  %111 = load i8** %values.i, align 8
  %cmp1.i645 = icmp eq i8* %111, null
  br i1 %cmp1.i645, label %add_prototyped_attribute.exit, label %if.then.i653

if.then.i653:                                     ; preds = %land.lhs.true.i
  %call.i.i646 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i647 = getelementptr inbounds i8* %call.i.i646, i64 8
  %112 = bitcast i8* %dw_attr_next.i.i647 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %112, align 8, !tbaa !72
  %dw_attr.i.i648 = bitcast i8* %call.i.i646 to i32*
  store i32 39, i32* %dw_attr.i.i648, align 4, !tbaa !57
  %dw_attr_val.i.i649 = getelementptr inbounds i8* %call.i.i646, i64 16
  %val_class.i.i650 = bitcast i8* %dw_attr_val.i.i649 to i32*
  store i32 9, i32* %val_class.i.i650, align 4, !tbaa !59
  %v.i.i651 = getelementptr inbounds i8* %call.i.i646, i64 24
  store i8 1, i8* %v.i.i651, align 1, !tbaa !1
  %cmp.i.i2.i = icmp ne i8* %call.i667, null
  %cmp1.i.i3.i = icmp ne i8* %call.i.i646, null
  %or.cond.i.i.i652 = and i1 %cmp.i.i2.i, %cmp1.i.i3.i
  br i1 %or.cond.i.i.i652, label %if.then.i.i5.i, label %add_prototyped_attribute.exit

if.then.i.i5.i:                                   ; preds = %if.then.i653
  %113 = bitcast i8* %call.i.i646 to %struct.dw_attr_struct*
  %die_attr.i.i4.i = getelementptr inbounds i8* %call.i667, i64 16
  %114 = bitcast i8* %die_attr.i.i4.i to %struct.dw_attr_struct**
  %115 = load %struct.dw_attr_struct** %114, align 8, !tbaa !73
  store %struct.dw_attr_struct* %115, %struct.dw_attr_struct** %112, align 8, !tbaa !72
  store %struct.dw_attr_struct* %113, %struct.dw_attr_struct** %114, align 8, !tbaa !73
  br label %add_prototyped_attribute.exit

add_prototyped_attribute.exit:                    ; preds = %tailrecurse.i.i.i, %if.then.i.i.i638, %for.end.i.i.i, %get_AT_unsigned.exit.i, %land.lhs.true.i, %if.then.i653, %if.then.i.i5.i
  %116 = load %union.tree_node** %type, align 8, !tbaa !87
  %type85 = getelementptr inbounds %union.tree_node* %116, i64 0, i32 0, i32 0, i32 1
  %117 = load %union.tree_node** %type85, align 8, !tbaa !87
  %code1.i = getelementptr inbounds %union.tree_node* %117, i64 0, i32 0, i32 0, i32 2
  %bf.load.i1024 = load i32* %code1.i, align 8
  %bf.clear.i1025 = and i32 %bf.load.i1024, 255
  %118 = and i32 %bf.load.i1024, 254
  %119 = icmp eq i32 %118, 6
  br i1 %119, label %land.lhs.true.i1027, label %if.end.i1029

land.lhs.true.i1027:                              ; preds = %add_prototyped_attribute.exit
  %type4.i = getelementptr inbounds %union.tree_node* %117, i64 0, i32 0, i32 0, i32 1
  %120 = load %union.tree_node** %type4.i, align 8, !tbaa !87
  %cmp5.i1026 = icmp eq %union.tree_node* %120, null
  br i1 %cmp5.i1026, label %if.end.i1029, label %land.lhs.true6.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i1027
  %121 = getelementptr inbounds %union.tree_node* %117, i64 0, i32 0, i32 11
  %122 = load %union.tree_node** %121, align 8, !tbaa !102
  %cmp8.i = icmp eq %union.tree_node* %122, null
  br i1 %cmp8.i, label %if.then.i1028, label %if.end.i1029

if.then.i1028:                                    ; preds = %land.lhs.true6.i
  %code12.i = getelementptr inbounds %union.tree_node* %120, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i = load i32* %code12.i, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 255
  br label %if.end.i1029

if.end.i1029:                                     ; preds = %if.then.i1028, %land.lhs.true6.i, %land.lhs.true.i1027, %add_prototyped_attribute.exit
  %bf.load21.i = phi i32 [ %bf.load13.i, %if.then.i1028 ], [ %bf.load.i1024, %land.lhs.true6.i ], [ %bf.load.i1024, %land.lhs.true.i1027 ], [ %bf.load.i1024, %add_prototyped_attribute.exit ]
  %type.addr.0.i = phi %union.tree_node* [ %120, %if.then.i1028 ], [ %117, %land.lhs.true6.i ], [ %117, %land.lhs.true.i1027 ], [ %117, %add_prototyped_attribute.exit ]
  %code.0.i = phi i32 [ %bf.clear14.i, %if.then.i1028 ], [ %bf.clear.i1025, %land.lhs.true6.i ], [ %bf.clear.i1025, %land.lhs.true.i1027 ], [ %bf.clear.i1025, %add_prototyped_attribute.exit ]
  switch i32 %code.0.i, label %if.end19.i [
    i32 5, label %if.end86
    i32 0, label %if.end86
  ]

if.end19.i:                                       ; preds = %if.end.i1029
  %bf.clear22.i = lshr i32 %bf.load21.i, 12
  %bf.clear22.i.lobit = and i32 %bf.clear22.i, 1
  %bf.clear29.i = lshr i32 %bf.load21.i, 11
  %bf.clear29.i.lobit = and i32 %bf.clear29.i, 1
  %call.i1030 = call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i, i32 %bf.clear22.i.lobit, i32 %bf.clear29.i.lobit, %struct.die_struct* %context_die) #5
  %cmp33.i = icmp eq %struct.die_struct* %call.i1030, null
  br i1 %cmp33.i, label %if.end86, label %if.then34.i

if.then34.i:                                      ; preds = %if.end19.i
  %call.i.i1031 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i1032 = getelementptr inbounds i8* %call.i.i1031, i64 8
  %123 = bitcast i8* %dw_attr_next.i.i1032 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %123, align 8, !tbaa !72
  %dw_attr.i.i1033 = bitcast i8* %call.i.i1031 to i32*
  store i32 73, i32* %dw_attr.i.i1033, align 4, !tbaa !57
  %dw_attr_val.i.i1034 = getelementptr inbounds i8* %call.i.i1031, i64 16
  %val_class.i.i1035 = bitcast i8* %dw_attr_val.i.i1034 to i32*
  store i32 10, i32* %val_class.i.i1035, align 4, !tbaa !59
  %v.i.i1036 = getelementptr inbounds i8* %call.i.i1031, i64 24
  %die2.i.i1037 = bitcast i8* %v.i.i1036 to %struct.die_struct**
  store %struct.die_struct* %call.i1030, %struct.die_struct** %die2.i.i1037, align 8, !tbaa !60
  %external.i.i1038 = getelementptr inbounds i8* %call.i.i1031, i64 32
  %124 = bitcast i8* %external.i.i1038 to i32*
  store i32 0, i32* %124, align 4, !tbaa !108
  %cmp.i.i.i1039 = icmp ne i8* %call.i667, null
  %cmp1.i.i.i1040 = icmp ne i8* %call.i.i1031, null
  %or.cond.i.i.i1041 = and i1 %cmp.i.i.i1039, %cmp1.i.i.i1040
  br i1 %or.cond.i.i.i1041, label %if.then.i.i.i1043, label %if.end86

if.then.i.i.i1043:                                ; preds = %if.then34.i
  %125 = bitcast i8* %call.i.i1031 to %struct.dw_attr_struct*
  %die_attr.i.i.i1042 = getelementptr inbounds i8* %call.i667, i64 16
  %126 = bitcast i8* %die_attr.i.i.i1042 to %struct.dw_attr_struct**
  %127 = load %struct.dw_attr_struct** %126, align 8, !tbaa !73
  store %struct.dw_attr_struct* %127, %struct.dw_attr_struct** %123, align 8, !tbaa !72
  store %struct.dw_attr_struct* %125, %struct.dw_attr_struct** %126, align 8, !tbaa !73
  br label %if.end86

if.end86:                                         ; preds = %if.end19.i, %if.end.i1029, %if.end.i1029, %if.then.i.i.i1043, %if.then34.i, %if.end77
  %vindex.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 22
  %128 = load %union.tree_node** %vindex.i, align 8, !tbaa !92
  %tobool.i614 = icmp eq %union.tree_node* %128, null
  br i1 %tobool.i614, label %add_pure_or_virtual_attribute.exit, label %if.then.i623

if.then.i623:                                     ; preds = %if.end86
  %call.i.i615 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i616 = getelementptr inbounds i8* %call.i.i615, i64 8
  %129 = bitcast i8* %dw_attr_next.i.i616 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %129, align 8, !tbaa !72
  %dw_attr.i.i617 = bitcast i8* %call.i.i615 to i32*
  store i32 76, i32* %dw_attr.i.i617, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i615, i64 16
  %val_class.i.i618 = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 6, i32* %val_class.i.i618, align 4, !tbaa !59
  %v.i.i619 = getelementptr inbounds i8* %call.i.i615, i64 24
  %val_unsigned.i.i620 = bitcast i8* %v.i.i619 to i64*
  store i64 1, i64* %val_unsigned.i.i620, align 8, !tbaa !8
  %cmp.i.i.i621 = icmp ne i8* %call.i667, null
  %cmp1.i.i.i622 = icmp ne i8* %call.i.i615, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i621, %cmp1.i.i.i622
  br i1 %or.cond.i.i.i, label %if.then.i.i.i624, label %add_AT_unsigned.exit.i

if.then.i.i.i624:                                 ; preds = %if.then.i623
  %130 = bitcast i8* %call.i.i615 to %struct.dw_attr_struct*
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i667, i64 16
  %131 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %132 = load %struct.dw_attr_struct** %131, align 8, !tbaa !73
  store %struct.dw_attr_struct* %132, %struct.dw_attr_struct** %129, align 8, !tbaa !72
  store %struct.dw_attr_struct* %130, %struct.dw_attr_struct** %131, align 8, !tbaa !73
  br label %add_AT_unsigned.exit.i

add_AT_unsigned.exit.i:                           ; preds = %if.then.i.i.i624, %if.then.i623
  %133 = load %union.tree_node** %vindex.i, align 8, !tbaa !92
  %call.i625 = call i32 @host_integerp(%union.tree_node* %133, i32 0) #5
  %tobool3.i = icmp eq i32 %call.i625, 0
  br i1 %tobool3.i, label %if.end.i633, label %if.then4.i

if.then4.i:                                       ; preds = %add_AT_unsigned.exit.i
  %134 = load %union.tree_node** %vindex.i, align 8, !tbaa !92
  %call7.i = call i64 @tree_low_cst(%union.tree_node* %134, i32 0) #5
  %call.i19.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %135 = bitcast i8* %call.i19.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i.i626 = getelementptr inbounds i8* %call.i19.i, i64 8
  %136 = bitcast i8* %dw_loc_opc.i.i626 to i32*
  store i32 16, i32* %136, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i627 = getelementptr inbounds i8* %call.i19.i, i64 16
  %val_class.i20.i = bitcast i8* %dw_loc_oprnd1.i.i627 to i32*
  store i32 6, i32* %val_class.i20.i, align 4, !tbaa !23
  %v.i21.i = getelementptr inbounds i8* %call.i19.i, i64 24
  %val_unsigned.i22.i = bitcast i8* %v.i21.i to i64*
  store i64 %call7.i, i64* %val_unsigned.i22.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i628 = getelementptr inbounds i8* %call.i19.i, i64 40
  %val_class2.i.i629 = bitcast i8* %dw_loc_oprnd2.i.i628 to i32*
  store i32 6, i32* %val_class2.i.i629, align 4, !tbaa !24
  %v4.i.i630 = getelementptr inbounds i8* %call.i19.i, i64 48
  %val_unsigned5.i.i631 = bitcast i8* %v4.i.i630 to i64*
  store i64 0, i64* %val_unsigned5.i.i631, align 8, !tbaa !8
  %call.i23.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i24.i = getelementptr inbounds i8* %call.i23.i, i64 8
  %137 = bitcast i8* %dw_attr_next.i24.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %137, align 8, !tbaa !72
  %dw_attr.i25.i = bitcast i8* %call.i23.i to i32*
  store i32 77, i32* %dw_attr.i25.i, align 4, !tbaa !57
  %dw_attr_val.i26.i = getelementptr inbounds i8* %call.i23.i, i64 16
  %val_class.i27.i = bitcast i8* %dw_attr_val.i26.i to i32*
  store i32 2, i32* %val_class.i27.i, align 4, !tbaa !59
  %v.i28.i = getelementptr inbounds i8* %call.i23.i, i64 24
  %val_loc.i.i = bitcast i8* %v.i28.i to %struct.dw_loc_descr_struct**
  store %struct.dw_loc_descr_struct* %135, %struct.dw_loc_descr_struct** %val_loc.i.i, align 8, !tbaa !6
  %cmp1.i.i30.i = icmp ne i8* %call.i23.i, null
  %or.cond.i.i31.i = and i1 %cmp.i.i.i621, %cmp1.i.i30.i
  br i1 %or.cond.i.i31.i, label %if.then.i.i33.i, label %if.end.i633

if.then.i.i33.i:                                  ; preds = %if.then4.i
  %138 = bitcast i8* %call.i23.i to %struct.dw_attr_struct*
  %die_attr.i.i32.i = getelementptr inbounds i8* %call.i667, i64 16
  %139 = bitcast i8* %die_attr.i.i32.i to %struct.dw_attr_struct**
  %140 = load %struct.dw_attr_struct** %139, align 8, !tbaa !73
  store %struct.dw_attr_struct* %140, %struct.dw_attr_struct** %137, align 8, !tbaa !72
  store %struct.dw_attr_struct* %138, %struct.dw_attr_struct** %139, align 8, !tbaa !73
  br label %if.end.i633

if.end.i633:                                      ; preds = %if.then.i.i33.i, %if.then4.i, %add_AT_unsigned.exit.i
  %141 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp.i632 = icmp ugt i32 %141, 1
  br i1 %cmp.i632, label %if.then9.i635, label %add_pure_or_virtual_attribute.exit

if.then9.i635:                                    ; preds = %if.end.i633
  %context.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %142 = load %union.tree_node** %context.i, align 8, !tbaa !66
  %.idx.i = getelementptr %union.tree_node* %142, i64 0, i32 0, i32 10
  %.idx.val.i = load %union.tree_node** %.idx.i, align 8
  %143 = bitcast %union.tree_node* %.idx.val.i to %struct.die_struct*
  %call.i34.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i35.i = getelementptr inbounds i8* %call.i34.i, i64 8
  %144 = bitcast i8* %dw_attr_next.i35.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %144, align 8, !tbaa !72
  %dw_attr.i36.i = bitcast i8* %call.i34.i to i32*
  store i32 29, i32* %dw_attr.i36.i, align 4, !tbaa !57
  %dw_attr_val.i37.i = getelementptr inbounds i8* %call.i34.i, i64 16
  %val_class.i38.i = bitcast i8* %dw_attr_val.i37.i to i32*
  store i32 10, i32* %val_class.i38.i, align 4, !tbaa !59
  %v.i39.i = getelementptr inbounds i8* %call.i34.i, i64 24
  %die2.i.i634 = bitcast i8* %v.i39.i to %struct.die_struct**
  store %struct.die_struct* %143, %struct.die_struct** %die2.i.i634, align 8, !tbaa !60
  %external.i.i = getelementptr inbounds i8* %call.i34.i, i64 32
  %145 = bitcast i8* %external.i.i to i32*
  store i32 0, i32* %145, align 4, !tbaa !108
  %cmp1.i.i41.i = icmp ne i8* %call.i34.i, null
  %or.cond.i.i42.i = and i1 %cmp.i.i.i621, %cmp1.i.i41.i
  br i1 %or.cond.i.i42.i, label %if.then.i.i44.i, label %add_pure_or_virtual_attribute.exit

if.then.i.i44.i:                                  ; preds = %if.then9.i635
  %146 = bitcast i8* %call.i34.i to %struct.dw_attr_struct*
  %die_attr.i.i43.i = getelementptr inbounds i8* %call.i667, i64 16
  %147 = bitcast i8* %die_attr.i.i43.i to %struct.dw_attr_struct**
  %148 = load %struct.dw_attr_struct** %147, align 8, !tbaa !73
  store %struct.dw_attr_struct* %148, %struct.dw_attr_struct** %144, align 8, !tbaa !72
  store %struct.dw_attr_struct* %146, %struct.dw_attr_struct** %147, align 8, !tbaa !73
  br label %add_pure_or_virtual_attribute.exit

add_pure_or_virtual_attribute.exit:               ; preds = %if.end86, %if.end.i633, %if.then9.i635, %if.then.i.i44.i
  %bf.load89 = load i64* %0, align 8
  %bf.cast92 = and i64 %bf.load89, 4194304
  %tobool93 = icmp eq i64 %bf.cast92, 0
  br i1 %tobool93, label %if.end95, label %if.then94

if.then94:                                        ; preds = %add_pure_or_virtual_attribute.exit
  %call.i602 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i603 = getelementptr inbounds i8* %call.i602, i64 8
  %149 = bitcast i8* %dw_attr_next.i603 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %149, align 8, !tbaa !72
  %dw_attr.i604 = bitcast i8* %call.i602 to i32*
  store i32 52, i32* %dw_attr.i604, align 4, !tbaa !57
  %dw_attr_val.i605 = getelementptr inbounds i8* %call.i602, i64 16
  %val_class.i606 = bitcast i8* %dw_attr_val.i605 to i32*
  store i32 9, i32* %val_class.i606, align 4, !tbaa !59
  %v.i607 = getelementptr inbounds i8* %call.i602, i64 24
  store i8 1, i8* %v.i607, align 1, !tbaa !1
  %cmp.i.i608 = icmp ne i8* %call.i667, null
  %cmp1.i.i609 = icmp ne i8* %call.i602, null
  %or.cond.i.i610 = and i1 %cmp.i.i608, %cmp1.i.i609
  br i1 %or.cond.i.i610, label %if.then.i.i612, label %if.end95

if.then.i.i612:                                   ; preds = %if.then94
  %150 = bitcast i8* %call.i602 to %struct.dw_attr_struct*
  %die_attr.i.i611 = getelementptr inbounds i8* %call.i667, i64 16
  %151 = bitcast i8* %die_attr.i.i611 to %struct.dw_attr_struct**
  %152 = load %struct.dw_attr_struct** %151, align 8, !tbaa !73
  store %struct.dw_attr_struct* %152, %struct.dw_attr_struct** %149, align 8, !tbaa !72
  store %struct.dw_attr_struct* %150, %struct.dw_attr_struct** %151, align 8, !tbaa !73
  br label %if.end95

if.end95:                                         ; preds = %if.then.i.i612, %if.then94, %add_pure_or_virtual_attribute.exit
  %bf.load97 = load i32* %public_flag, align 8
  %bf.clear99 = and i32 %bf.load97, 2097152
  %tobool100 = icmp eq i32 %bf.clear99, 0
  br i1 %tobool100, label %if.else102, label %if.then101

if.then101:                                       ; preds = %if.end95
  %call.i589 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i590 = getelementptr inbounds i8* %call.i589, i64 8
  %153 = bitcast i8* %dw_attr_next.i590 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %153, align 8, !tbaa !72
  %dw_attr.i591 = bitcast i8* %call.i589 to i32*
  store i32 50, i32* %dw_attr.i591, align 4, !tbaa !57
  %dw_attr_val.i592 = getelementptr inbounds i8* %call.i589, i64 16
  %val_class.i593 = bitcast i8* %dw_attr_val.i592 to i32*
  store i32 6, i32* %val_class.i593, align 4, !tbaa !59
  %v.i594 = getelementptr inbounds i8* %call.i589, i64 24
  %val_unsigned.i595 = bitcast i8* %v.i594 to i64*
  store i64 2, i64* %val_unsigned.i595, align 8, !tbaa !8
  %cmp.i.i596 = icmp ne i8* %call.i667, null
  %cmp1.i.i597 = icmp ne i8* %call.i589, null
  %or.cond.i.i598 = and i1 %cmp.i.i596, %cmp1.i.i597
  br i1 %or.cond.i.i598, label %if.then.i.i600, label %if.end112

if.then.i.i600:                                   ; preds = %if.then101
  %154 = bitcast i8* %call.i589 to %struct.dw_attr_struct*
  %die_attr.i.i599 = getelementptr inbounds i8* %call.i667, i64 16
  %155 = bitcast i8* %die_attr.i.i599 to %struct.dw_attr_struct**
  %156 = load %struct.dw_attr_struct** %155, align 8, !tbaa !73
  store %struct.dw_attr_struct* %156, %struct.dw_attr_struct** %153, align 8, !tbaa !72
  store %struct.dw_attr_struct* %154, %struct.dw_attr_struct** %155, align 8, !tbaa !73
  br i1 %92, label %if.then114, label %if.else132

if.else102:                                       ; preds = %if.end95
  %bf.clear106 = and i32 %bf.load97, 1048576
  %tobool107 = icmp eq i32 %bf.clear106, 0
  br i1 %tobool107, label %if.end112, label %if.then108

if.then108:                                       ; preds = %if.else102
  %call.i576 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i577 = getelementptr inbounds i8* %call.i576, i64 8
  %157 = bitcast i8* %dw_attr_next.i577 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %157, align 8, !tbaa !72
  %dw_attr.i578 = bitcast i8* %call.i576 to i32*
  store i32 50, i32* %dw_attr.i578, align 4, !tbaa !57
  %dw_attr_val.i579 = getelementptr inbounds i8* %call.i576, i64 16
  %val_class.i580 = bitcast i8* %dw_attr_val.i579 to i32*
  store i32 6, i32* %val_class.i580, align 4, !tbaa !59
  %v.i581 = getelementptr inbounds i8* %call.i576, i64 24
  %val_unsigned.i582 = bitcast i8* %v.i581 to i64*
  store i64 3, i64* %val_unsigned.i582, align 8, !tbaa !8
  %cmp.i.i583 = icmp ne i8* %call.i667, null
  %cmp1.i.i584 = icmp ne i8* %call.i576, null
  %or.cond.i.i585 = and i1 %cmp.i.i583, %cmp1.i.i584
  br i1 %or.cond.i.i585, label %if.then.i.i587, label %if.end112

if.then.i.i587:                                   ; preds = %if.then108
  %158 = bitcast i8* %call.i576 to %struct.dw_attr_struct*
  %die_attr.i.i586 = getelementptr inbounds i8* %call.i667, i64 16
  %159 = bitcast i8* %die_attr.i.i586 to %struct.dw_attr_struct**
  %160 = load %struct.dw_attr_struct** %159, align 8, !tbaa !73
  store %struct.dw_attr_struct* %160, %struct.dw_attr_struct** %157, align 8, !tbaa !72
  store %struct.dw_attr_struct* %158, %struct.dw_attr_struct** %159, align 8, !tbaa !73
  br i1 %92, label %if.then114, label %if.else132

if.end112:                                        ; preds = %if.then108, %if.then101, %if.then64, %add_abstract_origin_attribute.exit, %get_AT_unsigned.exit727, %if.else102
  %161 = phi i1 [ %12, %get_AT_unsigned.exit727 ], [ %92, %if.else102 ], [ %12, %add_abstract_origin_attribute.exit ], [ %12, %if.then64 ], [ %92, %if.then101 ], [ %92, %if.then108 ]
  %subr_die.0 = phi %struct.die_struct* [ %64, %get_AT_unsigned.exit727 ], [ %93, %if.else102 ], [ %17, %add_abstract_origin_attribute.exit ], [ %64, %if.then64 ], [ %93, %if.then101 ], [ %93, %if.then108 ]
  br i1 %161, label %if.then114, label %if.else132

if.then114:                                       ; preds = %if.then.i.i587, %if.then.i.i600, %if.then.i.i688, %if.then.i.i1057, %remove_AT.exit, %if.end112
  %subr_die.01126 = phi %struct.die_struct* [ %cond.i829, %remove_AT.exit ], [ %subr_die.0, %if.end112 ], [ %17, %if.then.i.i1057 ], [ %64, %if.then.i.i688 ], [ %93, %if.then.i.i600 ], [ %93, %if.then.i.i587 ]
  %tobool115 = icmp eq %struct.die_struct* %cond.i829, null
  br i1 %tobool115, label %if.then119, label %tailrecurse.i.i540

tailrecurse.i.i540:                               ; preds = %if.then114, %for.end.i.i565
  %die.tr.i.i538 = phi %struct.die_struct* [ %spec.1.i.i559, %for.end.i.i565 ], [ %cond.i829, %if.then114 ]
  %cmp.i.i539 = icmp eq %struct.die_struct* %die.tr.i.i538, null
  br i1 %cmp.i.i539, label %if.then119, label %if.then.i.i544

if.then.i.i544:                                   ; preds = %tailrecurse.i.i540
  %die_attr.i.i541 = getelementptr inbounds %struct.die_struct* %die.tr.i.i538, i64 0, i32 2
  %a.027.i.i542 = load %struct.dw_attr_struct** %die_attr.i.i541, align 8
  %cmp128.i.i543 = icmp eq %struct.dw_attr_struct* %a.027.i.i542, null
  br i1 %cmp128.i.i543, label %if.then119, label %for.body.i.i549

for.body.i.i549:                                  ; preds = %if.then.i.i544, %for.inc.i.i563
  %a.030.i.i545 = phi %struct.dw_attr_struct* [ %a.0.i.i561, %for.inc.i.i563 ], [ %a.027.i.i542, %if.then.i.i544 ]
  %spec.029.i.i546 = phi %struct.die_struct* [ %spec.1.i.i559, %for.inc.i.i563 ], [ null, %if.then.i.i544 ]
  %dw_attr.i.i547 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i545, i64 0, i32 0
  %162 = load i32* %dw_attr.i.i547, align 4, !tbaa !57
  switch i32 %162, label %for.inc.i.i563 [
    i32 32, label %land.lhs.true.i.i569
    i32 71, label %land.lhs.true.i.i.i554
    i32 49, label %land.lhs.true.i.i.i554
  ]

land.lhs.true.i.i.i554:                           ; preds = %for.body.i.i549, %for.body.i.i549
  %a.idx.i.i.i551 = getelementptr %struct.dw_attr_struct* %a.030.i.i545, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i552 = load i32* %a.idx.i.i.i551, align 4, !tbaa !59
  %cmp.i.i.i553 = icmp eq i32 %a.idx.val.i.i.i552, 10
  br i1 %cmp.i.i.i553, label %AT_ref.exit.i.i558, label %if.end.i.i.i555

if.end.i.i.i555:                                  ; preds = %land.lhs.true.i.i.i554
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i558:                               ; preds = %land.lhs.true.i.i.i554
  %v.i.i.i556 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i545, i64 0, i32 2, i32 1
  %die.i.i.i557 = bitcast %union.anon.3* %v.i.i.i556 to %struct.die_struct**
  %163 = load %struct.die_struct** %die.i.i.i557, align 8, !tbaa !60
  br label %for.inc.i.i563

for.inc.i.i563:                                   ; preds = %for.body.i.i549, %AT_ref.exit.i.i558
  %spec.1.i.i559 = phi %struct.die_struct* [ %163, %AT_ref.exit.i.i558 ], [ %spec.029.i.i546, %for.body.i.i549 ]
  %dw_attr_next.i.i560 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i545, i64 0, i32 1
  %a.0.i.i561 = load %struct.dw_attr_struct** %dw_attr_next.i.i560, align 8
  %cmp1.i.i562 = icmp eq %struct.dw_attr_struct* %a.0.i.i561, null
  br i1 %cmp1.i.i562, label %for.end.i.i565, label %for.body.i.i549

for.end.i.i565:                                   ; preds = %for.inc.i.i563
  %tobool.i.i564 = icmp eq %struct.die_struct* %spec.1.i.i559, null
  br i1 %tobool.i.i564, label %if.then119, label %tailrecurse.i.i540

land.lhs.true.i.i569:                             ; preds = %for.body.i.i549
  %a.idx.i.i566 = getelementptr %struct.dw_attr_struct* %a.030.i.i545, i64 0, i32 2, i32 0
  %a.idx.val.i.i567 = load i32* %a.idx.i.i566, align 4, !tbaa !59
  %cmp.i4.i568 = icmp eq i32 %a.idx.val.i.i567, 6
  br i1 %cmp.i4.i568, label %get_AT_unsigned.exit575, label %if.end.i.i570

if.end.i.i570:                                    ; preds = %land.lhs.true.i.i569
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

get_AT_unsigned.exit575:                          ; preds = %land.lhs.true.i.i569
  %val_unsigned.i.i571 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i545, i64 0, i32 2, i32 1, i32 0, i32 0
  %164 = load i64* %val_unsigned.i.i571, align 8, !tbaa !8
  %phitmp.i572 = trunc i64 %164 to i32
  %tobool118 = icmp eq i32 %phitmp.i572, 0
  br i1 %tobool118, label %if.then119, label %if.end186

if.then119:                                       ; preds = %if.then.i.i544, %tailrecurse.i.i540, %for.end.i.i565, %get_AT_unsigned.exit575, %if.then114
  %call.i527 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i528 = getelementptr inbounds i8* %call.i527, i64 8
  %165 = bitcast i8* %dw_attr_next.i528 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %165, align 8, !tbaa !72
  %dw_attr.i529 = bitcast i8* %call.i527 to i32*
  store i32 60, i32* %dw_attr.i529, align 4, !tbaa !57
  %dw_attr_val.i530 = getelementptr inbounds i8* %call.i527, i64 16
  %val_class.i531 = bitcast i8* %dw_attr_val.i530 to i32*
  store i32 9, i32* %val_class.i531, align 4, !tbaa !59
  %v.i532 = getelementptr inbounds i8* %call.i527, i64 24
  store i8 1, i8* %v.i532, align 1, !tbaa !1
  %cmp.i.i533 = icmp ne %struct.die_struct* %subr_die.01126, null
  %cmp1.i.i534 = icmp ne i8* %call.i527, null
  %or.cond.i.i535 = and i1 %cmp.i.i533, %cmp1.i.i534
  br i1 %or.cond.i.i535, label %if.then.i.i537, label %add_AT_flag.exit

if.then.i.i537:                                   ; preds = %if.then119
  %166 = bitcast i8* %call.i527 to %struct.dw_attr_struct*
  %die_attr.i.i536 = getelementptr inbounds %struct.die_struct* %subr_die.01126, i64 0, i32 2
  %167 = load %struct.dw_attr_struct** %die_attr.i.i536, align 8, !tbaa !73
  store %struct.dw_attr_struct* %167, %struct.dw_attr_struct** %165, align 8, !tbaa !72
  store %struct.dw_attr_struct* %166, %struct.dw_attr_struct** %die_attr.i.i536, align 8, !tbaa !73
  br label %add_AT_flag.exit

add_AT_flag.exit:                                 ; preds = %if.then119, %if.then.i.i537
  %context = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %168 = load %union.tree_node** %context, align 8, !tbaa !66
  %tobool121 = icmp eq %union.tree_node* %168, null
  br i1 %tobool121, label %lor.lhs.false122, label %if.then129

lor.lhs.false122:                                 ; preds = %add_AT_flag.exit
  %bf.load124 = load i64* %0, align 8
  %bf.cast127 = and i64 %bf.load124, 32768
  %tobool128 = icmp eq i64 %bf.cast127, 0
  br i1 %tobool128, label %if.end186, label %if.then129

if.then129:                                       ; preds = %lor.lhs.false122, %add_AT_flag.exit
  %decl.idx355.val = load i32* %decl.idx, align 4, !tbaa !65
  %169 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %cmp.i508 = icmp ugt i32 %169, %decl.idx355.val
  br i1 %cmp.i508, label %if.end.i521, label %if.then.i519

if.then.i519:                                     ; preds = %if.then129
  %sub.i509 = add i32 %decl.idx355.val, 256
  %div.i510 = and i32 %sub.i509, -256
  %170 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %171 = bitcast %struct.die_struct** %170 to i8*
  %conv.i511 = zext i32 %div.i510 to i64
  %mul3.i512 = shl nuw nsw i64 %conv.i511, 3
  %call.i513 = call i8* @xrealloc(i8* %171, i64 %mul3.i512) #5
  %172 = bitcast i8* %call.i513 to %struct.die_struct**
  store %struct.die_struct** %172, %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %173 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %idxprom.i514 = zext i32 %173 to i64
  %arrayidx.i515 = getelementptr inbounds %struct.die_struct** %172, i64 %idxprom.i514
  %174 = bitcast %struct.die_struct** %arrayidx.i515 to i8*
  %sub4.i516 = sub i32 %div.i510, %173
  %conv5.i517 = zext i32 %sub4.i516 to i64
  %mul6.i518 = shl nuw nsw i64 %conv5.i517, 3
  call void @llvm.memset.p0i8.i64(i8* %174, i8 0, i64 %mul6.i518, i32 1, i1 false) #5
  store i32 %div.i510, i32* @decl_die_table_allocated, align 4, !tbaa !4
  br label %if.end.i521

if.end.i521:                                      ; preds = %if.then.i519, %if.then129
  %175 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp7.i520 = icmp ugt i32 %175, %decl.idx355.val
  br i1 %cmp7.i520, label %equate_decl_number_to_die.exit526, label %if.then9.i523

if.then9.i523:                                    ; preds = %if.end.i521
  %add10.i522 = add i32 %decl.idx355.val, 1
  store i32 %add10.i522, i32* @decl_die_table_in_use, align 4, !tbaa !4
  br label %equate_decl_number_to_die.exit526

equate_decl_number_to_die.exit526:                ; preds = %if.end.i521, %if.then9.i523
  %idxprom12.i524 = zext i32 %decl.idx355.val to i64
  %176 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx13.i525 = getelementptr inbounds %struct.die_struct** %176, i64 %idxprom12.i524
  store %struct.die_struct* %subr_die.01126, %struct.die_struct** %arrayidx13.i525, align 8, !tbaa !6
  br label %if.end186

if.else132:                                       ; preds = %if.then.i.i587, %if.then.i.i600, %if.then.i.i688, %if.then.i.i1057, %remove_AT.exit, %if.end112
  %subr_die.01125 = phi %struct.die_struct* [ %cond.i829, %remove_AT.exit ], [ %subr_die.0, %if.end112 ], [ %17, %if.then.i.i1057 ], [ %64, %if.then.i.i688 ], [ %93, %if.then.i.i600 ], [ %93, %if.then.i.i587 ]
  %bf.load135 = load i64* %0, align 8
  %bf.cast138 = and i64 %bf.load135, 32768
  %tobool139 = icmp eq i64 %bf.cast138, 0
  br i1 %tobool139, label %if.else161, label %if.then140

if.then140:                                       ; preds = %if.else132
  %bf.cast145 = and i64 %bf.load135, 2048
  %tobool146 = icmp eq i64 %bf.cast145, 0
  %177 = load i32* @flag_no_inline, align 4
  %tobool148 = icmp ne i32 %177, 0
  %or.cond247 = or i1 %tobool146, %tobool148
  br i1 %or.cond247, label %if.else159, label %if.then149

if.then149:                                       ; preds = %if.then140
  %bf.cast154 = and i64 %bf.load135, 262144
  %tobool155 = icmp eq i64 %bf.cast154, 0
  %call.i482 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i483 = getelementptr inbounds i8* %call.i482, i64 8
  %178 = bitcast i8* %dw_attr_next.i483 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %178, align 8, !tbaa !72
  %dw_attr.i484 = bitcast i8* %call.i482 to i32*
  store i32 32, i32* %dw_attr.i484, align 4, !tbaa !57
  %dw_attr_val.i485 = getelementptr inbounds i8* %call.i482, i64 16
  %val_class.i486 = bitcast i8* %dw_attr_val.i485 to i32*
  store i32 6, i32* %val_class.i486, align 4, !tbaa !59
  %v.i487 = getelementptr inbounds i8* %call.i482, i64 24
  %val_unsigned.i488 = bitcast i8* %v.i487 to i64*
  br i1 %tobool155, label %if.else157, label %if.then156

if.then156:                                       ; preds = %if.then149
  store i64 3, i64* %val_unsigned.i488, align 8, !tbaa !8
  %cmp.i.i502 = icmp ne %struct.die_struct* %subr_die.01125, null
  %cmp1.i.i503 = icmp ne i8* %call.i482, null
  %or.cond.i.i504 = and i1 %cmp.i.i502, %cmp1.i.i503
  br i1 %or.cond.i.i504, label %if.then.i.i506, label %if.end160

if.then.i.i506:                                   ; preds = %if.then156
  %179 = bitcast i8* %call.i482 to %struct.dw_attr_struct*
  %die_attr.i.i505 = getelementptr inbounds %struct.die_struct* %subr_die.01125, i64 0, i32 2
  %180 = load %struct.dw_attr_struct** %die_attr.i.i505, align 8, !tbaa !73
  store %struct.dw_attr_struct* %180, %struct.dw_attr_struct** %178, align 8, !tbaa !72
  store %struct.dw_attr_struct* %179, %struct.dw_attr_struct** %die_attr.i.i505, align 8, !tbaa !73
  br label %if.end160

if.else157:                                       ; preds = %if.then149
  store i64 1, i64* %val_unsigned.i488, align 8, !tbaa !8
  %cmp.i.i489 = icmp ne %struct.die_struct* %subr_die.01125, null
  %cmp1.i.i490 = icmp ne i8* %call.i482, null
  %or.cond.i.i491 = and i1 %cmp.i.i489, %cmp1.i.i490
  br i1 %or.cond.i.i491, label %if.then.i.i493, label %if.end160

if.then.i.i493:                                   ; preds = %if.else157
  %181 = bitcast i8* %call.i482 to %struct.dw_attr_struct*
  %die_attr.i.i492 = getelementptr inbounds %struct.die_struct* %subr_die.01125, i64 0, i32 2
  %182 = load %struct.dw_attr_struct** %die_attr.i.i492, align 8, !tbaa !73
  store %struct.dw_attr_struct* %182, %struct.dw_attr_struct** %178, align 8, !tbaa !72
  store %struct.dw_attr_struct* %181, %struct.dw_attr_struct** %die_attr.i.i492, align 8, !tbaa !73
  br label %if.end160

if.else159:                                       ; preds = %if.then140
  %call.i471 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i472 = getelementptr inbounds i8* %call.i471, i64 8
  %183 = bitcast i8* %dw_attr_next.i472 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %183, align 8, !tbaa !72
  %dw_attr.i473 = bitcast i8* %call.i471 to i32*
  store i32 32, i32* %dw_attr.i473, align 4, !tbaa !57
  %dw_attr_val.i474 = getelementptr inbounds i8* %call.i471, i64 16
  %val_class.i475 = bitcast i8* %dw_attr_val.i474 to i32*
  store i32 6, i32* %val_class.i475, align 4, !tbaa !59
  %v.i476 = getelementptr inbounds i8* %call.i471, i64 24
  %val_unsigned.i = bitcast i8* %v.i476 to i64*
  store i64 2, i64* %val_unsigned.i, align 8, !tbaa !8
  %cmp.i.i477 = icmp ne %struct.die_struct* %subr_die.01125, null
  %cmp1.i.i478 = icmp ne i8* %call.i471, null
  %or.cond.i.i479 = and i1 %cmp.i.i477, %cmp1.i.i478
  br i1 %or.cond.i.i479, label %if.then.i.i481, label %if.end160

if.then.i.i481:                                   ; preds = %if.else159
  %184 = bitcast i8* %call.i471 to %struct.dw_attr_struct*
  %die_attr.i.i480 = getelementptr inbounds %struct.die_struct* %subr_die.01125, i64 0, i32 2
  %185 = load %struct.dw_attr_struct** %die_attr.i.i480, align 8, !tbaa !73
  store %struct.dw_attr_struct* %185, %struct.dw_attr_struct** %183, align 8, !tbaa !72
  store %struct.dw_attr_struct* %184, %struct.dw_attr_struct** %die_attr.i.i480, align 8, !tbaa !73
  br label %if.end160

if.end160:                                        ; preds = %if.then.i.i481, %if.else159, %if.then.i.i493, %if.else157, %if.then.i.i506, %if.then156
  %decl.idx354.val = load i32* %decl.idx, align 4, !tbaa !65
  %186 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %cmp.i452 = icmp ugt i32 %186, %decl.idx354.val
  br i1 %cmp.i452, label %if.end.i465, label %if.then.i463

if.then.i463:                                     ; preds = %if.end160
  %sub.i453 = add i32 %decl.idx354.val, 256
  %div.i454 = and i32 %sub.i453, -256
  %187 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %188 = bitcast %struct.die_struct** %187 to i8*
  %conv.i455 = zext i32 %div.i454 to i64
  %mul3.i456 = shl nuw nsw i64 %conv.i455, 3
  %call.i457 = call i8* @xrealloc(i8* %188, i64 %mul3.i456) #5
  %189 = bitcast i8* %call.i457 to %struct.die_struct**
  store %struct.die_struct** %189, %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %190 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %idxprom.i458 = zext i32 %190 to i64
  %arrayidx.i459 = getelementptr inbounds %struct.die_struct** %189, i64 %idxprom.i458
  %191 = bitcast %struct.die_struct** %arrayidx.i459 to i8*
  %sub4.i460 = sub i32 %div.i454, %190
  %conv5.i461 = zext i32 %sub4.i460 to i64
  %mul6.i462 = shl nuw nsw i64 %conv5.i461, 3
  call void @llvm.memset.p0i8.i64(i8* %191, i8 0, i64 %mul6.i462, i32 1, i1 false) #5
  store i32 %div.i454, i32* @decl_die_table_allocated, align 4, !tbaa !4
  br label %if.end.i465

if.end.i465:                                      ; preds = %if.then.i463, %if.end160
  %192 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp7.i464 = icmp ugt i32 %192, %decl.idx354.val
  br i1 %cmp7.i464, label %equate_decl_number_to_die.exit470, label %if.then9.i467

if.then9.i467:                                    ; preds = %if.end.i465
  %add10.i466 = add i32 %decl.idx354.val, 1
  store i32 %add10.i466, i32* @decl_die_table_in_use, align 4, !tbaa !4
  br label %equate_decl_number_to_die.exit470

equate_decl_number_to_die.exit470:                ; preds = %if.end.i465, %if.then9.i467
  %idxprom12.i468 = zext i32 %decl.idx354.val to i64
  %193 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx13.i469 = getelementptr inbounds %struct.die_struct** %193, i64 %idxprom12.i468
  store %struct.die_struct* %subr_die.01125, %struct.die_struct** %arrayidx13.i469, align 8, !tbaa !6
  br label %if.end186

if.else161:                                       ; preds = %if.else132
  %bf.cast166 = and i64 %bf.load135, 256
  %tobool167 = icmp eq i64 %bf.cast166, 0
  br i1 %tobool167, label %if.then168, label %if.end186

if.then168:                                       ; preds = %if.else161
  %tobool169 = icmp eq %struct.die_struct* %cond.i829, null
  br i1 %tobool169, label %if.then173, label %tailrecurse.i.i

tailrecurse.i.i:                                  ; preds = %if.then168, %for.end.i.i
  %die.tr.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.end.i.i ], [ %cond.i829, %if.then168 ]
  %cmp.i.i444 = icmp eq %struct.die_struct* %die.tr.i.i, null
  br i1 %cmp.i.i444, label %if.then173, label %if.then.i.i446

if.then.i.i446:                                   ; preds = %tailrecurse.i.i
  %die_attr.i.i445 = getelementptr inbounds %struct.die_struct* %die.tr.i.i, i64 0, i32 2
  %a.027.i.i = load %struct.dw_attr_struct** %die_attr.i.i445, align 8
  %cmp128.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i, null
  br i1 %cmp128.i.i, label %if.then173, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.then.i.i446, %for.inc.i.i
  %a.030.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i, %for.inc.i.i ], [ %a.027.i.i, %if.then.i.i446 ]
  %spec.029.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.inc.i.i ], [ null, %if.then.i.i446 ]
  %dw_attr.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 0
  %194 = load i32* %dw_attr.i.i, align 4, !tbaa !57
  switch i32 %194, label %for.inc.i.i [
    i32 32, label %land.lhs.true.i.i
    i32 71, label %land.lhs.true.i.i.i
    i32 49, label %land.lhs.true.i.i.i
  ]

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i, %for.body.i.i
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i = icmp eq i32 %a.idx.val.i.i.i, 10
  br i1 %cmp.i.i.i, label %AT_ref.exit.i.i, label %if.end.i.i.i448

if.end.i.i.i448:                                  ; preds = %land.lhs.true.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i:                                  ; preds = %land.lhs.true.i.i.i
  %v.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i.i = bitcast %union.anon.3* %v.i.i.i to %struct.die_struct**
  %195 = load %struct.die_struct** %die.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i, %AT_ref.exit.i.i
  %spec.1.i.i = phi %struct.die_struct* [ %195, %AT_ref.exit.i.i ], [ %spec.029.i.i, %for.body.i.i ]
  %dw_attr_next.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 1
  %a.0.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i, align 8
  %cmp1.i.i449 = icmp eq %struct.dw_attr_struct* %a.0.i.i, null
  br i1 %cmp1.i.i449, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %tobool.i.i450 = icmp eq %struct.die_struct* %spec.1.i.i, null
  br i1 %tobool.i.i450, label %if.then173, label %tailrecurse.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %a.idx.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i = load i32* %a.idx.i.i, align 4, !tbaa !59
  %cmp.i4.i = icmp eq i32 %a.idx.val.i.i, 6
  br i1 %cmp.i4.i, label %get_AT_unsigned.exit, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

get_AT_unsigned.exit:                             ; preds = %land.lhs.true.i.i
  %val_unsigned.i.i451 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1, i32 0, i32 0
  %196 = load i64* %val_unsigned.i.i451, align 8, !tbaa !8
  %phitmp.i = trunc i64 %196 to i32
  %tobool172 = icmp eq i32 %phitmp.i, 0
  br i1 %tobool172, label %if.then173, label %do.body

if.then173:                                       ; preds = %if.then.i.i446, %tailrecurse.i.i, %for.end.i.i, %get_AT_unsigned.exit, %if.then168
  %decl.idx353.val = load i32* %decl.idx, align 4, !tbaa !65
  %197 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %cmp.i438 = icmp ugt i32 %197, %decl.idx353.val
  br i1 %cmp.i438, label %if.end.i443, label %if.then.i

if.then.i:                                        ; preds = %if.then173
  %sub.i = add i32 %decl.idx353.val, 256
  %div.i = and i32 %sub.i, -256
  %198 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %199 = bitcast %struct.die_struct** %198 to i8*
  %conv.i439 = zext i32 %div.i to i64
  %mul3.i = shl nuw nsw i64 %conv.i439, 3
  %call.i440 = call i8* @xrealloc(i8* %199, i64 %mul3.i) #5
  %200 = bitcast i8* %call.i440 to %struct.die_struct**
  store %struct.die_struct** %200, %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %201 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %idxprom.i441 = zext i32 %201 to i64
  %arrayidx.i442 = getelementptr inbounds %struct.die_struct** %200, i64 %idxprom.i441
  %202 = bitcast %struct.die_struct** %arrayidx.i442 to i8*
  %sub4.i = sub i32 %div.i, %201
  %conv5.i = zext i32 %sub4.i to i64
  %mul6.i = shl nuw nsw i64 %conv5.i, 3
  call void @llvm.memset.p0i8.i64(i8* %202, i8 0, i64 %mul6.i, i32 1, i1 false) #5
  store i32 %div.i, i32* @decl_die_table_allocated, align 4, !tbaa !4
  br label %if.end.i443

if.end.i443:                                      ; preds = %if.then.i, %if.then173
  %203 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp7.i = icmp ugt i32 %203, %decl.idx353.val
  br i1 %cmp7.i, label %equate_decl_number_to_die.exit, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i443
  %add10.i = add i32 %decl.idx353.val, 1
  store i32 %add10.i, i32* @decl_die_table_in_use, align 4, !tbaa !4
  br label %equate_decl_number_to_die.exit

equate_decl_number_to_die.exit:                   ; preds = %if.end.i443, %if.then9.i
  %idxprom12.i = zext i32 %decl.idx353.val to i64
  %204 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx13.i = getelementptr inbounds %struct.die_struct** %204, i64 %idxprom12.i
  store %struct.die_struct* %subr_die.01125, %struct.die_struct** %arrayidx13.i, align 8, !tbaa !6
  br label %do.body

do.body:                                          ; preds = %get_AT_unsigned.exit, %equate_decl_number_to_die.exit
  %arraydecay = getelementptr inbounds [30 x i8]* %label_id, i64 0, i64 0
  %205 = load i32* @current_funcdef_number, align 4, !tbaa !4
  %call175 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 %205) #5
  %call.i424 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i425 = getelementptr inbounds i8* %call.i424, i64 8
  %206 = bitcast i8* %dw_attr_next.i425 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %206, align 8, !tbaa !72
  %dw_attr.i426 = bitcast i8* %call.i424 to i32*
  store i32 17, i32* %dw_attr.i426, align 4, !tbaa !57
  %dw_attr_val.i427 = getelementptr inbounds i8* %call.i424, i64 16
  %val_class.i428 = bitcast i8* %dw_attr_val.i427 to i32*
  store i32 12, i32* %val_class.i428, align 4, !tbaa !59
  %call1.i429 = call noalias i8* @xstrdup(i8* %arraydecay) #5
  %v.i430 = getelementptr inbounds i8* %call.i424, i64 24
  %val_lbl_id.i431 = bitcast i8* %v.i430 to i8**
  store i8* %call1.i429, i8** %val_lbl_id.i431, align 8, !tbaa !6
  %cmp.i.i432 = icmp ne %struct.die_struct* %subr_die.01125, null
  %cmp1.i.i433 = icmp ne i8* %call.i424, null
  %or.cond.i.i434 = and i1 %cmp.i.i432, %cmp1.i.i433
  br i1 %or.cond.i.i434, label %if.then.i.i436, label %add_AT_lbl_id.exit437

if.then.i.i436:                                   ; preds = %do.body
  %207 = bitcast i8* %call.i424 to %struct.dw_attr_struct*
  %die_attr.i.i435 = getelementptr inbounds %struct.die_struct* %subr_die.01125, i64 0, i32 2
  %208 = load %struct.dw_attr_struct** %die_attr.i.i435, align 8, !tbaa !73
  store %struct.dw_attr_struct* %208, %struct.dw_attr_struct** %206, align 8, !tbaa !72
  store %struct.dw_attr_struct* %207, %struct.dw_attr_struct** %die_attr.i.i435, align 8, !tbaa !73
  br label %add_AT_lbl_id.exit437

add_AT_lbl_id.exit437:                            ; preds = %do.body, %if.then.i.i436
  %209 = load i32* @current_funcdef_number, align 4, !tbaa !4
  %call179 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0), i32 %209) #5
  %call.i413 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i414 = getelementptr inbounds i8* %call.i413, i64 8
  %210 = bitcast i8* %dw_attr_next.i414 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %210, align 8, !tbaa !72
  %dw_attr.i415 = bitcast i8* %call.i413 to i32*
  store i32 18, i32* %dw_attr.i415, align 4, !tbaa !57
  %dw_attr_val.i416 = getelementptr inbounds i8* %call.i413, i64 16
  %val_class.i417 = bitcast i8* %dw_attr_val.i416 to i32*
  store i32 12, i32* %val_class.i417, align 4, !tbaa !59
  %call1.i = call noalias i8* @xstrdup(i8* %arraydecay) #5
  %v.i418 = getelementptr inbounds i8* %call.i413, i64 24
  %val_lbl_id.i = bitcast i8* %v.i418 to i8**
  store i8* %call1.i, i8** %val_lbl_id.i, align 8, !tbaa !6
  %cmp1.i.i420 = icmp ne i8* %call.i413, null
  %or.cond.i.i421 = and i1 %cmp.i.i432, %cmp1.i.i420
  br i1 %or.cond.i.i421, label %if.then.i.i423, label %add_AT_lbl_id.exit

if.then.i.i423:                                   ; preds = %add_AT_lbl_id.exit437
  %211 = bitcast i8* %call.i413 to %struct.dw_attr_struct*
  %die_attr.i.i422 = getelementptr inbounds %struct.die_struct* %subr_die.01125, i64 0, i32 2
  %212 = load %struct.dw_attr_struct** %die_attr.i.i422, align 8, !tbaa !73
  store %struct.dw_attr_struct* %212, %struct.dw_attr_struct** %210, align 8, !tbaa !72
  store %struct.dw_attr_struct* %211, %struct.dw_attr_struct** %die_attr.i.i422, align 8, !tbaa !73
  br label %add_AT_lbl_id.exit

add_AT_lbl_id.exit:                               ; preds = %add_AT_lbl_id.exit437, %if.then.i.i423
  %public_flag.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %public_flag.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 524288
  %tobool.i402 = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool.i402, label %add_pubname.exit, label %if.end.i404

if.end.i404:                                      ; preds = %add_AT_lbl_id.exit
  %213 = load i32* @pubname_table_in_use, align 4, !tbaa !4
  %214 = load i32* @pubname_table_allocated, align 4, !tbaa !4
  %cmp.i403 = icmp eq i32 %213, %214
  br i1 %cmp.i403, label %if.then1.i, label %if.end.if.end2_crit_edge.i

if.end.if.end2_crit_edge.i:                       ; preds = %if.end.i404
  %.pre8.i = load %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  br label %if.end2.i

if.then1.i:                                       ; preds = %if.end.i404
  %add.i405 = add i32 %213, 64
  store i32 %add.i405, i32* @pubname_table_allocated, align 4, !tbaa !4
  %215 = load %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  %216 = bitcast %struct.pubname_struct* %215 to i8*
  %conv.i406 = zext i32 %add.i405 to i64
  %mul.i407 = shl nuw nsw i64 %conv.i406, 4
  %call.i408 = call i8* @xrealloc(i8* %216, i64 %mul.i407) #5
  %217 = bitcast i8* %call.i408 to %struct.pubname_struct*
  store %struct.pubname_struct* %217, %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  %.pre.i409 = load i32* @pubname_table_in_use, align 4, !tbaa !4
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.then1.i, %if.end.if.end2_crit_edge.i
  %218 = phi %struct.pubname_struct* [ %217, %if.then1.i ], [ %.pre8.i, %if.end.if.end2_crit_edge.i ]
  %219 = phi i32 [ %.pre.i409, %if.then1.i ], [ %213, %if.end.if.end2_crit_edge.i ]
  %inc.i410 = add i32 %219, 1
  store i32 %inc.i410, i32* @pubname_table_in_use, align 4, !tbaa !4
  %idxprom.i411 = zext i32 %219 to i64
  %die3.i = getelementptr inbounds %struct.pubname_struct* %218, i64 %idxprom.i411, i32 0
  store %struct.die_struct* %subr_die.01125, %struct.die_struct** %die3.i, align 8, !tbaa !76
  %220 = load i8* (%union.tree_node*, i32)** @decl_printable_name, align 8, !tbaa !6
  %call.i.i412 = call i8* %220(%union.tree_node* %decl, i32 1) #5
  %call5.i = call noalias i8* @xstrdup(i8* %call.i.i412) #5
  %name.i = getelementptr inbounds %struct.pubname_struct* %218, i64 %idxprom.i411, i32 1
  store i8* %call5.i, i8** %name.i, align 8, !tbaa !74
  br label %add_pubname.exit

add_pubname.exit:                                 ; preds = %add_AT_lbl_id.exit, %if.end2.i
  %decl.idx356 = getelementptr %union.tree_node* %decl, i64 0, i32 0, i32 15
  %decl.idx356.val = load %union.tree_node** %decl.idx356, align 8, !tbaa !37
  %tobool.i = icmp eq %union.tree_node* %decl.idx356.val, null
  br i1 %tobool.i, label %add_arange.exit, label %if.end.i

if.end.i:                                         ; preds = %add_pubname.exit
  %221 = load i32* @arange_table_in_use, align 4, !tbaa !4
  %222 = load i32* @arange_table_allocated, align 4, !tbaa !4
  %cmp.i396 = icmp eq i32 %221, %222
  br i1 %cmp.i396, label %if.then2.i400, label %if.end.if.end3_crit_edge.i

if.end.if.end3_crit_edge.i:                       ; preds = %if.end.i
  %.pre1.i = load %struct.die_struct*** @arange_table, align 8, !tbaa !6
  br label %if.end3.i

if.then2.i400:                                    ; preds = %if.end.i
  %add.i397 = add i32 %221, 64
  store i32 %add.i397, i32* @arange_table_allocated, align 4, !tbaa !4
  %223 = load %struct.die_struct*** @arange_table, align 8, !tbaa !6
  %224 = bitcast %struct.die_struct** %223 to i8*
  %conv.i398 = zext i32 %add.i397 to i64
  %mul.i = shl nuw nsw i64 %conv.i398, 3
  %call.i399 = call i8* @xrealloc(i8* %224, i64 %mul.i) #5
  %225 = bitcast i8* %call.i399 to %struct.die_struct**
  store %struct.die_struct** %225, %struct.die_struct*** @arange_table, align 8, !tbaa !6
  %.pre.i = load i32* @arange_table_in_use, align 4, !tbaa !4
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then2.i400, %if.end.if.end3_crit_edge.i
  %226 = phi %struct.die_struct** [ %225, %if.then2.i400 ], [ %.pre1.i, %if.end.if.end3_crit_edge.i ]
  %227 = phi i32 [ %.pre.i, %if.then2.i400 ], [ %221, %if.end.if.end3_crit_edge.i ]
  %inc.i = add i32 %227, 1
  store i32 %inc.i, i32* @arange_table_in_use, align 4, !tbaa !4
  %idxprom.i = zext i32 %227 to i64
  %arrayidx.i401 = getelementptr inbounds %struct.die_struct** %226, i64 %idxprom.i
  store %struct.die_struct* %subr_die.01125, %struct.die_struct** %arrayidx.i401, align 8, !tbaa !6
  br label %add_arange.exit

add_arange.exit:                                  ; preds = %add_pubname.exit, %if.end3.i
  %228 = load i32* @frame_pointer_needed, align 4, !tbaa !4
  %tobool182 = icmp ne i32 %228, 0
  %229 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %230 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %cond = select i1 %tobool182, %struct.rtx_def* %229, %struct.rtx_def* %230
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %231 = load i32* %rtuint.i, align 4, !tbaa !4
  %cmp.i = icmp ugt i32 %231, 52
  br i1 %cmp.i, label %reg_loc_descriptor.exit, label %reg_number.exit.i

reg_number.exit.i:                                ; preds = %add_arange.exit
  %232 = load i32* @target_flags, align 4, !tbaa !4
  %and.i.i = and i32 %232, 33554432
  %tobool.i.i = icmp eq i32 %and.i.i, 0
  %idxprom.i.i = zext i32 %231 to i64
  %svr4_dbx_register_map.dbx64_register_map.i.i = select i1 %tobool.i.i, [53 x i32]* @svr4_dbx_register_map, [53 x i32]* @dbx64_register_map
  %cond.in.i.i = getelementptr inbounds [53 x i32]* %svr4_dbx_register_map.dbx64_register_map.i.i, i64 0, i64 %idxprom.i.i
  %cond.i.i = load i32* %cond.in.i.i, align 4
  %cmp1.i = icmp ult i32 %cond.i.i, 32
  br i1 %cmp1.i, label %if.then2.i, label %if.else.i

if.then2.i:                                       ; preds = %reg_number.exit.i
  %add.i = add i32 %cond.i.i, 80
  %call.i.i395 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %233 = bitcast i8* %call.i.i395 to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i.i = getelementptr inbounds i8* %call.i.i395, i64 8
  %234 = bitcast i8* %dw_loc_opc.i.i to i32*
  store i32 %add.i, i32* %234, align 4, !tbaa !18
  %dw_loc_oprnd1.i.i = getelementptr inbounds i8* %call.i.i395, i64 16
  %val_class.i.i = bitcast i8* %dw_loc_oprnd1.i.i to i32*
  store i32 6, i32* %val_class.i.i, align 4, !tbaa !23
  %v.i.i = getelementptr inbounds i8* %call.i.i395, i64 24
  %val_unsigned.i.i = bitcast i8* %v.i.i to i64*
  store i64 0, i64* %val_unsigned.i.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i.i = getelementptr inbounds i8* %call.i.i395, i64 40
  %val_class2.i.i = bitcast i8* %dw_loc_oprnd2.i.i to i32*
  store i32 6, i32* %val_class2.i.i, align 4, !tbaa !24
  %v4.i.i = getelementptr inbounds i8* %call.i.i395, i64 48
  %val_unsigned5.i.i = bitcast i8* %v4.i.i to i64*
  store i64 0, i64* %val_unsigned5.i.i, align 8, !tbaa !8
  br label %reg_loc_descriptor.exit

if.else.i:                                        ; preds = %reg_number.exit.i
  %conv.i = zext i32 %cond.i.i to i64
  %call.i8.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %235 = bitcast i8* %call.i8.i to %struct.dw_loc_descr_struct*
  %dw_loc_opc.i9.i = getelementptr inbounds i8* %call.i8.i, i64 8
  %236 = bitcast i8* %dw_loc_opc.i9.i to i32*
  store i32 144, i32* %236, align 4, !tbaa !18
  %dw_loc_oprnd1.i10.i = getelementptr inbounds i8* %call.i8.i, i64 16
  %val_class.i11.i = bitcast i8* %dw_loc_oprnd1.i10.i to i32*
  store i32 6, i32* %val_class.i11.i, align 4, !tbaa !23
  %v.i12.i = getelementptr inbounds i8* %call.i8.i, i64 24
  %val_unsigned.i13.i = bitcast i8* %v.i12.i to i64*
  store i64 %conv.i, i64* %val_unsigned.i13.i, align 8, !tbaa !8
  %dw_loc_oprnd2.i14.i = getelementptr inbounds i8* %call.i8.i, i64 40
  %val_class2.i15.i = bitcast i8* %dw_loc_oprnd2.i14.i to i32*
  store i32 6, i32* %val_class2.i15.i, align 4, !tbaa !24
  %v4.i16.i = getelementptr inbounds i8* %call.i8.i, i64 48
  %val_unsigned5.i17.i = bitcast i8* %v4.i16.i to i64*
  store i64 0, i64* %val_unsigned5.i17.i, align 8, !tbaa !8
  br label %reg_loc_descriptor.exit

reg_loc_descriptor.exit:                          ; preds = %add_arange.exit, %if.then2.i, %if.else.i
  %retval.0.i = phi %struct.dw_loc_descr_struct* [ null, %add_arange.exit ], [ %233, %if.then2.i ], [ %235, %if.else.i ]
  %call.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i, i64 8
  %237 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %237, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i to i32*
  store i32 64, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 2, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i, i64 24
  %val_loc.i = bitcast i8* %v.i to %struct.dw_loc_descr_struct**
  store %struct.dw_loc_descr_struct* %retval.0.i, %struct.dw_loc_descr_struct** %val_loc.i, align 8, !tbaa !6
  %cmp1.i.i = icmp ne i8* %call.i, null
  %or.cond.i.i = and i1 %cmp.i.i432, %cmp1.i.i
  br i1 %or.cond.i.i, label %if.then.i.i394, label %if.end186

if.then.i.i394:                                   ; preds = %reg_loc_descriptor.exit
  %238 = bitcast i8* %call.i to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %subr_die.01125, i64 0, i32 2
  %239 = load %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  store %struct.dw_attr_struct* %239, %struct.dw_attr_struct** %237, align 8, !tbaa !72
  store %struct.dw_attr_struct* %238, %struct.dw_attr_struct** %die_attr.i.i, align 8, !tbaa !73
  br label %if.end186

if.end186:                                        ; preds = %if.then.i.i394, %reg_loc_descriptor.exit, %get_AT_unsigned.exit575, %lor.lhs.false122, %if.else161, %equate_decl_number_to_die.exit470, %equate_decl_number_to_die.exit526
  %subr_die.01124 = phi %struct.die_struct* [ %subr_die.01125, %if.then.i.i394 ], [ %subr_die.01125, %reg_loc_descriptor.exit ], [ %subr_die.01126, %get_AT_unsigned.exit575 ], [ %subr_die.01126, %lor.lhs.false122 ], [ %subr_die.01125, %if.else161 ], [ %subr_die.01125, %equate_decl_number_to_die.exit470 ], [ %subr_die.01126, %equate_decl_number_to_die.exit526 ]
  %240 = phi i1 [ false, %if.then.i.i394 ], [ false, %reg_loc_descriptor.exit ], [ true, %get_AT_unsigned.exit575 ], [ true, %lor.lhs.false122 ], [ false, %if.else161 ], [ false, %equate_decl_number_to_die.exit470 ], [ true, %equate_decl_number_to_die.exit526 ]
  %241 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp187 = icmp ult i32 %241, 2
  br i1 %cmp187, label %if.end233, label %if.else190

if.else190:                                       ; preds = %if.end186
  br i1 %240, label %if.end233.thread, label %if.else193

if.end233.thread:                                 ; preds = %if.else190
  call fastcc void @gen_formal_types_die(%union.tree_node* %decl, %struct.die_struct* %subr_die.01124)
  br label %if.end245

if.else193:                                       ; preds = %if.else190
  %arguments = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 10
  %parm.01093 = load %union.tree_node** %arguments, align 8
  %tobool1951094 = icmp eq %union.tree_node* %parm.01093, null
  br i1 %tobool1951094, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.else193
  %cmp.i.i377 = icmp eq %struct.die_struct* %subr_die.01124, null
  %die_child.i.i.i384 = getelementptr inbounds %struct.die_struct* %subr_die.01124, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %parm.01095 = phi %union.tree_node* [ %parm.01093, %for.body.lr.ph ], [ %parm.0, %for.inc ]
  %code = getelementptr inbounds %union.tree_node* %parm.01095, i64 0, i32 0, i32 0, i32 2
  %bf.load197 = load i32* %code, align 8
  %bf.clear198 = and i32 %bf.load197, 255
  %cmp199 = icmp eq i32 %bf.clear198, 35
  br i1 %cmp199, label %if.then201, label %for.inc

if.then201:                                       ; preds = %for.body
  %name = getelementptr inbounds %union.tree_node* %parm.01095, i64 0, i32 0, i32 8
  %242 = load %union.tree_node** %name, align 8, !tbaa !86
  %tobool203 = icmp eq %union.tree_node* %242, null
  br i1 %tobool203, label %if.else210, label %land.lhs.true204

land.lhs.true204:                                 ; preds = %if.then201
  %id = getelementptr inbounds %union.tree_node* %242, i64 0, i32 0, i32 1
  %243 = getelementptr inbounds i8** %id, i64 1
  %244 = load i8** %243, align 8, !tbaa !105
  %call207 = call i32 @strcmp(i8* %244, i8* getelementptr inbounds ([19 x i8]* @.str415, i64 0, i64 0)) #5
  %tobool208 = icmp eq i32 %call207, 0
  br i1 %tobool208, label %if.then209, label %if.else210

if.then209:                                       ; preds = %land.lhs.true204
  %call.i.i375 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %245 = bitcast i8* %call.i.i375 to %struct.die_struct*
  %die_tag.i.i376 = bitcast i8* %call.i.i375 to i32*
  store i32 24, i32* %die_tag.i.i376, align 4, !tbaa !69
  br i1 %cmp.i.i377, label %if.else.i.i391, label %if.then.i.i379

if.then.i.i379:                                   ; preds = %if.then209
  %cmp1.i.i.i378 = icmp eq i8* %call.i.i375, null
  br i1 %cmp1.i.i.i378, label %for.inc, label %if.then.i.i.i381

if.then.i.i.i381:                                 ; preds = %if.then.i.i379
  %cmp2.i.i.i380 = icmp eq %struct.die_struct* %245, %subr_die.01124
  br i1 %cmp2.i.i.i380, label %if.then3.i.i.i382, label %if.end.i.i.i386

if.then3.i.i.i382:                                ; preds = %if.then.i.i.i381
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i386:                                  ; preds = %if.then.i.i.i381
  %die_parent.i.i.i383 = getelementptr inbounds i8* %call.i.i375, i64 24
  %246 = bitcast i8* %die_parent.i.i.i383 to %struct.die_struct**
  store %struct.die_struct* %subr_die.01124, %struct.die_struct** %246, align 8, !tbaa !55
  %247 = load %struct.die_struct** %die_child.i.i.i384, align 8, !tbaa !62
  %die_sib.i.i.i385 = getelementptr inbounds i8* %call.i.i375, i64 40
  %248 = bitcast i8* %die_sib.i.i.i385 to %struct.die_struct**
  store %struct.die_struct* %247, %struct.die_struct** %248, align 8, !tbaa !63
  store %struct.die_struct* %245, %struct.die_struct** %die_child.i.i.i384, align 8, !tbaa !62
  br label %for.inc

if.else.i.i391:                                   ; preds = %if.then209
  %call1.i.i387 = call noalias i8* @xmalloc(i64 24) #5
  %249 = bitcast i8* %call1.i.i387 to %struct.limbo_die_struct*
  %die2.i.i388 = bitcast i8* %call1.i.i387 to %struct.die_struct**
  store %struct.die_struct* %245, %struct.die_struct** %die2.i.i388, align 8, !tbaa !54
  %created_for.i.i389 = getelementptr inbounds i8* %call1.i.i387, i64 8
  %250 = bitcast i8* %created_for.i.i389 to %union.tree_node**
  store %union.tree_node* %parm.01095, %union.tree_node** %250, align 8, !tbaa !64
  %251 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i390 = getelementptr inbounds i8* %call1.i.i387, i64 16
  %252 = bitcast i8* %next.i.i390 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %251, %struct.limbo_die_struct** %252, align 8, !tbaa !52
  store %struct.limbo_die_struct* %249, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %for.inc

if.else210:                                       ; preds = %land.lhs.true204, %if.then201
  call fastcc void @gen_decl_die(%union.tree_node* %parm.01095, %struct.die_struct* %subr_die.01124)
  br label %for.inc

for.inc:                                          ; preds = %if.else.i.i391, %if.end.i.i.i386, %if.then.i.i379, %for.body, %if.else210
  %chain = getelementptr inbounds %union.tree_node* %parm.01095, i64 0, i32 0, i32 0, i32 0
  %parm.0 = load %union.tree_node** %chain, align 8
  %tobool195 = icmp eq %union.tree_node* %parm.0, null
  br i1 %tobool195, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.else193
  %type215 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %253 = load %union.tree_node** %type215, align 8, !tbaa !87
  %values = getelementptr inbounds %union.tree_node* %253, i64 0, i32 0, i32 1
  %254 = load i8** %values, align 8
  %cmp217 = icmp eq i8* %254, null
  br i1 %cmp217, label %if.else225, label %if.then219

if.then219:                                       ; preds = %for.end
  %255 = bitcast i8* %254 to %union.tree_node*
  %call220 = call %union.tree_node* @tree_last(%union.tree_node* %255) #5
  %value = getelementptr inbounds %union.tree_node* %call220, i64 0, i32 0, i32 2
  %256 = bitcast i32* %value to %union.tree_node**
  %257 = load %union.tree_node** %256, align 8, !tbaa !93
  %258 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !6
  %cmp221 = icmp eq %union.tree_node* %257, %258
  br i1 %cmp221, label %if.end233, label %if.then223

if.then223:                                       ; preds = %if.then219
  %call.i.i357 = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %259 = bitcast i8* %call.i.i357 to %struct.die_struct*
  %die_tag.i.i358 = bitcast i8* %call.i.i357 to i32*
  store i32 24, i32* %die_tag.i.i358, align 4, !tbaa !69
  %cmp.i.i359 = icmp eq %struct.die_struct* %subr_die.01124, null
  br i1 %cmp.i.i359, label %if.else.i.i373, label %if.then.i.i361

if.then.i.i361:                                   ; preds = %if.then223
  %cmp1.i.i.i360 = icmp eq i8* %call.i.i357, null
  br i1 %cmp1.i.i.i360, label %if.end233, label %if.then.i.i.i363

if.then.i.i.i363:                                 ; preds = %if.then.i.i361
  %cmp2.i.i.i362 = icmp eq %struct.die_struct* %259, %subr_die.01124
  br i1 %cmp2.i.i.i362, label %if.then3.i.i.i364, label %if.end.i.i.i368

if.then3.i.i.i364:                                ; preds = %if.then.i.i.i363
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i368:                                  ; preds = %if.then.i.i.i363
  %die_parent.i.i.i365 = getelementptr inbounds i8* %call.i.i357, i64 24
  %260 = bitcast i8* %die_parent.i.i.i365 to %struct.die_struct**
  store %struct.die_struct* %subr_die.01124, %struct.die_struct** %260, align 8, !tbaa !55
  %die_child.i.i.i366 = getelementptr inbounds %struct.die_struct* %subr_die.01124, i64 0, i32 4
  %261 = load %struct.die_struct** %die_child.i.i.i366, align 8, !tbaa !62
  %die_sib.i.i.i367 = getelementptr inbounds i8* %call.i.i357, i64 40
  %262 = bitcast i8* %die_sib.i.i.i367 to %struct.die_struct**
  store %struct.die_struct* %261, %struct.die_struct** %262, align 8, !tbaa !63
  store %struct.die_struct* %259, %struct.die_struct** %die_child.i.i.i366, align 8, !tbaa !62
  br label %if.end233

if.else.i.i373:                                   ; preds = %if.then223
  %call1.i.i369 = call noalias i8* @xmalloc(i64 24) #5
  %263 = bitcast i8* %call1.i.i369 to %struct.limbo_die_struct*
  %die2.i.i370 = bitcast i8* %call1.i.i369 to %struct.die_struct**
  store %struct.die_struct* %259, %struct.die_struct** %die2.i.i370, align 8, !tbaa !54
  %created_for.i.i371 = getelementptr inbounds i8* %call1.i.i369, i64 8
  %264 = bitcast i8* %created_for.i.i371 to %union.tree_node**
  store %union.tree_node* %decl, %union.tree_node** %264, align 8, !tbaa !64
  %265 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i372 = getelementptr inbounds i8* %call1.i.i369, i64 16
  %266 = bitcast i8* %next.i.i372 to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %265, %struct.limbo_die_struct** %266, align 8, !tbaa !52
  store %struct.limbo_die_struct* %263, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %if.end233

if.else225:                                       ; preds = %for.end
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %267 = load %union.tree_node** %initial, align 8, !tbaa !90
  %cmp227 = icmp eq %union.tree_node* %267, null
  br i1 %cmp227, label %if.then229, label %if.end233

if.then229:                                       ; preds = %if.else225
  %call.i.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %268 = bitcast i8* %call.i.i to %struct.die_struct*
  %die_tag.i.i = bitcast i8* %call.i.i to i32*
  store i32 24, i32* %die_tag.i.i, align 4, !tbaa !69
  %cmp.i.i = icmp eq %struct.die_struct* %subr_die.01124, null
  br i1 %cmp.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then229
  %cmp1.i.i.i = icmp eq i8* %call.i.i, null
  br i1 %cmp1.i.i.i, label %if.end233, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %cmp2.i.i.i = icmp eq %struct.die_struct* %268, %subr_die.01124
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i:                                     ; preds = %if.then.i.i.i
  %die_parent.i.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %269 = bitcast i8* %die_parent.i.i.i to %struct.die_struct**
  store %struct.die_struct* %subr_die.01124, %struct.die_struct** %269, align 8, !tbaa !55
  %die_child.i.i.i = getelementptr inbounds %struct.die_struct* %subr_die.01124, i64 0, i32 4
  %270 = load %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  %die_sib.i.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %271 = bitcast i8* %die_sib.i.i.i to %struct.die_struct**
  store %struct.die_struct* %270, %struct.die_struct** %271, align 8, !tbaa !63
  store %struct.die_struct* %268, %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  br label %if.end233

if.else.i.i:                                      ; preds = %if.then229
  %call1.i.i = call noalias i8* @xmalloc(i64 24) #5
  %272 = bitcast i8* %call1.i.i to %struct.limbo_die_struct*
  %die2.i.i = bitcast i8* %call1.i.i to %struct.die_struct**
  store %struct.die_struct* %268, %struct.die_struct** %die2.i.i, align 8, !tbaa !54
  %created_for.i.i = getelementptr inbounds i8* %call1.i.i, i64 8
  %273 = bitcast i8* %created_for.i.i to %union.tree_node**
  store %union.tree_node* %decl, %union.tree_node** %273, align 8, !tbaa !64
  %274 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i = getelementptr inbounds i8* %call1.i.i, i64 16
  %275 = bitcast i8* %next.i.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %274, %struct.limbo_die_struct** %275, align 8, !tbaa !52
  store %struct.limbo_die_struct* %272, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %if.end233

if.end233:                                        ; preds = %if.else.i.i, %if.end.i.i.i, %if.then.i.i, %if.else.i.i373, %if.end.i.i.i368, %if.then.i.i361, %if.then219, %if.else225, %if.end186
  %initial235 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %276 = load %union.tree_node** %initial235, align 8, !tbaa !90
  br i1 %240, label %if.end245, label %land.lhs.true237

land.lhs.true237:                                 ; preds = %if.end233
  %code239 = getelementptr inbounds %union.tree_node* %276, i64 0, i32 0, i32 0, i32 2
  %bf.load240 = load i32* %code239, align 8
  %bf.clear241 = and i32 %bf.load240, 255
  %cmp242 = icmp eq i32 %bf.clear241, 0
  br i1 %cmp242, label %if.end245, label %if.then244

if.then244:                                       ; preds = %land.lhs.true237
  call fastcc void @decls_for_scope(%union.tree_node* %276, %struct.die_struct* %subr_die.01124, i32 0)
  br label %if.end245

if.end245:                                        ; preds = %if.end233.thread, %if.then34, %land.lhs.true237, %if.then244, %if.end233
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_variable_die(%union.tree_node* %decl, %struct.die_struct* %context_die) #1 {
entry:
  %abstract_flag.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %0 = bitcast i48* %abstract_flag.i to i64*
  %bf.load.i = load i64* %0, align 8
  %bf.cast.i = and i64 %bf.load.i, 32768
  %tobool.i = icmp ne i64 %bf.cast.i, 0
  %abstract_origin4.phi.trans.insert.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 13
  %.pre.i = load %union.tree_node** %abstract_origin4.phi.trans.insert.i, align 8, !tbaa !89
  %cmp.i = icmp eq %union.tree_node* %.pre.i, %decl
  %or.cond.i = and i1 %tobool.i, %cmp.i
  %retval.0.i = select i1 %or.cond.i, %union.tree_node* null, %union.tree_node* %.pre.i
  %call.i = tail call noalias i8* @xcalloc(i64 1, i64 72) #5
  %1 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 52, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i150 = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i150, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %new_die.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %1, %context_die
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %2 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %2, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %3 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %4 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %3, %struct.die_struct** %4, align 8, !tbaa !63
  store %struct.die_struct* %1, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i:                                        ; preds = %entry
  %call1.i = tail call noalias i8* @xmalloc(i64 24) #5
  %5 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %1, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %6 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %decl, %union.tree_node** %6, align 8, !tbaa !64
  %7 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %8 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %7, %struct.limbo_die_struct** %8, align 8, !tbaa !52
  store %struct.limbo_die_struct* %5, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %decl.idx = getelementptr %union.tree_node* %decl, i64 0, i32 0, i32 3
  %decl.idx.val = load i32* %decl.idx, align 4, !tbaa !65
  %9 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i151 = icmp ugt i32 %9, %decl.idx.val
  br i1 %cmp.i151, label %cond.true.i, label %lookup_decl_die.exit

cond.true.i:                                      ; preds = %new_die.exit
  %idxprom.i = zext i32 %decl.idx.val to i64
  %10 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i = getelementptr inbounds %struct.die_struct** %10, i64 %idxprom.i
  %11 = load %struct.die_struct** %arrayidx.i, align 8, !tbaa !6
  br label %lookup_decl_die.exit

lookup_decl_die.exit:                             ; preds = %new_die.exit, %cond.true.i
  %cond.i = phi %struct.die_struct* [ %11, %cond.true.i ], [ null, %new_die.exit ]
  %bf.load = load i64* %0, align 8
  %bf.cast = and i64 %bf.load, 256
  %tobool.not = icmp ne i64 %bf.cast, 0
  %brmerge = or i1 %tobool.not, %cmp.i150
  br i1 %brmerge, label %lor.end, label %land.rhs.i

land.rhs.i:                                       ; preds = %lookup_decl_die.exit
  %die_tag.i153 = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 0
  %12 = load i32* %die_tag.i153, align 4, !tbaa !69
  %13 = and i32 %12, -5
  %14 = icmp eq i32 %13, 19
  br label %lor.end

lor.end:                                          ; preds = %lookup_decl_die.exit, %land.rhs.i
  %15 = phi i1 [ %tobool.not, %lookup_decl_die.exit ], [ %14, %land.rhs.i ]
  %cmp = icmp eq %union.tree_node* %retval.0.i, null
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %lor.end
  %code.i370 = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i371 = load i32* %code.i370, align 8
  %bf.clear.i372 = and i32 %bf.load.i371, 255
  %cmp.i373 = icmp eq i32 %bf.clear.i372, 30
  br i1 %cmp.i373, label %if.end11.i, label %if.then.i376

if.then.i376:                                     ; preds = %if.then
  %idxprom50.i = zext i32 %bf.clear.i372 to i64
  %arrayidx.i374 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50.i
  %16 = load i8* %arrayidx.i374, align 1, !tbaa !1
  %cmp5.i375 = icmp eq i8 %16, 116
  br i1 %cmp5.i375, label %if.then7.i, label %if.end.i379

if.then7.i:                                       ; preds = %if.then.i376
  %chain.i = getelementptr inbounds %union.tree_node* %retval.0.i, i64 0, i32 0, i32 0, i32 0
  %17 = load %union.tree_node** %chain.i, align 8, !tbaa !88
  br label %if.end.i379

if.end.i379:                                      ; preds = %if.then7.i, %if.then.i376
  %fn.0.i = phi %union.tree_node* [ %17, %if.then7.i ], [ %retval.0.i, %if.then.i376 ]
  %call.i377 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %fn.0.i) #5
  %tobool.i378 = icmp eq %union.tree_node* %call.i377, null
  br i1 %tobool.i378, label %if.end11.i, label %if.then9.i380

if.then9.i380:                                    ; preds = %if.end.i379
  tail call void @dwarf2out_abstract_function(%union.tree_node* %call.i377) #5
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i380, %if.end.i379, %if.then
  %bf.load14.i = load i32* %code.i370, align 8
  %bf.clear15.i = and i32 %bf.load14.i, 255
  %idxprom1649.i = zext i32 %bf.clear15.i to i64
  %arrayidx17.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1649.i
  %18 = load i8* %arrayidx17.i, align 1, !tbaa !1
  switch i8 %18, label %if.then38.i [
    i8 100, label %if.then21.i
    i8 116, label %if.then32.i
  ]

if.then21.i:                                      ; preds = %if.end11.i
  %origin.idx.i = getelementptr %union.tree_node* %retval.0.i, i64 0, i32 0, i32 3
  %origin.idx.val.i = load i32* %origin.idx.i, align 4, !tbaa !65
  %19 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i381 = icmp ugt i32 %19, %origin.idx.val.i
  br i1 %cmp.i.i381, label %cond.true.i.i, label %if.then38.i

cond.true.i.i:                                    ; preds = %if.then21.i
  %idxprom.i.i = zext i32 %origin.idx.val.i to i64
  %20 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i = getelementptr inbounds %struct.die_struct** %20, i64 %idxprom.i.i
  %21 = load %struct.die_struct** %arrayidx.i.i, align 8, !tbaa !6
  br label %if.end35.i

if.then32.i:                                      ; preds = %if.end11.i
  %origin.idx51.i = getelementptr %union.tree_node* %retval.0.i, i64 0, i32 0, i32 10
  %origin.idx51.val.i = load %union.tree_node** %origin.idx51.i, align 8
  %22 = bitcast %union.tree_node* %origin.idx51.val.i to %struct.die_struct*
  br label %if.end35.i

if.end35.i:                                       ; preds = %cond.true.i.i, %if.then32.i
  %origin_die.0.i = phi %struct.die_struct* [ %22, %if.then32.i ], [ %21, %cond.true.i.i ]
  %cmp36.i = icmp eq %struct.die_struct* %origin_die.0.i, null
  br i1 %cmp36.i, label %if.then38.i, label %add_abstract_origin_attribute.exit

if.then38.i:                                      ; preds = %if.then21.i, %if.end11.i, %if.end35.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9459, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.add_abstract_origin_attribute, i64 0, i64 0)) #7
  unreachable

add_abstract_origin_attribute.exit:               ; preds = %if.end35.i
  %call.i382 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i383 = getelementptr inbounds i8* %call.i382, i64 8
  %23 = bitcast i8* %dw_attr_next.i383 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %23, align 8, !tbaa !72
  %dw_attr.i384 = bitcast i8* %call.i382 to i32*
  store i32 49, i32* %dw_attr.i384, align 4, !tbaa !57
  %dw_attr_val.i385 = getelementptr inbounds i8* %call.i382, i64 16
  %val_class.i386 = bitcast i8* %dw_attr_val.i385 to i32*
  store i32 10, i32* %val_class.i386, align 4, !tbaa !59
  %v.i387 = getelementptr inbounds i8* %call.i382, i64 24
  %die2.i388 = bitcast i8* %v.i387 to %struct.die_struct**
  store %struct.die_struct* %origin_die.0.i, %struct.die_struct** %die2.i388, align 8, !tbaa !60
  %external.i389 = getelementptr inbounds i8* %call.i382, i64 32
  %24 = bitcast i8* %external.i389 to i32*
  store i32 0, i32* %24, align 4, !tbaa !108
  %cmp.i.i390 = icmp ne i8* %call.i, null
  %cmp1.i.i391 = icmp ne i8* %call.i382, null
  %or.cond.i.i392 = and i1 %cmp.i.i390, %cmp1.i.i391
  br i1 %or.cond.i.i392, label %if.then.i.i394, label %if.end74

if.then.i.i394:                                   ; preds = %add_abstract_origin_attribute.exit
  %25 = bitcast i8* %call.i382 to %struct.dw_attr_struct*
  %die_attr.i.i393 = getelementptr inbounds i8* %call.i, i64 16
  %26 = bitcast i8* %die_attr.i.i393 to %struct.dw_attr_struct**
  %27 = load %struct.dw_attr_struct** %26, align 8, !tbaa !73
  store %struct.dw_attr_struct* %27, %struct.dw_attr_struct** %23, align 8, !tbaa !72
  store %struct.dw_attr_struct* %25, %struct.dw_attr_struct** %26, align 8, !tbaa !73
  br label %if.end74

if.else:                                          ; preds = %lor.end
  %tobool6 = icmp eq %struct.die_struct* %cond.i, null
  %readonly_flag.pre = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  br i1 %tobool6, label %if.else33, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %bf.load7 = load i32* %readonly_flag.pre, align 8
  %bf.clear9 = and i32 %bf.load7, 262144
  %tobool10 = icmp eq i32 %bf.clear9, 0
  br i1 %tobool10, label %if.else33, label %tailrecurse.i.i

tailrecurse.i.i:                                  ; preds = %land.lhs.true, %for.end.i.i
  %die.tr.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.end.i.i ], [ %cond.i, %land.lhs.true ]
  %cmp.i.i = icmp eq %struct.die_struct* %die.tr.i.i, null
  br i1 %cmp.i.i, label %if.else33, label %if.then.i.i154

if.then.i.i154:                                   ; preds = %tailrecurse.i.i
  %die_attr.i.i = getelementptr inbounds %struct.die_struct* %die.tr.i.i, i64 0, i32 2
  %a.027.i.i = load %struct.dw_attr_struct** %die_attr.i.i, align 8
  %cmp128.i.i = icmp eq %struct.dw_attr_struct* %a.027.i.i, null
  br i1 %cmp128.i.i, label %if.else33, label %for.body.i.i

for.body.i.i:                                     ; preds = %if.then.i.i154, %for.inc.i.i
  %a.030.i.i = phi %struct.dw_attr_struct* [ %a.0.i.i, %for.inc.i.i ], [ %a.027.i.i, %if.then.i.i154 ]
  %spec.029.i.i = phi %struct.die_struct* [ %spec.1.i.i, %for.inc.i.i ], [ null, %if.then.i.i154 ]
  %dw_attr.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 0
  %28 = load i32* %dw_attr.i.i, align 4, !tbaa !57
  switch i32 %28, label %for.inc.i.i [
    i32 60, label %land.lhs.true.i.i
    i32 71, label %land.lhs.true.i.i.i
    i32 49, label %land.lhs.true.i.i.i
  ]

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i, %for.body.i.i
  %a.idx.i.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i = load i32* %a.idx.i.i.i, align 4, !tbaa !59
  %cmp.i.i.i = icmp eq i32 %a.idx.val.i.i.i, 10
  br i1 %cmp.i.i.i, label %AT_ref.exit.i.i, label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i:                                  ; preds = %land.lhs.true.i.i.i
  %v.i.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %die.i.i.i = bitcast %union.anon.3* %v.i.i.i to %struct.die_struct**
  %29 = load %struct.die_struct** %die.i.i.i, align 8, !tbaa !60
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %AT_ref.exit.i.i, %for.body.i.i
  %spec.1.i.i = phi %struct.die_struct* [ %29, %AT_ref.exit.i.i ], [ %spec.029.i.i, %for.body.i.i ]
  %dw_attr_next.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 1
  %a.0.i.i = load %struct.dw_attr_struct** %dw_attr_next.i.i, align 8
  %cmp1.i.i155 = icmp eq %struct.dw_attr_struct* %a.0.i.i, null
  br i1 %cmp1.i.i155, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i
  %tobool.i.i = icmp eq %struct.die_struct* %spec.1.i.i, null
  br i1 %tobool.i.i, label %if.else33, label %tailrecurse.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %a.idx.i.i = getelementptr %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 0
  %a.idx.val.i.i = load i32* %a.idx.i.i, align 4, !tbaa !59
  %cmp.i2.i = icmp eq i32 %a.idx.val.i.i, 9
  br i1 %cmp.i2.i, label %get_AT_flag.exit, label %if.end.i.i156

if.end.i.i156:                                    ; preds = %land.lhs.true.i.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4387, i8* getelementptr inbounds ([8 x i8]* @__FUNCTION__.AT_flag, i64 0, i64 0)) #7
  unreachable

get_AT_flag.exit:                                 ; preds = %land.lhs.true.i.i
  %v.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i, i64 0, i32 2, i32 1
  %val_flag.i.i = bitcast %union.anon.3* %v.i.i to i8*
  %30 = load i8* %val_flag.i.i, align 1, !tbaa !1
  %cmp13 = icmp eq i8 %30, 1
  br i1 %cmp13, label %if.then14, label %if.else33

if.then14:                                        ; preds = %get_AT_flag.exit
  %call.i158 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i158, i64 8
  %31 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %31, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i158 to i32*
  store i32 71, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i158, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 10, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i158, i64 24
  %die2.i159 = bitcast i8* %v.i to %struct.die_struct**
  store %struct.die_struct* %cond.i, %struct.die_struct** %die2.i159, align 8, !tbaa !60
  %external.i = getelementptr inbounds i8* %call.i158, i64 32
  %32 = bitcast i8* %external.i to i32*
  store i32 0, i32* %32, align 4, !tbaa !108
  %cmp.i.i160 = icmp ne i8* %call.i, null
  %cmp1.i.i161 = icmp ne i8* %call.i158, null
  %or.cond.i.i = and i1 %cmp.i.i160, %cmp1.i.i161
  br i1 %or.cond.i.i, label %if.then.i.i163, label %add_AT_die_ref.exit

if.then.i.i163:                                   ; preds = %if.then14
  %33 = bitcast i8* %call.i158 to %struct.dw_attr_struct*
  %die_attr.i.i162 = getelementptr inbounds i8* %call.i, i64 16
  %34 = bitcast i8* %die_attr.i.i162 to %struct.dw_attr_struct**
  %35 = load %struct.dw_attr_struct** %34, align 8, !tbaa !73
  store %struct.dw_attr_struct* %35, %struct.dw_attr_struct** %31, align 8, !tbaa !72
  store %struct.dw_attr_struct* %33, %struct.dw_attr_struct** %34, align 8, !tbaa !73
  br label %add_AT_die_ref.exit

add_AT_die_ref.exit:                              ; preds = %if.then14, %if.then.i.i163
  %name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 8
  %36 = load %union.tree_node** %name, align 8, !tbaa !86
  %tobool16 = icmp eq %union.tree_node* %36, null
  br i1 %tobool16, label %if.end74, label %if.then17

if.then17:                                        ; preds = %add_AT_die_ref.exit
  %filename = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 1
  %37 = load i8** %filename, align 8, !tbaa !127
  %call19 = tail call fastcc i32 @lookup_filename(i8* %37)
  br label %tailrecurse.i.i166

tailrecurse.i.i166:                               ; preds = %for.end.i.i190, %if.then17
  %die.tr.i.i164 = phi %struct.die_struct* [ %cond.i, %if.then17 ], [ %spec.1.i.i184, %for.end.i.i190 ]
  %cmp.i.i165 = icmp eq %struct.die_struct* %die.tr.i.i164, null
  br i1 %cmp.i.i165, label %get_AT_unsigned.exit, label %if.then.i.i170

if.then.i.i170:                                   ; preds = %tailrecurse.i.i166
  %die_attr.i.i167 = getelementptr inbounds %struct.die_struct* %die.tr.i.i164, i64 0, i32 2
  %a.027.i.i168 = load %struct.dw_attr_struct** %die_attr.i.i167, align 8
  %cmp128.i.i169 = icmp eq %struct.dw_attr_struct* %a.027.i.i168, null
  br i1 %cmp128.i.i169, label %get_AT_unsigned.exit, label %for.body.i.i175

for.body.i.i175:                                  ; preds = %if.then.i.i170, %for.inc.i.i188
  %a.030.i.i171 = phi %struct.dw_attr_struct* [ %a.0.i.i186, %for.inc.i.i188 ], [ %a.027.i.i168, %if.then.i.i170 ]
  %spec.029.i.i172 = phi %struct.die_struct* [ %spec.1.i.i184, %for.inc.i.i188 ], [ null, %if.then.i.i170 ]
  %dw_attr.i.i173 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i171, i64 0, i32 0
  %38 = load i32* %dw_attr.i.i173, align 4, !tbaa !57
  switch i32 %38, label %for.inc.i.i188 [
    i32 58, label %land.lhs.true.i.i193
    i32 71, label %land.lhs.true.i.i.i179
    i32 49, label %land.lhs.true.i.i.i179
  ]

land.lhs.true.i.i.i179:                           ; preds = %for.body.i.i175, %for.body.i.i175
  %a.idx.i.i.i176 = getelementptr %struct.dw_attr_struct* %a.030.i.i171, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i177 = load i32* %a.idx.i.i.i176, align 4, !tbaa !59
  %cmp.i.i.i178 = icmp eq i32 %a.idx.val.i.i.i177, 10
  br i1 %cmp.i.i.i178, label %AT_ref.exit.i.i183, label %if.end.i.i.i180

if.end.i.i.i180:                                  ; preds = %land.lhs.true.i.i.i179
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i183:                               ; preds = %land.lhs.true.i.i.i179
  %v.i.i.i181 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i171, i64 0, i32 2, i32 1
  %die.i.i.i182 = bitcast %union.anon.3* %v.i.i.i181 to %struct.die_struct**
  %39 = load %struct.die_struct** %die.i.i.i182, align 8, !tbaa !60
  br label %for.inc.i.i188

for.inc.i.i188:                                   ; preds = %for.body.i.i175, %AT_ref.exit.i.i183
  %spec.1.i.i184 = phi %struct.die_struct* [ %39, %AT_ref.exit.i.i183 ], [ %spec.029.i.i172, %for.body.i.i175 ]
  %dw_attr_next.i.i185 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i171, i64 0, i32 1
  %a.0.i.i186 = load %struct.dw_attr_struct** %dw_attr_next.i.i185, align 8
  %cmp1.i.i187 = icmp eq %struct.dw_attr_struct* %a.0.i.i186, null
  br i1 %cmp1.i.i187, label %for.end.i.i190, label %for.body.i.i175

for.end.i.i190:                                   ; preds = %for.inc.i.i188
  %tobool.i.i189 = icmp eq %struct.die_struct* %spec.1.i.i184, null
  br i1 %tobool.i.i189, label %get_AT_unsigned.exit, label %tailrecurse.i.i166

land.lhs.true.i.i193:                             ; preds = %for.body.i.i175
  %a.idx.i.i191 = getelementptr %struct.dw_attr_struct* %a.030.i.i171, i64 0, i32 2, i32 0
  %a.idx.val.i.i192 = load i32* %a.idx.i.i191, align 4, !tbaa !59
  %cmp.i4.i = icmp eq i32 %a.idx.val.i.i192, 6
  br i1 %cmp.i4.i, label %AT_unsigned.exit.i, label %if.end.i.i194

if.end.i.i194:                                    ; preds = %land.lhs.true.i.i193
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i:                               ; preds = %land.lhs.true.i.i193
  %val_unsigned.i.i = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i171, i64 0, i32 2, i32 1, i32 0, i32 0
  %40 = load i64* %val_unsigned.i.i, align 8, !tbaa !8
  %phitmp.i = trunc i64 %40 to i32
  br label %get_AT_unsigned.exit

get_AT_unsigned.exit:                             ; preds = %tailrecurse.i.i166, %if.then.i.i170, %for.end.i.i190, %AT_unsigned.exit.i
  %cond.i195 = phi i32 [ %phitmp.i, %AT_unsigned.exit.i ], [ 0, %for.end.i.i190 ], [ 0, %if.then.i.i170 ], [ 0, %tailrecurse.i.i166 ]
  %cmp21 = icmp eq i32 %cond.i195, %call19
  br i1 %cmp21, label %tailrecurse.i.i209, label %if.then22

if.then22:                                        ; preds = %get_AT_unsigned.exit
  %conv = zext i32 %call19 to i64
  %call.i196 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i197 = getelementptr inbounds i8* %call.i196, i64 8
  %41 = bitcast i8* %dw_attr_next.i197 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %41, align 8, !tbaa !72
  %dw_attr.i198 = bitcast i8* %call.i196 to i32*
  store i32 58, i32* %dw_attr.i198, align 4, !tbaa !57
  %dw_attr_val.i199 = getelementptr inbounds i8* %call.i196, i64 16
  %val_class.i200 = bitcast i8* %dw_attr_val.i199 to i32*
  store i32 6, i32* %val_class.i200, align 4, !tbaa !59
  %v.i201 = getelementptr inbounds i8* %call.i196, i64 24
  %val_unsigned.i = bitcast i8* %v.i201 to i64*
  store i64 %conv, i64* %val_unsigned.i, align 8, !tbaa !8
  %cmp1.i.i203 = icmp ne i8* %call.i196, null
  %or.cond.i.i204 = and i1 %cmp.i.i160, %cmp1.i.i203
  br i1 %or.cond.i.i204, label %if.then.i.i206, label %tailrecurse.i.i209

if.then.i.i206:                                   ; preds = %if.then22
  %42 = bitcast i8* %call.i196 to %struct.dw_attr_struct*
  %die_attr.i.i205 = getelementptr inbounds i8* %call.i, i64 16
  %43 = bitcast i8* %die_attr.i.i205 to %struct.dw_attr_struct**
  %44 = load %struct.dw_attr_struct** %43, align 8, !tbaa !73
  store %struct.dw_attr_struct* %44, %struct.dw_attr_struct** %41, align 8, !tbaa !72
  store %struct.dw_attr_struct* %42, %struct.dw_attr_struct** %43, align 8, !tbaa !73
  br label %tailrecurse.i.i209

tailrecurse.i.i209:                               ; preds = %get_AT_unsigned.exit, %if.then22, %if.then.i.i206, %for.end.i.i234
  %die.tr.i.i207 = phi %struct.die_struct* [ %spec.1.i.i228, %for.end.i.i234 ], [ %cond.i, %if.then.i.i206 ], [ %cond.i, %if.then22 ], [ %cond.i, %get_AT_unsigned.exit ]
  %cmp.i.i208 = icmp eq %struct.die_struct* %die.tr.i.i207, null
  br i1 %cmp.i.i208, label %get_AT_unsigned.exit244, label %if.then.i.i213

if.then.i.i213:                                   ; preds = %tailrecurse.i.i209
  %die_attr.i.i210 = getelementptr inbounds %struct.die_struct* %die.tr.i.i207, i64 0, i32 2
  %a.027.i.i211 = load %struct.dw_attr_struct** %die_attr.i.i210, align 8
  %cmp128.i.i212 = icmp eq %struct.dw_attr_struct* %a.027.i.i211, null
  br i1 %cmp128.i.i212, label %get_AT_unsigned.exit244, label %for.body.i.i218

for.body.i.i218:                                  ; preds = %if.then.i.i213, %for.inc.i.i232
  %a.030.i.i214 = phi %struct.dw_attr_struct* [ %a.0.i.i230, %for.inc.i.i232 ], [ %a.027.i.i211, %if.then.i.i213 ]
  %spec.029.i.i215 = phi %struct.die_struct* [ %spec.1.i.i228, %for.inc.i.i232 ], [ null, %if.then.i.i213 ]
  %dw_attr.i.i216 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i214, i64 0, i32 0
  %45 = load i32* %dw_attr.i.i216, align 4, !tbaa !57
  switch i32 %45, label %for.inc.i.i232 [
    i32 59, label %land.lhs.true.i.i238
    i32 71, label %land.lhs.true.i.i.i223
    i32 49, label %land.lhs.true.i.i.i223
  ]

land.lhs.true.i.i.i223:                           ; preds = %for.body.i.i218, %for.body.i.i218
  %a.idx.i.i.i220 = getelementptr %struct.dw_attr_struct* %a.030.i.i214, i64 0, i32 2, i32 0
  %a.idx.val.i.i.i221 = load i32* %a.idx.i.i.i220, align 4, !tbaa !59
  %cmp.i.i.i222 = icmp eq i32 %a.idx.val.i.i.i221, 10
  br i1 %cmp.i.i.i222, label %AT_ref.exit.i.i227, label %if.end.i.i.i224

if.end.i.i.i224:                                  ; preds = %land.lhs.true.i.i.i223
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4588, i8* getelementptr inbounds ([7 x i8]* @__FUNCTION__.AT_ref, i64 0, i64 0)) #7
  unreachable

AT_ref.exit.i.i227:                               ; preds = %land.lhs.true.i.i.i223
  %v.i.i.i225 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i214, i64 0, i32 2, i32 1
  %die.i.i.i226 = bitcast %union.anon.3* %v.i.i.i225 to %struct.die_struct**
  %46 = load %struct.die_struct** %die.i.i.i226, align 8, !tbaa !60
  br label %for.inc.i.i232

for.inc.i.i232:                                   ; preds = %for.body.i.i218, %AT_ref.exit.i.i227
  %spec.1.i.i228 = phi %struct.die_struct* [ %46, %AT_ref.exit.i.i227 ], [ %spec.029.i.i215, %for.body.i.i218 ]
  %dw_attr_next.i.i229 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i214, i64 0, i32 1
  %a.0.i.i230 = load %struct.dw_attr_struct** %dw_attr_next.i.i229, align 8
  %cmp1.i.i231 = icmp eq %struct.dw_attr_struct* %a.0.i.i230, null
  br i1 %cmp1.i.i231, label %for.end.i.i234, label %for.body.i.i218

for.end.i.i234:                                   ; preds = %for.inc.i.i232
  %tobool.i.i233 = icmp eq %struct.die_struct* %spec.1.i.i228, null
  br i1 %tobool.i.i233, label %get_AT_unsigned.exit244, label %tailrecurse.i.i209

land.lhs.true.i.i238:                             ; preds = %for.body.i.i218
  %a.idx.i.i235 = getelementptr %struct.dw_attr_struct* %a.030.i.i214, i64 0, i32 2, i32 0
  %a.idx.val.i.i236 = load i32* %a.idx.i.i235, align 4, !tbaa !59
  %cmp.i4.i237 = icmp eq i32 %a.idx.val.i.i236, 6
  br i1 %cmp.i4.i237, label %AT_unsigned.exit.i242, label %if.end.i.i239

if.end.i.i239:                                    ; preds = %land.lhs.true.i.i238
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 4441, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.AT_unsigned, i64 0, i64 0)) #7
  unreachable

AT_unsigned.exit.i242:                            ; preds = %land.lhs.true.i.i238
  %val_unsigned.i.i240 = getelementptr inbounds %struct.dw_attr_struct* %a.030.i.i214, i64 0, i32 2, i32 1, i32 0, i32 0
  %47 = load i64* %val_unsigned.i.i240, align 8, !tbaa !8
  %phitmp.i241 = trunc i64 %47 to i32
  br label %get_AT_unsigned.exit244

get_AT_unsigned.exit244:                          ; preds = %tailrecurse.i.i209, %if.then.i.i213, %for.end.i.i234, %AT_unsigned.exit.i242
  %cond.i243 = phi i32 [ %phitmp.i241, %AT_unsigned.exit.i242 ], [ 0, %for.end.i.i234 ], [ 0, %if.then.i.i213 ], [ 0, %tailrecurse.i.i209 ]
  %linenum = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %48 = load i32* %linenum, align 4, !tbaa !91
  %cmp25 = icmp eq i32 %cond.i243, %48
  br i1 %cmp25, label %if.end74, label %if.then27

if.then27:                                        ; preds = %get_AT_unsigned.exit244
  %conv30 = sext i32 %48 to i64
  %call.i245 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i246 = getelementptr inbounds i8* %call.i245, i64 8
  %49 = bitcast i8* %dw_attr_next.i246 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %49, align 8, !tbaa !72
  %dw_attr.i247 = bitcast i8* %call.i245 to i32*
  store i32 59, i32* %dw_attr.i247, align 4, !tbaa !57
  %dw_attr_val.i248 = getelementptr inbounds i8* %call.i245, i64 16
  %val_class.i249 = bitcast i8* %dw_attr_val.i248 to i32*
  store i32 6, i32* %val_class.i249, align 4, !tbaa !59
  %v.i250 = getelementptr inbounds i8* %call.i245, i64 24
  %val_unsigned.i251 = bitcast i8* %v.i250 to i64*
  store i64 %conv30, i64* %val_unsigned.i251, align 8, !tbaa !8
  %cmp1.i.i253 = icmp ne i8* %call.i245, null
  %or.cond.i.i254 = and i1 %cmp.i.i160, %cmp1.i.i253
  br i1 %or.cond.i.i254, label %if.then.i.i256, label %if.end74

if.then.i.i256:                                   ; preds = %if.then27
  %50 = bitcast i8* %call.i245 to %struct.dw_attr_struct*
  %die_attr.i.i255 = getelementptr inbounds i8* %call.i, i64 16
  %51 = bitcast i8* %die_attr.i.i255 to %struct.dw_attr_struct**
  %52 = load %struct.dw_attr_struct** %51, align 8, !tbaa !73
  store %struct.dw_attr_struct* %52, %struct.dw_attr_struct** %49, align 8, !tbaa !72
  store %struct.dw_attr_struct* %50, %struct.dw_attr_struct** %51, align 8, !tbaa !73
  br label %if.end74

if.else33:                                        ; preds = %if.then.i.i154, %tailrecurse.i.i, %for.end.i.i, %if.else, %land.lhs.true, %get_AT_flag.exit
  tail call fastcc void @add_name_and_src_coords_attributes(%struct.die_struct* %1, %union.tree_node* %decl)
  %type = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %53 = load %union.tree_node** %type, align 8, !tbaa !87
  %bf.load36 = load i32* %readonly_flag.pre, align 8
  %bf.clear38 = and i32 %bf.load36, 4096
  %bf.clear42 = and i32 %bf.load36, 2048
  %code1.i = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 0, i32 2
  %bf.load.i350 = load i32* %code1.i, align 8
  %bf.clear.i351 = and i32 %bf.load.i350, 255
  %54 = and i32 %bf.load.i350, 254
  %55 = icmp eq i32 %54, 6
  br i1 %55, label %land.lhs.true.i352, label %if.end.i356

land.lhs.true.i352:                               ; preds = %if.else33
  %type4.i = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 0, i32 1
  %56 = load %union.tree_node** %type4.i, align 8, !tbaa !87
  %cmp5.i = icmp eq %union.tree_node* %56, null
  br i1 %cmp5.i, label %if.end.i356, label %land.lhs.true6.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i352
  %57 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 11
  %58 = load %union.tree_node** %57, align 8, !tbaa !102
  %cmp8.i = icmp eq %union.tree_node* %58, null
  br i1 %cmp8.i, label %if.then.i355, label %if.end.i356

if.then.i355:                                     ; preds = %land.lhs.true6.i
  %code12.i = getelementptr inbounds %union.tree_node* %56, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i353 = load i32* %code12.i, align 8
  %bf.clear14.i354 = and i32 %bf.load13.i353, 255
  br label %if.end.i356

if.end.i356:                                      ; preds = %if.then.i355, %land.lhs.true6.i, %land.lhs.true.i352, %if.else33
  %bf.load27.i = phi i32 [ %bf.load13.i353, %if.then.i355 ], [ %bf.load.i350, %land.lhs.true6.i ], [ %bf.load.i350, %land.lhs.true.i352 ], [ %bf.load.i350, %if.else33 ]
  %type.addr.0.i = phi %union.tree_node* [ %56, %if.then.i355 ], [ %53, %land.lhs.true6.i ], [ %53, %land.lhs.true.i352 ], [ %53, %if.else33 ]
  %code.0.i = phi i32 [ %bf.clear14.i354, %if.then.i355 ], [ %bf.clear.i351, %land.lhs.true6.i ], [ %bf.clear.i351, %land.lhs.true.i352 ], [ %bf.clear.i351, %if.else33 ]
  switch i32 %code.0.i, label %if.end19.i [
    i32 5, label %add_type_attribute.exit
    i32 0, label %add_type_attribute.exit
  ]

if.end19.i:                                       ; preds = %if.end.i356
  %tobool.i357 = icmp eq i32 %bf.clear38, 0
  br i1 %tobool.i357, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %if.end19.i
  %bf.clear22.i = and i32 %bf.load27.i, 4096
  %tobool23.i = icmp ne i32 %bf.clear22.i, 0
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %if.end19.i
  %59 = phi i1 [ true, %if.end19.i ], [ %tobool23.i, %lor.rhs.i ]
  %lor.ext.i = zext i1 %59 to i32
  %tobool24.i = icmp eq i32 %bf.clear42, 0
  br i1 %tobool24.i, label %lor.rhs25.i, label %lor.end31.i

lor.rhs25.i:                                      ; preds = %lor.end.i
  %bf.clear29.i = and i32 %bf.load27.i, 2048
  %tobool30.i = icmp ne i32 %bf.clear29.i, 0
  br label %lor.end31.i

lor.end31.i:                                      ; preds = %lor.rhs25.i, %lor.end.i
  %60 = phi i1 [ true, %lor.end.i ], [ %tobool30.i, %lor.rhs25.i ]
  %lor.ext32.i = zext i1 %60 to i32
  %call.i358 = tail call fastcc %struct.die_struct* @modified_type_die(%union.tree_node* %type.addr.0.i, i32 %lor.ext.i, i32 %lor.ext32.i, %struct.die_struct* %context_die) #5
  %cmp33.i = icmp eq %struct.die_struct* %call.i358, null
  br i1 %cmp33.i, label %add_type_attribute.exit, label %if.then34.i

if.then34.i:                                      ; preds = %lor.end31.i
  %call.i.i359 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i360 = getelementptr inbounds i8* %call.i.i359, i64 8
  %61 = bitcast i8* %dw_attr_next.i.i360 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %61, align 8, !tbaa !72
  %dw_attr.i.i361 = bitcast i8* %call.i.i359 to i32*
  store i32 73, i32* %dw_attr.i.i361, align 4, !tbaa !57
  %dw_attr_val.i.i362 = getelementptr inbounds i8* %call.i.i359, i64 16
  %val_class.i.i363 = bitcast i8* %dw_attr_val.i.i362 to i32*
  store i32 10, i32* %val_class.i.i363, align 4, !tbaa !59
  %v.i.i364 = getelementptr inbounds i8* %call.i.i359, i64 24
  %die2.i.i = bitcast i8* %v.i.i364 to %struct.die_struct**
  store %struct.die_struct* %call.i358, %struct.die_struct** %die2.i.i, align 8, !tbaa !60
  %external.i.i = getelementptr inbounds i8* %call.i.i359, i64 32
  %62 = bitcast i8* %external.i.i to i32*
  store i32 0, i32* %62, align 4, !tbaa !108
  %cmp.i.i.i365 = icmp ne i8* %call.i, null
  %cmp1.i.i.i366 = icmp ne i8* %call.i.i359, null
  %or.cond.i.i.i367 = and i1 %cmp.i.i.i365, %cmp1.i.i.i366
  br i1 %or.cond.i.i.i367, label %if.then.i.i.i369, label %add_type_attribute.exit

if.then.i.i.i369:                                 ; preds = %if.then34.i
  %63 = bitcast i8* %call.i.i359 to %struct.dw_attr_struct*
  %die_attr.i.i.i368 = getelementptr inbounds i8* %call.i, i64 16
  %64 = bitcast i8* %die_attr.i.i.i368 to %struct.dw_attr_struct**
  %65 = load %struct.dw_attr_struct** %64, align 8, !tbaa !73
  store %struct.dw_attr_struct* %65, %struct.dw_attr_struct** %61, align 8, !tbaa !72
  store %struct.dw_attr_struct* %63, %struct.dw_attr_struct** %64, align 8, !tbaa !73
  br label %add_type_attribute.exit

add_type_attribute.exit:                          ; preds = %if.then34.i, %if.then.i.i.i369, %if.end.i356, %if.end.i356, %lor.end31.i
  %bf.load44 = load i32* %readonly_flag.pre, align 8
  %bf.clear46 = and i32 %bf.load44, 524288
  %tobool47 = icmp eq i32 %bf.clear46, 0
  br i1 %tobool47, label %if.end49, label %if.then48

if.then48:                                        ; preds = %add_type_attribute.exit
  %call.i258 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i259 = getelementptr inbounds i8* %call.i258, i64 8
  %66 = bitcast i8* %dw_attr_next.i259 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %66, align 8, !tbaa !72
  %dw_attr.i260 = bitcast i8* %call.i258 to i32*
  store i32 63, i32* %dw_attr.i260, align 4, !tbaa !57
  %dw_attr_val.i261 = getelementptr inbounds i8* %call.i258, i64 16
  %val_class.i262 = bitcast i8* %dw_attr_val.i261 to i32*
  store i32 9, i32* %val_class.i262, align 4, !tbaa !59
  %v.i263 = getelementptr inbounds i8* %call.i258, i64 24
  store i8 1, i8* %v.i263, align 1, !tbaa !1
  %cmp.i.i264 = icmp ne i8* %call.i, null
  %cmp1.i.i265 = icmp ne i8* %call.i258, null
  %or.cond.i.i266 = and i1 %cmp.i.i264, %cmp1.i.i265
  br i1 %or.cond.i.i266, label %if.then.i.i268, label %if.end49

if.then.i.i268:                                   ; preds = %if.then48
  %67 = bitcast i8* %call.i258 to %struct.dw_attr_struct*
  %die_attr.i.i267 = getelementptr inbounds i8* %call.i, i64 16
  %68 = bitcast i8* %die_attr.i.i267 to %struct.dw_attr_struct**
  %69 = load %struct.dw_attr_struct** %68, align 8, !tbaa !73
  store %struct.dw_attr_struct* %69, %struct.dw_attr_struct** %66, align 8, !tbaa !72
  store %struct.dw_attr_struct* %67, %struct.dw_attr_struct** %68, align 8, !tbaa !73
  br label %if.end49

if.end49:                                         ; preds = %if.then.i.i268, %if.then48, %add_type_attribute.exit
  %bf.load51 = load i64* %0, align 8
  %bf.cast54 = and i64 %bf.load51, 4194304
  %tobool55 = icmp eq i64 %bf.cast54, 0
  br i1 %tobool55, label %if.end57, label %if.then56

if.then56:                                        ; preds = %if.end49
  %call.i269 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i270 = getelementptr inbounds i8* %call.i269, i64 8
  %70 = bitcast i8* %dw_attr_next.i270 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %70, align 8, !tbaa !72
  %dw_attr.i271 = bitcast i8* %call.i269 to i32*
  store i32 52, i32* %dw_attr.i271, align 4, !tbaa !57
  %dw_attr_val.i272 = getelementptr inbounds i8* %call.i269, i64 16
  %val_class.i273 = bitcast i8* %dw_attr_val.i272 to i32*
  store i32 9, i32* %val_class.i273, align 4, !tbaa !59
  %v.i274 = getelementptr inbounds i8* %call.i269, i64 24
  store i8 1, i8* %v.i274, align 1, !tbaa !1
  %cmp.i.i275 = icmp ne i8* %call.i, null
  %cmp1.i.i276 = icmp ne i8* %call.i269, null
  %or.cond.i.i277 = and i1 %cmp.i.i275, %cmp1.i.i276
  br i1 %or.cond.i.i277, label %if.then.i.i279, label %if.end57

if.then.i.i279:                                   ; preds = %if.then56
  %71 = bitcast i8* %call.i269 to %struct.dw_attr_struct*
  %die_attr.i.i278 = getelementptr inbounds i8* %call.i, i64 16
  %72 = bitcast i8* %die_attr.i.i278 to %struct.dw_attr_struct**
  %73 = load %struct.dw_attr_struct** %72, align 8, !tbaa !73
  store %struct.dw_attr_struct* %73, %struct.dw_attr_struct** %70, align 8, !tbaa !72
  store %struct.dw_attr_struct* %71, %struct.dw_attr_struct** %72, align 8, !tbaa !73
  br label %if.end57

if.end57:                                         ; preds = %if.then.i.i279, %if.then56, %if.end49
  %bf.load59 = load i32* %readonly_flag.pre, align 8
  %bf.clear61 = and i32 %bf.load59, 2097152
  %tobool62 = icmp eq i32 %bf.clear61, 0
  br i1 %tobool62, label %if.else64, label %if.then63

if.then63:                                        ; preds = %if.end57
  %call.i281 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i282 = getelementptr inbounds i8* %call.i281, i64 8
  %74 = bitcast i8* %dw_attr_next.i282 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %74, align 8, !tbaa !72
  %dw_attr.i283 = bitcast i8* %call.i281 to i32*
  store i32 50, i32* %dw_attr.i283, align 4, !tbaa !57
  %dw_attr_val.i284 = getelementptr inbounds i8* %call.i281, i64 16
  %val_class.i285 = bitcast i8* %dw_attr_val.i284 to i32*
  store i32 6, i32* %val_class.i285, align 4, !tbaa !59
  %v.i286 = getelementptr inbounds i8* %call.i281, i64 24
  %val_unsigned.i287 = bitcast i8* %v.i286 to i64*
  store i64 2, i64* %val_unsigned.i287, align 8, !tbaa !8
  %cmp.i.i288 = icmp ne i8* %call.i, null
  %cmp1.i.i289 = icmp ne i8* %call.i281, null
  %or.cond.i.i290 = and i1 %cmp.i.i288, %cmp1.i.i289
  br i1 %or.cond.i.i290, label %if.then.i.i292, label %if.end74

if.then.i.i292:                                   ; preds = %if.then63
  %75 = bitcast i8* %call.i281 to %struct.dw_attr_struct*
  %die_attr.i.i291 = getelementptr inbounds i8* %call.i, i64 16
  %76 = bitcast i8* %die_attr.i.i291 to %struct.dw_attr_struct**
  %77 = load %struct.dw_attr_struct** %76, align 8, !tbaa !73
  store %struct.dw_attr_struct* %77, %struct.dw_attr_struct** %74, align 8, !tbaa !72
  store %struct.dw_attr_struct* %75, %struct.dw_attr_struct** %76, align 8, !tbaa !73
  br label %if.end74

if.else64:                                        ; preds = %if.end57
  %bf.clear68 = and i32 %bf.load59, 1048576
  %tobool69 = icmp eq i32 %bf.clear68, 0
  br i1 %tobool69, label %if.end74, label %if.then70

if.then70:                                        ; preds = %if.else64
  %call.i294 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i295 = getelementptr inbounds i8* %call.i294, i64 8
  %78 = bitcast i8* %dw_attr_next.i295 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %78, align 8, !tbaa !72
  %dw_attr.i296 = bitcast i8* %call.i294 to i32*
  store i32 50, i32* %dw_attr.i296, align 4, !tbaa !57
  %dw_attr_val.i297 = getelementptr inbounds i8* %call.i294, i64 16
  %val_class.i298 = bitcast i8* %dw_attr_val.i297 to i32*
  store i32 6, i32* %val_class.i298, align 4, !tbaa !59
  %v.i299 = getelementptr inbounds i8* %call.i294, i64 24
  %val_unsigned.i300 = bitcast i8* %v.i299 to i64*
  store i64 3, i64* %val_unsigned.i300, align 8, !tbaa !8
  %cmp.i.i301 = icmp ne i8* %call.i, null
  %cmp1.i.i302 = icmp ne i8* %call.i294, null
  %or.cond.i.i303 = and i1 %cmp.i.i301, %cmp1.i.i302
  br i1 %or.cond.i.i303, label %if.then.i.i305, label %if.end74

if.then.i.i305:                                   ; preds = %if.then70
  %79 = bitcast i8* %call.i294 to %struct.dw_attr_struct*
  %die_attr.i.i304 = getelementptr inbounds i8* %call.i, i64 16
  %80 = bitcast i8* %die_attr.i.i304 to %struct.dw_attr_struct**
  %81 = load %struct.dw_attr_struct** %80, align 8, !tbaa !73
  store %struct.dw_attr_struct* %81, %struct.dw_attr_struct** %78, align 8, !tbaa !72
  store %struct.dw_attr_struct* %79, %struct.dw_attr_struct** %80, align 8, !tbaa !73
  br label %if.end74

if.end74:                                         ; preds = %if.then.i.i305, %if.then70, %if.then.i.i292, %if.then63, %if.then.i.i256, %if.then27, %if.then.i.i394, %add_abstract_origin_attribute.exit, %get_AT_unsigned.exit244, %add_AT_die_ref.exit, %if.else64
  br i1 %15, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.end74
  %call.i307 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i308 = getelementptr inbounds i8* %call.i307, i64 8
  %82 = bitcast i8* %dw_attr_next.i308 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %82, align 8, !tbaa !72
  %dw_attr.i309 = bitcast i8* %call.i307 to i32*
  store i32 60, i32* %dw_attr.i309, align 4, !tbaa !57
  %dw_attr_val.i310 = getelementptr inbounds i8* %call.i307, i64 16
  %val_class.i311 = bitcast i8* %dw_attr_val.i310 to i32*
  store i32 9, i32* %val_class.i311, align 4, !tbaa !59
  %v.i312 = getelementptr inbounds i8* %call.i307, i64 24
  store i8 1, i8* %v.i312, align 1, !tbaa !1
  %cmp.i.i313 = icmp ne i8* %call.i, null
  %cmp1.i.i314 = icmp ne i8* %call.i307, null
  %or.cond.i.i315 = and i1 %cmp.i.i313, %cmp1.i.i314
  br i1 %or.cond.i.i315, label %if.then.i.i317, label %if.end77

if.then.i.i317:                                   ; preds = %if.then76
  %83 = bitcast i8* %call.i307 to %struct.dw_attr_struct*
  %die_attr.i.i316 = getelementptr inbounds i8* %call.i, i64 16
  %84 = bitcast i8* %die_attr.i.i316 to %struct.dw_attr_struct**
  %85 = load %struct.dw_attr_struct** %84, align 8, !tbaa !73
  store %struct.dw_attr_struct* %85, %struct.dw_attr_struct** %82, align 8, !tbaa !72
  store %struct.dw_attr_struct* %83, %struct.dw_attr_struct** %84, align 8, !tbaa !73
  br label %if.end77

if.end77:                                         ; preds = %if.then.i.i317, %if.then76, %if.end74
  br i1 %cmp.i150, label %lor.lhs.false, label %land.rhs.i321

land.rhs.i321:                                    ; preds = %if.end77
  %die_tag.i320 = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 0
  %86 = load i32* %die_tag.i320, align 4, !tbaa !69
  %87 = and i32 %86, -5
  %88 = icmp eq i32 %87, 19
  br i1 %88, label %if.then86, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end77, %land.rhs.i321
  %bf.load81 = load i64* %0, align 8
  %bf.cast84 = and i64 %bf.load81, 32768
  %tobool85 = icmp eq i64 %bf.cast84, 0
  br i1 %tobool85, label %if.end87, label %if.then86

if.then86:                                        ; preds = %land.rhs.i321, %lor.lhs.false
  %decl.idx146.val = load i32* %decl.idx, align 4, !tbaa !65
  %89 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %cmp.i324 = icmp ugt i32 %89, %decl.idx146.val
  br i1 %cmp.i324, label %if.end.i, label %if.then.i328

if.then.i328:                                     ; preds = %if.then86
  %sub.i = add i32 %decl.idx146.val, 256
  %div.i = and i32 %sub.i, -256
  %90 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %91 = bitcast %struct.die_struct** %90 to i8*
  %conv.i = zext i32 %div.i to i64
  %mul3.i = shl nuw nsw i64 %conv.i, 3
  %call.i325 = tail call i8* @xrealloc(i8* %91, i64 %mul3.i) #5
  %92 = bitcast i8* %call.i325 to %struct.die_struct**
  store %struct.die_struct** %92, %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %93 = load i32* @decl_die_table_allocated, align 4, !tbaa !4
  %idxprom.i326 = zext i32 %93 to i64
  %arrayidx.i327 = getelementptr inbounds %struct.die_struct** %92, i64 %idxprom.i326
  %94 = bitcast %struct.die_struct** %arrayidx.i327 to i8*
  %sub4.i = sub i32 %div.i, %93
  %conv5.i = zext i32 %sub4.i to i64
  %mul6.i = shl nuw nsw i64 %conv5.i, 3
  tail call void @llvm.memset.p0i8.i64(i8* %94, i8 0, i64 %mul6.i, i32 1, i1 false) #5
  store i32 %div.i, i32* @decl_die_table_allocated, align 4, !tbaa !4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i328, %if.then86
  %95 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp7.i = icmp ugt i32 %95, %decl.idx146.val
  br i1 %cmp7.i, label %equate_decl_number_to_die.exit, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  %add10.i = add i32 %decl.idx146.val, 1
  store i32 %add10.i, i32* @decl_die_table_in_use, align 4, !tbaa !4
  br label %equate_decl_number_to_die.exit

equate_decl_number_to_die.exit:                   ; preds = %if.end.i, %if.then9.i
  %idxprom12.i = zext i32 %decl.idx146.val to i64
  %96 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx13.i = getelementptr inbounds %struct.die_struct** %96, i64 %idxprom12.i
  store %struct.die_struct* %1, %struct.die_struct** %arrayidx13.i, align 8, !tbaa !6
  br label %if.end87

if.end87:                                         ; preds = %lor.lhs.false, %equate_decl_number_to_die.exit
  br i1 %15, label %if.else98, label %land.lhs.true89

land.lhs.true89:                                  ; preds = %if.end87
  %bf.load92 = load i64* %0, align 8
  %bf.cast95 = and i64 %bf.load92, 32768
  %tobool96 = icmp eq i64 %bf.cast95, 0
  br i1 %tobool96, label %if.then97, label %if.else98

if.then97:                                        ; preds = %land.lhs.true89
  tail call fastcc void @add_location_or_const_value_attribute(%struct.die_struct* %1, %union.tree_node* %decl)
  %public_flag.i = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load.i329 = load i32* %public_flag.i, align 8
  %bf.clear.i = and i32 %bf.load.i329, 524288
  %tobool.i330 = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool.i330, label %if.end99, label %if.end.i332

if.end.i332:                                      ; preds = %if.then97
  %97 = load i32* @pubname_table_in_use, align 4, !tbaa !4
  %98 = load i32* @pubname_table_allocated, align 4, !tbaa !4
  %cmp.i331 = icmp eq i32 %97, %98
  br i1 %cmp.i331, label %if.then1.i, label %if.end.if.end2_crit_edge.i

if.end.if.end2_crit_edge.i:                       ; preds = %if.end.i332
  %.pre8.i = load %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  br label %if.end2.i

if.then1.i:                                       ; preds = %if.end.i332
  %add.i = add i32 %97, 64
  store i32 %add.i, i32* @pubname_table_allocated, align 4, !tbaa !4
  %99 = load %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  %100 = bitcast %struct.pubname_struct* %99 to i8*
  %conv.i333 = zext i32 %add.i to i64
  %mul.i = shl nuw nsw i64 %conv.i333, 4
  %call.i334 = tail call i8* @xrealloc(i8* %100, i64 %mul.i) #5
  %101 = bitcast i8* %call.i334 to %struct.pubname_struct*
  store %struct.pubname_struct* %101, %struct.pubname_struct** @pubname_table, align 8, !tbaa !6
  %.pre.i335 = load i32* @pubname_table_in_use, align 4, !tbaa !4
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.then1.i, %if.end.if.end2_crit_edge.i
  %102 = phi %struct.pubname_struct* [ %101, %if.then1.i ], [ %.pre8.i, %if.end.if.end2_crit_edge.i ]
  %103 = phi i32 [ %.pre.i335, %if.then1.i ], [ %97, %if.end.if.end2_crit_edge.i ]
  %inc.i = add i32 %103, 1
  store i32 %inc.i, i32* @pubname_table_in_use, align 4, !tbaa !4
  %idxprom.i336 = zext i32 %103 to i64
  %die3.i = getelementptr inbounds %struct.pubname_struct* %102, i64 %idxprom.i336, i32 0
  store %struct.die_struct* %1, %struct.die_struct** %die3.i, align 8, !tbaa !76
  %104 = load i8* (%union.tree_node*, i32)** @decl_printable_name, align 8, !tbaa !6
  %call.i.i = tail call i8* %104(%union.tree_node* %decl, i32 1) #5
  %call5.i = tail call noalias i8* @xstrdup(i8* %call.i.i) #5
  %name.i = getelementptr inbounds %struct.pubname_struct* %102, i64 %idxprom.i336, i32 1
  store i8* %call5.i, i8** %name.i, align 8, !tbaa !74
  br label %if.end99

if.else98:                                        ; preds = %land.lhs.true89, %if.end87
  %decl.idx147 = getelementptr %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %decl.idx147.val = load %union.tree_node** %decl.idx147, align 8, !tbaa !87
  %decl.idx148 = getelementptr %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %decl.idx148.val = load i32* %decl.idx148, align 8
  %decl.idx149 = getelementptr %union.tree_node* %decl, i64 0, i32 0, i32 12
  %decl.idx149.val = load %union.tree_node** %decl.idx149, align 8, !tbaa !90
  %bf.clear.i337 = and i32 %decl.idx148.val, 4096
  %tobool.i338 = icmp eq i32 %bf.clear.i337, 0
  br i1 %tobool.i338, label %if.end99, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else98
  %bf.clear7.i = and i32 %decl.idx148.val, 2048
  %tobool8.i = icmp eq i32 %bf.clear7.i, 0
  %tobool10.i = icmp ne %union.tree_node* %decl.idx149.val, null
  %or.cond.i339 = and i1 %tobool8.i, %tobool10.i
  br i1 %or.cond.i339, label %land.lhs.true11.i, label %if.end99

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %call.i340 = tail call %union.tree_node* @initializer_constant_valid_p(%union.tree_node* %decl.idx149.val, %union.tree_node* %decl.idx147.val) #5
  %105 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 8, !tbaa !6
  %cmp.i341 = icmp eq %union.tree_node* %call.i340, %105
  br i1 %cmp.i341, label %if.end.i343, label %if.end99

if.end.i343:                                      ; preds = %land.lhs.true11.i
  %code.i = getelementptr inbounds %union.tree_node* %decl.idx147.val, i64 0, i32 0, i32 0, i32 2
  %bf.load13.i = load i32* %code.i, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 255
  %cond.i342 = icmp eq i32 %bf.clear14.i, 6
  br i1 %cond.i342, label %sw.bb.i, label %if.end99

sw.bb.i:                                          ; preds = %if.end.i343
  %call15.i = tail call i32 @host_integerp(%union.tree_node* %decl.idx149.val, i32 0) #5
  %tobool16.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.i, label %if.else19.i, label %if.then17.i

if.then17.i:                                      ; preds = %sw.bb.i
  %call18.i = tail call i64 @tree_low_cst(%union.tree_node* %decl.idx149.val, i32 0) #5
  %call.i.i344 = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i345 = getelementptr inbounds i8* %call.i.i344, i64 8
  %106 = bitcast i8* %dw_attr_next.i.i345 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %106, align 8, !tbaa !72
  %dw_attr.i.i346 = bitcast i8* %call.i.i344 to i32*
  store i32 28, i32* %dw_attr.i.i346, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i.i344, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 6, i32* %val_class.i.i, align 4, !tbaa !59
  %v.i.i347 = getelementptr inbounds i8* %call.i.i344, i64 24
  %val_unsigned.i.i348 = bitcast i8* %v.i.i347 to i64*
  store i64 %call18.i, i64* %val_unsigned.i.i348, align 8, !tbaa !8
  %cmp.i.i.i349 = icmp ne i8* %call.i, null
  %cmp1.i.i.i = icmp ne i8* %call.i.i344, null
  %or.cond.i.i.i = and i1 %cmp.i.i.i349, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %if.end99

if.then.i.i.i:                                    ; preds = %if.then17.i
  %107 = bitcast i8* %call.i.i344 to %struct.dw_attr_struct*
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i, i64 16
  %108 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %109 = load %struct.dw_attr_struct** %108, align 8, !tbaa !73
  store %struct.dw_attr_struct* %109, %struct.dw_attr_struct** %106, align 8, !tbaa !72
  store %struct.dw_attr_struct* %107, %struct.dw_attr_struct** %108, align 8, !tbaa !73
  br label %if.end99

if.else19.i:                                      ; preds = %sw.bb.i
  %int_cst20.i = getelementptr inbounds %union.tree_node* %decl.idx149.val, i64 0, i32 0, i32 2
  %high.i = getelementptr inbounds i32* %int_cst20.i, i64 2
  %110 = bitcast i32* %high.i to i64*
  %111 = load i64* %110, align 8, !tbaa !138
  %low.i = bitcast i32* %int_cst20.i to i64*
  %112 = load i64* %low.i, align 8, !tbaa !141
  %call.i32.i = tail call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i33.i = getelementptr inbounds i8* %call.i32.i, i64 8
  %113 = bitcast i8* %dw_attr_next.i33.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %113, align 8, !tbaa !72
  %dw_attr.i34.i = bitcast i8* %call.i32.i to i32*
  store i32 28, i32* %dw_attr.i34.i, align 4, !tbaa !57
  %dw_attr_val.i35.i = getelementptr inbounds i8* %call.i32.i, i64 16
  %val_class.i36.i = bitcast i8* %dw_attr_val.i35.i to i32*
  store i32 7, i32* %val_class.i36.i, align 4, !tbaa !59
  %v.i37.i = getelementptr inbounds i8* %call.i32.i, i64 24
  %hi.i.i = bitcast i8* %v.i37.i to i64*
  store i64 %111, i64* %hi.i.i, align 8, !tbaa !98
  %low.i.i = getelementptr inbounds i8* %call.i32.i, i64 32
  %114 = bitcast i8* %low.i.i to i64*
  store i64 %112, i64* %114, align 8, !tbaa !100
  %cmp.i.i38.i = icmp ne i8* %call.i, null
  %cmp1.i.i39.i = icmp ne i8* %call.i32.i, null
  %or.cond.i.i40.i = and i1 %cmp.i.i38.i, %cmp1.i.i39.i
  br i1 %or.cond.i.i40.i, label %if.then.i.i42.i, label %if.end99

if.then.i.i42.i:                                  ; preds = %if.else19.i
  %115 = bitcast i8* %call.i32.i to %struct.dw_attr_struct*
  %die_attr.i.i41.i = getelementptr inbounds i8* %call.i, i64 16
  %116 = bitcast i8* %die_attr.i.i41.i to %struct.dw_attr_struct**
  %117 = load %struct.dw_attr_struct** %116, align 8, !tbaa !73
  store %struct.dw_attr_struct* %117, %struct.dw_attr_struct** %113, align 8, !tbaa !72
  store %struct.dw_attr_struct* %115, %struct.dw_attr_struct** %116, align 8, !tbaa !73
  br label %if.end99

if.end99:                                         ; preds = %if.then.i.i42.i, %if.else19.i, %if.then.i.i.i, %if.then17.i, %if.end.i343, %land.lhs.true11.i, %land.lhs.true.i, %if.else98, %if.end2.i, %if.then97
  ret void
}

declare %union.tree_node* @initializer_constant_valid_p(%union.tree_node*, %union.tree_node*) #2

declare %union.tree_node* @tree_last(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @decls_for_scope(%union.tree_node* readonly %stmt, %struct.die_struct* %context_die, i32 %depth) #1 {
entry:
  %cmp = icmp eq %union.tree_node* %stmt, null
  br i1 %cmp, label %for.end62, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %used_flag = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %used_flag, align 8
  %bf.clear = and i32 %bf.load, 65536
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %for.end62, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %vars = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 2
  %0 = bitcast i32* %vars to %union.tree_node**
  %decl.093 = load %union.tree_node** %0, align 8
  %cmp194 = icmp eq %union.tree_node* %decl.093, null
  br i1 %cmp194, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %cmp.i87 = icmp eq %struct.die_struct* %context_die, null
  %die_child.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %decl.095 = phi %union.tree_node* [ %decl.093, %for.body.lr.ph ], [ %decl.0, %for.inc ]
  %code = getelementptr inbounds %union.tree_node* %decl.095, i64 0, i32 0, i32 0, i32 2
  %bf.load3 = load i32* %code, align 8
  %bf.clear4 = and i32 %bf.load3, 255
  switch i32 %bf.clear4, label %if.else50 [
    i32 30, label %if.then6
    i32 33, label %land.lhs.true
  ]

if.then6:                                         ; preds = %for.body
  %decl.0.idx = getelementptr %union.tree_node* %decl.095, i64 0, i32 0, i32 3
  %decl.0.idx.val = load i32* %decl.0.idx, align 4, !tbaa !65
  %1 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i = icmp ugt i32 %1, %decl.0.idx.val
  br i1 %cmp.i, label %cond.true.i, label %if.else50

cond.true.i:                                      ; preds = %if.then6
  %idxprom.i = zext i32 %decl.0.idx.val to i64
  %2 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i = getelementptr inbounds %struct.die_struct** %2, i64 %idxprom.i
  %3 = load %struct.die_struct** %arrayidx.i, align 8, !tbaa !6
  br label %if.end45

land.lhs.true:                                    ; preds = %for.body
  %name = getelementptr inbounds %union.tree_node* %decl.095, i64 0, i32 0, i32 8
  %4 = load %union.tree_node** %name, align 8, !tbaa !86
  %cmp13 = icmp eq %union.tree_node* %4, null
  br i1 %cmp13, label %land.lhs.true.if.then39_crit_edge, label %lor.lhs.false14

land.lhs.true.if.then39_crit_edge:                ; preds = %land.lhs.true
  %type41.phi.trans.insert = getelementptr inbounds %union.tree_node* %decl.095, i64 0, i32 0, i32 0, i32 1
  %.pre = load %union.tree_node** %type41.phi.trans.insert, align 8, !tbaa !87
  br label %if.then39

lor.lhs.false14:                                  ; preds = %land.lhs.true
  %artificial_flag = getelementptr inbounds %union.tree_node* %decl.095, i64 0, i32 0, i32 5
  %5 = bitcast i48* %artificial_flag to i64*
  %bf.load16 = load i64* %5, align 8
  %bf.cast = and i64 %bf.load16, 4194304
  %tobool19 = icmp eq i64 %bf.cast, 0
  br i1 %tobool19, label %if.else50, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %lor.lhs.false14
  %type = getelementptr inbounds %union.tree_node* %decl.095, i64 0, i32 0, i32 0, i32 1
  %6 = load %union.tree_node** %type, align 8, !tbaa !87
  %.idx85 = getelementptr %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %.idx85.val = load i32* %.idx85, align 8
  %bf.clear.i = and i32 %.idx85.val, 255
  %7 = and i32 %.idx85.val, 254
  %8 = icmp eq i32 %7, 20
  %cmp4.i = icmp eq i32 %bf.clear.i, 22
  %or.cond6.i = or i1 %8, %cmp4.i
  %cmp5.i = icmp eq i32 %bf.clear.i, 10
  %.cmp5.i = or i1 %or.cond6.i, %cmp5.i
  br i1 %.cmp5.i, label %land.lhs.true24, label %if.else50

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %chain = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %union.tree_node** %chain, align 8, !tbaa !88
  %cmp28 = icmp eq %union.tree_node* %decl.095, %9
  br i1 %cmp28, label %if.then39, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %land.lhs.true24
  %abstract_origin = getelementptr inbounds %union.tree_node* %decl.095, i64 0, i32 0, i32 13
  %10 = load %union.tree_node** %abstract_origin, align 8, !tbaa !89
  %cmp31 = icmp eq %union.tree_node* %10, null
  br i1 %cmp31, label %if.else50, label %land.lhs.true32

land.lhs.true32:                                  ; preds = %lor.lhs.false29
  %bf.cast.i = and i64 %bf.load16, 32768
  %tobool.i = icmp ne i64 %bf.cast.i, 0
  %cmp.i86 = icmp eq %union.tree_node* %10, %decl.095
  %or.cond.i = and i1 %tobool.i, %cmp.i86
  %retval.0.i = select i1 %or.cond.i, %union.tree_node* null, %union.tree_node* %10
  %cmp38 = icmp eq %union.tree_node* %retval.0.i, %9
  br i1 %cmp38, label %if.then39, label %if.else50

if.then39:                                        ; preds = %land.lhs.true.if.then39_crit_edge, %land.lhs.true32, %land.lhs.true24
  %11 = phi %union.tree_node* [ %.pre, %land.lhs.true.if.then39_crit_edge ], [ %6, %land.lhs.true32 ], [ %6, %land.lhs.true24 ]
  %.idx = getelementptr %union.tree_node* %11, i64 0, i32 0, i32 10
  %.idx.val = load %union.tree_node** %.idx, align 8
  %12 = bitcast %union.tree_node* %.idx.val to %struct.die_struct*
  br label %if.end45

if.end45:                                         ; preds = %cond.true.i, %if.then39
  %die.0 = phi %struct.die_struct* [ %12, %if.then39 ], [ %3, %cond.true.i ]
  %cmp46 = icmp eq %struct.die_struct* %die.0, null
  br i1 %cmp46, label %if.else50, label %land.lhs.true47

land.lhs.true47:                                  ; preds = %if.end45
  %die_parent = getelementptr inbounds %struct.die_struct* %die.0, i64 0, i32 3
  %13 = load %struct.die_struct** %die_parent, align 8, !tbaa !55
  %cmp48 = icmp eq %struct.die_struct* %13, null
  br i1 %cmp48, label %if.then49, label %if.else50

if.then49:                                        ; preds = %land.lhs.true47
  br i1 %cmp.i87, label %for.inc, label %if.then.i

if.then.i:                                        ; preds = %if.then49
  %cmp2.i = icmp eq %struct.die_struct* %die.0, %context_die
  br i1 %cmp2.i, label %if.then3.i, label %if.end.i

if.then3.i:                                       ; preds = %if.then.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i:                                         ; preds = %if.then.i
  store %struct.die_struct* %context_die, %struct.die_struct** %die_parent, align 8, !tbaa !55
  %14 = load %struct.die_struct** %die_child.i, align 8, !tbaa !62
  %die_sib.i = getelementptr inbounds %struct.die_struct* %die.0, i64 0, i32 5
  store %struct.die_struct* %14, %struct.die_struct** %die_sib.i, align 8, !tbaa !63
  store %struct.die_struct* %die.0, %struct.die_struct** %die_child.i, align 8, !tbaa !62
  br label %for.inc

if.else50:                                        ; preds = %land.lhs.true20, %if.then6, %land.lhs.true32, %lor.lhs.false14, %lor.lhs.false29, %for.body, %if.end45, %land.lhs.true47
  tail call fastcc void @gen_decl_die(%union.tree_node* %decl.095, %struct.die_struct* %context_die)
  br label %for.inc

for.inc:                                          ; preds = %if.then49, %if.end.i, %if.else50
  %chain53 = getelementptr inbounds %union.tree_node* %decl.095, i64 0, i32 0, i32 0, i32 0
  %decl.0 = load %union.tree_node** %chain53, align 8
  %cmp1 = icmp eq %union.tree_node* %decl.0, null
  br i1 %cmp1, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end
  %15 = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 4
  %subblocks.090 = load %union.tree_node** %15, align 8
  %cmp5791 = icmp eq %union.tree_node* %subblocks.090, null
  br i1 %cmp5791, label %for.end62, label %for.body58.lr.ph

for.body58.lr.ph:                                 ; preds = %for.end
  %add = add nsw i32 %depth, 1
  br label %for.body58

for.body58:                                       ; preds = %for.body58.lr.ph, %for.body58
  %subblocks.092 = phi %union.tree_node* [ %subblocks.090, %for.body58.lr.ph ], [ %subblocks.0, %for.body58 ]
  tail call fastcc void @gen_block_die(%union.tree_node* %subblocks.092, %struct.die_struct* %context_die, i32 %add)
  %chain61 = getelementptr inbounds %union.tree_node* %subblocks.092, i64 0, i32 0, i32 0, i32 0
  %subblocks.0 = load %union.tree_node** %chain61, align 8
  %cmp57 = icmp eq %union.tree_node* %subblocks.0, null
  br i1 %cmp57, label %for.end62, label %for.body58

for.end62:                                        ; preds = %for.body58, %for.end, %lor.lhs.false, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_block_die(%union.tree_node* %stmt, %struct.die_struct* %context_die, i32 %depth) #1 {
entry:
  %label.i = alloca [30 x i8], align 16
  %cmp = icmp eq %union.tree_node* %stmt, null
  br i1 %cmp, label %if.end69, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %used_flag = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %used_flag, align 8
  %bf.clear = and i32 %bf.load, 65536
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end69, label %lor.lhs.false1

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %bf.clear5 = and i32 %bf.load, 16384
  %tobool6 = icmp eq i32 %bf.clear5, 0
  br i1 %tobool6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false1
  %abstract_flag = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 1
  %0 = bitcast i8** %abstract_flag to i32*
  %bf.load7 = load i32* %0, align 8
  %bf.clear9 = and i32 %bf.load7, 2
  %tobool10 = icmp eq i32 %bf.clear9, 0
  br i1 %tobool10, label %if.end69, label %if.end

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false1
  %1 = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 7
  %2 = load %union.tree_node** %1, align 8, !tbaa !142
  %tobool12 = icmp eq %union.tree_node* %2, null
  br i1 %tobool12, label %if.end17, label %if.then13

if.then13:                                        ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 4
  %sub.0119 = load %union.tree_node** %3, align 8
  %tobool15120 = icmp eq %union.tree_node* %sub.0119, null
  br i1 %tobool15120, label %if.end69, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then13
  %add = add nsw i32 %depth, 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %sub.0121 = phi %union.tree_node* [ %sub.0119, %for.body.lr.ph ], [ %sub.0, %for.body ]
  call fastcc void @gen_block_die(%union.tree_node* %sub.0121, %struct.die_struct* %context_die, i32 %add)
  %chain = getelementptr inbounds %union.tree_node* %sub.0121, i64 0, i32 0, i32 0, i32 0
  %sub.0 = load %union.tree_node** %chain, align 8
  %tobool15 = icmp eq %union.tree_node* %sub.0, null
  br i1 %tobool15, label %if.end69, label %for.body

if.end17:                                         ; preds = %if.end
  %abstract_origin.i = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 6
  %4 = bitcast %union.anon* %abstract_origin.i to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !144
  %abstract_flag.i = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 1
  %6 = bitcast i8** %abstract_flag.i to i32*
  %bf.load.i = load i32* %6, align 8
  %bf.clear.i = and i32 %bf.load.i, 2
  %tobool.i = icmp ne i32 %bf.clear.i, 0
  %cmp.i = icmp eq %union.tree_node* %5, %stmt
  %or.cond.i = and i1 %tobool.i, %cmp.i
  %cmp3.i = icmp eq %union.tree_node* %5, null
  %or.cond22.i = or i1 %or.cond.i, %cmp3.i
  br i1 %or.cond22.i, label %if.else, label %do.body.i

do.body.i:                                        ; preds = %if.end17, %cond.end.i
  %lookahead.0.i = phi %union.tree_node* [ %8, %cond.end.i ], [ %5, %if.end17 ]
  %code.i = getelementptr inbounds %union.tree_node* %lookahead.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load5.i = load i32* %code.i, align 8
  %bf.clear6.i = and i32 %bf.load5.i, 255
  %cmp7.i = icmp eq i32 %bf.clear6.i, 4
  br i1 %cmp7.i, label %cond.end.i, label %block_ultimate_origin.exit

cond.end.i:                                       ; preds = %do.body.i
  %abstract_origin9.i = getelementptr inbounds %union.tree_node* %lookahead.0.i, i64 0, i32 0, i32 6
  %7 = bitcast %union.anon* %abstract_origin9.i to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !144
  %cmp10.i = icmp eq %union.tree_node* %8, null
  %cmp11.i = icmp eq %union.tree_node* %8, %lookahead.0.i
  %or.cond21.i = or i1 %cmp10.i, %cmp11.i
  br i1 %or.cond21.i, label %if.else, label %do.body.i

block_ultimate_origin.exit:                       ; preds = %do.body.i
  %cmp18 = icmp eq %union.tree_node* %lookahead.0.i, null
  br i1 %cmp18, label %if.else, label %cond.end

cond.end:                                         ; preds = %block_ultimate_origin.exit
  %phitmp = icmp eq i32 %bf.clear6.i, 30
  br i1 %phitmp, label %if.then65, label %if.else

if.else:                                          ; preds = %cond.end.i, %block_ultimate_origin.exit, %if.end17, %cond.end
  %cmp18112113 = phi %union.tree_node* [ %lookahead.0.i, %cond.end ], [ %stmt, %block_ultimate_origin.exit ], [ %stmt, %if.end17 ], [ %lookahead.0.i, %cond.end.i ]
  %call29 = call i32 @is_body_block(%union.tree_node* %cmp18112113) #5
  %tobool30 = icmp eq i32 %call29, 0
  br i1 %tobool30, label %if.then31, label %if.else68

if.then31:                                        ; preds = %if.else
  %9 = load i32* @debug_info_level, align 4, !tbaa !1
  %cmp32 = icmp ugt i32 %9, 1
  %vars = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 2
  %10 = bitcast i32* %vars to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !145
  %cmp35 = icmp eq %union.tree_node* %11, null
  br i1 %cmp32, label %if.then33, label %for.cond39.preheader

for.cond39.preheader:                             ; preds = %if.then31
  br i1 %cmp35, label %if.else68, label %for.body42

if.then33:                                        ; preds = %if.then31
  br i1 %cmp35, label %if.else68, label %if.else66

for.body42:                                       ; preds = %for.cond39.preheader, %for.inc54
  %decl.0118 = phi %union.tree_node* [ %13, %for.inc54 ], [ %11, %for.cond39.preheader ]
  %code44 = getelementptr inbounds %union.tree_node* %decl.0118, i64 0, i32 0, i32 0, i32 2
  %bf.load45 = load i32* %code44, align 8
  %bf.clear46 = and i32 %bf.load45, 255
  %cmp47 = icmp eq i32 %bf.clear46, 30
  br i1 %cmp47, label %land.lhs.true49, label %for.inc54

land.lhs.true49:                                  ; preds = %for.body42
  %initial = getelementptr inbounds %union.tree_node* %decl.0118, i64 0, i32 0, i32 12
  %12 = load %union.tree_node** %initial, align 8, !tbaa !90
  %tobool51 = icmp eq %union.tree_node* %12, null
  br i1 %tobool51, label %for.inc54, label %if.else66

for.inc54:                                        ; preds = %land.lhs.true49, %for.body42
  %chain56 = getelementptr inbounds %union.tree_node* %decl.0118, i64 0, i32 0, i32 0, i32 0
  %13 = load %union.tree_node** %chain56, align 8, !tbaa !88
  %cmp40 = icmp eq %union.tree_node* %13, null
  br i1 %cmp40, label %if.else68, label %for.body42

if.then65:                                        ; preds = %cond.end
  %14 = getelementptr inbounds [30 x i8]* %label.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 30, i8* %14) #5
  %tobool.i98 = icmp eq i32 %bf.clear.i, 0
  br i1 %tobool.i98, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then65
  %call.i.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %15 = bitcast i8* %call.i.i to %struct.die_struct*
  %die_tag.i.i = bitcast i8* %call.i.i to i32*
  store i32 29, i32* %die_tag.i.i, align 4, !tbaa !69
  %cmp.i.i = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp1.i.i.i = icmp eq i8* %call.i.i, null
  br i1 %cmp1.i.i.i, label %new_die.exit.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %cmp2.i.i.i = icmp eq %struct.die_struct* %15, %context_die
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.end.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i.i:                                     ; preds = %if.then.i.i.i
  %die_parent.i.i.i = getelementptr inbounds i8* %call.i.i, i64 24
  %16 = bitcast i8* %die_parent.i.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %16, align 8, !tbaa !55
  %die_child.i.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %17 = load %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  %die_sib.i.i.i = getelementptr inbounds i8* %call.i.i, i64 40
  %18 = bitcast i8* %die_sib.i.i.i to %struct.die_struct**
  store %struct.die_struct* %17, %struct.die_struct** %18, align 8, !tbaa !63
  store %struct.die_struct* %15, %struct.die_struct** %die_child.i.i.i, align 8, !tbaa !62
  br label %new_die.exit.i

if.else.i.i:                                      ; preds = %if.then.i
  %call1.i.i = call noalias i8* @xmalloc(i64 24) #5
  %19 = bitcast i8* %call1.i.i to %struct.limbo_die_struct*
  %die2.i.i = bitcast i8* %call1.i.i to %struct.die_struct**
  store %struct.die_struct* %15, %struct.die_struct** %die2.i.i, align 8, !tbaa !54
  %created_for.i.i = getelementptr inbounds i8* %call1.i.i, i64 8
  %20 = bitcast i8* %created_for.i.i to %union.tree_node**
  store %union.tree_node* %stmt, %union.tree_node** %20, align 8, !tbaa !64
  %21 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i.i = getelementptr inbounds i8* %call1.i.i, i64 16
  %22 = bitcast i8* %next.i.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %21, %struct.limbo_die_struct** %22, align 8, !tbaa !52
  store %struct.limbo_die_struct* %19, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit.i

new_die.exit.i:                                   ; preds = %if.else.i.i, %if.end.i.i.i, %if.then.i.i
  %23 = load %union.tree_node** %4, align 8, !tbaa !144
  %bf.load.i.i = load i32* %6, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 2
  %tobool.i.i = icmp ne i32 %bf.clear.i.i, 0
  %cmp.i28.i = icmp eq %union.tree_node* %23, %stmt
  %or.cond.i.i = and i1 %tobool.i.i, %cmp.i28.i
  %cmp3.i.i = icmp eq %union.tree_node* %23, null
  %or.cond22.i.i = or i1 %or.cond.i.i, %cmp3.i.i
  br i1 %or.cond22.i.i, label %block_ultimate_origin.exit.i, label %do.body.i.i

do.body.i.i:                                      ; preds = %new_die.exit.i, %cond.end.i.i
  %lookahead.0.i.i = phi %union.tree_node* [ %25, %cond.end.i.i ], [ %23, %new_die.exit.i ]
  %code.i.i = getelementptr inbounds %union.tree_node* %lookahead.0.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load5.i.i = load i32* %code.i.i, align 8
  %bf.clear6.i.i = and i32 %bf.load5.i.i, 255
  %cmp7.i.i = icmp eq i32 %bf.clear6.i.i, 4
  br i1 %cmp7.i.i, label %cond.end.i.i, label %block_ultimate_origin.exit.i

cond.end.i.i:                                     ; preds = %do.body.i.i
  %abstract_origin9.i.i = getelementptr inbounds %union.tree_node* %lookahead.0.i.i, i64 0, i32 0, i32 6
  %24 = bitcast %union.anon* %abstract_origin9.i.i to %union.tree_node**
  %25 = load %union.tree_node** %24, align 8, !tbaa !144
  %cmp10.i.i = icmp eq %union.tree_node* %25, null
  %cmp11.i.i = icmp eq %union.tree_node* %25, %lookahead.0.i.i
  %or.cond21.i.i = or i1 %cmp10.i.i, %cmp11.i.i
  br i1 %or.cond21.i.i, label %block_ultimate_origin.exit.i, label %do.body.i.i

block_ultimate_origin.exit.i:                     ; preds = %cond.end.i.i, %do.body.i.i, %new_die.exit.i
  %retval.0.i.i = phi %union.tree_node* [ null, %new_die.exit.i ], [ %lookahead.0.i.i, %do.body.i.i ], [ %lookahead.0.i.i, %cond.end.i.i ]
  call void @dwarf2out_abstract_function(%union.tree_node* %retval.0.i.i) #5
  %code.i99 = getelementptr inbounds %union.tree_node* %retval.0.i.i, i64 0, i32 0, i32 0, i32 2
  %bf.load.i100 = load i32* %code.i99, align 8
  %bf.clear.i101 = and i32 %bf.load.i100, 255
  %cmp.i102 = icmp eq i32 %bf.clear.i101, 30
  br i1 %cmp.i102, label %if.end11.i, label %if.then.i103

if.then.i103:                                     ; preds = %block_ultimate_origin.exit.i
  %idxprom50.i = zext i32 %bf.clear.i101 to i64
  %arrayidx.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom50.i
  %26 = load i8* %arrayidx.i, align 1, !tbaa !1
  %cmp5.i = icmp eq i8 %26, 116
  br i1 %cmp5.i, label %if.then7.i, label %if.end.i

if.then7.i:                                       ; preds = %if.then.i103
  %chain.i = getelementptr inbounds %union.tree_node* %retval.0.i.i, i64 0, i32 0, i32 0, i32 0
  %27 = load %union.tree_node** %chain.i, align 8, !tbaa !88
  br label %if.end.i

if.end.i:                                         ; preds = %if.then7.i, %if.then.i103
  %fn.0.i = phi %union.tree_node* [ %27, %if.then7.i ], [ %retval.0.i.i, %if.then.i103 ]
  %call.i = call %union.tree_node* @decl_function_context(%union.tree_node* %fn.0.i) #5
  %tobool.i104 = icmp eq %union.tree_node* %call.i, null
  br i1 %tobool.i104, label %if.end11.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end.i
  call void @dwarf2out_abstract_function(%union.tree_node* %call.i) #5
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i, %if.end.i, %block_ultimate_origin.exit.i
  %bf.load14.i = load i32* %code.i99, align 8
  %bf.clear15.i = and i32 %bf.load14.i, 255
  %idxprom1649.i = zext i32 %bf.clear15.i to i64
  %arrayidx17.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom1649.i
  %28 = load i8* %arrayidx17.i, align 1, !tbaa !1
  switch i8 %28, label %if.then38.i [
    i8 100, label %if.then21.i
    i8 116, label %if.then32.i
  ]

if.then21.i:                                      ; preds = %if.end11.i
  %origin.idx.i = getelementptr %union.tree_node* %retval.0.i.i, i64 0, i32 0, i32 3
  %origin.idx.val.i = load i32* %origin.idx.i, align 4, !tbaa !65
  %29 = load i32* @decl_die_table_in_use, align 4, !tbaa !4
  %cmp.i.i105 = icmp ugt i32 %29, %origin.idx.val.i
  br i1 %cmp.i.i105, label %cond.true.i.i, label %if.then38.i

cond.true.i.i:                                    ; preds = %if.then21.i
  %idxprom.i.i = zext i32 %origin.idx.val.i to i64
  %30 = load %struct.die_struct*** @decl_die_table, align 8, !tbaa !6
  %arrayidx.i.i = getelementptr inbounds %struct.die_struct** %30, i64 %idxprom.i.i
  %31 = load %struct.die_struct** %arrayidx.i.i, align 8, !tbaa !6
  br label %if.end35.i

if.then32.i:                                      ; preds = %if.end11.i
  %origin.idx51.i = getelementptr %union.tree_node* %retval.0.i.i, i64 0, i32 0, i32 10
  %origin.idx51.val.i = load %union.tree_node** %origin.idx51.i, align 8
  %32 = bitcast %union.tree_node* %origin.idx51.val.i to %struct.die_struct*
  br label %if.end35.i

if.end35.i:                                       ; preds = %cond.true.i.i, %if.then32.i
  %origin_die.0.i = phi %struct.die_struct* [ %32, %if.then32.i ], [ %31, %cond.true.i.i ]
  %cmp36.i = icmp eq %struct.die_struct* %origin_die.0.i, null
  br i1 %cmp36.i, label %if.then38.i, label %add_abstract_origin_attribute.exit

if.then38.i:                                      ; preds = %if.then21.i, %if.end11.i, %if.end35.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 9459, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.add_abstract_origin_attribute, i64 0, i64 0)) #7
  unreachable

add_abstract_origin_attribute.exit:               ; preds = %if.end35.i
  %call.i106 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i106, i64 8
  %33 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %33, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i106 to i32*
  store i32 49, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i106, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 10, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i106, i64 24
  %die2.i = bitcast i8* %v.i to %struct.die_struct**
  store %struct.die_struct* %origin_die.0.i, %struct.die_struct** %die2.i, align 8, !tbaa !60
  %external.i = getelementptr inbounds i8* %call.i106, i64 32
  %34 = bitcast i8* %external.i to i32*
  store i32 0, i32* %34, align 4, !tbaa !108
  %cmp.i.i107 = icmp ne i8* %call.i.i, null
  %cmp1.i.i = icmp ne i8* %call.i106, null
  %or.cond.i.i108 = and i1 %cmp.i.i107, %cmp1.i.i
  br i1 %or.cond.i.i108, label %if.then.i.i109, label %add_AT_die_ref.exit

if.then.i.i109:                                   ; preds = %add_abstract_origin_attribute.exit
  %35 = bitcast i8* %call.i106 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %36 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %37 = load %struct.dw_attr_struct** %36, align 8, !tbaa !73
  store %struct.dw_attr_struct* %37, %struct.dw_attr_struct** %33, align 8, !tbaa !72
  store %struct.dw_attr_struct* %35, %struct.dw_attr_struct** %36, align 8, !tbaa !73
  br label %add_AT_die_ref.exit

add_AT_die_ref.exit:                              ; preds = %add_abstract_origin_attribute.exit, %if.then.i.i109
  %bf.load3.i = load i32* %6, align 8
  %bf.lshr4.i = lshr i32 %bf.load3.i, 2
  %call5.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %14, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0), i32 %bf.lshr4.i) #5
  %call.i29.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i.i = getelementptr inbounds i8* %call.i29.i, i64 8
  %38 = bitcast i8* %dw_attr_next.i.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %38, align 8, !tbaa !72
  %dw_attr.i.i = bitcast i8* %call.i29.i to i32*
  store i32 17, i32* %dw_attr.i.i, align 4, !tbaa !57
  %dw_attr_val.i.i = getelementptr inbounds i8* %call.i29.i, i64 16
  %val_class.i.i = bitcast i8* %dw_attr_val.i.i to i32*
  store i32 12, i32* %val_class.i.i, align 4, !tbaa !59
  %call1.i30.i = call noalias i8* @xstrdup(i8* %14) #5
  %v.i.i = getelementptr inbounds i8* %call.i29.i, i64 24
  %val_lbl_id.i.i = bitcast i8* %v.i.i to i8**
  store i8* %call1.i30.i, i8** %val_lbl_id.i.i, align 8, !tbaa !6
  %cmp1.i.i31.i = icmp ne i8* %call.i29.i, null
  %or.cond.i.i.i = and i1 %cmp.i.i107, %cmp1.i.i31.i
  br i1 %or.cond.i.i.i, label %if.then.i.i32.i, label %add_AT_lbl_id.exit.i

if.then.i.i32.i:                                  ; preds = %add_AT_die_ref.exit
  %39 = bitcast i8* %call.i29.i to %struct.dw_attr_struct*
  %die_attr.i.i.i = getelementptr inbounds i8* %call.i.i, i64 16
  %40 = bitcast i8* %die_attr.i.i.i to %struct.dw_attr_struct**
  %41 = load %struct.dw_attr_struct** %40, align 8, !tbaa !73
  store %struct.dw_attr_struct* %41, %struct.dw_attr_struct** %38, align 8, !tbaa !72
  store %struct.dw_attr_struct* %39, %struct.dw_attr_struct** %40, align 8, !tbaa !73
  br label %add_AT_lbl_id.exit.i

add_AT_lbl_id.exit.i:                             ; preds = %if.then.i.i32.i, %add_AT_die_ref.exit
  %bf.load11.i = load i32* %6, align 8
  %bf.lshr12.i = lshr i32 %bf.load11.i, 2
  %call13.i = call i32 (i8*, i8*, ...)* @sprintf(i8* %14, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str20, i64 0, i64 0), i32 %bf.lshr12.i) #5
  %call.i33.i = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i34.i = getelementptr inbounds i8* %call.i33.i, i64 8
  %42 = bitcast i8* %dw_attr_next.i34.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %42, align 8, !tbaa !72
  %dw_attr.i35.i = bitcast i8* %call.i33.i to i32*
  store i32 18, i32* %dw_attr.i35.i, align 4, !tbaa !57
  %dw_attr_val.i36.i = getelementptr inbounds i8* %call.i33.i, i64 16
  %val_class.i37.i = bitcast i8* %dw_attr_val.i36.i to i32*
  store i32 12, i32* %val_class.i37.i, align 4, !tbaa !59
  %call1.i38.i = call noalias i8* @xstrdup(i8* %14) #5
  %v.i39.i = getelementptr inbounds i8* %call.i33.i, i64 24
  %val_lbl_id.i40.i = bitcast i8* %v.i39.i to i8**
  store i8* %call1.i38.i, i8** %val_lbl_id.i40.i, align 8, !tbaa !6
  %cmp1.i.i42.i = icmp ne i8* %call.i33.i, null
  %or.cond.i.i43.i = and i1 %cmp.i.i107, %cmp1.i.i42.i
  br i1 %or.cond.i.i43.i, label %if.then.i.i45.i, label %add_AT_lbl_id.exit46.i

if.then.i.i45.i:                                  ; preds = %add_AT_lbl_id.exit.i
  %43 = bitcast i8* %call.i33.i to %struct.dw_attr_struct*
  %die_attr.i.i44.i = getelementptr inbounds i8* %call.i.i, i64 16
  %44 = bitcast i8* %die_attr.i.i44.i to %struct.dw_attr_struct**
  %45 = load %struct.dw_attr_struct** %44, align 8, !tbaa !73
  store %struct.dw_attr_struct* %45, %struct.dw_attr_struct** %42, align 8, !tbaa !72
  store %struct.dw_attr_struct* %43, %struct.dw_attr_struct** %44, align 8, !tbaa !73
  br label %add_AT_lbl_id.exit46.i

add_AT_lbl_id.exit46.i:                           ; preds = %if.then.i.i45.i, %add_AT_lbl_id.exit.i
  call fastcc void @decls_for_scope(%union.tree_node* %stmt, %struct.die_struct* %15, i32 %depth) #5
  br label %if.end69

if.else.i:                                        ; preds = %if.then65
  call fastcc void @gen_lexical_block_die(%union.tree_node* %stmt, %struct.die_struct* %context_die, i32 %depth) #5
  br label %if.end69

if.else66:                                        ; preds = %land.lhs.true49, %if.then33
  call fastcc void @gen_lexical_block_die(%union.tree_node* %stmt, %struct.die_struct* %context_die, i32 %depth)
  br label %if.end69

if.else68:                                        ; preds = %for.inc54, %for.cond39.preheader, %if.then33, %if.else
  call fastcc void @decls_for_scope(%union.tree_node* %stmt, %struct.die_struct* %context_die, i32 %depth)
  br label %if.end69

if.end69:                                         ; preds = %for.body, %if.then13, %if.else.i, %add_AT_lbl_id.exit46.i, %land.lhs.true, %lor.lhs.false, %if.else66, %entry, %if.else68
  ret void
}

declare i32 @is_body_block(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_lexical_block_die(%union.tree_node* %stmt, %struct.die_struct* %context_die, i32 %depth) #1 {
entry:
  %label = alloca [30 x i8], align 16
  %call.i = call noalias i8* @xcalloc(i64 1, i64 72) #5
  %0 = bitcast i8* %call.i to %struct.die_struct*
  %die_tag.i = bitcast i8* %call.i to i32*
  store i32 11, i32* %die_tag.i, align 4, !tbaa !69
  %cmp.i = icmp eq %struct.die_struct* %context_die, null
  br i1 %cmp.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cmp1.i.i = icmp eq i8* %call.i, null
  br i1 %cmp1.i.i, label %new_die.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %cmp2.i.i = icmp eq %struct.die_struct* %0, %context_die
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.end.i.i

if.then3.i.i:                                     ; preds = %if.then.i.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.add_child_die, i64 0, i64 0)) #7
  unreachable

if.end.i.i:                                       ; preds = %if.then.i.i
  %die_parent.i.i = getelementptr inbounds i8* %call.i, i64 24
  %1 = bitcast i8* %die_parent.i.i to %struct.die_struct**
  store %struct.die_struct* %context_die, %struct.die_struct** %1, align 8, !tbaa !55
  %die_child.i.i = getelementptr inbounds %struct.die_struct* %context_die, i64 0, i32 4
  %2 = load %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  %die_sib.i.i = getelementptr inbounds i8* %call.i, i64 40
  %3 = bitcast i8* %die_sib.i.i to %struct.die_struct**
  store %struct.die_struct* %2, %struct.die_struct** %3, align 8, !tbaa !63
  store %struct.die_struct* %0, %struct.die_struct** %die_child.i.i, align 8, !tbaa !62
  br label %new_die.exit

if.else.i:                                        ; preds = %entry
  %call1.i = call noalias i8* @xmalloc(i64 24) #5
  %4 = bitcast i8* %call1.i to %struct.limbo_die_struct*
  %die2.i = bitcast i8* %call1.i to %struct.die_struct**
  store %struct.die_struct* %0, %struct.die_struct** %die2.i, align 8, !tbaa !54
  %created_for.i = getelementptr inbounds i8* %call1.i, i64 8
  %5 = bitcast i8* %created_for.i to %union.tree_node**
  store %union.tree_node* %stmt, %union.tree_node** %5, align 8, !tbaa !64
  %6 = load %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  %next.i = getelementptr inbounds i8* %call1.i, i64 16
  %7 = bitcast i8* %next.i to %struct.limbo_die_struct**
  store %struct.limbo_die_struct* %6, %struct.limbo_die_struct** %7, align 8, !tbaa !52
  store %struct.limbo_die_struct* %4, %struct.limbo_die_struct** @limbo_die_list, align 8, !tbaa !6
  br label %new_die.exit

new_die.exit:                                     ; preds = %if.then.i, %if.end.i.i, %if.else.i
  %abstract_flag = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 1
  %8 = bitcast i8** %abstract_flag to i32*
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 2
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.then, label %if.end30

if.then:                                          ; preds = %new_die.exit
  %9 = getelementptr inbounds %union.tree_node* %stmt, i64 0, i32 0, i32 8
  %10 = load %union.tree_node** %9, align 8, !tbaa !146
  %tobool2 = icmp eq %union.tree_node* %10, null
  br i1 %tobool2, label %do.body12, label %if.then3

if.then3:                                         ; preds = %if.then
  %11 = load i32* @ranges_table_in_use, align 4, !tbaa !4
  %12 = load i32* @ranges_table_allocated, align 4, !tbaa !4
  %cmp.i43 = icmp eq i32 %11, %12
  br i1 %cmp.i43, label %if.then.i45, label %if.end.i

if.then.i45:                                      ; preds = %if.then3
  %add.i = add i32 %11, 64
  store i32 %add.i, i32* @ranges_table_allocated, align 4, !tbaa !4
  %13 = load %struct.dw_ranges_struct** @ranges_table, align 8, !tbaa !6
  %14 = bitcast %struct.dw_ranges_struct* %13 to i8*
  %conv.i = zext i32 %add.i to i64
  %mul.i = shl nuw nsw i64 %conv.i, 2
  %call.i44 = call i8* @xrealloc(i8* %14, i64 %mul.i) #5
  %15 = bitcast i8* %call.i44 to %struct.dw_ranges_struct*
  store %struct.dw_ranges_struct* %15, %struct.dw_ranges_struct** @ranges_table, align 8, !tbaa !6
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i45, %if.then3
  %tobool.i = icmp eq %union.tree_node* %stmt, null
  br i1 %tobool.i, label %add_ranges.exit, label %cond.true.i

cond.true.i:                                      ; preds = %if.end.i
  %bf.load.i = load i32* %8, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 2
  br label %add_ranges.exit

add_ranges.exit:                                  ; preds = %if.end.i, %cond.true.i
  %cond.i = phi i32 [ %bf.lshr.i, %cond.true.i ], [ 0, %if.end.i ]
  %idxprom.i = zext i32 %11 to i64
  %16 = load %struct.dw_ranges_struct** @ranges_table, align 8, !tbaa !6
  %block_num2.i = getelementptr inbounds %struct.dw_ranges_struct* %16, i64 %idxprom.i, i32 0
  store i32 %cond.i, i32* %block_num2.i, align 4, !tbaa !79
  %add3.i = add i32 %11, 1
  store i32 %add3.i, i32* @ranges_table_in_use, align 4, !tbaa !4
  %mul4.i = shl i32 %11, 1
  %17 = load i32* @target_flags, align 4, !tbaa !4
  %and.i = lshr i32 %17, 20
  %18 = and i32 %and.i, 32
  %19 = add i32 %18, 32
  %div.i = sdiv i32 %19, 8
  %mul7.i = mul i32 %mul4.i, %div.i
  %conv = zext i32 %mul7.i to i64
  %call.i46 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i = getelementptr inbounds i8* %call.i46, i64 8
  %20 = bitcast i8* %dw_attr_next.i to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %20, align 8, !tbaa !72
  %dw_attr.i = bitcast i8* %call.i46 to i32*
  store i32 85, i32* %dw_attr.i, align 4, !tbaa !57
  %dw_attr_val.i = getelementptr inbounds i8* %call.i46, i64 16
  %val_class.i = bitcast i8* %dw_attr_val.i to i32*
  store i32 4, i32* %val_class.i, align 4, !tbaa !59
  %v.i = getelementptr inbounds i8* %call.i46, i64 24
  %val_offset.i = bitcast i8* %v.i to i64*
  store i64 %conv, i64* %val_offset.i, align 8, !tbaa !8
  %cmp.i.i = icmp ne i8* %call.i, null
  %cmp1.i.i47 = icmp ne i8* %call.i46, null
  %or.cond.i.i = and i1 %cmp.i.i, %cmp1.i.i47
  br i1 %or.cond.i.i, label %if.then.i.i48, label %add_AT_range_list.exit

if.then.i.i48:                                    ; preds = %add_ranges.exit
  %21 = bitcast i8* %call.i46 to %struct.dw_attr_struct*
  %die_attr.i.i = getelementptr inbounds i8* %call.i, i64 16
  %22 = bitcast i8* %die_attr.i.i to %struct.dw_attr_struct**
  %23 = load %struct.dw_attr_struct** %22, align 8, !tbaa !73
  store %struct.dw_attr_struct* %23, %struct.dw_attr_struct** %20, align 8, !tbaa !72
  store %struct.dw_attr_struct* %21, %struct.dw_attr_struct** %22, align 8, !tbaa !73
  br label %add_AT_range_list.exit

add_AT_range_list.exit:                           ; preds = %add_ranges.exit, %if.then.i.i48
  %24 = load %union.tree_node** %9, align 8, !tbaa !146
  %.pre = load i32* @ranges_table_in_use, align 4, !tbaa !4
  br label %do.body

do.body:                                          ; preds = %add_ranges.exit69, %add_AT_range_list.exit
  %25 = phi i32 [ %.pre, %add_AT_range_list.exit ], [ %add3.i64, %add_ranges.exit69 ]
  %chain.0 = phi %union.tree_node* [ %24, %add_AT_range_list.exit ], [ %33, %add_ranges.exit69 ]
  %26 = load i32* @ranges_table_allocated, align 4, !tbaa !4
  %cmp.i49 = icmp eq i32 %25, %26
  br i1 %cmp.i49, label %if.then.i54, label %if.end.i56

if.then.i54:                                      ; preds = %do.body
  %add.i50 = add i32 %25, 64
  store i32 %add.i50, i32* @ranges_table_allocated, align 4, !tbaa !4
  %27 = load %struct.dw_ranges_struct** @ranges_table, align 8, !tbaa !6
  %28 = bitcast %struct.dw_ranges_struct* %27 to i8*
  %conv.i51 = zext i32 %add.i50 to i64
  %mul.i52 = shl nuw nsw i64 %conv.i51, 2
  %call.i53 = call i8* @xrealloc(i8* %28, i64 %mul.i52) #5
  %29 = bitcast i8* %call.i53 to %struct.dw_ranges_struct*
  store %struct.dw_ranges_struct* %29, %struct.dw_ranges_struct** @ranges_table, align 8, !tbaa !6
  br label %if.end.i56

if.end.i56:                                       ; preds = %if.then.i54, %do.body
  %tobool.i55 = icmp eq %union.tree_node* %chain.0, null
  br i1 %tobool.i55, label %add_ranges.exit69, label %cond.true.i60

cond.true.i60:                                    ; preds = %if.end.i56
  %block_num.i57 = getelementptr inbounds %union.tree_node* %chain.0, i64 0, i32 0, i32 1
  %30 = bitcast i8** %block_num.i57 to i32*
  %bf.load.i58 = load i32* %30, align 8
  %bf.lshr.i59 = lshr i32 %bf.load.i58, 2
  br label %add_ranges.exit69

add_ranges.exit69:                                ; preds = %if.end.i56, %cond.true.i60
  %cond.i61 = phi i32 [ %bf.lshr.i59, %cond.true.i60 ], [ 0, %if.end.i56 ]
  %idxprom.i62 = zext i32 %25 to i64
  %31 = load %struct.dw_ranges_struct** @ranges_table, align 8, !tbaa !6
  %block_num2.i63 = getelementptr inbounds %struct.dw_ranges_struct* %31, i64 %idxprom.i62, i32 0
  store i32 %cond.i61, i32* %block_num2.i63, align 4, !tbaa !79
  %add3.i64 = add i32 %25, 1
  store i32 %add3.i64, i32* @ranges_table_in_use, align 4, !tbaa !4
  %32 = getelementptr inbounds %union.tree_node* %chain.0, i64 0, i32 0, i32 8
  %33 = load %union.tree_node** %32, align 8, !tbaa !146
  %tobool10 = icmp eq %union.tree_node* %33, null
  br i1 %tobool10, label %do.end, label %do.body

do.end:                                           ; preds = %add_ranges.exit69
  %34 = load i32* @ranges_table_allocated, align 4, !tbaa !4
  %cmp.i70 = icmp eq i32 %add3.i64, %34
  br i1 %cmp.i70, label %if.then.i75, label %add_ranges.exit85

if.then.i75:                                      ; preds = %do.end
  %add.i71 = add i32 %25, 65
  store i32 %add.i71, i32* @ranges_table_allocated, align 4, !tbaa !4
  %35 = bitcast %struct.dw_ranges_struct* %31 to i8*
  %conv.i72 = zext i32 %add.i71 to i64
  %mul.i73 = shl nuw nsw i64 %conv.i72, 2
  %call.i74 = call i8* @xrealloc(i8* %35, i64 %mul.i73) #5
  %36 = bitcast i8* %call.i74 to %struct.dw_ranges_struct*
  store %struct.dw_ranges_struct* %36, %struct.dw_ranges_struct** @ranges_table, align 8, !tbaa !6
  br label %add_ranges.exit85

add_ranges.exit85:                                ; preds = %do.end, %if.then.i75
  %37 = phi %struct.dw_ranges_struct* [ %31, %do.end ], [ %36, %if.then.i75 ]
  %idxprom.i78 = zext i32 %add3.i64 to i64
  %block_num2.i79 = getelementptr inbounds %struct.dw_ranges_struct* %37, i64 %idxprom.i78, i32 0
  store i32 0, i32* %block_num2.i79, align 4, !tbaa !79
  %add3.i80 = add i32 %25, 2
  store i32 %add3.i80, i32* @ranges_table_in_use, align 4, !tbaa !4
  br label %if.end30

do.body12:                                        ; preds = %if.then
  %arraydecay = getelementptr inbounds [30 x i8]* %label, i64 0, i64 0
  %bf.lshr15 = lshr i32 %bf.load, 2
  %call16 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0), i32 %bf.lshr15) #5
  %call.i86 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i87 = getelementptr inbounds i8* %call.i86, i64 8
  %38 = bitcast i8* %dw_attr_next.i87 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %38, align 8, !tbaa !72
  %dw_attr.i88 = bitcast i8* %call.i86 to i32*
  store i32 17, i32* %dw_attr.i88, align 4, !tbaa !57
  %dw_attr_val.i89 = getelementptr inbounds i8* %call.i86, i64 16
  %val_class.i90 = bitcast i8* %dw_attr_val.i89 to i32*
  store i32 12, i32* %val_class.i90, align 4, !tbaa !59
  %call1.i91 = call noalias i8* @xstrdup(i8* %arraydecay) #5
  %v.i92 = getelementptr inbounds i8* %call.i86, i64 24
  %val_lbl_id.i = bitcast i8* %v.i92 to i8**
  store i8* %call1.i91, i8** %val_lbl_id.i, align 8, !tbaa !6
  %cmp.i.i93 = icmp ne i8* %call.i, null
  %cmp1.i.i94 = icmp ne i8* %call.i86, null
  %or.cond.i.i95 = and i1 %cmp.i.i93, %cmp1.i.i94
  br i1 %or.cond.i.i95, label %if.then.i.i97, label %add_AT_lbl_id.exit

if.then.i.i97:                                    ; preds = %do.body12
  %39 = bitcast i8* %call.i86 to %struct.dw_attr_struct*
  %die_attr.i.i96 = getelementptr inbounds i8* %call.i, i64 16
  %40 = bitcast i8* %die_attr.i.i96 to %struct.dw_attr_struct**
  %41 = load %struct.dw_attr_struct** %40, align 8, !tbaa !73
  store %struct.dw_attr_struct* %41, %struct.dw_attr_struct** %38, align 8, !tbaa !72
  store %struct.dw_attr_struct* %39, %struct.dw_attr_struct** %40, align 8, !tbaa !73
  br label %add_AT_lbl_id.exit

add_AT_lbl_id.exit:                               ; preds = %do.body12, %if.then.i.i97
  %bf.load24 = load i32* %8, align 8
  %bf.lshr25 = lshr i32 %bf.load24, 2
  %call26 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str20, i64 0, i64 0), i32 %bf.lshr25) #5
  %call.i98 = call noalias i8* @xmalloc(i64 40) #5
  %dw_attr_next.i99 = getelementptr inbounds i8* %call.i98, i64 8
  %42 = bitcast i8* %dw_attr_next.i99 to %struct.dw_attr_struct**
  store %struct.dw_attr_struct* null, %struct.dw_attr_struct** %42, align 8, !tbaa !72
  %dw_attr.i100 = bitcast i8* %call.i98 to i32*
  store i32 18, i32* %dw_attr.i100, align 4, !tbaa !57
  %dw_attr_val.i101 = getelementptr inbounds i8* %call.i98, i64 16
  %val_class.i102 = bitcast i8* %dw_attr_val.i101 to i32*
  store i32 12, i32* %val_class.i102, align 4, !tbaa !59
  %call1.i103 = call noalias i8* @xstrdup(i8* %arraydecay) #5
  %v.i104 = getelementptr inbounds i8* %call.i98, i64 24
  %val_lbl_id.i105 = bitcast i8* %v.i104 to i8**
  store i8* %call1.i103, i8** %val_lbl_id.i105, align 8, !tbaa !6
  %cmp1.i.i107 = icmp ne i8* %call.i98, null
  %or.cond.i.i108 = and i1 %cmp.i.i93, %cmp1.i.i107
  br i1 %or.cond.i.i108, label %if.then.i.i110, label %if.end30

if.then.i.i110:                                   ; preds = %add_AT_lbl_id.exit
  %43 = bitcast i8* %call.i98 to %struct.dw_attr_struct*
  %die_attr.i.i109 = getelementptr inbounds i8* %call.i, i64 16
  %44 = bitcast i8* %die_attr.i.i109 to %struct.dw_attr_struct**
  %45 = load %struct.dw_attr_struct** %44, align 8, !tbaa !73
  store %struct.dw_attr_struct* %45, %struct.dw_attr_struct** %42, align 8, !tbaa !72
  store %struct.dw_attr_struct* %43, %struct.dw_attr_struct** %44, align 8, !tbaa !73
  br label %if.end30

if.end30:                                         ; preds = %if.then.i.i110, %add_AT_lbl_id.exit, %new_die.exit, %add_ranges.exit85
  call fastcc void @decls_for_scope(%union.tree_node* %stmt, %struct.die_struct* %0, i32 %depth)
  ret void
}

declare %union.tree_node* @get_qualified_type(%union.tree_node*, i32) #2

declare void @set_decl_abstract_flags(%union.tree_node*, i32) #2

declare void @app_enable() #2

declare i32 @size_of_encoded_value(i32) #2

declare i8* @eh_data_format_name(i32) #2

declare void @dw2_asm_output_encoded_addr_rtx(i32, %struct.rtx_def*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @output_cfi(%struct.dw_cfi_struct* %cfi, %struct.dw_fde_struct* nocapture %fde, i32 %for_eh) #1 {
entry:
  %dw_cfi_opc = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 1
  %0 = load i32* %dw_cfi_opc, align 4, !tbaa !16
  switch i32 %0, label %if.else16 [
    i32 64, label %if.then
    i32 128, label %if.then7
  ]

if.then:                                          ; preds = %entry
  %dw_cfi_offset = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2, i32 0
  %1 = load i64* %dw_cfi_offset, align 8, !tbaa !8
  %and = and i64 %1, 63
  %or = or i64 %and, 64
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %or, i8* getelementptr inbounds ([25 x i8]* @.str466, i64 0, i64 0), i64 %1) #5
  br label %if.end102

if.then7:                                         ; preds = %entry
  %dw_cfi_reg_num = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2, i32 0
  %2 = load i64* %dw_cfi_reg_num, align 8, !tbaa !8
  %and11 = and i64 %2, 63
  %or12 = or i64 %and11, 128
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %or12, i8* getelementptr inbounds ([28 x i8]* @.str467, i64 0, i64 0), i64 %2) #5
  %dw_cfi_offset15 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 3, i32 0
  %3 = load i64* %dw_cfi_offset15, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %3, i8* null) #5
  br label %if.end102

if.else16:                                        ; preds = %entry
  %conv22 = zext i32 %0 to i64
  switch i32 %0, label %sw.default.i [
    i32 192, label %if.then20
    i32 45, label %sw.bb24.i
    i32 47, label %sw.bb26.i
    i32 46, label %sw.bb25.i
    i32 0, label %dwarf_cfi_name.exit
    i32 1, label %sw.bb4.i
    i32 2, label %sw.bb5.i
    i32 3, label %sw.bb6.i
    i32 4, label %sw.bb7.i
    i32 5, label %sw.bb8.i
    i32 6, label %sw.bb9.i
    i32 7, label %sw.bb10.i
    i32 8, label %sw.bb11.i
    i32 9, label %sw.bb12.i
    i32 10, label %sw.bb13.i
    i32 11, label %sw.bb14.i
    i32 12, label %sw.bb15.i
    i32 13, label %sw.bb16.i
    i32 14, label %sw.bb17.i
    i32 15, label %sw.bb18.i
    i32 16, label %sw.bb19.i
    i32 17, label %sw.bb20.i
    i32 18, label %sw.bb21.i
    i32 19, label %sw.bb22.i
    i32 29, label %sw.bb23.i
  ]

if.then20:                                        ; preds = %if.else16
  %dw_cfi_reg_num24 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2, i32 0
  %4 = load i64* %dw_cfi_reg_num24, align 8, !tbaa !8
  %and25 = and i64 %4, 63
  %or26 = or i64 %and25, %conv22
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %or26, i8* getelementptr inbounds ([29 x i8]* @.str468, i64 0, i64 0), i64 %4) #5
  br label %if.end102

sw.bb4.i:                                         ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb5.i:                                         ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb6.i:                                         ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb7.i:                                         ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb8.i:                                         ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb9.i:                                         ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb10.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb11.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb12.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb13.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb14.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb15.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb16.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb17.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb18.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb19.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb20.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb21.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb22.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb23.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb24.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb25.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.bb26.i:                                        ; preds = %if.else16
  br label %dwarf_cfi_name.exit

sw.default.i:                                     ; preds = %if.else16
  br label %dwarf_cfi_name.exit

dwarf_cfi_name.exit:                              ; preds = %if.else16, %sw.bb4.i, %sw.bb5.i, %sw.bb6.i, %sw.bb7.i, %sw.bb8.i, %sw.bb9.i, %sw.bb10.i, %sw.bb11.i, %sw.bb12.i, %sw.bb13.i, %sw.bb14.i, %sw.bb15.i, %sw.bb16.i, %sw.bb17.i, %sw.bb18.i, %sw.bb19.i, %sw.bb20.i, %sw.bb21.i, %sw.bb22.i, %sw.bb23.i, %sw.bb24.i, %sw.bb25.i, %sw.bb26.i, %sw.default.i
  %retval.0.i = phi i8* [ getelementptr inbounds ([17 x i8]* @.str496, i64 0, i64 0), %sw.default.i ], [ getelementptr inbounds ([36 x i8]* @.str495, i64 0, i64 0), %sw.bb26.i ], [ getelementptr inbounds ([21 x i8]* @.str494, i64 0, i64 0), %sw.bb25.i ], [ getelementptr inbounds ([23 x i8]* @.str493, i64 0, i64 0), %sw.bb24.i ], [ getelementptr inbounds ([25 x i8]* @.str492, i64 0, i64 0), %sw.bb23.i ], [ getelementptr inbounds ([25 x i8]* @.str491, i64 0, i64 0), %sw.bb22.i ], [ getelementptr inbounds ([18 x i8]* @.str490, i64 0, i64 0), %sw.bb21.i ], [ getelementptr inbounds ([26 x i8]* @.str489, i64 0, i64 0), %sw.bb20.i ], [ getelementptr inbounds ([18 x i8]* @.str488, i64 0, i64 0), %sw.bb19.i ], [ getelementptr inbounds ([26 x i8]* @.str487, i64 0, i64 0), %sw.bb18.i ], [ getelementptr inbounds ([22 x i8]* @.str486, i64 0, i64 0), %sw.bb17.i ], [ getelementptr inbounds ([24 x i8]* @.str485, i64 0, i64 0), %sw.bb16.i ], [ getelementptr inbounds ([15 x i8]* @.str484, i64 0, i64 0), %sw.bb15.i ], [ getelementptr inbounds ([21 x i8]* @.str483, i64 0, i64 0), %sw.bb14.i ], [ getelementptr inbounds ([22 x i8]* @.str482, i64 0, i64 0), %sw.bb13.i ], [ getelementptr inbounds ([16 x i8]* @.str481, i64 0, i64 0), %sw.bb12.i ], [ getelementptr inbounds ([18 x i8]* @.str480, i64 0, i64 0), %sw.bb11.i ], [ getelementptr inbounds ([17 x i8]* @.str479, i64 0, i64 0), %sw.bb10.i ], [ getelementptr inbounds ([24 x i8]* @.str478, i64 0, i64 0), %sw.bb9.i ], [ getelementptr inbounds ([23 x i8]* @.str477, i64 0, i64 0), %sw.bb8.i ], [ getelementptr inbounds ([20 x i8]* @.str476, i64 0, i64 0), %sw.bb7.i ], [ getelementptr inbounds ([20 x i8]* @.str475, i64 0, i64 0), %sw.bb6.i ], [ getelementptr inbounds ([20 x i8]* @.str474, i64 0, i64 0), %sw.bb5.i ], [ getelementptr inbounds ([15 x i8]* @.str473, i64 0, i64 0), %sw.bb4.i ], [ getelementptr inbounds ([11 x i8]* @.str472, i64 0, i64 0), %if.else16 ]
  tail call void (i32, i64, i8*, ...)* @dw2_asm_output_data(i32 1, i64 %conv22, i8* getelementptr inbounds ([3 x i8]* @.str213, i64 0, i64 0), i8* %retval.0.i) #5
  %5 = load i32* %dw_cfi_opc, align 4, !tbaa !16
  switch i32 %5, label %if.end102 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb47
    i32 3, label %sw.bb53
    i32 4, label %sw.bb60
    i32 29, label %sw.bb67
    i32 5, label %sw.bb74
    i32 12, label %sw.bb74
    i32 17, label %sw.bb79
    i32 18, label %sw.bb79
    i32 6, label %sw.bb84
    i32 7, label %sw.bb84
    i32 8, label %sw.bb84
    i32 13, label %sw.bb84
    i32 9, label %sw.bb87
    i32 14, label %sw.bb92
    i32 46, label %sw.bb92
    i32 19, label %sw.bb95
    i32 47, label %sw.bb99
    i32 15, label %sw.bb98
    i32 16, label %sw.bb98
  ]

sw.bb:                                            ; preds = %dwarf_cfi_name.exit
  %tobool = icmp eq i32 %for_eh, 0
  br i1 %tobool, label %if.else41, label %if.then34

if.then34:                                        ; preds = %sw.bb
  %6 = load i32* @flag_pic, align 4, !tbaa !4
  %tobool35 = icmp ne i32 %6, 0
  %cond = select i1 %tobool35, i32 27, i32 0
  %7 = load i32* @target_flags, align 4, !tbaa !4
  %and36 = lshr i32 %7, 25
  %8 = and i32 %and36, 1
  %9 = or i32 %8, 4
  %dw_cfi_oprnd139 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2
  %dw_cfi_addr = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd139 to i8**
  %10 = load i8** %dw_cfi_addr, align 8, !tbaa !6
  %call40 = tail call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %9, i8* %10) #5
  tail call void (i32, %struct.rtx_def*, i8*, ...)* @dw2_asm_output_encoded_addr_rtx(i32 %cond, %struct.rtx_def* %call40, i8* null) #5
  br label %if.end102

if.else41:                                        ; preds = %sw.bb
  %11 = load i32* @target_flags, align 4, !tbaa !4
  %and42 = lshr i32 %11, 20
  %12 = and i32 %and42, 32
  %13 = add i32 %12, 32
  %div = sdiv i32 %13, 8
  %dw_cfi_oprnd145 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2
  %dw_cfi_addr46 = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd145 to i8**
  %14 = load i8** %dw_cfi_addr46, align 8, !tbaa !6
  tail call void (i32, i8*, i8*, ...)* @dw2_asm_output_addr(i32 %div, i8* %14, i8* null) #5
  br label %if.end102

sw.bb47:                                          ; preds = %dwarf_cfi_name.exit
  %dw_cfi_oprnd148 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2
  %dw_cfi_addr49 = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd148 to i8**
  %15 = load i8** %dw_cfi_addr49, align 8, !tbaa !6
  %dw_fde_current_label = getelementptr inbounds %struct.dw_fde_struct* %fde, i64 0, i32 1
  %16 = load i8** %dw_fde_current_label, align 8, !tbaa !25
  tail call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 1, i8* %15, i8* %16, i8* null) #5
  %17 = load i8** %dw_cfi_addr49, align 8, !tbaa !6
  store i8* %17, i8** %dw_fde_current_label, align 8, !tbaa !25
  br label %if.end102

sw.bb53:                                          ; preds = %dwarf_cfi_name.exit
  %dw_cfi_oprnd154 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2
  %dw_cfi_addr55 = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd154 to i8**
  %18 = load i8** %dw_cfi_addr55, align 8, !tbaa !6
  %dw_fde_current_label56 = getelementptr inbounds %struct.dw_fde_struct* %fde, i64 0, i32 1
  %19 = load i8** %dw_fde_current_label56, align 8, !tbaa !25
  tail call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 2, i8* %18, i8* %19, i8* null) #5
  %20 = load i8** %dw_cfi_addr55, align 8, !tbaa !6
  store i8* %20, i8** %dw_fde_current_label56, align 8, !tbaa !25
  br label %if.end102

sw.bb60:                                          ; preds = %dwarf_cfi_name.exit
  %dw_cfi_oprnd161 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2
  %dw_cfi_addr62 = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd161 to i8**
  %21 = load i8** %dw_cfi_addr62, align 8, !tbaa !6
  %dw_fde_current_label63 = getelementptr inbounds %struct.dw_fde_struct* %fde, i64 0, i32 1
  %22 = load i8** %dw_fde_current_label63, align 8, !tbaa !25
  tail call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 4, i8* %21, i8* %22, i8* null) #5
  %23 = load i8** %dw_cfi_addr62, align 8, !tbaa !6
  store i8* %23, i8** %dw_fde_current_label63, align 8, !tbaa !25
  br label %if.end102

sw.bb67:                                          ; preds = %dwarf_cfi_name.exit
  %dw_cfi_oprnd168 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2
  %dw_cfi_addr69 = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd168 to i8**
  %24 = load i8** %dw_cfi_addr69, align 8, !tbaa !6
  %dw_fde_current_label70 = getelementptr inbounds %struct.dw_fde_struct* %fde, i64 0, i32 1
  %25 = load i8** %dw_fde_current_label70, align 8, !tbaa !25
  tail call void (i32, i8*, i8*, i8*, ...)* @dw2_asm_output_delta(i32 8, i8* %24, i8* %25, i8* null) #5
  %26 = load i8** %dw_cfi_addr69, align 8, !tbaa !6
  store i8* %26, i8** %dw_fde_current_label70, align 8, !tbaa !25
  br label %if.end102

sw.bb74:                                          ; preds = %dwarf_cfi_name.exit, %dwarf_cfi_name.exit
  %dw_cfi_reg_num76 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2, i32 0
  %27 = load i64* %dw_cfi_reg_num76, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %27, i8* null) #5
  %dw_cfi_offset78 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 3, i32 0
  %28 = load i64* %dw_cfi_offset78, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %28, i8* null) #5
  br label %if.end102

sw.bb79:                                          ; preds = %dwarf_cfi_name.exit, %dwarf_cfi_name.exit
  %dw_cfi_reg_num81 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2, i32 0
  %29 = load i64* %dw_cfi_reg_num81, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %29, i8* null) #5
  %dw_cfi_offset83 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 3, i32 0
  %30 = load i64* %dw_cfi_offset83, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_sleb128(i64 %30, i8* null) #5
  br label %if.end102

sw.bb84:                                          ; preds = %dwarf_cfi_name.exit, %dwarf_cfi_name.exit, %dwarf_cfi_name.exit, %dwarf_cfi_name.exit
  %dw_cfi_reg_num86 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2, i32 0
  %31 = load i64* %dw_cfi_reg_num86, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %31, i8* null) #5
  br label %if.end102

sw.bb87:                                          ; preds = %dwarf_cfi_name.exit
  %dw_cfi_reg_num89 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2, i32 0
  %32 = load i64* %dw_cfi_reg_num89, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %32, i8* null) #5
  %dw_cfi_reg_num91 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 3, i32 0
  %33 = load i64* %dw_cfi_reg_num91, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %33, i8* null) #5
  br label %if.end102

sw.bb92:                                          ; preds = %dwarf_cfi_name.exit, %dwarf_cfi_name.exit
  %dw_cfi_offset94 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2, i32 0
  %34 = load i64* %dw_cfi_offset94, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %34, i8* null) #5
  br label %if.end102

sw.bb95:                                          ; preds = %dwarf_cfi_name.exit
  %dw_cfi_offset97 = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2, i32 0
  %35 = load i64* %dw_cfi_offset97, align 8, !tbaa !8
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_sleb128(i64 %35, i8* null) #5
  br label %if.end102

sw.bb98:                                          ; preds = %dwarf_cfi_name.exit, %dwarf_cfi_name.exit
  %dw_cfi_oprnd1.i = getelementptr inbounds %struct.dw_cfi_struct* %cfi, i64 0, i32 2
  %dw_cfi_loc.i = bitcast %union.dw_cfi_oprnd_struct* %dw_cfi_oprnd1.i to %struct.dw_loc_descr_struct**
  %36 = load %struct.dw_loc_descr_struct** %dw_cfi_loc.i, align 8, !tbaa !6
  %call.i = tail call fastcc i64 @size_of_locs(%struct.dw_loc_descr_struct* %36) #5
  tail call void (i64, i8*, ...)* @dw2_asm_output_data_uleb128(i64 %call.i, i8* null) #5
  tail call fastcc void @output_loc_sequence(%struct.dw_loc_descr_struct* %36) #5
  br label %if.end102

sw.bb99:                                          ; preds = %dwarf_cfi_name.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 1772, i8* getelementptr inbounds ([11 x i8]* @__FUNCTION__.output_cfi, i64 0, i64 0)) #7
  unreachable

if.end102:                                        ; preds = %if.then7, %sw.bb47, %sw.bb53, %sw.bb60, %sw.bb67, %sw.bb74, %sw.bb79, %sw.bb84, %sw.bb87, %sw.bb92, %sw.bb95, %sw.bb98, %if.else41, %if.then34, %dwarf_cfi_name.exit, %if.then20, %if.then
  ret void
}

declare void @app_disable() #2

; Function Attrs: nounwind uwtable
define internal fastcc i64 @stack_adjust_offset(%struct.rtx_def* nocapture readonly %pattern) #1 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %pattern, i64 0, i32 1, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx3, align 8, !tbaa !6
  %2 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %cmp = icmp eq %struct.rtx_def* %1, %2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -75
  %4 = icmp ult i32 %bf.clear.off, 2
  br i1 %4, label %lor.lhs.false6, label %return

lor.lhs.false6:                                   ; preds = %if.then
  %fld7 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx9 = bitcast [1 x %union.rtunion_def]* %fld7 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx9, align 8, !tbaa !6
  %cmp10 = icmp eq %struct.rtx_def* %5, %1
  br i1 %cmp10, label %lor.lhs.false11, label %return

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx14, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load15 = load i32* %7, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 54
  br i1 %cmp17, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false11
  %rtwint = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0, i32 0
  %8 = load i64* %rtwint, align 8, !tbaa !29
  br label %if.end74

if.else:                                          ; preds = %entry
  %9 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load24 = load i32* %9, align 8
  %bf.clear25 = and i32 %bf.load24, 65535
  %cmp26 = icmp eq i32 %bf.clear25, 66
  br i1 %cmp26, label %if.then27, label %return

if.then27:                                        ; preds = %if.else
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx30, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load31 = load i32* %11, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %12 = and i32 %bf.load31, 65534
  %bf.clear32.cmp = icmp ne i32 %12, 96
  %cmp36 = icmp ne i32 %bf.clear32, 100
  %or.cond84 = and i1 %bf.clear32.cmp, %cmp36
  br i1 %or.cond84, label %return, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %if.then27
  %fld38 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1
  %rtx40 = bitcast [1 x %union.rtunion_def]* %fld38 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx40, align 8, !tbaa !6
  %cmp41 = icmp eq %struct.rtx_def* %13, %2
  br i1 %cmp41, label %if.end43, label %return

if.end43:                                         ; preds = %lor.lhs.false37
  %cmp44 = icmp eq i32 %bf.clear32, 100
  br i1 %cmp44, label %if.then45, label %if.else67

if.then45:                                        ; preds = %if.end43
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 1
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx48, align 8, !tbaa !6
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 1
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx51, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load55 = load i32* %16, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp eq i32 %bf.clear56, 75
  br i1 %cmp57, label %lor.lhs.false58, label %if.then62

lor.lhs.false58:                                  ; preds = %if.then45
  %17 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load59 = load i32* %17, align 8
  %bf.clear60 = and i32 %bf.load59, 65535
  %cmp61 = icmp eq i32 %bf.clear60, 54
  br i1 %cmp61, label %if.end74.thread, label %if.then62

if.then62:                                        ; preds = %lor.lhs.false58, %if.then45
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i32 972, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.stack_adjust_offset, i64 0, i64 0)) #7
  unreachable

if.end74.thread:                                  ; preds = %lor.lhs.false58
  %rtwint66 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 0, i32 0
  %18 = load i64* %rtwint66, align 8, !tbaa !29
  %sub = sub nsw i64 0, %18
  br label %return

if.else67:                                        ; preds = %if.end43
  %bf.lshr = lshr i32 %bf.load24, 16
  %bf.clear69 = and i32 %bf.lshr, 255
  %idxprom106 = zext i32 %bf.clear69 to i64
  %arrayidx70 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom106
  %19 = load i8* %arrayidx70, align 1, !tbaa !1
  %conv = zext i8 %19 to i64
  br label %if.end74

if.end74:                                         ; preds = %if.else67, %if.end
  %offset.0 = phi i64 [ %8, %if.end ], [ %conv, %if.else67 ]
  %code.0 = phi i32 [ %bf.clear, %if.end ], [ %bf.clear32, %if.else67 ]
  switch i32 %code.0, label %return [
    i32 97, label %if.then80
    i32 75, label %if.then80
  ]

if.then80:                                        ; preds = %if.end74, %if.end74
  %sub81 = sub nsw i64 0, %offset.0
  br label %return

return:                                           ; preds = %if.end74.thread, %if.then80, %if.end74, %if.else, %if.then27, %lor.lhs.false37, %if.then, %lor.lhs.false6, %lor.lhs.false11
  %retval.0 = phi i64 [ 0, %lor.lhs.false11 ], [ 0, %lor.lhs.false6 ], [ 0, %if.then ], [ 0, %lor.lhs.false37 ], [ 0, %if.then27 ], [ 0, %if.else ], [ %sub81, %if.then80 ], [ %offset.0, %if.end74 ], [ %sub, %if.end74.thread ]
  ret i64 %retval.0
}

declare i32 @modified_in_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noreturn
declare void @internal_error(i8*, ...) #4

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #5

attributes #0 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"omnipotent char", metadata !3, i64 0}
!3 = metadata !{metadata !"Simple C/C++ TBAA"}
!4 = metadata !{metadata !5, metadata !5, i64 0}
!5 = metadata !{metadata !"int", metadata !2, i64 0}
!6 = metadata !{metadata !7, metadata !7, i64 0}
!7 = metadata !{metadata !"any pointer", metadata !2, i64 0}
!8 = metadata !{metadata !9, metadata !9, i64 0}
!9 = metadata !{metadata !"long", metadata !2, i64 0}
!10 = metadata !{metadata !11, metadata !5, i64 24}
!11 = metadata !{metadata !"cfa_loc", metadata !9, i64 0, metadata !9, i64 8, metadata !9, i64 16, metadata !5, i64 24}
!12 = metadata !{metadata !11, metadata !9, i64 16}
!13 = metadata !{metadata !11, metadata !9, i64 0}
!14 = metadata !{metadata !11, metadata !9, i64 8}
!15 = metadata !{i64 0, i64 8, metadata !8, i64 8, i64 8, metadata !8, i64 16, i64 8, metadata !8, i64 24, i64 4, metadata !4}
!16 = metadata !{metadata !17, metadata !2, i64 8}
!17 = metadata !{metadata !"dw_cfi_struct", metadata !7, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24}
!18 = metadata !{metadata !19, metadata !2, i64 8}
!19 = metadata !{metadata !"dw_loc_descr_struct", metadata !7, i64 0, metadata !2, i64 8, metadata !20, i64 16, metadata !20, i64 40, metadata !5, i64 64}
!20 = metadata !{metadata !"dw_val_struct", metadata !2, i64 0, metadata !2, i64 8}
!21 = metadata !{metadata !19, metadata !7, i64 0}
!22 = metadata !{metadata !17, metadata !7, i64 0}
!23 = metadata !{metadata !19, metadata !2, i64 16}
!24 = metadata !{metadata !19, metadata !2, i64 40}
!25 = metadata !{metadata !26, metadata !7, i64 8}
!26 = metadata !{metadata !"dw_fde_struct", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !5, i64 32, metadata !5, i64 36, metadata !5, i64 36}
!27 = metadata !{metadata !28, metadata !7, i64 8}
!28 = metadata !{metadata !"queued_reg_save", metadata !7, i64 0, metadata !7, i64 8, metadata !9, i64 16}
!29 = metadata !{metadata !30, metadata !30, i64 0}
!30 = metadata !{metadata !"long long", metadata !2, i64 0}
!31 = metadata !{metadata !32, metadata !5, i64 0}
!32 = metadata !{metadata !"rtvec_def", metadata !5, i64 0, metadata !2, i64 8}
!33 = metadata !{metadata !28, metadata !9, i64 16}
!34 = metadata !{metadata !28, metadata !7, i64 0}
!35 = metadata !{metadata !26, metadata !7, i64 0}
!36 = metadata !{metadata !26, metadata !5, i64 32}
!37 = metadata !{metadata !38, metadata !7, i64 128}
!38 = metadata !{metadata !"tree_decl", metadata !39, i64 0, metadata !7, i64 24, metadata !5, i64 32, metadata !5, i64 36, metadata !7, i64 40, metadata !2, i64 48, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 51, metadata !5, i64 51, metadata !5, i64 51, metadata !5, i64 51, metadata !5, i64 51, metadata !2, i64 51, metadata !5, i64 51, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 53, metadata !5, i64 53, metadata !5, i64 53, metadata !5, i64 53, metadata !5, i64 53, metadata !2, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !7, i64 80, metadata !7, i64 88, metadata !7, i64 96, metadata !7, i64 104, metadata !7, i64 112, metadata !7, i64 120, metadata !7, i64 128, metadata !7, i64 136, metadata !7, i64 144, metadata !7, i64 152, metadata !2, i64 160, metadata !7, i64 168, metadata !7, i64 176, metadata !7, i64 184, metadata !30, i64 192, metadata !7, i64 200}
!39 = metadata !{metadata !"tree_common", metadata !7, i64 0, metadata !7, i64 8, metadata !2, i64 16, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19}
!40 = metadata !{metadata !26, metadata !7, i64 16}
!41 = metadata !{metadata !42, metadata !7, i64 144}
!42 = metadata !{metadata !"gcc_target", metadata !43, i64 0, metadata !45, i64 168, metadata !7, i64 240, metadata !7, i64 248, metadata !7, i64 256, metadata !7, i64 264, metadata !7, i64 272, metadata !7, i64 280, metadata !7, i64 288, metadata !7, i64 296, metadata !7, i64 304, metadata !7, i64 312, metadata !7, i64 320, metadata !46, i64 328, metadata !46, i64 329, metadata !7, i64 336}
!43 = metadata !{metadata !"asm_out", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !44, i64 24, metadata !44, i64 56, metadata !7, i64 88, metadata !7, i64 96, metadata !7, i64 104, metadata !7, i64 112, metadata !7, i64 120, metadata !7, i64 128, metadata !7, i64 136, metadata !7, i64 144, metadata !7, i64 152, metadata !7, i64 160}
!44 = metadata !{metadata !"asm_int_op", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24}
!45 = metadata !{metadata !"sched", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !7, i64 64}
!46 = metadata !{metadata !"_Bool", metadata !2, i64 0}
!47 = metadata !{metadata !48, metadata !7, i64 0}
!48 = metadata !{metadata !"file_table", metadata !7, i64 0, metadata !5, i64 8, metadata !5, i64 12, metadata !5, i64 16}
!49 = metadata !{metadata !48, metadata !5, i64 8}
!50 = metadata !{metadata !48, metadata !5, i64 12}
!51 = metadata !{metadata !48, metadata !5, i64 16}
!52 = metadata !{metadata !53, metadata !7, i64 16}
!53 = metadata !{metadata !"limbo_die_struct", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16}
!54 = metadata !{metadata !53, metadata !7, i64 0}
!55 = metadata !{metadata !56, metadata !7, i64 24}
!56 = metadata !{metadata !"die_struct", metadata !2, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !9, i64 48, metadata !9, i64 56, metadata !5, i64 64}
!57 = metadata !{metadata !58, metadata !2, i64 0}
!58 = metadata !{metadata !"dw_attr_struct", metadata !2, i64 0, metadata !7, i64 8, metadata !20, i64 16}
!59 = metadata !{metadata !58, metadata !2, i64 16}
!60 = metadata !{metadata !61, metadata !7, i64 0}
!61 = metadata !{metadata !"", metadata !7, i64 0, metadata !5, i64 8}
!62 = metadata !{metadata !56, metadata !7, i64 32}
!63 = metadata !{metadata !56, metadata !7, i64 40}
!64 = metadata !{metadata !53, metadata !7, i64 8}
!65 = metadata !{metadata !38, metadata !5, i64 36}
!66 = metadata !{metadata !38, metadata !7, i64 80}
!67 = metadata !{metadata !68, metadata !9, i64 8}
!68 = metadata !{metadata !"varray_head_tag", metadata !9, i64 0, metadata !9, i64 8, metadata !9, i64 16, metadata !7, i64 24, metadata !2, i64 32}
!69 = metadata !{metadata !56, metadata !2, i64 0}
!70 = metadata !{metadata !71, metadata !7, i64 8}
!71 = metadata !{metadata !"ht_identifier", metadata !5, i64 0, metadata !7, i64 8}
!72 = metadata !{metadata !58, metadata !7, i64 8}
!73 = metadata !{metadata !56, metadata !7, i64 16}
!74 = metadata !{metadata !75, metadata !7, i64 8}
!75 = metadata !{metadata !"pubname_struct", metadata !7, i64 0, metadata !7, i64 8}
!76 = metadata !{metadata !75, metadata !7, i64 0}
!77 = metadata !{metadata !56, metadata !5, i64 64}
!78 = metadata !{metadata !56, metadata !9, i64 48}
!79 = metadata !{metadata !80, metadata !5, i64 0}
!80 = metadata !{metadata !"dw_ranges_struct", metadata !5, i64 0}
!81 = metadata !{metadata !82, metadata !7, i64 96}
!82 = metadata !{metadata !"ht", metadata !83, i64 0, metadata !7, i64 88, metadata !7, i64 96, metadata !5, i64 104, metadata !5, i64 108, metadata !7, i64 112, metadata !5, i64 120, metadata !5, i64 124}
!83 = metadata !{metadata !"obstack", metadata !9, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !9, i64 40, metadata !5, i64 48, metadata !7, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !5, i64 80, metadata !5, i64 80, metadata !5, i64 80}
!84 = metadata !{metadata !85, metadata !5, i64 16}
!85 = metadata !{metadata !"indirect_string_node", metadata !71, i64 0, metadata !5, i64 16, metadata !5, i64 20, metadata !7, i64 24}
!86 = metadata !{metadata !38, metadata !7, i64 72}
!87 = metadata !{metadata !39, metadata !7, i64 8}
!88 = metadata !{metadata !39, metadata !7, i64 0}
!89 = metadata !{metadata !38, metadata !7, i64 112}
!90 = metadata !{metadata !38, metadata !7, i64 104}
!91 = metadata !{metadata !38, metadata !5, i64 32}
!92 = metadata !{metadata !38, metadata !7, i64 184}
!93 = metadata !{metadata !94, metadata !7, i64 32}
!94 = metadata !{metadata !"tree_list", metadata !39, i64 0, metadata !7, i64 24, metadata !7, i64 32}
!95 = metadata !{metadata !56, metadata !9, i64 56}
!96 = metadata !{metadata !97, metadata !7, i64 24}
!97 = metadata !{metadata !"dw_loc_list_struct", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40}
!98 = metadata !{metadata !99, metadata !9, i64 0}
!99 = metadata !{metadata !"dw_long_long_struct", metadata !9, i64 0, metadata !9, i64 8}
!100 = metadata !{metadata !99, metadata !9, i64 8}
!101 = metadata !{metadata !56, metadata !7, i64 8}
!102 = metadata !{metadata !103, metadata !7, i64 96}
!103 = metadata !{metadata !"tree_type", metadata !39, i64 0, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !5, i64 56, metadata !5, i64 60, metadata !2, i64 61, metadata !5, i64 62, metadata !5, i64 62, metadata !5, i64 62, metadata !5, i64 62, metadata !5, i64 62, metadata !5, i64 62, metadata !5, i64 62, metadata !5, i64 63, metadata !5, i64 63, metadata !5, i64 63, metadata !5, i64 63, metadata !5, i64 63, metadata !5, i64 63, metadata !5, i64 63, metadata !5, i64 63, metadata !5, i64 64, metadata !7, i64 72, metadata !7, i64 80, metadata !2, i64 88, metadata !7, i64 96, metadata !7, i64 104, metadata !7, i64 112, metadata !7, i64 120, metadata !7, i64 128, metadata !7, i64 136, metadata !7, i64 144, metadata !30, i64 152, metadata !7, i64 160}
!104 = metadata !{metadata !38, metadata !7, i64 96}
!105 = metadata !{metadata !106, metadata !7, i64 32}
!106 = metadata !{metadata !"tree_identifier", metadata !39, i64 0, metadata !71, i64 24}
!107 = metadata !{metadata !103, metadata !7, i64 128}
!108 = metadata !{metadata !61, metadata !5, i64 8}
!109 = metadata !{metadata !38, metadata !7, i64 144}
!110 = metadata !{metadata !103, metadata !7, i64 32}
!111 = metadata !{metadata !103, metadata !5, i64 64}
!112 = metadata !{metadata !38, metadata !7, i64 40}
!113 = metadata !{metadata !85, metadata !5, i64 20}
!114 = metadata !{metadata !85, metadata !7, i64 24}
!115 = metadata !{metadata !71, metadata !5, i64 0}
!116 = metadata !{metadata !19, metadata !5, i64 64}
!117 = metadata !{metadata !118, metadata !5, i64 8}
!118 = metadata !{metadata !"dw_fp_struct", metadata !7, i64 0, metadata !5, i64 8}
!119 = metadata !{metadata !118, metadata !7, i64 0}
!120 = metadata !{metadata !20, metadata !2, i64 0}
!121 = metadata !{metadata !122, metadata !7, i64 0}
!122 = metadata !{metadata !"lang_hooks", metadata !7, i64 0, metadata !9, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !7, i64 80, metadata !7, i64 88, metadata !46, i64 96, metadata !7, i64 104, metadata !7, i64 112, metadata !7, i64 120, metadata !7, i64 128, metadata !7, i64 136, metadata !7, i64 144, metadata !123, i64 152, metadata !124, i64 240}
!123 = metadata !{metadata !"lang_hooks_for_tree_inlining", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !7, i64 80}
!124 = metadata !{metadata !"lang_hooks_for_tree_dump", metadata !7, i64 0, metadata !7, i64 8}
!125 = metadata !{metadata !103, metadata !7, i64 112}
!126 = metadata !{metadata !68, metadata !9, i64 0}
!127 = metadata !{metadata !38, metadata !7, i64 24}
!128 = metadata !{metadata !103, metadata !7, i64 136}
!129 = metadata !{metadata !130, metadata !5, i64 24}
!130 = metadata !{metadata !"tree_vec", metadata !39, i64 0, metadata !5, i64 24, metadata !2, i64 32}
!131 = metadata !{metadata !103, metadata !7, i64 104}
!132 = metadata !{metadata !103, metadata !7, i64 24}
!133 = metadata !{metadata !134, metadata !5, i64 32}
!134 = metadata !{metadata !"tree_string", metadata !39, i64 0, metadata !7, i64 24, metadata !5, i64 32, metadata !7, i64 40}
!135 = metadata !{metadata !46, metadata !46, i64 0}
!136 = metadata !{metadata !38, metadata !7, i64 88}
!137 = metadata !{metadata !38, metadata !7, i64 120}
!138 = metadata !{metadata !139, metadata !30, i64 40}
!139 = metadata !{metadata !"tree_int_cst", metadata !39, i64 0, metadata !7, i64 24, metadata !140, i64 32}
!140 = metadata !{metadata !"", metadata !30, i64 0, metadata !30, i64 8}
!141 = metadata !{metadata !139, metadata !30, i64 32}
!142 = metadata !{metadata !143, metadata !7, i64 64}
!143 = metadata !{metadata !"tree_block", metadata !39, i64 0, metadata !5, i64 24, metadata !5, i64 24, metadata !5, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !7, i64 64, metadata !7, i64 72}
!144 = metadata !{metadata !143, metadata !7, i64 56}
!145 = metadata !{metadata !143, metadata !7, i64 32}
!146 = metadata !{metadata !143, metadata !7, i64 72}
