; ModuleID = 'lcm.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%union.tree_node = type opaque
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct.edge_list = type { i32, i32, %struct.edge_def** }
%struct._IO_FILE = type opaque
%struct.bb_info = type { %struct.seginfo*, i32 }
%struct.seginfo = type { i32, %struct.rtx_def*, i32, %struct.seginfo*, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }

@n_basic_blocks = external global i32
@basic_block_info = external global %struct.varray_head_tag*
@entry_exit_blocks = external global [2 x %struct.basic_block_def]
@optimize_mode_switching.num_modes = internal unnamed_addr constant [1 x i32] [i32 2], align 4
@antic = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8
@transp = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8
@comp = internal unnamed_addr global %struct.simple_bitmap_def** null, align 8
@rtx_class = external constant [153 x i8]
@insert = internal global %struct.simple_bitmap_def** null, align 8
@delete = internal global %struct.simple_bitmap_def** null, align 8
@.str = private unnamed_addr constant [6 x i8] c"lcm.c\00", align 1
@__FUNCTION__.optimize_mode_switching = private unnamed_addr constant [24 x i8] c"optimize_mode_switching\00", align 1
@mode_class = external constant [59 x i32]
@target_flags = external global i32
@mode_size = external constant [59 x i8]

; Function Attrs: nounwind uwtable
define %struct.edge_list* @pre_edge_lcm(%struct._IO_FILE* nocapture readnone %file, i32 %n_exprs, %struct.simple_bitmap_def** nocapture readonly %transp, %struct.simple_bitmap_def** nocapture readonly %avloc, %struct.simple_bitmap_def** nocapture readonly %antloc, %struct.simple_bitmap_def** nocapture readonly %kill, %struct.simple_bitmap_def*** nocapture %insert, %struct.simple_bitmap_def*** nocapture %delete) #0 {
entry:
  %call = tail call %struct.edge_list* @create_edge_list() #4
  %num_edges1 = getelementptr inbounds %struct.edge_list* %call, i64 0, i32 1
  %0 = load i32* %num_edges1, align 4, !tbaa !1
  %1 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call2 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %1, i32 %n_exprs) #4
  %2 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call3 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %2, i32 %n_exprs) #4
  tail call void @compute_available(%struct.simple_bitmap_def** %avloc, %struct.simple_bitmap_def** %kill, %struct.simple_bitmap_def** %call3, %struct.simple_bitmap_def** %call2)
  %3 = bitcast %struct.simple_bitmap_def** %call2 to i8*
  tail call void @free(i8* %3)
  %4 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call4 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %4, i32 %n_exprs) #4
  %5 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call5 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %5, i32 %n_exprs) #4
  tail call fastcc void @compute_antinout_edge(%struct.simple_bitmap_def** %antloc, %struct.simple_bitmap_def** %transp, %struct.simple_bitmap_def** %call4, %struct.simple_bitmap_def** %call5)
  %call6 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %0, i32 %n_exprs) #4
  %6 = load i32* %num_edges1, align 4, !tbaa !1
  %call.i = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %n_exprs) #4
  %call2.i = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %n_exprs) #4
  %cmp54.i = icmp sgt i32 %6, 0
  br i1 %cmp54.i, label %for.body.lr.ph.i, label %compute_earliest.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %index_to_edge.i = getelementptr inbounds %struct.edge_list* %call, i64 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %7 = load %struct.edge_def*** %index_to_edge.i, align 8, !tbaa !8
  %arrayidx.i = getelementptr inbounds %struct.edge_def** %7, i64 %indvars.iv.i
  %8 = load %struct.edge_def** %arrayidx.i, align 8, !tbaa !9
  %src.i = getelementptr inbounds %struct.edge_def* %8, i64 0, i32 2
  %9 = load %struct.basic_block_def** %src.i, align 8, !tbaa !10
  %dest.i = getelementptr inbounds %struct.edge_def* %8, i64 0, i32 3
  %10 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !13
  %cmp6.i = icmp eq %struct.basic_block_def* %9, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp6.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.body.i
  %arrayidx8.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %indvars.iv.i
  %11 = load %struct.simple_bitmap_def** %arrayidx8.i, align 8, !tbaa !9
  %index.i = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 11
  %12 = load i32* %index.i, align 4, !tbaa !14
  %idxprom9.i = sext i32 %12 to i64
  %arrayidx10.i = getelementptr inbounds %struct.simple_bitmap_def** %call4, i64 %idxprom9.i
  %13 = load %struct.simple_bitmap_def** %arrayidx10.i, align 8, !tbaa !9
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %11, %struct.simple_bitmap_def* %13) #4
  br label %for.inc.i

if.else.i:                                        ; preds = %for.body.i
  %index11.i = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 11
  %14 = load i32* %index11.i, align 4, !tbaa !14
  %cmp12.i = icmp eq i32 %14, -2
  br i1 %cmp12.i, label %if.then13.i, label %if.else16.i

if.then13.i:                                      ; preds = %if.else.i
  %arrayidx15.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %indvars.iv.i
  %15 = load %struct.simple_bitmap_def** %arrayidx15.i, align 8, !tbaa !9
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %15) #4
  br label %for.inc.i

if.else16.i:                                      ; preds = %if.else.i
  %idxprom18.i = sext i32 %14 to i64
  %arrayidx19.i = getelementptr inbounds %struct.simple_bitmap_def** %call4, i64 %idxprom18.i
  %16 = load %struct.simple_bitmap_def** %arrayidx19.i, align 8, !tbaa !9
  %index20.i = getelementptr inbounds %struct.basic_block_def* %9, i64 0, i32 11
  %17 = load i32* %index20.i, align 4, !tbaa !14
  %idxprom21.i = sext i32 %17 to i64
  %arrayidx22.i = getelementptr inbounds %struct.simple_bitmap_def** %call3, i64 %idxprom21.i
  %18 = load %struct.simple_bitmap_def** %arrayidx22.i, align 8, !tbaa !9
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %call.i, %struct.simple_bitmap_def* %16, %struct.simple_bitmap_def* %18) #4
  %19 = load i32* %index20.i, align 4, !tbaa !14
  %idxprom24.i = sext i32 %19 to i64
  %arrayidx25.i = getelementptr inbounds %struct.simple_bitmap_def** %call5, i64 %idxprom24.i
  %20 = load %struct.simple_bitmap_def** %arrayidx25.i, align 8, !tbaa !9
  tail call void @sbitmap_not(%struct.simple_bitmap_def* %call2.i, %struct.simple_bitmap_def* %20) #4
  %arrayidx27.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %indvars.iv.i
  %21 = load %struct.simple_bitmap_def** %arrayidx27.i, align 8, !tbaa !9
  %22 = load i32* %index20.i, align 4, !tbaa !14
  %idxprom29.i = sext i32 %22 to i64
  %arrayidx30.i = getelementptr inbounds %struct.simple_bitmap_def** %kill, i64 %idxprom29.i
  %23 = load %struct.simple_bitmap_def** %arrayidx30.i, align 8, !tbaa !9
  %call31.i = tail call i32 @sbitmap_a_and_b_or_c(%struct.simple_bitmap_def* %21, %struct.simple_bitmap_def* %call.i, %struct.simple_bitmap_def* %23, %struct.simple_bitmap_def* %call2.i) #4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else16.i, %if.then13.i, %if.then.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv72 = trunc i64 %indvars.iv.next.i to i32
  %exitcond73 = icmp eq i32 %lftr.wideiv72, %6
  br i1 %exitcond73, label %compute_earliest.exit, label %for.body.i

compute_earliest.exit:                            ; preds = %for.inc.i, %entry
  %24 = bitcast %struct.simple_bitmap_def* %call2.i to i8*
  tail call void @free(i8* %24) #4
  %25 = bitcast %struct.simple_bitmap_def* %call.i to i8*
  tail call void @free(i8* %25) #4
  %26 = bitcast %struct.simple_bitmap_def** %call5 to i8*
  tail call void @free(i8* %26)
  %27 = bitcast %struct.simple_bitmap_def** %call4 to i8*
  tail call void @free(i8* %27)
  %28 = bitcast %struct.simple_bitmap_def** %call3 to i8*
  tail call void @free(i8* %28)
  %call7 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %0, i32 %n_exprs) #4
  %29 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %add = add nsw i32 %29, 1
  %call8 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %add, i32 %n_exprs) #4
  %30 = load i32* %num_edges1, align 4, !tbaa !1
  %31 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %add.i = add nsw i32 %31, 1
  %conv.i = sext i32 %add.i to i64
  %mul.i = shl nsw i64 %conv.i, 3
  %call.i45 = tail call noalias i8* @xmalloc(i64 %mul.i) #4
  %32 = bitcast i8* %call.i45 to %struct.basic_block_def**
  %cmp179.i = icmp sgt i32 %30, 0
  br i1 %cmp179.i, label %for.body.lr.ph.i47, label %for.end.i

for.body.lr.ph.i47:                               ; preds = %compute_earliest.exit
  %index_to_edge.i46 = getelementptr inbounds %struct.edge_list* %call, i64 0, i32 2
  %.pre183.i = load %struct.edge_def*** %index_to_edge.i46, align 8, !tbaa !8
  br label %for.body.i51

for.body.i51:                                     ; preds = %for.body.i51, %for.body.lr.ph.i47
  %indvars.iv181.i = phi i64 [ 0, %for.body.lr.ph.i47 ], [ %indvars.iv.next182.i, %for.body.i51 ]
  %33 = inttoptr i64 %indvars.iv181.i to i8*
  %arrayidx.i48 = getelementptr inbounds %struct.edge_def** %.pre183.i, i64 %indvars.iv181.i
  %34 = load %struct.edge_def** %arrayidx.i48, align 8, !tbaa !9
  %aux.i = getelementptr inbounds %struct.edge_def* %34, i64 0, i32 5
  store i8* %33, i8** %aux.i, align 8, !tbaa !16
  %indvars.iv.next182.i = add nuw nsw i64 %indvars.iv181.i, 1
  %lftr.wideiv70 = trunc i64 %indvars.iv.next182.i to i32
  %exitcond71 = icmp eq i32 %lftr.wideiv70, %30
  br i1 %exitcond71, label %for.end.i, label %for.body.i51

for.end.i:                                        ; preds = %for.body.i51, %compute_earliest.exit
  tail call void @sbitmap_vector_ones(%struct.simple_bitmap_def** %call7, i32 %30) #4
  %e.0176.i = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8
  %tobool177.i = icmp eq %struct.edge_def* %e.0176.i, null
  br i1 %tobool177.i, label %for.cond12.preheader.i, label %for.body5.i

for.cond12.preheader.i:                           ; preds = %for.body5.i, %for.end.i
  %35 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp13172.i = icmp sgt i32 %35, 0
  br i1 %cmp13172.i, label %for.body15.i, label %for.end22.i

for.body5.i:                                      ; preds = %for.end.i, %for.body5.i
  %e.0178.i = phi %struct.edge_def* [ %e.0.i, %for.body5.i ], [ %e.0176.i, %for.end.i ]
  %aux6.i = getelementptr inbounds %struct.edge_def* %e.0178.i, i64 0, i32 5
  %36 = load i8** %aux6.i, align 8, !tbaa !16
  %37 = ptrtoint i8* %36 to i64
  %arrayidx7.i = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %37
  %38 = load %struct.simple_bitmap_def** %arrayidx7.i, align 8, !tbaa !9
  %arrayidx9.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %37
  %39 = load %struct.simple_bitmap_def** %arrayidx9.i, align 8, !tbaa !9
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %38, %struct.simple_bitmap_def* %39) #4
  %succ_next.i = getelementptr inbounds %struct.edge_def* %e.0178.i, i64 0, i32 1
  %e.0.i = load %struct.edge_def** %succ_next.i, align 8
  %tobool.i = icmp eq %struct.edge_def* %e.0.i, null
  br i1 %tobool.i, label %for.cond12.preheader.i, label %for.body5.i

for.body15.i:                                     ; preds = %for.cond12.preheader.i, %for.body15.i
  %indvars.iv.i52 = phi i64 [ %indvars.iv.next.i53, %for.body15.i ], [ 0, %for.cond12.preheader.i ]
  %qin.0173.i = phi %struct.basic_block_def** [ %incdec.ptr.i, %for.body15.i ], [ %32, %for.cond12.preheader.i ]
  %40 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data.i = getelementptr inbounds %struct.varray_head_tag* %40, i64 0, i32 4
  %bb17.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx18.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb17.i, i64 0, i64 %indvars.iv.i52
  %41 = load %struct.basic_block_def** %arrayidx18.i, align 8, !tbaa !9
  %incdec.ptr.i = getelementptr inbounds %struct.basic_block_def** %qin.0173.i, i64 1
  store %struct.basic_block_def* %41, %struct.basic_block_def** %qin.0173.i, align 8, !tbaa !9
  %42 = bitcast %struct.basic_block_def* %41 to i8*
  %aux19.i = getelementptr inbounds %struct.basic_block_def* %41, i64 0, i32 10
  store i8* %42, i8** %aux19.i, align 8, !tbaa !17
  %indvars.iv.next.i53 = add nuw nsw i64 %indvars.iv.i52, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i53 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %35
  br i1 %exitcond, label %for.end22.i, label %for.body15.i

for.end22.i:                                      ; preds = %for.body15.i, %for.cond12.preheader.i
  %idxprom23.i = sext i32 %35 to i64
  %arrayidx24.i = getelementptr inbounds %struct.basic_block_def** %32, i64 %idxprom23.i
  %tobool25168.i = icmp eq i32 %35, 0
  br i1 %tobool25168.i, label %while.end.i, label %while.body.i

while.cond.loopexit.i:                            ; preds = %for.inc81.i, %for.end45.i
  %qlen.1.lcssa.i = phi i32 [ %dec.i, %for.end45.i ], [ %qlen.2.i, %for.inc81.i ]
  %qin.2.lcssa.i = phi %struct.basic_block_def** [ %qin.1169.i, %for.end45.i ], [ %qin.3.i, %for.inc81.i ]
  %tobool25.i = icmp eq i32 %qlen.1.lcssa.i, 0
  br i1 %tobool25.i, label %while.cond.while.end_crit_edge.i, label %while.body.i

while.body.i:                                     ; preds = %for.end22.i, %while.cond.loopexit.i
  %qlen.0171.i = phi i32 [ %qlen.1.lcssa.i, %while.cond.loopexit.i ], [ %35, %for.end22.i ]
  %qout.0170.i = phi %struct.basic_block_def** [ %incdec.ptr27..i, %while.cond.loopexit.i ], [ %32, %for.end22.i ]
  %qin.1169.i = phi %struct.basic_block_def** [ %qin.2.lcssa.i, %while.cond.loopexit.i ], [ %32, %for.end22.i ]
  %incdec.ptr27.i = getelementptr inbounds %struct.basic_block_def** %qout.0170.i, i64 1
  %43 = load %struct.basic_block_def** %qout.0170.i, align 8, !tbaa !9
  %aux28.i = getelementptr inbounds %struct.basic_block_def* %43, i64 0, i32 10
  store i8* null, i8** %aux28.i, align 8, !tbaa !17
  %dec.i = add i32 %qlen.0171.i, -1
  %cmp29.i = icmp ult %struct.basic_block_def** %incdec.ptr27.i, %arrayidx24.i
  %incdec.ptr27..i = select i1 %cmp29.i, %struct.basic_block_def** %incdec.ptr27.i, %struct.basic_block_def** %32
  %index.i54 = getelementptr inbounds %struct.basic_block_def* %43, i64 0, i32 11
  %44 = load i32* %index.i54, align 4, !tbaa !14
  %idxprom31.i = sext i32 %44 to i64
  %arrayidx32.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom31.i
  %45 = load %struct.simple_bitmap_def** %arrayidx32.i, align 8, !tbaa !9
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %45) #4
  %pred.i = getelementptr inbounds %struct.basic_block_def* %43, i64 0, i32 4
  %e.1159.i = load %struct.edge_def** %pred.i, align 8
  %cmp34160.i = icmp eq %struct.edge_def* %e.1159.i, null
  br i1 %cmp34160.i, label %for.end45.i, label %for.body36.i

for.body36.i:                                     ; preds = %while.body.i, %for.body36.i
  %e.1161.i = phi %struct.edge_def* [ %e.1.i, %for.body36.i ], [ %e.1159.i, %while.body.i ]
  %46 = load %struct.simple_bitmap_def** %arrayidx32.i, align 8, !tbaa !9
  %aux41.i = getelementptr inbounds %struct.edge_def* %e.1161.i, i64 0, i32 5
  %47 = load i8** %aux41.i, align 8, !tbaa !16
  %48 = ptrtoint i8* %47 to i64
  %arrayidx42.i = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %48
  %49 = load %struct.simple_bitmap_def** %arrayidx42.i, align 8, !tbaa !9
  %call43.i = tail call i32 @sbitmap_a_and_b(%struct.simple_bitmap_def* %46, %struct.simple_bitmap_def* %46, %struct.simple_bitmap_def* %49) #4
  %pred_next.i = getelementptr inbounds %struct.edge_def* %e.1161.i, i64 0, i32 0
  %e.1.i = load %struct.edge_def** %pred_next.i, align 8
  %cmp34.i = icmp eq %struct.edge_def* %e.1.i, null
  br i1 %cmp34.i, label %for.end45.i, label %for.body36.i

for.end45.i:                                      ; preds = %for.body36.i, %while.body.i
  %succ.i = getelementptr inbounds %struct.basic_block_def* %43, i64 0, i32 5
  %e.2162.i = load %struct.edge_def** %succ.i, align 8
  %cmp47163.i = icmp eq %struct.edge_def* %e.2162.i, null
  br i1 %cmp47163.i, label %while.cond.loopexit.i, label %for.body49.i

for.body49.i:                                     ; preds = %for.end45.i, %for.inc81.i
  %e.2166.i = phi %struct.edge_def* [ %e.2.i, %for.inc81.i ], [ %e.2162.i, %for.end45.i ]
  %qlen.1165.i = phi i32 [ %qlen.2.i, %for.inc81.i ], [ %dec.i, %for.end45.i ]
  %qin.2164.i = phi %struct.basic_block_def** [ %qin.3.i, %for.inc81.i ], [ %qin.1169.i, %for.end45.i ]
  %aux50.i = getelementptr inbounds %struct.edge_def* %e.2166.i, i64 0, i32 5
  %50 = load i8** %aux50.i, align 8, !tbaa !16
  %51 = ptrtoint i8* %50 to i64
  %arrayidx51.i = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %51
  %52 = load %struct.simple_bitmap_def** %arrayidx51.i, align 8, !tbaa !9
  %arrayidx53.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %51
  %53 = load %struct.simple_bitmap_def** %arrayidx53.i, align 8, !tbaa !9
  %src.i55 = getelementptr inbounds %struct.edge_def* %e.2166.i, i64 0, i32 2
  %54 = load %struct.basic_block_def** %src.i55, align 8, !tbaa !10
  %index54.i = getelementptr inbounds %struct.basic_block_def* %54, i64 0, i32 11
  %55 = load i32* %index54.i, align 4, !tbaa !14
  %idxprom55.i = sext i32 %55 to i64
  %arrayidx56.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom55.i
  %56 = load %struct.simple_bitmap_def** %arrayidx56.i, align 8, !tbaa !9
  %arrayidx60.i = getelementptr inbounds %struct.simple_bitmap_def** %antloc, i64 %idxprom55.i
  %57 = load %struct.simple_bitmap_def** %arrayidx60.i, align 8, !tbaa !9
  %call61.i = tail call i32 @sbitmap_union_of_diff(%struct.simple_bitmap_def* %52, %struct.simple_bitmap_def* %53, %struct.simple_bitmap_def* %56, %struct.simple_bitmap_def* %57) #4
  %tobool62.i = icmp eq i32 %call61.i, 0
  br i1 %tobool62.i, label %for.inc81.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body49.i
  %dest.i56 = getelementptr inbounds %struct.edge_def* %e.2166.i, i64 0, i32 3
  %58 = load %struct.basic_block_def** %dest.i56, align 8, !tbaa !13
  %cmp63.i = icmp eq %struct.basic_block_def* %58, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp63.i, label %for.inc81.i, label %land.lhs.true65.i

land.lhs.true65.i:                                ; preds = %land.lhs.true.i
  %aux67.i = getelementptr inbounds %struct.basic_block_def* %58, i64 0, i32 10
  %59 = load i8** %aux67.i, align 8, !tbaa !17
  %cmp68.i = icmp eq i8* %59, null
  br i1 %cmp68.i, label %if.then70.i, label %for.inc81.i

if.then70.i:                                      ; preds = %land.lhs.true65.i
  %incdec.ptr72.i = getelementptr inbounds %struct.basic_block_def** %qin.2164.i, i64 1
  store %struct.basic_block_def* %58, %struct.basic_block_def** %qin.2164.i, align 8, !tbaa !9
  %60 = bitcast %struct.edge_def* %e.2166.i to i8*
  %61 = load %struct.basic_block_def** %dest.i56, align 8, !tbaa !13
  %aux74.i = getelementptr inbounds %struct.basic_block_def* %61, i64 0, i32 10
  store i8* %60, i8** %aux74.i, align 8, !tbaa !17
  %inc75.i = add i32 %qlen.1165.i, 1
  %cmp76.i = icmp ult %struct.basic_block_def** %incdec.ptr72.i, %arrayidx24.i
  %incdec.ptr72..i = select i1 %cmp76.i, %struct.basic_block_def** %incdec.ptr72.i, %struct.basic_block_def** %32
  br label %for.inc81.i

for.inc81.i:                                      ; preds = %if.then70.i, %land.lhs.true65.i, %land.lhs.true.i, %for.body49.i
  %qin.3.i = phi %struct.basic_block_def** [ %qin.2164.i, %land.lhs.true65.i ], [ %qin.2164.i, %land.lhs.true.i ], [ %qin.2164.i, %for.body49.i ], [ %incdec.ptr72..i, %if.then70.i ]
  %qlen.2.i = phi i32 [ %qlen.1165.i, %land.lhs.true65.i ], [ %qlen.1165.i, %land.lhs.true.i ], [ %qlen.1165.i, %for.body49.i ], [ %inc75.i, %if.then70.i ]
  %succ_next82.i = getelementptr inbounds %struct.edge_def* %e.2166.i, i64 0, i32 1
  %e.2.i = load %struct.edge_def** %succ_next82.i, align 8
  %cmp47.i = icmp eq %struct.edge_def* %e.2.i, null
  br i1 %cmp47.i, label %while.cond.loopexit.i, label %for.body49.i

while.cond.while.end_crit_edge.i:                 ; preds = %while.cond.loopexit.i
  %.pre.i = load i32* @n_basic_blocks, align 4, !tbaa !7
  %phitmp.i = sext i32 %.pre.i to i64
  br label %while.end.i

while.end.i:                                      ; preds = %while.cond.while.end_crit_edge.i, %for.end22.i
  %62 = phi i64 [ %phitmp.i, %while.cond.while.end_crit_edge.i ], [ 0, %for.end22.i ]
  %arrayidx85.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %62
  %63 = load %struct.simple_bitmap_def** %arrayidx85.i, align 8, !tbaa !9
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %63) #4
  %e.3156.i = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %cmp87157.i = icmp eq %struct.edge_def* %e.3156.i, null
  br i1 %cmp87157.i, label %compute_laterin.exit, label %for.body89.i

for.body89.i:                                     ; preds = %while.end.i, %for.body89.i
  %e.3158.i = phi %struct.edge_def* [ %e.3.i, %for.body89.i ], [ %e.3156.i, %while.end.i ]
  %64 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %idxprom90.i = sext i32 %64 to i64
  %arrayidx91.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom90.i
  %65 = load %struct.simple_bitmap_def** %arrayidx91.i, align 8, !tbaa !9
  %aux94.i = getelementptr inbounds %struct.edge_def* %e.3158.i, i64 0, i32 5
  %66 = load i8** %aux94.i, align 8, !tbaa !16
  %67 = ptrtoint i8* %66 to i64
  %arrayidx95.i = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %67
  %68 = load %struct.simple_bitmap_def** %arrayidx95.i, align 8, !tbaa !9
  %call96.i = tail call i32 @sbitmap_a_and_b(%struct.simple_bitmap_def* %65, %struct.simple_bitmap_def* %65, %struct.simple_bitmap_def* %68) #4
  %pred_next98.i = getelementptr inbounds %struct.edge_def* %e.3158.i, i64 0, i32 0
  %e.3.i = load %struct.edge_def** %pred_next98.i, align 8
  %cmp87.i = icmp eq %struct.edge_def* %e.3.i, null
  br i1 %cmp87.i, label %compute_laterin.exit, label %for.body89.i

compute_laterin.exit:                             ; preds = %for.body89.i, %while.end.i
  tail call void @clear_aux_for_edges() #4
  tail call void @free(i8* %call.i45) #4
  %69 = bitcast %struct.simple_bitmap_def** %call6 to i8*
  tail call void @free(i8* %69)
  %call9 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %0, i32 %n_exprs) #4
  store %struct.simple_bitmap_def** %call9, %struct.simple_bitmap_def*** %insert, align 8, !tbaa !9
  %70 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call10 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %70, i32 %n_exprs) #4
  store %struct.simple_bitmap_def** %call10, %struct.simple_bitmap_def*** %delete, align 8, !tbaa !9
  %71 = load %struct.simple_bitmap_def*** %insert, align 8, !tbaa !9
  %72 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp41.i = icmp sgt i32 %72, 0
  br i1 %cmp41.i, label %for.body.i59, label %for.cond5.preheader.i

for.cond5.preheader.i:                            ; preds = %for.body.i59, %compute_laterin.exit
  %73 = load i32* %num_edges1, align 4, !tbaa !1
  %cmp639.i = icmp sgt i32 %73, 0
  br i1 %cmp639.i, label %for.body7.lr.ph.i, label %compute_insert_delete.exit

for.body7.lr.ph.i:                                ; preds = %for.cond5.preheader.i
  %index_to_edge.i57 = getelementptr inbounds %struct.edge_list* %call, i64 0, i32 2
  br label %for.body7.i

for.body.i59:                                     ; preds = %compute_laterin.exit, %for.body.i59
  %indvars.iv43.i = phi i64 [ %indvars.iv.next44.i, %for.body.i59 ], [ 0, %compute_laterin.exit ]
  %arrayidx.i58 = getelementptr inbounds %struct.simple_bitmap_def** %call10, i64 %indvars.iv43.i
  %74 = load %struct.simple_bitmap_def** %arrayidx.i58, align 8, !tbaa !9
  %arrayidx2.i = getelementptr inbounds %struct.simple_bitmap_def** %antloc, i64 %indvars.iv43.i
  %75 = load %struct.simple_bitmap_def** %arrayidx2.i, align 8, !tbaa !9
  %arrayidx4.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %indvars.iv43.i
  %76 = load %struct.simple_bitmap_def** %arrayidx4.i, align 8, !tbaa !9
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %74, %struct.simple_bitmap_def* %75, %struct.simple_bitmap_def* %76) #4
  %indvars.iv.next44.i = add nuw nsw i64 %indvars.iv43.i, 1
  %77 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %78 = trunc i64 %indvars.iv.next44.i to i32
  %cmp.i = icmp slt i32 %78, %77
  br i1 %cmp.i, label %for.body.i59, label %for.cond5.preheader.i

for.body7.i:                                      ; preds = %for.inc23.i, %for.body7.lr.ph.i
  %indvars.iv.i60 = phi i64 [ 0, %for.body7.lr.ph.i ], [ %indvars.iv.next.i68, %for.inc23.i ]
  %79 = load %struct.edge_def*** %index_to_edge.i57, align 8, !tbaa !8
  %arrayidx9.i61 = getelementptr inbounds %struct.edge_def** %79, i64 %indvars.iv.i60
  %80 = load %struct.edge_def** %arrayidx9.i61, align 8, !tbaa !9
  %dest.i62 = getelementptr inbounds %struct.edge_def* %80, i64 0, i32 3
  %81 = load %struct.basic_block_def** %dest.i62, align 8, !tbaa !13
  %cmp10.i = icmp eq %struct.basic_block_def* %81, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  %arrayidx12.i = getelementptr inbounds %struct.simple_bitmap_def** %71, i64 %indvars.iv.i60
  %82 = load %struct.simple_bitmap_def** %arrayidx12.i, align 8, !tbaa !9
  %arrayidx14.i = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %indvars.iv.i60
  %83 = load %struct.simple_bitmap_def** %arrayidx14.i, align 8, !tbaa !9
  br i1 %cmp10.i, label %if.then.i63, label %if.else.i67

if.then.i63:                                      ; preds = %for.body7.i
  %84 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %idxprom15.i = sext i32 %84 to i64
  %arrayidx16.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom15.i
  %85 = load %struct.simple_bitmap_def** %arrayidx16.i, align 8, !tbaa !9
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %82, %struct.simple_bitmap_def* %83, %struct.simple_bitmap_def* %85) #4
  br label %for.inc23.i

if.else.i67:                                      ; preds = %for.body7.i
  %index.i64 = getelementptr inbounds %struct.basic_block_def* %81, i64 0, i32 11
  %86 = load i32* %index.i64, align 4, !tbaa !14
  %idxprom21.i65 = sext i32 %86 to i64
  %arrayidx22.i66 = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom21.i65
  %87 = load %struct.simple_bitmap_def** %arrayidx22.i66, align 8, !tbaa !9
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %82, %struct.simple_bitmap_def* %83, %struct.simple_bitmap_def* %87) #4
  br label %for.inc23.i

for.inc23.i:                                      ; preds = %if.else.i67, %if.then.i63
  %indvars.iv.next.i68 = add nuw nsw i64 %indvars.iv.i60, 1
  %88 = load i32* %num_edges1, align 4, !tbaa !1
  %89 = trunc i64 %indvars.iv.next.i68 to i32
  %cmp6.i69 = icmp slt i32 %89, %88
  br i1 %cmp6.i69, label %for.body7.i, label %compute_insert_delete.exit

compute_insert_delete.exit:                       ; preds = %for.inc23.i, %for.cond5.preheader.i
  %90 = bitcast %struct.simple_bitmap_def** %call8 to i8*
  tail call void @free(i8* %90)
  %91 = bitcast %struct.simple_bitmap_def** %call7 to i8*
  tail call void @free(i8* %91)
  ret %struct.edge_list* %call
}

declare %struct.edge_list* @create_edge_list() #1

declare %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32, i32) #1

; Function Attrs: nounwind uwtable
define void @compute_available(%struct.simple_bitmap_def** nocapture readonly %avloc, %struct.simple_bitmap_def** nocapture readonly %kill, %struct.simple_bitmap_def** %avout, %struct.simple_bitmap_def** nocapture readonly %avin) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %conv = sext i32 %0 to i64
  %mul = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @xmalloc(i64 %mul) #4
  %1 = bitcast i8* %call to %struct.basic_block_def**
  %2 = load i32* @n_basic_blocks, align 4, !tbaa !7
  tail call void @sbitmap_vector_ones(%struct.simple_bitmap_def** %avout, i32 %2) #4
  %3 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp114 = icmp sgt i32 %3, 0
  br i1 %cmp114, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %qin.0115 = phi %struct.basic_block_def** [ %incdec.ptr, %for.body ], [ %1, %entry ]
  %4 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 4
  %bb2 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb2, i64 0, i64 %indvars.iv
  %5 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !9
  %incdec.ptr = getelementptr inbounds %struct.basic_block_def** %qin.0115, i64 1
  store %struct.basic_block_def* %5, %struct.basic_block_def** %qin.0115, align 8, !tbaa !9
  %6 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data4 = getelementptr inbounds %struct.varray_head_tag* %6, i64 0, i32 4
  %bb5 = bitcast %union.varray_data_tag* %data4 to [1 x %struct.basic_block_def*]*
  %arrayidx6 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb5, i64 0, i64 %indvars.iv
  %7 = load %struct.basic_block_def** %arrayidx6, align 8, !tbaa !9
  %8 = bitcast %struct.basic_block_def* %7 to i8*
  %aux = getelementptr inbounds %struct.basic_block_def* %7, i64 0, i32 10
  store i8* %8, i8** %aux, align 8, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %9, %3
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %idxprom11 = sext i32 %3 to i64
  %arrayidx12 = getelementptr inbounds %struct.basic_block_def** %1, i64 %idxprom11
  %e.0111 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8
  %tobool112 = icmp eq %struct.edge_def* %e.0111, null
  br i1 %tobool112, label %while.cond.outer.outer, label %for.body14

for.body14:                                       ; preds = %for.end, %for.body14
  %e.0113 = phi %struct.edge_def* [ %e.0, %for.body14 ], [ %e.0111, %for.end ]
  %dest = getelementptr inbounds %struct.edge_def* %e.0113, i64 0, i32 3
  %10 = load %struct.basic_block_def** %dest, align 8, !tbaa !13
  %aux15 = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 10
  store i8* bitcast ([2 x %struct.basic_block_def]* @entry_exit_blocks to i8*), i8** %aux15, align 8, !tbaa !17
  %succ_next = getelementptr inbounds %struct.edge_def* %e.0113, i64 0, i32 1
  %e.0 = load %struct.edge_def** %succ_next, align 8
  %tobool = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool, label %while.cond.outer.outer, label %for.body14

while.cond.outer.outer:                           ; preds = %for.inc63, %for.end, %for.body14
  %qin.1.ph.ph = phi %struct.basic_block_def** [ %1, %for.body14 ], [ %1, %for.end ], [ %qin.3, %for.inc63 ]
  %qout.0.ph.ph = phi %struct.basic_block_def** [ %1, %for.body14 ], [ %1, %for.end ], [ %incdec.ptr19., %for.inc63 ]
  %qlen.0.ph.ph = phi i32 [ %3, %for.body14 ], [ %3, %for.end ], [ %qlen.2, %for.inc63 ]
  br label %while.cond

while.cond:                                       ; preds = %if.then42, %while.cond.outer.outer, %if.end31
  %qout.0 = phi %struct.basic_block_def** [ %incdec.ptr19., %if.end31 ], [ %incdec.ptr19., %if.then42 ], [ %qout.0.ph.ph, %while.cond.outer.outer ]
  %qlen.0 = phi i32 [ %dec, %if.end31 ], [ %dec, %if.then42 ], [ %qlen.0.ph.ph, %while.cond.outer.outer ]
  %tobool18 = icmp eq i32 %qlen.0, 0
  br i1 %tobool18, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %incdec.ptr19 = getelementptr inbounds %struct.basic_block_def** %qout.0, i64 1
  %11 = load %struct.basic_block_def** %qout.0, align 8, !tbaa !9
  %index = getelementptr inbounds %struct.basic_block_def* %11, i64 0, i32 11
  %12 = load i32* %index, align 4, !tbaa !14
  %dec = add i32 %qlen.0, -1
  %cmp20 = icmp ult %struct.basic_block_def** %incdec.ptr19, %arrayidx12
  %incdec.ptr19. = select i1 %cmp20, %struct.basic_block_def** %incdec.ptr19, %struct.basic_block_def** %1
  %aux22 = getelementptr inbounds %struct.basic_block_def* %11, i64 0, i32 10
  %13 = load i8** %aux22, align 8, !tbaa !17
  %cmp23 = icmp eq i8* %13, bitcast ([2 x %struct.basic_block_def]* @entry_exit_blocks to i8*)
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %while.body
  %idxprom26 = sext i32 %12 to i64
  %arrayidx27 = getelementptr inbounds %struct.simple_bitmap_def** %avin, i64 %idxprom26
  %14 = load %struct.simple_bitmap_def** %arrayidx27, align 8, !tbaa !9
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %14) #4
  br label %if.end31

if.else:                                          ; preds = %while.body
  store i8* null, i8** %aux22, align 8, !tbaa !17
  %idxprom29 = sext i32 %12 to i64
  %arrayidx30 = getelementptr inbounds %struct.simple_bitmap_def** %avin, i64 %idxprom29
  %15 = load %struct.simple_bitmap_def** %arrayidx30, align 8, !tbaa !9
  tail call void @sbitmap_intersection_of_preds(%struct.simple_bitmap_def* %15, %struct.simple_bitmap_def** %avout, i32 %12) #4
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then25
  %idxprom32 = sext i32 %12 to i64
  %arrayidx33 = getelementptr inbounds %struct.simple_bitmap_def** %avout, i64 %idxprom32
  %16 = load %struct.simple_bitmap_def** %arrayidx33, align 8, !tbaa !9
  %arrayidx35 = getelementptr inbounds %struct.simple_bitmap_def** %avloc, i64 %idxprom32
  %17 = load %struct.simple_bitmap_def** %arrayidx35, align 8, !tbaa !9
  %arrayidx37 = getelementptr inbounds %struct.simple_bitmap_def** %avin, i64 %idxprom32
  %18 = load %struct.simple_bitmap_def** %arrayidx37, align 8, !tbaa !9
  %arrayidx39 = getelementptr inbounds %struct.simple_bitmap_def** %kill, i64 %idxprom32
  %19 = load %struct.simple_bitmap_def** %arrayidx39, align 8, !tbaa !9
  %call40 = tail call i32 @sbitmap_union_of_diff(%struct.simple_bitmap_def* %16, %struct.simple_bitmap_def* %17, %struct.simple_bitmap_def* %18, %struct.simple_bitmap_def* %19) #4
  %tobool41 = icmp eq i32 %call40, 0
  br i1 %tobool41, label %while.cond, label %if.then42

if.then42:                                        ; preds = %if.end31
  %succ = getelementptr inbounds %struct.basic_block_def* %11, i64 0, i32 5
  %e.1105 = load %struct.edge_def** %succ, align 8
  %tobool44106 = icmp eq %struct.edge_def* %e.1105, null
  br i1 %tobool44106, label %while.cond, label %for.body45

for.body45:                                       ; preds = %if.then42, %for.inc63
  %e.1109 = phi %struct.edge_def* [ %e.1, %for.inc63 ], [ %e.1105, %if.then42 ]
  %qlen.1108 = phi i32 [ %qlen.2, %for.inc63 ], [ %dec, %if.then42 ]
  %qin.2107 = phi %struct.basic_block_def** [ %qin.3, %for.inc63 ], [ %qin.1.ph.ph, %if.then42 ]
  %dest46 = getelementptr inbounds %struct.edge_def* %e.1109, i64 0, i32 3
  %20 = load %struct.basic_block_def** %dest46, align 8, !tbaa !13
  %aux47 = getelementptr inbounds %struct.basic_block_def* %20, i64 0, i32 10
  %21 = load i8** %aux47, align 8, !tbaa !17
  %tobool48 = icmp ne i8* %21, null
  %cmp50 = icmp eq %struct.basic_block_def* %20, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  %or.cond = or i1 %tobool48, %cmp50
  br i1 %or.cond, label %for.inc63, label %if.then52

if.then52:                                        ; preds = %for.body45
  %incdec.ptr54 = getelementptr inbounds %struct.basic_block_def** %qin.2107, i64 1
  store %struct.basic_block_def* %20, %struct.basic_block_def** %qin.2107, align 8, !tbaa !9
  %22 = bitcast %struct.edge_def* %e.1109 to i8*
  %23 = load %struct.basic_block_def** %dest46, align 8, !tbaa !13
  %aux56 = getelementptr inbounds %struct.basic_block_def* %23, i64 0, i32 10
  store i8* %22, i8** %aux56, align 8, !tbaa !17
  %inc57 = add i32 %qlen.1108, 1
  %cmp58 = icmp ult %struct.basic_block_def** %incdec.ptr54, %arrayidx12
  %incdec.ptr54. = select i1 %cmp58, %struct.basic_block_def** %incdec.ptr54, %struct.basic_block_def** %1
  br label %for.inc63

for.inc63:                                        ; preds = %if.then52, %for.body45
  %qin.3 = phi %struct.basic_block_def** [ %qin.2107, %for.body45 ], [ %incdec.ptr54., %if.then52 ]
  %qlen.2 = phi i32 [ %qlen.1108, %for.body45 ], [ %inc57, %if.then52 ]
  %succ_next64 = getelementptr inbounds %struct.edge_def* %e.1109, i64 0, i32 1
  %e.1 = load %struct.edge_def** %succ_next64, align 8
  %tobool44 = icmp eq %struct.edge_def* %e.1, null
  br i1 %tobool44, label %while.cond.outer.outer, label %for.body45

while.end:                                        ; preds = %while.cond
  tail call void @clear_aux_for_edges() #4
  tail call void @clear_aux_for_blocks() #4
  tail call void @free(i8* %call)
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_antinout_edge(%struct.simple_bitmap_def** nocapture readonly %antloc, %struct.simple_bitmap_def** nocapture readonly %transp, %struct.simple_bitmap_def** %antin, %struct.simple_bitmap_def** nocapture readonly %antout) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %conv = sext i32 %0 to i64
  %mul = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @xmalloc(i64 %mul) #4
  %1 = bitcast i8* %call to %struct.basic_block_def**
  %2 = load i32* @n_basic_blocks, align 4, !tbaa !7
  tail call void @sbitmap_vector_ones(%struct.simple_bitmap_def** %antin, i32 %2) #4
  %3 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp114 = icmp sgt i32 %3, 0
  %4 = sext i32 %3 to i64
  br i1 %cmp114, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %4, %entry ]
  %qin.0115 = phi %struct.basic_block_def** [ %incdec.ptr, %for.body ], [ %1, %entry ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %5 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 4
  %bb2 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb2, i64 0, i64 %indvars.iv.next
  %6 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !9
  %incdec.ptr = getelementptr inbounds %struct.basic_block_def** %qin.0115, i64 1
  store %struct.basic_block_def* %6, %struct.basic_block_def** %qin.0115, align 8, !tbaa !9
  %7 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data4 = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 4
  %bb5 = bitcast %union.varray_data_tag* %data4 to [1 x %struct.basic_block_def*]*
  %arrayidx6 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb5, i64 0, i64 %indvars.iv.next
  %8 = load %struct.basic_block_def** %arrayidx6, align 8, !tbaa !9
  %9 = bitcast %struct.basic_block_def* %8 to i8*
  %aux = getelementptr inbounds %struct.basic_block_def* %8, i64 0, i32 10
  store i8* %9, i8** %aux, align 8, !tbaa !17
  %10 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp sgt i32 %10, 0
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %arrayidx12 = getelementptr inbounds %struct.basic_block_def** %1, i64 %4
  %e.0110 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %tobool111 = icmp eq %struct.edge_def* %e.0110, null
  br i1 %tobool111, label %while.cond.outer.outer, label %for.body14

for.body14:                                       ; preds = %for.end, %for.body14
  %e.0112 = phi %struct.edge_def* [ %e.0, %for.body14 ], [ %e.0110, %for.end ]
  %src = getelementptr inbounds %struct.edge_def* %e.0112, i64 0, i32 2
  %11 = load %struct.basic_block_def** %src, align 8, !tbaa !10
  %aux15 = getelementptr inbounds %struct.basic_block_def* %11, i64 0, i32 10
  store i8* bitcast (%struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1) to i8*), i8** %aux15, align 8, !tbaa !17
  %pred_next = getelementptr inbounds %struct.edge_def* %e.0112, i64 0, i32 0
  %e.0 = load %struct.edge_def** %pred_next, align 8
  %tobool = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool, label %while.cond.outer.outer, label %for.body14

while.cond.outer.outer:                           ; preds = %for.inc63, %for.end, %for.body14
  %qin.1.ph.ph = phi %struct.basic_block_def** [ %1, %for.body14 ], [ %1, %for.end ], [ %qin.3, %for.inc63 ]
  %qout.0.ph.ph = phi %struct.basic_block_def** [ %1, %for.body14 ], [ %1, %for.end ], [ %incdec.ptr19., %for.inc63 ]
  %qlen.0.ph.ph = phi i32 [ %3, %for.body14 ], [ %3, %for.end ], [ %qlen.2, %for.inc63 ]
  br label %while.cond

while.cond:                                       ; preds = %if.then43, %while.cond.outer.outer, %if.end32
  %qout.0 = phi %struct.basic_block_def** [ %incdec.ptr19., %if.end32 ], [ %incdec.ptr19., %if.then43 ], [ %qout.0.ph.ph, %while.cond.outer.outer ]
  %qlen.0 = phi i32 [ %dec20, %if.end32 ], [ %dec20, %if.then43 ], [ %qlen.0.ph.ph, %while.cond.outer.outer ]
  %tobool18 = icmp eq i32 %qlen.0, 0
  br i1 %tobool18, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %incdec.ptr19 = getelementptr inbounds %struct.basic_block_def** %qout.0, i64 1
  %12 = load %struct.basic_block_def** %qout.0, align 8, !tbaa !9
  %index = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 11
  %13 = load i32* %index, align 4, !tbaa !14
  %dec20 = add i32 %qlen.0, -1
  %cmp21 = icmp ult %struct.basic_block_def** %incdec.ptr19, %arrayidx12
  %incdec.ptr19. = select i1 %cmp21, %struct.basic_block_def** %incdec.ptr19, %struct.basic_block_def** %1
  %aux23 = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 10
  %14 = load i8** %aux23, align 8, !tbaa !17
  %cmp24 = icmp eq i8* %14, bitcast (%struct.basic_block_def* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1) to i8*)
  br i1 %cmp24, label %if.then26, label %if.else

if.then26:                                        ; preds = %while.body
  %idxprom27 = sext i32 %13 to i64
  %arrayidx28 = getelementptr inbounds %struct.simple_bitmap_def** %antout, i64 %idxprom27
  %15 = load %struct.simple_bitmap_def** %arrayidx28, align 8, !tbaa !9
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %15) #4
  br label %if.end32

if.else:                                          ; preds = %while.body
  store i8* null, i8** %aux23, align 8, !tbaa !17
  %idxprom30 = sext i32 %13 to i64
  %arrayidx31 = getelementptr inbounds %struct.simple_bitmap_def** %antout, i64 %idxprom30
  %16 = load %struct.simple_bitmap_def** %arrayidx31, align 8, !tbaa !9
  tail call void @sbitmap_intersection_of_succs(%struct.simple_bitmap_def* %16, %struct.simple_bitmap_def** %antin, i32 %13) #4
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then26
  %idxprom33 = sext i32 %13 to i64
  %arrayidx34 = getelementptr inbounds %struct.simple_bitmap_def** %antin, i64 %idxprom33
  %17 = load %struct.simple_bitmap_def** %arrayidx34, align 8, !tbaa !9
  %arrayidx36 = getelementptr inbounds %struct.simple_bitmap_def** %antloc, i64 %idxprom33
  %18 = load %struct.simple_bitmap_def** %arrayidx36, align 8, !tbaa !9
  %arrayidx38 = getelementptr inbounds %struct.simple_bitmap_def** %transp, i64 %idxprom33
  %19 = load %struct.simple_bitmap_def** %arrayidx38, align 8, !tbaa !9
  %arrayidx40 = getelementptr inbounds %struct.simple_bitmap_def** %antout, i64 %idxprom33
  %20 = load %struct.simple_bitmap_def** %arrayidx40, align 8, !tbaa !9
  %call41 = tail call i32 @sbitmap_a_or_b_and_c(%struct.simple_bitmap_def* %17, %struct.simple_bitmap_def* %18, %struct.simple_bitmap_def* %19, %struct.simple_bitmap_def* %20) #4
  %tobool42 = icmp eq i32 %call41, 0
  br i1 %tobool42, label %while.cond, label %if.then43

if.then43:                                        ; preds = %if.end32
  %pred = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 4
  %e.1104 = load %struct.edge_def** %pred, align 8
  %tobool45105 = icmp eq %struct.edge_def* %e.1104, null
  br i1 %tobool45105, label %while.cond, label %for.body46

for.body46:                                       ; preds = %if.then43, %for.inc63
  %e.1108 = phi %struct.edge_def* [ %e.1, %for.inc63 ], [ %e.1104, %if.then43 ]
  %qlen.1107 = phi i32 [ %qlen.2, %for.inc63 ], [ %dec20, %if.then43 ]
  %qin.2106 = phi %struct.basic_block_def** [ %qin.3, %for.inc63 ], [ %qin.1.ph.ph, %if.then43 ]
  %src47 = getelementptr inbounds %struct.edge_def* %e.1108, i64 0, i32 2
  %21 = load %struct.basic_block_def** %src47, align 8, !tbaa !10
  %aux48 = getelementptr inbounds %struct.basic_block_def* %21, i64 0, i32 10
  %22 = load i8** %aux48, align 8, !tbaa !17
  %tobool49 = icmp ne i8* %22, null
  %cmp51 = icmp eq %struct.basic_block_def* %21, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  %or.cond = or i1 %tobool49, %cmp51
  br i1 %or.cond, label %for.inc63, label %if.then53

if.then53:                                        ; preds = %for.body46
  %incdec.ptr55 = getelementptr inbounds %struct.basic_block_def** %qin.2106, i64 1
  store %struct.basic_block_def* %21, %struct.basic_block_def** %qin.2106, align 8, !tbaa !9
  %23 = bitcast %struct.edge_def* %e.1108 to i8*
  %24 = load %struct.basic_block_def** %src47, align 8, !tbaa !10
  %aux57 = getelementptr inbounds %struct.basic_block_def* %24, i64 0, i32 10
  store i8* %23, i8** %aux57, align 8, !tbaa !17
  %inc = add i32 %qlen.1107, 1
  %cmp58 = icmp ult %struct.basic_block_def** %incdec.ptr55, %arrayidx12
  %incdec.ptr55. = select i1 %cmp58, %struct.basic_block_def** %incdec.ptr55, %struct.basic_block_def** %1
  br label %for.inc63

for.inc63:                                        ; preds = %if.then53, %for.body46
  %qin.3 = phi %struct.basic_block_def** [ %qin.2106, %for.body46 ], [ %incdec.ptr55., %if.then53 ]
  %qlen.2 = phi i32 [ %qlen.1107, %for.body46 ], [ %inc, %if.then53 ]
  %pred_next64 = getelementptr inbounds %struct.edge_def* %e.1108, i64 0, i32 0
  %e.1 = load %struct.edge_def** %pred_next64, align 8
  %tobool45 = icmp eq %struct.edge_def* %e.1, null
  br i1 %tobool45, label %while.cond.outer.outer, label %for.body46

while.end:                                        ; preds = %while.cond
  tail call void @clear_aux_for_edges() #4
  tail call void @clear_aux_for_blocks() #4
  tail call void @free(i8* %call)
  ret void
}

declare noalias i8* @xmalloc(i64) #1

declare void @sbitmap_vector_ones(%struct.simple_bitmap_def**, i32) #1

declare void @sbitmap_zero(%struct.simple_bitmap_def*) #1

declare void @sbitmap_intersection_of_preds(%struct.simple_bitmap_def*, %struct.simple_bitmap_def**, i32) #1

declare i32 @sbitmap_union_of_diff(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #1

declare void @clear_aux_for_edges() #1

declare void @clear_aux_for_blocks() #1

; Function Attrs: nounwind uwtable
define %struct.edge_list* @pre_edge_rev_lcm(%struct._IO_FILE* nocapture readnone %file, i32 %n_exprs, %struct.simple_bitmap_def** nocapture readonly %transp, %struct.simple_bitmap_def** nocapture readonly %st_avloc, %struct.simple_bitmap_def** nocapture readonly %st_antloc, %struct.simple_bitmap_def** nocapture readonly %kill, %struct.simple_bitmap_def*** nocapture %insert, %struct.simple_bitmap_def*** nocapture %delete) #0 {
entry:
  %call = tail call %struct.edge_list* @create_edge_list() #4
  %num_edges1 = getelementptr inbounds %struct.edge_list* %call, i64 0, i32 1
  %0 = load i32* %num_edges1, align 4, !tbaa !1
  %1 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call2 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %1, i32 %n_exprs) #4
  %2 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call3 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %2, i32 %n_exprs) #4
  %3 = load i32* @n_basic_blocks, align 4, !tbaa !7
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call2, i32 %3) #4
  %4 = load i32* @n_basic_blocks, align 4, !tbaa !7
  tail call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %call3, i32 %4) #4
  tail call fastcc void @compute_antinout_edge(%struct.simple_bitmap_def** %st_antloc, %struct.simple_bitmap_def** %transp, %struct.simple_bitmap_def** %call2, %struct.simple_bitmap_def** %call3)
  %5 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call4 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %5, i32 %n_exprs) #4
  %6 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call5 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %6, i32 %n_exprs) #4
  tail call void @compute_available(%struct.simple_bitmap_def** %st_avloc, %struct.simple_bitmap_def** %kill, %struct.simple_bitmap_def** %call4, %struct.simple_bitmap_def** %call5)
  %call6 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %0, i32 %n_exprs) #4
  %7 = load i32* %num_edges1, align 4, !tbaa !1
  %call.i = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %n_exprs) #4
  %call2.i = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %n_exprs) #4
  %cmp53.i = icmp sgt i32 %7, 0
  br i1 %cmp53.i, label %for.body.lr.ph.i, label %compute_farthest.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %index_to_edge.i = getelementptr inbounds %struct.edge_list* %call, i64 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %8 = load %struct.edge_def*** %index_to_edge.i, align 8, !tbaa !8
  %arrayidx.i = getelementptr inbounds %struct.edge_def** %8, i64 %indvars.iv.i
  %9 = load %struct.edge_def** %arrayidx.i, align 8, !tbaa !9
  %src.i = getelementptr inbounds %struct.edge_def* %9, i64 0, i32 2
  %10 = load %struct.basic_block_def** %src.i, align 8, !tbaa !10
  %dest.i = getelementptr inbounds %struct.edge_def* %9, i64 0, i32 3
  %11 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !13
  %cmp6.i = icmp eq %struct.basic_block_def* %11, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp6.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.body.i
  %arrayidx8.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %indvars.iv.i
  %12 = load %struct.simple_bitmap_def** %arrayidx8.i, align 8, !tbaa !9
  %index.i = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 11
  %13 = load i32* %index.i, align 4, !tbaa !14
  %idxprom9.i = sext i32 %13 to i64
  %arrayidx10.i = getelementptr inbounds %struct.simple_bitmap_def** %call4, i64 %idxprom9.i
  %14 = load %struct.simple_bitmap_def** %arrayidx10.i, align 8, !tbaa !9
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %12, %struct.simple_bitmap_def* %14) #4
  br label %for.inc.i

if.else.i:                                        ; preds = %for.body.i
  %cmp11.i = icmp eq %struct.basic_block_def* %10, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp11.i, label %if.then12.i, label %if.else15.i

if.then12.i:                                      ; preds = %if.else.i
  %arrayidx14.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %indvars.iv.i
  %15 = load %struct.simple_bitmap_def** %arrayidx14.i, align 8, !tbaa !9
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %15) #4
  br label %for.inc.i

if.else15.i:                                      ; preds = %if.else.i
  %index16.i = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 11
  %16 = load i32* %index16.i, align 4, !tbaa !14
  %idxprom17.i = sext i32 %16 to i64
  %arrayidx18.i = getelementptr inbounds %struct.simple_bitmap_def** %call4, i64 %idxprom17.i
  %17 = load %struct.simple_bitmap_def** %arrayidx18.i, align 8, !tbaa !9
  %index19.i = getelementptr inbounds %struct.basic_block_def* %11, i64 0, i32 11
  %18 = load i32* %index19.i, align 4, !tbaa !14
  %idxprom20.i = sext i32 %18 to i64
  %arrayidx21.i = getelementptr inbounds %struct.simple_bitmap_def** %call2, i64 %idxprom20.i
  %19 = load %struct.simple_bitmap_def** %arrayidx21.i, align 8, !tbaa !9
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %call.i, %struct.simple_bitmap_def* %17, %struct.simple_bitmap_def* %19) #4
  %20 = load i32* %index19.i, align 4, !tbaa !14
  %idxprom23.i = sext i32 %20 to i64
  %arrayidx24.i = getelementptr inbounds %struct.simple_bitmap_def** %call5, i64 %idxprom23.i
  %21 = load %struct.simple_bitmap_def** %arrayidx24.i, align 8, !tbaa !9
  tail call void @sbitmap_not(%struct.simple_bitmap_def* %call2.i, %struct.simple_bitmap_def* %21) #4
  %arrayidx26.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %indvars.iv.i
  %22 = load %struct.simple_bitmap_def** %arrayidx26.i, align 8, !tbaa !9
  %23 = load i32* %index19.i, align 4, !tbaa !14
  %idxprom28.i = sext i32 %23 to i64
  %arrayidx29.i = getelementptr inbounds %struct.simple_bitmap_def** %kill, i64 %idxprom28.i
  %24 = load %struct.simple_bitmap_def** %arrayidx29.i, align 8, !tbaa !9
  %call30.i = tail call i32 @sbitmap_a_and_b_or_c(%struct.simple_bitmap_def* %22, %struct.simple_bitmap_def* %call.i, %struct.simple_bitmap_def* %24, %struct.simple_bitmap_def* %call2.i) #4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else15.i, %if.then12.i, %if.then.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv77 = trunc i64 %indvars.iv.next.i to i32
  %exitcond78 = icmp eq i32 %lftr.wideiv77, %7
  br i1 %exitcond78, label %compute_farthest.exit, label %for.body.i

compute_farthest.exit:                            ; preds = %for.inc.i, %entry
  %25 = bitcast %struct.simple_bitmap_def* %call2.i to i8*
  tail call void @free(i8* %25) #4
  %26 = bitcast %struct.simple_bitmap_def* %call.i to i8*
  tail call void @free(i8* %26) #4
  %27 = bitcast %struct.simple_bitmap_def** %call2 to i8*
  tail call void @free(i8* %27)
  %28 = bitcast %struct.simple_bitmap_def** %call3 to i8*
  tail call void @free(i8* %28)
  %29 = bitcast %struct.simple_bitmap_def** %call5 to i8*
  tail call void @free(i8* %29)
  %30 = bitcast %struct.simple_bitmap_def** %call4 to i8*
  tail call void @free(i8* %30)
  %call7 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %0, i32 %n_exprs) #4
  %31 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %add = add nsw i32 %31, 1
  %call8 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %add, i32 %n_exprs) #4
  %32 = load i32* %num_edges1, align 4, !tbaa !1
  %33 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %add.i = add nsw i32 %33, 1
  %conv.i = sext i32 %add.i to i64
  %mul.i = shl nsw i64 %conv.i, 3
  %call.i47 = tail call noalias i8* @xmalloc(i64 %mul.i) #4
  %34 = bitcast i8* %call.i47 to %struct.basic_block_def**
  %cmp160.i = icmp sgt i32 %32, 0
  br i1 %cmp160.i, label %for.body.lr.ph.i49, label %for.end.i

for.body.lr.ph.i49:                               ; preds = %compute_farthest.exit
  %index_to_edge.i48 = getelementptr inbounds %struct.edge_list* %call, i64 0, i32 2
  %.pre165.i = load %struct.edge_def*** %index_to_edge.i48, align 8, !tbaa !8
  br label %for.body.i53

for.body.i53:                                     ; preds = %for.body.i53, %for.body.lr.ph.i49
  %indvars.iv163.i = phi i64 [ 0, %for.body.lr.ph.i49 ], [ %indvars.iv.next164.i, %for.body.i53 ]
  %35 = inttoptr i64 %indvars.iv163.i to i8*
  %arrayidx.i50 = getelementptr inbounds %struct.edge_def** %.pre165.i, i64 %indvars.iv163.i
  %36 = load %struct.edge_def** %arrayidx.i50, align 8, !tbaa !9
  %aux.i = getelementptr inbounds %struct.edge_def* %36, i64 0, i32 5
  store i8* %35, i8** %aux.i, align 8, !tbaa !16
  %indvars.iv.next164.i = add nuw nsw i64 %indvars.iv163.i, 1
  %lftr.wideiv75 = trunc i64 %indvars.iv.next164.i to i32
  %exitcond76 = icmp eq i32 %lftr.wideiv75, %32
  br i1 %exitcond76, label %for.end.i, label %for.body.i53

for.end.i:                                        ; preds = %for.body.i53, %compute_farthest.exit
  tail call void @sbitmap_vector_ones(%struct.simple_bitmap_def** %call7, i32 %32) #4
  %e.0157.i = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %tobool158.i = icmp eq %struct.edge_def* %e.0157.i, null
  br i1 %tobool158.i, label %for.cond12.preheader.i, label %for.body5.i

for.cond12.preheader.i:                           ; preds = %for.body5.i, %for.end.i
  %37 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp13153.i = icmp sgt i32 %37, 0
  br i1 %cmp13153.i, label %for.body15.lr.ph.i, label %while.end.i

for.body15.lr.ph.i:                               ; preds = %for.cond12.preheader.i
  %38 = icmp sgt i32 %37, 1
  %.op.i = add i32 %37, -1
  %39 = zext i32 %.op.i to i64
  %.op166.i = shl nuw nsw i64 %39, 3
  %.op166.op.i = add i64 %.op166.i, 8
  %40 = select i1 %38, i64 %.op166.op.i, i64 8
  br label %for.body15.i

for.body5.i:                                      ; preds = %for.end.i, %for.body5.i
  %e.0159.i = phi %struct.edge_def* [ %e.0.i, %for.body5.i ], [ %e.0157.i, %for.end.i ]
  %aux6.i = getelementptr inbounds %struct.edge_def* %e.0159.i, i64 0, i32 5
  %41 = load i8** %aux6.i, align 8, !tbaa !16
  %42 = ptrtoint i8* %41 to i64
  %arrayidx7.i = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %42
  %43 = load %struct.simple_bitmap_def** %arrayidx7.i, align 8, !tbaa !9
  %arrayidx9.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %42
  %44 = load %struct.simple_bitmap_def** %arrayidx9.i, align 8, !tbaa !9
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %43, %struct.simple_bitmap_def* %44) #4
  %pred_next.i = getelementptr inbounds %struct.edge_def* %e.0159.i, i64 0, i32 0
  %e.0.i = load %struct.edge_def** %pred_next.i, align 8
  %tobool.i = icmp eq %struct.edge_def* %e.0.i, null
  br i1 %tobool.i, label %for.cond12.preheader.i, label %for.body5.i

while.cond.preheader.i:                           ; preds = %for.body15.i
  %scevgep.i = getelementptr i8* %call.i47, i64 %40
  %cmp23150.i = icmp eq i8* %scevgep.i, %call.i47
  br i1 %cmp23150.i, label %while.end.i, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %while.cond.preheader.i
  %scevgep162.i = bitcast i8* %scevgep.i to %struct.basic_block_def**
  br label %while.body.i

for.body15.i:                                     ; preds = %for.body15.i, %for.body15.lr.ph.i
  %indvars.iv.i54 = phi i64 [ 0, %for.body15.lr.ph.i ], [ %indvars.iv.next.i56, %for.body15.i ]
  %tos.0154.i = phi %struct.basic_block_def** [ %34, %for.body15.lr.ph.i ], [ %incdec.ptr.i, %for.body15.i ]
  %45 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data.i = getelementptr inbounds %struct.varray_head_tag* %45, i64 0, i32 4
  %bb17.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx18.i55 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb17.i, i64 0, i64 %indvars.iv.i54
  %46 = load %struct.basic_block_def** %arrayidx18.i55, align 8, !tbaa !9
  %incdec.ptr.i = getelementptr inbounds %struct.basic_block_def** %tos.0154.i, i64 1
  store %struct.basic_block_def* %46, %struct.basic_block_def** %tos.0154.i, align 8, !tbaa !9
  %47 = bitcast %struct.basic_block_def* %46 to i8*
  %aux19.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 10
  store i8* %47, i8** %aux19.i, align 8, !tbaa !17
  %indvars.iv.next.i56 = add nuw nsw i64 %indvars.iv.i54, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i56 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %37
  br i1 %exitcond, label %while.cond.preheader.i, label %for.body15.i

while.cond.loopexit.i:                            ; preds = %for.inc71.i, %for.end42.i
  %tos.2.lcssa.i = phi %struct.basic_block_def** [ %incdec.ptr26.i, %for.end42.i ], [ %tos.3.i, %for.inc71.i ]
  %cmp23.i = icmp eq %struct.basic_block_def** %tos.2.lcssa.i, %34
  br i1 %cmp23.i, label %while.cond.while.end_crit_edge.i, label %while.body.i

while.body.i:                                     ; preds = %while.body.i.preheader, %while.cond.loopexit.i
  %tos.1151.i = phi %struct.basic_block_def** [ %tos.2.lcssa.i, %while.cond.loopexit.i ], [ %scevgep162.i, %while.body.i.preheader ]
  %incdec.ptr26.i = getelementptr inbounds %struct.basic_block_def** %tos.1151.i, i64 -1
  %48 = load %struct.basic_block_def** %incdec.ptr26.i, align 8, !tbaa !9
  %aux27.i = getelementptr inbounds %struct.basic_block_def* %48, i64 0, i32 10
  store i8* null, i8** %aux27.i, align 8, !tbaa !17
  %index.i57 = getelementptr inbounds %struct.basic_block_def* %48, i64 0, i32 11
  %49 = load i32* %index.i57, align 4, !tbaa !14
  %idxprom28.i58 = sext i32 %49 to i64
  %arrayidx29.i59 = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom28.i58
  %50 = load %struct.simple_bitmap_def** %arrayidx29.i59, align 8, !tbaa !9
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %50) #4
  %succ.i = getelementptr inbounds %struct.basic_block_def* %48, i64 0, i32 5
  %e.1143.i = load %struct.edge_def** %succ.i, align 8
  %cmp31144.i = icmp eq %struct.edge_def* %e.1143.i, null
  br i1 %cmp31144.i, label %for.end42.i, label %for.body33.i

for.body33.i:                                     ; preds = %while.body.i, %for.body33.i
  %e.1145.i = phi %struct.edge_def* [ %e.1.i, %for.body33.i ], [ %e.1143.i, %while.body.i ]
  %51 = load %struct.simple_bitmap_def** %arrayidx29.i59, align 8, !tbaa !9
  %aux38.i = getelementptr inbounds %struct.edge_def* %e.1145.i, i64 0, i32 5
  %52 = load i8** %aux38.i, align 8, !tbaa !16
  %53 = ptrtoint i8* %52 to i64
  %arrayidx39.i = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %53
  %54 = load %struct.simple_bitmap_def** %arrayidx39.i, align 8, !tbaa !9
  %call40.i = tail call i32 @sbitmap_a_and_b(%struct.simple_bitmap_def* %51, %struct.simple_bitmap_def* %51, %struct.simple_bitmap_def* %54) #4
  %succ_next.i = getelementptr inbounds %struct.edge_def* %e.1145.i, i64 0, i32 1
  %e.1.i = load %struct.edge_def** %succ_next.i, align 8
  %cmp31.i = icmp eq %struct.edge_def* %e.1.i, null
  br i1 %cmp31.i, label %for.end42.i, label %for.body33.i

for.end42.i:                                      ; preds = %for.body33.i, %while.body.i
  %pred.i = getelementptr inbounds %struct.basic_block_def* %48, i64 0, i32 4
  %e.2146.i = load %struct.edge_def** %pred.i, align 8
  %cmp44147.i = icmp eq %struct.edge_def* %e.2146.i, null
  br i1 %cmp44147.i, label %while.cond.loopexit.i, label %for.body46.i

for.body46.i:                                     ; preds = %for.end42.i, %for.inc71.i
  %e.2149.i = phi %struct.edge_def* [ %e.2.i, %for.inc71.i ], [ %e.2146.i, %for.end42.i ]
  %tos.2148.i = phi %struct.basic_block_def** [ %tos.3.i, %for.inc71.i ], [ %incdec.ptr26.i, %for.end42.i ]
  %aux47.i = getelementptr inbounds %struct.edge_def* %e.2149.i, i64 0, i32 5
  %55 = load i8** %aux47.i, align 8, !tbaa !16
  %56 = ptrtoint i8* %55 to i64
  %arrayidx48.i = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %56
  %57 = load %struct.simple_bitmap_def** %arrayidx48.i, align 8, !tbaa !9
  %arrayidx50.i = getelementptr inbounds %struct.simple_bitmap_def** %call6, i64 %56
  %58 = load %struct.simple_bitmap_def** %arrayidx50.i, align 8, !tbaa !9
  %dest.i60 = getelementptr inbounds %struct.edge_def* %e.2149.i, i64 0, i32 3
  %59 = load %struct.basic_block_def** %dest.i60, align 8, !tbaa !13
  %index51.i = getelementptr inbounds %struct.basic_block_def* %59, i64 0, i32 11
  %60 = load i32* %index51.i, align 4, !tbaa !14
  %idxprom52.i = sext i32 %60 to i64
  %arrayidx53.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom52.i
  %61 = load %struct.simple_bitmap_def** %arrayidx53.i, align 8, !tbaa !9
  %arrayidx57.i = getelementptr inbounds %struct.simple_bitmap_def** %st_avloc, i64 %idxprom52.i
  %62 = load %struct.simple_bitmap_def** %arrayidx57.i, align 8, !tbaa !9
  %call58.i = tail call i32 @sbitmap_union_of_diff(%struct.simple_bitmap_def* %57, %struct.simple_bitmap_def* %58, %struct.simple_bitmap_def* %61, %struct.simple_bitmap_def* %62) #4
  %tobool59.i = icmp eq i32 %call58.i, 0
  br i1 %tobool59.i, label %for.inc71.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body46.i
  %src.i61 = getelementptr inbounds %struct.edge_def* %e.2149.i, i64 0, i32 2
  %63 = load %struct.basic_block_def** %src.i61, align 8, !tbaa !10
  %cmp60.i = icmp eq %struct.basic_block_def* %63, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp60.i, label %for.inc71.i, label %land.lhs.true62.i

land.lhs.true62.i:                                ; preds = %land.lhs.true.i
  %aux64.i = getelementptr inbounds %struct.basic_block_def* %63, i64 0, i32 10
  %64 = load i8** %aux64.i, align 8, !tbaa !17
  %cmp65.i = icmp eq i8* %64, null
  br i1 %cmp65.i, label %if.then.i62, label %for.inc71.i

if.then.i62:                                      ; preds = %land.lhs.true62.i
  %incdec.ptr68.i = getelementptr inbounds %struct.basic_block_def** %tos.2148.i, i64 1
  store %struct.basic_block_def* %63, %struct.basic_block_def** %tos.2148.i, align 8, !tbaa !9
  %65 = bitcast %struct.edge_def* %e.2149.i to i8*
  %66 = load %struct.basic_block_def** %src.i61, align 8, !tbaa !10
  %aux70.i = getelementptr inbounds %struct.basic_block_def* %66, i64 0, i32 10
  store i8* %65, i8** %aux70.i, align 8, !tbaa !17
  br label %for.inc71.i

for.inc71.i:                                      ; preds = %if.then.i62, %land.lhs.true62.i, %land.lhs.true.i, %for.body46.i
  %tos.3.i = phi %struct.basic_block_def** [ %incdec.ptr68.i, %if.then.i62 ], [ %tos.2148.i, %land.lhs.true62.i ], [ %tos.2148.i, %land.lhs.true.i ], [ %tos.2148.i, %for.body46.i ]
  %pred_next72.i = getelementptr inbounds %struct.edge_def* %e.2149.i, i64 0, i32 0
  %e.2.i = load %struct.edge_def** %pred_next72.i, align 8
  %cmp44.i = icmp eq %struct.edge_def* %e.2.i, null
  br i1 %cmp44.i, label %while.cond.loopexit.i, label %for.body46.i

while.cond.while.end_crit_edge.i:                 ; preds = %while.cond.loopexit.i
  %.pre.i = load i32* @n_basic_blocks, align 4, !tbaa !7
  br label %while.end.i

while.end.i:                                      ; preds = %while.cond.while.end_crit_edge.i, %while.cond.preheader.i, %for.cond12.preheader.i
  %67 = phi i32 [ %.pre.i, %while.cond.while.end_crit_edge.i ], [ %37, %while.cond.preheader.i ], [ %37, %for.cond12.preheader.i ]
  %idxprom74.i = sext i32 %67 to i64
  %arrayidx75.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom74.i
  %68 = load %struct.simple_bitmap_def** %arrayidx75.i, align 8, !tbaa !9
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %68) #4
  %e.3140.i = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8
  %cmp77141.i = icmp eq %struct.edge_def* %e.3140.i, null
  br i1 %cmp77141.i, label %compute_nearerout.exit, label %for.body79.i

for.body79.i:                                     ; preds = %while.end.i, %for.body79.i
  %e.3142.i = phi %struct.edge_def* [ %e.3.i, %for.body79.i ], [ %e.3140.i, %while.end.i ]
  %69 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %idxprom80.i = sext i32 %69 to i64
  %arrayidx81.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom80.i
  %70 = load %struct.simple_bitmap_def** %arrayidx81.i, align 8, !tbaa !9
  %aux84.i = getelementptr inbounds %struct.edge_def* %e.3142.i, i64 0, i32 5
  %71 = load i8** %aux84.i, align 8, !tbaa !16
  %72 = ptrtoint i8* %71 to i64
  %arrayidx85.i = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %72
  %73 = load %struct.simple_bitmap_def** %arrayidx85.i, align 8, !tbaa !9
  %call86.i = tail call i32 @sbitmap_a_and_b(%struct.simple_bitmap_def* %70, %struct.simple_bitmap_def* %70, %struct.simple_bitmap_def* %73) #4
  %succ_next88.i = getelementptr inbounds %struct.edge_def* %e.3142.i, i64 0, i32 1
  %e.3.i = load %struct.edge_def** %succ_next88.i, align 8
  %cmp77.i = icmp eq %struct.edge_def* %e.3.i, null
  br i1 %cmp77.i, label %compute_nearerout.exit, label %for.body79.i

compute_nearerout.exit:                           ; preds = %for.body79.i, %while.end.i
  tail call void @clear_aux_for_edges() #4
  tail call void @free(i8* %call.i47) #4
  %74 = bitcast %struct.simple_bitmap_def** %call6 to i8*
  tail call void @free(i8* %74)
  %call9 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %0, i32 %n_exprs) #4
  store %struct.simple_bitmap_def** %call9, %struct.simple_bitmap_def*** %insert, align 8, !tbaa !9
  %75 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call10 = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %75, i32 %n_exprs) #4
  store %struct.simple_bitmap_def** %call10, %struct.simple_bitmap_def*** %delete, align 8, !tbaa !9
  %76 = load %struct.simple_bitmap_def*** %insert, align 8, !tbaa !9
  %77 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp41.i = icmp sgt i32 %77, 0
  br i1 %cmp41.i, label %for.body.i65, label %for.cond5.preheader.i

for.cond5.preheader.i:                            ; preds = %for.body.i65, %compute_nearerout.exit
  %78 = load i32* %num_edges1, align 4, !tbaa !1
  %cmp639.i = icmp sgt i32 %78, 0
  br i1 %cmp639.i, label %for.body7.lr.ph.i, label %compute_rev_insert_delete.exit

for.body7.lr.ph.i:                                ; preds = %for.cond5.preheader.i
  %index_to_edge.i63 = getelementptr inbounds %struct.edge_list* %call, i64 0, i32 2
  br label %for.body7.i

for.body.i65:                                     ; preds = %compute_nearerout.exit, %for.body.i65
  %indvars.iv43.i = phi i64 [ %indvars.iv.next44.i, %for.body.i65 ], [ 0, %compute_nearerout.exit ]
  %arrayidx.i64 = getelementptr inbounds %struct.simple_bitmap_def** %call10, i64 %indvars.iv43.i
  %79 = load %struct.simple_bitmap_def** %arrayidx.i64, align 8, !tbaa !9
  %arrayidx2.i = getelementptr inbounds %struct.simple_bitmap_def** %st_avloc, i64 %indvars.iv43.i
  %80 = load %struct.simple_bitmap_def** %arrayidx2.i, align 8, !tbaa !9
  %arrayidx4.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %indvars.iv43.i
  %81 = load %struct.simple_bitmap_def** %arrayidx4.i, align 8, !tbaa !9
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %79, %struct.simple_bitmap_def* %80, %struct.simple_bitmap_def* %81) #4
  %indvars.iv.next44.i = add nuw nsw i64 %indvars.iv43.i, 1
  %82 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %83 = trunc i64 %indvars.iv.next44.i to i32
  %cmp.i = icmp slt i32 %83, %82
  br i1 %cmp.i, label %for.body.i65, label %for.cond5.preheader.i

for.body7.i:                                      ; preds = %for.inc23.i, %for.body7.lr.ph.i
  %indvars.iv.i66 = phi i64 [ 0, %for.body7.lr.ph.i ], [ %indvars.iv.next.i73, %for.inc23.i ]
  %84 = load %struct.edge_def*** %index_to_edge.i63, align 8, !tbaa !8
  %arrayidx9.i67 = getelementptr inbounds %struct.edge_def** %84, i64 %indvars.iv.i66
  %85 = load %struct.edge_def** %arrayidx9.i67, align 8, !tbaa !9
  %src.i68 = getelementptr inbounds %struct.edge_def* %85, i64 0, i32 2
  %86 = load %struct.basic_block_def** %src.i68, align 8, !tbaa !10
  %cmp10.i = icmp eq %struct.basic_block_def* %86, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  %arrayidx12.i = getelementptr inbounds %struct.simple_bitmap_def** %76, i64 %indvars.iv.i66
  %87 = load %struct.simple_bitmap_def** %arrayidx12.i, align 8, !tbaa !9
  %arrayidx14.i69 = getelementptr inbounds %struct.simple_bitmap_def** %call7, i64 %indvars.iv.i66
  %88 = load %struct.simple_bitmap_def** %arrayidx14.i69, align 8, !tbaa !9
  br i1 %cmp10.i, label %if.then.i70, label %if.else.i72

if.then.i70:                                      ; preds = %for.body7.i
  %89 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %idxprom15.i = sext i32 %89 to i64
  %arrayidx16.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom15.i
  %90 = load %struct.simple_bitmap_def** %arrayidx16.i, align 8, !tbaa !9
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %87, %struct.simple_bitmap_def* %88, %struct.simple_bitmap_def* %90) #4
  br label %for.inc23.i

if.else.i72:                                      ; preds = %for.body7.i
  %index.i71 = getelementptr inbounds %struct.basic_block_def* %86, i64 0, i32 11
  %91 = load i32* %index.i71, align 4, !tbaa !14
  %idxprom21.i = sext i32 %91 to i64
  %arrayidx22.i = getelementptr inbounds %struct.simple_bitmap_def** %call8, i64 %idxprom21.i
  %92 = load %struct.simple_bitmap_def** %arrayidx22.i, align 8, !tbaa !9
  tail call void @sbitmap_difference(%struct.simple_bitmap_def* %87, %struct.simple_bitmap_def* %88, %struct.simple_bitmap_def* %92) #4
  br label %for.inc23.i

for.inc23.i:                                      ; preds = %if.else.i72, %if.then.i70
  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i66, 1
  %93 = load i32* %num_edges1, align 4, !tbaa !1
  %94 = trunc i64 %indvars.iv.next.i73 to i32
  %cmp6.i74 = icmp slt i32 %94, %93
  br i1 %cmp6.i74, label %for.body7.i, label %compute_rev_insert_delete.exit

compute_rev_insert_delete.exit:                   ; preds = %for.inc23.i, %for.cond5.preheader.i
  %95 = bitcast %struct.simple_bitmap_def** %call8 to i8*
  tail call void @free(i8* %95)
  %96 = bitcast %struct.simple_bitmap_def** %call7 to i8*
  tail call void @free(i8* %96)
  ret %struct.edge_list* %call
}

declare void @sbitmap_vector_zero(%struct.simple_bitmap_def**, i32) #1

; Function Attrs: nounwind uwtable
define i32 @optimize_mode_switching(%struct._IO_FILE* nocapture readnone %file) #0 {
for.body17:
  %entity_map = alloca [1 x i32], align 4
  %bb_info = alloca [1 x %struct.bb_info*], align 8
  %live_now = alloca i64, align 8
  %current_mode = alloca [1 x i32], align 4
  %live_at_edge = alloca i64, align 8
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @xcalloc(i64 %conv, i64 16) #4
  %1 = bitcast i8* %call to %struct.bb_info*
  %arrayidx = getelementptr inbounds [1 x %struct.bb_info*]* %bb_info, i64 0, i64 0
  store %struct.bb_info* %1, %struct.bb_info** %arrayidx, align 8, !tbaa !9
  %arrayidx2 = getelementptr inbounds [1 x i32]* %entity_map, i64 0, i64 0
  store i32 0, i32* %arrayidx2, align 4, !tbaa !7
  %2 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call11 = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %2, i32 1) #4
  store %struct.simple_bitmap_def** %call11, %struct.simple_bitmap_def*** @antic, align 8, !tbaa !9
  %3 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call12 = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %3, i32 1) #4
  store %struct.simple_bitmap_def** %call12, %struct.simple_bitmap_def*** @transp, align 8, !tbaa !9
  %4 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %call13 = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %4, i32 1) #4
  store %struct.simple_bitmap_def** %call13, %struct.simple_bitmap_def*** @comp, align 8, !tbaa !9
  %5 = load %struct.simple_bitmap_def*** @transp, align 8, !tbaa !9
  %6 = load i32* @n_basic_blocks, align 4, !tbaa !7
  call void @sbitmap_vector_ones(%struct.simple_bitmap_def** %5, i32 %6) #4
  %7 = bitcast i64* %live_now to i8*
  %.pre774 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp26719 = icmp sgt i32 %.pre774, 0
  br i1 %cmp26719, label %for.body28, label %for.body174.lr.ph

for.body28:                                       ; preds = %for.body17, %for.inc164
  %indvars.iv764 = phi i64 [ %indvars.iv.next765, %for.inc164 ], [ 0, %for.body17 ]
  store i64 0, i64* %live_now, align 8, !tbaa !18
  %8 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 4
  %bb30 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx31 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb30, i64 0, i64 %indvars.iv764
  %9 = load %struct.basic_block_def** %arrayidx31, align 8, !tbaa !9
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %9, i64 0, i32 8
  %10 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !19
  call void @reg_set_to_hard_reg_set(i64* %live_now, %struct.bitmap_head_def* %10) #4
  %11 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data33 = getelementptr inbounds %struct.varray_head_tag* %11, i64 0, i32 4
  %bb34 = bitcast %union.varray_data_tag* %data33 to [1 x %struct.basic_block_def*]*
  %arrayidx35 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb34, i64 0, i64 %indvars.iv764
  %12 = load %struct.basic_block_def** %arrayidx35, align 8, !tbaa !9
  %head = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 0
  %insn.0710 = load %struct.rtx_def** %head, align 8
  %cmp37711 = icmp eq %struct.rtx_def* %insn.0710, null
  br i1 %cmp37711, label %for.end154.thread, label %land.rhs.lr.ph

for.end154.thread:                                ; preds = %for.body28
  %computing789 = getelementptr inbounds %struct.bb_info* %1, i64 %indvars.iv764, i32 1
  store i32 2, i32* %computing789, align 4, !tbaa !20
  br label %if.then159

land.rhs.lr.ph:                                   ; preds = %for.body28
  %seginfo.i = getelementptr inbounds %struct.bb_info* %1, i64 %indvars.iv764, i32 0
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc150.land.rhs_crit_edge, %land.rhs.lr.ph
  %13 = phi %struct.basic_block_def* [ %12, %land.rhs.lr.ph ], [ %.pre776, %for.inc150.land.rhs_crit_edge ]
  %insn.0713 = phi %struct.rtx_def* [ %insn.0710, %land.rhs.lr.ph ], [ %insn.0, %for.inc150.land.rhs_crit_edge ]
  %last_mode.0712 = phi i32 [ 2, %land.rhs.lr.ph ], [ %last_mode.2, %for.inc150.land.rhs_crit_edge ]
  %end = getelementptr inbounds %struct.basic_block_def* %13, i64 0, i32 1
  %14 = load %struct.rtx_def** %end, align 8, !tbaa !22
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %cmp44 = icmp eq %struct.rtx_def* %insn.0713, %15
  br i1 %cmp44, label %for.end154, label %for.body46

for.body46:                                       ; preds = %land.rhs
  %16 = getelementptr inbounds %struct.rtx_def* %insn.0713, i64 0, i32 0
  %bf.load = load i32* %16, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom47612 = zext i32 %bf.clear to i64
  %arrayidx48 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom47612
  %17 = load i8* %arrayidx48, align 1, !tbaa !23
  %cmp50 = icmp eq i8 %17, 105
  br i1 %cmp50, label %if.then52, label %for.inc150

if.then52:                                        ; preds = %for.body46
  switch i32 %bf.clear, label %cond.false [
    i32 34, label %cond.end91
    i32 32, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %if.then52
  %arrayidx62 = getelementptr inbounds %struct.rtx_def* %insn.0713, i64 0, i32 1, i64 3
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx63, align 8, !tbaa !9
  %call64 = call i32 @asm_noperands(%struct.rtx_def* %18) #4
  %cmp65 = icmp sgt i32 %call64, -1
  br i1 %cmp65, label %cond.end91, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %land.lhs.true
  %19 = load %struct.rtx_def** %rtx63, align 8, !tbaa !9
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load71 = load i32* %20, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 40
  br i1 %cmp73, label %cond.end91, label %cond.false

cond.false:                                       ; preds = %if.then52, %lor.lhs.false67
  %arrayidx76 = getelementptr inbounds %struct.rtx_def* %insn.0713, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx76 to i32*
  %21 = load i32* %rtint, align 4, !tbaa !7
  %cmp77 = icmp sgt i32 %21, -1
  br i1 %cmp77, label %lor.rhs, label %cond.end

cond.end:                                         ; preds = %cond.false
  %call84 = call i32 @recog_memoized_1(%struct.rtx_def* %insn.0713) #4
  %cmp85 = icmp slt i32 %call84, 0
  br i1 %cmp85, label %if.end104, label %lor.rhs

lor.rhs:                                          ; preds = %cond.false, %cond.end
  %call87 = call i32 @get_attr_type(%struct.rtx_def* %insn.0713) #4
  %cmp88 = icmp ne i32 %call87, 35
  %phitmp = select i1 %cmp88, i32 2, i32 0
  br label %cond.end91

cond.end91:                                       ; preds = %lor.rhs, %if.then52, %land.lhs.true, %lor.lhs.false67
  %cond92 = phi i32 [ 1, %lor.lhs.false67 ], [ 1, %land.lhs.true ], [ 1, %if.then52 ], [ %phitmp, %lor.rhs ]
  %cmp93 = icmp eq i32 %cond92, 2
  %cmp96 = icmp eq i32 %cond92, %last_mode.0712
  %or.cond = or i1 %cmp93, %cmp96
  br i1 %or.cond, label %if.end104, label %if.then98

if.then98:                                        ; preds = %cond.end91
  %22 = load i64* %live_now, align 8, !tbaa !18
  %call.i = call noalias i8* @xmalloc(i64 40) #4
  %23 = bitcast i8* %call.i to %struct.seginfo*
  %mode1.i = bitcast i8* %call.i to i32*
  store i32 %cond92, i32* %mode1.i, align 4, !tbaa !24
  %insn_ptr.i = getelementptr inbounds i8* %call.i, i64 8
  %24 = bitcast i8* %insn_ptr.i to %struct.rtx_def**
  store %struct.rtx_def* %insn.0713, %struct.rtx_def** %24, align 8, !tbaa !26
  %bbnum.i = getelementptr inbounds i8* %call.i, i64 16
  %25 = bitcast i8* %bbnum.i to i32*
  %26 = trunc i64 %indvars.iv764 to i32
  store i32 %26, i32* %25, align 4, !tbaa !27
  %next.i = getelementptr inbounds i8* %call.i, i64 24
  %27 = bitcast i8* %next.i to %struct.seginfo**
  store %struct.seginfo* null, %struct.seginfo** %27, align 8, !tbaa !28
  %regs_live2.i = getelementptr inbounds i8* %call.i, i64 32
  %28 = bitcast i8* %regs_live2.i to i64*
  store i64 %22, i64* %28, align 8, !tbaa !29
  %29 = load %struct.seginfo** %seginfo.i, align 8, !tbaa !30
  %cmp.i = icmp eq %struct.seginfo* %29, null
  br i1 %cmp.i, label %if.then.i, label %while.cond.i

if.then.i:                                        ; preds = %if.then98
  store %struct.seginfo* %23, %struct.seginfo** %seginfo.i, align 8, !tbaa !30
  br label %add_seginfo.exit

while.cond.i:                                     ; preds = %if.then98, %while.cond.i
  %ptr.0.i = phi %struct.seginfo* [ %30, %while.cond.i ], [ %29, %if.then98 ]
  %next.i614 = getelementptr inbounds %struct.seginfo* %ptr.0.i, i64 0, i32 3
  %30 = load %struct.seginfo** %next.i614, align 8, !tbaa !28
  %cmp3.i = icmp eq %struct.seginfo* %30, null
  br i1 %cmp3.i, label %while.end.i, label %while.cond.i

while.end.i:                                      ; preds = %while.cond.i
  store %struct.seginfo* %23, %struct.seginfo** %next.i614, align 8, !tbaa !28
  br label %add_seginfo.exit

add_seginfo.exit:                                 ; preds = %if.then.i, %while.end.i
  %31 = load %struct.simple_bitmap_def*** @transp, align 8, !tbaa !9
  %arrayidx102 = getelementptr inbounds %struct.simple_bitmap_def** %31, i64 %indvars.iv764
  %32 = load %struct.simple_bitmap_def** %arrayidx102, align 8, !tbaa !9
  %arrayidx103 = getelementptr inbounds %struct.simple_bitmap_def* %32, i64 0, i32 3, i64 0
  %33 = load i64* %arrayidx103, align 8, !tbaa !18
  %and = and i64 %33, -2
  store i64 %and, i64* %arrayidx103, align 8, !tbaa !18
  br label %if.end104

if.end104:                                        ; preds = %cond.end, %cond.end91, %add_seginfo.exit
  %last_mode.1 = phi i32 [ %cond92, %add_seginfo.exit ], [ %last_mode.0712, %cond.end91 ], [ %last_mode.0712, %cond.end ]
  %arrayidx106 = getelementptr inbounds %struct.rtx_def* %insn.0713, i64 0, i32 1, i64 6
  %rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**
  %link.0704 = load %struct.rtx_def** %rtx107, align 8
  %tobool109705 = icmp eq %struct.rtx_def* %link.0704, null
  br i1 %tobool109705, label %for.end124, label %for.body110

for.body110:                                      ; preds = %if.end104, %for.body110
  %link.0706 = phi %struct.rtx_def* [ %link.0, %for.body110 ], [ %link.0704, %if.end104 ]
  %arrayidx122 = getelementptr inbounds %struct.rtx_def* %link.0706, i64 0, i32 1, i64 1
  %rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**
  %link.0 = load %struct.rtx_def** %rtx123, align 8
  %tobool109 = icmp eq %struct.rtx_def* %link.0, null
  br i1 %tobool109, label %for.end124, label %for.body110

for.end124:                                       ; preds = %for.body110, %if.end104
  %arrayidx126 = getelementptr inbounds %struct.rtx_def* %insn.0713, i64 0, i32 1, i64 3
  %rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx127, align 8, !tbaa !9
  call void @note_stores(%struct.rtx_def* %34, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @reg_becomes_live, i8* %7) #4
  %link.1707 = load %struct.rtx_def** %rtx107, align 8
  %tobool132708 = icmp eq %struct.rtx_def* %link.1707, null
  br i1 %tobool132708, label %for.inc150, label %for.body133

for.body133:                                      ; preds = %for.end124, %for.body133
  %link.1709 = phi %struct.rtx_def* [ %link.1, %for.body133 ], [ %link.1707, %for.end124 ]
  %arrayidx146 = getelementptr inbounds %struct.rtx_def* %link.1709, i64 0, i32 1, i64 1
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %link.1 = load %struct.rtx_def** %rtx147, align 8
  %tobool132 = icmp eq %struct.rtx_def* %link.1, null
  br i1 %tobool132, label %for.inc150, label %for.body133

for.inc150:                                       ; preds = %for.body133, %for.end124, %for.body46
  %last_mode.2 = phi i32 [ %last_mode.0712, %for.body46 ], [ %last_mode.1, %for.end124 ], [ %last_mode.1, %for.body133 ]
  %arrayidx152 = getelementptr inbounds %struct.rtx_def* %insn.0713, i64 0, i32 1, i64 2
  %rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx153, align 8
  %cmp37 = icmp eq %struct.rtx_def* %insn.0, null
  br i1 %cmp37, label %for.end154, label %for.inc150.land.rhs_crit_edge

for.inc150.land.rhs_crit_edge:                    ; preds = %for.inc150
  %.pre775 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data40.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %.pre775, i64 0, i32 4
  %bb41.phi.trans.insert = bitcast %union.varray_data_tag* %data40.phi.trans.insert to [1 x %struct.basic_block_def*]*
  %arrayidx42.phi.trans.insert = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb41.phi.trans.insert, i64 0, i64 %indvars.iv764
  %.pre776 = load %struct.basic_block_def** %arrayidx42.phi.trans.insert, align 8, !tbaa !9
  br label %land.rhs

for.end154:                                       ; preds = %for.inc150, %land.rhs
  %insn.0.lcssa = phi %struct.rtx_def* [ %insn.0713, %land.rhs ], [ null, %for.inc150 ]
  %last_mode.0.lcssa = phi i32 [ %last_mode.0712, %land.rhs ], [ %last_mode.2, %for.inc150 ]
  %computing = getelementptr inbounds %struct.bb_info* %1, i64 %indvars.iv764, i32 1
  store i32 %last_mode.0.lcssa, i32* %computing, align 4, !tbaa !20
  %cmp157 = icmp eq i32 %last_mode.0.lcssa, 2
  br i1 %cmp157, label %if.then159, label %for.inc164

if.then159:                                       ; preds = %for.end154.thread, %for.end154
  %insn.0.lcssa791 = phi %struct.rtx_def* [ null, %for.end154.thread ], [ %insn.0.lcssa, %for.end154 ]
  %35 = load i64* %live_now, align 8, !tbaa !18
  %call.i624 = call noalias i8* @xmalloc(i64 40) #4
  %36 = bitcast i8* %call.i624 to %struct.seginfo*
  %mode1.i625 = bitcast i8* %call.i624 to i32*
  store i32 2, i32* %mode1.i625, align 4, !tbaa !24
  %insn_ptr.i626 = getelementptr inbounds i8* %call.i624, i64 8
  %37 = bitcast i8* %insn_ptr.i626 to %struct.rtx_def**
  store %struct.rtx_def* %insn.0.lcssa791, %struct.rtx_def** %37, align 8, !tbaa !26
  %bbnum.i627 = getelementptr inbounds i8* %call.i624, i64 16
  %38 = bitcast i8* %bbnum.i627 to i32*
  %39 = trunc i64 %indvars.iv764 to i32
  store i32 %39, i32* %38, align 4, !tbaa !27
  %next.i628 = getelementptr inbounds i8* %call.i624, i64 24
  %40 = bitcast i8* %next.i628 to %struct.seginfo**
  store %struct.seginfo* null, %struct.seginfo** %40, align 8, !tbaa !28
  %regs_live2.i629 = getelementptr inbounds i8* %call.i624, i64 32
  %41 = bitcast i8* %regs_live2.i629 to i64*
  store i64 %35, i64* %41, align 8, !tbaa !29
  %seginfo.i615 = getelementptr inbounds %struct.bb_info* %1, i64 %indvars.iv764, i32 0
  %42 = load %struct.seginfo** %seginfo.i615, align 8, !tbaa !30
  %cmp.i616 = icmp eq %struct.seginfo* %42, null
  br i1 %cmp.i616, label %if.then.i617, label %while.cond.i621

if.then.i617:                                     ; preds = %if.then159
  store %struct.seginfo* %36, %struct.seginfo** %seginfo.i615, align 8, !tbaa !30
  br label %for.inc164

while.cond.i621:                                  ; preds = %if.then159, %while.cond.i621
  %ptr.0.i618 = phi %struct.seginfo* [ %43, %while.cond.i621 ], [ %42, %if.then159 ]
  %next.i619 = getelementptr inbounds %struct.seginfo* %ptr.0.i618, i64 0, i32 3
  %43 = load %struct.seginfo** %next.i619, align 8, !tbaa !28
  %cmp3.i620 = icmp eq %struct.seginfo* %43, null
  br i1 %cmp3.i620, label %while.end.i622, label %while.cond.i621

while.end.i622:                                   ; preds = %while.cond.i621
  store %struct.seginfo* %36, %struct.seginfo** %next.i619, align 8, !tbaa !28
  br label %for.inc164

for.inc164:                                       ; preds = %while.end.i622, %if.then.i617, %for.end154
  %indvars.iv.next765 = add nuw nsw i64 %indvars.iv764, 1
  %44 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %45 = trunc i64 %indvars.iv.next765 to i32
  %cmp26 = icmp slt i32 %45, %44
  br i1 %cmp26, label %for.body28, label %for.body174.lr.ph

for.body174.lr.ph:                                ; preds = %for.inc164, %for.body17
  %46 = phi i32 [ %.pre774, %for.body17 ], [ %44, %for.inc164 ]
  %call170 = call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %46, i32 1) #4
  br label %for.body179.lr.ph

for.body179.lr.ph:                                ; preds = %for.end372, %for.body174.lr.ph
  %need_commit.0701 = phi i32 [ 0, %for.body174.lr.ph ], [ %need_commit.2.ph632.lcssa643, %for.end372 ]
  %i.0698 = phi i32 [ 0, %for.body174.lr.ph ], [ %inc374, %for.end372 ]
  %emited.0697 = phi i8 [ 0, %for.body174.lr.ph ], [ %emited.2.ph.lcssa644, %for.end372 ]
  %47 = load %struct.simple_bitmap_def*** @antic, align 8, !tbaa !9
  %48 = load i32* @n_basic_blocks, align 4, !tbaa !7
  call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %47, i32 %48) #4
  %49 = load %struct.simple_bitmap_def*** @comp, align 8, !tbaa !9
  %50 = load i32* @n_basic_blocks, align 4, !tbaa !7
  call void @sbitmap_vector_zero(%struct.simple_bitmap_def** %49, i32 %50) #4
  %51 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp186657 = icmp sgt i32 %51, 0
  %52 = load %struct.simple_bitmap_def*** @antic, align 8, !tbaa !9
  %53 = load %struct.simple_bitmap_def*** @comp, align 8, !tbaa !9
  %arrayidx181.us = getelementptr inbounds [1 x i32]* %current_mode, i64 0, i64 0
  store i32 %i.0698, i32* %arrayidx181.us, align 4, !tbaa !7
  br i1 %cmp186657, label %for.body188.lr.ph.us, label %for.end227

for.body188.us:                                   ; preds = %for.inc222.us, %for.body188.lr.ph.us
  %indvars.iv760 = phi i64 [ 0, %for.body188.lr.ph.us ], [ %indvars.iv.next761, %for.inc222.us ]
  %seginfo.us = getelementptr inbounds %struct.bb_info* %61, i64 %indvars.iv760, i32 0
  %54 = load %struct.seginfo** %seginfo.us, align 8, !tbaa !30
  %mode191.us = getelementptr inbounds %struct.seginfo* %54, i64 0, i32 0
  %55 = load i32* %mode191.us, align 4, !tbaa !24
  %cmp192.us = icmp eq i32 %55, %i.0698
  br i1 %cmp192.us, label %if.then194.us, label %if.end204.us

if.then194.us:                                    ; preds = %for.body188.us
  %arrayidx201.us = getelementptr inbounds %struct.simple_bitmap_def** %52, i64 %indvars.iv760
  %56 = load %struct.simple_bitmap_def** %arrayidx201.us, align 8, !tbaa !9
  %arrayidx203.us = getelementptr inbounds %struct.simple_bitmap_def* %56, i64 0, i32 3, i64 0
  %57 = load i64* %arrayidx203.us, align 8, !tbaa !18
  %or.us = or i64 %57, 1
  store i64 %or.us, i64* %arrayidx203.us, align 8, !tbaa !18
  br label %if.end204.us

if.end204.us:                                     ; preds = %if.then194.us, %for.body188.us
  %computing207.us = getelementptr inbounds %struct.bb_info* %61, i64 %indvars.iv760, i32 1
  %58 = load i32* %computing207.us, align 4, !tbaa !20
  %cmp208.us = icmp eq i32 %58, %i.0698
  br i1 %cmp208.us, label %if.then210.us, label %for.inc222.us

if.then210.us:                                    ; preds = %if.end204.us
  %arrayidx217.us = getelementptr inbounds %struct.simple_bitmap_def** %53, i64 %indvars.iv760
  %59 = load %struct.simple_bitmap_def** %arrayidx217.us, align 8, !tbaa !9
  %arrayidx219.us = getelementptr inbounds %struct.simple_bitmap_def* %59, i64 0, i32 3, i64 0
  %60 = load i64* %arrayidx219.us, align 8, !tbaa !18
  %or220.us = or i64 %60, 1
  store i64 %or220.us, i64* %arrayidx219.us, align 8, !tbaa !18
  br label %for.inc222.us

for.inc222.us:                                    ; preds = %if.then210.us, %if.end204.us
  %indvars.iv.next761 = add nuw nsw i64 %indvars.iv760, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next761 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %51
  br i1 %exitcond, label %for.end227, label %for.body188.us

for.body188.lr.ph.us:                             ; preds = %for.body179.lr.ph
  %arrayidx184.us = getelementptr inbounds [1 x %struct.bb_info*]* %bb_info, i64 0, i64 0
  %61 = load %struct.bb_info** %arrayidx184.us, align 8, !tbaa !9
  br label %for.body188.us

for.end227:                                       ; preds = %for.inc222.us, %for.body179.lr.ph
  %cmp230662 = icmp sgt i32 %51, 0
  br i1 %cmp230662, label %for.body232.lr.ph, label %for.body245

for.body232.lr.ph:                                ; preds = %for.end227
  %62 = sext i32 %51 to i64
  br label %for.body232

for.body232:                                      ; preds = %for.body232.lr.ph, %for.body232
  %indvars.iv752 = phi i64 [ %62, %for.body232.lr.ph ], [ %indvars.iv.next753, %for.body232 ]
  %indvars.iv.next753 = add nsw i64 %indvars.iv752, -1
  %arrayidx234 = getelementptr inbounds %struct.simple_bitmap_def** %call170, i64 %indvars.iv.next753
  %63 = load %struct.simple_bitmap_def** %arrayidx234, align 8, !tbaa !9
  %64 = load %struct.simple_bitmap_def*** @transp, align 8, !tbaa !9
  %arrayidx236 = getelementptr inbounds %struct.simple_bitmap_def** %64, i64 %indvars.iv.next753
  %65 = load %struct.simple_bitmap_def** %arrayidx236, align 8, !tbaa !9
  call void @sbitmap_not(%struct.simple_bitmap_def* %63, %struct.simple_bitmap_def* %65) #4
  %66 = trunc i64 %indvars.iv.next753 to i32
  %cmp230 = icmp sgt i32 %66, 0
  br i1 %cmp230, label %for.body232, label %for.body245

for.body245:                                      ; preds = %for.body232, %for.end227
  %67 = load %struct.simple_bitmap_def*** @transp, align 8, !tbaa !9
  %68 = load %struct.simple_bitmap_def*** @comp, align 8, !tbaa !9
  %69 = load %struct.simple_bitmap_def*** @antic, align 8, !tbaa !9
  %call240 = call %struct.edge_list* @pre_edge_lcm(%struct._IO_FILE* undef, i32 1, %struct.simple_bitmap_def** %67, %struct.simple_bitmap_def** %68, %struct.simple_bitmap_def** %69, %struct.simple_bitmap_def** %call170, %struct.simple_bitmap_def*** @insert, %struct.simple_bitmap_def*** @delete)
  %num_edges = getelementptr inbounds %struct.edge_list* %call240, i64 0, i32 1
  %index_to_edge = getelementptr inbounds %struct.edge_list* %call240, i64 0, i32 2
  %arrayidx248 = getelementptr inbounds [1 x i32]* %entity_map, i64 0, i64 0
  %70 = load i32* %arrayidx248, align 4, !tbaa !7
  %idxprom249 = sext i32 %70 to i64
  %arrayidx250 = getelementptr inbounds [1 x i32]* @optimize_mode_switching.num_modes, i64 0, i64 %idxprom249
  %71 = load i32* %arrayidx250, align 4, !tbaa !7
  %72 = load i32* %num_edges, align 4, !tbaa !1
  %cmp253665672680 = icmp sgt i32 %72, 0
  br i1 %cmp253665672680, label %for.body255.lr.ph.lr.ph.lr.ph, label %for.end338

for.body255.lr.ph.lr.ph.lr.ph:                    ; preds = %for.body245
  %arrayidx273 = getelementptr inbounds [1 x i32]* %current_mode, i64 0, i64 0
  %arrayidx319 = getelementptr inbounds [1 x %struct.bb_info*]* %bb_info, i64 0, i64 0
  br label %for.body255.lr.ph.lr.ph

for.body255.lr.ph.lr.ph:                          ; preds = %for.body255.lr.ph.lr.ph.lr.ph, %if.end316
  %e.1664671683.in = phi i32 [ %72, %for.body255.lr.ph.lr.ph.lr.ph ], [ %83, %if.end316 ]
  %need_commit.2.ph682 = phi i32 [ %need_commit.0701, %for.body255.lr.ph.lr.ph.lr.ph ], [ %need_commit.2.ph632673, %if.end316 ]
  %emited.2.ph681 = phi i8 [ %emited.0697, %for.body255.lr.ph.lr.ph.lr.ph ], [ 1, %if.end316 ]
  br label %for.body255.lr.ph

for.body255.lr.ph:                                ; preds = %for.body255.lr.ph.lr.ph, %if.else334
  %e.1664674.in = phi i32 [ %e.1664671683.in, %for.body255.lr.ph.lr.ph ], [ %83, %if.else334 ]
  %need_commit.2.ph632673 = phi i32 [ %need_commit.2.ph682, %for.body255.lr.ph.lr.ph ], [ 1, %if.else334 ]
  %73 = sext i32 %e.1664674.in to i64
  br label %for.body255

for.body255:                                      ; preds = %for.body255.lr.ph, %for.cond252.backedge
  %indvars.iv754 = phi i64 [ %73, %for.body255.lr.ph ], [ %indvars.iv.next755, %for.cond252.backedge ]
  %indvars.iv.next755 = add nsw i64 %indvars.iv754, -1
  %74 = load %struct.edge_def*** %index_to_edge, align 8, !tbaa !8
  %arrayidx257 = getelementptr inbounds %struct.edge_def** %74, i64 %indvars.iv.next755
  %75 = load %struct.edge_def** %arrayidx257, align 8, !tbaa !9
  %aux = getelementptr inbounds %struct.edge_def* %75, i64 0, i32 5
  store i8* null, i8** %aux, align 8, !tbaa !16
  %76 = load %struct.simple_bitmap_def*** @insert, align 8, !tbaa !9
  %arrayidx262 = getelementptr inbounds %struct.simple_bitmap_def** %76, i64 %indvars.iv.next755
  %77 = load %struct.simple_bitmap_def** %arrayidx262, align 8, !tbaa !9
  %arrayidx264 = getelementptr inbounds %struct.simple_bitmap_def* %77, i64 0, i32 3, i64 0
  %78 = load i64* %arrayidx264, align 8, !tbaa !18
  %and267611 = and i64 %78, 1
  %tobool268 = icmp eq i64 %and267611, 0
  br i1 %tobool268, label %for.body255.for.cond252.backedge_crit_edge, label %if.end270

for.body255.for.cond252.backedge_crit_edge:       ; preds = %for.body255
  %.pre782 = trunc i64 %indvars.iv.next755 to i32
  br label %for.cond252.backedge

if.end270:                                        ; preds = %for.body255
  store i8* inttoptr (i64 1 to i8*), i8** %aux, align 8, !tbaa !16
  %79 = load i32* %arrayidx273, align 4, !tbaa !7
  %src = getelementptr inbounds %struct.edge_def* %75, i64 0, i32 2
  %80 = load %struct.basic_block_def** %src, align 8, !tbaa !10
  store i64 0, i64* %live_at_edge, align 8, !tbaa !18
  %global_live_at_end = getelementptr inbounds %struct.basic_block_def* %80, i64 0, i32 9
  %81 = load %struct.bitmap_head_def** %global_live_at_end, align 8, !tbaa !31
  call void @reg_set_to_hard_reg_set(i64* %live_at_edge, %struct.bitmap_head_def* %81) #4
  call void @start_sequence() #4
  %cmp276 = icmp eq i32 %79, 0
  br i1 %cmp276, label %cond.true278, label %cond.end282

cond.true278:                                     ; preds = %if.end270
  %call279 = call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 1) #4
  %call280 = call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 2) #4
  call void @emit_i387_cw_initialization(%struct.rtx_def* %call279, %struct.rtx_def* %call280) #4
  br label %cond.end282

cond.end282:                                      ; preds = %if.end270, %cond.true278
  %call284 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  %82 = getelementptr inbounds %struct.rtx_def* %call284, i64 0, i32 0
  %bf.load285 = load i32* %82, align 8
  %bf.clear286 = and i32 %bf.load285, 65535
  %cmp287 = icmp eq i32 %bf.clear286, 24
  %83 = trunc i64 %indvars.iv.next755 to i32
  br i1 %cmp287, label %land.lhs.true289, label %if.end294

land.lhs.true289:                                 ; preds = %cond.end282
  %arrayidx291 = getelementptr inbounds %struct.rtx_def* %call284, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtvec_def**
  %84 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !9
  %num_elem = getelementptr inbounds %struct.rtvec_def* %84, i64 0, i32 0
  %85 = load i32* %num_elem, align 4, !tbaa !32
  %tobool292 = icmp eq i32 %85, 0
  br i1 %tobool292, label %for.cond252.backedge, label %if.end294

for.cond252.backedge:                             ; preds = %for.body255.for.cond252.backedge_crit_edge, %land.lhs.true289
  %.pre-phi783 = phi i32 [ %.pre782, %for.body255.for.cond252.backedge_crit_edge ], [ %83, %land.lhs.true289 ]
  %cmp253 = icmp sgt i32 %.pre-phi783, 0
  br i1 %cmp253, label %for.body255, label %for.end338

if.end294:                                        ; preds = %land.lhs.true289, %cond.end282
  %flags = getelementptr inbounds %struct.edge_def* %75, i64 0, i32 6
  %86 = load i32* %flags, align 4, !tbaa !34
  %and295 = and i32 %86, 2
  %tobool296 = icmp eq i32 %and295, 0
  br i1 %tobool296, label %if.else334, label %if.then297

if.then297:                                       ; preds = %if.end294
  %end298 = getelementptr inbounds %struct.basic_block_def* %80, i64 0, i32 1
  %87 = load %struct.rtx_def** %end298, align 8, !tbaa !22
  %88 = getelementptr inbounds %struct.rtx_def* %87, i64 0, i32 0
  %bf.load299 = load i32* %88, align 8
  %bf.clear300 = and i32 %bf.load299, 65535
  switch i32 %bf.clear300, label %if.else314 [
    i32 33, label %if.then303
    i32 32, label %if.then311
  ]

if.then303:                                       ; preds = %if.then297
  %call305 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call284, %struct.rtx_def* %87) #4
  br label %if.end316

if.then311:                                       ; preds = %if.then297
  %call313 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call284, %struct.rtx_def* %87) #4
  br label %if.end316

if.else314:                                       ; preds = %if.then297
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8]* @.str, i64 0, i64 0), i32 1269, i8* getelementptr inbounds ([24 x i8]* @__FUNCTION__.optimize_mode_switching, i64 0, i64 0)) #5
  unreachable

if.end316:                                        ; preds = %if.then311, %if.then303
  %index = getelementptr inbounds %struct.basic_block_def* %80, i64 0, i32 11
  %89 = load i32* %index, align 4, !tbaa !14
  %idxprom317 = sext i32 %89 to i64
  %90 = load %struct.bb_info** %arrayidx319, align 8, !tbaa !9
  %computing321 = getelementptr inbounds %struct.bb_info* %90, i64 %idxprom317, i32 1
  store i32 %79, i32* %computing321, align 4, !tbaa !20
  %91 = load %struct.simple_bitmap_def*** @transp, align 8, !tbaa !9
  %arrayidx330 = getelementptr inbounds %struct.simple_bitmap_def** %91, i64 %idxprom317
  %92 = load %struct.simple_bitmap_def** %arrayidx330, align 8, !tbaa !9
  %arrayidx332 = getelementptr inbounds %struct.simple_bitmap_def* %92, i64 0, i32 3, i64 0
  %93 = load i64* %arrayidx332, align 8, !tbaa !18
  %and333 = and i64 %93, -2
  store i64 %and333, i64* %arrayidx332, align 8, !tbaa !18
  %cmp253665672 = icmp sgt i32 %83, 0
  br i1 %cmp253665672, label %for.body255.lr.ph.lr.ph, label %for.end338

if.else334:                                       ; preds = %if.end294
  call void @insert_insn_on_edge(%struct.rtx_def* %call284, %struct.edge_def* %75) #4
  %cmp253665 = icmp sgt i32 %83, 0
  br i1 %cmp253665, label %for.body255.lr.ph, label %for.end338

for.end338:                                       ; preds = %if.end316, %if.else334, %for.cond252.backedge, %for.body245
  %emited.2.ph.lcssa644 = phi i8 [ %emited.0697, %for.body245 ], [ %emited.2.ph681, %for.cond252.backedge ], [ %emited.2.ph681, %if.else334 ], [ 1, %if.end316 ]
  %need_commit.2.ph632.lcssa643 = phi i32 [ %need_commit.0701, %for.body245 ], [ %need_commit.2.ph632673, %for.cond252.backedge ], [ 1, %if.else334 ], [ %need_commit.2.ph632673, %if.end316 ]
  %94 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp341687 = icmp sgt i32 %94, 0
  br i1 %cmp341687, label %for.body343.lr.ph, label %for.end372

for.body343.lr.ph:                                ; preds = %for.end338
  %arrayidx362 = getelementptr inbounds [1 x %struct.bb_info*]* %bb_info, i64 0, i64 0
  %95 = sext i32 %94 to i64
  br label %for.body343

for.body343:                                      ; preds = %for.body343.lr.ph, %for.cond340.backedge
  %indvars.iv756 = phi i64 [ %95, %for.body343.lr.ph ], [ %indvars.iv.next757, %for.cond340.backedge ]
  %indvars.iv.next757 = add nsw i64 %indvars.iv756, -1
  %96 = load %struct.simple_bitmap_def*** @delete, align 8, !tbaa !9
  %arrayidx347 = getelementptr inbounds %struct.simple_bitmap_def** %96, i64 %indvars.iv.next757
  %97 = load %struct.simple_bitmap_def** %arrayidx347, align 8, !tbaa !9
  %arrayidx349 = getelementptr inbounds %struct.simple_bitmap_def* %97, i64 0, i32 3, i64 0
  %98 = load i64* %arrayidx349, align 8, !tbaa !18
  %and353610 = and i64 %98, 1
  %tobool354 = icmp eq i64 %and353610, 0
  br i1 %tobool354, label %for.cond340.backedge, label %if.then355

for.cond340.backedge:                             ; preds = %for.body343, %if.then355
  %99 = trunc i64 %indvars.iv.next757 to i32
  %cmp341 = icmp sgt i32 %99, 0
  br i1 %cmp341, label %for.body343, label %for.end372

if.then355:                                       ; preds = %for.body343
  %100 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !9
  %data357 = getelementptr inbounds %struct.varray_head_tag* %100, i64 0, i32 4
  %bb358 = bitcast %union.varray_data_tag* %data357 to [1 x %struct.basic_block_def*]*
  %arrayidx359 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb358, i64 0, i64 %indvars.iv.next757
  %101 = load %struct.basic_block_def** %arrayidx359, align 8, !tbaa !9
  call fastcc void @make_preds_opaque(%struct.basic_block_def* %101, i32 0)
  %102 = load %struct.bb_info** %arrayidx362, align 8, !tbaa !9
  %seginfo364 = getelementptr inbounds %struct.bb_info* %102, i64 %indvars.iv.next757, i32 0
  %103 = load %struct.seginfo** %seginfo364, align 8, !tbaa !30
  %mode365 = getelementptr inbounds %struct.seginfo* %103, i64 0, i32 0
  store i32 %71, i32* %mode365, align 4, !tbaa !24
  br label %for.cond340.backedge

for.end372:                                       ; preds = %for.cond340.backedge, %for.end338
  call void @clear_aux_for_edges() #4
  call void @free_edge_list(%struct.edge_list* %call240) #4
  %inc374 = add nsw i32 %i.0698, 1
  %cmp172 = icmp slt i32 %inc374, 2
  br i1 %cmp172, label %for.body179.lr.ph, label %for.body380

for.body380:                                      ; preds = %for.end372
  %arrayidx383 = getelementptr inbounds [1 x i32]* %entity_map, i64 0, i64 0
  %104 = load i32* %arrayidx383, align 4, !tbaa !7
  %idxprom384 = sext i32 %104 to i64
  %arrayidx385 = getelementptr inbounds [1 x i32]* @optimize_mode_switching.num_modes, i64 0, i64 %idxprom384
  %105 = load i32* %arrayidx385, align 4, !tbaa !7
  %106 = load i32* @n_basic_blocks, align 4, !tbaa !7
  %cmp388650 = icmp sgt i32 %106, 0
  %arrayidx394 = getelementptr inbounds [1 x %struct.bb_info*]* %bb_info, i64 0, i64 0
  br i1 %cmp388650, label %for.body390.lr.ph, label %for.end456

for.body390.lr.ph:                                ; preds = %for.body380
  %107 = sext i32 %106 to i64
  br label %for.body390

for.cond387.loopexit:                             ; preds = %for.cond397
  %108 = trunc i64 %indvars.iv.next to i32
  %cmp388 = icmp sgt i32 %108, 0
  br i1 %cmp388, label %for.body390, label %for.end456

for.body390:                                      ; preds = %for.body390.lr.ph, %for.cond387.loopexit
  %indvars.iv = phi i64 [ %107, %for.body390.lr.ph ], [ %indvars.iv.next, %for.cond387.loopexit ]
  %emited.5651 = phi i8 [ %emited.2.ph.lcssa644, %for.body390.lr.ph ], [ %emited.6.ph, %for.cond387.loopexit ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %109 = load %struct.bb_info** %arrayidx394, align 8, !tbaa !9
  %seginfo396 = getelementptr inbounds %struct.bb_info* %109, i64 %indvars.iv.next, i32 0
  %110 = load %struct.seginfo** %seginfo396, align 8, !tbaa !30
  br label %for.cond397.outer

for.cond397.outer:                                ; preds = %if.end446, %for.body390
  %emited.6.ph = phi i8 [ %emited.5651, %for.body390 ], [ %emited.7, %if.end446 ]
  %ptr391.0.ph = phi %struct.seginfo* [ %110, %for.body390 ], [ %111, %if.end446 ]
  br label %for.cond397

for.cond397:                                      ; preds = %for.cond397.outer, %land.lhs.true420
  %ptr391.0 = phi %struct.seginfo* [ %111, %land.lhs.true420 ], [ %ptr391.0.ph, %for.cond397.outer ]
  %tobool398 = icmp eq %struct.seginfo* %ptr391.0, null
  br i1 %tobool398, label %for.cond387.loopexit, label %for.body399

for.body399:                                      ; preds = %for.cond397
  %next400 = getelementptr inbounds %struct.seginfo* %ptr391.0, i64 0, i32 3
  %111 = load %struct.seginfo** %next400, align 8, !tbaa !28
  %mode401 = getelementptr inbounds %struct.seginfo* %ptr391.0, i64 0, i32 0
  %112 = load i32* %mode401, align 4, !tbaa !24
  %cmp402 = icmp eq i32 %112, %105
  br i1 %cmp402, label %if.end446, label %if.then404

if.then404:                                       ; preds = %for.body399
  call void @start_sequence() #4
  %113 = load i32* %mode401, align 4, !tbaa !24
  %cmp407 = icmp eq i32 %113, 0
  br i1 %cmp407, label %cond.true409, label %cond.end413

cond.true409:                                     ; preds = %if.then404
  %call410 = call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 1) #4
  %call411 = call %struct.rtx_def* @assign_386_stack_local(i32 3, i32 2) #4
  call void @emit_i387_cw_initialization(%struct.rtx_def* %call410, %struct.rtx_def* %call411) #4
  br label %cond.end413

cond.end413:                                      ; preds = %if.then404, %cond.true409
  %call415 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  %114 = getelementptr inbounds %struct.rtx_def* %call415, i64 0, i32 0
  %bf.load416 = load i32* %114, align 8
  %bf.clear417 = and i32 %bf.load416, 65535
  %cmp418 = icmp eq i32 %bf.clear417, 24
  br i1 %cmp418, label %land.lhs.true420, label %if.end427

land.lhs.true420:                                 ; preds = %cond.end413
  %arrayidx422 = getelementptr inbounds %struct.rtx_def* %call415, i64 0, i32 1, i64 0
  %rtvec423 = bitcast %union.rtunion_def* %arrayidx422 to %struct.rtvec_def**
  %115 = load %struct.rtvec_def** %rtvec423, align 8, !tbaa !9
  %num_elem424 = getelementptr inbounds %struct.rtvec_def* %115, i64 0, i32 0
  %116 = load i32* %num_elem424, align 4, !tbaa !32
  %tobool425 = icmp eq i32 %116, 0
  br i1 %tobool425, label %for.cond397, label %if.end427

if.end427:                                        ; preds = %land.lhs.true420, %cond.end413
  %insn_ptr = getelementptr inbounds %struct.seginfo* %ptr391.0, i64 0, i32 1
  %117 = load %struct.rtx_def** %insn_ptr, align 8, !tbaa !26
  %118 = getelementptr inbounds %struct.rtx_def* %117, i64 0, i32 0
  %bf.load428 = load i32* %118, align 8
  %bf.clear429 = and i32 %bf.load428, 65535
  %cmp430 = icmp eq i32 %bf.clear429, 37
  br i1 %cmp430, label %land.lhs.true432, label %if.else442

land.lhs.true432:                                 ; preds = %if.end427
  %arrayidx435 = getelementptr inbounds %struct.rtx_def* %117, i64 0, i32 1, i64 4
  %rtint436 = bitcast %union.rtunion_def* %arrayidx435 to i32*
  %119 = load i32* %rtint436, align 4, !tbaa !7
  %cmp437 = icmp eq i32 %119, -80
  br i1 %cmp437, label %if.then439, label %if.else442

if.then439:                                       ; preds = %land.lhs.true432
  %call441 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call415, %struct.rtx_def* %117) #4
  br label %if.end446

if.else442:                                       ; preds = %land.lhs.true432, %if.end427
  %call444 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call415, %struct.rtx_def* %117) #4
  br label %if.end446

if.end446:                                        ; preds = %for.body399, %if.then439, %if.else442
  %emited.7 = phi i8 [ 1, %if.then439 ], [ 1, %if.else442 ], [ %emited.6.ph, %for.body399 ]
  %120 = bitcast %struct.seginfo* %ptr391.0 to i8*
  call void @free(i8* %120)
  br label %for.cond397.outer

for.end456:                                       ; preds = %for.cond387.loopexit, %for.body380
  %emited.5.lcssa = phi i8 [ %emited.2.ph.lcssa644, %for.body380 ], [ %emited.6.ph, %for.cond387.loopexit ]
  %121 = load %struct.bb_info** %arrayidx394, align 8, !tbaa !9
  %122 = bitcast %struct.bb_info* %121 to i8*
  call void @free(i8* %122)
  %123 = bitcast %struct.simple_bitmap_def** %call170 to i8*
  call void @free(i8* %123)
  %124 = load %struct.simple_bitmap_def*** @antic, align 8, !tbaa !9
  %125 = bitcast %struct.simple_bitmap_def** %124 to i8*
  call void @free(i8* %125)
  %126 = load %struct.simple_bitmap_def*** @transp, align 8, !tbaa !9
  %127 = bitcast %struct.simple_bitmap_def** %126 to i8*
  call void @free(i8* %127)
  %128 = load %struct.simple_bitmap_def*** @comp, align 8, !tbaa !9
  %129 = bitcast %struct.simple_bitmap_def** %128 to i8*
  call void @free(i8* %129)
  %130 = load %struct.simple_bitmap_def*** @delete, align 8, !tbaa !9
  %131 = bitcast %struct.simple_bitmap_def** %130 to i8*
  call void @free(i8* %131)
  %132 = load %struct.simple_bitmap_def*** @insert, align 8, !tbaa !9
  %133 = bitcast %struct.simple_bitmap_def** %132 to i8*
  call void @free(i8* %133)
  %tobool457 = icmp eq i32 %need_commit.2.ph632.lcssa643, 0
  br i1 %tobool457, label %land.lhs.true461.critedge, label %if.then458

if.then458:                                       ; preds = %for.end456
  call void @commit_edge_insertions() #4
  br label %if.end464

land.lhs.true461.critedge:                        ; preds = %for.end456
  %.old = and i8 %emited.5.lcssa, 1
  %tobool462.old = icmp eq i8 %.old, 0
  br i1 %tobool462.old, label %return, label %if.end464

if.end464:                                        ; preds = %if.then458, %land.lhs.true461.critedge
  call void @allocate_reg_life_data() #4
  call void @update_life_info(%struct.simple_bitmap_def* null, i32 2, i32 29) #4
  br label %return

return:                                           ; preds = %land.lhs.true461.critedge, %if.end464
  %retval.0 = phi i32 [ 1, %if.end464 ], [ 0, %land.lhs.true461.critedge ]
  ret i32 %retval.0
}

declare noalias i8* @xcalloc(i64, i64) #1

declare void @reg_set_to_hard_reg_set(i64*, %struct.bitmap_head_def*) #1

declare i32 @asm_noperands(%struct.rtx_def*) #1

declare i32 @recog_memoized_1(%struct.rtx_def*) #1

declare i32 @get_attr_type(%struct.rtx_def*) #1

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @reg_becomes_live(%struct.rtx_def* nocapture readonly %reg, %struct.rtx_def* nocapture readnone %setter, i8* nocapture %live) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !9
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ]
  %reg.addr.0 = phi %struct.rtx_def* [ %1, %if.then ], [ %reg, %entry ]
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp3 = icmp eq i32 %bf.clear2, 61
  br i1 %cmp3, label %if.end5, label %if.end69

if.end5:                                          ; preds = %if.end
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !7
  %cmp8 = icmp slt i32 %2, 53
  br i1 %cmp8, label %if.then9, label %if.end69

if.then9:                                         ; preds = %if.end5
  %3 = and i32 %2, -8
  %4 = icmp eq i32 %3, 8
  %.off = add i32 %2, -21
  %5 = icmp ult i32 %.off, 8
  %or.cond = or i1 %4, %5
  %.off92 = add i32 %2, -45
  %6 = icmp ult i32 %.off92, 8
  %or.cond98 = or i1 %or.cond, %6
  %.off93 = add i32 %2, -29
  %7 = icmp ult i32 %.off93, 8
  %or.cond100 = or i1 %or.cond98, %7
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear24 = and i32 %bf.lshr, 255
  br i1 %or.cond100, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then9
  %idxprom95 = zext i32 %bf.clear24 to i64
  %arrayidx25 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom95
  %8 = load i32* %arrayidx25, align 4, !tbaa !23
  %cmp26 = icmp eq i32 %8, 5
  br i1 %cmp26, label %for.body.lr.ph, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp32 = icmp eq i32 %8, 6
  %phitmp = select i1 %cmp32, i32 2, i32 1
  br label %for.body.lr.ph

cond.false:                                       ; preds = %if.then9
  switch i32 %bf.clear24, label %for.cond.preheader [
    i32 18, label %cond.true37
    i32 24, label %cond.true44
  ]

cond.true37:                                      ; preds = %cond.false
  %9 = load i32* @target_flags, align 4, !tbaa !7
  %and = lshr i32 %9, 25
  %10 = and i32 %and, 1
  %11 = xor i32 %10, 3
  br label %for.body.lr.ph

cond.true44:                                      ; preds = %cond.false
  %12 = load i32* @target_flags, align 4, !tbaa !7
  %and45 = lshr i32 %12, 24
  %13 = and i32 %and45, 2
  %14 = xor i32 %13, 6
  br label %for.body.lr.ph

for.cond.preheader:                               ; preds = %cond.false
  %idxprom5294 = zext i32 %bf.clear24 to i64
  %arrayidx53 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom5294
  %15 = load i8* %arrayidx53, align 1, !tbaa !23
  %conv = zext i8 %15 to i32
  %16 = load i32* @target_flags, align 4, !tbaa !7
  %and54 = lshr i32 %16, 23
  %17 = and i32 %and54, 4
  %18 = add i32 %17, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %18
  %div = sdiv i32 %sub, %18
  %cmp66102 = icmp sgt i32 %div, 0
  br i1 %cmp66102, label %for.body.lr.ph, label %if.end69

for.body.lr.ph:                                   ; preds = %cond.true, %lor.rhs, %cond.true37, %cond.true44, %for.cond.preheader
  %nregs.0.in.ph108 = phi i32 [ %div, %for.cond.preheader ], [ %14, %cond.true44 ], [ %11, %cond.true37 ], [ %phitmp, %lor.rhs ], [ 2, %cond.true ]
  %19 = bitcast i8* %live to i64*
  %.promoted = load i64* %19, align 8, !tbaa !18
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %or104 = phi i64 [ %.promoted, %for.body.lr.ph ], [ %or, %for.body ]
  %nregs.0103.in = phi i32 [ %nregs.0.in.ph108, %for.body.lr.ph ], [ %nregs.0103, %for.body ]
  %nregs.0103 = add nsw i32 %nregs.0103.in, -1
  %add68 = add nsw i32 %nregs.0103, %2
  %sh_prom = zext i32 %add68 to i64
  %shl = shl i64 1, %sh_prom
  %or = or i64 %or104, %shl
  %cmp66 = icmp sgt i32 %nregs.0103, 0
  br i1 %cmp66, label %for.body, label %for.cond.if.end69.loopexit_crit_edge

for.cond.if.end69.loopexit_crit_edge:             ; preds = %for.body
  store i64 %or, i64* %19, align 8, !tbaa !18
  br label %if.end69

if.end69:                                         ; preds = %for.cond.preheader, %for.cond.if.end69.loopexit_crit_edge, %if.end, %if.end5
  ret void
}

declare void @sbitmap_not(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #1

declare void @start_sequence() #1

declare void @emit_i387_cw_initialization(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @assign_386_stack_local(i32, i32) #1

declare %struct.rtx_def* @gen_sequence() #1

declare void @end_sequence() #1

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

declare void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @make_preds_opaque(%struct.basic_block_def* nocapture readonly %b, i32 %j) #0 {
entry:
  %pred = getelementptr inbounds %struct.basic_block_def* %b, i64 0, i32 4
  %e.025 = load %struct.edge_def** %pred, align 8
  %tobool26 = icmp eq %struct.edge_def* %e.025, null
  br i1 %tobool26, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %div = lshr i32 %j, 6
  %idxprom = zext i32 %div to i64
  %rem = and i32 %j, 63
  %sh_prom = zext i32 %rem to i64
  %0 = shl i64 1, %sh_prom
  %neg = xor i64 %0, -1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %e.027 = phi %struct.edge_def* [ %e.025, %for.body.lr.ph ], [ %e.0, %for.inc ]
  %src = getelementptr inbounds %struct.edge_def* %e.027, i64 0, i32 2
  %1 = load %struct.basic_block_def** %src, align 8, !tbaa !10
  %aux = getelementptr inbounds %struct.edge_def* %e.027, i64 0, i32 5
  %2 = load i8** %aux, align 8, !tbaa !16
  %tobool1 = icmp eq i8* %2, null
  br i1 %tobool1, label %lor.lhs.false, label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %index = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 11
  %3 = load i32* %index, align 4, !tbaa !14
  %idxprom2 = sext i32 %3 to i64
  %4 = load %struct.simple_bitmap_def*** @transp, align 8, !tbaa !9
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def** %4, i64 %idxprom2
  %5 = load %struct.simple_bitmap_def** %arrayidx, align 8, !tbaa !9
  %arrayidx3 = getelementptr inbounds %struct.simple_bitmap_def* %5, i64 0, i32 3, i64 %idxprom
  %6 = load i64* %arrayidx3, align 8, !tbaa !18
  %and24 = and i64 %6, %0
  %tobool4 = icmp eq i64 %and24, 0
  br i1 %tobool4, label %for.inc, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %and14 = and i64 %6, %neg
  store i64 %and14, i64* %arrayidx3, align 8, !tbaa !18
  tail call fastcc void @make_preds_opaque(%struct.basic_block_def* %1, i32 %j)
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false, %for.body, %if.end
  %pred_next = getelementptr inbounds %struct.edge_def* %e.027, i64 0, i32 0
  %e.0 = load %struct.edge_def** %pred_next, align 8
  %tobool = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

declare void @free_edge_list(%struct.edge_list*) #1

declare void @commit_edge_insertions() #1

declare void @allocate_reg_life_data() #1

declare void @update_life_info(%struct.simple_bitmap_def*, i32, i32) #1

declare void @sbitmap_difference(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #1

declare void @sbitmap_copy(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #1

declare void @sbitmap_ones(%struct.simple_bitmap_def*) #1

declare i32 @sbitmap_a_and_b(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #1

declare %struct.simple_bitmap_def* @sbitmap_alloc(i32) #1

declare i32 @sbitmap_a_and_b_or_c(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #1

declare void @sbitmap_intersection_of_succs(%struct.simple_bitmap_def*, %struct.simple_bitmap_def**, i32) #1

declare i32 @sbitmap_a_or_b_and_c(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !3, i64 4}
!2 = metadata !{metadata !"edge_list", metadata !3, i64 0, metadata !3, i64 4, metadata !6, i64 8}
!3 = metadata !{metadata !"int", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!7 = metadata !{metadata !3, metadata !3, i64 0}
!8 = metadata !{metadata !2, metadata !6, i64 8}
!9 = metadata !{metadata !6, metadata !6, i64 0}
!10 = metadata !{metadata !11, metadata !6, i64 16}
!11 = metadata !{metadata !"edge_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !3, i64 48, metadata !3, i64 52, metadata !12, i64 56}
!12 = metadata !{metadata !"long long", metadata !4, i64 0}
!13 = metadata !{metadata !11, metadata !6, i64 24}
!14 = metadata !{metadata !15, metadata !3, i64 88}
!15 = metadata !{metadata !"basic_block_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !3, i64 92, metadata !12, i64 96, metadata !3, i64 104, metadata !3, i64 108}
!16 = metadata !{metadata !11, metadata !6, i64 40}
!17 = metadata !{metadata !15, metadata !6, i64 80}
!18 = metadata !{metadata !12, metadata !12, i64 0}
!19 = metadata !{metadata !15, metadata !6, i64 64}
!20 = metadata !{metadata !21, metadata !3, i64 8}
!21 = metadata !{metadata !"bb_info", metadata !6, i64 0, metadata !3, i64 8}
!22 = metadata !{metadata !15, metadata !6, i64 8}
!23 = metadata !{metadata !4, metadata !4, i64 0}
!24 = metadata !{metadata !25, metadata !3, i64 0}
!25 = metadata !{metadata !"seginfo", metadata !3, i64 0, metadata !6, i64 8, metadata !3, i64 16, metadata !6, i64 24, metadata !12, i64 32}
!26 = metadata !{metadata !25, metadata !6, i64 8}
!27 = metadata !{metadata !25, metadata !3, i64 16}
!28 = metadata !{metadata !25, metadata !6, i64 24}
!29 = metadata !{metadata !25, metadata !12, i64 32}
!30 = metadata !{metadata !21, metadata !6, i64 0}
!31 = metadata !{metadata !15, metadata !6, i64 72}
!32 = metadata !{metadata !33, metadata !3, i64 0}
!33 = metadata !{metadata !"rtvec_def", metadata !3, i64 0, metadata !4, i64 8}
!34 = metadata !{metadata !11, metadata !3, i64 48}
