; ModuleID = 'doloop.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.loop = type { i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.edge_def**, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.simple_bitmap_def*, i32, %struct.edge_def**, i32, %struct.edge_def**, i32, %struct.simple_bitmap_def*, i32, i32, %struct.loop*, %struct.loop*, %struct.loop*, i32, i32, i8*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%union.tree_node = type opaque
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.iv = type { i32, %union.anon }
%union.anon = type { %struct.iv_class* }
%struct.iv_class = type { i32, i32, %struct.induction*, i32, %struct.induction*, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.iv_class*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%struct.induction = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def**, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i16, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.induction*, %struct.induction*, i64, %struct.induction*, %struct.rtx_def* }

@loop_dump_stream = external global %struct._IO_FILE*
@.str = private unnamed_addr constant [49 x i8] c"Doloop: Processing loop %d, enclosed levels %d.\0A\00", align 1
@.str1 = private unnamed_addr constant [35 x i8] c"Doloop: Cannot precondition loop.\0A\00", align 1
@.str2 = private unnamed_addr constant [26 x i8] c"Doloop: Not normal loop.\0A\00", align 1
@.str3 = private unnamed_addr constant [52 x i8] c"Doloop: Too few iterations (%ld) to be profitable.\0A\00", align 1
@word_mode = external global i32
@.str4 = private unnamed_addr constant [49 x i8] c"Doloop: Target unwilling to use doloop pattern!\0A\00", align 1
@.str5 = private unnamed_addr constant [40 x i8] c"Doloop: Unrecognizable doloop pattern!\0A\00", align 1
@.str6 = private unnamed_addr constant [9 x i8] c"doloop.c\00", align 1
@__FUNCTION__.doloop_modify_runtime = private unnamed_addr constant [22 x i8] c"doloop_modify_runtime\00", align 1
@max_uid_for_loop = external global i32
@uid_luid = external global i32*
@.str7 = private unnamed_addr constant [49 x i8] c"Doloop: Basic induction var skips initial incr.\0A\00", align 1
@.str8 = private unnamed_addr constant [24 x i8] c"Doloop: Do-while loop.\0A\00", align 1
@const_int_rtx = external global [129 x %struct.rtx_def*]
@.str9 = private unnamed_addr constant [35 x i8] c"Doloop: Inserting doloop pattern (\00", align 1
@.str10 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str11 = private unnamed_addr constant [8 x i8] c"runtime\00", align 1
@.str12 = private unnamed_addr constant [14 x i8] c" iterations).\00", align 1
@__FUNCTION__.doloop_modify = private unnamed_addr constant [14 x i8] c"doloop_modify\00", align 1
@mode_bitsize = external constant [59 x i16]
@global_rtl = external global [11 x %struct.rtx_def*]
@.str13 = private unnamed_addr constant [35 x i8] c"Doloop: Invalid jump at loop end.\0A\00", align 1
@.str14 = private unnamed_addr constant [35 x i8] c"Doloop: Loop completely unrolled.\0A\00", align 1
@.str15 = private unnamed_addr constant [41 x i8] c"Doloop: Loop has multiple exit targets.\0A\00", align 1
@.str16 = private unnamed_addr constant [36 x i8] c"Doloop: Indirect jump in function.\0A\00", align 1
@.str17 = private unnamed_addr constant [32 x i8] c"Doloop: Function call in loop.\0A\00", align 1
@.str18 = private unnamed_addr constant [38 x i8] c"Doloop: Computed branch in the loop.\0A\00", align 1
@.str19 = private unnamed_addr constant [45 x i8] c"Doloop: Could not determine iteration info.\0A\00", align 1
@.str20 = private unnamed_addr constant [44 x i8] c"Doloop: Increment not an integer constant.\0A\00", align 1
@.str21 = private unnamed_addr constant [43 x i8] c"Doloop: NE loop with non-unity increment.\0A\00", align 1
@.str22 = private unnamed_addr constant [51 x i8] c"Doloop: Possible infinite iteration case ignored.\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @doloop_optimize(%struct.loop* %loop) #0 {
entry:
  %initial_value = alloca %struct.rtx_def*, align 8
  %final_value = alloca %struct.rtx_def*, align 8
  %increment = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !1
  %1 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool = icmp eq %struct._IO_FILE* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %num = getelementptr inbounds %struct.loop* %loop, i64 0, i32 0
  %2 = load i32* %num, align 4, !tbaa !8
  %level = getelementptr inbounds %struct.loop* %loop, i64 0, i32 16
  %3 = load i32* %level, align 4, !tbaa !9
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 %2, i32 %3) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %end = getelementptr inbounds %struct.loop* %loop, i64 0, i32 27
  %4 = load %struct.rtx_def** %end, align 8, !tbaa !10
  %call1 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %4) #4
  %5 = load i8** %aux, align 8, !tbaa !1
  %call.i = call i32 @any_condjump_p(%struct.rtx_def* %call1) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end
  %call1.i = call i32 @onlyjump_p(%struct.rtx_def* %call1) #4
  %tobool2.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.i, label %if.then.i, label %if.end6.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end
  %6 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool3.i = icmp eq %struct._IO_FILE* %6, null
  br i1 %tobool3.i, label %return, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  %7 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str13, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %6) #4
  br label %return

if.end6.i:                                        ; preds = %lor.lhs.false.i
  %n_iterations.i = getelementptr inbounds i8* %5, i64 96
  %8 = bitcast i8* %n_iterations.i to i64*
  %9 = load i64* %8, align 8, !tbaa !11
  %unroll_number.i = getelementptr inbounds i8* %5, i64 104
  %10 = bitcast i8* %unroll_number.i to i32*
  %11 = load i32* %10, align 4, !tbaa !17
  %conv.i = zext i32 %11 to i64
  %cmp.i = icmp eq i64 %9, %conv.i
  br i1 %cmp.i, label %if.then8.i, label %if.end13.i

if.then8.i:                                       ; preds = %if.end6.i
  %12 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool9.i = icmp eq %struct._IO_FILE* %12, null
  br i1 %tobool9.i, label %return, label %if.then10.i

if.then10.i:                                      ; preds = %if.then8.i
  %13 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str14, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %12) #4
  br label %return

if.end13.i:                                       ; preds = %if.end6.i
  %has_multiple_exit_targets.i = getelementptr inbounds i8* %5, i64 20
  %14 = bitcast i8* %has_multiple_exit_targets.i to i32*
  %15 = load i32* %14, align 4, !tbaa !18
  %tobool14.i = icmp eq i32 %15, 0
  br i1 %tobool14.i, label %lor.lhs.false15.i, label %if.then17.i

lor.lhs.false15.i:                                ; preds = %if.end13.i
  %exit_count.i = getelementptr inbounds %struct.loop* %loop, i64 0, i32 32
  %16 = load i32* %exit_count.i, align 4, !tbaa !19
  %tobool16.i = icmp eq i32 %16, 0
  br i1 %tobool16.i, label %if.end22.i, label %if.then17.i

if.then17.i:                                      ; preds = %lor.lhs.false15.i, %if.end13.i
  %17 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool18.i = icmp eq %struct._IO_FILE* %17, null
  br i1 %tobool18.i, label %return, label %if.then19.i

if.then19.i:                                      ; preds = %if.then17.i
  %18 = call i64 @fwrite(i8* getelementptr inbounds ([41 x i8]* @.str15, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %17) #4
  br label %return

if.end22.i:                                       ; preds = %lor.lhs.false15.i
  %has_indirect_jump.i = getelementptr inbounds i8* %5, i64 24
  %19 = bitcast i8* %has_indirect_jump.i to i32*
  %20 = load i32* %19, align 4, !tbaa !20
  %tobool23.i = icmp eq i32 %20, 0
  br i1 %tobool23.i, label %if.end29.i, label %if.then24.i

if.then24.i:                                      ; preds = %if.end22.i
  %21 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool25.i = icmp eq %struct._IO_FILE* %21, null
  br i1 %tobool25.i, label %return, label %if.then26.i

if.then26.i:                                      ; preds = %if.then24.i
  %22 = call i64 @fwrite(i8* getelementptr inbounds ([36 x i8]* @.str16, i64 0, i64 0), i64 35, i64 1, %struct._IO_FILE* %21) #4
  br label %return

if.end29.i:                                       ; preds = %if.end22.i
  %has_call.i = bitcast i8* %5 to i32*
  %23 = load i32* %has_call.i, align 4, !tbaa !21
  %tobool30.i = icmp eq i32 %23, 0
  br i1 %tobool30.i, label %if.end36.i, label %if.then31.i

if.then31.i:                                      ; preds = %if.end29.i
  %24 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool32.i = icmp eq %struct._IO_FILE* %24, null
  br i1 %tobool32.i, label %return, label %if.then33.i

if.then33.i:                                      ; preds = %if.then31.i
  %25 = call i64 @fwrite(i8* getelementptr inbounds ([32 x i8]* @.str17, i64 0, i64 0), i64 31, i64 1, %struct._IO_FILE* %24) #4
  br label %return

if.end36.i:                                       ; preds = %if.end29.i
  %has_tablejump.i = getelementptr inbounds i8* %5, i64 16
  %26 = bitcast i8* %has_tablejump.i to i32*
  %27 = load i32* %26, align 4, !tbaa !22
  %tobool37.i = icmp eq i32 %27, 0
  br i1 %tobool37.i, label %if.end43.i, label %if.then38.i

if.then38.i:                                      ; preds = %if.end36.i
  %28 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool39.i = icmp eq %struct._IO_FILE* %28, null
  br i1 %tobool39.i, label %return, label %if.then40.i

if.then40.i:                                      ; preds = %if.then38.i
  %29 = call i64 @fwrite(i8* getelementptr inbounds ([38 x i8]* @.str18, i64 0, i64 0), i64 37, i64 1, %struct._IO_FILE* %28) #4
  br label %return

if.end43.i:                                       ; preds = %if.end36.i
  %increment.i = getelementptr inbounds i8* %5, i64 80
  %30 = bitcast i8* %increment.i to %struct.rtx_def**
  %31 = load %struct.rtx_def** %30, align 8, !tbaa !23
  %tobool44.i = icmp eq %struct.rtx_def* %31, null
  br i1 %tobool44.i, label %if.then45.i, label %if.end50.i

if.then45.i:                                      ; preds = %if.end43.i
  %32 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool46.i = icmp eq %struct._IO_FILE* %32, null
  br i1 %tobool46.i, label %return, label %if.then47.i

if.then47.i:                                      ; preds = %if.then45.i
  %33 = call i64 @fwrite(i8* getelementptr inbounds ([45 x i8]* @.str19, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %32) #4
  br label %return

if.end50.i:                                       ; preds = %if.end43.i
  %34 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load.i = load i32* %34, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp52.i = icmp eq i32 %bf.clear.i, 54
  br i1 %cmp52.i, label %if.end59.i, label %if.then54.i

if.then54.i:                                      ; preds = %if.end50.i
  %35 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool55.i = icmp eq %struct._IO_FILE* %35, null
  br i1 %tobool55.i, label %return, label %if.then56.i

if.then56.i:                                      ; preds = %if.then54.i
  %36 = call i64 @fwrite(i8* getelementptr inbounds ([44 x i8]* @.str20, i64 0, i64 0), i64 43, i64 1, %struct._IO_FILE* %35) #4
  br label %return

if.end59.i:                                       ; preds = %if.end50.i
  %comparison_code.i = getelementptr inbounds i8* %5, i64 88
  %37 = bitcast i8* %comparison_code.i to i32*
  %38 = load i32* %37, align 4, !tbaa !24
  %cmp60.i = icmp eq i32 %38, 102
  br i1 %cmp60.i, label %land.lhs.true.i, label %if.end77.i

land.lhs.true.i:                                  ; preds = %if.end59.i
  %rtwint.i = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0, i32 0
  %39 = load i64* %rtwint.i, align 8, !tbaa !25
  switch i64 %39, label %if.then72.i [
    i64 -1, label %if.end77.i
    i64 1, label %if.end77.i
  ]

if.then72.i:                                      ; preds = %land.lhs.true.i
  %40 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool73.i = icmp eq %struct._IO_FILE* %40, null
  br i1 %tobool73.i, label %return, label %if.then74.i

if.then74.i:                                      ; preds = %if.then72.i
  %41 = call i64 @fwrite(i8* getelementptr inbounds ([43 x i8]* @.str21, i64 0, i64 0), i64 42, i64 1, %struct._IO_FILE* %40) #4
  br label %return

if.end77.i:                                       ; preds = %land.lhs.true.i, %land.lhs.true.i, %if.end59.i
  %tobool79.i = icmp eq i64 %9, 0
  br i1 %tobool79.i, label %land.lhs.true80.i, label %if.end5

land.lhs.true80.i:                                ; preds = %if.end77.i
  switch i32 %38, label %if.end5 [
    i32 110, label %land.lhs.true84.i
    i32 108, label %land.lhs.true95.i
    i32 111, label %land.lhs.true106.i
    i32 109, label %land.lhs.true117.i
  ]

land.lhs.true84.i:                                ; preds = %land.lhs.true80.i
  %rtwint88.i = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0, i32 0
  %42 = load i64* %rtwint88.i, align 8, !tbaa !25
  %cmp89.i = icmp sgt i64 %42, 0
  br i1 %cmp89.i, label %if.then124.i, label %if.end5

land.lhs.true95.i:                                ; preds = %land.lhs.true80.i
  %rtwint99.i = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0, i32 0
  %43 = load i64* %rtwint99.i, align 8, !tbaa !25
  %cmp100.i = icmp slt i64 %43, 0
  br i1 %cmp100.i, label %if.then124.i, label %if.end5

land.lhs.true106.i:                               ; preds = %land.lhs.true80.i
  %rtwint110.i = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0, i32 0
  %44 = load i64* %rtwint110.i, align 8, !tbaa !25
  %cmp111.i = icmp sgt i64 %44, 1
  br i1 %cmp111.i, label %if.then124.i, label %if.end5

land.lhs.true117.i:                               ; preds = %land.lhs.true80.i
  %rtwint121.i = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0, i32 0
  %45 = load i64* %rtwint121.i, align 8, !tbaa !25
  %cmp122.i = icmp slt i64 %45, -1
  %46 = load %struct._IO_FILE** @loop_dump_stream, align 8
  %tobool125.i = icmp ne %struct._IO_FILE* %46, null
  %or.cond.i = and i1 %cmp122.i, %tobool125.i
  br i1 %or.cond.i, label %if.then126.i, label %if.end5

if.then124.i:                                     ; preds = %land.lhs.true106.i, %land.lhs.true95.i, %land.lhs.true84.i
  %.old.i = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool125.old.i = icmp eq %struct._IO_FILE* %.old.i, null
  br i1 %tobool125.old.i, label %if.end5, label %if.then126.i

if.then126.i:                                     ; preds = %if.then124.i, %land.lhs.true117.i
  %47 = phi %struct._IO_FILE* [ %.old.i, %if.then124.i ], [ %46, %land.lhs.true117.i ]
  %48 = call i64 @fwrite(i8* getelementptr inbounds ([51 x i8]* @.str22, i64 0, i64 0), i64 50, i64 1, %struct._IO_FILE* %47) #4
  br label %if.end5

if.end5:                                          ; preds = %if.then124.i, %if.end77.i, %if.then126.i, %land.lhs.true117.i, %land.lhs.true106.i, %land.lhs.true84.i, %land.lhs.true95.i, %land.lhs.true80.i
  %call6 = call i32 @precondition_loop_p(%struct.loop* %loop, %struct.rtx_def** %initial_value, %struct.rtx_def** %final_value, %struct.rtx_def** %increment, i32* %mode) #4
  %tobool7 = icmp eq i32 %call6, 0
  br i1 %tobool7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end5
  %49 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool9 = icmp eq %struct._IO_FILE* %49, null
  br i1 %tobool9, label %return, label %if.then10

if.then10:                                        ; preds = %if.then8
  %50 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str1, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %49)
  br label %return

if.end13:                                         ; preds = %if.end5
  %n_iterations14 = getelementptr inbounds i8* %0, i64 96
  %51 = bitcast i8* %n_iterations14 to i64*
  %52 = load i64* %51, align 8, !tbaa !11
  %tobool15 = icmp eq i64 %52, 0
  br i1 %tobool15, label %if.else, label %if.end26

if.else:                                          ; preds = %if.end13
  %call17 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %call1, i32 8, %struct.rtx_def* null) #4
  %cmp = icmp eq %struct.rtx_def* %call17, null
  %53 = load i32* %mode, align 4, !tbaa !26
  %increment.i141 = getelementptr inbounds i8* %0, i64 80
  %54 = bitcast i8* %increment.i141 to %struct.rtx_def**
  %55 = load %struct.rtx_def** %54, align 8, !tbaa !23
  %rtwint.i142 = getelementptr inbounds %struct.rtx_def* %55, i64 0, i32 1, i64 0, i32 0
  %56 = load i64* %rtwint.i142, align 8, !tbaa !25
  %cmp.i143 = icmp slt i64 %56, 0
  %sub.i = sub nsw i64 0, %56
  %sub..i = select i1 %cmp.i143, i64 %sub.i, i64 %56
  %comparison_code.i144 = getelementptr inbounds i8* %0, i64 88
  %57 = bitcast i8* %comparison_code.i144 to i32*
  %58 = load i32* %57, align 4, !tbaa !24
  br i1 %cmp.i143, label %if.then1.i, label %if.else.i

if.then1.i:                                       ; preds = %if.else
  %call.i145 = call i32 @swap_condition(i32 %58) #4
  %final_equiv_value.i = getelementptr inbounds i8* %0, i64 64
  %initial_equiv_value.i = getelementptr inbounds i8* %0, i64 56
  br label %if.end5.i

if.else.i:                                        ; preds = %if.else
  %initial_equiv_value3.i = getelementptr inbounds i8* %0, i64 56
  %final_equiv_value4.i = getelementptr inbounds i8* %0, i64 64
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.else.i, %if.then1.i
  %code.0.i = phi i32 [ %call.i145, %if.then1.i ], [ %58, %if.else.i ]
  %min_value.0.in.i.in = phi i8* [ %final_equiv_value.i, %if.then1.i ], [ %initial_equiv_value3.i, %if.else.i ]
  %max_value.0.in.i.in = phi i8* [ %initial_equiv_value.i, %if.then1.i ], [ %final_equiv_value4.i, %if.else.i ]
  %max_value.0.in.i = bitcast i8* %max_value.0.in.i.in to %struct.rtx_def**
  %min_value.0.in.i = bitcast i8* %min_value.0.in.i.in to %struct.rtx_def**
  %max_value.0.i = load %struct.rtx_def** %max_value.0.in.i, align 8
  %min_value.0.i = load %struct.rtx_def** %min_value.0.in.i, align 8
  switch i32 %code.0.i, label %if.then20 [
    i32 111, label %sw.bb.i
    i32 110, label %sw.bb.i
    i32 107, label %sw.bb27.i
    i32 106, label %sw.bb27.i
    i32 102, label %sw.bb63.i
  ]

sw.bb.i:                                          ; preds = %if.end5.i, %if.end5.i
  %59 = getelementptr inbounds %struct.rtx_def* %min_value.0.i, i64 0, i32 0
  %bf.load.i146 = load i32* %59, align 8
  %bf.clear.i147 = and i32 %bf.load.i146, 65535
  %cmp6.i = icmp eq i32 %bf.clear.i147, 54
  br i1 %cmp6.i, label %if.then7.i, label %if.end12.i

if.then7.i:                                       ; preds = %sw.bb.i
  %rtwint10.i = getelementptr inbounds %struct.rtx_def* %min_value.0.i, i64 0, i32 1, i64 0, i32 0
  %60 = load i64* %rtwint10.i, align 8, !tbaa !25
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then7.i, %sw.bb.i
  %umin.0.i = phi i64 [ %60, %if.then7.i ], [ 0, %sw.bb.i ]
  %61 = getelementptr inbounds %struct.rtx_def* %max_value.0.i, i64 0, i32 0
  %bf.load13.i = load i32* %61, align 8
  %bf.clear14.i = and i32 %bf.load13.i, 65535
  %cmp15.i = icmp eq i32 %bf.clear14.i, 54
  br i1 %cmp15.i, label %if.then16.i, label %if.else20.i

if.then16.i:                                      ; preds = %if.end12.i
  %rtwint19.i = getelementptr inbounds %struct.rtx_def* %max_value.0.i, i64 0, i32 1, i64 0, i32 0
  %62 = load i64* %rtwint19.i, align 8, !tbaa !25
  br label %if.end25.i

if.else20.i:                                      ; preds = %if.end12.i
  %idxprom.i = sext i32 %53 to i64
  %arrayidx21.i = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom.i
  %63 = load i16* %arrayidx21.i, align 2, !tbaa !27
  %conv.i148 = zext i16 %63 to i32
  %sub22.i = add nsw i32 %conv.i148, -1
  %shl.i = shl i32 2, %sub22.i
  %sub23.i = add i32 %shl.i, -1
  %conv24.i = zext i32 %sub23.i to i64
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.else20.i, %if.then16.i
  %umax.0.i = phi i64 [ %62, %if.then16.i ], [ %conv24.i, %if.else20.i ]
  %sub26.i = sub i64 %umax.0.i, %umin.0.i
  br label %sw.epilog.i

sw.bb27.i:                                        ; preds = %if.end5.i, %if.end5.i
  %64 = getelementptr inbounds %struct.rtx_def* %min_value.0.i, i64 0, i32 0
  %bf.load28.i = load i32* %64, align 8
  %bf.clear29.i = and i32 %bf.load28.i, 65535
  %cmp30.i = icmp eq i32 %bf.clear29.i, 54
  br i1 %cmp30.i, label %if.then32.i, label %if.else36.i

if.then32.i:                                      ; preds = %sw.bb27.i
  %rtwint35.i = getelementptr inbounds %struct.rtx_def* %min_value.0.i, i64 0, i32 1, i64 0, i32 0
  %65 = load i64* %rtwint35.i, align 8, !tbaa !25
  br label %if.end44.i

if.else36.i:                                      ; preds = %sw.bb27.i
  %idxprom37.i = sext i32 %53 to i64
  %arrayidx38.i = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom37.i
  %66 = load i16* %arrayidx38.i, align 2, !tbaa !27
  %conv39.i = zext i16 %66 to i32
  %sub40.i = add nsw i32 %conv39.i, -1
  %sub42.i = shl i32 -1, %sub40.i
  %conv43.i = zext i32 %sub42.i to i64
  br label %if.end44.i

if.end44.i:                                       ; preds = %if.else36.i, %if.then32.i
  %smin.0.i = phi i64 [ %65, %if.then32.i ], [ %conv43.i, %if.else36.i ]
  %67 = getelementptr inbounds %struct.rtx_def* %max_value.0.i, i64 0, i32 0
  %bf.load45.i = load i32* %67, align 8
  %bf.clear46.i = and i32 %bf.load45.i, 65535
  %cmp47.i = icmp eq i32 %bf.clear46.i, 54
  br i1 %cmp47.i, label %if.then49.i, label %if.else53.i

if.then49.i:                                      ; preds = %if.end44.i
  %rtwint52.i = getelementptr inbounds %struct.rtx_def* %max_value.0.i, i64 0, i32 1, i64 0, i32 0
  %68 = load i64* %rtwint52.i, align 8, !tbaa !25
  br label %if.end61.i

if.else53.i:                                      ; preds = %if.end44.i
  %idxprom54.i = sext i32 %53 to i64
  %arrayidx55.i = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom54.i
  %69 = load i16* %arrayidx55.i, align 2, !tbaa !27
  %conv56.i = zext i16 %69 to i32
  %sub57.i = add nsw i32 %conv56.i, -1
  %shl58.i = shl i32 1, %sub57.i
  %sub59.i = add i32 %shl58.i, -1
  %conv60.i = zext i32 %sub59.i to i64
  br label %if.end61.i

if.end61.i:                                       ; preds = %if.else53.i, %if.then49.i
  %smax.0.i = phi i64 [ %68, %if.then49.i ], [ %conv60.i, %if.else53.i ]
  %sub62.i = sub nsw i64 %smax.0.i, %smin.0.i
  br label %sw.epilog.i

sw.bb63.i:                                        ; preds = %if.end5.i
  %70 = getelementptr inbounds %struct.rtx_def* %min_value.0.i, i64 0, i32 0
  %bf.load64.i = load i32* %70, align 8
  %bf.clear65.i = and i32 %bf.load64.i, 65535
  %cmp66.i = icmp eq i32 %bf.clear65.i, 54
  br i1 %cmp66.i, label %land.lhs.true.i149, label %if.else80.i

land.lhs.true.i149:                               ; preds = %sw.bb63.i
  %71 = getelementptr inbounds %struct.rtx_def* %max_value.0.i, i64 0, i32 0
  %bf.load68.i = load i32* %71, align 8
  %bf.clear69.i = and i32 %bf.load68.i, 65535
  %cmp70.i = icmp eq i32 %bf.clear69.i, 54
  br i1 %cmp70.i, label %if.then72.i150, label %if.else80.i

if.then72.i150:                                   ; preds = %land.lhs.true.i149
  %rtwint75.i = getelementptr inbounds %struct.rtx_def* %max_value.0.i, i64 0, i32 1, i64 0, i32 0
  %72 = load i64* %rtwint75.i, align 8, !tbaa !25
  %rtwint78.i = getelementptr inbounds %struct.rtx_def* %min_value.0.i, i64 0, i32 1, i64 0, i32 0
  %73 = load i64* %rtwint78.i, align 8, !tbaa !25
  %sub79.i = sub nsw i64 %72, %73
  br label %sw.epilog.i

if.else80.i:                                      ; preds = %land.lhs.true.i149, %sw.bb63.i
  %idxprom81.i = sext i32 %53 to i64
  %arrayidx82.i = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom81.i
  %74 = load i16* %arrayidx82.i, align 2, !tbaa !27
  %conv83.i = zext i16 %74 to i32
  %sub84.i = add nsw i32 %conv83.i, -1
  %shl85.i = shl i32 2, %sub84.i
  %sub86.i = add i32 %shl85.i, -1
  %conv87.i = zext i32 %sub86.i to i64
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.else80.i, %if.then72.i150, %if.end61.i, %if.end25.i
  %n_iterations_max.0.i = phi i64 [ %sub79.i, %if.then72.i150 ], [ %conv87.i, %if.else80.i ], [ %sub62.i, %if.end61.i ], [ %sub26.i, %if.end25.i ]
  %div.i = udiv i64 %n_iterations_max.0.i, %sub..i
  br i1 %cmp, label %doloop_iterations_max.exit, label %land.lhs.true90.i

land.lhs.true90.i:                                ; preds = %sw.epilog.i
  %idxprom91.i = sext i32 %53 to i64
  %arrayidx92.i = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom91.i
  %75 = load i16* %arrayidx92.i, align 2, !tbaa !27
  %conv93.i = zext i16 %75 to i32
  %sub94.i = add nsw i32 %conv93.i, -1
  %shl95.i = shl i32 1, %sub94.i
  %conv96.i = zext i32 %shl95.i to i64
  %cmp97.i = icmp ugt i64 %div.i, %conv96.i
  br i1 %cmp97.i, label %if.then99.i, label %doloop_iterations_max.exit

if.then99.i:                                      ; preds = %land.lhs.true90.i
  %sub105.i = add i32 %shl95.i, -1
  %conv106.i = zext i32 %sub105.i to i64
  br label %doloop_iterations_max.exit

doloop_iterations_max.exit:                       ; preds = %sw.epilog.i, %land.lhs.true90.i, %if.then99.i
  %retval.0.i151 = phi i64 [ %conv106.i, %if.then99.i ], [ %div.i, %land.lhs.true90.i ], [ %div.i, %sw.epilog.i ]
  %tobool19 = icmp eq i64 %retval.0.i151, 0
  br i1 %tobool19, label %if.then20, label %if.end26

if.then20:                                        ; preds = %if.end5.i, %doloop_iterations_max.exit
  %76 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool21 = icmp eq %struct._IO_FILE* %76, null
  br i1 %tobool21, label %return, label %if.then22

if.then22:                                        ; preds = %if.then20
  %77 = call i64 @fwrite(i8* getelementptr inbounds ([26 x i8]* @.str2, i64 0, i64 0), i64 25, i64 1, %struct._IO_FILE* %76)
  br label %return

if.end26:                                         ; preds = %if.end13, %doloop_iterations_max.exit
  %n_iterations_max.0 = phi i64 [ %retval.0.i151, %doloop_iterations_max.exit ], [ %52, %if.end13 ]
  %unroll_number = getelementptr inbounds i8* %0, i64 104
  %78 = bitcast i8* %unroll_number to i32*
  %79 = load i32* %78, align 4, !tbaa !17
  %conv27 = zext i32 %79 to i64
  %div = udiv i64 %52, %conv27
  %tobool31 = icmp ne i64 %div, 0
  %cmp32 = icmp ult i64 %div, 3
  %or.cond = and i1 %tobool31, %cmp32
  br i1 %or.cond, label %if.then34, label %if.end39

if.then34:                                        ; preds = %if.end26
  %80 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool35 = icmp eq %struct._IO_FILE* %80, null
  br i1 %tobool35, label %return, label %if.then36

if.then36:                                        ; preds = %if.then34
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([52 x i8]* @.str3, i64 0, i64 0), i64 %div) #4
  br label %return

if.end39:                                         ; preds = %if.end26
  %div30 = udiv i64 %n_iterations_max.0, %conv27
  %call40 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %div) #4
  %call41 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %div30) #4
  %call42 = call %struct.rtx_def* @gen_label_rtx() #4
  %81 = load i32* %mode, align 4, !tbaa !26
  %call43 = call %struct.rtx_def* @gen_reg_rtx(i32 %81) #4
  %level44 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 16
  %82 = load i32* %level44, align 4, !tbaa !9
  %conv45 = sext i32 %82 to i64
  %call46 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv45) #4
  %call47 = call %struct.rtx_def* @gen_doloop_end(%struct.rtx_def* %call43, %struct.rtx_def* %call40, %struct.rtx_def* %call41, %struct.rtx_def* %call46, %struct.rtx_def* %call42) #4
  %tobool48 = icmp eq %struct.rtx_def* %call47, null
  br i1 %tobool48, label %land.lhs.true49, label %if.end64

land.lhs.true49:                                  ; preds = %if.end39
  %83 = load i32* %mode, align 4, !tbaa !26
  %84 = load i32* @word_mode, align 4, !tbaa !26
  %cmp50 = icmp eq i32 %83, %84
  br i1 %cmp50, label %if.then59, label %if.end57

if.end57:                                         ; preds = %land.lhs.true49
  %85 = getelementptr inbounds %struct.rtx_def* %call43, i64 0, i32 0
  %bf.load = load i32* %85, align 8
  %bf.value = shl i32 %84, 16
  %bf.shl = and i32 %bf.value, 16711680
  %bf.clear = and i32 %bf.load, -16711681
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %85, align 8
  %86 = load i32* %level44, align 4, !tbaa !9
  %conv54 = sext i32 %86 to i64
  %call55 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv54) #4
  %call56 = call %struct.rtx_def* @gen_doloop_end(%struct.rtx_def* %call43, %struct.rtx_def* %call40, %struct.rtx_def* %call41, %struct.rtx_def* %call55, %struct.rtx_def* %call42) #4
  %tobool58 = icmp eq %struct.rtx_def* %call56, null
  br i1 %tobool58, label %if.then59, label %if.end64

if.then59:                                        ; preds = %land.lhs.true49, %if.end57
  %87 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool60 = icmp eq %struct._IO_FILE* %87, null
  br i1 %tobool60, label %return, label %if.then61

if.then61:                                        ; preds = %if.then59
  %88 = call i64 @fwrite(i8* getelementptr inbounds ([49 x i8]* @.str4, i64 0, i64 0), i64 48, i64 1, %struct._IO_FILE* %87)
  br label %return

if.end64:                                         ; preds = %if.end39, %if.end57
  %doloop_seq.0182 = phi %struct.rtx_def* [ %call56, %if.end57 ], [ %call47, %if.end39 ]
  %89 = getelementptr inbounds %struct.rtx_def* %doloop_seq.0182, i64 0, i32 0
  %bf.load65 = load i32* %89, align 8
  %bf.clear66 = and i32 %bf.load65, 65535
  %cmp67 = icmp eq i32 %bf.clear66, 24
  br i1 %cmp67, label %if.then69, label %lor.lhs.false

if.then69:                                        ; preds = %if.end64
  %arrayidx = getelementptr inbounds %struct.rtx_def* %doloop_seq.0182, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %90 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !7
  %num_elem = getelementptr inbounds %struct.rtvec_def* %90, i64 0, i32 0
  %91 = load i32* %num_elem, align 4, !tbaa !29
  %sub = add nsw i32 %91, -1
  %idxprom = sext i32 %sub to i64
  %arrayidx73 = getelementptr inbounds %struct.rtvec_def* %90, i64 0, i32 1, i64 %idxprom
  %92 = load %struct.rtx_def** %arrayidx73, align 8, !tbaa !7
  %93 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 0
  %bf.load74 = load i32* %93, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  %cmp76 = icmp eq i32 %bf.clear75, 33
  br i1 %cmp76, label %if.end84, label %if.then88

if.end84:                                         ; preds = %if.then69
  %arrayidx80 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %94 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %tobool85 = icmp eq %struct.rtx_def* %94, null
  br i1 %tobool85, label %if.then88, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end64, %if.end84
  %doloop_pat.0187 = phi %struct.rtx_def* [ %94, %if.end84 ], [ %doloop_seq.0182, %if.end64 ]
  %95 = getelementptr inbounds %struct.rtx_def* %doloop_pat.0187, i64 0, i32 0
  %bf.load.i152 = load i32* %95, align 8
  %bf.clear.i153 = and i32 %bf.load.i152, 65535
  %cmp1.i = icmp eq i32 %bf.clear.i153, 39
  br i1 %cmp1.i, label %if.end.i, label %if.then88

if.end.i:                                         ; preds = %lor.lhs.false
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %doloop_pat.0187, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtvec_def**
  %96 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !7
  %arrayidx2.i = getelementptr inbounds %struct.rtvec_def* %96, i64 0, i32 1, i64 0
  %97 = load %struct.rtx_def** %arrayidx2.i, align 8, !tbaa !7
  %arrayidx7.i = getelementptr inbounds %struct.rtvec_def* %96, i64 0, i32 1, i64 1
  %98 = load %struct.rtx_def** %arrayidx7.i, align 8, !tbaa !7
  %99 = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 0
  %bf.load8.i = load i32* %99, align 8
  %bf.clear9.i = and i32 %bf.load8.i, 65535
  %cmp10.i = icmp eq i32 %bf.clear9.i, 47
  br i1 %cmp10.i, label %lor.lhs.false.i157, label %if.then88

lor.lhs.false.i157:                               ; preds = %if.end.i
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %98, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx12.i to %struct.rtx_def**
  %100 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !7
  %101 = getelementptr inbounds %struct.rtx_def* %100, i64 0, i32 0
  %bf.load13.i154 = load i32* %101, align 8
  %bf.clear14.i155 = and i32 %bf.load13.i154, 65535
  %cmp15.i156 = icmp eq i32 %bf.clear14.i155, 61
  br i1 %cmp15.i156, label %if.end17.i, label %if.then88

if.end17.i:                                       ; preds = %lor.lhs.false.i157
  %102 = getelementptr inbounds %struct.rtx_def* %97, i64 0, i32 0
  %bf.load21.i = load i32* %102, align 8
  %bf.clear22.i = and i32 %bf.load21.i, 65535
  %cmp23.i = icmp eq i32 %bf.clear22.i, 47
  br i1 %cmp23.i, label %lor.lhs.false24.i, label %if.then88

lor.lhs.false24.i:                                ; preds = %if.end17.i
  %fld25.i = getelementptr inbounds %struct.rtx_def* %97, i64 0, i32 1
  %rtx27.i = bitcast [1 x %union.rtunion_def]* %fld25.i to %struct.rtx_def**
  %103 = load %struct.rtx_def** %rtx27.i, align 8, !tbaa !7
  %104 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !7
  %cmp28.i = icmp eq %struct.rtx_def* %103, %104
  br i1 %cmp28.i, label %lor.lhs.false29.i, label %if.then88

lor.lhs.false29.i:                                ; preds = %lor.lhs.false24.i
  %arrayidx31.i = getelementptr inbounds %struct.rtx_def* %97, i64 0, i32 1, i64 1
  %rtx32.i = bitcast %union.rtunion_def* %arrayidx31.i to %struct.rtx_def**
  %105 = load %struct.rtx_def** %rtx32.i, align 8, !tbaa !7
  %106 = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 0
  %bf.load33.i = load i32* %106, align 8
  %bf.clear34.i = and i32 %bf.load33.i, 65535
  %cmp35.i = icmp eq i32 %bf.clear34.i, 72
  br i1 %cmp35.i, label %lor.lhs.false36.i, label %if.then88

lor.lhs.false36.i:                                ; preds = %lor.lhs.false29.i
  %arrayidx41.i = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 1, i64 1
  %rtx42.i = bitcast %union.rtunion_def* %arrayidx41.i to %struct.rtx_def**
  %107 = load %struct.rtx_def** %rtx42.i, align 8, !tbaa !7
  %108 = getelementptr inbounds %struct.rtx_def* %107, i64 0, i32 0
  %bf.load43.i = load i32* %108, align 8
  %bf.clear44.i = and i32 %bf.load43.i, 65535
  %cmp45.i = icmp eq i32 %bf.clear44.i, 67
  br i1 %cmp45.i, label %lor.lhs.false46.i, label %if.then88

lor.lhs.false46.i:                                ; preds = %lor.lhs.false36.i
  %arrayidx51.i = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 1, i64 2
  %rtx52.i = bitcast %union.rtunion_def* %arrayidx51.i to %struct.rtx_def**
  %109 = load %struct.rtx_def** %rtx52.i, align 8, !tbaa !7
  %cmp53.i = icmp eq %struct.rtx_def* %109, %103
  br i1 %cmp53.i, label %if.end55.i, label %if.then88

if.end55.i:                                       ; preds = %lor.lhs.false46.i
  %arrayidx60.i = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 1, i64 0
  %rtx61.i = bitcast %union.rtunion_def* %arrayidx60.i to %struct.rtx_def**
  %110 = load %struct.rtx_def** %rtx61.i, align 8, !tbaa !7
  %111 = getelementptr inbounds %struct.rtx_def* %110, i64 0, i32 0
  %bf.load62.i = load i32* %111, align 8
  %bf.clear63.i = and i32 %bf.load62.i, 65535
  switch i32 %bf.clear63.i, label %if.then88 [
    i32 104, label %lor.lhs.false68.i
    i32 102, label %lor.lhs.false68.i
  ]

lor.lhs.false68.i:                                ; preds = %if.end55.i, %if.end55.i
  %arrayidx70.i = getelementptr inbounds %struct.rtx_def* %110, i64 0, i32 1, i64 1
  %rtx71.i = bitcast %union.rtunion_def* %arrayidx70.i to %struct.rtx_def**
  %112 = load %struct.rtx_def** %rtx71.i, align 8, !tbaa !7
  %113 = getelementptr inbounds %struct.rtx_def* %112, i64 0, i32 0
  %bf.load72.i = load i32* %113, align 8
  %bf.clear73.i = and i32 %bf.load72.i, 65535
  %cmp74.i = icmp eq i32 %bf.clear73.i, 54
  br i1 %cmp74.i, label %if.end76.i, label %if.then88

if.end76.i:                                       ; preds = %lor.lhs.false68.i
  %arrayidx78.i = getelementptr inbounds %struct.rtx_def* %110, i64 0, i32 1, i64 0
  %rtx79.i = bitcast %union.rtunion_def* %arrayidx78.i to %struct.rtx_def**
  %114 = load %struct.rtx_def** %rtx79.i, align 8, !tbaa !7
  %cmp80.i = icmp eq %struct.rtx_def* %114, %100
  br i1 %cmp80.i, label %doloop_condition_get.exit, label %if.end82.i

if.end82.i:                                       ; preds = %if.end76.i
  %115 = getelementptr inbounds %struct.rtx_def* %114, i64 0, i32 0
  %bf.load86.i = load i32* %115, align 8
  %bf.clear87.i = and i32 %bf.load86.i, 65535
  %cmp88.i = icmp eq i32 %bf.clear87.i, 75
  br i1 %cmp88.i, label %land.lhs.true89.i, label %if.then88

land.lhs.true89.i:                                ; preds = %if.end82.i
  %arrayidx94.i = getelementptr inbounds %struct.rtx_def* %114, i64 0, i32 1, i64 0
  %rtx95.i = bitcast %union.rtunion_def* %arrayidx94.i to %struct.rtx_def**
  %116 = load %struct.rtx_def** %rtx95.i, align 8, !tbaa !7
  %cmp96.i = icmp ne %struct.rtx_def* %116, %100
  %tobool87 = icmp eq %struct.rtx_def* %110, null
  %or.cond185 = or i1 %cmp96.i, %tobool87
  br i1 %or.cond185, label %if.then88, label %if.end93

doloop_condition_get.exit:                        ; preds = %if.end76.i
  %tobool87.old = icmp eq %struct.rtx_def* %110, null
  br i1 %tobool87.old, label %if.then88, label %if.end93

if.then88:                                        ; preds = %land.lhs.true89.i, %if.end82.i, %lor.lhs.false68.i, %if.end55.i, %if.end17.i, %lor.lhs.false24.i, %lor.lhs.false29.i, %lor.lhs.false36.i, %lor.lhs.false46.i, %lor.lhs.false.i157, %if.end.i, %lor.lhs.false, %if.then69, %doloop_condition_get.exit, %if.end84
  %117 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool89 = icmp eq %struct._IO_FILE* %117, null
  br i1 %tobool89, label %return, label %if.then90

if.then90:                                        ; preds = %if.then88
  %118 = call i64 @fwrite(i8* getelementptr inbounds ([40 x i8]* @.str5, i64 0, i64 0), i64 39, i64 1, %struct._IO_FILE* %117)
  br label %return

if.end93:                                         ; preds = %land.lhs.true89.i, %doloop_condition_get.exit
  br i1 %tobool31, label %if.then96, label %if.else98

if.then96:                                        ; preds = %if.end93
  call fastcc void @doloop_modify(%struct.loop* %loop, %struct.rtx_def* %call40, %struct.rtx_def* %call41, %struct.rtx_def* %doloop_seq.0182, %struct.rtx_def* %call42, %struct.rtx_def* %110)
  br label %return

if.else98:                                        ; preds = %if.end93
  %119 = load i32* %mode, align 4, !tbaa !26
  %120 = load i8** %aux, align 8, !tbaa !1
  %increment1.i = getelementptr inbounds i8* %120, i64 80
  %121 = bitcast i8* %increment1.i to %struct.rtx_def**
  %122 = load %struct.rtx_def** %121, align 8, !tbaa !23
  %initial_value2.i = getelementptr inbounds i8* %120, i64 32
  %123 = bitcast i8* %initial_value2.i to %struct.rtx_def**
  %124 = load %struct.rtx_def** %123, align 8, !tbaa !31
  %final_value3.i = getelementptr inbounds i8* %120, i64 48
  %125 = bitcast i8* %final_value3.i to %struct.rtx_def**
  %126 = load %struct.rtx_def** %125, align 8, !tbaa !32
  %rtwint.i160 = getelementptr inbounds %struct.rtx_def* %122, i64 0, i32 1, i64 0, i32 0
  %127 = load i64* %rtwint.i160, align 8, !tbaa !25
  %cmp.i161 = icmp slt i64 %127, 0
  %sub.i162 = sub nsw i64 0, %127
  %sub..i163 = select i1 %cmp.i161, i64 %sub.i162, i64 %127
  %comparison_code4.i = getelementptr inbounds i8* %120, i64 88
  %128 = bitcast i8* %comparison_code4.i to i32*
  %129 = load i32* %128, align 4, !tbaa !24
  %switch.tableidx.i = add i32 %129, -102
  %130 = icmp ult i32 %switch.tableidx.i, 10
  br i1 %130, label %switch.lookup.i, label %lor.end.i

switch.lookup.i:                                  ; preds = %if.else98
  %switch.cast.i = trunc i32 %switch.tableidx.i to i10
  %switch.downshift.i = lshr i10 -63, %switch.cast.i
  %switch.masked.i = zext i10 %switch.downshift.i to i32
  %phitmp.i = and i32 %switch.masked.i, 1
  br label %lor.end.i

lor.end.i:                                        ; preds = %switch.lookup.i, %if.else98
  %131 = phi i32 [ %phitmp.i, %switch.lookup.i ], [ 0, %if.else98 ]
  call void @start_sequence() #4
  %cond.i = select i1 %cmp.i161, %struct.rtx_def* %124, %struct.rtx_def* %126
  %call.i164 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %cond.i) #4
  %cond16.i = select i1 %cmp.i161, %struct.rtx_def* %126, %struct.rtx_def* %124
  %call17.i = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %cond16.i) #4
  %call18.i = call %struct.rtx_def* @expand_simple_binop(i32 %119, i32 76, %struct.rtx_def* %call.i164, %struct.rtx_def* %call17.i, %struct.rtx_def* null, i32 %131, i32 3) #4
  %scan_start.i = getelementptr inbounds %struct.loop* %loop, i64 0, i32 29
  %132 = load %struct.rtx_def** %scan_start.i, align 8, !tbaa !33
  %tobool19.i = icmp eq %struct.rtx_def* %132, null
  br i1 %tobool19.i, label %if.end105.i, label %if.then20.i

if.then20.i:                                      ; preds = %lor.end.i
  %iteration_var21.i = getelementptr inbounds i8* %120, i64 72
  %133 = bitcast i8* %iteration_var21.i to %struct.rtx_def**
  %134 = load %struct.rtx_def** %133, align 8, !tbaa !34
  %135 = load i8** %aux, align 8, !tbaa !1
  %ivs23.i = getelementptr inbounds i8* %135, i64 208
  %arrayidx25.i = getelementptr inbounds %struct.rtx_def* %134, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx25.i to i32*
  %136 = load i32* %rtuint.i, align 4, !tbaa !35
  %idxprom.i165 = zext i32 %136 to i64
  %regs.i = bitcast i8* %ivs23.i to %struct.iv**
  %137 = load %struct.iv** %regs.i, align 8, !tbaa !36
  %type.i = getelementptr inbounds %struct.iv* %137, i64 %idxprom.i165, i32 0
  %138 = load i32* %type.i, align 4, !tbaa !37
  switch i32 %138, label %if.else59.i [
    i32 1, label %if.end61.i167
    i32 3, label %if.then43.i
  ]

if.then43.i:                                      ; preds = %if.then20.i
  %iv50.i = getelementptr inbounds %struct.iv* %137, i64 %idxprom.i165, i32 1
  %info.i = bitcast %union.anon* %iv50.i to %struct.induction**
  %139 = load %struct.induction** %info.i, align 8, !tbaa !7
  %src_reg.i = getelementptr inbounds %struct.induction* %139, i64 0, i32 2
  %140 = load %struct.rtx_def** %src_reg.i, align 8, !tbaa !39
  %arrayidx52.i = getelementptr inbounds %struct.rtx_def* %140, i64 0, i32 1, i64 0
  %rtuint53.i = bitcast %union.rtunion_def* %arrayidx52.i to i32*
  %141 = load i32* %rtuint53.i, align 4, !tbaa !35
  %idxprom54.i166 = zext i32 %141 to i64
  br label %if.end61.i167

if.else59.i:                                      ; preds = %if.then20.i
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 652, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.doloop_modify_runtime, i64 0, i64 0)) #5
  unreachable

if.end61.i167:                                    ; preds = %if.then43.i, %if.then20.i
  %idxprom.pn.i = phi i64 [ %idxprom54.i166, %if.then43.i ], [ %idxprom.i165, %if.then20.i ]
  %bl.0.in.i = getelementptr inbounds %struct.iv* %137, i64 %idxprom.pn.i, i32 1, i32 0
  %bl.0.i = load %struct.iv_class** %bl.0.in.i, align 8
  %biv.i = getelementptr inbounds %struct.iv_class* %bl.0.i, i64 0, i32 2
  %142 = load %struct.induction** %biv.i, align 8, !tbaa !41
  %insn.i = getelementptr inbounds %struct.induction* %142, i64 0, i32 0
  %143 = load %struct.rtx_def** %insn.i, align 8, !tbaa !43
  %arrayidx63.i = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx63.i to i32*
  %144 = load i32* %rtint.i, align 4, !tbaa !35
  %145 = load i32* @max_uid_for_loop, align 4, !tbaa !35
  %cmp64.i = icmp slt i32 %144, %145
  br i1 %cmp64.i, label %cond.true71.i, label %if.end105.i

cond.true71.i:                                    ; preds = %if.end61.i167
  %146 = load i32** @uid_luid, align 8, !tbaa !7
  %arrayidx84.i = getelementptr inbounds %struct.rtx_def* %132, i64 0, i32 1, i64 0
  %rtint85.i = bitcast %union.rtunion_def* %arrayidx84.i to i32*
  %147 = load i32* %rtint85.i, align 4, !tbaa !35
  %cmp86.i = icmp slt i32 %147, %145
  br i1 %cmp86.i, label %cond.true87.i, label %cond.false94.i

cond.true87.i:                                    ; preds = %cond.true71.i
  %idxprom77.i = sext i32 %144 to i64
  %arrayidx78.i168 = getelementptr inbounds i32* %146, i64 %idxprom77.i
  %148 = load i32* %arrayidx78.i168, align 4, !tbaa !35
  %idxprom92.i = sext i32 %147 to i64
  %arrayidx93.i = getelementptr inbounds i32* %146, i64 %idxprom92.i
  %149 = load i32* %arrayidx93.i, align 4, !tbaa !35
  %cmp97.i169 = icmp slt i32 %148, %149
  br i1 %cmp97.i169, label %if.then98.i, label %if.end105.i

cond.false94.i:                                   ; preds = %cond.true71.i
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.doloop_modify_runtime, i64 0, i64 0)) #5
  unreachable

if.then98.i:                                      ; preds = %cond.true87.i
  %150 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool99.i = icmp eq %struct._IO_FILE* %150, null
  br i1 %tobool99.i, label %if.end102.i, label %if.then100.i

if.then100.i:                                     ; preds = %if.then98.i
  %151 = call i64 @fwrite(i8* getelementptr inbounds ([49 x i8]* @.str7, i64 0, i64 0), i64 48, i64 1, %struct._IO_FILE* %150) #4
  br label %if.end102.i

if.end102.i:                                      ; preds = %if.then100.i, %if.then98.i
  %call103.i = call %struct.rtx_def* @expand_simple_binop(i32 %119, i32 75, %struct.rtx_def* %call18.i, %struct.rtx_def* %122, %struct.rtx_def* %call18.i, i32 %131, i32 3) #4
  br label %if.end105.i

if.end105.i:                                      ; preds = %if.end102.i, %cond.true87.i, %if.end61.i167, %lor.end.i
  %diff.0.i = phi %struct.rtx_def* [ %call103.i, %if.end102.i ], [ %call18.i, %cond.true87.i ], [ %call18.i, %if.end61.i167 ], [ %call18.i, %lor.end.i ]
  %unroll_number.i170 = getelementptr inbounds i8* %120, i64 104
  %152 = bitcast i8* %unroll_number.i170 to i32*
  %153 = load i32* %152, align 4, !tbaa !17
  %conv.i171 = zext i32 %153 to i64
  %mul.i = mul nsw i64 %conv.i171, %sub..i163
  %cmp106.i = icmp eq i64 %mul.i, 1
  br i1 %cmp106.i, label %if.end158.i, label %if.then108.i

if.then108.i:                                     ; preds = %if.end105.i
  %call112.i = call i32 @exact_log2_wide(i64 %mul.i) #4
  %cmp113.i = icmp slt i32 %call112.i, 0
  br i1 %cmp113.i, label %if.then115.i, label %if.end116.i

if.then115.i:                                     ; preds = %if.then108.i
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 675, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.doloop_modify_runtime, i64 0, i64 0)) #5
  unreachable

if.end116.i:                                      ; preds = %if.then108.i
  %154 = getelementptr inbounds %struct.rtx_def* %diff.0.i, i64 0, i32 0
  %bf.load.i172 = load i32* %154, align 8
  %bf.lshr.i = lshr i32 %bf.load.i172, 16
  %bf.clear.i173 = and i32 %bf.lshr.i, 255
  %conv117.i = sext i32 %call112.i to i64
  %call118.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv117.i) #4
  %call119.i = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear.i173, i32 90, %struct.rtx_def* %diff.0.i, %struct.rtx_def* %call118.i, %struct.rtx_def* null, i32 1, i32 3) #4
  %cmp120.i = icmp eq i64 %sub..i163, 1
  br i1 %cmp120.i, label %if.end158.i, label %if.then122.i

if.then122.i:                                     ; preds = %if.end116.i
  %155 = load i32* %152, align 4, !tbaa !17
  %conv124.i = zext i32 %155 to i64
  %mul125.i = mul nsw i64 %conv124.i, %sub..i163
  %sub126.i = add nsw i64 %mul125.i, -1
  %call127.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub126.i) #4
  %156 = getelementptr inbounds %struct.rtx_def* %call119.i, i64 0, i32 0
  %bf.load128.i = load i32* %156, align 8
  %bf.lshr129.i = lshr i32 %bf.load128.i, 16
  %bf.clear130.i = and i32 %bf.lshr129.i, 255
  %call131.i = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear130.i, i32 83, %struct.rtx_def* %diff.0.i, %struct.rtx_def* %call127.i, %struct.rtx_def* null, i32 1, i32 3) #4
  %call132.i = call %struct.rtx_def* @gen_label_rtx() #4
  %157 = load i32* %152, align 4, !tbaa !17
  %sub134.i = add i32 %157, -1
  %conv135.i = zext i32 %sub134.i to i64
  %mul136.i = mul nsw i64 %conv135.i, %sub..i163
  %call137.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %mul136.i) #4
  %cmp138.i = icmp eq i64 %mul136.i, 0
  %cond140.i = select i1 %cmp138.i, i32 103, i32 110
  %158 = getelementptr inbounds %struct.rtx_def* %call131.i, i64 0, i32 0
  %bf.load141.i = load i32* %158, align 8
  %bf.lshr142.i = lshr i32 %bf.load141.i, 16
  %bf.clear143.i = and i32 %bf.lshr142.i, 255
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call131.i, %struct.rtx_def* %call137.i, i32 %cond140.i, %struct.rtx_def* null, i32 %bf.clear143.i, i32 0, %struct.rtx_def* %call132.i) #4
  %call144.i = call %struct.rtx_def* @get_last_insn() #4
  %159 = getelementptr inbounds %struct.rtx_def* %call144.i, i64 0, i32 1, i64 7, i32 0
  %call132.c.i = ptrtoint %struct.rtx_def* %call132.i to i64
  store i64 %call132.c.i, i64* %159, align 8, !tbaa !7
  %arrayidx148.i = getelementptr inbounds %struct.rtx_def* %call132.i, i64 0, i32 1, i64 3
  %rtint149.i = bitcast %union.rtunion_def* %arrayidx148.i to i32*
  %160 = load i32* %rtint149.i, align 4, !tbaa !35
  %inc.i = add nsw i32 %160, 1
  store i32 %inc.i, i32* %rtint149.i, align 4, !tbaa !35
  %bf.load150.i = load i32* %156, align 8
  %bf.lshr151.i = lshr i32 %bf.load150.i, 16
  %bf.clear152.i = and i32 %bf.lshr151.i, 255
  %call153.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #4
  %call154.i = call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear152.i, i32 75, %struct.rtx_def* %call119.i, %struct.rtx_def* %call153.i, %struct.rtx_def* %call119.i, i32 1, i32 3) #4
  %call155.i = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call132.i) #4
  br label %if.end158.i

if.end158.i:                                      ; preds = %if.then122.i, %if.end116.i, %if.end105.i
  %iterations.0.i = phi %struct.rtx_def* [ %call154.i, %if.then122.i ], [ %call119.i, %if.end116.i ], [ %diff.0.i, %if.end105.i ]
  %vtop.i = getelementptr inbounds %struct.loop* %loop, i64 0, i32 23
  %161 = load %struct.rtx_def** %vtop.i, align 8, !tbaa !44
  %tobool159.i = icmp eq %struct.rtx_def* %161, null
  br i1 %tobool159.i, label %if.then160.i, label %doloop_modify_runtime.exit

if.then160.i:                                     ; preds = %if.end158.i
  %162 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool162.i = icmp eq %struct._IO_FILE* %162, null
  br i1 %tobool162.i, label %if.end165.i, label %if.then163.i

if.then163.i:                                     ; preds = %if.then160.i
  %163 = call i64 @fwrite(i8* getelementptr inbounds ([24 x i8]* @.str8, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %162) #4
  br label %if.end165.i

if.end165.i:                                      ; preds = %if.then163.i, %if.then160.i
  %164 = load i32* %152, align 4, !tbaa !17
  %cmp167.i = icmp eq i32 %164, 1
  br i1 %cmp167.i, label %if.then169.i, label %doloop_modify_runtime.exit

if.then169.i:                                     ; preds = %if.end165.i
  %call170.i = call %struct.rtx_def* @gen_label_rtx() #4
  %call171.i = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %124) #4
  %comparison_value.i = getelementptr inbounds i8* %120, i64 40
  %165 = bitcast i8* %comparison_value.i to %struct.rtx_def**
  %166 = load %struct.rtx_def** %165, align 8, !tbaa !45
  %call172.i = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %166) #4
  call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call171.i, %struct.rtx_def* %call172.i, i32 %129, %struct.rtx_def* null, i32 %119, i32 0, %struct.rtx_def* %call170.i) #4
  %call173.i = call %struct.rtx_def* @get_last_insn() #4
  %167 = getelementptr inbounds %struct.rtx_def* %call173.i, i64 0, i32 1, i64 7, i32 0
  %call170.c.i = ptrtoint %struct.rtx_def* %call170.i to i64
  store i64 %call170.c.i, i64* %167, align 8, !tbaa !7
  %arrayidx178.i = getelementptr inbounds %struct.rtx_def* %call170.i, i64 0, i32 1, i64 3
  %rtint179.i = bitcast %union.rtunion_def* %arrayidx178.i to i32*
  %168 = load i32* %rtint179.i, align 4, !tbaa !35
  %inc180.i = add nsw i32 %168, 1
  store i32 %inc180.i, i32* %rtint179.i, align 4, !tbaa !35
  %169 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !7
  %call181.i = call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %iterations.0.i, %struct.rtx_def* %169) #4
  %call182.i = call %struct.rtx_def* @emit_label(%struct.rtx_def* %call170.i) #4
  br label %doloop_modify_runtime.exit

doloop_modify_runtime.exit:                       ; preds = %if.end158.i, %if.end165.i, %if.then169.i
  %call185.i = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  %start.i = getelementptr inbounds %struct.loop* %loop, i64 0, i32 26
  %170 = load %struct.rtx_def** %start.i, align 8, !tbaa !46
  %call186.i = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call185.i, %struct.rtx_def* %170) #4
  call fastcc void @doloop_modify(%struct.loop* %loop, %struct.rtx_def* %iterations.0.i, %struct.rtx_def* %call41, %struct.rtx_def* %doloop_seq.0182, %struct.rtx_def* %call42, %struct.rtx_def* %110) #4
  br label %return

return:                                           ; preds = %if.then74.i, %if.then72.i, %if.then56.i, %if.then54.i, %if.then47.i, %if.then45.i, %if.then40.i, %if.then38.i, %if.then33.i, %if.then31.i, %if.then26.i, %if.then24.i, %if.then19.i, %if.then17.i, %if.then10.i, %if.then8.i, %if.then4.i, %if.then.i, %if.then90, %if.then88, %if.then61, %if.then59, %if.then36, %if.then34, %if.then22, %if.then20, %if.then10, %if.then8, %doloop_modify_runtime.exit, %if.then96
  %retval.0 = phi i32 [ 1, %if.then96 ], [ 1, %doloop_modify_runtime.exit ], [ 0, %if.then8 ], [ 0, %if.then10 ], [ 0, %if.then20 ], [ 0, %if.then22 ], [ 0, %if.then34 ], [ 0, %if.then36 ], [ 0, %if.then59 ], [ 0, %if.then61 ], [ 0, %if.then88 ], [ 0, %if.then90 ], [ 0, %if.then.i ], [ 0, %if.then4.i ], [ 0, %if.then8.i ], [ 0, %if.then10.i ], [ 0, %if.then17.i ], [ 0, %if.then19.i ], [ 0, %if.then24.i ], [ 0, %if.then26.i ], [ 0, %if.then31.i ], [ 0, %if.then33.i ], [ 0, %if.then38.i ], [ 0, %if.then40.i ], [ 0, %if.then45.i ], [ 0, %if.then47.i ], [ 0, %if.then54.i ], [ 0, %if.then56.i ], [ 0, %if.then72.i ], [ 0, %if.then74.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1

declare %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #2

declare i32 @precondition_loop_p(%struct.loop*, %struct.rtx_def**, %struct.rtx_def**, %struct.rtx_def**, i32*) #2

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

declare %struct.rtx_def* @gen_label_rtx() #2

declare %struct.rtx_def* @gen_reg_rtx(i32) #2

declare %struct.rtx_def* @gen_doloop_end(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @doloop_modify(%struct.loop* nocapture readonly %loop, %struct.rtx_def* %iterations, %struct.rtx_def* nocapture readonly %iterations_max, %struct.rtx_def* %doloop_seq, %struct.rtx_def* %start_label, %struct.rtx_def* nocapture readonly %condition) #0 {
entry:
  %end = getelementptr inbounds %struct.loop* %loop, i64 0, i32 27
  %0 = load %struct.rtx_def** %end, align 8, !tbaa !10
  %call = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %0) #4
  %1 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %tobool = icmp eq %struct._IO_FILE* %1, null
  br i1 %tobool, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str9, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %1)
  %3 = getelementptr inbounds %struct.rtx_def* %iterations, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  %4 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  br i1 %cmp, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %rtwint = getelementptr inbounds %struct.rtx_def* %iterations, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint, align 8, !tbaa !25
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8]* @.str10, i64 0, i64 0), i64 %5) #4
  br label %if.end

if.else:                                          ; preds = %if.then
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str11, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %4)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %7 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !7
  %8 = tail call i64 @fwrite(i8* getelementptr inbounds ([14 x i8]* @.str12, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %7)
  br label %if.end6

if.end6:                                          ; preds = %entry, %if.end
  %top = getelementptr inbounds %struct.loop* %loop, i64 0, i32 28
  %9 = load %struct.rtx_def** %top, align 8, !tbaa !47
  %tobool7 = icmp eq %struct.rtx_def* %9, null
  br i1 %tobool7, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.end6
  %start = getelementptr inbounds %struct.loop* %loop, i64 0, i32 26
  %10 = load %struct.rtx_def** %start, align 8, !tbaa !46
  br label %cond.end

cond.end:                                         ; preds = %if.end6, %cond.false
  %cond = phi %struct.rtx_def* [ %10, %cond.false ], [ %9, %if.end6 ]
  %call9 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %start_label, %struct.rtx_def* %cond) #4
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %start_label, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %11 = load i32* %rtint, align 4, !tbaa !35
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %rtint, align 4, !tbaa !35
  %call12 = tail call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %call) #4
  %fld13 = getelementptr inbounds %struct.rtx_def* %condition, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld13 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !7
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load15 = load i32* %13, align 8
  %bf.clear16 = and i32 %bf.load15, 65535
  %cmp17 = icmp eq i32 %bf.clear16, 75
  br i1 %cmp17, label %if.then18, label %if.end22

if.then18:                                        ; preds = %cond.end
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx21, align 8, !tbaa !7
  br label %if.end22

if.end22:                                         ; preds = %if.then18, %cond.end
  %counter_reg.0 = phi %struct.rtx_def* [ %14, %if.then18 ], [ %12, %cond.end ]
  tail call void @start_sequence() #4
  %15 = getelementptr inbounds %struct.rtx_def* %condition, i64 0, i32 0
  %bf.load23 = load i32* %15, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  switch i32 %bf.clear24, label %sw.default [
    i32 102, label %sw.bb
    i32 104, label %sw.bb38
  ]

sw.bb:                                            ; preds = %if.end22
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %condition, i64 0, i32 1, i64 1
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx27, align 8, !tbaa !7
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !7
  %cmp28 = icmp eq %struct.rtx_def* %16, %17
  br i1 %cmp28, label %if.then57, label %if.else30

if.else30:                                        ; preds = %sw.bb
  %18 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !7
  %cmp34 = icmp eq %struct.rtx_def* %16, %18
  br i1 %cmp34, label %if.end75, label %if.then35

if.then35:                                        ; preds = %if.else30
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 458, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.doloop_modify, i64 0, i64 0)) #5
  unreachable

sw.bb38:                                          ; preds = %if.end22
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %condition, i64 0, i32 1, i64 1
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx41, align 8, !tbaa !7
  %20 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !7
  %cmp42 = icmp eq %struct.rtx_def* %19, %20
  br i1 %cmp42, label %if.end44, label %if.then43

if.then43:                                        ; preds = %sw.bb38
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 464, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.doloop_modify, i64 0, i64 0)) #5
  unreachable

if.end44:                                         ; preds = %sw.bb38
  %rtwint47 = getelementptr inbounds %struct.rtx_def* %iterations_max, i64 0, i32 1, i64 0, i32 0
  %21 = load i64* %rtwint47, align 8, !tbaa !25
  %22 = getelementptr inbounds %struct.rtx_def* %counter_reg.0, i64 0, i32 0
  %bf.load48 = load i32* %22, align 8
  %bf.lshr = lshr i32 %bf.load48, 16
  %bf.clear49 = and i32 %bf.lshr, 255
  %idxprom1 = zext i32 %bf.clear49 to i64
  %arrayidx50 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom1
  %23 = load i16* %arrayidx50, align 2, !tbaa !27
  %conv = zext i16 %23 to i32
  %sub = add nsw i32 %conv, -1
  %shl = shl i32 1, %sub
  %conv51 = zext i32 %shl to i64
  %not.cmp52 = icmp ule i64 %21, %conv51
  %. = zext i1 %not.cmp52 to i32
  br label %if.then57

sw.default:                                       ; preds = %if.end22
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.doloop_modify, i64 0, i64 0)) #5
  unreachable

if.then57:                                        ; preds = %sw.bb, %if.end44
  %nonneg.0.ph = phi i32 [ 0, %sw.bb ], [ %., %if.end44 ]
  %24 = getelementptr inbounds %struct.rtx_def* %iterations, i64 0, i32 0
  %bf.load58 = load i32* %24, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp eq i32 %bf.clear59, 54
  br i1 %cmp60, label %if.then62, label %if.else68

if.then62:                                        ; preds = %if.then57
  %rtwint65 = getelementptr inbounds %struct.rtx_def* %iterations, i64 0, i32 1, i64 0, i32 0
  %25 = load i64* %rtwint65, align 8, !tbaa !25
  %sub66 = add nsw i64 %25, -1
  %call67 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub66) #4
  br label %if.end75

if.else68:                                        ; preds = %if.then57
  %26 = getelementptr inbounds %struct.rtx_def* %counter_reg.0, i64 0, i32 0
  %bf.load69 = load i32* %26, align 8
  %bf.lshr70 = lshr i32 %bf.load69, 16
  %bf.clear71 = and i32 %bf.lshr70, 255
  %call72 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 1) #4
  %call73 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear71, i32 76, %struct.rtx_def* %iterations, %struct.rtx_def* %call72, %struct.rtx_def* null, i32 0, i32 3) #4
  br label %if.end75

if.end75:                                         ; preds = %if.else30, %if.then62, %if.else68
  %nonneg.02 = phi i32 [ %nonneg.0.ph, %if.then62 ], [ %nonneg.0.ph, %if.else68 ], [ 0, %if.else30 ]
  %count.0 = phi %struct.rtx_def* [ %call67, %if.then62 ], [ %call73, %if.else68 ], [ %iterations, %if.else30 ]
  tail call void @convert_move(%struct.rtx_def* %counter_reg.0, %struct.rtx_def* %count.0, i32 1) #4
  %call76 = tail call %struct.rtx_def* @gen_sequence() #4
  tail call void @end_sequence() #4
  %start77 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 26
  %27 = load %struct.rtx_def** %start77, align 8, !tbaa !46
  %call78 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call76, %struct.rtx_def* %27) #4
  %28 = load %struct.rtx_def** %end, align 8, !tbaa !10
  %call80 = tail call %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def* %doloop_seq, %struct.rtx_def* %28) #4
  %29 = load %struct.rtx_def** %end, align 8, !tbaa !10
  %call82 = tail call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %29) #4
  %30 = getelementptr inbounds %struct.rtx_def* %call82, i64 0, i32 1, i64 7, i32 0
  %start_label.c = ptrtoint %struct.rtx_def* %start_label to i64
  store i64 %start_label.c, i64* %30, align 8, !tbaa !7
  %tobool86 = icmp eq i32 %nonneg.02, 0
  br i1 %tobool86, label %if.end95, label %if.then87

if.then87:                                        ; preds = %if.end75
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %call82, i64 0, i32 1, i64 6
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx90, align 8, !tbaa !7
  %call91 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 8, %struct.rtx_def* null, %struct.rtx_def* %31) #4
  %32 = getelementptr inbounds %union.rtunion_def* %arrayidx89, i64 0, i32 0
  %call91.c = ptrtoint %struct.rtx_def* %call91 to i64
  store i64 %call91.c, i64* %32, align 8, !tbaa !7
  br label %if.end95

if.end95:                                         ; preds = %if.end75, %if.then87
  ret void
}

declare void @start_sequence() #2

declare %struct.rtx_def* @expand_simple_binop(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #2

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

declare i32 @exact_log2_wide(i64) #2

declare void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) #2

declare %struct.rtx_def* @get_last_insn() #2

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #2

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_sequence() #2

declare void @end_sequence() #2

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @emit_label_after(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @delete_related_insns(%struct.rtx_def*) #2

declare void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def*, %struct.rtx_def*) #2

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare i32 @swap_condition(i32) #2

declare i32 @any_condjump_p(%struct.rtx_def*) #2

declare i32 @onlyjump_p(%struct.rtx_def*) #2

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !6, i64 160}
!2 = metadata !{metadata !"loop", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !3, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !3, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !6, i64 96, metadata !3, i64 104, metadata !6, i64 112, metadata !3, i64 120, metadata !3, i64 124, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !3, i64 152, metadata !3, i64 156, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !3, i64 240}
!3 = metadata !{metadata !"int", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!7 = metadata !{metadata !6, metadata !6, i64 0}
!8 = metadata !{metadata !2, metadata !3, i64 0}
!9 = metadata !{metadata !2, metadata !3, i64 124}
!10 = metadata !{metadata !2, metadata !6, i64 200}
!11 = metadata !{metadata !12, metadata !13, i64 96}
!12 = metadata !{metadata !"loop_info", metadata !3, i64 0, metadata !3, i64 4, metadata !3, i64 8, metadata !3, i64 12, metadata !3, i64 16, metadata !3, i64 20, metadata !3, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !4, i64 88, metadata !13, i64 96, metadata !3, i64 104, metadata !3, i64 108, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !3, i64 136, metadata !3, i64 140, metadata !3, i64 144, metadata !3, i64 148, metadata !3, i64 152, metadata !6, i64 160, metadata !14, i64 168, metadata !15, i64 184, metadata !16, i64 208, metadata !3, i64 232}
!13 = metadata !{metadata !"long long", metadata !4, i64 0}
!14 = metadata !{metadata !"loop_movables", metadata !6, i64 0, metadata !6, i64 8}
!15 = metadata !{metadata !"loop_regs", metadata !3, i64 0, metadata !3, i64 4, metadata !6, i64 8, metadata !3, i64 16}
!16 = metadata !{metadata !"loop_ivs", metadata !6, i64 0, metadata !3, i64 8, metadata !6, i64 16}
!17 = metadata !{metadata !12, metadata !3, i64 104}
!18 = metadata !{metadata !12, metadata !3, i64 20}
!19 = metadata !{metadata !2, metadata !3, i64 240}
!20 = metadata !{metadata !12, metadata !3, i64 24}
!21 = metadata !{metadata !12, metadata !3, i64 0}
!22 = metadata !{metadata !12, metadata !3, i64 16}
!23 = metadata !{metadata !12, metadata !6, i64 80}
!24 = metadata !{metadata !12, metadata !4, i64 88}
!25 = metadata !{metadata !13, metadata !13, i64 0}
!26 = metadata !{metadata !4, metadata !4, i64 0}
!27 = metadata !{metadata !28, metadata !28, i64 0}
!28 = metadata !{metadata !"short", metadata !4, i64 0}
!29 = metadata !{metadata !30, metadata !3, i64 0}
!30 = metadata !{metadata !"rtvec_def", metadata !3, i64 0, metadata !4, i64 8}
!31 = metadata !{metadata !12, metadata !6, i64 32}
!32 = metadata !{metadata !12, metadata !6, i64 48}
!33 = metadata !{metadata !2, metadata !6, i64 216}
!34 = metadata !{metadata !12, metadata !6, i64 72}
!35 = metadata !{metadata !3, metadata !3, i64 0}
!36 = metadata !{metadata !16, metadata !6, i64 0}
!37 = metadata !{metadata !38, metadata !4, i64 0}
!38 = metadata !{metadata !"iv", metadata !4, i64 0, metadata !4, i64 8}
!39 = metadata !{metadata !40, metadata !6, i64 16}
!40 = metadata !{metadata !"induction", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !4, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !4, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !3, i64 80, metadata !6, i64 88, metadata !3, i64 96, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 100, metadata !3, i64 101, metadata !3, i64 101, metadata !3, i64 101, metadata !3, i64 101, metadata !3, i64 104, metadata !6, i64 112, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !13, i64 144, metadata !6, i64 152, metadata !6, i64 160}
!41 = metadata !{metadata !42, metadata !6, i64 8}
!42 = metadata !{metadata !"iv_class", metadata !3, i64 0, metadata !3, i64 4, metadata !6, i64 8, metadata !3, i64 16, metadata !6, i64 24, metadata !3, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !3, i64 88, metadata !3, i64 88, metadata !3, i64 88, metadata !3, i64 88}
!43 = metadata !{metadata !40, metadata !6, i64 0}
!44 = metadata !{metadata !2, metadata !6, i64 168}
!45 = metadata !{metadata !12, metadata !6, i64 40}
!46 = metadata !{metadata !2, metadata !6, i64 192}
!47 = metadata !{metadata !2, metadata !6, i64 208}
