; ModuleID = 'simplify-rtx.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.realvaluetype = type { [3 x i64] }
%struct.simplify_binary_real_args = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.simplify_binary_is2orm1_args = type { %struct.rtx_def*, i8, i8 }
%struct.simplify_plus_minus_op_data = type { %struct.rtx_def*, i32 }
%struct.simplify_unary_real_args = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.cfc_args = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, i32 }

@rtx_class = external constant [153 x i8]
@mode_bitsize = external constant [59 x i16]
@mode_mask_array = external constant [59 x i64]
@.str = private unnamed_addr constant [15 x i8] c"simplify-rtx.c\00", align 1
@__FUNCTION__.simplify_unary_operation = private unnamed_addr constant [25 x i8] c"simplify_unary_operation\00", align 1
@mode_class = external constant [59 x i32]
@__FUNCTION__.simplify_binary_operation = private unnamed_addr constant [26 x i8] c"simplify_binary_operation\00", align 1
@flag_unsafe_math_optimizations = external global i32
@const_tiny_rtx = external global [3 x [59 x %struct.rtx_def*]]
@const_int_rtx = external global [129 x %struct.rtx_def*]
@rtx_equal_function_value_matters = external global i32
@dconst0 = external global %struct.realvaluetype
@dconst1 = external global %struct.realvaluetype
@__FUNCTION__.simplify_relational_operation = private unnamed_addr constant [30 x i8] c"simplify_relational_operation\00", align 1
@const_true_rtx = external global %struct.rtx_def*
@global_rtl = external global [11 x %struct.rtx_def*]
@fixed_regs = external global [53 x i8]
@__FUNCTION__.simplify_ternary_operation = private unnamed_addr constant [27 x i8] c"simplify_ternary_operation\00", align 1
@__FUNCTION__.simplify_subreg = private unnamed_addr constant [16 x i8] c"simplify_subreg\00", align 1
@mode_size = external constant [59 x i8]
@target_flags = external global i32
@reload_completed = external global i32
@frame_pointer_needed = external global i32
@mode_unit_size = external constant [59 x i8]
@__FUNCTION__.simplify_gen_subreg = private unnamed_addr constant [20 x i8] c"simplify_gen_subreg\00", align 1
@dconst2 = external global %struct.realvaluetype
@dconstm1 = external global %struct.realvaluetype
@__FUNCTION__.simplify_unary_real = private unnamed_addr constant [20 x i8] c"simplify_unary_real\00", align 1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_gen_binary(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 {
entry:
  %idxprom = sext i32 %code to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %0, 99
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0, %struct.rtx_def* %op1) #2
  %tobool = icmp eq i32 %call, 0
  %op0.op1 = select i1 %tobool, %struct.rtx_def* %op0, %struct.rtx_def* %op1
  %op1.op0 = select i1 %tobool, %struct.rtx_def* %op1, %struct.rtx_def* %op0
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %op0.addr.0 = phi %struct.rtx_def* [ %op0, %entry ], [ %op0.op1, %land.lhs.true ]
  %op1.addr.0 = phi %struct.rtx_def* [ %op1, %entry ], [ %op1.op0, %land.lhs.true ]
  %call2 = tail call %struct.rtx_def* @simplify_binary_operation(i32 %code, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.0)
  %tobool3 = icmp eq %struct.rtx_def* %call2, null
  br i1 %tobool3, label %if.end5, label %return

if.end5:                                          ; preds = %if.end
  %code.off = add i32 %code, -75
  %1 = icmp ult i32 %code.off, 2
  br i1 %1, label %if.then10, label %if.end15

if.then10:                                        ; preds = %if.end5
  %call11 = tail call fastcc %struct.rtx_def* @simplify_plus_minus(i32 %code, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.0, i32 1)
  %tobool12 = icmp eq %struct.rtx_def* %call11, null
  br i1 %tobool12, label %if.end15, label %return

if.end15:                                         ; preds = %if.then10, %if.end5
  %call16 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.0) #2
  br label %return

return:                                           ; preds = %if.then10, %if.end, %if.end15
  %retval.0 = phi %struct.rtx_def* [ %call16, %if.end15 ], [ %call2, %if.end ], [ %call11, %if.then10 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_binary_operation(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 {
entry:
  %args = alloca %struct.simplify_binary_real_args, align 8
  %lv = alloca i64, align 8
  %hv = alloca i64, align 8
  %args1213 = alloca %struct.simplify_binary_is2orm1_args, align 8
  %d = alloca %struct.realvaluetype, align 8
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %0 = load i16* %arrayidx, align 2, !tbaa !4
  %conv = zext i16 %0 to i32
  %1 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 66
  br i1 %cmp.i, label %if.end.i, label %avoid_constant_pool_reference.exit

if.end.i:                                         ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load1.i = load i32* %3, align 8
  %4 = and i32 %bf.load1.i, 67174399
  %5 = icmp eq i32 %4, 67108932
  br i1 %5, label %if.end7.i, label %avoid_constant_pool_reference.exit

if.end7.i:                                        ; preds = %if.end.i
  %call.i = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %2) #2
  %call8.i = call i32 @get_pool_mode(%struct.rtx_def* %2) #2
  %bf.load9.i = load i32* %1, align 8
  %bf.lshr10.i = lshr i32 %bf.load9.i, 16
  %bf.clear11.i = and i32 %bf.lshr10.i, 255
  %cmp12.i = icmp eq i32 %call8.i, %bf.clear11.i
  br i1 %cmp12.i, label %avoid_constant_pool_reference.exit, label %if.then13.i

if.then13.i:                                      ; preds = %if.end7.i
  %call17.i = call %struct.rtx_def* @simplify_subreg(i32 %bf.clear11.i, %struct.rtx_def* %call.i, i32 %call8.i, i32 0) #2
  %tobool18.i = icmp ne %struct.rtx_def* %call17.i, null
  %cond.i = select i1 %tobool18.i, %struct.rtx_def* %call17.i, %struct.rtx_def* %op0
  br label %avoid_constant_pool_reference.exit

avoid_constant_pool_reference.exit:               ; preds = %entry, %if.end.i, %if.end7.i, %if.then13.i
  %retval.0.i = phi %struct.rtx_def* [ %cond.i, %if.then13.i ], [ %op0, %entry ], [ %op0, %if.end.i ], [ %call.i, %if.end7.i ]
  %6 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  %bf.load.i2492 = load i32* %6, align 8
  %bf.clear.i2493 = and i32 %bf.load.i2492, 65535
  %cmp.i2494 = icmp eq i32 %bf.clear.i2493, 66
  br i1 %cmp.i2494, label %if.end.i2498, label %avoid_constant_pool_reference.exit2511

if.end.i2498:                                     ; preds = %avoid_constant_pool_reference.exit
  %arrayidx.i2495 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0
  %rtx.i2496 = bitcast %union.rtunion_def* %arrayidx.i2495 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx.i2496, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load1.i2497 = load i32* %8, align 8
  %9 = and i32 %bf.load1.i2497, 67174399
  %10 = icmp eq i32 %9, 67108932
  br i1 %10, label %if.end7.i2505, label %avoid_constant_pool_reference.exit2511

if.end7.i2505:                                    ; preds = %if.end.i2498
  %call.i2499 = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %7) #2
  %call8.i2500 = call i32 @get_pool_mode(%struct.rtx_def* %7) #2
  %bf.load9.i2501 = load i32* %6, align 8
  %bf.lshr10.i2502 = lshr i32 %bf.load9.i2501, 16
  %bf.clear11.i2503 = and i32 %bf.lshr10.i2502, 255
  %cmp12.i2504 = icmp eq i32 %call8.i2500, %bf.clear11.i2503
  br i1 %cmp12.i2504, label %avoid_constant_pool_reference.exit2511, label %if.then13.i2509

if.then13.i2509:                                  ; preds = %if.end7.i2505
  %call17.i2506 = call %struct.rtx_def* @simplify_subreg(i32 %bf.clear11.i2503, %struct.rtx_def* %call.i2499, i32 %call8.i2500, i32 0) #2
  %tobool18.i2507 = icmp ne %struct.rtx_def* %call17.i2506, null
  %cond.i2508 = select i1 %tobool18.i2507, %struct.rtx_def* %call17.i2506, %struct.rtx_def* %op1
  br label %avoid_constant_pool_reference.exit2511

avoid_constant_pool_reference.exit2511:           ; preds = %avoid_constant_pool_reference.exit, %if.end.i2498, %if.end7.i2505, %if.then13.i2509
  %retval.0.i2510 = phi %struct.rtx_def* [ %cond.i2508, %if.then13.i2509 ], [ %op1, %avoid_constant_pool_reference.exit ], [ %op1, %if.end.i2498 ], [ %call.i2499, %if.end7.i2505 ]
  %idxprom2 = sext i32 %code to i64
  %arrayidx3 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom2
  %11 = load i8* %arrayidx3, align 1, !tbaa !1
  switch i8 %11, label %if.end13 [
    i8 60, label %if.then
    i8 99, label %land.lhs.true
  ]

if.then:                                          ; preds = %avoid_constant_pool_reference.exit2511
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 891, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.simplify_binary_operation, i64 0, i64 0)) #4
  unreachable

land.lhs.true:                                    ; preds = %avoid_constant_pool_reference.exit2511
  %call11 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %retval.0.i, %struct.rtx_def* %retval.0.i2510) #2
  %tobool = icmp eq i32 %call11, 0
  %call.call1 = select i1 %tobool, %struct.rtx_def* %retval.0.i, %struct.rtx_def* %retval.0.i2510
  %call1.call = select i1 %tobool, %struct.rtx_def* %retval.0.i2510, %struct.rtx_def* %retval.0.i
  %op1.op0 = select i1 %tobool, %struct.rtx_def* %op1, %struct.rtx_def* %op0
  %op0.op1 = select i1 %tobool, %struct.rtx_def* %op0, %struct.rtx_def* %op1
  br label %if.end13

if.end13:                                         ; preds = %land.lhs.true, %avoid_constant_pool_reference.exit2511
  %trueop0.0 = phi %struct.rtx_def* [ %retval.0.i, %avoid_constant_pool_reference.exit2511 ], [ %call.call1, %land.lhs.true ]
  %trueop1.0 = phi %struct.rtx_def* [ %retval.0.i2510, %avoid_constant_pool_reference.exit2511 ], [ %call1.call, %land.lhs.true ]
  %op1.addr.0 = phi %struct.rtx_def* [ %op1, %avoid_constant_pool_reference.exit2511 ], [ %op1.op0, %land.lhs.true ]
  %op0.addr.0 = phi %struct.rtx_def* [ %op0, %avoid_constant_pool_reference.exit2511 ], [ %op0.op1, %land.lhs.true ]
  %arrayidx15 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %12 = load i32* %arrayidx15, align 4, !tbaa !1
  %cmp16 = icmp eq i32 %12, 2
  br i1 %cmp16, label %land.lhs.true18, label %if.end46

land.lhs.true18:                                  ; preds = %if.end13
  %13 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 0
  %bf.load = load i32* %13, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp19 = icmp eq i32 %bf.clear, 55
  br i1 %cmp19, label %land.lhs.true21, label %if.end212

land.lhs.true21:                                  ; preds = %land.lhs.true18
  %14 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load22 = load i32* %14, align 8
  %bf.clear23 = and i32 %bf.load22, 65535
  %cmp24 = icmp eq i32 %bf.clear23, 55
  br i1 %cmp24, label %land.lhs.true26, label %if.end46

land.lhs.true26:                                  ; preds = %land.lhs.true21
  %15 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load27 = load i32* %15, align 8
  %bf.lshr = lshr i32 %bf.load27, 16
  %bf.clear28 = and i32 %bf.lshr, 255
  %cmp29 = icmp eq i32 %bf.clear28, %mode
  br i1 %cmp29, label %land.lhs.true31, label %if.end46

land.lhs.true31:                                  ; preds = %land.lhs.true26
  %16 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load32 = load i32* %16, align 8
  %bf.lshr33 = lshr i32 %bf.load32, 16
  %bf.clear34 = and i32 %bf.lshr33, 255
  %cmp35 = icmp eq i32 %bf.clear34, %mode
  br i1 %cmp35, label %if.then37, label %if.end46

if.then37:                                        ; preds = %land.lhs.true31
  %trueop038 = getelementptr inbounds %struct.simplify_binary_real_args* %args, i64 0, i32 0
  store %struct.rtx_def* %trueop0.0, %struct.rtx_def** %trueop038, align 8, !tbaa !8
  %trueop139 = getelementptr inbounds %struct.simplify_binary_real_args* %args, i64 0, i32 1
  store %struct.rtx_def* %trueop1.0, %struct.rtx_def** %trueop139, align 8, !tbaa !10
  %mode40 = getelementptr inbounds %struct.simplify_binary_real_args* %args, i64 0, i32 4
  store i32 %mode, i32* %mode40, align 4, !tbaa !11
  %code41 = getelementptr inbounds %struct.simplify_binary_real_args* %args, i64 0, i32 3
  store i32 %code, i32* %code41, align 8, !tbaa !12
  %17 = bitcast %struct.simplify_binary_real_args* %args to i8*
  %call42 = call i32 @do_float_handler(void (i8*)* @simplify_binary_real, i8* %17) #2
  %tobool43 = icmp eq i32 %call42, 0
  br i1 %tobool43, label %return, label %if.then44

if.then44:                                        ; preds = %if.then37
  %result = getelementptr inbounds %struct.simplify_binary_real_args* %args, i64 0, i32 2
  %18 = load %struct.rtx_def** %result, align 8, !tbaa !13
  br label %return

if.end46:                                         ; preds = %land.lhs.true31, %land.lhs.true26, %land.lhs.true21, %if.end13
  %cmp49 = icmp eq i32 %12, 1
  %cmp52 = icmp eq i16 %0, 128
  %or.cond = and i1 %cmp49, %cmp52
  br i1 %or.cond, label %land.lhs.true54, label %if.end212

land.lhs.true54:                                  ; preds = %if.end46
  %19 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 0
  %bf.load55 = load i32* %19, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %20 = and i32 %bf.load55, 65534
  %switch = icmp eq i32 %20, 54
  br i1 %switch, label %land.lhs.true63, label %if.end212

land.lhs.true63:                                  ; preds = %land.lhs.true54
  %21 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load64 = load i32* %21, align 8
  %22 = and i32 %bf.load64, 65534
  %switch2487 = icmp eq i32 %22, 54
  br i1 %switch2487, label %if.then73, label %if.end212

if.then73:                                        ; preds = %land.lhs.true63
  %cmp76 = icmp eq i32 %bf.clear56, 55
  br i1 %cmp76, label %if.then78, label %if.else

if.then78:                                        ; preds = %if.then73
  %rtwint = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 1, i64 1, i32 0
  %23 = load i64* %rtwint, align 8, !tbaa !14
  %rtwint82 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 1, i64 2, i32 0
  %24 = load i64* %rtwint82, align 8, !tbaa !14
  br label %if.end88

if.else:                                          ; preds = %if.then73
  %rtwint85 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 1, i64 0, i32 0
  %25 = load i64* %rtwint85, align 8, !tbaa !14
  %.lobit = ashr i64 %25, 63
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.then78
  %l1.0 = phi i64 [ %23, %if.then78 ], [ %25, %if.else ]
  %h1.0 = phi i64 [ %24, %if.then78 ], [ %.lobit, %if.else ]
  %bf.clear90 = and i32 %bf.load64, 65535
  %cmp91 = icmp eq i32 %bf.clear90, 55
  br i1 %cmp91, label %if.then93, label %if.else100

if.then93:                                        ; preds = %if.end88
  %rtwint96 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 1, i32 0
  %26 = load i64* %rtwint96, align 8, !tbaa !14
  %rtwint99 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 2, i32 0
  %27 = load i64* %rtwint99, align 8, !tbaa !14
  br label %if.end107

if.else100:                                       ; preds = %if.end88
  %rtwint103 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %28 = load i64* %rtwint103, align 8, !tbaa !14
  %.lobit2473 = ashr i64 %28, 63
  br label %if.end107

if.end107:                                        ; preds = %if.else100, %if.then93
  %l2.0 = phi i64 [ %26, %if.then93 ], [ %28, %if.else100 ]
  %h2.0 = phi i64 [ %27, %if.then93 ], [ %.lobit2473, %if.else100 ]
  switch i32 %code, label %return [
    i32 76, label %sw.bb
    i32 75, label %sw.bb109
    i32 78, label %sw.bb111
    i32 91, label %sw.bb168
    i32 88, label %sw.bb168
    i32 87, label %sw.bb168
    i32 89, label %sw.bb168
    i32 83, label %sw.bb114
    i32 84, label %sw.bb116
    i32 85, label %sw.bb118
    i32 92, label %sw.bb120
    i32 93, label %sw.bb132
    i32 94, label %sw.bb144
    i32 95, label %sw.bb156
    i32 90, label %sw.bb168
  ]

sw.bb:                                            ; preds = %if.end107
  %call108 = call i32 @neg_double(i64 %l2.0, i64 %h2.0, i64* %lv, i64* %hv) #2
  %29 = load i64* %lv, align 8, !tbaa !14
  %30 = load i64* %hv, align 8, !tbaa !14
  br label %sw.bb109

sw.bb109:                                         ; preds = %if.end107, %sw.bb
  %l2.1 = phi i64 [ %l2.0, %if.end107 ], [ %29, %sw.bb ]
  %h2.1 = phi i64 [ %h2.0, %if.end107 ], [ %30, %sw.bb ]
  %call110 = call i32 @add_double(i64 %l1.0, i64 %h1.0, i64 %l2.1, i64 %h2.1, i64* %lv, i64* %hv) #2
  br label %sw.epilog

sw.bb111:                                         ; preds = %if.end107
  %call112 = call i32 @mul_double(i64 %l1.0, i64 %h1.0, i64 %l2.0, i64 %h2.0, i64* %lv, i64* %hv) #2
  br label %sw.epilog

sw.bb114:                                         ; preds = %if.end107
  %and = and i64 %l2.0, %l1.0
  store i64 %and, i64* %lv, align 8, !tbaa !14
  %and115 = and i64 %h2.0, %h1.0
  store i64 %and115, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

sw.bb116:                                         ; preds = %if.end107
  %or = or i64 %l2.0, %l1.0
  store i64 %or, i64* %lv, align 8, !tbaa !14
  %or117 = or i64 %h2.0, %h1.0
  store i64 %or117, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

sw.bb118:                                         ; preds = %if.end107
  %xor = xor i64 %l2.0, %l1.0
  store i64 %xor, i64* %lv, align 8, !tbaa !14
  %xor119 = xor i64 %h2.0, %h1.0
  store i64 %xor119, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

sw.bb120:                                         ; preds = %if.end107
  %cmp121 = icmp slt i64 %h1.0, %h2.0
  br i1 %cmp121, label %if.then129, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %sw.bb120
  %cmp124 = icmp eq i64 %h1.0, %h2.0
  %cmp127 = icmp ult i64 %l1.0, %l2.0
  %or.cond2474 = and i1 %cmp124, %cmp127
  br i1 %or.cond2474, label %if.then129, label %if.else130

if.then129:                                       ; preds = %lor.lhs.false123, %sw.bb120
  store i64 %l1.0, i64* %lv, align 8, !tbaa !14
  store i64 %h1.0, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

if.else130:                                       ; preds = %lor.lhs.false123
  store i64 %l2.0, i64* %lv, align 8, !tbaa !14
  store i64 %h2.0, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

sw.bb132:                                         ; preds = %if.end107
  %cmp133 = icmp sgt i64 %h1.0, %h2.0
  br i1 %cmp133, label %if.then141, label %lor.lhs.false135

lor.lhs.false135:                                 ; preds = %sw.bb132
  %cmp136 = icmp eq i64 %h1.0, %h2.0
  %cmp139 = icmp ugt i64 %l1.0, %l2.0
  %or.cond2475 = and i1 %cmp136, %cmp139
  br i1 %or.cond2475, label %if.then141, label %if.else142

if.then141:                                       ; preds = %lor.lhs.false135, %sw.bb132
  store i64 %l1.0, i64* %lv, align 8, !tbaa !14
  store i64 %h1.0, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

if.else142:                                       ; preds = %lor.lhs.false135
  store i64 %l2.0, i64* %lv, align 8, !tbaa !14
  store i64 %h2.0, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

sw.bb144:                                         ; preds = %if.end107
  %cmp145 = icmp ult i64 %h1.0, %h2.0
  br i1 %cmp145, label %if.then153, label %lor.lhs.false147

lor.lhs.false147:                                 ; preds = %sw.bb144
  %cmp148 = icmp eq i64 %h1.0, %h2.0
  %cmp151 = icmp ult i64 %l1.0, %l2.0
  %or.cond2476 = and i1 %cmp148, %cmp151
  br i1 %or.cond2476, label %if.then153, label %if.else154

if.then153:                                       ; preds = %lor.lhs.false147, %sw.bb144
  store i64 %l1.0, i64* %lv, align 8, !tbaa !14
  store i64 %h1.0, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

if.else154:                                       ; preds = %lor.lhs.false147
  store i64 %l2.0, i64* %lv, align 8, !tbaa !14
  store i64 %h2.0, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

sw.bb156:                                         ; preds = %if.end107
  %cmp157 = icmp ugt i64 %h1.0, %h2.0
  br i1 %cmp157, label %if.then165, label %lor.lhs.false159

lor.lhs.false159:                                 ; preds = %sw.bb156
  %cmp160 = icmp eq i64 %h1.0, %h2.0
  %cmp163 = icmp ugt i64 %l1.0, %l2.0
  %or.cond2477 = and i1 %cmp160, %cmp163
  br i1 %or.cond2477, label %if.then165, label %if.else166

if.then165:                                       ; preds = %lor.lhs.false159, %sw.bb156
  store i64 %l1.0, i64* %lv, align 8, !tbaa !14
  store i64 %h1.0, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

if.else166:                                       ; preds = %lor.lhs.false159
  store i64 %l2.0, i64* %lv, align 8, !tbaa !14
  store i64 %h2.0, i64* %hv, align 8, !tbaa !14
  br label %sw.epilog

sw.bb168:                                         ; preds = %if.end107, %if.end107, %if.end107, %if.end107, %if.end107
  %cmp169 = icmp eq i64 %h2.0, 0
  %cmp175 = icmp ult i64 %l2.0, 128
  %or.cond2659 = and i1 %cmp169, %cmp175
  br i1 %or.cond2659, label %if.end178, label %return

if.end178:                                        ; preds = %sw.bb168
  %code.off = add i32 %code, -89
  %31 = icmp ult i32 %code.off, 2
  br i1 %31, label %if.then184, label %if.else190

if.then184:                                       ; preds = %if.end178
  %cmp182 = icmp eq i32 %code, 89
  %conv189 = zext i1 %cmp182 to i32
  call void @rshift_double(i64 %l1.0, i64 %h1.0, i64 %l2.0, i32 %conv, i64* %lv, i64* %hv, i32 %conv189) #2
  br label %sw.epilog

if.else190:                                       ; preds = %if.end178
  switch i32 %code, label %if.else204 [
    i32 87, label %if.then193
    i32 88, label %if.then200
  ]

if.then193:                                       ; preds = %if.else190
  call void @lshift_double(i64 %l1.0, i64 %h1.0, i64 %l2.0, i32 %conv, i64* %lv, i64* %hv, i32 1) #2
  br label %sw.epilog

if.then200:                                       ; preds = %if.else190
  call void @lrotate_double(i64 %l1.0, i64 %h1.0, i64 %l2.0, i32 %conv, i64* %lv, i64* %hv) #2
  br label %sw.epilog

if.else204:                                       ; preds = %if.else190
  call void @rrotate_double(i64 %l1.0, i64 %h1.0, i64 %l2.0, i32 %conv, i64* %lv, i64* %hv) #2
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then184, %if.then200, %if.else204, %if.then193, %if.then165, %if.else166, %if.then153, %if.else154, %if.then141, %if.else142, %if.then129, %if.else130, %sw.bb118, %sw.bb116, %sw.bb114, %sw.bb111, %sw.bb109
  %32 = load i64* %lv, align 8, !tbaa !14
  %33 = load i64* %hv, align 8, !tbaa !14
  %call211 = call %struct.rtx_def* @immed_double_const(i64 %32, i64 %33, i32 %mode) #2
  br label %return

if.end212:                                        ; preds = %land.lhs.true18, %land.lhs.true63, %land.lhs.true54, %if.end46
  %34 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load213 = load i32* %34, align 8
  %bf.clear214 = and i32 %bf.load213, 65535
  %cmp215 = icmp eq i32 %bf.clear214, 54
  br i1 %cmp215, label %lor.lhs.false217, label %if.then228

lor.lhs.false217:                                 ; preds = %if.end212
  %35 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load218 = load i32* %35, align 8
  %bf.clear219 = and i32 %bf.load218, 65535
  %cmp220 = icmp ne i32 %bf.clear219, 54
  %cmp223 = icmp ugt i16 %0, 64
  %or.cond1851 = or i1 %cmp220, %cmp223
  %cmp226 = icmp eq i16 %0, 0
  %or.cond1852 = or i1 %or.cond1851, %cmp226
  br i1 %or.cond1852, label %if.then228, label %if.end1668

if.then228:                                       ; preds = %if.end212, %lor.lhs.false217
  switch i32 %code, label %sw.default1666 [
    i32 75, label %sw.bb229
    i32 74, label %sw.bb671
    i32 76, label %sw.bb755
    i32 78, label %sw.bb1132
    i32 84, label %sw.bb1243
    i32 85, label %sw.bb1303
    i32 83, label %sw.bb1338
    i32 81, label %sw.bb1406
    i32 79, label %sw.bb1423
    i32 82, label %sw.bb1508
    i32 80, label %sw.bb1528
    i32 91, label %sw.bb1542
    i32 88, label %sw.bb1542
    i32 87, label %sw.bb1563
    i32 89, label %sw.bb1563
    i32 90, label %sw.bb1563
    i32 92, label %sw.bb1575
    i32 93, label %sw.bb1604
    i32 94, label %sw.bb1633
    i32 95, label %sw.bb1649
    i32 146, label %return
    i32 147, label %return
    i32 148, label %return
    i32 149, label %return
  ]

sw.bb229:                                         ; preds = %if.then228
  switch i32 %12, label %lor.lhs.false239 [
    i32 2, label %land.lhs.true244
    i32 6, label %land.lhs.true244
  ]

lor.lhs.false239:                                 ; preds = %sw.bb229
  %cmp242 = icmp ne i32 %12, 8
  %36 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool245 = icmp ne i32 %36, 0
  %or.cond1853 = or i1 %cmp242, %tobool245
  br i1 %or.cond1853, label %if.end247, label %sw.epilog1667

land.lhs.true244:                                 ; preds = %sw.bb229, %sw.bb229
  %.old = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !16
  %tobool245.old = icmp eq i32 %.old, 0
  br i1 %tobool245.old, label %sw.epilog1667, label %if.end247

if.end247:                                        ; preds = %land.lhs.true244, %lor.lhs.false239
  %arrayidx249 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %37 = load %struct.rtx_def** %arrayidx249, align 8, !tbaa !6
  %cmp250 = icmp eq %struct.rtx_def* %trueop1.0, %37
  br i1 %cmp250, label %return, label %if.end253

if.end253:                                        ; preds = %if.end247
  %cmp256 = icmp eq i32 %bf.clear214, 77
  br i1 %cmp256, label %if.then258, label %if.else262

if.then258:                                       ; preds = %if.end253
  %arrayidx260 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %39 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 76), align 1, !tbaa !1
  %cmp.i2615 = icmp eq i8 %39, 99
  br i1 %cmp.i2615, label %land.lhs.true.i2620, label %if.end.i2625

land.lhs.true.i2620:                              ; preds = %if.then258
  %call.i2616 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %op1.addr.0, %struct.rtx_def* %38) #2
  %tobool.i2617 = icmp eq i32 %call.i2616, 0
  %op0.op1.i2618 = select i1 %tobool.i2617, %struct.rtx_def* %op1.addr.0, %struct.rtx_def* %38
  %op1.op0.i2619 = select i1 %tobool.i2617, %struct.rtx_def* %38, %struct.rtx_def* %op1.addr.0
  br label %if.end.i2625

if.end.i2625:                                     ; preds = %land.lhs.true.i2620, %if.then258
  %op0.addr.0.i2621 = phi %struct.rtx_def* [ %op1.addr.0, %if.then258 ], [ %op0.op1.i2618, %land.lhs.true.i2620 ]
  %op1.addr.0.i2622 = phi %struct.rtx_def* [ %38, %if.then258 ], [ %op1.op0.i2619, %land.lhs.true.i2620 ]
  %call2.i2623 = call %struct.rtx_def* @simplify_binary_operation(i32 76, i32 %mode, %struct.rtx_def* %op0.addr.0.i2621, %struct.rtx_def* %op1.addr.0.i2622) #2
  %tobool3.i2624 = icmp eq %struct.rtx_def* %call2.i2623, null
  br i1 %tobool3.i2624, label %if.end5.i2626, label %return

if.end5.i2626:                                    ; preds = %if.end.i2625
  %call11.i2627 = call fastcc %struct.rtx_def* @simplify_plus_minus(i32 76, i32 %mode, %struct.rtx_def* %op0.addr.0.i2621, %struct.rtx_def* %op1.addr.0.i2622, i32 1) #2
  %tobool12.i2628 = icmp eq %struct.rtx_def* %call11.i2627, null
  br i1 %tobool12.i2628, label %if.end15.i2630, label %return

if.end15.i2630:                                   ; preds = %if.end5.i2626
  %call16.i2629 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode, %struct.rtx_def* %op0.addr.0.i2621, %struct.rtx_def* %op1.addr.0.i2622) #2
  br label %return

if.else262:                                       ; preds = %if.end253
  %40 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load263 = load i32* %40, align 8
  %bf.clear264 = and i32 %bf.load263, 65535
  %cmp265 = icmp eq i32 %bf.clear264, 77
  br i1 %cmp265, label %if.then267, label %if.end273

if.then267:                                       ; preds = %if.else262
  %arrayidx269 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx270, align 8, !tbaa !6
  %42 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 76), align 1, !tbaa !1
  %cmp.i2547 = icmp eq i8 %42, 99
  br i1 %cmp.i2547, label %land.lhs.true.i2552, label %if.end.i2557

land.lhs.true.i2552:                              ; preds = %if.then267
  %call.i2548 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %41) #2
  %tobool.i2549 = icmp eq i32 %call.i2548, 0
  %op0.op1.i2550 = select i1 %tobool.i2549, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %41
  %op1.op0.i2551 = select i1 %tobool.i2549, %struct.rtx_def* %41, %struct.rtx_def* %op0.addr.0
  br label %if.end.i2557

if.end.i2557:                                     ; preds = %land.lhs.true.i2552, %if.then267
  %op0.addr.0.i2553 = phi %struct.rtx_def* [ %op0.addr.0, %if.then267 ], [ %op0.op1.i2550, %land.lhs.true.i2552 ]
  %op1.addr.0.i2554 = phi %struct.rtx_def* [ %41, %if.then267 ], [ %op1.op0.i2551, %land.lhs.true.i2552 ]
  %call2.i2555 = call %struct.rtx_def* @simplify_binary_operation(i32 76, i32 %mode, %struct.rtx_def* %op0.addr.0.i2553, %struct.rtx_def* %op1.addr.0.i2554) #2
  %tobool3.i2556 = icmp eq %struct.rtx_def* %call2.i2555, null
  br i1 %tobool3.i2556, label %if.end5.i2558, label %return

if.end5.i2558:                                    ; preds = %if.end.i2557
  %call11.i2559 = call fastcc %struct.rtx_def* @simplify_plus_minus(i32 76, i32 %mode, %struct.rtx_def* %op0.addr.0.i2553, %struct.rtx_def* %op1.addr.0.i2554, i32 1) #2
  %tobool12.i2560 = icmp eq %struct.rtx_def* %call11.i2559, null
  br i1 %tobool12.i2560, label %if.end15.i2562, label %return

if.end15.i2562:                                   ; preds = %if.end5.i2558
  %call16.i2561 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode, %struct.rtx_def* %op0.addr.0.i2553, %struct.rtx_def* %op1.addr.0.i2554) #2
  br label %return

if.end273:                                        ; preds = %if.else262
  switch i32 %12, label %if.end306 [
    i32 1, label %land.lhs.true293
    i32 3, label %land.lhs.true293
    i32 5, label %land.lhs.true293
    i32 7, label %land.lhs.true293
  ]

land.lhs.true293:                                 ; preds = %if.end273, %if.end273, %if.end273, %if.end273
  %cmp296 = icmp eq i32 %bf.clear214, 86
  %43 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  %cmp299 = icmp eq %struct.rtx_def* %trueop1.0, %43
  %or.cond2479 = and i1 %cmp296, %cmp299
  br i1 %or.cond2479, label %if.then301, label %if.end306

if.then301:                                       ; preds = %land.lhs.true293
  %arrayidx303 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**
  %44 = load %struct.rtx_def** %rtx304, align 8, !tbaa !6
  %call305 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %mode, %struct.rtx_def* %44) #2
  br label %return

if.end306:                                        ; preds = %if.end273, %land.lhs.true293
  switch i32 %bf.clear214, label %if.else362 [
    i32 67, label %land.lhs.true346
    i32 68, label %land.lhs.true346
    i32 54, label %land.lhs.true346
    i32 55, label %land.lhs.true346
    i32 58, label %land.lhs.true346
    i32 134, label %land.lhs.true346
    i32 56, label %land.lhs.true346
    i32 140, label %land.lhs.true346
  ]

land.lhs.true346:                                 ; preds = %if.end306, %if.end306, %if.end306, %if.end306, %if.end306, %if.end306, %if.end306, %if.end306
  %bf.clear349 = and i32 %bf.load213, 16711680
  %cmp350 = icmp ne i32 %bf.clear349, 0
  %cmp355 = icmp eq i32 %bf.clear264, 54
  %or.cond2660 = and i1 %cmp350, %cmp355
  br i1 %or.cond2660, label %if.then357, label %if.else362

if.then357:                                       ; preds = %land.lhs.true346
  %rtwint360 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0, i32 0
  %45 = load i64* %rtwint360, align 8, !tbaa !14
  %call361 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %op0.addr.0, i64 %45) #2
  br label %return

if.else362:                                       ; preds = %land.lhs.true346, %if.end306
  switch i32 %bf.clear264, label %if.end419 [
    i32 67, label %land.lhs.true402
    i32 68, label %land.lhs.true402
    i32 54, label %land.lhs.true402
    i32 55, label %land.lhs.true402
    i32 58, label %land.lhs.true402
    i32 134, label %land.lhs.true402
    i32 56, label %land.lhs.true402
    i32 140, label %land.lhs.true402
  ]

land.lhs.true402:                                 ; preds = %if.else362, %if.else362, %if.else362, %if.else362, %if.else362, %if.else362, %if.else362, %if.else362
  %bf.clear405 = and i32 %bf.load263, 16711680
  %cmp406 = icmp eq i32 %bf.clear405, 0
  %cmp215.not = xor i1 %cmp215, true
  %brmerge = or i1 %cmp406, %cmp215.not
  br i1 %brmerge, label %if.end419, label %if.then413

if.then413:                                       ; preds = %land.lhs.true402
  %rtwint416 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0, i32 0
  %46 = load i64* %rtwint416, align 8, !tbaa !14
  %call417 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %op1.addr.0, i64 %46) #2
  br label %return

if.end419:                                        ; preds = %land.lhs.true402, %if.else362
  switch i32 %12, label %if.then434 [
    i32 2, label %sw.epilog1667
    i32 6, label %sw.epilog1667
    i32 8, label %sw.epilog1667
  ]

if.then434:                                       ; preds = %if.end419
  switch i32 %bf.clear214, label %if.end509 [
    i32 77, label %if.then439
    i32 78, label %land.lhs.true448
    i32 87, label %land.lhs.true471
  ]

if.then439:                                       ; preds = %if.then434
  %arrayidx441 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx442 = bitcast %union.rtunion_def* %arrayidx441 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx442, align 8, !tbaa !6
  br label %if.end509

land.lhs.true448:                                 ; preds = %if.then434
  %arrayidx450 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 1
  %rtx451 = bitcast %union.rtunion_def* %arrayidx450 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx451, align 8, !tbaa !6
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load452 = load i32* %49, align 8
  %bf.clear453 = and i32 %bf.load452, 65535
  %cmp454 = icmp eq i32 %bf.clear453, 54
  br i1 %cmp454, label %if.then456, label %if.end509

if.then456:                                       ; preds = %land.lhs.true448
  %rtwint462 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 1, i64 0, i32 0
  %50 = load i64* %rtwint462, align 8, !tbaa !14
  %arrayidx464 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx465 = bitcast %union.rtunion_def* %arrayidx464 to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx465, align 8, !tbaa !6
  br label %if.end509

land.lhs.true471:                                 ; preds = %if.then434
  %arrayidx473 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 1
  %rtx474 = bitcast %union.rtunion_def* %arrayidx473 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx474, align 8, !tbaa !6
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load475 = load i32* %53, align 8
  %bf.clear476 = and i32 %bf.load475, 65535
  %cmp477 = icmp eq i32 %bf.clear476, 54
  br i1 %cmp477, label %land.lhs.true479, label %if.end509

land.lhs.true479:                                 ; preds = %land.lhs.true471
  %rtwint485 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 1, i64 0, i32 0
  %54 = load i64* %rtwint485, align 8, !tbaa !14
  %55 = icmp ult i64 %54, 64
  br i1 %55, label %if.then497, label %if.end509

if.then497:                                       ; preds = %land.lhs.true479
  %shl = shl i64 1, %54
  %arrayidx505 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx506 = bitcast %union.rtunion_def* %arrayidx505 to %struct.rtx_def**
  %56 = load %struct.rtx_def** %rtx506, align 8, !tbaa !6
  br label %if.end509

if.end509:                                        ; preds = %if.then434, %land.lhs.true448, %if.then456, %if.then497, %land.lhs.true479, %land.lhs.true471, %if.then439
  %coeff0.0 = phi i64 [ -1, %if.then439 ], [ %50, %if.then456 ], [ %shl, %if.then497 ], [ 1, %land.lhs.true479 ], [ 1, %land.lhs.true471 ], [ 1, %land.lhs.true448 ], [ 1, %if.then434 ]
  %lhs.0 = phi %struct.rtx_def* [ %47, %if.then439 ], [ %51, %if.then456 ], [ %56, %if.then497 ], [ %op0.addr.0, %land.lhs.true479 ], [ %op0.addr.0, %land.lhs.true471 ], [ %op0.addr.0, %land.lhs.true448 ], [ %op0.addr.0, %if.then434 ]
  %had_mult.0 = phi i32 [ 0, %if.then439 ], [ 1, %if.then456 ], [ 0, %if.then497 ], [ 0, %land.lhs.true479 ], [ 0, %land.lhs.true471 ], [ 0, %land.lhs.true448 ], [ 0, %if.then434 ]
  switch i32 %bf.clear264, label %if.end585 [
    i32 77, label %if.then514
    i32 78, label %land.lhs.true523
    i32 87, label %land.lhs.true546
  ]

if.then514:                                       ; preds = %if.end509
  %arrayidx516 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx517 = bitcast %union.rtunion_def* %arrayidx516 to %struct.rtx_def**
  %57 = load %struct.rtx_def** %rtx517, align 8, !tbaa !6
  br label %if.end585

land.lhs.true523:                                 ; preds = %if.end509
  %arrayidx525 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 1
  %rtx526 = bitcast %union.rtunion_def* %arrayidx525 to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx526, align 8, !tbaa !6
  %59 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 0
  %bf.load527 = load i32* %59, align 8
  %bf.clear528 = and i32 %bf.load527, 65535
  %cmp529 = icmp eq i32 %bf.clear528, 54
  br i1 %cmp529, label %if.then531, label %if.end585

if.then531:                                       ; preds = %land.lhs.true523
  %rtwint537 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 1, i64 0, i32 0
  %60 = load i64* %rtwint537, align 8, !tbaa !14
  %arrayidx539 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx540 = bitcast %union.rtunion_def* %arrayidx539 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx540, align 8, !tbaa !6
  br label %if.end585

land.lhs.true546:                                 ; preds = %if.end509
  %arrayidx548 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 1
  %rtx549 = bitcast %union.rtunion_def* %arrayidx548 to %struct.rtx_def**
  %62 = load %struct.rtx_def** %rtx549, align 8, !tbaa !6
  %63 = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 0
  %bf.load550 = load i32* %63, align 8
  %bf.clear551 = and i32 %bf.load550, 65535
  %cmp552 = icmp eq i32 %bf.clear551, 54
  br i1 %cmp552, label %land.lhs.true554, label %if.end585

land.lhs.true554:                                 ; preds = %land.lhs.true546
  %rtwint560 = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 1, i64 0, i32 0
  %64 = load i64* %rtwint560, align 8, !tbaa !14
  %65 = icmp ult i64 %64, 64
  br i1 %65, label %if.then572, label %if.end585

if.then572:                                       ; preds = %land.lhs.true554
  %shl579 = shl i64 1, %64
  %arrayidx581 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx582 = bitcast %union.rtunion_def* %arrayidx581 to %struct.rtx_def**
  %66 = load %struct.rtx_def** %rtx582, align 8, !tbaa !6
  br label %if.end585

if.end585:                                        ; preds = %if.end509, %land.lhs.true523, %if.then531, %if.then572, %land.lhs.true554, %land.lhs.true546, %if.then514
  %coeff1.0 = phi i64 [ -1, %if.then514 ], [ %60, %if.then531 ], [ %shl579, %if.then572 ], [ 1, %land.lhs.true554 ], [ 1, %land.lhs.true546 ], [ 1, %land.lhs.true523 ], [ 1, %if.end509 ]
  %rhs.0 = phi %struct.rtx_def* [ %57, %if.then514 ], [ %61, %if.then531 ], [ %66, %if.then572 ], [ %op1.addr.0, %land.lhs.true554 ], [ %op1.addr.0, %land.lhs.true546 ], [ %op1.addr.0, %land.lhs.true523 ], [ %op1.addr.0, %if.end509 ]
  %had_mult.1 = phi i32 [ %had_mult.0, %if.then514 ], [ 1, %if.then531 ], [ %had_mult.0, %if.then572 ], [ %had_mult.0, %land.lhs.true554 ], [ %had_mult.0, %land.lhs.true546 ], [ %had_mult.0, %land.lhs.true523 ], [ %had_mult.0, %if.end509 ]
  %call586 = call i32 @rtx_equal_p(%struct.rtx_def* %lhs.0, %struct.rtx_def* %rhs.0) #2
  %tobool587 = icmp eq i32 %call586, 0
  br i1 %tobool587, label %if.end599, label %if.then588

if.then588:                                       ; preds = %if.end585
  %add = add nsw i64 %coeff1.0, %coeff0.0
  %call589 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add) #2
  %67 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 78), align 1, !tbaa !1
  %cmp.i2513 = icmp eq i8 %67, 99
  br i1 %cmp.i2513, label %land.lhs.true.i, label %if.end.i2515

land.lhs.true.i:                                  ; preds = %if.then588
  %call.i2514 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %lhs.0, %struct.rtx_def* %call589) #2
  %tobool.i = icmp eq i32 %call.i2514, 0
  %op0.op1.i = select i1 %tobool.i, %struct.rtx_def* %lhs.0, %struct.rtx_def* %call589
  %op1.op0.i = select i1 %tobool.i, %struct.rtx_def* %call589, %struct.rtx_def* %lhs.0
  br label %if.end.i2515

if.end.i2515:                                     ; preds = %land.lhs.true.i, %if.then588
  %op0.addr.0.i = phi %struct.rtx_def* [ %lhs.0, %if.then588 ], [ %op0.op1.i, %land.lhs.true.i ]
  %op1.addr.0.i = phi %struct.rtx_def* [ %call589, %if.then588 ], [ %op1.op0.i, %land.lhs.true.i ]
  %call2.i = call %struct.rtx_def* @simplify_binary_operation(i32 78, i32 %mode, %struct.rtx_def* %op0.addr.0.i, %struct.rtx_def* %op1.addr.0.i) #2
  %tobool3.i = icmp eq %struct.rtx_def* %call2.i, null
  br i1 %tobool3.i, label %if.end5.i, label %simplify_gen_binary.exit

if.end5.i:                                        ; preds = %if.end.i2515
  %call16.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %mode, %struct.rtx_def* %op0.addr.0.i, %struct.rtx_def* %op1.addr.0.i) #2
  br label %simplify_gen_binary.exit

simplify_gen_binary.exit:                         ; preds = %if.end.i2515, %if.end5.i
  %retval.0.i2516 = phi %struct.rtx_def* [ %call16.i, %if.end5.i ], [ %call2.i, %if.end.i2515 ]
  %68 = getelementptr inbounds %struct.rtx_def* %retval.0.i2516, i64 0, i32 0
  %bf.load591 = load i32* %68, align 8
  %bf.clear592 = and i32 %bf.load591, 65535
  %cmp593 = icmp ne i32 %bf.clear592, 78
  %tobool596 = icmp ne i32 %had_mult.1, 0
  %or.cond1855 = or i1 %cmp593, %tobool596
  %cond597 = select i1 %or.cond1855, %struct.rtx_def* %retval.0.i2516, %struct.rtx_def* null
  br label %return

if.end599:                                        ; preds = %if.end585
  switch i32 %12, label %sw.epilog1667 [
    i32 1, label %land.lhs.true619
    i32 3, label %land.lhs.true619
    i32 5, label %land.lhs.true619
    i32 7, label %land.lhs.true619
  ]

land.lhs.true619:                                 ; preds = %if.end599, %if.end599, %if.end599, %if.end599
  %bf.load620 = load i32* %34, align 8
  %bf.clear621 = and i32 %bf.load620, 65535
  %bf.clear621.off = add i32 %bf.clear621, -75
  %switch2488 = icmp ult i32 %bf.clear621.off, 2
  br i1 %switch2488, label %land.lhs.true665, label %lor.lhs.false629

lor.lhs.false629:                                 ; preds = %land.lhs.true619
  %bf.load630 = load i32* %40, align 8
  %bf.clear631 = and i32 %bf.load630, 65535
  %bf.clear631.off = add i32 %bf.clear631, -75
  %switch2489 = icmp ult i32 %bf.clear631.off, 2
  br i1 %switch2489, label %land.lhs.true665, label %lor.lhs.false639

lor.lhs.false639:                                 ; preds = %lor.lhs.false629
  %cmp642 = icmp eq i32 %bf.clear621, 58
  br i1 %cmp642, label %land.lhs.true644, label %lor.lhs.false652

land.lhs.true644:                                 ; preds = %lor.lhs.false639
  %arrayidx646 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx647 = bitcast %union.rtunion_def* %arrayidx646 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx647, align 8, !tbaa !6
  %70 = getelementptr inbounds %struct.rtx_def* %69, i64 0, i32 0
  %bf.load648 = load i32* %70, align 8
  %bf.clear649 = and i32 %bf.load648, 65535
  %cmp650 = icmp eq i32 %bf.clear649, 75
  br i1 %cmp650, label %land.lhs.true665, label %lor.lhs.false652

lor.lhs.false652:                                 ; preds = %land.lhs.true644, %lor.lhs.false639
  %cmp655 = icmp eq i32 %bf.clear631, 58
  br i1 %cmp655, label %land.lhs.true657, label %sw.epilog1667

land.lhs.true657:                                 ; preds = %lor.lhs.false652
  %arrayidx659 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx660 = bitcast %union.rtunion_def* %arrayidx659 to %struct.rtx_def**
  %71 = load %struct.rtx_def** %rtx660, align 8, !tbaa !6
  %72 = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 0
  %bf.load661 = load i32* %72, align 8
  %bf.clear662 = and i32 %bf.load661, 65535
  %cmp663 = icmp eq i32 %bf.clear662, 75
  br i1 %cmp663, label %land.lhs.true665, label %sw.epilog1667

land.lhs.true665:                                 ; preds = %lor.lhs.false629, %land.lhs.true619, %land.lhs.true657, %land.lhs.true644
  %call666 = call fastcc %struct.rtx_def* @simplify_plus_minus(i32 75, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.0, i32 0)
  %cmp667 = icmp eq %struct.rtx_def* %call666, null
  br i1 %cmp667, label %sw.epilog1667, label %return

sw.bb671:                                         ; preds = %if.then228
  switch i32 %bf.clear214, label %sw.epilog1667 [
    i32 105, label %land.lhs.true676
    i32 109, label %land.lhs.true686
  ]

land.lhs.true676:                                 ; preds = %sw.bb671
  %73 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load677 = load i32* %73, align 8
  %bf.clear678 = and i32 %bf.load677, 65535
  %cmp679 = icmp eq i32 %bf.clear678, 107
  br i1 %cmp679, label %land.lhs.true691, label %sw.epilog1667

land.lhs.true686:                                 ; preds = %sw.bb671
  %74 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load687 = load i32* %74, align 8
  %bf.clear688 = and i32 %bf.load687, 65535
  %cmp689 = icmp eq i32 %bf.clear688, 111
  br i1 %cmp689, label %land.lhs.true691, label %sw.epilog1667

land.lhs.true691:                                 ; preds = %land.lhs.true686, %land.lhs.true676
  %arrayidx693 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 1
  %rtx694 = bitcast %union.rtunion_def* %arrayidx693 to %struct.rtx_def**
  %75 = load %struct.rtx_def** %rtx694, align 8, !tbaa !6
  %76 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp695 = icmp eq %struct.rtx_def* %75, %76
  br i1 %cmp695, label %land.lhs.true697, label %sw.epilog1667

land.lhs.true697:                                 ; preds = %land.lhs.true691
  %arrayidx699 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 1
  %rtx700 = bitcast %union.rtunion_def* %arrayidx699 to %struct.rtx_def**
  %77 = load %struct.rtx_def** %rtx700, align 8, !tbaa !6
  %cmp701 = icmp eq %struct.rtx_def* %77, %75
  br i1 %cmp701, label %if.then703, label %sw.epilog1667

if.then703:                                       ; preds = %land.lhs.true697
  %arrayidx705 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx706 = bitcast %union.rtunion_def* %arrayidx705 to %struct.rtx_def**
  %78 = load %struct.rtx_def** %rtx706, align 8, !tbaa !6
  %arrayidx708 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx709 = bitcast %union.rtunion_def* %arrayidx708 to %struct.rtx_def**
  %79 = load %struct.rtx_def** %rtx709, align 8, !tbaa !6
  %80 = getelementptr inbounds %struct.rtx_def* %78, i64 0, i32 0
  %bf.load710 = load i32* %80, align 8
  %bf.clear711 = and i32 %bf.load710, 65535
  %cmp712 = icmp eq i32 %bf.clear711, 61
  br i1 %cmp712, label %land.lhs.true714, label %sw.epilog1667

land.lhs.true714:                                 ; preds = %if.then703
  %81 = getelementptr inbounds %struct.rtx_def* %79, i64 0, i32 0
  %bf.load715 = load i32* %81, align 8
  %bf.clear716 = and i32 %bf.load715, 65535
  %cmp717 = icmp eq i32 %bf.clear716, 61
  br i1 %cmp717, label %land.lhs.true719, label %sw.epilog1667

land.lhs.true719:                                 ; preds = %land.lhs.true714
  %bf.lshr721 = lshr i32 %bf.load710, 16
  %bf.clear722 = and i32 %bf.lshr721, 255
  %bf.lshr724 = lshr i32 %bf.load715, 16
  %bf.clear725 = and i32 %bf.lshr724, 255
  %cmp726 = icmp eq i32 %bf.clear722, %bf.clear725
  br i1 %cmp726, label %land.lhs.true728, label %sw.epilog1667

land.lhs.true728:                                 ; preds = %land.lhs.true719
  %arrayidx730 = getelementptr inbounds %struct.rtx_def* %78, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx730 to i32*
  %82 = load i32* %rtuint, align 4, !tbaa !16
  %arrayidx732 = getelementptr inbounds %struct.rtx_def* %79, i64 0, i32 1, i64 0
  %rtuint733 = bitcast %union.rtunion_def* %arrayidx732 to i32*
  %83 = load i32* %rtuint733, align 4, !tbaa !16
  %cmp734 = icmp eq i32 %82, %83
  br i1 %cmp734, label %land.lhs.true736, label %sw.epilog1667

land.lhs.true736:                                 ; preds = %land.lhs.true728
  %idxprom7402471 = zext i32 %bf.clear722 to i64
  %arrayidx741 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom7402471
  %84 = load i32* %arrayidx741, align 4, !tbaa !1
  %cmp742 = icmp eq i32 %84, 4
  br i1 %cmp742, label %return, label %sw.epilog1667

sw.bb755:                                         ; preds = %if.then228
  switch i32 %12, label %lor.lhs.false765 [
    i32 2, label %land.lhs.true770
    i32 6, label %land.lhs.true770
  ]

lor.lhs.false765:                                 ; preds = %sw.bb755
  %cmp768 = icmp ne i32 %12, 8
  %85 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool771 = icmp ne i32 %85, 0
  %or.cond1857 = or i1 %cmp768, %tobool771
  br i1 %or.cond1857, label %if.end773, label %sw.epilog1667

land.lhs.true770:                                 ; preds = %sw.bb755, %sw.bb755
  %.old1856 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !16
  %tobool771.old = icmp eq i32 %.old1856, 0
  br i1 %tobool771.old, label %sw.epilog1667, label %if.end773

if.end773:                                        ; preds = %land.lhs.true770, %lor.lhs.false765
  %call774 = call i32 @rtx_equal_p(%struct.rtx_def* %trueop0.0, %struct.rtx_def* %trueop1.0) #2
  %tobool775 = icmp eq i32 %call774, 0
  br i1 %tobool775, label %if.end799, label %land.lhs.true776

land.lhs.true776:                                 ; preds = %if.end773
  %call777 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool778 = icmp eq i32 %call777, 0
  br i1 %tobool778, label %land.lhs.true779, label %if.end799

land.lhs.true779:                                 ; preds = %land.lhs.true776
  switch i32 %12, label %lor.lhs.false789 [
    i32 2, label %lor.lhs.false794
    i32 6, label %lor.lhs.false794
  ]

lor.lhs.false789:                                 ; preds = %land.lhs.true779
  %cmp792 = icmp ne i32 %12, 8
  %86 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool795 = icmp ne i32 %86, 0
  %or.cond1859 = or i1 %cmp792, %tobool795
  br i1 %or.cond1859, label %if.then796, label %if.end799

lor.lhs.false794:                                 ; preds = %land.lhs.true779, %land.lhs.true779
  %.old1858 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !16
  %tobool795.old = icmp eq i32 %.old1858, 0
  br i1 %tobool795.old, label %if.end799, label %if.then796

if.then796:                                       ; preds = %lor.lhs.false794, %lor.lhs.false789
  %arrayidx798 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %87 = load %struct.rtx_def** %arrayidx798, align 8, !tbaa !6
  br label %return

if.end799:                                        ; preds = %lor.lhs.false794, %land.lhs.true776, %if.end773, %lor.lhs.false789
  %88 = phi i32 [ %12, %lor.lhs.false794 ], [ %12, %land.lhs.true776 ], [ %12, %if.end773 ], [ 8, %lor.lhs.false789 ]
  %arrayidx801 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %89 = load %struct.rtx_def** %arrayidx801, align 8, !tbaa !6
  %cmp802 = icmp eq %struct.rtx_def* %trueop0.0, %89
  br i1 %cmp802, label %if.then804, label %if.end806

if.then804:                                       ; preds = %if.end799
  %call805 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %mode, %struct.rtx_def* %op1.addr.0) #2
  br label %return

if.end806:                                        ; preds = %if.end799
  %90 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %cmp807 = icmp eq %struct.rtx_def* %trueop0.0, %90
  br i1 %cmp807, label %if.then809, label %if.end811

if.then809:                                       ; preds = %if.end806
  %call810 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 %mode, %struct.rtx_def* %op1.addr.0) #2
  br label %return

if.end811:                                        ; preds = %if.end806
  %cmp814 = icmp eq %struct.rtx_def* %trueop1.0, %89
  br i1 %cmp814, label %return, label %if.end817

if.end817:                                        ; preds = %if.end811
  switch i32 %88, label %if.then832 [
    i32 2, label %if.end1006
    i32 6, label %if.end1006
    i32 8, label %if.end1006
  ]

if.then832:                                       ; preds = %if.end817
  %bf.load838 = load i32* %34, align 8
  %bf.clear839 = and i32 %bf.load838, 65535
  switch i32 %bf.clear839, label %if.end913 [
    i32 77, label %if.then842
    i32 78, label %land.lhs.true851
    i32 87, label %land.lhs.true874
  ]

if.then842:                                       ; preds = %if.then832
  %arrayidx844 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx845 = bitcast %union.rtunion_def* %arrayidx844 to %struct.rtx_def**
  %91 = load %struct.rtx_def** %rtx845, align 8, !tbaa !6
  br label %if.end913

land.lhs.true851:                                 ; preds = %if.then832
  %arrayidx853 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 1
  %rtx854 = bitcast %union.rtunion_def* %arrayidx853 to %struct.rtx_def**
  %92 = load %struct.rtx_def** %rtx854, align 8, !tbaa !6
  %93 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 0
  %bf.load855 = load i32* %93, align 8
  %bf.clear856 = and i32 %bf.load855, 65535
  %cmp857 = icmp eq i32 %bf.clear856, 54
  br i1 %cmp857, label %if.then859, label %if.end913

if.then859:                                       ; preds = %land.lhs.true851
  %rtwint865 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 1, i64 0, i32 0
  %94 = load i64* %rtwint865, align 8, !tbaa !14
  %arrayidx867 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx868 = bitcast %union.rtunion_def* %arrayidx867 to %struct.rtx_def**
  %95 = load %struct.rtx_def** %rtx868, align 8, !tbaa !6
  br label %if.end913

land.lhs.true874:                                 ; preds = %if.then832
  %arrayidx876 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 1
  %rtx877 = bitcast %union.rtunion_def* %arrayidx876 to %struct.rtx_def**
  %96 = load %struct.rtx_def** %rtx877, align 8, !tbaa !6
  %97 = getelementptr inbounds %struct.rtx_def* %96, i64 0, i32 0
  %bf.load878 = load i32* %97, align 8
  %bf.clear879 = and i32 %bf.load878, 65535
  %cmp880 = icmp eq i32 %bf.clear879, 54
  br i1 %cmp880, label %land.lhs.true882, label %if.end913

land.lhs.true882:                                 ; preds = %land.lhs.true874
  %rtwint888 = getelementptr inbounds %struct.rtx_def* %96, i64 0, i32 1, i64 0, i32 0
  %98 = load i64* %rtwint888, align 8, !tbaa !14
  %99 = icmp ult i64 %98, 64
  br i1 %99, label %if.then900, label %if.end913

if.then900:                                       ; preds = %land.lhs.true882
  %shl907 = shl i64 1, %98
  %arrayidx909 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx910 = bitcast %union.rtunion_def* %arrayidx909 to %struct.rtx_def**
  %100 = load %struct.rtx_def** %rtx910, align 8, !tbaa !6
  br label %if.end913

if.end913:                                        ; preds = %if.then832, %land.lhs.true851, %if.then859, %if.then900, %land.lhs.true882, %land.lhs.true874, %if.then842
  %coeff0833.0 = phi i64 [ -1, %if.then842 ], [ %94, %if.then859 ], [ %shl907, %if.then900 ], [ 1, %land.lhs.true882 ], [ 1, %land.lhs.true874 ], [ 1, %land.lhs.true851 ], [ 1, %if.then832 ]
  %lhs835.0 = phi %struct.rtx_def* [ %91, %if.then842 ], [ %95, %if.then859 ], [ %100, %if.then900 ], [ %op0.addr.0, %land.lhs.true882 ], [ %op0.addr.0, %land.lhs.true874 ], [ %op0.addr.0, %land.lhs.true851 ], [ %op0.addr.0, %if.then832 ]
  %had_mult837.0 = phi i32 [ 0, %if.then842 ], [ 1, %if.then859 ], [ 0, %if.then900 ], [ 0, %land.lhs.true882 ], [ 0, %land.lhs.true874 ], [ 0, %land.lhs.true851 ], [ 0, %if.then832 ]
  %101 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load914 = load i32* %101, align 8
  %bf.clear915 = and i32 %bf.load914, 65535
  switch i32 %bf.clear915, label %if.end989 [
    i32 77, label %if.then918
    i32 78, label %land.lhs.true927
    i32 87, label %land.lhs.true950
  ]

if.then918:                                       ; preds = %if.end913
  %arrayidx920 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx921 = bitcast %union.rtunion_def* %arrayidx920 to %struct.rtx_def**
  %102 = load %struct.rtx_def** %rtx921, align 8, !tbaa !6
  br label %if.end989

land.lhs.true927:                                 ; preds = %if.end913
  %arrayidx929 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 1
  %rtx930 = bitcast %union.rtunion_def* %arrayidx929 to %struct.rtx_def**
  %103 = load %struct.rtx_def** %rtx930, align 8, !tbaa !6
  %104 = getelementptr inbounds %struct.rtx_def* %103, i64 0, i32 0
  %bf.load931 = load i32* %104, align 8
  %bf.clear932 = and i32 %bf.load931, 65535
  %cmp933 = icmp eq i32 %bf.clear932, 54
  br i1 %cmp933, label %if.then935, label %if.end989

if.then935:                                       ; preds = %land.lhs.true927
  %rtwint941 = getelementptr inbounds %struct.rtx_def* %103, i64 0, i32 1, i64 0, i32 0
  %105 = load i64* %rtwint941, align 8, !tbaa !14
  %arrayidx943 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx944 = bitcast %union.rtunion_def* %arrayidx943 to %struct.rtx_def**
  %106 = load %struct.rtx_def** %rtx944, align 8, !tbaa !6
  br label %if.end989

land.lhs.true950:                                 ; preds = %if.end913
  %arrayidx952 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 1
  %rtx953 = bitcast %union.rtunion_def* %arrayidx952 to %struct.rtx_def**
  %107 = load %struct.rtx_def** %rtx953, align 8, !tbaa !6
  %108 = getelementptr inbounds %struct.rtx_def* %107, i64 0, i32 0
  %bf.load954 = load i32* %108, align 8
  %bf.clear955 = and i32 %bf.load954, 65535
  %cmp956 = icmp eq i32 %bf.clear955, 54
  br i1 %cmp956, label %land.lhs.true958, label %if.end989

land.lhs.true958:                                 ; preds = %land.lhs.true950
  %rtwint964 = getelementptr inbounds %struct.rtx_def* %107, i64 0, i32 1, i64 0, i32 0
  %109 = load i64* %rtwint964, align 8, !tbaa !14
  %110 = icmp ult i64 %109, 64
  br i1 %110, label %if.then976, label %if.end989

if.then976:                                       ; preds = %land.lhs.true958
  %shl983 = shl i64 1, %109
  %arrayidx985 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx986 = bitcast %union.rtunion_def* %arrayidx985 to %struct.rtx_def**
  %111 = load %struct.rtx_def** %rtx986, align 8, !tbaa !6
  br label %if.end989

if.end989:                                        ; preds = %if.end913, %land.lhs.true927, %if.then935, %if.then976, %land.lhs.true958, %land.lhs.true950, %if.then918
  %coeff1834.0 = phi i64 [ -1, %if.then918 ], [ %105, %if.then935 ], [ %shl983, %if.then976 ], [ 1, %land.lhs.true958 ], [ 1, %land.lhs.true950 ], [ 1, %land.lhs.true927 ], [ 1, %if.end913 ]
  %rhs836.0 = phi %struct.rtx_def* [ %102, %if.then918 ], [ %106, %if.then935 ], [ %111, %if.then976 ], [ %op1.addr.0, %land.lhs.true958 ], [ %op1.addr.0, %land.lhs.true950 ], [ %op1.addr.0, %land.lhs.true927 ], [ %op1.addr.0, %if.end913 ]
  %had_mult837.1 = phi i32 [ %had_mult837.0, %if.then918 ], [ 1, %if.then935 ], [ %had_mult837.0, %if.then976 ], [ %had_mult837.0, %land.lhs.true958 ], [ %had_mult837.0, %land.lhs.true950 ], [ %had_mult837.0, %land.lhs.true927 ], [ %had_mult837.0, %if.end913 ]
  %call990 = call i32 @rtx_equal_p(%struct.rtx_def* %lhs835.0, %struct.rtx_def* %rhs836.0) #2
  %tobool991 = icmp eq i32 %call990, 0
  br i1 %tobool991, label %if.end1006, label %if.then992

if.then992:                                       ; preds = %if.end989
  %sub = sub nsw i64 %coeff0833.0, %coeff1834.0
  %call993 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub) #2
  %112 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 78), align 1, !tbaa !1
  %cmp.i2517 = icmp eq i8 %112, 99
  br i1 %cmp.i2517, label %land.lhs.true.i2522, label %if.end.i2527

land.lhs.true.i2522:                              ; preds = %if.then992
  %call.i2518 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %lhs835.0, %struct.rtx_def* %call993) #2
  %tobool.i2519 = icmp eq i32 %call.i2518, 0
  %op0.op1.i2520 = select i1 %tobool.i2519, %struct.rtx_def* %lhs835.0, %struct.rtx_def* %call993
  %op1.op0.i2521 = select i1 %tobool.i2519, %struct.rtx_def* %call993, %struct.rtx_def* %lhs835.0
  br label %if.end.i2527

if.end.i2527:                                     ; preds = %land.lhs.true.i2522, %if.then992
  %op0.addr.0.i2523 = phi %struct.rtx_def* [ %lhs835.0, %if.then992 ], [ %op0.op1.i2520, %land.lhs.true.i2522 ]
  %op1.addr.0.i2524 = phi %struct.rtx_def* [ %call993, %if.then992 ], [ %op1.op0.i2521, %land.lhs.true.i2522 ]
  %call2.i2525 = call %struct.rtx_def* @simplify_binary_operation(i32 78, i32 %mode, %struct.rtx_def* %op0.addr.0.i2523, %struct.rtx_def* %op1.addr.0.i2524) #2
  %tobool3.i2526 = icmp eq %struct.rtx_def* %call2.i2525, null
  br i1 %tobool3.i2526, label %if.end5.i2528, label %simplify_gen_binary.exit2531

if.end5.i2528:                                    ; preds = %if.end.i2527
  %call16.i2529 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %mode, %struct.rtx_def* %op0.addr.0.i2523, %struct.rtx_def* %op1.addr.0.i2524) #2
  br label %simplify_gen_binary.exit2531

simplify_gen_binary.exit2531:                     ; preds = %if.end.i2527, %if.end5.i2528
  %retval.0.i2530 = phi %struct.rtx_def* [ %call16.i2529, %if.end5.i2528 ], [ %call2.i2525, %if.end.i2527 ]
  %113 = getelementptr inbounds %struct.rtx_def* %retval.0.i2530, i64 0, i32 0
  %bf.load995 = load i32* %113, align 8
  %bf.clear996 = and i32 %bf.load995, 65535
  %cmp997 = icmp ne i32 %bf.clear996, 78
  %tobool1000 = icmp ne i32 %had_mult837.1, 0
  %or.cond1861 = or i1 %cmp997, %tobool1000
  %cond1004 = select i1 %or.cond1861, %struct.rtx_def* %retval.0.i2530, %struct.rtx_def* null
  br label %return

if.end1006:                                       ; preds = %if.end817, %if.end817, %if.end817, %if.end989
  %114 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load1007 = load i32* %114, align 8
  %bf.clear1008 = and i32 %bf.load1007, 65535
  %cmp1009 = icmp eq i32 %bf.clear1008, 77
  br i1 %cmp1009, label %if.then1011, label %if.end1016

if.then1011:                                      ; preds = %if.end1006
  %arrayidx1013 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx1014 = bitcast %union.rtunion_def* %arrayidx1013 to %struct.rtx_def**
  %115 = load %struct.rtx_def** %rtx1014, align 8, !tbaa !6
  %116 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 75), align 1, !tbaa !1
  %cmp.i2532 = icmp eq i8 %116, 99
  br i1 %cmp.i2532, label %land.lhs.true.i2537, label %if.end.i2542

land.lhs.true.i2537:                              ; preds = %if.then1011
  %call.i2533 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %115) #2
  %tobool.i2534 = icmp eq i32 %call.i2533, 0
  %op0.op1.i2535 = select i1 %tobool.i2534, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %115
  %op1.op0.i2536 = select i1 %tobool.i2534, %struct.rtx_def* %115, %struct.rtx_def* %op0.addr.0
  br label %if.end.i2542

if.end.i2542:                                     ; preds = %land.lhs.true.i2537, %if.then1011
  %op0.addr.0.i2538 = phi %struct.rtx_def* [ %op0.addr.0, %if.then1011 ], [ %op0.op1.i2535, %land.lhs.true.i2537 ]
  %op1.addr.0.i2539 = phi %struct.rtx_def* [ %115, %if.then1011 ], [ %op1.op0.i2536, %land.lhs.true.i2537 ]
  %call2.i2540 = call %struct.rtx_def* @simplify_binary_operation(i32 75, i32 %mode, %struct.rtx_def* %op0.addr.0.i2538, %struct.rtx_def* %op1.addr.0.i2539) #2
  %tobool3.i2541 = icmp eq %struct.rtx_def* %call2.i2540, null
  br i1 %tobool3.i2541, label %if.end5.i2543, label %return

if.end5.i2543:                                    ; preds = %if.end.i2542
  %call11.i = call fastcc %struct.rtx_def* @simplify_plus_minus(i32 75, i32 %mode, %struct.rtx_def* %op0.addr.0.i2538, %struct.rtx_def* %op1.addr.0.i2539, i32 1) #2
  %tobool12.i = icmp eq %struct.rtx_def* %call11.i, null
  br i1 %tobool12.i, label %if.end15.i, label %return

if.end15.i:                                       ; preds = %if.end5.i2543
  %call16.i2544 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %op0.addr.0.i2538, %struct.rtx_def* %op1.addr.0.i2539) #2
  br label %return

if.end1016:                                       ; preds = %if.end1006
  switch i32 %88, label %if.end1087 [
    i32 1, label %land.lhs.true1036
    i32 3, label %land.lhs.true1036
    i32 5, label %land.lhs.true1036
    i32 7, label %land.lhs.true1036
  ]

land.lhs.true1036:                                ; preds = %if.end1016, %if.end1016, %if.end1016, %if.end1016
  %bf.load1037 = load i32* %34, align 8
  %bf.clear1038 = and i32 %bf.load1037, 65535
  %bf.clear1038.off = add i32 %bf.clear1038, -75
  %switch2490 = icmp ult i32 %bf.clear1038.off, 2
  %bf.clear1048.off = add i32 %bf.clear1008, -75
  %switch2491 = icmp ult i32 %bf.clear1048.off, 2
  %or.cond2662 = or i1 %switch2490, %switch2491
  br i1 %or.cond2662, label %land.lhs.true1082, label %lor.lhs.false1056

lor.lhs.false1056:                                ; preds = %land.lhs.true1036
  %cmp1059 = icmp eq i32 %bf.clear1038, 58
  br i1 %cmp1059, label %land.lhs.true1061, label %lor.lhs.false1069

land.lhs.true1061:                                ; preds = %lor.lhs.false1056
  %arrayidx1063 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx1064 = bitcast %union.rtunion_def* %arrayidx1063 to %struct.rtx_def**
  %117 = load %struct.rtx_def** %rtx1064, align 8, !tbaa !6
  %118 = getelementptr inbounds %struct.rtx_def* %117, i64 0, i32 0
  %bf.load1065 = load i32* %118, align 8
  %bf.clear1066 = and i32 %bf.load1065, 65535
  %cmp1067 = icmp eq i32 %bf.clear1066, 75
  br i1 %cmp1067, label %land.lhs.true1082, label %lor.lhs.false1069

lor.lhs.false1069:                                ; preds = %land.lhs.true1061, %lor.lhs.false1056
  %cmp1072 = icmp eq i32 %bf.clear1008, 58
  br i1 %cmp1072, label %land.lhs.true1074, label %if.end1087

land.lhs.true1074:                                ; preds = %lor.lhs.false1069
  %arrayidx1076 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx1077 = bitcast %union.rtunion_def* %arrayidx1076 to %struct.rtx_def**
  %119 = load %struct.rtx_def** %rtx1077, align 8, !tbaa !6
  %120 = getelementptr inbounds %struct.rtx_def* %119, i64 0, i32 0
  %bf.load1078 = load i32* %120, align 8
  %bf.clear1079 = and i32 %bf.load1078, 65535
  %cmp1080 = icmp eq i32 %bf.clear1079, 75
  br i1 %cmp1080, label %land.lhs.true1082, label %if.end1087

land.lhs.true1082:                                ; preds = %land.lhs.true1036, %land.lhs.true1074, %land.lhs.true1061
  %call1083 = call fastcc %struct.rtx_def* @simplify_plus_minus(i32 76, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.0, i32 0)
  %cmp1084 = icmp eq %struct.rtx_def* %call1083, null
  br i1 %cmp1084, label %land.lhs.true1082.if.end1087_crit_edge, label %return

land.lhs.true1082.if.end1087_crit_edge:           ; preds = %land.lhs.true1082
  %bf.load1088.pre = load i32* %114, align 8
  br label %if.end1087

if.end1087:                                       ; preds = %land.lhs.true1082.if.end1087_crit_edge, %if.end1016, %land.lhs.true1074, %lor.lhs.false1069
  %bf.load1102 = phi i32 [ %bf.load1088.pre, %land.lhs.true1082.if.end1087_crit_edge ], [ %bf.load1007, %if.end1016 ], [ %bf.load1007, %land.lhs.true1074 ], [ %bf.load1007, %lor.lhs.false1069 ]
  %bf.clear1089 = and i32 %bf.load1102, 65535
  switch i32 %bf.clear1089, label %sw.epilog1667 [
    i32 54, label %land.lhs.true1092
    i32 83, label %if.then1106
  ]

land.lhs.true1092:                                ; preds = %if.end1087
  %bf.load1093 = load i32* %34, align 8
  %bf.clear1095 = and i32 %bf.load1093, 16711680
  %cmp1096 = icmp eq i32 %bf.clear1095, 0
  br i1 %cmp1096, label %sw.epilog1667, label %if.then1098

if.then1098:                                      ; preds = %land.lhs.true1092
  %op1.addr.0.idx = getelementptr %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0, i32 0
  %op1.addr.0.idx.val = load i64* %op1.addr.0.idx, align 8, !tbaa !14
  %sub.i = sub nsw i64 0, %op1.addr.0.idx.val
  %call.i2512 = call i64 @trunc_int_for_mode(i64 %sub.i, i32 %mode) #2
  %call1.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call.i2512) #2
  %121 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 75), align 1, !tbaa !1
  %cmp.i2565 = icmp eq i8 %121, 99
  br i1 %cmp.i2565, label %land.lhs.true.i2570, label %if.end.i2575

land.lhs.true.i2570:                              ; preds = %if.then1098
  %call.i2566 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1.i) #2
  %tobool.i2567 = icmp eq i32 %call.i2566, 0
  %op0.op1.i2568 = select i1 %tobool.i2567, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1.i
  %op1.op0.i2569 = select i1 %tobool.i2567, %struct.rtx_def* %call1.i, %struct.rtx_def* %op0.addr.0
  br label %if.end.i2575

if.end.i2575:                                     ; preds = %land.lhs.true.i2570, %if.then1098
  %op0.addr.0.i2571 = phi %struct.rtx_def* [ %op0.addr.0, %if.then1098 ], [ %op0.op1.i2568, %land.lhs.true.i2570 ]
  %op1.addr.0.i2572 = phi %struct.rtx_def* [ %call1.i, %if.then1098 ], [ %op1.op0.i2569, %land.lhs.true.i2570 ]
  %call2.i2573 = call %struct.rtx_def* @simplify_binary_operation(i32 75, i32 %mode, %struct.rtx_def* %op0.addr.0.i2571, %struct.rtx_def* %op1.addr.0.i2572) #2
  %tobool3.i2574 = icmp eq %struct.rtx_def* %call2.i2573, null
  br i1 %tobool3.i2574, label %if.end5.i2576, label %return

if.end5.i2576:                                    ; preds = %if.end.i2575
  %call11.i2577 = call fastcc %struct.rtx_def* @simplify_plus_minus(i32 75, i32 %mode, %struct.rtx_def* %op0.addr.0.i2571, %struct.rtx_def* %op1.addr.0.i2572, i32 1) #2
  %tobool12.i2578 = icmp eq %struct.rtx_def* %call11.i2577, null
  br i1 %tobool12.i2578, label %if.end15.i2580, label %return

if.end15.i2580:                                   ; preds = %if.end5.i2576
  %call16.i2579 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %op0.addr.0.i2571, %struct.rtx_def* %op1.addr.0.i2572) #2
  br label %return

if.then1106:                                      ; preds = %if.end1087
  %fld1107 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1
  %rtx1109 = bitcast [1 x %union.rtunion_def]* %fld1107 to %struct.rtx_def**
  %122 = load %struct.rtx_def** %rtx1109, align 8, !tbaa !6
  %call1110 = call i32 @rtx_equal_p(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %122) #2
  %tobool1111 = icmp eq i32 %call1110, 0
  %arrayidx1120 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 1
  %rtx1121 = bitcast %union.rtunion_def* %arrayidx1120 to %struct.rtx_def**
  %123 = load %struct.rtx_def** %rtx1121, align 8, !tbaa !6
  br i1 %tobool1111, label %if.end1118, label %if.then1112

if.then1112:                                      ; preds = %if.then1106
  %call1116 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 %mode, %struct.rtx_def* %123) #2
  %124 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 83), align 1, !tbaa !1
  %cmp.i2583 = icmp eq i8 %124, 99
  br i1 %cmp.i2583, label %land.lhs.true.i2588, label %if.end.i2593

land.lhs.true.i2588:                              ; preds = %if.then1112
  %call.i2584 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1116) #2
  %tobool.i2585 = icmp eq i32 %call.i2584, 0
  %op0.op1.i2586 = select i1 %tobool.i2585, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1116
  %op1.op0.i2587 = select i1 %tobool.i2585, %struct.rtx_def* %call1116, %struct.rtx_def* %op0.addr.0
  br label %if.end.i2593

if.end.i2593:                                     ; preds = %land.lhs.true.i2588, %if.then1112
  %op0.addr.0.i2589 = phi %struct.rtx_def* [ %op0.addr.0, %if.then1112 ], [ %op0.op1.i2586, %land.lhs.true.i2588 ]
  %op1.addr.0.i2590 = phi %struct.rtx_def* [ %call1116, %if.then1112 ], [ %op1.op0.i2587, %land.lhs.true.i2588 ]
  %call2.i2591 = call %struct.rtx_def* @simplify_binary_operation(i32 83, i32 %mode, %struct.rtx_def* %op0.addr.0.i2589, %struct.rtx_def* %op1.addr.0.i2590) #2
  %tobool3.i2592 = icmp eq %struct.rtx_def* %call2.i2591, null
  br i1 %tobool3.i2592, label %if.end5.i2594, label %return

if.end5.i2594:                                    ; preds = %if.end.i2593
  %call16.i2595 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 %mode, %struct.rtx_def* %op0.addr.0.i2589, %struct.rtx_def* %op1.addr.0.i2590) #2
  br label %return

if.end1118:                                       ; preds = %if.then1106
  %call1122 = call i32 @rtx_equal_p(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %123) #2
  %tobool1123 = icmp eq i32 %call1122, 0
  br i1 %tobool1123, label %sw.epilog1667, label %if.then1124

if.then1124:                                      ; preds = %if.end1118
  %125 = load %struct.rtx_def** %rtx1109, align 8, !tbaa !6
  %call1128 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 %mode, %struct.rtx_def* %125) #2
  %126 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 83), align 1, !tbaa !1
  %cmp.i2599 = icmp eq i8 %126, 99
  br i1 %cmp.i2599, label %land.lhs.true.i2604, label %if.end.i2609

land.lhs.true.i2604:                              ; preds = %if.then1124
  %call.i2600 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1128) #2
  %tobool.i2601 = icmp eq i32 %call.i2600, 0
  %op0.op1.i2602 = select i1 %tobool.i2601, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1128
  %op1.op0.i2603 = select i1 %tobool.i2601, %struct.rtx_def* %call1128, %struct.rtx_def* %op0.addr.0
  br label %if.end.i2609

if.end.i2609:                                     ; preds = %land.lhs.true.i2604, %if.then1124
  %op0.addr.0.i2605 = phi %struct.rtx_def* [ %op0.addr.0, %if.then1124 ], [ %op0.op1.i2602, %land.lhs.true.i2604 ]
  %op1.addr.0.i2606 = phi %struct.rtx_def* [ %call1128, %if.then1124 ], [ %op1.op0.i2603, %land.lhs.true.i2604 ]
  %call2.i2607 = call %struct.rtx_def* @simplify_binary_operation(i32 83, i32 %mode, %struct.rtx_def* %op0.addr.0.i2605, %struct.rtx_def* %op1.addr.0.i2606) #2
  %tobool3.i2608 = icmp eq %struct.rtx_def* %call2.i2607, null
  br i1 %tobool3.i2608, label %if.end5.i2610, label %return

if.end5.i2610:                                    ; preds = %if.end.i2609
  %call16.i2611 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 %mode, %struct.rtx_def* %op0.addr.0.i2605, %struct.rtx_def* %op1.addr.0.i2606) #2
  br label %return

sw.bb1132:                                        ; preds = %if.then228
  %127 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %cmp1133 = icmp eq %struct.rtx_def* %trueop1.0, %127
  br i1 %cmp1133, label %if.then1135, label %if.end1143

if.then1135:                                      ; preds = %sw.bb1132
  %call1136 = call %struct.rtx_def* @simplify_unary_operation(i32 77, i32 %mode, %struct.rtx_def* %op0.addr.0, i32 %mode)
  %tobool1137 = icmp eq %struct.rtx_def* %call1136, null
  br i1 %tobool1137, label %cond.false1139, label %return

cond.false1139:                                   ; preds = %if.then1135
  %call1140 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %mode, %struct.rtx_def* %op0.addr.0) #2
  br label %return

if.end1143:                                       ; preds = %sw.bb1132
  switch i32 %12, label %lor.lhs.false1153 [
    i32 2, label %lor.lhs.false1158
    i32 6, label %lor.lhs.false1158
  ]

lor.lhs.false1153:                                ; preds = %if.end1143
  %cmp1156 = icmp ne i32 %12, 8
  %128 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool1159 = icmp ne i32 %128, 0
  %or.cond1863 = or i1 %cmp1156, %tobool1159
  br i1 %or.cond1863, label %land.lhs.true1160, label %if.end1169

lor.lhs.false1158:                                ; preds = %if.end1143, %if.end1143
  %.old1862 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !16
  %tobool1159.old = icmp eq i32 %.old1862, 0
  br i1 %tobool1159.old, label %if.end1169, label %land.lhs.true1160

land.lhs.true1160:                                ; preds = %lor.lhs.false1158, %lor.lhs.false1153
  %arrayidx1162 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %129 = load %struct.rtx_def** %arrayidx1162, align 8, !tbaa !6
  %cmp1163 = icmp eq %struct.rtx_def* %trueop1.0, %129
  br i1 %cmp1163, label %land.lhs.true1165, label %if.end1169

land.lhs.true1165:                                ; preds = %land.lhs.true1160
  %call1166 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1167 = icmp eq i32 %call1166, 0
  br i1 %tobool1167, label %return, label %if.end1169

if.end1169:                                       ; preds = %lor.lhs.false1158, %land.lhs.true1165, %lor.lhs.false1153, %land.lhs.true1160
  %arrayidx1171 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom
  %130 = load %struct.rtx_def** %arrayidx1171, align 8, !tbaa !6
  %cmp1172 = icmp eq %struct.rtx_def* %trueop1.0, %130
  br i1 %cmp1172, label %return, label %if.end1175

if.end1175:                                       ; preds = %if.end1169
  %131 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load1176 = load i32* %131, align 8
  %bf.clear1177 = and i32 %bf.load1176, 65535
  %cmp1178 = icmp eq i32 %bf.clear1177, 54
  br i1 %cmp1178, label %land.lhs.true1180, label %if.end1199

land.lhs.true1180:                                ; preds = %if.end1175
  %rtwint1183 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %132 = load i64* %rtwint1183, align 8, !tbaa !14
  %call1184 = call i32 @exact_log2_wide(i64 %132) #2
  %conv1185 = sext i32 %call1184 to i64
  %cmp1186 = icmp sgt i32 %call1184, -1
  br i1 %cmp1186, label %land.lhs.true1188, label %if.end1199

land.lhs.true1188:                                ; preds = %land.lhs.true1180
  %notlhs = icmp ugt i16 %0, 64
  %notrhs = icmp eq i32 %call1184, 63
  %or.cond1865.not = and i1 %notrhs, %notlhs
  %133 = load i32* @rtx_equal_function_value_matters, align 4
  %tobool1195 = icmp ne i32 %133, 0
  %or.cond1867 = or i1 %or.cond1865.not, %tobool1195
  br i1 %or.cond1867, label %if.end1199, label %if.then1196

if.then1196:                                      ; preds = %land.lhs.true1188
  %call1197 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv1185) #2
  %call1198 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1197) #2
  br label %return

if.end1199:                                       ; preds = %land.lhs.true1188, %land.lhs.true1180, %if.end1175
  %bf.load1200 = load i32* %131, align 8
  %bf.clear1201 = and i32 %bf.load1200, 65535
  %cmp1202 = icmp eq i32 %bf.clear1201, 55
  br i1 %cmp1202, label %land.lhs.true1204, label %sw.epilog1667

land.lhs.true1204:                                ; preds = %if.end1199
  %bf.lshr1206 = lshr i32 %bf.load1200, 16
  %bf.clear1207 = and i32 %bf.lshr1206, 255
  %idxprom12082470 = zext i32 %bf.clear1207 to i64
  %arrayidx1209 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom12082470
  %134 = load i32* %arrayidx1209, align 4, !tbaa !1
  %cmp1210 = icmp eq i32 %134, 2
  br i1 %cmp1210, label %if.then1212, label %sw.epilog1667

if.then1212:                                      ; preds = %land.lhs.true1204
  %value = getelementptr inbounds %struct.simplify_binary_is2orm1_args* %args1213, i64 0, i32 0
  store %struct.rtx_def* %trueop1.0, %struct.rtx_def** %value, align 8, !tbaa !18
  %135 = bitcast %struct.simplify_binary_is2orm1_args* %args1213 to i8*
  %call1214 = call i32 @do_float_handler(void (i8*)* @simplify_binary_is2orm1, i8* %135) #2
  %tobool1215 = icmp eq i32 %call1214, 0
  br i1 %tobool1215, label %return, label %if.end1217

if.end1217:                                       ; preds = %if.then1212
  %is_2 = getelementptr inbounds %struct.simplify_binary_is2orm1_args* %args1213, i64 0, i32 1
  %136 = bitcast i8* %is_2 to i16*
  %137 = load i16* %136, align 8
  %138 = trunc i16 %137 to i8
  %tobool1218 = icmp eq i8 %138, 0
  br i1 %tobool1218, label %if.else1229, label %land.lhs.true1220

land.lhs.true1220:                                ; preds = %if.end1217
  %bf.load1221 = load i32* %34, align 8
  %bf.lshr1222 = lshr i32 %bf.load1221, 16
  %bf.clear1223 = and i32 %bf.lshr1222, 255
  %cmp1224 = icmp eq i32 %bf.clear1223, %mode
  br i1 %cmp1224, label %if.then1226, label %if.else1229

if.then1226:                                      ; preds = %land.lhs.true1220
  %call1227 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %op0.addr.0) #2
  %call1228 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1227) #2
  br label %return

if.else1229:                                      ; preds = %if.end1217, %land.lhs.true1220
  %tobool1230 = icmp ult i16 %137, 256
  br i1 %tobool1230, label %sw.epilog1667, label %land.lhs.true1232

land.lhs.true1232:                                ; preds = %if.else1229
  %bf.load1233 = load i32* %34, align 8
  %bf.lshr1234 = lshr i32 %bf.load1233, 16
  %bf.clear1235 = and i32 %bf.lshr1234, 255
  %cmp1236 = icmp eq i32 %bf.clear1235, %mode
  br i1 %cmp1236, label %if.then1238, label %sw.epilog1667

if.then1238:                                      ; preds = %land.lhs.true1232
  %call1239 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %mode, %struct.rtx_def* %op0.addr.0) #2
  br label %return

sw.bb1243:                                        ; preds = %if.then228
  %139 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp1244 = icmp eq %struct.rtx_def* %trueop1.0, %139
  br i1 %cmp1244, label %return, label %if.end1247

if.end1247:                                       ; preds = %sw.bb1243
  %140 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load1248 = load i32* %140, align 8
  %bf.clear1249 = and i32 %bf.load1248, 65535
  %cmp1250 = icmp eq i32 %bf.clear1249, 54
  br i1 %cmp1250, label %land.lhs.true1252, label %if.end1264

land.lhs.true1252:                                ; preds = %if.end1247
  %rtwint1255 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %141 = load i64* %rtwint1255, align 8, !tbaa !14
  %arrayidx1257 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom
  %142 = load i64* %arrayidx1257, align 8, !tbaa !14
  %and1258 = and i64 %142, %141
  %cmp1261 = icmp eq i64 %and1258, %142
  br i1 %cmp1261, label %return, label %if.end1264

if.end1264:                                       ; preds = %land.lhs.true1252, %if.end1247
  %call1265 = call i32 @rtx_equal_p(%struct.rtx_def* %trueop0.0, %struct.rtx_def* %trueop1.0) #2
  %tobool1266 = icmp eq i32 %call1265, 0
  br i1 %tobool1266, label %if.end1271, label %land.lhs.true1267

land.lhs.true1267:                                ; preds = %if.end1264
  %call1268 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1269 = icmp eq i32 %call1268, 0
  br i1 %tobool1269, label %return, label %if.end1271

if.end1271:                                       ; preds = %land.lhs.true1267, %if.end1264
  %bf.load1272 = load i32* %34, align 8
  %bf.clear1273 = and i32 %bf.load1272, 65535
  %cmp1274 = icmp eq i32 %bf.clear1273, 86
  br i1 %cmp1274, label %land.lhs.true1276, label %lor.lhs.false1282

land.lhs.true1276:                                ; preds = %if.end1271
  %arrayidx1278 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx1279 = bitcast %union.rtunion_def* %arrayidx1278 to %struct.rtx_def**
  %143 = load %struct.rtx_def** %rtx1279, align 8, !tbaa !6
  %call1280 = call i32 @rtx_equal_p(%struct.rtx_def* %143, %struct.rtx_def* %op1.addr.0) #2
  %tobool1281 = icmp eq i32 %call1280, 0
  br i1 %tobool1281, label %lor.lhs.false1282, label %land.lhs.true1293

lor.lhs.false1282:                                ; preds = %land.lhs.true1276, %if.end1271
  %144 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load1283 = load i32* %144, align 8
  %bf.clear1284 = and i32 %bf.load1283, 65535
  %cmp1285 = icmp eq i32 %bf.clear1284, 86
  br i1 %cmp1285, label %land.lhs.true1287, label %sw.epilog1667

land.lhs.true1287:                                ; preds = %lor.lhs.false1282
  %arrayidx1289 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx1290 = bitcast %union.rtunion_def* %arrayidx1289 to %struct.rtx_def**
  %145 = load %struct.rtx_def** %rtx1290, align 8, !tbaa !6
  %call1291 = call i32 @rtx_equal_p(%struct.rtx_def* %145, %struct.rtx_def* %op0.addr.0) #2
  %tobool1292 = icmp eq i32 %call1291, 0
  br i1 %tobool1292, label %sw.epilog1667, label %land.lhs.true1293

land.lhs.true1293:                                ; preds = %land.lhs.true1276, %land.lhs.true1287
  %call1294 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1295 = icmp ne i32 %call1294, 0
  %cmp1299 = icmp eq i32 %12, 4
  %or.cond2663 = or i1 %tobool1295, %cmp1299
  br i1 %or.cond2663, label %sw.epilog1667, label %if.then1301

if.then1301:                                      ; preds = %land.lhs.true1293
  %146 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  br label %return

sw.bb1303:                                        ; preds = %if.then228
  %147 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp1304 = icmp eq %struct.rtx_def* %trueop1.0, %147
  br i1 %cmp1304, label %return, label %if.end1307

if.end1307:                                       ; preds = %sw.bb1303
  %148 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load1308 = load i32* %148, align 8
  %bf.clear1309 = and i32 %bf.load1308, 65535
  %cmp1310 = icmp eq i32 %bf.clear1309, 54
  br i1 %cmp1310, label %land.lhs.true1312, label %if.end1325

land.lhs.true1312:                                ; preds = %if.end1307
  %rtwint1315 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %149 = load i64* %rtwint1315, align 8, !tbaa !14
  %arrayidx1317 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom
  %150 = load i64* %arrayidx1317, align 8, !tbaa !14
  %and1318 = and i64 %150, %149
  %cmp1321 = icmp eq i64 %and1318, %150
  br i1 %cmp1321, label %if.then1323, label %if.end1325

if.then1323:                                      ; preds = %land.lhs.true1312
  %call1324 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 86, i32 %mode, %struct.rtx_def* %op0.addr.0) #2
  br label %return

if.end1325:                                       ; preds = %land.lhs.true1312, %if.end1307
  %cmp1326 = icmp eq %struct.rtx_def* %trueop0.0, %trueop1.0
  br i1 %cmp1326, label %land.lhs.true1328, label %sw.epilog1667

land.lhs.true1328:                                ; preds = %if.end1325
  %call1329 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1330 = icmp ne i32 %call1329, 0
  %cmp1334 = icmp eq i32 %12, 4
  %or.cond2664 = or i1 %tobool1330, %cmp1334
  br i1 %or.cond2664, label %sw.epilog1667, label %if.then1336

if.then1336:                                      ; preds = %land.lhs.true1328
  %151 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

sw.bb1338:                                        ; preds = %if.then228
  %152 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp1339 = icmp eq %struct.rtx_def* %trueop1.0, %152
  br i1 %cmp1339, label %land.lhs.true1341, label %if.end1345

land.lhs.true1341:                                ; preds = %sw.bb1338
  %call1342 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1343 = icmp eq i32 %call1342, 0
  br i1 %tobool1343, label %if.then1344, label %if.end1345

if.then1344:                                      ; preds = %land.lhs.true1341
  %153 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

if.end1345:                                       ; preds = %land.lhs.true1341, %sw.bb1338
  %154 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load1346 = load i32* %154, align 8
  %bf.clear1347 = and i32 %bf.load1346, 65535
  %cmp1348 = icmp eq i32 %bf.clear1347, 54
  br i1 %cmp1348, label %land.lhs.true1350, label %if.end1362

land.lhs.true1350:                                ; preds = %if.end1345
  %rtwint1353 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %155 = load i64* %rtwint1353, align 8, !tbaa !14
  %arrayidx1355 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom
  %156 = load i64* %arrayidx1355, align 8, !tbaa !14
  %and1356 = and i64 %156, %155
  %cmp1359 = icmp eq i64 %and1356, %156
  br i1 %cmp1359, label %return, label %if.end1362

if.end1362:                                       ; preds = %land.lhs.true1350, %if.end1345
  %cmp1363 = icmp eq %struct.rtx_def* %trueop0.0, %trueop1.0
  br i1 %cmp1363, label %land.lhs.true1365, label %if.end1374

land.lhs.true1365:                                ; preds = %if.end1362
  %call1366 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1367 = icmp ne i32 %call1366, 0
  %cmp1371 = icmp eq i32 %12, 4
  %or.cond2665 = or i1 %tobool1367, %cmp1371
  br i1 %or.cond2665, label %if.end1374, label %return

if.end1374:                                       ; preds = %land.lhs.true1365, %if.end1362
  %bf.load1375 = load i32* %34, align 8
  %bf.clear1376 = and i32 %bf.load1375, 65535
  %cmp1377 = icmp eq i32 %bf.clear1376, 86
  br i1 %cmp1377, label %land.lhs.true1379, label %lor.lhs.false1385

land.lhs.true1379:                                ; preds = %if.end1374
  %arrayidx1381 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx1382 = bitcast %union.rtunion_def* %arrayidx1381 to %struct.rtx_def**
  %157 = load %struct.rtx_def** %rtx1382, align 8, !tbaa !6
  %call1383 = call i32 @rtx_equal_p(%struct.rtx_def* %157, %struct.rtx_def* %op1.addr.0) #2
  %tobool1384 = icmp eq i32 %call1383, 0
  br i1 %tobool1384, label %lor.lhs.false1385, label %land.lhs.true1396

lor.lhs.false1385:                                ; preds = %land.lhs.true1379, %if.end1374
  %158 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load1386 = load i32* %158, align 8
  %bf.clear1387 = and i32 %bf.load1386, 65535
  %cmp1388 = icmp eq i32 %bf.clear1387, 86
  br i1 %cmp1388, label %land.lhs.true1390, label %sw.epilog1667

land.lhs.true1390:                                ; preds = %lor.lhs.false1385
  %arrayidx1392 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx1393 = bitcast %union.rtunion_def* %arrayidx1392 to %struct.rtx_def**
  %159 = load %struct.rtx_def** %rtx1393, align 8, !tbaa !6
  %call1394 = call i32 @rtx_equal_p(%struct.rtx_def* %159, %struct.rtx_def* %op0.addr.0) #2
  %tobool1395 = icmp eq i32 %call1394, 0
  br i1 %tobool1395, label %sw.epilog1667, label %land.lhs.true1396

land.lhs.true1396:                                ; preds = %land.lhs.true1379, %land.lhs.true1390
  %call1397 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1398 = icmp ne i32 %call1397, 0
  %cmp1402 = icmp eq i32 %12, 4
  %or.cond2666 = or i1 %tobool1398, %cmp1402
  br i1 %or.cond2666, label %sw.epilog1667, label %if.then1404

if.then1404:                                      ; preds = %land.lhs.true1396
  %160 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

sw.bb1406:                                        ; preds = %if.then228
  %161 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load1407 = load i32* %161, align 8
  %bf.clear1408 = and i32 %bf.load1407, 65535
  %cmp1409 = icmp eq i32 %bf.clear1408, 54
  br i1 %cmp1409, label %land.lhs.true1411, label %sw.bb1423

land.lhs.true1411:                                ; preds = %sw.bb1406
  %rtwint1414 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %162 = load i64* %rtwint1414, align 8, !tbaa !14
  %call1415 = call i32 @exact_log2_wide(i64 %162) #2
  %cmp1417 = icmp sgt i32 %call1415, 0
  br i1 %cmp1417, label %if.then1419, label %sw.bb1423

if.then1419:                                      ; preds = %land.lhs.true1411
  %conv1416 = sext i32 %call1415 to i64
  %call1420 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv1416) #2
  %call1421 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1420) #2
  br label %return

sw.bb1423:                                        ; preds = %sw.bb1406, %land.lhs.true1411, %if.then228
  %arrayidx1425 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1, i64 %idxprom
  %163 = load %struct.rtx_def** %arrayidx1425, align 8, !tbaa !6
  %cmp1426 = icmp eq %struct.rtx_def* %trueop1.0, %163
  br i1 %cmp1426, label %if.then1428, label %if.end1447

if.then1428:                                      ; preds = %sw.bb1423
  %call1429 = call %struct.rtx_def* @gen_lowpart_common(i32 %mode, %struct.rtx_def* %op0.addr.0) #2
  %tobool1430 = icmp eq %struct.rtx_def* %call1429, null
  br i1 %tobool1430, label %if.else1432, label %return

if.else1432:                                      ; preds = %if.then1428
  %bf.load1433 = load i32* %34, align 8
  %bf.lshr1434 = lshr i32 %bf.load1433, 16
  %bf.clear1435 = and i32 %bf.lshr1434, 255
  %cmp1436 = icmp eq i32 %bf.clear1435, %mode
  %cmp1442 = icmp eq i32 %bf.clear1435, 0
  %or.cond2484 = or i1 %cmp1436, %cmp1442
  br i1 %or.cond2484, label %return, label %if.then1444

if.then1444:                                      ; preds = %if.else1432
  %call1445 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %mode, %struct.rtx_def* %op0.addr.0) #2
  br label %return

if.end1447:                                       ; preds = %sw.bb1423
  switch i32 %12, label %lor.lhs.false1457 [
    i32 2, label %lor.lhs.false1462
    i32 6, label %lor.lhs.false1462
  ]

lor.lhs.false1457:                                ; preds = %if.end1447
  %cmp1460 = icmp ne i32 %12, 8
  %164 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool1463 = icmp ne i32 %164, 0
  %or.cond1869 = or i1 %cmp1460, %tobool1463
  br i1 %or.cond1869, label %land.lhs.true1464, label %if.else1473

lor.lhs.false1462:                                ; preds = %if.end1447, %if.end1447
  %.old1868 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !16
  %tobool1463.old = icmp eq i32 %.old1868, 0
  br i1 %tobool1463.old, label %if.else1473, label %land.lhs.true1464

land.lhs.true1464:                                ; preds = %lor.lhs.false1462, %lor.lhs.false1457
  %arrayidx1466 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %165 = load %struct.rtx_def** %arrayidx1466, align 8, !tbaa !6
  %cmp1467 = icmp eq %struct.rtx_def* %trueop0.0, %165
  br i1 %cmp1467, label %land.lhs.true1469, label %if.else1473

land.lhs.true1469:                                ; preds = %land.lhs.true1464
  %call1470 = call i32 @side_effects_p(%struct.rtx_def* %op1.addr.0) #2
  %tobool1471 = icmp eq i32 %call1470, 0
  br i1 %tobool1471, label %return, label %if.else1473

if.else1473:                                      ; preds = %lor.lhs.false1462, %land.lhs.true1469, %lor.lhs.false1457, %land.lhs.true1464
  %166 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load1474 = load i32* %166, align 8
  %bf.clear1475 = and i32 %bf.load1474, 65535
  %cmp1476 = icmp eq i32 %bf.clear1475, 55
  br i1 %cmp1476, label %land.lhs.true1478, label %sw.epilog1667

land.lhs.true1478:                                ; preds = %if.else1473
  %bf.lshr1480 = lshr i32 %bf.load1474, 16
  %bf.clear1481 = and i32 %bf.lshr1480, 255
  %idxprom14822469 = zext i32 %bf.clear1481 to i64
  %arrayidx1483 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom14822469
  %167 = load i32* %arrayidx1483, align 4, !tbaa !1
  %cmp1484 = icmp eq i32 %167, 2
  br i1 %cmp1484, label %land.lhs.true1486, label %sw.epilog1667

land.lhs.true1486:                                ; preds = %land.lhs.true1478
  %arrayidx1488 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom
  %168 = load %struct.rtx_def** %arrayidx1488, align 8, !tbaa !6
  %cmp1489 = icmp ne %struct.rtx_def* %trueop1.0, %168
  %169 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool1492 = icmp ne i32 %169, 0
  %or.cond1871 = and i1 %cmp1489, %tobool1492
  br i1 %or.cond1871, label %do.body, label %sw.epilog1667

do.body:                                          ; preds = %land.lhs.true1486
  %rtwint1496 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 1, i32 0
  %u.sroa.0.0..sroa_cast = bitcast i64* %rtwint1496 to i8*
  %u.sroa.0.0..sroa_cast1885 = bitcast %struct.realvaluetype* %d to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast1885, i8* %u.sroa.0.0..sroa_cast, i64 24, i32 8, i1 false)
  %call1498 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %d, %struct.realvaluetype* byval align 8 @dconst0) #2
  %cmp1499 = icmp eq i32 %call1498, 0
  br i1 %cmp1499, label %sw.epilog1667, label %if.then1501

if.then1501:                                      ; preds = %do.body
  %call1502 = call i32 @rtx_to_tree_code(i32 79) #2
  call void @earith(%struct.realvaluetype* %d, i32 %call1502, %struct.realvaluetype* @dconst1, %struct.realvaluetype* %d) #2
  %call1503 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %d, i32 %mode) #2
  %call1504 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1503) #2
  br label %return

sw.bb1508:                                        ; preds = %if.then228
  %170 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load1509 = load i32* %170, align 8
  %bf.clear1510 = and i32 %bf.load1509, 65535
  %cmp1511 = icmp eq i32 %bf.clear1510, 54
  br i1 %cmp1511, label %land.lhs.true1513, label %sw.bb1528

land.lhs.true1513:                                ; preds = %sw.bb1508
  %rtwint1516 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %171 = load i64* %rtwint1516, align 8, !tbaa !14
  %call1517 = call i32 @exact_log2_wide(i64 %171) #2
  %cmp1518 = icmp sgt i32 %call1517, 0
  br i1 %cmp1518, label %if.then1520, label %sw.bb1528

if.then1520:                                      ; preds = %land.lhs.true1513
  %rtwint1523 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0, i32 0
  %172 = load i64* %rtwint1523, align 8, !tbaa !14
  %sub1524 = add nsw i64 %172, -1
  %call1525 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub1524) #2
  %call1526 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 83, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call1525) #2
  br label %return

sw.bb1528:                                        ; preds = %sw.bb1508, %land.lhs.true1513, %if.then228
  %173 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp1529 = icmp eq %struct.rtx_def* %trueop0.0, %173
  %174 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8
  %cmp1532 = icmp eq %struct.rtx_def* %trueop1.0, %174
  %or.cond2486 = or i1 %cmp1529, %cmp1532
  br i1 %or.cond2486, label %land.lhs.true1534, label %sw.epilog1667

land.lhs.true1534:                                ; preds = %sw.bb1528
  %call1535 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1536 = icmp eq i32 %call1535, 0
  br i1 %tobool1536, label %land.lhs.true1537, label %sw.epilog1667

land.lhs.true1537:                                ; preds = %land.lhs.true1534
  %call1538 = call i32 @side_effects_p(%struct.rtx_def* %op1.addr.0) #2
  %tobool1539 = icmp eq i32 %call1538, 0
  br i1 %tobool1539, label %if.then1540, label %sw.epilog1667

if.then1540:                                      ; preds = %land.lhs.true1537
  %175 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

sw.bb1542:                                        ; preds = %if.then228, %if.then228
  %bf.load1543.in = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 0
  %bf.load1543 = load i32* %bf.load1543.in, align 8
  %bf.clear1544 = and i32 %bf.load1543, 65535
  %cmp1545 = icmp eq i32 %bf.clear1544, 54
  %cmp1548 = icmp ult i16 %0, 65
  %or.cond1873 = and i1 %cmp1545, %cmp1548
  br i1 %or.cond1873, label %land.lhs.true1550, label %sw.bb1563

land.lhs.true1550:                                ; preds = %sw.bb1542
  %rtwint1553 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 1, i64 0, i32 0
  %176 = load i64* %rtwint1553, align 8, !tbaa !14
  %arrayidx1555 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom
  %177 = load i64* %arrayidx1555, align 8, !tbaa !14
  %cmp1556 = icmp eq i64 %176, %177
  br i1 %cmp1556, label %land.lhs.true1558, label %sw.bb1563

land.lhs.true1558:                                ; preds = %land.lhs.true1550
  %call1559 = call i32 @side_effects_p(%struct.rtx_def* %op1.addr.0) #2
  %tobool1560 = icmp eq i32 %call1559, 0
  br i1 %tobool1560, label %return, label %sw.bb1563

sw.bb1563:                                        ; preds = %land.lhs.true1558, %sw.bb1542, %land.lhs.true1550, %if.then228, %if.then228, %if.then228
  %178 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp1564 = icmp eq %struct.rtx_def* %trueop1.0, %178
  br i1 %cmp1564, label %return, label %if.end1567

if.end1567:                                       ; preds = %sw.bb1563
  %cmp1568 = icmp eq %struct.rtx_def* %trueop0.0, %178
  br i1 %cmp1568, label %land.lhs.true1570, label %sw.epilog1667

land.lhs.true1570:                                ; preds = %if.end1567
  %call1571 = call i32 @side_effects_p(%struct.rtx_def* %op1.addr.0) #2
  %tobool1572 = icmp eq i32 %call1571, 0
  br i1 %tobool1572, label %return, label %sw.epilog1667

sw.bb1575:                                        ; preds = %if.then228
  %cmp1576 = icmp ult i16 %0, 65
  br i1 %cmp1576, label %land.lhs.true1578, label %if.else1595

land.lhs.true1578:                                ; preds = %sw.bb1575
  %179 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load1579 = load i32* %179, align 8
  %bf.clear1580 = and i32 %bf.load1579, 65535
  %cmp1581 = icmp eq i32 %bf.clear1580, 54
  br i1 %cmp1581, label %land.lhs.true1583, label %if.else1595

land.lhs.true1583:                                ; preds = %land.lhs.true1578
  %rtwint1586 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %180 = load i64* %rtwint1586, align 8, !tbaa !14
  %sub1587 = add i32 %conv, -1
  %sh_prom = zext i32 %sub1587 to i64
  %shl1588 = shl i64 1, %sh_prom
  %cmp1589 = icmp eq i64 %180, %shl1588
  br i1 %cmp1589, label %land.lhs.true1591, label %if.else1595

land.lhs.true1591:                                ; preds = %land.lhs.true1583
  %call1592 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1593 = icmp eq i32 %call1592, 0
  br i1 %tobool1593, label %return, label %if.else1595

if.else1595:                                      ; preds = %land.lhs.true1591, %land.lhs.true1583, %land.lhs.true1578, %sw.bb1575
  %call1596 = call i32 @rtx_equal_p(%struct.rtx_def* %trueop0.0, %struct.rtx_def* %trueop1.0) #2
  %tobool1597 = icmp eq i32 %call1596, 0
  br i1 %tobool1597, label %sw.epilog1667, label %land.lhs.true1598

land.lhs.true1598:                                ; preds = %if.else1595
  %call1599 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1600 = icmp eq i32 %call1599, 0
  br i1 %tobool1600, label %return, label %sw.epilog1667

sw.bb1604:                                        ; preds = %if.then228
  %cmp1605 = icmp ult i16 %0, 65
  br i1 %cmp1605, label %land.lhs.true1607, label %if.else1624

land.lhs.true1607:                                ; preds = %sw.bb1604
  %181 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load1608 = load i32* %181, align 8
  %bf.clear1609 = and i32 %bf.load1608, 65535
  %cmp1610 = icmp eq i32 %bf.clear1609, 54
  br i1 %cmp1610, label %land.lhs.true1612, label %if.else1624

land.lhs.true1612:                                ; preds = %land.lhs.true1607
  %rtwint1615 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %182 = load i64* %rtwint1615, align 8, !tbaa !14
  %arrayidx1617 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom
  %183 = load i64* %arrayidx1617, align 8, !tbaa !14
  %shr = lshr i64 %183, 1
  %cmp1618 = icmp eq i64 %182, %shr
  br i1 %cmp1618, label %land.lhs.true1620, label %if.else1624

land.lhs.true1620:                                ; preds = %land.lhs.true1612
  %call1621 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1622 = icmp eq i32 %call1621, 0
  br i1 %tobool1622, label %return, label %if.else1624

if.else1624:                                      ; preds = %land.lhs.true1620, %land.lhs.true1612, %land.lhs.true1607, %sw.bb1604
  %call1625 = call i32 @rtx_equal_p(%struct.rtx_def* %trueop0.0, %struct.rtx_def* %trueop1.0) #2
  %tobool1626 = icmp eq i32 %call1625, 0
  br i1 %tobool1626, label %sw.epilog1667, label %land.lhs.true1627

land.lhs.true1627:                                ; preds = %if.else1624
  %call1628 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1629 = icmp eq i32 %call1628, 0
  br i1 %tobool1629, label %return, label %sw.epilog1667

sw.bb1633:                                        ; preds = %if.then228
  %184 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp1634 = icmp eq %struct.rtx_def* %trueop1.0, %184
  br i1 %cmp1634, label %land.lhs.true1636, label %if.else1640

land.lhs.true1636:                                ; preds = %sw.bb1633
  %call1637 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1638 = icmp eq i32 %call1637, 0
  br i1 %tobool1638, label %return, label %if.else1640

if.else1640:                                      ; preds = %land.lhs.true1636, %sw.bb1633
  %call1641 = call i32 @rtx_equal_p(%struct.rtx_def* %trueop0.0, %struct.rtx_def* %trueop1.0) #2
  %tobool1642 = icmp eq i32 %call1641, 0
  br i1 %tobool1642, label %sw.epilog1667, label %land.lhs.true1643

land.lhs.true1643:                                ; preds = %if.else1640
  %call1644 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1645 = icmp eq i32 %call1644, 0
  br i1 %tobool1645, label %return, label %sw.epilog1667

sw.bb1649:                                        ; preds = %if.then228
  %185 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %cmp1650 = icmp eq %struct.rtx_def* %trueop1.0, %185
  br i1 %cmp1650, label %land.lhs.true1652, label %if.else1656

land.lhs.true1652:                                ; preds = %sw.bb1649
  %call1653 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1654 = icmp eq i32 %call1653, 0
  br i1 %tobool1654, label %return, label %if.else1656

if.else1656:                                      ; preds = %land.lhs.true1652, %sw.bb1649
  %call1657 = call i32 @rtx_equal_p(%struct.rtx_def* %trueop0.0, %struct.rtx_def* %trueop1.0) #2
  %tobool1658 = icmp eq i32 %call1657, 0
  br i1 %tobool1658, label %sw.epilog1667, label %land.lhs.true1659

land.lhs.true1659:                                ; preds = %if.else1656
  %call1660 = call i32 @side_effects_p(%struct.rtx_def* %op0.addr.0) #2
  %tobool1661 = icmp eq i32 %call1660, 0
  br i1 %tobool1661, label %return, label %sw.epilog1667

sw.default1666:                                   ; preds = %if.then228
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 1540, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.simplify_binary_operation, i64 0, i64 0)) #4
  unreachable

sw.epilog1667:                                    ; preds = %land.lhs.true1396, %land.lhs.true1328, %land.lhs.true1293, %if.end1087, %sw.bb671, %if.end419, %if.end419, %if.end419, %land.lhs.true1092, %land.lhs.true676, %sw.bb1528, %if.end599, %land.lhs.true244, %land.lhs.true665, %land.lhs.true770, %if.end1118, %if.else1229, %land.lhs.true1287, %land.lhs.true1390, %land.lhs.true1537, %land.lhs.true1534, %land.lhs.true1570, %land.lhs.true1598, %if.else1595, %land.lhs.true1627, %if.else1624, %land.lhs.true1643, %if.else1640, %land.lhs.true1659, %if.else1656, %if.end1567, %do.body, %land.lhs.true1486, %land.lhs.true1478, %if.else1473, %lor.lhs.false1385, %if.end1325, %lor.lhs.false1282, %if.end1199, %land.lhs.true1204, %land.lhs.true1232, %lor.lhs.false765, %land.lhs.true686, %land.lhs.true691, %land.lhs.true697, %land.lhs.true736, %land.lhs.true728, %land.lhs.true719, %land.lhs.true714, %if.then703, %lor.lhs.false652, %land.lhs.true657, %lor.lhs.false239
  br label %return

if.end1668:                                       ; preds = %lor.lhs.false217
  %rtwint1671 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 1, i64 0, i32 0
  %186 = load i64* %rtwint1671, align 8, !tbaa !14
  %rtwint1674 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %187 = load i64* %rtwint1674, align 8, !tbaa !14
  %cmp1675 = icmp ult i16 %0, 64
  br i1 %cmp1675, label %if.then1677, label %if.end1707

if.then1677:                                      ; preds = %if.end1668
  %sh_prom1678 = zext i16 %0 to i64
  %shl1679 = shl i64 1, %sh_prom1678
  %sub1680 = add nsw i64 %shl1679, -1
  %and1681 = and i64 %186, %sub1680
  %and1685 = and i64 %187, %sub1680
  %sub1686 = add i32 %conv, -1
  %sh_prom1687 = zext i32 %sub1686 to i64
  %shl1688 = shl i64 1, %sh_prom1687
  %and1689 = and i64 %and1681, %shl1688
  %tobool1690 = icmp eq i64 %and1689, 0
  br i1 %tobool1690, label %if.end1695, label %if.then1691

if.then1691:                                      ; preds = %if.then1677
  %shl1693 = shl i64 -1, %sh_prom1678
  %or1694 = or i64 %and1681, %shl1693
  br label %if.end1695

if.end1695:                                       ; preds = %if.then1677, %if.then1691
  %arg0s.0 = phi i64 [ %or1694, %if.then1691 ], [ %and1681, %if.then1677 ]
  %and1699 = and i64 %and1685, %shl1688
  %tobool1700 = icmp eq i64 %and1699, 0
  br i1 %tobool1700, label %if.end1707, label %if.then1701

if.then1701:                                      ; preds = %if.end1695
  %shl1703 = shl i64 -1, %sh_prom1678
  %or1704 = or i64 %and1685, %shl1703
  br label %if.end1707

if.end1707:                                       ; preds = %if.end1668, %if.end1695, %if.then1701
  %arg1.0 = phi i64 [ %and1685, %if.then1701 ], [ %and1685, %if.end1695 ], [ %187, %if.end1668 ]
  %arg0s.1 = phi i64 [ %arg0s.0, %if.then1701 ], [ %arg0s.0, %if.end1695 ], [ %186, %if.end1668 ]
  %arg1s.0 = phi i64 [ %or1704, %if.then1701 ], [ %and1685, %if.end1695 ], [ %187, %if.end1668 ]
  %arg0.0 = phi i64 [ %and1681, %if.then1701 ], [ %and1681, %if.end1695 ], [ %186, %if.end1668 ]
  switch i32 %code, label %sw.default1846 [
    i32 75, label %sw.bb1708
    i32 76, label %sw.bb1710
    i32 78, label %sw.bb1712
    i32 79, label %sw.bb1713
    i32 80, label %sw.bb1724
    i32 81, label %sw.bb1735
    i32 82, label %sw.bb1747
    i32 83, label %sw.bb1759
    i32 84, label %sw.bb1761
    i32 85, label %sw.bb1763
    i32 90, label %sw.bb1765
    i32 87, label %sw.bb1771
    i32 89, label %sw.bb1777
    i32 91, label %sw.bb1793
    i32 88, label %sw.bb1805
    i32 74, label %return
    i32 92, label %sw.bb1818
    i32 94, label %sw.bb1825
    i32 93, label %sw.bb1832
    i32 95, label %sw.bb1839
  ]

sw.bb1708:                                        ; preds = %if.end1707
  %add1709 = add nsw i64 %arg1s.0, %arg0s.1
  br label %sw.epilog1847

sw.bb1710:                                        ; preds = %if.end1707
  %sub1711 = sub nsw i64 %arg0s.1, %arg1s.0
  br label %sw.epilog1847

sw.bb1712:                                        ; preds = %if.end1707
  %mul = mul nsw i64 %arg1s.0, %arg0s.1
  br label %sw.epilog1847

sw.bb1713:                                        ; preds = %if.end1707
  %cmp1714 = icmp eq i64 %arg1s.0, 0
  br i1 %cmp1714, label %return, label %lor.lhs.false1716

lor.lhs.false1716:                                ; preds = %sw.bb1713
  %cmp1717 = icmp eq i64 %arg0s.1, -9223372036854775808
  %cmp1720 = icmp eq i64 %arg1s.0, -1
  %or.cond1875 = and i1 %cmp1717, %cmp1720
  br i1 %or.cond1875, label %return, label %if.end1723

if.end1723:                                       ; preds = %lor.lhs.false1716
  %div = sdiv i64 %arg0s.1, %arg1s.0
  br label %sw.epilog1847

sw.bb1724:                                        ; preds = %if.end1707
  %cmp1725 = icmp eq i64 %arg1s.0, 0
  br i1 %cmp1725, label %return, label %lor.lhs.false1727

lor.lhs.false1727:                                ; preds = %sw.bb1724
  %cmp1728 = icmp eq i64 %arg0s.1, -9223372036854775808
  %cmp1731 = icmp eq i64 %arg1s.0, -1
  %or.cond1877 = and i1 %cmp1728, %cmp1731
  br i1 %or.cond1877, label %return, label %if.end1734

if.end1734:                                       ; preds = %lor.lhs.false1727
  %rem = srem i64 %arg0s.1, %arg1s.0
  br label %sw.epilog1847

sw.bb1735:                                        ; preds = %if.end1707
  %cmp1736 = icmp eq i64 %arg1.0, 0
  br i1 %cmp1736, label %return, label %lor.lhs.false1738

lor.lhs.false1738:                                ; preds = %sw.bb1735
  %cmp1739 = icmp eq i64 %arg0s.1, -9223372036854775808
  %cmp1742 = icmp eq i64 %arg1s.0, -1
  %or.cond1879 = and i1 %cmp1739, %cmp1742
  br i1 %or.cond1879, label %return, label %if.end1745

if.end1745:                                       ; preds = %lor.lhs.false1738
  %div1746 = udiv i64 %arg0.0, %arg1.0
  br label %sw.epilog1847

sw.bb1747:                                        ; preds = %if.end1707
  %cmp1748 = icmp eq i64 %arg1.0, 0
  br i1 %cmp1748, label %return, label %lor.lhs.false1750

lor.lhs.false1750:                                ; preds = %sw.bb1747
  %cmp1751 = icmp eq i64 %arg0s.1, -9223372036854775808
  %cmp1754 = icmp eq i64 %arg1s.0, -1
  %or.cond1881 = and i1 %cmp1751, %cmp1754
  br i1 %or.cond1881, label %return, label %if.end1757

if.end1757:                                       ; preds = %lor.lhs.false1750
  %rem1758 = urem i64 %arg0.0, %arg1.0
  br label %sw.epilog1847

sw.bb1759:                                        ; preds = %if.end1707
  %and1760 = and i64 %arg0.0, %arg1.0
  br label %sw.epilog1847

sw.bb1761:                                        ; preds = %if.end1707
  %or1762 = or i64 %arg0.0, %arg1.0
  br label %sw.epilog1847

sw.bb1763:                                        ; preds = %if.end1707
  %xor1764 = xor i64 %arg0.0, %arg1.0
  br label %sw.epilog1847

sw.bb1765:                                        ; preds = %if.end1707
  %cmp1766 = icmp slt i64 %arg1.0, 0
  br i1 %cmp1766, label %return, label %if.end1769

if.end1769:                                       ; preds = %sw.bb1765
  %shr1770 = lshr i64 %arg0.0, %arg1.0
  br label %sw.epilog1847

sw.bb1771:                                        ; preds = %if.end1707
  %cmp1772 = icmp slt i64 %arg1.0, 0
  br i1 %cmp1772, label %return, label %if.end1775

if.end1775:                                       ; preds = %sw.bb1771
  %shl1776 = shl i64 %arg0.0, %arg1.0
  br label %sw.epilog1847

sw.bb1777:                                        ; preds = %if.end1707
  %cmp1778 = icmp slt i64 %arg1.0, 0
  br i1 %cmp1778, label %return, label %if.end1781

if.end1781:                                       ; preds = %sw.bb1777
  %shr1782 = ashr i64 %arg0s.1, %arg1.0
  %cmp1783 = icmp slt i64 %arg0s.1, 0
  %cmp1786 = icmp sgt i64 %arg1.0, 0
  %or.cond1883 = and i1 %cmp1783, %cmp1786
  br i1 %or.cond1883, label %if.then1788, label %sw.epilog1847

if.then1788:                                      ; preds = %if.end1781
  %sub1789 = sub nsw i64 64, %arg1.0
  %shl1790 = shl i64 -1, %sub1789
  %or1791 = or i64 %shr1782, %shl1790
  br label %sw.epilog1847

sw.bb1793:                                        ; preds = %if.end1707
  %cmp1794 = icmp slt i64 %arg1.0, 0
  br i1 %cmp1794, label %return, label %if.end1797

if.end1797:                                       ; preds = %sw.bb1793
  %conv1798 = zext i16 %0 to i64
  %rem1799 = srem i64 %arg1.0, %conv1798
  %sub1801 = sub nsw i64 %conv1798, %rem1799
  %shl1802 = shl i64 %arg0.0, %sub1801
  %shr1803 = lshr i64 %arg0.0, %rem1799
  %or1804 = or i64 %shl1802, %shr1803
  br label %sw.epilog1847

sw.bb1805:                                        ; preds = %if.end1707
  %cmp1806 = icmp slt i64 %arg1.0, 0
  br i1 %cmp1806, label %return, label %if.end1809

if.end1809:                                       ; preds = %sw.bb1805
  %conv1810 = zext i16 %0 to i64
  %rem1811 = srem i64 %arg1.0, %conv1810
  %shl1812 = shl i64 %arg0.0, %rem1811
  %sub1814 = sub nsw i64 %conv1810, %rem1811
  %shr1815 = lshr i64 %arg0.0, %sub1814
  %or1816 = or i64 %shr1815, %shl1812
  br label %sw.epilog1847

sw.bb1818:                                        ; preds = %if.end1707
  %cmp1819 = icmp sle i64 %arg0s.1, %arg1s.0
  %cond1824 = select i1 %cmp1819, i64 %arg0s.1, i64 %arg1s.0
  br label %sw.epilog1847

sw.bb1825:                                        ; preds = %if.end1707
  %cmp1826 = icmp ule i64 %arg0.0, %arg1.0
  %cond1831 = select i1 %cmp1826, i64 %arg0.0, i64 %arg1.0
  br label %sw.epilog1847

sw.bb1832:                                        ; preds = %if.end1707
  %cmp1833 = icmp sgt i64 %arg0s.1, %arg1s.0
  %cond1838 = select i1 %cmp1833, i64 %arg0s.1, i64 %arg1s.0
  br label %sw.epilog1847

sw.bb1839:                                        ; preds = %if.end1707
  %cmp1840 = icmp ugt i64 %arg0.0, %arg1.0
  %cond1845 = select i1 %cmp1840, i64 %arg0.0, i64 %arg1.0
  br label %sw.epilog1847

sw.default1846:                                   ; preds = %if.end1707
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 1716, i8* getelementptr inbounds ([26 x i8]* @__FUNCTION__.simplify_binary_operation, i64 0, i64 0)) #4
  unreachable

sw.epilog1847:                                    ; preds = %if.end1781, %if.then1788, %sw.bb1839, %sw.bb1832, %sw.bb1825, %sw.bb1818, %if.end1809, %if.end1797, %if.end1775, %if.end1769, %sw.bb1763, %sw.bb1761, %sw.bb1759, %if.end1757, %if.end1745, %if.end1734, %if.end1723, %sw.bb1712, %sw.bb1710, %sw.bb1708
  %val.0 = phi i64 [ %cond1845, %sw.bb1839 ], [ %cond1838, %sw.bb1832 ], [ %cond1831, %sw.bb1825 ], [ %cond1824, %sw.bb1818 ], [ %or1816, %if.end1809 ], [ %or1804, %if.end1797 ], [ %or1791, %if.then1788 ], [ %shr1782, %if.end1781 ], [ %shl1776, %if.end1775 ], [ %shr1770, %if.end1769 ], [ %xor1764, %sw.bb1763 ], [ %or1762, %sw.bb1761 ], [ %and1760, %sw.bb1759 ], [ %rem1758, %if.end1757 ], [ %div1746, %if.end1745 ], [ %rem, %if.end1734 ], [ %div, %if.end1723 ], [ %mul, %sw.bb1712 ], [ %sub1711, %sw.bb1710 ], [ %add1709, %sw.bb1708 ]
  %call1848 = call i64 @trunc_int_for_mode(i64 %val.0, i32 %mode) #2
  %call1849 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call1848) #2
  br label %return

return:                                           ; preds = %land.lhs.true1365, %land.lhs.true736, %if.end5.i2610, %if.end.i2609, %if.end5.i2594, %if.end.i2593, %if.end15.i2580, %if.end5.i2576, %if.end.i2575, %if.end15.i, %if.end5.i2543, %if.end.i2542, %if.end15.i2562, %if.end5.i2558, %if.end.i2557, %if.end15.i2630, %if.end5.i2626, %if.end.i2625, %if.end1707, %sw.bb1805, %sw.bb1793, %sw.bb1777, %sw.bb1771, %sw.bb1765, %sw.bb1747, %lor.lhs.false1750, %sw.bb1735, %lor.lhs.false1738, %sw.bb1724, %lor.lhs.false1727, %sw.bb1713, %lor.lhs.false1716, %if.then228, %if.then228, %if.then228, %if.then228, %land.lhs.true1659, %land.lhs.true1652, %land.lhs.true1643, %land.lhs.true1636, %land.lhs.true1627, %land.lhs.true1620, %land.lhs.true1598, %land.lhs.true1591, %land.lhs.true1570, %sw.bb1563, %land.lhs.true1558, %land.lhs.true1469, %if.else1432, %if.then1428, %land.lhs.true1350, %sw.bb1303, %land.lhs.true1267, %land.lhs.true1252, %sw.bb1243, %if.then1212, %if.end1169, %land.lhs.true1165, %cond.false1139, %if.then1135, %land.lhs.true1082, %if.end811, %land.lhs.true665, %if.end247, %if.end107, %sw.bb168, %if.then37, %sw.epilog1847, %sw.epilog1667, %if.then1540, %if.then1520, %if.then1501, %if.then1444, %if.then1419, %if.then1404, %if.then1344, %if.then1336, %if.then1323, %if.then1301, %if.then1238, %if.then1226, %if.then1196, %simplify_gen_binary.exit2531, %if.then809, %if.then804, %if.then796, %simplify_gen_binary.exit, %if.then413, %if.then357, %if.then301, %sw.epilog, %if.then44
  %retval.0 = phi %struct.rtx_def* [ %18, %if.then44 ], [ %call211, %sw.epilog ], [ null, %sw.epilog1667 ], [ %175, %if.then1540 ], [ %call1526, %if.then1520 ], [ %call1445, %if.then1444 ], [ %call1504, %if.then1501 ], [ %call1421, %if.then1419 ], [ %160, %if.then1404 ], [ %153, %if.then1344 ], [ %call1324, %if.then1323 ], [ %151, %if.then1336 ], [ %146, %if.then1301 ], [ %call1228, %if.then1226 ], [ %call1239, %if.then1238 ], [ %call1198, %if.then1196 ], [ %call805, %if.then804 ], [ %call810, %if.then809 ], [ %cond1004, %simplify_gen_binary.exit2531 ], [ %87, %if.then796 ], [ %call305, %if.then301 ], [ %call361, %if.then357 ], [ %call417, %if.then413 ], [ %cond597, %simplify_gen_binary.exit ], [ %call1849, %sw.epilog1847 ], [ null, %if.then37 ], [ null, %sw.bb168 ], [ null, %if.end107 ], [ %op0.addr.0, %if.end247 ], [ %call666, %land.lhs.true665 ], [ %op0.addr.0, %if.end811 ], [ %call1083, %land.lhs.true1082 ], [ %call1140, %cond.false1139 ], [ %call1136, %if.then1135 ], [ %op1.addr.0, %land.lhs.true1165 ], [ %op0.addr.0, %if.end1169 ], [ null, %if.then1212 ], [ %op0.addr.0, %sw.bb1243 ], [ %op1.addr.0, %land.lhs.true1252 ], [ %op0.addr.0, %land.lhs.true1267 ], [ %op0.addr.0, %sw.bb1303 ], [ %op0.addr.0, %land.lhs.true1350 ], [ %call1429, %if.then1428 ], [ %op0.addr.0, %if.else1432 ], [ %op0.addr.0, %land.lhs.true1469 ], [ %op0.addr.0, %land.lhs.true1558 ], [ %op0.addr.0, %sw.bb1563 ], [ %op0.addr.0, %land.lhs.true1570 ], [ %op1.addr.0, %land.lhs.true1591 ], [ %op0.addr.0, %land.lhs.true1598 ], [ %op1.addr.0, %land.lhs.true1620 ], [ %op0.addr.0, %land.lhs.true1627 ], [ %op1.addr.0, %land.lhs.true1636 ], [ %op0.addr.0, %land.lhs.true1643 ], [ %op1.addr.0, %land.lhs.true1652 ], [ %op0.addr.0, %land.lhs.true1659 ], [ null, %if.then228 ], [ null, %if.then228 ], [ null, %if.then228 ], [ null, %if.then228 ], [ null, %lor.lhs.false1716 ], [ null, %sw.bb1713 ], [ null, %lor.lhs.false1727 ], [ null, %sw.bb1724 ], [ null, %lor.lhs.false1738 ], [ null, %sw.bb1735 ], [ null, %lor.lhs.false1750 ], [ null, %sw.bb1747 ], [ null, %sw.bb1765 ], [ null, %sw.bb1771 ], [ null, %sw.bb1777 ], [ null, %sw.bb1793 ], [ null, %sw.bb1805 ], [ null, %if.end1707 ], [ %call16.i2629, %if.end15.i2630 ], [ %call2.i2623, %if.end.i2625 ], [ %call11.i2627, %if.end5.i2626 ], [ %call16.i2561, %if.end15.i2562 ], [ %call2.i2555, %if.end.i2557 ], [ %call11.i2559, %if.end5.i2558 ], [ %call16.i2544, %if.end15.i ], [ %call2.i2540, %if.end.i2542 ], [ %call11.i, %if.end5.i2543 ], [ %call16.i2579, %if.end15.i2580 ], [ %call2.i2573, %if.end.i2575 ], [ %call11.i2577, %if.end5.i2576 ], [ %call16.i2595, %if.end5.i2594 ], [ %call2.i2591, %if.end.i2593 ], [ %call16.i2611, %if.end5.i2610 ], [ %call2.i2607, %if.end.i2609 ], [ %78, %land.lhs.true736 ], [ %op0.addr.0, %land.lhs.true1365 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @simplify_plus_minus(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %force) #0 {
entry:
  %ops = alloca [8 x %struct.simplify_plus_minus_op_data], align 16
  %0 = bitcast [8 x %struct.simplify_plus_minus_op_data]* %ops to i8*
  call void @llvm.lifetime.start(i64 128, i8* %0) #2
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 128, i32 16, i1 false)
  %op = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, i32 0
  store %struct.rtx_def* %op0, %struct.rtx_def** %op, align 16, !tbaa !21
  %neg = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, i32 1
  store i32 0, i32* %neg, align 8, !tbaa !23
  %op3 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, i32 0
  store %struct.rtx_def* %op1, %struct.rtx_def** %op3, align 16, !tbaa !21
  %cmp = icmp eq i32 %code, 76
  %conv = zext i1 %cmp to i32
  %neg5 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, i32 1
  store i32 %conv, i32* %neg5, align 8, !tbaa !23
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %entry, %for.inc
  %input_ops.1.ph = phi i32 [ %input_ops.2, %for.inc ], [ 2, %entry ]
  %input_consts.1.ph = phi i32 [ %input_consts.2, %for.inc ], [ 0, %entry ]
  %changed.0.ph = phi i32 [ %changed.1, %for.inc ], [ 0, %entry ]
  %i.0.ph = phi i32 [ %inc285, %for.inc ], [ 0, %entry ]
  %n_ops.1.ph = phi i32 [ %n_ops.2, %for.inc ], [ 2, %entry ]
  br label %for.cond

for.cond:                                         ; preds = %for.cond.outer, %do.cond
  %changed.0 = phi i32 [ 0, %do.cond ], [ %changed.0.ph, %for.cond.outer ]
  %i.0 = phi i32 [ 0, %do.cond ], [ %i.0.ph, %for.cond.outer ]
  %cmp6 = icmp slt i32 %i.0, %n_ops.1.ph
  br i1 %cmp6, label %for.body, label %do.cond

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %op9 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom, i32 0
  %1 = load %struct.rtx_def** %op9, align 16, !tbaa !21
  %neg12 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom, i32 1
  %2 = load i32* %neg12, align 8, !tbaa !23
  %3 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %for.inc [
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb31
    i32 58, label %sw.bb41
    i32 86, label %sw.bb251
    i32 54, label %sw.bb275
  ]

sw.bb:                                            ; preds = %for.body, %for.body
  %cmp13 = icmp eq i32 %n_ops.1.ph, 7
  br i1 %cmp13, label %cleanup, label %if.end

if.end:                                           ; preds = %sw.bb
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %idxprom16 = sext i32 %n_ops.1.ph to i64
  %op18 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom16, i32 0
  store %struct.rtx_def* %4, %struct.rtx_def** %op18, align 16, !tbaa !21
  %cmp19 = icmp eq i32 %bf.clear, 76
  %conv20 = zext i1 %cmp19 to i32
  %xor = xor i32 %conv20, %2
  %neg23 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom16, i32 1
  store i32 %xor, i32* %neg23, align 8, !tbaa !23
  %inc = add nsw i32 %n_ops.1.ph, 1
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx26, align 8, !tbaa !6
  store %struct.rtx_def* %5, %struct.rtx_def** %op9, align 16, !tbaa !21
  %inc30 = add nsw i32 %input_ops.1.ph, 1
  br label %for.inc

sw.bb31:                                          ; preds = %for.body
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx34, align 8, !tbaa !6
  store %struct.rtx_def* %6, %struct.rtx_def** %op9, align 16, !tbaa !21
  %lnot = icmp eq i32 %2, 0
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %neg12, align 8, !tbaa !23
  br label %for.inc

sw.bb41:                                          ; preds = %for.body
  %cmp42 = icmp slt i32 %n_ops.1.ph, 7
  br i1 %cmp42, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %sw.bb41
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx46, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load47 = load i32* %8, align 8
  %bf.clear48 = and i32 %bf.load47, 65535
  %cmp49 = icmp eq i32 %bf.clear48, 75
  br i1 %cmp49, label %land.lhs.true51, label %for.inc

land.lhs.true51:                                  ; preds = %land.lhs.true
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx57, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load58 = load i32* %10, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  switch i32 %bf.clear59, label %for.inc [
    i32 67, label %land.lhs.true138
    i32 68, label %land.lhs.true138
    i32 54, label %land.lhs.true138
    i32 55, label %land.lhs.true138
    i32 58, label %land.lhs.true138
    i32 134, label %land.lhs.true138
    i32 56, label %land.lhs.true138
    i32 140, label %land.lhs.true138
  ]

land.lhs.true138:                                 ; preds = %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51, %land.lhs.true51
  %arrayidx143 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx144, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load145 = load i32* %12, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  switch i32 %bf.clear146, label %for.inc [
    i32 67, label %if.then226
    i32 68, label %if.then226
    i32 54, label %if.then226
    i32 55, label %if.then226
    i32 58, label %if.then226
    i32 134, label %if.then226
    i32 56, label %if.then226
    i32 140, label %if.then226
  ]

if.then226:                                       ; preds = %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138, %land.lhs.true138
  store %struct.rtx_def* %9, %struct.rtx_def** %op9, align 16, !tbaa !21
  %13 = load %struct.rtx_def** %rtx46, align 8, !tbaa !6
  %arrayidx240 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 1
  %rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx241, align 8, !tbaa !6
  %idxprom242 = sext i32 %n_ops.1.ph to i64
  %op244 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom242, i32 0
  store %struct.rtx_def* %14, %struct.rtx_def** %op244, align 16, !tbaa !21
  %neg247 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom242, i32 1
  store i32 %2, i32* %neg247, align 8, !tbaa !23
  %inc248 = add nsw i32 %n_ops.1.ph, 1
  %inc249 = add nsw i32 %input_consts.1.ph, 1
  br label %for.inc

sw.bb251:                                         ; preds = %for.body
  %cmp252 = icmp eq i32 %n_ops.1.ph, 7
  br i1 %cmp252, label %for.inc, label %if.then254

if.then254:                                       ; preds = %sw.bb251
  %15 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %idxprom255 = sext i32 %n_ops.1.ph to i64
  %op257 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom255, i32 0
  store %struct.rtx_def* %15, %struct.rtx_def** %op257, align 16, !tbaa !21
  %inc258 = add nsw i32 %n_ops.1.ph, 1
  %neg261 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom255, i32 1
  store i32 %2, i32* %neg261, align 8, !tbaa !23
  %arrayidx263 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtx264 = bitcast %union.rtunion_def* %arrayidx263 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx264, align 8, !tbaa !6
  store %struct.rtx_def* %16, %struct.rtx_def** %op9, align 16, !tbaa !21
  %lnot269 = icmp eq i32 %2, 0
  %lnot.ext270 = zext i1 %lnot269 to i32
  store i32 %lnot.ext270, i32* %neg12, align 8, !tbaa !23
  br label %for.inc

sw.bb275:                                         ; preds = %for.body
  %tobool276 = icmp eq i32 %2, 0
  br i1 %tobool276, label %for.inc, label %if.then277

if.then277:                                       ; preds = %sw.bb275
  %.idx933 = getelementptr %struct.rtx_def* %1, i64 0, i32 1, i64 0, i32 0
  %.idx933.val = load i64* %.idx933, align 8, !tbaa !14
  %sub.i = sub nsw i64 0, %.idx933.val
  %call.i = call i64 @trunc_int_for_mode(i64 %sub.i, i32 %mode) #2
  %call1.i = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call.i) #2
  store %struct.rtx_def* %call1.i, %struct.rtx_def** %op9, align 16, !tbaa !21
  store i32 0, i32* %neg12, align 8, !tbaa !23
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true138, %land.lhs.true51, %sw.bb251, %sw.bb275, %if.end, %sw.bb31, %if.then226, %land.lhs.true, %sw.bb41, %if.then254, %if.then277, %for.body
  %input_ops.2 = phi i32 [ %input_ops.1.ph, %for.body ], [ %input_ops.1.ph, %if.then277 ], [ %input_ops.1.ph, %sw.bb275 ], [ %input_ops.1.ph, %if.then254 ], [ %input_ops.1.ph, %sw.bb251 ], [ %input_ops.1.ph, %if.then226 ], [ %input_ops.1.ph, %land.lhs.true ], [ %input_ops.1.ph, %sw.bb41 ], [ %input_ops.1.ph, %sw.bb31 ], [ %inc30, %if.end ], [ %input_ops.1.ph, %land.lhs.true51 ], [ %input_ops.1.ph, %land.lhs.true138 ]
  %input_consts.2 = phi i32 [ %input_consts.1.ph, %for.body ], [ %input_consts.1.ph, %if.then277 ], [ %input_consts.1.ph, %sw.bb275 ], [ %input_consts.1.ph, %if.then254 ], [ %input_consts.1.ph, %sw.bb251 ], [ %inc249, %if.then226 ], [ %input_consts.1.ph, %land.lhs.true ], [ %input_consts.1.ph, %sw.bb41 ], [ %input_consts.1.ph, %sw.bb31 ], [ %input_consts.1.ph, %if.end ], [ %input_consts.1.ph, %land.lhs.true51 ], [ %input_consts.1.ph, %land.lhs.true138 ]
  %changed.1 = phi i32 [ %changed.0, %for.body ], [ 1, %if.then277 ], [ %changed.0, %sw.bb275 ], [ 1, %if.then254 ], [ %changed.0, %sw.bb251 ], [ 1, %if.then226 ], [ %changed.0, %land.lhs.true ], [ %changed.0, %sw.bb41 ], [ 1, %sw.bb31 ], [ 1, %if.end ], [ %changed.0, %land.lhs.true51 ], [ %changed.0, %land.lhs.true138 ]
  %n_ops.2 = phi i32 [ %n_ops.1.ph, %for.body ], [ %n_ops.1.ph, %if.then277 ], [ %n_ops.1.ph, %sw.bb275 ], [ %inc258, %if.then254 ], [ 7, %sw.bb251 ], [ %inc248, %if.then226 ], [ %n_ops.1.ph, %land.lhs.true ], [ %n_ops.1.ph, %sw.bb41 ], [ %n_ops.1.ph, %sw.bb31 ], [ %inc, %if.end ], [ %n_ops.1.ph, %land.lhs.true51 ], [ %n_ops.1.ph, %land.lhs.true138 ]
  %inc285 = add nsw i32 %i.0, 1
  br label %for.cond.outer

do.cond:                                          ; preds = %for.cond
  %tobool286 = icmp eq i32 %changed.0, 0
  br i1 %tobool286, label %do.end, label %for.cond

do.end:                                           ; preds = %do.cond
  %cmp287 = icmp sgt i32 %n_ops.1.ph, 2
  %tobool290 = icmp ne i32 %force, 0
  %or.cond = or i1 %cmp287, %tobool290
  br i1 %or.cond, label %for.cond293.preheader, label %cleanup

for.cond293.preheader:                            ; preds = %do.end
  %cmp294971 = icmp sgt i32 %n_ops.1.ph, 0
  br i1 %cmp294971, label %for.body296, label %do.body310.preheader

do.body310.preheader:                             ; preds = %for.body296, %for.cond293.preheader
  %input_consts.3.lcssa = phi i32 [ %input_consts.1.ph, %for.cond293.preheader ], [ %inc305.input_consts.3, %for.body296 ]
  %sub = add nsw i32 %n_ops.1.ph, -1
  %cmp312967 = icmp sgt i32 %sub, 0
  br label %do.body310

for.body296:                                      ; preds = %for.cond293.preheader, %for.body296
  %indvars.iv1014 = phi i64 [ %indvars.iv.next1015, %for.body296 ], [ 0, %for.cond293.preheader ]
  %input_consts.3972 = phi i32 [ %inc305.input_consts.3, %for.body296 ], [ %input_consts.1.ph, %for.cond293.preheader ]
  %op299 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv1014, i32 0
  %17 = load %struct.rtx_def** %op299, align 16, !tbaa !21
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load300 = load i32* %18, align 8
  %bf.clear301 = and i32 %bf.load300, 65535
  %cmp302 = icmp eq i32 %bf.clear301, 58
  %inc305 = zext i1 %cmp302 to i32
  %inc305.input_consts.3 = add nsw i32 %inc305, %input_consts.3972
  %indvars.iv.next1015 = add nuw nsw i64 %indvars.iv1014, 1
  %lftr.wideiv1016 = trunc i64 %indvars.iv.next1015 to i32
  %exitcond1017 = icmp eq i32 %lftr.wideiv1016, %n_ops.1.ph
  br i1 %exitcond1017, label %do.body310.preheader, label %for.body296

do.body310:                                       ; preds = %do.body310.preheader, %for.end514
  %first.0 = phi i32 [ 0, %for.end514 ], [ 1, %do.body310.preheader ]
  br i1 %cmp312967, label %for.body314.lr.ph, label %for.end514

for.body314.lr.ph:                                ; preds = %do.body310
  %tobool337 = icmp eq i32 %first.0, 0
  br label %for.body314

for.cond311.loopexit:                             ; preds = %for.inc509.us, %for.inc509, %for.body314
  %changed.3.lcssa = phi i32 [ %changed.2968, %for.body314 ], [ %changed.4, %for.inc509 ], [ %changed.4.us, %for.inc509.us ]
  %indvars.iv.next1004 = add nuw nsw i64 %indvars.iv1003, 1
  %exitcond1013 = icmp eq i32 %19, %sub
  br i1 %exitcond1013, label %for.end514, label %for.body314

for.body314:                                      ; preds = %for.cond311.loopexit, %for.body314.lr.ph
  %indvars.iv1010 = phi i64 [ 0, %for.body314.lr.ph ], [ %indvars.iv.next1011, %for.cond311.loopexit ]
  %indvars.iv1003 = phi i64 [ 1, %for.body314.lr.ph ], [ %indvars.iv.next1004, %for.cond311.loopexit ]
  %changed.2968 = phi i32 [ %first.0, %for.body314.lr.ph ], [ %changed.3.lcssa, %for.cond311.loopexit ]
  %indvars.iv.next1011 = add nuw nsw i64 %indvars.iv1010, 1
  %19 = trunc i64 %indvars.iv.next1011 to i32
  %cmp316962 = icmp slt i32 %19, %n_ops.1.ph
  br i1 %cmp316962, label %for.body318.lr.ph, label %for.cond311.loopexit

for.body318.lr.ph:                                ; preds = %for.body314
  %op321 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv1010, i32 0
  %neg327 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv1010, i32 1
  br i1 %tobool337, label %for.body318, label %for.body318.us

for.body318.us:                                   ; preds = %for.body318.lr.ph, %for.inc509.us
  %indvars.iv1005 = phi i64 [ %indvars.iv.next1006, %for.inc509.us ], [ %indvars.iv1003, %for.body318.lr.ph ]
  %changed.3963.us = phi i32 [ %changed.4.us, %for.inc509.us ], [ %changed.2968, %for.body318.lr.ph ]
  %20 = load %struct.rtx_def** %op321, align 16, !tbaa !21
  %op324.us = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv1005, i32 0
  %21 = load %struct.rtx_def** %op324.us, align 16, !tbaa !21
  %22 = load i32* %neg327, align 8, !tbaa !23
  %neg330.us = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv1005, i32 1
  %23 = load i32* %neg330.us, align 8, !tbaa !23
  %cmp331.us = icmp ne %struct.rtx_def* %20, null
  %cmp334.us = icmp ne %struct.rtx_def* %21, null
  %or.cond742.us = and i1 %cmp331.us, %cmp334.us
  br i1 %or.cond742.us, label %lor.lhs.false338.us, label %for.inc509.us

lor.lhs.false338.us:                              ; preds = %for.body318.us
  %24 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load339.us = load i32* %24, align 8
  %bf.clear340.us = and i32 %bf.load339.us, 65535
  switch i32 %bf.clear340.us, label %for.inc509.us [
    i32 67, label %land.lhs.true378.us
    i32 68, label %land.lhs.true378.us
    i32 54, label %land.lhs.true378.us
    i32 55, label %land.lhs.true378.us
    i32 58, label %land.lhs.true378.us
    i32 134, label %land.lhs.true378.us
    i32 56, label %land.lhs.true378.us
    i32 140, label %land.lhs.true378.us
  ]

land.lhs.true378.us:                              ; preds = %lor.lhs.false338.us, %lor.lhs.false338.us, %lor.lhs.false338.us, %lor.lhs.false338.us, %lor.lhs.false338.us, %lor.lhs.false338.us, %lor.lhs.false338.us, %lor.lhs.false338.us
  %25 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 0
  %bf.load379.us = load i32* %25, align 8
  %bf.clear380.us = and i32 %bf.load379.us, 65535
  switch i32 %bf.clear380.us, label %for.inc509.us [
    i32 67, label %if.then418.us
    i32 68, label %if.then418.us
    i32 54, label %if.then418.us
    i32 55, label %if.then418.us
    i32 58, label %if.then418.us
    i32 134, label %if.then418.us
    i32 56, label %if.then418.us
    i32 140, label %if.then418.us
  ]

if.then418.us:                                    ; preds = %land.lhs.true378.us, %land.lhs.true378.us, %land.lhs.true378.us, %land.lhs.true378.us, %land.lhs.true378.us, %land.lhs.true378.us, %land.lhs.true378.us, %land.lhs.true378.us
  %cmp419.us = icmp eq i32 %22, %23
  br i1 %cmp419.us, label %if.else.us, label %if.then421.us

if.then421.us:                                    ; preds = %if.then418.us
  %tobool422.us = icmp eq i32 %22, 0
  %..us = select i1 %tobool422.us, %struct.rtx_def* %20, %struct.rtx_def* %21
  br label %if.end429.us

if.else.us:                                       ; preds = %if.then418.us
  %call425.us = call i32 @swap_commutative_operands_p(%struct.rtx_def* %20, %struct.rtx_def* %21) #2
  %tobool426.us = icmp eq i32 %call425.us, 0
  %.930.us = select i1 %tobool426.us, %struct.rtx_def* %20, %struct.rtx_def* %21
  br label %if.end429.us

if.end429.us:                                     ; preds = %if.else.us, %if.then421.us
  %tobool426.sink.us = phi i1 [ %tobool426.us, %if.else.us ], [ %tobool422.us, %if.then421.us ]
  %lhs.0.us = phi %struct.rtx_def* [ %.930.us, %if.else.us ], [ %..us, %if.then421.us ]
  %ncode.0.us = phi i32 [ 75, %if.else.us ], [ 76, %if.then421.us ]
  %.931.us = select i1 %tobool426.sink.us, %struct.rtx_def* %21, %struct.rtx_def* %20
  %call430.us = call %struct.rtx_def* @simplify_binary_operation(i32 %ncode.0.us, i32 %mode, %struct.rtx_def* %lhs.0.us, %struct.rtx_def* %.931.us)
  %tobool431.us = icmp eq %struct.rtx_def* %call430.us, null
  br i1 %tobool431.us, label %for.inc509.us, label %land.lhs.true432.us

land.lhs.true432.us:                              ; preds = %if.end429.us
  %26 = getelementptr inbounds %struct.rtx_def* %call430.us, i64 0, i32 0
  %bf.load433.us = load i32* %26, align 8
  %bf.clear434.us = and i32 %bf.load433.us, 65535
  switch i32 %bf.clear434.us, label %if.then476.us [
    i32 58, label %land.lhs.true437.us
    i32 86, label %land.lhs.true470.us
  ]

land.lhs.true437.us:                              ; preds = %land.lhs.true432.us
  %arrayidx439.us = getelementptr inbounds %struct.rtx_def* %call430.us, i64 0, i32 1, i64 0
  %rtx440.us = bitcast %union.rtunion_def* %arrayidx439.us to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx440.us, align 8, !tbaa !6
  %28 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 0
  %bf.load441.us = load i32* %28, align 8
  %bf.clear442.us = and i32 %bf.load441.us, 65535
  %cmp443.us = icmp eq i32 %bf.clear442.us, %ncode.0.us
  br i1 %cmp443.us, label %land.lhs.true445.us, label %if.then476.us.thread1038

land.lhs.true445.us:                              ; preds = %land.lhs.true437.us
  %fld449.us = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1
  %rtx451.us = bitcast [1 x %union.rtunion_def]* %fld449.us to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx451.us, align 8, !tbaa !6
  %cmp452.us = icmp eq %struct.rtx_def* %29, %lhs.0.us
  br i1 %cmp452.us, label %land.lhs.true454.us, label %if.then476.us.thread1038

land.lhs.true454.us:                              ; preds = %land.lhs.true445.us
  %arrayidx459.us = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 1
  %rtx460.us = bitcast %union.rtunion_def* %arrayidx459.us to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx460.us, align 8, !tbaa !6
  %cmp461.us = icmp eq %struct.rtx_def* %30, %.931.us
  br i1 %cmp461.us, label %for.inc509.us, label %if.then476.us.thread1038

land.lhs.true470.us:                              ; preds = %land.lhs.true432.us
  %arrayidx472.us = getelementptr inbounds %struct.rtx_def* %call430.us, i64 0, i32 1, i64 0
  %rtx473.us = bitcast %union.rtunion_def* %arrayidx472.us to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx473.us, align 8, !tbaa !6
  %cmp474.us = icmp eq %struct.rtx_def* %31, %.931.us
  br i1 %cmp474.us, label %for.inc509.us, label %if.then476.us.thread

if.then476.us.thread:                             ; preds = %land.lhs.true470.us
  %and.us1029 = and i32 %23, %22
  br label %if.end488.us

if.then476.us.thread1038:                         ; preds = %land.lhs.true454.us, %land.lhs.true445.us, %land.lhs.true437.us
  %and.us1039 = and i32 %23, %22
  br label %if.end488.us

if.then476.us:                                    ; preds = %land.lhs.true432.us
  %and.us = and i32 %23, %22
  %cmp479.us = icmp eq i32 %bf.clear434.us, 77
  br i1 %cmp479.us, label %if.then481.us, label %if.end488.us

if.then481.us:                                    ; preds = %if.then476.us
  %arrayidx483.us = getelementptr inbounds %struct.rtx_def* %call430.us, i64 0, i32 1, i64 0
  %rtx484.us = bitcast %union.rtunion_def* %arrayidx483.us to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx484.us, align 8, !tbaa !6
  %lnot486.us = icmp eq i32 %and.us, 0
  %lnot.ext487.us = zext i1 %lnot486.us to i32
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load489.us.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end488.us

if.end488.us:                                     ; preds = %if.then476.us.thread1038, %if.then476.us.thread, %if.then481.us, %if.then476.us
  %bf.load489.us = phi i32 [ %bf.load489.us.pre, %if.then481.us ], [ %bf.load433.us, %if.then476.us ], [ %bf.load433.us, %if.then476.us.thread ], [ %bf.load433.us, %if.then476.us.thread1038 ]
  %tem.0.us = phi %struct.rtx_def* [ %32, %if.then481.us ], [ %call430.us, %if.then476.us ], [ %call430.us, %if.then476.us.thread ], [ %call430.us, %if.then476.us.thread1038 ]
  %lneg.0.us = phi i32 [ %lnot.ext487.us, %if.then481.us ], [ %and.us, %if.then476.us ], [ %and.us1029, %if.then476.us.thread ], [ %and.us1039, %if.then476.us.thread1038 ]
  %bf.clear490.us = and i32 %bf.load489.us, 65535
  %cmp491.us = icmp eq i32 %bf.clear490.us, 54
  %tobool494.us = icmp ne i32 %lneg.0.us, 0
  %or.cond743.us = and i1 %cmp491.us, %tobool494.us
  br i1 %or.cond743.us, label %if.then495.us, label %if.end497.us

if.then495.us:                                    ; preds = %if.end488.us
  %tem.0.idx.us = getelementptr %struct.rtx_def* %tem.0.us, i64 0, i32 1, i64 0, i32 0
  %tem.0.idx.val.us = load i64* %tem.0.idx.us, align 8, !tbaa !14
  %sub.i934.us = sub nsw i64 0, %tem.0.idx.val.us
  %call.i935.us = call i64 @trunc_int_for_mode(i64 %sub.i934.us, i32 %mode) #2
  %call1.i936.us = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call.i935.us) #2
  br label %if.end497.us

if.end497.us:                                     ; preds = %if.then495.us, %if.end488.us
  %tem.1.us = phi %struct.rtx_def* [ %call1.i936.us, %if.then495.us ], [ %tem.0.us, %if.end488.us ]
  %lneg.1.us = phi i32 [ 0, %if.then495.us ], [ %lneg.0.us, %if.end488.us ]
  store %struct.rtx_def* %tem.1.us, %struct.rtx_def** %op321, align 16, !tbaa !21
  store i32 %lneg.1.us, i32* %neg327, align 8, !tbaa !23
  store %struct.rtx_def* null, %struct.rtx_def** %op324.us, align 16, !tbaa !21
  br label %for.inc509.us

for.inc509.us:                                    ; preds = %if.end497.us, %land.lhs.true470.us, %land.lhs.true454.us, %if.end429.us, %land.lhs.true378.us, %lor.lhs.false338.us, %for.body318.us
  %changed.4.us = phi i32 [ %changed.3963.us, %land.lhs.true454.us ], [ %changed.3963.us, %land.lhs.true470.us ], [ 1, %if.end497.us ], [ %changed.3963.us, %if.end429.us ], [ %changed.3963.us, %for.body318.us ], [ %changed.3963.us, %lor.lhs.false338.us ], [ %changed.3963.us, %land.lhs.true378.us ]
  %indvars.iv.next1006 = add nuw nsw i64 %indvars.iv1005, 1
  %lftr.wideiv1008 = trunc i64 %indvars.iv.next1006 to i32
  %exitcond1009 = icmp eq i32 %lftr.wideiv1008, %n_ops.1.ph
  br i1 %exitcond1009, label %for.cond311.loopexit, label %for.body318.us

for.body318:                                      ; preds = %for.body318.lr.ph, %for.inc509
  %indvars.iv998 = phi i64 [ %indvars.iv.next999, %for.inc509 ], [ %indvars.iv1003, %for.body318.lr.ph ]
  %changed.3963 = phi i32 [ %changed.4, %for.inc509 ], [ %changed.2968, %for.body318.lr.ph ]
  %33 = load %struct.rtx_def** %op321, align 16, !tbaa !21
  %op324 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv998, i32 0
  %34 = load %struct.rtx_def** %op324, align 16, !tbaa !21
  %35 = load i32* %neg327, align 8, !tbaa !23
  %neg330 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv998, i32 1
  %36 = load i32* %neg330, align 8, !tbaa !23
  %cmp331 = icmp ne %struct.rtx_def* %33, null
  %cmp334 = icmp ne %struct.rtx_def* %34, null
  %or.cond742 = and i1 %cmp331, %cmp334
  br i1 %or.cond742, label %if.then418, label %for.inc509

if.then418:                                       ; preds = %for.body318
  %cmp419 = icmp eq i32 %35, %36
  br i1 %cmp419, label %if.else, label %if.then421

if.then421:                                       ; preds = %if.then418
  %tobool422 = icmp eq i32 %35, 0
  %. = select i1 %tobool422, %struct.rtx_def* %33, %struct.rtx_def* %34
  br label %if.end429

if.else:                                          ; preds = %if.then418
  %call425 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %33, %struct.rtx_def* %34) #2
  %tobool426 = icmp eq i32 %call425, 0
  %.930 = select i1 %tobool426, %struct.rtx_def* %33, %struct.rtx_def* %34
  br label %if.end429

if.end429:                                        ; preds = %if.else, %if.then421
  %tobool426.sink = phi i1 [ %tobool426, %if.else ], [ %tobool422, %if.then421 ]
  %lhs.0 = phi %struct.rtx_def* [ %.930, %if.else ], [ %., %if.then421 ]
  %ncode.0 = phi i32 [ 75, %if.else ], [ 76, %if.then421 ]
  %.931 = select i1 %tobool426.sink, %struct.rtx_def* %34, %struct.rtx_def* %33
  %call430 = call %struct.rtx_def* @simplify_binary_operation(i32 %ncode.0, i32 %mode, %struct.rtx_def* %lhs.0, %struct.rtx_def* %.931)
  %tobool431 = icmp eq %struct.rtx_def* %call430, null
  br i1 %tobool431, label %for.inc509, label %land.lhs.true432

land.lhs.true432:                                 ; preds = %if.end429
  %37 = getelementptr inbounds %struct.rtx_def* %call430, i64 0, i32 0
  %bf.load433 = load i32* %37, align 8
  %bf.clear434 = and i32 %bf.load433, 65535
  %cmp435 = icmp eq i32 %bf.clear434, 58
  br i1 %cmp435, label %land.lhs.true437, label %if.then476

land.lhs.true437:                                 ; preds = %land.lhs.true432
  %arrayidx439 = getelementptr inbounds %struct.rtx_def* %call430, i64 0, i32 1, i64 0
  %rtx440 = bitcast %union.rtunion_def* %arrayidx439 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx440, align 8, !tbaa !6
  %39 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load441 = load i32* %39, align 8
  %bf.clear442 = and i32 %bf.load441, 65535
  %cmp443 = icmp eq i32 %bf.clear442, %ncode.0
  br i1 %cmp443, label %land.lhs.true445, label %if.then476.thread

land.lhs.true445:                                 ; preds = %land.lhs.true437
  %fld449 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1
  %rtx451 = bitcast [1 x %union.rtunion_def]* %fld449 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx451, align 8, !tbaa !6
  %cmp452 = icmp eq %struct.rtx_def* %40, %lhs.0
  br i1 %cmp452, label %land.lhs.true454, label %if.then476.thread

land.lhs.true454:                                 ; preds = %land.lhs.true445
  %arrayidx459 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 1
  %rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx460, align 8, !tbaa !6
  %cmp461 = icmp eq %struct.rtx_def* %41, %.931
  br i1 %cmp461, label %for.inc509, label %if.then476.thread

if.then476.thread:                                ; preds = %land.lhs.true437, %land.lhs.true445, %land.lhs.true454
  %and1031 = and i32 %36, %35
  br label %if.end488

if.then476:                                       ; preds = %land.lhs.true432
  %and = and i32 %36, %35
  %cmp479 = icmp eq i32 %bf.clear434, 77
  br i1 %cmp479, label %if.then481, label %if.end488

if.then481:                                       ; preds = %if.then476
  %arrayidx483 = getelementptr inbounds %struct.rtx_def* %call430, i64 0, i32 1, i64 0
  %rtx484 = bitcast %union.rtunion_def* %arrayidx483 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx484, align 8, !tbaa !6
  %lnot486 = icmp eq i32 %and, 0
  %lnot.ext487 = zext i1 %lnot486 to i32
  %.phi.trans.insert1026 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load489.pre = load i32* %.phi.trans.insert1026, align 8
  br label %if.end488

if.end488:                                        ; preds = %if.then476.thread, %if.then481, %if.then476
  %bf.load489 = phi i32 [ %bf.load489.pre, %if.then481 ], [ %bf.load433, %if.then476 ], [ %bf.load433, %if.then476.thread ]
  %tem.0 = phi %struct.rtx_def* [ %42, %if.then481 ], [ %call430, %if.then476 ], [ %call430, %if.then476.thread ]
  %lneg.0 = phi i32 [ %lnot.ext487, %if.then481 ], [ %and, %if.then476 ], [ %and1031, %if.then476.thread ]
  %bf.clear490 = and i32 %bf.load489, 65535
  %cmp491 = icmp eq i32 %bf.clear490, 54
  %tobool494 = icmp ne i32 %lneg.0, 0
  %or.cond743 = and i1 %cmp491, %tobool494
  br i1 %or.cond743, label %if.then495, label %if.end497

if.then495:                                       ; preds = %if.end488
  %tem.0.idx = getelementptr %struct.rtx_def* %tem.0, i64 0, i32 1, i64 0, i32 0
  %tem.0.idx.val = load i64* %tem.0.idx, align 8, !tbaa !14
  %sub.i934 = sub nsw i64 0, %tem.0.idx.val
  %call.i935 = call i64 @trunc_int_for_mode(i64 %sub.i934, i32 %mode) #2
  %call1.i936 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call.i935) #2
  br label %if.end497

if.end497:                                        ; preds = %if.then495, %if.end488
  %tem.1 = phi %struct.rtx_def* [ %call1.i936, %if.then495 ], [ %tem.0, %if.end488 ]
  %lneg.1 = phi i32 [ 0, %if.then495 ], [ %lneg.0, %if.end488 ]
  store %struct.rtx_def* %tem.1, %struct.rtx_def** %op321, align 16, !tbaa !21
  store i32 %lneg.1, i32* %neg327, align 8, !tbaa !23
  store %struct.rtx_def* null, %struct.rtx_def** %op324, align 16, !tbaa !21
  br label %for.inc509

for.inc509:                                       ; preds = %if.end429, %for.body318, %if.end497, %land.lhs.true454
  %changed.4 = phi i32 [ %changed.3963, %land.lhs.true454 ], [ 1, %if.end497 ], [ %changed.3963, %if.end429 ], [ %changed.3963, %for.body318 ]
  %indvars.iv.next999 = add nuw nsw i64 %indvars.iv998, 1
  %lftr.wideiv1001 = trunc i64 %indvars.iv.next999 to i32
  %exitcond1002 = icmp eq i32 %lftr.wideiv1001, %n_ops.1.ph
  br i1 %exitcond1002, label %for.cond311.loopexit, label %for.body318

for.end514:                                       ; preds = %for.cond311.loopexit, %do.body310
  %changed.2.lcssa = phi i32 [ %first.0, %do.body310 ], [ %changed.3.lcssa, %for.cond311.loopexit ]
  %tobool516 = icmp eq i32 %changed.2.lcssa, 0
  br i1 %tobool516, label %for.cond518.preheader, label %do.body310

for.cond518.preheader:                            ; preds = %for.end514
  br i1 %cmp294971, label %for.body521, label %if.end649.thread

if.end649.thread:                                 ; preds = %for.cond518.preheader
  call void @specqsort(i8* %0, i32 0, i32 16, i32 (...)* bitcast (i32 (i8*, i8*)* @simplify_plus_minus_op_data_cmp to i32 (...)*)) #2
  br label %for.end666

for.body521:                                      ; preds = %for.cond518.preheader, %for.inc533
  %indvars.iv992 = phi i64 [ %indvars.iv.next993, %for.inc533 ], [ 0, %for.cond518.preheader ]
  %i.3959 = phi i32 [ %i.4, %for.inc533 ], [ 0, %for.cond518.preheader ]
  %arrayidx523 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv992
  %op524 = getelementptr inbounds %struct.simplify_plus_minus_op_data* %arrayidx523, i64 0, i32 0
  %43 = load %struct.rtx_def** %op524, align 16, !tbaa !21
  %tobool525 = icmp eq %struct.rtx_def* %43, null
  br i1 %tobool525, label %for.inc533, label %if.then526

if.then526:                                       ; preds = %for.body521
  %inc527 = add nsw i32 %i.3959, 1
  %idxprom528 = sext i32 %i.3959 to i64
  %arrayidx529 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom528
  %44 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx529 to i8*
  %45 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx523 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 16, i32 16, i1 false), !tbaa.struct !24
  br label %for.inc533

for.inc533:                                       ; preds = %for.body521, %if.then526
  %i.4 = phi i32 [ %inc527, %if.then526 ], [ %i.3959, %for.body521 ]
  %indvars.iv.next993 = add nuw nsw i64 %indvars.iv992, 1
  %lftr.wideiv994 = trunc i64 %indvars.iv.next993 to i32
  %exitcond995 = icmp eq i32 %lftr.wideiv994, %n_ops.1.ph
  br i1 %exitcond995, label %for.end535, label %for.body521

for.end535:                                       ; preds = %for.inc533
  call void @specqsort(i8* %0, i32 %i.4, i32 16, i32 (...)* bitcast (i32 (i8*, i8*)* @simplify_plus_minus_op_data_cmp to i32 (...)*)) #2
  %cmp537 = icmp sgt i32 %i.4, 1
  br i1 %cmp537, label %land.lhs.true539, label %if.end649

land.lhs.true539:                                 ; preds = %for.end535
  %sub540 = add nsw i32 %i.4, -1
  %idxprom541 = sext i32 %sub540 to i64
  %op543 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom541, i32 0
  %46 = load %struct.rtx_def** %op543, align 16, !tbaa !21
  %47 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 0
  %bf.load544 = load i32* %47, align 8
  %bf.clear545 = and i32 %bf.load544, 65535
  %cmp546 = icmp eq i32 %bf.clear545, 54
  br i1 %cmp546, label %land.lhs.true548, label %if.end649

land.lhs.true548:                                 ; preds = %land.lhs.true539
  %sub549 = add nsw i32 %i.4, -2
  %idxprom550 = sext i32 %sub549 to i64
  %op552 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom550, i32 0
  %48 = load %struct.rtx_def** %op552, align 16, !tbaa !21
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load553 = load i32* %49, align 8
  %bf.clear554 = and i32 %bf.load553, 65535
  switch i32 %bf.clear554, label %if.end649 [
    i32 67, label %if.then620
    i32 68, label %if.then620
    i32 54, label %if.then620
    i32 55, label %if.then620
    i32 58, label %if.then620
    i32 134, label %if.then620
    i32 56, label %if.then620
    i32 140, label %if.then620
  ]

if.then620:                                       ; preds = %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548, %land.lhs.true548
  %neg628 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom541, i32 1
  %50 = load i32* %neg628, align 8, !tbaa !23
  %neg632 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom550, i32 1
  %51 = load i32* %neg632, align 8, !tbaa !23
  %tobool634 = icmp eq i32 %50, %51
  br i1 %tobool634, label %if.end637, label %if.then635

if.then635:                                       ; preds = %if.then620
  %.idx = getelementptr %struct.rtx_def* %46, i64 0, i32 1, i64 0, i32 0
  %.idx.val = load i64* %.idx, align 8, !tbaa !14
  %sub.i937 = sub nsw i64 0, %.idx.val
  %call.i938 = call i64 @trunc_int_for_mode(i64 %sub.i937, i32 %mode) #2
  %call1.i939 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call.i938) #2
  %.pre = load %struct.rtx_def** %op552, align 16, !tbaa !21
  br label %if.end637

if.end637:                                        ; preds = %if.then620, %if.then635
  %52 = phi %struct.rtx_def* [ %.pre, %if.then635 ], [ %48, %if.then620 ]
  %value.0 = phi %struct.rtx_def* [ %call1.i939, %if.then635 ], [ %46, %if.then620 ]
  %rtwint = getelementptr inbounds %struct.rtx_def* %value.0, i64 0, i32 1, i64 0, i32 0
  %53 = load i64* %rtwint, align 8, !tbaa !14
  %call644 = call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %52, i64 %53) #2
  store %struct.rtx_def* %call644, %struct.rtx_def** %op552, align 16, !tbaa !21
  br label %if.end649

if.end649:                                        ; preds = %land.lhs.true548, %if.end637, %land.lhs.true539, %for.end535
  %n_ops.3 = phi i32 [ %sub540, %if.end637 ], [ %i.4, %land.lhs.true539 ], [ %i.4, %for.end535 ], [ %i.4, %land.lhs.true548 ]
  %cmp651954 = icmp sgt i32 %n_ops.3, 0
  br i1 %cmp651954, label %for.body653, label %for.end666

for.body653:                                      ; preds = %if.end649, %for.body653
  %indvars.iv988 = phi i64 [ %indvars.iv.next989, %for.body653 ], [ 0, %if.end649 ]
  %n_consts.0955 = phi i32 [ %inc662.n_consts.0, %for.body653 ], [ 0, %if.end649 ]
  %op656 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv988, i32 0
  %54 = load %struct.rtx_def** %op656, align 16, !tbaa !21
  %55 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load657 = load i32* %55, align 8
  %bf.clear658 = and i32 %bf.load657, 65535
  %cmp659 = icmp eq i32 %bf.clear658, 58
  %inc662 = zext i1 %cmp659 to i32
  %inc662.n_consts.0 = add nsw i32 %inc662, %n_consts.0955
  %indvars.iv.next989 = add nuw nsw i64 %indvars.iv988, 1
  %lftr.wideiv990 = trunc i64 %indvars.iv.next989 to i32
  %exitcond991 = icmp eq i32 %lftr.wideiv990, %n_ops.3
  br i1 %exitcond991, label %for.end666, label %for.body653

for.end666:                                       ; preds = %for.body653, %if.end649.thread, %if.end649
  %cmp6519541037 = phi i1 [ false, %if.end649 ], [ false, %if.end649.thread ], [ %cmp651954, %for.body653 ]
  %n_ops.31035 = phi i32 [ %n_ops.3, %if.end649 ], [ 0, %if.end649.thread ], [ %n_ops.3, %for.body653 ]
  %n_consts.0.lcssa = phi i32 [ 0, %if.end649 ], [ 0, %if.end649.thread ], [ %inc662.n_consts.0, %for.body653 ]
  br i1 %tobool290, label %for.cond681.preheader, label %land.lhs.true668

land.lhs.true668:                                 ; preds = %for.end666
  %add669 = add nsw i32 %n_consts.0.lcssa, %n_ops.31035
  %cmp670 = icmp sgt i32 %add669, %input_ops.1.ph
  br i1 %cmp670, label %cleanup, label %lor.lhs.false672

lor.lhs.false672:                                 ; preds = %land.lhs.true668
  %cmp674 = icmp ne i32 %add669, %input_ops.1.ph
  %cmp677 = icmp sgt i32 %n_consts.0.lcssa, %input_consts.3.lcssa
  %or.cond932 = or i1 %cmp674, %cmp677
  br i1 %or.cond932, label %for.cond681.preheader, label %cleanup

for.cond681.preheader:                            ; preds = %lor.lhs.false672, %for.end666
  br i1 %cmp6519541037, label %land.rhs, label %for.end691

for.cond681:                                      ; preds = %land.rhs
  %56 = trunc i64 %indvars.iv.next987 to i32
  %cmp682 = icmp slt i32 %56, %n_ops.31035
  br i1 %cmp682, label %land.rhs, label %for.end691

land.rhs:                                         ; preds = %for.cond681.preheader, %for.cond681
  %indvars.iv986 = phi i64 [ %indvars.iv.next987, %for.cond681 ], [ 0, %for.cond681.preheader ]
  %neg686 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv986, i32 1
  %57 = load i32* %neg686, align 8, !tbaa !23
  %tobool687 = icmp eq i32 %57, 0
  %indvars.iv.next987 = add nuw nsw i64 %indvars.iv986, 1
  br i1 %tobool687, label %land.rhs.for.end691_crit_edge, label %for.cond681

land.rhs.for.end691_crit_edge:                    ; preds = %land.rhs
  %58 = trunc i64 %indvars.iv986 to i32
  br label %for.end691

for.end691:                                       ; preds = %for.cond681, %land.rhs.for.end691_crit_edge, %for.cond681.preheader
  %i.6.lcssa = phi i32 [ %58, %land.rhs.for.end691_crit_edge ], [ 0, %for.cond681.preheader ], [ %56, %for.cond681 ]
  %cmp692 = icmp eq i32 %i.6.lcssa, %n_ops.31035
  br i1 %cmp692, label %for.cond695.preheader, label %if.else705

for.cond695.preheader:                            ; preds = %for.end691
  br i1 %cmp6519541037, label %for.body698, label %if.end721

for.body698:                                      ; preds = %for.cond695.preheader, %for.body698
  %indvars.iv982 = phi i64 [ %indvars.iv.next983, %for.body698 ], [ 0, %for.cond695.preheader ]
  %neg701 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv982, i32 1
  store i32 0, i32* %neg701, align 8, !tbaa !23
  %indvars.iv.next983 = add nuw nsw i64 %indvars.iv982, 1
  %lftr.wideiv984 = trunc i64 %indvars.iv.next983 to i32
  %exitcond985 = icmp eq i32 %lftr.wideiv984, %n_ops.31035
  br i1 %exitcond985, label %if.end721, label %for.body698

if.else705:                                       ; preds = %for.end691
  %cmp706 = icmp eq i32 %i.6.lcssa, 0
  br i1 %cmp706, label %if.end721, label %if.then708

if.then708:                                       ; preds = %if.else705
  %59 = load %struct.rtx_def** %op, align 16, !tbaa !21
  %idxprom712 = sext i32 %i.6.lcssa to i64
  %arrayidx713 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom712
  %60 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx713 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %60, i64 16, i32 16, i1 false), !tbaa.struct !24
  %op716 = getelementptr inbounds %struct.simplify_plus_minus_op_data* %arrayidx713, i64 0, i32 0
  store %struct.rtx_def* %59, %struct.rtx_def** %op716, align 16, !tbaa !21
  %neg719 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom712, i32 1
  store i32 1, i32* %neg719, align 8, !tbaa !23
  br label %if.end721

if.end721:                                        ; preds = %for.body698, %for.cond695.preheader, %if.else705, %if.then708
  %negate.0 = phi i32 [ 0, %if.then708 ], [ 0, %if.else705 ], [ 1, %for.cond695.preheader ], [ 1, %for.body698 ]
  %61 = load %struct.rtx_def** %op, align 16, !tbaa !21
  %cmp725945 = icmp sgt i32 %n_ops.31035, 1
  br i1 %cmp725945, label %for.body727, label %for.end738

for.body727:                                      ; preds = %if.end721, %for.body727
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body727 ], [ 1, %if.end721 ]
  %result.0947 = phi %struct.rtx_def* [ %call735, %for.body727 ], [ %61, %if.end721 ]
  %neg730 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv, i32 1
  %62 = load i32* %neg730, align 8, !tbaa !23
  %tobool731 = icmp ne i32 %62, 0
  %cond = select i1 %tobool731, i32 76, i32 75
  %op734 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %indvars.iv, i32 0
  %63 = load %struct.rtx_def** %op734, align 16, !tbaa !21
  %call735 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %cond, i32 %mode, %struct.rtx_def* %result.0947, %struct.rtx_def* %63) #2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n_ops.31035
  br i1 %exitcond, label %for.end738, label %for.body727

for.end738:                                       ; preds = %for.body727, %if.end721
  %result.0.lcssa = phi %struct.rtx_def* [ %61, %if.end721 ], [ %call735, %for.body727 ]
  %tobool739 = icmp eq i32 %negate.0, 0
  br i1 %tobool739, label %cleanup, label %cond.true

cond.true:                                        ; preds = %for.end738
  %call740 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %mode, %struct.rtx_def* %result.0.lcssa) #2
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %cond.true, %for.end738, %land.lhs.true668, %lor.lhs.false672, %do.end
  %retval.0 = phi %struct.rtx_def* [ null, %do.end ], [ null, %lor.lhs.false672 ], [ null, %land.lhs.true668 ], [ %call740, %cond.true ], [ %result.0.lcssa, %for.end738 ], [ null, %sw.bb ]
  call void @llvm.lifetime.end(i64 128, i8* %0) #2
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* readonly %x) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load1 = load i32* %2, align 8
  %3 = and i32 %bf.load1, 67174399
  %4 = icmp eq i32 %3, 67108932
  br i1 %4, label %if.end7, label %return

if.end7:                                          ; preds = %if.end
  %call = tail call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %1) #2
  %call8 = tail call i32 @get_pool_mode(%struct.rtx_def* %1) #2
  %bf.load9 = load i32* %0, align 8
  %bf.lshr10 = lshr i32 %bf.load9, 16
  %bf.clear11 = and i32 %bf.lshr10, 255
  %cmp12 = icmp eq i32 %call8, %bf.clear11
  br i1 %cmp12, label %return, label %if.then13

if.then13:                                        ; preds = %if.end7
  %call17 = tail call %struct.rtx_def* @simplify_subreg(i32 %bf.clear11, %struct.rtx_def* %call, i32 %call8, i32 0)
  %tobool18 = icmp ne %struct.rtx_def* %call17, null
  %cond = select i1 %tobool18, %struct.rtx_def* %call17, %struct.rtx_def* %x
  br label %return

return:                                           ; preds = %if.end, %if.end7, %entry, %if.then13
  %retval.0 = phi %struct.rtx_def* [ %cond, %if.then13 ], [ %x, %entry ], [ %x, %if.end ], [ %call, %if.end7 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) #1

declare i32 @get_pool_mode(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_subreg(i32 %outermode, %struct.rtx_def* %op, i32 %innermode, i32 %byte) #0 {
entry:
  %cmp = icmp eq i32 %innermode, 0
  %cmp1 = icmp eq i32 %outermode, 0
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i32 %innermode, 51
  %or.cond455 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq i32 %outermode, 51
  %or.cond456 = or i1 %or.cond455, %cmp5
  br i1 %or.cond456, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 2488, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.simplify_subreg, i64 0, i64 0)) #4
  unreachable

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp6 = icmp eq i32 %bf.clear, %innermode
  %cmp10 = icmp eq i32 %bf.clear, 0
  %or.cond586 = or i1 %cmp6, %cmp10
  br i1 %or.cond586, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 2492, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.simplify_subreg, i64 0, i64 0)) #4
  unreachable

if.end12:                                         ; preds = %if.end
  %idxprom = sext i32 %outermode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %1 to i32
  %rem = urem i32 %byte, %conv
  %tobool = icmp eq i32 %rem, 0
  br i1 %tobool, label %lor.lhs.false13, label %if.then19

lor.lhs.false13:                                  ; preds = %if.end12
  %idxprom14 = sext i32 %innermode to i64
  %arrayidx15 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom14
  %2 = load i8* %arrayidx15, align 1, !tbaa !1
  %conv16 = zext i8 %2 to i32
  %cmp17 = icmp ugt i32 %conv16, %byte
  br i1 %cmp17, label %if.end20, label %if.then19

if.then19:                                        ; preds = %lor.lhs.false13, %if.end12
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 2496, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.simplify_subreg, i64 0, i64 0)) #4
  unreachable

if.end20:                                         ; preds = %lor.lhs.false13
  %cmp21 = icmp ne i32 %outermode, %innermode
  %tobool24 = icmp ne i32 %byte, 0
  %or.cond457 = or i1 %cmp21, %tobool24
  br i1 %or.cond457, label %if.end26, label %return

if.end26:                                         ; preds = %if.end20
  %bf.clear28 = and i32 %bf.load, 65535
  switch i32 %bf.clear28, label %if.end181 [
    i32 67, label %if.then66
    i32 68, label %if.then66
    i32 54, label %if.then66
    i32 55, label %if.then66
    i32 58, label %if.then66
    i32 134, label %if.then66
    i32 56, label %if.then66
    i32 140, label %if.then66
  ]

if.then66:                                        ; preds = %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26, %if.end26
  %call = tail call i32 @subreg_lowpart_offset(i32 %outermode, i32 %innermode) #2
  %cmp67 = icmp eq i32 %call, %byte
  br i1 %cmp67, label %if.then69, label %if.end74

if.then69:                                        ; preds = %if.then66
  %call70 = tail call %struct.rtx_def* @gen_lowpart_if_possible(i32 %outermode, %struct.rtx_def* %op) #2
  %tobool71 = icmp eq %struct.rtx_def* %call70, null
  br i1 %tobool71, label %if.end74, label %return

if.end74:                                         ; preds = %if.then69, %if.then66
  %3 = load i32* @target_flags, align 4, !tbaa !16
  %and = lshr i32 %3, 23
  %4 = and i32 %and, 4
  %5 = add i32 %4, 4
  %cmp79 = icmp eq i32 %conv, %5
  %cmp88 = icmp ugt i8 %2, %1
  %or.cond593 = and i1 %cmp79, %cmp88
  br i1 %or.cond593, label %land.lhs.true90, label %if.end104

land.lhs.true90:                                  ; preds = %if.end74
  %arrayidx92 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %6 = load i32* %arrayidx92, align 4, !tbaa !1
  %cmp93 = icmp eq i32 %6, 1
  br i1 %cmp93, label %if.then95, label %if.end104

if.then95:                                        ; preds = %land.lhs.true90
  %div = udiv i32 %byte, %conv
  %call100 = tail call %struct.rtx_def* @constant_subword(%struct.rtx_def* %op, i32 %div, i32 %innermode) #2
  %tobool101 = icmp eq %struct.rtx_def* %call100, null
  br i1 %tobool101, label %if.end104, label %return

if.end104:                                        ; preds = %if.then95, %land.lhs.true90, %if.end74
  %mul = shl i32 %byte, 3
  %bf.load105 = load i32* %0, align 8
  %bf.clear106 = and i32 %bf.load105, 65535
  switch i32 %bf.clear106, label %if.end181 [
    i32 55, label %sw.bb
    i32 54, label %sw.bb147
  ]

sw.bb:                                            ; preds = %if.end104
  %bf.clear109 = and i32 %bf.load105, 16711680
  %cmp110 = icmp eq i32 %bf.clear109, 0
  br i1 %cmp110, label %if.end113, label %if.end181

if.end113:                                        ; preds = %sw.bb
  %arrayidx115 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %7 = load i16* %arrayidx115, align 2, !tbaa !4
  %cmp117 = icmp ugt i16 %7, 63
  br i1 %cmp117, label %return, label %if.end120

if.end120:                                        ; preds = %if.end113
  %cmp121 = icmp sgt i32 %mul, 63
  %rtwint = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 2, i32 0
  %rtwint143 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 1, i32 0
  %cond144.in = select i1 %cmp121, i64* %rtwint, i64* %rtwint143
  %cond144 = load i64* %cond144.in, align 8
  %rem145 = srem i32 %mul, 64
  %call146 = tail call i32 @mode_for_size(i32 64, i32 1, i32 0) #2
  %bf.load148.pre = load i32* %0, align 8
  br label %sw.bb147

sw.bb147:                                         ; preds = %if.end104, %if.end120
  %bf.load148 = phi i32 [ %bf.load105, %if.end104 ], [ %bf.load148.pre, %if.end120 ]
  %val.0 = phi i64 [ 0, %if.end104 ], [ %cond144, %if.end120 ]
  %offset.0 = phi i32 [ %mul, %if.end104 ], [ %rem145, %if.end120 ]
  %bf.clear149 = and i32 %bf.load148, 65535
  %cmp150 = icmp eq i32 %bf.clear149, 54
  br i1 %cmp150, label %if.then152, label %if.end156

if.then152:                                       ; preds = %sw.bb147
  %rtwint155 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0, i32 0
  %8 = load i64* %rtwint155, align 8, !tbaa !14
  br label %if.end156

if.end156:                                        ; preds = %if.then152, %sw.bb147
  %val.1 = phi i64 [ %8, %if.then152 ], [ %val.0, %sw.bb147 ]
  %arrayidx158 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %9 = load i32* %arrayidx158, align 4, !tbaa !1
  %cmp159 = icmp eq i32 %9, 1
  br i1 %cmp159, label %if.end162, label %return

if.end162:                                        ; preds = %if.end156
  %cmp163 = icmp sgt i32 %offset.0, 63
  br i1 %cmp163, label %if.then165, label %if.else

if.then165:                                       ; preds = %if.end162
  %cmp166 = icmp slt i64 %val.1, 0
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !6
  %11 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond171 = select i1 %cmp166, %struct.rtx_def* %10, %struct.rtx_def* %11
  br label %return

if.else:                                          ; preds = %if.end162
  %sh_prom = zext i32 %offset.0 to i64
  %shr = lshr i64 %val.1, %sh_prom
  %arrayidx173 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %12 = load i16* %arrayidx173, align 2, !tbaa !4
  %cmp175 = icmp ult i16 %12, 64
  br i1 %cmp175, label %if.then177, label %if.end179

if.then177:                                       ; preds = %if.else
  %call178 = tail call i64 @trunc_int_for_mode(i64 %shr, i32 %outermode) #2
  br label %if.end179

if.end179:                                        ; preds = %if.then177, %if.else
  %val.2 = phi i64 [ %call178, %if.then177 ], [ %shr, %if.else ]
  %call180 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %val.2) #2
  br label %return

if.end181:                                        ; preds = %if.end26, %sw.bb, %if.end104
  %bf.load182 = phi i32 [ %bf.load, %if.end26 ], [ %bf.load105, %sw.bb ], [ %bf.load105, %if.end104 ]
  %bf.clear183 = and i32 %bf.load182, 65535
  switch i32 %bf.clear183, label %if.end384 [
    i32 63, label %if.then186
    i32 61, label %land.lhs.true318
  ]

if.then186:                                       ; preds = %if.end181
  %fld187 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld187 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load189 = load i32* %14, align 8
  %bf.lshr190 = lshr i32 %bf.load189, 16
  %bf.clear191 = and i32 %bf.lshr190, 255
  %arrayidx193 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx193 to i32*
  %15 = load i32* %rtuint, align 4, !tbaa !16
  %add = add i32 %15, %byte
  %cmp195 = icmp eq i32 %bf.clear191, %outermode
  %cmp198 = icmp eq i32 %byte, 0
  %or.cond458 = and i1 %cmp195, %cmp198
  %cmp204 = icmp eq i32 %15, 0
  %or.cond587 = and i1 %or.cond458, %cmp204
  br i1 %or.cond587, label %return, label %if.end210

if.end210:                                        ; preds = %if.then186
  %idxprom254584 = zext i32 %bf.clear191 to i64
  %arrayidx255 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom254584
  %16 = load i8* %arrayidx255, align 1, !tbaa !1
  %conv256 = zext i8 %16 to i32
  %cmp260 = icmp ugt i8 %16, %1
  br i1 %cmp260, label %if.then262, label %if.else280

if.then262:                                       ; preds = %if.end210
  %cmp263 = icmp slt i32 %add, 0
  br i1 %cmp263, label %return, label %if.end266

if.end266:                                        ; preds = %if.then262
  %rem270 = srem i32 %add, %conv
  %tobool271 = icmp eq i32 %rem270, 0
  %cmp276 = icmp ult i32 %add, %conv256
  %or.cond588 = and i1 %tobool271, %cmp276
  br i1 %or.cond588, label %if.end295, label %return

if.else280:                                       ; preds = %if.end210
  %cmp290 = icmp eq i32 %add, 0
  br i1 %cmp290, label %if.end295, label %return

if.end295:                                        ; preds = %if.else280, %if.end266
  %final_offset.0 = phi i32 [ %add, %if.end266 ], [ 0, %if.else280 ]
  %call305 = tail call %struct.rtx_def* @simplify_subreg(i32 %outermode, %struct.rtx_def* %13, i32 %bf.clear191, i32 %final_offset.0)
  %tobool306 = icmp eq %struct.rtx_def* %call305, null
  br i1 %tobool306, label %if.end308, label %return

if.end308:                                        ; preds = %if.end295
  %17 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call312 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %outermode, %struct.rtx_def* %17, i32 %final_offset.0) #2
  br label %return

land.lhs.true318:                                 ; preds = %if.end181
  %bf.clear321 = and i32 %bf.load182, 1073741824
  %tobool322 = icmp ne i32 %bf.clear321, 0
  %18 = load i32* @rtx_equal_function_value_matters, align 4
  %tobool324 = icmp ne i32 %18, 0
  %or.cond459 = and i1 %tobool322, %tobool324
  br i1 %or.cond459, label %if.end384, label %land.lhs.true325

land.lhs.true325:                                 ; preds = %land.lhs.true318
  %fld326 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1
  %rtuint328 = bitcast [1 x %union.rtunion_def]* %fld326 to i32*
  %19 = load i32* %rtuint328, align 4, !tbaa !16
  %cmp329 = icmp ult i32 %19, 53
  br i1 %cmp329, label %land.lhs.true331, label %if.end384

land.lhs.true331:                                 ; preds = %land.lhs.true325
  %20 = load i32* @reload_completed, align 4, !tbaa !16
  %tobool332 = icmp eq i32 %20, 0
  %21 = load i32* @frame_pointer_needed, align 4
  %tobool334 = icmp ne i32 %21, 0
  %or.cond460 = or i1 %tobool332, %tobool334
  br i1 %or.cond460, label %lor.lhs.false335, label %land.lhs.true347

lor.lhs.false335:                                 ; preds = %land.lhs.true331
  switch i32 %19, label %if.then359 [
    i32 20, label %if.end384
    i32 6, label %if.end384
    i32 16, label %if.end384
    i32 7, label %if.end384
  ]

land.lhs.true347:                                 ; preds = %land.lhs.true331
  switch i32 %19, label %if.then359 [
    i32 16, label %if.end384
    i32 7, label %if.end384
  ]

if.then359:                                       ; preds = %lor.lhs.false335, %land.lhs.true347
  %call360 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %outermode, %struct.rtx_def* %op, i32 %byte) #2
  %call361 = tail call i32 @subreg_hard_regno(%struct.rtx_def* %call360, i32 0) #2
  %call362 = tail call i32 @ix86_hard_regno_mode_ok(i32 %call361, i32 %outermode) #2
  %tobool363 = icmp eq i32 %call362, 0
  br i1 %tobool363, label %lor.lhs.false364, label %if.then370

lor.lhs.false364:                                 ; preds = %if.then359
  %22 = load i32* %rtuint328, align 4, !tbaa !16
  %call368 = tail call i32 @ix86_hard_regno_mode_ok(i32 %22, i32 %innermode) #2
  %tobool369 = icmp eq i32 %call368, 0
  br i1 %tobool369, label %if.then370, label %lor.lhs.false364.if.end384_crit_edge

lor.lhs.false364.if.end384_crit_edge:             ; preds = %lor.lhs.false364
  %bf.load385.pre = load i32* %0, align 8
  br label %if.end384

if.then370:                                       ; preds = %lor.lhs.false364, %if.then359
  %call371 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %outermode, i32 %call361) #2
  %call372 = tail call i32 @subreg_lowpart_offset(i32 %outermode, i32 %innermode) #2
  %cmp373 = icmp eq i32 %call372, %byte
  br i1 %cmp373, label %if.then375, label %return

if.then375:                                       ; preds = %if.then370
  %arrayidx377 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 1
  %rtuint378 = bitcast %union.rtunion_def* %arrayidx377 to i32*
  %23 = load i32* %rtuint378, align 4, !tbaa !16
  %arrayidx380 = getelementptr inbounds %struct.rtx_def* %call371, i64 0, i32 1, i64 1
  %rtuint381 = bitcast %union.rtunion_def* %arrayidx380 to i32*
  store i32 %23, i32* %rtuint381, align 4, !tbaa !16
  br label %return

if.end384:                                        ; preds = %lor.lhs.false335, %lor.lhs.false335, %lor.lhs.false335, %lor.lhs.false335, %lor.lhs.false364.if.end384_crit_edge, %land.lhs.true347, %land.lhs.true347, %if.end181, %land.lhs.true318, %land.lhs.true325
  %bf.load385 = phi i32 [ %bf.load385.pre, %lor.lhs.false364.if.end384_crit_edge ], [ %bf.load182, %land.lhs.true347 ], [ %bf.load182, %land.lhs.true347 ], [ %bf.load182, %lor.lhs.false335 ], [ %bf.load182, %lor.lhs.false335 ], [ %bf.load182, %if.end181 ], [ %bf.load182, %land.lhs.true318 ], [ %bf.load182, %land.lhs.true325 ], [ %bf.load182, %lor.lhs.false335 ], [ %bf.load182, %lor.lhs.false335 ]
  %bf.clear386 = and i32 %bf.load385, 65535
  %cmp387 = icmp eq i32 %bf.clear386, 66
  br i1 %cmp387, label %land.lhs.true389, label %if.end418

land.lhs.true389:                                 ; preds = %if.end384
  %arrayidx391 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx392, align 8, !tbaa !6
  %call393 = tail call i32 @mode_dependent_address_p(%struct.rtx_def* %24) #2
  %tobool394 = icmp eq i32 %call393, 0
  br i1 %tobool394, label %land.lhs.true395, label %if.end418

land.lhs.true395:                                 ; preds = %land.lhs.true389
  %bf.load396 = load i32* %0, align 8
  %bf.clear398 = and i32 %bf.load396, 134217728
  %tobool399 = icmp eq i32 %bf.clear398, 0
  br i1 %tobool399, label %land.lhs.true403, label %lor.lhs.false400

lor.lhs.false400:                                 ; preds = %land.lhs.true395
  %call401 = tail call i32 @have_insn_for(i32 47, i32 %innermode) #2
  %tobool402 = icmp eq i32 %call401, 0
  br i1 %tobool402, label %lor.lhs.false400.land.lhs.true403_crit_edge, label %if.end418

lor.lhs.false400.land.lhs.true403_crit_edge:      ; preds = %lor.lhs.false400
  %bf.load407.pre = load i32* %0, align 8
  br label %land.lhs.true403

land.lhs.true403:                                 ; preds = %lor.lhs.false400.land.lhs.true403_crit_edge, %land.lhs.true395
  %bf.load407 = phi i32 [ %bf.load407.pre, %lor.lhs.false400.land.lhs.true403_crit_edge ], [ %bf.load396, %land.lhs.true395 ]
  %bf.lshr408 = lshr i32 %bf.load407, 16
  %bf.clear409 = and i32 %bf.lshr408, 255
  %idxprom410583 = zext i32 %bf.clear409 to i64
  %arrayidx411 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom410583
  %25 = load i8* %arrayidx411, align 1, !tbaa !1
  %cmp413 = icmp ugt i8 %1, %25
  br i1 %cmp413, label %if.end418, label %if.then415

if.then415:                                       ; preds = %land.lhs.true403
  %conv416 = zext i32 %byte to i64
  %call417 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op, i32 %outermode, i64 %conv416, i32 0, i32 1) #2
  br label %return

if.end418:                                        ; preds = %lor.lhs.false400, %land.lhs.true403, %land.lhs.true389, %if.end384
  %bf.load419 = load i32* %0, align 8
  %bf.clear420 = and i32 %bf.load419, 65535
  %cmp421 = icmp eq i32 %bf.clear420, 65
  br i1 %cmp421, label %if.then423, label %return

if.then423:                                       ; preds = %if.end418
  %arrayidx425 = getelementptr inbounds [59 x i8]* @mode_unit_size, i64 0, i64 %idxprom14
  %26 = load i8* %arrayidx425, align 1, !tbaa !1
  %conv426 = zext i8 %26 to i32
  %cmp427 = icmp ugt i32 %conv426, %byte
  %arrayidx433 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %arrayidx437 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 1
  %cond440.in.in = select i1 %cmp427, %union.rtunion_def* %arrayidx433, %union.rtunion_def* %arrayidx437
  %cond440.in = bitcast %union.rtunion_def* %cond440.in.in to %struct.rtx_def**
  %cond440 = load %struct.rtx_def** %cond440.in, align 8
  %rem445 = urem i32 %byte, %conv426
  %27 = getelementptr inbounds %struct.rtx_def* %cond440, i64 0, i32 0
  %bf.load446 = load i32* %27, align 8
  %bf.lshr447 = lshr i32 %bf.load446, 16
  %bf.clear448 = and i32 %bf.lshr447, 255
  %call449 = tail call %struct.rtx_def* @simplify_subreg(i32 %outermode, %struct.rtx_def* %cond440, i32 %bf.clear448, i32 %rem445)
  %tobool450 = icmp eq %struct.rtx_def* %call449, null
  br i1 %tobool450, label %if.end452, label %return

if.end452:                                        ; preds = %if.then423
  %call453 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %outermode, %struct.rtx_def* %cond440, i32 %rem445) #2
  br label %return

return:                                           ; preds = %if.end418, %if.then423, %if.then370, %if.then375, %if.end295, %if.else280, %if.end266, %if.then262, %if.then186, %if.end156, %if.end113, %if.then95, %if.then69, %if.end20, %if.end452, %if.then415, %if.end308, %if.end179, %if.then165
  %retval.0 = phi %struct.rtx_def* [ %call312, %if.end308 ], [ %call453, %if.end452 ], [ %call417, %if.then415 ], [ %cond171, %if.then165 ], [ %call180, %if.end179 ], [ %op, %if.end20 ], [ %call70, %if.then69 ], [ %call100, %if.then95 ], [ null, %if.end113 ], [ null, %if.end156 ], [ %13, %if.then186 ], [ null, %if.then262 ], [ null, %if.end266 ], [ null, %if.else280 ], [ %call305, %if.end295 ], [ %call371, %if.then375 ], [ %call371, %if.then370 ], [ %call449, %if.then423 ], [ null, %if.end418 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_gen_unary(i32 %code, i32 %mode, %struct.rtx_def* %op, i32 %op_mode) #0 {
entry:
  %call = tail call %struct.rtx_def* @simplify_unary_operation(i32 %code, i32 %mode, %struct.rtx_def* %op, i32 %op_mode)
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %code, i32 %mode, %struct.rtx_def* %op) #2
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call1, %if.end ], [ %call, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_unary_operation(i32 %code, i32 %mode, %struct.rtx_def* %op, i32 %op_mode) #0 {
entry:
  %d = alloca %struct.realvaluetype, align 8
  %tmp = alloca %struct.realvaluetype, align 8
  %d53 = alloca %struct.realvaluetype, align 8
  %tmp92 = alloca %struct.realvaluetype, align 8
  %lv235 = alloca i64, align 8
  %hv238 = alloca i64, align 8
  %args = alloca %struct.simplify_unary_real_args, align 8
  %args392 = alloca %struct.simplify_unary_real_args, align 8
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %0 = load i16* %arrayidx, align 2, !tbaa !4
  %1 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 66
  br i1 %cmp.i, label %if.end.i, label %avoid_constant_pool_reference.exit

if.end.i:                                         ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load1.i = load i32* %3, align 8
  %4 = and i32 %bf.load1.i, 67174399
  %5 = icmp eq i32 %4, 67108932
  br i1 %5, label %if.end7.i, label %avoid_constant_pool_reference.exit

if.end7.i:                                        ; preds = %if.end.i
  %call.i = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %2) #2
  %call8.i = call i32 @get_pool_mode(%struct.rtx_def* %2) #2
  %bf.load9.i = load i32* %1, align 8
  %bf.lshr10.i = lshr i32 %bf.load9.i, 16
  %bf.clear11.i = and i32 %bf.lshr10.i, 255
  %cmp12.i = icmp eq i32 %call8.i, %bf.clear11.i
  br i1 %cmp12.i, label %avoid_constant_pool_reference.exit, label %if.then13.i

if.then13.i:                                      ; preds = %if.end7.i
  %call17.i = call %struct.rtx_def* @simplify_subreg(i32 %bf.clear11.i, %struct.rtx_def* %call.i, i32 %call8.i, i32 0) #2
  %tobool18.i = icmp ne %struct.rtx_def* %call17.i, null
  %cond.i = select i1 %tobool18.i, %struct.rtx_def* %call17.i, %struct.rtx_def* %op
  br label %avoid_constant_pool_reference.exit

avoid_constant_pool_reference.exit:               ; preds = %entry, %if.end.i, %if.end7.i, %if.then13.i
  %retval.0.i = phi %struct.rtx_def* [ %cond.i, %if.then13.i ], [ %op, %entry ], [ %op, %if.end.i ], [ %call.i, %if.end7.i ]
  switch i32 %code, label %avoid_constant_pool_reference.exit.if.end95_crit_edge [
    i32 125, label %land.lhs.true
    i32 127, label %land.lhs.true31
  ]

avoid_constant_pool_reference.exit.if.end95_crit_edge: ; preds = %avoid_constant_pool_reference.exit
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 0
  %bf.load96.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end95

land.lhs.true:                                    ; preds = %avoid_constant_pool_reference.exit
  %6 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 0
  %bf.load = load i32* %6, align 8
  %7 = and i32 %bf.load, 16777214
  %8 = icmp eq i32 %7, 54
  br i1 %8, label %if.then, label %if.end95

if.then:                                          ; preds = %land.lhs.true
  %bf.clear6 = and i32 %bf.load, 65535
  %cmp15 = icmp eq i32 %bf.clear6, 54
  br i1 %cmp15, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.then
  %rtwint = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 0, i32 0
  %9 = load i64* %rtwint, align 8, !tbaa !14
  %.lobit628 = ashr i64 %9, 63
  br label %if.end

if.else:                                          ; preds = %if.then
  %rtwint23 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 1, i32 0
  %10 = load i64* %rtwint23, align 8, !tbaa !14
  %rtwint26 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 2, i32 0
  %11 = load i64* %rtwint26, align 8, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then17
  %hv.0 = phi i64 [ %.lobit628, %if.then17 ], [ %11, %if.else ]
  %lv.0 = phi i64 [ %9, %if.then17 ], [ %10, %if.else ]
  call void @ereal_from_int(%struct.realvaluetype* %d, i64 %lv.0, i64 %hv.0, i32 %mode) #2
  call void @real_value_truncate(%struct.realvaluetype* sret %tmp, i32 %mode, %struct.realvaluetype* byval align 8 %d) #2
  %12 = bitcast %struct.realvaluetype* %d to i8*
  %13 = bitcast %struct.realvaluetype* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 24, i32 8, i1 false), !tbaa.struct !25
  %call27 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %tmp, i32 %mode) #2
  br label %return

land.lhs.true31:                                  ; preds = %avoid_constant_pool_reference.exit
  %.phi.trans.insert636 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 0
  %bf.load32.pre = load i32* %.phi.trans.insert636, align 8
  %14 = and i32 %bf.load32.pre, 16777214
  %15 = icmp eq i32 %14, 54
  br i1 %15, label %if.then47, label %if.end95

if.then47:                                        ; preds = %land.lhs.true31
  %bf.clear39 = and i32 %bf.load32.pre, 65535
  %cmp56 = icmp eq i32 %bf.clear39, 54
  br i1 %cmp56, label %if.then58, label %if.else65

if.then58:                                        ; preds = %if.then47
  %rtwint61 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 0, i32 0
  %16 = load i64* %rtwint61, align 8, !tbaa !14
  %.lobit627 = ashr i64 %16, 63
  br label %if.end72

if.else65:                                        ; preds = %if.then47
  %rtwint68 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 1, i32 0
  %17 = load i64* %rtwint68, align 8, !tbaa !14
  %rtwint71 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 2, i32 0
  %18 = load i64* %rtwint71, align 8, !tbaa !14
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then58
  %hv49.0 = phi i64 [ %.lobit627, %if.then58 ], [ %18, %if.else65 ]
  %lv51.0 = phi i64 [ %16, %if.then58 ], [ %17, %if.else65 ]
  %cmp73 = icmp eq i32 %op_mode, 0
  br i1 %cmp73, label %if.then75, label %if.else80

if.then75:                                        ; preds = %if.end72
  %cmp76 = icmp slt i64 %hv49.0, 0
  br i1 %cmp76, label %return, label %if.end91

if.else80:                                        ; preds = %if.end72
  %idxprom81 = sext i32 %op_mode to i64
  %arrayidx82 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom81
  %19 = load i16* %arrayidx82, align 2, !tbaa !4
  %cmp84 = icmp ugt i16 %19, 127
  br i1 %cmp84, label %if.end91, label %if.else87

if.else87:                                        ; preds = %if.else80
  %arrayidx89 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom81
  %20 = load i64* %arrayidx89, align 8, !tbaa !14
  %and = and i64 %20, %lv51.0
  br label %if.end91

if.end91:                                         ; preds = %if.else87, %if.else80, %if.then75
  %hv49.1 = phi i64 [ %hv49.0, %if.then75 ], [ %hv49.0, %if.else80 ], [ 0, %if.else87 ]
  %lv51.1 = phi i64 [ %lv51.0, %if.then75 ], [ %lv51.0, %if.else80 ], [ %and, %if.else87 ]
  call void @ereal_from_uint(%struct.realvaluetype* %d53, i64 %lv51.1, i64 %hv49.1, i32 %mode) #2
  call void @real_value_truncate(%struct.realvaluetype* sret %tmp92, i32 %mode, %struct.realvaluetype* byval align 8 %d53) #2
  %21 = bitcast %struct.realvaluetype* %d53 to i8*
  %22 = bitcast %struct.realvaluetype* %tmp92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 24, i32 8, i1 false), !tbaa.struct !25
  %call93 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %tmp92, i32 %mode) #2
  br label %return

if.end95:                                         ; preds = %avoid_constant_pool_reference.exit.if.end95_crit_edge, %land.lhs.true, %land.lhs.true31
  %bf.load367 = phi i32 [ %bf.load96.pre, %avoid_constant_pool_reference.exit.if.end95_crit_edge ], [ %bf.load, %land.lhs.true ], [ %bf.load32.pre, %land.lhs.true31 ]
  %bf.clear97 = and i32 %bf.load367, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 54
  %cmp101 = icmp ult i16 %0, 65
  %or.cond = and i1 %cmp98, %cmp101
  %cmp104 = icmp ne i16 %0, 0
  %or.cond497 = and i1 %or.cond, %cmp104
  br i1 %or.cond497, label %if.then106, label %if.else213

if.then106:                                       ; preds = %if.end95
  %rtwint110 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 0, i32 0
  %23 = load i64* %rtwint110, align 8, !tbaa !14
  switch i32 %code, label %sw.default [
    i32 86, label %sw.bb
    i32 77, label %sw.bb112
    i32 129, label %sw.bb113
    i32 131, label %sw.bb118
    i32 122, label %sw.epilog
    i32 121, label %sw.bb127
    i32 120, label %sw.bb160
    i32 130, label %return
    i32 123, label %return
    i32 124, label %return
    i32 150, label %return
    i32 151, label %return
  ]

sw.bb:                                            ; preds = %if.then106
  %neg = xor i64 %23, -1
  br label %sw.epilog

sw.bb112:                                         ; preds = %if.then106
  %sub = sub nsw i64 0, %23
  br label %sw.epilog

sw.bb113:                                         ; preds = %if.then106
  %cmp114 = icmp sgt i64 %23, -1
  %sub116 = sub nsw i64 0, %23
  %cond117 = select i1 %cmp114, i64 %23, i64 %sub116
  br label %sw.epilog

sw.bb118:                                         ; preds = %if.then106
  %arrayidx120 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom
  %24 = load i64* %arrayidx120, align 8, !tbaa !14
  %and121 = and i64 %24, %23
  %sub122 = sub nsw i64 0, %and121
  %and123 = and i64 %and121, %sub122
  %call124 = call i32 @exact_log2_wide(i64 %and123) #2
  %add = add nsw i32 %call124, 1
  %conv125 = sext i32 %add to i64
  br label %sw.epilog

sw.bb127:                                         ; preds = %if.then106
  %cmp128 = icmp eq i32 %op_mode, 0
  br i1 %cmp128, label %if.then130, label %if.end131

if.then130:                                       ; preds = %sw.bb127
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 532, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #4
  unreachable

if.end131:                                        ; preds = %sw.bb127
  %idxprom132 = sext i32 %op_mode to i64
  %arrayidx133 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom132
  %25 = load i16* %arrayidx133, align 2, !tbaa !4
  %cmp135 = icmp eq i16 %25, 64
  br i1 %cmp135, label %if.then137, label %if.else145

if.then137:                                       ; preds = %if.end131
  %cmp141 = icmp eq i16 %0, 64
  br i1 %cmp141, label %sw.epilog, label %if.then143

if.then143:                                       ; preds = %if.then137
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 539, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #4
  unreachable

if.else145:                                       ; preds = %if.end131
  %cmp149 = icmp ult i16 %25, 64
  br i1 %cmp149, label %if.then151, label %return

if.then151:                                       ; preds = %if.else145
  %sh_prom = zext i16 %25 to i64
  %shl = shl i64 -1, %sh_prom
  %neg155 = xor i64 %shl, -1
  %and156 = and i64 %23, %neg155
  br label %sw.epilog

sw.bb160:                                         ; preds = %if.then106
  %cmp161 = icmp eq i32 %op_mode, 0
  %mode.op_mode = select i1 %cmp161, i32 %mode, i32 %op_mode
  %idxprom165 = sext i32 %mode.op_mode to i64
  %arrayidx166 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom165
  %26 = load i16* %arrayidx166, align 2, !tbaa !4
  %conv167 = zext i16 %26 to i64
  %cmp168 = icmp eq i16 %26, 64
  br i1 %cmp168, label %if.then170, label %if.else178

if.then170:                                       ; preds = %sw.bb160
  %cmp174 = icmp eq i16 %0, 64
  br i1 %cmp174, label %sw.epilog, label %if.then176

if.then176:                                       ; preds = %if.then170
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 557, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #4
  unreachable

if.else178:                                       ; preds = %sw.bb160
  %cmp182 = icmp ult i16 %26, 64
  br i1 %cmp182, label %if.then184, label %return

if.then184:                                       ; preds = %if.else178
  %shl189 = shl i64 -1, %conv167
  %neg190 = xor i64 %shl189, -1
  %and191 = and i64 %23, %neg190
  %sub195 = add i64 %conv167, 4294967295
  %sh_prom196 = and i64 %sub195, 4294967295
  %shl197 = shl i64 1, %sh_prom196
  %and198 = and i64 %shl197, %and191
  %tobool = icmp eq i64 %and198, 0
  br i1 %tobool, label %sw.epilog, label %if.then199

if.then199:                                       ; preds = %if.then184
  %shl204 = shl i64 1, %conv167
  %sub205 = sub nsw i64 %and191, %shl204
  br label %sw.epilog

sw.default:                                       ; preds = %if.then106
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 580, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #4
  unreachable

sw.epilog:                                        ; preds = %if.then170, %if.then137, %if.then106, %if.then184, %if.then199, %if.then151, %sw.bb118, %sw.bb113, %sw.bb112, %sw.bb
  %val.0 = phi i64 [ %sub205, %if.then199 ], [ %and191, %if.then184 ], [ %and156, %if.then151 ], [ %conv125, %sw.bb118 ], [ %cond117, %sw.bb113 ], [ %sub, %sw.bb112 ], [ %neg, %sw.bb ], [ %23, %if.then106 ], [ %23, %if.then137 ], [ %23, %if.then170 ]
  %call211 = call i64 @trunc_int_for_mode(i64 %val.0, i32 %mode) #2
  %call212 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call211) #2
  br label %return

if.else213:                                       ; preds = %if.end95
  %bf.clear216 = and i32 %bf.load367, 16711680
  %cmp217 = icmp eq i32 %bf.clear216, 0
  %cmp220 = icmp ult i16 %0, 129
  %or.cond498 = and i1 %cmp217, %cmp220
  %27 = and i32 %bf.load367, 65534
  %switch631 = icmp eq i32 %27, 54
  %or.cond632 = and i1 %or.cond498, %switch631
  %cmp241 = icmp eq i32 %bf.clear97, 55
  br i1 %or.cond632, label %if.then232, label %if.else348

if.then232:                                       ; preds = %if.else213
  br i1 %cmp241, label %if.then243, label %if.else250

if.then243:                                       ; preds = %if.then232
  %rtwint246 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 1, i32 0
  %28 = load i64* %rtwint246, align 8, !tbaa !14
  %rtwint249 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 2, i32 0
  %29 = load i64* %rtwint249, align 8, !tbaa !14
  br label %if.end257

if.else250:                                       ; preds = %if.then232
  %rtwint253 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 1, i64 0, i32 0
  %30 = load i64* %rtwint253, align 8, !tbaa !14
  %.lobit = ashr i64 %30, 63
  br label %if.end257

if.end257:                                        ; preds = %if.else250, %if.then243
  %l1.0 = phi i64 [ %28, %if.then243 ], [ %30, %if.else250 ]
  %h1.0 = phi i64 [ %29, %if.then243 ], [ %.lobit, %if.else250 ]
  switch i32 %code, label %return [
    i32 86, label %sw.bb258
    i32 77, label %sw.bb261
    i32 129, label %sw.bb263
    i32 131, label %sw.bb270
    i32 122, label %sw.bb287
    i32 121, label %sw.bb288
    i32 120, label %sw.bb303
  ]

sw.bb258:                                         ; preds = %if.end257
  %neg259 = xor i64 %l1.0, -1
  store i64 %neg259, i64* %lv235, align 8, !tbaa !14
  %neg260 = xor i64 %h1.0, -1
  store i64 %neg260, i64* %hv238, align 8, !tbaa !14
  br label %sw.epilog346

sw.bb261:                                         ; preds = %if.end257
  %call262 = call i32 @neg_double(i64 %l1.0, i64 %h1.0, i64* %lv235, i64* %hv238) #2
  br label %sw.epilog346

sw.bb263:                                         ; preds = %if.end257
  %cmp264 = icmp slt i64 %h1.0, 0
  br i1 %cmp264, label %if.then266, label %if.else268

if.then266:                                       ; preds = %sw.bb263
  %call267 = call i32 @neg_double(i64 %l1.0, i64 %h1.0, i64* %lv235, i64* %hv238) #2
  br label %sw.epilog346

if.else268:                                       ; preds = %sw.bb263
  store i64 %l1.0, i64* %lv235, align 8, !tbaa !14
  store i64 %h1.0, i64* %hv238, align 8, !tbaa !14
  br label %sw.epilog346

sw.bb270:                                         ; preds = %if.end257
  store i64 0, i64* %hv238, align 8, !tbaa !14
  %cmp271 = icmp eq i64 %l1.0, 0
  br i1 %cmp271, label %if.then273, label %if.else280

if.then273:                                       ; preds = %sw.bb270
  %sub274 = sub nsw i64 0, %h1.0
  %and275 = and i64 %h1.0, %sub274
  %call276 = call i32 @exact_log2_wide(i64 %and275) #2
  %add278 = add nsw i32 %call276, 65
  %conv279 = sext i32 %add278 to i64
  store i64 %conv279, i64* %lv235, align 8, !tbaa !14
  br label %sw.epilog346

if.else280:                                       ; preds = %sw.bb270
  %sub281 = sub i64 0, %l1.0
  %and282 = and i64 %l1.0, %sub281
  %call283 = call i32 @exact_log2_wide(i64 %and282) #2
  %add284 = add nsw i32 %call283, 1
  %conv285 = sext i32 %add284 to i64
  store i64 %conv285, i64* %lv235, align 8, !tbaa !14
  br label %sw.epilog346

sw.bb287:                                         ; preds = %if.end257
  store i64 %l1.0, i64* %lv235, align 8, !tbaa !14
  store i64 %h1.0, i64* %hv238, align 8, !tbaa !14
  br label %sw.epilog346

sw.bb288:                                         ; preds = %if.end257
  %cmp289 = icmp eq i32 %op_mode, 0
  br i1 %cmp289, label %if.then291, label %if.end292

if.then291:                                       ; preds = %sw.bb288
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 636, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.simplify_unary_operation, i64 0, i64 0)) #4
  unreachable

if.end292:                                        ; preds = %sw.bb288
  %idxprom293 = sext i32 %op_mode to i64
  %arrayidx294 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom293
  %31 = load i16* %arrayidx294, align 2, !tbaa !4
  %cmp296 = icmp ugt i16 %31, 64
  br i1 %cmp296, label %return, label %if.end299

if.end299:                                        ; preds = %if.end292
  store i64 0, i64* %hv238, align 8, !tbaa !14
  %arrayidx301 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom293
  %32 = load i64* %arrayidx301, align 8, !tbaa !14
  %and302 = and i64 %32, %l1.0
  store i64 %and302, i64* %lv235, align 8, !tbaa !14
  br label %sw.epilog346

sw.bb303:                                         ; preds = %if.end257
  %cmp304 = icmp eq i32 %op_mode, 0
  br i1 %cmp304, label %return, label %lor.lhs.false306

lor.lhs.false306:                                 ; preds = %sw.bb303
  %idxprom307 = sext i32 %op_mode to i64
  %arrayidx308 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom307
  %33 = load i16* %arrayidx308, align 2, !tbaa !4
  %cmp310 = icmp ugt i16 %33, 64
  br i1 %cmp310, label %return, label %if.else313

if.else313:                                       ; preds = %lor.lhs.false306
  %arrayidx315 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom307
  %34 = load i64* %arrayidx315, align 8, !tbaa !14
  %and316 = and i64 %34, %l1.0
  store i64 %and316, i64* %lv235, align 8, !tbaa !14
  %cmp320 = icmp ult i16 %33, 64
  br i1 %cmp320, label %land.lhs.true322, label %if.end339

land.lhs.true322:                                 ; preds = %if.else313
  %conv319 = zext i16 %33 to i64
  %sub326 = add i64 %conv319, 4294967295
  %sh_prom327 = and i64 %sub326, 4294967295
  %shl328 = shl i64 1, %sh_prom327
  %and329 = and i64 %shl328, %and316
  %cmp330 = icmp eq i64 %and329, 0
  br i1 %cmp330, label %if.end339, label %if.then332

if.then332:                                       ; preds = %land.lhs.true322
  %shl337 = shl i64 1, %conv319
  %sub338 = sub i64 %and316, %shl337
  store i64 %sub338, i64* %lv235, align 8, !tbaa !14
  br label %if.end339

if.end339:                                        ; preds = %land.lhs.true322, %if.then332, %if.else313
  %35 = phi i64 [ %and316, %land.lhs.true322 ], [ %sub338, %if.then332 ], [ %and316, %if.else313 ]
  %.lobit626 = ashr i64 %35, 63
  store i64 %.lobit626, i64* %hv238, align 8, !tbaa !14
  br label %sw.epilog346

sw.epilog346:                                     ; preds = %if.then273, %if.else280, %if.then266, %if.else268, %if.end339, %if.end299, %sw.bb287, %sw.bb261, %sw.bb258
  %36 = load i64* %lv235, align 8, !tbaa !14
  %37 = load i64* %hv238, align 8, !tbaa !14
  %call347 = call %struct.rtx_def* @immed_double_const(i64 %36, i64 %37, i32 %mode) #2
  br label %return

if.else348:                                       ; preds = %if.else213
  br i1 %cmp241, label %land.lhs.true353, label %if.else402

land.lhs.true353:                                 ; preds = %if.else348
  %arrayidx355 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %38 = load i32* %arrayidx355, align 4, !tbaa !1
  %cmp356 = icmp eq i32 %38, 2
  br i1 %cmp356, label %if.then358, label %land.lhs.true371

if.then358:                                       ; preds = %land.lhs.true353
  %operand = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 0
  store %struct.rtx_def* %retval.0.i, %struct.rtx_def** %operand, align 8, !tbaa !26
  %mode360 = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 2
  store i32 %mode, i32* %mode360, align 8, !tbaa !28
  %code361 = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 3
  store i32 %code, i32* %code361, align 4, !tbaa !29
  %want_integer = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 4
  store i8 0, i8* %want_integer, align 8, !tbaa !30
  %39 = bitcast %struct.simplify_unary_real_args* %args to i8*
  %call362 = call i32 @do_float_handler(void (i8*)* @simplify_unary_real, i8* %39) #2
  %tobool363 = icmp eq i32 %call362, 0
  br i1 %tobool363, label %return, label %if.then364

if.then364:                                       ; preds = %if.then358
  %result = getelementptr inbounds %struct.simplify_unary_real_args* %args, i64 0, i32 1
  %40 = load %struct.rtx_def** %result, align 8, !tbaa !31
  br label %return

land.lhs.true371:                                 ; preds = %land.lhs.true353
  %bf.lshr373 = lshr i32 %bf.load367, 16
  %bf.clear374 = and i32 %bf.lshr373, 255
  %idxprom375625 = zext i32 %bf.clear374 to i64
  %arrayidx376 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom375625
  %41 = load i32* %arrayidx376, align 4, !tbaa !1
  %cmp377 = icmp eq i32 %41, 2
  br i1 %cmp377, label %land.lhs.true379, label %if.else402

land.lhs.true379:                                 ; preds = %land.lhs.true371
  %arrayidx381 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %42 = load i32* %arrayidx381, align 4, !tbaa !1
  %cmp382 = icmp eq i32 %42, 1
  %or.cond499 = and i1 %cmp382, %cmp101
  %or.cond500 = and i1 %or.cond499, %cmp104
  br i1 %or.cond500, label %if.then390, label %if.else402

if.then390:                                       ; preds = %land.lhs.true379
  %operand393 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 0
  store %struct.rtx_def* %retval.0.i, %struct.rtx_def** %operand393, align 8, !tbaa !26
  %mode394 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 2
  store i32 %mode, i32* %mode394, align 8, !tbaa !28
  %code395 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 3
  store i32 %code, i32* %code395, align 4, !tbaa !29
  %want_integer396 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 4
  store i8 1, i8* %want_integer396, align 8, !tbaa !30
  %43 = bitcast %struct.simplify_unary_real_args* %args392 to i8*
  %call397 = call i32 @do_float_handler(void (i8*)* @simplify_unary_real, i8* %43) #2
  %tobool398 = icmp eq i32 %call397, 0
  br i1 %tobool398, label %return, label %if.then399

if.then399:                                       ; preds = %if.then390
  %result400 = getelementptr inbounds %struct.simplify_unary_real_args* %args392, i64 0, i32 1
  %44 = load %struct.rtx_def** %result400, align 8, !tbaa !31
  br label %return

if.else402:                                       ; preds = %if.else348, %land.lhs.true379, %land.lhs.true371
  switch i32 %code, label %sw.epilog496 [
    i32 86, label %sw.bb404
    i32 77, label %sw.bb436
    i32 120, label %sw.bb446
  ]

sw.bb404:                                         ; preds = %if.else402
  %bf.load405 = load i32* %1, align 8
  %bf.clear406 = and i32 %bf.load405, 65535
  %cmp407 = icmp eq i32 %bf.clear406, 86
  br i1 %cmp407, label %if.then409, label %if.end412

if.then409:                                       ; preds = %sw.bb404
  %arrayidx411 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx411 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  br label %return

if.end412:                                        ; preds = %sw.bb404
  %cmp413 = icmp eq i32 %mode, 1
  br i1 %cmp413, label %land.lhs.true415, label %sw.epilog496

land.lhs.true415:                                 ; preds = %if.end412
  %idxprom418624 = zext i32 %bf.clear406 to i64
  %arrayidx419 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom418624
  %46 = load i8* %arrayidx419, align 1, !tbaa !1
  %cmp421 = icmp eq i8 %46, 60
  br i1 %cmp421, label %land.lhs.true423, label %sw.epilog496

land.lhs.true423:                                 ; preds = %land.lhs.true415
  %call424 = call i32 @reversed_comparison_code(%struct.rtx_def* %op, %struct.rtx_def* null) #2
  %cmp425 = icmp eq i32 %call424, 0
  br i1 %cmp425, label %sw.epilog496, label %if.then427

if.then427:                                       ; preds = %land.lhs.true423
  %fld428 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1
  %rtx430 = bitcast [1 x %union.rtunion_def]* %fld428 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx430, align 8, !tbaa !6
  %arrayidx432 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 1
  %rtx433 = bitcast %union.rtunion_def* %arrayidx432 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx433, align 8, !tbaa !6
  %call434 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %call424, i32 %op_mode, %struct.rtx_def* %47, %struct.rtx_def* %48) #2
  br label %return

sw.bb436:                                         ; preds = %if.else402
  %bf.load437 = load i32* %1, align 8
  %bf.clear438 = and i32 %bf.load437, 65535
  %cmp439 = icmp eq i32 %bf.clear438, 77
  br i1 %cmp439, label %if.then441, label %sw.epilog496

if.then441:                                       ; preds = %sw.bb436
  %arrayidx443 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx444 = bitcast %union.rtunion_def* %arrayidx443 to %struct.rtx_def**
  %49 = load %struct.rtx_def** %rtx444, align 8, !tbaa !6
  br label %return

sw.bb446:                                         ; preds = %if.else402
  %bf.load447 = load i32* %1, align 8
  %bf.clear448 = and i32 %bf.load447, 65535
  %cmp449 = icmp eq i32 %bf.clear448, 122
  br i1 %cmp449, label %land.lhs.true451, label %sw.epilog496

land.lhs.true451:                                 ; preds = %sw.bb446
  %arrayidx453 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 1, i64 0
  %rtx454 = bitcast %union.rtunion_def* %arrayidx453 to %struct.rtx_def**
  %50 = load %struct.rtx_def** %rtx454, align 8, !tbaa !6
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load455 = load i32* %51, align 8
  %bf.lshr456 = lshr i32 %bf.load455, 16
  %bf.clear457 = and i32 %bf.lshr456, 255
  %cmp458 = icmp eq i32 %bf.clear457, %mode
  %bf.clear465 = and i32 %bf.load455, 65535
  %cmp466 = icmp eq i32 %bf.clear465, 76
  %or.cond629 = and i1 %cmp458, %cmp466
  br i1 %or.cond629, label %land.lhs.true468, label %sw.epilog496

land.lhs.true468:                                 ; preds = %land.lhs.true451
  %fld472 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1
  %rtx474 = bitcast [1 x %union.rtunion_def]* %fld472 to %struct.rtx_def**
  %52 = load %struct.rtx_def** %rtx474, align 8, !tbaa !6
  %53 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 0
  %bf.load475 = load i32* %53, align 8
  %bf.clear476 = and i32 %bf.load475, 65535
  %cmp477 = icmp eq i32 %bf.clear476, 67
  br i1 %cmp477, label %land.lhs.true479, label %sw.epilog496

land.lhs.true479:                                 ; preds = %land.lhs.true468
  %arrayidx484 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1, i64 1
  %rtx485 = bitcast %union.rtunion_def* %arrayidx484 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx485, align 8, !tbaa !6
  %55 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load486 = load i32* %55, align 8
  %bf.clear487 = and i32 %bf.load486, 65535
  %cmp488 = icmp eq i32 %bf.clear487, 67
  br i1 %cmp488, label %return, label %sw.epilog496

sw.epilog496:                                     ; preds = %land.lhs.true423, %if.else402, %sw.bb446, %land.lhs.true451, %land.lhs.true468, %land.lhs.true479, %sw.bb436, %if.end412, %land.lhs.true415
  br label %return

return:                                           ; preds = %land.lhs.true479, %if.then390, %if.then358, %if.end257, %sw.bb303, %lor.lhs.false306, %if.end292, %if.then106, %if.then106, %if.then106, %if.then106, %if.then106, %if.else178, %if.else145, %if.then75, %sw.epilog496, %if.then441, %if.then427, %if.then409, %if.then399, %if.then364, %sw.epilog346, %sw.epilog, %if.end91, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call27, %if.end ], [ %call93, %if.end91 ], [ %call212, %sw.epilog ], [ %call347, %sw.epilog346 ], [ %40, %if.then364 ], [ %44, %if.then399 ], [ null, %sw.epilog496 ], [ %49, %if.then441 ], [ %45, %if.then409 ], [ %call434, %if.then427 ], [ null, %if.then75 ], [ null, %if.else145 ], [ null, %if.else178 ], [ null, %if.then106 ], [ null, %if.then106 ], [ null, %if.then106 ], [ null, %if.then106 ], [ null, %if.then106 ], [ null, %if.end292 ], [ null, %lor.lhs.false306 ], [ null, %sw.bb303 ], [ null, %if.end257 ], [ null, %if.then358 ], [ null, %if.then390 ], [ %50, %land.lhs.true479 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_gen_ternary(i32 %code, i32 %mode, i32 %op0_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %op2) #0 {
entry:
  %call = tail call %struct.rtx_def* @simplify_ternary_operation(i32 %code, i32 %mode, i32 %op0_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %op2)
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %op2) #2
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.rtx_def* [ %call1, %if.end ], [ %call, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_ternary_operation(i32 %code, i32 %mode, i32 %op0_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %op2) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %0 = load i16* %arrayidx, align 2, !tbaa !4
  %conv = zext i16 %0 to i32
  %cmp = icmp eq i16 %0, 0
  %.conv = select i1 %cmp, i32 64, i32 %conv
  switch i32 %code, label %sw.default [
    i32 132, label %sw.bb
    i32 133, label %sw.bb
    i32 72, label %sw.bb76
  ]

sw.bb:                                            ; preds = %entry, %entry
  %1 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp2 = icmp eq i32 %bf.clear, 54
  br i1 %cmp2, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %sw.bb
  %2 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  %bf.load4 = load i32* %2, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 54
  br i1 %cmp6, label %land.lhs.true8, label %return

land.lhs.true8:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def* %op2, i64 0, i32 0
  %bf.load9 = load i32* %3, align 8
  %bf.clear10 = and i32 %bf.load9, 65535
  %cmp11 = icmp eq i32 %bf.clear10, 54
  br i1 %cmp11, label %land.lhs.true13, label %return

land.lhs.true13:                                  ; preds = %land.lhs.true8
  %rtwint = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %4 = load i64* %rtwint, align 8, !tbaa !14
  %conv15 = trunc i64 %4 to i32
  %rtwint18 = getelementptr inbounds %struct.rtx_def* %op2, i64 0, i32 1, i64 0, i32 0
  %5 = load i64* %rtwint18, align 8, !tbaa !14
  %conv19 = trunc i64 %5 to i32
  %add = add i32 %conv19, %conv15
  %cmp20 = icmp ule i32 %add, %.conv
  %cmp23 = icmp ult i32 %.conv, 65
  %or.cond = and i1 %cmp20, %cmp23
  br i1 %or.cond, label %if.then25, label %return

if.then25:                                        ; preds = %land.lhs.true13
  %rtwint28 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0, i32 0
  %6 = load i64* %rtwint28, align 8, !tbaa !14
  %shr = ashr i64 %6, %5
  %cmp35 = icmp eq i64 %4, 64
  br i1 %cmp35, label %if.end57, label %if.then37

if.then37:                                        ; preds = %if.then25
  %shl = shl i64 1, %4
  %sub = add nsw i64 %shl, -1
  %and = and i64 %shr, %sub
  %cmp41 = icmp eq i32 %code, 132
  br i1 %cmp41, label %land.lhs.true43, label %if.end57

land.lhs.true43:                                  ; preds = %if.then37
  %sub47 = add nsw i64 %4, -1
  %shl48 = shl i64 1, %sub47
  %and49 = and i64 %and, %shl48
  %tobool = icmp eq i64 %and49, 0
  br i1 %tobool, label %if.end57, label %if.then50

if.then50:                                        ; preds = %land.lhs.true43
  %neg = sub i64 0, %shl
  %or = or i64 %and, %neg
  br label %if.end57

if.end57:                                         ; preds = %land.lhs.true43, %if.then25, %if.then37, %if.then50
  %val.0 = phi i64 [ %or, %if.then50 ], [ %and, %land.lhs.true43 ], [ %and, %if.then37 ], [ %shr, %if.then25 ]
  %cmp58 = icmp ult i32 %.conv, 64
  br i1 %cmp58, label %land.lhs.true60, label %if.end74

land.lhs.true60:                                  ; preds = %if.end57
  %sub61 = add i32 %.conv, -1
  %sh_prom = zext i32 %sub61 to i64
  %shl62 = shl i64 -1, %sh_prom
  %and63 = and i64 %val.0, %shl62
  %cmp67 = icmp eq i64 %and63, %shl62
  br i1 %cmp67, label %if.end74, label %if.then69

if.then69:                                        ; preds = %land.lhs.true60
  %sh_prom70 = zext i32 %.conv to i64
  %shl71 = shl i64 1, %sh_prom70
  %sub72 = add nsw i64 %shl71, -1
  %and73 = and i64 %val.0, %sub72
  br label %if.end74

if.end74:                                         ; preds = %land.lhs.true60, %if.then69, %if.end57
  %val.1 = phi i64 [ %and73, %if.then69 ], [ %val.0, %land.lhs.true60 ], [ %val.0, %if.end57 ]
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %val.1) #2
  br label %return

sw.bb76:                                          ; preds = %entry
  %7 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load77 = load i32* %7, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  switch i32 %bf.clear78, label %if.else [
    i32 54, label %if.then81
    i32 102, label %land.lhs.true89
  ]

if.then81:                                        ; preds = %sw.bb76
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp82 = icmp ne %struct.rtx_def* %8, %op0
  %cond = select i1 %cmp82, %struct.rtx_def* %op1, %struct.rtx_def* %op2
  br label %return

land.lhs.true89:                                  ; preds = %sw.bb76
  %call90 = tail call i32 @side_effects_p(%struct.rtx_def* %op0) #2
  %tobool91 = icmp eq i32 %call90, 0
  br i1 %tobool91, label %land.lhs.true92, label %if.else

land.lhs.true92:                                  ; preds = %land.lhs.true89
  %arrayidx94 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %9 = load i32* %arrayidx94, align 4, !tbaa !1
  switch i32 %9, label %lor.lhs.false101 [
    i32 2, label %lor.lhs.false106
    i32 6, label %lor.lhs.false106
  ]

lor.lhs.false101:                                 ; preds = %land.lhs.true92
  %cmp104 = icmp ne i32 %9, 8
  %10 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool107 = icmp ne i32 %10, 0
  %or.cond268 = or i1 %cmp104, %tobool107
  br i1 %or.cond268, label %land.lhs.true108, label %if.else

lor.lhs.false106:                                 ; preds = %land.lhs.true92, %land.lhs.true92
  %.old = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !16
  %tobool107.old = icmp eq i32 %.old, 0
  br i1 %tobool107.old, label %if.else, label %land.lhs.true108

land.lhs.true108:                                 ; preds = %lor.lhs.false106, %lor.lhs.false101
  %fld109 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld109 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %call111 = tail call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %op1) #2
  %tobool112 = icmp eq i32 %call111, 0
  br i1 %tobool112, label %if.else, label %land.lhs.true113

land.lhs.true113:                                 ; preds = %land.lhs.true108
  %arrayidx115 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx116, align 8, !tbaa !6
  %call117 = tail call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %op2) #2
  %tobool118 = icmp eq i32 %call117, 0
  br i1 %tobool118, label %if.else, label %return

if.else:                                          ; preds = %sw.bb76, %lor.lhs.false106, %land.lhs.true113, %land.lhs.true108, %land.lhs.true89, %lor.lhs.false101
  %bf.load120 = load i32* %7, align 8
  %bf.clear121 = and i32 %bf.load120, 65535
  %cmp122 = icmp eq i32 %bf.clear121, 103
  br i1 %cmp122, label %land.lhs.true124, label %if.else157

land.lhs.true124:                                 ; preds = %if.else
  %call125 = tail call i32 @side_effects_p(%struct.rtx_def* %op0) #2
  %tobool126 = icmp eq i32 %call125, 0
  br i1 %tobool126, label %land.lhs.true127, label %if.else157

land.lhs.true127:                                 ; preds = %land.lhs.true124
  %arrayidx129 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %13 = load i32* %arrayidx129, align 4, !tbaa !1
  switch i32 %13, label %lor.lhs.false137 [
    i32 2, label %lor.lhs.false142
    i32 6, label %lor.lhs.false142
  ]

lor.lhs.false137:                                 ; preds = %land.lhs.true127
  %cmp140 = icmp ne i32 %13, 8
  %14 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool143 = icmp ne i32 %14, 0
  %or.cond270 = or i1 %cmp140, %tobool143
  br i1 %or.cond270, label %land.lhs.true144, label %if.else157

lor.lhs.false142:                                 ; preds = %land.lhs.true127, %land.lhs.true127
  %.old269 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !16
  %tobool143.old = icmp eq i32 %.old269, 0
  br i1 %tobool143.old, label %if.else157, label %land.lhs.true144

land.lhs.true144:                                 ; preds = %lor.lhs.false142, %lor.lhs.false137
  %arrayidx146 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx147, align 8, !tbaa !6
  %call148 = tail call i32 @rtx_equal_p(%struct.rtx_def* %15, %struct.rtx_def* %op1) #2
  %tobool149 = icmp eq i32 %call148, 0
  br i1 %tobool149, label %if.else157, label %land.lhs.true150

land.lhs.true150:                                 ; preds = %land.lhs.true144
  %arrayidx152 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0
  %rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx153, align 8, !tbaa !6
  %call154 = tail call i32 @rtx_equal_p(%struct.rtx_def* %16, %struct.rtx_def* %op2) #2
  %tobool155 = icmp eq i32 %call154, 0
  br i1 %tobool155, label %if.else157, label %return

if.else157:                                       ; preds = %lor.lhs.false142, %land.lhs.true150, %land.lhs.true144, %land.lhs.true124, %lor.lhs.false137, %if.else
  %bf.load158 = load i32* %7, align 8
  %bf.clear159 = and i32 %bf.load158, 65535
  %idxprom160345 = zext i32 %bf.clear159 to i64
  %arrayidx161 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom160345
  %17 = load i8* %arrayidx161, align 1, !tbaa !1
  %cmp163 = icmp eq i8 %17, 60
  br i1 %cmp163, label %land.lhs.true165, label %return

land.lhs.true165:                                 ; preds = %if.else157
  %call166 = tail call i32 @side_effects_p(%struct.rtx_def* %op0) #2
  %tobool167 = icmp eq i32 %call166, 0
  br i1 %tobool167, label %if.then168, label %return

if.then168:                                       ; preds = %land.lhs.true165
  %fld169 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1
  %rtx171 = bitcast [1 x %union.rtunion_def]* %fld169 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx171, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load172 = load i32* %19, align 8
  %bf.clear173 = and i32 %bf.load172, 16711680
  %cmp174 = icmp eq i32 %bf.clear173, 0
  %arrayidx178 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx179, align 8, !tbaa !6
  br i1 %cmp174, label %cond.true176, label %cond.end190

cond.true176:                                     ; preds = %if.then168
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load180 = load i32* %21, align 8
  br label %cond.end190

cond.end190:                                      ; preds = %if.then168, %cond.true176
  %bf.load180.sink = phi i32 [ %bf.load180, %cond.true176 ], [ %bf.load172, %if.then168 ]
  %bf.lshr181 = lshr i32 %bf.load180.sink, 16
  %bf.clear182 = and i32 %bf.lshr181, 255
  %cmp192 = icmp eq i32 %bf.clear182, 0
  %op0_mode.bf.clear182 = select i1 %cmp192, i32 %op0_mode, i32 %bf.clear182
  %bf.load196 = load i32* %7, align 8
  %bf.clear197 = and i32 %bf.load196, 65535
  %call204 = tail call %struct.rtx_def* @simplify_relational_operation(i32 %bf.clear197, i32 %op0_mode.bf.clear182, %struct.rtx_def* %18, %struct.rtx_def* %20)
  %22 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp205 = icmp eq %struct.rtx_def* %call204, %22
  br i1 %cmp205, label %return, label %if.else208

if.else208:                                       ; preds = %cond.end190
  %23 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !6
  %cmp209 = icmp eq %struct.rtx_def* %call204, %23
  br i1 %cmp209, label %return, label %if.else212

if.else212:                                       ; preds = %if.else208
  %tobool213 = icmp eq %struct.rtx_def* %call204, null
  %op0.call204 = select i1 %tobool213, %struct.rtx_def* %op0, %struct.rtx_def* %call204
  %24 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  %bf.load218 = load i32* %24, align 8
  %bf.clear219 = and i32 %bf.load218, 65535
  %cmp220 = icmp eq i32 %bf.clear219, 54
  br i1 %cmp220, label %land.lhs.true222, label %return

land.lhs.true222:                                 ; preds = %if.else212
  %25 = getelementptr inbounds %struct.rtx_def* %op2, i64 0, i32 0
  %bf.load223 = load i32* %25, align 8
  %bf.clear224 = and i32 %bf.load223, 65535
  %cmp225 = icmp eq i32 %bf.clear224, 54
  br i1 %cmp225, label %if.then227, label %return

if.then227:                                       ; preds = %land.lhs.true222
  %rtwint230 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %26 = load i64* %rtwint230, align 8, !tbaa !14
  %rtwint233 = getelementptr inbounds %struct.rtx_def* %op2, i64 0, i32 1, i64 0, i32 0
  %27 = load i64* %rtwint233, align 8, !tbaa !14
  %cmp234 = icmp eq i64 %26, 1
  %cmp237 = icmp eq i64 %27, 0
  %or.cond272 = and i1 %cmp234, %cmp237
  br i1 %or.cond272, label %if.then239, label %if.else242

if.then239:                                       ; preds = %if.then227
  %28 = getelementptr inbounds %struct.rtx_def* %op0.call204, i64 0, i32 0
  %bf.load240 = load i32* %28, align 8
  %bf.clear241 = and i32 %bf.load240, 65535
  br label %if.end256

if.else242:                                       ; preds = %if.then227
  %cmp243 = icmp eq i64 %26, 0
  %cmp246 = icmp eq i64 %27, 1
  %or.cond274 = and i1 %cmp243, %cmp246
  br i1 %or.cond274, label %if.then248, label %return

if.then248:                                       ; preds = %if.else242
  %call249 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %op0.call204, %struct.rtx_def* null) #2
  %cmp250 = icmp eq i32 %call249, 0
  br i1 %cmp250, label %return, label %if.end256

if.end256:                                        ; preds = %if.then248, %if.then239
  %code.addr.0 = phi i32 [ %bf.clear241, %if.then239 ], [ %call249, %if.then248 ]
  %fld257 = getelementptr inbounds %struct.rtx_def* %op0.call204, i64 0, i32 1
  %rtx259 = bitcast [1 x %union.rtunion_def]* %fld257 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx259, align 8, !tbaa !6
  %arrayidx261 = getelementptr inbounds %struct.rtx_def* %op0.call204, i64 0, i32 1, i64 1
  %rtx262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx262, align 8, !tbaa !6
  %call263 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code.addr.0, i32 %mode, %struct.rtx_def* %29, %struct.rtx_def* %30) #2
  br label %return

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 2471, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.simplify_ternary_operation, i64 0, i64 0)) #4
  unreachable

return:                                           ; preds = %land.lhs.true13, %land.lhs.true8, %land.lhs.true, %sw.bb, %if.then248, %if.else242, %if.else212, %land.lhs.true222, %if.else157, %land.lhs.true165, %if.else208, %cond.end190, %land.lhs.true150, %land.lhs.true113, %if.end256, %if.then81, %if.end74
  %retval.0 = phi %struct.rtx_def* [ %cond, %if.then81 ], [ %call263, %if.end256 ], [ %call, %if.end74 ], [ %op1, %land.lhs.true113 ], [ %op2, %land.lhs.true150 ], [ %op2, %cond.end190 ], [ %op1, %if.else208 ], [ null, %land.lhs.true165 ], [ null, %if.else157 ], [ null, %land.lhs.true222 ], [ null, %if.else212 ], [ null, %if.else242 ], [ null, %if.then248 ], [ null, %sw.bb ], [ null, %land.lhs.true ], [ null, %land.lhs.true8 ], [ null, %land.lhs.true13 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_rtx_fmt_eee(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_gen_relational(i32 %code, i32 %mode, i32 %cmp_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 {
entry:
  %call = tail call %struct.rtx_def* @simplify_relational_operation(i32 %code, i32 %cmp_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1)
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %op0, %struct.rtx_def* %op1) #2
  %tobool = icmp eq i32 %call1, 0
  br i1 %tobool, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.end
  %call3 = tail call i32 @swap_condition(i32 %code) #2
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then2
  %code.addr.0 = phi i32 [ %call3, %if.then2 ], [ %code, %if.end ]
  %op0.addr.0 = phi %struct.rtx_def* [ %op1, %if.then2 ], [ %op0, %if.end ]
  %op1.addr.0 = phi %struct.rtx_def* [ %op0, %if.then2 ], [ %op1, %if.end ]
  %call5 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code.addr.0, i32 %mode, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.0) #2
  br label %return

return:                                           ; preds = %entry, %if.end4
  %retval.0 = phi %struct.rtx_def* [ %call5, %if.end4 ], [ %call, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_relational_operation(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 {
entry:
  %args = alloca %struct.cfc_args, align 8
  %cmp = icmp eq i32 %mode, 0
  %0 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %bf.clear = and i32 %bf.load, 16711680
  %cmp1 = icmp eq i32 %bf.clear, 0
  br i1 %cmp1, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %1 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  %bf.load2 = load i32* %1, align 8
  %bf.clear4 = and i32 %bf.load2, 16711680
  %cmp5 = icmp eq i32 %bf.clear4, 0
  br i1 %cmp5, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 2091, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.simplify_relational_operation, i64 0, i64 0)) #4
  unreachable

if.end:                                           ; preds = %entry, %lor.lhs.false
  %bf.clear7 = and i32 %bf.load, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 74
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  %cmp10 = icmp eq %struct.rtx_def* %2, %op1
  %or.cond867 = and i1 %cmp8, %cmp10
  br i1 %or.cond867, label %if.then11, label %if.end15

if.then11:                                        ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx14, align 8, !tbaa !6
  %.phi.trans.insert920 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load.i.pre = load i32* %.phi.trans.insert920, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %if.end
  %bf.load.i = phi i32 [ %bf.load.i.pre, %if.then11 ], [ %bf.load, %if.end ]
  %op0.addr.0 = phi %struct.rtx_def* [ %4, %if.then11 ], [ %op0, %if.end ]
  %op1.addr.0 = phi %struct.rtx_def* [ %3, %if.then11 ], [ %op1, %if.end ]
  %5 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 66
  br i1 %cmp.i, label %if.end.i, label %avoid_constant_pool_reference.exit

if.end.i:                                         ; preds = %if.end15
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 1, i64 0
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load1.i = load i32* %7, align 8
  %8 = and i32 %bf.load1.i, 67174399
  %9 = icmp eq i32 %8, 67108932
  br i1 %9, label %if.end7.i, label %avoid_constant_pool_reference.exit

if.end7.i:                                        ; preds = %if.end.i
  %call.i = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %6) #2
  %call8.i = call i32 @get_pool_mode(%struct.rtx_def* %6) #2
  %bf.load9.i = load i32* %5, align 8
  %bf.lshr10.i = lshr i32 %bf.load9.i, 16
  %bf.clear11.i = and i32 %bf.lshr10.i, 255
  %cmp12.i = icmp eq i32 %call8.i, %bf.clear11.i
  br i1 %cmp12.i, label %avoid_constant_pool_reference.exit, label %if.then13.i

if.then13.i:                                      ; preds = %if.end7.i
  %call17.i = call %struct.rtx_def* @simplify_subreg(i32 %bf.clear11.i, %struct.rtx_def* %call.i, i32 %call8.i, i32 0) #2
  %tobool18.i = icmp ne %struct.rtx_def* %call17.i, null
  %cond.i = select i1 %tobool18.i, %struct.rtx_def* %call17.i, %struct.rtx_def* %op0.addr.0
  br label %avoid_constant_pool_reference.exit

avoid_constant_pool_reference.exit:               ; preds = %if.end15, %if.end.i, %if.end7.i, %if.then13.i
  %retval.0.i = phi %struct.rtx_def* [ %cond.i, %if.then13.i ], [ %op0.addr.0, %if.end15 ], [ %op0.addr.0, %if.end.i ], [ %call.i, %if.end7.i ]
  %10 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load.i899 = load i32* %10, align 8
  %bf.clear.i900 = and i32 %bf.load.i899, 65535
  %cmp.i901 = icmp eq i32 %bf.clear.i900, 66
  br i1 %cmp.i901, label %if.end.i905, label %avoid_constant_pool_reference.exit918

if.end.i905:                                      ; preds = %avoid_constant_pool_reference.exit
  %arrayidx.i902 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 1, i64 0
  %rtx.i903 = bitcast %union.rtunion_def* %arrayidx.i902 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx.i903, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load1.i904 = load i32* %12, align 8
  %13 = and i32 %bf.load1.i904, 67174399
  %14 = icmp eq i32 %13, 67108932
  br i1 %14, label %if.end7.i912, label %avoid_constant_pool_reference.exit918

if.end7.i912:                                     ; preds = %if.end.i905
  %call.i906 = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %11) #2
  %call8.i907 = call i32 @get_pool_mode(%struct.rtx_def* %11) #2
  %bf.load9.i908 = load i32* %10, align 8
  %bf.lshr10.i909 = lshr i32 %bf.load9.i908, 16
  %bf.clear11.i910 = and i32 %bf.lshr10.i909, 255
  %cmp12.i911 = icmp eq i32 %call8.i907, %bf.clear11.i910
  br i1 %cmp12.i911, label %avoid_constant_pool_reference.exit918, label %if.then13.i916

if.then13.i916:                                   ; preds = %if.end7.i912
  %call17.i913 = call %struct.rtx_def* @simplify_subreg(i32 %bf.clear11.i910, %struct.rtx_def* %call.i906, i32 %call8.i907, i32 0) #2
  %tobool18.i914 = icmp ne %struct.rtx_def* %call17.i913, null
  %cond.i915 = select i1 %tobool18.i914, %struct.rtx_def* %call17.i913, %struct.rtx_def* %op1.addr.0
  br label %avoid_constant_pool_reference.exit918

avoid_constant_pool_reference.exit918:            ; preds = %avoid_constant_pool_reference.exit, %if.end.i905, %if.end7.i912, %if.then13.i916
  %retval.0.i917 = phi %struct.rtx_def* [ %cond.i915, %if.then13.i916 ], [ %op1.addr.0, %avoid_constant_pool_reference.exit ], [ %op1.addr.0, %if.end.i905 ], [ %call.i906, %if.end7.i912 ]
  %bf.load17 = load i32* %5, align 8
  %bf.lshr18 = lshr i32 %bf.load17, 16
  %bf.clear19 = and i32 %bf.lshr18, 255
  %idxprom862 = zext i32 %bf.clear19 to i64
  %arrayidx20 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom862
  %15 = load i32* %arrayidx20, align 4, !tbaa !1
  %cmp21 = icmp eq i32 %15, 4
  br i1 %cmp21, label %return, label %if.end23

if.end23:                                         ; preds = %avoid_constant_pool_reference.exit918
  %call24 = call i32 @swap_commutative_operands_p(%struct.rtx_def* %retval.0.i, %struct.rtx_def* %retval.0.i917) #2
  %tobool = icmp eq i32 %call24, 0
  br i1 %tobool, label %if.end27, label %if.then25

if.then25:                                        ; preds = %if.end23
  %call26 = call i32 @swap_condition(i32 %code) #2
  br label %if.end27

if.end27:                                         ; preds = %if.end23, %if.then25
  %code.addr.0 = phi i32 [ %call26, %if.then25 ], [ %code, %if.end23 ]
  %op0.addr.1 = phi %struct.rtx_def* [ %op1.addr.0, %if.then25 ], [ %op0.addr.0, %if.end23 ]
  %op1.addr.1 = phi %struct.rtx_def* [ %op0.addr.0, %if.then25 ], [ %op1.addr.0, %if.end23 ]
  %trueop0.0 = phi %struct.rtx_def* [ %retval.0.i917, %if.then25 ], [ %retval.0.i, %if.end23 ]
  %trueop1.0 = phi %struct.rtx_def* [ %retval.0.i, %if.then25 ], [ %retval.0.i917, %if.end23 ]
  %idxprom28 = sext i32 %mode to i64
  %arrayidx29 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom28
  %16 = load i32* %arrayidx29, align 4, !tbaa !1
  switch i32 %16, label %if.end75 [
    i32 1, label %land.lhs.true43
    i32 3, label %land.lhs.true43
    i32 5, label %land.lhs.true43
    i32 7, label %land.lhs.true43
  ]

land.lhs.true43:                                  ; preds = %if.end27, %if.end27, %if.end27, %if.end27
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp44 = icmp eq %struct.rtx_def* %trueop1.0, %17
  br i1 %cmp44, label %if.end75, label %land.lhs.true45

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %18 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 0
  %bf.load46 = load i32* %18, align 8
  %bf.clear47 = and i32 %bf.load46, 65535
  %cmp48 = icmp eq i32 %bf.clear47, 61
  br i1 %cmp48, label %land.lhs.true53, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %land.lhs.true45
  %19 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 0
  %bf.load50 = load i32* %19, align 8
  %bf.clear51 = and i32 %bf.load50, 65535
  %cmp52 = icmp eq i32 %bf.clear51, 54
  br i1 %cmp52, label %land.lhs.true53, label %land.lhs.true61

land.lhs.true53:                                  ; preds = %lor.lhs.false49, %land.lhs.true45
  %20 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 0
  %bf.load54 = load i32* %20, align 8
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 61
  br i1 %cmp56, label %if.end75, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %land.lhs.true53
  %21 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load58 = load i32* %21, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp eq i32 %bf.clear59, 54
  br i1 %cmp60, label %if.end75, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %lor.lhs.false57, %lor.lhs.false49
  %call62 = call %struct.rtx_def* @simplify_binary_operation(i32 76, i32 %mode, %struct.rtx_def* %op0.addr.1, %struct.rtx_def* %op1.addr.1)
  %cmp63 = icmp ne %struct.rtx_def* %call62, null
  %cmp65 = icmp ne i32 %code.addr.0, 109
  %or.cond = and i1 %cmp63, %cmp65
  %cmp67 = icmp ne i32 %code.addr.0, 108
  %or.cond673 = and i1 %or.cond, %cmp67
  %cmp69 = icmp ne i32 %code.addr.0, 111
  %or.cond674 = and i1 %or.cond673, %cmp69
  %cmp71 = icmp ne i32 %code.addr.0, 110
  %or.cond675 = and i1 %or.cond674, %cmp71
  br i1 %or.cond675, label %if.then72, label %if.end75

if.then72:                                        ; preds = %land.lhs.true61
  %call73 = call i32 @signed_condition(i32 %code.addr.0) #2
  %22 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %call74 = call %struct.rtx_def* @simplify_relational_operation(i32 %call73, i32 %mode, %struct.rtx_def* %call62, %struct.rtx_def* %22)
  br label %return

if.end75:                                         ; preds = %if.end27, %land.lhs.true43, %land.lhs.true61, %lor.lhs.false57, %land.lhs.true53
  %23 = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !16
  %tobool76 = icmp ne i32 %23, 0
  %cmp78 = icmp eq i32 %code.addr.0, 113
  %or.cond676 = and i1 %tobool76, %cmp78
  br i1 %or.cond676, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.end75
  %24 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  br label %return

if.end80:                                         ; preds = %if.end75
  %cmp83 = icmp eq i32 %code.addr.0, 112
  %or.cond677 = and i1 %tobool76, %cmp83
  br i1 %or.cond677, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end80
  %25 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

if.end85:                                         ; preds = %if.end80
  %call86 = call i32 @rtx_equal_p(%struct.rtx_def* %trueop0.0, %struct.rtx_def* %trueop1.0) #2
  %tobool87 = icmp eq i32 %call86, 0
  %.phi.trans.insert922 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 0
  %bf.load112.pre = load i32* %.phi.trans.insert922, align 8
  br i1 %tobool87, label %if.else, label %land.lhs.true88

land.lhs.true88:                                  ; preds = %if.end85
  %bf.lshr90 = lshr i32 %bf.load112.pre, 16
  %bf.clear91 = and i32 %bf.lshr90, 255
  %idxprom92865 = zext i32 %bf.clear91 to i64
  %arrayidx93 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom92865
  %26 = load i32* %arrayidx93, align 4, !tbaa !1
  switch i32 %26, label %lor.lhs.false102 [
    i32 2, label %lor.lhs.false109
    i32 6, label %lor.lhs.false109
  ]

lor.lhs.false102:                                 ; preds = %land.lhs.true88
  %cmp108 = icmp ne i32 %26, 8
  %27 = load i32* @flag_unsafe_math_optimizations, align 4
  %tobool110 = icmp ne i32 %27, 0
  %or.cond678 = or i1 %cmp108, %tobool110
  br i1 %or.cond678, label %if.end604, label %if.else

lor.lhs.false109:                                 ; preds = %land.lhs.true88, %land.lhs.true88
  %.old = load i32* @flag_unsafe_math_optimizations, align 4, !tbaa !16
  %tobool110.old = icmp eq i32 %.old, 0
  br i1 %tobool110.old, label %if.else, label %if.end604

if.else:                                          ; preds = %if.end85, %lor.lhs.false109, %lor.lhs.false102
  %bf.clear113 = and i32 %bf.load112.pre, 65535
  %cmp114 = icmp eq i32 %bf.clear113, 55
  br i1 %cmp114, label %land.lhs.true115, label %if.else141

land.lhs.true115:                                 ; preds = %if.else
  %28 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load116 = load i32* %28, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp eq i32 %bf.clear117, 55
  br i1 %cmp118, label %land.lhs.true119, label %if.else141

land.lhs.true119:                                 ; preds = %land.lhs.true115
  %bf.lshr121 = lshr i32 %bf.load112.pre, 16
  %bf.clear122 = and i32 %bf.lshr121, 255
  %idxprom123864 = zext i32 %bf.clear122 to i64
  %arrayidx124 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom123864
  %29 = load i32* %arrayidx124, align 4, !tbaa !1
  %cmp125 = icmp eq i32 %29, 2
  br i1 %cmp125, label %if.then126, label %if.else141

if.then126:                                       ; preds = %land.lhs.true119
  %op0127 = getelementptr inbounds %struct.cfc_args* %args, i64 0, i32 0
  store %struct.rtx_def* %trueop0.0, %struct.rtx_def** %op0127, align 8, !tbaa !32
  %op1128 = getelementptr inbounds %struct.cfc_args* %args, i64 0, i32 1
  store %struct.rtx_def* %trueop1.0, %struct.rtx_def** %op1128, align 8, !tbaa !34
  %30 = bitcast %struct.cfc_args* %args to i8*
  %call129 = call i32 @do_float_handler(void (i8*)* @check_fold_consts, i8* %30) #2
  %tobool130 = icmp eq i32 %call129, 0
  %unordered = getelementptr inbounds %struct.cfc_args* %args, i64 0, i32 5
  br i1 %tobool130, label %if.end132.thread, label %if.end132

if.end132.thread:                                 ; preds = %if.then126
  store i32 1, i32* %unordered, align 4, !tbaa !35
  br label %if.then135

if.end132:                                        ; preds = %if.then126
  %.pre = load i32* %unordered, align 4, !tbaa !35
  %phitmp = icmp eq i32 %.pre, 0
  br i1 %phitmp, label %if.end137, label %if.then135

if.then135:                                       ; preds = %if.end132.thread, %if.end132
  switch i32 %code.addr.0, label %return [
    i32 114, label %sw.bb
    i32 118, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 115, label %sw.bb
    i32 102, label %sw.bb
    i32 112, label %sw.bb
    i32 103, label %sw.bb136
    i32 107, label %sw.bb136
    i32 105, label %sw.bb136
    i32 106, label %sw.bb136
    i32 104, label %sw.bb136
    i32 119, label %sw.bb136
    i32 113, label %sw.bb136
  ]

sw.bb:                                            ; preds = %if.then135, %if.then135, %if.then135, %if.then135, %if.then135, %if.then135, %if.then135
  %31 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  br label %return

sw.bb136:                                         ; preds = %if.then135, %if.then135, %if.then135, %if.then135, %if.then135, %if.then135, %if.then135
  %32 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

if.end137:                                        ; preds = %if.end132
  %equal138 = getelementptr inbounds %struct.cfc_args* %args, i64 0, i32 2
  %33 = bitcast i32* %equal138 to i64*
  %34 = load i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %34, 32
  %37 = trunc i64 %36 to i32
  %op1lt140 = getelementptr inbounds %struct.cfc_args* %args, i64 0, i32 4
  %38 = load i32* %op1lt140, align 8, !tbaa !36
  br label %if.end604

if.else141:                                       ; preds = %land.lhs.true119, %land.lhs.true115, %if.else
  %cmp144 = icmp eq i32 %16, 1
  %or.cond680 = or i1 %cmp144, %cmp
  %39 = and i32 %bf.load112.pre, 65534
  %switch = icmp eq i32 %39, 54
  %or.cond931 = and i1 %or.cond680, %switch
  br i1 %or.cond931, label %land.lhs.true155, label %if.else294

land.lhs.true155:                                 ; preds = %if.else141
  %40 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load156 = load i32* %40, align 8
  %41 = and i32 %bf.load156, 65534
  %switch898 = icmp eq i32 %41, 54
  br i1 %switch898, label %if.then163, label %if.else294

if.then163:                                       ; preds = %land.lhs.true155
  %arrayidx165 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom28
  %42 = load i16* %arrayidx165, align 2, !tbaa !4
  %conv = zext i16 %42 to i64
  br i1 %cmp114, label %if.then170, label %if.else176

if.then170:                                       ; preds = %if.then163
  %rtwint = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 1, i64 1, i32 0
  %43 = load i64* %rtwint, align 8, !tbaa !14
  %rtwint175 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 1, i64 2, i32 0
  %44 = load i64* %rtwint175, align 8, !tbaa !14
  br label %if.end182

if.else176:                                       ; preds = %if.then163
  %rtwint179 = getelementptr inbounds %struct.rtx_def* %trueop0.0, i64 0, i32 1, i64 0, i32 0
  %45 = load i64* %rtwint179, align 8, !tbaa !14
  %.lobit = ashr i64 %45, 63
  br label %if.end182

if.end182:                                        ; preds = %if.else176, %if.then170
  %l0s.0 = phi i64 [ %43, %if.then170 ], [ %45, %if.else176 ]
  %h0s.0 = phi i64 [ %44, %if.then170 ], [ %.lobit, %if.else176 ]
  %bf.clear184 = and i32 %bf.load156, 65535
  %cmp185 = icmp eq i32 %bf.clear184, 55
  br i1 %cmp185, label %if.then187, label %if.else194

if.then187:                                       ; preds = %if.end182
  %rtwint190 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 1, i32 0
  %46 = load i64* %rtwint190, align 8, !tbaa !14
  %rtwint193 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 2, i32 0
  %47 = load i64* %rtwint193, align 8, !tbaa !14
  br label %if.end201

if.else194:                                       ; preds = %if.end182
  %rtwint197 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %48 = load i64* %rtwint197, align 8, !tbaa !14
  %.lobit863 = ashr i64 %48, 63
  br label %if.end201

if.end201:                                        ; preds = %if.else194, %if.then187
  %l1s.0 = phi i64 [ %46, %if.then187 ], [ %48, %if.else194 ]
  %h1s.0 = phi i64 [ %47, %if.then187 ], [ %.lobit863, %if.else194 ]
  %cmp202 = icmp ne i16 %42, 0
  %cmp205 = icmp ult i16 %42, 64
  %or.cond682 = and i1 %cmp202, %cmp205
  br i1 %or.cond682, label %if.then207, label %if.end231

if.then207:                                       ; preds = %if.end201
  %shl = shl i64 1, %conv
  %sub = add nsw i64 %shl, -1
  %and = and i64 %l0s.0, %sub
  %and211 = and i64 %l1s.0, %sub
  %sub212 = add i64 %conv, 4294967295
  %sh_prom213 = and i64 %sub212, 4294967295
  %shl214 = shl i64 1, %sh_prom213
  %and215 = and i64 %l0s.0, %shl214
  %tobool216 = icmp eq i64 %and215, 0
  br i1 %tobool216, label %if.end220, label %if.then217

if.then217:                                       ; preds = %if.then207
  %shl219 = shl i64 -1, %conv
  %or = or i64 %l0s.0, %shl219
  br label %if.end220

if.end220:                                        ; preds = %if.then207, %if.then217
  %l0s.1 = phi i64 [ %or, %if.then217 ], [ %l0s.0, %if.then207 ]
  %and224 = and i64 %l1s.0, %shl214
  %tobool225 = icmp eq i64 %and224, 0
  br i1 %tobool225, label %if.end231, label %if.then226

if.then226:                                       ; preds = %if.end220
  %shl228 = shl i64 -1, %conv
  %or229 = or i64 %l1s.0, %shl228
  br label %if.end231

if.end231:                                        ; preds = %if.end220, %if.then226, %if.end201
  %l0s.2 = phi i64 [ %l0s.1, %if.then226 ], [ %l0s.1, %if.end220 ], [ %l0s.0, %if.end201 ]
  %l1s.1 = phi i64 [ %or229, %if.then226 ], [ %l1s.0, %if.end220 ], [ %l1s.0, %if.end201 ]
  %l0u.1 = phi i64 [ %and, %if.then226 ], [ %and, %if.end220 ], [ %l0s.0, %if.end201 ]
  %l1u.1 = phi i64 [ %and211, %if.then226 ], [ %and211, %if.end220 ], [ %l1s.0, %if.end201 ]
  %cmp235 = icmp ult i16 %42, 65
  %or.cond684 = and i1 %cmp202, %cmp235
  br i1 %or.cond684, label %if.then237, label %if.end244

if.then237:                                       ; preds = %if.end231
  %l0s.2.lobit = ashr i64 %l0s.2, 63
  %l1s.1.lobit = ashr i64 %l1s.1, 63
  br label %if.end244

if.end244:                                        ; preds = %if.then237, %if.end231
  %h0s.1 = phi i64 [ %l0s.2.lobit, %if.then237 ], [ %h0s.0, %if.end231 ]
  %h1s.1 = phi i64 [ %l1s.1.lobit, %if.then237 ], [ %h1s.0, %if.end231 ]
  %h0u.1 = phi i64 [ 0, %if.then237 ], [ %h0s.0, %if.end231 ]
  %h1u.1 = phi i64 [ 0, %if.then237 ], [ %h1s.0, %if.end231 ]
  %cmp245 = icmp eq i64 %h0u.1, %h1u.1
  %cmp247 = icmp eq i64 %l0u.1, %l1u.1
  %cmp247. = and i1 %cmp245, %cmp247
  %land.ext = zext i1 %cmp247. to i32
  %cmp249 = icmp slt i64 %h0s.1, %h1s.1
  br i1 %cmp249, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end244
  %cmp251 = icmp eq i64 %h0s.1, %h1s.1
  %cmp254 = icmp ult i64 %l0u.1, %l1u.1
  %cmp254. = and i1 %cmp251, %cmp254
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end244
  %49 = phi i1 [ true, %if.end244 ], [ %cmp254., %lor.rhs ]
  %lor.ext = zext i1 %49 to i32
  %cmp258 = icmp slt i64 %h1s.1, %h0s.1
  br i1 %cmp258, label %lor.end268, label %lor.rhs260

lor.rhs260:                                       ; preds = %lor.end
  %cmp261 = icmp eq i64 %h1s.1, %h0s.1
  %cmp264 = icmp ult i64 %l1u.1, %l0u.1
  %cmp264. = and i1 %cmp261, %cmp264
  br label %lor.end268

lor.end268:                                       ; preds = %lor.rhs260, %lor.end
  %50 = phi i1 [ true, %lor.end ], [ %cmp264., %lor.rhs260 ]
  %lor.ext269 = zext i1 %50 to i32
  %cmp270 = icmp ult i64 %h0u.1, %h1u.1
  br i1 %cmp270, label %lor.end280, label %lor.rhs272

lor.rhs272:                                       ; preds = %lor.end268
  %cmp276 = icmp ult i64 %l0u.1, %l1u.1
  %cmp276. = and i1 %cmp245, %cmp276
  br label %lor.end280

lor.end280:                                       ; preds = %lor.rhs272, %lor.end268
  %51 = phi i1 [ true, %lor.end268 ], [ %cmp276., %lor.rhs272 ]
  %lor.ext281 = zext i1 %51 to i32
  %cmp282 = icmp ult i64 %h1u.1, %h0u.1
  br i1 %cmp282, label %lor.end292, label %lor.rhs284

lor.rhs284:                                       ; preds = %lor.end280
  %cmp288 = icmp ult i64 %l1u.1, %l0u.1
  %cmp288. = and i1 %cmp245, %cmp288
  br label %lor.end292

lor.end292:                                       ; preds = %lor.rhs284, %lor.end280
  %52 = phi i1 [ true, %lor.end280 ], [ %cmp288., %lor.rhs284 ]
  %lor.ext293 = zext i1 %52 to i32
  br label %if.end604

if.else294:                                       ; preds = %land.lhs.true155, %if.else141
  switch i32 %code.addr.0, label %sw.epilog [
    i32 103, label %sw.bb295
    i32 102, label %sw.bb408
    i32 108, label %sw.bb521
    i32 111, label %sw.bb526
    i32 110, label %sw.bb531
    i32 109, label %sw.bb566
  ]

sw.bb295:                                         ; preds = %if.else294
  %53 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !6
  %cmp296 = icmp eq %struct.rtx_def* %op0.addr.1, %53
  br i1 %cmp296, label %land.lhs.true395, label %lor.lhs.false298

lor.lhs.false298:                                 ; preds = %sw.bb295
  %54 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %cmp299 = icmp eq %struct.rtx_def* %op0.addr.1, %54
  %55 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8
  %cmp302 = icmp eq %struct.rtx_def* %op0.addr.1, %55
  %or.cond869 = or i1 %cmp299, %cmp302
  %56 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8
  %cmp305 = icmp eq %struct.rtx_def* %op0.addr.1, %56
  %or.cond871 = or i1 %or.cond869, %cmp305
  br i1 %or.cond871, label %land.lhs.true395, label %lor.lhs.false307

lor.lhs.false307:                                 ; preds = %lor.lhs.false298
  %57 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 0
  %bf.load308 = load i32* %57, align 8
  %bf.clear309 = and i32 %bf.load308, 65535
  %cmp310 = icmp eq i32 %bf.clear309, 75
  br i1 %cmp310, label %land.lhs.true312, label %lor.lhs.false350

land.lhs.true312:                                 ; preds = %lor.lhs.false307
  %arrayidx314 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 1, i64 1
  %rtx315 = bitcast %union.rtunion_def* %arrayidx314 to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx315, align 8, !tbaa !6
  %59 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 0
  %bf.load316 = load i32* %59, align 8
  %bf.clear317 = and i32 %bf.load316, 65535
  %cmp318 = icmp eq i32 %bf.clear317, 54
  br i1 %cmp318, label %land.lhs.true320, label %lor.lhs.false350

land.lhs.true320:                                 ; preds = %land.lhs.true312
  %arrayidx322 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 1, i64 0
  %rtx323 = bitcast %union.rtunion_def* %arrayidx322 to %struct.rtx_def**
  %60 = load %struct.rtx_def** %rtx323, align 8, !tbaa !6
  %cmp324 = icmp eq %struct.rtx_def* %60, %53
  %cmp330 = icmp eq %struct.rtx_def* %60, %54
  %or.cond872 = or i1 %cmp324, %cmp330
  br i1 %or.cond872, label %land.lhs.true395, label %lor.lhs.false332

lor.lhs.false332:                                 ; preds = %land.lhs.true320
  %61 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp333 = icmp ne %struct.rtx_def* %op0.addr.1, %61
  %62 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1
  %tobool337 = icmp eq i8 %62, 0
  %or.cond874 = or i1 %cmp333, %tobool337
  br i1 %or.cond874, label %lor.lhs.false338, label %land.lhs.true395

lor.lhs.false338:                                 ; preds = %lor.lhs.false332
  %cmp342 = icmp eq %struct.rtx_def* %60, %55
  %cmp348 = icmp eq %struct.rtx_def* %60, %56
  %or.cond876 = or i1 %cmp342, %cmp348
  br i1 %or.cond876, label %land.lhs.true395, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %lor.lhs.false338, %land.lhs.true312, %lor.lhs.false307
  %63 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %cmp351 = icmp eq %struct.rtx_def* %op0.addr.1, %63
  br i1 %cmp351, label %land.lhs.true395, label %lor.lhs.false353

lor.lhs.false353:                                 ; preds = %lor.lhs.false350
  %64 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !6
  %cmp354 = icmp eq %struct.rtx_def* %op0.addr.1, %64
  br i1 %cmp354, label %land.lhs.true395, label %lor.lhs.false356

lor.lhs.false356:                                 ; preds = %lor.lhs.false353
  %65 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !6
  %cmp357 = icmp eq %struct.rtx_def* %op0.addr.1, %65
  br i1 %cmp357, label %land.lhs.true395, label %lor.lhs.false359

lor.lhs.false359:                                 ; preds = %lor.lhs.false356
  br i1 %cmp310, label %land.lhs.true364, label %lor.lhs.false390

land.lhs.true364:                                 ; preds = %lor.lhs.false359
  %arrayidx366 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 1, i64 1
  %rtx367 = bitcast %union.rtunion_def* %arrayidx366 to %struct.rtx_def**
  %66 = load %struct.rtx_def** %rtx367, align 8, !tbaa !6
  %67 = getelementptr inbounds %struct.rtx_def* %66, i64 0, i32 0
  %bf.load368 = load i32* %67, align 8
  %bf.clear369 = and i32 %bf.load368, 65535
  %cmp370 = icmp eq i32 %bf.clear369, 54
  br i1 %cmp370, label %land.lhs.true372, label %lor.lhs.false390.thread

lor.lhs.false390.thread:                          ; preds = %land.lhs.true364
  %68 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  br label %lor.lhs.false398

land.lhs.true372:                                 ; preds = %land.lhs.true364
  %arrayidx374 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 1, i64 0
  %rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx375, align 8, !tbaa !6
  %cmp376 = icmp eq %struct.rtx_def* %69, %63
  %cmp382 = icmp eq %struct.rtx_def* %69, %64
  %or.cond877 = or i1 %cmp376, %cmp382
  %cmp388 = icmp eq %struct.rtx_def* %69, %65
  %or.cond878 = or i1 %or.cond877, %cmp388
  br i1 %or.cond878, label %land.lhs.true395, label %lor.lhs.false390

lor.lhs.false390:                                 ; preds = %land.lhs.true372, %lor.lhs.false359
  %cmp393 = icmp eq i32 %bf.clear309, 70
  %70 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  %cmp396 = icmp eq %struct.rtx_def* %trueop1.0, %70
  %or.cond880 = and i1 %cmp393, %cmp396
  br i1 %or.cond880, label %land.lhs.true403, label %lor.lhs.false398

land.lhs.true395:                                 ; preds = %lor.lhs.false332, %land.lhs.true372, %lor.lhs.false356, %lor.lhs.false353, %lor.lhs.false350, %lor.lhs.false338, %land.lhs.true320, %lor.lhs.false298, %sw.bb295
  %.old879 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp396.old = icmp eq %struct.rtx_def* %trueop1.0, %.old879
  br i1 %cmp396.old, label %land.lhs.true403, label %lor.lhs.false398

lor.lhs.false398:                                 ; preds = %lor.lhs.false390.thread, %land.lhs.true395, %lor.lhs.false390
  %71 = phi %struct.rtx_def* [ %.old879, %land.lhs.true395 ], [ %70, %lor.lhs.false390 ], [ %68, %lor.lhs.false390.thread ]
  %cmp401 = icmp ne i32 %bf.clear113, 67
  %72 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8
  %cmp404 = icmp eq %struct.rtx_def* %op0.addr.1, %72
  %or.cond882 = or i1 %cmp401, %cmp404
  br i1 %or.cond882, label %sw.epilog, label %return

land.lhs.true403:                                 ; preds = %lor.lhs.false390, %land.lhs.true395
  %.old881 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp404.old = icmp eq %struct.rtx_def* %op0.addr.1, %.old881
  br i1 %cmp404.old, label %sw.epilog, label %return

sw.bb408:                                         ; preds = %if.else294
  %73 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !6
  %cmp409 = icmp eq %struct.rtx_def* %op0.addr.1, %73
  br i1 %cmp409, label %land.lhs.true508, label %lor.lhs.false411

lor.lhs.false411:                                 ; preds = %sw.bb408
  %74 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 8, !tbaa !6
  %cmp412 = icmp eq %struct.rtx_def* %op0.addr.1, %74
  %75 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8
  %cmp415 = icmp eq %struct.rtx_def* %op0.addr.1, %75
  %or.cond884 = or i1 %cmp412, %cmp415
  %76 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 6), align 8
  %cmp418 = icmp eq %struct.rtx_def* %op0.addr.1, %76
  %or.cond886 = or i1 %or.cond884, %cmp418
  br i1 %or.cond886, label %land.lhs.true508, label %lor.lhs.false420

lor.lhs.false420:                                 ; preds = %lor.lhs.false411
  %77 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 0
  %bf.load421 = load i32* %77, align 8
  %bf.clear422 = and i32 %bf.load421, 65535
  %cmp423 = icmp eq i32 %bf.clear422, 75
  br i1 %cmp423, label %land.lhs.true425, label %lor.lhs.false463

land.lhs.true425:                                 ; preds = %lor.lhs.false420
  %arrayidx427 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 1, i64 1
  %rtx428 = bitcast %union.rtunion_def* %arrayidx427 to %struct.rtx_def**
  %78 = load %struct.rtx_def** %rtx428, align 8, !tbaa !6
  %79 = getelementptr inbounds %struct.rtx_def* %78, i64 0, i32 0
  %bf.load429 = load i32* %79, align 8
  %bf.clear430 = and i32 %bf.load429, 65535
  %cmp431 = icmp eq i32 %bf.clear430, 54
  br i1 %cmp431, label %land.lhs.true433, label %lor.lhs.false463

land.lhs.true433:                                 ; preds = %land.lhs.true425
  %arrayidx435 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 1, i64 0
  %rtx436 = bitcast %union.rtunion_def* %arrayidx435 to %struct.rtx_def**
  %80 = load %struct.rtx_def** %rtx436, align 8, !tbaa !6
  %cmp437 = icmp eq %struct.rtx_def* %80, %73
  %cmp443 = icmp eq %struct.rtx_def* %80, %74
  %or.cond887 = or i1 %cmp437, %cmp443
  br i1 %or.cond887, label %land.lhs.true508, label %lor.lhs.false445

lor.lhs.false445:                                 ; preds = %land.lhs.true433
  %81 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp446 = icmp ne %struct.rtx_def* %op0.addr.1, %81
  %82 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1
  %tobool450 = icmp eq i8 %82, 0
  %or.cond889 = or i1 %cmp446, %tobool450
  br i1 %or.cond889, label %lor.lhs.false451, label %land.lhs.true508

lor.lhs.false451:                                 ; preds = %lor.lhs.false445
  %cmp455 = icmp eq %struct.rtx_def* %80, %75
  %cmp461 = icmp eq %struct.rtx_def* %80, %76
  %or.cond891 = or i1 %cmp455, %cmp461
  br i1 %or.cond891, label %land.lhs.true508, label %lor.lhs.false463

lor.lhs.false463:                                 ; preds = %lor.lhs.false451, %land.lhs.true425, %lor.lhs.false420
  %83 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !6
  %cmp464 = icmp eq %struct.rtx_def* %op0.addr.1, %83
  br i1 %cmp464, label %land.lhs.true508, label %lor.lhs.false466

lor.lhs.false466:                                 ; preds = %lor.lhs.false463
  %84 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 8), align 8, !tbaa !6
  %cmp467 = icmp eq %struct.rtx_def* %op0.addr.1, %84
  br i1 %cmp467, label %land.lhs.true508, label %lor.lhs.false469

lor.lhs.false469:                                 ; preds = %lor.lhs.false466
  %85 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 9), align 8, !tbaa !6
  %cmp470 = icmp eq %struct.rtx_def* %op0.addr.1, %85
  br i1 %cmp470, label %land.lhs.true508, label %lor.lhs.false472

lor.lhs.false472:                                 ; preds = %lor.lhs.false469
  br i1 %cmp423, label %land.lhs.true477, label %lor.lhs.false503

land.lhs.true477:                                 ; preds = %lor.lhs.false472
  %arrayidx479 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 1, i64 1
  %rtx480 = bitcast %union.rtunion_def* %arrayidx479 to %struct.rtx_def**
  %86 = load %struct.rtx_def** %rtx480, align 8, !tbaa !6
  %87 = getelementptr inbounds %struct.rtx_def* %86, i64 0, i32 0
  %bf.load481 = load i32* %87, align 8
  %bf.clear482 = and i32 %bf.load481, 65535
  %cmp483 = icmp eq i32 %bf.clear482, 54
  br i1 %cmp483, label %land.lhs.true485, label %lor.lhs.false511

land.lhs.true485:                                 ; preds = %land.lhs.true477
  %arrayidx487 = getelementptr inbounds %struct.rtx_def* %op0.addr.1, i64 0, i32 1, i64 0
  %rtx488 = bitcast %union.rtunion_def* %arrayidx487 to %struct.rtx_def**
  %88 = load %struct.rtx_def** %rtx488, align 8, !tbaa !6
  %cmp489 = icmp eq %struct.rtx_def* %88, %83
  %cmp495 = icmp eq %struct.rtx_def* %88, %84
  %or.cond892 = or i1 %cmp489, %cmp495
  %cmp501 = icmp eq %struct.rtx_def* %88, %85
  %or.cond893 = or i1 %or.cond892, %cmp501
  br i1 %or.cond893, label %land.lhs.true508, label %lor.lhs.false503

lor.lhs.false503:                                 ; preds = %land.lhs.true485, %lor.lhs.false472
  %cmp506 = icmp eq i32 %bf.clear422, 70
  %89 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  %cmp509 = icmp eq %struct.rtx_def* %trueop1.0, %89
  %or.cond895 = and i1 %cmp506, %cmp509
  br i1 %or.cond895, label %land.lhs.true516, label %lor.lhs.false511

land.lhs.true508:                                 ; preds = %lor.lhs.false445, %land.lhs.true485, %lor.lhs.false469, %lor.lhs.false466, %lor.lhs.false463, %lor.lhs.false451, %land.lhs.true433, %lor.lhs.false411, %sw.bb408
  %.old894 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp509.old = icmp eq %struct.rtx_def* %trueop1.0, %.old894
  br i1 %cmp509.old, label %land.lhs.true516, label %lor.lhs.false511

lor.lhs.false511:                                 ; preds = %land.lhs.true477, %land.lhs.true508, %lor.lhs.false503
  %cmp514 = icmp ne i32 %bf.clear113, 67
  %90 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8
  %cmp517 = icmp eq %struct.rtx_def* %op0.addr.1, %90
  %or.cond897 = or i1 %cmp514, %cmp517
  br i1 %or.cond897, label %sw.epilog, label %if.then519

land.lhs.true516:                                 ; preds = %lor.lhs.false503, %land.lhs.true508
  %.old896 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !tbaa !6
  %cmp517.old = icmp eq %struct.rtx_def* %op0.addr.1, %.old896
  br i1 %cmp517.old, label %sw.epilog, label %if.then519

if.then519:                                       ; preds = %lor.lhs.false511, %land.lhs.true516
  %91 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  br label %return

sw.bb521:                                         ; preds = %if.else294
  %92 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp522 = icmp eq %struct.rtx_def* %trueop1.0, %92
  br i1 %cmp522, label %if.then524, label %sw.epilog

if.then524:                                       ; preds = %sw.bb521
  %93 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  br label %return

sw.bb526:                                         ; preds = %if.else294
  %94 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cmp527 = icmp eq %struct.rtx_def* %trueop1.0, %94
  br i1 %cmp527, label %return, label %sw.epilog

sw.bb531:                                         ; preds = %if.else294
  %95 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load532 = load i32* %95, align 8
  %bf.clear533 = and i32 %bf.load532, 65535
  %cmp534 = icmp eq i32 %bf.clear533, 54
  br i1 %cmp534, label %land.lhs.true536, label %sw.epilog

land.lhs.true536:                                 ; preds = %sw.bb531
  %rtwint539 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %96 = load i64* %rtwint539, align 8, !tbaa !14
  %arrayidx541 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom28
  %97 = load i64* %arrayidx541, align 8, !tbaa !14
  %cmp542 = icmp eq i64 %96, %97
  br i1 %cmp542, label %land.lhs.true544, label %sw.epilog

land.lhs.true544:                                 ; preds = %land.lhs.true536
  switch i32 %16, label %sw.epilog [
    i32 1, label %if.then564
    i32 3, label %if.then564
    i32 5, label %if.then564
    i32 7, label %if.then564
  ]

if.then564:                                       ; preds = %land.lhs.true544, %land.lhs.true544, %land.lhs.true544, %land.lhs.true544
  %98 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  br label %return

sw.bb566:                                         ; preds = %if.else294
  %99 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 0
  %bf.load567 = load i32* %99, align 8
  %bf.clear568 = and i32 %bf.load567, 65535
  %cmp569 = icmp eq i32 %bf.clear568, 54
  br i1 %cmp569, label %land.lhs.true571, label %sw.epilog

land.lhs.true571:                                 ; preds = %sw.bb566
  %rtwint574 = getelementptr inbounds %struct.rtx_def* %trueop1.0, i64 0, i32 1, i64 0, i32 0
  %100 = load i64* %rtwint574, align 8, !tbaa !14
  %arrayidx576 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom28
  %101 = load i64* %arrayidx576, align 8, !tbaa !14
  %cmp577 = icmp eq i64 %100, %101
  br i1 %cmp577, label %land.lhs.true579, label %sw.epilog

land.lhs.true579:                                 ; preds = %land.lhs.true571
  switch i32 %16, label %sw.epilog [
    i32 1, label %if.then599
    i32 3, label %if.then599
    i32 5, label %if.then599
    i32 7, label %if.then599
  ]

if.then599:                                       ; preds = %land.lhs.true579, %land.lhs.true579, %land.lhs.true579, %land.lhs.true579
  %102 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

sw.epilog:                                        ; preds = %land.lhs.true579, %land.lhs.true544, %lor.lhs.false511, %lor.lhs.false398, %land.lhs.true403, %land.lhs.true516, %if.else294, %sw.bb566, %land.lhs.true571, %sw.bb531, %land.lhs.true536, %sw.bb526, %sw.bb521
  br label %return

if.end604:                                        ; preds = %lor.lhs.false102, %lor.lhs.false109, %if.end137, %lor.end292
  %equal.0 = phi i32 [ %35, %if.end137 ], [ %land.ext, %lor.end292 ], [ 1, %lor.lhs.false109 ], [ 1, %lor.lhs.false102 ]
  %op0lt.0 = phi i32 [ %37, %if.end137 ], [ %lor.ext, %lor.end292 ], [ 0, %lor.lhs.false109 ], [ 0, %lor.lhs.false102 ]
  %op0ltu.0 = phi i32 [ %37, %if.end137 ], [ %lor.ext281, %lor.end292 ], [ 0, %lor.lhs.false109 ], [ 0, %lor.lhs.false102 ]
  %op1lt.0 = phi i32 [ %38, %if.end137 ], [ %lor.ext269, %lor.end292 ], [ 0, %lor.lhs.false109 ], [ 0, %lor.lhs.false102 ]
  %op1ltu.0 = phi i32 [ %38, %if.end137 ], [ %lor.ext293, %lor.end292 ], [ 0, %lor.lhs.false109 ], [ 0, %lor.lhs.false102 ]
  switch i32 %code.addr.0, label %sw.default672 [
    i32 103, label %sw.bb605
    i32 114, label %sw.bb605
    i32 102, label %sw.bb608
    i32 119, label %sw.bb608
    i32 107, label %sw.bb614
    i32 118, label %sw.bb614
    i32 105, label %sw.bb620
    i32 116, label %sw.bb620
    i32 111, label %sw.bb626
    i32 109, label %sw.bb632
    i32 106, label %sw.bb638
    i32 117, label %sw.bb638
    i32 104, label %sw.bb646
    i32 115, label %sw.bb646
    i32 110, label %sw.bb654
    i32 108, label %sw.bb662
    i32 113, label %sw.bb670
    i32 112, label %sw.bb671
  ]

sw.bb605:                                         ; preds = %if.end604, %if.end604
  %tobool606 = icmp ne i32 %equal.0, 0
  %103 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %104 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond607 = select i1 %tobool606, %struct.rtx_def* %103, %struct.rtx_def* %104
  br label %return

sw.bb608:                                         ; preds = %if.end604, %if.end604
  %tobool609 = icmp ne i32 %equal.0, 0
  %105 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %106 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond613 = select i1 %tobool609, %struct.rtx_def* %106, %struct.rtx_def* %105
  br label %return

sw.bb614:                                         ; preds = %if.end604, %if.end604
  %tobool615 = icmp ne i32 %op0lt.0, 0
  %107 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %108 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond619 = select i1 %tobool615, %struct.rtx_def* %107, %struct.rtx_def* %108
  br label %return

sw.bb620:                                         ; preds = %if.end604, %if.end604
  %tobool621 = icmp ne i32 %op1lt.0, 0
  %109 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %110 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond625 = select i1 %tobool621, %struct.rtx_def* %109, %struct.rtx_def* %110
  br label %return

sw.bb626:                                         ; preds = %if.end604
  %tobool627 = icmp ne i32 %op0ltu.0, 0
  %111 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %112 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond631 = select i1 %tobool627, %struct.rtx_def* %111, %struct.rtx_def* %112
  br label %return

sw.bb632:                                         ; preds = %if.end604
  %tobool633 = icmp ne i32 %op1ltu.0, 0
  %113 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %114 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond637 = select i1 %tobool633, %struct.rtx_def* %113, %struct.rtx_def* %114
  br label %return

sw.bb638:                                         ; preds = %if.end604, %if.end604
  %115 = or i32 %op0lt.0, %equal.0
  %116 = icmp ne i32 %115, 0
  %117 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %118 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond645 = select i1 %116, %struct.rtx_def* %117, %struct.rtx_def* %118
  br label %return

sw.bb646:                                         ; preds = %if.end604, %if.end604
  %119 = or i32 %op1lt.0, %equal.0
  %120 = icmp ne i32 %119, 0
  %121 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %122 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond653 = select i1 %120, %struct.rtx_def* %121, %struct.rtx_def* %122
  br label %return

sw.bb654:                                         ; preds = %if.end604
  %123 = or i32 %op0ltu.0, %equal.0
  %124 = icmp ne i32 %123, 0
  %125 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %126 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond661 = select i1 %124, %struct.rtx_def* %125, %struct.rtx_def* %126
  br label %return

sw.bb662:                                         ; preds = %if.end604
  %127 = or i32 %op1ltu.0, %equal.0
  %128 = icmp ne i32 %127, 0
  %129 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  %130 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  %cond669 = select i1 %128, %struct.rtx_def* %129, %struct.rtx_def* %130
  br label %return

sw.bb670:                                         ; preds = %if.end604
  %131 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !6
  br label %return

sw.bb671:                                         ; preds = %if.end604
  %132 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !6
  br label %return

sw.default672:                                    ; preds = %if.end604
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 2350, i8* getelementptr inbounds ([30 x i8]* @__FUNCTION__.simplify_relational_operation, i64 0, i64 0)) #4
  unreachable

return:                                           ; preds = %land.lhs.true403, %lor.lhs.false398, %sw.bb526, %if.then135, %avoid_constant_pool_reference.exit918, %sw.bb671, %sw.bb670, %sw.bb662, %sw.bb654, %sw.bb646, %sw.bb638, %sw.bb632, %sw.bb626, %sw.bb620, %sw.bb614, %sw.bb608, %sw.bb605, %sw.epilog, %if.then599, %if.then564, %if.then524, %if.then519, %sw.bb136, %sw.bb, %if.then84, %if.then79, %if.then72
  %retval.0 = phi %struct.rtx_def* [ %24, %if.then79 ], [ %25, %if.then84 ], [ %132, %sw.bb671 ], [ %131, %sw.bb670 ], [ %cond669, %sw.bb662 ], [ %cond661, %sw.bb654 ], [ %cond653, %sw.bb646 ], [ %cond645, %sw.bb638 ], [ %cond637, %sw.bb632 ], [ %cond631, %sw.bb626 ], [ %cond625, %sw.bb620 ], [ %cond619, %sw.bb614 ], [ %cond613, %sw.bb608 ], [ %cond607, %sw.bb605 ], [ %32, %sw.bb136 ], [ %31, %sw.bb ], [ null, %sw.epilog ], [ %102, %if.then599 ], [ %98, %if.then564 ], [ %93, %if.then524 ], [ %91, %if.then519 ], [ %call74, %if.then72 ], [ null, %avoid_constant_pool_reference.exit918 ], [ null, %if.then135 ], [ %trueop1.0, %sw.bb526 ], [ %71, %lor.lhs.false398 ], [ %trueop1.0, %land.lhs.true403 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @swap_condition(i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %x, %struct.rtx_def* readnone %old, %struct.rtx_def* %new) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %cmp = icmp eq %struct.rtx_def* %x, %old
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %idxprom207 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom207
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = sext i8 %1 to i32
  switch i32 %conv, label %sw.default [
    i32 49, label %sw.bb
    i32 50, label %sw.bb16
    i32 99, label %sw.bb16
    i32 60, label %sw.bb26
    i32 51, label %sw.bb82
    i32 98, label %sw.bb82
    i32 120, label %sw.bb113
  ]

sw.bb:                                            ; preds = %if.end
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.lshr5 = lshr i32 %bf.load4, 16
  %bf.clear6 = and i32 %bf.lshr5, 255
  %cmp10 = icmp eq %struct.rtx_def* %2, %old
  br i1 %cmp10, label %cond.end, label %cond.false

cond.false:                                       ; preds = %sw.bb
  %call = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %2, %struct.rtx_def* %old, %struct.rtx_def* %new)
  br label %cond.end

cond.end:                                         ; preds = %sw.bb, %cond.false
  %cond = phi %struct.rtx_def* [ %call, %cond.false ], [ %new, %sw.bb ]
  %call.i = tail call %struct.rtx_def* @simplify_unary_operation(i32 %bf.clear, i32 %bf.clear2, %struct.rtx_def* %cond, i32 %bf.clear6) #2
  %cmp.i = icmp eq %struct.rtx_def* %call.i, null
  br i1 %cmp.i, label %if.end.i, label %return

if.end.i:                                         ; preds = %cond.end
  %call1.i = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 %bf.clear, i32 %bf.clear2, %struct.rtx_def* %cond) #2
  br label %return

sw.bb16:                                          ; preds = %if.end, %if.end
  %fld17 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx19 = bitcast [1 x %union.rtunion_def]* %fld17 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx19, align 8, !tbaa !6
  %call20 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %4, %struct.rtx_def* %old, %struct.rtx_def* %new)
  %arrayidx22 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx23, align 8, !tbaa !6
  %call24 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %5, %struct.rtx_def* %old, %struct.rtx_def* %new)
  %cmp.i218 = icmp eq i8 %1, 99
  br i1 %cmp.i218, label %land.lhs.true.i, label %if.end.i223

land.lhs.true.i:                                  ; preds = %sw.bb16
  %call.i219 = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %call20, %struct.rtx_def* %call24) #2
  %tobool.i220 = icmp eq i32 %call.i219, 0
  %op0.op1.i = select i1 %tobool.i220, %struct.rtx_def* %call20, %struct.rtx_def* %call24
  %op1.op0.i = select i1 %tobool.i220, %struct.rtx_def* %call24, %struct.rtx_def* %call20
  br label %if.end.i223

if.end.i223:                                      ; preds = %land.lhs.true.i, %sw.bb16
  %op0.addr.0.i221 = phi %struct.rtx_def* [ %call20, %sw.bb16 ], [ %op0.op1.i, %land.lhs.true.i ]
  %op1.addr.0.i222 = phi %struct.rtx_def* [ %call24, %sw.bb16 ], [ %op1.op0.i, %land.lhs.true.i ]
  %call2.i = tail call %struct.rtx_def* @simplify_binary_operation(i32 %bf.clear, i32 %bf.clear2, %struct.rtx_def* %op0.addr.0.i221, %struct.rtx_def* %op1.addr.0.i222) #2
  %tobool3.i = icmp eq %struct.rtx_def* %call2.i, null
  br i1 %tobool3.i, label %if.end5.i, label %return

if.end5.i:                                        ; preds = %if.end.i223
  %code.off.i = add i32 %bf.clear, -75
  %6 = icmp ult i32 %code.off.i, 2
  br i1 %6, label %if.then10.i, label %if.end15.i

if.then10.i:                                      ; preds = %if.end5.i
  %call11.i = tail call fastcc %struct.rtx_def* @simplify_plus_minus(i32 %bf.clear, i32 %bf.clear2, %struct.rtx_def* %op0.addr.0.i221, %struct.rtx_def* %op1.addr.0.i222, i32 1) #2
  %tobool12.i = icmp eq %struct.rtx_def* %call11.i, null
  br i1 %tobool12.i, label %if.end15.i, label %return

if.end15.i:                                       ; preds = %if.then10.i, %if.end5.i
  %call16.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %bf.clear, i32 %bf.clear2, %struct.rtx_def* %op0.addr.0.i221, %struct.rtx_def* %op1.addr.0.i222) #2
  br label %return

sw.bb26:                                          ; preds = %if.end
  %fld28 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx30 = bitcast [1 x %union.rtunion_def]* %fld28 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx30, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load31 = load i32* %8, align 8
  %bf.clear33 = and i32 %bf.load31, 16711680
  %cmp34 = icmp eq i32 %bf.clear33, 0
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  br i1 %cmp34, label %cond.false43, label %cond.end50

cond.false43:                                     ; preds = %sw.bb26
  %9 = load %struct.rtx_def** %rtx46, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load47 = load i32* %10, align 8
  br label %cond.end50

cond.end50:                                       ; preds = %sw.bb26, %cond.false43
  %bf.load40.sink = phi i32 [ %bf.load47, %cond.false43 ], [ %bf.load31, %sw.bb26 ]
  %bf.lshr41 = lshr i32 %bf.load40.sink, 16
  %bf.clear42 = and i32 %bf.lshr41, 255
  %call55 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %7, %struct.rtx_def* %old, %struct.rtx_def* %new)
  %11 = load %struct.rtx_def** %rtx46, align 8, !tbaa !6
  %call59 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %11, %struct.rtx_def* %old, %struct.rtx_def* %new)
  %cmp60 = icmp eq i32 %bf.clear42, 0
  br i1 %cmp60, label %cond.false63, label %cond.end79

cond.false63:                                     ; preds = %cond.end50
  %12 = getelementptr inbounds %struct.rtx_def* %call55, i64 0, i32 0
  %bf.load64 = load i32* %12, align 8
  %bf.clear66 = and i32 %bf.load64, 16711680
  %cmp67 = icmp eq i32 %bf.clear66, 0
  br i1 %cmp67, label %cond.false73, label %cond.end77

cond.false73:                                     ; preds = %cond.false63
  %13 = getelementptr inbounds %struct.rtx_def* %call59, i64 0, i32 0
  %bf.load74 = load i32* %13, align 8
  br label %cond.end77

cond.end77:                                       ; preds = %cond.false63, %cond.false73
  %bf.load70.sink = phi i32 [ %bf.load74, %cond.false73 ], [ %bf.load64, %cond.false63 ]
  %bf.lshr71 = lshr i32 %bf.load70.sink, 16
  %bf.clear72 = and i32 %bf.lshr71, 255
  br label %cond.end79

cond.end79:                                       ; preds = %cond.end50, %cond.end77
  %cond80 = phi i32 [ %bf.clear72, %cond.end77 ], [ %bf.clear42, %cond.end50 ]
  %call.i213 = tail call %struct.rtx_def* @simplify_relational_operation(i32 %bf.clear, i32 %cond80, %struct.rtx_def* %call55, %struct.rtx_def* %call59) #2
  %cmp.i214 = icmp eq %struct.rtx_def* %call.i213, null
  br i1 %cmp.i214, label %if.end.i216, label %return

if.end.i216:                                      ; preds = %cond.end79
  %call1.i215 = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %call55, %struct.rtx_def* %call59) #2
  %tobool.i = icmp eq i32 %call1.i215, 0
  br i1 %tobool.i, label %if.end4.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i216
  %call3.i = tail call i32 @swap_condition(i32 %bf.clear) #2
  br label %if.end4.i

if.end4.i:                                        ; preds = %if.then2.i, %if.end.i216
  %code.addr.0.i = phi i32 [ %call3.i, %if.then2.i ], [ %bf.clear, %if.end.i216 ]
  %op0.addr.0.i = phi %struct.rtx_def* [ %call59, %if.then2.i ], [ %call55, %if.end.i216 ]
  %op1.addr.0.i = phi %struct.rtx_def* [ %call55, %if.then2.i ], [ %call59, %if.end.i216 ]
  %call5.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %code.addr.0.i, i32 %bf.clear2, %struct.rtx_def* %op0.addr.0.i, %struct.rtx_def* %op1.addr.0.i) #2
  br label %return

sw.bb82:                                          ; preds = %if.end, %if.end
  %fld84 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx86 = bitcast [1 x %union.rtunion_def]* %fld84 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx86, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load87 = load i32* %15, align 8
  %bf.lshr88 = lshr i32 %bf.load87, 16
  %bf.clear89 = and i32 %bf.lshr88, 255
  %call94 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %14, %struct.rtx_def* %old, %struct.rtx_def* %new)
  %cmp95 = icmp eq i32 %bf.clear89, 0
  br i1 %cmp95, label %cond.false98, label %cond.end102

cond.false98:                                     ; preds = %sw.bb82
  %16 = getelementptr inbounds %struct.rtx_def* %call94, i64 0, i32 0
  %bf.load99 = load i32* %16, align 8
  %bf.lshr100 = lshr i32 %bf.load99, 16
  %bf.clear101 = and i32 %bf.lshr100, 255
  br label %cond.end102

cond.end102:                                      ; preds = %sw.bb82, %cond.false98
  %cond103 = phi i32 [ %bf.clear101, %cond.false98 ], [ %bf.clear89, %sw.bb82 ]
  %arrayidx105 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx106, align 8, !tbaa !6
  %call107 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %17, %struct.rtx_def* %old, %struct.rtx_def* %new)
  %arrayidx109 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 2
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx110, align 8, !tbaa !6
  %call111 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %18, %struct.rtx_def* %old, %struct.rtx_def* %new)
  %call.i208 = tail call %struct.rtx_def* @simplify_ternary_operation(i32 %bf.clear, i32 %bf.clear2, i32 %cond103, %struct.rtx_def* %call94, %struct.rtx_def* %call107, %struct.rtx_def* %call111) #2
  %cmp.i209 = icmp eq %struct.rtx_def* %call.i208, null
  br i1 %cmp.i209, label %if.end.i211, label %return

if.end.i211:                                      ; preds = %cond.end102
  %call1.i210 = tail call %struct.rtx_def* @gen_rtx_fmt_eee(i32 %bf.clear, i32 %bf.clear2, %struct.rtx_def* %call94, %struct.rtx_def* %call107, %struct.rtx_def* %call111) #2
  br label %return

sw.bb113:                                         ; preds = %if.end
  %cmp114 = icmp eq i32 %bf.clear, 63
  br i1 %cmp114, label %if.then116, label %return

if.then116:                                       ; preds = %sw.bb113
  %fld120 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx122 = bitcast [1 x %union.rtunion_def]* %fld120 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx122, align 8, !tbaa !6
  %call123 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %19, %struct.rtx_def* %old, %struct.rtx_def* %new)
  %20 = load %struct.rtx_def** %rtx122, align 8, !tbaa !6
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load127 = load i32* %21, align 8
  %bf.lshr128 = lshr i32 %bf.load127, 16
  %bf.clear129 = and i32 %bf.lshr128, 255
  %arrayidx131 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx131 to i32*
  %22 = load i32* %rtuint, align 4, !tbaa !16
  %call132 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear2, %struct.rtx_def* %call123, i32 %bf.clear129, i32 %22)
  %tobool = icmp eq %struct.rtx_def* %call132, null
  %x.call132 = select i1 %tobool, %struct.rtx_def* %x, %struct.rtx_def* %call132
  ret %struct.rtx_def* %x.call132

sw.default:                                       ; preds = %if.end
  %cmp138 = icmp eq i32 %bf.clear, 66
  br i1 %cmp138, label %if.then140, label %return

if.then140:                                       ; preds = %sw.default
  %arrayidx142 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx143, align 8, !tbaa !6
  %call144 = tail call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %23, %struct.rtx_def* %old, %struct.rtx_def* %new)
  %call145 = tail call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %x, %struct.rtx_def* %call144) #2
  ret %struct.rtx_def* %call145

return:                                           ; preds = %if.end.i211, %cond.end102, %if.end4.i, %cond.end79, %if.end15.i, %if.then10.i, %if.end.i223, %if.end.i, %cond.end, %sw.default, %sw.bb113, %entry
  %retval.0 = phi %struct.rtx_def* [ %new, %entry ], [ %x, %sw.bb113 ], [ %x, %sw.default ], [ %call1.i, %if.end.i ], [ %call.i, %cond.end ], [ %call16.i, %if.end15.i ], [ %call2.i, %if.end.i223 ], [ %call11.i, %if.then10.i ], [ %call5.i, %if.end4.i ], [ %call.i213, %cond.end79 ], [ %call1.i210, %if.end.i211 ], [ %call.i208, %cond.end102 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_gen_subreg(i32 %outermode, %struct.rtx_def* %op, i32 %innermode, i32 %byte) #0 {
entry:
  %cmp = icmp eq i32 %innermode, 0
  %cmp1 = icmp eq i32 %outermode, 0
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i32 %innermode, 51
  %or.cond43 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq i32 %outermode, 51
  %or.cond44 = or i1 %or.cond43, %cmp5
  br i1 %or.cond44, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 2755, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.simplify_gen_subreg, i64 0, i64 0)) #4
  unreachable

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %op, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp6 = icmp eq i32 %bf.clear, %innermode
  %cmp10 = icmp eq i32 %bf.clear, 0
  %or.cond63 = or i1 %cmp6, %cmp10
  br i1 %or.cond63, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 2759, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.simplify_gen_subreg, i64 0, i64 0)) #4
  unreachable

if.end12:                                         ; preds = %if.end
  %idxprom = sext i32 %outermode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %1 to i32
  %rem = urem i32 %byte, %conv
  %tobool = icmp eq i32 %rem, 0
  br i1 %tobool, label %lor.lhs.false13, label %if.then19

lor.lhs.false13:                                  ; preds = %if.end12
  %idxprom14 = sext i32 %innermode to i64
  %arrayidx15 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom14
  %2 = load i8* %arrayidx15, align 1, !tbaa !1
  %conv16 = zext i8 %2 to i32
  %cmp17 = icmp ugt i32 %conv16, %byte
  br i1 %cmp17, label %if.end20, label %if.then19

if.then19:                                        ; preds = %lor.lhs.false13, %if.end12
  tail call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 2763, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.simplify_gen_subreg, i64 0, i64 0)) #4
  unreachable

if.end20:                                         ; preds = %lor.lhs.false13
  %bf.clear22 = and i32 %bf.load, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 71
  br i1 %cmp23, label %return, label %if.end26

if.end26:                                         ; preds = %if.end20
  %call = tail call %struct.rtx_def* @simplify_subreg(i32 %outermode, %struct.rtx_def* %op, i32 %innermode, i32 %byte)
  %tobool27 = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool27, label %if.end29, label %return

if.end29:                                         ; preds = %if.end26
  %bf.load30 = load i32* %0, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 63
  %bf.clear37 = and i32 %bf.load30, 16711680
  %cmp38 = icmp eq i32 %bf.clear37, 0
  %or.cond64 = or i1 %cmp32, %cmp38
  br i1 %or.cond64, label %return, label %if.end41

if.end41:                                         ; preds = %if.end29
  %call42 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %outermode, %struct.rtx_def* %op, i32 %byte) #2
  br label %return

return:                                           ; preds = %if.end29, %if.end26, %if.end20, %if.end41
  %retval.0 = phi %struct.rtx_def* [ %call42, %if.end41 ], [ null, %if.end20 ], [ %call, %if.end26 ], [ null, %if.end29 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @ereal_from_int(%struct.realvaluetype*, i64, i64, i32) #1

declare void @real_value_truncate(%struct.realvaluetype* sret, i32, %struct.realvaluetype* byval align 8) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8, i32) #1

declare void @ereal_from_uint(%struct.realvaluetype*, i64, i64, i32) #1

declare i32 @exact_log2_wide(i64) #1

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

declare i64 @trunc_int_for_mode(i64, i32) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare i32 @neg_double(i64, i64, i64*, i64*) #1

declare %struct.rtx_def* @immed_double_const(i64, i64, i32) #1

declare i32 @do_float_handler(void (i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @simplify_unary_real(i8* nocapture %p) #0 {
entry:
  %d = alloca %struct.realvaluetype, align 8
  %tmp = alloca %struct.realvaluetype, align 8
  %tmp13 = alloca %struct.realvaluetype, align 8
  %tmp16 = alloca %struct.realvaluetype, align 8
  %tmp18 = alloca %struct.realvaluetype, align 8
  %tmp20 = alloca %struct.realvaluetype, align 8
  %operand = bitcast i8* %p to %struct.rtx_def**
  %0 = load %struct.rtx_def** %operand, align 8, !tbaa !26
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1, i32 0
  %u.sroa.0.0..sroa_cast = bitcast i64* %rtwint to i8*
  %u.sroa.0.0..sroa_cast27 = bitcast %struct.realvaluetype* %d to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast27, i8* %u.sroa.0.0..sroa_cast, i64 24, i32 8, i1 false)
  %1 = getelementptr inbounds i8* %p, i64 24
  %2 = load i8* %1, align 1, !tbaa !30, !range !37
  %tobool = icmp eq i8 %2, 0
  %code = getelementptr inbounds i8* %p, i64 20
  %3 = bitcast i8* %code to i32*
  %4 = load i32* %3, align 4, !tbaa !29
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  switch i32 %4, label %sw.default [
    i32 126, label %sw.bb
    i32 128, label %sw.bb2
  ]

sw.bb:                                            ; preds = %if.then
  %call = call i64 @efixi(%struct.realvaluetype* byval align 8 %d) #2
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.then
  %call3 = call i64 @efixui(%struct.realvaluetype* byval align 8 %d) #2
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 380, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.simplify_unary_real, i64 0, i64 0)) #4
  unreachable

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb
  %i.0 = phi i64 [ %call3, %sw.bb2 ], [ %call, %sw.bb ]
  %mode = getelementptr inbounds i8* %p, i64 16
  %5 = bitcast i8* %mode to i32*
  %6 = load i32* %5, align 4, !tbaa !28
  %call4 = call i64 @trunc_int_for_mode(i64 %i.0, i32 %6) #2
  %call5 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call4) #2
  %result = getelementptr inbounds i8* %p, i64 8
  %7 = bitcast i8* %result to %struct.rtx_def**
  store %struct.rtx_def* %call5, %struct.rtx_def** %7, align 8, !tbaa !31
  br label %if.end

if.else:                                          ; preds = %entry
  switch i32 %4, label %sw.default21 [
    i32 130, label %sw.bb7
    i32 129, label %sw.bb9
    i32 77, label %sw.bb12
    i32 124, label %sw.bb14
    i32 123, label %sw.epilog22
    i32 126, label %sw.bb17
    i32 128, label %sw.bb19
  ]

sw.bb7:                                           ; preds = %if.else
  %result8 = getelementptr inbounds i8* %p, i64 8
  %8 = bitcast i8* %result8 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %8, align 8, !tbaa !31
  br label %if.end

sw.bb9:                                           ; preds = %if.else
  %call10 = call i32 @target_negative(%struct.realvaluetype* byval align 8 %d) #2
  %tobool11 = icmp eq i32 %call10, 0
  br i1 %tobool11, label %sw.epilog22, label %cond.true

cond.true:                                        ; preds = %sw.bb9
  call void @ereal_negate(%struct.realvaluetype* sret %tmp, %struct.realvaluetype* byval align 8 %d) #2
  %9 = bitcast %struct.realvaluetype* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast27, i8* %9, i64 24, i32 8, i1 false), !tbaa.struct !25
  br label %sw.epilog22

sw.bb12:                                          ; preds = %if.else
  call void @ereal_negate(%struct.realvaluetype* sret %tmp13, %struct.realvaluetype* byval align 8 %d) #2
  %10 = bitcast %struct.realvaluetype* %tmp13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast27, i8* %10, i64 24, i32 8, i1 false), !tbaa.struct !25
  br label %sw.epilog22

sw.bb14:                                          ; preds = %if.else
  %mode15 = getelementptr inbounds i8* %p, i64 16
  %11 = bitcast i8* %mode15 to i32*
  %12 = load i32* %11, align 4, !tbaa !28
  call void @real_value_truncate(%struct.realvaluetype* sret %tmp16, i32 %12, %struct.realvaluetype* byval align 8 %d) #2
  %13 = bitcast %struct.realvaluetype* %tmp16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast27, i8* %13, i64 24, i32 8, i1 false), !tbaa.struct !25
  br label %sw.epilog22

sw.bb17:                                          ; preds = %if.else
  call void @etrunci(%struct.realvaluetype* sret %tmp18, %struct.realvaluetype* byval align 8 %d) #2
  %14 = bitcast %struct.realvaluetype* %tmp18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast27, i8* %14, i64 24, i32 8, i1 false), !tbaa.struct !25
  br label %sw.epilog22

sw.bb19:                                          ; preds = %if.else
  call void @etruncui(%struct.realvaluetype* sret %tmp20, %struct.realvaluetype* byval align 8 %d) #2
  %15 = bitcast %struct.realvaluetype* %tmp20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast27, i8* %15, i64 24, i32 8, i1 false), !tbaa.struct !25
  br label %sw.epilog22

sw.default21:                                     ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i32 400, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.simplify_unary_real, i64 0, i64 0)) #4
  unreachable

sw.epilog22:                                      ; preds = %sw.bb9, %cond.true, %sw.bb19, %sw.bb17, %if.else, %sw.bb14, %sw.bb12
  %mode23 = getelementptr inbounds i8* %p, i64 16
  %16 = bitcast i8* %mode23 to i32*
  %17 = load i32* %16, align 4, !tbaa !28
  %call24 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %d, i32 %17) #2
  %result25 = getelementptr inbounds i8* %p, i64 8
  %18 = bitcast i8* %result25 to %struct.rtx_def**
  store %struct.rtx_def* %call24, %struct.rtx_def** %18, align 8, !tbaa !31
  br label %if.end

if.end:                                           ; preds = %sw.bb7, %sw.epilog22, %sw.epilog
  ret void
}

declare i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @simplify_binary_real(i8* nocapture %p) #0 {
entry:
  %f0 = alloca %struct.realvaluetype, align 8
  %f1 = alloca %struct.realvaluetype, align 8
  %value = alloca %struct.realvaluetype, align 8
  %tmp = alloca %struct.realvaluetype, align 8
  %tmp9 = alloca %struct.realvaluetype, align 8
  %tmp11 = alloca %struct.realvaluetype, align 8
  %trueop0 = bitcast i8* %p to %struct.rtx_def**
  %0 = load %struct.rtx_def** %trueop0, align 8, !tbaa !8
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1, i32 0
  %u.sroa.0.0..sroa_cast = bitcast i64* %rtwint to i8*
  %u.sroa.0.0..sroa_cast18 = bitcast %struct.realvaluetype* %f0 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast18, i8* %u.sroa.0.0..sroa_cast, i64 24, i32 8, i1 false)
  %trueop1 = getelementptr inbounds i8* %p, i64 8
  %1 = bitcast i8* %trueop1 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %1, align 8, !tbaa !10
  %rtwint5 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 1, i32 0
  %u2.sroa.0.0..sroa_cast = bitcast i64* %rtwint5 to i8*
  %u2.sroa.0.0..sroa_cast15 = bitcast %struct.realvaluetype* %f1 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %u2.sroa.0.0..sroa_cast15, i8* %u2.sroa.0.0..sroa_cast, i64 24, i32 8, i1 false)
  %mode = getelementptr inbounds i8* %p, i64 28
  %3 = bitcast i8* %mode to i32*
  %4 = load i32* %3, align 4, !tbaa !11
  call void @real_value_truncate(%struct.realvaluetype* sret %tmp, i32 %4, %struct.realvaluetype* byval align 8 %f0) #2
  %5 = bitcast %struct.realvaluetype* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast18, i8* %5, i64 24, i32 8, i1 false), !tbaa.struct !25
  %6 = load i32* %3, align 4, !tbaa !11
  call void @real_value_truncate(%struct.realvaluetype* sret %tmp9, i32 %6, %struct.realvaluetype* byval align 8 %f1) #2
  %7 = bitcast %struct.realvaluetype* %tmp9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %u2.sroa.0.0..sroa_cast15, i8* %7, i64 24, i32 8, i1 false), !tbaa.struct !25
  %code = getelementptr inbounds i8* %p, i64 24
  %8 = bitcast i8* %code to i32*
  %9 = load i32* %8, align 4, !tbaa !12
  %call = call i32 @rtx_to_tree_code(i32 %9) #2
  call void @earith(%struct.realvaluetype* %value, i32 %call, %struct.realvaluetype* %f0, %struct.realvaluetype* %f1) #2
  %10 = load i32* %3, align 4, !tbaa !11
  call void @real_value_truncate(%struct.realvaluetype* sret %tmp11, i32 %10, %struct.realvaluetype* byval align 8 %value) #2
  %11 = bitcast %struct.realvaluetype* %value to i8*
  %12 = bitcast %struct.realvaluetype* %tmp11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 24, i32 8, i1 false), !tbaa.struct !25
  %13 = load i32* %3, align 4, !tbaa !11
  %call13 = call %struct.rtx_def* @immed_real_const_1(%struct.realvaluetype* byval align 8 %tmp11, i32 %13) #2
  %result = getelementptr inbounds i8* %p, i64 16
  %14 = bitcast i8* %result to %struct.rtx_def**
  store %struct.rtx_def* %call13, %struct.rtx_def** %14, align 8, !tbaa !13
  ret void
}

declare i32 @add_double(i64, i64, i64, i64, i64*, i64*) #1

declare i32 @mul_double(i64, i64, i64, i64, i64*, i64*) #1

declare void @rshift_double(i64, i64, i64, i32, i64*, i64*, i32) #1

declare void @lshift_double(i64, i64, i64, i32, i64*, i64*, i32) #1

declare void @lrotate_double(i64, i64, i64, i32, i64*, i64*) #1

declare void @rrotate_double(i64, i64, i64, i32, i64*, i64*) #1

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal void @simplify_binary_is2orm1(i8* nocapture %p) #0 {
entry:
  %d = alloca %struct.realvaluetype, align 8
  %value = bitcast i8* %p to %struct.rtx_def**
  %0 = load %struct.rtx_def** %value, align 8, !tbaa !18
  %rtwint = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1, i32 0
  %u.sroa.0.0..sroa_cast = bitcast i64* %rtwint to i8*
  %u.sroa.0.0..sroa_cast6 = bitcast %struct.realvaluetype* %d to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast6, i8* %u.sroa.0.0..sroa_cast, i64 24, i32 8, i1 false)
  %call = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %d, %struct.realvaluetype* byval align 8 @dconst2) #2
  %cmp = icmp eq i32 %call, 0
  %1 = getelementptr inbounds i8* %p, i64 8
  %frombool = zext i1 %cmp to i8
  store i8 %frombool, i8* %1, align 1, !tbaa !38
  %call2 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %d, %struct.realvaluetype* byval align 8 @dconstm1) #2
  %cmp3 = icmp eq i32 %call2, 0
  %2 = getelementptr inbounds i8* %p, i64 9
  %frombool4 = zext i1 %cmp3 to i8
  store i8 %frombool4, i8* %2, align 1, !tbaa !39
  ret void
}

declare %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_lowpart_common(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_lowpart_SUBREG(i32, %struct.rtx_def*) #1

declare i32 @ereal_cmp(%struct.realvaluetype* byval align 8, %struct.realvaluetype* byval align 8) #1

declare void @earith(%struct.realvaluetype*, i32, %struct.realvaluetype*, %struct.realvaluetype*) #1

declare i32 @rtx_to_tree_code(i32) #1

declare i32 @signed_condition(i32) #1

; Function Attrs: nounwind uwtable
define internal void @check_fold_consts(i8* nocapture %data) #0 {
entry:
  %d0 = alloca %struct.realvaluetype, align 8
  %d1 = alloca %struct.realvaluetype, align 8
  %unordered = getelementptr inbounds i8* %data, i64 28
  %0 = bitcast i8* %unordered to i32*
  store i32 1, i32* %0, align 4, !tbaa !35
  %op0 = bitcast i8* %data to %struct.rtx_def**
  %1 = load %struct.rtx_def** %op0, align 8, !tbaa !32
  %rtwint = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1, i32 0
  %u.sroa.0.0..sroa_cast = bitcast i64* %rtwint to i8*
  %u.sroa.0.0..sroa_cast22 = bitcast %struct.realvaluetype* %d0 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %u.sroa.0.0..sroa_cast22, i8* %u.sroa.0.0..sroa_cast, i64 24, i32 8, i1 false)
  %op1 = getelementptr inbounds i8* %data, i64 8
  %2 = bitcast i8* %op1 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %2, align 8, !tbaa !34
  %rtwint5 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 1, i32 0
  %u2.sroa.0.0..sroa_cast = bitcast i64* %rtwint5 to i8*
  %u2.sroa.0.0..sroa_cast19 = bitcast %struct.realvaluetype* %d1 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %u2.sroa.0.0..sroa_cast19, i8* %u2.sroa.0.0..sroa_cast, i64 24, i32 8, i1 false)
  %call = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %d0) #2
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %entry
  %call8 = call i32 @target_isnan(%struct.realvaluetype* byval align 8 %d1) #2
  %tobool9 = icmp eq i32 %call8, 0
  br i1 %tobool9, label %if.end, label %return

if.end:                                           ; preds = %lor.lhs.false
  %call10 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %d0, %struct.realvaluetype* byval align 8 %d1) #2
  %cmp = icmp eq i32 %call10, 0
  %conv = zext i1 %cmp to i32
  %equal = getelementptr inbounds i8* %data, i64 16
  %4 = bitcast i8* %equal to i32*
  store i32 %conv, i32* %4, align 4, !tbaa !40
  %call11 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %d0, %struct.realvaluetype* byval align 8 %d1) #2
  %cmp12 = icmp eq i32 %call11, -1
  %conv13 = zext i1 %cmp12 to i32
  %op0lt = getelementptr inbounds i8* %data, i64 20
  %5 = bitcast i8* %op0lt to i32*
  store i32 %conv13, i32* %5, align 4, !tbaa !41
  %call14 = call i32 @ereal_cmp(%struct.realvaluetype* byval align 8 %d1, %struct.realvaluetype* byval align 8 %d0) #2
  %cmp15 = icmp eq i32 %call14, -1
  %conv16 = zext i1 %cmp15 to i32
  %op1lt = getelementptr inbounds i8* %data, i64 24
  %6 = bitcast i8* %op1lt to i32*
  store i32 %conv16, i32* %6, align 4, !tbaa !36
  store i32 0, i32* %0, align 4, !tbaa !35
  br label %return

return:                                           ; preds = %lor.lhs.false, %entry, %if.end
  ret void
}

declare i32 @subreg_lowpart_offset(i32, i32) #1

declare %struct.rtx_def* @gen_lowpart_if_possible(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @constant_subword(%struct.rtx_def*, i32, i32) #1

declare i32 @mode_for_size(i32, i32, i32) #1

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

declare i32 @subreg_hard_regno(%struct.rtx_def*, i32) #1

declare i32 @ix86_hard_regno_mode_ok(i32, i32) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare i32 @mode_dependent_address_p(%struct.rtx_def*) #1

declare i32 @have_insn_for(i32, i32) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @simplify_rtx(%struct.rtx_def* nocapture %x) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %idxprom140 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom140
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = sext i8 %1 to i32
  switch i32 %conv, label %return [
    i32 49, label %sw.bb
    i32 99, label %sw.bb10
    i32 50, label %entry.sw.bb37_crit_edge
    i32 51, label %sw.bb45
    i32 98, label %sw.bb45
    i32 60, label %sw.bb62
    i32 120, label %sw.bb89
  ]

entry.sw.bb37_crit_edge:                          ; preds = %entry
  %fld38.pre = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx40.pre = bitcast [1 x %union.rtunion_def]* %fld38.pre to %struct.rtx_def**
  %arrayidx42.pre = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx43.pre = bitcast %union.rtunion_def* %arrayidx42.pre to %struct.rtx_def**
  br label %sw.bb37

sw.bb:                                            ; preds = %entry
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load7 = load i32* %3, align 8
  %bf.lshr8 = lshr i32 %bf.load7, 16
  %bf.clear9 = and i32 %bf.lshr8, 255
  %call = tail call %struct.rtx_def* @simplify_unary_operation(i32 %bf.clear, i32 %bf.clear2, %struct.rtx_def* %2, i32 %bf.clear9)
  br label %return

sw.bb10:                                          ; preds = %entry
  %fld11 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx13 = bitcast [1 x %union.rtunion_def]* %fld11 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx13, align 8, !tbaa !6
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx16, align 8, !tbaa !6
  %call17 = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %4, %struct.rtx_def* %5) #2
  %tobool = icmp eq i32 %call17, 0
  br i1 %tobool, label %sw.bb37, label %if.then

if.then:                                          ; preds = %sw.bb10
  %6 = load %struct.rtx_def** %rtx13, align 8, !tbaa !6
  %7 = load %struct.rtx_def** %rtx16, align 8, !tbaa !6
  %8 = getelementptr inbounds [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %7 to i64
  store i64 %.c, i64* %8, align 8, !tbaa !6
  %9 = getelementptr inbounds %union.rtunion_def* %arrayidx15, i64 0, i32 0
  %.c141 = ptrtoint %struct.rtx_def* %6 to i64
  store i64 %.c141, i64* %9, align 8, !tbaa !6
  %call36 = tail call %struct.rtx_def* @simplify_binary_operation(i32 %bf.clear, i32 %bf.clear2, %struct.rtx_def* %7, %struct.rtx_def* %6)
  br label %return

sw.bb37:                                          ; preds = %entry.sw.bb37_crit_edge, %sw.bb10
  %rtx43.pre-phi = phi %struct.rtx_def** [ %rtx43.pre, %entry.sw.bb37_crit_edge ], [ %rtx16, %sw.bb10 ]
  %rtx40.pre-phi = phi %struct.rtx_def** [ %rtx40.pre, %entry.sw.bb37_crit_edge ], [ %rtx13, %sw.bb10 ]
  %10 = load %struct.rtx_def** %rtx40.pre-phi, align 8, !tbaa !6
  %11 = load %struct.rtx_def** %rtx43.pre-phi, align 8, !tbaa !6
  %call44 = tail call %struct.rtx_def* @simplify_binary_operation(i32 %bf.clear, i32 %bf.clear2, %struct.rtx_def* %10, %struct.rtx_def* %11)
  br label %return

sw.bb45:                                          ; preds = %entry, %entry
  %fld46 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx48 = bitcast [1 x %union.rtunion_def]* %fld46 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx48, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load49 = load i32* %13, align 8
  %bf.lshr50 = lshr i32 %bf.load49, 16
  %bf.clear51 = and i32 %bf.lshr50, 255
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx57, align 8, !tbaa !6
  %arrayidx59 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 2
  %rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx60, align 8, !tbaa !6
  %call61 = tail call %struct.rtx_def* @simplify_ternary_operation(i32 %bf.clear, i32 %bf.clear2, i32 %bf.clear51, %struct.rtx_def* %12, %struct.rtx_def* %14, %struct.rtx_def* %15)
  br label %return

sw.bb62:                                          ; preds = %entry
  %fld63 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx65 = bitcast [1 x %union.rtunion_def]* %fld63 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx65, align 8, !tbaa !6
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load66 = load i32* %17, align 8
  %bf.clear68 = and i32 %bf.load66, 16711680
  %cmp = icmp eq i32 %bf.clear68, 0
  %arrayidx77 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx78, align 8, !tbaa !6
  br i1 %cmp, label %cond.false, label %cond.end

cond.false:                                       ; preds = %sw.bb62
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load79 = load i32* %19, align 8
  br label %cond.end

cond.end:                                         ; preds = %sw.bb62, %cond.false
  %bf.load73.sink = phi i32 [ %bf.load79, %cond.false ], [ %bf.load66, %sw.bb62 ]
  %bf.lshr74 = lshr i32 %bf.load73.sink, 16
  %bf.clear75 = and i32 %bf.lshr74, 255
  %call88 = tail call %struct.rtx_def* @simplify_relational_operation(i32 %bf.clear, i32 %bf.clear75, %struct.rtx_def* %16, %struct.rtx_def* %18)
  br label %return

sw.bb89:                                          ; preds = %entry
  %cmp90 = icmp eq i32 %bf.clear, 63
  br i1 %cmp90, label %if.then92, label %return

if.then92:                                        ; preds = %sw.bb89
  %fld93 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx95 = bitcast [1 x %union.rtunion_def]* %fld93 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx95, align 8, !tbaa !6
  %21 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 0
  %bf.load99 = load i32* %21, align 8
  %bf.lshr100 = lshr i32 %bf.load99, 16
  %bf.clear101 = and i32 %bf.lshr100, 255
  %arrayidx103 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx103 to i32*
  %22 = load i32* %rtuint, align 4, !tbaa !16
  %call104 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear2, %struct.rtx_def* %20, i32 %bf.clear101, i32 %22)
  br label %return

return:                                           ; preds = %entry, %sw.bb89, %if.then92, %cond.end, %sw.bb45, %sw.bb37, %if.then, %sw.bb
  %retval.0 = phi %struct.rtx_def* [ %call104, %if.then92 ], [ %call88, %cond.end ], [ %call61, %sw.bb45 ], [ %call44, %sw.bb37 ], [ %call36, %if.then ], [ %call, %sw.bb ], [ null, %sw.bb89 ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @target_isnan(%struct.realvaluetype* byval align 8) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare void @specqsort(i8*, i32, i32, i32 (...)*) #1

; Function Attrs: nounwind uwtable
define internal i32 @simplify_plus_minus_op_data_cmp(i8* nocapture readonly %p1, i8* nocapture readonly %p2) #0 {
entry:
  %op = bitcast i8* %p2 to %struct.rtx_def**
  %0 = load %struct.rtx_def** %op, align 8, !tbaa !21
  %call = tail call i32 @commutative_operand_precedence(%struct.rtx_def* %0) #2
  %op1 = bitcast i8* %p1 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %op1, align 8, !tbaa !21
  %call2 = tail call i32 @commutative_operand_precedence(%struct.rtx_def* %1) #2
  %sub = sub nsw i32 %call, %call2
  ret i32 %sub
}

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

declare i32 @commutative_operand_precedence(%struct.rtx_def*) #1

declare i64 @efixi(%struct.realvaluetype* byval align 8) #1

declare i64 @efixui(%struct.realvaluetype* byval align 8) #1

declare i32 @target_negative(%struct.realvaluetype* byval align 8) #1

declare void @ereal_negate(%struct.realvaluetype* sret, %struct.realvaluetype* byval align 8) #1

declare void @etrunci(%struct.realvaluetype* sret, %struct.realvaluetype* byval align 8) #1

declare void @etruncui(%struct.realvaluetype* sret, %struct.realvaluetype* byval align 8) #1

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"omnipotent char", metadata !3, i64 0}
!3 = metadata !{metadata !"Simple C/C++ TBAA"}
!4 = metadata !{metadata !5, metadata !5, i64 0}
!5 = metadata !{metadata !"short", metadata !2, i64 0}
!6 = metadata !{metadata !7, metadata !7, i64 0}
!7 = metadata !{metadata !"any pointer", metadata !2, i64 0}
!8 = metadata !{metadata !9, metadata !7, i64 0}
!9 = metadata !{metadata !"simplify_binary_real_args", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !2, i64 24, metadata !2, i64 28}
!10 = metadata !{metadata !9, metadata !7, i64 8}
!11 = metadata !{metadata !9, metadata !2, i64 28}
!12 = metadata !{metadata !9, metadata !2, i64 24}
!13 = metadata !{metadata !9, metadata !7, i64 16}
!14 = metadata !{metadata !15, metadata !15, i64 0}
!15 = metadata !{metadata !"long long", metadata !2, i64 0}
!16 = metadata !{metadata !17, metadata !17, i64 0}
!17 = metadata !{metadata !"int", metadata !2, i64 0}
!18 = metadata !{metadata !19, metadata !7, i64 0}
!19 = metadata !{metadata !"simplify_binary_is2orm1_args", metadata !7, i64 0, metadata !20, i64 8, metadata !20, i64 9}
!20 = metadata !{metadata !"_Bool", metadata !2, i64 0}
!21 = metadata !{metadata !22, metadata !7, i64 0}
!22 = metadata !{metadata !"simplify_plus_minus_op_data", metadata !7, i64 0, metadata !17, i64 8}
!23 = metadata !{metadata !22, metadata !17, i64 8}
!24 = metadata !{i64 0, i64 8, metadata !6, i64 8, i64 4, metadata !16}
!25 = metadata !{i64 0, i64 24, metadata !1}
!26 = metadata !{metadata !27, metadata !7, i64 0}
!27 = metadata !{metadata !"simplify_unary_real_args", metadata !7, i64 0, metadata !7, i64 8, metadata !2, i64 16, metadata !2, i64 20, metadata !20, i64 24}
!28 = metadata !{metadata !27, metadata !2, i64 16}
!29 = metadata !{metadata !27, metadata !2, i64 20}
!30 = metadata !{metadata !27, metadata !20, i64 24}
!31 = metadata !{metadata !27, metadata !7, i64 8}
!32 = metadata !{metadata !33, metadata !7, i64 0}
!33 = metadata !{metadata !"cfc_args", metadata !7, i64 0, metadata !7, i64 8, metadata !17, i64 16, metadata !17, i64 20, metadata !17, i64 24, metadata !17, i64 28}
!34 = metadata !{metadata !33, metadata !7, i64 8}
!35 = metadata !{metadata !33, metadata !17, i64 28}
!36 = metadata !{metadata !33, metadata !17, i64 24}
!37 = metadata !{i8 0, i8 2}
!38 = metadata !{metadata !19, metadata !20, i64 8}
!39 = metadata !{metadata !19, metadata !20, i64 9}
!40 = metadata !{metadata !33, metadata !17, i64 16}
!41 = metadata !{metadata !33, metadata !17, i64 20}
