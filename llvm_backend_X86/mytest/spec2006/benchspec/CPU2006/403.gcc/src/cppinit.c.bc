; ModuleID = 'cppinit.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%struct.named_op = type { i8*, i32, i32 }
%struct.default_include = type { i8*, i8*, i32, i32 }
%struct.lang_flags = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.cpp_reader = type { %struct.cpp_buffer*, %struct.lexer_state, %struct.line_maps, %struct.line_map*, i32, i32, %struct._cpp_buff*, %struct._cpp_buff*, %struct._cpp_buff*, %struct.cpp_context, %struct.cpp_context*, %struct.directive*, %struct.cpp_hashnode*, %struct.cpp_hashnode*, i8, %struct.cpp_token*, %struct.tokenrun, %struct.tokenrun*, i32, i32, i32, i32, i32, i8*, i32, %struct.splay_tree_s*, i32, %struct.cpp_token, %struct.cpp_token, %struct.cpp_token, %struct.cpp_token, %struct.deps*, %struct.obstack, %struct.obstack, %struct.pragma_entry*, %struct.cpp_callbacks, %struct.ht*, %struct.cpp_options, %struct.spec_nodes, i8, i8 }
%struct.cpp_buffer = type { i8*, i8*, i8*, i8*, %struct.cpp_buffer*, i8*, %struct.include_file*, %struct.if_stack*, i32, i8, i8*, i8, i8, i8, i8, %struct.search_path }
%struct.include_file = type opaque
%struct.if_stack = type opaque
%struct.search_path = type { %struct.search_path*, i8*, i32, i64, i64, i32, %struct.file_name_map* }
%struct.file_name_map = type opaque
%struct.lexer_state = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.line_maps = type { %struct.line_map*, i32, i32, i32, i32, i8 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8 }
%struct._cpp_buff = type { %struct._cpp_buff*, i8*, i8*, i8* }
%struct.cpp_context = type { %struct.cpp_context*, %struct.cpp_context*, %union.utoken, %union.utoken, %struct._cpp_buff*, %struct.cpp_hashnode*, i8 }
%union.utoken = type { %struct.cpp_token* }
%struct.directive = type opaque
%struct.cpp_hashnode = type { %struct.ht_identifier, i16, i8, i8, i8, i8, %union.anon.0 }
%struct.ht_identifier = type { i32, i8* }
%union.anon.0 = type { %struct.cpp_macro* }
%struct.cpp_macro = type opaque
%struct.tokenrun = type { %struct.tokenrun*, %struct.tokenrun*, %struct.cpp_token*, %struct.cpp_token* }
%struct.splay_tree_s = type opaque
%struct.cpp_token = type { i32, i16, i8, i8, %union.anon }
%union.anon = type { %struct.cpp_string }
%struct.cpp_string = type { i32, i8* }
%struct.deps = type opaque
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.pragma_entry = type opaque
%struct.cpp_callbacks = type { void (%struct.cpp_reader*, %struct.cpp_token*, i32)*, void (%struct.cpp_reader*, %struct.line_map*)*, void (%struct.cpp_reader*, i32, i8*, %struct.cpp_token*)*, void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)*, void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)*, void (%struct.cpp_reader*, i32, %struct.cpp_string*)*, void (%struct.cpp_reader*, i32)* }
%struct.ht = type { %struct.obstack, %struct.ht_identifier**, %struct.ht_identifier* (%struct.ht*)*, i32, i32, %struct.cpp_reader*, i32, i32 }
%struct.cpp_options = type { i8*, i8*, i32, %struct.cpp_pending*, i8*, %struct.search_path*, %struct.search_path*, %struct.file_name_map_list*, i8*, i32, i8*, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.cpp_pending = type { %struct.pending_option*, %struct.pending_option*, %struct.search_path*, %struct.search_path*, %struct.search_path*, %struct.search_path*, %struct.search_path*, %struct.search_path*, %struct.search_path*, %struct.search_path*, %struct.pending_option*, %struct.pending_option*, %struct.pending_option*, %struct.pending_option* }
%struct.pending_option = type { %struct.pending_option*, i8*, void (%struct.cpp_reader*, i8*)* }
%struct.file_name_map_list = type opaque
%struct.spec_nodes = type { %struct.cpp_hashnode*, %struct.cpp_hashnode*, %struct.cpp_hashnode*, %struct.cpp_hashnode*, %struct.cpp_hashnode* }
%struct.builtin = type { i8*, i8*, i8, i16, i16 }
%struct.cl_option = type { i8*, i8*, i64, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }

@_cpp_trigraph_map = constant [256 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00|\00\00\00\00\00^[]\00\00\00~\00\5C\00\00\00\00\00\00\00\00\00\00\00\00{#}align 16
@stderr = external constant %struct._IO_FILE*
@.str = private unnamed_addr constant [36 x i8] c"#include \22...\22 search starts here:\0A\00", align 1
@.str1 = private unnamed_addr constant [36 x i8] c"#include <...> search starts here:\0A\00", align 1
@.str2 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@.str3 = private unnamed_addr constant [21 x i8] c"End of search list.\0A\00", align 1
@.str4 = private unnamed_addr constant [11 x i8] c"<built-in>\00", align 1
@.str5 = private unnamed_addr constant [15 x i8] c"<command line>\00", align 1
@.str6 = private unnamed_addr constant [50 x i8] c"too many filenames. Type %s --help for usage info\00", align 1
@progname = external global i8*
@.str7 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str9 = private unnamed_addr constant [32 x i8] c"output filename specified twice\00", align 1
@.str10 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str11 = private unnamed_addr constant [20 x i8] c"-I- specified twice\00", align 1
@cpp_GCC_INCLUDE_DIR_len = external constant i64
@cpp_GCC_INCLUDE_DIR = external constant [0 x i8]
@.str12 = private unnamed_addr constant [6 x i8] c"-Wall\00", align 1
@.str13 = private unnamed_addr constant [14 x i8] c"-Wtraditional\00", align 1
@.str14 = private unnamed_addr constant [12 x i8] c"-Wtrigraphs\00", align 1
@.str15 = private unnamed_addr constant [10 x i8] c"-Wcomment\00", align 1
@.str16 = private unnamed_addr constant [11 x i8] c"-Wcomments\00", align 1
@.str17 = private unnamed_addr constant [8 x i8] c"-Wundef\00", align 1
@.str18 = private unnamed_addr constant [9 x i8] c"-Wimport\00", align 1
@.str19 = private unnamed_addr constant [8 x i8] c"-Werror\00", align 1
@.str20 = private unnamed_addr constant [17 x i8] c"-Wsystem-headers\00", align 1
@.str21 = private unnamed_addr constant [17 x i8] c"-Wno-traditional\00", align 1
@.str22 = private unnamed_addr constant [15 x i8] c"-Wno-trigraphs\00", align 1
@.str23 = private unnamed_addr constant [13 x i8] c"-Wno-comment\00", align 1
@.str24 = private unnamed_addr constant [14 x i8] c"-Wno-comments\00", align 1
@.str25 = private unnamed_addr constant [11 x i8] c"-Wno-undef\00", align 1
@.str26 = private unnamed_addr constant [12 x i8] c"-Wno-import\00", align 1
@.str27 = private unnamed_addr constant [11 x i8] c"-Wno-error\00", align 1
@.str28 = private unnamed_addr constant [20 x i8] c"-Wno-system-headers\00", align 1
@.str29 = private unnamed_addr constant [28 x i8] c"GNU CPP version %s (cpplib)\00", align 1
@version_string = external constant i8*
@.str30 = private unnamed_addr constant [20 x i8] c" (x86-64 Linux/ELF)\00", align 1
@.str31 = private unnamed_addr constant [47 x i8] c"you must additionally specify either -M or -MM\00", align 1
@.str32 = private unnamed_addr constant [459 x i8] c"Switches:\0A  -include <file>           Include the contents of <file> before other files\0A  -imacros <file>           Accept definition of macros in <file>\0A  -iprefix <path>           Specify <path> as a prefix for next two options\0A  -iwithprefix <dir>        Add <dir> to the end of the system include path\0A  -iwithprefixbefore <dir>  Add <dir> to the end of the main include path\0A  -isystem <dir>            Add <dir> to the start of the system include path\0A\00", align 1
@stdout = external constant %struct._IO_FILE*
@.str33 = private unnamed_addr constant [504 x i8] c"  -idirafter <dir>          Add <dir> to the end of the system include path\0A  -I <dir>                  Add <dir> to the end of the main include path\0A  -I-                       Fine-grained include path control; see info docs\0A  -nostdinc                 Do not search system include directories\0A                             (dirs specified with -isystem will still be used)\0A  -nostdinc++               Do not search system include directories for C++\0A  -o <file>                 Put output into <file>\0A\00", align 1
@.str34 = private unnamed_addr constant [332 x i8] c"  -pedantic                 Issue all warnings demanded by strict ISO C\0A  -pedantic-errors          Issue -pedantic warnings as errors instead\0A  -trigraphs                Support ISO C trigraphs\0A  -lang-c                   Assume that the input sources are in C\0A  -lang-c89                 Assume that the input sources are in C89\0A\00", align 1
@.str35 = private unnamed_addr constant [299 x i8] c"  -lang-c++                 Assume that the input sources are in C++\0A  -lang-objc                Assume that the input sources are in ObjectiveC\0A  -lang-objc++              Assume that the input sources are in ObjectiveC++\0A  -lang-asm                 Assume that the input sources are in assembler\0A\00", align 1
@.str36 = private unnamed_addr constant [499 x i8] c"  -std=<std name>           Specify the conformance standard; one of:\0A                            gnu89, gnu99, c89, c99, iso9899:1990,\0A                            iso9899:199409, iso9899:1999\0A  -+                        Allow parsing of C++ style features\0A  -w                        Inhibit warning messages\0A  -Wtrigraphs               Warn if trigraphs are encountered\0A  -Wno-trigraphs            Do not warn about trigraphs\0A  -Wcomment{s}              Warn if one comment starts inside another\0A\00", align 1
@.str37 = private unnamed_addr constant [406 x i8] c"  -Wno-comment{s}           Do not warn about comments\0A  -Wtraditional             Warn about features not present in traditional C\0A  -Wno-traditional          Do not warn about traditional C\0A  -Wundef                   Warn if an undefined macro is used by #if\0A  -Wno-undef                Do not warn about testing undefined macros\0A  -Wimport                  Warn about the use of the #import directive\0A\00", align 1
@.str38 = private unnamed_addr constant [383 x i8] c"  -Wno-import               Do not warn about the use of #import\0A  -Werror                   Treat all warnings as errors\0A  -Wno-error                Do not treat warnings as errors\0A  -Wsystem-headers          Do not suppress warnings from system headers\0A  -Wno-system-headers       Suppress warnings from system headers\0A  -Wall                     Enable all preprocessor warnings\0A\00", align 1
@.str39 = private unnamed_addr constant [399 x i8] c"  -M                        Generate make dependencies\0A  -MM                       As -M, but ignore system header files\0A  -MD                       Generate make dependencies and compile\0A  -MMD                      As -MD, but ignore system header files\0A  -MF <file>                Write dependency output to the given file\0A  -MG                       Treat missing header file as generated files\0A\00", align 1
@.str40 = private unnamed_addr constant [156 x i8] c"  -MP\09\09\09    Generate phony targets for all headers\0A  -MQ <target>              Add a MAKE-quoted target\0A  -MT <target>              Add an unquoted target\0A\00", align 1
@.str41 = private unnamed_addr constant [370 x i8] c"  -D<macro>                 Define a <macro> with string '1' as its value\0A  -D<macro>=<val>           Define a <macro> with <val> as its value\0A  -A<question>=<answer>     Assert the <answer> to <question>\0A  -A-<question>=<answer>    Disable the <answer> to <question>\0A  -U<macro>                 Undefine <macro> \0A  -v                        Display the version number\0A\00", align 1
@.str42 = private unnamed_addr constant [418 x i8] c"  -H                        Print the name of header files as they are used\0A  -C                        Do not discard comments\0A  -dM                       Display a list of macro definitions active at end\0A  -dD                       Preserve macro definitions in output\0A  -dN                       As -dD except that only the names are preserved\0A  -dI                       Include #include directives in the output\0A\00", align 1
@.str43 = private unnamed_addr constant [446 x i8] c"  -fpreprocessed            Treat the input file as already preprocessed\0A  -ftabstop=<number>        Distance between tab stops for column reporting\0A  -P                        Do not generate #line directives\0A  -$                        Do not allow '$' in identifiers\0A  -remap                    Remap file names when including files\0A  --version                 Display version information\0A  -h or --help              Display this information\0A\00", align 1
@.str44 = private unnamed_addr constant [20 x i8] c"DEPENDENCIES_OUTPUT\00", align 1
@.str45 = private unnamed_addr constant [20 x i8] c"SUNPRO_DEPENDENCIES\00", align 1
@.str46 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str47 = private unnamed_addr constant [37 x i8] c"ignoring nonexistent directory \22%s\22\0A\00", align 1
@.str48 = private unnamed_addr constant [20 x i8] c"%s: Not a directory\00", align 1
@.str49 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str50 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str51 = private unnamed_addr constant [6 x i8] c"-help\00", align 1
@.str52 = private unnamed_addr constant [13 x i8] c"-target-help\00", align 1
@.str53 = private unnamed_addr constant [9 x i8] c"-version\00", align 1
@.str54 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str55 = private unnamed_addr constant [27 x i8] c"assertion missing after %s\00", align 1
@.str56 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str57 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str58 = private unnamed_addr constant [28 x i8] c"macro name missing after %s\00", align 1
@.str59 = private unnamed_addr constant [2 x i8] c"H\00", align 1
@.str60 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str61 = private unnamed_addr constant [32 x i8] c"directory name missing after %s\00", align 1
@.str62 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@.str63 = private unnamed_addr constant [3 x i8] c"MD\00", align 1
@.str64 = private unnamed_addr constant [27 x i8] c"file name missing after %s\00", align 1
@.str65 = private unnamed_addr constant [3 x i8] c"MF\00", align 1
@.str66 = private unnamed_addr constant [3 x i8] c"MG\00", align 1
@.str67 = private unnamed_addr constant [3 x i8] c"MM\00", align 1
@.str68 = private unnamed_addr constant [4 x i8] c"MMD\00", align 1
@.str69 = private unnamed_addr constant [3 x i8] c"MP\00", align 1
@.str70 = private unnamed_addr constant [3 x i8] c"MQ\00", align 1
@.str71 = private unnamed_addr constant [24 x i8] c"target missing after %s\00", align 1
@.str72 = private unnamed_addr constant [3 x i8] c"MT\00", align 1
@.str73 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str74 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str75 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str76 = private unnamed_addr constant [26 x i8] c"argument missing after %s\00", align 1
@.str77 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str78 = private unnamed_addr constant [20 x i8] c"fleading-underscore\00", align 1
@.str79 = private unnamed_addr constant [23 x i8] c"fno-leading-underscore\00", align 1
@.str80 = private unnamed_addr constant [19 x i8] c"fno-operator-names\00", align 1
@.str81 = private unnamed_addr constant [17 x i8] c"fno-preprocessed\00", align 1
@.str82 = private unnamed_addr constant [16 x i8] c"fno-show-column\00", align 1
@.str83 = private unnamed_addr constant [14 x i8] c"fpreprocessed\00", align 1
@.str84 = private unnamed_addr constant [13 x i8] c"fshow-column\00", align 1
@.str85 = private unnamed_addr constant [13 x i8] c"fsigned-char\00", align 1
@.str86 = private unnamed_addr constant [10 x i8] c"ftabstop=\00", align 1
@.str87 = private unnamed_addr constant [24 x i8] c"number missing after %s\00", align 1
@.str88 = private unnamed_addr constant [15 x i8] c"funsigned-char\00", align 1
@.str89 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str90 = private unnamed_addr constant [10 x i8] c"idirafter\00", align 1
@.str91 = private unnamed_addr constant [8 x i8] c"imacros\00", align 1
@.str92 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str93 = private unnamed_addr constant [8 x i8] c"iprefix\00", align 1
@.str94 = private unnamed_addr constant [27 x i8] c"path name missing after %s\00", align 1
@.str95 = private unnamed_addr constant [8 x i8] c"isystem\00", align 1
@.str96 = private unnamed_addr constant [12 x i8] c"iwithprefix\00", align 1
@.str97 = private unnamed_addr constant [18 x i8] c"iwithprefixbefore\00", align 1
@.str98 = private unnamed_addr constant [9 x i8] c"lang-asm\00", align 1
@.str99 = private unnamed_addr constant [7 x i8] c"lang-c\00", align 1
@.str100 = private unnamed_addr constant [9 x i8] c"lang-c++\00", align 1
@.str101 = private unnamed_addr constant [9 x i8] c"lang-c89\00", align 1
@.str102 = private unnamed_addr constant [10 x i8] c"lang-objc\00", align 1
@.str103 = private unnamed_addr constant [12 x i8] c"lang-objc++\00", align 1
@.str104 = private unnamed_addr constant [9 x i8] c"nostdinc\00", align 1
@.str105 = private unnamed_addr constant [11 x i8] c"nostdinc++\00", align 1
@.str106 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str107 = private unnamed_addr constant [9 x i8] c"pedantic\00", align 1
@.str108 = private unnamed_addr constant [16 x i8] c"pedantic-errors\00", align 1
@.str109 = private unnamed_addr constant [6 x i8] c"remap\00", align 1
@.str110 = private unnamed_addr constant [10 x i8] c"std=c++98\00", align 1
@.str111 = private unnamed_addr constant [8 x i8] c"std=c89\00", align 1
@.str112 = private unnamed_addr constant [8 x i8] c"std=c99\00", align 1
@.str113 = private unnamed_addr constant [8 x i8] c"std=c9x\00", align 1
@.str114 = private unnamed_addr constant [10 x i8] c"std=gnu89\00", align 1
@.str115 = private unnamed_addr constant [10 x i8] c"std=gnu99\00", align 1
@.str116 = private unnamed_addr constant [10 x i8] c"std=gnu9x\00", align 1
@.str117 = private unnamed_addr constant [17 x i8] c"std=iso9899:1990\00", align 1
@.str118 = private unnamed_addr constant [19 x i8] c"std=iso9899:199409\00", align 1
@.str119 = private unnamed_addr constant [17 x i8] c"std=iso9899:1999\00", align 1
@.str120 = private unnamed_addr constant [17 x i8] c"std=iso9899:199x\00", align 1
@.str121 = private unnamed_addr constant [10 x i8] c"trigraphs\00", align 1
@.str122 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str123 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str124 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@cl_options = internal unnamed_addr constant <{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }> <{ { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str49, i32 0, i32 0), i8* null, i64 1, i32 0, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str50, i32 0, i32 0), i8* null, i64 1, i32 1, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str51, i32 0, i32 0), i8* null, i64 5, i32 2, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str52, i32 0, i32 0), i8* null, i64 12, i32 3, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str53, i32 0, i32 0), i8* null, i64 8, i32 4, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str54, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str55, i32 0, i32 0), i64 1, i32 5, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str56, i32 0, i32 0), i8* null, i64 1, i32 6, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str57, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8]* @.str58, i32 0, i32 0), i64 1, i32 7, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str59, i32 0, i32 0), i8* null, i64 1, i32 8, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str60, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str61, i32 0, i32 0), i64 1, i32 9, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str62, i32 0, i32 0), i8* null, i64 1, i32 10, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str63, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str64, i32 0, i32 0), i64 2, i32 11, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str65, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str64, i32 0, i32 0), i64 2, i32 12, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i8* null, i64 2, i32 13, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str67, i32 0, i32 0), i8* null, i64 2, i32 14, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str68, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str64, i32 0, i32 0), i64 3, i32 15, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str69, i32 0, i32 0), i8* null, i64 2, i32 16, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str70, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str71, i32 0, i32 0), i64 2, i32 17, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str72, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str71, i32 0, i32 0), i64 2, i32 18, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str73, i32 0, i32 0), i8* null, i64 1, i32 19, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str74, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8]* @.str58, i32 0, i32 0), i64 1, i32 20, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str75, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str76, i32 0, i32 0), i64 1, i32 21, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str77, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str76, i32 0, i32 0), i64 1, i32 22, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([20 x i8]* @.str78, i32 0, i32 0), i8* null, i64 19, i32 23, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([23 x i8]* @.str79, i32 0, i32 0), i8* null, i64 22, i32 24, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([19 x i8]* @.str80, i32 0, i32 0), i8* null, i64 18, i32 25, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str81, i32 0, i32 0), i8* null, i64 16, i32 26, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str82, i32 0, i32 0), i8* null, i64 15, i32 27, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str83, i32 0, i32 0), i8* null, i64 13, i32 28, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str84, i32 0, i32 0), i8* null, i64 12, i32 29, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str85, i32 0, i32 0), i8* null, i64 12, i32 30, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str86, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str87, i32 0, i32 0), i64 9, i32 31, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str88, i32 0, i32 0), i8* null, i64 14, i32 32, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str89, i32 0, i32 0), i8* null, i64 1, i32 33, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str90, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str61, i32 0, i32 0), i64 9, i32 34, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str91, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str64, i32 0, i32 0), i64 7, i32 35, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str92, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str64, i32 0, i32 0), i64 7, i32 36, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str93, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str94, i32 0, i32 0), i64 7, i32 37, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str61, i32 0, i32 0), i64 7, i32 38, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str96, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str61, i32 0, i32 0), i64 11, i32 39, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str97, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str61, i32 0, i32 0), i64 17, i32 40, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str98, i32 0, i32 0), i8* null, i64 8, i32 41, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str99, i32 0, i32 0), i8* null, i64 6, i32 42, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str100, i32 0, i32 0), i8* null, i64 8, i32 43, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str101, i32 0, i32 0), i8* null, i64 8, i32 44, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str102, i32 0, i32 0), i8* null, i64 9, i32 45, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str103, i32 0, i32 0), i8* null, i64 11, i32 46, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str104, i32 0, i32 0), i8* null, i64 8, i32 47, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str105, i32 0, i32 0), i8* null, i64 10, i32 48, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str106, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str64, i32 0, i32 0), i64 1, i32 49, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str107, i32 0, i32 0), i8* null, i64 8, i32 50, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str108, i32 0, i32 0), i8* null, i64 15, i32 51, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str109, i32 0, i32 0), i8* null, i64 5, i32 52, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str110, i32 0, i32 0), i8* null, i64 9, i32 53, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str111, i32 0, i32 0), i8* null, i64 7, i32 54, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str112, i32 0, i32 0), i8* null, i64 7, i32 55, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str113, i32 0, i32 0), i8* null, i64 7, i32 56, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str114, i32 0, i32 0), i8* null, i64 9, i32 57, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str115, i32 0, i32 0), i8* null, i64 9, i32 58, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str116, i32 0, i32 0), i8* null, i64 9, i32 59, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str117, i32 0, i32 0), i8* null, i64 16, i32 60, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([19 x i8]* @.str118, i32 0, i32 0), i8* null, i64 18, i32 61, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str119, i32 0, i32 0), i8* null, i64 16, i32 62, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str120, i32 0, i32 0), i8* null, i64 16, i32 63, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str121, i32 0, i32 0), i8* null, i64 9, i32 64, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str122, i32 0, i32 0), i8* null, i64 1, i32 65, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str123, i32 0, i32 0), i8* null, i64 7, i32 66, [4 x i8] undef }, { i8*, i8*, i64, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str124, i32 0, i32 0), i8* null, i64 1, i32 67, [4 x i8] undef } }>, align 16
@.str125 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str126 = private unnamed_addr constant [20 x i8] c"I/O error on output\00", align 1
@.str127 = private unnamed_addr constant [9 x i8] c"%s \22%s\22\0A\00", align 1
@.str128 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str129 = private unnamed_addr constant [14 x i8] c"__cplusplus 1\00", align 1
@.str130 = private unnamed_addr constant [15 x i8] c"__GXX_WEAK__ 1\00", align 1
@.str131 = private unnamed_addr constant [11 x i8] c"__OBJC__ 1\00", align 1
@.str132 = private unnamed_addr constant [25 x i8] c"__STDC_VERSION__ 199409L\00", align 1
@.str133 = private unnamed_addr constant [25 x i8] c"__STDC_VERSION__ 199901L\00", align 1
@.str134 = private unnamed_addr constant [20 x i8] c"__CHAR_UNSIGNED__ 1\00", align 1
@.str135 = private unnamed_addr constant [18 x i8] c"__STRICT_ANSI__ 1\00", align 1
@.str136 = private unnamed_addr constant [16 x i8] c"__ASSEMBLER__ 1\00", align 1
@.str137 = private unnamed_addr constant [9 x i8] c"__TIME__\00", align 1
@.str138 = private unnamed_addr constant [9 x i8] c"__DATE__\00", align 1
@.str139 = private unnamed_addr constant [9 x i8] c"__FILE__\00", align 1
@.str140 = private unnamed_addr constant [14 x i8] c"__BASE_FILE__\00", align 1
@.str141 = private unnamed_addr constant [9 x i8] c"__LINE__\00", align 1
@.str142 = private unnamed_addr constant [18 x i8] c"__INCLUDE_LEVEL__\00", align 1
@.str143 = private unnamed_addr constant [8 x i8] c"_Pragma\00", align 1
@.str144 = private unnamed_addr constant [12 x i8] c"__VERSION__\00", align 1
@.str145 = private unnamed_addr constant [22 x i8] c"__USER_LABEL_PREFIX__\00", align 1
@.str146 = private unnamed_addr constant [20 x i8] c"__REGISTER_PREFIX__\00", align 1
@.str147 = private unnamed_addr constant [24 x i8] c"__HAVE_BUILTIN_SETJMP__\00", align 1
@.str148 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str149 = private unnamed_addr constant [15 x i8] c"__WCHAR_TYPE__\00", align 1
@.str150 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str151 = private unnamed_addr constant [14 x i8] c"__WINT_TYPE__\00", align 1
@.str152 = private unnamed_addr constant [13 x i8] c"unsigned int\00", align 1
@.str153 = private unnamed_addr constant [9 x i8] c"__STDC__\00", align 1
@builtin_array = internal constant <{ { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] } }> <{ { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str137, i32 0, i32 0), i8* null, i8 5, i16 8, i16 8, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str138, i32 0, i32 0), i8* null, i8 1, i16 8, i16 8, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str139, i32 0, i32 0), i8* null, i8 2, i16 8, i16 8, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str140, i32 0, i32 0), i8* null, i8 3, i16 8, i16 13, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str141, i32 0, i32 0), i8* null, i8 0, i16 8, i16 8, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str142, i32 0, i32 0), i8* null, i8 4, i16 8, i16 17, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str143, i32 0, i32 0), i8* null, i8 7, i16 8, i16 7, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str144, i32 0, i32 0), i8* null, i8 0, i16 1, i16 11, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([22 x i8]* @.str145, i32 0, i32 0), i8* null, i8 0, i16 2, i16 21, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([20 x i8]* @.str146, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str8, i32 0, i32 0), i8 0, i16 0, i16 19, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([24 x i8]* @.str147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str148, i32 0, i32 0), i8 0, i16 0, i16 23, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str149, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str150, i32 0, i32 0), i8 0, i16 0, i16 14, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str151, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str152, i32 0, i32 0), i8 0, i16 0, i16 13, [2 x i8] undef }, { i8*, i8*, i8, i16, i16, [2 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str153, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str148, i32 0, i32 0), i8 0, i16 0, i16 8, [2 x i8] undef } }>, align 16
@operator_array = internal constant [11 x %struct.named_op] [%struct.named_op { i8* getelementptr inbounds ([4 x i8]* @.str154, i32 0, i32 0), i32 3, i32 17 }, %struct.named_op { i8* getelementptr inbounds ([7 x i8]* @.str155, i32 0, i32 0), i32 6, i32 33 }, %struct.named_op { i8* getelementptr inbounds ([7 x i8]* @.str156, i32 0, i32 0), i32 6, i32 9 }, %struct.named_op { i8* getelementptr inbounds ([6 x i8]* @.str157, i32 0, i32 0), i32 5, i32 10 }, %struct.named_op { i8* getelementptr inbounds ([6 x i8]* @.str158, i32 0, i32 0), i32 5, i32 16 }, %struct.named_op { i8* getelementptr inbounds ([4 x i8]* @.str159, i32 0, i32 0), i32 3, i32 1 }, %struct.named_op { i8* getelementptr inbounds ([7 x i8]* @.str160, i32 0, i32 0), i32 6, i32 25 }, %struct.named_op { i8* getelementptr inbounds ([3 x i8]* @.str161, i32 0, i32 0), i32 2, i32 18 }, %struct.named_op { i8* getelementptr inbounds ([6 x i8]* @.str162, i32 0, i32 0), i32 5, i32 34 }, %struct.named_op { i8* getelementptr inbounds ([4 x i8]* @.str163, i32 0, i32 0), i32 3, i32 11 }, %struct.named_op { i8* getelementptr inbounds ([7 x i8]* @.str164, i32 0, i32 0), i32 6, i32 35 }], align 16
@.str154 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str155 = private unnamed_addr constant [7 x i8] c"and_eq\00", align 1
@.str156 = private unnamed_addr constant [7 x i8] c"bitand\00", align 1
@.str157 = private unnamed_addr constant [6 x i8] c"bitor\00", align 1
@.str158 = private unnamed_addr constant [6 x i8] c"compl\00", align 1
@.str159 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str160 = private unnamed_addr constant [7 x i8] c"not_eq\00", align 1
@.str161 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str162 = private unnamed_addr constant [6 x i8] c"or_eq\00", align 1
@.str163 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@.str164 = private unnamed_addr constant [7 x i8] c"xor_eq\00", align 1
@.str165 = private unnamed_addr constant [35 x i8] c"ignoring duplicate directory \22%s\22\0A\00", align 1
@.str166 = private unnamed_addr constant [48 x i8] c"changing search order for system directory \22%s\22\00", align 1
@.str167 = private unnamed_addr constant [49 x i8] c"  as it is the same as non-system directory \22%s\22\00", align 1
@.str168 = private unnamed_addr constant [61 x i8] c"  as it has already been specified as a non-system directory\00", align 1
@.str169 = private unnamed_addr constant [6 x i8] c"CPATH\00", align 1
@.str170 = private unnamed_addr constant [15 x i8] c"C_INCLUDE_PATH\00", align 1
@.str171 = private unnamed_addr constant [19 x i8] c"CPLUS_INCLUDE_PATH\00", align 1
@.str172 = private unnamed_addr constant [18 x i8] c"OBJC_INCLUDE_PATH\00", align 1
@.str173 = private unnamed_addr constant [22 x i8] c"OBJCPLUS_INCLUDE_PATH\00", align 1
@cpp_include_defaults = external constant [0 x %struct.default_include]
@lang_defaults = internal unnamed_addr constant [10 x %struct.lang_flags] [%struct.lang_flags { i8 0, i8 0, i8 0, i8 1, i8 0, i8 1, i8 1, i8 1 }, %struct.lang_flags { i8 1, i8 0, i8 0, i8 1, i8 0, i8 1, i8 1, i8 1 }, %struct.lang_flags { i8 0, i8 0, i8 0, i8 0, i8 1, i8 0, i8 0, i8 0 }, %struct.lang_flags { i8 0, i8 0, i8 0, i8 0, i8 1, i8 0, i8 0, i8 1 }, %struct.lang_flags { i8 1, i8 0, i8 0, i8 1, i8 1, i8 0, i8 1, i8 1 }, %struct.lang_flags { i8 0, i8 0, i8 1, i8 1, i8 0, i8 1, i8 1, i8 1 }, %struct.lang_flags { i8 0, i8 0, i8 1, i8 1, i8 1, i8 0, i8 1, i8 1 }, %struct.lang_flags { i8 0, i8 1, i8 0, i8 1, i8 0, i8 1, i8 1, i8 1 }, %struct.lang_flags { i8 0, i8 1, i8 1, i8 1, i8 0, i8 1, i8 1, i8 1 }, %struct.lang_flags { i8 0, i8 0, i8 0, i8 1, i8 0, i8 0, i8 1, i8 0 }], align 16
@init_library.initialized = internal unnamed_addr global i1 false

; Function Attrs: nounwind uwtable
define %struct.cpp_reader* @cpp_create_reader(i32 %lang) #0 {
entry:
  %.b.i = load i1* @init_library.initialized, align 1
  br i1 %.b.i, label %init_library.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  store i1 true, i1* @init_library.initialized, align 1
  br label %init_library.exit

init_library.exit:                                ; preds = %entry, %if.then.i
  %call = tail call noalias i8* @xcalloc(i64 1, i64 832) #4
  %0 = bitcast i8* %call to %struct.cpp_reader*
  %idxprom.i = sext i32 %lang to i64
  %lang1.i = getelementptr inbounds i8* %call, i64 736
  %1 = bitcast i8* %lang1.i to i32*
  store i32 %lang, i32* %1, align 4, !tbaa !1
  %c99.i = getelementptr inbounds [10 x %struct.lang_flags]* @lang_defaults, i64 0, i64 %idxprom.i, i32 0
  %2 = load i8* %c99.i, align 8, !tbaa !19
  %3 = getelementptr inbounds i8* %call, i64 769
  store i8 %2, i8* %3, align 1, !tbaa !21
  %objc.i = getelementptr inbounds [10 x %struct.lang_flags]* @lang_defaults, i64 0, i64 %idxprom.i, i32 1
  %4 = load i8* %objc.i, align 1, !tbaa !22
  %5 = getelementptr inbounds i8* %call, i64 744
  store i8 %4, i8* %5, align 1, !tbaa !23
  %cplusplus.i = getelementptr inbounds [10 x %struct.lang_flags]* @lang_defaults, i64 0, i64 %idxprom.i, i32 2
  %6 = load i8* %cplusplus.i, align 2, !tbaa !24
  %7 = getelementptr inbounds i8* %call, i64 742
  store i8 %6, i8* %7, align 1, !tbaa !25
  %extended_numbers.i = getelementptr inbounds [10 x %struct.lang_flags]* @lang_defaults, i64 0, i64 %idxprom.i, i32 3
  %8 = load i8* %extended_numbers.i, align 1, !tbaa !26
  %9 = getelementptr inbounds i8* %call, i64 748
  store i8 %8, i8* %9, align 1, !tbaa !27
  %trigraphs.i = getelementptr inbounds [10 x %struct.lang_flags]* @lang_defaults, i64 0, i64 %idxprom.i, i32 4
  %10 = load i8* %trigraphs.i, align 4, !tbaa !28
  %11 = getelementptr inbounds i8* %call, i64 746
  store i8 %10, i8* %11, align 1, !tbaa !29
  %dollars_in_ident.i = getelementptr inbounds [10 x %struct.lang_flags]* @lang_defaults, i64 0, i64 %idxprom.i, i32 5
  %12 = load i8* %dollars_in_ident.i, align 1, !tbaa !30
  %13 = getelementptr inbounds i8* %call, i64 767
  store i8 %12, i8* %13, align 1, !tbaa !31
  %cplusplus_comments.i = getelementptr inbounds [10 x %struct.lang_flags]* @lang_defaults, i64 0, i64 %idxprom.i, i32 6
  %14 = load i8* %cplusplus_comments.i, align 2, !tbaa !32
  %15 = getelementptr inbounds i8* %call, i64 743
  store i8 %14, i8* %15, align 1, !tbaa !33
  %digraphs.i = getelementptr inbounds [10 x %struct.lang_flags]* @lang_defaults, i64 0, i64 %idxprom.i, i32 7
  %16 = load i8* %digraphs.i, align 1, !tbaa !34
  %17 = getelementptr inbounds i8* %call, i64 747
  store i8 %16, i8* %17, align 1, !tbaa !35
  %18 = getelementptr inbounds i8* %call, i64 760
  store i8 1, i8* %18, align 1, !tbaa !36
  %19 = getelementptr inbounds i8* %call, i64 745
  store i8 1, i8* %19, align 1, !tbaa !37
  %20 = getelementptr inbounds i8* %call, i64 776
  store i8 1, i8* %20, align 1, !tbaa !38
  %tabstop = getelementptr inbounds i8* %call, i64 664
  %21 = bitcast i8* %tabstop to i32*
  store i32 8, i32* %21, align 4, !tbaa !39
  %22 = getelementptr inbounds i8* %call, i64 777
  store i8 1, i8* %22, align 1, !tbaa !40
  %23 = getelementptr inbounds i8* %call, i64 741
  store i8 1, i8* %23, align 1, !tbaa !41
  %call6 = tail call noalias i8* @xcalloc(i64 1, i64 112) #4
  %24 = bitcast i8* %call6 to %struct.cpp_pending*
  %pending = getelementptr inbounds i8* %call, i64 672
  %25 = bitcast i8* %pending to %struct.cpp_pending**
  store %struct.cpp_pending* %24, %struct.cpp_pending** %25, align 8, !tbaa !42
  %call8 = tail call %struct.deps* @deps_init() #4
  %deps = getelementptr inbounds i8* %call, i64 392
  %26 = bitcast i8* %deps to %struct.deps**
  store %struct.deps* %call8, %struct.deps** %26, align 8, !tbaa !43
  %line_maps = getelementptr inbounds i8* %call, i64 24
  %27 = bitcast i8* %line_maps to %struct.line_maps*
  tail call void @init_line_maps(%struct.line_maps* %27) #4
  %line = getelementptr inbounds i8* %call, i64 64
  %28 = bitcast i8* %line to i32*
  store i32 1, i32* %28, align 4, !tbaa !44
  %29 = load i8* %19, align 1, !tbaa !37
  %lnot = icmp eq i8 %29, 0
  %conv = zext i1 %lnot to i8
  %30 = getelementptr inbounds i8* %call, i64 11
  store i8 %conv, i8* %30, align 1, !tbaa !45
  %31 = getelementptr inbounds i8* %call, i64 302
  store i8 67, i8* %31, align 2
  %32 = getelementptr inbounds i8* %call, i64 350
  store i8 66, i8* %32, align 2
  %val = getelementptr inbounds i8* %call, i64 352
  %source = bitcast i8* %val to %struct.cpp_token**
  store %struct.cpp_token* null, %struct.cpp_token** %source, align 8, !tbaa !46
  %33 = getelementptr inbounds i8* %call, i64 374
  store i8 67, i8* %33, align 2
  %34 = getelementptr inbounds i8* %call, i64 375
  store i8 0, i8* %34, align 1, !tbaa !47
  %base_run = getelementptr inbounds i8* %call, i64 200
  %35 = bitcast i8* %base_run to %struct.tokenrun*
  tail call void @_cpp_init_tokenrun(%struct.tokenrun* %35, i32 250) #4
  %cur_run = getelementptr inbounds i8* %call, i64 232
  %36 = bitcast i8* %cur_run to %struct.tokenrun**
  store %struct.tokenrun* %35, %struct.tokenrun** %36, align 8, !tbaa !48
  %base = getelementptr inbounds i8* %call, i64 216
  %37 = bitcast i8* %base to %struct.cpp_token**
  %38 = load %struct.cpp_token** %37, align 8, !tbaa !49
  %cur_token = getelementptr inbounds i8* %call, i64 192
  %39 = bitcast i8* %cur_token to %struct.cpp_token**
  store %struct.cpp_token* %38, %struct.cpp_token** %39, align 8, !tbaa !50
  %base_context = getelementptr inbounds i8* %call, i64 96
  %40 = bitcast i8* %base_context to %struct.cpp_context*
  %context = getelementptr inbounds i8* %call, i64 152
  %41 = bitcast i8* %context to %struct.cpp_context**
  store %struct.cpp_context* %40, %struct.cpp_context** %41, align 8, !tbaa !51
  %macro = getelementptr inbounds i8* %call, i64 136
  %42 = bitcast i8* %macro to %struct.cpp_hashnode**
  store %struct.cpp_hashnode* null, %struct.cpp_hashnode** %42, align 8, !tbaa !52
  call void @llvm.memset.p0i8.i64(i8* %base_context, i8 0, i64 16, i32 8, i1 false)
  %call20 = tail call %struct._cpp_buff* @_cpp_get_buff(%struct.cpp_reader* %0, i64 0) #4
  %a_buff = getelementptr inbounds i8* %call, i64 72
  %43 = bitcast i8* %a_buff to %struct._cpp_buff**
  store %struct._cpp_buff* %call20, %struct._cpp_buff** %43, align 8, !tbaa !53
  %call21 = tail call %struct._cpp_buff* @_cpp_get_buff(%struct.cpp_reader* %0, i64 0) #4
  %u_buff = getelementptr inbounds i8* %call, i64 80
  %44 = bitcast i8* %u_buff to %struct._cpp_buff**
  store %struct._cpp_buff* %call21, %struct._cpp_buff** %44, align 8, !tbaa !54
  %buffer_ob = getelementptr inbounds i8* %call, i64 488
  %45 = bitcast i8* %buffer_ob to %struct.obstack*
  tail call void @gcc_obstack_init(%struct.obstack* %45) #4
  tail call void @_cpp_init_includes(%struct.cpp_reader* %0) #4
  ret %struct.cpp_reader* %0
}

declare noalias i8* @xcalloc(i64, i64) #1

declare %struct.deps* @deps_init() #1

declare void @init_line_maps(%struct.line_maps*) #1

declare void @_cpp_init_tokenrun(%struct.tokenrun*, i32) #1

declare %struct._cpp_buff* @_cpp_get_buff(%struct.cpp_reader*, i64) #1

declare void @gcc_obstack_init(%struct.obstack*) #1

declare void @_cpp_init_includes(%struct.cpp_reader*) #1

; Function Attrs: nounwind uwtable
define i32 @cpp_destroy(%struct.cpp_reader* %pfile) #0 {
entry:
  %buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !55
  %cmp65 = icmp eq %struct.cpp_buffer* %0, null
  br i1 %cmp65, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  tail call void @_cpp_pop_buffer(%struct.cpp_reader* %pfile) #4
  %1 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !55
  %cmp = icmp eq %struct.cpp_buffer* %1, null
  br i1 %cmp, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %entry
  %macro_buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 23
  %2 = load i8** %macro_buffer, align 8, !tbaa !56
  %tobool = icmp eq i8* %2, null
  br i1 %tobool, label %for.body.lr.ph, label %if.then

if.then:                                          ; preds = %while.end
  tail call void @free(i8* %2)
  store i8* null, i8** %macro_buffer, align 8, !tbaa !56
  %macro_buffer_len = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 24
  store i32 0, i32* %macro_buffer_len, align 4, !tbaa !57
  br label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then, %while.end
  %deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 31
  %3 = load %struct.deps** %deps, align 8, !tbaa !43
  tail call void @deps_free(%struct.deps* %3) #4
  %buffer_ob = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33
  tail call void @obstack_free(%struct.obstack* %buffer_ob, i8* null) #4
  tail call void @_cpp_destroy_hashtable(%struct.cpp_reader* %pfile) #4
  tail call void @_cpp_cleanup_includes(%struct.cpp_reader* %pfile) #4
  %a_buff = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 6
  %4 = load %struct._cpp_buff** %a_buff, align 8, !tbaa !53
  tail call void @_cpp_free_buff(%struct._cpp_buff* %4) #4
  %u_buff = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 7
  %5 = load %struct._cpp_buff** %u_buff, align 8, !tbaa !54
  tail call void @_cpp_free_buff(%struct._cpp_buff* %5) #4
  %free_buffs = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 8
  %6 = load %struct._cpp_buff** %free_buffs, align 8, !tbaa !58
  tail call void @_cpp_free_buff(%struct._cpp_buff* %6) #4
  %base_run = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 16
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %run.064 = phi %struct.tokenrun* [ %base_run, %for.body.lr.ph ], [ %7, %for.cond.backedge ]
  %next = getelementptr inbounds %struct.tokenrun* %run.064, i64 0, i32 0
  %7 = load %struct.tokenrun** %next, align 8, !tbaa !59
  %base = getelementptr inbounds %struct.tokenrun* %run.064, i64 0, i32 2
  %8 = load %struct.cpp_token** %base, align 8, !tbaa !60
  %9 = bitcast %struct.cpp_token* %8 to i8*
  tail call void @free(i8* %9)
  %cmp9 = icmp eq %struct.tokenrun* %run.064, %base_run
  br i1 %cmp9, label %for.cond.backedge, label %if.then10

for.cond.backedge:                                ; preds = %for.body, %if.then10
  %tobool7 = icmp eq %struct.tokenrun* %7, null
  br i1 %tobool7, label %for.end, label %for.body

if.then10:                                        ; preds = %for.body
  %10 = bitcast %struct.tokenrun* %run.064 to i8*
  tail call void @free(i8* %10)
  br label %for.cond.backedge

for.end:                                          ; preds = %for.cond.backedge
  %quote_include = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 5
  %11 = load %struct.search_path** %quote_include, align 8, !tbaa !61
  %tobool1361 = icmp eq %struct.search_path* %11, null
  br i1 %tobool1361, label %for.end17, label %for.body14

for.body14:                                       ; preds = %for.end, %for.body14
  %dir.062 = phi %struct.search_path* [ %12, %for.body14 ], [ %11, %for.end ]
  %next15 = getelementptr inbounds %struct.search_path* %dir.062, i64 0, i32 0
  %12 = load %struct.search_path** %next15, align 8, !tbaa !62
  %name = getelementptr inbounds %struct.search_path* %dir.062, i64 0, i32 1
  %13 = load i8** %name, align 8, !tbaa !64
  tail call void @free(i8* %13)
  %14 = bitcast %struct.search_path* %dir.062 to i8*
  tail call void @free(i8* %14)
  %tobool13 = icmp eq %struct.search_path* %12, null
  br i1 %tobool13, label %for.end17, label %for.body14

for.end17:                                        ; preds = %for.body14, %for.end
  %next18 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 9, i32 0
  %15 = load %struct.cpp_context** %next18, align 8, !tbaa !65
  %tobool2059 = icmp eq %struct.cpp_context* %15, null
  br i1 %tobool2059, label %for.end24, label %for.body21

for.body21:                                       ; preds = %for.end17, %for.body21
  %context.060 = phi %struct.cpp_context* [ %16, %for.body21 ], [ %15, %for.end17 ]
  %next22 = getelementptr inbounds %struct.cpp_context* %context.060, i64 0, i32 0
  %16 = load %struct.cpp_context** %next22, align 8, !tbaa !66
  %17 = bitcast %struct.cpp_context* %context.060 to i8*
  tail call void @free(i8* %17)
  %tobool20 = icmp eq %struct.cpp_context* %16, null
  br i1 %tobool20, label %for.end24, label %for.body21

for.end24:                                        ; preds = %for.body21, %for.end17
  %line_maps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 2
  tail call void @free_line_maps(%struct.line_maps* %line_maps) #4
  %errors = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 20
  %18 = load i32* %errors, align 4, !tbaa !67
  %19 = bitcast %struct.cpp_reader* %pfile to i8*
  tail call void @free(i8* %19)
  ret i32 %18
}

declare void @_cpp_pop_buffer(%struct.cpp_reader*) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #2

declare void @deps_free(%struct.deps*) #1

declare void @obstack_free(%struct.obstack*, i8*) #1

declare void @_cpp_destroy_hashtable(%struct.cpp_reader*) #1

declare void @_cpp_cleanup_includes(%struct.cpp_reader*) #1

declare void @_cpp_free_buff(%struct._cpp_buff*) #1

declare void @free_line_maps(%struct.line_maps*) #1

; Function Attrs: nounwind uwtable
define i8* @cpp_read_main_file(%struct.cpp_reader* %pfile, i8* %fname, %struct.ht* %table) #0 {
entry:
  tail call void @_cpp_init_hashtable(%struct.cpp_reader* %pfile, %struct.ht* %table) #4
  %no_standard_includes = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 44
  %0 = load i8* %no_standard_includes, align 1, !tbaa !68
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call fastcc void @init_standard_includes(%struct.cpp_reader* %pfile)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %pending.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 3
  %1 = load %struct.cpp_pending** %pending.i, align 8, !tbaa !42
  %quote_head.i = getelementptr inbounds %struct.cpp_pending* %1, i64 0, i32 2
  %2 = load %struct.search_path** %quote_head.i, align 8, !tbaa !69
  %brack_head.i = getelementptr inbounds %struct.cpp_pending* %1, i64 0, i32 4
  %3 = load %struct.search_path** %brack_head.i, align 8, !tbaa !71
  %systm_head.i = getelementptr inbounds %struct.cpp_pending* %1, i64 0, i32 6
  %4 = load %struct.search_path** %systm_head.i, align 8, !tbaa !72
  %tobool.i = icmp eq %struct.search_path* %4, null
  %after_head.i = getelementptr inbounds %struct.cpp_pending* %1, i64 0, i32 8
  %5 = load %struct.search_path** %after_head.i, align 8, !tbaa !73
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %systm_tail.i = getelementptr inbounds %struct.cpp_pending* %1, i64 0, i32 7
  %6 = load %struct.search_path** %systm_tail.i, align 8, !tbaa !74
  %next.i = getelementptr inbounds %struct.search_path* %6, i64 0, i32 0
  store %struct.search_path* %5, %struct.search_path** %next.i, align 8, !tbaa !62
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end
  %systm.0.i = phi %struct.search_path* [ %4, %if.then.i ], [ %5, %if.end ]
  %tobool2.i = icmp eq %struct.search_path* %3, null
  br i1 %tobool2.i, label %if.end6.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  %brack_tail.i = getelementptr inbounds %struct.cpp_pending* %1, i64 0, i32 5
  %7 = load %struct.search_path** %brack_tail.i, align 8, !tbaa !75
  %next4.i = getelementptr inbounds %struct.search_path* %7, i64 0, i32 0
  store %struct.search_path* %systm.0.i, %struct.search_path** %next4.i, align 8, !tbaa !62
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then3.i, %if.end.i
  %brack.0.i = phi %struct.search_path* [ %3, %if.then3.i ], [ %systm.0.i, %if.end.i ]
  %call.i = tail call fastcc %struct.search_path* @remove_dup_dirs(%struct.cpp_reader* %pfile, %struct.search_path* %brack.0.i) #4
  %call7.i = tail call fastcc %struct.search_path* @remove_dup_dirs(%struct.cpp_reader* %pfile, %struct.search_path* %2) #4
  %tobool8.i = icmp eq %struct.search_path* %2, null
  br i1 %tobool8.i, label %merge_include_chains.exit, label %if.then9.i

if.then9.i:                                       ; preds = %if.end6.i
  %next10.i = getelementptr inbounds %struct.search_path* %call7.i, i64 0, i32 0
  store %struct.search_path* %brack.0.i, %struct.search_path** %next10.i, align 8, !tbaa !62
  %tobool11.i = icmp eq %struct.search_path* %brack.0.i, null
  br i1 %tobool11.i, label %merge_include_chains.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then9.i
  %ino.i = getelementptr inbounds %struct.search_path* %call7.i, i64 0, i32 3
  %8 = load i64* %ino.i, align 8, !tbaa !76
  %ino12.i = getelementptr inbounds %struct.search_path* %brack.0.i, i64 0, i32 3
  %9 = load i64* %ino12.i, align 8, !tbaa !76
  %cmp.i = icmp eq i64 %8, %9
  br i1 %cmp.i, label %land.lhs.true13.i, label %merge_include_chains.exit

land.lhs.true13.i:                                ; preds = %land.lhs.true.i
  %dev.i = getelementptr inbounds %struct.search_path* %call7.i, i64 0, i32 4
  %10 = load i64* %dev.i, align 8, !tbaa !77
  %dev14.i = getelementptr inbounds %struct.search_path* %brack.0.i, i64 0, i32 4
  %11 = load i64* %dev14.i, align 8, !tbaa !77
  %cmp15.i = icmp eq i64 %10, %11
  br i1 %cmp15.i, label %if.then16.i, label %merge_include_chains.exit

if.then16.i:                                      ; preds = %land.lhs.true13.i
  %pfile.idx.i = getelementptr %struct.cpp_reader* %pfile, i64 0, i32 37, i32 12
  %pfile.idx.val.i = load i8* %pfile.idx.i, align 1, !tbaa !78
  %tobool.i.i = icmp eq i8 %pfile.idx.val.i, 0
  br i1 %tobool.i.i, label %entry.if.end_crit_edge.i.i, label %if.then.i.i

entry.if.end_crit_edge.i.i:                       ; preds = %if.then16.i
  %name3.pre.i.i = getelementptr inbounds %struct.search_path* %brack.0.i, i64 0, i32 1
  br label %remove_dup_dir.exit.i

if.then.i.i:                                      ; preds = %if.then16.i
  %12 = load %struct._IO_FILE** @stderr, align 8, !tbaa !46
  %name.i.i = getelementptr inbounds %struct.search_path* %brack.0.i, i64 0, i32 1
  %13 = load i8** %name.i.i, align 8, !tbaa !64
  %call.i.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([35 x i8]* @.str165, i64 0, i64 0), i8* %13) #6
  br label %remove_dup_dir.exit.i

remove_dup_dir.exit.i:                            ; preds = %if.then.i.i, %entry.if.end_crit_edge.i.i
  %name3.pre-phi.i.i = phi i8** [ %name3.pre.i.i, %entry.if.end_crit_edge.i.i ], [ %name.i.i, %if.then.i.i ]
  %next1.i.i = getelementptr inbounds %struct.search_path* %brack.0.i, i64 0, i32 0
  %14 = load %struct.search_path** %next1.i.i, align 8, !tbaa !62
  store %struct.search_path* %14, %struct.search_path** %next10.i, align 8, !tbaa !62
  %15 = load i8** %name3.pre-phi.i.i, align 8, !tbaa !64
  tail call void @free(i8* %15) #4
  %16 = bitcast %struct.search_path* %brack.0.i to i8*
  tail call void @free(i8* %16) #4
  br label %merge_include_chains.exit

merge_include_chains.exit:                        ; preds = %if.end6.i, %if.then9.i, %land.lhs.true.i, %land.lhs.true13.i, %remove_dup_dir.exit.i
  %brack.1.i = phi %struct.search_path* [ %call7.i, %remove_dup_dir.exit.i ], [ %brack.0.i, %land.lhs.true13.i ], [ %brack.0.i, %land.lhs.true.i ], [ null, %if.then9.i ], [ %brack.0.i, %if.end6.i ]
  %quote.0.i = phi %struct.search_path* [ %2, %remove_dup_dir.exit.i ], [ %2, %land.lhs.true13.i ], [ %2, %land.lhs.true.i ], [ %2, %if.then9.i ], [ %brack.0.i, %if.end6.i ]
  %quote_include.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 5
  store %struct.search_path* %quote.0.i, %struct.search_path** %quote_include.i, align 8, !tbaa !61
  %bracket_include.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 6
  store %struct.search_path* %brack.1.i, %struct.search_path** %bracket_include.i, align 8, !tbaa !79
  %verbose = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 12
  %17 = load i8* %verbose, align 1, !tbaa !78
  %tobool2 = icmp eq i8 %17, 0
  br i1 %tobool2, label %if.end12, label %if.then3

if.then3:                                         ; preds = %merge_include_chains.exit
  %18 = load %struct._IO_FILE** @stderr, align 8, !tbaa !46
  %19 = tail call i64 @fwrite(i8* getelementptr inbounds ([36 x i8]* @.str, i64 0, i64 0), i64 35, i64 1, %struct._IO_FILE* %18) #7
  %l.048 = load %struct.search_path** %quote_include.i, align 8
  %tobool549 = icmp eq %struct.search_path* %l.048, null
  br i1 %tobool549, label %for.end, label %for.body

for.body:                                         ; preds = %if.then3, %if.end9
  %l.050 = phi %struct.search_path* [ %l.0, %if.end9 ], [ %l.048, %if.then3 ]
  %20 = load %struct.search_path** %bracket_include.i, align 8, !tbaa !79
  %cmp = icmp eq %struct.search_path* %l.050, %20
  br i1 %cmp, label %if.then7, label %if.end9

if.then7:                                         ; preds = %for.body
  %21 = tail call i64 @fwrite(i8* getelementptr inbounds ([36 x i8]* @.str1, i64 0, i64 0), i64 35, i64 1, %struct._IO_FILE* %18) #7
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %for.body
  %name = getelementptr inbounds %struct.search_path* %l.050, i64 0, i32 1
  %22 = load i8** %name, align 8, !tbaa !64
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i8* %22) #6
  %next = getelementptr inbounds %struct.search_path* %l.050, i64 0, i32 0
  %l.0 = load %struct.search_path** %next, align 8
  %tobool5 = icmp eq %struct.search_path* %l.0, null
  br i1 %tobool5, label %for.end, label %for.body

for.end:                                          ; preds = %if.end9, %if.then3
  %23 = tail call i64 @fwrite(i8* getelementptr inbounds ([21 x i8]* @.str3, i64 0, i64 0), i64 20, i64 1, %struct._IO_FILE* %18) #7
  br label %if.end12

if.end12:                                         ; preds = %merge_include_chains.exit, %for.end
  %print_deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 21
  %24 = load i8* %print_deps, align 1, !tbaa !80
  %tobool14 = icmp eq i8 %24, 0
  br i1 %tobool14, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.end12
  %deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 31
  %25 = load %struct.deps** %deps, align 8, !tbaa !43
  tail call void @deps_add_default_target(%struct.deps* %25, i8* %fname) #4
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.then15
  %call17 = tail call zeroext i1 @_cpp_read_file(%struct.cpp_reader* %pfile, i8* %fname) #4
  br i1 %call17, label %if.end19, label %return

if.end19:                                         ; preds = %if.end16
  %print_include_names = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 25
  %26 = load i8* %print_include_names, align 1, !tbaa !81
  %tobool21 = icmp ne i8 %26, 0
  %trace_includes = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 2, i32 5
  %frombool = zext i1 %tobool21 to i8
  store i8 %frombool, i8* %trace_includes, align 1, !tbaa !82
  %preprocessed = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 43
  %27 = load i8* %preprocessed, align 1, !tbaa !83
  %tobool23 = icmp eq i8 %27, 0
  br i1 %tobool23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %if.end19
  %call.i44 = tail call %struct.cpp_token* @_cpp_lex_direct(%struct.cpp_reader* %pfile) #4
  %type.i = getelementptr inbounds %struct.cpp_token* %call.i44, i64 0, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i45 = icmp eq i8 %bf.load.i, 40
  br i1 %cmp.i45, label %if.then.i46, label %if.end8.i

if.then.i46:                                      ; preds = %if.then24
  %call1.i = tail call %struct.cpp_token* @_cpp_lex_direct(%struct.cpp_reader* %pfile) #4
  tail call void @_cpp_backup_tokens(%struct.cpp_reader* %pfile, i32 1) #4
  %type2.i = getelementptr inbounds %struct.cpp_token* %call1.i, i64 0, i32 2
  %bf.load3.i = load i8* %type2.i, align 2
  %cmp5.i = icmp eq i8 %bf.load3.i, 57
  br i1 %cmp5.i, label %if.then6.i, label %if.end8.i

if.then6.i:                                       ; preds = %if.then.i46
  %flags.i = getelementptr inbounds %struct.cpp_token* %call.i44, i64 0, i32 3
  %28 = load i8* %flags.i, align 1, !tbaa !84
  %conv.i = zext i8 %28 to i32
  %and.i = and i32 %conv.i, 1
  %call7.i47 = tail call i32 @_cpp_handle_directive(%struct.cpp_reader* %pfile, i32 %and.i) #4
  br label %if.end25

if.end8.i:                                        ; preds = %if.then.i46, %if.then24
  tail call void @_cpp_backup_tokens(%struct.cpp_reader* %pfile, i32 1) #4
  br label %if.end25

if.end25:                                         ; preds = %if.end8.i, %if.then6.i, %if.end19
  %map = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 3
  %29 = load %struct.line_map** %map, align 8, !tbaa !85
  %to_file = getelementptr inbounds %struct.line_map* %29, i64 0, i32 0
  %30 = load i8** %to_file, align 8, !tbaa !86
  br label %return

return:                                           ; preds = %if.end16, %if.end25
  %retval.0 = phi i8* [ %30, %if.end25 ], [ null, %if.end16 ]
  ret i8* %retval.0
}

declare void @_cpp_init_hashtable(%struct.cpp_reader*, %struct.ht*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @init_standard_includes(%struct.cpp_reader* %pfile) #0 {
entry:
  %include_prefix = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 8
  %0 = load i8** %include_prefix, align 8, !tbaa !88
  %call = tail call i8* @getenv(i8* getelementptr inbounds ([6 x i8]* @.str169, i64 0, i64 0)) #4
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load i8* %call, align 1, !tbaa !89
  %cmp1 = icmp eq i8 %1, 0
  br i1 %cmp1, label %if.end, label %do.body.i

do.body.i:                                        ; preds = %land.lhs.true, %if.end.i
  %p.0.i = phi i8* [ %add.ptr.i, %if.end.i ], [ %call, %land.lhs.true ]
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %do.body.i
  %q.0.i = phi i8* [ %p.0.i, %do.body.i ], [ %incdec.ptr.i, %while.body.i ]
  %2 = load i8* %q.0.i, align 1, !tbaa !89
  switch i8 %2, label %while.body.i [
    i8 58, label %while.end.i
    i8 0, label %while.end.i
  ]

while.body.i:                                     ; preds = %while.cond.i
  %incdec.ptr.i = getelementptr inbounds i8* %q.0.i, i64 1
  br label %while.cond.i

while.end.i:                                      ; preds = %while.cond.i, %while.cond.i
  %cmp5.i = icmp eq i8* %q.0.i, %p.0.i
  br i1 %cmp5.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.end.i
  %call.i = tail call noalias i8* @xmalloc(i64 2) #4
  store i8 46, i8* %call.i, align 1, !tbaa !89
  %arrayidx7.i = getelementptr inbounds i8* %call.i, i64 1
  store i8 0, i8* %arrayidx7.i, align 1, !tbaa !89
  br label %if.end.i

if.else.i:                                        ; preds = %while.end.i
  %sub.ptr.lhs.cast.i = ptrtoint i8* %q.0.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %p.0.i to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %add.i = add nsw i64 %sub.ptr.sub.i, 1
  %call8.i = tail call noalias i8* @xmalloc(i64 %add.i) #4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call8.i, i8* %p.0.i, i64 %sub.ptr.sub.i, i32 1, i1 false) #4
  %arrayidx15.i = getelementptr inbounds i8* %call8.i, i64 %sub.ptr.sub.i
  store i8 0, i8* %arrayidx15.i, align 1, !tbaa !89
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %name.0.i = phi i8* [ %call.i, %if.then.i ], [ %call8.i, %if.else.i ]
  tail call fastcc void @append_include_chain(%struct.cpp_reader* %pfile, i8* %name.0.i, i32 0, i32 0) #4
  %3 = load i8* %q.0.i, align 1, !tbaa !89
  %cmp17.i = icmp eq i8 %3, 0
  %add.ptr.i = getelementptr inbounds i8* %q.0.i, i64 1
  br i1 %cmp17.i, label %if.end, label %do.body.i

if.end:                                           ; preds = %if.end.i, %land.lhs.true, %entry
  %objc = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  %4 = load i8* %objc, align 1, !tbaa !23
  %conv4 = zext i8 %4 to i32
  %shl = shl nuw nsw i32 %conv4, 1
  %cplusplus = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  %5 = load i8* %cplusplus, align 1, !tbaa !25
  %conv6 = zext i8 %5 to i32
  %add = add nsw i32 %shl, %conv6
  switch i32 %add, label %sw.epilog [
    i32 0, label %do.body7
    i32 1, label %do.body11
    i32 2, label %do.body15
    i32 3, label %do.body19
  ]

do.body7:                                         ; preds = %if.end
  %call8 = tail call i8* @getenv(i8* getelementptr inbounds ([15 x i8]* @.str170, i64 0, i64 0)) #4
  br label %sw.epilog

do.body11:                                        ; preds = %if.end
  %call12 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8]* @.str171, i64 0, i64 0)) #4
  br label %sw.epilog

do.body15:                                        ; preds = %if.end
  %call16 = tail call i8* @getenv(i8* getelementptr inbounds ([18 x i8]* @.str172, i64 0, i64 0)) #4
  br label %sw.epilog

do.body19:                                        ; preds = %if.end
  %call20 = tail call i8* @getenv(i8* getelementptr inbounds ([22 x i8]* @.str173, i64 0, i64 0)) #4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %do.body19, %do.body15, %do.body11, %do.body7
  %path.0 = phi i8* [ %call, %if.end ], [ %call20, %do.body19 ], [ %call16, %do.body15 ], [ %call12, %do.body11 ], [ %call8, %do.body7 ]
  %cmp22 = icmp eq i8* %path.0, null
  br i1 %cmp22, label %if.end29, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %sw.epilog
  %6 = load i8* %path.0, align 1, !tbaa !89
  %cmp26 = icmp eq i8 %6, 0
  br i1 %cmp26, label %if.end29, label %do.body.i144

do.body.i144:                                     ; preds = %land.lhs.true24, %if.end.i164
  %p.0.i143 = phi i8* [ %add.ptr.i163, %if.end.i164 ], [ %path.0, %land.lhs.true24 ]
  br label %while.cond.i146

while.cond.i146:                                  ; preds = %while.body.i148, %do.body.i144
  %q.0.i145 = phi i8* [ %p.0.i143, %do.body.i144 ], [ %incdec.ptr.i147, %while.body.i148 ]
  %7 = load i8* %q.0.i145, align 1, !tbaa !89
  switch i8 %7, label %while.body.i148 [
    i8 58, label %while.end.i150
    i8 0, label %while.end.i150
  ]

while.body.i148:                                  ; preds = %while.cond.i146
  %incdec.ptr.i147 = getelementptr inbounds i8* %q.0.i145, i64 1
  br label %while.cond.i146

while.end.i150:                                   ; preds = %while.cond.i146, %while.cond.i146
  %cmp5.i149 = icmp eq i8* %q.0.i145, %p.0.i143
  br i1 %cmp5.i149, label %if.then.i153, label %if.else.i160

if.then.i153:                                     ; preds = %while.end.i150
  %call.i151 = tail call noalias i8* @xmalloc(i64 2) #4
  store i8 46, i8* %call.i151, align 1, !tbaa !89
  %arrayidx7.i152 = getelementptr inbounds i8* %call.i151, i64 1
  store i8 0, i8* %arrayidx7.i152, align 1, !tbaa !89
  br label %if.end.i164

if.else.i160:                                     ; preds = %while.end.i150
  %sub.ptr.lhs.cast.i154 = ptrtoint i8* %q.0.i145 to i64
  %sub.ptr.rhs.cast.i155 = ptrtoint i8* %p.0.i143 to i64
  %sub.ptr.sub.i156 = sub i64 %sub.ptr.lhs.cast.i154, %sub.ptr.rhs.cast.i155
  %add.i157 = add nsw i64 %sub.ptr.sub.i156, 1
  %call8.i158 = tail call noalias i8* @xmalloc(i64 %add.i157) #4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call8.i158, i8* %p.0.i143, i64 %sub.ptr.sub.i156, i32 1, i1 false) #4
  %arrayidx15.i159 = getelementptr inbounds i8* %call8.i158, i64 %sub.ptr.sub.i156
  store i8 0, i8* %arrayidx15.i159, align 1, !tbaa !89
  br label %if.end.i164

if.end.i164:                                      ; preds = %if.else.i160, %if.then.i153
  %name.0.i161 = phi i8* [ %call.i151, %if.then.i153 ], [ %call8.i158, %if.else.i160 ]
  tail call fastcc void @append_include_chain(%struct.cpp_reader* %pfile, i8* %name.0.i161, i32 1, i32 0) #4
  %8 = load i8* %q.0.i145, align 1, !tbaa !89
  %cmp17.i162 = icmp eq i8 %8, 0
  %add.ptr.i163 = getelementptr inbounds i8* %q.0.i145, i64 1
  br i1 %cmp17.i162, label %if.end29, label %do.body.i144

if.end29:                                         ; preds = %if.end.i164, %land.lhs.true24, %sw.epilog
  %cmp30 = icmp ne i8* %0, null
  %9 = load i64* @cpp_GCC_INCLUDE_DIR_len, align 8
  %tobool = icmp ne i64 %9, 0
  %or.cond = and i1 %cmp30, %tobool
  br i1 %or.cond, label %if.then33, label %if.end29.for.cond73.preheader_crit_edge

if.end29.for.cond73.preheader_crit_edge:          ; preds = %if.end29
  %.pre = load i8** getelementptr inbounds ([0 x %struct.default_include]* @cpp_include_defaults, i64 0, i64 0, i32 0), align 8, !tbaa !90
  br label %for.cond73.preheader

for.cond73.preheader:                             ; preds = %for.inc, %if.end29.for.cond73.preheader_crit_edge
  %10 = phi i8* [ %.pre, %if.end29.for.cond73.preheader_crit_edge ], [ %12, %for.inc ]
  %tobool75166 = icmp eq i8* %10, null
  br i1 %tobool75166, label %for.end96, label %for.body76.lr.ph

for.body76.lr.ph:                                 ; preds = %for.cond73.preheader
  %no_standard_cplusplus_includes86 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 45
  br label %for.body76

if.then33:                                        ; preds = %if.end29
  %add35 = shl i64 %9, 32
  %sext = add i64 %add35, 4294967296
  %conv36 = ashr exact i64 %sext, 32
  %11 = alloca i8, i64 %conv36, align 1
  %call37 = tail call i64 @strlen(i8* %0) #4
  %conv39 = ashr exact i64 %add35, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* getelementptr inbounds ([0 x i8]* @cpp_GCC_INCLUDE_DIR, i64 0, i64 0), i64 %conv39, i32 1, i1 false)
  %arrayidx = getelementptr inbounds i8* %11, i64 %conv39
  store i8 0, i8* %arrayidx, align 1, !tbaa !89
  %12 = load i8** getelementptr inbounds ([0 x %struct.default_include]* @cpp_include_defaults, i64 0, i64 0, i32 0), align 8, !tbaa !90
  %tobool40170 = icmp eq i8* %12, null
  br i1 %tobool40170, label %for.end96, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then33
  %add59 = sub i64 %call37, %9
  %sext141 = shl i64 %call37, 32
  %conv63 = ashr exact i64 %sext141, 32
  %no_standard_cplusplus_includes = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 45
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %13 = phi i8* [ %12, %for.body.lr.ph ], [ %20, %for.inc ]
  %fname173 = phi i8** [ getelementptr inbounds ([0 x %struct.default_include]* @cpp_include_defaults, i64 0, i64 0, i32 0), %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %indvars174 = bitcast i8** %fname173 to %struct.default_include*
  %cplusplus41 = getelementptr inbounds i8** %fname173, i64 2
  %14 = bitcast i8** %cplusplus41 to i32*
  %15 = load i32* %14, align 4, !tbaa !92
  %tobool42 = icmp eq i32 %15, 0
  br i1 %tobool42, label %if.then50, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %16 = load i8* %cplusplus, align 1, !tbaa !25
  %tobool46 = icmp eq i8 %16, 0
  br i1 %tobool46, label %for.inc, label %land.lhs.true47

land.lhs.true47:                                  ; preds = %lor.lhs.false
  %17 = load i8* %no_standard_cplusplus_includes, align 1, !tbaa !93
  %tobool49 = icmp eq i8 %17, 0
  br i1 %tobool49, label %if.then50, label %for.inc

if.then50:                                        ; preds = %land.lhs.true47, %for.body
  %call53 = call i32 @memcmp(i8* %13, i8* %11, i64 %conv39) #4
  %tobool54 = icmp eq i32 %call53, 0
  br i1 %tobool54, label %if.then55, label %for.inc

if.then55:                                        ; preds = %if.then50
  %call57 = tail call i64 @strlen(i8* %13) #4
  %sub = add i64 %add59, %call57
  %add60 = shl i64 %sub, 32
  %sext140 = add i64 %add60, 4294967296
  %conv61 = ashr exact i64 %sext140, 32
  %call62 = tail call noalias i8* @xmalloc(i64 %conv61) #4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call62, i8* %0, i64 %conv63, i32 1, i1 false)
  %add.ptr = getelementptr inbounds i8* %call62, i64 %conv63
  %18 = load i8** %fname173, align 8, !tbaa !90
  %add.ptr66 = getelementptr inbounds i8* %18, i64 %conv39
  %sub67 = sub i64 %call57, %9
  %add68 = shl i64 %sub67, 32
  %sext142 = add i64 %add68, 4294967296
  %conv69 = ashr exact i64 %sext142, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %add.ptr66, i64 %conv69, i32 1, i1 false)
  %cxx_aware = getelementptr inbounds %struct.default_include* %indvars174, i64 0, i32 3
  %19 = load i32* %cxx_aware, align 4, !tbaa !94
  tail call fastcc void @append_include_chain(%struct.cpp_reader* %pfile, i8* %call62, i32 1, i32 %19)
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true47, %lor.lhs.false, %if.then50, %if.then55
  %incdec.ptr = getelementptr inbounds i8** %fname173, i64 3
  %20 = load i8** %incdec.ptr, align 8, !tbaa !90
  %tobool40 = icmp eq i8* %20, null
  br i1 %tobool40, label %for.cond73.preheader, label %for.body

for.body76:                                       ; preds = %for.body76.lr.ph, %for.inc94
  %21 = phi i8* [ %10, %for.body76.lr.ph ], [ %29, %for.inc94 ]
  %fname74169 = phi i8** [ getelementptr inbounds ([0 x %struct.default_include]* @cpp_include_defaults, i64 0, i64 0, i32 0), %for.body76.lr.ph ], [ %incdec.ptr95, %for.inc94 ]
  %indvars = bitcast i8** %fname74169 to %struct.default_include*
  %cplusplus77 = getelementptr inbounds i8** %fname74169, i64 2
  %22 = bitcast i8** %cplusplus77 to i32*
  %23 = load i32* %22, align 4, !tbaa !92
  %tobool78 = icmp eq i32 %23, 0
  br i1 %tobool78, label %if.then88, label %lor.lhs.false79

lor.lhs.false79:                                  ; preds = %for.body76
  %24 = load i8* %cplusplus, align 1, !tbaa !25
  %tobool83 = icmp eq i8 %24, 0
  br i1 %tobool83, label %for.inc94, label %land.lhs.true84

land.lhs.true84:                                  ; preds = %lor.lhs.false79
  %25 = load i8* %no_standard_cplusplus_includes86, align 1, !tbaa !93
  %tobool87 = icmp eq i8 %25, 0
  br i1 %tobool87, label %if.then88, label %for.inc94

if.then88:                                        ; preds = %land.lhs.true84, %for.body76
  %26 = getelementptr inbounds i8** %fname74169, i64 1
  %27 = load i8** %26, align 8, !tbaa !95
  %call91 = tail call i8* @update_path(i8* %21, i8* %27) #4
  %cxx_aware92 = getelementptr inbounds %struct.default_include* %indvars, i64 0, i32 3
  %28 = load i32* %cxx_aware92, align 4, !tbaa !94
  tail call fastcc void @append_include_chain(%struct.cpp_reader* %pfile, i8* %call91, i32 1, i32 %28)
  br label %for.inc94

for.inc94:                                        ; preds = %land.lhs.true84, %lor.lhs.false79, %if.then88
  %incdec.ptr95 = getelementptr inbounds i8** %fname74169, i64 3
  %29 = load i8** %incdec.ptr95, align 8, !tbaa !90
  %tobool75 = icmp eq i8* %29, null
  br i1 %tobool75, label %for.end96, label %for.body76

for.end96:                                        ; preds = %for.inc94, %if.then33, %for.cond73.preheader
  ret void
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #2

declare void @deps_add_default_target(%struct.deps*, i8*) #1

declare zeroext i1 @_cpp_read_file(%struct.cpp_reader*, i8*) #1

; Function Attrs: nounwind uwtable
define void @cpp_finish_options(%struct.cpp_reader* %pfile) #0 {
entry:
  %header.i = alloca %struct.cpp_token, align 8
  %cplusplus = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  %0 = load i8* %cplusplus, align 1, !tbaa !25
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %operator_names = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 49
  %1 = load i8* %operator_names, align 1, !tbaa !40
  %tobool3 = icmp eq i8 %1, 0
  br i1 %tobool3, label %if.end, label %for.body.i

for.body.i:                                       ; preds = %land.lhs.true, %for.body.i
  %b.08.i = phi %struct.named_op* [ %incdec.ptr.i, %for.body.i ], [ getelementptr inbounds ([11 x %struct.named_op]* @operator_array, i64 0, i64 0), %land.lhs.true ]
  %name.i = getelementptr inbounds %struct.named_op* %b.08.i, i64 0, i32 0
  %2 = load i8** %name.i, align 8, !tbaa !96
  %len.i = getelementptr inbounds %struct.named_op* %b.08.i, i64 0, i32 1
  %3 = load i32* %len.i, align 4, !tbaa !98
  %call.i = call %struct.cpp_hashnode* @cpp_lookup(%struct.cpp_reader* %pfile, i8* %2, i32 %3) #4
  %flags.i = getelementptr inbounds %struct.cpp_hashnode* %call.i, i64 0, i32 5
  %4 = load i8* %flags.i, align 1, !tbaa !99
  %or.i = or i8 %4, 1
  store i8 %or.i, i8* %flags.i, align 1, !tbaa !99
  %value.i = getelementptr inbounds %struct.named_op* %b.08.i, i64 0, i32 2
  %5 = load i32* %value.i, align 4, !tbaa !102
  %value2.i = getelementptr inbounds %struct.cpp_hashnode* %call.i, i64 0, i32 6
  %operator.i = bitcast %union.anon.0* %value2.i to i32*
  store i32 %5, i32* %operator.i, align 4, !tbaa !89
  %incdec.ptr.i = getelementptr inbounds %struct.named_op* %b.08.i, i64 1
  %cmp.i = icmp ult %struct.named_op* %incdec.ptr.i, getelementptr inbounds ([11 x %struct.named_op]* @operator_array, i64 1, i64 0)
  br i1 %cmp.i, label %for.body.i, label %if.end

if.end:                                           ; preds = %for.body.i, %land.lhs.true, %entry
  %preprocessed = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 43
  %6 = load i8* %preprocessed, align 1, !tbaa !83
  %tobool5 = icmp eq i8 %6, 0
  br i1 %tobool5, label %if.then6, label %if.end.if.end18_crit_edge

if.end.if.end18_crit_edge:                        ; preds = %if.end
  %pending20.phi.trans.insert = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 3
  %.pre51 = load %struct.cpp_pending** %pending20.phi.trans.insert, align 8, !tbaa !42
  br label %if.end18

if.then6:                                         ; preds = %if.end
  call void @_cpp_do_file_change(%struct.cpp_reader* %pfile, i32 2, i8* getelementptr inbounds ([11 x i8]* @.str4, i64 0, i64 0), i32 1, i32 0) #4
  call fastcc void @init_builtins(%struct.cpp_reader* %pfile)
  call void @_cpp_do_file_change(%struct.cpp_reader* %pfile, i32 2, i8* getelementptr inbounds ([15 x i8]* @.str5, i64 0, i64 0), i32 1, i32 0) #4
  %pending = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 3
  %7 = load %struct.cpp_pending** %pending, align 8, !tbaa !42
  %directive_head = getelementptr inbounds %struct.cpp_pending* %7, i64 0, i32 0
  %p.048 = load %struct.pending_option** %directive_head, align 8
  %tobool849 = icmp eq %struct.pending_option* %p.048, null
  br i1 %tobool849, label %while.cond.preheader, label %for.body

for.cond.while.cond.preheader_crit_edge:          ; preds = %for.body
  %.pre = load %struct.cpp_pending** %pending, align 8, !tbaa !42
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.cond.while.cond.preheader_crit_edge, %if.then6
  %8 = phi %struct.cpp_pending* [ %.pre, %for.cond.while.cond.preheader_crit_edge ], [ %7, %if.then6 ]
  %imacros_head46 = getelementptr inbounds %struct.cpp_pending* %8, i64 0, i32 10
  %9 = load %struct.pending_option** %imacros_head46, align 8, !tbaa !103
  %cmp47 = icmp eq %struct.pending_option* %9, null
  br i1 %cmp47, label %if.end18, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %10 = bitcast %struct.cpp_token* %header.i to i8*
  %type.i = getelementptr inbounds %struct.cpp_token* %header.i, i64 0, i32 2
  %text.i = getelementptr inbounds %struct.cpp_token* %header.i, i64 0, i32 4, i32 0, i32 1
  %len.i45 = getelementptr inbounds %struct.cpp_token* %header.i, i64 0, i32 4, i32 0, i32 0
  %line.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 4
  %buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  br label %while.body

for.body:                                         ; preds = %if.then6, %for.body
  %p.050 = phi %struct.pending_option* [ %p.0, %for.body ], [ %p.048, %if.then6 ]
  %handler = getelementptr inbounds %struct.pending_option* %p.050, i64 0, i32 2
  %11 = load void (%struct.cpp_reader*, i8*)** %handler, align 8, !tbaa !104
  %arg = getelementptr inbounds %struct.pending_option* %p.050, i64 0, i32 1
  %12 = load i8** %arg, align 8, !tbaa !106
  call void %11(%struct.cpp_reader* %pfile, i8* %12) #4
  %next = getelementptr inbounds %struct.pending_option* %p.050, i64 0, i32 0
  %p.0 = load %struct.pending_option** %next, align 8
  %tobool8 = icmp eq %struct.pending_option* %p.0, null
  br i1 %tobool8, label %for.cond.while.cond.preheader_crit_edge, label %for.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end13
  %13 = phi %struct.pending_option* [ %9, %while.body.lr.ph ], [ %20, %if.end13 ]
  %.idx = getelementptr %struct.pending_option* %13, i64 0, i32 1
  %.idx.val = load i8** %.idx, align 8, !tbaa !106
  call void @llvm.lifetime.start(i64 24, i8* %10) #4
  store i8 61, i8* %type.i, align 2
  store i8* %.idx.val, i8** %text.i, align 8, !tbaa !107
  %call.i44 = call i64 @strlen(i8* %.idx.val) #4
  %conv.i = trunc i64 %call.i44 to i32
  store i32 %conv.i, i32* %len.i45, align 8, !tbaa !109
  %14 = load i32* %line.i, align 4, !tbaa !44
  %inc.i = add i32 %14, 1
  store i32 %inc.i, i32* %line.i, align 4, !tbaa !44
  %call4.i = call zeroext i1 @_cpp_execute_include(%struct.cpp_reader* %pfile, %struct.cpp_token* %header.i, i32 3) #4
  call void @llvm.lifetime.end(i64 24, i8* %10) #4
  br i1 %call4.i, label %if.then12, label %if.end13

if.then12:                                        ; preds = %while.body
  %15 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !55
  %return_at_eof = getelementptr inbounds %struct.cpp_buffer* %15, i64 0, i32 14
  store i8 1, i8* %return_at_eof, align 1, !tbaa !110
  call void @cpp_scan_nooutput(%struct.cpp_reader* %pfile) #4
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %while.body
  %next14 = getelementptr inbounds %struct.pending_option* %13, i64 0, i32 0
  %16 = load %struct.pending_option** %next14, align 8, !tbaa !112
  %17 = load %struct.cpp_pending** %pending, align 8, !tbaa !42
  %imacros_head17 = getelementptr inbounds %struct.cpp_pending* %17, i64 0, i32 10
  store %struct.pending_option* %16, %struct.pending_option** %imacros_head17, align 8, !tbaa !103
  %18 = bitcast %struct.pending_option* %13 to i8*
  call void @free(i8* %18)
  %19 = load %struct.cpp_pending** %pending, align 8, !tbaa !42
  %imacros_head = getelementptr inbounds %struct.cpp_pending* %19, i64 0, i32 10
  %20 = load %struct.pending_option** %imacros_head, align 8, !tbaa !103
  %cmp = icmp eq %struct.pending_option* %20, null
  br i1 %cmp, label %if.end18, label %while.body

if.end18:                                         ; preds = %if.end13, %while.cond.preheader, %if.end.if.end18_crit_edge
  %21 = phi %struct.cpp_pending* [ %.pre51, %if.end.if.end18_crit_edge ], [ %8, %while.cond.preheader ], [ %19, %if.end13 ]
  %directive_head21 = getelementptr inbounds %struct.cpp_pending* %21, i64 0, i32 0
  %22 = load %struct.pending_option** %directive_head21, align 8, !tbaa !113
  %tobool4.i = icmp eq %struct.pending_option* %22, null
  br i1 %tobool4.i, label %free_chain.exit, label %while.body.i

while.body.i:                                     ; preds = %if.end18, %while.body.i
  %head.addr.05.i = phi %struct.pending_option* [ %23, %while.body.i ], [ %22, %if.end18 ]
  %next1.i = getelementptr inbounds %struct.pending_option* %head.addr.05.i, i64 0, i32 0
  %23 = load %struct.pending_option** %next1.i, align 8, !tbaa !112
  %24 = bitcast %struct.pending_option* %head.addr.05.i to i8*
  call void @free(i8* %24) #4
  %tobool.i = icmp eq %struct.pending_option* %23, null
  br i1 %tobool.i, label %free_chain.exit, label %while.body.i

free_chain.exit:                                  ; preds = %while.body.i, %if.end18
  %call22 = call zeroext i1 @_cpp_push_next_buffer(%struct.cpp_reader* %pfile)
  ret void
}

declare void @_cpp_do_file_change(%struct.cpp_reader*, i32, i8*, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @init_builtins(%struct.cpp_reader* %pfile) #0 {
entry:
  %user_label_prefix = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 10
  %0 = load i8** @version_string, align 8, !tbaa !46
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %b.0115 = phi %struct.builtin* [ bitcast (<{ { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] } }>* @builtin_array to %struct.builtin*), %entry ], [ %incdec.ptr, %for.inc ]
  %flags = getelementptr inbounds %struct.builtin* %b.0115, i64 0, i32 3
  %1 = load i16* %flags, align 2, !tbaa !114
  %conv = zext i16 %1 to i32
  %and = and i32 %conv, 8
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %name = getelementptr inbounds %struct.builtin* %b.0115, i64 0, i32 0
  %2 = load i8** %name, align 8, !tbaa !116
  %len = getelementptr inbounds %struct.builtin* %b.0115, i64 0, i32 4
  %3 = load i16* %len, align 2, !tbaa !117
  %conv1 = zext i16 %3 to i32
  %call = call %struct.cpp_hashnode* @cpp_lookup(%struct.cpp_reader* %pfile, i8* %2, i32 %conv1) #4
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4
  store i8 1, i8* %type, align 4
  %flags2 = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 5
  %4 = load i8* %flags2, align 1, !tbaa !99
  %or = or i8 %4, 20
  store i8 %or, i8* %flags2, align 1, !tbaa !99
  %builtin = getelementptr inbounds %struct.builtin* %b.0115, i64 0, i32 2
  %5 = load i8* %builtin, align 1, !tbaa !118
  %conv5 = zext i8 %5 to i32
  %value = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 6
  %builtin6 = bitcast %union.anon.0* %value to i32*
  store i32 %conv5, i32* %builtin6, align 4, !tbaa !89
  br label %for.inc

if.else:                                          ; preds = %for.body
  %and9 = and i32 %conv, 1
  %tobool10 = icmp eq i32 %and9, 0
  br i1 %tobool10, label %if.else18, label %if.then11

if.then11:                                        ; preds = %if.else
  %len12 = getelementptr inbounds %struct.builtin* %b.0115, i64 0, i32 4
  %6 = load i16* %len12, align 2, !tbaa !117
  %conv13 = zext i16 %6 to i64
  %call14 = call i64 @strlen(i8* %0) #4
  %add = add i64 %conv13, 5
  %add15 = add i64 %add, %call14
  %7 = alloca i8, i64 %add15, align 1
  %name16 = getelementptr inbounds %struct.builtin* %b.0115, i64 0, i32 0
  %8 = load i8** %name16, align 8, !tbaa !116
  %call17 = call i32 (i8*, i8*, ...)* @sprintf(i8* %7, i8* getelementptr inbounds ([9 x i8]* @.str127, i64 0, i64 0), i8* %8, i8* %0) #4
  br label %if.end33

if.else18:                                        ; preds = %if.else
  %and21 = and i32 %conv, 2
  %tobool22 = icmp eq i32 %and21, 0
  %value25 = getelementptr inbounds %struct.builtin* %b.0115, i64 0, i32 1
  %val.0.in = select i1 %tobool22, i8** %value25, i8** %user_label_prefix
  %val.0 = load i8** %val.0.in, align 8
  %len26 = getelementptr inbounds %struct.builtin* %b.0115, i64 0, i32 4
  %9 = load i16* %len26, align 2, !tbaa !117
  %conv27 = zext i16 %9 to i64
  %call28 = call i64 @strlen(i8* %val.0) #4
  %add29 = add i64 %call28, 3
  %add30 = add i64 %add29, %conv27
  %10 = alloca i8, i64 %add30, align 1
  %name31 = getelementptr inbounds %struct.builtin* %b.0115, i64 0, i32 0
  %11 = load i8** %name31, align 8, !tbaa !116
  %call32 = call i32 (i8*, i8*, ...)* @sprintf(i8* %10, i8* getelementptr inbounds ([7 x i8]* @.str128, i64 0, i64 0), i8* %11, i8* %val.0) #4
  br label %if.end33

if.end33:                                         ; preds = %if.else18, %if.then11
  %str.0 = phi i8* [ %7, %if.then11 ], [ %10, %if.else18 ]
  call void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* %str.0) #4
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.end33
  %incdec.ptr = getelementptr inbounds %struct.builtin* %b.0115, i64 1
  %cmp = icmp ult %struct.builtin* %incdec.ptr, bitcast (i8** getelementptr inbounds (<{ { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] }, { i8*, i8*, i8, i16, i16, [2 x i8] } }>* @builtin_array, i64 1, i32 0, i32 0) to %struct.builtin*)
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc
  %cplusplus = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  %12 = load i8* %cplusplus, align 1, !tbaa !25
  %tobool36 = icmp eq i8 %12, 0
  br i1 %tobool36, label %if.end38, label %if.then37

if.then37:                                        ; preds = %for.end
  call void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([14 x i8]* @.str129, i64 0, i64 0)) #4
  call void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([15 x i8]* @.str130, i64 0, i64 0)) #4
  br label %if.end38

if.end38:                                         ; preds = %for.end, %if.then37
  %objc = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  %13 = load i8* %objc, align 1, !tbaa !23
  %tobool40 = icmp eq i8 %13, 0
  br i1 %tobool40, label %if.end42, label %if.then41

if.then41:                                        ; preds = %if.end38
  call void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([11 x i8]* @.str131, i64 0, i64 0)) #4
  br label %if.end42

if.end42:                                         ; preds = %if.end38, %if.then41
  %lang = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  %14 = load i32* %lang, align 4, !tbaa !1
  %cmp44 = icmp eq i32 %14, 3
  br i1 %cmp44, label %if.then46, label %if.else47

if.then46:                                        ; preds = %if.end42
  call void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([25 x i8]* @.str132, i64 0, i64 0)) #4
  br label %if.end52

if.else47:                                        ; preds = %if.end42
  %c99 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  %15 = load i8* %c99, align 1, !tbaa !21
  %tobool49 = icmp eq i8 %15, 0
  br i1 %tobool49, label %if.end52, label %if.then50

if.then50:                                        ; preds = %if.else47
  call void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([25 x i8]* @.str133, i64 0, i64 0)) #4
  br label %if.end52

if.end52:                                         ; preds = %if.else47, %if.then50, %if.then46
  %signed_char = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 13
  %16 = load i8* %signed_char, align 1, !tbaa !41
  %cmp55 = icmp eq i8 %16, 0
  br i1 %cmp55, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end52
  call void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([20 x i8]* @.str134, i64 0, i64 0)) #4
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %if.end52
  %17 = load i32* %lang, align 4, !tbaa !1
  switch i32 %17, label %if.end80 [
    i32 2, label %if.then72
    i32 3, label %if.then72
    i32 4, label %if.then72
    i32 9, label %if.then78
  ]

if.then72:                                        ; preds = %if.end58, %if.end58, %if.end58
  call void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([18 x i8]* @.str135, i64 0, i64 0)) #4
  br label %if.end80

if.then78:                                        ; preds = %if.end58
  call void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([16 x i8]* @.str136, i64 0, i64 0)) #4
  br label %if.end80

if.end80:                                         ; preds = %if.end58, %if.then78, %if.then72
  ret void
}

declare void @cpp_scan_nooutput(%struct.cpp_reader*) #1

; Function Attrs: nounwind uwtable
define zeroext i1 @_cpp_push_next_buffer(%struct.cpp_reader* %pfile) #0 {
entry:
  %header.i = alloca %struct.cpp_token, align 8
  %pending = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 3
  %0 = load %struct.cpp_pending** %pending, align 8, !tbaa !42
  %tobool = icmp eq %struct.cpp_pending* %0, null
  br i1 %tobool, label %if.end27, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %imacros_head = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 10
  %1 = load %struct.pending_option** %imacros_head, align 8, !tbaa !103
  %cmp = icmp eq %struct.pending_option* %1, null
  br i1 %cmp, label %while.cond.preheader, label %if.end27

while.cond.preheader:                             ; preds = %land.lhs.true
  %preprocessed = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 43
  %2 = bitcast %struct.cpp_token* %header.i to i8*
  %type.i = getelementptr inbounds %struct.cpp_token* %header.i, i64 0, i32 2
  %text.i = getelementptr inbounds %struct.cpp_token* %header.i, i64 0, i32 4, i32 0, i32 1
  %len.i = getelementptr inbounds %struct.cpp_token* %header.i, i64 0, i32 4, i32 0, i32 0
  %line.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 4
  br label %while.body

while.body:                                       ; preds = %if.end11.while.body_crit_edge, %while.cond.preheader
  %3 = phi %struct.cpp_pending* [ %0, %while.cond.preheader ], [ %.pre, %if.end11.while.body_crit_edge ]
  %pushed.045 = phi i8 [ 0, %while.cond.preheader ], [ %pushed.1, %if.end11.while.body_crit_edge ]
  %include_head = getelementptr inbounds %struct.cpp_pending* %3, i64 0, i32 12
  %4 = load %struct.pending_option** %include_head, align 8, !tbaa !119
  %cmp6 = icmp eq %struct.pending_option* %4, null
  br i1 %cmp6, label %if.then16, label %if.end

if.end:                                           ; preds = %while.body
  %5 = load i8* %preprocessed, align 1, !tbaa !83
  %tobool9 = icmp eq i8 %5, 0
  br i1 %tobool9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end
  %.idx = getelementptr %struct.pending_option* %4, i64 0, i32 1
  %.idx.val = load i8** %.idx, align 8, !tbaa !106
  call void @llvm.lifetime.start(i64 24, i8* %2) #4
  store i8 61, i8* %type.i, align 2
  store i8* %.idx.val, i8** %text.i, align 8, !tbaa !107
  %call.i = call i64 @strlen(i8* %.idx.val) #4
  %conv.i = trunc i64 %call.i to i32
  store i32 %conv.i, i32* %len.i, align 8, !tbaa !109
  %6 = load i32* %line.i, align 4, !tbaa !44
  %inc.i = add i32 %6, 1
  store i32 %inc.i, i32* %line.i, align 4, !tbaa !44
  %call4.i = call zeroext i1 @_cpp_execute_include(%struct.cpp_reader* %pfile, %struct.cpp_token* %header.i, i32 3) #4
  call void @llvm.lifetime.end(i64 24, i8* %2) #4
  %frombool = zext i1 %call4.i to i8
  %.pre48 = load %struct.cpp_pending** %pending, align 8, !tbaa !42
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then10
  %7 = phi %struct.cpp_pending* [ %3, %if.end ], [ %.pre48, %if.then10 ]
  %pushed.1 = phi i8 [ %pushed.045, %if.end ], [ %frombool, %if.then10 ]
  %next = getelementptr inbounds %struct.pending_option* %4, i64 0, i32 0
  %8 = load %struct.pending_option** %next, align 8, !tbaa !112
  %include_head14 = getelementptr inbounds %struct.cpp_pending* %7, i64 0, i32 12
  store %struct.pending_option* %8, %struct.pending_option** %include_head14, align 8, !tbaa !119
  %9 = bitcast %struct.pending_option* %4 to i8*
  call void @free(i8* %9)
  %10 = and i8 %pushed.1, 1
  %tobool3 = icmp eq i8 %10, 0
  br i1 %tobool3, label %if.end11.while.body_crit_edge, label %if.end27

if.end11.while.body_crit_edge:                    ; preds = %if.end11
  %.pre = load %struct.cpp_pending** %pending, align 8, !tbaa !42
  br label %while.body

if.then16:                                        ; preds = %while.body
  %11 = bitcast %struct.cpp_pending* %3 to i8*
  call void @free(i8* %11)
  store %struct.cpp_pending* null, %struct.cpp_pending** %pending, align 8, !tbaa !42
  %12 = load i8* %preprocessed, align 1, !tbaa !83
  %tobool23 = icmp eq i8 %12, 0
  br i1 %tobool23, label %if.then24, label %if.end27

if.then24:                                        ; preds = %if.then16
  %maps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 2, i32 0
  %13 = load %struct.line_map** %maps, align 8, !tbaa !120
  %to_file = getelementptr inbounds %struct.line_map* %13, i64 0, i32 0
  %14 = load i8** %to_file, align 8, !tbaa !86
  call void @_cpp_do_file_change(%struct.cpp_reader* %pfile, i32 2, i8* %14, i32 1, i32 0) #4
  br label %if.end27

if.end27:                                         ; preds = %if.end11, %if.then16, %entry, %if.then24, %land.lhs.true
  %pushed.2 = phi i8 [ %pushed.045, %if.then16 ], [ %pushed.045, %if.then24 ], [ 0, %land.lhs.true ], [ 0, %entry ], [ %pushed.1, %if.end11 ]
  %15 = and i8 %pushed.2, 1
  %tobool28 = icmp ne i8 %15, 0
  ret i1 %tobool28
}

; Function Attrs: nounwind uwtable
define void @cpp_finish(%struct.cpp_reader* %pfile) #0 {
entry:
  %buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !55
  %tobool12 = icmp eq %struct.cpp_buffer* %0, null
  br i1 %tobool12, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  tail call void @_cpp_pop_buffer(%struct.cpp_reader* %pfile) #4
  %1 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !55
  %tobool = icmp eq %struct.cpp_buffer* %1, null
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %entry
  %print_deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 21
  %2 = load i8* %print_deps, align 1, !tbaa !80
  %tobool1 = icmp eq i8 %2, 0
  br i1 %tobool1, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.end
  %errors = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 20
  %3 = load i32* %errors, align 4, !tbaa !67
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %deps_file.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 4
  %4 = load i8** %deps_file.i, align 8, !tbaa !121
  %5 = load i8* %4, align 1, !tbaa !89
  %cmp.i = icmp eq i8 %5, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %6 = load %struct._IO_FILE** @stdout, align 8, !tbaa !46
  br label %if.end11.i

if.else.i:                                        ; preds = %if.then
  %print_deps_append.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 24
  %7 = load i8* %print_deps_append.i, align 1, !tbaa !122
  %tobool.i = icmp ne i8 %7, 0
  %cond.i = select i1 %tobool.i, i8* getelementptr inbounds ([2 x i8]* @.str125, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str124, i64 0, i64 0)
  %call.i = tail call %struct._IO_FILE* @fopen(i8* %4, i8* %cond.i) #4
  %cmp6.i = icmp eq %struct._IO_FILE* %call.i, null
  br i1 %cmp6.i, label %if.then8.i, label %if.end11.i

if.then8.i:                                       ; preds = %if.else.i
  %8 = load i8** %deps_file.i, align 8, !tbaa !121
  tail call void @cpp_notice_from_errno(%struct.cpp_reader* %pfile, i8* %8) #4
  br label %if.end

if.end11.i:                                       ; preds = %if.else.i, %if.then.i
  %deps_stream.0.i = phi %struct._IO_FILE* [ %6, %if.then.i ], [ %call.i, %if.else.i ]
  %deps.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 31
  %9 = load %struct.deps** %deps.i, align 8, !tbaa !43
  tail call void @deps_write(%struct.deps* %9, %struct._IO_FILE* %deps_stream.0.i, i32 72) #4
  %deps_phony_targets.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 22
  %10 = load i8* %deps_phony_targets.i, align 1, !tbaa !123
  %tobool13.i = icmp eq i8 %10, 0
  br i1 %tobool13.i, label %if.end16.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  %11 = load %struct.deps** %deps.i, align 8, !tbaa !43
  tail call void @deps_phony_targets(%struct.deps* %11, %struct._IO_FILE* %deps_stream.0.i) #4
  br label %if.end16.i

if.end16.i:                                       ; preds = %if.then14.i, %if.end11.i
  %12 = load %struct._IO_FILE** @stdout, align 8, !tbaa !46
  %cmp17.i = icmp eq %struct._IO_FILE* %deps_stream.0.i, %12
  br i1 %cmp17.i, label %if.end, label %if.then19.i

if.then19.i:                                      ; preds = %if.end16.i
  %call20.i = tail call i32 @ferror(%struct._IO_FILE* %deps_stream.0.i) #4
  %tobool21.i = icmp eq i32 %call20.i, 0
  br i1 %tobool21.i, label %lor.lhs.false.i, label %if.then25.i

lor.lhs.false.i:                                  ; preds = %if.then19.i
  %call22.i = tail call i32 @fclose(%struct._IO_FILE* %deps_stream.0.i) #4
  %cmp23.i = icmp eq i32 %call22.i, 0
  br i1 %cmp23.i, label %if.end, label %if.then25.i

if.then25.i:                                      ; preds = %lor.lhs.false.i, %if.then19.i
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_fatal(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([20 x i8]* @.str126, i64 0, i64 0)) #4
  br label %if.end

if.end:                                           ; preds = %if.then25.i, %lor.lhs.false.i, %if.end16.i, %if.then8.i, %while.end, %land.lhs.true
  %print_include_names = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 25
  %13 = load i8* %print_include_names, align 1, !tbaa !81
  %tobool4 = icmp eq i8 %13, 0
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  tail call void @_cpp_report_missing_guards(%struct.cpp_reader* %pfile) #4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then5
  ret void
}

declare void @_cpp_report_missing_guards(%struct.cpp_reader*) #1

; Function Attrs: nounwind uwtable
define i32 @cpp_handle_option(%struct.cpp_reader* %pfile, i32 %argc, i8** nocapture readonly %argv, i32 %ignore) #0 {
entry:
  %endptr = alloca i8*, align 8
  %pending = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 3
  %0 = load %struct.cpp_pending** %pending, align 8, !tbaa !42
  %1 = load i8** %argv, align 8, !tbaa !46
  %2 = load i8* %1, align 1, !tbaa !89
  %cmp = icmp eq i8 %2, 45
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %arrayidx5 = getelementptr inbounds i8* %1, i64 1
  %3 = load i8* %arrayidx5, align 1, !tbaa !89
  %cmp7 = icmp eq i8 %3, 0
  br i1 %cmp7, label %if.then, label %while.cond.outer.i

if.then:                                          ; preds = %entry, %lor.lhs.false
  %in_fname = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 0
  %4 = load i8** %in_fname, align 8, !tbaa !124
  %cmp10 = icmp eq i8* %4, null
  br i1 %cmp10, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.then
  store i8* %1, i8** %in_fname, align 8, !tbaa !124
  br label %if.end465

if.else:                                          ; preds = %if.then
  %out_fname = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 1
  %5 = load i8** %out_fname, align 8, !tbaa !125
  %cmp18 = icmp eq i8* %5, null
  br i1 %cmp18, label %if.then20, label %if.else25

if.then20:                                        ; preds = %if.else
  store i8* %1, i8** %out_fname, align 8, !tbaa !125
  br label %if.end465

if.else25:                                        ; preds = %if.else
  %6 = load i8** @progname, align 8, !tbaa !46
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_fatal(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([50 x i8]* @.str6, i64 0, i64 0), i8* %6) #4
  br label %if.end465

while.cond.outer.i:                               ; preds = %if.end.i, %if.then.i, %lor.lhs.false
  %mn.0.ph.i = phi i32 [ 0, %lor.lhs.false ], [ %add5.i, %if.then.i ], [ %add13.i, %if.end.i ]
  %mx.0.ph.i = phi i32 [ 68, %lor.lhs.false ], [ %mx.0.i, %if.then.i ], [ %mx.0.i, %if.end.i ]
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.else.i, %while.cond.outer.i
  %mx.0.i = phi i32 [ %div.i, %if.else.i ], [ %mx.0.ph.i, %while.cond.outer.i ]
  %cmp.i = icmp ugt i32 %mx.0.i, %mn.0.ph.i
  br i1 %cmp.i, label %while.body.i, label %return

while.body.i:                                     ; preds = %while.cond.i
  %add.i = add i32 %mx.0.i, %mn.0.ph.i
  %div.i = lshr i32 %add.i, 1
  %idxprom.i = zext i32 %div.i to i64
  %opt_len1.i = getelementptr inbounds [68 x %struct.cl_option]* bitcast (<{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }>* @cl_options to [68 x %struct.cl_option]*), i64 0, i64 %idxprom.i, i32 2
  %7 = load i64* %opt_len1.i, align 16, !tbaa !126
  %opt_text.i = getelementptr inbounds [68 x %struct.cl_option]* bitcast (<{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }>* @cl_options to [68 x %struct.cl_option]*), i64 0, i64 %idxprom.i, i32 0
  %8 = load i8** %opt_text.i, align 16, !tbaa !128
  %call.i = tail call i32 @memcmp(i8* %arrayidx5, i8* %8, i64 %7) #4
  %cmp4.i = icmp sgt i32 %call.i, 0
  br i1 %cmp4.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  %add5.i = add i32 %div.i, 1
  br label %while.cond.outer.i

if.else.i:                                        ; preds = %while.body.i
  %cmp6.i = icmp slt i32 %call.i, 0
  br i1 %cmp6.i, label %while.cond.i, label %if.else8.i

if.else8.i:                                       ; preds = %if.else.i
  %arrayidx5.sum = add i64 %7, 1
  %arrayidx9.i = getelementptr inbounds i8* %1, i64 %arrayidx5.sum
  %9 = load i8* %arrayidx9.i, align 1, !tbaa !89
  %cmp10.i = icmp eq i8 %9, 0
  br i1 %cmp10.i, label %if.end34, label %if.end.i

if.end.i:                                         ; preds = %if.else8.i
  %add13.i = add i32 %div.i, 1
  %msg.i = getelementptr inbounds [68 x %struct.cl_option]* bitcast (<{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }>* @cl_options to [68 x %struct.cl_option]*), i64 0, i64 %idxprom.i, i32 1
  %10 = load i8** %msg.i, align 8, !tbaa !129
  %tobool.i = icmp eq i8* %10, null
  br i1 %tobool.i, label %while.cond.outer.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end.i
  %cmp1776.i = icmp ult i32 %add13.i, 68
  br i1 %cmp1776.i, label %for.body.i, label %if.end34

for.body.i:                                       ; preds = %for.cond.preheader.i, %if.end34.i
  %mx.178.i = phi i32 [ %mx.1.mn.1.i, %if.end34.i ], [ %div.i, %for.cond.preheader.i ]
  %mn.177.i = phi i32 [ %inc.i, %if.end34.i ], [ %add13.i, %for.cond.preheader.i ]
  %idxprom19.i = zext i32 %mn.177.i to i64
  %opt_len21.i = getelementptr inbounds [68 x %struct.cl_option]* bitcast (<{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }>* @cl_options to [68 x %struct.cl_option]*), i64 0, i64 %idxprom19.i, i32 2
  %11 = load i64* %opt_len21.i, align 16, !tbaa !126
  %opt_text24.i = getelementptr inbounds [68 x %struct.cl_option]* bitcast (<{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }>* @cl_options to [68 x %struct.cl_option]*), i64 0, i64 %idxprom19.i, i32 0
  %12 = load i8** %opt_text24.i, align 16, !tbaa !128
  %call25.i = tail call i32 @memcmp(i8* %arrayidx5, i8* %12, i64 %11) #4
  %tobool26.i = icmp eq i32 %call25.i, 0
  br i1 %tobool26.i, label %if.end28.i, label %parse_option.exit

if.end28.i:                                       ; preds = %for.body.i
  %arrayidx5.sum830 = add i64 %11, 1
  %arrayidx29.i = getelementptr inbounds i8* %1, i64 %arrayidx5.sum830
  %13 = load i8* %arrayidx29.i, align 1, !tbaa !89
  %cmp31.i = icmp eq i8 %13, 0
  br i1 %cmp31.i, label %parse_option.exit, label %if.end34.i

if.end34.i:                                       ; preds = %if.end28.i
  %msg37.i = getelementptr inbounds [68 x %struct.cl_option]* bitcast (<{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }>* @cl_options to [68 x %struct.cl_option]*), i64 0, i64 %idxprom19.i, i32 1
  %14 = load i8** %msg37.i, align 8, !tbaa !129
  %tobool38.i = icmp eq i8* %14, null
  %mx.1.mn.1.i = select i1 %tobool38.i, i32 %mx.178.i, i32 %mn.177.i
  %inc.i = add i32 %mn.177.i, 1
  %cmp17.i = icmp ult i32 %inc.i, 68
  br i1 %cmp17.i, label %for.body.i, label %parse_option.exit

parse_option.exit:                                ; preds = %for.body.i, %if.end28.i, %if.end34.i
  %retval.0.i = phi i32 [ %mn.177.i, %if.end28.i ], [ %mx.178.i, %for.body.i ], [ %mx.1.mn.1.i, %if.end34.i ]
  %cmp31 = icmp slt i32 %retval.0.i, 0
  br i1 %cmp31, label %return, label %if.end34

if.end34:                                         ; preds = %if.else8.i, %for.cond.preheader.i, %parse_option.exit
  %retval.0.i827 = phi i32 [ %retval.0.i, %parse_option.exit ], [ %div.i, %for.cond.preheader.i ], [ %div.i, %if.else8.i ]
  %idxprom35 = sext i32 %retval.0.i827 to i64
  %opt_code37 = getelementptr inbounds [68 x %struct.cl_option]* bitcast (<{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }>* @cl_options to [68 x %struct.cl_option]*), i64 0, i64 %idxprom35, i32 3
  %15 = load i32* %opt_code37, align 8, !tbaa !130
  %msg = getelementptr inbounds [68 x %struct.cl_option]* bitcast (<{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }>* @cl_options to [68 x %struct.cl_option]*), i64 0, i64 %idxprom35, i32 1
  %16 = load i8** %msg, align 8, !tbaa !129
  %tobool = icmp eq i8* %16, null
  br i1 %tobool, label %if.end64, label %if.then40

if.then40:                                        ; preds = %if.end34
  %opt_len = getelementptr inbounds [68 x %struct.cl_option]* bitcast (<{ { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] }, { i8*, i8*, i64, i32, [4 x i8] } }>* @cl_options to [68 x %struct.cl_option]*), i64 0, i64 %idxprom35, i32 2
  %17 = load i64* %opt_len, align 16, !tbaa !126
  %add = add i64 %17, 1
  %arrayidx45 = getelementptr inbounds i8* %1, i64 %add
  %18 = load i8* %arrayidx45, align 1, !tbaa !89
  %cmp48 = icmp eq i8 %18, 0
  %cmp50 = icmp ne i32 %15, 21
  %or.cond = and i1 %cmp48, %cmp50
  br i1 %or.cond, label %if.then52, label %if.end64

if.then52:                                        ; preds = %if.then40
  %arrayidx54 = getelementptr inbounds i8** %argv, i64 1
  %19 = load i8** %arrayidx54, align 8, !tbaa !46
  %tobool55 = icmp eq i8* %19, null
  br i1 %tobool55, label %if.then56, label %if.end64

if.then56:                                        ; preds = %if.then52
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_fatal(%struct.cpp_reader* %pfile, i8* %16, i8* %1) #4
  br label %return

if.end64:                                         ; preds = %if.then52, %if.end34, %if.then40
  %20 = phi i8* [ %19, %if.then52 ], [ %1, %if.then40 ], [ %1, %if.end34 ]
  %arg.0 = phi i8* [ %19, %if.then52 ], [ %arrayidx45, %if.then40 ], [ null, %if.end34 ]
  %i.0 = phi i32 [ 1, %if.then52 ], [ 0, %if.then40 ], [ 0, %if.end34 ]
  switch i32 %15, label %if.end465 [
    i32 21, label %sw.bb312
    i32 23, label %sw.bb
    i32 24, label %sw.bb66
    i32 25, label %sw.bb69
    i32 28, label %sw.bb71
    i32 26, label %sw.bb73
    i32 29, label %sw.bb76
    i32 27, label %sw.bb78
    i32 30, label %sw.bb81
    i32 32, label %sw.bb83
    i32 31, label %sw.bb86
    i32 67, label %sw.bb108
    i32 33, label %sw.bb110
    i32 2, label %sw.bb110
    i32 3, label %sw.bb112
    i32 4, label %sw.bb115
    i32 65, label %sw.bb118
    i32 66, label %sw.bb121
    i32 6, label %sw.bb123
    i32 19, label %sw.bb125
    i32 0, label %sw.bb127
    i32 8, label %sw.bb129
    i32 7, label %sw.bb131
    i32 51, label %sw.bb132
    i32 50, label %sw.bb134
    i32 64, label %sw.bb136
    i32 1, label %sw.bb138
    i32 52, label %sw.bb141
    i32 37, label %sw.bb143
    i32 42, label %sw.bb148
    i32 43, label %sw.bb149
    i32 45, label %sw.bb150
    i32 46, label %sw.bb151
    i32 41, label %sw.bb152
    i32 53, label %sw.bb153
    i32 57, label %sw.bb154
    i32 59, label %sw.bb155
    i32 58, label %sw.bb155
    i32 61, label %sw.bb156
    i32 60, label %sw.bb157
    i32 54, label %sw.bb157
    i32 44, label %sw.bb157
    i32 63, label %sw.bb158
    i32 62, label %sw.bb158
    i32 56, label %sw.bb158
    i32 55, label %sw.bb158
    i32 47, label %sw.bb159
    i32 48, label %sw.bb161
    i32 49, label %sw.bb163
    i32 22, label %while.cond.preheader
    i32 13, label %sw.bb188
    i32 10, label %sw.bb190
    i32 14, label %sw.bb193
    i32 12, label %sw.bb198
    i32 16, label %sw.bb200
    i32 17, label %sw.bb202
    i32 18, label %sw.bb202
    i32 11, label %sw.bb205
    i32 15, label %sw.bb210
    i32 5, label %sw.bb215
    i32 20, label %sw.bb231
    i32 9, label %sw.bb232
    i32 38, label %sw.bb248
    i32 36, label %sw.bb250
    i32 35, label %sw.bb250
    i32 39, label %sw.bb274
    i32 40, label %sw.bb274
    i32 34, label %sw.bb310
  ]

while.cond.preheader:                             ; preds = %if.end64
  %21 = load i8* %arg.0, align 1, !tbaa !89
  %cmp175839 = icmp eq i8 %21, 0
  br i1 %cmp175839, label %if.end465, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %dump_macros = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 46
  %dump_includes = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 47
  br label %while.body

sw.bb:                                            ; preds = %if.end64
  %user_label_prefix = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 10
  store i8* getelementptr inbounds ([2 x i8]* @.str7, i64 0, i64 0), i8** %user_label_prefix, align 8, !tbaa !131
  br label %if.end465

sw.bb66:                                          ; preds = %if.end64
  %user_label_prefix68 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 10
  store i8* getelementptr inbounds ([1 x i8]* @.str8, i64 0, i64 0), i8** %user_label_prefix68, align 8, !tbaa !131
  br label %if.end465

sw.bb69:                                          ; preds = %if.end64
  %operator_names = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 49
  store i8 0, i8* %operator_names, align 1, !tbaa !40
  br label %if.end465

sw.bb71:                                          ; preds = %if.end64
  %preprocessed = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 43
  store i8 1, i8* %preprocessed, align 1, !tbaa !83
  br label %if.end465

sw.bb73:                                          ; preds = %if.end64
  %preprocessed75 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 43
  store i8 0, i8* %preprocessed75, align 1, !tbaa !83
  br label %if.end465

sw.bb76:                                          ; preds = %if.end64
  %show_column = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 48
  store i8 1, i8* %show_column, align 1, !tbaa !38
  br label %if.end465

sw.bb78:                                          ; preds = %if.end64
  %show_column80 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 48
  store i8 0, i8* %show_column80, align 1, !tbaa !38
  br label %if.end465

sw.bb81:                                          ; preds = %if.end64
  %signed_char = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 13
  store i8 1, i8* %signed_char, align 1, !tbaa !41
  br label %if.end465

sw.bb83:                                          ; preds = %if.end64
  %signed_char85 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 13
  store i8 0, i8* %signed_char85, align 1, !tbaa !41
  br label %if.end465

sw.bb86:                                          ; preds = %if.end64
  %22 = load i8* %arg.0, align 1, !tbaa !89
  %cmp89 = icmp eq i8 %22, 0
  br i1 %cmp89, label %if.end465, label %if.then91

if.then91:                                        ; preds = %sw.bb86
  %call92 = call i64 @strtol(i8* %arg.0, i8** %endptr, i32 10) #4
  %23 = load i8** %endptr, align 8, !tbaa !46
  %24 = load i8* %23, align 1, !tbaa !89
  %cmp94 = icmp eq i8 %24, 0
  %cmp97 = icmp sgt i64 %call92, 0
  %or.cond467 = and i1 %cmp94, %cmp97
  %cmp100 = icmp slt i64 %call92, 101
  %or.cond468 = and i1 %or.cond467, %cmp100
  br i1 %or.cond468, label %if.then102, label %if.end465

if.then102:                                       ; preds = %if.then91
  %conv103 = trunc i64 %call92 to i32
  %tabstop105 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 2
  store i32 %conv103, i32* %tabstop105, align 4, !tbaa !39
  br label %if.end465

sw.bb108:                                         ; preds = %if.end64
  %inhibit_warnings = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 27
  store i8 1, i8* %inhibit_warnings, align 1, !tbaa !132
  br label %if.end465

sw.bb110:                                         ; preds = %if.end64, %if.end64
  %25 = load %struct._IO_FILE** @stdout, align 8, !tbaa !46
  %26 = tail call i64 @fwrite(i8* getelementptr inbounds ([459 x i8]* @.str32, i64 0, i64 0), i64 458, i64 1, %struct._IO_FILE* %25) #4
  %27 = tail call i64 @fwrite(i8* getelementptr inbounds ([504 x i8]* @.str33, i64 0, i64 0), i64 503, i64 1, %struct._IO_FILE* %25) #4
  %28 = tail call i64 @fwrite(i8* getelementptr inbounds ([332 x i8]* @.str34, i64 0, i64 0), i64 331, i64 1, %struct._IO_FILE* %25) #4
  %29 = tail call i64 @fwrite(i8* getelementptr inbounds ([299 x i8]* @.str35, i64 0, i64 0), i64 298, i64 1, %struct._IO_FILE* %25) #4
  %30 = tail call i64 @fwrite(i8* getelementptr inbounds ([499 x i8]* @.str36, i64 0, i64 0), i64 498, i64 1, %struct._IO_FILE* %25) #4
  %31 = tail call i64 @fwrite(i8* getelementptr inbounds ([406 x i8]* @.str37, i64 0, i64 0), i64 405, i64 1, %struct._IO_FILE* %25) #4
  %32 = tail call i64 @fwrite(i8* getelementptr inbounds ([383 x i8]* @.str38, i64 0, i64 0), i64 382, i64 1, %struct._IO_FILE* %25) #4
  %33 = tail call i64 @fwrite(i8* getelementptr inbounds ([399 x i8]* @.str39, i64 0, i64 0), i64 398, i64 1, %struct._IO_FILE* %25) #4
  %34 = tail call i64 @fwrite(i8* getelementptr inbounds ([156 x i8]* @.str40, i64 0, i64 0), i64 155, i64 1, %struct._IO_FILE* %25) #4
  %35 = tail call i64 @fwrite(i8* getelementptr inbounds ([370 x i8]* @.str41, i64 0, i64 0), i64 369, i64 1, %struct._IO_FILE* %25) #4
  %36 = tail call i64 @fwrite(i8* getelementptr inbounds ([418 x i8]* @.str42, i64 0, i64 0), i64 417, i64 1, %struct._IO_FILE* %25) #4
  %37 = tail call i64 @fwrite(i8* getelementptr inbounds ([446 x i8]* @.str43, i64 0, i64 0), i64 445, i64 1, %struct._IO_FILE* %25) #4
  %help_only = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 50
  store i8 1, i8* %help_only, align 1, !tbaa !133
  br label %if.end465

sw.bb112:                                         ; preds = %if.end64
  %help_only114 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 50
  store i8 1, i8* %help_only114, align 1, !tbaa !133
  br label %if.end465

sw.bb115:                                         ; preds = %if.end64
  %help_only117 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 50
  store i8 1, i8* %help_only117, align 1, !tbaa !133
  %print_version = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 39
  store i8 1, i8* %print_version, align 1, !tbaa !134
  br label %if.end465

sw.bb118:                                         ; preds = %if.end64
  %verbose = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 12
  store i8 1, i8* %verbose, align 1, !tbaa !78
  %print_version120 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 39
  store i8 1, i8* %print_version120, align 1, !tbaa !134
  br label %if.end465

sw.bb121:                                         ; preds = %if.end64
  %print_version122 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 39
  store i8 1, i8* %print_version122, align 1, !tbaa !134
  br label %if.end465

sw.bb123:                                         ; preds = %if.end64
  %discard_comments = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 17
  store i8 0, i8* %discard_comments, align 1, !tbaa !37
  br label %if.end465

sw.bb125:                                         ; preds = %if.end64
  %no_line_commands = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 37
  store i8 1, i8* %no_line_commands, align 1, !tbaa !135
  br label %if.end465

sw.bb127:                                         ; preds = %if.end64
  %dollars_in_ident = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 0, i8* %dollars_in_ident, align 1, !tbaa !31
  br label %if.end465

sw.bb129:                                         ; preds = %if.end64
  %print_include_names = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 25
  store i8 1, i8* %print_include_names, align 1, !tbaa !81
  br label %if.end465

sw.bb131:                                         ; preds = %if.end64
  %call.i687 = tail call noalias i8* @xmalloc(i64 24) #4
  %38 = bitcast i8* %call.i687 to %struct.pending_option*
  %arg.i = getelementptr inbounds i8* %call.i687, i64 8
  %39 = bitcast i8* %arg.i to i8**
  store i8* %arg.0, i8** %39, align 8, !tbaa !106
  %next.i = bitcast i8* %call.i687 to %struct.pending_option**
  store %struct.pending_option* null, %struct.pending_option** %next.i, align 8, !tbaa !112
  %handler1.i = getelementptr inbounds i8* %call.i687, i64 16
  %40 = bitcast i8* %handler1.i to void (%struct.cpp_reader*, i8*)**
  store void (%struct.cpp_reader*, i8*)* @cpp_define, void (%struct.cpp_reader*, i8*)** %40, align 8, !tbaa !104
  %directive_head.i = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 0
  %41 = load %struct.pending_option** %directive_head.i, align 8, !tbaa !113
  %tobool.i688 = icmp eq %struct.pending_option* %41, null
  br i1 %tobool.i688, label %if.then.i689, label %if.else.i690

if.then.i689:                                     ; preds = %sw.bb131
  store %struct.pending_option* %38, %struct.pending_option** %directive_head.i, align 8, !tbaa !113
  %directive_tail4.pre.i = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 1
  br label %new_pending_directive.exit

if.else.i690:                                     ; preds = %sw.bb131
  %directive_tail.i = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 1
  %42 = load %struct.pending_option** %directive_tail.i, align 8, !tbaa !136
  %next3.i = getelementptr inbounds %struct.pending_option* %42, i64 0, i32 0
  store %struct.pending_option* %38, %struct.pending_option** %next3.i, align 8, !tbaa !112
  br label %new_pending_directive.exit

new_pending_directive.exit:                       ; preds = %if.then.i689, %if.else.i690
  %directive_tail4.pre-phi.i = phi %struct.pending_option** [ %directive_tail.i, %if.else.i690 ], [ %directive_tail4.pre.i, %if.then.i689 ]
  store %struct.pending_option* %38, %struct.pending_option** %directive_tail4.pre-phi.i, align 8, !tbaa !136
  br label %if.end465

sw.bb132:                                         ; preds = %if.end64
  %pedantic_errors = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 26
  store i8 1, i8* %pedantic_errors, align 1, !tbaa !137
  br label %sw.bb134

sw.bb134:                                         ; preds = %if.end64, %sw.bb132
  %pedantic = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 42
  store i8 1, i8* %pedantic, align 1, !tbaa !138
  br label %if.end465

sw.bb136:                                         ; preds = %if.end64
  %trigraphs = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 1, i8* %trigraphs, align 1, !tbaa !29
  br label %if.end465

sw.bb138:                                         ; preds = %if.end64
  %cplusplus = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 1, i8* %cplusplus, align 1, !tbaa !25
  %cplusplus_comments = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments, align 1, !tbaa !33
  br label %if.end465

sw.bb141:                                         ; preds = %if.end64
  %remap = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 36
  store i8 1, i8* %remap, align 1, !tbaa !139
  br label %if.end465

sw.bb143:                                         ; preds = %if.end64
  %include_prefix = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 8
  store i8* %arg.0, i8** %include_prefix, align 8, !tbaa !88
  %call145 = tail call i64 @strlen(i8* %arg.0) #4
  %conv146 = trunc i64 %call145 to i32
  %include_prefix_len = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 9
  store i32 %conv146, i32* %include_prefix_len, align 4, !tbaa !140
  br label %if.end465

sw.bb148:                                         ; preds = %if.end64
  %lang1.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 0, i32* %lang1.i, align 4, !tbaa !1
  %c993.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 0, i8* %c993.i, align 1, !tbaa !21
  %objc5.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 0, i8* %objc5.i, align 1, !tbaa !23
  %cplusplus7.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 0, i8* %cplusplus7.i, align 1, !tbaa !25
  %extended_numbers9.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 1, i8* %extended_numbers9.i, align 1, !tbaa !27
  %trigraphs11.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 0, i8* %trigraphs11.i, align 1, !tbaa !29
  %dollars_in_ident13.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 1, i8* %dollars_in_ident13.i, align 1, !tbaa !31
  %cplusplus_comments15.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments15.i, align 1, !tbaa !33
  %digraphs17.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 1, i8* %digraphs17.i, align 1, !tbaa !35
  br label %if.end465

sw.bb149:                                         ; preds = %if.end64
  %lang1.i692 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 5, i32* %lang1.i692, align 4, !tbaa !1
  %c993.i693 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 0, i8* %c993.i693, align 1, !tbaa !21
  %objc5.i694 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 0, i8* %objc5.i694, align 1, !tbaa !23
  %cplusplus7.i695 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 1, i8* %cplusplus7.i695, align 1, !tbaa !25
  %extended_numbers9.i696 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 1, i8* %extended_numbers9.i696, align 1, !tbaa !27
  %trigraphs11.i697 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 0, i8* %trigraphs11.i697, align 1, !tbaa !29
  %dollars_in_ident13.i698 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 1, i8* %dollars_in_ident13.i698, align 1, !tbaa !31
  %cplusplus_comments15.i699 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments15.i699, align 1, !tbaa !33
  %digraphs17.i700 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 1, i8* %digraphs17.i700, align 1, !tbaa !35
  br label %if.end465

sw.bb150:                                         ; preds = %if.end64
  %lang1.i701 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 7, i32* %lang1.i701, align 4, !tbaa !1
  %c993.i702 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 0, i8* %c993.i702, align 1, !tbaa !21
  %objc5.i703 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 1, i8* %objc5.i703, align 1, !tbaa !23
  %cplusplus7.i704 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 0, i8* %cplusplus7.i704, align 1, !tbaa !25
  %extended_numbers9.i705 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 1, i8* %extended_numbers9.i705, align 1, !tbaa !27
  %trigraphs11.i706 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 0, i8* %trigraphs11.i706, align 1, !tbaa !29
  %dollars_in_ident13.i707 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 1, i8* %dollars_in_ident13.i707, align 1, !tbaa !31
  %cplusplus_comments15.i708 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments15.i708, align 1, !tbaa !33
  %digraphs17.i709 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 1, i8* %digraphs17.i709, align 1, !tbaa !35
  br label %if.end465

sw.bb151:                                         ; preds = %if.end64
  %lang1.i710 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 8, i32* %lang1.i710, align 4, !tbaa !1
  %c993.i711 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 0, i8* %c993.i711, align 1, !tbaa !21
  %objc5.i712 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 1, i8* %objc5.i712, align 1, !tbaa !23
  %cplusplus7.i713 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 1, i8* %cplusplus7.i713, align 1, !tbaa !25
  %extended_numbers9.i714 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 1, i8* %extended_numbers9.i714, align 1, !tbaa !27
  %trigraphs11.i715 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 0, i8* %trigraphs11.i715, align 1, !tbaa !29
  %dollars_in_ident13.i716 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 1, i8* %dollars_in_ident13.i716, align 1, !tbaa !31
  %cplusplus_comments15.i717 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments15.i717, align 1, !tbaa !33
  %digraphs17.i718 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 1, i8* %digraphs17.i718, align 1, !tbaa !35
  br label %if.end465

sw.bb152:                                         ; preds = %if.end64
  %lang1.i719 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 9, i32* %lang1.i719, align 4, !tbaa !1
  %c993.i720 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 0, i8* %c993.i720, align 1, !tbaa !21
  %objc5.i721 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 0, i8* %objc5.i721, align 1, !tbaa !23
  %cplusplus7.i722 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 0, i8* %cplusplus7.i722, align 1, !tbaa !25
  %extended_numbers9.i723 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 1, i8* %extended_numbers9.i723, align 1, !tbaa !27
  %trigraphs11.i724 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 0, i8* %trigraphs11.i724, align 1, !tbaa !29
  %dollars_in_ident13.i725 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 0, i8* %dollars_in_ident13.i725, align 1, !tbaa !31
  %cplusplus_comments15.i726 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments15.i726, align 1, !tbaa !33
  %digraphs17.i727 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 0, i8* %digraphs17.i727, align 1, !tbaa !35
  br label %if.end465

sw.bb153:                                         ; preds = %if.end64
  %lang1.i728 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 6, i32* %lang1.i728, align 4, !tbaa !1
  %c993.i729 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 0, i8* %c993.i729, align 1, !tbaa !21
  %objc5.i730 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 0, i8* %objc5.i730, align 1, !tbaa !23
  %cplusplus7.i731 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 1, i8* %cplusplus7.i731, align 1, !tbaa !25
  %extended_numbers9.i732 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 1, i8* %extended_numbers9.i732, align 1, !tbaa !27
  %trigraphs11.i733 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 1, i8* %trigraphs11.i733, align 1, !tbaa !29
  %dollars_in_ident13.i734 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 0, i8* %dollars_in_ident13.i734, align 1, !tbaa !31
  %cplusplus_comments15.i735 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments15.i735, align 1, !tbaa !33
  %digraphs17.i736 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 1, i8* %digraphs17.i736, align 1, !tbaa !35
  br label %if.end465

sw.bb154:                                         ; preds = %if.end64
  %lang1.i737 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 0, i32* %lang1.i737, align 4, !tbaa !1
  %c993.i738 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 0, i8* %c993.i738, align 1, !tbaa !21
  %objc5.i739 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 0, i8* %objc5.i739, align 1, !tbaa !23
  %cplusplus7.i740 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 0, i8* %cplusplus7.i740, align 1, !tbaa !25
  %extended_numbers9.i741 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 1, i8* %extended_numbers9.i741, align 1, !tbaa !27
  %trigraphs11.i742 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 0, i8* %trigraphs11.i742, align 1, !tbaa !29
  %dollars_in_ident13.i743 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 1, i8* %dollars_in_ident13.i743, align 1, !tbaa !31
  %cplusplus_comments15.i744 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments15.i744, align 1, !tbaa !33
  %digraphs17.i745 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 1, i8* %digraphs17.i745, align 1, !tbaa !35
  br label %if.end465

sw.bb155:                                         ; preds = %if.end64, %if.end64
  %lang1.i746 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 1, i32* %lang1.i746, align 4, !tbaa !1
  %c993.i747 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 1, i8* %c993.i747, align 1, !tbaa !21
  %objc5.i748 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 0, i8* %objc5.i748, align 1, !tbaa !23
  %cplusplus7.i749 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 0, i8* %cplusplus7.i749, align 1, !tbaa !25
  %extended_numbers9.i750 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 1, i8* %extended_numbers9.i750, align 1, !tbaa !27
  %trigraphs11.i751 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 0, i8* %trigraphs11.i751, align 1, !tbaa !29
  %dollars_in_ident13.i752 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 1, i8* %dollars_in_ident13.i752, align 1, !tbaa !31
  %cplusplus_comments15.i753 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments15.i753, align 1, !tbaa !33
  %digraphs17.i754 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 1, i8* %digraphs17.i754, align 1, !tbaa !35
  br label %if.end465

sw.bb156:                                         ; preds = %if.end64
  %lang1.i755 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 3, i32* %lang1.i755, align 4, !tbaa !1
  %c993.i756 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 0, i8* %c993.i756, align 1, !tbaa !21
  %objc5.i757 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 0, i8* %objc5.i757, align 1, !tbaa !23
  %cplusplus7.i758 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 0, i8* %cplusplus7.i758, align 1, !tbaa !25
  %extended_numbers9.i759 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 0, i8* %extended_numbers9.i759, align 1, !tbaa !27
  %trigraphs11.i760 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 1, i8* %trigraphs11.i760, align 1, !tbaa !29
  %dollars_in_ident13.i761 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 0, i8* %dollars_in_ident13.i761, align 1, !tbaa !31
  %cplusplus_comments15.i762 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 0, i8* %cplusplus_comments15.i762, align 1, !tbaa !33
  %digraphs17.i763 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 1, i8* %digraphs17.i763, align 1, !tbaa !35
  br label %if.end465

sw.bb157:                                         ; preds = %if.end64, %if.end64, %if.end64
  %lang1.i764 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 2, i32* %lang1.i764, align 4, !tbaa !1
  %c993.i765 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 0, i8* %c993.i765, align 1, !tbaa !21
  %objc5.i766 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 0, i8* %objc5.i766, align 1, !tbaa !23
  %cplusplus7.i767 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 0, i8* %cplusplus7.i767, align 1, !tbaa !25
  %extended_numbers9.i768 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 0, i8* %extended_numbers9.i768, align 1, !tbaa !27
  %trigraphs11.i769 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 1, i8* %trigraphs11.i769, align 1, !tbaa !29
  %dollars_in_ident13.i770 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 0, i8* %dollars_in_ident13.i770, align 1, !tbaa !31
  %cplusplus_comments15.i771 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 0, i8* %cplusplus_comments15.i771, align 1, !tbaa !33
  %digraphs17.i772 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 0, i8* %digraphs17.i772, align 1, !tbaa !35
  br label %if.end465

sw.bb158:                                         ; preds = %if.end64, %if.end64, %if.end64, %if.end64
  %lang1.i773 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  store i32 4, i32* %lang1.i773, align 4, !tbaa !1
  %c993.i774 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  store i8 1, i8* %c993.i774, align 1, !tbaa !21
  %objc5.i775 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 16
  store i8 0, i8* %objc5.i775, align 1, !tbaa !23
  %cplusplus7.i776 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  store i8 0, i8* %cplusplus7.i776, align 1, !tbaa !25
  %extended_numbers9.i777 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 20
  store i8 1, i8* %extended_numbers9.i777, align 1, !tbaa !27
  %trigraphs11.i778 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 18
  store i8 1, i8* %trigraphs11.i778, align 1, !tbaa !29
  %dollars_in_ident13.i779 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 39
  store i8 0, i8* %dollars_in_ident13.i779, align 1, !tbaa !31
  %cplusplus_comments15.i780 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 15
  store i8 1, i8* %cplusplus_comments15.i780, align 1, !tbaa !33
  %digraphs17.i781 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 19
  store i8 1, i8* %digraphs17.i781, align 1, !tbaa !35
  br label %if.end465

sw.bb159:                                         ; preds = %if.end64
  %no_standard_includes = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 44
  store i8 1, i8* %no_standard_includes, align 1, !tbaa !68
  br label %if.end465

sw.bb161:                                         ; preds = %if.end64
  %no_standard_cplusplus_includes = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 45
  store i8 1, i8* %no_standard_cplusplus_includes, align 1, !tbaa !93
  br label %if.end465

sw.bb163:                                         ; preds = %if.end64
  %out_fname165 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 1
  %43 = load i8** %out_fname165, align 8, !tbaa !125
  %cmp166 = icmp eq i8* %43, null
  br i1 %cmp166, label %if.then168, label %if.else171

if.then168:                                       ; preds = %sw.bb163
  store i8* %arg.0, i8** %out_fname165, align 8, !tbaa !125
  br label %if.end465

if.else171:                                       ; preds = %sw.bb163
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_fatal(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([32 x i8]* @.str9, i64 0, i64 0)) #4
  br label %return

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %44 = phi i8 [ %21, %while.body.lr.ph ], [ %45, %while.cond.backedge ]
  %arg.0.pn = phi i8* [ %arg.0, %while.body.lr.ph ], [ %incdec.ptr840, %while.cond.backedge ]
  %incdec.ptr840 = getelementptr inbounds i8* %arg.0.pn, i64 1
  %conv174 = sext i8 %44 to i32
  switch i32 %conv174, label %while.cond.backedge [
    i32 77, label %sw.bb178
    i32 78, label %sw.bb180
    i32 68, label %sw.bb183
    i32 73, label %sw.bb186
  ]

while.cond.backedge:                              ; preds = %while.body, %sw.bb186, %sw.bb183, %sw.bb180, %sw.bb178
  %45 = load i8* %incdec.ptr840, align 1, !tbaa !89
  %cmp175 = icmp eq i8 %45, 0
  br i1 %cmp175, label %if.end465, label %while.body

sw.bb178:                                         ; preds = %while.body
  store i8 1, i8* %dump_macros, align 1, !tbaa !141
  br label %while.cond.backedge

sw.bb180:                                         ; preds = %while.body
  store i8 2, i8* %dump_macros, align 1, !tbaa !141
  br label %while.cond.backedge

sw.bb183:                                         ; preds = %while.body
  store i8 3, i8* %dump_macros, align 1, !tbaa !141
  br label %while.cond.backedge

sw.bb186:                                         ; preds = %while.body
  store i8 1, i8* %dump_includes, align 1, !tbaa !142
  br label %while.cond.backedge

sw.bb188:                                         ; preds = %if.end64
  %print_deps_missing_files = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 23
  store i8 1, i8* %print_deps_missing_files, align 1, !tbaa !143
  br label %if.end465

sw.bb190:                                         ; preds = %if.end64
  %print_deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 21
  store i8 2, i8* %print_deps, align 1, !tbaa !80
  %no_output = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 35
  store i8 1, i8* %no_output, align 1, !tbaa !144
  br label %if.end465

sw.bb193:                                         ; preds = %if.end64
  %print_deps195 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 21
  store i8 1, i8* %print_deps195, align 1, !tbaa !80
  %no_output197 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 35
  store i8 1, i8* %no_output197, align 1, !tbaa !144
  br label %if.end465

sw.bb198:                                         ; preds = %if.end64
  %deps_file = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 4
  store i8* %arg.0, i8** %deps_file, align 8, !tbaa !121
  br label %if.end465

sw.bb200:                                         ; preds = %if.end64
  %deps_phony_targets = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 22
  store i8 1, i8* %deps_phony_targets, align 1, !tbaa !123
  br label %if.end465

sw.bb202:                                         ; preds = %if.end64, %if.end64
  %deps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 31
  %46 = load %struct.deps** %deps, align 8, !tbaa !43
  %cmp203 = icmp eq i32 %15, 17
  %conv204 = zext i1 %cmp203 to i32
  tail call void @deps_add_target(%struct.deps* %46, i8* %arg.0, i32 %conv204) #4
  br label %if.end465

sw.bb205:                                         ; preds = %if.end64
  %print_deps207 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 21
  store i8 2, i8* %print_deps207, align 1, !tbaa !80
  %deps_file209 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 4
  store i8* %arg.0, i8** %deps_file209, align 8, !tbaa !121
  br label %if.end465

sw.bb210:                                         ; preds = %if.end64
  %print_deps212 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 21
  store i8 1, i8* %print_deps212, align 1, !tbaa !80
  %deps_file214 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 4
  store i8* %arg.0, i8** %deps_file214, align 8, !tbaa !121
  br label %if.end465

sw.bb215:                                         ; preds = %if.end64
  %47 = load i8* %arg.0, align 1, !tbaa !89
  %cmp218 = icmp eq i8 %47, 45
  br i1 %cmp218, label %if.then220, label %if.else229

if.then220:                                       ; preds = %sw.bb215
  %arrayidx221 = getelementptr inbounds i8* %arg.0, i64 1
  %48 = load i8* %arrayidx221, align 1, !tbaa !89
  %cmp223 = icmp eq i8 %48, 0
  br i1 %cmp223, label %if.then225, label %if.else227

if.then225:                                       ; preds = %if.then220
  %directive_head = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 0
  %49 = load %struct.pending_option** %directive_head, align 8, !tbaa !113
  %tobool4.i = icmp eq %struct.pending_option* %49, null
  br i1 %tobool4.i, label %free_chain.exit, label %while.body.i783

while.body.i783:                                  ; preds = %if.then225, %while.body.i783
  %head.addr.05.i = phi %struct.pending_option* [ %50, %while.body.i783 ], [ %49, %if.then225 ]
  %next1.i = getelementptr inbounds %struct.pending_option* %head.addr.05.i, i64 0, i32 0
  %50 = load %struct.pending_option** %next1.i, align 8, !tbaa !112
  %51 = bitcast %struct.pending_option* %head.addr.05.i to i8*
  tail call void @free(i8* %51) #4
  %tobool.i782 = icmp eq %struct.pending_option* %50, null
  br i1 %tobool.i782, label %free_chain.exit, label %while.body.i783

free_chain.exit:                                  ; preds = %while.body.i783, %if.then225
  %52 = bitcast %struct.cpp_pending* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* %52, i8 0, i64 16, i32 8, i1 false)
  br label %if.end465

if.else227:                                       ; preds = %if.then220
  %call.i784 = tail call noalias i8* @xmalloc(i64 24) #4
  %53 = bitcast i8* %call.i784 to %struct.pending_option*
  %arg.i785 = getelementptr inbounds i8* %call.i784, i64 8
  %54 = bitcast i8* %arg.i785 to i8**
  store i8* %arrayidx221, i8** %54, align 8, !tbaa !106
  %next.i786 = bitcast i8* %call.i784 to %struct.pending_option**
  store %struct.pending_option* null, %struct.pending_option** %next.i786, align 8, !tbaa !112
  %handler1.i787 = getelementptr inbounds i8* %call.i784, i64 16
  %55 = bitcast i8* %handler1.i787 to void (%struct.cpp_reader*, i8*)**
  store void (%struct.cpp_reader*, i8*)* @cpp_unassert, void (%struct.cpp_reader*, i8*)** %55, align 8, !tbaa !104
  %directive_head.i788 = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 0
  %56 = load %struct.pending_option** %directive_head.i788, align 8, !tbaa !113
  %tobool.i789 = icmp eq %struct.pending_option* %56, null
  br i1 %tobool.i789, label %if.then.i791, label %if.else.i794

if.then.i791:                                     ; preds = %if.else227
  store %struct.pending_option* %53, %struct.pending_option** %directive_head.i788, align 8, !tbaa !113
  %directive_tail4.pre.i790 = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 1
  br label %new_pending_directive.exit797

if.else.i794:                                     ; preds = %if.else227
  %directive_tail.i792 = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 1
  %57 = load %struct.pending_option** %directive_tail.i792, align 8, !tbaa !136
  %next3.i793 = getelementptr inbounds %struct.pending_option* %57, i64 0, i32 0
  store %struct.pending_option* %53, %struct.pending_option** %next3.i793, align 8, !tbaa !112
  br label %new_pending_directive.exit797

new_pending_directive.exit797:                    ; preds = %if.then.i791, %if.else.i794
  %directive_tail4.pre-phi.i795 = phi %struct.pending_option** [ %directive_tail.i792, %if.else.i794 ], [ %directive_tail4.pre.i790, %if.then.i791 ]
  store %struct.pending_option* %53, %struct.pending_option** %directive_tail4.pre-phi.i795, align 8, !tbaa !136
  br label %if.end465

if.else229:                                       ; preds = %sw.bb215
  %call.i798 = tail call noalias i8* @xmalloc(i64 24) #4
  %58 = bitcast i8* %call.i798 to %struct.pending_option*
  %arg.i799 = getelementptr inbounds i8* %call.i798, i64 8
  %59 = bitcast i8* %arg.i799 to i8**
  store i8* %arg.0, i8** %59, align 8, !tbaa !106
  %next.i800 = bitcast i8* %call.i798 to %struct.pending_option**
  store %struct.pending_option* null, %struct.pending_option** %next.i800, align 8, !tbaa !112
  %handler1.i801 = getelementptr inbounds i8* %call.i798, i64 16
  %60 = bitcast i8* %handler1.i801 to void (%struct.cpp_reader*, i8*)**
  store void (%struct.cpp_reader*, i8*)* @cpp_assert, void (%struct.cpp_reader*, i8*)** %60, align 8, !tbaa !104
  %directive_head.i802 = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 0
  %61 = load %struct.pending_option** %directive_head.i802, align 8, !tbaa !113
  %tobool.i803 = icmp eq %struct.pending_option* %61, null
  br i1 %tobool.i803, label %if.then.i805, label %if.else.i808

if.then.i805:                                     ; preds = %if.else229
  store %struct.pending_option* %58, %struct.pending_option** %directive_head.i802, align 8, !tbaa !113
  %directive_tail4.pre.i804 = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 1
  br label %new_pending_directive.exit811

if.else.i808:                                     ; preds = %if.else229
  %directive_tail.i806 = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 1
  %62 = load %struct.pending_option** %directive_tail.i806, align 8, !tbaa !136
  %next3.i807 = getelementptr inbounds %struct.pending_option* %62, i64 0, i32 0
  store %struct.pending_option* %58, %struct.pending_option** %next3.i807, align 8, !tbaa !112
  br label %new_pending_directive.exit811

new_pending_directive.exit811:                    ; preds = %if.then.i805, %if.else.i808
  %directive_tail4.pre-phi.i809 = phi %struct.pending_option** [ %directive_tail.i806, %if.else.i808 ], [ %directive_tail4.pre.i804, %if.then.i805 ]
  store %struct.pending_option* %58, %struct.pending_option** %directive_tail4.pre-phi.i809, align 8, !tbaa !136
  br label %if.end465

sw.bb231:                                         ; preds = %if.end64
  %call.i812 = tail call noalias i8* @xmalloc(i64 24) #4
  %63 = bitcast i8* %call.i812 to %struct.pending_option*
  %arg.i813 = getelementptr inbounds i8* %call.i812, i64 8
  %64 = bitcast i8* %arg.i813 to i8**
  store i8* %arg.0, i8** %64, align 8, !tbaa !106
  %next.i814 = bitcast i8* %call.i812 to %struct.pending_option**
  store %struct.pending_option* null, %struct.pending_option** %next.i814, align 8, !tbaa !112
  %handler1.i815 = getelementptr inbounds i8* %call.i812, i64 16
  %65 = bitcast i8* %handler1.i815 to void (%struct.cpp_reader*, i8*)**
  store void (%struct.cpp_reader*, i8*)* @cpp_undef, void (%struct.cpp_reader*, i8*)** %65, align 8, !tbaa !104
  %directive_head.i816 = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 0
  %66 = load %struct.pending_option** %directive_head.i816, align 8, !tbaa !113
  %tobool.i817 = icmp eq %struct.pending_option* %66, null
  br i1 %tobool.i817, label %if.then.i819, label %if.else.i822

if.then.i819:                                     ; preds = %sw.bb231
  store %struct.pending_option* %63, %struct.pending_option** %directive_head.i816, align 8, !tbaa !113
  %directive_tail4.pre.i818 = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 1
  br label %new_pending_directive.exit825

if.else.i822:                                     ; preds = %sw.bb231
  %directive_tail.i820 = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 1
  %67 = load %struct.pending_option** %directive_tail.i820, align 8, !tbaa !136
  %next3.i821 = getelementptr inbounds %struct.pending_option* %67, i64 0, i32 0
  store %struct.pending_option* %63, %struct.pending_option** %next3.i821, align 8, !tbaa !112
  br label %new_pending_directive.exit825

new_pending_directive.exit825:                    ; preds = %if.then.i819, %if.else.i822
  %directive_tail4.pre-phi.i823 = phi %struct.pending_option** [ %directive_tail.i820, %if.else.i822 ], [ %directive_tail4.pre.i818, %if.then.i819 ]
  store %struct.pending_option* %63, %struct.pending_option** %directive_tail4.pre-phi.i823, align 8, !tbaa !136
  br label %if.end465

sw.bb232:                                         ; preds = %if.end64
  %call233 = tail call i32 @strcmp(i8* %arg.0, i8* getelementptr inbounds ([2 x i8]* @.str10, i64 0, i64 0)) #4
  %tobool234 = icmp eq i32 %call233, 0
  br i1 %tobool234, label %if.then235, label %if.else245

if.then235:                                       ; preds = %sw.bb232
  %ignore_srcdir = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 38
  %68 = load i8* %ignore_srcdir, align 1, !tbaa !145
  %tobool237 = icmp eq i8 %68, 0
  br i1 %tobool237, label %if.then238, label %if.else243

if.then238:                                       ; preds = %if.then235
  %brack_head = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 4
  %quote_head = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 2
  %69 = bitcast %struct.search_path** %brack_head to <2 x %struct.search_path*>*
  %70 = load <2 x %struct.search_path*>* %69, align 8, !tbaa !46
  %71 = bitcast %struct.search_path** %quote_head to <2 x %struct.search_path*>*
  store <2 x %struct.search_path*> %70, <2 x %struct.search_path*>* %71, align 8, !tbaa !46
  %72 = bitcast %struct.search_path** %brack_head to i8*
  call void @llvm.memset.p0i8.i64(i8* %72, i8 0, i64 16, i32 8, i1 false)
  store i8 1, i8* %ignore_srcdir, align 1, !tbaa !145
  br label %if.end465

if.else243:                                       ; preds = %if.then235
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_fatal(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([20 x i8]* @.str11, i64 0, i64 0)) #4
  br label %return

if.else245:                                       ; preds = %sw.bb232
  %call246 = tail call noalias i8* @xstrdup(i8* %arg.0) #4
  tail call fastcc void @append_include_chain(%struct.cpp_reader* %pfile, i8* %call246, i32 0, i32 0)
  br label %if.end465

sw.bb248:                                         ; preds = %if.end64
  %call249 = tail call noalias i8* @xstrdup(i8* %arg.0) #4
  tail call fastcc void @append_include_chain(%struct.cpp_reader* %pfile, i8* %call249, i32 1, i32 0)
  br label %if.end465

sw.bb250:                                         ; preds = %if.end64, %if.end64
  %call251 = tail call noalias i8* @xmalloc(i64 24) #4
  %73 = bitcast i8* %call251 to %struct.pending_option*
  %arg252 = getelementptr inbounds i8* %call251, i64 8
  %74 = bitcast i8* %arg252 to i8**
  store i8* %arg.0, i8** %74, align 8, !tbaa !106
  %next = bitcast i8* %call251 to %struct.pending_option**
  store %struct.pending_option* null, %struct.pending_option** %next, align 8, !tbaa !112
  %cmp253 = icmp eq i32 %15, 36
  br i1 %cmp253, label %do.body, label %do.body264

do.body:                                          ; preds = %sw.bb250
  %include_head = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 12
  %75 = load %struct.pending_option** %include_head, align 8, !tbaa !119
  %tobool256 = icmp eq %struct.pending_option* %75, null
  br i1 %tobool256, label %if.then257, label %if.else259

if.then257:                                       ; preds = %do.body
  store %struct.pending_option* %73, %struct.pending_option** %include_head, align 8, !tbaa !119
  %include_tail262.pre = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 13
  br label %if.end261

if.else259:                                       ; preds = %do.body
  %include_tail = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 13
  %76 = load %struct.pending_option** %include_tail, align 8, !tbaa !146
  %next260 = getelementptr inbounds %struct.pending_option* %76, i64 0, i32 0
  store %struct.pending_option* %73, %struct.pending_option** %next260, align 8, !tbaa !112
  br label %if.end261

if.end261:                                        ; preds = %if.else259, %if.then257
  %include_tail262.pre-phi = phi %struct.pending_option** [ %include_tail, %if.else259 ], [ %include_tail262.pre, %if.then257 ]
  store %struct.pending_option* %73, %struct.pending_option** %include_tail262.pre-phi, align 8, !tbaa !146
  br label %if.end465

do.body264:                                       ; preds = %sw.bb250
  %imacros_head = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 10
  %77 = load %struct.pending_option** %imacros_head, align 8, !tbaa !103
  %tobool265 = icmp eq %struct.pending_option* %77, null
  br i1 %tobool265, label %if.then266, label %if.else268

if.then266:                                       ; preds = %do.body264
  store %struct.pending_option* %73, %struct.pending_option** %imacros_head, align 8, !tbaa !103
  %imacros_tail271.pre = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 11
  br label %if.end270

if.else268:                                       ; preds = %do.body264
  %imacros_tail = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 11
  %78 = load %struct.pending_option** %imacros_tail, align 8, !tbaa !147
  %next269 = getelementptr inbounds %struct.pending_option* %78, i64 0, i32 0
  store %struct.pending_option* %73, %struct.pending_option** %next269, align 8, !tbaa !112
  br label %if.end270

if.end270:                                        ; preds = %if.else268, %if.then266
  %imacros_tail271.pre-phi = phi %struct.pending_option** [ %imacros_tail, %if.else268 ], [ %imacros_tail271.pre, %if.then266 ]
  store %struct.pending_option* %73, %struct.pending_option** %imacros_tail271.pre-phi, align 8, !tbaa !147
  br label %if.end465

sw.bb274:                                         ; preds = %if.end64, %if.end64
  %call275 = tail call i64 @strlen(i8* %arg.0) #4
  %include_prefix278 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 8
  %79 = load i8** %include_prefix278, align 8, !tbaa !88
  %cmp279 = icmp eq i8* %79, null
  br i1 %cmp279, label %if.else294, label %if.then281

if.then281:                                       ; preds = %sw.bb274
  %include_prefix_len283 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 9
  %80 = load i32* %include_prefix_len283, align 4, !tbaa !140
  %conv284 = zext i32 %80 to i64
  %sext684 = shl i64 %call275, 32
  %conv285 = ashr exact i64 %sext684, 32
  %add286 = add i64 %conv285, 1
  %add287 = add i64 %add286, %conv284
  %call288 = tail call noalias i8* @xmalloc(i64 %add287) #4
  %81 = load i8** %include_prefix278, align 8, !tbaa !88
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call288, i8* %81, i64 %conv284, i32 1, i1 false)
  %add.ptr291 = getelementptr inbounds i8* %call288, i64 %conv284
  %sext685 = add i64 %sext684, 4294967296
  %conv293 = ashr exact i64 %sext685, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr291, i8* %arg.0, i64 %conv293, i32 1, i1 false)
  br label %if.end307

if.else294:                                       ; preds = %sw.bb274
  %82 = load i64* @cpp_GCC_INCLUDE_DIR_len, align 8, !tbaa !148
  %tobool295 = icmp eq i64 %82, 0
  br i1 %tobool295, label %if.else304, label %if.then296

if.then296:                                       ; preds = %if.else294
  %sext = shl i64 %call275, 32
  %conv297 = ashr exact i64 %sext, 32
  %add298 = add i64 %conv297, 1
  %add299 = add i64 %add298, %82
  %call300 = tail call noalias i8* @xmalloc(i64 %add299) #4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call300, i8* getelementptr inbounds ([0 x i8]* @cpp_GCC_INCLUDE_DIR, i64 0, i64 0), i64 %82, i32 1, i1 false)
  %add.ptr301 = getelementptr inbounds i8* %call300, i64 %82
  %sext683 = add i64 %sext, 4294967296
  %conv303 = ashr exact i64 %sext683, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr301, i8* %arg.0, i64 %conv303, i32 1, i1 false)
  br label %if.end307

if.else304:                                       ; preds = %if.else294
  %call305 = tail call noalias i8* @xstrdup(i8* %arg.0) #4
  br label %if.end307

if.end307:                                        ; preds = %if.then296, %if.else304, %if.then281
  %fname.0 = phi i8* [ %call288, %if.then281 ], [ %call300, %if.then296 ], [ %call305, %if.else304 ]
  %cmp308 = icmp eq i32 %15, 39
  %cond = zext i1 %cmp308 to i32
  tail call fastcc void @append_include_chain(%struct.cpp_reader* %pfile, i8* %fname.0, i32 %cond, i32 0)
  br label %if.end465

sw.bb310:                                         ; preds = %if.end64
  %call311 = tail call noalias i8* @xstrdup(i8* %arg.0) #4
  tail call fastcc void @append_include_chain(%struct.cpp_reader* %pfile, i8* %call311, i32 2, i32 0)
  br label %if.end465

sw.bb312:                                         ; preds = %if.end64
  %call315 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([6 x i8]* @.str12, i64 0, i64 0)) #4
  %tobool316 = icmp eq i32 %call315, 0
  br i1 %tobool316, label %if.then317, label %if.else320

if.then317:                                       ; preds = %sw.bb312
  %warn_trigraphs = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 31
  store i8 1, i8* %warn_trigraphs, align 1, !tbaa !149
  %warn_comments = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 30
  store i8 1, i8* %warn_comments, align 1, !tbaa !150
  br label %if.end465

if.else320:                                       ; preds = %sw.bb312
  %call323 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([14 x i8]* @.str13, i64 0, i64 0)) #4
  %tobool324 = icmp eq i32 %call323, 0
  br i1 %tobool324, label %if.then325, label %if.else327

if.then325:                                       ; preds = %if.else320
  %warn_traditional = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 33
  store i8 1, i8* %warn_traditional, align 1, !tbaa !151
  br label %if.end465

if.else327:                                       ; preds = %if.else320
  %call330 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([12 x i8]* @.str14, i64 0, i64 0)) #4
  %tobool331 = icmp eq i32 %call330, 0
  br i1 %tobool331, label %if.then332, label %if.else335

if.then332:                                       ; preds = %if.else327
  %warn_trigraphs334 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 31
  store i8 1, i8* %warn_trigraphs334, align 1, !tbaa !149
  br label %if.end465

if.else335:                                       ; preds = %if.else327
  %call338 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([10 x i8]* @.str15, i64 0, i64 0)) #4
  %tobool339 = icmp eq i32 %call338, 0
  br i1 %tobool339, label %if.then340, label %if.else343

if.then340:                                       ; preds = %if.else335
  %warn_comments342 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 30
  store i8 1, i8* %warn_comments342, align 1, !tbaa !150
  br label %if.end465

if.else343:                                       ; preds = %if.else335
  %call346 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([11 x i8]* @.str16, i64 0, i64 0)) #4
  %tobool347 = icmp eq i32 %call346, 0
  br i1 %tobool347, label %if.then348, label %if.else351

if.then348:                                       ; preds = %if.else343
  %warn_comments350 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 30
  store i8 1, i8* %warn_comments350, align 1, !tbaa !150
  br label %if.end465

if.else351:                                       ; preds = %if.else343
  %call354 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([8 x i8]* @.str17, i64 0, i64 0)) #4
  %tobool355 = icmp eq i32 %call354, 0
  br i1 %tobool355, label %if.then356, label %if.else358

if.then356:                                       ; preds = %if.else351
  %warn_undef = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 40
  store i8 1, i8* %warn_undef, align 1, !tbaa !152
  br label %if.end465

if.else358:                                       ; preds = %if.else351
  %call361 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([9 x i8]* @.str18, i64 0, i64 0)) #4
  %tobool362 = icmp eq i32 %call361, 0
  br i1 %tobool362, label %if.then363, label %if.else365

if.then363:                                       ; preds = %if.else358
  %warn_import = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 32
  store i8 1, i8* %warn_import, align 1, !tbaa !36
  br label %if.end465

if.else365:                                       ; preds = %if.else358
  %call368 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([8 x i8]* @.str19, i64 0, i64 0)) #4
  %tobool369 = icmp eq i32 %call368, 0
  br i1 %tobool369, label %if.then370, label %if.else372

if.then370:                                       ; preds = %if.else365
  %warnings_are_errors = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 34
  store i8 1, i8* %warnings_are_errors, align 1, !tbaa !153
  br label %if.end465

if.else372:                                       ; preds = %if.else365
  %call375 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([17 x i8]* @.str20, i64 0, i64 0)) #4
  %tobool376 = icmp eq i32 %call375, 0
  br i1 %tobool376, label %if.then377, label %if.else379

if.then377:                                       ; preds = %if.else372
  %warn_system_headers = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 28
  store i8 1, i8* %warn_system_headers, align 1, !tbaa !154
  br label %if.end465

if.else379:                                       ; preds = %if.else372
  %call382 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([17 x i8]* @.str21, i64 0, i64 0)) #4
  %tobool383 = icmp eq i32 %call382, 0
  br i1 %tobool383, label %if.then384, label %if.else387

if.then384:                                       ; preds = %if.else379
  %warn_traditional386 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 33
  store i8 0, i8* %warn_traditional386, align 1, !tbaa !151
  br label %if.end465

if.else387:                                       ; preds = %if.else379
  %call390 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([15 x i8]* @.str22, i64 0, i64 0)) #4
  %tobool391 = icmp eq i32 %call390, 0
  br i1 %tobool391, label %if.then392, label %if.else395

if.then392:                                       ; preds = %if.else387
  %warn_trigraphs394 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 31
  store i8 0, i8* %warn_trigraphs394, align 1, !tbaa !149
  br label %if.end465

if.else395:                                       ; preds = %if.else387
  %call398 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([13 x i8]* @.str23, i64 0, i64 0)) #4
  %tobool399 = icmp eq i32 %call398, 0
  br i1 %tobool399, label %if.then400, label %if.else403

if.then400:                                       ; preds = %if.else395
  %warn_comments402 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 30
  store i8 0, i8* %warn_comments402, align 1, !tbaa !150
  br label %if.end465

if.else403:                                       ; preds = %if.else395
  %call406 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([14 x i8]* @.str24, i64 0, i64 0)) #4
  %tobool407 = icmp eq i32 %call406, 0
  br i1 %tobool407, label %if.then408, label %if.else411

if.then408:                                       ; preds = %if.else403
  %warn_comments410 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 30
  store i8 0, i8* %warn_comments410, align 1, !tbaa !150
  br label %if.end465

if.else411:                                       ; preds = %if.else403
  %call414 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([11 x i8]* @.str25, i64 0, i64 0)) #4
  %tobool415 = icmp eq i32 %call414, 0
  br i1 %tobool415, label %if.then416, label %if.else419

if.then416:                                       ; preds = %if.else411
  %warn_undef418 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 40
  store i8 0, i8* %warn_undef418, align 1, !tbaa !152
  br label %if.end465

if.else419:                                       ; preds = %if.else411
  %call422 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([12 x i8]* @.str26, i64 0, i64 0)) #4
  %tobool423 = icmp eq i32 %call422, 0
  br i1 %tobool423, label %if.then424, label %if.else427

if.then424:                                       ; preds = %if.else419
  %warn_import426 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 32
  store i8 0, i8* %warn_import426, align 1, !tbaa !36
  br label %if.end465

if.else427:                                       ; preds = %if.else419
  %call430 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([11 x i8]* @.str27, i64 0, i64 0)) #4
  %tobool431 = icmp eq i32 %call430, 0
  br i1 %tobool431, label %if.then432, label %if.else435

if.then432:                                       ; preds = %if.else427
  %warnings_are_errors434 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 34
  store i8 0, i8* %warnings_are_errors434, align 1, !tbaa !153
  br label %if.end465

if.else435:                                       ; preds = %if.else427
  %call438 = tail call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([20 x i8]* @.str28, i64 0, i64 0)) #4
  %tobool439 = icmp eq i32 %call438, 0
  br i1 %tobool439, label %if.then440, label %if.else443

if.then440:                                       ; preds = %if.else435
  %warn_system_headers442 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 28
  store i8 0, i8* %warn_system_headers442, align 1, !tbaa !154
  br label %if.end465

if.else443:                                       ; preds = %if.else435
  %tobool444 = icmp eq i32 %ignore, 0
  br i1 %tobool444, label %return, label %if.end465

if.end465:                                        ; preds = %while.cond.backedge, %while.cond.preheader, %if.else443, %sw.bb86, %sw.bb, %sw.bb66, %sw.bb69, %sw.bb71, %sw.bb73, %sw.bb76, %sw.bb78, %sw.bb81, %sw.bb83, %sw.bb108, %sw.bb110, %sw.bb112, %sw.bb115, %sw.bb118, %sw.bb121, %sw.bb123, %sw.bb125, %sw.bb127, %sw.bb129, %new_pending_directive.exit, %sw.bb134, %sw.bb136, %sw.bb138, %sw.bb141, %sw.bb143, %sw.bb148, %sw.bb149, %sw.bb150, %sw.bb151, %sw.bb152, %sw.bb153, %sw.bb154, %sw.bb155, %sw.bb156, %sw.bb157, %sw.bb158, %sw.bb159, %sw.bb161, %if.then168, %sw.bb188, %sw.bb190, %sw.bb193, %sw.bb198, %sw.bb200, %sw.bb202, %sw.bb205, %sw.bb210, %new_pending_directive.exit825, %sw.bb248, %if.end307, %sw.bb310, %if.end64, %if.then91, %if.then102, %free_chain.exit, %new_pending_directive.exit797, %new_pending_directive.exit811, %if.else245, %if.then238, %if.end270, %if.end261, %if.then325, %if.then340, %if.then356, %if.then370, %if.then384, %if.then400, %if.then416, %if.then432, %if.then440, %if.then424, %if.then408, %if.then392, %if.then377, %if.then363, %if.then348, %if.then332, %if.then317, %if.then12, %if.else25, %if.then20
  %i.1 = phi i32 [ 0, %if.then12 ], [ 0, %if.then20 ], [ 0, %if.else25 ], [ %i.0, %if.end64 ], [ %i.0, %sw.bb310 ], [ %i.0, %if.end307 ], [ %i.0, %if.end261 ], [ %i.0, %if.end270 ], [ %i.0, %sw.bb248 ], [ %i.0, %if.else245 ], [ %i.0, %if.then238 ], [ %i.0, %new_pending_directive.exit825 ], [ %i.0, %free_chain.exit ], [ %i.0, %new_pending_directive.exit797 ], [ %i.0, %new_pending_directive.exit811 ], [ %i.0, %sw.bb210 ], [ %i.0, %sw.bb205 ], [ %i.0, %sw.bb202 ], [ %i.0, %sw.bb200 ], [ %i.0, %sw.bb198 ], [ %i.0, %sw.bb193 ], [ %i.0, %sw.bb190 ], [ %i.0, %sw.bb188 ], [ %i.0, %if.then168 ], [ %i.0, %sw.bb161 ], [ %i.0, %sw.bb159 ], [ %i.0, %sw.bb158 ], [ %i.0, %sw.bb157 ], [ %i.0, %sw.bb156 ], [ %i.0, %sw.bb155 ], [ %i.0, %sw.bb154 ], [ %i.0, %sw.bb153 ], [ %i.0, %sw.bb152 ], [ %i.0, %sw.bb151 ], [ %i.0, %sw.bb150 ], [ %i.0, %sw.bb149 ], [ %i.0, %sw.bb148 ], [ %i.0, %sw.bb143 ], [ %i.0, %sw.bb141 ], [ %i.0, %sw.bb138 ], [ %i.0, %sw.bb136 ], [ %i.0, %sw.bb134 ], [ %i.0, %new_pending_directive.exit ], [ %i.0, %sw.bb129 ], [ %i.0, %sw.bb127 ], [ %i.0, %sw.bb125 ], [ %i.0, %sw.bb123 ], [ %i.0, %sw.bb121 ], [ %i.0, %sw.bb118 ], [ %i.0, %sw.bb115 ], [ %i.0, %sw.bb112 ], [ %i.0, %sw.bb110 ], [ %i.0, %sw.bb108 ], [ %i.0, %if.then102 ], [ %i.0, %if.then91 ], [ %i.0, %sw.bb86 ], [ %i.0, %sw.bb83 ], [ %i.0, %sw.bb81 ], [ %i.0, %sw.bb78 ], [ %i.0, %sw.bb76 ], [ %i.0, %sw.bb73 ], [ %i.0, %sw.bb71 ], [ %i.0, %sw.bb69 ], [ %i.0, %sw.bb66 ], [ %i.0, %sw.bb ], [ %i.0, %if.else443 ], [ %i.0, %if.then440 ], [ %i.0, %if.then432 ], [ %i.0, %if.then424 ], [ %i.0, %if.then416 ], [ %i.0, %if.then408 ], [ %i.0, %if.then400 ], [ %i.0, %if.then392 ], [ %i.0, %if.then384 ], [ %i.0, %if.then377 ], [ %i.0, %if.then370 ], [ %i.0, %if.then363 ], [ %i.0, %if.then356 ], [ %i.0, %if.then348 ], [ %i.0, %if.then340 ], [ %i.0, %if.then332 ], [ %i.0, %if.then325 ], [ %i.0, %if.then317 ], [ %i.0, %while.cond.preheader ], [ %i.0, %while.cond.backedge ]
  %add466 = add nsw i32 %i.1, 1
  br label %return

return:                                           ; preds = %while.cond.i, %if.else443, %parse_option.exit, %if.end465, %if.else243, %if.else171, %if.then56
  %retval.0 = phi i32 [ %add466, %if.end465 ], [ %argc, %if.else243 ], [ %argc, %if.else171 ], [ %argc, %if.then56 ], [ 0, %parse_option.exit ], [ %i.0, %if.else443 ], [ 0, %while.cond.i ]
  ret i32 %retval.0
}

declare void @cpp_fatal(%struct.cpp_reader*, i8*, ...) #1

; Function Attrs: nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) #2

declare void @cpp_define(%struct.cpp_reader*, i8*) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #3

declare void @deps_add_target(%struct.deps*, i8*, i32) #1

declare void @cpp_unassert(%struct.cpp_reader*, i8*) #1

declare void @cpp_assert(%struct.cpp_reader*, i8*) #1

declare void @cpp_undef(%struct.cpp_reader*, i8*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define internal fastcc void @append_include_chain(%struct.cpp_reader* %pfile, i8* %dir, i32 %path, i32 %cxx_aware) #0 {
entry:
  %st = alloca %struct.stat, align 8
  %pending = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 3
  %0 = load %struct.cpp_pending** %pending, align 8, !tbaa !42
  %1 = bitcast %struct.stat* %st to i8*
  call void @llvm.lifetime.start(i64 144, i8* %1) #4
  %2 = load i8* %dir, align 1, !tbaa !89
  %cmp = icmp eq i8 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @free(i8* %dir)
  %call = tail call noalias i8* @xstrdup(i8* getelementptr inbounds ([2 x i8]* @.str46, i64 0, i64 0)) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %dir.addr.0 = phi i8* [ %call, %if.then ], [ %dir, %entry ]
  %call2 = tail call i8* @_cpp_simplify_pathname(i8* %dir.addr.0) #4
  %call3 = call i32 @stat(i8* %dir.addr.0, %struct.stat* %st) #4
  %tobool = icmp eq i32 %call3, 0
  br i1 %tobool, label %if.end15, label %if.then4

if.then4:                                         ; preds = %if.end
  %call5 = tail call i32* @__errno_location() #8
  %3 = load i32* %call5, align 4, !tbaa !155
  %cmp6 = icmp eq i32 %3, 2
  br i1 %cmp6, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.then4
  tail call void @cpp_notice_from_errno(%struct.cpp_reader* %pfile, i8* %dir.addr.0) #4
  br label %if.end14

if.else:                                          ; preds = %if.then4
  %verbose = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 12
  %4 = load i8* %verbose, align 1, !tbaa !78
  %tobool10 = icmp eq i8 %4, 0
  br i1 %tobool10, label %if.end14, label %if.then11

if.then11:                                        ; preds = %if.else
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !46
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([37 x i8]* @.str47, i64 0, i64 0), i8* %dir.addr.0) #6
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then11, %if.then8
  tail call void @free(i8* %dir.addr.0)
  br label %cleanup

if.end15:                                         ; preds = %if.end
  %st_mode = getelementptr inbounds %struct.stat* %st, i64 0, i32 3
  %6 = load i32* %st_mode, align 8, !tbaa !156
  %and = and i32 %6, 61440
  %cmp16 = icmp eq i32 %and, 16384
  br i1 %cmp16, label %if.end19, label %if.then18

if.then18:                                        ; preds = %if.end15
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_notice(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([20 x i8]* @.str48, i64 0, i64 0), i8* %dir.addr.0) #4
  tail call void @free(i8* %dir.addr.0)
  br label %cleanup

if.end19:                                         ; preds = %if.end15
  %call20 = tail call i64 @strlen(i8* %dir.addr.0) #4
  %conv21 = trunc i64 %call20 to i32
  %max_include_len = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 26
  %7 = load i32* %max_include_len, align 4, !tbaa !159
  %cmp22 = icmp ugt i32 %conv21, %7
  br i1 %cmp22, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end19
  store i32 %conv21, i32* %max_include_len, align 4, !tbaa !159
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %if.end19
  %call27 = tail call noalias i8* @xmalloc(i64 56) #4
  %8 = bitcast i8* %call27 to %struct.search_path*
  %name = getelementptr inbounds i8* %call27, i64 8
  %9 = bitcast i8* %name to i8**
  store i8* %dir.addr.0, i8** %9, align 8, !tbaa !64
  %len28 = getelementptr inbounds i8* %call27, i64 16
  %10 = bitcast i8* %len28 to i32*
  store i32 %conv21, i32* %10, align 4, !tbaa !160
  %st_ino = getelementptr inbounds %struct.stat* %st, i64 0, i32 1
  %11 = load i64* %st_ino, align 8, !tbaa !161
  %ino = getelementptr inbounds i8* %call27, i64 24
  %12 = bitcast i8* %ino to i64*
  store i64 %11, i64* %12, align 8, !tbaa !76
  %st_dev = getelementptr inbounds %struct.stat* %st, i64 0, i32 0
  %13 = load i64* %st_dev, align 8, !tbaa !162
  %dev = getelementptr inbounds i8* %call27, i64 32
  %14 = bitcast i8* %dev to i64*
  store i64 %13, i64* %14, align 8, !tbaa !77
  %path.off = add i32 %path, -1
  %15 = icmp ult i32 %path.off, 2
  br i1 %15, label %if.then33, label %if.else35

if.then33:                                        ; preds = %if.end26
  %tobool34 = icmp ne i32 %cxx_aware, 0
  %cond = select i1 %tobool34, i32 1, i32 2
  %sysp = getelementptr inbounds i8* %call27, i64 40
  %16 = bitcast i8* %sysp to i32*
  store i32 %cond, i32* %16, align 4, !tbaa !163
  br label %if.end37

if.else35:                                        ; preds = %if.end26
  %sysp36 = getelementptr inbounds i8* %call27, i64 40
  %17 = bitcast i8* %sysp36 to i32*
  store i32 0, i32* %17, align 4, !tbaa !163
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then33
  %name_map = getelementptr inbounds i8* %call27, i64 48
  %18 = bitcast i8* %name_map to %struct.file_name_map**
  store %struct.file_name_map* null, %struct.file_name_map** %18, align 8, !tbaa !164
  %next = bitcast i8* %call27 to %struct.search_path**
  store %struct.search_path* null, %struct.search_path** %next, align 8, !tbaa !62
  switch i32 %path, label %cleanup [
    i32 0, label %do.body
    i32 1, label %do.body46
    i32 2, label %do.body57
  ]

do.body:                                          ; preds = %if.end37
  %brack_head = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 4
  %19 = load %struct.search_path** %brack_head, align 8, !tbaa !71
  %tobool38 = icmp eq %struct.search_path* %19, null
  br i1 %tobool38, label %if.then39, label %if.else41

if.then39:                                        ; preds = %do.body
  store %struct.search_path* %8, %struct.search_path** %brack_head, align 8, !tbaa !71
  %brack_tail44.pre = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 5
  br label %if.end43

if.else41:                                        ; preds = %do.body
  %brack_tail = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 5
  %20 = load %struct.search_path** %brack_tail, align 8, !tbaa !75
  %next42 = getelementptr inbounds %struct.search_path* %20, i64 0, i32 0
  store %struct.search_path* %8, %struct.search_path** %next42, align 8, !tbaa !62
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then39
  %brack_tail44.pre-phi = phi %struct.search_path** [ %brack_tail, %if.else41 ], [ %brack_tail44.pre, %if.then39 ]
  store %struct.search_path* %8, %struct.search_path** %brack_tail44.pre-phi, align 8, !tbaa !75
  br label %cleanup

do.body46:                                        ; preds = %if.end37
  %systm_head = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 6
  %21 = load %struct.search_path** %systm_head, align 8, !tbaa !72
  %tobool47 = icmp eq %struct.search_path* %21, null
  br i1 %tobool47, label %if.then48, label %if.else50

if.then48:                                        ; preds = %do.body46
  store %struct.search_path* %8, %struct.search_path** %systm_head, align 8, !tbaa !72
  %systm_tail53.pre = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 7
  br label %if.end52

if.else50:                                        ; preds = %do.body46
  %systm_tail = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 7
  %22 = load %struct.search_path** %systm_tail, align 8, !tbaa !74
  %next51 = getelementptr inbounds %struct.search_path* %22, i64 0, i32 0
  store %struct.search_path* %8, %struct.search_path** %next51, align 8, !tbaa !62
  br label %if.end52

if.end52:                                         ; preds = %if.else50, %if.then48
  %systm_tail53.pre-phi = phi %struct.search_path** [ %systm_tail, %if.else50 ], [ %systm_tail53.pre, %if.then48 ]
  store %struct.search_path* %8, %struct.search_path** %systm_tail53.pre-phi, align 8, !tbaa !74
  br label %cleanup

do.body57:                                        ; preds = %if.end37
  %after_head = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 8
  %23 = load %struct.search_path** %after_head, align 8, !tbaa !73
  %tobool58 = icmp eq %struct.search_path* %23, null
  br i1 %tobool58, label %if.then59, label %if.else61

if.then59:                                        ; preds = %do.body57
  store %struct.search_path* %8, %struct.search_path** %after_head, align 8, !tbaa !73
  %after_tail64.pre = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 9
  br label %if.end63

if.else61:                                        ; preds = %do.body57
  %after_tail = getelementptr inbounds %struct.cpp_pending* %0, i64 0, i32 9
  %24 = load %struct.search_path** %after_tail, align 8, !tbaa !165
  %next62 = getelementptr inbounds %struct.search_path* %24, i64 0, i32 0
  store %struct.search_path* %8, %struct.search_path** %next62, align 8, !tbaa !62
  br label %if.end63

if.end63:                                         ; preds = %if.else61, %if.then59
  %after_tail64.pre-phi = phi %struct.search_path** [ %after_tail, %if.else61 ], [ %after_tail64.pre, %if.then59 ]
  store %struct.search_path* %8, %struct.search_path** %after_tail64.pre-phi, align 8, !tbaa !165
  br label %cleanup

cleanup:                                          ; preds = %if.end43, %if.end52, %if.end63, %if.end37, %if.then18, %if.end14
  call void @llvm.lifetime.end(i64 144, i8* %1) #4
  ret void
}

declare noalias i8* @xstrdup(i8*) #1

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define i32 @cpp_handle_options(%struct.cpp_reader* %pfile, i32 %argc, i8** nocapture readonly %argv) #0 {
entry:
  %cmp8 = icmp sgt i32 %argc, 0
  br i1 %cmp8, label %for.body, label %for.end

for.cond:                                         ; preds = %for.body
  %cmp = icmp slt i32 %add, %argc
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.cond
  %i.09 = phi i32 [ %add, %for.cond ], [ 0, %entry ]
  %sub = sub nsw i32 %argc, %i.09
  %idx.ext = sext i32 %i.09 to i64
  %add.ptr = getelementptr inbounds i8** %argv, i64 %idx.ext
  %call = tail call i32 @cpp_handle_option(%struct.cpp_reader* %pfile, i32 %sub, i8** %add.ptr, i32 1)
  %cmp1 = icmp eq i32 %call, 0
  %add = add nsw i32 %call, %i.09
  br i1 %cmp1, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %entry
  %i.0.lcssa = phi i32 [ 0, %entry ], [ %add, %for.cond ], [ %i.09, %for.body ]
  ret i32 %i.0.lcssa
}

; Function Attrs: nounwind uwtable
define void @cpp_post_options(%struct.cpp_reader* %pfile) #0 {
entry:
  %print_version = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 39
  %0 = load i8* %print_version, align 1, !tbaa !134
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !46
  %2 = load i8** @version_string, align 8, !tbaa !46
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([28 x i8]* @.str29, i64 0, i64 0), i8* %2) #6
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([20 x i8]* @.str30, i64 0, i64 0), i64 19, i64 1, %struct._IO_FILE* %1) #7
  %call2 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %1) #6
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %in_fname = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 0
  %4 = load i8** %in_fname, align 8, !tbaa !124
  %cmp = icmp eq i8* %4, null
  br i1 %cmp, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %call5 = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([2 x i8]* @.str10, i64 0, i64 0)) #4
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.then7, label %if.end10

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  store i8* getelementptr inbounds ([1 x i8]* @.str8, i64 0, i64 0), i8** %in_fname, align 8, !tbaa !124
  br label %if.end10

if.end10:                                         ; preds = %lor.lhs.false, %if.then7
  %out_fname = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 1
  %5 = load i8** %out_fname, align 8, !tbaa !125
  %cmp12 = icmp eq i8* %5, null
  br i1 %cmp12, label %if.then18, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %if.end10
  %call16 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([2 x i8]* @.str10, i64 0, i64 0)) #4
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %if.then18, label %if.end21

if.then18:                                        ; preds = %lor.lhs.false13, %if.end10
  store i8* getelementptr inbounds ([1 x i8]* @.str8, i64 0, i64 0), i8** %out_fname, align 8, !tbaa !125
  br label %if.end21

if.end21:                                         ; preds = %lor.lhs.false13, %if.then18
  %6 = phi i8* [ %5, %lor.lhs.false13 ], [ getelementptr inbounds ([1 x i8]* @.str8, i64 0, i64 0), %if.then18 ]
  %cplusplus = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 14
  %7 = load i8* %cplusplus, align 1, !tbaa !25
  %tobool23 = icmp eq i8 %7, 0
  br i1 %tobool23, label %if.end26, label %if.then24

if.then24:                                        ; preds = %if.end21
  %warn_traditional = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 33
  store i8 0, i8* %warn_traditional, align 1, !tbaa !151
  br label %if.end26

if.end26:                                         ; preds = %if.end21, %if.then24
  %user_label_prefix = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 10
  %8 = load i8** %user_label_prefix, align 8, !tbaa !131
  %cmp28 = icmp eq i8* %8, null
  br i1 %cmp28, label %if.then29, label %if.end32

if.then29:                                        ; preds = %if.end26
  store i8* getelementptr inbounds ([1 x i8]* @.str8, i64 0, i64 0), i8** %user_label_prefix, align 8, !tbaa !131
  br label %if.end32

if.end32:                                         ; preds = %if.then29, %if.end26
  %preprocessed = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 43
  %9 = load i8* %preprocessed, align 1, !tbaa !83
  %tobool34 = icmp eq i8 %9, 0
  br i1 %tobool34, label %if.end36, label %if.then35

if.then35:                                        ; preds = %if.end32
  %prevent_expansion = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 7
  store i8 1, i8* %prevent_expansion, align 1, !tbaa !166
  br label %if.end36

if.end36:                                         ; preds = %if.end32, %if.then35
  %dump_macros = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 46
  %10 = load i8* %dump_macros, align 1, !tbaa !141
  %cmp38 = icmp eq i8 %10, 1
  %no_output = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 35
  br i1 %cmp38, label %if.then46, label %if.end42

if.end42:                                         ; preds = %if.end36
  %.pre = load i8* %no_output, align 1, !tbaa !144
  %phitmp = icmp eq i8 %.pre, 0
  br i1 %phitmp, label %if.end57, label %if.then52

if.then46:                                        ; preds = %if.end36
  store i8 1, i8* %no_output, align 1, !tbaa !144
  br label %if.end55

if.then52:                                        ; preds = %if.end42
  store i8 0, i8* %dump_macros, align 1, !tbaa !141
  br label %if.end55

if.end55:                                         ; preds = %if.then46, %if.then52
  %dump_includes = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 47
  store i8 0, i8* %dump_includes, align 1, !tbaa !142
  br label %if.end57

if.end57:                                         ; preds = %if.end42, %if.end55
  %print_deps.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 21
  %11 = load i8* %print_deps.i, align 1, !tbaa !80
  %cmp.i = icmp eq i8 %11, 0
  br i1 %cmp.i, label %if.then.i, label %if.else32.i

if.then.i:                                        ; preds = %if.end57
  %call.i = tail call i8* @getenv(i8* getelementptr inbounds ([20 x i8]* @.str44, i64 0, i64 0)) #4
  %tobool.i = icmp eq i8* %call.i, null
  br i1 %tobool.i, label %if.else.i, label %if.end11.i

if.else.i:                                        ; preds = %if.then.i
  %call5.i = tail call i8* @getenv(i8* getelementptr inbounds ([20 x i8]* @.str45, i64 0, i64 0)) #4
  %tobool6.i = icmp eq i8* %call5.i, null
  br i1 %tobool6.i, label %land.lhs.true, label %if.end11.i

if.end11.i:                                       ; preds = %if.else.i, %if.then.i
  %storemerge.i = phi i8 [ 1, %if.then.i ], [ 2, %if.else.i ]
  %spec.0.i = phi i8* [ %call.i, %if.then.i ], [ %call5.i, %if.else.i ]
  store i8 %storemerge.i, i8* %print_deps.i, align 1, !tbaa !80
  %call12.i = tail call i8* @strchr(i8* %spec.0.i, i32 32) #4
  %tobool13.i = icmp eq i8* %call12.i, null
  br i1 %tobool13.i, label %if.end23.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end11.i
  %deps.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 31
  %12 = load %struct.deps** %deps.i, align 8, !tbaa !43
  %add.ptr.i = getelementptr inbounds i8* %call12.i, i64 1
  tail call void @deps_add_target(%struct.deps* %12, i8* %add.ptr.i, i32 0) #4
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call12.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %spec.0.i to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %add.i = add nsw i64 %sub.ptr.sub.i, 1
  %call15.i = tail call noalias i8* @xmalloc(i64 %add.i) #4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call15.i, i8* %spec.0.i, i64 %sub.ptr.sub.i, i32 1, i1 false) #4
  %arrayidx.i = getelementptr inbounds i8* %call15.i, i64 %sub.ptr.sub.i
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !89
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.then14.i, %if.end11.i
  %output_file.0.i = phi i8* [ %call15.i, %if.then14.i ], [ %spec.0.i, %if.end11.i ]
  %deps_file.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 4
  %13 = load i8** %deps_file.i, align 8, !tbaa !121
  %cmp25.i = icmp eq i8* %13, null
  br i1 %cmp25.i, label %if.then27.i, label %init_dependency_output.exit

if.then27.i:                                      ; preds = %if.end23.i
  store i8* %output_file.0.i, i8** %deps_file.i, align 8, !tbaa !121
  br label %init_dependency_output.exit

if.else32.i:                                      ; preds = %if.end57
  %deps_file34.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 4
  %14 = load i8** %deps_file34.i, align 8, !tbaa !121
  %cmp35.i = icmp eq i8* %14, null
  br i1 %cmp35.i, label %if.then37.i, label %if.end73

if.then37.i:                                      ; preds = %if.else32.i
  store i8* %6, i8** %deps_file34.i, align 8, !tbaa !121
  br label %if.end73

init_dependency_output.exit:                      ; preds = %if.end23.i, %if.then27.i
  %print_deps_append.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 24
  store i8 1, i8* %print_deps_append.i, align 1, !tbaa !122
  %.pre98 = load i8* %print_deps.i, align 1, !tbaa !80
  %cmp60 = icmp eq i8 %.pre98, 0
  br i1 %cmp60, label %land.lhs.true, label %if.end73

land.lhs.true:                                    ; preds = %if.else.i, %init_dependency_output.exit
  %print_deps_missing_files = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 23
  %15 = load i8* %print_deps_missing_files, align 1, !tbaa !143
  %tobool64 = icmp eq i8 %15, 0
  br i1 %tobool64, label %lor.lhs.false65, label %if.then72

lor.lhs.false65:                                  ; preds = %land.lhs.true
  %deps_file = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 4
  %16 = load i8** %deps_file, align 8, !tbaa !121
  %tobool67 = icmp eq i8* %16, null
  br i1 %tobool67, label %lor.lhs.false68, label %if.then72

lor.lhs.false68:                                  ; preds = %lor.lhs.false65
  %deps_phony_targets = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 22
  %17 = load i8* %deps_phony_targets, align 1, !tbaa !123
  %tobool71 = icmp eq i8 %17, 0
  br i1 %tobool71, label %if.end73, label %if.then72

if.then72:                                        ; preds = %lor.lhs.false68, %lor.lhs.false65, %land.lhs.true
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_fatal(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([47 x i8]* @.str31, i64 0, i64 0)) #4
  br label %if.end73

if.end73:                                         ; preds = %if.then37.i, %if.else32.i, %lor.lhs.false68, %if.then72, %init_dependency_output.exit
  ret void
}

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind readonly
declare i8* @getenv(i8* nocapture) #3

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

declare i8* @_cpp_simplify_pathname(i8*) #1

; Function Attrs: nounwind
declare i32 @stat(i8* nocapture readonly, %struct.stat* nocapture) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

declare void @cpp_notice_from_errno(%struct.cpp_reader*, i8*) #1

declare void @cpp_notice(%struct.cpp_reader*, i8*, ...) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) #3

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #2

declare void @deps_write(%struct.deps*, %struct._IO_FILE*, i32) #1

declare void @deps_phony_targets(%struct.deps*, %struct._IO_FILE*) #1

; Function Attrs: nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) #3

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #2

declare zeroext i1 @_cpp_execute_include(%struct.cpp_reader*, %struct.cpp_token*, i32) #1

declare %struct.cpp_hashnode* @cpp_lookup(%struct.cpp_reader*, i8*, i32) #1

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #2

declare void @_cpp_define_builtin(%struct.cpp_reader*, i8*) #1

declare %struct.cpp_token* @_cpp_lex_direct(%struct.cpp_reader*) #1

declare void @_cpp_backup_tokens(%struct.cpp_reader*, i32) #1

declare i32 @_cpp_handle_directive(%struct.cpp_reader*, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.search_path* @remove_dup_dirs(%struct.cpp_reader* %pfile, %struct.search_path* %head) #0 {
entry:
  %tobool44 = icmp eq %struct.search_path* %head, null
  br i1 %tobool44, label %for.end22, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %pfile.idx = getelementptr %struct.cpp_reader* %pfile, i64 0, i32 37, i32 12
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !46
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.end
  %cur.046 = phi %struct.search_path* [ %head, %for.cond1.preheader.lr.ph ], [ %16, %for.end ]
  %prev.045 = phi %struct.search_path* [ null, %for.cond1.preheader.lr.ph ], [ %cur.1, %for.end ]
  %cmp42 = icmp eq %struct.search_path* %cur.046, %head
  br i1 %cmp42, label %for.end, label %for.body2.lr.ph

for.body2.lr.ph:                                  ; preds = %for.cond1.preheader
  %ino = getelementptr inbounds %struct.search_path* %cur.046, i64 0, i32 3
  %1 = load i64* %ino, align 8, !tbaa !76
  %dev = getelementptr inbounds %struct.search_path* %cur.046, i64 0, i32 4
  br label %for.body2

for.body2:                                        ; preds = %for.body2.lr.ph, %for.inc
  %other.043 = phi %struct.search_path* [ %head, %for.body2.lr.ph ], [ %15, %for.inc ]
  %ino3 = getelementptr inbounds %struct.search_path* %other.043, i64 0, i32 3
  %2 = load i64* %ino3, align 8, !tbaa !76
  %cmp4 = icmp eq i64 %1, %2
  br i1 %cmp4, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body2
  %3 = load i64* %dev, align 8, !tbaa !77
  %dev5 = getelementptr inbounds %struct.search_path* %other.043, i64 0, i32 4
  %4 = load i64* %dev5, align 8, !tbaa !77
  %cmp6 = icmp eq i64 %3, %4
  br i1 %cmp6, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true
  %sysp = getelementptr inbounds %struct.search_path* %cur.046, i64 0, i32 5
  %5 = load i32* %sysp, align 4, !tbaa !163
  %tobool7 = icmp eq i32 %5, 0
  br i1 %tobool7, label %if.end17, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %if.then
  %sysp9 = getelementptr inbounds %struct.search_path* %other.043, i64 0, i32 5
  %6 = load i32* %sysp9, align 4, !tbaa !163
  %tobool10 = icmp eq i32 %6, 0
  br i1 %tobool10, label %if.then11, label %if.end17

if.then11:                                        ; preds = %land.lhs.true8
  %name = getelementptr inbounds %struct.search_path* %cur.046, i64 0, i32 1
  %7 = load i8** %name, align 8, !tbaa !64
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([48 x i8]* @.str166, i64 0, i64 0), i8* %7) #4
  %8 = load i8** %name, align 8, !tbaa !64
  %name13 = getelementptr inbounds %struct.search_path* %other.043, i64 0, i32 1
  %9 = load i8** %name13, align 8, !tbaa !64
  %call = tail call i32 @strcmp(i8* %8, i8* %9) #4
  %tobool14 = icmp eq i32 %call, 0
  br i1 %tobool14, label %if.else, label %if.then15

if.then15:                                        ; preds = %if.then11
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([49 x i8]* @.str167, i64 0, i64 0), i8* %9) #4
  br label %if.end17

if.else:                                          ; preds = %if.then11
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([61 x i8]* @.str168, i64 0, i64 0)) #4
  br label %if.end17

if.end17:                                         ; preds = %land.lhs.true8, %if.then, %if.then15, %if.else
  %pfile.idx.val = load i8* %pfile.idx, align 1, !tbaa !78
  %next.i = getelementptr inbounds %struct.search_path* %prev.045, i64 0, i32 0
  %10 = load %struct.search_path** %next.i, align 8, !tbaa !62
  %tobool.i = icmp eq i8 %pfile.idx.val, 0
  %name3.pre.i = getelementptr inbounds %struct.search_path* %10, i64 0, i32 1
  br i1 %tobool.i, label %remove_dup_dir.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end17
  %11 = load i8** %name3.pre.i, align 8, !tbaa !64
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([35 x i8]* @.str165, i64 0, i64 0), i8* %11) #6
  br label %remove_dup_dir.exit

remove_dup_dir.exit:                              ; preds = %if.end17, %if.then.i
  %next1.i = getelementptr inbounds %struct.search_path* %10, i64 0, i32 0
  %12 = load %struct.search_path** %next1.i, align 8, !tbaa !62
  store %struct.search_path* %12, %struct.search_path** %next.i, align 8, !tbaa !62
  %13 = load i8** %name3.pre.i, align 8, !tbaa !64
  tail call void @free(i8* %13) #4
  %14 = bitcast %struct.search_path* %10 to i8*
  tail call void @free(i8* %14) #4
  br label %for.end

for.inc:                                          ; preds = %for.body2, %land.lhs.true
  %next = getelementptr inbounds %struct.search_path* %other.043, i64 0, i32 0
  %15 = load %struct.search_path** %next, align 8, !tbaa !62
  %cmp = icmp eq %struct.search_path* %15, %cur.046
  br i1 %cmp, label %for.end, label %for.body2

for.end:                                          ; preds = %for.inc, %for.cond1.preheader, %remove_dup_dir.exit
  %cur.1 = phi %struct.search_path* [ %prev.045, %remove_dup_dir.exit ], [ %cur.046, %for.cond1.preheader ], [ %cur.046, %for.inc ]
  %next21 = getelementptr inbounds %struct.search_path* %cur.1, i64 0, i32 0
  %16 = load %struct.search_path** %next21, align 8, !tbaa !62
  %tobool = icmp eq %struct.search_path* %16, null
  br i1 %tobool, label %for.end22, label %for.cond1.preheader

for.end22:                                        ; preds = %for.end, %entry
  %prev.0.lcssa = phi %struct.search_path* [ null, %entry ], [ %cur.1, %for.end ]
  ret %struct.search_path* %prev.0.lcssa
}

declare void @cpp_warning(%struct.cpp_reader*, i8*, ...) #1

declare i8* @update_path(i8*, i8*) #1

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #4

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold nounwind }
attributes #7 = { cold }
attributes #8 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !4, i64 736}
!2 = metadata !{metadata !"cpp_reader", metadata !3, i64 0, metadata !6, i64 8, metadata !7, i64 24, metadata !3, i64 56, metadata !8, i64 64, metadata !8, i64 68, metadata !3, i64 72, metadata !3, i64 80, metadata !3, i64 88, metadata !10, i64 96, metadata !3, i64 152, metadata !3, i64 160, metadata !3, i64 168, metadata !3, i64 176, metadata !9, i64 184, metadata !3, i64 192, metadata !11, i64 200, metadata !3, i64 232, metadata !8, i64 240, metadata !8, i64 244, metadata !8, i64 248, metadata !8, i64 252, metadata !8, i64 256, metadata !3, i64 264, metadata !8, i64 272, metadata !3, i64 280, metadata !8, i64 288, metadata !12, i64 296, metadata !12, i64 320, metadata !12, i64 344, metadata !12, i64 368, metadata !3, i64 392, metadata !14, i64 400, metadata !14, i64 488, metadata !3, i64 576, metadata !16, i64 584, metadata !3, i64 640, metadata !17, i64 648, metadata !18, i64 784, metadata !4, i64 824, metadata !4, i64 825}
!3 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"lexer_state", metadata !4, i64 0, metadata !4, i64 1, metadata !4, i64 2, metadata !4, i64 3, metadata !4, i64 4, metadata !4, i64 5, metadata !4, i64 6, metadata !4, i64 7, metadata !4, i64 8}
!7 = metadata !{metadata !"line_maps", metadata !3, i64 0, metadata !8, i64 8, metadata !8, i64 12, metadata !8, i64 16, metadata !8, i64 20, metadata !9, i64 24}
!8 = metadata !{metadata !"int", metadata !4, i64 0}
!9 = metadata !{metadata !"_Bool", metadata !4, i64 0}
!10 = metadata !{metadata !"cpp_context", metadata !3, i64 0, metadata !3, i64 8, metadata !4, i64 16, metadata !4, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !9, i64 48}
!11 = metadata !{metadata !"tokenrun", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24}
!12 = metadata !{metadata !"cpp_token", metadata !8, i64 0, metadata !13, i64 4, metadata !4, i64 6, metadata !4, i64 7, metadata !4, i64 8}
!13 = metadata !{metadata !"short", metadata !4, i64 0}
!14 = metadata !{metadata !"obstack", metadata !15, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !15, i64 40, metadata !8, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !3, i64 72, metadata !8, i64 80, metadata !8, i64 80, metadata !8, i64 80}
!15 = metadata !{metadata !"long", metadata !4, i64 0}
!16 = metadata !{metadata !"cpp_callbacks", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48}
!17 = metadata !{metadata !"cpp_options", metadata !3, i64 0, metadata !3, i64 8, metadata !8, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !8, i64 72, metadata !3, i64 80, metadata !4, i64 88, metadata !4, i64 92, metadata !4, i64 93, metadata !4, i64 94, metadata !4, i64 95, metadata !4, i64 96, metadata !4, i64 97, metadata !4, i64 98, metadata !4, i64 99, metadata !4, i64 100, metadata !4, i64 101, metadata !4, i64 102, metadata !4, i64 103, metadata !4, i64 104, metadata !4, i64 105, metadata !4, i64 106, metadata !4, i64 107, metadata !4, i64 108, metadata !4, i64 109, metadata !4, i64 110, metadata !4, i64 111, metadata !4, i64 112, metadata !4, i64 113, metadata !4, i64 114, metadata !4, i64 115, metadata !4, i64 116, metadata !4, i64 117, metadata !4, i64 118, metadata !4, i64 119, metadata !4, i64 120, metadata !4, i64 121, metadata !4, i64 122, metadata !4, i64 123, metadata !4, i64 124, metadata !4, i64 125, metadata !4, i64 126, metadata !4, i64 127, metadata !4, i64 128, metadata !4, i64 129, metadata !4, i64 130}
!18 = metadata !{metadata !"spec_nodes", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32}
!19 = metadata !{metadata !20, metadata !4, i64 0}
!20 = metadata !{metadata !"lang_flags", metadata !4, i64 0, metadata !4, i64 1, metadata !4, i64 2, metadata !4, i64 3, metadata !4, i64 4, metadata !4, i64 5, metadata !4, i64 6, metadata !4, i64 7}
!21 = metadata !{metadata !2, metadata !4, i64 769}
!22 = metadata !{metadata !20, metadata !4, i64 1}
!23 = metadata !{metadata !2, metadata !4, i64 744}
!24 = metadata !{metadata !20, metadata !4, i64 2}
!25 = metadata !{metadata !2, metadata !4, i64 742}
!26 = metadata !{metadata !20, metadata !4, i64 3}
!27 = metadata !{metadata !2, metadata !4, i64 748}
!28 = metadata !{metadata !20, metadata !4, i64 4}
!29 = metadata !{metadata !2, metadata !4, i64 746}
!30 = metadata !{metadata !20, metadata !4, i64 5}
!31 = metadata !{metadata !2, metadata !4, i64 767}
!32 = metadata !{metadata !20, metadata !4, i64 6}
!33 = metadata !{metadata !2, metadata !4, i64 743}
!34 = metadata !{metadata !20, metadata !4, i64 7}
!35 = metadata !{metadata !2, metadata !4, i64 747}
!36 = metadata !{metadata !2, metadata !4, i64 760}
!37 = metadata !{metadata !2, metadata !4, i64 745}
!38 = metadata !{metadata !2, metadata !4, i64 776}
!39 = metadata !{metadata !2, metadata !8, i64 664}
!40 = metadata !{metadata !2, metadata !4, i64 777}
!41 = metadata !{metadata !2, metadata !4, i64 741}
!42 = metadata !{metadata !2, metadata !3, i64 672}
!43 = metadata !{metadata !2, metadata !3, i64 392}
!44 = metadata !{metadata !2, metadata !8, i64 64}
!45 = metadata !{metadata !2, metadata !4, i64 11}
!46 = metadata !{metadata !3, metadata !3, i64 0}
!47 = metadata !{metadata !2, metadata !4, i64 375}
!48 = metadata !{metadata !2, metadata !3, i64 232}
!49 = metadata !{metadata !2, metadata !3, i64 216}
!50 = metadata !{metadata !2, metadata !3, i64 192}
!51 = metadata !{metadata !2, metadata !3, i64 152}
!52 = metadata !{metadata !2, metadata !3, i64 136}
!53 = metadata !{metadata !2, metadata !3, i64 72}
!54 = metadata !{metadata !2, metadata !3, i64 80}
!55 = metadata !{metadata !2, metadata !3, i64 0}
!56 = metadata !{metadata !2, metadata !3, i64 264}
!57 = metadata !{metadata !2, metadata !8, i64 272}
!58 = metadata !{metadata !2, metadata !3, i64 88}
!59 = metadata !{metadata !11, metadata !3, i64 0}
!60 = metadata !{metadata !11, metadata !3, i64 16}
!61 = metadata !{metadata !2, metadata !3, i64 688}
!62 = metadata !{metadata !63, metadata !3, i64 0}
!63 = metadata !{metadata !"search_path", metadata !3, i64 0, metadata !3, i64 8, metadata !8, i64 16, metadata !15, i64 24, metadata !15, i64 32, metadata !8, i64 40, metadata !3, i64 48}
!64 = metadata !{metadata !63, metadata !3, i64 8}
!65 = metadata !{metadata !2, metadata !3, i64 96}
!66 = metadata !{metadata !10, metadata !3, i64 0}
!67 = metadata !{metadata !2, metadata !8, i64 248}
!68 = metadata !{metadata !2, metadata !4, i64 772}
!69 = metadata !{metadata !70, metadata !3, i64 16}
!70 = metadata !{metadata !"cpp_pending", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !3, i64 72, metadata !3, i64 80, metadata !3, i64 88, metadata !3, i64 96, metadata !3, i64 104}
!71 = metadata !{metadata !70, metadata !3, i64 32}
!72 = metadata !{metadata !70, metadata !3, i64 48}
!73 = metadata !{metadata !70, metadata !3, i64 64}
!74 = metadata !{metadata !70, metadata !3, i64 56}
!75 = metadata !{metadata !70, metadata !3, i64 40}
!76 = metadata !{metadata !63, metadata !15, i64 24}
!77 = metadata !{metadata !63, metadata !15, i64 32}
!78 = metadata !{metadata !2, metadata !4, i64 740}
!79 = metadata !{metadata !2, metadata !3, i64 696}
!80 = metadata !{metadata !2, metadata !4, i64 749}
!81 = metadata !{metadata !2, metadata !4, i64 753}
!82 = metadata !{metadata !2, metadata !9, i64 48}
!83 = metadata !{metadata !2, metadata !4, i64 771}
!84 = metadata !{metadata !12, metadata !4, i64 7}
!85 = metadata !{metadata !2, metadata !3, i64 56}
!86 = metadata !{metadata !87, metadata !3, i64 0}
!87 = metadata !{metadata !"line_map", metadata !3, i64 0, metadata !8, i64 8, metadata !8, i64 12, metadata !8, i64 16, metadata !4, i64 20, metadata !4, i64 21}
!88 = metadata !{metadata !2, metadata !3, i64 712}
!89 = metadata !{metadata !4, metadata !4, i64 0}
!90 = metadata !{metadata !91, metadata !3, i64 0}
!91 = metadata !{metadata !"default_include", metadata !3, i64 0, metadata !3, i64 8, metadata !8, i64 16, metadata !8, i64 20}
!92 = metadata !{metadata !91, metadata !8, i64 16}
!93 = metadata !{metadata !2, metadata !4, i64 773}
!94 = metadata !{metadata !91, metadata !8, i64 20}
!95 = metadata !{metadata !91, metadata !3, i64 8}
!96 = metadata !{metadata !97, metadata !3, i64 0}
!97 = metadata !{metadata !"named_op", metadata !3, i64 0, metadata !8, i64 8, metadata !4, i64 12}
!98 = metadata !{metadata !97, metadata !8, i64 8}
!99 = metadata !{metadata !100, metadata !4, i64 21}
!100 = metadata !{metadata !"cpp_hashnode", metadata !101, i64 0, metadata !13, i64 16, metadata !4, i64 18, metadata !4, i64 19, metadata !4, i64 20, metadata !4, i64 21, metadata !4, i64 24}
!101 = metadata !{metadata !"ht_identifier", metadata !8, i64 0, metadata !3, i64 8}
!102 = metadata !{metadata !97, metadata !4, i64 12}
!103 = metadata !{metadata !70, metadata !3, i64 80}
!104 = metadata !{metadata !105, metadata !3, i64 16}
!105 = metadata !{metadata !"pending_option", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16}
!106 = metadata !{metadata !105, metadata !3, i64 8}
!107 = metadata !{metadata !108, metadata !3, i64 8}
!108 = metadata !{metadata !"cpp_string", metadata !8, i64 0, metadata !3, i64 8}
!109 = metadata !{metadata !108, metadata !8, i64 0}
!110 = metadata !{metadata !111, metadata !9, i64 83}
!111 = metadata !{metadata !"cpp_buffer", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !8, i64 64, metadata !4, i64 68, metadata !3, i64 72, metadata !4, i64 80, metadata !4, i64 81, metadata !4, i64 82, metadata !9, i64 83, metadata !63, i64 88}
!112 = metadata !{metadata !105, metadata !3, i64 0}
!113 = metadata !{metadata !70, metadata !3, i64 0}
!114 = metadata !{metadata !115, metadata !13, i64 18}
!115 = metadata !{metadata !"builtin", metadata !3, i64 0, metadata !3, i64 8, metadata !4, i64 16, metadata !13, i64 18, metadata !13, i64 20}
!116 = metadata !{metadata !115, metadata !3, i64 0}
!117 = metadata !{metadata !115, metadata !13, i64 20}
!118 = metadata !{metadata !115, metadata !4, i64 16}
!119 = metadata !{metadata !70, metadata !3, i64 96}
!120 = metadata !{metadata !2, metadata !3, i64 24}
!121 = metadata !{metadata !2, metadata !3, i64 680}
!122 = metadata !{metadata !2, metadata !4, i64 752}
!123 = metadata !{metadata !2, metadata !4, i64 750}
!124 = metadata !{metadata !2, metadata !3, i64 648}
!125 = metadata !{metadata !2, metadata !3, i64 656}
!126 = metadata !{metadata !127, metadata !15, i64 16}
!127 = metadata !{metadata !"cl_option", metadata !3, i64 0, metadata !3, i64 8, metadata !15, i64 16, metadata !4, i64 24}
!128 = metadata !{metadata !127, metadata !3, i64 0}
!129 = metadata !{metadata !127, metadata !3, i64 8}
!130 = metadata !{metadata !127, metadata !4, i64 24}
!131 = metadata !{metadata !2, metadata !3, i64 728}
!132 = metadata !{metadata !2, metadata !4, i64 755}
!133 = metadata !{metadata !2, metadata !4, i64 778}
!134 = metadata !{metadata !2, metadata !4, i64 824}
!135 = metadata !{metadata !2, metadata !4, i64 765}
!136 = metadata !{metadata !70, metadata !3, i64 8}
!137 = metadata !{metadata !2, metadata !4, i64 754}
!138 = metadata !{metadata !2, metadata !4, i64 770}
!139 = metadata !{metadata !2, metadata !4, i64 764}
!140 = metadata !{metadata !2, metadata !8, i64 720}
!141 = metadata !{metadata !2, metadata !4, i64 774}
!142 = metadata !{metadata !2, metadata !4, i64 775}
!143 = metadata !{metadata !2, metadata !4, i64 751}
!144 = metadata !{metadata !2, metadata !4, i64 763}
!145 = metadata !{metadata !2, metadata !4, i64 766}
!146 = metadata !{metadata !70, metadata !3, i64 104}
!147 = metadata !{metadata !70, metadata !3, i64 88}
!148 = metadata !{metadata !15, metadata !15, i64 0}
!149 = metadata !{metadata !2, metadata !4, i64 759}
!150 = metadata !{metadata !2, metadata !4, i64 758}
!151 = metadata !{metadata !2, metadata !4, i64 761}
!152 = metadata !{metadata !2, metadata !4, i64 768}
!153 = metadata !{metadata !2, metadata !4, i64 762}
!154 = metadata !{metadata !2, metadata !4, i64 756}
!155 = metadata !{metadata !8, metadata !8, i64 0}
!156 = metadata !{metadata !157, metadata !8, i64 24}
!157 = metadata !{metadata !"stat", metadata !15, i64 0, metadata !15, i64 8, metadata !15, i64 16, metadata !8, i64 24, metadata !8, i64 28, metadata !8, i64 32, metadata !8, i64 36, metadata !15, i64 40, metadata !15, i64 48, metadata !15, i64 56, metadata !15, i64 64, metadata !158, i64 72, metadata !158, i64 88, metadata !158, i64 104, metadata !4, i64 120}
!158 = metadata !{metadata !"timespec", metadata !15, i64 0, metadata !15, i64 8}
!159 = metadata !{metadata !2, metadata !8, i64 288}
!160 = metadata !{metadata !63, metadata !8, i64 16}
!161 = metadata !{metadata !157, metadata !15, i64 8}
!162 = metadata !{metadata !157, metadata !15, i64 0}
!163 = metadata !{metadata !63, metadata !8, i64 40}
!164 = metadata !{metadata !63, metadata !3, i64 48}
!165 = metadata !{metadata !70, metadata !3, i64 72}
!166 = metadata !{metadata !2, metadata !4, i64 15}
