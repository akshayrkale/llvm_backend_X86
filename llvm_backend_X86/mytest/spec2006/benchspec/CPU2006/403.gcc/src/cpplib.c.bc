; ModuleID = 'cpplib.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type opaque
%struct.cpp_reader = type { %struct.cpp_buffer*, %struct.lexer_state, %struct.line_maps, %struct.line_map*, i32, i32, %struct._cpp_buff*, %struct._cpp_buff*, %struct._cpp_buff*, %struct.cpp_context, %struct.cpp_context*, %struct.directive*, %struct.cpp_hashnode*, %struct.cpp_hashnode*, i8, %struct.cpp_token*, %struct.tokenrun, %struct.tokenrun*, i32, i32, i32, i32, i32, i8*, i32, %struct.splay_tree_s*, i32, %struct.cpp_token, %struct.cpp_token, %struct.cpp_token, %struct.cpp_token, %struct.deps*, %struct.obstack, %struct.obstack, %struct.pragma_entry*, %struct.cpp_callbacks, %struct.ht*, %struct.cpp_options, %struct.spec_nodes, i8, i8 }
%struct.cpp_buffer = type { i8*, i8*, i8*, i8*, %struct.cpp_buffer*, i8*, %struct.include_file*, %struct.if_stack*, i32, i8, i8*, i8, i8, i8, i8, %struct.search_path }
%struct.include_file = type opaque
%struct.if_stack = type { %struct.if_stack*, i32, %struct.cpp_hashnode*, i8, i8, i32 }
%struct.search_path = type { %struct.search_path*, i8*, i32, i64, i64, i32, %struct.file_name_map* }
%struct.file_name_map = type opaque
%struct.lexer_state = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.line_maps = type { %struct.line_map*, i32, i32, i32, i32, i8 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8 }
%struct._cpp_buff = type { %struct._cpp_buff*, i8*, i8*, i8* }
%struct.cpp_context = type { %struct.cpp_context*, %struct.cpp_context*, %union.utoken, %union.utoken, %struct._cpp_buff*, %struct.cpp_hashnode*, i8 }
%union.utoken = type { %struct.cpp_token* }
%struct.directive = type { void (%struct.cpp_reader*)*, i8*, i16, i8, i8 }
%struct.cpp_hashnode = type { %struct.ht_identifier, i16, i8, i8, i8, i8, %union.anon }
%struct.ht_identifier = type { i32, i8* }
%union.anon = type { %struct.cpp_macro* }
%struct.cpp_macro = type opaque
%struct.tokenrun = type { %struct.tokenrun*, %struct.tokenrun*, %struct.cpp_token*, %struct.cpp_token* }
%struct.splay_tree_s = type opaque
%struct.cpp_token = type { i32, i16, i8, i8, %union.anon.0 }
%union.anon.0 = type { %struct.cpp_string }
%struct.cpp_string = type { i32, i8* }
%struct.deps = type opaque
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.pragma_entry = type { %struct.pragma_entry*, %struct.cpp_hashnode*, i32, %union.anon.1 }
%union.anon.1 = type { void (%struct.cpp_reader*)* }
%struct.cpp_callbacks = type { void (%struct.cpp_reader*, %struct.cpp_token*, i32)*, void (%struct.cpp_reader*, %struct.line_map*)*, void (%struct.cpp_reader*, i32, i8*, %struct.cpp_token*)*, void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)*, void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)*, void (%struct.cpp_reader*, i32, %struct.cpp_string*)*, void (%struct.cpp_reader*, i32)* }
%struct.ht = type { %struct.obstack, %struct.ht_identifier**, %struct.ht_identifier* (%struct.ht*)*, i32, i32, %struct.cpp_reader*, i32, i32 }
%struct.cpp_options = type { i8*, i8*, i32, %struct.cpp_pending*, i8*, %struct.search_path*, %struct.search_path*, %struct.file_name_map_list*, i8*, i32, i8*, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.cpp_pending = type opaque
%struct.file_name_map_list = type opaque
%struct.spec_nodes = type { %struct.cpp_hashnode*, %struct.cpp_hashnode*, %struct.cpp_hashnode*, %struct.cpp_hashnode*, %struct.cpp_hashnode* }
%struct.answer = type { %struct.answer*, i32, [1 x %struct.cpp_token] }

@.str = private unnamed_addr constant [43 x i8] c"style of line directive is a GCC extension\00", align 1
@.str1 = private unnamed_addr constant [36 x i8] c"invalid preprocessing directive #%s\00", align 1
@.str2 = private unnamed_addr constant [57 x i8] c"registering \22%s\22 as both a pragma and a pragma namespace\00", align 1
@.str3 = private unnamed_addr constant [36 x i8] c"#pragma %s %s is already registered\00", align 1
@.str4 = private unnamed_addr constant [33 x i8] c"#pragma %s is already registered\00", align 1
@.str5 = private unnamed_addr constant [7 x i8] c"poison\00", align 1
@.str6 = private unnamed_addr constant [5 x i8] c"once\00", align 1
@.str7 = private unnamed_addr constant [4 x i8] c"GCC\00", align 1
@.str8 = private unnamed_addr constant [14 x i8] c"system_header\00", align 1
@.str9 = private unnamed_addr constant [11 x i8] c"dependency\00", align 1
@.str10 = private unnamed_addr constant [45 x i8] c"_Pragma takes a parenthesized string literal\00", align 1
@.str11 = private unnamed_addr constant [17 x i8] c"unterminated #%s\00", align 1
@.str12 = private unnamed_addr constant [28 x i8] c"assertion without predicate\00", align 1
@.str13 = private unnamed_addr constant [32 x i8] c"predicate must be an identifier\00", align 1
@.str14 = private unnamed_addr constant [28 x i8] c"missing '(' after predicate\00", align 1
@.str15 = private unnamed_addr constant [31 x i8] c"missing ')' to complete answer\00", align 1
@.str16 = private unnamed_addr constant [28 x i8] c"predicate's answer is empty\00", align 1
@.str17 = private unnamed_addr constant [22 x i8] c"cannot find source %s\00", align 1
@.str18 = private unnamed_addr constant [30 x i8] c"current file is older than %s\00", align 1
@stderr = external constant %struct._IO_FILE*
@.str19 = private unnamed_addr constant [5 x i8] c"#%s \00", align 1
@.str20 = private unnamed_addr constant [18 x i8] c"pragma dependency\00", align 1
@.str21 = private unnamed_addr constant [37 x i8] c"#%s expects \22FILENAME\22 or <FILENAME>\00", align 1
@.str22 = private unnamed_addr constant [23 x i8] c"empty file name in #%s\00", align 1
@.str23 = private unnamed_addr constant [32 x i8] c"missing terminating > character\00", align 1
@.str24 = private unnamed_addr constant [51 x i8] c"#pragma system_header ignored outside include file\00", align 1
@.str25 = private unnamed_addr constant [37 x i8] c"extra tokens at end of #%s directive\00", align 1
@.str26 = private unnamed_addr constant [37 x i8] c"invalid #pragma GCC poison directive\00", align 1
@.str27 = private unnamed_addr constant [30 x i8] c"poisoning existing macro \22%s\22\00", align 1
@.str28 = private unnamed_addr constant [25 x i8] c"#pragma once is obsolete\00", align 1
@.str29 = private unnamed_addr constant [26 x i8] c"#pragma once in main file\00", align 1
@.str30 = private unnamed_addr constant [23 x i8] c"#%s is a GCC extension\00", align 1
@.str31 = private unnamed_addr constant [41 x i8] c"suggest not using #elif in traditional C\00", align 1
@.str32 = private unnamed_addr constant [46 x i8] c"traditional C ignores #%s with the # indented\00", align 1
@.str33 = private unnamed_addr constant [57 x i8] c"suggest hiding #%s from traditional C with an indented #\00", align 1
@.str34 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@linemarker_dir = internal constant { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_linemarker, i8* getelementptr inbounds ([2 x i8]* @.str34, i32 0, i32 0), i16 1, i8 0, i8 8, [4 x i8] undef }, align 8
@.str35 = private unnamed_addr constant [39 x i8] c"\22%s\22 after # is not a positive integer\00", align 1
@.str36 = private unnamed_addr constant [29 x i8] c"\22%s\22 is not a valid filename\00", align 1
@.str37 = private unnamed_addr constant [36 x i8] c"invalid flag \22%s\22 in line directive\00", align 1
@_sch_istable = external constant [256 x i16]
@.str38 = private unnamed_addr constant [7 x i8] c"define\00", align 1
@.str39 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str40 = private unnamed_addr constant [6 x i8] c"endif\00", align 1
@.str41 = private unnamed_addr constant [6 x i8] c"ifdef\00", align 1
@.str42 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str43 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str44 = private unnamed_addr constant [7 x i8] c"ifndef\00", align 1
@.str45 = private unnamed_addr constant [6 x i8] c"undef\00", align 1
@.str46 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str47 = private unnamed_addr constant [5 x i8] c"elif\00", align 1
@.str48 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str49 = private unnamed_addr constant [7 x i8] c"pragma\00", align 1
@.str50 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str51 = private unnamed_addr constant [13 x i8] c"include_next\00", align 1
@.str52 = private unnamed_addr constant [6 x i8] c"ident\00", align 1
@.str53 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@.str54 = private unnamed_addr constant [7 x i8] c"assert\00", align 1
@.str55 = private unnamed_addr constant [9 x i8] c"unassert\00", align 1
@.str56 = private unnamed_addr constant [5 x i8] c"sccs\00", align 1
@dtable = internal constant <{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }> <{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_define, i8* getelementptr inbounds ([7 x i8]* @.str38, i32 0, i32 0), i16 6, i8 0, i8 8, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_include, i8* getelementptr inbounds ([8 x i8]* @.str39, i32 0, i32 0), i16 7, i8 0, i8 4, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_endif, i8* getelementptr inbounds ([6 x i8]* @.str40, i32 0, i32 0), i16 5, i8 0, i8 1, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_ifdef, i8* getelementptr inbounds ([6 x i8]* @.str41, i32 0, i32 0), i16 5, i8 0, i8 3, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_if, i8* getelementptr inbounds ([3 x i8]* @.str42, i32 0, i32 0), i16 2, i8 0, i8 3, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_else, i8* getelementptr inbounds ([5 x i8]* @.str43, i32 0, i32 0), i16 4, i8 0, i8 1, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_ifndef, i8* getelementptr inbounds ([7 x i8]* @.str44, i32 0, i32 0), i16 6, i8 0, i8 3, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_undef, i8* getelementptr inbounds ([6 x i8]* @.str45, i32 0, i32 0), i16 5, i8 0, i8 8, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_line, i8* getelementptr inbounds ([5 x i8]* @.str46, i32 0, i32 0), i16 4, i8 0, i8 0, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_elif, i8* getelementptr inbounds ([5 x i8]* @.str47, i32 0, i32 0), i16 4, i8 1, i8 1, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_error, i8* getelementptr inbounds ([6 x i8]* @.str48, i32 0, i32 0), i16 5, i8 1, i8 0, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_pragma, i8* getelementptr inbounds ([7 x i8]* @.str49, i32 0, i32 0), i16 6, i8 1, i8 8, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_warning, i8* getelementptr inbounds ([8 x i8]* @.str50, i32 0, i32 0), i16 7, i8 2, i8 0, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_include_next, i8* getelementptr inbounds ([13 x i8]* @.str51, i32 0, i32 0), i16 12, i8 2, i8 4, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_ident, i8* getelementptr inbounds ([6 x i8]* @.str52, i32 0, i32 0), i16 5, i8 2, i8 8, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_import, i8* getelementptr inbounds ([7 x i8]* @.str53, i32 0, i32 0), i16 6, i8 2, i8 4, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_assert, i8* getelementptr inbounds ([7 x i8]* @.str54, i32 0, i32 0), i16 6, i8 2, i8 0, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_unassert, i8* getelementptr inbounds ([9 x i8]* @.str55, i32 0, i32 0), i16 8, i8 2, i8 0, [4 x i8] undef }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } { void (%struct.cpp_reader*)* @do_sccs, i8* getelementptr inbounds ([5 x i8]* @.str56, i32 0, i32 0), i16 4, i8 2, i8 0, [4 x i8] undef } }>, align 16
@.str57 = private unnamed_addr constant [17 x i8] c"\22%s\22 re-asserted\00", align 1
@.str58 = private unnamed_addr constant [37 x i8] c"#include_next in primary source file\00", align 1
@.str59 = private unnamed_addr constant [63 x i8] c"#import is obsolete, use an #ifndef wrapper in the header file\00", align 1
@.str60 = private unnamed_addr constant [27 x i8] c"#include nested too deeply\00", align 1
@.str61 = private unnamed_addr constant [25 x i8] c"invalid #ident directive\00", align 1
@.str62 = private unnamed_addr constant [18 x i8] c"#elif without #if\00", align 1
@.str63 = private unnamed_addr constant [18 x i8] c"#elif after #else\00", align 1
@.str64 = private unnamed_addr constant [27 x i8] c"the conditional began here\00", align 1
@.str65 = private unnamed_addr constant [43 x i8] c"\22%s\22 after #line is not a positive integer\00", align 1
@.str66 = private unnamed_addr constant [25 x i8] c"line number out of range\00", align 1
@.str67 = private unnamed_addr constant [16 x i8] c"undefining \22%s\22\00", align 1
@.str68 = private unnamed_addr constant [37 x i8] c"no macro name given in #%s directive\00", align 1
@.str69 = private unnamed_addr constant [64 x i8] c"\22%s\22 cannot be used as a macro name as it is an operator in C++\00", align 1
@.str70 = private unnamed_addr constant [32 x i8] c"macro names must be identifiers\00", align 1
@.str71 = private unnamed_addr constant [36 x i8] c"\22%s\22 cannot be used as a macro name\00", align 1
@.str72 = private unnamed_addr constant [18 x i8] c"#else without #if\00", align 1
@.str73 = private unnamed_addr constant [18 x i8] c"#else after #else\00", align 1
@.str74 = private unnamed_addr constant [19 x i8] c"#endif without #if\00", align 1

; Function Attrs: nounwind uwtable
define i32 @_cpp_handle_directive(%struct.cpp_reader* %pfile, i32 %indented) #0 {
entry:
  %in_directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 0
  store i8 1, i8* %in_directive.i, align 1, !tbaa !1
  %save_comments.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 3
  store i8 0, i8* %save_comments.i, align 1, !tbaa !19
  %line.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 4
  %0 = load i32* %line.i, align 4, !tbaa !20
  %directive_line.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 5
  store i32 %0, i32* %directive_line.i, align 4, !tbaa !21
  %call = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  switch i8 %bf.load, label %if.else72 [
    i8 56, label %if.then
    i8 57, label %land.lhs.true
    i8 67, label %if.then.i
  ]

if.then:                                          ; preds = %entry
  %val = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4
  %node = bitcast %union.anon.0* %val to %struct.cpp_hashnode**
  %1 = load %struct.cpp_hashnode** %node, align 8, !tbaa !22
  %directive_index = getelementptr inbounds %struct.cpp_hashnode* %1, i64 0, i32 2
  %2 = load i8* %directive_index, align 1, !tbaa !23
  %tobool = icmp eq i8 %2, 0
  br i1 %tobool, label %if.else72, label %if.end24

land.lhs.true:                                    ; preds = %entry
  %lang = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  %3 = load i32* %lang, align 4, !tbaa !26
  %cmp10 = icmp eq i32 %3, 9
  br i1 %cmp10, label %if.else72, label %if.then12

if.then12:                                        ; preds = %land.lhs.true
  %pedantic = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 42
  %4 = load i8* %pedantic, align 1, !tbaa !27
  %tobool15 = icmp eq i8 %4, 0
  br i1 %tobool15, label %if.then26, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %if.then12
  %preprocessed = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 43
  %5 = load i8* %preprocessed, align 1, !tbaa !28
  %tobool18 = icmp eq i8 %5, 0
  br i1 %tobool18, label %land.lhs.true19, label %if.then26

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  %6 = load i8* %skipping, align 1, !tbaa !29
  %tobool20 = icmp eq i8 %6, 0
  br i1 %tobool20, label %if.then21, label %if.then26

if.then21:                                        ; preds = %land.lhs.true19
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([43 x i8]* @.str, i64 0, i64 0)) #4
  br label %if.then26

if.end24:                                         ; preds = %if.then
  %conv = zext i8 %2 to i64
  %sub = add i64 %conv, -1
  %arrayidx = getelementptr inbounds [19 x %struct.directive]* bitcast (<{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }>* @dtable to [19 x %struct.directive]*), i64 0, i64 %sub
  %tobool25 = icmp eq %struct.directive* %arrayidx, null
  br i1 %tobool25, label %if.else72, label %if.then26

if.then26:                                        ; preds = %if.then12, %if.then21, %land.lhs.true19, %land.lhs.true16, %if.end24
  %dir.0138 = phi %struct.directive* [ %arrayidx, %if.end24 ], [ bitcast ({ void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }* @linemarker_dir to %struct.directive*), %land.lhs.true16 ], [ bitcast ({ void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }* @linemarker_dir to %struct.directive*), %land.lhs.true19 ], [ bitcast ({ void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }* @linemarker_dir to %struct.directive*), %if.then21 ], [ bitcast ({ void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }* @linemarker_dir to %struct.directive*), %if.then12 ]
  %flags = getelementptr inbounds %struct.directive* %dir.0138, i64 0, i32 4
  %7 = load i8* %flags, align 1, !tbaa !30
  %and = and i8 %7, 2
  %tobool28 = icmp eq i8 %and, 0
  br i1 %tobool28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.then26
  %mi_valid = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 14
  store i8 0, i8* %mi_valid, align 1, !tbaa !32
  br label %if.end30

if.end30:                                         ; preds = %if.then26, %if.then29
  %preprocessed32 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 43
  %8 = load i8* %preprocessed32, align 1, !tbaa !28
  %tobool34 = icmp eq i8 %8, 0
  br i1 %tobool34, label %if.else42.thread, label %land.lhs.true35

if.else42.thread:                                 ; preds = %if.end30
  %and45156 = and i8 %7, 4
  %angled_headers157 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 2
  store i8 %and45156, i8* %angled_headers157, align 1, !tbaa !33
  br label %if.then51

land.lhs.true35:                                  ; preds = %if.end30
  %tobool36 = icmp ne i32 %indented, 0
  %and39 = and i8 %7, 8
  %tobool40 = icmp eq i8 %and39, 0
  %or.cond = or i1 %tobool36, %tobool40
  br i1 %or.cond, label %if.end96, label %if.else42

if.else42:                                        ; preds = %land.lhs.true35
  %and45 = and i8 %7, 4
  %angled_headers = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 2
  store i8 %and45, i8* %angled_headers, align 1, !tbaa !33
  br i1 %tobool34, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.else42.thread, %if.else42
  %pedantic.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 42
  %9 = load i8* %pedantic.i, align 1, !tbaa !27
  %tobool.i134 = icmp eq i8 %9, 0
  br i1 %tobool.i134, label %if.end.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then51
  %skipping.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  %10 = load i8* %skipping.i, align 1, !tbaa !29
  %tobool1.i135 = icmp eq i8 %10, 0
  br i1 %tobool1.i135, label %land.lhs.true2.i, label %if.end.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %origin.i = getelementptr inbounds %struct.directive* %dir.0138, i64 0, i32 3
  %11 = load i8* %origin.i, align 1, !tbaa !34
  %cmp.i = icmp eq i8 %11, 2
  br i1 %cmp.i, label %if.then.i136, label %if.end.i

if.then.i136:                                     ; preds = %land.lhs.true2.i
  %name.i = getelementptr inbounds %struct.directive* %dir.0138, i64 0, i32 1
  %12 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([23 x i8]* @.str30, i64 0, i64 0), i8* %12) #4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i136, %land.lhs.true2.i, %land.lhs.true.i, %if.then51
  %warn_traditional.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 33
  %13 = load i8* %warn_traditional.i, align 1, !tbaa !36
  %tobool6.i = icmp eq i8 %13, 0
  br i1 %tobool6.i, label %if.end52, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i
  %cmp8.i = icmp eq %struct.directive* %dir.0138, bitcast (void (%struct.cpp_reader*)** getelementptr inbounds (<{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }>* @dtable, i64 0, i32 9, i32 0) to %struct.directive*)
  br i1 %cmp8.i, label %if.then10.i, label %if.else.i

if.then10.i:                                      ; preds = %if.then7.i
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([41 x i8]* @.str31, i64 0, i64 0)) #4
  br label %if.end52

if.else.i:                                        ; preds = %if.then7.i
  %tobool11.i = icmp eq i32 %indented, 0
  %origin13.i = getelementptr inbounds %struct.directive* %dir.0138, i64 0, i32 3
  %14 = load i8* %origin13.i, align 1, !tbaa !34
  %cmp15.i = icmp eq i8 %14, 0
  br i1 %tobool11.i, label %land.lhs.true21.i, label %land.lhs.true12.i

land.lhs.true12.i:                                ; preds = %if.else.i
  br i1 %cmp15.i, label %if.then17.i, label %if.end52

if.then17.i:                                      ; preds = %land.lhs.true12.i
  %name18.i = getelementptr inbounds %struct.directive* %dir.0138, i64 0, i32 1
  %15 = load i8** %name18.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([46 x i8]* @.str32, i64 0, i64 0), i8* %15) #4
  br label %if.end52

land.lhs.true21.i:                                ; preds = %if.else.i
  br i1 %cmp15.i, label %if.end52, label %if.then26.i

if.then26.i:                                      ; preds = %land.lhs.true21.i
  %name27.i = getelementptr inbounds %struct.directive* %dir.0138, i64 0, i32 1
  %16 = load i8** %name27.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([57 x i8]* @.str33, i64 0, i64 0), i8* %16) #4
  br label %if.end52

if.end52:                                         ; preds = %if.then26.i, %land.lhs.true21.i, %if.then17.i, %land.lhs.true12.i, %if.then10.i, %if.end.i, %if.else42
  %skipping54 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  %17 = load i8* %skipping54, align 1, !tbaa !29
  %tobool56 = icmp eq i8 %17, 0
  br i1 %tobool56, label %if.end87, label %land.lhs.true57

land.lhs.true57:                                  ; preds = %if.end52
  %18 = load i8* %flags, align 1, !tbaa !30
  %and60 = and i8 %18, 1
  %tobool61 = icmp eq i8 %and60, 0
  br i1 %tobool61, label %if.then.i, label %if.then89

if.else72:                                        ; preds = %entry, %if.end24, %if.then, %land.lhs.true
  %lang74 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 11
  %19 = load i32* %lang74, align 4, !tbaa !26
  %cmp75 = icmp eq i32 %19, 9
  br i1 %cmp75, label %if.end96, label %if.else78

if.else78:                                        ; preds = %if.else72
  %skipping80 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  %20 = load i8* %skipping80, align 1, !tbaa !29
  %tobool81 = icmp eq i8 %20, 0
  br i1 %tobool81, label %if.then82, label %if.then.i

if.then82:                                        ; preds = %if.else78
  %call83 = tail call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call) #4
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([36 x i8]* @.str1, i64 0, i64 0), i8* %call83) #4
  br label %if.then.i

if.end87:                                         ; preds = %if.end52
  %tobool88 = icmp eq %struct.directive* %dir.0138, null
  br i1 %tobool88, label %if.then.i, label %if.then89

if.then89:                                        ; preds = %land.lhs.true57, %if.end87
  %directive = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  store %struct.directive* %dir.0138, %struct.directive** %directive, align 8, !tbaa !37
  %handler = getelementptr inbounds %struct.directive* %dir.0138, i64 0, i32 0
  %21 = load void (%struct.cpp_reader*)** %handler, align 8, !tbaa !38
  tail call void %21(%struct.cpp_reader* %pfile) #4
  br label %if.then.i

if.end96:                                         ; preds = %land.lhs.true35, %if.else72
  tail call void @_cpp_backup_tokens(%struct.cpp_reader* %pfile, i32 1) #4
  br label %end_directive.exit

if.then.i:                                        ; preds = %entry, %if.then82, %if.else78, %land.lhs.true57, %if.end87, %if.then89
  %context.i.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 10
  %22 = load %struct.cpp_context** %context.i.i, align 8, !tbaa !39
  %base_context.i.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 9
  %cmp12.i.i = icmp eq %struct.cpp_context* %22, %base_context.i.i
  br i1 %cmp12.i.i, label %while.end.i.i, label %while.body.i.i

while.body.i.i:                                   ; preds = %if.then.i, %while.body.i.i
  tail call void @_cpp_pop_context(%struct.cpp_reader* %pfile) #4
  %23 = load %struct.cpp_context** %context.i.i, align 8, !tbaa !39
  %cmp.i.i = icmp eq %struct.cpp_context* %23, %base_context.i.i
  br i1 %cmp.i.i, label %while.end.i.i, label %while.body.i.i

while.end.i.i:                                    ; preds = %while.body.i.i, %if.then.i
  %cur_token.i.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %24 = load %struct.cpp_token** %cur_token.i.i, align 8, !tbaa !40
  %type.i.i = getelementptr inbounds %struct.cpp_token* %24, i64 -1, i32 2
  %bf.load.i.i = load i8* %type.i.i, align 2
  %cmp1.i.i = icmp eq i8 %bf.load.i.i, 67
  br i1 %cmp1.i.i, label %skip_rest_of_line.exit.i, label %while.cond2.i.i

while.cond2.i.i:                                  ; preds = %while.end.i.i, %while.cond2.i.i
  %call.i.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type3.i.i = getelementptr inbounds %struct.cpp_token* %call.i.i, i64 0, i32 2
  %bf.load4.i.i = load i8* %type3.i.i, align 2
  %cmp6.i.i = icmp eq i8 %bf.load4.i.i, 67
  br i1 %cmp6.i.i, label %skip_rest_of_line.exit.i, label %while.cond2.i.i

skip_rest_of_line.exit.i:                         ; preds = %while.cond2.i.i, %while.end.i.i
  %keep_tokens.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 19
  %25 = load i32* %keep_tokens.i, align 4, !tbaa !41
  %tobool1.i = icmp eq i32 %25, 0
  br i1 %tobool1.i, label %if.then2.i, label %end_directive.exit

if.then2.i:                                       ; preds = %skip_rest_of_line.exit.i
  %base_run.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 16
  %cur_run.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 17
  store %struct.tokenrun* %base_run.i, %struct.tokenrun** %cur_run.i, align 8, !tbaa !42
  %base.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 16, i32 2
  %26 = load %struct.cpp_token** %base.i, align 8, !tbaa !43
  store %struct.cpp_token* %26, %struct.cpp_token** %cur_token.i.i, align 8, !tbaa !40
  br label %end_directive.exit

end_directive.exit:                               ; preds = %if.end96, %skip_rest_of_line.exit.i, %if.then2.i
  %skip.0144155 = phi i32 [ 0, %if.end96 ], [ 1, %skip_rest_of_line.exit.i ], [ 1, %if.then2.i ]
  %discard_comments.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 17
  %27 = load i8* %discard_comments.i, align 1, !tbaa !44
  %lnot.i = icmp eq i8 %27, 0
  %conv.i = zext i1 %lnot.i to i8
  store i8 %conv.i, i8* %save_comments.i, align 1, !tbaa !19
  store i8 0, i8* %in_directive.i, align 1, !tbaa !1
  %angled_headers.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 2
  store i8 0, i8* %angled_headers.i, align 1, !tbaa !33
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  store %struct.directive* null, %struct.directive** %directive.i, align 8, !tbaa !37
  ret i32 %skip.0144155
}

declare %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader*) #1

declare void @cpp_pedwarn(%struct.cpp_reader*, i8*, ...) #1

declare void @cpp_error(%struct.cpp_reader*, i8*, ...) #1

declare i8* @cpp_token_as_text(%struct.cpp_reader*, %struct.cpp_token*) #1

declare void @_cpp_backup_tokens(%struct.cpp_reader*, i32) #1

; Function Attrs: nounwind uwtable
define void @_cpp_do_file_change(%struct.cpp_reader* %pfile, i32 %reason, i8* %to_file, i32 %file_line, i32 %sysp) #0 {
entry:
  %line_maps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 2
  %line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 4
  %0 = load i32* %line, align 4, !tbaa !20
  %call = tail call %struct.line_map* @add_line_map(%struct.line_maps* %line_maps, i32 %reason, i32 %sysp, i32 %0, i8* %to_file, i32 %file_line) #4
  %map = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 3
  store %struct.line_map* %call, %struct.line_map** %map, align 8, !tbaa !45
  %file_change = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 1
  %1 = load void (%struct.cpp_reader*, %struct.line_map*)** %file_change, align 8, !tbaa !46
  %tobool = icmp eq void (%struct.cpp_reader*, %struct.line_map*)* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void %1(%struct.cpp_reader* %pfile, %struct.line_map* %call) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare %struct.line_map* @add_line_map(%struct.line_maps*, i32, i32, i32, i8*, i32) #1

; Function Attrs: nounwind uwtable
define void @cpp_register_pragma(%struct.cpp_reader* %pfile, i8* %space, i8* %name, void (%struct.cpp_reader*)* %handler) #0 {
entry:
  %pragmas = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 34
  %tobool = icmp eq void (%struct.cpp_reader*)* %handler, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @abort() #8
  unreachable

if.end:                                           ; preds = %entry
  %tobool2 = icmp ne i8* %space, null
  br i1 %tobool2, label %if.then3, label %if.end14

if.then3:                                         ; preds = %if.end
  %call = tail call i64 @strlen(i8* %space) #4
  %conv = trunc i64 %call to i32
  %call4 = tail call %struct.cpp_hashnode* @cpp_lookup(%struct.cpp_reader* %pfile, i8* %space, i32 %conv) #4
  %0 = load %struct.pragma_entry** %pragmas, align 8, !tbaa !22
  %tobool4.i = icmp eq %struct.pragma_entry* %0, null
  br i1 %tobool4.i, label %if.then7, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then3, %while.body.i
  %chain.addr.05.i = phi %struct.pragma_entry* [ %2, %while.body.i ], [ %0, %if.then3 ]
  %pragma1.i = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i, i64 0, i32 1
  %1 = load %struct.cpp_hashnode** %pragma1.i, align 8, !tbaa !47
  %cmp.i = icmp eq %struct.cpp_hashnode* %1, %call4
  br i1 %cmp.i, label %if.else, label %while.body.i

while.body.i:                                     ; preds = %land.rhs.i
  %next.i = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i, i64 0, i32 0
  %2 = load %struct.pragma_entry** %next.i, align 8, !tbaa !49
  %tobool.i = icmp eq %struct.pragma_entry* %2, null
  br i1 %tobool.i, label %if.then7, label %land.rhs.i

if.then7:                                         ; preds = %while.body.i, %if.then3
  %call.i61 = tail call i8* @_cpp_aligned_alloc(%struct.cpp_reader* %pfile, i64 32) #4
  %3 = bitcast i8* %call.i61 to %struct.pragma_entry*
  %pragma1.i62 = getelementptr inbounds i8* %call.i61, i64 8
  %4 = bitcast i8* %pragma1.i62 to %struct.cpp_hashnode**
  store %struct.cpp_hashnode* %call4, %struct.cpp_hashnode** %4, align 8, !tbaa !47
  %is_nspace.i63 = getelementptr inbounds i8* %call.i61, i64 16
  %5 = bitcast i8* %is_nspace.i63 to i32*
  store i32 1, i32* %5, align 4, !tbaa !50
  %u4.i64 = getelementptr inbounds i8* %call.i61, i64 24
  %space.i65 = bitcast i8* %u4.i64 to %struct.pragma_entry**
  store %struct.pragma_entry* null, %struct.pragma_entry** %space.i65, align 8, !tbaa !22
  %6 = load %struct.pragma_entry** %pragmas, align 8, !tbaa !22
  %next.i67 = bitcast i8* %call.i61 to %struct.pragma_entry**
  store %struct.pragma_entry* %6, %struct.pragma_entry** %next.i67, align 8, !tbaa !49
  store %struct.pragma_entry* %3, %struct.pragma_entry** %pragmas, align 8, !tbaa !22
  br label %if.end12

if.else:                                          ; preds = %land.rhs.i
  %is_nspace = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i, i64 0, i32 2
  %7 = load i32* %is_nspace, align 4, !tbaa !50
  %tobool9 = icmp eq i32 %7, 0
  br i1 %tobool9, label %clash, label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %entry1.0 = phi %struct.pragma_entry* [ %chain.addr.05.i, %if.else ], [ %3, %if.then7 ]
  %u = getelementptr inbounds %struct.pragma_entry* %entry1.0, i64 0, i32 3
  %space13 = bitcast %union.anon.1* %u to %struct.pragma_entry**
  br label %if.end14

if.end14:                                         ; preds = %if.end12, %if.end
  %chain.0 = phi %struct.pragma_entry** [ %space13, %if.end12 ], [ %pragmas, %if.end ]
  %call15 = tail call i64 @strlen(i8* %name) #4
  %conv16 = trunc i64 %call15 to i32
  %call17 = tail call %struct.cpp_hashnode* @cpp_lookup(%struct.cpp_reader* %pfile, i8* %name, i32 %conv16) #4
  %8 = load %struct.pragma_entry** %chain.0, align 8, !tbaa !22
  %tobool4.i68 = icmp eq %struct.pragma_entry* %8, null
  br i1 %tobool4.i68, label %insert_pragma_entry.exit, label %land.rhs.i72

land.rhs.i72:                                     ; preds = %if.end14, %while.body.i75
  %chain.addr.05.i69 = phi %struct.pragma_entry* [ %10, %while.body.i75 ], [ %8, %if.end14 ]
  %pragma1.i70 = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i69, i64 0, i32 1
  %9 = load %struct.cpp_hashnode** %pragma1.i70, align 8, !tbaa !47
  %cmp.i71 = icmp eq %struct.cpp_hashnode* %9, %call17
  br i1 %cmp.i71, label %if.then20, label %while.body.i75

while.body.i75:                                   ; preds = %land.rhs.i72
  %next.i73 = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i69, i64 0, i32 0
  %10 = load %struct.pragma_entry** %next.i73, align 8, !tbaa !49
  %tobool.i74 = icmp eq %struct.pragma_entry* %10, null
  br i1 %tobool.i74, label %insert_pragma_entry.exit, label %land.rhs.i72

if.then20:                                        ; preds = %land.rhs.i72
  %is_nspace21 = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i69, i64 0, i32 2
  %11 = load i32* %is_nspace21, align 4, !tbaa !50
  %tobool22 = icmp eq i32 %11, 0
  br i1 %tobool22, label %if.else24, label %clash

clash:                                            ; preds = %if.else, %if.then20
  %node.0 = phi %struct.cpp_hashnode* [ %call17, %if.then20 ], [ %call4, %if.else ]
  %str = getelementptr inbounds %struct.cpp_hashnode* %node.0, i64 0, i32 0, i32 1
  %12 = load i8** %str, align 8, !tbaa !51
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_ice(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([57 x i8]* @.str2, i64 0, i64 0), i8* %12) #4
  br label %if.end32

if.else24:                                        ; preds = %if.then20
  br i1 %tobool2, label %if.then26, label %if.else27

if.then26:                                        ; preds = %if.else24
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_ice(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([36 x i8]* @.str3, i64 0, i64 0), i8* %space, i8* %name) #4
  br label %if.end32

if.else27:                                        ; preds = %if.else24
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_ice(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([33 x i8]* @.str4, i64 0, i64 0), i8* %name) #4
  br label %if.end32

insert_pragma_entry.exit:                         ; preds = %while.body.i75, %if.end14
  %call.i = tail call i8* @_cpp_aligned_alloc(%struct.cpp_reader* %pfile, i64 32) #4
  %13 = bitcast i8* %call.i to %struct.pragma_entry*
  %pragma1.i58 = getelementptr inbounds i8* %call.i, i64 8
  %14 = bitcast i8* %pragma1.i58 to %struct.cpp_hashnode**
  store %struct.cpp_hashnode* %call17, %struct.cpp_hashnode** %14, align 8, !tbaa !47
  %is_nspace.i = getelementptr inbounds i8* %call.i, i64 16
  %15 = bitcast i8* %is_nspace.i to i32*
  store i32 0, i32* %15, align 4, !tbaa !50
  %u.i = getelementptr inbounds i8* %call.i, i64 24
  %handler2.i = bitcast i8* %u.i to void (%struct.cpp_reader*)**
  store void (%struct.cpp_reader*)* %handler, void (%struct.cpp_reader*)** %handler2.i, align 8, !tbaa !22
  %.pre = load %struct.pragma_entry** %chain.0, align 8, !tbaa !22
  %next.i60 = bitcast i8* %call.i to %struct.pragma_entry**
  store %struct.pragma_entry* %.pre, %struct.pragma_entry** %next.i60, align 8, !tbaa !49
  store %struct.pragma_entry* %13, %struct.pragma_entry** %chain.0, align 8, !tbaa !22
  br label %if.end32

if.end32:                                         ; preds = %clash, %if.else27, %if.then26, %insert_pragma_entry.exit
  ret void
}

; Function Attrs: noreturn
declare void @abort() #2

declare %struct.cpp_hashnode* @cpp_lookup(%struct.cpp_reader*, i8*, i32) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #3

declare void @cpp_ice(%struct.cpp_reader*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @_cpp_init_internal_pragmas(%struct.cpp_reader* %pfile) #0 {
entry:
  tail call void @cpp_register_pragma(%struct.cpp_reader* %pfile, i8* null, i8* getelementptr inbounds ([7 x i8]* @.str5, i64 0, i64 0), void (%struct.cpp_reader*)* @do_pragma_poison)
  tail call void @cpp_register_pragma(%struct.cpp_reader* %pfile, i8* null, i8* getelementptr inbounds ([5 x i8]* @.str6, i64 0, i64 0), void (%struct.cpp_reader*)* @do_pragma_once)
  tail call void @cpp_register_pragma(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str5, i64 0, i64 0), void (%struct.cpp_reader*)* @do_pragma_poison)
  tail call void @cpp_register_pragma(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str8, i64 0, i64 0), void (%struct.cpp_reader*)* @do_pragma_system_header)
  tail call void @cpp_register_pragma(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([4 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str9, i64 0, i64 0), void (%struct.cpp_reader*)* @do_pragma_dependency)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_pragma_poison(%struct.cpp_reader* %pfile) #0 {
entry:
  %poisoned_ok = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 6
  store i8 1, i8* %poisoned_ok, align 1, !tbaa !52
  br label %for.cond

for.cond:                                         ; preds = %if.end6, %if.end15, %entry
  %call = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  switch i8 %bf.load, label %if.then5 [
    i8 67, label %for.end
    i8 56, label %if.end6
  ]

if.then5:                                         ; preds = %for.cond
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str26, i64 0, i64 0)) #4
  br label %for.end

if.end6:                                          ; preds = %for.cond
  %val = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4
  %node = bitcast %union.anon.0* %val to %struct.cpp_hashnode**
  %0 = load %struct.cpp_hashnode** %node, align 8, !tbaa !22
  %flags = getelementptr inbounds %struct.cpp_hashnode* %0, i64 0, i32 5
  %1 = load i8* %flags, align 1, !tbaa !53
  %and = and i8 %1, 2
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.end8, label %for.cond

if.end8:                                          ; preds = %if.end6
  %type9 = getelementptr inbounds %struct.cpp_hashnode* %0, i64 0, i32 4
  %bf.load10 = load i8* %type9, align 4
  %cmp12 = icmp eq i8 %bf.load10, 1
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end8
  %str = getelementptr inbounds %struct.cpp_hashnode* %0, i64 0, i32 0, i32 1
  %2 = load i8** %str, align 8, !tbaa !51
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([30 x i8]* @.str27, i64 0, i64 0), i8* %2) #4
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end8
  tail call void @_cpp_free_definition(%struct.cpp_hashnode* %0) #4
  %3 = load i8* %flags, align 1, !tbaa !53
  %or = or i8 %3, 10
  store i8 %or, i8* %flags, align 1, !tbaa !53
  br label %for.cond

for.end:                                          ; preds = %for.cond, %if.then5
  store i8 0, i8* %poisoned_ok, align 1, !tbaa !52
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_pragma_once(%struct.cpp_reader* %pfile) #0 {
entry:
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([25 x i8]* @.str28, i64 0, i64 0)) #4
  %buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !54
  %prev = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 4
  %1 = load %struct.cpp_buffer** %prev, align 8, !tbaa !55
  %cmp = icmp eq %struct.cpp_buffer* %1, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([26 x i8]* @.str29, i64 0, i64 0)) #4
  br label %if.end

if.else:                                          ; preds = %entry
  %inc = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 6
  %2 = load %struct.include_file** %inc, align 8, !tbaa !58
  tail call void @_cpp_never_reread(%struct.include_file* %2) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %3 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %3, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i, label %check_eol.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end
  %call.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %check_eol.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %4 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %4, i64 0, i32 1
  %5 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %5) #4
  br label %check_eol.exit

check_eol.exit:                                   ; preds = %if.end, %land.lhs.true.i, %if.then.i
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_pragma_system_header(%struct.cpp_reader* %pfile) #0 {
entry:
  %buffer1 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer1, align 8, !tbaa !54
  %prev = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 4
  %1 = load %struct.cpp_buffer** %prev, align 8, !tbaa !55
  %cmp = icmp eq %struct.cpp_buffer* %1, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([51 x i8]* @.str24, i64 0, i64 0)) #4
  br label %if.end

if.else:                                          ; preds = %entry
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %2 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %2, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i, label %check_eol.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else
  %call.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %check_eol.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %3 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %3, i64 0, i32 1
  %4 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %4) #4
  br label %check_eol.exit

check_eol.exit:                                   ; preds = %if.else, %land.lhs.true.i, %if.then.i
  %context.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 10
  %5 = load %struct.cpp_context** %context.i, align 8, !tbaa !39
  %base_context.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 9
  %cmp12.i = icmp eq %struct.cpp_context* %5, %base_context.i
  br i1 %cmp12.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %check_eol.exit, %while.body.i
  tail call void @_cpp_pop_context(%struct.cpp_reader* %pfile) #4
  %6 = load %struct.cpp_context** %context.i, align 8, !tbaa !39
  %cmp.i5 = icmp eq %struct.cpp_context* %6, %base_context.i
  br i1 %cmp.i5, label %while.end.i, label %while.body.i

while.end.i:                                      ; preds = %while.body.i, %check_eol.exit
  %7 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i7 = getelementptr inbounds %struct.cpp_token* %7, i64 -1, i32 2
  %bf.load.i8 = load i8* %type.i7, align 2
  %cmp1.i = icmp eq i8 %bf.load.i8, 67
  br i1 %cmp1.i, label %skip_rest_of_line.exit, label %while.cond2.i

while.cond2.i:                                    ; preds = %while.end.i, %while.cond2.i
  %call.i9 = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type3.i = getelementptr inbounds %struct.cpp_token* %call.i9, i64 0, i32 2
  %bf.load4.i = load i8* %type3.i, align 2
  %cmp6.i = icmp eq i8 %bf.load4.i, 67
  br i1 %cmp6.i, label %skip_rest_of_line.exit, label %while.cond2.i

skip_rest_of_line.exit:                           ; preds = %while.cond2.i, %while.end.i
  tail call void @cpp_make_system_header(%struct.cpp_reader* %pfile, i32 1, i32 0) #4
  br label %if.end

if.end:                                           ; preds = %skip_rest_of_line.exit, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_pragma_dependency(%struct.cpp_reader* %pfile) #0 {
entry:
  %call = tail call fastcc %struct.cpp_token* @parse_include(%struct.cpp_reader* %pfile)
  %tobool = icmp eq %struct.cpp_token* %call, null
  br i1 %tobool, label %if.end12, label %if.end

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @_cpp_compare_file_date(%struct.cpp_reader* %pfile, %struct.cpp_token* %call) #4
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %call3 = tail call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call) #4
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([22 x i8]* @.str17, i64 0, i64 0), i8* %call3) #4
  br label %if.end12

if.else:                                          ; preds = %if.end
  %cmp4 = icmp sgt i32 %call1, 0
  br i1 %cmp4, label %if.then5, label %if.end12

if.then5:                                         ; preds = %if.else
  %call6 = tail call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call) #4
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([30 x i8]* @.str18, i64 0, i64 0), i8* %call6) #4
  %call7 = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type = getelementptr inbounds %struct.cpp_token* %call7, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  %cmp8 = icmp eq i8 %bf.load, 67
  br i1 %cmp8, label %if.end12, label %if.then9

if.then9:                                         ; preds = %if.then5
  tail call void @_cpp_backup_tokens(%struct.cpp_reader* %pfile, i32 1) #4
  %call.i = tail call i32 @_cpp_begin_message(%struct.cpp_reader* %pfile, i32 0, i32 0, i32 0) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %if.end12, label %if.then.i

if.then.i:                                        ; preds = %if.then9
  %.pre.i = load %struct._IO_FILE** @stderr, align 8, !tbaa !22
  %prevent_expansion.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 7
  %0 = load i8* %prevent_expansion.i, align 1, !tbaa !59
  %inc.i = add i8 %0, 1
  store i8 %inc.i, i8* %prevent_expansion.i, align 1, !tbaa !59
  tail call void @cpp_output_line(%struct.cpp_reader* %pfile, %struct._IO_FILE* %.pre.i) #4
  %1 = load i8* %prevent_expansion.i, align 1, !tbaa !59
  %dec.i = add i8 %1, -1
  store i8 %dec.i, i8* %prevent_expansion.i, align 1, !tbaa !59
  br label %if.end12

if.end12:                                         ; preds = %if.then.i, %if.then9, %if.then5, %entry, %if.else, %if.then2
  ret void
}

; Function Attrs: nounwind uwtable
define void @_cpp_do__Pragma(%struct.cpp_reader* %pfile) #0 {
entry:
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.cond.i.i, %entry
  %call.i.i = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type.i.i = getelementptr inbounds %struct.cpp_token* %call.i.i, i64 0, i32 2
  %bf.load.i.i = load i8* %type.i.i, align 2
  switch i8 %bf.load.i.i, label %if.then [
    i8 66, label %for.cond.i.i
    i8 22, label %for.cond.i27.i
  ]

for.cond.i27.i:                                   ; preds = %for.cond.i.i, %for.cond.i27.i
  %call.i23.i = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type.i24.i = getelementptr inbounds %struct.cpp_token* %call.i23.i, i64 0, i32 2
  %bf.load.i25.i = load i8* %type.i24.i, align 2
  %cmp.i26.i = icmp eq i8 %bf.load.i25.i, 66
  br i1 %cmp.i26.i, label %for.cond.i27.i, label %get_token_no_padding.exit28.i

get_token_no_padding.exit28.i:                    ; preds = %for.cond.i27.i
  %bf.load3.off.i = add i8 %bf.load.i25.i, -61
  %switch.i = icmp ult i8 %bf.load3.off.i, 2
  br i1 %switch.i, label %for.cond.i33.i, label %if.then

for.cond.i33.i:                                   ; preds = %get_token_no_padding.exit28.i, %for.cond.i33.i
  %call.i29.i = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type.i30.i = getelementptr inbounds %struct.cpp_token* %call.i29.i, i64 0, i32 2
  %bf.load.i31.i = load i8* %type.i30.i, align 2
  switch i8 %bf.load.i31.i, label %if.then [
    i8 66, label %for.cond.i33.i
    i8 23, label %get__Pragma_string.exit
  ]

get__Pragma_string.exit:                          ; preds = %for.cond.i33.i
  %tobool = icmp eq %struct.cpp_token* %call.i23.i, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.cond.i.i, %for.cond.i33.i, %get_token_no_padding.exit28.i, %get__Pragma_string.exit
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([45 x i8]* @.str10, i64 0, i64 0)) #4
  br label %if.end

if.else:                                          ; preds = %get__Pragma_string.exit
  %line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 4
  %0 = load i32* %line, align 4, !tbaa !20
  %str.idx = getelementptr %struct.cpp_token* %call.i23.i, i64 0, i32 4, i32 0, i32 0
  %str.idx.val = load i32* %str.idx, align 4, !tbaa !60
  %str.idx7 = getelementptr %struct.cpp_token* %call.i23.i, i64 0, i32 4, i32 0, i32 1
  %str.idx7.val = load i8** %str.idx7, align 8, !tbaa !62
  tail call fastcc void @destringize_and_run(%struct.cpp_reader* %pfile, i32 %str.idx.val, i8* %str.idx7.val)
  store i32 %0, i32* %line, align 4, !tbaa !20
  %buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %1 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !54
  %saved_flags = getelementptr inbounds %struct.cpp_buffer* %1, i64 0, i32 9
  store i8 64, i8* %saved_flags, align 1, !tbaa !63
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @destringize_and_run(%struct.cpp_reader* %pfile, i32 %in.0.0.val, i8* %in.0.1.val) #0 {
entry:
  %add = add i32 %in.0.0.val, 1
  %conv = zext i32 %add to i64
  %0 = alloca i8, i64 %conv, align 1
  %idx.ext = zext i32 %in.0.0.val to i64
  %add.ptr = getelementptr inbounds i8* %in.0.1.val, i64 %idx.ext
  %cmp1 = icmp eq i32 %in.0.0.val, 0
  br i1 %cmp1, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %if.end
  %src.03 = phi i8* [ %incdec.ptr13, %if.end ], [ %in.0.1.val, %entry ]
  %dest.02 = phi i8* [ %incdec.ptr14, %if.end ], [ %0, %entry ]
  %1 = load i8* %src.03, align 1, !tbaa !64
  %cmp4 = icmp eq i8 %1, 92
  br i1 %cmp4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %arrayidx = getelementptr inbounds i8* %src.03, i64 1
  %2 = load i8* %arrayidx, align 1, !tbaa !64
  switch i8 %2, label %if.end [
    i8 92, label %if.then
    i8 34, label %if.then
  ]

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.then, %for.body
  %3 = phi i8 [ %2, %if.then ], [ %1, %for.body ], [ 92, %land.lhs.true ]
  %src.1 = phi i8* [ %arrayidx, %if.then ], [ %src.03, %for.body ], [ %src.03, %land.lhs.true ]
  %incdec.ptr13 = getelementptr inbounds i8* %src.1, i64 1
  %incdec.ptr14 = getelementptr inbounds i8* %dest.02, i64 1
  store i8 %3, i8* %dest.02, align 1, !tbaa !64
  %cmp = icmp ult i8* %incdec.ptr13, %add.ptr
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %if.end, %entry
  %dest.0.lcssa = phi i8* [ %0, %entry ], [ %incdec.ptr14, %if.end ]
  store i8 0, i8* %dest.0.lcssa, align 1, !tbaa !64
  %sub.ptr.lhs.cast = ptrtoint i8* %dest.0.lcssa to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  call fastcc void @run_directive(%struct.cpp_reader* %pfile, i32 11, i8* %0, i64 %sub.ptr.sub)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @_cpp_test_assertion(%struct.cpp_reader* %pfile, i32* nocapture %value) #0 {
entry:
  %answer = alloca %struct.answer*, align 8
  %call = call fastcc %struct.cpp_hashnode* @parse_assertion(%struct.cpp_reader* %pfile, %struct.answer** %answer, i32 4)
  %tobool = icmp eq %struct.cpp_hashnode* %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp = icmp eq i8 %bf.load, 2
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then
  %0 = load %struct.answer** %answer, align 8, !tbaa !22
  %cmp1 = icmp eq %struct.answer* %0, null
  br i1 %cmp1, label %land.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %value.i = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 6
  %answers.i = bitcast %union.anon* %value.i to %struct.answer**
  %1 = load %struct.answer** %answers.i, align 8, !tbaa !22
  %tobool32.i = icmp eq %struct.answer* %1, null
  br i1 %tobool32.i, label %find_answer.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %lor.rhs
  %count1.i = getelementptr inbounds %struct.answer* %0, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc16.i, %for.body.lr.ph.i
  %2 = phi %struct.answer* [ %1, %for.body.lr.ph.i ], [ %6, %for.inc16.i ]
  %result.033.i = phi %struct.answer** [ %answers.i, %for.body.lr.ph.i ], [ %next.i, %for.inc16.i ]
  %count.i = getelementptr inbounds %struct.answer* %2, i64 0, i32 1
  %3 = load i32* %count.i, align 4, !tbaa !65
  %4 = load i32* %count1.i, align 4, !tbaa !65
  %cmp.i = icmp eq i32 %3, %4
  br i1 %cmp.i, label %for.cond2.preheader.i, label %for.inc16.i

for.cond2.preheader.i:                            ; preds = %for.body.i
  %cmp429.i = icmp eq i32 %3, 0
  br i1 %cmp429.i, label %find_answer.exit, label %for.body5.i

for.cond2.i:                                      ; preds = %for.body5.i
  %cmp4.i = icmp ult i32 %inc.i, %.pre40.i
  br i1 %cmp4.i, label %for.body5.i, label %for.end.i

for.body5.i:                                      ; preds = %for.cond2.preheader.i, %for.cond2.i
  %i.030.i = phi i32 [ %inc.i, %for.cond2.i ], [ 0, %for.cond2.preheader.i ]
  %idxprom.i = zext i32 %i.030.i to i64
  %arrayidx.i = getelementptr inbounds %struct.answer* %2, i64 0, i32 2, i64 %idxprom.i
  %arrayidx8.i = getelementptr inbounds %struct.answer* %0, i64 0, i32 2, i64 %idxprom.i
  %call.i = tail call i32 @_cpp_equiv_tokens(%struct.cpp_token* %arrayidx.i, %struct.cpp_token* %arrayidx8.i) #4
  %tobool9.i = icmp eq i32 %call.i, 0
  %inc.i = add i32 %i.030.i, 1
  %.pre40.i = load i32* %count.i, align 4, !tbaa !65
  br i1 %tobool9.i, label %for.end.i, label %for.cond2.i

for.end.i:                                        ; preds = %for.body5.i, %for.cond2.i
  %i.0.lcssa.i = phi i32 [ %inc.i, %for.cond2.i ], [ %i.030.i, %for.body5.i ]
  %cmp12.i = icmp eq i32 %i.0.lcssa.i, %.pre40.i
  %.pre.pre = load %struct.answer** %result.033.i, align 8, !tbaa !22
  br i1 %cmp12.i, label %find_answer.exit, label %for.inc16.i

for.inc16.i:                                      ; preds = %for.end.i, %for.body.i
  %5 = phi %struct.answer* [ %2, %for.body.i ], [ %.pre.pre, %for.end.i ]
  %next.i = getelementptr inbounds %struct.answer* %5, i64 0, i32 0
  %6 = load %struct.answer** %next.i, align 8, !tbaa !22
  %tobool.i = icmp eq %struct.answer* %6, null
  br i1 %tobool.i, label %find_answer.exit, label %for.body.i

find_answer.exit:                                 ; preds = %for.end.i, %for.cond2.preheader.i, %for.inc16.i, %lor.rhs
  %7 = phi %struct.answer* [ null, %lor.rhs ], [ %.pre.pre, %for.end.i ], [ %2, %for.cond2.preheader.i ], [ null, %for.inc16.i ]
  %cmp3 = icmp ne %struct.answer* %7, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %find_answer.exit, %if.then
  %8 = phi i1 [ false, %if.then ], [ true, %land.rhs ], [ %cmp3, %find_answer.exit ]
  %land.ext = zext i1 %8 to i32
  store i32 %land.ext, i32* %value, align 4, !tbaa !67
  br label %if.end

if.end:                                           ; preds = %entry, %land.end
  %conv = zext i1 %tobool to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.cpp_hashnode* @parse_assertion(%struct.cpp_reader* %pfile, %struct.answer** nocapture %answerp, i32 %type) #0 {
entry:
  %prevent_expansion = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 7
  %0 = load i8* %prevent_expansion, align 1, !tbaa !59
  %inc = add i8 %0, 1
  store i8 %inc, i8* %prevent_expansion, align 1, !tbaa !59
  store %struct.answer* null, %struct.answer** %answerp, align 8, !tbaa !22
  %call = call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type1 = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type1, align 2
  switch i8 %bf.load, label %if.then6 [
    i8 67, label %if.then
    i8 56, label %if.else7
  ]

if.then:                                          ; preds = %entry
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([28 x i8]* @.str12, i64 0, i64 0)) #4
  br label %if.end19

if.then6:                                         ; preds = %entry
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([32 x i8]* @.str13, i64 0, i64 0)) #4
  br label %if.end19

if.else7:                                         ; preds = %entry
  %call.i = call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load.i = load i8* %type1.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 22
  br i1 %cmp.i, label %for.cond.preheader.i, label %if.then.i

for.cond.preheader.i:                             ; preds = %if.else7
  %a_buff.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 6
  br label %for.cond.i

if.then.i:                                        ; preds = %if.else7
  switch i32 %type, label %if.end10.i [
    i32 4, label %if.then3.i
    i32 17, label %land.lhs.true.i
  ]

if.then3.i:                                       ; preds = %if.then.i
  call void @_cpp_backup_tokens(%struct.cpp_reader* %pfile, i32 1) #4
  br label %if.then10

land.lhs.true.i:                                  ; preds = %if.then.i
  %cmp8.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp8.i, label %if.then10, label %if.end10.i

if.end10.i:                                       ; preds = %land.lhs.true.i, %if.then.i
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([28 x i8]* @.str14, i64 0, i64 0)) #4
  br label %if.end19

for.cond.i:                                       ; preds = %for.inc.i, %for.cond.preheader.i
  %acount.0.i = phi i32 [ %inc.i, %for.inc.i ], [ 0, %for.cond.preheader.i ]
  %call12.i = call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type13.i = getelementptr inbounds %struct.cpp_token* %call12.i, i64 0, i32 2
  %bf.load14.i = load i8* %type13.i, align 2
  switch i8 %bf.load14.i, label %if.end24.i [
    i8 23, label %for.end.i
    i8 67, label %if.then23.i
  ]

if.then23.i:                                      ; preds = %for.cond.i
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([31 x i8]* @.str15, i64 0, i64 0)) #4
  br label %if.end19

if.end24.i:                                       ; preds = %for.cond.i
  %conv.i = zext i32 %acount.0.i to i64
  %mul.i = mul i64 %conv.i, 24
  %add.i = add i64 %mul.i, 40
  %1 = load %struct._cpp_buff** %a_buff.i, align 8, !tbaa !68
  %limit.i = getelementptr inbounds %struct._cpp_buff* %1, i64 0, i32 3
  %2 = load i8** %limit.i, align 8, !tbaa !69
  %cur.i = getelementptr inbounds %struct._cpp_buff* %1, i64 0, i32 2
  %3 = load i8** %cur.i, align 8, !tbaa !71
  %sub.ptr.lhs.cast.i = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %3 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %cmp26.i = icmp ult i64 %sub.ptr.sub.i, %add.i
  br i1 %cmp26.i, label %if.then28.i, label %if.end30.i

if.then28.i:                                      ; preds = %if.end24.i
  call void @_cpp_extend_buff(%struct.cpp_reader* %pfile, %struct._cpp_buff** %a_buff.i, i64 40) #4
  %.pre.i = load %struct._cpp_buff** %a_buff.i, align 8, !tbaa !68
  %cur32.phi.trans.insert.i = getelementptr inbounds %struct._cpp_buff* %.pre.i, i64 0, i32 2
  %.pre69.i = load i8** %cur32.phi.trans.insert.i, align 8, !tbaa !71
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then28.i, %if.end24.i
  %4 = phi i8* [ %.pre69.i, %if.then28.i ], [ %3, %if.end24.i ]
  %first.i = getelementptr inbounds i8* %4, i64 16
  %5 = bitcast i8* %first.i to [1 x %struct.cpp_token]*
  %arrayidx.i = getelementptr inbounds [1 x %struct.cpp_token]* %5, i64 0, i64 %conv.i
  %6 = bitcast %struct.cpp_token* %arrayidx.i to i8*
  %7 = bitcast %struct.cpp_token* %call12.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 24, i32 8, i1 false) #4, !tbaa.struct !72
  %cmp33.i = icmp eq i32 %acount.0.i, 0
  br i1 %cmp33.i, label %if.then35.i, label %for.inc.i

if.then35.i:                                      ; preds = %if.end30.i
  %flags.i = getelementptr inbounds [1 x %struct.cpp_token]* %5, i64 0, i64 %conv.i, i32 3
  %8 = load i8* %flags.i, align 1, !tbaa !74
  %and.i = and i8 %8, -2
  store i8 %and.i, i8* %flags.i, align 1, !tbaa !74
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then35.i, %if.end30.i
  %inc.i = add i32 %acount.0.i, 1
  br label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i
  %cmp39.i = icmp eq i32 %acount.0.i, 0
  br i1 %cmp39.i, label %if.then41.i, label %if.end42.i

if.then41.i:                                      ; preds = %for.end.i
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([28 x i8]* @.str16, i64 0, i64 0)) #4
  br label %if.end19

if.end42.i:                                       ; preds = %for.end.i
  %9 = load %struct._cpp_buff** %a_buff.i, align 8, !tbaa !68
  %cur44.i = getelementptr inbounds %struct._cpp_buff* %9, i64 0, i32 2
  %10 = load i8** %cur44.i, align 8, !tbaa !71
  %11 = bitcast i8* %10 to %struct.answer*
  %count.i = getelementptr inbounds i8* %10, i64 8
  %12 = bitcast i8* %count.i to i32*
  store i32 %acount.0.i, i32* %12, align 4, !tbaa !65
  %next.i = bitcast i8* %10 to %struct.answer**
  store %struct.answer* null, %struct.answer** %next.i, align 8, !tbaa !75
  store %struct.answer* %11, %struct.answer** %answerp, align 8, !tbaa !22
  br label %if.then10

if.then10:                                        ; preds = %if.then3.i, %if.end42.i, %land.lhs.true.i
  %val = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4
  %node = bitcast %union.anon.0* %val to %struct.cpp_hashnode**
  %13 = load %struct.cpp_hashnode** %node, align 8, !tbaa !22
  %len11 = getelementptr inbounds %struct.cpp_hashnode* %13, i64 0, i32 0, i32 0
  %14 = load i32* %len11, align 4, !tbaa !76
  %add = add i32 %14, 1
  %conv = zext i32 %add to i64
  %15 = alloca i8, i64 %conv, align 1
  store i8 35, i8* %15, align 1, !tbaa !64
  %add.ptr = getelementptr inbounds i8* %15, i64 1
  %16 = load %struct.cpp_hashnode** %node, align 8, !tbaa !22
  %str = getelementptr inbounds %struct.cpp_hashnode* %16, i64 0, i32 0, i32 1
  %17 = load i8** %str, align 8, !tbaa !51
  %conv15 = zext i32 %14 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %17, i64 %conv15, i32 1, i1 false)
  %call17 = call %struct.cpp_hashnode* @cpp_lookup(%struct.cpp_reader* %pfile, i8* %15, i32 %add) #4
  br label %if.end19

if.end19:                                         ; preds = %if.then23.i, %if.then41.i, %if.end10.i, %if.then6, %if.then10, %if.then
  %result.0 = phi %struct.cpp_hashnode* [ null, %if.then ], [ null, %if.then6 ], [ %call17, %if.then10 ], [ null, %if.end10.i ], [ null, %if.then41.i ], [ null, %if.then23.i ]
  %18 = load i8* %prevent_expansion, align 1, !tbaa !59
  %dec = add i8 %18, -1
  store i8 %dec, i8* %prevent_expansion, align 1, !tbaa !59
  ret %struct.cpp_hashnode* %result.0
}

; Function Attrs: nounwind uwtable
define void @cpp_define(%struct.cpp_reader* %pfile, i8* %str) #0 {
entry:
  %call = call i64 @strlen(i8* %str) #4
  %add = add i64 %call, 3
  %0 = alloca i8, i64 %add, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %str, i64 %call, i32 1, i1 false)
  %call1 = call i8* @strchr(i8* %str, i32 61) #4
  %tobool = icmp eq i8* %call1, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %sub.ptr.lhs.cast = ptrtoint i8* %call1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %str to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %arrayidx = getelementptr inbounds i8* %0, i64 %sub.ptr.sub
  store i8 32, i8* %arrayidx, align 1, !tbaa !64
  br label %if.end

if.else:                                          ; preds = %entry
  %inc = add i64 %call, 1
  %arrayidx2 = getelementptr inbounds i8* %0, i64 %call
  store i8 32, i8* %arrayidx2, align 1, !tbaa !64
  %inc3 = add i64 %call, 2
  %arrayidx4 = getelementptr inbounds i8* %0, i64 %inc
  store i8 49, i8* %arrayidx4, align 1, !tbaa !64
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %count.0 = phi i64 [ %call, %if.then ], [ %inc3, %if.else ]
  %arrayidx5 = getelementptr inbounds i8* %0, i64 %count.0
  store i8 0, i8* %arrayidx5, align 1, !tbaa !64
  call fastcc void @run_directive(%struct.cpp_reader* %pfile, i32 0, i8* %0, i64 %count.0)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal fastcc void @run_directive(%struct.cpp_reader* %pfile, i32 %dir_no, i8* %buf, i64 %count) #0 {
entry:
  %chunk_limit.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 4
  %0 = load i8** %chunk_limit.i, align 8, !tbaa !77
  %next_free.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 3
  %1 = load i8** %next_free.i, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i = ptrtoint i8* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %cmp.i = icmp slt i64 %sub.ptr.sub.i, 144
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %buffer_ob.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33
  tail call void @_obstack_newchunk(%struct.obstack* %buffer_ob.i, i32 144) #4
  %.pre.i = load i8** %next_free.i, align 8, !tbaa !78
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry
  %2 = phi i8* [ %.pre.i, %if.then.i ], [ %1, %entry ]
  %add.ptr.i = getelementptr inbounds i8* %2, i64 144
  store i8* %add.ptr.i, i8** %next_free.i, align 8, !tbaa !78
  %object_base.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 2
  %3 = load i8** %object_base.i, align 8, !tbaa !79
  %cmp6.i = icmp eq i8* %add.ptr.i, %3
  br i1 %cmp6.i, label %if.then8.i, label %if.end9.i

if.then8.i:                                       ; preds = %if.end.i
  %maybe_empty_object.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 10
  %bf.load.i = load i8* %maybe_empty_object.i, align 8
  %bf.set.i = or i8 %bf.load.i, 2
  store i8 %bf.set.i, i8* %maybe_empty_object.i, align 8
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then8.i, %if.end.i
  %sub.ptr.lhs.cast11.i = ptrtoint i8* %add.ptr.i to i64
  %alignment_mask.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 6
  %4 = load i32* %alignment_mask.i, align 4, !tbaa !80
  %conv13.i = sext i32 %4 to i64
  %add.i = add nsw i64 %conv13.i, %sub.ptr.lhs.cast11.i
  %neg.i = xor i32 %4, -1
  %conv15.i = sext i32 %neg.i to i64
  %and.i = and i64 %add.i, %conv15.i
  %add.ptr16.i = getelementptr inbounds i8* null, i64 %and.i
  store i8* %add.ptr16.i, i8** %next_free.i, align 8, !tbaa !78
  %chunk.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 1
  %5 = load %struct._obstack_chunk** %chunk.i, align 8, !tbaa !81
  %sub.ptr.lhs.cast19.i = ptrtoint i8* %add.ptr16.i to i64
  %sub.ptr.rhs.cast20.i = ptrtoint %struct._obstack_chunk* %5 to i64
  %sub.ptr.sub21.i = sub i64 %sub.ptr.lhs.cast19.i, %sub.ptr.rhs.cast20.i
  %6 = load i8** %chunk_limit.i, align 8, !tbaa !77
  %sub.ptr.lhs.cast24.i = ptrtoint i8* %6 to i64
  %sub.ptr.sub26.i = sub i64 %sub.ptr.lhs.cast24.i, %sub.ptr.rhs.cast20.i
  %cmp27.i = icmp sgt i64 %sub.ptr.sub21.i, %sub.ptr.sub26.i
  br i1 %cmp27.i, label %if.then29.i, label %cpp_push_buffer.exit

if.then29.i:                                      ; preds = %if.end9.i
  store i8* %6, i8** %next_free.i, align 8, !tbaa !78
  br label %cpp_push_buffer.exit

cpp_push_buffer.exit:                             ; preds = %if.end9.i, %if.then29.i
  %7 = phi i8* [ %6, %if.then29.i ], [ %add.ptr16.i, %if.end9.i ]
  store i8* %7, i8** %object_base.i, align 8, !tbaa !79
  %8 = bitcast i8* %3 to %struct.cpp_buffer*
  tail call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 144, i32 8, i1 false) #4
  %cur.i = bitcast i8* %3 to i8**
  store i8* %buf, i8** %cur.i, align 8, !tbaa !82
  %buf.i = getelementptr inbounds i8* %3, i64 40
  %9 = bitcast i8* %buf.i to i8**
  store i8* %buf, i8** %9, align 8, !tbaa !83
  %line_base.i = getelementptr inbounds i8* %3, i64 24
  %10 = bitcast i8* %line_base.i to i8**
  store i8* %buf, i8** %10, align 8, !tbaa !84
  %add.ptr36.i = getelementptr inbounds i8* %buf, i64 %count
  %rlimit.i = getelementptr inbounds i8* %3, i64 16
  %11 = bitcast i8* %rlimit.i to i8**
  store i8* %add.ptr36.i, i8** %11, align 8, !tbaa !85
  %12 = getelementptr inbounds i8* %3, i64 81
  store i8 1, i8* %12, align 1, !tbaa !86
  %buffer39.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %13 = load %struct.cpp_buffer** %buffer39.i, align 8, !tbaa !54
  %prev.i = getelementptr inbounds i8* %3, i64 32
  %14 = bitcast i8* %prev.i to %struct.cpp_buffer**
  store %struct.cpp_buffer* %13, %struct.cpp_buffer** %14, align 8, !tbaa !55
  %15 = getelementptr inbounds i8* %3, i64 83
  store i8 1, i8* %15, align 1, !tbaa !87
  store %struct.cpp_buffer* %8, %struct.cpp_buffer** %buffer39.i, align 8, !tbaa !54
  %in_directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 0
  store i8 1, i8* %in_directive.i, align 1, !tbaa !1
  %save_comments.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 3
  store i8 0, i8* %save_comments.i, align 1, !tbaa !19
  %line.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 4
  %16 = load i32* %line.i, align 4, !tbaa !20
  %directive_line.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 5
  store i32 %16, i32* %directive_line.i, align 4, !tbaa !21
  %17 = getelementptr inbounds i8* %3, i64 68
  store i8 0, i8* %17, align 1, !tbaa !63
  %idxprom = sext i32 %dir_no to i64
  %arrayidx = getelementptr inbounds [19 x %struct.directive]* bitcast (<{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }>* @dtable to [19 x %struct.directive]*), i64 0, i64 %idxprom
  %directive = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  store %struct.directive* %arrayidx, %struct.directive** %directive, align 8, !tbaa !37
  %handler = getelementptr inbounds %struct.directive* %arrayidx, i64 0, i32 0
  %18 = load void (%struct.cpp_reader*)** %handler, align 8, !tbaa !38
  tail call void %18(%struct.cpp_reader* %pfile) #4
  %context.i.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 10
  %19 = load %struct.cpp_context** %context.i.i, align 8, !tbaa !39
  %base_context.i.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 9
  %cmp12.i.i = icmp eq %struct.cpp_context* %19, %base_context.i.i
  br i1 %cmp12.i.i, label %while.end.i.i, label %while.body.i.i

while.body.i.i:                                   ; preds = %cpp_push_buffer.exit, %while.body.i.i
  tail call void @_cpp_pop_context(%struct.cpp_reader* %pfile) #4
  %20 = load %struct.cpp_context** %context.i.i, align 8, !tbaa !39
  %cmp.i.i = icmp eq %struct.cpp_context* %20, %base_context.i.i
  br i1 %cmp.i.i, label %while.end.i.i, label %while.body.i.i

while.end.i.i:                                    ; preds = %while.body.i.i, %cpp_push_buffer.exit
  %cur_token.i.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %21 = load %struct.cpp_token** %cur_token.i.i, align 8, !tbaa !40
  %type.i.i = getelementptr inbounds %struct.cpp_token* %21, i64 -1, i32 2
  %bf.load.i.i = load i8* %type.i.i, align 2
  %cmp1.i.i = icmp eq i8 %bf.load.i.i, 67
  br i1 %cmp1.i.i, label %skip_rest_of_line.exit.i, label %while.cond2.i.i

while.cond2.i.i:                                  ; preds = %while.end.i.i, %while.cond2.i.i
  %call.i.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type3.i.i = getelementptr inbounds %struct.cpp_token* %call.i.i, i64 0, i32 2
  %bf.load4.i.i = load i8* %type3.i.i, align 2
  %cmp6.i.i = icmp eq i8 %bf.load4.i.i, 67
  br i1 %cmp6.i.i, label %skip_rest_of_line.exit.i, label %while.cond2.i.i

skip_rest_of_line.exit.i:                         ; preds = %while.cond2.i.i, %while.end.i.i
  %keep_tokens.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 19
  %22 = load i32* %keep_tokens.i, align 4, !tbaa !41
  %tobool1.i = icmp eq i32 %22, 0
  br i1 %tobool1.i, label %if.then2.i, label %end_directive.exit

if.then2.i:                                       ; preds = %skip_rest_of_line.exit.i
  %base_run.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 16
  %cur_run.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 17
  store %struct.tokenrun* %base_run.i, %struct.tokenrun** %cur_run.i, align 8, !tbaa !42
  %base.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 16, i32 2
  %23 = load %struct.cpp_token** %base.i, align 8, !tbaa !43
  store %struct.cpp_token* %23, %struct.cpp_token** %cur_token.i.i, align 8, !tbaa !40
  br label %end_directive.exit

end_directive.exit:                               ; preds = %skip_rest_of_line.exit.i, %if.then2.i
  %discard_comments.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 17
  %24 = load i8* %discard_comments.i, align 1, !tbaa !44
  %lnot.i = icmp eq i8 %24, 0
  %conv.i = zext i1 %lnot.i to i8
  store i8 %conv.i, i8* %save_comments.i, align 1, !tbaa !19
  store i8 0, i8* %in_directive.i, align 1, !tbaa !1
  %angled_headers.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 2
  store i8 0, i8* %angled_headers.i, align 1, !tbaa !33
  store %struct.directive* null, %struct.directive** %directive, align 8, !tbaa !37
  %25 = load %struct.cpp_buffer** %buffer39.i, align 8, !tbaa !54
  %if_stack.i = getelementptr inbounds %struct.cpp_buffer* %25, i64 0, i32 7
  %ifs.029.i = load %struct.if_stack** %if_stack.i, align 8
  %tobool30.i = icmp eq %struct.if_stack* %ifs.029.i, null
  br i1 %tobool30.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %end_directive.exit, %for.body.i
  %ifs.031.i = phi %struct.if_stack* [ %ifs.0.i, %for.body.i ], [ %ifs.029.i, %end_directive.exit ]
  %line.i9 = getelementptr inbounds %struct.if_stack* %ifs.031.i, i64 0, i32 1
  %26 = load i32* %line.i9, align 4, !tbaa !88
  %type.i = getelementptr inbounds %struct.if_stack* %ifs.031.i, i64 0, i32 5
  %27 = load i32* %type.i, align 4, !tbaa !90
  %idxprom.i = sext i32 %27 to i64
  %name.i = getelementptr inbounds [19 x %struct.directive]* bitcast (<{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }>* @dtable to [19 x %struct.directive]*), i64 0, i64 %idxprom.i, i32 1
  %28 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i32, i32, i8*, ...)* @cpp_error_with_line(%struct.cpp_reader* %pfile, i32 %26, i32 0, i8* getelementptr inbounds ([17 x i8]* @.str11, i64 0, i64 0), i8* %28) #4
  %next.i = getelementptr inbounds %struct.if_stack* %ifs.031.i, i64 0, i32 0
  %ifs.0.i = load %struct.if_stack** %next.i, align 8
  %tobool.i = icmp eq %struct.if_stack* %ifs.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i, %end_directive.exit
  %skipping.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  store i8 0, i8* %skipping.i, align 1, !tbaa !29
  %prev.i10 = getelementptr inbounds %struct.cpp_buffer* %25, i64 0, i32 4
  %29 = load %struct.cpp_buffer** %prev.i10, align 8, !tbaa !55
  store %struct.cpp_buffer* %29, %struct.cpp_buffer** %buffer39.i, align 8, !tbaa !54
  %inc.i = getelementptr inbounds %struct.cpp_buffer* %25, i64 0, i32 6
  %30 = load %struct.include_file** %inc.i, align 8, !tbaa !58
  %tobool3.i = icmp eq %struct.include_file* %30, null
  br i1 %tobool3.i, label %if.then6.i, label %if.then.i11

if.then.i11:                                      ; preds = %for.end.i
  %call.i = tail call zeroext i1 @_cpp_pop_file_buffer(%struct.cpp_reader* %pfile, %struct.include_file* %30) #4
  br i1 %call.i, label %_cpp_pop_buffer.exit, label %if.then6.i

if.then6.i:                                       ; preds = %if.then.i11, %for.end.i
  %buffer_ob.i12 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33
  %31 = bitcast %struct.cpp_buffer* %25 to i8*
  %32 = load %struct._obstack_chunk** %chunk.i, align 8, !tbaa !81
  %33 = bitcast %struct._obstack_chunk* %32 to %struct.cpp_buffer*
  %cmp.i14 = icmp ugt %struct.cpp_buffer* %25, %33
  br i1 %cmp.i14, label %land.lhs.true.i, label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then6.i
  %34 = load i8** %chunk_limit.i, align 8, !tbaa !77
  %cmp7.i = icmp ult i8* %31, %34
  br i1 %cmp7.i, label %if.then8.i18, label %if.else.i

if.then8.i18:                                     ; preds = %land.lhs.true.i
  store i8* %31, i8** %object_base.i, align 8, !tbaa !79
  store i8* %31, i8** %next_free.i, align 8, !tbaa !78
  br label %_cpp_pop_buffer.exit

if.else.i:                                        ; preds = %land.lhs.true.i, %if.then6.i
  tail call void @obstack_free(%struct.obstack* %buffer_ob.i12, i8* %31) #4
  br label %_cpp_pop_buffer.exit

_cpp_pop_buffer.exit:                             ; preds = %if.then.i11, %if.then8.i18, %if.else.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @_cpp_define_builtin(%struct.cpp_reader* %pfile, i8* %str) #0 {
entry:
  %call = tail call i64 @strlen(i8* %str) #4
  tail call fastcc void @run_directive(%struct.cpp_reader* %pfile, i32 0, i8* %str, i64 %call)
  ret void
}

; Function Attrs: nounwind uwtable
define void @cpp_undef(%struct.cpp_reader* %pfile, i8* %macro) #0 {
entry:
  %call = tail call i64 @strlen(i8* %macro) #4
  tail call fastcc void @run_directive(%struct.cpp_reader* %pfile, i32 7, i8* %macro, i64 %call)
  ret void
}

; Function Attrs: nounwind uwtable
define void @cpp_assert(%struct.cpp_reader* %pfile, i8* %str) #0 {
entry:
  tail call fastcc void @handle_assertion(%struct.cpp_reader* %pfile, i8* %str, i32 16)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @handle_assertion(%struct.cpp_reader* %pfile, i8* %str, i32 %type) #0 {
entry:
  %call = call i64 @strlen(i8* %str) #4
  %call1 = call i8* @strchr(i8* %str, i32 61) #4
  %tobool = icmp eq i8* %call1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %add = add i64 %call, 2
  %0 = alloca i8, i64 %add, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %str, i64 %call, i32 1, i1 false)
  %sub.ptr.lhs.cast = ptrtoint i8* %call1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %str to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %arrayidx = getelementptr inbounds i8* %0, i64 %sub.ptr.sub
  store i8 40, i8* %arrayidx, align 1, !tbaa !64
  %inc = add i64 %call, 1
  %arrayidx2 = getelementptr inbounds i8* %0, i64 %call
  store i8 41, i8* %arrayidx2, align 1, !tbaa !64
  %arrayidx3 = getelementptr inbounds i8* %0, i64 %inc
  store i8 0, i8* %arrayidx3, align 1, !tbaa !64
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %count.0 = phi i64 [ %inc, %if.then ], [ %call, %entry ]
  %str.addr.0 = phi i8* [ %0, %if.then ], [ %str, %entry ]
  call fastcc void @run_directive(%struct.cpp_reader* %pfile, i32 %type, i8* %str.addr.0, i64 %count.0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @cpp_unassert(%struct.cpp_reader* %pfile, i8* %str) #0 {
entry:
  tail call fastcc void @handle_assertion(%struct.cpp_reader* %pfile, i8* %str, i32 17)
  ret void
}

; Function Attrs: nounwind readonly uwtable
define i32 @cpp_errors(%struct.cpp_reader* nocapture readonly %pfile) #5 {
entry:
  %errors = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 20
  %0 = load i32* %errors, align 4, !tbaa !91
  ret i32 %0
}

; Function Attrs: nounwind readnone uwtable
define %struct.cpp_options* @cpp_get_options(%struct.cpp_reader* readnone %pfile) #6 {
entry:
  %opts = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37
  ret %struct.cpp_options* %opts
}

; Function Attrs: nounwind readnone uwtable
define %struct.cpp_callbacks* @cpp_get_callbacks(%struct.cpp_reader* readnone %pfile) #6 {
entry:
  %cb = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35
  ret %struct.cpp_callbacks* %cb
}

; Function Attrs: nounwind readnone uwtable
define %struct.line_maps* @cpp_get_line_maps(%struct.cpp_reader* readnone %pfile) #6 {
entry:
  %line_maps = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 2
  ret %struct.line_maps* %line_maps
}

; Function Attrs: nounwind uwtable
define void @cpp_set_callbacks(%struct.cpp_reader* nocapture %pfile, %struct.cpp_callbacks* nocapture readonly %cb) #0 {
entry:
  %cb1 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35
  %0 = bitcast %struct.cpp_callbacks* %cb1 to i8*
  %1 = bitcast %struct.cpp_callbacks* %cb to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 56, i32 8, i1 false), !tbaa.struct !92
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.cpp_buffer* @cpp_push_buffer(%struct.cpp_reader* %pfile, i8* %buffer, i64 %len, i32 %from_stage3, i32 %return_at_eof) #0 {
entry:
  %chunk_limit = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 4
  %0 = load i8** %chunk_limit, align 8, !tbaa !77
  %next_free = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 3
  %1 = load i8** %next_free, align 8, !tbaa !78
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 144
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %buffer_ob = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33
  tail call void @_obstack_newchunk(%struct.obstack* %buffer_ob, i32 144) #4
  %.pre = load i8** %next_free, align 8, !tbaa !78
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = phi i8* [ %.pre, %if.then ], [ %1, %entry ]
  %add.ptr = getelementptr inbounds i8* %2, i64 144
  store i8* %add.ptr, i8** %next_free, align 8, !tbaa !78
  %object_base = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 2
  %3 = load i8** %object_base, align 8, !tbaa !79
  %cmp6 = icmp eq i8* %add.ptr, %3
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %maybe_empty_object = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 10
  %bf.load = load i8* %maybe_empty_object, align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  %sub.ptr.lhs.cast11 = ptrtoint i8* %add.ptr to i64
  %alignment_mask = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 6
  %4 = load i32* %alignment_mask, align 4, !tbaa !80
  %conv13 = sext i32 %4 to i64
  %add = add nsw i64 %conv13, %sub.ptr.lhs.cast11
  %neg = xor i32 %4, -1
  %conv15 = sext i32 %neg to i64
  %and = and i64 %add, %conv15
  %add.ptr16 = getelementptr inbounds i8* null, i64 %and
  store i8* %add.ptr16, i8** %next_free, align 8, !tbaa !78
  %chunk = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 1
  %5 = load %struct._obstack_chunk** %chunk, align 8, !tbaa !81
  %sub.ptr.lhs.cast19 = ptrtoint i8* %add.ptr16 to i64
  %sub.ptr.rhs.cast20 = ptrtoint %struct._obstack_chunk* %5 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %6 = load i8** %chunk_limit, align 8, !tbaa !77
  %sub.ptr.lhs.cast24 = ptrtoint i8* %6 to i64
  %sub.ptr.sub26 = sub i64 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast20
  %cmp27 = icmp sgt i64 %sub.ptr.sub21, %sub.ptr.sub26
  br i1 %cmp27, label %if.then29, label %if.end32

if.then29:                                        ; preds = %if.end9
  store i8* %6, i8** %next_free, align 8, !tbaa !78
  br label %if.end32

if.end32:                                         ; preds = %if.then29, %if.end9
  %7 = phi i8* [ %6, %if.then29 ], [ %add.ptr16, %if.end9 ]
  store i8* %7, i8** %object_base, align 8, !tbaa !79
  %8 = bitcast i8* %3 to %struct.cpp_buffer*
  tail call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 144, i32 8, i1 false)
  %cur = bitcast i8* %3 to i8**
  store i8* %buffer, i8** %cur, align 8, !tbaa !82
  %buf = getelementptr inbounds i8* %3, i64 40
  %9 = bitcast i8* %buf to i8**
  store i8* %buffer, i8** %9, align 8, !tbaa !83
  %line_base = getelementptr inbounds i8* %3, i64 24
  %10 = bitcast i8* %line_base to i8**
  store i8* %buffer, i8** %10, align 8, !tbaa !84
  %add.ptr36 = getelementptr inbounds i8* %buffer, i64 %len
  %rlimit = getelementptr inbounds i8* %3, i64 16
  %11 = bitcast i8* %rlimit to i8**
  store i8* %add.ptr36, i8** %11, align 8, !tbaa !85
  %conv37 = trunc i32 %from_stage3 to i8
  %12 = getelementptr inbounds i8* %3, i64 81
  store i8 %conv37, i8* %12, align 1, !tbaa !86
  %buffer39 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %13 = load %struct.cpp_buffer** %buffer39, align 8, !tbaa !54
  %prev = getelementptr inbounds i8* %3, i64 32
  %14 = bitcast i8* %prev to %struct.cpp_buffer**
  store %struct.cpp_buffer* %13, %struct.cpp_buffer** %14, align 8, !tbaa !55
  %tobool = icmp ne i32 %return_at_eof, 0
  %15 = getelementptr inbounds i8* %3, i64 83
  %frombool = zext i1 %tobool to i8
  store i8 %frombool, i8* %15, align 1, !tbaa !87
  %16 = getelementptr inbounds i8* %3, i64 68
  store i8 64, i8* %16, align 1, !tbaa !63
  store %struct.cpp_buffer* %8, %struct.cpp_buffer** %buffer39, align 8, !tbaa !54
  ret %struct.cpp_buffer* %8
}

declare void @_obstack_newchunk(%struct.obstack*, i32) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define void @_cpp_pop_buffer(%struct.cpp_reader* %pfile) #0 {
entry:
  %buffer1 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer1, align 8, !tbaa !54
  %if_stack = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 7
  %ifs.029 = load %struct.if_stack** %if_stack, align 8
  %tobool30 = icmp eq %struct.if_stack* %ifs.029, null
  br i1 %tobool30, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %ifs.031 = phi %struct.if_stack* [ %ifs.0, %for.body ], [ %ifs.029, %entry ]
  %line = getelementptr inbounds %struct.if_stack* %ifs.031, i64 0, i32 1
  %1 = load i32* %line, align 4, !tbaa !88
  %type = getelementptr inbounds %struct.if_stack* %ifs.031, i64 0, i32 5
  %2 = load i32* %type, align 4, !tbaa !90
  %idxprom = sext i32 %2 to i64
  %name = getelementptr inbounds [19 x %struct.directive]* bitcast (<{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }>* @dtable to [19 x %struct.directive]*), i64 0, i64 %idxprom, i32 1
  %3 = load i8** %name, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i32, i32, i8*, ...)* @cpp_error_with_line(%struct.cpp_reader* %pfile, i32 %1, i32 0, i8* getelementptr inbounds ([17 x i8]* @.str11, i64 0, i64 0), i8* %3) #4
  %next = getelementptr inbounds %struct.if_stack* %ifs.031, i64 0, i32 0
  %ifs.0 = load %struct.if_stack** %next, align 8
  %tobool = icmp eq %struct.if_stack* %ifs.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  store i8 0, i8* %skipping, align 1, !tbaa !29
  %prev = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 4
  %4 = load %struct.cpp_buffer** %prev, align 8, !tbaa !55
  store %struct.cpp_buffer* %4, %struct.cpp_buffer** %buffer1, align 8, !tbaa !54
  %inc = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 6
  %5 = load %struct.include_file** %inc, align 8, !tbaa !58
  %tobool3 = icmp eq %struct.include_file* %5, null
  br i1 %tobool3, label %if.then6, label %if.then

if.then:                                          ; preds = %for.end
  %call = tail call zeroext i1 @_cpp_pop_file_buffer(%struct.cpp_reader* %pfile, %struct.include_file* %5) #4
  br i1 %call, label %if.end10, label %if.then6

if.then6:                                         ; preds = %for.end, %if.then
  %buffer_ob = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33
  %6 = bitcast %struct.cpp_buffer* %0 to i8*
  %chunk = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 1
  %7 = load %struct._obstack_chunk** %chunk, align 8, !tbaa !81
  %8 = bitcast %struct._obstack_chunk* %7 to %struct.cpp_buffer*
  %cmp = icmp ugt %struct.cpp_buffer* %0, %8
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then6
  %chunk_limit = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 4
  %9 = load i8** %chunk_limit, align 8, !tbaa !77
  %cmp7 = icmp ult i8* %6, %9
  br i1 %cmp7, label %if.then8, label %if.else

if.then8:                                         ; preds = %land.lhs.true
  %object_base = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 2
  store i8* %6, i8** %object_base, align 8, !tbaa !79
  %next_free = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 3
  store i8* %6, i8** %next_free, align 8, !tbaa !78
  br label %if.end10

if.else:                                          ; preds = %land.lhs.true, %if.then6
  tail call void @obstack_free(%struct.obstack* %buffer_ob, i8* %6) #4
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.else, %if.then
  ret void
}

declare void @cpp_error_with_line(%struct.cpp_reader*, i32, i32, i8*, ...) #1

declare zeroext i1 @_cpp_pop_file_buffer(%struct.cpp_reader*, %struct.include_file*) #1

declare void @obstack_free(%struct.obstack*, i8*) #1

; Function Attrs: nounwind uwtable
define void @_cpp_init_directives(%struct.cpp_reader* %pfile) #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %name = getelementptr inbounds [19 x %struct.directive]* bitcast (<{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }>* @dtable to [19 x %struct.directive]*), i64 0, i64 %indvars.iv, i32 1
  %0 = load i8** %name, align 8, !tbaa !35
  %length = getelementptr inbounds [19 x %struct.directive]* bitcast (<{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }>* @dtable to [19 x %struct.directive]*), i64 0, i64 %indvars.iv, i32 2
  %1 = load i16* %length, align 8, !tbaa !93
  %conv = zext i16 %1 to i32
  %call = tail call %struct.cpp_hashnode* @cpp_lookup(%struct.cpp_reader* %pfile, i8* %0, i32 %conv) #4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %directive_index = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 2
  %2 = trunc i64 %indvars.iv.next to i8
  store i8 %2, i8* %directive_index, align 1, !tbaa !23
  %exitcond = icmp eq i64 %indvars.iv.next, 19
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  ret void
}

declare i32 @_cpp_equiv_tokens(%struct.cpp_token*, %struct.cpp_token*) #1

declare %struct.cpp_token* @cpp_get_token(%struct.cpp_reader*) #1

declare void @_cpp_extend_buff(%struct.cpp_reader*, %struct._cpp_buff**, i64) #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.cpp_token* @parse_include(%struct.cpp_reader* %pfile) #0 {
entry:
  %directive = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %0 = load %struct.directive** %directive, align 8, !tbaa !37
  %cmp = icmp eq %struct.directive* %0, bitcast (void (%struct.cpp_reader*)** getelementptr inbounds (<{ { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] }, { void (%struct.cpp_reader*)*, i8*, i16, i8, i8, [4 x i8] } }>* @dtable, i64 0, i32 11, i32 0) to %struct.directive*)
  br i1 %cmp, label %if.end, label %if.else

if.else:                                          ; preds = %entry
  %name = getelementptr inbounds %struct.directive* %0, i64 0, i32 1
  %1 = load i8** %name, align 8, !tbaa !35
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %dir.0 = phi i8* [ %1, %if.else ], [ getelementptr inbounds ([18 x i8]* @.str20, i64 0, i64 0), %entry ]
  %call = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  switch i8 %bf.load, label %if.then12 [
    i8 61, label %if.end18
    i8 63, label %if.end18
    i8 3, label %if.end13
  ]

if.then12:                                        ; preds = %if.end
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str21, i64 0, i64 0), i8* %dir.0) #4
  br label %return

if.end13:                                         ; preds = %if.end
  %call.i = tail call noalias i8* @xmalloc(i64 1024) #4
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end15.i, %if.end13
  %buffer.0.i = phi i8* [ %call.i, %if.end13 ], [ %buffer.1.i, %if.end15.i ]
  %total_len.0.i = phi i64 [ 0, %if.end13 ], [ %sub.ptr.sub.i, %if.end15.i ]
  %capacity.0.i = phi i64 [ 1024, %if.end13 ], [ %capacity.1.i, %if.end15.i ]
  %call1.i = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type.i = getelementptr inbounds %struct.cpp_token* %call1.i, i64 0, i32 2
  %bf.load.i = load i8* %type.i, align 2
  switch i8 %bf.load.i, label %if.end.i [
    i8 67, label %glue_header_name.exit.thread
    i8 2, label %glue_header_name.exit
  ]

if.end.i:                                         ; preds = %for.cond.i
  %call6.i = tail call i32 @cpp_token_len(%struct.cpp_token* %call1.i) #4
  %conv.i = zext i32 %call6.i to i64
  %add.i = add i64 %conv.i, %total_len.0.i
  %cmp7.i = icmp ugt i64 %add.i, %capacity.0.i
  br i1 %cmp7.i, label %if.then9.i, label %if.end12.i

if.then9.i:                                       ; preds = %if.end.i
  %add10.i = add i64 %conv.i, %capacity.0.i
  %mul.i = shl i64 %add10.i, 1
  %call11.i = tail call i8* @xrealloc(i8* %buffer.0.i, i64 %mul.i) #4
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then9.i, %if.end.i
  %buffer.1.i = phi i8* [ %call11.i, %if.then9.i ], [ %buffer.0.i, %if.end.i ]
  %capacity.1.i = phi i64 [ %mul.i, %if.then9.i ], [ %capacity.0.i, %if.end.i ]
  %flags.i = getelementptr inbounds %struct.cpp_token* %call1.i, i64 0, i32 3
  %2 = load i8* %flags.i, align 1, !tbaa !74
  %and.i = and i8 %2, 1
  %tobool.i = icmp eq i8 %and.i, 0
  br i1 %tobool.i, label %if.end15.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.end12.i
  %inc.i = add i64 %total_len.0.i, 1
  %arrayidx.i = getelementptr inbounds i8* %buffer.1.i, i64 %total_len.0.i
  store i8 32, i8* %arrayidx.i, align 1, !tbaa !64
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then14.i, %if.end12.i
  %total_len.1.i = phi i64 [ %inc.i, %if.then14.i ], [ %total_len.0.i, %if.end12.i ]
  %arrayidx16.i = getelementptr inbounds i8* %buffer.1.i, i64 %total_len.1.i
  %call17.i = tail call i8* @cpp_spell_token(%struct.cpp_reader* %pfile, %struct.cpp_token* %call1.i, i8* %arrayidx16.i) #4
  %sub.ptr.lhs.cast.i = ptrtoint i8* %call17.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %buffer.1.i to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  br label %for.cond.i

glue_header_name.exit.thread:                     ; preds = %for.cond.i
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([32 x i8]* @.str23, i64 0, i64 0)) #4
  tail call void @free(i8* %buffer.0.i) #4
  br label %return

glue_header_name.exit:                            ; preds = %for.cond.i
  %add24.i = add i64 %total_len.0.i, 1
  %call25.i = tail call i8* @_cpp_unaligned_alloc(%struct.cpp_reader* %pfile, i64 %add24.i) #4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call25.i, i8* %buffer.0.i, i64 %total_len.0.i, i32 1, i1 false) #4
  %arrayidx26.i = getelementptr inbounds i8* %call25.i, i64 %total_len.0.i
  store i8 0, i8* %arrayidx26.i, align 1, !tbaa !64
  %call27.i = tail call %struct.cpp_token* @_cpp_temp_token(%struct.cpp_reader* %pfile) #4
  %type28.i = getelementptr inbounds %struct.cpp_token* %call27.i, i64 0, i32 2
  store i8 63, i8* %type28.i, align 2
  %flags29.i = getelementptr inbounds %struct.cpp_token* %call27.i, i64 0, i32 3
  store i8 0, i8* %flags29.i, align 1, !tbaa !74
  %conv30.i = trunc i64 %total_len.0.i to i32
  %len31.i = getelementptr inbounds %struct.cpp_token* %call27.i, i64 0, i32 4, i32 0, i32 0
  store i32 %conv30.i, i32* %len31.i, align 4, !tbaa !60
  %text.i = getelementptr inbounds %struct.cpp_token* %call27.i, i64 0, i32 4, i32 0, i32 1
  store i8* %call25.i, i8** %text.i, align 8, !tbaa !62
  tail call void @free(i8* %buffer.0.i) #4
  %cmp15 = icmp eq %struct.cpp_token* %call27.i, null
  br i1 %cmp15, label %return, label %if.end18

if.end18:                                         ; preds = %if.end, %if.end, %glue_header_name.exit
  %header.0 = phi %struct.cpp_token* [ %call27.i, %glue_header_name.exit ], [ %call, %if.end ], [ %call, %if.end ]
  %len = getelementptr inbounds %struct.cpp_token* %header.0, i64 0, i32 4, i32 0, i32 0
  %3 = load i32* %len, align 4, !tbaa !60
  %cmp19 = icmp eq i32 %3, 0
  br i1 %cmp19, label %if.then20, label %return

if.then20:                                        ; preds = %if.end18
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([23 x i8]* @.str22, i64 0, i64 0), i8* %dir.0) #4
  br label %return

return:                                           ; preds = %glue_header_name.exit.thread, %if.end18, %glue_header_name.exit, %if.then20, %if.then12
  %retval.0 = phi %struct.cpp_token* [ null, %if.then12 ], [ null, %if.then20 ], [ null, %glue_header_name.exit ], [ %header.0, %if.end18 ], [ null, %glue_header_name.exit.thread ]
  ret %struct.cpp_token* %retval.0
}

declare i32 @_cpp_compare_file_date(%struct.cpp_reader*, %struct.cpp_token*) #1

declare void @cpp_warning(%struct.cpp_reader*, i8*, ...) #1

declare i32 @_cpp_begin_message(%struct.cpp_reader*, i32, i32, i32) #1

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #7

declare void @cpp_output_line(%struct.cpp_reader*, %struct._IO_FILE*) #1

declare noalias i8* @xmalloc(i64) #1

declare i32 @cpp_token_len(%struct.cpp_token*) #1

declare i8* @xrealloc(i8*, i64) #1

declare i8* @cpp_spell_token(%struct.cpp_reader*, %struct.cpp_token*, i8*) #1

declare i8* @_cpp_unaligned_alloc(%struct.cpp_reader*, i64) #1

declare %struct.cpp_token* @_cpp_temp_token(%struct.cpp_reader*) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #7

declare void @cpp_make_system_header(%struct.cpp_reader*, i32, i32) #1

declare void @_cpp_pop_context(%struct.cpp_reader*) #1

declare void @_cpp_free_definition(%struct.cpp_hashnode*) #1

declare void @_cpp_never_reread(%struct.include_file*) #1

declare i8* @_cpp_aligned_alloc(%struct.cpp_reader*, i64) #1

; Function Attrs: nounwind uwtable
define internal void @do_linemarker(%struct.cpp_reader* %pfile) #0 {
entry:
  %str.addr.i = alloca i8*, align 8
  %map = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 3
  %0 = load %struct.line_map** %map, align 8, !tbaa !45
  %to_file = getelementptr inbounds %struct.line_map* %0, i64 0, i32 0
  %1 = load i8** %to_file, align 8, !tbaa !94
  %sysp = getelementptr inbounds %struct.line_map* %0, i64 0, i32 5
  %2 = load i8* %sysp, align 1, !tbaa !96
  %conv = zext i8 %2 to i32
  call void @_cpp_backup_tokens(%struct.cpp_reader* %pfile, i32 1) #4
  %call = call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  %cmp = icmp eq i8 %bf.load, 57
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %len = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0, i32 0
  %3 = load i32* %len, align 4, !tbaa !60
  %tobool11.i = icmp eq i32 %3, 0
  br i1 %tobool11.i, label %if.end, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %lor.lhs.false
  %text = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0, i32 1
  %4 = load i8** %text, align 8, !tbaa !62
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.preheader, %if.end.i
  %dec14.in.i = phi i32 [ %dec14.i, %if.end.i ], [ %3, %while.body.i.preheader ]
  %reg.013.i = phi i64 [ %add.i, %if.end.i ], [ 0, %while.body.i.preheader ]
  %str.addr.012.i = phi i8* [ %incdec.ptr.i, %if.end.i ], [ %4, %while.body.i.preheader ]
  %dec14.i = add i32 %dec14.in.i, -1
  %5 = load i8* %str.addr.012.i, align 1, !tbaa !64
  %idxprom.i = zext i8 %5 to i64
  %arrayidx.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom.i
  %6 = load i16* %arrayidx.i, align 2, !tbaa !73
  %and2.i = and i16 %6, 4
  %tobool3.i = icmp eq i16 %and2.i, 0
  br i1 %tobool3.i, label %if.then, label %if.end.i

if.end.i:                                         ; preds = %while.body.i
  %incdec.ptr.i = getelementptr inbounds i8* %str.addr.012.i, i64 1
  %mul.i = mul i64 %reg.013.i, 10
  %sub.i = add i64 %mul.i, -48
  %add.i = add i64 %sub.i, %idxprom.i
  %tobool.i = icmp eq i32 %dec14.i, 0
  br i1 %tobool.i, label %if.end.loopexit, label %while.body.i

if.then:                                          ; preds = %while.body.i, %entry
  %call6 = call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call) #4
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([39 x i8]* @.str35, i64 0, i64 0), i8* %call6) #4
  br label %return

if.end.loopexit:                                  ; preds = %if.end.i
  %phitmp = trunc i64 %add.i to i32
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %lor.lhs.false
  %new_lineno.0.load192.ph = phi i32 [ 0, %lor.lhs.false ], [ %phitmp, %if.end.loopexit ]
  %call7 = call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type8 = getelementptr inbounds %struct.cpp_token* %call7, i64 0, i32 2
  %bf.load9 = load i8* %type8, align 2
  switch i8 %bf.load9, label %if.then47 [
    i8 61, label %if.then13
    i8 67, label %if.end50
  ]

if.then13:                                        ; preds = %if.end
  %text16 = getelementptr inbounds %struct.cpp_token* %call7, i64 0, i32 4, i32 0, i32 1
  %7 = load i8** %text16, align 8, !tbaa !62
  %len19 = getelementptr inbounds %struct.cpp_token* %call7, i64 0, i32 4, i32 0, i32 0
  %8 = load i32* %len19, align 4, !tbaa !60
  %9 = bitcast i8** %str.addr.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #4
  store i8* %7, i8** %str.addr.i, align 8, !tbaa !22
  %add.i86 = add i32 %8, 1
  %conv.i = zext i32 %add.i86 to i64
  %call.i87 = call i8* @_cpp_unaligned_alloc(%struct.cpp_reader* %pfile, i64 %conv.i) #4
  %idx.ext.i = zext i32 %8 to i64
  %add.ptr.i = getelementptr inbounds i8* %7, i64 %idx.ext.i
  %cmp18.i = icmp eq i32 %8, 0
  br i1 %cmp18.i, label %dequote_string.exit, label %while.body.i89

while.body.i89:                                   ; preds = %if.then13, %while.cond.backedge.i
  %10 = phi i8* [ %12, %while.cond.backedge.i ], [ %7, %if.then13 ]
  %dst.019.i = phi i8* [ %dst.0.be.i, %while.cond.backedge.i ], [ %call.i87, %if.then13 ]
  %incdec.ptr.i88 = getelementptr inbounds i8* %10, i64 1
  store i8* %incdec.ptr.i88, i8** %str.addr.i, align 8, !tbaa !22
  %11 = load i8* %10, align 1, !tbaa !64
  %cmp3.i = icmp eq i8 %11, 92
  br i1 %cmp3.i, label %if.else.i, label %while.cond.backedge.i

if.else.i:                                        ; preds = %while.body.i89
  %call7.i = call i32 @cpp_parse_escape(%struct.cpp_reader* %pfile, i8** %str.addr.i, i8* %add.ptr.i, i64 255, i32 0) #4
  %conv8.i = trunc i32 %call7.i to i8
  br label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %if.else.i, %while.body.i89
  %storemerge.i = phi i8 [ %conv8.i, %if.else.i ], [ %11, %while.body.i89 ]
  %dst.0.be.i = getelementptr inbounds i8* %dst.019.i, i64 1
  store i8 %storemerge.i, i8* %dst.019.i, align 1, !tbaa !64
  %12 = load i8** %str.addr.i, align 8, !tbaa !22
  %cmp.i = icmp ult i8* %12, %add.ptr.i
  br i1 %cmp.i, label %while.body.i89, label %dequote_string.exit

dequote_string.exit:                              ; preds = %while.cond.backedge.i, %if.then13
  %dst.0.lcssa.i = phi i8* [ %call.i87, %if.then13 ], [ %dst.0.be.i, %while.cond.backedge.i ]
  store i8 0, i8* %dst.0.lcssa.i, align 1, !tbaa !64
  call void @llvm.lifetime.end(i64 8, i8* %9) #4
  %call.i91 = call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type.i = getelementptr inbounds %struct.cpp_token* %call.i91, i64 0, i32 2
  %bf.load.i = load i8* %type.i, align 2
  switch i8 %bf.load.i, label %if.then27.i [
    i8 57, label %land.lhs.true.i
    i8 67, label %if.end40
  ]

land.lhs.true.i:                                  ; preds = %dequote_string.exit
  %len.i = getelementptr inbounds %struct.cpp_token* %call.i91, i64 0, i32 4, i32 0, i32 0
  %13 = load i32* %len.i, align 4, !tbaa !60
  %cmp1.i = icmp eq i32 %13, 1
  br i1 %cmp1.i, label %if.then.i94, label %if.then27.i

if.then.i94:                                      ; preds = %land.lhs.true.i
  %text.i = getelementptr inbounds %struct.cpp_token* %call.i91, i64 0, i32 4, i32 0, i32 1
  %14 = load i8** %text.i, align 8, !tbaa !62
  %15 = load i8* %14, align 1, !tbaa !64
  %conv.i92 = zext i8 %15 to i32
  %sub.i93 = add nsw i32 %conv.i92, -48
  %cmp7.i = icmp ult i32 %sub.i93, 5
  br i1 %cmp7.i, label %switch.early.test, label %if.then27.i

switch.early.test:                                ; preds = %if.then.i94
  switch i32 %conv.i92, label %if.end31 [
    i32 52, label %if.then27.i
    i32 48, label %if.then27.i
    i32 49, label %if.then24
    i32 50, label %if.then28
  ]

if.then27.i:                                      ; preds = %switch.early.test, %switch.early.test, %if.then.i94, %land.lhs.true.i, %dequote_string.exit
  %call28.i = call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call.i91) #4
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([36 x i8]* @.str37, i64 0, i64 0), i8* %call28.i) #4
  br label %if.end40

if.then24:                                        ; preds = %switch.early.test
  call void @_cpp_fake_include(%struct.cpp_reader* %pfile, i8* %call.i87) #4
  %call.i96 = call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type.i97 = getelementptr inbounds %struct.cpp_token* %call.i96, i64 0, i32 2
  %bf.load.i98 = load i8* %type.i97, align 2
  switch i8 %bf.load.i98, label %if.then27.i117 [
    i8 57, label %land.lhs.true.i101
    i8 67, label %if.end40
  ]

land.lhs.true.i101:                               ; preds = %if.then24
  %len.i99 = getelementptr inbounds %struct.cpp_token* %call.i96, i64 0, i32 4, i32 0, i32 0
  %16 = load i32* %len.i99, align 4, !tbaa !60
  %cmp1.i100 = icmp eq i32 %16, 1
  br i1 %cmp1.i100, label %if.then.i108, label %if.then27.i117

if.then.i108:                                     ; preds = %land.lhs.true.i101
  %text.i102 = getelementptr inbounds %struct.cpp_token* %call.i96, i64 0, i32 4, i32 0, i32 1
  %17 = load i8** %text.i102, align 8, !tbaa !62
  %18 = load i8* %17, align 1, !tbaa !64
  %conv.i103 = zext i8 %18 to i32
  %sub.i104 = add nsw i32 %conv.i103, -48
  %cmp4.i105 = icmp ugt i32 %sub.i104, %sub.i93
  %cmp7.i106 = icmp ult i32 %sub.i104, 5
  %or.cond.i107 = and i1 %cmp4.i105, %cmp7.i106
  br i1 %or.cond.i107, label %land.lhs.true9.i110, label %if.then27.i117

land.lhs.true9.i110:                              ; preds = %if.then.i108
  %cmp10.i109 = icmp ne i32 %sub.i104, 4
  %cmp12.i = icmp eq i32 %sub.i93, 3
  %or.cond30.i = or i1 %cmp10.i109, %cmp12.i
  br i1 %or.cond30.i, label %land.lhs.true14.i113, label %if.then27.i117

land.lhs.true14.i113:                             ; preds = %land.lhs.true9.i110
  %cmp15.i111 = icmp ne i32 %sub.i104, 2
  %cmp18.i112 = icmp eq i32 %sub.i93, 0
  %or.cond31.i = or i1 %cmp15.i111, %cmp18.i112
  br i1 %or.cond31.i, label %if.end31, label %if.then27.i117

if.then27.i117:                                   ; preds = %if.then.i108, %land.lhs.true9.i110, %land.lhs.true14.i113, %land.lhs.true.i101, %if.then24
  %call28.i116 = call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call.i96) #4
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([36 x i8]* @.str37, i64 0, i64 0), i8* %call28.i116) #4
  br label %if.end40

if.then28:                                        ; preds = %switch.early.test
  %call.i120 = call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type.i121 = getelementptr inbounds %struct.cpp_token* %call.i120, i64 0, i32 2
  %bf.load.i122 = load i8* %type.i121, align 2
  switch i8 %bf.load.i122, label %if.then27.i144 [
    i8 57, label %land.lhs.true.i125
    i8 67, label %if.end40
  ]

land.lhs.true.i125:                               ; preds = %if.then28
  %len.i123 = getelementptr inbounds %struct.cpp_token* %call.i120, i64 0, i32 4, i32 0, i32 0
  %19 = load i32* %len.i123, align 4, !tbaa !60
  %cmp1.i124 = icmp eq i32 %19, 1
  br i1 %cmp1.i124, label %if.then.i132, label %if.then27.i144

if.then.i132:                                     ; preds = %land.lhs.true.i125
  %text.i126 = getelementptr inbounds %struct.cpp_token* %call.i120, i64 0, i32 4, i32 0, i32 1
  %20 = load i8** %text.i126, align 8, !tbaa !62
  %21 = load i8* %20, align 1, !tbaa !64
  %conv.i127 = zext i8 %21 to i32
  %sub.i128 = add nsw i32 %conv.i127, -48
  %cmp4.i129 = icmp ugt i32 %sub.i128, %sub.i93
  %cmp7.i130 = icmp ult i32 %sub.i128, 5
  %or.cond.i131 = and i1 %cmp4.i129, %cmp7.i130
  br i1 %or.cond.i131, label %land.lhs.true9.i136, label %if.then27.i144

land.lhs.true9.i136:                              ; preds = %if.then.i132
  %cmp10.i133 = icmp ne i32 %sub.i128, 4
  %cmp12.i134 = icmp eq i32 %sub.i93, 3
  %or.cond30.i135 = or i1 %cmp10.i133, %cmp12.i134
  br i1 %or.cond30.i135, label %land.lhs.true14.i140, label %if.then27.i144

land.lhs.true14.i140:                             ; preds = %land.lhs.true9.i136
  %cmp15.i137 = icmp ne i32 %sub.i128, 2
  %cmp18.i138 = icmp eq i32 %sub.i93, 0
  %or.cond31.i139 = or i1 %cmp15.i137, %cmp18.i138
  br i1 %or.cond31.i139, label %if.end31, label %if.then27.i144

if.then27.i144:                                   ; preds = %if.then.i132, %land.lhs.true9.i136, %land.lhs.true14.i140, %land.lhs.true.i125, %if.then28
  %call28.i143 = call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call.i120) #4
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([36 x i8]* @.str37, i64 0, i64 0), i8* %call28.i143) #4
  br label %if.end40

if.end31:                                         ; preds = %switch.early.test, %land.lhs.true14.i140, %land.lhs.true14.i113
  %reason.0 = phi i32 [ 0, %land.lhs.true14.i113 ], [ 1, %land.lhs.true14.i140 ], [ 2, %switch.early.test ]
  %flag.0 = phi i32 [ %sub.i104, %land.lhs.true14.i113 ], [ %sub.i128, %land.lhs.true14.i140 ], [ %sub.i93, %switch.early.test ]
  %cmp32 = icmp eq i32 %flag.0, 3
  br i1 %cmp32, label %if.then34, label %if.end40

if.then34:                                        ; preds = %if.end31
  %call.i147 = call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type.i148 = getelementptr inbounds %struct.cpp_token* %call.i147, i64 0, i32 2
  %bf.load.i149 = load i8* %type.i148, align 2
  switch i8 %bf.load.i149, label %if.then27.i171 [
    i8 57, label %land.lhs.true.i152
    i8 67, label %if.end40
  ]

land.lhs.true.i152:                               ; preds = %if.then34
  %len.i150 = getelementptr inbounds %struct.cpp_token* %call.i147, i64 0, i32 4, i32 0, i32 0
  %22 = load i32* %len.i150, align 4, !tbaa !60
  %cmp1.i151 = icmp eq i32 %22, 1
  br i1 %cmp1.i151, label %if.then.i159, label %if.then27.i171

if.then.i159:                                     ; preds = %land.lhs.true.i152
  %text.i153 = getelementptr inbounds %struct.cpp_token* %call.i147, i64 0, i32 4, i32 0, i32 1
  %23 = load i8** %text.i153, align 8, !tbaa !62
  %24 = load i8* %23, align 1, !tbaa !64
  %25 = icmp eq i8 %24, 52
  br i1 %25, label %if.end40, label %if.then27.i171

if.then27.i171:                                   ; preds = %if.then.i159, %land.lhs.true.i152, %if.then34
  %call28.i170 = call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call.i147) #4
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([36 x i8]* @.str37, i64 0, i64 0), i8* %call28.i170) #4
  br label %if.end40

if.end40:                                         ; preds = %if.then27.i171, %if.then34, %if.then.i159, %dequote_string.exit, %if.then27.i, %if.then28, %if.then27.i144, %if.then24, %if.then27.i117, %if.end31
  %reason.0198 = phi i32 [ %reason.0, %if.end31 ], [ 0, %if.then27.i117 ], [ 0, %if.then24 ], [ 1, %if.then27.i144 ], [ 1, %if.then28 ], [ 2, %if.then27.i ], [ 2, %dequote_string.exit ], [ %reason.0, %if.then.i159 ], [ %reason.0, %if.then34 ], [ %reason.0, %if.then27.i171 ]
  %new_sysp.0 = phi i32 [ 0, %if.end31 ], [ 0, %if.then27.i117 ], [ 0, %if.then24 ], [ 0, %if.then27.i144 ], [ 0, %if.then28 ], [ 0, %if.then27.i ], [ 0, %dequote_string.exit ], [ 1, %if.then27.i171 ], [ 1, %if.then34 ], [ 2, %if.then.i159 ]
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %26 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i174 = getelementptr inbounds %struct.cpp_token* %26, i64 -1, i32 2
  %bf.load.i175 = load i8* %type.i174, align 2
  %cmp.i176 = icmp eq i8 %bf.load.i175, 67
  br i1 %cmp.i176, label %if.end50, label %land.lhs.true.i179

land.lhs.true.i179:                               ; preds = %if.end40
  %call.i177 = call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i177, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i178 = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i178, label %if.end50, label %if.then.i180

if.then.i180:                                     ; preds = %land.lhs.true.i179
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %27 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %27, i64 0, i32 1
  %28 = load i8** %name.i, align 8, !tbaa !35
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %28) #4
  br label %if.end50

if.then47:                                        ; preds = %if.end
  %call48 = call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call7) #4
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([29 x i8]* @.str36, i64 0, i64 0), i8* %call48) #4
  br label %return

if.end50:                                         ; preds = %if.then.i180, %land.lhs.true.i179, %if.end40, %if.end
  %new_file.0 = phi i8* [ %1, %if.end ], [ %call.i87, %if.end40 ], [ %call.i87, %land.lhs.true.i179 ], [ %call.i87, %if.then.i180 ]
  %new_sysp.1 = phi i32 [ %conv, %if.end ], [ %new_sysp.0, %if.end40 ], [ %new_sysp.0, %land.lhs.true.i179 ], [ %new_sysp.0, %if.then.i180 ]
  %reason.1 = phi i32 [ 2, %if.end ], [ %reason.0198, %if.end40 ], [ %reason.0198, %land.lhs.true.i179 ], [ %reason.0198, %if.then.i180 ]
  %context.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 10
  %29 = load %struct.cpp_context** %context.i, align 8, !tbaa !39
  %base_context.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 9
  %cmp12.i182 = icmp eq %struct.cpp_context* %29, %base_context.i
  br i1 %cmp12.i182, label %while.end.i189, label %while.body.i184

while.body.i184:                                  ; preds = %if.end50, %while.body.i184
  call void @_cpp_pop_context(%struct.cpp_reader* %pfile) #4
  %30 = load %struct.cpp_context** %context.i, align 8, !tbaa !39
  %cmp.i183 = icmp eq %struct.cpp_context* %30, %base_context.i
  br i1 %cmp.i183, label %while.end.i189, label %while.body.i184

while.end.i189:                                   ; preds = %while.body.i184, %if.end50
  %cur_token.i185 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %31 = load %struct.cpp_token** %cur_token.i185, align 8, !tbaa !40
  %type.i186 = getelementptr inbounds %struct.cpp_token* %31, i64 -1, i32 2
  %bf.load.i187 = load i8* %type.i186, align 2
  %cmp1.i188 = icmp eq i8 %bf.load.i187, 67
  br i1 %cmp1.i188, label %skip_rest_of_line.exit, label %while.cond2.i

while.cond2.i:                                    ; preds = %while.end.i189, %while.cond2.i
  %call.i190 = call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type3.i = getelementptr inbounds %struct.cpp_token* %call.i190, i64 0, i32 2
  %bf.load4.i = load i8* %type3.i, align 2
  %cmp6.i = icmp eq i8 %bf.load4.i, 67
  br i1 %cmp6.i, label %skip_rest_of_line.exit, label %while.cond2.i

skip_rest_of_line.exit:                           ; preds = %while.cond2.i, %while.end.i189
  %line_maps.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 2
  %line.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 4
  %32 = load i32* %line.i, align 4, !tbaa !20
  %call.i = call %struct.line_map* @add_line_map(%struct.line_maps* %line_maps.i, i32 %reason.1, i32 %new_sysp.1, i32 %32, i8* %new_file.0, i32 %new_lineno.0.load192.ph) #4
  store %struct.line_map* %call.i, %struct.line_map** %map, align 8, !tbaa !45
  %file_change.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 1
  %33 = load void (%struct.cpp_reader*, %struct.line_map*)** %file_change.i, align 8, !tbaa !46
  %tobool.i84 = icmp eq void (%struct.cpp_reader*, %struct.line_map*)* %33, null
  br i1 %tobool.i84, label %return, label %if.then.i

if.then.i:                                        ; preds = %skip_rest_of_line.exit
  call void %33(%struct.cpp_reader* %pfile, %struct.line_map* %call.i) #4
  br label %return

return:                                           ; preds = %if.then.i, %skip_rest_of_line.exit, %if.then47, %if.then
  ret void
}

declare void @_cpp_fake_include(%struct.cpp_reader*, i8*) #1

declare i32 @cpp_parse_escape(%struct.cpp_reader*, i8**, i8*, i64, i32) #1

; Function Attrs: nounwind uwtable
define internal void @do_define(%struct.cpp_reader* %pfile) #0 {
entry:
  %call = tail call fastcc %struct.cpp_hashnode* @lex_macro_node(%struct.cpp_reader* %pfile)
  %tobool = icmp eq %struct.cpp_hashnode* %call, null
  br i1 %tobool, label %if.end9, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @_cpp_create_definition(%struct.cpp_reader* %pfile, %struct.cpp_hashnode* %call) #4
  %tobool2 = icmp eq i32 %call1, 0
  br i1 %tobool2, label %if.end9, label %if.then3

if.then3:                                         ; preds = %if.then
  %define = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 3
  %0 = load void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)** %define, align 8, !tbaa !97
  %tobool4 = icmp eq void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)* %0, null
  br i1 %tobool4, label %if.end9, label %if.then5

if.then5:                                         ; preds = %if.then3
  %directive_line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 5
  %1 = load i32* %directive_line, align 4, !tbaa !21
  tail call void %0(%struct.cpp_reader* %pfile, i32 %1, %struct.cpp_hashnode* %call) #4
  br label %if.end9

if.end9:                                          ; preds = %if.then3, %if.then, %entry, %if.then5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_include(%struct.cpp_reader* %pfile) #0 {
entry:
  tail call fastcc void @do_include_common(%struct.cpp_reader* %pfile, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_endif(%struct.cpp_reader* %pfile) #0 {
entry:
  %buffer1 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer1, align 8, !tbaa !54
  %if_stack = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 7
  %1 = load %struct.if_stack** %if_stack, align 8, !tbaa !98
  %cmp = icmp eq %struct.if_stack* %1, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([19 x i8]* @.str74, i64 0, i64 0)) #4
  br label %if.end21

if.else:                                          ; preds = %entry
  %was_skipping = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 4
  %2 = load i8* %was_skipping, align 1, !tbaa !99, !range !100
  %tobool = icmp eq i8 %2, 0
  br i1 %tobool, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.else
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %3 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %3, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i, label %if.end, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then2
  %call.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %if.end, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %4 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %4, i64 0, i32 1
  %5 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %5) #4
  br label %if.end

if.end:                                           ; preds = %if.then.i, %land.lhs.true.i, %if.then2, %if.else
  %next = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 0
  %6 = load %struct.if_stack** %next, align 8, !tbaa !101
  %cmp3 = icmp eq %struct.if_stack* %6, null
  br i1 %cmp3, label %land.lhs.true, label %if.end8

land.lhs.true:                                    ; preds = %if.end
  %mi_cmacro = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 2
  %7 = load %struct.cpp_hashnode** %mi_cmacro, align 8, !tbaa !102
  %tobool4 = icmp eq %struct.cpp_hashnode* %7, null
  br i1 %tobool4, label %if.end8, label %if.then5

if.then5:                                         ; preds = %land.lhs.true
  %mi_valid = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 14
  store i8 1, i8* %mi_valid, align 1, !tbaa !32
  %mi_cmacro7 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 12
  store %struct.cpp_hashnode* %7, %struct.cpp_hashnode** %mi_cmacro7, align 8, !tbaa !103
  br label %if.end8

if.end8:                                          ; preds = %land.lhs.true, %if.then5, %if.end
  store %struct.if_stack* %6, %struct.if_stack** %if_stack, align 8, !tbaa !98
  %8 = load i8* %was_skipping, align 1, !tbaa !99, !range !100
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  store i8 %8, i8* %skipping, align 1, !tbaa !29
  %buffer_ob = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33
  %9 = bitcast %struct.if_stack* %1 to i8*
  %chunk = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 1
  %10 = load %struct._obstack_chunk** %chunk, align 8, !tbaa !81
  %11 = bitcast %struct._obstack_chunk* %10 to %struct.if_stack*
  %cmp13 = icmp ugt %struct.if_stack* %1, %11
  br i1 %cmp13, label %land.lhs.true15, label %if.else19

land.lhs.true15:                                  ; preds = %if.end8
  %chunk_limit = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 4
  %12 = load i8** %chunk_limit, align 8, !tbaa !77
  %cmp16 = icmp ult i8* %9, %12
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %land.lhs.true15
  %object_base = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 2
  store i8* %9, i8** %object_base, align 8, !tbaa !79
  %next_free = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 3
  store i8* %9, i8** %next_free, align 8, !tbaa !78
  br label %if.end21

if.else19:                                        ; preds = %land.lhs.true15, %if.end8
  tail call void @obstack_free(%struct.obstack* %buffer_ob, i8* %9) #4
  br label %if.end21

if.end21:                                         ; preds = %if.then18, %if.else19, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_ifdef(%struct.cpp_reader* %pfile) #0 {
entry:
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  %0 = load i8* %skipping, align 1, !tbaa !29
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.cpp_hashnode* @lex_macro_node(%struct.cpp_reader* %pfile)
  %tobool1 = icmp eq %struct.cpp_hashnode* %call, null
  br i1 %tobool1, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.then
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp = icmp ne i8 %bf.load, 1
  %conv = zext i1 %cmp to i32
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %1 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %1, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i, label %if.end6, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then4
  %call.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %if.end6, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %2 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %2, i64 0, i32 1
  %3 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %3) #4
  br label %if.end6

if.end6:                                          ; preds = %if.then, %if.then.i, %land.lhs.true.i, %if.then4, %entry
  %skip.1 = phi i32 [ 1, %entry ], [ 1, %if.then ], [ %conv, %if.then4 ], [ %conv, %land.lhs.true.i ], [ %conv, %if.then.i ]
  tail call fastcc void @push_conditional(%struct.cpp_reader* %pfile, i32 %skip.1, i32 3, %struct.cpp_hashnode* null)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_if(%struct.cpp_reader* %pfile) #0 {
entry:
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  %0 = load i8* %skipping, align 1, !tbaa !29
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 @_cpp_parse_expr(%struct.cpp_reader* %pfile) #4
  %cmp = icmp eq i32 %call, 0
  %conv = zext i1 %cmp to i32
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %skip.0 = phi i32 [ 1, %entry ], [ %conv, %if.then ]
  %mi_ind_cmacro = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 13
  %1 = load %struct.cpp_hashnode** %mi_ind_cmacro, align 8, !tbaa !104
  tail call fastcc void @push_conditional(%struct.cpp_reader* %pfile, i32 %skip.0, i32 4, %struct.cpp_hashnode* %1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_else(%struct.cpp_reader* %pfile) #0 {
entry:
  %buffer1 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer1, align 8, !tbaa !54
  %if_stack = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 7
  %1 = load %struct.if_stack** %if_stack, align 8, !tbaa !98
  %cmp = icmp eq %struct.if_stack* %1, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([18 x i8]* @.str72, i64 0, i64 0)) #4
  br label %if.end9

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 5
  %2 = load i32* %type, align 4, !tbaa !90
  %cmp2 = icmp eq i32 %2, 5
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([18 x i8]* @.str73, i64 0, i64 0)) #4
  %line = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 1
  %3 = load i32* %line, align 4, !tbaa !88
  tail call void (%struct.cpp_reader*, i32, i32, i8*, ...)* @cpp_error_with_line(%struct.cpp_reader* %pfile, i32 %3, i32 0, i8* getelementptr inbounds ([27 x i8]* @.str64, i64 0, i64 0)) #4
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.else
  store i32 5, i32* %type, align 4, !tbaa !90
  %skip_elses = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 3
  %4 = load i8* %skip_elses, align 1, !tbaa !105, !range !100
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  store i8 %4, i8* %skipping, align 1, !tbaa !29
  store i8 1, i8* %skip_elses, align 1, !tbaa !105
  %mi_cmacro = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 2
  store %struct.cpp_hashnode* null, %struct.cpp_hashnode** %mi_cmacro, align 8, !tbaa !102
  %was_skipping = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 4
  %5 = load i8* %was_skipping, align 1, !tbaa !99, !range !100
  %tobool6 = icmp eq i8 %5, 0
  br i1 %tobool6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %6 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %6, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i, label %if.end9, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then7
  %call.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %if.end9, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %7 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %7, i64 0, i32 1
  %8 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %8) #4
  br label %if.end9

if.end9:                                          ; preds = %if.then.i, %land.lhs.true.i, %if.then7, %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_ifndef(%struct.cpp_reader* %pfile) #0 {
entry:
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  %0 = load i8* %skipping, align 1, !tbaa !29
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %call = tail call fastcc %struct.cpp_hashnode* @lex_macro_node(%struct.cpp_reader* %pfile)
  %tobool1 = icmp eq %struct.cpp_hashnode* %call, null
  br i1 %tobool1, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.then
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp = icmp eq i8 %bf.load, 1
  %conv = zext i1 %cmp to i32
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %1 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %1, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i, label %if.end6, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then4
  %call.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %if.end6, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %2 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %2, i64 0, i32 1
  %3 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %3) #4
  br label %if.end6

if.end6:                                          ; preds = %if.then, %if.then.i, %land.lhs.true.i, %if.then4, %entry
  %skip.1 = phi i32 [ 1, %entry ], [ 1, %if.then ], [ %conv, %if.then4 ], [ %conv, %land.lhs.true.i ], [ %conv, %if.then.i ]
  %node.0 = phi %struct.cpp_hashnode* [ null, %entry ], [ null, %if.then ], [ %call, %if.then4 ], [ %call, %land.lhs.true.i ], [ %call, %if.then.i ]
  tail call fastcc void @push_conditional(%struct.cpp_reader* %pfile, i32 %skip.1, i32 6, %struct.cpp_hashnode* %node.0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_undef(%struct.cpp_reader* %pfile) #0 {
entry:
  %call = tail call fastcc %struct.cpp_hashnode* @lex_macro_node(%struct.cpp_reader* %pfile)
  %tobool = icmp eq %struct.cpp_hashnode* %call, null
  br i1 %tobool, label %if.end8, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4
  %0 = bitcast i8* %type to i16*
  %bf.load = load i16* %0, align 4
  %1 = trunc i16 %bf.load to i8
  %cmp = icmp eq i8 %1, 1
  br i1 %cmp, label %if.then, label %if.end8

if.then:                                          ; preds = %land.lhs.true
  %2 = lshr i16 %bf.load, 8
  %3 = trunc i16 %2 to i8
  %undef = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 4
  %4 = load void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)** %undef, align 8, !tbaa !106
  %tobool1 = icmp eq void (%struct.cpp_reader*, i32, %struct.cpp_hashnode*)* %4, null
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %directive_line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 5
  %5 = load i32* %directive_line, align 4, !tbaa !21
  tail call void %4(%struct.cpp_reader* %pfile, i32 %5, %struct.cpp_hashnode* %call) #4
  %flags.phi.trans.insert = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 5
  %.pre = load i8* %flags.phi.trans.insert, align 1, !tbaa !53
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then2
  %6 = phi i8 [ %.pre, %if.then2 ], [ %3, %if.then ]
  %and = and i8 %6, 16
  %tobool5 = icmp eq i8 %and, 0
  br i1 %tobool5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  %str = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 0, i32 1
  %7 = load i8** %str, align 8, !tbaa !51
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([16 x i8]* @.str67, i64 0, i64 0), i8* %7) #4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then6
  tail call void @_cpp_free_definition(%struct.cpp_hashnode* %call) #4
  br label %if.end8

if.end8:                                          ; preds = %entry, %if.end7, %land.lhs.true
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %8 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %8, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i, label %check_eol.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end8
  %call.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %check_eol.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %9 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %9, i64 0, i32 1
  %10 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %10) #4
  br label %check_eol.exit

check_eol.exit:                                   ; preds = %if.end8, %land.lhs.true.i, %if.then.i
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_line(%struct.cpp_reader* %pfile) #0 {
entry:
  %str.addr.i = alloca i8*, align 8
  %map = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 3
  %0 = load %struct.line_map** %map, align 8, !tbaa !45
  %to_file = getelementptr inbounds %struct.line_map* %0, i64 0, i32 0
  %1 = load i8** %to_file, align 8, !tbaa !94
  %c99 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 41
  %2 = load i8* %c99, align 1, !tbaa !107
  %tobool = icmp ne i8 %2, 0
  %call = call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  %cmp = icmp eq i8 %bf.load, 57
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %len = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0, i32 0
  %3 = load i32* %len, align 4, !tbaa !60
  %tobool11.i = icmp eq i32 %3, 0
  br i1 %tobool11.i, label %if.end, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %lor.lhs.false
  %text = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0, i32 1
  %4 = load i8** %text, align 8, !tbaa !62
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.preheader, %if.end.i
  %dec14.in.i = phi i32 [ %dec14.i, %if.end.i ], [ %3, %while.body.i.preheader ]
  %reg.013.i = phi i64 [ %add.i, %if.end.i ], [ 0, %while.body.i.preheader ]
  %str.addr.012.i = phi i8* [ %incdec.ptr.i, %if.end.i ], [ %4, %while.body.i.preheader ]
  %dec14.i = add i32 %dec14.in.i, -1
  %5 = load i8* %str.addr.012.i, align 1, !tbaa !64
  %idxprom.i = zext i8 %5 to i64
  %arrayidx.i = getelementptr inbounds [256 x i16]* @_sch_istable, i64 0, i64 %idxprom.i
  %6 = load i16* %arrayidx.i, align 2, !tbaa !73
  %and2.i = and i16 %6, 4
  %tobool3.i = icmp eq i16 %and2.i, 0
  br i1 %tobool3.i, label %if.then, label %if.end.i

if.end.i:                                         ; preds = %while.body.i
  %incdec.ptr.i = getelementptr inbounds i8* %str.addr.012.i, i64 1
  %mul.i = mul i64 %reg.013.i, 10
  %sub.i = add i64 %mul.i, -48
  %add.i = add i64 %sub.i, %idxprom.i
  %tobool.i = icmp eq i32 %dec14.i, 0
  br i1 %tobool.i, label %if.end, label %while.body.i

if.then:                                          ; preds = %while.body.i, %entry
  %call6 = call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call) #4
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([43 x i8]* @.str65, i64 0, i64 0), i8* %call6) #4
  br label %return

if.end:                                           ; preds = %if.end.i, %lor.lhs.false
  %new_lineno.0.load86.ph = phi i64 [ 0, %lor.lhs.false ], [ %add.i, %if.end.i ]
  %pedantic = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 42
  %7 = load i8* %pedantic, align 1, !tbaa !27
  %tobool9 = icmp eq i8 %7, 0
  br i1 %tobool9, label %if.end17, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %conv13 = select i1 %tobool, i64 2147483647, i64 32767
  %8 = add i64 %new_lineno.0.load86.ph, -1
  %9 = icmp ult i64 %8, %conv13
  br i1 %9, label %if.end17, label %if.then16

if.then16:                                        ; preds = %land.lhs.true
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([25 x i8]* @.str66, i64 0, i64 0)) #4
  br label %if.end17

if.end17:                                         ; preds = %land.lhs.true, %if.end, %if.then16
  %call18 = call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type19 = getelementptr inbounds %struct.cpp_token* %call18, i64 0, i32 2
  %bf.load20 = load i8* %type19, align 2
  switch i8 %bf.load20, label %if.then37 [
    i8 61, label %if.then24
    i8 67, label %if.end40
  ]

if.then24:                                        ; preds = %if.end17
  %text27 = getelementptr inbounds %struct.cpp_token* %call18, i64 0, i32 4, i32 0, i32 1
  %10 = load i8** %text27, align 8, !tbaa !62
  %len30 = getelementptr inbounds %struct.cpp_token* %call18, i64 0, i32 4, i32 0, i32 0
  %11 = load i32* %len30, align 4, !tbaa !60
  %12 = bitcast i8** %str.addr.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #4
  store i8* %10, i8** %str.addr.i, align 8, !tbaa !22
  %add.i68 = add i32 %11, 1
  %conv.i = zext i32 %add.i68 to i64
  %call.i69 = call i8* @_cpp_unaligned_alloc(%struct.cpp_reader* %pfile, i64 %conv.i) #4
  %idx.ext.i = zext i32 %11 to i64
  %add.ptr.i = getelementptr inbounds i8* %10, i64 %idx.ext.i
  %cmp18.i = icmp eq i32 %11, 0
  br i1 %cmp18.i, label %dequote_string.exit, label %while.body.i71

while.body.i71:                                   ; preds = %if.then24, %while.cond.backedge.i
  %13 = phi i8* [ %15, %while.cond.backedge.i ], [ %10, %if.then24 ]
  %dst.019.i = phi i8* [ %dst.0.be.i, %while.cond.backedge.i ], [ %call.i69, %if.then24 ]
  %incdec.ptr.i70 = getelementptr inbounds i8* %13, i64 1
  store i8* %incdec.ptr.i70, i8** %str.addr.i, align 8, !tbaa !22
  %14 = load i8* %13, align 1, !tbaa !64
  %cmp3.i = icmp eq i8 %14, 92
  br i1 %cmp3.i, label %if.else.i, label %while.cond.backedge.i

if.else.i:                                        ; preds = %while.body.i71
  %call7.i = call i32 @cpp_parse_escape(%struct.cpp_reader* %pfile, i8** %str.addr.i, i8* %add.ptr.i, i64 255, i32 0) #4
  %conv8.i = trunc i32 %call7.i to i8
  br label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %if.else.i, %while.body.i71
  %storemerge.i = phi i8 [ %conv8.i, %if.else.i ], [ %14, %while.body.i71 ]
  %dst.0.be.i = getelementptr inbounds i8* %dst.019.i, i64 1
  store i8 %storemerge.i, i8* %dst.019.i, align 1, !tbaa !64
  %15 = load i8** %str.addr.i, align 8, !tbaa !22
  %cmp.i = icmp ult i8* %15, %add.ptr.i
  br i1 %cmp.i, label %while.body.i71, label %dequote_string.exit

dequote_string.exit:                              ; preds = %while.cond.backedge.i, %if.then24
  %dst.0.lcssa.i = phi i8* [ %call.i69, %if.then24 ], [ %dst.0.be.i, %while.cond.backedge.i ]
  store i8 0, i8* %dst.0.lcssa.i, align 1, !tbaa !64
  call void @llvm.lifetime.end(i64 8, i8* %12) #4
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %16 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %16, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i73 = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i73, label %if.end40, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %dequote_string.exit
  %call.i74 = call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i74, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %if.end40, label %if.then.i75

if.then.i75:                                      ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %17 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %17, i64 0, i32 1
  %18 = load i8** %name.i, align 8, !tbaa !35
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %18) #4
  br label %if.end40

if.then37:                                        ; preds = %if.end17
  %call38 = call i8* @cpp_token_as_text(%struct.cpp_reader* %pfile, %struct.cpp_token* %call18) #4
  call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([29 x i8]* @.str36, i64 0, i64 0), i8* %call38) #4
  br label %return

if.end40:                                         ; preds = %if.then.i75, %land.lhs.true.i, %dequote_string.exit, %if.end17
  %new_file.0 = phi i8* [ %1, %if.end17 ], [ %call.i69, %dequote_string.exit ], [ %call.i69, %land.lhs.true.i ], [ %call.i69, %if.then.i75 ]
  %context.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 10
  %19 = load %struct.cpp_context** %context.i, align 8, !tbaa !39
  %base_context.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 9
  %cmp12.i = icmp eq %struct.cpp_context* %19, %base_context.i
  br i1 %cmp12.i, label %while.end.i82, label %while.body.i78

while.body.i78:                                   ; preds = %if.end40, %while.body.i78
  call void @_cpp_pop_context(%struct.cpp_reader* %pfile) #4
  %20 = load %struct.cpp_context** %context.i, align 8, !tbaa !39
  %cmp.i77 = icmp eq %struct.cpp_context* %20, %base_context.i
  br i1 %cmp.i77, label %while.end.i82, label %while.body.i78

while.end.i82:                                    ; preds = %while.body.i78, %if.end40
  %cur_token.i79 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %21 = load %struct.cpp_token** %cur_token.i79, align 8, !tbaa !40
  %type.i80 = getelementptr inbounds %struct.cpp_token* %21, i64 -1, i32 2
  %bf.load.i81 = load i8* %type.i80, align 2
  %cmp1.i = icmp eq i8 %bf.load.i81, 67
  br i1 %cmp1.i, label %skip_rest_of_line.exit, label %while.cond2.i

while.cond2.i:                                    ; preds = %while.end.i82, %while.cond2.i
  %call.i83 = call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type3.i = getelementptr inbounds %struct.cpp_token* %call.i83, i64 0, i32 2
  %bf.load4.i = load i8* %type3.i, align 2
  %cmp6.i = icmp eq i8 %bf.load4.i, 67
  br i1 %cmp6.i, label %skip_rest_of_line.exit, label %while.cond2.i

skip_rest_of_line.exit:                           ; preds = %while.cond2.i, %while.end.i82
  %conv41 = trunc i64 %new_lineno.0.load86.ph to i32
  %22 = load %struct.line_map** %map, align 8, !tbaa !45
  %sysp = getelementptr inbounds %struct.line_map* %22, i64 0, i32 5
  %23 = load i8* %sysp, align 1, !tbaa !96
  %conv43 = zext i8 %23 to i32
  %line_maps.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 2
  %line.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 4
  %24 = load i32* %line.i, align 4, !tbaa !20
  %call.i = call %struct.line_map* @add_line_map(%struct.line_maps* %line_maps.i, i32 2, i32 %conv43, i32 %24, i8* %new_file.0, i32 %conv41) #4
  store %struct.line_map* %call.i, %struct.line_map** %map, align 8, !tbaa !45
  %file_change.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 1
  %25 = load void (%struct.cpp_reader*, %struct.line_map*)** %file_change.i, align 8, !tbaa !46
  %tobool.i66 = icmp eq void (%struct.cpp_reader*, %struct.line_map*)* %25, null
  br i1 %tobool.i66, label %return, label %if.then.i

if.then.i:                                        ; preds = %skip_rest_of_line.exit
  call void %25(%struct.cpp_reader* %pfile, %struct.line_map* %call.i) #4
  br label %return

return:                                           ; preds = %if.then.i, %skip_rest_of_line.exit, %if.then37, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_elif(%struct.cpp_reader* %pfile) #0 {
entry:
  %buffer1 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer1, align 8, !tbaa !54
  %if_stack = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 7
  %1 = load %struct.if_stack** %if_stack, align 8, !tbaa !98
  %cmp = icmp eq %struct.if_stack* %1, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([18 x i8]* @.str62, i64 0, i64 0)) #4
  br label %if.end19

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 5
  %2 = load i32* %type, align 4, !tbaa !90
  %cmp2 = icmp eq i32 %2, 5
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([18 x i8]* @.str63, i64 0, i64 0)) #4
  %line = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 1
  %3 = load i32* %line, align 4, !tbaa !88
  tail call void (%struct.cpp_reader*, i32, i32, i8*, ...)* @cpp_error_with_line(%struct.cpp_reader* %pfile, i32 %3, i32 0, i8* getelementptr inbounds ([27 x i8]* @.str64, i64 0, i64 0)) #4
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.else
  store i32 9, i32* %type, align 4, !tbaa !90
  %skip_elses = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 3
  %4 = load i8* %skip_elses, align 1, !tbaa !105, !range !100
  %tobool = icmp eq i8 %4, 0
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  br i1 %tobool, label %if.else6, label %if.then5

if.then5:                                         ; preds = %if.end
  store i8 1, i8* %skipping, align 1, !tbaa !29
  br label %if.end18

if.else6:                                         ; preds = %if.end
  store i8 0, i8* %skipping, align 1, !tbaa !29
  %call = tail call i32 @_cpp_parse_expr(%struct.cpp_reader* %pfile) #4
  %lnot = icmp eq i32 %call, 0
  %conv = zext i1 %lnot to i8
  store i8 %conv, i8* %skipping, align 1, !tbaa !29
  %frombool = xor i8 %conv, 1
  store i8 %frombool, i8* %skip_elses, align 1, !tbaa !105
  br label %if.end18

if.end18:                                         ; preds = %if.else6, %if.then5
  %mi_cmacro = getelementptr inbounds %struct.if_stack* %1, i64 0, i32 2
  store %struct.cpp_hashnode* null, %struct.cpp_hashnode** %mi_cmacro, align 8, !tbaa !102
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_error(%struct.cpp_reader* %pfile) #0 {
entry:
  %call.i = tail call i32 @_cpp_begin_message(%struct.cpp_reader* %pfile, i32 3, i32 0, i32 0) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %do_diagnostic.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %.pre.i = load %struct._IO_FILE** @stderr, align 8, !tbaa !22
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %0 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %0, i64 0, i32 1
  %1 = load i8** %name.i, align 8, !tbaa !35
  %call3.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %.pre.i, i8* getelementptr inbounds ([5 x i8]* @.str19, i64 0, i64 0), i8* %1) #9
  %prevent_expansion.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 7
  %2 = load i8* %prevent_expansion.i, align 1, !tbaa !59
  %inc.i = add i8 %2, 1
  store i8 %inc.i, i8* %prevent_expansion.i, align 1, !tbaa !59
  tail call void @cpp_output_line(%struct.cpp_reader* %pfile, %struct._IO_FILE* %.pre.i) #4
  %3 = load i8* %prevent_expansion.i, align 1, !tbaa !59
  %dec.i = add i8 %3, -1
  store i8 %dec.i, i8* %prevent_expansion.i, align 1, !tbaa !59
  br label %do_diagnostic.exit

do_diagnostic.exit:                               ; preds = %entry, %if.then.i
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_pragma(%struct.cpp_reader* %pfile) #0 {
entry:
  %prevent_expansion = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 7
  %0 = load i8* %prevent_expansion, align 1, !tbaa !59
  %inc = add i8 %0, 1
  store i8 %inc, i8* %prevent_expansion, align 1, !tbaa !59
  %call = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  %cmp = icmp eq i8 %bf.load, 56
  br i1 %cmp, label %if.then, label %if.end14

if.then:                                          ; preds = %entry
  %pragmas = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 34
  %1 = load %struct.pragma_entry** %pragmas, align 8, !tbaa !108
  %val = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4
  %node = bitcast %union.anon.0* %val to %struct.cpp_hashnode**
  %2 = load %struct.cpp_hashnode** %node, align 8, !tbaa !22
  %tobool4.i = icmp eq %struct.pragma_entry* %1, null
  br i1 %tobool4.i, label %if.end14, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then, %while.body.i
  %chain.addr.05.i = phi %struct.pragma_entry* [ %4, %while.body.i ], [ %1, %if.then ]
  %pragma1.i = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i, i64 0, i32 1
  %3 = load %struct.cpp_hashnode** %pragma1.i, align 8, !tbaa !47
  %cmp.i = icmp eq %struct.cpp_hashnode* %3, %2
  br i1 %cmp.i, label %land.lhs.true, label %while.body.i

while.body.i:                                     ; preds = %land.rhs.i
  %next.i = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i, i64 0, i32 0
  %4 = load %struct.pragma_entry** %next.i, align 8, !tbaa !49
  %tobool.i = icmp eq %struct.pragma_entry* %4, null
  br i1 %tobool.i, label %if.end14, label %land.rhs.i

land.lhs.true:                                    ; preds = %land.rhs.i
  %is_nspace = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i, i64 0, i32 2
  %5 = load i32* %is_nspace, align 4, !tbaa !50
  %tobool2 = icmp eq i32 %5, 0
  br i1 %tobool2, label %if.end14, label %if.then3

if.then3:                                         ; preds = %land.lhs.true
  %call4 = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type5 = getelementptr inbounds %struct.cpp_token* %call4, i64 0, i32 2
  %bf.load6 = load i8* %type5, align 2
  %cmp8 = icmp eq i8 %bf.load6, 56
  br i1 %cmp8, label %if.then9, label %if.end14

if.then9:                                         ; preds = %if.then3
  %u = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i, i64 0, i32 3
  %space = bitcast %union.anon.1* %u to %struct.pragma_entry**
  %6 = load %struct.pragma_entry** %space, align 8, !tbaa !22
  %val10 = getelementptr inbounds %struct.cpp_token* %call4, i64 0, i32 4
  %node11 = bitcast %union.anon.0* %val10 to %struct.cpp_hashnode**
  %7 = load %struct.cpp_hashnode** %node11, align 8, !tbaa !22
  %tobool4.i54 = icmp eq %struct.pragma_entry* %6, null
  br i1 %tobool4.i54, label %if.end14, label %land.rhs.i58

land.rhs.i58:                                     ; preds = %if.then9, %while.body.i61
  %chain.addr.05.i55 = phi %struct.pragma_entry* [ %9, %while.body.i61 ], [ %6, %if.then9 ]
  %pragma1.i56 = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i55, i64 0, i32 1
  %8 = load %struct.cpp_hashnode** %pragma1.i56, align 8, !tbaa !47
  %cmp.i57 = icmp eq %struct.cpp_hashnode* %8, %7
  br i1 %cmp.i57, label %if.end14, label %while.body.i61

while.body.i61:                                   ; preds = %land.rhs.i58
  %next.i59 = getelementptr inbounds %struct.pragma_entry* %chain.addr.05.i55, i64 0, i32 0
  %9 = load %struct.pragma_entry** %next.i59, align 8, !tbaa !49
  %tobool.i60 = icmp eq %struct.pragma_entry* %9, null
  br i1 %tobool.i60, label %if.end14, label %land.rhs.i58

if.end14:                                         ; preds = %while.body.i, %while.body.i61, %land.rhs.i58, %if.then, %if.then9, %if.then3, %land.lhs.true, %entry
  %p.0 = phi %struct.pragma_entry* [ %chain.addr.05.i, %land.lhs.true ], [ null, %entry ], [ null, %if.then3 ], [ null, %if.then9 ], [ null, %if.then ], [ null, %while.body.i61 ], [ %chain.addr.05.i55, %land.rhs.i58 ], [ null, %while.body.i ]
  %token.0 = phi %struct.cpp_token* [ %call, %land.lhs.true ], [ %call, %entry ], [ %call4, %if.then3 ], [ %call4, %if.then9 ], [ %call, %if.then ], [ %call4, %land.rhs.i58 ], [ %call4, %while.body.i61 ], [ %call, %while.body.i ]
  %count.0 = phi i32 [ 1, %land.lhs.true ], [ 1, %entry ], [ 2, %if.then3 ], [ 2, %if.then9 ], [ 1, %if.then ], [ 2, %land.rhs.i58 ], [ 2, %while.body.i61 ], [ 1, %while.body.i ]
  %line_change = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 0
  %10 = load void (%struct.cpp_reader*, %struct.cpp_token*, i32)** %line_change, align 8, !tbaa !109
  %tobool15 = icmp eq void (%struct.cpp_reader*, %struct.cpp_token*, i32)* %10, null
  br i1 %tobool15, label %if.end19, label %if.then16

if.then16:                                        ; preds = %if.end14
  tail call void %10(%struct.cpp_reader* %pfile, %struct.cpp_token* %token.0, i32 1) #4
  br label %if.end19

if.end19:                                         ; preds = %if.end14, %if.then16
  %tobool20 = icmp eq %struct.pragma_entry* %p.0, null
  br i1 %tobool20, label %if.else23, label %if.then21

if.then21:                                        ; preds = %if.end19
  %handler = getelementptr inbounds %struct.pragma_entry* %p.0, i64 0, i32 3, i32 0
  %11 = load void (%struct.cpp_reader*)** %handler, align 8, !tbaa !22
  tail call void %11(%struct.cpp_reader* %pfile) #4
  br label %if.end30

if.else23:                                        ; preds = %if.end19
  %def_pragma = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 6
  %12 = load void (%struct.cpp_reader*, i32)** %def_pragma, align 8, !tbaa !110
  %tobool25 = icmp eq void (%struct.cpp_reader*, i32)* %12, null
  br i1 %tobool25, label %if.end30, label %if.then26

if.then26:                                        ; preds = %if.else23
  tail call void @_cpp_backup_tokens(%struct.cpp_reader* %pfile, i32 %count.0) #4
  %13 = load void (%struct.cpp_reader*, i32)** %def_pragma, align 8, !tbaa !110
  %directive_line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 5
  %14 = load i32* %directive_line, align 4, !tbaa !21
  tail call void %13(%struct.cpp_reader* %pfile, i32 %14) #4
  br label %if.end30

if.end30:                                         ; preds = %if.else23, %if.then26, %if.then21
  %15 = load i8* %prevent_expansion, align 1, !tbaa !59
  %dec = add i8 %15, -1
  store i8 %dec, i8* %prevent_expansion, align 1, !tbaa !59
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_warning(%struct.cpp_reader* %pfile) #0 {
entry:
  %call.i = tail call i32 @_cpp_begin_message(%struct.cpp_reader* %pfile, i32 1, i32 0, i32 0) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %do_diagnostic.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %.pre.i = load %struct._IO_FILE** @stderr, align 8, !tbaa !22
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %0 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %0, i64 0, i32 1
  %1 = load i8** %name.i, align 8, !tbaa !35
  %call3.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %.pre.i, i8* getelementptr inbounds ([5 x i8]* @.str19, i64 0, i64 0), i8* %1) #9
  %prevent_expansion.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 7
  %2 = load i8* %prevent_expansion.i, align 1, !tbaa !59
  %inc.i = add i8 %2, 1
  store i8 %inc.i, i8* %prevent_expansion.i, align 1, !tbaa !59
  tail call void @cpp_output_line(%struct.cpp_reader* %pfile, %struct._IO_FILE* %.pre.i) #4
  %3 = load i8* %prevent_expansion.i, align 1, !tbaa !59
  %dec.i = add i8 %3, -1
  store i8 %dec.i, i8* %prevent_expansion.i, align 1, !tbaa !59
  br label %do_diagnostic.exit

do_diagnostic.exit:                               ; preds = %entry, %if.then.i
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_include_next(%struct.cpp_reader* %pfile) #0 {
entry:
  tail call fastcc void @do_include_common(%struct.cpp_reader* %pfile, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_ident(%struct.cpp_reader* %pfile) #0 {
entry:
  %call = tail call %struct.cpp_token* @cpp_get_token(%struct.cpp_reader* %pfile) #4
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %bf.load = load i8* %type, align 2
  %cmp = icmp eq i8 %bf.load, 61
  br i1 %cmp, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([25 x i8]* @.str61, i64 0, i64 0)) #4
  br label %if.end5

if.else:                                          ; preds = %entry
  %ident = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 5
  %0 = load void (%struct.cpp_reader*, i32, %struct.cpp_string*)** %ident, align 8, !tbaa !111
  %tobool = icmp eq void (%struct.cpp_reader*, i32, %struct.cpp_string*)* %0, null
  br i1 %tobool, label %if.end5, label %if.then1

if.then1:                                         ; preds = %if.else
  %directive_line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 5
  %1 = load i32* %directive_line, align 4, !tbaa !21
  %str4 = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4, i32 0
  tail call void %0(%struct.cpp_reader* %pfile, i32 %1, %struct.cpp_string* %str4) #4
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then1, %if.then
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %2 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %2, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i, label %check_eol.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end5
  %call.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %check_eol.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %3 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %3, i64 0, i32 1
  %4 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %4) #4
  br label %check_eol.exit

check_eol.exit:                                   ; preds = %if.end5, %land.lhs.true.i, %if.then.i
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_import(%struct.cpp_reader* %pfile) #0 {
entry:
  tail call fastcc void @do_include_common(%struct.cpp_reader* %pfile, i32 2)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_assert(%struct.cpp_reader* %pfile) #0 {
entry:
  %new_answer = alloca %struct.answer*, align 8
  %call = call fastcc %struct.cpp_hashnode* @parse_assertion(%struct.cpp_reader* %pfile, %struct.answer** %new_answer, i32 16)
  %tobool = icmp eq %struct.cpp_hashnode* %call, null
  br i1 %tobool, label %if.end11, label %if.then

if.then:                                          ; preds = %entry
  %0 = load %struct.answer** %new_answer, align 8, !tbaa !22
  %next = getelementptr inbounds %struct.answer* %0, i64 0, i32 0
  store %struct.answer* null, %struct.answer** %next, align 8, !tbaa !75
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp = icmp eq i8 %bf.load, 2
  br i1 %cmp, label %if.then1, label %if.end6

if.then1:                                         ; preds = %if.then
  %value.i = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 6
  %answers.i = bitcast %union.anon* %value.i to %struct.answer**
  %1 = load %struct.answer** %answers.i, align 8, !tbaa !22
  %tobool32.i = icmp eq %struct.answer* %1, null
  br i1 %tobool32.i, label %if.end, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.then1
  %count1.i = getelementptr inbounds %struct.answer* %0, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc16.i, %for.body.lr.ph.i
  %2 = phi %struct.answer* [ %1, %for.body.lr.ph.i ], [ %6, %for.inc16.i ]
  %result.033.i = phi %struct.answer** [ %answers.i, %for.body.lr.ph.i ], [ %next.i, %for.inc16.i ]
  %count.i = getelementptr inbounds %struct.answer* %2, i64 0, i32 1
  %3 = load i32* %count.i, align 4, !tbaa !65
  %4 = load i32* %count1.i, align 4, !tbaa !65
  %cmp.i = icmp eq i32 %3, %4
  br i1 %cmp.i, label %for.cond2.preheader.i, label %for.inc16.i

for.cond2.preheader.i:                            ; preds = %for.body.i
  %cmp429.i = icmp eq i32 %3, 0
  br i1 %cmp429.i, label %find_answer.exit, label %for.body5.i

for.cond2.i:                                      ; preds = %for.body5.i
  %cmp4.i = icmp ult i32 %inc.i, %.pre40.i
  br i1 %cmp4.i, label %for.body5.i, label %for.end.i

for.body5.i:                                      ; preds = %for.cond2.preheader.i, %for.cond2.i
  %i.030.i = phi i32 [ %inc.i, %for.cond2.i ], [ 0, %for.cond2.preheader.i ]
  %idxprom.i = zext i32 %i.030.i to i64
  %arrayidx.i = getelementptr inbounds %struct.answer* %2, i64 0, i32 2, i64 %idxprom.i
  %arrayidx8.i = getelementptr inbounds %struct.answer* %0, i64 0, i32 2, i64 %idxprom.i
  %call.i = tail call i32 @_cpp_equiv_tokens(%struct.cpp_token* %arrayidx.i, %struct.cpp_token* %arrayidx8.i) #4
  %tobool9.i = icmp eq i32 %call.i, 0
  %inc.i = add i32 %i.030.i, 1
  %.pre40.i = load i32* %count.i, align 4, !tbaa !65
  br i1 %tobool9.i, label %for.end.i, label %for.cond2.i

for.end.i:                                        ; preds = %for.body5.i, %for.cond2.i
  %i.0.lcssa.i = phi i32 [ %inc.i, %for.cond2.i ], [ %i.030.i, %for.body5.i ]
  %cmp12.i = icmp eq i32 %i.0.lcssa.i, %.pre40.i
  %.pre.pre = load %struct.answer** %result.033.i, align 8, !tbaa !22
  br i1 %cmp12.i, label %find_answer.exit, label %for.inc16.i

for.inc16.i:                                      ; preds = %for.end.i, %for.body.i
  %5 = phi %struct.answer* [ %2, %for.body.i ], [ %.pre.pre, %for.end.i ]
  %next.i = getelementptr inbounds %struct.answer* %5, i64 0, i32 0
  %6 = load %struct.answer** %next.i, align 8, !tbaa !22
  %tobool.i = icmp eq %struct.answer* %6, null
  br i1 %tobool.i, label %if.end, label %for.body.i

find_answer.exit:                                 ; preds = %for.end.i, %for.cond2.preheader.i
  %7 = phi %struct.answer* [ %2, %for.cond2.preheader.i ], [ %.pre.pre, %for.end.i ]
  %tobool3 = icmp eq %struct.answer* %7, null
  br i1 %tobool3, label %if.end, label %if.then4

if.then4:                                         ; preds = %find_answer.exit
  %str = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 0, i32 1
  %8 = load i8** %str, align 8, !tbaa !51
  %add.ptr = getelementptr inbounds i8* %8, i64 1
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([17 x i8]* @.str57, i64 0, i64 0), i8* %add.ptr) #4
  br label %if.end11

if.end:                                           ; preds = %for.inc16.i, %if.then1, %find_answer.exit
  %9 = load %struct.answer** %answers.i, align 8, !tbaa !22
  store %struct.answer* %9, %struct.answer** %next, align 8, !tbaa !75
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  store i8 2, i8* %type, align 4
  %10 = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 6, i32 0
  %.c = bitcast %struct.answer* %0 to %struct.cpp_macro*
  store %struct.cpp_macro* %.c, %struct.cpp_macro** %10, align 8, !tbaa !22
  %count = getelementptr inbounds %struct.answer* %0, i64 0, i32 1
  %11 = load i32* %count, align 4, !tbaa !65
  %sub = add i32 %11, -1
  %conv = zext i32 %sub to i64
  %mul = mul i64 %conv, 24
  %add = add i64 %mul, 40
  %a_buff = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 6
  %12 = load %struct._cpp_buff** %a_buff, align 8, !tbaa !68
  %cur = getelementptr inbounds %struct._cpp_buff* %12, i64 0, i32 2
  %13 = load i8** %cur, align 8, !tbaa !71
  %add.ptr10 = getelementptr inbounds i8* %13, i64 %add
  store i8* %add.ptr10, i8** %cur, align 8, !tbaa !71
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %14 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %14, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i21 = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i21, label %if.end11, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end6
  %call.i22 = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i22, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i23 = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i23, label %if.end11, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %15 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %15, i64 0, i32 1
  %16 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %16) #4
  br label %if.end11

if.end11:                                         ; preds = %if.then.i, %land.lhs.true.i, %if.end6, %entry, %if.then4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_unassert(%struct.cpp_reader* %pfile) #0 {
entry:
  %answer = alloca %struct.answer*, align 8
  %call = call fastcc %struct.cpp_hashnode* @parse_assertion(%struct.cpp_reader* %pfile, %struct.answer** %answer, i32 17)
  %tobool = icmp eq %struct.cpp_hashnode* %call, null
  br i1 %tobool, label %if.end11, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 4
  %bf.load = load i8* %type, align 4
  %cmp = icmp eq i8 %bf.load, 2
  br i1 %cmp, label %if.then, label %if.end11

if.then:                                          ; preds = %land.lhs.true
  %0 = load %struct.answer** %answer, align 8, !tbaa !22
  %tobool1 = icmp eq %struct.answer* %0, null
  br i1 %tobool1, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  %value.i = getelementptr inbounds %struct.cpp_hashnode* %call, i64 0, i32 6
  %answers.i = bitcast %union.anon* %value.i to %struct.answer**
  %1 = load %struct.answer** %answers.i, align 8, !tbaa !22
  %tobool32.i = icmp eq %struct.answer* %1, null
  br i1 %tobool32.i, label %if.then7, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.then2
  %count1.i = getelementptr inbounds %struct.answer* %0, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc16.i, %for.body.lr.ph.i
  %2 = phi %struct.answer* [ %1, %for.body.lr.ph.i ], [ %6, %for.inc16.i ]
  %result.033.i = phi %struct.answer** [ %answers.i, %for.body.lr.ph.i ], [ %next.i, %for.inc16.i ]
  %count.i = getelementptr inbounds %struct.answer* %2, i64 0, i32 1
  %3 = load i32* %count.i, align 4, !tbaa !65
  %4 = load i32* %count1.i, align 4, !tbaa !65
  %cmp.i = icmp eq i32 %3, %4
  br i1 %cmp.i, label %for.cond2.preheader.i, label %for.inc16.i

for.cond2.preheader.i:                            ; preds = %for.body.i
  %cmp429.i = icmp eq i32 %3, 0
  br i1 %cmp429.i, label %find_answer.exit, label %for.body5.i

for.cond2.i:                                      ; preds = %for.body5.i
  %cmp4.i = icmp ult i32 %inc.i, %.pre40.i
  br i1 %cmp4.i, label %for.body5.i, label %for.end.i

for.body5.i:                                      ; preds = %for.cond2.preheader.i, %for.cond2.i
  %i.030.i = phi i32 [ %inc.i, %for.cond2.i ], [ 0, %for.cond2.preheader.i ]
  %idxprom.i = zext i32 %i.030.i to i64
  %arrayidx.i = getelementptr inbounds %struct.answer* %2, i64 0, i32 2, i64 %idxprom.i
  %arrayidx8.i = getelementptr inbounds %struct.answer* %0, i64 0, i32 2, i64 %idxprom.i
  %call.i = tail call i32 @_cpp_equiv_tokens(%struct.cpp_token* %arrayidx.i, %struct.cpp_token* %arrayidx8.i) #4
  %tobool9.i = icmp eq i32 %call.i, 0
  %inc.i = add i32 %i.030.i, 1
  %.pre40.i = load i32* %count.i, align 4, !tbaa !65
  br i1 %tobool9.i, label %for.end.i, label %for.cond2.i

for.end.i:                                        ; preds = %for.body5.i, %for.cond2.i
  %i.0.lcssa.i = phi i32 [ %inc.i, %for.cond2.i ], [ %i.030.i, %for.body5.i ]
  %cmp12.i = icmp eq i32 %i.0.lcssa.i, %.pre40.i
  %.pre.pre = load %struct.answer** %result.033.i, align 8, !tbaa !22
  br i1 %cmp12.i, label %find_answer.exit, label %for.inc16.i

for.inc16.i:                                      ; preds = %for.end.i, %for.body.i
  %5 = phi %struct.answer* [ %2, %for.body.i ], [ %.pre.pre, %for.end.i ]
  %next.i = getelementptr inbounds %struct.answer* %5, i64 0, i32 0
  %6 = load %struct.answer** %next.i, align 8, !tbaa !22
  %tobool.i = icmp eq %struct.answer* %6, null
  br i1 %tobool.i, label %if.end, label %for.body.i

find_answer.exit:                                 ; preds = %for.end.i, %for.cond2.preheader.i
  %7 = phi %struct.answer* [ %2, %for.cond2.preheader.i ], [ %.pre.pre, %for.end.i ]
  %tobool4 = icmp eq %struct.answer* %7, null
  br i1 %tobool4, label %if.end, label %if.then5

if.then5:                                         ; preds = %find_answer.exit
  %next = getelementptr inbounds %struct.answer* %7, i64 0, i32 0
  %8 = load %struct.answer** %next, align 8, !tbaa !75
  store %struct.answer* %8, %struct.answer** %result.033.i, align 8, !tbaa !22
  br label %if.end

if.end:                                           ; preds = %for.inc16.i, %find_answer.exit, %if.then5
  %.pr = load %struct.answer** %answers.i, align 8, !tbaa !22
  %cmp6 = icmp eq %struct.answer* %.pr, null
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.then2, %if.end
  store i8 0, i8* %type, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %9 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %9, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i19 = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i19, label %if.end11, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end9
  %call.i20 = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i20, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i21 = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i21, label %if.end11, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %10 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %10, i64 0, i32 1
  %11 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %11) #4
  br label %if.end11

if.else:                                          ; preds = %if.then
  tail call void @_cpp_free_definition(%struct.cpp_hashnode* %call) #4
  br label %if.end11

if.end11:                                         ; preds = %if.then.i, %land.lhs.true.i, %if.end9, %entry, %if.else, %land.lhs.true
  ret void
}

; Function Attrs: nounwind readnone uwtable
define internal void @do_sccs(%struct.cpp_reader* nocapture %pfile) #6 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @do_include_common(%struct.cpp_reader* %pfile, i32 %type) #0 {
entry:
  switch i32 %type, label %if.end7 [
    i32 1, label %land.lhs.true
    i32 2, label %land.lhs.true2
  ]

land.lhs.true:                                    ; preds = %entry
  %buffer = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer, align 8, !tbaa !54
  %prev = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 4
  %1 = load %struct.cpp_buffer** %prev, align 8, !tbaa !55
  %tobool = icmp eq %struct.cpp_buffer* %1, null
  br i1 %tobool, label %if.then, label %if.end7

if.then:                                          ; preds = %land.lhs.true
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str58, i64 0, i64 0)) #4
  br label %if.end7

land.lhs.true2:                                   ; preds = %entry
  %warn_import = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 37, i32 32
  %2 = load i8* %warn_import, align 1, !tbaa !112
  %tobool3 = icmp eq i8 %2, 0
  br i1 %tobool3, label %if.end7, label %if.then4

if.then4:                                         ; preds = %land.lhs.true2
  store i8 0, i8* %warn_import, align 1, !tbaa !112
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_warning(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([63 x i8]* @.str59, i64 0, i64 0)) #4
  br label %if.end7

if.end7:                                          ; preds = %land.lhs.true, %entry, %land.lhs.true2, %if.then4, %if.then
  %type.addr.0 = phi i32 [ 2, %if.then4 ], [ 2, %land.lhs.true2 ], [ 0, %if.then ], [ %type, %entry ], [ 1, %land.lhs.true ]
  %call = tail call fastcc %struct.cpp_token* @parse_include(%struct.cpp_reader* %pfile)
  %tobool8 = icmp eq %struct.cpp_token* %call, null
  br i1 %tobool8, label %if.end21, label %if.then9

if.then9:                                         ; preds = %if.end7
  %depth = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 2, i32 4
  %3 = load i32* %depth, align 4, !tbaa !113
  %cmp10 = icmp ugt i32 %3, 199
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.then9
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_fatal(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([27 x i8]* @.str60, i64 0, i64 0)) #4
  br label %if.end21

if.else13:                                        ; preds = %if.then9
  %cur_token.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 15
  %4 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i = getelementptr inbounds %struct.cpp_token* %4, i64 -1, i32 2
  %bf.load.i = load i8* %type.i, align 2
  %cmp.i = icmp eq i8 %bf.load.i, 67
  br i1 %cmp.i, label %check_eol.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else13
  %call.i = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type1.i = getelementptr inbounds %struct.cpp_token* %call.i, i64 0, i32 2
  %bf.load2.i = load i8* %type1.i, align 2
  %cmp4.i = icmp eq i8 %bf.load2.i, 67
  br i1 %cmp4.i, label %check_eol.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %directive.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %5 = load %struct.directive** %directive.i, align 8, !tbaa !37
  %name.i = getelementptr inbounds %struct.directive* %5, i64 0, i32 1
  %6 = load i8** %name.i, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_pedwarn(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str25, i64 0, i64 0), i8* %6) #4
  br label %check_eol.exit

check_eol.exit:                                   ; preds = %if.else13, %land.lhs.true.i, %if.then.i
  %context.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 10
  %7 = load %struct.cpp_context** %context.i, align 8, !tbaa !39
  %base_context.i = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 9
  %cmp12.i = icmp eq %struct.cpp_context* %7, %base_context.i
  br i1 %cmp12.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %check_eol.exit, %while.body.i
  tail call void @_cpp_pop_context(%struct.cpp_reader* %pfile) #4
  %8 = load %struct.cpp_context** %context.i, align 8, !tbaa !39
  %cmp.i40 = icmp eq %struct.cpp_context* %8, %base_context.i
  br i1 %cmp.i40, label %while.end.i, label %while.body.i

while.end.i:                                      ; preds = %while.body.i, %check_eol.exit
  %9 = load %struct.cpp_token** %cur_token.i, align 8, !tbaa !40
  %type.i42 = getelementptr inbounds %struct.cpp_token* %9, i64 -1, i32 2
  %bf.load.i43 = load i8* %type.i42, align 2
  %cmp1.i = icmp eq i8 %bf.load.i43, 67
  br i1 %cmp1.i, label %skip_rest_of_line.exit, label %while.cond2.i

while.cond2.i:                                    ; preds = %while.end.i, %while.cond2.i
  %call.i44 = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type3.i = getelementptr inbounds %struct.cpp_token* %call.i44, i64 0, i32 2
  %bf.load4.i = load i8* %type3.i, align 2
  %cmp6.i = icmp eq i8 %bf.load4.i, 67
  br i1 %cmp6.i, label %skip_rest_of_line.exit, label %while.cond2.i

skip_rest_of_line.exit:                           ; preds = %while.cond2.i, %while.end.i
  %include = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 35, i32 2
  %10 = load void (%struct.cpp_reader*, i32, i8*, %struct.cpp_token*)** %include, align 8, !tbaa !114
  %tobool14 = icmp eq void (%struct.cpp_reader*, i32, i8*, %struct.cpp_token*)* %10, null
  br i1 %tobool14, label %if.end18, label %if.then15

if.then15:                                        ; preds = %skip_rest_of_line.exit
  %directive_line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 5
  %11 = load i32* %directive_line, align 4, !tbaa !21
  %directive = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %12 = load %struct.directive** %directive, align 8, !tbaa !37
  %name = getelementptr inbounds %struct.directive* %12, i64 0, i32 1
  %13 = load i8** %name, align 8, !tbaa !35
  tail call void %10(%struct.cpp_reader* %pfile, i32 %11, i8* %13, %struct.cpp_token* %call) #4
  br label %if.end18

if.end18:                                         ; preds = %skip_rest_of_line.exit, %if.then15
  %call19 = tail call zeroext i1 @_cpp_execute_include(%struct.cpp_reader* %pfile, %struct.cpp_token* %call, i32 %type.addr.0) #4
  br label %if.end21

if.end21:                                         ; preds = %if.end7, %if.then12, %if.end18
  ret void
}

declare void @cpp_fatal(%struct.cpp_reader*, i8*, ...) #1

declare zeroext i1 @_cpp_execute_include(%struct.cpp_reader*, %struct.cpp_token*, i32) #1

declare i32 @_cpp_parse_expr(%struct.cpp_reader*) #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.cpp_hashnode* @lex_macro_node(%struct.cpp_reader* %pfile) #0 {
entry:
  %call = tail call %struct.cpp_token* @_cpp_lex_token(%struct.cpp_reader* %pfile) #4
  %type = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 2
  %0 = bitcast i8* %type to i16*
  %bf.load = load i16* %0, align 2
  %1 = trunc i16 %bf.load to i8
  switch i8 %1, label %if.else [
    i8 56, label %if.end10
    i8 67, label %if.then5
  ]

if.then5:                                         ; preds = %entry
  %directive = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 11
  %2 = load %struct.directive** %directive, align 8, !tbaa !37
  %name = getelementptr inbounds %struct.directive* %2, i64 0, i32 1
  %3 = load i8** %name, align 8, !tbaa !35
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([37 x i8]* @.str68, i64 0, i64 0), i8* %3) #4
  br label %return

if.else:                                          ; preds = %entry
  %and = and i16 %bf.load, 4096
  %tobool = icmp eq i16 %and, 0
  br i1 %tobool, label %if.else8, label %if.then6

if.then6:                                         ; preds = %if.else
  %val = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4
  %node7 = bitcast %union.anon.0* %val to %struct.cpp_hashnode**
  %4 = load %struct.cpp_hashnode** %node7, align 8, !tbaa !22
  %str = getelementptr inbounds %struct.cpp_hashnode* %4, i64 0, i32 0, i32 1
  %5 = load i8** %str, align 8, !tbaa !51
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([64 x i8]* @.str69, i64 0, i64 0), i8* %5) #4
  br label %return

if.else8:                                         ; preds = %if.else
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([32 x i8]* @.str70, i64 0, i64 0)) #4
  br label %return

if.end10:                                         ; preds = %entry
  %val11 = getelementptr inbounds %struct.cpp_token* %call, i64 0, i32 4
  %node12 = bitcast %union.anon.0* %val11 to %struct.cpp_hashnode**
  %6 = load %struct.cpp_hashnode** %node12, align 8, !tbaa !22
  %flags13 = getelementptr inbounds %struct.cpp_hashnode* %6, i64 0, i32 5
  %7 = load i8* %flags13, align 1, !tbaa !53
  %and15 = and i8 %7, 2
  %tobool16 = icmp eq i8 %and15, 0
  br i1 %tobool16, label %if.end18, label %return

if.end18:                                         ; preds = %if.end10
  %n_defined = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 38, i32 0
  %8 = load %struct.cpp_hashnode** %n_defined, align 8, !tbaa !115
  %cmp19 = icmp eq %struct.cpp_hashnode* %6, %8
  br i1 %cmp19, label %if.then21, label %return

if.then21:                                        ; preds = %if.end18
  %str23 = getelementptr inbounds %struct.cpp_hashnode* %6, i64 0, i32 0, i32 1
  %9 = load i8** %str23, align 8, !tbaa !51
  tail call void (%struct.cpp_reader*, i8*, ...)* @cpp_error(%struct.cpp_reader* %pfile, i8* getelementptr inbounds ([36 x i8]* @.str71, i64 0, i64 0), i8* %9) #4
  br label %return

return:                                           ; preds = %if.end18, %if.end10, %if.then5, %if.else8, %if.then6, %if.then21
  %retval.0 = phi %struct.cpp_hashnode* [ null, %if.then21 ], [ null, %if.then6 ], [ null, %if.else8 ], [ null, %if.then5 ], [ null, %if.end10 ], [ %6, %if.end18 ]
  ret %struct.cpp_hashnode* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @push_conditional(%struct.cpp_reader* %pfile, i32 %skip, i32 %type, %struct.cpp_hashnode* %cmacro) #0 {
entry:
  %buffer1 = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 0
  %0 = load %struct.cpp_buffer** %buffer1, align 8, !tbaa !54
  %chunk_limit = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 4
  %1 = load i8** %chunk_limit, align 8, !tbaa !77
  %next_free = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 3
  %2 = load i8** %next_free, align 8, !tbaa !78
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 32
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %buffer_ob = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33
  tail call void @_obstack_newchunk(%struct.obstack* %buffer_ob, i32 32) #4
  %.pre = load i8** %next_free, align 8, !tbaa !78
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = phi i8* [ %.pre, %if.then ], [ %2, %entry ]
  %add.ptr = getelementptr inbounds i8* %3, i64 32
  store i8* %add.ptr, i8** %next_free, align 8, !tbaa !78
  %object_base = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 2
  %4 = load i8** %object_base, align 8, !tbaa !79
  %cmp7 = icmp eq i8* %add.ptr, %4
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  %maybe_empty_object = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 10
  %bf.load = load i8* %maybe_empty_object, align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, i8* %maybe_empty_object, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end
  %sub.ptr.lhs.cast12 = ptrtoint i8* %add.ptr to i64
  %alignment_mask = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 6
  %5 = load i32* %alignment_mask, align 4, !tbaa !80
  %conv14 = sext i32 %5 to i64
  %add = add nsw i64 %conv14, %sub.ptr.lhs.cast12
  %neg = xor i32 %5, -1
  %conv16 = sext i32 %neg to i64
  %and = and i64 %add, %conv16
  %add.ptr17 = getelementptr inbounds i8* null, i64 %and
  store i8* %add.ptr17, i8** %next_free, align 8, !tbaa !78
  %chunk = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 33, i32 1
  %6 = load %struct._obstack_chunk** %chunk, align 8, !tbaa !81
  %sub.ptr.lhs.cast20 = ptrtoint i8* %add.ptr17 to i64
  %sub.ptr.rhs.cast21 = ptrtoint %struct._obstack_chunk* %6 to i64
  %sub.ptr.sub22 = sub i64 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21
  %7 = load i8** %chunk_limit, align 8, !tbaa !77
  %sub.ptr.lhs.cast25 = ptrtoint i8* %7 to i64
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast21
  %cmp28 = icmp sgt i64 %sub.ptr.sub22, %sub.ptr.sub27
  br i1 %cmp28, label %if.then30, label %if.end33

if.then30:                                        ; preds = %if.end10
  store i8* %7, i8** %next_free, align 8, !tbaa !78
  br label %if.end33

if.end33:                                         ; preds = %if.then30, %if.end10
  %8 = phi i8* [ %7, %if.then30 ], [ %add.ptr17, %if.end10 ]
  store i8* %8, i8** %object_base, align 8, !tbaa !79
  %9 = bitcast i8* %4 to %struct.if_stack*
  %directive_line = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 5
  %10 = load i32* %directive_line, align 4, !tbaa !21
  %line = getelementptr inbounds i8* %4, i64 8
  %11 = bitcast i8* %line to i32*
  store i32 %10, i32* %11, align 4, !tbaa !88
  %if_stack = getelementptr inbounds %struct.cpp_buffer* %0, i64 0, i32 7
  %12 = load %struct.if_stack** %if_stack, align 8, !tbaa !98
  %next = bitcast i8* %4 to %struct.if_stack**
  store %struct.if_stack* %12, %struct.if_stack** %next, align 8, !tbaa !101
  %skipping = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 1, i32 1
  %13 = load i8* %skipping, align 1, !tbaa !29
  %lnot = icmp eq i32 %skip, 0
  %not.tobool = icmp ne i8 %13, 0
  %lnot. = or i1 %lnot, %not.tobool
  %14 = getelementptr inbounds i8* %4, i64 24
  %frombool = zext i1 %lnot. to i8
  store i8 %frombool, i8* %14, align 1, !tbaa !105
  %15 = getelementptr inbounds i8* %4, i64 25
  %frombool42 = zext i1 %not.tobool to i8
  store i8 %frombool42, i8* %15, align 1, !tbaa !99
  %type43 = getelementptr inbounds i8* %4, i64 28
  %16 = bitcast i8* %type43 to i32*
  store i32 %type, i32* %16, align 4, !tbaa !90
  %mi_valid = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 14
  %17 = load i8* %mi_valid, align 1, !tbaa !32, !range !100
  %tobool44 = icmp eq i8 %17, 0
  br i1 %tobool44, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end33
  %mi_cmacro = getelementptr inbounds %struct.cpp_reader* %pfile, i64 0, i32 12
  %18 = load %struct.cpp_hashnode** %mi_cmacro, align 8, !tbaa !103
  %cmp46 = icmp eq %struct.cpp_hashnode* %18, null
  br i1 %cmp46, label %if.then48, label %if.else

if.then48:                                        ; preds = %land.lhs.true
  %mi_cmacro49 = getelementptr inbounds i8* %4, i64 16
  %19 = bitcast i8* %mi_cmacro49 to %struct.cpp_hashnode**
  store %struct.cpp_hashnode* %cmacro, %struct.cpp_hashnode** %19, align 8, !tbaa !102
  br label %if.end51

if.else:                                          ; preds = %if.end33, %land.lhs.true
  %mi_cmacro50 = getelementptr inbounds i8* %4, i64 16
  %20 = bitcast i8* %mi_cmacro50 to %struct.cpp_hashnode**
  store %struct.cpp_hashnode* null, %struct.cpp_hashnode** %20, align 8, !tbaa !102
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then48
  %conv52 = trunc i32 %skip to i8
  store i8 %conv52, i8* %skipping, align 1, !tbaa !29
  store %struct.if_stack* %9, %struct.if_stack** %if_stack, align 8, !tbaa !98
  ret void
}

declare i32 @_cpp_create_definition(%struct.cpp_reader*, %struct.cpp_hashnode*) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { cold nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !4, i64 8}
!2 = metadata !{metadata !"cpp_reader", metadata !3, i64 0, metadata !6, i64 8, metadata !7, i64 24, metadata !3, i64 56, metadata !8, i64 64, metadata !8, i64 68, metadata !3, i64 72, metadata !3, i64 80, metadata !3, i64 88, metadata !10, i64 96, metadata !3, i64 152, metadata !3, i64 160, metadata !3, i64 168, metadata !3, i64 176, metadata !9, i64 184, metadata !3, i64 192, metadata !11, i64 200, metadata !3, i64 232, metadata !8, i64 240, metadata !8, i64 244, metadata !8, i64 248, metadata !8, i64 252, metadata !8, i64 256, metadata !3, i64 264, metadata !8, i64 272, metadata !3, i64 280, metadata !8, i64 288, metadata !12, i64 296, metadata !12, i64 320, metadata !12, i64 344, metadata !12, i64 368, metadata !3, i64 392, metadata !14, i64 400, metadata !14, i64 488, metadata !3, i64 576, metadata !16, i64 584, metadata !3, i64 640, metadata !17, i64 648, metadata !18, i64 784, metadata !4, i64 824, metadata !4, i64 825}
!3 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"lexer_state", metadata !4, i64 0, metadata !4, i64 1, metadata !4, i64 2, metadata !4, i64 3, metadata !4, i64 4, metadata !4, i64 5, metadata !4, i64 6, metadata !4, i64 7, metadata !4, i64 8}
!7 = metadata !{metadata !"line_maps", metadata !3, i64 0, metadata !8, i64 8, metadata !8, i64 12, metadata !8, i64 16, metadata !8, i64 20, metadata !9, i64 24}
!8 = metadata !{metadata !"int", metadata !4, i64 0}
!9 = metadata !{metadata !"_Bool", metadata !4, i64 0}
!10 = metadata !{metadata !"cpp_context", metadata !3, i64 0, metadata !3, i64 8, metadata !4, i64 16, metadata !4, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !9, i64 48}
!11 = metadata !{metadata !"tokenrun", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24}
!12 = metadata !{metadata !"cpp_token", metadata !8, i64 0, metadata !13, i64 4, metadata !4, i64 6, metadata !4, i64 7, metadata !4, i64 8}
!13 = metadata !{metadata !"short", metadata !4, i64 0}
!14 = metadata !{metadata !"obstack", metadata !15, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !15, i64 40, metadata !8, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !3, i64 72, metadata !8, i64 80, metadata !8, i64 80, metadata !8, i64 80}
!15 = metadata !{metadata !"long", metadata !4, i64 0}
!16 = metadata !{metadata !"cpp_callbacks", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48}
!17 = metadata !{metadata !"cpp_options", metadata !3, i64 0, metadata !3, i64 8, metadata !8, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !3, i64 64, metadata !8, i64 72, metadata !3, i64 80, metadata !4, i64 88, metadata !4, i64 92, metadata !4, i64 93, metadata !4, i64 94, metadata !4, i64 95, metadata !4, i64 96, metadata !4, i64 97, metadata !4, i64 98, metadata !4, i64 99, metadata !4, i64 100, metadata !4, i64 101, metadata !4, i64 102, metadata !4, i64 103, metadata !4, i64 104, metadata !4, i64 105, metadata !4, i64 106, metadata !4, i64 107, metadata !4, i64 108, metadata !4, i64 109, metadata !4, i64 110, metadata !4, i64 111, metadata !4, i64 112, metadata !4, i64 113, metadata !4, i64 114, metadata !4, i64 115, metadata !4, i64 116, metadata !4, i64 117, metadata !4, i64 118, metadata !4, i64 119, metadata !4, i64 120, metadata !4, i64 121, metadata !4, i64 122, metadata !4, i64 123, metadata !4, i64 124, metadata !4, i64 125, metadata !4, i64 126, metadata !4, i64 127, metadata !4, i64 128, metadata !4, i64 129, metadata !4, i64 130}
!18 = metadata !{metadata !"spec_nodes", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32}
!19 = metadata !{metadata !2, metadata !4, i64 11}
!20 = metadata !{metadata !2, metadata !8, i64 64}
!21 = metadata !{metadata !2, metadata !8, i64 68}
!22 = metadata !{metadata !3, metadata !3, i64 0}
!23 = metadata !{metadata !24, metadata !4, i64 18}
!24 = metadata !{metadata !"cpp_hashnode", metadata !25, i64 0, metadata !13, i64 16, metadata !4, i64 18, metadata !4, i64 19, metadata !4, i64 20, metadata !4, i64 21, metadata !4, i64 24}
!25 = metadata !{metadata !"ht_identifier", metadata !8, i64 0, metadata !3, i64 8}
!26 = metadata !{metadata !2, metadata !4, i64 736}
!27 = metadata !{metadata !2, metadata !4, i64 770}
!28 = metadata !{metadata !2, metadata !4, i64 771}
!29 = metadata !{metadata !2, metadata !4, i64 9}
!30 = metadata !{metadata !31, metadata !4, i64 19}
!31 = metadata !{metadata !"directive", metadata !3, i64 0, metadata !3, i64 8, metadata !13, i64 16, metadata !4, i64 18, metadata !4, i64 19}
!32 = metadata !{metadata !2, metadata !9, i64 184}
!33 = metadata !{metadata !2, metadata !4, i64 10}
!34 = metadata !{metadata !31, metadata !4, i64 18}
!35 = metadata !{metadata !31, metadata !3, i64 8}
!36 = metadata !{metadata !2, metadata !4, i64 761}
!37 = metadata !{metadata !2, metadata !3, i64 160}
!38 = metadata !{metadata !31, metadata !3, i64 0}
!39 = metadata !{metadata !2, metadata !3, i64 152}
!40 = metadata !{metadata !2, metadata !3, i64 192}
!41 = metadata !{metadata !2, metadata !8, i64 244}
!42 = metadata !{metadata !2, metadata !3, i64 232}
!43 = metadata !{metadata !2, metadata !3, i64 216}
!44 = metadata !{metadata !2, metadata !4, i64 745}
!45 = metadata !{metadata !2, metadata !3, i64 56}
!46 = metadata !{metadata !2, metadata !3, i64 592}
!47 = metadata !{metadata !48, metadata !3, i64 8}
!48 = metadata !{metadata !"pragma_entry", metadata !3, i64 0, metadata !3, i64 8, metadata !8, i64 16, metadata !4, i64 24}
!49 = metadata !{metadata !48, metadata !3, i64 0}
!50 = metadata !{metadata !48, metadata !8, i64 16}
!51 = metadata !{metadata !25, metadata !3, i64 8}
!52 = metadata !{metadata !2, metadata !4, i64 14}
!53 = metadata !{metadata !24, metadata !4, i64 21}
!54 = metadata !{metadata !2, metadata !3, i64 0}
!55 = metadata !{metadata !56, metadata !3, i64 32}
!56 = metadata !{metadata !"cpp_buffer", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24, metadata !3, i64 32, metadata !3, i64 40, metadata !3, i64 48, metadata !3, i64 56, metadata !8, i64 64, metadata !4, i64 68, metadata !3, i64 72, metadata !4, i64 80, metadata !4, i64 81, metadata !4, i64 82, metadata !9, i64 83, metadata !57, i64 88}
!57 = metadata !{metadata !"search_path", metadata !3, i64 0, metadata !3, i64 8, metadata !8, i64 16, metadata !15, i64 24, metadata !15, i64 32, metadata !8, i64 40, metadata !3, i64 48}
!58 = metadata !{metadata !56, metadata !3, i64 48}
!59 = metadata !{metadata !2, metadata !4, i64 15}
!60 = metadata !{metadata !61, metadata !8, i64 0}
!61 = metadata !{metadata !"cpp_string", metadata !8, i64 0, metadata !3, i64 8}
!62 = metadata !{metadata !61, metadata !3, i64 8}
!63 = metadata !{metadata !56, metadata !4, i64 68}
!64 = metadata !{metadata !4, metadata !4, i64 0}
!65 = metadata !{metadata !66, metadata !8, i64 8}
!66 = metadata !{metadata !"answer", metadata !3, i64 0, metadata !8, i64 8, metadata !4, i64 16}
!67 = metadata !{metadata !8, metadata !8, i64 0}
!68 = metadata !{metadata !2, metadata !3, i64 72}
!69 = metadata !{metadata !70, metadata !3, i64 24}
!70 = metadata !{metadata !"_cpp_buff", metadata !3, i64 0, metadata !3, i64 8, metadata !3, i64 16, metadata !3, i64 24}
!71 = metadata !{metadata !70, metadata !3, i64 16}
!72 = metadata !{i64 0, i64 4, metadata !67, i64 4, i64 2, metadata !73, i64 6, i64 4, metadata !64, i64 7, i64 1, metadata !64, i64 8, i64 8, metadata !22, i64 8, i64 8, metadata !22, i64 8, i64 4, metadata !67, i64 16, i64 8, metadata !22, i64 8, i64 4, metadata !67, i64 8, i64 1, metadata !64}
!73 = metadata !{metadata !13, metadata !13, i64 0}
!74 = metadata !{metadata !12, metadata !4, i64 7}
!75 = metadata !{metadata !66, metadata !3, i64 0}
!76 = metadata !{metadata !25, metadata !8, i64 0}
!77 = metadata !{metadata !14, metadata !3, i64 32}
!78 = metadata !{metadata !14, metadata !3, i64 24}
!79 = metadata !{metadata !14, metadata !3, i64 16}
!80 = metadata !{metadata !14, metadata !8, i64 48}
!81 = metadata !{metadata !14, metadata !3, i64 8}
!82 = metadata !{metadata !56, metadata !3, i64 0}
!83 = metadata !{metadata !56, metadata !3, i64 40}
!84 = metadata !{metadata !56, metadata !3, i64 24}
!85 = metadata !{metadata !56, metadata !3, i64 16}
!86 = metadata !{metadata !56, metadata !4, i64 81}
!87 = metadata !{metadata !56, metadata !9, i64 83}
!88 = metadata !{metadata !89, metadata !8, i64 8}
!89 = metadata !{metadata !"if_stack", metadata !3, i64 0, metadata !8, i64 8, metadata !3, i64 16, metadata !9, i64 24, metadata !9, i64 25, metadata !8, i64 28}
!90 = metadata !{metadata !89, metadata !8, i64 28}
!91 = metadata !{metadata !2, metadata !8, i64 248}
!92 = metadata !{i64 0, i64 8, metadata !22, i64 8, i64 8, metadata !22, i64 16, i64 8, metadata !22, i64 24, i64 8, metadata !22, i64 32, i64 8, metadata !22, i64 40, i64 8, metadata !22, i64 48, i64 8, metadata !22}
!93 = metadata !{metadata !31, metadata !13, i64 16}
!94 = metadata !{metadata !95, metadata !3, i64 0}
!95 = metadata !{metadata !"line_map", metadata !3, i64 0, metadata !8, i64 8, metadata !8, i64 12, metadata !8, i64 16, metadata !4, i64 20, metadata !4, i64 21}
!96 = metadata !{metadata !95, metadata !4, i64 21}
!97 = metadata !{metadata !2, metadata !3, i64 608}
!98 = metadata !{metadata !56, metadata !3, i64 56}
!99 = metadata !{metadata !89, metadata !9, i64 25}
!100 = metadata !{i8 0, i8 2}
!101 = metadata !{metadata !89, metadata !3, i64 0}
!102 = metadata !{metadata !89, metadata !3, i64 16}
!103 = metadata !{metadata !2, metadata !3, i64 168}
!104 = metadata !{metadata !2, metadata !3, i64 176}
!105 = metadata !{metadata !89, metadata !9, i64 24}
!106 = metadata !{metadata !2, metadata !3, i64 616}
!107 = metadata !{metadata !2, metadata !4, i64 769}
!108 = metadata !{metadata !2, metadata !3, i64 576}
!109 = metadata !{metadata !2, metadata !3, i64 584}
!110 = metadata !{metadata !2, metadata !3, i64 632}
!111 = metadata !{metadata !2, metadata !3, i64 624}
!112 = metadata !{metadata !2, metadata !4, i64 760}
!113 = metadata !{metadata !2, metadata !8, i64 44}
!114 = metadata !{metadata !2, metadata !3, i64 600}
!115 = metadata !{metadata !2, metadata !3, i64 784}
