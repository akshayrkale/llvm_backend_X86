; ModuleID = 'reg-stack.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.lang_decl = type opaque
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [4 x %struct.rtx_def**], [4 x i8], i8, i8, i8, %struct.rtx_def* }
%struct.operand_alternative = type { i8*, i32, i32, i32, i32, i8 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct._IO_FILE = type opaque
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct.stack_def = type { i32, i64, [8 x i8] }

@rtx_class = external constant [153 x i8]
@stack_regs_mentioned_data = internal unnamed_addr global %struct.varray_head_tag* null, align 8
@optimize = external global i32
@regs_ever_live = external global [53 x i8]
@n_basic_blocks = external global i32
@basic_block_info = external global %struct.varray_head_tag*
@entry_exit_blocks = external global [2 x %struct.basic_block_def]
@class_narrowest_mode = external constant [9 x i32]
@FP_mode_reg = internal unnamed_addr global [8 x [59 x %struct.rtx_def*]] zeroinitializer, align 16
@mode_wider_mode = external constant [59 x i8]
@ix86_flags_rtx = internal unnamed_addr global %struct.rtx_def* null, align 8
@flag_pic = external global i32
@const_tiny_rtx = external global [3 x [59 x %struct.rtx_def*]]
@nan = internal unnamed_addr global %struct.rtx_def* null, align 8
@.str = private unnamed_addr constant [27 x i8] c"stack_regs_mentioned cache\00", align 1
@current_block = internal unnamed_addr global %struct.basic_block_def* null, align 8
@.str1 = private unnamed_addr constant [30 x i8] c"\0ABasic block %d\0AInput stack: \00", align 1
@.str2 = private unnamed_addr constant [12 x i8] c"reg-stack.c\00", align 1
@__FUNCTION__.convert_regs_1 = private unnamed_addr constant [15 x i8] c"convert_regs_1\00", align 1
@.str3 = private unnamed_addr constant [24 x i8] c"  insn %d input stack: \00", align 1
@.str4 = private unnamed_addr constant [26 x i8] c"Expected live registers [\00", align 1
@.str5 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str6 = private unnamed_addr constant [18 x i8] c" ]\0AOutput stack: \00", align 1
@.str7 = private unnamed_addr constant [35 x i8] c"Emitting insn initializing reg %d\0A\00", align 1
@mode_class = external constant [59 x i32]
@__FUNCTION__.emit_pop_insn = private unnamed_addr constant [14 x i8] c"emit_pop_insn\00", align 1
@__FUNCTION__.get_hard_regnum = private unnamed_addr constant [16 x i8] c"get_hard_regnum\00", align 1
@__FUNCTION__.subst_stack_regs_pat = private unnamed_addr constant [21 x i8] c"subst_stack_regs_pat\00", align 1
@target_flags = external global i32
@mode_size = external constant [59 x i8]
@global_rtl = external global [11 x %struct.rtx_def*]
@__FUNCTION__.remove_regno_note = private unnamed_addr constant [18 x i8] c"remove_regno_note\00", align 1
@__FUNCTION__.emit_swap_insn = private unnamed_addr constant [15 x i8] c"emit_swap_insn\00", align 1
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@__FUNCTION__.move_for_stack_reg = private unnamed_addr constant [19 x i8] c"move_for_stack_reg\00", align 1
@__FUNCTION__.replace_reg = private unnamed_addr constant [12 x i8] c"replace_reg\00", align 1
@which_alternative = external global i32
@recog_data = external global %struct.recog_data
@__FUNCTION__.subst_asm_stack_regs = private unnamed_addr constant [21 x i8] c"subst_asm_stack_regs\00", align 1
@recog_op_alt = external global [30 x [30 x %struct.operand_alternative]]
@__FUNCTION__.change_stack = private unnamed_addr constant [13 x i8] c"change_stack\00", align 1
@__FUNCTION__.get_asm_operand_n_inputs = private unnamed_addr constant [25 x i8] c"get_asm_operand_n_inputs\00", align 1
@const_int_rtx = external global [129 x %struct.rtx_def*]
@reg_class_size = external global [25 x i32]
@.str8 = private unnamed_addr constant [52 x i8] c"output constraint %d must specify a single register\00", align 1
@.str9 = private unnamed_addr constant [68 x i8] c"output constraint %d cannot be specified together with \22%s\22 clobber\00", align 1
@reg_names = external global [53 x i8*]
@.str10 = private unnamed_addr constant [44 x i8] c"output regs must be grouped at top of stack\00", align 1
@.str11 = private unnamed_addr constant [55 x i8] c"implicitly popped regs must be grouped at top of stack\00", align 1
@.str12 = private unnamed_addr constant [42 x i8] c"output operand %d must use `&' constraint\00", align 1
@.str13 = private unnamed_addr constant [15 x i8] c"uninitialized\0A\00", align 1
@.str14 = private unnamed_addr constant [7 x i8] c"empty\0A\00", align 1
@.str15 = private unnamed_addr constant [3 x i8] c"[ \00", align 1
@.str16 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str17 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str18 = private unnamed_addr constant [14 x i8] c"Edge %d->%d: \00", align 1
@.str19 = private unnamed_addr constant [35 x i8] c"new block; copying stack position\0A\00", align 1
@.str20 = private unnamed_addr constant [24 x i8] c"new block; pops needed\0A\00", align 1
@.str21 = private unnamed_addr constant [19 x i8] c"no changes needed\0A\00", align 1
@.str22 = private unnamed_addr constant [21 x i8] c"correcting stack to \00", align 1
@__FUNCTION__.compensate_edge = private unnamed_addr constant [16 x i8] c"compensate_edge\00", align 1
@current_function_decl = external global %union.tree_node*

; Function Attrs: nounwind uwtable
define i32 @stack_regs_mentioned(%struct.rtx_def* nocapture readonly %insn) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom36 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom36
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %1, 105
  %2 = load %struct.varray_head_tag** @stack_regs_mentioned_data, align 8
  %tobool = icmp ne %struct.varray_head_tag* %2, null
  %or.cond = and i1 %cmp, %tobool
  br i1 %or.cond, label %if.end, label %return

if.end:                                           ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %3 = load i32* %rtint, align 4, !tbaa !4
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 0
  %4 = load i64* %num_elements, align 8, !tbaa !6
  %conv3 = trunc i64 %4 to i32
  %cmp4 = icmp ult i32 %3, %conv3
  br i1 %cmp4, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end
  %div = udiv i32 %3, 20
  %add = add i32 %div, %3
  %conv7 = zext i32 %add to i64
  %call = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %2, i64 %conv7) #4
  store %struct.varray_head_tag* %call, %struct.varray_head_tag** @stack_regs_mentioned_data, align 8, !tbaa !10
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then6
  %5 = phi %struct.varray_head_tag* [ %2, %if.end ], [ %call, %if.then6 ]
  %idxprom9 = zext i32 %3 to i64
  %data = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 4
  %c = bitcast %union.varray_data_tag* %data to [1 x i8]*
  %arrayidx10 = getelementptr inbounds [1 x i8]* %c, i64 0, i64 %idxprom9
  %6 = load i8* %arrayidx10, align 1, !tbaa !1
  %conv11 = sext i8 %6 to i32
  %cmp12 = icmp eq i8 %6, 0
  br i1 %cmp12, label %if.then14, label %if.end24

if.then14:                                        ; preds = %if.end8
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %call17 = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %7)
  %tobool18 = icmp ne i32 %call17, 0
  %cond = select i1 %tobool18, i32 1, i32 2
  %conv19 = trunc i32 %cond to i8
  store i8 %conv19, i8* %arrayidx10, align 1, !tbaa !1
  br label %if.end24

if.end24:                                         ; preds = %if.then14, %if.end8
  %test.0 = phi i32 [ %cond, %if.then14 ], [ %conv11, %if.end8 ]
  %cmp25 = icmp eq i32 %test.0, 1
  %conv26 = zext i1 %cmp25 to i32
  br label %return

return:                                           ; preds = %entry, %if.end24
  %retval.0 = phi i32 [ %conv26, %if.end24 ], [ 0, %entry ]
  ret i32 %retval.0
}

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #1

; Function Attrs: nounwind readonly uwtable
define internal fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* nocapture readonly %pat) #2 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !4
  %2 = and i32 %1, -8
  %3 = icmp eq i32 %2, 8
  br i1 %3, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %idxprom70 = zext i32 %bf.clear to i64
  %arrayidx9 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom70
  %4 = load i8** %arrayidx9, align 8, !tbaa !10
  %arrayidx13 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom70
  %5 = load i8* %arrayidx13, align 1, !tbaa !1
  %cmp1473 = icmp eq i8 %5, 0
  br i1 %cmp1473, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %6 = zext i8 %5 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv76 = phi i64 [ %6, %for.body.lr.ph ], [ %indvars.iv.next77, %for.cond.backedge ]
  %indvars.iv.next77 = add nsw i64 %indvars.iv76, -1
  %arrayidx17 = getelementptr inbounds i8* %4, i64 %indvars.iv.next77
  %7 = load i8* %arrayidx17, align 1, !tbaa !1
  switch i8 %7, label %for.cond.backedge [
    i8 69, label %if.then21
    i8 101, label %land.lhs.true43
  ]

for.cond.backedge:                                ; preds = %for.cond26, %for.body, %land.lhs.true43
  %8 = trunc i64 %indvars.iv.next77 to i32
  %cmp14 = icmp sgt i32 %8, 0
  br i1 %cmp14, label %for.body, label %return

if.then21:                                        ; preds = %for.body
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 1, i64 %indvars.iv.next77
  %rtvec = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtvec_def**
  %9 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !10
  %num_elem = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 0
  %10 = load i32* %num_elem, align 4, !tbaa !11
  %11 = sext i32 %10 to i64
  br label %for.cond26

for.cond26:                                       ; preds = %for.body29, %if.then21
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body29 ], [ %11, %if.then21 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %12 = trunc i64 %indvars.iv to i32
  %cmp27 = icmp sgt i32 %12, 0
  br i1 %cmp27, label %for.body29, label %for.cond.backedge

for.body29:                                       ; preds = %for.cond26
  %arrayidx35 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv.next
  %13 = load %struct.rtx_def** %arrayidx35, align 8, !tbaa !10
  %call = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %13)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.cond26, label %return

land.lhs.true43:                                  ; preds = %for.body
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 1, i64 %indvars.iv.next77
  %rtx = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %call47 = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %14)
  %tobool48 = icmp eq i32 %call47, 0
  br i1 %tobool48, label %for.cond.backedge, label %return

return:                                           ; preds = %land.lhs.true43, %for.cond.backedge, %for.body29, %if.end, %land.lhs.true
  %retval.0 = phi i32 [ 1, %land.lhs.true ], [ 0, %if.end ], [ 1, %for.body29 ], [ 1, %land.lhs.true43 ], [ 0, %for.cond.backedge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @reg_to_stack(%struct.rtx_def* %first, %struct._IO_FILE* %file) #0 {
entry:
  %0 = load %struct.varray_head_tag** @stack_regs_mentioned_data, align 8, !tbaa !10
  %tobool = icmp eq %struct.varray_head_tag* %0, null
  br i1 %tobool, label %if.end3, label %if.then2

if.then2:                                         ; preds = %entry
  %1 = bitcast %struct.varray_head_tag* %0 to i8*
  tail call void @free(i8* %1)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** @stack_regs_mentioned_data, align 8, !tbaa !10
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.then2
  %2 = load i32* @optimize, align 4, !tbaa !4
  %tobool4 = icmp eq i32 %2, 0
  br i1 %tobool4, label %if.then5, label %for.body

if.then5:                                         ; preds = %if.end3
  tail call void @split_all_insns(i32 0) #4
  br label %for.body

for.cond:                                         ; preds = %for.body
  %3 = trunc i64 %indvars.iv.next127 to i32
  %cmp = icmp slt i32 %3, 16
  br i1 %cmp, label %for.body, label %return

for.body:                                         ; preds = %if.then5, %if.end3, %for.cond
  %indvars.iv126 = phi i64 [ %indvars.iv.next127, %for.cond ], [ 8, %if.end3 ], [ 8, %if.then5 ]
  %arrayidx = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %indvars.iv126
  %4 = load i8* %arrayidx, align 1, !tbaa !1
  %tobool7 = icmp eq i8 %4, 0
  %indvars.iv.next127 = add nuw nsw i64 %indvars.iv126, 1
  br i1 %tobool7, label %for.cond, label %for.end

for.end:                                          ; preds = %for.body
  %5 = trunc i64 %indvars.iv126 to i32
  %cmp10 = icmp sgt i32 %5, 15
  br i1 %cmp10, label %return, label %if.end12

if.end12:                                         ; preds = %for.end
  %6 = load i32* @optimize, align 4, !tbaa !4
  %tobool13 = icmp eq i32 %6, 0
  br i1 %tobool13, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end12
  %call = tail call i32 @max_reg_num() #4
  tail call void @find_basic_blocks(%struct.rtx_def* %first, i32 %call, %struct._IO_FILE* %file) #4
  %call15 = tail call i32 @count_or_remove_death_notes(%struct.simple_bitmap_def* null, i32 1) #4
  tail call void @life_analysis(%struct.rtx_def* %first, %struct._IO_FILE* %file, i32 1) #4
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.then14
  %call17 = tail call zeroext i1 @mark_dfs_back_edges() #4
  tail call void @alloc_aux_for_blocks(i32 64) #4
  %7 = load i32* @n_basic_blocks, align 4, !tbaa !4
  %cmp19118 = icmp sgt i32 %7, 0
  br i1 %cmp19118, label %for.body20.lr.ph, label %for.cond36.preheader

for.body20.lr.ph:                                 ; preds = %if.end16
  %8 = sext i32 %7 to i64
  %.pre = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !10
  br label %for.body20

for.cond18.loopexit:                              ; preds = %for.inc32, %for.body20
  %9 = trunc i64 %indvars.iv.next125 to i32
  %cmp19 = icmp sgt i32 %9, 0
  br i1 %cmp19, label %for.body20, label %for.cond36.preheader

for.cond36.preheader:                             ; preds = %for.cond18.loopexit, %if.end16
  %10 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 2), align 4, !tbaa !1
  %cmp40109 = icmp eq i32 %10, 0
  %11 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 6), align 4, !tbaa !1
  %cmp53111 = icmp eq i32 %11, 0
  br label %for.body38

for.body20:                                       ; preds = %for.body20.lr.ph, %for.cond18.loopexit
  %indvars.iv124 = phi i64 [ %8, %for.body20.lr.ph ], [ %indvars.iv.next125, %for.cond18.loopexit ]
  %indvars.iv.next125 = add nsw i64 %indvars.iv124, -1
  %data = getelementptr inbounds %struct.varray_head_tag* %.pre, i64 0, i32 4
  %bb22 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx23 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb22, i64 0, i64 %indvars.iv.next125
  %12 = load %struct.basic_block_def** %arrayidx23, align 8, !tbaa !10
  %pred = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 4
  %e.0114 = load %struct.edge_def** %pred, align 8
  %tobool25115 = icmp eq %struct.edge_def* %e.0114, null
  br i1 %tobool25115, label %for.cond18.loopexit, label %for.body26.lr.ph

for.body26.lr.ph:                                 ; preds = %for.body20
  %aux = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 10
  br label %for.body26

for.body26:                                       ; preds = %for.body26.lr.ph, %for.inc32
  %e.0116 = phi %struct.edge_def* [ %e.0114, %for.body26.lr.ph ], [ %e.0, %for.inc32 ]
  %flags = getelementptr inbounds %struct.edge_def* %e.0116, i64 0, i32 6
  %13 = load i32* %flags, align 4, !tbaa !13
  %and = and i32 %13, 32
  %tobool27 = icmp eq i32 %and, 0
  br i1 %tobool27, label %land.lhs.true, label %for.inc32

land.lhs.true:                                    ; preds = %for.body26
  %src = getelementptr inbounds %struct.edge_def* %e.0116, i64 0, i32 2
  %14 = load %struct.basic_block_def** %src, align 8, !tbaa !16
  %cmp28 = icmp eq %struct.basic_block_def* %14, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp28, label %for.inc32, label %if.then29

if.then29:                                        ; preds = %land.lhs.true
  %15 = load i8** %aux, align 8, !tbaa !17
  %predecessors = getelementptr inbounds i8* %15, i64 60
  %16 = bitcast i8* %predecessors to i32*
  %17 = load i32* %16, align 4, !tbaa !19
  %inc30 = add nsw i32 %17, 1
  store i32 %inc30, i32* %16, align 4, !tbaa !19
  br label %for.inc32

for.inc32:                                        ; preds = %land.lhs.true, %for.body26, %if.then29
  %pred_next = getelementptr inbounds %struct.edge_def* %e.0116, i64 0, i32 0
  %e.0 = load %struct.edge_def** %pred_next, align 8
  %tobool25 = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool25, label %for.cond18.loopexit, label %for.body26

for.body38:                                       ; preds = %for.inc67, %for.cond36.preheader
  %indvars.iv = phi i64 [ 8, %for.cond36.preheader ], [ %indvars.iv.next, %for.inc67 ]
  br i1 %cmp40109, label %for.end51, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.body38
  %18 = add nsw i64 %indvars.iv, -8
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %for.body41
  %mode.0110 = phi i32 [ %10, %for.body41.lr.ph ], [ %conv, %for.body41 ]
  %19 = trunc i64 %indvars.iv to i32
  %call42 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode.0110, i32 %19) #4
  %idxprom43 = sext i32 %mode.0110 to i64
  %arrayidx47 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %18, i64 %idxprom43
  store %struct.rtx_def* %call42, %struct.rtx_def** %arrayidx47, align 8, !tbaa !10
  %arrayidx50 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom43
  %20 = load i8* %arrayidx50, align 1, !tbaa !1
  %conv = zext i8 %20 to i32
  %cmp40 = icmp eq i8 %20, 0
  br i1 %cmp40, label %for.end51, label %for.body41

for.end51:                                        ; preds = %for.body41, %for.body38
  br i1 %cmp53111, label %for.inc67, label %for.body55.lr.ph

for.body55.lr.ph:                                 ; preds = %for.end51
  %21 = add nsw i64 %indvars.iv, -8
  br label %for.body55

for.body55:                                       ; preds = %for.body55.lr.ph, %for.body55
  %mode.1112 = phi i32 [ %11, %for.body55.lr.ph ], [ %conv65, %for.body55 ]
  %22 = trunc i64 %indvars.iv to i32
  %call56 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %mode.1112, i32 %22) #4
  %idxprom57 = sext i32 %mode.1112 to i64
  %arrayidx61 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %21, i64 %idxprom57
  store %struct.rtx_def* %call56, %struct.rtx_def** %arrayidx61, align 8, !tbaa !10
  %arrayidx64 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom57
  %23 = load i8* %arrayidx64, align 1, !tbaa !1
  %conv65 = zext i8 %23 to i32
  %cmp53 = icmp eq i8 %23, 0
  br i1 %cmp53, label %for.inc67, label %for.body55

for.inc67:                                        ; preds = %for.body55, %for.end51
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond, label %for.end69, label %for.body38

for.end69:                                        ; preds = %for.inc67
  %call70 = tail call %struct.rtx_def* @gen_rtx_REG(i32 52, i32 17) #4
  store %struct.rtx_def* %call70, %struct.rtx_def** @ix86_flags_rtx, align 8, !tbaa !10
  %24 = load i32* @flag_pic, align 4, !tbaa !4
  %tobool71 = icmp eq i32 %24, 0
  br i1 %tobool71, label %if.else, label %if.then72

if.then72:                                        ; preds = %for.end69
  %25 = load %struct.rtx_def** getelementptr inbounds ([3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 15), align 8, !tbaa !10
  br label %if.end76

if.else:                                          ; preds = %for.end69
  %call73 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 2143289344) #4
  %call74 = tail call %struct.rtx_def* @gen_lowpart(i32 15, %struct.rtx_def* %call73) #4
  store %struct.rtx_def* %call74, %struct.rtx_def** @nan, align 8, !tbaa !10
  %call75 = tail call %struct.rtx_def* @force_const_mem(i32 15, %struct.rtx_def* %call74) #4
  br label %if.end76

if.end76:                                         ; preds = %if.else, %if.then72
  %storemerge = phi %struct.rtx_def* [ %call75, %if.else ], [ %25, %if.then72 ]
  store %struct.rtx_def* %storemerge, %struct.rtx_def** @nan, align 8, !tbaa !10
  %call77 = tail call i32 @get_max_uid() #4
  %add = add nsw i32 %call77, 1
  %conv78 = sext i32 %add to i64
  %call79 = tail call %struct.varray_head_tag* @varray_init(i64 %conv78, i64 1, i8* getelementptr inbounds ([27 x i8]* @.str, i64 0, i64 0)) #4
  store %struct.varray_head_tag* %call79, %struct.varray_head_tag** @stack_regs_mentioned_data, align 8, !tbaa !10
  %26 = load i32* @n_basic_blocks, align 4, !tbaa !4
  %cmp74.i.i = icmp sgt i32 %26, 0
  br i1 %cmp74.i.i, label %for.body.lr.ph.i.i, label %for.cond14.preheader.i.i

for.body.lr.ph.i.i:                               ; preds = %if.end76
  %27 = sext i32 %26 to i64
  br label %for.body.i.i

for.cond.loopexit.i.i:                            ; preds = %for.inc.i.i
  %28 = trunc i64 %indvars.iv.next79.i.i to i32
  %cmp.i.i = icmp sgt i32 %28, 0
  br i1 %cmp.i.i, label %for.body.i.i, label %for.cond14.preheader.i.i

for.cond14.preheader.i.i:                         ; preds = %for.cond.loopexit.i.i, %if.end76
  %e.068.i.i = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8
  %tobool1569.i.i = icmp eq %struct.edge_def* %e.068.i.i, null
  br i1 %tobool1569.i.i, label %convert_regs_entry.exit.i, label %for.body16.i.i

for.body.i.i:                                     ; preds = %for.cond.loopexit.i.i, %for.body.lr.ph.i.i
  %indvars.iv78.i.i = phi i64 [ %27, %for.body.lr.ph.i.i ], [ %indvars.iv.next79.i.i, %for.cond.loopexit.i.i ]
  %indvars.iv.next79.i.i = add nsw i64 %indvars.iv78.i.i, -1
  %29 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !10
  %data.i.i = getelementptr inbounds %struct.varray_head_tag* %29, i64 0, i32 4
  %bb.i.i = bitcast %union.varray_data_tag* %data.i.i to [1 x %struct.basic_block_def*]*
  %arrayidx.i.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i.i, i64 0, i64 %indvars.iv.next79.i.i
  %30 = load %struct.basic_block_def** %arrayidx.i.i, align 8, !tbaa !10
  %aux.i.i = getelementptr inbounds %struct.basic_block_def* %30, i64 0, i32 10
  %31 = load i8** %aux.i.i, align 8, !tbaa !17
  %top.i.i = bitcast i8* %31 to i32*
  store i32 -2, i32* %top.i.i, align 4, !tbaa !22
  %global_live_at_end.i.i = getelementptr inbounds %struct.basic_block_def* %30, i64 0, i32 9
  %global_live_at_start.i.i = getelementptr inbounds %struct.basic_block_def* %30, i64 0, i32 8
  %reg_set.i.i = getelementptr inbounds i8* %31, i64 8
  %32 = bitcast i8* %reg_set.i.i to i64*
  %out_reg_set.i.i = getelementptr inbounds i8* %31, i64 48
  %33 = bitcast i8* %out_reg_set.i.i to i64*
  br label %for.body3.i.i

for.body3.i.i:                                    ; preds = %for.inc.i.i, %for.body.i.i
  %indvars.iv76.i.i = phi i64 [ 8, %for.body.i.i ], [ %indvars.iv.next77.i.i, %for.inc.i.i ]
  %34 = load %struct.bitmap_head_def** %global_live_at_end.i.i, align 8, !tbaa !23
  %35 = trunc i64 %indvars.iv76.i.i to i32
  %call.i.i = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %34, i32 %35) #4
  %tobool.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.body3.i.i
  %shl.i.i = shl i64 1, %indvars.iv76.i.i
  %36 = load i64* %33, align 8, !tbaa !24
  %or.i.i = or i64 %36, %shl.i.i
  store i64 %or.i.i, i64* %33, align 8, !tbaa !24
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %for.body3.i.i
  %37 = load %struct.bitmap_head_def** %global_live_at_start.i.i, align 8, !tbaa !25
  %call4.i.i = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %37, i32 %35) #4
  %tobool5.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.i.i, label %for.inc.i.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %if.end.i.i
  %shl8.i.i = shl i64 1, %indvars.iv76.i.i
  %38 = load i64* %32, align 8, !tbaa !26
  %or10.i.i = or i64 %38, %shl8.i.i
  store i64 %or10.i.i, i64* %32, align 8, !tbaa !26
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then6.i.i, %if.end.i.i
  %indvars.iv.next77.i.i = add nuw nsw i64 %indvars.iv76.i.i, 1
  %exitcond.i.i = icmp eq i64 %indvars.iv.next77.i.i, 16
  br i1 %exitcond.i.i, label %for.cond.loopexit.i.i, label %for.body3.i.i

for.body16.i.i:                                   ; preds = %for.cond14.preheader.i.i, %for.end40.i.i
  %e.071.i.i = phi %struct.edge_def* [ %e.0.i.i, %for.end40.i.i ], [ %e.068.i.i, %for.cond14.preheader.i.i ]
  %inserted.070.i.i = phi i32 [ %inserted.2.i.i, %for.end40.i.i ], [ 0, %for.cond14.preheader.i.i ]
  %dest.i.i = getelementptr inbounds %struct.edge_def* %e.071.i.i, i64 0, i32 3
  %39 = load %struct.basic_block_def** %dest.i.i, align 8, !tbaa !27
  %aux19.i.i = getelementptr inbounds %struct.basic_block_def* %39, i64 0, i32 10
  %40 = load i8** %aux19.i.i, align 8, !tbaa !17
  %reg_set26.i.i = getelementptr inbounds i8* %40, i64 8
  %41 = bitcast i8* %reg_set26.i.i to i64*
  br label %for.body24.i.i

for.body24.i.i:                                   ; preds = %for.inc38.i.i, %for.body16.i.i
  %indvars.iv.i.i = phi i64 [ 15, %for.body16.i.i ], [ %indvars.iv.next.i.i, %for.inc38.i.i ]
  %inserted.167.i.i = phi i32 [ %inserted.070.i.i, %for.body16.i.i ], [ %inserted.2.i.i, %for.inc38.i.i ]
  %top21.066.i.i = phi i32 [ -1, %for.body16.i.i ], [ %top21.1.i.i, %for.inc38.i.i ]
  %reg20.065.i.i = phi i32 [ 15, %for.body16.i.i ], [ %dec39.i.i, %for.inc38.i.i ]
  %42 = load i64* %41, align 8, !tbaa !26
  %shl28.i.i = shl i64 1, %indvars.iv.i.i
  %and.i.i = and i64 %42, %shl28.i.i
  %tobool29.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool29.i.i, label %for.inc38.i.i, label %if.then30.i.i

if.then30.i.i:                                    ; preds = %for.body24.i.i
  %conv.i.i = trunc i32 %reg20.065.i.i to i8
  %inc31.i.i = add nsw i32 %top21.066.i.i, 1
  %idxprom32.i.i = sext i32 %inc31.i.i to i64
  %reg34.sum.i.i = add i64 %idxprom32.i.i, 16
  %arrayidx35.i.i = getelementptr inbounds i8* %40, i64 %reg34.sum.i.i
  store i8 %conv.i.i, i8* %arrayidx35.i.i, align 1, !tbaa !1
  %43 = load %struct.rtx_def** getelementptr inbounds ([8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 15), align 8, !tbaa !10
  %44 = load %struct.rtx_def** @nan, align 8, !tbaa !10
  %call36.i.i = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %43, %struct.rtx_def* %44) #4
  tail call void @insert_insn_on_edge(%struct.rtx_def* %call36.i.i, %struct.edge_def* %e.071.i.i) #4
  br label %for.inc38.i.i

for.inc38.i.i:                                    ; preds = %if.then30.i.i, %for.body24.i.i
  %top21.1.i.i = phi i32 [ %inc31.i.i, %if.then30.i.i ], [ %top21.066.i.i, %for.body24.i.i ]
  %inserted.2.i.i = phi i32 [ 1, %if.then30.i.i ], [ %inserted.167.i.i, %for.body24.i.i ]
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, -1
  %dec39.i.i = add nsw i32 %reg20.065.i.i, -1
  %45 = trunc i64 %indvars.iv.next.i.i to i32
  %cmp23.i.i = icmp sgt i32 %45, 7
  br i1 %cmp23.i.i, label %for.body24.i.i, label %for.end40.i.i

for.end40.i.i:                                    ; preds = %for.inc38.i.i
  %top42.i.i = bitcast i8* %40 to i32*
  store i32 %top21.1.i.i, i32* %top42.i.i, align 4, !tbaa !22
  %succ_next.i.i = getelementptr inbounds %struct.edge_def* %e.071.i.i, i64 0, i32 1
  %e.0.i.i = load %struct.edge_def** %succ_next.i.i, align 8
  %tobool15.i.i = icmp eq %struct.edge_def* %e.0.i.i, null
  br i1 %tobool15.i.i, label %convert_regs_entry.exit.i, label %for.body16.i.i

convert_regs_entry.exit.i:                        ; preds = %for.end40.i.i, %for.cond14.preheader.i.i
  %inserted.0.lcssa.i.i = phi i32 [ 0, %for.cond14.preheader.i.i ], [ %inserted.2.i.i, %for.end40.i.i ]
  %46 = load %union.tree_node** @current_function_decl, align 8, !tbaa !10
  %result2.i.i.i = getelementptr inbounds %union.tree_node* %46, i64 0, i32 0, i32 11
  %47 = load %union.tree_node** %result2.i.i.i, align 8, !tbaa !28
  %call.i.i.i = tail call i32 @aggregate_value_p(%union.tree_node* %47) #4
  %tobool.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.i.i.i, label %if.end.i.i.i, label %if.end.thread.i.i

if.end.i.i.i:                                     ; preds = %convert_regs_entry.exit.i
  %48 = load %union.tree_node** %result2.i.i.i, align 8, !tbaa !28
  %rtl.i.i.i = getelementptr inbounds %union.tree_node* %48, i64 0, i32 0, i32 17
  %49 = load %struct.rtx_def** %rtl.i.i.i, align 8, !tbaa !31
  %cmp25.i.i.i = icmp eq %struct.rtx_def* %49, null
  br i1 %cmp25.i.i.i, label %if.end.thread.i.i, label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.end.i.i.i
  %type.i.i.i = getelementptr inbounds %union.tree_node* %48, i64 0, i32 0, i32 0, i32 1
  %50 = load %union.tree_node** %type.i.i.i, align 8, !tbaa !32
  %call29.i.i.i = tail call %struct.rtx_def* @ix86_function_value(%union.tree_node* %50) #4
  %cmp31.i.i.i = icmp eq %struct.rtx_def* %call29.i.i.i, null
  br i1 %cmp31.i.i.i, label %if.end.thread.i.i, label %land.lhs.true.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end30.i.i.i
  %51 = getelementptr inbounds %struct.rtx_def* %call29.i.i.i, i64 0, i32 0
  %bf.load.i.i.i = load i32* %51, align 8
  %bf.clear.i.i.i = and i32 %bf.load.i.i.i, 65535
  %cmp32.i.i.i = icmp eq i32 %bf.clear.i.i.i, 61
  br i1 %cmp32.i.i.i, label %land.lhs.true33.i.i.i, label %if.end.thread.i.i

land.lhs.true33.i.i.i:                            ; preds = %land.lhs.true.i.i.i
  %arrayidx.i.i.i = getelementptr inbounds %struct.rtx_def* %call29.i.i.i, i64 0, i32 1, i64 0
  %rtuint.i.i.i = bitcast %union.rtunion_def* %arrayidx.i.i.i to i32*
  %52 = load i32* %rtuint.i.i.i, align 4, !tbaa !4
  %53 = and i32 %52, -8
  %or.cond109.not.i.i = icmp eq i32 %53, 8
  br i1 %or.cond109.not.i.i, label %cond.true.i.i, label %if.end.thread.i.i

cond.true.i.i:                                    ; preds = %land.lhs.true33.i.i.i
  %bf.lshr.i.i = lshr i32 %bf.load.i.i.i, 16
  %bf.clear.i.i = and i32 %bf.lshr.i.i, 255
  %idxprom101.i.i = zext i32 %bf.clear.i.i to i64
  %arrayidx13.i.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom101.i.i
  %54 = load i32* %arrayidx13.i.i, align 4, !tbaa !1
  %cmp14.i.i = icmp eq i32 %54, 5
  br i1 %cmp14.i.i, label %if.end.i1.i, label %lor.rhs.i.i

lor.rhs.i.i:                                      ; preds = %cond.true.i.i
  %cmp20.i.i = icmp eq i32 %54, 6
  %phitmp.i.i = select i1 %cmp20.i.i, i32 2, i32 1
  br label %if.end.i1.i

if.end.thread.i.i:                                ; preds = %land.lhs.true33.i.i.i, %land.lhs.true.i.i.i, %if.end30.i.i.i, %if.end.i.i.i, %convert_regs_entry.exit.i
  %55 = load i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !17
  br label %if.then58.i.i

if.end.i1.i:                                      ; preds = %lor.rhs.i.i, %cond.true.i.i
  %cond53.i.i = phi i32 [ 2, %cond.true.i.i ], [ %phitmp.i.i, %lor.rhs.i.i ]
  %add54.i.i = add nsw i32 %cond53.i.i, %52
  %sub55.i.i = add nsw i32 %add54.i.i, -1
  %56 = load i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !17
  %cmp56.i.i = icmp eq i32 %52, -1
  br i1 %cmp56.i.i, label %if.then58.i.i, label %if.else.i.i

if.then58.i.i:                                    ; preds = %if.end.i1.i, %if.end.thread.i.i
  %57 = phi i8* [ %55, %if.end.thread.i.i ], [ %56, %if.end.i1.i ]
  %top.i2.i = bitcast i8* %57 to i32*
  store i32 -1, i32* %top.i2.i, align 4, !tbaa !33
  br label %convert_regs_exit.exit.i

if.else.i.i:                                      ; preds = %if.end.i1.i
  %sub59.i.i = sub nsw i32 %sub55.i.i, %52
  %top60.i.i = bitcast i8* %56 to i32*
  store i32 %sub59.i.i, i32* %top60.i.i, align 4, !tbaa !33
  %reg_set.i3.i = getelementptr inbounds i8* %56, i64 8
  %58 = bitcast i8* %reg_set.i3.i to i64*
  %59 = sext i32 %52 to i64
  br label %for.body.i7.i

for.body.i7.i:                                    ; preds = %for.body.i7.i, %if.else.i.i
  %indvars.iv17.i = phi i64 [ %indvars.iv.next18.i, %for.body.i7.i ], [ %59, %if.else.i.i ]
  %60 = trunc i64 %indvars.iv17.i to i32
  %conv63.i.i = trunc i64 %indvars.iv17.i to i8
  %sub64.i.i = sub nsw i32 %sub55.i.i, %60
  %idxprom65.i.i = sext i32 %sub64.i.i to i64
  %reg66.sum.i.i = add i64 %idxprom65.i.i, 16
  %arrayidx67.i.i = getelementptr inbounds i8* %56, i64 %reg66.sum.i.i
  store i8 %conv63.i.i, i8* %arrayidx67.i.i, align 1, !tbaa !1
  %sh_prom.i.i = and i64 %indvars.iv17.i, 4294967295
  %shl.i5.i = shl i64 1, %sh_prom.i.i
  %61 = load i64* %58, align 8, !tbaa !34
  %or.i6.i = or i64 %shl.i5.i, %61
  store i64 %or.i6.i, i64* %58, align 8, !tbaa !34
  %indvars.iv.next18.i = add nsw i64 %indvars.iv17.i, 1
  %62 = trunc i64 %indvars.iv.next18.i to i32
  %cmp61.i.i = icmp sgt i32 %add54.i.i, %62
  br i1 %cmp61.i.i, label %for.body.i7.i, label %convert_regs_exit.exit.loopexit.i

convert_regs_exit.exit.loopexit.i:                ; preds = %for.body.i7.i
  %.pre.i = load i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !17
  br label %convert_regs_exit.exit.i

convert_regs_exit.exit.i:                         ; preds = %convert_regs_exit.exit.loopexit.i, %if.then58.i.i
  %63 = phi i8* [ %.pre.i, %convert_regs_exit.exit.loopexit.i ], [ %57, %if.then58.i.i ]
  %done.i = getelementptr inbounds i8* %63, i64 56
  %64 = bitcast i8* %done.i to i32*
  store i32 1, i32* %64, align 4, !tbaa !35
  %e.012.i = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8
  %tobool13.i = icmp eq %struct.edge_def* %e.012.i, null
  br i1 %tobool13.i, label %for.cond2.preheader.i, label %for.body.i

for.cond2.preheader.i:                            ; preds = %for.body.i, %convert_regs_exit.exit.i
  %inserted.0.lcssa.i = phi i32 [ %inserted.0.lcssa.i.i, %convert_regs_exit.exit.i ], [ %or.i, %for.body.i ]
  %65 = load i32* @n_basic_blocks, align 4, !tbaa !4
  %cmp9.i = icmp sgt i32 %65, 0
  br i1 %cmp9.i, label %for.body3.i, label %for.end25.i

for.body.i:                                       ; preds = %convert_regs_exit.exit.i, %for.body.i
  %e.015.i = phi %struct.edge_def* [ %e.0.i, %for.body.i ], [ %e.012.i, %convert_regs_exit.exit.i ]
  %inserted.014.i = phi i32 [ %or.i, %for.body.i ], [ %inserted.0.lcssa.i.i, %convert_regs_exit.exit.i ]
  %dest.i = getelementptr inbounds %struct.edge_def* %e.015.i, i64 0, i32 3
  %66 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !27
  %call1.i = tail call fastcc i32 @convert_regs_2(%struct._IO_FILE* %file, %struct.basic_block_def* %66) #4
  %or.i = or i32 %call1.i, %inserted.014.i
  %succ_next.i = getelementptr inbounds %struct.edge_def* %e.015.i, i64 0, i32 1
  %e.0.i = load %struct.edge_def** %succ_next.i, align 8
  %tobool.i = icmp eq %struct.edge_def* %e.0.i, null
  br i1 %tobool.i, label %for.cond2.preheader.i, label %for.body.i

for.body3.i:                                      ; preds = %for.cond2.preheader.i, %for.inc23.i
  %67 = phi i32 [ %76, %for.inc23.i ], [ %65, %for.cond2.preheader.i ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc23.i ], [ 0, %for.cond2.preheader.i ]
  %inserted.111.i = phi i32 [ %inserted.2.i, %for.inc23.i ], [ %inserted.0.lcssa.i, %for.cond2.preheader.i ]
  %68 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !10
  %data.i = getelementptr inbounds %struct.varray_head_tag* %68, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %indvars.iv.i
  %69 = load %struct.basic_block_def** %arrayidx.i, align 8, !tbaa !10
  %aux.i = getelementptr inbounds %struct.basic_block_def* %69, i64 0, i32 10
  %70 = load i8** %aux.i, align 8, !tbaa !17
  %done4.i = getelementptr inbounds i8* %70, i64 56
  %71 = bitcast i8* %done4.i to i32*
  %72 = load i32* %71, align 4, !tbaa !35
  %tobool5.i = icmp eq i32 %72, 0
  br i1 %tobool5.i, label %if.then.i, label %for.inc23.i

if.then.i:                                        ; preds = %for.body3.i
  %top.i = bitcast i8* %70 to i32*
  store i32 -1, i32* %top.i, align 4, !tbaa !22
  %reg_set.i = getelementptr inbounds i8* %70, i64 8
  %73 = bitcast i8* %reg_set.i to i64*
  %74 = load i64* %73, align 8, !tbaa !26
  %and.i = and i64 %74, 32768
  %tobool10.i = icmp eq i64 %and.i, 0
  br i1 %tobool10.i, label %for.inc18.i, label %if.then11.i

if.then11.i:                                      ; preds = %if.then.i
  store i32 0, i32* %top.i, align 4, !tbaa !22
  %arrayidx17.i = getelementptr inbounds i8* %70, i64 16
  store i8 15, i8* %arrayidx17.i, align 1, !tbaa !1
  br label %for.inc18.i

for.inc18.i:                                      ; preds = %if.then11.i, %if.then.i
  %75 = phi i32 [ 1, %if.then11.i ], [ 0, %if.then.i ]
  %and.1.i = and i64 %74, 16384
  %tobool10.1.i = icmp eq i64 %and.1.i, 0
  br i1 %tobool10.1.i, label %for.inc18.1.i, label %if.then11.1.i

for.inc23.i:                                      ; preds = %for.inc18.7.i, %for.body3.i
  %76 = phi i32 [ %67, %for.body3.i ], [ %.pre26.i, %for.inc18.7.i ]
  %inserted.2.i = phi i32 [ %inserted.111.i, %for.body3.i ], [ %or21.i, %for.inc18.7.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %77 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp slt i32 %77, %76
  br i1 %cmp.i, label %for.body3.i, label %for.end25.i

for.end25.i:                                      ; preds = %for.inc23.i, %for.cond2.preheader.i
  %inserted.1.lcssa.i = phi i32 [ %inserted.0.lcssa.i, %for.cond2.preheader.i ], [ %inserted.2.i, %for.inc23.i ]
  tail call void @fixup_abnormal_edges() #4
  %tobool26.i = icmp eq i32 %inserted.1.lcssa.i, 0
  br i1 %tobool26.i, label %if.end28.i, label %if.then27.i

if.then27.i:                                      ; preds = %for.end25.i
  tail call void @commit_edge_insertions() #4
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.then27.i, %for.end25.i
  %tobool29.i = icmp eq %struct._IO_FILE* %file, null
  br i1 %tobool29.i, label %convert_regs.exit, label %if.then30.i

if.then30.i:                                      ; preds = %if.end28.i
  %call31.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file) #4
  br label %convert_regs.exit

if.then11.1.i:                                    ; preds = %for.inc18.i
  store i32 %75, i32* %top.i, align 4, !tbaa !22
  %idxprom14.1.i128 = zext i32 %75 to i64
  %reg16.sum.1.i129 = or i64 %idxprom14.1.i128, 16
  %arrayidx17.1.i = getelementptr inbounds i8* %70, i64 %reg16.sum.1.i129
  store i8 14, i8* %arrayidx17.1.i, align 1, !tbaa !1
  %.pre20.i = load i64* %73, align 8, !tbaa !26
  br label %for.inc18.1.i

for.inc18.1.i:                                    ; preds = %if.then11.1.i, %for.inc18.i
  %78 = phi i64 [ %.pre20.i, %if.then11.1.i ], [ %74, %for.inc18.i ]
  %and.2.i = and i64 %78, 8192
  %tobool10.2.i = icmp eq i64 %and.2.i, 0
  br i1 %tobool10.2.i, label %for.inc18.2.i, label %if.then11.2.i

if.then11.2.i:                                    ; preds = %for.inc18.1.i
  %79 = load i32* %top.i, align 4, !tbaa !22
  %inc.2.i = add nsw i32 %79, 1
  store i32 %inc.2.i, i32* %top.i, align 4, !tbaa !22
  %idxprom14.2.i = sext i32 %inc.2.i to i64
  %reg16.sum.2.i = add i64 %idxprom14.2.i, 16
  %arrayidx17.2.i = getelementptr inbounds i8* %70, i64 %reg16.sum.2.i
  store i8 13, i8* %arrayidx17.2.i, align 1, !tbaa !1
  %.pre21.i = load i64* %73, align 8, !tbaa !26
  br label %for.inc18.2.i

for.inc18.2.i:                                    ; preds = %if.then11.2.i, %for.inc18.1.i
  %80 = phi i64 [ %.pre21.i, %if.then11.2.i ], [ %78, %for.inc18.1.i ]
  %and.3.i = and i64 %80, 4096
  %tobool10.3.i = icmp eq i64 %and.3.i, 0
  br i1 %tobool10.3.i, label %for.inc18.3.i, label %if.then11.3.i

if.then11.3.i:                                    ; preds = %for.inc18.2.i
  %81 = load i32* %top.i, align 4, !tbaa !22
  %inc.3.i = add nsw i32 %81, 1
  store i32 %inc.3.i, i32* %top.i, align 4, !tbaa !22
  %idxprom14.3.i = sext i32 %inc.3.i to i64
  %reg16.sum.3.i = add i64 %idxprom14.3.i, 16
  %arrayidx17.3.i = getelementptr inbounds i8* %70, i64 %reg16.sum.3.i
  store i8 12, i8* %arrayidx17.3.i, align 1, !tbaa !1
  %.pre22.i = load i64* %73, align 8, !tbaa !26
  br label %for.inc18.3.i

for.inc18.3.i:                                    ; preds = %if.then11.3.i, %for.inc18.2.i
  %82 = phi i64 [ %.pre22.i, %if.then11.3.i ], [ %80, %for.inc18.2.i ]
  %and.4.i = and i64 %82, 2048
  %tobool10.4.i = icmp eq i64 %and.4.i, 0
  br i1 %tobool10.4.i, label %for.inc18.4.i, label %if.then11.4.i

if.then11.4.i:                                    ; preds = %for.inc18.3.i
  %83 = load i32* %top.i, align 4, !tbaa !22
  %inc.4.i = add nsw i32 %83, 1
  store i32 %inc.4.i, i32* %top.i, align 4, !tbaa !22
  %idxprom14.4.i = sext i32 %inc.4.i to i64
  %reg16.sum.4.i = add i64 %idxprom14.4.i, 16
  %arrayidx17.4.i = getelementptr inbounds i8* %70, i64 %reg16.sum.4.i
  store i8 11, i8* %arrayidx17.4.i, align 1, !tbaa !1
  %.pre23.i = load i64* %73, align 8, !tbaa !26
  br label %for.inc18.4.i

for.inc18.4.i:                                    ; preds = %if.then11.4.i, %for.inc18.3.i
  %84 = phi i64 [ %.pre23.i, %if.then11.4.i ], [ %82, %for.inc18.3.i ]
  %and.5.i = and i64 %84, 1024
  %tobool10.5.i = icmp eq i64 %and.5.i, 0
  br i1 %tobool10.5.i, label %for.inc18.5.i, label %if.then11.5.i

if.then11.5.i:                                    ; preds = %for.inc18.4.i
  %85 = load i32* %top.i, align 4, !tbaa !22
  %inc.5.i = add nsw i32 %85, 1
  store i32 %inc.5.i, i32* %top.i, align 4, !tbaa !22
  %idxprom14.5.i = sext i32 %inc.5.i to i64
  %reg16.sum.5.i = add i64 %idxprom14.5.i, 16
  %arrayidx17.5.i = getelementptr inbounds i8* %70, i64 %reg16.sum.5.i
  store i8 10, i8* %arrayidx17.5.i, align 1, !tbaa !1
  %.pre24.i = load i64* %73, align 8, !tbaa !26
  br label %for.inc18.5.i

for.inc18.5.i:                                    ; preds = %if.then11.5.i, %for.inc18.4.i
  %86 = phi i64 [ %.pre24.i, %if.then11.5.i ], [ %84, %for.inc18.4.i ]
  %and.6.i = and i64 %86, 512
  %tobool10.6.i = icmp eq i64 %and.6.i, 0
  br i1 %tobool10.6.i, label %for.inc18.6.i, label %if.then11.6.i

if.then11.6.i:                                    ; preds = %for.inc18.5.i
  %87 = load i32* %top.i, align 4, !tbaa !22
  %inc.6.i = add nsw i32 %87, 1
  store i32 %inc.6.i, i32* %top.i, align 4, !tbaa !22
  %idxprom14.6.i = sext i32 %inc.6.i to i64
  %reg16.sum.6.i = add i64 %idxprom14.6.i, 16
  %arrayidx17.6.i = getelementptr inbounds i8* %70, i64 %reg16.sum.6.i
  store i8 9, i8* %arrayidx17.6.i, align 1, !tbaa !1
  %.pre25.i = load i64* %73, align 8, !tbaa !26
  br label %for.inc18.6.i

for.inc18.6.i:                                    ; preds = %if.then11.6.i, %for.inc18.5.i
  %88 = phi i64 [ %.pre25.i, %if.then11.6.i ], [ %86, %for.inc18.5.i ]
  %and.7.i = and i64 %88, 256
  %tobool10.7.i = icmp eq i64 %and.7.i, 0
  br i1 %tobool10.7.i, label %for.inc18.7.i, label %if.then11.7.i

if.then11.7.i:                                    ; preds = %for.inc18.6.i
  %89 = load i32* %top.i, align 4, !tbaa !22
  %inc.7.i = add nsw i32 %89, 1
  store i32 %inc.7.i, i32* %top.i, align 4, !tbaa !22
  %idxprom14.7.i = sext i32 %inc.7.i to i64
  %reg16.sum.7.i = add i64 %idxprom14.7.i, 16
  %arrayidx17.7.i = getelementptr inbounds i8* %70, i64 %reg16.sum.7.i
  store i8 8, i8* %arrayidx17.7.i, align 1, !tbaa !1
  br label %for.inc18.7.i

for.inc18.7.i:                                    ; preds = %if.then11.7.i, %for.inc18.6.i
  %call20.i = tail call fastcc i32 @convert_regs_2(%struct._IO_FILE* %file, %struct.basic_block_def* %69) #4
  %or21.i = or i32 %call20.i, %inserted.111.i
  %.pre26.i = load i32* @n_basic_blocks, align 4, !tbaa !4
  br label %for.inc23.i

convert_regs.exit:                                ; preds = %if.end28.i, %if.then30.i
  tail call void @free_aux_for_blocks() #4
  br label %return

return:                                           ; preds = %for.cond, %for.end, %convert_regs.exit
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #3

declare void @split_all_insns(i32) #1

declare void @find_basic_blocks(%struct.rtx_def*, i32, %struct._IO_FILE*) #1

declare i32 @max_reg_num() #1

declare i32 @count_or_remove_death_notes(%struct.simple_bitmap_def*, i32) #1

declare void @life_analysis(%struct.rtx_def*, %struct._IO_FILE*, i32) #1

declare zeroext i1 @mark_dfs_back_edges() #1

declare void @alloc_aux_for_blocks(i32) #1

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare %struct.rtx_def* @gen_lowpart(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) #1

declare i32 @get_max_uid() #1

declare %struct.varray_head_tag* @varray_init(i64, i64, i8*) #1

declare void @free_aux_for_blocks() #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @convert_regs_2(%struct._IO_FILE* %file, %struct.basic_block_def* %block) #0 {
entry:
  %regstack.i = alloca %struct.stack_def, align 8
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !4
  %conv = sext i32 %0 to i64
  %mul = shl nsw i64 %conv, 3
  %call = call noalias i8* @xmalloc(i64 %mul) #4
  %1 = bitcast i8* %call to %struct.basic_block_def**
  %incdec.ptr = getelementptr inbounds i8* %call, i64 8
  %2 = bitcast i8* %incdec.ptr to %struct.basic_block_def**
  store %struct.basic_block_def* %block, %struct.basic_block_def** %1, align 8, !tbaa !10
  %3 = bitcast %struct.stack_def* %regstack.i to i8*
  %tobool89.i = icmp ne %struct._IO_FILE* %file, null
  %reg_set.i = getelementptr inbounds %struct.stack_def* %regstack.i, i64 0, i32 1
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %sp.0 = phi %struct.basic_block_def** [ %2, %entry ], [ %sp.1.lcssa, %do.cond ]
  %inserted.0 = phi i32 [ 0, %entry ], [ %or, %do.cond ]
  %incdec.ptr1 = getelementptr inbounds %struct.basic_block_def** %sp.0, i64 -1
  %4 = load %struct.basic_block_def** %incdec.ptr1, align 8, !tbaa !10
  call void @llvm.lifetime.start(i64 24, i8* %3) #4
  %aux.i = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 10
  %5 = load i8** %aux.i, align 8, !tbaa !17
  %pred.i = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 4
  %e.0344.i = load %struct.edge_def** %pred.i, align 8
  %tobool345.i = icmp eq %struct.edge_def* %e.0344.i, null
  br i1 %tobool345.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %do.body, %for.inc.i
  %e.0347.i = phi %struct.edge_def* [ %e.0.i, %for.inc.i ], [ %e.0344.i, %do.body ]
  %beste.0346.i = phi %struct.edge_def* [ %beste.1.i, %for.inc.i ], [ null, %do.body ]
  %flags.i = getelementptr inbounds %struct.edge_def* %e.0347.i, i64 0, i32 6
  %6 = load i32* %flags.i, align 4, !tbaa !13
  %and.i = and i32 %6, 32
  %tobool1.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.i, label %if.else.i, label %for.inc.i

if.else.i:                                        ; preds = %for.body.i
  %tobool2.i = icmp eq %struct.edge_def* %beste.0346.i, null
  br i1 %tobool2.i, label %for.inc.i, label %if.else4.i

if.else4.i:                                       ; preds = %if.else.i
  %src.i = getelementptr inbounds %struct.edge_def* %beste.0346.i, i64 0, i32 2
  %7 = load %struct.basic_block_def** %src.i, align 8, !tbaa !16
  %frequency.i = getelementptr inbounds %struct.basic_block_def* %7, i64 0, i32 14
  %8 = load i32* %frequency.i, align 4, !tbaa !36
  %probability.i = getelementptr inbounds %struct.edge_def* %beste.0346.i, i64 0, i32 7
  %9 = load i32* %probability.i, align 4, !tbaa !37
  %mul.i = mul nsw i32 %9, %8
  %add.i = add nsw i32 %mul.i, 5000
  %div.i = sdiv i32 %add.i, 10000
  %src5.i = getelementptr inbounds %struct.edge_def* %e.0347.i, i64 0, i32 2
  %10 = load %struct.basic_block_def** %src5.i, align 8, !tbaa !16
  %frequency6.i = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 14
  %11 = load i32* %frequency6.i, align 4, !tbaa !36
  %probability7.i = getelementptr inbounds %struct.edge_def* %e.0347.i, i64 0, i32 7
  %12 = load i32* %probability7.i, align 4, !tbaa !37
  %mul8.i = mul nsw i32 %12, %11
  %add9.i = add nsw i32 %mul8.i, 5000
  %div10.i = sdiv i32 %add9.i, 10000
  %cmp.i = icmp slt i32 %div.i, %div10.i
  br i1 %cmp.i, label %for.inc.i, label %if.else12.i

if.else12.i:                                      ; preds = %if.else4.i
  %cmp25.i = icmp sgt i32 %div.i, %div10.i
  br i1 %cmp25.i, label %for.inc.i, label %if.else27.i

if.else27.i:                                      ; preds = %if.else12.i
  %count.i = getelementptr inbounds %struct.edge_def* %beste.0346.i, i64 0, i32 8
  %13 = load i64* %count.i, align 8, !tbaa !38
  %count28.i = getelementptr inbounds %struct.edge_def* %e.0347.i, i64 0, i32 8
  %14 = load i64* %count28.i, align 8, !tbaa !38
  %cmp29.i = icmp slt i64 %13, %14
  br i1 %cmp29.i, label %for.inc.i, label %if.else31.i

if.else31.i:                                      ; preds = %if.else27.i
  %cmp34.i = icmp sgt i64 %13, %14
  br i1 %cmp34.i, label %for.inc.i, label %if.else36.i

if.else36.i:                                      ; preds = %if.else31.i
  %succ.i = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 5
  %15 = load %struct.edge_def** %succ.i, align 8, !tbaa !39
  %succ_next.i = getelementptr inbounds %struct.edge_def* %15, i64 0, i32 1
  %16 = load %struct.edge_def** %succ_next.i, align 8, !tbaa !40
  %tobool38.i = icmp eq %struct.edge_def* %16, null
  br i1 %tobool38.i, label %land.end.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.else36.i
  %dest.i = getelementptr inbounds %struct.edge_def* %e.0347.i, i64 0, i32 3
  %17 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !27
  %pred39.i = getelementptr inbounds %struct.basic_block_def* %17, i64 0, i32 4
  %18 = load %struct.edge_def** %pred39.i, align 8, !tbaa !41
  %pred_next.i = getelementptr inbounds %struct.edge_def* %18, i64 0, i32 0
  %19 = load %struct.edge_def** %pred_next.i, align 8, !tbaa !42
  %tobool40.i = icmp ne %struct.edge_def* %19, null
  br label %land.end.i

land.end.i:                                       ; preds = %land.rhs.i, %if.else36.i
  %20 = phi i1 [ false, %if.else36.i ], [ %tobool40.i, %land.rhs.i ]
  %succ43.i = getelementptr inbounds %struct.basic_block_def* %7, i64 0, i32 5
  %21 = load %struct.edge_def** %succ43.i, align 8, !tbaa !39
  %succ_next44.i = getelementptr inbounds %struct.edge_def* %21, i64 0, i32 1
  %22 = load %struct.edge_def** %succ_next44.i, align 8, !tbaa !40
  %tobool45.i = icmp eq %struct.edge_def* %22, null
  br i1 %tobool45.i, label %land.end.land.end51_crit_edge.i, label %land.end51.i

land.end.land.end51_crit_edge.i:                  ; preds = %land.end.i
  br i1 %20, label %if.then57.i, label %if.else67.i

land.end51.i:                                     ; preds = %land.end.i
  %dest47.i = getelementptr inbounds %struct.edge_def* %beste.0346.i, i64 0, i32 3
  %23 = load %struct.basic_block_def** %dest47.i, align 8, !tbaa !27
  %pred48.i = getelementptr inbounds %struct.basic_block_def* %23, i64 0, i32 4
  %24 = load %struct.edge_def** %pred48.i, align 8, !tbaa !41
  %pred_next49.i = getelementptr inbounds %struct.edge_def* %24, i64 0, i32 0
  %25 = load %struct.edge_def** %pred_next49.i, align 8, !tbaa !42
  %tobool50.i = icmp ne %struct.edge_def* %25, null
  %cmp55.i = xor i1 %20, %tobool50.i
  br i1 %cmp55.i, label %if.then57.i, label %if.else67.i

if.then57.i:                                      ; preds = %land.end51.i, %land.end.land.end51_crit_edge.i
  br i1 %tobool38.i, label %for.inc.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then57.i
  %dest62.i = getelementptr inbounds %struct.edge_def* %e.0347.i, i64 0, i32 3
  %26 = load %struct.basic_block_def** %dest62.i, align 8, !tbaa !27
  %pred63.i = getelementptr inbounds %struct.basic_block_def* %26, i64 0, i32 4
  %27 = load %struct.edge_def** %pred63.i, align 8, !tbaa !41
  %pred_next64.i = getelementptr inbounds %struct.edge_def* %27, i64 0, i32 0
  %28 = load %struct.edge_def** %pred_next64.i, align 8, !tbaa !42
  %tobool65.i = icmp eq %struct.edge_def* %28, null
  %beste.0.e.0.i = select i1 %tobool65.i, %struct.edge_def* %beste.0346.i, %struct.edge_def* %e.0347.i
  br label %for.inc.i

if.else67.i:                                      ; preds = %land.end51.i, %land.end.land.end51_crit_edge.i
  %index.i = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 11
  %29 = load i32* %index.i, align 4, !tbaa !43
  %index70.i = getelementptr inbounds %struct.basic_block_def* %7, i64 0, i32 11
  %30 = load i32* %index70.i, align 4, !tbaa !43
  %cmp71.i = icmp slt i32 %29, %30
  %e.0.beste.0.i = select i1 %cmp71.i, %struct.edge_def* %e.0347.i, %struct.edge_def* %beste.0346.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else67.i, %land.lhs.true.i, %if.then57.i, %if.else31.i, %if.else27.i, %if.else12.i, %if.else4.i, %if.else.i, %for.body.i
  %beste.1.i = phi %struct.edge_def* [ %beste.0346.i, %for.body.i ], [ %beste.0346.i, %if.else12.i ], [ %beste.0346.i, %if.else31.i ], [ %beste.0346.i, %if.then57.i ], [ %e.0347.i, %if.else.i ], [ %e.0347.i, %if.else4.i ], [ %e.0347.i, %if.else27.i ], [ %beste.0.e.0.i, %land.lhs.true.i ], [ %e.0.beste.0.i, %if.else67.i ]
  %pred_next82.i = getelementptr inbounds %struct.edge_def* %e.0347.i, i64 0, i32 0
  %e.0.i = load %struct.edge_def** %pred_next82.i, align 8
  %tobool.i = icmp eq %struct.edge_def* %e.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.inc.i, %do.body
  %beste.0.lcssa.i = phi %struct.edge_def* [ null, %do.body ], [ %beste.1.i, %for.inc.i ]
  %stack_in.i = bitcast i8* %5 to %struct.stack_def*
  %top.i = bitcast i8* %5 to i32*
  %31 = load i32* %top.i, align 4, !tbaa !22
  %cmp83.i = icmp eq i32 %31, -2
  br i1 %cmp83.i, label %if.then85.i, label %if.end88.i

if.then85.i:                                      ; preds = %for.end.i
  %call.i = call fastcc zeroext i1 @compensate_edge(%struct.edge_def* %beste.0.lcssa.i, %struct._IO_FILE* %file) #4
  %conv86.i = zext i1 %call.i to i32
  br label %if.end88.i

if.end88.i:                                       ; preds = %if.then85.i, %for.end.i
  %beste.2.i = phi %struct.edge_def* [ %beste.0.lcssa.i, %if.then85.i ], [ null, %for.end.i ]
  %inserted.0.i = phi i32 [ %conv86.i, %if.then85.i ], [ 0, %for.end.i ]
  store %struct.basic_block_def* %4, %struct.basic_block_def** @current_block, align 8, !tbaa !10
  br i1 %tobool89.i, label %if.then90.i, label %if.end94.i

if.then90.i:                                      ; preds = %if.end88.i
  %index91.i = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 11
  %32 = load i32* %index91.i, align 4, !tbaa !43
  %call92.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([30 x i8]* @.str1, i64 0, i64 0), i32 %32) #4
  call fastcc void @print_stack(%struct._IO_FILE* %file, %struct.stack_def* %stack_in.i) #4
  br label %if.end94.i

if.end94.i:                                       ; preds = %if.then90.i, %if.end88.i
  %head.i = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 0
  %33 = load %struct.rtx_def** %head.i, align 8, !tbaa !44
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %5, i64 24, i32 8, i1 false) #4, !tbaa.struct !45
  %end.i = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 1
  br label %do.body.i

do.body.i:                                        ; preds = %do.cond.i, %if.end94.i
  %next.0.i = phi %struct.rtx_def* [ %33, %if.end94.i ], [ %..i, %do.cond.i ]
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %next.0.i, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !10
  %cmp96.i = icmp eq %struct.rtx_def* %34, null
  br i1 %cmp96.i, label %if.then98.i, label %if.end99.i

if.then98.i:                                      ; preds = %do.body.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2683, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.convert_regs_1, i64 0, i64 0)) #6
  unreachable

if.end99.i:                                       ; preds = %do.body.i
  %35 = load %struct.rtx_def** %end.i, align 8, !tbaa !47
  %cmp100.i = icmp eq %struct.rtx_def* %next.0.i, %35
  %..i = select i1 %cmp100.i, %struct.rtx_def* null, %struct.rtx_def* %34
  %36 = getelementptr inbounds %struct.rtx_def* %next.0.i, i64 0, i32 0
  %bf.load.i.i = load i32* %36, align 8
  %bf.clear.i.i = and i32 %bf.load.i.i, 65535
  %idxprom36.i.i = zext i32 %bf.clear.i.i to i64
  %arrayidx.i.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom36.i.i
  %37 = load i8* %arrayidx.i.i, align 1, !tbaa !1
  %cmp.i.i = icmp eq i8 %37, 105
  %38 = load %struct.varray_head_tag** @stack_regs_mentioned_data, align 8
  %tobool.i.i = icmp ne %struct.varray_head_tag* %38, null
  %or.cond.i.i = and i1 %cmp.i.i, %tobool.i.i
  br i1 %or.cond.i.i, label %if.end.i.i, label %lor.lhs.false.i

if.end.i.i:                                       ; preds = %if.end99.i
  %fld.i.i = getelementptr inbounds %struct.rtx_def* %next.0.i, i64 0, i32 1
  %rtint.i.i = bitcast [1 x %union.rtunion_def]* %fld.i.i to i32*
  %39 = load i32* %rtint.i.i, align 4, !tbaa !4
  %num_elements.i.i = getelementptr inbounds %struct.varray_head_tag* %38, i64 0, i32 0
  %40 = load i64* %num_elements.i.i, align 8, !tbaa !6
  %conv3.i.i = trunc i64 %40 to i32
  %cmp4.i.i = icmp ult i32 %39, %conv3.i.i
  br i1 %cmp4.i.i, label %if.end8.i.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %if.end.i.i
  %div.i.i = udiv i32 %39, 20
  %add.i.i = add i32 %div.i.i, %39
  %conv7.i.i = zext i32 %add.i.i to i64
  %call.i.i = call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %38, i64 %conv7.i.i) #4
  store %struct.varray_head_tag* %call.i.i, %struct.varray_head_tag** @stack_regs_mentioned_data, align 8, !tbaa !10
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then6.i.i, %if.end.i.i
  %41 = phi %struct.varray_head_tag* [ %38, %if.end.i.i ], [ %call.i.i, %if.then6.i.i ]
  %idxprom9.i.i = zext i32 %39 to i64
  %data.i.i = getelementptr inbounds %struct.varray_head_tag* %41, i64 0, i32 4
  %c.i.i = bitcast %union.varray_data_tag* %data.i.i to [1 x i8]*
  %arrayidx10.i.i = getelementptr inbounds [1 x i8]* %c.i.i, i64 0, i64 %idxprom9.i.i
  %42 = load i8* %arrayidx10.i.i, align 1, !tbaa !1
  %conv11.i.i = sext i8 %42 to i32
  %cmp12.i.i = icmp eq i8 %42, 0
  br i1 %cmp12.i.i, label %if.then14.i.i, label %stack_regs_mentioned.exit.i

if.then14.i.i:                                    ; preds = %if.end8.i.i
  %arrayidx16.i.i = getelementptr inbounds %struct.rtx_def* %next.0.i, i64 0, i32 1, i64 3
  %rtx.i.i = bitcast %union.rtunion_def* %arrayidx16.i.i to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx.i.i, align 8, !tbaa !10
  %call17.i.i = call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %43) #4
  %tobool18.i.i = icmp ne i32 %call17.i.i, 0
  %cond.i.i = select i1 %tobool18.i.i, i32 1, i32 2
  %conv19.i.i = trunc i32 %cond.i.i to i8
  store i8 %conv19.i.i, i8* %arrayidx10.i.i, align 1, !tbaa !1
  br label %stack_regs_mentioned.exit.i

stack_regs_mentioned.exit.i:                      ; preds = %if.then14.i.i, %if.end8.i.i
  %test.0.i.i = phi i32 [ %cond.i.i, %if.then14.i.i ], [ %conv11.i.i, %if.end8.i.i ]
  %cmp25.i.i = icmp eq i32 %test.0.i.i, 1
  br i1 %cmp25.i.i, label %if.then108.i, label %stack_regs_mentioned.exit.lor.lhs.false_crit_edge.i

stack_regs_mentioned.exit.lor.lhs.false_crit_edge.i: ; preds = %stack_regs_mentioned.exit.i
  %bf.load.pre.i = load i32* %36, align 8
  br label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %stack_regs_mentioned.exit.lor.lhs.false_crit_edge.i, %if.end99.i
  %bf.load.i = phi i32 [ %bf.load.pre.i, %stack_regs_mentioned.exit.lor.lhs.false_crit_edge.i ], [ %bf.load.i.i, %if.end99.i ]
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp106.i = icmp eq i32 %bf.clear.i, 34
  br i1 %cmp106.i, label %if.then108.i, label %do.cond.i

if.then108.i:                                     ; preds = %lor.lhs.false.i, %stack_regs_mentioned.exit.i
  br i1 %tobool89.i, label %if.then110.i, label %if.end114.i

if.then110.i:                                     ; preds = %if.then108.i
  %arrayidx112.i = getelementptr inbounds %struct.rtx_def* %next.0.i, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx112.i to i32*
  %44 = load i32* %rtint.i, align 4, !tbaa !4
  %call113.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([24 x i8]* @.str3, i64 0, i64 0), i32 %44) #4
  call fastcc void @print_stack(%struct._IO_FILE* %file, %struct.stack_def* %regstack.i) #4
  br label %if.end114.i

if.end114.i:                                      ; preds = %if.then110.i, %if.then108.i
  call fastcc void @subst_stack_regs(%struct.rtx_def* %next.0.i, %struct.stack_def* %regstack.i) #4
  br label %do.cond.i

do.cond.i:                                        ; preds = %if.end114.i, %lor.lhs.false.i
  %tobool116.i = icmp eq %struct.rtx_def* %..i, null
  br i1 %tobool116.i, label %do.end.i, label %do.body.i

do.end.i:                                         ; preds = %do.cond.i
  br i1 %tobool89.i, label %if.then118.i, label %if.end132.i

if.then118.i:                                     ; preds = %do.end.i
  %45 = call i64 @fwrite(i8* getelementptr inbounds ([26 x i8]* @.str4, i64 0, i64 0), i64 25, i64 1, %struct._IO_FILE* %file) #4
  %out_reg_set.i = getelementptr inbounds i8* %5, i64 48
  %46 = bitcast i8* %out_reg_set.i to i64*
  %47 = load i64* %46, align 8, !tbaa !24
  %and124.i = and i64 %47, 256
  %tobool125.i = icmp eq i64 %and124.i, 0
  br i1 %tobool125.i, label %for.inc129.i, label %if.then126.i

if.then126.i:                                     ; preds = %if.then118.i
  %call127.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 8) #4
  %.pre.i = load i64* %46, align 8, !tbaa !24
  br label %for.inc129.i

for.inc129.i:                                     ; preds = %if.then126.i, %if.then118.i
  %48 = phi i64 [ %47, %if.then118.i ], [ %.pre.i, %if.then126.i ]
  %and124.1.i = and i64 %48, 512
  %tobool125.1.i = icmp eq i64 %and124.1.i, 0
  br i1 %tobool125.1.i, label %for.inc129.1.i, label %if.then126.1.i

if.end132.i:                                      ; preds = %for.inc129.7.i, %do.end.i
  %49 = load %struct.rtx_def** %end.i, align 8, !tbaa !47
  %50 = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 0
  %bf.load134.i = load i32* %50, align 8
  %bf.clear135.i = and i32 %bf.load134.i, 65535
  %cmp136.i = icmp eq i32 %bf.clear135.i, 33
  br i1 %cmp136.i, label %if.then138.i, label %for.cond143.preheader.i

if.then138.i:                                     ; preds = %if.end132.i
  %arrayidx140.i = getelementptr inbounds %struct.rtx_def* %49, i64 0, i32 1, i64 1
  %rtx141.i = bitcast %union.rtunion_def* %arrayidx140.i to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx141.i, align 8, !tbaa !10
  br label %for.cond143.preheader.i

for.cond143.preheader.i:                          ; preds = %if.then138.i, %if.end132.i
  %insn.1.ph.i = phi %struct.rtx_def* [ %49, %if.end132.i ], [ %51, %if.then138.i ]
  %out_reg_set147.i = getelementptr inbounds i8* %5, i64 48
  %52 = bitcast i8* %out_reg_set147.i to i64*
  br i1 %tobool89.i, label %for.body146.us.i, label %for.body146.i

for.body146.us.i:                                 ; preds = %for.cond143.preheader.i, %for.inc167.us.i
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc167.us.i ], [ 8, %for.cond143.preheader.i ]
  %insn.1342.us.i = phi %struct.rtx_def* [ %insn.2.us.i, %for.inc167.us.i ], [ %insn.1.ph.i, %for.cond143.preheader.i ]
  %53 = load i64* %52, align 8, !tbaa !24
  %shl149.us.i = shl i64 1, %indvars.iv
  %and150.us.i = and i64 %53, %shl149.us.i
  %tobool151.us.i = icmp eq i64 %and150.us.i, 0
  br i1 %tobool151.us.i, label %for.inc167.us.i, label %land.lhs.true152.us.i

land.lhs.true152.us.i:                            ; preds = %for.body146.us.i
  %54 = load i64* %reg_set.i, align 8, !tbaa !34
  %and155.us.i = and i64 %54, %shl149.us.i
  %tobool156.us.i = icmp eq i64 %and155.us.i, 0
  br i1 %tobool156.us.i, label %if.end161.us.i, label %for.inc167.us.i

if.end161.us.i:                                   ; preds = %land.lhs.true152.us.i
  %55 = trunc i64 %indvars.iv to i32
  %call160.us.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([35 x i8]* @.str7, i64 0, i64 0), i32 %55) #4
  %56 = add nsw i64 %indvars.iv, -8
  %arrayidx163.us.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %56, i64 15
  %57 = load %struct.rtx_def** %arrayidx163.us.i, align 8, !tbaa !10
  %58 = load %struct.rtx_def** @nan, align 8, !tbaa !10
  %call164.us.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %57, %struct.rtx_def* %58) #4
  %call165.us.i = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call164.us.i, %struct.rtx_def* %insn.1342.us.i) #4
  call fastcc void @subst_stack_regs(%struct.rtx_def* %call165.us.i, %struct.stack_def* %regstack.i) #4
  br label %for.inc167.us.i

for.inc167.us.i:                                  ; preds = %if.end161.us.i, %land.lhs.true152.us.i, %for.body146.us.i
  %insn.2.us.i = phi %struct.rtx_def* [ %insn.1342.us.i, %land.lhs.true152.us.i ], [ %call165.us.i, %if.end161.us.i ], [ %insn.1342.us.i, %for.body146.us.i ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond357.i = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond357.i, label %for.end169.i, label %for.body146.us.i

for.body146.i:                                    ; preds = %for.cond143.preheader.i, %for.inc167.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc167.i ], [ 8, %for.cond143.preheader.i ]
  %insn.1342.i = phi %struct.rtx_def* [ %insn.2.i, %for.inc167.i ], [ %insn.1.ph.i, %for.cond143.preheader.i ]
  %59 = load i64* %52, align 8, !tbaa !24
  %shl149.i = shl i64 1, %indvars.iv.i
  %and150.i = and i64 %59, %shl149.i
  %tobool151.i = icmp eq i64 %and150.i, 0
  br i1 %tobool151.i, label %for.inc167.i, label %land.lhs.true152.i

land.lhs.true152.i:                               ; preds = %for.body146.i
  %60 = load i64* %reg_set.i, align 8, !tbaa !34
  %and155.i = and i64 %60, %shl149.i
  %tobool156.i = icmp eq i64 %and155.i, 0
  br i1 %tobool156.i, label %if.end161.i, label %for.inc167.i

if.end161.i:                                      ; preds = %land.lhs.true152.i
  %61 = add nsw i64 %indvars.iv.i, -8
  %arrayidx163.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %61, i64 15
  %62 = load %struct.rtx_def** %arrayidx163.i, align 8, !tbaa !10
  %63 = load %struct.rtx_def** @nan, align 8, !tbaa !10
  %call164.i = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %62, %struct.rtx_def* %63) #4
  %call165.i = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call164.i, %struct.rtx_def* %insn.1342.i) #4
  call fastcc void @subst_stack_regs(%struct.rtx_def* %call165.i, %struct.stack_def* %regstack.i) #4
  br label %for.inc167.i

for.inc167.i:                                     ; preds = %if.end161.i, %land.lhs.true152.i, %for.body146.i
  %insn.2.i = phi %struct.rtx_def* [ %insn.1342.i, %land.lhs.true152.i ], [ %call165.i, %if.end161.i ], [ %insn.1342.i, %for.body146.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 16
  br i1 %exitcond.i, label %for.end169.i, label %for.body146.i

for.end169.i:                                     ; preds = %for.inc167.i, %for.inc167.us.i
  %64 = load i64* %reg_set.i, align 8, !tbaa !34
  %65 = load i64* %52, align 8, !tbaa !24
  %cmp172.i = icmp eq i64 %64, %65
  br i1 %cmp172.i, label %win.i, label %if.end175.i

if.end175.i:                                      ; preds = %for.end169.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2743, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.convert_regs_1, i64 0, i64 0)) #6
  unreachable

win.i:                                            ; preds = %for.end169.i
  %stack_out.i = getelementptr inbounds i8* %5, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %stack_out.i, i8* %3, i64 24, i32 8, i1 false) #4, !tbaa.struct !45
  %succ176.i = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 5
  %e.1334.i = load %struct.edge_def** %succ176.i, align 8
  %tobool178335.i = icmp eq %struct.edge_def* %e.1334.i, null
  br i1 %tobool178335.i, label %for.cond205.preheader.i, label %for.body179.i

for.cond205.preheader.i:                          ; preds = %for.inc201.i, %win.i
  %inserted.1.lcssa.i = phi i32 [ %inserted.0.i, %win.i ], [ %inserted.2.i, %for.inc201.i ]
  %e.2330.i = load %struct.edge_def** %pred.i, align 8
  %tobool206331.i = icmp eq %struct.edge_def* %e.2330.i, null
  br i1 %tobool206331.i, label %convert_regs_1.exit, label %for.body207.i

for.body179.i:                                    ; preds = %win.i, %for.inc201.i
  %e.1337.i = phi %struct.edge_def* [ %e.1.i, %for.inc201.i ], [ %e.1334.i, %win.i ]
  %inserted.1336.i = phi i32 [ %inserted.2.i, %for.inc201.i ], [ %inserted.0.i, %win.i ]
  %flags180.i = getelementptr inbounds %struct.edge_def* %e.1337.i, i64 0, i32 6
  %66 = load i32* %flags180.i, align 4, !tbaa !13
  %and181.i = and i32 %66, 32
  %tobool182.i = icmp eq i32 %and181.i, 0
  %dest184.i = getelementptr inbounds %struct.edge_def* %e.1337.i, i64 0, i32 3
  %67 = load %struct.basic_block_def** %dest184.i, align 8, !tbaa !27
  br i1 %tobool182.i, label %lor.lhs.false183.i, label %if.then187.i

lor.lhs.false183.i:                               ; preds = %for.body179.i
  %cmp185.i = icmp eq %struct.basic_block_def* %67, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp185.i, label %if.then187.i, label %for.inc201.i

if.then187.i:                                     ; preds = %lor.lhs.false183.i, %for.body179.i
  %68 = phi %struct.basic_block_def* [ getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1), %lor.lhs.false183.i ], [ %67, %for.body179.i ]
  %aux189.i = getelementptr inbounds %struct.basic_block_def* %68, i64 0, i32 10
  %69 = load i8** %aux189.i, align 8, !tbaa !17
  %done.i = getelementptr inbounds i8* %69, i64 56
  %70 = bitcast i8* %done.i to i32*
  %71 = load i32* %70, align 4, !tbaa !35
  %tobool190.i = icmp ne i32 %71, 0
  %cmp193.i = icmp eq %struct.basic_block_def* %68, %4
  %or.cond.i = or i1 %tobool190.i, %cmp193.i
  br i1 %or.cond.i, label %if.end196.i, label %if.then195.i

if.then195.i:                                     ; preds = %if.then187.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2755, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.convert_regs_1, i64 0, i64 0)) #6
  unreachable

if.end196.i:                                      ; preds = %if.then187.i
  %call197.i = call fastcc zeroext i1 @compensate_edge(%struct.edge_def* %e.1337.i, %struct._IO_FILE* %file) #4
  %conv198.i = zext i1 %call197.i to i32
  %or199.i = or i32 %conv198.i, %inserted.1336.i
  br label %for.inc201.i

for.inc201.i:                                     ; preds = %if.end196.i, %lor.lhs.false183.i
  %inserted.2.i = phi i32 [ %or199.i, %if.end196.i ], [ %inserted.1336.i, %lor.lhs.false183.i ]
  %succ_next202.i = getelementptr inbounds %struct.edge_def* %e.1337.i, i64 0, i32 1
  %e.1.i = load %struct.edge_def** %succ_next202.i, align 8
  %tobool178.i = icmp eq %struct.edge_def* %e.1.i, null
  br i1 %tobool178.i, label %for.cond205.preheader.i, label %for.body179.i

for.body207.i:                                    ; preds = %for.cond205.preheader.i, %for.inc229.i
  %e.2333.i = phi %struct.edge_def* [ %e.2.i, %for.inc229.i ], [ %e.2330.i, %for.cond205.preheader.i ]
  %inserted.3332.i = phi i32 [ %inserted.4.i, %for.inc229.i ], [ %inserted.1.lcssa.i, %for.cond205.preheader.i ]
  %cmp208.i = icmp eq %struct.edge_def* %e.2333.i, %beste.2.i
  br i1 %cmp208.i, label %for.inc229.i, label %land.lhs.true210.i

land.lhs.true210.i:                               ; preds = %for.body207.i
  %flags211.i = getelementptr inbounds %struct.edge_def* %e.2333.i, i64 0, i32 6
  %72 = load i32* %flags211.i, align 4, !tbaa !13
  %and212.i = and i32 %72, 32
  %tobool213.i = icmp eq i32 %and212.i, 0
  br i1 %tobool213.i, label %land.lhs.true214.i, label %for.inc229.i

land.lhs.true214.i:                               ; preds = %land.lhs.true210.i
  %src215.i = getelementptr inbounds %struct.edge_def* %e.2333.i, i64 0, i32 2
  %73 = load %struct.basic_block_def** %src215.i, align 8, !tbaa !16
  %cmp216.i = icmp eq %struct.basic_block_def* %73, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp216.i, label %for.inc229.i, label %if.then218.i

if.then218.i:                                     ; preds = %land.lhs.true214.i
  %aux220.i = getelementptr inbounds %struct.basic_block_def* %73, i64 0, i32 10
  %74 = load i8** %aux220.i, align 8, !tbaa !17
  %done221.i = getelementptr inbounds i8* %74, i64 56
  %75 = bitcast i8* %done221.i to i32*
  %76 = load i32* %75, align 4, !tbaa !35
  %tobool222.i = icmp eq i32 %76, 0
  br i1 %tobool222.i, label %if.then223.i, label %if.end224.i

if.then223.i:                                     ; preds = %if.then218.i
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2765, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.convert_regs_1, i64 0, i64 0)) #6
  unreachable

if.end224.i:                                      ; preds = %if.then218.i
  %call225.i = call fastcc zeroext i1 @compensate_edge(%struct.edge_def* %e.2333.i, %struct._IO_FILE* %file) #4
  %conv226.i = zext i1 %call225.i to i32
  %or227.i = or i32 %conv226.i, %inserted.3332.i
  br label %for.inc229.i

for.inc229.i:                                     ; preds = %if.end224.i, %land.lhs.true214.i, %land.lhs.true210.i, %for.body207.i
  %inserted.4.i = phi i32 [ %inserted.3332.i, %land.lhs.true210.i ], [ %or227.i, %if.end224.i ], [ %inserted.3332.i, %land.lhs.true214.i ], [ %inserted.3332.i, %for.body207.i ]
  %pred_next230.i = getelementptr inbounds %struct.edge_def* %e.2333.i, i64 0, i32 0
  %e.2.i = load %struct.edge_def** %pred_next230.i, align 8
  %tobool206.i = icmp eq %struct.edge_def* %e.2.i, null
  br i1 %tobool206.i, label %convert_regs_1.exit, label %for.body207.i

if.then126.1.i:                                   ; preds = %for.inc129.i
  %call127.1.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 9) #4
  %.pre358.i = load i64* %46, align 8, !tbaa !24
  br label %for.inc129.1.i

for.inc129.1.i:                                   ; preds = %if.then126.1.i, %for.inc129.i
  %77 = phi i64 [ %.pre358.i, %if.then126.1.i ], [ %48, %for.inc129.i ]
  %and124.2.i = and i64 %77, 1024
  %tobool125.2.i = icmp eq i64 %and124.2.i, 0
  br i1 %tobool125.2.i, label %for.inc129.2.i, label %if.then126.2.i

if.then126.2.i:                                   ; preds = %for.inc129.1.i
  %call127.2.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 10) #4
  %.pre359.i = load i64* %46, align 8, !tbaa !24
  br label %for.inc129.2.i

for.inc129.2.i:                                   ; preds = %if.then126.2.i, %for.inc129.1.i
  %78 = phi i64 [ %.pre359.i, %if.then126.2.i ], [ %77, %for.inc129.1.i ]
  %and124.3.i = and i64 %78, 2048
  %tobool125.3.i = icmp eq i64 %and124.3.i, 0
  br i1 %tobool125.3.i, label %for.inc129.3.i, label %if.then126.3.i

if.then126.3.i:                                   ; preds = %for.inc129.2.i
  %call127.3.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 11) #4
  %.pre360.i = load i64* %46, align 8, !tbaa !24
  br label %for.inc129.3.i

for.inc129.3.i:                                   ; preds = %if.then126.3.i, %for.inc129.2.i
  %79 = phi i64 [ %.pre360.i, %if.then126.3.i ], [ %78, %for.inc129.2.i ]
  %and124.4.i = and i64 %79, 4096
  %tobool125.4.i = icmp eq i64 %and124.4.i, 0
  br i1 %tobool125.4.i, label %for.inc129.4.i, label %if.then126.4.i

if.then126.4.i:                                   ; preds = %for.inc129.3.i
  %call127.4.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 12) #4
  %.pre361.i = load i64* %46, align 8, !tbaa !24
  br label %for.inc129.4.i

for.inc129.4.i:                                   ; preds = %if.then126.4.i, %for.inc129.3.i
  %80 = phi i64 [ %.pre361.i, %if.then126.4.i ], [ %79, %for.inc129.3.i ]
  %and124.5.i = and i64 %80, 8192
  %tobool125.5.i = icmp eq i64 %and124.5.i, 0
  br i1 %tobool125.5.i, label %for.inc129.5.i, label %if.then126.5.i

if.then126.5.i:                                   ; preds = %for.inc129.4.i
  %call127.5.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 13) #4
  %.pre362.i = load i64* %46, align 8, !tbaa !24
  br label %for.inc129.5.i

for.inc129.5.i:                                   ; preds = %if.then126.5.i, %for.inc129.4.i
  %81 = phi i64 [ %.pre362.i, %if.then126.5.i ], [ %80, %for.inc129.4.i ]
  %and124.6.i = and i64 %81, 16384
  %tobool125.6.i = icmp eq i64 %and124.6.i, 0
  br i1 %tobool125.6.i, label %for.inc129.6.i, label %if.then126.6.i

if.then126.6.i:                                   ; preds = %for.inc129.5.i
  %call127.6.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 14) #4
  %.pre363.i = load i64* %46, align 8, !tbaa !24
  br label %for.inc129.6.i

for.inc129.6.i:                                   ; preds = %if.then126.6.i, %for.inc129.5.i
  %82 = phi i64 [ %.pre363.i, %if.then126.6.i ], [ %81, %for.inc129.5.i ]
  %and124.7.i = and i64 %82, 32768
  %tobool125.7.i = icmp eq i64 %and124.7.i, 0
  br i1 %tobool125.7.i, label %for.inc129.7.i, label %if.then126.7.i

if.then126.7.i:                                   ; preds = %for.inc129.6.i
  %call127.7.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 15) #4
  br label %for.inc129.7.i

for.inc129.7.i:                                   ; preds = %if.then126.7.i, %for.inc129.6.i
  %83 = call i64 @fwrite(i8* getelementptr inbounds ([18 x i8]* @.str6, i64 0, i64 0), i64 17, i64 1, %struct._IO_FILE* %file) #4
  call fastcc void @print_stack(%struct._IO_FILE* %file, %struct.stack_def* %regstack.i) #4
  br label %if.end132.i

convert_regs_1.exit:                              ; preds = %for.inc229.i, %for.cond205.preheader.i
  %inserted.3.lcssa.i = phi i32 [ %inserted.1.lcssa.i, %for.cond205.preheader.i ], [ %inserted.4.i, %for.inc229.i ]
  call void @llvm.lifetime.end(i64 24, i8* %3) #4
  %or = or i32 %inserted.3.lcssa.i, %inserted.0
  %84 = load i8** %aux.i, align 8, !tbaa !17
  %done = getelementptr inbounds i8* %84, i64 56
  %85 = bitcast i8* %done to i32*
  store i32 1, i32* %85, align 4, !tbaa !35
  %e.028 = load %struct.edge_def** %succ176.i, align 8
  %tobool29 = icmp eq %struct.edge_def* %e.028, null
  br i1 %tobool29, label %do.cond, label %for.body

for.body:                                         ; preds = %convert_regs_1.exit, %for.inc
  %e.031 = phi %struct.edge_def* [ %e.0, %for.inc ], [ %e.028, %convert_regs_1.exit ]
  %sp.130 = phi %struct.basic_block_def** [ %sp.2, %for.inc ], [ %incdec.ptr1, %convert_regs_1.exit ]
  %flags = getelementptr inbounds %struct.edge_def* %e.031, i64 0, i32 6
  %86 = load i32* %flags, align 4, !tbaa !13
  %and = and i32 %86, 32
  %tobool3 = icmp eq i32 %and, 0
  br i1 %tobool3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %dest = getelementptr inbounds %struct.edge_def* %e.031, i64 0, i32 3
  %87 = load %struct.basic_block_def** %dest, align 8, !tbaa !27
  %aux4 = getelementptr inbounds %struct.basic_block_def* %87, i64 0, i32 10
  %88 = load i8** %aux4, align 8, !tbaa !17
  %predecessors = getelementptr inbounds i8* %88, i64 60
  %89 = bitcast i8* %predecessors to i32*
  %90 = load i32* %89, align 4, !tbaa !19
  %dec = add nsw i32 %90, -1
  store i32 %dec, i32* %89, align 4, !tbaa !19
  %tobool8 = icmp eq i32 %dec, 0
  br i1 %tobool8, label %if.then9, label %for.inc

if.then9:                                         ; preds = %if.then
  %incdec.ptr11 = getelementptr inbounds %struct.basic_block_def** %sp.130, i64 1
  store %struct.basic_block_def* %87, %struct.basic_block_def** %sp.130, align 8, !tbaa !10
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body, %if.then9
  %sp.2 = phi %struct.basic_block_def** [ %sp.130, %for.body ], [ %sp.130, %if.then ], [ %incdec.ptr11, %if.then9 ]
  %succ_next = getelementptr inbounds %struct.edge_def* %e.031, i64 0, i32 1
  %e.0 = load %struct.edge_def** %succ_next, align 8
  %tobool = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool, label %do.cond, label %for.body

do.cond:                                          ; preds = %for.inc, %convert_regs_1.exit
  %sp.1.lcssa = phi %struct.basic_block_def** [ %incdec.ptr1, %convert_regs_1.exit ], [ %sp.2, %for.inc ]
  %cmp = icmp eq %struct.basic_block_def** %sp.1.lcssa, %1
  br i1 %cmp, label %do.end, label %do.body

do.end:                                           ; preds = %do.cond
  ret i32 %or
}

declare void @fixup_abnormal_edges() #1

declare void @commit_edge_insertions() #1

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #3

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i1 @compensate_edge(%struct.edge_def* %e, %struct._IO_FILE* %file) #0 {
entry:
  %regstack = alloca %struct.stack_def, align 8
  %tmpstack = alloca %struct.stack_def, align 8
  %src = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 2
  %0 = load %struct.basic_block_def** %src, align 8, !tbaa !16
  %dest = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 3
  %1 = load %struct.basic_block_def** %dest, align 8, !tbaa !27
  %aux = getelementptr inbounds %struct.basic_block_def* %0, i64 0, i32 10
  %2 = load i8** %aux, align 8, !tbaa !17
  %aux1 = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 10
  %3 = load i8** %aux1, align 8, !tbaa !17
  %stack_in = bitcast i8* %3 to %struct.stack_def*
  store %struct.basic_block_def* %0, %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %stack_out = getelementptr inbounds i8* %2, i64 24
  %4 = bitcast %struct.stack_def* %regstack to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %stack_out, i64 24, i32 8, i1 false), !tbaa.struct !45
  %tobool = icmp ne %struct._IO_FILE* %file, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def* %0, i64 0, i32 11
  %5 = load i32* %index, align 4, !tbaa !43
  %index2 = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 11
  %6 = load i32* %index2, align 4, !tbaa !43
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8]* @.str18, i64 0, i64 0), i32 %5, i32 %6) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %top = bitcast i8* %3 to i32*
  %7 = load i32* %top, align 4, !tbaa !33
  %cmp = icmp eq i32 %7, -2
  %top4 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %8 = load i32* %top4, align 8, !tbaa !33
  br i1 %cmp, label %for.cond.preheader, label %if.else

for.cond.preheader:                               ; preds = %if.end
  %cmp5149 = icmp sgt i32 %8, -1
  br i1 %cmp5149, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %reg_set = getelementptr inbounds i8* %3, i64 8
  %9 = bitcast i8* %reg_set to i64*
  %10 = load i64* %9, align 8, !tbaa !34
  %11 = sext i32 %8 to i64
  br label %for.body

for.cond:                                         ; preds = %for.body
  %cmp5 = icmp sgt i32 %13, 0
  br i1 %cmp5, label %for.body, label %for.cond.for.end_crit_edge

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ %11, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv
  %12 = load i8* %arrayidx, align 1, !tbaa !1
  %sh_prom = zext i8 %12 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %shl, %10
  %tobool7 = icmp eq i64 %and, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %13 = trunc i64 %indvars.iv to i32
  br i1 %tobool7, label %for.end, label %for.cond

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  %14 = trunc i64 %indvars.iv.next to i32
  br label %for.end

for.end:                                          ; preds = %for.body, %for.cond.for.end_crit_edge, %for.cond.preheader
  %reg.0.lcssa = phi i32 [ %14, %for.cond.for.end_crit_edge ], [ %8, %for.cond.preheader ], [ %13, %for.body ]
  %cmp10 = icmp eq i32 %reg.0.lcssa, -1
  br i1 %cmp10, label %if.then12, label %if.end17

if.then12:                                        ; preds = %for.end
  br i1 %tobool, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.then12
  %15 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str19, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %file)
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.then12
  %16 = bitcast %struct.stack_def* %tmpstack to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %4, i64 24, i32 8, i1 false), !tbaa.struct !45
  %end = getelementptr inbounds %struct.basic_block_def* %0, i64 0, i32 1
  %17 = load %struct.rtx_def** %end, align 8, !tbaa !47
  call fastcc void @change_stack(%struct.rtx_def* %17, %struct.stack_def* %tmpstack, %struct.stack_def* %stack_in, i32 0)
  br label %return

if.end17:                                         ; preds = %for.end
  br i1 %tobool, label %if.then19, label %if.end60

if.then19:                                        ; preds = %if.end17
  %18 = call i64 @fwrite(i8* getelementptr inbounds ([24 x i8]* @.str20, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %file)
  br label %if.end60

if.else:                                          ; preds = %if.end
  %cmp24 = icmp eq i32 %7, %8
  br i1 %cmp24, label %for.cond28.preheader, label %if.end55

for.cond28.preheader:                             ; preds = %if.else
  %cmp29152 = icmp sgt i32 %7, -1
  br i1 %cmp29152, label %for.body31.lr.ph, label %for.end46

for.body31.lr.ph:                                 ; preds = %for.cond28.preheader
  %19 = sext i32 %7 to i64
  br label %for.body31

for.cond28:                                       ; preds = %for.body31
  %cmp29 = icmp sgt i32 %22, 0
  br i1 %cmp29, label %for.body31, label %for.cond28.for.end46_crit_edge

for.body31:                                       ; preds = %for.body31.lr.ph, %for.cond28
  %indvars.iv160 = phi i64 [ %19, %for.body31.lr.ph ], [ %indvars.iv.next161, %for.cond28 ]
  %reg33.sum = add i64 %indvars.iv160, 16
  %arrayidx34 = getelementptr inbounds i8* %3, i64 %reg33.sum
  %20 = load i8* %arrayidx34, align 1, !tbaa !1
  %arrayidx38 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv160
  %21 = load i8* %arrayidx38, align 1, !tbaa !1
  %cmp40 = icmp eq i8 %20, %21
  %indvars.iv.next161 = add nsw i64 %indvars.iv160, -1
  %22 = trunc i64 %indvars.iv160 to i32
  br i1 %cmp40, label %for.cond28, label %for.end46

for.cond28.for.end46_crit_edge:                   ; preds = %for.cond28
  %23 = trunc i64 %indvars.iv.next161 to i32
  br label %for.end46

for.end46:                                        ; preds = %for.body31, %for.cond28.for.end46_crit_edge, %for.cond28.preheader
  %reg.1.lcssa = phi i32 [ %23, %for.cond28.for.end46_crit_edge ], [ %7, %for.cond28.preheader ], [ %22, %for.body31 ]
  %cmp47 = icmp eq i32 %reg.1.lcssa, -1
  br i1 %cmp47, label %if.then49, label %if.end55

if.then49:                                        ; preds = %for.end46
  br i1 %tobool, label %if.then51, label %return

if.then51:                                        ; preds = %if.then49
  %24 = call i64 @fwrite(i8* getelementptr inbounds ([19 x i8]* @.str21, i64 0, i64 0), i64 18, i64 1, %struct._IO_FILE* %file)
  br label %return

if.end55:                                         ; preds = %for.end46, %if.else
  br i1 %tobool, label %if.then57, label %if.end60

if.then57:                                        ; preds = %if.end55
  %25 = call i64 @fwrite(i8* getelementptr inbounds ([21 x i8]* @.str22, i64 0, i64 0), i64 20, i64 1, %struct._IO_FILE* %file)
  call fastcc void @print_stack(%struct._IO_FILE* %file, %struct.stack_def* %stack_in)
  br label %if.end60

if.end60:                                         ; preds = %if.end55, %if.then57, %if.end17, %if.then19
  %flags = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 6
  %26 = load i32* %flags, align 4, !tbaa !13
  %and61 = and i32 %26, 12
  %cmp62 = icmp eq i32 %and61, 8
  br i1 %cmp62, label %if.then64, label %if.else66

if.then64:                                        ; preds = %if.end60
  store i32 -1, i32* %top, align 4, !tbaa !33
  br label %return

if.else66:                                        ; preds = %if.end60
  %and68 = and i32 %26, 4
  %tobool69 = icmp eq i32 %and68, 0
  br i1 %tobool69, label %if.else82, label %if.then70

if.then70:                                        ; preds = %if.else66
  %reg_set71 = getelementptr inbounds i8* %3, i64 8
  %27 = bitcast i8* %reg_set71 to i64*
  %28 = load i64* %27, align 8, !tbaa !34
  %cmp72 = icmp eq i64 %28, 0
  br i1 %cmp72, label %eh1, label %if.end75

if.end75:                                         ; preds = %if.then70
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2559, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.compensate_edge, i64 0, i64 0)) #6
  unreachable

eh1:                                              ; preds = %if.then70
  %reg_set76 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %29 = load i64* %reg_set76, align 8, !tbaa !34
  %cmp77 = icmp eq i64 %29, 256
  br i1 %cmp77, label %eh2, label %if.end80

if.end80:                                         ; preds = %eh1
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2564, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.compensate_edge, i64 0, i64 0)) #6
  unreachable

eh2:                                              ; preds = %eh1
  store i32 -1, i32* %top, align 4, !tbaa !33
  br label %return

if.else82:                                        ; preds = %if.else66
  %succ = getelementptr inbounds %struct.basic_block_def* %0, i64 0, i32 5
  %30 = load %struct.edge_def** %succ, align 8, !tbaa !39
  %succ_next = getelementptr inbounds %struct.edge_def* %30, i64 0, i32 1
  %31 = load %struct.edge_def** %succ_next, align 8, !tbaa !40
  %cmp83 = icmp eq %struct.edge_def* %31, null
  %and86 = and i32 %26, 2
  %tobool87 = icmp eq i32 %and86, 0
  %or.cond = and i1 %cmp83, %tobool87
  br i1 %or.cond, label %if.then88, label %if.else93

if.then88:                                        ; preds = %if.else82
  %32 = bitcast %struct.stack_def* %tmpstack to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %4, i64 24, i32 8, i1 false), !tbaa.struct !45
  %end89 = getelementptr inbounds %struct.basic_block_def* %0, i64 0, i32 1
  %33 = load %struct.rtx_def** %end89, align 8, !tbaa !47
  %34 = getelementptr inbounds %struct.rtx_def* %33, i64 0, i32 0
  %bf.load = load i32* %34, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp91 = icmp eq i32 %bf.clear, 33
  %cond = zext i1 %cmp91 to i32
  call fastcc void @change_stack(%struct.rtx_def* %33, %struct.stack_def* %tmpstack, %struct.stack_def* %stack_in, i32 %cond)
  br label %return

if.else93:                                        ; preds = %if.else82
  br i1 %tobool87, label %if.end100, label %if.then99

if.then99:                                        ; preds = %if.else93
  call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2591, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.compensate_edge, i64 0, i64 0)) #6
  unreachable

if.end100:                                        ; preds = %if.else93
  store %struct.basic_block_def* null, %struct.basic_block_def** @current_block, align 8, !tbaa !10
  call void @start_sequence() #4
  %call101 = call %struct.rtx_def* @emit_note(i8* null, i32 -99) #4
  %35 = bitcast %struct.stack_def* %tmpstack to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %4, i64 24, i32 8, i1 false), !tbaa.struct !45
  call fastcc void @change_stack(%struct.rtx_def* %call101, %struct.stack_def* %tmpstack, %struct.stack_def* %stack_in, i32 1)
  %call102 = call %struct.rtx_def* @gen_sequence() #4
  call void @end_sequence() #4
  call void @insert_insn_on_edge(%struct.rtx_def* %call102, %struct.edge_def* %e) #4
  br label %return

return:                                           ; preds = %if.then64, %if.then88, %eh2, %if.then49, %if.then51, %if.end100, %if.end16
  %retval.0 = phi i1 [ false, %if.end16 ], [ true, %if.end100 ], [ false, %if.then51 ], [ false, %if.then49 ], [ false, %eh2 ], [ false, %if.then88 ], [ false, %if.then64 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #3

; Function Attrs: nounwind uwtable
define internal fastcc void @print_stack(%struct._IO_FILE* %file, %struct.stack_def* nocapture readonly %s) #0 {
entry:
  %tobool = icmp eq %struct._IO_FILE* %file, null
  br i1 %tobool, label %if.end13, label %if.end

if.end:                                           ; preds = %entry
  %top = getelementptr inbounds %struct.stack_def* %s, i64 0, i32 0
  %0 = load i32* %top, align 4, !tbaa !33
  switch i32 %0, label %if.else6 [
    i32 -2, label %if.then1
    i32 -1, label %if.then4
  ]

if.then1:                                         ; preds = %if.end
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([15 x i8]* @.str13, i64 0, i64 0), i64 14, i64 1, %struct._IO_FILE* %file)
  br label %if.end13

if.then4:                                         ; preds = %if.end
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8]* @.str14, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %file)
  br label %if.end13

if.else6:                                         ; preds = %if.end
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str15, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %file)
  %4 = load i32* %top, align 4, !tbaa !33
  %cmp922 = icmp slt i32 %4, 0
  br i1 %cmp922, label %for.end, label %for.body

for.body:                                         ; preds = %if.else6, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.else6 ]
  %arrayidx = getelementptr inbounds %struct.stack_def* %s, i64 0, i32 2, i64 %indvars.iv
  %5 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %5 to i32
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str16, i64 0, i64 0), i32 %conv) #4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32* %top, align 4, !tbaa !33
  %7 = trunc i64 %indvars.iv to i32
  %cmp9 = icmp slt i32 %7, %6
  br i1 %cmp9, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.else6
  %8 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str17, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %file)
  br label %if.end13

if.end13:                                         ; preds = %entry, %if.then4, %for.end, %if.then1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #5

; Function Attrs: nounwind uwtable
define internal fastcc void @subst_stack_regs(%struct.rtx_def* %insn, %struct.stack_def* %regstack) #0 {
entry:
  %temp_stack.i = alloca %struct.stack_def, align 8
  %0 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %if.then, label %if.end8

if.then:                                          ; preds = %entry
  %top1 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %1 = load i32* %top1, align 4, !tbaa !33
  %cmp2 = icmp sgt i32 %1, -1
  br i1 %cmp2, label %if.then3, label %if.end8

if.then3:                                         ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %3 = bitcast %struct.stack_def* %temp_stack.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %3) #4
  %cmp.i = icmp slt i32 %1, 1
  br i1 %cmp.i, label %while.body.lr.ph, label %for.body.for.body_crit_edge.i.lr.ph

for.body.for.body_crit_edge.i.lr.ph:              ; preds = %if.then3
  %reg_set.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %4 = load i64* %reg_set.i, align 8, !tbaa !34
  %reg_set2.i = getelementptr inbounds %struct.stack_def* %temp_stack.i, i64 0, i32 1
  store i64 %4, i64* %reg_set2.i, align 8, !tbaa !34
  %top4.i = getelementptr inbounds %struct.stack_def* %temp_stack.i, i64 0, i32 0
  store i32 %1, i32* %top4.i, align 8, !tbaa !33
  %5 = sext i32 %1 to i64
  %arrayidx.i168 = getelementptr inbounds %struct.stack_def* %temp_stack.i, i64 0, i32 2, i64 %5
  store i8 8, i8* %arrayidx.i168, align 1, !tbaa !1
  br label %for.body.for.body_crit_edge.i

for.body.for.body_crit_edge.i:                    ; preds = %for.body.for.body_crit_edge.i.lr.ph, %for.body.for.body_crit_edge.i
  %indvars.iv.i170 = phi i64 [ %5, %for.body.for.body_crit_edge.i.lr.ph ], [ %indvars.iv.next.i, %for.body.for.body_crit_edge.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i170, -1
  %.pre.i = load i32* %top4.i, align 8, !tbaa !33
  %6 = trunc i64 %indvars.iv.next.i to i32
  %add.i = add i32 %.pre.i, 8
  %sub.i = sub i32 %add.i, %6
  %conv.i = trunc i32 %sub.i to i8
  %arrayidx.i = getelementptr inbounds %struct.stack_def* %temp_stack.i, i64 0, i32 2, i64 %indvars.iv.next.i
  store i8 %conv.i, i8* %arrayidx.i, align 1, !tbaa !1
  %cmp5.i = icmp sgt i32 %6, 0
  br i1 %cmp5.i, label %for.body.for.body_crit_edge.i, label %straighten_stack.exit

straighten_stack.exit:                            ; preds = %for.body.for.body_crit_edge.i
  call fastcc void @change_stack(%struct.rtx_def* %2, %struct.stack_def* %regstack, %struct.stack_def* %temp_stack.i, i32 0) #4
  %.pr.pre = load i32* %top1, align 4, !tbaa !33
  call void @llvm.lifetime.end(i64 24, i8* %3) #4
  %cmp5162 = icmp sgt i32 %.pr.pre, -1
  br i1 %cmp5162, label %while.body.lr.ph, label %if.end8.loopexit

while.body.lr.ph:                                 ; preds = %if.then3, %straighten_stack.exit
  %top1.promoted174 = phi i32 [ %.pr.pre, %straighten_stack.exit ], [ 0, %if.then3 ]
  %reg_set = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %reg_set.promoted = load i64* %reg_set, align 8, !tbaa !34
  %7 = icmp slt i32 %top1.promoted174, 0
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %8 = phi i32 [ %top1.promoted174, %while.body.lr.ph ], [ %dec, %while.body ]
  %and163 = phi i64 [ %reg_set.promoted, %while.body.lr.ph ], [ %and, %while.body ]
  %add = add nsw i32 %8, 8
  %sh_prom = zext i32 %add to i64
  %shl = shl i64 1, %sh_prom
  %neg = xor i64 %shl, -1
  %and = and i64 %and163, %neg
  %dec = add nsw i32 %8, -1
  %cmp5 = icmp sgt i32 %8, 0
  br i1 %cmp5, label %while.body, label %while.cond.if.end8.loopexit_crit_edge

while.cond.if.end8.loopexit_crit_edge:            ; preds = %while.body
  %.op = add i32 %top1.promoted174, -1
  %9 = select i1 %7, i32 %.op, i32 -1
  store i64 %and, i64* %reg_set, align 8, !tbaa !34
  store i32 %9, i32* %top1, align 4, !tbaa !33
  br label %if.end8.loopexit

if.end8.loopexit:                                 ; preds = %while.cond.if.end8.loopexit_crit_edge, %straighten_stack.exit
  %bf.load.i.pre = load i32* %0, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.end8.loopexit, %if.then, %entry
  %bf.load.i = phi i32 [ %bf.load.i.pre, %if.end8.loopexit ], [ %bf.load, %if.then ], [ %bf.load, %entry ]
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom36.i = zext i32 %bf.clear.i to i64
  %arrayidx.i148 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom36.i
  %10 = load i8* %arrayidx.i148, align 1, !tbaa !1
  %cmp.i149 = icmp eq i8 %10, 105
  %11 = load %struct.varray_head_tag** @stack_regs_mentioned_data, align 8
  %tobool.i = icmp ne %struct.varray_head_tag* %11, null
  %or.cond.i = and i1 %cmp.i149, %tobool.i
  br i1 %or.cond.i, label %if.end.i, label %if.end54

if.end.i:                                         ; preds = %if.end8
  %fld.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1
  %rtint.i = bitcast [1 x %union.rtunion_def]* %fld.i to i32*
  %12 = load i32* %rtint.i, align 4, !tbaa !4
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %11, i64 0, i32 0
  %13 = load i64* %num_elements.i, align 8, !tbaa !6
  %conv3.i = trunc i64 %13 to i32
  %cmp4.i = icmp ult i32 %12, %conv3.i
  br i1 %cmp4.i, label %if.end8.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.end.i
  %div.i = udiv i32 %12, 20
  %add.i150 = add i32 %div.i, %12
  %conv7.i = zext i32 %add.i150 to i64
  %call.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %11, i64 %conv7.i) #4
  store %struct.varray_head_tag* %call.i, %struct.varray_head_tag** @stack_regs_mentioned_data, align 8, !tbaa !10
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then6.i, %if.end.i
  %14 = phi %struct.varray_head_tag* [ %11, %if.end.i ], [ %call.i, %if.then6.i ]
  %idxprom9.i = zext i32 %12 to i64
  %data.i = getelementptr inbounds %struct.varray_head_tag* %14, i64 0, i32 4
  %c.i = bitcast %union.varray_data_tag* %data.i to [1 x i8]*
  %arrayidx10.i = getelementptr inbounds [1 x i8]* %c.i, i64 0, i64 %idxprom9.i
  %15 = load i8* %arrayidx10.i, align 1, !tbaa !1
  %conv11.i = sext i8 %15 to i32
  %cmp12.i = icmp eq i8 %15, 0
  br i1 %cmp12.i, label %if.then14.i, label %stack_regs_mentioned.exit

if.then14.i:                                      ; preds = %if.end8.i
  %arrayidx16.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx16.i to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !10
  %call17.i = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %16) #4
  %tobool18.i = icmp ne i32 %call17.i, 0
  %cond.i = select i1 %tobool18.i, i32 1, i32 2
  %conv19.i = trunc i32 %cond.i to i8
  store i8 %conv19.i, i8* %arrayidx10.i, align 1, !tbaa !1
  br label %stack_regs_mentioned.exit

stack_regs_mentioned.exit:                        ; preds = %if.end8.i, %if.then14.i
  %test.0.i = phi i32 [ %cond.i, %if.then14.i ], [ %conv11.i, %if.end8.i ]
  %cmp25.i = icmp eq i32 %test.0.i, 1
  br i1 %cmp25.i, label %if.then9, label %if.end54

if.then9:                                         ; preds = %stack_regs_mentioned.exit
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx12, align 8, !tbaa !10
  %call13 = tail call i32 @asm_noperands(%struct.rtx_def* %17) #4
  %cmp14 = icmp sgt i32 %call13, -1
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.then9
  tail call fastcc void @subst_asm_stack_regs(%struct.rtx_def* %insn, %struct.stack_def* %regstack)
  br label %for.end111

if.end16:                                         ; preds = %if.then9
  %18 = load %struct.rtx_def** %rtx12, align 8, !tbaa !10
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load20 = load i32* %19, align 8
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 39
  br i1 %cmp22, label %for.cond.preheader, label %if.else

for.cond.preheader:                               ; preds = %if.end16
  %arrayidx28157 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtvec158 = bitcast %union.rtunion_def* %arrayidx28157 to %struct.rtvec_def**
  %20 = load %struct.rtvec_def** %rtvec158, align 8, !tbaa !10
  %num_elem159 = getelementptr inbounds %struct.rtvec_def* %20, i64 0, i32 0
  %21 = load i32* %num_elem159, align 4, !tbaa !11
  %cmp29160 = icmp sgt i32 %21, 0
  br i1 %cmp29160, label %for.body, label %if.end54

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %22 = phi %struct.rtx_def* [ %25, %for.inc ], [ %18, %for.cond.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond.preheader ]
  %23 = phi %struct.rtvec_def* [ %26, %for.inc ], [ %20, %for.cond.preheader ]
  %arrayidx36 = getelementptr inbounds %struct.rtvec_def* %23, i64 0, i32 1, i64 %indvars.iv
  %24 = load %struct.rtx_def** %arrayidx36, align 8, !tbaa !10
  %call37 = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %24)
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %for.inc, label %if.then39

if.then39:                                        ; preds = %for.body
  tail call fastcc void @subst_stack_regs_pat(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %24)
  %.pre = load %struct.rtx_def** %rtx12, align 8, !tbaa !10
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then39
  %25 = phi %struct.rtx_def* [ %22, %for.body ], [ %.pre, %if.then39 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtvec_def**
  %26 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !10
  %num_elem = getelementptr inbounds %struct.rtvec_def* %26, i64 0, i32 0
  %27 = load i32* %num_elem, align 4, !tbaa !11
  %28 = trunc i64 %indvars.iv.next to i32
  %cmp29 = icmp slt i32 %28, %27
  br i1 %cmp29, label %for.body, label %if.end54

if.else:                                          ; preds = %if.end16
  tail call fastcc void @subst_stack_regs_pat(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %18)
  br label %if.end54

if.end54:                                         ; preds = %for.inc, %for.cond.preheader, %stack_regs_mentioned.exit, %if.end8, %if.else
  %bf.load55 = load i32* %0, align 8
  %bf.clear56 = and i32 %bf.load55, 65535
  %cmp57 = icmp ne i32 %bf.clear56, 37
  %bf.clear59 = and i32 %bf.load55, 134217728
  %tobool60 = icmp eq i32 %bf.clear59, 0
  %or.cond = and i1 %cmp57, %tobool60
  br i1 %or.cond, label %if.end62, label %for.end111

if.end62:                                         ; preds = %if.end54
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %note.0152 = load %struct.rtx_def** %rtx65, align 8
  %tobool67153 = icmp eq %struct.rtx_def* %note.0152, null
  br i1 %tobool67153, label %for.end111, label %for.body68

for.body68:                                       ; preds = %if.end62, %for.inc107
  %note.0156 = phi %struct.rtx_def* [ %note.0, %for.inc107 ], [ %note.0152, %if.end62 ]
  %insn.addr.0155 = phi %struct.rtx_def* [ %insn.addr.1, %for.inc107 ], [ %insn, %if.end62 ]
  %note_link.0154 = phi %struct.rtx_def** [ %note_link.1, %for.inc107 ], [ %rtx65, %if.end62 ]
  %29 = getelementptr inbounds %struct.rtx_def* %note.0156, i64 0, i32 0
  %bf.load69 = load i32* %29, align 8
  %bf.clear71 = and i32 %bf.load69, 16711680
  %cmp72 = icmp eq i32 %bf.clear71, 655360
  br i1 %cmp72, label %land.lhs.true, label %if.else102

land.lhs.true:                                    ; preds = %for.body68
  %fld73 = getelementptr inbounds %struct.rtx_def* %note.0156, i64 0, i32 1
  %rtx75 = bitcast [1 x %union.rtunion_def]* %fld73 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx75, align 8, !tbaa !10
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load76 = load i32* %31, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 61
  br i1 %cmp78, label %land.lhs.true79, label %if.else102

land.lhs.true79:                                  ; preds = %land.lhs.true
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx84 to i32*
  %32 = load i32* %rtuint, align 4, !tbaa !4
  %33 = and i32 %32, -8
  %34 = icmp eq i32 %33, 8
  br i1 %34, label %if.then94, label %if.else102

if.then94:                                        ; preds = %land.lhs.true79
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %note.0156, i64 0, i32 1, i64 1
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx97, align 8, !tbaa !10
  store %struct.rtx_def* %35, %struct.rtx_def** %note_link.0154, align 8, !tbaa !10
  %36 = load %struct.rtx_def** %rtx75, align 8, !tbaa !10
  %call101 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.0155, %struct.stack_def* %regstack, %struct.rtx_def* %36, i32 0)
  br label %for.inc107

if.else102:                                       ; preds = %land.lhs.true79, %land.lhs.true, %for.body68
  %arrayidx104 = getelementptr inbounds %struct.rtx_def* %note.0156, i64 0, i32 1, i64 1
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  br label %for.inc107

for.inc107:                                       ; preds = %if.then94, %if.else102
  %note_link.1 = phi %struct.rtx_def** [ %note_link.0154, %if.then94 ], [ %rtx105, %if.else102 ]
  %insn.addr.1 = phi %struct.rtx_def* [ %call101, %if.then94 ], [ %insn.addr.0155, %if.else102 ]
  %arrayidx109 = getelementptr inbounds %struct.rtx_def* %note.0156, i64 0, i32 1, i64 1
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %note.0 = load %struct.rtx_def** %rtx110, align 8
  %tobool67 = icmp eq %struct.rtx_def* %note.0, null
  br i1 %tobool67, label %for.end111, label %for.body68

for.end111:                                       ; preds = %for.inc107, %if.end62, %if.end54, %if.then15
  ret void
}

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @asm_noperands(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @subst_asm_stack_regs(%struct.rtx_def* %insn, %struct.stack_def* %regstack) #0 {
entry:
  %0 = alloca [0 x %struct.rtx_def*], align 1
  %temp_stack = alloca %struct.stack_def, align 8
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %call = tail call fastcc i32 @check_asm_stack_operands(%struct.rtx_def* %insn)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.end648, label %if.end

if.end:                                           ; preds = %entry
  tail call void @extract_insn(%struct.rtx_def* %insn) #4
  %call1 = tail call i32 @constrain_operands(i32 1) #4
  %2 = load i32* @which_alternative, align 4, !tbaa !4
  tail call void @preprocess_constraints() #4
  %3 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load.i = load i32* %3, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.end67.i [
    i32 47, label %land.lhs.true.i
    i32 41, label %if.then12.i
    i32 39, label %land.lhs.true21.i
  ]

land.lhs.true.i:                                  ; preds = %if.end
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !10
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load1.i = load i32* %5, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 41
  br i1 %cmp3.i, label %if.then.i, label %if.end67.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 3
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !10
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 0
  br label %get_asm_operand_n_inputs.exit

if.then12.i:                                      ; preds = %if.end
  %arrayidx14.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 3
  %rtvec15.i = bitcast %union.rtunion_def* %arrayidx14.i to %struct.rtvec_def**
  %7 = load %struct.rtvec_def** %rtvec15.i, align 8, !tbaa !10
  %num_elem16.i = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 0
  br label %get_asm_operand_n_inputs.exit

land.lhs.true21.i:                                ; preds = %if.end
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec24.i = bitcast %union.rtunion_def* %arrayidx23.i to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec24.i, align 8, !tbaa !10
  %arrayidx25.i = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 1, i64 0
  %9 = load %struct.rtx_def** %arrayidx25.i, align 8, !tbaa !10
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load26.i = load i32* %10, align 8
  %bf.clear27.i = and i32 %bf.load26.i, 65535
  switch i32 %bf.clear27.i, label %if.end67.i [
    i32 47, label %if.then29.i
    i32 41, label %if.then55.i
  ]

if.then29.i:                                      ; preds = %land.lhs.true21.i
  %arrayidx36.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 1
  %rtx37.i = bitcast %union.rtunion_def* %arrayidx36.i to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx37.i, align 8, !tbaa !10
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 3
  %rtvec40.i = bitcast %union.rtunion_def* %arrayidx39.i to %struct.rtvec_def**
  %12 = load %struct.rtvec_def** %rtvec40.i, align 8, !tbaa !10
  %num_elem41.i = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  br label %get_asm_operand_n_inputs.exit

if.then55.i:                                      ; preds = %land.lhs.true21.i
  %arrayidx62.i = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 3
  %rtvec63.i = bitcast %union.rtunion_def* %arrayidx62.i to %struct.rtvec_def**
  %13 = load %struct.rtvec_def** %rtvec63.i, align 8, !tbaa !10
  %num_elem64.i = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 0
  br label %get_asm_operand_n_inputs.exit

if.end67.i:                                       ; preds = %land.lhs.true21.i, %land.lhs.true.i, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 804, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.get_asm_operand_n_inputs, i64 0, i64 0)) #6
  unreachable

get_asm_operand_n_inputs.exit:                    ; preds = %if.then.i, %if.then12.i, %if.then29.i, %if.then55.i
  %retval.0.in.i = phi i32* [ %num_elem.i, %if.then.i ], [ %num_elem16.i, %if.then12.i ], [ %num_elem41.i, %if.then29.i ], [ %num_elem64.i, %if.then55.i ]
  %retval.0.i = load i32* %retval.0.in.i, align 4
  %14 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !48
  %conv = sext i8 %14 to i32
  %sub = sub i32 %conv, %retval.0.i
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %if.then4, label %for.cond.preheader

for.cond.preheader:                               ; preds = %get_asm_operand_n_inputs.exit
  %cmp7992 = icmp sgt i8 %14, 0
  br i1 %cmp7992, label %for.body, label %for.end

if.then4:                                         ; preds = %get_asm_operand_n_inputs.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1904, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_asm_stack_regs, i64 0, i64 0)) #6
  unreachable

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %15 = phi i8 [ %21, %for.inc ], [ %14, %for.cond.preheader ]
  %indvars.iv1022 = phi i64 [ %indvars.iv.next1023, %for.inc ], [ 0, %for.cond.preheader ]
  %arrayidx9 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv1022
  %16 = load %struct.rtx_def** %arrayidx9, align 8, !tbaa !10
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load = load i32* %17, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp10 = icmp eq i32 %bf.clear, 63
  br i1 %cmp10, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx15 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx16, align 8, !tbaa !10
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load17 = load i32* %19, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  %cmp19 = icmp eq i32 %bf.clear18, 61
  br i1 %cmp19, label %if.then21, label %for.inc

if.then21:                                        ; preds = %land.lhs.true
  %arrayidx28 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 1, i64 %indvars.iv1022
  store %struct.rtx_def** %rtx16, %struct.rtx_def*** %arrayidx28, align 8, !tbaa !10
  %20 = load %struct.rtx_def** %rtx16, align 8, !tbaa !10
  store %struct.rtx_def* %20, %struct.rtx_def** %arrayidx9, align 8, !tbaa !10
  %.pre1027 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !48
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then21
  %21 = phi i8 [ %15, %for.body ], [ %15, %land.lhs.true ], [ %.pre1027, %if.then21 ]
  %indvars.iv.next1023 = add nuw nsw i64 %indvars.iv1022, 1
  %conv6 = sext i8 %21 to i32
  %22 = trunc i64 %indvars.iv.next1023 to i32
  %cmp7 = icmp slt i32 %22, %conv6
  br i1 %cmp7, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %note.0986 = load %struct.rtx_def** %rtx39, align 8
  %tobool41987 = icmp eq %struct.rtx_def* %note.0986, null
  br i1 %tobool41987, label %for.end48.thread, label %for.body42

for.end48.thread:                                 ; preds = %for.end
  %.sub1032 = bitcast [0 x %struct.rtx_def*]* %0 to i32*
  %.sub1031 = bitcast [0 x %struct.rtx_def*]* %0 to %struct.rtx_def***
  %.sub = getelementptr inbounds [0 x %struct.rtx_def*]* %0, i64 0, i64 0
  br label %for.end127

for.body42:                                       ; preds = %for.end, %for.body42
  %note.0989 = phi %struct.rtx_def* [ %note.0, %for.body42 ], [ %note.0986, %for.end ]
  %i.1988 = phi i32 [ %inc43, %for.body42 ], [ 0, %for.end ]
  %inc43 = add nsw i32 %i.1988, 1
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %note.0989, i64 0, i32 1, i64 1
  %rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %note.0 = load %struct.rtx_def** %rtx47, align 8
  %tobool41 = icmp eq %struct.rtx_def* %note.0, null
  br i1 %tobool41, label %for.end48, label %for.body42

for.end48:                                        ; preds = %for.body42
  %phitmp = sext i32 %inc43 to i64
  %23 = alloca %struct.rtx_def*, i64 %phitmp, align 1
  %24 = alloca %struct.rtx_def**, i64 %phitmp, align 1
  %25 = alloca i32, i64 %phitmp, align 1
  br i1 %tobool41987, label %for.end127, label %for.body59

for.body59:                                       ; preds = %for.end48, %for.inc123
  %note.1984 = phi %struct.rtx_def* [ %note.1, %for.inc123 ], [ %note.0986, %for.end48 ]
  %n_notes.0983 = phi i32 [ %n_notes.1, %for.inc123 ], [ 0, %for.end48 ]
  %fld60 = getelementptr inbounds %struct.rtx_def* %note.1984, i64 0, i32 1
  %rtx62 = bitcast [1 x %union.rtunion_def]* %fld60 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx62, align 8, !tbaa !10
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load66 = load i32* %27, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 63
  br i1 %cmp68, label %land.lhs.true70, label %if.end85

land.lhs.true70:                                  ; preds = %for.body59
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx73, align 8, !tbaa !10
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load74 = load i32* %29, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  %cmp76 = icmp eq i32 %bf.clear75, 61
  %rtx73.rtx62 = select i1 %cmp76, %struct.rtx_def** %rtx73, %struct.rtx_def** %rtx62
  %. = select i1 %cmp76, %struct.rtx_def* %28, %struct.rtx_def* %26
  %.phi.trans.insert1025 = getelementptr inbounds %struct.rtx_def* %., i64 0, i32 0
  %bf.load86.pre = load i32* %.phi.trans.insert1025, align 8
  br label %if.end85

if.end85:                                         ; preds = %land.lhs.true70, %for.body59
  %bf.load86 = phi i32 [ %bf.load66, %for.body59 ], [ %bf.load86.pre, %land.lhs.true70 ]
  %loc.0 = phi %struct.rtx_def** [ %rtx62, %for.body59 ], [ %rtx73.rtx62, %land.lhs.true70 ]
  %reg.0 = phi %struct.rtx_def* [ %26, %for.body59 ], [ %., %land.lhs.true70 ]
  %bf.clear87 = and i32 %bf.load86, 65535
  %cmp88 = icmp eq i32 %bf.clear87, 61
  br i1 %cmp88, label %land.lhs.true90, label %for.inc123

land.lhs.true90:                                  ; preds = %if.end85
  %arrayidx92 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx92 to i32*
  %30 = load i32* %rtuint, align 4, !tbaa !4
  %31 = and i32 %30, -8
  %32 = icmp eq i32 %31, 8
  br i1 %32, label %land.lhs.true101, label %for.inc123

land.lhs.true101:                                 ; preds = %land.lhs.true90
  %33 = getelementptr inbounds %struct.rtx_def* %note.1984, i64 0, i32 0
  %bf.load102 = load i32* %33, align 8
  %bf.lshr = lshr i32 %bf.load102, 16
  %bf.clear103 = and i32 %bf.lshr, 255
  switch i32 %bf.clear103, label %for.inc123 [
    i32 1, label %if.then111
    i32 10, label %if.then111
  ]

if.then111:                                       ; preds = %land.lhs.true101, %land.lhs.true101
  %idxprom112 = sext i32 %n_notes.0983 to i64
  %arrayidx113 = getelementptr inbounds %struct.rtx_def** %23, i64 %idxprom112
  store %struct.rtx_def* %reg.0, %struct.rtx_def** %arrayidx113, align 8, !tbaa !10
  %arrayidx115 = getelementptr inbounds %struct.rtx_def*** %24, i64 %idxprom112
  store %struct.rtx_def** %loc.0, %struct.rtx_def*** %arrayidx115, align 8, !tbaa !10
  %arrayidx120 = getelementptr inbounds i32* %25, i64 %idxprom112
  store i32 %bf.clear103, i32* %arrayidx120, align 4, !tbaa !1
  %inc121 = add nsw i32 %n_notes.0983, 1
  br label %for.inc123

for.inc123:                                       ; preds = %land.lhs.true101, %if.end85, %land.lhs.true90, %if.then111
  %n_notes.1 = phi i32 [ %inc121, %if.then111 ], [ %n_notes.0983, %land.lhs.true90 ], [ %n_notes.0983, %if.end85 ], [ %n_notes.0983, %land.lhs.true101 ]
  %arrayidx125 = getelementptr inbounds %struct.rtx_def* %note.1984, i64 0, i32 1, i64 1
  %rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**
  %note.1 = load %struct.rtx_def** %rtx126, align 8
  %tobool58 = icmp eq %struct.rtx_def* %note.1, null
  br i1 %tobool58, label %for.end127, label %for.body59

for.end127:                                       ; preds = %for.inc123, %for.end48.thread, %for.end48
  %34 = phi i32* [ %25, %for.end48 ], [ %.sub1032, %for.end48.thread ], [ %25, %for.inc123 ]
  %35 = phi %struct.rtx_def*** [ %24, %for.end48 ], [ %.sub1031, %for.end48.thread ], [ %24, %for.inc123 ]
  %36 = phi %struct.rtx_def** [ %23, %for.end48 ], [ %.sub, %for.end48.thread ], [ %23, %for.inc123 ]
  %n_notes.0.lcssa = phi i32 [ 0, %for.end48 ], [ 0, %for.end48.thread ], [ %n_notes.1, %for.inc123 ]
  %bf.load128 = load i32* %3, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  %cmp130 = icmp eq i32 %bf.clear129, 39
  br i1 %cmp130, label %if.then132, label %if.end222

if.then132:                                       ; preds = %for.end127
  %arrayidx134 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtvec_def**
  %37 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !10
  %num_elem = getelementptr inbounds %struct.rtvec_def* %37, i64 0, i32 0
  %38 = load i32* %num_elem, align 4, !tbaa !11
  %conv135 = sext i32 %38 to i64
  %39 = alloca %struct.rtx_def*, i64 %conv135, align 1
  %40 = alloca %struct.rtx_def**, i64 %conv135, align 1
  %cmp148977 = icmp sgt i32 %38, 0
  br i1 %cmp148977, label %for.body150, label %if.end222

for.body150:                                      ; preds = %if.then132, %for.inc219
  %indvars.iv1020 = phi i64 [ %indvars.iv.next1021, %for.inc219 ], [ 0, %if.then132 ]
  %n_clobbers.0979 = phi i32 [ %n_clobbers.1, %for.inc219 ], [ 0, %if.then132 ]
  %arrayidx155 = getelementptr inbounds %struct.rtvec_def* %37, i64 0, i32 1, i64 %indvars.iv1020
  %41 = load %struct.rtx_def** %arrayidx155, align 8, !tbaa !10
  %42 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 0
  %bf.load156 = load i32* %42, align 8
  %bf.clear157 = and i32 %bf.load156, 65535
  %cmp158 = icmp eq i32 %bf.clear157, 49
  br i1 %cmp158, label %if.then160, label %for.inc219

if.then160:                                       ; preds = %for.body150
  %arrayidx169 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 0
  %rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx170, align 8, !tbaa !10
  %44 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 0
  %bf.load175 = load i32* %44, align 8
  %bf.clear176 = and i32 %bf.load175, 65535
  %cmp177 = icmp eq i32 %bf.clear176, 63
  br i1 %cmp177, label %land.lhs.true179, label %if.end194

land.lhs.true179:                                 ; preds = %if.then160
  %arrayidx181 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 0
  %rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx182, align 8, !tbaa !10
  %46 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 0
  %bf.load183 = load i32* %46, align 8
  %bf.clear184 = and i32 %bf.load183, 65535
  %cmp185 = icmp eq i32 %bf.clear184, 61
  %.824 = select i1 %cmp185, %struct.rtx_def* %45, %struct.rtx_def* %43
  %rtx182.rtx170 = select i1 %cmp185, %struct.rtx_def** %rtx182, %struct.rtx_def** %rtx170
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.824, i64 0, i32 0
  %bf.load195.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end194

if.end194:                                        ; preds = %land.lhs.true179, %if.then160
  %bf.load195 = phi i32 [ %bf.load175, %if.then160 ], [ %bf.load195.pre, %land.lhs.true179 ]
  %reg167.0 = phi %struct.rtx_def* [ %43, %if.then160 ], [ %.824, %land.lhs.true179 ]
  %loc171.0 = phi %struct.rtx_def** [ %rtx170, %if.then160 ], [ %rtx182.rtx170, %land.lhs.true179 ]
  %bf.clear196 = and i32 %bf.load195, 65535
  %cmp197 = icmp eq i32 %bf.clear196, 61
  br i1 %cmp197, label %land.lhs.true199, label %for.inc219

land.lhs.true199:                                 ; preds = %if.end194
  %arrayidx201 = getelementptr inbounds %struct.rtx_def* %reg167.0, i64 0, i32 1, i64 0
  %rtuint202 = bitcast %union.rtunion_def* %arrayidx201 to i32*
  %47 = load i32* %rtuint202, align 4, !tbaa !4
  %48 = and i32 %47, -8
  %49 = icmp eq i32 %48, 8
  br i1 %49, label %if.then211, label %for.inc219

if.then211:                                       ; preds = %land.lhs.true199
  %idxprom212 = sext i32 %n_clobbers.0979 to i64
  %arrayidx213 = getelementptr inbounds %struct.rtx_def** %39, i64 %idxprom212
  store %struct.rtx_def* %reg167.0, %struct.rtx_def** %arrayidx213, align 8, !tbaa !10
  %arrayidx215 = getelementptr inbounds %struct.rtx_def*** %40, i64 %idxprom212
  store %struct.rtx_def** %loc171.0, %struct.rtx_def*** %arrayidx215, align 8, !tbaa !10
  %inc216 = add nsw i32 %n_clobbers.0979, 1
  br label %for.inc219

for.inc219:                                       ; preds = %for.body150, %if.then211, %land.lhs.true199, %if.end194
  %n_clobbers.1 = phi i32 [ %inc216, %if.then211 ], [ %n_clobbers.0979, %land.lhs.true199 ], [ %n_clobbers.0979, %if.end194 ], [ %n_clobbers.0979, %for.body150 ]
  %indvars.iv.next1021 = add nuw nsw i64 %indvars.iv1020, 1
  %50 = trunc i64 %indvars.iv.next1021 to i32
  %cmp148 = icmp slt i32 %50, %38
  br i1 %cmp148, label %for.body150, label %if.end222

if.end222:                                        ; preds = %for.inc219, %if.then132, %for.end127
  %n_clobbers.2 = phi i32 [ 0, %for.end127 ], [ 0, %if.then132 ], [ %n_clobbers.1, %for.inc219 ]
  %clobber_loc.0 = phi %struct.rtx_def*** [ null, %for.end127 ], [ %40, %if.then132 ], [ %40, %for.inc219 ]
  %clobber_reg.0 = phi %struct.rtx_def** [ null, %for.end127 ], [ %39, %if.then132 ], [ %39, %for.inc219 ]
  %51 = bitcast %struct.stack_def* %temp_stack to i8*
  %52 = bitcast %struct.stack_def* %regstack to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 24, i32 8, i1 false), !tbaa.struct !45
  %cmp224974 = icmp sgt i32 %retval.0.i, 0
  br i1 %cmp224974, label %for.body226.lr.ph, label %for.end308.thread

for.end308.thread:                                ; preds = %if.end222
  call fastcc void @change_stack(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.stack_def* %temp_stack, i32 1)
  br label %for.cond350.preheader

for.body226.lr.ph:                                ; preds = %if.end222
  %idxprom250 = sext i32 %2 to i64
  %top.i = getelementptr inbounds %struct.stack_def* %temp_stack, i64 0, i32 0
  %53 = sext i32 %sub to i64
  br label %for.body226

for.body226:                                      ; preds = %for.body226.lr.ph, %for.inc306
  %indvars.iv1018 = phi i64 [ %53, %for.body226.lr.ph ], [ %indvars.iv.next1019, %for.inc306 ]
  %arrayidx228 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv1018
  %54 = load %struct.rtx_def** %arrayidx228, align 8, !tbaa !10
  %55 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load229 = load i32* %55, align 8
  %bf.clear230 = and i32 %bf.load229, 65535
  %cmp231 = icmp eq i32 %bf.clear230, 61
  br i1 %cmp231, label %land.lhs.true233, label %for.inc306

land.lhs.true233:                                 ; preds = %for.body226
  %arrayidx237 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1, i64 0
  %rtuint238 = bitcast %union.rtunion_def* %arrayidx237 to i32*
  %56 = load i32* %rtuint238, align 4, !tbaa !4
  %57 = and i32 %56, -8
  %58 = icmp eq i32 %57, 8
  br i1 %58, label %land.lhs.true249, label %for.inc306

land.lhs.true249:                                 ; preds = %land.lhs.true233
  %class = getelementptr inbounds [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv1018, i64 %idxprom250, i32 1
  %59 = load i32* %class, align 8, !tbaa !50
  %call254 = tail call i32 @reg_class_subset_p(i32 %59, i32 15) #4
  %tobool255 = icmp eq i32 %call254, 0
  br i1 %tobool255, label %for.inc306, label %land.lhs.true256

land.lhs.true256:                                 ; preds = %land.lhs.true249
  %60 = load i32* %class, align 8, !tbaa !50
  %cmp262 = icmp eq i32 %60, 15
  br i1 %cmp262, label %for.inc306, label %if.then264

if.then264:                                       ; preds = %land.lhs.true256
  %61 = load %struct.rtx_def** %arrayidx228, align 8, !tbaa !10
  %62 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 0
  %bf.load.i833 = load i32* %62, align 8
  %bf.clear.i834 = and i32 %bf.load.i833, 65535
  %cmp.i = icmp eq i32 %bf.clear.i834, 61
  br i1 %cmp.i, label %land.lhs.true.i836, label %if.then.i837

land.lhs.true.i836:                               ; preds = %if.then264
  %arrayidx.i835 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i835 to i32*
  %63 = load i32* %rtuint.i, align 4, !tbaa !4
  %64 = and i32 %63, -8
  %65 = icmp eq i32 %64, 8
  br i1 %65, label %if.end.i, label %if.then.i837

if.then.i837:                                     ; preds = %land.lhs.true.i836, %if.then264
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i:                                         ; preds = %land.lhs.true.i836
  %66 = load i32* %top.i, align 8, !tbaa !33
  %cmp730.i = icmp sgt i32 %66, -1
  br i1 %cmp730.i, label %for.body.lr.ph.i, label %if.then270

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %67 = sext i32 %66 to i64
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %68 = trunc i64 %indvars.iv.i to i32
  %cmp7.i = icmp sgt i32 %68, 0
  br i1 %cmp7.i, label %for.body.i, label %if.then270

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %67, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i ]
  %arrayidx9.i = getelementptr inbounds %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %indvars.iv.i
  %69 = load i8* %arrayidx9.i, align 1, !tbaa !1
  %conv.i = zext i8 %69 to i32
  %cmp13.i = icmp eq i32 %conv.i, %63
  br i1 %cmp13.i, label %get_hard_regnum.exit, label %for.cond.i

get_hard_regnum.exit:                             ; preds = %for.body.i
  %70 = trunc i64 %indvars.iv.i to i32
  %add.i = sub i32 8, %70
  %sub.i = add i32 %add.i, %66
  %cmp268 = icmp slt i32 %sub.i, 0
  br i1 %cmp268, label %if.then270, label %if.end271

if.then270:                                       ; preds = %if.end.i, %get_hard_regnum.exit, %for.cond.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1998, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_asm_stack_regs, i64 0, i64 0)) #6
  unreachable

if.end271:                                        ; preds = %get_hard_regnum.exit
  %cmp277 = icmp eq i32 %sub.i, %63
  br i1 %cmp277, label %for.inc306, label %if.then279

if.then279:                                       ; preds = %if.end271
  %sub280.neg = sub i32 8, %sub.i
  %sub281 = add i32 %sub280.neg, %66
  %sub288.neg = sub i32 8, %63
  %sub289 = add i32 %sub288.neg, %66
  %idxprom290 = sext i32 %sub281 to i64
  %arrayidx292 = getelementptr inbounds %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %idxprom290
  %71 = load i8* %arrayidx292, align 1, !tbaa !1
  %idxprom294 = sext i32 %sub289 to i64
  %arrayidx296 = getelementptr inbounds %struct.stack_def* %temp_stack, i64 0, i32 2, i64 %idxprom294
  %72 = load i8* %arrayidx296, align 1, !tbaa !1
  store i8 %72, i8* %arrayidx292, align 1, !tbaa !1
  store i8 %71, i8* %arrayidx296, align 1, !tbaa !1
  br label %for.inc306

for.inc306:                                       ; preds = %if.end271, %land.lhs.true256, %land.lhs.true249, %for.body226, %land.lhs.true233, %if.then279
  %indvars.iv.next1019 = add nsw i64 %indvars.iv1018, 1
  %73 = trunc i64 %indvars.iv.next1019 to i32
  %cmp224 = icmp slt i32 %73, %conv
  br i1 %cmp224, label %for.body226, label %for.end308

for.end308:                                       ; preds = %for.inc306
  call fastcc void @change_stack(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.stack_def* %temp_stack, i32 1)
  br i1 %cmp224974, label %for.body313.lr.ph, label %for.cond350.preheader

for.body313.lr.ph:                                ; preds = %for.end308
  %top.i845 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %74 = sext i32 %sub to i64
  br label %for.body313

for.cond350.preheader:                            ; preds = %for.inc347, %for.end308.thread, %for.end308
  %cmp351970 = icmp sgt i32 %n_notes.0.lcssa, 0
  br i1 %cmp351970, label %for.body353.lr.ph, label %for.cond373.preheader

for.body353.lr.ph:                                ; preds = %for.cond350.preheader
  %top.i878 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  br label %for.body353

for.body313:                                      ; preds = %for.body313.lr.ph, %for.inc347
  %indvars.iv1016 = phi i64 [ %74, %for.body313.lr.ph ], [ %indvars.iv.next1017, %for.inc347 ]
  %arrayidx315 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv1016
  %75 = load %struct.rtx_def** %arrayidx315, align 8, !tbaa !10
  %76 = getelementptr inbounds %struct.rtx_def* %75, i64 0, i32 0
  %bf.load316 = load i32* %76, align 8
  %bf.clear317 = and i32 %bf.load316, 65535
  %cmp318 = icmp eq i32 %bf.clear317, 61
  br i1 %cmp318, label %land.lhs.true320, label %for.inc347

land.lhs.true320:                                 ; preds = %for.body313
  %arrayidx324 = getelementptr inbounds %struct.rtx_def* %75, i64 0, i32 1, i64 0
  %rtuint325 = bitcast %union.rtunion_def* %arrayidx324 to i32*
  %77 = load i32* %rtuint325, align 4, !tbaa !4
  %78 = and i32 %77, -8
  %79 = icmp eq i32 %78, 8
  br i1 %79, label %if.end.i847, label %for.inc347

if.end.i847:                                      ; preds = %land.lhs.true320
  %80 = load i32* %top.i845, align 4, !tbaa !33
  %cmp730.i846 = icmp sgt i32 %80, -1
  br i1 %cmp730.i846, label %for.body.lr.ph.i848, label %if.then342

for.body.lr.ph.i848:                              ; preds = %if.end.i847
  %81 = sext i32 %80 to i64
  br label %for.body.i856

for.cond.i851:                                    ; preds = %for.body.i856
  %indvars.iv.next.i849 = add nsw i64 %indvars.iv.i852, -1
  %82 = trunc i64 %indvars.iv.i852 to i32
  %cmp7.i850 = icmp sgt i32 %82, 0
  br i1 %cmp7.i850, label %for.body.i856, label %if.then342

for.body.i856:                                    ; preds = %for.cond.i851, %for.body.lr.ph.i848
  %indvars.iv.i852 = phi i64 [ %81, %for.body.lr.ph.i848 ], [ %indvars.iv.next.i849, %for.cond.i851 ]
  %arrayidx9.i853 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i852
  %83 = load i8* %arrayidx9.i853, align 1, !tbaa !1
  %conv.i854 = zext i8 %83 to i32
  %cmp13.i855 = icmp eq i32 %conv.i854, %77
  br i1 %cmp13.i855, label %get_hard_regnum.exit861, label %for.cond.i851

get_hard_regnum.exit861:                          ; preds = %for.body.i856
  %84 = trunc i64 %indvars.iv.i852 to i32
  %add.i857 = sub i32 8, %84
  %sub.i858 = add i32 %add.i857, %80
  %cmp340 = icmp slt i32 %sub.i858, 0
  br i1 %cmp340, label %if.then342, label %if.end343

if.then342:                                       ; preds = %if.end.i847, %get_hard_regnum.exit861, %for.cond.i851
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2032, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_asm_stack_regs, i64 0, i64 0)) #6
  unreachable

if.end343:                                        ; preds = %get_hard_regnum.exit861
  %arrayidx345 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 1, i64 %indvars.iv1016
  %85 = load %struct.rtx_def*** %arrayidx345, align 8, !tbaa !10
  %86 = and i32 %sub.i858, -8
  %87 = icmp eq i32 %86, 8
  br i1 %87, label %lor.lhs.false2.i, label %if.then.i868

lor.lhs.false2.i:                                 ; preds = %if.end343
  %88 = load %struct.rtx_def** %85, align 8, !tbaa !10
  %89 = getelementptr inbounds %struct.rtx_def* %88, i64 0, i32 0
  %bf.load.i862 = load i32* %89, align 8
  %bf.clear.i863 = and i32 %bf.load.i862, 65535
  %cmp3.i864 = icmp eq i32 %bf.clear.i863, 61
  br i1 %cmp3.i864, label %land.lhs.true.i867, label %if.then.i868

land.lhs.true.i867:                               ; preds = %lor.lhs.false2.i
  %arrayidx.i865 = getelementptr inbounds %struct.rtx_def* %88, i64 0, i32 1, i64 0
  %rtuint.i866 = bitcast %union.rtunion_def* %arrayidx.i865 to i32*
  %90 = load i32* %rtuint.i866, align 4, !tbaa !4
  %91 = and i32 %90, -8
  %92 = icmp eq i32 %91, 8
  br i1 %92, label %if.end.i869, label %if.then.i868

if.then.i868:                                     ; preds = %land.lhs.true.i867, %lor.lhs.false2.i, %if.end343
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i869:                                      ; preds = %land.lhs.true.i867
  %bf.lshr.i = lshr i32 %bf.load.i862, 16
  %bf.clear11.i = and i32 %bf.lshr.i, 255
  %idxprom27.i = zext i32 %bf.clear11.i to i64
  %arrayidx12.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i
  %93 = load i32* %arrayidx12.i, align 4, !tbaa !1
  switch i32 %93, label %sw.default.i [
    i32 2, label %replace_reg.exit
    i32 6, label %replace_reg.exit
  ]

sw.default.i:                                     ; preds = %if.end.i869
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit:                                 ; preds = %if.end.i869, %if.end.i869
  %sub.i870 = add nsw i32 %sub.i858, -8
  %idxprom17.i = sext i32 %sub.i870 to i64
  %arrayidx19.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i, i64 %idxprom27.i
  %94 = load %struct.rtx_def** %arrayidx19.i, align 8, !tbaa !10
  store %struct.rtx_def* %94, %struct.rtx_def** %85, align 8, !tbaa !10
  br label %for.inc347

for.inc347:                                       ; preds = %for.body313, %land.lhs.true320, %replace_reg.exit
  %indvars.iv.next1017 = add nsw i64 %indvars.iv1016, 1
  %95 = trunc i64 %indvars.iv.next1017 to i32
  %cmp311 = icmp slt i32 %95, %conv
  br i1 %cmp311, label %for.body313, label %for.cond350.preheader

for.cond373.preheader:                            ; preds = %for.inc370, %for.cond350.preheader
  %cmp374968 = icmp sgt i32 %n_clobbers.2, 0
  br i1 %cmp374968, label %for.body376.lr.ph, label %for.cond394.preheader

for.body376.lr.ph:                                ; preds = %for.cond373.preheader
  %top.i920 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  br label %for.body376

for.body353:                                      ; preds = %for.body353.lr.ph, %for.inc370
  %indvars.iv1014 = phi i64 [ 0, %for.body353.lr.ph ], [ %indvars.iv.next1015, %for.inc370 ]
  %arrayidx355 = getelementptr inbounds i32* %34, i64 %indvars.iv1014
  %96 = load i32* %arrayidx355, align 4, !tbaa !1
  %cmp356 = icmp eq i32 %96, 1
  br i1 %cmp356, label %if.then358, label %for.inc370

if.then358:                                       ; preds = %for.body353
  %arrayidx361 = getelementptr inbounds %struct.rtx_def** %36, i64 %indvars.iv1014
  %97 = load %struct.rtx_def** %arrayidx361, align 8, !tbaa !10
  %98 = getelementptr inbounds %struct.rtx_def* %97, i64 0, i32 0
  %bf.load.i871 = load i32* %98, align 8
  %bf.clear.i872 = and i32 %bf.load.i871, 65535
  %cmp.i873 = icmp eq i32 %bf.clear.i872, 61
  br i1 %cmp.i873, label %land.lhs.true.i876, label %if.then.i877

land.lhs.true.i876:                               ; preds = %if.then358
  %arrayidx.i874 = getelementptr inbounds %struct.rtx_def* %97, i64 0, i32 1, i64 0
  %rtuint.i875 = bitcast %union.rtunion_def* %arrayidx.i874 to i32*
  %99 = load i32* %rtuint.i875, align 4, !tbaa !4
  %100 = and i32 %99, -8
  %101 = icmp eq i32 %100, 8
  br i1 %101, label %if.end.i880, label %if.then.i877

if.then.i877:                                     ; preds = %land.lhs.true.i876, %if.then358
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i880:                                      ; preds = %land.lhs.true.i876
  %102 = load i32* %top.i878, align 4, !tbaa !33
  %cmp730.i879 = icmp sgt i32 %102, -1
  br i1 %cmp730.i879, label %for.body.lr.ph.i881, label %if.then365

for.body.lr.ph.i881:                              ; preds = %if.end.i880
  %103 = sext i32 %102 to i64
  br label %for.body.i889

for.cond.i884:                                    ; preds = %for.body.i889
  %indvars.iv.next.i882 = add nsw i64 %indvars.iv.i885, -1
  %104 = trunc i64 %indvars.iv.i885 to i32
  %cmp7.i883 = icmp sgt i32 %104, 0
  br i1 %cmp7.i883, label %for.body.i889, label %if.then365

for.body.i889:                                    ; preds = %for.cond.i884, %for.body.lr.ph.i881
  %indvars.iv.i885 = phi i64 [ %103, %for.body.lr.ph.i881 ], [ %indvars.iv.next.i882, %for.cond.i884 ]
  %arrayidx9.i886 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i885
  %105 = load i8* %arrayidx9.i886, align 1, !tbaa !1
  %conv.i887 = zext i8 %105 to i32
  %cmp13.i888 = icmp eq i32 %conv.i887, %99
  br i1 %cmp13.i888, label %get_hard_regnum.exit894, label %for.cond.i884

get_hard_regnum.exit894:                          ; preds = %for.body.i889
  %106 = trunc i64 %indvars.iv.i885 to i32
  %add.i890 = sub i32 8, %106
  %sub.i891 = add i32 %add.i890, %102
  %cmp363 = icmp slt i32 %sub.i891, 0
  br i1 %cmp363, label %if.then365, label %if.end366

if.then365:                                       ; preds = %if.end.i880, %get_hard_regnum.exit894, %for.cond.i884
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_asm_stack_regs, i64 0, i64 0)) #6
  unreachable

if.end366:                                        ; preds = %get_hard_regnum.exit894
  %arrayidx368 = getelementptr inbounds %struct.rtx_def*** %35, i64 %indvars.iv1014
  %107 = load %struct.rtx_def*** %arrayidx368, align 8, !tbaa !10
  %108 = and i32 %sub.i891, -8
  %109 = icmp eq i32 %108, 8
  br i1 %109, label %lor.lhs.false2.i898, label %if.then.i902

lor.lhs.false2.i898:                              ; preds = %if.end366
  %110 = load %struct.rtx_def** %107, align 8, !tbaa !10
  %111 = getelementptr inbounds %struct.rtx_def* %110, i64 0, i32 0
  %bf.load.i895 = load i32* %111, align 8
  %bf.clear.i896 = and i32 %bf.load.i895, 65535
  %cmp3.i897 = icmp eq i32 %bf.clear.i896, 61
  br i1 %cmp3.i897, label %land.lhs.true.i901, label %if.then.i902

land.lhs.true.i901:                               ; preds = %lor.lhs.false2.i898
  %arrayidx.i899 = getelementptr inbounds %struct.rtx_def* %110, i64 0, i32 1, i64 0
  %rtuint.i900 = bitcast %union.rtunion_def* %arrayidx.i899 to i32*
  %112 = load i32* %rtuint.i900, align 4, !tbaa !4
  %113 = and i32 %112, -8
  %114 = icmp eq i32 %113, 8
  br i1 %114, label %if.end.i907, label %if.then.i902

if.then.i902:                                     ; preds = %land.lhs.true.i901, %lor.lhs.false2.i898, %if.end366
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i907:                                      ; preds = %land.lhs.true.i901
  %bf.lshr.i903 = lshr i32 %bf.load.i895, 16
  %bf.clear11.i904 = and i32 %bf.lshr.i903, 255
  %idxprom27.i905 = zext i32 %bf.clear11.i904 to i64
  %arrayidx12.i906 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i905
  %115 = load i32* %arrayidx12.i906, align 4, !tbaa !1
  switch i32 %115, label %sw.default.i908 [
    i32 2, label %replace_reg.exit912
    i32 6, label %replace_reg.exit912
  ]

sw.default.i908:                                  ; preds = %if.end.i907
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit912:                              ; preds = %if.end.i907, %if.end.i907
  %sub.i909 = add nsw i32 %sub.i891, -8
  %idxprom17.i910 = sext i32 %sub.i909 to i64
  %arrayidx19.i911 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i910, i64 %idxprom27.i905
  %116 = load %struct.rtx_def** %arrayidx19.i911, align 8, !tbaa !10
  store %struct.rtx_def* %116, %struct.rtx_def** %107, align 8, !tbaa !10
  br label %for.inc370

for.inc370:                                       ; preds = %for.body353, %replace_reg.exit912
  %indvars.iv.next1015 = add nuw nsw i64 %indvars.iv1014, 1
  %117 = trunc i64 %indvars.iv.next1015 to i32
  %cmp351 = icmp slt i32 %117, %n_notes.0.lcssa
  br i1 %cmp351, label %for.body353, label %for.cond373.preheader

for.cond394.preheader:                            ; preds = %for.inc391, %for.cond373.preheader
  %top448 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %reg_set = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  br i1 %cmp224974, label %for.body398.lr.ph, label %for.cond459.preheader

for.body398.lr.ph:                                ; preds = %for.cond394.preheader
  %idxprom441 = sext i32 %2 to i64
  %118 = sext i32 %sub to i64
  br label %for.body398

for.body376:                                      ; preds = %for.body376.lr.ph, %for.inc391
  %indvars.iv1012 = phi i64 [ 0, %for.body376.lr.ph ], [ %indvars.iv.next1013, %for.inc391 ]
  %arrayidx379 = getelementptr inbounds %struct.rtx_def** %clobber_reg.0, i64 %indvars.iv1012
  %119 = load %struct.rtx_def** %arrayidx379, align 8, !tbaa !10
  %120 = getelementptr inbounds %struct.rtx_def* %119, i64 0, i32 0
  %bf.load.i913 = load i32* %120, align 8
  %bf.clear.i914 = and i32 %bf.load.i913, 65535
  %cmp.i915 = icmp eq i32 %bf.clear.i914, 61
  br i1 %cmp.i915, label %land.lhs.true.i918, label %if.then.i919

land.lhs.true.i918:                               ; preds = %for.body376
  %arrayidx.i916 = getelementptr inbounds %struct.rtx_def* %119, i64 0, i32 1, i64 0
  %rtuint.i917 = bitcast %union.rtunion_def* %arrayidx.i916 to i32*
  %121 = load i32* %rtuint.i917, align 4, !tbaa !4
  %122 = and i32 %121, -8
  %123 = icmp eq i32 %122, 8
  br i1 %123, label %if.end.i922, label %if.then.i919

if.then.i919:                                     ; preds = %land.lhs.true.i918, %for.body376
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i922:                                      ; preds = %land.lhs.true.i918
  %124 = load i32* %top.i920, align 4, !tbaa !33
  %cmp730.i921 = icmp sgt i32 %124, -1
  br i1 %cmp730.i921, label %for.body.lr.ph.i923, label %for.inc391

for.body.lr.ph.i923:                              ; preds = %if.end.i922
  %125 = sext i32 %124 to i64
  br label %for.body.i931

for.cond.i926:                                    ; preds = %for.body.i931
  %indvars.iv.next.i924 = add nsw i64 %indvars.iv.i927, -1
  %126 = trunc i64 %indvars.iv.i927 to i32
  %cmp7.i925 = icmp sgt i32 %126, 0
  br i1 %cmp7.i925, label %for.body.i931, label %for.inc391

for.body.i931:                                    ; preds = %for.cond.i926, %for.body.lr.ph.i923
  %indvars.iv.i927 = phi i64 [ %125, %for.body.lr.ph.i923 ], [ %indvars.iv.next.i924, %for.cond.i926 ]
  %arrayidx9.i928 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i927
  %127 = load i8* %arrayidx9.i928, align 1, !tbaa !1
  %conv.i929 = zext i8 %127 to i32
  %cmp13.i930 = icmp eq i32 %conv.i929, %121
  br i1 %cmp13.i930, label %get_hard_regnum.exit936, label %for.cond.i926

get_hard_regnum.exit936:                          ; preds = %for.body.i931
  %128 = trunc i64 %indvars.iv.i927 to i32
  %add.i932 = sub i32 8, %128
  %sub.i933 = add i32 %add.i932, %124
  %cmp381 = icmp sgt i32 %sub.i933, -1
  br i1 %cmp381, label %if.then383, label %for.inc391

if.then383:                                       ; preds = %get_hard_regnum.exit936
  %sub384 = add nsw i32 %sub.i933, -8
  %idxprom385 = sext i32 %sub384 to i64
  %arrayidx387 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom385, i64 16
  %129 = load %struct.rtx_def** %arrayidx387, align 8, !tbaa !10
  %arrayidx389 = getelementptr inbounds %struct.rtx_def*** %clobber_loc.0, i64 %indvars.iv1012
  %130 = load %struct.rtx_def*** %arrayidx389, align 8, !tbaa !10
  store %struct.rtx_def* %129, %struct.rtx_def** %130, align 8, !tbaa !10
  br label %for.inc391

for.inc391:                                       ; preds = %for.cond.i926, %if.end.i922, %get_hard_regnum.exit936, %if.then383
  %indvars.iv.next1013 = add nuw nsw i64 %indvars.iv1012, 1
  %131 = trunc i64 %indvars.iv.next1013 to i32
  %cmp374 = icmp slt i32 %131, %n_clobbers.2
  br i1 %cmp374, label %for.body376, label %for.cond394.preheader

for.cond459.preheader:                            ; preds = %for.inc456, %for.cond394.preheader
  %cmp465959 = icmp sgt i32 %sub, 0
  br label %for.cond464.preheader

for.body398:                                      ; preds = %for.body398.lr.ph, %for.inc456
  %indvars.iv1010 = phi i64 [ %118, %for.body398.lr.ph ], [ %indvars.iv.next1011, %for.inc456 ]
  %arrayidx400 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv1010
  %132 = load %struct.rtx_def** %arrayidx400, align 8, !tbaa !10
  %133 = getelementptr inbounds %struct.rtx_def* %132, i64 0, i32 0
  %bf.load401 = load i32* %133, align 8
  %bf.clear402 = and i32 %bf.load401, 65535
  %cmp403 = icmp eq i32 %bf.clear402, 61
  br i1 %cmp403, label %land.lhs.true405, label %for.inc456

land.lhs.true405:                                 ; preds = %for.body398
  %arrayidx409 = getelementptr inbounds %struct.rtx_def* %132, i64 0, i32 1, i64 0
  %rtuint410 = bitcast %union.rtunion_def* %arrayidx409 to i32*
  %134 = load i32* %rtuint410, align 4, !tbaa !4
  %135 = and i32 %134, -8
  %136 = icmp eq i32 %135, 8
  br i1 %136, label %for.cond423.preheader, label %for.inc456

for.cond423.preheader:                            ; preds = %land.lhs.true405
  br i1 %cmp374968, label %for.body426, label %lor.lhs.false440

for.cond423:                                      ; preds = %for.body426
  %137 = trunc i64 %indvars.iv.next1009 to i32
  %cmp424 = icmp slt i32 %137, %n_clobbers.2
  br i1 %cmp424, label %for.cond423.for.body426_crit_edge, label %lor.lhs.false440

for.cond423.for.body426_crit_edge:                ; preds = %for.cond423
  %.pre = load %struct.rtx_def** %arrayidx400, align 8, !tbaa !10
  br label %for.body426

for.body426:                                      ; preds = %for.cond423.preheader, %for.cond423.for.body426_crit_edge
  %138 = phi %struct.rtx_def* [ %.pre, %for.cond423.for.body426_crit_edge ], [ %132, %for.cond423.preheader ]
  %indvars.iv1008 = phi i64 [ %indvars.iv.next1009, %for.cond423.for.body426_crit_edge ], [ 0, %for.cond423.preheader ]
  %arrayidx428 = getelementptr inbounds %struct.rtx_def** %clobber_reg.0, i64 %indvars.iv1008
  %139 = load %struct.rtx_def** %arrayidx428, align 8, !tbaa !10
  %call431 = tail call i32 @operands_match_p(%struct.rtx_def* %139, %struct.rtx_def* %138) #4
  %tobool432 = icmp eq i32 %call431, 0
  %indvars.iv.next1009 = add nuw nsw i64 %indvars.iv1008, 1
  br i1 %tobool432, label %for.cond423, label %if.then447

lor.lhs.false440:                                 ; preds = %for.cond423, %for.cond423.preheader
  %matches = getelementptr inbounds [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv1010, i64 %idxprom441, i32 3
  %140 = load i32* %matches, align 8, !tbaa !52
  %cmp445 = icmp sgt i32 %140, -1
  br i1 %cmp445, label %if.then447, label %for.inc456

if.then447:                                       ; preds = %for.body426, %lor.lhs.false440
  %141 = load i32* %top448, align 4, !tbaa !33
  %idxprom449 = sext i32 %141 to i64
  %arrayidx451 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom449
  %142 = load i8* %arrayidx451, align 1, !tbaa !1
  %sh_prom = zext i8 %142 to i64
  %shl = shl i64 1, %sh_prom
  %neg = xor i64 %shl, -1
  %143 = load i64* %reg_set, align 8, !tbaa !34
  %and = and i64 %143, %neg
  store i64 %and, i64* %reg_set, align 8, !tbaa !34
  %dec = add nsw i32 %141, -1
  store i32 %dec, i32* %top448, align 4, !tbaa !33
  br label %for.inc456

for.inc456:                                       ; preds = %for.body398, %land.lhs.true405, %if.then447, %lor.lhs.false440
  %indvars.iv.next1011 = add nsw i64 %indvars.iv1010, 1
  %144 = trunc i64 %indvars.iv.next1011 to i32
  %cmp396 = icmp slt i32 %144, %conv
  br i1 %cmp396, label %for.body398, label %for.cond459.preheader

for.cond464.preheader:                            ; preds = %for.cond459.preheader, %for.inc512
  %indvars.iv1006 = phi i64 [ 15, %for.cond459.preheader ], [ %indvars.iv.next1007, %for.inc512 ]
  %i.8961 = phi i32 [ 15, %for.cond459.preheader ], [ %dec513, %for.inc512 ]
  br i1 %cmp465959, label %for.body467, label %for.inc512

for.cond515.preheader:                            ; preds = %for.inc512
  br i1 %cmp465959, label %for.body518, label %for.cond576.preheader

for.body467:                                      ; preds = %for.cond464.preheader, %for.inc509
  %indvars.iv1004 = phi i64 [ %indvars.iv.next1005, %for.inc509 ], [ 0, %for.cond464.preheader ]
  %arrayidx469 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv1004
  %145 = load %struct.rtx_def** %arrayidx469, align 8, !tbaa !10
  %146 = getelementptr inbounds %struct.rtx_def* %145, i64 0, i32 0
  %bf.load470 = load i32* %146, align 8
  %bf.clear471 = and i32 %bf.load470, 65535
  %cmp472 = icmp eq i32 %bf.clear471, 61
  br i1 %cmp472, label %land.lhs.true474, label %for.inc509

land.lhs.true474:                                 ; preds = %for.body467
  %arrayidx478 = getelementptr inbounds %struct.rtx_def* %145, i64 0, i32 1, i64 0
  %rtuint479 = bitcast %union.rtunion_def* %arrayidx478 to i32*
  %147 = load i32* %rtuint479, align 4, !tbaa !4
  %148 = and i32 %147, -8
  %149 = icmp eq i32 %148, 8
  %150 = trunc i64 %indvars.iv1006 to i32
  %cmp496 = icmp eq i32 %147, %150
  %or.cond830 = and i1 %149, %cmp496
  br i1 %or.cond830, label %if.then498, label %for.inc509

if.then498:                                       ; preds = %land.lhs.true474
  %conv499 = trunc i32 %i.8961 to i8
  %151 = load i32* %top448, align 4, !tbaa !33
  %inc501 = add nsw i32 %151, 1
  store i32 %inc501, i32* %top448, align 4, !tbaa !33
  %idxprom502 = sext i32 %inc501 to i64
  %arrayidx504 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom502
  store i8 %conv499, i8* %arrayidx504, align 1, !tbaa !1
  %shl506 = shl i64 1, %indvars.iv1006
  %152 = load i64* %reg_set, align 8, !tbaa !34
  %or = or i64 %152, %shl506
  store i64 %or, i64* %reg_set, align 8, !tbaa !34
  br label %for.inc512

for.inc509:                                       ; preds = %for.body467, %land.lhs.true474
  %indvars.iv.next1005 = add nuw nsw i64 %indvars.iv1004, 1
  %153 = trunc i64 %indvars.iv.next1005 to i32
  %cmp465 = icmp slt i32 %153, %sub
  br i1 %cmp465, label %for.body467, label %for.inc512

for.inc512:                                       ; preds = %for.inc509, %for.cond464.preheader, %if.then498
  %indvars.iv.next1007 = add nsw i64 %indvars.iv1006, -1
  %dec513 = add nsw i32 %i.8961, -1
  %154 = trunc i64 %indvars.iv.next1007 to i32
  %cmp460 = icmp sgt i32 %154, 7
  br i1 %cmp460, label %for.cond464.preheader, label %for.cond515.preheader

for.cond576.preheader:                            ; preds = %for.inc573, %for.cond515.preheader
  %insn.addr.0.lcssa = phi %struct.rtx_def* [ %insn, %for.cond515.preheader ], [ %insn.addr.1, %for.inc573 ]
  br i1 %cmp224974, label %for.body580.lr.ph, label %for.end648

for.body580.lr.ph:                                ; preds = %for.cond576.preheader
  %155 = sext i32 %sub to i64
  br label %for.body580

for.body518:                                      ; preds = %for.cond515.preheader, %for.inc573
  %indvars.iv1002 = phi i64 [ %indvars.iv.next1003, %for.inc573 ], [ 0, %for.cond515.preheader ]
  %insn.addr.0958 = phi %struct.rtx_def* [ %insn.addr.1, %for.inc573 ], [ %insn, %for.cond515.preheader ]
  %arrayidx520 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv1002
  %156 = load %struct.rtx_def** %arrayidx520, align 8, !tbaa !10
  %157 = getelementptr inbounds %struct.rtx_def* %156, i64 0, i32 0
  %bf.load521 = load i32* %157, align 8
  %bf.clear522 = and i32 %bf.load521, 65535
  %cmp523 = icmp eq i32 %bf.clear522, 61
  br i1 %cmp523, label %land.lhs.true525, label %for.inc573

land.lhs.true525:                                 ; preds = %for.body518
  %arrayidx529 = getelementptr inbounds %struct.rtx_def* %156, i64 0, i32 1, i64 0
  %rtuint530 = bitcast %union.rtunion_def* %arrayidx529 to i32*
  %158 = load i32* %rtuint530, align 4, !tbaa !4
  %159 = and i32 %158, -8
  %.not = icmp ne i32 %159, 8
  %cmp351970.not = xor i1 %cmp351970, true
  %brmerge = or i1 %.not, %cmp351970.not
  br i1 %brmerge, label %for.inc573, label %for.body546

for.body546:                                      ; preds = %land.lhs.true525, %for.inc569
  %indvars.iv1000 = phi i64 [ %indvars.iv.next1001, %for.inc569 ], [ 0, %land.lhs.true525 ]
  %arrayidx553 = getelementptr inbounds %struct.rtx_def** %36, i64 %indvars.iv1000
  %160 = load %struct.rtx_def** %arrayidx553, align 8, !tbaa !10
  %arrayidx555 = getelementptr inbounds %struct.rtx_def* %160, i64 0, i32 1, i64 0
  %rtuint556 = bitcast %union.rtunion_def* %arrayidx555 to i32*
  %161 = load i32* %rtuint556, align 4, !tbaa !4
  %cmp557 = icmp eq i32 %158, %161
  br i1 %cmp557, label %land.lhs.true559, label %for.inc569

land.lhs.true559:                                 ; preds = %for.body546
  %arrayidx561 = getelementptr inbounds i32* %34, i64 %indvars.iv1000
  %162 = load i32* %arrayidx561, align 4, !tbaa !1
  %cmp562 = icmp eq i32 %162, 10
  br i1 %cmp562, label %if.then564, label %for.inc569

if.then564:                                       ; preds = %land.lhs.true559
  %call567 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.0958, %struct.stack_def* %regstack, %struct.rtx_def* %156, i32 0)
  br label %for.inc573

for.inc569:                                       ; preds = %for.body546, %land.lhs.true559
  %indvars.iv.next1001 = add nuw nsw i64 %indvars.iv1000, 1
  %163 = trunc i64 %indvars.iv.next1001 to i32
  %cmp544 = icmp slt i32 %163, %n_notes.0.lcssa
  br i1 %cmp544, label %for.body546, label %for.inc573

for.inc573:                                       ; preds = %for.inc569, %land.lhs.true525, %for.body518, %if.then564
  %insn.addr.1 = phi %struct.rtx_def* [ %call567, %if.then564 ], [ %insn.addr.0958, %land.lhs.true525 ], [ %insn.addr.0958, %for.body518 ], [ %insn.addr.0958, %for.inc569 ]
  %indvars.iv.next1003 = add nuw nsw i64 %indvars.iv1002, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1003 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %sub
  br i1 %exitcond, label %for.cond576.preheader, label %for.body518

for.body580:                                      ; preds = %for.body580.lr.ph, %for.inc646
  %indvars.iv998 = phi i64 [ %155, %for.body580.lr.ph ], [ %indvars.iv.next999, %for.inc646 ]
  %insn.addr.2953 = phi %struct.rtx_def* [ %insn.addr.0.lcssa, %for.body580.lr.ph ], [ %insn.addr.3, %for.inc646 ]
  %arrayidx582 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv998
  %164 = load %struct.rtx_def** %arrayidx582, align 8, !tbaa !10
  %165 = getelementptr inbounds %struct.rtx_def* %164, i64 0, i32 0
  %bf.load583 = load i32* %165, align 8
  %bf.clear584 = and i32 %bf.load583, 65535
  %cmp585 = icmp eq i32 %bf.clear584, 61
  br i1 %cmp585, label %land.lhs.true587, label %for.inc646

land.lhs.true587:                                 ; preds = %for.body580
  %arrayidx591 = getelementptr inbounds %struct.rtx_def* %164, i64 0, i32 1, i64 0
  %rtuint592 = bitcast %union.rtunion_def* %arrayidx591 to i32*
  %166 = load i32* %rtuint592, align 4, !tbaa !4
  %167 = and i32 %166, -8
  %.not1028 = icmp ne i32 %167, 8
  %cmp351970.not1029 = xor i1 %cmp351970, true
  %brmerge1030 = or i1 %.not1028, %cmp351970.not1029
  br i1 %brmerge1030, label %for.inc646, label %for.body608.lr.ph

for.body608.lr.ph:                                ; preds = %land.lhs.true587
  %sh_prom633 = zext i32 %166 to i64
  %shl634 = shl i64 1, %sh_prom633
  br label %for.body608

for.body608:                                      ; preds = %for.body608.lr.ph, %for.inc642
  %indvars.iv = phi i64 [ 0, %for.body608.lr.ph ], [ %indvars.iv.next, %for.inc642 ]
  %arrayidx615 = getelementptr inbounds %struct.rtx_def** %36, i64 %indvars.iv
  %168 = load %struct.rtx_def** %arrayidx615, align 8, !tbaa !10
  %arrayidx617 = getelementptr inbounds %struct.rtx_def* %168, i64 0, i32 1, i64 0
  %rtuint618 = bitcast %union.rtunion_def* %arrayidx617 to i32*
  %169 = load i32* %rtuint618, align 4, !tbaa !4
  %cmp619 = icmp eq i32 %166, %169
  br i1 %cmp619, label %land.lhs.true621, label %for.inc642

land.lhs.true621:                                 ; preds = %for.body608
  %arrayidx623 = getelementptr inbounds i32* %34, i64 %indvars.iv
  %170 = load i32* %arrayidx623, align 4, !tbaa !1
  %cmp624 = icmp eq i32 %170, 1
  br i1 %cmp624, label %land.lhs.true626, label %for.inc642

land.lhs.true626:                                 ; preds = %land.lhs.true621
  %171 = load i64* %reg_set, align 8, !tbaa !34
  %and635 = and i64 %171, %shl634
  %tobool636 = icmp eq i64 %and635, 0
  br i1 %tobool636, label %for.inc642, label %if.then637

if.then637:                                       ; preds = %land.lhs.true626
  %call640 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.2953, %struct.stack_def* %regstack, %struct.rtx_def* %164, i32 0)
  br label %for.inc646

for.inc642:                                       ; preds = %land.lhs.true626, %for.body608, %land.lhs.true621
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %172 = trunc i64 %indvars.iv.next to i32
  %cmp606 = icmp slt i32 %172, %n_notes.0.lcssa
  br i1 %cmp606, label %for.body608, label %for.inc646

for.inc646:                                       ; preds = %for.inc642, %land.lhs.true587, %for.body580, %if.then637
  %insn.addr.3 = phi %struct.rtx_def* [ %call640, %if.then637 ], [ %insn.addr.2953, %land.lhs.true587 ], [ %insn.addr.2953, %for.body580 ], [ %insn.addr.2953, %for.inc642 ]
  %indvars.iv.next999 = add nsw i64 %indvars.iv998, 1
  %173 = trunc i64 %indvars.iv.next999 to i32
  %cmp578 = icmp slt i32 %173, %conv
  br i1 %cmp578, label %for.body580, label %for.end648

for.end648:                                       ; preds = %for.inc646, %for.cond576.preheader, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @subst_stack_regs_pat(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %pat) #0 {
entry:
  %src_note = alloca [3 x %struct.rtx_def*], align 16
  %0 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog902 [
    i32 48, label %for.cond.i
    i32 49, label %for.cond.i1229
    i32 47, label %sw.bb109
  ]

for.cond.i:                                       ; preds = %for.cond.i, %for.cond.i, %for.cond.i, %sw.bb.i, %land.lhs.true.i, %entry
  %pat.sink = phi %struct.rtx_def* [ %pat, %entry ], [ %1, %land.lhs.true.i ], [ %1, %sw.bb.i ], [ %1, %for.cond.i ], [ %1, %for.cond.i ], [ %1, %for.cond.i ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pat.sink, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load.i = load i32* %2, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %get_true_reg.exit [
    i32 63, label %sw.bb.i
    i32 125, label %for.cond.i
    i32 126, label %for.cond.i
    i32 123, label %for.cond.i
  ]

sw.bb.i:                                          ; preds = %for.cond.i
  %fld.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !10
  %4 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load1.i = load i32* %4, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp.i = icmp eq i32 %bf.clear2.i, 61
  br i1 %cmp.i, label %land.lhs.true.i, label %for.cond.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx7.i to i32*
  %5 = load i32* %rtuint.i, align 4, !tbaa !4
  %6 = and i32 %5, -8
  %7 = icmp eq i32 %6, 8
  br i1 %7, label %if.then.i, label %for.cond.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %bf.lshr.i = lshr i32 %bf.load1.i, 16
  %bf.clear21.i = and i32 %bf.lshr.i, 255
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 1
  %rtuint24.i = bitcast %union.rtunion_def* %arrayidx23.i to i32*
  %8 = load i32* %rtuint24.i, align 4, !tbaa !4
  %bf.lshr26.i = lshr i32 %bf.load.i, 16
  %bf.clear27.i = and i32 %bf.lshr26.i, 255
  %call.i = tail call i32 @subreg_regno_offset(i32 %5, i32 %bf.clear21.i, i32 %8, i32 %bf.clear27.i) #4
  %bf.load28.i = load i32* %4, align 8
  %bf.lshr29.i = lshr i32 %bf.load28.i, 16
  %bf.clear30.i = and i32 %bf.lshr29.i, 255
  %idxprom52.i = zext i32 %bf.clear30.i to i64
  %9 = load i32* %rtuint.i, align 4, !tbaa !4
  %add.i = add i32 %call.i, -8
  %sub.i = add i32 %add.i, %9
  %idxprom34.i = zext i32 %sub.i to i64
  %arrayidx36.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i, i64 %idxprom52.i
  %10 = load %struct.rtx_def** %arrayidx36.i, align 8, !tbaa !10
  %11 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %.c2359 = ptrtoint %struct.rtx_def* %10 to i64
  store i64 %.c2359, i64* %11, align 8, !tbaa !10
  %.phi.trans.insert2609 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load1.pre = load i32* %.phi.trans.insert2609, align 8
  br label %get_true_reg.exit

get_true_reg.exit:                                ; preds = %for.cond.i, %if.then.i
  %bf.load1 = phi i32 [ %bf.load1.pre, %if.then.i ], [ %bf.load.i, %for.cond.i ]
  %12 = phi %struct.rtx_def* [ %10, %if.then.i ], [ %1, %for.cond.i ]
  %bf.clear2 = and i32 %bf.load1, 65535
  %cmp = icmp eq i32 %bf.clear2, 61
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %get_true_reg.exit
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %13 = load i32* %rtuint, align 4, !tbaa !4
  %14 = and i32 %13, -8
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %land.lhs.true11, label %if.else

land.lhs.true11:                                  ; preds = %land.lhs.true
  %call15 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %13) #4
  %tobool = icmp eq %struct.rtx_def* %call15, null
  %.pre2611 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  br i1 %tobool, label %land.lhs.true11.if.else_crit_edge, label %if.then

land.lhs.true11.if.else_crit_edge:                ; preds = %land.lhs.true11
  %.phi.trans.insert2612 = getelementptr inbounds %struct.rtx_def* %.pre2611, i64 0, i32 0
  %bf.load.i1217.pre = load i32* %.phi.trans.insert2612, align 8
  br label %if.else

if.then:                                          ; preds = %land.lhs.true11
  %call16 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %.pre2611, i32 0)
  br label %sw.epilog902

if.else:                                          ; preds = %land.lhs.true11.if.else_crit_edge, %land.lhs.true, %get_true_reg.exit
  %bf.load.i1217 = phi i32 [ %bf.load.i1217.pre, %land.lhs.true11.if.else_crit_edge ], [ %bf.load1, %land.lhs.true ], [ %bf.load1, %get_true_reg.exit ]
  %16 = phi %struct.rtx_def* [ %.pre2611, %land.lhs.true11.if.else_crit_edge ], [ %12, %land.lhs.true ], [ %12, %get_true_reg.exit ]
  %bf.clear.i1218 = and i32 %bf.load.i1217, 65535
  %cmp.i1219 = icmp eq i32 %bf.clear.i1218, 61
  br i1 %cmp.i1219, label %land.lhs.true.i1221, label %if.then.i1222

land.lhs.true.i1221:                              ; preds = %if.else
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtuint.i1220 = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %17 = load i32* %rtuint.i1220, align 4, !tbaa !4
  %18 = and i32 %17, -8
  %19 = icmp eq i32 %18, 8
  br i1 %19, label %if.end.i, label %if.then.i1222

if.then.i1222:                                    ; preds = %land.lhs.true.i1221, %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i:                                         ; preds = %land.lhs.true.i1221
  %top.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %20 = load i32* %top.i, align 4, !tbaa !33
  %cmp730.i = icmp sgt i32 %20, -1
  br i1 %cmp730.i, label %for.body.lr.ph.i, label %if.then19

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %21 = sext i32 %20 to i64
  br label %for.body.i

for.cond.i1223:                                   ; preds = %for.body.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %22 = trunc i64 %indvars.iv.i to i32
  %cmp7.i = icmp sgt i32 %22, 0
  br i1 %cmp7.i, label %for.body.i, label %if.then19

for.body.i:                                       ; preds = %for.cond.i1223, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %21, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i1223 ]
  %arrayidx9.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i
  %23 = load i8* %arrayidx9.i, align 1, !tbaa !1
  %conv.i = zext i8 %23 to i32
  %cmp13.i = icmp eq i32 %conv.i, %17
  br i1 %cmp13.i, label %get_hard_regnum.exit, label %for.cond.i1223

get_hard_regnum.exit:                             ; preds = %for.body.i
  %24 = trunc i64 %indvars.iv.i to i32
  %add.i1224 = add i32 %20, 8
  %sub.i1225 = sub i32 %add.i1224, %24
  %cmp18 = icmp eq i32 %sub.i1225, -1
  br i1 %cmp18, label %if.then19, label %sw.epilog902

if.then19:                                        ; preds = %for.cond.i1223, %if.end.i, %get_hard_regnum.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1441, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_stack_regs_pat, i64 0, i64 0)) #6
  unreachable

for.cond.i1229:                                   ; preds = %for.cond.i1229, %for.cond.i1229, %for.cond.i1229, %sw.bb.i1235, %land.lhs.true.i1238, %entry
  %pat.sink2318 = phi %struct.rtx_def* [ %pat, %entry ], [ %25, %land.lhs.true.i1238 ], [ %25, %sw.bb.i1235 ], [ %25, %for.cond.i1229 ], [ %25, %for.cond.i1229 ], [ %25, %for.cond.i1229 ]
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %pat.sink2318, i64 0, i32 1, i64 0
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx24, align 8, !tbaa !10
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load.i1227 = load i32* %26, align 8
  %bf.clear.i1228 = and i32 %bf.load.i1227, 65535
  switch i32 %bf.clear.i1228, label %get_true_reg.exit1258 [
    i32 63, label %sw.bb.i1235
    i32 125, label %for.cond.i1229
    i32 126, label %for.cond.i1229
    i32 123, label %for.cond.i1229
  ]

sw.bb.i1235:                                      ; preds = %for.cond.i1229
  %fld.i1230 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1
  %rtx.i1231 = bitcast [1 x %union.rtunion_def]* %fld.i1230 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx.i1231, align 8, !tbaa !10
  %28 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 0
  %bf.load1.i1232 = load i32* %28, align 8
  %bf.clear2.i1233 = and i32 %bf.load1.i1232, 65535
  %cmp.i1234 = icmp eq i32 %bf.clear2.i1233, 61
  br i1 %cmp.i1234, label %land.lhs.true.i1238, label %for.cond.i1229

land.lhs.true.i1238:                              ; preds = %sw.bb.i1235
  %arrayidx7.i1236 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 0
  %rtuint.i1237 = bitcast %union.rtunion_def* %arrayidx7.i1236 to i32*
  %29 = load i32* %rtuint.i1237, align 4, !tbaa !4
  %30 = and i32 %29, -8
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %if.then.i1254, label %for.cond.i1229

if.then.i1254:                                    ; preds = %land.lhs.true.i1238
  %bf.lshr.i1239 = lshr i32 %bf.load1.i1232, 16
  %bf.clear21.i1240 = and i32 %bf.lshr.i1239, 255
  %arrayidx23.i1241 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 1
  %rtuint24.i1242 = bitcast %union.rtunion_def* %arrayidx23.i1241 to i32*
  %32 = load i32* %rtuint24.i1242, align 4, !tbaa !4
  %bf.lshr26.i1243 = lshr i32 %bf.load.i1227, 16
  %bf.clear27.i1244 = and i32 %bf.lshr26.i1243, 255
  %call.i1245 = tail call i32 @subreg_regno_offset(i32 %29, i32 %bf.clear21.i1240, i32 %32, i32 %bf.clear27.i1244) #4
  %bf.load28.i1246 = load i32* %28, align 8
  %bf.lshr29.i1247 = lshr i32 %bf.load28.i1246, 16
  %bf.clear30.i1248 = and i32 %bf.lshr29.i1247, 255
  %idxprom52.i1249 = zext i32 %bf.clear30.i1248 to i64
  %33 = load i32* %rtuint.i1237, align 4, !tbaa !4
  %add.i1250 = add i32 %call.i1245, -8
  %sub.i1251 = add i32 %add.i1250, %33
  %idxprom34.i1252 = zext i32 %sub.i1251 to i64
  %arrayidx36.i1253 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i1252, i64 %idxprom52.i1249
  %34 = load %struct.rtx_def** %arrayidx36.i1253, align 8, !tbaa !10
  %35 = getelementptr inbounds %union.rtunion_def* %arrayidx23, i64 0, i32 0
  %.c2356 = ptrtoint %struct.rtx_def* %34 to i64
  store i64 %.c2356, i64* %35, align 8, !tbaa !10
  %.phi.trans.insert2615 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load26.pre = load i32* %.phi.trans.insert2615, align 8
  br label %get_true_reg.exit1258

get_true_reg.exit1258:                            ; preds = %for.cond.i1229, %if.then.i1254
  %bf.load26 = phi i32 [ %bf.load26.pre, %if.then.i1254 ], [ %bf.load.i1227, %for.cond.i1229 ]
  %36 = phi %struct.rtx_def* [ %34, %if.then.i1254 ], [ %25, %for.cond.i1229 ]
  %bf.clear27 = and i32 %bf.load26, 65535
  %cmp28 = icmp eq i32 %bf.clear27, 61
  br i1 %cmp28, label %land.lhs.true29, label %sw.epilog902

land.lhs.true29:                                  ; preds = %get_true_reg.exit1258
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %36, i64 0, i32 1, i64 0
  %rtuint32 = bitcast %union.rtunion_def* %arrayidx31 to i32*
  %37 = load i32* %rtuint32, align 4, !tbaa !4
  %38 = and i32 %37, -8
  %39 = icmp eq i32 %38, 8
  br i1 %39, label %if.then39, label %sw.epilog902

if.then39:                                        ; preds = %land.lhs.true29
  %call40 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 1, %struct.rtx_def* %36) #4
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %40 = load %struct.rtx_def** %rtx43, align 8, !tbaa !10
  %cmp44 = icmp eq %struct.rtx_def* %40, %pat
  %tobool46 = icmp ne %struct.rtx_def* %call40, null
  br i1 %cmp44, label %if.else55, label %if.then45

if.then45:                                        ; preds = %if.then39
  %41 = load %struct.rtx_def** %rtx24, align 8, !tbaa !10
  br i1 %tobool46, label %if.then47, label %if.else49

if.then47:                                        ; preds = %if.then45
  %call48 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %41, i32 1)
  br label %if.end54

if.else49:                                        ; preds = %if.then45
  %call50 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 10, %struct.rtx_def* %41) #4
  %tobool51 = icmp eq %struct.rtx_def* %call50, null
  br i1 %tobool51, label %if.then52, label %if.end54

if.then52:                                        ; preds = %if.else49
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1468, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_stack_regs_pat, i64 0, i64 0)) #6
  unreachable

if.end54:                                         ; preds = %if.else49, %if.then47
  %note.0 = phi %struct.rtx_def* [ %call40, %if.then47 ], [ %call50, %if.else49 ]
  tail call void @remove_note(%struct.rtx_def* %insn, %struct.rtx_def* %note.0) #4
  %42 = load %struct.rtx_def** %rtx24, align 8, !tbaa !10
  %43 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 0
  %bf.load.i1259 = load i32* %43, align 8
  %bf.clear.i1260 = and i32 %bf.load.i1259, 65535
  %cmp3.i = icmp eq i32 %bf.clear.i1260, 61
  br i1 %cmp3.i, label %land.lhs.true.i1263, label %if.then.i1264

land.lhs.true.i1263:                              ; preds = %if.end54
  %arrayidx.i1261 = getelementptr inbounds %struct.rtx_def* %42, i64 0, i32 1, i64 0
  %rtuint.i1262 = bitcast %union.rtunion_def* %arrayidx.i1261 to i32*
  %44 = load i32* %rtuint.i1262, align 4, !tbaa !4
  %45 = and i32 %44, -8
  %46 = icmp eq i32 %45, 8
  br i1 %46, label %if.end.i1266, label %if.then.i1264

if.then.i1264:                                    ; preds = %land.lhs.true.i1263, %if.end54
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1266:                                     ; preds = %land.lhs.true.i1263
  %bf.lshr.i1265 = lshr i32 %bf.load.i1259, 16
  %bf.clear11.i = and i32 %bf.lshr.i1265, 255
  %idxprom27.i = zext i32 %bf.clear11.i to i64
  %arrayidx12.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i
  %47 = load i32* %arrayidx12.i, align 4, !tbaa !1
  switch i32 %47, label %sw.default.i [
    i32 2, label %replace_reg.exit
    i32 6, label %replace_reg.exit
  ]

sw.default.i:                                     ; preds = %if.end.i1266
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit:                                 ; preds = %if.end.i1266, %if.end.i1266
  %arrayidx19.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 7, i64 %idxprom27.i
  %48 = load %struct.rtx_def** %arrayidx19.i, align 8, !tbaa !10
  %49 = getelementptr inbounds %union.rtunion_def* %arrayidx23, i64 0, i32 0
  %.c2358 = ptrtoint %struct.rtx_def* %48 to i64
  store i64 %.c2358, i64* %49, align 8, !tbaa !10
  br label %sw.epilog902

if.else55:                                        ; preds = %if.then39
  br i1 %tobool46, label %sw.epilog902, label %land.lhs.true57

land.lhs.true57:                                  ; preds = %if.else55
  %50 = load %struct.rtx_def** %rtx24, align 8, !tbaa !10
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.load.i1267 = load i32* %51, align 8
  %bf.clear.i1268 = and i32 %bf.load.i1267, 65535
  %cmp.i1269 = icmp eq i32 %bf.clear.i1268, 61
  br i1 %cmp.i1269, label %land.lhs.true.i1272, label %if.then.i1273

land.lhs.true.i1272:                              ; preds = %land.lhs.true57
  %arrayidx.i1270 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1, i64 0
  %rtuint.i1271 = bitcast %union.rtunion_def* %arrayidx.i1270 to i32*
  %52 = load i32* %rtuint.i1271, align 4, !tbaa !4
  %53 = and i32 %52, -8
  %54 = icmp eq i32 %53, 8
  br i1 %54, label %if.end.i1276, label %if.then.i1273

if.then.i1273:                                    ; preds = %land.lhs.true.i1272, %land.lhs.true57
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i1276:                                     ; preds = %land.lhs.true.i1272
  %top.i1274 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %55 = load i32* %top.i1274, align 4, !tbaa !33
  %cmp730.i1275 = icmp sgt i32 %55, -1
  br i1 %cmp730.i1275, label %for.body.lr.ph.i1277, label %if.then60

for.body.lr.ph.i1277:                             ; preds = %if.end.i1276
  %56 = sext i32 %55 to i64
  br label %for.body.i1285

for.cond.i1280:                                   ; preds = %for.body.i1285
  %indvars.iv.next.i1278 = add nsw i64 %indvars.iv.i1281, -1
  %57 = trunc i64 %indvars.iv.i1281 to i32
  %cmp7.i1279 = icmp sgt i32 %57, 0
  br i1 %cmp7.i1279, label %for.body.i1285, label %if.then60

for.body.i1285:                                   ; preds = %for.cond.i1280, %for.body.lr.ph.i1277
  %indvars.iv.i1281 = phi i64 [ %56, %for.body.lr.ph.i1277 ], [ %indvars.iv.next.i1278, %for.cond.i1280 ]
  %arrayidx9.i1282 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i1281
  %58 = load i8* %arrayidx9.i1282, align 1, !tbaa !1
  %conv.i1283 = zext i8 %58 to i32
  %cmp13.i1284 = icmp eq i32 %conv.i1283, %52
  br i1 %cmp13.i1284, label %get_hard_regnum.exit1290, label %for.cond.i1280

get_hard_regnum.exit1290:                         ; preds = %for.body.i1285
  %59 = trunc i64 %indvars.iv.i1281 to i32
  %add.i1286 = add i32 %55, 8
  %sub.i1287 = sub i32 %add.i1286, %59
  %cmp59 = icmp eq i32 %sub.i1287, -1
  br i1 %cmp59, label %if.then60, label %land.lhs.true72

if.then60:                                        ; preds = %for.cond.i1280, %if.end.i1276, %get_hard_regnum.exit1290
  %sub = add i32 %52, -8
  %idxprom = zext i32 %sub to i64
  %arrayidx65 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom, i64 15
  %60 = load %struct.rtx_def** %arrayidx65, align 8, !tbaa !10
  %61 = load %struct.rtx_def** @nan, align 8, !tbaa !10
  %call66 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %60, %struct.rtx_def* %61) #4
  %62 = getelementptr inbounds %union.rtunion_def* %arrayidx42, i64 0, i32 0
  %call66.c = ptrtoint %struct.rtx_def* %call66 to i64
  store i64 %call66.c, i64* %62, align 8, !tbaa !10
  tail call fastcc void @move_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %call66)
  br label %land.lhs.true72

land.lhs.true72:                                  ; preds = %get_hard_regnum.exit1290, %if.then60
  %63 = load %struct.rtx_def** %rtx24, align 8, !tbaa !10
  %64 = getelementptr inbounds %struct.rtx_def* %63, i64 0, i32 0
  %bf.load73 = load i32* %64, align 8
  %bf.lshr = lshr i32 %bf.load73, 16
  %bf.clear74 = and i32 %bf.lshr, 255
  %idxprom751198 = zext i32 %bf.clear74 to i64
  %arrayidx76 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom751198
  %65 = load i32* %arrayidx76, align 4, !tbaa !1
  %.off = add i32 %65, -5
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %land.lhs.true84, label %sw.epilog902

land.lhs.true84:                                  ; preds = %land.lhs.true72
  %arrayidx86 = getelementptr inbounds %struct.rtx_def* %63, i64 0, i32 1, i64 0
  %rtuint87 = bitcast %union.rtunion_def* %arrayidx86 to i32*
  %66 = load i32* %rtuint87, align 4, !tbaa !4
  %sub88 = add i32 %66, -8
  %idxprom89 = zext i32 %sub88 to i64
  %arrayidx91 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom89, i64 16
  %67 = load %struct.rtx_def** %arrayidx91, align 8, !tbaa !10
  %68 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 0
  %bf.load.i1291 = load i32* %68, align 8
  %bf.clear.i1292 = and i32 %bf.load.i1291, 65535
  %cmp.i1293 = icmp eq i32 %bf.clear.i1292, 61
  br i1 %cmp.i1293, label %land.lhs.true.i1296, label %if.then.i1297

land.lhs.true.i1296:                              ; preds = %land.lhs.true84
  %arrayidx.i1294 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 0
  %rtuint.i1295 = bitcast %union.rtunion_def* %arrayidx.i1294 to i32*
  %69 = load i32* %rtuint.i1295, align 4, !tbaa !4
  %70 = and i32 %69, -8
  %71 = icmp eq i32 %70, 8
  br i1 %71, label %if.end.i1300, label %if.then.i1297

if.then.i1297:                                    ; preds = %land.lhs.true.i1296, %land.lhs.true84
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i1300:                                     ; preds = %land.lhs.true.i1296
  %72 = load i32* %top.i1274, align 4, !tbaa !33
  %cmp730.i1299 = icmp sgt i32 %72, -1
  br i1 %cmp730.i1299, label %for.body.lr.ph.i1301, label %if.then94

for.body.lr.ph.i1301:                             ; preds = %if.end.i1300
  %73 = sext i32 %72 to i64
  br label %for.body.i1309

for.cond.i1304:                                   ; preds = %for.body.i1309
  %indvars.iv.next.i1302 = add nsw i64 %indvars.iv.i1305, -1
  %74 = trunc i64 %indvars.iv.i1305 to i32
  %cmp7.i1303 = icmp sgt i32 %74, 0
  br i1 %cmp7.i1303, label %for.body.i1309, label %if.then94

for.body.i1309:                                   ; preds = %for.cond.i1304, %for.body.lr.ph.i1301
  %indvars.iv.i1305 = phi i64 [ %73, %for.body.lr.ph.i1301 ], [ %indvars.iv.next.i1302, %for.cond.i1304 ]
  %arrayidx9.i1306 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i1305
  %75 = load i8* %arrayidx9.i1306, align 1, !tbaa !1
  %conv.i1307 = zext i8 %75 to i32
  %cmp13.i1308 = icmp eq i32 %conv.i1307, %69
  br i1 %cmp13.i1308, label %get_hard_regnum.exit1314, label %for.cond.i1304

get_hard_regnum.exit1314:                         ; preds = %for.body.i1309
  %76 = trunc i64 %indvars.iv.i1305 to i32
  %add.i1310 = add i32 %72, 8
  %sub.i1311 = sub i32 %add.i1310, %76
  %cmp93 = icmp eq i32 %sub.i1311, -1
  br i1 %cmp93, label %if.then94, label %sw.epilog902

if.then94:                                        ; preds = %for.cond.i1304, %if.end.i1300, %get_hard_regnum.exit1314
  %sub98 = add i32 %66, -7
  %idxprom99 = zext i32 %sub98 to i64
  %arrayidx101 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom99, i64 15
  %77 = load %struct.rtx_def** %arrayidx101, align 8, !tbaa !10
  %78 = load %struct.rtx_def** @nan, align 8, !tbaa !10
  %call102 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %77, %struct.rtx_def* %78) #4
  %79 = getelementptr inbounds %union.rtunion_def* %arrayidx42, i64 0, i32 0
  %call102.c = ptrtoint %struct.rtx_def* %call102 to i64
  store i64 %call102.c, i64* %79, align 8, !tbaa !10
  tail call fastcc void @move_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %call102)
  br label %sw.epilog902

sw.bb109:                                         ; preds = %entry
  %fld110 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 1
  %rtx112 = bitcast [1 x %union.rtunion_def]* %fld110 to %struct.rtx_def**
  br label %for.cond.i1318

for.cond.i1318:                                   ; preds = %sw.bb37.i1347, %sw.bb109
  %pat.addr.0.i1315 = phi %struct.rtx_def** [ %rtx112, %sw.bb109 ], [ %rtx40.i1346, %sw.bb37.i1347 ]
  %80 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %81 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 0
  %bf.load.i1316 = load i32* %81, align 8
  %bf.clear.i1317 = and i32 %bf.load.i1316, 65535
  switch i32 %bf.clear.i1317, label %get_true_reg.exit1348 [
    i32 63, label %sw.bb.i1324
    i32 125, label %sw.bb37.i1347
    i32 126, label %sw.bb37.i1347
    i32 123, label %sw.bb37.i1347
  ]

sw.bb.i1324:                                      ; preds = %for.cond.i1318
  %fld.i1319 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1
  %rtx.i1320 = bitcast [1 x %union.rtunion_def]* %fld.i1319 to %struct.rtx_def**
  %82 = load %struct.rtx_def** %rtx.i1320, align 8, !tbaa !10
  %83 = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 0
  %bf.load1.i1321 = load i32* %83, align 8
  %bf.clear2.i1322 = and i32 %bf.load1.i1321, 65535
  %cmp.i1323 = icmp eq i32 %bf.clear2.i1322, 61
  br i1 %cmp.i1323, label %land.lhs.true.i1327, label %sw.bb37.i1347

land.lhs.true.i1327:                              ; preds = %sw.bb.i1324
  %arrayidx7.i1325 = getelementptr inbounds %struct.rtx_def* %82, i64 0, i32 1, i64 0
  %rtuint.i1326 = bitcast %union.rtunion_def* %arrayidx7.i1325 to i32*
  %84 = load i32* %rtuint.i1326, align 4, !tbaa !4
  %85 = and i32 %84, -8
  %86 = icmp eq i32 %85, 8
  br i1 %86, label %if.then.i1343, label %sw.bb37.i1347

if.then.i1343:                                    ; preds = %land.lhs.true.i1327
  %bf.lshr.i1328 = lshr i32 %bf.load1.i1321, 16
  %bf.clear21.i1329 = and i32 %bf.lshr.i1328, 255
  %arrayidx23.i1330 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 1
  %rtuint24.i1331 = bitcast %union.rtunion_def* %arrayidx23.i1330 to i32*
  %87 = load i32* %rtuint24.i1331, align 4, !tbaa !4
  %bf.lshr26.i1332 = lshr i32 %bf.load.i1316, 16
  %bf.clear27.i1333 = and i32 %bf.lshr26.i1332, 255
  %call.i1334 = tail call i32 @subreg_regno_offset(i32 %84, i32 %bf.clear21.i1329, i32 %87, i32 %bf.clear27.i1333) #4
  %bf.load28.i1335 = load i32* %83, align 8
  %bf.lshr29.i1336 = lshr i32 %bf.load28.i1335, 16
  %bf.clear30.i1337 = and i32 %bf.lshr29.i1336, 255
  %idxprom52.i1338 = zext i32 %bf.clear30.i1337 to i64
  %88 = load i32* %rtuint.i1326, align 4, !tbaa !4
  %add.i1339 = add i32 %call.i1334, -8
  %sub.i1340 = add i32 %add.i1339, %88
  %idxprom34.i1341 = zext i32 %sub.i1340 to i64
  %arrayidx36.i1342 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i1341, i64 %idxprom52.i1338
  %89 = load %struct.rtx_def** %arrayidx36.i1342, align 8, !tbaa !10
  store %struct.rtx_def* %89, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  br label %get_true_reg.exit1348

sw.bb37.i1347:                                    ; preds = %land.lhs.true.i1327, %sw.bb.i1324, %for.cond.i1318, %for.cond.i1318, %for.cond.i1318
  %arrayidx39.i1345 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 0
  %rtx40.i1346 = bitcast %union.rtunion_def* %arrayidx39.i1345 to %struct.rtx_def**
  br label %for.cond.i1318

get_true_reg.exit1348:                            ; preds = %for.cond.i1318, %if.then.i1343
  %arrayidx115 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 1, i64 1
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  br label %for.cond.i1352

for.cond.i1352:                                   ; preds = %sw.bb37.i1381, %get_true_reg.exit1348
  %pat.addr.0.i1349 = phi %struct.rtx_def** [ %rtx116, %get_true_reg.exit1348 ], [ %rtx40.i1380, %sw.bb37.i1381 ]
  %90 = load %struct.rtx_def** %pat.addr.0.i1349, align 8, !tbaa !10
  %91 = getelementptr inbounds %struct.rtx_def* %90, i64 0, i32 0
  %bf.load.i1350 = load i32* %91, align 8
  %bf.clear.i1351 = and i32 %bf.load.i1350, 65535
  switch i32 %bf.clear.i1351, label %get_true_reg.exit1382 [
    i32 63, label %sw.bb.i1358
    i32 125, label %sw.bb37.i1381
    i32 126, label %sw.bb37.i1381
    i32 123, label %sw.bb37.i1381
  ]

sw.bb.i1358:                                      ; preds = %for.cond.i1352
  %fld.i1353 = getelementptr inbounds %struct.rtx_def* %90, i64 0, i32 1
  %rtx.i1354 = bitcast [1 x %union.rtunion_def]* %fld.i1353 to %struct.rtx_def**
  %92 = load %struct.rtx_def** %rtx.i1354, align 8, !tbaa !10
  %93 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 0
  %bf.load1.i1355 = load i32* %93, align 8
  %bf.clear2.i1356 = and i32 %bf.load1.i1355, 65535
  %cmp.i1357 = icmp eq i32 %bf.clear2.i1356, 61
  br i1 %cmp.i1357, label %land.lhs.true.i1361, label %sw.bb37.i1381

land.lhs.true.i1361:                              ; preds = %sw.bb.i1358
  %arrayidx7.i1359 = getelementptr inbounds %struct.rtx_def* %92, i64 0, i32 1, i64 0
  %rtuint.i1360 = bitcast %union.rtunion_def* %arrayidx7.i1359 to i32*
  %94 = load i32* %rtuint.i1360, align 4, !tbaa !4
  %95 = and i32 %94, -8
  %96 = icmp eq i32 %95, 8
  br i1 %96, label %if.then.i1377, label %sw.bb37.i1381

if.then.i1377:                                    ; preds = %land.lhs.true.i1361
  %bf.lshr.i1362 = lshr i32 %bf.load1.i1355, 16
  %bf.clear21.i1363 = and i32 %bf.lshr.i1362, 255
  %arrayidx23.i1364 = getelementptr inbounds %struct.rtx_def* %90, i64 0, i32 1, i64 1
  %rtuint24.i1365 = bitcast %union.rtunion_def* %arrayidx23.i1364 to i32*
  %97 = load i32* %rtuint24.i1365, align 4, !tbaa !4
  %bf.lshr26.i1366 = lshr i32 %bf.load.i1350, 16
  %bf.clear27.i1367 = and i32 %bf.lshr26.i1366, 255
  %call.i1368 = tail call i32 @subreg_regno_offset(i32 %94, i32 %bf.clear21.i1363, i32 %97, i32 %bf.clear27.i1367) #4
  %bf.load28.i1369 = load i32* %93, align 8
  %bf.lshr29.i1370 = lshr i32 %bf.load28.i1369, 16
  %bf.clear30.i1371 = and i32 %bf.lshr29.i1370, 255
  %idxprom52.i1372 = zext i32 %bf.clear30.i1371 to i64
  %98 = load i32* %rtuint.i1360, align 4, !tbaa !4
  %add.i1373 = add i32 %call.i1368, -8
  %sub.i1374 = add i32 %add.i1373, %98
  %idxprom34.i1375 = zext i32 %sub.i1374 to i64
  %arrayidx36.i1376 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i1375, i64 %idxprom52.i1372
  %99 = load %struct.rtx_def** %arrayidx36.i1376, align 8, !tbaa !10
  store %struct.rtx_def* %99, %struct.rtx_def** %pat.addr.0.i1349, align 8, !tbaa !10
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %99, i64 0, i32 0
  %bf.load121.pre = load i32* %.phi.trans.insert, align 8
  br label %get_true_reg.exit1382

sw.bb37.i1381:                                    ; preds = %land.lhs.true.i1361, %sw.bb.i1358, %for.cond.i1352, %for.cond.i1352, %for.cond.i1352
  %arrayidx39.i1379 = getelementptr inbounds %struct.rtx_def* %90, i64 0, i32 1, i64 0
  %rtx40.i1380 = bitcast %union.rtunion_def* %arrayidx39.i1379 to %struct.rtx_def**
  br label %for.cond.i1352

get_true_reg.exit1382:                            ; preds = %for.cond.i1352, %if.then.i1377
  %bf.load149 = phi i32 [ %bf.load121.pre, %if.then.i1377 ], [ %bf.load.i1350, %for.cond.i1352 ]
  %100 = phi %struct.rtx_def* [ %99, %if.then.i1377 ], [ %90, %for.cond.i1352 ]
  %101 = load %struct.rtx_def** %rtx116, align 8, !tbaa !10
  %bf.clear122 = and i32 %bf.load149, 65535
  %cmp123 = icmp eq i32 %bf.clear122, 61
  br i1 %cmp123, label %land.lhs.true124, label %lor.lhs.false134

land.lhs.true124:                                 ; preds = %get_true_reg.exit1382
  %arrayidx126 = getelementptr inbounds %struct.rtx_def* %100, i64 0, i32 1, i64 0
  %rtuint127 = bitcast %union.rtunion_def* %arrayidx126 to i32*
  %102 = load i32* %rtuint127, align 4, !tbaa !4
  %103 = and i32 %102, -8
  %104 = icmp eq i32 %103, 8
  br i1 %104, label %if.then160, label %lor.lhs.false134

lor.lhs.false134:                                 ; preds = %land.lhs.true124, %get_true_reg.exit1382
  %105 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %106 = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 0
  %bf.load135 = load i32* %106, align 8
  %bf.clear136 = and i32 %bf.load135, 65535
  %cmp137 = icmp eq i32 %bf.clear136, 61
  br i1 %cmp137, label %land.lhs.true138, label %if.end161

land.lhs.true138:                                 ; preds = %lor.lhs.false134
  %arrayidx140 = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 1, i64 0
  %rtuint141 = bitcast %union.rtunion_def* %arrayidx140 to i32*
  %107 = load i32* %rtuint141, align 4, !tbaa !4
  %108 = and i32 %107, -8
  %109 = icmp eq i32 %108, 8
  br i1 %109, label %land.lhs.true148, label %if.end161

land.lhs.true148:                                 ; preds = %land.lhs.true138
  switch i32 %bf.clear122, label %if.end161 [
    i32 61, label %if.then160
    i32 66, label %if.then160
    i32 55, label %if.then160
  ]

if.then160:                                       ; preds = %land.lhs.true148, %land.lhs.true148, %land.lhs.true148, %land.lhs.true124
  tail call fastcc void @move_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %pat)
  br label %sw.epilog902

if.end161:                                        ; preds = %land.lhs.true148, %land.lhs.true138, %lor.lhs.false134
  %110 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 0
  %bf.load162 = load i32* %110, align 8
  %bf.clear163 = and i32 %bf.load162, 65535
  switch i32 %bf.clear163, label %sw.default899 [
    i32 74, label %sw.bb164
    i32 50, label %sw.bb165
    i32 61, label %sw.bb265
    i32 124, label %for.cond.i1401
    i32 130, label %for.cond.i1401
    i32 129, label %for.cond.i1401
    i32 77, label %for.cond.i1401
    i32 76, label %sw.bb316
    i32 79, label %sw.bb316
    i32 78, label %sw.bb316
    i32 75, label %sw.bb316
    i32 42, label %sw.bb628
    i32 72, label %sw.bb704
  ]

sw.bb164:                                         ; preds = %if.end161
  tail call fastcc void @compare_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %101)
  br label %sw.epilog902

sw.bb165:                                         ; preds = %if.end161
  %arrayidx167 = getelementptr inbounds %struct.rtx_def* %105, i64 0, i32 1, i64 0
  %rtuint168 = bitcast %union.rtunion_def* %arrayidx167 to i32*
  %111 = load i32* %rtuint168, align 4, !tbaa !4
  %112 = and i32 %111, -8
  %113 = icmp eq i32 %112, 8
  %.off2351 = add i32 %111, -21
  %114 = icmp ult i32 %.off2351, 8
  %or.cond2362 = or i1 %113, %114
  %.off2352 = add i32 %111, -45
  %115 = icmp ult i32 %.off2352, 8
  %or.cond2364 = or i1 %or.cond2362, %115
  %.off2353 = add i32 %111, -29
  %116 = icmp ult i32 %.off2353, 8
  %or.cond2366 = or i1 %or.cond2364, %116
  %bf.lshr206 = lshr i32 %bf.load135, 16
  %bf.clear207 = and i32 %bf.lshr206, 255
  br i1 %or.cond2366, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb165
  %idxprom2081197 = zext i32 %bf.clear207 to i64
  %arrayidx209 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom2081197
  %117 = load i32* %arrayidx209, align 4, !tbaa !1
  %cmp210 = icmp eq i32 %117, 5
  br i1 %cmp210, label %for.body.lr.ph, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp216 = icmp eq i32 %117, 6
  %phitmp = select i1 %cmp216, i32 2, i32 1
  br label %for.body.lr.ph

cond.false:                                       ; preds = %sw.bb165
  switch i32 %bf.clear207, label %for.cond.preheader [
    i32 18, label %cond.true221
    i32 24, label %cond.true229
  ]

cond.true221:                                     ; preds = %cond.false
  %118 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %118, 25
  %119 = and i32 %and, 1
  %120 = xor i32 %119, 3
  br label %for.body.lr.ph

cond.true229:                                     ; preds = %cond.false
  %121 = load i32* @target_flags, align 4, !tbaa !4
  %and230 = lshr i32 %121, 24
  %122 = and i32 %and230, 2
  %123 = xor i32 %122, 6
  br label %for.body.lr.ph

for.cond.preheader:                               ; preds = %cond.false
  %idxprom2371196 = zext i32 %bf.clear207 to i64
  %arrayidx238 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom2371196
  %124 = load i8* %arrayidx238, align 1, !tbaa !1
  %conv = zext i8 %124 to i32
  %125 = load i32* @target_flags, align 4, !tbaa !4
  %and239 = lshr i32 %125, 23
  %126 = and i32 %and239, 4
  %127 = add i32 %126, 4
  %add242 = add i32 %conv, -1
  %sub243 = add i32 %add242, %127
  %div = sdiv i32 %sub243, %127
  %cmp2522482 = icmp sgt i32 %div, 0
  br i1 %cmp2522482, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %cond.true, %lor.rhs, %cond.true221, %cond.true229, %for.cond.preheader
  %count.0.ph2619 = phi i32 [ %div, %for.cond.preheader ], [ %123, %cond.true229 ], [ %120, %cond.true221 ], [ %phitmp, %lor.rhs ], [ 2, %cond.true ]
  %top = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %reg_set = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %128 = phi i32 [ %111, %for.body.lr.ph ], [ %131, %for.body ]
  %dec2483.in = phi i32 [ %count.0.ph2619, %for.body.lr.ph ], [ %dec2483, %for.body ]
  %dec2483 = add nsw i32 %dec2483.in, -1
  %add257 = add i32 %128, %dec2483
  %conv258 = trunc i32 %add257 to i8
  %129 = load i32* %top, align 4, !tbaa !33
  %inc = add nsw i32 %129, 1
  store i32 %inc, i32* %top, align 4, !tbaa !33
  %idxprom259 = sext i32 %inc to i64
  %arrayidx260 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom259
  store i8 %conv258, i8* %arrayidx260, align 1, !tbaa !1
  %130 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %arrayidx262 = getelementptr inbounds %struct.rtx_def* %130, i64 0, i32 1, i64 0
  %rtuint263 = bitcast %union.rtunion_def* %arrayidx262 to i32*
  %131 = load i32* %rtuint263, align 4, !tbaa !4
  %add264 = add i32 %131, %dec2483
  %sh_prom = zext i32 %add264 to i64
  %shl = shl i64 1, %sh_prom
  %132 = load i64* %reg_set, align 8, !tbaa !34
  %or = or i64 %shl, %132
  store i64 %or, i64* %reg_set, align 8, !tbaa !34
  %cmp252 = icmp sgt i32 %dec2483, 0
  br i1 %cmp252, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.phi.trans.insert2588 = getelementptr inbounds %struct.rtx_def* %130, i64 0, i32 0
  %bf.load.i1383.pre = load i32* %.phi.trans.insert2588, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader
  %133 = phi i32 [ %131, %for.cond.for.end_crit_edge ], [ %111, %for.cond.preheader ]
  %bf.load.i1383 = phi i32 [ %bf.load.i1383.pre, %for.cond.for.end_crit_edge ], [ %bf.load135, %for.cond.preheader ]
  %bf.clear.i1384 = and i32 %bf.load.i1383, 65535
  %cmp3.i1385 = icmp eq i32 %bf.clear.i1384, 61
  %134 = and i32 %133, -8
  %135 = icmp eq i32 %134, 8
  %or.cond2621 = and i1 %cmp3.i1385, %135
  br i1 %or.cond2621, label %if.end.i1394, label %if.then.i1389

if.then.i1389:                                    ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1394:                                     ; preds = %for.end
  %bf.lshr.i1390 = lshr i32 %bf.load.i1383, 16
  %bf.clear11.i1391 = and i32 %bf.lshr.i1390, 255
  %idxprom27.i1392 = zext i32 %bf.clear11.i1391 to i64
  %arrayidx12.i1393 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1392
  %136 = load i32* %arrayidx12.i1393, align 4, !tbaa !1
  switch i32 %136, label %sw.default.i1395 [
    i32 2, label %replace_reg.exit1397
    i32 6, label %replace_reg.exit1397
  ]

sw.default.i1395:                                 ; preds = %if.end.i1394
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1397:                             ; preds = %if.end.i1394, %if.end.i1394
  %arrayidx19.i1396 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i1392
  %137 = load %struct.rtx_def** %arrayidx19.i1396, align 8, !tbaa !10
  store %struct.rtx_def* %137, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  br label %sw.epilog902

sw.bb265:                                         ; preds = %if.end161
  %138 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 1), align 8, !tbaa !10
  %cmp266 = icmp eq %struct.rtx_def* %105, %138
  br i1 %cmp266, label %sw.bb270, label %if.then268

if.then268:                                       ; preds = %sw.bb265
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1545, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_stack_regs_pat, i64 0, i64 0)) #6
  unreachable

sw.bb270:                                         ; preds = %sw.bb265
  %cmp271 = icmp eq %struct.rtx_def** %pat.addr.0.i1349, null
  br i1 %cmp271, label %for.cond.i1401, label %if.end278

for.cond.i1401:                                   ; preds = %for.cond.i1401, %for.cond.i1401, %for.cond.i1401, %sw.bb.i1407, %land.lhs.true.i1410, %sw.bb270, %if.end161, %if.end161, %if.end161, %if.end161
  %.sink = phi %struct.rtx_def* [ %101, %if.end161 ], [ %101, %if.end161 ], [ %101, %if.end161 ], [ %101, %if.end161 ], [ %101, %sw.bb270 ], [ %139, %land.lhs.true.i1410 ], [ %139, %sw.bb.i1407 ], [ %139, %for.cond.i1401 ], [ %139, %for.cond.i1401 ], [ %139, %for.cond.i1401 ]
  %arrayidx275 = getelementptr inbounds %struct.rtx_def* %.sink, i64 0, i32 1, i64 0
  %rtx276 = bitcast %union.rtunion_def* %arrayidx275 to %struct.rtx_def**
  %139 = load %struct.rtx_def** %rtx276, align 8, !tbaa !10
  %140 = getelementptr inbounds %struct.rtx_def* %139, i64 0, i32 0
  %bf.load.i1399 = load i32* %140, align 8
  %bf.clear.i1400 = and i32 %bf.load.i1399, 65535
  switch i32 %bf.clear.i1400, label %if.end278 [
    i32 63, label %sw.bb.i1407
    i32 125, label %for.cond.i1401
    i32 126, label %for.cond.i1401
    i32 123, label %for.cond.i1401
  ]

sw.bb.i1407:                                      ; preds = %for.cond.i1401
  %fld.i1402 = getelementptr inbounds %struct.rtx_def* %139, i64 0, i32 1
  %rtx.i1403 = bitcast [1 x %union.rtunion_def]* %fld.i1402 to %struct.rtx_def**
  %141 = load %struct.rtx_def** %rtx.i1403, align 8, !tbaa !10
  %142 = getelementptr inbounds %struct.rtx_def* %141, i64 0, i32 0
  %bf.load1.i1404 = load i32* %142, align 8
  %bf.clear2.i1405 = and i32 %bf.load1.i1404, 65535
  %cmp.i1406 = icmp eq i32 %bf.clear2.i1405, 61
  br i1 %cmp.i1406, label %land.lhs.true.i1410, label %for.cond.i1401

land.lhs.true.i1410:                              ; preds = %sw.bb.i1407
  %arrayidx7.i1408 = getelementptr inbounds %struct.rtx_def* %141, i64 0, i32 1, i64 0
  %rtuint.i1409 = bitcast %union.rtunion_def* %arrayidx7.i1408 to i32*
  %143 = load i32* %rtuint.i1409, align 4, !tbaa !4
  %144 = and i32 %143, -8
  %145 = icmp eq i32 %144, 8
  br i1 %145, label %if.then.i1426, label %for.cond.i1401

if.then.i1426:                                    ; preds = %land.lhs.true.i1410
  %bf.lshr.i1411 = lshr i32 %bf.load1.i1404, 16
  %bf.clear21.i1412 = and i32 %bf.lshr.i1411, 255
  %arrayidx23.i1413 = getelementptr inbounds %struct.rtx_def* %139, i64 0, i32 1, i64 1
  %rtuint24.i1414 = bitcast %union.rtunion_def* %arrayidx23.i1413 to i32*
  %146 = load i32* %rtuint24.i1414, align 4, !tbaa !4
  %bf.lshr26.i1415 = lshr i32 %bf.load.i1399, 16
  %bf.clear27.i1416 = and i32 %bf.lshr26.i1415, 255
  %call.i1417 = tail call i32 @subreg_regno_offset(i32 %143, i32 %bf.clear21.i1412, i32 %146, i32 %bf.clear27.i1416) #4
  %bf.load28.i1418 = load i32* %142, align 8
  %bf.lshr29.i1419 = lshr i32 %bf.load28.i1418, 16
  %bf.clear30.i1420 = and i32 %bf.lshr29.i1419, 255
  %idxprom52.i1421 = zext i32 %bf.clear30.i1420 to i64
  %147 = load i32* %rtuint.i1409, align 4, !tbaa !4
  %add.i1422 = add i32 %call.i1417, -8
  %sub.i1423 = add i32 %add.i1422, %147
  %idxprom34.i1424 = zext i32 %sub.i1423 to i64
  %arrayidx36.i1425 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i1424, i64 %idxprom52.i1421
  %148 = load %struct.rtx_def** %arrayidx36.i1425, align 8, !tbaa !10
  %149 = getelementptr inbounds %union.rtunion_def* %arrayidx275, i64 0, i32 0
  %.c2347 = ptrtoint %struct.rtx_def* %148 to i64
  store i64 %.c2347, i64* %149, align 8, !tbaa !10
  br label %if.end278

if.end278:                                        ; preds = %for.cond.i1401, %if.then.i1426, %sw.bb270
  %150 = phi %struct.rtx_def* [ %100, %sw.bb270 ], [ %148, %if.then.i1426 ], [ %139, %for.cond.i1401 ]
  %src1.1 = phi %struct.rtx_def** [ %pat.addr.0.i1349, %sw.bb270 ], [ %rtx276, %if.then.i1426 ], [ %rtx276, %for.cond.i1401 ]
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %150)
  %151 = load %struct.rtx_def** %src1.1, align 8, !tbaa !10
  %arrayidx280 = getelementptr inbounds %struct.rtx_def* %151, i64 0, i32 1, i64 0
  %rtuint281 = bitcast %union.rtunion_def* %arrayidx280 to i32*
  %152 = load i32* %rtuint281, align 4, !tbaa !4
  %call282 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %152) #4
  %153 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %154 = getelementptr inbounds %struct.rtx_def* %153, i64 0, i32 0
  %bf.load283 = load i32* %154, align 8
  %bf.clear284 = and i32 %bf.load283, 65535
  %cmp285 = icmp eq i32 %bf.clear284, 61
  br i1 %cmp285, label %land.lhs.true287, label %if.end300

land.lhs.true287:                                 ; preds = %if.end278
  %arrayidx289 = getelementptr inbounds %struct.rtx_def* %153, i64 0, i32 1, i64 0
  %rtuint290 = bitcast %union.rtunion_def* %arrayidx289 to i32*
  %155 = load i32* %rtuint290, align 4, !tbaa !4
  %156 = and i32 %155, -8
  %157 = icmp eq i32 %156, 8
  br i1 %157, label %if.end.i1443, label %if.end300

if.end.i1443:                                     ; preds = %land.lhs.true287
  %bf.lshr.i1439 = lshr i32 %bf.load283, 16
  %bf.clear11.i1440 = and i32 %bf.lshr.i1439, 255
  %idxprom27.i1441 = zext i32 %bf.clear11.i1440 to i64
  %arrayidx12.i1442 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1441
  %158 = load i32* %arrayidx12.i1442, align 4, !tbaa !1
  switch i32 %158, label %sw.default.i1444 [
    i32 2, label %replace_reg.exit1446
    i32 6, label %replace_reg.exit1446
  ]

sw.default.i1444:                                 ; preds = %if.end.i1443
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1446:                             ; preds = %if.end.i1443, %if.end.i1443
  %arrayidx19.i1445 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i1441
  %159 = load %struct.rtx_def** %arrayidx19.i1445, align 8, !tbaa !10
  store %struct.rtx_def* %159, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  br label %if.end300

if.end300:                                        ; preds = %replace_reg.exit1446, %land.lhs.true287, %if.end278
  %tobool301 = icmp eq %struct.rtx_def* %call282, null
  br i1 %tobool301, label %if.end300.if.end315_crit_edge, label %if.then302

if.end300.if.end315_crit_edge:                    ; preds = %if.end300
  %.pre2591 = load %struct.rtx_def** %src1.1, align 8, !tbaa !10
  br label %if.end315

if.then302:                                       ; preds = %if.end300
  %arrayidx304 = getelementptr inbounds %struct.rtx_def* %call282, i64 0, i32 1, i64 0
  %rtx305 = bitcast %union.rtunion_def* %arrayidx304 to %struct.rtx_def**
  %160 = load %struct.rtx_def** %rtx305, align 8, !tbaa !10
  %161 = getelementptr inbounds %struct.rtx_def* %160, i64 0, i32 0
  %bf.load.i1447 = load i32* %161, align 8
  %bf.clear.i1448 = and i32 %bf.load.i1447, 65535
  %cmp3.i1449 = icmp eq i32 %bf.clear.i1448, 61
  br i1 %cmp3.i1449, label %land.lhs.true.i1452, label %if.then.i1453

land.lhs.true.i1452:                              ; preds = %if.then302
  %arrayidx.i1450 = getelementptr inbounds %struct.rtx_def* %160, i64 0, i32 1, i64 0
  %rtuint.i1451 = bitcast %union.rtunion_def* %arrayidx.i1450 to i32*
  %162 = load i32* %rtuint.i1451, align 4, !tbaa !4
  %163 = and i32 %162, -8
  %164 = icmp eq i32 %163, 8
  br i1 %164, label %if.end.i1458, label %if.then.i1453

if.then.i1453:                                    ; preds = %land.lhs.true.i1452, %if.then302
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1458:                                     ; preds = %land.lhs.true.i1452
  %bf.lshr.i1454 = lshr i32 %bf.load.i1447, 16
  %bf.clear11.i1455 = and i32 %bf.lshr.i1454, 255
  %idxprom27.i1456 = zext i32 %bf.clear11.i1455 to i64
  %arrayidx12.i1457 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1456
  %165 = load i32* %arrayidx12.i1457, align 4, !tbaa !1
  switch i32 %165, label %sw.default.i1459 [
    i32 2, label %replace_reg.exit1461
    i32 6, label %replace_reg.exit1461
  ]

sw.default.i1459:                                 ; preds = %if.end.i1458
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1461:                             ; preds = %if.end.i1458, %if.end.i1458
  %arrayidx19.i1460 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i1456
  %166 = load %struct.rtx_def** %arrayidx19.i1460, align 8, !tbaa !10
  %167 = getelementptr inbounds %union.rtunion_def* %arrayidx304, i64 0, i32 0
  %.c2348 = ptrtoint %struct.rtx_def* %166 to i64
  store i64 %.c2348, i64* %167, align 8, !tbaa !10
  %top306 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %168 = load i32* %top306, align 4, !tbaa !33
  %dec307 = add nsw i32 %168, -1
  store i32 %dec307, i32* %top306, align 4, !tbaa !33
  %169 = load %struct.rtx_def** %src1.1, align 8, !tbaa !10
  %arrayidx309 = getelementptr inbounds %struct.rtx_def* %169, i64 0, i32 1, i64 0
  %rtuint310 = bitcast %union.rtunion_def* %arrayidx309 to i32*
  %170 = load i32* %rtuint310, align 4, !tbaa !4
  %sh_prom311 = zext i32 %170 to i64
  %shl312 = shl i64 1, %sh_prom311
  %neg = xor i64 %shl312, -1
  %reg_set313 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %171 = load i64* %reg_set313, align 8, !tbaa !34
  %and314 = and i64 %171, %neg
  store i64 %and314, i64* %reg_set313, align 8, !tbaa !34
  br label %if.end315

if.end315:                                        ; preds = %if.end300.if.end315_crit_edge, %replace_reg.exit1461
  %172 = phi %struct.rtx_def* [ %.pre2591, %if.end300.if.end315_crit_edge ], [ %169, %replace_reg.exit1461 ]
  %173 = getelementptr inbounds %struct.rtx_def* %172, i64 0, i32 0
  %bf.load.i1462 = load i32* %173, align 8
  %bf.clear.i1463 = and i32 %bf.load.i1462, 65535
  %cmp3.i1464 = icmp eq i32 %bf.clear.i1463, 61
  br i1 %cmp3.i1464, label %land.lhs.true.i1467, label %if.then.i1468

land.lhs.true.i1467:                              ; preds = %if.end315
  %arrayidx.i1465 = getelementptr inbounds %struct.rtx_def* %172, i64 0, i32 1, i64 0
  %rtuint.i1466 = bitcast %union.rtunion_def* %arrayidx.i1465 to i32*
  %174 = load i32* %rtuint.i1466, align 4, !tbaa !4
  %175 = and i32 %174, -8
  %176 = icmp eq i32 %175, 8
  br i1 %176, label %if.end.i1473, label %if.then.i1468

if.then.i1468:                                    ; preds = %land.lhs.true.i1467, %if.end315
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1473:                                     ; preds = %land.lhs.true.i1467
  %bf.lshr.i1469 = lshr i32 %bf.load.i1462, 16
  %bf.clear11.i1470 = and i32 %bf.lshr.i1469, 255
  %idxprom27.i1471 = zext i32 %bf.clear11.i1470 to i64
  %arrayidx12.i1472 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1471
  %177 = load i32* %arrayidx12.i1472, align 4, !tbaa !1
  switch i32 %177, label %sw.default.i1474 [
    i32 2, label %replace_reg.exit1476
    i32 6, label %replace_reg.exit1476
  ]

sw.default.i1474:                                 ; preds = %if.end.i1473
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1476:                             ; preds = %if.end.i1473, %if.end.i1473
  %arrayidx19.i1475 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i1471
  %178 = load %struct.rtx_def** %arrayidx19.i1475, align 8, !tbaa !10
  store %struct.rtx_def* %178, %struct.rtx_def** %src1.1, align 8, !tbaa !10
  br label %sw.epilog902

sw.bb316:                                         ; preds = %if.end161, %if.end161, %if.end161, %if.end161
  %fld317 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 1
  %rtx319 = bitcast [1 x %union.rtunion_def]* %fld317 to %struct.rtx_def**
  br label %for.cond.i1480

for.cond.i1480:                                   ; preds = %sw.bb37.i1509, %sw.bb316
  %pat.addr.0.i1477 = phi %struct.rtx_def** [ %rtx319, %sw.bb316 ], [ %rtx40.i1508, %sw.bb37.i1509 ]
  %179 = load %struct.rtx_def** %pat.addr.0.i1477, align 8, !tbaa !10
  %180 = getelementptr inbounds %struct.rtx_def* %179, i64 0, i32 0
  %bf.load.i1478 = load i32* %180, align 8
  %bf.clear.i1479 = and i32 %bf.load.i1478, 65535
  switch i32 %bf.clear.i1479, label %get_true_reg.exit1510 [
    i32 63, label %sw.bb.i1486
    i32 125, label %sw.bb37.i1509
    i32 126, label %sw.bb37.i1509
    i32 123, label %sw.bb37.i1509
  ]

sw.bb.i1486:                                      ; preds = %for.cond.i1480
  %fld.i1481 = getelementptr inbounds %struct.rtx_def* %179, i64 0, i32 1
  %rtx.i1482 = bitcast [1 x %union.rtunion_def]* %fld.i1481 to %struct.rtx_def**
  %181 = load %struct.rtx_def** %rtx.i1482, align 8, !tbaa !10
  %182 = getelementptr inbounds %struct.rtx_def* %181, i64 0, i32 0
  %bf.load1.i1483 = load i32* %182, align 8
  %bf.clear2.i1484 = and i32 %bf.load1.i1483, 65535
  %cmp.i1485 = icmp eq i32 %bf.clear2.i1484, 61
  br i1 %cmp.i1485, label %land.lhs.true.i1489, label %sw.bb37.i1509

land.lhs.true.i1489:                              ; preds = %sw.bb.i1486
  %arrayidx7.i1487 = getelementptr inbounds %struct.rtx_def* %181, i64 0, i32 1, i64 0
  %rtuint.i1488 = bitcast %union.rtunion_def* %arrayidx7.i1487 to i32*
  %183 = load i32* %rtuint.i1488, align 4, !tbaa !4
  %184 = and i32 %183, -8
  %185 = icmp eq i32 %184, 8
  br i1 %185, label %if.then.i1505, label %sw.bb37.i1509

if.then.i1505:                                    ; preds = %land.lhs.true.i1489
  %bf.lshr.i1490 = lshr i32 %bf.load1.i1483, 16
  %bf.clear21.i1491 = and i32 %bf.lshr.i1490, 255
  %arrayidx23.i1492 = getelementptr inbounds %struct.rtx_def* %179, i64 0, i32 1, i64 1
  %rtuint24.i1493 = bitcast %union.rtunion_def* %arrayidx23.i1492 to i32*
  %186 = load i32* %rtuint24.i1493, align 4, !tbaa !4
  %bf.lshr26.i1494 = lshr i32 %bf.load.i1478, 16
  %bf.clear27.i1495 = and i32 %bf.lshr26.i1494, 255
  %call.i1496 = tail call i32 @subreg_regno_offset(i32 %183, i32 %bf.clear21.i1491, i32 %186, i32 %bf.clear27.i1495) #4
  %bf.load28.i1497 = load i32* %182, align 8
  %bf.lshr29.i1498 = lshr i32 %bf.load28.i1497, 16
  %bf.clear30.i1499 = and i32 %bf.lshr29.i1498, 255
  %idxprom52.i1500 = zext i32 %bf.clear30.i1499 to i64
  %187 = load i32* %rtuint.i1488, align 4, !tbaa !4
  %add.i1501 = add i32 %call.i1496, -8
  %sub.i1502 = add i32 %add.i1501, %187
  %idxprom34.i1503 = zext i32 %sub.i1502 to i64
  %arrayidx36.i1504 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i1503, i64 %idxprom52.i1500
  %188 = load %struct.rtx_def** %arrayidx36.i1504, align 8, !tbaa !10
  store %struct.rtx_def* %188, %struct.rtx_def** %pat.addr.0.i1477, align 8, !tbaa !10
  br label %get_true_reg.exit1510

sw.bb37.i1509:                                    ; preds = %land.lhs.true.i1489, %sw.bb.i1486, %for.cond.i1480, %for.cond.i1480, %for.cond.i1480
  %arrayidx39.i1507 = getelementptr inbounds %struct.rtx_def* %179, i64 0, i32 1, i64 0
  %rtx40.i1508 = bitcast %union.rtunion_def* %arrayidx39.i1507 to %struct.rtx_def**
  br label %for.cond.i1480

get_true_reg.exit1510:                            ; preds = %for.cond.i1480, %if.then.i1505
  %189 = phi %struct.rtx_def* [ %188, %if.then.i1505 ], [ %179, %for.cond.i1480 ]
  %arrayidx322 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 1, i64 1
  br label %for.cond.i1514

for.cond.i1514:                                   ; preds = %sw.bb37.i1543, %get_true_reg.exit1510
  %arrayidx322.sink = phi %union.rtunion_def* [ %arrayidx322, %get_true_reg.exit1510 ], [ %arrayidx39.i1541, %sw.bb37.i1543 ]
  %rtx323 = bitcast %union.rtunion_def* %arrayidx322.sink to %struct.rtx_def**
  %190 = load %struct.rtx_def** %rtx323, align 8, !tbaa !10
  %191 = getelementptr inbounds %struct.rtx_def* %190, i64 0, i32 0
  %bf.load.i1512 = load i32* %191, align 8
  %bf.clear.i1513 = and i32 %bf.load.i1512, 65535
  switch i32 %bf.clear.i1513, label %get_true_reg.exit1544 [
    i32 63, label %sw.bb.i1520
    i32 125, label %sw.bb37.i1543
    i32 126, label %sw.bb37.i1543
    i32 123, label %sw.bb37.i1543
  ]

sw.bb.i1520:                                      ; preds = %for.cond.i1514
  %fld.i1515 = getelementptr inbounds %struct.rtx_def* %190, i64 0, i32 1
  %rtx.i1516 = bitcast [1 x %union.rtunion_def]* %fld.i1515 to %struct.rtx_def**
  %192 = load %struct.rtx_def** %rtx.i1516, align 8, !tbaa !10
  %193 = getelementptr inbounds %struct.rtx_def* %192, i64 0, i32 0
  %bf.load1.i1517 = load i32* %193, align 8
  %bf.clear2.i1518 = and i32 %bf.load1.i1517, 65535
  %cmp.i1519 = icmp eq i32 %bf.clear2.i1518, 61
  br i1 %cmp.i1519, label %land.lhs.true.i1523, label %sw.bb37.i1543

land.lhs.true.i1523:                              ; preds = %sw.bb.i1520
  %arrayidx7.i1521 = getelementptr inbounds %struct.rtx_def* %192, i64 0, i32 1, i64 0
  %rtuint.i1522 = bitcast %union.rtunion_def* %arrayidx7.i1521 to i32*
  %194 = load i32* %rtuint.i1522, align 4, !tbaa !4
  %195 = and i32 %194, -8
  %196 = icmp eq i32 %195, 8
  br i1 %196, label %if.then.i1539, label %sw.bb37.i1543

if.then.i1539:                                    ; preds = %land.lhs.true.i1523
  %bf.lshr.i1524 = lshr i32 %bf.load1.i1517, 16
  %bf.clear21.i1525 = and i32 %bf.lshr.i1524, 255
  %arrayidx23.i1526 = getelementptr inbounds %struct.rtx_def* %190, i64 0, i32 1, i64 1
  %rtuint24.i1527 = bitcast %union.rtunion_def* %arrayidx23.i1526 to i32*
  %197 = load i32* %rtuint24.i1527, align 4, !tbaa !4
  %bf.lshr26.i1528 = lshr i32 %bf.load.i1512, 16
  %bf.clear27.i1529 = and i32 %bf.lshr26.i1528, 255
  %call.i1530 = tail call i32 @subreg_regno_offset(i32 %194, i32 %bf.clear21.i1525, i32 %197, i32 %bf.clear27.i1529) #4
  %bf.load28.i1531 = load i32* %193, align 8
  %bf.lshr29.i1532 = lshr i32 %bf.load28.i1531, 16
  %bf.clear30.i1533 = and i32 %bf.lshr29.i1532, 255
  %idxprom52.i1534 = zext i32 %bf.clear30.i1533 to i64
  %198 = load i32* %rtuint.i1522, align 4, !tbaa !4
  %add.i1535 = add i32 %call.i1530, -8
  %sub.i1536 = add i32 %add.i1535, %198
  %idxprom34.i1537 = zext i32 %sub.i1536 to i64
  %arrayidx36.i1538 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i1537, i64 %idxprom52.i1534
  %199 = load %struct.rtx_def** %arrayidx36.i1538, align 8, !tbaa !10
  %200 = getelementptr inbounds %union.rtunion_def* %arrayidx322.sink, i64 0, i32 0
  %.c2336 = ptrtoint %struct.rtx_def* %199 to i64
  store i64 %.c2336, i64* %200, align 8, !tbaa !10
  %.pre2592 = load %struct.rtx_def** %pat.addr.0.i1477, align 8, !tbaa !10
  br label %get_true_reg.exit1544

sw.bb37.i1543:                                    ; preds = %land.lhs.true.i1523, %sw.bb.i1520, %for.cond.i1514, %for.cond.i1514, %for.cond.i1514
  %arrayidx39.i1541 = getelementptr inbounds %struct.rtx_def* %190, i64 0, i32 1, i64 0
  br label %for.cond.i1514

get_true_reg.exit1544:                            ; preds = %for.cond.i1514, %if.then.i1539
  %201 = phi %struct.rtx_def* [ %199, %if.then.i1539 ], [ %190, %for.cond.i1514 ]
  %202 = phi %struct.rtx_def* [ %.pre2592, %if.then.i1539 ], [ %189, %for.cond.i1514 ]
  %203 = getelementptr inbounds %struct.rtx_def* %202, i64 0, i32 0
  %bf.load325 = load i32* %203, align 8
  %bf.clear326 = and i32 %bf.load325, 65535
  %cmp327 = icmp eq i32 %bf.clear326, 61
  br i1 %cmp327, label %land.lhs.true329, label %if.end347

land.lhs.true329:                                 ; preds = %get_true_reg.exit1544
  %arrayidx331 = getelementptr inbounds %struct.rtx_def* %202, i64 0, i32 1, i64 0
  %rtuint332 = bitcast %union.rtunion_def* %arrayidx331 to i32*
  %204 = load i32* %rtuint332, align 4, !tbaa !4
  %205 = and i32 %204, -8
  %206 = icmp eq i32 %205, 8
  br i1 %206, label %if.then341, label %if.end347

if.then341:                                       ; preds = %land.lhs.true329
  %call345 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %204) #4
  %.pre = load %struct.rtx_def** %rtx323, align 8, !tbaa !10
  br label %if.end347

if.end347:                                        ; preds = %get_true_reg.exit1544, %land.lhs.true329, %if.then341
  %207 = phi %struct.rtx_def* [ %.pre, %if.then341 ], [ %201, %land.lhs.true329 ], [ %201, %get_true_reg.exit1544 ]
  %src1_note.0 = phi %struct.rtx_def* [ %call345, %if.then341 ], [ null, %land.lhs.true329 ], [ null, %get_true_reg.exit1544 ]
  %208 = getelementptr inbounds %struct.rtx_def* %207, i64 0, i32 0
  %bf.load348 = load i32* %208, align 8
  %bf.clear349 = and i32 %bf.load348, 65535
  %cmp350 = icmp eq i32 %bf.clear349, 61
  br i1 %cmp350, label %land.lhs.true352, label %if.end370

land.lhs.true352:                                 ; preds = %if.end347
  %arrayidx354 = getelementptr inbounds %struct.rtx_def* %207, i64 0, i32 1, i64 0
  %rtuint355 = bitcast %union.rtunion_def* %arrayidx354 to i32*
  %209 = load i32* %rtuint355, align 4, !tbaa !4
  %210 = and i32 %209, -8
  %211 = icmp eq i32 %210, 8
  br i1 %211, label %if.then364, label %if.end370

if.then364:                                       ; preds = %land.lhs.true352
  %call368 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %209) #4
  br label %if.end370

if.end370:                                        ; preds = %if.end347, %land.lhs.true352, %if.then364
  %src2_note.0 = phi %struct.rtx_def* [ %call368, %if.then364 ], [ null, %land.lhs.true352 ], [ null, %if.end347 ]
  %212 = load %struct.rtx_def** %pat.addr.0.i1477, align 8, !tbaa !10
  %213 = getelementptr inbounds %struct.rtx_def* %212, i64 0, i32 0
  %bf.load371 = load i32* %213, align 8
  %bf.clear372 = and i32 %bf.load371, 65535
  %cmp373 = icmp eq i32 %bf.clear372, 61
  br i1 %cmp373, label %land.lhs.true375, label %if.then404

land.lhs.true375:                                 ; preds = %if.end370
  %arrayidx377 = getelementptr inbounds %struct.rtx_def* %212, i64 0, i32 1, i64 0
  %rtuint378 = bitcast %union.rtunion_def* %arrayidx377 to i32*
  %214 = load i32* %rtuint378, align 4, !tbaa !4
  %215 = and i32 %214, -8
  %216 = icmp eq i32 %215, 8
  br i1 %216, label %lor.lhs.false387, label %if.then404

lor.lhs.false387:                                 ; preds = %land.lhs.true375
  %217 = load %struct.rtx_def** %rtx323, align 8, !tbaa !10
  %218 = getelementptr inbounds %struct.rtx_def* %217, i64 0, i32 0
  %bf.load388 = load i32* %218, align 8
  %bf.clear389 = and i32 %bf.load388, 65535
  %cmp390 = icmp eq i32 %bf.clear389, 61
  br i1 %cmp390, label %land.lhs.true392, label %if.then404

land.lhs.true392:                                 ; preds = %lor.lhs.false387
  %arrayidx394 = getelementptr inbounds %struct.rtx_def* %217, i64 0, i32 1, i64 0
  %rtuint395 = bitcast %union.rtunion_def* %arrayidx394 to i32*
  %219 = load i32* %rtuint395, align 4, !tbaa !4
  %220 = and i32 %219, -8
  %221 = icmp eq i32 %220, 8
  br i1 %221, label %if.end.i1554, label %if.then404

if.then404:                                       ; preds = %land.lhs.true392, %lor.lhs.false387, %land.lhs.true375, %if.end370
  %222 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %222)
  br label %if.end422

if.end.i1554:                                     ; preds = %land.lhs.true392
  %top.i1552 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %223 = load i32* %top.i1552, align 4, !tbaa !33
  %cmp730.i1553 = icmp sgt i32 %223, -1
  br i1 %cmp730.i1553, label %for.body.lr.ph.i1555, label %if.then413

for.body.lr.ph.i1555:                             ; preds = %if.end.i1554
  %224 = sext i32 %223 to i64
  br label %for.body.i1563

for.cond.i1558:                                   ; preds = %for.body.i1563
  %indvars.iv.next.i1556 = add nsw i64 %indvars.iv.i1559, -1
  %225 = trunc i64 %indvars.iv.i1559 to i32
  %cmp7.i1557 = icmp sgt i32 %225, 0
  br i1 %cmp7.i1557, label %for.body.i1563, label %if.end.i1578

for.body.i1563:                                   ; preds = %for.cond.i1558, %for.body.lr.ph.i1555
  %indvars.iv.i1559 = phi i64 [ %224, %for.body.lr.ph.i1555 ], [ %indvars.iv.next.i1556, %for.cond.i1558 ]
  %arrayidx9.i1560 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i1559
  %226 = load i8* %arrayidx9.i1560, align 1, !tbaa !1
  %conv.i1561 = zext i8 %226 to i32
  %cmp13.i1562 = icmp eq i32 %conv.i1561, %214
  br i1 %cmp13.i1562, label %cond.true.i1566, label %for.cond.i1558

cond.true.i1566:                                  ; preds = %for.body.i1563
  %227 = trunc i64 %indvars.iv.i1559 to i32
  %add.i1564 = add i32 %223, 8
  %sub.i1565 = sub i32 %add.i1564, %227
  br label %if.end.i1578

if.end.i1578:                                     ; preds = %for.cond.i1558, %cond.true.i1566
  %cond.i1567 = phi i32 [ %sub.i1565, %cond.true.i1566 ], [ -1, %for.cond.i1558 ]
  br i1 %cmp730.i1553, label %for.body.lr.ph.i1579, label %if.then413

for.body.lr.ph.i1579:                             ; preds = %if.end.i1578
  %228 = sext i32 %223 to i64
  br label %for.body.i1587

for.cond.i1582:                                   ; preds = %for.body.i1587
  %indvars.iv.next.i1580 = add nsw i64 %indvars.iv.i1583, -1
  %229 = trunc i64 %indvars.iv.i1583 to i32
  %cmp7.i1581 = icmp sgt i32 %229, 0
  br i1 %cmp7.i1581, label %for.body.i1587, label %if.then413

for.body.i1587:                                   ; preds = %for.cond.i1582, %for.body.lr.ph.i1579
  %indvars.iv.i1583 = phi i64 [ %228, %for.body.lr.ph.i1579 ], [ %indvars.iv.next.i1580, %for.cond.i1582 ]
  %arrayidx9.i1584 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i1583
  %230 = load i8* %arrayidx9.i1584, align 1, !tbaa !1
  %conv.i1585 = zext i8 %230 to i32
  %cmp13.i1586 = icmp eq i32 %conv.i1585, %219
  br i1 %cmp13.i1586, label %get_hard_regnum.exit1592, label %for.cond.i1582

get_hard_regnum.exit1592:                         ; preds = %for.body.i1587
  %231 = trunc i64 %indvars.iv.i1583 to i32
  %add.i1588 = sub i32 8, %231
  %sub.i1589 = add i32 %add.i1588, %223
  %cmp408 = icmp eq i32 %cond.i1567, -1
  %cmp411 = icmp eq i32 %sub.i1589, -1
  %or.cond = or i1 %cmp408, %cmp411
  br i1 %or.cond, label %if.then413, label %if.end414

if.then413:                                       ; preds = %for.cond.i1582, %if.end.i1554, %if.end.i1578, %get_hard_regnum.exit1592
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1621, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_stack_regs_pat, i64 0, i64 0)) #6
  unreachable

if.end414:                                        ; preds = %get_hard_regnum.exit1592
  %cmp415 = icmp ne i32 %cond.i1567, 8
  %cmp418 = icmp ne i32 %sub.i1589, 8
  %or.cond903 = and i1 %cmp415, %cmp418
  br i1 %or.cond903, label %if.then420, label %if.end422

if.then420:                                       ; preds = %if.end414
  %232 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %232)
  br label %if.end422

if.end422:                                        ; preds = %if.end414, %if.then420, %if.then404
  %233 = load %struct.rtx_def** %pat.addr.0.i1477, align 8, !tbaa !10
  %234 = getelementptr inbounds %struct.rtx_def* %233, i64 0, i32 0
  %bf.load423 = load i32* %234, align 8
  %bf.clear424 = and i32 %bf.load423, 65535
  %cmp425 = icmp eq i32 %bf.clear424, 61
  br i1 %cmp425, label %land.lhs.true427, label %if.end441

land.lhs.true427:                                 ; preds = %if.end422
  %arrayidx429 = getelementptr inbounds %struct.rtx_def* %233, i64 0, i32 1, i64 0
  %rtuint430 = bitcast %union.rtunion_def* %arrayidx429 to i32*
  %235 = load i32* %rtuint430, align 4, !tbaa !4
  %236 = and i32 %235, -8
  %237 = icmp eq i32 %236, 8
  br i1 %237, label %if.end.i1602, label %if.end441

if.end.i1602:                                     ; preds = %land.lhs.true427
  %top.i1600 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %238 = load i32* %top.i1600, align 4, !tbaa !33
  %cmp730.i1601 = icmp sgt i32 %238, -1
  br i1 %cmp730.i1601, label %for.body.lr.ph.i1603, label %if.then.i1623

for.body.lr.ph.i1603:                             ; preds = %if.end.i1602
  %239 = sext i32 %238 to i64
  br label %for.body.i1611

for.cond.i1606:                                   ; preds = %for.body.i1611
  %indvars.iv.next.i1604 = add nsw i64 %indvars.iv.i1607, -1
  %240 = trunc i64 %indvars.iv.i1607 to i32
  %cmp7.i1605 = icmp sgt i32 %240, 0
  br i1 %cmp7.i1605, label %for.body.i1611, label %if.then.i1623

for.body.i1611:                                   ; preds = %for.cond.i1606, %for.body.lr.ph.i1603
  %indvars.iv.i1607 = phi i64 [ %239, %for.body.lr.ph.i1603 ], [ %indvars.iv.next.i1604, %for.cond.i1606 ]
  %arrayidx9.i1608 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i1607
  %241 = load i8* %arrayidx9.i1608, align 1, !tbaa !1
  %conv.i1609 = zext i8 %241 to i32
  %cmp13.i1610 = icmp eq i32 %conv.i1609, %235
  br i1 %cmp13.i1610, label %get_hard_regnum.exit1616, label %for.cond.i1606

get_hard_regnum.exit1616:                         ; preds = %for.body.i1611
  %242 = trunc i64 %indvars.iv.i1607 to i32
  %add.i1612 = sub i32 8, %242
  %sub.i1613 = add i32 %add.i1612, %238
  %243 = and i32 %sub.i1613, -8
  %244 = icmp eq i32 %243, 8
  br i1 %244, label %if.end.i1628, label %if.then.i1623

if.then.i1623:                                    ; preds = %for.cond.i1606, %if.end.i1602, %get_hard_regnum.exit1616
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1628:                                     ; preds = %get_hard_regnum.exit1616
  %bf.lshr.i1624 = lshr i32 %bf.load423, 16
  %bf.clear11.i1625 = and i32 %bf.lshr.i1624, 255
  %idxprom27.i1626 = zext i32 %bf.clear11.i1625 to i64
  %arrayidx12.i1627 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1626
  %245 = load i32* %arrayidx12.i1627, align 4, !tbaa !1
  switch i32 %245, label %sw.default.i1629 [
    i32 2, label %replace_reg.exit1632
    i32 6, label %replace_reg.exit1632
  ]

sw.default.i1629:                                 ; preds = %if.end.i1628
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1632:                             ; preds = %if.end.i1628, %if.end.i1628
  %sub.i1630 = add nsw i32 %sub.i1613, -8
  %idxprom17.i = sext i32 %sub.i1630 to i64
  %arrayidx19.i1631 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i, i64 %idxprom27.i1626
  %246 = load %struct.rtx_def** %arrayidx19.i1631, align 8, !tbaa !10
  store %struct.rtx_def* %246, %struct.rtx_def** %pat.addr.0.i1477, align 8, !tbaa !10
  br label %if.end441

if.end441:                                        ; preds = %replace_reg.exit1632, %land.lhs.true427, %if.end422
  %247 = load %struct.rtx_def** %rtx323, align 8, !tbaa !10
  %248 = getelementptr inbounds %struct.rtx_def* %247, i64 0, i32 0
  %bf.load442 = load i32* %248, align 8
  %bf.clear443 = and i32 %bf.load442, 65535
  %cmp444 = icmp eq i32 %bf.clear443, 61
  br i1 %cmp444, label %land.lhs.true446, label %if.end460

land.lhs.true446:                                 ; preds = %if.end441
  %arrayidx448 = getelementptr inbounds %struct.rtx_def* %247, i64 0, i32 1, i64 0
  %rtuint449 = bitcast %union.rtunion_def* %arrayidx448 to i32*
  %249 = load i32* %rtuint449, align 4, !tbaa !4
  %250 = and i32 %249, -8
  %251 = icmp eq i32 %250, 8
  br i1 %251, label %if.end.i1642, label %if.end460

if.end.i1642:                                     ; preds = %land.lhs.true446
  %top.i1640 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %252 = load i32* %top.i1640, align 4, !tbaa !33
  %cmp730.i1641 = icmp sgt i32 %252, -1
  br i1 %cmp730.i1641, label %for.body.lr.ph.i1643, label %if.then.i1664

for.body.lr.ph.i1643:                             ; preds = %if.end.i1642
  %253 = sext i32 %252 to i64
  br label %for.body.i1651

for.cond.i1646:                                   ; preds = %for.body.i1651
  %indvars.iv.next.i1644 = add nsw i64 %indvars.iv.i1647, -1
  %254 = trunc i64 %indvars.iv.i1647 to i32
  %cmp7.i1645 = icmp sgt i32 %254, 0
  br i1 %cmp7.i1645, label %for.body.i1651, label %if.then.i1664

for.body.i1651:                                   ; preds = %for.cond.i1646, %for.body.lr.ph.i1643
  %indvars.iv.i1647 = phi i64 [ %253, %for.body.lr.ph.i1643 ], [ %indvars.iv.next.i1644, %for.cond.i1646 ]
  %arrayidx9.i1648 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i1647
  %255 = load i8* %arrayidx9.i1648, align 1, !tbaa !1
  %conv.i1649 = zext i8 %255 to i32
  %cmp13.i1650 = icmp eq i32 %conv.i1649, %249
  br i1 %cmp13.i1650, label %get_hard_regnum.exit1656, label %for.cond.i1646

get_hard_regnum.exit1656:                         ; preds = %for.body.i1651
  %256 = trunc i64 %indvars.iv.i1647 to i32
  %add.i1652 = sub i32 8, %256
  %sub.i1653 = add i32 %add.i1652, %252
  %257 = and i32 %sub.i1653, -8
  %258 = icmp eq i32 %257, 8
  br i1 %258, label %if.end.i1669, label %if.then.i1664

if.then.i1664:                                    ; preds = %for.cond.i1646, %if.end.i1642, %get_hard_regnum.exit1656
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1669:                                     ; preds = %get_hard_regnum.exit1656
  %bf.lshr.i1665 = lshr i32 %bf.load442, 16
  %bf.clear11.i1666 = and i32 %bf.lshr.i1665, 255
  %idxprom27.i1667 = zext i32 %bf.clear11.i1666 to i64
  %arrayidx12.i1668 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1667
  %259 = load i32* %arrayidx12.i1668, align 4, !tbaa !1
  switch i32 %259, label %sw.default.i1670 [
    i32 2, label %replace_reg.exit1674
    i32 6, label %replace_reg.exit1674
  ]

sw.default.i1670:                                 ; preds = %if.end.i1669
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1674:                             ; preds = %if.end.i1669, %if.end.i1669
  %sub.i1671 = add nsw i32 %sub.i1653, -8
  %idxprom17.i1672 = sext i32 %sub.i1671 to i64
  %arrayidx19.i1673 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i1672, i64 %idxprom27.i1667
  %260 = load %struct.rtx_def** %arrayidx19.i1673, align 8, !tbaa !10
  %261 = getelementptr inbounds %union.rtunion_def* %arrayidx322.sink, i64 0, i32 0
  %.c2341 = ptrtoint %struct.rtx_def* %260 to i64
  store i64 %.c2341, i64* %261, align 8, !tbaa !10
  br label %if.end460

if.end460:                                        ; preds = %replace_reg.exit1674, %land.lhs.true446, %if.end441
  %tobool461 = icmp eq %struct.rtx_def* %src1_note.0, null
  br i1 %tobool461, label %if.else521, label %if.then462

if.then462:                                       ; preds = %if.end460
  %arrayidx464 = getelementptr inbounds %struct.rtx_def* %src1_note.0, i64 0, i32 1, i64 0
  %rtx465 = bitcast %union.rtunion_def* %arrayidx464 to %struct.rtx_def**
  %262 = load %struct.rtx_def** %rtx465, align 8, !tbaa !10
  %arrayidx467 = getelementptr inbounds %struct.rtx_def* %262, i64 0, i32 1, i64 0
  %rtuint468 = bitcast %union.rtunion_def* %arrayidx467 to i32*
  %263 = load i32* %rtuint468, align 4, !tbaa !4
  %top469 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %264 = load i32* %top469, align 4, !tbaa !33
  %idxprom470 = sext i32 %264 to i64
  %arrayidx472 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom470
  %265 = load i8* %arrayidx472, align 1, !tbaa !1
  %conv473 = zext i8 %265 to i32
  %cmp474 = icmp eq i32 %263, %conv473
  br i1 %cmp474, label %if.then476, label %if.else485

if.then476:                                       ; preds = %if.then462
  %266 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %arrayidx478 = getelementptr inbounds %struct.rtx_def* %266, i64 0, i32 1, i64 0
  %rtuint479 = bitcast %union.rtunion_def* %arrayidx478 to i32*
  %267 = load i32* %rtuint479, align 4, !tbaa !4
  %sh_prom480 = zext i32 %267 to i64
  %shl481 = shl i64 1, %sh_prom480
  %reg_set482 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %268 = load i64* %reg_set482, align 8, !tbaa !34
  %or483 = or i64 %shl481, %268
  store i64 %or483, i64* %reg_set482, align 8, !tbaa !34
  %269 = getelementptr inbounds %struct.rtx_def* %266, i64 0, i32 0
  %bf.load.i1675 = load i32* %269, align 8
  %bf.clear.i1676 = and i32 %bf.load.i1675, 65535
  %cmp.i1677 = icmp eq i32 %bf.clear.i1676, 61
  %270 = and i32 %267, -8
  %271 = icmp eq i32 %270, 8
  %or.cond2623 = and i1 %cmp.i1677, %271
  br i1 %or.cond2623, label %if.end.i1684, label %if.then.i1681

if.then.i1681:                                    ; preds = %if.then476
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i1684:                                     ; preds = %if.then476
  %cmp730.i1683 = icmp sgt i32 %264, -1
  br i1 %cmp730.i1683, label %for.body.i1693, label %if.then.i1706

for.cond.i1688:                                   ; preds = %for.body.i1693
  %indvars.iv.next.i1686 = add nsw i64 %indvars.iv.i1689, -1
  %272 = trunc i64 %indvars.iv.i1689 to i32
  %cmp7.i1687 = icmp sgt i32 %272, 0
  br i1 %cmp7.i1687, label %for.body.i1693, label %if.then.i1706

for.body.i1693:                                   ; preds = %if.end.i1684, %for.cond.i1688
  %indvars.iv.i1689 = phi i64 [ %indvars.iv.next.i1686, %for.cond.i1688 ], [ %idxprom470, %if.end.i1684 ]
  %arrayidx9.i1690 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i1689
  %273 = load i8* %arrayidx9.i1690, align 1, !tbaa !1
  %conv.i1691 = zext i8 %273 to i32
  %cmp13.i1692 = icmp eq i32 %conv.i1691, %267
  br i1 %cmp13.i1692, label %get_hard_regnum.exit1698, label %for.cond.i1688

get_hard_regnum.exit1698:                         ; preds = %for.body.i1693
  %274 = trunc i64 %indvars.iv.i1689 to i32
  %add.i1694 = sub i32 8, %274
  %sub.i1695 = add i32 %add.i1694, %264
  %275 = and i32 %sub.i1695, -8
  %276 = icmp eq i32 %275, 8
  br i1 %276, label %if.end.i1711, label %if.then.i1706

if.then.i1706:                                    ; preds = %for.cond.i1688, %if.end.i1684, %get_hard_regnum.exit1698
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1711:                                     ; preds = %get_hard_regnum.exit1698
  %bf.lshr.i1707 = lshr i32 %bf.load.i1675, 16
  %bf.clear11.i1708 = and i32 %bf.lshr.i1707, 255
  %idxprom27.i1709 = zext i32 %bf.clear11.i1708 to i64
  %arrayidx12.i1710 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1709
  %277 = load i32* %arrayidx12.i1710, align 4, !tbaa !1
  switch i32 %277, label %sw.default.i1712 [
    i32 2, label %replace_reg.exit1716
    i32 6, label %replace_reg.exit1716
  ]

sw.default.i1712:                                 ; preds = %if.end.i1711
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1716:                             ; preds = %if.end.i1711, %if.end.i1711
  %sub.i1713 = add nsw i32 %sub.i1695, -8
  %idxprom17.i1714 = sext i32 %sub.i1713 to i64
  %arrayidx19.i1715 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i1714, i64 %idxprom27.i1709
  %278 = load %struct.rtx_def** %arrayidx19.i1715, align 8, !tbaa !10
  store %struct.rtx_def* %278, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  br label %if.end504

if.else485:                                       ; preds = %if.then462
  %279 = getelementptr inbounds %struct.rtx_def* %262, i64 0, i32 0
  %bf.load.i1717 = load i32* %279, align 8
  %bf.clear.i1718 = and i32 %bf.load.i1717, 65535
  %cmp.i1719 = icmp eq i32 %bf.clear.i1718, 61
  %280 = and i32 %263, -8
  %281 = icmp eq i32 %280, 8
  %or.cond2322 = and i1 %cmp.i1719, %281
  br i1 %or.cond2322, label %if.end.i1726, label %if.then.i1723

if.then.i1723:                                    ; preds = %if.else485
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i1726:                                     ; preds = %if.else485
  %cmp730.i1725 = icmp sgt i32 %264, -1
  br i1 %cmp730.i1725, label %for.body.i1735, label %get_hard_regnum.exit1740

for.cond.i1730:                                   ; preds = %for.body.i1735
  %indvars.iv.next.i1728 = add nsw i64 %indvars.iv.i1731, -1
  %282 = trunc i64 %indvars.iv.i1731 to i32
  %cmp7.i1729 = icmp sgt i32 %282, 0
  br i1 %cmp7.i1729, label %for.cond.i1730.for.body.i1735_crit_edge, label %get_hard_regnum.exit1740

for.cond.i1730.for.body.i1735_crit_edge:          ; preds = %for.cond.i1730
  %arrayidx9.i1732.phi.trans.insert = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.next.i1728
  %.pre2602 = load i8* %arrayidx9.i1732.phi.trans.insert, align 1, !tbaa !1
  br label %for.body.i1735

for.body.i1735:                                   ; preds = %if.end.i1726, %for.cond.i1730.for.body.i1735_crit_edge
  %283 = phi i8 [ %.pre2602, %for.cond.i1730.for.body.i1735_crit_edge ], [ %265, %if.end.i1726 ]
  %indvars.iv.i1731 = phi i64 [ %indvars.iv.next.i1728, %for.cond.i1730.for.body.i1735_crit_edge ], [ %idxprom470, %if.end.i1726 ]
  %conv.i1733 = zext i8 %283 to i32
  %cmp13.i1734 = icmp eq i32 %conv.i1733, %263
  br i1 %cmp13.i1734, label %cond.true.i1738, label %for.cond.i1730

cond.true.i1738:                                  ; preds = %for.body.i1735
  %284 = trunc i64 %indvars.iv.i1731 to i32
  %add.i1736 = add i32 %264, 8
  %sub.i1737 = sub i32 %add.i1736, %284
  br label %get_hard_regnum.exit1740

get_hard_regnum.exit1740:                         ; preds = %for.cond.i1730, %if.end.i1726, %cond.true.i1738
  %cond.i1739 = phi i32 [ %sub.i1737, %cond.true.i1738 ], [ -1, %if.end.i1726 ], [ -1, %for.cond.i1730 ]
  %285 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %arrayidx488 = getelementptr inbounds %struct.rtx_def* %285, i64 0, i32 1, i64 0
  %rtuint489 = bitcast %union.rtunion_def* %arrayidx488 to i32*
  %286 = load i32* %rtuint489, align 4, !tbaa !4
  %sh_prom490 = zext i32 %286 to i64
  %shl491 = shl i64 1, %sh_prom490
  %reg_set492 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %287 = load i64* %reg_set492, align 8, !tbaa !34
  %or493 = or i64 %shl491, %287
  store i64 %or493, i64* %reg_set492, align 8, !tbaa !34
  %288 = and i32 %cond.i1739, -8
  %289 = icmp eq i32 %288, 8
  br i1 %289, label %lor.lhs.false2.i1744, label %if.then.i1748

lor.lhs.false2.i1744:                             ; preds = %get_hard_regnum.exit1740
  %290 = getelementptr inbounds %struct.rtx_def* %285, i64 0, i32 0
  %bf.load.i1741 = load i32* %290, align 8
  %bf.clear.i1742 = and i32 %bf.load.i1741, 65535
  %cmp3.i1743 = icmp eq i32 %bf.clear.i1742, 61
  %291 = and i32 %286, -8
  %292 = icmp eq i32 %291, 8
  %or.cond2625 = and i1 %cmp3.i1743, %292
  br i1 %or.cond2625, label %if.end.i1753, label %if.then.i1748

if.then.i1748:                                    ; preds = %lor.lhs.false2.i1744, %get_hard_regnum.exit1740
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1753:                                     ; preds = %lor.lhs.false2.i1744
  %bf.lshr.i1749 = lshr i32 %bf.load.i1741, 16
  %bf.clear11.i1750 = and i32 %bf.lshr.i1749, 255
  %idxprom27.i1751 = zext i32 %bf.clear11.i1750 to i64
  %arrayidx12.i1752 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1751
  %293 = load i32* %arrayidx12.i1752, align 4, !tbaa !1
  switch i32 %293, label %sw.default.i1754 [
    i32 2, label %replace_reg.exit1758
    i32 6, label %replace_reg.exit1758
  ]

sw.default.i1754:                                 ; preds = %if.end.i1753
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1758:                             ; preds = %if.end.i1753, %if.end.i1753
  %sub.i1755 = add nsw i32 %cond.i1739, -8
  %idxprom17.i1756 = sext i32 %sub.i1755 to i64
  %arrayidx19.i1757 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i1756, i64 %idxprom27.i1751
  %294 = load %struct.rtx_def** %arrayidx19.i1757, align 8, !tbaa !10
  store %struct.rtx_def* %294, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %295 = load i8* %arrayidx472, align 1, !tbaa !1
  %sub500 = sub nsw i32 %264, %sub.i1755
  %idxprom501 = sext i32 %sub500 to i64
  %arrayidx503 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom501
  store i8 %295, i8* %arrayidx503, align 1, !tbaa !1
  %.pre2598 = load i64* %reg_set492, align 8, !tbaa !34
  br label %if.end504

if.end504:                                        ; preds = %replace_reg.exit1758, %replace_reg.exit1716
  %296 = phi i64 [ %.pre2598, %replace_reg.exit1758 ], [ %or483, %replace_reg.exit1716 ]
  %297 = load %struct.rtx_def** %rtx465, align 8, !tbaa !10
  %arrayidx509 = getelementptr inbounds %struct.rtx_def* %297, i64 0, i32 1, i64 0
  %rtuint510 = bitcast %union.rtunion_def* %arrayidx509 to i32*
  %298 = load i32* %rtuint510, align 4, !tbaa !4
  %sh_prom511 = zext i32 %298 to i64
  %shl512 = shl i64 1, %sh_prom511
  %neg513 = xor i64 %shl512, -1
  %reg_set514 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %and515 = and i64 %296, %neg513
  store i64 %and515, i64* %reg_set514, align 8, !tbaa !34
  %299 = getelementptr inbounds %struct.rtx_def* %297, i64 0, i32 0
  %bf.load.i1759 = load i32* %299, align 8
  %bf.clear.i1760 = and i32 %bf.load.i1759, 65535
  %cmp3.i1761 = icmp eq i32 %bf.clear.i1760, 61
  %300 = and i32 %298, -8
  %301 = icmp eq i32 %300, 8
  %or.cond2627 = and i1 %cmp3.i1761, %301
  br i1 %or.cond2627, label %if.end.i1771, label %if.then.i1766

if.then.i1766:                                    ; preds = %if.end504
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1771:                                     ; preds = %if.end504
  %bf.lshr.i1767 = lshr i32 %bf.load.i1759, 16
  %bf.clear11.i1768 = and i32 %bf.lshr.i1767, 255
  %idxprom27.i1769 = zext i32 %bf.clear11.i1768 to i64
  %arrayidx12.i1770 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1769
  %302 = load i32* %arrayidx12.i1770, align 4, !tbaa !1
  switch i32 %302, label %sw.default.i1772 [
    i32 2, label %replace_reg.exit1774
    i32 6, label %replace_reg.exit1774
  ]

sw.default.i1772:                                 ; preds = %if.end.i1771
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1774:                             ; preds = %if.end.i1771, %if.end.i1771
  %303 = load i32* %top469, align 4
  %arrayidx19.i1773 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i1769
  %304 = load %struct.rtx_def** %arrayidx19.i1773, align 8, !tbaa !10
  %305 = getelementptr inbounds %union.rtunion_def* %arrayidx464, i64 0, i32 0
  %.c2337 = ptrtoint %struct.rtx_def* %304 to i64
  store i64 %.c2337, i64* %305, align 8, !tbaa !10
  %dec520 = add nsw i32 %303, -1
  store i32 %dec520, i32* %top469, align 4, !tbaa !33
  br label %if.end593

if.else521:                                       ; preds = %if.end460
  %tobool522 = icmp eq %struct.rtx_def* %src2_note.0, null
  br i1 %tobool522, label %if.else583, label %if.then523

if.then523:                                       ; preds = %if.else521
  %arrayidx525 = getelementptr inbounds %struct.rtx_def* %src2_note.0, i64 0, i32 1, i64 0
  %rtx526 = bitcast %union.rtunion_def* %arrayidx525 to %struct.rtx_def**
  %306 = load %struct.rtx_def** %rtx526, align 8, !tbaa !10
  %arrayidx528 = getelementptr inbounds %struct.rtx_def* %306, i64 0, i32 1, i64 0
  %rtuint529 = bitcast %union.rtunion_def* %arrayidx528 to i32*
  %307 = load i32* %rtuint529, align 4, !tbaa !4
  %top530 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %308 = load i32* %top530, align 4, !tbaa !33
  %idxprom531 = sext i32 %308 to i64
  %arrayidx533 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom531
  %309 = load i8* %arrayidx533, align 1, !tbaa !1
  %conv534 = zext i8 %309 to i32
  %cmp535 = icmp eq i32 %307, %conv534
  br i1 %cmp535, label %if.then537, label %if.else546

if.then537:                                       ; preds = %if.then523
  %310 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %arrayidx539 = getelementptr inbounds %struct.rtx_def* %310, i64 0, i32 1, i64 0
  %rtuint540 = bitcast %union.rtunion_def* %arrayidx539 to i32*
  %311 = load i32* %rtuint540, align 4, !tbaa !4
  %sh_prom541 = zext i32 %311 to i64
  %shl542 = shl i64 1, %sh_prom541
  %reg_set543 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %312 = load i64* %reg_set543, align 8, !tbaa !34
  %or544 = or i64 %shl542, %312
  store i64 %or544, i64* %reg_set543, align 8, !tbaa !34
  %313 = getelementptr inbounds %struct.rtx_def* %310, i64 0, i32 0
  %bf.load.i1775 = load i32* %313, align 8
  %bf.clear.i1776 = and i32 %bf.load.i1775, 65535
  %cmp.i1777 = icmp eq i32 %bf.clear.i1776, 61
  %314 = and i32 %311, -8
  %315 = icmp eq i32 %314, 8
  %or.cond2629 = and i1 %cmp.i1777, %315
  br i1 %or.cond2629, label %if.end.i1784, label %if.then.i1781

if.then.i1781:                                    ; preds = %if.then537
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i1784:                                     ; preds = %if.then537
  %cmp730.i1783 = icmp sgt i32 %308, -1
  br i1 %cmp730.i1783, label %for.body.i1793, label %if.then.i1806

for.cond.i1788:                                   ; preds = %for.body.i1793
  %indvars.iv.next.i1786 = add nsw i64 %indvars.iv.i1789, -1
  %316 = trunc i64 %indvars.iv.i1789 to i32
  %cmp7.i1787 = icmp sgt i32 %316, 0
  br i1 %cmp7.i1787, label %for.body.i1793, label %if.then.i1806

for.body.i1793:                                   ; preds = %if.end.i1784, %for.cond.i1788
  %indvars.iv.i1789 = phi i64 [ %indvars.iv.next.i1786, %for.cond.i1788 ], [ %idxprom531, %if.end.i1784 ]
  %arrayidx9.i1790 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i1789
  %317 = load i8* %arrayidx9.i1790, align 1, !tbaa !1
  %conv.i1791 = zext i8 %317 to i32
  %cmp13.i1792 = icmp eq i32 %conv.i1791, %311
  br i1 %cmp13.i1792, label %get_hard_regnum.exit1798, label %for.cond.i1788

get_hard_regnum.exit1798:                         ; preds = %for.body.i1793
  %318 = trunc i64 %indvars.iv.i1789 to i32
  %add.i1794 = sub i32 8, %318
  %sub.i1795 = add i32 %add.i1794, %308
  %319 = and i32 %sub.i1795, -8
  %320 = icmp eq i32 %319, 8
  br i1 %320, label %if.end.i1811, label %if.then.i1806

if.then.i1806:                                    ; preds = %for.cond.i1788, %if.end.i1784, %get_hard_regnum.exit1798
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1811:                                     ; preds = %get_hard_regnum.exit1798
  %bf.lshr.i1807 = lshr i32 %bf.load.i1775, 16
  %bf.clear11.i1808 = and i32 %bf.lshr.i1807, 255
  %idxprom27.i1809 = zext i32 %bf.clear11.i1808 to i64
  %arrayidx12.i1810 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1809
  %321 = load i32* %arrayidx12.i1810, align 4, !tbaa !1
  switch i32 %321, label %sw.default.i1812 [
    i32 2, label %replace_reg.exit1816
    i32 6, label %replace_reg.exit1816
  ]

sw.default.i1812:                                 ; preds = %if.end.i1811
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1816:                             ; preds = %if.end.i1811, %if.end.i1811
  %sub.i1813 = add nsw i32 %sub.i1795, -8
  %idxprom17.i1814 = sext i32 %sub.i1813 to i64
  %arrayidx19.i1815 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i1814, i64 %idxprom27.i1809
  %322 = load %struct.rtx_def** %arrayidx19.i1815, align 8, !tbaa !10
  store %struct.rtx_def* %322, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  br label %if.end566

if.else546:                                       ; preds = %if.then523
  %323 = getelementptr inbounds %struct.rtx_def* %306, i64 0, i32 0
  %bf.load.i1817 = load i32* %323, align 8
  %bf.clear.i1818 = and i32 %bf.load.i1817, 65535
  %cmp.i1819 = icmp eq i32 %bf.clear.i1818, 61
  %324 = and i32 %307, -8
  %325 = icmp eq i32 %324, 8
  %or.cond2324 = and i1 %cmp.i1819, %325
  br i1 %or.cond2324, label %if.end.i1826, label %if.then.i1823

if.then.i1823:                                    ; preds = %if.else546
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i1826:                                     ; preds = %if.else546
  %cmp730.i1825 = icmp sgt i32 %308, -1
  br i1 %cmp730.i1825, label %for.body.i1835, label %get_hard_regnum.exit1840

for.cond.i1830:                                   ; preds = %for.body.i1835
  %indvars.iv.next.i1828 = add nsw i64 %indvars.iv.i1831, -1
  %326 = trunc i64 %indvars.iv.i1831 to i32
  %cmp7.i1829 = icmp sgt i32 %326, 0
  br i1 %cmp7.i1829, label %for.cond.i1830.for.body.i1835_crit_edge, label %get_hard_regnum.exit1840

for.cond.i1830.for.body.i1835_crit_edge:          ; preds = %for.cond.i1830
  %arrayidx9.i1832.phi.trans.insert = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.next.i1828
  %.pre2597 = load i8* %arrayidx9.i1832.phi.trans.insert, align 1, !tbaa !1
  br label %for.body.i1835

for.body.i1835:                                   ; preds = %if.end.i1826, %for.cond.i1830.for.body.i1835_crit_edge
  %327 = phi i8 [ %.pre2597, %for.cond.i1830.for.body.i1835_crit_edge ], [ %309, %if.end.i1826 ]
  %indvars.iv.i1831 = phi i64 [ %indvars.iv.next.i1828, %for.cond.i1830.for.body.i1835_crit_edge ], [ %idxprom531, %if.end.i1826 ]
  %conv.i1833 = zext i8 %327 to i32
  %cmp13.i1834 = icmp eq i32 %conv.i1833, %307
  br i1 %cmp13.i1834, label %cond.true.i1838, label %for.cond.i1830

cond.true.i1838:                                  ; preds = %for.body.i1835
  %328 = trunc i64 %indvars.iv.i1831 to i32
  %add.i1836 = add i32 %308, 8
  %sub.i1837 = sub i32 %add.i1836, %328
  br label %get_hard_regnum.exit1840

get_hard_regnum.exit1840:                         ; preds = %for.cond.i1830, %if.end.i1826, %cond.true.i1838
  %cond.i1839 = phi i32 [ %sub.i1837, %cond.true.i1838 ], [ -1, %if.end.i1826 ], [ -1, %for.cond.i1830 ]
  %329 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %arrayidx550 = getelementptr inbounds %struct.rtx_def* %329, i64 0, i32 1, i64 0
  %rtuint551 = bitcast %union.rtunion_def* %arrayidx550 to i32*
  %330 = load i32* %rtuint551, align 4, !tbaa !4
  %sh_prom552 = zext i32 %330 to i64
  %shl553 = shl i64 1, %sh_prom552
  %reg_set554 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %331 = load i64* %reg_set554, align 8, !tbaa !34
  %or555 = or i64 %shl553, %331
  store i64 %or555, i64* %reg_set554, align 8, !tbaa !34
  %332 = and i32 %cond.i1839, -8
  %333 = icmp eq i32 %332, 8
  br i1 %333, label %lor.lhs.false2.i1844, label %if.then.i1848

lor.lhs.false2.i1844:                             ; preds = %get_hard_regnum.exit1840
  %334 = getelementptr inbounds %struct.rtx_def* %329, i64 0, i32 0
  %bf.load.i1841 = load i32* %334, align 8
  %bf.clear.i1842 = and i32 %bf.load.i1841, 65535
  %cmp3.i1843 = icmp eq i32 %bf.clear.i1842, 61
  %335 = and i32 %330, -8
  %336 = icmp eq i32 %335, 8
  %or.cond2631 = and i1 %cmp3.i1843, %336
  br i1 %or.cond2631, label %if.end.i1853, label %if.then.i1848

if.then.i1848:                                    ; preds = %lor.lhs.false2.i1844, %get_hard_regnum.exit1840
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1853:                                     ; preds = %lor.lhs.false2.i1844
  %bf.lshr.i1849 = lshr i32 %bf.load.i1841, 16
  %bf.clear11.i1850 = and i32 %bf.lshr.i1849, 255
  %idxprom27.i1851 = zext i32 %bf.clear11.i1850 to i64
  %arrayidx12.i1852 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1851
  %337 = load i32* %arrayidx12.i1852, align 4, !tbaa !1
  switch i32 %337, label %sw.default.i1854 [
    i32 2, label %replace_reg.exit1858
    i32 6, label %replace_reg.exit1858
  ]

sw.default.i1854:                                 ; preds = %if.end.i1853
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1858:                             ; preds = %if.end.i1853, %if.end.i1853
  %sub.i1855 = add nsw i32 %cond.i1839, -8
  %idxprom17.i1856 = sext i32 %sub.i1855 to i64
  %arrayidx19.i1857 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i1856, i64 %idxprom27.i1851
  %338 = load %struct.rtx_def** %arrayidx19.i1857, align 8, !tbaa !10
  store %struct.rtx_def* %338, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %339 = load i8* %arrayidx533, align 1, !tbaa !1
  %sub562 = sub nsw i32 %308, %sub.i1855
  %idxprom563 = sext i32 %sub562 to i64
  %arrayidx565 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom563
  store i8 %339, i8* %arrayidx565, align 1, !tbaa !1
  %.pre2593 = load i64* %reg_set554, align 8, !tbaa !34
  br label %if.end566

if.end566:                                        ; preds = %replace_reg.exit1858, %replace_reg.exit1816
  %340 = phi i64 [ %.pre2593, %replace_reg.exit1858 ], [ %or544, %replace_reg.exit1816 ]
  %341 = load %struct.rtx_def** %rtx526, align 8, !tbaa !10
  %arrayidx571 = getelementptr inbounds %struct.rtx_def* %341, i64 0, i32 1, i64 0
  %rtuint572 = bitcast %union.rtunion_def* %arrayidx571 to i32*
  %342 = load i32* %rtuint572, align 4, !tbaa !4
  %sh_prom573 = zext i32 %342 to i64
  %shl574 = shl i64 1, %sh_prom573
  %neg575 = xor i64 %shl574, -1
  %reg_set576 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %and577 = and i64 %340, %neg575
  store i64 %and577, i64* %reg_set576, align 8, !tbaa !34
  %343 = getelementptr inbounds %struct.rtx_def* %341, i64 0, i32 0
  %bf.load.i1859 = load i32* %343, align 8
  %bf.clear.i1860 = and i32 %bf.load.i1859, 65535
  %cmp3.i1861 = icmp eq i32 %bf.clear.i1860, 61
  %344 = and i32 %342, -8
  %345 = icmp eq i32 %344, 8
  %or.cond2633 = and i1 %cmp3.i1861, %345
  br i1 %or.cond2633, label %if.end.i1871, label %if.then.i1866

if.then.i1866:                                    ; preds = %if.end566
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1871:                                     ; preds = %if.end566
  %bf.lshr.i1867 = lshr i32 %bf.load.i1859, 16
  %bf.clear11.i1868 = and i32 %bf.lshr.i1867, 255
  %idxprom27.i1869 = zext i32 %bf.clear11.i1868 to i64
  %arrayidx12.i1870 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1869
  %346 = load i32* %arrayidx12.i1870, align 4, !tbaa !1
  switch i32 %346, label %sw.default.i1872 [
    i32 2, label %replace_reg.exit1874
    i32 6, label %replace_reg.exit1874
  ]

sw.default.i1872:                                 ; preds = %if.end.i1871
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1874:                             ; preds = %if.end.i1871, %if.end.i1871
  %347 = load i32* %top530, align 4
  %arrayidx19.i1873 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i1869
  %348 = load %struct.rtx_def** %arrayidx19.i1873, align 8, !tbaa !10
  %349 = getelementptr inbounds %union.rtunion_def* %arrayidx525, i64 0, i32 0
  %.c2339 = ptrtoint %struct.rtx_def* %348 to i64
  store i64 %.c2339, i64* %349, align 8, !tbaa !10
  %dec582 = add nsw i32 %347, -1
  store i32 %dec582, i32* %top530, align 4, !tbaa !33
  br label %if.end593

if.else583:                                       ; preds = %if.else521
  %350 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %arrayidx585 = getelementptr inbounds %struct.rtx_def* %350, i64 0, i32 1, i64 0
  %rtuint586 = bitcast %union.rtunion_def* %arrayidx585 to i32*
  %351 = load i32* %rtuint586, align 4, !tbaa !4
  %sh_prom587 = zext i32 %351 to i64
  %shl588 = shl i64 1, %sh_prom587
  %reg_set589 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %352 = load i64* %reg_set589, align 8, !tbaa !34
  %or590 = or i64 %shl588, %352
  store i64 %or590, i64* %reg_set589, align 8, !tbaa !34
  %353 = getelementptr inbounds %struct.rtx_def* %350, i64 0, i32 0
  %bf.load.i1875 = load i32* %353, align 8
  %bf.clear.i1876 = and i32 %bf.load.i1875, 65535
  %cmp.i1877 = icmp eq i32 %bf.clear.i1876, 61
  %354 = and i32 %351, -8
  %355 = icmp eq i32 %354, 8
  %or.cond2635 = and i1 %cmp.i1877, %355
  br i1 %or.cond2635, label %if.end.i1884, label %if.then.i1881

if.then.i1881:                                    ; preds = %if.else583
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i1884:                                     ; preds = %if.else583
  %top.i1882 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %356 = load i32* %top.i1882, align 4, !tbaa !33
  %cmp730.i1883 = icmp sgt i32 %356, -1
  br i1 %cmp730.i1883, label %for.body.lr.ph.i1885, label %if.then.i1906

for.body.lr.ph.i1885:                             ; preds = %if.end.i1884
  %357 = sext i32 %356 to i64
  br label %for.body.i1893

for.cond.i1888:                                   ; preds = %for.body.i1893
  %indvars.iv.next.i1886 = add nsw i64 %indvars.iv.i1889, -1
  %358 = trunc i64 %indvars.iv.i1889 to i32
  %cmp7.i1887 = icmp sgt i32 %358, 0
  br i1 %cmp7.i1887, label %for.body.i1893, label %if.then.i1906

for.body.i1893:                                   ; preds = %for.cond.i1888, %for.body.lr.ph.i1885
  %indvars.iv.i1889 = phi i64 [ %357, %for.body.lr.ph.i1885 ], [ %indvars.iv.next.i1886, %for.cond.i1888 ]
  %arrayidx9.i1890 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i1889
  %359 = load i8* %arrayidx9.i1890, align 1, !tbaa !1
  %conv.i1891 = zext i8 %359 to i32
  %cmp13.i1892 = icmp eq i32 %conv.i1891, %351
  br i1 %cmp13.i1892, label %get_hard_regnum.exit1898, label %for.cond.i1888

get_hard_regnum.exit1898:                         ; preds = %for.body.i1893
  %360 = trunc i64 %indvars.iv.i1889 to i32
  %add.i1894 = sub i32 8, %360
  %sub.i1895 = add i32 %add.i1894, %356
  %361 = and i32 %sub.i1895, -8
  %362 = icmp eq i32 %361, 8
  br i1 %362, label %if.end.i1911, label %if.then.i1906

if.then.i1906:                                    ; preds = %for.cond.i1888, %if.end.i1884, %get_hard_regnum.exit1898
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1911:                                     ; preds = %get_hard_regnum.exit1898
  %bf.lshr.i1907 = lshr i32 %bf.load.i1875, 16
  %bf.clear11.i1908 = and i32 %bf.lshr.i1907, 255
  %idxprom27.i1909 = zext i32 %bf.clear11.i1908 to i64
  %arrayidx12.i1910 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1909
  %363 = load i32* %arrayidx12.i1910, align 4, !tbaa !1
  switch i32 %363, label %sw.default.i1912 [
    i32 2, label %replace_reg.exit1916
    i32 6, label %replace_reg.exit1916
  ]

sw.default.i1912:                                 ; preds = %if.end.i1911
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1916:                             ; preds = %if.end.i1911, %if.end.i1911
  %sub.i1913 = add nsw i32 %sub.i1895, -8
  %idxprom17.i1914 = sext i32 %sub.i1913 to i64
  %arrayidx19.i1915 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i1914, i64 %idxprom27.i1909
  %364 = load %struct.rtx_def** %arrayidx19.i1915, align 8, !tbaa !10
  store %struct.rtx_def* %364, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  br label %if.end593

if.end593:                                        ; preds = %replace_reg.exit1874, %replace_reg.exit1916, %replace_reg.exit1774
  %bf.load594 = load i32* %110, align 8
  %bf.clear595 = and i32 %bf.load594, 65535
  %idxprom5961195 = zext i32 %bf.clear595 to i64
  %arrayidx597 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom5961195
  %365 = load i8* %arrayidx597, align 1, !tbaa !1
  %cmp599 = icmp eq i8 %365, 99
  br i1 %cmp599, label %land.lhs.true601, label %sw.epilog902

land.lhs.true601:                                 ; preds = %if.end593
  %366 = load %struct.rtx_def** %pat.addr.0.i1477, align 8, !tbaa !10
  %367 = getelementptr inbounds %struct.rtx_def* %366, i64 0, i32 0
  %bf.load602 = load i32* %367, align 8
  %bf.clear603 = and i32 %bf.load602, 65535
  %cmp604 = icmp eq i32 %bf.clear603, 61
  br i1 %cmp604, label %land.lhs.true606, label %sw.epilog902

land.lhs.true606:                                 ; preds = %land.lhs.true601
  %368 = load %struct.rtx_def** %rtx323, align 8, !tbaa !10
  %369 = getelementptr inbounds %struct.rtx_def* %368, i64 0, i32 0
  %bf.load607 = load i32* %369, align 8
  %bf.clear608 = and i32 %bf.load607, 65535
  %cmp609 = icmp eq i32 %bf.clear608, 61
  br i1 %cmp609, label %land.lhs.true611, label %sw.epilog902

land.lhs.true611:                                 ; preds = %land.lhs.true606
  %arrayidx613 = getelementptr inbounds %struct.rtx_def* %366, i64 0, i32 1, i64 0
  %rtuint614 = bitcast %union.rtunion_def* %arrayidx613 to i32*
  %370 = load i32* %rtuint614, align 4, !tbaa !4
  %371 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %arrayidx616 = getelementptr inbounds %struct.rtx_def* %371, i64 0, i32 1, i64 0
  %rtuint617 = bitcast %union.rtunion_def* %arrayidx616 to i32*
  %372 = load i32* %rtuint617, align 4, !tbaa !4
  %cmp618 = icmp eq i32 %370, %372
  br i1 %cmp618, label %sw.epilog902, label %if.then620

if.then620:                                       ; preds = %land.lhs.true611
  %arrayidx625 = getelementptr inbounds %struct.rtx_def* %368, i64 0, i32 1, i64 0
  %rtuint626 = bitcast %union.rtunion_def* %arrayidx625 to i32*
  %373 = load i32* %rtuint626, align 4, !tbaa !4
  %374 = and i32 %373, -8
  %.not.not = icmp eq i32 %374, 8
  %375 = and i32 %370, -8
  %376 = icmp eq i32 %375, 8
  %or.cond2326 = and i1 %.not.not, %376
  br i1 %or.cond2326, label %if.end.i1929, label %if.then.i1924

if.then.i1924:                                    ; preds = %if.then620
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1929:                                     ; preds = %if.then620
  %bf.lshr.i1925 = lshr i32 %bf.load602, 16
  %bf.clear11.i1926 = and i32 %bf.lshr.i1925, 255
  %idxprom27.i1927 = zext i32 %bf.clear11.i1926 to i64
  %arrayidx12.i1928 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1927
  %377 = load i32* %arrayidx12.i1928, align 4, !tbaa !1
  switch i32 %377, label %sw.default.i1930 [
    i32 2, label %lor.lhs.false2.i1938
    i32 6, label %lor.lhs.false2.i1938
  ]

sw.default.i1930:                                 ; preds = %if.end.i1929
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

lor.lhs.false2.i1938:                             ; preds = %if.end.i1929, %if.end.i1929
  %sub.i1931 = add nsw i32 %373, -8
  %idxprom17.i1932 = sext i32 %sub.i1931 to i64
  %arrayidx19.i1933 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i1932, i64 %idxprom27.i1927
  %378 = load %struct.rtx_def** %arrayidx19.i1933, align 8, !tbaa !10
  store %struct.rtx_def* %378, %struct.rtx_def** %pat.addr.0.i1477, align 8, !tbaa !10
  %379 = load %struct.rtx_def** %rtx323, align 8, !tbaa !10
  %380 = getelementptr inbounds %struct.rtx_def* %379, i64 0, i32 0
  %bf.load.i1935 = load i32* %380, align 8
  %bf.clear.i1936 = and i32 %bf.load.i1935, 65535
  %cmp3.i1937 = icmp eq i32 %bf.clear.i1936, 61
  br i1 %cmp3.i1937, label %land.lhs.true.i1941, label %if.then.i1942

land.lhs.true.i1941:                              ; preds = %lor.lhs.false2.i1938
  %arrayidx.i1939 = getelementptr inbounds %struct.rtx_def* %379, i64 0, i32 1, i64 0
  %rtuint.i1940 = bitcast %union.rtunion_def* %arrayidx.i1939 to i32*
  %381 = load i32* %rtuint.i1940, align 4, !tbaa !4
  %382 = and i32 %381, -8
  %383 = icmp eq i32 %382, 8
  br i1 %383, label %if.end.i1947, label %if.then.i1942

if.then.i1942:                                    ; preds = %land.lhs.true.i1941, %lor.lhs.false2.i1938
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i1947:                                     ; preds = %land.lhs.true.i1941
  %bf.lshr.i1943 = lshr i32 %bf.load.i1935, 16
  %bf.clear11.i1944 = and i32 %bf.lshr.i1943, 255
  %idxprom27.i1945 = zext i32 %bf.clear11.i1944 to i64
  %arrayidx12.i1946 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1945
  %384 = load i32* %arrayidx12.i1946, align 4, !tbaa !1
  switch i32 %384, label %sw.default.i1948 [
    i32 2, label %replace_reg.exit1952
    i32 6, label %replace_reg.exit1952
  ]

sw.default.i1948:                                 ; preds = %if.end.i1947
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit1952:                             ; preds = %if.end.i1947, %if.end.i1947
  %sub.i1949 = add nsw i32 %370, -8
  %idxprom17.i1950 = sext i32 %sub.i1949 to i64
  %arrayidx19.i1951 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i1950, i64 %idxprom27.i1945
  %385 = load %struct.rtx_def** %arrayidx19.i1951, align 8, !tbaa !10
  %386 = getelementptr inbounds %union.rtunion_def* %arrayidx322.sink, i64 0, i32 0
  %.c2338 = ptrtoint %struct.rtx_def* %385 to i64
  store i64 %.c2338, i64* %386, align 8, !tbaa !10
  br label %sw.epilog902

sw.bb628:                                         ; preds = %if.end161
  %fld629 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 1
  %arrayidx630 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx630 to i32*
  %387 = load i32* %rtint, align 4, !tbaa !4
  switch i32 %387, label %sw.default [
    i32 1, label %sw.bb631
    i32 2, label %sw.bb631
    i32 10, label %sw.bb674
    i32 9, label %sw.bb692
  ]

sw.bb631:                                         ; preds = %sw.bb628, %sw.bb628
  %rtvec = bitcast [1 x %union.rtunion_def]* %fld629 to %struct.rtvec_def**
  %388 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !10
  %arrayidx634 = getelementptr inbounds %struct.rtvec_def* %388, i64 0, i32 1, i64 0
  br label %for.cond.i1956

for.cond.i1956:                                   ; preds = %sw.bb37.i1985, %sw.bb631
  %pat.addr.0.i1953 = phi %struct.rtx_def** [ %arrayidx634, %sw.bb631 ], [ %rtx40.i1984, %sw.bb37.i1985 ]
  %389 = load %struct.rtx_def** %pat.addr.0.i1953, align 8, !tbaa !10
  %390 = getelementptr inbounds %struct.rtx_def* %389, i64 0, i32 0
  %bf.load.i1954 = load i32* %390, align 8
  %bf.clear.i1955 = and i32 %bf.load.i1954, 65535
  switch i32 %bf.clear.i1955, label %get_true_reg.exit1986 [
    i32 63, label %sw.bb.i1962
    i32 125, label %sw.bb37.i1985
    i32 126, label %sw.bb37.i1985
    i32 123, label %sw.bb37.i1985
  ]

sw.bb.i1962:                                      ; preds = %for.cond.i1956
  %fld.i1957 = getelementptr inbounds %struct.rtx_def* %389, i64 0, i32 1
  %rtx.i1958 = bitcast [1 x %union.rtunion_def]* %fld.i1957 to %struct.rtx_def**
  %391 = load %struct.rtx_def** %rtx.i1958, align 8, !tbaa !10
  %392 = getelementptr inbounds %struct.rtx_def* %391, i64 0, i32 0
  %bf.load1.i1959 = load i32* %392, align 8
  %bf.clear2.i1960 = and i32 %bf.load1.i1959, 65535
  %cmp.i1961 = icmp eq i32 %bf.clear2.i1960, 61
  br i1 %cmp.i1961, label %land.lhs.true.i1965, label %sw.bb37.i1985

land.lhs.true.i1965:                              ; preds = %sw.bb.i1962
  %arrayidx7.i1963 = getelementptr inbounds %struct.rtx_def* %391, i64 0, i32 1, i64 0
  %rtuint.i1964 = bitcast %union.rtunion_def* %arrayidx7.i1963 to i32*
  %393 = load i32* %rtuint.i1964, align 4, !tbaa !4
  %394 = and i32 %393, -8
  %395 = icmp eq i32 %394, 8
  br i1 %395, label %if.then.i1981, label %sw.bb37.i1985

if.then.i1981:                                    ; preds = %land.lhs.true.i1965
  %bf.lshr.i1966 = lshr i32 %bf.load1.i1959, 16
  %bf.clear21.i1967 = and i32 %bf.lshr.i1966, 255
  %arrayidx23.i1968 = getelementptr inbounds %struct.rtx_def* %389, i64 0, i32 1, i64 1
  %rtuint24.i1969 = bitcast %union.rtunion_def* %arrayidx23.i1968 to i32*
  %396 = load i32* %rtuint24.i1969, align 4, !tbaa !4
  %bf.lshr26.i1970 = lshr i32 %bf.load.i1954, 16
  %bf.clear27.i1971 = and i32 %bf.lshr26.i1970, 255
  %call.i1972 = tail call i32 @subreg_regno_offset(i32 %393, i32 %bf.clear21.i1967, i32 %396, i32 %bf.clear27.i1971) #4
  %bf.load28.i1973 = load i32* %392, align 8
  %bf.lshr29.i1974 = lshr i32 %bf.load28.i1973, 16
  %bf.clear30.i1975 = and i32 %bf.lshr29.i1974, 255
  %idxprom52.i1976 = zext i32 %bf.clear30.i1975 to i64
  %397 = load i32* %rtuint.i1964, align 4, !tbaa !4
  %add.i1977 = add i32 %call.i1972, -8
  %sub.i1978 = add i32 %add.i1977, %397
  %idxprom34.i1979 = zext i32 %sub.i1978 to i64
  %arrayidx36.i1980 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i1979, i64 %idxprom52.i1976
  %398 = load %struct.rtx_def** %arrayidx36.i1980, align 8, !tbaa !10
  store %struct.rtx_def* %398, %struct.rtx_def** %pat.addr.0.i1953, align 8, !tbaa !10
  br label %get_true_reg.exit1986

sw.bb37.i1985:                                    ; preds = %land.lhs.true.i1965, %sw.bb.i1962, %for.cond.i1956, %for.cond.i1956, %for.cond.i1956
  %arrayidx39.i1983 = getelementptr inbounds %struct.rtx_def* %389, i64 0, i32 1, i64 0
  %rtx40.i1984 = bitcast %union.rtunion_def* %arrayidx39.i1983 to %struct.rtx_def**
  br label %for.cond.i1956

get_true_reg.exit1986:                            ; preds = %for.cond.i1956, %if.then.i1981
  %399 = phi %struct.rtx_def* [ %398, %if.then.i1981 ], [ %389, %for.cond.i1956 ]
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %399)
  %400 = load %struct.rtx_def** %pat.addr.0.i1953, align 8, !tbaa !10
  %arrayidx637 = getelementptr inbounds %struct.rtx_def* %400, i64 0, i32 1, i64 0
  %rtuint638 = bitcast %union.rtunion_def* %arrayidx637 to i32*
  %401 = load i32* %rtuint638, align 4, !tbaa !4
  %call639 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %401) #4
  %402 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %403 = getelementptr inbounds %struct.rtx_def* %402, i64 0, i32 0
  %bf.load640 = load i32* %403, align 8
  %bf.clear641 = and i32 %bf.load640, 65535
  %cmp642 = icmp eq i32 %bf.clear641, 61
  br i1 %cmp642, label %land.lhs.true644, label %if.end657

land.lhs.true644:                                 ; preds = %get_true_reg.exit1986
  %arrayidx646 = getelementptr inbounds %struct.rtx_def* %402, i64 0, i32 1, i64 0
  %rtuint647 = bitcast %union.rtunion_def* %arrayidx646 to i32*
  %404 = load i32* %rtuint647, align 4, !tbaa !4
  %405 = and i32 %404, -8
  %406 = icmp eq i32 %405, 8
  br i1 %406, label %if.end.i1999, label %if.end657

if.end.i1999:                                     ; preds = %land.lhs.true644
  %bf.lshr.i1995 = lshr i32 %bf.load640, 16
  %bf.clear11.i1996 = and i32 %bf.lshr.i1995, 255
  %idxprom27.i1997 = zext i32 %bf.clear11.i1996 to i64
  %arrayidx12.i1998 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i1997
  %407 = load i32* %arrayidx12.i1998, align 4, !tbaa !1
  switch i32 %407, label %sw.default.i2000 [
    i32 2, label %replace_reg.exit2002
    i32 6, label %replace_reg.exit2002
  ]

sw.default.i2000:                                 ; preds = %if.end.i1999
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit2002:                             ; preds = %if.end.i1999, %if.end.i1999
  %arrayidx19.i2001 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i1997
  %408 = load %struct.rtx_def** %arrayidx19.i2001, align 8, !tbaa !10
  store %struct.rtx_def* %408, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  br label %if.end657

if.end657:                                        ; preds = %replace_reg.exit2002, %land.lhs.true644, %get_true_reg.exit1986
  %tobool658 = icmp eq %struct.rtx_def* %call639, null
  br i1 %tobool658, label %if.end657.if.end673_crit_edge, label %if.then659

if.end657.if.end673_crit_edge:                    ; preds = %if.end657
  %.pre2603 = load %struct.rtx_def** %pat.addr.0.i1953, align 8, !tbaa !10
  br label %if.end673

if.then659:                                       ; preds = %if.end657
  %arrayidx661 = getelementptr inbounds %struct.rtx_def* %call639, i64 0, i32 1, i64 0
  %rtx662 = bitcast %union.rtunion_def* %arrayidx661 to %struct.rtx_def**
  %409 = load %struct.rtx_def** %rtx662, align 8, !tbaa !10
  %410 = getelementptr inbounds %struct.rtx_def* %409, i64 0, i32 0
  %bf.load.i2003 = load i32* %410, align 8
  %bf.clear.i2004 = and i32 %bf.load.i2003, 65535
  %cmp3.i2005 = icmp eq i32 %bf.clear.i2004, 61
  br i1 %cmp3.i2005, label %land.lhs.true.i2009, label %if.then.i2010

land.lhs.true.i2009:                              ; preds = %if.then659
  %arrayidx.i2007 = getelementptr inbounds %struct.rtx_def* %409, i64 0, i32 1, i64 0
  %rtuint.i2008 = bitcast %union.rtunion_def* %arrayidx.i2007 to i32*
  %411 = load i32* %rtuint.i2008, align 4, !tbaa !4
  %412 = and i32 %411, -8
  %413 = icmp eq i32 %412, 8
  br i1 %413, label %if.end.i2015, label %if.then.i2010

if.then.i2010:                                    ; preds = %land.lhs.true.i2009, %if.then659
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i2015:                                     ; preds = %land.lhs.true.i2009
  %bf.lshr.i2011 = lshr i32 %bf.load.i2003, 16
  %bf.clear11.i2012 = and i32 %bf.lshr.i2011, 255
  %idxprom27.i2013 = zext i32 %bf.clear11.i2012 to i64
  %arrayidx12.i2014 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i2013
  %414 = load i32* %arrayidx12.i2014, align 4, !tbaa !1
  switch i32 %414, label %sw.default.i2016 [
    i32 2, label %replace_reg.exit2018
    i32 6, label %replace_reg.exit2018
  ]

sw.default.i2016:                                 ; preds = %if.end.i2015
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit2018:                             ; preds = %if.end.i2015, %if.end.i2015
  %arrayidx19.i2017 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i2013
  %415 = load %struct.rtx_def** %arrayidx19.i2017, align 8, !tbaa !10
  %416 = getelementptr inbounds %union.rtunion_def* %arrayidx661, i64 0, i32 0
  %.c2334 = ptrtoint %struct.rtx_def* %415 to i64
  store i64 %.c2334, i64* %416, align 8, !tbaa !10
  %top663 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %417 = load i32* %top663, align 4, !tbaa !33
  %dec664 = add nsw i32 %417, -1
  store i32 %dec664, i32* %top663, align 4, !tbaa !33
  %418 = load %struct.rtx_def** %pat.addr.0.i1953, align 8, !tbaa !10
  %arrayidx666 = getelementptr inbounds %struct.rtx_def* %418, i64 0, i32 1, i64 0
  %rtuint667 = bitcast %union.rtunion_def* %arrayidx666 to i32*
  %419 = load i32* %rtuint667, align 4, !tbaa !4
  %sh_prom668 = zext i32 %419 to i64
  %shl669 = shl i64 1, %sh_prom668
  %neg670 = xor i64 %shl669, -1
  %reg_set671 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %420 = load i64* %reg_set671, align 8, !tbaa !34
  %and672 = and i64 %420, %neg670
  store i64 %and672, i64* %reg_set671, align 8, !tbaa !34
  br label %if.end673

if.end673:                                        ; preds = %if.end657.if.end673_crit_edge, %replace_reg.exit2018
  %421 = phi %struct.rtx_def* [ %.pre2603, %if.end657.if.end673_crit_edge ], [ %418, %replace_reg.exit2018 ]
  %422 = getelementptr inbounds %struct.rtx_def* %421, i64 0, i32 0
  %bf.load.i2019 = load i32* %422, align 8
  %bf.clear.i2020 = and i32 %bf.load.i2019, 65535
  %cmp3.i2021 = icmp eq i32 %bf.clear.i2020, 61
  br i1 %cmp3.i2021, label %land.lhs.true.i2025, label %if.then.i2026

land.lhs.true.i2025:                              ; preds = %if.end673
  %arrayidx.i2023 = getelementptr inbounds %struct.rtx_def* %421, i64 0, i32 1, i64 0
  %rtuint.i2024 = bitcast %union.rtunion_def* %arrayidx.i2023 to i32*
  %423 = load i32* %rtuint.i2024, align 4, !tbaa !4
  %424 = and i32 %423, -8
  %425 = icmp eq i32 %424, 8
  br i1 %425, label %if.end.i2031, label %if.then.i2026

if.then.i2026:                                    ; preds = %land.lhs.true.i2025, %if.end673
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i2031:                                     ; preds = %land.lhs.true.i2025
  %bf.lshr.i2027 = lshr i32 %bf.load.i2019, 16
  %bf.clear11.i2028 = and i32 %bf.lshr.i2027, 255
  %idxprom27.i2029 = zext i32 %bf.clear11.i2028 to i64
  %arrayidx12.i2030 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i2029
  %426 = load i32* %arrayidx12.i2030, align 4, !tbaa !1
  switch i32 %426, label %sw.default.i2032 [
    i32 2, label %replace_reg.exit2034
    i32 6, label %replace_reg.exit2034
  ]

sw.default.i2032:                                 ; preds = %if.end.i2031
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit2034:                             ; preds = %if.end.i2031, %if.end.i2031
  %arrayidx19.i2033 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i2029
  %427 = load %struct.rtx_def** %arrayidx19.i2033, align 8, !tbaa !10
  store %struct.rtx_def* %427, %struct.rtx_def** %pat.addr.0.i1953, align 8, !tbaa !10
  br label %sw.epilog902

sw.bb674:                                         ; preds = %sw.bb628
  %rtvec677 = bitcast [1 x %union.rtunion_def]* %fld629 to %struct.rtvec_def**
  %428 = load %struct.rtvec_def** %rtvec677, align 8, !tbaa !10
  %arrayidx679 = getelementptr inbounds %struct.rtvec_def* %428, i64 0, i32 1, i64 0
  %429 = load %struct.rtx_def** %arrayidx679, align 8, !tbaa !10
  %430 = getelementptr inbounds %struct.rtx_def* %429, i64 0, i32 0
  %bf.load680 = load i32* %430, align 8
  %bf.clear681 = and i32 %bf.load680, 65535
  %cmp682 = icmp eq i32 %bf.clear681, 42
  br i1 %cmp682, label %lor.lhs.false684, label %if.then690

lor.lhs.false684:                                 ; preds = %sw.bb674
  %arrayidx686 = getelementptr inbounds %struct.rtx_def* %429, i64 0, i32 1, i64 1
  %rtint687 = bitcast %union.rtunion_def* %arrayidx686 to i32*
  %431 = load i32* %rtint687, align 4, !tbaa !4
  %cmp688 = icmp eq i32 %431, 9
  br i1 %cmp688, label %sw.bb692, label %if.then690

if.then690:                                       ; preds = %lor.lhs.false684, %sw.bb674
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1739, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_stack_regs_pat, i64 0, i64 0)) #6
  unreachable

sw.bb692:                                         ; preds = %lor.lhs.false684, %sw.bb628
  %pat_src.0 = phi %struct.rtx_def* [ %101, %sw.bb628 ], [ %429, %lor.lhs.false684 ]
  %arrayidx694 = getelementptr inbounds %struct.rtx_def* %pat_src.0, i64 0, i32 1, i64 0
  %rtvec695 = bitcast %union.rtunion_def* %arrayidx694 to %struct.rtvec_def**
  %432 = load %struct.rtvec_def** %rtvec695, align 8, !tbaa !10
  %arrayidx697 = getelementptr inbounds %struct.rtvec_def* %432, i64 0, i32 1, i64 0
  %433 = load %struct.rtx_def** %arrayidx697, align 8, !tbaa !10
  %434 = getelementptr inbounds %struct.rtx_def* %433, i64 0, i32 0
  %bf.load698 = load i32* %434, align 8
  %bf.clear699 = and i32 %bf.load698, 65535
  %cmp700 = icmp eq i32 %bf.clear699, 74
  br i1 %cmp700, label %if.end703, label %if.then702

if.then702:                                       ; preds = %sw.bb692
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1750, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_stack_regs_pat, i64 0, i64 0)) #6
  unreachable

if.end703:                                        ; preds = %sw.bb692
  tail call fastcc void @compare_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %433)
  br label %sw.epilog902

sw.default:                                       ; preds = %sw.bb628
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1756, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_stack_regs_pat, i64 0, i64 0)) #6
  unreachable

sw.bb704:                                         ; preds = %if.end161
  %arrayidx706 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 1, i64 1
  br label %for.cond.i2038

for.cond.i2038:                                   ; preds = %sw.bb37.i2067, %sw.bb704
  %arrayidx706.sink = phi %union.rtunion_def* [ %arrayidx706, %sw.bb704 ], [ %arrayidx39.i2065, %sw.bb37.i2067 ]
  %rtx707 = bitcast %union.rtunion_def* %arrayidx706.sink to %struct.rtx_def**
  %435 = load %struct.rtx_def** %rtx707, align 8, !tbaa !10
  %436 = getelementptr inbounds %struct.rtx_def* %435, i64 0, i32 0
  %bf.load.i2036 = load i32* %436, align 8
  %bf.clear.i2037 = and i32 %bf.load.i2036, 65535
  switch i32 %bf.clear.i2037, label %get_true_reg.exit2068 [
    i32 63, label %sw.bb.i2044
    i32 125, label %sw.bb37.i2067
    i32 126, label %sw.bb37.i2067
    i32 123, label %sw.bb37.i2067
  ]

sw.bb.i2044:                                      ; preds = %for.cond.i2038
  %fld.i2039 = getelementptr inbounds %struct.rtx_def* %435, i64 0, i32 1
  %rtx.i2040 = bitcast [1 x %union.rtunion_def]* %fld.i2039 to %struct.rtx_def**
  %437 = load %struct.rtx_def** %rtx.i2040, align 8, !tbaa !10
  %438 = getelementptr inbounds %struct.rtx_def* %437, i64 0, i32 0
  %bf.load1.i2041 = load i32* %438, align 8
  %bf.clear2.i2042 = and i32 %bf.load1.i2041, 65535
  %cmp.i2043 = icmp eq i32 %bf.clear2.i2042, 61
  br i1 %cmp.i2043, label %land.lhs.true.i2047, label %sw.bb37.i2067

land.lhs.true.i2047:                              ; preds = %sw.bb.i2044
  %arrayidx7.i2045 = getelementptr inbounds %struct.rtx_def* %437, i64 0, i32 1, i64 0
  %rtuint.i2046 = bitcast %union.rtunion_def* %arrayidx7.i2045 to i32*
  %439 = load i32* %rtuint.i2046, align 4, !tbaa !4
  %440 = and i32 %439, -8
  %441 = icmp eq i32 %440, 8
  br i1 %441, label %if.then.i2063, label %sw.bb37.i2067

if.then.i2063:                                    ; preds = %land.lhs.true.i2047
  %bf.lshr.i2048 = lshr i32 %bf.load1.i2041, 16
  %bf.clear21.i2049 = and i32 %bf.lshr.i2048, 255
  %arrayidx23.i2050 = getelementptr inbounds %struct.rtx_def* %435, i64 0, i32 1, i64 1
  %rtuint24.i2051 = bitcast %union.rtunion_def* %arrayidx23.i2050 to i32*
  %442 = load i32* %rtuint24.i2051, align 4, !tbaa !4
  %bf.lshr26.i2052 = lshr i32 %bf.load.i2036, 16
  %bf.clear27.i2053 = and i32 %bf.lshr26.i2052, 255
  %call.i2054 = tail call i32 @subreg_regno_offset(i32 %439, i32 %bf.clear21.i2049, i32 %442, i32 %bf.clear27.i2053) #4
  %bf.load28.i2055 = load i32* %438, align 8
  %bf.lshr29.i2056 = lshr i32 %bf.load28.i2055, 16
  %bf.clear30.i2057 = and i32 %bf.lshr29.i2056, 255
  %idxprom52.i2058 = zext i32 %bf.clear30.i2057 to i64
  %443 = load i32* %rtuint.i2046, align 4, !tbaa !4
  %add.i2059 = add i32 %call.i2054, -8
  %sub.i2060 = add i32 %add.i2059, %443
  %idxprom34.i2061 = zext i32 %sub.i2060 to i64
  %arrayidx36.i2062 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i2061, i64 %idxprom52.i2058
  %444 = load %struct.rtx_def** %arrayidx36.i2062, align 8, !tbaa !10
  %445 = getelementptr inbounds %union.rtunion_def* %arrayidx706.sink, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %444 to i64
  store i64 %.c, i64* %445, align 8, !tbaa !10
  br label %get_true_reg.exit2068

sw.bb37.i2067:                                    ; preds = %land.lhs.true.i2047, %sw.bb.i2044, %for.cond.i2038, %for.cond.i2038, %for.cond.i2038
  %arrayidx39.i2065 = getelementptr inbounds %struct.rtx_def* %435, i64 0, i32 1, i64 0
  br label %for.cond.i2038

get_true_reg.exit2068:                            ; preds = %for.cond.i2038, %if.then.i2063
  %446 = phi %struct.rtx_def* [ %444, %if.then.i2063 ], [ %435, %for.cond.i2038 ]
  %arrayidx710 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 1, i64 2
  br label %for.cond.i2072

for.cond.i2072:                                   ; preds = %sw.bb37.i2101, %get_true_reg.exit2068
  %arrayidx710.sink = phi %union.rtunion_def* [ %arrayidx710, %get_true_reg.exit2068 ], [ %arrayidx39.i2099, %sw.bb37.i2101 ]
  %rtx711 = bitcast %union.rtunion_def* %arrayidx710.sink to %struct.rtx_def**
  %447 = load %struct.rtx_def** %rtx711, align 8, !tbaa !10
  %448 = getelementptr inbounds %struct.rtx_def* %447, i64 0, i32 0
  %bf.load.i2070 = load i32* %448, align 8
  %bf.clear.i2071 = and i32 %bf.load.i2070, 65535
  switch i32 %bf.clear.i2071, label %get_true_reg.exit2102 [
    i32 63, label %sw.bb.i2078
    i32 125, label %sw.bb37.i2101
    i32 126, label %sw.bb37.i2101
    i32 123, label %sw.bb37.i2101
  ]

sw.bb.i2078:                                      ; preds = %for.cond.i2072
  %fld.i2073 = getelementptr inbounds %struct.rtx_def* %447, i64 0, i32 1
  %rtx.i2074 = bitcast [1 x %union.rtunion_def]* %fld.i2073 to %struct.rtx_def**
  %449 = load %struct.rtx_def** %rtx.i2074, align 8, !tbaa !10
  %450 = getelementptr inbounds %struct.rtx_def* %449, i64 0, i32 0
  %bf.load1.i2075 = load i32* %450, align 8
  %bf.clear2.i2076 = and i32 %bf.load1.i2075, 65535
  %cmp.i2077 = icmp eq i32 %bf.clear2.i2076, 61
  br i1 %cmp.i2077, label %land.lhs.true.i2081, label %sw.bb37.i2101

land.lhs.true.i2081:                              ; preds = %sw.bb.i2078
  %arrayidx7.i2079 = getelementptr inbounds %struct.rtx_def* %449, i64 0, i32 1, i64 0
  %rtuint.i2080 = bitcast %union.rtunion_def* %arrayidx7.i2079 to i32*
  %451 = load i32* %rtuint.i2080, align 4, !tbaa !4
  %452 = and i32 %451, -8
  %453 = icmp eq i32 %452, 8
  br i1 %453, label %if.then.i2097, label %sw.bb37.i2101

if.then.i2097:                                    ; preds = %land.lhs.true.i2081
  %bf.lshr.i2082 = lshr i32 %bf.load1.i2075, 16
  %bf.clear21.i2083 = and i32 %bf.lshr.i2082, 255
  %arrayidx23.i2084 = getelementptr inbounds %struct.rtx_def* %447, i64 0, i32 1, i64 1
  %rtuint24.i2085 = bitcast %union.rtunion_def* %arrayidx23.i2084 to i32*
  %454 = load i32* %rtuint24.i2085, align 4, !tbaa !4
  %bf.lshr26.i2086 = lshr i32 %bf.load.i2070, 16
  %bf.clear27.i2087 = and i32 %bf.lshr26.i2086, 255
  %call.i2088 = tail call i32 @subreg_regno_offset(i32 %451, i32 %bf.clear21.i2083, i32 %454, i32 %bf.clear27.i2087) #4
  %bf.load28.i2089 = load i32* %450, align 8
  %bf.lshr29.i2090 = lshr i32 %bf.load28.i2089, 16
  %bf.clear30.i2091 = and i32 %bf.lshr29.i2090, 255
  %idxprom52.i2092 = zext i32 %bf.clear30.i2091 to i64
  %455 = load i32* %rtuint.i2080, align 4, !tbaa !4
  %add.i2093 = add i32 %call.i2088, -8
  %sub.i2094 = add i32 %add.i2093, %455
  %idxprom34.i2095 = zext i32 %sub.i2094 to i64
  %arrayidx36.i2096 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i2095, i64 %idxprom52.i2092
  %456 = load %struct.rtx_def** %arrayidx36.i2096, align 8, !tbaa !10
  %457 = getelementptr inbounds %union.rtunion_def* %arrayidx710.sink, i64 0, i32 0
  %.c2327 = ptrtoint %struct.rtx_def* %456 to i64
  store i64 %.c2327, i64* %457, align 8, !tbaa !10
  %.pre2617 = load %struct.rtx_def** %rtx707, align 8, !tbaa !10
  br label %get_true_reg.exit2102

sw.bb37.i2101:                                    ; preds = %land.lhs.true.i2081, %sw.bb.i2078, %for.cond.i2072, %for.cond.i2072, %for.cond.i2072
  %arrayidx39.i2099 = getelementptr inbounds %struct.rtx_def* %447, i64 0, i32 1, i64 0
  br label %for.cond.i2072

get_true_reg.exit2102:                            ; preds = %for.cond.i2072, %if.then.i2097
  %458 = phi %struct.rtx_def* [ %.pre2617, %if.then.i2097 ], [ %446, %for.cond.i2072 ]
  %arrayidx714 = getelementptr inbounds %struct.rtx_def* %458, i64 0, i32 1, i64 0
  %rtuint715 = bitcast %union.rtunion_def* %arrayidx714 to i32*
  %459 = load i32* %rtuint715, align 4, !tbaa !4
  %call716 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %459) #4
  %460 = load %struct.rtx_def** %rtx711, align 8, !tbaa !10
  %arrayidx718 = getelementptr inbounds %struct.rtx_def* %460, i64 0, i32 1, i64 0
  %rtuint719 = bitcast %union.rtunion_def* %arrayidx718 to i32*
  %461 = load i32* %rtuint719, align 4, !tbaa !4
  %call720 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %461) #4
  %462 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %463 = getelementptr inbounds %struct.rtx_def* %462, i64 0, i32 0
  %bf.load.i2103 = load i32* %463, align 8
  %bf.clear.i2104 = and i32 %bf.load.i2103, 65535
  %cmp.i2105 = icmp eq i32 %bf.clear.i2104, 61
  br i1 %cmp.i2105, label %land.lhs.true.i2108, label %if.then.i2109

land.lhs.true.i2108:                              ; preds = %get_true_reg.exit2102
  %arrayidx.i2106 = getelementptr inbounds %struct.rtx_def* %462, i64 0, i32 1, i64 0
  %rtuint.i2107 = bitcast %union.rtunion_def* %arrayidx.i2106 to i32*
  %464 = load i32* %rtuint.i2107, align 4, !tbaa !4
  %465 = and i32 %464, -8
  %466 = icmp eq i32 %465, 8
  br i1 %466, label %if.end.i2112, label %if.then.i2109

if.then.i2109:                                    ; preds = %land.lhs.true.i2108, %get_true_reg.exit2102
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i2112:                                     ; preds = %land.lhs.true.i2108
  %top.i2110 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %467 = load i32* %top.i2110, align 4, !tbaa !33
  %cmp730.i2111 = icmp sgt i32 %467, -1
  br i1 %cmp730.i2111, label %for.body.lr.ph.i2113, label %if.end797

for.body.lr.ph.i2113:                             ; preds = %if.end.i2112
  %468 = sext i32 %467 to i64
  br label %for.body.i2121

for.cond.i2116:                                   ; preds = %for.body.i2121
  %indvars.iv.next.i2114 = add nsw i64 %indvars.iv.i2117, -1
  %469 = trunc i64 %indvars.iv.i2117 to i32
  %cmp7.i2115 = icmp sgt i32 %469, 0
  br i1 %cmp7.i2115, label %for.body.i2121, label %if.end797

for.body.i2121:                                   ; preds = %for.cond.i2116, %for.body.lr.ph.i2113
  %indvars.iv.i2117 = phi i64 [ %468, %for.body.lr.ph.i2113 ], [ %indvars.iv.next.i2114, %for.cond.i2116 ]
  %arrayidx9.i2118 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i2117
  %470 = load i8* %arrayidx9.i2118, align 1, !tbaa !1
  %conv.i2119 = zext i8 %470 to i32
  %cmp13.i2120 = icmp eq i32 %conv.i2119, %464
  br i1 %cmp13.i2120, label %get_hard_regnum.exit2126, label %for.cond.i2116

get_hard_regnum.exit2126:                         ; preds = %for.body.i2121
  %471 = trunc i64 %indvars.iv.i2117 to i32
  %add.i2122 = add i32 %467, 8
  %sub.i2123 = sub i32 %add.i2122, %471
  %cmp722 = icmp sgt i32 %sub.i2123, 7
  br i1 %cmp722, label %land.lhs.true724, label %if.end797

land.lhs.true724:                                 ; preds = %get_hard_regnum.exit2126
  %arrayidx731 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %468
  %472 = load i8* %arrayidx731, align 1, !tbaa !1
  %conv732 = zext i8 %472 to i32
  %cmp733 = icmp eq i32 %464, %conv732
  br i1 %cmp733, label %if.end797, label %if.then735

if.then735:                                       ; preds = %land.lhs.true724
  %473 = load %struct.rtx_def** %rtx707, align 8, !tbaa !10
  %arrayidx737 = getelementptr inbounds %struct.rtx_def* %473, i64 0, i32 1, i64 0
  %rtuint738 = bitcast %union.rtunion_def* %arrayidx737 to i32*
  %474 = load i32* %rtuint738, align 4, !tbaa !4
  %cmp744 = icmp eq i32 %474, %conv732
  %tobool747 = icmp ne %struct.rtx_def* %call716, null
  %or.cond904 = and i1 %cmp744, %tobool747
  br i1 %or.cond904, label %if.then761, label %lor.lhs.false748

lor.lhs.false748:                                 ; preds = %if.then735
  %475 = load %struct.rtx_def** %rtx711, align 8, !tbaa !10
  %arrayidx750 = getelementptr inbounds %struct.rtx_def* %475, i64 0, i32 1, i64 0
  %rtuint751 = bitcast %union.rtunion_def* %arrayidx750 to i32*
  %476 = load i32* %rtuint751, align 4, !tbaa !4
  %cmp757 = icmp eq i32 %476, %conv732
  %tobool760 = icmp ne %struct.rtx_def* %call720, null
  %or.cond905 = and i1 %cmp757, %tobool760
  br i1 %or.cond905, label %if.then761, label %if.else795

if.then761:                                       ; preds = %lor.lhs.false748, %if.then735
  %477 = getelementptr inbounds %struct.rtx_def* %473, i64 0, i32 0
  %bf.load.i2127 = load i32* %477, align 8
  %bf.clear.i2128 = and i32 %bf.load.i2127, 65535
  %cmp.i2129 = icmp eq i32 %bf.clear.i2128, 61
  %478 = and i32 %474, -8
  %479 = icmp eq i32 %478, 8
  %or.cond2637 = and i1 %cmp.i2129, %479
  br i1 %or.cond2637, label %for.body.i2145, label %if.then.i2133

if.then.i2133:                                    ; preds = %if.then761
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

for.cond.i2140:                                   ; preds = %for.body.i2145
  %indvars.iv.next.i2138 = add nsw i64 %indvars.iv.i2141, -1
  %480 = trunc i64 %indvars.iv.i2141 to i32
  %cmp7.i2139 = icmp sgt i32 %480, 0
  br i1 %cmp7.i2139, label %for.cond.i2140.for.body.i2145_crit_edge, label %get_hard_regnum.exit2150

for.cond.i2140.for.body.i2145_crit_edge:          ; preds = %for.cond.i2140
  %arrayidx9.i2142.phi.trans.insert = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.next.i2138
  %.pre2604 = load i8* %arrayidx9.i2142.phi.trans.insert, align 1, !tbaa !1
  br label %for.body.i2145

for.body.i2145:                                   ; preds = %if.then761, %for.cond.i2140.for.body.i2145_crit_edge
  %481 = phi i8 [ %.pre2604, %for.cond.i2140.for.body.i2145_crit_edge ], [ %472, %if.then761 ]
  %indvars.iv.i2141 = phi i64 [ %indvars.iv.next.i2138, %for.cond.i2140.for.body.i2145_crit_edge ], [ %468, %if.then761 ]
  %conv.i2143 = zext i8 %481 to i32
  %cmp13.i2144 = icmp eq i32 %conv.i2143, %474
  br i1 %cmp13.i2144, label %cond.true.i2148, label %for.cond.i2140

cond.true.i2148:                                  ; preds = %for.body.i2145
  %482 = trunc i64 %indvars.iv.i2141 to i32
  %phitmp2332 = sub i32 %467, %482
  br label %get_hard_regnum.exit2150

get_hard_regnum.exit2150:                         ; preds = %for.cond.i2140, %cond.true.i2148
  %cond.i2149 = phi i32 [ %phitmp2332, %cond.true.i2148 ], [ -9, %for.cond.i2140 ]
  %483 = load %struct.rtx_def** %rtx711, align 8, !tbaa !10
  %484 = getelementptr inbounds %struct.rtx_def* %483, i64 0, i32 0
  %bf.load.i2151 = load i32* %484, align 8
  %bf.clear.i2152 = and i32 %bf.load.i2151, 65535
  %cmp.i2153 = icmp eq i32 %bf.clear.i2152, 61
  br i1 %cmp.i2153, label %land.lhs.true.i2156, label %if.then.i2157

land.lhs.true.i2156:                              ; preds = %get_hard_regnum.exit2150
  %arrayidx.i2154 = getelementptr inbounds %struct.rtx_def* %483, i64 0, i32 1, i64 0
  %rtuint.i2155 = bitcast %union.rtunion_def* %arrayidx.i2154 to i32*
  %485 = load i32* %rtuint.i2155, align 4, !tbaa !4
  %486 = and i32 %485, -8
  %487 = icmp eq i32 %486, 8
  br i1 %487, label %for.body.i2169, label %if.then.i2157

if.then.i2157:                                    ; preds = %land.lhs.true.i2156, %get_hard_regnum.exit2150
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

for.cond.i2164:                                   ; preds = %for.body.i2169
  %indvars.iv.next.i2162 = add nsw i64 %indvars.iv.i2165, -1
  %488 = trunc i64 %indvars.iv.i2165 to i32
  %cmp7.i2163 = icmp sgt i32 %488, 0
  br i1 %cmp7.i2163, label %for.cond.i2164.for.body.i2169_crit_edge, label %get_hard_regnum.exit2174

for.cond.i2164.for.body.i2169_crit_edge:          ; preds = %for.cond.i2164
  %arrayidx9.i2166.phi.trans.insert = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.next.i2162
  %.pre2605 = load i8* %arrayidx9.i2166.phi.trans.insert, align 1, !tbaa !1
  br label %for.body.i2169

for.body.i2169:                                   ; preds = %land.lhs.true.i2156, %for.cond.i2164.for.body.i2169_crit_edge
  %489 = phi i8 [ %.pre2605, %for.cond.i2164.for.body.i2169_crit_edge ], [ %472, %land.lhs.true.i2156 ]
  %indvars.iv.i2165 = phi i64 [ %indvars.iv.next.i2162, %for.cond.i2164.for.body.i2169_crit_edge ], [ %468, %land.lhs.true.i2156 ]
  %conv.i2167 = zext i8 %489 to i32
  %cmp13.i2168 = icmp eq i32 %conv.i2167, %485
  br i1 %cmp13.i2168, label %cond.true.i2172, label %for.cond.i2164

cond.true.i2172:                                  ; preds = %for.body.i2169
  %490 = trunc i64 %indvars.iv.i2165 to i32
  %phitmp2333 = sub i32 %467, %490
  br label %get_hard_regnum.exit2174

get_hard_regnum.exit2174:                         ; preds = %for.cond.i2164, %cond.true.i2172
  %cond.i2173 = phi i32 [ %phitmp2333, %cond.true.i2172 ], [ -9, %for.cond.i2164 ]
  %conv771 = trunc i32 %485 to i8
  %sub773 = sub nsw i32 %467, %cond.i2149
  %idxprom774 = sext i32 %sub773 to i64
  %arrayidx776 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom774
  store i8 %conv771, i8* %arrayidx776, align 1, !tbaa !1
  %491 = load %struct.rtx_def** %rtx707, align 8, !tbaa !10
  %arrayidx778 = getelementptr inbounds %struct.rtx_def* %491, i64 0, i32 1, i64 0
  %rtuint779 = bitcast %union.rtunion_def* %arrayidx778 to i32*
  %492 = load i32* %rtuint779, align 4, !tbaa !4
  %conv780 = trunc i32 %492 to i8
  %493 = load i32* %top.i2110, align 4, !tbaa !33
  %sub782 = sub nsw i32 %493, %cond.i2173
  %idxprom783 = sext i32 %sub782 to i64
  %arrayidx785 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom783
  store i8 %conv780, i8* %arrayidx785, align 1, !tbaa !1
  %arrayidx787 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 1, i64 0
  %rtx788 = bitcast %union.rtunion_def* %arrayidx787 to %struct.rtx_def**
  %494 = load %struct.rtx_def** %rtx788, align 8, !tbaa !10
  %call789 = tail call i32 @reversed_comparison_code(%struct.rtx_def* %494, %struct.rtx_def* %insn) #4
  %495 = load %struct.rtx_def** %rtx788, align 8, !tbaa !10
  %496 = getelementptr inbounds %struct.rtx_def* %495, i64 0, i32 0
  %bf.load793 = load i32* %496, align 8
  %bf.value = and i32 %call789, 65535
  %bf.clear794 = and i32 %bf.load793, -65536
  %bf.set = or i32 %bf.clear794, %bf.value
  store i32 %bf.set, i32* %496, align 8
  br label %if.end797

if.else795:                                       ; preds = %lor.lhs.false748
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %462)
  br label %if.end797

if.end797:                                        ; preds = %for.cond.i2116, %if.end.i2112, %land.lhs.true724, %get_hard_regnum.exit2174, %if.else795, %get_hard_regnum.exit2126
  %arrayidx800 = getelementptr inbounds [3 x %struct.rtx_def*]* %src_note, i64 0, i64 0
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx800, align 16, !tbaa !10
  %arrayidx801 = getelementptr inbounds [3 x %struct.rtx_def*]* %src_note, i64 0, i64 1
  store %struct.rtx_def* %call716, %struct.rtx_def** %arrayidx801, align 8, !tbaa !10
  %arrayidx802 = getelementptr inbounds [3 x %struct.rtx_def*]* %src_note, i64 0, i64 2
  store %struct.rtx_def* %call720, %struct.rtx_def** %arrayidx802, align 16, !tbaa !10
  %497 = load %struct.rtx_def** %rtx707, align 8, !tbaa !10
  %498 = getelementptr inbounds %struct.rtx_def* %497, i64 0, i32 0
  %bf.load803 = load i32* %498, align 8
  %bf.clear804 = and i32 %bf.load803, 65535
  %cmp805 = icmp eq i32 %bf.clear804, 61
  br i1 %cmp805, label %land.lhs.true807, label %if.end821

land.lhs.true807:                                 ; preds = %if.end797
  %arrayidx809 = getelementptr inbounds %struct.rtx_def* %497, i64 0, i32 1, i64 0
  %rtuint810 = bitcast %union.rtunion_def* %arrayidx809 to i32*
  %499 = load i32* %rtuint810, align 4, !tbaa !4
  %500 = and i32 %499, -8
  %501 = icmp eq i32 %500, 8
  br i1 %501, label %if.end.i2184, label %if.end821

if.end.i2184:                                     ; preds = %land.lhs.true807
  %502 = load i32* %top.i2110, align 4, !tbaa !33
  %cmp730.i2183 = icmp sgt i32 %502, -1
  br i1 %cmp730.i2183, label %for.body.lr.ph.i2185, label %if.then.i2206

for.body.lr.ph.i2185:                             ; preds = %if.end.i2184
  %503 = sext i32 %502 to i64
  br label %for.body.i2193

for.cond.i2188:                                   ; preds = %for.body.i2193
  %indvars.iv.next.i2186 = add nsw i64 %indvars.iv.i2189, -1
  %504 = trunc i64 %indvars.iv.i2189 to i32
  %cmp7.i2187 = icmp sgt i32 %504, 0
  br i1 %cmp7.i2187, label %for.body.i2193, label %if.then.i2206

for.body.i2193:                                   ; preds = %for.cond.i2188, %for.body.lr.ph.i2185
  %indvars.iv.i2189 = phi i64 [ %503, %for.body.lr.ph.i2185 ], [ %indvars.iv.next.i2186, %for.cond.i2188 ]
  %arrayidx9.i2190 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i2189
  %505 = load i8* %arrayidx9.i2190, align 1, !tbaa !1
  %conv.i2191 = zext i8 %505 to i32
  %cmp13.i2192 = icmp eq i32 %conv.i2191, %499
  br i1 %cmp13.i2192, label %get_hard_regnum.exit2198, label %for.cond.i2188

get_hard_regnum.exit2198:                         ; preds = %for.body.i2193
  %506 = trunc i64 %indvars.iv.i2189 to i32
  %add.i2194 = sub i32 8, %506
  %sub.i2195 = add i32 %add.i2194, %502
  %507 = and i32 %sub.i2195, -8
  %508 = icmp eq i32 %507, 8
  br i1 %508, label %if.end.i2211, label %if.then.i2206

if.then.i2206:                                    ; preds = %for.cond.i2188, %if.end.i2184, %get_hard_regnum.exit2198
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i2211:                                     ; preds = %get_hard_regnum.exit2198
  %bf.lshr.i2207 = lshr i32 %bf.load803, 16
  %bf.clear11.i2208 = and i32 %bf.lshr.i2207, 255
  %idxprom27.i2209 = zext i32 %bf.clear11.i2208 to i64
  %arrayidx12.i2210 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i2209
  %509 = load i32* %arrayidx12.i2210, align 4, !tbaa !1
  switch i32 %509, label %sw.default.i2212 [
    i32 2, label %replace_reg.exit2216
    i32 6, label %replace_reg.exit2216
  ]

sw.default.i2212:                                 ; preds = %if.end.i2211
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit2216:                             ; preds = %if.end.i2211, %if.end.i2211
  %sub.i2213 = add nsw i32 %sub.i2195, -8
  %idxprom17.i2214 = sext i32 %sub.i2213 to i64
  %arrayidx19.i2215 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i2214, i64 %idxprom27.i2209
  %510 = load %struct.rtx_def** %arrayidx19.i2215, align 8, !tbaa !10
  %511 = getelementptr inbounds %union.rtunion_def* %arrayidx706.sink, i64 0, i32 0
  %.c2331 = ptrtoint %struct.rtx_def* %510 to i64
  store i64 %.c2331, i64* %511, align 8, !tbaa !10
  br label %if.end821

if.end821:                                        ; preds = %replace_reg.exit2216, %land.lhs.true807, %if.end797
  %512 = load %struct.rtx_def** %rtx711, align 8, !tbaa !10
  %513 = getelementptr inbounds %struct.rtx_def* %512, i64 0, i32 0
  %bf.load822 = load i32* %513, align 8
  %bf.clear823 = and i32 %bf.load822, 65535
  %cmp824 = icmp eq i32 %bf.clear823, 61
  br i1 %cmp824, label %land.lhs.true826, label %for.cond841.preheader

land.lhs.true826:                                 ; preds = %if.end821
  %arrayidx828 = getelementptr inbounds %struct.rtx_def* %512, i64 0, i32 1, i64 0
  %rtuint829 = bitcast %union.rtunion_def* %arrayidx828 to i32*
  %514 = load i32* %rtuint829, align 4, !tbaa !4
  %515 = and i32 %514, -8
  %516 = icmp eq i32 %515, 8
  br i1 %516, label %if.end.i2226, label %for.cond841.preheader

if.end.i2226:                                     ; preds = %land.lhs.true826
  %517 = load i32* %top.i2110, align 4, !tbaa !33
  %cmp730.i2225 = icmp sgt i32 %517, -1
  br i1 %cmp730.i2225, label %for.body.lr.ph.i2227, label %if.then.i2248

for.body.lr.ph.i2227:                             ; preds = %if.end.i2226
  %518 = sext i32 %517 to i64
  br label %for.body.i2235

for.cond.i2230:                                   ; preds = %for.body.i2235
  %indvars.iv.next.i2228 = add nsw i64 %indvars.iv.i2231, -1
  %519 = trunc i64 %indvars.iv.i2231 to i32
  %cmp7.i2229 = icmp sgt i32 %519, 0
  br i1 %cmp7.i2229, label %for.body.i2235, label %if.then.i2248

for.body.i2235:                                   ; preds = %for.cond.i2230, %for.body.lr.ph.i2227
  %indvars.iv.i2231 = phi i64 [ %518, %for.body.lr.ph.i2227 ], [ %indvars.iv.next.i2228, %for.cond.i2230 ]
  %arrayidx9.i2232 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i2231
  %520 = load i8* %arrayidx9.i2232, align 1, !tbaa !1
  %conv.i2233 = zext i8 %520 to i32
  %cmp13.i2234 = icmp eq i32 %conv.i2233, %514
  br i1 %cmp13.i2234, label %get_hard_regnum.exit2240, label %for.cond.i2230

get_hard_regnum.exit2240:                         ; preds = %for.body.i2235
  %521 = trunc i64 %indvars.iv.i2231 to i32
  %add.i2236 = sub i32 8, %521
  %sub.i2237 = add i32 %add.i2236, %517
  %522 = and i32 %sub.i2237, -8
  %523 = icmp eq i32 %522, 8
  br i1 %523, label %if.end.i2253, label %if.then.i2248

if.then.i2248:                                    ; preds = %for.cond.i2230, %if.end.i2226, %get_hard_regnum.exit2240
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i2253:                                     ; preds = %get_hard_regnum.exit2240
  %bf.lshr.i2249 = lshr i32 %bf.load822, 16
  %bf.clear11.i2250 = and i32 %bf.lshr.i2249, 255
  %idxprom27.i2251 = zext i32 %bf.clear11.i2250 to i64
  %arrayidx12.i2252 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i2251
  %524 = load i32* %arrayidx12.i2252, align 4, !tbaa !1
  switch i32 %524, label %sw.default.i2254 [
    i32 2, label %replace_reg.exit2258
    i32 6, label %replace_reg.exit2258
  ]

sw.default.i2254:                                 ; preds = %if.end.i2253
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit2258:                             ; preds = %if.end.i2253, %if.end.i2253
  %sub.i2255 = add nsw i32 %sub.i2237, -8
  %idxprom17.i2256 = sext i32 %sub.i2255 to i64
  %arrayidx19.i2257 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i2256, i64 %idxprom27.i2251
  %525 = load %struct.rtx_def** %arrayidx19.i2257, align 8, !tbaa !10
  %526 = getelementptr inbounds %union.rtunion_def* %arrayidx710.sink, i64 0, i32 0
  %.c2329 = ptrtoint %struct.rtx_def* %525 to i64
  store i64 %.c2329, i64* %526, align 8, !tbaa !10
  br label %for.cond841.preheader

for.cond841.preheader:                            ; preds = %replace_reg.exit2258, %land.lhs.true826, %if.end821
  %arrayidx.i2259 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx193.i = bitcast %union.rtunion_def* %arrayidx.i2259 to %struct.rtx_def**
  br label %for.body844

for.body844:                                      ; preds = %for.cond841.preheader, %for.inc
  %indvars.iv = phi i64 [ 1, %for.cond841.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx846 = getelementptr inbounds [3 x %struct.rtx_def*]* %src_note, i64 0, i64 %indvars.iv
  %527 = load %struct.rtx_def** %arrayidx846, align 8, !tbaa !10
  %tobool847 = icmp eq %struct.rtx_def* %527, null
  br i1 %tobool847, label %for.inc, label %if.then848

if.then848:                                       ; preds = %for.body844
  %arrayidx854 = getelementptr inbounds %struct.rtx_def* %527, i64 0, i32 1, i64 0
  %rtx855 = bitcast %union.rtunion_def* %arrayidx854 to %struct.rtx_def**
  %528 = load %struct.rtx_def** %rtx855, align 8, !tbaa !10
  %arrayidx857 = getelementptr inbounds %struct.rtx_def* %528, i64 0, i32 1, i64 0
  %rtuint858 = bitcast %union.rtunion_def* %arrayidx857 to i32*
  %529 = load i32* %rtuint858, align 4, !tbaa !4
  %530 = load i32* %top.i2110, align 4, !tbaa !33
  %idxprom860 = sext i32 %530 to i64
  %arrayidx862 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom860
  %531 = load i8* %arrayidx862, align 1, !tbaa !1
  %conv863 = zext i8 %531 to i32
  %cmp864 = icmp eq i32 %529, %conv863
  br i1 %cmp864, label %if.else873, label %if.then866

if.then866:                                       ; preds = %if.then848
  %this.04.i = load %struct.rtx_def** %rtx193.i, align 8
  %tobool5.i = icmp eq %struct.rtx_def* %this.04.i, null
  br i1 %tobool5.i, label %for.end.i, label %for.body.i2263

for.body.i2263:                                   ; preds = %if.then866, %if.else.i
  %this.07.i = phi %struct.rtx_def* [ %this.0.i, %if.else.i ], [ %this.04.i, %if.then866 ]
  %arrayidx18.sink6.i = phi %union.rtunion_def* [ %arrayidx18.i, %if.else.i ], [ %arrayidx.i2259, %if.then866 ]
  %532 = getelementptr inbounds %struct.rtx_def* %this.07.i, i64 0, i32 0
  %bf.load.i2260 = load i32* %532, align 8
  %bf.clear.i2261 = and i32 %bf.load.i2260, 16711680
  %cmp.i2262 = icmp eq i32 %bf.clear.i2261, 65536
  br i1 %cmp.i2262, label %land.lhs.true.i2264, label %if.else.i

land.lhs.true.i2264:                              ; preds = %for.body.i2263
  %fld1.i = getelementptr inbounds %struct.rtx_def* %this.07.i, i64 0, i32 1
  %rtx3.i = bitcast [1 x %union.rtunion_def]* %fld1.i to %struct.rtx_def**
  %533 = load %struct.rtx_def** %rtx3.i, align 8, !tbaa !10
  %534 = getelementptr inbounds %struct.rtx_def* %533, i64 0, i32 0
  %bf.load4.i = load i32* %534, align 8
  %bf.clear5.i = and i32 %bf.load4.i, 65535
  %cmp6.i = icmp eq i32 %bf.clear5.i, 61
  br i1 %cmp6.i, label %land.lhs.true7.i, label %if.else.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i2264
  %arrayidx12.i2265 = getelementptr inbounds %struct.rtx_def* %533, i64 0, i32 1, i64 0
  %rtuint.i2266 = bitcast %union.rtunion_def* %arrayidx12.i2265 to i32*
  %535 = load i32* %rtuint.i2266, align 4, !tbaa !4
  %cmp13.i2267 = icmp eq i32 %535, %529
  br i1 %cmp13.i2267, label %remove_regno_note.exit, label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true7.i, %land.lhs.true.i2264, %for.body.i2263
  %arrayidx18.i = getelementptr inbounds %struct.rtx_def* %this.07.i, i64 0, i32 1, i64 1
  %rtx19.i = bitcast %union.rtunion_def* %arrayidx18.i to %struct.rtx_def**
  %this.0.i = load %struct.rtx_def** %rtx19.i, align 8
  %tobool.i = icmp eq %struct.rtx_def* %this.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i2263

for.end.i:                                        ; preds = %if.then866, %if.else.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 885, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.remove_regno_note, i64 0, i64 0)) #6
  unreachable

remove_regno_note.exit:                           ; preds = %land.lhs.true7.i
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %this.07.i, i64 0, i32 1, i64 1
  %rtx16.i = bitcast %union.rtunion_def* %arrayidx15.i to %struct.rtx_def**
  %536 = load %struct.rtx_def** %rtx16.i, align 8, !tbaa !10
  %537 = getelementptr inbounds %union.rtunion_def* %arrayidx18.sink6.i, i64 0, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %536 to i64
  store i64 %.c.i, i64* %537, align 8, !tbaa !10
  %538 = load %struct.rtx_def** %rtx855, align 8, !tbaa !10
  %call872 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %538, i32 0)
  br label %for.inc

if.else873:                                       ; preds = %if.then848
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1833, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_stack_regs_pat, i64 0, i64 0)) #6
  unreachable

for.inc:                                          ; preds = %for.body844, %remove_regno_note.exit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %539 = trunc i64 %indvars.iv.next to i32
  %cmp842 = icmp slt i32 %539, 3
  br i1 %cmp842, label %for.body844, label %for.end877

for.end877:                                       ; preds = %for.inc
  %540 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %541 = getelementptr inbounds %struct.rtx_def* %540, i64 0, i32 0
  %bf.load.i2269 = load i32* %541, align 8
  %bf.clear.i2270 = and i32 %bf.load.i2269, 65535
  %cmp.i2271 = icmp eq i32 %bf.clear.i2270, 61
  br i1 %cmp.i2271, label %land.lhs.true.i2274, label %if.then.i2275

land.lhs.true.i2274:                              ; preds = %for.end877
  %arrayidx.i2272 = getelementptr inbounds %struct.rtx_def* %540, i64 0, i32 1, i64 0
  %rtuint.i2273 = bitcast %union.rtunion_def* %arrayidx.i2272 to i32*
  %542 = load i32* %rtuint.i2273, align 4, !tbaa !4
  %543 = and i32 %542, -8
  %544 = icmp eq i32 %543, 8
  br i1 %544, label %if.end.i2278, label %if.then.i2275

if.then.i2275:                                    ; preds = %land.lhs.true.i2274, %for.end877
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i2278:                                     ; preds = %land.lhs.true.i2274
  %545 = load i32* %top.i2110, align 4, !tbaa !33
  %cmp730.i2277 = icmp sgt i32 %545, -1
  br i1 %cmp730.i2277, label %for.body.lr.ph.i2279, label %if.then881

for.body.lr.ph.i2279:                             ; preds = %if.end.i2278
  %546 = sext i32 %545 to i64
  br label %for.body.i2287

for.cond.i2282:                                   ; preds = %for.body.i2287
  %indvars.iv.next.i2280 = add nsw i64 %indvars.iv.i2283, -1
  %547 = trunc i64 %indvars.iv.i2283 to i32
  %cmp7.i2281 = icmp sgt i32 %547, 0
  br i1 %cmp7.i2281, label %for.body.i2287, label %if.then881

for.body.i2287:                                   ; preds = %for.cond.i2282, %for.body.lr.ph.i2279
  %indvars.iv.i2283 = phi i64 [ %546, %for.body.lr.ph.i2279 ], [ %indvars.iv.next.i2280, %for.cond.i2282 ]
  %arrayidx9.i2284 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i2283
  %548 = load i8* %arrayidx9.i2284, align 1, !tbaa !1
  %conv.i2285 = zext i8 %548 to i32
  %cmp13.i2286 = icmp eq i32 %conv.i2285, %542
  br i1 %cmp13.i2286, label %get_hard_regnum.exit2292, label %for.cond.i2282

get_hard_regnum.exit2292:                         ; preds = %for.body.i2287
  %549 = trunc i64 %indvars.iv.i2283 to i32
  %add.i2288 = add i32 %545, 8
  %sub.i2289 = sub i32 %add.i2288, %549
  %cmp879 = icmp slt i32 %sub.i2289, 8
  br i1 %cmp879, label %if.then881, label %if.end891

if.then881:                                       ; preds = %for.cond.i2282, %if.end.i2278, %get_hard_regnum.exit2292
  %conv885 = trunc i32 %542 to i8
  %inc887 = add nsw i32 %545, 1
  store i32 %inc887, i32* %top.i2110, align 4, !tbaa !33
  %idxprom888 = sext i32 %inc887 to i64
  %arrayidx890 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom888
  store i8 %conv885, i8* %arrayidx890, align 1, !tbaa !1
  %.pre2606 = load %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  %arrayidx893.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre2606, i64 0, i32 1, i64 0
  %rtuint894.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx893.phi.trans.insert to i32*
  %.pre2607 = load i32* %rtuint894.phi.trans.insert, align 4, !tbaa !4
  br label %if.end891

if.end891:                                        ; preds = %if.then881, %get_hard_regnum.exit2292
  %550 = phi i32 [ %.pre2607, %if.then881 ], [ %542, %get_hard_regnum.exit2292 ]
  %551 = phi %struct.rtx_def* [ %.pre2606, %if.then881 ], [ %540, %get_hard_regnum.exit2292 ]
  %sh_prom895 = zext i32 %550 to i64
  %shl896 = shl i64 1, %sh_prom895
  %reg_set897 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %552 = load i64* %reg_set897, align 8, !tbaa !34
  %or898 = or i64 %shl896, %552
  store i64 %or898, i64* %reg_set897, align 8, !tbaa !34
  %553 = getelementptr inbounds %struct.rtx_def* %551, i64 0, i32 0
  %bf.load.i2293 = load i32* %553, align 8
  %bf.clear.i2294 = and i32 %bf.load.i2293, 65535
  %cmp3.i2295 = icmp eq i32 %bf.clear.i2294, 61
  %554 = and i32 %550, -8
  %555 = icmp eq i32 %554, 8
  %or.cond2639 = and i1 %cmp3.i2295, %555
  br i1 %or.cond2639, label %if.end.i2305, label %if.then.i2300

if.then.i2300:                                    ; preds = %if.end891
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i2305:                                     ; preds = %if.end891
  %bf.lshr.i2301 = lshr i32 %bf.load.i2293, 16
  %bf.clear11.i2302 = and i32 %bf.lshr.i2301, 255
  %idxprom27.i2303 = zext i32 %bf.clear11.i2302 to i64
  %arrayidx12.i2304 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i2303
  %556 = load i32* %arrayidx12.i2304, align 4, !tbaa !1
  switch i32 %556, label %sw.default.i2306 [
    i32 2, label %replace_reg.exit2308
    i32 6, label %replace_reg.exit2308
  ]

sw.default.i2306:                                 ; preds = %if.end.i2305
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit2308:                             ; preds = %if.end.i2305, %if.end.i2305
  %arrayidx19.i2307 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i2303
  %557 = load %struct.rtx_def** %arrayidx19.i2307, align 8, !tbaa !10
  store %struct.rtx_def* %557, %struct.rtx_def** %pat.addr.0.i1315, align 8, !tbaa !10
  br label %sw.epilog902

sw.default899:                                    ; preds = %if.end161
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1846, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.subst_stack_regs_pat, i64 0, i64 0)) #6
  unreachable

sw.epilog902:                                     ; preds = %land.lhs.true72, %if.else55, %land.lhs.true611, %entry, %sw.bb164, %replace_reg.exit1397, %replace_reg.exit1476, %replace_reg.exit2308, %replace_reg.exit1952, %land.lhs.true606, %land.lhs.true601, %if.end593, %if.end703, %replace_reg.exit2034, %get_true_reg.exit1258, %land.lhs.true29, %get_hard_regnum.exit1314, %if.then94, %replace_reg.exit, %get_hard_regnum.exit, %if.then, %if.then160
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* nocapture readonly %reg, i32 %where) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom90 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom90
  %1 = load i32* %arrayidx, align 4, !tbaa !1
  %.off = add i32 %1, -5
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then, label %if.end28

if.then:                                          ; preds = %entry
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !4
  %sub = add i32 %2, -8
  %idxprom8 = zext i32 %sub to i64
  %arrayidx10 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom8, i64 16
  %3 = load %struct.rtx_def** %arrayidx10, align 8, !tbaa !10
  %sub14 = add i32 %2, -7
  %idxprom15 = zext i32 %sub14 to i64
  %arrayidx17 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom15, i64 16
  %4 = load %struct.rtx_def** %arrayidx17, align 8, !tbaa !10
  %5 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 0
  %bf.load.i = load i32* %5, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 61
  br i1 %cmp.i, label %land.lhs.true.i, label %if.then.i

land.lhs.true.i:                                  ; preds = %if.then
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %6 = load i32* %rtuint.i, align 4, !tbaa !4
  %7 = and i32 %6, -8
  %8 = icmp eq i32 %7, 8
  br i1 %8, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i, %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i:                                         ; preds = %land.lhs.true.i
  %top.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %9 = load i32* %top.i, align 4, !tbaa !33
  %cmp730.i = icmp sgt i32 %9, -1
  br i1 %cmp730.i, label %for.body.lr.ph.i, label %if.end

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %10 = sext i32 %9 to i64
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %11 = trunc i64 %indvars.iv.i to i32
  %cmp7.i = icmp sgt i32 %11, 0
  br i1 %cmp7.i, label %for.body.i, label %if.end

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %10, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i ]
  %arrayidx9.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i
  %12 = load i8* %arrayidx9.i, align 1, !tbaa !1
  %conv.i = zext i8 %12 to i32
  %cmp13.i = icmp eq i32 %conv.i, %6
  br i1 %cmp13.i, label %get_hard_regnum.exit, label %for.cond.i

get_hard_regnum.exit:                             ; preds = %for.body.i
  %13 = trunc i64 %indvars.iv.i to i32
  %add.i = add i32 %9, 8
  %sub.i = sub i32 %add.i, %13
  %cmp18 = icmp sgt i32 %sub.i, -1
  br i1 %cmp18, label %if.then19, label %if.end

if.then19:                                        ; preds = %get_hard_regnum.exit
  %call20 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %3, i32 %where)
  br label %if.end

if.end:                                           ; preds = %for.cond.i, %if.end.i, %if.then19, %get_hard_regnum.exit
  %pop_insn.0 = phi %struct.rtx_def* [ %call20, %if.then19 ], [ null, %get_hard_regnum.exit ], [ null, %if.end.i ], [ null, %for.cond.i ]
  %14 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load.i115 = load i32* %14, align 8
  %bf.clear.i116 = and i32 %bf.load.i115, 65535
  %cmp.i117 = icmp eq i32 %bf.clear.i116, 61
  br i1 %cmp.i117, label %land.lhs.true.i120, label %if.then.i121

land.lhs.true.i120:                               ; preds = %if.end
  %arrayidx.i118 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint.i119 = bitcast %union.rtunion_def* %arrayidx.i118 to i32*
  %15 = load i32* %rtuint.i119, align 4, !tbaa !4
  %16 = and i32 %15, -8
  %17 = icmp eq i32 %16, 8
  br i1 %17, label %if.end.i124, label %if.then.i121

if.then.i121:                                     ; preds = %land.lhs.true.i120, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i124:                                      ; preds = %land.lhs.true.i120
  %18 = load i32* %top.i, align 4, !tbaa !33
  %cmp730.i123 = icmp sgt i32 %18, -1
  br i1 %cmp730.i123, label %for.body.lr.ph.i125, label %if.end25

for.body.lr.ph.i125:                              ; preds = %if.end.i124
  %19 = sext i32 %18 to i64
  br label %for.body.i133

for.cond.i128:                                    ; preds = %for.body.i133
  %indvars.iv.next.i126 = add nsw i64 %indvars.iv.i129, -1
  %20 = trunc i64 %indvars.iv.i129 to i32
  %cmp7.i127 = icmp sgt i32 %20, 0
  br i1 %cmp7.i127, label %for.body.i133, label %if.end25

for.body.i133:                                    ; preds = %for.cond.i128, %for.body.lr.ph.i125
  %indvars.iv.i129 = phi i64 [ %19, %for.body.lr.ph.i125 ], [ %indvars.iv.next.i126, %for.cond.i128 ]
  %arrayidx9.i130 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i129
  %21 = load i8* %arrayidx9.i130, align 1, !tbaa !1
  %conv.i131 = zext i8 %21 to i32
  %cmp13.i132 = icmp eq i32 %conv.i131, %15
  br i1 %cmp13.i132, label %get_hard_regnum.exit138, label %for.cond.i128

get_hard_regnum.exit138:                          ; preds = %for.body.i133
  %22 = trunc i64 %indvars.iv.i129 to i32
  %add.i134 = add i32 %18, 8
  %sub.i135 = sub i32 %add.i134, %22
  %cmp22 = icmp sgt i32 %sub.i135, -1
  br i1 %cmp22, label %if.then23, label %if.end25

if.then23:                                        ; preds = %get_hard_regnum.exit138
  %call24 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %4, i32 %where)
  br label %if.end25

if.end25:                                         ; preds = %for.cond.i128, %if.end.i124, %if.then23, %get_hard_regnum.exit138
  %pop_insn.1 = phi %struct.rtx_def* [ %call24, %if.then23 ], [ %pop_insn.0, %get_hard_regnum.exit138 ], [ %pop_insn.0, %if.end.i124 ], [ %pop_insn.0, %for.cond.i128 ]
  %tobool = icmp eq %struct.rtx_def* %pop_insn.1, null
  br i1 %tobool, label %if.then26, label %return

if.then26:                                        ; preds = %if.end25
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 939, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.emit_pop_insn, i64 0, i64 0)) #6
  unreachable

if.end28:                                         ; preds = %entry
  %bf.clear.i92 = and i32 %bf.load, 65535
  %cmp.i93 = icmp eq i32 %bf.clear.i92, 61
  br i1 %cmp.i93, label %land.lhs.true.i96, label %if.then.i97

land.lhs.true.i96:                                ; preds = %if.end28
  %arrayidx.i94 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint.i95 = bitcast %union.rtunion_def* %arrayidx.i94 to i32*
  %23 = load i32* %rtuint.i95, align 4, !tbaa !4
  %24 = and i32 %23, -8
  %25 = icmp eq i32 %24, 8
  br i1 %25, label %if.end.i100, label %if.then.i97

if.then.i97:                                      ; preds = %land.lhs.true.i96, %if.end28
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i100:                                      ; preds = %land.lhs.true.i96
  %top.i98 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %26 = load i32* %top.i98, align 4, !tbaa !33
  %cmp730.i99 = icmp sgt i32 %26, -1
  br i1 %cmp730.i99, label %for.body.lr.ph.i101, label %if.then31

for.body.lr.ph.i101:                              ; preds = %if.end.i100
  %27 = sext i32 %26 to i64
  br label %for.body.i109

for.cond.i104:                                    ; preds = %for.body.i109
  %indvars.iv.next.i102 = add nsw i64 %indvars.iv.i105, -1
  %28 = trunc i64 %indvars.iv.i105 to i32
  %cmp7.i103 = icmp sgt i32 %28, 0
  br i1 %cmp7.i103, label %for.body.i109, label %if.then31

for.body.i109:                                    ; preds = %for.cond.i104, %for.body.lr.ph.i101
  %indvars.iv.i105 = phi i64 [ %27, %for.body.lr.ph.i101 ], [ %indvars.iv.next.i102, %for.cond.i104 ]
  %arrayidx9.i106 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i105
  %29 = load i8* %arrayidx9.i106, align 1, !tbaa !1
  %conv.i107 = zext i8 %29 to i32
  %cmp13.i108 = icmp eq i32 %conv.i107, %23
  br i1 %cmp13.i108, label %get_hard_regnum.exit114, label %for.cond.i104

get_hard_regnum.exit114:                          ; preds = %for.body.i109
  %30 = trunc i64 %indvars.iv.i105 to i32
  %add.i110 = sub i32 8, %30
  %sub.i111 = add i32 %add.i110, %26
  %cmp30 = icmp slt i32 %sub.i111, 8
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %for.cond.i104, %if.end.i100, %get_hard_regnum.exit114
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 946, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.emit_pop_insn, i64 0, i64 0)) #6
  unreachable

if.end32:                                         ; preds = %get_hard_regnum.exit114
  %sub33 = add nsw i32 %sub.i111, -8
  %idxprom34 = sext i32 %sub33 to i64
  %arrayidx36 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34, i64 16
  %31 = load %struct.rtx_def** %arrayidx36, align 8, !tbaa !10
  %32 = load %struct.rtx_def** getelementptr inbounds ([8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 16), align 16, !tbaa !10
  %call37 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %31, %struct.rtx_def* %32) #4
  %cmp38 = icmp eq i32 %where, 0
  br i1 %cmp38, label %if.then39, label %if.else

if.then39:                                        ; preds = %if.end32
  %call40 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call37, %struct.rtx_def* %insn) #4
  br label %if.end42

if.else:                                          ; preds = %if.end32
  %call41 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call37, %struct.rtx_def* %insn) #4
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then39
  %pop_insn.2 = phi %struct.rtx_def* [ %call40, %if.then39 ], [ %call41, %if.else ]
  %33 = load %struct.rtx_def** getelementptr inbounds ([8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 16), align 16, !tbaa !10
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %pop_insn.2, i64 0, i32 1, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %call45 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %33, %struct.rtx_def* %34) #4
  %35 = getelementptr inbounds %union.rtunion_def* %arrayidx44, i64 0, i32 0
  %call45.c = ptrtoint %struct.rtx_def* %call45 to i64
  store i64 %call45.c, i64* %35, align 8, !tbaa !10
  %36 = load i32* %top.i98, align 4, !tbaa !33
  %idxprom49 = sext i32 %36 to i64
  %arrayidx51 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom49
  %37 = load i8* %arrayidx51, align 1, !tbaa !1
  %sub54 = sub nsw i32 %36, %sub33
  %idxprom55 = sext i32 %sub54 to i64
  %arrayidx57 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom55
  store i8 %37, i8* %arrayidx57, align 1, !tbaa !1
  %38 = load i32* %top.i98, align 4, !tbaa !33
  %sub59 = add nsw i32 %38, -1
  store i32 %sub59, i32* %top.i98, align 4, !tbaa !33
  %39 = load i32* %rtuint.i95, align 4, !tbaa !4
  %sh_prom = zext i32 %39 to i64
  %shl = shl i64 1, %sh_prom
  %neg = xor i64 %shl, -1
  %reg_set = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %40 = load i64* %reg_set, align 8, !tbaa !34
  %and = and i64 %40, %neg
  store i64 %and, i64* %reg_set, align 8, !tbaa !34
  br label %return

return:                                           ; preds = %if.end25, %if.end42
  %retval.0 = phi %struct.rtx_def* [ %pop_insn.2, %if.end42 ], [ %pop_insn.1, %if.end25 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @move_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* nocapture %pat) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 1, i64 1
  br label %for.cond.i

for.cond.i:                                       ; preds = %sw.bb37.i, %entry
  %arrayidx.sink = phi %union.rtunion_def* [ %arrayidx, %entry ], [ %arrayidx39.i, %sw.bb37.i ]
  %rtx = bitcast %union.rtunion_def* %arrayidx.sink to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %for.cond.i337.preheader [
    i32 63, label %sw.bb.i
    i32 125, label %sw.bb37.i
    i32 126, label %sw.bb37.i
    i32 123, label %sw.bb37.i
  ]

sw.bb.i:                                          ; preds = %for.cond.i
  %fld.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !10
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load1.i = load i32* %3, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp.i = icmp eq i32 %bf.clear2.i, 61
  br i1 %cmp.i, label %land.lhs.true.i, label %sw.bb37.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx7.i to i32*
  %4 = load i32* %rtuint.i, align 4, !tbaa !4
  %5 = and i32 %4, -8
  %6 = icmp eq i32 %5, 8
  br i1 %6, label %if.then.i, label %sw.bb37.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %bf.lshr.i = lshr i32 %bf.load1.i, 16
  %bf.clear21.i = and i32 %bf.lshr.i, 255
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtuint24.i = bitcast %union.rtunion_def* %arrayidx23.i to i32*
  %7 = load i32* %rtuint24.i, align 4, !tbaa !4
  %bf.lshr26.i = lshr i32 %bf.load.i, 16
  %bf.clear27.i = and i32 %bf.lshr26.i, 255
  %call.i = tail call i32 @subreg_regno_offset(i32 %4, i32 %bf.clear21.i, i32 %7, i32 %bf.clear27.i) #4
  %bf.load28.i = load i32* %3, align 8
  %bf.lshr29.i = lshr i32 %bf.load28.i, 16
  %bf.clear30.i = and i32 %bf.lshr29.i, 255
  %idxprom52.i = zext i32 %bf.clear30.i to i64
  %8 = load i32* %rtuint.i, align 4, !tbaa !4
  %add.i = add i32 %call.i, -8
  %sub.i = add i32 %add.i, %8
  %idxprom34.i = zext i32 %sub.i to i64
  %arrayidx36.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i, i64 %idxprom52.i
  %9 = load %struct.rtx_def** %arrayidx36.i, align 8, !tbaa !10
  %10 = getelementptr inbounds %union.rtunion_def* %arrayidx.sink, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %9 to i64
  store i64 %.c, i64* %10, align 8, !tbaa !10
  br label %for.cond.i337.preheader

for.cond.i337.preheader:                          ; preds = %for.cond.i, %if.then.i
  %11 = phi %struct.rtx_def* [ %9, %if.then.i ], [ %0, %for.cond.i ]
  br label %for.cond.i337

sw.bb37.i:                                        ; preds = %land.lhs.true.i, %sw.bb.i, %for.cond.i, %for.cond.i, %for.cond.i
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  br label %for.cond.i

for.cond.i337:                                    ; preds = %for.cond.i337, %for.cond.i337, %for.cond.i337, %sw.bb.i343, %land.lhs.true.i346, %for.cond.i337.preheader
  %pat.sink = phi %struct.rtx_def* [ %pat, %for.cond.i337.preheader ], [ %12, %land.lhs.true.i346 ], [ %12, %sw.bb.i343 ], [ %12, %for.cond.i337 ], [ %12, %for.cond.i337 ], [ %12, %for.cond.i337 ]
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %pat.sink, i64 0, i32 1, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx3, align 8, !tbaa !10
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load.i335 = load i32* %13, align 8
  %bf.clear.i336 = and i32 %bf.load.i335, 65535
  switch i32 %bf.clear.i336, label %get_true_reg.exit366 [
    i32 63, label %sw.bb.i343
    i32 125, label %for.cond.i337
    i32 126, label %for.cond.i337
    i32 123, label %for.cond.i337
  ]

sw.bb.i343:                                       ; preds = %for.cond.i337
  %fld.i338 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1
  %rtx.i339 = bitcast [1 x %union.rtunion_def]* %fld.i338 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx.i339, align 8, !tbaa !10
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load1.i340 = load i32* %15, align 8
  %bf.clear2.i341 = and i32 %bf.load1.i340, 65535
  %cmp.i342 = icmp eq i32 %bf.clear2.i341, 61
  br i1 %cmp.i342, label %land.lhs.true.i346, label %for.cond.i337

land.lhs.true.i346:                               ; preds = %sw.bb.i343
  %arrayidx7.i344 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 1, i64 0
  %rtuint.i345 = bitcast %union.rtunion_def* %arrayidx7.i344 to i32*
  %16 = load i32* %rtuint.i345, align 4, !tbaa !4
  %17 = and i32 %16, -8
  %18 = icmp eq i32 %17, 8
  br i1 %18, label %if.then.i362, label %for.cond.i337

if.then.i362:                                     ; preds = %land.lhs.true.i346
  %bf.lshr.i347 = lshr i32 %bf.load1.i340, 16
  %bf.clear21.i348 = and i32 %bf.lshr.i347, 255
  %arrayidx23.i349 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 1
  %rtuint24.i350 = bitcast %union.rtunion_def* %arrayidx23.i349 to i32*
  %19 = load i32* %rtuint24.i350, align 4, !tbaa !4
  %bf.lshr26.i351 = lshr i32 %bf.load.i335, 16
  %bf.clear27.i352 = and i32 %bf.lshr26.i351, 255
  %call.i353 = tail call i32 @subreg_regno_offset(i32 %16, i32 %bf.clear21.i348, i32 %19, i32 %bf.clear27.i352) #4
  %bf.load28.i354 = load i32* %15, align 8
  %bf.lshr29.i355 = lshr i32 %bf.load28.i354, 16
  %bf.clear30.i356 = and i32 %bf.lshr29.i355, 255
  %idxprom52.i357 = zext i32 %bf.clear30.i356 to i64
  %20 = load i32* %rtuint.i345, align 4, !tbaa !4
  %add.i358 = add i32 %call.i353, -8
  %sub.i359 = add i32 %add.i358, %20
  %idxprom34.i360 = zext i32 %sub.i359 to i64
  %arrayidx36.i361 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i360, i64 %idxprom52.i357
  %21 = load %struct.rtx_def** %arrayidx36.i361, align 8, !tbaa !10
  %22 = getelementptr inbounds %union.rtunion_def* %arrayidx2, i64 0, i32 0
  %.c528 = ptrtoint %struct.rtx_def* %21 to i64
  store i64 %.c528, i64* %22, align 8, !tbaa !10
  %.pre = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  br label %get_true_reg.exit366

get_true_reg.exit366:                             ; preds = %for.cond.i337, %if.then.i362
  %23 = phi %struct.rtx_def* [ %21, %if.then.i362 ], [ %12, %for.cond.i337 ]
  %24 = phi %struct.rtx_def* [ %.pre, %if.then.i362 ], [ %11, %for.cond.i337 ]
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load = load i32* %25, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %if.else200

land.lhs.true:                                    ; preds = %get_true_reg.exit366
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx6 to i32*
  %26 = load i32* %rtuint, align 4, !tbaa !4
  %27 = and i32 %26, -8
  %28 = icmp eq i32 %27, 8
  br i1 %28, label %land.lhs.true13, label %land.lhs.true127

land.lhs.true13:                                  ; preds = %land.lhs.true
  %29 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load14 = load i32* %29, align 8
  %bf.clear15 = and i32 %bf.load14, 65535
  %cmp16 = icmp eq i32 %bf.clear15, 61
  br i1 %cmp16, label %land.lhs.true17, label %if.else

land.lhs.true17:                                  ; preds = %land.lhs.true13
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0
  %rtuint20 = bitcast %union.rtunion_def* %arrayidx19 to i32*
  %30 = load i32* %rtuint20, align 4, !tbaa !4
  %31 = and i32 %30, -8
  %32 = icmp eq i32 %31, 8
  br i1 %32, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true17
  %call30 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %26) #4
  %tobool = icmp eq %struct.rtx_def* %call30, null
  %33 = load i32* %rtuint, align 4, !tbaa !4
  %34 = load i32* %rtuint20, align 4, !tbaa !4
  %cmp38 = icmp eq i32 %33, %34
  br i1 %tobool, label %if.end82, label %if.then31

if.then31:                                        ; preds = %if.then
  br i1 %cmp38, label %if.then39, label %if.end

if.then39:                                        ; preds = %if.then31
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1085, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.move_for_stack_reg, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %if.then31
  %top = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %35 = load i32* %top, align 4, !tbaa !33
  %cmp40557 = icmp sgt i32 %35, -1
  br i1 %cmp40557, label %for.body.lr.ph, label %if.then54

for.body.lr.ph:                                   ; preds = %if.end
  %36 = sext i32 %35 to i64
  br label %for.body

for.cond:                                         ; preds = %for.body
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %37 = trunc i64 %indvars.iv to i32
  %cmp40 = icmp sgt i32 %37, 0
  br i1 %cmp40, label %for.body, label %if.then54

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ %36, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx41 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv
  %38 = load i8* %arrayidx41, align 1, !tbaa !1
  %conv = zext i8 %38 to i32
  %cmp45 = icmp eq i32 %conv, %33
  br i1 %cmp45, label %for.end, label %for.cond

for.end:                                          ; preds = %for.body
  %39 = trunc i64 %indvars.iv to i32
  %cmp49 = icmp slt i32 %39, 0
  br i1 %cmp49, label %if.then54, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %bf.load.i367 = load i32* %29, align 8
  %bf.clear.i368 = and i32 %bf.load.i367, 65535
  %cmp.i369 = icmp eq i32 %bf.clear.i368, 61
  %40 = and i32 %34, -8
  %41 = icmp eq i32 %40, 8
  %or.cond = and i1 %cmp.i369, %41
  br i1 %or.cond, label %for.body.i, label %if.then.i372

if.then.i372:                                     ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

for.cond.i373:                                    ; preds = %for.body.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %42 = trunc i64 %indvars.iv.i to i32
  %cmp7.i = icmp sgt i32 %42, 0
  br i1 %cmp7.i, label %for.body.i, label %if.end55

for.body.i:                                       ; preds = %lor.lhs.false, %for.cond.i373
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.cond.i373 ], [ %36, %lor.lhs.false ]
  %arrayidx9.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i
  %43 = load i8* %arrayidx9.i, align 1, !tbaa !1
  %conv.i = zext i8 %43 to i32
  %cmp13.i = icmp eq i32 %conv.i, %34
  br i1 %cmp13.i, label %get_hard_regnum.exit, label %for.cond.i373

get_hard_regnum.exit:                             ; preds = %for.body.i
  %44 = trunc i64 %indvars.iv.i to i32
  %add.i374 = add i32 %35, 8
  %sub.i375 = sub i32 %add.i374, %44
  %cmp52 = icmp sgt i32 %sub.i375, 7
  br i1 %cmp52, label %if.then54, label %if.end55

if.then54:                                        ; preds = %for.cond, %if.end, %get_hard_regnum.exit, %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1093, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.move_for_stack_reg, i64 0, i64 0)) #6
  unreachable

if.end55:                                         ; preds = %for.cond.i373, %get_hard_regnum.exit
  %call59 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 10, i32 %34) #4
  %tobool60 = icmp eq %struct.rtx_def* %call59, null
  br i1 %tobool60, label %if.end64, label %if.then61

if.then61:                                        ; preds = %if.end55
  %call62 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %24, i32 0)
  %call63 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #4
  br label %if.end247

if.end64:                                         ; preds = %if.end55
  %45 = load i32* %rtuint20, align 4, !tbaa !4
  %conv68 = trunc i32 %45 to i8
  %sext = shl i64 %indvars.iv, 32
  %idxprom69 = ashr exact i64 %sext, 32
  %arrayidx71 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom69
  store i8 %conv68, i8* %arrayidx71, align 1, !tbaa !1
  %46 = load i32* %rtuint20, align 4, !tbaa !4
  %sh_prom = zext i32 %46 to i64
  %shl = shl i64 1, %sh_prom
  %reg_set = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %47 = load i64* %reg_set, align 8, !tbaa !34
  %or = or i64 %shl, %47
  %48 = load i32* %rtuint, align 4, !tbaa !4
  %sh_prom78 = zext i32 %48 to i64
  %shl79 = shl i64 1, %sh_prom78
  %neg = xor i64 %shl79, -1
  %and = and i64 %or, %neg
  store i64 %and, i64* %reg_set, align 8, !tbaa !34
  %call81 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #4
  br label %if.end247

if.end82:                                         ; preds = %if.then
  br i1 %cmp38, label %if.then91, label %if.end101

if.then91:                                        ; preds = %if.end82
  %call95 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 10, i32 %33) #4
  %tobool96 = icmp eq %struct.rtx_def* %call95, null
  br i1 %tobool96, label %if.end99, label %if.then97

if.then97:                                        ; preds = %if.then91
  %call98 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %23, i32 0)
  br label %if.end99

if.end99:                                         ; preds = %if.then91, %if.then97
  %call100 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #4
  br label %if.end247

if.end101:                                        ; preds = %if.end82
  %bf.load.i376 = load i32* %29, align 8
  %bf.clear.i377 = and i32 %bf.load.i376, 65535
  %cmp.i378 = icmp eq i32 %bf.clear.i377, 61
  %49 = and i32 %34, -8
  %50 = icmp eq i32 %49, 8
  %or.cond527 = and i1 %cmp.i378, %50
  br i1 %or.cond527, label %if.end.i385, label %if.then.i382

if.then.i382:                                     ; preds = %if.end101
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i385:                                      ; preds = %if.end101
  %top.i383 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %51 = load i32* %top.i383, align 4, !tbaa !33
  %cmp730.i384 = icmp sgt i32 %51, -1
  br i1 %cmp730.i384, label %for.body.lr.ph.i386, label %if.end106

for.body.lr.ph.i386:                              ; preds = %if.end.i385
  %52 = sext i32 %51 to i64
  br label %for.body.i394

for.cond.i389:                                    ; preds = %for.body.i394
  %indvars.iv.next.i387 = add nsw i64 %indvars.iv.i390, -1
  %53 = trunc i64 %indvars.iv.i390 to i32
  %cmp7.i388 = icmp sgt i32 %53, 0
  br i1 %cmp7.i388, label %for.body.i394, label %if.end106

for.body.i394:                                    ; preds = %for.cond.i389, %for.body.lr.ph.i386
  %indvars.iv.i390 = phi i64 [ %52, %for.body.lr.ph.i386 ], [ %indvars.iv.next.i387, %for.cond.i389 ]
  %arrayidx9.i391 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i390
  %54 = load i8* %arrayidx9.i391, align 1, !tbaa !1
  %conv.i392 = zext i8 %54 to i32
  %cmp13.i393 = icmp eq i32 %conv.i392, %34
  br i1 %cmp13.i393, label %get_hard_regnum.exit399, label %for.cond.i389

get_hard_regnum.exit399:                          ; preds = %for.body.i394
  %55 = trunc i64 %indvars.iv.i390 to i32
  %add.i395 = add i32 %51, 8
  %sub.i396 = sub i32 %add.i395, %55
  %cmp103 = icmp sgt i32 %sub.i396, 7
  br i1 %cmp103, label %if.then105, label %if.end106

if.then105:                                       ; preds = %get_hard_regnum.exit399
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1134, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.move_for_stack_reg, i64 0, i64 0)) #6
  unreachable

if.end106:                                        ; preds = %for.cond.i389, %if.end.i385, %get_hard_regnum.exit399
  %bf.load.i400 = load i32* %25, align 8
  %bf.clear.i401 = and i32 %bf.load.i400, 65535
  %cmp.i402 = icmp eq i32 %bf.clear.i401, 61
  %56 = and i32 %33, -8
  %57 = icmp eq i32 %56, 8
  %or.cond584 = and i1 %cmp.i402, %57
  br i1 %or.cond584, label %if.end.i409, label %if.then.i406

if.then.i406:                                     ; preds = %if.end106
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i409:                                      ; preds = %if.end106
  br i1 %cmp730.i384, label %for.body.lr.ph.i410, label %if.then.i429

for.body.lr.ph.i410:                              ; preds = %if.end.i409
  %58 = sext i32 %51 to i64
  br label %for.body.i418

for.cond.i413:                                    ; preds = %for.body.i418
  %indvars.iv.next.i411 = add nsw i64 %indvars.iv.i414, -1
  %59 = trunc i64 %indvars.iv.i414 to i32
  %cmp7.i412 = icmp sgt i32 %59, 0
  br i1 %cmp7.i412, label %for.body.i418, label %if.then.i429

for.body.i418:                                    ; preds = %for.cond.i413, %for.body.lr.ph.i410
  %indvars.iv.i414 = phi i64 [ %58, %for.body.lr.ph.i410 ], [ %indvars.iv.next.i411, %for.cond.i413 ]
  %arrayidx9.i415 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i414
  %60 = load i8* %arrayidx9.i415, align 1, !tbaa !1
  %conv.i416 = zext i8 %60 to i32
  %cmp13.i417 = icmp eq i32 %conv.i416, %33
  br i1 %cmp13.i417, label %get_hard_regnum.exit423, label %for.cond.i413

get_hard_regnum.exit423:                          ; preds = %for.body.i418
  %61 = trunc i64 %indvars.iv.i414 to i32
  %add.i419 = sub i32 8, %61
  %sub.i420 = add i32 %add.i419, %51
  %62 = and i32 %sub.i420, -8
  %63 = icmp eq i32 %62, 8
  br i1 %63, label %lor.lhs.false2.i, label %if.then.i429

lor.lhs.false2.i:                                 ; preds = %get_hard_regnum.exit423
  %64 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %65 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 0
  %bf.load.i424 = load i32* %65, align 8
  %bf.clear.i425 = and i32 %bf.load.i424, 65535
  %cmp3.i = icmp eq i32 %bf.clear.i425, 61
  br i1 %cmp3.i, label %land.lhs.true.i428, label %if.then.i429

land.lhs.true.i428:                               ; preds = %lor.lhs.false2.i
  %arrayidx.i426 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 1, i64 0
  %rtuint.i427 = bitcast %union.rtunion_def* %arrayidx.i426 to i32*
  %66 = load i32* %rtuint.i427, align 4, !tbaa !4
  %67 = and i32 %66, -8
  %68 = icmp eq i32 %67, 8
  br i1 %68, label %if.end.i431, label %if.then.i429

if.then.i429:                                     ; preds = %for.cond.i413, %if.end.i409, %land.lhs.true.i428, %lor.lhs.false2.i, %get_hard_regnum.exit423
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i431:                                      ; preds = %land.lhs.true.i428
  %bf.lshr.i430 = lshr i32 %bf.load.i424, 16
  %bf.clear11.i = and i32 %bf.lshr.i430, 255
  %idxprom27.i = zext i32 %bf.clear11.i to i64
  %arrayidx12.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i
  %69 = load i32* %arrayidx12.i, align 4, !tbaa !1
  switch i32 %69, label %sw.default.i [
    i32 2, label %replace_reg.exit
    i32 6, label %replace_reg.exit
  ]

sw.default.i:                                     ; preds = %if.end.i431
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit:                                 ; preds = %if.end.i431, %if.end.i431
  %sub.i432 = add nsw i32 %sub.i420, -8
  %idxprom17.i = sext i32 %sub.i432 to i64
  %arrayidx19.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i, i64 %idxprom27.i
  %70 = load %struct.rtx_def** %arrayidx19.i, align 8, !tbaa !10
  %71 = getelementptr inbounds %union.rtunion_def* %arrayidx.sink, i64 0, i32 0
  %.c532 = ptrtoint %struct.rtx_def* %70 to i64
  store i64 %.c532, i64* %71, align 8, !tbaa !10
  %conv111 = trunc i32 %34 to i8
  %inc = add nsw i32 %51, 1
  store i32 %inc, i32* %top.i383, align 4, !tbaa !33
  %idxprom113 = sext i32 %inc to i64
  %arrayidx115 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom113
  store i8 %conv111, i8* %arrayidx115, align 1, !tbaa !1
  %72 = load i32* %rtuint20, align 4, !tbaa !4
  %sh_prom119 = zext i32 %72 to i64
  %shl120 = shl i64 1, %sh_prom119
  %reg_set121 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %73 = load i64* %reg_set121, align 8, !tbaa !34
  %or122 = or i64 %shl120, %73
  store i64 %or122, i64* %reg_set121, align 8, !tbaa !34
  %74 = load %struct.rtx_def** %rtx3, align 8, !tbaa !10
  %75 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 0
  %bf.load.i433 = load i32* %75, align 8
  %bf.clear.i434 = and i32 %bf.load.i433, 65535
  %cmp3.i435 = icmp eq i32 %bf.clear.i434, 61
  br i1 %cmp3.i435, label %land.lhs.true.i439, label %if.then.i440

land.lhs.true.i439:                               ; preds = %replace_reg.exit
  %arrayidx.i437 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 1, i64 0
  %rtuint.i438 = bitcast %union.rtunion_def* %arrayidx.i437 to i32*
  %76 = load i32* %rtuint.i438, align 4, !tbaa !4
  %77 = and i32 %76, -8
  %78 = icmp eq i32 %77, 8
  br i1 %78, label %if.end.i445, label %if.then.i440

if.then.i440:                                     ; preds = %land.lhs.true.i439, %replace_reg.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i445:                                      ; preds = %land.lhs.true.i439
  %bf.lshr.i441 = lshr i32 %bf.load.i433, 16
  %bf.clear11.i442 = and i32 %bf.lshr.i441, 255
  %idxprom27.i443 = zext i32 %bf.clear11.i442 to i64
  %arrayidx12.i444 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i443
  %79 = load i32* %arrayidx12.i444, align 4, !tbaa !1
  switch i32 %79, label %sw.default.i446 [
    i32 2, label %replace_reg.exit448
    i32 6, label %replace_reg.exit448
  ]

sw.default.i446:                                  ; preds = %if.end.i445
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit448:                              ; preds = %if.end.i445, %if.end.i445
  %arrayidx19.i447 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i443
  %80 = load %struct.rtx_def** %arrayidx19.i447, align 8, !tbaa !10
  %81 = getelementptr inbounds %union.rtunion_def* %arrayidx2, i64 0, i32 0
  %.c533 = ptrtoint %struct.rtx_def* %80 to i64
  store i64 %.c533, i64* %81, align 8, !tbaa !10
  br label %if.end247

if.else:                                          ; preds = %land.lhs.true17, %land.lhs.true13
  br i1 %cmp, label %land.lhs.true127, label %if.else200

land.lhs.true127:                                 ; preds = %land.lhs.true, %if.else
  %arrayidx129 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 0
  %rtuint130 = bitcast %union.rtunion_def* %arrayidx129 to i32*
  %82 = load i32* %rtuint130, align 4, !tbaa !4
  %83 = and i32 %82, -8
  %84 = icmp eq i32 %83, 8
  br i1 %84, label %if.then139, label %if.else200

if.then139:                                       ; preds = %land.lhs.true127
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %24)
  %85 = load i32* %rtuint130, align 4, !tbaa !4
  %call143 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %85) #4
  %tobool144 = icmp eq %struct.rtx_def* %call143, null
  br i1 %tobool144, label %if.else159, label %if.then145

if.then145:                                       ; preds = %if.then139
  %arrayidx147 = getelementptr inbounds %struct.rtx_def* %call143, i64 0, i32 1, i64 0
  %rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**
  %86 = load %struct.rtx_def** %rtx148, align 8, !tbaa !10
  %87 = getelementptr inbounds %struct.rtx_def* %86, i64 0, i32 0
  %bf.load.i449 = load i32* %87, align 8
  %bf.clear.i450 = and i32 %bf.load.i449, 65535
  %cmp3.i451 = icmp eq i32 %bf.clear.i450, 61
  br i1 %cmp3.i451, label %land.lhs.true.i455, label %if.then.i456

land.lhs.true.i455:                               ; preds = %if.then145
  %arrayidx.i453 = getelementptr inbounds %struct.rtx_def* %86, i64 0, i32 1, i64 0
  %rtuint.i454 = bitcast %union.rtunion_def* %arrayidx.i453 to i32*
  %88 = load i32* %rtuint.i454, align 4, !tbaa !4
  %89 = and i32 %88, -8
  %90 = icmp eq i32 %89, 8
  br i1 %90, label %if.end.i461, label %if.then.i456

if.then.i456:                                     ; preds = %land.lhs.true.i455, %if.then145
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i461:                                      ; preds = %land.lhs.true.i455
  %bf.lshr.i457 = lshr i32 %bf.load.i449, 16
  %bf.clear11.i458 = and i32 %bf.lshr.i457, 255
  %idxprom27.i459 = zext i32 %bf.clear11.i458 to i64
  %arrayidx12.i460 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i459
  %91 = load i32* %arrayidx12.i460, align 4, !tbaa !1
  switch i32 %91, label %sw.default.i462 [
    i32 2, label %replace_reg.exit464
    i32 6, label %replace_reg.exit464
  ]

sw.default.i462:                                  ; preds = %if.end.i461
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit464:                              ; preds = %if.end.i461, %if.end.i461
  %arrayidx19.i463 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i459
  %92 = load %struct.rtx_def** %arrayidx19.i463, align 8, !tbaa !10
  %93 = getelementptr inbounds %union.rtunion_def* %arrayidx147, i64 0, i32 0
  %.c530 = ptrtoint %struct.rtx_def* %92 to i64
  store i64 %.c530, i64* %93, align 8, !tbaa !10
  %top149 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %94 = load i32* %top149, align 4, !tbaa !33
  %dec150 = add nsw i32 %94, -1
  store i32 %dec150, i32* %top149, align 4, !tbaa !33
  %95 = load i32* %rtuint130, align 4, !tbaa !4
  %sh_prom154 = zext i32 %95 to i64
  %shl155 = shl i64 1, %sh_prom154
  %neg156 = xor i64 %shl155, -1
  %reg_set157 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %96 = load i64* %reg_set157, align 8, !tbaa !34
  %and158 = and i64 %96, %neg156
  store i64 %and158, i64* %reg_set157, align 8, !tbaa !34
  br label %if.end199

if.else159:                                       ; preds = %if.then139
  %bf.load160 = load i32* %25, align 8
  %bf.lshr = lshr i32 %bf.load160, 16
  %bf.clear161 = and i32 %bf.lshr, 255
  %bf.clear161.off = add i32 %bf.clear161, -17
  %switch = icmp ult i32 %bf.clear161.off, 2
  br i1 %switch, label %land.lhs.true170, label %if.end199

land.lhs.true170:                                 ; preds = %if.else159
  %top171 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %97 = load i32* %top171, align 4, !tbaa !33
  %cmp172 = icmp slt i32 %97, 7
  br i1 %cmp172, label %if.then174, label %if.end199

if.then174:                                       ; preds = %land.lhs.true170
  %idxprom178330 = zext i32 %bf.clear161 to i64
  %arrayidx179 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom178330
  %98 = load %struct.rtx_def** %arrayidx179, align 8, !tbaa !10
  %cmp183 = icmp eq i32 %bf.clear161, 18
  br i1 %cmp183, label %if.then185, label %if.else187

if.then185:                                       ; preds = %if.then174
  %call186 = tail call %struct.rtx_def* @gen_movtf(%struct.rtx_def* %98, %struct.rtx_def* %98) #4
  br label %if.end189

if.else187:                                       ; preds = %if.then174
  %call188 = tail call %struct.rtx_def* @gen_movxf(%struct.rtx_def* %98, %struct.rtx_def* %98) #4
  br label %if.end189

if.end189:                                        ; preds = %if.else187, %if.then185
  %push_rtx.0 = phi %struct.rtx_def* [ %call186, %if.then185 ], [ %call188, %if.else187 ]
  %call190 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %push_rtx.0, %struct.rtx_def* %insn) #4
  %arrayidx192 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**
  %99 = load %struct.rtx_def** %rtx193, align 8, !tbaa !10
  %call194 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 1, %struct.rtx_def* %98, %struct.rtx_def* %99) #4
  %100 = getelementptr inbounds %union.rtunion_def* %arrayidx192, i64 0, i32 0
  %call194.c = ptrtoint %struct.rtx_def* %call194 to i64
  store i64 %call194.c, i64* %100, align 8, !tbaa !10
  br label %if.end199

if.end199:                                        ; preds = %if.else159, %land.lhs.true170, %if.end189, %replace_reg.exit464
  %101 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %102 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 0
  %bf.load.i465 = load i32* %102, align 8
  %bf.clear.i466 = and i32 %bf.load.i465, 65535
  %cmp3.i467 = icmp eq i32 %bf.clear.i466, 61
  br i1 %cmp3.i467, label %land.lhs.true.i471, label %if.then.i472

land.lhs.true.i471:                               ; preds = %if.end199
  %arrayidx.i469 = getelementptr inbounds %struct.rtx_def* %101, i64 0, i32 1, i64 0
  %rtuint.i470 = bitcast %union.rtunion_def* %arrayidx.i469 to i32*
  %103 = load i32* %rtuint.i470, align 4, !tbaa !4
  %104 = and i32 %103, -8
  %105 = icmp eq i32 %104, 8
  br i1 %105, label %if.end.i477, label %if.then.i472

if.then.i472:                                     ; preds = %land.lhs.true.i471, %if.end199
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i477:                                      ; preds = %land.lhs.true.i471
  %bf.lshr.i473 = lshr i32 %bf.load.i465, 16
  %bf.clear11.i474 = and i32 %bf.lshr.i473, 255
  %idxprom27.i475 = zext i32 %bf.clear11.i474 to i64
  %arrayidx12.i476 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i475
  %106 = load i32* %arrayidx12.i476, align 4, !tbaa !1
  switch i32 %106, label %sw.default.i478 [
    i32 2, label %replace_reg.exit480
    i32 6, label %replace_reg.exit480
  ]

sw.default.i478:                                  ; preds = %if.end.i477
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit480:                              ; preds = %if.end.i477, %if.end.i477
  %arrayidx19.i479 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i475
  %107 = load %struct.rtx_def** %arrayidx19.i479, align 8, !tbaa !10
  %108 = getelementptr inbounds %union.rtunion_def* %arrayidx.sink, i64 0, i32 0
  %.c531 = ptrtoint %struct.rtx_def* %107 to i64
  store i64 %.c531, i64* %108, align 8, !tbaa !10
  br label %if.end247

if.else200:                                       ; preds = %get_true_reg.exit366, %land.lhs.true127, %if.else
  %109 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load201 = load i32* %109, align 8
  %bf.clear202 = and i32 %bf.load201, 65535
  %cmp203 = icmp eq i32 %bf.clear202, 61
  br i1 %cmp203, label %land.lhs.true205, label %if.else244

land.lhs.true205:                                 ; preds = %if.else200
  %arrayidx207 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0
  %rtuint208 = bitcast %union.rtunion_def* %arrayidx207 to i32*
  %110 = load i32* %rtuint208, align 4, !tbaa !4
  %111 = and i32 %110, -8
  %112 = icmp eq i32 %111, 8
  br i1 %112, label %if.end.i490, label %if.else244

if.end.i490:                                      ; preds = %land.lhs.true205
  %top.i488 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %113 = load i32* %top.i488, align 4, !tbaa !33
  %cmp730.i489 = icmp sgt i32 %113, -1
  br i1 %cmp730.i489, label %for.body.lr.ph.i491, label %if.end227

for.body.lr.ph.i491:                              ; preds = %if.end.i490
  %114 = sext i32 %113 to i64
  br label %for.body.i499

for.cond.i494:                                    ; preds = %for.body.i499
  %indvars.iv.next.i492 = add nsw i64 %indvars.iv.i495, -1
  %115 = trunc i64 %indvars.iv.i495 to i32
  %cmp7.i493 = icmp sgt i32 %115, 0
  br i1 %cmp7.i493, label %for.body.i499, label %if.end222

for.body.i499:                                    ; preds = %for.cond.i494, %for.body.lr.ph.i491
  %indvars.iv.i495 = phi i64 [ %114, %for.body.lr.ph.i491 ], [ %indvars.iv.next.i492, %for.cond.i494 ]
  %arrayidx9.i496 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i495
  %116 = load i8* %arrayidx9.i496, align 1, !tbaa !1
  %conv.i497 = zext i8 %116 to i32
  %cmp13.i498 = icmp eq i32 %conv.i497, %110
  br i1 %cmp13.i498, label %get_hard_regnum.exit504, label %for.cond.i494

get_hard_regnum.exit504:                          ; preds = %for.body.i499
  %117 = trunc i64 %indvars.iv.i495 to i32
  %add.i500 = add i32 %113, 8
  %sub.i501 = sub i32 %add.i500, %117
  %cmp219 = icmp sgt i32 %sub.i501, 7
  br i1 %cmp219, label %if.then221, label %if.end222

if.then221:                                       ; preds = %get_hard_regnum.exit504
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1190, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.move_for_stack_reg, i64 0, i64 0)) #6
  unreachable

if.end222:                                        ; preds = %for.cond.i494, %get_hard_regnum.exit504
  %cmp224 = icmp sgt i32 %113, 7
  br i1 %cmp224, label %if.then226, label %if.end227

if.then226:                                       ; preds = %if.end222
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1193, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.move_for_stack_reg, i64 0, i64 0)) #6
  unreachable

if.end227:                                        ; preds = %if.end.i490, %if.end222
  %conv231 = trunc i32 %110 to i8
  %inc233 = add nsw i32 %113, 1
  store i32 %inc233, i32* %top.i488, align 4, !tbaa !33
  %idxprom234 = sext i32 %inc233 to i64
  %arrayidx236 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom234
  store i8 %conv231, i8* %arrayidx236, align 1, !tbaa !1
  %118 = load i32* %rtuint208, align 4, !tbaa !4
  %sh_prom240 = zext i32 %118 to i64
  %shl241 = shl i64 1, %sh_prom240
  %reg_set242 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %119 = load i64* %reg_set242, align 8, !tbaa !34
  %or243 = or i64 %shl241, %119
  store i64 %or243, i64* %reg_set242, align 8, !tbaa !34
  %120 = load %struct.rtx_def** %rtx3, align 8, !tbaa !10
  %121 = getelementptr inbounds %struct.rtx_def* %120, i64 0, i32 0
  %bf.load.i505 = load i32* %121, align 8
  %bf.clear.i506 = and i32 %bf.load.i505, 65535
  %cmp3.i507 = icmp eq i32 %bf.clear.i506, 61
  br i1 %cmp3.i507, label %land.lhs.true.i511, label %if.then.i512

land.lhs.true.i511:                               ; preds = %if.end227
  %arrayidx.i509 = getelementptr inbounds %struct.rtx_def* %120, i64 0, i32 1, i64 0
  %rtuint.i510 = bitcast %union.rtunion_def* %arrayidx.i509 to i32*
  %122 = load i32* %rtuint.i510, align 4, !tbaa !4
  %123 = and i32 %122, -8
  %124 = icmp eq i32 %123, 8
  br i1 %124, label %if.end.i517, label %if.then.i512

if.then.i512:                                     ; preds = %land.lhs.true.i511, %if.end227
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i517:                                      ; preds = %land.lhs.true.i511
  %bf.lshr.i513 = lshr i32 %bf.load.i505, 16
  %bf.clear11.i514 = and i32 %bf.lshr.i513, 255
  %idxprom27.i515 = zext i32 %bf.clear11.i514 to i64
  %arrayidx12.i516 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i515
  %125 = load i32* %arrayidx12.i516, align 4, !tbaa !1
  switch i32 %125, label %sw.default.i518 [
    i32 2, label %replace_reg.exit520
    i32 6, label %replace_reg.exit520
  ]

sw.default.i518:                                  ; preds = %if.end.i517
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit520:                              ; preds = %if.end.i517, %if.end.i517
  %arrayidx19.i519 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i515
  %126 = load %struct.rtx_def** %arrayidx19.i519, align 8, !tbaa !10
  %127 = getelementptr inbounds %union.rtunion_def* %arrayidx2, i64 0, i32 0
  %.c529 = ptrtoint %struct.rtx_def* %126 to i64
  store i64 %.c529, i64* %127, align 8, !tbaa !10
  br label %if.end247

if.else244:                                       ; preds = %land.lhs.true205, %if.else200
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 1200, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.move_for_stack_reg, i64 0, i64 0)) #6
  unreachable

if.end247:                                        ; preds = %replace_reg.exit480, %replace_reg.exit520, %if.then61, %if.end64, %if.end99, %replace_reg.exit448
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compare_for_stack_reg(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* nocapture %pat_src) #0 {
entry:
  %fld = getelementptr inbounds %struct.rtx_def* %pat_src, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  br label %for.cond.i

for.cond.i:                                       ; preds = %sw.bb37.i, %entry
  %pat.addr.0.i = phi %struct.rtx_def** [ %rtx, %entry ], [ %rtx40.i, %sw.bb37.i ]
  %0 = load %struct.rtx_def** %pat.addr.0.i, align 8, !tbaa !10
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %get_true_reg.exit [
    i32 63, label %sw.bb.i
    i32 125, label %sw.bb37.i
    i32 126, label %sw.bb37.i
    i32 123, label %sw.bb37.i
  ]

sw.bb.i:                                          ; preds = %for.cond.i
  %fld.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !10
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load1.i = load i32* %3, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp.i = icmp eq i32 %bf.clear2.i, 61
  br i1 %cmp.i, label %land.lhs.true.i, label %sw.bb37.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx7.i to i32*
  %4 = load i32* %rtuint.i, align 4, !tbaa !4
  %5 = and i32 %4, -8
  %6 = icmp eq i32 %5, 8
  br i1 %6, label %if.then.i, label %sw.bb37.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %bf.lshr.i = lshr i32 %bf.load1.i, 16
  %bf.clear21.i = and i32 %bf.lshr.i, 255
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtuint24.i = bitcast %union.rtunion_def* %arrayidx23.i to i32*
  %7 = load i32* %rtuint24.i, align 4, !tbaa !4
  %bf.lshr26.i = lshr i32 %bf.load.i, 16
  %bf.clear27.i = and i32 %bf.lshr26.i, 255
  %call.i = tail call i32 @subreg_regno_offset(i32 %4, i32 %bf.clear21.i, i32 %7, i32 %bf.clear27.i) #4
  %bf.load28.i = load i32* %3, align 8
  %bf.lshr29.i = lshr i32 %bf.load28.i, 16
  %bf.clear30.i = and i32 %bf.lshr29.i, 255
  %idxprom52.i = zext i32 %bf.clear30.i to i64
  %8 = load i32* %rtuint.i, align 4, !tbaa !4
  %add.i = add i32 %call.i, -8
  %sub.i = add i32 %add.i, %8
  %idxprom34.i = zext i32 %sub.i to i64
  %arrayidx36.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i, i64 %idxprom52.i
  %9 = load %struct.rtx_def** %arrayidx36.i, align 8, !tbaa !10
  store %struct.rtx_def* %9, %struct.rtx_def** %pat.addr.0.i, align 8, !tbaa !10
  br label %get_true_reg.exit

sw.bb37.i:                                        ; preds = %land.lhs.true.i, %sw.bb.i, %for.cond.i, %for.cond.i, %for.cond.i
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx40.i = bitcast %union.rtunion_def* %arrayidx39.i to %struct.rtx_def**
  br label %for.cond.i

get_true_reg.exit:                                ; preds = %for.cond.i, %if.then.i
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %pat_src, i64 0, i32 1, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  br label %for.cond.i237

for.cond.i237:                                    ; preds = %sw.bb37.i265, %get_true_reg.exit
  %pat.addr.0.i234 = phi %struct.rtx_def** [ %rtx3, %get_true_reg.exit ], [ %rtx40.i264, %sw.bb37.i265 ]
  %10 = load %struct.rtx_def** %pat.addr.0.i234, align 8, !tbaa !10
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load.i235 = load i32* %11, align 8
  %bf.clear.i236 = and i32 %bf.load.i235, 65535
  switch i32 %bf.clear.i236, label %while.cond.i [
    i32 63, label %sw.bb.i243
    i32 125, label %sw.bb37.i265
    i32 126, label %sw.bb37.i265
    i32 123, label %sw.bb37.i265
  ]

sw.bb.i243:                                       ; preds = %for.cond.i237
  %fld.i238 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1
  %rtx.i239 = bitcast [1 x %union.rtunion_def]* %fld.i238 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx.i239, align 8, !tbaa !10
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load1.i240 = load i32* %13, align 8
  %bf.clear2.i241 = and i32 %bf.load1.i240, 65535
  %cmp.i242 = icmp eq i32 %bf.clear2.i241, 61
  br i1 %cmp.i242, label %land.lhs.true.i246, label %sw.bb37.i265

land.lhs.true.i246:                               ; preds = %sw.bb.i243
  %arrayidx7.i244 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0
  %rtuint.i245 = bitcast %union.rtunion_def* %arrayidx7.i244 to i32*
  %14 = load i32* %rtuint.i245, align 4, !tbaa !4
  %15 = and i32 %14, -8
  %16 = icmp eq i32 %15, 8
  br i1 %16, label %if.then.i262, label %sw.bb37.i265

if.then.i262:                                     ; preds = %land.lhs.true.i246
  %bf.lshr.i247 = lshr i32 %bf.load1.i240, 16
  %bf.clear21.i248 = and i32 %bf.lshr.i247, 255
  %arrayidx23.i249 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 1
  %rtuint24.i250 = bitcast %union.rtunion_def* %arrayidx23.i249 to i32*
  %17 = load i32* %rtuint24.i250, align 4, !tbaa !4
  %bf.lshr26.i251 = lshr i32 %bf.load.i235, 16
  %bf.clear27.i252 = and i32 %bf.lshr26.i251, 255
  %call.i253 = tail call i32 @subreg_regno_offset(i32 %14, i32 %bf.clear21.i248, i32 %17, i32 %bf.clear27.i252) #4
  %bf.load28.i254 = load i32* %13, align 8
  %bf.lshr29.i255 = lshr i32 %bf.load28.i254, 16
  %bf.clear30.i256 = and i32 %bf.lshr29.i255, 255
  %idxprom52.i257 = zext i32 %bf.clear30.i256 to i64
  %18 = load i32* %rtuint.i245, align 4, !tbaa !4
  %add.i258 = add i32 %call.i253, -8
  %sub.i259 = add i32 %add.i258, %18
  %idxprom34.i260 = zext i32 %sub.i259 to i64
  %arrayidx36.i261 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i260, i64 %idxprom52.i257
  %19 = load %struct.rtx_def** %arrayidx36.i261, align 8, !tbaa !10
  store %struct.rtx_def* %19, %struct.rtx_def** %pat.addr.0.i234, align 8, !tbaa !10
  br label %while.cond.i

sw.bb37.i265:                                     ; preds = %land.lhs.true.i246, %sw.bb.i243, %for.cond.i237, %for.cond.i237, %for.cond.i237
  %arrayidx39.i263 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0
  %rtx40.i264 = bitcast %union.rtunion_def* %arrayidx39.i263 to %struct.rtx_def**
  br label %for.cond.i237

while.cond.i:                                     ; preds = %if.then.i262, %for.cond.i237, %if.end.i
  %insn.addr.0.i = phi %struct.rtx_def* [ %22, %if.end.i ], [ %insn, %for.cond.i237 ], [ %insn, %if.then.i262 ]
  %20 = load %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %end.i = getelementptr inbounds %struct.basic_block_def* %20, i64 0, i32 1
  %21 = load %struct.rtx_def** %end.i, align 8, !tbaa !47
  %cmp.i267 = icmp eq %struct.rtx_def* %insn.addr.0.i, %21
  br i1 %cmp.i267, label %next_flags_user.exit, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn.addr.0.i, i64 0, i32 1, i64 2
  %rtx.i268 = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx.i268, align 8, !tbaa !10
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load.i269 = load i32* %23, align 8
  %bf.clear.i270 = and i32 %bf.load.i269, 65535
  %idxprom18.i = zext i32 %bf.clear.i270 to i64
  %arrayidx1.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom18.i
  %24 = load i8* %arrayidx1.i, align 1, !tbaa !1
  %cmp2.i = icmp eq i8 %24, 105
  br i1 %cmp2.i, label %land.lhs.true.i272, label %if.end.i

land.lhs.true.i272:                               ; preds = %while.body.i
  %25 = load %struct.rtx_def** @ix86_flags_rtx, align 8, !tbaa !10
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 3
  %rtx6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !10
  %call.i271 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %25, %struct.rtx_def* %26) #4
  %tobool.i = icmp eq i32 %call.i271, 0
  br i1 %tobool.i, label %land.lhs.true.if.end_crit_edge.i, label %next_flags_user.exit

land.lhs.true.if.end_crit_edge.i:                 ; preds = %land.lhs.true.i272
  %bf.load7.pre.i = load i32* %23, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.if.end_crit_edge.i, %while.body.i
  %bf.load7.i = phi i32 [ %bf.load7.pre.i, %land.lhs.true.if.end_crit_edge.i ], [ %bf.load.i269, %while.body.i ]
  %bf.clear8.i = and i32 %bf.load7.i, 65535
  %cmp9.i = icmp eq i32 %bf.clear8.i, 34
  br i1 %cmp9.i, label %next_flags_user.exit, label %while.cond.i

next_flags_user.exit:                             ; preds = %while.cond.i, %land.lhs.true.i272, %if.end.i
  %27 = load %struct.rtx_def** %pat.addr.0.i, align 8, !tbaa !10
  %28 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 0
  %bf.load = load i32* %28, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true30

land.lhs.true:                                    ; preds = %next_flags_user.exit
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx7 to i32*
  %29 = load i32* %rtuint, align 4, !tbaa !4
  %30 = and i32 %29, -8
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %lor.lhs.false, label %land.lhs.true30

lor.lhs.false:                                    ; preds = %land.lhs.true
  %32 = load %struct.rtx_def** %pat.addr.0.i234, align 8, !tbaa !10
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load14 = load i32* %33, align 8
  %bf.clear15 = and i32 %bf.load14, 65535
  %cmp16 = icmp eq i32 %bf.clear15, 61
  br i1 %cmp16, label %land.lhs.true17, label %if.end

land.lhs.true17:                                  ; preds = %lor.lhs.false
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 0
  %rtuint20 = bitcast %union.rtunion_def* %arrayidx19 to i32*
  %34 = load i32* %rtuint20, align 4, !tbaa !4
  %35 = and i32 %34, -8
  %36 = icmp eq i32 %35, 8
  br i1 %36, label %if.end.i280, label %if.end

if.end.i280:                                      ; preds = %land.lhs.true17
  %top.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %37 = load i32* %top.i, align 4, !tbaa !33
  %cmp730.i = icmp sgt i32 %37, -1
  br i1 %cmp730.i, label %for.body.lr.ph.i, label %if.end

for.body.lr.ph.i:                                 ; preds = %if.end.i280
  %38 = sext i32 %37 to i64
  br label %for.body.i

for.cond.i281:                                    ; preds = %for.body.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %39 = trunc i64 %indvars.iv.i to i32
  %cmp7.i = icmp sgt i32 %39, 0
  br i1 %cmp7.i, label %for.body.i, label %if.end

for.body.i:                                       ; preds = %for.cond.i281, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %38, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i281 ]
  %arrayidx9.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i
  %40 = load i8* %arrayidx9.i, align 1, !tbaa !1
  %conv.i = zext i8 %40 to i32
  %cmp13.i = icmp eq i32 %conv.i, %34
  br i1 %cmp13.i, label %get_hard_regnum.exit, label %for.cond.i281

get_hard_regnum.exit:                             ; preds = %for.body.i
  %41 = trunc i64 %indvars.iv.i to i32
  %add.i282 = add i32 %37, 8
  %sub.i283 = sub i32 %add.i282, %41
  %cmp29 = icmp eq i32 %sub.i283, 8
  br i1 %cmp29, label %land.lhs.true30, label %if.end

land.lhs.true30:                                  ; preds = %get_hard_regnum.exit, %land.lhs.true, %next_flags_user.exit
  %call31 = tail call fastcc i32 @swap_rtx_condition(%struct.rtx_def* %insn)
  %tobool = icmp eq i32 %call31, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true30
  %42 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %43 = load %struct.rtx_def** %rtx3, align 8, !tbaa !10
  %44 = getelementptr inbounds [1 x %union.rtunion_def]* %fld, i64 0, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %43 to i64
  store i64 %.c, i64* %44, align 8, !tbaa !10
  %45 = getelementptr inbounds %union.rtunion_def* %arrayidx2, i64 0, i32 0
  %.c226 = ptrtoint %struct.rtx_def* %42 to i64
  store i64 %.c226, i64* %45, align 8, !tbaa !10
  br label %for.cond.i287

for.cond.i287:                                    ; preds = %sw.bb37.i315, %if.then
  %46 = phi %struct.rtx_def* [ %43, %if.then ], [ %.pre, %sw.bb37.i315 ]
  %pat.addr.0.i284 = phi %struct.rtx_def** [ %rtx, %if.then ], [ %rtx40.i314, %sw.bb37.i315 ]
  %47 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 0
  %bf.load.i285 = load i32* %47, align 8
  %bf.clear.i286 = and i32 %bf.load.i285, 65535
  switch i32 %bf.clear.i286, label %for.cond.i320 [
    i32 63, label %sw.bb.i293
    i32 125, label %for.cond.i287.sw.bb37.i315_crit_edge
    i32 126, label %for.cond.i287.sw.bb37.i315_crit_edge598
    i32 123, label %for.cond.i287.sw.bb37.i315_crit_edge599
  ]

for.cond.i287.sw.bb37.i315_crit_edge599:          ; preds = %for.cond.i287
  %arrayidx39.i313.phi.trans.insert602 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 0
  %rtx40.i314.phi.trans.insert603 = bitcast %union.rtunion_def* %arrayidx39.i313.phi.trans.insert602 to %struct.rtx_def**
  %.pre.pre605 = load %struct.rtx_def** %rtx40.i314.phi.trans.insert603, align 8, !tbaa !10
  br label %sw.bb37.i315

for.cond.i287.sw.bb37.i315_crit_edge598:          ; preds = %for.cond.i287
  %arrayidx39.i313.phi.trans.insert600 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 0
  %rtx40.i314.phi.trans.insert601 = bitcast %union.rtunion_def* %arrayidx39.i313.phi.trans.insert600 to %struct.rtx_def**
  %.pre.pre604 = load %struct.rtx_def** %rtx40.i314.phi.trans.insert601, align 8, !tbaa !10
  br label %sw.bb37.i315

for.cond.i287.sw.bb37.i315_crit_edge:             ; preds = %for.cond.i287
  %arrayidx39.i313.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 0
  %rtx40.i314.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx39.i313.phi.trans.insert to %struct.rtx_def**
  %.pre.pre = load %struct.rtx_def** %rtx40.i314.phi.trans.insert, align 8, !tbaa !10
  br label %sw.bb37.i315

sw.bb.i293:                                       ; preds = %for.cond.i287
  %fld.i288 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1
  %rtx.i289 = bitcast [1 x %union.rtunion_def]* %fld.i288 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx.i289, align 8, !tbaa !10
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load1.i290 = load i32* %49, align 8
  %bf.clear2.i291 = and i32 %bf.load1.i290, 65535
  %cmp.i292 = icmp eq i32 %bf.clear2.i291, 61
  br i1 %cmp.i292, label %land.lhs.true.i296, label %sw.bb37.i315

land.lhs.true.i296:                               ; preds = %sw.bb.i293
  %arrayidx7.i294 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 1, i64 0
  %rtuint.i295 = bitcast %union.rtunion_def* %arrayidx7.i294 to i32*
  %50 = load i32* %rtuint.i295, align 4, !tbaa !4
  %51 = and i32 %50, -8
  %52 = icmp eq i32 %51, 8
  br i1 %52, label %if.then.i312, label %sw.bb37.i315

if.then.i312:                                     ; preds = %land.lhs.true.i296
  %bf.lshr.i297 = lshr i32 %bf.load1.i290, 16
  %bf.clear21.i298 = and i32 %bf.lshr.i297, 255
  %arrayidx23.i299 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 1
  %rtuint24.i300 = bitcast %union.rtunion_def* %arrayidx23.i299 to i32*
  %53 = load i32* %rtuint24.i300, align 4, !tbaa !4
  %bf.lshr26.i301 = lshr i32 %bf.load.i285, 16
  %bf.clear27.i302 = and i32 %bf.lshr26.i301, 255
  %call.i303 = tail call i32 @subreg_regno_offset(i32 %50, i32 %bf.clear21.i298, i32 %53, i32 %bf.clear27.i302) #4
  %bf.load28.i304 = load i32* %49, align 8
  %bf.lshr29.i305 = lshr i32 %bf.load28.i304, 16
  %bf.clear30.i306 = and i32 %bf.lshr29.i305, 255
  %idxprom52.i307 = zext i32 %bf.clear30.i306 to i64
  %54 = load i32* %rtuint.i295, align 4, !tbaa !4
  %add.i308 = add i32 %call.i303, -8
  %sub.i309 = add i32 %add.i308, %54
  %idxprom34.i310 = zext i32 %sub.i309 to i64
  %arrayidx36.i311 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i310, i64 %idxprom52.i307
  %55 = load %struct.rtx_def** %arrayidx36.i311, align 8, !tbaa !10
  store %struct.rtx_def* %55, %struct.rtx_def** %pat.addr.0.i284, align 8, !tbaa !10
  br label %for.cond.i320

sw.bb37.i315:                                     ; preds = %for.cond.i287.sw.bb37.i315_crit_edge599, %for.cond.i287.sw.bb37.i315_crit_edge598, %for.cond.i287.sw.bb37.i315_crit_edge, %land.lhs.true.i296, %sw.bb.i293
  %.pre = phi %struct.rtx_def* [ %.pre.pre605, %for.cond.i287.sw.bb37.i315_crit_edge599 ], [ %.pre.pre604, %for.cond.i287.sw.bb37.i315_crit_edge598 ], [ %.pre.pre, %for.cond.i287.sw.bb37.i315_crit_edge ], [ %48, %land.lhs.true.i296 ], [ %48, %sw.bb.i293 ]
  %arrayidx39.i313 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 0
  %rtx40.i314 = bitcast %union.rtunion_def* %arrayidx39.i313 to %struct.rtx_def**
  br label %for.cond.i287

for.cond.i320:                                    ; preds = %if.then.i312, %for.cond.i287, %sw.bb37.i348
  %pat.addr.0.i317 = phi %struct.rtx_def** [ %rtx40.i347, %sw.bb37.i348 ], [ %rtx3, %for.cond.i287 ], [ %rtx3, %if.then.i312 ]
  %56 = load %struct.rtx_def** %pat.addr.0.i317, align 8, !tbaa !10
  %57 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 0
  %bf.load.i318 = load i32* %57, align 8
  %bf.clear.i319 = and i32 %bf.load.i318, 65535
  switch i32 %bf.clear.i319, label %get_true_reg.exit349 [
    i32 63, label %sw.bb.i326
    i32 125, label %sw.bb37.i348
    i32 126, label %sw.bb37.i348
    i32 123, label %sw.bb37.i348
  ]

sw.bb.i326:                                       ; preds = %for.cond.i320
  %fld.i321 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1
  %rtx.i322 = bitcast [1 x %union.rtunion_def]* %fld.i321 to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx.i322, align 8, !tbaa !10
  %59 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 0
  %bf.load1.i323 = load i32* %59, align 8
  %bf.clear2.i324 = and i32 %bf.load1.i323, 65535
  %cmp.i325 = icmp eq i32 %bf.clear2.i324, 61
  br i1 %cmp.i325, label %land.lhs.true.i329, label %sw.bb37.i348

land.lhs.true.i329:                               ; preds = %sw.bb.i326
  %arrayidx7.i327 = getelementptr inbounds %struct.rtx_def* %58, i64 0, i32 1, i64 0
  %rtuint.i328 = bitcast %union.rtunion_def* %arrayidx7.i327 to i32*
  %60 = load i32* %rtuint.i328, align 4, !tbaa !4
  %61 = and i32 %60, -8
  %62 = icmp eq i32 %61, 8
  br i1 %62, label %if.then.i345, label %sw.bb37.i348

if.then.i345:                                     ; preds = %land.lhs.true.i329
  %bf.lshr.i330 = lshr i32 %bf.load1.i323, 16
  %bf.clear21.i331 = and i32 %bf.lshr.i330, 255
  %arrayidx23.i332 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 1
  %rtuint24.i333 = bitcast %union.rtunion_def* %arrayidx23.i332 to i32*
  %63 = load i32* %rtuint24.i333, align 4, !tbaa !4
  %bf.lshr26.i334 = lshr i32 %bf.load.i318, 16
  %bf.clear27.i335 = and i32 %bf.lshr26.i334, 255
  %call.i336 = tail call i32 @subreg_regno_offset(i32 %60, i32 %bf.clear21.i331, i32 %63, i32 %bf.clear27.i335) #4
  %bf.load28.i337 = load i32* %59, align 8
  %bf.lshr29.i338 = lshr i32 %bf.load28.i337, 16
  %bf.clear30.i339 = and i32 %bf.lshr29.i338, 255
  %idxprom52.i340 = zext i32 %bf.clear30.i339 to i64
  %64 = load i32* %rtuint.i328, align 4, !tbaa !4
  %add.i341 = add i32 %call.i336, -8
  %sub.i342 = add i32 %add.i341, %64
  %idxprom34.i343 = zext i32 %sub.i342 to i64
  %arrayidx36.i344 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i343, i64 %idxprom52.i340
  %65 = load %struct.rtx_def** %arrayidx36.i344, align 8, !tbaa !10
  store %struct.rtx_def* %65, %struct.rtx_def** %pat.addr.0.i317, align 8, !tbaa !10
  br label %get_true_reg.exit349

sw.bb37.i348:                                     ; preds = %land.lhs.true.i329, %sw.bb.i326, %for.cond.i320, %for.cond.i320, %for.cond.i320
  %arrayidx39.i346 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 0
  %rtx40.i347 = bitcast %union.rtunion_def* %arrayidx39.i346 to %struct.rtx_def**
  br label %for.cond.i320

get_true_reg.exit349:                             ; preds = %for.cond.i320, %if.then.i345
  %arrayidx53 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx53 to i32*
  store i32 -1, i32* %rtint, align 4, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %for.cond.i281, %if.end.i280, %land.lhs.true30, %get_true_reg.exit349, %get_hard_regnum.exit, %land.lhs.true17, %lor.lhs.false
  %src2.0 = phi %struct.rtx_def** [ %pat.addr.0.i317, %get_true_reg.exit349 ], [ %pat.addr.0.i234, %land.lhs.true30 ], [ %pat.addr.0.i234, %get_hard_regnum.exit ], [ %pat.addr.0.i234, %land.lhs.true17 ], [ %pat.addr.0.i234, %lor.lhs.false ], [ %pat.addr.0.i234, %if.end.i280 ], [ %pat.addr.0.i234, %for.cond.i281 ]
  %src1.0 = phi %struct.rtx_def** [ %pat.addr.0.i284, %get_true_reg.exit349 ], [ %pat.addr.0.i, %land.lhs.true30 ], [ %pat.addr.0.i, %get_hard_regnum.exit ], [ %pat.addr.0.i, %land.lhs.true17 ], [ %pat.addr.0.i, %lor.lhs.false ], [ %pat.addr.0.i, %if.end.i280 ], [ %pat.addr.0.i, %for.cond.i281 ]
  %66 = load %struct.rtx_def** %src1.0, align 8, !tbaa !10
  %arrayidx55 = getelementptr inbounds %struct.rtx_def* %66, i64 0, i32 1, i64 0
  %rtuint56 = bitcast %union.rtunion_def* %arrayidx55 to i32*
  %67 = load i32* %rtuint56, align 4, !tbaa !4
  %call57 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %67) #4
  %68 = load %struct.rtx_def** %src2.0, align 8, !tbaa !10
  %69 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 0
  %bf.load58 = load i32* %69, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp eq i32 %bf.clear59, 61
  br i1 %cmp60, label %land.lhs.true61, label %if.end76

land.lhs.true61:                                  ; preds = %if.end
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtuint64 = bitcast %union.rtunion_def* %arrayidx63 to i32*
  %70 = load i32* %rtuint64, align 4, !tbaa !4
  %71 = and i32 %70, -8
  %72 = icmp eq i32 %71, 8
  br i1 %72, label %if.then71, label %if.end76

if.then71:                                        ; preds = %land.lhs.true61
  %call75 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %70) #4
  br label %if.end76

if.end76:                                         ; preds = %if.end, %land.lhs.true61, %if.then71
  %src2_note.0 = phi %struct.rtx_def* [ %call75, %if.then71 ], [ null, %land.lhs.true61 ], [ null, %if.end ]
  %73 = load %struct.rtx_def** %src1.0, align 8, !tbaa !10
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %73)
  %74 = load %struct.rtx_def** %src1.0, align 8, !tbaa !10
  %75 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 0
  %bf.load.i350 = load i32* %75, align 8
  %bf.clear.i351 = and i32 %bf.load.i350, 65535
  %cmp3.i = icmp eq i32 %bf.clear.i351, 61
  br i1 %cmp3.i, label %land.lhs.true.i354, label %if.then.i355

land.lhs.true.i354:                               ; preds = %if.end76
  %arrayidx.i352 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 1, i64 0
  %rtuint.i353 = bitcast %union.rtunion_def* %arrayidx.i352 to i32*
  %76 = load i32* %rtuint.i353, align 4, !tbaa !4
  %77 = and i32 %76, -8
  %78 = icmp eq i32 %77, 8
  br i1 %78, label %if.end.i357, label %if.then.i355

if.then.i355:                                     ; preds = %land.lhs.true.i354, %if.end76
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i357:                                      ; preds = %land.lhs.true.i354
  %bf.lshr.i356 = lshr i32 %bf.load.i350, 16
  %bf.clear11.i = and i32 %bf.lshr.i356, 255
  %idxprom27.i = zext i32 %bf.clear11.i to i64
  %arrayidx12.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i
  %79 = load i32* %arrayidx12.i, align 4, !tbaa !1
  switch i32 %79, label %sw.default.i [
    i32 2, label %replace_reg.exit
    i32 6, label %replace_reg.exit
  ]

sw.default.i:                                     ; preds = %if.end.i357
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit:                                 ; preds = %if.end.i357, %if.end.i357
  %arrayidx19.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i
  %80 = load %struct.rtx_def** %arrayidx19.i, align 8, !tbaa !10
  store %struct.rtx_def* %80, %struct.rtx_def** %src1.0, align 8, !tbaa !10
  %81 = load %struct.rtx_def** %src2.0, align 8, !tbaa !10
  %82 = getelementptr inbounds %struct.rtx_def* %81, i64 0, i32 0
  %bf.load77 = load i32* %82, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 61
  br i1 %cmp79, label %land.lhs.true80, label %if.end92

land.lhs.true80:                                  ; preds = %replace_reg.exit
  %arrayidx82 = getelementptr inbounds %struct.rtx_def* %81, i64 0, i32 1, i64 0
  %rtuint83 = bitcast %union.rtunion_def* %arrayidx82 to i32*
  %83 = load i32* %rtuint83, align 4, !tbaa !4
  %84 = and i32 %83, -8
  %85 = icmp eq i32 %84, 8
  br i1 %85, label %if.end.i367, label %if.end92

if.end.i367:                                      ; preds = %land.lhs.true80
  %top.i365 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %86 = load i32* %top.i365, align 4, !tbaa !33
  %cmp730.i366 = icmp sgt i32 %86, -1
  br i1 %cmp730.i366, label %for.body.lr.ph.i368, label %if.then.i388

for.body.lr.ph.i368:                              ; preds = %if.end.i367
  %87 = sext i32 %86 to i64
  br label %for.body.i376

for.cond.i371:                                    ; preds = %for.body.i376
  %indvars.iv.next.i369 = add nsw i64 %indvars.iv.i372, -1
  %88 = trunc i64 %indvars.iv.i372 to i32
  %cmp7.i370 = icmp sgt i32 %88, 0
  br i1 %cmp7.i370, label %for.body.i376, label %if.then.i388

for.body.i376:                                    ; preds = %for.cond.i371, %for.body.lr.ph.i368
  %indvars.iv.i372 = phi i64 [ %87, %for.body.lr.ph.i368 ], [ %indvars.iv.next.i369, %for.cond.i371 ]
  %arrayidx9.i373 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i372
  %89 = load i8* %arrayidx9.i373, align 1, !tbaa !1
  %conv.i374 = zext i8 %89 to i32
  %cmp13.i375 = icmp eq i32 %conv.i374, %83
  br i1 %cmp13.i375, label %get_hard_regnum.exit381, label %for.cond.i371

get_hard_regnum.exit381:                          ; preds = %for.body.i376
  %90 = trunc i64 %indvars.iv.i372 to i32
  %add.i377 = sub i32 8, %90
  %sub.i378 = add i32 %add.i377, %86
  %91 = and i32 %sub.i378, -8
  %92 = icmp eq i32 %91, 8
  br i1 %92, label %if.end.i393, label %if.then.i388

if.then.i388:                                     ; preds = %for.cond.i371, %if.end.i367, %get_hard_regnum.exit381
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i393:                                      ; preds = %get_hard_regnum.exit381
  %bf.lshr.i389 = lshr i32 %bf.load77, 16
  %bf.clear11.i390 = and i32 %bf.lshr.i389, 255
  %idxprom27.i391 = zext i32 %bf.clear11.i390 to i64
  %arrayidx12.i392 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i391
  %93 = load i32* %arrayidx12.i392, align 4, !tbaa !1
  switch i32 %93, label %sw.default.i394 [
    i32 2, label %replace_reg.exit397
    i32 6, label %replace_reg.exit397
  ]

sw.default.i394:                                  ; preds = %if.end.i393
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit397:                              ; preds = %if.end.i393, %if.end.i393
  %sub.i395 = add nsw i32 %sub.i378, -8
  %idxprom17.i = sext i32 %sub.i395 to i64
  %arrayidx19.i396 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom17.i, i64 %idxprom27.i391
  %94 = load %struct.rtx_def** %arrayidx19.i396, align 8, !tbaa !10
  store %struct.rtx_def* %94, %struct.rtx_def** %src2.0, align 8, !tbaa !10
  br label %if.end92

if.end92:                                         ; preds = %replace_reg.exit397, %land.lhs.true80, %replace_reg.exit
  %tobool93 = icmp ne %struct.rtx_def* %call57, null
  br i1 %tobool93, label %if.then94, label %if.end104

if.then94:                                        ; preds = %if.end92
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %call57, i64 0, i32 1, i64 0
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %95 = load %struct.rtx_def** %rtx97, align 8, !tbaa !10
  %arrayidx99 = getelementptr inbounds %struct.rtx_def* %95, i64 0, i32 1, i64 0
  %rtuint100 = bitcast %union.rtunion_def* %arrayidx99 to i32*
  %96 = load i32* %rtuint100, align 4, !tbaa !4
  %top1.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %97 = load i32* %top1.i, align 4, !tbaa !33
  %sh_prom.i = zext i32 %96 to i64
  %shl.i = shl i64 1, %sh_prom.i
  %neg.i = xor i64 %shl.i, -1
  %reg_set.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %98 = load i64* %reg_set.i, align 8, !tbaa !34
  %and.i = and i64 %98, %neg.i
  store i64 %and.i, i64* %reg_set.i, align 8, !tbaa !34
  %dec.i = add nsw i32 %97, -1
  store i32 %dec.i, i32* %top1.i, align 4, !tbaa !33
  %idxprom.i = sext i32 %97 to i64
  %arrayidx.i398 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom.i
  %99 = load i8* %arrayidx.i398, align 1, !tbaa !1
  %conv.i399 = zext i8 %99 to i32
  %cmp.i400 = icmp ne i32 %conv.i399, %96
  %cmp547.i = icmp sgt i32 %97, 0
  %or.cond.i = and i1 %cmp.i400, %cmp547.i
  br i1 %or.cond.i, label %for.body.i403, label %pop_stack.exit

for.cond.i401:                                    ; preds = %for.body.i403
  %cmp5.i = icmp sgt i32 %101, 0
  br i1 %cmp5.i, label %for.body.i403, label %pop_stack.exit

for.body.i403:                                    ; preds = %if.then94, %for.cond.i401
  %indvars.iv51.in.i = phi i64 [ %indvars.iv51.i, %for.cond.i401 ], [ %idxprom.i, %if.then94 ]
  %indvars.iv51.i = add i64 %indvars.iv51.in.i, -1
  %arrayidx9.i402 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv51.i
  %100 = load i8* %arrayidx9.i402, align 1, !tbaa !1
  %conv10.i = zext i8 %100 to i32
  %cmp11.i = icmp eq i32 %conv10.i, %96
  %101 = trunc i64 %indvars.iv51.i to i32
  br i1 %cmp11.i, label %for.cond14.preheader.i, label %for.cond.i401

for.cond14.preheader.i:                           ; preds = %for.body.i403
  %cmp1545.i = icmp slt i32 %101, %97
  br i1 %cmp1545.i, label %for.body17.lr.ph.i, label %pop_stack.exit

for.body17.lr.ph.i:                               ; preds = %for.cond14.preheader.i
  %sext.i = shl i64 %indvars.iv51.i, 32
  %102 = ashr exact i64 %sext.i, 32
  %103 = trunc i64 %indvars.iv51.in.i to i32
  %104 = icmp sgt i32 %97, %103
  %smax = select i1 %104, i32 %97, i32 %103
  %105 = sub i32 %smax, %103
  %106 = zext i32 %105 to i64
  %107 = add i64 %106, 1
  %end.idx = add i64 %107, %102
  %n.vec = and i64 %107, -4
  %end.idx.rnd.down = add i64 %n.vec, %102
  %cmp.zero = icmp eq i64 %n.vec, 0
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %for.body17.lr.ph.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ %102, %for.body17.lr.ph.i ]
  %108 = add i64 %index, 1
  %109 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %108
  %110 = bitcast i8* %109 to <4 x i8>*
  %wide.load = load <4 x i8>* %110, align 1
  %111 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %index
  %112 = bitcast i8* %111 to <4 x i8>*
  store <4 x i8> %wide.load, <4 x i8>* %112, align 1
  %index.next = add i64 %index, 4
  %113 = icmp eq i64 %index.next, %end.idx.rnd.down
  br i1 %113, label %middle.block, label %vector.body, !llvm.loop !53

middle.block:                                     ; preds = %vector.body, %for.body17.lr.ph.i
  %resume.val = phi i64 [ %102, %for.body17.lr.ph.i ], [ %end.idx.rnd.down, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %pop_stack.exit.loopexit, label %for.body17.i

for.body17.i:                                     ; preds = %middle.block, %for.body17.i
  %indvars.iv.i404 = phi i64 [ %indvars.iv.next.i405, %for.body17.i ], [ %resume.val, %middle.block ]
  %indvars.iv.next.i405 = add nsw i64 %indvars.iv.i404, 1
  %arrayidx20.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.next.i405
  %114 = load i8* %arrayidx20.i, align 1, !tbaa !1
  %arrayidx23.i406 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i404
  store i8 %114, i8* %arrayidx23.i406, align 1, !tbaa !1
  %115 = trunc i64 %indvars.iv.next.i405 to i32
  %cmp15.i = icmp slt i32 %115, %97
  br i1 %cmp15.i, label %for.body17.i, label %pop_stack.exit.loopexit, !llvm.loop !56

pop_stack.exit.loopexit:                          ; preds = %middle.block, %for.body17.i
  %.pre607 = load %struct.rtx_def** %rtx97, align 8, !tbaa !10
  br label %pop_stack.exit

pop_stack.exit:                                   ; preds = %for.cond.i401, %pop_stack.exit.loopexit, %if.then94, %for.cond14.preheader.i
  %116 = phi %struct.rtx_def* [ %.pre607, %pop_stack.exit.loopexit ], [ %95, %if.then94 ], [ %95, %for.cond14.preheader.i ], [ %95, %for.cond.i401 ]
  %117 = getelementptr inbounds %struct.rtx_def* %116, i64 0, i32 0
  %bf.load.i407 = load i32* %117, align 8
  %bf.clear.i408 = and i32 %bf.load.i407, 65535
  %cmp3.i409 = icmp eq i32 %bf.clear.i408, 61
  br i1 %cmp3.i409, label %land.lhs.true.i413, label %if.then.i414

land.lhs.true.i413:                               ; preds = %pop_stack.exit
  %arrayidx.i411 = getelementptr inbounds %struct.rtx_def* %116, i64 0, i32 1, i64 0
  %rtuint.i412 = bitcast %union.rtunion_def* %arrayidx.i411 to i32*
  %118 = load i32* %rtuint.i412, align 4, !tbaa !4
  %119 = and i32 %118, -8
  %120 = icmp eq i32 %119, 8
  br i1 %120, label %if.end.i419, label %if.then.i414

if.then.i414:                                     ; preds = %land.lhs.true.i413, %pop_stack.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i419:                                      ; preds = %land.lhs.true.i413
  %bf.lshr.i415 = lshr i32 %bf.load.i407, 16
  %bf.clear11.i416 = and i32 %bf.lshr.i415, 255
  %idxprom27.i417 = zext i32 %bf.clear11.i416 to i64
  %arrayidx12.i418 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i417
  %121 = load i32* %arrayidx12.i418, align 4, !tbaa !1
  switch i32 %121, label %sw.default.i420 [
    i32 2, label %replace_reg.exit422
    i32 6, label %replace_reg.exit422
  ]

sw.default.i420:                                  ; preds = %if.end.i419
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit422:                              ; preds = %if.end.i419, %if.end.i419
  %arrayidx19.i421 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 %idxprom27.i417
  %122 = load %struct.rtx_def** %arrayidx19.i421, align 8, !tbaa !10
  %123 = getelementptr inbounds %union.rtunion_def* %arrayidx96, i64 0, i32 0
  %.c512 = ptrtoint %struct.rtx_def* %122 to i64
  store i64 %.c512, i64* %123, align 8, !tbaa !10
  br label %if.end104

if.end104:                                        ; preds = %replace_reg.exit422, %if.end92
  %tobool105 = icmp eq %struct.rtx_def* %src2_note.0, null
  br i1 %tobool105, label %if.end172, label %land.lhs.true106

land.lhs.true106:                                 ; preds = %if.end104
  %124 = load %struct.rtx_def** %src1.0, align 8, !tbaa !10
  %125 = getelementptr inbounds %struct.rtx_def* %124, i64 0, i32 0
  %bf.load107 = load i32* %125, align 8
  %bf.clear108 = and i32 %bf.load107, 65535
  %cmp109 = icmp eq i32 %bf.clear108, 61
  br i1 %cmp109, label %land.lhs.true110, label %if.then142

land.lhs.true110:                                 ; preds = %land.lhs.true106
  %arrayidx112 = getelementptr inbounds %struct.rtx_def* %124, i64 0, i32 1, i64 0
  %rtuint113 = bitcast %union.rtunion_def* %arrayidx112 to i32*
  %126 = load i32* %rtuint113, align 4, !tbaa !4
  %127 = and i32 %126, -8
  %128 = icmp eq i32 %127, 8
  br i1 %128, label %land.lhs.true120, label %if.then142

land.lhs.true120:                                 ; preds = %land.lhs.true110
  %129 = load %struct.rtx_def** %src2.0, align 8, !tbaa !10
  %130 = getelementptr inbounds %struct.rtx_def* %129, i64 0, i32 0
  %bf.load121 = load i32* %130, align 8
  %bf.clear122 = and i32 %bf.load121, 65535
  %cmp123 = icmp eq i32 %bf.clear122, 61
  br i1 %cmp123, label %land.lhs.true124, label %if.then142

land.lhs.true124:                                 ; preds = %land.lhs.true120
  %arrayidx126 = getelementptr inbounds %struct.rtx_def* %129, i64 0, i32 1, i64 0
  %rtuint127 = bitcast %union.rtunion_def* %arrayidx126 to i32*
  %131 = load i32* %rtuint127, align 4, !tbaa !4
  %132 = and i32 %131, -8
  %133 = icmp eq i32 %132, 8
  %cmp141 = icmp eq i32 %126, %131
  %or.cond233 = and i1 %133, %cmp141
  br i1 %or.cond233, label %if.end172, label %if.then142

if.then142:                                       ; preds = %land.lhs.true124, %land.lhs.true120, %land.lhs.true110, %land.lhs.true106
  %arrayidx144 = getelementptr inbounds %struct.rtx_def* %src2_note.0, i64 0, i32 1, i64 0
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %134 = load %struct.rtx_def** %rtx145, align 8, !tbaa !10
  %135 = getelementptr inbounds %struct.rtx_def* %134, i64 0, i32 0
  %bf.load.i423 = load i32* %135, align 8
  %bf.clear.i424 = and i32 %bf.load.i423, 65535
  %cmp.i425 = icmp eq i32 %bf.clear.i424, 61
  br i1 %cmp.i425, label %land.lhs.true.i428, label %if.then.i429

land.lhs.true.i428:                               ; preds = %if.then142
  %arrayidx.i426 = getelementptr inbounds %struct.rtx_def* %134, i64 0, i32 1, i64 0
  %rtuint.i427 = bitcast %union.rtunion_def* %arrayidx.i426 to i32*
  %136 = load i32* %rtuint.i427, align 4, !tbaa !4
  %137 = and i32 %136, -8
  %138 = icmp eq i32 %137, 8
  br i1 %138, label %if.end.i432, label %if.then.i429

if.then.i429:                                     ; preds = %land.lhs.true.i428, %if.then142
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i432:                                      ; preds = %land.lhs.true.i428
  %top.i430 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %139 = load i32* %top.i430, align 4, !tbaa !33
  %cmp730.i431 = icmp sgt i32 %139, -1
  br i1 %cmp730.i431, label %for.body.lr.ph.i433, label %if.else160

for.body.lr.ph.i433:                              ; preds = %if.end.i432
  %140 = sext i32 %139 to i64
  br label %for.body.i441

for.cond.i436:                                    ; preds = %for.body.i441
  %indvars.iv.next.i434 = add nsw i64 %indvars.iv.i437, -1
  %141 = trunc i64 %indvars.iv.i437 to i32
  %cmp7.i435 = icmp sgt i32 %141, 0
  br i1 %cmp7.i435, label %for.body.i441, label %if.else160

for.body.i441:                                    ; preds = %for.cond.i436, %for.body.lr.ph.i433
  %indvars.iv.i437 = phi i64 [ %140, %for.body.lr.ph.i433 ], [ %indvars.iv.next.i434, %for.cond.i436 ]
  %arrayidx9.i438 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i437
  %142 = load i8* %arrayidx9.i438, align 1, !tbaa !1
  %conv.i439 = zext i8 %142 to i32
  %cmp13.i440 = icmp eq i32 %conv.i439, %136
  br i1 %cmp13.i440, label %get_hard_regnum.exit446, label %for.cond.i436

get_hard_regnum.exit446:                          ; preds = %for.body.i441
  %143 = trunc i64 %indvars.iv.i437 to i32
  %add.i442 = add i32 %139, 8
  %sub.i443 = sub i32 %add.i442, %143
  %cmp147 = icmp eq i32 %sub.i443, 8
  %or.cond = and i1 %cmp147, %tobool93
  br i1 %or.cond, label %if.then150, label %if.else160

if.then150:                                       ; preds = %get_hard_regnum.exit446
  %sh_prom.i448 = zext i32 %136 to i64
  %shl.i449 = shl i64 1, %sh_prom.i448
  %neg.i450 = xor i64 %shl.i449, -1
  %reg_set.i451 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 1
  %144 = load i64* %reg_set.i451, align 8, !tbaa !34
  %and.i452 = and i64 %144, %neg.i450
  store i64 %and.i452, i64* %reg_set.i451, align 8, !tbaa !34
  %dec.i453 = add nsw i32 %139, -1
  store i32 %dec.i453, i32* %top.i430, align 4, !tbaa !33
  %arrayidx.i455 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %140
  %145 = load i8* %arrayidx.i455, align 1, !tbaa !1
  %conv.i456 = zext i8 %145 to i32
  %cmp.i457 = icmp ne i32 %conv.i456, %136
  %cmp547.i458 = icmp sgt i32 %139, 0
  %or.cond.i459 = and i1 %cmp.i457, %cmp547.i458
  br i1 %or.cond.i459, label %for.body.i467, label %pop_stack.exit478

for.cond.i461:                                    ; preds = %for.body.i467
  %cmp5.i460 = icmp sgt i32 %147, 0
  br i1 %cmp5.i460, label %for.body.i467, label %pop_stack.exit478

for.body.i467:                                    ; preds = %if.then150, %for.cond.i461
  %indvars.iv51.in.i462 = phi i64 [ %indvars.iv51.i463, %for.cond.i461 ], [ %140, %if.then150 ]
  %indvars.iv51.i463 = add i64 %indvars.iv51.in.i462, -1
  %arrayidx9.i464 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv51.i463
  %146 = load i8* %arrayidx9.i464, align 1, !tbaa !1
  %conv10.i465 = zext i8 %146 to i32
  %cmp11.i466 = icmp eq i32 %conv10.i465, %136
  %147 = trunc i64 %indvars.iv51.i463 to i32
  br i1 %cmp11.i466, label %for.cond14.preheader.i469, label %for.cond.i461

for.cond14.preheader.i469:                        ; preds = %for.body.i467
  %cmp1545.i468 = icmp slt i32 %147, %139
  br i1 %cmp1545.i468, label %for.body17.lr.ph.i471, label %pop_stack.exit478

for.body17.lr.ph.i471:                            ; preds = %for.cond14.preheader.i469
  %sext.i470 = shl i64 %indvars.iv51.i463, 32
  %148 = ashr exact i64 %sext.i470, 32
  %149 = trunc i64 %indvars.iv51.in.i462 to i32
  %150 = icmp sgt i32 %139, %149
  %smax653 = select i1 %150, i32 %139, i32 %149
  %151 = sub i32 %smax653, %149
  %152 = zext i32 %151 to i64
  %153 = add i64 %152, 1
  %end.idx659 = add i64 %153, %148
  %n.vec661 = and i64 %153, -4
  %end.idx.rnd.down662 = add i64 %n.vec661, %148
  %cmp.zero663 = icmp eq i64 %n.vec661, 0
  br i1 %cmp.zero663, label %middle.block656, label %vector.body655

vector.body655:                                   ; preds = %for.body17.lr.ph.i471, %vector.body655
  %index658 = phi i64 [ %index.next667, %vector.body655 ], [ %148, %for.body17.lr.ph.i471 ]
  %154 = add i64 %index658, 1
  %155 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %154
  %156 = bitcast i8* %155 to <4 x i8>*
  %wide.load671 = load <4 x i8>* %156, align 1
  %157 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %index658
  %158 = bitcast i8* %157 to <4 x i8>*
  store <4 x i8> %wide.load671, <4 x i8>* %158, align 1
  %index.next667 = add i64 %index658, 4
  %159 = icmp eq i64 %index.next667, %end.idx.rnd.down662
  br i1 %159, label %middle.block656, label %vector.body655, !llvm.loop !57

middle.block656:                                  ; preds = %vector.body655, %for.body17.lr.ph.i471
  %resume.val664 = phi i64 [ %148, %for.body17.lr.ph.i471 ], [ %end.idx.rnd.down662, %vector.body655 ]
  %cmp.n666 = icmp eq i64 %end.idx659, %resume.val664
  br i1 %cmp.n666, label %pop_stack.exit478.loopexit, label %for.body17.i477

for.body17.i477:                                  ; preds = %middle.block656, %for.body17.i477
  %indvars.iv.i472 = phi i64 [ %indvars.iv.next.i473, %for.body17.i477 ], [ %resume.val664, %middle.block656 ]
  %indvars.iv.next.i473 = add nsw i64 %indvars.iv.i472, 1
  %arrayidx20.i474 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.next.i473
  %160 = load i8* %arrayidx20.i474, align 1, !tbaa !1
  %arrayidx23.i475 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i472
  store i8 %160, i8* %arrayidx23.i475, align 1, !tbaa !1
  %161 = trunc i64 %indvars.iv.next.i473 to i32
  %cmp15.i476 = icmp slt i32 %161, %139
  br i1 %cmp15.i476, label %for.body17.i477, label %pop_stack.exit478.loopexit, !llvm.loop !58

pop_stack.exit478.loopexit:                       ; preds = %middle.block656, %for.body17.i477
  %.pre608 = load %struct.rtx_def** %rtx145, align 8, !tbaa !10
  br label %pop_stack.exit478

pop_stack.exit478:                                ; preds = %for.cond.i461, %pop_stack.exit478.loopexit, %if.then150, %for.cond14.preheader.i469
  %162 = phi %struct.rtx_def* [ %.pre608, %pop_stack.exit478.loopexit ], [ %134, %if.then150 ], [ %134, %for.cond14.preheader.i469 ], [ %134, %for.cond.i461 ]
  %163 = getelementptr inbounds %struct.rtx_def* %162, i64 0, i32 0
  %bf.load.i479 = load i32* %163, align 8
  %bf.clear.i480 = and i32 %bf.load.i479, 65535
  %cmp3.i481 = icmp eq i32 %bf.clear.i480, 61
  br i1 %cmp3.i481, label %land.lhs.true.i485, label %if.then.i486

land.lhs.true.i485:                               ; preds = %pop_stack.exit478
  %arrayidx.i483 = getelementptr inbounds %struct.rtx_def* %162, i64 0, i32 1, i64 0
  %rtuint.i484 = bitcast %union.rtunion_def* %arrayidx.i483 to i32*
  %164 = load i32* %rtuint.i484, align 4, !tbaa !4
  %165 = and i32 %164, -8
  %166 = icmp eq i32 %165, 8
  br i1 %166, label %if.end.i491, label %if.then.i486

if.then.i486:                                     ; preds = %land.lhs.true.i485, %pop_stack.exit478
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

if.end.i491:                                      ; preds = %land.lhs.true.i485
  %bf.lshr.i487 = lshr i32 %bf.load.i479, 16
  %bf.clear11.i488 = and i32 %bf.lshr.i487, 255
  %idxprom27.i489 = zext i32 %bf.clear11.i488 to i64
  %arrayidx12.i490 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom27.i489
  %167 = load i32* %arrayidx12.i490, align 4, !tbaa !1
  switch i32 %167, label %sw.default.i492 [
    i32 2, label %replace_reg.exit494
    i32 6, label %replace_reg.exit494
  ]

sw.default.i492:                                  ; preds = %if.end.i491
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 855, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.replace_reg, i64 0, i64 0)) #6
  unreachable

replace_reg.exit494:                              ; preds = %if.end.i491, %if.end.i491
  %arrayidx19.i493 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 1, i64 %idxprom27.i489
  %168 = load %struct.rtx_def** %arrayidx19.i493, align 8, !tbaa !10
  %169 = getelementptr inbounds %union.rtunion_def* %arrayidx144, i64 0, i32 0
  %.c511 = ptrtoint %struct.rtx_def* %168 to i64
  store i64 %.c511, i64* %169, align 8, !tbaa !10
  br label %if.end172

if.else160:                                       ; preds = %for.cond.i436, %if.end.i432, %get_hard_regnum.exit446
  %arrayidx.i495 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx193.i = bitcast %union.rtunion_def* %arrayidx.i495 to %struct.rtx_def**
  %this.04.i = load %struct.rtx_def** %rtx193.i, align 8
  %tobool5.i = icmp eq %struct.rtx_def* %this.04.i, null
  br i1 %tobool5.i, label %for.end.i, label %for.body.i499

for.body.i499:                                    ; preds = %if.else160, %if.else.i
  %this.07.i = phi %struct.rtx_def* [ %this.0.i, %if.else.i ], [ %this.04.i, %if.else160 ]
  %arrayidx18.sink6.i = phi %union.rtunion_def* [ %arrayidx18.i, %if.else.i ], [ %arrayidx.i495, %if.else160 ]
  %170 = getelementptr inbounds %struct.rtx_def* %this.07.i, i64 0, i32 0
  %bf.load.i496 = load i32* %170, align 8
  %bf.clear.i497 = and i32 %bf.load.i496, 16711680
  %cmp.i498 = icmp eq i32 %bf.clear.i497, 65536
  br i1 %cmp.i498, label %land.lhs.true.i500, label %if.else.i

land.lhs.true.i500:                               ; preds = %for.body.i499
  %fld1.i = getelementptr inbounds %struct.rtx_def* %this.07.i, i64 0, i32 1
  %rtx3.i = bitcast [1 x %union.rtunion_def]* %fld1.i to %struct.rtx_def**
  %171 = load %struct.rtx_def** %rtx3.i, align 8, !tbaa !10
  %172 = getelementptr inbounds %struct.rtx_def* %171, i64 0, i32 0
  %bf.load4.i = load i32* %172, align 8
  %bf.clear5.i = and i32 %bf.load4.i, 65535
  %cmp6.i = icmp eq i32 %bf.clear5.i, 61
  br i1 %cmp6.i, label %land.lhs.true7.i, label %if.else.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i500
  %arrayidx12.i501 = getelementptr inbounds %struct.rtx_def* %171, i64 0, i32 1, i64 0
  %rtuint.i502 = bitcast %union.rtunion_def* %arrayidx12.i501 to i32*
  %173 = load i32* %rtuint.i502, align 4, !tbaa !4
  %cmp13.i503 = icmp eq i32 %173, %136
  br i1 %cmp13.i503, label %remove_regno_note.exit, label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true7.i, %land.lhs.true.i500, %for.body.i499
  %arrayidx18.i = getelementptr inbounds %struct.rtx_def* %this.07.i, i64 0, i32 1, i64 1
  %rtx19.i = bitcast %union.rtunion_def* %arrayidx18.i to %struct.rtx_def**
  %this.0.i = load %struct.rtx_def** %rtx19.i, align 8
  %tobool.i505 = icmp eq %struct.rtx_def* %this.0.i, null
  br i1 %tobool.i505, label %for.end.i, label %for.body.i499

for.end.i:                                        ; preds = %if.else.i, %if.else160
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 885, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.remove_regno_note, i64 0, i64 0)) #6
  unreachable

remove_regno_note.exit:                           ; preds = %land.lhs.true7.i
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %this.07.i, i64 0, i32 1, i64 1
  %rtx16.i = bitcast %union.rtunion_def* %arrayidx15.i to %struct.rtx_def**
  %174 = load %struct.rtx_def** %rtx16.i, align 8, !tbaa !10
  %175 = getelementptr inbounds %union.rtunion_def* %arrayidx18.sink6.i, i64 0, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %174 to i64
  store i64 %.c.i, i64* %175, align 8, !tbaa !10
  %176 = load %struct.rtx_def** %rtx145, align 8, !tbaa !10
  %call170 = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn, %struct.stack_def* %regstack, %struct.rtx_def* %176, i32 0)
  br label %if.end172

if.end172:                                        ; preds = %land.lhs.true124, %if.end104, %replace_reg.exit494, %remove_regno_note.exit
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @emit_swap_insn(%struct.rtx_def* %insn, %struct.stack_def* nocapture %regstack, %struct.rtx_def* nocapture readonly %reg) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load.i = load i32* %0, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 61
  br i1 %cmp.i, label %land.lhs.true.i, label %if.then.i

land.lhs.true.i:                                  ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %1 = load i32* %rtuint.i, align 4, !tbaa !4
  %2 = and i32 %1, -8
  %3 = icmp eq i32 %2, 8
  br i1 %3, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 900, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.get_hard_regnum, i64 0, i64 0)) #6
  unreachable

if.end.i:                                         ; preds = %land.lhs.true.i
  %top.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 0
  %4 = load i32* %top.i, align 4, !tbaa !33
  %cmp730.i = icmp sgt i32 %4, -1
  br i1 %cmp730.i, label %for.body.lr.ph.i, label %if.then

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %5 = sext i32 %4 to i64
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %6 = trunc i64 %indvars.iv.i to i32
  %cmp7.i = icmp sgt i32 %6, 0
  br i1 %cmp7.i, label %for.body.i, label %if.then

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %5, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i ]
  %arrayidx9.i = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %indvars.iv.i
  %7 = load i8* %arrayidx9.i, align 1, !tbaa !1
  %conv.i = zext i8 %7 to i32
  %cmp13.i = icmp eq i32 %conv.i, %1
  br i1 %cmp13.i, label %get_hard_regnum.exit, label %for.cond.i

get_hard_regnum.exit:                             ; preds = %for.body.i
  %8 = trunc i64 %indvars.iv.i to i32
  %add.i = sub i32 8, %8
  %sub.i = add i32 %add.i, %4
  %cmp = icmp slt i32 %sub.i, 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond.i, %if.end.i, %get_hard_regnum.exit
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 990, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.emit_swap_insn, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %get_hard_regnum.exit
  %cmp4 = icmp eq i32 %sub.i, 8
  br i1 %cmp4, label %if.end175, label %if.end6

if.end6:                                          ; preds = %if.end
  %sub = add nsw i32 %sub.i, -8
  %sub7 = sub nsw i32 %4, %sub
  %idxprom = sext i32 %sub7 to i64
  %arrayidx = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom
  %9 = load i8* %arrayidx, align 1, !tbaa !1
  %arrayidx12 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %5
  %10 = load i8* %arrayidx12, align 1, !tbaa !1
  store i8 %10, i8* %arrayidx, align 1, !tbaa !1
  %11 = load i32* %top.i, align 4, !tbaa !33
  %idxprom18 = sext i32 %11 to i64
  %arrayidx20 = getelementptr inbounds %struct.stack_def* %regstack, i64 0, i32 2, i64 %idxprom18
  store i8 %9, i8* %arrayidx20, align 1, !tbaa !1
  %12 = load %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %tobool = icmp eq %struct.basic_block_def* %12, null
  br i1 %tobool, label %if.end159, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end6
  %head = getelementptr inbounds %struct.basic_block_def* %12, i64 0, i32 0
  %13 = load %struct.rtx_def** %head, align 8, !tbaa !44
  %cmp21 = icmp eq %struct.rtx_def* %13, %insn
  br i1 %cmp21, label %if.end159, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 1
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx31, align 8, !tbaa !10
  %tmp25.0.in.in297 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 1
  %tmp25.0.in298 = bitcast %union.rtunion_def* %tmp25.0.in.in297 to %struct.rtx_def**
  %tmp25.0299 = load %struct.rtx_def** %tmp25.0.in298, align 8
  %cmp32300 = icmp eq %struct.rtx_def* %tmp25.0299, %14
  br i1 %cmp32300, label %if.end159, label %while.body

while.body:                                       ; preds = %if.then23, %while.cond.backedge
  %tmp25.0301 = phi %struct.rtx_def* [ %tmp25.0, %while.cond.backedge ], [ %tmp25.0299, %if.then23 ]
  %15 = getelementptr inbounds %struct.rtx_def* %tmp25.0301, i64 0, i32 0
  %bf.load = load i32* %15, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %while.cond.backedge [
    i32 36, label %if.end63
    i32 34, label %if.end63
    i32 37, label %land.lhs.true45
    i32 32, label %land.lhs.true55
  ]

land.lhs.true45:                                  ; preds = %while.body
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %tmp25.0301, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx47 to i32*
  %16 = load i32* %rtint, align 4, !tbaa !4
  %cmp48 = icmp eq i32 %16, -80
  br i1 %cmp48, label %land.lhs.true66, label %while.cond.backedge

while.cond.backedge:                              ; preds = %while.body, %land.lhs.true45, %land.lhs.true55, %stack_regs_mentioned.exit
  %tmp25.0.in.in = getelementptr inbounds %struct.rtx_def* %tmp25.0301, i64 0, i32 1, i64 1
  %tmp25.0.in = bitcast %union.rtunion_def* %tmp25.0.in.in to %struct.rtx_def**
  %tmp25.0 = load %struct.rtx_def** %tmp25.0.in, align 8
  %cmp32 = icmp eq %struct.rtx_def* %tmp25.0, %14
  br i1 %cmp32, label %if.end159, label %while.body

land.lhs.true55:                                  ; preds = %while.body
  %17 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 32), align 1, !tbaa !1
  %cmp.i219 = icmp eq i8 %17, 105
  %18 = load %struct.varray_head_tag** @stack_regs_mentioned_data, align 8
  %tobool.i = icmp ne %struct.varray_head_tag* %18, null
  %or.cond.i = and i1 %cmp.i219, %tobool.i
  br i1 %or.cond.i, label %if.end.i220, label %while.cond.backedge

if.end.i220:                                      ; preds = %land.lhs.true55
  %fld.i = getelementptr inbounds %struct.rtx_def* %tmp25.0301, i64 0, i32 1
  %rtint.i = bitcast [1 x %union.rtunion_def]* %fld.i to i32*
  %19 = load i32* %rtint.i, align 4, !tbaa !4
  %num_elements.i = getelementptr inbounds %struct.varray_head_tag* %18, i64 0, i32 0
  %20 = load i64* %num_elements.i, align 8, !tbaa !6
  %conv3.i = trunc i64 %20 to i32
  %cmp4.i = icmp ult i32 %19, %conv3.i
  br i1 %cmp4.i, label %if.end8.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.end.i220
  %div.i = udiv i32 %19, 20
  %add.i221 = add i32 %div.i, %19
  %conv7.i = zext i32 %add.i221 to i64
  %call.i = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %18, i64 %conv7.i) #4
  store %struct.varray_head_tag* %call.i, %struct.varray_head_tag** @stack_regs_mentioned_data, align 8, !tbaa !10
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then6.i, %if.end.i220
  %21 = phi %struct.varray_head_tag* [ %18, %if.end.i220 ], [ %call.i, %if.then6.i ]
  %idxprom9.i = zext i32 %19 to i64
  %data.i = getelementptr inbounds %struct.varray_head_tag* %21, i64 0, i32 4
  %c.i = bitcast %union.varray_data_tag* %data.i to [1 x i8]*
  %arrayidx10.i = getelementptr inbounds [1 x i8]* %c.i, i64 0, i64 %idxprom9.i
  %22 = load i8* %arrayidx10.i, align 1, !tbaa !1
  %conv11.i = sext i8 %22 to i32
  %cmp12.i = icmp eq i8 %22, 0
  br i1 %cmp12.i, label %if.then14.i, label %stack_regs_mentioned.exit

if.then14.i:                                      ; preds = %if.end8.i
  %arrayidx16.i = getelementptr inbounds %struct.rtx_def* %tmp25.0301, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx16.i to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !10
  %call17.i = tail call fastcc i32 @stack_regs_mentioned_p(%struct.rtx_def* %23) #4
  %tobool18.i = icmp ne i32 %call17.i, 0
  %cond.i222 = select i1 %tobool18.i, i32 1, i32 2
  %conv19.i = trunc i32 %cond.i222 to i8
  store i8 %conv19.i, i8* %arrayidx10.i, align 1, !tbaa !1
  br label %stack_regs_mentioned.exit

stack_regs_mentioned.exit:                        ; preds = %if.end8.i, %if.then14.i
  %test.0.i = phi i32 [ %cond.i222, %if.then14.i ], [ %conv11.i, %if.end8.i ]
  %cmp25.i = icmp eq i32 %test.0.i, 1
  br i1 %cmp25.i, label %if.end63, label %while.cond.backedge

if.end63:                                         ; preds = %while.body, %while.body, %stack_regs_mentioned.exit
  %cmp64 = icmp eq %struct.rtx_def* %tmp25.0301, null
  br i1 %cmp64, label %if.end159, label %if.end63.land.lhs.true66_crit_edge

if.end63.land.lhs.true66_crit_edge:               ; preds = %if.end63
  %bf.load67.pre = load i32* %15, align 8
  br label %land.lhs.true66

land.lhs.true66:                                  ; preds = %land.lhs.true45, %if.end63.land.lhs.true66_crit_edge
  %bf.load67 = phi i32 [ %bf.load67.pre, %if.end63.land.lhs.true66_crit_edge ], [ %bf.load, %land.lhs.true45 ]
  %bf.clear68 = and i32 %bf.load67, 65535
  %idxprom69215 = zext i32 %bf.clear68 to i64
  %arrayidx70 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom69215
  %24 = load i8* %arrayidx70, align 1, !tbaa !1
  %cmp72 = icmp eq i8 %24, 105
  br i1 %cmp72, label %cond.true, label %if.end159

cond.true:                                        ; preds = %land.lhs.true66
  %arrayidx75 = getelementptr inbounds %struct.rtx_def* %tmp25.0301, i64 0, i32 1, i64 3
  %rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx76, align 8, !tbaa !10
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load77 = load i32* %26, align 8
  %bf.clear78 = and i32 %bf.load77, 65535
  %cmp79 = icmp eq i32 %bf.clear78, 47
  br i1 %cmp79, label %cond.end90, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call88 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %tmp25.0301, %struct.rtx_def* %25) #4
  br label %cond.end90

cond.end90:                                       ; preds = %cond.true, %cond.false
  %cond91 = phi %struct.rtx_def* [ %call88, %cond.false ], [ %25, %cond.true ]
  %cmp92 = icmp eq %struct.rtx_def* %cond91, null
  br i1 %cmp92, label %if.end159, label %if.then94

if.then94:                                        ; preds = %cond.end90
  %arrayidx97 = getelementptr inbounds %struct.rtx_def* %cond91, i64 0, i32 1, i64 1
  br label %for.cond.i225

for.cond.i225:                                    ; preds = %sw.bb37.i, %if.then94
  %arrayidx97.sink = phi %union.rtunion_def* [ %arrayidx97, %if.then94 ], [ %arrayidx39.i, %sw.bb37.i ]
  %rtx98 = bitcast %union.rtunion_def* %arrayidx97.sink to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx98, align 8, !tbaa !10
  %28 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 0
  %bf.load.i223 = load i32* %28, align 8
  %bf.clear.i224 = and i32 %bf.load.i223, 65535
  switch i32 %bf.clear.i224, label %get_true_reg.exit [
    i32 63, label %sw.bb.i
    i32 125, label %sw.bb37.i
    i32 126, label %sw.bb37.i
    i32 123, label %sw.bb37.i
  ]

sw.bb.i:                                          ; preds = %for.cond.i225
  %fld.i226 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1
  %rtx.i227 = bitcast [1 x %union.rtunion_def]* %fld.i226 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx.i227, align 8, !tbaa !10
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load1.i = load i32* %30, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp.i228 = icmp eq i32 %bf.clear2.i, 61
  br i1 %cmp.i228, label %land.lhs.true.i230, label %sw.bb37.i

land.lhs.true.i230:                               ; preds = %sw.bb.i
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 0
  %rtuint.i229 = bitcast %union.rtunion_def* %arrayidx7.i to i32*
  %31 = load i32* %rtuint.i229, align 4, !tbaa !4
  %32 = and i32 %31, -8
  %33 = icmp eq i32 %32, 8
  br i1 %33, label %if.then.i234, label %sw.bb37.i

if.then.i234:                                     ; preds = %land.lhs.true.i230
  %bf.lshr.i = lshr i32 %bf.load1.i, 16
  %bf.clear21.i = and i32 %bf.lshr.i, 255
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 1
  %rtuint24.i = bitcast %union.rtunion_def* %arrayidx23.i to i32*
  %34 = load i32* %rtuint24.i, align 4, !tbaa !4
  %bf.lshr26.i = lshr i32 %bf.load.i223, 16
  %bf.clear27.i = and i32 %bf.lshr26.i, 255
  %call.i231 = tail call i32 @subreg_regno_offset(i32 %31, i32 %bf.clear21.i, i32 %34, i32 %bf.clear27.i) #4
  %bf.load28.i = load i32* %30, align 8
  %bf.lshr29.i = lshr i32 %bf.load28.i, 16
  %bf.clear30.i = and i32 %bf.lshr29.i, 255
  %idxprom52.i = zext i32 %bf.clear30.i to i64
  %35 = load i32* %rtuint.i229, align 4, !tbaa !4
  %add.i232 = add i32 %call.i231, -8
  %sub.i233 = add i32 %add.i232, %35
  %idxprom34.i = zext i32 %sub.i233 to i64
  %arrayidx36.i = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i, i64 %idxprom52.i
  %36 = load %struct.rtx_def** %arrayidx36.i, align 8, !tbaa !10
  %37 = getelementptr inbounds %union.rtunion_def* %arrayidx97.sink, i64 0, i32 0
  %.c = ptrtoint %struct.rtx_def* %36 to i64
  store i64 %.c, i64* %37, align 8, !tbaa !10
  br label %get_true_reg.exit

sw.bb37.i:                                        ; preds = %land.lhs.true.i230, %sw.bb.i, %for.cond.i225, %for.cond.i225, %for.cond.i225
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 0
  br label %for.cond.i225

get_true_reg.exit:                                ; preds = %for.cond.i225, %if.then.i234
  %38 = phi %struct.rtx_def* [ %36, %if.then.i234 ], [ %27, %for.cond.i225 ]
  br label %for.cond.i238

for.cond.i238:                                    ; preds = %for.cond.i238, %for.cond.i238, %for.cond.i238, %sw.bb.i244, %land.lhs.true.i247, %get_true_reg.exit
  %cond91.sink = phi %struct.rtx_def* [ %cond91, %get_true_reg.exit ], [ %39, %land.lhs.true.i247 ], [ %39, %sw.bb.i244 ], [ %39, %for.cond.i238 ], [ %39, %for.cond.i238 ], [ %39, %for.cond.i238 ]
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %cond91.sink, i64 0, i32 1, i64 0
  %rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx103, align 8, !tbaa !10
  %40 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 0
  %bf.load.i236 = load i32* %40, align 8
  %bf.clear.i237 = and i32 %bf.load.i236, 65535
  switch i32 %bf.clear.i237, label %get_true_reg.exit267 [
    i32 63, label %sw.bb.i244
    i32 125, label %for.cond.i238
    i32 126, label %for.cond.i238
    i32 123, label %for.cond.i238
  ]

sw.bb.i244:                                       ; preds = %for.cond.i238
  %fld.i239 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1
  %rtx.i240 = bitcast [1 x %union.rtunion_def]* %fld.i239 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx.i240, align 8, !tbaa !10
  %42 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 0
  %bf.load1.i241 = load i32* %42, align 8
  %bf.clear2.i242 = and i32 %bf.load1.i241, 65535
  %cmp.i243 = icmp eq i32 %bf.clear2.i242, 61
  br i1 %cmp.i243, label %land.lhs.true.i247, label %for.cond.i238

land.lhs.true.i247:                               ; preds = %sw.bb.i244
  %arrayidx7.i245 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 0
  %rtuint.i246 = bitcast %union.rtunion_def* %arrayidx7.i245 to i32*
  %43 = load i32* %rtuint.i246, align 4, !tbaa !4
  %44 = and i32 %43, -8
  %45 = icmp eq i32 %44, 8
  br i1 %45, label %if.then.i263, label %for.cond.i238

if.then.i263:                                     ; preds = %land.lhs.true.i247
  %bf.lshr.i248 = lshr i32 %bf.load1.i241, 16
  %bf.clear21.i249 = and i32 %bf.lshr.i248, 255
  %arrayidx23.i250 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 1
  %rtuint24.i251 = bitcast %union.rtunion_def* %arrayidx23.i250 to i32*
  %46 = load i32* %rtuint24.i251, align 4, !tbaa !4
  %bf.lshr26.i252 = lshr i32 %bf.load.i236, 16
  %bf.clear27.i253 = and i32 %bf.lshr26.i252, 255
  %call.i254 = tail call i32 @subreg_regno_offset(i32 %43, i32 %bf.clear21.i249, i32 %46, i32 %bf.clear27.i253) #4
  %bf.load28.i255 = load i32* %42, align 8
  %bf.lshr29.i256 = lshr i32 %bf.load28.i255, 16
  %bf.clear30.i257 = and i32 %bf.lshr29.i256, 255
  %idxprom52.i258 = zext i32 %bf.clear30.i257 to i64
  %47 = load i32* %rtuint.i246, align 4, !tbaa !4
  %add.i259 = add i32 %call.i254, -8
  %sub.i260 = add i32 %add.i259, %47
  %idxprom34.i261 = zext i32 %sub.i260 to i64
  %arrayidx36.i262 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom34.i261, i64 %idxprom52.i258
  %48 = load %struct.rtx_def** %arrayidx36.i262, align 8, !tbaa !10
  %49 = getelementptr inbounds %union.rtunion_def* %arrayidx102, i64 0, i32 0
  %.c278 = ptrtoint %struct.rtx_def* %48 to i64
  store i64 %.c278, i64* %49, align 8, !tbaa !10
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load105.pre = load i32* %.phi.trans.insert, align 8
  br label %get_true_reg.exit267

get_true_reg.exit267:                             ; preds = %for.cond.i238, %if.then.i263
  %bf.load105 = phi i32 [ %bf.load105.pre, %if.then.i263 ], [ %bf.load.i236, %for.cond.i238 ]
  %50 = phi %struct.rtx_def* [ %48, %if.then.i263 ], [ %39, %for.cond.i238 ]
  %51 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 0
  %bf.clear106 = and i32 %bf.load105, 65535
  %cmp107 = icmp eq i32 %bf.clear106, 61
  br i1 %cmp107, label %land.lhs.true109, label %if.end131

land.lhs.true109:                                 ; preds = %get_true_reg.exit267
  %arrayidx111 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx111 to i32*
  %52 = load i32* %rtuint, align 4, !tbaa !4
  %cmp112 = icmp eq i32 %52, 8
  br i1 %cmp112, label %land.lhs.true114, label %if.end131

land.lhs.true114:                                 ; preds = %land.lhs.true109
  %53 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load115 = load i32* %53, align 8
  %bf.clear116 = and i32 %bf.load115, 65535
  %cmp117 = icmp eq i32 %bf.clear116, 61
  br i1 %cmp117, label %land.lhs.true119, label %if.end131

land.lhs.true119:                                 ; preds = %land.lhs.true114
  %arrayidx121 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 0
  %rtuint122 = bitcast %union.rtunion_def* %arrayidx121 to i32*
  %54 = load i32* %rtuint122, align 4, !tbaa !4
  %sub123 = add i32 %sub.i, -1
  %cmp124 = icmp eq i32 %54, %sub123
  br i1 %cmp124, label %land.lhs.true126, label %if.end131

land.lhs.true126:                                 ; preds = %land.lhs.true119
  %call127 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %tmp25.0301, i32 1, i32 8) #4
  %cmp128 = icmp eq %struct.rtx_def* %call127, null
  br i1 %cmp128, label %if.end175, label %land.lhs.true126.if.end131_crit_edge

land.lhs.true126.if.end131_crit_edge:             ; preds = %land.lhs.true126
  %bf.load132.pre = load i32* %51, align 8
  br label %if.end131

if.end131:                                        ; preds = %land.lhs.true126.if.end131_crit_edge, %land.lhs.true119, %land.lhs.true114, %land.lhs.true109, %get_true_reg.exit267
  %bf.load132 = phi i32 [ %bf.load132.pre, %land.lhs.true126.if.end131_crit_edge ], [ %bf.load105, %land.lhs.true119 ], [ %bf.load105, %land.lhs.true114 ], [ %bf.load105, %land.lhs.true109 ], [ %bf.load105, %get_true_reg.exit267 ]
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear133, 61
  br i1 %cmp134, label %land.lhs.true136, label %if.end159

land.lhs.true136:                                 ; preds = %if.end131
  %arrayidx138 = getelementptr inbounds %struct.rtx_def* %50, i64 0, i32 1, i64 0
  %rtuint139 = bitcast %union.rtunion_def* %arrayidx138 to i32*
  %55 = load i32* %rtuint139, align 4, !tbaa !4
  %cmp140 = icmp eq i32 %55, %sub.i
  br i1 %cmp140, label %land.lhs.true142, label %if.end159

land.lhs.true142:                                 ; preds = %land.lhs.true136
  %56 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load143 = load i32* %56, align 8
  %bf.clear144 = and i32 %bf.load143, 65535
  %cmp145 = icmp eq i32 %bf.clear144, 61
  br i1 %cmp145, label %land.lhs.true147, label %if.end159

land.lhs.true147:                                 ; preds = %land.lhs.true142
  %arrayidx149 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 0
  %rtuint150 = bitcast %union.rtunion_def* %arrayidx149 to i32*
  %57 = load i32* %rtuint150, align 4, !tbaa !4
  %cmp151 = icmp eq i32 %57, 8
  br i1 %cmp151, label %land.lhs.true153, label %if.end159

land.lhs.true153:                                 ; preds = %land.lhs.true147
  %call154 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %tmp25.0301, i32 1, i32 8) #4
  %cmp155 = icmp eq %struct.rtx_def* %call154, null
  br i1 %cmp155, label %if.end175, label %if.end159

if.end159:                                        ; preds = %while.cond.backedge, %if.then23, %if.end63, %land.lhs.true66, %if.end6, %land.lhs.true, %cond.end90, %if.end131, %land.lhs.true136, %land.lhs.true142, %land.lhs.true147, %land.lhs.true153
  %cmp64272 = phi i1 [ true, %cond.end90 ], [ true, %if.end131 ], [ true, %land.lhs.true136 ], [ true, %land.lhs.true142 ], [ true, %land.lhs.true147 ], [ true, %land.lhs.true153 ], [ false, %if.end63 ], [ false, %land.lhs.true ], [ false, %if.end6 ], [ true, %land.lhs.true66 ], [ false, %if.then23 ], [ false, %while.cond.backedge ]
  %i1.0271 = phi %struct.rtx_def* [ %tmp25.0301, %cond.end90 ], [ %tmp25.0301, %if.end131 ], [ %tmp25.0301, %land.lhs.true136 ], [ %tmp25.0301, %land.lhs.true142 ], [ %tmp25.0301, %land.lhs.true147 ], [ %tmp25.0301, %land.lhs.true153 ], [ null, %if.end63 ], [ null, %land.lhs.true ], [ null, %if.end6 ], [ %tmp25.0301, %land.lhs.true66 ], [ null, %if.then23 ], [ null, %while.cond.backedge ]
  %idxprom161 = sext i32 %sub to i64
  %arrayidx163 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %idxprom161, i64 17
  %58 = load %struct.rtx_def** %arrayidx163, align 8, !tbaa !10
  %59 = load %struct.rtx_def** getelementptr inbounds ([8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 0, i64 17), align 8, !tbaa !10
  %call164 = tail call %struct.rtx_def* @gen_swapxf(%struct.rtx_def* %58, %struct.rtx_def* %59) #4
  br i1 %cmp64272, label %if.then166, label %if.else

if.then166:                                       ; preds = %if.end159
  %call167 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call164, %struct.rtx_def* %i1.0271) #4
  br label %if.end175

if.else:                                          ; preds = %if.end159
  %60 = load %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %tobool168 = icmp eq %struct.basic_block_def* %60, null
  br i1 %tobool168, label %if.else172, label %if.then169

if.then169:                                       ; preds = %if.else
  %head170 = getelementptr inbounds %struct.basic_block_def* %60, i64 0, i32 0
  %61 = load %struct.rtx_def** %head170, align 8, !tbaa !44
  %call171 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call164, %struct.rtx_def* %61) #4
  br label %if.end175

if.else172:                                       ; preds = %if.else
  %call173 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %call164, %struct.rtx_def* %insn) #4
  br label %if.end175

if.end175:                                        ; preds = %if.then169, %if.else172, %land.lhs.true153, %land.lhs.true126, %if.end, %if.then166
  ret void
}

declare i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_swapxf(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @swap_rtx_condition(%struct.rtx_def* %insn) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 47
  br i1 %cmp, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %entry
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx3, align 8, !tbaa !10
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 61
  br i1 %cmp6, label %land.lhs.true7, label %if.end19

land.lhs.true7:                                   ; preds = %land.lhs.true
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx12 to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !4
  %cmp13 = icmp eq i32 %4, 17
  br i1 %cmp13, label %while.cond.i, label %if.end19

while.cond.i:                                     ; preds = %land.lhs.true7, %if.end.i
  %insn.addr.0.i = phi %struct.rtx_def* [ %7, %if.end.i ], [ %insn, %land.lhs.true7 ]
  %5 = load %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %end.i = getelementptr inbounds %struct.basic_block_def* %5, i64 0, i32 1
  %6 = load %struct.rtx_def** %end.i, align 8, !tbaa !47
  %cmp.i = icmp eq %struct.rtx_def* %insn.addr.0.i, %6
  br i1 %cmp.i, label %return, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn.addr.0.i, i64 0, i32 1, i64 2
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !10
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load.i = load i32* %8, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom18.i = zext i32 %bf.clear.i to i64
  %arrayidx1.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom18.i
  %9 = load i8* %arrayidx1.i, align 1, !tbaa !1
  %cmp2.i = icmp eq i8 %9, 105
  br i1 %cmp2.i, label %land.lhs.true.i, label %if.end.i

land.lhs.true.i:                                  ; preds = %while.body.i
  %10 = load %struct.rtx_def** @ix86_flags_rtx, align 8, !tbaa !10
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 3
  %rtx6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !10
  %call.i = tail call i32 @reg_mentioned_p(%struct.rtx_def* %10, %struct.rtx_def* %11) #4
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %land.lhs.true.if.end_crit_edge.i, label %next_flags_user.exit

land.lhs.true.if.end_crit_edge.i:                 ; preds = %land.lhs.true.i
  %bf.load7.pre.i = load i32* %8, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.if.end_crit_edge.i, %while.body.i
  %bf.load7.i = phi i32 [ %bf.load7.pre.i, %land.lhs.true.if.end_crit_edge.i ], [ %bf.load.i, %while.body.i ]
  %bf.clear8.i = and i32 %bf.load7.i, 65535
  %cmp9.i = icmp eq i32 %bf.clear8.i, 34
  br i1 %cmp9.i, label %return, label %while.cond.i

next_flags_user.exit:                             ; preds = %land.lhs.true.i
  %cmp14 = icmp eq %struct.rtx_def* %7, null
  br i1 %cmp14, label %return, label %if.end

if.end:                                           ; preds = %next_flags_user.exit
  %12 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !10
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load20.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.end, %land.lhs.true7, %land.lhs.true, %entry
  %bf.load20 = phi i32 [ %bf.load20.pre, %if.end ], [ %bf.load, %land.lhs.true7 ], [ %bf.load, %land.lhs.true ], [ %bf.load, %entry ]
  %insn.addr.0 = phi %struct.rtx_def* [ %7, %if.end ], [ %insn, %land.lhs.true7 ], [ %insn, %land.lhs.true ], [ %insn, %entry ]
  %pat.0 = phi %struct.rtx_def* [ %12, %if.end ], [ %0, %land.lhs.true7 ], [ %0, %land.lhs.true ], [ %0, %entry ]
  %bf.clear21 = and i32 %bf.load20, 65535
  %cmp22 = icmp eq i32 %bf.clear21, 47
  br i1 %cmp22, label %land.lhs.true23, label %if.end96

land.lhs.true23:                                  ; preds = %if.end19
  %arrayidx25 = getelementptr inbounds %struct.rtx_def* %pat.0, i64 0, i32 1, i64 1
  %rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx26, align 8, !tbaa !10
  %14 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 0
  %bf.load27 = load i32* %14, align 8
  %bf.clear28 = and i32 %bf.load27, 65535
  %cmp29 = icmp eq i32 %bf.clear28, 42
  br i1 %cmp29, label %land.lhs.true30, label %if.end96

land.lhs.true30:                                  ; preds = %land.lhs.true23
  %arrayidx35 = getelementptr inbounds %struct.rtx_def* %13, i64 0, i32 1, i64 1
  %rtint = bitcast %union.rtunion_def* %arrayidx35 to i32*
  %15 = load i32* %rtint, align 4, !tbaa !4
  %cmp36 = icmp eq i32 %15, 9
  br i1 %cmp36, label %if.then37, label %if.end96

if.then37:                                        ; preds = %land.lhs.true30
  %arrayidx39 = getelementptr inbounds %struct.rtx_def* %pat.0, i64 0, i32 1, i64 0
  %rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx40, align 8, !tbaa !10
  br label %while.cond

while.cond:                                       ; preds = %if.end53, %if.then37
  %insn.addr.1 = phi %struct.rtx_def* [ %insn.addr.0, %if.then37 ], [ %19, %if.end53 ]
  %17 = load %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %end = getelementptr inbounds %struct.basic_block_def* %17, i64 0, i32 1
  %18 = load %struct.rtx_def** %end, align 8, !tbaa !47
  %cmp41 = icmp eq %struct.rtx_def* %insn.addr.1, %18
  br i1 %cmp41, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %insn.addr.1, i64 0, i32 1, i64 2
  %rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx44, align 8, !tbaa !10
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load45 = load i32* %20, align 8
  %bf.clear46 = and i32 %bf.load45, 65535
  %idxprom164 = zext i32 %bf.clear46 to i64
  %arrayidx47 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom164
  %21 = load i8* %arrayidx47, align 1, !tbaa !1
  %cmp48 = icmp eq i8 %21, 105
  br i1 %cmp48, label %land.lhs.true50, label %if.end53

land.lhs.true50:                                  ; preds = %while.body
  %call51 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %16, %struct.rtx_def* %19) #4
  %tobool = icmp eq i32 %call51, 0
  br i1 %tobool, label %land.lhs.true50.if.end53_crit_edge, label %while.end

land.lhs.true50.if.end53_crit_edge:               ; preds = %land.lhs.true50
  %bf.load54.pre = load i32* %20, align 8
  br label %if.end53

if.end53:                                         ; preds = %land.lhs.true50.if.end53_crit_edge, %while.body
  %bf.load54 = phi i32 [ %bf.load54.pre, %land.lhs.true50.if.end53_crit_edge ], [ %bf.load45, %while.body ]
  %bf.clear55 = and i32 %bf.load54, 65535
  %cmp56 = icmp eq i32 %bf.clear55, 34
  br i1 %cmp56, label %return, label %while.cond

while.end:                                        ; preds = %land.lhs.true50, %while.cond
  %insn.addr.2 = phi %struct.rtx_def* [ %19, %land.lhs.true50 ], [ %insn.addr.1, %while.cond ]
  %arrayidx61 = getelementptr inbounds %struct.rtx_def* %insn.addr.2, i64 0, i32 1, i64 3
  %rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx62, align 8, !tbaa !10
  %23 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 0
  %bf.load63 = load i32* %23, align 8
  %bf.clear64 = and i32 %bf.load63, 65535
  %cmp65 = icmp eq i32 %bf.clear64, 47
  br i1 %cmp65, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %while.end
  %arrayidx68 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 1
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx69, align 8, !tbaa !10
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load70 = load i32* %25, align 8
  %bf.clear71 = and i32 %bf.load70, 65535
  %cmp72 = icmp eq i32 %bf.clear71, 42
  br i1 %cmp72, label %lor.lhs.false74, label %return

lor.lhs.false74:                                  ; preds = %lor.lhs.false
  %arrayidx79 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 1
  %rtint80 = bitcast %union.rtunion_def* %arrayidx79 to i32*
  %26 = load i32* %rtint80, align 4, !tbaa !4
  %cmp81 = icmp eq i32 %26, 10
  br i1 %cmp81, label %lor.lhs.false83, label %return

lor.lhs.false83:                                  ; preds = %lor.lhs.false74
  %call84 = tail call i32 @dead_or_set_p(%struct.rtx_def* %insn.addr.2, %struct.rtx_def* %16) #4
  %tobool85 = icmp eq i32 %call84, 0
  br i1 %tobool85, label %return, label %while.cond.i169

while.cond.i169:                                  ; preds = %lor.lhs.false83, %if.end.i188
  %insn.addr.0.i166 = phi %struct.rtx_def* [ %29, %if.end.i188 ], [ %insn.addr.2, %lor.lhs.false83 ]
  %27 = load %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %end.i167 = getelementptr inbounds %struct.basic_block_def* %27, i64 0, i32 1
  %28 = load %struct.rtx_def** %end.i167, align 8, !tbaa !47
  %cmp.i168 = icmp eq %struct.rtx_def* %insn.addr.0.i166, %28
  br i1 %cmp.i168, label %return, label %while.body.i177

while.body.i177:                                  ; preds = %while.cond.i169
  %arrayidx.i170 = getelementptr inbounds %struct.rtx_def* %insn.addr.0.i166, i64 0, i32 1, i64 2
  %rtx.i171 = bitcast %union.rtunion_def* %arrayidx.i170 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx.i171, align 8, !tbaa !10
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load.i172 = load i32* %30, align 8
  %bf.clear.i173 = and i32 %bf.load.i172, 65535
  %idxprom18.i174 = zext i32 %bf.clear.i173 to i64
  %arrayidx1.i175 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom18.i174
  %31 = load i8* %arrayidx1.i175, align 1, !tbaa !1
  %cmp2.i176 = icmp eq i8 %31, 105
  br i1 %cmp2.i176, label %land.lhs.true.i182, label %if.end.i188

land.lhs.true.i182:                               ; preds = %while.body.i177
  %32 = load %struct.rtx_def** @ix86_flags_rtx, align 8, !tbaa !10
  %arrayidx5.i178 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 3
  %rtx6.i179 = bitcast %union.rtunion_def* %arrayidx5.i178 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx6.i179, align 8, !tbaa !10
  %call.i180 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %32, %struct.rtx_def* %33) #4
  %tobool.i181 = icmp eq i32 %call.i180, 0
  br i1 %tobool.i181, label %land.lhs.true.if.end_crit_edge.i184, label %next_flags_user.exit190

land.lhs.true.if.end_crit_edge.i184:              ; preds = %land.lhs.true.i182
  %bf.load7.pre.i183 = load i32* %30, align 8
  br label %if.end.i188

if.end.i188:                                      ; preds = %land.lhs.true.if.end_crit_edge.i184, %while.body.i177
  %bf.load7.i185 = phi i32 [ %bf.load7.pre.i183, %land.lhs.true.if.end_crit_edge.i184 ], [ %bf.load.i172, %while.body.i177 ]
  %bf.clear8.i186 = and i32 %bf.load7.i185, 65535
  %cmp9.i187 = icmp eq i32 %bf.clear8.i186, 34
  br i1 %cmp9.i187, label %return, label %while.cond.i169

next_flags_user.exit190:                          ; preds = %land.lhs.true.i182
  %cmp89 = icmp eq %struct.rtx_def* %29, null
  br i1 %cmp89, label %return, label %if.end92

if.end92:                                         ; preds = %next_flags_user.exit190
  %34 = load %struct.rtx_def** %rtx6.i179, align 8, !tbaa !10
  br label %if.end96

if.end96:                                         ; preds = %if.end92, %land.lhs.true30, %land.lhs.true23, %if.end19
  %insn.addr.3 = phi %struct.rtx_def* [ %29, %if.end92 ], [ %insn.addr.0, %land.lhs.true30 ], [ %insn.addr.0, %land.lhs.true23 ], [ %insn.addr.0, %if.end19 ]
  %pat.1 = phi %struct.rtx_def* [ %34, %if.end92 ], [ %pat.0, %land.lhs.true30 ], [ %pat.0, %land.lhs.true23 ], [ %pat.0, %if.end19 ]
  %call97 = tail call fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* %pat.1)
  %tobool98 = icmp eq i32 %call97, 0
  br i1 %tobool98, label %return, label %if.then99

if.then99:                                        ; preds = %if.end96
  %arrayidx101 = getelementptr inbounds %struct.rtx_def* %insn.addr.3, i64 0, i32 1, i64 4
  %rtint102 = bitcast %union.rtunion_def* %arrayidx101 to i32*
  store i32 -1, i32* %rtint102, align 4, !tbaa !4
  %call111 = tail call i32 @recog_memoized_1(%struct.rtx_def* %insn.addr.3) #4
  %cmp112 = icmp eq i32 %call111, -1
  br i1 %cmp112, label %if.then128, label %if.else

if.else:                                          ; preds = %if.then99
  %35 = load %struct.rtx_def** @ix86_flags_rtx, align 8, !tbaa !10
  %call115 = tail call i32 @dead_or_set_p(%struct.rtx_def* %insn.addr.3, %struct.rtx_def* %35) #4
  %tobool116 = icmp eq i32 %call115, 0
  br i1 %tobool116, label %while.cond.i194, label %return

while.cond.i194:                                  ; preds = %if.else, %if.end.i213
  %insn.addr.0.i191 = phi %struct.rtx_def* [ %38, %if.end.i213 ], [ %insn.addr.3, %if.else ]
  %36 = load %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %end.i192 = getelementptr inbounds %struct.basic_block_def* %36, i64 0, i32 1
  %37 = load %struct.rtx_def** %end.i192, align 8, !tbaa !47
  %cmp.i193 = icmp eq %struct.rtx_def* %insn.addr.0.i191, %37
  br i1 %cmp.i193, label %if.then128, label %while.body.i202

while.body.i202:                                  ; preds = %while.cond.i194
  %arrayidx.i195 = getelementptr inbounds %struct.rtx_def* %insn.addr.0.i191, i64 0, i32 1, i64 2
  %rtx.i196 = bitcast %union.rtunion_def* %arrayidx.i195 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx.i196, align 8, !tbaa !10
  %39 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load.i197 = load i32* %39, align 8
  %bf.clear.i198 = and i32 %bf.load.i197, 65535
  %idxprom18.i199 = zext i32 %bf.clear.i198 to i64
  %arrayidx1.i200 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom18.i199
  %40 = load i8* %arrayidx1.i200, align 1, !tbaa !1
  %cmp2.i201 = icmp eq i8 %40, 105
  br i1 %cmp2.i201, label %land.lhs.true.i207, label %if.end.i213

land.lhs.true.i207:                               ; preds = %while.body.i202
  %41 = load %struct.rtx_def** @ix86_flags_rtx, align 8, !tbaa !10
  %arrayidx5.i203 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 3
  %rtx6.i204 = bitcast %union.rtunion_def* %arrayidx5.i203 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx6.i204, align 8, !tbaa !10
  %call.i205 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %41, %struct.rtx_def* %42) #4
  %tobool.i206 = icmp eq i32 %call.i205, 0
  br i1 %tobool.i206, label %land.lhs.true.if.end_crit_edge.i209, label %next_flags_user.exit215

land.lhs.true.if.end_crit_edge.i209:              ; preds = %land.lhs.true.i207
  %bf.load7.pre.i208 = load i32* %39, align 8
  br label %if.end.i213

if.end.i213:                                      ; preds = %land.lhs.true.if.end_crit_edge.i209, %while.body.i202
  %bf.load7.i210 = phi i32 [ %bf.load7.pre.i208, %land.lhs.true.if.end_crit_edge.i209 ], [ %bf.load.i197, %while.body.i202 ]
  %bf.clear8.i211 = and i32 %bf.load7.i210, 65535
  %cmp9.i212 = icmp eq i32 %bf.clear8.i211, 34
  br i1 %cmp9.i212, label %if.then128, label %while.cond.i194

next_flags_user.exit215:                          ; preds = %land.lhs.true.i207
  %tobool119 = icmp eq %struct.rtx_def* %38, null
  br i1 %tobool119, label %if.then128, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %next_flags_user.exit215
  %call121 = tail call fastcc i32 @swap_rtx_condition(%struct.rtx_def* %38)
  %tobool122 = icmp eq i32 %call121, 0
  br i1 %tobool122, label %if.then128, label %return

if.then128:                                       ; preds = %while.cond.i194, %if.end.i213, %next_flags_user.exit215, %lor.lhs.false120, %if.then99
  %call129 = tail call fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* %pat.1)
  br label %return

return:                                           ; preds = %while.cond.i, %if.end.i, %if.end53, %while.cond.i169, %if.end.i188, %if.end96, %if.else, %lor.lhs.false120, %next_flags_user.exit190, %while.end, %lor.lhs.false, %lor.lhs.false74, %lor.lhs.false83, %next_flags_user.exit, %if.then128
  %retval.0 = phi i32 [ 0, %if.then128 ], [ 0, %next_flags_user.exit ], [ 0, %lor.lhs.false83 ], [ 0, %lor.lhs.false74 ], [ 0, %lor.lhs.false ], [ 0, %while.end ], [ 0, %next_flags_user.exit190 ], [ 1, %lor.lhs.false120 ], [ 1, %if.else ], [ 0, %if.end96 ], [ 0, %if.end.i188 ], [ 0, %while.cond.i169 ], [ 0, %if.end53 ], [ 0, %if.end.i ], [ 0, %while.cond.i ]
  ret i32 %retval.0
}

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @dead_or_set_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* nocapture %pat) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom70 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom70
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %1, 60
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = tail call i32 @swap_condition(i32 %bf.clear) #4
  %bf.load4 = load i32* %0, align 8
  %bf.value = and i32 %call, 65535
  %bf.clear5 = and i32 %bf.load4, -65536
  %bf.set = or i32 %bf.clear5, %bf.value
  store i32 %bf.set, i32* %0, align 8
  br label %if.end53

if.else:                                          ; preds = %entry
  %arrayidx9 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom70
  %2 = load i8** %arrayidx9, align 8, !tbaa !10
  %arrayidx13 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom70
  %3 = load i8* %arrayidx13, align 1, !tbaa !1
  %conv14 = zext i8 %3 to i64
  br label %for.cond.outer.outer

for.cond.outer.outer:                             ; preds = %if.then43, %for.body29, %if.else
  %i.0.in.ph.ph = phi i64 [ %conv14, %if.else ], [ %indvars.iv.next, %for.body29 ], [ %indvars.iv.next, %if.then43 ]
  %r.0.ph.ph = phi i32 [ 0, %if.else ], [ %or48, %if.then43 ], [ %or, %for.body29 ]
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %for.cond.outer.outer, %if.then22
  %i.0.in.ph = phi i64 [ %indvars.iv.next, %if.then22 ], [ %i.0.in.ph.ph, %for.cond.outer.outer ]
  %sext = shl i64 %i.0.in.ph, 32
  %4 = ashr exact i64 %sext, 32
  br label %for.cond

for.cond:                                         ; preds = %for.cond.outer, %for.body
  %indvars.iv = phi i64 [ %4, %for.cond.outer ], [ %indvars.iv.next, %for.body ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %5 = trunc i64 %indvars.iv to i32
  %cmp15 = icmp sgt i32 %5, 0
  br i1 %cmp15, label %for.body, label %if.end53

for.body:                                         ; preds = %for.cond
  %arrayidx18 = getelementptr inbounds i8* %2, i64 %indvars.iv.next
  %6 = load i8* %arrayidx18, align 1, !tbaa !1
  switch i8 %6, label %for.cond [
    i8 69, label %if.then22
    i8 101, label %if.then43
  ]

if.then22:                                        ; preds = %for.body
  %arrayidx24 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 1, i64 %indvars.iv.next
  %rtvec = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtvec_def**
  %7 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !10
  %num_elem = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 0
  %8 = load i32* %num_elem, align 4, !tbaa !11
  %cmp2776 = icmp sgt i32 %8, 0
  br i1 %cmp2776, label %for.body29.lr.ph, label %for.cond.outer

for.body29.lr.ph:                                 ; preds = %if.then22
  %9 = sext i32 %8 to i64
  br label %for.body29

for.body29:                                       ; preds = %for.body29.for.body29_crit_edge, %for.body29.lr.ph
  %10 = phi %struct.rtvec_def* [ %7, %for.body29.lr.ph ], [ %.pre, %for.body29.for.body29_crit_edge ]
  %indvars.iv83 = phi i64 [ %9, %for.body29.lr.ph ], [ %indvars.iv.next84, %for.body29.for.body29_crit_edge ]
  %r.177 = phi i32 [ %r.0.ph.ph, %for.body29.lr.ph ], [ %or, %for.body29.for.body29_crit_edge ]
  %indvars.iv.next84 = add nsw i64 %indvars.iv83, -1
  %arrayidx35 = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 1, i64 %indvars.iv.next84
  %11 = load %struct.rtx_def** %arrayidx35, align 8, !tbaa !10
  %call36 = tail call fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* %11)
  %or = or i32 %call36, %r.177
  %12 = trunc i64 %indvars.iv.next84 to i32
  %cmp27 = icmp sgt i32 %12, 0
  br i1 %cmp27, label %for.body29.for.body29_crit_edge, label %for.cond.outer.outer

for.body29.for.body29_crit_edge:                  ; preds = %for.body29
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !10
  br label %for.body29

if.then43:                                        ; preds = %for.body
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %pat, i64 0, i32 1, i64 %indvars.iv.next
  %rtx = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %call47 = tail call fastcc i32 @swap_rtx_condition_1(%struct.rtx_def* %13)
  %or48 = or i32 %call47, %r.0.ph.ph
  br label %for.cond.outer.outer

if.end53:                                         ; preds = %for.cond, %if.then
  %r.3 = phi i32 [ 1, %if.then ], [ %r.0.ph.ph, %for.cond ]
  ret i32 %r.3
}

declare i32 @recog_memoized_1(%struct.rtx_def*) #1

declare i32 @swap_condition(i32) #1

declare %struct.rtx_def* @delete_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_movtf(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_movxf(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @subreg_regno_offset(i32, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @check_asm_stack_operands(%struct.rtx_def* %insn) #0 {
entry:
  %reg_used_as_output = alloca [53 x i8], align 16
  %implicitly_dies = alloca [53 x i8], align 16
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  %1 = getelementptr inbounds [53 x i8]* %reg_used_as_output, i64 0, i64 0
  call void @llvm.lifetime.start(i64 53, i8* %1) #4
  %2 = getelementptr inbounds [53 x i8]* %implicitly_dies, i64 0, i64 0
  call void @llvm.lifetime.start(i64 53, i8* %2) #4
  tail call void @extract_insn(%struct.rtx_def* %insn) #4
  %call = tail call i32 @constrain_operands(i32 1) #4
  %3 = load i32* @which_alternative, align 4, !tbaa !4
  tail call void @preprocess_constraints() #4
  %4 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load.i = load i32* %4, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  switch i32 %bf.clear.i, label %if.end67.i [
    i32 47, label %land.lhs.true.i
    i32 41, label %if.then12.i
    i32 39, label %land.lhs.true21.i
  ]

land.lhs.true.i:                                  ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !10
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load1.i = load i32* %6, align 8
  %bf.clear2.i = and i32 %bf.load1.i, 65535
  %cmp3.i = icmp eq i32 %bf.clear2.i, 41
  br i1 %cmp3.i, label %if.then.i, label %if.end67.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 3
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtvec_def**
  %7 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !10
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %7, i64 0, i32 0
  br label %get_asm_operand_n_inputs.exit

if.then12.i:                                      ; preds = %entry
  %arrayidx14.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 3
  %rtvec15.i = bitcast %union.rtunion_def* %arrayidx14.i to %struct.rtvec_def**
  %8 = load %struct.rtvec_def** %rtvec15.i, align 8, !tbaa !10
  %num_elem16.i = getelementptr inbounds %struct.rtvec_def* %8, i64 0, i32 0
  br label %get_asm_operand_n_inputs.exit

land.lhs.true21.i:                                ; preds = %entry
  %arrayidx23.i = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtvec24.i = bitcast %union.rtunion_def* %arrayidx23.i to %struct.rtvec_def**
  %9 = load %struct.rtvec_def** %rtvec24.i, align 8, !tbaa !10
  %arrayidx25.i = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 0
  %10 = load %struct.rtx_def** %arrayidx25.i, align 8, !tbaa !10
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load26.i = load i32* %11, align 8
  %bf.clear27.i = and i32 %bf.load26.i, 65535
  switch i32 %bf.clear27.i, label %if.end67.i [
    i32 47, label %if.then29.i
    i32 41, label %if.then55.i
  ]

if.then29.i:                                      ; preds = %land.lhs.true21.i
  %arrayidx36.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 1
  %rtx37.i = bitcast %union.rtunion_def* %arrayidx36.i to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx37.i, align 8, !tbaa !10
  %arrayidx39.i = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 3
  %rtvec40.i = bitcast %union.rtunion_def* %arrayidx39.i to %struct.rtvec_def**
  %13 = load %struct.rtvec_def** %rtvec40.i, align 8, !tbaa !10
  %num_elem41.i = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 0
  br label %get_asm_operand_n_inputs.exit

if.then55.i:                                      ; preds = %land.lhs.true21.i
  %arrayidx62.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 3
  %rtvec63.i = bitcast %union.rtunion_def* %arrayidx62.i to %struct.rtvec_def**
  %14 = load %struct.rtvec_def** %rtvec63.i, align 8, !tbaa !10
  %num_elem64.i = getelementptr inbounds %struct.rtvec_def* %14, i64 0, i32 0
  br label %get_asm_operand_n_inputs.exit

if.end67.i:                                       ; preds = %land.lhs.true21.i, %land.lhs.true.i, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 804, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.get_asm_operand_n_inputs, i64 0, i64 0)) #6
  unreachable

get_asm_operand_n_inputs.exit:                    ; preds = %if.then.i, %if.then12.i, %if.then29.i, %if.then55.i
  %retval.0.in.i = phi i32* [ %num_elem.i, %if.then.i ], [ %num_elem16.i, %if.then12.i ], [ %num_elem41.i, %if.then29.i ], [ %num_elem64.i, %if.then55.i ]
  %retval.0.i = load i32* %retval.0.in.i, align 4
  %15 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !48
  %conv = sext i8 %15 to i32
  %sub = sub i32 %conv, %retval.0.i
  %cmp = icmp slt i32 %3, 0
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %get_asm_operand_n_inputs.exit
  %cmp8481 = icmp sgt i8 %15, 0
  br i1 %cmp8481, label %for.body, label %for.end

if.then:                                          ; preds = %get_asm_operand_n_inputs.exit
  %16 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !10
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %16) #4
  %17 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %call3.c = ptrtoint %struct.rtx_def* %call3 to i64
  store i64 %call3.c, i64* %17, align 8, !tbaa !10
  br label %cleanup

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %18 = phi i8 [ %23, %for.inc ], [ %15, %for.cond.preheader ]
  %indvars.iv506 = phi i64 [ %indvars.iv.next507, %for.inc ], [ 0, %for.cond.preheader ]
  %arrayidx10 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv506
  %19 = load %struct.rtx_def** %arrayidx10, align 8, !tbaa !10
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load = load i32* %20, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp11 = icmp eq i32 %bf.clear, 63
  br i1 %cmp11, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx17, align 8, !tbaa !10
  %22 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 0
  %bf.load18 = load i32* %22, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 61
  br i1 %cmp20, label %if.then22, label %for.inc

if.then22:                                        ; preds = %land.lhs.true
  store %struct.rtx_def* %21, %struct.rtx_def** %arrayidx10, align 8, !tbaa !10
  %.pre520 = load i8* getelementptr inbounds (%struct.recog_data* @recog_data, i64 0, i32 7), align 4, !tbaa !48
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then22
  %23 = phi i8 [ %18, %for.body ], [ %18, %land.lhs.true ], [ %.pre520, %if.then22 ]
  %indvars.iv.next507 = add nuw nsw i64 %indvars.iv506, 1
  %conv7 = sext i8 %23 to i32
  %24 = trunc i64 %indvars.iv.next507 to i32
  %cmp8 = icmp slt i32 %24, %conv7
  br i1 %cmp8, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.inc
  %bf.load31.pre = load i32* %4, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader
  %bf.load31 = phi i32 [ %bf.load31.pre, %for.cond.for.end_crit_edge ], [ %bf.load.i, %for.cond.preheader ]
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 39
  br i1 %cmp33, label %if.then35, label %if.end107

if.then35:                                        ; preds = %for.end
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtvec_def**
  %25 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !10
  %num_elem = getelementptr inbounds %struct.rtvec_def* %25, i64 0, i32 0
  %26 = load i32* %num_elem, align 4, !tbaa !11
  %conv38 = sext i32 %26 to i64
  %27 = alloca %struct.rtx_def*, i64 %conv38, align 1
  %cmp44476 = icmp sgt i32 %26, 0
  br i1 %cmp44476, label %for.body46, label %if.end107

for.body46:                                       ; preds = %if.then35, %for.inc104
  %indvars.iv504 = phi i64 [ %indvars.iv.next505, %for.inc104 ], [ 0, %if.then35 ]
  %n_clobbers.0477 = phi i32 [ %n_clobbers.1, %for.inc104 ], [ 0, %if.then35 ]
  %arrayidx51 = getelementptr inbounds %struct.rtvec_def* %25, i64 0, i32 1, i64 %indvars.iv504
  %28 = load %struct.rtx_def** %arrayidx51, align 8, !tbaa !10
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load52 = load i32* %29, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  %cmp54 = icmp eq i32 %bf.clear53, 49
  br i1 %cmp54, label %if.then56, label %for.inc104

if.then56:                                        ; preds = %for.body46
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx65, align 8, !tbaa !10
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load66 = load i32* %31, align 8
  %bf.clear67 = and i32 %bf.load66, 65535
  %cmp68 = icmp eq i32 %bf.clear67, 63
  br i1 %cmp68, label %land.lhs.true70, label %if.end82

land.lhs.true70:                                  ; preds = %if.then56
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 0
  %rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**
  %32 = load %struct.rtx_def** %rtx73, align 8, !tbaa !10
  %33 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 0
  %bf.load74 = load i32* %33, align 8
  %bf.clear75 = and i32 %bf.load74, 65535
  %cmp76 = icmp eq i32 %bf.clear75, 61
  %. = select i1 %cmp76, %struct.rtx_def* %32, %struct.rtx_def* %30
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %., i64 0, i32 0
  %bf.load83.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end82

if.end82:                                         ; preds = %land.lhs.true70, %if.then56
  %bf.load83 = phi i32 [ %bf.load66, %if.then56 ], [ %bf.load83.pre, %land.lhs.true70 ]
  %reg.0 = phi %struct.rtx_def* [ %30, %if.then56 ], [ %., %land.lhs.true70 ]
  %bf.clear84 = and i32 %bf.load83, 65535
  %cmp85 = icmp eq i32 %bf.clear84, 61
  br i1 %cmp85, label %land.lhs.true87, label %for.inc104

land.lhs.true87:                                  ; preds = %if.end82
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %reg.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx89 to i32*
  %34 = load i32* %rtuint, align 4, !tbaa !4
  %35 = and i32 %34, -8
  %36 = icmp eq i32 %35, 8
  br i1 %36, label %if.then98, label %for.inc104

if.then98:                                        ; preds = %land.lhs.true87
  %idxprom99 = sext i32 %n_clobbers.0477 to i64
  %arrayidx100 = getelementptr inbounds %struct.rtx_def** %27, i64 %idxprom99
  store %struct.rtx_def* %reg.0, %struct.rtx_def** %arrayidx100, align 8, !tbaa !10
  %inc101 = add nsw i32 %n_clobbers.0477, 1
  br label %for.inc104

for.inc104:                                       ; preds = %for.body46, %if.then98, %land.lhs.true87, %if.end82
  %n_clobbers.1 = phi i32 [ %inc101, %if.then98 ], [ %n_clobbers.0477, %land.lhs.true87 ], [ %n_clobbers.0477, %if.end82 ], [ %n_clobbers.0477, %for.body46 ]
  %indvars.iv.next505 = add nuw nsw i64 %indvars.iv504, 1
  %37 = trunc i64 %indvars.iv.next505 to i32
  %cmp44 = icmp slt i32 %37, %26
  br i1 %cmp44, label %for.body46, label %if.end107

if.end107:                                        ; preds = %for.inc104, %if.then35, %for.end
  %clobber_reg.0 = phi %struct.rtx_def** [ null, %for.end ], [ %27, %if.then35 ], [ %27, %for.inc104 ]
  %n_clobbers.2 = phi i32 [ 0, %for.end ], [ 0, %if.then35 ], [ %n_clobbers.1, %for.inc104 ]
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 53, i32 16, i1 false)
  %cmp109468 = icmp sgt i32 %sub, 0
  br i1 %cmp109468, label %for.body111.lr.ph, label %for.cond188.preheader

for.body111.lr.ph:                                ; preds = %if.end107
  %idxprom135 = sext i32 %3 to i64
  %cmp145465 = icmp sgt i32 %n_clobbers.2, 0
  br label %for.body111

for.cond188.preheader:                            ; preds = %for.inc185, %if.end107
  %malformed_asm.0.lcssa = phi i32 [ 0, %if.end107 ], [ %malformed_asm.2, %for.inc185 ]
  br label %for.body191

for.body111:                                      ; preds = %for.inc185, %for.body111.lr.ph
  %indvars.iv502 = phi i64 [ 0, %for.body111.lr.ph ], [ %indvars.iv.next503, %for.inc185 ]
  %malformed_asm.0469 = phi i32 [ 0, %for.body111.lr.ph ], [ %malformed_asm.2, %for.inc185 ]
  %arrayidx113 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv502
  %38 = load %struct.rtx_def** %arrayidx113, align 8, !tbaa !10
  %39 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load114 = load i32* %39, align 8
  %bf.clear115 = and i32 %bf.load114, 65535
  %cmp116 = icmp eq i32 %bf.clear115, 61
  br i1 %cmp116, label %land.lhs.true118, label %for.inc185

land.lhs.true118:                                 ; preds = %for.body111
  %arrayidx122 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 0
  %rtuint123 = bitcast %union.rtunion_def* %arrayidx122 to i32*
  %40 = load i32* %rtuint123, align 4, !tbaa !4
  %41 = and i32 %40, -8
  %42 = icmp eq i32 %41, 8
  br i1 %42, label %if.then134, label %for.inc185

if.then134:                                       ; preds = %land.lhs.true118
  %class = getelementptr inbounds [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv502, i64 %idxprom135, i32 1
  %43 = load i32* %class, align 8, !tbaa !50
  %idxprom139 = sext i32 %43 to i64
  %arrayidx140 = getelementptr inbounds [25 x i32]* @reg_class_size, i64 0, i64 %idxprom139
  %44 = load i32* %arrayidx140, align 4, !tbaa !4
  %cmp141 = icmp eq i32 %44, 1
  br i1 %cmp141, label %for.cond144.preheader, label %if.then143

for.cond144.preheader:                            ; preds = %if.then134
  br i1 %cmp145465, label %for.body147, label %for.end171

if.then143:                                       ; preds = %if.then134
  %45 = trunc i64 %indvars.iv502 to i32
  tail call void (%struct.rtx_def*, i8*, ...)* @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([52 x i8]* @.str8, i64 0, i64 0), i32 %45) #4
  br label %for.inc185

for.cond144:                                      ; preds = %for.body147
  %46 = trunc i64 %indvars.iv.next501 to i32
  %cmp145 = icmp slt i32 %46, %n_clobbers.2
  br i1 %cmp145, label %for.body147, label %for.end171

for.body147:                                      ; preds = %for.cond144.preheader, %for.cond144
  %indvars.iv500 = phi i64 [ %indvars.iv.next501, %for.cond144 ], [ 0, %for.cond144.preheader ]
  %arrayidx154 = getelementptr inbounds %struct.rtx_def** %clobber_reg.0, i64 %indvars.iv500
  %47 = load %struct.rtx_def** %arrayidx154, align 8, !tbaa !10
  %arrayidx156 = getelementptr inbounds %struct.rtx_def* %47, i64 0, i32 1, i64 0
  %rtuint157 = bitcast %union.rtunion_def* %arrayidx156 to i32*
  %48 = load i32* %rtuint157, align 4, !tbaa !4
  %cmp158 = icmp eq i32 %40, %48
  %indvars.iv.next501 = add nuw nsw i64 %indvars.iv500, 1
  br i1 %cmp158, label %if.then160, label %for.cond144

if.then160:                                       ; preds = %for.body147
  %49 = trunc i64 %indvars.iv500 to i32
  %idxprom166 = zext i32 %40 to i64
  %arrayidx167 = getelementptr inbounds [53 x i8*]* @reg_names, i64 0, i64 %idxprom166
  %50 = load i8** %arrayidx167, align 8, !tbaa !10
  %51 = trunc i64 %indvars.iv502 to i32
  tail call void (%struct.rtx_def*, i8*, ...)* @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([68 x i8]* @.str9, i64 0, i64 0), i32 %51, i8* %50) #4
  br label %for.end171

for.end171:                                       ; preds = %for.cond144, %for.cond144.preheader, %if.then160
  %j.0443 = phi i32 [ %49, %if.then160 ], [ 0, %for.cond144.preheader ], [ %46, %for.cond144 ]
  %malformed_asm.1 = phi i32 [ 1, %if.then160 ], [ %malformed_asm.0469, %for.cond144.preheader ], [ %malformed_asm.0469, %for.cond144 ]
  %cmp172 = icmp eq i32 %j.0443, %n_clobbers.2
  br i1 %cmp172, label %if.then174, label %for.inc185

if.then174:                                       ; preds = %for.end171
  %52 = load %struct.rtx_def** %arrayidx113, align 8, !tbaa !10
  %arrayidx178 = getelementptr inbounds %struct.rtx_def* %52, i64 0, i32 1, i64 0
  %rtuint179 = bitcast %union.rtunion_def* %arrayidx178 to i32*
  %53 = load i32* %rtuint179, align 4, !tbaa !4
  %idxprom180 = zext i32 %53 to i64
  %arrayidx181 = getelementptr inbounds [53 x i8]* %reg_used_as_output, i64 0, i64 %idxprom180
  store i8 1, i8* %arrayidx181, align 1, !tbaa !1
  br label %for.inc185

for.inc185:                                       ; preds = %for.body111, %land.lhs.true118, %for.end171, %if.then174, %if.then143
  %malformed_asm.2 = phi i32 [ 1, %if.then143 ], [ %malformed_asm.1, %if.then174 ], [ %malformed_asm.1, %for.end171 ], [ %malformed_asm.0469, %land.lhs.true118 ], [ %malformed_asm.0469, %for.body111 ]
  %indvars.iv.next503 = add nuw nsw i64 %indvars.iv502, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next503 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %sub
  br i1 %exitcond, label %for.cond188.preheader, label %for.body111

for.cond188:                                      ; preds = %for.body191
  %54 = trunc i64 %indvars.iv.next499 to i32
  %cmp189 = icmp slt i32 %54, 16
  br i1 %cmp189, label %for.body191, label %for.cond199.preheader

for.body191:                                      ; preds = %for.cond188.preheader, %for.cond188
  %indvars.iv498 = phi i64 [ 8, %for.cond188.preheader ], [ %indvars.iv.next499, %for.cond188 ]
  %i.3464 = phi i32 [ 8, %for.cond188.preheader ], [ %inc197, %for.cond188 ]
  %arrayidx193 = getelementptr inbounds [53 x i8]* %reg_used_as_output, i64 0, i64 %indvars.iv498
  %55 = load i8* %arrayidx193, align 1, !tbaa !1
  %tobool = icmp eq i8 %55, 0
  %indvars.iv.next499 = add nuw nsw i64 %indvars.iv498, 1
  %inc197 = add nsw i32 %i.3464, 1
  %56 = trunc i64 %indvars.iv498 to i32
  br i1 %tobool, label %for.cond199.preheader, label %for.cond188

for.cond199.preheader:                            ; preds = %for.cond188, %for.body191
  %i.3.lcssa = phi i32 [ %inc197, %for.cond188 ], [ %56, %for.body191 ]
  %cmp200460 = icmp slt i32 %i.3.lcssa, 16
  br i1 %cmp200460, label %for.body202.lr.ph, label %for.end210

for.body202.lr.ph:                                ; preds = %for.cond199.preheader
  %57 = sext i32 %i.3.lcssa to i64
  br label %for.body202

for.cond199:                                      ; preds = %for.body202
  %58 = trunc i64 %indvars.iv.next497 to i32
  %cmp200 = icmp slt i32 %58, 16
  br i1 %cmp200, label %for.body202, label %for.end210

for.body202:                                      ; preds = %for.body202.lr.ph, %for.cond199
  %indvars.iv496 = phi i64 [ %57, %for.body202.lr.ph ], [ %indvars.iv.next497, %for.cond199 ]
  %arrayidx204 = getelementptr inbounds [53 x i8]* %reg_used_as_output, i64 0, i64 %indvars.iv496
  %59 = load i8* %arrayidx204, align 1, !tbaa !1
  %tobool205 = icmp eq i8 %59, 0
  %indvars.iv.next497 = add nsw i64 %indvars.iv496, 1
  br i1 %tobool205, label %for.cond199, label %for.body202.for.end210_crit_edge

for.body202.for.end210_crit_edge:                 ; preds = %for.body202
  %60 = trunc i64 %indvars.iv496 to i32
  br label %for.end210

for.end210:                                       ; preds = %for.cond199, %for.body202.for.end210_crit_edge, %for.cond199.preheader
  %i.4.lcssa = phi i32 [ %60, %for.body202.for.end210_crit_edge ], [ %i.3.lcssa, %for.cond199.preheader ], [ %58, %for.cond199 ]
  %cmp211 = icmp eq i32 %i.4.lcssa, 16
  br i1 %cmp211, label %if.end214, label %if.then213

if.then213:                                       ; preds = %for.end210
  tail call void (%struct.rtx_def*, i8*, ...)* @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([44 x i8]* @.str10, i64 0, i64 0)) #4
  br label %if.end214

if.end214:                                        ; preds = %for.end210, %if.then213
  %malformed_asm.3 = phi i32 [ 1, %if.then213 ], [ %malformed_asm.0.lcssa, %for.end210 ]
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 53, i32 16, i1 false)
  %cmp216458 = icmp sgt i32 %retval.0.i, 0
  br i1 %cmp216458, label %for.body218.lr.ph, label %for.body282

for.body218.lr.ph:                                ; preds = %if.end214
  %cmp244456 = icmp sgt i32 %n_clobbers.2, 0
  %idxprom260 = sext i32 %3 to i64
  %61 = sext i32 %sub to i64
  br i1 %cmp244456, label %for.body218.us, label %for.body218

for.body218.us:                                   ; preds = %for.body218.lr.ph, %for.inc276.us
  %indvars.iv516 = phi i64 [ %indvars.iv.next517, %for.inc276.us ], [ %61, %for.body218.lr.ph ]
  %arrayidx220.us = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv516
  %62 = load %struct.rtx_def** %arrayidx220.us, align 8, !tbaa !10
  %63 = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 0
  %bf.load221.us = load i32* %63, align 8
  %bf.clear222.us = and i32 %bf.load221.us, 65535
  %cmp223.us = icmp eq i32 %bf.clear222.us, 61
  br i1 %cmp223.us, label %land.lhs.true225.us, label %for.inc276.us

land.lhs.true225.us:                              ; preds = %for.body218.us
  %arrayidx229.us = getelementptr inbounds %struct.rtx_def* %62, i64 0, i32 1, i64 0
  %rtuint230.us = bitcast %union.rtunion_def* %arrayidx229.us to i32*
  %64 = load i32* %rtuint230.us, align 4, !tbaa !4
  %65 = and i32 %64, -8
  %66 = icmp eq i32 %65, 8
  br i1 %66, label %for.body246.us, label %for.inc276.us

for.cond243.us:                                   ; preds = %for.body246.us
  %67 = trunc i64 %indvars.iv.next515 to i32
  %cmp244.us = icmp slt i32 %67, %n_clobbers.2
  br i1 %cmp244.us, label %for.cond243.us.for.body246.us_crit_edge, label %lor.lhs.false.us

for.cond243.us.for.body246.us_crit_edge:          ; preds = %for.cond243.us
  %.pre = load %struct.rtx_def** %arrayidx220.us, align 8, !tbaa !10
  br label %for.body246.us

lor.lhs.false.us:                                 ; preds = %for.cond243.us
  %matches.us = getelementptr inbounds [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv516, i64 %idxprom260, i32 3
  %68 = load i32* %matches.us, align 8, !tbaa !52
  %cmp264.us = icmp sgt i32 %68, -1
  br i1 %cmp264.us, label %if.then266.us, label %for.inc276.us

for.body246.us:                                   ; preds = %land.lhs.true225.us, %for.cond243.us.for.body246.us_crit_edge
  %69 = phi %struct.rtx_def* [ %.pre, %for.cond243.us.for.body246.us_crit_edge ], [ %62, %land.lhs.true225.us ]
  %indvars.iv514 = phi i64 [ %indvars.iv.next515, %for.cond243.us.for.body246.us_crit_edge ], [ 0, %land.lhs.true225.us ]
  %arrayidx248.us = getelementptr inbounds %struct.rtx_def** %clobber_reg.0, i64 %indvars.iv514
  %70 = load %struct.rtx_def** %arrayidx248.us, align 8, !tbaa !10
  %call251.us = tail call i32 @operands_match_p(%struct.rtx_def* %70, %struct.rtx_def* %69) #4
  %tobool252.us = icmp eq i32 %call251.us, 0
  %indvars.iv.next515 = add nuw nsw i64 %indvars.iv514, 1
  br i1 %tobool252.us, label %for.cond243.us, label %if.then266.us

if.then266.us:                                    ; preds = %for.body246.us, %lor.lhs.false.us
  %71 = load %struct.rtx_def** %arrayidx220.us, align 8, !tbaa !10
  %arrayidx270.us = getelementptr inbounds %struct.rtx_def* %71, i64 0, i32 1, i64 0
  %rtuint271.us = bitcast %union.rtunion_def* %arrayidx270.us to i32*
  %72 = load i32* %rtuint271.us, align 4, !tbaa !4
  %idxprom272.us = zext i32 %72 to i64
  %arrayidx273.us = getelementptr inbounds [53 x i8]* %implicitly_dies, i64 0, i64 %idxprom272.us
  store i8 1, i8* %arrayidx273.us, align 1, !tbaa !1
  br label %for.inc276.us

for.inc276.us:                                    ; preds = %if.then266.us, %lor.lhs.false.us, %land.lhs.true225.us, %for.body218.us
  %indvars.iv.next517 = add nsw i64 %indvars.iv516, 1
  %73 = trunc i64 %indvars.iv.next517 to i32
  %cmp216.us = icmp slt i32 %73, %conv
  br i1 %cmp216.us, label %for.body218.us, label %for.body282

for.body218:                                      ; preds = %for.body218.lr.ph, %for.inc276
  %indvars.iv494 = phi i64 [ %indvars.iv.next495, %for.inc276 ], [ %61, %for.body218.lr.ph ]
  %arrayidx220 = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv494
  %74 = load %struct.rtx_def** %arrayidx220, align 8, !tbaa !10
  %75 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 0
  %bf.load221 = load i32* %75, align 8
  %bf.clear222 = and i32 %bf.load221, 65535
  %cmp223 = icmp eq i32 %bf.clear222, 61
  br i1 %cmp223, label %land.lhs.true225, label %for.inc276

land.lhs.true225:                                 ; preds = %for.body218
  %arrayidx229 = getelementptr inbounds %struct.rtx_def* %74, i64 0, i32 1, i64 0
  %rtuint230 = bitcast %union.rtunion_def* %arrayidx229 to i32*
  %76 = load i32* %rtuint230, align 4, !tbaa !4
  %77 = and i32 %76, -8
  %78 = icmp eq i32 %77, 8
  br i1 %78, label %lor.lhs.false, label %for.inc276

lor.lhs.false:                                    ; preds = %land.lhs.true225
  %matches = getelementptr inbounds [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv494, i64 %idxprom260, i32 3
  %79 = load i32* %matches, align 8, !tbaa !52
  %cmp264 = icmp sgt i32 %79, -1
  br i1 %cmp264, label %if.then266, label %for.inc276

if.then266:                                       ; preds = %lor.lhs.false
  %idxprom272 = zext i32 %76 to i64
  %arrayidx273 = getelementptr inbounds [53 x i8]* %implicitly_dies, i64 0, i64 %idxprom272
  store i8 1, i8* %arrayidx273, align 1, !tbaa !1
  br label %for.inc276

for.inc276:                                       ; preds = %for.body218, %land.lhs.true225, %if.then266, %lor.lhs.false
  %indvars.iv.next495 = add nsw i64 %indvars.iv494, 1
  %80 = trunc i64 %indvars.iv.next495 to i32
  %cmp216 = icmp slt i32 %80, %conv
  br i1 %cmp216, label %for.body218, label %for.body282

for.cond279:                                      ; preds = %for.body282
  %81 = trunc i64 %indvars.iv.next493 to i32
  %cmp280 = icmp slt i32 %81, 16
  br i1 %cmp280, label %for.body282, label %for.cond291.preheader

for.body282:                                      ; preds = %if.end214, %for.inc276.us, %for.inc276, %for.cond279
  %indvars.iv492 = phi i64 [ %indvars.iv.next493, %for.cond279 ], [ 8, %for.inc276 ], [ 8, %for.inc276.us ], [ 8, %if.end214 ]
  %i.6455 = phi i32 [ %inc289, %for.cond279 ], [ 8, %for.inc276 ], [ 8, %for.inc276.us ], [ 8, %if.end214 ]
  %arrayidx284 = getelementptr inbounds [53 x i8]* %implicitly_dies, i64 0, i64 %indvars.iv492
  %82 = load i8* %arrayidx284, align 1, !tbaa !1
  %tobool285 = icmp eq i8 %82, 0
  %indvars.iv.next493 = add nuw nsw i64 %indvars.iv492, 1
  %inc289 = add nsw i32 %i.6455, 1
  %83 = trunc i64 %indvars.iv492 to i32
  br i1 %tobool285, label %for.cond291.preheader, label %for.cond279

for.cond291.preheader:                            ; preds = %for.cond279, %for.body282
  %i.6.lcssa = phi i32 [ %inc289, %for.cond279 ], [ %83, %for.body282 ]
  %cmp292451 = icmp slt i32 %i.6.lcssa, 16
  br i1 %cmp292451, label %for.body294.lr.ph, label %for.end302

for.body294.lr.ph:                                ; preds = %for.cond291.preheader
  %84 = sext i32 %i.6.lcssa to i64
  br label %for.body294

for.cond291:                                      ; preds = %for.body294
  %85 = trunc i64 %indvars.iv.next491 to i32
  %cmp292 = icmp slt i32 %85, 16
  br i1 %cmp292, label %for.body294, label %for.end302

for.body294:                                      ; preds = %for.body294.lr.ph, %for.cond291
  %indvars.iv490 = phi i64 [ %84, %for.body294.lr.ph ], [ %indvars.iv.next491, %for.cond291 ]
  %arrayidx296 = getelementptr inbounds [53 x i8]* %implicitly_dies, i64 0, i64 %indvars.iv490
  %86 = load i8* %arrayidx296, align 1, !tbaa !1
  %tobool297 = icmp eq i8 %86, 0
  %indvars.iv.next491 = add nsw i64 %indvars.iv490, 1
  br i1 %tobool297, label %for.cond291, label %for.body294.for.end302_crit_edge

for.body294.for.end302_crit_edge:                 ; preds = %for.body294
  %87 = trunc i64 %indvars.iv490 to i32
  br label %for.end302

for.end302:                                       ; preds = %for.cond291, %for.body294.for.end302_crit_edge, %for.cond291.preheader
  %i.7.lcssa = phi i32 [ %87, %for.body294.for.end302_crit_edge ], [ %i.6.lcssa, %for.cond291.preheader ], [ %85, %for.cond291 ]
  %cmp303 = icmp eq i32 %i.7.lcssa, 16
  br i1 %cmp303, label %for.cond307.preheader, label %if.then305

if.then305:                                       ; preds = %for.end302
  tail call void (%struct.rtx_def*, i8*, ...)* @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([55 x i8]* @.str11, i64 0, i64 0)) #4
  br label %for.cond307.preheader

for.cond307.preheader:                            ; preds = %for.end302, %if.then305
  %malformed_asm.5.ph = phi i32 [ 1, %if.then305 ], [ %malformed_asm.3, %for.end302 ]
  br i1 %cmp216458, label %for.body311.lr.ph, label %for.end339

for.body311.lr.ph:                                ; preds = %for.cond307.preheader
  %idxprom312 = sext i32 %3 to i64
  %88 = sext i32 %sub to i64
  br i1 %cmp109468, label %for.body311.us, label %for.inc337.preheader

for.inc337.preheader:                             ; preds = %for.body311.lr.ph
  %89 = sext i8 %15 to i32
  %90 = add i32 %89, 1
  %91 = sub i32 %90, %retval.0.i
  %92 = icmp sgt i32 %91, %89
  %smax = select i1 %92, i32 %91, i32 %89
  %93 = add i32 %retval.0.i, %smax
  %94 = add i32 %93, -1
  %95 = sub i32 %94, %89
  %96 = zext i32 %95 to i64
  %97 = add i64 %96, 1
  %end.idx = add i64 %97, %88
  %n.vec = and i64 %97, -4
  %end.idx.rnd.down = add i64 %n.vec, %88
  %cmp.zero = icmp eq i64 %n.vec, 0
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %for.inc337.preheader, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ %88, %for.inc337.preheader ]
  %index.next = add i64 %index, 4
  %98 = icmp eq i64 %index.next, %end.idx.rnd.down
  br i1 %98, label %middle.block, label %vector.body, !llvm.loop !59

middle.block:                                     ; preds = %vector.body, %for.inc337.preheader
  %resume.val = phi i64 [ %88, %for.inc337.preheader ], [ %end.idx.rnd.down, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %for.end339, label %for.inc337

for.body311.us:                                   ; preds = %for.body311.lr.ph, %for.inc337.us
  %indvars.iv512 = phi i64 [ %indvars.iv.next513, %for.inc337.us ], [ %88, %for.body311.lr.ph ]
  %malformed_asm.5448.us = phi i32 [ %malformed_asm.8.us, %for.inc337.us ], [ %malformed_asm.5.ph, %for.body311.lr.ph ]
  %matches316.us = getelementptr inbounds [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %indvars.iv512, i64 %idxprom312, i32 3
  %99 = load i32* %matches316.us, align 8, !tbaa !52
  %cmp317.us = icmp eq i32 %99, -1
  br i1 %cmp317.us, label %for.body324.lr.ph.us, label %for.inc337.us

for.inc337.us:                                    ; preds = %for.inc333.us, %for.body311.us
  %malformed_asm.8.us = phi i32 [ %malformed_asm.5448.us, %for.body311.us ], [ %malformed_asm.7.us, %for.inc333.us ]
  %indvars.iv.next513 = add nsw i64 %indvars.iv512, 1
  %100 = trunc i64 %indvars.iv.next513 to i32
  %cmp309.us = icmp slt i32 %100, %conv
  br i1 %cmp309.us, label %for.body311.us, label %for.end339

for.body324.us:                                   ; preds = %for.inc333.us, %for.body324.lr.ph.us
  %indvars.iv508 = phi i64 [ 0, %for.body324.lr.ph.us ], [ %indvars.iv.next509, %for.inc333.us ]
  %malformed_asm.6445.us = phi i32 [ %malformed_asm.5448.us, %for.body324.lr.ph.us ], [ %malformed_asm.7.us, %for.inc333.us ]
  %arrayidx326.us = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv508
  %101 = load %struct.rtx_def** %arrayidx326.us, align 8, !tbaa !10
  %102 = load %struct.rtx_def** %arrayidx328.us, align 8, !tbaa !10
  %call329.us = tail call i32 @operands_match_p(%struct.rtx_def* %101, %struct.rtx_def* %102) #4
  %tobool330.us = icmp eq i32 %call329.us, 0
  br i1 %tobool330.us, label %for.inc333.us, label %if.then331.us

if.then331.us:                                    ; preds = %for.body324.us
  %103 = trunc i64 %indvars.iv508 to i32
  tail call void (%struct.rtx_def*, i8*, ...)* @error_for_asm(%struct.rtx_def* %insn, i8* getelementptr inbounds ([42 x i8]* @.str12, i64 0, i64 0), i32 %103) #4
  br label %for.inc333.us

for.inc333.us:                                    ; preds = %if.then331.us, %for.body324.us
  %malformed_asm.7.us = phi i32 [ 1, %if.then331.us ], [ %malformed_asm.6445.us, %for.body324.us ]
  %indvars.iv.next509 = add nuw nsw i64 %indvars.iv508, 1
  %lftr.wideiv510 = trunc i64 %indvars.iv.next509 to i32
  %exitcond511 = icmp eq i32 %lftr.wideiv510, %sub
  br i1 %exitcond511, label %for.inc337.us, label %for.body324.us

for.body324.lr.ph.us:                             ; preds = %for.body311.us
  %arrayidx328.us = getelementptr inbounds %struct.recog_data* @recog_data, i64 0, i32 0, i64 %indvars.iv512
  br label %for.body324.us

for.inc337:                                       ; preds = %middle.block, %for.inc337
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc337 ], [ %resume.val, %middle.block ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %104 = trunc i64 %indvars.iv.next to i32
  %cmp309 = icmp slt i32 %104, %conv
  br i1 %cmp309, label %for.inc337, label %for.end339, !llvm.loop !60

for.end339:                                       ; preds = %for.inc337, %middle.block, %for.inc337.us, %for.cond307.preheader
  %malformed_asm.5.lcssa = phi i32 [ %malformed_asm.5.ph, %for.cond307.preheader ], [ %malformed_asm.8.us, %for.inc337.us ], [ %malformed_asm.5.ph, %middle.block ], [ %malformed_asm.5.ph, %for.inc337 ]
  %tobool340 = icmp eq i32 %malformed_asm.5.lcssa, 0
  br i1 %tobool340, label %cleanup, label %if.then341

if.then341:                                       ; preds = %for.end339
  %105 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !10
  %call342 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 0, %struct.rtx_def* %105) #4
  %106 = getelementptr inbounds %union.rtunion_def* %arrayidx, i64 0, i32 0
  %call342.c = ptrtoint %struct.rtx_def* %call342 to i64
  store i64 %call342.c, i64* %106, align 8, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %for.end339, %if.then341, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then341 ], [ 1, %for.end339 ]
  call void @llvm.lifetime.end(i64 53, i8* %2) #4
  call void @llvm.lifetime.end(i64 53, i8* %1) #4
  ret i32 %retval.0
}

declare void @extract_insn(%struct.rtx_def*) #1

declare i32 @constrain_operands(i32) #1

declare void @preprocess_constraints() #1

declare i32 @reg_class_subset_p(i32, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @change_stack(%struct.rtx_def* %insn, %struct.stack_def* %old, %struct.stack_def* nocapture %new, i32 %where) #0 {
entry:
  %cmp = icmp eq i32 %where, 0
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %0 = load %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %tobool = icmp eq %struct.basic_block_def* %0, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %end = getelementptr inbounds %struct.basic_block_def* %0, i64 0, i32 1
  %1 = load %struct.rtx_def** %end, align 8, !tbaa !47
  %cmp1 = icmp eq %struct.rtx_def* %1, %insn
  %. = zext i1 %cmp1 to i32
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.then
  %update_end.0 = phi i32 [ 0, %if.then ], [ %., %land.lhs.true ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !10
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %insn.addr.0 = phi %struct.rtx_def* [ %2, %if.end ], [ %insn, %entry ]
  %update_end.1 = phi i32 [ %update_end.0, %if.end ], [ 0, %entry ]
  %top = getelementptr inbounds %struct.stack_def* %old, i64 0, i32 0
  %3 = load i32* %top, align 4, !tbaa !33
  %cmp4206 = icmp sgt i32 %3, -1
  br i1 %cmp4206, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end3
  %reg_set = getelementptr inbounds %struct.stack_def* %new, i64 0, i32 1
  %4 = sext i32 %3 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv216 = phi i64 [ %4, %for.body.lr.ph ], [ %indvars.iv.next217, %for.inc ]
  %5 = load i64* %reg_set, align 8, !tbaa !34
  %arrayidx6 = getelementptr inbounds %struct.stack_def* %old, i64 0, i32 2, i64 %indvars.iv216
  %6 = load i8* %arrayidx6, align 1, !tbaa !1
  %sh_prom = zext i8 %6 to i64
  %shl = shl i64 1, %sh_prom
  %and = and i64 %shl, %5
  %tobool7 = icmp eq i64 %and, 0
  br i1 %tobool7, label %if.then8, label %for.inc

if.then8:                                         ; preds = %for.body
  %sub = add i64 %sh_prom, -8
  %arrayidx15 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %sub, i64 16
  %7 = load %struct.rtx_def** %arrayidx15, align 8, !tbaa !10
  %call = tail call fastcc %struct.rtx_def* @emit_pop_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %old, %struct.rtx_def* %7, i32 1)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then8
  %indvars.iv.next217 = add nsw i64 %indvars.iv216, -1
  %8 = trunc i64 %indvars.iv216 to i32
  %cmp4 = icmp sgt i32 %8, 0
  br i1 %cmp4, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %if.end3
  %top17 = getelementptr inbounds %struct.stack_def* %new, i64 0, i32 0
  %9 = load i32* %top17, align 4, !tbaa !33
  %cmp18 = icmp eq i32 %9, -2
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %for.end
  %10 = load i32* %top, align 4, !tbaa !33
  store i32 %10, i32* %top17, align 4, !tbaa !33
  %11 = getelementptr inbounds %struct.stack_def* %new, i64 0, i32 2, i64 0
  %12 = getelementptr inbounds %struct.stack_def* %old, i64 0, i32 2, i64 0
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %11 to i64*
  %15 = load i64* %13, align 1
  store i64 %15, i64* %14, align 1
  br label %if.end137

if.else:                                          ; preds = %for.end
  %reg_set25 = getelementptr inbounds %struct.stack_def* %old, i64 0, i32 1
  %16 = load i64* %reg_set25, align 8, !tbaa !34
  %reg_set26 = getelementptr inbounds %struct.stack_def* %new, i64 0, i32 1
  %17 = load i64* %reg_set26, align 8, !tbaa !34
  %cmp27 = icmp eq i64 %16, %17
  br i1 %cmp27, label %win, label %if.end30

if.end30:                                         ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2293, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.change_stack, i64 0, i64 0)) #6
  unreachable

win:                                              ; preds = %if.else
  %18 = load i32* %top, align 4, !tbaa !33
  %cmp33 = icmp eq i32 %18, %9
  br i1 %cmp33, label %if.end36, label %if.then35

if.then35:                                        ; preds = %win
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2296, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.change_stack, i64 0, i64 0)) #6
  unreachable

if.end36:                                         ; preds = %win
  %cmp38 = icmp eq i32 %9, -1
  br i1 %cmp38, label %if.end137, label %while.cond

while.cond:                                       ; preds = %if.end36, %while.cond.backedge
  %19 = phi i32 [ %.pre219, %while.cond.backedge ], [ %9, %if.end36 ]
  %20 = phi i32 [ %.pre218, %while.cond.backedge ], [ %9, %if.end36 ]
  %idxprom42 = sext i32 %20 to i64
  %arrayidx44 = getelementptr inbounds %struct.stack_def* %old, i64 0, i32 2, i64 %idxprom42
  %21 = load i8* %arrayidx44, align 1, !tbaa !1
  %idxprom47 = sext i32 %19 to i64
  %arrayidx49 = getelementptr inbounds %struct.stack_def* %new, i64 0, i32 2, i64 %idxprom47
  %22 = load i8* %arrayidx49, align 1, !tbaa !1
  %cmp51 = icmp eq i8 %21, %22
  %cmp88203 = icmp sgt i32 %19, -1
  br i1 %cmp51, label %for.cond87.preheader, label %for.cond54.preheader

for.cond54.preheader:                             ; preds = %while.cond
  br i1 %cmp88203, label %for.body57, label %for.end73

for.cond87.preheader:                             ; preds = %while.cond
  br i1 %cmp88203, label %for.body90, label %if.end116

for.cond54:                                       ; preds = %for.body57
  %cmp55 = icmp sgt i32 %24, 0
  br i1 %cmp55, label %for.cond54.for.body57_crit_edge, label %for.cond54.for.end73_crit_edge

for.cond54.for.body57_crit_edge:                  ; preds = %for.cond54
  %arrayidx60.phi.trans.insert = getelementptr inbounds %struct.stack_def* %new, i64 0, i32 2, i64 %indvars.iv.next213
  %.pre221 = load i8* %arrayidx60.phi.trans.insert, align 1, !tbaa !1
  br label %for.body57

for.body57:                                       ; preds = %for.cond54.preheader, %for.cond54.for.body57_crit_edge
  %23 = phi i8 [ %.pre221, %for.cond54.for.body57_crit_edge ], [ %22, %for.cond54.preheader ]
  %indvars.iv212 = phi i64 [ %indvars.iv.next213, %for.cond54.for.body57_crit_edge ], [ %idxprom47, %for.cond54.preheader ]
  %cmp67 = icmp eq i8 %23, %21
  %indvars.iv.next213 = add nsw i64 %indvars.iv212, -1
  %24 = trunc i64 %indvars.iv212 to i32
  br i1 %cmp67, label %for.end73, label %for.cond54

for.cond54.for.end73_crit_edge:                   ; preds = %for.cond54
  %25 = trunc i64 %indvars.iv.next213 to i32
  br label %for.end73

for.end73:                                        ; preds = %for.body57, %for.cond54.for.end73_crit_edge, %for.cond54.preheader
  %reg.1.lcssa = phi i32 [ %25, %for.cond54.for.end73_crit_edge ], [ %19, %for.cond54.preheader ], [ %24, %for.body57 ]
  %cmp74 = icmp eq i32 %reg.1.lcssa, -1
  br i1 %cmp74, label %if.then76, label %if.end77

if.then76:                                        ; preds = %for.end73
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2320, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.change_stack, i64 0, i64 0)) #6
  unreachable

if.end77:                                         ; preds = %for.end73
  %idxprom78 = sext i32 %reg.1.lcssa to i64
  %arrayidx80 = getelementptr inbounds %struct.stack_def* %old, i64 0, i32 2, i64 %idxprom78
  %26 = load i8* %arrayidx80, align 1, !tbaa !1
  %conv81 = zext i8 %26 to i64
  %sub82 = add i64 %conv81, -8
  %arrayidx85 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %sub82, i64 16
  %27 = load %struct.rtx_def** %arrayidx85, align 8, !tbaa !10
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %old, %struct.rtx_def* %27)
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then101, %if.end77
  %.pre218 = load i32* %top, align 4, !tbaa !33
  %.pre219 = load i32* %top17, align 4, !tbaa !33
  br label %while.cond

for.cond87:                                       ; preds = %for.body90
  %indvars.iv.next215 = add nsw i64 %indvars.iv214, -1
  %28 = trunc i64 %indvars.iv214 to i32
  %cmp88 = icmp sgt i32 %28, 0
  br i1 %cmp88, label %for.cond87.for.body90_crit_edge, label %if.end116

for.cond87.for.body90_crit_edge:                  ; preds = %for.cond87
  %arrayidx93.phi.trans.insert = getelementptr inbounds %struct.stack_def* %new, i64 0, i32 2, i64 %indvars.iv.next215
  %.pre220 = load i8* %arrayidx93.phi.trans.insert, align 1, !tbaa !1
  br label %for.body90

for.body90:                                       ; preds = %for.cond87.preheader, %for.cond87.for.body90_crit_edge
  %29 = phi i8 [ %.pre220, %for.cond87.for.body90_crit_edge ], [ %21, %for.cond87.preheader ]
  %indvars.iv214 = phi i64 [ %indvars.iv.next215, %for.cond87.for.body90_crit_edge ], [ %idxprom47, %for.cond87.preheader ]
  %arrayidx97 = getelementptr inbounds %struct.stack_def* %old, i64 0, i32 2, i64 %indvars.iv214
  %30 = load i8* %arrayidx97, align 1, !tbaa !1
  %cmp99 = icmp eq i8 %29, %30
  br i1 %cmp99, label %for.cond87, label %if.then101

if.then101:                                       ; preds = %for.body90
  %conv98 = zext i8 %30 to i64
  %sub106 = add i64 %conv98, -8
  %arrayidx109 = getelementptr inbounds [8 x [59 x %struct.rtx_def*]]* @FP_mode_reg, i64 0, i64 %sub106, i64 16
  %31 = load %struct.rtx_def** %arrayidx109, align 8, !tbaa !10
  tail call fastcc void @emit_swap_insn(%struct.rtx_def* %insn.addr.0, %struct.stack_def* %old, %struct.rtx_def* %31)
  br label %while.cond.backedge

if.end116:                                        ; preds = %for.cond87.preheader, %for.cond87
  %cmp119198 = icmp sgt i32 %20, -1
  br i1 %cmp119198, label %for.body121.lr.ph, label %if.end137

for.body121.lr.ph:                                ; preds = %if.end116
  %32 = sext i32 %20 to i64
  br label %for.body121

for.cond118:                                      ; preds = %for.body121
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %33 = trunc i64 %indvars.iv to i32
  %cmp119 = icmp sgt i32 %33, 0
  br i1 %cmp119, label %for.body121, label %if.end137

for.body121:                                      ; preds = %for.body121.lr.ph, %for.cond118
  %indvars.iv = phi i64 [ %32, %for.body121.lr.ph ], [ %indvars.iv.next, %for.cond118 ]
  %arrayidx124 = getelementptr inbounds %struct.stack_def* %old, i64 0, i32 2, i64 %indvars.iv
  %34 = load i8* %arrayidx124, align 1, !tbaa !1
  %arrayidx128 = getelementptr inbounds %struct.stack_def* %new, i64 0, i32 2, i64 %indvars.iv
  %35 = load i8* %arrayidx128, align 1, !tbaa !1
  %cmp130 = icmp eq i8 %34, %35
  br i1 %cmp130, label %for.cond118, label %if.then132

if.then132:                                       ; preds = %for.body121
  tail call void @fancy_abort(i8* getelementptr inbounds ([12 x i8]* @.str2, i64 0, i64 0), i32 2343, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.change_stack, i64 0, i64 0)) #6
  unreachable

if.end137:                                        ; preds = %for.cond118, %if.end36, %if.end116, %if.then20
  %tobool138 = icmp eq i32 %update_end.1, 0
  br i1 %tobool138, label %if.end144, label %if.then139

if.then139:                                       ; preds = %if.end137
  %arrayidx141 = getelementptr inbounds %struct.rtx_def* %insn.addr.0, i64 0, i32 1, i64 1
  %rtx142 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtx_def**
  %36 = load %struct.rtx_def** %rtx142, align 8, !tbaa !10
  %37 = load %struct.basic_block_def** @current_block, align 8, !tbaa !10
  %end143 = getelementptr inbounds %struct.basic_block_def* %37, i64 0, i32 1
  store %struct.rtx_def* %36, %struct.rtx_def** %end143, align 8, !tbaa !47
  br label %if.end144

if.end144:                                        ; preds = %if.end137, %if.then139
  ret void
}

declare i32 @operands_match_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

declare void @error_for_asm(%struct.rtx_def*, i8*, ...) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

declare void @start_sequence() #1

declare %struct.rtx_def* @emit_note(i8*, i32) #1

declare %struct.rtx_def* @gen_sequence() #1

declare void @end_sequence() #1

declare void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) #1

declare i32 @aggregate_value_p(%union.tree_node*) #1

declare %struct.rtx_def* @ix86_function_value(%union.tree_node*) #1

declare i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #1

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"omnipotent char", metadata !3, i64 0}
!3 = metadata !{metadata !"Simple C/C++ TBAA"}
!4 = metadata !{metadata !5, metadata !5, i64 0}
!5 = metadata !{metadata !"int", metadata !2, i64 0}
!6 = metadata !{metadata !7, metadata !8, i64 0}
!7 = metadata !{metadata !"varray_head_tag", metadata !8, i64 0, metadata !8, i64 8, metadata !8, i64 16, metadata !9, i64 24, metadata !2, i64 32}
!8 = metadata !{metadata !"long", metadata !2, i64 0}
!9 = metadata !{metadata !"any pointer", metadata !2, i64 0}
!10 = metadata !{metadata !9, metadata !9, i64 0}
!11 = metadata !{metadata !12, metadata !5, i64 0}
!12 = metadata !{metadata !"rtvec_def", metadata !5, i64 0, metadata !2, i64 8}
!13 = metadata !{metadata !14, metadata !5, i64 48}
!14 = metadata !{metadata !"edge_def", metadata !9, i64 0, metadata !9, i64 8, metadata !9, i64 16, metadata !9, i64 24, metadata !9, i64 32, metadata !9, i64 40, metadata !5, i64 48, metadata !5, i64 52, metadata !15, i64 56}
!15 = metadata !{metadata !"long long", metadata !2, i64 0}
!16 = metadata !{metadata !14, metadata !9, i64 16}
!17 = metadata !{metadata !18, metadata !9, i64 80}
!18 = metadata !{metadata !"basic_block_def", metadata !9, i64 0, metadata !9, i64 8, metadata !9, i64 16, metadata !9, i64 24, metadata !9, i64 32, metadata !9, i64 40, metadata !9, i64 48, metadata !9, i64 56, metadata !9, i64 64, metadata !9, i64 72, metadata !9, i64 80, metadata !5, i64 88, metadata !5, i64 92, metadata !15, i64 96, metadata !5, i64 104, metadata !5, i64 108}
!19 = metadata !{metadata !20, metadata !5, i64 60}
!20 = metadata !{metadata !"block_info_def", metadata !21, i64 0, metadata !21, i64 24, metadata !15, i64 48, metadata !5, i64 56, metadata !5, i64 60}
!21 = metadata !{metadata !"stack_def", metadata !5, i64 0, metadata !15, i64 8, metadata !2, i64 16}
!22 = metadata !{metadata !20, metadata !5, i64 0}
!23 = metadata !{metadata !18, metadata !9, i64 72}
!24 = metadata !{metadata !20, metadata !15, i64 48}
!25 = metadata !{metadata !18, metadata !9, i64 64}
!26 = metadata !{metadata !20, metadata !15, i64 8}
!27 = metadata !{metadata !14, metadata !9, i64 24}
!28 = metadata !{metadata !29, metadata !9, i64 96}
!29 = metadata !{metadata !"tree_decl", metadata !30, i64 0, metadata !9, i64 24, metadata !5, i64 32, metadata !5, i64 36, metadata !9, i64 40, metadata !2, i64 48, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 49, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 50, metadata !5, i64 51, metadata !5, i64 51, metadata !5, i64 51, metadata !5, i64 51, metadata !5, i64 51, metadata !2, i64 51, metadata !5, i64 51, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 52, metadata !5, i64 53, metadata !5, i64 53, metadata !5, i64 53, metadata !5, i64 53, metadata !5, i64 53, metadata !2, i64 56, metadata !9, i64 64, metadata !9, i64 72, metadata !9, i64 80, metadata !9, i64 88, metadata !9, i64 96, metadata !9, i64 104, metadata !9, i64 112, metadata !9, i64 120, metadata !9, i64 128, metadata !9, i64 136, metadata !9, i64 144, metadata !9, i64 152, metadata !2, i64 160, metadata !9, i64 168, metadata !9, i64 176, metadata !9, i64 184, metadata !15, i64 192, metadata !9, i64 200}
!30 = metadata !{metadata !"tree_common", metadata !9, i64 0, metadata !9, i64 8, metadata !2, i64 16, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 17, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 18, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19, metadata !5, i64 19}
!31 = metadata !{metadata !29, metadata !9, i64 144}
!32 = metadata !{metadata !30, metadata !9, i64 8}
!33 = metadata !{metadata !21, metadata !5, i64 0}
!34 = metadata !{metadata !21, metadata !15, i64 8}
!35 = metadata !{metadata !20, metadata !5, i64 56}
!36 = metadata !{metadata !18, metadata !5, i64 104}
!37 = metadata !{metadata !14, metadata !5, i64 52}
!38 = metadata !{metadata !14, metadata !15, i64 56}
!39 = metadata !{metadata !18, metadata !9, i64 40}
!40 = metadata !{metadata !14, metadata !9, i64 8}
!41 = metadata !{metadata !18, metadata !9, i64 32}
!42 = metadata !{metadata !14, metadata !9, i64 0}
!43 = metadata !{metadata !18, metadata !5, i64 88}
!44 = metadata !{metadata !18, metadata !9, i64 0}
!45 = metadata !{i64 0, i64 4, metadata !4, i64 8, i64 8, metadata !46, i64 16, i64 8, metadata !1}
!46 = metadata !{metadata !15, metadata !15, i64 0}
!47 = metadata !{metadata !18, metadata !9, i64 8}
!48 = metadata !{metadata !49, metadata !2, i64 996}
!49 = metadata !{metadata !"recog_data", metadata !2, i64 0, metadata !2, i64 240, metadata !2, i64 480, metadata !2, i64 720, metadata !2, i64 840, metadata !2, i64 960, metadata !2, i64 992, metadata !2, i64 996, metadata !2, i64 997, metadata !2, i64 998, metadata !9, i64 1000}
!50 = metadata !{metadata !51, metadata !2, i64 8}
!51 = metadata !{metadata !"operand_alternative", metadata !9, i64 0, metadata !2, i64 8, metadata !5, i64 12, metadata !5, i64 16, metadata !5, i64 20, metadata !5, i64 24, metadata !5, i64 24, metadata !5, i64 24, metadata !5, i64 24, metadata !5, i64 24, metadata !5, i64 24, metadata !5, i64 24, metadata !5, i64 24}
!52 = metadata !{metadata !51, metadata !5, i64 16}
!53 = metadata !{metadata !53, metadata !54, metadata !55}
!54 = metadata !{metadata !"llvm.vectorizer.width", i32 1}
!55 = metadata !{metadata !"llvm.vectorizer.unroll", i32 1}
!56 = metadata !{metadata !56, metadata !54, metadata !55}
!57 = metadata !{metadata !57, metadata !54, metadata !55}
!58 = metadata !{metadata !58, metadata !54, metadata !55}
!59 = metadata !{metadata !59, metadata !54, metadata !55}
!60 = metadata !{metadata !60, metadata !54, metadata !55}
