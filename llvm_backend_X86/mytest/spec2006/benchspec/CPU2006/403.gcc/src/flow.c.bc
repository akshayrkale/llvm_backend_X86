; ModuleID = 'flow.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.lang_decl = type opaque
%struct.machine_function = type opaque
%struct.language_function = type opaque
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct._IO_FILE = type opaque
%struct.reg_info_def = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct.propagate_block_info = type { %struct.basic_block_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.rtx_def**, %struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32, i32, i32 }
%struct.find_regno_partial_param = type { i32, %struct.rtx_def* }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque

@warn_missing_noreturn = external global i32
@cfun = external global %struct.function*
@entry_exit_blocks = external global [2 x %struct.basic_block_def]
@lang_missing_noreturn_ok_p = common global i32 (%union.tree_node*)* null, align 8
@.str = private unnamed_addr constant [62 x i8] c"function might be possible candidate for attribute `noreturn'\00", align 1
@.str1 = private unnamed_addr constant [32 x i8] c"`noreturn' function does return\00", align 1
@warn_return_type = external global i32
@basic_block_for_insn = external global %struct.varray_head_tag*
@.str2 = private unnamed_addr constant [41 x i8] c"control reaches end of non-void function\00", align 1
@.str3 = private unnamed_addr constant [7 x i8] c"flow.c\00", align 1
@__FUNCTION__.first_insn_after_basic_block_note = private unnamed_addr constant [34 x i8] c"first_insn_after_basic_block_note\00", align 1
@elim_reg_set = internal unnamed_addr global i64 0, align 8
@optimize = external global i32
@reload_completed = external global i32
@regs_ever_live = external global [53 x i8]
@__FUNCTION__.update_life_info = private unnamed_addr constant [17 x i8] c"update_life_info\00", align 1
@n_basic_blocks = external global i32
@basic_block_info = external global %struct.varray_head_tag*
@reg_n_info = common global %struct.varray_head_tag* null, align 8
@regs_live_at_setjmp = common global %struct.bitmap_head_def* null, align 8
@rtx_class = external constant [153 x i8]
@const_tiny_rtx = external global [3 x [59 x %struct.rtx_def*]]
@flow_obstack = external global %struct.obstack
@max_regno = common global i32 0, align 4
@current_function_decl = external global %union.tree_node*
@.str4 = private unnamed_addr constant [42 x i8] c"Attempt to delete prologue/epilogue insn:\00", align 1
@__FUNCTION__.propagate_one_insn = private unnamed_addr constant [19 x i8] c"propagate_one_insn\00", align 1
@global_rtl = external global [11 x %struct.rtx_def*]
@regs_invalidated_by_call = external global i64
@reg_raw_mode = external global [53 x i32]
@global_regs = external global [53 x i8]
@fixed_regs = external global [53 x i8]
@rtx_format = external constant [153 x i8*]
@rtx_length = external constant [153 x i8]
@.str5 = private unnamed_addr constant [7 x i8] c" (nil)\00", align 1
@.str6 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str7 = private unnamed_addr constant [6 x i8] c" [%s]\00", align 1
@reg_names = external global [53 x i8*]
@stderr = external constant %struct._IO_FILE*
@mode_class = external constant [59 x i32]
@target_flags = external global i32
@mode_size = external constant [59 x i8]
@flow2_completed = common global i32 0, align 4
@regset_bytes = common global i32 0, align 4
@regset_size = common global i32 0, align 4
@regs_may_share = common global %struct.rtx_def* null, align 8
@frame_pointer_needed = external global i32
@__FUNCTION__.mark_used_regs = private unnamed_addr constant [15 x i8] c"mark_used_regs\00", align 1
@optimize_size = external global i32
@flag_branch_probabilities = external global i32
@__FUNCTION__.mark_set_regs = private unnamed_addr constant [14 x i8] c"mark_set_regs\00", align 1
@call_used_regs = external global [53 x i8]
@flag_pic = external global i32
@in_ssa_form = external global i32
@flag_omit_frame_pointer = external global i32
@current_function_sp_is_unchanging = external global i32
@__FUNCTION__.mark_reg = private unnamed_addr constant [9 x i8] c"mark_reg\00", align 1
@rtl_dump_file = external global %struct._IO_FILE*
@.str8 = private unnamed_addr constant [27 x i8] c"Dead jumptable %i removed\0A\00", align 1
@.str9 = private unnamed_addr constant [48 x i8] c"live_at_start mismatch in bb %d, aborting\0ANew:\0A\00", align 1
@.str10 = private unnamed_addr constant [6 x i8] c"Old:\0A\00", align 1
@__FUNCTION__.verify_local_live_at_start = private unnamed_addr constant [27 x i8] c"verify_local_live_at_start\00", align 1
@.str11 = private unnamed_addr constant [32 x i8] c"Register %d died unexpectedly.\0A\00", align 1
@__FUNCTION__.verify_wide_reg = private unnamed_addr constant [16 x i8] c"verify_wide_reg\00", align 1
@mode_bitsize = external constant [59 x i16]

; Function Attrs: nounwind uwtable
define void @check_function_return_warnings() #0 {
entry:
  %0 = load i32* @warn_missing_noreturn, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.function** @cfun, align 8, !tbaa !5
  %decl = getelementptr inbounds %struct.function* %1, i64 0, i32 6
  %2 = load %union.tree_node** %decl, align 8, !tbaa !7
  %volatile_flag = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %volatile_flag, align 8
  %bf.clear = and i32 %bf.load, 2048
  %tobool1 = icmp eq i32 %bf.clear, 0
  %3 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %cmp = icmp eq %struct.edge_def* %3, null
  %or.cond = and i1 %tobool1, %cmp
  %4 = load i32 (%union.tree_node*)** @lang_missing_noreturn_ok_p, align 8
  %tobool4 = icmp ne i32 (%union.tree_node*)* %4, null
  %or.cond39 = and i1 %or.cond, %tobool4
  br i1 %or.cond39, label %land.lhs.true5, label %if.end

land.lhs.true5:                                   ; preds = %land.lhs.true
  %call = tail call i32 %4(%union.tree_node* %2) #3
  %tobool7 = icmp eq i32 %call, 0
  br i1 %tobool7, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true5
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([62 x i8]* @.str, i64 0, i64 0)) #3
  br label %if.end

if.end:                                           ; preds = %land.lhs.true5, %entry, %land.lhs.true, %if.then
  %5 = load %struct.function** @cfun, align 8, !tbaa !5
  %decl8 = getelementptr inbounds %struct.function* %5, i64 0, i32 6
  %6 = load %union.tree_node** %decl8, align 8, !tbaa !7
  %volatile_flag10 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load11 = load i32* %volatile_flag10, align 8
  %bf.clear13 = and i32 %bf.load11, 2048
  %tobool14 = icmp ne i32 %bf.clear13, 0
  %7 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 4), align 8
  %cmp16 = icmp ne %struct.edge_def* %7, null
  %or.cond40 = and i1 %tobool14, %cmp16
  br i1 %or.cond40, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.end
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([32 x i8]* @.str1, i64 0, i64 0)) #3
  br label %if.end38

if.else:                                          ; preds = %if.end
  %8 = load i32* @warn_return_type, align 4, !tbaa !1
  %tobool18 = icmp eq i32 %8, 0
  br i1 %tobool18, label %if.end38, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %if.else
  %x_clobber_return_insn = getelementptr inbounds %struct.function* %5, i64 0, i32 31
  %9 = load %struct.rtx_def** %x_clobber_return_insn, align 8, !tbaa !11
  %cmp20 = icmp ne %struct.rtx_def* %9, null
  %or.cond41 = and i1 %cmp20, %cmp16
  br i1 %or.cond41, label %if.then23, label %if.end38

if.then23:                                        ; preds = %land.lhs.true19
  %call24 = tail call i32 @get_max_uid() #3
  %10 = load %struct.function** @cfun, align 8, !tbaa !5
  %x_clobber_return_insn25 = getelementptr inbounds %struct.function* %10, i64 0, i32 31
  %11 = load %struct.rtx_def** %x_clobber_return_insn25, align 8, !tbaa !11
  %arrayidx = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %12 = load i32* %rtint, align 4, !tbaa !1
  %cmp26 = icmp slt i32 %12, %call24
  br i1 %cmp26, label %if.then27, label %if.end38

if.then27:                                        ; preds = %if.then23
  %idxprom = sext i32 %12 to i64
  %13 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %13, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx32 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %idxprom
  %14 = load %struct.basic_block_def** %arrayidx32, align 8, !tbaa !5
  %cmp33 = icmp eq %struct.basic_block_def* %14, null
  br i1 %cmp33, label %if.end38, label %if.then34

if.then34:                                        ; preds = %if.then27
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([41 x i8]* @.str2, i64 0, i64 0)) #3
  br label %if.end38

if.end38:                                         ; preds = %if.then27, %if.else, %land.lhs.true19, %if.then34, %if.then23, %if.then17
  ret void
}

declare void @warning(i8*, ...) #1

declare i32 @get_max_uid() #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @first_insn_after_basic_block_note(%struct.basic_block_def* nocapture readonly %block) #0 {
entry:
  %head = getelementptr inbounds %struct.basic_block_def* %block, i64 0, i32 0
  %0 = load %struct.rtx_def** %head, align 8, !tbaa !12
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 36
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load4.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %bf.load4 = phi i32 [ %bf.load4.pre, %if.then2 ], [ %bf.load, %if.end ]
  %insn.0 = phi %struct.rtx_def* [ %2, %if.then2 ], [ %0, %if.end ]
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 37
  br i1 %cmp6, label %land.lhs.true, label %if.then10

land.lhs.true:                                    ; preds = %if.end3
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %3 = load i32* %rtint, align 4, !tbaa !1
  %cmp9 = icmp eq i32 %3, -80
  br i1 %cmp9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %land.lhs.true, %if.end3
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i32 400, i8* getelementptr inbounds ([34 x i8]* @__FUNCTION__.first_insn_after_basic_block_note, i64 0, i64 0)) #6
  unreachable

if.end11:                                         ; preds = %land.lhs.true
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 2
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx14, align 8, !tbaa !5
  br label %return

return:                                           ; preds = %entry, %if.end11
  %retval.0 = phi %struct.rtx_def* [ %4, %if.end11 ], [ null, %entry ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define void @life_analysis(%struct.rtx_def* readonly %f, %struct._IO_FILE* %file, i32 %flags) #0 {
entry:
  store i64 1114112, i64* @elim_reg_set, align 8, !tbaa !14
  %0 = load i32* @optimize, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  %and = and i32 %flags, -99
  %and.flags = select i1 %tobool, i32 %and, i32 %flags
  %1 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool1 = icmp eq i32 %1, 0
  %and3 = and i32 %and.flags, -69
  %flags.addr.1 = select i1 %tobool1, i32 %and.flags, i32 %and3
  %and6 = and i32 %flags.addr.1, 16
  %tobool7 = icmp eq i32 %and6, 0
  %or.cond = or i1 %tobool, %tobool7
  br i1 %or.cond, label %if.end9, label %if.then8

if.then8:                                         ; preds = %entry
  tail call void @init_alias_analysis() #3
  br label %if.end9

if.end9:                                          ; preds = %entry, %if.then8
  tail call void @delete_noop_moves(%struct.rtx_def* undef)
  %call = tail call zeroext i1 @purge_all_dead_edges(i32 0) #3
  %2 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool10 = icmp eq i32 %2, 0
  br i1 %tobool10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end9
  %3 = load %struct.function** @cfun, align 8, !tbaa !5
  %calls_alloca.i = getelementptr inbounds %struct.function* %3, i64 0, i32 56
  %4 = bitcast i24* %calls_alloca.i to i32*
  %bf.load.i = load i32* %4, align 8
  %bf.clear.i = and i32 %bf.load.i, 64
  %lnot.i = icmp ne i32 %bf.clear.i, 0
  %bf.clear.lobit.i = lshr exact i32 %bf.clear.i, 6
  %5 = xor i32 %bf.clear.lobit.i, 1
  store i32 %5, i32* @current_function_sp_is_unchanging, align 4, !tbaa !1
  %tobool219.i = icmp eq %struct.rtx_def* %f, null
  %or.cond.i = or i1 %lnot.i, %tobool219.i
  br i1 %or.cond.i, label %if.end12, label %for.body.i

for.body.i:                                       ; preds = %if.then11, %for.inc.i
  %insn.020.i = phi %struct.rtx_def* [ %10, %for.inc.i ], [ %f, %if.then11 ]
  %6 = getelementptr inbounds %struct.rtx_def* %insn.020.i, i64 0, i32 0
  %bf.load3.i = load i32* %6, align 8
  %bf.clear4.i = and i32 %bf.load3.i, 65535
  %idxprom18.i = zext i32 %bf.clear4.i to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom18.i
  %7 = load i8* %arrayidx.i, align 1, !tbaa !15
  %cmp.i = icmp eq i8 %7, 105
  br i1 %cmp.i, label %if.then6.i, label %for.inc.i

if.then6.i:                                       ; preds = %for.body.i
  %arrayidx7.i = getelementptr inbounds %struct.rtx_def* %insn.020.i, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx7.i to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  tail call void @note_stores(%struct.rtx_def* %8, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @notice_stack_pointer_modification_1, i8* null) #3
  %9 = load i32* @current_function_sp_is_unchanging, align 4, !tbaa !1
  %tobool8.i = icmp eq i32 %9, 0
  br i1 %tobool8.i, label %if.end12, label %for.inc.i

for.inc.i:                                        ; preds = %if.then6.i, %for.body.i
  %arrayidx13.i = getelementptr inbounds %struct.rtx_def* %insn.020.i, i64 0, i32 1, i64 2
  %rtx14.i = bitcast %union.rtunion_def* %arrayidx13.i to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx14.i, align 8, !tbaa !5
  %tobool2.i = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool2.i, label %if.end12, label %for.body.i

if.end12:                                         ; preds = %for.inc.i, %if.then6.i, %if.then11, %if.end9
  %call.i = tail call i32 @max_reg_num() #3
  store i32 %call.i, i32* @max_regno, align 4, !tbaa !1
  %conv.i = sext i32 %call.i to i64
  tail call void @allocate_reg_info(i64 %conv.i, i32 0, i32 0) #3
  %11 = load i32* @max_regno, align 4, !tbaa !1
  %cmp29.i = icmp sgt i32 %11, 0
  br i1 %cmp29.i, label %for.body.lr.ph.i, label %allocate_reg_life_data.exit

for.body.lr.ph.i:                                 ; preds = %if.end12
  %12 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data.i = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 4
  %reg.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.reg_info_def*]*
  br label %for.body.i38

for.body.i38:                                     ; preds = %for.body.i38, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i38 ]
  %arrayidx.i36 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg.i, i64 0, i64 %indvars.iv.i
  %13 = load %struct.reg_info_def** %arrayidx.i36, align 8, !tbaa !5
  %sets.i = getelementptr inbounds %struct.reg_info_def* %13, i64 0, i32 3
  store i32 0, i32* %sets.i, align 4, !tbaa !16
  %refs.i = getelementptr inbounds %struct.reg_info_def* %13, i64 0, i32 4
  store i32 0, i32* %refs.i, align 4, !tbaa !18
  %deaths.i = getelementptr inbounds %struct.reg_info_def* %13, i64 0, i32 6
  store i32 0, i32* %deaths.i, align 4, !tbaa !19
  %calls_crossed.i = getelementptr inbounds %struct.reg_info_def* %13, i64 0, i32 8
  store i32 0, i32* %calls_crossed.i, align 4, !tbaa !20
  %live_length.i = getelementptr inbounds %struct.reg_info_def* %13, i64 0, i32 7
  store i32 0, i32* %live_length.i, align 4, !tbaa !21
  %basic_block.i = getelementptr inbounds %struct.reg_info_def* %13, i64 0, i32 9
  store i32 -1, i32* %basic_block.i, align 4, !tbaa !22
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %14 = load i32* @max_regno, align 4, !tbaa !1
  %15 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i37 = icmp slt i32 %15, %14
  br i1 %cmp.i37, label %for.body.i38, label %allocate_reg_life_data.exit

allocate_reg_life_data.exit:                      ; preds = %for.body.i38, %if.end12
  tail call void @allocate_bb_life_data()
  %16 = load %struct.bitmap_head_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 8), align 8, !tbaa !23
  %17 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool.i = icmp eq i32 %17, 0
  br i1 %tobool.i, label %lor.lhs.false.i, label %if.then.i

lor.lhs.false.i:                                  ; preds = %allocate_reg_life_data.exit
  %call.i39 = tail call i32 @ix86_frame_pointer_required() #3
  %tobool1.i = icmp eq i32 %call.i39, 0
  br i1 %tobool1.i, label %land.lhs.true.i, label %lor.lhs.false5.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %18 = load %struct.function** @cfun, align 8, !tbaa !5
  %calls_alloca.i40 = getelementptr inbounds %struct.function* %18, i64 0, i32 56
  %19 = bitcast i24* %calls_alloca.i40 to i32*
  %bf.load.i41 = load i32* %19, align 8
  %bf.clear.i42 = and i32 %bf.load.i41, 64
  %tobool2.i43 = icmp eq i32 %bf.clear.i42, 0
  %20 = load i32* @flag_omit_frame_pointer, align 4
  %tobool4.i = icmp ne i32 %20, 0
  %or.cond.i44 = and i1 %tobool2.i43, %tobool4.i
  %21 = load i32* @current_function_sp_is_unchanging, align 4
  %tobool6.i = icmp ne i32 %21, 0
  %or.cond99.i = or i1 %or.cond.i44, %tobool6.i
  br i1 %or.cond99.i, label %if.then.i, label %if.end.i

lor.lhs.false5.i:                                 ; preds = %lor.lhs.false.i
  %.old.i = load i32* @current_function_sp_is_unchanging, align 4, !tbaa !1
  %tobool6.old.i = icmp eq i32 %.old.i, 0
  br i1 %tobool6.old.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false5.i, %land.lhs.true.i, %allocate_reg_life_data.exit
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 7) #3
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %lor.lhs.false5.i, %land.lhs.true.i
  %22 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool7.i = icmp eq i32 %22, 0
  %23 = load i32* @frame_pointer_needed, align 4
  %tobool9.i = icmp ne i32 %23, 0
  %or.cond101.i = or i1 %tobool7.i, %tobool9.i
  br i1 %or.cond101.i, label %if.then10.i, label %if.end11.i

if.then10.i:                                      ; preds = %if.end.i
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 20) #3
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 6) #3
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i, %if.end.i
  %24 = load i32* @target_flags, align 4, !tbaa !1
  %and.i = and i32 %24, 33554432
  %25 = load i32* @flag_pic, align 4
  %notlhs.i = icmp ne i32 %and.i, 0
  %notrhs.i = icmp eq i32 %25, 0
  %or.cond127.not.i = or i1 %notrhs.i, %notlhs.i
  %26 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 3), align 1
  %tobool22.i = icmp eq i8 %26, 0
  %or.cond142.i = or i1 %or.cond127.not.i, %tobool22.i
  br i1 %or.cond142.i, label %for.body.i45, label %lor.end29.i

lor.end29.i:                                      ; preds = %if.end11.i
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 3) #3
  br label %for.body.i45

for.body.i45:                                     ; preds = %lor.end29.i, %if.end11.i, %for.inc.i46
  %indvars.iv136.i = phi i64 [ %indvars.iv.next137.i, %for.inc.i46 ], [ 0, %if.end11.i ], [ 0, %lor.end29.i ]
  %arrayidx35.i = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %indvars.iv136.i
  %27 = load i8* %arrayidx35.i, align 1, !tbaa !15
  %tobool37.i = icmp eq i8 %27, 0
  br i1 %tobool37.i, label %for.inc.i46, label %if.then38.i

if.then38.i:                                      ; preds = %for.body.i45
  %28 = trunc i64 %indvars.iv136.i to i32
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 %28) #3
  br label %for.inc.i46

for.inc.i46:                                      ; preds = %if.then38.i, %for.body.i45
  %indvars.iv.next137.i = add nuw nsw i64 %indvars.iv136.i, 1
  %exitcond138.i = icmp eq i64 %indvars.iv.next137.i, 53
  br i1 %exitcond138.i, label %for.end.i, label %for.body.i45

for.end.i:                                        ; preds = %for.inc.i46
  %29 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool40.i = icmp eq i32 %29, 0
  br i1 %tobool40.i, label %land.lhs.true79.i, label %for.body45.i

for.body45.i:                                     ; preds = %for.end.i, %for.inc55.i
  %indvars.iv.i47 = phi i64 [ %indvars.iv.next.i48, %for.inc55.i ], [ 0, %for.end.i ]
  %arrayidx47.i = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %indvars.iv.i47
  %30 = load i8* %arrayidx47.i, align 1, !tbaa !15
  %tobool49.i = icmp eq i8 %30, 0
  br i1 %tobool49.i, label %for.inc55.i, label %land.lhs.true50.i

land.lhs.true50.i:                                ; preds = %for.body45.i
  %31 = load i64* @regs_invalidated_by_call, align 8, !tbaa !14
  %shl.i = shl i64 1, %indvars.iv.i47
  %and51.i = and i64 %31, %shl.i
  %tobool52.i = icmp eq i64 %and51.i, 0
  br i1 %tobool52.i, label %if.then53.i, label %for.inc55.i

if.then53.i:                                      ; preds = %land.lhs.true50.i
  %32 = trunc i64 %indvars.iv.i47 to i32
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 %32) #3
  br label %for.inc55.i

for.inc55.i:                                      ; preds = %if.then53.i, %land.lhs.true50.i, %for.body45.i
  %indvars.iv.next.i48 = add nuw nsw i64 %indvars.iv.i47, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i48, 53
  br i1 %exitcond.i, label %if.end58.i, label %for.body45.i

if.end58.i:                                       ; preds = %for.inc55.i
  %.pr.i = load i32* @reload_completed, align 4, !tbaa !1
  %tobool59.i = icmp eq i32 %.pr.i, 0
  br i1 %tobool59.i, label %land.lhs.true79.i, label %land.lhs.true60.i

land.lhs.true60.i:                                ; preds = %if.end58.i
  %33 = load %struct.function** @cfun, align 8, !tbaa !5
  %calls_eh_return.i = getelementptr inbounds %struct.function* %33, i64 0, i32 56
  %34 = bitcast i24* %calls_eh_return.i to i32*
  %bf.load61.i = load i32* %34, align 8
  %bf.clear63.i = and i32 %bf.load61.i, 128
  %tobool64.i = icmp eq i32 %bf.clear63.i, 0
  br i1 %tobool64.i, label %mark_regs_live_at_end.exit, label %if.end77.i

if.end77.i:                                       ; preds = %land.lhs.true60.i
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 0) #3
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 1) #3
  %.pr129.pr.pre.i = load i32* @reload_completed, align 4, !tbaa !1
  %tobool78.i = icmp eq i32 %.pr129.pr.pre.i, 0
  br i1 %tobool78.i, label %land.lhs.true79.i, label %mark_regs_live_at_end.exit

land.lhs.true79.i:                                ; preds = %if.end77.i, %if.end58.i, %for.end.i
  %35 = load %struct.function** @cfun, align 8, !tbaa !5
  %calls_eh_return80.i = getelementptr inbounds %struct.function* %35, i64 0, i32 56
  %36 = bitcast i24* %calls_eh_return80.i to i32*
  %bf.load81.i = load i32* %36, align 8
  %bf.clear83.i = and i32 %bf.load81.i, 128
  %tobool84.i = icmp eq i32 %bf.clear83.i, 0
  br i1 %tobool84.i, label %mark_regs_live_at_end.exit, label %if.then85.i

if.then85.i:                                      ; preds = %land.lhs.true79.i
  %37 = load i32* @target_flags, align 4, !tbaa !1
  %and86.i = lshr i32 %37, 25
  %38 = and i32 %and86.i, 1
  %39 = or i32 %38, 4
  %call89.i = tail call %struct.rtx_def* @gen_rtx_REG(i32 %39, i32 2) #3
  %tobool90.i = icmp eq %struct.rtx_def* %call89.i, null
  br i1 %tobool90.i, label %mark_regs_live_at_end.exit, label %land.lhs.true91.i

land.lhs.true91.i:                                ; preds = %if.then85.i
  %40 = getelementptr inbounds %struct.rtx_def* %call89.i, i64 0, i32 0
  %bf.load92.i = load i32* %40, align 8
  %bf.clear93.i = and i32 %bf.load92.i, 65535
  %cmp94.i = icmp eq i32 %bf.clear93.i, 61
  br i1 %cmp94.i, label %if.then96.i, label %mark_regs_live_at_end.exit

if.then96.i:                                      ; preds = %land.lhs.true91.i
  %41 = bitcast %struct.bitmap_head_def* %16 to i8*
  tail call void @mark_reg(%struct.rtx_def* %call89.i, i8* %41) #3
  br label %mark_regs_live_at_end.exit

mark_regs_live_at_end.exit:                       ; preds = %land.lhs.true60.i, %if.end77.i, %land.lhs.true79.i, %if.then85.i, %land.lhs.true91.i, %if.then96.i
  %42 = bitcast %struct.bitmap_head_def* %16 to i8*
  tail call void @diddle_return_value(void (%struct.rtx_def*, i8*)* @mark_reg, i8* %42) #3
  %and13 = and i32 %flags.addr.1, 4
  %tobool14 = icmp eq i32 %and13, 0
  br i1 %tobool14, label %if.end16, label %if.then15

if.then15:                                        ; preds = %mark_regs_live_at_end.exit
  tail call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([53 x i8]* @regs_ever_live, i64 0, i64 0), i8 0, i64 53, i32 16, i1 false)
  br label %if.end16

if.end16:                                         ; preds = %mark_regs_live_at_end.exit, %if.then15
  tail call void @update_life_info(%struct.simple_bitmap_def* null, i32 1, i32 %flags.addr.1)
  %43 = load i32* @optimize, align 4, !tbaa !1
  %tobool17 = icmp eq i32 %43, 0
  %or.cond35 = or i1 %tobool17, %tobool7
  br i1 %or.cond35, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.end16
  tail call void @end_alias_analysis() #3
  br label %if.end22

if.end22:                                         ; preds = %if.end16, %if.then21
  %tobool23 = icmp eq %struct._IO_FILE* %file, null
  br i1 %tobool23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %if.end22
  tail call void @dump_flow_info(%struct._IO_FILE* %file) #3
  br label %if.end25

if.end25:                                         ; preds = %if.end22, %if.then24
  %call.i49 = tail call %struct.rtx_def* @get_insns() #3
  %tobool49.i50 = icmp eq %struct.rtx_def* %call.i49, null
  br i1 %tobool49.i50, label %delete_dead_jumptables.exit, label %for.body.i56

for.body.i56:                                     ; preds = %land.lhs.true10.i, %for.cond.backedge.i, %if.end25
  %insn.050.i = phi %struct.rtx_def* [ %call.i49, %if.end25 ], [ %insn.0.be.i, %for.cond.backedge.i ], [ %44, %land.lhs.true10.i ]
  %arrayidx.i51 = getelementptr inbounds %struct.rtx_def* %insn.050.i, i64 0, i32 1, i64 2
  %rtx.i52 = bitcast %union.rtunion_def* %arrayidx.i51 to %struct.rtx_def**
  %44 = load %struct.rtx_def** %rtx.i52, align 8, !tbaa !5
  %45 = getelementptr inbounds %struct.rtx_def* %insn.050.i, i64 0, i32 0
  %bf.load.i53 = load i32* %45, align 8
  %bf.clear.i54 = and i32 %bf.load.i53, 65535
  %cmp.i55 = icmp eq i32 %bf.clear.i54, 36
  br i1 %cmp.i55, label %land.lhs.true.i59, label %for.cond.backedge.i

for.cond.backedge.i:                              ; preds = %if.end.i62, %land.lhs.true6.i, %land.lhs.true.i59, %for.body.i56
  %insn.0.be.i = phi %struct.rtx_def* [ %54, %if.end.i62 ], [ %44, %land.lhs.true6.i ], [ %44, %land.lhs.true.i59 ], [ %44, %for.body.i56 ]
  %tobool.i57 = icmp eq %struct.rtx_def* %insn.0.be.i, null
  br i1 %tobool.i57, label %delete_dead_jumptables.exit, label %for.body.i56

land.lhs.true.i59:                                ; preds = %for.body.i56
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %insn.050.i, i64 0, i32 1, i64 3
  %rtint.i = bitcast %union.rtunion_def* %arrayidx2.i to i32*
  %46 = load i32* %rtint.i, align 4, !tbaa !1
  %bf.lshr.i = lshr i32 %bf.load.i53, 28
  %bf.clear4.i58 = and i32 %bf.lshr.i, 1
  %cmp5.i = icmp eq i32 %46, %bf.clear4.i58
  br i1 %cmp5.i, label %land.lhs.true6.i, label %for.cond.backedge.i

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i59
  %47 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 0
  %bf.load7.i = load i32* %47, align 8
  %bf.clear8.i = and i32 %bf.load7.i, 65535
  %cmp9.i = icmp eq i32 %bf.clear8.i, 33
  br i1 %cmp9.i, label %land.lhs.true10.i, label %for.cond.backedge.i

land.lhs.true10.i:                                ; preds = %land.lhs.true6.i
  %arrayidx12.i = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 1, i64 3
  %rtx13.i = bitcast %union.rtunion_def* %arrayidx12.i to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx13.i, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load14.i = load i32* %49, align 8
  %50 = and i32 %bf.load14.i, 65534
  %switch.i = icmp eq i32 %50, 44
  br i1 %switch.i, label %if.then.i60, label %for.body.i56

if.then.i60:                                      ; preds = %land.lhs.true10.i
  %51 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool23.i = icmp eq %struct._IO_FILE* %51, null
  br i1 %tobool23.i, label %if.end.i62, label %if.then24.i

if.then24.i:                                      ; preds = %if.then.i60
  %arrayidx26.i = getelementptr inbounds %struct.rtx_def* %insn.050.i, i64 0, i32 1, i64 0
  %rtint27.i = bitcast %union.rtunion_def* %arrayidx26.i to i32*
  %52 = load i32* %rtint27.i, align 4, !tbaa !1
  %call28.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([27 x i8]* @.str8, i64 0, i64 0), i32 %52) #3
  %.pre.i = load %struct.rtx_def** %rtx.i52, align 8, !tbaa !5
  br label %if.end.i62

if.end.i62:                                       ; preds = %if.then24.i, %if.then.i60
  %53 = phi %struct.rtx_def* [ %44, %if.then.i60 ], [ %.pre.i, %if.then24.i ]
  %call32.i = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %53) #3
  %call33.i = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn.050.i) #3
  %arrayidx35.i61 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 1, i64 2
  %rtx36.i = bitcast %union.rtunion_def* %arrayidx35.i61 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx36.i, align 8, !tbaa !5
  br label %for.cond.backedge.i

delete_dead_jumptables.exit:                      ; preds = %for.cond.backedge.i, %if.end25
  ret void
}

declare void @init_alias_analysis() #1

; Function Attrs: nounwind uwtable
define void @delete_noop_moves(%struct.rtx_def* nocapture readnone %f) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp70 = icmp sgt i32 %0, 0
  br i1 %cmp70, label %for.body, label %for.end48

for.body:                                         ; preds = %entry, %for.inc47
  %1 = phi i32 [ %19, %for.inc47 ], [ %0, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc47 ], [ 0, %entry ]
  %2 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %2, i64 0, i32 4
  %bb1 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb1, i64 0, i64 %indvars.iv
  %3 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 0
  %4 = load %struct.rtx_def** %head, align 8, !tbaa !12
  %end = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 1
  %5 = load %struct.rtx_def** %end, align 8, !tbaa !24
  %arrayidx366 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 2
  %rtx67 = bitcast %union.rtunion_def* %arrayidx366 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx67, align 8, !tbaa !5
  %cmp468 = icmp eq %struct.rtx_def* %4, %6
  br i1 %cmp468, label %for.inc47, label %for.body5

for.body5:                                        ; preds = %for.body, %for.cond2.backedge
  %insn.069 = phi %struct.rtx_def* [ %7, %for.cond2.backedge ], [ %4, %for.body ]
  %arrayidx7 = getelementptr inbounds %struct.rtx_def* %insn.069, i64 0, i32 1, i64 2
  %rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx8, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %insn.069, i64 0, i32 0
  %bf.load = load i32* %8, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom965 = zext i32 %bf.clear to i64
  %arrayidx10 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom965
  %9 = load i8* %arrayidx10, align 1, !tbaa !15
  %cmp11 = icmp eq i8 %9, 105
  br i1 %cmp11, label %land.lhs.true, label %for.cond2.backedge

land.lhs.true:                                    ; preds = %for.body5
  %call = tail call i32 @noop_move_p(%struct.rtx_def* %insn.069) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.cond2.backedge, label %if.then

for.cond2.backedge:                               ; preds = %land.lhs.true, %for.body5, %if.end
  %10 = load %struct.rtx_def** %end, align 8, !tbaa !24
  %arrayidx3 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp4 = icmp eq %struct.rtx_def* %7, %11
  br i1 %cmp4, label %for.cond2.for.inc47_crit_edge, label %for.body5

if.then:                                          ; preds = %land.lhs.true
  %call13 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.069, i32 7, %struct.rtx_def* null) #3
  %tobool14 = icmp eq %struct.rtx_def* %call13, null
  br i1 %tobool14, label %if.end, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %if.then
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %call13, i64 0, i32 1, i64 0
  %rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx18, align 8, !tbaa !5
  %cmp19 = icmp eq %struct.rtx_def* %12, %insn.069
  br i1 %cmp19, label %if.end, label %if.then21

if.then21:                                        ; preds = %land.lhs.true15
  %call22 = tail call %struct.rtx_def* @next_real_insn(%struct.rtx_def* %insn.069) #3
  %13 = load %struct.rtx_def** %rtx18, align 8, !tbaa !5
  %call26 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %13, i32 6, %struct.rtx_def* null) #3
  %14 = load %struct.rtx_def** %rtx18, align 8, !tbaa !5
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %call22, i64 0, i32 1, i64 6
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx32, align 8, !tbaa !5
  %call33 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 7, %struct.rtx_def* %14, %struct.rtx_def* %15) #3
  %16 = getelementptr inbounds %union.rtunion_def* %arrayidx31, i64 0, i32 0
  %call33.c = ptrtoint %struct.rtx_def* %call33 to i64
  store i64 %call33.c, i64* %16, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.rtx_def* %call26, i64 0, i32 1, i64 0, i32 0
  %call22.c = ptrtoint %struct.rtx_def* %call22 to i64
  store i64 %call22.c, i64* %17, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %land.lhs.true15, %if.then, %if.then21
  %bf.load40 = load i32* %8, align 8
  %bf.clear41 = and i32 %bf.load40, -65536
  %bf.set = or i32 %bf.clear41, 37
  store i32 %bf.set, i32* %8, align 8
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %insn.069, i64 0, i32 1, i64 4
  %rtint = bitcast %union.rtunion_def* %arrayidx43 to i32*
  store i32 -99, i32* %rtint, align 4, !tbaa !1
  %18 = getelementptr inbounds %struct.rtx_def* %insn.069, i64 0, i32 1, i64 3, i32 0
  store i64 0, i64* %18, align 8, !tbaa !5
  br label %for.cond2.backedge

for.cond2.for.inc47_crit_edge:                    ; preds = %for.cond2.backedge
  %.pre = load i32* @n_basic_blocks, align 4, !tbaa !1
  br label %for.inc47

for.inc47:                                        ; preds = %for.cond2.for.inc47_crit_edge, %for.body
  %19 = phi i32 [ %.pre, %for.cond2.for.inc47_crit_edge ], [ %1, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %20, %19
  br i1 %cmp, label %for.body, label %for.end48

for.end48:                                        ; preds = %for.inc47, %entry
  ret void
}

declare zeroext i1 @purge_all_dead_edges(i32) #1

; Function Attrs: nounwind uwtable
define void @allocate_reg_life_data() #0 {
entry:
  %call = tail call i32 @max_reg_num() #3
  store i32 %call, i32* @max_regno, align 4, !tbaa !1
  %conv = sext i32 %call to i64
  tail call void @allocate_reg_info(i64 %conv, i32 0, i32 0) #3
  %0 = load i32* @max_regno, align 4, !tbaa !1
  %cmp29 = icmp sgt i32 %0, 0
  br i1 %cmp29, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %1 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %indvars.iv
  %2 = load %struct.reg_info_def** %arrayidx, align 8, !tbaa !5
  %sets = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 3
  store i32 0, i32* %sets, align 4, !tbaa !16
  %refs = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 4
  store i32 0, i32* %refs, align 4, !tbaa !18
  %deaths = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 6
  store i32 0, i32* %deaths, align 4, !tbaa !19
  %calls_crossed = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 8
  store i32 0, i32* %calls_crossed, align 4, !tbaa !20
  %live_length = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 7
  store i32 0, i32* %live_length, align 4, !tbaa !21
  %basic_block = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 9
  store i32 -1, i32* %basic_block, align 4, !tbaa !22
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %3 = load i32* @max_regno, align 4, !tbaa !1
  %4 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %4, %3
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @allocate_bb_life_data() #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp410 = icmp sgt i32 %0, 0
  br i1 %cmp410, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %if.end99
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end99 ], [ 0, %entry ]
  %1 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %bb1 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb1, i64 0, i64 %indvars.iv
  %2 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !5
  %3 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %4 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp2 = icmp slt i64 %sub.ptr.sub, 24
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  tail call void @_obstack_newchunk(%struct.obstack* @flow_obstack, i32 24) #3
  %.pre414 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %5 = phi i8* [ %.pre414, %if.then ], [ %4, %for.body ]
  %add.ptr = getelementptr inbounds i8* %5, i64 24
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %6 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %cmp8 = icmp eq i8* %add.ptr, %6
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end
  %sub.ptr.lhs.cast13 = ptrtoint i8* %add.ptr to i64
  %7 = load i32* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 6), align 8, !tbaa !30
  %conv15 = sext i32 %7 to i64
  %add = add nsw i64 %conv15, %sub.ptr.lhs.cast13
  %neg = xor i32 %7, -1
  %conv17 = sext i32 %neg to i64
  %and = and i64 %add, %conv17
  %add.ptr18 = getelementptr inbounds i8* null, i64 %and
  store i8* %add.ptr18, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %8 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !tbaa !31
  %sub.ptr.lhs.cast21 = ptrtoint i8* %add.ptr18 to i64
  %sub.ptr.rhs.cast22 = ptrtoint %struct._obstack_chunk* %8 to i64
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22
  %9 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %sub.ptr.lhs.cast26 = ptrtoint i8* %9 to i64
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast26, %sub.ptr.rhs.cast22
  %cmp29 = icmp sgt i64 %sub.ptr.sub23, %sub.ptr.sub28
  br i1 %cmp29, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.end11
  store i8* %9, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end11
  %10 = phi i8* [ %9, %if.then31 ], [ %add.ptr18, %if.end11 ]
  store i8* %10, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %11 = bitcast i8* %6 to %struct.bitmap_head_def*
  %call = tail call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %11) #3
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 8
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !23
  %12 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %13 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %sub.ptr.lhs.cast46 = ptrtoint i8* %12 to i64
  %sub.ptr.rhs.cast47 = ptrtoint i8* %13 to i64
  %sub.ptr.sub48 = sub i64 %sub.ptr.lhs.cast46, %sub.ptr.rhs.cast47
  %cmp50 = icmp slt i64 %sub.ptr.sub48, 24
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.end34
  tail call void @_obstack_newchunk(%struct.obstack* @flow_obstack, i32 24) #3
  %.pre415 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end53

if.end53:                                         ; preds = %if.then52, %if.end34
  %14 = phi i8* [ %.pre415, %if.then52 ], [ %13, %if.end34 ]
  %add.ptr56 = getelementptr inbounds i8* %14, i64 24
  store i8* %add.ptr56, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %15 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %cmp64 = icmp eq i8* %add.ptr56, %15
  br i1 %cmp64, label %if.then66, label %if.end71

if.then66:                                        ; preds = %if.end53
  %bf.load68 = load i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  %bf.set70 = or i8 %bf.load68, 2
  store i8 %bf.set70, i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then66, %if.end53
  %sub.ptr.lhs.cast73 = ptrtoint i8* %add.ptr56 to i64
  %16 = load i32* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 6), align 8, !tbaa !30
  %conv76 = sext i32 %16 to i64
  %add77 = add nsw i64 %conv76, %sub.ptr.lhs.cast73
  %neg79 = xor i32 %16, -1
  %conv80 = sext i32 %neg79 to i64
  %and81 = and i64 %add77, %conv80
  %add.ptr82 = getelementptr inbounds i8* null, i64 %and81
  store i8* %add.ptr82, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %17 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !tbaa !31
  %sub.ptr.lhs.cast86 = ptrtoint i8* %add.ptr82 to i64
  %sub.ptr.rhs.cast87 = ptrtoint %struct._obstack_chunk* %17 to i64
  %sub.ptr.sub88 = sub i64 %sub.ptr.lhs.cast86, %sub.ptr.rhs.cast87
  %18 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %sub.ptr.lhs.cast91 = ptrtoint i8* %18 to i64
  %sub.ptr.sub93 = sub i64 %sub.ptr.lhs.cast91, %sub.ptr.rhs.cast87
  %cmp94 = icmp sgt i64 %sub.ptr.sub88, %sub.ptr.sub93
  br i1 %cmp94, label %if.then96, label %if.end99

if.then96:                                        ; preds = %if.end71
  store i8* %18, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end99

if.end99:                                         ; preds = %if.then96, %if.end71
  %19 = phi i8* [ %18, %if.then96 ], [ %add.ptr82, %if.end71 ]
  store i8* %19, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %20 = bitcast i8* %15 to %struct.bitmap_head_def*
  %call103 = tail call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %20) #3
  %global_live_at_end = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 9
  store %struct.bitmap_head_def* %call103, %struct.bitmap_head_def** %global_live_at_end, align 8, !tbaa !32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %21 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %22 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %22, %21
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %if.end99, %entry
  %23 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %24 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %sub.ptr.lhs.cast112 = ptrtoint i8* %23 to i64
  %sub.ptr.rhs.cast113 = ptrtoint i8* %24 to i64
  %sub.ptr.sub114 = sub i64 %sub.ptr.lhs.cast112, %sub.ptr.rhs.cast113
  %cmp116 = icmp slt i64 %sub.ptr.sub114, 24
  br i1 %cmp116, label %if.then118, label %if.end119

if.then118:                                       ; preds = %for.end
  tail call void @_obstack_newchunk(%struct.obstack* @flow_obstack, i32 24) #3
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end119

if.end119:                                        ; preds = %if.then118, %for.end
  %25 = phi i8* [ %.pre, %if.then118 ], [ %24, %for.end ]
  %add.ptr122 = getelementptr inbounds i8* %25, i64 24
  store i8* %add.ptr122, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %26 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %cmp130 = icmp eq i8* %add.ptr122, %26
  br i1 %cmp130, label %if.then132, label %if.end137

if.then132:                                       ; preds = %if.end119
  %bf.load134 = load i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  %bf.set136 = or i8 %bf.load134, 2
  store i8 %bf.set136, i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  br label %if.end137

if.end137:                                        ; preds = %if.then132, %if.end119
  %sub.ptr.lhs.cast139 = ptrtoint i8* %add.ptr122 to i64
  %27 = load i32* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 6), align 8, !tbaa !30
  %conv142 = sext i32 %27 to i64
  %add143 = add nsw i64 %conv142, %sub.ptr.lhs.cast139
  %neg145 = xor i32 %27, -1
  %conv146 = sext i32 %neg145 to i64
  %and147 = and i64 %add143, %conv146
  %add.ptr148 = getelementptr inbounds i8* null, i64 %and147
  store i8* %add.ptr148, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %28 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !tbaa !31
  %sub.ptr.lhs.cast152 = ptrtoint i8* %add.ptr148 to i64
  %sub.ptr.rhs.cast153 = ptrtoint %struct._obstack_chunk* %28 to i64
  %sub.ptr.sub154 = sub i64 %sub.ptr.lhs.cast152, %sub.ptr.rhs.cast153
  %29 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %sub.ptr.lhs.cast157 = ptrtoint i8* %29 to i64
  %sub.ptr.sub159 = sub i64 %sub.ptr.lhs.cast157, %sub.ptr.rhs.cast153
  %cmp160 = icmp sgt i64 %sub.ptr.sub154, %sub.ptr.sub159
  br i1 %cmp160, label %if.then162, label %if.end165

if.then162:                                       ; preds = %if.end137
  store i8* %29, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end165

if.end165:                                        ; preds = %if.then162, %if.end137
  %30 = phi i8* [ %29, %if.then162 ], [ %add.ptr148, %if.end137 ]
  store i8* %30, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %31 = bitcast i8* %26 to %struct.bitmap_head_def*
  %call169 = tail call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %31) #3
  store %struct.bitmap_head_def* %call169, %struct.bitmap_head_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 9), align 8, !tbaa !32
  %32 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %33 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %sub.ptr.lhs.cast178 = ptrtoint i8* %32 to i64
  %sub.ptr.rhs.cast179 = ptrtoint i8* %33 to i64
  %sub.ptr.sub180 = sub i64 %sub.ptr.lhs.cast178, %sub.ptr.rhs.cast179
  %cmp182 = icmp slt i64 %sub.ptr.sub180, 24
  br i1 %cmp182, label %if.then184, label %if.end185

if.then184:                                       ; preds = %if.end165
  tail call void @_obstack_newchunk(%struct.obstack* @flow_obstack, i32 24) #3
  %.pre412 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end185

if.end185:                                        ; preds = %if.then184, %if.end165
  %34 = phi i8* [ %.pre412, %if.then184 ], [ %33, %if.end165 ]
  %add.ptr188 = getelementptr inbounds i8* %34, i64 24
  store i8* %add.ptr188, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %35 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %cmp196 = icmp eq i8* %add.ptr188, %35
  br i1 %cmp196, label %if.then198, label %if.end203

if.then198:                                       ; preds = %if.end185
  %bf.load200 = load i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  %bf.set202 = or i8 %bf.load200, 2
  store i8 %bf.set202, i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  br label %if.end203

if.end203:                                        ; preds = %if.then198, %if.end185
  %sub.ptr.lhs.cast205 = ptrtoint i8* %add.ptr188 to i64
  %36 = load i32* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 6), align 8, !tbaa !30
  %conv208 = sext i32 %36 to i64
  %add209 = add nsw i64 %conv208, %sub.ptr.lhs.cast205
  %neg211 = xor i32 %36, -1
  %conv212 = sext i32 %neg211 to i64
  %and213 = and i64 %add209, %conv212
  %add.ptr214 = getelementptr inbounds i8* null, i64 %and213
  store i8* %add.ptr214, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %37 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !tbaa !31
  %sub.ptr.lhs.cast218 = ptrtoint i8* %add.ptr214 to i64
  %sub.ptr.rhs.cast219 = ptrtoint %struct._obstack_chunk* %37 to i64
  %sub.ptr.sub220 = sub i64 %sub.ptr.lhs.cast218, %sub.ptr.rhs.cast219
  %38 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %sub.ptr.lhs.cast223 = ptrtoint i8* %38 to i64
  %sub.ptr.sub225 = sub i64 %sub.ptr.lhs.cast223, %sub.ptr.rhs.cast219
  %cmp226 = icmp sgt i64 %sub.ptr.sub220, %sub.ptr.sub225
  br i1 %cmp226, label %if.then228, label %if.end231

if.then228:                                       ; preds = %if.end203
  store i8* %38, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end231

if.end231:                                        ; preds = %if.then228, %if.end203
  %39 = phi i8* [ %38, %if.then228 ], [ %add.ptr214, %if.end203 ]
  store i8* %39, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %40 = bitcast i8* %35 to %struct.bitmap_head_def*
  %call235 = tail call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %40) #3
  store %struct.bitmap_head_def* %call235, %struct.bitmap_head_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 8), align 8, !tbaa !23
  %41 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %42 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %sub.ptr.lhs.cast244 = ptrtoint i8* %41 to i64
  %sub.ptr.rhs.cast245 = ptrtoint i8* %42 to i64
  %sub.ptr.sub246 = sub i64 %sub.ptr.lhs.cast244, %sub.ptr.rhs.cast245
  %cmp248 = icmp slt i64 %sub.ptr.sub246, 24
  br i1 %cmp248, label %if.then250, label %if.end251

if.then250:                                       ; preds = %if.end231
  tail call void @_obstack_newchunk(%struct.obstack* @flow_obstack, i32 24) #3
  %.pre413 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end251

if.end251:                                        ; preds = %if.then250, %if.end231
  %43 = phi i8* [ %.pre413, %if.then250 ], [ %42, %if.end231 ]
  %add.ptr254 = getelementptr inbounds i8* %43, i64 24
  store i8* %add.ptr254, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %44 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %cmp262 = icmp eq i8* %add.ptr254, %44
  br i1 %cmp262, label %if.then264, label %if.end269

if.then264:                                       ; preds = %if.end251
  %bf.load266 = load i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  %bf.set268 = or i8 %bf.load266, 2
  store i8 %bf.set268, i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  br label %if.end269

if.end269:                                        ; preds = %if.then264, %if.end251
  %sub.ptr.lhs.cast271 = ptrtoint i8* %add.ptr254 to i64
  %45 = load i32* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 6), align 8, !tbaa !30
  %conv274 = sext i32 %45 to i64
  %add275 = add nsw i64 %conv274, %sub.ptr.lhs.cast271
  %neg277 = xor i32 %45, -1
  %conv278 = sext i32 %neg277 to i64
  %and279 = and i64 %add275, %conv278
  %add.ptr280 = getelementptr inbounds i8* null, i64 %and279
  store i8* %add.ptr280, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %46 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !tbaa !31
  %sub.ptr.lhs.cast284 = ptrtoint i8* %add.ptr280 to i64
  %sub.ptr.rhs.cast285 = ptrtoint %struct._obstack_chunk* %46 to i64
  %sub.ptr.sub286 = sub i64 %sub.ptr.lhs.cast284, %sub.ptr.rhs.cast285
  %47 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %sub.ptr.lhs.cast289 = ptrtoint i8* %47 to i64
  %sub.ptr.sub291 = sub i64 %sub.ptr.lhs.cast289, %sub.ptr.rhs.cast285
  %cmp292 = icmp sgt i64 %sub.ptr.sub286, %sub.ptr.sub291
  br i1 %cmp292, label %if.then294, label %if.end297

if.then294:                                       ; preds = %if.end269
  store i8* %47, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end297

if.end297:                                        ; preds = %if.then294, %if.end269
  %48 = phi i8* [ %47, %if.then294 ], [ %add.ptr280, %if.end269 ]
  store i8* %48, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %49 = bitcast i8* %44 to %struct.bitmap_head_def*
  %call301 = tail call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %49) #3
  store %struct.bitmap_head_def* %call301, %struct.bitmap_head_def** @regs_live_at_setjmp, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define void @update_life_info(%struct.simple_bitmap_def* %blocks, i32 %extent, i32 %prop_flags) #0 {
entry:
  %tmp_head.i = alloca %struct.bitmap_head_def, align 8
  %call_used_head.i = alloca %struct.bitmap_head_def, align 8
  %new_live_at_end_head.i = alloca %struct.bitmap_head_def, align 8
  %tmp_head = alloca %struct.bitmap_head_def, align 8
  %call = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %tmp_head) #3
  %cmp = icmp eq i32 %extent, 0
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %tobool = icmp ne %struct.simple_bitmap_def* %blocks, null
  %phitmp = select i1 %tobool, i32 6, i32 5
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %0 = phi i32 [ 6, %entry ], [ %phitmp, %lor.rhs ]
  call void @timevar_push(i32 %0) #3
  %and = and i32 %prop_flags, 32
  %tobool4 = icmp ne i32 %and, 0
  %tobool6 = icmp ne %struct.simple_bitmap_def* %blocks, null
  %or.cond = or i1 %cmp, %tobool6
  %or.cond361 = and i1 %tobool4, %or.cond
  br i1 %or.cond361, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i32 650, i8* getelementptr inbounds ([17 x i8]* @__FUNCTION__.update_life_info, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %lor.end
  %and7 = and i32 %prop_flags, 2
  %tobool8 = icmp eq i32 %and7, 0
  br i1 %tobool8, label %if.end10, label %if.then9

if.then9:                                         ; preds = %if.end
  %tobool.i = icmp eq %struct.simple_bitmap_def* %blocks, null
  br i1 %tobool.i, label %if.then.i, label %do.body.i

if.then.i:                                        ; preds = %if.then9
  %call.i = call %struct.rtx_def* @get_insns() #3
  %tobool188.i = icmp eq %struct.rtx_def* %call.i, null
  br i1 %tobool188.i, label %if.end10, label %for.body.i

for.body.i:                                       ; preds = %if.then.i, %for.inc.i
  %insn.089.i = phi %struct.rtx_def* [ %3, %for.inc.i ], [ %call.i, %if.then.i ]
  %1 = getelementptr inbounds %struct.rtx_def* %insn.089.i, i64 0, i32 0
  %bf.load.i = load i32* %1, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom85.i = zext i32 %bf.clear.i to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom85.i
  %2 = load i8* %arrayidx.i, align 1, !tbaa !15
  %cmp.i = icmp eq i8 %2, 105
  br i1 %cmp.i, label %if.then3.i, label %for.inc.i

if.then3.i:                                       ; preds = %for.body.i
  %arrayidx4.i = getelementptr inbounds %struct.rtx_def* %insn.089.i, i64 0, i32 1, i64 5
  %rtx.i = bitcast %union.rtunion_def* %arrayidx4.i to %struct.rtx_def**
  call void @free_INSN_LIST_list(%struct.rtx_def** %rtx.i) #3
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then3.i, %for.body.i
  %arrayidx6.i = getelementptr inbounds %struct.rtx_def* %insn.089.i, i64 0, i32 1, i64 2
  %rtx7.i = bitcast %union.rtunion_def* %arrayidx6.i to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx7.i, align 8, !tbaa !5
  %tobool1.i = icmp eq %struct.rtx_def* %3, null
  br i1 %tobool1.i, label %if.end10, label %for.body.i

do.body.i:                                        ; preds = %if.then9
  %size.i = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 1
  %4 = load i32* %size.i, align 4, !tbaa !33
  %cmp995.i = icmp eq i32 %4, 0
  br i1 %cmp995.i, label %if.end10, label %for.body11.i

for.body11.i:                                     ; preds = %do.body.i, %for.inc60.i
  %indvars.iv97.i = phi i64 [ %indvars.iv.next98.i, %for.inc60.i ], [ 0, %do.body.i ]
  %arrayidx13.i = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %indvars.iv97.i
  %5 = load i64* %arrayidx13.i, align 8, !tbaa !14
  %cmp14.i = icmp eq i64 %5, 0
  br i1 %cmp14.i, label %for.inc60.i, label %for.body20.preheader.i

for.body20.preheader.i:                           ; preds = %for.body11.i
  %6 = trunc i64 %indvars.iv97.i to i32
  %mul.i = shl i32 %6, 6
  br label %for.body20.i

for.body20.i:                                     ; preds = %for.inc57.i, %for.body20.preheader.i
  %indvars.iv.i = phi i64 [ 0, %for.body20.preheader.i ], [ %indvars.iv.next.i, %for.inc57.i ]
  %word_.0.i = phi i64 [ %5, %for.body20.preheader.i ], [ %word_.1.i, %for.inc57.i ]
  %shl.i = shl i64 1, %indvars.iv.i
  %and.i = and i64 %shl.i, %word_.0.i
  %cmp21.i = icmp eq i64 %and.i, 0
  br i1 %cmp21.i, label %for.inc57.i, label %if.then23.i

if.then23.i:                                      ; preds = %for.body20.i
  %neg.i = xor i64 %shl.i, -1
  %and24.i = and i64 %word_.0.i, %neg.i
  %7 = trunc i64 %indvars.iv.i to i32
  %add.i = add i32 %7, %mul.i
  %idxprom25.i = sext i32 %add.i to i64
  %8 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data.i = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 4
  %bb26.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx27.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb26.i, i64 0, i64 %idxprom25.i
  %9 = load %struct.basic_block_def** %arrayidx27.i, align 8, !tbaa !5
  %head.i = getelementptr inbounds %struct.basic_block_def* %9, i64 0, i32 0
  %insn.190.i = load %struct.rtx_def** %head.i, align 8
  %end.i = getelementptr inbounds %struct.basic_block_def* %9, i64 0, i32 1
  %10 = load %struct.rtx_def** %end.i, align 8, !tbaa !24
  %arrayidx3091.i = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 2
  %rtx3192.i = bitcast %union.rtunion_def* %arrayidx3091.i to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx3192.i, align 8, !tbaa !5
  %cmp3293.i = icmp eq %struct.rtx_def* %insn.190.i, %11
  br i1 %cmp3293.i, label %for.end51.i, label %for.body34.i

for.body34.i:                                     ; preds = %if.then23.i, %for.inc47.i
  %12 = phi %struct.rtx_def* [ %15, %for.inc47.i ], [ %10, %if.then23.i ]
  %insn.194.i = phi %struct.rtx_def* [ %insn.1.i, %for.inc47.i ], [ %insn.190.i, %if.then23.i ]
  %13 = getelementptr inbounds %struct.rtx_def* %insn.194.i, i64 0, i32 0
  %bf.load35.i = load i32* %13, align 8
  %bf.clear36.i = and i32 %bf.load35.i, 65535
  %idxprom3786.i = zext i32 %bf.clear36.i to i64
  %arrayidx38.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom3786.i
  %14 = load i8* %arrayidx38.i, align 1, !tbaa !15
  %cmp40.i = icmp eq i8 %14, 105
  br i1 %cmp40.i, label %if.then42.i, label %for.inc47.i

if.then42.i:                                      ; preds = %for.body34.i
  %arrayidx44.i = getelementptr inbounds %struct.rtx_def* %insn.194.i, i64 0, i32 1, i64 5
  %rtx45.i = bitcast %union.rtunion_def* %arrayidx44.i to %struct.rtx_def**
  call void @free_INSN_LIST_list(%struct.rtx_def** %rtx45.i) #3
  %.pre.i = load %struct.rtx_def** %end.i, align 8, !tbaa !24
  br label %for.inc47.i

for.inc47.i:                                      ; preds = %if.then42.i, %for.body34.i
  %15 = phi %struct.rtx_def* [ %12, %for.body34.i ], [ %.pre.i, %if.then42.i ]
  %arrayidx49.i = getelementptr inbounds %struct.rtx_def* %insn.194.i, i64 0, i32 1, i64 2
  %rtx50.i = bitcast %union.rtunion_def* %arrayidx49.i to %struct.rtx_def**
  %insn.1.i = load %struct.rtx_def** %rtx50.i, align 8
  %arrayidx30.i = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 2
  %rtx31.i = bitcast %union.rtunion_def* %arrayidx30.i to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx31.i, align 8, !tbaa !5
  %cmp32.i = icmp eq %struct.rtx_def* %insn.1.i, %16
  br i1 %cmp32.i, label %for.end51.i, label %for.body34.i

for.end51.i:                                      ; preds = %for.inc47.i, %if.then23.i
  %cmp52.i = icmp eq i64 %and24.i, 0
  br i1 %cmp52.i, label %for.inc60.i, label %for.inc57.i

for.inc57.i:                                      ; preds = %for.end51.i, %for.body20.i
  %word_.1.i = phi i64 [ %and24.i, %for.end51.i ], [ %word_.0.i, %for.body20.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %17 = trunc i64 %indvars.iv.next.i to i32
  %cmp18.old.i = icmp ult i32 %17, 64
  br i1 %cmp18.old.i, label %for.body20.i, label %for.inc60.i

for.inc60.i:                                      ; preds = %for.inc57.i, %for.end51.i, %for.body11.i
  %indvars.iv.next98.i = add nuw nsw i64 %indvars.iv97.i, 1
  %lftr.wideiv447 = trunc i64 %indvars.iv.next98.i to i32
  %exitcond448 = icmp eq i32 %lftr.wideiv447, %4
  br i1 %exitcond448, label %if.end10, label %for.body11.i

if.end10:                                         ; preds = %for.inc60.i, %for.inc.i, %do.body.i, %if.then.i, %if.end
  br i1 %cmp, label %if.end35, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end10
  %and14 = and i32 %prop_flags, 48
  %18 = bitcast %struct.bitmap_head_def* %tmp_head.i to i8*
  %19 = bitcast %struct.bitmap_head_def* %call_used_head.i to i8*
  %20 = bitcast %struct.bitmap_head_def* %new_live_at_end_head.i to i8*
  %tobool11.i = icmp eq %struct.simple_bitmap_def* %blocks, null
  %size387.i = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 1
  %and15 = and i32 %prop_flags, 40
  %cmp16 = icmp eq i32 %and15, 40
  %and23 = and i32 %prop_flags, 24
  br label %for.cond

for.cond:                                         ; preds = %for.cond.preheader, %if.end28
  %stabilized_prop_flags.0 = phi i32 [ %and25, %if.end28 ], [ %prop_flags, %for.cond.preheader ]
  call void @llvm.lifetime.start(i64 24, i8* %18) #3
  call void @llvm.lifetime.start(i64 24, i8* %19) #3
  call void @llvm.lifetime.start(i64 24, i8* %20) #3
  %call.i363 = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %tmp_head.i) #3
  %call7.i = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %new_live_at_end_head.i) #3
  %call8.i = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %call_used_head.i) #3
  br label %for.body.i366

for.body.i366:                                    ; preds = %for.inc.i368, %for.cond
  %indvars.iv737.i = phi i64 [ 0, %for.cond ], [ %indvars.iv.next738.i, %for.inc.i368 ]
  %arrayidx.i364 = getelementptr inbounds [53 x i8]* @call_used_regs, i64 0, i64 %indvars.iv737.i
  %21 = load i8* %arrayidx.i364, align 1, !tbaa !15
  %tobool.i365 = icmp eq i8 %21, 0
  br i1 %tobool.i365, label %for.inc.i368, label %if.then.i367

if.then.i367:                                     ; preds = %for.body.i366
  %22 = trunc i64 %indvars.iv737.i to i32
  call void @bitmap_set_bit(%struct.bitmap_head_def* %call8.i, i32 %22) #3
  br label %for.inc.i368

for.inc.i368:                                     ; preds = %if.then.i367, %for.body.i366
  %indvars.iv.next738.i = add nuw nsw i64 %indvars.iv737.i, 1
  %exitcond739.i = icmp eq i64 %indvars.iv.next738.i, 53
  br i1 %exitcond739.i, label %for.end.i, label %for.body.i366

for.end.i:                                        ; preds = %for.inc.i368
  %23 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %add.i369 = add nsw i32 %23, 2
  %conv.i = sext i32 %add.i369 to i64
  %mul.i370 = shl nsw i64 %conv.i, 3
  %call9.i = call noalias i8* @xmalloc(i64 %mul.i370) #3
  %24 = bitcast i8* %call9.i to %struct.basic_block_def**
  %25 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %idx.ext.i = sext i32 %25 to i64
  %add.ptr.sum.i = add i64 %idx.ext.i, 2
  %add.ptr10.i = getelementptr inbounds %struct.basic_block_def** %24, i64 %add.ptr.sum.i
  %cmp66703.i = icmp sgt i32 %25, 0
  br i1 %tobool11.i, label %for.cond65.preheader.i, label %for.cond13.preheader.i

for.cond13.preheader.i:                           ; preds = %for.end.i
  br i1 %cmp66703.i, label %for.body16.i, label %do.body.i374

for.cond65.preheader.i:                           ; preds = %for.end.i
  br i1 %cmp66703.i, label %for.body68.lr.ph.i, label %if.end80.i

for.body68.lr.ph.i:                               ; preds = %for.cond65.preheader.i
  %26 = shl nsw i64 %idx.ext.i, 3
  %27 = add i64 %26, 8
  %28 = icmp sgt i32 %25, 1
  %.op.i = add i32 %25, -1
  %29 = zext i32 %.op.i to i64
  %.op741.i = shl nuw nsw i64 %29, 3
  %.op741.i.op = sub i64 0, %.op741.i
  %.neg = select i1 %28, i64 %.op741.i.op, i64 0
  %30 = add i64 %27, %.neg
  br label %for.body68.i

for.body16.i:                                     ; preds = %for.cond13.preheader.i, %for.body16.i
  %indvars.iv735.i = phi i64 [ %indvars.iv.next736.i, %for.body16.i ], [ %idx.ext.i, %for.cond13.preheader.i ]
  %indvars.iv.next736.i = add nsw i64 %indvars.iv735.i, -1
  %31 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data.i371 = getelementptr inbounds %struct.varray_head_tag* %31, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i371 to [1 x %struct.basic_block_def*]*
  %arrayidx18.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %indvars.iv.next736.i
  %32 = load %struct.basic_block_def** %arrayidx18.i, align 8, !tbaa !5
  %aux.i = getelementptr inbounds %struct.basic_block_def* %32, i64 0, i32 10
  store i8* null, i8** %aux.i, align 8, !tbaa !35
  %33 = trunc i64 %indvars.iv.next736.i to i32
  %cmp14.i372 = icmp sgt i32 %33, 0
  br i1 %cmp14.i372, label %for.body16.i, label %do.body.i374

do.body.i374:                                     ; preds = %for.body16.i, %for.cond13.preheader.i
  %34 = load i32* %size387.i, align 4, !tbaa !33
  %cmp26707.i = icmp eq i32 %34, 0
  br i1 %cmp26707.i, label %if.end80.i, label %for.body28.i

for.body28.i:                                     ; preds = %do.body.i374, %for.inc62.i
  %indvars.iv731.i = phi i64 [ %indvars.iv.next732.i, %for.inc62.i ], [ 0, %do.body.i374 ]
  %qhead.0709.i = phi %struct.basic_block_def** [ %qhead.3.i, %for.inc62.i ], [ %add.ptr10.i, %do.body.i374 ]
  %arrayidx31.i = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %indvars.iv731.i
  %35 = load i64* %arrayidx31.i, align 8, !tbaa !14
  %cmp32.i375 = icmp eq i64 %35, 0
  br i1 %cmp32.i375, label %for.inc62.i, label %for.body38.preheader.i

for.body38.preheader.i:                           ; preds = %for.body28.i
  %36 = trunc i64 %indvars.iv731.i to i32
  %mul44.i = shl i32 %36, 6
  br label %for.body38.i

for.body38.i:                                     ; preds = %for.inc58.i, %for.body38.preheader.i
  %indvars.iv729.i = phi i64 [ 0, %for.body38.preheader.i ], [ %indvars.iv.next730.i, %for.inc58.i ]
  %word_.0.i376 = phi i64 [ %35, %for.body38.preheader.i ], [ %word_.1.i382, %for.inc58.i ]
  %qhead.1.i = phi %struct.basic_block_def** [ %qhead.0709.i, %for.body38.preheader.i ], [ %qhead.2.i, %for.inc58.i ]
  %shl.i377 = shl i64 1, %indvars.iv729.i
  %and.i378 = and i64 %shl.i377, %word_.0.i376
  %cmp40.i379 = icmp eq i64 %and.i378, 0
  br i1 %cmp40.i379, label %for.inc58.i, label %if.then42.i381

if.then42.i381:                                   ; preds = %for.body38.i
  %neg.i380 = xor i64 %shl.i377, -1
  %and43.i = and i64 %word_.0.i376, %neg.i380
  %37 = trunc i64 %indvars.iv729.i to i32
  %add45.i = add i32 %37, %mul44.i
  %idxprom48.i = sext i32 %add45.i to i64
  %38 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data49.i = getelementptr inbounds %struct.varray_head_tag* %38, i64 0, i32 4
  %bb50.i = bitcast %union.varray_data_tag* %data49.i to [1 x %struct.basic_block_def*]*
  %arrayidx51.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb50.i, i64 0, i64 %idxprom48.i
  %39 = load %struct.basic_block_def** %arrayidx51.i, align 8, !tbaa !5
  %incdec.ptr.i = getelementptr inbounds %struct.basic_block_def** %qhead.1.i, i64 -1
  store %struct.basic_block_def* %39, %struct.basic_block_def** %incdec.ptr.i, align 8, !tbaa !5
  %40 = bitcast %struct.basic_block_def* %39 to i8*
  %aux52.i = getelementptr inbounds %struct.basic_block_def* %39, i64 0, i32 10
  store i8* %40, i8** %aux52.i, align 8, !tbaa !35
  %cmp53.i = icmp eq i64 %and43.i, 0
  br i1 %cmp53.i, label %for.inc62.i, label %for.inc58.i

for.inc58.i:                                      ; preds = %if.then42.i381, %for.body38.i
  %word_.1.i382 = phi i64 [ %and43.i, %if.then42.i381 ], [ %word_.0.i376, %for.body38.i ]
  %qhead.2.i = phi %struct.basic_block_def** [ %incdec.ptr.i, %if.then42.i381 ], [ %qhead.1.i, %for.body38.i ]
  %indvars.iv.next730.i = add nuw nsw i64 %indvars.iv729.i, 1
  %41 = trunc i64 %indvars.iv.next730.i to i32
  %cmp36.old.i = icmp ult i32 %41, 64
  br i1 %cmp36.old.i, label %for.body38.i, label %for.inc62.i

for.inc62.i:                                      ; preds = %for.inc58.i, %if.then42.i381, %for.body28.i
  %qhead.3.i = phi %struct.basic_block_def** [ %qhead.0709.i, %for.body28.i ], [ %qhead.2.i, %for.inc58.i ], [ %incdec.ptr.i, %if.then42.i381 ]
  %indvars.iv.next732.i = add nuw nsw i64 %indvars.iv731.i, 1
  %lftr.wideiv439 = trunc i64 %indvars.iv.next732.i to i32
  %exitcond440 = icmp eq i32 %lftr.wideiv439, %34
  br i1 %exitcond440, label %if.end80.i, label %for.body28.i

for.body68.i:                                     ; preds = %for.body68.i, %for.body68.lr.ph.i
  %indvars.iv726.i = phi i64 [ 0, %for.body68.lr.ph.i ], [ %indvars.iv.next727.i, %for.body68.i ]
  %qhead.4705.i = phi %struct.basic_block_def** [ %add.ptr10.i, %for.body68.lr.ph.i ], [ %incdec.ptr75.i, %for.body68.i ]
  %42 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data72.i = getelementptr inbounds %struct.varray_head_tag* %42, i64 0, i32 4
  %bb73.i = bitcast %union.varray_data_tag* %data72.i to [1 x %struct.basic_block_def*]*
  %arrayidx74.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb73.i, i64 0, i64 %indvars.iv726.i
  %43 = load %struct.basic_block_def** %arrayidx74.i, align 8, !tbaa !5
  %incdec.ptr75.i = getelementptr inbounds %struct.basic_block_def** %qhead.4705.i, i64 -1
  store %struct.basic_block_def* %43, %struct.basic_block_def** %incdec.ptr75.i, align 8, !tbaa !5
  %44 = bitcast %struct.basic_block_def* %43 to i8*
  %aux76.i = getelementptr inbounds %struct.basic_block_def* %43, i64 0, i32 10
  store i8* %44, i8** %aux76.i, align 8, !tbaa !35
  %indvars.iv.next727.i = add nuw nsw i64 %indvars.iv726.i, 1
  %lftr.wideiv441 = trunc i64 %indvars.iv.next727.i to i32
  %exitcond442 = icmp eq i32 %lftr.wideiv441, %25
  br i1 %exitcond442, label %for.cond65.if.end80.loopexit_crit_edge.i, label %for.body68.i

for.cond65.if.end80.loopexit_crit_edge.i:         ; preds = %for.body68.i
  %scevgep.i = getelementptr i8* %call9.i, i64 %30
  %scevgep728.i = bitcast i8* %scevgep.i to %struct.basic_block_def**
  br label %if.end80.i

if.end80.i:                                       ; preds = %for.inc62.i, %for.cond65.if.end80.loopexit_crit_edge.i, %do.body.i374, %for.cond65.preheader.i
  %qhead.5.i = phi %struct.basic_block_def** [ %scevgep728.i, %for.cond65.if.end80.loopexit_crit_edge.i ], [ %add.ptr10.i, %for.cond65.preheader.i ], [ %add.ptr10.i, %do.body.i374 ], [ %qhead.3.i, %for.inc62.i ]
  store i8* null, i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !35
  store i8* null, i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 10), align 8, !tbaa !35
  br i1 %tobool6, label %if.then82.i, label %while.cond.preheader.i

if.then82.i:                                      ; preds = %if.end80.i
  call void @sbitmap_zero(%struct.simple_bitmap_def* %blocks) #3
  br label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %if.then82.i, %if.end80.i
  %cmp84694700.i = icmp eq %struct.basic_block_def** %qhead.5.i, %24
  br i1 %cmp84694700.i, label %do.body363.i, label %while.body.lr.ph.lr.ph.i

while.body.lr.ph.lr.ph.i:                         ; preds = %while.cond.preheader.i
  %45 = bitcast %struct.bitmap_head_def* %call7.i to i8*
  br label %while.body.lr.ph.i

while.cond.loopexit.i:                            ; preds = %for.inc361.i, %if.end345.i
  %qtail.1.lcssa.i = phi %struct.basic_block_def** [ %qtail.0.ph701.i, %if.end345.i ], [ %qtail.3.i, %for.inc361.i ]
  %cmp84694.i = icmp eq %struct.basic_block_def** %.incdec.ptr91.i, %qtail.1.lcssa.i
  br i1 %cmp84694.i, label %do.body363.i, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %while.cond.loopexit.i, %while.body.lr.ph.lr.ph.i
  %qhead.6.ph702.i = phi %struct.basic_block_def** [ %qhead.5.i, %while.body.lr.ph.lr.ph.i ], [ %.incdec.ptr91.i, %while.cond.loopexit.i ]
  %qtail.0.ph701.i = phi %struct.basic_block_def** [ %24, %while.body.lr.ph.lr.ph.i ], [ %qtail.1.lcssa.i, %while.cond.loopexit.i ]
  br label %while.body.i

while.body.i:                                     ; preds = %while.cond.backedge.i, %while.body.lr.ph.i
  %qhead.6695.i = phi %struct.basic_block_def** [ %qhead.6.ph702.i, %while.body.lr.ph.i ], [ %.incdec.ptr91.i, %while.cond.backedge.i ]
  %incdec.ptr91.i = getelementptr inbounds %struct.basic_block_def** %qhead.6695.i, i64 1
  %46 = load %struct.basic_block_def** %qhead.6695.i, align 8, !tbaa !5
  %cmp92.i = icmp eq %struct.basic_block_def** %incdec.ptr91.i, %add.ptr10.i
  %.incdec.ptr91.i = select i1 %cmp92.i, %struct.basic_block_def** %24, %struct.basic_block_def** %incdec.ptr91.i
  %aux96.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 10
  store i8* null, i8** %aux96.i, align 8, !tbaa !35
  call void @bitmap_clear(%struct.bitmap_head_def* %call7.i) #3
  %succ.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 5
  %47 = load %struct.edge_def** %succ.i, align 8, !tbaa !36
  %tobool97.i = icmp eq %struct.edge_def* %47, null
  br i1 %tobool97.i, label %if.end136.i, label %for.body102.i

for.body102.i:                                    ; preds = %while.body.i, %for.inc126.i
  %e.0693.i = phi %struct.edge_def* [ %51, %for.inc126.i ], [ %47, %while.body.i ]
  %dest.i = getelementptr inbounds %struct.edge_def* %e.0693.i, i64 0, i32 3
  %48 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !37
  %flags104.i = getelementptr inbounds %struct.edge_def* %e.0693.i, i64 0, i32 6
  %49 = load i32* %flags104.i, align 4, !tbaa !39
  %and105.i = and i32 %49, 8
  %tobool106.i = icmp eq i32 %and105.i, 0
  %global_live_at_start111.i = getelementptr inbounds %struct.basic_block_def* %48, i64 0, i32 8
  %50 = load %struct.bitmap_head_def** %global_live_at_start111.i, align 8, !tbaa !23
  br i1 %tobool106.i, label %if.else110.i, label %if.then107.i

if.then107.i:                                     ; preds = %for.body102.i
  %call108.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %call.i363, %struct.bitmap_head_def* %50, %struct.bitmap_head_def* %call8.i, i32 1) #3
  %call109.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %call7.i, %struct.bitmap_head_def* %call7.i, %struct.bitmap_head_def* %call.i363, i32 2) #3
  br label %for.inc126.i

if.else110.i:                                     ; preds = %for.body102.i
  %call112.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %call7.i, %struct.bitmap_head_def* %call7.i, %struct.bitmap_head_def* %50, i32 2) #3
  br label %for.inc126.i

for.inc126.i:                                     ; preds = %if.else110.i, %if.then107.i
  %succ_next.i = getelementptr inbounds %struct.edge_def* %e.0693.i, i64 0, i32 1
  %51 = load %struct.edge_def** %succ_next.i, align 8, !tbaa !40
  %tobool101.i = icmp eq %struct.edge_def* %51, null
  br i1 %tobool101.i, label %if.end136.i, label %for.body102.i

if.end136.i:                                      ; preds = %for.inc126.i, %while.body.i
  call void @bitmap_set_bit(%struct.bitmap_head_def* %call7.i, i32 7) #3
  %52 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool137.i = icmp eq i32 %52, 0
  br i1 %tobool137.i, label %if.then138.i, label %if.end167.i

if.then138.i:                                     ; preds = %if.end136.i
  call void @bitmap_set_bit(%struct.bitmap_head_def* %call7.i, i32 20) #3
  %53 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1, !tbaa !15
  %tobool139.i = icmp eq i8 %53, 0
  br i1 %tobool139.i, label %if.end141.i, label %if.then140.i

if.then140.i:                                     ; preds = %if.then138.i
  call void @bitmap_set_bit(%struct.bitmap_head_def* %call7.i, i32 16) #3
  br label %if.end141.i

if.end141.i:                                      ; preds = %if.then140.i, %if.then138.i
  %54 = load i32* @target_flags, align 4, !tbaa !1
  %and142.i = and i32 %54, 33554432
  %55 = load i32* @flag_pic, align 4
  %notlhs.i = icmp ne i32 %and142.i, 0
  %notrhs.i = icmp eq i32 %55, 0
  %or.cond.not.i = or i1 %notrhs.i, %notlhs.i
  %56 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 3), align 1
  %tobool157.i = icmp eq i8 %56, 0
  %or.cond742.i = or i1 %or.cond.not.i, %tobool157.i
  br i1 %or.cond742.i, label %if.end167.i, label %lor.end164.i

lor.end164.i:                                     ; preds = %if.end141.i
  call void @bitmap_set_bit(%struct.bitmap_head_def* %call7.i, i32 3) #3
  br label %if.end167.i

if.end167.i:                                      ; preds = %lor.end164.i, %if.end141.i, %if.end136.i
  %57 = load i32* @in_ssa_form, align 4, !tbaa !1
  %tobool168.i = icmp eq i32 %57, 0
  br i1 %tobool168.i, label %if.end171.i, label %if.then169.i

if.then169.i:                                     ; preds = %if.end167.i
  %call170.i = call i32 @for_each_successor_phi(%struct.basic_block_def* %46, i32 (%struct.rtx_def*, i32, i32, i8*)* @set_phi_alternative_reg, i8* %45) #3
  br label %if.end171.i

if.end171.i:                                      ; preds = %if.then169.i, %if.end167.i
  %cmp172.i = icmp eq %struct.basic_block_def* %46, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp172.i, label %if.then174.i, label %if.end175.i

if.then174.i:                                     ; preds = %if.end171.i
  %58 = load %struct.bitmap_head_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 9), align 8, !tbaa !32
  call void @bitmap_copy(%struct.bitmap_head_def* %58, %struct.bitmap_head_def* %call7.i) #3
  br label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %if.else334.i, %if.then324.i, %if.then304.i, %if.then174.i
  %cmp84.i = icmp eq %struct.basic_block_def** %.incdec.ptr91.i, %qtail.0.ph701.i
  br i1 %cmp84.i, label %do.body363.i, label %while.body.i

if.end175.i:                                      ; preds = %if.end171.i
  %local_set.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 6
  %59 = load %struct.bitmap_head_def** %local_set.i, align 8, !tbaa !41
  %cmp176.i = icmp eq %struct.bitmap_head_def* %59, null
  br i1 %cmp176.i, label %if.then178.i, label %if.else295.i

if.then178.i:                                     ; preds = %if.end175.i
  %60 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %61 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %sub.ptr.lhs.cast.i = ptrtoint i8* %60 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %61 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %cmp183.i = icmp slt i64 %sub.ptr.sub.i, 24
  br i1 %cmp183.i, label %if.then185.i, label %if.end186.i

if.then185.i:                                     ; preds = %if.then178.i
  call void @_obstack_newchunk(%struct.obstack* @flow_obstack, i32 24) #3
  %.pre.i383 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end186.i

if.end186.i:                                      ; preds = %if.then185.i, %if.then178.i
  %62 = phi i8* [ %.pre.i383, %if.then185.i ], [ %61, %if.then178.i ]
  %add.ptr189.i = getelementptr inbounds i8* %62, i64 24
  store i8* %add.ptr189.i, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %63 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %cmp194.i = icmp eq i8* %add.ptr189.i, %63
  br i1 %cmp194.i, label %if.then196.i, label %if.end197.i

if.then196.i:                                     ; preds = %if.end186.i
  %bf.load.i384 = load i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  %bf.set.i = or i8 %bf.load.i384, 2
  store i8 %bf.set.i, i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  br label %if.end197.i

if.end197.i:                                      ; preds = %if.then196.i, %if.end186.i
  %sub.ptr.lhs.cast199.i = ptrtoint i8* %add.ptr189.i to i64
  %64 = load i32* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 6), align 8, !tbaa !30
  %conv201.i = sext i32 %64 to i64
  %add202.i = add nsw i64 %conv201.i, %sub.ptr.lhs.cast199.i
  %neg204.i = xor i32 %64, -1
  %conv205.i = sext i32 %neg204.i to i64
  %and206.i = and i64 %add202.i, %conv205.i
  %add.ptr207.i = getelementptr inbounds i8* null, i64 %and206.i
  store i8* %add.ptr207.i, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %65 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !tbaa !31
  %sub.ptr.lhs.cast210.i = ptrtoint i8* %add.ptr207.i to i64
  %sub.ptr.rhs.cast211.i = ptrtoint %struct._obstack_chunk* %65 to i64
  %sub.ptr.sub212.i = sub i64 %sub.ptr.lhs.cast210.i, %sub.ptr.rhs.cast211.i
  %66 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %sub.ptr.lhs.cast215.i = ptrtoint i8* %66 to i64
  %sub.ptr.sub217.i = sub i64 %sub.ptr.lhs.cast215.i, %sub.ptr.rhs.cast211.i
  %cmp218.i = icmp sgt i64 %sub.ptr.sub212.i, %sub.ptr.sub217.i
  br i1 %cmp218.i, label %if.then220.i, label %if.end223.i

if.then220.i:                                     ; preds = %if.end197.i
  store i8* %66, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end223.i

if.end223.i:                                      ; preds = %if.then220.i, %if.end197.i
  %67 = phi i8* [ %66, %if.then220.i ], [ %add.ptr207.i, %if.end197.i ]
  store i8* %67, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %68 = bitcast i8* %63 to %struct.bitmap_head_def*
  %call227.i = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %68) #3
  store %struct.bitmap_head_def* %call227.i, %struct.bitmap_head_def** %local_set.i, align 8, !tbaa !41
  %69 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %70 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %sub.ptr.lhs.cast237.i = ptrtoint i8* %69 to i64
  %sub.ptr.rhs.cast238.i = ptrtoint i8* %70 to i64
  %sub.ptr.sub239.i = sub i64 %sub.ptr.lhs.cast237.i, %sub.ptr.rhs.cast238.i
  %cmp241.i = icmp slt i64 %sub.ptr.sub239.i, 24
  br i1 %cmp241.i, label %if.then243.i, label %if.end244.i

if.then243.i:                                     ; preds = %if.end223.i
  call void @_obstack_newchunk(%struct.obstack* @flow_obstack, i32 24) #3
  %.pre740.i = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end244.i

if.end244.i:                                      ; preds = %if.then243.i, %if.end223.i
  %71 = phi i8* [ %.pre740.i, %if.then243.i ], [ %70, %if.end223.i ]
  %add.ptr247.i = getelementptr inbounds i8* %71, i64 24
  store i8* %add.ptr247.i, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %72 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %cmp255.i = icmp eq i8* %add.ptr247.i, %72
  br i1 %cmp255.i, label %if.then257.i, label %if.end262.i

if.then257.i:                                     ; preds = %if.end244.i
  %bf.load259.i = load i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  %bf.set261.i = or i8 %bf.load259.i, 2
  store i8 %bf.set261.i, i8* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 10), align 8
  br label %if.end262.i

if.end262.i:                                      ; preds = %if.then257.i, %if.end244.i
  %sub.ptr.lhs.cast264.i = ptrtoint i8* %add.ptr247.i to i64
  %73 = load i32* getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 6), align 8, !tbaa !30
  %conv267.i = sext i32 %73 to i64
  %add268.i = add nsw i64 %conv267.i, %sub.ptr.lhs.cast264.i
  %neg270.i = xor i32 %73, -1
  %conv271.i = sext i32 %neg270.i to i64
  %and272.i = and i64 %add268.i, %conv271.i
  %add.ptr273.i = getelementptr inbounds i8* null, i64 %and272.i
  store i8* %add.ptr273.i, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  %74 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 1), align 8, !tbaa !31
  %sub.ptr.lhs.cast277.i = ptrtoint i8* %add.ptr273.i to i64
  %sub.ptr.rhs.cast278.i = ptrtoint %struct._obstack_chunk* %74 to i64
  %sub.ptr.sub279.i = sub i64 %sub.ptr.lhs.cast277.i, %sub.ptr.rhs.cast278.i
  %75 = load i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 4), align 8, !tbaa !25
  %sub.ptr.lhs.cast282.i = ptrtoint i8* %75 to i64
  %sub.ptr.sub284.i = sub i64 %sub.ptr.lhs.cast282.i, %sub.ptr.rhs.cast278.i
  %cmp285.i = icmp sgt i64 %sub.ptr.sub279.i, %sub.ptr.sub284.i
  br i1 %cmp285.i, label %if.then287.i, label %if.end290.i

if.then287.i:                                     ; preds = %if.end262.i
  store i8* %75, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 3), align 8, !tbaa !28
  br label %if.end290.i

if.end290.i:                                      ; preds = %if.then287.i, %if.end262.i
  %76 = phi i8* [ %75, %if.then287.i ], [ %add.ptr273.i, %if.end262.i ]
  store i8* %76, i8** getelementptr inbounds (%struct.obstack* @flow_obstack, i64 0, i32 2), align 8, !tbaa !29
  %77 = bitcast i8* %72 to %struct.bitmap_head_def*
  %call294.i = call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %77) #3
  %cond_local_set.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 7
  store %struct.bitmap_head_def* %call294.i, %struct.bitmap_head_def** %cond_local_set.i, align 8, !tbaa !42
  br label %if.end313.i

if.else295.i:                                     ; preds = %if.end175.i
  call void @bitmap_clear(%struct.bitmap_head_def* %call.i363) #3
  %global_live_at_end296.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 9
  %78 = load %struct.bitmap_head_def** %global_live_at_end296.i, align 8, !tbaa !32
  %call297.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %call.i363, %struct.bitmap_head_def* %78, %struct.bitmap_head_def* %call7.i, i32 1) #3
  %tobool298.i = icmp eq i32 %call297.i, 0
  br i1 %tobool298.i, label %if.end302.i, label %if.end313.i

if.end302.i:                                      ; preds = %if.else295.i
  call void @bitmap_clear(%struct.bitmap_head_def* %call.i363) #3
  %cond_local_set300.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 7
  %79 = load %struct.bitmap_head_def** %cond_local_set300.i, align 8, !tbaa !42
  %call301.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %call.i363, %struct.bitmap_head_def* %call7.i, %struct.bitmap_head_def* %79, i32 0) #3
  %tobool303.i = icmp eq i32 %call301.i, 0
  br i1 %tobool303.i, label %if.then304.i, label %if.end313.i

if.then304.i:                                     ; preds = %if.end302.i
  call void @bitmap_clear(%struct.bitmap_head_def* %call.i363) #3
  %80 = load %struct.bitmap_head_def** %global_live_at_end296.i, align 8, !tbaa !32
  %call306.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %call.i363, %struct.bitmap_head_def* %80, %struct.bitmap_head_def* %call7.i, i32 3) #3
  %tobool307.i = icmp eq i32 %call306.i, 0
  br i1 %tobool307.i, label %while.cond.backedge.i, label %if.end309.i

if.end309.i:                                      ; preds = %if.then304.i
  %81 = load %struct.bitmap_head_def** %local_set.i, align 8, !tbaa !41
  %call311.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %call.i363, %struct.bitmap_head_def* %call.i363, %struct.bitmap_head_def* %81, i32 1) #3
  br label %if.end313.i

if.end313.i:                                      ; preds = %if.end309.i, %if.end302.i, %if.else295.i, %if.end290.i
  %rescan.1.i = phi i32 [ 1, %if.end290.i ], [ %call301.i, %if.end302.i ], [ %call311.i, %if.end309.i ], [ %call297.i, %if.else295.i ]
  br i1 %tobool6, label %if.then315.i, label %if.end322.i

if.then315.i:                                     ; preds = %if.end313.i
  %index.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 11
  %82 = load i32* %index.i, align 4, !tbaa !43
  %rem.i = and i32 %82, 63
  %sh_prom316.i = zext i32 %rem.i to i64
  %shl317.i = shl i64 1, %sh_prom316.i
  %div.i = lshr i32 %82, 6
  %idxprom319.i = zext i32 %div.i to i64
  %arrayidx321.i = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %idxprom319.i
  %83 = load i64* %arrayidx321.i, align 8, !tbaa !14
  %or.i = or i64 %shl317.i, %83
  store i64 %or.i, i64* %arrayidx321.i, align 8, !tbaa !14
  br label %if.end322.i

if.end322.i:                                      ; preds = %if.then315.i, %if.end313.i
  %tobool323.i = icmp eq i32 %rescan.1.i, 0
  %global_live_at_end325.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 9
  %84 = load %struct.bitmap_head_def** %global_live_at_end325.i, align 8, !tbaa !32
  br i1 %tobool323.i, label %if.then324.i, label %if.else334.i

if.then324.i:                                     ; preds = %if.end322.i
  %call326.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %call.i363, %struct.bitmap_head_def* %call7.i, %struct.bitmap_head_def* %84, i32 1) #3
  %85 = load %struct.bitmap_head_def** %global_live_at_end325.i, align 8, !tbaa !32
  call void @bitmap_copy(%struct.bitmap_head_def* %85, %struct.bitmap_head_def* %call7.i) #3
  %global_live_at_start328.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 8
  %86 = load %struct.bitmap_head_def** %global_live_at_start328.i, align 8, !tbaa !23
  %call330.i = call i32 @bitmap_operation(%struct.bitmap_head_def* %86, %struct.bitmap_head_def* %86, %struct.bitmap_head_def* %call.i363, i32 2) #3
  %tobool331.i = icmp eq i32 %call330.i, 0
  br i1 %tobool331.i, label %while.cond.backedge.i, label %if.end345.i

if.else334.i:                                     ; preds = %if.end322.i
  call void @bitmap_copy(%struct.bitmap_head_def* %84, %struct.bitmap_head_def* %call7.i) #3
  %87 = load %struct.bitmap_head_def** %local_set.i, align 8, !tbaa !41
  %cond_local_set337.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 7
  %88 = load %struct.bitmap_head_def** %cond_local_set337.i, align 8, !tbaa !42
  %call338.i = call i32 @propagate_block(%struct.basic_block_def* %46, %struct.bitmap_head_def* %call7.i, %struct.bitmap_head_def* %87, %struct.bitmap_head_def* %88, i32 %and14) #3
  %global_live_at_start339.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 8
  %89 = load %struct.bitmap_head_def** %global_live_at_start339.i, align 8, !tbaa !23
  %call340.i = call i32 @bitmap_equal_p(%struct.bitmap_head_def* %89, %struct.bitmap_head_def* %call7.i) #3
  %tobool341.i = icmp eq i32 %call340.i, 0
  br i1 %tobool341.i, label %if.end343.i, label %while.cond.backedge.i

if.end343.i:                                      ; preds = %if.else334.i
  %90 = load %struct.bitmap_head_def** %global_live_at_start339.i, align 8, !tbaa !23
  call void @bitmap_copy(%struct.bitmap_head_def* %90, %struct.bitmap_head_def* %call7.i) #3
  br label %if.end345.i

if.end345.i:                                      ; preds = %if.then324.i, %if.end343.i
  %pred.i = getelementptr inbounds %struct.basic_block_def* %46, i64 0, i32 4
  %e.1696.i = load %struct.edge_def** %pred.i, align 8
  %tobool347697.i = icmp eq %struct.edge_def* %e.1696.i, null
  br i1 %tobool347697.i, label %while.cond.loopexit.i, label %for.body348.i

for.body348.i:                                    ; preds = %if.end345.i, %for.inc361.i
  %e.1699.i = phi %struct.edge_def* [ %e.1.i, %for.inc361.i ], [ %e.1696.i, %if.end345.i ]
  %qtail.1698.i = phi %struct.basic_block_def** [ %qtail.3.i, %for.inc361.i ], [ %qtail.0.ph701.i, %if.end345.i ]
  %src.i = getelementptr inbounds %struct.edge_def* %e.1699.i, i64 0, i32 2
  %91 = load %struct.basic_block_def** %src.i, align 8, !tbaa !44
  %aux350.i = getelementptr inbounds %struct.basic_block_def* %91, i64 0, i32 10
  %92 = load i8** %aux350.i, align 8, !tbaa !35
  %cmp351.i = icmp eq i8* %92, null
  br i1 %cmp351.i, label %if.then353.i, label %for.inc361.i

if.then353.i:                                     ; preds = %for.body348.i
  %incdec.ptr354.i = getelementptr inbounds %struct.basic_block_def** %qtail.1698.i, i64 1
  store %struct.basic_block_def* %91, %struct.basic_block_def** %qtail.1698.i, align 8, !tbaa !5
  %cmp355.i = icmp eq %struct.basic_block_def** %incdec.ptr354.i, %add.ptr10.i
  %.incdec.ptr354.i = select i1 %cmp355.i, %struct.basic_block_def** %24, %struct.basic_block_def** %incdec.ptr354.i
  %93 = bitcast %struct.basic_block_def* %91 to i8*
  store i8* %93, i8** %aux350.i, align 8, !tbaa !35
  br label %for.inc361.i

for.inc361.i:                                     ; preds = %if.then353.i, %for.body348.i
  %qtail.3.i = phi %struct.basic_block_def** [ %.incdec.ptr354.i, %if.then353.i ], [ %qtail.1698.i, %for.body348.i ]
  %pred_next.i = getelementptr inbounds %struct.edge_def* %e.1699.i, i64 0, i32 0
  %e.1.i = load %struct.edge_def** %pred_next.i, align 8
  %tobool347.i = icmp eq %struct.edge_def* %e.1.i, null
  br i1 %tobool347.i, label %while.cond.loopexit.i, label %for.body348.i

do.body363.i:                                     ; preds = %while.cond.loopexit.i, %while.cond.backedge.i, %while.cond.preheader.i
  %tobool364.i = icmp eq %struct.bitmap_head_def* %call.i363, null
  br i1 %tobool364.i, label %do.body368.i, label %if.then365.i

if.then365.i:                                     ; preds = %do.body363.i
  call void @bitmap_clear(%struct.bitmap_head_def* %call.i363) #3
  br label %do.body368.i

do.body368.i:                                     ; preds = %if.then365.i, %do.body363.i
  %tobool369.i = icmp eq %struct.bitmap_head_def* %call7.i, null
  br i1 %tobool369.i, label %do.body373.i, label %if.then370.i

if.then370.i:                                     ; preds = %do.body368.i
  call void @bitmap_clear(%struct.bitmap_head_def* %call7.i) #3
  br label %do.body373.i

do.body373.i:                                     ; preds = %if.then370.i, %do.body368.i
  %tobool374.i = icmp eq %struct.bitmap_head_def* %call8.i, null
  br i1 %tobool374.i, label %do.end377.i, label %if.then375.i

if.then375.i:                                     ; preds = %do.body373.i
  call void @bitmap_clear(%struct.bitmap_head_def* %call8.i) #3
  br label %do.end377.i

do.end377.i:                                      ; preds = %if.then375.i, %do.body373.i
  br i1 %tobool6, label %do.body380.i, label %if.else454.i

do.body380.i:                                     ; preds = %do.end377.i
  %94 = load i32* %size387.i, align 4, !tbaa !33
  %cmp393687.i = icmp eq i32 %94, 0
  br i1 %cmp393687.i, label %calculate_global_regs_live.exit, label %for.body395.i

for.body395.i:                                    ; preds = %do.body380.i, %for.inc450.i
  %indvars.iv720.i = phi i64 [ %indvars.iv.next721.i, %for.inc450.i ], [ 0, %do.body380.i ]
  %arrayidx399.i = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %indvars.iv720.i
  %95 = load i64* %arrayidx399.i, align 8, !tbaa !14
  %cmp400.i = icmp eq i64 %95, 0
  br i1 %cmp400.i, label %for.inc450.i, label %for.body406.preheader.i

for.body406.preheader.i:                          ; preds = %for.body395.i
  %96 = trunc i64 %indvars.iv720.i to i32
  %mul417.i = shl i32 %96, 6
  br label %for.body406.i

for.body406.i:                                    ; preds = %for.inc446.i, %for.body406.preheader.i
  %indvars.iv.i385 = phi i64 [ 0, %for.body406.preheader.i ], [ %indvars.iv.next.i386, %for.inc446.i ]
  %word_397.0.i = phi i64 [ %95, %for.body406.preheader.i ], [ %word_397.1.i, %for.inc446.i ]
  %shl410.i = shl i64 1, %indvars.iv.i385
  %and411.i = and i64 %shl410.i, %word_397.0.i
  %cmp412.i = icmp eq i64 %and411.i, 0
  br i1 %cmp412.i, label %for.inc446.i, label %if.then414.i

if.then414.i:                                     ; preds = %for.body406.i
  %neg415.i = xor i64 %shl410.i, -1
  %and416.i = and i64 %word_397.0.i, %neg415.i
  %97 = trunc i64 %indvars.iv.i385 to i32
  %add418.i = add i32 %97, %mul417.i
  %idxprom421.i = sext i32 %add418.i to i64
  %98 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data422.i = getelementptr inbounds %struct.varray_head_tag* %98, i64 0, i32 4
  %bb423.i = bitcast %union.varray_data_tag* %data422.i to [1 x %struct.basic_block_def*]*
  %arrayidx424.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb423.i, i64 0, i64 %idxprom421.i
  %99 = load %struct.basic_block_def** %arrayidx424.i, align 8, !tbaa !5
  %local_set426.i = getelementptr inbounds %struct.basic_block_def* %99, i64 0, i32 6
  %100 = load %struct.bitmap_head_def** %local_set426.i, align 8, !tbaa !41
  %tobool427.i = icmp eq %struct.bitmap_head_def* %100, null
  br i1 %tobool427.i, label %do.body433.i, label %if.then428.i

if.then428.i:                                     ; preds = %if.then414.i
  call void @bitmap_clear(%struct.bitmap_head_def* %100) #3
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %local_set426.i, align 8, !tbaa !41
  br label %do.body433.i

do.body433.i:                                     ; preds = %if.then428.i, %if.then414.i
  %cond_local_set434.i = getelementptr inbounds %struct.basic_block_def* %99, i64 0, i32 7
  %101 = load %struct.bitmap_head_def** %cond_local_set434.i, align 8, !tbaa !42
  %tobool435.i = icmp eq %struct.bitmap_head_def* %101, null
  br i1 %tobool435.i, label %do.end440.i, label %if.then436.i

if.then436.i:                                     ; preds = %do.body433.i
  call void @bitmap_clear(%struct.bitmap_head_def* %101) #3
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %cond_local_set434.i, align 8, !tbaa !42
  br label %do.end440.i

do.end440.i:                                      ; preds = %if.then436.i, %do.body433.i
  %cmp441.i = icmp eq i64 %and416.i, 0
  br i1 %cmp441.i, label %for.inc450.i, label %for.inc446.i

for.inc446.i:                                     ; preds = %do.end440.i, %for.body406.i
  %word_397.1.i = phi i64 [ %and416.i, %do.end440.i ], [ %word_397.0.i, %for.body406.i ]
  %indvars.iv.next.i386 = add nuw nsw i64 %indvars.iv.i385, 1
  %102 = trunc i64 %indvars.iv.next.i386 to i32
  %cmp404.old.i = icmp ult i32 %102, 64
  br i1 %cmp404.old.i, label %for.body406.i, label %for.inc450.i

for.inc450.i:                                     ; preds = %for.inc446.i, %do.end440.i, %for.body395.i
  %indvars.iv.next721.i = add nuw nsw i64 %indvars.iv720.i, 1
  %lftr.wideiv443 = trunc i64 %indvars.iv.next721.i to i32
  %exitcond444 = icmp eq i32 %lftr.wideiv443, %94
  br i1 %exitcond444, label %calculate_global_regs_live.exit, label %for.body395.i

if.else454.i:                                     ; preds = %do.end377.i
  %103 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp457690.i = icmp sgt i32 %103, 0
  br i1 %cmp457690.i, label %for.body459.lr.ph.i, label %calculate_global_regs_live.exit

for.body459.lr.ph.i:                              ; preds = %if.else454.i
  %104 = sext i32 %103 to i64
  br label %for.body459.i

for.body459.i:                                    ; preds = %for.cond456.backedge.i, %for.body459.lr.ph.i
  %indvars.iv722.i = phi i64 [ %104, %for.body459.lr.ph.i ], [ %indvars.iv.next723.i, %for.cond456.backedge.i ]
  %indvars.iv.next723.i = add nsw i64 %indvars.iv722.i, -1
  %105 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data463.i = getelementptr inbounds %struct.varray_head_tag* %105, i64 0, i32 4
  %bb464.i = bitcast %union.varray_data_tag* %data463.i to [1 x %struct.basic_block_def*]*
  %arrayidx465.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb464.i, i64 0, i64 %indvars.iv.next723.i
  %106 = load %struct.basic_block_def** %arrayidx465.i, align 8, !tbaa !5
  %local_set467.i = getelementptr inbounds %struct.basic_block_def* %106, i64 0, i32 6
  %107 = load %struct.bitmap_head_def** %local_set467.i, align 8, !tbaa !41
  %tobool468.i = icmp eq %struct.bitmap_head_def* %107, null
  br i1 %tobool468.i, label %do.body474.i, label %if.then469.i

if.then469.i:                                     ; preds = %for.body459.i
  call void @bitmap_clear(%struct.bitmap_head_def* %107) #3
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %local_set467.i, align 8, !tbaa !41
  br label %do.body474.i

do.body474.i:                                     ; preds = %if.then469.i, %for.body459.i
  %cond_local_set475.i = getelementptr inbounds %struct.basic_block_def* %106, i64 0, i32 7
  %108 = load %struct.bitmap_head_def** %cond_local_set475.i, align 8, !tbaa !42
  %tobool476.i = icmp eq %struct.bitmap_head_def* %108, null
  br i1 %tobool476.i, label %for.cond456.backedge.i, label %if.then477.i

for.cond456.backedge.i:                           ; preds = %if.then477.i, %do.body474.i
  %109 = trunc i64 %indvars.iv.next723.i to i32
  %cmp457.i = icmp sgt i32 %109, 0
  br i1 %cmp457.i, label %for.body459.i, label %calculate_global_regs_live.exit

if.then477.i:                                     ; preds = %do.body474.i
  call void @bitmap_clear(%struct.bitmap_head_def* %108) #3
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %cond_local_set475.i, align 8, !tbaa !42
  br label %for.cond456.backedge.i

calculate_global_regs_live.exit:                  ; preds = %for.cond456.backedge.i, %for.inc450.i, %do.body380.i, %if.else454.i
  call void @free(i8* %call9.i) #3
  call void @llvm.lifetime.end(i64 24, i8* %18) #3
  call void @llvm.lifetime.end(i64 24, i8* %19) #3
  call void @llvm.lifetime.end(i64 24, i8* %20) #3
  br i1 %cmp16, label %if.end18, label %for.end30

if.end18:                                         ; preds = %calculate_global_regs_live.exit
  %110 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp20414 = icmp sgt i32 %110, 0
  br i1 %cmp20414, label %for.body.lr.ph, label %for.end.thread

for.end.thread:                                   ; preds = %if.end18
  %and25449 = and i32 %stabilized_prop_flags.0, -25
  br label %for.end30

for.body.lr.ph:                                   ; preds = %if.end18
  %111 = sext i32 %110 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv445 = phi i64 [ %111, %for.body.lr.ph ], [ %indvars.iv.next446, %for.body ]
  %changed.0415 = phi i32 [ 0, %for.body.lr.ph ], [ %or, %for.body ]
  %indvars.iv.next446 = add nsw i64 %indvars.iv445, -1
  %112 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %112, i64 0, i32 4
  %bb22 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb22, i64 0, i64 %indvars.iv.next446
  %113 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !5
  %global_live_at_end = getelementptr inbounds %struct.basic_block_def* %113, i64 0, i32 9
  %114 = load %struct.bitmap_head_def** %global_live_at_end, align 8, !tbaa !32
  call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %114) #3
  %call24 = call i32 @propagate_block(%struct.basic_block_def* %113, %struct.bitmap_head_def* %call, %struct.bitmap_head_def* null, %struct.bitmap_head_def* null, i32 %and23)
  %or = or i32 %call24, %changed.0415
  %115 = trunc i64 %indvars.iv.next446 to i32
  %cmp20 = icmp sgt i32 %115, 0
  br i1 %cmp20, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %phitmp417 = icmp eq i32 %or, 0
  %and25 = and i32 %stabilized_prop_flags.0, -25
  br i1 %phitmp417, label %for.end30, label %if.end28

if.end28:                                         ; preds = %for.end
  %call29 = call zeroext i1 @cleanup_cfg(i32 1) #3
  br label %for.cond

for.end30:                                        ; preds = %for.end, %calculate_global_regs_live.exit, %for.end.thread
  %stabilized_prop_flags.1 = phi i32 [ %and25449, %for.end.thread ], [ %and25, %for.end ], [ %stabilized_prop_flags.0, %calculate_global_regs_live.exit ]
  %cmp31 = icmp eq i32 %extent, 2
  br i1 %cmp31, label %if.then32, label %if.end35

if.then32:                                        ; preds = %for.end30
  %call33 = call i32 @count_or_remove_death_notes(%struct.simple_bitmap_def* %blocks, i32 1)
  br label %if.end35

if.end35:                                         ; preds = %if.end10, %for.end30, %if.then32
  %stabilized_prop_flags.2 = phi i32 [ %stabilized_prop_flags.1, %if.then32 ], [ %stabilized_prop_flags.1, %for.end30 ], [ %prop_flags, %if.end10 ]
  br i1 %tobool6, label %do.body, label %if.else

do.body:                                          ; preds = %if.end35
  %size = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 1
  %116 = load i32* %size, align 4, !tbaa !33
  %cmp43408 = icmp eq i32 %116, 0
  br i1 %cmp43408, label %do.body98, label %for.body44

for.body44:                                       ; preds = %do.body, %for.inc76
  %indvars.iv435 = phi i64 [ %indvars.iv.next436, %for.inc76 ], [ 0, %do.body ]
  %arrayidx47 = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %indvars.iv435
  %117 = load i64* %arrayidx47, align 8, !tbaa !14
  %cmp48 = icmp eq i64 %117, 0
  br i1 %cmp48, label %for.inc76, label %for.body52.preheader

for.body52.preheader:                             ; preds = %for.body44
  %118 = trunc i64 %indvars.iv435 to i32
  %mul = shl i32 %118, 6
  br label %for.body52

for.body52:                                       ; preds = %for.body52.preheader, %for.inc73
  %indvars.iv433 = phi i64 [ 0, %for.body52.preheader ], [ %indvars.iv.next434, %for.inc73 ]
  %word_.0 = phi i64 [ %117, %for.body52.preheader ], [ %word_.1, %for.inc73 ]
  %shl = shl i64 1, %indvars.iv433
  %and54 = and i64 %shl, %word_.0
  %cmp55 = icmp eq i64 %and54, 0
  br i1 %cmp55, label %for.inc73, label %if.then56

if.then56:                                        ; preds = %for.body52
  %neg = xor i64 %shl, -1
  %and57 = and i64 %word_.0, %neg
  %119 = trunc i64 %indvars.iv433 to i32
  %add = add i32 %119, %mul
  %idxprom60 = sext i32 %add to i64
  %120 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data61 = getelementptr inbounds %struct.varray_head_tag* %120, i64 0, i32 4
  %bb62 = bitcast %union.varray_data_tag* %data61 to [1 x %struct.basic_block_def*]*
  %arrayidx63 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb62, i64 0, i64 %idxprom60
  %121 = load %struct.basic_block_def** %arrayidx63, align 8, !tbaa !5
  %global_live_at_end64 = getelementptr inbounds %struct.basic_block_def* %121, i64 0, i32 9
  %122 = load %struct.bitmap_head_def** %global_live_at_end64, align 8, !tbaa !32
  call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %122) #3
  %call65 = call i32 @propagate_block(%struct.basic_block_def* %121, %struct.bitmap_head_def* %call, %struct.bitmap_head_def* null, %struct.bitmap_head_def* null, i32 %stabilized_prop_flags.2)
  br i1 %cmp, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.then56
  call fastcc void @verify_local_live_at_start(%struct.bitmap_head_def* %call, %struct.basic_block_def* %121)
  br label %if.end68

if.end68:                                         ; preds = %if.then67, %if.then56
  %cmp69 = icmp eq i64 %and57, 0
  br i1 %cmp69, label %for.inc76, label %for.inc73

for.inc73:                                        ; preds = %for.body52, %if.end68
  %word_.1 = phi i64 [ %and57, %if.end68 ], [ %word_.0, %for.body52 ]
  %indvars.iv.next434 = add nuw nsw i64 %indvars.iv433, 1
  %123 = trunc i64 %indvars.iv.next434 to i32
  %cmp51.old = icmp ult i32 %123, 64
  br i1 %cmp51.old, label %for.body52, label %for.inc76

for.inc76:                                        ; preds = %if.end68, %for.inc73, %for.body44
  %indvars.iv.next436 = add nuw nsw i64 %indvars.iv435, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next436 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %116
  br i1 %exitcond, label %do.body98, label %for.body44

if.else:                                          ; preds = %if.end35
  %124 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp81411 = icmp sgt i32 %124, 0
  br i1 %cmp81411, label %for.body82.lr.ph, label %do.body98

for.body82.lr.ph:                                 ; preds = %if.else
  %125 = sext i32 %124 to i64
  br label %for.body82

for.body82:                                       ; preds = %for.body82.lr.ph, %for.cond80.backedge
  %indvars.iv437 = phi i64 [ %125, %for.body82.lr.ph ], [ %indvars.iv.next438, %for.cond80.backedge ]
  %indvars.iv.next438 = add nsw i64 %indvars.iv437, -1
  %126 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data86 = getelementptr inbounds %struct.varray_head_tag* %126, i64 0, i32 4
  %bb87 = bitcast %union.varray_data_tag* %data86 to [1 x %struct.basic_block_def*]*
  %arrayidx88 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb87, i64 0, i64 %indvars.iv.next438
  %127 = load %struct.basic_block_def** %arrayidx88, align 8, !tbaa !5
  %global_live_at_end89 = getelementptr inbounds %struct.basic_block_def* %127, i64 0, i32 9
  %128 = load %struct.bitmap_head_def** %global_live_at_end89, align 8, !tbaa !32
  call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %128) #3
  %call90 = call i32 @propagate_block(%struct.basic_block_def* %127, %struct.bitmap_head_def* %call, %struct.bitmap_head_def* null, %struct.bitmap_head_def* null, i32 %stabilized_prop_flags.2)
  br i1 %cmp, label %if.then92, label %for.cond80.backedge

for.cond80.backedge:                              ; preds = %for.body82, %if.then92
  %129 = trunc i64 %indvars.iv.next438 to i32
  %cmp81 = icmp sgt i32 %129, 0
  br i1 %cmp81, label %for.body82, label %do.body98

if.then92:                                        ; preds = %for.body82
  call fastcc void @verify_local_live_at_start(%struct.bitmap_head_def* %call, %struct.basic_block_def* %127)
  br label %for.cond80.backedge

do.body98:                                        ; preds = %for.cond80.backedge, %for.inc76, %if.else, %do.body
  %tobool99 = icmp eq %struct.bitmap_head_def* %call, null
  br i1 %tobool99, label %do.end102, label %if.then100

if.then100:                                       ; preds = %do.body98
  call void @bitmap_clear(%struct.bitmap_head_def* %call) #3
  br label %do.end102

do.end102:                                        ; preds = %do.body98, %if.then100
  %and103 = and i32 %prop_flags, 4
  %tobool104 = icmp eq i32 %and103, 0
  br i1 %tobool104, label %if.end252, label %do.body106

do.body106:                                       ; preds = %do.end102
  %130 = load %struct.bitmap_head_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 9), align 8, !tbaa !32
  %first = getelementptr inbounds %struct.bitmap_head_def* %130, i64 0, i32 0
  %131 = load %struct.bitmap_element_def** %first, align 8, !tbaa !45
  %cmp114 = icmp eq %struct.bitmap_element_def* %131, null
  br i1 %cmp114, label %do.body168, label %for.cond125.preheader.lr.ph

for.cond125.preheader.lr.ph:                      ; preds = %do.body106
  %indx118 = getelementptr inbounds %struct.bitmap_element_def* %131, i64 0, i32 2
  %132 = load i32* %indx118, align 4, !tbaa !47
  %cmp119 = icmp eq i32 %132, 0
  %. = select i1 %cmp119, i32 53, i32 0
  %133 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data151 = getelementptr inbounds %struct.varray_head_tag* %133, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data151 to [1 x %struct.reg_info_def*]*
  br label %for.cond125.preheader

for.cond125.preheader:                            ; preds = %for.cond125.preheader.lr.ph, %if.end160.1
  %bit_num_111.0407 = phi i32 [ %., %for.cond125.preheader.lr.ph ], [ 0, %if.end160.1 ]
  %ptr_108.1406 = phi %struct.bitmap_element_def* [ %131, %for.cond125.preheader.lr.ph ], [ %165, %if.end160.1 ]
  %indx145 = getelementptr inbounds %struct.bitmap_element_def* %ptr_108.1406, i64 0, i32 2
  %arrayidx131 = getelementptr inbounds %struct.bitmap_element_def* %ptr_108.1406, i64 0, i32 3, i64 0
  %134 = load i64* %arrayidx131, align 8, !tbaa !14
  %cmp132 = icmp eq i64 %134, 0
  br i1 %cmp132, label %if.end160, label %for.body136.preheader

for.body136.preheader:                            ; preds = %for.cond125.preheader
  %135 = zext i32 %bit_num_111.0407 to i64
  br label %for.body136

for.body136:                                      ; preds = %for.body136.preheader, %for.inc157
  %indvars.iv427 = phi i64 [ %135, %for.body136.preheader ], [ %indvars.iv.next428, %for.inc157 ]
  %bit_num_111.2 = phi i32 [ %bit_num_111.0407, %for.body136.preheader ], [ %inc158, %for.inc157 ]
  %word_129.0 = phi i64 [ %134, %for.body136.preheader ], [ %word_129.1, %for.inc157 ]
  %shl139 = shl i64 1, %indvars.iv427
  %and140 = and i64 %shl139, %word_129.0
  %cmp141 = icmp eq i64 %and140, 0
  br i1 %cmp141, label %for.inc157, label %if.then142

if.then142:                                       ; preds = %for.body136
  %neg143 = xor i64 %shl139, -1
  %and144 = and i64 %word_129.0, %neg143
  %136 = load i32* %indx145, align 4, !tbaa !47
  %mul146 = shl i32 %136, 7
  %137 = trunc i64 %indvars.iv427 to i32
  %add149 = add i32 %137, %mul146
  %idxprom150 = sext i32 %add149 to i64
  %arrayidx152 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom150
  %138 = load %struct.reg_info_def** %arrayidx152, align 8, !tbaa !5
  %basic_block = getelementptr inbounds %struct.reg_info_def* %138, i64 0, i32 9
  store i32 -2, i32* %basic_block, align 4, !tbaa !22
  %cmp153 = icmp eq i64 %and144, 0
  br i1 %cmp153, label %if.end160, label %for.inc157

for.inc157:                                       ; preds = %for.body136, %if.then142
  %word_129.1 = phi i64 [ %and144, %if.then142 ], [ %word_129.0, %for.body136 ]
  %inc158 = add i32 %bit_num_111.2, 1
  %cmp135.old = icmp ult i32 %inc158, 64
  %indvars.iv.next428 = add nuw nsw i64 %indvars.iv427, 1
  br i1 %cmp135.old, label %for.body136, label %if.end160

if.end160:                                        ; preds = %for.inc157, %if.then142, %for.cond125.preheader
  %arrayidx131.1 = getelementptr inbounds %struct.bitmap_element_def* %ptr_108.1406, i64 0, i32 3, i64 1
  %139 = load i64* %arrayidx131.1, align 8, !tbaa !14
  %cmp132.1 = icmp eq i64 %139, 0
  br i1 %cmp132.1, label %if.end160.1, label %for.body136.1

do.body168:                                       ; preds = %if.end160.1, %do.body106
  %140 = load %struct.bitmap_head_def** @regs_live_at_setjmp, align 8, !tbaa !5
  %first171 = getelementptr inbounds %struct.bitmap_head_def* %140, i64 0, i32 0
  %141 = load %struct.bitmap_element_def** %first171, align 8, !tbaa !45
  %cmp179 = icmp eq %struct.bitmap_element_def* %141, null
  br i1 %cmp179, label %if.end252, label %for.cond196.preheader.lr.ph

for.cond196.preheader.lr.ph:                      ; preds = %do.body168
  %indx189 = getelementptr inbounds %struct.bitmap_element_def* %141, i64 0, i32 2
  %142 = load i32* %indx189, align 4, !tbaa !47
  %cmp190 = icmp eq i32 %142, 0
  %.362 = select i1 %cmp190, i32 53, i32 0
  %143 = load %struct.function** @cfun, align 8, !tbaa !5
  %emit = getelementptr inbounds %struct.function* %143, i64 0, i32 3
  %144 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data228 = getelementptr inbounds %struct.varray_head_tag* %144, i64 0, i32 4
  %reg229 = bitcast %union.varray_data_tag* %data228 to [1 x %struct.reg_info_def*]*
  br label %for.cond196.preheader

for.cond196.preheader:                            ; preds = %for.cond196.preheader.lr.ph, %if.end244.1
  %bit_num_175.0402 = phi i32 [ %.362, %for.cond196.preheader.lr.ph ], [ 0, %if.end244.1 ]
  %ptr_170.1401 = phi %struct.bitmap_element_def* [ %141, %for.cond196.preheader.lr.ph ], [ %161, %if.end244.1 ]
  %indx218 = getelementptr inbounds %struct.bitmap_element_def* %ptr_170.1401, i64 0, i32 2
  %arrayidx203 = getelementptr inbounds %struct.bitmap_element_def* %ptr_170.1401, i64 0, i32 3, i64 0
  %145 = load i64* %arrayidx203, align 8, !tbaa !14
  %cmp204 = icmp eq i64 %145, 0
  br i1 %cmp204, label %if.end244, label %for.body208.preheader

for.body208.preheader:                            ; preds = %for.cond196.preheader
  %146 = zext i32 %bit_num_175.0402 to i64
  br label %for.body208

for.body208:                                      ; preds = %for.body208.preheader, %for.inc241
  %indvars.iv = phi i64 [ %146, %for.body208.preheader ], [ %indvars.iv.next, %for.inc241 ]
  %bit_num_175.2 = phi i32 [ %bit_num_175.0402, %for.body208.preheader ], [ %inc242, %for.inc241 ]
  %word_200.0 = phi i64 [ %145, %for.body208.preheader ], [ %word_200.1, %for.inc241 ]
  %shl212 = shl i64 1, %indvars.iv
  %and213 = and i64 %shl212, %word_200.0
  %cmp214 = icmp eq i64 %and213, 0
  br i1 %cmp214, label %for.inc241, label %if.then215

if.then215:                                       ; preds = %for.body208
  %neg216 = xor i64 %shl212, -1
  %and217 = and i64 %word_200.0, %neg216
  %147 = load i32* %indx218, align 4, !tbaa !47
  %mul219 = shl i32 %147, 7
  %148 = trunc i64 %indvars.iv to i32
  %add222 = add i32 %148, %mul219
  %idxprom223 = sext i32 %add222 to i64
  %149 = load %struct.emit_status** %emit, align 8, !tbaa !49
  %x_regno_reg_rtx = getelementptr inbounds %struct.emit_status* %149, i64 0, i32 12
  %150 = load %struct.rtx_def*** %x_regno_reg_rtx, align 8, !tbaa !50
  %arrayidx224 = getelementptr inbounds %struct.rtx_def** %150, i64 %idxprom223
  %151 = load %struct.rtx_def** %arrayidx224, align 8, !tbaa !5
  %cmp225 = icmp eq %struct.rtx_def* %151, null
  br i1 %cmp225, label %if.end236, label %if.then226

if.then226:                                       ; preds = %if.then215
  %arrayidx230 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg229, i64 0, i64 %idxprom223
  %152 = load %struct.reg_info_def** %arrayidx230, align 8, !tbaa !5
  %live_length = getelementptr inbounds %struct.reg_info_def* %152, i64 0, i32 7
  store i32 -1, i32* %live_length, align 4, !tbaa !21
  %basic_block235 = getelementptr inbounds %struct.reg_info_def* %152, i64 0, i32 9
  store i32 -1, i32* %basic_block235, align 4, !tbaa !22
  br label %if.end236

if.end236:                                        ; preds = %if.then215, %if.then226
  %cmp237 = icmp eq i64 %and217, 0
  br i1 %cmp237, label %if.end244, label %for.inc241

for.inc241:                                       ; preds = %for.body208, %if.end236
  %word_200.1 = phi i64 [ %and217, %if.end236 ], [ %word_200.0, %for.body208 ]
  %inc242 = add i32 %bit_num_175.2, 1
  %cmp207.old = icmp ult i32 %inc242, 64
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp207.old, label %for.body208, label %if.end244

if.end244:                                        ; preds = %for.inc241, %if.end236, %for.cond196.preheader
  %arrayidx203.1 = getelementptr inbounds %struct.bitmap_element_def* %ptr_170.1401, i64 0, i32 3, i64 1
  %153 = load i64* %arrayidx203.1, align 8, !tbaa !14
  %cmp204.1 = icmp eq i64 %153, 0
  br i1 %cmp204.1, label %if.end244.1, label %for.body208.1

if.end252:                                        ; preds = %if.end244.1, %do.body168, %do.end102
  br i1 %cmp, label %lor.end256, label %lor.rhs254

lor.rhs254:                                       ; preds = %if.end252
  %phitmp360 = select i1 %tobool6, i32 6, i32 5
  br label %lor.end256

lor.end256:                                       ; preds = %lor.rhs254, %if.end252
  %154 = phi i32 [ 6, %if.end252 ], [ %phitmp360, %lor.rhs254 ]
  call void @timevar_pop(i32 %154) #3
  ret void

for.body208.1:                                    ; preds = %if.end244, %for.inc241.1
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc241.1 ], [ 0, %if.end244 ]
  %bit_num_175.2.1 = phi i32 [ %inc242.1, %for.inc241.1 ], [ 0, %if.end244 ]
  %word_200.0.1 = phi i64 [ %word_200.1.1, %for.inc241.1 ], [ %153, %if.end244 ]
  %shl212.1 = shl i64 1, %indvars.iv.1
  %and213.1 = and i64 %shl212.1, %word_200.0.1
  %cmp214.1 = icmp eq i64 %and213.1, 0
  br i1 %cmp214.1, label %for.inc241.1, label %if.then215.1

if.then215.1:                                     ; preds = %for.body208.1
  %neg216.1 = xor i64 %shl212.1, -1
  %and217.1 = and i64 %word_200.0.1, %neg216.1
  %155 = load i32* %indx218, align 4, !tbaa !47
  %mul219.1 = shl i32 %155, 7
  %156 = trunc i64 %indvars.iv.1 to i32
  %add221.1 = add i32 %156, 64
  %add222.1 = add i32 %add221.1, %mul219.1
  %idxprom223.1 = sext i32 %add222.1 to i64
  %157 = load %struct.emit_status** %emit, align 8, !tbaa !49
  %x_regno_reg_rtx.1 = getelementptr inbounds %struct.emit_status* %157, i64 0, i32 12
  %158 = load %struct.rtx_def*** %x_regno_reg_rtx.1, align 8, !tbaa !50
  %arrayidx224.1 = getelementptr inbounds %struct.rtx_def** %158, i64 %idxprom223.1
  %159 = load %struct.rtx_def** %arrayidx224.1, align 8, !tbaa !5
  %cmp225.1 = icmp eq %struct.rtx_def* %159, null
  br i1 %cmp225.1, label %if.end236.1, label %if.then226.1

if.then226.1:                                     ; preds = %if.then215.1
  %arrayidx230.1 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg229, i64 0, i64 %idxprom223.1
  %160 = load %struct.reg_info_def** %arrayidx230.1, align 8, !tbaa !5
  %live_length.1 = getelementptr inbounds %struct.reg_info_def* %160, i64 0, i32 7
  store i32 -1, i32* %live_length.1, align 4, !tbaa !21
  %basic_block235.1 = getelementptr inbounds %struct.reg_info_def* %160, i64 0, i32 9
  store i32 -1, i32* %basic_block235.1, align 4, !tbaa !22
  br label %if.end236.1

if.end236.1:                                      ; preds = %if.then226.1, %if.then215.1
  %cmp237.1 = icmp eq i64 %and217.1, 0
  br i1 %cmp237.1, label %if.end244.1, label %for.inc241.1

for.inc241.1:                                     ; preds = %if.end236.1, %for.body208.1
  %word_200.1.1 = phi i64 [ %and217.1, %if.end236.1 ], [ %word_200.0.1, %for.body208.1 ]
  %inc242.1 = add i32 %bit_num_175.2.1, 1
  %cmp207.old.1 = icmp ult i32 %inc242.1, 64
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  br i1 %cmp207.old.1, label %for.body208.1, label %if.end244.1

if.end244.1:                                      ; preds = %if.end236.1, %for.inc241.1, %if.end244
  %next249 = getelementptr inbounds %struct.bitmap_element_def* %ptr_170.1401, i64 0, i32 0
  %161 = load %struct.bitmap_element_def** %next249, align 8, !tbaa !52
  %cmp194 = icmp eq %struct.bitmap_element_def* %161, null
  br i1 %cmp194, label %if.end252, label %for.cond196.preheader

for.body136.1:                                    ; preds = %if.end160, %for.inc157.1
  %indvars.iv427.1 = phi i64 [ %indvars.iv.next428.1, %for.inc157.1 ], [ 0, %if.end160 ]
  %bit_num_111.2.1 = phi i32 [ %inc158.1, %for.inc157.1 ], [ 0, %if.end160 ]
  %word_129.0.1 = phi i64 [ %word_129.1.1, %for.inc157.1 ], [ %139, %if.end160 ]
  %shl139.1 = shl i64 1, %indvars.iv427.1
  %and140.1 = and i64 %shl139.1, %word_129.0.1
  %cmp141.1 = icmp eq i64 %and140.1, 0
  br i1 %cmp141.1, label %for.inc157.1, label %if.then142.1

if.then142.1:                                     ; preds = %for.body136.1
  %neg143.1 = xor i64 %shl139.1, -1
  %and144.1 = and i64 %word_129.0.1, %neg143.1
  %162 = load i32* %indx145, align 4, !tbaa !47
  %mul146.1 = shl i32 %162, 7
  %163 = trunc i64 %indvars.iv427.1 to i32
  %add148.1 = add i32 %163, 64
  %add149.1 = add i32 %add148.1, %mul146.1
  %idxprom150.1 = sext i32 %add149.1 to i64
  %arrayidx152.1 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom150.1
  %164 = load %struct.reg_info_def** %arrayidx152.1, align 8, !tbaa !5
  %basic_block.1 = getelementptr inbounds %struct.reg_info_def* %164, i64 0, i32 9
  store i32 -2, i32* %basic_block.1, align 4, !tbaa !22
  %cmp153.1 = icmp eq i64 %and144.1, 0
  br i1 %cmp153.1, label %if.end160.1, label %for.inc157.1

for.inc157.1:                                     ; preds = %if.then142.1, %for.body136.1
  %word_129.1.1 = phi i64 [ %and144.1, %if.then142.1 ], [ %word_129.0.1, %for.body136.1 ]
  %inc158.1 = add i32 %bit_num_111.2.1, 1
  %cmp135.old.1 = icmp ult i32 %inc158.1, 64
  %indvars.iv.next428.1 = add nuw nsw i64 %indvars.iv427.1, 1
  br i1 %cmp135.old.1, label %for.body136.1, label %if.end160.1

if.end160.1:                                      ; preds = %if.then142.1, %for.inc157.1, %if.end160
  %next165 = getelementptr inbounds %struct.bitmap_element_def* %ptr_108.1406, i64 0, i32 0
  %165 = load %struct.bitmap_element_def** %next165, align 8, !tbaa !52
  %cmp123 = icmp eq %struct.bitmap_element_def* %165, null
  br i1 %cmp123, label %do.body168, label %for.cond125.preheader
}

declare void @end_alias_analysis() #1

declare void @dump_flow_info(%struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define void @free_basic_block_vars(i32 %keep_head_end_p) #0 {
entry:
  %tobool = icmp eq i32 %keep_head_end_p, 0
  br i1 %tobool, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %0 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %tobool1 = icmp eq %struct.varray_head_tag* %0, null
  br i1 %tobool1, label %if.end5, label %if.then2

if.then2:                                         ; preds = %if.then
  tail call void @clear_edges() #3
  %1 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %tobool3 = icmp eq %struct.varray_head_tag* %1, null
  br i1 %tobool3, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.then2
  %2 = bitcast %struct.varray_head_tag* %1 to i8*
  tail call void @free(i8* %2)
  store %struct.varray_head_tag* null, %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.then, %if.then4
  store i32 0, i32* @n_basic_blocks, align 4, !tbaa !1
  store i8* null, i8** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 10), align 8, !tbaa !35
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1, i32 8), align 8, !tbaa !23
  call void @llvm.memset.p0i8.i64(i8* bitcast (%struct.bitmap_head_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 9) to i8*), i8 0, i64 16, i32 8, i1 false)
  br label %if.end6

if.end6:                                          ; preds = %entry, %if.end5
  ret void
}

declare %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def*) #1

declare void @timevar_push(i32) #1

declare void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #1

; Function Attrs: nounwind uwtable
define i32 @propagate_block(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %local_set, %struct.bitmap_head_def* %cond_local_set, i32 %flags) #0 {
entry:
  %call = tail call %struct.propagate_block_info* @init_propagate_block_info(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %local_set, %struct.bitmap_head_def* %cond_local_set, i32 %flags)
  %and = and i32 %flags, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %do.body, label %if.end35

do.body:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.bitmap_head_def* %live, i64 0, i32 0
  %ptr_.189 = load %struct.bitmap_element_def** %first, align 8
  %cmp690 = icmp eq %struct.bitmap_element_def* %ptr_.189, null
  br i1 %cmp690, label %if.end35, label %for.cond7.preheader.lr.ph

for.cond7.preheader.lr.ph:                        ; preds = %do.body
  %.pre = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond7.preheader.lr.ph, %if.end28.1
  %ptr_.191 = phi %struct.bitmap_element_def* [ %ptr_.189, %for.cond7.preheader.lr.ph ], [ %ptr_.1, %if.end28.1 ]
  %indx19 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.191, i64 0, i32 2
  %data = getelementptr inbounds %struct.varray_head_tag* %.pre, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def* %ptr_.191, i64 0, i32 3, i64 0
  %0 = load i64* %arrayidx, align 8, !tbaa !14
  %cmp10 = icmp eq i64 %0, 0
  br i1 %cmp10, label %if.end28, label %for.body14

for.body14:                                       ; preds = %for.cond7.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond7.preheader ]
  %word_.0 = phi i64 [ %word_.1, %for.inc ], [ %0, %for.cond7.preheader ]
  %shl = shl i64 1, %indvars.iv
  %and15 = and i64 %shl, %word_.0
  %cmp16 = icmp eq i64 %and15, 0
  br i1 %cmp16, label %for.inc, label %if.then17

if.then17:                                        ; preds = %for.body14
  %neg = xor i64 %shl, -1
  %and18 = and i64 %word_.0, %neg
  %1 = load i32* %indx19, align 4, !tbaa !47
  %mul = shl i32 %1, 7
  %2 = trunc i64 %indvars.iv to i32
  %add21 = add i32 %2, %mul
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom22
  %3 = load %struct.reg_info_def** %arrayidx23, align 8, !tbaa !5
  %basic_block = getelementptr inbounds %struct.reg_info_def* %3, i64 0, i32 9
  store i32 -2, i32* %basic_block, align 4, !tbaa !22
  %cmp24 = icmp eq i64 %and18, 0
  br i1 %cmp24, label %if.end28, label %for.inc

for.inc:                                          ; preds = %for.body14, %if.then17
  %word_.1 = phi i64 [ %and18, %if.then17 ], [ %word_.0, %for.body14 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %4 = trunc i64 %indvars.iv.next to i32
  %cmp13.old = icmp ult i32 %4, 64
  br i1 %cmp13.old, label %for.body14, label %if.end28

if.end28:                                         ; preds = %for.inc, %if.then17, %for.cond7.preheader
  %arrayidx.1 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.191, i64 0, i32 3, i64 1
  %5 = load i64* %arrayidx.1, align 8, !tbaa !14
  %cmp10.1 = icmp eq i64 %5, 0
  br i1 %cmp10.1, label %if.end28.1, label %for.body14.1

if.end35:                                         ; preds = %if.end28.1, %do.body, %entry
  %end = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 1
  %6 = load %struct.rtx_def** %end, align 8, !tbaa !24
  %reg_live = getelementptr inbounds %struct.propagate_block_info* %call, i64 0, i32 1
  %head = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 0
  br label %for.cond36

for.cond36:                                       ; preds = %if.end46, %if.end35
  %changed.0 = phi i32 [ 0, %if.end35 ], [ %or, %if.end46 ]
  %insn.0 = phi %struct.rtx_def* [ %6, %if.end35 ], [ %call47, %if.end46 ]
  br i1 %tobool, label %land.lhs.true39, label %if.end46

land.lhs.true39:                                  ; preds = %for.cond36
  %7 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 0
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp40 = icmp eq i32 %bf.clear, 34
  br i1 %cmp40, label %land.lhs.true41, label %if.end46

land.lhs.true41:                                  ; preds = %land.lhs.true39
  %call42 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0, i32 28, %struct.rtx_def* null) #3
  %tobool43 = icmp eq %struct.rtx_def* %call42, null
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %land.lhs.true41
  %8 = load %struct.bitmap_head_def** @regs_live_at_setjmp, align 8, !tbaa !5
  %9 = load %struct.bitmap_head_def** %reg_live, align 8, !tbaa !53
  %call45 = tail call i32 @bitmap_operation(%struct.bitmap_head_def* %8, %struct.bitmap_head_def* %8, %struct.bitmap_head_def* %9, i32 2) #3
  br label %if.end46

if.end46:                                         ; preds = %land.lhs.true41, %if.then44, %land.lhs.true39, %for.cond36
  %call47 = tail call %struct.rtx_def* @propagate_one_insn(%struct.propagate_block_info* %call, %struct.rtx_def* %insn.0)
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %call47, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp49 = icmp ne %struct.rtx_def* %10, %insn.0
  %conv = zext i1 %cmp49 to i32
  %or = or i32 %conv, %changed.0
  %11 = load %struct.rtx_def** %head, align 8, !tbaa !12
  %cmp50 = icmp eq %struct.rtx_def* %insn.0, %11
  br i1 %cmp50, label %for.end55, label %for.cond36

for.end55:                                        ; preds = %if.end46
  %mem_set_list.i = getelementptr inbounds %struct.propagate_block_info* %call, i64 0, i32 4
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** %mem_set_list.i) #3
  %new_set.i = getelementptr inbounds %struct.propagate_block_info* %call, i64 0, i32 2
  %12 = load %struct.bitmap_head_def** %new_set.i, align 8, !tbaa !55
  %tobool.i = icmp eq %struct.bitmap_head_def* %12, null
  br i1 %tobool.i, label %do.end.i, label %if.then.i

if.then.i:                                        ; preds = %for.end55
  tail call void @bitmap_clear(%struct.bitmap_head_def* %12) #3
  %13 = load %struct.bitmap_head_def** %new_set.i, align 8, !tbaa !55
  %14 = bitcast %struct.bitmap_head_def* %13 to i8*
  tail call void @free(i8* %14) #3
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %new_set.i, align 8, !tbaa !55
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %for.end55
  %reg_next_use.i = getelementptr inbounds %struct.propagate_block_info* %call, i64 0, i32 3
  %15 = load %struct.rtx_def*** %reg_next_use.i, align 8, !tbaa !56
  %tobool4.i = icmp eq %struct.rtx_def** %15, null
  br i1 %tobool4.i, label %free_propagate_block_info.exit, label %if.then5.i

if.then5.i:                                       ; preds = %do.end.i
  %16 = bitcast %struct.rtx_def** %15 to i8*
  tail call void @free(i8* %16) #3
  br label %free_propagate_block_info.exit

free_propagate_block_info.exit:                   ; preds = %do.end.i, %if.then5.i
  %17 = bitcast %struct.propagate_block_info* %call to i8*
  tail call void @free(i8* %17) #3
  ret i32 %or

for.body14.1:                                     ; preds = %if.end28, %for.inc.1
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc.1 ], [ 0, %if.end28 ]
  %word_.0.1 = phi i64 [ %word_.1.1, %for.inc.1 ], [ %5, %if.end28 ]
  %shl.1 = shl i64 1, %indvars.iv.1
  %and15.1 = and i64 %shl.1, %word_.0.1
  %cmp16.1 = icmp eq i64 %and15.1, 0
  br i1 %cmp16.1, label %for.inc.1, label %if.then17.1

if.then17.1:                                      ; preds = %for.body14.1
  %neg.1 = xor i64 %shl.1, -1
  %and18.1 = and i64 %word_.0.1, %neg.1
  %18 = load i32* %indx19, align 4, !tbaa !47
  %mul.1 = shl i32 %18, 7
  %19 = add i64 %indvars.iv.1, 64
  %20 = trunc i64 %19 to i32
  %add21.1 = add i32 %20, %mul.1
  %idxprom22.1 = sext i32 %add21.1 to i64
  %arrayidx23.1 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom22.1
  %21 = load %struct.reg_info_def** %arrayidx23.1, align 8, !tbaa !5
  %basic_block.1 = getelementptr inbounds %struct.reg_info_def* %21, i64 0, i32 9
  store i32 -2, i32* %basic_block.1, align 4, !tbaa !22
  %cmp24.1 = icmp eq i64 %and18.1, 0
  br i1 %cmp24.1, label %if.end28.1, label %for.inc.1

for.inc.1:                                        ; preds = %if.then17.1, %for.body14.1
  %word_.1.1 = phi i64 [ %and18.1, %if.then17.1 ], [ %word_.0.1, %for.body14.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %22 = trunc i64 %indvars.iv.next.1 to i32
  %cmp13.old.1 = icmp ult i32 %22, 64
  br i1 %cmp13.old.1, label %for.body14.1, label %if.end28.1

if.end28.1:                                       ; preds = %if.then17.1, %for.inc.1, %if.end28
  %next33 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.191, i64 0, i32 0
  %ptr_.1 = load %struct.bitmap_element_def** %next33, align 8
  %cmp6 = icmp eq %struct.bitmap_element_def* %ptr_.1, null
  br i1 %cmp6, label %if.end35, label %for.cond7.preheader
}

declare zeroext i1 @cleanup_cfg(i32) #1

; Function Attrs: nounwind uwtable
define i32 @count_or_remove_death_notes(%struct.simple_bitmap_def* readonly %blocks, i32 %kill) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %tobool = icmp eq %struct.simple_bitmap_def* %blocks, null
  %tobool134 = icmp eq i32 %kill, 0
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %if.end143, %entry
  %count.0.ph = phi i32 [ 0, %entry ], [ %count.5, %if.end143 ]
  %i.0.in.ph = phi i32 [ %0, %entry ], [ %i.0, %if.end143 ]
  br label %for.cond

for.cond:                                         ; preds = %for.cond.outer, %land.lhs.true
  %i.0.in = phi i32 [ %i.0, %land.lhs.true ], [ %i.0.in.ph, %for.cond.outer ]
  %i.0 = add nsw i32 %i.0.in, -1
  %cmp = icmp sgt i32 %i.0.in, 0
  br i1 %cmp, label %for.body, label %for.end152

for.body:                                         ; preds = %for.cond
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %div = lshr i32 %i.0, 6
  %idxprom = zext i32 %div to i64
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def* %blocks, i64 0, i32 3, i64 %idxprom
  %1 = load i64* %arrayidx, align 8, !tbaa !14
  %rem = and i32 %i.0, 63
  %sh_prom = zext i32 %rem to i64
  %2 = shl i64 1, %sh_prom
  %and187 = and i64 %1, %2
  %tobool1 = icmp eq i64 %and187, 0
  br i1 %tobool1, label %for.cond, label %if.end

if.end:                                           ; preds = %land.lhs.true, %for.body
  %idxprom2 = sext i32 %i.0 to i64
  %3 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 4
  %bb3 = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx4 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb3, i64 0, i64 %idxprom2
  %4 = load %struct.basic_block_def** %arrayidx4, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 0
  %end = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 1
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %if.end
  %insn.0.in = phi %struct.rtx_def** [ %head, %if.end ], [ %rtx150, %for.inc ]
  %count.1 = phi i32 [ %count.0.ph, %if.end ], [ %count.5, %for.inc ]
  %insn.0 = load %struct.rtx_def** %insn.0.in, align 8
  %5 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 0
  %bf.load = load i32* %5, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom6184 = zext i32 %bf.clear to i64
  %arrayidx7 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom6184
  %6 = load i8* %arrayidx7, align 1, !tbaa !15
  %cmp8 = icmp eq i8 %6, 105
  br i1 %cmp8, label %if.then10, label %if.end143

if.then10:                                        ; preds = %for.cond5
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %tobool12198202 = icmp eq %struct.rtx_def* %7, null
  br i1 %tobool12198202, label %if.end143, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.then10, %sw.default
  %count.2.ph205 = phi i32 [ %count.4, %sw.default ], [ %count.1, %if.then10 ]
  %link.0.ph204 = phi %struct.rtx_def* [ %26, %sw.default ], [ %7, %if.then10 ]
  %pprev.0.ph203 = phi %struct.rtx_def** [ %rtx142, %sw.default ], [ %rtx, %if.then10 ]
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.then135
  %count.2200 = phi i32 [ %count.2.ph205, %while.body.lr.ph ], [ %count.3, %if.then135 ]
  %link.0199 = phi %struct.rtx_def* [ %link.0.ph204, %while.body.lr.ph ], [ %25, %if.then135 ]
  %8 = getelementptr inbounds %struct.rtx_def* %link.0199, i64 0, i32 0
  %bf.load13 = load i32* %8, align 8
  %bf.lshr = lshr i32 %bf.load13, 16
  %bf.clear14 = and i32 %bf.lshr, 255
  switch i32 %bf.clear14, label %sw.default [
    i32 1, label %sw.bb
    i32 10, label %sw.bb133
  ]

sw.bb:                                            ; preds = %while.body
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %link.0199, i64 0, i32 1, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx17, align 8, !tbaa !5
  %10 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 0
  %bf.load18 = load i32* %10, align 8
  %bf.clear19 = and i32 %bf.load18, 65535
  %cmp20 = icmp eq i32 %bf.clear19, 61
  br i1 %cmp20, label %if.then22, label %sw.bb133

if.then22:                                        ; preds = %sw.bb
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx27 to i32*
  %11 = load i32* %rtuint, align 4, !tbaa !1
  %cmp28 = icmp ugt i32 %11, 52
  br i1 %cmp28, label %if.end130, label %if.else

if.else:                                          ; preds = %if.then22
  %12 = and i32 %11, -8
  %13 = icmp eq i32 %12, 8
  %cmp57 = icmp ugt i32 %11, 44
  %or.cond = or i1 %13, %cmp57
  %.off = add i32 %11, -21
  %switch = icmp ult i32 %.off, 16
  %or.cond194 = or i1 %or.cond, %switch
  %bf.lshr78 = lshr i32 %bf.load18, 16
  %bf.clear79 = and i32 %bf.lshr78, 255
  br i1 %or.cond194, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %idxprom80186 = zext i32 %bf.clear79 to i64
  %arrayidx81 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom80186
  %14 = load i32* %arrayidx81, align 4, !tbaa !15
  %cmp82 = icmp eq i32 %14, 5
  br i1 %cmp82, label %if.end130, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp89 = icmp eq i32 %14, 6
  %phitmp = select i1 %cmp89, i32 2, i32 1
  br label %if.end130

cond.false:                                       ; preds = %if.else
  switch i32 %bf.clear79, label %cond.false110 [
    i32 18, label %cond.true96
    i32 24, label %cond.true106
  ]

cond.true96:                                      ; preds = %cond.false
  %15 = load i32* @target_flags, align 4, !tbaa !1
  %and97 = lshr i32 %15, 25
  %16 = and i32 %and97, 1
  %17 = xor i32 %16, 3
  br label %if.end130

cond.true106:                                     ; preds = %cond.false
  %18 = load i32* @target_flags, align 4, !tbaa !1
  %and107 = lshr i32 %18, 24
  %19 = and i32 %and107, 2
  %20 = xor i32 %19, 6
  br label %if.end130

cond.false110:                                    ; preds = %cond.false
  %idxprom114185 = zext i32 %bf.clear79 to i64
  %arrayidx115 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom114185
  %21 = load i8* %arrayidx115, align 1, !tbaa !15
  %conv116 = zext i8 %21 to i32
  %22 = load i32* @target_flags, align 4, !tbaa !1
  %and117 = lshr i32 %22, 23
  %23 = and i32 %and117, 4
  %24 = add i32 %23, 4
  %add = add i32 %conv116, -1
  %sub120 = add i32 %add, %24
  %div124 = sdiv i32 %sub120, %24
  br label %if.end130

if.end130:                                        ; preds = %cond.true106, %cond.false110, %cond.true96, %lor.rhs, %cond.true, %if.then22
  %n.0 = phi i32 [ 1, %if.then22 ], [ %17, %cond.true96 ], [ %20, %cond.true106 ], [ %div124, %cond.false110 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ]
  %add131 = add nsw i32 %n.0, %count.2200
  br label %sw.bb133

sw.bb133:                                         ; preds = %sw.bb, %if.end130, %while.body
  %count.3 = phi i32 [ %count.2200, %while.body ], [ %add131, %if.end130 ], [ %count.2200, %sw.bb ]
  br i1 %tobool134, label %sw.default, label %if.then135

if.then135:                                       ; preds = %sw.bb133
  %arrayidx137 = getelementptr inbounds %struct.rtx_def* %link.0199, i64 0, i32 1, i64 1
  %rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx138, align 8, !tbaa !5
  tail call void @free_EXPR_LIST_node(%struct.rtx_def* %link.0199) #3
  store %struct.rtx_def* %25, %struct.rtx_def** %pprev.0.ph203, align 8, !tbaa !5
  %tobool12 = icmp eq %struct.rtx_def* %25, null
  br i1 %tobool12, label %if.end143, label %while.body

sw.default:                                       ; preds = %sw.bb133, %while.body
  %count.4 = phi i32 [ %count.2200, %while.body ], [ %count.3, %sw.bb133 ]
  %arrayidx141 = getelementptr inbounds %struct.rtx_def* %link.0199, i64 0, i32 1, i64 1
  %rtx142 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx142, align 8, !tbaa !5
  %tobool12198 = icmp eq %struct.rtx_def* %26, null
  br i1 %tobool12198, label %if.end143, label %while.body.lr.ph

if.end143:                                        ; preds = %sw.default, %if.then135, %if.then10, %for.cond5
  %count.5 = phi i32 [ %count.1, %for.cond5 ], [ %count.1, %if.then10 ], [ %count.3, %if.then135 ], [ %count.4, %sw.default ]
  %27 = load %struct.rtx_def** %end, align 8, !tbaa !24
  %cmp144 = icmp eq %struct.rtx_def* %insn.0, %27
  br i1 %cmp144, label %for.cond.outer, label %for.inc

for.inc:                                          ; preds = %if.end143
  %arrayidx149 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 2
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  br label %for.cond5

for.end152:                                       ; preds = %for.cond
  ret i32 %count.0.ph
}

; Function Attrs: nounwind uwtable
define internal fastcc void @verify_local_live_at_start(%struct.bitmap_head_def* %new_live_at_start, %struct.basic_block_def* %bb) #0 {
entry:
  %regno.addr.i = alloca i32, align 4
  %0 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool = icmp eq i32 %0, 0
  %global_live_at_start8 = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 8
  %1 = load %struct.bitmap_head_def** %global_live_at_start8, align 8, !tbaa !23
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @bitmap_equal_p(%struct.bitmap_head_def* %new_live_at_start, %struct.bitmap_head_def* %1) #3
  %tobool1 = icmp eq i32 %call, 0
  br i1 %tobool1, label %if.then2, label %if.end51

if.then2:                                         ; preds = %if.then
  %2 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool3 = icmp eq %struct._IO_FILE* %2, null
  br i1 %tobool3, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then2
  %index = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 11
  %3 = load i32* %index, align 4, !tbaa !43
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([48 x i8]* @.str9, i64 0, i64 0), i32 %3) #3
  %4 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  call void @debug_bitmap_file(%struct._IO_FILE* %4, %struct.bitmap_head_def* %new_live_at_start) #3
  %5 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %6 = call i64 @fwrite(i8* getelementptr inbounds ([6 x i8]* @.str10, i64 0, i64 0), i64 5, i64 1, %struct._IO_FILE* %5)
  %7 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  call void @dump_bb(%struct.basic_block_def* %bb, %struct._IO_FILE* %7) #3
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then4
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i32 583, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.verify_local_live_at_start, i64 0, i64 0)) #6
  unreachable

if.else:                                          ; preds = %entry
  %call9 = call i32 @bitmap_operation(%struct.bitmap_head_def* %new_live_at_start, %struct.bitmap_head_def* %new_live_at_start, %struct.bitmap_head_def* %1, i32 3) #3
  %first = getelementptr inbounds %struct.bitmap_head_def* %new_live_at_start, i64 0, i32 0
  %ptr_.184 = load %struct.bitmap_element_def** %first, align 8
  %cmp1685 = icmp eq %struct.bitmap_element_def* %ptr_.184, null
  br i1 %cmp1685, label %if.end51, label %for.cond17.preheader.lr.ph

for.cond17.preheader.lr.ph:                       ; preds = %if.else
  %8 = bitcast i32* %regno.addr.i to i8*
  %head1.i = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 0
  %end2.i = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 1
  br label %for.cond17.preheader

for.cond17.preheader:                             ; preds = %for.cond17.preheader.lr.ph, %for.end47
  %ptr_.186 = phi %struct.bitmap_element_def* [ %ptr_.184, %for.cond17.preheader.lr.ph ], [ %ptr_.1, %for.end47 ]
  %indx28 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.186, i64 0, i32 2
  br label %for.body19

for.body19:                                       ; preds = %for.cond17.preheader, %if.end44
  %indvars.iv89 = phi i64 [ 0, %for.cond17.preheader ], [ %indvars.iv.next90, %if.end44 ]
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def* %ptr_.186, i64 0, i32 3, i64 %indvars.iv89
  %9 = load i64* %arrayidx, align 8, !tbaa !14
  %cmp20 = icmp eq i64 %9, 0
  br i1 %cmp20, label %if.end44, label %for.body24.preheader

for.body24.preheader:                             ; preds = %for.body19
  %10 = shl i64 %indvars.iv89, 6
  br label %for.body24

for.body24:                                       ; preds = %for.body24.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body24.preheader ], [ %indvars.iv.next, %for.inc ]
  %word_.0 = phi i64 [ %9, %for.body24.preheader ], [ %word_.1, %for.inc ]
  %shl = shl i64 1, %indvars.iv
  %and = and i64 %shl, %word_.0
  %cmp25 = icmp eq i64 %and, 0
  br i1 %cmp25, label %for.inc, label %if.then26

if.then26:                                        ; preds = %for.body24
  %neg = xor i64 %shl, -1
  %and27 = and i64 %word_.0, %neg
  %11 = load i32* %indx28, align 4, !tbaa !47
  %mul = shl i32 %11, 7
  %12 = add i64 %indvars.iv, %10
  %13 = trunc i64 %12 to i32
  %add30 = add i32 %13, %mul
  %14 = load %struct.bitmap_head_def** %global_live_at_start8, align 8, !tbaa !23
  %call32 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %14, i32 %add30) #3
  %tobool33 = icmp eq i32 %call32, 0
  br i1 %tobool33, label %if.end39, label %if.then34

if.then34:                                        ; preds = %if.then26
  %15 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool35 = icmp eq %struct._IO_FILE* %15, null
  br i1 %tobool35, label %if.end38, label %if.then36

if.then36:                                        ; preds = %if.then34
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([32 x i8]* @.str11, i64 0, i64 0), i32 %add30) #3
  %16 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  call void @dump_bb(%struct.basic_block_def* %bb, %struct._IO_FILE* %16) #3
  br label %if.end38

if.end38:                                         ; preds = %if.then34, %if.then36
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i32 604, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.verify_local_live_at_start, i64 0, i64 0)) #6
  unreachable

if.end39:                                         ; preds = %if.then26
  call void @llvm.lifetime.start(i64 4, i8* %8) #3
  store i32 %add30, i32* %regno.addr.i, align 4, !tbaa !1
  %17 = load %struct.rtx_def** %end2.i, align 8, !tbaa !24
  br label %while.body.i

while.body.i:                                     ; preds = %if.end16.i, %if.end39
  %head.0.in.i = phi %struct.rtx_def** [ %head1.i, %if.end39 ], [ %rtx19.i, %if.end16.i ]
  %head.0.i = load %struct.rtx_def** %head.0.in.i, align 8
  %18 = getelementptr inbounds %struct.rtx_def* %head.0.i, i64 0, i32 0
  %bf.load.i = load i32* %18, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom29.i = zext i32 %bf.clear.i to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom29.i
  %19 = load i8* %arrayidx.i, align 1, !tbaa !15
  %cmp.i = icmp eq i8 %19, 105
  br i1 %cmp.i, label %if.then.i, label %if.end12.i

if.then.i:                                        ; preds = %while.body.i
  %arrayidx4.i = getelementptr inbounds %struct.rtx_def* %head.0.i, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx4.i to %struct.rtx_def**
  %call.i = call i32 @for_each_rtx(%struct.rtx_def** %rtx.i, i32 (%struct.rtx_def**, i8*)* @verify_wide_reg_1, i8* %8) #3
  switch i32 %call.i, label %if.end12.i [
    i32 1, label %verify_wide_reg.exit
    i32 2, label %while.end.i
  ]

if.end12.i:                                       ; preds = %if.then.i, %while.body.i
  %cmp13.i = icmp eq %struct.rtx_def* %head.0.i, %17
  br i1 %cmp13.i, label %while.end.i, label %if.end16.i

if.end16.i:                                       ; preds = %if.end12.i
  %arrayidx18.i = getelementptr inbounds %struct.rtx_def* %head.0.i, i64 0, i32 1, i64 2
  %rtx19.i = bitcast %union.rtunion_def* %arrayidx18.i to %struct.rtx_def**
  br label %while.body.i

while.end.i:                                      ; preds = %if.end12.i, %if.then.i
  %20 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  %tobool.i = icmp eq %struct._IO_FILE* %20, null
  br i1 %tobool.i, label %if.end22.i, label %if.then20.i

if.then20.i:                                      ; preds = %while.end.i
  %21 = load i32* %regno.addr.i, align 4, !tbaa !1
  %call21.i = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([32 x i8]* @.str11, i64 0, i64 0), i32 %21) #3
  %22 = load %struct._IO_FILE** @rtl_dump_file, align 8, !tbaa !5
  call void @dump_bb(%struct.basic_block_def* %bb, %struct._IO_FILE* %22) #3
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then20.i, %while.end.i
  call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i32 557, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.verify_wide_reg, i64 0, i64 0)) #6
  unreachable

verify_wide_reg.exit:                             ; preds = %if.then.i
  call void @llvm.lifetime.end(i64 4, i8* %8) #3
  %cmp40 = icmp eq i64 %and27, 0
  br i1 %cmp40, label %if.end44, label %for.inc

for.inc:                                          ; preds = %for.body24, %verify_wide_reg.exit
  %word_.1 = phi i64 [ %and27, %verify_wide_reg.exit ], [ %word_.0, %for.body24 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %23 = trunc i64 %indvars.iv.next to i32
  %cmp23.old = icmp ult i32 %23, 64
  br i1 %cmp23.old, label %for.body24, label %if.end44

if.end44:                                         ; preds = %for.inc, %verify_wide_reg.exit, %for.body19
  %indvars.iv.next90 = add nuw nsw i64 %indvars.iv89, 1
  %24 = trunc i64 %indvars.iv.next90 to i32
  %cmp18 = icmp ult i32 %24, 2
  br i1 %cmp18, label %for.body19, label %for.end47

for.end47:                                        ; preds = %if.end44
  %next49 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.186, i64 0, i32 0
  %ptr_.1 = load %struct.bitmap_element_def** %next49, align 8
  %cmp16 = icmp eq %struct.bitmap_element_def* %ptr_.1, null
  br i1 %cmp16, label %if.end51, label %for.cond17.preheader

if.end51:                                         ; preds = %for.end47, %if.else, %if.then
  ret void
}

declare void @bitmap_clear(%struct.bitmap_head_def*) #1

declare void @timevar_pop(i32) #1

declare void @clear_edges() #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) #4

declare i32 @noop_move_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @next_real_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_fmt_ue(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @initialize_uninitialized_subregs() #0 {
entry:
  %param = alloca %struct.find_regno_partial_param, align 8
  %i = alloca %struct.rtx_def*, align 8
  %e.0100 = load %struct.edge_def** getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 5), align 8
  %tobool101 = icmp eq %struct.edge_def* %e.0100, null
  br i1 %tobool101, label %if.end64, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %regno_to_find = getelementptr inbounds %struct.find_regno_partial_param* %param, i64 0, i32 0
  %0 = bitcast %struct.find_regno_partial_param* %param to i8*
  %retval37 = getelementptr inbounds %struct.find_regno_partial_param* %param, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc60
  %e.0103 = phi %struct.edge_def* [ %e.0100, %for.body.lr.ph ], [ %e.0, %for.inc60 ]
  %did_something.0102 = phi i32 [ 0, %for.body.lr.ph ], [ %did_something.1.lcssa, %for.inc60 ]
  %dest = getelementptr inbounds %struct.edge_def* %e.0103, i64 0, i32 3
  %1 = load %struct.basic_block_def** %dest, align 8, !tbaa !37
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 8
  %2 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !23
  %first = getelementptr inbounds %struct.bitmap_head_def* %2, i64 0, i32 0
  %3 = load %struct.bitmap_element_def** %first, align 8, !tbaa !45
  %cmp = icmp eq %struct.bitmap_element_def* %3, null
  br i1 %cmp, label %for.inc60, label %for.cond8.preheader.lr.ph

for.cond8.preheader.lr.ph:                        ; preds = %for.body
  %indx3 = getelementptr inbounds %struct.bitmap_element_def* %3, i64 0, i32 2
  %4 = load i32* %indx3, align 4, !tbaa !47
  %cmp4 = icmp eq i32 %4, 0
  %. = select i1 %cmp4, i32 53, i32 0
  br label %for.cond8.preheader

for.cond8.preheader:                              ; preds = %for.cond8.preheader.lr.ph, %if.end53.1
  %did_something.199 = phi i32 [ %did_something.0102, %for.cond8.preheader.lr.ph ], [ %did_something.6.1, %if.end53.1 ]
  %bit_num_.098 = phi i32 [ %., %for.cond8.preheader.lr.ph ], [ 0, %if.end53.1 ]
  %ptr_.197 = phi %struct.bitmap_element_def* [ %3, %for.cond8.preheader.lr.ph ], [ %28, %if.end53.1 ]
  %indx19 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.197, i64 0, i32 2
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def* %ptr_.197, i64 0, i32 3, i64 0
  %5 = load i64* %arrayidx, align 8, !tbaa !14
  %cmp11 = icmp eq i64 %5, 0
  br i1 %cmp11, label %if.end53, label %for.body15.preheader

for.body15.preheader:                             ; preds = %for.cond8.preheader
  %6 = zext i32 %bit_num_.098 to i64
  br label %for.body15

for.body15:                                       ; preds = %for.body15.preheader, %for.inc51
  %indvars.iv = phi i64 [ %6, %for.body15.preheader ], [ %indvars.iv.next, %for.inc51 ]
  %bit_num_.2 = phi i32 [ %bit_num_.098, %for.body15.preheader ], [ %inc, %for.inc51 ]
  %word_.0 = phi i64 [ %5, %for.body15.preheader ], [ %word_.1, %for.inc51 ]
  %did_something.3 = phi i32 [ %did_something.199, %for.body15.preheader ], [ %did_something.5, %for.inc51 ]
  %shl = shl i64 1, %indvars.iv
  %and = and i64 %shl, %word_.0
  %cmp16 = icmp eq i64 %and, 0
  br i1 %cmp16, label %for.inc51, label %if.then17

if.then17:                                        ; preds = %for.body15
  %neg = xor i64 %shl, -1
  %and18 = and i64 %word_.0, %neg
  %7 = load i32* %indx19, align 4, !tbaa !47
  %mul = shl i32 %7, 7
  %8 = trunc i64 %indvars.iv to i32
  %add21 = add i32 %8, %mul
  %idxprom22 = sext i32 %add21 to i64
  %9 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %9, i64 0, i32 4
  %reg23 = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx24 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg23, i64 0, i64 %idxprom22
  %10 = load %struct.reg_info_def** %arrayidx24, align 8, !tbaa !5
  %first_uid = getelementptr inbounds %struct.reg_info_def* %10, i64 0, i32 0
  %11 = load i32* %first_uid, align 4, !tbaa !57
  %call = call %struct.rtx_def* @get_insns() #3
  store %struct.rtx_def* %call, %struct.rtx_def** %i, align 8, !tbaa !5
  %tobool2691 = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool2691, label %if.end46, label %land.rhs27

land.rhs27:                                       ; preds = %if.then17, %for.inc
  %.pr = phi %struct.rtx_def* [ %13, %for.inc ], [ %call, %if.then17 ]
  %fld = getelementptr inbounds %struct.rtx_def* %.pr, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %12 = load i32* %rtint, align 4, !tbaa !1
  %cmp29 = icmp eq i32 %12, %11
  br i1 %cmp29, label %if.then35, label %for.inc

for.inc:                                          ; preds = %land.rhs27
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %.pr, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  store %struct.rtx_def* %13, %struct.rtx_def** %i, align 8, !tbaa !5
  %tobool26 = icmp eq %struct.rtx_def* %13, null
  br i1 %tobool26, label %if.end46, label %land.rhs27

if.then35:                                        ; preds = %land.rhs27
  store i32 %add21, i32* %regno_to_find, align 8, !tbaa !58
  %call36 = call i32 @for_each_rtx(%struct.rtx_def** %i, i32 (%struct.rtx_def**, i8*)* @find_regno_partial, i8* %0) #3
  %14 = load %struct.rtx_def** %retval37, align 8, !tbaa !60
  %cmp38 = icmp eq %struct.rtx_def* %14, null
  br i1 %cmp38, label %if.end46, label %if.then39

if.then39:                                        ; preds = %if.then35
  %15 = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load = load i32* %15, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %idxprom4289 = zext i32 %bf.clear to i64
  %arrayidx43 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom4289
  %16 = load %struct.rtx_def** %arrayidx43, align 8, !tbaa !5
  %call44 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %14, %struct.rtx_def* %16) #3
  call void @insert_insn_on_edge(%struct.rtx_def* %call44, %struct.edge_def* %e.0103) #3
  br label %if.end46

if.end46:                                         ; preds = %for.inc, %if.then17, %if.then35, %if.then39
  %did_something.4 = phi i32 [ 1, %if.then39 ], [ %did_something.3, %if.then35 ], [ %did_something.3, %if.then17 ], [ %did_something.3, %for.inc ]
  %cmp47 = icmp eq i64 %and18, 0
  br i1 %cmp47, label %if.end53, label %for.inc51

for.inc51:                                        ; preds = %for.body15, %if.end46
  %word_.1 = phi i64 [ %and18, %if.end46 ], [ %word_.0, %for.body15 ]
  %did_something.5 = phi i32 [ %did_something.4, %if.end46 ], [ %did_something.3, %for.body15 ]
  %inc = add i32 %bit_num_.2, 1
  %cmp14.old = icmp ult i32 %inc, 64
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp14.old, label %for.body15, label %if.end53

if.end53:                                         ; preds = %for.inc51, %if.end46, %for.cond8.preheader
  %did_something.6 = phi i32 [ %did_something.199, %for.cond8.preheader ], [ %did_something.5, %for.inc51 ], [ %did_something.4, %if.end46 ]
  %arrayidx.1 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.197, i64 0, i32 3, i64 1
  %17 = load i64* %arrayidx.1, align 8, !tbaa !14
  %cmp11.1 = icmp eq i64 %17, 0
  br i1 %cmp11.1, label %if.end53.1, label %for.body15.1

for.inc60:                                        ; preds = %if.end53.1, %for.body
  %did_something.1.lcssa = phi i32 [ %did_something.0102, %for.body ], [ %did_something.6.1, %if.end53.1 ]
  %succ_next = getelementptr inbounds %struct.edge_def* %e.0103, i64 0, i32 1
  %e.0 = load %struct.edge_def** %succ_next, align 8
  %tobool = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool, label %for.end61, label %for.body

for.end61:                                        ; preds = %for.inc60
  %tobool62 = icmp eq i32 %did_something.1.lcssa, 0
  br i1 %tobool62, label %if.end64, label %if.then63

if.then63:                                        ; preds = %for.end61
  call void @commit_edge_insertions() #3
  br label %if.end64

if.end64:                                         ; preds = %entry, %for.end61, %if.then63
  %did_something.0.lcssa112 = phi i32 [ 0, %for.end61 ], [ %did_something.1.lcssa, %if.then63 ], [ 0, %entry ]
  ret i32 %did_something.0.lcssa112

for.body15.1:                                     ; preds = %if.end53, %for.inc51.1
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc51.1 ], [ 0, %if.end53 ]
  %bit_num_.2.1 = phi i32 [ %inc.1, %for.inc51.1 ], [ 0, %if.end53 ]
  %word_.0.1 = phi i64 [ %word_.1.1, %for.inc51.1 ], [ %17, %if.end53 ]
  %did_something.3.1 = phi i32 [ %did_something.5.1, %for.inc51.1 ], [ %did_something.6, %if.end53 ]
  %shl.1 = shl i64 1, %indvars.iv.1
  %and.1 = and i64 %shl.1, %word_.0.1
  %cmp16.1 = icmp eq i64 %and.1, 0
  br i1 %cmp16.1, label %for.inc51.1, label %if.then17.1

if.then17.1:                                      ; preds = %for.body15.1
  %neg.1 = xor i64 %shl.1, -1
  %and18.1 = and i64 %word_.0.1, %neg.1
  %18 = load i32* %indx19, align 4, !tbaa !47
  %mul.1 = shl i32 %18, 7
  %19 = trunc i64 %indvars.iv.1 to i32
  %add.1 = add i32 %19, 64
  %add21.1 = add i32 %add.1, %mul.1
  %idxprom22.1 = sext i32 %add21.1 to i64
  %20 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data.1 = getelementptr inbounds %struct.varray_head_tag* %20, i64 0, i32 4
  %reg23.1 = bitcast %union.varray_data_tag* %data.1 to [1 x %struct.reg_info_def*]*
  %arrayidx24.1 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg23.1, i64 0, i64 %idxprom22.1
  %21 = load %struct.reg_info_def** %arrayidx24.1, align 8, !tbaa !5
  %first_uid.1 = getelementptr inbounds %struct.reg_info_def* %21, i64 0, i32 0
  %22 = load i32* %first_uid.1, align 4, !tbaa !57
  %call.1 = call %struct.rtx_def* @get_insns() #3
  store %struct.rtx_def* %call.1, %struct.rtx_def** %i, align 8, !tbaa !5
  %tobool2691.1 = icmp eq %struct.rtx_def* %call.1, null
  br i1 %tobool2691.1, label %if.end46.1, label %land.rhs27.1

land.rhs27.1:                                     ; preds = %if.then17.1, %for.inc.1
  %.pr.1 = phi %struct.rtx_def* [ %24, %for.inc.1 ], [ %call.1, %if.then17.1 ]
  %fld.1 = getelementptr inbounds %struct.rtx_def* %.pr.1, i64 0, i32 1
  %rtint.1 = bitcast [1 x %union.rtunion_def]* %fld.1 to i32*
  %23 = load i32* %rtint.1, align 4, !tbaa !1
  %cmp29.1 = icmp eq i32 %23, %22
  br i1 %cmp29.1, label %if.then35.1, label %for.inc.1

for.inc.1:                                        ; preds = %land.rhs27.1
  %arrayidx33.1 = getelementptr inbounds %struct.rtx_def* %.pr.1, i64 0, i32 1, i64 2
  %rtx.1 = bitcast %union.rtunion_def* %arrayidx33.1 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx.1, align 8, !tbaa !5
  store %struct.rtx_def* %24, %struct.rtx_def** %i, align 8, !tbaa !5
  %tobool26.1 = icmp eq %struct.rtx_def* %24, null
  br i1 %tobool26.1, label %if.end46.1, label %land.rhs27.1

if.then35.1:                                      ; preds = %land.rhs27.1
  store i32 %add21.1, i32* %regno_to_find, align 8, !tbaa !58
  %call36.1 = call i32 @for_each_rtx(%struct.rtx_def** %i, i32 (%struct.rtx_def**, i8*)* @find_regno_partial, i8* %0) #3
  %25 = load %struct.rtx_def** %retval37, align 8, !tbaa !60
  %cmp38.1 = icmp eq %struct.rtx_def* %25, null
  br i1 %cmp38.1, label %if.end46.1, label %if.then39.1

if.then39.1:                                      ; preds = %if.then35.1
  %26 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 0
  %bf.load.1 = load i32* %26, align 8
  %bf.lshr.1 = lshr i32 %bf.load.1, 16
  %bf.clear.1 = and i32 %bf.lshr.1, 255
  %idxprom4289.1 = zext i32 %bf.clear.1 to i64
  %arrayidx43.1 = getelementptr inbounds [3 x [59 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0, i64 %idxprom4289.1
  %27 = load %struct.rtx_def** %arrayidx43.1, align 8, !tbaa !5
  %call44.1 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %25, %struct.rtx_def* %27) #3
  call void @insert_insn_on_edge(%struct.rtx_def* %call44.1, %struct.edge_def* %e.0103) #3
  br label %if.end46.1

if.end46.1:                                       ; preds = %for.inc.1, %if.then17.1, %if.then39.1, %if.then35.1
  %did_something.4.1 = phi i32 [ 1, %if.then39.1 ], [ %did_something.3.1, %if.then35.1 ], [ %did_something.3.1, %if.then17.1 ], [ %did_something.3.1, %for.inc.1 ]
  %cmp47.1 = icmp eq i64 %and18.1, 0
  br i1 %cmp47.1, label %if.end53.1, label %for.inc51.1

for.inc51.1:                                      ; preds = %if.end46.1, %for.body15.1
  %word_.1.1 = phi i64 [ %and18.1, %if.end46.1 ], [ %word_.0.1, %for.body15.1 ]
  %did_something.5.1 = phi i32 [ %did_something.4.1, %if.end46.1 ], [ %did_something.3.1, %for.body15.1 ]
  %inc.1 = add i32 %bit_num_.2.1, 1
  %cmp14.old.1 = icmp ult i32 %inc.1, 64
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  br i1 %cmp14.old.1, label %for.body15.1, label %if.end53.1

if.end53.1:                                       ; preds = %if.end46.1, %for.inc51.1, %if.end53
  %did_something.6.1 = phi i32 [ %did_something.6, %if.end53 ], [ %did_something.4.1, %if.end46.1 ], [ %did_something.5.1, %for.inc51.1 ]
  %next58 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.197, i64 0, i32 0
  %28 = load %struct.bitmap_element_def** %next58, align 8, !tbaa !52
  %cmp6 = icmp eq %struct.bitmap_element_def* %28, null
  br i1 %cmp6, label %for.inc60, label %for.cond8.preheader
}

declare %struct.rtx_def* @get_insns() #1

declare i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @find_regno_partial(%struct.rtx_def** nocapture readonly %ptr, i8* nocapture %data) #0 {
entry:
  %regno_to_find = bitcast i8* %data to i32*
  %0 = load i32* %regno_to_find, align 4, !tbaa !58
  %retval1 = getelementptr inbounds i8* %data, i64 8
  %1 = bitcast i8* %retval1 to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %1, align 8, !tbaa !60
  %2 = load %struct.rtx_def** %ptr, align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %2, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load = load i32* %3, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 133, label %sw.bb
    i32 132, label %sw.bb
    i32 64, label %sw.bb
    i32 63, label %sw.bb17
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 0
  %bf.load2 = load i32* %5, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp4 = icmp eq i32 %bf.clear3, 61
  br i1 %cmp4, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %sw.bb
  %arrayidx9 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx9 to i32*
  %6 = load i32* %rtuint, align 4, !tbaa !1
  %cmp10 = icmp eq i32 %6, %0
  br i1 %cmp10, label %if.then11, label %return

if.then11:                                        ; preds = %land.lhs.true
  store %struct.rtx_def* %4, %struct.rtx_def** %1, align 8, !tbaa !60
  br label %return

sw.bb17:                                          ; preds = %if.end
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %7 = load %struct.rtx_def** %rtx20, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load21 = load i32* %8, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  %cmp23 = icmp eq i32 %bf.clear22, 61
  br i1 %cmp23, label %land.lhs.true24, label %return

land.lhs.true24:                                  ; preds = %sw.bb17
  %arrayidx29 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtuint30 = bitcast %union.rtunion_def* %arrayidx29 to i32*
  %9 = load i32* %rtuint30, align 4, !tbaa !1
  %cmp31 = icmp eq i32 %9, %0
  br i1 %cmp31, label %if.then32, label %return

if.then32:                                        ; preds = %land.lhs.true24
  store %struct.rtx_def* %7, %struct.rtx_def** %1, align 8, !tbaa !60
  br label %return

return:                                           ; preds = %land.lhs.true, %sw.bb, %land.lhs.true24, %sw.bb17, %if.end, %entry, %if.then32, %if.then11
  %retval.0 = phi i32 [ 1, %if.then32 ], [ 1, %if.then11 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %sw.bb17 ], [ 0, %land.lhs.true24 ], [ 0, %sw.bb ], [ 0, %land.lhs.true ]
  ret i32 %retval.0
}

declare %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) #1

declare void @commit_edge_insertions() #1

declare void @_obstack_newchunk(%struct.obstack*, i32) #1

declare i32 @max_reg_num() #1

declare void @allocate_reg_info(i64, i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @propagate_one_insn(%struct.propagate_block_info* %pbi, %struct.rtx_def* %insn) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %0 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %flags1 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 9
  %1 = load i32* %flags1, align 4, !tbaa !61
  %2 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom574 = zext i32 %bf.clear to i64
  %arrayidx2 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom574
  %3 = load i8* %arrayidx2, align 1, !tbaa !15
  %cmp = icmp eq i8 %3, 105
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 6, %struct.rtx_def* null) #3
  %and = and i32 %1, 16
  %tobool = icmp eq i32 %and, 0
  %arrayidx69.pre = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx70.pre = bitcast %union.rtunion_def* %arrayidx69.pre to %struct.rtx_def**
  br i1 %tobool, label %if.end55, label %if.then4

if.then4:                                         ; preds = %if.end
  %4 = load %struct.rtx_def** %rtx70.pre, align 8, !tbaa !5
  %call11 = tail call fastcc i32 @insn_dead_p(%struct.propagate_block_info* %pbi, %struct.rtx_def* %4, i32 0)
  %tobool12 = icmp ne i32 %call11, 0
  %cmp13 = icmp ne %struct.rtx_def* %call, null
  %or.cond = and i1 %tobool12, %cmp13
  br i1 %or.cond, label %land.rhs, label %if.end17

land.rhs:                                         ; preds = %if.then4
  %bf.load.i = load i32* %2, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %idxprom114.i = zext i32 %bf.clear.i to i64
  %arrayidx.i = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom114.i
  %5 = load i8* %arrayidx.i, align 1, !tbaa !15
  %cmp.i = icmp eq i8 %5, 105
  br i1 %cmp.i, label %cond.true.i, label %if.end17

cond.true.i:                                      ; preds = %land.rhs
  %6 = load %struct.rtx_def** %rtx70.pre, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 0
  %bf.load3.i = load i32* %7, align 8
  %bf.clear4.i = and i32 %bf.load3.i, 65535
  %cmp5.i = icmp eq i32 %bf.clear4.i, 47
  br i1 %cmp5.i, label %cond.end15.i, label %cond.false.i

cond.false.i:                                     ; preds = %cond.true.i
  %call.i = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn, %struct.rtx_def* %6) #3
  br label %cond.end15.i

cond.end15.i:                                     ; preds = %cond.false.i, %cond.true.i
  %cond16.i = phi %struct.rtx_def* [ %call.i, %cond.false.i ], [ %6, %cond.true.i ]
  %tobool.i = icmp eq %struct.rtx_def* %cond16.i, null
  br i1 %tobool.i, label %if.end17, label %if.then.i

if.then.i:                                        ; preds = %cond.end15.i
  %arrayidx18.i = getelementptr inbounds %struct.rtx_def* %cond16.i, i64 0, i32 1, i64 1
  %rtx19.i = bitcast %union.rtunion_def* %arrayidx18.i to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx19.i, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load20.i = load i32* %9, align 8
  %bf.clear21.i = and i32 %bf.load20.i, 65535
  %cmp22.i = icmp eq i32 %bf.clear21.i, 61
  br i1 %cmp22.i, label %if.then24.i, label %if.end17

if.then24.i:                                      ; preds = %if.then.i
  %arrayidx27.i = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %call25.0.in126.i = bitcast %union.rtunion_def* %arrayidx27.i to %struct.rtx_def**
  %call25.0127.i = load %struct.rtx_def** %call25.0.in126.i, align 8
  %cmp29128.i = icmp eq %struct.rtx_def* %call25.0127.i, %insn
  br i1 %cmp29128.i, label %if.end17, label %land.rhs.i

while.cond.i:                                     ; preds = %land.rhs.i
  %arrayidx36.i = getelementptr inbounds %struct.rtx_def* %call25.0129.i, i64 0, i32 1, i64 2
  %call25.0.in.i = bitcast %union.rtunion_def* %arrayidx36.i to %struct.rtx_def**
  %call25.0.i = load %struct.rtx_def** %call25.0.in.i, align 8
  %cmp29.i = icmp eq %struct.rtx_def* %call25.0.i, %insn
  br i1 %cmp29.i, label %if.end17, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then24.i, %while.cond.i
  %call25.0129.i = phi %struct.rtx_def* [ %call25.0.i, %while.cond.i ], [ %call25.0127.i, %if.then24.i ]
  %10 = getelementptr inbounds %struct.rtx_def* %call25.0129.i, i64 0, i32 0
  %bf.load31.i = load i32* %10, align 8
  %bf.clear32.i = and i32 %bf.load31.i, 65535
  %cmp33.i = icmp eq i32 %bf.clear32.i, 34
  br i1 %cmp33.i, label %if.end.i, label %while.cond.i

if.end.i:                                         ; preds = %land.rhs.i
  %arrayidx42.i = getelementptr inbounds %struct.rtx_def* %call25.0129.i, i64 0, i32 1, i64 3
  %rtx43.i = bitcast %union.rtunion_def* %arrayidx42.i to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx43.i, align 8, !tbaa !5
  %12 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 0
  %bf.load44.i = load i32* %12, align 8
  %bf.clear45.i = and i32 %bf.load44.i, 65535
  %cmp46.i = icmp eq i32 %bf.clear45.i, 39
  br i1 %cmp46.i, label %if.then48.i, label %if.end87.i

if.then48.i:                                      ; preds = %if.end.i
  %arrayidx50.i = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtvec.i = bitcast %union.rtunion_def* %arrayidx50.i to %struct.rtvec_def**
  %13 = load %struct.rtvec_def** %rtvec.i, align 8, !tbaa !5
  %num_elem.i = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 0
  %14 = load i32* %num_elem.i, align 4, !tbaa !62
  %cmp51123.i = icmp sgt i32 %14, 0
  br i1 %cmp51123.i, label %for.body.lr.ph.i, label %if.end17

for.body.lr.ph.i:                                 ; preds = %if.then48.i
  %15 = sext i32 %14 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.backedge.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %15, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.backedge.i ]
  %i.0125.in.i = phi i32 [ %14, %for.body.lr.ph.i ], [ %i.0125.i, %for.cond.backedge.i ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %i.0125.i = add nsw i32 %i.0125.in.i, -1
  %arrayidx57.i = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 1, i64 %indvars.iv.next.i
  %16 = load %struct.rtx_def** %arrayidx57.i, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load58.i = load i32* %17, align 8
  %bf.clear59.i = and i32 %bf.load58.i, 65535
  %cmp60.i = icmp eq i32 %bf.clear59.i, 47
  br i1 %cmp60.i, label %land.lhs.true.i, label %for.cond.backedge.i

for.cond.backedge.i:                              ; preds = %land.lhs.true.i, %for.body.i
  %18 = trunc i64 %indvars.iv.next.i to i32
  %cmp51.i = icmp sgt i32 %18, 0
  br i1 %cmp51.i, label %for.body.i, label %if.end17

land.lhs.true.i:                                  ; preds = %for.body.i
  %arrayidx69.i = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 1
  %rtx70.i = bitcast %union.rtunion_def* %arrayidx69.i to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx70.i, align 8, !tbaa !5
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load71.i = load i32* %20, align 8
  %bf.clear72.i = and i32 %bf.load71.i, 65535
  %cmp73.i = icmp eq i32 %bf.clear72.i, 50
  br i1 %cmp73.i, label %for.end.i, label %for.cond.backedge.i

for.end.i:                                        ; preds = %land.lhs.true.i
  %cmp77.i = icmp slt i32 %i.0125.in.i, 1
  br i1 %cmp77.i, label %if.end17, label %if.end80.i

if.end80.i:                                       ; preds = %for.end.i
  %sext.i = shl i64 %indvars.iv.next.i, 32
  %idxprom81.i = ashr exact i64 %sext.i, 32
  %arrayidx86.i = getelementptr inbounds %struct.rtvec_def* %13, i64 0, i32 1, i64 %idxprom81.i
  %21 = load %struct.rtx_def** %arrayidx86.i, align 8, !tbaa !5
  br label %if.end87.i

if.end87.i:                                       ; preds = %if.end80.i, %if.end.i
  %call_pat.0.i = phi %struct.rtx_def* [ %21, %if.end80.i ], [ %11, %if.end.i ]
  %call91.i = tail call fastcc i32 @insn_dead_p(%struct.propagate_block_info* %pbi, %struct.rtx_def* %call_pat.0.i, i32 1) #3
  %phitmp = icmp ne i32 %call91.i, 0
  br label %if.end17

if.end17:                                         ; preds = %while.cond.i, %for.cond.backedge.i, %if.end87.i, %for.end.i, %if.then48.i, %if.then24.i, %if.then.i, %cond.end15.i, %land.rhs, %if.then4
  %22 = phi i1 [ false, %if.then4 ], [ %phitmp, %if.end87.i ], [ false, %for.end.i ], [ true, %cond.end15.i ], [ true, %if.then.i ], [ true, %land.rhs ], [ false, %if.then48.i ], [ false, %if.then24.i ], [ false, %for.cond.backedge.i ], [ false, %while.cond.i ]
  %land.ext = zext i1 %22 to i32
  %and18 = and i32 %1, 8
  %tobool19 = icmp ne i32 %and18, 0
  %or.cond438 = and i1 %tobool19, %tobool12
  br i1 %or.cond438, label %if.then22, label %if.end55

if.then22:                                        ; preds = %if.end17
  %23 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool23 = icmp eq i32 %23, 0
  br i1 %tobool23, label %if.end47, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %if.then22
  %24 = load %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %type = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type, align 8, !tbaa !64
  %code = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 0, i32 2
  %bf.load26 = load i32* %code, align 8
  %bf.clear27 = and i32 %bf.load26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 23
  br i1 %cmp28, label %land.lhs.true30, label %land.lhs.true37

land.lhs.true30:                                  ; preds = %land.lhs.true24
  %type33 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type33, i64 0, i32 6
  %bf.load34 = load i32* %no_force_blk_flag, align 4
  %bf.clear35 = and i32 %bf.load34, 131072
  %tobool36 = icmp eq i32 %bf.clear35, 0
  br i1 %tobool36, label %land.lhs.true37, label %if.end47

land.lhs.true37:                                  ; preds = %land.lhs.true30, %land.lhs.true24
  %call38 = tail call i32 @prologue_epilogue_contains(%struct.rtx_def* %insn) #3
  %tobool39 = icmp eq i32 %call38, 0
  br i1 %tobool39, label %lor.lhs.false, label %land.lhs.true42

lor.lhs.false:                                    ; preds = %land.lhs.true37
  %call40 = tail call i32 @sibcall_epilogue_contains(%struct.rtx_def* %insn) #3
  %tobool41 = icmp eq i32 %call40, 0
  br i1 %tobool41, label %if.end47, label %land.lhs.true42

land.lhs.true42:                                  ; preds = %lor.lhs.false, %land.lhs.true37
  %call43 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 25, %struct.rtx_def* null) #3
  %cmp44 = icmp eq %struct.rtx_def* %call43, null
  br i1 %cmp44, label %if.then46, label %if.end47

if.then46:                                        ; preds = %land.lhs.true42
  tail call void @_fatal_insn(i8* getelementptr inbounds ([42 x i8]* @.str4, i64 0, i64 0), %struct.rtx_def* %insn, i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i32 1615, i8* getelementptr inbounds ([19 x i8]* @__FUNCTION__.propagate_one_insn, i64 0, i64 0)) #6
  unreachable

if.end47:                                         ; preds = %land.lhs.true30, %lor.lhs.false, %if.then22, %land.lhs.true42
  %26 = load %struct.rtx_def** %rtx70.pre, align 8, !tbaa !5
  tail call fastcc void @mark_set_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %26, %struct.rtx_def* %insn)
  %cc0_live = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 8
  store i32 0, i32* %cc0_live, align 4, !tbaa !66
  br i1 %22, label %if.then52, label %if.else

if.then52:                                        ; preds = %if.end47
  %arrayidx.i576 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx.i577 = bitcast %union.rtunion_def* %arrayidx.i576 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx.i577, align 8, !tbaa !5
  %arrayidx2.i578 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 1
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i578 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx3.i, align 8, !tbaa !5
  tail call void @delete_insn_chain(%struct.rtx_def* %27, %struct.rtx_def* %insn) #3
  br label %return

if.else:                                          ; preds = %if.end47
  %bb = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 0
  %29 = load %struct.basic_block_def** %bb, align 8, !tbaa !67
  %call.i579 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 13, %struct.rtx_def* null) #3
  %tobool.i580 = icmp eq %struct.rtx_def* %call.i579, null
  br i1 %tobool.i580, label %if.end50.i, label %land.lhs.true.i584

land.lhs.true.i584:                               ; preds = %if.else
  %30 = getelementptr inbounds %struct.rtx_def* %call.i579, i64 0, i32 0
  %bf.load.i581 = load i32* %30, align 8
  %bf.clear.i582 = and i32 %bf.load.i581, 65535
  %cmp.i583 = icmp eq i32 %bf.clear.i582, 36
  br i1 %cmp.i583, label %if.then.i591, label %if.end50.i

if.then.i591:                                     ; preds = %land.lhs.true.i584
  %arrayidx.i585 = getelementptr inbounds %struct.rtx_def* %call.i579, i64 0, i32 1, i64 0
  %rtx.i586 = bitcast %union.rtunion_def* %arrayidx.i585 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx.i586, align 8, !tbaa !5
  %arrayidx2.i587 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 3
  %rtint.i = bitcast %union.rtunion_def* %arrayidx2.i587 to i32*
  %32 = load i32* %rtint.i, align 4, !tbaa !1
  %33 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load3.i588 = load i32* %33, align 8
  %bf.lshr.i = lshr i32 %bf.load3.i588, 28
  %bf.clear4.i589 = and i32 %bf.lshr.i, 1
  %add.i = add nsw i32 %bf.clear4.i589, 1
  %cmp5.i590 = icmp eq i32 %32, %add.i
  br i1 %cmp5.i590, label %land.lhs.true6.i, label %if.end50.i

land.lhs.true6.i:                                 ; preds = %if.then.i591
  %call7.i = tail call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %31) #3
  %cmp8.i = icmp eq %struct.rtx_def* %call7.i, null
  br i1 %cmp8.i, label %if.end50.i, label %land.lhs.true9.i

land.lhs.true9.i:                                 ; preds = %land.lhs.true6.i
  %34 = getelementptr inbounds %struct.rtx_def* %call7.i, i64 0, i32 0
  %bf.load10.i = load i32* %34, align 8
  %bf.clear11.i = and i32 %bf.load10.i, 65535
  %cmp12.i = icmp eq i32 %bf.clear11.i, 33
  br i1 %cmp12.i, label %land.lhs.true13.i, label %if.end50.i

land.lhs.true13.i:                                ; preds = %land.lhs.true9.i
  %arrayidx15.i = getelementptr inbounds %struct.rtx_def* %call7.i, i64 0, i32 1, i64 3
  %rtx16.i = bitcast %union.rtunion_def* %arrayidx15.i to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx16.i, align 8, !tbaa !5
  %36 = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 0
  %bf.load17.i = load i32* %36, align 8
  %37 = and i32 %bf.load17.i, 65534
  %switch.i = icmp eq i32 %37, 44
  br i1 %switch.i, label %if.then26.i, label %if.end50.i

if.then26.i:                                      ; preds = %land.lhs.true13.i
  %bf.clear18.i = and i32 %bf.load17.i, 65535
  %cmp32.i = icmp eq i32 %bf.clear18.i, 45
  %idxprom.i = zext i1 %cmp32.i to i64
  %arrayidx34.i = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 1, i64 %idxprom.i
  %rtvec.i592 = bitcast %union.rtunion_def* %arrayidx34.i to %struct.rtvec_def**
  %38 = load %struct.rtvec_def** %rtvec.i592, align 8, !tbaa !5
  %num_elem.i593 = getelementptr inbounds %struct.rtvec_def* %38, i64 0, i32 0
  %39 = load i32* %num_elem.i593, align 4, !tbaa !62
  %cmp3576.i = icmp sgt i32 %39, 0
  br i1 %cmp3576.i, label %for.body.i597, label %for.end.i598

for.body.i597:                                    ; preds = %if.then26.i, %for.body.i597
  %indvars.iv.i594 = phi i64 [ %indvars.iv.next.i596, %for.body.i597 ], [ 0, %if.then26.i ]
  %arrayidx42.i595 = getelementptr inbounds %struct.rtvec_def* %38, i64 0, i32 1, i64 %indvars.iv.i594
  %40 = load %struct.rtx_def** %arrayidx42.i595, align 8, !tbaa !5
  %arrayidx44.i = getelementptr inbounds %struct.rtx_def* %40, i64 0, i32 1, i64 0
  %rtx45.i = bitcast %union.rtunion_def* %arrayidx44.i to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx45.i, align 8, !tbaa !5
  %arrayidx47.i = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 3
  %rtint48.i = bitcast %union.rtunion_def* %arrayidx47.i to i32*
  %42 = load i32* %rtint48.i, align 4, !tbaa !1
  %dec.i = add nsw i32 %42, -1
  store i32 %dec.i, i32* %rtint48.i, align 4, !tbaa !1
  %indvars.iv.next.i596 = add nuw nsw i64 %indvars.iv.i594, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i596 to i32
  %exitcond646 = icmp eq i32 %lftr.wideiv, %39
  br i1 %exitcond646, label %for.end.i598, label %for.body.i597

for.end.i598:                                     ; preds = %for.body.i597, %if.then26.i
  %call49.i = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %call7.i) #3
  br label %if.end50.i

if.end50.i:                                       ; preds = %for.end.i598, %land.lhs.true13.i, %land.lhs.true9.i, %land.lhs.true6.i, %if.then.i591, %land.lhs.true.i584, %if.else
  %end.i = getelementptr inbounds %struct.basic_block_def* %29, i64 0, i32 1
  %43 = load %struct.rtx_def** %end.i, align 8, !tbaa !24
  %cmp51.i599 = icmp eq %struct.rtx_def* %43, %insn
  %call55.i = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %insn) #3
  br i1 %cmp51.i599, label %if.then57.i, label %return

if.then57.i:                                      ; preds = %if.end50.i
  %call58.i = tail call zeroext i1 @purge_dead_edges(%struct.basic_block_def* %29) #3
  br label %return

if.end55:                                         ; preds = %if.end, %if.end17
  %insn_is_dead.0604 = phi i1 [ %tobool12, %if.end17 ], [ false, %if.end ]
  %libcall_is_dead.0603 = phi i32 [ %land.ext, %if.end17 ], [ 0, %if.end ]
  %new_set = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 2
  %44 = load %struct.bitmap_head_def** %new_set, align 8, !tbaa !55
  tail call void @bitmap_clear(%struct.bitmap_head_def* %44) #3
  %tobool56 = icmp eq i32 %libcall_is_dead.0603, 0
  %45 = load %struct.rtx_def** %rtx70.pre, align 8, !tbaa !5
  br i1 %tobool56, label %if.else67, label %if.then57

if.then57:                                        ; preds = %if.end55
  tail call fastcc void @mark_set_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %45, %struct.rtx_def* %insn)
  %arrayidx62 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0
  %rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**
  %46 = load %struct.rtx_def** %rtx63, align 8, !tbaa !5
  %arrayidx65 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 1
  %rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx66, align 8, !tbaa !5
  br label %return

if.else67:                                        ; preds = %if.end55
  %48 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 0
  %bf.load71 = load i32* %48, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 47
  br i1 %cmp73, label %land.lhs.true75, label %if.else122

land.lhs.true75:                                  ; preds = %if.else67
  %fld79 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1
  %rtx81 = bitcast [1 x %union.rtunion_def]* %fld79 to %struct.rtx_def**
  %49 = load %struct.rtx_def** %rtx81, align 8, !tbaa !5
  %50 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !5
  %cmp82 = icmp eq %struct.rtx_def* %49, %50
  br i1 %cmp82, label %land.lhs.true84, label %if.else122

land.lhs.true84:                                  ; preds = %land.lhs.true75
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1, i64 1
  %rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx90, align 8, !tbaa !5
  %52 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 0
  %bf.load91 = load i32* %52, align 8
  %bf.clear92 = and i32 %bf.load91, 65535
  %cmp93 = icmp eq i32 %bf.clear92, 75
  br i1 %cmp93, label %land.lhs.true95, label %if.else122

land.lhs.true95:                                  ; preds = %land.lhs.true84
  %fld102 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1
  %rtx104 = bitcast [1 x %union.rtunion_def]* %fld102 to %struct.rtx_def**
  %53 = load %struct.rtx_def** %rtx104, align 8, !tbaa !5
  %cmp105 = icmp eq %struct.rtx_def* %53, %49
  br i1 %cmp105, label %land.lhs.true107, label %if.else122

land.lhs.true107:                                 ; preds = %land.lhs.true95
  %arrayidx115 = getelementptr inbounds %struct.rtx_def* %51, i64 0, i32 1, i64 1
  %rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx116, align 8, !tbaa !5
  %55 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 0
  %bf.load117 = load i32* %55, align 8
  %bf.clear118 = and i32 %bf.load117, 65535
  %cmp119 = icmp eq i32 %bf.clear118, 54
  br i1 %cmp119, label %land.lhs.true107.if.end352_crit_edge, label %if.else122

land.lhs.true107.if.end352_crit_edge:             ; preds = %land.lhs.true107
  %and353.pre = and i32 %1, 4
  br label %if.end352

if.else122:                                       ; preds = %land.lhs.true107, %land.lhs.true95, %land.lhs.true84, %land.lhs.true75, %if.else67
  %bf.load124 = load i32* %2, align 8
  %bf.clear125 = and i32 %bf.load124, 65535
  %cmp126 = icmp ne i32 %bf.clear125, 34
  %and129 = and i32 %1, 4
  %tobool130 = icmp eq i32 %and129, 0
  %or.cond575 = or i1 %cmp126, %tobool130
  br i1 %or.cond575, label %if.end185, label %do.body

do.body:                                          ; preds = %if.else122
  %reg_live = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %56 = load %struct.bitmap_head_def** %reg_live, align 8, !tbaa !53
  %first = getelementptr inbounds %struct.bitmap_head_def* %56, i64 0, i32 0
  %ptr_.1624 = load %struct.bitmap_element_def** %first, align 8
  %cmp147625 = icmp eq %struct.bitmap_element_def* %ptr_.1624, null
  br i1 %cmp147625, label %if.end185, label %for.cond149.preheader.lr.ph

for.cond149.preheader.lr.ph:                      ; preds = %do.body
  %.pre647 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  br label %for.cond149.preheader

for.cond149.preheader:                            ; preds = %for.cond149.preheader.lr.ph, %if.end178.1
  %ptr_.1626 = phi %struct.bitmap_element_def* [ %ptr_.1624, %for.cond149.preheader.lr.ph ], [ %ptr_.1, %if.end178.1 ]
  %indx167 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1626, i64 0, i32 2
  %data = getelementptr inbounds %struct.varray_head_tag* %.pre647, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx154 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1626, i64 0, i32 3, i64 0
  %57 = load i64* %arrayidx154, align 8, !tbaa !14
  %cmp155 = icmp eq i64 %57, 0
  br i1 %cmp155, label %if.end178, label %for.body161

for.body161:                                      ; preds = %for.cond149.preheader, %for.inc
  %indvars.iv639 = phi i64 [ %indvars.iv.next640, %for.inc ], [ 0, %for.cond149.preheader ]
  %word_.0 = phi i64 [ %word_.1, %for.inc ], [ %57, %for.cond149.preheader ]
  %shl = shl i64 1, %indvars.iv639
  %and162 = and i64 %shl, %word_.0
  %cmp163 = icmp eq i64 %and162, 0
  br i1 %cmp163, label %for.inc, label %if.then165

if.then165:                                       ; preds = %for.body161
  %neg = xor i64 %shl, -1
  %and166 = and i64 %word_.0, %neg
  %58 = load i32* %indx167, align 4, !tbaa !47
  %mul = shl i32 %58, 7
  %59 = trunc i64 %indvars.iv639 to i32
  %add169 = add i32 %59, %mul
  %idxprom170 = sext i32 %add169 to i64
  %arrayidx171 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom170
  %60 = load %struct.reg_info_def** %arrayidx171, align 8, !tbaa !5
  %calls_crossed = getelementptr inbounds %struct.reg_info_def* %60, i64 0, i32 8
  %61 = load i32* %calls_crossed, align 4, !tbaa !20
  %inc = add nsw i32 %61, 1
  store i32 %inc, i32* %calls_crossed, align 4, !tbaa !20
  %cmp172 = icmp eq i64 %and166, 0
  br i1 %cmp172, label %if.end178, label %for.inc

for.inc:                                          ; preds = %for.body161, %if.then165
  %word_.1 = phi i64 [ %and166, %if.then165 ], [ %word_.0, %for.body161 ]
  %indvars.iv.next640 = add nuw nsw i64 %indvars.iv639, 1
  %62 = trunc i64 %indvars.iv.next640 to i32
  %cmp159.old = icmp ult i32 %62, 64
  br i1 %cmp159.old, label %for.body161, label %if.end178

if.end178:                                        ; preds = %for.inc, %if.then165, %for.cond149.preheader
  %arrayidx154.1 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1626, i64 0, i32 3, i64 1
  %63 = load i64* %arrayidx154.1, align 8, !tbaa !14
  %cmp155.1 = icmp eq i64 %63, 0
  br i1 %cmp155.1, label %if.end178.1, label %for.body161.1

if.end185:                                        ; preds = %if.end178.1, %do.body, %if.else122
  tail call fastcc void @mark_set_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %45, %struct.rtx_def* %insn)
  %bf.load189 = load i32* %2, align 8
  %bf.clear190 = and i32 %bf.load189, 65535
  %cmp191 = icmp eq i32 %bf.clear190, 34
  br i1 %cmp191, label %if.then193, label %if.end262

if.then193:                                       ; preds = %if.end185
  %64 = load %struct.rtx_def** %rtx70.pre, align 8, !tbaa !5
  %65 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 0
  %bf.load199 = load i32* %65, align 8
  %bf.clear200 = and i32 %bf.load199, 65535
  %cmp201 = icmp eq i32 %bf.clear200, 38
  br i1 %cmp201, label %if.then203, label %if.end210

if.then203:                                       ; preds = %if.then193
  %arrayidx208 = getelementptr inbounds %struct.rtx_def* %64, i64 0, i32 1, i64 0
  %rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**
  %66 = load %struct.rtx_def** %rtx209, align 8, !tbaa !5
  br label %if.end210

if.end210:                                        ; preds = %if.then203, %if.then193
  %cond.0 = phi %struct.rtx_def* [ %66, %if.then203 ], [ null, %if.then193 ]
  %bf.clear213 = and i32 %bf.load189, 67108864
  %tobool214 = icmp eq i32 %bf.clear213, 0
  br i1 %tobool214, label %if.then215, label %if.end216

if.then215:                                       ; preds = %if.end210
  %mem_set_list = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 4
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** %mem_set_list) #3
  %mem_set_list_len = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 7
  store i32 0, i32* %mem_set_list_len, align 4, !tbaa !68
  br label %if.end216

if.end216:                                        ; preds = %if.end210, %if.then215
  %arrayidx218 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 7
  %note195.0.in619 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**
  %note195.0620 = load %struct.rtx_def** %note195.0.in619, align 8
  %tobool221621 = icmp eq %struct.rtx_def* %note195.0620, null
  br i1 %tobool221621, label %for.body247, label %for.body222

for.body222:                                      ; preds = %if.end216, %for.inc239
  %note195.0622 = phi %struct.rtx_def* [ %note195.0, %for.inc239 ], [ %note195.0620, %if.end216 ]
  %fld223 = getelementptr inbounds %struct.rtx_def* %note195.0622, i64 0, i32 1
  %rtx225 = bitcast [1 x %union.rtunion_def]* %fld223 to %struct.rtx_def**
  %67 = load %struct.rtx_def** %rtx225, align 8, !tbaa !5
  %68 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 0
  %bf.load226 = load i32* %68, align 8
  %bf.clear227 = and i32 %bf.load226, 65535
  %cmp228 = icmp eq i32 %bf.clear227, 49
  br i1 %cmp228, label %if.then230, label %for.inc239

if.then230:                                       ; preds = %for.body222
  %arrayidx235 = getelementptr inbounds %struct.rtx_def* %67, i64 0, i32 1, i64 0
  %rtx236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx236, align 8, !tbaa !5
  %70 = load i32* %flags1, align 4, !tbaa !61
  tail call fastcc void @mark_set_1(%struct.propagate_block_info* %pbi, i32 49, %struct.rtx_def* %69, %struct.rtx_def* %cond.0, %struct.rtx_def* %insn, i32 %70)
  br label %for.inc239

for.inc239:                                       ; preds = %for.body222, %if.then230
  %arrayidx241 = getelementptr inbounds %struct.rtx_def* %note195.0622, i64 0, i32 1, i64 1
  %note195.0.in = bitcast %union.rtunion_def* %arrayidx241 to %struct.rtx_def**
  %note195.0 = load %struct.rtx_def** %note195.0.in, align 8
  %tobool221 = icmp eq %struct.rtx_def* %note195.0, null
  br i1 %tobool221, label %for.body247, label %for.body222

for.body247:                                      ; preds = %if.end216, %for.inc239, %for.inc259
  %indvars.iv636 = phi i64 [ %indvars.iv.next637, %for.inc259 ], [ 0, %for.inc239 ], [ 0, %if.end216 ]
  %71 = load i64* @regs_invalidated_by_call, align 8, !tbaa !14
  %sh_prom248 = and i64 %indvars.iv636, 4294967295
  %shl249 = shl i64 1, %sh_prom248
  %and250 = and i64 %71, %shl249
  %tobool251 = icmp eq i64 %and250, 0
  br i1 %tobool251, label %for.inc259, label %if.then252

if.then252:                                       ; preds = %for.body247
  %72 = trunc i64 %indvars.iv636 to i32
  %arrayidx254 = getelementptr inbounds [53 x i32]* @reg_raw_mode, i64 0, i64 %indvars.iv636
  %73 = load i32* %arrayidx254, align 4, !tbaa !15
  %call255 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %73, i32 %72) #3
  %74 = load i32* %flags1, align 4, !tbaa !61
  %and257 = and i32 %74, -6
  tail call fastcc void @mark_set_1(%struct.propagate_block_info* %pbi, i32 49, %struct.rtx_def* %call255, %struct.rtx_def* %cond.0, %struct.rtx_def* %insn, i32 %and257)
  br label %for.inc259

for.inc259:                                       ; preds = %for.body247, %if.then252
  %indvars.iv.next637 = add nuw nsw i64 %indvars.iv636, 1
  %exitcond638 = icmp eq i64 %indvars.iv.next637, 53
  br i1 %exitcond638, label %if.end262, label %for.body247

if.end262:                                        ; preds = %for.inc259, %if.end185
  %cc0_live263 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 8
  store i32 0, i32* %cc0_live263, align 4, !tbaa !66
  br i1 %insn_is_dead.0604, label %if.end269, label %if.then265

if.then265:                                       ; preds = %if.end262
  %75 = load %struct.rtx_def** %rtx70.pre, align 8, !tbaa !5
  tail call fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %75, %struct.rtx_def* null, %struct.rtx_def* %insn)
  br label %if.end269

if.end269:                                        ; preds = %if.then265, %if.end262
  %and270 = and i32 %1, 128
  %tobool271 = icmp eq i32 %and270, 0
  br i1 %tobool271, label %if.end282, label %land.lhs.true272

land.lhs.true272:                                 ; preds = %if.end269
  %call273 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 4, %struct.rtx_def* null) #3
  %tobool274 = icmp eq %struct.rtx_def* %call273, null
  br i1 %tobool274, label %lor.lhs.false275, label %if.then278

lor.lhs.false275:                                 ; preds = %land.lhs.true272
  %call276 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn, i32 3, %struct.rtx_def* null) #3
  %tobool277 = icmp eq %struct.rtx_def* %call276, null
  br i1 %tobool277, label %if.end282, label %if.then278

if.then278:                                       ; preds = %lor.lhs.false275, %land.lhs.true272
  %note123.0 = phi %struct.rtx_def* [ %call273, %land.lhs.true272 ], [ %call276, %lor.lhs.false275 ]
  %arrayidx280 = getelementptr inbounds %struct.rtx_def* %note123.0, i64 0, i32 1, i64 0
  %rtx281 = bitcast %union.rtunion_def* %arrayidx280 to %struct.rtx_def**
  %76 = load %struct.rtx_def** %rtx281, align 8, !tbaa !5
  tail call fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %76, %struct.rtx_def* null, %struct.rtx_def* %insn)
  br label %if.end282

if.end282:                                        ; preds = %lor.lhs.false275, %if.end269, %if.then278
  br i1 %insn_is_dead.0604, label %if.end352, label %land.lhs.true284

land.lhs.true284:                                 ; preds = %if.end282
  %bf.load285 = load i32* %2, align 8
  %bf.clear286 = and i32 %bf.load285, 65535
  %cmp287 = icmp eq i32 %bf.clear286, 34
  br i1 %cmp287, label %if.then289, label %if.end352

if.then289:                                       ; preds = %land.lhs.true284
  %77 = load %struct.rtx_def** %rtx70.pre, align 8, !tbaa !5
  %78 = getelementptr inbounds %struct.rtx_def* %77, i64 0, i32 0
  %bf.load296 = load i32* %78, align 8
  %bf.clear297 = and i32 %bf.load296, 65535
  %cmp298 = icmp eq i32 %bf.clear297, 38
  br i1 %cmp298, label %if.then300, label %if.end307

if.then300:                                       ; preds = %if.then289
  %arrayidx305 = getelementptr inbounds %struct.rtx_def* %77, i64 0, i32 1, i64 0
  %rtx306 = bitcast %union.rtunion_def* %arrayidx305 to %struct.rtx_def**
  %79 = load %struct.rtx_def** %rtx306, align 8, !tbaa !5
  br label %if.end307

if.end307:                                        ; preds = %if.then300, %if.then289
  %cond292.0 = phi %struct.rtx_def* [ %79, %if.then300 ], [ null, %if.then289 ]
  %arrayidx309 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 7
  %note291.0.in614 = bitcast %union.rtunion_def* %arrayidx309 to %struct.rtx_def**
  %note291.0615 = load %struct.rtx_def** %note291.0.in614, align 8
  %tobool312616 = icmp eq %struct.rtx_def* %note291.0615, null
  br i1 %tobool312616, label %for.end333, label %for.body313

for.body313:                                      ; preds = %if.end307, %for.inc329
  %note291.0617 = phi %struct.rtx_def* [ %note291.0, %for.inc329 ], [ %note291.0615, %if.end307 ]
  %fld314 = getelementptr inbounds %struct.rtx_def* %note291.0617, i64 0, i32 1
  %rtx316 = bitcast [1 x %union.rtunion_def]* %fld314 to %struct.rtx_def**
  %80 = load %struct.rtx_def** %rtx316, align 8, !tbaa !5
  %81 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 0
  %bf.load317 = load i32* %81, align 8
  %bf.clear318 = and i32 %bf.load317, 65535
  %cmp319 = icmp eq i32 %bf.clear318, 48
  br i1 %cmp319, label %if.then321, label %for.inc329

if.then321:                                       ; preds = %for.body313
  %arrayidx326 = getelementptr inbounds %struct.rtx_def* %80, i64 0, i32 1, i64 0
  %rtx327 = bitcast %union.rtunion_def* %arrayidx326 to %struct.rtx_def**
  %82 = load %struct.rtx_def** %rtx327, align 8, !tbaa !5
  tail call fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %82, %struct.rtx_def* %cond292.0, %struct.rtx_def* %insn)
  br label %for.inc329

for.inc329:                                       ; preds = %for.body313, %if.then321
  %arrayidx331 = getelementptr inbounds %struct.rtx_def* %note291.0617, i64 0, i32 1, i64 1
  %note291.0.in = bitcast %union.rtunion_def* %arrayidx331 to %struct.rtx_def**
  %note291.0 = load %struct.rtx_def** %note291.0.in, align 8
  %tobool312 = icmp eq %struct.rtx_def* %note291.0, null
  br i1 %tobool312, label %for.end333, label %for.body313

for.end333:                                       ; preds = %for.inc329, %if.end307
  %reg_live334 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %83 = load %struct.bitmap_head_def** %reg_live334, align 8, !tbaa !53
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %83, i32 7) #3
  br label %for.body338

for.body338:                                      ; preds = %for.inc347, %for.end333
  %indvars.iv634 = phi i64 [ 0, %for.end333 ], [ %indvars.iv.next635, %for.inc347 ]
  %arrayidx340 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %indvars.iv634
  %84 = load i8* %arrayidx340, align 1, !tbaa !15
  %tobool341 = icmp eq i8 %84, 0
  br i1 %tobool341, label %for.inc347, label %if.then342

if.then342:                                       ; preds = %for.body338
  %arrayidx344 = getelementptr inbounds [53 x i32]* @reg_raw_mode, i64 0, i64 %indvars.iv634
  %85 = load i32* %arrayidx344, align 4, !tbaa !15
  %86 = trunc i64 %indvars.iv634 to i32
  %call345 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %85, i32 %86) #3
  tail call fastcc void @mark_used_reg(%struct.propagate_block_info* %pbi, %struct.rtx_def* %call345, %struct.rtx_def* %insn)
  br label %for.inc347

for.inc347:                                       ; preds = %for.body338, %if.then342
  %indvars.iv.next635 = add nuw nsw i64 %indvars.iv634, 1
  %exitcond = icmp eq i64 %indvars.iv.next635, 53
  br i1 %exitcond, label %if.end352, label %for.body338

if.end352:                                        ; preds = %for.inc347, %land.lhs.true107.if.end352_crit_edge, %land.lhs.true284, %if.end282
  %and353.pre-phi = phi i32 [ %and353.pre, %land.lhs.true107.if.end352_crit_edge ], [ %and129, %land.lhs.true284 ], [ %and129, %if.end282 ], [ %and129, %for.inc347 ]
  %tobool354 = icmp eq i32 %and353.pre-phi, 0
  br i1 %tobool354, label %return, label %do.body356

do.body356:                                       ; preds = %if.end352
  %reg_live358 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %87 = load %struct.bitmap_head_def** %reg_live358, align 8, !tbaa !53
  %first359 = getelementptr inbounds %struct.bitmap_head_def* %87, i64 0, i32 0
  %ptr_357.1610 = load %struct.bitmap_element_def** %first359, align 8
  %cmp384611 = icmp eq %struct.bitmap_element_def* %ptr_357.1610, null
  br i1 %cmp384611, label %return, label %for.cond387.preheader.lr.ph

for.cond387.preheader.lr.ph:                      ; preds = %do.body356
  %.pre = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  br label %for.cond387.preheader

for.cond387.preheader:                            ; preds = %for.cond387.preheader.lr.ph, %if.end429.1
  %ptr_357.1612 = phi %struct.bitmap_element_def* [ %ptr_357.1610, %for.cond387.preheader.lr.ph ], [ %ptr_357.1, %if.end429.1 ]
  %indx411 = getelementptr inbounds %struct.bitmap_element_def* %ptr_357.1612, i64 0, i32 2
  %data417 = getelementptr inbounds %struct.varray_head_tag* %.pre, i64 0, i32 4
  %reg418 = bitcast %union.varray_data_tag* %data417 to [1 x %struct.reg_info_def*]*
  %arrayidx394 = getelementptr inbounds %struct.bitmap_element_def* %ptr_357.1612, i64 0, i32 3, i64 0
  %88 = load i64* %arrayidx394, align 8, !tbaa !14
  %cmp395 = icmp eq i64 %88, 0
  br i1 %cmp395, label %if.end429, label %for.body401

for.body401:                                      ; preds = %for.cond387.preheader, %for.inc426
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc426 ], [ 0, %for.cond387.preheader ]
  %word_391.0 = phi i64 [ %word_391.1, %for.inc426 ], [ %88, %for.cond387.preheader ]
  %shl404 = shl i64 1, %indvars.iv
  %and405 = and i64 %shl404, %word_391.0
  %cmp406 = icmp eq i64 %and405, 0
  br i1 %cmp406, label %for.inc426, label %if.then408

if.then408:                                       ; preds = %for.body401
  %neg409 = xor i64 %shl404, -1
  %and410 = and i64 %word_391.0, %neg409
  %89 = load i32* %indx411, align 4, !tbaa !47
  %mul412 = shl i32 %89, 7
  %90 = trunc i64 %indvars.iv to i32
  %add415 = add i32 %90, %mul412
  %idxprom416 = sext i32 %add415 to i64
  %arrayidx419 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg418, i64 0, i64 %idxprom416
  %91 = load %struct.reg_info_def** %arrayidx419, align 8, !tbaa !5
  %live_length = getelementptr inbounds %struct.reg_info_def* %91, i64 0, i32 7
  %92 = load i32* %live_length, align 4, !tbaa !21
  %inc420 = add nsw i32 %92, 1
  store i32 %inc420, i32* %live_length, align 4, !tbaa !21
  %cmp421 = icmp eq i64 %and410, 0
  br i1 %cmp421, label %if.end429, label %for.inc426

for.inc426:                                       ; preds = %for.body401, %if.then408
  %word_391.1 = phi i64 [ %and410, %if.then408 ], [ %word_391.0, %for.body401 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %93 = trunc i64 %indvars.iv.next to i32
  %cmp399.old = icmp ult i32 %93, 64
  br i1 %cmp399.old, label %for.body401, label %if.end429

if.end429:                                        ; preds = %for.inc426, %if.then408, %for.cond387.preheader
  %arrayidx394.1 = getelementptr inbounds %struct.bitmap_element_def* %ptr_357.1612, i64 0, i32 3, i64 1
  %94 = load i64* %arrayidx394.1, align 8, !tbaa !14
  %cmp395.1 = icmp eq i64 %94, 0
  br i1 %cmp395.1, label %if.end429.1, label %for.body401.1

return:                                           ; preds = %if.end429.1, %do.body356, %if.then57.i, %if.end50.i, %if.end352, %if.then52, %entry, %if.then57
  %retval.0 = phi %struct.rtx_def* [ %47, %if.then57 ], [ %0, %entry ], [ %28, %if.then52 ], [ %0, %if.end352 ], [ %0, %if.end50.i ], [ %0, %if.then57.i ], [ %0, %do.body356 ], [ %0, %if.end429.1 ]
  ret %struct.rtx_def* %retval.0

for.body401.1:                                    ; preds = %if.end429, %for.inc426.1
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc426.1 ], [ 0, %if.end429 ]
  %word_391.0.1 = phi i64 [ %word_391.1.1, %for.inc426.1 ], [ %94, %if.end429 ]
  %shl404.1 = shl i64 1, %indvars.iv.1
  %and405.1 = and i64 %shl404.1, %word_391.0.1
  %cmp406.1 = icmp eq i64 %and405.1, 0
  br i1 %cmp406.1, label %for.inc426.1, label %if.then408.1

if.then408.1:                                     ; preds = %for.body401.1
  %neg409.1 = xor i64 %shl404.1, -1
  %and410.1 = and i64 %word_391.0.1, %neg409.1
  %95 = load i32* %indx411, align 4, !tbaa !47
  %mul412.1 = shl i32 %95, 7
  %96 = add i64 %indvars.iv.1, 64
  %97 = trunc i64 %96 to i32
  %add415.1 = add i32 %97, %mul412.1
  %idxprom416.1 = sext i32 %add415.1 to i64
  %arrayidx419.1 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg418, i64 0, i64 %idxprom416.1
  %98 = load %struct.reg_info_def** %arrayidx419.1, align 8, !tbaa !5
  %live_length.1 = getelementptr inbounds %struct.reg_info_def* %98, i64 0, i32 7
  %99 = load i32* %live_length.1, align 4, !tbaa !21
  %inc420.1 = add nsw i32 %99, 1
  store i32 %inc420.1, i32* %live_length.1, align 4, !tbaa !21
  %cmp421.1 = icmp eq i64 %and410.1, 0
  br i1 %cmp421.1, label %if.end429.1, label %for.inc426.1

for.inc426.1:                                     ; preds = %if.then408.1, %for.body401.1
  %word_391.1.1 = phi i64 [ %and410.1, %if.then408.1 ], [ %word_391.0.1, %for.body401.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %100 = trunc i64 %indvars.iv.next.1 to i32
  %cmp399.old.1 = icmp ult i32 %100, 64
  br i1 %cmp399.old.1, label %for.body401.1, label %if.end429.1

if.end429.1:                                      ; preds = %if.then408.1, %for.inc426.1, %if.end429
  %next434 = getelementptr inbounds %struct.bitmap_element_def* %ptr_357.1612, i64 0, i32 0
  %ptr_357.1 = load %struct.bitmap_element_def** %next434, align 8
  %cmp384 = icmp eq %struct.bitmap_element_def* %ptr_357.1, null
  br i1 %cmp384, label %return, label %for.cond387.preheader

for.body161.1:                                    ; preds = %if.end178, %for.inc.1
  %indvars.iv639.1 = phi i64 [ %indvars.iv.next640.1, %for.inc.1 ], [ 0, %if.end178 ]
  %word_.0.1 = phi i64 [ %word_.1.1, %for.inc.1 ], [ %63, %if.end178 ]
  %shl.1 = shl i64 1, %indvars.iv639.1
  %and162.1 = and i64 %shl.1, %word_.0.1
  %cmp163.1 = icmp eq i64 %and162.1, 0
  br i1 %cmp163.1, label %for.inc.1, label %if.then165.1

if.then165.1:                                     ; preds = %for.body161.1
  %neg.1 = xor i64 %shl.1, -1
  %and166.1 = and i64 %word_.0.1, %neg.1
  %101 = load i32* %indx167, align 4, !tbaa !47
  %mul.1 = shl i32 %101, 7
  %102 = add i64 %indvars.iv639.1, 64
  %103 = trunc i64 %102 to i32
  %add169.1 = add i32 %103, %mul.1
  %idxprom170.1 = sext i32 %add169.1 to i64
  %arrayidx171.1 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom170.1
  %104 = load %struct.reg_info_def** %arrayidx171.1, align 8, !tbaa !5
  %calls_crossed.1 = getelementptr inbounds %struct.reg_info_def* %104, i64 0, i32 8
  %105 = load i32* %calls_crossed.1, align 4, !tbaa !20
  %inc.1 = add nsw i32 %105, 1
  store i32 %inc.1, i32* %calls_crossed.1, align 4, !tbaa !20
  %cmp172.1 = icmp eq i64 %and166.1, 0
  br i1 %cmp172.1, label %if.end178.1, label %for.inc.1

for.inc.1:                                        ; preds = %if.then165.1, %for.body161.1
  %word_.1.1 = phi i64 [ %and166.1, %if.then165.1 ], [ %word_.0.1, %for.body161.1 ]
  %indvars.iv.next640.1 = add nuw nsw i64 %indvars.iv639.1, 1
  %106 = trunc i64 %indvars.iv.next640.1 to i32
  %cmp159.old.1 = icmp ult i32 %106, 64
  br i1 %cmp159.old.1, label %for.body161.1, label %if.end178.1

if.end178.1:                                      ; preds = %if.then165.1, %for.inc.1, %if.end178
  %next183 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.1626, i64 0, i32 0
  %ptr_.1 = load %struct.bitmap_element_def** %next183, align 8
  %cmp147 = icmp eq %struct.bitmap_element_def* %ptr_.1, null
  br i1 %cmp147, label %if.end185, label %for.cond149.preheader
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @insn_dead_p(%struct.propagate_block_info* nocapture readonly %pbi, %struct.rtx_def* nocapture readonly %x, i32 %call_ok) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end302 [
    i32 47, label %if.then
    i32 39, label %if.then227
    i32 49, label %land.lhs.true272
  ]

if.then:                                          ; preds = %entry
  %fld = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx3, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load4 = load i32* %3, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 50
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then
  %tobool = icmp eq i32 %call_ok, 0
  br i1 %tobool, label %return, label %if.end15

if.else:                                          ; preds = %if.then
  %call = tail call i32 @volatile_refs_p(%struct.rtx_def* %2) #3
  %tobool12 = icmp eq i32 %call, 0
  br i1 %tobool12, label %if.end15, label %return

if.end15:                                         ; preds = %if.then7, %if.else
  %4 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 0
  %bf.load16 = load i32* %4, align 8
  %bf.clear17 = and i32 %bf.load16, 65535
  %cmp18 = icmp eq i32 %bf.clear17, 66
  br i1 %cmp18, label %if.then19, label %while.cond

if.then19:                                        ; preds = %if.end15
  %bf.clear21 = and i32 %bf.load16, 134217728
  %tobool22 = icmp ne i32 %bf.clear21, 0
  %bf.clear25 = and i32 %bf.load16, 16711680
  %cmp26 = icmp eq i32 %bf.clear25, 3342336
  %or.cond = or i1 %tobool22, %cmp26
  br i1 %or.cond, label %return, label %if.end28

if.end28:                                         ; preds = %if.then19
  %call29 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %1) #3
  %mem_set_list = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 4
  %temp.018 = load %struct.rtx_def** %mem_set_list, align 8
  %cmp3019 = icmp eq %struct.rtx_def* %temp.018, null
  br i1 %cmp3019, label %if.end302, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end28
  %arrayidx41 = getelementptr inbounds %struct.rtx_def* %call29, i64 0, i32 1, i64 0
  %rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**
  %5 = getelementptr inbounds %struct.rtx_def* %call29, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %temp.020 = phi %struct.rtx_def* [ %temp.018, %for.body.lr.ph ], [ %temp.0, %for.inc ]
  %fld31 = getelementptr inbounds %struct.rtx_def* %temp.020, i64 0, i32 1
  %rtx33 = bitcast [1 x %union.rtunion_def]* %fld31 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx33, align 8, !tbaa !5
  %call34 = tail call i32 @anti_dependence(%struct.rtx_def* %1, %struct.rtx_def* %6) #3
  %tobool35 = icmp eq i32 %call34, 0
  br i1 %tobool35, label %for.inc, label %if.then36

if.then36:                                        ; preds = %for.body
  %7 = load %struct.rtx_def** %rtx33, align 8, !tbaa !5
  %8 = load %struct.rtx_def** %rtx42, align 8, !tbaa !5
  %arrayidx44 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0
  %rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx45, align 8, !tbaa !5
  %call46 = tail call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %9) #3
  %tobool47 = icmp eq i32 %call46, 0
  br i1 %tobool47, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then36
  %bf.load48 = load i32* %5, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %idxprom5 = zext i32 %bf.clear50 to i64
  %arrayidx51 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom5
  %10 = load i8* %arrayidx51, align 1, !tbaa !15
  %11 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 0
  %bf.load52 = load i32* %11, align 8
  %bf.lshr53 = lshr i32 %bf.load52, 16
  %bf.clear54 = and i32 %bf.lshr53, 255
  %idxprom556 = zext i32 %bf.clear54 to i64
  %arrayidx56 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom556
  %12 = load i8* %arrayidx56, align 1, !tbaa !15
  %cmp58 = icmp ugt i8 %10, %12
  br i1 %cmp58, label %for.inc, label %return

for.inc:                                          ; preds = %land.lhs.true, %if.then36, %for.body
  %arrayidx64 = getelementptr inbounds %struct.rtx_def* %temp.020, i64 0, i32 1, i64 1
  %rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**
  %temp.0 = load %struct.rtx_def** %rtx65, align 8
  %cmp30 = icmp eq %struct.rtx_def* %temp.0, null
  br i1 %cmp30, label %if.end302, label %for.body

while.cond:                                       ; preds = %if.end15, %while.body
  %bf.load67 = phi i32 [ %bf.load67.pre, %while.body ], [ %bf.load16, %if.end15 ]
  %r.0 = phi %struct.rtx_def* [ %14, %while.body ], [ %1, %if.end15 ]
  %13 = getelementptr inbounds %struct.rtx_def* %r.0, i64 0, i32 0
  %bf.clear68 = and i32 %bf.load67, 65535
  switch i32 %bf.clear68, label %if.end302 [
    i32 63, label %while.body
    i32 64, label %while.body
    i32 133, label %while.body
    i32 61, label %if.then87
  ]

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond
  %arrayidx81 = getelementptr inbounds %struct.rtx_def* %r.0, i64 0, i32 1, i64 0
  %rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx82, align 8, !tbaa !5
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %14, i64 0, i32 0
  %bf.load67.pre = load i32* %.phi.trans.insert, align 8
  br label %while.cond

if.then87:                                        ; preds = %while.cond
  %arrayidx89 = getelementptr inbounds %struct.rtx_def* %r.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx89 to i32*
  %15 = load i32* %rtuint, align 4, !tbaa !1
  %reg_live = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %16 = load %struct.bitmap_head_def** %reg_live, align 8, !tbaa !53
  %call90 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %16, i32 %15) #3
  %tobool91 = icmp eq i32 %call90, 0
  br i1 %tobool91, label %if.end93, label %return

if.end93:                                         ; preds = %if.then87
  %cmp94 = icmp slt i32 %15, 53
  br i1 %cmp94, label %if.then96, label %if.end192

if.then96:                                        ; preds = %if.end93
  %17 = and i32 %15, -8
  %18 = icmp eq i32 %17, 8
  %.off = add i32 %15, -21
  %19 = icmp ult i32 %.off, 8
  %or.cond8 = or i1 %18, %19
  %.off1 = add i32 %15, -45
  %20 = icmp ult i32 %.off1, 8
  %or.cond10 = or i1 %or.cond8, %20
  %.off2 = add i32 %15, -29
  %21 = icmp ult i32 %.off2, 8
  %or.cond12 = or i1 %or.cond10, %21
  %bf.load120 = load i32* %13, align 8
  %bf.lshr121 = lshr i32 %bf.load120, 16
  %bf.clear122 = and i32 %bf.lshr121, 255
  br i1 %or.cond12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then96
  %idxprom1234 = zext i32 %bf.clear122 to i64
  %arrayidx124 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom1234
  %22 = load i32* %arrayidx124, align 4, !tbaa !15
  %cmp125 = icmp eq i32 %22, 5
  br i1 %cmp125, label %while.cond172, label %lor.rhs127

lor.rhs127:                                       ; preds = %cond.true
  %cmp133 = icmp eq i32 %22, 6
  %phitmp = select i1 %cmp133, i32 2, i32 1
  br label %while.cond172

cond.false:                                       ; preds = %if.then96
  switch i32 %bf.clear122, label %cond.false154 [
    i32 18, label %cond.true141
    i32 24, label %cond.true150
  ]

cond.true141:                                     ; preds = %cond.false
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %23, 25
  %24 = and i32 %and, 1
  %25 = xor i32 %24, 3
  br label %while.cond172

cond.true150:                                     ; preds = %cond.false
  %26 = load i32* @target_flags, align 4, !tbaa !1
  %and151 = lshr i32 %26, 24
  %27 = and i32 %and151, 2
  %28 = xor i32 %27, 6
  br label %while.cond172

cond.false154:                                    ; preds = %cond.false
  %idxprom1583 = zext i32 %bf.clear122 to i64
  %arrayidx159 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1583
  %29 = load i8* %arrayidx159, align 1, !tbaa !15
  %conv160 = zext i8 %29 to i32
  %30 = load i32* @target_flags, align 4, !tbaa !1
  %and161 = lshr i32 %30, 23
  %31 = and i32 %and161, 4
  %32 = add i32 %31, 4
  %add = add i32 %conv160, -1
  %sub = add i32 %add, %32
  %div = sdiv i32 %sub, %32
  br label %while.cond172

while.cond172:                                    ; preds = %cond.true150, %cond.false154, %cond.true141, %lor.rhs127, %cond.true, %while.body175
  %n.0 = phi i32 [ %dec, %while.body175 ], [ %28, %cond.true150 ], [ %div, %cond.false154 ], [ %25, %cond.true141 ], [ %phitmp, %lor.rhs127 ], [ 2, %cond.true ]
  %dec = add nsw i32 %n.0, -1
  %cmp173 = icmp sgt i32 %dec, 0
  br i1 %cmp173, label %while.body175, label %land.lhs.true186

while.body175:                                    ; preds = %while.cond172
  %33 = load %struct.bitmap_head_def** %reg_live, align 8, !tbaa !53
  %add177 = add nsw i32 %dec, %15
  %call178 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %33, i32 %add177) #3
  %tobool179 = icmp eq i32 %call178, 0
  br i1 %tobool179, label %while.cond172, label %return

land.lhs.true186:                                 ; preds = %while.cond172
  %idxprom187 = sext i32 %15 to i64
  %arrayidx188 = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom187
  %34 = load i8* %arrayidx188, align 1, !tbaa !15
  %tobool190 = icmp eq i8 %34, 0
  br i1 %tobool190, label %if.end192, label %return

if.end192:                                        ; preds = %if.end93, %land.lhs.true186
  switch i32 %15, label %if.end221 [
    i32 7, label %return
    i32 20, label %land.lhs.true199
    i32 6, label %land.lhs.true207
    i32 16, label %land.lhs.true215
  ]

land.lhs.true199:                                 ; preds = %if.end192
  %35 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool200 = icmp eq i32 %35, 0
  %36 = load i32* @frame_pointer_needed, align 4
  %tobool202 = icmp ne i32 %36, 0
  %or.cond306 = or i1 %tobool200, %tobool202
  br i1 %or.cond306, label %return, label %if.end221

land.lhs.true207:                                 ; preds = %if.end192
  %37 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool208 = icmp eq i32 %37, 0
  %38 = load i32* @frame_pointer_needed, align 4
  %tobool210 = icmp ne i32 %38, 0
  %or.cond307 = or i1 %tobool208, %tobool210
  br i1 %or.cond307, label %return, label %if.end221

land.lhs.true215:                                 ; preds = %if.end192
  %39 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1, !tbaa !15
  %tobool219 = icmp eq i8 %39, 0
  br i1 %tobool219, label %if.end221, label %return

if.end221:                                        ; preds = %land.lhs.true207, %land.lhs.true199, %if.end192, %land.lhs.true215
  br label %return

if.then227:                                       ; preds = %entry
  %arrayidx229 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx229 to %struct.rtvec_def**
  %40 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %40, i64 0, i32 0
  %41 = load i32* %num_elem, align 4, !tbaa !62
  %cmp23222 = icmp sgt i32 %41, 0
  br i1 %cmp23222, label %for.body234.lr.ph, label %return

for.body234.lr.ph:                                ; preds = %if.then227
  %42 = sext i32 %41 to i64
  br label %for.body234

for.body234:                                      ; preds = %for.cond231.backedge.for.body234_crit_edge, %for.body234.lr.ph
  %43 = phi %struct.rtvec_def* [ %40, %for.body234.lr.ph ], [ %.pre, %for.cond231.backedge.for.body234_crit_edge ]
  %indvars.iv = phi i64 [ %42, %for.body234.lr.ph ], [ %indvars.iv.next, %for.cond231.backedge.for.body234_crit_edge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx239 = getelementptr inbounds %struct.rtvec_def* %43, i64 0, i32 1, i64 %indvars.iv.next
  %44 = load %struct.rtx_def** %arrayidx239, align 8, !tbaa !5
  %45 = getelementptr inbounds %struct.rtx_def* %44, i64 0, i32 0
  %bf.load240 = load i32* %45, align 8
  %46 = and i32 %bf.load240, 65534
  %switch = icmp eq i32 %46, 48
  br i1 %switch, label %for.cond231.backedge, label %land.lhs.true255

land.lhs.true255:                                 ; preds = %for.body234
  %call262 = tail call fastcc i32 @insn_dead_p(%struct.propagate_block_info* %pbi, %struct.rtx_def* %44, i32 %call_ok)
  %tobool263 = icmp eq i32 %call262, 0
  br i1 %tobool263, label %return, label %for.cond231.backedge

for.cond231.backedge:                             ; preds = %land.lhs.true255, %for.body234
  %47 = trunc i64 %indvars.iv.next to i32
  %cmp232 = icmp sgt i32 %47, 0
  br i1 %cmp232, label %for.cond231.backedge.for.body234_crit_edge, label %return

for.cond231.backedge.for.body234_crit_edge:       ; preds = %for.cond231.backedge
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  br label %for.body234

land.lhs.true272:                                 ; preds = %entry
  %arrayidx274 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx275, align 8, !tbaa !5
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load276 = load i32* %49, align 8
  %bf.clear277 = and i32 %bf.load276, 65535
  %cmp278 = icmp eq i32 %bf.clear277, 61
  br i1 %cmp278, label %land.lhs.true280, label %if.end302

land.lhs.true280:                                 ; preds = %land.lhs.true272
  %arrayidx285 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 1, i64 0
  %rtuint286 = bitcast %union.rtunion_def* %arrayidx285 to i32*
  %50 = load i32* %rtuint286, align 4, !tbaa !1
  %cmp287 = icmp ugt i32 %50, 52
  br i1 %cmp287, label %land.lhs.true289, label %if.end302

land.lhs.true289:                                 ; preds = %land.lhs.true280
  %reg_live290 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %51 = load %struct.bitmap_head_def** %reg_live290, align 8, !tbaa !53
  %call297 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %51, i32 %50) #3
  %tobool298 = icmp eq i32 %call297, 0
  br i1 %tobool298, label %return, label %if.end302

if.end302:                                        ; preds = %while.cond, %for.inc, %if.end28, %entry, %land.lhs.true289, %land.lhs.true280, %land.lhs.true272
  br label %return

return:                                           ; preds = %land.lhs.true255, %for.cond231.backedge, %while.body175, %land.lhs.true, %if.then227, %land.lhs.true289, %land.lhs.true215, %if.end192, %land.lhs.true207, %land.lhs.true199, %land.lhs.true186, %if.then87, %if.then19, %if.else, %if.then7, %if.end302, %if.end221
  %retval.0 = phi i32 [ 0, %if.end302 ], [ 1, %if.end221 ], [ 0, %if.then7 ], [ 0, %if.else ], [ 0, %if.then19 ], [ 0, %if.then87 ], [ 0, %land.lhs.true186 ], [ 0, %if.end192 ], [ 0, %land.lhs.true199 ], [ 0, %land.lhs.true207 ], [ 0, %land.lhs.true215 ], [ 1, %land.lhs.true289 ], [ 1, %if.then227 ], [ 1, %land.lhs.true ], [ 0, %while.body175 ], [ 0, %land.lhs.true255 ], [ 1, %for.cond231.backedge ]
  ret i32 %retval.0
}

declare i32 @prologue_epilogue_contains(%struct.rtx_def*) #1

declare i32 @sibcall_epilogue_contains(%struct.rtx_def*) #1

; Function Attrs: noreturn
declare void @_fatal_insn(i8*, %struct.rtx_def*, i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_set_regs(%struct.propagate_block_info* nocapture %pbi, %struct.rtx_def* nocapture readonly %x, %struct.rtx_def* %insn) #0 {
entry:
  %tobool = icmp eq %struct.rtx_def* %insn, null
  br i1 %tobool, label %retry, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %link.0.in113 = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %link.0114 = load %struct.rtx_def** %link.0.in113, align 8
  %tobool1115 = icmp eq %struct.rtx_def* %link.0114, null
  br i1 %tobool1115, label %retry, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %flags = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 9
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %link.0116 = phi %struct.rtx_def* [ %link.0114, %for.body.lr.ph ], [ %link.0, %for.inc ]
  %1 = getelementptr inbounds %struct.rtx_def* %link.0116, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 131072
  br i1 %cmp, label %if.then2, label %for.inc

if.then2:                                         ; preds = %for.body
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %link.0116, i64 0, i32 1, i64 0
  %rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx5, align 8, !tbaa !5
  %bf.load6 = load i32* %0, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 38
  br i1 %cmp8, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.then2
  %3 = load %struct.rtx_def** %rtx11, align 8, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %if.then2, %cond.true
  %cond12 = phi %struct.rtx_def* [ %3, %cond.true ], [ null, %if.then2 ]
  %4 = load i32* %flags, align 4, !tbaa !61
  tail call fastcc void @mark_set_1(%struct.propagate_block_info* %pbi, i32 47, %struct.rtx_def* %2, %struct.rtx_def* %cond12, %struct.rtx_def* %insn, i32 %4)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %cond.end
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %link.0116, i64 0, i32 1, i64 1
  %link.0.in = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**
  %link.0 = load %struct.rtx_def** %link.0.in, align 8
  %tobool1 = icmp eq %struct.rtx_def* %link.0, null
  br i1 %tobool1, label %retry, label %for.body

retry:                                            ; preds = %entry, %if.then, %for.inc, %sw.bb23
  %x.addr.0 = phi %struct.rtx_def* [ %9, %sw.bb23 ], [ %x, %for.inc ], [ %x, %if.then ], [ %x, %entry ]
  %cond.0 = phi %struct.rtx_def* [ %8, %sw.bb23 ], [ null, %for.inc ], [ null, %if.then ], [ null, %entry ]
  %5 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 0
  %bf.load17 = load i32* %5, align 8
  %bf.clear18 = and i32 %bf.load17, 65535
  switch i32 %bf.clear18, label %sw.epilog69 [
    i32 47, label %sw.bb
    i32 49, label %sw.bb
    i32 38, label %sw.bb23
    i32 39, label %sw.bb30
  ]

sw.bb:                                            ; preds = %retry, %retry
  %arrayidx20 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx21, align 8, !tbaa !5
  %flags22 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 9
  %7 = load i32* %flags22, align 4, !tbaa !61
  tail call fastcc void @mark_set_1(%struct.propagate_block_info* %pbi, i32 %bf.clear18, %struct.rtx_def* %6, %struct.rtx_def* %cond.0, %struct.rtx_def* %insn, i32 %7)
  br label %sw.epilog69

sw.bb23:                                          ; preds = %retry
  %fld24 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1
  %rtx26 = bitcast [1 x %union.rtunion_def]* %fld24 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx26, align 8, !tbaa !5
  %arrayidx28 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 1
  %rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx29, align 8, !tbaa !5
  br label %retry

sw.bb30:                                          ; preds = %retry
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtvec_def**
  %10 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %10, i64 0, i32 0
  %11 = load i32* %num_elem, align 4, !tbaa !62
  %flags65 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 9
  br label %for.cond33.outer

for.cond33.outer:                                 ; preds = %if.end46, %sw.bb61, %sw.bb30
  %cond.1.ph = phi %struct.rtx_def* [ %cond.0, %sw.bb30 ], [ %cond.2, %sw.bb61 ], [ %18, %if.end46 ]
  %i.0.in.ph = phi i32 [ %11, %sw.bb30 ], [ %17, %sw.bb61 ], [ %17, %if.end46 ]
  %12 = sext i32 %i.0.in.ph to i64
  br label %for.cond33

for.cond33:                                       ; preds = %for.cond33.outer, %for.body35
  %indvars.iv = phi i64 [ %12, %for.cond33.outer ], [ %indvars.iv.next, %for.body35 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %13 = trunc i64 %indvars.iv to i32
  %cmp34 = icmp sgt i32 %13, 0
  br i1 %cmp34, label %for.body35, label %sw.epilog69

for.body35:                                       ; preds = %for.cond33
  %14 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %arrayidx40 = getelementptr inbounds %struct.rtvec_def* %14, i64 0, i32 1, i64 %indvars.iv.next
  %15 = load %struct.rtx_def** %arrayidx40, align 8, !tbaa !5
  %16 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 0
  %bf.load41 = load i32* %16, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %17 = trunc i64 %indvars.iv.next to i32
  switch i32 %bf.clear42, label %for.cond33 [
    i32 38, label %sw.bb43
    i32 47, label %sw.bb61
    i32 49, label %sw.bb61
  ]

sw.bb43:                                          ; preds = %for.body35
  %cmp44 = icmp eq %struct.rtx_def* %cond.1.ph, null
  br i1 %cmp44, label %if.end46, label %if.then45

if.then45:                                        ; preds = %sw.bb43
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i32 2468, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.mark_set_regs, i64 0, i64 0)) #6
  unreachable

if.end46:                                         ; preds = %sw.bb43
  %fld47 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1
  %rtx49 = bitcast [1 x %union.rtunion_def]* %fld47 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx49, align 8, !tbaa !5
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 1
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx52, align 8, !tbaa !5
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 0
  %bf.load53 = load i32* %20, align 8
  %bf.clear54 = and i32 %bf.load53, 65535
  switch i32 %bf.clear54, label %for.cond33.outer [
    i32 47, label %sw.bb61
    i32 49, label %sw.bb61
  ]

sw.bb61:                                          ; preds = %for.body35, %for.body35, %if.end46, %if.end46
  %bf.clear42123 = phi i32 [ 38, %if.end46 ], [ 38, %if.end46 ], [ %bf.clear42, %for.body35 ], [ %bf.clear42, %for.body35 ]
  %cond.2 = phi %struct.rtx_def* [ %18, %if.end46 ], [ %18, %if.end46 ], [ %cond.1.ph, %for.body35 ], [ %cond.1.ph, %for.body35 ]
  %sub36.0 = phi %struct.rtx_def* [ %19, %if.end46 ], [ %19, %if.end46 ], [ %15, %for.body35 ], [ %15, %for.body35 ]
  %arrayidx63 = getelementptr inbounds %struct.rtx_def* %sub36.0, i64 0, i32 1, i64 0
  %rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx64, align 8, !tbaa !5
  %22 = load i32* %flags65, align 4, !tbaa !61
  tail call fastcc void @mark_set_1(%struct.propagate_block_info* %pbi, i32 %bf.clear42123, %struct.rtx_def* %21, %struct.rtx_def* %cond.2, %struct.rtx_def* %insn, i32 %22)
  br label %for.cond33.outer

sw.epilog69:                                      ; preds = %retry, %for.cond33, %sw.bb
  ret void
}

declare void @free_EXPR_LIST_list(%struct.rtx_def**) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_set_1(%struct.propagate_block_info* nocapture %pbi, i32 %code, %struct.rtx_def* %reg, %struct.rtx_def* readnone %cond, %struct.rtx_def* %insn, i32 %flags) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 39, label %sw.bb
    i32 133, label %do.body
    i32 132, label %do.body
    i32 64, label %do.body
    i32 61, label %sw.bb41
    i32 63, label %sw.bb125
  ]

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %1 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %1, i64 0, i32 0
  %2 = load i32* %num_elem, align 4, !tbaa !62
  %cmp879 = icmp sgt i32 %2, 0
  br i1 %cmp879, label %for.body.lr.ph, label %if.end614

for.body.lr.ph:                                   ; preds = %sw.bb
  %3 = sext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %4 = phi %struct.rtvec_def* [ %1, %for.body.lr.ph ], [ %.pre895, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv892 = phi i64 [ %3, %for.body.lr.ph ], [ %indvars.iv.next893, %for.cond.backedge.for.body_crit_edge ]
  %indvars.iv.next893 = add nsw i64 %indvars.iv892, -1
  %arrayidx4 = getelementptr inbounds %struct.rtvec_def* %4, i64 0, i32 1, i64 %indvars.iv.next893
  %5 = load %struct.rtx_def** %arrayidx4, align 8, !tbaa !5
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp7 = icmp eq %struct.rtx_def* %6, null
  br i1 %cmp7, label %for.cond.backedge, label %if.then

for.cond.backedge:                                ; preds = %for.body, %if.then
  %7 = trunc i64 %indvars.iv.next893 to i32
  %cmp = icmp sgt i32 %7, 0
  br i1 %cmp, label %for.cond.backedge.for.body_crit_edge, label %if.end614

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  %.pre895 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  br label %for.body

if.then:                                          ; preds = %for.body
  tail call fastcc void @mark_set_1(%struct.propagate_block_info* %pbi, i32 %code, %struct.rtx_def* %6, %struct.rtx_def* %cond, %struct.rtx_def* %insn, i32 %flags)
  br label %for.cond.backedge

do.body:                                          ; preds = %do.body, %do.body, %do.body, %do.body, %entry, %entry, %entry
  %reg.addr.0 = phi %struct.rtx_def* [ %reg, %entry ], [ %reg, %entry ], [ %reg, %entry ], [ %8, %do.body ], [ %8, %do.body ], [ %8, %do.body ], [ %8, %do.body ]
  %arrayidx19 = getelementptr inbounds %struct.rtx_def* %reg.addr.0, i64 0, i32 1, i64 0
  %rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx20, align 8, !tbaa !5
  %9 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 0
  %bf.load21 = load i32* %9, align 8
  %bf.clear22 = and i32 %bf.load21, 65535
  switch i32 %bf.clear22, label %if.end38 [
    i32 63, label %do.body
    i32 133, label %do.body
    i32 132, label %do.body
    i32 64, label %do.body
    i32 66, label %sw.epilog
  ]

if.end38:                                         ; preds = %do.body
  %reg_live = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %10 = load %struct.bitmap_head_def** %reg_live, align 8, !tbaa !53
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx40 to i32*
  %11 = load i32* %rtuint, align 4, !tbaa !1
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %11) #3
  %conv = sext i32 %call to i64
  br label %sw.bb41

sw.bb41:                                          ; preds = %entry, %if.end38
  %not_dead.0 = phi i64 [ 0, %entry ], [ %conv, %if.end38 ]
  %reg.addr.1 = phi %struct.rtx_def* [ %reg, %entry ], [ %8, %if.end38 ]
  %arrayidx43 = getelementptr inbounds %struct.rtx_def* %reg.addr.1, i64 0, i32 1, i64 0
  %rtuint44 = bitcast %union.rtunion_def* %arrayidx43 to i32*
  %12 = load i32* %rtuint44, align 4, !tbaa !1
  %cmp45 = icmp slt i32 %12, 53
  br i1 %cmp45, label %if.then47, label %sw.epilog

if.then47:                                        ; preds = %sw.bb41
  %13 = and i32 %12, -8
  %14 = icmp eq i32 %13, 8
  %.off = add i32 %12, -21
  %15 = icmp ult i32 %.off, 8
  %or.cond = or i1 %14, %15
  %.off810 = add i32 %12, -45
  %16 = icmp ult i32 %.off810, 8
  %or.cond817 = or i1 %or.cond, %16
  %.off811 = add i32 %12, -29
  %17 = icmp ult i32 %.off811, 8
  %or.cond819 = or i1 %or.cond817, %17
  %18 = getelementptr inbounds %struct.rtx_def* %reg.addr.1, i64 0, i32 0
  %bf.load70 = load i32* %18, align 8
  %bf.lshr = lshr i32 %bf.load70, 16
  %bf.clear71 = and i32 %bf.lshr, 255
  br i1 %or.cond819, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then47
  %idxprom72813 = zext i32 %bf.clear71 to i64
  %arrayidx73 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom72813
  %19 = load i32* %arrayidx73, align 4, !tbaa !15
  %cmp74 = icmp eq i32 %19, 5
  br i1 %cmp74, label %cond.end120, label %lor.rhs76

lor.rhs76:                                        ; preds = %cond.true
  %cmp82 = icmp eq i32 %19, 6
  %phitmp814 = select i1 %cmp82, i32 2, i32 1
  br label %cond.end120

cond.false:                                       ; preds = %if.then47
  switch i32 %bf.clear71, label %cond.false103 [
    i32 18, label %cond.true91
    i32 24, label %cond.true99
  ]

cond.true91:                                      ; preds = %cond.false
  %20 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %20, 25
  %21 = and i32 %and, 1
  %22 = xor i32 %21, 3
  br label %cond.end120

cond.true99:                                      ; preds = %cond.false
  %23 = load i32* @target_flags, align 4, !tbaa !1
  %and100 = lshr i32 %23, 24
  %24 = and i32 %and100, 2
  %25 = xor i32 %24, 6
  br label %cond.end120

cond.false103:                                    ; preds = %cond.false
  %idxprom107812 = zext i32 %bf.clear71 to i64
  %arrayidx108 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom107812
  %26 = load i8* %arrayidx108, align 1, !tbaa !15
  %conv109 = zext i8 %26 to i32
  %27 = load i32* @target_flags, align 4, !tbaa !1
  %and110 = lshr i32 %27, 23
  %28 = and i32 %and110, 4
  %29 = add i32 %28, 4
  %add = add i32 %conv109, -1
  %sub113 = add i32 %add, %29
  %div = sdiv i32 %sub113, %29
  br label %cond.end120

cond.end120:                                      ; preds = %cond.true, %lor.rhs76, %cond.true91, %cond.false103, %cond.true99
  %cond121 = phi i32 [ %22, %cond.true91 ], [ %25, %cond.true99 ], [ %div, %cond.false103 ], [ 2, %cond.true ], [ %phitmp814, %lor.rhs76 ]
  %sub122 = add i32 %12, -1
  %add123 = add i32 %sub122, %cond121
  br label %sw.epilog

sw.bb125:                                         ; preds = %entry
  %fld126 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1
  %rtx128 = bitcast [1 x %union.rtunion_def]* %fld126 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx128, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 0
  %bf.load129 = load i32* %31, align 8
  %bf.clear130 = and i32 %bf.load129, 65535
  %cmp131 = icmp eq i32 %bf.clear130, 61
  br i1 %cmp131, label %if.then133, label %sw.epilog

if.then133:                                       ; preds = %sw.bb125
  %bf.lshr135 = lshr i32 %bf.load, 16
  %bf.clear136 = and i32 %bf.lshr135, 255
  %bf.lshr141 = lshr i32 %bf.load129, 16
  %bf.clear142 = and i32 %bf.lshr141, 255
  %arrayidx147 = getelementptr inbounds %struct.rtx_def* %30, i64 0, i32 1, i64 0
  %rtuint148 = bitcast %union.rtunion_def* %arrayidx147 to i32*
  %32 = load i32* %rtuint148, align 4, !tbaa !1
  %cmp149 = icmp slt i32 %32, 53
  br i1 %cmp149, label %if.then151, label %if.else

if.then151:                                       ; preds = %if.then133
  %arrayidx153 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 1
  %rtuint154 = bitcast %union.rtunion_def* %arrayidx153 to i32*
  %33 = load i32* %rtuint154, align 4, !tbaa !1
  %call155 = tail call i32 @subreg_regno_offset(i32 %32, i32 %bf.clear142, i32 %33, i32 %bf.clear136) #3
  %add156 = add i32 %call155, %32
  %34 = and i32 %add156, -8
  %35 = icmp eq i32 %34, 8
  %add156.off = add i32 %add156, -21
  %36 = icmp ult i32 %add156.off, 8
  %or.cond821 = or i1 %35, %36
  %add156.off806 = add i32 %add156, -45
  %37 = icmp ult i32 %add156.off806, 8
  %or.cond823 = or i1 %or.cond821, %37
  %add156.off807 = add i32 %add156, -29
  %38 = icmp ult i32 %add156.off807, 8
  %or.cond825 = or i1 %or.cond823, %38
  br i1 %or.cond825, label %cond.true180, label %cond.false192

cond.true180:                                     ; preds = %if.then151
  %idxprom181809 = zext i32 %bf.clear136 to i64
  %arrayidx182 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom181809
  %39 = load i32* %arrayidx182, align 4, !tbaa !15
  %cmp183 = icmp eq i32 %39, 5
  br i1 %cmp183, label %cond.end223, label %lor.rhs185

lor.rhs185:                                       ; preds = %cond.true180
  %cmp188 = icmp eq i32 %39, 6
  %phitmp = select i1 %cmp188, i32 2, i32 1
  br label %cond.end223

cond.false192:                                    ; preds = %if.then151
  switch i32 %bf.clear136, label %cond.false206 [
    i32 18, label %cond.true195
    i32 24, label %cond.true202
  ]

cond.true195:                                     ; preds = %cond.false192
  %40 = load i32* @target_flags, align 4, !tbaa !1
  %and196 = lshr i32 %40, 25
  %41 = and i32 %and196, 1
  %42 = xor i32 %41, 3
  br label %cond.end223

cond.true202:                                     ; preds = %cond.false192
  %43 = load i32* @target_flags, align 4, !tbaa !1
  %and203 = lshr i32 %43, 24
  %44 = and i32 %and203, 2
  %45 = xor i32 %44, 6
  br label %cond.end223

cond.false206:                                    ; preds = %cond.false192
  %idxprom207808 = zext i32 %bf.clear136 to i64
  %arrayidx208 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom207808
  %46 = load i8* %arrayidx208, align 1, !tbaa !15
  %conv209 = zext i8 %46 to i32
  %47 = load i32* @target_flags, align 4, !tbaa !1
  %and210 = lshr i32 %47, 23
  %48 = and i32 %and210, 4
  %49 = add i32 %48, 4
  %add213 = add i32 %conv209, -1
  %sub214 = add i32 %add213, %49
  %div218 = sdiv i32 %sub214, %49
  br label %cond.end223

cond.end223:                                      ; preds = %cond.true180, %lor.rhs185, %cond.true195, %cond.false206, %cond.true202
  %cond224 = phi i32 [ %42, %cond.true195 ], [ %45, %cond.true202 ], [ %div218, %cond.false206 ], [ 2, %cond.true180 ], [ %phitmp, %lor.rhs185 ]
  %add225 = add i32 %add156, -1
  %sub226 = add i32 %add225, %cond224
  %call227 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear136, i32 %add156) #3
  br label %sw.epilog

if.else:                                          ; preds = %if.then133
  %idxprom228804 = zext i32 %bf.clear136 to i64
  %arrayidx229 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom228804
  %50 = load i8* %arrayidx229, align 1, !tbaa !15
  %conv230 = zext i8 %50 to i32
  %51 = load i32* @target_flags, align 4, !tbaa !1
  %and231 = lshr i32 %51, 23
  %52 = and i32 %and231, 4
  %53 = add i32 %52, 4
  %add234 = add i32 %conv230, -1
  %sub235 = add i32 %add234, %53
  %div239 = sdiv i32 %sub235, %53
  %idxprom240805 = zext i32 %bf.clear142 to i64
  %arrayidx241 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom240805
  %54 = load i8* %arrayidx241, align 1, !tbaa !15
  %conv242 = zext i8 %54 to i32
  %add246881 = or i32 %52, 3
  %sub247 = add i32 %add246881, %conv242
  %div251 = sdiv i32 %sub247, %53
  %cmp252 = icmp slt i32 %div239, %div251
  br i1 %cmp252, label %if.then254, label %sw.epilog

if.then254:                                       ; preds = %if.else
  %reg_live255 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %55 = load %struct.bitmap_head_def** %reg_live255, align 8, !tbaa !53
  %call256 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %55, i32 %32) #3
  %conv257 = sext i32 %call256 to i64
  %.pre896 = load %struct.rtx_def** %rtx128, align 8, !tbaa !5
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.body, %if.else, %if.then254, %sw.bb125, %entry, %cond.end223, %sw.bb41, %cond.end120
  %not_dead.2 = phi i64 [ 0, %entry ], [ 0, %cond.end223 ], [ %not_dead.0, %cond.end120 ], [ %not_dead.0, %sw.bb41 ], [ 0, %sw.bb125 ], [ %conv257, %if.then254 ], [ 0, %if.else ], [ 0, %do.body ]
  %regno_last.0 = phi i32 [ -1, %entry ], [ %sub226, %cond.end223 ], [ %add123, %cond.end120 ], [ %12, %sw.bb41 ], [ -1, %sw.bb125 ], [ %32, %if.then254 ], [ %32, %if.else ], [ -1, %do.body ]
  %regno_first.0 = phi i32 [ -1, %entry ], [ %add156, %cond.end223 ], [ %12, %cond.end120 ], [ %12, %sw.bb41 ], [ -1, %sw.bb125 ], [ %32, %if.then254 ], [ %32, %if.else ], [ -1, %do.body ]
  %reg.addr.2 = phi %struct.rtx_def* [ %reg, %entry ], [ %call227, %cond.end223 ], [ %reg.addr.1, %cond.end120 ], [ %reg.addr.1, %sw.bb41 ], [ %30, %sw.bb125 ], [ %.pre896, %if.then254 ], [ %30, %if.else ], [ %8, %do.body ]
  %56 = load i32* @optimize, align 4, !tbaa !1
  %tobool268 = icmp eq i32 %56, 0
  %and270 = and i32 %flags, 16
  %tobool271 = icmp eq i32 %and270, 0
  %or.cond826 = or i1 %tobool268, %tobool271
  %.pre897 = getelementptr inbounds %struct.rtx_def* %reg.addr.2, i64 0, i32 0
  br i1 %or.cond826, label %if.end302, label %if.then272

if.then272:                                       ; preds = %sw.epilog
  %bf.load273 = load i32* %.pre897, align 8
  %bf.clear274 = and i32 %bf.load273, 65535
  %cmp275 = icmp eq i32 %bf.clear274, 61
  br i1 %cmp275, label %if.then277, label %if.end278

if.then277:                                       ; preds = %if.then272
  tail call fastcc void @invalidate_mems_from_set(%struct.propagate_block_info* %pbi, %struct.rtx_def* %reg.addr.2)
  br label %if.end278

if.end278:                                        ; preds = %if.then277, %if.then272
  %tobool279 = icmp eq %struct.rtx_def* %insn, null
  br i1 %tobool279, label %if.end286, label %land.lhs.true280

land.lhs.true280:                                 ; preds = %if.end278
  %bf.load281 = load i32* %.pre897, align 8
  %bf.clear282 = and i32 %bf.load281, 65535
  %cmp283 = icmp eq i32 %bf.clear282, 66
  br i1 %cmp283, label %if.then285, label %if.end286

if.then285:                                       ; preds = %land.lhs.true280
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %note.0.in14.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %note.015.i = load %struct.rtx_def** %note.0.in14.i, align 8
  %tobool16.i = icmp eq %struct.rtx_def* %note.015.i, null
  br i1 %tobool16.i, label %if.end286, label %for.body.i830

for.body.i830:                                    ; preds = %if.then285, %for.inc.i834
  %note.017.i = phi %struct.rtx_def* [ %note.0.i, %for.inc.i834 ], [ %note.015.i, %if.then285 ]
  %57 = getelementptr inbounds %struct.rtx_def* %note.017.i, i64 0, i32 0
  %bf.load.i827 = load i32* %57, align 8
  %bf.clear.i828 = and i32 %bf.load.i827, 16711680
  %cmp.i829 = icmp eq i32 %bf.clear.i828, 131072
  br i1 %cmp.i829, label %if.then.i, label %for.inc.i834

if.then.i:                                        ; preds = %for.body.i830
  %arrayidx5.i831 = getelementptr inbounds %struct.rtx_def* %note.017.i, i64 0, i32 1, i64 0
  %rtx6.i832 = bitcast %union.rtunion_def* %arrayidx5.i831 to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx6.i832, align 8, !tbaa !5
  tail call fastcc void @invalidate_mems_from_set(%struct.propagate_block_info* %pbi, %struct.rtx_def* %58) #3
  br label %for.inc.i834

for.inc.i834:                                     ; preds = %if.then.i, %for.body.i830
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %note.017.i, i64 0, i32 1, i64 1
  %note.0.in.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtx_def**
  %note.0.i = load %struct.rtx_def** %note.0.in.i, align 8
  %tobool.i833 = icmp eq %struct.rtx_def* %note.0.i, null
  br i1 %tobool.i833, label %if.end286, label %for.body.i830

if.end286:                                        ; preds = %for.inc.i834, %if.then285, %if.end278, %land.lhs.true280
  %bf.load287 = load i32* %.pre897, align 8
  %bf.clear288 = and i32 %bf.load287, 65535
  %cmp289 = icmp eq i32 %bf.clear288, 66
  br i1 %cmp289, label %land.lhs.true291, label %if.end302

land.lhs.true291:                                 ; preds = %if.end286
  %call292 = tail call i32 @side_effects_p(%struct.rtx_def* %reg.addr.2) #3
  %tobool293 = icmp ne i32 %call292, 0
  %tobool295 = icmp ne %struct.rtx_def* %cond, null
  %or.cond624 = or i1 %tobool293, %tobool295
  br i1 %or.cond624, label %if.end302, label %land.lhs.true296

land.lhs.true296:                                 ; preds = %land.lhs.true291
  %59 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !5
  %call297 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %59, %struct.rtx_def* %reg.addr.2) #3
  %tobool298 = icmp eq i32 %call297, 0
  br i1 %tobool298, label %if.then299, label %if.end302

if.then299:                                       ; preds = %land.lhs.true296
  %call300 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %reg.addr.2) #3
  %60 = getelementptr inbounds %struct.rtx_def* %call300, i64 0, i32 0
  %bf.load.i = load i32* %60, align 8
  %bf.clear.i = and i32 %bf.load.i, 16711680
  %cmp.i = icmp eq i32 %bf.clear.i, 3342336
  br i1 %cmp.i, label %if.end302, label %if.end.i

if.end.i:                                         ; preds = %if.then299
  %mem_set_list.i = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 4
  %i.052.i = load %struct.rtx_def** %mem_set_list.i, align 8
  %tobool53.i = icmp eq %struct.rtx_def* %i.052.i, null
  br i1 %tobool53.i, label %for.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %arrayidx2.i = getelementptr inbounds %struct.rtx_def* %call300, i64 0, i32 1, i64 0
  %rtx3.i = bitcast %union.rtunion_def* %arrayidx2.i to %struct.rtx_def**
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %i.054.i = phi %struct.rtx_def* [ %i.052.i, %for.body.lr.ph.i ], [ %i.0.i, %for.inc.i ]
  %fld.i = getelementptr inbounds %struct.rtx_def* %i.054.i, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %62 = load %struct.rtx_def** %rtx3.i, align 8, !tbaa !5
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 1, i64 0
  %rtx6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtx_def**
  %63 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !5
  %call.i = tail call i32 @rtx_equal_p(%struct.rtx_def* %62, %struct.rtx_def* %63) #3
  %tobool7.i = icmp eq i32 %call.i, 0
  br i1 %tobool7.i, label %for.inc.i, label %if.then8.i

if.then8.i:                                       ; preds = %for.body.i
  %bf.load9.i = load i32* %60, align 8
  %bf.lshr10.i = lshr i32 %bf.load9.i, 16
  %bf.clear11.i = and i32 %bf.lshr10.i, 255
  %idxprom50.i = zext i32 %bf.clear11.i to i64
  %arrayidx12.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom50.i
  %64 = load i8* %arrayidx12.i, align 1, !tbaa !15
  %65 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 0
  %bf.load13.i = load i32* %65, align 8
  %bf.lshr14.i = lshr i32 %bf.load13.i, 16
  %bf.clear15.i = and i32 %bf.lshr14.i, 255
  %idxprom1651.i = zext i32 %bf.clear15.i to i64
  %arrayidx17.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1651.i
  %66 = load i8* %arrayidx17.i, align 1, !tbaa !15
  %cmp19.i = icmp ugt i8 %64, %66
  br i1 %cmp19.i, label %if.then21.i, label %if.end302

if.then21.i:                                      ; preds = %if.then8.i
  %67 = getelementptr inbounds [1 x %union.rtunion_def]* %fld.i, i64 0, i64 0, i32 0
  %mem.c.i = ptrtoint %struct.rtx_def* %call300 to i64
  store i64 %mem.c.i, i64* %67, align 8, !tbaa !5
  br label %if.end302

for.inc.i:                                        ; preds = %for.body.i
  %arrayidx28.i = getelementptr inbounds %struct.rtx_def* %i.054.i, i64 0, i32 1, i64 1
  %rtx29.i = bitcast %union.rtunion_def* %arrayidx28.i to %struct.rtx_def**
  %i.0.i = load %struct.rtx_def** %rtx29.i, align 8
  %tobool.i = icmp eq %struct.rtx_def* %i.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.inc.i, %if.end.i
  %mem_set_list_len.i = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 7
  %68 = load i32* %mem_set_list_len.i, align 4, !tbaa !68
  %cmp30.i = icmp slt i32 %68, 100
  br i1 %cmp30.i, label %if.then32.i, label %if.end302

if.then32.i:                                      ; preds = %for.end.i
  %69 = load %struct.rtx_def** %mem_set_list.i, align 8, !tbaa !69
  %call34.i = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call300, %struct.rtx_def* %69) #3
  store %struct.rtx_def* %call34.i, %struct.rtx_def** %mem_set_list.i, align 8, !tbaa !69
  %70 = load i32* %mem_set_list_len.i, align 4, !tbaa !68
  %inc.i = add nsw i32 %70, 1
  store i32 %inc.i, i32* %mem_set_list_len.i, align 4, !tbaa !68
  br label %if.end302

if.end302:                                        ; preds = %sw.epilog, %if.then32.i, %for.end.i, %if.then21.i, %if.then8.i, %if.then299, %land.lhs.true296, %if.end286, %land.lhs.true291
  %bf.load303 = load i32* %.pre897, align 8
  %bf.clear304 = and i32 %bf.load303, 65535
  switch i32 %bf.clear304, label %if.end614 [
    i32 61, label %land.lhs.true307
    i32 62, label %if.then600
  ]

land.lhs.true307:                                 ; preds = %if.end302
  switch i32 %regno_first.0, label %for.cond330.preheader [
    i32 20, label %land.lhs.true310
    i32 6, label %land.lhs.true317
    i32 16, label %land.lhs.true324
  ]

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %71 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool311 = icmp eq i32 %71, 0
  %72 = load i32* @frame_pointer_needed, align 4
  %tobool313 = icmp ne i32 %72, 0
  %or.cond625 = or i1 %tobool311, %tobool313
  br i1 %or.cond625, label %if.then587, label %for.cond330.preheader

land.lhs.true317:                                 ; preds = %land.lhs.true307
  %73 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool318 = icmp eq i32 %73, 0
  %74 = load i32* @frame_pointer_needed, align 4
  %tobool320 = icmp ne i32 %74, 0
  %or.cond626 = or i1 %tobool318, %tobool320
  br i1 %or.cond626, label %if.then587, label %for.cond330.preheader

land.lhs.true324:                                 ; preds = %land.lhs.true307
  %75 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1, !tbaa !15
  %tobool328 = icmp eq i8 %75, 0
  br i1 %tobool328, label %for.cond330.preheader, label %if.else582

for.cond330.preheader:                            ; preds = %land.lhs.true307, %land.lhs.true324, %land.lhs.true310, %land.lhs.true317
  %i.1.ph = phi i32 [ 6, %land.lhs.true317 ], [ 20, %land.lhs.true310 ], [ 16, %land.lhs.true324 ], [ %regno_first.0, %land.lhs.true307 ]
  %cmp331852 = icmp sgt i32 %i.1.ph, %regno_last.0
  br i1 %cmp331852, label %for.end357, label %for.body333.lr.ph

for.body333.lr.ph:                                ; preds = %for.cond330.preheader
  %reg_live334 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %local_set = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 5
  %cmp350 = icmp eq i32 %code, 49
  %new_set = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 2
  %cond_local_set = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 6
  %cmp338 = icmp eq %struct.rtx_def* %cond, null
  br i1 %cmp338, label %for.body333.us, label %for.body333.lr.ph.for.body333.lr.ph.split_crit_edge

for.body333.lr.ph.for.body333.lr.ph.split_crit_edge: ; preds = %for.body333.lr.ph
  br i1 %cmp350, label %for.body333.us857, label %for.body333

for.body333.us:                                   ; preds = %for.body333.lr.ph, %if.end353.us
  %some_was_dead.0855.us = phi i32 [ %or355.us, %if.end353.us ], [ 0, %for.body333.lr.ph ]
  %some_was_live.0854.us = phi i32 [ %or.us, %if.end353.us ], [ 0, %for.body333.lr.ph ]
  %i.1853.us = phi i32 [ %inc.us, %if.end353.us ], [ %i.1.ph, %for.body333.lr.ph ]
  %76 = load %struct.bitmap_head_def** %reg_live334, align 8, !tbaa !53
  %call335.us = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %76, i32 %i.1853.us) #3
  %77 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !70
  %tobool336.us = icmp eq %struct.bitmap_head_def* %77, null
  br i1 %tobool336.us, label %if.end349.us, label %if.else346.us

if.else346.us:                                    ; preds = %for.body333.us
  %78 = load %struct.bitmap_head_def** %cond_local_set, align 8, !tbaa !71
  tail call void @bitmap_clear_bit(%struct.bitmap_head_def* %78, i32 %i.1853.us) #3
  %79 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !70
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %79, i32 %i.1853.us) #3
  br label %if.end349.us

if.end349.us:                                     ; preds = %if.else346.us, %for.body333.us
  br i1 %cmp350, label %if.end353.us, label %if.then352.us

if.then352.us:                                    ; preds = %if.end349.us
  %80 = load %struct.bitmap_head_def** %new_set, align 8, !tbaa !55
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %80, i32 %i.1853.us) #3
  br label %if.end353.us

if.end353.us:                                     ; preds = %if.then352.us, %if.end349.us
  %or.us = or i32 %call335.us, %some_was_live.0854.us
  %lnot.us = icmp eq i32 %call335.us, 0
  %lnot.ext.us = zext i1 %lnot.us to i32
  %or355.us = or i32 %lnot.ext.us, %some_was_dead.0855.us
  %inc.us = add nsw i32 %i.1853.us, 1
  %cmp331.us = icmp slt i32 %i.1853.us, %regno_last.0
  br i1 %cmp331.us, label %for.body333.us, label %for.end357

for.body333.us857:                                ; preds = %for.body333.lr.ph.for.body333.lr.ph.split_crit_edge, %if.end353.us871
  %some_was_dead.0855.us858 = phi i32 [ %or355.us875, %if.end353.us871 ], [ 0, %for.body333.lr.ph.for.body333.lr.ph.split_crit_edge ]
  %some_was_live.0854.us859 = phi i32 [ %or.us872, %if.end353.us871 ], [ 0, %for.body333.lr.ph.for.body333.lr.ph.split_crit_edge ]
  %i.1853.us860 = phi i32 [ %inc.us876, %if.end353.us871 ], [ %i.1.ph, %for.body333.lr.ph.for.body333.lr.ph.split_crit_edge ]
  %81 = load %struct.bitmap_head_def** %reg_live334, align 8, !tbaa !53
  %call335.us861 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %81, i32 %i.1853.us860) #3
  %82 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !70
  %tobool336.us862 = icmp eq %struct.bitmap_head_def* %82, null
  br i1 %tobool336.us862, label %if.end353.us871, label %land.lhs.true340.us864

land.lhs.true340.us864:                           ; preds = %for.body333.us857
  %83 = load %struct.bitmap_head_def** %cond_local_set, align 8, !tbaa !71
  tail call void @bitmap_clear_bit(%struct.bitmap_head_def* %83, i32 %i.1853.us860) #3
  %84 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !70
  %call342.us865 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %84, i32 %i.1853.us860) #3
  %tobool343.us866 = icmp eq i32 %call342.us865, 0
  br i1 %tobool343.us866, label %if.then344.us867, label %if.else346.us868

if.then344.us867:                                 ; preds = %land.lhs.true340.us864
  %85 = load %struct.bitmap_head_def** %cond_local_set, align 8, !tbaa !71
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %85, i32 %i.1853.us860) #3
  br label %if.end353.us871

if.else346.us868:                                 ; preds = %land.lhs.true340.us864
  %86 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !70
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %86, i32 %i.1853.us860) #3
  br label %if.end353.us871

if.end353.us871:                                  ; preds = %for.body333.us857, %if.then344.us867, %if.else346.us868
  %or.us872 = or i32 %call335.us861, %some_was_live.0854.us859
  %lnot.us873 = icmp eq i32 %call335.us861, 0
  %lnot.ext.us874 = zext i1 %lnot.us873 to i32
  %or355.us875 = or i32 %lnot.ext.us874, %some_was_dead.0855.us858
  %inc.us876 = add nsw i32 %i.1853.us860, 1
  %cmp331.us877 = icmp slt i32 %i.1853.us860, %regno_last.0
  br i1 %cmp331.us877, label %for.body333.us857, label %for.end357

for.body333:                                      ; preds = %for.body333.lr.ph.for.body333.lr.ph.split_crit_edge, %if.end353
  %some_was_dead.0855 = phi i32 [ %or355, %if.end353 ], [ 0, %for.body333.lr.ph.for.body333.lr.ph.split_crit_edge ]
  %some_was_live.0854 = phi i32 [ %or, %if.end353 ], [ 0, %for.body333.lr.ph.for.body333.lr.ph.split_crit_edge ]
  %i.1853 = phi i32 [ %inc, %if.end353 ], [ %i.1.ph, %for.body333.lr.ph.for.body333.lr.ph.split_crit_edge ]
  %87 = load %struct.bitmap_head_def** %reg_live334, align 8, !tbaa !53
  %call335 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %87, i32 %i.1853) #3
  %88 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !70
  %tobool336 = icmp eq %struct.bitmap_head_def* %88, null
  br i1 %tobool336, label %if.end353, label %land.lhs.true340

land.lhs.true340:                                 ; preds = %for.body333
  %89 = load %struct.bitmap_head_def** %cond_local_set, align 8, !tbaa !71
  tail call void @bitmap_clear_bit(%struct.bitmap_head_def* %89, i32 %i.1853) #3
  %90 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !70
  %call342 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %90, i32 %i.1853) #3
  %tobool343 = icmp eq i32 %call342, 0
  br i1 %tobool343, label %if.then344, label %if.else346

if.then344:                                       ; preds = %land.lhs.true340
  %91 = load %struct.bitmap_head_def** %cond_local_set, align 8, !tbaa !71
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %91, i32 %i.1853) #3
  br label %if.end353

if.else346:                                       ; preds = %land.lhs.true340
  %92 = load %struct.bitmap_head_def** %local_set, align 8, !tbaa !70
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %92, i32 %i.1853) #3
  br label %if.end353

if.end353:                                        ; preds = %for.body333, %if.then344, %if.else346
  %93 = load %struct.bitmap_head_def** %new_set, align 8, !tbaa !55
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %93, i32 %i.1853) #3
  %or = or i32 %call335, %some_was_live.0854
  %lnot = icmp eq i32 %call335, 0
  %lnot.ext = zext i1 %lnot to i32
  %or355 = or i32 %lnot.ext, %some_was_dead.0855
  %inc = add nsw i32 %i.1853, 1
  %cmp331 = icmp slt i32 %i.1853, %regno_last.0
  br i1 %cmp331, label %for.body333, label %for.end357

for.end357:                                       ; preds = %if.end353, %if.end353.us871, %if.end353.us, %for.cond330.preheader
  %some_was_dead.0.lcssa = phi i32 [ 0, %for.cond330.preheader ], [ %or355.us, %if.end353.us ], [ %or355.us875, %if.end353.us871 ], [ %or355, %if.end353 ]
  %some_was_live.0.lcssa = phi i32 [ 0, %for.cond330.preheader ], [ %or.us, %if.end353.us ], [ %or.us872, %if.end353.us871 ], [ %or, %if.end353 ]
  %and358 = and i32 %flags, 71
  %tobool359 = icmp eq i32 %and358, 0
  br i1 %tobool359, label %if.end562, label %if.then360

if.then360:                                       ; preds = %for.end357
  %bb = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 0
  %94 = load %struct.basic_block_def** %bb, align 8, !tbaa !67
  %index = getelementptr inbounds %struct.basic_block_def* %94, i64 0, i32 11
  %95 = load i32* %index, align 4, !tbaa !43
  %and361 = and i32 %flags, 66
  %tobool362 = icmp eq i32 %and361, 0
  br i1 %tobool362, label %if.end376, label %if.then363

if.then363:                                       ; preds = %if.then360
  %idxprom364 = sext i32 %regno_first.0 to i64
  %reg_next_use = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 3
  %96 = load %struct.rtx_def*** %reg_next_use, align 8, !tbaa !56
  %arrayidx365 = getelementptr inbounds %struct.rtx_def** %96, i64 %idxprom364
  %97 = load %struct.rtx_def** %arrayidx365, align 8, !tbaa !5
  %cmp367850 = icmp slt i32 %regno_last.0, %regno_first.0
  br i1 %cmp367850, label %if.end376, label %for.body369

for.body369:                                      ; preds = %if.then363, %for.body369.for.body369_crit_edge
  %98 = phi %struct.rtx_def** [ %.pre894, %for.body369.for.body369_crit_edge ], [ %96, %if.then363 ]
  %indvars.iv890 = phi i64 [ %indvars.iv.next891, %for.body369.for.body369_crit_edge ], [ %idxprom364, %if.then363 ]
  %arrayidx372 = getelementptr inbounds %struct.rtx_def** %98, i64 %indvars.iv890
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx372, align 8, !tbaa !5
  %99 = trunc i64 %indvars.iv890 to i32
  %cmp367 = icmp slt i32 %99, %regno_last.0
  br i1 %cmp367, label %for.body369.for.body369_crit_edge, label %if.end376

for.body369.for.body369_crit_edge:                ; preds = %for.body369
  %indvars.iv.next891 = add nsw i64 %indvars.iv890, 1
  %.pre894 = load %struct.rtx_def*** %reg_next_use, align 8, !tbaa !56
  br label %for.body369

if.end376:                                        ; preds = %for.body369, %if.then363, %if.then360
  %y.0 = phi %struct.rtx_def* [ null, %if.then360 ], [ %97, %if.then363 ], [ %97, %for.body369 ]
  %and377 = and i32 %flags, 4
  %tobool378 = icmp ne i32 %and377, 0
  br i1 %tobool378, label %for.cond380.preheader, label %if.end468

for.cond380.preheader:                            ; preds = %if.end376
  %cmp381848 = icmp slt i32 %regno_last.0, %regno_first.0
  br i1 %cmp381848, label %for.end425, label %for.body383.lr.ph

for.body383.lr.ph:                                ; preds = %for.cond380.preheader
  %100 = sext i32 %regno_first.0 to i64
  %.pre = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  br label %for.body383

for.body383:                                      ; preds = %cond.end411, %for.body383.lr.ph
  %indvars.iv888 = phi i64 [ %indvars.iv.next889, %cond.end411 ], [ %100, %for.body383.lr.ph ]
  %data = getelementptr inbounds %struct.varray_head_tag* %.pre, i64 0, i32 4
  %reg385 = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx386 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg385, i64 0, i64 %indvars.iv888
  %101 = load %struct.reg_info_def** %arrayidx386, align 8, !tbaa !5
  %sets = getelementptr inbounds %struct.reg_info_def* %101, i64 0, i32 3
  %102 = load i32* %sets, align 4, !tbaa !16
  %add387 = add nsw i32 %102, 1
  store i32 %add387, i32* %sets, align 4, !tbaa !16
  %refs = getelementptr inbounds %struct.reg_info_def* %101, i64 0, i32 4
  %103 = load i32* %refs, align 4, !tbaa !18
  %add392 = add nsw i32 %103, 1
  store i32 %add392, i32* %refs, align 4, !tbaa !18
  %104 = load i32* @optimize_size, align 4, !tbaa !1
  %tobool393 = icmp eq i32 %104, 0
  br i1 %tobool393, label %lor.lhs.false394, label %cond.end411

lor.lhs.false394:                                 ; preds = %for.body383
  %105 = load i32* @flag_branch_probabilities, align 4, !tbaa !1
  %tobool395 = icmp eq i32 %105, 0
  %106 = load i64* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 13), align 8
  %tobool397 = icmp ne i64 %106, 0
  %or.cond627 = or i1 %tobool395, %tobool397
  br i1 %or.cond627, label %cond.false399, label %cond.end411

cond.false399:                                    ; preds = %lor.lhs.false394
  %107 = load %struct.basic_block_def** %bb, align 8, !tbaa !67
  %frequency = getelementptr inbounds %struct.basic_block_def* %107, i64 0, i32 14
  %108 = load i32* %frequency, align 4, !tbaa !72
  %mul = mul nsw i32 %108, 1000
  %mul.off = add i32 %mul, 9999
  %109 = icmp ugt i32 %mul.off, 19998
  br i1 %109, label %cond.true403, label %cond.end411

cond.true403:                                     ; preds = %cond.false399
  %div401 = sdiv i32 %mul, 10000
  br label %cond.end411

cond.end411:                                      ; preds = %for.body383, %cond.true403, %cond.false399, %lor.lhs.false394
  %cond412 = phi i32 [ 1000, %lor.lhs.false394 ], [ 1000, %for.body383 ], [ %div401, %cond.true403 ], [ 1, %cond.false399 ]
  %freq = getelementptr inbounds %struct.reg_info_def* %101, i64 0, i32 5
  %110 = load i32* %freq, align 4, !tbaa !73
  %add417 = add nsw i32 %110, %cond412
  store i32 %add417, i32* %freq, align 4, !tbaa !73
  %live_length = getelementptr inbounds %struct.reg_info_def* %101, i64 0, i32 7
  %111 = load i32* %live_length, align 4, !tbaa !21
  %add422 = add nsw i32 %111, 1
  store i32 %add422, i32* %live_length, align 4, !tbaa !21
  %indvars.iv.next889 = add nsw i64 %indvars.iv888, 1
  %112 = trunc i64 %indvars.iv888 to i32
  %cmp381 = icmp slt i32 %112, %regno_last.0
  br i1 %cmp381, label %for.body383, label %for.end425

for.end425:                                       ; preds = %cond.end411, %for.cond380.preheader
  %cmp426 = icmp slt i32 %regno_first.0, 53
  br i1 %cmp426, label %for.cond429.preheader, label %if.else438

for.cond429.preheader:                            ; preds = %for.end425
  br i1 %cmp381848, label %if.end468, label %for.body432.lr.ph

for.body432.lr.ph:                                ; preds = %for.cond429.preheader
  %113 = sext i32 %regno_first.0 to i64
  %scevgep = getelementptr [53 x i8]* @regs_ever_live, i64 0, i64 %113
  %114 = sub i32 %regno_last.0, %regno_first.0
  %115 = zext i32 %114 to i64
  %116 = add i64 %115, 1
  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 1, i64 %116, i32 1, i1 false)
  br label %if.end468

if.else438:                                       ; preds = %for.end425
  %idxprom439 = sext i32 %regno_first.0 to i64
  %117 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data440 = getelementptr inbounds %struct.varray_head_tag* %117, i64 0, i32 4
  %reg441 = bitcast %union.varray_data_tag* %data440 to [1 x %struct.reg_info_def*]*
  %arrayidx442 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg441, i64 0, i64 %idxprom439
  %118 = load %struct.reg_info_def** %arrayidx442, align 8, !tbaa !5
  %basic_block = getelementptr inbounds %struct.reg_info_def* %118, i64 0, i32 9
  %119 = load i32* %basic_block, align 4, !tbaa !22
  %cmp443 = icmp eq i32 %119, -1
  br i1 %cmp443, label %if.then445, label %if.else451

if.then445:                                       ; preds = %if.else438
  store i32 %95, i32* %basic_block, align 4, !tbaa !22
  br label %if.end468

if.else451:                                       ; preds = %if.else438
  %cmp457 = icmp eq i32 %119, %95
  br i1 %cmp457, label %if.end468, label %if.then459

if.then459:                                       ; preds = %if.else451
  store i32 -2, i32* %basic_block, align 4, !tbaa !22
  br label %if.end468

if.end468:                                        ; preds = %for.cond429.preheader, %for.body432.lr.ph, %if.else451, %if.then459, %if.then445, %if.end376
  %tobool469 = icmp eq i32 %some_was_dead.0.lcssa, 0
  br i1 %tobool469, label %if.then470, label %if.else506

if.then470:                                       ; preds = %if.end468
  %and471 = and i32 %flags, 2
  %tobool472 = icmp ne i32 %and471, 0
  %tobool474 = icmp ne %struct.rtx_def* %y.0, null
  %or.cond629 = and i1 %tobool472, %tobool474
  br i1 %or.cond629, label %land.lhs.true475, label %if.end562

land.lhs.true475:                                 ; preds = %if.then470
  %fld476 = getelementptr inbounds %struct.rtx_def* %y.0, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld476 to i32*
  %120 = load i32* %rtint, align 4, !tbaa !1
  %idxprom478 = sext i32 %120 to i64
  %121 = load %struct.varray_head_tag** @basic_block_for_insn, align 8, !tbaa !5
  %data479 = getelementptr inbounds %struct.varray_head_tag* %121, i64 0, i32 4
  %bb480 = bitcast %union.varray_data_tag* %data479 to [1 x %struct.basic_block_def*]*
  %arrayidx481 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb480, i64 0, i64 %idxprom478
  %122 = load %struct.basic_block_def** %arrayidx481, align 8, !tbaa !5
  %index482 = getelementptr inbounds %struct.basic_block_def* %122, i64 0, i32 11
  %123 = load i32* %index482, align 4, !tbaa !43
  %cmp484 = icmp eq i32 %123, %95
  br i1 %cmp484, label %land.lhs.true486, label %if.end562

land.lhs.true486:                                 ; preds = %land.lhs.true475
  %cmp487 = icmp sgt i32 %regno_first.0, 52
  br i1 %cmp487, label %if.then496, label %lor.lhs.false489

lor.lhs.false489:                                 ; preds = %land.lhs.true486
  %arrayidx491 = getelementptr inbounds %struct.rtx_def* %y.0, i64 0, i32 1, i64 3
  %rtx492 = bitcast %union.rtunion_def* %arrayidx491 to %struct.rtx_def**
  %124 = load %struct.rtx_def** %rtx492, align 8, !tbaa !5
  %call493 = tail call i32 @asm_noperands(%struct.rtx_def* %124) #3
  %cmp494 = icmp slt i32 %call493, 0
  br i1 %cmp494, label %if.then496, label %if.end562

if.then496:                                       ; preds = %lor.lhs.false489, %land.lhs.true486
  %arrayidx498 = getelementptr inbounds %struct.rtx_def* %y.0, i64 0, i32 1, i64 5
  %rtx499 = bitcast %union.rtunion_def* %arrayidx498 to %struct.rtx_def**
  %125 = load %struct.rtx_def** %rtx499, align 8, !tbaa !5
  %call500 = tail call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %insn, %struct.rtx_def* %125) #3
  %126 = getelementptr inbounds %union.rtunion_def* %arrayidx498, i64 0, i32 0
  %call500.c = ptrtoint %struct.rtx_def* %call500 to i64
  store i64 %call500.c, i64* %126, align 8, !tbaa !5
  br label %if.end562

if.else506:                                       ; preds = %if.end468
  %tobool507 = icmp eq i64 %not_dead.2, 0
  br i1 %tobool507, label %if.else509, label %if.end562

if.else509:                                       ; preds = %if.else506
  %tobool510 = icmp eq i32 %some_was_live.0.lcssa, 0
  br i1 %tobool510, label %if.then511, label %if.else532

if.then511:                                       ; preds = %if.else509
  br i1 %tobool378, label %if.then514, label %if.end520

if.then514:                                       ; preds = %if.then511
  %idxprom515 = sext i32 %regno_first.0 to i64
  %127 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data516 = getelementptr inbounds %struct.varray_head_tag* %127, i64 0, i32 4
  %reg517 = bitcast %union.varray_data_tag* %data516 to [1 x %struct.reg_info_def*]*
  %arrayidx518 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg517, i64 0, i64 %idxprom515
  %128 = load %struct.reg_info_def** %arrayidx518, align 8, !tbaa !5
  %deaths = getelementptr inbounds %struct.reg_info_def* %128, i64 0, i32 6
  %129 = load i32* %deaths, align 4, !tbaa !19
  %add519 = add nsw i32 %129, 1
  store i32 %add519, i32* %deaths, align 4, !tbaa !19
  br label %if.end520

if.end520:                                        ; preds = %if.then514, %if.then511
  %and521 = and i32 %flags, 1
  %tobool522 = icmp eq i32 %and521, 0
  br i1 %tobool522, label %if.end562, label %if.then523

if.then523:                                       ; preds = %if.end520
  %arrayidx525 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx526 = bitcast %union.rtunion_def* %arrayidx525 to %struct.rtx_def**
  %130 = load %struct.rtx_def** %rtx526, align 8, !tbaa !5
  %call527 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 10, %struct.rtx_def* %reg.addr.2, %struct.rtx_def* %130) #3
  %131 = getelementptr inbounds %union.rtunion_def* %arrayidx525, i64 0, i32 0
  %call527.c = ptrtoint %struct.rtx_def* %call527 to i64
  store i64 %call527.c, i64* %131, align 8, !tbaa !5
  br label %if.end562

if.else532:                                       ; preds = %if.else509
  %and533 = and i32 %flags, 1
  %tobool534 = icmp eq i32 %and533, 0
  %cmp537844 = icmp slt i32 %regno_last.0, %regno_first.0
  %or.cond898 = or i1 %tobool534, %cmp537844
  br i1 %or.cond898, label %if.end562, label %for.body539.lr.ph

for.body539.lr.ph:                                ; preds = %if.else532
  %reg_live540 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %arrayidx548 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx549 = bitcast %union.rtunion_def* %arrayidx548 to %struct.rtx_def**
  %132 = getelementptr inbounds %union.rtunion_def* %arrayidx548, i64 0, i32 0
  %133 = sext i32 %regno_first.0 to i64
  br label %for.body539

for.body539:                                      ; preds = %for.inc555, %for.body539.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc555 ], [ %133, %for.body539.lr.ph ]
  %134 = load %struct.bitmap_head_def** %reg_live540, align 8, !tbaa !53
  %135 = trunc i64 %indvars.iv to i32
  %call541 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %134, i32 %135) #3
  %tobool542 = icmp eq i32 %call541, 0
  br i1 %tobool542, label %if.then543, label %for.inc555

if.then543:                                       ; preds = %for.body539
  %arrayidx545 = getelementptr inbounds [53 x i32]* @reg_raw_mode, i64 0, i64 %indvars.iv
  %136 = load i32* %arrayidx545, align 4, !tbaa !15
  %call546 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %136, i32 %135) #3
  %137 = load %struct.rtx_def** %rtx549, align 8, !tbaa !5
  %call550 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 10, %struct.rtx_def* %call546, %struct.rtx_def* %137) #3
  %call550.c = ptrtoint %struct.rtx_def* %call550 to i64
  store i64 %call550.c, i64* %132, align 8, !tbaa !5
  br label %for.inc555

for.inc555:                                       ; preds = %for.body539, %if.then543
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp537 = icmp slt i32 %135, %regno_last.0
  br i1 %cmp537, label %for.body539, label %if.end562

if.end562:                                        ; preds = %for.inc555, %if.else532, %if.end520, %if.else506, %for.end357, %land.lhs.true475, %lor.lhs.false489, %if.then496, %if.then470, %if.then523
  %notlhs = icmp eq i32 %some_was_live.0.lcssa, 0
  %notrhs = icmp eq i32 %regno_first.0, 7
  %or.cond628.not = or i1 %notrhs, %notlhs
  %cmp569842 = icmp slt i32 %regno_last.0, %regno_first.0
  %or.cond899 = or i1 %or.cond628.not, %cmp569842
  br i1 %or.cond899, label %if.end614, label %for.body571.lr.ph

for.body571.lr.ph:                                ; preds = %if.end562
  %reg_live576 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  br label %for.body571

for.body571:                                      ; preds = %for.inc578, %for.body571.lr.ph
  %i.6843 = phi i32 [ %regno_first.0, %for.body571.lr.ph ], [ %inc579, %for.inc578 ]
  %sub572 = sub nsw i32 %i.6843, %regno_first.0
  %sh_prom = zext i32 %sub572 to i64
  %shl = shl i64 1, %sh_prom
  %and573 = and i64 %shl, %not_dead.2
  %tobool574 = icmp eq i64 %and573, 0
  br i1 %tobool574, label %if.then575, label %for.inc578

if.then575:                                       ; preds = %for.body571
  %138 = load %struct.bitmap_head_def** %reg_live576, align 8, !tbaa !53
  tail call void @bitmap_clear_bit(%struct.bitmap_head_def* %138, i32 %i.6843) #3
  br label %for.inc578

for.inc578:                                       ; preds = %for.body571, %if.then575
  %inc579 = add nsw i32 %i.6843, 1
  %cmp569 = icmp slt i32 %i.6843, %regno_last.0
  br i1 %cmp569, label %for.body571, label %if.end614

if.else582:                                       ; preds = %land.lhs.true324
  switch i32 %bf.clear304, label %if.end614 [
    i32 61, label %if.then587
    i32 62, label %if.then600
  ]

if.then587:                                       ; preds = %land.lhs.true310, %land.lhs.true317, %if.else582
  %and588 = and i32 %flags, 66
  %tobool589 = icmp eq i32 %and588, 0
  br i1 %tobool589, label %if.end614, label %if.then590

if.then590:                                       ; preds = %if.then587
  %idxprom591 = sext i32 %regno_first.0 to i64
  %reg_next_use592 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 3
  %139 = load %struct.rtx_def*** %reg_next_use592, align 8, !tbaa !56
  %arrayidx593 = getelementptr inbounds %struct.rtx_def** %139, i64 %idxprom591
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx593, align 8, !tbaa !5
  br label %if.end614

if.then600:                                       ; preds = %if.end302, %if.else582
  %and601 = and i32 %flags, 1
  %tobool602 = icmp eq i32 %and601, 0
  br i1 %tobool602, label %if.end614, label %if.then603

if.then603:                                       ; preds = %if.then600
  %arrayidx605 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx606 = bitcast %union.rtunion_def* %arrayidx605 to %struct.rtx_def**
  %140 = load %struct.rtx_def** %rtx606, align 8, !tbaa !5
  %call607 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 10, %struct.rtx_def* %reg.addr.2, %struct.rtx_def* %140) #3
  %141 = getelementptr inbounds %union.rtunion_def* %arrayidx605, i64 0, i32 0
  %call607.c = ptrtoint %struct.rtx_def* %call607 to i64
  store i64 %call607.c, i64* %141, align 8, !tbaa !5
  br label %if.end614

if.end614:                                        ; preds = %for.cond.backedge, %for.inc578, %if.end302, %if.end562, %sw.bb, %if.else582, %if.then587, %if.then600, %if.then590, %if.then603
  ret void
}

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %x, %struct.rtx_def* readnone %cond, %struct.rtx_def* %insn) #0 {
entry:
  %flags1 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 9
  %tobool427439442 = icmp eq %struct.rtx_def* %x, null
  br i1 %tobool427439442, label %for.end284, label %if.end.lr.ph.lr.ph.lr.ph

if.end.lr.ph.lr.ph.lr.ph:                         ; preds = %entry
  %tobool51 = icmp eq %struct.rtx_def* %insn, null
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %note.0.in14.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %mem_set_list = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 4
  %mem_set_list_len = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 7
  br label %if.end.lr.ph.lr.ph

if.end.lr.ph.lr.ph:                               ; preds = %if.end.lr.ph.lr.ph.lr.ph, %tailrecurse.backedge
  %cond.tr444 = phi %struct.rtx_def* [ %cond, %if.end.lr.ph.lr.ph.lr.ph ], [ %cond.addr.0.ph440, %tailrecurse.backedge ]
  %x.tr443 = phi %struct.rtx_def* [ %x, %if.end.lr.ph.lr.ph.lr.ph ], [ %x.tr.be, %tailrecurse.backedge ]
  %0 = load i32* %flags1, align 4
  %and = and i32 %0, 16
  %tobool15 = icmp eq i32 %and, 0
  br label %if.end.lr.ph

if.end.lr.ph:                                     ; preds = %if.end.lr.ph.lr.ph, %if.end215
  %x.addr.0.ph441 = phi %struct.rtx_def* [ %x.tr443, %if.end.lr.ph.lr.ph ], [ %45, %if.end215 ]
  %cond.addr.0.ph440 = phi %struct.rtx_def* [ %cond.tr444, %if.end.lr.ph.lr.ph ], [ %44, %if.end215 ]
  br label %if.end

if.end:                                           ; preds = %if.end.lr.ph, %retry.backedge
  %x.addr.0428 = phi %struct.rtx_def* [ %x.addr.0.ph441, %if.end.lr.ph ], [ %x.addr.0.be, %retry.backedge ]
  %1 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 67, label %for.end284
    i32 68, label %for.end284
    i32 54, label %for.end284
    i32 58, label %for.end284
    i32 55, label %for.end284
    i32 56, label %for.end284
    i32 59, label %for.end284
    i32 44, label %for.end284
    i32 45, label %for.end284
    i32 49, label %sw.bb2
    i32 66, label %sw.bb13
    i32 63, label %sw.bb55
    i32 61, label %sw.bb64
    i32 47, label %sw.bb65
    i32 152, label %for.end284
    i32 38, label %sw.bb211
    i32 41, label %lor.lhs.false189
    i32 40, label %if.end197
    i32 43, label %if.end197
    i32 52, label %if.end197
  ]

sw.bb2:                                           ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load3 = load i32* %3, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp = icmp eq i32 %bf.clear4, 66
  br i1 %cmp, label %if.then5, label %for.end284

if.then5:                                         ; preds = %sw.bb2
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  br label %tailrecurse.backedge

sw.bb13:                                          ; preds = %if.end
  %4 = load i32* @optimize, align 4, !tbaa !1
  %tobool14 = icmp eq i32 %4, 0
  %or.cond383 = or i1 %tobool14, %tobool15
  br i1 %or.cond383, label %sw.epilog, label %if.then16

if.then16:                                        ; preds = %sw.bb13
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 0
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx19, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load20 = load i32* %6, align 8
  %7 = and i32 %bf.load20, 67174399
  %8 = icmp eq i32 %7, 67108932
  br i1 %8, label %if.end50, label %if.else

if.else:                                          ; preds = %if.then16
  %9 = load %struct.rtx_def** %mem_set_list, align 8, !tbaa !69
  %tobool31416418 = icmp eq %struct.rtx_def* %9, null
  br i1 %tobool31416418, label %if.end50, label %while.body.lr.ph

while.cond.outer.loopexit:                        ; preds = %while.body
  %tobool31416 = icmp eq %struct.rtx_def* %11, null
  br i1 %tobool31416, label %if.end50, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.else, %while.cond.outer.loopexit
  %prev.0.ph420 = phi %struct.rtx_def* [ %temp.0417, %while.cond.outer.loopexit ], [ null, %if.else ]
  %temp.0.ph419 = phi %struct.rtx_def* [ %11, %while.cond.outer.loopexit ], [ %9, %if.else ]
  %tobool40 = icmp eq %struct.rtx_def* %prev.0.ph420, null
  %10 = getelementptr inbounds %struct.rtx_def* %prev.0.ph420, i64 0, i32 1, i64 1, i32 0
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end47
  %temp.0417 = phi %struct.rtx_def* [ %temp.0.ph419, %while.body.lr.ph ], [ %11, %if.end47 ]
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %temp.0417, i64 0, i32 1, i64 1
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx34, align 8, !tbaa !5
  %arrayidx36 = getelementptr inbounds %struct.rtx_def* %temp.0417, i64 0, i32 1, i64 0
  %rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx37, align 8, !tbaa !5
  %call = tail call i32 @anti_dependence(%struct.rtx_def* %12, %struct.rtx_def* %x.addr.0428) #3
  %tobool38 = icmp eq i32 %call, 0
  br i1 %tobool38, label %while.cond.outer.loopexit, label %if.then39

if.then39:                                        ; preds = %while.body
  br i1 %tobool40, label %if.else45, label %if.then41

if.then41:                                        ; preds = %if.then39
  %.c = ptrtoint %struct.rtx_def* %11 to i64
  store i64 %.c, i64* %10, align 8, !tbaa !5
  br label %if.end47

if.else45:                                        ; preds = %if.then39
  store %struct.rtx_def* %11, %struct.rtx_def** %mem_set_list, align 8, !tbaa !69
  br label %if.end47

if.end47:                                         ; preds = %if.else45, %if.then41
  tail call void @free_EXPR_LIST_node(%struct.rtx_def* %temp.0417) #3
  %13 = load i32* %mem_set_list_len, align 4, !tbaa !68
  %dec = add nsw i32 %13, -1
  store i32 %dec, i32* %mem_set_list_len, align 4, !tbaa !68
  %tobool31 = icmp eq %struct.rtx_def* %11, null
  br i1 %tobool31, label %if.end50, label %while.body

if.end50:                                         ; preds = %while.cond.outer.loopexit, %if.end47, %if.else, %if.then16
  br i1 %tobool51, label %sw.epilog, label %if.then52

if.then52:                                        ; preds = %if.end50
  %note.015.i = load %struct.rtx_def** %note.0.in14.i, align 8
  %tobool16.i = icmp eq %struct.rtx_def* %note.015.i, null
  br i1 %tobool16.i, label %sw.epilog, label %for.body.i

for.body.i:                                       ; preds = %if.then52, %for.inc.i
  %note.017.i = phi %struct.rtx_def* [ %note.0.i, %for.inc.i ], [ %note.015.i, %if.then52 ]
  %14 = getelementptr inbounds %struct.rtx_def* %note.017.i, i64 0, i32 0
  %bf.load.i = load i32* %14, align 8
  %bf.clear.i = and i32 %bf.load.i, 16711680
  %cmp.i = icmp eq i32 %bf.clear.i, 131072
  br i1 %cmp.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %note.017.i, i64 0, i32 1, i64 0
  %rtx6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !5
  tail call fastcc void @invalidate_mems_from_set(%struct.propagate_block_info* %pbi, %struct.rtx_def* %15) #3
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i
  %arrayidx8.i = getelementptr inbounds %struct.rtx_def* %note.017.i, i64 0, i32 1, i64 1
  %note.0.in.i = bitcast %union.rtunion_def* %arrayidx8.i to %struct.rtx_def**
  %note.0.i = load %struct.rtx_def** %note.0.in.i, align 8
  %tobool.i = icmp eq %struct.rtx_def* %note.0.i, null
  br i1 %tobool.i, label %sw.epilog, label %for.body.i

sw.bb55:                                          ; preds = %if.end
  %arrayidx57 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 0
  %rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx58, align 8, !tbaa !5
  %17 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 0
  %bf.load59 = load i32* %17, align 8
  %bf.clear60 = and i32 %bf.load59, 65535
  %cmp61 = icmp eq i32 %bf.clear60, 61
  br i1 %cmp61, label %sw.bb64, label %retry.backedge

sw.bb64:                                          ; preds = %if.end, %sw.bb55
  %x.addr.1 = phi %struct.rtx_def* [ %x.addr.0428, %if.end ], [ %16, %sw.bb55 ]
  tail call fastcc void @mark_used_reg(%struct.propagate_block_info* %pbi, %struct.rtx_def* %x.addr.1, %struct.rtx_def* %insn)
  br label %for.end284

sw.bb65:                                          ; preds = %if.end
  %fld66 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1
  %rtx68 = bitcast [1 x %union.rtunion_def]* %fld66 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx68, align 8, !tbaa !5
  %19 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 0
  %bf.load69 = load i32* %19, align 8
  %bf.clear70 = and i32 %bf.load69, 65535
  %cmp71 = icmp eq i32 %bf.clear70, 66
  br i1 %cmp71, label %if.then72, label %while.cond80.preheader

while.cond80.preheader:                           ; preds = %sw.bb65
  %20 = load i32* @target_flags, align 4, !tbaa !1
  %and106 = lshr i32 %20, 23
  %21 = and i32 %and106, 4
  %22 = add i32 %21, 4
  %add121445 = or i32 %21, 3
  br label %while.cond80.outer

while.cond80.outer:                               ; preds = %while.body94.if.else130_crit_edge, %land.lhs.true98, %while.cond80.preheader
  %bf.load95387.ph = phi i32 [ %bf.load69, %while.cond80.preheader ], [ %bf.load81.pre.pre.pre, %while.body94.if.else130_crit_edge ], [ %bf.load102, %land.lhs.true98 ]
  %testreg.0.ph = phi %struct.rtx_def* [ %18, %while.cond80.preheader ], [ %.pre.pre, %while.body94.if.else130_crit_edge ], [ %24, %land.lhs.true98 ]
  %mark_dest.0.ph = phi i32 [ 0, %while.cond80.preheader ], [ 1, %land.lhs.true98 ], [ 1, %while.body94.if.else130_crit_edge ]
  br label %while.cond80

if.then72:                                        ; preds = %sw.bb65
  %arrayidx74 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx75, align 8, !tbaa !5
  tail call fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %23, %struct.rtx_def* %cond.addr.0.ph440, %struct.rtx_def* %insn)
  %arrayidx77 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 1
  br label %tailrecurse.backedge

while.cond80:                                     ; preds = %while.cond80.outer, %land.lhs.true98
  %bf.load95387 = phi i32 [ %bf.load102, %land.lhs.true98 ], [ %bf.load95387.ph, %while.cond80.outer ]
  %testreg.0 = phi %struct.rtx_def* [ %24, %land.lhs.true98 ], [ %testreg.0.ph, %while.cond80.outer ]
  %bf.clear82 = and i32 %bf.load95387, 65535
  switch i32 %bf.clear82, label %while.end135 [
    i32 63, label %land.lhs.true98
    i32 64, label %while.body94.if.else130_crit_edge
    i32 132, label %while.body94.if.else130_crit_edge
    i32 133, label %while.body94.if.else130_crit_edge
  ]

while.body94.if.else130_crit_edge:                ; preds = %while.cond80, %while.cond80, %while.cond80
  %arrayidx133.phi.trans.insert.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %testreg.0, i64 0, i32 1, i64 0
  %rtx134.phi.trans.insert.phi.trans.insert = bitcast %union.rtunion_def* %arrayidx133.phi.trans.insert.phi.trans.insert to %struct.rtx_def**
  %.pre.pre = load %struct.rtx_def** %rtx134.phi.trans.insert.phi.trans.insert, align 8, !tbaa !5
  %.phi.trans.insert.phi.trans.insert.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %.pre.pre, i64 0, i32 0
  %bf.load81.pre.pre.pre = load i32* %.phi.trans.insert.phi.trans.insert.phi.trans.insert, align 8
  br label %while.cond80.outer

land.lhs.true98:                                  ; preds = %while.cond80
  %arrayidx100 = getelementptr inbounds %struct.rtx_def* %testreg.0, i64 0, i32 1, i64 0
  %rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx101, align 8, !tbaa !5
  %25 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 0
  %bf.load102 = load i32* %25, align 8
  %bf.lshr103 = lshr i32 %bf.load102, 16
  %bf.clear104 = and i32 %bf.lshr103, 255
  %idxprom381 = zext i32 %bf.clear104 to i64
  %arrayidx105 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom381
  %26 = load i8* %arrayidx105, align 1, !tbaa !15
  %conv = zext i8 %26 to i32
  %add = add i32 %conv, -1
  %sub = add i32 %add, %22
  %div = sdiv i32 %sub, %22
  %bf.lshr113 = lshr i32 %bf.load95387, 16
  %bf.clear114 = and i32 %bf.lshr113, 255
  %idxprom115382 = zext i32 %bf.clear114 to i64
  %arrayidx116 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom115382
  %27 = load i8* %arrayidx116, align 1, !tbaa !15
  %conv117 = zext i8 %27 to i32
  %sub122 = add i32 %add121445, %conv117
  %div126 = sdiv i32 %sub122, %22
  %cmp127 = icmp sgt i32 %div, %div126
  br i1 %cmp127, label %while.cond80.outer, label %while.cond80

while.end135:                                     ; preds = %while.cond80
  %28 = and i32 %bf.load95387, 16777215
  %29 = icmp eq i32 %28, 3342375
  br i1 %29, label %if.then175, label %lor.lhs.false146

lor.lhs.false146:                                 ; preds = %while.end135
  %cmp149 = icmp eq i32 %bf.clear82, 61
  br i1 %cmp149, label %land.lhs.true151, label %sw.epilog

land.lhs.true151:                                 ; preds = %lor.lhs.false146
  %arrayidx153 = getelementptr inbounds %struct.rtx_def* %testreg.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx153 to i32*
  %30 = load i32* %rtuint, align 4, !tbaa !1
  switch i32 %30, label %if.then175 [
    i32 20, label %land.rhs
    i32 6, label %land.lhs.true163
    i32 16, label %land.lhs.true170
  ]

land.rhs:                                         ; preds = %land.lhs.true151
  %31 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool156 = icmp ne i32 %31, 0
  %32 = load i32* @frame_pointer_needed, align 4
  %phitmp = icmp eq i32 %32, 0
  %or.cond386 = and i1 %tobool156, %phitmp
  br i1 %or.cond386, label %if.then175, label %sw.epilog

land.lhs.true163:                                 ; preds = %land.lhs.true151
  %33 = load i32* @reload_completed, align 4, !tbaa !1
  %tobool164 = icmp eq i32 %33, 0
  %34 = load i32* @frame_pointer_needed, align 4
  %tobool166 = icmp ne i32 %34, 0
  %or.cond = or i1 %tobool164, %tobool166
  br i1 %or.cond, label %sw.epilog, label %if.then175

land.lhs.true170:                                 ; preds = %land.lhs.true151
  %35 = load i8* getelementptr inbounds ([53 x i8]* @fixed_regs, i64 0, i64 16), align 1, !tbaa !15
  %tobool174 = icmp eq i8 %35, 0
  br i1 %tobool174, label %if.then175, label %sw.epilog

if.then175:                                       ; preds = %land.lhs.true163, %land.rhs, %land.lhs.true151, %while.end135, %land.lhs.true170
  %tobool176 = icmp eq i32 %mark_dest.0.ph, 0
  br i1 %tobool176, label %if.end181, label %if.then177

if.then177:                                       ; preds = %if.then175
  tail call fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %18, %struct.rtx_def* %cond.addr.0.ph440, %struct.rtx_def* %insn)
  br label %if.end181

if.end181:                                        ; preds = %if.then175, %if.then177
  %arrayidx183 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 1
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %if.end181, %if.then72, %if.then5
  %x.tr.be.in.in = phi %union.rtunion_def* [ %arrayidx183, %if.end181 ], [ %arrayidx77, %if.then72 ], [ %arrayidx10, %if.then5 ]
  %x.tr.be.in = bitcast %union.rtunion_def* %x.tr.be.in.in to %struct.rtx_def**
  %x.tr.be = load %struct.rtx_def** %x.tr.be.in, align 8
  %tobool427439 = icmp eq %struct.rtx_def* %x.tr.be, null
  br i1 %tobool427439, label %for.end284, label %if.end.lr.ph.lr.ph

lor.lhs.false189:                                 ; preds = %if.end
  %bf.clear192 = and i32 %bf.load, 134217728
  %tobool193 = icmp eq i32 %bf.clear192, 0
  br i1 %tobool193, label %for.cond.preheader, label %if.end197.thread

if.end197.thread:                                 ; preds = %lor.lhs.false189
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** %mem_set_list) #3
  store i32 0, i32* %mem_set_list_len, align 4, !tbaa !68
  br label %for.cond.preheader

if.end197:                                        ; preds = %if.end, %if.end, %if.end
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** %mem_set_list) #3
  store i32 0, i32* %mem_set_list_len, align 4, !tbaa !68
  %cmp198 = icmp eq i32 %bf.clear, 41
  br i1 %cmp198, label %for.cond.preheader, label %sw.epilog

for.cond.preheader:                               ; preds = %if.end197.thread, %if.end197, %lor.lhs.false189
  %arrayidx202 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 3
  %rtvec = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtvec_def**
  %36 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem413 = getelementptr inbounds %struct.rtvec_def* %36, i64 0, i32 0
  %37 = load i32* %num_elem413, align 4, !tbaa !62
  %cmp203414 = icmp sgt i32 %37, 0
  br i1 %cmp203414, label %for.body, label %sw.epilog

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %38 = phi %struct.rtvec_def* [ %40, %for.body ], [ %36, %for.cond.preheader ]
  %arrayidx209 = getelementptr inbounds %struct.rtvec_def* %38, i64 0, i32 1, i64 %indvars.iv
  %39 = load %struct.rtx_def** %arrayidx209, align 8, !tbaa !5
  tail call fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %39, %struct.rtx_def* %cond.addr.0.ph440, %struct.rtx_def* %insn)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %40 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %40, i64 0, i32 0
  %41 = load i32* %num_elem, align 4, !tbaa !62
  %42 = trunc i64 %indvars.iv.next to i32
  %cmp203 = icmp slt i32 %42, %41
  br i1 %cmp203, label %for.body, label %sw.epilog

sw.bb211:                                         ; preds = %if.end
  %cmp212 = icmp eq %struct.rtx_def* %cond.addr.0.ph440, null
  br i1 %cmp212, label %if.end215, label %if.then214

if.then214:                                       ; preds = %sw.bb211
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i32 3893, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.mark_used_regs, i64 0, i64 0)) #6
  unreachable

if.end215:                                        ; preds = %sw.bb211
  %fld216 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1
  %rtx218 = bitcast [1 x %union.rtunion_def]* %fld216 to %struct.rtx_def**
  %43 = load %struct.rtx_def** %rtx218, align 8, !tbaa !5
  tail call fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %43, %struct.rtx_def* null, %struct.rtx_def* %insn)
  %44 = load %struct.rtx_def** %rtx218, align 8, !tbaa !5
  %arrayidx223 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 1
  %rtx224 = bitcast %union.rtunion_def* %arrayidx223 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx224, align 8, !tbaa !5
  %tobool427 = icmp eq %struct.rtx_def* %45, null
  br i1 %tobool427, label %for.end284, label %if.end.lr.ph

sw.epilog:                                        ; preds = %for.body, %for.inc.i, %for.cond.preheader, %if.then52, %land.rhs, %if.end, %if.end50, %sw.bb13, %land.lhs.true170, %if.end197, %lor.lhs.false146, %land.lhs.true163
  %idxprom226380 = zext i32 %bf.clear to i64
  %arrayidx227 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom226380
  %46 = load i8** %arrayidx227, align 8, !tbaa !5
  %arrayidx229 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom226380
  %47 = load i8* %arrayidx229, align 1, !tbaa !15
  %cmp233425 = icmp eq i8 %47, 0
  br i1 %cmp233425, label %for.end284, label %for.body235.lr.ph

for.body235.lr.ph:                                ; preds = %sw.epilog
  %48 = zext i8 %47 to i64
  br label %for.body235

for.body235:                                      ; preds = %for.body235.lr.ph, %for.cond232.backedge
  %indvars.iv490 = phi i64 [ %48, %for.body235.lr.ph ], [ %indvars.iv.next491, %for.cond232.backedge ]
  %indvars.iv.next491 = add nsw i64 %indvars.iv490, -1
  %arrayidx237 = getelementptr inbounds i8* %46, i64 %indvars.iv.next491
  %49 = load i8* %arrayidx237, align 1, !tbaa !15
  switch i8 %49, label %for.cond232.backedge [
    i8 101, label %if.then241
    i8 69, label %for.cond261.preheader
  ]

for.cond232.backedge:                             ; preds = %for.body269, %for.cond261.preheader, %for.body235, %if.end248
  %50 = trunc i64 %indvars.iv.next491 to i32
  %cmp233 = icmp sgt i32 %50, 0
  br i1 %cmp233, label %for.body235, label %for.end284

for.cond261.preheader:                            ; preds = %for.body235
  %arrayidx264 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 %indvars.iv.next491
  %rtvec265 = bitcast %union.rtunion_def* %arrayidx264 to %struct.rtvec_def**
  %51 = load %struct.rtvec_def** %rtvec265, align 8, !tbaa !5
  %num_elem266421 = getelementptr inbounds %struct.rtvec_def* %51, i64 0, i32 0
  %52 = load i32* %num_elem266421, align 4, !tbaa !62
  %cmp267422 = icmp sgt i32 %52, 0
  br i1 %cmp267422, label %for.body269, label %for.cond232.backedge

if.then241:                                       ; preds = %for.body235
  %53 = trunc i64 %indvars.iv.next491 to i32
  %cmp242 = icmp eq i32 %53, 0
  br i1 %cmp242, label %if.then244, label %if.end248

if.then244:                                       ; preds = %if.then241
  %arrayidx246 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 0
  %rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**
  %54 = load %struct.rtx_def** %rtx247, align 8, !tbaa !5
  br label %retry.backedge

retry.backedge:                                   ; preds = %if.then244, %sw.bb55
  %x.addr.0.be = phi %struct.rtx_def* [ %54, %if.then244 ], [ %16, %sw.bb55 ]
  %tobool = icmp eq %struct.rtx_def* %x.addr.0.be, null
  br i1 %tobool, label %for.end284, label %if.end

if.end248:                                        ; preds = %if.then241
  %arrayidx251 = getelementptr inbounds %struct.rtx_def* %x.addr.0428, i64 0, i32 1, i64 %indvars.iv.next491
  %rtx252 = bitcast %union.rtunion_def* %arrayidx251 to %struct.rtx_def**
  %55 = load %struct.rtx_def** %rtx252, align 8, !tbaa !5
  tail call fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %55, %struct.rtx_def* %cond.addr.0.ph440, %struct.rtx_def* %insn)
  br label %for.cond232.backedge

for.body269:                                      ; preds = %for.cond261.preheader, %for.body269
  %indvars.iv488 = phi i64 [ %indvars.iv.next489, %for.body269 ], [ 0, %for.cond261.preheader ]
  %56 = phi %struct.rtvec_def* [ %58, %for.body269 ], [ %51, %for.cond261.preheader ]
  %arrayidx276 = getelementptr inbounds %struct.rtvec_def* %56, i64 0, i32 1, i64 %indvars.iv488
  %57 = load %struct.rtx_def** %arrayidx276, align 8, !tbaa !5
  tail call fastcc void @mark_used_regs(%struct.propagate_block_info* %pbi, %struct.rtx_def* %57, %struct.rtx_def* %cond.addr.0.ph440, %struct.rtx_def* %insn)
  %indvars.iv.next489 = add nuw nsw i64 %indvars.iv488, 1
  %58 = load %struct.rtvec_def** %rtvec265, align 8, !tbaa !5
  %num_elem266 = getelementptr inbounds %struct.rtvec_def* %58, i64 0, i32 0
  %59 = load i32* %num_elem266, align 4, !tbaa !62
  %60 = trunc i64 %indvars.iv.next489 to i32
  %cmp267 = icmp slt i32 %60, %59
  br i1 %cmp267, label %for.body269, label %for.cond232.backedge

for.end284:                                       ; preds = %sw.bb2, %tailrecurse.backedge, %if.end215, %retry.backedge, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.epilog, %for.cond232.backedge, %entry, %sw.bb64
  ret void
}

declare void @bitmap_set_bit(%struct.bitmap_head_def*, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @mark_used_reg(%struct.propagate_block_info* nocapture readonly %pbi, %struct.rtx_def* %reg, %struct.rtx_def* %insn) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %0 = load i32* %rtuint, align 4, !tbaa !1
  %cmp = icmp ult i32 %0, 53
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = and i32 %0, -8
  %2 = icmp eq i32 %1, 8
  %.off = add i32 %0, -21
  %3 = icmp ult i32 %.off, 8
  %or.cond = or i1 %2, %3
  %.off1 = add i32 %0, -45
  %4 = icmp ult i32 %.off1, 8
  %or.cond7 = or i1 %or.cond, %4
  %.off2 = add i32 %0, -29
  %5 = icmp ult i32 %.off2, 8
  %or.cond9 = or i1 %or.cond7, %5
  %6 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %6, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  br i1 %or.cond9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %idxprom4 = zext i32 %bf.clear to i64
  %arrayidx14 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom4
  %7 = load i32* %arrayidx14, align 4, !tbaa !15
  %cmp15 = icmp eq i32 %7, 5
  br i1 %cmp15, label %cond.end53, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp21 = icmp eq i32 %7, 6
  %phitmp = select i1 %cmp21, i32 2, i32 1
  br label %cond.end53

cond.false:                                       ; preds = %if.then
  switch i32 %bf.clear, label %cond.false38 [
    i32 18, label %cond.true27
    i32 24, label %cond.true34
  ]

cond.true27:                                      ; preds = %cond.false
  %8 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %8, 25
  %9 = and i32 %and, 1
  %10 = xor i32 %9, 3
  br label %cond.end53

cond.true34:                                      ; preds = %cond.false
  %11 = load i32* @target_flags, align 4, !tbaa !1
  %and35 = lshr i32 %11, 24
  %12 = and i32 %and35, 2
  %13 = xor i32 %12, 6
  br label %cond.end53

cond.false38:                                     ; preds = %cond.false
  %idxprom423 = zext i32 %bf.clear to i64
  %arrayidx43 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom423
  %14 = load i8* %arrayidx43, align 1, !tbaa !15
  %conv = zext i8 %14 to i32
  %15 = load i32* @target_flags, align 4, !tbaa !1
  %and44 = lshr i32 %15, 23
  %16 = and i32 %and44, 4
  %17 = add i32 %16, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %17
  %div = sdiv i32 %sub, %17
  br label %cond.end53

cond.end53:                                       ; preds = %cond.true, %lor.rhs, %cond.true27, %cond.false38, %cond.true34
  %cond54 = phi i32 [ %10, %cond.true27 ], [ %13, %cond.true34 ], [ %div, %cond.false38 ], [ 2, %cond.true ], [ %phitmp, %lor.rhs ]
  %sub55 = add i32 %0, -1
  %add56 = add i32 %sub55, %cond54
  br label %if.end

if.end:                                           ; preds = %cond.end53, %entry
  %regno_last.0 = phi i32 [ %add56, %cond.end53 ], [ %0, %entry ]
  %cmp5725 = icmp ugt i32 %0, %regno_last.0
  br i1 %cmp5725, label %for.end72, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %reg_live = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  br label %for.body

for.cond61.preheader:                             ; preds = %for.body
  br i1 %cmp5725, label %for.end72, label %for.body64.lr.ph

for.body64.lr.ph:                                 ; preds = %for.cond61.preheader
  %new_set = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 2
  br label %for.body64

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %i.028 = phi i32 [ %0, %for.body.lr.ph ], [ %inc, %for.body ]
  %some_was_dead.027 = phi i32 [ 0, %for.body.lr.ph ], [ %or60, %for.body ]
  %some_was_live.026 = phi i32 [ 0, %for.body.lr.ph ], [ %or, %for.body ]
  %18 = load %struct.bitmap_head_def** %reg_live, align 8, !tbaa !53
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %18, i32 %i.028) #3
  %or = or i32 %call, %some_was_live.026
  %lnot = icmp eq i32 %call, 0
  %lnot.ext = zext i1 %lnot to i32
  %or60 = or i32 %lnot.ext, %some_was_dead.027
  %inc = add i32 %i.028, 1
  %cmp57 = icmp ugt i32 %inc, %regno_last.0
  br i1 %cmp57, label %for.cond61.preheader, label %for.body

for.body64:                                       ; preds = %for.body64.lr.ph, %for.body64
  %i.123 = phi i32 [ %0, %for.body64.lr.ph ], [ %inc71, %for.body64 ]
  %some_not_set.022 = phi i32 [ 0, %for.body64.lr.ph ], [ %or69, %for.body64 ]
  %19 = load %struct.bitmap_head_def** %new_set, align 8, !tbaa !55
  %call65 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %19, i32 %i.123) #3
  %lnot67 = icmp eq i32 %call65, 0
  %lnot.ext68 = zext i1 %lnot67 to i32
  %or69 = or i32 %lnot.ext68, %some_not_set.022
  %inc71 = add i32 %i.123, 1
  %cmp62 = icmp ugt i32 %inc71, %regno_last.0
  br i1 %cmp62, label %for.end72, label %for.body64

for.end72:                                        ; preds = %for.body64, %if.end, %for.cond61.preheader
  %some_was_live.0.lcssa33 = phi i32 [ %or, %for.cond61.preheader ], [ 0, %if.end ], [ %or, %for.body64 ]
  %some_was_dead.0.lcssa32 = phi i32 [ %or60, %for.cond61.preheader ], [ 0, %if.end ], [ %or60, %for.body64 ]
  %some_not_set.0.lcssa = phi i32 [ 0, %for.cond61.preheader ], [ 0, %if.end ], [ %or69, %for.body64 ]
  %flags = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 9
  %20 = load i32* %flags, align 4, !tbaa !61
  %and73 = and i32 %20, 66
  %tobool74 = icmp eq i32 %and73, 0
  br i1 %tobool74, label %if.end78, label %if.then75

if.then75:                                        ; preds = %for.end72
  %idxprom76 = zext i32 %0 to i64
  %reg_next_use = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 3
  %21 = load %struct.rtx_def*** %reg_next_use, align 8, !tbaa !56
  %arrayidx77 = getelementptr inbounds %struct.rtx_def** %21, i64 %idxprom76
  store %struct.rtx_def* %insn, %struct.rtx_def** %arrayidx77, align 8, !tbaa !5
  br label %if.end78

if.end78:                                         ; preds = %for.end72, %if.then75
  %and80 = and i32 %20, 4
  %tobool81 = icmp eq i32 %and80, 0
  br i1 %tobool81, label %if.end163, label %if.then82

if.then82:                                        ; preds = %if.end78
  br i1 %cmp, label %if.then85, label %if.else

if.then85:                                        ; preds = %if.then82
  %22 = load i64* @elim_reg_set, align 8, !tbaa !14
  %sh_prom = zext i32 %0 to i64
  %shl = shl i64 1, %sh_prom
  %and86 = and i64 %22, %shl
  %tobool87 = icmp ne i64 %and86, 0
  %23 = and i32 %0, -5
  %24 = icmp eq i32 %23, 16
  %or.cond11 = and i1 %tobool87, %24
  %brmerge = or i1 %or.cond11, %cmp5725
  br i1 %brmerge, label %if.end163, label %for.body98

for.body98:                                       ; preds = %if.then85, %for.body98
  %i.220 = phi i32 [ %inc102, %for.body98 ], [ %0, %if.then85 ]
  %idxprom99 = zext i32 %i.220 to i64
  %arrayidx100 = getelementptr inbounds [53 x i8]* @regs_ever_live, i64 0, i64 %idxprom99
  store i8 1, i8* %arrayidx100, align 1, !tbaa !15
  %inc102 = add i32 %i.220, 1
  %cmp96 = icmp ugt i32 %inc102, %regno_last.0
  br i1 %cmp96, label %for.cond95.if.end163.loopexit_crit_edge, label %for.body98

if.else:                                          ; preds = %if.then82
  %bb = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 0
  %25 = load %struct.basic_block_def** %bb, align 8, !tbaa !67
  %index = getelementptr inbounds %struct.basic_block_def* %25, i64 0, i32 11
  %26 = load i32* %index, align 4, !tbaa !43
  %idxprom105 = zext i32 %0 to i64
  %27 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %27, i64 0, i32 4
  %reg106 = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx107 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg106, i64 0, i64 %idxprom105
  %28 = load %struct.reg_info_def** %arrayidx107, align 8, !tbaa !5
  %basic_block = getelementptr inbounds %struct.reg_info_def* %28, i64 0, i32 9
  %29 = load i32* %basic_block, align 4, !tbaa !22
  %cmp108 = icmp eq i32 %29, -1
  br i1 %cmp108, label %if.then110, label %if.else116

if.then110:                                       ; preds = %if.else
  store i32 %26, i32* %basic_block, align 4, !tbaa !22
  br label %if.end131

if.else116:                                       ; preds = %if.else
  %cmp122 = icmp eq i32 %29, %26
  br i1 %cmp122, label %if.end131, label %if.then124

if.then124:                                       ; preds = %if.else116
  store i32 -2, i32* %basic_block, align 4, !tbaa !22
  br label %if.end131

if.end131:                                        ; preds = %if.else116, %if.then124, %if.then110
  %30 = load i32* @optimize_size, align 4, !tbaa !1
  %tobool132 = icmp eq i32 %30, 0
  br i1 %tobool132, label %lor.lhs.false133, label %cond.end150

lor.lhs.false133:                                 ; preds = %if.end131
  %31 = load i32* @flag_branch_probabilities, align 4, !tbaa !1
  %tobool134 = icmp eq i32 %31, 0
  %32 = load i64* getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0, i32 13), align 8
  %tobool136 = icmp ne i64 %32, 0
  %or.cond252 = or i1 %tobool134, %tobool136
  br i1 %or.cond252, label %cond.false138, label %cond.end150

cond.false138:                                    ; preds = %lor.lhs.false133
  %frequency = getelementptr inbounds %struct.basic_block_def* %25, i64 0, i32 14
  %33 = load i32* %frequency, align 4, !tbaa !72
  %mul = mul nsw i32 %33, 1000
  %mul.off = add i32 %mul, 9999
  %34 = icmp ugt i32 %mul.off, 19998
  br i1 %34, label %cond.true142, label %cond.end150

cond.true142:                                     ; preds = %cond.false138
  %div140 = sdiv i32 %mul, 10000
  br label %cond.end150

cond.end150:                                      ; preds = %if.end131, %cond.true142, %cond.false138, %lor.lhs.false133
  %cond151 = phi i32 [ 1000, %lor.lhs.false133 ], [ 1000, %if.end131 ], [ %div140, %cond.true142 ], [ 1, %cond.false138 ]
  %freq = getelementptr inbounds %struct.reg_info_def* %28, i64 0, i32 5
  %35 = load i32* %freq, align 4, !tbaa !73
  %add156 = add nsw i32 %35, %cond151
  store i32 %add156, i32* %freq, align 4, !tbaa !73
  %refs = getelementptr inbounds %struct.reg_info_def* %28, i64 0, i32 4
  %36 = load i32* %refs, align 4, !tbaa !18
  %inc161 = add nsw i32 %36, 1
  store i32 %inc161, i32* %refs, align 4, !tbaa !18
  br label %if.end163

for.cond95.if.end163.loopexit_crit_edge:          ; preds = %for.body98
  %.pre.pre = load i32* %flags, align 4, !tbaa !61
  br label %if.end163

if.end163:                                        ; preds = %if.then85, %for.cond95.if.end163.loopexit_crit_edge, %if.end78, %cond.end150
  %37 = phi i32 [ %20, %if.then85 ], [ %20, %if.end78 ], [ %20, %cond.end150 ], [ %.pre.pre, %for.cond95.if.end163.loopexit_crit_edge ]
  %and165 = and i32 %37, 5
  %tobool166 = icmp ne i32 %and165, 0
  %tobool168 = icmp ne i32 %some_was_dead.0.lcssa32, 0
  %or.cond253 = and i1 %tobool166, %tobool168
  %tobool170 = icmp ne i32 %some_not_set.0.lcssa, 0
  %or.cond254 = and i1 %or.cond253, %tobool170
  br i1 %or.cond254, label %if.then171, label %for.cond240.preheader

for.cond240.preheader:                            ; preds = %for.inc235, %if.end201, %if.then205, %if.end163
  br i1 %cmp5725, label %for.end247, label %for.body243.lr.ph

for.body243.lr.ph:                                ; preds = %for.cond240.preheader
  %reg_live244 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  br label %for.body243

if.then171:                                       ; preds = %if.end163
  %38 = icmp ult i32 %0, %regno_last.0
  br i1 %38, label %for.body178.lr.ph, label %if.end185

for.body178.lr.ph:                                ; preds = %if.then171
  %new_set179 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 2
  br label %for.body178

for.body178:                                      ; preds = %for.body178.lr.ph, %for.body178
  %i.318 = phi i32 [ %0, %for.body178.lr.ph ], [ %inc183, %for.body178 ]
  %some_was_live.117 = phi i32 [ %some_was_live.0.lcssa33, %for.body178.lr.ph ], [ %or181, %for.body178 ]
  %39 = load %struct.bitmap_head_def** %new_set179, align 8, !tbaa !55
  %call180 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %39, i32 %i.318) #3
  %or181 = or i32 %call180, %some_was_live.117
  %inc183 = add i32 %i.318, 1
  %cmp176 = icmp ugt i32 %inc183, %regno_last.0
  br i1 %cmp176, label %if.end185, label %for.body178

if.end185:                                        ; preds = %for.body178, %if.then171
  %some_was_live.2 = phi i32 [ %some_was_live.0.lcssa33, %if.then171 ], [ %or181, %for.body178 ]
  %tobool186 = icmp eq i32 %some_was_live.2, 0
  br i1 %tobool186, label %if.then187, label %for.cond213.preheader

for.cond213.preheader:                            ; preds = %if.end185
  br i1 %cmp5725, label %for.end247, label %for.body216.lr.ph

for.body216.lr.ph:                                ; preds = %for.cond213.preheader
  %reg_live217 = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 1
  %arrayidx228 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.rtx_def**
  %40 = getelementptr inbounds %union.rtunion_def* %arrayidx228, i64 0, i32 0
  br label %for.body216

if.then187:                                       ; preds = %if.end185
  %41 = load i32* %flags, align 4, !tbaa !61
  %and189 = and i32 %41, 1
  %tobool190 = icmp eq i32 %and189, 0
  br i1 %tobool190, label %if.end201, label %land.lhs.true191

land.lhs.true191:                                 ; preds = %if.then187
  %call192 = tail call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn, i32 1, i32 %0) #3
  %tobool193 = icmp eq %struct.rtx_def* %call192, null
  br i1 %tobool193, label %if.then194, label %if.end201

if.then194:                                       ; preds = %land.lhs.true191
  %arrayidx196 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %rtx = bitcast %union.rtunion_def* %arrayidx196 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %call197 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 1, %struct.rtx_def* %reg, %struct.rtx_def* %42) #3
  %43 = getelementptr inbounds %union.rtunion_def* %arrayidx196, i64 0, i32 0
  %call197.c = ptrtoint %struct.rtx_def* %call197 to i64
  store i64 %call197.c, i64* %43, align 8, !tbaa !5
  br label %if.end201

if.end201:                                        ; preds = %land.lhs.true191, %if.then187, %if.then194
  %44 = load i32* %flags, align 4, !tbaa !61
  %and203 = and i32 %44, 4
  %tobool204 = icmp eq i32 %and203, 0
  br i1 %tobool204, label %for.cond240.preheader, label %if.then205

if.then205:                                       ; preds = %if.end201
  %idxprom206 = zext i32 %0 to i64
  %45 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data207 = getelementptr inbounds %struct.varray_head_tag* %45, i64 0, i32 4
  %reg208 = bitcast %union.varray_data_tag* %data207 to [1 x %struct.reg_info_def*]*
  %arrayidx209 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg208, i64 0, i64 %idxprom206
  %46 = load %struct.reg_info_def** %arrayidx209, align 8, !tbaa !5
  %deaths = getelementptr inbounds %struct.reg_info_def* %46, i64 0, i32 6
  %47 = load i32* %deaths, align 4, !tbaa !19
  %inc210 = add nsw i32 %47, 1
  store i32 %inc210, i32* %deaths, align 4, !tbaa !19
  br label %for.cond240.preheader

for.body216:                                      ; preds = %for.body216.lr.ph, %for.inc235
  %i.415 = phi i32 [ %0, %for.body216.lr.ph ], [ %inc236, %for.inc235 ]
  %48 = load %struct.bitmap_head_def** %reg_live217, align 8, !tbaa !53
  %call218 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %48, i32 %i.415) #3
  %tobool219 = icmp eq i32 %call218, 0
  br i1 %tobool219, label %land.lhs.true220, label %for.inc235

land.lhs.true220:                                 ; preds = %for.body216
  %call221 = tail call i32 @dead_or_set_regno_p(%struct.rtx_def* %insn, i32 %i.415) #3
  %tobool222 = icmp eq i32 %call221, 0
  br i1 %tobool222, label %if.then223, label %for.inc235

if.then223:                                       ; preds = %land.lhs.true220
  %idxprom224 = zext i32 %i.415 to i64
  %arrayidx225 = getelementptr inbounds [53 x i32]* @reg_raw_mode, i64 0, i64 %idxprom224
  %49 = load i32* %arrayidx225, align 4, !tbaa !15
  %call226 = tail call %struct.rtx_def* @gen_rtx_REG(i32 %49, i32 %i.415) #3
  %50 = load %struct.rtx_def** %rtx229, align 8, !tbaa !5
  %call230 = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 1, %struct.rtx_def* %call226, %struct.rtx_def* %50) #3
  %call230.c = ptrtoint %struct.rtx_def* %call230 to i64
  store i64 %call230.c, i64* %40, align 8, !tbaa !5
  br label %for.inc235

for.inc235:                                       ; preds = %land.lhs.true220, %for.body216, %if.then223
  %inc236 = add i32 %i.415, 1
  %cmp214 = icmp ugt i32 %inc236, %regno_last.0
  br i1 %cmp214, label %for.cond240.preheader, label %for.body216

for.body243:                                      ; preds = %for.body243.lr.ph, %for.body243
  %i.513 = phi i32 [ %0, %for.body243.lr.ph ], [ %inc246, %for.body243 ]
  %51 = load %struct.bitmap_head_def** %reg_live244, align 8, !tbaa !53
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %51, i32 %i.513) #3
  %inc246 = add i32 %i.513, 1
  %cmp241 = icmp ugt i32 %inc246, %regno_last.0
  br i1 %cmp241, label %for.end247, label %for.body243

for.end247:                                       ; preds = %for.body243, %for.cond213.preheader, %for.cond240.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define noalias %struct.propagate_block_info* @init_propagate_block_info(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %local_set, %struct.bitmap_head_def* %cond_local_set, i32 %flags) #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 72) #3
  %0 = bitcast i8* %call to %struct.propagate_block_info*
  %bb1 = bitcast i8* %call to %struct.basic_block_def**
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb1, align 8, !tbaa !67
  %reg_live = getelementptr inbounds i8* %call, i64 8
  %1 = bitcast i8* %reg_live to %struct.bitmap_head_def**
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %1, align 8, !tbaa !53
  %mem_set_list = getelementptr inbounds i8* %call, i64 32
  %2 = bitcast i8* %mem_set_list to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %2, align 8, !tbaa !69
  %mem_set_list_len = getelementptr inbounds i8* %call, i64 56
  %3 = bitcast i8* %mem_set_list_len to i32*
  store i32 0, i32* %3, align 4, !tbaa !68
  %local_set2 = getelementptr inbounds i8* %call, i64 40
  %4 = bitcast i8* %local_set2 to %struct.bitmap_head_def**
  store %struct.bitmap_head_def* %local_set, %struct.bitmap_head_def** %4, align 8, !tbaa !70
  %cond_local_set3 = getelementptr inbounds i8* %call, i64 48
  %5 = bitcast i8* %cond_local_set3 to %struct.bitmap_head_def**
  store %struct.bitmap_head_def* %cond_local_set, %struct.bitmap_head_def** %5, align 8, !tbaa !71
  %cc0_live = getelementptr inbounds i8* %call, i64 60
  %6 = bitcast i8* %cc0_live to i32*
  store i32 0, i32* %6, align 4, !tbaa !66
  %flags4 = getelementptr inbounds i8* %call, i64 64
  %7 = bitcast i8* %flags4 to i32*
  store i32 %flags, i32* %7, align 4, !tbaa !61
  %and = and i32 %flags, 66
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call5 = tail call i32 @max_reg_num() #3
  %conv = sext i32 %call5 to i64
  %call6 = tail call noalias i8* @xcalloc(i64 %conv, i64 8) #3
  %8 = bitcast i8* %call6 to %struct.rtx_def**
  %reg_next_use = getelementptr inbounds i8* %call, i64 24
  %9 = bitcast i8* %reg_next_use to %struct.rtx_def***
  store %struct.rtx_def** %8, %struct.rtx_def*** %9, align 8, !tbaa !56
  br label %if.end

if.else:                                          ; preds = %entry
  %reg_next_use7 = getelementptr inbounds i8* %call, i64 24
  %10 = bitcast i8* %reg_next_use7 to %struct.rtx_def***
  store %struct.rtx_def** null, %struct.rtx_def*** %10, align 8, !tbaa !56
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call8 = tail call noalias i8* @xmalloc(i64 24) #3
  %11 = bitcast i8* %call8 to %struct.bitmap_head_def*
  %call9 = tail call %struct.bitmap_head_def* @bitmap_initialize(%struct.bitmap_head_def* %11) #3
  %new_set = getelementptr inbounds i8* %call, i64 16
  %12 = bitcast i8* %new_set to %struct.bitmap_head_def**
  store %struct.bitmap_head_def* %call9, %struct.bitmap_head_def** %12, align 8, !tbaa !55
  %13 = load i32* @optimize, align 4, !tbaa !1
  %tobool10 = icmp eq i32 %13, 0
  br i1 %tobool10, label %if.end126, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %14 = load %union.tree_node** @current_function_decl, align 8, !tbaa !5
  %type = getelementptr inbounds %union.tree_node* %14, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type, align 8, !tbaa !64
  %code = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 23
  br i1 %cmp, label %land.lhs.true13, label %land.lhs.true20

land.lhs.true13:                                  ; preds = %land.lhs.true
  %type16 = bitcast %union.tree_node* %15 to %struct.tree_type*
  %no_force_blk_flag = getelementptr inbounds %struct.tree_type* %type16, i64 0, i32 6
  %bf.load17 = load i32* %no_force_blk_flag, align 4
  %bf.clear18 = and i32 %bf.load17, 131072
  %tobool19 = icmp ne i32 %bf.clear18, 0
  %and21 = and i32 %flags, 16
  %tobool22 = icmp eq i32 %and21, 0
  %or.cond = or i1 %tobool19, %tobool22
  br i1 %or.cond, label %if.end126, label %land.lhs.true23

land.lhs.true20:                                  ; preds = %land.lhs.true
  %.old = and i32 %flags, 16
  %tobool22.old = icmp eq i32 %.old, 0
  br i1 %tobool22.old, label %if.end126, label %land.lhs.true23

land.lhs.true23:                                  ; preds = %land.lhs.true13, %land.lhs.true20
  %succ = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 5
  %16 = load %struct.edge_def** %succ, align 8, !tbaa !36
  %cmp24 = icmp eq %struct.edge_def* %16, null
  br i1 %cmp24, label %if.then38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true23
  %succ_next = getelementptr inbounds %struct.edge_def* %16, i64 0, i32 1
  %17 = load %struct.edge_def** %succ_next, align 8, !tbaa !40
  %cmp27 = icmp eq %struct.edge_def* %17, null
  br i1 %cmp27, label %land.lhs.true29, label %if.end126

land.lhs.true29:                                  ; preds = %lor.lhs.false
  %dest = getelementptr inbounds %struct.edge_def* %16, i64 0, i32 3
  %18 = load %struct.basic_block_def** %dest, align 8, !tbaa !37
  %cmp31 = icmp eq %struct.basic_block_def* %18, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp31, label %land.lhs.true33, label %if.end126

land.lhs.true33:                                  ; preds = %land.lhs.true29
  %19 = load %struct.function** @cfun, align 8, !tbaa !5
  %calls_eh_return = getelementptr inbounds %struct.function* %19, i64 0, i32 56
  %20 = bitcast i24* %calls_eh_return to i32*
  %bf.load34 = load i32* %20, align 8
  %bf.clear36 = and i32 %bf.load34, 128
  %tobool37 = icmp eq i32 %bf.clear36, 0
  br i1 %tobool37, label %if.then38, label %if.end126

if.then38:                                        ; preds = %land.lhs.true33, %land.lhs.true23
  %end = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 1
  %insn.0162 = load %struct.rtx_def** %end, align 8
  %head = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 0
  %21 = load %struct.rtx_def** %head, align 8, !tbaa !12
  %cmp39163 = icmp eq %struct.rtx_def* %insn.0162, %21
  br i1 %cmp39163, label %if.end126, label %for.body

for.body:                                         ; preds = %if.then38, %for.inc
  %22 = phi i32 [ %44, %for.inc ], [ 0, %if.then38 ]
  %23 = phi %struct.rtx_def* [ %i.052.i168, %for.inc ], [ null, %if.then38 ]
  %insn.0164 = phi %struct.rtx_def* [ %insn.0, %for.inc ], [ %insn.0162, %if.then38 ]
  %24 = getelementptr inbounds %struct.rtx_def* %insn.0164, i64 0, i32 0
  %bf.load41 = load i32* %24, align 8
  %bf.clear42 = and i32 %bf.load41, 65535
  %cmp43 = icmp eq i32 %bf.clear42, 32
  %25 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 32), align 1
  %cmp49 = icmp eq i8 %25, 105
  %or.cond170 = and i1 %cmp43, %cmp49
  br i1 %or.cond170, label %cond.true, label %for.inc

cond.true:                                        ; preds = %for.body
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %insn.0164, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 0
  %bf.load52 = load i32* %27, align 8
  %bf.clear53 = and i32 %bf.load52, 65535
  %cmp54 = icmp eq i32 %bf.clear53, 47
  br i1 %cmp54, label %cond.end65, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call63 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.0164, %struct.rtx_def* %26) #3
  br label %cond.end65

cond.end65:                                       ; preds = %cond.true, %cond.false
  %cond66 = phi %struct.rtx_def* [ %call63, %cond.false ], [ %26, %cond.true ]
  %tobool67 = icmp eq %struct.rtx_def* %cond66, null
  br i1 %tobool67, label %for.inc, label %land.lhs.true68

land.lhs.true68:                                  ; preds = %cond.end65
  %arrayidx70 = getelementptr inbounds %struct.rtx_def* %cond66, i64 0, i32 1, i64 0
  %rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx71, align 8, !tbaa !5
  %29 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 0
  %bf.load72 = load i32* %29, align 8
  %bf.clear73 = and i32 %bf.load72, 65535
  %cmp74 = icmp eq i32 %bf.clear73, 66
  br i1 %cmp74, label %if.then76, label %for.inc

if.then76:                                        ; preds = %land.lhs.true68
  %call80 = tail call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %28) #3
  %30 = getelementptr inbounds %struct.rtx_def* %call80, i64 0, i32 0
  %bf.load81 = load i32* %30, align 8
  %bf.clear83 = and i32 %bf.load81, 67108864
  %tobool84 = icmp eq i32 %bf.clear83, 0
  br i1 %tobool84, label %if.end86, label %for.inc

if.end86:                                         ; preds = %if.then76
  %arrayidx88 = getelementptr inbounds %struct.rtx_def* %call80, i64 0, i32 1, i64 0
  %rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx89, align 8, !tbaa !5
  %32 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !tbaa !5
  %cmp90 = icmp eq %struct.rtx_def* %31, %32
  br i1 %cmp90, label %if.then120, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %if.end86
  %33 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 0
  %bf.load96 = load i32* %33, align 8
  %bf.clear97 = and i32 %bf.load96, 65535
  %cmp98 = icmp eq i32 %bf.clear97, 75
  br i1 %cmp98, label %land.lhs.true100, label %for.inc

land.lhs.true100:                                 ; preds = %lor.lhs.false92
  %fld104 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1
  %rtx106 = bitcast [1 x %union.rtunion_def]* %fld104 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx106, align 8, !tbaa !5
  %cmp107 = icmp eq %struct.rtx_def* %34, %32
  br i1 %cmp107, label %land.lhs.true109, label %for.inc

land.lhs.true109:                                 ; preds = %land.lhs.true100
  %arrayidx114 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 1
  %rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**
  %35 = load %struct.rtx_def** %rtx115, align 8, !tbaa !5
  %36 = getelementptr inbounds %struct.rtx_def* %35, i64 0, i32 0
  %bf.load116 = load i32* %36, align 8
  %bf.clear117 = and i32 %bf.load116, 65535
  %cmp118 = icmp ne i32 %bf.clear117, 54
  %bf.clear.i = and i32 %bf.load81, 16711680
  %cmp.i = icmp eq i32 %bf.clear.i, 3342336
  %or.cond172 = or i1 %cmp118, %cmp.i
  br i1 %or.cond172, label %for.inc, label %if.end.i

if.then120:                                       ; preds = %if.end86
  %.old171 = and i32 %bf.load81, 16711680
  %cmp.i.old = icmp eq i32 %.old171, 3342336
  br i1 %cmp.i.old, label %for.inc, label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true109, %if.then120
  %tobool53.i = icmp eq %struct.rtx_def* %23, null
  br i1 %tobool53.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.end.i, %for.inc.i.for.body.i_crit_edge
  %37 = phi %struct.rtx_def* [ %.pre, %for.inc.i.for.body.i_crit_edge ], [ %31, %if.end.i ]
  %i.054.i = phi %struct.rtx_def* [ %i.0.i, %for.inc.i.for.body.i_crit_edge ], [ %23, %if.end.i ]
  %fld.i = getelementptr inbounds %struct.rtx_def* %i.054.i, i64 0, i32 1
  %rtx.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !5
  %arrayidx5.i = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 1, i64 0
  %rtx6.i = bitcast %union.rtunion_def* %arrayidx5.i to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx6.i, align 8, !tbaa !5
  %call.i = tail call i32 @rtx_equal_p(%struct.rtx_def* %37, %struct.rtx_def* %39) #3
  %tobool7.i = icmp eq i32 %call.i, 0
  br i1 %tobool7.i, label %for.inc.i, label %if.then8.i

if.then8.i:                                       ; preds = %for.body.i
  %bf.load9.i = load i32* %30, align 8
  %bf.lshr10.i = lshr i32 %bf.load9.i, 16
  %bf.clear11.i = and i32 %bf.lshr10.i, 255
  %idxprom50.i = zext i32 %bf.clear11.i to i64
  %arrayidx12.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom50.i
  %40 = load i8* %arrayidx12.i, align 1, !tbaa !15
  %41 = getelementptr inbounds %struct.rtx_def* %38, i64 0, i32 0
  %bf.load13.i = load i32* %41, align 8
  %bf.lshr14.i = lshr i32 %bf.load13.i, 16
  %bf.clear15.i = and i32 %bf.lshr14.i, 255
  %idxprom1651.i = zext i32 %bf.clear15.i to i64
  %arrayidx17.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom1651.i
  %42 = load i8* %arrayidx17.i, align 1, !tbaa !15
  %cmp19.i = icmp ugt i8 %40, %42
  br i1 %cmp19.i, label %if.then21.i, label %for.inc

if.then21.i:                                      ; preds = %if.then8.i
  %43 = getelementptr inbounds [1 x %union.rtunion_def]* %fld.i, i64 0, i64 0, i32 0
  %mem.c.i = ptrtoint %struct.rtx_def* %call80 to i64
  store i64 %mem.c.i, i64* %43, align 8, !tbaa !5
  br label %for.inc

for.inc.i:                                        ; preds = %for.body.i
  %arrayidx28.i = getelementptr inbounds %struct.rtx_def* %i.054.i, i64 0, i32 1, i64 1
  %rtx29.i = bitcast %union.rtunion_def* %arrayidx28.i to %struct.rtx_def**
  %i.0.i = load %struct.rtx_def** %rtx29.i, align 8
  %tobool.i = icmp eq %struct.rtx_def* %i.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  %.pre = load %struct.rtx_def** %rtx89, align 8, !tbaa !5
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i, %if.end.i
  %cmp30.i = icmp slt i32 %22, 100
  br i1 %cmp30.i, label %if.then32.i, label %for.inc

if.then32.i:                                      ; preds = %for.end.i
  %call34.i = tail call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call80, %struct.rtx_def* %23) #3
  store %struct.rtx_def* %call34.i, %struct.rtx_def** %2, align 8, !tbaa !69
  %inc.i = add nsw i32 %22, 1
  store i32 %inc.i, i32* %3, align 4, !tbaa !68
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true109, %if.then32.i, %for.end.i, %if.then21.i, %if.then8.i, %if.then120, %if.then76, %cond.end65, %for.body, %land.lhs.true68, %land.lhs.true100, %lor.lhs.false92
  %44 = phi i32 [ %inc.i, %if.then32.i ], [ %22, %for.end.i ], [ %22, %if.then21.i ], [ %22, %if.then8.i ], [ %22, %if.then120 ], [ %22, %if.then76 ], [ %22, %cond.end65 ], [ %22, %for.body ], [ %22, %land.lhs.true68 ], [ %22, %land.lhs.true109 ], [ %22, %land.lhs.true100 ], [ %22, %lor.lhs.false92 ]
  %i.052.i168 = phi %struct.rtx_def* [ %call34.i, %if.then32.i ], [ %23, %for.end.i ], [ %23, %if.then21.i ], [ %23, %if.then8.i ], [ %23, %if.then120 ], [ %23, %if.then76 ], [ %23, %cond.end65 ], [ %23, %for.body ], [ %23, %land.lhs.true68 ], [ %23, %land.lhs.true109 ], [ %23, %land.lhs.true100 ], [ %23, %lor.lhs.false92 ]
  %arrayidx124 = getelementptr inbounds %struct.rtx_def* %insn.0164, i64 0, i32 1, i64 1
  %rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %rtx125, align 8
  %45 = load %struct.rtx_def** %head, align 8, !tbaa !12
  %cmp39 = icmp eq %struct.rtx_def* %insn.0, %45
  br i1 %cmp39, label %if.end126, label %for.body

if.end126:                                        ; preds = %for.inc, %if.then38, %land.lhs.true13, %land.lhs.true33, %land.lhs.true20, %if.end, %land.lhs.true29, %lor.lhs.false
  ret %struct.propagate_block_info* %0
}

declare noalias i8* @xmalloc(i64) #1

declare noalias i8* @xcalloc(i64, i64) #1

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @canon_rtx(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @free_propagate_block_info(%struct.propagate_block_info* %pbi) #0 {
entry:
  %mem_set_list = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 4
  tail call void @free_EXPR_LIST_list(%struct.rtx_def** %mem_set_list) #3
  %new_set = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 2
  %0 = load %struct.bitmap_head_def** %new_set, align 8, !tbaa !55
  %tobool = icmp eq %struct.bitmap_head_def* %0, null
  br i1 %tobool, label %do.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @bitmap_clear(%struct.bitmap_head_def* %0) #3
  %1 = load %struct.bitmap_head_def** %new_set, align 8, !tbaa !55
  %2 = bitcast %struct.bitmap_head_def* %1 to i8*
  tail call void @free(i8* %2)
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %new_set, align 8, !tbaa !55
  br label %do.end

do.end:                                           ; preds = %entry, %if.then
  %reg_next_use = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 3
  %3 = load %struct.rtx_def*** %reg_next_use, align 8, !tbaa !56
  %tobool4 = icmp eq %struct.rtx_def** %3, null
  br i1 %tobool4, label %if.end7, label %if.then5

if.then5:                                         ; preds = %do.end
  %4 = bitcast %struct.rtx_def** %3 to i8*
  tail call void @free(i8* %4)
  br label %if.end7

if.end7:                                          ; preds = %do.end, %if.then5
  %5 = bitcast %struct.propagate_block_info* %pbi to i8*
  tail call void @free(i8* %5)
  ret void
}

declare i32 @bitmap_operation(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @regno_uninitialized(i32 %regno) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %cmp1 = icmp ult i32 %regno, 53
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %idxprom = zext i32 %regno to i64
  %arrayidx = getelementptr inbounds [53 x i8]* @global_regs, i64 0, i64 %idxprom
  %1 = load i8* %arrayidx, align 1, !tbaa !15
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %lor.lhs.false2, label %return

lor.lhs.false2:                                   ; preds = %land.lhs.true
  %arrayidx4 = getelementptr inbounds [53 x i8]* @fixed_regs, i64 0, i64 %idxprom
  %2 = load i8* %arrayidx4, align 1, !tbaa !15
  %tobool6 = icmp eq i8 %2, 0
  br i1 %tobool6, label %lor.lhs.false7, label %return

lor.lhs.false7:                                   ; preds = %lor.lhs.false2
  %call = tail call zeroext i1 @ix86_function_arg_regno_p(i32 %regno) #3
  br i1 %call, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false7, %lor.lhs.false
  %3 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 4
  %arrayidx9 = bitcast %union.varray_data_tag* %data to %struct.basic_block_def**
  %4 = load %struct.basic_block_def** %arrayidx9, align 8, !tbaa !5
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %4, i64 0, i32 8
  %5 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !23
  %call10 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %5, i32 %regno) #3
  br label %return

return:                                           ; preds = %entry, %lor.lhs.false7, %land.lhs.true, %lor.lhs.false2, %if.end
  %retval.0 = phi i32 [ %call10, %if.end ], [ 0, %lor.lhs.false2 ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false7 ], [ 0, %entry ]
  ret i32 %retval.0
}

declare zeroext i1 @ix86_function_arg_regno_p(i32) #1

declare i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @regno_clobbered_at_setjmp(i32 %regno) #0 {
entry:
  %0 = load i32* @n_basic_blocks, align 4, !tbaa !1
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %regno to i64
  %1 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom
  %2 = load %struct.reg_info_def** %arrayidx, align 8, !tbaa !5
  %sets = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 3
  %3 = load i32* %sets, align 4, !tbaa !16
  %cmp1 = icmp sgt i32 %3, 1
  br i1 %cmp1, label %land.rhs, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !5
  %data2 = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 4
  %arrayidx3 = bitcast %union.varray_data_tag* %data2 to %struct.basic_block_def**
  %5 = load %struct.basic_block_def** %arrayidx3, align 8, !tbaa !5
  %global_live_at_start = getelementptr inbounds %struct.basic_block_def* %5, i64 0, i32 8
  %6 = load %struct.bitmap_head_def** %global_live_at_start, align 8, !tbaa !23
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %regno) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct.bitmap_head_def** @regs_live_at_setjmp, align 8, !tbaa !5
  %call4 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %7, i32 %regno) #3
  %tobool5 = icmp ne i32 %call4, 0
  br label %land.end

land.end:                                         ; preds = %lor.lhs.false, %land.rhs
  %8 = phi i1 [ false, %lor.lhs.false ], [ %tobool5, %land.rhs ]
  %land.ext = zext i1 %8 to i32
  br label %return

return:                                           ; preds = %entry, %land.end
  %retval.0 = phi i32 [ %land.ext, %land.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind readonly uwtable
define %struct.rtx_def* @find_use_as_address(%struct.rtx_def* readonly %x, %struct.rtx_def* readnone %reg, i64 %plusconst) #5 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom152 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom152
  %1 = load i8** %arrayidx, align 8, !tbaa !5
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %land.lhs.true, label %if.end42

land.lhs.true:                                    ; preds = %entry
  %arrayidx1 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %cmp2 = icmp eq %struct.rtx_def* %2, %reg
  %cmp4 = icmp eq i64 %plusconst, 0
  %or.cond = and i1 %cmp2, %cmp4
  br i1 %or.cond, label %return, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load10 = load i32* %3, align 8
  %bf.clear11 = and i32 %bf.load10, 65535
  %cmp12 = icmp eq i32 %bf.clear11, 75
  br i1 %cmp12, label %land.lhs.true13, label %if.end42

land.lhs.true13:                                  ; preds = %land.lhs.true6
  %fld17 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1
  %rtx19 = bitcast [1 x %union.rtunion_def]* %fld17 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx19, align 8, !tbaa !5
  %cmp20 = icmp eq %struct.rtx_def* %4, %reg
  br i1 %cmp20, label %land.lhs.true21, label %if.end42

land.lhs.true21:                                  ; preds = %land.lhs.true13
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 1
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx27, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 0
  %bf.load28 = load i32* %6, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 54
  br i1 %cmp30, label %land.lhs.true31, label %if.end42

land.lhs.true31:                                  ; preds = %land.lhs.true21
  %rtwint = getelementptr inbounds %struct.rtx_def* %5, i64 0, i32 1, i64 0, i32 0
  %7 = load i64* %rtwint, align 8, !tbaa !14
  %cmp40 = icmp eq i64 %7, %plusconst
  br i1 %cmp40, label %return, label %if.end42

if.end42:                                         ; preds = %entry, %land.lhs.true31, %land.lhs.true21, %land.lhs.true13, %land.lhs.true6
  %8 = and i32 %bf.load, 65534
  %9 = icmp eq i32 %8, 132
  br i1 %9, label %if.then45, label %if.end52

if.then45:                                        ; preds = %if.end42
  %arrayidx47 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx48, align 8, !tbaa !5
  %call = tail call %struct.rtx_def* @find_use_as_address(%struct.rtx_def* %10, %struct.rtx_def* %reg, i64 0)
  %cmp49 = icmp ne %struct.rtx_def* %call, null
  %cmp53 = icmp eq %struct.rtx_def* %x, %reg
  %or.cond153 = or i1 %cmp49, %cmp53
  br i1 %or.cond153, label %return, label %if.end55

if.end52:                                         ; preds = %if.end42
  %cmp53.old = icmp eq %struct.rtx_def* %x, %reg
  br i1 %cmp53.old, label %return, label %if.end55

if.end55:                                         ; preds = %if.then45, %if.end52
  %arrayidx57 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom152
  %11 = load i8* %arrayidx57, align 1, !tbaa !15
  %cmp58164169 = icmp eq i8 %11, 0
  br i1 %cmp58164169, label %return, label %for.body.lr.ph.lr.ph

for.body.lr.ph.lr.ph:                             ; preds = %if.end55
  %conv = zext i8 %11 to i64
  br label %for.body.lr.ph

for.cond.outer.backedge:                          ; preds = %if.then65, %for.cond90
  %value.0.ph.be = phi %struct.rtx_def* [ %value.1.ph, %for.cond90 ], [ %call70, %if.then65 ]
  %i.0165176 = trunc i64 %indvars.iv.next to i32
  %cmp58164 = icmp sgt i32 %i.0165176, 0
  br i1 %cmp58164, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %for.body.lr.ph.lr.ph, %for.cond.outer.backedge
  %i.0163171.in = phi i64 [ %conv, %for.body.lr.ph.lr.ph ], [ %indvars.iv.next, %for.cond.outer.backedge ]
  %value.0.ph170 = phi %struct.rtx_def* [ null, %for.body.lr.ph.lr.ph ], [ %value.0.ph.be, %for.cond.outer.backedge ]
  %cmp71 = icmp eq %struct.rtx_def* %value.0.ph170, null
  %sext = shl i64 %i.0163171.in, 32
  %12 = ashr exact i64 %sext, 32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv = phi i64 [ %12, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx61 = getelementptr inbounds i8* %1, i64 %indvars.iv.next
  %13 = load i8* %arrayidx61, align 1, !tbaa !15
  switch i8 %13, label %for.cond.backedge [
    i8 101, label %if.then65
    i8 69, label %if.then85
  ]

for.cond.backedge:                                ; preds = %for.body, %if.else
  %14 = trunc i64 %indvars.iv.next to i32
  %cmp58 = icmp sgt i32 %14, 0
  br i1 %cmp58, label %for.body, label %return

if.then65:                                        ; preds = %for.body
  %arrayidx68 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next
  %rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx69, align 8, !tbaa !5
  %call70 = tail call %struct.rtx_def* @find_use_as_address(%struct.rtx_def* %15, %struct.rtx_def* %reg, i64 %plusconst)
  br i1 %cmp71, label %for.cond.outer.backedge, label %if.else

if.else:                                          ; preds = %if.then65
  %cmp74 = icmp eq %struct.rtx_def* %call70, null
  br i1 %cmp74, label %for.cond.backedge, label %return

if.then85:                                        ; preds = %for.body
  %arrayidx88 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next
  %rtvec = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtvec_def**
  %16 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !5
  %num_elem = getelementptr inbounds %struct.rtvec_def* %16, i64 0, i32 0
  %17 = load i32* %num_elem, align 4, !tbaa !62
  br label %for.cond90.outer

for.cond90.outer.loopexit:                        ; preds = %for.body93
  %18 = trunc i64 %indvars.iv.next189 to i32
  br label %for.cond90.outer

for.cond90.outer:                                 ; preds = %for.cond90.outer.loopexit, %if.then85
  %value.1.ph = phi %struct.rtx_def* [ %value.0.ph170, %if.then85 ], [ %call100, %for.cond90.outer.loopexit ]
  %j.0.in.ph = phi i32 [ %17, %if.then85 ], [ %18, %for.cond90.outer.loopexit ]
  %cmp101 = icmp eq %struct.rtx_def* %value.1.ph, null
  %19 = sext i32 %j.0.in.ph to i64
  br label %for.cond90

for.cond90:                                       ; preds = %for.cond90.outer, %if.else104
  %indvars.iv188 = phi i64 [ %19, %for.cond90.outer ], [ %indvars.iv.next189, %if.else104 ]
  %indvars.iv.next189 = add nsw i64 %indvars.iv188, -1
  %20 = trunc i64 %indvars.iv188 to i32
  %cmp91 = icmp sgt i32 %20, 0
  br i1 %cmp91, label %for.body93, label %for.cond.outer.backedge

for.body93:                                       ; preds = %for.cond90
  %arrayidx99 = getelementptr inbounds %struct.rtvec_def* %16, i64 0, i32 1, i64 %indvars.iv.next189
  %21 = load %struct.rtx_def** %arrayidx99, align 8, !tbaa !5
  %call100 = tail call %struct.rtx_def* @find_use_as_address(%struct.rtx_def* %21, %struct.rtx_def* %reg, i64 %plusconst)
  br i1 %cmp101, label %for.cond90.outer.loopexit, label %if.else104

if.else104:                                       ; preds = %for.body93
  %cmp105 = icmp eq %struct.rtx_def* %call100, null
  br i1 %cmp105, label %for.cond90, label %return

return:                                           ; preds = %for.cond.outer.backedge, %if.else, %for.cond.backedge, %if.else104, %if.end55, %if.then45, %if.end52, %land.lhs.true31, %land.lhs.true
  %retval.0 = phi %struct.rtx_def* [ %x, %land.lhs.true ], [ %x, %land.lhs.true31 ], [ inttoptr (i64 1 to %struct.rtx_def*), %if.then45 ], [ inttoptr (i64 1 to %struct.rtx_def*), %if.end52 ], [ null, %if.end55 ], [ inttoptr (i64 1 to %struct.rtx_def*), %if.else104 ], [ inttoptr (i64 1 to %struct.rtx_def*), %if.else ], [ %value.0.ph170, %for.cond.backedge ], [ %value.0.ph.be, %for.cond.outer.backedge ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define void @dump_regset(%struct.bitmap_head_def* readonly %r, %struct._IO_FILE* nocapture %outf) #0 {
entry:
  %cmp = icmp eq %struct.bitmap_head_def* %r, null
  br i1 %cmp, label %if.then, label %do.body

if.then:                                          ; preds = %entry
  %0 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8]* @.str5, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %outf)
  br label %do.end

do.body:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.bitmap_head_def* %r, i64 0, i32 0
  %ptr_.166 = load %struct.bitmap_element_def** %first, align 8
  %cmp867 = icmp eq %struct.bitmap_element_def* %ptr_.166, null
  br i1 %cmp867, label %do.end, label %for.cond9.preheader

for.cond9.preheader:                              ; preds = %do.body, %if.end34.1
  %ptr_.168 = phi %struct.bitmap_element_def* [ %ptr_.1, %if.end34.1 ], [ %ptr_.166, %do.body ]
  %indx20 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.168, i64 0, i32 2
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def* %ptr_.168, i64 0, i32 3, i64 0
  %1 = load i64* %arrayidx, align 8, !tbaa !14
  %cmp12 = icmp eq i64 %1, 0
  br i1 %cmp12, label %if.end34, label %for.body16

for.body16:                                       ; preds = %for.cond9.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond9.preheader ]
  %word_.0 = phi i64 [ %word_.1, %for.inc ], [ %1, %for.cond9.preheader ]
  %shl = shl i64 1, %indvars.iv
  %and = and i64 %shl, %word_.0
  %cmp17 = icmp eq i64 %and, 0
  br i1 %cmp17, label %for.inc, label %if.then18

if.then18:                                        ; preds = %for.body16
  %neg = xor i64 %shl, -1
  %and19 = and i64 %word_.0, %neg
  %2 = load i32* %indx20, align 4, !tbaa !47
  %mul = shl i32 %2, 7
  %3 = trunc i64 %indvars.iv to i32
  %add22 = add i32 %3, %mul
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([4 x i8]* @.str6, i64 0, i64 0), i32 %add22) #3
  %cmp24 = icmp slt i32 %add22, 53
  br i1 %cmp24, label %if.then25, label %if.end29

if.then25:                                        ; preds = %if.then18
  %idxprom26 = sext i32 %add22 to i64
  %arrayidx27 = getelementptr inbounds [53 x i8*]* @reg_names, i64 0, i64 %idxprom26
  %4 = load i8** %arrayidx27, align 8, !tbaa !5
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8]* @.str7, i64 0, i64 0), i8* %4) #3
  br label %if.end29

if.end29:                                         ; preds = %if.then25, %if.then18
  %cmp30 = icmp eq i64 %and19, 0
  br i1 %cmp30, label %if.end34, label %for.inc

for.inc:                                          ; preds = %for.body16, %if.end29
  %word_.1 = phi i64 [ %and19, %if.end29 ], [ %word_.0, %for.body16 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = trunc i64 %indvars.iv.next to i32
  %cmp15.old = icmp ult i32 %5, 64
  br i1 %cmp15.old, label %for.body16, label %if.end34

if.end34:                                         ; preds = %for.inc, %if.end29, %for.cond9.preheader
  %arrayidx.1 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.168, i64 0, i32 3, i64 1
  %6 = load i64* %arrayidx.1, align 8, !tbaa !14
  %cmp12.1 = icmp eq i64 %6, 0
  br i1 %cmp12.1, label %if.end34.1, label %for.body16.1

do.end:                                           ; preds = %if.end34.1, %do.body, %if.then
  ret void

for.body16.1:                                     ; preds = %if.end34, %for.inc.1
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc.1 ], [ 0, %if.end34 ]
  %word_.0.1 = phi i64 [ %word_.1.1, %for.inc.1 ], [ %6, %if.end34 ]
  %shl.1 = shl i64 1, %indvars.iv.1
  %and.1 = and i64 %shl.1, %word_.0.1
  %cmp17.1 = icmp eq i64 %and.1, 0
  br i1 %cmp17.1, label %for.inc.1, label %if.then18.1

if.then18.1:                                      ; preds = %for.body16.1
  %neg.1 = xor i64 %shl.1, -1
  %and19.1 = and i64 %word_.0.1, %neg.1
  %7 = load i32* %indx20, align 4, !tbaa !47
  %mul.1 = shl i32 %7, 7
  %8 = add i64 %indvars.iv.1, 64
  %9 = trunc i64 %8 to i32
  %add22.1 = add i32 %9, %mul.1
  %call23.1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([4 x i8]* @.str6, i64 0, i64 0), i32 %add22.1) #3
  %cmp24.1 = icmp slt i32 %add22.1, 53
  br i1 %cmp24.1, label %if.then25.1, label %if.end29.1

if.then25.1:                                      ; preds = %if.then18.1
  %idxprom26.1 = sext i32 %add22.1 to i64
  %arrayidx27.1 = getelementptr inbounds [53 x i8*]* @reg_names, i64 0, i64 %idxprom26.1
  %10 = load i8** %arrayidx27.1, align 8, !tbaa !5
  %call28.1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %outf, i8* getelementptr inbounds ([6 x i8]* @.str7, i64 0, i64 0), i8* %10) #3
  br label %if.end29.1

if.end29.1:                                       ; preds = %if.then25.1, %if.then18.1
  %cmp30.1 = icmp eq i64 %and19.1, 0
  br i1 %cmp30.1, label %if.end34.1, label %for.inc.1

for.inc.1:                                        ; preds = %if.end29.1, %for.body16.1
  %word_.1.1 = phi i64 [ %and19.1, %if.end29.1 ], [ %word_.0.1, %for.body16.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %11 = trunc i64 %indvars.iv.next.1 to i32
  %cmp15.old.1 = icmp ult i32 %11, 64
  br i1 %cmp15.old.1, label %for.body16.1, label %if.end34.1

if.end34.1:                                       ; preds = %if.end29.1, %for.inc.1, %if.end34
  %next39 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.168, i64 0, i32 0
  %ptr_.1 = load %struct.bitmap_element_def** %next39, align 8
  %cmp8 = icmp eq %struct.bitmap_element_def* %ptr_.1, null
  br i1 %cmp8, label %do.end, label %for.cond9.preheader
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #4

; Function Attrs: nounwind uwtable
define void @debug_regset(%struct.bitmap_head_def* readonly %r) #0 {
entry:
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !5
  tail call void @dump_regset(%struct.bitmap_head_def* %r, %struct._IO_FILE* %0)
  %call = tail call i32 @putc(i32 10, %struct._IO_FILE* %0) #3
  ret void
}

; Function Attrs: nounwind
declare i32 @putc(i32, %struct._IO_FILE* nocapture) #4

; Function Attrs: nounwind uwtable
define void @recompute_reg_usage(%struct.rtx_def* nocapture readnone %f, i32 %loop_step) #0 {
entry:
  %call.i = tail call i32 @max_reg_num() #3
  store i32 %call.i, i32* @max_regno, align 4, !tbaa !1
  %conv.i = sext i32 %call.i to i64
  tail call void @allocate_reg_info(i64 %conv.i, i32 0, i32 0) #3
  %0 = load i32* @max_regno, align 4, !tbaa !1
  %cmp29.i = icmp sgt i32 %0, 0
  br i1 %cmp29.i, label %for.body.lr.ph.i, label %allocate_reg_life_data.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %1 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !5
  %data.i = getelementptr inbounds %struct.varray_head_tag* %1, i64 0, i32 4
  %reg.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.reg_info_def*]*
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %arrayidx.i = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg.i, i64 0, i64 %indvars.iv.i
  %2 = load %struct.reg_info_def** %arrayidx.i, align 8, !tbaa !5
  %sets.i = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 3
  store i32 0, i32* %sets.i, align 4, !tbaa !16
  %refs.i = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 4
  store i32 0, i32* %refs.i, align 4, !tbaa !18
  %deaths.i = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 6
  store i32 0, i32* %deaths.i, align 4, !tbaa !19
  %calls_crossed.i = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 8
  store i32 0, i32* %calls_crossed.i, align 4, !tbaa !20
  %live_length.i = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 7
  store i32 0, i32* %live_length.i, align 4, !tbaa !21
  %basic_block.i = getelementptr inbounds %struct.reg_info_def* %2, i64 0, i32 9
  store i32 -1, i32* %basic_block.i, align 4, !tbaa !22
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %3 = load i32* @max_regno, align 4, !tbaa !1
  %4 = trunc i64 %indvars.iv.next.i to i32
  %cmp.i = icmp slt i32 %4, %3
  br i1 %cmp.i, label %for.body.i, label %allocate_reg_life_data.exit

allocate_reg_life_data.exit:                      ; preds = %for.body.i, %entry
  tail call void @update_life_info(%struct.simple_bitmap_def* null, i32 0, i32 4)
  ret void
}

declare void @free_EXPR_LIST_node(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @reg_set_to_hard_reg_set(i64* nocapture %to, %struct.bitmap_head_def* nocapture readonly %from) #0 {
entry:
  %first = getelementptr inbounds %struct.bitmap_head_def* %from, i64 0, i32 0
  %ptr_.158 = load %struct.bitmap_element_def** %first, align 8
  %cmp559 = icmp eq %struct.bitmap_element_def* %ptr_.158, null
  br i1 %cmp559, label %do.end, label %for.cond6.preheader

for.cond6.preheader:                              ; preds = %entry, %for.end32
  %ptr_.160 = phi %struct.bitmap_element_def* [ %ptr_.1, %for.end32 ], [ %ptr_.158, %entry ]
  %indx17 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.160, i64 0, i32 2
  br label %for.body8

for.body8:                                        ; preds = %for.cond6.preheader, %if.end29
  %indvars.iv62 = phi i64 [ 0, %for.cond6.preheader ], [ %indvars.iv.next63, %if.end29 ]
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def* %ptr_.160, i64 0, i32 3, i64 %indvars.iv62
  %0 = load i64* %arrayidx, align 8, !tbaa !14
  %cmp9 = icmp eq i64 %0, 0
  br i1 %cmp9, label %if.end29, label %for.body13.preheader

for.body13.preheader:                             ; preds = %for.body8
  %1 = shl i64 %indvars.iv62, 6
  br label %for.body13

for.body13:                                       ; preds = %for.body13.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body13.preheader ], [ %indvars.iv.next, %for.inc ]
  %word_.0 = phi i64 [ %0, %for.body13.preheader ], [ %word_.1, %for.inc ]
  %shl = shl i64 1, %indvars.iv
  %and = and i64 %shl, %word_.0
  %cmp14 = icmp eq i64 %and, 0
  br i1 %cmp14, label %for.inc, label %if.then15

if.then15:                                        ; preds = %for.body13
  %neg = xor i64 %shl, -1
  %and16 = and i64 %word_.0, %neg
  %2 = load i32* %indx17, align 4, !tbaa !47
  %mul = shl i32 %2, 7
  %3 = add i64 %indvars.iv, %1
  %4 = trunc i64 %3 to i32
  %add19 = add i32 %4, %mul
  %cmp20 = icmp sgt i32 %add19, 52
  br i1 %cmp20, label %do.end, label %if.end22

if.end22:                                         ; preds = %if.then15
  %sh_prom23 = zext i32 %add19 to i64
  %shl24 = shl i64 1, %sh_prom23
  %5 = load i64* %to, align 8, !tbaa !14
  %or = or i64 %5, %shl24
  store i64 %or, i64* %to, align 8, !tbaa !14
  %cmp25 = icmp eq i64 %and16, 0
  br i1 %cmp25, label %if.end29, label %for.inc

for.inc:                                          ; preds = %for.body13, %if.end22
  %word_.1 = phi i64 [ %and16, %if.end22 ], [ %word_.0, %for.body13 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = trunc i64 %indvars.iv.next to i32
  %cmp12.old = icmp ult i32 %6, 64
  br i1 %cmp12.old, label %for.body13, label %if.end29

if.end29:                                         ; preds = %for.inc, %if.end22, %for.body8
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1
  %7 = trunc i64 %indvars.iv.next63 to i32
  %cmp7 = icmp ult i32 %7, 2
  br i1 %cmp7, label %for.body8, label %for.end32

for.end32:                                        ; preds = %if.end29
  %next34 = getelementptr inbounds %struct.bitmap_element_def* %ptr_.160, i64 0, i32 0
  %ptr_.1 = load %struct.bitmap_element_def** %next34, align 8
  %cmp5 = icmp eq %struct.bitmap_element_def* %ptr_.1, null
  br i1 %cmp5, label %do.end, label %for.cond6.preheader

do.end:                                           ; preds = %for.end32, %if.then15, %entry
  ret void
}

declare void @free_INSN_LIST_list(%struct.rtx_def**) #1

declare i32 @anti_dependence(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @invalidate_mems_from_set(%struct.propagate_block_info* nocapture %pbi, %struct.rtx_def* %exp) #0 {
entry:
  %mem_set_list = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 4
  %0 = load %struct.rtx_def** %mem_set_list, align 8, !tbaa !69
  %tobool2224 = icmp eq %struct.rtx_def* %0, null
  br i1 %tobool2224, label %while.end, label %while.body.lr.ph.lr.ph

while.body.lr.ph.lr.ph:                           ; preds = %entry
  %mem_set_list_len = getelementptr inbounds %struct.propagate_block_info* %pbi, i64 0, i32 7
  br label %while.body.lr.ph

while.cond.outer.loopexit:                        ; preds = %while.body, %while.body.us
  %.lcssa = phi %struct.rtx_def* [ %2, %while.body.us ], [ %5, %while.body ]
  %temp.0.lcssa21 = phi %struct.rtx_def* [ %temp.023.us, %while.body.us ], [ %temp.023, %while.body ]
  %tobool22 = icmp eq %struct.rtx_def* %.lcssa, null
  br i1 %tobool22, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.body.lr.ph.lr.ph, %while.cond.outer.loopexit
  %temp.0.ph26 = phi %struct.rtx_def* [ %0, %while.body.lr.ph.lr.ph ], [ %.lcssa, %while.cond.outer.loopexit ]
  %prev.0.ph25 = phi %struct.rtx_def* [ null, %while.body.lr.ph.lr.ph ], [ %temp.0.lcssa21, %while.cond.outer.loopexit ]
  %tobool5 = icmp eq %struct.rtx_def* %prev.0.ph25, null
  %1 = getelementptr inbounds %struct.rtx_def* %prev.0.ph25, i64 0, i32 1, i64 1, i32 0
  br i1 %tobool5, label %while.body.us, label %while.body

while.body.us:                                    ; preds = %while.body.lr.ph, %if.end.us
  %temp.023.us = phi %struct.rtx_def* [ %2, %if.end.us ], [ %temp.0.ph26, %while.body.lr.ph ]
  %arrayidx.us = getelementptr inbounds %struct.rtx_def* %temp.023.us, i64 0, i32 1, i64 1
  %rtx.us = bitcast %union.rtunion_def* %arrayidx.us to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx.us, align 8, !tbaa !5
  %arrayidx2.us = getelementptr inbounds %struct.rtx_def* %temp.023.us, i64 0, i32 1, i64 0
  %rtx3.us = bitcast %union.rtunion_def* %arrayidx2.us to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx3.us, align 8, !tbaa !5
  %call.us = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %exp, %struct.rtx_def* %3) #3
  %tobool4.us = icmp eq i32 %call.us, 0
  br i1 %tobool4.us, label %while.cond.outer.loopexit, label %if.end.us

if.end.us:                                        ; preds = %while.body.us
  store %struct.rtx_def* %2, %struct.rtx_def** %mem_set_list, align 8, !tbaa !69
  tail call void @free_EXPR_LIST_node(%struct.rtx_def* %temp.023.us) #3
  %4 = load i32* %mem_set_list_len, align 4, !tbaa !68
  %dec.us = add nsw i32 %4, -1
  store i32 %dec.us, i32* %mem_set_list_len, align 4, !tbaa !68
  %tobool.us = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool.us, label %while.end, label %while.body.us

while.body:                                       ; preds = %while.body.lr.ph, %if.end
  %temp.023 = phi %struct.rtx_def* [ %5, %if.end ], [ %temp.0.ph26, %while.body.lr.ph ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %temp.023, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %temp.023, i64 0, i32 1, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx3, align 8, !tbaa !5
  %call = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %exp, %struct.rtx_def* %6) #3
  %tobool4 = icmp eq i32 %call, 0
  br i1 %tobool4, label %while.cond.outer.loopexit, label %if.end

if.end:                                           ; preds = %while.body
  %.c = ptrtoint %struct.rtx_def* %5 to i64
  store i64 %.c, i64* %1, align 8, !tbaa !5
  tail call void @free_EXPR_LIST_node(%struct.rtx_def* %temp.023) #3
  %7 = load i32* %mem_set_list_len, align 4, !tbaa !68
  %dec = add nsw i32 %7, -1
  store i32 %dec, i32* %mem_set_list_len, align 4, !tbaa !68
  %tobool = icmp eq %struct.rtx_def* %5, null
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.cond.outer.loopexit, %if.end, %if.end.us, %entry
  ret void
}

declare i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @dead_or_set_regno_p(%struct.rtx_def*, i32) #1

declare i32 @subreg_regno_offset(i32, i32, i32, i32) #1

declare i32 @side_effects_p(%struct.rtx_def*) #1

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @bitmap_clear_bit(%struct.bitmap_head_def*, i32) #1

declare i32 @asm_noperands(%struct.rtx_def*) #1

declare %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @volatile_refs_p(%struct.rtx_def*) #1

declare %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @delete_insn(%struct.rtx_def*) #1

declare zeroext i1 @purge_dead_edges(%struct.basic_block_def*) #1

declare void @delete_insn_chain(%struct.rtx_def*, %struct.rtx_def*) #1

declare void @sbitmap_zero(%struct.simple_bitmap_def*) #1

declare i32 @for_each_successor_phi(%struct.basic_block_def*, i32 (%struct.rtx_def*, i32, i32, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @set_phi_alternative_reg(%struct.rtx_def* nocapture readnone %insn, i32 %dest_regno, i32 %src_regno, i8* %data) #0 {
entry:
  %0 = bitcast i8* %data to %struct.bitmap_head_def*
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %src_regno) #3
  ret i32 0
}

declare i32 @bitmap_equal_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #1

declare i32 @ix86_frame_pointer_required() #1

; Function Attrs: nounwind uwtable
define internal void @mark_reg(%struct.rtx_def* nocapture readonly %reg, i8* %xset) #0 {
entry:
  %0 = bitcast i8* %xset to %struct.bitmap_head_def*
  %arrayidx = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !1
  %2 = getelementptr inbounds %struct.rtx_def* %reg, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 3342336
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i32 918, i8* getelementptr inbounds ([9 x i8]* @__FUNCTION__.mark_reg, i64 0, i64 0)) #6
  unreachable

if.end:                                           ; preds = %entry
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %1) #3
  %cmp1 = icmp slt i32 %1, 53
  br i1 %cmp1, label %if.then2, label %if.end62

if.then2:                                         ; preds = %if.end
  %3 = and i32 %1, -8
  %4 = icmp eq i32 %3, 8
  %.off = add i32 %1, -21
  %5 = icmp ult i32 %.off, 8
  %or.cond = or i1 %4, %5
  %.off84 = add i32 %1, -45
  %6 = icmp ult i32 %.off84, 8
  %or.cond90 = or i1 %or.cond, %6
  %.off85 = add i32 %1, -29
  %7 = icmp ult i32 %.off85, 8
  %or.cond92 = or i1 %or.cond90, %7
  %bf.load16 = load i32* %2, align 8
  %bf.lshr17 = lshr i32 %bf.load16, 16
  %bf.clear18 = and i32 %bf.lshr17, 255
  br i1 %or.cond92, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then2
  %idxprom87 = zext i32 %bf.clear18 to i64
  %arrayidx19 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom87
  %8 = load i32* %arrayidx19, align 4, !tbaa !15
  %cmp20 = icmp eq i32 %8, 5
  br i1 %cmp20, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true
  %cmp26 = icmp eq i32 %8, 6
  %phitmp = select i1 %cmp26, i32 2, i32 1
  br label %while.cond.preheader

cond.false:                                       ; preds = %if.then2
  switch i32 %bf.clear18, label %cond.false42 [
    i32 18, label %cond.true31
    i32 24, label %cond.true38
  ]

cond.true31:                                      ; preds = %cond.false
  %9 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %9, 25
  %10 = and i32 %and, 1
  %11 = xor i32 %10, 3
  br label %while.cond.preheader

cond.true38:                                      ; preds = %cond.false
  %12 = load i32* @target_flags, align 4, !tbaa !1
  %and39 = lshr i32 %12, 24
  %13 = and i32 %and39, 2
  %14 = xor i32 %13, 6
  br label %while.cond.preheader

cond.false42:                                     ; preds = %cond.false
  %idxprom4686 = zext i32 %bf.clear18 to i64
  %arrayidx47 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom4686
  %15 = load i8* %arrayidx47, align 1, !tbaa !15
  %conv = zext i8 %15 to i32
  %16 = load i32* @target_flags, align 4, !tbaa !1
  %and48 = lshr i32 %16, 23
  %17 = and i32 %and48, 4
  %18 = add i32 %17, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %18
  %div = sdiv i32 %sub, %18
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %lor.rhs, %cond.true31, %cond.false42, %cond.true38
  %n.0.ph = phi i32 [ %14, %cond.true38 ], [ %div, %cond.false42 ], [ %11, %cond.true31 ], [ %phitmp, %lor.rhs ]
  %dec93 = add nsw i32 %n.0.ph, -1
  %cmp5994 = icmp sgt i32 %dec93, 0
  br i1 %cmp5994, label %while.body, label %if.end62

while.body:                                       ; preds = %cond.true, %while.cond.preheader, %while.body
  %dec95 = phi i32 [ %dec, %while.body ], [ 1, %cond.true ], [ %dec93, %while.cond.preheader ]
  %add61 = add nsw i32 %dec95, %1
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %add61) #3
  %dec = add nsw i32 %dec95, -1
  %cmp59 = icmp sgt i32 %dec, 0
  br i1 %cmp59, label %while.body, label %if.end62

if.end62:                                         ; preds = %while.body, %while.cond.preheader, %if.end
  ret void
}

declare void @diddle_return_value(void (%struct.rtx_def*, i8*)*, i8*) #1

declare void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @notice_stack_pointer_modification_1(%struct.rtx_def* readonly %x, %struct.rtx_def* nocapture readnone %pat, i8* nocapture readnone %data) #0 {
entry:
  %0 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 8, !tbaa !5
  %cmp = icmp eq %struct.rtx_def* %0, %x
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp1 = icmp eq i32 %bf.clear, 66
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 0
  %bf.load2 = load i32* %3, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %idxprom19 = zext i32 %bf.clear3 to i64
  %arrayidx4 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom19
  %4 = load i8* %arrayidx4, align 1, !tbaa !15
  %cmp5 = icmp eq i8 %4, 97
  br i1 %cmp5, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %land.lhs.true
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx13, align 8, !tbaa !5
  %cmp14 = icmp eq %struct.rtx_def* %5, %0
  br i1 %cmp14, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true7, %entry
  store i32 0, i32* @current_function_sp_is_unchanging, align 4, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true7, %land.lhs.true, %lor.lhs.false
  ret void
}

declare void @debug_bitmap_file(%struct._IO_FILE*, %struct.bitmap_head_def*) #1

declare void @dump_bb(%struct.basic_block_def*, %struct._IO_FILE*) #1

; Function Attrs: nounwind readonly uwtable
define internal i32 @verify_wide_reg_1(%struct.rtx_def** nocapture readonly %px, i8* nocapture readonly %pregno) #5 {
entry:
  %0 = load %struct.rtx_def** %px, align 8, !tbaa !5
  %1 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 0
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %return

land.lhs.true:                                    ; preds = %entry
  %2 = bitcast i8* %pregno to i32*
  %3 = load i32* %2, align 4, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %4 = load i32* %rtuint, align 4, !tbaa !1
  %cmp1 = icmp eq i32 %4, %3
  br i1 %cmp1, label %if.then, label %return

if.then:                                          ; preds = %land.lhs.true
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear3 = and i32 %bf.lshr, 255
  %idxprom11 = zext i32 %bf.clear3 to i64
  %arrayidx4 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom11
  %5 = load i16* %arrayidx4, align 2, !tbaa !74
  %conv = zext i16 %5 to i32
  %6 = load i32* @target_flags, align 4, !tbaa !1
  %and = lshr i32 %6, 20
  %7 = and i32 %and, 32
  %8 = add i32 %7, 32
  %cmp5 = icmp ugt i32 %conv, %8
  %. = select i1 %cmp5, i32 1, i32 2
  br label %return

return:                                           ; preds = %entry, %land.lhs.true, %if.then
  %retval.0 = phi i32 [ %., %if.then ], [ 0, %land.lhs.true ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #3

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!7 = metadata !{metadata !8, metadata !6, i64 48}
!8 = metadata !{metadata !"function", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !2, i64 64, metadata !2, i64 68, metadata !2, i64 72, metadata !2, i64 76, metadata !6, i64 80, metadata !9, i64 88, metadata !6, i64 120, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !2, i64 152, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !6, i64 240, metadata !6, i64 248, metadata !6, i64 256, metadata !10, i64 264, metadata !6, i64 272, metadata !6, i64 280, metadata !6, i64 288, metadata !6, i64 296, metadata !2, i64 304, metadata !6, i64 312, metadata !6, i64 320, metadata !2, i64 328, metadata !2, i64 332, metadata !2, i64 336, metadata !6, i64 344, metadata !2, i64 352, metadata !2, i64 356, metadata !6, i64 360, metadata !6, i64 368, metadata !6, i64 376, metadata !2, i64 384, metadata !2, i64 388, metadata !6, i64 392, metadata !2, i64 400, metadata !2, i64 404, metadata !6, i64 408, metadata !6, i64 416, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 424, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 425, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426, metadata !2, i64 426}
!9 = metadata !{metadata !"ix86_args", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24}
!10 = metadata !{metadata !"long long", metadata !3, i64 0}
!11 = metadata !{metadata !8, metadata !6, i64 256}
!12 = metadata !{metadata !13, metadata !6, i64 0}
!13 = metadata !{metadata !"basic_block_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !2, i64 88, metadata !2, i64 92, metadata !10, i64 96, metadata !2, i64 104, metadata !2, i64 108}
!14 = metadata !{metadata !10, metadata !10, i64 0}
!15 = metadata !{metadata !3, metadata !3, i64 0}
!16 = metadata !{metadata !17, metadata !2, i64 12}
!17 = metadata !{metadata !"reg_info_def", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !2, i64 28, metadata !2, i64 32, metadata !2, i64 36, metadata !3, i64 40}
!18 = metadata !{metadata !17, metadata !2, i64 16}
!19 = metadata !{metadata !17, metadata !2, i64 24}
!20 = metadata !{metadata !17, metadata !2, i64 32}
!21 = metadata !{metadata !17, metadata !2, i64 28}
!22 = metadata !{metadata !17, metadata !2, i64 36}
!23 = metadata !{metadata !13, metadata !6, i64 64}
!24 = metadata !{metadata !13, metadata !6, i64 8}
!25 = metadata !{metadata !26, metadata !6, i64 32}
!26 = metadata !{metadata !"obstack", metadata !27, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !27, i64 40, metadata !2, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !2, i64 80, metadata !2, i64 80, metadata !2, i64 80}
!27 = metadata !{metadata !"long", metadata !3, i64 0}
!28 = metadata !{metadata !26, metadata !6, i64 24}
!29 = metadata !{metadata !26, metadata !6, i64 16}
!30 = metadata !{metadata !26, metadata !2, i64 48}
!31 = metadata !{metadata !26, metadata !6, i64 8}
!32 = metadata !{metadata !13, metadata !6, i64 72}
!33 = metadata !{metadata !34, metadata !2, i64 4}
!34 = metadata !{metadata !"simple_bitmap_def", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !3, i64 16}
!35 = metadata !{metadata !13, metadata !6, i64 80}
!36 = metadata !{metadata !13, metadata !6, i64 40}
!37 = metadata !{metadata !38, metadata !6, i64 24}
!38 = metadata !{metadata !"edge_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !2, i64 48, metadata !2, i64 52, metadata !10, i64 56}
!39 = metadata !{metadata !38, metadata !2, i64 48}
!40 = metadata !{metadata !38, metadata !6, i64 8}
!41 = metadata !{metadata !13, metadata !6, i64 48}
!42 = metadata !{metadata !13, metadata !6, i64 56}
!43 = metadata !{metadata !13, metadata !2, i64 88}
!44 = metadata !{metadata !38, metadata !6, i64 16}
!45 = metadata !{metadata !46, metadata !6, i64 0}
!46 = metadata !{metadata !"bitmap_head_def", metadata !6, i64 0, metadata !6, i64 8, metadata !2, i64 16}
!47 = metadata !{metadata !48, metadata !2, i64 16}
!48 = metadata !{metadata !"bitmap_element_def", metadata !6, i64 0, metadata !6, i64 8, metadata !2, i64 16, metadata !3, i64 24}
!49 = metadata !{metadata !8, metadata !6, i64 24}
!50 = metadata !{metadata !51, metadata !6, i64 80}
!51 = metadata !{metadata !"emit_status", metadata !2, i64 0, metadata !2, i64 4, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !2, i64 40, metadata !2, i64 44, metadata !6, i64 48, metadata !2, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80}
!52 = metadata !{metadata !48, metadata !6, i64 0}
!53 = metadata !{metadata !54, metadata !6, i64 8}
!54 = metadata !{metadata !"propagate_block_info", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !2, i64 56, metadata !2, i64 60, metadata !2, i64 64}
!55 = metadata !{metadata !54, metadata !6, i64 16}
!56 = metadata !{metadata !54, metadata !6, i64 24}
!57 = metadata !{metadata !17, metadata !2, i64 0}
!58 = metadata !{metadata !59, metadata !2, i64 0}
!59 = metadata !{metadata !"", metadata !2, i64 0, metadata !6, i64 8}
!60 = metadata !{metadata !59, metadata !6, i64 8}
!61 = metadata !{metadata !54, metadata !2, i64 64}
!62 = metadata !{metadata !63, metadata !2, i64 0}
!63 = metadata !{metadata !"rtvec_def", metadata !2, i64 0, metadata !3, i64 8}
!64 = metadata !{metadata !65, metadata !6, i64 8}
!65 = metadata !{metadata !"tree_common", metadata !6, i64 0, metadata !6, i64 8, metadata !3, i64 16, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 17, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 18, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19, metadata !2, i64 19}
!66 = metadata !{metadata !54, metadata !2, i64 60}
!67 = metadata !{metadata !54, metadata !6, i64 0}
!68 = metadata !{metadata !54, metadata !2, i64 56}
!69 = metadata !{metadata !54, metadata !6, i64 32}
!70 = metadata !{metadata !54, metadata !6, i64 40}
!71 = metadata !{metadata !54, metadata !6, i64 48}
!72 = metadata !{metadata !13, metadata !2, i64 104}
!73 = metadata !{metadata !17, metadata !2, i64 20}
!74 = metadata !{metadata !75, metadata !75, i64 0}
!75 = metadata !{metadata !"short", metadata !3, i64 0}
