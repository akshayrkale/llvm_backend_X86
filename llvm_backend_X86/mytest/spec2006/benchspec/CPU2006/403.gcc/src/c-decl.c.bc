; ModuleID = 'c-decl.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cpp_reader = type opaque
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type { %struct.eh_status*, %struct.stmt_status*, %struct.expr_status*, %struct.emit_status*, %struct.varasm_status*, i8*, %union.tree_node*, %struct.function*, i32, i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def*, %struct.rtx_def*, i8*, %struct.initial_value_struct*, i32, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def**, %struct.temp_slot*, i32, i32, i32, %struct.var_refs_queue*, i32, i32, i8*, %union.tree_node*, %struct.rtx_def*, i32, i32, %struct.machine_function*, i32, i32, %struct.language_function*, %struct.rtx_def*, i24 }
%struct.eh_status = type opaque
%struct.stmt_status = type opaque
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack*, i32, i32, i8*, i32, i8*, %union.tree_node**, %struct.rtx_def** }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %struct.sequence_stack* }
%struct.varasm_status = type opaque
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.initial_value_struct = type opaque
%struct.temp_slot = type opaque
%struct.var_refs_queue = type { %struct.rtx_def*, i32, i32, %struct.var_refs_queue* }
%struct.machine_function = type opaque
%struct.language_function = type { %struct.stmt_tree_s, %union.tree_node* }
%struct.stmt_tree_s = type { %union.tree_node*, %union.tree_node*, i8*, i32 }
%struct.lang_decl = type { %struct.c_lang_decl, %union.tree_node* }
%struct.c_lang_decl = type { i8, [3 x i8] }
%struct.binding_level = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.binding_level*, i8, i8, i8, i8, i8, i32, %union.tree_node* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i1 (%union.tree_node*)*, i1 (%union.tree_node*)*, void ()*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, i32 (%union.tree_node*, i8*, i32)*, i8, i8, i1 ()* }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i1 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void (i8*, i32)*, void ()*, void ()*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct._IO_FILE = type opaque
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, %struct.rtx_def* (i32, %struct.rtx_def*)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.gcc_debug_hooks = type { void (i8*)*, void (i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, i1 (%union.tree_node*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void ()*, void (%union.tree_node*)*, void (i32)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%struct.rtx_def*)* }
%struct.cpp_hashnode = type { %struct.ht_identifier, i16, i8, i8, i8, i8, %union.anon.3 }
%struct.ht_identifier = type { i32, i8* }
%union.anon.3 = type { %struct.cpp_macro* }
%struct.cpp_macro = type opaque
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type { i32, [1 x %union.tree_node*] }
%struct.c_language_function = type { %struct.language_function, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, i32, %struct.binding_level* }

@flag_isoc94 = global i32 0, align 4
@flag_isoc99 = global i32 0, align 4
@flag_hosted = global i32 1, align 4
@flag_noniso_default_format_attributes = global i32 1, align 4
@flag_allow_single_precision = global i32 0, align 4
@flag_signed_bitfields = global i32 1, align 4
@explicit_flag_signed_bitfields = global i32 0, align 4
@warn_long_long = global i32 1, align 4
@mesg_implicit_function_declaration = global i32 -1, align 4
@warn_redundant_decls = global i32 0, align 4
@warn_nested_externs = global i32 0, align 4
@warn_char_subscripts = global i32 0, align 4
@warn_unknown_pragmas = global i32 0, align 4
@warn_sign_compare = global i32 -1, align 4
@warn_float_equal = global i32 0, align 4
@warn_multichar = global i32 1, align 4
@dollars_in_ident = global i32 1, align 4
@parse_in = external global %struct.cpp_reader*
@.str = private unnamed_addr constant [14 x i8] c"-ftraditional\00", align 1
@.str1 = private unnamed_addr constant [13 x i8] c"-traditional\00", align 1
@.str2 = private unnamed_addr constant [46 x i8] c"-traditional is deprecated and may be removed\00", align 1
@flag_traditional = common global i32 0, align 4
@flag_writable_strings = external global i32
@.str3 = private unnamed_addr constant [25 x i8] c"-fallow-single-precision\00", align 1
@.str4 = private unnamed_addr constant [9 x i8] c"-fhosted\00", align 1
@.str5 = private unnamed_addr constant [18 x i8] c"-fno-freestanding\00", align 1
@flag_no_builtin = external global i32
@.str6 = private unnamed_addr constant [15 x i8] c"-ffreestanding\00", align 1
@.str7 = private unnamed_addr constant [12 x i8] c"-fno-hosted\00", align 1
@warn_main = common global i32 0, align 4
@.str8 = private unnamed_addr constant [16 x i8] c"-fnotraditional\00", align 1
@.str9 = private unnamed_addr constant [17 x i8] c"-fno-traditional\00", align 1
@.str10 = private unnamed_addr constant [6 x i8] c"-std=\00", align 1
@.str11 = private unnamed_addr constant [13 x i8] c"iso9899:1990\00", align 1
@.str12 = private unnamed_addr constant [4 x i8] c"c89\00", align 1
@flag_no_asm = common global i32 0, align 4
@flag_no_nonansi_builtin = external global i32
@.str13 = private unnamed_addr constant [15 x i8] c"iso9899:199409\00", align 1
@.str14 = private unnamed_addr constant [13 x i8] c"iso9899:199x\00", align 1
@.str15 = private unnamed_addr constant [13 x i8] c"iso9899:1999\00", align 1
@.str16 = private unnamed_addr constant [4 x i8] c"c9x\00", align 1
@.str17 = private unnamed_addr constant [4 x i8] c"c99\00", align 1
@.str18 = private unnamed_addr constant [6 x i8] c"gnu89\00", align 1
@.str19 = private unnamed_addr constant [6 x i8] c"gnu9x\00", align 1
@.str20 = private unnamed_addr constant [6 x i8] c"gnu99\00", align 1
@.str21 = private unnamed_addr constant [24 x i8] c"unknown C standard `%s'\00", align 1
@.str22 = private unnamed_addr constant [25 x i8] c"-fdollars-in-identifiers\00", align 1
@.str23 = private unnamed_addr constant [28 x i8] c"-fno-dollars-in-identifiers\00", align 1
@.str24 = private unnamed_addr constant [14 x i8] c"-fsigned-char\00", align 1
@flag_signed_char = external global i32
@.str25 = private unnamed_addr constant [16 x i8] c"-funsigned-char\00", align 1
@.str26 = private unnamed_addr constant [17 x i8] c"-fno-signed-char\00", align 1
@.str27 = private unnamed_addr constant [19 x i8] c"-fno-unsigned-char\00", align 1
@.str28 = private unnamed_addr constant [19 x i8] c"-fsigned-bitfields\00", align 1
@.str29 = private unnamed_addr constant [24 x i8] c"-fno-unsigned-bitfields\00", align 1
@.str30 = private unnamed_addr constant [21 x i8] c"-funsigned-bitfields\00", align 1
@.str31 = private unnamed_addr constant [22 x i8] c"-fno-signed-bitfields\00", align 1
@.str32 = private unnamed_addr constant [14 x i8] c"-fshort-enums\00", align 1
@flag_short_enums = external global i32
@.str33 = private unnamed_addr constant [17 x i8] c"-fno-short-enums\00", align 1
@.str34 = private unnamed_addr constant [14 x i8] c"-fshort-wchar\00", align 1
@flag_short_wchar = external global i32
@.str35 = private unnamed_addr constant [17 x i8] c"-fno-short-wchar\00", align 1
@.str36 = private unnamed_addr constant [16 x i8] c"-fcond-mismatch\00", align 1
@flag_cond_mismatch = common global i32 0, align 4
@.str37 = private unnamed_addr constant [19 x i8] c"-fno-cond-mismatch\00", align 1
@.str38 = private unnamed_addr constant [15 x i8] c"-fshort-double\00", align 1
@flag_short_double = external global i32
@.str39 = private unnamed_addr constant [18 x i8] c"-fno-short-double\00", align 1
@.str40 = private unnamed_addr constant [6 x i8] c"-fasm\00", align 1
@.str41 = private unnamed_addr constant [9 x i8] c"-fno-asm\00", align 1
@.str42 = private unnamed_addr constant [10 x i8] c"-fbuiltin\00", align 1
@.str43 = private unnamed_addr constant [13 x i8] c"-fno-builtin\00", align 1
@.str44 = private unnamed_addr constant [14 x i8] c"-fno-builtin-\00", align 1
@.str45 = private unnamed_addr constant [6 x i8] c"-ansi\00", align 1
@.str46 = private unnamed_addr constant [38 x i8] c"-Werror-implicit-function-declaration\00", align 1
@.str47 = private unnamed_addr constant [32 x i8] c"-Wimplicit-function-declaration\00", align 1
@.str48 = private unnamed_addr constant [35 x i8] c"-Wno-implicit-function-declaration\00", align 1
@.str49 = private unnamed_addr constant [15 x i8] c"-Wimplicit-int\00", align 1
@warn_implicit_int = common global i32 0, align 4
@.str50 = private unnamed_addr constant [18 x i8] c"-Wno-implicit-int\00", align 1
@.str51 = private unnamed_addr constant [11 x i8] c"-Wimplicit\00", align 1
@.str52 = private unnamed_addr constant [14 x i8] c"-Wno-implicit\00", align 1
@.str53 = private unnamed_addr constant [12 x i8] c"-Wlong-long\00", align 1
@.str54 = private unnamed_addr constant [15 x i8] c"-Wno-long-long\00", align 1
@.str55 = private unnamed_addr constant [16 x i8] c"-Wwrite-strings\00", align 1
@flag_const_strings = common global i32 0, align 4
@.str56 = private unnamed_addr constant [19 x i8] c"-Wno-write-strings\00", align 1
@.str57 = private unnamed_addr constant [12 x i8] c"-Wcast-qual\00", align 1
@warn_cast_qual = common global i32 0, align 4
@.str58 = private unnamed_addr constant [15 x i8] c"-Wno-cast-qual\00", align 1
@.str59 = private unnamed_addr constant [20 x i8] c"-Wbad-function-cast\00", align 1
@warn_bad_function_cast = common global i32 0, align 4
@.str60 = private unnamed_addr constant [23 x i8] c"-Wno-bad-function-cast\00", align 1
@.str61 = private unnamed_addr constant [22 x i8] c"-Wno-missing-noreturn\00", align 1
@warn_missing_noreturn = external global i32
@.str62 = private unnamed_addr constant [27 x i8] c"-Wmissing-format-attribute\00", align 1
@warn_missing_format_attribute = common global i32 0, align 4
@.str63 = private unnamed_addr constant [30 x i8] c"-Wno-missing-format-attribute\00", align 1
@.str64 = private unnamed_addr constant [16 x i8] c"-Wpointer-arith\00", align 1
@warn_pointer_arith = common global i32 0, align 4
@.str65 = private unnamed_addr constant [19 x i8] c"-Wno-pointer-arith\00", align 1
@.str66 = private unnamed_addr constant [20 x i8] c"-Wstrict-prototypes\00", align 1
@warn_strict_prototypes = common global i32 0, align 4
@.str67 = private unnamed_addr constant [23 x i8] c"-Wno-strict-prototypes\00", align 1
@.str68 = private unnamed_addr constant [21 x i8] c"-Wmissing-prototypes\00", align 1
@warn_missing_prototypes = common global i32 0, align 4
@.str69 = private unnamed_addr constant [24 x i8] c"-Wno-missing-prototypes\00", align 1
@.str70 = private unnamed_addr constant [23 x i8] c"-Wmissing-declarations\00", align 1
@warn_missing_declarations = common global i32 0, align 4
@.str71 = private unnamed_addr constant [26 x i8] c"-Wno-missing-declarations\00", align 1
@.str72 = private unnamed_addr constant [18 x i8] c"-Wredundant-decls\00", align 1
@.str73 = private unnamed_addr constant [21 x i8] c"-Wno-redundant-decls\00", align 1
@.str74 = private unnamed_addr constant [17 x i8] c"-Wnested-externs\00", align 1
@.str75 = private unnamed_addr constant [20 x i8] c"-Wno-nested-externs\00", align 1
@.str76 = private unnamed_addr constant [14 x i8] c"-Wtraditional\00", align 1
@warn_traditional = common global i32 0, align 4
@.str77 = private unnamed_addr constant [17 x i8] c"-Wno-traditional\00", align 1
@.str78 = private unnamed_addr constant [10 x i8] c"-Wformat=\00", align 1
@.str79 = private unnamed_addr constant [9 x i8] c"-Wformat\00", align 1
@.str80 = private unnamed_addr constant [12 x i8] c"-Wno-format\00", align 1
@.str81 = private unnamed_addr constant [13 x i8] c"-Wformat-y2k\00", align 1
@warn_format_y2k = external global i32
@.str82 = private unnamed_addr constant [16 x i8] c"-Wno-format-y2k\00", align 1
@.str83 = private unnamed_addr constant [20 x i8] c"-Wformat-extra-args\00", align 1
@warn_format_extra_args = external global i32
@.str84 = private unnamed_addr constant [23 x i8] c"-Wno-format-extra-args\00", align 1
@.str85 = private unnamed_addr constant [20 x i8] c"-Wformat-nonliteral\00", align 1
@warn_format_nonliteral = external global i32
@.str86 = private unnamed_addr constant [23 x i8] c"-Wno-format-nonliteral\00", align 1
@.str87 = private unnamed_addr constant [18 x i8] c"-Wformat-security\00", align 1
@warn_format_security = external global i32
@.str88 = private unnamed_addr constant [21 x i8] c"-Wno-format-security\00", align 1
@.str89 = private unnamed_addr constant [18 x i8] c"-Wchar-subscripts\00", align 1
@.str90 = private unnamed_addr constant [21 x i8] c"-Wno-char-subscripts\00", align 1
@.str91 = private unnamed_addr constant [13 x i8] c"-Wconversion\00", align 1
@warn_conversion = common global i32 0, align 4
@.str92 = private unnamed_addr constant [16 x i8] c"-Wno-conversion\00", align 1
@.str93 = private unnamed_addr constant [14 x i8] c"-Wparentheses\00", align 1
@warn_parentheses = common global i32 0, align 4
@.str94 = private unnamed_addr constant [17 x i8] c"-Wno-parentheses\00", align 1
@.str95 = private unnamed_addr constant [14 x i8] c"-Wreturn-type\00", align 1
@warn_return_type = external global i32
@.str96 = private unnamed_addr constant [17 x i8] c"-Wno-return-type\00", align 1
@.str97 = private unnamed_addr constant [17 x i8] c"-Wsequence-point\00", align 1
@warn_sequence_point = external global i32
@.str98 = private unnamed_addr constant [20 x i8] c"-Wno-sequence-point\00", align 1
@.str99 = private unnamed_addr constant [10 x i8] c"-Wcomment\00", align 1
@.str100 = private unnamed_addr constant [13 x i8] c"-Wno-comment\00", align 1
@.str101 = private unnamed_addr constant [11 x i8] c"-Wcomments\00", align 1
@.str102 = private unnamed_addr constant [14 x i8] c"-Wno-comments\00", align 1
@.str103 = private unnamed_addr constant [12 x i8] c"-Wtrigraphs\00", align 1
@.str104 = private unnamed_addr constant [15 x i8] c"-Wno-trigraphs\00", align 1
@.str105 = private unnamed_addr constant [8 x i8] c"-Wundef\00", align 1
@.str106 = private unnamed_addr constant [11 x i8] c"-Wno-undef\00", align 1
@.str107 = private unnamed_addr constant [9 x i8] c"-Wimport\00", align 1
@.str108 = private unnamed_addr constant [12 x i8] c"-Wno-import\00", align 1
@.str109 = private unnamed_addr constant [17 x i8] c"-Wmissing-braces\00", align 1
@warn_missing_braces = common global i32 0, align 4
@.str110 = private unnamed_addr constant [20 x i8] c"-Wno-missing-braces\00", align 1
@.str111 = private unnamed_addr constant [7 x i8] c"-Wmain\00", align 1
@.str112 = private unnamed_addr constant [10 x i8] c"-Wno-main\00", align 1
@.str113 = private unnamed_addr constant [15 x i8] c"-Wsign-compare\00", align 1
@.str114 = private unnamed_addr constant [18 x i8] c"-Wno-sign-compare\00", align 1
@.str115 = private unnamed_addr constant [14 x i8] c"-Wfloat-equal\00", align 1
@.str116 = private unnamed_addr constant [17 x i8] c"-Wno-float-equal\00", align 1
@.str117 = private unnamed_addr constant [12 x i8] c"-Wmultichar\00", align 1
@.str118 = private unnamed_addr constant [15 x i8] c"-Wno-multichar\00", align 1
@.str119 = private unnamed_addr constant [14 x i8] c"-Wdiv-by-zero\00", align 1
@warn_div_by_zero = external global i32
@.str120 = private unnamed_addr constant [17 x i8] c"-Wno-div-by-zero\00", align 1
@.str121 = private unnamed_addr constant [18 x i8] c"-Wunknown-pragmas\00", align 1
@.str122 = private unnamed_addr constant [21 x i8] c"-Wno-unknown-pragmas\00", align 1
@.str123 = private unnamed_addr constant [6 x i8] c"-Wall\00", align 1
@warn_uninitialized = external global i32
@warn_switch = external global i32
@.str124 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@.str125 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str126 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@.str127 = private unnamed_addr constant [9 x i8] c"implicit\00", align 1
@.str128 = private unnamed_addr constant [12 x i8] c"error locus\00", align 1
@.str129 = private unnamed_addr constant [12 x i8] c"limbo value\00", align 1
@ridpointers = external global %union.tree_node**
@.str130 = private unnamed_addr constant [5 x i8] c"rid \00", align 1
@.str131 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@.str132 = private unnamed_addr constant [6 x i8] c" \22%s\22\00", align 1
@global_trees = external global [51 x %union.tree_node*]
@.str133 = private unnamed_addr constant [39 x i8] c"array `%s' assumed to have one element\00", align 1
@current_binding_level = internal global %struct.binding_level* null, align 8
@global_binding_level = internal unnamed_addr global %struct.binding_level* null, align 8
@keep_next_level_flag = internal unnamed_addr global i1 false
@named_labels = internal global %union.tree_node* null, align 8
@free_binding_level = internal unnamed_addr global %struct.binding_level* null, align 8
@keep_next_if_subblocks = internal unnamed_addr global i1 false
@lang_set_decl_assembler_name = external global void (%union.tree_node*)*
@.str134 = private unnamed_addr constant [32 x i8] c"label `%s' used but not defined\00", align 1
@input_filename = external global i8*
@lineno = external global i32
@warn_unused_label = external global i32
@.str135 = private unnamed_addr constant [32 x i8] c"label `%s' defined but not used\00", align 1
@current_function_decl = external global %union.tree_node*
@label_level_chain = internal global %struct.binding_level* null, align 8
@shadowed_labels = internal global %union.tree_node* null, align 8
@.str136 = private unnamed_addr constant [34 x i8] c"nested extern declaration of `%s'\00", align 1
@.str137 = private unnamed_addr constant [31 x i8] c"`%s' used prior to declaration\00", align 1
@.str138 = private unnamed_addr constant [57 x i8] c"`%s' was declared implicitly `extern' and later `static'\00", align 1
@.str139 = private unnamed_addr constant [29 x i8] c"previous declaration of `%s'\00", align 1
@.str140 = private unnamed_addr constant [42 x i8] c"type mismatch with previous external decl\00", align 1
@.str141 = private unnamed_addr constant [31 x i8] c"previous external decl of `%s'\00", align 1
@.str142 = private unnamed_addr constant [49 x i8] c"type mismatch with previous implicit declaration\00", align 1
@.str143 = private unnamed_addr constant [38 x i8] c"previous implicit declaration of `%s'\00", align 1
@.str144 = private unnamed_addr constant [36 x i8] c"type of external `%s' is not global\00", align 1
@integer_types = external global [11 x %union.tree_node*]
@.str145 = private unnamed_addr constant [56 x i8] c"`%s' was previously implicitly declared to return `int'\00", align 1
@.str146 = private unnamed_addr constant [46 x i8] c"`%s' was declared `extern' and later `static'\00", align 1
@.str147 = private unnamed_addr constant [52 x i8] c"extern declaration of `%s' doesn't match global one\00", align 1
@c_global_trees = external global [32 x %union.tree_node*]
@.str148 = private unnamed_addr constant [53 x i8] c"function `%s' was previously declared within a block\00", align 1
@.str149 = private unnamed_addr constant [38 x i8] c"implicit declaration of function `%s'\00", align 1
@.str150 = private unnamed_addr constant [44 x i8] c"label %s referenced outside of any function\00", align 1
@.str151 = private unnamed_addr constant [33 x i8] c"duplicate label declaration `%s'\00", align 1
@.str152 = private unnamed_addr constant [31 x i8] c"this is a previous declaration\00", align 1
@in_system_header = external global i32
@.str153 = private unnamed_addr constant [79 x i8] c"traditional C lacks a separate namespace for labels, identifier `%s' conflicts\00", align 1
@.str154 = private unnamed_addr constant [21 x i8] c"duplicate label `%s'\00", align 1
@pending_invalid_xref = common global %union.tree_node* null, align 8
@pending_invalid_xref_file = common global i8* null, align 8
@pending_invalid_xref_line = common global i32 0, align 4
@.str155 = private unnamed_addr constant [34 x i8] c"`%s' defined as wrong kind of tag\00", align 1
@.str156 = private unnamed_addr constant [6 x i8] c"_Bool\00", align 1
@.str157 = private unnamed_addr constant [14 x i8] c"__g77_integer\00", align 1
@.str158 = private unnamed_addr constant [15 x i8] c"__g77_uinteger\00", align 1
@.str159 = private unnamed_addr constant [14 x i8] c"__g77_longint\00", align 1
@.str160 = private unnamed_addr constant [15 x i8] c"__g77_ulongint\00", align 1
@pedantic = external global i32
@pedantic_lvalues = external global i32
@make_fname_decl = external global %union.tree_node* (%union.tree_node*, i32)*
@incomplete_decl_finalize_hook = external global void (%union.tree_node*)*
@c_stmt_tree = internal global %struct.stmt_tree_s zeroinitializer, align 8
@c_scope_stmt_stack = internal global %union.tree_node* null, align 8
@static_ctors = common global %union.tree_node* null, align 8
@static_dtors = common global %union.tree_node* null, align 8
@.str161 = private unnamed_addr constant [47 x i8] c"unnamed struct/union that defines no instances\00", align 1
@.str162 = private unnamed_addr constant [50 x i8] c"useless keyword or type name in empty declaration\00", align 1
@.str163 = private unnamed_addr constant [45 x i8] c"two types specified in one empty declaration\00", align 1
@.str164 = private unnamed_addr constant [18 x i8] c"empty declaration\00", align 1
@.str165 = private unnamed_addr constant [84 x i8] c"ISO C89 does not support `static' or type qualifiers in parameter array declarators\00", align 1
@.str166 = private unnamed_addr constant [49 x i8] c"ISO C89 does not support `[*]' array declarators\00", align 1
@.str167 = private unnamed_addr constant [60 x i8] c"GCC does not yet properly implement `[*]' array declarators\00", align 1
@.str168 = private unnamed_addr constant [49 x i8] c"static or type qualifiers in abstract declarator\00", align 1
@.str169 = private unnamed_addr constant [11 x i8] c"deprecated\00", align 1
@deprecated_state = internal unnamed_addr global i1 false
@.str170 = private unnamed_addr constant [27 x i8] c"`%s' is usually a function\00", align 1
@.str171 = private unnamed_addr constant [28 x i8] c"typedef `%s' is initialized\00", align 1
@.str172 = private unnamed_addr constant [45 x i8] c"function `%s' is initialized like a variable\00", align 1
@.str173 = private unnamed_addr constant [30 x i8] c"parameter `%s' is initialized\00", align 1
@.str174 = private unnamed_addr constant [45 x i8] c"variable-sized object may not be initialized\00", align 1
@.str175 = private unnamed_addr constant [50 x i8] c"variable `%s' has initializer but incomplete type\00", align 1
@.str176 = private unnamed_addr constant [44 x i8] c"elements of array `%s' have incomplete type\00", align 1
@flag_no_common = external global i32
@.str177 = private unnamed_addr constant [9 x i8] c"noinline\00", align 1
@.str178 = private unnamed_addr constant [46 x i8] c"inline function `%s' given attribute noinline\00", align 1
@.str179 = private unnamed_addr constant [44 x i8] c"initializer fails to determine size of `%s'\00", align 1
@.str180 = private unnamed_addr constant [27 x i8] c"array size missing in `%s'\00", align 1
@.str181 = private unnamed_addr constant [33 x i8] c"zero or negative size array `%s'\00", align 1
@.str182 = private unnamed_addr constant [33 x i8] c"storage size of `%s' isn't known\00", align 1
@.str183 = private unnamed_addr constant [36 x i8] c"storage size of `%s' isn't constant\00", align 1
@.str184 = private unnamed_addr constant [58 x i8] c"ignoring asm-specifier for non-static local variable `%s'\00", align 1
@immediate_size_expand = external global i32
@.str185 = private unnamed_addr constant [9 x i8] c"c-decl.c\00", align 1
@__FUNCTION__.build_compound_literal = private unnamed_addr constant [23 x i8] c"build_compound_literal\00", align 1
@.str186 = private unnamed_addr constant [6 x i8] c"%s.%d\00", align 1
@.str187 = private unnamed_addr constant [19 x i8] c"__compound_literal\00", align 1
@var_labelno = external global i32
@.str188 = private unnamed_addr constant [46 x i8] c"parameter `%s' has just a forward declaration\00", align 1
@target_flags = external global i32
@.str189 = private unnamed_addr constant [49 x i8] c"`void' in parameter list must be the entire list\00", align 1
@parmlist_tags_warning.already = internal unnamed_addr global i1 false
@.str190 = private unnamed_addr constant [43 x i8] c"`struct %s' declared inside parameter list\00", align 1
@.str191 = private unnamed_addr constant [42 x i8] c"`union %s' declared inside parameter list\00", align 1
@.str192 = private unnamed_addr constant [41 x i8] c"`enum %s' declared inside parameter list\00", align 1
@.str193 = private unnamed_addr constant [48 x i8] c"anonymous struct declared inside parameter list\00", align 1
@.str194 = private unnamed_addr constant [47 x i8] c"anonymous union declared inside parameter list\00", align 1
@.str195 = private unnamed_addr constant [46 x i8] c"anonymous enum declared inside parameter list\00", align 1
@.str196 = private unnamed_addr constant [86 x i8] c"its scope is only this definition or declaration, which is probably not what you want\00", align 1
@flag_pack_struct = external global i32
@.str197 = private unnamed_addr constant [27 x i8] c"redefinition of `union %s'\00", align 1
@.str198 = private unnamed_addr constant [28 x i8] c"redefinition of `struct %s'\00", align 1
@.str199 = private unnamed_addr constant [66 x i8] c"unnamed fields of type other than struct or union are not allowed\00", align 1
@.str200 = private unnamed_addr constant [24 x i8] c"%s defined inside parms\00", align 1
@.str201 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str202 = private unnamed_addr constant [10 x i8] c"structure\00", align 1
@.str203 = private unnamed_addr constant [13 x i8] c"%s has no %s\00", align 1
@.str204 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str205 = private unnamed_addr constant [14 x i8] c"named members\00", align 1
@.str206 = private unnamed_addr constant [8 x i8] c"members\00", align 1
@.str207 = private unnamed_addr constant [28 x i8] c"nested redefinition of `%s'\00", align 1
@.str208 = private unnamed_addr constant [45 x i8] c"bit-field `%s' width not an integer constant\00", align 1
@.str209 = private unnamed_addr constant [32 x i8] c"bit-field `%s' has invalid type\00", align 1
@.str210 = private unnamed_addr constant [37 x i8] c"bit-field `%s' type invalid in ISO C\00", align 1
@.str211 = private unnamed_addr constant [33 x i8] c"negative width in bit-field `%s'\00", align 1
@.str212 = private unnamed_addr constant [31 x i8] c"width of `%s' exceeds its type\00", align 1
@.str213 = private unnamed_addr constant [30 x i8] c"zero width for bit-field `%s'\00", align 1
@.str214 = private unnamed_addr constant [41 x i8] c"`%s' is narrower than values of its type\00", align 1
@targetm = external global %struct.gcc_target
@.str215 = private unnamed_addr constant [31 x i8] c"flexible array member in union\00", align 1
@.str216 = private unnamed_addr constant [43 x i8] c"flexible array member not at end of struct\00", align 1
@.str217 = private unnamed_addr constant [48 x i8] c"flexible array member in otherwise empty struct\00", align 1
@.str218 = private unnamed_addr constant [22 x i8] c"duplicate member `%s'\00", align 1
@.str219 = private unnamed_addr constant [33 x i8] c"union cannot be made transparent\00", align 1
@.str220 = private unnamed_addr constant [27 x i8] c"redeclaration of `enum %s'\00", align 1
@enum_next_value = internal unnamed_addr global %union.tree_node* null, align 8
@enum_overflow = internal unnamed_addr global i32 0, align 4
@.str221 = private unnamed_addr constant [26 x i8] c"enum defined inside parms\00", align 1
@.str222 = private unnamed_addr constant [51 x i8] c"enumeration values exceed range of largest integer\00", align 1
@.str223 = private unnamed_addr constant [47 x i8] c"enumerator value for `%s' not integer constant\00", align 1
@.str224 = private unnamed_addr constant [31 x i8] c"overflow in enumeration values\00", align 1
@.str225 = private unnamed_addr constant [52 x i8] c"ISO C restricts enumerator values to range of `int'\00", align 1
@current_function_returns_value = common global i32 0, align 4
@current_function_returns_null = common global i32 0, align 4
@current_function_returns_abnormally = common global i32 0, align 4
@warn_about_return_type = internal unnamed_addr global i32 0, align 4
@current_extern_inline = internal unnamed_addr global i32 0, align 4
@c_function_varargs = internal unnamed_addr global i1 false
@.str226 = private unnamed_addr constant [34 x i8] c"return type is an incomplete type\00", align 1
@.str227 = private unnamed_addr constant [30 x i8] c"return type defaults to `int'\00", align 1
@last_function_parms = internal unnamed_addr global %union.tree_node* null, align 8
@current_function_parms = internal unnamed_addr global %union.tree_node* null, align 8
@last_function_parm_tags = internal unnamed_addr global %union.tree_node* null, align 8
@current_function_parm_tags = internal unnamed_addr global %union.tree_node* null, align 8
@current_function_prototype_file = internal unnamed_addr global i8* null, align 8
@current_function_prototype_line = internal unnamed_addr global i32 0, align 4
@.str228 = private unnamed_addr constant [39 x i8] c"function declaration isn't a prototype\00", align 1
@.str229 = private unnamed_addr constant [31 x i8] c"no previous prototype for `%s'\00", align 1
@.str230 = private unnamed_addr constant [54 x i8] c"`%s' was used with no prototype before its definition\00", align 1
@.str231 = private unnamed_addr constant [33 x i8] c"no previous declaration for `%s'\00", align 1
@.str232 = private unnamed_addr constant [56 x i8] c"`%s' was used with no declaration before its definition\00", align 1
@.str233 = private unnamed_addr constant [33 x i8] c"return type of `%s' is not `int'\00", align 1
@.str234 = private unnamed_addr constant [39 x i8] c"first argument of `%s' should be `int'\00", align 1
@.str235 = private unnamed_addr constant [44 x i8] c"second argument of `%s' should be `char **'\00", align 1
@.str236 = private unnamed_addr constant [52 x i8] c"third argument of `%s' should probably be `char **'\00", align 1
@.str237 = private unnamed_addr constant [38 x i8] c"`%s' takes only zero or two arguments\00", align 1
@.str238 = private unnamed_addr constant [39 x i8] c"`%s' is normally a non-static function\00", align 1
@warn_shadow = external global i32
@.str239 = private unnamed_addr constant [49 x i8] c"parm types given both in parmlist and separately\00", align 1
@.str240 = private unnamed_addr constant [23 x i8] c"parameter name omitted\00", align 1
@.str241 = private unnamed_addr constant [29 x i8] c"parameter `%s' declared void\00", align 1
@.str242 = private unnamed_addr constant [43 x i8] c"parameter name missing from parameter list\00", align 1
@.str243 = private unnamed_addr constant [31 x i8] c"multiple parameters named `%s'\00", align 1
@.str244 = private unnamed_addr constant [31 x i8] c"type of `%s' defaults to `int'\00", align 1
@extra_warnings = external global i32
@.str245 = private unnamed_addr constant [35 x i8] c"parameter `%s' has incomplete type\00", align 1
@.str246 = private unnamed_addr constant [53 x i8] c"declaration for parameter `%s' but no such parameter\00", align 1
@.str247 = private unnamed_addr constant [44 x i8] c"number of arguments doesn't match prototype\00", align 1
@.str248 = private unnamed_addr constant [22 x i8] c"prototype declaration\00", align 1
@.str249 = private unnamed_addr constant [47 x i8] c"promoted argument `%s' doesn't match prototype\00", align 1
@.str250 = private unnamed_addr constant [38 x i8] c"argument `%s' doesn't match prototype\00", align 1
@cfun = external global %struct.function*
@.str251 = private unnamed_addr constant [51 x i8] c"no return statement in function returning non-void\00", align 1
@.str252 = private unnamed_addr constant [53 x i8] c"`for' loop initial declaration used outside C99 mode\00", align 1
@.str253 = private unnamed_addr constant [55 x i8] c"`struct %s' declared in `for' loop initial declaration\00", align 1
@.str254 = private unnamed_addr constant [54 x i8] c"`union %s' declared in `for' loop initial declaration\00", align 1
@.str255 = private unnamed_addr constant [53 x i8] c"`enum %s' declared in `for' loop initial declaration\00", align 1
@.str256 = private unnamed_addr constant [67 x i8] c"declaration of non-variable `%s' in `for' loop initial declaration\00", align 1
@.str257 = private unnamed_addr constant [70 x i8] c"declaration of static variable `%s' in `for' loop initial declaration\00", align 1
@.str258 = private unnamed_addr constant [72 x i8] c"declaration of `extern' variable `%s' in `for' loop initial declaration\00", align 1
@ggc_pending_trees = external global %struct.varray_head_tag*
@tree_code_type = external global [256 x i8]
@flag_syntax_only = external global i32
@flag_inline_trees = external global i32
@debug_hooks = external global %struct.gcc_debug_hooks*
@lang_expand_function_end = external global void ()*
@.str259 = private unnamed_addr constant [49 x i8] c"this function may return with or without a value\00", align 1
@warn_larger_than = external global i32
@larger_than_size = external global i64
@.str260 = private unnamed_addr constant [41 x i8] c"size of return value of `%s' is %u bytes\00", align 1
@.str261 = private unnamed_addr constant [53 x i8] c"size of return value of `%s' is larger than %d bytes\00", align 1
@__FUNCTION__.grokdeclarator = private unnamed_addr constant [15 x i8] c"grokdeclarator\00", align 1
@.str262 = private unnamed_addr constant [10 x i8] c"type name\00", align 1
@.str263 = private unnamed_addr constant [37 x i8] c"`long long long' is too long for GCC\00", align 1
@.str264 = private unnamed_addr constant [37 x i8] c"ISO C89 does not support `long long'\00", align 1
@.str265 = private unnamed_addr constant [15 x i8] c"duplicate `%s'\00", align 1
@.str266 = private unnamed_addr constant [46 x i8] c"two or more data types in declaration of `%s'\00", align 1
@.str267 = private unnamed_addr constant [44 x i8] c"`%s' fails to be a typedef or built in type\00", align 1
@.str268 = private unnamed_addr constant [46 x i8] c"type defaults to `int' in declaration of `%s'\00", align 1
@.str269 = private unnamed_addr constant [39 x i8] c"both long and short specified for `%s'\00", align 1
@.str270 = private unnamed_addr constant [43 x i8] c"long or short specified with char for `%s'\00", align 1
@grokdeclarator.already = internal unnamed_addr global i1 false
@.str271 = private unnamed_addr constant [52 x i8] c"long or short specified with floating type for `%s'\00", align 1
@.str272 = private unnamed_addr constant [44 x i8] c"the only valid combination is `long double'\00", align 1
@.str273 = private unnamed_addr constant [44 x i8] c"both signed and unsigned specified for `%s'\00", align 1
@.str274 = private unnamed_addr constant [49 x i8] c"long, short, signed or unsigned invalid for `%s'\00", align 1
@.str275 = private unnamed_addr constant [56 x i8] c"long, short, signed or unsigned used invalidly for `%s'\00", align 1
@flag_pedantic_errors = external global i32
@.str276 = private unnamed_addr constant [25 x i8] c"complex invalid for `%s'\00", align 1
@.str277 = private unnamed_addr constant [39 x i8] c"ISO C89 does not support complex types\00", align 1
@.str278 = private unnamed_addr constant [64 x i8] c"ISO C does not support plain `complex' meaning `double complex'\00", align 1
@.str279 = private unnamed_addr constant [45 x i8] c"ISO C does not support complex integer types\00", align 1
@.str280 = private unnamed_addr constant [18 x i8] c"duplicate `const'\00", align 1
@.str281 = private unnamed_addr constant [21 x i8] c"duplicate `restrict'\00", align 1
@.str282 = private unnamed_addr constant [21 x i8] c"duplicate `volatile'\00", align 1
@flag_gen_aux_info = external global i32
@.str283 = private unnamed_addr constant [48 x i8] c"multiple storage classes in declaration of `%s'\00", align 1
@.str284 = private unnamed_addr constant [36 x i8] c"function definition declared `auto'\00", align 1
@.str285 = private unnamed_addr constant [40 x i8] c"function definition declared `register'\00", align 1
@.str286 = private unnamed_addr constant [39 x i8] c"function definition declared `typedef'\00", align 1
@.str287 = private unnamed_addr constant [49 x i8] c"storage class specified for structure field `%s'\00", align 1
@.str288 = private unnamed_addr constant [43 x i8] c"storage class specified for parameter `%s'\00", align 1
@.str289 = private unnamed_addr constant [37 x i8] c"storage class specified for typename\00", align 1
@.str290 = private unnamed_addr constant [39 x i8] c"`%s' initialized and declared `extern'\00", align 1
@.str291 = private unnamed_addr constant [39 x i8] c"`%s' has both `extern' and initializer\00", align 1
@.str292 = private unnamed_addr constant [39 x i8] c"nested function `%s' declared `extern'\00", align 1
@.str293 = private unnamed_addr constant [47 x i8] c"top-level declaration of `%s' specifies `auto'\00", align 1
@.str294 = private unnamed_addr constant [60 x i8] c"static or type qualifiers in non-parameter array declarator\00", align 1
@sizetype_tab = external global [6 x %union.tree_node*]
@.str295 = private unnamed_addr constant [38 x i8] c"declaration of `%s' as array of voids\00", align 1
@.str296 = private unnamed_addr constant [42 x i8] c"declaration of `%s' as array of functions\00", align 1
@.str297 = private unnamed_addr constant [40 x i8] c"size of array `%s' has non-integer type\00", align 1
@.str298 = private unnamed_addr constant [35 x i8] c"ISO C forbids zero-size array `%s'\00", align 1
@.str299 = private unnamed_addr constant [31 x i8] c"size of array `%s' is negative\00", align 1
@.str300 = private unnamed_addr constant [57 x i8] c"ISO C89 forbids array `%s' whose size can't be evaluated\00", align 1
@.str301 = private unnamed_addr constant [41 x i8] c"ISO C89 forbids variable-size array `%s'\00", align 1
@.str302 = private unnamed_addr constant [32 x i8] c"size of array `%s' is too large\00", align 1
@.str303 = private unnamed_addr constant [48 x i8] c"ISO C89 does not support flexible array members\00", align 1
@.str304 = private unnamed_addr constant [39 x i8] c"array type has incomplete element type\00", align 1
@.str305 = private unnamed_addr constant [47 x i8] c"`%s' declared as function returning a function\00", align 1
@.str306 = private unnamed_addr constant [45 x i8] c"`%s' declared as function returning an array\00", align 1
@.str307 = private unnamed_addr constant [50 x i8] c"ISO C forbids qualified void function return type\00", align 1
@.str308 = private unnamed_addr constant [48 x i8] c"type qualifiers ignored on function return type\00", align 1
@.str309 = private unnamed_addr constant [39 x i8] c"ISO C forbids qualified function types\00", align 1
@.str310 = private unnamed_addr constant [48 x i8] c"invalid type modifier within pointer declarator\00", align 1
@.str311 = private unnamed_addr constant [47 x i8] c"ISO C forbids const or volatile function types\00", align 1
@.str312 = private unnamed_addr constant [37 x i8] c"variable or field `%s' declared void\00", align 1
@.str313 = private unnamed_addr constant [49 x i8] c"attributes in parameter array declarator ignored\00", align 1
@.str314 = private unnamed_addr constant [46 x i8] c"invalid type modifier within array declarator\00", align 1
@.str315 = private unnamed_addr constant [34 x i8] c"field `%s' declared as a function\00", align 1
@.str316 = private unnamed_addr constant [31 x i8] c"field `%s' has incomplete type\00", align 1
@.str317 = private unnamed_addr constant [40 x i8] c"invalid storage class for function `%s'\00", align 1
@.str318 = private unnamed_addr constant [43 x i8] c"`noreturn' function returns non-void value\00", align 1
@.str319 = private unnamed_addr constant [30 x i8] c"cannot inline function `main'\00", align 1
@.str320 = private unnamed_addr constant [32 x i8] c"variable `%s' declared `inline'\00", align 1
@.str321 = private unnamed_addr constant [56 x i8] c"parameter names (without types) in function declaration\00", align 1
@.str322 = private unnamed_addr constant [30 x i8] c"parameter has incomplete type\00", align 1
@.str323 = private unnamed_addr constant [40 x i8] c"declaration of `%s' shadows a parameter\00", align 1
@.str324 = private unnamed_addr constant [61 x i8] c"declaration of `%s' shadows a symbol from the parameter list\00", align 1
@.str325 = private unnamed_addr constant [12 x i8] c"a parameter\00", align 1
@.str326 = private unnamed_addr constant [17 x i8] c"a previous local\00", align 1
@.str327 = private unnamed_addr constant [21 x i8] c"a global declaration\00", align 1
@.str328 = private unnamed_addr constant [35 x i8] c"function `%s' redeclared as inline\00", align 1
@.str329 = private unnamed_addr constant [62 x i8] c"previous declaration of function `%s' with attribute noinline\00", align 1
@.str330 = private unnamed_addr constant [49 x i8] c"function `%s' redeclared with attribute noinline\00", align 1
@.str331 = private unnamed_addr constant [49 x i8] c"previous declaration of function `%s' was inline\00", align 1
@.str332 = private unnamed_addr constant [33 x i8] c"shadowing built-in function `%s'\00", align 1
@.str333 = private unnamed_addr constant [32 x i8] c"shadowing library function `%s'\00", align 1
@.str334 = private unnamed_addr constant [47 x i8] c"library function `%s' declared as non-function\00", align 1
@.str335 = private unnamed_addr constant [48 x i8] c"built-in function `%s' declared as non-function\00", align 1
@.str336 = private unnamed_addr constant [44 x i8] c"`%s' redeclared as different kind of symbol\00", align 1
@.str337 = private unnamed_addr constant [45 x i8] c"conflicting types for built-in function `%s'\00", align 1
@.str338 = private unnamed_addr constant [27 x i8] c"conflicting types for `%s'\00", align 1
@.str339 = private unnamed_addr constant [87 x i8] c"a parameter list with an ellipsis can't match an empty parameter name list declaration\00", align 1
@.str340 = private unnamed_addr constant [99 x i8] c"an argument type that has a default promotion can't match an empty parameter name list declaration\00", align 1
@.str341 = private unnamed_addr constant [21 x i8] c"redefinition of `%s'\00", align 1
@.str342 = private unnamed_addr constant [22 x i8] c"redeclaration of `%s'\00", align 1
@.str343 = private unnamed_addr constant [33 x i8] c"conflicting declarations of `%s'\00", align 1
@__FUNCTION__.duplicate_decls = private unnamed_addr constant [16 x i8] c"duplicate_decls\00", align 1
@.str344 = private unnamed_addr constant [29 x i8] c"`%s' previously defined here\00", align 1
@.str345 = private unnamed_addr constant [30 x i8] c"`%s' previously declared here\00", align 1
@.str346 = private unnamed_addr constant [27 x i8] c"prototype for `%s' follows\00", align 1
@.str347 = private unnamed_addr constant [30 x i8] c"non-prototype definition here\00", align 1
@.str348 = private unnamed_addr constant [65 x i8] c"prototype for `%s' follows and number of arguments doesn't match\00", align 1
@.str349 = private unnamed_addr constant [57 x i8] c"prototype for `%s' follows and argument %d doesn't match\00", align 1
@.str350 = private unnamed_addr constant [40 x i8] c"`%s' declared inline after being called\00", align 1
@.str351 = private unnamed_addr constant [42 x i8] c"`%s' declared inline after its definition\00", align 1
@.str352 = private unnamed_addr constant [47 x i8] c"static declaration for `%s' follows non-static\00", align 1
@.str353 = private unnamed_addr constant [47 x i8] c"non-static declaration for `%s' follows static\00", align 1
@.str354 = private unnamed_addr constant [45 x i8] c"const declaration for `%s' follows non-const\00", align 1
@.str355 = private unnamed_addr constant [53 x i8] c"type qualifiers for `%s' conflict with previous decl\00", align 1
@.str356 = private unnamed_addr constant [46 x i8] c"redundant redeclaration of `%s' in same scope\00", align 1

; Function Attrs: nounwind uwtable
define i32 @c_decode_option(i32 %argc, i8** %argv) #0 {
entry:
  %0 = load i8** %argv, align 8, !tbaa !1
  %1 = load %struct.cpp_reader** @parse_in, align 8, !tbaa !1
  %call = tail call i32 @cpp_handle_option(%struct.cpp_reader* %1, i32 %argc, i8** %argv, i32 0) #5
  %call1 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str, i64 0, i64 0)) #5
  %tobool = icmp eq i32 %call1, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call2 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([13 x i8]* @.str1, i64 0, i64 0)) #5
  %tobool3 = icmp eq i32 %call2, 0
  br i1 %tobool3, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([46 x i8]* @.str2, i64 0, i64 0)) #5
  store i32 1, i32* @flag_traditional, align 4, !tbaa !5
  store i32 1, i32* @flag_writable_strings, align 4, !tbaa !5
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %call4 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([25 x i8]* @.str3, i64 0, i64 0)) #5
  %tobool5 = icmp eq i32 %call4, 0
  br i1 %tobool5, label %if.then6, label %if.else7

if.then6:                                         ; preds = %if.else
  store i32 1, i32* @flag_allow_single_precision, align 4, !tbaa !5
  br label %return

if.else7:                                         ; preds = %if.else
  %call8 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str4, i64 0, i64 0)) #5
  %tobool9 = icmp eq i32 %call8, 0
  br i1 %tobool9, label %if.then13, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %if.else7
  %call11 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8]* @.str5, i64 0, i64 0)) #5
  %tobool12 = icmp eq i32 %call11, 0
  br i1 %tobool12, label %if.then13, label %if.else14

if.then13:                                        ; preds = %lor.lhs.false10, %if.else7
  store i32 1, i32* @flag_hosted, align 4, !tbaa !5
  store i32 0, i32* @flag_no_builtin, align 4, !tbaa !5
  br label %return

if.else14:                                        ; preds = %lor.lhs.false10
  %call15 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([15 x i8]* @.str6, i64 0, i64 0)) #5
  %tobool16 = icmp eq i32 %call15, 0
  br i1 %tobool16, label %if.then20, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %if.else14
  %call18 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str7, i64 0, i64 0)) #5
  %tobool19 = icmp eq i32 %call18, 0
  br i1 %tobool19, label %if.then20, label %if.else22

if.then20:                                        ; preds = %lor.lhs.false17, %if.else14
  store i32 0, i32* @flag_hosted, align 4, !tbaa !5
  store i32 1, i32* @flag_no_builtin, align 4, !tbaa !5
  %2 = load i32* @warn_main, align 4, !tbaa !5
  %cmp = icmp eq i32 %2, 2
  br i1 %cmp, label %if.then21, label %return

if.then21:                                        ; preds = %if.then20
  store i32 0, i32* @warn_main, align 4, !tbaa !5
  br label %return

if.else22:                                        ; preds = %lor.lhs.false17
  %call23 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([16 x i8]* @.str8, i64 0, i64 0)) #5
  %tobool24 = icmp eq i32 %call23, 0
  br i1 %tobool24, label %if.then28, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %if.else22
  %call26 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str9, i64 0, i64 0)) #5
  %tobool27 = icmp eq i32 %call26, 0
  br i1 %tobool27, label %if.then28, label %if.else29

if.then28:                                        ; preds = %lor.lhs.false25, %if.else22
  store i32 0, i32* @flag_traditional, align 4, !tbaa !5
  store i32 0, i32* @flag_writable_strings, align 4, !tbaa !5
  br label %return

if.else29:                                        ; preds = %lor.lhs.false25
  %call30 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([6 x i8]* @.str10, i64 0, i64 0), i64 5) #5
  %tobool31 = icmp eq i32 %call30, 0
  br i1 %tobool31, label %if.then32, label %if.else74

if.then32:                                        ; preds = %if.else29
  %arrayidx33 = getelementptr inbounds i8* %0, i64 5
  %call34 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([13 x i8]* @.str11, i64 0, i64 0)) #5
  %tobool35 = icmp eq i32 %call34, 0
  br i1 %tobool35, label %iso_1994, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %if.then32
  %call37 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([4 x i8]* @.str12, i64 0, i64 0)) #5
  %tobool38 = icmp eq i32 %call37, 0
  br i1 %tobool38, label %iso_1994, label %if.else40

iso_1994:                                         ; preds = %if.else40, %if.then32, %lor.lhs.false36, %if.else177
  %storemerge = phi i32 [ 0, %if.else177 ], [ 0, %lor.lhs.false36 ], [ 0, %if.then32 ], [ 1, %if.else40 ]
  store i32 %storemerge, i32* @flag_isoc94, align 4, !tbaa !5
  store i32 0, i32* @flag_traditional, align 4, !tbaa !5
  store i32 0, i32* @flag_writable_strings, align 4, !tbaa !5
  store i32 1, i32* @flag_no_asm, align 4, !tbaa !5
  store i32 1, i32* @flag_no_nonansi_builtin, align 4, !tbaa !5
  store i32 0, i32* @flag_noniso_default_format_attributes, align 4, !tbaa !5
  store i32 0, i32* @flag_isoc99, align 4, !tbaa !5
  br label %return

if.else40:                                        ; preds = %lor.lhs.false36
  %call41 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([15 x i8]* @.str13, i64 0, i64 0)) #5
  %tobool42 = icmp eq i32 %call41, 0
  br i1 %tobool42, label %iso_1994, label %if.else44

if.else44:                                        ; preds = %if.else40
  %call45 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([13 x i8]* @.str14, i64 0, i64 0)) #5
  %tobool46 = icmp eq i32 %call45, 0
  br i1 %tobool46, label %if.then56, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.else44
  %call48 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([13 x i8]* @.str15, i64 0, i64 0)) #5
  %tobool49 = icmp eq i32 %call48, 0
  br i1 %tobool49, label %if.then56, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %lor.lhs.false47
  %call51 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([4 x i8]* @.str16, i64 0, i64 0)) #5
  %tobool52 = icmp eq i32 %call51, 0
  br i1 %tobool52, label %if.then56, label %lor.lhs.false53

lor.lhs.false53:                                  ; preds = %lor.lhs.false50
  %call54 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([4 x i8]* @.str17, i64 0, i64 0)) #5
  %tobool55 = icmp eq i32 %call54, 0
  br i1 %tobool55, label %if.then56, label %if.else57

if.then56:                                        ; preds = %lor.lhs.false53, %lor.lhs.false50, %lor.lhs.false47, %if.else44
  store i32 0, i32* @flag_traditional, align 4, !tbaa !5
  store i32 0, i32* @flag_writable_strings, align 4, !tbaa !5
  store i32 1, i32* @flag_no_asm, align 4, !tbaa !5
  store i32 1, i32* @flag_no_nonansi_builtin, align 4, !tbaa !5
  store i32 0, i32* @flag_noniso_default_format_attributes, align 4, !tbaa !5
  store i32 1, i32* @flag_isoc99, align 4, !tbaa !5
  store i32 1, i32* @flag_isoc94, align 4, !tbaa !5
  br label %return

if.else57:                                        ; preds = %lor.lhs.false53
  %call58 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([6 x i8]* @.str18, i64 0, i64 0)) #5
  %tobool59 = icmp eq i32 %call58, 0
  br i1 %tobool59, label %if.then60, label %if.else61

if.then60:                                        ; preds = %if.else57
  store i32 0, i32* @flag_traditional, align 4, !tbaa !5
  store i32 0, i32* @flag_writable_strings, align 4, !tbaa !5
  store i32 0, i32* @flag_no_asm, align 4, !tbaa !5
  store i32 0, i32* @flag_no_nonansi_builtin, align 4, !tbaa !5
  store i32 1, i32* @flag_noniso_default_format_attributes, align 4, !tbaa !5
  store i32 0, i32* @flag_isoc99, align 4, !tbaa !5
  store i32 0, i32* @flag_isoc94, align 4, !tbaa !5
  br label %return

if.else61:                                        ; preds = %if.else57
  %call62 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([6 x i8]* @.str19, i64 0, i64 0)) #5
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %if.then67, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %if.else61
  %call65 = tail call i32 @strcmp(i8* %arrayidx33, i8* getelementptr inbounds ([6 x i8]* @.str20, i64 0, i64 0)) #5
  %tobool66 = icmp eq i32 %call65, 0
  br i1 %tobool66, label %if.then67, label %if.else68

if.then67:                                        ; preds = %lor.lhs.false64, %if.else61
  store i32 0, i32* @flag_traditional, align 4, !tbaa !5
  store i32 0, i32* @flag_writable_strings, align 4, !tbaa !5
  store i32 0, i32* @flag_no_asm, align 4, !tbaa !5
  store i32 0, i32* @flag_no_nonansi_builtin, align 4, !tbaa !5
  store i32 1, i32* @flag_noniso_default_format_attributes, align 4, !tbaa !5
  store i32 1, i32* @flag_isoc99, align 4, !tbaa !5
  store i32 1, i32* @flag_isoc94, align 4, !tbaa !5
  br label %return

if.else68:                                        ; preds = %lor.lhs.false64
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([24 x i8]* @.str21, i64 0, i64 0), i8* %arrayidx33) #5
  br label %return

if.else74:                                        ; preds = %if.else29
  %call75 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([25 x i8]* @.str22, i64 0, i64 0)) #5
  %tobool76 = icmp eq i32 %call75, 0
  br i1 %tobool76, label %if.then77, label %if.else78

if.then77:                                        ; preds = %if.else74
  store i32 1, i32* @dollars_in_ident, align 4, !tbaa !5
  br label %return

if.else78:                                        ; preds = %if.else74
  %call79 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([28 x i8]* @.str23, i64 0, i64 0)) #5
  %tobool80 = icmp eq i32 %call79, 0
  br i1 %tobool80, label %if.then81, label %if.else82

if.then81:                                        ; preds = %if.else78
  store i32 0, i32* @dollars_in_ident, align 4, !tbaa !5
  br label %return

if.else82:                                        ; preds = %if.else78
  %call83 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str24, i64 0, i64 0)) #5
  %tobool84 = icmp eq i32 %call83, 0
  br i1 %tobool84, label %if.then85, label %if.else86

if.then85:                                        ; preds = %if.else82
  store i32 1, i32* @flag_signed_char, align 4, !tbaa !5
  br label %return

if.else86:                                        ; preds = %if.else82
  %call87 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([16 x i8]* @.str25, i64 0, i64 0)) #5
  %tobool88 = icmp eq i32 %call87, 0
  br i1 %tobool88, label %if.then89, label %if.else90

if.then89:                                        ; preds = %if.else86
  store i32 0, i32* @flag_signed_char, align 4, !tbaa !5
  br label %return

if.else90:                                        ; preds = %if.else86
  %call91 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str26, i64 0, i64 0)) #5
  %tobool92 = icmp eq i32 %call91, 0
  br i1 %tobool92, label %if.then93, label %if.else94

if.then93:                                        ; preds = %if.else90
  store i32 0, i32* @flag_signed_char, align 4, !tbaa !5
  br label %return

if.else94:                                        ; preds = %if.else90
  %call95 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([19 x i8]* @.str27, i64 0, i64 0)) #5
  %tobool96 = icmp eq i32 %call95, 0
  br i1 %tobool96, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else94
  store i32 1, i32* @flag_signed_char, align 4, !tbaa !5
  br label %return

if.else98:                                        ; preds = %if.else94
  %call99 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([19 x i8]* @.str28, i64 0, i64 0)) #5
  %tobool100 = icmp eq i32 %call99, 0
  br i1 %tobool100, label %if.then104, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %if.else98
  %call102 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([24 x i8]* @.str29, i64 0, i64 0)) #5
  %tobool103 = icmp eq i32 %call102, 0
  br i1 %tobool103, label %if.then104, label %if.else105

if.then104:                                       ; preds = %lor.lhs.false101, %if.else98
  store i32 1, i32* @flag_signed_bitfields, align 4, !tbaa !5
  store i32 1, i32* @explicit_flag_signed_bitfields, align 4, !tbaa !5
  br label %return

if.else105:                                       ; preds = %lor.lhs.false101
  %call106 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([21 x i8]* @.str30, i64 0, i64 0)) #5
  %tobool107 = icmp eq i32 %call106, 0
  br i1 %tobool107, label %if.then111, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %if.else105
  %call109 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([22 x i8]* @.str31, i64 0, i64 0)) #5
  %tobool110 = icmp eq i32 %call109, 0
  br i1 %tobool110, label %if.then111, label %if.else112

if.then111:                                       ; preds = %lor.lhs.false108, %if.else105
  store i32 0, i32* @flag_signed_bitfields, align 4, !tbaa !5
  store i32 1, i32* @explicit_flag_signed_bitfields, align 4, !tbaa !5
  br label %return

if.else112:                                       ; preds = %lor.lhs.false108
  %call113 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str32, i64 0, i64 0)) #5
  %tobool114 = icmp eq i32 %call113, 0
  br i1 %tobool114, label %if.then115, label %if.else116

if.then115:                                       ; preds = %if.else112
  store i32 1, i32* @flag_short_enums, align 4, !tbaa !5
  br label %return

if.else116:                                       ; preds = %if.else112
  %call117 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str33, i64 0, i64 0)) #5
  %tobool118 = icmp eq i32 %call117, 0
  br i1 %tobool118, label %if.then119, label %if.else120

if.then119:                                       ; preds = %if.else116
  store i32 0, i32* @flag_short_enums, align 4, !tbaa !5
  br label %return

if.else120:                                       ; preds = %if.else116
  %call121 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str34, i64 0, i64 0)) #5
  %tobool122 = icmp eq i32 %call121, 0
  br i1 %tobool122, label %if.then123, label %if.else124

if.then123:                                       ; preds = %if.else120
  store i32 1, i32* @flag_short_wchar, align 4, !tbaa !5
  br label %return

if.else124:                                       ; preds = %if.else120
  %call125 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str35, i64 0, i64 0)) #5
  %tobool126 = icmp eq i32 %call125, 0
  br i1 %tobool126, label %if.then127, label %if.else128

if.then127:                                       ; preds = %if.else124
  store i32 0, i32* @flag_short_wchar, align 4, !tbaa !5
  br label %return

if.else128:                                       ; preds = %if.else124
  %call129 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([16 x i8]* @.str36, i64 0, i64 0)) #5
  %tobool130 = icmp eq i32 %call129, 0
  br i1 %tobool130, label %if.then131, label %if.else132

if.then131:                                       ; preds = %if.else128
  store i32 1, i32* @flag_cond_mismatch, align 4, !tbaa !5
  br label %return

if.else132:                                       ; preds = %if.else128
  %call133 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([19 x i8]* @.str37, i64 0, i64 0)) #5
  %tobool134 = icmp eq i32 %call133, 0
  br i1 %tobool134, label %if.then135, label %if.else136

if.then135:                                       ; preds = %if.else132
  store i32 0, i32* @flag_cond_mismatch, align 4, !tbaa !5
  br label %return

if.else136:                                       ; preds = %if.else132
  %call137 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([15 x i8]* @.str38, i64 0, i64 0)) #5
  %tobool138 = icmp eq i32 %call137, 0
  br i1 %tobool138, label %if.then139, label %if.else140

if.then139:                                       ; preds = %if.else136
  store i32 1, i32* @flag_short_double, align 4, !tbaa !5
  br label %return

if.else140:                                       ; preds = %if.else136
  %call141 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8]* @.str39, i64 0, i64 0)) #5
  %tobool142 = icmp eq i32 %call141, 0
  br i1 %tobool142, label %if.then143, label %if.else144

if.then143:                                       ; preds = %if.else140
  store i32 0, i32* @flag_short_double, align 4, !tbaa !5
  br label %return

if.else144:                                       ; preds = %if.else140
  %call145 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8]* @.str40, i64 0, i64 0)) #5
  %tobool146 = icmp eq i32 %call145, 0
  br i1 %tobool146, label %if.then147, label %if.else148

if.then147:                                       ; preds = %if.else144
  store i32 0, i32* @flag_no_asm, align 4, !tbaa !5
  br label %return

if.else148:                                       ; preds = %if.else144
  %call149 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str41, i64 0, i64 0)) #5
  %tobool150 = icmp eq i32 %call149, 0
  br i1 %tobool150, label %if.then151, label %if.else152

if.then151:                                       ; preds = %if.else148
  store i32 1, i32* @flag_no_asm, align 4, !tbaa !5
  br label %return

if.else152:                                       ; preds = %if.else148
  %call153 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([10 x i8]* @.str42, i64 0, i64 0)) #5
  %tobool154 = icmp eq i32 %call153, 0
  br i1 %tobool154, label %if.then155, label %if.else156

if.then155:                                       ; preds = %if.else152
  store i32 0, i32* @flag_no_builtin, align 4, !tbaa !5
  br label %return

if.else156:                                       ; preds = %if.else152
  %call157 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([13 x i8]* @.str43, i64 0, i64 0)) #5
  %tobool158 = icmp eq i32 %call157, 0
  br i1 %tobool158, label %if.then159, label %if.else160

if.then159:                                       ; preds = %if.else156
  store i32 1, i32* @flag_no_builtin, align 4, !tbaa !5
  br label %return

if.else160:                                       ; preds = %if.else156
  %call161 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str44, i64 0, i64 0), i64 13) #5
  %tobool162 = icmp eq i32 %call161, 0
  br i1 %tobool162, label %if.then163, label %if.else164

if.then163:                                       ; preds = %if.else160
  %add.ptr = getelementptr inbounds i8* %0, i64 13
  tail call void @disable_builtin_function(i8* %add.ptr) #5
  br label %return

if.else164:                                       ; preds = %if.else160
  %3 = load i8* %0, align 1, !tbaa !7
  %cmp166 = icmp eq i8 %3, 45
  br i1 %cmp166, label %land.lhs.true, label %if.else177

land.lhs.true:                                    ; preds = %if.else164
  %arrayidx168 = getelementptr inbounds i8* %0, i64 1
  %4 = load i8* %arrayidx168, align 1, !tbaa !7
  %cmp170 = icmp eq i8 %4, 102
  br i1 %cmp170, label %land.lhs.true172, label %if.else177

land.lhs.true172:                                 ; preds = %land.lhs.true
  %add.ptr173 = getelementptr inbounds i8* %0, i64 2
  %call174 = tail call i32 @dump_switch_p(i8* %add.ptr173) #5
  %tobool175 = icmp eq i32 %call174, 0
  br i1 %tobool175, label %if.else177, label %return

if.else177:                                       ; preds = %land.lhs.true172, %land.lhs.true, %if.else164
  %call178 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8]* @.str45, i64 0, i64 0)) #5
  %tobool179 = icmp eq i32 %call178, 0
  br i1 %tobool179, label %iso_1994, label %if.else181

if.else181:                                       ; preds = %if.else177
  %call182 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([38 x i8]* @.str46, i64 0, i64 0)) #5
  %tobool183 = icmp eq i32 %call182, 0
  br i1 %tobool183, label %if.then184, label %if.else185

if.then184:                                       ; preds = %if.else181
  store i32 2, i32* @mesg_implicit_function_declaration, align 4, !tbaa !5
  br label %return

if.else185:                                       ; preds = %if.else181
  %call186 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([32 x i8]* @.str47, i64 0, i64 0)) #5
  %tobool187 = icmp eq i32 %call186, 0
  br i1 %tobool187, label %if.then188, label %if.else189

if.then188:                                       ; preds = %if.else185
  store i32 1, i32* @mesg_implicit_function_declaration, align 4, !tbaa !5
  br label %return

if.else189:                                       ; preds = %if.else185
  %call190 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([35 x i8]* @.str48, i64 0, i64 0)) #5
  %tobool191 = icmp eq i32 %call190, 0
  br i1 %tobool191, label %if.then192, label %if.else193

if.then192:                                       ; preds = %if.else189
  store i32 0, i32* @mesg_implicit_function_declaration, align 4, !tbaa !5
  br label %return

if.else193:                                       ; preds = %if.else189
  %call194 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([15 x i8]* @.str49, i64 0, i64 0)) #5
  %tobool195 = icmp eq i32 %call194, 0
  br i1 %tobool195, label %if.then196, label %if.else197

if.then196:                                       ; preds = %if.else193
  store i32 1, i32* @warn_implicit_int, align 4, !tbaa !5
  br label %return

if.else197:                                       ; preds = %if.else193
  %call198 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8]* @.str50, i64 0, i64 0)) #5
  %tobool199 = icmp eq i32 %call198, 0
  br i1 %tobool199, label %if.then200, label %if.else201

if.then200:                                       ; preds = %if.else197
  store i32 0, i32* @warn_implicit_int, align 4, !tbaa !5
  br label %return

if.else201:                                       ; preds = %if.else197
  %call202 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str51, i64 0, i64 0)) #5
  %tobool203 = icmp eq i32 %call202, 0
  br i1 %tobool203, label %if.then204, label %if.else209

if.then204:                                       ; preds = %if.else201
  store i32 1, i32* @warn_implicit_int, align 4, !tbaa !5
  %5 = load i32* @mesg_implicit_function_declaration, align 4, !tbaa !5
  %cmp205 = icmp eq i32 %5, 2
  br i1 %cmp205, label %return, label %if.then207

if.then207:                                       ; preds = %if.then204
  store i32 1, i32* @mesg_implicit_function_declaration, align 4, !tbaa !5
  br label %return

if.else209:                                       ; preds = %if.else201
  %call210 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str52, i64 0, i64 0)) #5
  %tobool211 = icmp eq i32 %call210, 0
  br i1 %tobool211, label %if.then212, label %if.else213

if.then212:                                       ; preds = %if.else209
  store i32 0, i32* @warn_implicit_int, align 4, !tbaa !5
  store i32 0, i32* @mesg_implicit_function_declaration, align 4, !tbaa !5
  br label %return

if.else213:                                       ; preds = %if.else209
  %call214 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str53, i64 0, i64 0)) #5
  %tobool215 = icmp eq i32 %call214, 0
  br i1 %tobool215, label %if.then216, label %if.else217

if.then216:                                       ; preds = %if.else213
  store i32 1, i32* @warn_long_long, align 4, !tbaa !5
  br label %return

if.else217:                                       ; preds = %if.else213
  %call218 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([15 x i8]* @.str54, i64 0, i64 0)) #5
  %tobool219 = icmp eq i32 %call218, 0
  br i1 %tobool219, label %if.then220, label %if.else221

if.then220:                                       ; preds = %if.else217
  store i32 0, i32* @warn_long_long, align 4, !tbaa !5
  br label %return

if.else221:                                       ; preds = %if.else217
  %call222 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([16 x i8]* @.str55, i64 0, i64 0)) #5
  %tobool223 = icmp eq i32 %call222, 0
  br i1 %tobool223, label %if.then224, label %if.else225

if.then224:                                       ; preds = %if.else221
  store i32 1, i32* @flag_const_strings, align 4, !tbaa !5
  br label %return

if.else225:                                       ; preds = %if.else221
  %call226 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([19 x i8]* @.str56, i64 0, i64 0)) #5
  %tobool227 = icmp eq i32 %call226, 0
  br i1 %tobool227, label %if.then228, label %if.else229

if.then228:                                       ; preds = %if.else225
  store i32 0, i32* @flag_const_strings, align 4, !tbaa !5
  br label %return

if.else229:                                       ; preds = %if.else225
  %call230 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str57, i64 0, i64 0)) #5
  %tobool231 = icmp eq i32 %call230, 0
  br i1 %tobool231, label %if.then232, label %if.else233

if.then232:                                       ; preds = %if.else229
  store i32 1, i32* @warn_cast_qual, align 4, !tbaa !5
  br label %return

if.else233:                                       ; preds = %if.else229
  %call234 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([15 x i8]* @.str58, i64 0, i64 0)) #5
  %tobool235 = icmp eq i32 %call234, 0
  br i1 %tobool235, label %if.then236, label %if.else237

if.then236:                                       ; preds = %if.else233
  store i32 0, i32* @warn_cast_qual, align 4, !tbaa !5
  br label %return

if.else237:                                       ; preds = %if.else233
  %call238 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([20 x i8]* @.str59, i64 0, i64 0)) #5
  %tobool239 = icmp eq i32 %call238, 0
  br i1 %tobool239, label %if.then240, label %if.else241

if.then240:                                       ; preds = %if.else237
  store i32 1, i32* @warn_bad_function_cast, align 4, !tbaa !5
  br label %return

if.else241:                                       ; preds = %if.else237
  %call242 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([23 x i8]* @.str60, i64 0, i64 0)) #5
  %tobool243 = icmp eq i32 %call242, 0
  br i1 %tobool243, label %if.then244, label %if.else245

if.then244:                                       ; preds = %if.else241
  store i32 0, i32* @warn_bad_function_cast, align 4, !tbaa !5
  br label %return

if.else245:                                       ; preds = %if.else241
  %call246 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([22 x i8]* @.str61, i64 0, i64 0)) #5
  %tobool247 = icmp eq i32 %call246, 0
  br i1 %tobool247, label %if.then248, label %if.else249

if.then248:                                       ; preds = %if.else245
  store i32 0, i32* @warn_missing_noreturn, align 4, !tbaa !5
  br label %return

if.else249:                                       ; preds = %if.else245
  %call250 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([27 x i8]* @.str62, i64 0, i64 0)) #5
  %tobool251 = icmp eq i32 %call250, 0
  br i1 %tobool251, label %if.then252, label %if.else253

if.then252:                                       ; preds = %if.else249
  store i32 1, i32* @warn_missing_format_attribute, align 4, !tbaa !5
  br label %return

if.else253:                                       ; preds = %if.else249
  %call254 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([30 x i8]* @.str63, i64 0, i64 0)) #5
  %tobool255 = icmp eq i32 %call254, 0
  br i1 %tobool255, label %if.then256, label %if.else257

if.then256:                                       ; preds = %if.else253
  store i32 0, i32* @warn_missing_format_attribute, align 4, !tbaa !5
  br label %return

if.else257:                                       ; preds = %if.else253
  %call258 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([16 x i8]* @.str64, i64 0, i64 0)) #5
  %tobool259 = icmp eq i32 %call258, 0
  br i1 %tobool259, label %if.then260, label %if.else261

if.then260:                                       ; preds = %if.else257
  store i32 1, i32* @warn_pointer_arith, align 4, !tbaa !5
  br label %return

if.else261:                                       ; preds = %if.else257
  %call262 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([19 x i8]* @.str65, i64 0, i64 0)) #5
  %tobool263 = icmp eq i32 %call262, 0
  br i1 %tobool263, label %if.then264, label %if.else265

if.then264:                                       ; preds = %if.else261
  store i32 0, i32* @warn_pointer_arith, align 4, !tbaa !5
  br label %return

if.else265:                                       ; preds = %if.else261
  %call266 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([20 x i8]* @.str66, i64 0, i64 0)) #5
  %tobool267 = icmp eq i32 %call266, 0
  br i1 %tobool267, label %if.then268, label %if.else269

if.then268:                                       ; preds = %if.else265
  store i32 1, i32* @warn_strict_prototypes, align 4, !tbaa !5
  br label %return

if.else269:                                       ; preds = %if.else265
  %call270 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([23 x i8]* @.str67, i64 0, i64 0)) #5
  %tobool271 = icmp eq i32 %call270, 0
  br i1 %tobool271, label %if.then272, label %if.else273

if.then272:                                       ; preds = %if.else269
  store i32 0, i32* @warn_strict_prototypes, align 4, !tbaa !5
  br label %return

if.else273:                                       ; preds = %if.else269
  %call274 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([21 x i8]* @.str68, i64 0, i64 0)) #5
  %tobool275 = icmp eq i32 %call274, 0
  br i1 %tobool275, label %if.then276, label %if.else277

if.then276:                                       ; preds = %if.else273
  store i32 1, i32* @warn_missing_prototypes, align 4, !tbaa !5
  br label %return

if.else277:                                       ; preds = %if.else273
  %call278 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([24 x i8]* @.str69, i64 0, i64 0)) #5
  %tobool279 = icmp eq i32 %call278, 0
  br i1 %tobool279, label %if.then280, label %if.else281

if.then280:                                       ; preds = %if.else277
  store i32 0, i32* @warn_missing_prototypes, align 4, !tbaa !5
  br label %return

if.else281:                                       ; preds = %if.else277
  %call282 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([23 x i8]* @.str70, i64 0, i64 0)) #5
  %tobool283 = icmp eq i32 %call282, 0
  br i1 %tobool283, label %if.then284, label %if.else285

if.then284:                                       ; preds = %if.else281
  store i32 1, i32* @warn_missing_declarations, align 4, !tbaa !5
  br label %return

if.else285:                                       ; preds = %if.else281
  %call286 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([26 x i8]* @.str71, i64 0, i64 0)) #5
  %tobool287 = icmp eq i32 %call286, 0
  br i1 %tobool287, label %if.then288, label %if.else289

if.then288:                                       ; preds = %if.else285
  store i32 0, i32* @warn_missing_declarations, align 4, !tbaa !5
  br label %return

if.else289:                                       ; preds = %if.else285
  %call290 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8]* @.str72, i64 0, i64 0)) #5
  %tobool291 = icmp eq i32 %call290, 0
  br i1 %tobool291, label %if.then292, label %if.else293

if.then292:                                       ; preds = %if.else289
  store i32 1, i32* @warn_redundant_decls, align 4, !tbaa !5
  br label %return

if.else293:                                       ; preds = %if.else289
  %call294 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([21 x i8]* @.str73, i64 0, i64 0)) #5
  %tobool295 = icmp eq i32 %call294, 0
  br i1 %tobool295, label %if.then296, label %if.else297

if.then296:                                       ; preds = %if.else293
  store i32 0, i32* @warn_redundant_decls, align 4, !tbaa !5
  br label %return

if.else297:                                       ; preds = %if.else293
  %call298 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str74, i64 0, i64 0)) #5
  %tobool299 = icmp eq i32 %call298, 0
  br i1 %tobool299, label %if.then300, label %if.else301

if.then300:                                       ; preds = %if.else297
  store i32 1, i32* @warn_nested_externs, align 4, !tbaa !5
  br label %return

if.else301:                                       ; preds = %if.else297
  %call302 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([20 x i8]* @.str75, i64 0, i64 0)) #5
  %tobool303 = icmp eq i32 %call302, 0
  br i1 %tobool303, label %if.then304, label %if.else305

if.then304:                                       ; preds = %if.else301
  store i32 0, i32* @warn_nested_externs, align 4, !tbaa !5
  br label %return

if.else305:                                       ; preds = %if.else301
  %call306 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str76, i64 0, i64 0)) #5
  %tobool307 = icmp eq i32 %call306, 0
  br i1 %tobool307, label %if.then308, label %if.else309

if.then308:                                       ; preds = %if.else305
  store i32 1, i32* @warn_traditional, align 4, !tbaa !5
  br label %return

if.else309:                                       ; preds = %if.else305
  %call310 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str77, i64 0, i64 0)) #5
  %tobool311 = icmp eq i32 %call310, 0
  br i1 %tobool311, label %if.then312, label %if.else313

if.then312:                                       ; preds = %if.else309
  store i32 0, i32* @warn_traditional, align 4, !tbaa !5
  br label %return

if.else313:                                       ; preds = %if.else309
  %call314 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([10 x i8]* @.str78, i64 0, i64 0), i64 9) #5
  %tobool315 = icmp eq i32 %call314, 0
  br i1 %tobool315, label %if.then316, label %if.else319

if.then316:                                       ; preds = %if.else313
  %add.ptr317 = getelementptr inbounds i8* %0, i64 9
  %call318 = tail call i32 @atoi(i8* %add.ptr317) #5
  tail call void @set_Wformat(i32 %call318) #5
  br label %return

if.else319:                                       ; preds = %if.else313
  %call320 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str79, i64 0, i64 0)) #5
  %tobool321 = icmp eq i32 %call320, 0
  br i1 %tobool321, label %if.then322, label %if.else323

if.then322:                                       ; preds = %if.else319
  tail call void @set_Wformat(i32 1) #5
  br label %return

if.else323:                                       ; preds = %if.else319
  %call324 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str80, i64 0, i64 0)) #5
  %tobool325 = icmp eq i32 %call324, 0
  br i1 %tobool325, label %if.then326, label %if.else327

if.then326:                                       ; preds = %if.else323
  tail call void @set_Wformat(i32 0) #5
  br label %return

if.else327:                                       ; preds = %if.else323
  %call328 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([13 x i8]* @.str81, i64 0, i64 0)) #5
  %tobool329 = icmp eq i32 %call328, 0
  br i1 %tobool329, label %if.then330, label %if.else331

if.then330:                                       ; preds = %if.else327
  store i32 1, i32* @warn_format_y2k, align 4, !tbaa !5
  br label %return

if.else331:                                       ; preds = %if.else327
  %call332 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([16 x i8]* @.str82, i64 0, i64 0)) #5
  %tobool333 = icmp eq i32 %call332, 0
  br i1 %tobool333, label %if.then334, label %if.else335

if.then334:                                       ; preds = %if.else331
  store i32 0, i32* @warn_format_y2k, align 4, !tbaa !5
  br label %return

if.else335:                                       ; preds = %if.else331
  %call336 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([20 x i8]* @.str83, i64 0, i64 0)) #5
  %tobool337 = icmp eq i32 %call336, 0
  br i1 %tobool337, label %if.then338, label %if.else339

if.then338:                                       ; preds = %if.else335
  store i32 1, i32* @warn_format_extra_args, align 4, !tbaa !5
  br label %return

if.else339:                                       ; preds = %if.else335
  %call340 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([23 x i8]* @.str84, i64 0, i64 0)) #5
  %tobool341 = icmp eq i32 %call340, 0
  br i1 %tobool341, label %if.then342, label %if.else343

if.then342:                                       ; preds = %if.else339
  store i32 0, i32* @warn_format_extra_args, align 4, !tbaa !5
  br label %return

if.else343:                                       ; preds = %if.else339
  %call344 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([20 x i8]* @.str85, i64 0, i64 0)) #5
  %tobool345 = icmp eq i32 %call344, 0
  br i1 %tobool345, label %if.then346, label %if.else347

if.then346:                                       ; preds = %if.else343
  store i32 1, i32* @warn_format_nonliteral, align 4, !tbaa !5
  br label %return

if.else347:                                       ; preds = %if.else343
  %call348 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([23 x i8]* @.str86, i64 0, i64 0)) #5
  %tobool349 = icmp eq i32 %call348, 0
  br i1 %tobool349, label %if.then350, label %if.else351

if.then350:                                       ; preds = %if.else347
  store i32 0, i32* @warn_format_nonliteral, align 4, !tbaa !5
  br label %return

if.else351:                                       ; preds = %if.else347
  %call352 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8]* @.str87, i64 0, i64 0)) #5
  %tobool353 = icmp eq i32 %call352, 0
  br i1 %tobool353, label %if.then354, label %if.else355

if.then354:                                       ; preds = %if.else351
  store i32 1, i32* @warn_format_security, align 4, !tbaa !5
  br label %return

if.else355:                                       ; preds = %if.else351
  %call356 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([21 x i8]* @.str88, i64 0, i64 0)) #5
  %tobool357 = icmp eq i32 %call356, 0
  br i1 %tobool357, label %if.then358, label %if.else359

if.then358:                                       ; preds = %if.else355
  store i32 0, i32* @warn_format_security, align 4, !tbaa !5
  br label %return

if.else359:                                       ; preds = %if.else355
  %call360 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8]* @.str89, i64 0, i64 0)) #5
  %tobool361 = icmp eq i32 %call360, 0
  br i1 %tobool361, label %if.then362, label %if.else363

if.then362:                                       ; preds = %if.else359
  store i32 1, i32* @warn_char_subscripts, align 4, !tbaa !5
  br label %return

if.else363:                                       ; preds = %if.else359
  %call364 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([21 x i8]* @.str90, i64 0, i64 0)) #5
  %tobool365 = icmp eq i32 %call364, 0
  br i1 %tobool365, label %if.then366, label %if.else367

if.then366:                                       ; preds = %if.else363
  store i32 0, i32* @warn_char_subscripts, align 4, !tbaa !5
  br label %return

if.else367:                                       ; preds = %if.else363
  %call368 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([13 x i8]* @.str91, i64 0, i64 0)) #5
  %tobool369 = icmp eq i32 %call368, 0
  br i1 %tobool369, label %if.then370, label %if.else371

if.then370:                                       ; preds = %if.else367
  store i32 1, i32* @warn_conversion, align 4, !tbaa !5
  br label %return

if.else371:                                       ; preds = %if.else367
  %call372 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([16 x i8]* @.str92, i64 0, i64 0)) #5
  %tobool373 = icmp eq i32 %call372, 0
  br i1 %tobool373, label %if.then374, label %if.else375

if.then374:                                       ; preds = %if.else371
  store i32 0, i32* @warn_conversion, align 4, !tbaa !5
  br label %return

if.else375:                                       ; preds = %if.else371
  %call376 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str93, i64 0, i64 0)) #5
  %tobool377 = icmp eq i32 %call376, 0
  br i1 %tobool377, label %if.then378, label %if.else379

if.then378:                                       ; preds = %if.else375
  store i32 1, i32* @warn_parentheses, align 4, !tbaa !5
  br label %return

if.else379:                                       ; preds = %if.else375
  %call380 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str94, i64 0, i64 0)) #5
  %tobool381 = icmp eq i32 %call380, 0
  br i1 %tobool381, label %if.then382, label %if.else383

if.then382:                                       ; preds = %if.else379
  store i32 0, i32* @warn_parentheses, align 4, !tbaa !5
  br label %return

if.else383:                                       ; preds = %if.else379
  %call384 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str95, i64 0, i64 0)) #5
  %tobool385 = icmp eq i32 %call384, 0
  br i1 %tobool385, label %if.then386, label %if.else387

if.then386:                                       ; preds = %if.else383
  store i32 1, i32* @warn_return_type, align 4, !tbaa !5
  br label %return

if.else387:                                       ; preds = %if.else383
  %call388 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str96, i64 0, i64 0)) #5
  %tobool389 = icmp eq i32 %call388, 0
  br i1 %tobool389, label %if.then390, label %if.else391

if.then390:                                       ; preds = %if.else387
  store i32 0, i32* @warn_return_type, align 4, !tbaa !5
  br label %return

if.else391:                                       ; preds = %if.else387
  %call392 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str97, i64 0, i64 0)) #5
  %tobool393 = icmp eq i32 %call392, 0
  br i1 %tobool393, label %if.then394, label %if.else395

if.then394:                                       ; preds = %if.else391
  store i32 1, i32* @warn_sequence_point, align 4, !tbaa !5
  br label %return

if.else395:                                       ; preds = %if.else391
  %call396 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([20 x i8]* @.str98, i64 0, i64 0)) #5
  %tobool397 = icmp eq i32 %call396, 0
  br i1 %tobool397, label %if.then398, label %if.else399

if.then398:                                       ; preds = %if.else395
  store i32 0, i32* @warn_sequence_point, align 4, !tbaa !5
  br label %return

if.else399:                                       ; preds = %if.else395
  %call400 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([10 x i8]* @.str99, i64 0, i64 0)) #5
  %tobool401 = icmp eq i32 %call400, 0
  br i1 %tobool401, label %return, label %if.else403

if.else403:                                       ; preds = %if.else399
  %call404 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([13 x i8]* @.str100, i64 0, i64 0)) #5
  %tobool405 = icmp eq i32 %call404, 0
  br i1 %tobool405, label %return, label %if.else407

if.else407:                                       ; preds = %if.else403
  %call408 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str101, i64 0, i64 0)) #5
  %tobool409 = icmp eq i32 %call408, 0
  br i1 %tobool409, label %return, label %if.else411

if.else411:                                       ; preds = %if.else407
  %call412 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str102, i64 0, i64 0)) #5
  %tobool413 = icmp eq i32 %call412, 0
  br i1 %tobool413, label %return, label %if.else415

if.else415:                                       ; preds = %if.else411
  %call416 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str103, i64 0, i64 0)) #5
  %tobool417 = icmp eq i32 %call416, 0
  br i1 %tobool417, label %return, label %if.else419

if.else419:                                       ; preds = %if.else415
  %call420 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([15 x i8]* @.str104, i64 0, i64 0)) #5
  %tobool421 = icmp eq i32 %call420, 0
  br i1 %tobool421, label %return, label %if.else423

if.else423:                                       ; preds = %if.else419
  %call424 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8]* @.str105, i64 0, i64 0)) #5
  %tobool425 = icmp eq i32 %call424, 0
  br i1 %tobool425, label %return, label %if.else427

if.else427:                                       ; preds = %if.else423
  %call428 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([11 x i8]* @.str106, i64 0, i64 0)) #5
  %tobool429 = icmp eq i32 %call428, 0
  br i1 %tobool429, label %return, label %if.else431

if.else431:                                       ; preds = %if.else427
  %call432 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str107, i64 0, i64 0)) #5
  %tobool433 = icmp eq i32 %call432, 0
  br i1 %tobool433, label %return, label %if.else435

if.else435:                                       ; preds = %if.else431
  %call436 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str108, i64 0, i64 0)) #5
  %tobool437 = icmp eq i32 %call436, 0
  br i1 %tobool437, label %return, label %if.else439

if.else439:                                       ; preds = %if.else435
  %call440 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str109, i64 0, i64 0)) #5
  %tobool441 = icmp eq i32 %call440, 0
  br i1 %tobool441, label %if.then442, label %if.else443

if.then442:                                       ; preds = %if.else439
  store i32 1, i32* @warn_missing_braces, align 4, !tbaa !5
  br label %return

if.else443:                                       ; preds = %if.else439
  %call444 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([20 x i8]* @.str110, i64 0, i64 0)) #5
  %tobool445 = icmp eq i32 %call444, 0
  br i1 %tobool445, label %if.then446, label %if.else447

if.then446:                                       ; preds = %if.else443
  store i32 0, i32* @warn_missing_braces, align 4, !tbaa !5
  br label %return

if.else447:                                       ; preds = %if.else443
  %call448 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([7 x i8]* @.str111, i64 0, i64 0)) #5
  %tobool449 = icmp eq i32 %call448, 0
  br i1 %tobool449, label %if.then450, label %if.else451

if.then450:                                       ; preds = %if.else447
  store i32 1, i32* @warn_main, align 4, !tbaa !5
  br label %return

if.else451:                                       ; preds = %if.else447
  %call452 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([10 x i8]* @.str112, i64 0, i64 0)) #5
  %tobool453 = icmp eq i32 %call452, 0
  br i1 %tobool453, label %if.then454, label %if.else455

if.then454:                                       ; preds = %if.else451
  store i32 -1, i32* @warn_main, align 4, !tbaa !5
  br label %return

if.else455:                                       ; preds = %if.else451
  %call456 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([15 x i8]* @.str113, i64 0, i64 0)) #5
  %tobool457 = icmp eq i32 %call456, 0
  br i1 %tobool457, label %if.then458, label %if.else459

if.then458:                                       ; preds = %if.else455
  store i32 1, i32* @warn_sign_compare, align 4, !tbaa !5
  br label %return

if.else459:                                       ; preds = %if.else455
  %call460 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8]* @.str114, i64 0, i64 0)) #5
  %tobool461 = icmp eq i32 %call460, 0
  br i1 %tobool461, label %if.then462, label %if.else463

if.then462:                                       ; preds = %if.else459
  store i32 0, i32* @warn_sign_compare, align 4, !tbaa !5
  br label %return

if.else463:                                       ; preds = %if.else459
  %call464 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str115, i64 0, i64 0)) #5
  %tobool465 = icmp eq i32 %call464, 0
  br i1 %tobool465, label %if.then466, label %if.else467

if.then466:                                       ; preds = %if.else463
  store i32 1, i32* @warn_float_equal, align 4, !tbaa !5
  br label %return

if.else467:                                       ; preds = %if.else463
  %call468 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str116, i64 0, i64 0)) #5
  %tobool469 = icmp eq i32 %call468, 0
  br i1 %tobool469, label %if.then470, label %if.else471

if.then470:                                       ; preds = %if.else467
  store i32 0, i32* @warn_float_equal, align 4, !tbaa !5
  br label %return

if.else471:                                       ; preds = %if.else467
  %call472 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str117, i64 0, i64 0)) #5
  %tobool473 = icmp eq i32 %call472, 0
  br i1 %tobool473, label %if.then474, label %if.else475

if.then474:                                       ; preds = %if.else471
  store i32 1, i32* @warn_multichar, align 4, !tbaa !5
  br label %return

if.else475:                                       ; preds = %if.else471
  %call476 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([15 x i8]* @.str118, i64 0, i64 0)) #5
  %tobool477 = icmp eq i32 %call476, 0
  br i1 %tobool477, label %if.then478, label %if.else479

if.then478:                                       ; preds = %if.else475
  store i32 0, i32* @warn_multichar, align 4, !tbaa !5
  br label %return

if.else479:                                       ; preds = %if.else475
  %call480 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([14 x i8]* @.str119, i64 0, i64 0)) #5
  %tobool481 = icmp eq i32 %call480, 0
  br i1 %tobool481, label %if.then482, label %if.else483

if.then482:                                       ; preds = %if.else479
  store i32 1, i32* @warn_div_by_zero, align 4, !tbaa !5
  br label %return

if.else483:                                       ; preds = %if.else479
  %call484 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([17 x i8]* @.str120, i64 0, i64 0)) #5
  %tobool485 = icmp eq i32 %call484, 0
  br i1 %tobool485, label %if.then486, label %if.else487

if.then486:                                       ; preds = %if.else483
  store i32 0, i32* @warn_div_by_zero, align 4, !tbaa !5
  br label %return

if.else487:                                       ; preds = %if.else483
  %call488 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8]* @.str121, i64 0, i64 0)) #5
  %tobool489 = icmp eq i32 %call488, 0
  br i1 %tobool489, label %if.then490, label %if.else491

if.then490:                                       ; preds = %if.else487
  store i32 2, i32* @warn_unknown_pragmas, align 4, !tbaa !5
  br label %return

if.else491:                                       ; preds = %if.else487
  %call492 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([21 x i8]* @.str122, i64 0, i64 0)) #5
  %tobool493 = icmp eq i32 %call492, 0
  br i1 %tobool493, label %if.then494, label %if.else495

if.then494:                                       ; preds = %if.else491
  store i32 0, i32* @warn_unknown_pragmas, align 4, !tbaa !5
  br label %return

if.else495:                                       ; preds = %if.else491
  %call496 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8]* @.str123, i64 0, i64 0)) #5
  %tobool497 = icmp eq i32 %call496, 0
  br i1 %tobool497, label %if.then498, label %return

if.then498:                                       ; preds = %if.else495
  %6 = load i32* @warn_uninitialized, align 4, !tbaa !5
  %cmp499 = icmp eq i32 %6, 1
  br i1 %cmp499, label %if.end502, label %if.then501

if.then501:                                       ; preds = %if.then498
  store i32 2, i32* @warn_uninitialized, align 4, !tbaa !5
  br label %if.end502

if.end502:                                        ; preds = %if.then498, %if.then501
  store i32 1, i32* @warn_implicit_int, align 4, !tbaa !5
  store i32 1, i32* @mesg_implicit_function_declaration, align 4, !tbaa !5
  store i32 1, i32* @warn_return_type, align 4, !tbaa !5
  tail call void @set_Wunused(i32 1) #5
  store i32 1, i32* @warn_switch, align 4, !tbaa !5
  tail call void @set_Wformat(i32 1) #5
  store i32 1, i32* @warn_char_subscripts, align 4, !tbaa !5
  store i32 1, i32* @warn_parentheses, align 4, !tbaa !5
  store i32 1, i32* @warn_sequence_point, align 4, !tbaa !5
  store i32 1, i32* @warn_missing_braces, align 4, !tbaa !5
  store i32 2, i32* @warn_main, align 4, !tbaa !5
  store i32 1, i32* @warn_unknown_pragmas, align 4, !tbaa !5
  br label %return

return:                                           ; preds = %if.then, %if.then13, %if.then28, %if.then77, %if.then85, %if.then93, %if.then104, %if.then115, %if.then123, %if.then131, %if.then139, %if.then147, %if.then155, %if.then163, %if.then188, %if.then196, %if.then207, %if.then216, %if.then224, %if.then232, %if.then240, %if.then248, %if.then256, %if.then264, %if.then272, %if.then280, %if.then288, %if.then296, %if.then304, %if.then312, %if.then322, %if.then330, %if.then338, %if.then346, %if.then354, %if.then362, %if.then370, %if.then378, %if.then386, %if.then394, %if.then442, %if.then450, %if.then458, %if.then466, %if.then474, %if.then482, %if.then490, %if.end502, %if.then494, %if.then486, %if.then478, %if.then470, %if.then462, %if.then454, %if.then446, %if.then398, %if.then390, %if.then382, %if.then374, %if.then366, %if.then358, %if.then350, %if.then342, %if.then334, %if.then326, %if.then316, %if.then308, %if.then300, %if.then292, %if.then284, %if.then276, %if.then268, %if.then260, %if.then252, %if.then244, %if.then236, %if.then228, %if.then220, %if.then212, %if.then200, %if.then192, %if.then184, %if.then159, %if.then151, %if.then143, %if.then135, %if.then127, %if.then119, %if.then111, %if.then97, %if.then89, %if.then81, %iso_1994, %if.then56, %if.then67, %if.else68, %if.then60, %if.then20, %if.then21, %if.then6, %if.then204, %if.else399, %if.else403, %if.else407, %if.else411, %if.else415, %if.else419, %if.else423, %if.else427, %if.else431, %if.else435, %land.lhs.true172, %if.else495
  %retval.0 = phi i32 [ %call, %if.else495 ], [ 1, %land.lhs.true172 ], [ 1, %if.else435 ], [ 1, %if.else431 ], [ 1, %if.else427 ], [ 1, %if.else423 ], [ 1, %if.else419 ], [ 1, %if.else415 ], [ 1, %if.else411 ], [ 1, %if.else407 ], [ 1, %if.else403 ], [ 1, %if.else399 ], [ 1, %if.then204 ], [ 1, %if.then6 ], [ 1, %if.then21 ], [ 1, %if.then20 ], [ 1, %if.then60 ], [ 1, %if.else68 ], [ 1, %if.then67 ], [ 1, %if.then56 ], [ 1, %iso_1994 ], [ 1, %if.then81 ], [ 1, %if.then89 ], [ 1, %if.then97 ], [ 1, %if.then111 ], [ 1, %if.then119 ], [ 1, %if.then127 ], [ 1, %if.then135 ], [ 1, %if.then143 ], [ 1, %if.then151 ], [ 1, %if.then159 ], [ 1, %if.then184 ], [ 1, %if.then192 ], [ 1, %if.then200 ], [ 1, %if.then212 ], [ 1, %if.then220 ], [ 1, %if.then228 ], [ 1, %if.then236 ], [ 1, %if.then244 ], [ 1, %if.then252 ], [ 1, %if.then260 ], [ 1, %if.then268 ], [ 1, %if.then276 ], [ 1, %if.then284 ], [ 1, %if.then292 ], [ 1, %if.then300 ], [ 1, %if.then308 ], [ 1, %if.then316 ], [ 1, %if.then326 ], [ 1, %if.then334 ], [ 1, %if.then342 ], [ 1, %if.then350 ], [ 1, %if.then358 ], [ 1, %if.then366 ], [ 1, %if.then374 ], [ 1, %if.then382 ], [ 1, %if.then390 ], [ 1, %if.then398 ], [ 1, %if.then446 ], [ 1, %if.then454 ], [ 1, %if.then462 ], [ 1, %if.then470 ], [ 1, %if.then478 ], [ 1, %if.then486 ], [ 1, %if.then494 ], [ 1, %if.end502 ], [ 1, %if.then490 ], [ 1, %if.then482 ], [ 1, %if.then474 ], [ 1, %if.then466 ], [ 1, %if.then458 ], [ 1, %if.then450 ], [ 1, %if.then442 ], [ 1, %if.then394 ], [ 1, %if.then386 ], [ 1, %if.then378 ], [ 1, %if.then370 ], [ 1, %if.then362 ], [ 1, %if.then354 ], [ 1, %if.then346 ], [ 1, %if.then338 ], [ 1, %if.then330 ], [ 1, %if.then322 ], [ 1, %if.then312 ], [ 1, %if.then304 ], [ 1, %if.then296 ], [ 1, %if.then288 ], [ 1, %if.then280 ], [ 1, %if.then272 ], [ 1, %if.then264 ], [ 1, %if.then256 ], [ 1, %if.then248 ], [ 1, %if.then240 ], [ 1, %if.then232 ], [ 1, %if.then224 ], [ 1, %if.then216 ], [ 1, %if.then207 ], [ 1, %if.then196 ], [ 1, %if.then188 ], [ 1, %if.then163 ], [ 1, %if.then155 ], [ 1, %if.then147 ], [ 1, %if.then139 ], [ 1, %if.then131 ], [ 1, %if.then123 ], [ 1, %if.then115 ], [ 1, %if.then104 ], [ 1, %if.then93 ], [ 1, %if.then85 ], [ 1, %if.then77 ], [ 1, %if.then28 ], [ 1, %if.then13 ], [ 1, %if.then ]
  ret i32 %retval.0
}

declare i32 @cpp_handle_option(%struct.cpp_reader*, i32, i8**, i32) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #2

declare void @warning(i8*, ...) #1

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #2

declare void @error(i8*, ...) #1

declare void @disable_builtin_function(i8*) #1

declare i32 @dump_switch_p(i8*) #1

declare void @set_Wformat(i32) #1

; Function Attrs: nounwind readonly
declare i32 @atoi(i8* nocapture) #2

declare void @set_Wunused(i32) #1

; Function Attrs: nounwind uwtable
define void @c_print_identifier(%struct._IO_FILE* %file, %union.tree_node* nocapture readonly %node, i32 %indent) #0 {
entry:
  %global_value = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 6
  %0 = bitcast %union.anon* %global_value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !8
  %add = add nsw i32 %indent, 4
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8]* @.str124, i64 0, i64 0), %union.tree_node* %1, i32 %add) #5
  %2 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 7
  %3 = load %union.tree_node** %2, align 8, !tbaa !15
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8]* @.str125, i64 0, i64 0), %union.tree_node* %3, i32 %add) #5
  %4 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 8
  %5 = load %union.tree_node** %4, align 8, !tbaa !16
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8]* @.str126, i64 0, i64 0), %union.tree_node* %5, i32 %add) #5
  %6 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 9
  %7 = load %union.tree_node** %6, align 8, !tbaa !17
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([9 x i8]* @.str127, i64 0, i64 0), %union.tree_node* %7, i32 %add) #5
  %8 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 10
  %9 = load %union.tree_node** %8, align 8, !tbaa !18
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8]* @.str128, i64 0, i64 0), %union.tree_node* %9, i32 %add) #5
  %10 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 11
  %11 = load %union.tree_node** %10, align 8, !tbaa !19
  tail call void @print_node(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8]* @.str129, i64 0, i64 0), %union.tree_node* %11, i32 %add) #5
  %lang_flag_0 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %lang_flag_0, align 8
  %bf.clear = and i32 %bf.load, 16777216
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %node6 = getelementptr inbounds %union.tree_node* %node, i64 0, i32 0, i32 1
  %12 = bitcast i8** %node6 to %struct.cpp_hashnode*
  %rid_code = getelementptr inbounds %struct.cpp_hashnode* %12, i64 0, i32 3
  %13 = load i8* %rid_code, align 1, !tbaa !20
  %idxprom = zext i8 %13 to i64
  %14 = load %union.tree_node*** @ridpointers, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %union.tree_node** %14, i64 %idxprom
  %15 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  tail call void @indent_to(%struct._IO_FILE* %file, i32 %add) #5
  %16 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str130, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %file)
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8]* @.str131, i64 0, i64 0), %union.tree_node* %15) #5
  %id = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds i8** %id, i64 1
  %18 = load i8** %17, align 8, !tbaa !21
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8]* @.str132, i64 0, i64 0), i8* %18) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare void @print_node(%struct._IO_FILE*, i8*, %union.tree_node*, i32) #1

declare void @indent_to(%struct._IO_FILE*, i32) #1

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #3

; Function Attrs: nounwind uwtable
define void @finish_incomplete_decl(%union.tree_node* %decl) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 34
  br i1 %cmp, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  %type2 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type2, align 8, !tbaa !23
  %1 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp3 = icmp eq %union.tree_node* %0, %1
  br i1 %cmp3, label %if.end17, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %code5 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load6 = load i32* %code5, align 8
  %bf.clear7 = and i32 %bf.load6, 255
  %cmp8 = icmp eq i32 %bf.clear7, 18
  br i1 %cmp8, label %land.lhs.true9, label %if.end17

land.lhs.true9:                                   ; preds = %land.lhs.true
  %external_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %2 = bitcast i48* %external_flag to i64*
  %bf.load11 = load i64* %2, align 8
  %bf.cast = and i64 %bf.load11, 256
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %land.lhs.true13, label %if.end17

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %3 = load i8** %values, align 8
  %cmp15 = icmp eq i8* %3, null
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %land.lhs.true13
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl, i8* getelementptr inbounds ([39 x i8]* @.str133, i64 0, i64 0)) #5
  %call39.i = tail call %union.tree_node* @build_int_2_wide(i64 0, i64 0) #5
  %tobool42.i = icmp eq %union.tree_node* %call39.i, null
  br i1 %tobool42.i, label %complete_array_type.exit, label %if.then43.i

if.then43.i:                                      ; preds = %if.then16
  %call44.i = tail call %union.tree_node* @build_index_type(%union.tree_node* %call39.i) #5
  %call44.c.i = bitcast %union.tree_node* %call44.i to i8*
  store i8* %call44.c.i, i8** %values, align 8, !tbaa !24
  %type47.i = getelementptr inbounds %union.tree_node* %call39.i, i64 0, i32 0, i32 0, i32 1
  %4 = load %union.tree_node** %type47.i, align 8, !tbaa !23
  %tobool48.i = icmp eq %union.tree_node* %4, null
  br i1 %tobool48.i, label %if.then49.i, label %complete_array_type.exit

if.then49.i:                                      ; preds = %if.then43.i
  store %union.tree_node* %call44.i, %union.tree_node** %type47.i, align 8, !tbaa !23
  br label %complete_array_type.exit

complete_array_type.exit:                         ; preds = %if.then16, %if.then43.i, %if.then49.i
  tail call void @layout_type(%union.tree_node* %0) #5
  tail call void @layout_decl(%union.tree_node* %decl, i32 0) #5
  br label %if.end17

if.end17:                                         ; preds = %land.lhs.true9, %if.then, %land.lhs.true, %land.lhs.true13, %complete_array_type.exit, %entry
  ret void
}

declare void @warning_with_decl(%union.tree_node*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define i32 @complete_array_type(%union.tree_node* %type, %union.tree_node* readonly %initial_value, i32 %do_default) #0 {
entry:
  %tobool = icmp eq %union.tree_node* %initial_value, null
  br i1 %tobool, label %if.then36, label %if.then

if.then:                                          ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %initial_value, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %if.else26 [
    i32 29, label %if.then1
    i32 46, label %if.then14
  ]

if.then1:                                         ; preds = %if.then
  %type3 = getelementptr inbounds %union.tree_node* %initial_value, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type3, align 8, !tbaa !23
  %type5 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %1 = load %union.tree_node** %type5, align 8, !tbaa !23
  %call = tail call i64 @int_size_in_bytes(%union.tree_node* %1) #5
  %conv = trunc i64 %call to i32
  %2 = getelementptr inbounds %union.tree_node* %initial_value, i64 0, i32 0, i32 2
  %3 = load i32* %2, align 4, !tbaa !27
  %div = sdiv i32 %3, %conv
  %sub = add nsw i32 %div, -1
  %conv6 = sext i32 %sub to i64
  %call7 = tail call %union.tree_node* @build_int_2_wide(i64 %conv6, i64 0) #5
  br label %if.end34

if.then14:                                        ; preds = %if.then
  %operands = getelementptr inbounds %union.tree_node* %initial_value, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %4 = bitcast i32* %arrayidx to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !1
  %call15 = tail call %union.tree_node* @build_int_2_wide(i64 -1, i64 -1) #5
  %tobool1679 = icmp eq %union.tree_node* %5, null
  br i1 %tobool1679, label %for.end, label %for.body

for.body:                                         ; preds = %if.then14, %for.inc
  %elts.081 = phi %union.tree_node* [ %10, %for.inc ], [ %5, %if.then14 ]
  %maxindex.080 = phi %union.tree_node* [ %maxindex.1, %for.inc ], [ %call15, %if.then14 ]
  %purpose = getelementptr inbounds %union.tree_node* %elts.081, i64 0, i32 0, i32 1
  %6 = load i8** %purpose, align 8
  %tobool17 = icmp eq i8* %6, null
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %for.body
  %7 = bitcast i8* %6 to %union.tree_node*
  br label %for.inc

if.else21:                                        ; preds = %for.body
  %8 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !1
  %call22 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %8, %union.tree_node* %maxindex.080, %union.tree_node* %9) #5
  %call23 = tail call %union.tree_node* @fold(%union.tree_node* %call22) #5
  br label %for.inc

for.inc:                                          ; preds = %if.then18, %if.else21
  %maxindex.1 = phi %union.tree_node* [ %7, %if.then18 ], [ %call23, %if.else21 ]
  %chain = getelementptr inbounds %union.tree_node* %elts.081, i64 0, i32 0, i32 0, i32 0
  %10 = load %union.tree_node** %chain, align 8, !tbaa !29
  %tobool16 = icmp eq %union.tree_node* %10, null
  br i1 %tobool16, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.then14
  %maxindex.0.lcssa = phi %union.tree_node* [ %call15, %if.then14 ], [ %maxindex.1, %for.inc ]
  %call25 = tail call %union.tree_node* @copy_node(%union.tree_node* %maxindex.0.lcssa) #5
  br label %if.end34

if.else26:                                        ; preds = %if.then
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %not.cmp27 = icmp ne %union.tree_node* %11, %initial_value
  %. = zext i1 %not.cmp27 to i32
  %call31 = tail call %union.tree_node* @build_int_2_wide(i64 0, i64 0) #5
  br label %if.end34

if.end34:                                         ; preds = %if.then1, %if.else26, %for.end
  %value.1 = phi i32 [ 0, %if.then1 ], [ 0, %for.end ], [ %., %if.else26 ]
  %maxindex.2 = phi %union.tree_node* [ %call7, %if.then1 ], [ %call25, %for.end ], [ %call31, %if.else26 ]
  %tobool35 = icmp eq %union.tree_node* %maxindex.2, null
  br i1 %tobool35, label %if.then36, label %if.then43

if.then36:                                        ; preds = %entry, %if.end34
  %tobool37 = icmp eq i32 %do_default, 0
  br i1 %tobool37, label %if.end55, label %if.end41

if.end41:                                         ; preds = %if.then36
  %call39 = tail call %union.tree_node* @build_int_2_wide(i64 0, i64 0) #5
  %tobool42 = icmp eq %union.tree_node* %call39, null
  br i1 %tobool42, label %if.end55, label %if.then43

if.then43:                                        ; preds = %if.end34, %if.end41
  %maxindex.478 = phi %union.tree_node* [ %call39, %if.end41 ], [ %maxindex.2, %if.end34 ]
  %value.277 = phi i32 [ 2, %if.end41 ], [ %value.1, %if.end34 ]
  %call44 = tail call %union.tree_node* @build_index_type(%union.tree_node* %maxindex.478) #5
  %values = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 1
  %call44.c = bitcast %union.tree_node* %call44 to i8*
  store i8* %call44.c, i8** %values, align 8, !tbaa !24
  %type47 = getelementptr inbounds %union.tree_node* %maxindex.478, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type47, align 8, !tbaa !23
  %tobool48 = icmp eq %union.tree_node* %12, null
  br i1 %tobool48, label %if.then49, label %if.end55

if.then49:                                        ; preds = %if.then43
  store %union.tree_node* %call44, %union.tree_node** %type47, align 8, !tbaa !23
  br label %if.end55

if.end55:                                         ; preds = %if.then36, %if.then43, %if.end41, %if.then49
  %value.274 = phi i32 [ %value.277, %if.then43 ], [ 2, %if.end41 ], [ %value.277, %if.then49 ], [ 2, %if.then36 ]
  tail call void @layout_type(%union.tree_node* %type) #5
  ret i32 %value.274
}

declare void @layout_decl(%union.tree_node*, i32) #1

; Function Attrs: nounwind readonly uwtable
define i32 @global_bindings_p() #4 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %1 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp = icmp eq %struct.binding_level* %0, %1
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define void @keep_next_level() #0 {
entry:
  store i1 true, i1* @keep_next_level_flag, align 1
  ret void
}

; Function Attrs: nounwind readonly uwtable
define i32 @kept_level_p() #4 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %keep_if_subblocks = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 10
  %1 = load i8* %keep_if_subblocks, align 1, !tbaa !30
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %blocks = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 3
  %2 = load %union.tree_node** %blocks, align 8, !tbaa !32
  %cmp = icmp eq %union.tree_node* %2, null
  br i1 %cmp, label %lor.lhs.false, label %lor.end

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %keep = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 9
  %3 = load i8* %keep, align 1, !tbaa !33
  %tobool3 = icmp eq i8 %3, 0
  br i1 %tobool3, label %lor.lhs.false4, label %lor.end

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %names = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 0
  %4 = load %union.tree_node** %names, align 8, !tbaa !34
  %cmp5 = icmp eq %union.tree_node* %4, null
  br i1 %cmp5, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %lor.lhs.false4
  %tags = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 1
  %5 = load %union.tree_node** %tags, align 8, !tbaa !35
  %cmp7 = icmp eq %union.tree_node* %5, null
  br i1 %cmp7, label %lor.end, label %land.rhs

land.rhs:                                         ; preds = %lor.rhs
  %tag_transparent = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 7
  %6 = load i8* %tag_transparent, align 1, !tbaa !36
  %lnot = icmp eq i8 %6, 0
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %lor.rhs, %lor.lhs.false4, %lor.lhs.false, %land.rhs
  %7 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false ], [ true, %land.lhs.true ], [ false, %lor.rhs ], [ %lnot, %land.rhs ]
  %lor.ext = zext i1 %7 to i32
  ret i32 %lor.ext
}

; Function Attrs: nounwind uwtable
define void @declare_parm_level(i32 %definition_flag) #0 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %parm_flag = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 6
  store i8 1, i8* %parm_flag, align 1, !tbaa !37
  ret void
}

; Function Attrs: nounwind readonly uwtable
define i32 @in_parm_level_p() #4 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %parm_flag = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 6
  %1 = load i8* %parm_flag, align 1, !tbaa !37
  %conv = sext i8 %1 to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define void @pushlevel(i32 %tag_transparent) #0 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %1 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp = icmp eq %struct.binding_level* %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  %tobool = icmp eq %struct.binding_level* %2, null
  br i1 %tobool, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.end
  %level_chain = getelementptr inbounds %struct.binding_level* %2, i64 0, i32 5
  %3 = load %struct.binding_level** %level_chain, align 8, !tbaa !38
  store %struct.binding_level* %3, %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  br label %if.end2

if.else:                                          ; preds = %if.end
  %call.i = tail call noalias i8* @xmalloc(i64 72) #5
  %4 = bitcast i8* %call.i to %struct.binding_level*
  br label %if.end2

if.end2:                                          ; preds = %if.else, %if.then1
  %newlevel.0 = phi %struct.binding_level* [ %2, %if.then1 ], [ %4, %if.else ]
  %5 = bitcast %struct.binding_level* %newlevel.0 to i8*
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 72, i32 8, i1 false)
  %tobool3 = icmp eq i32 %tag_transparent, 0
  %6 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  br i1 %tobool3, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.end2
  %tobool4 = icmp eq %struct.binding_level* %6, null
  br i1 %tobool4, label %lor.end, label %cond.true

cond.true:                                        ; preds = %lor.rhs
  %subblocks_tag_transparent = getelementptr inbounds %struct.binding_level* %6, i64 0, i32 8
  %7 = load i8* %subblocks_tag_transparent, align 1, !tbaa !39
  %phitmp = icmp ne i8 %7, 0
  br label %lor.end

lor.end:                                          ; preds = %if.end2, %cond.true, %lor.rhs
  %8 = phi %struct.binding_level* [ %6, %cond.true ], [ null, %lor.rhs ], [ %6, %if.end2 ]
  %9 = phi i1 [ %phitmp, %cond.true ], [ false, %lor.rhs ], [ true, %if.end2 ]
  %conv6 = zext i1 %9 to i8
  %tag_transparent7 = getelementptr inbounds %struct.binding_level* %newlevel.0, i64 0, i32 7
  store i8 %conv6, i8* %tag_transparent7, align 1, !tbaa !36
  %level_chain8 = getelementptr inbounds %struct.binding_level* %newlevel.0, i64 0, i32 5
  store %struct.binding_level* %8, %struct.binding_level** %level_chain8, align 8, !tbaa !38
  store %struct.binding_level* %newlevel.0, %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %.b = load i1* @keep_next_level_flag, align 1
  %conv9 = zext i1 %.b to i8
  %keep = getelementptr inbounds %struct.binding_level* %newlevel.0, i64 0, i32 9
  store i8 %conv9, i8* %keep, align 1, !tbaa !33
  store i1 false, i1* @keep_next_level_flag, align 1
  %.b16 = load i1* @keep_next_if_subblocks, align 1
  %conv10 = zext i1 %.b16 to i8
  %keep_if_subblocks = getelementptr inbounds %struct.binding_level* %newlevel.0, i64 0, i32 10
  store i8 %conv10, i8* %keep_if_subblocks, align 1, !tbaa !30
  store i1 false, i1* @keep_next_if_subblocks, align 1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define %union.tree_node* @poplevel(i32 %keep, i32 %reverse, i32 %functionbody) #0 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tags1 = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 1
  %1 = load %union.tree_node** %tags1, align 8, !tbaa !35
  %blocks = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 3
  %2 = load %union.tree_node** %blocks, align 8, !tbaa !32
  %keep2 = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 9
  %3 = load i8* %keep2, align 1, !tbaa !33
  %conv = sext i8 %3 to i32
  %tobool = icmp eq i32 %reverse, 0
  %names = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 0
  %4 = load %union.tree_node** %names, align 8, !tbaa !34
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @nreverse(%union.tree_node* %4) #5
  %5 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names3 = getelementptr inbounds %struct.binding_level* %5, i64 0, i32 0
  store %union.tree_node* %call, %union.tree_node** %names3, align 8, !tbaa !34
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %decls.0 = phi %union.tree_node* [ %call, %if.then ], [ %4, %entry ]
  %tobool5337 = icmp eq %union.tree_node* %decls.0, null
  br i1 %tobool5337, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %decl.0338 = phi %union.tree_node* [ %10, %for.inc ], [ %decls.0, %if.end ]
  %code = getelementptr inbounds %union.tree_node* %decl.0338, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %6 = and i32 %bf.load, 16639
  %7 = icmp eq i32 %6, 30
  br i1 %7, label %land.lhs.true11, label %for.inc

land.lhs.true11:                                  ; preds = %for.body
  %initial = getelementptr inbounds %union.tree_node* %decl.0338, i64 0, i32 0, i32 12
  %8 = load %union.tree_node** %initial, align 8, !tbaa !40
  %cmp13 = icmp eq %union.tree_node* %8, null
  %bf.clear19 = and i32 %bf.load, 1024
  %tobool20 = icmp eq i32 %bf.clear19, 0
  %or.cond306 = or i1 %cmp13, %tobool20
  br i1 %or.cond306, label %for.inc, label %if.then21

if.then21:                                        ; preds = %land.lhs.true11
  %abstract_origin = getelementptr inbounds %union.tree_node* %decl.0338, i64 0, i32 0, i32 13
  %9 = load %union.tree_node** %abstract_origin, align 8, !tbaa !42
  %cmp23 = icmp eq %union.tree_node* %9, null
  %cmp28 = icmp eq %union.tree_node* %9, %decl.0338
  %or.cond307 = or i1 %cmp23, %cmp28
  br i1 %or.cond307, label %for.inc, label %if.then30

if.then30:                                        ; preds = %if.then21
  %addressable_flag34 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 2
  %bf.load35 = load i32* %addressable_flag34, align 8
  %bf.set = or i32 %bf.load35, 1024
  store i32 %bf.set, i32* %addressable_flag34, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.then21, %land.lhs.true11, %for.body, %if.then30
  %chain = getelementptr inbounds %union.tree_node* %decl.0338, i64 0, i32 0, i32 0, i32 0
  %10 = load %union.tree_node** %chain, align 8, !tbaa !29
  %tobool5 = icmp eq %union.tree_node* %10, null
  br i1 %tobool5, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end
  %11 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names.i = getelementptr inbounds %struct.binding_level* %11, i64 0, i32 0
  %12 = load %union.tree_node** %names.i, align 8, !tbaa !34
  tail call void @warn_about_unused_variables(%union.tree_node* %12) #5
  %13 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %this_block = getelementptr inbounds %struct.binding_level* %13, i64 0, i32 4
  %14 = load %union.tree_node** %this_block, align 8, !tbaa !43
  %cmp41 = icmp ne %union.tree_node* %14, null
  br i1 %cmp41, label %if.then61, label %if.else46

if.else46:                                        ; preds = %for.end
  %or = or i32 %functionbody, %keep
  %15 = or i32 %or, %conv
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %lor.lhs.false49, label %if.end58

lor.lhs.false49:                                  ; preds = %if.else46
  %keep_if_subblocks = getelementptr inbounds %struct.binding_level* %13, i64 0, i32 10
  %17 = load i8* %keep_if_subblocks, align 1, !tbaa !30
  %tobool51 = icmp ne i8 %17, 0
  %cmp53 = icmp ne %union.tree_node* %2, null
  %or.cond236 = and i1 %tobool51, %cmp53
  br i1 %or.cond236, label %if.end58, label %for.cond66.preheader

if.end58:                                         ; preds = %lor.lhs.false49, %if.else46
  %call56 = tail call %union.tree_node* @make_node(i32 4) #5
  %cmp59 = icmp eq %union.tree_node* %call56, null
  br i1 %cmp59, label %for.cond66.preheader, label %if.then61

if.then61:                                        ; preds = %if.end58, %for.end
  %block.0310 = phi %union.tree_node* [ %call56, %if.end58 ], [ %14, %for.end ]
  %vars = getelementptr inbounds %union.tree_node* %block.0310, i64 0, i32 0, i32 2
  %18 = bitcast i32* %vars to %union.tree_node**
  store %union.tree_node* %decls.0, %union.tree_node** %18, align 8, !tbaa !44
  %19 = getelementptr inbounds %union.tree_node* %block.0310, i64 0, i32 0, i32 4
  store %union.tree_node* %2, %union.tree_node** %19, align 8, !tbaa !46
  br label %for.cond66.preheader

for.cond66.preheader:                             ; preds = %if.then61, %lor.lhs.false49, %if.end58
  %cmp59313.ph = phi i1 [ false, %if.end58 ], [ false, %lor.lhs.false49 ], [ true, %if.then61 ]
  %block.0309.ph = phi %union.tree_node* [ null, %if.end58 ], [ null, %lor.lhs.false49 ], [ %block.0310, %if.then61 ]
  %tobool67335 = icmp eq %union.tree_node* %2, null
  br i1 %tobool67335, label %for.cond74.preheader, label %for.body68

for.cond74.preheader:                             ; preds = %for.body68, %for.cond66.preheader
  br i1 %tobool5337, label %for.end126, label %for.body76

for.body68:                                       ; preds = %for.cond66.preheader, %for.body68
  %link.0336 = phi %union.tree_node* [ %21, %for.body68 ], [ %2, %for.cond66.preheader ]
  %supercontext = getelementptr inbounds %union.tree_node* %link.0336, i64 0, i32 0, i32 5
  %20 = bitcast i48* %supercontext to %union.tree_node**
  store %union.tree_node* %block.0309.ph, %union.tree_node** %20, align 8, !tbaa !47
  %chain72 = getelementptr inbounds %union.tree_node* %link.0336, i64 0, i32 0, i32 0, i32 0
  %21 = load %union.tree_node** %chain72, align 8, !tbaa !29
  %tobool67 = icmp eq %union.tree_node* %21, null
  br i1 %tobool67, label %for.cond74.preheader, label %for.body68

for.body76:                                       ; preds = %for.cond74.preheader, %for.inc123
  %link.1332 = phi %union.tree_node* [ %29, %for.inc123 ], [ %decls.0, %for.cond74.preheader ]
  %name = getelementptr inbounds %union.tree_node* %link.1332, i64 0, i32 0, i32 8
  %22 = load %union.tree_node** %name, align 8, !tbaa !48
  %cmp78 = icmp eq %union.tree_node* %22, null
  br i1 %cmp78, label %for.inc123, label %if.then80

if.then80:                                        ; preds = %for.body76
  %external_flag = getelementptr inbounds %union.tree_node* %link.1332, i64 0, i32 0, i32 5
  %23 = bitcast i48* %external_flag to i64*
  %bf.load82 = load i64* %23, align 8
  %bf.cast = and i64 %bf.load82, 256
  %tobool85 = icmp eq i64 %bf.cast, 0
  br i1 %tobool85, label %if.end119, label %if.then86

if.then86:                                        ; preds = %if.then80
  %used_flag = getelementptr inbounds %union.tree_node* %link.1332, i64 0, i32 0, i32 0, i32 2
  %bf.load88 = load i32* %used_flag, align 8
  %bf.clear90 = and i32 %bf.load88, 65536
  %tobool91 = icmp eq i32 %bf.clear90, 0
  br i1 %tobool91, label %if.end100, label %if.then92

if.then92:                                        ; preds = %if.then86
  %used_flag96 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 0, i32 2
  %bf.load97 = load i32* %used_flag96, align 8
  %bf.set99 = or i32 %bf.load97, 65536
  store i32 %bf.set99, i32* %used_flag96, align 8
  %bf.load103.pre = load i32* %used_flag, align 8
  br label %if.end100

if.end100:                                        ; preds = %if.then86, %if.then92
  %bf.load103 = phi i32 [ %bf.load88, %if.then86 ], [ %bf.load103.pre, %if.then92 ]
  %bf.clear105 = and i32 %bf.load103, 1024
  %tobool106 = icmp eq i32 %bf.clear105, 0
  br i1 %tobool106, label %if.end119, label %if.then107

if.then107:                                       ; preds = %if.end100
  %assembler_name = getelementptr inbounds %union.tree_node* %link.1332, i64 0, i32 0, i32 14
  %24 = load %union.tree_node** %assembler_name, align 8, !tbaa !49
  %cmp109 = icmp eq %union.tree_node* %24, null
  br i1 %cmp109, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then107
  %25 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  tail call void %25(%union.tree_node* %link.1332) #5
  %.pre = load %union.tree_node** %assembler_name, align 8, !tbaa !49
  br label %cond.end

cond.end:                                         ; preds = %if.then107, %cond.false
  %26 = phi %union.tree_node* [ %24, %if.then107 ], [ %.pre, %cond.false ]
  %addressable_flag114 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 0, i32 2
  %bf.load115 = load i32* %addressable_flag114, align 8
  %bf.set117 = or i32 %bf.load115, 1024
  store i32 %bf.set117, i32* %addressable_flag114, align 8
  br label %if.end119

if.end119:                                        ; preds = %if.end100, %if.then80, %cond.end
  %27 = load %union.tree_node** %name, align 8, !tbaa !48
  %28 = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 7
  store %union.tree_node* null, %union.tree_node** %28, align 8, !tbaa !15
  br label %for.inc123

for.inc123:                                       ; preds = %for.body76, %if.end119
  %chain125 = getelementptr inbounds %union.tree_node* %link.1332, i64 0, i32 0, i32 0, i32 0
  %29 = load %union.tree_node** %chain125, align 8, !tbaa !29
  %tobool75 = icmp eq %union.tree_node* %29, null
  br i1 %tobool75, label %for.end126, label %for.body76

for.end126:                                       ; preds = %for.inc123, %for.cond74.preheader
  %30 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %shadowed = getelementptr inbounds %struct.binding_level* %30, i64 0, i32 2
  %link.2328 = load %union.tree_node** %shadowed, align 8
  %tobool128329 = icmp eq %union.tree_node* %link.2328, null
  br i1 %tobool128329, label %for.end135, label %for.body129

for.body129:                                      ; preds = %for.end126, %for.body129
  %link.2330 = phi %union.tree_node* [ %link.2, %for.body129 ], [ %link.2328, %for.end126 ]
  %value = getelementptr inbounds %union.tree_node* %link.2330, i64 0, i32 0, i32 2
  %31 = bitcast i32* %value to %union.tree_node**
  %32 = load %union.tree_node** %31, align 8, !tbaa !50
  %purpose = getelementptr inbounds %union.tree_node* %link.2330, i64 0, i32 0, i32 1
  %33 = load i8** %purpose, align 8
  %local_value131 = getelementptr inbounds i8* %33, i64 64
  %34 = bitcast i8* %local_value131 to %union.tree_node**
  store %union.tree_node* %32, %union.tree_node** %34, align 8, !tbaa !15
  %chain134 = getelementptr inbounds %union.tree_node* %link.2330, i64 0, i32 0, i32 0, i32 0
  %link.2 = load %union.tree_node** %chain134, align 8
  %tobool128 = icmp eq %union.tree_node* %link.2, null
  br i1 %tobool128, label %for.end135, label %for.body129

for.end135:                                       ; preds = %for.body129, %for.end126
  %tobool136 = icmp ne i32 %functionbody, 0
  br i1 %tobool136, label %if.then137, label %if.else183

if.then137:                                       ; preds = %for.end135
  tail call fastcc void @clear_limbo_values(%union.tree_node* %block.0309.ph)
  %vars139 = getelementptr inbounds %union.tree_node* %block.0309.ph, i64 0, i32 0, i32 2
  %35 = bitcast i32* %vars139 to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %35, align 8, !tbaa !44
  %link.3325 = load %union.tree_node** @named_labels, align 8
  %tobool141326 = icmp eq %union.tree_node* %link.3325, null
  br i1 %tobool141326, label %if.end200.thread, label %for.body142

for.body142:                                      ; preds = %if.then137, %if.end164
  %link.3327 = phi %union.tree_node* [ %link.3, %if.end164 ], [ %link.3325, %if.then137 ]
  %value144 = getelementptr inbounds %union.tree_node* %link.3327, i64 0, i32 0, i32 2
  %36 = bitcast i32* %value144 to %union.tree_node**
  %37 = load %union.tree_node** %36, align 8, !tbaa !50
  %initial146 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 12
  %38 = load %union.tree_node** %initial146, align 8, !tbaa !40
  %cmp147 = icmp eq %union.tree_node* %38, null
  br i1 %cmp147, label %if.then149, label %if.else153

if.then149:                                       ; preds = %for.body142
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %37, i8* getelementptr inbounds ([32 x i8]* @.str134, i64 0, i64 0)) #5
  %39 = load i8** @input_filename, align 8, !tbaa !1
  %40 = load i32* @lineno, align 4, !tbaa !5
  %name151 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 8
  %41 = load %union.tree_node** %name151, align 8, !tbaa !48
  %call152 = tail call %union.tree_node* @define_label(i8* %39, i32 %40, %union.tree_node* %41)
  br label %if.end164

if.else153:                                       ; preds = %for.body142
  %42 = load i32* @warn_unused_label, align 4, !tbaa !5
  %tobool154 = icmp eq i32 %42, 0
  br i1 %tobool154, label %if.end164, label %land.lhs.true155

land.lhs.true155:                                 ; preds = %if.else153
  %used_flag157 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 2
  %bf.load158 = load i32* %used_flag157, align 8
  %bf.clear160 = and i32 %bf.load158, 65536
  %tobool161 = icmp eq i32 %bf.clear160, 0
  br i1 %tobool161, label %if.then162, label %if.end164

if.then162:                                       ; preds = %land.lhs.true155
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %37, i8* getelementptr inbounds ([32 x i8]* @.str135, i64 0, i64 0)) #5
  br label %if.end164

if.end164:                                        ; preds = %land.lhs.true155, %if.else153, %if.then162, %if.then149
  %name166 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 8
  %43 = load %union.tree_node** %name166, align 8, !tbaa !48
  %44 = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 8
  store %union.tree_node* null, %union.tree_node** %44, align 8, !tbaa !16
  %45 = load %union.tree_node** %35, align 8, !tbaa !44
  %chain170 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %45, %union.tree_node** %chain170, align 8, !tbaa !29
  store %union.tree_node* %37, %union.tree_node** %35, align 8, !tbaa !44
  %chain175 = getelementptr inbounds %union.tree_node* %link.3327, i64 0, i32 0, i32 0, i32 0
  %link.3 = load %union.tree_node** %chain175, align 8
  %tobool141 = icmp eq %union.tree_node* %link.3, null
  br i1 %tobool141, label %if.end200.thread, label %for.body142

if.end200.thread:                                 ; preds = %if.end164, %if.then137
  %46 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %level_chain = getelementptr inbounds %struct.binding_level* %46, i64 0, i32 5
  %47 = load %struct.binding_level** %level_chain, align 8, !tbaa !38
  store %struct.binding_level* %47, %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %48 = load %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  store %struct.binding_level* %48, %struct.binding_level** %level_chain, align 8, !tbaa !38
  store %struct.binding_level* %46, %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  %49 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %initial182 = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 12
  store %union.tree_node* %block.0309.ph, %union.tree_node** %initial182, align 8, !tbaa !40
  br label %for.cond203.preheader

if.else183:                                       ; preds = %for.end135
  %50 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %level_chain.c = getelementptr inbounds %struct.binding_level* %50, i64 0, i32 5
  %51 = load %struct.binding_level** %level_chain.c, align 8, !tbaa !38
  store %struct.binding_level* %51, %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %52 = load %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  store %struct.binding_level* %52, %struct.binding_level** %level_chain.c, align 8, !tbaa !38
  store %struct.binding_level* %50, %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  br i1 %cmp59313.ph, label %if.then185, label %if.else192

if.then185:                                       ; preds = %if.else183
  br i1 %cmp41, label %for.cond215.preheader, label %if.then187

if.then187:                                       ; preds = %if.then185
  %53 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %blocks188 = getelementptr inbounds %struct.binding_level* %53, i64 0, i32 3
  %54 = load %union.tree_node** %blocks188, align 8, !tbaa !32
  %call189 = tail call %union.tree_node* @chainon(%union.tree_node* %54, %union.tree_node* %block.0309.ph) #5
  %55 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %blocks190 = getelementptr inbounds %struct.binding_level* %55, i64 0, i32 3
  store %union.tree_node* %call189, %union.tree_node** %blocks190, align 8, !tbaa !32
  br label %if.end200

if.else192:                                       ; preds = %if.else183
  br i1 %tobool67335, label %if.end200, label %if.then194

if.then194:                                       ; preds = %if.else192
  %56 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %blocks195 = getelementptr inbounds %struct.binding_level* %56, i64 0, i32 3
  %57 = load %union.tree_node** %blocks195, align 8, !tbaa !32
  %call196 = tail call %union.tree_node* @chainon(%union.tree_node* %57, %union.tree_node* %2) #5
  %58 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %blocks197 = getelementptr inbounds %struct.binding_level* %58, i64 0, i32 3
  store %union.tree_node* %call196, %union.tree_node** %blocks197, align 8, !tbaa !32
  br label %if.end200

if.end200:                                        ; preds = %if.else192, %if.then187, %if.then194
  br i1 %tobool136, label %for.cond203.preheader, label %if.else212

for.cond203.preheader:                            ; preds = %if.end200, %if.end200.thread
  %tobool204321 = icmp eq %union.tree_node* %1, null
  br i1 %tobool204321, label %if.end227, label %for.body205

for.body205:                                      ; preds = %for.cond203.preheader, %for.body205
  %link.4322 = phi %union.tree_node* [ %62, %for.body205 ], [ %1, %for.cond203.preheader ]
  %59 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %value207 = getelementptr inbounds %union.tree_node* %link.4322, i64 0, i32 0, i32 2
  %60 = bitcast i32* %value207 to %union.tree_node**
  %61 = load %union.tree_node** %60, align 8, !tbaa !50
  %context = getelementptr inbounds %union.tree_node* %61, i64 0, i32 0, i32 17
  %.c = bitcast %union.tree_node* %59 to %struct.rtx_def*
  store %struct.rtx_def* %.c, %struct.rtx_def** %context, align 8, !tbaa !52
  %chain210 = getelementptr inbounds %union.tree_node* %link.4322, i64 0, i32 0, i32 0, i32 0
  %62 = load %union.tree_node** %chain210, align 8, !tbaa !29
  %tobool204 = icmp eq %union.tree_node* %62, null
  br i1 %tobool204, label %if.end227, label %for.body205

if.else212:                                       ; preds = %if.end200
  br i1 %cmp59313.ph, label %for.cond215.preheader, label %if.end235

for.cond215.preheader:                            ; preds = %if.then185, %if.else212
  %tobool216323 = icmp eq %union.tree_node* %1, null
  br i1 %tobool216323, label %if.then229, label %for.body217.lr.ph

for.body217.lr.ph:                                ; preds = %for.cond215.preheader
  %block.0.c = bitcast %union.tree_node* %block.0309.ph to %struct.rtx_def*
  br label %for.body217

for.body217:                                      ; preds = %for.body217.lr.ph, %for.body217
  %link.5324 = phi %union.tree_node* [ %1, %for.body217.lr.ph ], [ %65, %for.body217 ]
  %value219 = getelementptr inbounds %union.tree_node* %link.5324, i64 0, i32 0, i32 2
  %63 = bitcast i32* %value219 to %union.tree_node**
  %64 = load %union.tree_node** %63, align 8, !tbaa !50
  %context221 = getelementptr inbounds %union.tree_node* %64, i64 0, i32 0, i32 17
  store %struct.rtx_def* %block.0.c, %struct.rtx_def** %context221, align 8, !tbaa !52
  %chain224 = getelementptr inbounds %union.tree_node* %link.5324, i64 0, i32 0, i32 0, i32 0
  %65 = load %union.tree_node** %chain224, align 8, !tbaa !29
  %tobool216 = icmp eq %union.tree_node* %65, null
  br i1 %tobool216, label %if.end227, label %for.body217

if.end227:                                        ; preds = %for.body217, %for.body205, %for.cond203.preheader
  br i1 %cmp59313.ph, label %if.then229, label %if.end235

if.then229:                                       ; preds = %for.cond215.preheader, %if.end227
  %used_flag231 = getelementptr inbounds %union.tree_node* %block.0309.ph, i64 0, i32 0, i32 0, i32 2
  %bf.load232 = load i32* %used_flag231, align 8
  %bf.set234 = or i32 %bf.load232, 65536
  store i32 %bf.set234, i32* %used_flag231, align 8
  br label %if.end235

if.end235:                                        ; preds = %if.else212, %if.then229, %if.end227
  ret %union.tree_node* %block.0309.ph
}

declare %union.tree_node* @nreverse(%union.tree_node*) #1

declare void @warn_about_unused_variables(%union.tree_node*) #1

; Function Attrs: nounwind readonly uwtable
define %union.tree_node* @getdecls() #4 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 0
  %1 = load %union.tree_node** %names, align 8, !tbaa !34
  ret %union.tree_node* %1
}

declare %union.tree_node* @make_node(i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_limbo_values(%union.tree_node* nocapture readonly %block) #0 {
entry:
  %vars = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 2
  %0 = bitcast i32* %vars to %union.tree_node**
  %tem.022 = load %union.tree_node** %0, align 8
  %tobool23 = icmp eq %union.tree_node* %tem.022, null
  br i1 %tobool23, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %tem.024 = phi %union.tree_node* [ %tem.0, %for.inc ], [ %tem.022, %entry ]
  %name = getelementptr inbounds %union.tree_node* %tem.024, i64 0, i32 0, i32 8
  %1 = load %union.tree_node** %name, align 8, !tbaa !48
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %2 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 11
  store %union.tree_node* null, %union.tree_node** %2, align 8, !tbaa !19
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %chain = getelementptr inbounds %union.tree_node* %tem.024, i64 0, i32 0, i32 0, i32 0
  %tem.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %tem.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %3 = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 4
  %tem.119 = load %union.tree_node** %3, align 8
  %tobool620 = icmp eq %union.tree_node* %tem.119, null
  br i1 %tobool620, label %for.end11, label %for.body7

for.body7:                                        ; preds = %for.end, %for.body7
  %tem.121 = phi %union.tree_node* [ %tem.1, %for.body7 ], [ %tem.119, %for.end ]
  tail call fastcc void @clear_limbo_values(%union.tree_node* %tem.121)
  %chain10 = getelementptr inbounds %union.tree_node* %tem.121, i64 0, i32 0, i32 0, i32 0
  %tem.1 = load %union.tree_node** %chain10, align 8
  %tobool6 = icmp eq %union.tree_node* %tem.1, null
  br i1 %tobool6, label %for.end11, label %for.body7

for.end11:                                        ; preds = %for.body7, %for.end
  ret void
}

declare void @error_with_decl(%union.tree_node*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @define_label(i8* %filename, i32 %line, %union.tree_node* %name) #0 {
entry:
  %call = tail call %union.tree_node* @lookup_label(%union.tree_node* %name)
  %cmp = icmp eq %union.tree_node* %call, null
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %context = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 9
  %0 = load %union.tree_node** %context, align 8, !tbaa !53
  %1 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp2 = icmp eq %union.tree_node* %0, %1
  br i1 %cmp2, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %2 = load %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  %call3 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call, %union.tree_node* %2) #5
  store %union.tree_node* %call3, %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  %3 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 8
  store %union.tree_node* null, %union.tree_node** %3, align 8, !tbaa !16
  %call4 = tail call %union.tree_node* @lookup_label(%union.tree_node* %name)
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %decl.0 = phi %union.tree_node* [ %call4, %if.then ], [ %call, %land.lhs.true ], [ null, %entry ]
  %4 = load i32* @warn_traditional, align 4, !tbaa !5
  %tobool = icmp eq i32 %4, 0
  %5 = load i32* @in_system_header, align 4
  %tobool6 = icmp ne i32 %5, 0
  %or.cond = or i1 %tobool, %tobool6
  br i1 %or.cond, label %if.end11, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %if.end
  %6 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %7 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.binding_level* %6, %7
  br i1 %cmp.i, label %lookup_name.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %land.lhs.true7
  %8 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 7
  %9 = load %union.tree_node** %8, align 8, !tbaa !15
  %tobool.i = icmp eq %union.tree_node* %9, null
  br i1 %tobool.i, label %lookup_name.exit, label %if.then10

lookup_name.exit:                                 ; preds = %land.lhs.true7, %land.lhs.true.i
  %global_value.i = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 6
  %10 = bitcast %union.anon* %global_value.i to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !8
  %tobool9 = icmp eq %union.tree_node* %11, null
  br i1 %tobool9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %land.lhs.true.i, %lookup_name.exit
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds i8** %id, i64 1
  %13 = load i8** %12, align 8, !tbaa !21
  tail call void (i8*, i32, i8*, ...)* @warning_with_file_and_line(i8* %filename, i32 %line, i8* getelementptr inbounds ([79 x i8]* @.str153, i64 0, i64 0), i8* %13) #5
  br label %if.end11

if.end11:                                         ; preds = %lookup_name.exit, %if.end, %if.then10
  %initial = getelementptr inbounds %union.tree_node* %decl.0, i64 0, i32 0, i32 12
  %14 = load %union.tree_node** %initial, align 8, !tbaa !40
  %cmp13 = icmp eq %union.tree_node* %14, null
  br i1 %cmp13, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end11
  %id16 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds i8** %id16, i64 1
  %16 = load i8** %15, align 8, !tbaa !21
  tail call void (i8*, i32, i8*, ...)* @error_with_file_and_line(i8* %filename, i32 %line, i8* getelementptr inbounds ([21 x i8]* @.str154, i64 0, i64 0), i8* %16) #5
  br label %return

if.else:                                          ; preds = %if.end11
  %17 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %17, %union.tree_node** %initial, align 8, !tbaa !40
  %filename21 = getelementptr inbounds %union.tree_node* %decl.0, i64 0, i32 0, i32 1
  store i8* %filename, i8** %filename21, align 8, !tbaa !54
  %linenum = getelementptr inbounds %union.tree_node* %decl.0, i64 0, i32 0, i32 2
  store i32 %line, i32* %linenum, align 4, !tbaa !55
  br label %return

return:                                           ; preds = %if.else, %if.then14
  %retval.0 = phi %union.tree_node* [ null, %if.then14 ], [ %decl.0, %if.else ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @insert_block(%union.tree_node* %block) #0 {
entry:
  %used_flag = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %used_flag, align 8
  %bf.set = or i32 %bf.load, 65536
  store i32 %bf.set, i32* %used_flag, align 8
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %blocks = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 3
  %1 = load %union.tree_node** %blocks, align 8, !tbaa !32
  %call = tail call %union.tree_node* @chainon(%union.tree_node* %1, %union.tree_node* %block) #5
  %2 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %blocks1 = getelementptr inbounds %struct.binding_level* %2, i64 0, i32 3
  store %union.tree_node* %call, %union.tree_node** %blocks1, align 8, !tbaa !32
  ret void
}

; Function Attrs: nounwind uwtable
define void @set_block(%union.tree_node* %block) #0 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %this_block = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 4
  store %union.tree_node* %block, %union.tree_node** %this_block, align 8, !tbaa !43
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names = getelementptr inbounds %struct.binding_level* %1, i64 0, i32 0
  %2 = load %union.tree_node** %names, align 8, !tbaa !34
  %vars = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 2
  %3 = bitcast i32* %vars to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !44
  %call = tail call %union.tree_node* @chainon(%union.tree_node* %2, %union.tree_node* %4) #5
  %5 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names2 = getelementptr inbounds %struct.binding_level* %5, i64 0, i32 0
  store %union.tree_node* %call, %union.tree_node** %names2, align 8, !tbaa !34
  %6 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %blocks = getelementptr inbounds %struct.binding_level* %6, i64 0, i32 3
  %7 = load %union.tree_node** %blocks, align 8, !tbaa !32
  %8 = getelementptr inbounds %union.tree_node* %block, i64 0, i32 0, i32 4
  %9 = load %union.tree_node** %8, align 8, !tbaa !46
  %call4 = tail call %union.tree_node* @chainon(%union.tree_node* %7, %union.tree_node* %9) #5
  %10 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %blocks5 = getelementptr inbounds %struct.binding_level* %10, i64 0, i32 3
  store %union.tree_node* %call4, %union.tree_node** %blocks5, align 8, !tbaa !32
  ret void
}

; Function Attrs: nounwind uwtable
define void @push_label_level() #0 {
entry:
  %0 = load %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  %tobool = icmp eq %struct.binding_level* %0, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %level_chain = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 5
  %1 = load %struct.binding_level** %level_chain, align 8, !tbaa !38
  store %struct.binding_level* %1, %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %entry
  %call.i = tail call noalias i8* @xmalloc(i64 72) #5
  %2 = bitcast i8* %call.i to %struct.binding_level*
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %newlevel.0 = phi %struct.binding_level* [ %0, %if.then ], [ %2, %if.else ]
  %3 = load %struct.binding_level** @label_level_chain, align 8, !tbaa !1
  %level_chain1 = getelementptr inbounds %struct.binding_level* %newlevel.0, i64 0, i32 5
  store %struct.binding_level* %3, %struct.binding_level** %level_chain1, align 8, !tbaa !38
  store %struct.binding_level* %newlevel.0, %struct.binding_level** @label_level_chain, align 8, !tbaa !1
  %4 = load %union.tree_node** @named_labels, align 8, !tbaa !1
  %names = getelementptr inbounds %struct.binding_level* %newlevel.0, i64 0, i32 0
  store %union.tree_node* %4, %union.tree_node** %names, align 8, !tbaa !34
  %5 = load %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  %shadowed = getelementptr inbounds %struct.binding_level* %newlevel.0, i64 0, i32 2
  store %union.tree_node* %5, %union.tree_node** %shadowed, align 8, !tbaa !56
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8, !tbaa !1
  store %union.tree_node* null, %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @pop_label_level() #0 {
entry:
  %0 = load %struct.binding_level** @label_level_chain, align 8, !tbaa !1
  %1 = load %union.tree_node** @named_labels, align 8, !tbaa !1
  %tobool8385 = icmp eq %union.tree_node* %1, null
  br i1 %tobool8385, label %for.cond37.preheader, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry, %for.cond.outer.backedge
  %prev.0.ph87 = phi %union.tree_node* [ %prev.0.ph.be, %for.cond.outer.backedge ], [ null, %entry ]
  %link.0.ph86 = phi %union.tree_node* [ %link.0.ph.be, %for.cond.outer.backedge ], [ %1, %entry ]
  %tobool27 = icmp eq %union.tree_node* %prev.0.ph87, null
  %chain30 = getelementptr inbounds %union.tree_node* %prev.0.ph87, i64 0, i32 0, i32 0, i32 0
  br i1 %tobool27, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %for.body.lr.ph
  %value.us.phi.trans.insert = getelementptr inbounds %union.tree_node* %link.0.ph86, i64 0, i32 0, i32 2
  %.phi.trans.insert = bitcast i32* %value.us.phi.trans.insert to %union.tree_node**
  %.pre = load %union.tree_node** %.phi.trans.insert, align 8, !tbaa !50
  %lang_flag_1.us.phi.trans.insert = getelementptr inbounds %union.tree_node* %.pre, i64 0, i32 0, i32 0, i32 2
  %bf.load.us.pre = load i32* %lang_flag_1.us.phi.trans.insert, align 8
  %bf.clear.us = and i32 %bf.load.us.pre, 33554432
  %tobool1.us = icmp eq i32 %bf.clear.us, 0
  br i1 %tobool1.us, label %if.else33, label %if.then.us

if.then.us:                                       ; preds = %for.body.us
  %linenum.us = getelementptr inbounds %union.tree_node* %.pre, i64 0, i32 0, i32 2
  %2 = load i32* %linenum.us, align 4, !tbaa !55
  %cmp.us = icmp eq i32 %2, 0
  br i1 %cmp.us, label %if.then4.us, label %if.else.us

if.else.us:                                       ; preds = %if.then.us
  %3 = load i32* @warn_unused_label, align 4, !tbaa !5
  %tobool10.us = icmp ne i32 %3, 0
  %bf.clear16.us = and i32 %bf.load.us.pre, 65536
  %tobool17.us = icmp eq i32 %bf.clear16.us, 0
  %or.cond.us = and i1 %tobool10.us, %tobool17.us
  br i1 %or.cond.us, label %if.then18.us, label %if.else31

if.then18.us:                                     ; preds = %if.else.us
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %.pre, i8* getelementptr inbounds ([32 x i8]* @.str135, i64 0, i64 0)) #5
  br label %if.else31

if.then4.us:                                      ; preds = %if.then.us
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %.pre, i8* getelementptr inbounds ([32 x i8]* @.str134, i64 0, i64 0)) #5
  %4 = load i8** @input_filename, align 8, !tbaa !1
  %5 = load i32* @lineno, align 4, !tbaa !5
  %6 = load %union.tree_node** %.phi.trans.insert, align 8, !tbaa !50
  %name.us = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 8
  %7 = load %union.tree_node** %name.us, align 8, !tbaa !48
  %call.us = tail call %union.tree_node* @define_label(i8* %4, i32 %5, %union.tree_node* %7)
  br label %if.else31

for.cond37.preheader:                             ; preds = %for.cond.outer.backedge, %if.then28, %entry
  %link.180 = load %union.tree_node** @shadowed_labels, align 8
  %tobool3881 = icmp eq %union.tree_node* %link.180, null
  br i1 %tobool3881, label %for.end56, label %for.body39

for.body:                                         ; preds = %for.body.lr.ph, %if.then28
  %link.084 = phi %union.tree_node* [ %19, %if.then28 ], [ %link.0.ph86, %for.body.lr.ph ]
  %value = getelementptr inbounds %union.tree_node* %link.084, i64 0, i32 0, i32 2
  %8 = bitcast i32* %value to %union.tree_node**
  %9 = load %union.tree_node** %8, align 8, !tbaa !50
  %lang_flag_1 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %lang_flag_1, align 8
  %bf.clear = and i32 %bf.load, 33554432
  %tobool1 = icmp eq i32 %bf.clear, 0
  br i1 %tobool1, label %if.else33, label %if.then

if.then:                                          ; preds = %for.body
  %linenum = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 2
  %10 = load i32* %linenum, align 4, !tbaa !55
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %9, i8* getelementptr inbounds ([32 x i8]* @.str134, i64 0, i64 0)) #5
  %11 = load i8** @input_filename, align 8, !tbaa !1
  %12 = load i32* @lineno, align 4, !tbaa !5
  %13 = load %union.tree_node** %8, align 8, !tbaa !50
  %name = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 8
  %14 = load %union.tree_node** %name, align 8, !tbaa !48
  %call = tail call %union.tree_node* @define_label(i8* %11, i32 %12, %union.tree_node* %14)
  br label %if.then28

if.else:                                          ; preds = %if.then
  %15 = load i32* @warn_unused_label, align 4, !tbaa !5
  %tobool10 = icmp ne i32 %15, 0
  %bf.clear16 = and i32 %bf.load, 65536
  %tobool17 = icmp eq i32 %bf.clear16, 0
  %or.cond = and i1 %tobool10, %tobool17
  br i1 %or.cond, label %if.then18, label %if.then28

if.then18:                                        ; preds = %if.else
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %9, i8* getelementptr inbounds ([32 x i8]* @.str135, i64 0, i64 0)) #5
  br label %if.then28

if.then28:                                        ; preds = %if.then4, %if.then18, %if.else
  %16 = load %union.tree_node** %8, align 8, !tbaa !50
  %name25 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 8
  %17 = load %union.tree_node** %name25, align 8, !tbaa !48
  %18 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 8
  store %union.tree_node* null, %union.tree_node** %18, align 8, !tbaa !16
  %chain = getelementptr inbounds %union.tree_node* %link.084, i64 0, i32 0, i32 0, i32 0
  %19 = load %union.tree_node** %chain, align 8, !tbaa !29
  store %union.tree_node* %19, %union.tree_node** %chain30, align 8, !tbaa !29
  %tobool = icmp eq %union.tree_node* %19, null
  br i1 %tobool, label %for.cond37.preheader, label %for.body

if.else31:                                        ; preds = %if.then4.us, %if.then18.us, %if.else.us
  %20 = load %union.tree_node** %.phi.trans.insert, align 8, !tbaa !50
  %name25.us = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 8
  %21 = load %union.tree_node** %name25.us, align 8, !tbaa !48
  %22 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 8
  store %union.tree_node* null, %union.tree_node** %22, align 8, !tbaa !16
  %chain.us = getelementptr inbounds %union.tree_node* %link.0.ph86, i64 0, i32 0, i32 0, i32 0
  %23 = load %union.tree_node** %chain.us, align 8, !tbaa !29
  store %union.tree_node* %23, %union.tree_node** @named_labels, align 8, !tbaa !1
  br label %for.cond.outer.backedge

for.cond.outer.backedge:                          ; preds = %if.else31, %if.else33
  %link.0.ph.be = phi %union.tree_node* [ %23, %if.else31 ], [ %24, %if.else33 ]
  %prev.0.ph.be = phi %union.tree_node* [ null, %if.else31 ], [ %link.0.lcssa78, %if.else33 ]
  %tobool83 = icmp eq %union.tree_node* %link.0.ph.be, null
  br i1 %tobool83, label %for.cond37.preheader, label %for.body.lr.ph

if.else33:                                        ; preds = %for.body, %for.body.us
  %link.0.lcssa78 = phi %union.tree_node* [ %link.0.ph86, %for.body.us ], [ %link.084, %for.body ]
  %chain35 = getelementptr inbounds %union.tree_node* %link.0.lcssa78, i64 0, i32 0, i32 0, i32 0
  %24 = load %union.tree_node** %chain35, align 8, !tbaa !29
  br label %for.cond.outer.backedge

for.body39:                                       ; preds = %for.cond37.preheader, %for.inc
  %link.182 = phi %union.tree_node* [ %link.1, %for.inc ], [ %link.180, %for.cond37.preheader ]
  %value41 = getelementptr inbounds %union.tree_node* %link.182, i64 0, i32 0, i32 2
  %25 = bitcast i32* %value41 to %union.tree_node**
  %26 = load %union.tree_node** %25, align 8, !tbaa !50
  %name43 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 8
  %27 = load %union.tree_node** %name43, align 8, !tbaa !48
  %cmp44 = icmp eq %union.tree_node* %27, null
  br i1 %cmp44, label %for.inc, label %if.then45

if.then45:                                        ; preds = %for.body39
  %28 = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 8
  store %union.tree_node* %26, %union.tree_node** %28, align 8, !tbaa !16
  br label %for.inc

for.inc:                                          ; preds = %for.body39, %if.then45
  %chain55 = getelementptr inbounds %union.tree_node* %link.182, i64 0, i32 0, i32 0, i32 0
  %link.1 = load %union.tree_node** %chain55, align 8
  %tobool38 = icmp eq %union.tree_node* %link.1, null
  br i1 %tobool38, label %for.end56, label %for.body39

for.end56:                                        ; preds = %for.inc, %for.cond37.preheader
  %29 = load %union.tree_node** @named_labels, align 8, !tbaa !1
  %names = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 0
  %30 = load %union.tree_node** %names, align 8, !tbaa !34
  %call57 = tail call %union.tree_node* @chainon(%union.tree_node* %29, %union.tree_node* %30) #5
  store %union.tree_node* %call57, %union.tree_node** @named_labels, align 8, !tbaa !1
  %shadowed = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 2
  %31 = load %union.tree_node** %shadowed, align 8, !tbaa !56
  store %union.tree_node* %31, %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  %32 = load %struct.binding_level** @label_level_chain, align 8, !tbaa !1
  %level_chain = getelementptr inbounds %struct.binding_level* %32, i64 0, i32 5
  %33 = load %struct.binding_level** %level_chain, align 8, !tbaa !38
  store %struct.binding_level* %33, %struct.binding_level** @label_level_chain, align 8, !tbaa !1
  %34 = load %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  %level_chain58 = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 5
  store %struct.binding_level* %34, %struct.binding_level** %level_chain58, align 8, !tbaa !38
  store %struct.binding_level* %0, %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @pushtag(%union.tree_node* %name, %union.tree_node* %type) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.cond, %entry
  %b.0.in = phi %struct.binding_level** [ @current_binding_level, %entry ], [ %level_chain, %for.cond ]
  %b.0 = load %struct.binding_level** %b.0.in, align 8
  %tag_transparent = getelementptr inbounds %struct.binding_level* %b.0, i64 0, i32 7
  %0 = load i8* %tag_transparent, align 1, !tbaa !36
  %tobool = icmp eq i8 %0, 0
  %level_chain = getelementptr inbounds %struct.binding_level* %b.0, i64 0, i32 5
  br i1 %tobool, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond
  %tobool1 = icmp eq %union.tree_node* %name, null
  br i1 %tobool1, label %if.end7, label %if.then

if.then:                                          ; preds = %for.end
  %1 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 11
  %2 = load %union.tree_node** %1, align 8, !tbaa !57
  %cmp = icmp eq %union.tree_node* %2, null
  br i1 %cmp, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.then
  store %union.tree_node* %name, %union.tree_node** %1, align 8, !tbaa !57
  br label %if.end7

if.end7:                                          ; preds = %for.end, %if.then, %if.then4
  %tags = getelementptr inbounds %struct.binding_level* %b.0, i64 0, i32 1
  %3 = load %union.tree_node** %tags, align 8, !tbaa !35
  %call = tail call %union.tree_node* @tree_cons(%union.tree_node* %name, %union.tree_node* %type, %union.tree_node* %3) #5
  store %union.tree_node* %call, %union.tree_node** %tags, align 8, !tbaa !35
  %call9 = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %type) #5
  %call10 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call9)
  %chain = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call10, %union.tree_node** %chain, align 8, !tbaa !29
  %context = getelementptr inbounds %union.tree_node* %call10, i64 0, i32 0, i32 9
  %4 = load %union.tree_node** %context, align 8, !tbaa !53
  %context14 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 17
  %.c = bitcast %union.tree_node* %4 to %struct.rtx_def*
  store %struct.rtx_def* %.c, %struct.rtx_def** %context14, align 8, !tbaa !52
  ret void
}

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @pushdecl(%union.tree_node* %x) #0 {
entry:
  %name1 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 8
  %0 = load %union.tree_node** %name1, align 8, !tbaa !48
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %code = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 30
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %lang_specific = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 24
  %2 = load %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  %tobool = icmp eq %struct.lang_decl* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i8* @ggc_alloc_cleared(i64 16) #5
  %3 = bitcast i8* %call to %struct.lang_decl*
  store %struct.lang_decl* %3, %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  %bf.load8.pre = load i32* %code, align 8
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.then, %entry
  %bf.load8 = phi i32 [ %bf.load, %land.lhs.true ], [ %bf.load8.pre, %if.then ], [ %bf.load, %entry ]
  %4 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %context = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 9
  store %union.tree_node* %4, %union.tree_node** %context, align 8, !tbaa !53
  %bf.clear9 = and i32 %bf.load8, 255
  switch i32 %bf.clear9, label %if.end27 [
    i32 30, label %land.lhs.true16
    i32 34, label %land.lhs.true16
  ]

land.lhs.true16:                                  ; preds = %if.end, %if.end
  %initial = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 12
  %5 = load %union.tree_node** %initial, align 8, !tbaa !40
  %cmp18 = icmp eq %union.tree_node* %5, null
  br i1 %cmp18, label %land.lhs.true19, label %if.end27

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %external_flag = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %6 = bitcast i48* %external_flag to i64*
  %bf.load21 = load i64* %6, align 8
  %bf.cast = and i64 %bf.load21, 256
  %tobool23 = icmp eq i64 %bf.cast, 0
  br i1 %tobool23, label %if.end27, label %if.then24

if.then24:                                        ; preds = %land.lhs.true19
  store %union.tree_node* null, %union.tree_node** %context, align 8, !tbaa !53
  br label %if.end27

if.end27:                                         ; preds = %if.end, %land.lhs.true19, %if.then24, %land.lhs.true16
  %tobool28 = icmp eq %union.tree_node* %0, null
  br i1 %tobool28, label %if.end721, label %if.then29

if.then29:                                        ; preds = %if.end27
  %7 = load i32* @warn_nested_externs, align 4, !tbaa !5
  %tobool30 = icmp eq i32 %7, 0
  br i1 %tobool30, label %if.end51, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %if.then29
  %external_flag33 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %8 = bitcast i48* %external_flag33 to i64*
  %bf.load34 = load i64* %8, align 8
  %bf.cast37 = and i64 %bf.load34, 256
  %tobool38 = icmp eq i64 %bf.cast37, 0
  %9 = load %struct.binding_level** @global_binding_level, align 8
  %cmp40 = icmp eq %struct.binding_level* %1, %9
  %or.cond908 = or i1 %tobool38, %cmp40
  br i1 %or.cond908, label %if.end51, label %land.lhs.true41

land.lhs.true41:                                  ; preds = %land.lhs.true31
  %10 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 9
  %11 = load %union.tree_node** %10, align 8, !tbaa !17
  %cmp42 = icmp ne %union.tree_node* %11, %x
  %bf.cast48 = and i64 %bf.load34, 65536
  %tobool49 = icmp eq i64 %bf.cast48, 0
  %or.cond909 = and i1 %cmp42, %tobool49
  br i1 %or.cond909, label %if.then50, label %if.end51

if.then50:                                        ; preds = %land.lhs.true41
  %id = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds i8** %id, i64 1
  %13 = load i8** %12, align 8, !tbaa !21
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([34 x i8]* @.str136, i64 0, i64 0), i8* %13) #5
  br label %if.end51

if.end51:                                         ; preds = %land.lhs.true41, %land.lhs.true31, %if.then29, %if.then50
  %14 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %15 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.binding_level* %14, %15
  br i1 %cmp.i, label %lookup_name_current_level.exit, label %if.end.i

if.end.i:                                         ; preds = %if.end51
  %16 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 7
  %17 = load %union.tree_node** %16, align 8, !tbaa !15
  %cmp1.i = icmp eq %union.tree_node* %17, null
  br i1 %cmp1.i, label %land.lhs.true54, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  %names.i = getelementptr inbounds %struct.binding_level* %14, i64 0, i32 0
  %t.012.i = load %union.tree_node** %names.i, align 8
  %tobool13.i = icmp eq %union.tree_node* %t.012.i, null
  br i1 %tobool13.i, label %land.lhs.true54, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %chain.i = getelementptr inbounds %union.tree_node* %t.014.i, i64 0, i32 0, i32 0, i32 0
  %t.0.i = load %union.tree_node** %chain.i, align 8
  %tobool.i = icmp eq %union.tree_node* %t.0.i, null
  br i1 %tobool.i, label %land.lhs.true54, label %for.body.i

for.body.i:                                       ; preds = %if.end3.i, %for.cond.i
  %t.014.i = phi %union.tree_node* [ %t.0.i, %for.cond.i ], [ %t.012.i, %if.end3.i ]
  %name4.i = getelementptr inbounds %union.tree_node* %t.014.i, i64 0, i32 0, i32 8
  %18 = load %union.tree_node** %name4.i, align 8, !tbaa !48
  %cmp5.i = icmp eq %union.tree_node* %18, %0
  br i1 %cmp5.i, label %if.end80, label %for.cond.i

lookup_name_current_level.exit:                   ; preds = %if.end51
  %global_value.i = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 6
  %19 = bitcast %union.anon* %global_value.i to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !8
  %tobool53 = icmp eq %union.tree_node* %20, null
  br i1 %tobool53, label %land.lhs.true54, label %if.end80

land.lhs.true54:                                  ; preds = %for.cond.i, %if.end3.i, %if.end.i, %lookup_name_current_level.exit
  %external_flag56 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %21 = bitcast i48* %external_flag56 to i64*
  %bf.load57 = load i64* %21, align 8
  %bf.cast60 = and i64 %bf.load57, 256
  %tobool61 = icmp eq i64 %bf.cast60, 0
  br i1 %tobool61, label %if.end85thread-pre-split, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true54
  %bf.load64 = load i32* %code, align 8
  %bf.clear66 = and i32 %bf.load64, 524288
  %tobool67 = icmp eq i32 %bf.clear66, 0
  %22 = load i32* @flag_traditional, align 4
  %tobool69 = icmp ne i32 %22, 0
  %or.cond = or i1 %tobool67, %tobool69
  br i1 %or.cond, label %if.end85, label %if.then70

if.then70:                                        ; preds = %land.lhs.true62
  %global_value = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 6
  %23 = bitcast %union.anon* %global_value to %union.tree_node**
  %24 = load %union.tree_node** %23, align 8, !tbaa !8
  %tobool71 = icmp eq %union.tree_node* %24, null
  br i1 %tobool71, label %if.then78, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %if.then70
  %code74 = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 0, i32 2
  %bf.load75 = load i32* %code74, align 8
  %bf.clear76 = and i32 %bf.load75, 255
  %cmp77 = icmp eq i32 %bf.clear76, 33
  br i1 %cmp77, label %if.then78, label %if.end80

if.then78:                                        ; preds = %if.then70, %lor.lhs.false72
  %25 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 11
  %26 = load %union.tree_node** %25, align 8, !tbaa !19
  br label %if.end80

if.end80:                                         ; preds = %for.body.i, %lor.lhs.false72, %if.then78, %lookup_name_current_level.exit
  %different_binding_level.0 = phi i32 [ 0, %lookup_name_current_level.exit ], [ 1, %if.then78 ], [ 1, %lor.lhs.false72 ], [ 0, %for.body.i ]
  %t.1 = phi %union.tree_node* [ %20, %lookup_name_current_level.exit ], [ %26, %if.then78 ], [ %24, %lor.lhs.false72 ], [ %t.014.i, %for.body.i ]
  %cmp81 = icmp ne %union.tree_node* %t.1, null
  %27 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp83 = icmp eq %union.tree_node* %t.1, %27
  %or.cond910 = and i1 %cmp81, %cmp83
  br i1 %or.cond910, label %if.then84, label %if.end85thread-pre-split

if.then84:                                        ; preds = %if.end80
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([31 x i8]* @.str137, i64 0, i64 0)) #5
  br label %if.end85thread-pre-split

if.end85thread-pre-split:                         ; preds = %if.then84, %if.end80, %land.lhs.true54
  %different_binding_level.0950.ph = phi i32 [ 0, %land.lhs.true54 ], [ %different_binding_level.0, %if.end80 ], [ %different_binding_level.0, %if.then84 ]
  %t.2.ph = phi %union.tree_node* [ null, %land.lhs.true54 ], [ %t.1, %if.end80 ], [ null, %if.then84 ]
  %.pr = load i32* @flag_traditional, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.end85thread-pre-split, %land.lhs.true62
  %28 = phi i32 [ %.pr, %if.end85thread-pre-split ], [ %22, %land.lhs.true62 ]
  %different_binding_level.0950 = phi i32 [ %different_binding_level.0950.ph, %if.end85thread-pre-split ], [ 0, %land.lhs.true62 ]
  %t.2 = phi %union.tree_node* [ %t.2.ph, %if.end85thread-pre-split ], [ null, %land.lhs.true62 ]
  %tobool86 = icmp eq i32 %28, 0
  br i1 %tobool86, label %land.lhs.true87, label %if.end126

land.lhs.true87:                                  ; preds = %if.end85
  %public_flag89 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load90 = load i32* %public_flag89, align 8
  %bf.clear92 = and i32 %bf.load90, 524288
  %tobool93 = icmp eq i32 %bf.clear92, 0
  br i1 %tobool93, label %if.end126, label %land.lhs.true94

land.lhs.true94:                                  ; preds = %land.lhs.true87
  %bf.load97 = load i32* %code, align 8
  %bf.clear99 = and i32 %bf.load97, 524288
  %tobool100 = icmp eq i32 %bf.clear99, 0
  br i1 %tobool100, label %land.lhs.true101, label %if.end126

land.lhs.true101:                                 ; preds = %land.lhs.true94
  %bf.clear105 = and i32 %bf.load97, 255
  %cmp106 = icmp eq i32 %bf.clear105, 30
  %29 = load %struct.binding_level** @global_binding_level, align 8
  %cmp108 = icmp eq %struct.binding_level* %1, %29
  %or.cond911 = or i1 %cmp106, %cmp108
  br i1 %or.cond911, label %land.lhs.true109, label %if.end126

land.lhs.true109:                                 ; preds = %land.lhs.true101
  %30 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 9
  %31 = load %union.tree_node** %30, align 8, !tbaa !17
  %cmp111 = icmp eq %union.tree_node* %31, null
  br i1 %cmp111, label %if.end126, label %if.then112

if.then112:                                       ; preds = %land.lhs.true109
  %id114 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds i8** %id114, i64 1
  %33 = load i8** %32, align 8, !tbaa !21
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([57 x i8]* @.str138, i64 0, i64 0), i8* %33) #5
  %34 = load %union.tree_node** %30, align 8, !tbaa !17
  %filename = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 1
  %35 = load i8** %filename, align 8, !tbaa !54
  %linenum = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 2
  %36 = load i32* %linenum, align 4, !tbaa !55
  %37 = load i8** %32, align 8, !tbaa !21
  tail call void (i8*, i32, i8*, ...)* @pedwarn_with_file_and_line(i8* %35, i32 %36, i8* getelementptr inbounds ([29 x i8]* @.str139, i64 0, i64 0), i8* %37) #5
  %bf.load124 = load i32* %public_flag89, align 8
  %bf.set = or i32 %bf.load124, 2048
  store i32 %bf.set, i32* %public_flag89, align 8
  br label %if.end126

if.end126:                                        ; preds = %land.lhs.true101, %land.lhs.true109, %land.lhs.true94, %land.lhs.true87, %if.end85, %if.then112
  %cmp127 = icmp ne %union.tree_node* %t.2, null
  br i1 %cmp127, label %land.lhs.true128, label %if.end148

land.lhs.true128:                                 ; preds = %if.end126
  %type.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %38 = load %union.tree_node** %type.i, align 8, !tbaa !23
  %type2.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 0, i32 1
  %39 = load %union.tree_node** %type2.i, align 8, !tbaa !23
  %call.i919 = tail call i32 @comptypes(%union.tree_node* %38, %union.tree_node* %39) #5
  %bf.load.i921 = load i32* %code, align 8
  %bf.clear.i = and i32 %bf.load.i921, 255
  %cmp.i922 = icmp eq i32 %bf.clear.i, 30
  br i1 %cmp.i922, label %land.rhs.i, label %land.end.i

land.rhs.i:                                       ; preds = %land.lhs.true128
  %initial.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 12
  %40 = load %union.tree_node** %initial.i, align 8, !tbaa !40
  %cmp4.i = icmp ne %union.tree_node* %40, null
  br label %land.end.i

land.end.i:                                       ; preds = %land.rhs.i, %land.lhs.true128
  %41 = phi i1 [ false, %land.lhs.true128 ], [ %cmp4.i, %land.rhs.i ]
  %42 = load %union.tree_node** %type2.i, align 8, !tbaa !23
  %43 = load %union.tree_node** %type.i, align 8, !tbaa !23
  %code10.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 0, i32 2
  %bf.load11.i923 = load i32* %code10.i, align 8
  %bf.clear12.i924 = and i32 %bf.load11.i923, 255
  %idxprom2226.i = zext i32 %bf.clear12.i924 to i64
  %arrayidx.i = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom2226.i
  %44 = load i8* %arrayidx.i, align 1, !tbaa !7
  %cmp13.i925 = icmp eq i8 %44, 100
  br i1 %cmp13.i925, label %if.then.i926, label %if.end137.i

if.then.i926:                                     ; preds = %land.end.i
  %cmp25.i = icmp eq i32 %bf.clear12.i924, 30
  %or.cond2248.i = and i1 %cmp.i922, %cmp25.i
  br i1 %or.cond2248.i, label %land.lhs.true27.i, label %if.end133.i

land.lhs.true27.i:                                ; preds = %if.then.i926
  %uninlinable.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %45 = bitcast i48* %uninlinable.i to i64*
  %bf.load29.i = load i64* %45, align 8
  %bf.cast.i927 = and i64 %bf.load29.i, 68719476736
  %tobool.i928 = icmp eq i64 %bf.cast.i927, 0
  br i1 %tobool.i928, label %lor.lhs.false.i, label %if.then38.i

lor.lhs.false.i:                                  ; preds = %land.lhs.true27.i
  %uninlinable32.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %46 = bitcast i48* %uninlinable32.i to i64*
  %bf.load33.i = load i64* %46, align 8
  %bf.cast36.i = and i64 %bf.load33.i, 68719476736
  %tobool37.i = icmp eq i64 %bf.cast36.i, 0
  br i1 %tobool37.i, label %if.end133.i, label %if.then38.i

if.then38.i:                                      ; preds = %lor.lhs.false.i, %land.lhs.true27.i
  %lang_specific.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 24
  %47 = load %struct.lang_decl** %lang_specific.i, align 8, !tbaa !58
  %48 = getelementptr inbounds %struct.lang_decl* %47, i64 0, i32 0, i32 0
  %bf.load40.i = load i8* %48, align 4
  %bf.clear41.i = and i8 %bf.load40.i, 1
  %tobool43.i = icmp eq i8 %bf.clear41.i, 0
  %brmerge.i = or i1 %tobool43.i, %tobool.i928
  br i1 %brmerge.i, label %if.else.i929, label %land.lhs.true52.i

land.lhs.true52.i:                                ; preds = %if.then38.i
  %attributes.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 16
  %49 = load %union.tree_node** %attributes.i, align 8, !tbaa !59
  %call54.i = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8]* @.str177, i64 0, i64 0), %union.tree_node* %49) #5
  %tobool55.i = icmp eq %union.tree_node* %call54.i, null
  br i1 %tobool55.i, label %if.else.i929, label %if.end133.i

if.else.i929:                                     ; preds = %land.lhs.true52.i, %if.then38.i
  %lang_specific58.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 24
  %50 = load %struct.lang_decl** %lang_specific58.i, align 8, !tbaa !58
  %51 = getelementptr inbounds %struct.lang_decl* %50, i64 0, i32 0, i32 0
  %bf.load60.i = load i8* %51, align 4
  %bf.clear61.i = and i8 %bf.load60.i, 1
  %tobool63.i = icmp eq i8 %bf.clear61.i, 0
  br i1 %tobool63.i, label %if.else78.i, label %land.lhs.true64.i

land.lhs.true64.i:                                ; preds = %if.else.i929
  %uninlinable66.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %52 = bitcast i48* %uninlinable66.i to i64*
  %bf.load67.i = load i64* %52, align 8
  %bf.cast70.i = and i64 %bf.load67.i, 68719476736
  %tobool71.i = icmp eq i64 %bf.cast70.i, 0
  br i1 %tobool71.i, label %if.else78.i, label %land.lhs.true72.i

land.lhs.true72.i:                                ; preds = %land.lhs.true64.i
  %attributes74.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 16
  %53 = load %union.tree_node** %attributes74.i, align 8, !tbaa !59
  %call75.i = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8]* @.str177, i64 0, i64 0), %union.tree_node* %53) #5
  %tobool76.i = icmp eq %union.tree_node* %call75.i, null
  br i1 %tobool76.i, label %if.else78.i, label %if.end133.i

if.else78.i:                                      ; preds = %land.lhs.true72.i, %land.lhs.true64.i, %if.else.i929
  %54 = load %struct.lang_decl** %lang_specific.i, align 8, !tbaa !58
  %55 = getelementptr inbounds %struct.lang_decl* %54, i64 0, i32 0, i32 0
  %bf.load82.i = load i8* %55, align 4
  %bf.clear83.i = and i8 %bf.load82.i, 1
  %tobool85.i = icmp eq i8 %bf.clear83.i, 0
  br i1 %tobool85.i, label %if.else108.i, label %land.lhs.true86.i

land.lhs.true86.i:                                ; preds = %if.else78.i
  %56 = load %struct.lang_decl** %lang_specific58.i, align 8, !tbaa !58
  %57 = getelementptr inbounds %struct.lang_decl* %56, i64 0, i32 0, i32 0
  %bf.load90.i = load i8* %57, align 4
  %bf.clear91.i = and i8 %bf.load90.i, 1
  %tobool93.i = icmp eq i8 %bf.clear91.i, 0
  br i1 %tobool93.i, label %land.lhs.true94.i, label %if.else108.i

land.lhs.true94.i:                                ; preds = %land.lhs.true86.i
  %uninlinable96.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %58 = bitcast i48* %uninlinable96.i to i64*
  %bf.load97.i = load i64* %58, align 8
  %bf.cast100.i = and i64 %bf.load97.i, 68719476736
  %tobool101.i = icmp eq i64 %bf.cast100.i, 0
  br i1 %tobool101.i, label %if.else108.i, label %land.lhs.true102.i

land.lhs.true102.i:                               ; preds = %land.lhs.true94.i
  %attributes104.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 16
  %59 = load %union.tree_node** %attributes104.i, align 8, !tbaa !59
  %call105.i = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8]* @.str177, i64 0, i64 0), %union.tree_node* %59) #5
  %tobool106.i = icmp eq %union.tree_node* %call105.i, null
  br i1 %tobool106.i, label %if.else108.i, label %if.then107.i

if.then107.i:                                     ; preds = %land.lhs.true102.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([35 x i8]* @.str328, i64 0, i64 0)) #5
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %t.2, i8* getelementptr inbounds ([62 x i8]* @.str329, i64 0, i64 0)) #5
  br label %if.end133.i

if.else108.i:                                     ; preds = %land.lhs.true102.i, %land.lhs.true94.i, %land.lhs.true86.i, %if.else78.i
  %60 = load %struct.lang_decl** %lang_specific58.i, align 8, !tbaa !58
  %61 = getelementptr inbounds %struct.lang_decl* %60, i64 0, i32 0, i32 0
  %bf.load112.i = load i8* %61, align 4
  %bf.clear113.i = and i8 %bf.load112.i, 1
  %tobool115.i = icmp eq i8 %bf.clear113.i, 0
  br i1 %tobool115.i, label %if.end133.i, label %land.lhs.true116.i

land.lhs.true116.i:                               ; preds = %if.else108.i
  %bf.load119.i = load i64* %45, align 8
  %bf.cast122.i = and i64 %bf.load119.i, 68719476736
  %tobool123.i = icmp eq i64 %bf.cast122.i, 0
  br i1 %tobool123.i, label %if.end133.i, label %land.lhs.true124.i

land.lhs.true124.i:                               ; preds = %land.lhs.true116.i
  %attributes126.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 16
  %62 = load %union.tree_node** %attributes126.i, align 8, !tbaa !59
  %call127.i = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8]* @.str177, i64 0, i64 0), %union.tree_node* %62) #5
  %tobool128.i = icmp eq %union.tree_node* %call127.i, null
  br i1 %tobool128.i, label %if.end133.i, label %if.then129.i

if.then129.i:                                     ; preds = %land.lhs.true124.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([49 x i8]* @.str330, i64 0, i64 0)) #5
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %t.2, i8* getelementptr inbounds ([49 x i8]* @.str331, i64 0, i64 0)) #5
  br label %if.end133.i

if.end133.i:                                      ; preds = %if.then129.i, %land.lhs.true124.i, %land.lhs.true116.i, %if.else108.i, %if.then107.i, %land.lhs.true72.i, %land.lhs.true52.i, %lor.lhs.false.i, %if.then.i926
  %63 = load %union.tree_node* (%union.tree_node*, %union.tree_node*)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 2), align 8, !tbaa !60
  %call134.i = tail call %union.tree_node* %63(%union.tree_node* %t.2, %union.tree_node* %x) #5
  %attributes136.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 16
  store %union.tree_node* %call134.i, %union.tree_node** %attributes136.i, align 8, !tbaa !59
  br label %if.end137.i

if.end137.i:                                      ; preds = %if.end133.i, %land.end.i
  %code139.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 2
  %bf.load140.i = load i32* %code139.i, align 8
  %bf.clear141.i = and i32 %bf.load140.i, 255
  %cmp142.i = icmp eq i32 %bf.clear141.i, 0
  br i1 %cmp142.i, label %if.then151.i, label %lor.lhs.false144.i

lor.lhs.false144.i:                               ; preds = %if.end137.i
  %code146.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 0, i32 2
  %bf.load147.i = load i32* %code146.i, align 8
  %bf.clear148.i = and i32 %bf.load147.i, 255
  %cmp149.i = icmp eq i32 %bf.clear148.i, 0
  br i1 %cmp149.i, label %if.then151.i, label %if.end152.i

if.then151.i:                                     ; preds = %lor.lhs.false144.i, %if.end137.i
  br label %if.end152.i

if.end152.i:                                      ; preds = %if.then151.i, %lor.lhs.false144.i
  %types_match.0.i = phi i32 [ 0, %if.then151.i ], [ %call.i919, %lor.lhs.false144.i ]
  %bf.load155.i = load i32* %code10.i, align 8
  %bf.clear156.i = and i32 %bf.load155.i, 255
  %bf.load159.i = load i32* %code, align 8
  %bf.clear160.i = and i32 %bf.load159.i, 255
  %cmp161.i = icmp eq i32 %bf.clear156.i, %bf.clear160.i
  br i1 %cmp161.i, label %if.end230.i, label %if.then163.i

if.then163.i:                                     ; preds = %if.end152.i
  %cmp168.i = icmp eq i32 %bf.clear156.i, 30
  br i1 %cmp168.i, label %land.lhs.true170.i, label %if.else228.i

land.lhs.true170.i:                               ; preds = %if.then163.i
  %built_in_class.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %64 = bitcast i48* %built_in_class.i to i64*
  %bf.load172.i = load i64* %64, align 8
  %bf.cast175.i = and i64 %bf.load172.i, 1610612736
  %cmp176.i = icmp eq i64 %bf.cast175.i, 0
  %bf.clear182.i = and i32 %bf.load155.i, 8192
  %tobool183.i = icmp eq i32 %bf.clear182.i, 0
  %or.cond2249.i = and i1 %cmp176.i, %tobool183.i
  br i1 %or.cond2249.i, label %if.else228.i, label %if.then184.i

if.then184.i:                                     ; preds = %land.lhs.true170.i
  %bf.clear188.i = and i32 %bf.load159.i, 524288
  %tobool189.i = icmp eq i32 %bf.clear188.i, 0
  br i1 %tobool189.i, label %if.then190.i, label %if.else206.i

if.then190.i:                                     ; preds = %if.then184.i
  %65 = load i32* @warn_shadow, align 4, !tbaa !5
  %tobool191.i = icmp eq i32 %65, 0
  br i1 %tobool191.i, label %if.end148, label %if.else193.i

if.else193.i:                                     ; preds = %if.then190.i
  br i1 %cmp176.i, label %if.else203.i, label %if.then202.i

if.then202.i:                                     ; preds = %if.else193.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([33 x i8]* @.str332, i64 0, i64 0)) #5
  br label %if.end148

if.else203.i:                                     ; preds = %if.else193.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([32 x i8]* @.str333, i64 0, i64 0)) #5
  br label %if.end148

if.else206.i:                                     ; preds = %if.then184.i
  br i1 %cmp176.i, label %if.then215.i, label %if.else216.i

if.then215.i:                                     ; preds = %if.else206.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([47 x i8]* @.str334, i64 0, i64 0)) #5
  br label %if.end148

if.else216.i:                                     ; preds = %if.else206.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([48 x i8]* @.str335, i64 0, i64 0)) #5
  br label %if.end148

if.else228.i:                                     ; preds = %land.lhs.true170.i, %if.then163.i
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([44 x i8]* @.str336, i64 0, i64 0)) #5
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.2, i8* getelementptr inbounds ([29 x i8]* @.str139, i64 0, i64 0)) #5
  br label %if.end148

if.end230.i:                                      ; preds = %if.end152.i
  %tobool231.i = icmp ne i32 %types_match.0.i, 0
  %cmp237.i = icmp eq i32 %bf.clear156.i, 35
  %or.cond2250.i = and i1 %tobool231.i, %cmp237.i
  %bf.clear243.i = and i32 %bf.load155.i, 16384
  %tobool244.not.i = icmp ne i32 %bf.clear243.i, 0
  %or.cond2251.not.i = and i1 %or.cond2250.i, %tobool244.not.i
  %bf.clear250.i = and i32 %bf.load159.i, 16384
  %tobool251.i = icmp eq i32 %bf.clear250.i, 0
  %or.cond2252.i = and i1 %or.cond2251.not.i, %tobool251.i
  br i1 %or.cond2252.i, label %if.then131, label %if.end253.i

if.end253.i:                                      ; preds = %if.end230.i
  %66 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool254.i = icmp ne i32 %66, 0
  %cmp260.i = icmp eq i32 %bf.clear156.i, 30
  %or.cond2271.i = and i1 %tobool254.i, %cmp260.i
  br i1 %or.cond2271.i, label %land.lhs.true262.i, label %if.else272.i

land.lhs.true262.i:                               ; preds = %if.end253.i
  %67 = load %union.tree_node** %name1, align 8, !tbaa !48
  %68 = getelementptr inbounds %union.tree_node* %67, i64 0, i32 0, i32 9
  %69 = load %union.tree_node** %68, align 8, !tbaa !17
  %cmp264.i = icmp eq %union.tree_node* %69, %t.2
  br i1 %cmp264.i, label %land.lhs.true266.i, label %if.else272.i

land.lhs.true266.i:                               ; preds = %land.lhs.true262.i
  %initial268.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %70 = load %union.tree_node** %initial268.i, align 8, !tbaa !40
  %cmp269.i = icmp eq %union.tree_node* %70, null
  br i1 %cmp269.i, label %if.end989.i, label %if.else272.i

if.else272.i:                                     ; preds = %land.lhs.true266.i, %land.lhs.true262.i, %if.end253.i
  br i1 %cmp260.i, label %land.lhs.true279.i, label %if.else464.i

land.lhs.true279.i:                               ; preds = %if.else272.i
  %built_in_class281.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %71 = bitcast i48* %built_in_class281.i to i64*
  %bf.load282.i = load i64* %71, align 8
  %bf.cast285.i = and i64 %bf.load282.i, 1610612736
  %cmp286.i = icmp eq i64 %bf.cast285.i, 0
  br i1 %cmp286.i, label %land.lhs.true436.i, label %if.then288.i

if.then288.i:                                     ; preds = %land.lhs.true279.i
  %bf.clear293.i = and i32 %bf.load159.i, 524288
  %tobool294.i = icmp eq i32 %bf.clear293.i, 0
  br i1 %tobool294.i, label %if.then295.i, label %if.else299.i

if.then295.i:                                     ; preds = %if.then288.i
  %72 = load i32* @warn_shadow, align 4, !tbaa !5
  %tobool296.i = icmp eq i32 %72, 0
  br i1 %tobool296.i, label %if.end148, label %if.then297.i

if.then297.i:                                     ; preds = %if.then295.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([33 x i8]* @.str332, i64 0, i64 0)) #5
  br label %if.end148

if.else299.i:                                     ; preds = %if.then288.i
  br i1 %tobool231.i, label %if.else398.i, label %if.then301.i

if.then301.i:                                     ; preds = %if.else299.i
  %type303.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 0, i32 1
  %73 = load %union.tree_node** %type303.i, align 8, !tbaa !23
  %type305.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 1
  %74 = load %union.tree_node** %type305.i, align 8, !tbaa !23
  %type306.i = bitcast %union.tree_node* %73 to %struct.tree_type*
  %mode.i = getelementptr inbounds %struct.tree_type* %type306.i, i64 0, i32 6
  %bf.load307.i = load i32* %mode.i, align 4
  %type310.i = bitcast %union.tree_node* %74 to %struct.tree_type*
  %mode311.i = getelementptr inbounds %struct.tree_type* %type310.i, i64 0, i32 6
  %bf.load312.i = load i32* %mode311.i, align 4
  %bf.lshr3082246.i = xor i32 %bf.load312.i, %bf.load307.i
  %75 = and i32 %bf.lshr3082246.i, 65024
  %cmp315.i = icmp eq i32 %75, 0
  br i1 %cmp315.i, label %if.then317.i, label %if.end327.i

if.then317.i:                                     ; preds = %if.then301.i
  %values.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 1
  %76 = load i8** %values.i, align 8
  %77 = bitcast i8* %76 to %union.tree_node*
  %call319.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %74, %union.tree_node* %77) #5
  %attributes321.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 5
  %78 = bitcast i48* %attributes321.i to %union.tree_node**
  %79 = load %union.tree_node** %78, align 8, !tbaa !66
  %call322.i = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call319.i, %union.tree_node* %79) #5
  %call323.i = tail call i32 @comptypes(%union.tree_node* %43, %union.tree_node* %call322.i) #5
  %tobool324.i = icmp eq i32 %call323.i, 0
  %.call322.i = select i1 %tobool324.i, %union.tree_node* %42, %union.tree_node* %call322.i
  br label %if.end327.i

if.end327.i:                                      ; preds = %if.then317.i, %if.then301.i
  %oldtype.0.i = phi %union.tree_node* [ %42, %if.then301.i ], [ %.call322.i, %if.then317.i ]
  %types_match.1.i = phi i32 [ 0, %if.then301.i ], [ %call323.i, %if.then317.i ]
  %80 = load %union.tree_node** %type.i, align 8, !tbaa !23
  %values331.i = getelementptr inbounds %union.tree_node* %80, i64 0, i32 0, i32 1
  %81 = load i8** %values331.i, align 8
  %cmp332.i = icmp eq i8* %81, null
  br i1 %cmp332.i, label %if.end392.i, label %land.lhs.true334.i

land.lhs.true334.i:                               ; preds = %if.end327.i
  %values336.i = getelementptr inbounds %union.tree_node* %oldtype.0.i, i64 0, i32 0, i32 1
  %82 = load i8** %values336.i, align 8
  %cmp337.i = icmp eq i8* %82, null
  br i1 %cmp337.i, label %if.end392.i, label %land.lhs.true339.i

land.lhs.true339.i:                               ; preds = %land.lhs.true334.i
  %values341.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 1
  %83 = load i8** %values341.i, align 8
  %value.i = getelementptr inbounds i8* %83, i64 32
  %84 = bitcast i8* %value.i to %union.tree_node**
  %85 = load %union.tree_node** %84, align 8, !tbaa !50
  %cmp342.i = icmp eq %union.tree_node* %85, null
  br i1 %cmp342.i, label %if.end392.i, label %land.lhs.true344.i

land.lhs.true344.i:                               ; preds = %land.lhs.true339.i
  %value348.i = getelementptr inbounds i8* %82, i64 32
  %86 = bitcast i8* %value348.i to %union.tree_node**
  %87 = load %union.tree_node** %86, align 8, !tbaa !50
  %cmp349.i = icmp eq %union.tree_node* %87, null
  br i1 %cmp349.i, label %if.end392.i, label %land.lhs.true351.i

land.lhs.true351.i:                               ; preds = %land.lhs.true344.i
  %type356.i = bitcast %union.tree_node* %85 to %struct.tree_type*
  %mode357.i = getelementptr inbounds %struct.tree_type* %type356.i, i64 0, i32 6
  %bf.load358.i = load i32* %mode357.i, align 4
  %type365.i = bitcast %union.tree_node* %87 to %struct.tree_type*
  %mode366.i = getelementptr inbounds %struct.tree_type* %type365.i, i64 0, i32 6
  %bf.load367.i = load i32* %mode366.i, align 4
  %bf.lshr3592247.i = xor i32 %bf.load367.i, %bf.load358.i
  %88 = and i32 %bf.lshr3592247.i, 65024
  %cmp370.i = icmp eq i32 %88, 0
  br i1 %cmp370.i, label %if.then372.i, label %if.end392.i

if.then372.i:                                     ; preds = %land.lhs.true351.i
  %type375.i = getelementptr inbounds %union.tree_node* %oldtype.0.i, i64 0, i32 0, i32 0, i32 1
  %89 = load %union.tree_node** %type375.i, align 8, !tbaa !23
  %chain.i930 = bitcast i8* %82 to %union.tree_node**
  %90 = load %union.tree_node** %chain.i930, align 8, !tbaa !29
  %call383.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %85, %union.tree_node* %90) #5
  %call384.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %89, %union.tree_node* %call383.i) #5
  %attributes386.i = getelementptr inbounds %union.tree_node* %oldtype.0.i, i64 0, i32 0, i32 5
  %91 = bitcast i48* %attributes386.i to %union.tree_node**
  %92 = load %union.tree_node** %91, align 8, !tbaa !66
  %call387.i = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call384.i, %union.tree_node* %92) #5
  %call388.i = tail call i32 @comptypes(%union.tree_node* %43, %union.tree_node* %call387.i) #5
  %tobool389.i = icmp eq i32 %call388.i, 0
  %oldtype.0.call387.i = select i1 %tobool389.i, %union.tree_node* %oldtype.0.i, %union.tree_node* %call387.i
  br label %if.end392.i

if.end392.i:                                      ; preds = %if.then372.i, %land.lhs.true351.i, %land.lhs.true344.i, %land.lhs.true339.i, %land.lhs.true334.i, %if.end327.i
  %oldtype.1.i = phi %union.tree_node* [ %oldtype.0.i, %land.lhs.true351.i ], [ %oldtype.0.i, %land.lhs.true344.i ], [ %oldtype.0.i, %land.lhs.true339.i ], [ %oldtype.0.i, %land.lhs.true334.i ], [ %oldtype.0.i, %if.end327.i ], [ %oldtype.0.call387.i, %if.then372.i ]
  %types_match.2.i = phi i32 [ %types_match.1.i, %land.lhs.true351.i ], [ %types_match.1.i, %land.lhs.true344.i ], [ %types_match.1.i, %land.lhs.true339.i ], [ %types_match.1.i, %land.lhs.true334.i ], [ %types_match.1.i, %if.end327.i ], [ %call388.i, %if.then372.i ]
  %tobool393.i = icmp eq i32 %different_binding_level.0950, 0
  br i1 %tobool393.i, label %if.then394.i, label %if.end425.i

if.then394.i:                                     ; preds = %if.end392.i
  store %union.tree_node* %oldtype.1.i, %union.tree_node** %type2.i, align 8, !tbaa !23
  br label %if.end425.i

if.else398.i:                                     ; preds = %if.else299.i
  %values400.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 1
  %93 = load i8** %values400.i, align 8
  %cmp401.i = icmp eq i8* %93, null
  br i1 %cmp401.i, label %land.lhs.true403.i, label %if.end425.i

land.lhs.true403.i:                               ; preds = %if.else398.i
  %values405.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 1
  %94 = load i8** %values405.i, align 8
  %cmp406.i = icmp eq i8* %94, null
  br i1 %cmp406.i, label %if.end425.i, label %if.then408.i

if.then408.i:                                     ; preds = %land.lhs.true403.i
  %95 = bitcast i8* %94 to %union.tree_node*
  %type411.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 0, i32 1
  %96 = load %union.tree_node** %type411.i, align 8, !tbaa !23
  %call414.i = tail call %union.tree_node* @build_function_type(%union.tree_node* %96, %union.tree_node* %95) #5
  %attributes416.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 5
  %97 = bitcast i48* %attributes416.i to %union.tree_node**
  %98 = load %union.tree_node** %97, align 8, !tbaa !66
  %call417.i = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %call414.i, %union.tree_node* %98) #5
  %tobool418.i = icmp eq i32 %different_binding_level.0950, 0
  br i1 %tobool418.i, label %if.then419.i, label %if.end425.i

if.then419.i:                                     ; preds = %if.then408.i
  store %union.tree_node* %call417.i, %union.tree_node** %type2.i, align 8, !tbaa !23
  br label %if.end425.i

if.end425.i:                                      ; preds = %if.then419.i, %if.then408.i, %land.lhs.true403.i, %if.else398.i, %if.then394.i, %if.end392.i
  %oldtype.2.i = phi %union.tree_node* [ %call417.i, %if.then408.i ], [ %call417.i, %if.then419.i ], [ %42, %land.lhs.true403.i ], [ %42, %if.else398.i ], [ %oldtype.1.i, %if.end392.i ], [ %oldtype.1.i, %if.then394.i ]
  %types_match.3.i = phi i32 [ %types_match.0.i, %if.then408.i ], [ %types_match.0.i, %if.then419.i ], [ %types_match.0.i, %land.lhs.true403.i ], [ %types_match.0.i, %if.else398.i ], [ %types_match.2.i, %if.end392.i ], [ %types_match.2.i, %if.then394.i ]
  %tobool426.i = icmp eq i32 %types_match.3.i, 0
  br i1 %tobool426.i, label %if.then427.i, label %if.end989.i

if.then427.i:                                     ; preds = %if.end425.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([45 x i8]* @.str337, i64 0, i64 0)) #5
  br label %if.end148

land.lhs.true436.i:                               ; preds = %land.lhs.true279.i
  %linenum.i931 = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 2
  %99 = load i32* %linenum.i931, align 4, !tbaa !55
  %cmp438.i = icmp eq i32 %99, 0
  br i1 %cmp438.i, label %if.then440.i, label %if.else464.i

if.then440.i:                                     ; preds = %land.lhs.true436.i
  %bf.clear445.i = and i32 %bf.load159.i, 524288
  %tobool446.i = icmp eq i32 %bf.clear445.i, 0
  br i1 %tobool446.i, label %if.end148, label %if.else448.i

if.else448.i:                                     ; preds = %if.then440.i
  br i1 %tobool231.i, label %if.end989.i, label %if.then450.i

if.then450.i:                                     ; preds = %if.else448.i
  %100 = and i32 %bf.load155.i, 2048
  %bf.set.i = or i32 %bf.load159.i, %100
  store i32 %bf.set.i, i32* %code, align 8
  br label %if.end989.i

if.else464.i:                                     ; preds = %land.lhs.true436.i, %if.else272.i
  br i1 %tobool231.i, label %if.else674.i, label %land.lhs.true466.i

land.lhs.true466.i:                               ; preds = %if.else464.i
  br i1 %cmp260.i, label %land.lhs.true480.i, label %land.lhs.true587.i

land.lhs.true480.i:                               ; preds = %land.lhs.true466.i
  %type482.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 0, i32 1
  %101 = load %union.tree_node** %type482.i, align 8, !tbaa !23
  %code484.i = getelementptr inbounds %union.tree_node* %101, i64 0, i32 0, i32 0, i32 2
  %bf.load485.i = load i32* %code484.i, align 8
  %bf.clear486.i = and i32 %bf.load485.i, 255
  %cmp487.i = icmp eq i32 %bf.clear486.i, 13
  br i1 %cmp487.i, label %land.lhs.true489.i, label %if.else585.land.lhs.true587_crit_edge.i

land.lhs.true489.i:                               ; preds = %land.lhs.true480.i
  %type491.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 1
  %102 = load %union.tree_node** %type491.i, align 8, !tbaa !23
  %code493.i = getelementptr inbounds %union.tree_node* %102, i64 0, i32 0, i32 0, i32 2
  %bf.load494.i = load i32* %code493.i, align 8
  %bf.clear495.i = and i32 %bf.load494.i, 255
  %cmp496.i = icmp eq i32 %bf.clear495.i, 13
  br i1 %cmp496.i, label %land.lhs.true498.i, label %if.else585.land.lhs.true587_crit_edge.i

land.lhs.true498.i:                               ; preds = %land.lhs.true489.i
  %in_system_header_flag.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %103 = bitcast i48* %in_system_header_flag.i to i64*
  %bf.load500.i = load i64* %103, align 8
  %bf.cast503.i = and i64 %bf.load500.i, 65536
  %tobool504.i = icmp eq i64 %bf.cast503.i, 0
  br i1 %tobool504.i, label %lor.lhs.false505.i, label %land.lhs.true513.i

lor.lhs.false505.i:                               ; preds = %land.lhs.true498.i
  %in_system_header_flag507.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %104 = bitcast i48* %in_system_header_flag507.i to i64*
  %bf.load508.i = load i64* %104, align 8
  %bf.cast511.i = and i64 %bf.load508.i, 65536
  %tobool512.i = icmp eq i64 %bf.cast511.i, 0
  br i1 %tobool512.i, label %if.else585.land.lhs.true587_crit_edge.i, label %land.lhs.true513.i

land.lhs.true513.i:                               ; preds = %lor.lhs.false505.i, %land.lhs.true498.i
  %type517.i = getelementptr inbounds %union.tree_node* %102, i64 0, i32 0, i32 0, i32 1
  %105 = load %union.tree_node** %type517.i, align 8, !tbaa !23
  %106 = getelementptr inbounds %union.tree_node* %105, i64 0, i32 0, i32 15
  %107 = load %union.tree_node** %106, align 8, !tbaa !67
  %108 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp519.i = icmp eq %union.tree_node* %107, %108
  br i1 %cmp519.i, label %land.lhs.true521.i, label %lor.lhs.false538.i

land.lhs.true521.i:                               ; preds = %land.lhs.true513.i
  %values523.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 1
  %109 = load i8** %values523.i, align 8
  %cmp524.i = icmp eq i8* %109, null
  br i1 %cmp524.i, label %land.lhs.true526.i, label %lor.lhs.false538.i

land.lhs.true526.i:                               ; preds = %land.lhs.true521.i
  %values528.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 1
  %110 = load i8** %values528.i, align 8
  %111 = bitcast i8* %110 to %union.tree_node*
  %call529.i = tail call i32 @self_promoting_args_p(%union.tree_node* %111) #5
  %tobool530.i = icmp eq i32 %call529.i, 0
  br i1 %tobool530.i, label %lor.lhs.false538.i, label %land.lhs.true531.i

land.lhs.true531.i:                               ; preds = %land.lhs.true526.i
  %112 = load %union.tree_node** %type482.i, align 8, !tbaa !23
  %type535.i = getelementptr inbounds %union.tree_node* %112, i64 0, i32 0, i32 0, i32 1
  %113 = load %union.tree_node** %type535.i, align 8, !tbaa !23
  %114 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %cmp536.i = icmp eq %union.tree_node* %113, %114
  br i1 %cmp536.i, label %if.then564.i, label %lor.lhs.false538.i

lor.lhs.false538.i:                               ; preds = %land.lhs.true531.i, %land.lhs.true526.i, %land.lhs.true521.i, %land.lhs.true513.i
  %115 = load %union.tree_node** %type491.i, align 8, !tbaa !23
  %type542.i = getelementptr inbounds %union.tree_node* %115, i64 0, i32 0, i32 0, i32 1
  %116 = load %union.tree_node** %type542.i, align 8, !tbaa !23
  %117 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %cmp543.i = icmp eq %union.tree_node* %116, %117
  br i1 %cmp543.i, label %land.lhs.true545.i, label %if.else585.land.lhs.true587_crit_edge.i

land.lhs.true545.i:                               ; preds = %lor.lhs.false538.i
  %values547.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 1
  %118 = load i8** %values547.i, align 8
  %cmp548.i = icmp eq i8* %118, null
  br i1 %cmp548.i, label %land.lhs.true550.i, label %if.else585.land.lhs.true587_crit_edge.i

land.lhs.true550.i:                               ; preds = %land.lhs.true545.i
  %values552.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 1
  %119 = load i8** %values552.i, align 8
  %120 = bitcast i8* %119 to %union.tree_node*
  %call553.i = tail call i32 @self_promoting_args_p(%union.tree_node* %120) #5
  %tobool554.i = icmp eq i32 %call553.i, 0
  br i1 %tobool554.i, label %if.else585.land.lhs.true587_crit_edge.i, label %land.lhs.true555.i

land.lhs.true555.i:                               ; preds = %land.lhs.true550.i
  %121 = load %union.tree_node** %type482.i, align 8, !tbaa !23
  %type559.i = getelementptr inbounds %union.tree_node* %121, i64 0, i32 0, i32 0, i32 1
  %122 = load %union.tree_node** %type559.i, align 8, !tbaa !23
  %123 = getelementptr inbounds %union.tree_node* %122, i64 0, i32 0, i32 15
  %124 = load %union.tree_node** %123, align 8, !tbaa !67
  %125 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp562.i = icmp eq %union.tree_node* %124, %125
  br i1 %cmp562.i, label %if.then564.i, label %if.else585.land.lhs.true587_crit_edge.i

if.then564.i:                                     ; preds = %land.lhs.true555.i, %land.lhs.true531.i
  %126 = phi %union.tree_node* [ %121, %land.lhs.true555.i ], [ %112, %land.lhs.true531.i ]
  %127 = load i32* @pedantic, align 4, !tbaa !5
  %tobool565.i = icmp eq i32 %127, 0
  br i1 %tobool565.i, label %if.end567.i, label %if.then566.i

if.then566.i:                                     ; preds = %if.then564.i
  tail call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([27 x i8]* @.str338, i64 0, i64 0)) #5
  %.pre2287.i = load %union.tree_node** %type482.i, align 8, !tbaa !23
  br label %if.end567.i

if.end567.i:                                      ; preds = %if.then566.i, %if.then564.i
  %128 = phi %union.tree_node* [ %126, %if.then564.i ], [ %.pre2287.i, %if.then566.i ]
  %type571.i = getelementptr inbounds %union.tree_node* %128, i64 0, i32 0, i32 0, i32 1
  %129 = load %union.tree_node** %type571.i, align 8, !tbaa !23
  %130 = getelementptr inbounds %union.tree_node* %129, i64 0, i32 0, i32 15
  %131 = load %union.tree_node** %130, align 8, !tbaa !67
  %132 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp574.i = icmp eq %union.tree_node* %131, %132
  br i1 %cmp574.i, label %if.then576.i, label %if.end579.i

if.then576.i:                                     ; preds = %if.end567.i
  store %union.tree_node* %42, %union.tree_node** %type.i, align 8, !tbaa !23
  br label %if.end579.i

if.end579.i:                                      ; preds = %if.then576.i, %if.end567.i
  %newtype.0.i = phi %union.tree_node* [ %42, %if.then576.i ], [ %43, %if.end567.i ]
  %in_system_header_flag581.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %133 = bitcast i48* %in_system_header_flag581.i to i64*
  %bf.load582.i = load i64* %133, align 8
  %bf.set584.i = or i64 %bf.load582.i, 65536
  store i64 %bf.set584.i, i64* %133, align 8
  br label %if.end989.i

if.else585.land.lhs.true587_crit_edge.i:          ; preds = %land.lhs.true555.i, %land.lhs.true550.i, %land.lhs.true545.i, %lor.lhs.false538.i, %lor.lhs.false505.i, %land.lhs.true489.i, %land.lhs.true480.i
  %bf.load590.pre.i = load i32* %code10.i, align 8
  br label %land.lhs.true587.i

land.lhs.true587.i:                               ; preds = %if.else585.land.lhs.true587_crit_edge.i, %land.lhs.true466.i
  %bf.load590.i = phi i32 [ %bf.load590.pre.i, %if.else585.land.lhs.true587_crit_edge.i ], [ %bf.load155.i, %land.lhs.true466.i ]
  %bf.clear591.i = and i32 %bf.load590.i, 255
  %cmp592.i = icmp ne i32 %bf.clear591.i, 30
  %134 = load i32* @pedantic, align 4
  %tobool595.i = icmp ne i32 %134, 0
  %or.cond.i932 = or i1 %cmp592.i, %tobool595.i
  br i1 %or.cond.i932, label %if.then608.i, label %land.lhs.true596.i

land.lhs.true596.i:                               ; preds = %land.lhs.true587.i
  %type598.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 0, i32 1
  %135 = load %union.tree_node** %type598.i, align 8, !tbaa !23
  %type600.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 1
  %136 = load %union.tree_node** %type600.i, align 8, !tbaa !23
  %call601.i = tail call i32 @comptypes(%union.tree_node* %135, %union.tree_node* %136) #5
  %tobool602.i = icmp eq i32 %call601.i, 0
  br i1 %tobool602.i, label %if.then608.i, label %land.lhs.true603.i

land.lhs.true603.i:                               ; preds = %land.lhs.true596.i
  %values605.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 1
  %137 = load i8** %values605.i, align 8
  %cmp606.i = icmp eq i8* %137, null
  br i1 %cmp606.i, label %land.lhs.true603.i.if.else674.i_crit_edge, label %if.then608.i

land.lhs.true603.i.if.else674.i_crit_edge:        ; preds = %land.lhs.true603.i
  %bf.load.i.i.pre = load i32* %code, align 8
  br label %if.else674.i

if.then608.i:                                     ; preds = %land.lhs.true603.i, %land.lhs.true596.i, %land.lhs.true587.i
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([27 x i8]* @.str338, i64 0, i64 0)) #5
  %bf.load611.i = load i32* %code10.i, align 8
  %bf.clear612.i = and i32 %bf.load611.i, 255
  %cmp613.i = icmp eq i32 %bf.clear612.i, 30
  br i1 %cmp613.i, label %land.lhs.true615.i, label %if.end673.i

land.lhs.true615.i:                               ; preds = %if.then608.i
  %type617.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 0, i32 1
  %138 = load %union.tree_node** %type617.i, align 8, !tbaa !23
  %type619.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 0, i32 1
  %139 = load %union.tree_node** %type619.i, align 8, !tbaa !23
  %call620.i = tail call i32 @comptypes(%union.tree_node* %138, %union.tree_node* %139) #5
  %tobool621.i = icmp eq i32 %call620.i, 0
  br i1 %tobool621.i, label %if.end673.i, label %land.lhs.true622.i

land.lhs.true622.i:                               ; preds = %land.lhs.true615.i
  %values624.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 1
  %140 = load i8** %values624.i, align 8
  %cmp625.i = icmp eq i8* %140, null
  br i1 %cmp625.i, label %land.lhs.true627.i, label %lor.lhs.false632.i

land.lhs.true627.i:                               ; preds = %land.lhs.true622.i
  %initial629.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %141 = load %union.tree_node** %initial629.i, align 8, !tbaa !40
  %cmp630.i = icmp eq %union.tree_node* %141, null
  br i1 %cmp630.i, label %for.cond.preheader.i, label %lor.lhs.false632.i

lor.lhs.false632.i:                               ; preds = %land.lhs.true627.i, %land.lhs.true622.i
  %values634.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 1
  %142 = load i8** %values634.i, align 8
  %cmp635.i = icmp eq i8* %142, null
  br i1 %cmp635.i, label %land.lhs.true637.i, label %if.end673.i

land.lhs.true637.i:                               ; preds = %lor.lhs.false632.i
  %initial639.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 12
  %143 = load %union.tree_node** %initial639.i, align 8, !tbaa !40
  %cmp640.i.not = icmp ne %union.tree_node* %143, null
  %brmerge = or i1 %cmp640.i.not, %cmp625.i
  br i1 %brmerge, label %if.end673.i, label %for.body.lr.ph.i

for.cond.preheader.i:                             ; preds = %land.lhs.true627.i
  %values649.i.phi.trans.insert = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 1
  %.pre = load i8** %values649.i.phi.trans.insert, align 8
  %tobool6512275.i = icmp eq i8* %.pre, null
  br i1 %tobool6512275.i, label %if.end673.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %land.lhs.true637.i, %for.cond.preheader.i
  %t.0.ph.in2291.i = phi i8* [ %.pre, %for.cond.preheader.i ], [ %140, %land.lhs.true637.i ]
  %t.0.ph.i = bitcast i8* %t.0.ph.in2291.i to %union.tree_node*
  br label %for.body.i933

for.body.i933:                                    ; preds = %for.inc.i, %for.body.lr.ph.i
  %t.02276.i = phi %union.tree_node* [ %t.0.ph.i, %for.body.lr.ph.i ], [ %150, %for.inc.i ]
  %value654.i = getelementptr inbounds %union.tree_node* %t.02276.i, i64 0, i32 0, i32 2
  %144 = bitcast i32* %value654.i to %union.tree_node**
  %145 = load %union.tree_node** %144, align 8, !tbaa !50
  %chain656.i = getelementptr inbounds %union.tree_node* %t.02276.i, i64 0, i32 0, i32 0, i32 0
  %146 = load %union.tree_node** %chain656.i, align 8, !tbaa !29
  %cmp657.i = icmp eq %union.tree_node* %146, null
  br i1 %cmp657.i, label %land.lhs.true659.i, label %if.end665.i

land.lhs.true659.i:                               ; preds = %for.body.i933
  %147 = getelementptr inbounds %union.tree_node* %145, i64 0, i32 0, i32 15
  %148 = load %union.tree_node** %147, align 8, !tbaa !67
  %149 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp662.i = icmp eq %union.tree_node* %148, %149
  br i1 %cmp662.i, label %if.end665.i, label %if.then664.i

if.then664.i:                                     ; preds = %land.lhs.true659.i
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([87 x i8]* @.str339, i64 0, i64 0)) #5
  br label %if.end673.i

if.end665.i:                                      ; preds = %land.lhs.true659.i, %for.body.i933
  %call666.i = tail call %union.tree_node* @simple_type_promotes_to(%union.tree_node* %145) #5
  %cmp667.i = icmp eq %union.tree_node* %call666.i, null
  br i1 %cmp667.i, label %for.inc.i, label %if.then669.i

if.then669.i:                                     ; preds = %if.end665.i
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([99 x i8]* @.str340, i64 0, i64 0)) #5
  br label %if.end673.i

for.inc.i:                                        ; preds = %if.end665.i
  %150 = load %union.tree_node** %chain656.i, align 8, !tbaa !29
  %tobool651.i = icmp eq %union.tree_node* %150, null
  br i1 %tobool651.i, label %if.end673.i, label %for.body.i933

if.end673.i:                                      ; preds = %for.inc.i, %land.lhs.true637.i, %if.then669.i, %if.then664.i, %for.cond.preheader.i, %lor.lhs.false632.i, %land.lhs.true615.i, %if.then608.i
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.2, i8* getelementptr inbounds ([29 x i8]* @.str139, i64 0, i64 0)) #5
  br label %if.end989.i

if.else674.i:                                     ; preds = %land.lhs.true603.i.if.else674.i_crit_edge, %if.else464.i
  %bf.load.i.i = phi i32 [ %bf.load.i.i.pre, %land.lhs.true603.i.if.else674.i_crit_edge ], [ %bf.load159.i, %if.else464.i ]
  %bf.clear.i.i = and i32 %bf.load.i.i, 255
  switch i32 %bf.clear.i.i, label %if.else71.i.i [
    i32 33, label %if.then.i.i
    i32 30, label %if.then33.i.i
  ]

if.then.i.i:                                      ; preds = %if.else674.i
  %151 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool.i.i = icmp eq i32 %151, 0
  br i1 %tobool.i.i, label %if.end15.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %if.then.i.i
  %152 = load %union.tree_node** %type.i, align 8, !tbaa !23
  %153 = load %union.tree_node** %type2.i, align 8, !tbaa !23
  %cmp4.i.i = icmp eq %union.tree_node* %152, %153
  br i1 %cmp4.i.i, label %land.lhs.true695.i, label %land.lhs.true7.i.i

land.lhs.true7.i.i:                               ; preds = %land.lhs.true.i.i
  %154 = getelementptr inbounds %union.tree_node* %153, i64 0, i32 0, i32 15
  %155 = load %union.tree_node** %154, align 8, !tbaa !67
  %cmp13.i.i = icmp eq %union.tree_node* %155, %152
  br i1 %cmp13.i.i, label %if.else688.i, label %if.end15.i.i

if.end15.i.i:                                     ; preds = %land.lhs.true7.i.i, %if.then.i.i
  %in_system_header_flag.i.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %156 = bitcast i48* %in_system_header_flag.i.i to i64*
  %bf.load16.i.i = load i64* %156, align 8
  %bf.cast.i.i = and i64 %bf.load16.i.i, 65536
  %tobool18.i.i = icmp eq i64 %bf.cast.i.i, 0
  br i1 %tobool18.i.i, label %lor.lhs.false.i.i, label %if.else688.i

lor.lhs.false.i.i:                                ; preds = %if.end15.i.i
  %in_system_header_flag20.i.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %157 = bitcast i48* %in_system_header_flag20.i.i to i64*
  %bf.load21.i.i = load i64* %157, align 8
  %bf.cast24.i.i = lshr i64 %bf.load21.i.i, 16
  %bf.cast24.lobit.i.i = and i64 %bf.cast24.i.i, 1
  %158 = xor i64 %bf.cast24.lobit.i.i, 1
  %.180.i.i = trunc i64 %158 to i32
  br label %redeclaration_error_message.exit.i

if.then33.i.i:                                    ; preds = %if.else674.i
  %initial.i.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %159 = load %union.tree_node** %initial.i.i, align 8, !tbaa !40
  %cmp35.i.i = icmp eq %union.tree_node* %159, null
  br i1 %cmp35.i.i, label %if.else721.i, label %land.lhs.true36.i.i

land.lhs.true36.i.i:                              ; preds = %if.then33.i.i
  %initial38.i.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 12
  %160 = load %union.tree_node** %initial38.i.i, align 8, !tbaa !40
  %cmp39.i.i = icmp eq %union.tree_node* %160, null
  br i1 %cmp39.i.i, label %if.else721.i, label %land.lhs.true40.i.i

land.lhs.true40.i.i:                              ; preds = %land.lhs.true36.i.i
  %lang_specific.i.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 24
  %161 = load %struct.lang_decl** %lang_specific.i.i, align 8, !tbaa !58
  %162 = getelementptr inbounds %struct.lang_decl* %161, i64 0, i32 0, i32 0
  %bf.load42.i.i = load i8* %162, align 4
  %bf.clear43.i.i = and i8 %bf.load42.i.i, 1
  %tobool45.i.i = icmp eq i8 %bf.clear43.i.i, 0
  br i1 %tobool45.i.i, label %sw.bb.i, label %land.lhs.true46.i.i

land.lhs.true46.i.i:                              ; preds = %land.lhs.true40.i.i
  %external_flag.i.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %163 = bitcast i48* %external_flag.i.i to i64*
  %bf.load48.i.i = load i64* %163, align 8
  %bf.cast51.i.i = and i64 %bf.load48.i.i, 256
  %tobool52.i.i = icmp eq i64 %bf.cast51.i.i, 0
  br i1 %tobool52.i.i, label %sw.bb.i, label %land.lhs.true53.i.i

land.lhs.true53.i.i:                              ; preds = %land.lhs.true46.i.i
  %lang_specific55.i.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 24
  %164 = load %struct.lang_decl** %lang_specific55.i.i, align 8, !tbaa !58
  %165 = getelementptr inbounds %struct.lang_decl* %164, i64 0, i32 0, i32 0
  %bf.load57.i.i = load i8* %165, align 4
  %bf.clear58.i.i = and i8 %bf.load57.i.i, 1
  %tobool60.i.i = icmp eq i8 %bf.clear58.i.i, 0
  br i1 %tobool60.i.i, label %if.else688.i, label %land.lhs.true61.i.i

land.lhs.true61.i.i:                              ; preds = %land.lhs.true53.i.i
  %external_flag63.i.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %166 = bitcast i48* %external_flag63.i.i to i64*
  %bf.load64.i.i = load i64* %166, align 8
  %bf.cast67.i.i = and i64 %bf.load64.i.i, 256
  %tobool68.i.i = icmp eq i64 %bf.cast67.i.i, 0
  br i1 %tobool68.i.i, label %if.else688.i, label %sw.bb.i

if.else71.i.i:                                    ; preds = %if.else674.i
  %167 = load %union.tree_node** %context, align 8, !tbaa !53
  %cmp73.i.i = icmp eq %union.tree_node* %167, null
  br i1 %cmp73.i.i, label %if.then74.i.i, label %if.else113.i.i

if.then74.i.i:                                    ; preds = %if.else71.i.i
  %external_flag76.i.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %168 = bitcast i48* %external_flag76.i.i to i64*
  %bf.load77.i.i = load i64* %168, align 8
  %bf.cast80.i.i = and i64 %bf.load77.i.i, 256
  %tobool81.i.i = icmp eq i64 %bf.cast80.i.i, 0
  br i1 %tobool81.i.i, label %lor.lhs.false82.i.i, label %if.else688.i

lor.lhs.false82.i.i:                              ; preds = %if.then74.i.i
  %external_flag84.i.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %169 = bitcast i48* %external_flag84.i.i to i64*
  %bf.load85.i.i = load i64* %169, align 8
  %bf.cast88.i.i = and i64 %bf.load85.i.i, 256
  %tobool89.i.i = icmp eq i64 %bf.cast88.i.i, 0
  br i1 %tobool89.i.i, label %if.end91.i.i, label %if.else688.i

if.end91.i.i:                                     ; preds = %lor.lhs.false82.i.i
  %initial93.i.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %170 = load %union.tree_node** %initial93.i.i, align 8, !tbaa !40
  %cmp94.i.i = icmp eq %union.tree_node* %170, null
  br i1 %cmp94.i.i, label %if.end100.i.i, label %land.lhs.true95.i.i

land.lhs.true95.i.i:                              ; preds = %if.end91.i.i
  %initial97.i.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 12
  %171 = load %union.tree_node** %initial97.i.i, align 8, !tbaa !40
  %cmp98.i.i = icmp eq %union.tree_node* %171, null
  br i1 %cmp98.i.i, label %if.end100.i.i, label %sw.bb.i

if.end100.i.i:                                    ; preds = %land.lhs.true95.i.i, %if.end91.i.i
  %bf.load102.i.i = load i32* %code10.i, align 8
  %bf.lshr103179.i.i = xor i32 %bf.load102.i.i, %bf.load.i.i
  %172 = and i32 %bf.lshr103179.i.i, 524288
  %cmp110.i.i = icmp eq i32 %172, 0
  %..i.i = select i1 %cmp110.i.i, i32 0, i32 3
  br label %redeclaration_error_message.exit.i

if.else113.i.i:                                   ; preds = %if.else71.i.i
  %173 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %parm_flag.i.i = getelementptr inbounds %struct.binding_level* %173, i64 0, i32 6
  %174 = load i8* %parm_flag.i.i, align 1, !tbaa !37
  %tobool114.i.i = icmp eq i8 %174, 0
  br i1 %tobool114.i.i, label %if.else129.i.i, label %land.lhs.true115.i.i

land.lhs.true115.i.i:                             ; preds = %if.else113.i.i
  %bf.load117.i.i = load i32* %code10.i, align 8
  %bf.clear119.i.i = and i32 %bf.load117.i.i, 16384
  %tobool120.i.i = icmp ne i32 %bf.clear119.i.i, 0
  %bf.clear126.i.i = and i32 %bf.load.i.i, 16384
  %tobool127.i.i = icmp eq i32 %bf.clear126.i.i, 0
  %or.cond.i.i = and i1 %tobool120.i.i, %tobool127.i.i
  br i1 %or.cond.i.i, label %if.else688.i, label %if.else129.i.i

if.else129.i.i:                                   ; preds = %land.lhs.true115.i.i, %if.else113.i.i
  %external_flag131.i.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %175 = bitcast i48* %external_flag131.i.i to i64*
  %bf.load132.i.i = load i64* %175, align 8
  %bf.cast135.i.i = and i64 %bf.load132.i.i, 256
  %tobool136.i.i = icmp eq i64 %bf.cast135.i.i, 0
  br i1 %tobool136.i.i, label %land.lhs.true145.i.i, label %land.lhs.true137.i.i

land.lhs.true137.i.i:                             ; preds = %if.else129.i.i
  %external_flag139.i.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %176 = bitcast i48* %external_flag139.i.i to i64*
  %bf.load140.i.i = load i64* %176, align 8
  %bf.cast143.i.i = and i64 %bf.load140.i.i, 256
  %tobool144.i.i = icmp eq i64 %bf.cast143.i.i, 0
  br i1 %tobool144.i.i, label %land.lhs.true145.i.i, label %if.else688.i

land.lhs.true145.i.i:                             ; preds = %land.lhs.true137.i.i, %if.else129.i.i
  %context149.i.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 9
  %177 = load %union.tree_node** %context149.i.i, align 8, !tbaa !53
  %cmp150.i.i = icmp eq %union.tree_node* %167, %177
  br i1 %cmp150.i.i, label %sw.bb678.i, label %if.else688.i

redeclaration_error_message.exit.i:               ; preds = %if.end100.i.i, %lor.lhs.false.i.i
  %call6752258.i = phi i32 [ %.180.i.i, %lor.lhs.false.i.i ], [ %..i.i, %if.end100.i.i ]
  switch i32 %call6752258.i, label %sw.default.i [
    i32 0, label %if.else688.i
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb678.i
    i32 3, label %sw.bb679.i
  ]

sw.bb.i:                                          ; preds = %redeclaration_error_message.exit.i, %land.lhs.true95.i.i, %land.lhs.true61.i.i, %land.lhs.true46.i.i, %land.lhs.true40.i.i
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([21 x i8]* @.str341, i64 0, i64 0)) #5
  br label %sw.epilog.i

sw.bb678.i:                                       ; preds = %redeclaration_error_message.exit.i, %land.lhs.true145.i.i
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([22 x i8]* @.str342, i64 0, i64 0)) #5
  br label %sw.epilog.i

sw.bb679.i:                                       ; preds = %redeclaration_error_message.exit.i
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([33 x i8]* @.str343, i64 0, i64 0)) #5
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %redeclaration_error_message.exit.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str185, i64 0, i64 0), i32 1686, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.duplicate_decls, i64 0, i64 0)) #8
  unreachable

sw.epilog.i:                                      ; preds = %sw.bb679.i, %sw.bb678.i, %sw.bb.i
  %initial681.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %178 = load %union.tree_node** %initial681.i, align 8, !tbaa !40
  %tobool682.i = icmp eq %union.tree_node* %178, null
  br i1 %tobool682.i, label %land.end686.i, label %land.rhs683.i

land.rhs683.i:                                    ; preds = %sw.epilog.i
  %179 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %180 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp684.i = icmp eq %struct.binding_level* %179, %180
  %phitmp2241.i = select i1 %cmp684.i, i8* getelementptr inbounds ([29 x i8]* @.str344, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @.str345, i64 0, i64 0)
  br label %land.end686.i

land.end686.i:                                    ; preds = %land.rhs683.i, %sw.epilog.i
  %181 = phi i8* [ getelementptr inbounds ([30 x i8]* @.str345, i64 0, i64 0), %sw.epilog.i ], [ %phitmp2241.i, %land.rhs683.i ]
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.2, i8* %181) #5
  br label %if.end148

if.else688.i:                                     ; preds = %redeclaration_error_message.exit.i, %land.lhs.true145.i.i, %land.lhs.true137.i.i, %land.lhs.true115.i.i, %lor.lhs.false82.i.i, %if.then74.i.i, %land.lhs.true61.i.i, %land.lhs.true53.i.i, %if.end15.i.i, %land.lhs.true7.i.i
  %cmp693.i = icmp eq i32 %bf.clear.i.i, 33
  br i1 %cmp693.i, label %land.lhs.true695.i, label %if.else721.i

land.lhs.true695.i:                               ; preds = %if.else688.i, %land.lhs.true.i.i
  %in_system_header_flag697.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %182 = bitcast i48* %in_system_header_flag697.i to i64*
  %bf.load698.i = load i64* %182, align 8
  %bf.cast701.i = and i64 %bf.load698.i, 65536
  %tobool702.i = icmp eq i64 %bf.cast701.i, 0
  br i1 %tobool702.i, label %lor.lhs.false703.i, label %if.then711.i

lor.lhs.false703.i:                               ; preds = %land.lhs.true695.i
  %in_system_header_flag705.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %183 = bitcast i48* %in_system_header_flag705.i to i64*
  %bf.load706.i = load i64* %183, align 8
  %bf.cast709.i = and i64 %bf.load706.i, 65536
  %tobool710.i = icmp eq i64 %bf.cast709.i, 0
  br i1 %tobool710.i, label %if.else721.i, label %if.then711.i

if.then711.i:                                     ; preds = %lor.lhs.false703.i, %land.lhs.true695.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([21 x i8]* @.str341, i64 0, i64 0)) #5
  %initial713.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %184 = load %union.tree_node** %initial713.i, align 8, !tbaa !40
  %tobool714.i = icmp eq %union.tree_node* %184, null
  br i1 %tobool714.i, label %land.end718.i, label %land.rhs715.i

land.rhs715.i:                                    ; preds = %if.then711.i
  %185 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %186 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp716.i = icmp eq %struct.binding_level* %185, %186
  %phitmp.i = select i1 %cmp716.i, i8* getelementptr inbounds ([29 x i8]* @.str344, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @.str345, i64 0, i64 0)
  br label %land.end718.i

land.end718.i:                                    ; preds = %land.rhs715.i, %if.then711.i
  %187 = phi i8* [ getelementptr inbounds ([30 x i8]* @.str345, i64 0, i64 0), %if.then711.i ], [ %phitmp.i, %land.rhs715.i ]
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %t.2, i8* %187) #5
  br label %if.end989.i

if.else721.i:                                     ; preds = %lor.lhs.false703.i, %if.else688.i, %land.lhs.true36.i.i, %if.then33.i.i
  %bf.load724.i = load i32* %code10.i, align 8
  %bf.clear725.i = and i32 %bf.load724.i, 255
  %cmp726.i = icmp eq i32 %bf.clear725.i, 30
  br i1 %cmp726.i, label %land.lhs.true728.i, label %if.end844.i

land.lhs.true728.i:                               ; preds = %if.else721.i
  %initial730.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %188 = load %union.tree_node** %initial730.i, align 8, !tbaa !40
  %cmp731.i = icmp eq %union.tree_node* %188, null
  br i1 %cmp731.i, label %land.lhs.true821.i, label %land.lhs.true733.i

land.lhs.true733.i:                               ; preds = %land.lhs.true728.i
  %values735.i = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 1
  %189 = load i8** %values735.i, align 8
  %cmp736.i = icmp eq i8* %189, null
  br i1 %cmp736.i, label %land.lhs.true738.i, label %land.lhs.true821.i

land.lhs.true738.i:                               ; preds = %land.lhs.true733.i
  %values740.i = getelementptr inbounds %union.tree_node* %43, i64 0, i32 0, i32 1
  %190 = load i8** %values740.i, align 8
  %cmp741.i = icmp eq i8* %190, null
  br i1 %cmp741.i, label %land.lhs.true821.i, label %land.lhs.true743.i

land.lhs.true743.i:                               ; preds = %land.lhs.true738.i
  %191 = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 16
  %192 = load %union.tree_node** %191, align 8, !tbaa !68
  %cmp745.i = icmp eq %union.tree_node* %192, null
  br i1 %cmp745.i, label %land.lhs.true821.i, label %for.cond753.preheader.i

for.cond753.preheader.i:                          ; preds = %land.lhs.true743.i
  %value755.i982 = getelementptr inbounds %union.tree_node* %192, i64 0, i32 0, i32 2
  %193 = bitcast i32* %value755.i982 to %union.tree_node**
  %194 = load %union.tree_node** %193, align 8, !tbaa !50
  %195 = getelementptr inbounds %union.tree_node* %194, i64 0, i32 0, i32 15
  %196 = load %union.tree_node** %195, align 8, !tbaa !67
  %197 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp758.i983 = icmp eq %union.tree_node* %196, %197
  %value762.i984 = getelementptr inbounds i8* %190, i64 32
  %198 = bitcast i8* %value762.i984 to %union.tree_node**
  %199 = load %union.tree_node** %198, align 8, !tbaa !50
  %200 = getelementptr inbounds %union.tree_node* %199, i64 0, i32 0, i32 15
  %201 = load %union.tree_node** %200, align 8, !tbaa !67
  br i1 %cmp758.i983, label %land.lhs.true760.i, label %lor.lhs.false775.i.lr.ph

lor.lhs.false775.i.lr.ph:                         ; preds = %for.cond753.preheader.i
  %202 = bitcast i8* %190 to %union.tree_node*
  br label %lor.lhs.false775.i

land.lhs.true760.i:                               ; preds = %for.inc808.i, %for.cond753.preheader.i
  %.lcssa970 = phi %union.tree_node* [ %201, %for.cond753.preheader.i ], [ %228, %for.inc808.i ]
  %.lcssa = phi %union.tree_node* [ %196, %for.cond753.preheader.i ], [ %223, %for.inc808.i ]
  %cmp765.i = icmp eq %union.tree_node* %.lcssa970, %.lcssa
  br i1 %cmp765.i, label %if.then767.i, label %if.then782.i

if.then767.i:                                     ; preds = %land.lhs.true760.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([27 x i8]* @.str346, i64 0, i64 0)) #5
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %t.2, i8* getelementptr inbounds ([30 x i8]* @.str347, i64 0, i64 0)) #5
  br label %if.end989.i

lor.lhs.false775.i:                               ; preds = %lor.lhs.false775.i.lr.ph, %for.inc808.i
  %203 = phi %union.tree_node* [ %201, %lor.lhs.false775.i.lr.ph ], [ %228, %for.inc808.i ]
  %204 = phi %union.tree_node* [ %199, %lor.lhs.false775.i.lr.ph ], [ %226, %for.inc808.i ]
  %205 = phi %union.tree_node** [ %198, %lor.lhs.false775.i.lr.ph ], [ %225, %for.inc808.i ]
  %206 = phi %union.tree_node* [ %197, %lor.lhs.false775.i.lr.ph ], [ %224, %for.inc808.i ]
  %207 = phi %union.tree_node* [ %194, %lor.lhs.false775.i.lr.ph ], [ %221, %for.inc808.i ]
  %208 = phi %union.tree_node** [ %193, %lor.lhs.false775.i.lr.ph ], [ %220, %for.inc808.i ]
  %nargs.0.i987 = phi i32 [ 1, %lor.lhs.false775.i.lr.ph ], [ %inc.i, %for.inc808.i ]
  %parm.0.i986 = phi %union.tree_node* [ %192, %lor.lhs.false775.i.lr.ph ], [ %218, %for.inc808.i ]
  %type748.0.i985 = phi %union.tree_node* [ %202, %lor.lhs.false775.i.lr.ph ], [ %219, %for.inc808.i ]
  %cmp780.i = icmp eq %union.tree_node* %203, %206
  br i1 %cmp780.i, label %if.then782.i, label %if.end783.i

if.then782.i:                                     ; preds = %lor.lhs.false775.i, %land.lhs.true760.i
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([65 x i8]* @.str348, i64 0, i64 0)) #5
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.2, i8* getelementptr inbounds ([30 x i8]* @.str347, i64 0, i64 0)) #5
  br label %if.end1032.i

if.end783.i:                                      ; preds = %lor.lhs.false775.i
  %call788.i = tail call i32 @comptypes(%union.tree_node* %207, %union.tree_node* %204) #5
  %tobool789.i = icmp eq i32 %call788.i, 0
  br i1 %tobool789.i, label %land.lhs.true790.i, label %for.inc808.i

land.lhs.true790.i:                               ; preds = %if.end783.i
  %209 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool791.i = icmp eq i32 %209, 0
  br i1 %tobool791.i, label %if.then806.i, label %land.lhs.true792.i

land.lhs.true792.i:                               ; preds = %land.lhs.true790.i
  %210 = load %union.tree_node** %208, align 8, !tbaa !50
  %211 = getelementptr inbounds %union.tree_node* %210, i64 0, i32 0, i32 15
  %212 = load %union.tree_node** %211, align 8, !tbaa !67
  %213 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %cmp797.i = icmp eq %union.tree_node* %212, %213
  br i1 %cmp797.i, label %land.lhs.true799.i, label %if.then806.i

land.lhs.true799.i:                               ; preds = %land.lhs.true792.i
  %214 = load %union.tree_node** %205, align 8, !tbaa !50
  %215 = getelementptr inbounds %union.tree_node* %214, i64 0, i32 0, i32 15
  %216 = load %union.tree_node** %215, align 8, !tbaa !67
  %217 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !1
  %cmp804.i = icmp eq %union.tree_node* %216, %217
  br i1 %cmp804.i, label %for.inc808.i, label %if.then806.i

if.then806.i:                                     ; preds = %land.lhs.true799.i, %land.lhs.true792.i, %land.lhs.true790.i
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([57 x i8]* @.str349, i64 0, i64 0), i32 %nargs.0.i987) #5
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.2, i8* getelementptr inbounds ([30 x i8]* @.str347, i64 0, i64 0)) #5
  br label %if.end1032.i

for.inc808.i:                                     ; preds = %land.lhs.true799.i, %if.end783.i
  %chain810.i = getelementptr inbounds %union.tree_node* %parm.0.i986, i64 0, i32 0, i32 0, i32 0
  %218 = load %union.tree_node** %chain810.i, align 8, !tbaa !29
  %chain812.i = getelementptr inbounds %union.tree_node* %type748.0.i985, i64 0, i32 0, i32 0, i32 0
  %219 = load %union.tree_node** %chain812.i, align 8, !tbaa !29
  %inc.i = add nsw i32 %nargs.0.i987, 1
  %value755.i = getelementptr inbounds %union.tree_node* %218, i64 0, i32 0, i32 2
  %220 = bitcast i32* %value755.i to %union.tree_node**
  %221 = load %union.tree_node** %220, align 8, !tbaa !50
  %222 = getelementptr inbounds %union.tree_node* %221, i64 0, i32 0, i32 15
  %223 = load %union.tree_node** %222, align 8, !tbaa !67
  %224 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp758.i = icmp eq %union.tree_node* %223, %224
  %value762.i = getelementptr inbounds %union.tree_node* %219, i64 0, i32 0, i32 2
  %225 = bitcast i32* %value762.i to %union.tree_node**
  %226 = load %union.tree_node** %225, align 8, !tbaa !50
  %227 = getelementptr inbounds %union.tree_node* %226, i64 0, i32 0, i32 15
  %228 = load %union.tree_node** %227, align 8, !tbaa !67
  br i1 %cmp758.i, label %land.lhs.true760.i, label %lor.lhs.false775.i

land.lhs.true821.i:                               ; preds = %land.lhs.true733.i, %land.lhs.true738.i, %land.lhs.true743.i, %land.lhs.true728.i
  %lang_specific823.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 24
  %229 = load %struct.lang_decl** %lang_specific823.i, align 8, !tbaa !58
  %230 = getelementptr inbounds %struct.lang_decl* %229, i64 0, i32 0, i32 0
  %bf.load825.i = load i8* %230, align 4
  %bf.clear826.i = and i8 %bf.load825.i, 1
  %tobool828.i = icmp eq i8 %bf.clear826.i, 0
  br i1 %tobool828.i, label %land.lhs.true829.i, label %if.end844.i

land.lhs.true829.i:                               ; preds = %land.lhs.true821.i
  %lang_specific831.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 24
  %231 = load %struct.lang_decl** %lang_specific831.i, align 8, !tbaa !58
  %232 = getelementptr inbounds %struct.lang_decl* %231, i64 0, i32 0, i32 0
  %bf.load833.i = load i8* %232, align 4
  %bf.clear834.i = and i8 %bf.load833.i, 1
  %tobool836.i = icmp eq i8 %bf.clear834.i, 0
  %bf.clear841.i = and i32 %bf.load724.i, 65536
  %tobool842.i = icmp eq i32 %bf.clear841.i, 0
  %or.cond2253.i = or i1 %tobool836.i, %tobool842.i
  br i1 %or.cond2253.i, label %if.end844.i, label %if.then843.i

if.then843.i:                                     ; preds = %land.lhs.true829.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([40 x i8]* @.str350, i64 0, i64 0)) #5
  %bf.load847.pre.i = load i32* %code10.i, align 8
  br label %if.end844.i

if.end844.i:                                      ; preds = %if.then843.i, %land.lhs.true829.i, %land.lhs.true821.i, %if.else721.i
  %bf.load878.i1002 = phi i32 [ %bf.load724.i, %land.lhs.true829.i ], [ %bf.load724.i, %land.lhs.true821.i ], [ %bf.load847.pre.i, %if.then843.i ], [ %bf.load724.i, %if.else721.i ]
  %bf.clear848.i = and i32 %bf.load878.i1002, 255
  %cmp849.i = icmp eq i32 %bf.clear848.i, 30
  br i1 %cmp849.i, label %land.lhs.true851.i, label %if.end873.i

land.lhs.true851.i:                               ; preds = %if.end844.i
  %lang_specific853.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 24
  %233 = load %struct.lang_decl** %lang_specific853.i, align 8, !tbaa !58
  %234 = getelementptr inbounds %struct.lang_decl* %233, i64 0, i32 0, i32 0
  %bf.load855.i = load i8* %234, align 4
  %bf.clear856.i = and i8 %bf.load855.i, 1
  %tobool858.i = icmp eq i8 %bf.clear856.i, 0
  br i1 %tobool858.i, label %land.lhs.true859.i, label %if.end873.i

land.lhs.true859.i:                               ; preds = %land.lhs.true851.i
  %lang_specific861.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 24
  %235 = load %struct.lang_decl** %lang_specific861.i, align 8, !tbaa !58
  %236 = getelementptr inbounds %struct.lang_decl* %235, i64 0, i32 0, i32 0
  %bf.load863.i = load i8* %236, align 4
  %bf.clear864.i = and i8 %bf.load863.i, 1
  %tobool866.i = icmp eq i8 %bf.clear864.i, 0
  br i1 %tobool866.i, label %if.end873.i, label %land.lhs.true867.i

land.lhs.true867.i:                               ; preds = %land.lhs.true859.i
  %initial869.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %237 = load %union.tree_node** %initial869.i, align 8, !tbaa !40
  %cmp870.i = icmp eq %union.tree_node* %237, null
  br i1 %cmp870.i, label %if.end873.i, label %if.then872.i

if.then872.i:                                     ; preds = %land.lhs.true867.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([42 x i8]* @.str351, i64 0, i64 0)) #5
  %bf.load878.i.pre = load i32* %code10.i, align 8
  br label %if.end873.i

if.end873.i:                                      ; preds = %if.then872.i, %land.lhs.true867.i, %land.lhs.true859.i, %land.lhs.true851.i, %if.end844.i
  %bf.load878.i = phi i32 [ %bf.load878.i.pre, %if.then872.i ], [ %bf.load878.i1002, %land.lhs.true867.i ], [ %bf.load878.i1002, %land.lhs.true859.i ], [ %bf.load878.i1002, %land.lhs.true851.i ], [ %bf.load878.i1002, %if.end844.i ]
  %238 = load i32* @pedantic, align 4, !tbaa !5
  %bf.clear879.i = and i32 %bf.load878.i, 255
  %notlhs.i = icmp eq i32 %238, 0
  %notrhs.i = icmp ne i32 %bf.clear879.i, 30
  %or.cond2297.not.i = and i1 %notrhs.i, %notlhs.i
  %bf.clear887.i = and i32 %bf.load878.i, 524288
  %tobool888.i = icmp eq i32 %bf.clear887.i, 0
  %or.cond2298.i = or i1 %or.cond2297.not.i, %tobool888.i
  br i1 %or.cond2298.i, label %if.end897.i, label %land.lhs.true889.i

land.lhs.true889.i:                               ; preds = %if.end873.i
  %bf.load892.i = load i32* %code, align 8
  %bf.clear894.i = and i32 %bf.load892.i, 524288
  %tobool895.i = icmp eq i32 %bf.clear894.i, 0
  br i1 %tobool895.i, label %if.then896.i, label %if.end897.i

if.then896.i:                                     ; preds = %land.lhs.true889.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([47 x i8]* @.str352, i64 0, i64 0)) #5
  br label %if.end897.i

if.end897.i:                                      ; preds = %if.then896.i, %land.lhs.true889.i, %if.end873.i
  %239 = load i32* @warn_traditional, align 4, !tbaa !5
  %tobool898.i = icmp eq i32 %239, 0
  %240 = load i32* @in_system_header, align 4
  %tobool900.i = icmp ne i32 %240, 0
  %or.cond1840.i = or i1 %tobool898.i, %tobool900.i
  br i1 %or.cond1840.i, label %if.end923.i, label %land.lhs.true901.i

land.lhs.true901.i:                               ; preds = %if.end897.i
  %bf.load904.i = load i32* %code10.i, align 8
  %241 = and i32 %bf.load904.i, 524543
  %242 = icmp eq i32 %241, 30
  br i1 %242, label %land.lhs.true915.i, label %if.end923.i

land.lhs.true915.i:                               ; preds = %land.lhs.true901.i
  %bf.load918.i = load i32* %code, align 8
  %bf.clear920.i = and i32 %bf.load918.i, 524288
  %tobool921.i = icmp eq i32 %bf.clear920.i, 0
  br i1 %tobool921.i, label %if.end923.i, label %if.then922.i

if.then922.i:                                     ; preds = %land.lhs.true915.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([47 x i8]* @.str353, i64 0, i64 0)) #5
  br label %if.end923.i

if.end923.i:                                      ; preds = %if.then922.i, %land.lhs.true915.i, %land.lhs.true901.i, %if.end897.i
  %bf.load926.i = load i32* %code10.i, align 8
  %bf.clear927.i = and i32 %bf.load926.i, 255
  %cmp928.i = icmp ne i32 %bf.clear927.i, 30
  %bf.clear934.i = and i32 %bf.load926.i, 4096
  %tobool935.i = icmp eq i32 %bf.clear934.i, 0
  %or.cond2255.i = and i1 %cmp928.i, %tobool935.i
  br i1 %or.cond2255.i, label %land.lhs.true936.i, label %if.else944.i

land.lhs.true936.i:                               ; preds = %if.end923.i
  %bf.load939.i = load i32* %code, align 8
  %bf.clear941.i = and i32 %bf.load939.i, 4096
  %tobool942.i = icmp eq i32 %bf.clear941.i, 0
  br i1 %tobool942.i, label %if.else944.i, label %if.then943.i

if.then943.i:                                     ; preds = %land.lhs.true936.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([45 x i8]* @.str354, i64 0, i64 0)) #5
  br label %if.end989.i

if.else944.i:                                     ; preds = %land.lhs.true936.i, %if.end923.i
  %243 = load i32* @pedantic, align 4, !tbaa !5
  %tobool945.i = icmp eq i32 %243, 0
  %cmp951.i = icmp eq i32 %bf.clear927.i, 30
  %or.cond2299.i = or i1 %tobool945.i, %cmp951.i
  br i1 %or.cond2299.i, label %if.end989.i, label %land.lhs.true953.i

land.lhs.true953.i:                               ; preds = %if.else944.i
  %bf.load956.i = load i32* %code, align 8
  %bf.lshr9572244.i = xor i32 %bf.load956.i, %bf.load926.i
  %244 = and i32 %bf.lshr9572244.i, 6144
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %if.end989.i, label %if.then979.i

if.then979.i:                                     ; preds = %land.lhs.true953.i
  tail call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([53 x i8]* @.str355, i64 0, i64 0)) #5
  br label %if.end989.i

if.end989.i:                                      ; preds = %if.then979.i, %land.lhs.true953.i, %if.else944.i, %if.then943.i, %if.then767.i, %land.end718.i, %if.end673.i, %if.end579.i, %if.then450.i, %if.else448.i, %if.end425.i, %land.lhs.true266.i
  %newtype.1.i = phi %union.tree_node* [ %43, %land.lhs.true266.i ], [ %43, %if.end425.i ], [ %43, %if.else448.i ], [ %43, %if.then450.i ], [ %43, %land.end718.i ], [ %43, %if.then767.i ], [ %43, %if.then979.i ], [ %43, %if.else944.i ], [ %43, %if.then943.i ], [ %43, %if.end673.i ], [ %newtype.0.i, %if.end579.i ], [ %43, %land.lhs.true953.i ]
  %oldtype.3.i = phi %union.tree_node* [ %42, %land.lhs.true266.i ], [ %oldtype.2.i, %if.end425.i ], [ %42, %if.else448.i ], [ %42, %if.then450.i ], [ %42, %land.end718.i ], [ %42, %if.then767.i ], [ %42, %if.then979.i ], [ %42, %if.else944.i ], [ %42, %if.then943.i ], [ %42, %if.end673.i ], [ %42, %if.end579.i ], [ %42, %land.lhs.true953.i ]
  %types_match.4.i = phi i32 [ %types_match.0.i, %land.lhs.true266.i ], [ %types_match.3.i, %if.end425.i ], [ %types_match.0.i, %if.else448.i ], [ 0, %if.then450.i ], [ %types_match.0.i, %land.end718.i ], [ %types_match.0.i, %if.then767.i ], [ %types_match.0.i, %if.then979.i ], [ %types_match.0.i, %if.else944.i ], [ %types_match.0.i, %if.then943.i ], [ 0, %if.end673.i ], [ 0, %if.end579.i ], [ %types_match.0.i, %land.lhs.true953.i ]
  %246 = load i32* @warn_redundant_decls, align 4
  %tobool993.i = icmp eq i32 %246, 0
  br i1 %tobool993.i, label %if.end1032.i, label %land.lhs.true994.i

land.lhs.true994.i:                               ; preds = %if.end989.i
  %linenum996.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 2
  %247 = load i32* %linenum996.i, align 4, !tbaa !55
  %cmp997.i = icmp eq i32 %247, 0
  br i1 %cmp997.i, label %if.end1032.i, label %land.lhs.true999.i

land.lhs.true999.i:                               ; preds = %land.lhs.true994.i
  %bf.load1002.i = load i32* %code, align 8
  %bf.clear1003.i = and i32 %bf.load1002.i, 255
  %cmp1004.i = icmp eq i32 %bf.clear1003.i, 30
  br i1 %cmp1004.i, label %land.lhs.true1006.i, label %land.lhs.true1016.i

land.lhs.true1006.i:                              ; preds = %land.lhs.true999.i
  %initial1008.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 12
  %248 = load %union.tree_node** %initial1008.i, align 8, !tbaa !40
  %cmp1009.i = icmp eq %union.tree_node* %248, null
  br i1 %cmp1009.i, label %land.lhs.true1016.i, label %land.lhs.true1011.i

land.lhs.true1011.i:                              ; preds = %land.lhs.true1006.i
  %initial1013.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %249 = load %union.tree_node** %initial1013.i, align 8, !tbaa !40
  %cmp1014.i = icmp eq %union.tree_node* %249, null
  br i1 %cmp1014.i, label %if.end1032.i, label %land.lhs.true1016.i

land.lhs.true1016.i:                              ; preds = %land.lhs.true1011.i, %land.lhs.true1006.i, %land.lhs.true999.i
  %external_flag.i934 = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %250 = bitcast i48* %external_flag.i934 to i64*
  %bf.load1018.i = load i64* %250, align 8
  %bf.cast1021.i = and i64 %bf.load1018.i, 256
  %tobool1022.i = icmp eq i64 %bf.cast1021.i, 0
  br i1 %tobool1022.i, label %if.then1031.i, label %land.lhs.true1023.i

land.lhs.true1023.i:                              ; preds = %land.lhs.true1016.i
  %external_flag1025.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %251 = bitcast i48* %external_flag1025.i to i64*
  %bf.load1026.i = load i64* %251, align 8
  %bf.cast1029.i = and i64 %bf.load1026.i, 256
  %tobool1030.i = icmp eq i64 %bf.cast1029.i, 0
  br i1 %tobool1030.i, label %if.end1032.i, label %if.then1031.i

if.then1031.i:                                    ; preds = %land.lhs.true1023.i, %land.lhs.true1016.i
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([46 x i8]* @.str356, i64 0, i64 0)) #5
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %t.2, i8* getelementptr inbounds ([29 x i8]* @.str139, i64 0, i64 0)) #5
  br label %if.end1032.i

if.end1032.i:                                     ; preds = %if.then1031.i, %land.lhs.true1023.i, %land.lhs.true1011.i, %land.lhs.true994.i, %if.end989.i, %if.then806.i, %if.then782.i
  %cmp9902270.i = phi i1 [ true, %land.lhs.true1023.i ], [ true, %land.lhs.true994.i ], [ true, %if.then1031.i ], [ true, %land.lhs.true1011.i ], [ true, %if.end989.i ], [ false, %if.then782.i ], [ false, %if.then806.i ]
  %types_match.42269.i = phi i32 [ %types_match.4.i, %land.lhs.true1023.i ], [ %types_match.4.i, %land.lhs.true994.i ], [ %types_match.4.i, %if.then1031.i ], [ %types_match.4.i, %land.lhs.true1011.i ], [ %types_match.4.i, %if.end989.i ], [ %types_match.0.i, %if.then782.i ], [ %types_match.0.i, %if.then806.i ]
  %oldtype.32267.i = phi %union.tree_node* [ %oldtype.3.i, %land.lhs.true1023.i ], [ %oldtype.3.i, %land.lhs.true994.i ], [ %oldtype.3.i, %if.then1031.i ], [ %oldtype.3.i, %land.lhs.true1011.i ], [ %oldtype.3.i, %if.end989.i ], [ %42, %if.then782.i ], [ %42, %if.then806.i ]
  %newtype.12266.i = phi %union.tree_node* [ %newtype.1.i, %land.lhs.true1023.i ], [ %newtype.1.i, %land.lhs.true994.i ], [ %newtype.1.i, %if.then1031.i ], [ %newtype.1.i, %land.lhs.true1011.i ], [ %newtype.1.i, %if.end989.i ], [ %43, %if.then782.i ], [ %43, %if.then806.i ]
  %tobool1033.i = icmp eq i32 %types_match.42269.i, 0
  %tobool1035.i = icmp ne i32 %different_binding_level.0950, 0
  br i1 %tobool1033.i, label %if.else1429.i, label %if.then1034.i

if.then1034.i:                                    ; preds = %if.end1032.i
  %cond1036.i = select i1 %tobool1035.i, %union.tree_node* %x, %union.tree_node* %t.2
  %bf.load1039.i = load i32* %code, align 8
  %bf.clear1040.i = and i32 %bf.load1039.i, 255
  %cmp1041.i = icmp eq i32 %bf.clear1040.i, 30
  br i1 %cmp1041.i, label %lor.lhs.false1043.i, label %if.then1052.i

lor.lhs.false1043.i:                              ; preds = %if.then1034.i
  %built_in_class1045.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %252 = bitcast i48* %built_in_class1045.i to i64*
  %bf.load1046.i = load i64* %252, align 8
  %bf.cast1049.i = and i64 %bf.load1046.i, 1610612736
  %cmp1050.i = icmp eq i64 %bf.cast1049.i, 0
  br i1 %cmp1050.i, label %if.then1052.i, label %lor.lhs.false1043.if.end1085_crit_edge.i

lor.lhs.false1043.if.end1085_crit_edge.i:         ; preds = %lor.lhs.false1043.i
  %.pre.i = load %union.tree_node** %type.i, align 8, !tbaa !23
  br label %if.end1085.i

if.then1052.i:                                    ; preds = %lor.lhs.false1043.i, %if.then1034.i
  br i1 %tobool1035.i, label %if.then1054.i, label %if.else1078.i

if.then1054.i:                                    ; preds = %if.then1052.i
  %values1056.i = getelementptr inbounds %union.tree_node* %oldtype.32267.i, i64 0, i32 0, i32 1
  %253 = load i8** %values1056.i, align 8
  %cmp1057.i = icmp eq i8* %253, null
  br i1 %cmp1057.i, label %if.else1068.i, label %land.lhs.true1059.i

land.lhs.true1059.i:                              ; preds = %if.then1054.i
  %values1061.i = getelementptr inbounds %union.tree_node* %newtype.12266.i, i64 0, i32 0, i32 1
  %254 = load i8** %values1061.i, align 8
  %cmp1062.i = icmp eq i8* %254, null
  br i1 %cmp1062.i, label %if.then1064.i, label %if.else1068.i

if.then1064.i:                                    ; preds = %land.lhs.true1059.i
  %call1065.i = tail call %union.tree_node* @common_type(%union.tree_node* %newtype.12266.i, %union.tree_node* %oldtype.32267.i) #5
  store %union.tree_node* %call1065.i, %union.tree_node** %type.i, align 8, !tbaa !23
  br label %if.end1085.i

if.else1068.i:                                    ; preds = %land.lhs.true1059.i, %if.then1054.i
  %attributes1070.i = getelementptr inbounds %union.tree_node* %newtype.12266.i, i64 0, i32 0, i32 5
  %255 = bitcast i48* %attributes1070.i to %union.tree_node**
  %256 = load %union.tree_node** %255, align 8, !tbaa !66
  %attributes1072.i = getelementptr inbounds %union.tree_node* %oldtype.32267.i, i64 0, i32 0, i32 5
  %257 = bitcast i48* %attributes1072.i to %union.tree_node**
  %258 = load %union.tree_node** %257, align 8, !tbaa !66
  %call1073.i = tail call %union.tree_node* @merge_attributes(%union.tree_node* %256, %union.tree_node* %258) #5
  %call1074.i = tail call %union.tree_node* @build_type_attribute_variant(%union.tree_node* %newtype.12266.i, %union.tree_node* %call1073.i) #5
  store %union.tree_node* %call1074.i, %union.tree_node** %type.i, align 8, !tbaa !23
  br label %if.end1085.i

if.else1078.i:                                    ; preds = %if.then1052.i
  %call1079.i = tail call %union.tree_node* @common_type(%union.tree_node* %newtype.12266.i, %union.tree_node* %oldtype.32267.i) #5
  store %union.tree_node* %call1079.i, %union.tree_node** %type2.i, align 8, !tbaa !23
  store %union.tree_node* %call1079.i, %union.tree_node** %type.i, align 8, !tbaa !23
  br label %if.end1085.i

if.end1085.i:                                     ; preds = %if.else1078.i, %if.else1068.i, %if.then1064.i, %lor.lhs.false1043.if.end1085_crit_edge.i
  %259 = phi %union.tree_node* [ %.pre.i, %lor.lhs.false1043.if.end1085_crit_edge.i ], [ %call1079.i, %if.else1078.i ], [ %call1074.i, %if.else1068.i ], [ %call1065.i, %if.then1064.i ]
  %cmp1088.i = icmp eq %union.tree_node* %oldtype.32267.i, %259
  br i1 %cmp1088.i, label %if.else1121.i, label %if.then1090.i

if.then1090.i:                                    ; preds = %if.end1085.i
  %260 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp1093.i = icmp eq %union.tree_node* %259, %260
  br i1 %cmp1093.i, label %if.end1098.i, label %if.then1095.i

if.then1095.i:                                    ; preds = %if.then1090.i
  tail call void @layout_type(%union.tree_node* %259) #5
  br label %if.end1098.i

if.end1098.i:                                     ; preds = %if.then1095.i, %if.then1090.i
  %bf.load1101.i = load i32* %code, align 8
  %bf.clear1102.i = and i32 %bf.load1101.i, 255
  switch i32 %bf.clear1102.i, label %if.then1119.i [
    i32 30, label %if.end1188.i
    i32 33, label %if.end1188.i
    i32 32, label %if.end1188.i
  ]

if.then1119.i:                                    ; preds = %if.end1098.i
  tail call void @layout_decl(%union.tree_node* %x, i32 0) #5
  br label %if.end1188.i

if.else1121.i:                                    ; preds = %if.end1085.i
  %size.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 4
  %261 = load %union.tree_node** %size.i, align 8, !tbaa !69
  %size1124.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 4
  store %union.tree_node* %261, %union.tree_node** %size1124.i, align 8, !tbaa !69
  %size_unit.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 7
  %262 = load %union.tree_node** %size_unit.i, align 8, !tbaa !70
  %size_unit1127.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 7
  store %union.tree_node* %262, %union.tree_node** %size_unit1127.i, align 8, !tbaa !70
  %mode1129.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %263 = bitcast i48* %mode1129.i to i64*
  %bf.load1130.i = load i64* %263, align 8
  %mode1134.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %264 = bitcast i48* %mode1134.i to i64*
  %bf.load1135.i = load i64* %264, align 8
  %bf.value1136.i = and i64 %bf.load1130.i, 255
  %bf.clear1137.i = and i64 %bf.load1135.i, -256
  %bf.set1138.i = or i64 %bf.clear1137.i, %bf.value1136.i
  store i64 %bf.set1138.i, i64* %264, align 8
  %bf.load1141.i = load i32* %code10.i, align 8
  %bf.clear1142.i = and i32 %bf.load1141.i, 255
  %cmp1143.i = icmp eq i32 %bf.clear1142.i, 30
  br i1 %cmp1143.i, label %if.end1188.i, label %if.then1145.i

if.then1145.i:                                    ; preds = %if.else1121.i
  %u1.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 6
  %265 = bitcast %union.anon* %u1.i to i32*
  %bf.load1147.i = load i32* %265, align 4
  %bf.clear1148.i = and i32 %bf.load1147.i, 16777215
  %u11150.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 6
  %266 = bitcast %union.anon* %u11150.i to i32*
  %bf.load1152.i = load i32* %266, align 4
  %bf.clear1153.i = and i32 %bf.load1152.i, 16777215
  %cmp1154.i = icmp ugt i32 %bf.clear1148.i, %bf.clear1153.i
  br i1 %cmp1154.i, label %if.then1156.i, label %if.end1188.i

if.then1156.i:                                    ; preds = %if.then1145.i
  %bf.clear1167.i = and i32 %bf.load1152.i, -16777216
  %bf.set1168.i = or i32 %bf.clear1167.i, %bf.clear1148.i
  store i32 %bf.set1168.i, i32* %266, align 4
  %bf.load1172.i = load i32* %265, align 4
  %bf.lshr1176.i = lshr i64 %bf.load1135.i, 35
  %bf.lshr1176.tr.i = trunc i64 %bf.lshr1176.i to i32
  %or1179.i = or i32 %bf.load1172.i, %bf.lshr1176.tr.i
  %267 = zext i32 %or1179.i to i64
  %bf.value1181.i = shl i64 %267, 35
  %bf.shl1182.i = and i64 %bf.value1181.i, 34359738368
  %bf.clear1183.i = and i64 %bf.set1138.i, -34359738369
  %bf.set1184.i = or i64 %bf.shl1182.i, %bf.clear1183.i
  store i64 %bf.set1184.i, i64* %264, align 8
  br label %if.end1188.i

if.end1188.i:                                     ; preds = %if.then1156.i, %if.then1145.i, %if.else1121.i, %if.then1119.i, %if.end1098.i, %if.end1098.i, %if.end1098.i
  %rtl.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 17
  %268 = load %struct.rtx_def** %rtl.i, align 8, !tbaa !71
  %rtl1191.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 17
  store %struct.rtx_def* %268, %struct.rtx_def** %rtl1191.i, align 8, !tbaa !71
  %bf.load1194.i = load i32* %code10.i, align 8
  %269 = and i32 %bf.load1194.i, 10495
  %270 = icmp eq i32 %269, 10270
  br i1 %270, label %land.lhs.true1212.i, label %if.end1224.i

land.lhs.true1212.i:                              ; preds = %if.end1188.i
  %bf.load1215.i = load i32* %code, align 8
  %bf.clear1217.i = and i32 %bf.load1215.i, 2048
  %tobool1218.i = icmp eq i32 %bf.clear1217.i, 0
  br i1 %tobool1218.i, label %if.then1219.i, label %if.end1224.i

if.then1219.i:                                    ; preds = %land.lhs.true1212.i
  %volatile_flag1221.i = getelementptr inbounds %union.tree_node* %cond1036.i, i64 0, i32 0, i32 0, i32 2
  %bf.load1222.i = load i32* %volatile_flag1221.i, align 8
  %bf.clear1223.i = and i32 %bf.load1222.i, -2049
  store i32 %bf.clear1223.i, i32* %volatile_flag1221.i, align 8
  br label %if.end1224.i

if.end1224.i:                                     ; preds = %if.then1219.i, %land.lhs.true1212.i, %if.end1188.i
  %bf.load1227.i = load i32* %code, align 8
  %bf.clear1229.i = and i32 %bf.load1227.i, 4096
  %tobool1230.i = icmp eq i32 %bf.clear1229.i, 0
  br i1 %tobool1230.i, label %if.end1237.i, label %if.then1231.i

if.then1231.i:                                    ; preds = %if.end1224.i
  %readonly_flag1233.i = getelementptr inbounds %union.tree_node* %cond1036.i, i64 0, i32 0, i32 0, i32 2
  %bf.load1234.i = load i32* %readonly_flag1233.i, align 8
  %bf.set1236.i = or i32 %bf.load1234.i, 4096
  store i32 %bf.set1236.i, i32* %readonly_flag1233.i, align 8
  %bf.load1240.pre.i = load i32* %code, align 8
  br label %if.end1237.i

if.end1237.i:                                     ; preds = %if.then1231.i, %if.end1224.i
  %bf.load1240.i = phi i32 [ %bf.load1227.i, %if.end1224.i ], [ %bf.load1240.pre.i, %if.then1231.i ]
  %bf.clear1242.i = and i32 %bf.load1240.i, 2048
  %tobool1243.i = icmp eq i32 %bf.clear1242.i, 0
  br i1 %tobool1243.i, label %if.end1261.i, label %if.then1244.i

if.then1244.i:                                    ; preds = %if.end1237.i
  %volatile_flag1246.i = getelementptr inbounds %union.tree_node* %cond1036.i, i64 0, i32 0, i32 0, i32 2
  %bf.load1247.i = load i32* %volatile_flag1246.i, align 8
  %bf.set1249.i = or i32 %bf.load1247.i, 2048
  store i32 %bf.set1249.i, i32* %volatile_flag1246.i, align 8
  %bf.load1252.i = load i32* %code, align 8
  %bf.clear1253.i = and i32 %bf.load1252.i, 255
  %cmp1254.i = icmp eq i32 %bf.clear1253.i, 34
  %or.cond1842.i = and i1 %cmp1254.i, %cmp9902270.i
  br i1 %or.cond1842.i, label %if.then1259.i, label %if.end1261.i

if.then1259.i:                                    ; preds = %if.then1244.i
  tail call void @make_var_volatile(%union.tree_node* %x) #5
  br label %if.end1261.i

if.end1261.i:                                     ; preds = %if.then1259.i, %if.then1244.i, %if.end1237.i
  %initial1263.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 12
  %271 = load %union.tree_node** %initial1263.i, align 8, !tbaa !40
  %cmp1264.i = icmp eq %union.tree_node* %271, null
  br i1 %cmp1264.i, label %land.lhs.true1266.i, label %if.end1281.i

land.lhs.true1266.i:                              ; preds = %if.end1261.i
  %initial1268.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %272 = load %union.tree_node** %initial1268.i, align 8, !tbaa !40
  %cmp1269.i = icmp eq %union.tree_node* %272, null
  %or.cond1843.i = or i1 %cmp1269.i, %tobool1035.i
  br i1 %or.cond1843.i, label %if.end1281.i, label %if.then1273.i

if.then1273.i:                                    ; preds = %land.lhs.true1266.i
  %linenum1275.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 2
  %273 = load i32* %linenum1275.i, align 4, !tbaa !55
  %linenum1277.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 2
  store i32 %273, i32* %linenum1277.i, align 4, !tbaa !55
  %filename.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 1
  %274 = load i8** %filename.i, align 8, !tbaa !54
  %filename1280.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 1
  store i8* %274, i8** %filename1280.i, align 8, !tbaa !54
  br label %if.end1281.i

if.end1281.i:                                     ; preds = %if.then1273.i, %land.lhs.true1266.i, %if.end1261.i
  %in_system_header_flag1283.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %275 = bitcast i48* %in_system_header_flag1283.i to i64*
  %bf.load1284.i = load i64* %275, align 8
  %bf.cast1287.i = and i64 %bf.load1284.i, 65536
  %tobool1288.i = icmp eq i64 %bf.cast1287.i, 0
  %in_system_header_flag1291.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %276 = bitcast i48* %in_system_header_flag1291.i to i64*
  %bf.load1292.i = load i64* %276, align 8
  br i1 %tobool1288.i, label %if.else1295.i, label %if.then1289.i

if.then1289.i:                                    ; preds = %if.end1281.i
  %bf.set1294.i = or i64 %bf.load1292.i, 65536
  store i64 %bf.set1294.i, i64* %276, align 8
  br label %if.end1310.i

if.else1295.i:                                    ; preds = %if.end1281.i
  %bf.cast1301.i = and i64 %bf.load1292.i, 65536
  %tobool1302.i = icmp eq i64 %bf.cast1301.i, 0
  br i1 %tobool1302.i, label %if.end1310.i, label %if.then1303.i

if.then1303.i:                                    ; preds = %if.else1295.i
  %in_system_header_flag1305.i = getelementptr inbounds %union.tree_node* %cond1036.i, i64 0, i32 0, i32 5
  %277 = bitcast i48* %in_system_header_flag1305.i to i64*
  %bf.load1306.i = load i64* %277, align 8
  %bf.set1308.i = or i64 %bf.load1306.i, 65536
  store i64 %bf.set1308.i, i64* %277, align 8
  %.pre2284.i = load %union.tree_node** %initial1263.i, align 8, !tbaa !40
  br label %if.end1310.i

if.end1310.i:                                     ; preds = %if.then1303.i, %if.else1295.i, %if.then1289.i
  %278 = phi %union.tree_node* [ %271, %if.else1295.i ], [ %.pre2284.i, %if.then1303.i ], [ %271, %if.then1289.i ]
  %cmp1313.i = icmp ne %union.tree_node* %278, null
  %or.cond1844.i = or i1 %cmp1313.i, %tobool1035.i
  br i1 %or.cond1844.i, label %if.end1322.i, label %if.then1317.i

if.then1317.i:                                    ; preds = %if.end1310.i
  %initial1319.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %279 = load %union.tree_node** %initial1319.i, align 8, !tbaa !40
  store %union.tree_node* %279, %union.tree_node** %initial1263.i, align 8, !tbaa !40
  br label %if.end1322.i

if.end1322.i:                                     ; preds = %if.then1317.i, %if.end1310.i
  %section_name.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 15
  %280 = load %union.tree_node** %section_name.i, align 8, !tbaa !72
  %cmp1324.i = icmp eq %union.tree_node* %280, null
  br i1 %cmp1324.i, label %if.then1326.i, label %if.end1331.i

if.then1326.i:                                    ; preds = %if.end1322.i
  %section_name1328.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 15
  %281 = load %union.tree_node** %section_name1328.i, align 8, !tbaa !72
  store %union.tree_node* %281, %union.tree_node** %section_name.i, align 8, !tbaa !72
  br label %if.end1331.i

if.end1331.i:                                     ; preds = %if.then1326.i, %if.end1322.i
  %assembler_name.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 14
  %282 = load %union.tree_node** %assembler_name.i, align 8, !tbaa !49
  %cmp1333.i = icmp eq %union.tree_node* %282, null
  br i1 %cmp1333.i, label %cond.end1348.i, label %cond.end1342.i

cond.end1342.i:                                   ; preds = %if.end1331.i
  %assembler_name1346.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 14
  store %union.tree_node* %282, %union.tree_node** %assembler_name1346.i, align 8, !tbaa !49
  br label %cond.end1348.i

cond.end1348.i:                                   ; preds = %cond.end1342.i, %if.end1331.i
  %bf.load1351.i = load i32* %code, align 8
  %bf.clear1352.i = and i32 %bf.load1351.i, 255
  %cmp1353.i = icmp eq i32 %bf.clear1352.i, 30
  br i1 %cmp1353.i, label %if.then1355.i, label %if.end1472.i

if.then1355.i:                                    ; preds = %cond.end1348.i
  %bf.load1357.i = load i64* %275, align 8
  %bf.load1363.i = load i64* %276, align 8
  %283 = and i64 %bf.load1357.i, 1048576
  %bf.set1372.i = or i64 %283, %bf.load1363.i
  store i64 %bf.set1372.i, i64* %276, align 8
  %bf.load1375.i = load i64* %275, align 8
  %bf.lshr13822234.i = or i64 %bf.load1375.i, %bf.load1363.i
  %bf.shl1388.i = and i64 %bf.lshr13822234.i, 2097152
  %bf.clear1389.i = and i64 %bf.set1372.i, -2097153
  %bf.set1390.i = or i64 %bf.shl1388.i, %bf.clear1389.i
  store i64 %bf.set1390.i, i64* %276, align 8
  %bf.load1393.i = load i64* %275, align 8
  %bf.lshr14002237.i = or i64 %bf.load1393.i, %bf.load1363.i
  %bf.shl1406.i = and i64 %bf.lshr14002237.i, 268435456
  %bf.clear1407.i = and i64 %bf.set1390.i, -268435457
  %bf.set1408.i = or i64 %bf.clear1407.i, %bf.shl1406.i
  store i64 %bf.set1408.i, i64* %276, align 8
  %bf.load1411.i = load i64* %275, align 8
  %bf.lshr14182240.i = or i64 %bf.load1411.i, %bf.load1363.i
  %bf.shl1424.i = and i64 %bf.lshr14182240.i, 33554432
  %bf.clear1425.i = and i64 %bf.set1408.i, -33554433
  %bf.set1426.i = or i64 %bf.clear1425.i, %bf.shl1424.i
  store i64 %bf.set1426.i, i64* %276, align 8
  br label %if.end1472.i

if.else1429.i:                                    ; preds = %if.end1032.i
  br i1 %tobool1035.i, label %if.end1472.i, label %if.then1431.i

if.then1431.i:                                    ; preds = %if.else1429.i
  %284 = load %union.tree_node** %type.i, align 8, !tbaa !23
  store %union.tree_node* %284, %union.tree_node** %type2.i, align 8, !tbaa !23
  %bf.load1438.i = load i32* %code, align 8
  %bf.clear1440.i = and i32 %bf.load1438.i, 4096
  %bf.load1443.i = load i32* %code10.i, align 8
  %bf.clear1446.i = and i32 %bf.load1443.i, -4097
  %bf.set1447.i = or i32 %bf.clear1446.i, %bf.clear1440.i
  store i32 %bf.set1447.i, i32* %code10.i, align 8
  %bf.load1450.i = load i32* %code, align 8
  %bf.clear1452.i = and i32 %bf.load1450.i, 2048
  %bf.clear1458.i = and i32 %bf.set1447.i, -2049
  %bf.set1459.i = or i32 %bf.clear1458.i, %bf.clear1452.i
  store i32 %bf.set1459.i, i32* %code10.i, align 8
  %bf.load1461.i = load i32* %code, align 8
  %bf.clear1463.i = and i32 %bf.load1461.i, 256
  %bf.clear1469.i = and i32 %bf.set1459.i, -257
  %bf.set1470.i = or i32 %bf.clear1469.i, %bf.clear1463.i
  store i32 %bf.set1470.i, i32* %code10.i, align 8
  br label %if.end1472.i

if.end1472.i:                                     ; preds = %if.then1431.i, %if.else1429.i, %if.then1355.i, %cond.end1348.i
  tail call void @merge_weak(%union.tree_node* %x, %union.tree_node* %t.2) #5
  %bf.load1475.i = load i32* %code, align 8
  %bf.clear1476.i = and i32 %bf.load1475.i, 255
  %cmp1477.i = icmp eq i32 %bf.clear1476.i, 30
  br i1 %cmp1477.i, label %if.then1479.i, label %if.end1521.i

if.then1479.i:                                    ; preds = %if.end1472.i
  %bf.load1482.i = load i32* %code10.i, align 8
  %bf.shl14922228.i = or i32 %bf.load1482.i, -524289
  %bf.set1494.i = and i32 %bf.shl14922228.i, %bf.load1475.i
  store i32 %bf.set1494.i, i32* %code, align 8
  %bf.clear1499.i = and i32 %bf.set1494.i, 524288
  %bf.load1502.i = load i32* %code10.i, align 8
  %bf.clear1505.i = and i32 %bf.load1502.i, -524289
  %bf.set1506.i = or i32 %bf.clear1499.i, %bf.clear1505.i
  store i32 %bf.set1506.i, i32* %code10.i, align 8
  %tobool1512.i = icmp eq i32 %bf.clear1499.i, 0
  br i1 %tobool1512.i, label %if.then1513.i, label %if.end1521.i

if.then1513.i:                                    ; preds = %if.then1479.i
  %name1515.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 8
  %285 = load %union.tree_node** %name1515.i, align 8, !tbaa !48
  %public_flag1517.i = getelementptr inbounds %union.tree_node* %285, i64 0, i32 0, i32 0, i32 2
  %bf.load1518.i = load i32* %public_flag1517.i, align 8
  %bf.clear1519.i = and i32 %bf.load1518.i, -524289
  store i32 %bf.clear1519.i, i32* %public_flag1517.i, align 8
  br label %if.end1521.i

if.end1521.i:                                     ; preds = %if.then1513.i, %if.then1479.i, %if.end1472.i
  %external_flag1523.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %286 = bitcast i48* %external_flag1523.i to i64*
  %bf.load1524.i = load i64* %286, align 8
  %bf.cast1527.i = and i64 %bf.load1524.i, 256
  %tobool1528.i = icmp eq i64 %bf.cast1527.i, 0
  br i1 %tobool1528.i, label %if.else1582.i, label %if.then1529.i

if.then1529.i:                                    ; preds = %if.end1521.i
  br i1 %tobool1035.i, label %if.then1529.if.end1557_crit_edge.i, label %if.then1531.i

if.then1529.if.end1557_crit_edge.i:               ; preds = %if.then1529.i
  %bf.load1565.pre.i = load i32* %code, align 8
  br label %if.end1557.i

if.then1531.i:                                    ; preds = %if.then1529.i
  %bf.load1533.i = load i32* %code10.i, align 8
  %bf.clear1535.i = and i32 %bf.load1533.i, 262144
  %bf.load1538.i = load i32* %code, align 8
  %bf.clear1541.i = and i32 %bf.load1538.i, -262145
  %bf.set1542.i = or i32 %bf.clear1541.i, %bf.clear1535.i
  store i32 %bf.set1542.i, i32* %code, align 8
  %external_flag1544.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %287 = bitcast i48* %external_flag1544.i to i64*
  %bf.load1545.i = load i64* %287, align 8
  %bf.shl1553.i = and i64 %bf.load1545.i, 256
  %bf.clear1554.i = and i64 %bf.load1524.i, -257
  %bf.set1555.i = or i64 %bf.shl1553.i, %bf.clear1554.i
  store i64 %bf.set1555.i, i64* %286, align 8
  br label %if.end1557.i

if.end1557.i:                                     ; preds = %if.then1531.i, %if.then1529.if.end1557_crit_edge.i
  %bf.load1572.i = phi i64 [ %bf.load1524.i, %if.then1529.if.end1557_crit_edge.i ], [ %bf.set1555.i, %if.then1531.i ]
  %bf.load1565.i = phi i32 [ %bf.load1565.pre.i, %if.then1529.if.end1557_crit_edge.i ], [ %bf.set1542.i, %if.then1531.i ]
  %bf.load1560.i = load i32* %code10.i, align 8
  %bf.clear1562.i = and i32 %bf.load1560.i, 524288
  %bf.clear1568.i = and i32 %bf.load1565.i, -524289
  %bf.set1569.i = or i32 %bf.clear1562.i, %bf.clear1568.i
  store i32 %bf.set1569.i, i32* %code, align 8
  %bf.cast1575.i = and i64 %bf.load1572.i, 256
  %tobool1576.i = icmp eq i64 %bf.cast1575.i, 0
  br i1 %tobool1576.i, label %if.then1577.i, label %if.end1607.i

if.then1577.i:                                    ; preds = %if.end1557.i
  %context.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 9
  %288 = load %union.tree_node** %context.i, align 8, !tbaa !53
  store %union.tree_node* %288, %union.tree_node** %context, align 8, !tbaa !53
  br label %if.end1607.i

if.else1582.i:                                    ; preds = %if.end1521.i
  %bf.load1585.i = load i32* %code, align 8
  %bf.clear1587.i = and i32 %bf.load1585.i, 262144
  %bf.load1590.i = load i32* %code10.i, align 8
  %bf.clear1593.i = and i32 %bf.load1590.i, -262145
  %bf.set1594.i = or i32 %bf.clear1593.i, %bf.clear1587.i
  store i32 %bf.set1594.i, i32* %code10.i, align 8
  %bf.load1597.i = load i32* %code, align 8
  %bf.clear1599.i = and i32 %bf.load1597.i, 524288
  %bf.clear1605.i = and i32 %bf.set1594.i, -524289
  %bf.set1606.i = or i32 %bf.clear1605.i, %bf.clear1599.i
  store i32 %bf.set1606.i, i32* %code10.i, align 8
  %bf.load1610.pre.i = load i32* %code, align 8
  br label %if.end1607.i

if.end1607.i:                                     ; preds = %if.else1582.i, %if.then1577.i, %if.end1557.i
  %bf.load1610.i = phi i32 [ %bf.set1569.i, %if.end1557.i ], [ %bf.set1569.i, %if.then1577.i ], [ %bf.load1610.pre.i, %if.else1582.i ]
  %bf.clear1611.i = and i32 %bf.load1610.i, 255
  %cmp1612.i = icmp eq i32 %bf.clear1611.i, 30
  br i1 %cmp1612.i, label %if.then1614.i, label %if.end1828.i

if.then1614.i:                                    ; preds = %if.end1607.i
  br i1 %41, label %land.lhs.true1616.i, label %if.else1636.i

land.lhs.true1616.i:                              ; preds = %if.then1614.i
  %initial1618.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %289 = load %union.tree_node** %initial1618.i, align 8, !tbaa !40
  %tobool1619.i = icmp eq %union.tree_node* %289, null
  br i1 %tobool1619.i, label %if.else1636.i, label %land.lhs.true1620.i

land.lhs.true1620.i:                              ; preds = %land.lhs.true1616.i
  %bf.load1623.i = load i32* %code10.i, align 8
  %bf.clear1625.i = and i32 %bf.load1623.i, 65536
  %tobool1626.i = icmp eq i32 %bf.clear1625.i, 0
  br i1 %tobool1626.i, label %if.else1636.i, label %if.then1627.i

if.then1627.i:                                    ; preds = %land.lhs.true1620.i
  %290 = load %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !1
  %outlining_inline_function.i = getelementptr inbounds %struct.gcc_debug_hooks* %290, i64 0, i32 18
  %291 = load void (%union.tree_node*)** %outlining_inline_function.i, align 8, !tbaa !73
  tail call void %291(%union.tree_node* %t.2) #5
  %bf.load1629.i = load i64* %286, align 8
  %bf.clear1634.i = and i64 %bf.load1629.i, -68719478785
  %bf.set1635.i = or i64 %bf.clear1634.i, 68719476736
  %built_in_class1692.pre.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %.pre2289.i = bitcast i48* %built_in_class1692.pre.i to i64*
  br label %if.end1690.i

if.else1636.i:                                    ; preds = %land.lhs.true1620.i, %land.lhs.true1616.i, %if.then1614.i
  %lang_specific1638.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 24
  %292 = load %struct.lang_decl** %lang_specific1638.i, align 8, !tbaa !58
  %293 = getelementptr inbounds %struct.lang_decl* %292, i64 0, i32 0, i32 0
  %bf.load1640.i = load i8* %293, align 4
  %bf.clear1641.i = and i8 %bf.load1640.i, 1
  %tobool1643.i = icmp eq i8 %bf.clear1641.i, 0
  br i1 %tobool1643.i, label %lor.lhs.false1644.i, label %if.then1652.i

lor.lhs.false1644.i:                              ; preds = %if.else1636.i
  %lang_specific1646.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 24
  %294 = load %struct.lang_decl** %lang_specific1646.i, align 8, !tbaa !58
  %295 = getelementptr inbounds %struct.lang_decl* %294, i64 0, i32 0, i32 0
  %bf.load1648.i = load i8* %295, align 4
  %bf.clear1649.i = and i8 %bf.load1648.i, 1
  %tobool1651.i = icmp eq i8 %bf.clear1649.i, 0
  br i1 %tobool1651.i, label %if.end1659.i, label %if.then1652.i

if.then1652.i:                                    ; preds = %lor.lhs.false1644.i, %if.else1636.i
  %bf.set1658.i = or i8 %bf.load1640.i, 1
  store i8 %bf.set1658.i, i8* %293, align 4
  br label %if.end1659.i

if.end1659.i:                                     ; preds = %if.then1652.i, %lor.lhs.false1644.i
  %bf.load1662.i = load i64* %286, align 8
  %bf.cast1665.i = and i64 %bf.load1662.i, 68719476736
  %tobool1666.i = icmp eq i64 %bf.cast1665.i, 0
  %uninlinable1668.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %296 = bitcast i48* %uninlinable1668.i to i64*
  %bf.load1669.i = load i64* %296, align 8
  br i1 %tobool1666.i, label %lor.rhs.i, label %lor.end.i

lor.rhs.i:                                        ; preds = %if.end1659.i
  %bf.cast1672.i = and i64 %bf.load1669.i, 68719476736
  %tobool1673.i = icmp ne i64 %bf.cast1672.i, 0
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %if.end1659.i
  %297 = phi i1 [ %tobool1673.i, %lor.rhs.i ], [ true, %if.end1659.i ]
  %298 = zext i1 %297 to i64
  %bf.shl1678.i = shl nuw nsw i64 %298, 36
  %bf.clear1679.i = and i64 %bf.load1669.i, -68719476737
  %bf.set1680.i = or i64 %bf.shl1678.i, %bf.clear1679.i
  store i64 %bf.set1680.i, i64* %296, align 8
  %bf.load1684.i = load i64* %286, align 8
  %bf.clear1687.i = and i64 %bf.load1684.i, -68719476737
  %bf.set1688.i = or i64 %bf.clear1687.i, %bf.shl1678.i
  br label %if.end1690.i

if.end1690.i:                                     ; preds = %lor.end.i, %if.then1627.i
  %.pre-phi.i = phi i64* [ %296, %lor.end.i ], [ %.pre2289.i, %if.then1627.i ]
  %storemerge.i = phi i64 [ %bf.set1688.i, %lor.end.i ], [ %bf.set1635.i, %if.then1627.i ]
  store i64 %storemerge.i, i64* %286, align 8
  %bf.load1693.i = load i64* %.pre-phi.i, align 8
  %bf.cast1696.i = and i64 %bf.load1693.i, 1610612736
  %cmp1697.i = icmp eq i64 %bf.cast1696.i, 0
  br i1 %cmp1697.i, label %if.end1736.i, label %if.then1699.i

if.then1699.i:                                    ; preds = %if.end1690.i
  %or.cond1845.i = or i1 %tobool1033.i, %41
  br i1 %or.cond1845.i, label %if.then1703.i, label %if.else1715.i

if.then1703.i:                                    ; preds = %if.then1699.i
  br i1 %tobool1035.i, label %if.end1736.i, label %if.then1705.i

if.then1705.i:                                    ; preds = %if.then1703.i
  %299 = load %union.tree_node** %type.i, align 8, !tbaa !23
  store %union.tree_node* %299, %union.tree_node** %type2.i, align 8, !tbaa !23
  %bf.clear1713.i = and i64 %bf.load1693.i, -1610612737
  store i64 %bf.clear1713.i, i64* %.pre-phi.i, align 8
  br label %if.end1736.i

if.else1715.i:                                    ; preds = %if.then1699.i
  %bf.clear1727.i = and i64 %storemerge.i, -1610612737
  %bf.set1728.i = or i64 %bf.cast1696.i, %bf.clear1727.i
  store i64 %bf.set1728.i, i64* %286, align 8
  %u11731.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 6
  %f.i = bitcast %union.anon* %u11731.i to i32*
  %300 = load i32* %f.i, align 4, !tbaa !7
  %u11733.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 6
  %f1734.i = bitcast %union.anon* %u11733.i to i32*
  store i32 %300, i32* %f1734.i, align 4, !tbaa !7
  br label %if.end1736.i

if.end1736.i:                                     ; preds = %if.else1715.i, %if.then1705.i, %if.then1703.i, %if.end1690.i
  br i1 %41, label %if.else1804.i, label %if.then1738.i

if.then1738.i:                                    ; preds = %if.end1736.i
  %result.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 11
  %301 = load %union.tree_node** %result.i, align 8, !tbaa !75
  %result1741.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 11
  store %union.tree_node* %301, %union.tree_node** %result1741.i, align 8, !tbaa !75
  br i1 %tobool1035.i, label %if.end1748.i, label %if.then1743.i

if.then1743.i:                                    ; preds = %if.then1738.i
  %initial1745.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 12
  %302 = load %union.tree_node** %initial1745.i, align 8, !tbaa !40
  %initial1747.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 12
  store %union.tree_node* %302, %union.tree_node** %initial1747.i, align 8, !tbaa !40
  br label %if.end1748.i

if.end1748.i:                                     ; preds = %if.then1743.i, %if.then1738.i
  %f1750.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 19, i32 0
  %303 = load %struct.function** %f1750.i, align 8, !tbaa !1
  %f1753.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 19, i32 0
  store %struct.function* %303, %struct.function** %f1753.i, align 8, !tbaa !1
  %saved_tree.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 20
  %304 = load %union.tree_node** %saved_tree.i, align 8, !tbaa !76
  %saved_tree1756.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 20
  store %union.tree_node* %304, %union.tree_node** %saved_tree1756.i, align 8, !tbaa !76
  %i.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 6, i32 0
  %305 = load i64* %i.i, align 8, !tbaa !77
  %i1761.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 6, i32 0
  store i64 %305, i64* %i1761.i, align 8, !tbaa !77
  %arguments.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 10
  %306 = load %union.tree_node** %arguments.i, align 8, !tbaa !78
  %arguments1764.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 10
  store %union.tree_node* %306, %union.tree_node** %arguments1764.i, align 8, !tbaa !78
  %bf.load1767.i = load i64* %.pre-phi.i, align 8
  %bf.cast1770.i = and i64 %bf.load1767.i, 2048
  %tobool1771.i = icmp eq i64 %bf.cast1770.i, 0
  br i1 %tobool1771.i, label %if.end1828.i, label %land.lhs.true1772.i

land.lhs.true1772.i:                              ; preds = %if.end1748.i
  %bf.load1775.i = load i64* %286, align 8
  %bf.cast1778.i = and i64 %bf.load1775.i, 68719476736
  %tobool1779.i = icmp eq i64 %bf.cast1778.i, 0
  br i1 %tobool1779.i, label %if.then1780.i, label %if.end1828.i

if.then1780.i:                                    ; preds = %land.lhs.true1772.i
  %bf.set1785.i = or i64 %bf.load1775.i, 2048
  store i64 %bf.set1785.i, i64* %286, align 8
  %abstract_origin.i935 = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 13
  %307 = load %union.tree_node** %abstract_origin.i935, align 8, !tbaa !42
  br i1 %tobool1035.i, label %cond.true1787.i, label %cond.end1799.i

cond.true1787.i:                                  ; preds = %if.then1780.i
  %tobool1789.i = icmp eq %union.tree_node* %307, null
  %olddecl..i = select i1 %tobool1789.i, %union.tree_node* %t.2, %union.tree_node* %307
  br label %cond.end1799.i

cond.end1799.i:                                   ; preds = %cond.true1787.i, %if.then1780.i
  %cond1800.i = phi %union.tree_node* [ %307, %if.then1780.i ], [ %olddecl..i, %cond.true1787.i ]
  %abstract_origin1802.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 13
  store %union.tree_node* %cond1800.i, %union.tree_node** %abstract_origin1802.i, align 8, !tbaa !42
  br label %if.end1828.i

if.else1804.i:                                    ; preds = %if.end1736.i
  %lang_specific1806.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 24
  %308 = load %struct.lang_decl** %lang_specific1806.i, align 8, !tbaa !58
  %309 = getelementptr inbounds %struct.lang_decl* %308, i64 0, i32 0, i32 0
  %bf.load1808.i = load i8* %309, align 4
  %bf.clear1809.i = and i8 %bf.load1808.i, 1
  %tobool1811.i = icmp eq i8 %bf.clear1809.i, 0
  br i1 %tobool1811.i, label %if.end1828.i, label %land.lhs.true1812.i

land.lhs.true1812.i:                              ; preds = %if.else1804.i
  %bf.load1815.i = load i64* %286, align 8
  %bf.cast1818.i = and i64 %bf.load1815.i, 68719476736
  %tobool1819.i = icmp eq i64 %bf.cast1818.i, 0
  br i1 %tobool1819.i, label %if.then1820.i, label %if.end1828.i

if.then1820.i:                                    ; preds = %land.lhs.true1812.i
  %bf.set1825.i = or i64 %bf.load1815.i, 2048
  store i64 %bf.set1825.i, i64* %286, align 8
  br label %if.end1828.i

if.end1828.i:                                     ; preds = %if.then1820.i, %land.lhs.true1812.i, %if.else1804.i, %cond.end1799.i, %land.lhs.true1772.i, %if.end1748.i, %if.end1607.i
  br i1 %tobool1035.i, label %if.end148, label %if.end1831.i

if.end1831.i:                                     ; preds = %if.end1828.i
  %uid.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 3
  %310 = load i32* %uid.i, align 4, !tbaa !79
  %add.ptr.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 1
  %311 = bitcast i8** %add.ptr.i to i8*
  %add.ptr1833.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 1
  %312 = bitcast i8** %add.ptr1833.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %311, i8* %312, i64 184, i32 1, i1 false) #5
  store i32 %310, i32* %uid.i, align 4, !tbaa !79
  %attributes1837.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 16
  %313 = load %union.tree_node** %attributes1837.i, align 8, !tbaa !59
  %attributes1839.i = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 16
  store %union.tree_node* %313, %union.tree_node** %attributes1839.i, align 8, !tbaa !59
  %bf.load134.pre = load i32* %code10.i, align 8
  br label %if.then131

if.then131:                                       ; preds = %if.end1831.i, %if.end230.i
  %bf.load134 = phi i32 [ %bf.load134.pre, %if.end1831.i ], [ %bf.load155.i, %if.end230.i ]
  %bf.clear135 = and i32 %bf.load134, 255
  %cmp136 = icmp eq i32 %bf.clear135, 35
  br i1 %cmp136, label %if.then137, label %return

if.then137:                                       ; preds = %if.then131
  %bf.load139 = load i32* %code, align 8
  %bf.clear141 = and i32 %bf.load139, 16384
  %bf.clear145 = and i32 %bf.load134, -16385
  %bf.set146 = or i32 %bf.clear141, %bf.clear145
  store i32 %bf.set146, i32* %code10.i, align 8
  br label %return

if.end148:                                        ; preds = %if.end1828.i, %if.then440.i, %if.then297.i, %if.then295.i, %if.else228.i, %if.then215.i, %if.else216.i, %if.else203.i, %if.then202.i, %if.then190.i, %land.end686.i, %if.then427.i, %if.end126
  %bf.load151 = load i32* %code, align 8
  %bf.clear152 = and i32 %bf.load151, 255
  %cmp153 = icmp eq i32 %bf.clear152, 33
  br i1 %cmp153, label %if.then154, label %if.end198

if.then154:                                       ; preds = %if.end148
  %linenum156 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 2
  %314 = load i32* %linenum156, align 4, !tbaa !55
  %cmp157 = icmp eq i32 %314, 0
  %type = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %315 = load %union.tree_node** %type, align 8, !tbaa !23
  br i1 %cmp157, label %if.then158, label %if.else

if.then158:                                       ; preds = %if.then154
  %316 = getelementptr inbounds %union.tree_node* %315, i64 0, i32 0, i32 11
  %317 = load %union.tree_node** %316, align 8, !tbaa !57
  %cmp162 = icmp eq %union.tree_node* %317, null
  br i1 %cmp162, label %if.then163, label %if.end198

if.then163:                                       ; preds = %if.then158
  store %union.tree_node* %x, %union.tree_node** %316, align 8, !tbaa !57
  br label %if.end198

if.else:                                          ; preds = %if.then154
  %318 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp171 = icmp eq %union.tree_node* %315, %318
  br i1 %cmp171, label %if.end198, label %land.lhs.true172

land.lhs.true172:                                 ; preds = %if.else
  %result = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 11
  %319 = load %union.tree_node** %result, align 8, !tbaa !75
  %cmp174 = icmp eq %union.tree_node* %319, null
  br i1 %cmp174, label %if.then175, label %if.end198

if.then175:                                       ; preds = %land.lhs.true172
  store %union.tree_node* %315, %union.tree_node** %result, align 8, !tbaa !75
  %call180 = tail call %union.tree_node* @build_type_copy(%union.tree_node* %315) #5
  %320 = getelementptr inbounds %union.tree_node* %call180, i64 0, i32 0, i32 11
  store %union.tree_node* %x, %union.tree_node** %320, align 8, !tbaa !57
  %bf.load184 = load i32* %code, align 8
  %bf.clear186 = and i32 %bf.load184, 65536
  %used_flag188 = getelementptr inbounds %union.tree_node* %call180, i64 0, i32 0, i32 0, i32 2
  %bf.load189 = load i32* %used_flag188, align 8
  %bf.clear192 = and i32 %bf.load189, -65537
  %bf.set193 = or i32 %bf.clear192, %bf.clear186
  store i32 %bf.set193, i32* %used_flag188, align 8
  store %union.tree_node* %call180, %union.tree_node** %type, align 8, !tbaa !23
  br label %if.end198

if.end198:                                        ; preds = %if.else, %if.then163, %if.then158, %if.then175, %land.lhs.true172, %if.end148
  %bf.load201 = load i32* %code, align 8
  %bf.clear203 = and i32 %bf.load201, 524288
  %tobool204 = icmp eq i32 %bf.clear203, 0
  br i1 %tobool204, label %if.end268, label %land.lhs.true205

land.lhs.true205:                                 ; preds = %if.end198
  %bf.clear209 = and i32 %bf.load201, 255
  %cmp210 = icmp eq i32 %bf.clear209, 30
  br i1 %cmp210, label %land.lhs.true211, label %if.then218

land.lhs.true211:                                 ; preds = %land.lhs.true205
  %inline_flag = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %321 = bitcast i48* %inline_flag to i64*
  %bf.load213 = load i64* %321, align 8
  %bf.cast216 = and i64 %bf.load213, 2048
  %tobool217 = icmp eq i64 %bf.cast216, 0
  br i1 %tobool217, label %if.then218, label %if.end268

if.then218:                                       ; preds = %land.lhs.true211, %land.lhs.true205
  %322 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool220 = icmp eq i32 %322, 0
  br i1 %tobool220, label %if.else243, label %land.lhs.true221

land.lhs.true221:                                 ; preds = %if.then218
  %global_value222 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 6
  %323 = bitcast %union.anon* %global_value222 to %union.tree_node**
  %324 = load %union.tree_node** %323, align 8, !tbaa !8
  %cmp223 = icmp eq %union.tree_node* %324, null
  br i1 %cmp223, label %if.else243, label %land.lhs.true224

land.lhs.true224:                                 ; preds = %land.lhs.true221
  %external_flag227 = getelementptr inbounds %union.tree_node* %324, i64 0, i32 0, i32 5
  %325 = bitcast i48* %external_flag227 to i64*
  %bf.load228 = load i64* %325, align 8
  %bf.cast231 = and i64 %bf.load228, 256
  %tobool232 = icmp eq i64 %bf.cast231, 0
  br i1 %tobool232, label %lor.lhs.false233, label %land.lhs.true252

lor.lhs.false233:                                 ; preds = %land.lhs.true224
  %public_flag236 = getelementptr inbounds %union.tree_node* %324, i64 0, i32 0, i32 0, i32 2
  %bf.load237 = load i32* %public_flag236, align 8
  %bf.clear239 = and i32 %bf.load237, 524288
  %tobool240 = icmp eq i32 %bf.clear239, 0
  br i1 %tobool240, label %if.else243, label %land.lhs.true252

if.else243:                                       ; preds = %lor.lhs.false233, %land.lhs.true221, %if.then218
  %326 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 11
  %327 = load %union.tree_node** %326, align 8, !tbaa !19
  %cmp245 = icmp eq %union.tree_node* %327, null
  br i1 %cmp245, label %if.end268, label %land.lhs.true252

land.lhs.true252:                                 ; preds = %lor.lhs.false233, %land.lhs.true224, %if.else243
  %decl219.0958 = phi %union.tree_node* [ %327, %if.else243 ], [ %324, %land.lhs.true224 ], [ %324, %lor.lhs.false233 ]
  %type254 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %328 = load %union.tree_node** %type254, align 8, !tbaa !23
  %type256 = getelementptr inbounds %union.tree_node* %decl219.0958, i64 0, i32 0, i32 0, i32 1
  %329 = load %union.tree_node** %type256, align 8, !tbaa !23
  %call257 = tail call i32 @comptypes(%union.tree_node* %328, %union.tree_node* %329) #5
  %tobool258 = icmp eq i32 %call257, 0
  br i1 %tobool258, label %land.lhs.true259, label %if.end268

land.lhs.true259:                                 ; preds = %land.lhs.true252
  %built_in_class = getelementptr inbounds %union.tree_node* %decl219.0958, i64 0, i32 0, i32 5
  %330 = bitcast i48* %built_in_class to i64*
  %bf.load261 = load i64* %330, align 8
  %bf.cast264 = and i64 %bf.load261, 1610612736
  %cmp265 = icmp eq i64 %bf.cast264, 0
  br i1 %cmp265, label %if.then266, label %if.end268

if.then266:                                       ; preds = %land.lhs.true259
  tail call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([42 x i8]* @.str140, i64 0, i64 0)) #5
  tail call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %decl219.0958, i8* getelementptr inbounds ([31 x i8]* @.str141, i64 0, i64 0)) #5
  br label %if.end268

if.end268:                                        ; preds = %if.else243, %land.lhs.true211, %land.lhs.true259, %land.lhs.true252, %if.end198, %if.then266
  %331 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 9
  %332 = load %union.tree_node** %331, align 8, !tbaa !17
  %cmp270 = icmp eq %union.tree_node* %332, null
  br i1 %cmp270, label %if.end290, label %land.lhs.true271

land.lhs.true271:                                 ; preds = %if.end268
  %global_value272 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 6
  %333 = bitcast %union.anon* %global_value272 to %union.tree_node**
  %334 = load %union.tree_node** %333, align 8, !tbaa !8
  %cmp273 = icmp eq %union.tree_node* %334, null
  br i1 %cmp273, label %land.lhs.true274, label %if.end290

land.lhs.true274:                                 ; preds = %land.lhs.true271
  %bf.load277 = load i32* %code, align 8
  %bf.clear278 = and i32 %bf.load277, 255
  %cmp279 = icmp eq i32 %bf.clear278, 30
  br i1 %cmp279, label %land.lhs.true280, label %if.end290

land.lhs.true280:                                 ; preds = %land.lhs.true274
  %type282 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %335 = load %union.tree_node** %type282, align 8, !tbaa !23
  %type285 = getelementptr inbounds %union.tree_node* %332, i64 0, i32 0, i32 0, i32 1
  %336 = load %union.tree_node** %type285, align 8, !tbaa !23
  %call286 = tail call i32 @comptypes(%union.tree_node* %335, %union.tree_node* %336) #5
  %tobool287 = icmp eq i32 %call286, 0
  br i1 %tobool287, label %if.then288, label %if.end290

if.then288:                                       ; preds = %land.lhs.true280
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([49 x i8]* @.str142, i64 0, i64 0)) #5
  %337 = load %union.tree_node** %331, align 8, !tbaa !17
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %337, i8* getelementptr inbounds ([38 x i8]* @.str143, i64 0, i64 0)) #5
  br label %if.end290

if.end290:                                        ; preds = %land.lhs.true280, %if.end268, %if.then288, %land.lhs.true274, %land.lhs.true271
  %338 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool291 = icmp eq i32 %338, 0
  br i1 %tobool291, label %if.end332, label %land.lhs.true292

land.lhs.true292:                                 ; preds = %if.end290
  %external_flag294 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %339 = bitcast i48* %external_flag294 to i64*
  %bf.load295 = load i64* %339, align 8
  %bf.cast298 = and i64 %bf.load295, 256
  %tobool299 = icmp eq i64 %bf.cast298, 0
  br i1 %tobool299, label %if.end332, label %land.lhs.true300

land.lhs.true300:                                 ; preds = %land.lhs.true292
  %340 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %341 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp.i937 = icmp eq %struct.binding_level* %340, %341
  br i1 %cmp.i937, label %lookup_name.exit, label %land.lhs.true.i939

land.lhs.true.i939:                               ; preds = %land.lhs.true300
  %342 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 7
  %343 = load %union.tree_node** %342, align 8, !tbaa !15
  %tobool.i938 = icmp eq %union.tree_node* %343, null
  br i1 %tobool.i938, label %lookup_name.exit, label %if.end332

lookup_name.exit:                                 ; preds = %land.lhs.true300, %land.lhs.true.i939
  %global_value.i940 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 6
  %344 = bitcast %union.anon* %global_value.i940 to %union.tree_node**
  %345 = load %union.tree_node** %344, align 8, !tbaa !8
  %cmp302 = icmp eq %union.tree_node* %345, null
  br i1 %cmp302, label %while.cond.preheader, label %if.end332

while.cond.preheader:                             ; preds = %lookup_name.exit
  %type304.0.in974 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %type304.0975 = load %union.tree_node** %type304.0.in974, align 8
  %tobool307976 = icmp eq %union.tree_node* %type304.0975, null
  %346 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp308977 = icmp eq %union.tree_node* %type304.0975, %346
  %or.cond912978 = or i1 %tobool307976, %cmp308977
  br i1 %or.cond912978, label %while.end, label %if.end310

if.end310:                                        ; preds = %while.cond.preheader, %while.cond.backedge
  %type304.0979 = phi %union.tree_node* [ %type304.0, %while.cond.backedge ], [ %type304.0975, %while.cond.preheader ]
  %context312 = getelementptr inbounds %union.tree_node* %type304.0979, i64 0, i32 0, i32 17
  %347 = load %struct.rtx_def** %context312, align 8
  %tobool313 = icmp eq %struct.rtx_def* %347, null
  br i1 %tobool313, label %if.else315, label %if.then314

if.then314:                                       ; preds = %if.end310
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([36 x i8]* @.str144, i64 0, i64 0)) #5
  %.pre1005 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  br label %while.end

if.else315:                                       ; preds = %if.end310
  %code317 = getelementptr inbounds %union.tree_node* %type304.0979, i64 0, i32 0, i32 0, i32 2
  %bf.load318 = load i32* %code317, align 8
  %bf.clear319 = and i32 %bf.load318, 255
  %cmp320 = icmp eq i32 %bf.clear319, 23
  br i1 %cmp320, label %land.lhs.true321, label %while.cond.backedge

land.lhs.true321:                                 ; preds = %if.else315
  %values = getelementptr inbounds %union.tree_node* %type304.0979, i64 0, i32 0, i32 1
  %348 = load i8** %values, align 8
  %cmp323 = icmp eq i8* %348, null
  br i1 %cmp323, label %while.cond.backedge, label %while.end

while.cond.backedge:                              ; preds = %land.lhs.true321, %if.else315
  %type304.0.in = getelementptr inbounds %union.tree_node* %type304.0979, i64 0, i32 0, i32 0, i32 1
  %type304.0 = load %union.tree_node** %type304.0.in, align 8
  %tobool307 = icmp eq %union.tree_node* %type304.0, null
  %cmp308 = icmp eq %union.tree_node* %type304.0, %346
  %or.cond912 = or i1 %tobool307, %cmp308
  br i1 %or.cond912, label %while.end, label %if.end310

while.end:                                        ; preds = %while.cond.backedge, %land.lhs.true321, %while.cond.preheader, %if.then314
  %349 = phi %struct.binding_level* [ %.pre1005, %if.then314 ], [ %341, %while.cond.preheader ], [ %341, %land.lhs.true321 ], [ %341, %while.cond.backedge ]
  %tobool307965 = phi i1 [ false, %if.then314 ], [ %tobool307976, %while.cond.preheader ], [ %tobool307, %while.cond.backedge ], [ false, %land.lhs.true321 ]
  %.913 = select i1 %tobool307965, %struct.binding_level* %349, %struct.binding_level* %1
  br label %if.end332

if.end332:                                        ; preds = %land.lhs.true.i939, %while.end, %land.lhs.true292, %if.end290, %lookup_name.exit
  %b.0 = phi %struct.binding_level* [ %1, %lookup_name.exit ], [ %1, %land.lhs.true292 ], [ %1, %if.end290 ], [ %.913, %while.end ], [ %1, %land.lhs.true.i939 ]
  %350 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp333 = icmp eq %struct.binding_level* %b.0, %350
  br i1 %cmp333, label %if.then334, label %if.else483

if.then334:                                       ; preds = %if.end332
  %global_value335 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 6
  %351 = bitcast %union.anon* %global_value335 to %union.tree_node**
  %352 = load %union.tree_node** %351, align 8, !tbaa !8
  %cmp336 = icmp eq %union.tree_node* %352, null
  br i1 %cmp336, label %land.lhs.true337, label %if.end350

land.lhs.true337:                                 ; preds = %if.then334
  %bf.load340 = load i32* %code, align 8
  %bf.clear342 = and i32 %bf.load340, 524288
  %tobool343 = icmp eq i32 %bf.clear342, 0
  br i1 %tobool343, label %if.end350, label %if.then344

if.then344:                                       ; preds = %land.lhs.true337
  %public_flag346 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load347 = load i32* %public_flag346, align 8
  %bf.set349 = or i32 %bf.load347, 524288
  store i32 %bf.set349, i32* %public_flag346, align 8
  br label %if.end350

if.end350:                                        ; preds = %land.lhs.true337, %if.then344, %if.then334
  %353 = getelementptr inbounds %union.anon* %global_value335, i64 0, i32 0
  %x.c = ptrtoint %union.tree_node* %x to i64
  store i64 %x.c, i64* %353, align 8, !tbaa !8
  %354 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 11
  store %union.tree_node* null, %union.tree_node** %354, align 8, !tbaa !19
  %355 = load %union.tree_node** %331, align 8, !tbaa !17
  %tobool354 = icmp eq %union.tree_node* %355, null
  br i1 %tobool354, label %if.end410, label %land.lhs.true355

land.lhs.true355:                                 ; preds = %if.end350
  %used_flag358 = getelementptr inbounds %union.tree_node* %355, i64 0, i32 0, i32 0, i32 2
  %bf.load359 = load i32* %used_flag358, align 8
  %bf.clear361 = and i32 %bf.load359, 65536
  %tobool362 = icmp eq i32 %bf.clear361, 0
  br i1 %tobool362, label %land.lhs.true377, label %if.end374

if.end374:                                        ; preds = %land.lhs.true355
  %bf.load366 = load i32* %code, align 8
  %bf.set368 = or i32 %bf.load366, 65536
  store i32 %bf.set368, i32* %code, align 8
  %used_flag370 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load371 = load i32* %used_flag370, align 8
  %bf.set373 = or i32 %bf.load371, 65536
  store i32 %bf.set373, i32* %used_flag370, align 8
  %.pr.pre = load %union.tree_node** %331, align 8, !tbaa !17
  %tobool376 = icmp eq %union.tree_node* %.pr.pre, null
  br i1 %tobool376, label %if.end410, label %land.lhs.true377

land.lhs.true377:                                 ; preds = %land.lhs.true355, %if.end374
  %.pr1014 = phi %union.tree_node* [ %.pr.pre, %if.end374 ], [ %355, %land.lhs.true355 ]
  %addressable_flag = getelementptr inbounds %union.tree_node* %.pr1014, i64 0, i32 0, i32 0, i32 2
  %bf.load380 = load i32* %addressable_flag, align 8
  %bf.clear382 = and i32 %bf.load380, 1024
  %tobool383 = icmp eq i32 %bf.clear382, 0
  br i1 %tobool383, label %if.end390, label %if.then384

if.then384:                                       ; preds = %land.lhs.true377
  %bf.load387 = load i32* %code, align 8
  %bf.set389 = or i32 %bf.load387, 1024
  store i32 %bf.set389, i32* %code, align 8
  %.pr961.pr.pre = load %union.tree_node** %331, align 8, !tbaa !17
  br label %if.end390

if.end390:                                        ; preds = %land.lhs.true377, %if.then384
  %.pr961.pr = phi %union.tree_node* [ %.pr1014, %land.lhs.true377 ], [ %.pr961.pr.pre, %if.then384 ]
  %cmp392 = icmp eq %union.tree_node* %.pr961.pr, null
  br i1 %cmp392, label %if.end410, label %land.lhs.true393

land.lhs.true393:                                 ; preds = %if.end390
  %bf.load396 = load i32* %code, align 8
  %bf.clear397 = and i32 %bf.load396, 255
  %cmp398 = icmp eq i32 %bf.clear397, 30
  br i1 %cmp398, label %land.lhs.true399, label %if.then406

land.lhs.true399:                                 ; preds = %land.lhs.true393
  %type401 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %356 = load %union.tree_node** %type401, align 8, !tbaa !23
  %type403 = getelementptr inbounds %union.tree_node* %356, i64 0, i32 0, i32 0, i32 1
  %357 = load %union.tree_node** %type403, align 8, !tbaa !23
  %358 = getelementptr inbounds %union.tree_node* %357, i64 0, i32 0, i32 15
  %359 = load %union.tree_node** %358, align 8, !tbaa !67
  %360 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %cmp405 = icmp eq %union.tree_node* %359, %360
  br i1 %cmp405, label %if.end410, label %if.then406

if.then406:                                       ; preds = %land.lhs.true399, %land.lhs.true393
  %id408 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %361 = getelementptr inbounds i8** %id408, i64 1
  %362 = load i8** %361, align 8, !tbaa !21
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([56 x i8]* @.str145, i64 0, i64 0), i8* %362) #5
  br label %if.end410

if.end410:                                        ; preds = %if.end350, %if.end374, %if.end390, %if.then406, %land.lhs.true399
  %public_flag412 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load413 = load i32* %public_flag412, align 8
  %bf.clear415 = and i32 %bf.load413, 524288
  %tobool416 = icmp eq i32 %bf.clear415, 0
  br i1 %tobool416, label %if.end685, label %land.lhs.true417

land.lhs.true417:                                 ; preds = %if.end410
  %bf.load420 = load i32* %code, align 8
  %bf.clear422 = and i32 %bf.load420, 524288
  %tobool423 = icmp eq i32 %bf.clear422, 0
  br i1 %tobool423, label %land.lhs.true424, label %if.end685

land.lhs.true424:                                 ; preds = %land.lhs.true417
  %external_flag426 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %363 = bitcast i48* %external_flag426 to i64*
  %bf.load427 = load i64* %363, align 8
  %bf.cast430 = and i64 %bf.load427, 256
  %tobool431 = icmp eq i64 %bf.cast430, 0
  br i1 %tobool431, label %if.then432, label %if.end685

if.then432:                                       ; preds = %land.lhs.true424
  br i1 %cmp127, label %land.lhs.true434, label %if.else452

land.lhs.true434:                                 ; preds = %if.then432
  %built_in_class436 = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 5
  %364 = bitcast i48* %built_in_class436 to i64*
  %bf.load437 = load i64* %364, align 8
  %bf.cast440 = and i64 %bf.load437, 1610612736
  %cmp441 = icmp eq i64 %bf.cast440, 0
  br i1 %cmp441, label %land.lhs.true445, label %if.end685

land.lhs.true445:                                 ; preds = %land.lhs.true434
  %unsigned_flag = getelementptr inbounds %union.tree_node* %t.2, i64 0, i32 0, i32 0, i32 2
  %bf.load447 = load i32* %unsigned_flag, align 8
  %bf.clear449 = and i32 %bf.load447, 8192
  %tobool450 = icmp ne i32 %bf.clear449, 0
  %bf.clear456 = and i32 %bf.load420, 255
  %cmp457 = icmp eq i32 %bf.clear456, 33
  %or.cond1015 = or i1 %tobool450, %cmp457
  br i1 %or.cond1015, label %if.end685, label %if.else459

if.else452:                                       ; preds = %if.then432
  %.old = and i32 %bf.load420, 255
  %cmp457.old = icmp eq i32 %.old, 33
  br i1 %cmp457.old, label %if.end685, label %if.else459

if.else459:                                       ; preds = %land.lhs.true445, %if.else452
  %365 = load %union.tree_node** %331, align 8, !tbaa !17
  %tobool461 = icmp eq %union.tree_node* %365, null
  br i1 %tobool461, label %if.else474, label %if.then462

if.then462:                                       ; preds = %if.else459
  %bf.clear467 = and i32 %bf.load413, 2048
  %tobool468 = icmp eq i32 %bf.clear467, 0
  br i1 %tobool468, label %if.then469, label %if.end685

if.then469:                                       ; preds = %if.then462
  %id471 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %366 = getelementptr inbounds i8** %id471, i64 1
  %367 = load i8** %366, align 8, !tbaa !21
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([57 x i8]* @.str138, i64 0, i64 0), i8* %367) #5
  br label %if.end685

if.else474:                                       ; preds = %if.else459
  %id476 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %368 = getelementptr inbounds i8** %id476, i64 1
  %369 = load i8** %368, align 8, !tbaa !21
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([46 x i8]* @.str146, i64 0, i64 0), i8* %369) #5
  br label %if.end685

if.else483:                                       ; preds = %if.end332
  %370 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 7
  %371 = load %union.tree_node** %370, align 8, !tbaa !15
  %global_value484 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 6
  %372 = bitcast %union.anon* %global_value484 to %union.tree_node**
  %373 = load %union.tree_node** %372, align 8, !tbaa !8
  store %union.tree_node* %x, %union.tree_node** %370, align 8, !tbaa !15
  %cmp486 = icmp eq %union.tree_node* %371, null
  %cmp488 = icmp ne %union.tree_node* %373, null
  %or.cond724 = and i1 %cmp486, %cmp488
  br i1 %or.cond724, label %land.lhs.true489, label %if.end648

land.lhs.true489:                                 ; preds = %if.else483
  %bf.load492 = load i32* %code, align 8
  %bf.clear493 = and i32 %bf.load492, 255
  %cmp494 = icmp eq i32 %bf.clear493, 30
  br i1 %cmp494, label %land.lhs.true495, label %if.end648

land.lhs.true495:                                 ; preds = %land.lhs.true489
  %code497 = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 0, i32 2
  %bf.load498 = load i32* %code497, align 8
  %bf.clear499 = and i32 %bf.load498, 255
  %cmp500 = icmp eq i32 %bf.clear499, 30
  br i1 %cmp500, label %land.lhs.true501, label %if.end648

land.lhs.true501:                                 ; preds = %land.lhs.true495
  %external_flag503 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %374 = bitcast i48* %external_flag503 to i64*
  %bf.load504 = load i64* %374, align 8
  %bf.cast507 = and i64 %bf.load504, 256
  %tobool508 = icmp eq i64 %bf.cast507, 0
  br i1 %tobool508, label %if.end648, label %land.lhs.true509

land.lhs.true509:                                 ; preds = %land.lhs.true501
  %lang_specific511 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 24
  %375 = load %struct.lang_decl** %lang_specific511, align 8, !tbaa !58
  %376 = getelementptr inbounds %struct.lang_decl* %375, i64 0, i32 0, i32 0
  %bf.load512 = load i8* %376, align 4
  %bf.clear513 = and i8 %bf.load512, 1
  %tobool515 = icmp eq i8 %bf.clear513, 0
  br i1 %tobool515, label %if.then516, label %if.end648

if.then516:                                       ; preds = %land.lhs.true509
  %type518 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %377 = load %union.tree_node** %type518, align 8, !tbaa !23
  %type521 = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 0, i32 1
  %378 = load %union.tree_node** %type521, align 8, !tbaa !23
  %call522 = tail call i32 @comptypes(%union.tree_node* %377, %union.tree_node* %378) #5
  %tobool523 = icmp eq i32 %call522, 0
  br i1 %tobool523, label %if.then524, label %if.else525

if.then524:                                       ; preds = %if.then516
  tail call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %x, i8* getelementptr inbounds ([52 x i8]* @.str147, i64 0, i64 0)) #5
  br label %if.end648

if.else525:                                       ; preds = %if.then516
  %lang_specific527 = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 24
  %379 = load %struct.lang_decl** %lang_specific527, align 8, !tbaa !58
  %380 = getelementptr inbounds %struct.lang_decl* %379, i64 0, i32 0, i32 0
  %bf.load529 = load i8* %380, align 4
  %bf.clear530 = and i8 %bf.load529, 1
  %tobool532 = icmp eq i8 %bf.clear530, 0
  br i1 %tobool532, label %if.else525.if.end596_crit_edge, label %if.then533

if.else525.if.end596_crit_edge:                   ; preds = %if.else525
  %built_in_class598.pre = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 5
  %.pre1007 = bitcast i48* %built_in_class598.pre to i64*
  br label %if.end596

if.then533:                                       ; preds = %if.else525
  %381 = load %struct.lang_decl** %lang_specific511, align 8, !tbaa !58
  %382 = getelementptr inbounds %struct.lang_decl* %381, i64 0, i32 0, i32 0
  %bf.load543 = load i8* %382, align 4
  %bf.clear545 = and i8 %bf.load543, -2
  %bf.set546 = or i8 %bf.clear545, %bf.clear530
  store i8 %bf.set546, i8* %382, align 4
  %inline_flag548 = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 5
  %383 = bitcast i48* %inline_flag548 to i64*
  %bf.load549 = load i64* %383, align 8
  %bf.load555 = load i64* %374, align 8
  %bf.shl557 = and i64 %bf.load549, 2048
  %bf.clear558 = and i64 %bf.load555, -2049
  %bf.set559 = or i64 %bf.clear558, %bf.shl557
  store i64 %bf.set559, i64* %374, align 8
  %384 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp561 = icmp eq %union.tree_node* %384, %373
  br i1 %cmp561, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then533
  %initial563 = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 12
  %385 = load %union.tree_node** %initial563, align 8, !tbaa !40
  br label %cond.end

cond.end:                                         ; preds = %if.then533, %cond.false
  %cond = phi %union.tree_node* [ %385, %cond.false ], [ null, %if.then533 ]
  %initial565 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 12
  store %union.tree_node* %cond, %union.tree_node** %initial565, align 8, !tbaa !40
  %f = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 19, i32 0
  %386 = load %struct.function** %f, align 8, !tbaa !1
  %f569 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 19, i32 0
  store %struct.function* %386, %struct.function** %f569, align 8, !tbaa !1
  %i = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 6, i32 0
  %387 = load i64* %i, align 8, !tbaa !77
  %i573 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 6, i32 0
  store i64 %387, i64* %i573, align 8, !tbaa !77
  %arguments = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 10
  %arguments576 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 10
  %388 = bitcast %union.tree_node** %arguments to <2 x %union.tree_node*>*
  %389 = load <2 x %union.tree_node*>* %388, align 8, !tbaa !1
  %390 = bitcast %union.tree_node** %arguments576 to <2 x %union.tree_node*>*
  store <2 x %union.tree_node*> %389, <2 x %union.tree_node*>* %390, align 8, !tbaa !1
  %bf.load583 = load i32* %code497, align 8
  %bf.clear585 = and i32 %bf.load583, 16384
  %bf.load588 = load i32* %code, align 8
  %bf.clear591 = and i32 %bf.load588, -16385
  %bf.set592 = or i32 %bf.clear591, %bf.clear585
  store i32 %bf.set592, i32* %code, align 8
  %abstract_origin = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 13
  %391 = load %union.tree_node** %abstract_origin, align 8, !tbaa !42
  %abstract_origin595 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 13
  store %union.tree_node* %391, %union.tree_node** %abstract_origin595, align 8, !tbaa !42
  br label %if.end596

if.end596:                                        ; preds = %if.else525.if.end596_crit_edge, %cond.end
  %.pre-phi1008 = phi i64* [ %.pre1007, %if.else525.if.end596_crit_edge ], [ %383, %cond.end ]
  %bf.load599 = load i64* %.pre-phi1008, align 8
  %bf.cast602 = and i64 %bf.load599, 1610612736
  %cmp603 = icmp eq i64 %bf.cast602, 0
  br i1 %cmp603, label %if.end625, label %if.then604

if.then604:                                       ; preds = %if.end596
  %bf.load613 = load i64* %374, align 8
  %bf.clear616 = and i64 %bf.load613, -1610612737
  %bf.set617 = or i64 %bf.clear616, %bf.cast602
  store i64 %bf.set617, i64* %374, align 8
  %u1620 = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 6
  %f621 = bitcast %union.anon* %u1620 to i32*
  %392 = load i32* %f621, align 4, !tbaa !7
  %u1623 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 6
  %f624 = bitcast %union.anon* %u1623 to i32*
  store i32 %392, i32* %f624, align 4, !tbaa !7
  br label %if.end625

if.end625:                                        ; preds = %if.end596, %if.then604
  %393 = load %union.tree_node** %type521, align 8, !tbaa !23
  %values629 = getelementptr inbounds %union.tree_node* %393, i64 0, i32 0, i32 1
  %394 = load i8** %values629, align 8
  %cmp630 = icmp eq i8* %394, null
  br i1 %cmp630, label %if.end648, label %land.lhs.true631

land.lhs.true631:                                 ; preds = %if.end625
  %initial633 = getelementptr inbounds %union.tree_node* %373, i64 0, i32 0, i32 12
  %395 = load %union.tree_node** %initial633, align 8, !tbaa !40
  %tobool634 = icmp eq %union.tree_node* %395, null
  br i1 %tobool634, label %if.end648, label %land.lhs.true635

land.lhs.true635:                                 ; preds = %land.lhs.true631
  %396 = load %union.tree_node** %type518, align 8, !tbaa !23
  %values639 = getelementptr inbounds %union.tree_node* %396, i64 0, i32 0, i32 1
  %397 = load i8** %values639, align 8
  %cmp640 = icmp eq i8* %397, null
  br i1 %cmp640, label %if.then641, label %if.end648

if.then641:                                       ; preds = %land.lhs.true635
  store %union.tree_node* %393, %union.tree_node** %type518, align 8, !tbaa !23
  br label %if.end648

if.end648:                                        ; preds = %land.lhs.true631, %if.end625, %land.lhs.true509, %land.lhs.true501, %if.then524, %if.then641, %land.lhs.true635, %land.lhs.true495, %land.lhs.true489, %if.else483
  %external_flag652 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 5
  %398 = bitcast i48* %external_flag652 to i64*
  br i1 %cmp486, label %land.lhs.true650, label %if.end679

land.lhs.true650:                                 ; preds = %if.end648
  %bf.load653 = load i64* %398, align 8
  %bf.cast656 = and i64 %bf.load653, 256
  %tobool657 = icmp eq i64 %bf.cast656, 0
  br i1 %tobool657, label %if.end679, label %land.lhs.true658

land.lhs.true658:                                 ; preds = %land.lhs.true650
  %bf.load661 = load i32* %code, align 8
  %bf.clear663 = and i32 %bf.load661, 524288
  %tobool664 = icmp eq i32 %bf.clear663, 0
  br i1 %tobool664, label %if.end679, label %if.then665

if.then665:                                       ; preds = %land.lhs.true658
  %cmp666 = icmp eq %union.tree_node* %373, null
  br i1 %cmp666, label %if.then667, label %if.end673

if.then667:                                       ; preds = %if.then665
  %public_flag669 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load670 = load i32* %public_flag669, align 8
  %bf.set672 = or i32 %bf.load670, 524288
  store i32 %bf.set672, i32* %public_flag669, align 8
  br label %if.end673

if.end673:                                        ; preds = %if.then667, %if.then665
  %399 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 11
  %400 = load %union.tree_node** %399, align 8, !tbaa !19
  %cmp675 = icmp eq %union.tree_node* %400, null
  br i1 %cmp675, label %if.then676, label %if.end679

if.then676:                                       ; preds = %if.end673
  store %union.tree_node* %x, %union.tree_node** %399, align 8, !tbaa !19
  br label %if.end679

if.end679:                                        ; preds = %if.end648, %land.lhs.true658, %land.lhs.true650, %if.end673, %if.then676
  %bf.load.i = load i64* %398, align 8
  %bf.cast.i = and i64 %bf.load.i, 256
  %tobool.i914 = icmp eq i64 %bf.cast.i, 0
  br i1 %tobool.i914, label %if.end.i916, label %warn_if_shadowing.exit

if.end.i916:                                      ; preds = %if.end679
  %401 = load %union.tree_node** %name1, align 8, !tbaa !48
  %cmp.i915 = icmp ne %union.tree_node* %371, null
  br i1 %cmp.i915, label %land.lhs.true.i, label %if.else20.i

land.lhs.true.i:                                  ; preds = %if.end.i916
  %402 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %parm_flag.i = getelementptr inbounds %struct.binding_level* %402, i64 0, i32 6
  %403 = load i8* %parm_flag.i, align 1, !tbaa !37
  %tobool3.i = icmp eq i8 %403, 0
  br i1 %tobool3.i, label %land.lhs.true4.i, label %if.else20.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %level_chain.i = getelementptr inbounds %struct.binding_level* %402, i64 0, i32 5
  %404 = load %struct.binding_level** %level_chain.i, align 8, !tbaa !38
  %parm_flag5.i = getelementptr inbounds %struct.binding_level* %404, i64 0, i32 6
  %405 = load i8* %parm_flag5.i, align 1, !tbaa !37
  %tobool6.i = icmp eq i8 %405, 0
  br i1 %tobool6.i, label %if.else20.i, label %land.lhs.true7.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true4.i
  %names.i917 = getelementptr inbounds %struct.binding_level* %404, i64 0, i32 0
  %406 = load %union.tree_node** %names.i917, align 8, !tbaa !34
  %call.i = tail call i32 @chain_member(%union.tree_node* %371, %union.tree_node* %406) #5
  %tobool9.i = icmp eq i32 %call.i, 0
  br i1 %tobool9.i, label %if.else20.i, label %if.then10.i

if.then10.i:                                      ; preds = %land.lhs.true7.i
  %code.i = getelementptr inbounds %union.tree_node* %371, i64 0, i32 0, i32 0, i32 2
  %bf.load11.i = load i32* %code.i, align 8
  %bf.clear12.i = and i32 %bf.load11.i, 255
  %cmp13.i = icmp eq i32 %bf.clear12.i, 35
  %id.i = getelementptr inbounds %union.tree_node* %401, i64 0, i32 0, i32 1
  %407 = getelementptr inbounds i8** %id.i, i64 1
  %408 = load i8** %407, align 8, !tbaa !21
  br i1 %cmp13.i, label %if.then15.i, label %if.else.i

if.then15.i:                                      ; preds = %if.then10.i
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([40 x i8]* @.str323, i64 0, i64 0), i8* %408) #5
  br label %warn_if_shadowing.exit

if.else.i:                                        ; preds = %if.then10.i
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([61 x i8]* @.str324, i64 0, i64 0), i8* %408) #5
  br label %warn_if_shadowing.exit

if.else20.i:                                      ; preds = %land.lhs.true7.i, %land.lhs.true4.i, %land.lhs.true.i, %if.end.i916
  %409 = load i32* @warn_shadow, align 4, !tbaa !5
  %tobool21.i = icmp eq i32 %409, 0
  br i1 %tobool21.i, label %warn_if_shadowing.exit, label %land.lhs.true22.i

land.lhs.true22.i:                                ; preds = %if.else20.i
  %linenum.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 2
  %410 = load i32* %linenum.i, align 4, !tbaa !55
  %cmp24.i = icmp eq i32 %410, 0
  br i1 %cmp24.i, label %warn_if_shadowing.exit, label %land.lhs.true26.i

land.lhs.true26.i:                                ; preds = %land.lhs.true22.i
  %abstract_origin.i = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 13
  %411 = load %union.tree_node** %abstract_origin.i, align 8, !tbaa !42
  %cmp28.i = icmp eq %union.tree_node* %411, null
  %cmp33.i = icmp eq %union.tree_node* %411, %x
  %or.cond.i = or i1 %cmp28.i, %cmp33.i
  br i1 %or.cond.i, label %if.then35.i, label %warn_if_shadowing.exit

if.then35.i:                                      ; preds = %land.lhs.true26.i
  %bf.load38.i = load i32* %code, align 8
  %bf.clear39.i = and i32 %bf.load38.i, 255
  %cmp40.i = icmp eq i32 %bf.clear39.i, 35
  br i1 %cmp40.i, label %land.lhs.true42.i, label %if.else48.i

land.lhs.true42.i:                                ; preds = %if.then35.i
  %412 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %level_chain43.i = getelementptr inbounds %struct.binding_level* %412, i64 0, i32 5
  %413 = load %struct.binding_level** %level_chain43.i, align 8, !tbaa !38
  %parm_flag44.i = getelementptr inbounds %struct.binding_level* %413, i64 0, i32 6
  %414 = load i8* %parm_flag44.i, align 1, !tbaa !37
  %tobool46.i = icmp eq i8 %414, 0
  br i1 %tobool46.i, label %if.else48.i, label %warn_if_shadowing.exit

if.else48.i:                                      ; preds = %land.lhs.true42.i, %if.then35.i
  br i1 %cmp.i915, label %if.then50.i, label %if.else60.i

if.then50.i:                                      ; preds = %if.else48.i
  %code52.i = getelementptr inbounds %union.tree_node* %371, i64 0, i32 0, i32 0, i32 2
  %bf.load53.i = load i32* %code52.i, align 8
  %bf.clear54.i = and i32 %bf.load53.i, 255
  %cmp55.i = icmp eq i32 %bf.clear54.i, 35
  br i1 %cmp55.i, label %if.then57.i, label %if.else58.i

if.then57.i:                                      ; preds = %if.then50.i
  tail call void @shadow_warning(i8* getelementptr inbounds ([12 x i8]* @.str325, i64 0, i64 0), %union.tree_node* %401, %union.tree_node* %371) #5
  br label %warn_if_shadowing.exit

if.else58.i:                                      ; preds = %if.then50.i
  tail call void @shadow_warning(i8* getelementptr inbounds ([17 x i8]* @.str326, i64 0, i64 0), %union.tree_node* %401, %union.tree_node* %371) #5
  br label %warn_if_shadowing.exit

if.else60.i:                                      ; preds = %if.else48.i
  %global_value.i918 = getelementptr inbounds %union.tree_node* %401, i64 0, i32 0, i32 6
  %415 = bitcast %union.anon* %global_value.i918 to %union.tree_node**
  %416 = load %union.tree_node** %415, align 8, !tbaa !8
  %cmp61.i = icmp eq %union.tree_node* %416, null
  %417 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp65.i = icmp eq %union.tree_node* %416, %417
  %or.cond90.i = or i1 %cmp61.i, %cmp65.i
  br i1 %or.cond90.i, label %warn_if_shadowing.exit, label %if.then67.i

if.then67.i:                                      ; preds = %if.else60.i
  tail call void @shadow_warning(i8* getelementptr inbounds ([21 x i8]* @.str327, i64 0, i64 0), %union.tree_node* %401, %union.tree_node* %416) #5
  br label %warn_if_shadowing.exit

warn_if_shadowing.exit:                           ; preds = %if.end679, %if.then15.i, %if.else.i, %if.else20.i, %land.lhs.true22.i, %land.lhs.true26.i, %land.lhs.true42.i, %if.then57.i, %if.else58.i, %if.else60.i, %if.then67.i
  br i1 %cmp486, label %if.end685, label %if.then681

if.then681:                                       ; preds = %warn_if_shadowing.exit
  %shadowed = getelementptr inbounds %struct.binding_level* %b.0, i64 0, i32 2
  %418 = load %union.tree_node** %shadowed, align 8, !tbaa !56
  %call682 = tail call %union.tree_node* @tree_cons(%union.tree_node* %0, %union.tree_node* %371, %union.tree_node* %418) #5
  store %union.tree_node* %call682, %union.tree_node** %shadowed, align 8, !tbaa !56
  br label %if.end685

if.end685:                                        ; preds = %land.lhs.true445, %land.lhs.true434, %if.then462, %land.lhs.true424, %land.lhs.true417, %if.end410, %warn_if_shadowing.exit, %if.then681, %if.else474, %if.then469, %if.else452
  %type687 = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 1
  %419 = load %union.tree_node** %type687, align 8, !tbaa !23
  %420 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp688 = icmp eq %union.tree_node* %419, %420
  br i1 %cmp688, label %if.end721, label %land.lhs.true689

land.lhs.true689:                                 ; preds = %if.end685
  %size = getelementptr inbounds %union.tree_node* %419, i64 0, i32 0, i32 2
  %421 = bitcast i32* %size to %union.tree_node**
  %422 = load %union.tree_node** %421, align 8, !tbaa !80
  %cmp693 = icmp eq %union.tree_node* %422, null
  br i1 %cmp693, label %while.cond697, label %if.end721

while.cond697:                                    ; preds = %land.lhs.true689, %while.body703
  %element.0 = phi %union.tree_node* [ %423, %while.body703 ], [ %419, %land.lhs.true689 ]
  %code699 = getelementptr inbounds %union.tree_node* %element.0, i64 0, i32 0, i32 0, i32 2
  %bf.load700 = load i32* %code699, align 8
  %bf.clear701 = and i32 %bf.load700, 255
  switch i32 %bf.clear701, label %if.end721 [
    i32 18, label %while.body703
    i32 20, label %if.then718
    i32 21, label %if.then718
  ]

while.body703:                                    ; preds = %while.cond697
  %type705 = getelementptr inbounds %union.tree_node* %element.0, i64 0, i32 0, i32 0, i32 1
  %423 = load %union.tree_node** %type705, align 8, !tbaa !23
  br label %while.cond697

if.then718:                                       ; preds = %while.cond697, %while.cond697
  %n_incomplete = getelementptr inbounds %struct.binding_level* %b.0, i64 0, i32 11
  %424 = load i32* %n_incomplete, align 4, !tbaa !81
  %inc = add nsw i32 %424, 1
  store i32 %inc, i32* %n_incomplete, align 4, !tbaa !81
  br label %if.end721

if.end721:                                        ; preds = %while.cond697, %land.lhs.true689, %if.end685, %if.end27, %if.then718
  %b.1 = phi %struct.binding_level* [ %b.0, %land.lhs.true689 ], [ %b.0, %if.then718 ], [ %b.0, %if.end685 ], [ %1, %if.end27 ], [ %b.0, %while.cond697 ]
  %names = getelementptr inbounds %struct.binding_level* %b.1, i64 0, i32 0
  %425 = load %union.tree_node** %names, align 8, !tbaa !34
  %chain = getelementptr inbounds %union.tree_node* %x, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %425, %union.tree_node** %chain, align 8, !tbaa !29
  store %union.tree_node* %x, %union.tree_node** %names, align 8, !tbaa !34
  br label %return

return:                                           ; preds = %if.then131, %if.end721, %if.then137
  %retval.0 = phi %union.tree_node* [ %t.2, %if.then137 ], [ %x, %if.end721 ], [ %t.2, %if.then131 ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @build_decl(i32, %union.tree_node*, %union.tree_node*) #1

declare i8* @ggc_alloc_cleared(i64) #1

; Function Attrs: nounwind readonly uwtable
define %union.tree_node* @lookup_name_current_level(%union.tree_node* readonly %name) #4 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %1 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp = icmp eq %struct.binding_level* %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %global_value = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 6
  %2 = bitcast %union.anon* %global_value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !8
  br label %return

if.end:                                           ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 7
  %5 = load %union.tree_node** %4, align 8, !tbaa !15
  %cmp1 = icmp eq %union.tree_node* %5, null
  br i1 %cmp1, label %return, label %if.end3

if.end3:                                          ; preds = %if.end
  %names = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 0
  %t.012 = load %union.tree_node** %names, align 8
  %tobool13 = icmp eq %union.tree_node* %t.012, null
  br i1 %tobool13, label %return, label %for.body

for.cond:                                         ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %t.014, i64 0, i32 0, i32 0, i32 0
  %t.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %t.0, null
  br i1 %tobool, label %return, label %for.body

for.body:                                         ; preds = %if.end3, %for.cond
  %t.014 = phi %union.tree_node* [ %t.0, %for.cond ], [ %t.012, %if.end3 ]
  %name4 = getelementptr inbounds %union.tree_node* %t.014, i64 0, i32 0, i32 8
  %6 = load %union.tree_node** %name4, align 8, !tbaa !48
  %cmp5 = icmp eq %union.tree_node* %6, %name
  br i1 %cmp5, label %return, label %for.cond

return:                                           ; preds = %for.cond, %for.body, %if.end3, %if.end, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ null, %if.end ], [ null, %if.end3 ], [ null, %for.cond ], [ %t.014, %for.body ]
  ret %union.tree_node* %retval.0
}

declare void @pedwarn(i8*, ...) #1

declare void @pedwarn_with_file_and_line(i8*, i32, i8*, ...) #1

declare %union.tree_node* @build_type_copy(%union.tree_node*) #1

declare i32 @comptypes(%union.tree_node*, %union.tree_node*) #1

declare void @pedwarn_with_decl(%union.tree_node*, i8*, ...) #1

; Function Attrs: nounwind readonly uwtable
define %union.tree_node* @lookup_name(%union.tree_node* nocapture readonly %name) #4 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %1 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp = icmp eq %struct.binding_level* %0, %1
  br i1 %cmp, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 7
  %3 = load %union.tree_node** %2, align 8, !tbaa !15
  %tobool = icmp eq %union.tree_node* %3, null
  br i1 %tobool, label %if.else, label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %global_value = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 6
  %4 = bitcast %union.anon* %global_value to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !8
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.else
  %val.0 = phi %union.tree_node* [ %5, %if.else ], [ %3, %land.lhs.true ]
  ret %union.tree_node* %val.0
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @pushdecl_top_level(%union.tree_node* %x) #0 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %1 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  store %struct.binding_level* %1, %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %call = tail call %union.tree_node* @pushdecl(%union.tree_node* %x)
  store %struct.binding_level* %0, %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  ret %union.tree_node* %call
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @implicitly_declare(%union.tree_node* %functionid) #0 {
entry:
  %decl = alloca %union.tree_node*, align 8
  %0 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 22), align 8, !tbaa !1
  %call = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %functionid, %union.tree_node* %0) #5
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !tbaa !1
  %public_flag = getelementptr inbounds %union.tree_node* %functionid, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %public_flag, align 8
  %bf.clear = and i32 %bf.load, 524288
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %global_value = getelementptr inbounds %union.tree_node* %functionid, i64 0, i32 0, i32 6
  %1 = bitcast %union.anon* %global_value to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !8
  %cmp = icmp eq %union.tree_node* %2, null
  %. = zext i1 %cmp to i32
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %traditional_warning.0 = phi i32 [ 0, %entry ], [ %., %land.lhs.true ]
  %3 = getelementptr inbounds %union.tree_node* %functionid, i64 0, i32 0, i32 9
  %4 = load %union.tree_node** %3, align 8, !tbaa !17
  %cmp1 = icmp eq %union.tree_node* %4, null
  %external_flag = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 5
  %5 = bitcast i48* %external_flag to i64*
  %bf.load3 = load i64* %5, align 8
  %bf.set = or i64 %bf.load3, 256
  store i64 %bf.set, i64* %5, align 8
  %6 = load %union.tree_node** %decl, align 8, !tbaa !1
  %public_flag6 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load7 = load i32* %public_flag6, align 8
  %bf.set9 = or i32 %bf.load7, 524288
  store i32 %bf.set9, i32* %public_flag6, align 8
  %7 = load %union.tree_node** %decl, align 8, !tbaa !1
  store %union.tree_node* %7, %union.tree_node** %3, align 8, !tbaa !17
  %call11 = call %union.tree_node* @pushdecl(%union.tree_node* %7)
  call void @maybe_objc_check_decl(%union.tree_node* %7) #5
  call void @rest_of_decl_compilation(%union.tree_node* %7, i8* null, i32 0, i32 0) #5
  br i1 %cmp1, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end
  %id1.i = getelementptr inbounds %union.tree_node* %functionid, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds i8** %id1.i, i64 1
  %9 = load i8** %8, align 8, !tbaa !21
  %10 = load i32* @mesg_implicit_function_declaration, align 4, !tbaa !5
  switch i32 %10, label %if.end19 [
    i32 2, label %if.then.i
    i32 1, label %if.then3.i
  ]

if.then.i:                                        ; preds = %if.then13
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str149, i64 0, i64 0), i8* %9) #5
  br label %if.end19

if.then3.i:                                       ; preds = %if.then13
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([38 x i8]* @.str149, i64 0, i64 0), i8* %9) #5
  br label %if.end19

if.else:                                          ; preds = %if.end
  %11 = load i32* @warn_traditional, align 4, !tbaa !5
  %tobool14 = icmp ne i32 %11, 0
  %tobool16 = icmp ne i32 %traditional_warning.0, 0
  %or.cond = and i1 %tobool14, %tobool16
  br i1 %or.cond, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.else
  %id = getelementptr inbounds %union.tree_node* %functionid, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds i8** %id, i64 1
  %13 = load i8** %12, align 8, !tbaa !21
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([53 x i8]* @.str148, i64 0, i64 0), i8* %13) #5
  br label %if.end19

if.end19:                                         ; preds = %if.then3.i, %if.then.i, %if.then13, %if.else, %if.then17
  %14 = load %union.tree_node** %decl, align 8, !tbaa !1
  call void @gen_aux_info_record(%union.tree_node* %14, i32 0, i32 1, i32 0) #5
  %call20 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl, %union.tree_node* null, i32 0) #5
  %15 = load %union.tree_node** %decl, align 8, !tbaa !1
  ret %union.tree_node* %15
}

declare void @maybe_objc_check_decl(%union.tree_node*) #1

declare void @rest_of_decl_compilation(%union.tree_node*, i8*, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @implicit_decl_warning(%union.tree_node* nocapture readonly %id) #0 {
entry:
  %id1 = getelementptr inbounds %union.tree_node* %id, i64 0, i32 0, i32 1
  %0 = getelementptr inbounds i8** %id1, i64 1
  %1 = load i8** %0, align 8, !tbaa !21
  %2 = load i32* @mesg_implicit_function_declaration, align 4, !tbaa !5
  switch i32 %2, label %if.end4 [
    i32 2, label %if.then
    i32 1, label %if.then3
  ]

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str149, i64 0, i64 0), i8* %1) #5
  br label %if.end4

if.then3:                                         ; preds = %entry
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([38 x i8]* @.str149, i64 0, i64 0), i8* %1) #5
  br label %if.end4

if.end4:                                          ; preds = %entry, %if.then3, %if.then
  ret void
}

declare void @gen_aux_info_record(%union.tree_node*, i32, i32, i32) #1

declare %union.tree_node* @decl_attributes(%union.tree_node**, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @lookup_label(%union.tree_node* %id) #0 {
entry:
  %0 = getelementptr inbounds %union.tree_node* %id, i64 0, i32 0, i32 8
  %1 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp42 = icmp eq %union.tree_node* %1, null
  %id1.pre = getelementptr inbounds %union.tree_node* %id, i64 0, i32 0, i32 1
  %.pre = getelementptr inbounds i8** %id1.pre, i64 1
  br i1 %cmp42, label %if.then, label %if.end

if.then:                                          ; preds = %tailrecurse.backedge, %entry
  %2 = load i8** %.pre, align 8, !tbaa !21
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str150, i64 0, i64 0), i8* %2) #5
  br label %return

if.end:                                           ; preds = %entry, %tailrecurse.backedge
  %3 = phi %union.tree_node* [ %10, %tailrecurse.backedge ], [ %1, %entry ]
  %4 = load %union.tree_node** %0, align 8
  %cmp2 = icmp eq %union.tree_node* %4, null
  br i1 %cmp2, label %if.end8, label %if.then3

if.then3:                                         ; preds = %if.end
  %context = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 9
  %5 = load %union.tree_node** %context, align 8, !tbaa !53
  %cmp5 = icmp eq %union.tree_node* %5, %3
  br i1 %cmp5, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then3
  %lang_flag_1 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %lang_flag_1, align 8
  %bf.clear = and i32 %bf.load, 33554432
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %for.cond.i.preheader, label %return

for.cond.i.preheader:                             ; preds = %land.lhs.true
  %dup.0.i39 = load %union.tree_node** @named_labels, align 8
  %tobool.i40 = icmp eq %union.tree_node* %dup.0.i39, null
  br i1 %tobool.i40, label %for.end.i, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %chain.i = getelementptr inbounds %union.tree_node* %dup.0.i41, i64 0, i32 0, i32 0, i32 0
  %dup.0.i = load %union.tree_node** %chain.i, align 8
  %tobool.i = icmp eq %union.tree_node* %dup.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i.preheader, %for.cond.i
  %dup.0.i41 = phi %union.tree_node* [ %dup.0.i, %for.cond.i ], [ %dup.0.i39, %for.cond.i.preheader ]
  %value.i = getelementptr inbounds %union.tree_node* %dup.0.i41, i64 0, i32 0, i32 2
  %6 = bitcast i32* %value.i to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !50
  %cmp1.i = icmp eq %union.tree_node* %7, %4
  br i1 %cmp1.i, label %if.then2.i, label %for.cond.i

if.then2.i:                                       ; preds = %for.body.i
  %8 = load i8** %.pre, align 8, !tbaa !21
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([33 x i8]* @.str151, i64 0, i64 0), i8* %8) #5
  %9 = load %union.tree_node** %6, align 8, !tbaa !50
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %9, i8* getelementptr inbounds ([31 x i8]* @.str152, i64 0, i64 0)) #5
  br label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %if.then2.i, %for.end.i
  %10 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %10, null
  br i1 %cmp, label %if.then, label %if.end

for.end.i:                                        ; preds = %for.cond.i, %for.cond.i.preheader
  %11 = load %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  %call5.i = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %4, %union.tree_node* %11) #5
  store %union.tree_node* %call5.i, %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  store %union.tree_node* null, %union.tree_node** %0, align 8, !tbaa !16
  br label %tailrecurse.backedge

if.end8:                                          ; preds = %if.end
  %12 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call9 = tail call %union.tree_node* @build_decl(i32 31, %union.tree_node* %id, %union.tree_node* %12) #5
  %13 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %context11 = getelementptr inbounds %union.tree_node* %call9, i64 0, i32 0, i32 9
  store %union.tree_node* %13, %union.tree_node** %context11, align 8, !tbaa !53
  %mode = getelementptr inbounds %union.tree_node* %call9, i64 0, i32 0, i32 5
  %14 = bitcast i48* %mode to i64*
  %bf.load13 = load i64* %14, align 8
  %bf.clear14 = and i64 %bf.load13, -256
  store i64 %bf.clear14, i64* %14, align 8
  %15 = load i32* @lineno, align 4, !tbaa !5
  %linenum = getelementptr inbounds %union.tree_node* %call9, i64 0, i32 0, i32 2
  store i32 %15, i32* %linenum, align 4, !tbaa !55
  %16 = load i8** @input_filename, align 8, !tbaa !1
  %filename = getelementptr inbounds %union.tree_node* %call9, i64 0, i32 0, i32 1
  store i8* %16, i8** %filename, align 8, !tbaa !54
  store %union.tree_node* %call9, %union.tree_node** %0, align 8, !tbaa !16
  %17 = load %union.tree_node** @named_labels, align 8, !tbaa !1
  %call18 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call9, %union.tree_node* %17) #5
  store %union.tree_node* %call18, %union.tree_node** @named_labels, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %if.then3, %land.lhs.true, %if.end8, %if.then
  %retval.0 = phi %union.tree_node* [ null, %if.then ], [ %call9, %if.end8 ], [ %4, %land.lhs.true ], [ %4, %if.then3 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @shadow_label(%union.tree_node* %name) #0 {
entry:
  %0 = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 8
  %1 = load %union.tree_node** %0, align 8, !tbaa !16
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %if.end7, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %dup.018 = load %union.tree_node** @named_labels, align 8
  %tobool19 = icmp eq %union.tree_node* %dup.018, null
  br i1 %tobool19, label %for.end, label %for.body

for.cond:                                         ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %dup.020, i64 0, i32 0, i32 0, i32 0
  %dup.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %dup.0, null
  br i1 %tobool, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %dup.020 = phi %union.tree_node* [ %dup.0, %for.cond ], [ %dup.018, %for.cond.preheader ]
  %value = getelementptr inbounds %union.tree_node* %dup.020, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !50
  %cmp1 = icmp eq %union.tree_node* %3, %1
  br i1 %cmp1, label %if.then2, label %for.cond

if.then2:                                         ; preds = %for.body
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds i8** %id, i64 1
  %5 = load i8** %4, align 8, !tbaa !21
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([33 x i8]* @.str151, i64 0, i64 0), i8* %5) #5
  %6 = load %union.tree_node** %2, align 8, !tbaa !50
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %6, i8* getelementptr inbounds ([31 x i8]* @.str152, i64 0, i64 0)) #5
  %call = tail call %union.tree_node* @lookup_label(%union.tree_node* %name)
  br label %return

for.end:                                          ; preds = %for.cond, %for.cond.preheader
  %7 = load %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  %call5 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %1, %union.tree_node* %7) #5
  store %union.tree_node* %call5, %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  store %union.tree_node* null, %union.tree_node** %0, align 8, !tbaa !16
  br label %if.end7

if.end7:                                          ; preds = %entry, %for.end
  %call8 = tail call %union.tree_node* @lookup_label(%union.tree_node* %name)
  br label %return

return:                                           ; preds = %if.end7, %if.then2
  %retval.0 = phi %union.tree_node* [ %call, %if.then2 ], [ %call8, %if.end7 ]
  ret %union.tree_node* %retval.0
}

declare void @warning_with_file_and_line(i8*, i32, i8*, ...) #1

declare void @error_with_file_and_line(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind readonly uwtable
define %union.tree_node* @gettags() #4 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tags = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 1
  %1 = load %union.tree_node** %tags, align 8, !tbaa !35
  ret %union.tree_node* %1
}

; Function Attrs: nounwind uwtable
define void @pending_xref_error() #0 {
entry:
  %0 = load %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i8** @pending_invalid_xref_file, align 8, !tbaa !1
  %2 = load i32* @pending_invalid_xref_line, align 4, !tbaa !5
  %id = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds i8** %id, i64 1
  %4 = load i8** %3, align 8, !tbaa !21
  tail call void (i8*, i32, i8*, ...)* @error_with_file_and_line(i8* %1, i32 %2, i8* getelementptr inbounds ([34 x i8]* @.str155, i64 0, i64 0), i8* %4) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind uwtable
define void @c_init_decl_processing() #0 {
entry:
  tail call void @c_parse_init() #5
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !tbaa !1
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8, !tbaa !1
  store %struct.binding_level* null, %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  store %struct.binding_level* null, %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  %0 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.binding_level* %0, null
  br i1 %cmp.i, label %if.end.i, label %if.end2.i

if.end.i:                                         ; preds = %entry
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8, !tbaa !1
  br label %if.end2.i

if.end2.i:                                        ; preds = %entry, %if.end.i
  %call.i.i = tail call noalias i8* @xmalloc(i64 72) #5
  %1 = bitcast i8* %call.i.i to %struct.binding_level*
  %.pre = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  tail call void @llvm.memset.p0i8.i64(i8* %call.i.i, i8 0, i64 72, i32 8, i1 false) #5
  %tobool4.i = icmp eq %struct.binding_level* %.pre, null
  br i1 %tobool4.i, label %pushlevel.exit, label %cond.true.i

cond.true.i:                                      ; preds = %if.end2.i
  %subblocks_tag_transparent.i = getelementptr inbounds %struct.binding_level* %.pre, i64 0, i32 8
  %2 = load i8* %subblocks_tag_transparent.i, align 1, !tbaa !39
  %phitmp.i = icmp ne i8 %2, 0
  br label %pushlevel.exit

pushlevel.exit:                                   ; preds = %if.end2.i, %cond.true.i
  %3 = phi %struct.binding_level* [ %.pre, %cond.true.i ], [ null, %if.end2.i ]
  %4 = phi i1 [ %phitmp.i, %cond.true.i ], [ false, %if.end2.i ]
  %conv6.i = zext i1 %4 to i8
  %5 = getelementptr inbounds i8* %call.i.i, i64 49
  store i8 %conv6.i, i8* %5, align 1, !tbaa !36
  %level_chain8.i = getelementptr inbounds i8* %call.i.i, i64 40
  %6 = bitcast i8* %level_chain8.i to %struct.binding_level**
  store %struct.binding_level* %3, %struct.binding_level** %6, align 8, !tbaa !38
  store %struct.binding_level* %1, %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %.b.i = load i1* @keep_next_level_flag, align 1
  %conv9.i = zext i1 %.b.i to i8
  %7 = getelementptr inbounds i8* %call.i.i, i64 51
  store i8 %conv9.i, i8* %7, align 1, !tbaa !33
  store i1 false, i1* @keep_next_level_flag, align 1
  %.b16.i = load i1* @keep_next_if_subblocks, align 1
  %conv10.i = zext i1 %.b16.i to i8
  %8 = getelementptr inbounds i8* %call.i.i, i64 52
  store i8 %conv10.i, i8* %8, align 1, !tbaa !30
  store i1 false, i1* @keep_next_if_subblocks, align 1
  store %struct.binding_level* %1, %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %9 = load i32* @flag_signed_char, align 4, !tbaa !5
  tail call void @build_common_tree_nodes(i32 %9) #5
  tail call void @c_common_nodes_and_builtins() #5
  %10 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  store %union.tree_node* %10, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 16), align 8, !tbaa !1
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !1
  store %union.tree_node* %11, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 17), align 8, !tbaa !1
  %12 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !1
  store %union.tree_node* %12, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 18), align 8, !tbaa !1
  %call = tail call %union.tree_node* @make_unsigned_type(i32 8) #5
  store %union.tree_node* %call, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 19), align 8, !tbaa !1
  %code = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, -256
  %bf.set = or i32 %bf.clear, 11
  store i32 %bf.set, i32* %code, align 8
  %call1 = tail call %union.tree_node* @build_int_2_wide(i64 1, i64 0) #5
  %13 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 19), align 8, !tbaa !1
  %14 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 13
  store %union.tree_node* %call1, %union.tree_node** %14, align 8, !tbaa !82
  %15 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 19), align 8, !tbaa !1
  %16 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 13
  %17 = load %union.tree_node** %16, align 8, !tbaa !82
  %type5 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %15, %union.tree_node** %type5, align 8, !tbaa !23
  %18 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 19), align 8, !tbaa !1
  %type6 = bitcast %union.tree_node* %18 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type6, i64 0, i32 6
  %bf.load7 = load i32* %precision, align 4
  %bf.clear8 = and i32 %bf.load7, -512
  %bf.set9 = or i32 %bf.clear8, 1
  store i32 %bf.set9, i32* %precision, align 4
  %call10 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([6 x i8]* @.str156, i64 0, i64 0)) #5
  %19 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 19), align 8, !tbaa !1
  %call11 = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call10, %union.tree_node* %19) #5
  %call12 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call11)
  %call13 = tail call %union.tree_node* @build_int_2_wide(i64 0, i64 0) #5
  store %union.tree_node* %call13, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 21), align 8, !tbaa !1
  %20 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 19), align 8, !tbaa !1
  %type15 = getelementptr inbounds %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %20, %union.tree_node** %type15, align 8, !tbaa !23
  %call16 = tail call %union.tree_node* @build_int_2_wide(i64 1, i64 0) #5
  store %union.tree_node* %call16, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 20), align 8, !tbaa !1
  %21 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 19), align 8, !tbaa !1
  %type18 = getelementptr inbounds %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %21, %union.tree_node** %type18, align 8, !tbaa !23
  %22 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 8, !tbaa !1
  %23 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !1
  %call19 = tail call %union.tree_node* @build_function_type(%union.tree_node* %23, %union.tree_node* %22) #5
  %24 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 28), align 8, !tbaa !1
  %call20 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %24, %union.tree_node* %22) #5
  %call21 = tail call %union.tree_node* @build_function_type(%union.tree_node* %24, %union.tree_node* %call20) #5
  %25 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 24), align 8, !tbaa !1
  %type22 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %precision23 = getelementptr inbounds %struct.tree_type* %type22, i64 0, i32 6
  %bf.load24 = load i32* %precision23, align 4
  %bf.clear25 = and i32 %bf.load24, 511
  %26 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !tbaa !1
  %type26 = bitcast %union.tree_node* %26 to %struct.tree_type*
  %precision27 = getelementptr inbounds %struct.tree_type* %type26, i64 0, i32 6
  %bf.load28 = load i32* %precision27, align 4
  %bf.clear29 = and i32 %bf.load28, 511
  %cmp = icmp eq i32 %bf.clear25, %bf.clear29
  br i1 %cmp, label %if.end41, label %if.else

if.else:                                          ; preds = %pushlevel.exit
  %27 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type34 = bitcast %union.tree_node* %27 to %struct.tree_type*
  %precision35 = getelementptr inbounds %struct.tree_type* %type34, i64 0, i32 6
  %bf.load36 = load i32* %precision35, align 4
  %bf.clear37 = and i32 %bf.load36, 511
  %cmp38 = icmp eq i32 %bf.clear25, %bf.clear37
  br i1 %cmp38, label %if.end41, label %if.end41.thread

if.end41.thread:                                  ; preds = %if.else
  call void @llvm.memset.p0i8.i64(i8* bitcast (%union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 23) to i8*), i8 0, i64 16, i32 8, i1 false)
  br label %if.end50

if.end41:                                         ; preds = %if.else, %pushlevel.exit
  %storemerge93 = phi %union.tree_node* [ %26, %pushlevel.exit ], [ %27, %if.else ]
  %storemerge91.in = phi %union.tree_node** [ getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 8), %pushlevel.exit ], [ getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), %if.else ]
  store %union.tree_node* %storemerge93, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 23), align 8, !tbaa !1
  %storemerge91 = load %union.tree_node** %storemerge91.in, align 8
  store %union.tree_node* %storemerge91, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 24), align 8, !tbaa !1
  %cmp42 = icmp eq %union.tree_node* %storemerge93, null
  br i1 %cmp42, label %if.end50, label %if.then43

if.then43:                                        ; preds = %if.end41
  %call44 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8]* @.str157, i64 0, i64 0)) #5
  %28 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 23), align 8, !tbaa !1
  %call45 = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call44, %union.tree_node* %28) #5
  %call46 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call45)
  %call47 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([15 x i8]* @.str158, i64 0, i64 0)) #5
  %29 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 24), align 8, !tbaa !1
  %call48 = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call47, %union.tree_node* %29) #5
  %call49 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call48)
  %.pre94 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 24), align 8, !tbaa !1
  %.pre95 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !tbaa !1
  br label %if.end50

if.end50:                                         ; preds = %if.end41.thread, %if.end41, %if.then43
  %30 = phi %union.tree_node* [ %26, %if.end41.thread ], [ %26, %if.end41 ], [ %.pre95, %if.then43 ]
  %31 = phi %union.tree_node* [ %25, %if.end41.thread ], [ %25, %if.end41 ], [ %.pre94, %if.then43 ]
  %type51 = bitcast %union.tree_node* %31 to %struct.tree_type*
  %precision52 = getelementptr inbounds %struct.tree_type* %type51, i64 0, i32 6
  %bf.load53 = load i32* %precision52, align 4
  %bf.clear54 = shl i32 %bf.load53, 1
  %mul = and i32 %bf.clear54, 1022
  %type55 = bitcast %union.tree_node* %30 to %struct.tree_type*
  %precision56 = getelementptr inbounds %struct.tree_type* %type55, i64 0, i32 6
  %bf.load57 = load i32* %precision56, align 4
  %bf.clear58 = and i32 %bf.load57, 511
  %cmp59 = icmp eq i32 %mul, %bf.clear58
  br i1 %cmp59, label %if.end75, label %if.else61

if.else61:                                        ; preds = %if.end50
  %32 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !1
  %type67 = bitcast %union.tree_node* %32 to %struct.tree_type*
  %precision68 = getelementptr inbounds %struct.tree_type* %type67, i64 0, i32 6
  %bf.load69 = load i32* %precision68, align 4
  %bf.clear70 = and i32 %bf.load69, 511
  %cmp71 = icmp eq i32 %mul, %bf.clear70
  br i1 %cmp71, label %if.end75, label %if.end75.thread

if.end75.thread:                                  ; preds = %if.else61
  call void @llvm.memset.p0i8.i64(i8* bitcast (%union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 25) to i8*), i8 0, i64 16, i32 8, i1 false)
  br label %if.end84

if.end75:                                         ; preds = %if.else61, %if.end50
  %storemerge92 = phi %union.tree_node* [ %30, %if.end50 ], [ %32, %if.else61 ]
  %storemerge.in = phi %union.tree_node** [ getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 8), %if.end50 ], [ getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), %if.else61 ]
  store %union.tree_node* %storemerge92, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 25), align 8, !tbaa !1
  %storemerge = load %union.tree_node** %storemerge.in, align 8
  store %union.tree_node* %storemerge, %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 26), align 8, !tbaa !1
  %cmp76 = icmp eq %union.tree_node* %storemerge92, null
  br i1 %cmp76, label %if.end84, label %if.then77

if.then77:                                        ; preds = %if.end75
  %call78 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([14 x i8]* @.str159, i64 0, i64 0)) #5
  %33 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 25), align 8, !tbaa !1
  %call79 = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call78, %union.tree_node* %33) #5
  %call80 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call79)
  %call81 = tail call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([15 x i8]* @.str160, i64 0, i64 0)) #5
  %34 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 26), align 8, !tbaa !1
  %call82 = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* %call81, %union.tree_node* %34) #5
  %call83 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call82)
  br label %if.end84

if.end84:                                         ; preds = %if.end75.thread, %if.end75, %if.then77
  %35 = load i32* @pedantic, align 4, !tbaa !5
  store i32 %35, i32* @pedantic_lvalues, align 4, !tbaa !5
  store %union.tree_node* (%union.tree_node*, i32)* @c_make_fname_decl, %union.tree_node* (%union.tree_node*, i32)** @make_fname_decl, align 8, !tbaa !1
  tail call void @start_fname_decls() #5
  store void (%union.tree_node*)* @finish_incomplete_decl, void (%union.tree_node*)** @incomplete_decl_finalize_hook, align 8, !tbaa !1
  tail call void @ggc_add_tree_root(%union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 0), i32 32) #5
  tail call void @ggc_add_root(i8* bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i32 1, i32 32, void (i8*)* @mark_stmt_tree) #5
  tail call void @ggc_add_tree_root(%union.tree_node** @c_scope_stmt_stack, i32 1) #5
  tail call void @ggc_add_tree_root(%union.tree_node** @named_labels, i32 1) #5
  tail call void @ggc_add_tree_root(%union.tree_node** @shadowed_labels, i32 1) #5
  tail call void @ggc_add_root(i8* bitcast (%struct.binding_level** @current_binding_level to i8*), i32 1, i32 8, void (i8*)* @mark_binding_level) #5
  tail call void @ggc_add_root(i8* bitcast (%struct.binding_level** @label_level_chain to i8*), i32 1, i32 8, void (i8*)* @mark_binding_level) #5
  tail call void @ggc_add_tree_root(%union.tree_node** @static_ctors, i32 1) #5
  tail call void @ggc_add_tree_root(%union.tree_node** @static_dtors, i32 1) #5
  ret void
}

declare void @c_parse_init() #1

declare void @build_common_tree_nodes(i32) #1

declare void @c_common_nodes_and_builtins() #1

declare %union.tree_node* @make_unsigned_type(i32) #1

declare %union.tree_node* @build_int_2_wide(i64, i64) #1

declare %union.tree_node* @get_identifier(i8*) #1

declare %union.tree_node* @build_function_type(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @c_make_fname_decl(%union.tree_node* %id, i32 %type_dep) #0 {
entry:
  %call = tail call i8* @fname_as_string(i32 %type_dep) #5
  %call1 = tail call i64 @strlen(i8* %call) #5
  %0 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %call2 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %0, i32 1) #5
  %call3 = tail call %union.tree_node* @size_int_wide(i64 %call1, i32 0) #5
  %call4 = tail call %union.tree_node* @build_index_type(%union.tree_node* %call3) #5
  %call5 = tail call %union.tree_node* @build_array_type(%union.tree_node* %call2, %union.tree_node* %call4) #5
  %call6 = tail call %union.tree_node* @build_decl(i32 34, %union.tree_node* %id, %union.tree_node* %call5) #5
  %1 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %context = getelementptr inbounds %union.tree_node* %call6, i64 0, i32 0, i32 9
  store %union.tree_node* %1, %union.tree_node** %context, align 8, !tbaa !53
  %static_flag = getelementptr inbounds %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %static_flag, align 8
  %bf.set11 = or i32 %bf.load, 266240
  store i32 %bf.set11, i32* %static_flag, align 8
  %artificial_flag = getelementptr inbounds %union.tree_node* %call6, i64 0, i32 0, i32 5
  %2 = bitcast i48* %artificial_flag to i64*
  %bf.load13 = load i64* %2, align 8
  %bf.set15 = or i64 %bf.load13, 4194304
  store i64 %bf.set15, i64* %2, align 8
  %add = add i64 %call1, 1
  %conv = trunc i64 %add to i32
  %call16 = tail call %union.tree_node* @build_string(i32 %conv, i8* %call) #5
  %type18 = getelementptr inbounds %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call5, %union.tree_node** %type18, align 8, !tbaa !23
  %initial = getelementptr inbounds %union.tree_node* %call6, i64 0, i32 0, i32 12
  store %union.tree_node* %call16, %union.tree_node** %initial, align 8, !tbaa !40
  %bf.load21 = load i32* %static_flag, align 8
  %bf.set23 = or i32 %bf.load21, 65536
  store i32 %bf.set23, i32* %static_flag, align 8
  tail call void @finish_decl(%union.tree_node* %call6, %union.tree_node* %call16, %union.tree_node* null)
  ret %union.tree_node* %call6
}

declare void @start_fname_decls() #1

declare void @ggc_add_tree_root(%union.tree_node**, i32) #1

declare void @ggc_add_root(i8*, i32, i32, void (i8*)*) #1

declare void @mark_stmt_tree(i8*) #1

; Function Attrs: nounwind uwtable
define internal void @mark_binding_level(i8* nocapture readonly %arg) #0 {
entry:
  %0 = bitcast i8* %arg to %struct.binding_level**
  %level.0149 = load %struct.binding_level** %0, align 8
  %cmp150 = icmp eq %struct.binding_level* %level.0149, null
  br i1 %cmp150, label %for.end, label %do.body

do.body:                                          ; preds = %entry, %for.inc
  %level.0151 = phi %struct.binding_level* [ %level.0, %for.inc ], [ %level.0149, %entry ]
  %names = getelementptr inbounds %struct.binding_level* %level.0151, i64 0, i32 0
  %1 = load %union.tree_node** %names, align 8, !tbaa !34
  %cmp1 = icmp eq %union.tree_node* %1, null
  br i1 %cmp1, label %do.body10, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body
  %2 = bitcast %union.tree_node* %1 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %2) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %do.body2, label %do.body10

do.body2:                                         ; preds = %land.lhs.true
  %3 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 1
  %4 = load i64* %elements_used, align 8, !tbaa !83
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 0
  %5 = load i64* %num_elements, align 8, !tbaa !86
  %cmp3 = icmp ult i64 %4, %5
  br i1 %cmp3, label %if.end, label %if.then4

if.then4:                                         ; preds = %do.body2
  %mul = shl i64 %5, 1
  %call6 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %3, i64 %mul) #5
  store %struct.varray_head_tag* %call6, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used7.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call6, i64 0, i32 1
  %.pre156 = load i64* %elements_used7.phi.trans.insert, align 8, !tbaa !83
  br label %if.end

if.end:                                           ; preds = %do.body2, %if.then4
  %6 = phi i64 [ %4, %do.body2 ], [ %.pre156, %if.then4 ]
  %7 = phi %struct.varray_head_tag* [ %3, %do.body2 ], [ %call6, %if.then4 ]
  %elements_used7 = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 1
  %inc = add i64 %6, 1
  store i64 %inc, i64* %elements_used7, align 8, !tbaa !83
  %data = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %6
  store %union.tree_node* %1, %union.tree_node** %arrayidx, align 8, !tbaa !1
  br label %do.body10

do.body10:                                        ; preds = %land.lhs.true, %do.body, %if.end
  %tags = getelementptr inbounds %struct.binding_level* %level.0151, i64 0, i32 1
  %8 = load %union.tree_node** %tags, align 8, !tbaa !35
  %cmp12 = icmp eq %union.tree_node* %8, null
  br i1 %cmp12, label %do.body34, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %do.body10
  %9 = bitcast %union.tree_node* %8 to i8*
  %call14 = tail call i32 @ggc_set_mark(i8* %9) #5
  %tobool15 = icmp eq i32 %call14, 0
  br i1 %tobool15, label %do.body17, label %do.body34

do.body17:                                        ; preds = %land.lhs.true13
  %10 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used18 = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 1
  %11 = load i64* %elements_used18, align 8, !tbaa !83
  %num_elements19 = getelementptr inbounds %struct.varray_head_tag* %10, i64 0, i32 0
  %12 = load i64* %num_elements19, align 8, !tbaa !86
  %cmp20 = icmp ult i64 %11, %12
  br i1 %cmp20, label %if.end25, label %if.then21

if.then21:                                        ; preds = %do.body17
  %mul23 = shl i64 %12, 1
  %call24 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %10, i64 %mul23) #5
  store %struct.varray_head_tag* %call24, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used26.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call24, i64 0, i32 1
  %.pre155 = load i64* %elements_used26.phi.trans.insert, align 8, !tbaa !83
  br label %if.end25

if.end25:                                         ; preds = %do.body17, %if.then21
  %13 = phi i64 [ %11, %do.body17 ], [ %.pre155, %if.then21 ]
  %14 = phi %struct.varray_head_tag* [ %10, %do.body17 ], [ %call24, %if.then21 ]
  %elements_used26 = getelementptr inbounds %struct.varray_head_tag* %14, i64 0, i32 1
  %inc27 = add i64 %13, 1
  store i64 %inc27, i64* %elements_used26, align 8, !tbaa !83
  %data28 = getelementptr inbounds %struct.varray_head_tag* %14, i64 0, i32 4
  %tree29 = bitcast %union.varray_data_tag* %data28 to [1 x %union.tree_node*]*
  %arrayidx30 = getelementptr inbounds [1 x %union.tree_node*]* %tree29, i64 0, i64 %13
  store %union.tree_node* %8, %union.tree_node** %arrayidx30, align 8, !tbaa !1
  br label %do.body34

do.body34:                                        ; preds = %land.lhs.true13, %do.body10, %if.end25
  %shadowed = getelementptr inbounds %struct.binding_level* %level.0151, i64 0, i32 2
  %15 = load %union.tree_node** %shadowed, align 8, !tbaa !56
  %cmp36 = icmp eq %union.tree_node* %15, null
  br i1 %cmp36, label %do.body58, label %land.lhs.true37

land.lhs.true37:                                  ; preds = %do.body34
  %16 = bitcast %union.tree_node* %15 to i8*
  %call38 = tail call i32 @ggc_set_mark(i8* %16) #5
  %tobool39 = icmp eq i32 %call38, 0
  br i1 %tobool39, label %do.body41, label %do.body58

do.body41:                                        ; preds = %land.lhs.true37
  %17 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used42 = getelementptr inbounds %struct.varray_head_tag* %17, i64 0, i32 1
  %18 = load i64* %elements_used42, align 8, !tbaa !83
  %num_elements43 = getelementptr inbounds %struct.varray_head_tag* %17, i64 0, i32 0
  %19 = load i64* %num_elements43, align 8, !tbaa !86
  %cmp44 = icmp ult i64 %18, %19
  br i1 %cmp44, label %if.end49, label %if.then45

if.then45:                                        ; preds = %do.body41
  %mul47 = shl i64 %19, 1
  %call48 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %17, i64 %mul47) #5
  store %struct.varray_head_tag* %call48, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used50.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call48, i64 0, i32 1
  %.pre154 = load i64* %elements_used50.phi.trans.insert, align 8, !tbaa !83
  br label %if.end49

if.end49:                                         ; preds = %do.body41, %if.then45
  %20 = phi i64 [ %18, %do.body41 ], [ %.pre154, %if.then45 ]
  %21 = phi %struct.varray_head_tag* [ %17, %do.body41 ], [ %call48, %if.then45 ]
  %elements_used50 = getelementptr inbounds %struct.varray_head_tag* %21, i64 0, i32 1
  %inc51 = add i64 %20, 1
  store i64 %inc51, i64* %elements_used50, align 8, !tbaa !83
  %data52 = getelementptr inbounds %struct.varray_head_tag* %21, i64 0, i32 4
  %tree53 = bitcast %union.varray_data_tag* %data52 to [1 x %union.tree_node*]*
  %arrayidx54 = getelementptr inbounds [1 x %union.tree_node*]* %tree53, i64 0, i64 %20
  store %union.tree_node* %15, %union.tree_node** %arrayidx54, align 8, !tbaa !1
  br label %do.body58

do.body58:                                        ; preds = %land.lhs.true37, %do.body34, %if.end49
  %blocks = getelementptr inbounds %struct.binding_level* %level.0151, i64 0, i32 3
  %22 = load %union.tree_node** %blocks, align 8, !tbaa !32
  %cmp60 = icmp eq %union.tree_node* %22, null
  br i1 %cmp60, label %do.body82, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %do.body58
  %23 = bitcast %union.tree_node* %22 to i8*
  %call62 = tail call i32 @ggc_set_mark(i8* %23) #5
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %do.body65, label %do.body82

do.body65:                                        ; preds = %land.lhs.true61
  %24 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used66 = getelementptr inbounds %struct.varray_head_tag* %24, i64 0, i32 1
  %25 = load i64* %elements_used66, align 8, !tbaa !83
  %num_elements67 = getelementptr inbounds %struct.varray_head_tag* %24, i64 0, i32 0
  %26 = load i64* %num_elements67, align 8, !tbaa !86
  %cmp68 = icmp ult i64 %25, %26
  br i1 %cmp68, label %if.end73, label %if.then69

if.then69:                                        ; preds = %do.body65
  %mul71 = shl i64 %26, 1
  %call72 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %24, i64 %mul71) #5
  store %struct.varray_head_tag* %call72, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used74.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call72, i64 0, i32 1
  %.pre153 = load i64* %elements_used74.phi.trans.insert, align 8, !tbaa !83
  br label %if.end73

if.end73:                                         ; preds = %do.body65, %if.then69
  %27 = phi i64 [ %25, %do.body65 ], [ %.pre153, %if.then69 ]
  %28 = phi %struct.varray_head_tag* [ %24, %do.body65 ], [ %call72, %if.then69 ]
  %elements_used74 = getelementptr inbounds %struct.varray_head_tag* %28, i64 0, i32 1
  %inc75 = add i64 %27, 1
  store i64 %inc75, i64* %elements_used74, align 8, !tbaa !83
  %data76 = getelementptr inbounds %struct.varray_head_tag* %28, i64 0, i32 4
  %tree77 = bitcast %union.varray_data_tag* %data76 to [1 x %union.tree_node*]*
  %arrayidx78 = getelementptr inbounds [1 x %union.tree_node*]* %tree77, i64 0, i64 %27
  store %union.tree_node* %22, %union.tree_node** %arrayidx78, align 8, !tbaa !1
  br label %do.body82

do.body82:                                        ; preds = %land.lhs.true61, %do.body58, %if.end73
  %this_block = getelementptr inbounds %struct.binding_level* %level.0151, i64 0, i32 4
  %29 = load %union.tree_node** %this_block, align 8, !tbaa !43
  %cmp84 = icmp eq %union.tree_node* %29, null
  br i1 %cmp84, label %do.body106, label %land.lhs.true85

land.lhs.true85:                                  ; preds = %do.body82
  %30 = bitcast %union.tree_node* %29 to i8*
  %call86 = tail call i32 @ggc_set_mark(i8* %30) #5
  %tobool87 = icmp eq i32 %call86, 0
  br i1 %tobool87, label %do.body89, label %do.body106

do.body89:                                        ; preds = %land.lhs.true85
  %31 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used90 = getelementptr inbounds %struct.varray_head_tag* %31, i64 0, i32 1
  %32 = load i64* %elements_used90, align 8, !tbaa !83
  %num_elements91 = getelementptr inbounds %struct.varray_head_tag* %31, i64 0, i32 0
  %33 = load i64* %num_elements91, align 8, !tbaa !86
  %cmp92 = icmp ult i64 %32, %33
  br i1 %cmp92, label %if.end97, label %if.then93

if.then93:                                        ; preds = %do.body89
  %mul95 = shl i64 %33, 1
  %call96 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %31, i64 %mul95) #5
  store %struct.varray_head_tag* %call96, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used98.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call96, i64 0, i32 1
  %.pre152 = load i64* %elements_used98.phi.trans.insert, align 8, !tbaa !83
  br label %if.end97

if.end97:                                         ; preds = %do.body89, %if.then93
  %34 = phi i64 [ %32, %do.body89 ], [ %.pre152, %if.then93 ]
  %35 = phi %struct.varray_head_tag* [ %31, %do.body89 ], [ %call96, %if.then93 ]
  %elements_used98 = getelementptr inbounds %struct.varray_head_tag* %35, i64 0, i32 1
  %inc99 = add i64 %34, 1
  store i64 %inc99, i64* %elements_used98, align 8, !tbaa !83
  %data100 = getelementptr inbounds %struct.varray_head_tag* %35, i64 0, i32 4
  %tree101 = bitcast %union.varray_data_tag* %data100 to [1 x %union.tree_node*]*
  %arrayidx102 = getelementptr inbounds [1 x %union.tree_node*]* %tree101, i64 0, i64 %34
  store %union.tree_node* %29, %union.tree_node** %arrayidx102, align 8, !tbaa !1
  br label %do.body106

do.body106:                                       ; preds = %land.lhs.true85, %do.body82, %if.end97
  %parm_order = getelementptr inbounds %struct.binding_level* %level.0151, i64 0, i32 12
  %36 = load %union.tree_node** %parm_order, align 8, !tbaa !87
  %cmp108 = icmp eq %union.tree_node* %36, null
  br i1 %cmp108, label %for.inc, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %do.body106
  %37 = bitcast %union.tree_node* %36 to i8*
  %call110 = tail call i32 @ggc_set_mark(i8* %37) #5
  %tobool111 = icmp eq i32 %call110, 0
  br i1 %tobool111, label %do.body113, label %for.inc

do.body113:                                       ; preds = %land.lhs.true109
  %38 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used114 = getelementptr inbounds %struct.varray_head_tag* %38, i64 0, i32 1
  %39 = load i64* %elements_used114, align 8, !tbaa !83
  %num_elements115 = getelementptr inbounds %struct.varray_head_tag* %38, i64 0, i32 0
  %40 = load i64* %num_elements115, align 8, !tbaa !86
  %cmp116 = icmp ult i64 %39, %40
  br i1 %cmp116, label %if.end121, label %if.then117

if.then117:                                       ; preds = %do.body113
  %mul119 = shl i64 %40, 1
  %call120 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %38, i64 %mul119) #5
  store %struct.varray_head_tag* %call120, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used122.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call120, i64 0, i32 1
  %.pre = load i64* %elements_used122.phi.trans.insert, align 8, !tbaa !83
  br label %if.end121

if.end121:                                        ; preds = %do.body113, %if.then117
  %41 = phi i64 [ %39, %do.body113 ], [ %.pre, %if.then117 ]
  %42 = phi %struct.varray_head_tag* [ %38, %do.body113 ], [ %call120, %if.then117 ]
  %elements_used122 = getelementptr inbounds %struct.varray_head_tag* %42, i64 0, i32 1
  %inc123 = add i64 %41, 1
  store i64 %inc123, i64* %elements_used122, align 8, !tbaa !83
  %data124 = getelementptr inbounds %struct.varray_head_tag* %42, i64 0, i32 4
  %tree125 = bitcast %union.varray_data_tag* %data124 to [1 x %union.tree_node*]*
  %arrayidx126 = getelementptr inbounds [1 x %union.tree_node*]* %tree125, i64 0, i64 %41
  store %union.tree_node* %36, %union.tree_node** %arrayidx126, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true109, %do.body106, %if.end121
  %level_chain = getelementptr inbounds %struct.binding_level* %level.0151, i64 0, i32 5
  %level.0 = load %struct.binding_level** %level_chain, align 8
  %cmp = icmp eq %struct.binding_level* %level.0, null
  br i1 %cmp, label %for.end, label %do.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @builtin_function(i8* %name, %union.tree_node* %type, i32 %function_code, i32 %class, i8* %library_name) #0 {
entry:
  %decl = alloca %union.tree_node*, align 8
  %call = call %union.tree_node* @get_identifier(i8* %name) #5
  %call1 = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %call, %union.tree_node* %type) #5
  store %union.tree_node* %call1, %union.tree_node** %decl, align 8, !tbaa !1
  %external_flag = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 5
  %0 = bitcast i48* %external_flag to i64*
  %bf.load = load i64* %0, align 8
  %bf.set = or i64 %bf.load, 256
  store i64 %bf.set, i64* %0, align 8
  %1 = load %union.tree_node** %decl, align 8, !tbaa !1
  %public_flag = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load3 = load i32* %public_flag, align 8
  %bf.set5 = or i32 %bf.load3, 524288
  store i32 %bf.set5, i32* %public_flag, align 8
  %2 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %3 = load i8* %name, align 1, !tbaa !7
  %cmp = icmp eq i8 %3, 95
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %4 = load %union.tree_node** %decl, align 8, !tbaa !1
  %unsigned_flag = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load8 = load i32* %unsigned_flag, align 8
  %bf.set10 = or i32 %bf.load8, 8192
  store i32 %bf.set10, i32* %unsigned_flag, align 8
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %tobool11 = icmp eq i8* %library_name, null
  br i1 %tobool11, label %if.end15, label %if.then12

if.then12:                                        ; preds = %if.end
  %call13 = call %union.tree_node* @get_identifier(i8* %library_name) #5
  %5 = load %union.tree_node** %decl, align 8, !tbaa !1
  %assembler_name = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 14
  store %union.tree_node* %call13, %union.tree_node** %assembler_name, align 8, !tbaa !49
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then12
  %6 = load %union.tree_node** %decl, align 8, !tbaa !1
  call void @make_decl_rtl(%union.tree_node* %6, i8* null) #5
  %call16 = call %union.tree_node* @pushdecl(%union.tree_node* %6)
  %built_in_class = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 5
  %7 = bitcast i48* %built_in_class to i64*
  %8 = zext i32 %class to i64
  %bf.load18 = load i64* %7, align 8
  %bf.value = shl nuw nsw i64 %8, 29
  %bf.shl = and i64 %bf.value, 1610612736
  %bf.clear19 = and i64 %bf.load18, -1610612737
  %bf.set20 = or i64 %bf.clear19, %bf.shl
  store i64 %bf.set20, i64* %7, align 8
  %9 = load %union.tree_node** %decl, align 8, !tbaa !1
  %u1 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 6
  %f = bitcast %union.anon* %u1 to i32*
  store i32 %function_code, i32* %f, align 4, !tbaa !7
  switch i32 %function_code, label %if.end31 [
    i32 88, label %if.then26
    i32 57, label %if.then26
  ]

if.then26:                                        ; preds = %if.end15, %if.end15
  %10 = load %union.tree_node** %decl, align 8, !tbaa !1
  %volatile_flag = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load28 = load i32* %volatile_flag, align 8
  %bf.set30 = or i32 %bf.load28, 2048
  store i32 %bf.set30, i32* %volatile_flag, align 8
  br label %if.end31

if.end31:                                         ; preds = %if.end15, %if.then26
  %11 = load i8* %name, align 1, !tbaa !7
  %cmp34 = icmp eq i8 %11, 95
  br i1 %cmp34, label %lor.lhs.false36, label %if.then41

lor.lhs.false36:                                  ; preds = %if.end31
  %arrayidx37 = getelementptr inbounds i8* %name, i64 1
  %12 = load i8* %arrayidx37, align 1, !tbaa !7
  %cmp39 = icmp eq i8 %12, 95
  br i1 %cmp39, label %if.end46, label %if.then41

if.then41:                                        ; preds = %lor.lhs.false36, %if.end31
  %13 = load %union.tree_node** %decl, align 8, !tbaa !1
  %lang_flag_3 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 5
  %14 = bitcast i48* %lang_flag_3 to i64*
  %bf.load43 = load i64* %14, align 8
  %bf.set45 = or i64 %bf.load43, 1099511627776
  store i64 %bf.set45, i64* %14, align 8
  br label %if.end46

if.end46:                                         ; preds = %lor.lhs.false36, %if.then41
  %call47 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl, %union.tree_node* null, i32 0) #5
  %15 = load %union.tree_node** %decl, align 8, !tbaa !1
  ret %union.tree_node* %15
}

declare void @make_decl_rtl(%union.tree_node*, i8*) #1

; Function Attrs: nounwind uwtable
define void @insert_default_attributes(%union.tree_node* %decl) #0 {
entry:
  %public_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %public_flag, align 8
  %bf.clear = and i32 %bf.load, 524288
  %tobool = icmp eq i32 %bf.clear, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call void @c_common_insert_default_attributes(%union.tree_node* %decl) #5
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}

declare void @c_common_insert_default_attributes(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @shadow_tag(%union.tree_node* %declspecs) #0 {
entry:
  tail call void @shadow_tag_warned(%union.tree_node* %declspecs, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @shadow_tag_warned(%union.tree_node* %declspecs, i32 %warned) #0 {
entry:
  %specs = alloca %union.tree_node*, align 8
  %attrs = alloca %union.tree_node*, align 8
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  call void @split_specs_attrs(%union.tree_node* %declspecs, %union.tree_node** %specs, %union.tree_node** %attrs) #5
  %link.081 = load %union.tree_node** %specs, align 8
  %tobool82 = icmp eq %union.tree_node* %link.081, null
  br i1 %tobool82, label %if.end27, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %link.088 = phi %union.tree_node* [ %link.0, %for.inc ], [ %link.081, %entry ]
  %warned.addr.084 = phi i32 [ %warned.addr.1, %for.inc ], [ %warned, %entry ]
  %found_tag.083 = phi i32 [ %found_tag.1, %for.inc ], [ 0, %entry ]
  %value1 = getelementptr inbounds %union.tree_node* %link.088, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value1 to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !50
  %code2 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code2, align 8
  %bf.clear = and i32 %bf.load, 255
  %2 = and i32 %bf.load, 254
  %3 = icmp eq i32 %2, 20
  %cmp5 = icmp eq i32 %bf.clear, 10
  %or.cond34 = or i1 %3, %cmp5
  br i1 %or.cond34, label %if.then, label %if.else17

if.then:                                          ; preds = %for.body
  %level.015.i = load %struct.binding_level** @current_binding_level, align 8
  %tobool16.i = icmp eq %struct.binding_level* %level.015.i, null
  br i1 %tobool16.i, label %lookup_tag_reverse.exit.thread, label %for.body.i

for.body.i:                                       ; preds = %if.then, %for.inc5.i
  %level.017.i = phi %struct.binding_level* [ %level.0.i, %for.inc5.i ], [ %level.015.i, %if.then ]
  %tags.i = getelementptr inbounds %struct.binding_level* %level.017.i, i64 0, i32 1
  %tail.012.i = load %union.tree_node** %tags.i, align 8
  %tobool213.i = icmp eq %union.tree_node* %tail.012.i, null
  br i1 %tobool213.i, label %for.inc5.i, label %for.body3.i

for.cond1.i:                                      ; preds = %for.body3.i
  %chain.i = getelementptr inbounds %union.tree_node* %tail.014.i, i64 0, i32 0, i32 0, i32 0
  %tail.0.i = load %union.tree_node** %chain.i, align 8
  %tobool2.i = icmp eq %union.tree_node* %tail.0.i, null
  br i1 %tobool2.i, label %for.inc5.i, label %for.body3.i

for.body3.i:                                      ; preds = %for.body.i, %for.cond1.i
  %tail.014.i = phi %union.tree_node* [ %tail.0.i, %for.cond1.i ], [ %tail.012.i, %for.body.i ]
  %value.i = getelementptr inbounds %union.tree_node* %tail.014.i, i64 0, i32 0, i32 2
  %4 = bitcast i32* %value.i to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !50
  %cmp.i = icmp eq %union.tree_node* %5, %1
  br i1 %cmp.i, label %lookup_tag_reverse.exit, label %for.cond1.i

for.inc5.i:                                       ; preds = %for.cond1.i, %for.body.i
  %level_chain.i = getelementptr inbounds %struct.binding_level* %level.017.i, i64 0, i32 5
  %level.0.i = load %struct.binding_level** %level_chain.i, align 8
  %tobool.i = icmp eq %struct.binding_level* %level.0.i, null
  br i1 %tobool.i, label %lookup_tag_reverse.exit.thread, label %for.body.i

lookup_tag_reverse.exit.thread:                   ; preds = %for.inc5.i, %if.then
  %inc75 = add nsw i32 %found_tag.083, 1
  br label %if.then7

lookup_tag_reverse.exit:                          ; preds = %for.body3.i
  %purpose.i = getelementptr inbounds %union.tree_node* %tail.014.i, i64 0, i32 0, i32 1
  %6 = load i8** %purpose.i, align 8
  %7 = bitcast i8* %6 to %union.tree_node*
  %inc = add nsw i32 %found_tag.083, 1
  %cmp6 = icmp eq i8* %6, null
  br i1 %cmp6, label %if.then7, label %for.body.i60

if.then7:                                         ; preds = %lookup_tag_reverse.exit.thread, %lookup_tag_reverse.exit
  %inc77 = phi i32 [ %inc75, %lookup_tag_reverse.exit.thread ], [ %inc, %lookup_tag_reverse.exit ]
  %cmp8 = icmp ne i32 %warned.addr.084, 1
  %cmp9 = icmp ne i32 %bf.clear, 10
  %or.cond35 = and i1 %cmp8, %cmp9
  br i1 %or.cond35, label %if.then10, label %for.inc

if.then10:                                        ; preds = %if.then7
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([47 x i8]* @.str161, i64 0, i64 0)) #5
  br label %for.inc

for.body.i60:                                     ; preds = %lookup_tag_reverse.exit, %for.inc21.i
  %level.036.i = phi %struct.binding_level* [ %17, %for.inc21.i ], [ %level.015.i, %lookup_tag_reverse.exit ]
  %tags.i59 = getelementptr inbounds %struct.binding_level* %level.036.i, i64 0, i32 1
  %tail.032.i = load %union.tree_node** %tags.i59, align 8
  %tobool233.i = icmp eq %union.tree_node* %tail.032.i, null
  br i1 %tobool233.i, label %for.end.i71, label %for.body3.i67

for.cond1.i64:                                    ; preds = %for.body3.i67
  %chain.i61 = getelementptr inbounds %union.tree_node* %tail.034.i, i64 0, i32 0, i32 0, i32 0
  %tail.0.i62 = load %union.tree_node** %chain.i61, align 8
  %tobool2.i63 = icmp eq %union.tree_node* %tail.0.i62, null
  br i1 %tobool2.i63, label %for.end.i71, label %for.body3.i67

for.body3.i67:                                    ; preds = %for.body.i60, %for.cond1.i64
  %tail.034.i = phi %union.tree_node* [ %tail.0.i62, %for.cond1.i64 ], [ %tail.032.i, %for.body.i60 ]
  %purpose.i65 = getelementptr inbounds %union.tree_node* %tail.034.i, i64 0, i32 0, i32 1
  %8 = load i8** %purpose.i65, align 8
  %cmp.i66 = icmp eq i8* %8, %6
  br i1 %cmp.i66, label %if.then.i69, label %for.cond1.i64

if.then.i69:                                      ; preds = %for.body3.i67
  %value.i68 = getelementptr inbounds %union.tree_node* %tail.034.i, i64 0, i32 0, i32 2
  %9 = bitcast i32* %value.i68 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !50
  %code5.i = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code5.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp6.i = icmp eq i32 %bf.clear.i, %bf.clear
  br i1 %cmp6.i, label %lookup_tag.exit, label %pending_xref_error.exit.i

pending_xref_error.exit.i:                        ; preds = %if.then.i69
  store %union.tree_node* %7, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  %11 = load i8** @input_filename, align 8, !tbaa !1
  store i8* %11, i8** @pending_invalid_xref_file, align 8, !tbaa !1
  %12 = load i32* @lineno, align 4, !tbaa !5
  store i32 %12, i32* @pending_invalid_xref_line, align 4, !tbaa !5
  %13 = getelementptr inbounds i8* %6, i64 32
  %14 = bitcast i8* %13 to i8**
  %15 = load i8** %14, align 8, !tbaa !21
  call void (i8*, i32, i8*, ...)* @error_with_file_and_line(i8* %11, i32 %12, i8* getelementptr inbounds ([34 x i8]* @.str155, i64 0, i64 0), i8* %15) #5
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  %.pr = load %union.tree_node** %9, align 8, !tbaa !50
  br label %lookup_tag.exit

for.end.i71:                                      ; preds = %for.cond1.i64, %for.body.i60
  %tag_transparent.i70 = getelementptr inbounds %struct.binding_level* %level.036.i, i64 0, i32 7
  %16 = load i8* %tag_transparent.i70, align 1, !tbaa !36
  %tobool15.i = icmp eq i8 %16, 0
  br i1 %tobool15.i, label %if.then13, label %for.inc21.i

for.inc21.i:                                      ; preds = %for.end.i71
  %level_chain.i72 = getelementptr inbounds %struct.binding_level* %level.036.i, i64 0, i32 5
  %17 = load %struct.binding_level** %level_chain.i72, align 8, !tbaa !38
  %tobool.i73 = icmp eq %struct.binding_level* %17, null
  br i1 %tobool.i73, label %if.then13, label %for.body.i60

lookup_tag.exit:                                  ; preds = %if.then.i69, %pending_xref_error.exit.i
  %18 = phi %union.tree_node* [ %10, %if.then.i69 ], [ %.pr, %pending_xref_error.exit.i ]
  %cmp12 = icmp eq %union.tree_node* %18, null
  br i1 %cmp12, label %if.then13, label %for.inc

if.then13:                                        ; preds = %for.end.i71, %for.inc21.i, %lookup_tag.exit
  %call14 = call %union.tree_node* @make_node(i32 %bf.clear) #5
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i, %if.then13
  %b.0.in.i = phi %struct.binding_level** [ @current_binding_level, %if.then13 ], [ %level_chain.i54, %for.cond.i ]
  %b.0.i = load %struct.binding_level** %b.0.in.i, align 8
  %tag_transparent.i = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 7
  %19 = load i8* %tag_transparent.i, align 1, !tbaa !36
  %tobool.i53 = icmp eq i8 %19, 0
  %level_chain.i54 = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 5
  br i1 %tobool.i53, label %if.then.i56, label %for.cond.i

if.then.i56:                                      ; preds = %for.cond.i
  %20 = getelementptr inbounds %union.tree_node* %call14, i64 0, i32 0, i32 11
  %21 = load %union.tree_node** %20, align 8, !tbaa !57
  %cmp.i55 = icmp eq %union.tree_node* %21, null
  br i1 %cmp.i55, label %if.then4.i, label %pushtag.exit

if.then4.i:                                       ; preds = %if.then.i56
  store %union.tree_node* %7, %union.tree_node** %20, align 8, !tbaa !57
  br label %pushtag.exit

pushtag.exit:                                     ; preds = %if.then.i56, %if.then4.i
  %tags.i57 = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 1
  %22 = load %union.tree_node** %tags.i57, align 8, !tbaa !35
  %call.i = call %union.tree_node* @tree_cons(%union.tree_node* %7, %union.tree_node* %call14, %union.tree_node* %22) #5
  store %union.tree_node* %call.i, %union.tree_node** %tags.i57, align 8, !tbaa !35
  %call9.i = call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %call14) #5
  %call10.i = call %union.tree_node* @pushdecl(%union.tree_node* %call9.i) #5
  %chain.i58 = getelementptr inbounds %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call10.i, %union.tree_node** %chain.i58, align 8, !tbaa !29
  %context.i = getelementptr inbounds %union.tree_node* %call10.i, i64 0, i32 0, i32 9
  %23 = load %union.tree_node** %context.i, align 8, !tbaa !53
  %context14.i = getelementptr inbounds %union.tree_node* %call14, i64 0, i32 0, i32 17
  %.c.i = bitcast %union.tree_node* %23 to %struct.rtx_def*
  store %struct.rtx_def* %.c.i, %struct.rtx_def** %context14.i, align 8, !tbaa !52
  br label %for.inc

if.else17:                                        ; preds = %for.body
  %24 = load i32* @in_system_header, align 4
  %25 = or i32 %24, %warned.addr.084
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %if.then21, label %for.inc

if.then21:                                        ; preds = %if.else17
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([50 x i8]* @.str162, i64 0, i64 0)) #5
  br label %for.inc

for.inc:                                          ; preds = %if.else17, %lookup_tag.exit, %pushtag.exit, %if.then7, %if.then10, %if.then21
  %found_tag.1 = phi i32 [ %inc77, %if.then10 ], [ %inc77, %if.then7 ], [ %inc, %pushtag.exit ], [ %inc, %lookup_tag.exit ], [ %found_tag.083, %if.else17 ], [ %found_tag.083, %if.then21 ]
  %warned.addr.1 = phi i32 [ 1, %if.then10 ], [ %warned.addr.084, %if.then7 ], [ %warned.addr.084, %pushtag.exit ], [ %warned.addr.084, %lookup_tag.exit ], [ %warned.addr.084, %if.else17 ], [ 2, %if.then21 ]
  %chain = getelementptr inbounds %union.tree_node* %link.088, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %cmp25 = icmp sgt i32 %found_tag.1, 1
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %for.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str163, i64 0, i64 0)) #5
  br label %if.end27

if.end27:                                         ; preds = %entry, %if.then26, %for.end
  %found_tag.0.lcssa94 = phi i32 [ %found_tag.1, %if.then26 ], [ %found_tag.1, %for.end ], [ 0, %entry ]
  %warned.addr.0.lcssa93 = phi i32 [ %warned.addr.1, %if.then26 ], [ %warned.addr.1, %for.end ], [ %warned, %entry ]
  %cmp28 = icmp ne i32 %warned.addr.0.lcssa93, 1
  %cmp30 = icmp eq i32 %found_tag.0.lcssa94, 0
  %or.cond37 = and i1 %cmp28, %cmp30
  br i1 %or.cond37, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.end27
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([18 x i8]* @.str164, i64 0, i64 0)) #5
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.end27
  ret void
}

declare void @split_specs_attrs(%union.tree_node*, %union.tree_node**, %union.tree_node**) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_array_declarator(%union.tree_node* %expr, %union.tree_node* %quals, i32 %static_p, i32 %vla_unspec_p) #0 {
entry:
  %call = tail call %union.tree_node* (i32, ...)* @build_nt(i32 43, %union.tree_node* null, %union.tree_node* %expr) #5
  %type = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %quals, %union.tree_node** %type, align 8, !tbaa !23
  %tobool = icmp ne i32 %static_p, 0
  %cond = zext i1 %tobool to i32
  %static_flag = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %static_flag, align 8
  %bf.shl = shl nuw nsw i32 %cond, 18
  %bf.clear = and i32 %bf.load, -262145
  %bf.set = or i32 %bf.clear, %bf.shl
  store i32 %bf.set, i32* %static_flag, align 8
  %0 = load i32* @pedantic, align 4, !tbaa !5
  %tobool2 = icmp eq i32 %0, 0
  %1 = load i32* @flag_isoc99, align 4
  %tobool3 = icmp ne i32 %1, 0
  %or.cond = or i1 %tobool2, %tobool3
  br i1 %or.cond, label %if.end9, label %if.then

if.then:                                          ; preds = %entry
  %cmp = icmp ne %union.tree_node* %quals, null
  %or.cond13 = or i1 %tobool, %cmp
  br i1 %or.cond13, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([84 x i8]* @.str165, i64 0, i64 0)) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then5
  %cond19 = icmp eq i32 %vla_unspec_p, 0
  br i1 %cond19, label %if.end12, label %if.then7

if.then7:                                         ; preds = %if.end
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([49 x i8]* @.str166, i64 0, i64 0)) #5
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %entry
  %tobool10 = icmp eq i32 %vla_unspec_p, 0
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end9
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([60 x i8]* @.str167, i64 0, i64 0)) #5
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.end9, %if.then11
  ret %union.tree_node* %call
}

declare %union.tree_node* @build_nt(i32, ...) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @set_array_declarator_type(%union.tree_node* %decl, %union.tree_node* %type, i32 %abstract_p) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  store %union.tree_node* %type, %union.tree_node** %arrayidx, align 8, !tbaa !1
  %tobool = icmp eq i32 %abstract_p, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !23
  %cmp = icmp eq %union.tree_node* %0, null
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %static_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %static_flag, align 8
  %bf.clear = and i32 %bf.load, 262144
  %tobool3 = icmp eq i32 %bf.clear, 0
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str168, i64 0, i64 0)) #5
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %entry, %if.then
  ret %union.tree_node* %decl
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @groktypename(%union.tree_node* %typename) #0 {
entry:
  %typename.addr = alloca %union.tree_node*, align 8
  %specs = alloca %union.tree_node*, align 8
  %attrs = alloca %union.tree_node*, align 8
  store %union.tree_node* %typename, %union.tree_node** %typename.addr, align 8, !tbaa !1
  %code = getelementptr inbounds %union.tree_node* %typename, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 2
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %purpose = getelementptr inbounds %union.tree_node* %typename, i64 0, i32 0, i32 1
  %0 = load i8** %purpose, align 8
  %1 = bitcast i8* %0 to %union.tree_node*
  call void @split_specs_attrs(%union.tree_node* %1, %union.tree_node** %specs, %union.tree_node** %attrs) #5
  %value = getelementptr inbounds %union.tree_node* %typename, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !50
  %4 = load %union.tree_node** %specs, align 8, !tbaa !1
  %call = call fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %3, %union.tree_node* %4, i32 5, i32 0)
  store %union.tree_node* %call, %union.tree_node** %typename.addr, align 8, !tbaa !1
  %5 = load %union.tree_node** %attrs, align 8, !tbaa !1
  %call2 = call %union.tree_node* @decl_attributes(%union.tree_node** %typename.addr, %union.tree_node* %5, i32 0) #5
  %6 = load %union.tree_node** %typename.addr, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %6, %if.end ], [ %typename, %entry ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %declarator, %union.tree_node* readonly %declspecs, i32 %decl_context, i32 %initialized) #0 {
entry:
  %type = alloca %union.tree_node*, align 8
  %decl1200 = alloca %union.tree_node*, align 8
  %decl1326 = alloca %union.tree_node*, align 8
  %new_ptr_quals = alloca %union.tree_node*, align 8
  %new_ptr_attrs = alloca %union.tree_node*, align 8
  store %union.tree_node* null, %union.tree_node** %type, align 8, !tbaa !1
  %cmp = icmp eq i32 %decl_context, 4
  %.decl_context = select i1 %cmp, i32 3, i32 %decl_context
  %cmp1 = icmp eq i32 %.decl_context, 1
  %funcdef_flag.0 = zext i1 %cmp1 to i32
  %decl_context.addr.1 = select i1 %cmp1, i32 0, i32 %.decl_context
  %tobool229122972304 = icmp eq %union.tree_node* %declarator, null
  br i1 %tobool229122972304, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry, %sw.bb
  %decl.0.ph22092299 = phi %union.tree_node* [ %0, %sw.bb ], [ %declarator, %entry ]
  %innermost_code.0.ph22082298 = phi i32 [ %bf.clear, %sw.bb ], [ 0, %entry ]
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %sw.bb8
  %decl.02292 = phi %union.tree_node* [ %decl.0.ph22092299, %while.body.lr.ph ], [ %2, %sw.bb8 ]
  %code = getelementptr inbounds %union.tree_node* %decl.02292, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  switch i32 %bf.clear, label %sw.default [
    i32 43, label %sw.bb
    i32 41, label %sw.bb
    i32 53, label %sw.bb
    i32 2, label %sw.bb8
    i32 1, label %while.cond.outer.while.cond.outer.while.cond.outer2207.while.end_crit_edge_crit_edge_crit_edge
  ]

sw.bb:                                            ; preds = %while.body, %while.body, %while.body
  %operands = getelementptr inbounds %union.tree_node* %decl.02292, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %tobool2291 = icmp eq %union.tree_node* %0, null
  br i1 %tobool2291, label %while.end, label %while.body.lr.ph

sw.bb8:                                           ; preds = %while.body
  %value = getelementptr inbounds %union.tree_node* %decl.02292, i64 0, i32 0, i32 2
  %1 = bitcast i32* %value to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !50
  %tobool = icmp eq %union.tree_node* %2, null
  br i1 %tobool, label %while.end, label %while.body

sw.default:                                       ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str185, i64 0, i64 0), i32 4116, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.grokdeclarator, i64 0, i64 0)) #8
  unreachable

while.cond.outer.while.cond.outer.while.cond.outer2207.while.end_crit_edge_crit_edge_crit_edge: ; preds = %while.body
  %id = getelementptr inbounds %union.tree_node* %decl.02292, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds i8** %id, i64 1
  %4 = load i8** %3, align 8, !tbaa !21
  br label %while.end

while.end:                                        ; preds = %sw.bb, %sw.bb8, %while.cond.outer.while.cond.outer.while.cond.outer2207.while.end_crit_edge_crit_edge_crit_edge, %entry
  %name.0.ph.lcssa2239 = phi i8* [ %4, %while.cond.outer.while.cond.outer.while.cond.outer2207.while.end_crit_edge_crit_edge_crit_edge ], [ null, %entry ], [ null, %sw.bb8 ], [ null, %sw.bb ]
  %innermost_code.0.ph2208.lcssa2238 = phi i32 [ %innermost_code.0.ph22082298, %while.cond.outer.while.cond.outer.while.cond.outer2207.while.end_crit_edge_crit_edge_crit_edge ], [ 0, %entry ], [ %innermost_code.0.ph22082298, %sw.bb8 ], [ %bf.clear, %sw.bb ]
  %cmp10 = icmp eq i8* %name.0.ph.lcssa2239, null
  %.name.0 = select i1 %cmp10, i8* getelementptr inbounds ([10 x i8]* @.str262, i64 0, i64 0), i8* %name.0.ph.lcssa2239
  %cmp14 = icmp ne i32 %innermost_code.0.ph2208.lcssa2238, 53
  %or.cond = and i1 %cmp1, %cmp14
  br i1 %or.cond, label %return, label %if.end16

if.end16:                                         ; preds = %while.end
  %5 = or i32 %decl_context.addr.1, %funcdef_flag.0
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %land.lhs.true20, label %if.end23

land.lhs.true20:                                  ; preds = %if.end16
  %7 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %parm_flag = getelementptr inbounds %struct.binding_level* %7, i64 0, i32 6
  %8 = load i8* %parm_flag, align 1, !tbaa !37
  %tobool21 = icmp eq i8 %8, 0
  %decl_context.addr.1. = select i1 %tobool21, i32 %decl_context.addr.1, i32 2
  br label %if.end23

if.end23:                                         ; preds = %land.lhs.true20, %if.end16
  %decl_context.addr.2 = phi i32 [ %decl_context.addr.1, %if.end16 ], [ %decl_context.addr.1., %land.lhs.true20 ]
  %tobool242277 = icmp eq %union.tree_node* %declspecs, null
  br i1 %tobool242277, label %land.lhs.true172, label %for.body

for.body:                                         ; preds = %if.end23, %for.inc
  %specbits.02284 = phi i32 [ %specbits.1, %for.inc ], [ 0, %if.end23 ]
  %spec.02283 = phi %union.tree_node* [ %38, %for.inc ], [ %declspecs, %if.end23 ]
  %longlong.02282 = phi i32 [ %longlong.2, %for.inc ], [ 0, %if.end23 ]
  %explicit_int.02281 = phi i32 [ %.explicit_int.0, %for.inc ], [ 0, %if.end23 ]
  %explicit_char.02280 = phi i32 [ %explicit_char.1, %for.inc ], [ 0, %if.end23 ]
  %decl_attr.02279 = phi %union.tree_node* [ %decl_attr.1, %for.inc ], [ null, %if.end23 ]
  %typedef_decl.02278 = phi %union.tree_node* [ %typedef_decl.1, %for.inc ], [ null, %if.end23 ]
  %value27 = getelementptr inbounds %union.tree_node* %spec.02283, i64 0, i32 0, i32 2
  %9 = bitcast i32* %value27 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !50
  %tobool28 = icmp eq %union.tree_node* %10, null
  %code51.pre = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 2
  br i1 %tobool28, label %if.end39, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %for.body
  %bf.load31 = load i32* %code51.pre, align 8
  %bf.clear32 = and i32 %bf.load31, 8388608
  %tobool33 = icmp ne i32 %bf.clear32, 0
  %.b = load i1* @deprecated_state, align 1
  %cmp35 = xor i1 %.b, true
  %or.cond1880 = and i1 %tobool33, %cmp35
  br i1 %or.cond1880, label %if.then37, label %if.end39

if.then37:                                        ; preds = %land.lhs.true29
  call void @warn_deprecated_use(%union.tree_node* %10) #5
  br label %if.end39

if.end39:                                         ; preds = %for.body, %if.then37, %land.lhs.true29
  %11 = load %union.tree_node*** @ridpointers, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds %union.tree_node** %11, i64 27
  %12 = load %union.tree_node** %arrayidx40, align 8, !tbaa !1
  %cmp41 = icmp eq %union.tree_node* %10, %12
  %.explicit_int.0 = select i1 %cmp41, i32 1, i32 %explicit_int.02281
  %arrayidx45 = getelementptr inbounds %union.tree_node** %11, i64 28
  %13 = load %union.tree_node** %arrayidx45, align 8, !tbaa !1
  %cmp46 = icmp eq %union.tree_node* %10, %13
  %explicit_char.1 = select i1 %cmp46, i32 1, i32 %explicit_char.02280
  %bf.load52 = load i32* %code51.pre, align 8
  %14 = and i32 %bf.load52, 16777471
  %15 = icmp eq i32 %14, 16777217
  br i1 %15, label %if.then62, label %if.end96

if.then62:                                        ; preds = %if.end39
  %node = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 1
  %16 = bitcast i8** %node to %struct.cpp_hashnode*
  %rid_code = getelementptr inbounds %struct.cpp_hashnode* %16, i64 0, i32 3
  %17 = load i8* %rid_code, align 1, !tbaa !20
  %conv63 = zext i8 %17 to i32
  %cmp64 = icmp ult i8 %17, 27
  br i1 %cmp64, label %if.then66, label %if.end96

if.then66:                                        ; preds = %if.then62
  %cmp67 = icmp eq i8 %17, 2
  %shl = shl i32 1, %conv63
  %and = and i32 %shl, %specbits.02284
  %tobool70 = icmp eq i32 %and, 0
  br i1 %cmp67, label %land.lhs.true69, label %if.else84

land.lhs.true69:                                  ; preds = %if.then66
  br i1 %tobool70, label %if.end93, label %if.then71

if.then71:                                        ; preds = %land.lhs.true69
  %tobool72 = icmp eq i32 %longlong.02282, 0
  br i1 %tobool72, label %if.else, label %if.then73

if.then73:                                        ; preds = %if.then71
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str263, i64 0, i64 0)) #5
  br label %if.end93

if.else:                                          ; preds = %if.then71
  %18 = load i32* @pedantic, align 4, !tbaa !5
  %tobool74 = icmp eq i32 %18, 0
  %19 = load i32* @flag_isoc99, align 4
  %tobool76 = icmp ne i32 %19, 0
  %or.cond1786 = or i1 %tobool74, %tobool76
  %20 = load i32* @in_system_header, align 4
  %tobool78 = icmp ne i32 %20, 0
  %or.cond1787 = or i1 %or.cond1786, %tobool78
  %or.cond1787.not = xor i1 %or.cond1787, true
  %21 = load i32* @warn_long_long, align 4
  %tobool80 = icmp ne i32 %21, 0
  %or.cond1788 = and i1 %tobool80, %or.cond1787.not
  br i1 %or.cond1788, label %if.then81, label %if.end93

if.then81:                                        ; preds = %if.else
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([37 x i8]* @.str264, i64 0, i64 0)) #5
  br label %if.end93

if.else84:                                        ; preds = %if.then66
  br i1 %tobool70, label %if.end93, label %if.then88

if.then88:                                        ; preds = %if.else84
  %22 = getelementptr inbounds i8** %node, i64 1
  %23 = load i8** %22, align 8, !tbaa !21
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([15 x i8]* @.str265, i64 0, i64 0), i8* %23) #5
  br label %if.end93

if.end93:                                         ; preds = %land.lhs.true69, %if.then81, %if.else, %if.else84, %if.then88, %if.then73
  %longlong.1 = phi i32 [ %longlong.02282, %if.then73 ], [ %longlong.02282, %if.then88 ], [ %longlong.02282, %if.else84 ], [ 1, %if.else ], [ 1, %if.then81 ], [ %longlong.02282, %land.lhs.true69 ]
  %shl94 = shl i32 1, %conv63
  %or = or i32 %shl94, %specbits.02284
  br label %for.inc

if.end96:                                         ; preds = %if.end39, %if.then62
  %24 = load %union.tree_node** %type, align 8, !tbaa !1
  %tobool97 = icmp eq %union.tree_node* %24, null
  br i1 %tobool97, label %if.else99, label %if.then98

if.then98:                                        ; preds = %if.end96
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([46 x i8]* @.str266, i64 0, i64 0), i8* %.name.0) #5
  br label %for.inc

if.else99:                                        ; preds = %if.end96
  %bf.clear103 = and i32 %bf.load52, 255
  switch i32 %bf.clear103, label %if.then154 [
    i32 33, label %if.then106
    i32 1, label %if.then124
    i32 0, label %for.inc
  ]

if.then106:                                       ; preds = %if.else99
  %type108 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type108, align 8, !tbaa !23
  %26 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp109 = icmp eq %union.tree_node* %25, %26
  br i1 %cmp109, label %for.inc, label %if.else112

if.else112:                                       ; preds = %if.then106
  store %union.tree_node* %25, %union.tree_node** %type, align 8, !tbaa !1
  %attributes = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 16
  %27 = load %union.tree_node** %attributes, align 8, !tbaa !59
  br label %for.inc

if.then124:                                       ; preds = %if.else99
  %28 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %29 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.binding_level* %28, %29
  br i1 %cmp.i, label %if.else.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then124
  %30 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 7
  %31 = load %union.tree_node** %30, align 8, !tbaa !15
  %tobool.i = icmp eq %union.tree_node* %31, null
  br i1 %tobool.i, label %if.else.i, label %lookup_name.exit

if.else.i:                                        ; preds = %land.lhs.true.i, %if.then124
  %global_value.i = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 6
  %32 = bitcast %union.anon* %global_value.i to %union.tree_node**
  %33 = load %union.tree_node** %32, align 8, !tbaa !8
  br label %lookup_name.exit

lookup_name.exit:                                 ; preds = %land.lhs.true.i, %if.else.i
  %val.0.i = phi %union.tree_node* [ %33, %if.else.i ], [ %31, %land.lhs.true.i ]
  %type126 = getelementptr inbounds %union.tree_node* %val.0.i, i64 0, i32 0, i32 0, i32 1
  %34 = load %union.tree_node** %type126, align 8, !tbaa !23
  %35 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp127 = icmp eq %union.tree_node* %34, %35
  br i1 %cmp127, label %for.inc, label %if.else130

if.else130:                                       ; preds = %lookup_name.exit
  %tobool131 = icmp eq %union.tree_node* %val.0.i, null
  br i1 %tobool131, label %if.then138, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else130
  %code133 = getelementptr inbounds %union.tree_node* %val.0.i, i64 0, i32 0, i32 0, i32 2
  %bf.load134 = load i32* %code133, align 8
  %bf.clear135 = and i32 %bf.load134, 255
  %cmp136 = icmp eq i32 %bf.clear135, 33
  br i1 %cmp136, label %if.else142, label %if.then138

if.then138:                                       ; preds = %lor.lhs.false, %if.else130
  %id140 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds i8** %id140, i64 1
  %37 = load i8** %36, align 8, !tbaa !21
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str267, i64 0, i64 0), i8* %37) #5
  br label %for.inc

if.else142:                                       ; preds = %lor.lhs.false
  store %union.tree_node* %34, %union.tree_node** %type, align 8, !tbaa !1
  br label %for.inc

if.then154:                                       ; preds = %if.else99
  store %union.tree_node* %10, %union.tree_node** %type, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.else99, %if.end93, %if.then106, %if.else112, %if.then154, %lookup_name.exit, %if.else142, %if.then138, %if.then98
  %typedef_decl.1 = phi %union.tree_node* [ %typedef_decl.02278, %if.end93 ], [ %typedef_decl.02278, %if.then98 ], [ %typedef_decl.02278, %if.then106 ], [ %10, %if.else112 ], [ %typedef_decl.02278, %lookup_name.exit ], [ %typedef_decl.02278, %if.then138 ], [ %val.0.i, %if.else142 ], [ %typedef_decl.02278, %if.then154 ], [ %typedef_decl.02278, %if.else99 ]
  %decl_attr.1 = phi %union.tree_node* [ %decl_attr.02279, %if.end93 ], [ %decl_attr.02279, %if.then98 ], [ %decl_attr.02279, %if.then106 ], [ %27, %if.else112 ], [ %decl_attr.02279, %lookup_name.exit ], [ %decl_attr.02279, %if.then138 ], [ %decl_attr.02279, %if.else142 ], [ %decl_attr.02279, %if.then154 ], [ %decl_attr.02279, %if.else99 ]
  %longlong.2 = phi i32 [ %longlong.1, %if.end93 ], [ %longlong.02282, %if.then98 ], [ %longlong.02282, %if.then106 ], [ %longlong.02282, %if.else112 ], [ %longlong.02282, %lookup_name.exit ], [ %longlong.02282, %if.then138 ], [ %longlong.02282, %if.else142 ], [ %longlong.02282, %if.then154 ], [ %longlong.02282, %if.else99 ]
  %specbits.1 = phi i32 [ %or, %if.end93 ], [ %specbits.02284, %if.then98 ], [ %specbits.02284, %if.then106 ], [ %specbits.02284, %if.else112 ], [ %specbits.02284, %lookup_name.exit ], [ %specbits.02284, %if.then138 ], [ %specbits.02284, %if.else142 ], [ %specbits.02284, %if.then154 ], [ %specbits.02284, %if.else99 ]
  %chain = getelementptr inbounds %union.tree_node* %spec.02283, i64 0, i32 0, i32 0, i32 0
  %38 = load %union.tree_node** %chain, align 8, !tbaa !29
  %tobool24 = icmp eq %union.tree_node* %38, null
  br i1 %tobool24, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %.pre = load %union.tree_node** %type, align 8, !tbaa !1
  %tobool160 = icmp eq %union.tree_node* %.pre, null
  br i1 %tobool160, label %if.then169, label %if.end166

if.end166:                                        ; preds = %for.end
  %type162 = bitcast %union.tree_node* %.pre to %struct.tree_type*
  %lang_flag_1 = getelementptr inbounds %struct.tree_type* %type162, i64 0, i32 6
  %bf.load163 = load i32* %lang_flag_1, align 4
  %bf.lshr164 = lshr i32 %bf.load163, 25
  %bf.clear165 = and i32 %bf.lshr164, 1
  br label %if.end196

if.then169:                                       ; preds = %for.end
  %and170 = and i32 %specbits.1, 33926
  %tobool171 = icmp eq i32 %and170, 0
  br i1 %tobool171, label %land.lhs.true172, label %if.end195

land.lhs.true172:                                 ; preds = %if.end23, %if.then169
  %specbits.0.lcssa23602393 = phi i32 [ %specbits.1, %if.then169 ], [ 0, %if.end23 ]
  %longlong.0.lcssa23632392 = phi i32 [ %longlong.2, %if.then169 ], [ 0, %if.end23 ]
  %explicit_int.0.lcssa23652390 = phi i32 [ %.explicit_int.0, %if.then169 ], [ 0, %if.end23 ]
  %explicit_char.0.lcssa23692388 = phi i32 [ %explicit_char.1, %if.then169 ], [ 0, %if.end23 ]
  %decl_attr.0.lcssa23712386 = phi %union.tree_node* [ %decl_attr.1, %if.then169 ], [ null, %if.end23 ]
  %typedef_decl.0.lcssa23732384 = phi %union.tree_node* [ %typedef_decl.1, %if.then169 ], [ null, %if.end23 ]
  %and173 = and i32 %specbits.0.lcssa23602393, 64
  %tobool174 = icmp ne i32 %and173, 0
  %tobool176 = icmp ne i32 %initialized, 0
  %or.cond1789 = and i1 %tobool174, %tobool176
  %39 = load i32* @in_system_header, align 4
  %tobool178 = icmp ne i32 %39, 0
  %or.cond1790 = or i1 %or.cond1789, %tobool178
  br i1 %or.cond1790, label %if.end195, label %if.then179

if.then179:                                       ; preds = %land.lhs.true172
  %40 = load i32* @warn_implicit_int, align 4, !tbaa !5
  %41 = load i32* @warn_return_type, align 4
  %42 = or i32 %41, %40
  %43 = load i32* @flag_isoc99, align 4
  %44 = or i32 %42, %43
  %45 = icmp ne i32 %44, 0
  %or.cond1793 = and i1 %45, %cmp1
  br i1 %or.cond1793, label %if.then187, label %if.else188

if.then187:                                       ; preds = %if.then179
  store i32 1, i32* @warn_about_return_type, align 4, !tbaa !5
  br label %if.end195

if.else188:                                       ; preds = %if.then179
  %46 = or i32 %43, %40
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %if.end195, label %if.then192

if.then192:                                       ; preds = %if.else188
  call void (i8*, ...)* @pedwarn_c99(i8* getelementptr inbounds ([46 x i8]* @.str268, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end195

if.end195:                                        ; preds = %if.else188, %if.then169, %if.then187, %if.then192, %land.lhs.true172
  %specbits.0.lcssa23602394 = phi i32 [ %specbits.0.lcssa23602393, %if.else188 ], [ %specbits.1, %if.then169 ], [ %specbits.0.lcssa23602393, %if.then187 ], [ %specbits.0.lcssa23602393, %if.then192 ], [ %specbits.0.lcssa23602393, %land.lhs.true172 ]
  %longlong.0.lcssa23632391 = phi i32 [ %longlong.0.lcssa23632392, %if.else188 ], [ %longlong.2, %if.then169 ], [ %longlong.0.lcssa23632392, %if.then187 ], [ %longlong.0.lcssa23632392, %if.then192 ], [ %longlong.0.lcssa23632392, %land.lhs.true172 ]
  %explicit_int.0.lcssa23652389 = phi i32 [ %explicit_int.0.lcssa23652390, %if.else188 ], [ %.explicit_int.0, %if.then169 ], [ %explicit_int.0.lcssa23652390, %if.then187 ], [ %explicit_int.0.lcssa23652390, %if.then192 ], [ %explicit_int.0.lcssa23652390, %land.lhs.true172 ]
  %explicit_char.0.lcssa23692387 = phi i32 [ %explicit_char.0.lcssa23692388, %if.else188 ], [ %explicit_char.1, %if.then169 ], [ %explicit_char.0.lcssa23692388, %if.then187 ], [ %explicit_char.0.lcssa23692388, %if.then192 ], [ %explicit_char.0.lcssa23692388, %land.lhs.true172 ]
  %decl_attr.0.lcssa23712385 = phi %union.tree_node* [ %decl_attr.0.lcssa23712386, %if.else188 ], [ %decl_attr.1, %if.then169 ], [ %decl_attr.0.lcssa23712386, %if.then187 ], [ %decl_attr.0.lcssa23712386, %if.then192 ], [ %decl_attr.0.lcssa23712386, %land.lhs.true172 ]
  %typedef_decl.0.lcssa23732383 = phi %union.tree_node* [ %typedef_decl.0.lcssa23732384, %if.else188 ], [ %typedef_decl.1, %if.then169 ], [ %typedef_decl.0.lcssa23732384, %if.then187 ], [ %typedef_decl.0.lcssa23732384, %if.then192 ], [ %typedef_decl.0.lcssa23732384, %land.lhs.true172 ]
  %48 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  store %union.tree_node* %48, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end196

if.end196:                                        ; preds = %if.end166, %if.end195
  %tobool1602377 = phi i1 [ false, %if.end195 ], [ true, %if.end166 ]
  %typedef_decl.0.lcssa2372 = phi %union.tree_node* [ %typedef_decl.0.lcssa23732383, %if.end195 ], [ %typedef_decl.1, %if.end166 ]
  %decl_attr.0.lcssa2370 = phi %union.tree_node* [ %decl_attr.0.lcssa23712385, %if.end195 ], [ %decl_attr.1, %if.end166 ]
  %explicit_char.0.lcssa2368 = phi i32 [ %explicit_char.0.lcssa23692387, %if.end195 ], [ %explicit_char.1, %if.end166 ]
  %explicit_int.0.lcssa2364 = phi i32 [ %explicit_int.0.lcssa23652389, %if.end195 ], [ %.explicit_int.0, %if.end166 ]
  %longlong.0.lcssa2362 = phi i32 [ %longlong.0.lcssa23632391, %if.end195 ], [ %longlong.2, %if.end166 ]
  %specbits.0.lcssa2361 = phi i32 [ %specbits.0.lcssa23602394, %if.end195 ], [ %specbits.1, %if.end166 ]
  %.pr2358 = phi %union.tree_node* [ null, %if.end195 ], [ %.pre, %if.end166 ]
  %49 = phi %union.tree_node* [ %48, %if.end195 ], [ %.pre, %if.end166 ]
  %size_varies.02203 = phi i32 [ 0, %if.end195 ], [ %bf.clear165, %if.end166 ]
  %defaulted_int.0 = phi i32 [ 1, %if.end195 ], [ 0, %if.end166 ]
  %and197 = and i32 %specbits.0.lcssa2361, 4
  %tobool198 = icmp eq i32 %and197, 0
  %tobool200 = icmp ne i32 %longlong.0.lcssa2362, 0
  %or.cond1795 = or i1 %tobool198, %tobool200
  br i1 %or.cond1795, label %if.end207, label %land.lhs.true201

land.lhs.true201:                                 ; preds = %if.end196
  %50 = getelementptr inbounds %union.tree_node* %49, i64 0, i32 0, i32 15
  %51 = load %union.tree_node** %50, align 8, !tbaa !67
  %52 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !tbaa !1
  %cmp203 = icmp eq %union.tree_node* %51, %52
  br i1 %cmp203, label %if.then205, label %if.end207

if.then205:                                       ; preds = %land.lhs.true201
  %and206 = and i32 %specbits.0.lcssa2361, -5
  %53 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 8, !tbaa !1
  store %union.tree_node* %53, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end207

if.end207:                                        ; preds = %if.end196, %if.then205, %land.lhs.true201
  %54 = phi %union.tree_node* [ %49, %if.end196 ], [ %53, %if.then205 ], [ %49, %land.lhs.true201 ]
  %specbits.2 = phi i32 [ %specbits.0.lcssa2361, %if.end196 ], [ %and206, %if.then205 ], [ %specbits.0.lcssa2361, %land.lhs.true201 ]
  %and208 = and i32 %specbits.2, 1158
  %tobool209 = icmp eq i32 %and208, 0
  br i1 %tobool209, label %if.end282, label %if.then210

if.then210:                                       ; preds = %if.end207
  %and211 = and i32 %specbits.2, 4
  %tobool212 = icmp ne i32 %and211, 0
  %tobool212.not = xor i1 %tobool212, true
  %and214 = and i32 %specbits.2, 128
  %tobool215 = icmp eq i32 %and214, 0
  %or.cond2186 = or i1 %tobool215, %tobool212.not
  br i1 %or.cond2186, label %if.else217, label %if.then216

if.then216:                                       ; preds = %if.then210
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str269, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end277

if.else217:                                       ; preds = %if.then210
  br i1 %tobool212, label %land.lhs.true223, label %lor.lhs.false220

lor.lhs.false220:                                 ; preds = %if.else217
  %tobool222 = icmp ne i32 %and214, 0
  %tobool224 = icmp ne i32 %explicit_char.0.lcssa2368, 0
  %or.cond1796 = and i1 %tobool222, %tobool224
  br i1 %or.cond1796, label %if.then225, label %if.else226

land.lhs.true223:                                 ; preds = %if.else217
  %tobool224.old = icmp eq i32 %explicit_char.0.lcssa2368, 0
  br i1 %tobool224.old, label %if.else226, label %if.then225

if.then225:                                       ; preds = %land.lhs.true223, %lor.lhs.false220
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([43 x i8]* @.str270, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end277

if.else226:                                       ; preds = %land.lhs.true223, %lor.lhs.false220
  %or.cond2188 = and i1 %tobool215, %tobool212.not
  br i1 %or.cond2188, label %if.else245, label %land.lhs.true232

land.lhs.true232:                                 ; preds = %if.else226
  %code234 = getelementptr inbounds %union.tree_node* %54, i64 0, i32 0, i32 0, i32 2
  %bf.load235 = load i32* %code234, align 8
  %bf.clear236 = and i32 %bf.load235, 255
  %cmp237 = icmp eq i32 %bf.clear236, 7
  br i1 %cmp237, label %if.then239, label %if.else245

if.then239:                                       ; preds = %land.lhs.true232
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([52 x i8]* @.str271, i64 0, i64 0), i8* %.name.0) #5
  %.b2182 = load i1* @grokdeclarator.already, align 1
  %55 = load i32* @pedantic, align 4
  %tobool242 = icmp ne i32 %55, 0
  %or.cond1798 = or i1 %.b2182, %tobool242
  br i1 %or.cond1798, label %if.end277, label %if.then243

if.then243:                                       ; preds = %if.then239
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str272, i64 0, i64 0)) #5
  store i1 true, i1* @grokdeclarator.already, align 1
  br label %if.end277

if.else245:                                       ; preds = %if.else226, %land.lhs.true232
  %56 = and i32 %specbits.2, 1026
  %57 = icmp eq i32 %56, 1026
  br i1 %57, label %if.then251, label %if.else252

if.then251:                                       ; preds = %if.else245
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str273, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end277

if.else252:                                       ; preds = %if.else245
  %code254 = getelementptr inbounds %union.tree_node* %54, i64 0, i32 0, i32 0, i32 2
  %bf.load255 = load i32* %code254, align 8
  %bf.clear256 = and i32 %bf.load255, 255
  %cmp257 = icmp eq i32 %bf.clear256, 6
  br i1 %cmp257, label %if.else260, label %if.then259

if.then259:                                       ; preds = %if.else252
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str274, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end277

if.else260:                                       ; preds = %if.else252
  %58 = or i32 %explicit_int.0.lcssa2364, %explicit_char.0.lcssa2368
  %59 = or i32 %58, %defaulted_int.0
  %or.cond1802.not = icmp eq i32 %59, 0
  %60 = load i32* @pedantic, align 4
  %tobool267 = icmp ne i32 %60, 0
  %or.cond1804 = and i1 %or.cond1802.not, %tobool267
  br i1 %or.cond1804, label %if.then268, label %if.end277

if.then268:                                       ; preds = %if.else260
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([56 x i8]* @.str275, i64 0, i64 0), i8* %.name.0) #5
  %61 = load i32* @flag_pedantic_errors, align 4, !tbaa !5
  %tobool269 = icmp eq i32 %61, 0
  br label %if.end277

if.end277:                                        ; preds = %if.then268, %if.then225, %if.then251, %if.else260, %if.then259, %if.then239, %if.then243, %if.then216
  %ok.0 = phi i1 [ false, %if.then216 ], [ false, %if.then225 ], [ false, %if.then239 ], [ false, %if.then243 ], [ false, %if.then251 ], [ false, %if.then259 ], [ true, %if.else260 ], [ %tobool269, %if.then268 ]
  %and280 = and i32 %specbits.2, -1159
  %longlong.0. = select i1 %ok.0, i32 %longlong.0.lcssa2362, i32 0
  %specbits.2.and280 = select i1 %ok.0, i32 %specbits.2, i32 %and280
  br label %if.end282

if.end282:                                        ; preds = %if.end277, %if.end207
  %longlong.3 = phi i32 [ %longlong.0.lcssa2362, %if.end207 ], [ %longlong.0., %if.end277 ]
  %specbits.3 = phi i32 [ %specbits.2, %if.end207 ], [ %specbits.2.and280, %if.end277 ]
  %and283 = and i32 %specbits.3, 32768
  %tobool284 = icmp eq i32 %and283, 0
  br i1 %tobool284, label %if.end301, label %land.lhs.true285

land.lhs.true285:                                 ; preds = %if.end282
  %62 = load %union.tree_node** %type, align 8, !tbaa !1
  %code287 = getelementptr inbounds %union.tree_node* %62, i64 0, i32 0, i32 0, i32 2
  %bf.load288 = load i32* %code287, align 8
  %63 = and i32 %bf.load288, 254
  %switch = icmp eq i32 %63, 6
  br i1 %switch, label %if.end301, label %if.then299

if.then299:                                       ; preds = %land.lhs.true285
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([25 x i8]* @.str276, i64 0, i64 0), i8* %.name.0) #5
  %and300 = and i32 %specbits.3, -32769
  br label %if.end301

if.end301:                                        ; preds = %land.lhs.true285, %if.end282, %if.then299
  %specbits.4 = phi i32 [ %and300, %if.then299 ], [ %specbits.3, %if.end282 ], [ %specbits.3, %land.lhs.true285 ]
  %and302 = and i32 %specbits.4, 2
  %tobool303 = icmp eq i32 %and302, 0
  br i1 %tobool303, label %lor.lhs.false304, label %if.then342

lor.lhs.false304:                                 ; preds = %if.end301
  %64 = load i32* @flag_traditional, align 4
  %tobool307 = icmp ne i32 %64, 0
  %or.cond1806 = and i1 %cmp, %tobool307
  br i1 %or.cond1806, label %land.lhs.true308, label %lor.lhs.false304.lor.lhs.false312_crit_edge

lor.lhs.false304.lor.lhs.false312_crit_edge:      ; preds = %lor.lhs.false304
  %.pre2337 = load i32* @flag_signed_bitfields, align 4
  br label %lor.lhs.false312

land.lhs.true308:                                 ; preds = %lor.lhs.false304
  %65 = load i32* @explicit_flag_signed_bitfields, align 4, !tbaa !5
  %tobool309 = icmp ne i32 %65, 0
  %66 = load i32* @flag_signed_bitfields, align 4
  %tobool311 = icmp ne i32 %66, 0
  %or.cond1808 = and i1 %tobool309, %tobool311
  br i1 %or.cond1808, label %lor.lhs.false312, label %if.then342

lor.lhs.false312:                                 ; preds = %lor.lhs.false304.lor.lhs.false312_crit_edge, %land.lhs.true308
  %67 = phi i32 [ %.pre2337, %lor.lhs.false304.lor.lhs.false312_crit_edge ], [ %66, %land.lhs.true308 ]
  %tobool313 = xor i1 %cmp, true
  %tobool315 = icmp ne i32 %67, 0
  %or.cond1810 = or i1 %tobool315, %tobool313
  br i1 %or.cond1810, label %if.else367, label %land.lhs.true316

land.lhs.true316:                                 ; preds = %lor.lhs.false312
  %68 = or i32 %explicit_int.0.lcssa2364, %explicit_char.0.lcssa2368
  %69 = or i32 %68, %defaulted_int.0
  %or.cond1814.not = icmp eq i32 %69, 0
  %cmp323 = icmp ne %union.tree_node* %typedef_decl.0.lcssa2372, null
  %or.cond1816 = and i1 %or.cond1814.not, %cmp323
  br i1 %or.cond1816, label %land.lhs.true325, label %land.lhs.true332

land.lhs.true325:                                 ; preds = %land.lhs.true316
  %lang_flag_1327 = getelementptr inbounds %union.tree_node* %typedef_decl.0.lcssa2372, i64 0, i32 0, i32 5
  %70 = bitcast i48* %lang_flag_1327 to i64*
  %bf.load328 = load i64* %70, align 8
  %bf.cast = and i64 %bf.load328, 274877906944
  %tobool331 = icmp eq i64 %bf.cast, 0
  br i1 %tobool331, label %land.lhs.true332, label %if.else367

land.lhs.true332:                                 ; preds = %land.lhs.true325, %land.lhs.true316
  %71 = load %union.tree_node** %type, align 8, !tbaa !1
  %code334 = getelementptr inbounds %union.tree_node* %71, i64 0, i32 0, i32 0, i32 2
  %bf.load335 = load i32* %code334, align 8
  %bf.clear336 = and i32 %bf.load335, 255
  %cmp337 = icmp ne i32 %bf.clear336, 10
  %and340 = and i32 %specbits.4, 1024
  %tobool341 = icmp eq i32 %and340, 0
  %or.cond2191 = and i1 %cmp337, %tobool341
  br i1 %or.cond2191, label %if.then342, label %if.else367

if.then342:                                       ; preds = %land.lhs.true332, %if.end301, %land.lhs.true308
  %tobool343 = icmp eq i32 %longlong.3, 0
  br i1 %tobool343, label %if.else345, label %if.then344

if.then344:                                       ; preds = %if.then342
  %72 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 10), align 8, !tbaa !1
  store %union.tree_node* %72, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.else345:                                       ; preds = %if.then342
  %and346 = and i32 %specbits.4, 4
  %tobool347 = icmp eq i32 %and346, 0
  br i1 %tobool347, label %if.else349, label %if.then348

if.then348:                                       ; preds = %if.else345
  %73 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 8), align 8, !tbaa !1
  store %union.tree_node* %73, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.else349:                                       ; preds = %if.else345
  %and350 = and i32 %specbits.4, 128
  %tobool351 = icmp eq i32 %and350, 0
  br i1 %tobool351, label %if.else353, label %if.then352

if.then352:                                       ; preds = %if.else349
  %74 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 4), align 8, !tbaa !1
  store %union.tree_node* %74, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.else353:                                       ; preds = %if.else349
  %75 = load %union.tree_node** %type, align 8, !tbaa !1
  %76 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %cmp354 = icmp eq %union.tree_node* %75, %76
  br i1 %cmp354, label %if.then356, label %if.else357

if.then356:                                       ; preds = %if.else353
  %77 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 8, !tbaa !1
  store %union.tree_node* %77, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.else357:                                       ; preds = %if.else353
  %tobool358 = icmp eq %union.tree_node* %typedef_decl.0.lcssa2372, null
  br i1 %tobool358, label %if.else361, label %if.then359

if.then359:                                       ; preds = %if.else357
  %call360 = call %union.tree_node* @unsigned_type(%union.tree_node* %75) #5
  store %union.tree_node* %call360, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.else361:                                       ; preds = %if.else357
  %78 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !1
  store %union.tree_node* %78, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.else367:                                       ; preds = %land.lhs.true332, %land.lhs.true325, %lor.lhs.false312
  %and368 = and i32 %specbits.4, 1024
  %tobool369 = icmp eq i32 %and368, 0
  br i1 %tobool369, label %if.else374, label %land.lhs.true370

land.lhs.true370:                                 ; preds = %if.else367
  %79 = load %union.tree_node** %type, align 8, !tbaa !1
  %80 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %cmp371 = icmp eq %union.tree_node* %79, %80
  br i1 %cmp371, label %if.then373, label %if.else374

if.then373:                                       ; preds = %land.lhs.true370
  %81 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 1), align 8, !tbaa !1
  store %union.tree_node* %81, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.else374:                                       ; preds = %if.else367, %land.lhs.true370
  %tobool375 = icmp eq i32 %longlong.3, 0
  br i1 %tobool375, label %if.else377, label %if.then376

if.then376:                                       ; preds = %if.else374
  %82 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !1
  store %union.tree_node* %82, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.else377:                                       ; preds = %if.else374
  %and378 = and i32 %specbits.4, 4
  %tobool379 = icmp eq i32 %and378, 0
  br i1 %tobool379, label %if.else381, label %if.then380

if.then380:                                       ; preds = %if.else377
  %83 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 7), align 8, !tbaa !1
  store %union.tree_node* %83, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.else381:                                       ; preds = %if.else377
  %and382 = and i32 %specbits.4, 128
  %tobool383 = icmp eq i32 %and382, 0
  br i1 %tobool383, label %if.end389, label %if.then384

if.then384:                                       ; preds = %if.else381
  %84 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 3), align 8, !tbaa !1
  store %union.tree_node* %84, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end389

if.end389:                                        ; preds = %if.else381, %if.then373, %if.then380, %if.then384, %if.then376, %if.then344, %if.then352, %if.then359, %if.else361, %if.then356, %if.then348
  %typedef_decl.0.lcssa2375 = phi %union.tree_node* [ %typedef_decl.0.lcssa2372, %if.else381 ], [ %typedef_decl.0.lcssa2372, %if.then373 ], [ %typedef_decl.0.lcssa2372, %if.then380 ], [ %typedef_decl.0.lcssa2372, %if.then384 ], [ %typedef_decl.0.lcssa2372, %if.then376 ], [ %typedef_decl.0.lcssa2372, %if.then344 ], [ %typedef_decl.0.lcssa2372, %if.then352 ], [ %typedef_decl.0.lcssa2372, %if.then359 ], [ null, %if.else361 ], [ %typedef_decl.0.lcssa2372, %if.then356 ], [ %typedef_decl.0.lcssa2372, %if.then348 ]
  %and390 = and i32 %specbits.4, 32768
  %tobool391 = icmp eq i32 %and390, 0
  br i1 %tobool391, label %if.end389.if.end437_crit_edge, label %if.then392

if.end389.if.end437_crit_edge:                    ; preds = %if.end389
  %.pre2338 = load %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end437

if.then392:                                       ; preds = %if.end389
  %85 = load i32* @pedantic, align 4, !tbaa !5
  %tobool393 = icmp eq i32 %85, 0
  %86 = load i32* @flag_isoc99, align 4
  %tobool395 = icmp ne i32 %86, 0
  %or.cond1818 = or i1 %tobool393, %tobool395
  br i1 %or.cond1818, label %if.end397, label %if.then396

if.then396:                                       ; preds = %if.then392
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str277, i64 0, i64 0)) #5
  br label %if.end397

if.end397:                                        ; preds = %if.then392, %if.then396
  %notlhs = icmp ne i32 %defaulted_int.0, 0
  %notrhs = icmp eq i32 %longlong.3, 0
  %or.cond1820.not = and i1 %notrhs, %notlhs
  %and402 = and i32 %specbits.4, 1158
  %tobool403 = icmp eq i32 %and402, 0
  %or.cond2192 = and i1 %or.cond1820.not, %tobool403
  br i1 %or.cond2192, label %if.then404, label %if.else408

if.then404:                                       ; preds = %if.end397
  %87 = load i32* @pedantic, align 4, !tbaa !5
  %tobool405 = icmp eq i32 %87, 0
  br i1 %tobool405, label %if.end407, label %if.then406

if.then406:                                       ; preds = %if.then404
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([64 x i8]* @.str278, i64 0, i64 0)) #5
  br label %if.end407

if.end407:                                        ; preds = %if.then404, %if.then406
  %88 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 22), align 8, !tbaa !1
  store %union.tree_node* %88, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end437

if.else408:                                       ; preds = %if.end397
  %89 = load %union.tree_node** %type, align 8, !tbaa !1
  %90 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %cmp409 = icmp eq %union.tree_node* %89, %90
  br i1 %cmp409, label %if.then411, label %if.else415

if.then411:                                       ; preds = %if.else408
  %91 = load i32* @pedantic, align 4, !tbaa !5
  %tobool412 = icmp eq i32 %91, 0
  br i1 %tobool412, label %if.end414, label %if.then413

if.then413:                                       ; preds = %if.then411
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([45 x i8]* @.str279, i64 0, i64 0)) #5
  br label %if.end414

if.end414:                                        ; preds = %if.then411, %if.then413
  %92 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 20), align 8, !tbaa !1
  store %union.tree_node* %92, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end437

if.else415:                                       ; preds = %if.else408
  %93 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 24), align 8, !tbaa !1
  %cmp416 = icmp eq %union.tree_node* %89, %93
  br i1 %cmp416, label %if.then418, label %if.else419

if.then418:                                       ; preds = %if.else415
  %94 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 21), align 8, !tbaa !1
  store %union.tree_node* %94, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end437

if.else419:                                       ; preds = %if.else415
  %95 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !tbaa !1
  %cmp420 = icmp eq %union.tree_node* %89, %95
  br i1 %cmp420, label %if.then422, label %if.else423

if.then422:                                       ; preds = %if.else419
  %96 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 22), align 8, !tbaa !1
  store %union.tree_node* %96, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end437

if.else423:                                       ; preds = %if.else419
  %97 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 8, !tbaa !1
  %cmp424 = icmp eq %union.tree_node* %89, %97
  br i1 %cmp424, label %if.then426, label %if.else427

if.then426:                                       ; preds = %if.else423
  %98 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 23), align 8, !tbaa !1
  store %union.tree_node* %98, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end437

if.else427:                                       ; preds = %if.else423
  %99 = load i32* @pedantic, align 4, !tbaa !5
  %tobool428 = icmp eq i32 %99, 0
  br i1 %tobool428, label %if.end430, label %if.then429

if.then429:                                       ; preds = %if.else427
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([45 x i8]* @.str279, i64 0, i64 0)) #5
  %.pre2355 = load %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end430

if.end430:                                        ; preds = %if.else427, %if.then429
  %100 = phi %union.tree_node* [ %89, %if.else427 ], [ %.pre2355, %if.then429 ]
  %call431 = call %union.tree_node* @build_complex_type(%union.tree_node* %100) #5
  store %union.tree_node* %call431, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end437

if.end437:                                        ; preds = %if.end389.if.end437_crit_edge, %if.end407, %if.then418, %if.then426, %if.end430, %if.then422, %if.end414
  %101 = phi %union.tree_node* [ %.pre2338, %if.end389.if.end437_crit_edge ], [ %88, %if.end407 ], [ %94, %if.then418 ], [ %98, %if.then426 ], [ %call431, %if.end430 ], [ %96, %if.then422 ], [ %92, %if.end414 ]
  %and438 = lshr i32 %specbits.4, 3
  %and438.lobit = and i32 %and438, 1
  %readonly_flag = getelementptr inbounds %union.tree_node* %101, i64 0, i32 0, i32 0, i32 2
  %bf.load442 = load i32* %readonly_flag, align 8
  %bf.lshr443 = lshr i32 %bf.load442, 12
  %bf.clear444 = and i32 %bf.lshr443, 1
  %add = add nsw i32 %bf.clear444, %and438.lobit
  %and445 = lshr i32 %specbits.4, 12
  %and445.lobit = and i32 %and445, 1
  %type451 = bitcast %union.tree_node* %101 to %struct.tree_type*
  %restrict_flag = getelementptr inbounds %struct.tree_type* %type451, i64 0, i32 6
  %bf.load452 = load i32* %restrict_flag, align 4
  %bf.lshr453 = lshr i32 %bf.load452, 21
  %bf.clear454 = and i32 %bf.lshr453, 1
  %add455 = add nsw i32 %bf.clear454, %and445.lobit
  %and456 = lshr i32 %specbits.4, 9
  %and456.lobit = and i32 %and456, 1
  %bf.lshr464 = lshr i32 %bf.load442, 11
  %bf.clear465 = and i32 %bf.lshr464, 1
  %add466 = add nsw i32 %bf.clear465, %and456.lobit
  %and467 = and i32 %specbits.4, 256
  %tobool468 = icmp ne i32 %and467, 0
  %cmp473 = icmp slt i32 %add, 2
  %102 = load i32* @flag_isoc99, align 4
  %tobool476 = icmp ne i32 %102, 0
  %or.cond1822 = or i1 %cmp473, %tobool476
  br i1 %or.cond1822, label %if.end478, label %if.then477

if.then477:                                       ; preds = %if.end437
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([18 x i8]* @.str280, i64 0, i64 0)) #5
  %.pre2339 = load i32* @flag_isoc99, align 4
  br label %if.end478

if.end478:                                        ; preds = %if.end437, %if.then477
  %103 = phi i32 [ %102, %if.end437 ], [ %.pre2339, %if.then477 ]
  %cmp479 = icmp slt i32 %add455, 2
  %tobool482 = icmp ne i32 %103, 0
  %or.cond1824 = or i1 %cmp479, %tobool482
  br i1 %or.cond1824, label %if.end484, label %if.then483

if.then483:                                       ; preds = %if.end478
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([21 x i8]* @.str281, i64 0, i64 0)) #5
  %.pre2340 = load i32* @flag_isoc99, align 4
  br label %if.end484

if.end484:                                        ; preds = %if.end478, %if.then483
  %104 = phi i32 [ %103, %if.end478 ], [ %.pre2340, %if.then483 ]
  %cmp485 = icmp slt i32 %add466, 2
  %tobool488 = icmp ne i32 %104, 0
  %or.cond1826 = or i1 %cmp485, %tobool488
  br i1 %or.cond1826, label %if.end490, label %if.then489

if.then489:                                       ; preds = %if.end484
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([21 x i8]* @.str282, i64 0, i64 0)) #5
  br label %if.end490

if.end490:                                        ; preds = %if.end484, %if.then489
  %105 = load i32* @flag_gen_aux_info, align 4, !tbaa !5
  %tobool491 = icmp eq i32 %105, 0
  br i1 %tobool491, label %land.lhs.true492, label %if.end527

land.lhs.true492:                                 ; preds = %if.end490
  %106 = load %union.tree_node** %type, align 8, !tbaa !1
  %readonly_flag494 = getelementptr inbounds %union.tree_node* %106, i64 0, i32 0, i32 0, i32 2
  %bf.load495 = load i32* %readonly_flag494, align 8
  %bf.lshr496 = lshr i32 %bf.load495, 12
  %bf.clear497 = and i32 %bf.lshr496, 1
  %107 = lshr i32 %bf.load495, 10
  %mul503 = and i32 %107, 2
  %or504 = or i32 %bf.clear497, %mul503
  %type505 = bitcast %union.tree_node* %106 to %struct.tree_type*
  %restrict_flag506 = getelementptr inbounds %struct.tree_type* %type505, i64 0, i32 6
  %bf.load507 = load i32* %restrict_flag506, align 4
  %108 = lshr i32 %bf.load507, 19
  %mul510 = and i32 %108, 4
  %or511 = or i32 %or504, %mul510
  %bf.clear515 = and i32 %bf.load495, 255
  %cmp516 = icmp eq i32 %bf.clear515, 20
  br i1 %cmp516, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true492
  %type519 = getelementptr inbounds %union.tree_node* %106, i64 0, i32 0, i32 0, i32 1
  %109 = load %union.tree_node** %type519, align 8, !tbaa !23
  %tobool520 = icmp ne %union.tree_node* %109, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true492
  %110 = phi i1 [ false, %land.lhs.true492 ], [ %tobool520, %land.rhs ]
  %land.ext = zext i1 %110 to i32
  %mul521 = shl nuw nsw i32 %land.ext, 3
  %or522 = or i32 %or511, %mul521
  %tobool523 = icmp eq i32 %or522, 0
  br i1 %tobool523, label %if.end527, label %if.then524

if.then524:                                       ; preds = %land.end
  %111 = getelementptr inbounds %union.tree_node* %106, i64 0, i32 0, i32 15
  %112 = load %union.tree_node** %111, align 8, !tbaa !67
  store %union.tree_node* %112, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end527

if.end527:                                        ; preds = %land.end, %if.end490, %if.then524
  %tobool528 = icmp ne i32 %add, 0
  %cond = zext i1 %tobool528 to i32
  %tobool529 = icmp ne i32 %add455, 0
  %cond530 = select i1 %tobool529, i32 4, i32 0
  %tobool532 = icmp ne i32 %add466, 0
  %cond533 = select i1 %tobool532, i32 2, i32 0
  %or531 = or i32 %cond533, %cond
  %or534 = or i32 %or531, %cond530
  %and535 = and i32 %specbits.4, 2048
  %tobool536 = icmp ne i32 %and535, 0
  %and535.lobit = lshr exact i32 %and535, 11
  %and539 = and i32 %specbits.4, 1
  %nclasses.1 = add nsw i32 %and535.lobit, %and539
  %and544 = and i32 %specbits.4, 16
  %tobool545 = icmp ne i32 %and544, 0
  %and544.lobit = lshr exact i32 %and544, 4
  %inc547.nclasses.1 = add nsw i32 %nclasses.1, %and544.lobit
  %and549 = and i32 %specbits.4, 32
  %tobool550 = icmp ne i32 %and549, 0
  %and549.lobit = lshr exact i32 %and549, 5
  %nclasses.3 = add nsw i32 %inc547.nclasses.1, %and549.lobit
  %and554 = and i32 %specbits.4, 64
  %tobool555 = icmp eq i32 %and554, 0
  %and554.lobit = lshr exact i32 %and554, 6
  %inc557.nclasses.3 = add nsw i32 %nclasses.3, %and554.lobit
  %cmp559 = icmp sgt i32 %inc557.nclasses.3, 1
  br i1 %cmp559, label %if.then561, label %if.else562

if.then561:                                       ; preds = %if.end527
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str283, i64 0, i64 0), i8* %.name.0) #5
  br label %while.cond641.preheader

if.else562:                                       ; preds = %if.end527
  %tobool13.not = xor i1 %cmp1, true
  %and565 = and i32 %specbits.4, 2144
  %tobool566 = icmp eq i32 %and565, 0
  %or.cond2194 = or i1 %tobool566, %tobool13.not
  br i1 %or.cond2194, label %if.else586, label %if.then567

if.then567:                                       ; preds = %if.else562
  br i1 %tobool536, label %land.lhs.true570, label %if.end576

land.lhs.true570:                                 ; preds = %if.then567
  %113 = load i32* @pedantic, align 4, !tbaa !5
  %tobool571 = icmp eq i32 %113, 0
  br i1 %tobool571, label %lor.lhs.false572, label %if.then575

lor.lhs.false572:                                 ; preds = %land.lhs.true570
  %114 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %115 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp573 = icmp eq %struct.binding_level* %114, %115
  br i1 %cmp573, label %if.then575, label %if.end576

if.then575:                                       ; preds = %land.lhs.true570, %lor.lhs.false572
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([36 x i8]* @.str284, i64 0, i64 0)) #5
  br label %if.end576

if.end576:                                        ; preds = %if.then575, %lor.lhs.false572, %if.then567
  br i1 %tobool550, label %if.then579, label %if.end580

if.then579:                                       ; preds = %if.end576
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str285, i64 0, i64 0)) #5
  br label %if.end580

if.end580:                                        ; preds = %if.then579, %if.end576
  br i1 %tobool555, label %if.end584, label %if.then583

if.then583:                                       ; preds = %if.end580
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str286, i64 0, i64 0)) #5
  br label %if.end584

if.end584:                                        ; preds = %if.end580, %if.then583
  %and585 = and i32 %specbits.4, -2145
  br label %while.cond641.preheader

if.else586:                                       ; preds = %if.else562
  %cmp587 = icmp ne i32 %decl_context.addr.2, 0
  %cmp590 = icmp sgt i32 %inc557.nclasses.3, 0
  %or.cond1828 = and i1 %cmp587, %cmp590
  br i1 %or.cond1828, label %if.then592, label %if.else606

if.then592:                                       ; preds = %if.else586
  %cmp593.not = icmp ne i32 %decl_context.addr.2, 2
  %tobool550.not = xor i1 %tobool550, true
  %brmerge = or i1 %cmp593.not, %tobool550.not
  br i1 %brmerge, label %if.else599, label %while.cond641.preheader

if.else599:                                       ; preds = %if.then592
  switch i32 %decl_context.addr.2, label %sw.default602 [
    i32 3, label %sw.bb600
    i32 2, label %sw.bb601
  ]

sw.bb600:                                         ; preds = %if.else599
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str287, i64 0, i64 0), i8* %.name.0) #5
  br label %sw.epilog603

sw.bb601:                                         ; preds = %if.else599
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([43 x i8]* @.str288, i64 0, i64 0), i8* %.name.0) #5
  br label %sw.epilog603

sw.default602:                                    ; preds = %if.else599
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str289, i64 0, i64 0)) #5
  br label %sw.epilog603

sw.epilog603:                                     ; preds = %sw.default602, %sw.bb601, %sw.bb600
  %and604 = and i32 %specbits.4, -2162
  br label %while.cond641.preheader

if.else606:                                       ; preds = %if.else586
  %tobool610 = icmp ne i32 %initialized, 0
  %or.cond1830 = and i1 %tobool545, %tobool610
  %or.cond1830.not = xor i1 %or.cond1830, true
  %or.cond1832 = or i1 %cmp1, %or.cond1830.not
  br i1 %or.cond1832, label %if.else619, label %if.then613

if.then613:                                       ; preds = %if.else606
  %116 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %117 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp614 = icmp eq %struct.binding_level* %116, %117
  br i1 %cmp614, label %if.then616, label %if.else617

if.then616:                                       ; preds = %if.then613
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([39 x i8]* @.str290, i64 0, i64 0), i8* %.name.0) #5
  br label %while.cond641.preheader

if.else617:                                       ; preds = %if.then613
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str291, i64 0, i64 0), i8* %.name.0) #5
  br label %while.cond641.preheader

if.else619:                                       ; preds = %if.else606
  %or.cond1834 = and i1 %tobool545, %cmp1
  %118 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %119 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp625 = icmp eq %struct.binding_level* %118, %119
  br i1 %or.cond1834, label %land.lhs.true624, label %if.else628

land.lhs.true624:                                 ; preds = %if.else619
  br i1 %cmp625, label %land.lhs.true631, label %if.then627

if.then627:                                       ; preds = %land.lhs.true624
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str292, i64 0, i64 0), i8* %.name.0) #5
  br label %while.cond641.preheader

if.else628:                                       ; preds = %if.else619
  %brmerge2405.demorgan = and i1 %cmp625, %tobool536
  br i1 %brmerge2405.demorgan, label %if.then634, label %while.cond641.preheader

land.lhs.true631:                                 ; preds = %land.lhs.true624
  br i1 %tobool536, label %if.then634, label %while.cond641.preheader

if.then634:                                       ; preds = %if.else628, %land.lhs.true631
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([47 x i8]* @.str293, i64 0, i64 0), i8* %.name.0) #5
  br label %while.cond641.preheader

while.cond641.preheader:                          ; preds = %if.else628, %if.end584, %if.else617, %if.then616, %land.lhs.true631, %if.then634, %if.then627, %sw.epilog603, %if.then561, %if.then592
  %specbits.5.ph = phi i32 [ %specbits.4, %if.then592 ], [ %specbits.4, %if.then561 ], [ %and604, %sw.epilog603 ], [ %specbits.4, %if.then627 ], [ %specbits.4, %if.then634 ], [ %specbits.4, %land.lhs.true631 ], [ %specbits.4, %if.else628 ], [ %specbits.4, %if.then616 ], [ %specbits.4, %if.else617 ], [ %and585, %if.end584 ]
  br i1 %tobool229122972304, label %land.end650.thread, label %land.end650.lr.ph

land.end650.lr.ph:                                ; preds = %while.cond641.preheader
  %cmp910 = icmp eq i32 %decl_context.addr.2, 3
  %cmp952 = icmp eq i32 %decl_context.addr.2, 2
  br label %land.end650

land.end650.thread:                               ; preds = %while.cond641.backedge, %while.cond641.preheader
  %type_quals.0.lcssa = phi i32 [ %or534, %while.cond641.preheader ], [ %type_quals.0.be, %while.cond641.backedge ]
  %returned_attrs.0.lcssa = phi %union.tree_node* [ null, %while.cond641.preheader ], [ %returned_attrs.0.be, %while.cond641.backedge ]
  %array_ptr_quals.0.lcssa = phi %union.tree_node* [ null, %while.cond641.preheader ], [ %array_ptr_quals.0.be, %while.cond641.backedge ]
  %size_varies.1.lcssa = phi i32 [ %size_varies.02203, %while.cond641.preheader ], [ %size_varies.1.be, %while.cond641.backedge ]
  %120 = load %union.tree_node** %type, align 8, !tbaa !1
  br label %while.end1174

land.end650:                                      ; preds = %land.end650.lr.ph, %while.cond641.backedge
  %declarator.addr.02271 = phi %union.tree_node* [ %declarator, %land.end650.lr.ph ], [ %declarator.addr.0.be, %while.cond641.backedge ]
  %type_quals.02269 = phi i32 [ %or534, %land.end650.lr.ph ], [ %type_quals.0.be, %while.cond641.backedge ]
  %returned_attrs.02267 = phi %union.tree_node* [ null, %land.end650.lr.ph ], [ %returned_attrs.0.be, %while.cond641.backedge ]
  %array_parm_static.02266 = phi i32 [ 0, %land.end650.lr.ph ], [ %array_parm_static.0.be, %while.cond641.backedge ]
  %array_ptr_quals.02265 = phi %union.tree_node* [ null, %land.end650.lr.ph ], [ %array_ptr_quals.0.be, %while.cond641.backedge ]
  %size_varies.12264 = phi i32 [ %size_varies.02203, %land.end650.lr.ph ], [ %size_varies.1.be, %while.cond641.backedge ]
  %code645 = getelementptr inbounds %union.tree_node* %declarator.addr.02271, i64 0, i32 0, i32 0, i32 2
  %bf.load646 = load i32* %code645, align 8
  %bf.clear647 = and i32 %bf.load646, 255
  %cmp648 = icmp eq i32 %bf.clear647, 1
  %121 = load %union.tree_node** %type, align 8, !tbaa !1
  br i1 %cmp648, label %while.end1174, label %while.body652

while.body652:                                    ; preds = %land.end650
  %122 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp653 = icmp eq %union.tree_node* %121, %122
  br i1 %cmp653, label %if.then655, label %if.end659

if.then655:                                       ; preds = %while.body652
  %operands657 = getelementptr inbounds %union.tree_node* %declarator.addr.02271, i64 0, i32 0, i32 2
  %arrayidx658 = bitcast i32* %operands657 to %union.tree_node**
  %123 = load %union.tree_node** %arrayidx658, align 8, !tbaa !1
  br label %while.cond641.backedge

while.cond641.backedge:                           ; preds = %for.body1050, %if.end1043, %if.then655, %if.then901, %if.end766, %if.then968, %land.lhs.true954, %if.then959, %if.end1165, %if.end723, %if.end951
  %size_varies.1.be = phi i32 [ %size_varies.12264, %if.then655 ], [ %size_varies.12264, %if.end723 ], [ %size_varies.12264, %if.end766 ], [ %size_varies.3, %if.then959 ], [ %size_varies.3, %land.lhs.true954 ], [ %size_varies.3, %if.end951 ], [ %size_varies.2, %if.then901 ], [ %size_varies.12264, %if.then968 ], [ 0, %if.end1165 ], [ 0, %if.end1043 ], [ 0, %for.body1050 ]
  %array_ptr_quals.0.be = phi %union.tree_node* [ %array_ptr_quals.02265, %if.then655 ], [ null, %if.end723 ], [ %133, %if.end766 ], [ null, %if.then959 ], [ null, %land.lhs.true954 ], [ %133, %if.end951 ], [ %133, %if.then901 ], [ null, %if.then968 ], [ null, %if.end1165 ], [ null, %if.end1043 ], [ null, %for.body1050 ]
  %array_parm_static.0.be = phi i32 [ %array_parm_static.02266, %if.then655 ], [ 0, %if.end723 ], [ %bf.clear743, %if.end766 ], [ 0, %if.then959 ], [ 0, %land.lhs.true954 ], [ %bf.clear743, %if.end951 ], [ %bf.clear743, %if.then901 ], [ 0, %if.then968 ], [ 0, %if.end1165 ], [ 0, %if.end1043 ], [ 0, %for.body1050 ]
  %returned_attrs.0.be = phi %union.tree_node* [ %returned_attrs.02267, %if.then655 ], [ %call725, %if.end723 ], [ %returned_attrs.02267, %if.end766 ], [ %returned_attrs.02267, %if.then959 ], [ %returned_attrs.02267, %land.lhs.true954 ], [ %returned_attrs.02267, %if.end951 ], [ %returned_attrs.02267, %if.then901 ], [ %returned_attrs.02267, %if.then968 ], [ %returned_attrs.02267, %if.end1165 ], [ %returned_attrs.02267, %if.end1043 ], [ %returned_attrs.02267, %for.body1050 ]
  %type_quals.0.be = phi i32 [ %type_quals.02269, %if.then655 ], [ %type_quals.02269, %if.end723 ], [ %type_quals.02269, %if.end766 ], [ %type_quals.02269, %if.then959 ], [ %type_quals.02269, %land.lhs.true954 ], [ %type_quals.02269, %if.end951 ], [ %type_quals.02269, %if.then901 ], [ %type_quals.02269, %if.then968 ], [ %type_quals.1, %if.end1165 ], [ 0, %if.end1043 ], [ 0, %for.body1050 ]
  %declarator.addr.0.be = phi %union.tree_node* [ %123, %if.then655 ], [ %127, %if.end723 ], [ %134, %if.end766 ], [ %134, %if.then959 ], [ %134, %land.lhs.true954 ], [ %134, %if.end951 ], [ %134, %if.then901 ], [ %declarator.addr.02271, %if.then968 ], [ %234, %if.end1165 ], [ %218, %if.end1043 ], [ %218, %for.body1050 ]
  %tobool642 = icmp eq %union.tree_node* %declarator.addr.0.be, null
  br i1 %tobool642, label %land.end650.thread, label %land.end650

if.end659:                                        ; preds = %while.body652
  %cmp660 = icmp ne %union.tree_node* %array_ptr_quals.02265, null
  %tobool663 = icmp ne i32 %array_parm_static.02266, 0
  %or.cond1836 = or i1 %cmp660, %tobool663
  br i1 %or.cond1836, label %if.then664, label %if.end665

if.then664:                                       ; preds = %if.end659
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str294, i64 0, i64 0)) #5
  %bf.load668.pre = load i32* %code645, align 8
  br label %if.end665

if.end665:                                        ; preds = %if.end659, %if.then664
  %bf.load668 = phi i32 [ %bf.load646, %if.end659 ], [ %bf.load668.pre, %if.then664 ]
  %bf.clear669 = and i32 %bf.load668, 255
  switch i32 %bf.clear669, label %if.else1169 [
    i32 2, label %if.then672
    i32 43, label %if.then733
    i32 53, label %if.then968
    i32 41, label %if.then1065
  ]

if.then672:                                       ; preds = %if.end665
  %purpose = getelementptr inbounds %union.tree_node* %declarator.addr.02271, i64 0, i32 0, i32 1
  %124 = load i8** %purpose, align 8
  %125 = bitcast i8* %124 to %union.tree_node*
  %value675 = getelementptr inbounds %union.tree_node* %declarator.addr.02271, i64 0, i32 0, i32 2
  %126 = bitcast i32* %value675 to %union.tree_node**
  %127 = load %union.tree_node** %126, align 8, !tbaa !50
  %cond22002261 = icmp eq %union.tree_node* %127, null
  br i1 %cond22002261, label %if.end723, label %land.rhs679

land.rhs679:                                      ; preds = %if.then672, %while.body688
  %inner_decl.02262 = phi %union.tree_node* [ %129, %while.body688 ], [ %127, %if.then672 ]
  %code681 = getelementptr inbounds %union.tree_node* %inner_decl.02262, i64 0, i32 0, i32 0, i32 2
  %bf.load682 = load i32* %code681, align 8
  %bf.clear683 = and i32 %bf.load682, 255
  switch i32 %bf.clear683, label %if.else712 [
    i32 2, label %while.body688
    i32 1, label %if.end723.loopexit
    i32 53, label %if.end723
  ]

while.body688:                                    ; preds = %land.rhs679
  %value690 = getelementptr inbounds %union.tree_node* %inner_decl.02262, i64 0, i32 0, i32 2
  %128 = bitcast i32* %value690 to %union.tree_node**
  %129 = load %union.tree_node** %128, align 8, !tbaa !50
  %cond2200 = icmp eq %union.tree_node* %129, null
  br i1 %cond2200, label %if.end723.loopexit, label %land.rhs679

if.else712:                                       ; preds = %land.rhs679
  %cmp717 = icmp eq i32 %bf.clear683, 43
  %.2195 = select i1 %cmp717, i32 4, i32 0
  br label %if.end723

if.end723.loopexit:                               ; preds = %while.body688, %land.rhs679
  br label %if.end723

if.end723:                                        ; preds = %land.rhs679, %if.end723.loopexit, %if.then672, %if.else712
  %attr_flags.0 = phi i32 [ %.2195, %if.else712 ], [ 1, %if.then672 ], [ 1, %if.end723.loopexit ], [ 2, %land.rhs679 ]
  %call724 = call %union.tree_node* @chainon(%union.tree_node* %returned_attrs.02267, %union.tree_node* %125) #5
  %call725 = call %union.tree_node* @decl_attributes(%union.tree_node** %type, %union.tree_node* %call724, i32 %attr_flags.0) #5
  br label %while.cond641.backedge

if.then733:                                       ; preds = %if.end665
  %operands735 = getelementptr inbounds %union.tree_node* %declarator.addr.02271, i64 0, i32 0, i32 2
  %arrayidx736 = getelementptr inbounds i32* %operands735, i64 2
  %130 = bitcast i32* %arrayidx736 to %union.tree_node**
  %131 = load %union.tree_node** %130, align 8, !tbaa !1
  %132 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call737 = call %union.tree_node* @signed_type(%union.tree_node* %132) #5
  %type739 = getelementptr inbounds %union.tree_node* %declarator.addr.02271, i64 0, i32 0, i32 0, i32 1
  %133 = load %union.tree_node** %type739, align 8, !tbaa !23
  %bf.load741 = load i32* %code645, align 8
  %bf.lshr742 = lshr i32 %bf.load741, 18
  %bf.clear743 = and i32 %bf.lshr742, 1
  %arrayidx746 = bitcast i32* %operands735 to %union.tree_node**
  %134 = load %union.tree_node** %arrayidx746, align 8, !tbaa !1
  %135 = load %union.tree_node** %type, align 8, !tbaa !1
  %code748 = getelementptr inbounds %union.tree_node* %135, i64 0, i32 0, i32 0, i32 2
  %bf.load749 = load i32* %code748, align 8
  %bf.clear750 = and i32 %bf.load749, 255
  %cmp751 = icmp eq i32 %bf.clear750, 5
  br i1 %cmp751, label %if.then753, label %if.end754

if.then753:                                       ; preds = %if.then733
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str295, i64 0, i64 0), i8* %.name.0) #5
  %136 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %136, %union.tree_node** %type, align 8, !tbaa !1
  %code756.phi.trans.insert = getelementptr inbounds %union.tree_node* %136, i64 0, i32 0, i32 0, i32 2
  %bf.load757.pre = load i32* %code756.phi.trans.insert, align 8
  br label %if.end754

if.end754:                                        ; preds = %if.then753, %if.then733
  %bf.load757 = phi i32 [ %bf.load757.pre, %if.then753 ], [ %bf.load749, %if.then733 ]
  %137 = phi %union.tree_node* [ %136, %if.then753 ], [ %135, %if.then733 ]
  %bf.clear758 = and i32 %bf.load757, 255
  %cmp759 = icmp eq i32 %bf.clear758, 23
  br i1 %cmp759, label %if.then761, label %if.end754.if.end762_crit_edge

if.end754.if.end762_crit_edge:                    ; preds = %if.end754
  %.pre2348 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  br label %if.end762

if.then761:                                       ; preds = %if.end754
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str296, i64 0, i64 0), i8* %.name.0) #5
  %138 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %138, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end762

if.end762:                                        ; preds = %if.end754.if.end762_crit_edge, %if.then761
  %139 = phi %union.tree_node* [ %137, %if.end754.if.end762_crit_edge ], [ %138, %if.then761 ]
  %140 = phi %union.tree_node* [ %.pre2348, %if.end754.if.end762_crit_edge ], [ %138, %if.then761 ]
  %cmp763 = icmp eq %union.tree_node* %131, %140
  br i1 %cmp763, label %if.then765, label %if.end766

if.then765:                                       ; preds = %if.end762
  store %union.tree_node* %131, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end766

if.end766:                                        ; preds = %if.then765, %if.end762
  %141 = phi %union.tree_node* [ %131, %if.then765 ], [ %139, %if.end762 ]
  %cmp767 = icmp eq %union.tree_node* %141, %140
  br i1 %cmp767, label %while.cond641.backedge, label %if.end770

if.end770:                                        ; preds = %if.end766
  %tobool771 = icmp eq %union.tree_node* %131, null
  br i1 %tobool771, label %if.else909, label %while.cond773

while.cond773:                                    ; preds = %if.end770, %land.rhs800
  %size.0 = phi %union.tree_node* [ %142, %land.rhs800 ], [ %131, %if.end770 ]
  %code775 = getelementptr inbounds %union.tree_node* %size.0, i64 0, i32 0, i32 0, i32 2
  %bf.load776 = load i32* %code775, align 8
  %bf.clear777 = and i32 %bf.load776, 255
  %bf.clear777.off = add i32 %bf.clear777, -114
  %switch2201 = icmp ult i32 %bf.clear777.off, 3
  br i1 %switch2201, label %land.lhs.true794, label %while.end816

land.lhs.true794:                                 ; preds = %while.cond773
  %operands796 = getelementptr inbounds %union.tree_node* %size.0, i64 0, i32 0, i32 2
  %arrayidx797 = bitcast i32* %operands796 to %union.tree_node**
  %142 = load %union.tree_node** %arrayidx797, align 8, !tbaa !1
  %cmp798 = icmp eq %union.tree_node* %142, %140
  br i1 %cmp798, label %while.end816, label %land.rhs800

land.rhs800:                                      ; preds = %land.lhs.true794
  %type802 = getelementptr inbounds %union.tree_node* %size.0, i64 0, i32 0, i32 0, i32 1
  %143 = load %union.tree_node** %type802, align 8, !tbaa !23
  %type807 = getelementptr inbounds %union.tree_node* %142, i64 0, i32 0, i32 0, i32 1
  %144 = load %union.tree_node** %type807, align 8, !tbaa !23
  %cmp808 = icmp eq %union.tree_node* %143, %144
  br i1 %cmp808, label %while.cond773, label %while.end816

while.end816:                                     ; preds = %while.cond773, %land.lhs.true794, %land.rhs800
  %type818 = getelementptr inbounds %union.tree_node* %size.0, i64 0, i32 0, i32 0, i32 1
  %145 = load %union.tree_node** %type818, align 8, !tbaa !23
  %code820 = getelementptr inbounds %union.tree_node* %145, i64 0, i32 0, i32 0, i32 2
  %bf.load821 = load i32* %code820, align 8
  %bf.clear822 = and i32 %bf.load821, 255
  switch i32 %bf.clear822, label %if.then852 [
    i32 6, label %if.end853
    i32 10, label %if.end853
    i32 11, label %if.end853
    i32 12, label %if.end853
  ]

if.then852:                                       ; preds = %while.end816
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str297, i64 0, i64 0), i8* %.name.0) #5
  %146 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !1
  br label %if.end853

if.end853:                                        ; preds = %while.end816, %while.end816, %while.end816, %while.end816, %if.then852
  %size.1 = phi %union.tree_node* [ %size.0, %while.end816 ], [ %146, %if.then852 ], [ %size.0, %while.end816 ], [ %size.0, %while.end816 ], [ %size.0, %while.end816 ]
  %147 = load i32* @pedantic, align 4, !tbaa !5
  %tobool854 = icmp eq i32 %147, 0
  br i1 %tobool854, label %if.end859, label %land.lhs.true855

land.lhs.true855:                                 ; preds = %if.end853
  %call856 = call i32 @integer_zerop(%union.tree_node* %size.1) #5
  %tobool857 = icmp eq i32 %call856, 0
  br i1 %tobool857, label %if.end859, label %if.then858

if.then858:                                       ; preds = %land.lhs.true855
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([35 x i8]* @.str298, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end859

if.end859:                                        ; preds = %land.lhs.true855, %if.end853, %if.then858
  %code861 = getelementptr inbounds %union.tree_node* %size.1, i64 0, i32 0, i32 0, i32 2
  %bf.load862 = load i32* %code861, align 8
  %bf.clear863 = and i32 %bf.load862, 255
  %cmp864 = icmp eq i32 %bf.clear863, 25
  br i1 %cmp864, label %if.then866, label %if.else872

if.then866:                                       ; preds = %if.end859
  call void @constant_expression_warning(%union.tree_node* %size.1) #5
  %call867 = call i32 @tree_int_cst_sgn(%union.tree_node* %size.1) #5
  %cmp868 = icmp slt i32 %call867, 0
  br i1 %cmp868, label %if.then870, label %if.end886

if.then870:                                       ; preds = %if.then866
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str299, i64 0, i64 0), i8* %.name.0) #5
  %148 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !1
  br label %if.end886

if.else872:                                       ; preds = %if.end859
  %149 = load i32* @flag_isoc99, align 4, !tbaa !5
  %tobool873 = icmp eq i32 %149, 0
  %150 = load i32* @pedantic, align 4
  %tobool875 = icmp ne i32 %150, 0
  %or.cond1838 = and i1 %tobool873, %tobool875
  br i1 %or.cond1838, label %if.then876, label %if.end886

if.then876:                                       ; preds = %if.else872
  %bf.clear880 = and i32 %bf.load862, 512
  %tobool881 = icmp eq i32 %bf.clear880, 0
  br i1 %tobool881, label %if.else883, label %if.then882

if.then882:                                       ; preds = %if.then876
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([57 x i8]* @.str300, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end886

if.else883:                                       ; preds = %if.then876
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([41 x i8]* @.str301, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end886

if.end886:                                        ; preds = %if.else872, %if.else883, %if.then882, %if.then866, %if.then870
  %size_varies.2 = phi i32 [ %size_varies.12264, %if.then870 ], [ %size_varies.12264, %if.then866 ], [ 1, %if.then882 ], [ 1, %if.else883 ], [ 1, %if.else872 ]
  %size.2 = phi %union.tree_node* [ %148, %if.then870 ], [ %size.1, %if.then866 ], [ %size.1, %if.then882 ], [ %size.1, %if.else883 ], [ %size.1, %if.else872 ]
  %call887 = call i32 @integer_zerop(%union.tree_node* %size.2) #5
  %tobool888 = icmp eq i32 %call887, 0
  br i1 %tobool888, label %if.else891, label %if.then889

if.then889:                                       ; preds = %if.end886
  %151 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %call890 = call %union.tree_node* @build_range_type(%union.tree_node* %151, %union.tree_node* %size.2, %union.tree_node* null) #5
  br label %if.end922

if.else891:                                       ; preds = %if.end886
  %call892 = call %union.tree_node* @convert(%union.tree_node* %call737, %union.tree_node* %size.2) #5
  %152 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 8, !tbaa !1
  %call893 = call %union.tree_node* @convert(%union.tree_node* %call737, %union.tree_node* %152) #5
  %call894 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %call737, %union.tree_node* %call892, %union.tree_node* %call893) #5
  %call895 = call %union.tree_node* @fold(%union.tree_node* %call894) #5
  %public_flag = getelementptr inbounds %union.tree_node* %call895, i64 0, i32 0, i32 0, i32 2
  %bf.load897 = load i32* %public_flag, align 8
  %bf.clear899 = and i32 %bf.load897, 524288
  %tobool900 = icmp eq i32 %bf.clear899, 0
  br i1 %tobool900, label %if.end902, label %if.then901

if.then901:                                       ; preds = %if.else891
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str302, i64 0, i64 0), i8* %.name.0) #5
  %153 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %153, %union.tree_node** %type, align 8, !tbaa !1
  br label %while.cond641.backedge

if.end902:                                        ; preds = %if.else891
  %tobool903 = icmp eq i32 %size_varies.2, 0
  br i1 %tobool903, label %if.end906, label %if.then904

if.then904:                                       ; preds = %if.end902
  %call905 = call %union.tree_node* @variable_size(%union.tree_node* %call895) #5
  br label %if.end906

if.end906:                                        ; preds = %if.end902, %if.then904
  %itype.0 = phi %union.tree_node* [ %call905, %if.then904 ], [ %call895, %if.end902 ]
  %call907 = call %union.tree_node* @build_index_type(%union.tree_node* %itype.0) #5
  br label %if.end922

if.else909:                                       ; preds = %if.end770
  br i1 %cmp910, label %if.then912, label %if.end922

if.then912:                                       ; preds = %if.else909
  %154 = load i32* @pedantic, align 4, !tbaa !5
  %tobool913 = icmp eq i32 %154, 0
  %155 = load i32* @flag_isoc99, align 4
  %tobool915 = icmp ne i32 %155, 0
  %or.cond1840 = or i1 %tobool913, %tobool915
  %156 = load i32* @in_system_header, align 4
  %tobool917 = icmp ne i32 %156, 0
  %or.cond1842 = or i1 %or.cond1840, %tobool917
  br i1 %or.cond1842, label %if.end919, label %if.then918

if.then918:                                       ; preds = %if.then912
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([48 x i8]* @.str303, i64 0, i64 0)) #5
  br label %if.end919

if.end919:                                        ; preds = %if.then912, %if.then918
  %157 = load %union.tree_node** getelementptr inbounds ([6 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 8, !tbaa !1
  %158 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !1
  %call920 = call %union.tree_node* @build_range_type(%union.tree_node* %157, %union.tree_node* %158, %union.tree_node* null) #5
  br label %if.end922

if.end922:                                        ; preds = %if.else909, %if.end919, %if.then889, %if.end906
  %size_varies.3 = phi i32 [ %size_varies.2, %if.then889 ], [ %size_varies.2, %if.end906 ], [ %size_varies.12264, %if.end919 ], [ %size_varies.12264, %if.else909 ]
  %itype.1 = phi %union.tree_node* [ %call890, %if.then889 ], [ %call907, %if.end906 ], [ %call920, %if.end919 ], [ null, %if.else909 ]
  %size.3 = phi %union.tree_node* [ %size.2, %if.then889 ], [ %size.2, %if.end906 ], [ null, %if.end919 ], [ null, %if.else909 ]
  %159 = load i32* @pedantic, align 4, !tbaa !5
  %tobool923 = icmp eq i32 %159, 0
  br i1 %tobool923, label %if.end930, label %land.lhs.true924

land.lhs.true924:                                 ; preds = %if.end922
  %160 = load %union.tree_node** %type, align 8, !tbaa !1
  %size926 = getelementptr inbounds %union.tree_node* %160, i64 0, i32 0, i32 2
  %161 = bitcast i32* %size926 to %union.tree_node**
  %162 = load %union.tree_node** %161, align 8, !tbaa !80
  %cmp927 = icmp eq %union.tree_node* %162, null
  br i1 %cmp927, label %if.then929, label %if.end930

if.then929:                                       ; preds = %land.lhs.true924
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str304, i64 0, i64 0)) #5
  br label %if.end930

if.end930:                                        ; preds = %land.lhs.true924, %if.end922, %if.then929
  %163 = load %union.tree_node** %type, align 8, !tbaa !1
  %call931 = call %union.tree_node* @build_array_type(%union.tree_node* %163, %union.tree_node* %itype.1) #5
  store %union.tree_node* %call931, %union.tree_node** %type, align 8, !tbaa !1
  %tobool932 = icmp eq i32 %type_quals.02269, 0
  br i1 %tobool932, label %if.end935, label %if.then933

if.then933:                                       ; preds = %if.end930
  %call934 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %call931, i32 %type_quals.02269) #5
  store %union.tree_node* %call934, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end935

if.end935:                                        ; preds = %if.end930, %if.then933
  %164 = phi %union.tree_node* [ %call931, %if.end930 ], [ %call934, %if.then933 ]
  %tobool936 = icmp eq i32 %size_varies.3, 0
  br i1 %tobool936, label %if.end942, label %if.then937

if.then937:                                       ; preds = %if.end935
  %type938 = bitcast %union.tree_node* %164 to %struct.tree_type*
  %lang_flag_1939 = getelementptr inbounds %struct.tree_type* %type938, i64 0, i32 6
  %bf.load940 = load i32* %lang_flag_1939, align 4
  %bf.set = or i32 %bf.load940, 33554432
  store i32 %bf.set, i32* %lang_flag_1939, align 4
  br label %if.end942

if.end942:                                        ; preds = %if.end935, %if.then937
  %tobool943 = icmp eq %union.tree_node* %size.3, null
  br i1 %tobool943, label %if.end951, label %land.lhs.true944

land.lhs.true944:                                 ; preds = %if.end942
  %call945 = call i32 @integer_zerop(%union.tree_node* %size.3) #5
  %tobool946 = icmp eq i32 %call945, 0
  br i1 %tobool946, label %if.end951, label %if.then947

if.then947:                                       ; preds = %land.lhs.true944
  %165 = load %union.tree_node** %type, align 8, !tbaa !1
  call void @layout_type(%union.tree_node* %165) #5
  %166 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !tbaa !1
  %167 = load %union.tree_node** %type, align 8, !tbaa !1
  %size949 = getelementptr inbounds %union.tree_node* %167, i64 0, i32 0, i32 2
  %168 = bitcast i32* %size949 to %union.tree_node**
  store %union.tree_node* %166, %union.tree_node** %168, align 8, !tbaa !80
  %169 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !tbaa !1
  %170 = load %union.tree_node** %type, align 8, !tbaa !1
  %171 = getelementptr inbounds %union.tree_node* %170, i64 0, i32 0, i32 4
  store %union.tree_node* %169, %union.tree_node** %171, align 8, !tbaa !88
  br label %if.end951

if.end951:                                        ; preds = %land.lhs.true944, %if.end942, %if.then947
  br i1 %cmp952, label %while.cond641.backedge, label %land.lhs.true954

land.lhs.true954:                                 ; preds = %if.end951
  %cmp955 = icmp ne %union.tree_node* %133, null
  %tobool958 = icmp ne i32 %bf.clear743, 0
  %or.cond1844 = or i1 %cmp955, %tobool958
  br i1 %or.cond1844, label %if.then959, label %while.cond641.backedge

if.then959:                                       ; preds = %land.lhs.true954
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str294, i64 0, i64 0)) #5
  br label %while.cond641.backedge

if.then968:                                       ; preds = %if.end665
  %172 = load %union.tree_node** %type, align 8, !tbaa !1
  %173 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp969 = icmp eq %union.tree_node* %172, %173
  br i1 %cmp969, label %while.cond641.backedge, label %if.end972

if.end972:                                        ; preds = %if.then968
  %code974 = getelementptr inbounds %union.tree_node* %172, i64 0, i32 0, i32 0, i32 2
  %bf.load975 = load i32* %code974, align 8
  %bf.clear976 = and i32 %bf.load975, 255
  %cmp977 = icmp eq i32 %bf.clear976, 23
  br i1 %cmp977, label %if.then979, label %if.end980

if.then979:                                       ; preds = %if.end972
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([47 x i8]* @.str305, i64 0, i64 0), i8* %.name.0) #5
  %174 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  store %union.tree_node* %174, %union.tree_node** %type, align 8, !tbaa !1
  %code982.phi.trans.insert = getelementptr inbounds %union.tree_node* %174, i64 0, i32 0, i32 0, i32 2
  %bf.load983.pre = load i32* %code982.phi.trans.insert, align 8
  br label %if.end980

if.end980:                                        ; preds = %if.then979, %if.end972
  %bf.load983 = phi i32 [ %bf.load983.pre, %if.then979 ], [ %bf.load975, %if.end972 ]
  %175 = phi %union.tree_node* [ %174, %if.then979 ], [ %172, %if.end972 ]
  %bf.clear984 = and i32 %bf.load983, 255
  %cmp985 = icmp eq i32 %bf.clear984, 18
  br i1 %cmp985, label %if.then987, label %if.end988

if.then987:                                       ; preds = %if.end980
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str306, i64 0, i64 0), i8* %.name.0) #5
  %176 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  store %union.tree_node* %176, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end988

if.end988:                                        ; preds = %if.then987, %if.end980
  %177 = phi %union.tree_node* [ %176, %if.then987 ], [ %175, %if.end980 ]
  %178 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool989 = icmp eq i32 %178, 0
  br i1 %tobool989, label %if.end996, label %land.lhs.true990

land.lhs.true990:                                 ; preds = %if.end988
  %179 = getelementptr inbounds %union.tree_node* %177, i64 0, i32 0, i32 15
  %180 = load %union.tree_node** %179, align 8, !tbaa !67
  %181 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 24), align 8, !tbaa !1
  %cmp993 = icmp eq %union.tree_node* %180, %181
  br i1 %cmp993, label %if.then995, label %if.end996

if.then995:                                       ; preds = %land.lhs.true990
  %182 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !tbaa !1
  store %union.tree_node* %182, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end996

if.end996:                                        ; preds = %if.end988, %if.then995, %land.lhs.true990
  %operands998 = getelementptr inbounds %union.tree_node* %declarator.addr.02271, i64 0, i32 0, i32 2
  %arrayidx999 = getelementptr inbounds i32* %operands998, i64 2
  %183 = bitcast i32* %arrayidx999 to %union.tree_node**
  %184 = load %union.tree_node** %183, align 8, !tbaa !1
  br i1 %cmp1, label %land.rhs1001, label %land.end1011

land.rhs1001:                                     ; preds = %if.end996
  %arrayidx1004 = bitcast i32* %operands998 to %union.tree_node**
  %185 = load %union.tree_node** %arrayidx1004, align 8, !tbaa !1
  %code1006 = getelementptr inbounds %union.tree_node* %185, i64 0, i32 0, i32 0, i32 2
  %bf.load1007 = load i32* %code1006, align 8
  %bf.clear1008 = and i32 %bf.load1007, 255
  %cmp1009 = icmp eq i32 %bf.clear1008, 1
  br label %land.end1011

land.end1011:                                     ; preds = %land.rhs1001, %if.end996
  %186 = phi i1 [ false, %if.end996 ], [ %cmp1009, %land.rhs1001 ]
  %chain.i = getelementptr inbounds %union.tree_node* %184, i64 0, i32 0, i32 0, i32 0
  %187 = load %union.tree_node** %chain.i, align 8, !tbaa !29
  %purpose.i = getelementptr inbounds %union.tree_node* %184, i64 0, i32 0, i32 1
  %188 = load i8** %purpose.i, align 8
  %189 = bitcast i8* %188 to %union.tree_node*
  store %union.tree_node* %189, %union.tree_node** @last_function_parms, align 8, !tbaa !1
  %value.i = getelementptr inbounds %union.tree_node* %184, i64 0, i32 0, i32 2
  %190 = bitcast i32* %value.i to %union.tree_node**
  %191 = load %union.tree_node** %190, align 8, !tbaa !50
  store %union.tree_node* %191, %union.tree_node** @last_function_parm_tags, align 8, !tbaa !1
  %192 = load i32* @warn_strict_prototypes, align 4, !tbaa !5
  %notlhs.i = icmp eq i32 %192, 0
  %notrhs.i = icmp ne %union.tree_node* %187, null
  %or.cond.not.i = or i1 %notrhs.i, %notlhs.i
  %or.cond52.i = or i1 %or.cond.not.i, %186
  %193 = load i32* @in_system_header, align 4
  %tobool5.i = icmp ne i32 %193, 0
  %or.cond53.i = or i1 %or.cond52.i, %tobool5.i
  br i1 %or.cond53.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %land.end1011
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([39 x i8]* @.str228, i64 0, i64 0)) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %land.end1011
  %cmp6.i = icmp eq %union.tree_node* %187, null
  br i1 %cmp6.i, label %for.cond.preheader.i, label %land.lhs.true7.i

land.lhs.true7.i:                                 ; preds = %if.end.i
  %value9.i = getelementptr inbounds %union.tree_node* %187, i64 0, i32 0, i32 2
  %194 = bitcast i32* %value9.i to %union.tree_node**
  %195 = load %union.tree_node** %194, align 8, !tbaa !50
  %code.i = getelementptr inbounds %union.tree_node* %195, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp11.i = icmp eq i32 %bf.clear.i, 1
  br i1 %cmp11.i, label %if.then12.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %land.lhs.true7.i, %if.end.i
  %typelt.0.ph.i = phi %union.tree_node* [ %187, %land.lhs.true7.i ], [ null, %if.end.i ]
  %parm.073.i = load %union.tree_node** @last_function_parms, align 8
  %tobool1674.i = icmp eq %union.tree_node* %parm.073.i, null
  br i1 %tobool1674.i, label %grokparms.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  br i1 %186, label %for.body.us.i, label %for.body.i

for.body.us.i:                                    ; preds = %for.body.lr.ph.i, %for.inc.us.i
  %parm.076.us.i = phi %union.tree_node* [ %parm.0.us.i, %for.inc.us.i ], [ %parm.073.i, %for.body.lr.ph.i ]
  %typelt.075.us.i = phi %union.tree_node* [ %typelt.1.us.i, %for.inc.us.i ], [ %typelt.0.ph.i, %for.body.lr.ph.i ]
  %code18.us.i = getelementptr inbounds %union.tree_node* %parm.076.us.i, i64 0, i32 0, i32 0, i32 2
  %bf.load19.us.i = load i32* %code18.us.i, align 8
  %bf.clear20.us.i = and i32 %bf.load19.us.i, 255
  %cmp21.us.i = icmp eq i32 %bf.clear20.us.i, 35
  br i1 %cmp21.us.i, label %if.then22.us.i, label %for.inc.us.i

if.then22.us.i:                                   ; preds = %for.body.us.i
  %value24.us.i = getelementptr inbounds %union.tree_node* %typelt.075.us.i, i64 0, i32 0, i32 2
  %196 = bitcast i32* %value24.us.i to %union.tree_node**
  %197 = load %union.tree_node** %196, align 8, !tbaa !50
  %198 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp25.us.i = icmp eq %union.tree_node* %197, %198
  br i1 %cmp25.us.i, label %for.inc.us.i, label %if.end27.us.i

if.end27.us.i:                                    ; preds = %if.then22.us.i
  %size.us.i = getelementptr inbounds %union.tree_node* %197, i64 0, i32 0, i32 2
  %199 = bitcast i32* %size.us.i to %union.tree_node**
  %200 = load %union.tree_node** %199, align 8, !tbaa !80
  %cmp29.us.i = icmp eq %union.tree_node* %200, null
  br i1 %cmp29.us.i, label %land.lhs.true32.us.i, label %if.end46.us.i

land.lhs.true32.us.i:                             ; preds = %if.end27.us.i
  %name.us.i = getelementptr inbounds %union.tree_node* %parm.076.us.i, i64 0, i32 0, i32 8
  %201 = load %union.tree_node** %name.us.i, align 8, !tbaa !48
  %cmp33.us.i = icmp eq %union.tree_node* %201, null
  br i1 %cmp33.us.i, label %if.end38.thread72.us.i, label %if.end38.thread.us.i

if.end38.thread.us.i:                             ; preds = %land.lhs.true32.us.i
  %id.us.i = getelementptr inbounds %union.tree_node* %201, i64 0, i32 0, i32 1
  %202 = getelementptr inbounds i8** %id.us.i, i64 1
  %203 = load i8** %202, align 8, !tbaa !21
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([35 x i8]* @.str245, i64 0, i64 0), i8* %203) #5
  br label %if.then40.us.i

if.end38.thread72.us.i:                           ; preds = %land.lhs.true32.us.i
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str322, i64 0, i64 0)) #5
  br label %if.then40.us.i

if.then40.us.i:                                   ; preds = %if.end38.thread72.us.i, %if.end38.thread.us.i
  %204 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %204, %union.tree_node** %196, align 8, !tbaa !50
  %205 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %type44.us.i = getelementptr inbounds %union.tree_node* %parm.076.us.i, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %205, %union.tree_node** %type44.us.i, align 8, !tbaa !23
  br label %if.end46.us.i

if.end46.us.i:                                    ; preds = %if.then40.us.i, %if.end27.us.i
  %chain48.us.i = getelementptr inbounds %union.tree_node* %typelt.075.us.i, i64 0, i32 0, i32 0, i32 0
  %206 = load %union.tree_node** %chain48.us.i, align 8, !tbaa !29
  br label %for.inc.us.i

for.inc.us.i:                                     ; preds = %if.end46.us.i, %if.then22.us.i, %for.body.us.i
  %typelt.1.us.i = phi %union.tree_node* [ %typelt.075.us.i, %if.then22.us.i ], [ %206, %if.end46.us.i ], [ %typelt.075.us.i, %for.body.us.i ]
  %chain51.us.i = getelementptr inbounds %union.tree_node* %parm.076.us.i, i64 0, i32 0, i32 0, i32 0
  %parm.0.us.i = load %union.tree_node** %chain51.us.i, align 8
  %tobool16.us.i = icmp eq %union.tree_node* %parm.0.us.i, null
  br i1 %tobool16.us.i, label %grokparms.exit, label %for.body.us.i

if.then12.i:                                      ; preds = %land.lhs.true7.i
  br i1 %186, label %if.end15.i, label %if.then14.i

if.then14.i:                                      ; preds = %if.then12.i
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([56 x i8]* @.str321, i64 0, i64 0)) #5
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then14.i, %if.then12.i
  store %union.tree_node* %187, %union.tree_node** @last_function_parms, align 8, !tbaa !1
  br label %grokparms.exit

for.body.i:                                       ; preds = %for.body.lr.ph.i, %for.inc.i
  %parm.076.i = phi %union.tree_node* [ %parm.0.i, %for.inc.i ], [ %parm.073.i, %for.body.lr.ph.i ]
  %typelt.075.i = phi %union.tree_node* [ %typelt.1.i, %for.inc.i ], [ %typelt.0.ph.i, %for.body.lr.ph.i ]
  %code18.i = getelementptr inbounds %union.tree_node* %parm.076.i, i64 0, i32 0, i32 0, i32 2
  %bf.load19.i = load i32* %code18.i, align 8
  %bf.clear20.i = and i32 %bf.load19.i, 255
  %cmp21.i = icmp eq i32 %bf.clear20.i, 35
  br i1 %cmp21.i, label %if.then22.i, label %for.inc.i

if.then22.i:                                      ; preds = %for.body.i
  %value24.i = getelementptr inbounds %union.tree_node* %typelt.075.i, i64 0, i32 0, i32 2
  %207 = bitcast i32* %value24.i to %union.tree_node**
  %208 = load %union.tree_node** %207, align 8, !tbaa !50
  %209 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp25.i = icmp eq %union.tree_node* %208, %209
  br i1 %cmp25.i, label %for.inc.i, label %if.end27.i

if.end27.i:                                       ; preds = %if.then22.i
  %size.i = getelementptr inbounds %union.tree_node* %208, i64 0, i32 0, i32 2
  %210 = bitcast i32* %size.i to %union.tree_node**
  %211 = load %union.tree_node** %210, align 8, !tbaa !80
  %cmp29.i = icmp eq %union.tree_node* %211, null
  br i1 %cmp29.i, label %if.end38.i, label %if.end46.i

if.end38.i:                                       ; preds = %if.end27.i
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str322, i64 0, i64 0)) #5
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.end38.i, %if.end27.i
  %chain48.i = getelementptr inbounds %union.tree_node* %typelt.075.i, i64 0, i32 0, i32 0, i32 0
  %212 = load %union.tree_node** %chain48.i, align 8, !tbaa !29
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end46.i, %if.then22.i, %for.body.i
  %typelt.1.i = phi %union.tree_node* [ %typelt.075.i, %if.then22.i ], [ %212, %if.end46.i ], [ %typelt.075.i, %for.body.i ]
  %chain51.i = getelementptr inbounds %union.tree_node* %parm.076.i, i64 0, i32 0, i32 0, i32 0
  %parm.0.i = load %union.tree_node** %chain51.i, align 8
  %tobool16.i = icmp eq %union.tree_node* %parm.0.i, null
  br i1 %tobool16.i, label %grokparms.exit, label %for.body.i

grokparms.exit:                                   ; preds = %for.inc.i, %for.inc.us.i, %for.cond.preheader.i, %if.end15.i
  %retval.0.i = phi %union.tree_node* [ null, %if.end15.i ], [ %187, %for.cond.preheader.i ], [ %187, %for.inc.us.i ], [ %187, %for.inc.i ]
  %tobool1014 = icmp eq i32 %type_quals.02269, 0
  %.pre2350 = load %union.tree_node** %type, align 8, !tbaa !1
  br i1 %tobool1014, label %if.end1043, label %if.then1015

if.then1015:                                      ; preds = %grokparms.exit
  %code1017 = getelementptr inbounds %union.tree_node* %.pre2350, i64 0, i32 0, i32 0, i32 2
  %bf.load1018 = load i32* %code1017, align 8
  %bf.clear1019 = and i32 %bf.load1018, 255
  %cmp1020 = icmp eq i32 %bf.clear1019, 5
  %213 = load i32* @pedantic, align 4
  %tobool1023 = icmp ne i32 %213, 0
  %or.cond1846 = and i1 %cmp1020, %tobool1023
  %or.cond1846.not = xor i1 %or.cond1846, true
  %214 = load i32* @in_system_header, align 4
  %tobool1025 = icmp ne i32 %214, 0
  %or.cond1848 = or i1 %tobool1025, %or.cond1846.not
  br i1 %or.cond1848, label %if.else1027, label %if.then1026

if.then1026:                                      ; preds = %if.then1015
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([50 x i8]* @.str307, i64 0, i64 0)) #5
  br label %if.end1041

if.else1027:                                      ; preds = %if.then1015
  %215 = load i32* @extra_warnings, align 4, !tbaa !5
  %tobool1028 = icmp eq i32 %215, 0
  %cmp1037 = icmp eq i32 %type_quals.02269, 2
  %or.cond1850 = and i1 %cmp1020, %cmp1037
  %or.cond2197 = or i1 %tobool1028, %or.cond1850
  br i1 %or.cond2197, label %if.end1041, label %if.then1039

if.then1039:                                      ; preds = %if.else1027
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([48 x i8]* @.str308, i64 0, i64 0)) #5
  br label %if.end1041

if.end1041:                                       ; preds = %if.else1027, %if.then1039, %if.then1026
  %216 = load %union.tree_node** %type, align 8, !tbaa !1
  %call1042 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %216, i32 %type_quals.02269) #5
  store %union.tree_node* %call1042, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1043

if.end1043:                                       ; preds = %grokparms.exit, %if.end1041
  %217 = phi %union.tree_node* [ %call1042, %if.end1041 ], [ %.pre2350, %grokparms.exit ]
  %call1044 = call %union.tree_node* @build_function_type(%union.tree_node* %217, %union.tree_node* %retval.0.i) #5
  store %union.tree_node* %call1044, %union.tree_node** %type, align 8, !tbaa !1
  %arrayidx1047 = bitcast i32* %operands998 to %union.tree_node**
  %218 = load %union.tree_node** %arrayidx1047, align 8, !tbaa !1
  %link.02258 = load %union.tree_node** @last_function_parm_tags, align 8
  %tobool10492259 = icmp eq %union.tree_node* %link.02258, null
  br i1 %tobool10492259, label %while.cond641.backedge, label %for.body1050

for.body1050:                                     ; preds = %if.end1043, %for.body1050.for.body1050_crit_edge
  %219 = phi %union.tree_node* [ %.pre2351, %for.body1050.for.body1050_crit_edge ], [ %call1044, %if.end1043 ]
  %link.02260 = phi %union.tree_node* [ %link.0, %for.body1050.for.body1050_crit_edge ], [ %link.02258, %if.end1043 ]
  %value1052 = getelementptr inbounds %union.tree_node* %link.02260, i64 0, i32 0, i32 2
  %220 = bitcast i32* %value1052 to %union.tree_node**
  %221 = load %union.tree_node** %220, align 8, !tbaa !50
  %context = getelementptr inbounds %union.tree_node* %221, i64 0, i32 0, i32 17
  %.c = bitcast %union.tree_node* %219 to %struct.rtx_def*
  store %struct.rtx_def* %.c, %struct.rtx_def** %context, align 8, !tbaa !52
  %chain1056 = getelementptr inbounds %union.tree_node* %link.02260, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain1056, align 8
  %tobool1049 = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool1049, label %while.cond641.backedge, label %for.body1050.for.body1050_crit_edge

for.body1050.for.body1050_crit_edge:              ; preds = %for.body1050
  %.pre2351 = load %union.tree_node** %type, align 8, !tbaa !1
  br label %for.body1050

if.then1065:                                      ; preds = %if.end665
  %222 = load i32* @pedantic, align 4, !tbaa !5
  %tobool1066 = icmp eq i32 %222, 0
  br i1 %tobool1066, label %if.end1077, label %land.lhs.true1067

land.lhs.true1067:                                ; preds = %if.then1065
  %223 = load %union.tree_node** %type, align 8, !tbaa !1
  %code1069 = getelementptr inbounds %union.tree_node* %223, i64 0, i32 0, i32 0, i32 2
  %bf.load1070 = load i32* %code1069, align 8
  %bf.clear1071 = and i32 %bf.load1070, 255
  %cmp1072 = icmp eq i32 %bf.clear1071, 23
  %tobool1075 = icmp ne i32 %type_quals.02269, 0
  %or.cond1852 = and i1 %cmp1072, %tobool1075
  br i1 %or.cond1852, label %if.then1076, label %if.end1077

if.then1076:                                      ; preds = %land.lhs.true1067
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str309, i64 0, i64 0)) #5
  br label %if.end1077

if.end1077:                                       ; preds = %if.then1065, %if.then1076, %land.lhs.true1067
  %tobool1078 = icmp eq i32 %type_quals.02269, 0
  %.pre2352 = load %union.tree_node** %type, align 8, !tbaa !1
  br i1 %tobool1078, label %if.end1081, label %if.then1079

if.then1079:                                      ; preds = %if.end1077
  %call1080 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %.pre2352, i32 %type_quals.02269) #5
  store %union.tree_node* %call1080, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1081

if.end1081:                                       ; preds = %if.end1077, %if.then1079
  %224 = phi %union.tree_node* [ %call1080, %if.then1079 ], [ %.pre2352, %if.end1077 ]
  %call1082 = call %union.tree_node* @build_pointer_type(%union.tree_node* %224) #5
  store %union.tree_node* %call1082, %union.tree_node** %type, align 8, !tbaa !1
  %type1084 = getelementptr inbounds %union.tree_node* %declarator.addr.02271, i64 0, i32 0, i32 0, i32 1
  %225 = load %union.tree_node** %type1084, align 8, !tbaa !23
  %tobool1085 = icmp eq %union.tree_node* %225, null
  br i1 %tobool1085, label %if.end1165, label %for.body1091

for.body1091:                                     ; preds = %if.end1081, %for.inc1132
  %erred.02253 = phi i32 [ %erred.1, %for.inc1132 ], [ 0, %if.end1081 ]
  %typemodlist.02252 = phi %union.tree_node* [ %230, %for.inc1132 ], [ %225, %if.end1081 ]
  %constp.02251 = phi i32 [ %constp.1, %for.inc1132 ], [ 0, %if.end1081 ]
  %restrictp.02250 = phi i32 [ %restrictp.1, %for.inc1132 ], [ 0, %if.end1081 ]
  %volatilep.02249 = phi i32 [ %volatilep.1, %for.inc1132 ], [ 0, %if.end1081 ]
  %value1093 = getelementptr inbounds %union.tree_node* %typemodlist.02252, i64 0, i32 0, i32 2
  %226 = bitcast i32* %value1093 to %union.tree_node**
  %227 = load %union.tree_node** %226, align 8, !tbaa !50
  %lang_flag_01095 = getelementptr inbounds %union.tree_node* %227, i64 0, i32 0, i32 0, i32 2
  %bf.load1096 = load i32* %lang_flag_01095, align 8
  %bf.clear1098 = and i32 %bf.load1096, 16777216
  %tobool1099 = icmp eq i32 %bf.clear1098, 0
  br i1 %tobool1099, label %if.else1129, label %if.then1100

if.then1100:                                      ; preds = %for.body1091
  %node1101 = getelementptr inbounds %union.tree_node* %227, i64 0, i32 0, i32 1
  %228 = bitcast i8** %node1101 to %struct.cpp_hashnode*
  %rid_code1102 = getelementptr inbounds %struct.cpp_hashnode* %228, i64 0, i32 3
  %229 = load i8* %rid_code1102, align 1, !tbaa !20
  switch i8 %229, label %if.else1124 [
    i8 3, label %if.then1106
    i8 9, label %if.then1114
    i8 12, label %if.then1122
  ]

if.then1106:                                      ; preds = %if.then1100
  %inc1107 = add nsw i32 %constp.02251, 1
  br label %for.inc1132

if.then1114:                                      ; preds = %if.then1100
  %inc1115 = add nsw i32 %volatilep.02249, 1
  br label %for.inc1132

if.then1122:                                      ; preds = %if.then1100
  %inc1123 = add nsw i32 %restrictp.02250, 1
  br label %for.inc1132

if.else1124:                                      ; preds = %if.then1100
  %inc1125 = add nsw i32 %erred.02253, 1
  br label %for.inc1132

if.else1129:                                      ; preds = %for.body1091
  %inc1130 = add nsw i32 %erred.02253, 1
  br label %for.inc1132

for.inc1132:                                      ; preds = %if.else1129, %if.then1114, %if.else1124, %if.then1122, %if.then1106
  %volatilep.1 = phi i32 [ %volatilep.02249, %if.then1106 ], [ %inc1115, %if.then1114 ], [ %volatilep.02249, %if.then1122 ], [ %volatilep.02249, %if.else1124 ], [ %volatilep.02249, %if.else1129 ]
  %restrictp.1 = phi i32 [ %restrictp.02250, %if.then1106 ], [ %restrictp.02250, %if.then1114 ], [ %inc1123, %if.then1122 ], [ %restrictp.02250, %if.else1124 ], [ %restrictp.02250, %if.else1129 ]
  %constp.1 = phi i32 [ %inc1107, %if.then1106 ], [ %constp.02251, %if.then1114 ], [ %constp.02251, %if.then1122 ], [ %constp.02251, %if.else1124 ], [ %constp.02251, %if.else1129 ]
  %erred.1 = phi i32 [ %erred.02253, %if.then1106 ], [ %erred.02253, %if.then1114 ], [ %erred.02253, %if.then1122 ], [ %inc1125, %if.else1124 ], [ %inc1130, %if.else1129 ]
  %chain1134 = getelementptr inbounds %union.tree_node* %typemodlist.02252, i64 0, i32 0, i32 0, i32 0
  %230 = load %union.tree_node** %chain1134, align 8, !tbaa !29
  %tobool1090 = icmp eq %union.tree_node* %230, null
  br i1 %tobool1090, label %for.end1135, label %for.body1091

for.end1135:                                      ; preds = %for.inc1132
  %tobool1136 = icmp eq i32 %erred.1, 0
  br i1 %tobool1136, label %if.end1138, label %if.then1137

if.then1137:                                      ; preds = %for.end1135
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str310, i64 0, i64 0)) #5
  br label %if.end1138

if.end1138:                                       ; preds = %for.end1135, %if.then1137
  %cmp1139 = icmp slt i32 %constp.1, 2
  %231 = load i32* @flag_isoc99, align 4
  %tobool1142 = icmp ne i32 %231, 0
  %or.cond1854 = or i1 %cmp1139, %tobool1142
  br i1 %or.cond1854, label %if.end1144, label %if.then1143

if.then1143:                                      ; preds = %if.end1138
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([18 x i8]* @.str280, i64 0, i64 0)) #5
  %.pre2353 = load i32* @flag_isoc99, align 4
  br label %if.end1144

if.end1144:                                       ; preds = %if.end1138, %if.then1143
  %232 = phi i32 [ %231, %if.end1138 ], [ %.pre2353, %if.then1143 ]
  %cmp1145 = icmp slt i32 %volatilep.1, 2
  %tobool1148 = icmp ne i32 %232, 0
  %or.cond1856 = or i1 %cmp1145, %tobool1148
  br i1 %or.cond1856, label %if.end1150, label %if.then1149

if.then1149:                                      ; preds = %if.end1144
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([21 x i8]* @.str282, i64 0, i64 0)) #5
  %.pre2354 = load i32* @flag_isoc99, align 4
  br label %if.end1150

if.end1150:                                       ; preds = %if.end1144, %if.then1149
  %233 = phi i32 [ %232, %if.end1144 ], [ %.pre2354, %if.then1149 ]
  %cmp1151 = icmp slt i32 %restrictp.1, 2
  %tobool1154 = icmp ne i32 %233, 0
  %or.cond1858 = or i1 %cmp1151, %tobool1154
  br i1 %or.cond1858, label %if.end1156, label %if.then1155

if.then1155:                                      ; preds = %if.end1150
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([21 x i8]* @.str281, i64 0, i64 0)) #5
  br label %if.end1156

if.end1156:                                       ; preds = %if.end1150, %if.then1155
  %tobool1157 = icmp ne i32 %constp.1, 0
  %cond1158 = zext i1 %tobool1157 to i32
  %tobool1159 = icmp ne i32 %restrictp.1, 0
  %cond1160 = select i1 %tobool1159, i32 4, i32 0
  %tobool1162 = icmp ne i32 %volatilep.1, 0
  %cond1163 = select i1 %tobool1162, i32 2, i32 0
  %or1161 = or i32 %cond1160, %cond1163
  %or1164 = or i32 %or1161, %cond1158
  br label %if.end1165

if.end1165:                                       ; preds = %if.end1081, %if.end1156
  %type_quals.1 = phi i32 [ %or1164, %if.end1156 ], [ 0, %if.end1081 ]
  %operands1167 = getelementptr inbounds %union.tree_node* %declarator.addr.02271, i64 0, i32 0, i32 2
  %arrayidx1168 = bitcast i32* %operands1167 to %union.tree_node**
  %234 = load %union.tree_node** %arrayidx1168, align 8, !tbaa !1
  br label %while.cond641.backedge

if.else1169:                                      ; preds = %if.end665
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str185, i64 0, i64 0), i32 4868, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.grokdeclarator, i64 0, i64 0)) #8
  unreachable

while.end1174:                                    ; preds = %land.end650, %land.end650.thread
  %235 = phi %union.tree_node* [ %120, %land.end650.thread ], [ %121, %land.end650 ]
  %declarator.addr.02225 = phi %union.tree_node* [ null, %land.end650.thread ], [ %declarator.addr.02271, %land.end650 ]
  %type_quals.02222 = phi i32 [ %type_quals.0.lcssa, %land.end650.thread ], [ %type_quals.02269, %land.end650 ]
  %returned_attrs.02219 = phi %union.tree_node* [ %returned_attrs.0.lcssa, %land.end650.thread ], [ %returned_attrs.02267, %land.end650 ]
  %array_ptr_quals.02216 = phi %union.tree_node* [ %array_ptr_quals.0.lcssa, %land.end650.thread ], [ %array_ptr_quals.02265, %land.end650 ]
  %size_varies.12213 = phi i32 [ %size_varies.1.lcssa, %land.end650.thread ], [ %size_varies.12264, %land.end650 ]
  %code1176 = getelementptr inbounds %union.tree_node* %235, i64 0, i32 0, i32 0, i32 2
  %bf.load1177 = load i32* %code1176, align 8
  %bf.clear1178 = and i32 %bf.load1177, 255
  %cmp1179 = icmp eq i32 %bf.clear1178, 18
  br i1 %cmp1179, label %land.lhs.true1181, label %if.end1196

land.lhs.true1181:                                ; preds = %while.end1174
  %size1183 = getelementptr inbounds %union.tree_node* %235, i64 0, i32 0, i32 2
  %236 = bitcast i32* %size1183 to %union.tree_node**
  %237 = load %union.tree_node** %236, align 8, !tbaa !80
  %cmp1184 = icmp eq %union.tree_node* %237, null
  br i1 %cmp1184, label %if.end1196, label %land.lhs.true1186

land.lhs.true1186:                                ; preds = %land.lhs.true1181
  %public_flag1190 = getelementptr inbounds %union.tree_node* %237, i64 0, i32 0, i32 0, i32 2
  %bf.load1191 = load i32* %public_flag1190, align 8
  %bf.clear1193 = and i32 %bf.load1191, 524288
  %tobool1194 = icmp eq i32 %bf.clear1193, 0
  br i1 %tobool1194, label %if.end1196, label %if.then1195

if.then1195:                                      ; preds = %land.lhs.true1186
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str302, i64 0, i64 0), i8* %.name.0) #5
  %238 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %238, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1196

if.end1196:                                       ; preds = %land.lhs.true1186, %land.lhs.true1181, %if.then1195, %while.end1174
  %239 = phi %union.tree_node* [ %235, %land.lhs.true1186 ], [ %235, %land.lhs.true1181 ], [ %238, %if.then1195 ], [ %235, %while.end1174 ]
  %and1197 = and i32 %specbits.5.ph, 64
  %tobool1198 = icmp eq i32 %and1197, 0
  br i1 %tobool1198, label %if.end1238, label %if.then1199

if.then1199:                                      ; preds = %if.end1196
  %240 = load i32* @pedantic, align 4, !tbaa !5
  %tobool1201 = icmp eq i32 %240, 0
  br i1 %tobool1201, label %if.end1212, label %land.lhs.true1202

land.lhs.true1202:                                ; preds = %if.then1199
  %code1204 = getelementptr inbounds %union.tree_node* %239, i64 0, i32 0, i32 0, i32 2
  %bf.load1205 = load i32* %code1204, align 8
  %bf.clear1206 = and i32 %bf.load1205, 255
  %cmp1207 = icmp eq i32 %bf.clear1206, 23
  %tobool1210 = icmp ne i32 %type_quals.02222, 0
  %or.cond1860 = and i1 %cmp1207, %tobool1210
  br i1 %or.cond1860, label %if.then1211, label %if.end1212

if.then1211:                                      ; preds = %land.lhs.true1202
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str309, i64 0, i64 0)) #5
  br label %if.end1212

if.end1212:                                       ; preds = %if.then1199, %if.then1211, %land.lhs.true1202
  %tobool1213 = icmp eq i32 %type_quals.02222, 0
  %.pre2345 = load %union.tree_node** %type, align 8, !tbaa !1
  br i1 %tobool1213, label %if.end1216, label %if.then1214

if.then1214:                                      ; preds = %if.end1212
  %call1215 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %.pre2345, i32 %type_quals.02222) #5
  store %union.tree_node* %call1215, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1216

if.end1216:                                       ; preds = %if.end1212, %if.then1214
  %241 = phi %union.tree_node* [ %call1215, %if.then1214 ], [ %.pre2345, %if.end1212 ]
  %call1217 = call %union.tree_node* @build_decl(i32 33, %union.tree_node* %declarator.addr.02225, %union.tree_node* %241) #5
  store %union.tree_node* %call1217, %union.tree_node** %decl1200, align 8, !tbaa !1
  %and1218 = and i32 %specbits.5.ph, 1024
  %tobool1219 = icmp eq i32 %and1218, 0
  br i1 %tobool1219, label %lor.lhs.false1220, label %if.then1230

lor.lhs.false1220:                                ; preds = %if.end1216
  %tobool1221 = icmp eq %union.tree_node* %typedef_decl.0.lcssa2375, null
  br i1 %tobool1221, label %if.end1236, label %land.lhs.true1222

land.lhs.true1222:                                ; preds = %lor.lhs.false1220
  %lang_flag_11224 = getelementptr inbounds %union.tree_node* %typedef_decl.0.lcssa2375, i64 0, i32 0, i32 5
  %242 = bitcast i48* %lang_flag_11224 to i64*
  %bf.load1225 = load i64* %242, align 8
  %bf.cast1228 = and i64 %bf.load1225, 274877906944
  %tobool1229 = icmp eq i64 %bf.cast1228, 0
  br i1 %tobool1229, label %if.end1236, label %if.then1230

if.then1230:                                      ; preds = %land.lhs.true1222, %if.end1216
  %lang_flag_11232 = getelementptr inbounds %union.tree_node* %call1217, i64 0, i32 0, i32 5
  %243 = bitcast i48* %lang_flag_11232 to i64*
  %bf.load1233 = load i64* %243, align 8
  %bf.set1235 = or i64 %bf.load1233, 274877906944
  store i64 %bf.set1235, i64* %243, align 8
  br label %if.end1236

if.end1236:                                       ; preds = %land.lhs.true1222, %lor.lhs.false1220, %if.then1230
  %call1237 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl1200, %union.tree_node* %returned_attrs.02219, i32 0) #5
  %244 = load %union.tree_node** %decl1200, align 8, !tbaa !1
  br label %return

if.end1238:                                       ; preds = %if.end1196
  %cmp1239 = icmp ne %union.tree_node* %239, null
  %or.cond1862 = and i1 %cmp1239, %tobool1602377
  br i1 %or.cond1862, label %land.lhs.true1244, label %if.end1274

land.lhs.true1244:                                ; preds = %if.end1238
  %code1246 = getelementptr inbounds %union.tree_node* %239, i64 0, i32 0, i32 0, i32 2
  %bf.load1247 = load i32* %code1246, align 8
  %bf.clear1248 = and i32 %bf.load1247, 255
  %cmp1249 = icmp eq i32 %bf.clear1248, 18
  br i1 %cmp1249, label %land.lhs.true1251, label %if.end1274

land.lhs.true1251:                                ; preds = %land.lhs.true1244
  %values = getelementptr inbounds %union.tree_node* %239, i64 0, i32 0, i32 1
  %245 = load i8** %values, align 8
  %cmp1253 = icmp eq i8* %245, null
  br i1 %cmp1253, label %land.lhs.true1255, label %if.end1274

land.lhs.true1255:                                ; preds = %land.lhs.true1251
  %246 = getelementptr inbounds %union.tree_node* %239, i64 0, i32 0, i32 15
  %247 = load %union.tree_node** %246, align 8, !tbaa !67
  %248 = getelementptr inbounds %union.tree_node* %.pr2358, i64 0, i32 0, i32 15
  %249 = load %union.tree_node** %248, align 8, !tbaa !67
  %cmp1260 = icmp eq %union.tree_node* %247, %249
  br i1 %cmp1260, label %if.then1262, label %if.end1274

if.then1262:                                      ; preds = %land.lhs.true1255
  %type1264 = getelementptr inbounds %union.tree_node* %239, i64 0, i32 0, i32 0, i32 1
  %250 = load %union.tree_node** %type1264, align 8, !tbaa !23
  %call1265 = call %union.tree_node* @build_array_type(%union.tree_node* %250, %union.tree_node* null) #5
  store %union.tree_node* %call1265, %union.tree_node** %type, align 8, !tbaa !1
  %tobool1266 = icmp eq i32 %size_varies.12213, 0
  br i1 %tobool1266, label %if.end1274, label %if.then1267

if.then1267:                                      ; preds = %if.then1262
  %type1268 = bitcast %union.tree_node* %call1265 to %struct.tree_type*
  %lang_flag_11269 = getelementptr inbounds %struct.tree_type* %type1268, i64 0, i32 6
  %bf.load1270 = load i32* %lang_flag_11269, align 4
  %bf.set1272 = or i32 %bf.load1270, 33554432
  store i32 %bf.set1272, i32* %lang_flag_11269, align 4
  br label %if.end1274

if.end1274:                                       ; preds = %if.then1262, %if.then1267, %land.lhs.true1255, %land.lhs.true1251, %land.lhs.true1244, %if.end1238
  %cmp1275 = icmp eq i32 %decl_context.addr.2, 5
  br i1 %cmp1275, label %if.then1277, label %if.end1295

if.then1277:                                      ; preds = %if.end1274
  %251 = load i32* @pedantic, align 4, !tbaa !5
  %tobool1278 = icmp eq i32 %251, 0
  br i1 %tobool1278, label %if.end1289, label %land.lhs.true1279

land.lhs.true1279:                                ; preds = %if.then1277
  %252 = load %union.tree_node** %type, align 8, !tbaa !1
  %code1281 = getelementptr inbounds %union.tree_node* %252, i64 0, i32 0, i32 0, i32 2
  %bf.load1282 = load i32* %code1281, align 8
  %bf.clear1283 = and i32 %bf.load1282, 255
  %cmp1284 = icmp eq i32 %bf.clear1283, 23
  %tobool1287 = icmp ne i32 %type_quals.02222, 0
  %or.cond1864 = and i1 %cmp1284, %tobool1287
  br i1 %or.cond1864, label %if.then1288, label %if.end1289

if.then1288:                                      ; preds = %land.lhs.true1279
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([47 x i8]* @.str311, i64 0, i64 0)) #5
  br label %if.end1289

if.end1289:                                       ; preds = %if.then1277, %if.then1288, %land.lhs.true1279
  %tobool1290 = icmp eq i32 %type_quals.02222, 0
  br i1 %tobool1290, label %if.end1293, label %if.then1291

if.then1291:                                      ; preds = %if.end1289
  %253 = load %union.tree_node** %type, align 8, !tbaa !1
  %call1292 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %253, i32 %type_quals.02222) #5
  store %union.tree_node* %call1292, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1293

if.end1293:                                       ; preds = %if.end1289, %if.then1291
  %call1294 = call %union.tree_node* @decl_attributes(%union.tree_node** %type, %union.tree_node* %returned_attrs.02219, i32 0) #5
  %254 = load %union.tree_node** %type, align 8, !tbaa !1
  br label %return

if.end1295:                                       ; preds = %if.end1274
  %255 = load %union.tree_node** %type, align 8, !tbaa !1
  %code1297 = getelementptr inbounds %union.tree_node* %255, i64 0, i32 0, i32 0, i32 2
  %bf.load1298 = load i32* %code1297, align 8
  %bf.clear1299 = and i32 %bf.load1298, 255
  %cmp1300 = icmp eq i32 %bf.clear1299, 5
  %cmp1303 = icmp ne i32 %decl_context.addr.2, 2
  %or.cond1866 = and i1 %cmp1300, %cmp1303
  br i1 %or.cond1866, label %land.lhs.true1305, label %if.end1325

land.lhs.true1305:                                ; preds = %if.end1295
  %cmp1306 = icmp eq i32 %decl_context.addr.2, 3
  br i1 %cmp1306, label %if.then1324, label %land.lhs.true1315

land.lhs.true1315:                                ; preds = %land.lhs.true1305
  %and1316 = and i32 %specbits.5.ph, 16
  %tobool1317 = icmp eq i32 %and1316, 0
  br i1 %tobool1317, label %lor.lhs.false1318, label %if.end1325

lor.lhs.false1318:                                ; preds = %land.lhs.true1315
  %256 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %257 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp1319 = icmp eq %struct.binding_level* %256, %257
  %and1322 = and i32 %specbits.5.ph, 33
  %tobool1323 = icmp eq i32 %and1322, 0
  %or.cond2199 = and i1 %cmp1319, %tobool1323
  br i1 %or.cond2199, label %if.end1325, label %if.then1324

if.then1324:                                      ; preds = %land.lhs.true1305, %lor.lhs.false1318
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str312, i64 0, i64 0), i8* %.name.0) #5
  %258 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  store %union.tree_node* %258, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1325

if.end1325:                                       ; preds = %lor.lhs.false1318, %land.lhs.true1315, %if.then1324, %if.end1295
  %259 = phi %union.tree_node* [ %255, %lor.lhs.false1318 ], [ %255, %land.lhs.true1315 ], [ %258, %if.then1324 ], [ %255, %if.end1295 ]
  %cmp1327 = icmp eq i32 %decl_context.addr.2, 2
  br i1 %cmp1327, label %if.then1329, label %if.else1456

if.then1329:                                      ; preds = %if.end1325
  %code1331 = getelementptr inbounds %union.tree_node* %259, i64 0, i32 0, i32 0, i32 2
  %bf.load1332 = load i32* %code1331, align 8
  %bf.clear1333 = and i32 %bf.load1332, 255
  switch i32 %bf.clear1333, label %if.else1429 [
    i32 18, label %if.then1336
    i32 23, label %if.then1418
  ]

if.then1336:                                      ; preds = %if.then1329
  %type1338 = getelementptr inbounds %union.tree_node* %259, i64 0, i32 0, i32 0, i32 1
  %260 = load %union.tree_node** %type1338, align 8, !tbaa !23
  store %union.tree_node* %260, %union.tree_node** %type, align 8, !tbaa !1
  %tobool1339 = icmp eq i32 %type_quals.02222, 0
  br i1 %tobool1339, label %if.end1342, label %if.then1340

if.then1340:                                      ; preds = %if.then1336
  %call1341 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %260, i32 %type_quals.02222) #5
  store %union.tree_node* %call1341, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1342

if.end1342:                                       ; preds = %if.then1336, %if.then1340
  %261 = phi %union.tree_node* [ %260, %if.then1336 ], [ %call1341, %if.then1340 ]
  %call1343 = call %union.tree_node* @build_pointer_type(%union.tree_node* %261) #5
  store %union.tree_node* %call1343, %union.tree_node** %type, align 8, !tbaa !1
  %tobool1344 = icmp eq %union.tree_node* %array_ptr_quals.02216, null
  br i1 %tobool1344, label %if.end1435.thread, label %if.then1345

if.then1345:                                      ; preds = %if.end1342
  call void @split_specs_attrs(%union.tree_node* %array_ptr_quals.02216, %union.tree_node** %new_ptr_quals, %union.tree_node** %new_ptr_attrs) #5
  %262 = load %union.tree_node** %new_ptr_attrs, align 8, !tbaa !1
  %cmp1347 = icmp eq %union.tree_node* %262, null
  br i1 %cmp1347, label %for.cond1351thread-pre-split, label %if.then1349

if.then1349:                                      ; preds = %if.then1345
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([49 x i8]* @.str313, i64 0, i64 0)) #5
  br label %for.cond1351thread-pre-split

for.cond1351thread-pre-split:                     ; preds = %if.then1345, %if.then1349
  %.pr2205 = load %union.tree_node** %new_ptr_quals, align 8, !tbaa !1
  %tobool13522240 = icmp eq %union.tree_node* %.pr2205, null
  br i1 %tobool13522240, label %if.end1401, label %for.body1353

for.body1353:                                     ; preds = %for.cond1351thread-pre-split, %for.inc1395
  %erred1346.02244 = phi i32 [ %erred1346.1, %for.inc1395 ], [ 0, %for.cond1351thread-pre-split ]
  %constp.22243 = phi i32 [ %constp.3, %for.inc1395 ], [ 0, %for.cond1351thread-pre-split ]
  %restrictp.22242 = phi i32 [ %restrictp.3, %for.inc1395 ], [ 0, %for.cond1351thread-pre-split ]
  %volatilep.22241 = phi i32 [ %volatilep.3, %for.inc1395 ], [ 0, %for.cond1351thread-pre-split ]
  %263 = phi %union.tree_node* [ %268, %for.inc1395 ], [ %.pr2205, %for.cond1351thread-pre-split ]
  %value1356 = getelementptr inbounds %union.tree_node* %263, i64 0, i32 0, i32 2
  %264 = bitcast i32* %value1356 to %union.tree_node**
  %265 = load %union.tree_node** %264, align 8, !tbaa !50
  %lang_flag_01358 = getelementptr inbounds %union.tree_node* %265, i64 0, i32 0, i32 0, i32 2
  %bf.load1359 = load i32* %lang_flag_01358, align 8
  %bf.clear1361 = and i32 %bf.load1359, 16777216
  %tobool1362 = icmp eq i32 %bf.clear1361, 0
  br i1 %tobool1362, label %if.else1392, label %if.then1363

if.then1363:                                      ; preds = %for.body1353
  %node1364 = getelementptr inbounds %union.tree_node* %265, i64 0, i32 0, i32 1
  %266 = bitcast i8** %node1364 to %struct.cpp_hashnode*
  %rid_code1365 = getelementptr inbounds %struct.cpp_hashnode* %266, i64 0, i32 3
  %267 = load i8* %rid_code1365, align 1, !tbaa !20
  switch i8 %267, label %if.else1387 [
    i8 3, label %if.then1369
    i8 9, label %if.then1377
    i8 12, label %if.then1385
  ]

if.then1369:                                      ; preds = %if.then1363
  %inc1370 = add nsw i32 %constp.22243, 1
  br label %for.inc1395

if.then1377:                                      ; preds = %if.then1363
  %inc1378 = add nsw i32 %volatilep.22241, 1
  br label %for.inc1395

if.then1385:                                      ; preds = %if.then1363
  %inc1386 = add nsw i32 %restrictp.22242, 1
  br label %for.inc1395

if.else1387:                                      ; preds = %if.then1363
  %inc1388 = add nsw i32 %erred1346.02244, 1
  br label %for.inc1395

if.else1392:                                      ; preds = %for.body1353
  %inc1393 = add nsw i32 %erred1346.02244, 1
  br label %for.inc1395

for.inc1395:                                      ; preds = %if.else1392, %if.then1377, %if.else1387, %if.then1385, %if.then1369
  %volatilep.3 = phi i32 [ %volatilep.22241, %if.then1369 ], [ %inc1378, %if.then1377 ], [ %volatilep.22241, %if.then1385 ], [ %volatilep.22241, %if.else1387 ], [ %volatilep.22241, %if.else1392 ]
  %restrictp.3 = phi i32 [ %restrictp.22242, %if.then1369 ], [ %restrictp.22242, %if.then1377 ], [ %inc1386, %if.then1385 ], [ %restrictp.22242, %if.else1387 ], [ %restrictp.22242, %if.else1392 ]
  %constp.3 = phi i32 [ %inc1370, %if.then1369 ], [ %constp.22243, %if.then1377 ], [ %constp.22243, %if.then1385 ], [ %constp.22243, %if.else1387 ], [ %constp.22243, %if.else1392 ]
  %erred1346.1 = phi i32 [ %erred1346.02244, %if.then1369 ], [ %erred1346.02244, %if.then1377 ], [ %erred1346.02244, %if.then1385 ], [ %inc1388, %if.else1387 ], [ %inc1393, %if.else1392 ]
  %chain1397 = getelementptr inbounds %union.tree_node* %263, i64 0, i32 0, i32 0, i32 0
  %268 = load %union.tree_node** %chain1397, align 8, !tbaa !29
  store %union.tree_node* %268, %union.tree_node** %new_ptr_quals, align 8, !tbaa !1
  %tobool1352 = icmp eq %union.tree_node* %268, null
  br i1 %tobool1352, label %for.end1398, label %for.body1353

for.end1398:                                      ; preds = %for.inc1395
  %tobool1399 = icmp eq i32 %erred1346.1, 0
  br i1 %tobool1399, label %if.end1401, label %if.then1400

if.then1400:                                      ; preds = %for.end1398
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([46 x i8]* @.str314, i64 0, i64 0)) #5
  br label %if.end1401

if.end1401:                                       ; preds = %for.cond1351thread-pre-split, %for.end1398, %if.then1400
  %volatilep.2.lcssa2401 = phi i32 [ %volatilep.3, %for.end1398 ], [ %volatilep.3, %if.then1400 ], [ 0, %for.cond1351thread-pre-split ]
  %restrictp.2.lcssa2400 = phi i32 [ %restrictp.3, %for.end1398 ], [ %restrictp.3, %if.then1400 ], [ 0, %for.cond1351thread-pre-split ]
  %constp.2.lcssa2399 = phi i32 [ %constp.3, %for.end1398 ], [ %constp.3, %if.then1400 ], [ 0, %for.cond1351thread-pre-split ]
  %tobool1402 = icmp ne i32 %constp.2.lcssa2399, 0
  %cond1403 = zext i1 %tobool1402 to i32
  %tobool1404 = icmp ne i32 %restrictp.2.lcssa2400, 0
  %cond1405 = select i1 %tobool1404, i32 4, i32 0
  %tobool1407 = icmp ne i32 %volatilep.2.lcssa2401, 0
  %cond1408 = select i1 %tobool1407, i32 2, i32 0
  %or1406 = or i32 %cond1405, %cond1408
  %or1409 = or i32 %or1406, %cond1403
  %.pre2343 = load %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1435.thread

if.then1418:                                      ; preds = %if.then1329
  %269 = load i32* @pedantic, align 4, !tbaa !5
  %tobool1419 = icmp ne i32 %269, 0
  %tobool1421 = icmp ne i32 %type_quals.02222, 0
  %or.cond1868 = and i1 %tobool1419, %tobool1421
  br i1 %or.cond1868, label %if.then1422, label %if.end1423

if.then1422:                                      ; preds = %if.then1418
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str309, i64 0, i64 0)) #5
  br label %if.end1423

if.end1423:                                       ; preds = %if.then1422, %if.then1418
  %270 = load %union.tree_node** %type, align 8, !tbaa !1
  br i1 %tobool1421, label %if.then1425, label %if.end1427

if.then1425:                                      ; preds = %if.end1423
  %call1426 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %270, i32 %type_quals.02222) #5
  store %union.tree_node* %call1426, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1427

if.end1427:                                       ; preds = %if.end1423, %if.then1425
  %271 = phi %union.tree_node* [ %call1426, %if.then1425 ], [ %270, %if.end1423 ]
  %call1428 = call %union.tree_node* @build_pointer_type(%union.tree_node* %271) #5
  store %union.tree_node* %call1428, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1435

if.else1429:                                      ; preds = %if.then1329
  %tobool1430 = icmp eq i32 %type_quals.02222, 0
  br i1 %tobool1430, label %if.end1435, label %if.then1431

if.then1431:                                      ; preds = %if.else1429
  %call1432 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %259, i32 %type_quals.02222) #5
  store %union.tree_node* %call1432, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1435

if.end1435.thread:                                ; preds = %if.end1342, %if.end1401
  %.ph = phi %union.tree_node* [ %call1343, %if.end1342 ], [ %.pre2343, %if.end1401 ]
  %type_quals.3.ph = phi i32 [ 0, %if.end1342 ], [ %or1409, %if.end1401 ]
  %call14362402 = call %union.tree_node* @build_decl(i32 35, %union.tree_node* %declarator.addr.02225, %union.tree_node* %.ph) #5
  store %union.tree_node* %call14362402, %union.tree_node** %decl1326, align 8, !tbaa !1
  br label %if.end1444

if.end1435:                                       ; preds = %if.else1429, %if.end1427, %if.then1431
  %272 = phi %union.tree_node* [ %call1428, %if.end1427 ], [ %call1432, %if.then1431 ], [ %259, %if.else1429 ]
  %type_quals.3 = phi i32 [ 0, %if.end1427 ], [ %type_quals.02222, %if.then1431 ], [ 0, %if.else1429 ]
  %call1436 = call %union.tree_node* @build_decl(i32 35, %union.tree_node* %declarator.addr.02225, %union.tree_node* %272) #5
  store %union.tree_node* %call1436, %union.tree_node** %decl1326, align 8, !tbaa !1
  %tobool1437 = icmp eq i32 %size_varies.12213, 0
  br i1 %tobool1437, label %if.end1444, label %if.then1438

if.then1438:                                      ; preds = %if.end1435
  %lang_flag_01440 = getelementptr inbounds %union.tree_node* %call1436, i64 0, i32 0, i32 5
  %273 = bitcast i48* %lang_flag_01440 to i64*
  %bf.load1441 = load i64* %273, align 8
  %bf.set1443 = or i64 %bf.load1441, 137438953472
  store i64 %bf.set1443, i64* %273, align 8
  br label %if.end1444

if.end1444:                                       ; preds = %if.end1435.thread, %if.end1435, %if.then1438
  %type_quals.32404 = phi i32 [ %type_quals.3.ph, %if.end1435.thread ], [ %type_quals.3, %if.end1435 ], [ %type_quals.3, %if.then1438 ]
  %274 = phi %union.tree_node* [ %.ph, %if.end1435.thread ], [ %272, %if.end1435 ], [ %272, %if.then1438 ]
  %275 = load %union.tree_node** %type, align 8, !tbaa !1
  %276 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp1445 = icmp eq %union.tree_node* %275, %276
  br i1 %cmp1445, label %if.end1453, label %if.else1448

if.else1448:                                      ; preds = %if.end1444
  %call1449 = call %union.tree_node* @simple_type_promotes_to(%union.tree_node* %275) #5
  %tobool1450 = icmp eq %union.tree_node* %call1449, null
  %277 = load %union.tree_node** %type, align 8, !tbaa !1
  %.call1449 = select i1 %tobool1450, %union.tree_node* %277, %union.tree_node* %call1449
  br label %if.end1453

if.end1453:                                       ; preds = %if.else1448, %if.end1444
  %promoted_type.0 = phi %union.tree_node* [ %275, %if.end1444 ], [ %.call1449, %if.else1448 ]
  %278 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %initial = getelementptr inbounds %union.tree_node* %278, i64 0, i32 0, i32 12
  store %union.tree_node* %promoted_type.0, %union.tree_node** %initial, align 8, !tbaa !40
  %279 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %result = getelementptr inbounds %union.tree_node* %279, i64 0, i32 0, i32 11
  store %union.tree_node* %274, %union.tree_node** %result, align 8, !tbaa !75
  br label %if.end1765

if.else1456:                                      ; preds = %if.end1325
  %cmp1457 = icmp eq i32 %decl_context.addr.2, 3
  %code1461 = getelementptr inbounds %union.tree_node* %259, i64 0, i32 0, i32 0, i32 2
  %bf.load1462 = load i32* %code1461, align 8
  %bf.clear1463 = and i32 %bf.load1462, 255
  %cmp1464 = icmp eq i32 %bf.clear1463, 23
  br i1 %cmp1457, label %if.then1459, label %if.else1521

if.then1459:                                      ; preds = %if.else1456
  br i1 %cmp1464, label %if.then1466, label %if.else1468

if.then1466:                                      ; preds = %if.then1459
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([34 x i8]* @.str315, i64 0, i64 0), i8* %.name.0) #5
  %280 = load %union.tree_node** %type, align 8, !tbaa !1
  %call1467 = call %union.tree_node* @build_pointer_type(%union.tree_node* %280) #5
  store %union.tree_node* %call1467, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1491

if.else1468:                                      ; preds = %if.then1459
  switch i32 %bf.clear1463, label %cond.end [
    i32 0, label %if.end1491
    i32 18, label %cond.true
  ]

cond.true:                                        ; preds = %if.else1468
  %type1483 = getelementptr inbounds %union.tree_node* %259, i64 0, i32 0, i32 0, i32 1
  %281 = load %union.tree_node** %type1483, align 8, !tbaa !23
  br label %cond.end

cond.end:                                         ; preds = %if.else1468, %cond.true
  %cond1484 = phi %union.tree_node* [ %281, %cond.true ], [ %259, %if.else1468 ]
  %size1486 = getelementptr inbounds %union.tree_node* %cond1484, i64 0, i32 0, i32 2
  %282 = bitcast i32* %size1486 to %union.tree_node**
  %283 = load %union.tree_node** %282, align 8, !tbaa !80
  %cmp1487 = icmp eq %union.tree_node* %283, null
  br i1 %cmp1487, label %if.then1489, label %if.end1491

if.then1489:                                      ; preds = %cond.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str316, i64 0, i64 0), i8* %.name.0) #5
  %284 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %284, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1491

if.end1491:                                       ; preds = %if.else1468, %cond.end, %if.then1489, %if.then1466
  %285 = phi %union.tree_node* [ %259, %if.else1468 ], [ %259, %cond.end ], [ %284, %if.then1489 ], [ %call1467, %if.then1466 ]
  %code1493 = getelementptr inbounds %union.tree_node* %285, i64 0, i32 0, i32 0, i32 2
  %bf.load1494 = load i32* %code1493, align 8
  %bf.clear1495 = and i32 %bf.load1494, 255
  %cmp1496 = icmp eq i32 %bf.clear1495, 18
  %tobool1499 = icmp ne i32 %type_quals.02222, 0
  %or.cond1870 = and i1 %cmp1496, %tobool1499
  br i1 %or.cond1870, label %if.then1500, label %if.end1507

if.then1500:                                      ; preds = %if.end1491
  %type1502 = getelementptr inbounds %union.tree_node* %285, i64 0, i32 0, i32 0, i32 1
  %286 = load %union.tree_node** %type1502, align 8, !tbaa !23
  %call1503 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %286, i32 %type_quals.02222) #5
  %287 = load %union.tree_node** %type, align 8, !tbaa !1
  %values1505 = getelementptr inbounds %union.tree_node* %287, i64 0, i32 0, i32 1
  %288 = load i8** %values1505, align 8
  %289 = bitcast i8* %288 to %union.tree_node*
  %call1506 = call %union.tree_node* @build_array_type(%union.tree_node* %call1503, %union.tree_node* %289) #5
  store %union.tree_node* %call1506, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1507

if.end1507:                                       ; preds = %if.then1500, %if.end1491
  %290 = phi %union.tree_node* [ %call1506, %if.then1500 ], [ %285, %if.end1491 ]
  %call1508 = call %union.tree_node* @build_decl(i32 37, %union.tree_node* %declarator.addr.02225, %union.tree_node* %290) #5
  store %union.tree_node* %call1508, %union.tree_node** %decl1326, align 8, !tbaa !1
  %non_addressable = getelementptr inbounds %union.tree_node* %call1508, i64 0, i32 0, i32 5
  %291 = bitcast i48* %non_addressable to i64*
  %292 = zext i1 %cmp to i64
  %bf.load1510 = load i64* %291, align 8
  %bf.shl = shl nuw nsw i64 %292, 34
  %bf.clear1511 = and i64 %bf.load1510, -17179869185
  %bf.set1512 = or i64 %bf.clear1511, %bf.shl
  store i64 %bf.set1512, i64* %291, align 8
  %tobool1513 = icmp eq i32 %size_varies.12213, 0
  br i1 %tobool1513, label %if.end1765, label %if.then1514

if.then1514:                                      ; preds = %if.end1507
  %293 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %lang_flag_01516 = getelementptr inbounds %union.tree_node* %293, i64 0, i32 0, i32 5
  %294 = bitcast i48* %lang_flag_01516 to i64*
  %bf.load1517 = load i64* %294, align 8
  %bf.set1519 = or i64 %bf.load1517, 137438953472
  store i64 %bf.set1519, i64* %294, align 8
  br label %if.end1765

if.else1521:                                      ; preds = %if.else1456
  br i1 %cmp1464, label %if.then1528, label %if.else1656

if.then1528:                                      ; preds = %if.else1521
  %and1529 = and i32 %specbits.5.ph, 2048
  %tobool1530 = icmp eq i32 %and1529, 0
  br i1 %tobool1530, label %if.end1541, label %land.lhs.true1535

land.lhs.true1535:                                ; preds = %if.then1528
  %295 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %296 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp1531 = icmp eq %struct.binding_level* %295, %296
  %297 = load i32* @pedantic, align 4, !tbaa !5
  %tobool1536.not = icmp ne i32 %297, 0
  %brmerge2406 = or i1 %tobool1536.not, %cmp1531
  br i1 %brmerge2406, label %if.then1540, label %if.end1541

if.then1540:                                      ; preds = %land.lhs.true1535
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([40 x i8]* @.str317, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end1541

if.end1541:                                       ; preds = %land.lhs.true1535, %if.then1528, %if.then1540
  %298 = phi i1 [ %cmp1531, %if.then1540 ], [ true, %if.then1528 ], [ false, %land.lhs.true1535 ]
  %and1542 = and i32 %specbits.5.ph, 32
  %tobool1543 = icmp eq i32 %and1542, 0
  br i1 %tobool1543, label %if.end1545, label %if.then1544

if.then1544:                                      ; preds = %if.end1541
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str317, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end1545

if.end1545:                                       ; preds = %if.end1541, %if.then1544
  %299 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %300 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp1546 = icmp eq %struct.binding_level* %299, %300
  br i1 %cmp1546, label %if.end1554, label %land.lhs.true1548

land.lhs.true1548:                                ; preds = %if.end1545
  %and1549 = and i32 %specbits.5.ph, 257
  %tobool1550 = icmp ne i32 %and1549, 0
  %301 = load i32* @pedantic, align 4
  %tobool1552 = icmp ne i32 %301, 0
  %or.cond1872 = and i1 %tobool1550, %tobool1552
  br i1 %or.cond1872, label %if.then1553, label %if.end1554

if.then1553:                                      ; preds = %land.lhs.true1548
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([40 x i8]* @.str317, i64 0, i64 0), i8* %.name.0) #5
  br label %if.end1554

if.end1554:                                       ; preds = %if.end1545, %if.then1553, %land.lhs.true1548
  %302 = load %union.tree_node** %type, align 8, !tbaa !1
  %call1555 = call %union.tree_node* @build_decl(i32 30, %union.tree_node* %declarator.addr.02225, %union.tree_node* %302) #5
  store %union.tree_node* %call1555, %union.tree_node** %decl1326, align 8, !tbaa !1
  %call1556 = call %union.tree_node* @build_decl_attribute_variant(%union.tree_node* %call1555, %union.tree_node* %decl_attr.0.lcssa2370) #5
  store %union.tree_node* %call1556, %union.tree_node** %decl1326, align 8, !tbaa !1
  %call1557 = call i8* @ggc_alloc_cleared(i64 16) #5
  %303 = bitcast i8* %call1557 to %struct.lang_decl*
  %304 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %lang_specific = getelementptr inbounds %union.tree_node* %304, i64 0, i32 0, i32 24
  store %struct.lang_decl* %303, %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  %305 = load i32* @pedantic, align 4, !tbaa !5
  %tobool1559 = icmp ne i32 %305, 0
  %tobool1561 = icmp ne i32 %type_quals.02222, 0
  %or.cond1874 = and i1 %tobool1559, %tobool1561
  br i1 %or.cond1874, label %land.lhs.true1562, label %if.end1570

land.lhs.true1562:                                ; preds = %if.end1554
  %306 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %in_system_header_flag = getelementptr inbounds %union.tree_node* %306, i64 0, i32 0, i32 5
  %307 = bitcast i48* %in_system_header_flag to i64*
  %bf.load1564 = load i64* %307, align 8
  %bf.cast1567 = and i64 %bf.load1564, 65536
  %tobool1568 = icmp eq i64 %bf.cast1567, 0
  br i1 %tobool1568, label %if.then1569, label %if.end1570

if.then1569:                                      ; preds = %land.lhs.true1562
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([39 x i8]* @.str309, i64 0, i64 0)) #5
  br label %if.end1570

if.end1570:                                       ; preds = %land.lhs.true1562, %if.then1569, %if.end1554
  %and1571 = and i32 %type_quals.02222, 2
  %tobool1572 = icmp eq i32 %and1571, 0
  br i1 %tobool1572, label %if.end1585, label %land.lhs.true1573

land.lhs.true1573:                                ; preds = %if.end1570
  %308 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %type1575 = getelementptr inbounds %union.tree_node* %308, i64 0, i32 0, i32 0, i32 1
  %309 = load %union.tree_node** %type1575, align 8, !tbaa !23
  %type1577 = getelementptr inbounds %union.tree_node* %309, i64 0, i32 0, i32 0, i32 1
  %310 = load %union.tree_node** %type1577, align 8, !tbaa !23
  %code1579 = getelementptr inbounds %union.tree_node* %310, i64 0, i32 0, i32 0, i32 2
  %bf.load1580 = load i32* %code1579, align 8
  %bf.clear1581 = and i32 %bf.load1580, 255
  %cmp1582 = icmp eq i32 %bf.clear1581, 5
  br i1 %cmp1582, label %if.end1585, label %if.then1584

if.then1584:                                      ; preds = %land.lhs.true1573
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([43 x i8]* @.str318, i64 0, i64 0)) #5
  br label %if.end1585

if.end1585:                                       ; preds = %if.end1570, %if.then1584, %land.lhs.true1573
  br i1 %298, label %if.then1587, label %if.end1592

if.then1587:                                      ; preds = %if.end1585
  %311 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %external_flag = getelementptr inbounds %union.tree_node* %311, i64 0, i32 0, i32 5
  %312 = bitcast i48* %external_flag to i64*
  %bf.load1589 = load i64* %312, align 8
  %bf.set1591 = or i64 %bf.load1589, 256
  store i64 %bf.set1591, i64* %312, align 8
  br label %if.end1592

if.end1592:                                       ; preds = %if.then1587, %if.end1585
  %and1593 = and i32 %specbits.5.ph, 2049
  %lnot1595 = icmp eq i32 %and1593, 0
  %lnot.ext1596 = zext i1 %lnot1595 to i32
  %313 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %public_flag1598 = getelementptr inbounds %union.tree_node* %313, i64 0, i32 0, i32 0, i32 2
  %bf.load1599 = load i32* %public_flag1598, align 8
  %bf.shl1601 = shl nuw nsw i32 %lnot.ext1596, 19
  %bf.clear1602 = and i32 %bf.load1599, -524289
  %bf.set1603 = or i32 %bf.clear1602, %bf.shl1601
  store i32 %bf.set1603, i32* %public_flag1598, align 8
  %tobool1604 = icmp eq i32 %defaulted_int.0, 0
  br i1 %tobool1604, label %if.end1611, label %if.then1605

if.then1605:                                      ; preds = %if.end1592
  %314 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %lang_flag_11607 = getelementptr inbounds %union.tree_node* %314, i64 0, i32 0, i32 5
  %315 = bitcast i48* %lang_flag_11607 to i64*
  %bf.load1608 = load i64* %315, align 8
  %bf.set1610 = or i64 %bf.load1608, 274877906944
  store i64 %bf.set1610, i64* %315, align 8
  br label %if.end1611

if.end1611:                                       ; preds = %if.end1592, %if.then1605
  %316 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !1
  %cmp1612 = icmp eq %union.tree_node* %declarator.addr.02225, %316
  br i1 %cmp1612, label %if.then1614, label %if.else1618

if.then1614:                                      ; preds = %if.end1611
  br i1 %tobool468, label %if.then1616, label %if.end1765

if.then1616:                                      ; preds = %if.then1614
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([30 x i8]* @.str319, i64 0, i64 0)) #5
  br label %if.end1765

if.else1618:                                      ; preds = %if.end1611
  br i1 %tobool468, label %if.then1620, label %if.else1637

if.then1620:                                      ; preds = %if.else1618
  %317 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %lang_specific1622 = getelementptr inbounds %union.tree_node* %317, i64 0, i32 0, i32 24
  %318 = load %struct.lang_decl** %lang_specific1622, align 8, !tbaa !58
  %319 = getelementptr inbounds %struct.lang_decl* %318, i64 0, i32 0, i32 0
  %bf.load1623 = load i8* %319, align 4
  %bf.set1625 = or i8 %bf.load1623, 1
  store i8 %bf.set1625, i8* %319, align 4
  %tobool1626 = icmp eq i32 %initialized, 0
  br i1 %tobool1626, label %if.end1765, label %if.then1627

if.then1627:                                      ; preds = %if.then1620
  %320 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %inline_flag = getelementptr inbounds %union.tree_node* %320, i64 0, i32 0, i32 5
  %321 = bitcast i48* %inline_flag to i64*
  %bf.load1629 = load i64* %321, align 8
  %bf.set1631 = or i64 %bf.load1629, 2048
  store i64 %bf.set1631, i64* %321, align 8
  %and1632 = and i32 %specbits.5.ph, 16
  %tobool1633 = icmp eq i32 %and1632, 0
  br i1 %tobool1633, label %if.end1765, label %if.then1634

if.then1634:                                      ; preds = %if.then1627
  store i32 1, i32* @current_extern_inline, align 4, !tbaa !5
  br label %if.end1765

if.else1637:                                      ; preds = %if.else1618
  %322 = load i32* @flag_inline_trees, align 4, !tbaa !5
  %cmp1638 = icmp eq i32 %322, 2
  %tobool1641 = icmp ne i32 %initialized, 0
  %or.cond1876 = and i1 %cmp1638, %tobool1641
  br i1 %or.cond1876, label %if.then1642, label %if.end1765

if.then1642:                                      ; preds = %if.else1637
  %323 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %inline_flag1644 = getelementptr inbounds %union.tree_node* %323, i64 0, i32 0, i32 5
  %324 = bitcast i48* %inline_flag1644 to i64*
  %bf.load1645 = load i64* %324, align 8
  %bf.set1647 = or i64 %bf.load1645, 2048
  store i64 %bf.set1647, i64* %324, align 8
  %325 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %lang_specific1649 = getelementptr inbounds %union.tree_node* %325, i64 0, i32 0, i32 24
  %326 = load %struct.lang_decl** %lang_specific1649, align 8, !tbaa !58
  %327 = getelementptr inbounds %struct.lang_decl* %326, i64 0, i32 0, i32 0
  %bf.load1651 = load i8* %327, align 4
  %bf.clear1652 = and i8 %bf.load1651, -2
  store i8 %bf.clear1652, i8* %327, align 4
  br label %if.end1765

if.else1656:                                      ; preds = %if.else1521
  %tobool1658 = icmp eq i32 %initialized, 0
  br i1 %tobool1658, label %land.rhs1659, label %land.end1662

land.rhs1659:                                     ; preds = %if.else1656
  %and1660 = and i32 %specbits.5.ph, 16
  %tobool1661 = icmp ne i32 %and1660, 0
  br label %land.end1662

land.end1662:                                     ; preds = %if.else1656, %land.rhs1659
  %328 = phi i1 [ false, %if.else1656 ], [ %tobool1661, %land.rhs1659 ]
  %cmp1668 = icmp eq i32 %bf.clear1463, 18
  %tobool1671 = icmp ne i32 %type_quals.02222, 0
  %or.cond1878 = and i1 %cmp1668, %tobool1671
  br i1 %or.cond1878, label %if.then1672, label %if.else1682

if.then1672:                                      ; preds = %land.end1662
  %align = getelementptr inbounds %union.tree_node* %259, i64 0, i32 0, i32 7
  %329 = bitcast %union.tree_node** %align to i32*
  %330 = load i32* %329, align 4, !tbaa !89
  %type1675 = getelementptr inbounds %union.tree_node* %259, i64 0, i32 0, i32 0, i32 1
  %331 = load %union.tree_node** %type1675, align 8, !tbaa !23
  %call1676 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %331, i32 %type_quals.02222) #5
  %332 = load %union.tree_node** %type, align 8, !tbaa !1
  %values1678 = getelementptr inbounds %union.tree_node* %332, i64 0, i32 0, i32 1
  %333 = load i8** %values1678, align 8
  %334 = bitcast i8* %333 to %union.tree_node*
  %call1679 = call %union.tree_node* @build_array_type(%union.tree_node* %call1676, %union.tree_node* %334) #5
  store %union.tree_node* %call1679, %union.tree_node** %type, align 8, !tbaa !1
  %align1681 = getelementptr inbounds %union.tree_node* %call1679, i64 0, i32 0, i32 7
  %335 = bitcast %union.tree_node** %align1681 to i32*
  store i32 %330, i32* %335, align 4, !tbaa !89
  br label %if.end1687

if.else1682:                                      ; preds = %land.end1662
  br i1 %tobool1671, label %if.then1684, label %if.end1687

if.then1684:                                      ; preds = %if.else1682
  %call1685 = call %union.tree_node* @c_build_qualified_type(%union.tree_node* %259, i32 %type_quals.02222) #5
  store %union.tree_node* %call1685, %union.tree_node** %type, align 8, !tbaa !1
  br label %if.end1687

if.end1687:                                       ; preds = %if.else1682, %if.then1684, %if.then1672
  %336 = phi %union.tree_node* [ %259, %if.else1682 ], [ %call1685, %if.then1684 ], [ %call1679, %if.then1672 ]
  %call1688 = call %union.tree_node* @build_decl(i32 34, %union.tree_node* %declarator.addr.02225, %union.tree_node* %336) #5
  store %union.tree_node* %call1688, %union.tree_node** %decl1326, align 8, !tbaa !1
  %tobool1689 = icmp eq i32 %size_varies.12213, 0
  br i1 %tobool1689, label %if.end1696, label %if.then1690

if.then1690:                                      ; preds = %if.end1687
  %lang_flag_01692 = getelementptr inbounds %union.tree_node* %call1688, i64 0, i32 0, i32 5
  %337 = bitcast i48* %lang_flag_01692 to i64*
  %bf.load1693 = load i64* %337, align 8
  %bf.set1695 = or i64 %bf.load1693, 137438953472
  store i64 %bf.set1695, i64* %337, align 8
  br label %if.end1696

if.end1696:                                       ; preds = %if.end1687, %if.then1690
  br i1 %tobool468, label %if.then1698, label %if.end1699

if.then1698:                                      ; preds = %if.end1696
  %338 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %338, i8* getelementptr inbounds ([32 x i8]* @.str320, i64 0, i64 0)) #5
  br label %if.end1699

if.end1699:                                       ; preds = %if.then1698, %if.end1696
  %339 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %external_flag1701 = getelementptr inbounds %union.tree_node* %339, i64 0, i32 0, i32 5
  %340 = bitcast i48* %external_flag1701 to i64*
  %341 = zext i1 %328 to i64
  %bf.load1702 = load i64* %340, align 8
  %bf.shl1704 = shl nuw nsw i64 %341, 8
  %bf.clear1705 = and i64 %bf.load1702, -257
  %bf.set1706 = or i64 %bf.clear1705, %bf.shl1704
  store i64 %bf.set1706, i64* %340, align 8
  %342 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %343 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp1708 = icmp eq %struct.binding_level* %342, %343
  br i1 %cmp1708, label %if.then1710, label %if.else1738

if.then1710:                                      ; preds = %if.end1699
  %and1711 = and i32 %specbits.5.ph, 33
  %lnot1713 = icmp eq i32 %and1711, 0
  %lnot.ext1714 = zext i1 %lnot1713 to i32
  %344 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %public_flag1716 = getelementptr inbounds %union.tree_node* %344, i64 0, i32 0, i32 0, i32 2
  %bf.load1717 = load i32* %public_flag1716, align 8
  %bf.shl1719 = shl nuw nsw i32 %lnot.ext1714, 19
  %bf.clear1720 = and i32 %bf.load1717, -524289
  %bf.set1721 = or i32 %bf.clear1720, %bf.shl1719
  store i32 %bf.set1721, i32* %public_flag1716, align 8
  %345 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %external_flag1723 = getelementptr inbounds %union.tree_node* %345, i64 0, i32 0, i32 5
  %346 = bitcast i48* %external_flag1723 to i64*
  %bf.load1724 = load i64* %346, align 8
  %bf.cast1727 = lshr i64 %bf.load1724, 8
  %347 = xor i64 %bf.cast1727, 1
  %lnot.ext1730 = trunc i64 %347 to i32
  %static_flag1732 = getelementptr inbounds %union.tree_node* %345, i64 0, i32 0, i32 0, i32 2
  %bf.load1733 = load i32* %static_flag1732, align 8
  %bf.value1734 = shl i32 %lnot.ext1730, 18
  %bf.shl1735 = and i32 %bf.value1734, 262144
  %bf.clear1736 = and i32 %bf.load1733, -262145
  %bf.set1737 = or i32 %bf.shl1735, %bf.clear1736
  store i32 %bf.set1737, i32* %static_flag1732, align 8
  br label %if.end1765

if.else1738:                                      ; preds = %if.end1699
  %348 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %static_flag1743 = getelementptr inbounds %union.tree_node* %348, i64 0, i32 0, i32 0, i32 2
  %bf.load1744 = load i32* %static_flag1743, align 8
  %bf.value1745 = shl i32 %specbits.5.ph, 18
  %bf.shl1746 = and i32 %bf.value1745, 262144
  %bf.clear1747 = and i32 %bf.load1744, -262145
  %bf.set1748 = or i32 %bf.clear1747, %bf.shl1746
  store i32 %bf.set1748, i32* %static_flag1743, align 8
  %349 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %external_flag1750 = getelementptr inbounds %union.tree_node* %349, i64 0, i32 0, i32 5
  %350 = bitcast i48* %external_flag1750 to i64*
  %bf.load1751 = load i64* %350, align 8
  %public_flag1756 = getelementptr inbounds %union.tree_node* %349, i64 0, i32 0, i32 0, i32 2
  %bf.load1757 = load i32* %public_flag1756, align 8
  %351 = shl i64 %bf.load1751, 11
  %bf.value1758 = trunc i64 %351 to i32
  %bf.shl1759 = and i32 %bf.value1758, 524288
  %bf.clear1760 = and i32 %bf.load1757, -524289
  %bf.set1761 = or i32 %bf.shl1759, %bf.clear1760
  store i32 %bf.set1761, i32* %public_flag1756, align 8
  br label %if.end1765

if.end1765:                                       ; preds = %if.end1507, %if.then1627, %if.then1620, %if.then1514, %if.then1710, %if.else1738, %if.then1616, %if.then1614, %if.else1637, %if.then1642, %if.then1634, %if.end1453
  %type_quals.4 = phi i32 [ %type_quals.32404, %if.end1453 ], [ %type_quals.02222, %if.then1514 ], [ %type_quals.02222, %if.end1507 ], [ %type_quals.02222, %if.then1616 ], [ %type_quals.02222, %if.then1614 ], [ %type_quals.02222, %if.then1634 ], [ %type_quals.02222, %if.then1627 ], [ %type_quals.02222, %if.then1620 ], [ %type_quals.02222, %if.then1642 ], [ %type_quals.02222, %if.else1637 ], [ %type_quals.02222, %if.then1710 ], [ %type_quals.02222, %if.else1738 ]
  %and1766 = and i32 %specbits.5.ph, 32
  %tobool1767 = icmp eq i32 %and1766, 0
  br i1 %tobool1767, label %if.end1773, label %if.then1768

if.then1768:                                      ; preds = %if.end1765
  %352 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %regdecl_flag = getelementptr inbounds %union.tree_node* %352, i64 0, i32 0, i32 5
  %353 = bitcast i48* %regdecl_flag to i64*
  %bf.load1770 = load i64* %353, align 8
  %bf.set1772 = or i64 %bf.load1770, 1024
  store i64 %bf.set1772, i64* %353, align 8
  br label %if.end1773

if.end1773:                                       ; preds = %if.end1765, %if.then1768
  %354 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  call void @c_apply_type_quals_to_decl(i32 %type_quals.4, %union.tree_node* %354) #5
  %355 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  %type1775 = getelementptr inbounds %union.tree_node* %355, i64 0, i32 0, i32 0, i32 1
  %356 = load %union.tree_node** %type1775, align 8, !tbaa !23
  %lang_flag_2 = getelementptr inbounds %union.tree_node* %356, i64 0, i32 0, i32 0, i32 2
  %bf.load1777 = load i32* %lang_flag_2, align 8
  %bf.clear1779 = and i32 %bf.load1777, 67108864
  %tobool1780 = icmp eq i32 %bf.clear1779, 0
  br i1 %tobool1780, label %if.end1783, label %if.then1781

if.then1781:                                      ; preds = %if.end1773
  %call1782 = call i32 @mark_addressable(%union.tree_node* %355) #5
  br label %if.end1783

if.end1783:                                       ; preds = %if.end1773, %if.then1781
  %call1784 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl1326, %union.tree_node* %returned_attrs.02219, i32 0) #5
  %357 = load %union.tree_node** %decl1326, align 8, !tbaa !1
  br label %return

return:                                           ; preds = %while.end, %if.end1783, %if.end1293, %if.end1236
  %retval.0 = phi %union.tree_node* [ %244, %if.end1236 ], [ %254, %if.end1293 ], [ %357, %if.end1783 ], [ null, %while.end ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @groktypename_in_parm_context(%union.tree_node* readonly %typename) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %typename, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 2
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %value = getelementptr inbounds %union.tree_node* %typename, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !50
  %purpose = getelementptr inbounds %union.tree_node* %typename, i64 0, i32 0, i32 1
  %2 = load i8** %purpose, align 8
  %3 = bitcast i8* %2 to %union.tree_node*
  %call = tail call fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %1, %union.tree_node* %3, i32 2, i32 0)
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call, %if.end ], [ %typename, %entry ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @start_decl(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 %initialized, %union.tree_node* %attributes) #0 {
entry:
  %decl = alloca %union.tree_node*, align 8
  %call = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([11 x i8]* @.str169, i64 0, i64 0), %union.tree_node* %attributes) #5
  %tobool = icmp eq %union.tree_node* %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i1 true, i1* @deprecated_state, align 1
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %call1 = call fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 0, i32 %initialized)
  store %union.tree_node* %call1, %union.tree_node** %decl, align 8, !tbaa !1
  store i1 false, i1* @deprecated_state, align 1
  %0 = load i32* @warn_main, align 4, !tbaa !5
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %code = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp2 = icmp eq i32 %bf.clear, 30
  br i1 %cmp2, label %if.end7, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %land.lhs.true
  %name = getelementptr inbounds %union.tree_node* %call1, i64 0, i32 0, i32 8
  %1 = load %union.tree_node** %name, align 8, !tbaa !48
  %2 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !1
  %cmp5 = icmp eq %union.tree_node* %1, %2
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %land.lhs.true3
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %call1, i8* getelementptr inbounds ([27 x i8]* @.str170, i64 0, i64 0)) #5
  br label %if.end7

if.end7:                                          ; preds = %land.lhs.true, %if.then6, %land.lhs.true3, %if.end
  %tobool8 = icmp eq i32 %initialized, 0
  br i1 %tobool8, label %if.end102, label %if.then9

if.then9:                                         ; preds = %if.end7
  %3 = load %union.tree_node** %decl, align 8, !tbaa !1
  %code11 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load12 = load i32* %code11, align 8
  %bf.clear13 = and i32 %bf.load12, 255
  switch i32 %bf.clear13, label %sw.default [
    i32 33, label %sw.bb
    i32 30, label %sw.bb21
    i32 35, label %sw.bb27
  ]

sw.bb:                                            ; preds = %if.then9
  %4 = load i32* @pedantic, align 4, !tbaa !5
  %tobool14 = icmp eq i32 %4, 0
  br i1 %tobool14, label %lor.lhs.false, label %if.then17

lor.lhs.false:                                    ; preds = %sw.bb
  %call15 = call i32 @list_length(%union.tree_node* %declspecs) #5
  %cmp16 = icmp sgt i32 %call15, 1
  br i1 %cmp16, label %lor.lhs.false.if.then17_crit_edge, label %if.then91

lor.lhs.false.if.then17_crit_edge:                ; preds = %lor.lhs.false
  %.pre212 = load %union.tree_node** %decl, align 8, !tbaa !1
  br label %if.then17

if.then17:                                        ; preds = %lor.lhs.false.if.then17_crit_edge, %sw.bb
  %5 = phi %union.tree_node* [ %.pre212, %lor.lhs.false.if.then17_crit_edge ], [ %3, %sw.bb ]
  %name19 = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 8
  %6 = load %union.tree_node** %name19, align 8, !tbaa !48
  %id = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds i8** %id, i64 1
  %8 = load i8** %7, align 8, !tbaa !21
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([28 x i8]* @.str171, i64 0, i64 0), i8* %8) #5
  br label %if.end102

sw.bb21:                                          ; preds = %if.then9
  %name23 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 8
  %9 = load %union.tree_node** %name23, align 8, !tbaa !48
  %id25 = getelementptr inbounds %union.tree_node* %9, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds i8** %id25, i64 1
  %11 = load i8** %10, align 8, !tbaa !21
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str172, i64 0, i64 0), i8* %11) #5
  br label %if.end102

sw.bb27:                                          ; preds = %if.then9
  %name29 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 8
  %12 = load %union.tree_node** %name29, align 8, !tbaa !48
  %id31 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds i8** %id31, i64 1
  %14 = load i8** %13, align 8, !tbaa !21
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([30 x i8]* @.str173, i64 0, i64 0), i8* %14) #5
  br label %if.end102

sw.default:                                       ; preds = %if.then9
  %type = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 1
  %15 = load %union.tree_node** %type, align 8, !tbaa !23
  %16 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp34 = icmp eq %union.tree_node* %15, %16
  br i1 %cmp34, label %if.end102, label %if.else

if.else:                                          ; preds = %sw.default
  %size = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 2
  %17 = bitcast i32* %size to %union.tree_node**
  %18 = load %union.tree_node** %17, align 8, !tbaa !80
  %cmp39 = icmp eq %union.tree_node* %18, null
  br i1 %cmp39, label %if.else57, label %if.then40

if.then40:                                        ; preds = %if.else
  %code46 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 2
  %bf.load47 = load i32* %code46, align 8
  %bf.clear48 = and i32 %bf.load47, 255
  %cmp49 = icmp eq i32 %bf.clear48, 25
  br i1 %cmp49, label %lor.lhs.false50, label %if.then55

lor.lhs.false50:                                  ; preds = %if.then40
  %lang_flag_0 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 5
  %19 = bitcast i48* %lang_flag_0 to i64*
  %bf.load52 = load i64* %19, align 8
  %bf.cast = and i64 %bf.load52, 137438953472
  %tobool54 = icmp eq i64 %bf.cast, 0
  br i1 %tobool54, label %if.then91, label %if.then55

if.then55:                                        ; preds = %lor.lhs.false50, %if.then40
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str174, i64 0, i64 0)) #5
  br label %if.end102

if.else57:                                        ; preds = %if.else
  %code61 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 2
  %bf.load62 = load i32* %code61, align 8
  %bf.clear63 = and i32 %bf.load62, 255
  %cmp64 = icmp eq i32 %bf.clear63, 18
  br i1 %cmp64, label %if.else71, label %if.then65

if.then65:                                        ; preds = %if.else57
  %name67 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 8
  %20 = load %union.tree_node** %name67, align 8, !tbaa !48
  %id69 = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds i8** %id69, i64 1
  %22 = load i8** %21, align 8, !tbaa !21
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([50 x i8]* @.str175, i64 0, i64 0), i8* %22) #5
  br label %if.end102

if.else71:                                        ; preds = %if.else57
  %type75 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type75, align 8, !tbaa !23
  %size77 = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 2
  %24 = bitcast i32* %size77 to %union.tree_node**
  %25 = load %union.tree_node** %24, align 8, !tbaa !80
  %cmp78 = icmp eq %union.tree_node* %25, null
  br i1 %cmp78, label %if.then79, label %if.then91

if.then79:                                        ; preds = %if.else71
  %name81 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 8
  %26 = load %union.tree_node** %name81, align 8, !tbaa !48
  %id83 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds i8** %id83, i64 1
  %28 = load i8** %27, align 8, !tbaa !21
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str176, i64 0, i64 0), i8* %28) #5
  br label %if.end102

if.then91:                                        ; preds = %lor.lhs.false, %if.else71, %lor.lhs.false50
  %29 = load %union.tree_node** %decl, align 8, !tbaa !1
  %external_flag = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 5
  %30 = bitcast i48* %external_flag to i64*
  %bf.load93 = load i64* %30, align 8
  %bf.clear94 = and i64 %bf.load93, -257
  store i64 %bf.clear94, i64* %30, align 8
  %31 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %32 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp95 = icmp eq %struct.binding_level* %31, %32
  br i1 %cmp95, label %if.then96, label %if.end100

if.then96:                                        ; preds = %if.then91
  %33 = load %union.tree_node** %decl, align 8, !tbaa !1
  %static_flag = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 2
  %bf.load98 = load i32* %static_flag, align 8
  %bf.set = or i32 %bf.load98, 262144
  store i32 %bf.set, i32* %static_flag, align 8
  br label %if.end100

if.end100:                                        ; preds = %if.then96, %if.then91
  %34 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %35 = load %union.tree_node** %decl, align 8, !tbaa !1
  %initial = getelementptr inbounds %union.tree_node* %35, i64 0, i32 0, i32 12
  store %union.tree_node* %34, %union.tree_node** %initial, align 8, !tbaa !40
  br label %if.end102

if.end102:                                        ; preds = %sw.default, %if.end7, %if.then17, %sw.bb21, %sw.bb27, %if.then79, %if.then65, %if.then55, %if.end100
  %36 = load %union.tree_node** %decl, align 8, !tbaa !1
  %code104 = getelementptr inbounds %union.tree_node* %36, i64 0, i32 0, i32 0, i32 2
  %bf.load105 = load i32* %code104, align 8
  %bf.clear106 = and i32 %bf.load105, 255
  %cmp107 = icmp eq i32 %bf.clear106, 30
  br i1 %cmp107, label %if.then108, label %if.end113

if.then108:                                       ; preds = %if.end102
  %type110 = getelementptr inbounds %union.tree_node* %36, i64 0, i32 0, i32 0, i32 1
  %37 = load %union.tree_node** %type110, align 8, !tbaa !23
  %values = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 1
  %38 = load i8** %values, align 8
  %cmp112 = icmp ne i8* %38, null
  %conv = zext i1 %cmp112 to i32
  call void @gen_aux_info_record(%union.tree_node* %36, i32 0, i32 0, i32 %conv) #5
  br label %if.end113

if.end113:                                        ; preds = %if.then108, %if.end102
  %39 = load i32* @flag_no_common, align 4, !tbaa !5
  %tobool114 = icmp eq i32 %39, 0
  %.pre = load %union.tree_node** %decl, align 8, !tbaa !1
  br i1 %tobool114, label %if.then121, label %lor.lhs.false115

lor.lhs.false115:                                 ; preds = %if.end113
  %public_flag = getelementptr inbounds %union.tree_node* %.pre, i64 0, i32 0, i32 0, i32 2
  %bf.load117 = load i32* %public_flag, align 8
  %bf.clear119 = and i32 %bf.load117, 524288
  %tobool120 = icmp eq i32 %bf.clear119, 0
  br i1 %tobool120, label %if.then121, label %if.end126

if.then121:                                       ; preds = %if.end113, %lor.lhs.false115
  %common_flag = getelementptr inbounds %union.tree_node* %.pre, i64 0, i32 0, i32 5
  %40 = bitcast i48* %common_flag to i64*
  %bf.load123 = load i64* %40, align 8
  %bf.set125 = or i64 %bf.load123, 131072
  store i64 %bf.set125, i64* %40, align 8
  br label %if.end126

if.end126:                                        ; preds = %lor.lhs.false115, %if.then121
  %call127 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl, %union.tree_node* %attributes, i32 0) #5
  %41 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %42 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp128 = icmp eq %struct.binding_level* %41, %42
  br i1 %cmp128, label %if.then130, label %if.end131

if.then130:                                       ; preds = %if.end126
  %43 = load %union.tree_node** %decl, align 8, !tbaa !1
  call void @maybe_apply_pragma_weak(%union.tree_node* %43) #5
  br label %if.end131

if.end131:                                        ; preds = %if.then130, %if.end126
  %44 = load %union.tree_node** %decl, align 8, !tbaa !1
  %code133 = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 0, i32 2
  %bf.load134 = load i32* %code133, align 8
  %bf.clear135 = and i32 %bf.load134, 255
  %cmp136 = icmp eq i32 %bf.clear135, 30
  br i1 %cmp136, label %land.lhs.true138, label %if.end157

land.lhs.true138:                                 ; preds = %if.end131
  %lang_specific = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 24
  %45 = load %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  %46 = getelementptr inbounds %struct.lang_decl* %45, i64 0, i32 0, i32 0
  %bf.load140 = load i8* %46, align 4
  %bf.clear141 = and i8 %bf.load140, 1
  %tobool143 = icmp eq i8 %bf.clear141, 0
  br i1 %tobool143, label %if.end157, label %land.lhs.true144

land.lhs.true144:                                 ; preds = %land.lhs.true138
  %uninlinable = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 5
  %47 = bitcast i48* %uninlinable to i64*
  %bf.load146 = load i64* %47, align 8
  %bf.cast149 = and i64 %bf.load146, 68719476736
  %tobool150 = icmp eq i64 %bf.cast149, 0
  br i1 %tobool150, label %if.end157, label %land.lhs.true151

land.lhs.true151:                                 ; preds = %land.lhs.true144
  %attributes153 = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 16
  %48 = load %union.tree_node** %attributes153, align 8, !tbaa !59
  %call154 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8]* @.str177, i64 0, i64 0), %union.tree_node* %48) #5
  %tobool155 = icmp eq %union.tree_node* %call154, null
  br i1 %tobool155, label %if.end157, label %if.then156

if.then156:                                       ; preds = %land.lhs.true151
  %49 = load %union.tree_node** %decl, align 8, !tbaa !1
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %49, i8* getelementptr inbounds ([46 x i8]* @.str178, i64 0, i64 0)) #5
  br label %if.end157

if.end157:                                        ; preds = %land.lhs.true151, %land.lhs.true144, %land.lhs.true138, %if.then156, %if.end131
  %50 = load %union.tree_node** %decl, align 8, !tbaa !1
  %call158 = call %union.tree_node* @pushdecl(%union.tree_node* %50)
  %51 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %52 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp159 = icmp eq %struct.binding_level* %51, %52
  br i1 %cmp159, label %if.end198, label %land.lhs.true161

land.lhs.true161:                                 ; preds = %if.end157
  %rtl = getelementptr inbounds %union.tree_node* %call158, i64 0, i32 0, i32 17
  %53 = load %struct.rtx_def** %rtl, align 8, !tbaa !71
  %cmp163 = icmp eq %struct.rtx_def* %53, null
  br i1 %cmp163, label %land.lhs.true165, label %if.end198

land.lhs.true165:                                 ; preds = %land.lhs.true161
  %context = getelementptr inbounds %union.tree_node* %call158, i64 0, i32 0, i32 9
  %54 = load %union.tree_node** %context, align 8, !tbaa !53
  %tobool167 = icmp eq %union.tree_node* %54, null
  br i1 %tobool167, label %if.then168, label %if.end198

if.then168:                                       ; preds = %land.lhs.true165
  %type170 = getelementptr inbounds %union.tree_node* %call158, i64 0, i32 0, i32 0, i32 1
  %55 = load %union.tree_node** %type170, align 8, !tbaa !23
  %56 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp171 = icmp eq %union.tree_node* %55, %56
  br i1 %cmp171, label %if.else181, label %land.lhs.true173

land.lhs.true173:                                 ; preds = %if.then168
  %size177 = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 2
  %57 = bitcast i32* %size177 to %union.tree_node**
  %58 = load %union.tree_node** %57, align 8, !tbaa !80
  %cmp178 = icmp eq %union.tree_node* %58, null
  br i1 %cmp178, label %if.else181, label %if.then180

if.then180:                                       ; preds = %land.lhs.true173
  call void @expand_decl(%union.tree_node* %call158) #5
  br label %if.end198

if.else181:                                       ; preds = %land.lhs.true173, %if.then168
  %code185 = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 0, i32 2
  %bf.load186 = load i32* %code185, align 8
  %bf.clear187 = and i32 %bf.load186, 255
  %cmp188 = icmp eq i32 %bf.clear187, 18
  br i1 %cmp188, label %land.lhs.true190, label %if.end198

land.lhs.true190:                                 ; preds = %if.else181
  %initial192 = getelementptr inbounds %union.tree_node* %call158, i64 0, i32 0, i32 12
  %59 = load %union.tree_node** %initial192, align 8, !tbaa !40
  %cmp193 = icmp eq %union.tree_node* %59, null
  br i1 %cmp193, label %if.end198, label %if.then195

if.then195:                                       ; preds = %land.lhs.true190
  call void @expand_decl(%union.tree_node* %call158) #5
  br label %if.end198

if.end198:                                        ; preds = %land.lhs.true190, %land.lhs.true165, %land.lhs.true161, %if.end157, %if.then180, %if.then195, %if.else181
  ret %union.tree_node* %call158
}

declare %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) #1

declare i32 @list_length(%union.tree_node*) #1

declare void @maybe_apply_pragma_weak(%union.tree_node*) #1

declare void @expand_decl(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @finish_decl(%union.tree_node* %decl, %union.tree_node* %init, %union.tree_node* %asmspec_tree) #0 {
entry:
  %type1 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type1, align 8, !tbaa !23
  %size = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 4
  %1 = load %union.tree_node** %size, align 8, !tbaa !69
  %cmp = icmp eq %union.tree_node* %1, null
  %2 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %3 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp3 = icmp eq %struct.binding_level* %2, %3
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @maybe_apply_renaming_pragma(%union.tree_node* %decl, %union.tree_node* %asmspec_tree) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %asmspec_tree.addr.0 = phi %union.tree_node* [ %call, %if.then ], [ %asmspec_tree, %entry ]
  %tobool = icmp eq %union.tree_node* %asmspec_tree.addr.0, null
  br i1 %tobool, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  %pointer = getelementptr inbounds %union.tree_node* %asmspec_tree.addr.0, i64 0, i32 0, i32 4
  %4 = load %union.tree_node** %pointer, align 8
  %5 = bitcast %union.tree_node* %4 to i8*
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then5
  %asmspec.0 = phi i8* [ %5, %if.then5 ], [ null, %if.end ]
  %cmp7 = icmp eq %union.tree_node* %init, null
  br i1 %cmp7, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end6
  %initial = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %6 = load %union.tree_node** %initial, align 8, !tbaa !40
  %cmp10 = icmp eq %union.tree_node* %6, null
  %.init = select i1 %cmp10, %union.tree_node* null, %union.tree_node* %init
  br label %if.end13

if.end13:                                         ; preds = %land.lhs.true, %if.end6
  %init.addr.0 = phi %union.tree_node* [ null, %if.end6 ], [ %.init, %land.lhs.true ]
  %code = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp15 = icmp eq i32 %bf.clear, 35
  %.init.addr.0 = select i1 %cmp15, %union.tree_node* null, %union.tree_node* %init.addr.0
  %tobool19 = icmp eq %union.tree_node* %.init.addr.0, null
  br i1 %tobool19, label %if.end35, label %if.then20

if.then20:                                        ; preds = %if.end13
  %cmp25 = icmp eq i32 %bf.clear, 33
  br i1 %cmp25, label %if.else, label %if.then27

if.then27:                                        ; preds = %if.then20
  tail call void @store_init_value(%union.tree_node* %decl, %union.tree_node* %.init.addr.0) #5
  br label %if.end35

if.else:                                          ; preds = %if.then20
  %type29 = getelementptr inbounds %union.tree_node* %.init.addr.0, i64 0, i32 0, i32 0, i32 1
  %7 = load %union.tree_node** %type29, align 8, !tbaa !23
  store %union.tree_node* %7, %union.tree_node** %type1, align 8, !tbaa !23
  %initial33 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %initial33, align 8, !tbaa !40
  br label %if.end35

if.end35:                                         ; preds = %if.end13, %if.then27, %if.else
  %code37 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load38 = load i32* %code37, align 8
  %bf.clear39 = and i32 %bf.load38, 255
  %cmp40 = icmp eq i32 %bf.clear39, 18
  br i1 %cmp40, label %land.lhs.true42, label %if.end125

land.lhs.true42:                                  ; preds = %if.end35
  %values = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  %8 = load i8** %values, align 8
  %cmp44 = icmp eq i8* %8, null
  br i1 %cmp44, label %land.lhs.true46, label %if.end125

land.lhs.true46:                                  ; preds = %land.lhs.true42
  %bf.load49 = load i32* %code, align 8
  %bf.clear50 = and i32 %bf.load49, 255
  %cmp51 = icmp eq i32 %bf.clear50, 33
  br i1 %cmp51, label %if.end125, label %if.then53

if.then53:                                        ; preds = %land.lhs.true46
  %bf.clear56 = and i32 %bf.load49, 262144
  %tobool57 = icmp eq i32 %bf.clear56, 0
  br i1 %tobool57, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then53
  %9 = load i32* @pedantic, align 4, !tbaa !5
  %tobool58 = icmp eq i32 %9, 0
  br i1 %tobool58, label %cond.end, label %land.rhs

land.rhs:                                         ; preds = %cond.true
  %bf.clear62 = and i32 %bf.load49, 524288
  %lnot = icmp eq i32 %bf.clear62, 0
  br label %cond.end

cond.false:                                       ; preds = %if.then53
  %external_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %10 = bitcast i48* %external_flag to i64*
  %bf.load65 = load i64* %10, align 8
  %bf.cast = and i64 %bf.load65, 256
  %lnot69 = icmp eq i64 %bf.cast, 0
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %land.rhs, %cond.false
  %.sink = phi i1 [ %lnot69, %cond.false ], [ false, %cond.true ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %.sink to i32
  %initial71 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %11 = load %union.tree_node** %initial71, align 8, !tbaa !40
  %call72 = tail call i32 @complete_array_type(%union.tree_node* %0, %union.tree_node* %11, i32 %land.ext)
  %12 = load %union.tree_node** %type1, align 8, !tbaa !23
  switch i32 %call72, label %if.else107 [
    i32 1, label %if.then77
    i32 2, label %if.then81
  ]

if.then77:                                        ; preds = %cond.end
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %decl, i8* getelementptr inbounds ([44 x i8]* @.str179, i64 0, i64 0)) #5
  br label %if.end124

if.then81:                                        ; preds = %cond.end
  br i1 %.sink, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.then81
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %decl, i8* getelementptr inbounds ([27 x i8]* @.str180, i64 0, i64 0)) #5
  br label %if.end124

if.else84:                                        ; preds = %if.then81
  %13 = load i32* @pedantic, align 4, !tbaa !5
  %tobool85 = icmp eq i32 %13, 0
  br i1 %tobool85, label %land.lhs.true86, label %if.end124

land.lhs.true86:                                  ; preds = %if.else84
  %bf.load89 = load i32* %code, align 8
  %14 = and i32 %bf.load89, 786432
  %15 = icmp eq i32 %14, 262144
  br i1 %15, label %if.then100, label %if.end124

if.then100:                                       ; preds = %land.lhs.true86
  %external_flag102 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %16 = bitcast i48* %external_flag102 to i64*
  %bf.load103 = load i64* %16, align 8
  %bf.set = or i64 %bf.load103, 256
  store i64 %bf.set, i64* %16, align 8
  br label %if.end124

if.else107:                                       ; preds = %cond.end
  %17 = load i32* @pedantic, align 4, !tbaa !5
  %tobool108 = icmp eq i32 %17, 0
  br i1 %tobool108, label %if.end124, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %if.else107
  %values111 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 1
  %18 = load i8** %values111, align 8
  %cmp112 = icmp eq i8* %18, null
  br i1 %cmp112, label %if.end124, label %land.lhs.true114

land.lhs.true114:                                 ; preds = %land.lhs.true109
  %maxval = getelementptr inbounds i8* %18, i64 112
  %19 = bitcast i8* %maxval to %union.tree_node**
  %20 = load %union.tree_node** %19, align 8, !tbaa !82
  %call118 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %20) #5
  %cmp119 = icmp slt i32 %call118, 0
  br i1 %cmp119, label %if.then121, label %if.end124

if.then121:                                       ; preds = %land.lhs.true114
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %decl, i8* getelementptr inbounds ([33 x i8]* @.str181, i64 0, i64 0)) #5
  br label %if.end124

if.end124:                                        ; preds = %land.lhs.true86, %if.else84, %land.lhs.true109, %if.else107, %if.then100, %if.then83, %if.then121, %land.lhs.true114, %if.then77
  tail call void @layout_decl(%union.tree_node* %decl, i32 0) #5
  br label %if.end125

if.end125:                                        ; preds = %land.lhs.true46, %if.end124, %land.lhs.true42, %if.end35
  %type.0 = phi %union.tree_node* [ %12, %if.end124 ], [ %0, %land.lhs.true46 ], [ %0, %land.lhs.true42 ], [ %0, %if.end35 ]
  %bf.load128 = load i32* %code, align 8
  %bf.clear129 = and i32 %bf.load128, 255
  %cmp130 = icmp eq i32 %bf.clear129, 34
  br i1 %cmp130, label %if.then132, label %if.end233

if.then132:                                       ; preds = %if.end125
  %21 = load %union.tree_node** %size, align 8, !tbaa !69
  %cmp135 = icmp eq %union.tree_node* %21, null
  br i1 %cmp135, label %land.lhs.true137, label %if.end186

land.lhs.true137:                                 ; preds = %if.then132
  %22 = load %union.tree_node** %type1, align 8, !tbaa !23
  %23 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp140 = icmp eq %union.tree_node* %22, %23
  br i1 %cmp140, label %land.lhs.true155, label %land.lhs.true142

land.lhs.true142:                                 ; preds = %land.lhs.true137
  %size146 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 2
  %24 = bitcast i32* %size146 to %union.tree_node**
  %25 = load %union.tree_node** %24, align 8, !tbaa !80
  %cmp147 = icmp eq %union.tree_node* %25, null
  br i1 %cmp147, label %land.lhs.true155, label %if.end150

if.end150:                                        ; preds = %land.lhs.true142
  tail call void @layout_decl(%union.tree_node* %decl, i32 0) #5
  %.pr.pre = load %union.tree_node** %size, align 8, !tbaa !69
  %phitmp = icmp eq %union.tree_node* %.pr.pre, null
  br i1 %phitmp, label %land.lhs.true155, label %if.end186

land.lhs.true155:                                 ; preds = %land.lhs.true137, %land.lhs.true142, %if.end150
  %26 = load %union.tree_node** %type1, align 8, !tbaa !23
  %27 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp158 = icmp eq %union.tree_node* %26, %27
  br i1 %cmp158, label %if.end186, label %land.lhs.true160

land.lhs.true160:                                 ; preds = %land.lhs.true155
  %bf.load163 = load i32* %code, align 8
  %bf.clear165 = and i32 %bf.load163, 262144
  %tobool166 = icmp eq i32 %bf.clear165, 0
  br i1 %tobool166, label %cond.false175, label %cond.true167

cond.true167:                                     ; preds = %land.lhs.true160
  %initial169 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %28 = load %union.tree_node** %initial169, align 8, !tbaa !40
  %cmp170 = icmp eq %union.tree_node* %28, null
  br i1 %cmp170, label %lor.lhs.false, label %if.then183

lor.lhs.false:                                    ; preds = %cond.true167
  %context = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %29 = load %union.tree_node** %context, align 8, !tbaa !53
  %cmp173 = icmp eq %union.tree_node* %29, null
  br i1 %cmp173, label %if.end186, label %if.then183

cond.false175:                                    ; preds = %land.lhs.true160
  %external_flag177 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %30 = bitcast i48* %external_flag177 to i64*
  %bf.load178 = load i64* %30, align 8
  %bf.cast181 = and i64 %bf.load178, 256
  %tobool182 = icmp eq i64 %bf.cast181, 0
  br i1 %tobool182, label %if.then183, label %if.end186

if.then183:                                       ; preds = %lor.lhs.false, %cond.true167, %cond.false175
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %decl, i8* getelementptr inbounds ([33 x i8]* @.str182, i64 0, i64 0)) #5
  %31 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %31, %union.tree_node** %type1, align 8, !tbaa !23
  br label %if.end186

if.end186:                                        ; preds = %if.then132, %lor.lhs.false, %cond.false175, %land.lhs.true155, %if.then183, %if.end150
  %external_flag188 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %32 = bitcast i48* %external_flag188 to i64*
  %bf.load189 = load i64* %32, align 8
  %bf.cast192 = and i64 %bf.load189, 256
  %tobool193 = icmp eq i64 %bf.cast192, 0
  br i1 %tobool193, label %lor.lhs.false194, label %land.lhs.true201

lor.lhs.false194:                                 ; preds = %if.end186
  %bf.load197 = load i32* %code, align 8
  %bf.clear199 = and i32 %bf.load197, 262144
  %tobool200 = icmp eq i32 %bf.clear199, 0
  br i1 %tobool200, label %if.end220, label %land.lhs.true201

land.lhs.true201:                                 ; preds = %lor.lhs.false194, %if.end186
  %33 = load %union.tree_node** %size, align 8, !tbaa !69
  %cmp204 = icmp eq %union.tree_node* %33, null
  br i1 %cmp204, label %if.end220, label %if.then206

if.then206:                                       ; preds = %land.lhs.true201
  %code210 = getelementptr inbounds %union.tree_node* %33, i64 0, i32 0, i32 0, i32 2
  %bf.load211 = load i32* %code210, align 8
  %bf.clear212 = and i32 %bf.load211, 255
  %cmp213 = icmp eq i32 %bf.clear212, 25
  br i1 %cmp213, label %if.then215, label %if.else218

if.then215:                                       ; preds = %if.then206
  tail call void @constant_expression_warning(%union.tree_node* %33) #5
  br label %if.end220

if.else218:                                       ; preds = %if.then206
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %decl, i8* getelementptr inbounds ([36 x i8]* @.str183, i64 0, i64 0)) #5
  br label %if.end220

if.end220:                                        ; preds = %land.lhs.true201, %lor.lhs.false194, %if.then215, %if.else218
  %used_flag = getelementptr inbounds %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 2
  %bf.load222 = load i32* %used_flag, align 8
  %bf.clear224 = and i32 %bf.load222, 65536
  %tobool225 = icmp eq i32 %bf.clear224, 0
  %bf.load236.pre = load i32* %code, align 8
  br i1 %tobool225, label %if.end233, label %if.then226

if.then226:                                       ; preds = %if.end220
  %bf.set231 = or i32 %bf.load236.pre, 65536
  store i32 %bf.set231, i32* %code, align 8
  br label %if.end233

if.end233:                                        ; preds = %if.end220, %if.then226, %if.end125
  %bf.load236 = phi i32 [ %bf.set231, %if.then226 ], [ %bf.load128, %if.end125 ], [ %bf.load236.pre, %if.end220 ]
  %bf.clear237 = and i32 %bf.load236, 255
  %cmp238 = icmp eq i32 %bf.clear237, 30
  %tobool241 = icmp ne i8* %asmspec.0, null
  %or.cond = and i1 %cmp238, %tobool241
  br i1 %or.cond, label %if.then242, label %if.end249

if.then242:                                       ; preds = %if.end233
  %built_in_class = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %34 = bitcast i48* %built_in_class to i64*
  %bf.load244 = load i64* %34, align 8
  %bf.clear245 = and i64 %bf.load244, -1610612737
  store i64 %bf.clear245, i64* %34, align 8
  %rtl = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 17
  store %struct.rtx_def* null, %struct.rtx_def** %rtl, align 8, !tbaa !71
  %call247 = tail call %union.tree_node* @get_identifier(i8* %asmspec.0) #5
  %assembler_name = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  store %union.tree_node* %call247, %union.tree_node** %assembler_name, align 8, !tbaa !49
  %bf.load252.pre = load i32* %code, align 8
  br label %if.end249

if.end249:                                        ; preds = %if.then242, %if.end233
  %bf.load252 = phi i32 [ %bf.load252.pre, %if.then242 ], [ %bf.load236, %if.end233 ]
  %bf.clear253 = and i32 %bf.load252, 255
  switch i32 %bf.clear253, label %if.end385 [
    i32 34, label %if.then263
    i32 30, label %if.then263
  ]

if.then263:                                       ; preds = %if.end249, %if.end249
  tail call void @maybe_objc_check_decl(%union.tree_node* %decl) #5
  %context265 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %35 = load %union.tree_node** %context265, align 8, !tbaa !53
  %tobool266 = icmp eq %union.tree_node* %35, null
  br i1 %tobool266, label %if.then267, label %if.else292

if.then267:                                       ; preds = %if.then263
  %initial269 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  %36 = load %union.tree_node** %initial269, align 8, !tbaa !40
  %cmp270 = icmp eq %union.tree_node* %36, null
  %37 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8
  %cmp275 = icmp eq %union.tree_node* %36, %37
  %or.cond494 = or i1 %cmp270, %cmp275
  br i1 %or.cond494, label %if.then277, label %lor.end

if.then277:                                       ; preds = %if.then267
  %defer_output = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %38 = bitcast i48* %defer_output to i64*
  %bf.load279 = load i64* %38, align 8
  %bf.set281 = or i64 %bf.load279, 262144
  store i64 %bf.set281, i64* %38, align 8
  br label %lor.end

lor.end:                                          ; preds = %if.then277, %if.then267
  tail call void @rest_of_decl_compilation(%union.tree_node* %decl, i8* %asmspec.0, i32 1, i32 0) #5
  br label %if.end343

if.else292:                                       ; preds = %if.then263
  br i1 %tobool241, label %if.then294, label %if.end334

if.then294:                                       ; preds = %if.else292
  %regdecl_flag = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %39 = bitcast i48* %regdecl_flag to i64*
  %bf.load296 = load i64* %39, align 8
  %bf.cast299 = and i64 %bf.load296, 1024
  %tobool300 = icmp eq i64 %bf.cast299, 0
  br i1 %tobool300, label %if.end306, label %if.then301

if.then301:                                       ; preds = %if.then294
  %bf.set305 = or i64 %bf.load296, 2199023255552
  store i64 %bf.set305, i64* %39, align 8
  br label %if.end306

if.end306:                                        ; preds = %if.then294, %if.then301
  %bf.load316 = phi i64 [ %bf.load296, %if.then294 ], [ %bf.set305, %if.then301 ]
  %bf.load309 = load i32* %code, align 8
  %bf.clear310 = and i32 %bf.load309, 255
  %cmp311 = icmp eq i32 %bf.clear310, 34
  br i1 %cmp311, label %land.lhs.true313, label %if.else329

land.lhs.true313:                                 ; preds = %if.end306
  %bf.cast319 = and i64 %bf.load316, 1024
  %tobool320 = icmp eq i64 %bf.cast319, 0
  %bf.clear326 = and i32 %bf.load309, 262144
  %tobool327 = icmp eq i32 %bf.clear326, 0
  %or.cond495 = and i1 %tobool320, %tobool327
  br i1 %or.cond495, label %if.then328, label %if.else329

if.then328:                                       ; preds = %land.lhs.true313
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %decl, i8* getelementptr inbounds ([58 x i8]* @.str184, i64 0, i64 0)) #5
  br label %if.end334

if.else329:                                       ; preds = %land.lhs.true313, %if.end306
  %call330 = tail call %union.tree_node* @get_identifier(i8* %asmspec.0) #5
  %assembler_name332 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 14
  store %union.tree_node* %call330, %union.tree_node** %assembler_name332, align 8, !tbaa !49
  br label %if.end334

if.end334:                                        ; preds = %if.then328, %if.else329, %if.else292
  %bf.load337 = load i32* %code, align 8
  %bf.clear338 = and i32 %bf.load337, 255
  %cmp339 = icmp eq i32 %bf.clear338, 30
  br i1 %cmp339, label %if.end343, label %if.then341

if.then341:                                       ; preds = %if.end334
  tail call void @add_decl_stmt(%union.tree_node* %decl) #5
  br label %if.end343

if.end343:                                        ; preds = %if.end334, %if.then341, %lor.end
  %40 = load %union.tree_node** %context265, align 8, !tbaa !53
  %cmp346 = icmp ne %union.tree_node* %40, null
  %or.cond403 = and i1 %cmp346, %cmp
  %bf.load353 = load i32* %code, align 8
  %bf.clear355 = and i32 %bf.load353, 262144
  %tobool356 = icmp eq i32 %bf.clear355, 0
  %or.cond502 = and i1 %or.cond403, %tobool356
  br i1 %or.cond502, label %land.lhs.true357, label %if.end385

land.lhs.true357:                                 ; preds = %if.end343
  %external_flag359 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 5
  %41 = bitcast i48* %external_flag359 to i64*
  %bf.load360 = load i64* %41, align 8
  %bf.cast363 = and i64 %bf.load360, 256
  %tobool364 = icmp eq i64 %bf.cast363, 0
  br i1 %tobool364, label %if.then365, label %if.end385

if.then365:                                       ; preds = %land.lhs.true357
  %42 = lshr i32 %bf.load353, 6
  %bf.shl = and i32 %42, 1024
  %bf.clear373 = and i32 %bf.load353, -1025
  %bf.set374 = or i32 %bf.shl, %bf.clear373
  store i32 %bf.set374, i32* %code, align 8
  %43 = load %union.tree_node** %size, align 8, !tbaa !69
  %cmp377 = icmp eq %union.tree_node* %43, null
  br i1 %cmp377, label %if.then379, label %if.end385

if.then379:                                       ; preds = %if.then365
  %initial381 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 12
  store %union.tree_node* null, %union.tree_node** %initial381, align 8, !tbaa !40
  br label %if.end385

if.end385:                                        ; preds = %if.end343, %if.end249, %land.lhs.true357, %if.then365, %if.then379
  %bf.load388 = phi i32 [ %bf.load252, %if.end249 ], [ %bf.load353, %land.lhs.true357 ], [ %bf.set374, %if.then365 ], [ %bf.set374, %if.then379 ], [ %bf.load353, %if.end343 ]
  %bf.clear389 = and i32 %bf.load388, 255
  %cmp390 = icmp eq i32 %bf.clear389, 33
  br i1 %cmp390, label %if.then392, label %if.end397

if.then392:                                       ; preds = %if.end385
  tail call void @maybe_objc_check_decl(%union.tree_node* %decl) #5
  %context394 = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 9
  %44 = load %union.tree_node** %context394, align 8, !tbaa !53
  %cmp395 = icmp eq %union.tree_node* %44, null
  %conv396 = zext i1 %cmp395 to i32
  tail call void @rest_of_decl_compilation(%union.tree_node* %decl, i8* null, i32 %conv396, i32 0) #5
  br label %if.end397

if.end397:                                        ; preds = %if.then392, %if.end385
  %45 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %46 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp398 = icmp eq %struct.binding_level* %45, %46
  br i1 %cmp398, label %if.then400, label %if.end402

if.then400:                                       ; preds = %if.end397
  %call401 = tail call %union.tree_node* @get_pending_sizes() #5
  br label %if.end402

if.end402:                                        ; preds = %if.then400, %if.end397
  ret void
}

declare %union.tree_node* @maybe_apply_renaming_pragma(%union.tree_node*, %union.tree_node*) #1

declare void @store_init_value(%union.tree_node*, %union.tree_node*) #1

declare i32 @tree_int_cst_sgn(%union.tree_node*) #1

declare void @constant_expression_warning(%union.tree_node*) #1

declare void @add_decl_stmt(%union.tree_node*) #1

declare %union.tree_node* @get_pending_sizes() #1

; Function Attrs: nounwind readnone uwtable
define noalias %union.tree_node* @maybe_build_cleanup(%union.tree_node* nocapture readnone %decl) #6 {
entry:
  ret %union.tree_node* null
}

; Function Attrs: nounwind uwtable
define void @push_parm_decl(%union.tree_node* nocapture readonly %parm) #0 {
entry:
  %decl = alloca %union.tree_node*, align 8
  %0 = load i32* @immediate_size_expand, align 4, !tbaa !5
  store i32 0, i32* @immediate_size_expand, align 4, !tbaa !5
  %purpose = getelementptr inbounds %union.tree_node* %parm, i64 0, i32 0, i32 1
  %1 = load i8** %purpose, align 8
  %value = getelementptr inbounds i8* %1, i64 32
  %2 = bitcast i8* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !50
  %purpose5 = getelementptr inbounds i8* %1, i64 24
  %4 = bitcast i8* %purpose5 to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !90
  %call = call fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %3, %union.tree_node* %5, i32 2, i32 0)
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !tbaa !1
  %value7 = getelementptr inbounds %union.tree_node* %parm, i64 0, i32 0, i32 2
  %6 = bitcast i32* %value7 to %union.tree_node**
  %7 = load %union.tree_node** %6, align 8, !tbaa !50
  %call8 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl, %union.tree_node* %7, i32 0) #5
  %8 = load %union.tree_node** %decl, align 8, !tbaa !1
  %call9 = call %union.tree_node* @pushdecl(%union.tree_node* %8)
  store %union.tree_node* %call9, %union.tree_node** %decl, align 8, !tbaa !1
  store i32 %0, i32* @immediate_size_expand, align 4, !tbaa !5
  %9 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %parm_order = getelementptr inbounds %struct.binding_level* %9, i64 0, i32 12
  %10 = load %union.tree_node** %parm_order, align 8, !tbaa !87
  %call10 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call9, %union.tree_node* %10) #5
  %11 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %parm_order11 = getelementptr inbounds %struct.binding_level* %11, i64 0, i32 12
  store %union.tree_node* %call10, %union.tree_node** %parm_order11, align 8, !tbaa !87
  %12 = load %union.tree_node** %decl, align 8, !tbaa !1
  call void @finish_decl(%union.tree_node* %12, %union.tree_node* null, %union.tree_node* null)
  ret void
}

; Function Attrs: nounwind uwtable
define void @clear_parm_order() #0 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %parm_order = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 12
  store %union.tree_node* null, %union.tree_node** %parm_order, align 8, !tbaa !87
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_compound_literal(%union.tree_node* %type, %union.tree_node* %init) #0 {
entry:
  %call = call %union.tree_node* @build_decl(i32 34, %union.tree_node* null, %union.tree_node* %type) #5
  %external_flag = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 5
  %0 = bitcast i48* %external_flag to i64*
  %bf.load = load i64* %0, align 8
  %bf.clear = and i64 %bf.load, -257
  store i64 %bf.clear, i64* %0, align 8
  %public_flag = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 2
  %bf.load2 = load i32* %public_flag, align 8
  %bf.clear3 = and i32 %bf.load2, -524289
  store i32 %bf.clear3, i32* %public_flag, align 8
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %2 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp = icmp eq %struct.binding_level* %1, %2
  %conv = zext i1 %cmp to i32
  %bf.shl = shl nuw nsw i32 %conv, 18
  %bf.clear6 = and i32 %bf.load2, -786433
  %bf.set = or i32 %bf.shl, %bf.clear6
  store i32 %bf.set, i32* %public_flag, align 8
  %3 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %context = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 9
  store %union.tree_node* %3, %union.tree_node** %context, align 8, !tbaa !53
  %bf.set11 = or i32 %bf.set, 65536
  store i32 %bf.set11, i32* %public_flag, align 8
  %type13 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %type, %union.tree_node** %type13, align 8, !tbaa !23
  %readonly_flag = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load15 = load i32* %readonly_flag, align 8
  %bf.clear16 = and i32 %bf.load15, 4096
  %bf.clear22 = and i32 %bf.set11, -528385
  %bf.set23 = or i32 %bf.clear22, %bf.clear16
  store i32 %bf.set23, i32* %public_flag, align 8
  call void @store_init_value(%union.tree_node* %call, %union.tree_node* %init) #5
  %bf.load25 = load i32* %readonly_flag, align 8
  %bf.clear26 = and i32 %bf.load25, 255
  %cmp27 = icmp eq i32 %bf.clear26, 18
  br i1 %cmp27, label %land.lhs.true, label %if.end35

land.lhs.true:                                    ; preds = %entry
  %size = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 2
  %4 = bitcast i32* %size to %union.tree_node**
  %5 = load %union.tree_node** %4, align 8, !tbaa !80
  %cmp30 = icmp eq %union.tree_node* %5, null
  br i1 %cmp30, label %if.then, label %if.end35

if.then:                                          ; preds = %land.lhs.true
  %initial = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 12
  %6 = load %union.tree_node** %initial, align 8, !tbaa !40
  %call33 = call i32 @complete_array_type(%union.tree_node* %type, %union.tree_node* %6, i32 1)
  %tobool = icmp eq i32 %call33, 0
  br i1 %tobool, label %if.end35, label %if.then34

if.then34:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str185, i64 0, i64 0), i32 3921, i8* getelementptr inbounds ([23 x i8]* @__FUNCTION__.build_compound_literal, i64 0, i64 0)) #8
  unreachable

if.end35:                                         ; preds = %if.then, %land.lhs.true, %entry
  %7 = load %union.tree_node** %type13, align 8, !tbaa !23
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp38 = icmp eq %union.tree_node* %7, %8
  br i1 %cmp38, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end35
  %size41 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 2
  %9 = bitcast i32* %size41 to %union.tree_node**
  %10 = load %union.tree_node** %9, align 8, !tbaa !80
  %cmp42 = icmp eq %union.tree_node* %10, null
  br i1 %cmp42, label %return, label %if.end45

if.end45:                                         ; preds = %lor.lhs.false
  %call46 = call %union.tree_node* (i32, ...)* @build_stmt(i32 154, %union.tree_node* %call) #5
  %11 = load %union.tree_node** %type13, align 8, !tbaa !23
  %call49 = call %union.tree_node* @build1(i32 170, %union.tree_node* %11, %union.tree_node* %call46) #5
  %side_effects_flag = getelementptr inbounds %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 2
  %bf.load51 = load i32* %side_effects_flag, align 8
  %bf.set53 = or i32 %bf.load51, 256
  store i32 %bf.set53, i32* %side_effects_flag, align 8
  call void @layout_decl(%union.tree_node* %call, i32 0) #5
  %bf.load56 = load i32* %public_flag, align 8
  %bf.clear58 = and i32 %bf.load56, 262144
  %tobool59 = icmp eq i32 %bf.clear58, 0
  br i1 %tobool59, label %return, label %if.then60

if.then60:                                        ; preds = %if.end45
  %12 = alloca [28 x i8], align 1
  %.sub = getelementptr inbounds [28 x i8]* %12, i64 0, i64 0
  %13 = load i32* @var_labelno, align 4, !tbaa !5
  %call61 = call i32 (i8*, i8*, ...)* @sprintf(i8* %.sub, i8* getelementptr inbounds ([6 x i8]* @.str186, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8]* @.str187, i64 0, i64 0), i32 %13) #5
  %14 = load i32* @var_labelno, align 4, !tbaa !5
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* @var_labelno, align 4, !tbaa !5
  %call62 = call %union.tree_node* @get_identifier(i8* %.sub) #5
  %name64 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 8
  store %union.tree_node* %call62, %union.tree_node** %name64, align 8, !tbaa !48
  %bf.load66 = load i64* %0, align 8
  %bf.set76 = or i64 %bf.load66, 71565312
  store i64 %bf.set76, i64* %0, align 8
  %call77 = call %union.tree_node* @pushdecl(%union.tree_node* %call)
  call void @rest_of_decl_compilation(%union.tree_node* %call, i8* null, i32 1, i32 0) #5
  br label %return

return:                                           ; preds = %if.end35, %lor.lhs.false, %if.then60, %if.end45
  %retval.0 = phi %union.tree_node* [ %call49, %if.end45 ], [ %call49, %if.then60 ], [ %8, %lor.lhs.false ], [ %8, %if.end35 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #7

declare %union.tree_node* @build_stmt(i32, ...) #1

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #3

declare i64 @int_size_in_bytes(%union.tree_node*) #1

declare %union.tree_node* @fold(%union.tree_node*) #1

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #1

declare %union.tree_node* @copy_node(%union.tree_node*) #1

declare %union.tree_node* @build_index_type(%union.tree_node*) #1

declare void @layout_type(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @get_parm_info(i32 %void_at_end) #0 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tags.i = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 1
  %1 = load %union.tree_node** %tags.i, align 8, !tbaa !35
  %names.i205 = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 0
  %2 = load %union.tree_node** %names.i205, align 8, !tbaa !34
  %parm_order = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 12
  %3 = load %union.tree_node** %parm_order, align 8, !tbaa !87
  %tobool = icmp ne i32 %void_at_end, 0
  %cmp = icmp ne %union.tree_node* %2, null
  %or.cond = and i1 %tobool, %cmp
  br i1 %or.cond, label %land.lhs.true2, label %for.cond.outer

land.lhs.true2:                                   ; preds = %entry
  %chain = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %union.tree_node** %chain, align 8, !tbaa !29
  %cmp3 = icmp eq %union.tree_node* %4, null
  br i1 %cmp3, label %land.lhs.true4, label %for.cond.outer

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %type = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 1
  %5 = load %union.tree_node** %type, align 8, !tbaa !23
  %code = getelementptr inbounds %union.tree_node* %5, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp7 = icmp eq i32 %bf.clear, 5
  br i1 %cmp7, label %land.lhs.true8, label %for.cond.outer

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %volatile_flag = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load10 = load i32* %volatile_flag, align 8
  %6 = and i32 %bf.load10, 6144
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %land.lhs.true19, label %for.cond.outer

land.lhs.true19:                                  ; preds = %land.lhs.true8
  %regdecl_flag = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 5
  %8 = bitcast i48* %regdecl_flag to i64*
  %bf.load21 = load i64* %8, align 8
  %bf.cast = and i64 %bf.load21, 1024
  %tobool24 = icmp eq i64 %bf.cast, 0
  br i1 %tobool24, label %land.lhs.true25, label %for.cond.outer

land.lhs.true25:                                  ; preds = %land.lhs.true19
  %name = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 8
  %9 = load %union.tree_node** %name, align 8, !tbaa !48
  %cmp27 = icmp eq %union.tree_node* %9, null
  br i1 %cmp27, label %if.then, label %for.cond.outer

if.then:                                          ; preds = %land.lhs.true25
  store %union.tree_node* null, %union.tree_node** %names.i205, align 8, !tbaa !34
  %10 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call28 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %10, %union.tree_node* null) #5
  %call29 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* null, %union.tree_node* %call28) #5
  br label %return

for.cond:                                         ; preds = %for.cond.outer, %if.else
  %decl.0 = phi %union.tree_node* [ %11, %if.else ], [ %decl.0.ph, %for.cond.outer ]
  %tobool30 = icmp eq %union.tree_node* %decl.0, null
  br i1 %tobool30, label %for.cond51.preheader, label %for.body

for.cond51.preheader:                             ; preds = %for.cond
  %tobool52216 = icmp eq %union.tree_node* %3, null
  br i1 %tobool52216, label %cond.end, label %for.body53

for.body:                                         ; preds = %for.cond
  %chain32 = getelementptr inbounds %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 0
  %11 = load %union.tree_node** %chain32, align 8, !tbaa !29
  %code34 = getelementptr inbounds %union.tree_node* %decl.0, i64 0, i32 0, i32 0, i32 2
  %bf.load35 = load i32* %code34, align 8
  %bf.clear36 = and i32 %bf.load35, 255
  %cmp37 = icmp eq i32 %bf.clear36, 35
  br i1 %cmp37, label %if.else, label %for.cond.outer.backedge

for.cond.outer.backedge:                          ; preds = %for.body, %if.then46
  store %union.tree_node* %new_parms.0.ph, %union.tree_node** %chain32, align 8, !tbaa !29
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %entry, %land.lhs.true2, %land.lhs.true4, %land.lhs.true25, %land.lhs.true8, %land.lhs.true19, %for.cond.outer.backedge
  %new_parms.0.ph = phi %union.tree_node* [ %decl.0, %for.cond.outer.backedge ], [ null, %land.lhs.true19 ], [ null, %land.lhs.true8 ], [ null, %land.lhs.true25 ], [ null, %land.lhs.true4 ], [ null, %land.lhs.true2 ], [ null, %entry ]
  %decl.0.ph = phi %union.tree_node* [ %11, %for.cond.outer.backedge ], [ %2, %land.lhs.true19 ], [ %2, %land.lhs.true8 ], [ %2, %land.lhs.true25 ], [ %2, %land.lhs.true4 ], [ %2, %land.lhs.true2 ], [ %2, %entry ]
  br label %for.cond

if.else:                                          ; preds = %for.body
  %bf.clear44 = and i32 %bf.load35, 16384
  %tobool45 = icmp eq i32 %bf.clear44, 0
  br i1 %tobool45, label %for.cond, label %if.then46

if.then46:                                        ; preds = %if.else
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %decl.0, i8* getelementptr inbounds ([46 x i8]* @.str188, i64 0, i64 0)) #5
  br label %for.cond.outer.backedge

for.body53:                                       ; preds = %for.cond51.preheader, %for.inc
  %t.0217 = phi %union.tree_node* [ %19, %for.inc ], [ %3, %for.cond51.preheader ]
  %chain55 = getelementptr inbounds %union.tree_node* %t.0217, i64 0, i32 0, i32 0, i32 0
  %12 = load %union.tree_node** %chain55, align 8, !tbaa !29
  %tobool56 = icmp eq %union.tree_node* %12, null
  br i1 %tobool56, label %if.else64, label %if.then57

if.then57:                                        ; preds = %for.body53
  %value = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 2
  %13 = bitcast i32* %value to %union.tree_node**
  %14 = load %union.tree_node** %13, align 8, !tbaa !50
  %value61 = getelementptr inbounds %union.tree_node* %t.0217, i64 0, i32 0, i32 2
  %15 = bitcast i32* %value61 to %union.tree_node**
  %16 = load %union.tree_node** %15, align 8, !tbaa !50
  %chain63 = getelementptr inbounds %union.tree_node* %16, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %14, %union.tree_node** %chain63, align 8, !tbaa !29
  br label %for.inc

if.else64:                                        ; preds = %for.body53
  %value66 = getelementptr inbounds %union.tree_node* %t.0217, i64 0, i32 0, i32 2
  %17 = bitcast i32* %value66 to %union.tree_node**
  %18 = load %union.tree_node** %17, align 8, !tbaa !50
  %chain68 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* null, %union.tree_node** %chain68, align 8, !tbaa !29
  br label %for.inc

for.inc:                                          ; preds = %if.then57, %if.else64
  %19 = load %union.tree_node** %chain55, align 8, !tbaa !29
  %tobool52 = icmp eq %union.tree_node* %19, null
  br i1 %tobool52, label %for.end72, label %for.body53

for.end72:                                        ; preds = %for.inc
  br i1 %tobool52216, label %cond.end, label %cond.true

cond.true:                                        ; preds = %for.end72
  %value75 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 2
  %20 = bitcast i32* %value75 to %union.tree_node**
  %21 = load %union.tree_node** %20, align 8, !tbaa !50
  %call76 = tail call %union.tree_node* @nreverse(%union.tree_node* %21) #5
  br label %cond.end

cond.end:                                         ; preds = %for.cond51.preheader, %for.end72, %cond.true
  %cond = phi %union.tree_node* [ %call76, %cond.true ], [ null, %for.end72 ], [ null, %for.cond51.preheader ]
  %call77 = tail call %union.tree_node* @chainon(%union.tree_node* %cond, %union.tree_node* %new_parms.0.ph) #5
  %22 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names.i = getelementptr inbounds %struct.binding_level* %22, i64 0, i32 0
  store %union.tree_node* %call77, %union.tree_node** %names.i, align 8, !tbaa !34
  %tobool79211 = icmp eq %union.tree_node* %call77, null
  br i1 %tobool79211, label %for.end150, label %for.body80

for.body80:                                       ; preds = %cond.end, %for.inc147
  %decl.1214 = phi %union.tree_node* [ %29, %for.inc147 ], [ %call77, %cond.end ]
  %types.0213 = phi %union.tree_node* [ %types.1, %for.inc147 ], [ null, %cond.end ]
  %erred.0212 = phi i32 [ %erred.1, %for.inc147 ], [ 0, %cond.end ]
  %code82 = getelementptr inbounds %union.tree_node* %decl.1214, i64 0, i32 0, i32 0, i32 2
  %bf.load83 = load i32* %code82, align 8
  %bf.clear84 = and i32 %bf.load83, 255
  %cmp85 = icmp eq i32 %bf.clear84, 35
  br i1 %cmp85, label %if.then86, label %for.inc147

if.then86:                                        ; preds = %for.body80
  %type89 = getelementptr inbounds %union.tree_node* %decl.1214, i64 0, i32 0, i32 0, i32 1
  %23 = load %union.tree_node** %type89, align 8, !tbaa !23
  %initial = getelementptr inbounds %union.tree_node* %decl.1214, i64 0, i32 0, i32 12
  store %union.tree_node* %23, %union.tree_node** %initial, align 8, !tbaa !40
  %24 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %24, 33554432
  %tobool91 = icmp eq i32 %and, 0
  br i1 %tobool91, label %land.lhs.true92, label %if.end127

land.lhs.true92:                                  ; preds = %if.then86
  %code94 = getelementptr inbounds %union.tree_node* %23, i64 0, i32 0, i32 0, i32 2
  %bf.load95 = load i32* %code94, align 8
  %bf.clear96 = and i32 %bf.load95, 255
  switch i32 %bf.clear96, label %if.end127 [
    i32 6, label %land.lhs.true115
    i32 10, label %land.lhs.true115
    i32 11, label %land.lhs.true115
    i32 12, label %land.lhs.true115
  ]

land.lhs.true115:                                 ; preds = %land.lhs.true92, %land.lhs.true92, %land.lhs.true92, %land.lhs.true92
  %type116 = bitcast %union.tree_node* %23 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type116, i64 0, i32 6
  %bf.load117 = load i32* %precision, align 4
  %bf.clear118 = and i32 %bf.load117, 511
  %25 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type119 = bitcast %union.tree_node* %25 to %struct.tree_type*
  %precision120 = getelementptr inbounds %struct.tree_type* %type119, i64 0, i32 6
  %bf.load121 = load i32* %precision120, align 4
  %bf.clear122 = and i32 %bf.load121, 511
  %cmp123 = icmp ult i32 %bf.clear118, %bf.clear122
  br i1 %cmp123, label %if.then124, label %if.end127

if.then124:                                       ; preds = %land.lhs.true115
  store %union.tree_node* %25, %union.tree_node** %initial, align 8, !tbaa !40
  br label %if.end127

if.end127:                                        ; preds = %land.lhs.true92, %if.then86, %if.then124, %land.lhs.true115
  %call130 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %23, %union.tree_node* %types.0213) #5
  %value132 = getelementptr inbounds %union.tree_node* %call130, i64 0, i32 0, i32 2
  %26 = bitcast i32* %value132 to %union.tree_node**
  %27 = load %union.tree_node** %26, align 8, !tbaa !50
  %code134 = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 0, i32 2
  %bf.load135 = load i32* %code134, align 8
  %bf.clear136 = and i32 %bf.load135, 255
  %cmp137 = icmp ne i32 %bf.clear136, 5
  %tobool139 = icmp ne i32 %erred.0212, 0
  %or.cond159 = or i1 %cmp137, %tobool139
  br i1 %or.cond159, label %for.inc147, label %land.lhs.true140

land.lhs.true140:                                 ; preds = %if.end127
  %name142 = getelementptr inbounds %union.tree_node* %decl.1214, i64 0, i32 0, i32 8
  %28 = load %union.tree_node** %name142, align 8, !tbaa !48
  %cmp143 = icmp eq %union.tree_node* %28, null
  br i1 %cmp143, label %if.then144, label %for.inc147

if.then144:                                       ; preds = %land.lhs.true140
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str189, i64 0, i64 0)) #5
  br label %for.inc147

for.inc147:                                       ; preds = %for.body80, %if.end127, %if.then144, %land.lhs.true140
  %erred.1 = phi i32 [ %erred.0212, %if.end127 ], [ 1, %if.then144 ], [ 0, %land.lhs.true140 ], [ %erred.0212, %for.body80 ]
  %types.1 = phi %union.tree_node* [ %call130, %if.end127 ], [ %call130, %if.then144 ], [ %call130, %land.lhs.true140 ], [ %types.0213, %for.body80 ]
  %chain149 = getelementptr inbounds %union.tree_node* %decl.1214, i64 0, i32 0, i32 0, i32 0
  %29 = load %union.tree_node** %chain149, align 8, !tbaa !29
  %tobool79 = icmp eq %union.tree_node* %29, null
  br i1 %tobool79, label %for.end150, label %for.body80

for.end150:                                       ; preds = %for.inc147, %cond.end
  %types.0.lcssa = phi %union.tree_node* [ null, %cond.end ], [ %types.1, %for.inc147 ]
  br i1 %tobool, label %if.then152, label %if.end156

if.then152:                                       ; preds = %for.end150
  %30 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call153 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %30, %union.tree_node* %types.0.lcssa) #5
  %call154 = tail call %union.tree_node* @nreverse(%union.tree_node* %call153) #5
  %call155 = tail call %union.tree_node* @tree_cons(%union.tree_node* %call77, %union.tree_node* %1, %union.tree_node* %call154) #5
  br label %return

if.end156:                                        ; preds = %for.end150
  %call157 = tail call %union.tree_node* @nreverse(%union.tree_node* %types.0.lcssa) #5
  %call158 = tail call %union.tree_node* @tree_cons(%union.tree_node* %call77, %union.tree_node* %1, %union.tree_node* %call157) #5
  br label %return

return:                                           ; preds = %if.end156, %if.then152, %if.then
  %retval.0 = phi %union.tree_node* [ %call155, %if.then152 ], [ %call158, %if.end156 ], [ %call29, %if.then ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define void @parmlist_tags_warning() #0 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tags = getelementptr inbounds %struct.binding_level* %0, i64 0, i32 1
  %elt.052 = load %union.tree_node** %tags, align 8
  %tobool53 = icmp eq %union.tree_node* %elt.052, null
  br i1 %tobool53, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %elt.054 = phi %union.tree_node* [ %elt.0, %for.inc ], [ %elt.052, %entry ]
  %value = getelementptr inbounds %union.tree_node* %elt.054, i64 0, i32 0, i32 2
  %1 = bitcast i32* %value to %union.tree_node**
  %2 = load %union.tree_node** %1, align 8, !tbaa !50
  %code1 = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 21
  %purpose = getelementptr inbounds %union.tree_node* %elt.054, i64 0, i32 0, i32 1
  %3 = load i8** %purpose, align 8
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %cmp3 = icmp ne i8* %3, null
  %4 = load i32* @pedantic, align 4
  %tobool5 = icmp ne i32 %4, 0
  %or.cond = or i1 %cmp3, %tobool5
  br i1 %or.cond, label %if.end, label %for.inc

if.end:                                           ; preds = %for.body, %land.lhs.true
  %cmp8 = icmp eq i8* %3, null
  %cmp10 = icmp eq i32 %bf.clear, 20
  br i1 %cmp8, label %if.else29, label %if.then9

if.then9:                                         ; preds = %if.end
  %str = getelementptr inbounds i8* %3, i64 32
  %5 = bitcast i8* %str to i8**
  %6 = load i8** %5, align 8, !tbaa !21
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then9
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([43 x i8]* @.str190, i64 0, i64 0), i8* %6) #5
  br label %if.end38

if.else:                                          ; preds = %if.then9
  br i1 %cmp, label %if.then15, label %if.else21

if.then15:                                        ; preds = %if.else
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([42 x i8]* @.str191, i64 0, i64 0), i8* %6) #5
  br label %if.end38

if.else21:                                        ; preds = %if.else
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([41 x i8]* @.str192, i64 0, i64 0), i8* %6) #5
  br label %if.end38

if.else29:                                        ; preds = %if.end
  br i1 %cmp10, label %if.then31, label %if.else32

if.then31:                                        ; preds = %if.else29
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([48 x i8]* @.str193, i64 0, i64 0)) #5
  br label %if.end38

if.else32:                                        ; preds = %if.else29
  br i1 %cmp, label %if.then34, label %if.else35

if.then34:                                        ; preds = %if.else32
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([47 x i8]* @.str194, i64 0, i64 0)) #5
  br label %if.end38

if.else35:                                        ; preds = %if.else32
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([46 x i8]* @.str195, i64 0, i64 0)) #5
  br label %if.end38

if.end38:                                         ; preds = %if.then31, %if.else35, %if.then34, %if.then11, %if.else21, %if.then15
  %.b = load i1* @parmlist_tags_warning.already, align 1
  br i1 %.b, label %for.inc, label %if.then40

if.then40:                                        ; preds = %if.end38
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([86 x i8]* @.str196, i64 0, i64 0)) #5
  store i1 true, i1* @parmlist_tags_warning.already, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end38, %if.then40, %land.lhs.true
  %chain = getelementptr inbounds %union.tree_node* %elt.054, i64 0, i32 0, i32 0, i32 0
  %elt.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %elt.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @xref_tag(i32 %code, %union.tree_node* %name) #0 {
entry:
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tobool35.i = icmp eq %struct.binding_level* %0, null
  br i1 %tobool35.i, label %if.end, label %for.body.us.i

for.body.us.i:                                    ; preds = %entry, %for.end.us.i
  %thislevel.037.us.i = phi i32 [ %.thislevel.037.us.i, %for.end.us.i ], [ 1, %entry ]
  %level.036.us.i = phi %struct.binding_level* [ %4, %for.end.us.i ], [ %0, %entry ]
  %tags.us.i = getelementptr inbounds %struct.binding_level* %level.036.us.i, i64 0, i32 1
  %tail.032.us.i = load %union.tree_node** %tags.us.i, align 8
  %tobool233.us.i = icmp eq %union.tree_node* %tail.032.us.i, null
  br i1 %tobool233.us.i, label %for.end.us.i, label %for.body3.us.i

for.cond1.us.i:                                   ; preds = %for.body3.us.i
  %chain.us.i = getelementptr inbounds %union.tree_node* %tail.034.us.i, i64 0, i32 0, i32 0, i32 0
  %tail.0.us.i = load %union.tree_node** %chain.us.i, align 8
  %tobool2.us.i = icmp eq %union.tree_node* %tail.0.us.i, null
  br i1 %tobool2.us.i, label %for.end.us.i, label %for.body3.us.i

for.body3.us.i:                                   ; preds = %for.body.us.i, %for.cond1.us.i
  %tail.034.us.i = phi %union.tree_node* [ %tail.0.us.i, %for.cond1.us.i ], [ %tail.032.us.i, %for.body.us.i ]
  %purpose.us.i = getelementptr inbounds %union.tree_node* %tail.034.us.i, i64 0, i32 0, i32 1
  %1 = load i8** %purpose.us.i, align 8
  %2 = bitcast i8* %1 to %union.tree_node*
  %cmp.us.i = icmp eq %union.tree_node* %2, %name
  br i1 %cmp.us.i, label %if.then.i, label %for.cond1.us.i

for.end.us.i:                                     ; preds = %for.cond1.us.i, %for.body.us.i
  %tag_transparent.us.i = getelementptr inbounds %struct.binding_level* %level.036.us.i, i64 0, i32 7
  %3 = load i8* %tag_transparent.us.i, align 1, !tbaa !36
  %tobool15.us.i = icmp eq i8 %3, 0
  %.thislevel.037.us.i = select i1 %tobool15.us.i, i32 0, i32 %thislevel.037.us.i
  %level_chain.us.i = getelementptr inbounds %struct.binding_level* %level.036.us.i, i64 0, i32 5
  %4 = load %struct.binding_level** %level_chain.us.i, align 8, !tbaa !38
  %tobool.us.i = icmp eq %struct.binding_level* %4, null
  br i1 %tobool.us.i, label %if.end, label %for.body.us.i

if.then.i:                                        ; preds = %for.body3.us.i
  %value.i = getelementptr inbounds %union.tree_node* %tail.034.us.i, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value.i to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !50
  %code5.i = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code5.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp6.i = icmp eq i32 %bf.clear.i, %code
  br i1 %cmp6.i, label %lookup_tag.exit, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  store %union.tree_node* %name, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  %7 = load i8** @input_filename, align 8, !tbaa !1
  store i8* %7, i8** @pending_invalid_xref_file, align 8, !tbaa !1
  %8 = load i32* @lineno, align 4, !tbaa !5
  store i32 %8, i32* @pending_invalid_xref_line, align 4, !tbaa !5
  %tobool8.i = icmp eq i32 %thislevel.037.us.i, 0
  br i1 %tobool8.i, label %lookup_tag.exitthread-pre-split, label %if.then9.i

if.then9.i:                                       ; preds = %if.then7.i
  %cmp.i.i = icmp eq %union.tree_node* %name, null
  br i1 %cmp.i.i, label %pending_xref_error.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then9.i
  %id.i.i = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds i8** %id.i.i, i64 1
  %10 = load i8** %9, align 8, !tbaa !21
  tail call void (i8*, i32, i8*, ...)* @error_with_file_and_line(i8* %7, i32 %8, i8* getelementptr inbounds ([34 x i8]* @.str155, i64 0, i64 0), i8* %10) #5
  br label %pending_xref_error.exit.i

pending_xref_error.exit.i:                        ; preds = %if.then.i.i, %if.then9.i
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  br label %lookup_tag.exitthread-pre-split

lookup_tag.exitthread-pre-split:                  ; preds = %pending_xref_error.exit.i, %if.then7.i
  %.pr = load %union.tree_node** %5, align 8, !tbaa !50
  br label %lookup_tag.exit

lookup_tag.exit:                                  ; preds = %lookup_tag.exitthread-pre-split, %if.then.i
  %11 = phi %union.tree_node* [ %.pr, %lookup_tag.exitthread-pre-split ], [ %6, %if.then.i ]
  %tobool = icmp eq %union.tree_node* %11, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %lookup_tag.exit
  %code1 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, %code
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %for.end.us.i, %entry, %lookup_tag.exit, %land.lhs.true
  %call2 = tail call %union.tree_node* @make_node(i32 %code) #5
  %cmp3 = icmp eq i32 %code, 10
  br i1 %cmp3, label %if.then4, label %for.cond.i

if.then4:                                         ; preds = %if.end
  %12 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !1
  %type = bitcast %union.tree_node* %12 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load5 = load i32* %mode, align 4
  %bf.clear6 = and i32 %bf.load5, 65024
  %type7 = bitcast %union.tree_node* %call2 to %struct.tree_type*
  %mode8 = getelementptr inbounds %struct.tree_type* %type7, i64 0, i32 6
  %bf.load9 = load i32* %mode8, align 4
  %bf.clear10 = and i32 %bf.load9, -65025
  %bf.set = or i32 %bf.clear10, %bf.clear6
  store i32 %bf.set, i32* %mode8, align 4
  %13 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !1
  %align = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 7
  %14 = bitcast %union.tree_node** %align to i32*
  %15 = load i32* %14, align 4, !tbaa !89
  %align13 = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 7
  %16 = bitcast %union.tree_node** %align13 to i32*
  store i32 %15, i32* %16, align 4, !tbaa !89
  %bf.clear16 = and i32 %bf.set, 2147483647
  store i32 %bf.clear16, i32* %mode8, align 4
  %unsigned_flag = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 2
  %bf.load18 = load i32* %unsigned_flag, align 8
  %bf.set20 = or i32 %bf.load18, 8192
  store i32 %bf.set20, i32* %unsigned_flag, align 8
  %17 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !1
  %type21 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type21, i64 0, i32 6
  %bf.load22 = load i32* %precision, align 4
  %bf.clear23 = and i32 %bf.load22, 511
  %bf.clear28 = and i32 %bf.set, 2147483136
  %bf.set29 = or i32 %bf.clear28, %bf.clear23
  store i32 %bf.set29, i32* %mode8, align 4
  %18 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !1
  %19 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 12
  %20 = load %union.tree_node** %19, align 8, !tbaa !91
  %21 = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 12
  store %union.tree_node* %20, %union.tree_node** %21, align 8, !tbaa !91
  %22 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !1
  %23 = getelementptr inbounds %union.tree_node* %22, i64 0, i32 0, i32 13
  %24 = load %union.tree_node** %23, align 8, !tbaa !82
  %25 = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 13
  store %union.tree_node* %24, %union.tree_node** %25, align 8, !tbaa !82
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end, %if.then4, %for.cond.i
  %b.0.in.i = phi %struct.binding_level** [ %level_chain.i, %for.cond.i ], [ @current_binding_level, %if.then4 ], [ @current_binding_level, %if.end ]
  %b.0.i = load %struct.binding_level** %b.0.in.i, align 8
  %tag_transparent.i = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 7
  %26 = load i8* %tag_transparent.i, align 1, !tbaa !36
  %tobool.i = icmp eq i8 %26, 0
  %level_chain.i = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 5
  br i1 %tobool.i, label %for.end.i, label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i
  %tobool1.i = icmp eq %union.tree_node* %name, null
  br i1 %tobool1.i, label %pushtag.exit, label %if.then.i52

if.then.i52:                                      ; preds = %for.end.i
  %27 = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 11
  %28 = load %union.tree_node** %27, align 8, !tbaa !57
  %cmp.i = icmp eq %union.tree_node* %28, null
  br i1 %cmp.i, label %if.then4.i, label %pushtag.exit

if.then4.i:                                       ; preds = %if.then.i52
  store %union.tree_node* %name, %union.tree_node** %27, align 8, !tbaa !57
  br label %pushtag.exit

pushtag.exit:                                     ; preds = %for.end.i, %if.then.i52, %if.then4.i
  %tags.i = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 1
  %29 = load %union.tree_node** %tags.i, align 8, !tbaa !35
  %call.i = tail call %union.tree_node* @tree_cons(%union.tree_node* %name, %union.tree_node* %call2, %union.tree_node* %29) #5
  store %union.tree_node* %call.i, %union.tree_node** %tags.i, align 8, !tbaa !35
  %call9.i = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %call2) #5
  %call10.i = tail call %union.tree_node* @pushdecl(%union.tree_node* %call9.i) #5
  %chain.i = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call10.i, %union.tree_node** %chain.i, align 8, !tbaa !29
  %context.i = getelementptr inbounds %union.tree_node* %call10.i, i64 0, i32 0, i32 9
  %30 = load %union.tree_node** %context.i, align 8, !tbaa !53
  %context14.i = getelementptr inbounds %union.tree_node* %call2, i64 0, i32 0, i32 17
  %.c.i = bitcast %union.tree_node* %30 to %struct.rtx_def*
  store %struct.rtx_def* %.c.i, %struct.rtx_def** %context14.i, align 8, !tbaa !52
  br label %return

return:                                           ; preds = %land.lhs.true, %pushtag.exit
  %retval.0 = phi %union.tree_node* [ %call2, %pushtag.exit ], [ %11, %land.lhs.true ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @start_struct(i32 %code, %union.tree_node* %name) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %name, null
  br i1 %cmp, label %if.end20, label %if.then

if.then:                                          ; preds = %entry
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tobool35.i = icmp eq %struct.binding_level* %0, null
  br i1 %tobool35.i, label %if.end20, label %for.body.i

for.body.i:                                       ; preds = %if.then, %for.inc21.i
  %level.036.i = phi %struct.binding_level* [ %10, %for.inc21.i ], [ %0, %if.then ]
  %tags.i = getelementptr inbounds %struct.binding_level* %level.036.i, i64 0, i32 1
  %tail.032.i = load %union.tree_node** %tags.i, align 8
  %tobool233.i = icmp eq %union.tree_node* %tail.032.i, null
  br i1 %tobool233.i, label %for.end.i, label %for.body3.i

for.cond1.i:                                      ; preds = %for.body3.i
  %chain.i = getelementptr inbounds %union.tree_node* %tail.034.i, i64 0, i32 0, i32 0, i32 0
  %tail.0.i = load %union.tree_node** %chain.i, align 8
  %tobool2.i = icmp eq %union.tree_node* %tail.0.i, null
  br i1 %tobool2.i, label %for.end.i, label %for.body3.i

for.body3.i:                                      ; preds = %for.body.i, %for.cond1.i
  %tail.034.i = phi %union.tree_node* [ %tail.0.i, %for.cond1.i ], [ %tail.032.i, %for.body.i ]
  %purpose.i = getelementptr inbounds %union.tree_node* %tail.034.i, i64 0, i32 0, i32 1
  %1 = load i8** %purpose.i, align 8
  %2 = bitcast i8* %1 to %union.tree_node*
  %cmp.i = icmp eq %union.tree_node* %2, %name
  br i1 %cmp.i, label %if.then.i, label %for.cond1.i

if.then.i:                                        ; preds = %for.body3.i
  %value.i = getelementptr inbounds %union.tree_node* %tail.034.i, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value.i to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !50
  %code5.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code5.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp6.i = icmp eq i32 %bf.clear.i, %code
  br i1 %cmp6.i, label %if.end, label %pending_xref_error.exit.i

pending_xref_error.exit.i:                        ; preds = %if.then.i
  store %union.tree_node* %name, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  %5 = load i8** @input_filename, align 8, !tbaa !1
  store i8* %5, i8** @pending_invalid_xref_file, align 8, !tbaa !1
  %6 = load i32* @lineno, align 4, !tbaa !5
  store i32 %6, i32* @pending_invalid_xref_line, align 4, !tbaa !5
  %id.i.i = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds i8** %id.i.i, i64 1
  %8 = load i8** %7, align 8, !tbaa !21
  tail call void (i8*, i32, i8*, ...)* @error_with_file_and_line(i8* %5, i32 %6, i8* getelementptr inbounds ([34 x i8]* @.str155, i64 0, i64 0), i8* %8) #5
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  %.pr = load %union.tree_node** %3, align 8, !tbaa !50
  br label %if.end

for.end.i:                                        ; preds = %for.cond1.i, %for.body.i
  %tag_transparent.i = getelementptr inbounds %struct.binding_level* %level.036.i, i64 0, i32 7
  %9 = load i8* %tag_transparent.i, align 1, !tbaa !36
  %tobool15.i = icmp eq i8 %9, 0
  br i1 %tobool15.i, label %if.end20, label %for.inc21.i

for.inc21.i:                                      ; preds = %for.end.i
  %level_chain.i = getelementptr inbounds %struct.binding_level* %level.036.i, i64 0, i32 5
  %10 = load %struct.binding_level** %level_chain.i, align 8, !tbaa !38
  %tobool.i = icmp eq %struct.binding_level* %10, null
  br i1 %tobool.i, label %if.end20, label %for.body.i

if.end:                                           ; preds = %if.then.i, %pending_xref_error.exit.i
  %11 = phi %union.tree_node* [ %4, %if.then.i ], [ %.pr, %pending_xref_error.exit.i ]
  %tobool = icmp eq %union.tree_node* %11, null
  br i1 %tobool, label %if.end20, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %code1 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code1, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp2 = icmp eq i32 %bf.clear, %code
  br i1 %cmp2, label %if.then3, label %if.end20

if.then3:                                         ; preds = %land.lhs.true
  %type = bitcast %union.tree_node* %11 to %struct.tree_type*
  %lang_flag_0 = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load4 = load i32* %lang_flag_0, align 4
  %bf.set = or i32 %bf.load4, 16777216
  store i32 %bf.set, i32* %lang_flag_0, align 4
  %12 = load i32* @flag_pack_struct, align 4, !tbaa !5
  %bf.value = shl i32 %12, 20
  %bf.shl = and i32 %bf.value, 1048576
  %bf.clear8 = and i32 %bf.set, -1048577
  %bf.set9 = or i32 %bf.shl, %bf.clear8
  store i32 %bf.set9, i32* %lang_flag_0, align 4
  %values = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 1
  %13 = load i8** %values, align 8
  %tobool11 = icmp eq i8* %13, null
  br i1 %tobool11, label %return, label %if.then12

if.then12:                                        ; preds = %if.then3
  %cmp13 = icmp eq i32 %code, 21
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds i8** %id, i64 1
  %15 = load i8** %14, align 8, !tbaa !21
  br i1 %cmp13, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.then12
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([27 x i8]* @.str197, i64 0, i64 0), i8* %15) #5
  br label %return

if.else:                                          ; preds = %if.then12
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([28 x i8]* @.str198, i64 0, i64 0), i8* %15) #5
  br label %return

if.end20:                                         ; preds = %for.end.i, %for.inc21.i, %if.then, %entry, %if.end, %land.lhs.true
  %call21 = tail call %union.tree_node* @make_node(i32 %code) #5
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i, %if.end20
  %b.0.in.i = phi %struct.binding_level** [ @current_binding_level, %if.end20 ], [ %level_chain.i51, %for.cond.i ]
  %b.0.i = load %struct.binding_level** %b.0.in.i, align 8
  %tag_transparent.i49 = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 7
  %16 = load i8* %tag_transparent.i49, align 1, !tbaa !36
  %tobool.i50 = icmp eq i8 %16, 0
  %level_chain.i51 = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 5
  br i1 %tobool.i50, label %for.end.i52, label %for.cond.i

for.end.i52:                                      ; preds = %for.cond.i
  br i1 %cmp, label %pushtag.exit, label %if.then.i54

if.then.i54:                                      ; preds = %for.end.i52
  %17 = getelementptr inbounds %union.tree_node* %call21, i64 0, i32 0, i32 11
  %18 = load %union.tree_node** %17, align 8, !tbaa !57
  %cmp.i53 = icmp eq %union.tree_node* %18, null
  br i1 %cmp.i53, label %if.then4.i, label %pushtag.exit

if.then4.i:                                       ; preds = %if.then.i54
  store %union.tree_node* %name, %union.tree_node** %17, align 8, !tbaa !57
  br label %pushtag.exit

pushtag.exit:                                     ; preds = %for.end.i52, %if.then.i54, %if.then4.i
  %tags.i55 = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 1
  %19 = load %union.tree_node** %tags.i55, align 8, !tbaa !35
  %call.i = tail call %union.tree_node* @tree_cons(%union.tree_node* %name, %union.tree_node* %call21, %union.tree_node* %19) #5
  store %union.tree_node* %call.i, %union.tree_node** %tags.i55, align 8, !tbaa !35
  %call9.i = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %call21) #5
  %call10.i = tail call %union.tree_node* @pushdecl(%union.tree_node* %call9.i) #5
  %chain.i56 = getelementptr inbounds %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call10.i, %union.tree_node** %chain.i56, align 8, !tbaa !29
  %context.i = getelementptr inbounds %union.tree_node* %call10.i, i64 0, i32 0, i32 9
  %20 = load %union.tree_node** %context.i, align 8, !tbaa !53
  %context14.i = getelementptr inbounds %union.tree_node* %call21, i64 0, i32 0, i32 17
  %.c.i = bitcast %union.tree_node* %20 to %struct.rtx_def*
  store %struct.rtx_def* %.c.i, %struct.rtx_def** %context14.i, align 8, !tbaa !52
  %type22 = bitcast %union.tree_node* %call21 to %struct.tree_type*
  %lang_flag_023 = getelementptr inbounds %struct.tree_type* %type22, i64 0, i32 6
  %bf.load24 = load i32* %lang_flag_023, align 4
  %bf.set26 = or i32 %bf.load24, 16777216
  store i32 %bf.set26, i32* %lang_flag_023, align 4
  %21 = load i32* @flag_pack_struct, align 4, !tbaa !5
  %bf.value30 = shl i32 %21, 20
  %bf.shl31 = and i32 %bf.value30, 1048576
  %bf.clear32 = and i32 %bf.set26, -1048577
  %bf.set33 = or i32 %bf.shl31, %bf.clear32
  store i32 %bf.set33, i32* %lang_flag_023, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then14, %if.then3, %pushtag.exit
  %retval.0 = phi %union.tree_node* [ %call21, %pushtag.exit ], [ %11, %if.then3 ], [ %11, %if.then14 ], [ %11, %if.else ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @grokfield(i8* nocapture readnone %filename, i32 %line, %union.tree_node* %declarator, %union.tree_node* readonly %declspecs, %union.tree_node* %width) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %declarator, null
  %cmp1 = icmp eq %union.tree_node* %width, null
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end20

if.then:                                          ; preds = %entry
  %value2 = getelementptr inbounds %union.tree_node* %declspecs, i64 0, i32 0, i32 2
  %0 = bitcast i32* %value2 to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !50
  %code = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp3 = icmp eq i32 %bf.clear, 33
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %type6 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type6, align 8, !tbaa !23
  %code8.phi.trans.insert = getelementptr inbounds %union.tree_node* %2, i64 0, i32 0, i32 0, i32 2
  %bf.load9.pre = load i32* %code8.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %bf.load9 = phi i32 [ %bf.load9.pre, %if.then4 ], [ %bf.load, %if.then ]
  %3 = and i32 %bf.load9, 254
  %switch = icmp eq i32 %3, 20
  br i1 %switch, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([66 x i8]* @.str199, i64 0, i64 0)) #5
  br label %return

if.end20:                                         ; preds = %if.end, %entry
  %tobool = icmp ne %union.tree_node* %width, null
  %cond = select i1 %tobool, i32 4, i32 3
  %call = tail call fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 %cond, i32 0)
  tail call void @finish_decl(%union.tree_node* %call, %union.tree_node* null, %union.tree_node* null)
  %initial = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 12
  store %union.tree_node* %width, %union.tree_node** %initial, align 8, !tbaa !40
  tail call void @maybe_objc_check_decl(%union.tree_node* %call) #5
  br label %return

return:                                           ; preds = %if.end20, %if.then18
  %retval.0 = phi %union.tree_node* [ null, %if.then18 ], [ %call, %if.end20 ]
  ret %union.tree_node* %retval.0
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @finish_struct(%union.tree_node* %t, %union.tree_node* %fieldlist, %union.tree_node* %attributes) #0 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  %fieldlist.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8, !tbaa !1
  store %union.tree_node* %fieldlist, %union.tree_node** %fieldlist.addr, align 8
  %0 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %cmp = icmp eq %struct.binding_level* %0, %1
  %conv = zext i1 %cmp to i32
  %size = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %2 = bitcast i32* %size to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %2, align 8, !tbaa !80
  %call = call %union.tree_node* @decl_attributes(%union.tree_node** %t.addr, %union.tree_node* %attributes, i32 8) #5
  %3 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %code = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp1 = icmp eq i32 %bf.clear, 21
  br i1 %cmp1, label %land.lhs.true, label %land.lhs.true6

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 11
  %5 = load %union.tree_node** %4, align 8, !tbaa !57
  %cmp4 = icmp eq %union.tree_node* %5, null
  %6 = load i32* @pedantic, align 4
  %tobool = icmp ne i32 %6, 0
  %or.cond = or i1 %cmp4, %tobool
  br i1 %or.cond, label %if.end29, label %if.then

land.lhs.true6:                                   ; preds = %entry
  %.old = load i32* @pedantic, align 4, !tbaa !5
  %tobool.old = icmp eq i32 %.old, 0
  br i1 %tobool.old, label %if.then, label %for.cond.preheader

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true
  %7 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %parm_flag.i = getelementptr inbounds %struct.binding_level* %7, i64 0, i32 6
  %8 = load i8* %parm_flag.i, align 1, !tbaa !37
  %tobool8 = icmp ne i8 %8, 0
  %9 = load i32* @flag_traditional, align 4
  %tobool18 = icmp eq i32 %9, 0
  %or.cond1084 = and i1 %tobool8, %tobool18
  br i1 %or.cond1084, label %if.then19, label %for.cond53.preheader

if.then19:                                        ; preds = %if.then
  %cond26 = select i1 %cmp1, i8* getelementptr inbounds ([6 x i8]* @.str201, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str202, i64 0, i64 0)
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([24 x i8]* @.str200, i64 0, i64 0), i8* %cond26) #5
  %.pr.pre = load i32* @pedantic, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then19, %land.lhs.true
  %10 = phi i32 [ %6, %land.lhs.true ], [ %.pr.pre, %if.then19 ]
  %tobool30 = icmp eq i32 %10, 0
  br i1 %tobool30, label %for.cond53.preheader, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end29, %land.lhs.true6
  %cond10201061 = icmp eq %union.tree_node* %fieldlist, null
  br i1 %cond10201061, label %if.then41, label %for.body

for.cond:                                         ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node* %x.01062, i64 0, i32 0, i32 0, i32 0
  %x.0 = load %union.tree_node** %chain, align 8
  %cond1020 = icmp eq %union.tree_node* %x.0, null
  br i1 %cond1020, label %if.then41, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %x.01062 = phi %union.tree_node* [ %x.0, %for.cond ], [ %fieldlist, %for.cond.preheader ]
  %name33 = getelementptr inbounds %union.tree_node* %x.01062, i64 0, i32 0, i32 8
  %11 = load %union.tree_node** %name33, align 8, !tbaa !48
  %cmp34 = icmp eq %union.tree_node* %11, null
  br i1 %cmp34, label %for.cond, label %for.cond53.preheader

if.then41:                                        ; preds = %for.cond, %for.cond.preheader
  %12 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %code43 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 2
  %bf.load44 = load i32* %code43, align 8
  %bf.clear45 = and i32 %bf.load44, 255
  %cmp46 = icmp eq i32 %bf.clear45, 21
  %cond48 = select i1 %cmp46, i8* getelementptr inbounds ([6 x i8]* @.str201, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str204, i64 0, i64 0)
  %tobool49 = icmp ne %union.tree_node* %fieldlist, null
  %cond50 = select i1 %tobool49, i8* getelementptr inbounds ([14 x i8]* @.str205, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str206, i64 0, i64 0)
  call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([13 x i8]* @.str203, i64 0, i64 0), i8* %cond48, i8* %cond50) #5
  br label %for.cond53.preheader

for.cond53.preheader:                             ; preds = %for.body, %if.then, %if.end29, %if.then41
  %tobool541056 = icmp eq %union.tree_node* %fieldlist, null
  br i1 %tobool541056, label %for.end689thread-pre-split, label %for.body55

for.body55:                                       ; preds = %for.cond53.preheader, %if.end620
  %x.11058 = phi %union.tree_node* [ %x.1, %if.end620 ], [ %fieldlist, %for.cond53.preheader ]
  %saw_named_field.01057 = phi i32 [ %saw_named_field.0., %if.end620 ], [ 0, %for.cond53.preheader ]
  %13 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %context = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 9
  store %union.tree_node* %13, %union.tree_node** %context, align 8, !tbaa !53
  %14 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %type57 = bitcast %union.tree_node* %14 to %struct.tree_type*
  %packed_flag = getelementptr inbounds %struct.tree_type* %type57, i64 0, i32 6
  %bf.load58 = load i32* %packed_flag, align 4
  %bf.lshr = lshr i32 %bf.load58, 20
  %regdecl_flag = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 5
  %15 = bitcast i48* %regdecl_flag to i64*
  %bf.load61 = load i64* %15, align 8
  %bf.lshr62 = lshr i64 %bf.load61, 10
  %bf.lshr62.tr = trunc i64 %bf.lshr62 to i32
  %bf.cast1012 = or i32 %bf.lshr62.tr, %bf.lshr
  %16 = zext i32 %bf.cast1012 to i64
  %bf.value = shl nuw nsw i64 %16, 10
  %bf.shl = and i64 %bf.value, 1024
  %bf.clear65 = and i64 %bf.load61, -1025
  %bf.set = or i64 %bf.shl, %bf.clear65
  store i64 %bf.set, i64* %15, align 8
  %readonly_flag = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 0, i32 2
  %bf.load67 = load i32* %readonly_flag, align 8
  %bf.clear69 = and i32 %bf.load67, 4096
  %tobool70 = icmp eq i32 %bf.clear69, 0
  br i1 %tobool70, label %while.cond, label %if.then71

if.then71:                                        ; preds = %for.body55
  %17 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %lang_flag_1 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 2
  %bf.load73 = load i32* %lang_flag_1, align 8
  %bf.set75 = or i32 %bf.load73, 33554432
  store i32 %bf.set75, i32* %lang_flag_1, align 8
  br label %if.end113

while.cond:                                       ; preds = %for.body55, %while.cond
  %x.1.pn = phi %union.tree_node* [ %t1.0, %while.cond ], [ %x.11058, %for.body55 ]
  %t1.0.in = getelementptr inbounds %union.tree_node* %x.1.pn, i64 0, i32 0, i32 0, i32 1
  %t1.0 = load %union.tree_node** %t1.0.in, align 8
  %code80 = getelementptr inbounds %union.tree_node* %t1.0, i64 0, i32 0, i32 0, i32 2
  %bf.load81 = load i32* %code80, align 8
  %bf.clear82 = and i32 %bf.load81, 255
  switch i32 %bf.clear82, label %if.end113 [
    i32 18, label %while.cond
    i32 20, label %land.lhs.true99
    i32 21, label %land.lhs.true99
  ]

land.lhs.true99:                                  ; preds = %while.cond, %while.cond
  %bf.clear104 = and i32 %bf.load81, 33554432
  %tobool105 = icmp eq i32 %bf.clear104, 0
  br i1 %tobool105, label %if.end113, label %if.then106

if.then106:                                       ; preds = %land.lhs.true99
  %18 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %lang_flag_1108 = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 2
  %bf.load109 = load i32* %lang_flag_1108, align 8
  %bf.set111 = or i32 %bf.load109, 33554432
  store i32 %bf.set111, i32* %lang_flag_1108, align 8
  br label %if.end113

if.end113:                                        ; preds = %while.cond, %land.lhs.true99, %if.then106, %if.then71
  %bf.load115 = load i32* %readonly_flag, align 8
  %bf.clear117 = and i32 %bf.load115, 2048
  %tobool118 = icmp eq i32 %bf.clear117, 0
  br i1 %tobool118, label %if.end124, label %if.then119

if.then119:                                       ; preds = %if.end113
  %19 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %lang_flag_2 = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 0, i32 2
  %bf.load121 = load i32* %lang_flag_2, align 8
  %bf.set123 = or i32 %bf.load121, 67108864
  store i32 %bf.set123, i32* %lang_flag_2, align 8
  br label %if.end124

if.end124:                                        ; preds = %if.end113, %if.then119
  %bf.load126 = load i64* %15, align 8
  %bf.cast129 = and i64 %bf.load126, 137438953472
  %tobool130 = icmp eq i64 %bf.cast129, 0
  br i1 %tobool130, label %if.end137, label %if.then131

if.then131:                                       ; preds = %if.end124
  %20 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %type132 = bitcast %union.tree_node* %20 to %struct.tree_type*
  %lang_flag_1133 = getelementptr inbounds %struct.tree_type* %type132, i64 0, i32 6
  %bf.load134 = load i32* %lang_flag_1133, align 4
  %bf.set136 = or i32 %bf.load134, 33554432
  store i32 %bf.set136, i32* %lang_flag_1133, align 4
  br label %if.end137

if.end137:                                        ; preds = %if.end124, %if.then131
  %type139 = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 0, i32 1
  %21 = load %union.tree_node** %type139, align 8, !tbaa !23
  %22 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %cmp140 = icmp eq %union.tree_node* %21, %22
  br i1 %cmp140, label %if.then142, label %if.end145

if.then142:                                       ; preds = %if.end137
  %23 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 11
  %24 = load %union.tree_node** %23, align 8, !tbaa !57
  %id = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds i8** %id, i64 1
  %26 = load i8** %25, align 8, !tbaa !21
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([28 x i8]* @.str207, i64 0, i64 0), i8* %26) #5
  br label %if.end145

if.end145:                                        ; preds = %if.then142, %if.end137
  %initial = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 12
  %27 = load %union.tree_node** %initial, align 8, !tbaa !40
  %tobool147 = icmp eq %union.tree_node* %27, null
  br i1 %tobool147, label %if.end314.thread1080, label %while.cond149.preheader

while.cond149.preheader:                          ; preds = %if.end145
  %code1531050 = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 0, i32 2
  %bf.load1541051 = load i32* %code1531050, align 8
  %bf.clear1551052 = and i32 %bf.load1541051, 255
  %bf.clear155.off1053 = add i32 %bf.clear1551052, -114
  %switch1054 = icmp ult i32 %bf.clear155.off1053, 3
  br i1 %switch1054, label %land.lhs.true176, label %if.then216

land.lhs.true176:                                 ; preds = %while.cond149.preheader, %while.body203
  %28 = phi %union.tree_node* [ %29, %while.body203 ], [ %27, %while.cond149.preheader ]
  %operands = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %29 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %30 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp179 = icmp eq %union.tree_node* %29, %30
  br i1 %cmp179, label %if.end212, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true176
  %type184 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 0, i32 1
  %31 = load %union.tree_node** %type184, align 8, !tbaa !23
  %type185 = bitcast %union.tree_node* %31 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type185, i64 0, i32 6
  %bf.load186 = load i32* %mode, align 4
  %type195 = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 0, i32 1
  %32 = load %union.tree_node** %type195, align 8, !tbaa !23
  %type196 = bitcast %union.tree_node* %32 to %struct.tree_type*
  %mode197 = getelementptr inbounds %struct.tree_type* %type196, i64 0, i32 6
  %bf.load198 = load i32* %mode197, align 4
  %bf.lshr1871014 = xor i32 %bf.load198, %bf.load186
  %33 = and i32 %bf.lshr1871014, 65024
  %cmp201 = icmp eq i32 %33, 0
  br i1 %cmp201, label %while.body203, label %if.then216

while.body203:                                    ; preds = %land.rhs
  store %union.tree_node* %29, %union.tree_node** %initial, align 8, !tbaa !40
  %code153 = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 0, i32 2
  %bf.load154 = load i32* %code153, align 8
  %bf.clear155 = and i32 %bf.load154, 255
  %bf.clear155.off = add i32 %bf.clear155, -114
  %switch = icmp ult i32 %bf.clear155.off, 3
  br i1 %switch, label %land.lhs.true176, label %if.end212

if.end212:                                        ; preds = %land.lhs.true176, %while.body203
  %.pr1022 = phi %union.tree_node* [ %29, %while.body203 ], [ %28, %land.lhs.true176 ]
  %tobool215 = icmp eq %union.tree_node* %.pr1022, null
  br i1 %tobool215, label %if.end314.thread1080, label %if.then216

if.then216:                                       ; preds = %land.rhs, %while.cond149.preheader, %if.end212
  %.pr10221075 = phi %union.tree_node* [ %.pr1022, %if.end212 ], [ %27, %while.cond149.preheader ], [ %28, %land.rhs ]
  %code220 = getelementptr inbounds %union.tree_node* %.pr10221075, i64 0, i32 0, i32 0, i32 2
  %bf.load221 = load i32* %code220, align 8
  %bf.clear222 = and i32 %bf.load221, 255
  %cmp223 = icmp eq i32 %bf.clear222, 25
  br i1 %cmp223, label %if.end232, label %if.else228

if.else228:                                       ; preds = %if.then216
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([45 x i8]* @.str208, i64 0, i64 0)) #5
  store %union.tree_node* null, %union.tree_node** %initial, align 8, !tbaa !40
  br label %if.end314.thread1080

if.end232:                                        ; preds = %if.then216
  call void @constant_expression_warning(%union.tree_node* %.pr10221075) #5
  %.pr1024.pr = load %union.tree_node** %initial, align 8, !tbaa !40
  %tobool235 = icmp eq %union.tree_node* %.pr1024.pr, null
  br i1 %tobool235, label %if.end314.thread1080, label %land.lhs.true236

land.lhs.true236:                                 ; preds = %if.end232
  %34 = load %union.tree_node** %type139, align 8, !tbaa !23
  %code240 = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 0, i32 2
  %bf.load241 = load i32* %code240, align 8
  %bf.clear242 = and i32 %bf.load241, 255
  switch i32 %bf.clear242, label %if.then263 [
    i32 6, label %if.end266
    i32 11, label %if.end266
    i32 10, label %if.end266
  ]

if.then263:                                       ; preds = %land.lhs.true236
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([32 x i8]* @.str209, i64 0, i64 0)) #5
  store %union.tree_node* null, %union.tree_node** %initial, align 8, !tbaa !40
  br label %if.end314.thread1080

if.end314.thread1080:                             ; preds = %if.then263, %if.end232, %if.end212, %if.else228, %if.end145
  %35 = load %union.tree_node** %type139, align 8, !tbaa !23
  br label %if.else494

if.end266:                                        ; preds = %land.lhs.true236, %land.lhs.true236, %land.lhs.true236
  %36 = load i32* @pedantic, align 4
  %tobool271 = icmp eq i32 %36, 0
  br i1 %tobool271, label %if.end314.thread, label %land.lhs.true272

land.lhs.true272:                                 ; preds = %if.end266
  %37 = load %union.tree_node** %type139, align 8, !tbaa !23
  %type275 = bitcast %union.tree_node* %37 to %struct.tree_type*
  %38 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 15
  %39 = load %union.tree_node** %38, align 8, !tbaa !67
  %40 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %cmp276 = icmp eq %union.tree_node* %39, %40
  %41 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8
  %cmp283 = icmp eq %union.tree_node* %39, %41
  %or.cond1016 = or i1 %cmp276, %cmp283
  %42 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 19), align 8
  %cmp290 = icmp eq %union.tree_node* %39, %42
  %or.cond1018 = or i1 %or.cond1016, %cmp290
  br i1 %or.cond1018, label %if.end314.thread, label %land.lhs.true292

land.lhs.true292:                                 ; preds = %land.lhs.true272
  %code296 = getelementptr inbounds %union.tree_node* %37, i64 0, i32 0, i32 0, i32 2
  %bf.load297 = load i32* %code296, align 8
  %bf.clear298 = and i32 %bf.load297, 255
  %cmp299 = icmp eq i32 %bf.clear298, 10
  br i1 %cmp299, label %land.lhs.true301, label %if.then313

land.lhs.true301:                                 ; preds = %land.lhs.true292
  %precision = getelementptr inbounds %struct.tree_type* %type275, i64 0, i32 6
  %bf.load305 = load i32* %precision, align 4
  %type307 = bitcast %union.tree_node* %40 to %struct.tree_type*
  %precision308 = getelementptr inbounds %struct.tree_type* %type307, i64 0, i32 6
  %bf.load309 = load i32* %precision308, align 4
  %43 = xor i32 %bf.load309, %bf.load305
  %44 = and i32 %43, 511
  %cmp311 = icmp eq i32 %44, 0
  br i1 %cmp311, label %if.end314, label %if.then313

if.then313:                                       ; preds = %land.lhs.true301, %land.lhs.true292
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([37 x i8]* @.str210, i64 0, i64 0)) #5
  %.pr1026.pre = load %union.tree_node** %initial, align 8, !tbaa !40
  br label %if.end314

if.end314.thread:                                 ; preds = %if.end266, %land.lhs.true272
  %45 = load %union.tree_node** %type139, align 8, !tbaa !23
  br label %if.then318

if.end314:                                        ; preds = %if.then313, %land.lhs.true301
  %46 = phi %union.tree_node* [ %.pr1024.pr, %land.lhs.true301 ], [ %.pr1026.pre, %if.then313 ]
  %tobool317 = icmp eq %union.tree_node* %46, null
  %47 = load %union.tree_node** %type139, align 8, !tbaa !23
  br i1 %tobool317, label %if.else494, label %if.then318

if.then318:                                       ; preds = %if.end314.thread, %if.end314
  %48 = phi %union.tree_node* [ %45, %if.end314.thread ], [ %47, %if.end314 ]
  %49 = phi %union.tree_node* [ %.pr1024.pr, %if.end314.thread ], [ %46, %if.end314 ]
  %50 = getelementptr inbounds %union.tree_node* %48, i64 0, i32 0, i32 15
  %51 = load %union.tree_node** %50, align 8, !tbaa !67
  %52 = load %union.tree_node** getelementptr inbounds ([32 x %union.tree_node*]* @c_global_trees, i64 0, i64 19), align 8, !tbaa !1
  %cmp323 = icmp eq %union.tree_node* %51, %52
  br i1 %cmp323, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then318
  %type321 = bitcast %union.tree_node* %48 to %struct.tree_type*
  %precision328 = getelementptr inbounds %struct.tree_type* %type321, i64 0, i32 6
  %bf.load329 = load i32* %precision328, align 4
  %bf.clear330 = and i32 %bf.load329, 511
  %phitmp1013 = zext i32 %bf.clear330 to i64
  br label %cond.end

cond.end:                                         ; preds = %if.then318, %cond.false
  %cond331 = phi i64 [ %phitmp1013, %cond.false ], [ 8, %if.then318 ]
  %call334 = call i32 @tree_int_cst_sgn(%union.tree_node* %49) #5
  %cmp335 = icmp slt i32 %call334, 0
  br i1 %cmp335, label %if.then337, label %if.else338

if.then337:                                       ; preds = %cond.end
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([33 x i8]* @.str211, i64 0, i64 0)) #5
  br label %if.end567

if.else338:                                       ; preds = %cond.end
  %53 = load %union.tree_node** %initial, align 8, !tbaa !40
  %call342 = call i32 @compare_tree_int(%union.tree_node* %53, i64 %cond331) #5
  %cmp343 = icmp sgt i32 %call342, 0
  br i1 %cmp343, label %if.then345, label %if.else346

if.then345:                                       ; preds = %if.else338
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([31 x i8]* @.str212, i64 0, i64 0)) #5
  br label %if.end567

if.else346:                                       ; preds = %if.else338
  %54 = load %union.tree_node** %initial, align 8, !tbaa !40
  %call349 = call i32 @integer_zerop(%union.tree_node* %54) #5
  %tobool350 = icmp eq i32 %call349, 0
  br i1 %tobool350, label %if.else357, label %land.lhs.true351

land.lhs.true351:                                 ; preds = %if.else346
  %name353 = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 8
  %55 = load %union.tree_node** %name353, align 8, !tbaa !48
  %cmp354 = icmp eq %union.tree_node* %55, null
  br i1 %cmp354, label %if.else357, label %if.then356

if.then356:                                       ; preds = %land.lhs.true351
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([30 x i8]* @.str213, i64 0, i64 0)) #5
  br label %if.end567

if.else357:                                       ; preds = %land.lhs.true351, %if.else346
  %56 = load %union.tree_node** %initial, align 8, !tbaa !40
  %call360 = call i64 @tree_low_cst(%union.tree_node* %56, i32 1) #5
  %57 = load %union.tree_node** %type139, align 8, !tbaa !23
  %code364 = getelementptr inbounds %union.tree_node* %57, i64 0, i32 0, i32 0, i32 2
  %bf.load365 = load i32* %code364, align 8
  %bf.clear366 = and i32 %bf.load365, 255
  %cmp367 = icmp eq i32 %bf.clear366, 10
  br i1 %cmp367, label %land.lhs.true369, label %if.end399

land.lhs.true369:                                 ; preds = %if.else357
  %58 = getelementptr inbounds %union.tree_node* %57, i64 0, i32 0, i32 12
  %59 = load %union.tree_node** %58, align 8, !tbaa !91
  %bf.lshr377 = lshr i32 %bf.load365, 13
  %bf.clear378 = and i32 %bf.lshr377, 1
  %call379 = call i32 @min_precision(%union.tree_node* %59, i32 %bf.clear378) #5
  %conv380 = zext i32 %call379 to i64
  %cmp381 = icmp ult i64 %call360, %conv380
  br i1 %cmp381, label %if.then398, label %lor.lhs.false383

lor.lhs.false383:                                 ; preds = %land.lhs.true369
  %60 = load %union.tree_node** %type139, align 8, !tbaa !23
  %61 = getelementptr inbounds %union.tree_node* %60, i64 0, i32 0, i32 13
  %62 = load %union.tree_node** %61, align 8, !tbaa !82
  %unsigned_flag390 = getelementptr inbounds %union.tree_node* %60, i64 0, i32 0, i32 0, i32 2
  %bf.load391 = load i32* %unsigned_flag390, align 8
  %bf.lshr392 = lshr i32 %bf.load391, 13
  %bf.clear393 = and i32 %bf.lshr392, 1
  %call394 = call i32 @min_precision(%union.tree_node* %62, i32 %bf.clear393) #5
  %conv395 = zext i32 %call394 to i64
  %cmp396 = icmp ult i64 %call360, %conv395
  br i1 %cmp396, label %if.then398, label %if.end399

if.then398:                                       ; preds = %lor.lhs.false383, %land.lhs.true369
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([41 x i8]* @.str214, i64 0, i64 0)) #5
  br label %if.end399

if.end399:                                        ; preds = %if.then398, %lor.lhs.false383, %if.else357
  %call400 = call %union.tree_node* @size_int_wide(i64 %call360, i32 3) #5
  %size402 = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 4
  store %union.tree_node* %call400, %union.tree_node** %size402, align 8, !tbaa !69
  %bf.load404 = load i64* %15, align 8
  %bf.set410 = or i64 %bf.load404, 2199023259648
  store i64 %bf.set410, i64* %15, align 8
  %cmp411 = icmp eq i64 %call360, 0
  br i1 %cmp411, label %land.lhs.true413, label %if.end567

land.lhs.true413:                                 ; preds = %if.end399
  %63 = load i1 (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 9), align 8, !tbaa !92
  %64 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %call414 = call zeroext i1 %63(%union.tree_node* %64) #5
  br i1 %call414, label %if.end567, label %if.then415

if.then415:                                       ; preds = %land.lhs.true413
  %u1 = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 6
  %65 = bitcast %union.anon* %u1 to i32*
  %bf.load417 = load i32* %65, align 4
  %bf.clear418 = and i32 %bf.load417, 16777215
  %66 = load i32* @target_flags, align 4, !tbaa !5
  %and = lshr i32 %66, 20
  %67 = and i32 %and, 32
  %68 = add i32 %67, 32
  %cmp421 = icmp ugt i32 %bf.clear418, %68
  %bf.clear418. = select i1 %cmp421, i32 %bf.load417, i32 %68
  %bf.value439 = and i32 %bf.clear418., 16777215
  %bf.clear440 = and i32 %bf.load417, -16777216
  %bf.set441 = or i32 %bf.value439, %bf.clear440
  store i32 %bf.set441, i32* %65, align 4
  %69 = load %union.tree_node** %type139, align 8, !tbaa !23
  %align = getelementptr inbounds %union.tree_node* %69, i64 0, i32 0, i32 7
  %70 = bitcast %union.tree_node** %align to i32*
  %71 = load i32* %70, align 4, !tbaa !89
  %cmp450 = icmp ugt i32 %bf.value439, %71
  %cond464 = select i1 %cmp450, i32 %bf.clear418., i32 %71
  %bf.value469 = and i32 %cond464, 16777215
  %bf.set471 = or i32 %bf.value469, %bf.clear440
  store i32 %bf.set471, i32* %65, align 4
  %type474 = bitcast %union.tree_node* %69 to %struct.tree_type*
  %user_align = getelementptr inbounds %struct.tree_type* %type474, i64 0, i32 6
  %bf.load475 = load i32* %user_align, align 4
  %bf.lshr476 = lshr i32 %bf.load475, 31
  %bf.load479 = load i64* %15, align 8
  %bf.lshr480 = lshr i64 %bf.load479, 35
  %bf.lshr480.tr = trunc i64 %bf.lshr480 to i32
  %or483 = or i32 %bf.lshr480.tr, %bf.lshr476
  %72 = zext i32 %or483 to i64
  %bf.value485 = shl nuw i64 %72, 35
  %bf.shl486 = and i64 %bf.value485, 34359738368
  %bf.clear487 = and i64 %bf.load479, -34359738369
  %bf.set488 = or i64 %bf.shl486, %bf.clear487
  store i64 %bf.set488, i64* %15, align 8
  br label %if.end567

if.else494:                                       ; preds = %if.end314.thread1080, %if.end314
  %73 = phi %union.tree_node* [ %35, %if.end314.thread1080 ], [ %47, %if.end314 ]
  %74 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp497 = icmp eq %union.tree_node* %73, %74
  br i1 %cmp497, label %if.end567, label %if.then499

if.then499:                                       ; preds = %if.else494
  %bf.load502 = load i64* %15, align 8
  %bf.cast505 = and i64 %bf.load502, 1024
  %tobool506 = icmp eq i64 %bf.cast505, 0
  br i1 %tobool506, label %cond.false508, label %cond.end513

cond.false508:                                    ; preds = %if.then499
  %align512 = getelementptr inbounds %union.tree_node* %73, i64 0, i32 0, i32 7
  %75 = bitcast %union.tree_node** %align512 to i32*
  %76 = load i32* %75, align 4, !tbaa !89
  br label %cond.end513

cond.end513:                                      ; preds = %if.then499, %cond.false508
  %tobool506.pr = phi i1 [ false, %if.then499 ], [ %tobool506, %cond.false508 ]
  %cond514 = phi i32 [ 8, %if.then499 ], [ %76, %cond.false508 ]
  %u1516 = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 6
  %77 = bitcast %union.anon* %u1516 to i32*
  %bf.load518 = load i32* %77, align 4
  %bf.clear519 = and i32 %bf.load518, 16777215
  %cmp520 = icmp ugt i32 %bf.clear519, %cond514
  %bf.clear519.cond514 = select i1 %cmp520, i32 %bf.load518, i32 %cond514
  %bf.value535 = and i32 %bf.clear519.cond514, 16777215
  %bf.clear536 = and i32 %bf.load518, -16777216
  %bf.set537 = or i32 %bf.value535, %bf.clear536
  store i32 %bf.set537, i32* %77, align 4
  br i1 %tobool506.pr, label %if.then545, label %if.end567

if.then545:                                       ; preds = %cond.end513
  %type548 = bitcast %union.tree_node* %73 to %struct.tree_type*
  %user_align549 = getelementptr inbounds %struct.tree_type* %type548, i64 0, i32 6
  %bf.load550 = load i32* %user_align549, align 4
  %bf.lshr551 = lshr i32 %bf.load550, 31
  %bf.lshr555 = lshr i64 %bf.load502, 35
  %bf.lshr555.tr = trunc i64 %bf.lshr555 to i32
  %or558 = or i32 %bf.lshr551, %bf.lshr555.tr
  %78 = zext i32 %or558 to i64
  %bf.value560 = shl nuw i64 %78, 35
  %bf.shl561 = and i64 %bf.value560, 34359738368
  %bf.clear562 = and i64 %bf.load502, -34359738369
  %bf.set563 = or i64 %bf.shl561, %bf.clear562
  store i64 %bf.set563, i64* %15, align 8
  br label %if.end567

if.end567:                                        ; preds = %cond.end513, %if.else494, %if.then545, %if.then337, %if.then356, %if.then415, %land.lhs.true413, %if.end399, %if.then345
  store %union.tree_node* null, %union.tree_node** %initial, align 8, !tbaa !40
  %79 = load %union.tree_node** %type139, align 8, !tbaa !23
  %code573 = getelementptr inbounds %union.tree_node* %79, i64 0, i32 0, i32 0, i32 2
  %bf.load574 = load i32* %code573, align 8
  %bf.clear575 = and i32 %bf.load574, 255
  %cmp576 = icmp eq i32 %bf.clear575, 18
  br i1 %cmp576, label %land.lhs.true578, label %if.end620

land.lhs.true578:                                 ; preds = %if.end567
  %size582 = getelementptr inbounds %union.tree_node* %79, i64 0, i32 0, i32 2
  %80 = bitcast i32* %size582 to %union.tree_node**
  %81 = load %union.tree_node** %80, align 8, !tbaa !80
  %cmp583 = icmp eq %union.tree_node* %81, null
  br i1 %cmp583, label %land.lhs.true585, label %if.end620

land.lhs.true585:                                 ; preds = %land.lhs.true578
  %values = getelementptr inbounds %union.tree_node* %79, i64 0, i32 0, i32 1
  %82 = load i8** %values, align 8
  %cmp589 = icmp eq i8* %82, null
  br i1 %cmp589, label %if.end620, label %land.lhs.true591

land.lhs.true591:                                 ; preds = %land.lhs.true585
  %maxval597 = getelementptr inbounds i8* %82, i64 112
  %83 = bitcast i8* %maxval597 to %union.tree_node**
  %84 = load %union.tree_node** %83, align 8, !tbaa !82
  %cmp598 = icmp eq %union.tree_node* %84, null
  br i1 %cmp598, label %if.then600, label %if.end620

if.then600:                                       ; preds = %land.lhs.true591
  %85 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %code602 = getelementptr inbounds %union.tree_node* %85, i64 0, i32 0, i32 0, i32 2
  %bf.load603 = load i32* %code602, align 8
  %bf.clear604 = and i32 %bf.load603, 255
  %cmp605 = icmp eq i32 %bf.clear604, 21
  br i1 %cmp605, label %if.then607, label %if.else608

if.then607:                                       ; preds = %if.then600
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([31 x i8]* @.str215, i64 0, i64 0)) #5
  br label %if.end620

if.else608:                                       ; preds = %if.then600
  %chain610 = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 0, i32 0
  %86 = load %union.tree_node** %chain610, align 8, !tbaa !29
  %cmp611 = icmp eq %union.tree_node* %86, null
  br i1 %cmp611, label %if.else614, label %if.then613

if.then613:                                       ; preds = %if.else608
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([43 x i8]* @.str216, i64 0, i64 0)) #5
  br label %if.end620

if.else614:                                       ; preds = %if.else608
  %tobool615 = icmp eq i32 %saw_named_field.01057, 0
  br i1 %tobool615, label %if.then616, label %if.end620

if.then616:                                       ; preds = %if.else614
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %x.11058, i8* getelementptr inbounds ([48 x i8]* @.str217, i64 0, i64 0)) #5
  br label %if.end620

if.end620:                                        ; preds = %if.else614, %land.lhs.true585, %if.then607, %if.then616, %if.then613, %land.lhs.true591, %land.lhs.true578, %if.end567
  %name622 = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 8
  %87 = load %union.tree_node** %name622, align 8, !tbaa !48
  %tobool623 = icmp eq %union.tree_node* %87, null
  %saw_named_field.0. = select i1 %tobool623, i32 %saw_named_field.01057, i32 1
  %chain628 = getelementptr inbounds %union.tree_node* %x.11058, i64 0, i32 0, i32 0, i32 0
  %x.1 = load %union.tree_node** %chain628, align 8
  %tobool54 = icmp eq %union.tree_node* %x.1, null
  br i1 %tobool54, label %for.end629, label %for.body55

for.end629:                                       ; preds = %if.end620
  %fieldlist.addr.0.fieldlist.addr.0.1008.pre = load %union.tree_node** %fieldlist.addr, align 8
  %tobool6311047 = icmp eq %union.tree_node* %fieldlist.addr.0.fieldlist.addr.0.1008.pre, null
  br i1 %tobool6311047, label %for.end689, label %land.rhs632.lr.ph

land.rhs632.lr.ph:                                ; preds = %while.end666, %for.body637, %for.end629
  %x.2.ph1048 = phi %union.tree_node* [ %fieldlist.addr.0.fieldlist.addr.0.1008.pre, %for.end629 ], [ %88, %for.body637 ], [ %88, %while.end666 ]
  %chain634 = getelementptr inbounds %union.tree_node* %x.2.ph1048, i64 0, i32 0, i32 0, i32 0
  %.pre = load %union.tree_node** %chain634, align 8, !tbaa !29
  br label %land.rhs632

land.rhs632:                                      ; preds = %if.then675, %land.rhs632.lr.ph
  %88 = phi %union.tree_node* [ %.pre, %land.rhs632.lr.ph ], [ %92, %if.then675 ]
  %tobool635 = icmp eq %union.tree_node* %88, null
  br i1 %tobool635, label %for.end689thread-pre-split, label %for.body637

for.body637:                                      ; preds = %land.rhs632
  %name641 = getelementptr inbounds %union.tree_node* %88, i64 0, i32 0, i32 8
  %89 = load %union.tree_node** %name641, align 8, !tbaa !48
  %cmp642 = icmp eq %union.tree_node* %89, null
  br i1 %cmp642, label %land.rhs632.lr.ph, label %while.body649

while.body649:                                    ; preds = %for.body637, %while.body649
  %y.0.in = phi %union.tree_node** [ %chain665, %while.body649 ], [ %fieldlist.addr, %for.body637 ]
  %y.0 = load %union.tree_node** %y.0.in, align 8
  %name651 = getelementptr inbounds %union.tree_node* %y.0, i64 0, i32 0, i32 8
  %90 = load %union.tree_node** %name651, align 8, !tbaa !48
  %cmp656 = icmp eq %union.tree_node* %90, %89
  %cmp660 = icmp eq %union.tree_node* %y.0, %x.2.ph1048
  %or.cond1019 = or i1 %cmp656, %cmp660
  %chain665 = getelementptr inbounds %union.tree_node* %y.0, i64 0, i32 0, i32 0, i32 0
  br i1 %or.cond1019, label %while.end666, label %while.body649

while.end666:                                     ; preds = %while.body649
  br i1 %cmp656, label %if.then675, label %land.rhs632.lr.ph

if.then675:                                       ; preds = %while.end666
  call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %88, i8* getelementptr inbounds ([22 x i8]* @.str218, i64 0, i64 0)) #5
  %91 = load %union.tree_node** %chain634, align 8, !tbaa !29
  %chain681 = getelementptr inbounds %union.tree_node* %91, i64 0, i32 0, i32 0, i32 0
  %92 = load %union.tree_node** %chain681, align 8, !tbaa !29
  store %union.tree_node* %92, %union.tree_node** %chain634, align 8, !tbaa !29
  br label %land.rhs632

for.end689thread-pre-split:                       ; preds = %land.rhs632, %for.cond53.preheader
  %fieldlist.addr.0.fieldlist.addr.0.1010.pr = load %union.tree_node** %fieldlist.addr, align 8
  br label %for.end689

for.end689:                                       ; preds = %for.end689thread-pre-split, %for.end629
  %fieldlist.addr.0.fieldlist.addr.0.1010 = phi %union.tree_node* [ %fieldlist.addr.0.fieldlist.addr.0.1010.pr, %for.end689thread-pre-split ], [ null, %for.end629 ]
  %93 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %values691 = getelementptr inbounds %union.tree_node* %93, i64 0, i32 0, i32 1
  %fieldlist.addr.0.1010.c = bitcast %union.tree_node* %fieldlist.addr.0.fieldlist.addr.0.1010 to i8*
  store i8* %fieldlist.addr.0.1010.c, i8** %values691, align 8, !tbaa !24
  %94 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  call void @layout_type(%union.tree_node* %94) #5
  %tobool69310441045 = icmp eq %union.tree_node* %fieldlist.addr.0.fieldlist.addr.0.1010, null
  br i1 %tobool69310441045, label %while.end712, label %while.body694.lr.ph

while.body694.lr.ph:                              ; preds = %for.end689, %if.else708
  %95 = phi %union.tree_node* [ %99, %if.else708 ], [ %fieldlist.addr.0.fieldlist.addr.0.1010, %for.end689 ]
  %fieldlistp.0.ph1046 = phi %union.tree_node** [ %chain710, %if.else708 ], [ %fieldlist.addr, %for.end689 ]
  br label %while.body694

while.body694:                                    ; preds = %while.body694.lr.ph, %if.then705
  %96 = phi %union.tree_node* [ %95, %while.body694.lr.ph ], [ %98, %if.then705 ]
  %code696 = getelementptr inbounds %union.tree_node* %96, i64 0, i32 0, i32 0, i32 2
  %bf.load697 = load i32* %code696, align 8
  %bf.clear698 = and i32 %bf.load697, 255
  %cmp699 = icmp eq i32 %bf.clear698, 37
  br i1 %cmp699, label %land.lhs.true701, label %if.else708

land.lhs.true701:                                 ; preds = %while.body694
  %initial703 = getelementptr inbounds %union.tree_node* %96, i64 0, i32 0, i32 12
  %97 = load %union.tree_node** %initial703, align 8, !tbaa !40
  %tobool704 = icmp eq %union.tree_node* %97, null
  br i1 %tobool704, label %if.else708, label %if.then705

if.then705:                                       ; preds = %land.lhs.true701
  %chain707 = getelementptr inbounds %union.tree_node* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %union.tree_node** %chain707, align 8, !tbaa !29
  store %union.tree_node* %98, %union.tree_node** %fieldlistp.0.ph1046, align 8, !tbaa !1
  %tobool693 = icmp eq %union.tree_node* %98, null
  br i1 %tobool693, label %while.end712, label %while.body694

if.else708:                                       ; preds = %land.lhs.true701, %while.body694
  %chain710 = getelementptr inbounds %union.tree_node* %96, i64 0, i32 0, i32 0, i32 0
  %99 = load %union.tree_node** %chain710, align 8, !tbaa !1
  %tobool6931044 = icmp eq %union.tree_node* %99, null
  br i1 %tobool6931044, label %while.end712, label %while.body694.lr.ph

while.end712:                                     ; preds = %if.else708, %if.then705, %for.end689
  %fieldlist.addr.0.fieldlist.addr.0.1011 = load %union.tree_node** %fieldlist.addr, align 8
  %100 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %values714 = getelementptr inbounds %union.tree_node* %100, i64 0, i32 0, i32 1
  %fieldlist.addr.0.1011.c = bitcast %union.tree_node* %fieldlist.addr.0.fieldlist.addr.0.1011 to i8*
  store i8* %fieldlist.addr.0.1011.c, i8** %values714, align 8, !tbaa !24
  %101 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %102 = getelementptr inbounds %union.tree_node* %101, i64 0, i32 0, i32 15
  %x.31040 = load %union.tree_node** %102, align 8
  %tobool7181041 = icmp eq %union.tree_node* %x.31040, null
  br i1 %tobool7181041, label %for.end744, label %for.body719

for.body719:                                      ; preds = %while.end712, %for.body719
  %103 = phi %union.tree_node* [ %114, %for.body719 ], [ %101, %while.end712 ]
  %x.31042 = phi %union.tree_node* [ %x.3, %for.body719 ], [ %x.31040, %while.end712 ]
  %values721 = getelementptr inbounds %union.tree_node* %103, i64 0, i32 0, i32 1
  %104 = load i8** %values721, align 8
  %type722 = bitcast %union.tree_node* %x.31042 to %struct.tree_type*
  %values723 = getelementptr inbounds %union.tree_node* %x.31042, i64 0, i32 0, i32 1
  store i8* %104, i8** %values723, align 8, !tbaa !24
  %105 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %lang_specific = getelementptr inbounds %union.tree_node* %105, i64 0, i32 0, i32 19
  %106 = bitcast %union.anon.1* %lang_specific to %struct.lang_type**
  %107 = load %struct.lang_type** %106, align 8, !tbaa !93
  %108 = getelementptr inbounds %union.tree_node* %x.31042, i64 0, i32 0, i32 19, i32 0
  %.c = bitcast %struct.lang_type* %107 to %struct.function*
  store %struct.function* %.c, %struct.function** %108, align 8, !tbaa !93
  %109 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %align728 = getelementptr inbounds %union.tree_node* %109, i64 0, i32 0, i32 7
  %110 = bitcast %union.tree_node** %align728 to i32*
  %111 = load i32* %110, align 4, !tbaa !89
  %align730 = getelementptr inbounds %union.tree_node* %x.31042, i64 0, i32 0, i32 7
  %112 = bitcast %union.tree_node** %align730 to i32*
  store i32 %111, i32* %112, align 4, !tbaa !89
  %type731 = bitcast %union.tree_node* %109 to %struct.tree_type*
  %user_align732 = getelementptr inbounds %struct.tree_type* %type731, i64 0, i32 6
  %bf.load733 = load i32* %user_align732, align 4
  %bf.lshr734 = and i32 %bf.load733, -2147483648
  %user_align736 = getelementptr inbounds %struct.tree_type* %type722, i64 0, i32 6
  %bf.load737 = load i32* %user_align736, align 4
  %bf.clear740 = and i32 %bf.load737, 2147483647
  %bf.set741 = or i32 %bf.clear740, %bf.lshr734
  store i32 %bf.set741, i32* %user_align736, align 4
  %113 = getelementptr inbounds %union.tree_node* %x.31042, i64 0, i32 0, i32 14
  %x.3 = load %union.tree_node** %113, align 8
  %tobool718 = icmp eq %union.tree_node* %x.3, null
  %114 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  br i1 %tobool718, label %for.end744, label %for.body719

for.end744:                                       ; preds = %for.body719, %while.end712
  %.lcssa = phi %union.tree_node* [ %101, %while.end712 ], [ %114, %for.body719 ]
  %code746 = getelementptr inbounds %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 2
  %bf.load747 = load i32* %code746, align 8
  %bf.clear748 = and i32 %bf.load747, 255
  %cmp749 = icmp eq i32 %bf.clear748, 21
  br i1 %cmp749, label %land.lhs.true751, label %if.end777

land.lhs.true751:                                 ; preds = %for.end744
  %type752 = bitcast %union.tree_node* %.lcssa to %struct.tree_type*
  %transparent_union_flag = getelementptr inbounds %struct.tree_type* %type752, i64 0, i32 6
  %bf.load753 = load i32* %transparent_union_flag, align 4
  %bf.clear755 = and i32 %bf.load753, 524288
  %tobool756 = icmp eq i32 %bf.clear755, 0
  br i1 %tobool756, label %if.end777, label %land.lhs.true757

land.lhs.true757:                                 ; preds = %land.lhs.true751
  %bf.lshr761 = lshr i32 %bf.load753, 9
  %bf.clear762 = and i32 %bf.lshr761, 127
  %values764 = getelementptr inbounds %union.tree_node* %.lcssa, i64 0, i32 0, i32 1
  %115 = load i8** %values764, align 8
  %mode766 = getelementptr inbounds i8* %115, i64 48
  %116 = bitcast i8* %mode766 to i64*
  %bf.load767 = load i64* %116, align 8
  %bf.load767.tr = trunc i64 %bf.load767 to i32
  %bf.cast769 = and i32 %bf.load767.tr, 255
  %cmp770 = icmp eq i32 %bf.clear762, %bf.cast769
  br i1 %cmp770, label %if.end777, label %if.then772

if.then772:                                       ; preds = %land.lhs.true757
  %bf.clear776 = and i32 %bf.load753, -524289
  store i32 %bf.clear776, i32* %transparent_union_flag, align 4
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([33 x i8]* @.str219, i64 0, i64 0)) #5
  br label %if.end777

if.end777:                                        ; preds = %land.lhs.true757, %land.lhs.true751, %if.then772, %for.end744
  %117 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %n_incomplete = getelementptr inbounds %struct.binding_level* %117, i64 0, i32 11
  %118 = load i32* %n_incomplete, align 4, !tbaa !81
  %cmp778 = icmp eq i32 %118, 0
  br i1 %cmp778, label %if.end868, label %if.then780

if.then780:                                       ; preds = %if.end777
  %names = getelementptr inbounds %struct.binding_level* %117, i64 0, i32 0
  %decl781.01036 = load %union.tree_node** %names, align 8
  %tobool7831037 = icmp eq %union.tree_node* %decl781.01036, null
  br i1 %tobool7831037, label %if.end868, label %for.body784

for.body784:                                      ; preds = %if.then780, %for.inc864
  %decl781.01038 = phi %union.tree_node* [ %decl781.0, %for.inc864 ], [ %decl781.01036, %if.then780 ]
  %type786 = getelementptr inbounds %union.tree_node* %decl781.01038, i64 0, i32 0, i32 0, i32 1
  %119 = load %union.tree_node** %type786, align 8, !tbaa !23
  %120 = getelementptr inbounds %union.tree_node* %119, i64 0, i32 0, i32 15
  %121 = load %union.tree_node** %120, align 8, !tbaa !67
  %122 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  %123 = getelementptr inbounds %union.tree_node* %122, i64 0, i32 0, i32 15
  %124 = load %union.tree_node** %123, align 8, !tbaa !67
  %cmp791 = icmp eq %union.tree_node* %121, %124
  br i1 %cmp791, label %land.lhs.true793, label %if.else809

land.lhs.true793:                                 ; preds = %for.body784
  %code795 = getelementptr inbounds %union.tree_node* %decl781.01038, i64 0, i32 0, i32 0, i32 2
  %bf.load796 = load i32* %code795, align 8
  %bf.clear797 = and i32 %bf.load796, 255
  %cmp798 = icmp eq i32 %bf.clear797, 33
  br i1 %cmp798, label %if.else809, label %if.then800

if.then800:                                       ; preds = %land.lhs.true793
  call void @layout_decl(%union.tree_node* %decl781.01038, i32 0) #5
  call void @maybe_objc_check_decl(%union.tree_node* %decl781.01038) #5
  call void @rest_of_decl_compilation(%union.tree_node* %decl781.01038, i8* null, i32 %conv, i32 0) #5
  br i1 %cmp, label %if.end803, label %if.then802

if.then802:                                       ; preds = %if.then800
  call void @expand_decl(%union.tree_node* %decl781.01038) #5
  br label %if.end803

if.end803:                                        ; preds = %if.then802, %if.then800
  %125 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %n_incomplete804 = getelementptr inbounds %struct.binding_level* %125, i64 0, i32 11
  %126 = load i32* %n_incomplete804, align 4, !tbaa !81
  %dec = add nsw i32 %126, -1
  store i32 %dec, i32* %n_incomplete804, align 4, !tbaa !81
  %cmp805 = icmp eq i32 %dec, 0
  br i1 %cmp805, label %if.end868, label %for.inc864

if.else809:                                       ; preds = %land.lhs.true793, %for.body784
  %size813 = getelementptr inbounds %union.tree_node* %119, i64 0, i32 0, i32 2
  %127 = bitcast i32* %size813 to %union.tree_node**
  %128 = load %union.tree_node** %127, align 8, !tbaa !80
  %cmp814 = icmp eq %union.tree_node* %128, null
  br i1 %cmp814, label %land.lhs.true816, label %for.inc864

land.lhs.true816:                                 ; preds = %if.else809
  %code820 = getelementptr inbounds %union.tree_node* %119, i64 0, i32 0, i32 0, i32 2
  %bf.load821 = load i32* %code820, align 8
  %bf.clear822 = and i32 %bf.load821, 255
  %cmp823 = icmp eq i32 %bf.clear822, 18
  br i1 %cmp823, label %while.body835, label %for.inc864

while.body835:                                    ; preds = %land.lhs.true816, %while.body835
  %element.01035 = phi %union.tree_node* [ %129, %while.body835 ], [ %119, %land.lhs.true816 ]
  %type837 = getelementptr inbounds %union.tree_node* %element.01035, i64 0, i32 0, i32 0, i32 1
  %129 = load %union.tree_node** %type837, align 8, !tbaa !23
  %code830 = getelementptr inbounds %union.tree_node* %129, i64 0, i32 0, i32 0, i32 2
  %bf.load831 = load i32* %code830, align 8
  %bf.clear832 = and i32 %bf.load831, 255
  %cmp833 = icmp eq i32 %bf.clear832, 18
  br i1 %cmp833, label %while.body835, label %while.end838

while.end838:                                     ; preds = %while.body835
  %cmp839 = icmp eq %union.tree_node* %129, %122
  br i1 %cmp839, label %if.then841, label %for.inc864

if.then841:                                       ; preds = %while.end838
  call fastcc void @layout_array_type(%union.tree_node* %119)
  %code845 = getelementptr inbounds %union.tree_node* %decl781.01038, i64 0, i32 0, i32 0, i32 2
  %bf.load846 = load i32* %code845, align 8
  %bf.clear847 = and i32 %bf.load846, 255
  %cmp848 = icmp eq i32 %bf.clear847, 33
  br i1 %cmp848, label %if.end854, label %if.then850

if.then850:                                       ; preds = %if.then841
  call void @layout_decl(%union.tree_node* %decl781.01038, i32 0) #5
  call void @maybe_objc_check_decl(%union.tree_node* %decl781.01038) #5
  call void @rest_of_decl_compilation(%union.tree_node* %decl781.01038, i8* null, i32 %conv, i32 0) #5
  br i1 %cmp, label %if.end854, label %if.then852

if.then852:                                       ; preds = %if.then850
  call void @expand_decl(%union.tree_node* %decl781.01038) #5
  br label %if.end854

if.end854:                                        ; preds = %if.then841, %if.then850, %if.then852
  %130 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %n_incomplete855 = getelementptr inbounds %struct.binding_level* %130, i64 0, i32 11
  %131 = load i32* %n_incomplete855, align 4, !tbaa !81
  %dec856 = add nsw i32 %131, -1
  store i32 %dec856, i32* %n_incomplete855, align 4, !tbaa !81
  %cmp857 = icmp eq i32 %dec856, 0
  br i1 %cmp857, label %if.end868, label %for.inc864

for.inc864:                                       ; preds = %if.else809, %if.end803, %while.end838, %if.end854, %land.lhs.true816
  %chain866 = getelementptr inbounds %union.tree_node* %decl781.01038, i64 0, i32 0, i32 0, i32 0
  %decl781.0 = load %union.tree_node** %chain866, align 8
  %tobool783 = icmp eq %union.tree_node* %decl781.0, null
  br i1 %tobool783, label %if.end868, label %for.body784

if.end868:                                        ; preds = %if.end854, %if.end803, %for.inc864, %if.then780, %if.end777
  %132 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  call void @rest_of_type_compilation(%union.tree_node* %132, i32 %conv) #5
  %133 = load %union.tree_node** %t.addr, align 8, !tbaa !1
  ret %union.tree_node* %133
}

declare i32 @compare_tree_int(%union.tree_node*, i64) #1

declare i32 @integer_zerop(%union.tree_node*) #1

declare i64 @tree_low_cst(%union.tree_node*, i32) #1

declare i32 @min_precision(%union.tree_node*, i32) #1

declare %union.tree_node* @size_int_wide(i64, i32) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @layout_array_type(%union.tree_node* %t) #0 {
entry:
  %type = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 1
  %0 = load %union.tree_node** %type, align 8, !tbaa !23
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 18
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call fastcc void @layout_array_type(%union.tree_node* %0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void @layout_type(%union.tree_node* %t) #5
  ret void
}

declare void @rest_of_type_compilation(%union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @start_enum(%union.tree_node* %name) #0 {
entry:
  %cmp = icmp eq %union.tree_node* %name, null
  br i1 %cmp, label %if.then3, label %if.then

if.then:                                          ; preds = %entry
  %0 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tobool35.i = icmp eq %struct.binding_level* %0, null
  br i1 %tobool35.i, label %if.then3, label %for.body.i

for.body.i:                                       ; preds = %if.then, %for.inc21.i
  %level.036.i = phi %struct.binding_level* [ %10, %for.inc21.i ], [ %0, %if.then ]
  %tags.i = getelementptr inbounds %struct.binding_level* %level.036.i, i64 0, i32 1
  %tail.032.i = load %union.tree_node** %tags.i, align 8
  %tobool233.i = icmp eq %union.tree_node* %tail.032.i, null
  br i1 %tobool233.i, label %for.end.i, label %for.body3.i

for.cond1.i:                                      ; preds = %for.body3.i
  %chain.i = getelementptr inbounds %union.tree_node* %tail.034.i, i64 0, i32 0, i32 0, i32 0
  %tail.0.i = load %union.tree_node** %chain.i, align 8
  %tobool2.i = icmp eq %union.tree_node* %tail.0.i, null
  br i1 %tobool2.i, label %for.end.i, label %for.body3.i

for.body3.i:                                      ; preds = %for.body.i, %for.cond1.i
  %tail.034.i = phi %union.tree_node* [ %tail.0.i, %for.cond1.i ], [ %tail.032.i, %for.body.i ]
  %purpose.i = getelementptr inbounds %union.tree_node* %tail.034.i, i64 0, i32 0, i32 1
  %1 = load i8** %purpose.i, align 8
  %2 = bitcast i8* %1 to %union.tree_node*
  %cmp.i = icmp eq %union.tree_node* %2, %name
  br i1 %cmp.i, label %if.then.i, label %for.cond1.i

if.then.i:                                        ; preds = %for.body3.i
  %value.i = getelementptr inbounds %union.tree_node* %tail.034.i, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value.i to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !50
  %code5.i = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load.i = load i32* %code5.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 255
  %cmp6.i = icmp eq i32 %bf.clear.i, 10
  br i1 %cmp6.i, label %if.end, label %pending_xref_error.exit.i

pending_xref_error.exit.i:                        ; preds = %if.then.i
  store %union.tree_node* %name, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  %5 = load i8** @input_filename, align 8, !tbaa !1
  store i8* %5, i8** @pending_invalid_xref_file, align 8, !tbaa !1
  %6 = load i32* @lineno, align 4, !tbaa !5
  store i32 %6, i32* @pending_invalid_xref_line, align 4, !tbaa !5
  %id.i.i = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds i8** %id.i.i, i64 1
  %8 = load i8** %7, align 8, !tbaa !21
  tail call void (i8*, i32, i8*, ...)* @error_with_file_and_line(i8* %5, i32 %6, i8* getelementptr inbounds ([34 x i8]* @.str155, i64 0, i64 0), i8* %8) #5
  store %union.tree_node* null, %union.tree_node** @pending_invalid_xref, align 8, !tbaa !1
  %.pr = load %union.tree_node** %3, align 8, !tbaa !50
  br label %if.end

for.end.i:                                        ; preds = %for.cond1.i, %for.body.i
  %tag_transparent.i = getelementptr inbounds %struct.binding_level* %level.036.i, i64 0, i32 7
  %9 = load i8* %tag_transparent.i, align 1, !tbaa !36
  %tobool15.i = icmp eq i8 %9, 0
  br i1 %tobool15.i, label %if.then3, label %for.inc21.i

for.inc21.i:                                      ; preds = %for.end.i
  %level_chain.i = getelementptr inbounds %struct.binding_level* %level.036.i, i64 0, i32 5
  %10 = load %struct.binding_level** %level_chain.i, align 8, !tbaa !38
  %tobool.i = icmp eq %struct.binding_level* %10, null
  br i1 %tobool.i, label %if.then3, label %for.body.i

if.end:                                           ; preds = %if.then.i, %pending_xref_error.exit.i
  %11 = phi %union.tree_node* [ %4, %if.then.i ], [ %.pr, %pending_xref_error.exit.i ]
  %cmp1 = icmp eq %union.tree_node* %11, null
  br i1 %cmp1, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %code = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp2 = icmp eq i32 %bf.clear, 10
  br i1 %cmp2, label %if.end5, label %if.then3

if.then3:                                         ; preds = %for.end.i, %for.inc21.i, %if.then, %entry, %lor.lhs.false, %if.end
  %call4 = tail call %union.tree_node* @make_node(i32 10) #5
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i, %if.then3
  %b.0.in.i = phi %struct.binding_level** [ @current_binding_level, %if.then3 ], [ %level_chain.i32, %for.cond.i ]
  %b.0.i = load %struct.binding_level** %b.0.in.i, align 8
  %tag_transparent.i30 = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 7
  %12 = load i8* %tag_transparent.i30, align 1, !tbaa !36
  %tobool.i31 = icmp eq i8 %12, 0
  %level_chain.i32 = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 5
  br i1 %tobool.i31, label %for.end.i33, label %for.cond.i

for.end.i33:                                      ; preds = %for.cond.i
  br i1 %cmp, label %pushtag.exit, label %if.then.i35

if.then.i35:                                      ; preds = %for.end.i33
  %13 = getelementptr inbounds %union.tree_node* %call4, i64 0, i32 0, i32 11
  %14 = load %union.tree_node** %13, align 8, !tbaa !57
  %cmp.i34 = icmp eq %union.tree_node* %14, null
  br i1 %cmp.i34, label %if.then4.i, label %pushtag.exit

if.then4.i:                                       ; preds = %if.then.i35
  store %union.tree_node* %name, %union.tree_node** %13, align 8, !tbaa !57
  br label %pushtag.exit

pushtag.exit:                                     ; preds = %for.end.i33, %if.then.i35, %if.then4.i
  %tags.i36 = getelementptr inbounds %struct.binding_level* %b.0.i, i64 0, i32 1
  %15 = load %union.tree_node** %tags.i36, align 8, !tbaa !35
  %call.i = tail call %union.tree_node* @tree_cons(%union.tree_node* %name, %union.tree_node* %call4, %union.tree_node* %15) #5
  store %union.tree_node* %call.i, %union.tree_node** %tags.i36, align 8, !tbaa !35
  %call9.i = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* null, %union.tree_node* %call4) #5
  %call10.i = tail call %union.tree_node* @pushdecl(%union.tree_node* %call9.i) #5
  %chain.i37 = getelementptr inbounds %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call10.i, %union.tree_node** %chain.i37, align 8, !tbaa !29
  %context.i = getelementptr inbounds %union.tree_node* %call10.i, i64 0, i32 0, i32 9
  %16 = load %union.tree_node** %context.i, align 8, !tbaa !53
  %context14.i = getelementptr inbounds %union.tree_node* %call4, i64 0, i32 0, i32 17
  %.c.i = bitcast %union.tree_node* %16 to %struct.rtx_def*
  store %struct.rtx_def* %.c.i, %struct.rtx_def** %context14.i, align 8, !tbaa !52
  br label %if.end5

if.end5:                                          ; preds = %lor.lhs.false, %pushtag.exit
  %enumtype.1 = phi %union.tree_node* [ %call4, %pushtag.exit ], [ %11, %lor.lhs.false ]
  %type = bitcast %union.tree_node* %enumtype.1 to %struct.tree_type*
  %lang_flag_0 = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load6 = load i32* %lang_flag_0, align 4
  %bf.set = or i32 %bf.load6, 16777216
  store i32 %bf.set, i32* %lang_flag_0, align 4
  %values = getelementptr inbounds %union.tree_node* %enumtype.1, i64 0, i32 0, i32 1
  %17 = load i8** %values, align 8
  %cmp9 = icmp eq i8* %17, null
  br i1 %cmp9, label %if.end13, label %if.then10

if.then10:                                        ; preds = %if.end5
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds i8** %id, i64 1
  %19 = load i8** %18, align 8, !tbaa !21
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([27 x i8]* @.str220, i64 0, i64 0), i8* %19) #5
  store i8* null, i8** %values, align 8, !tbaa !24
  br label %if.end13

if.end13:                                         ; preds = %if.end5, %if.then10
  %20 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !1
  store %union.tree_node* %20, %union.tree_node** @enum_next_value, align 8, !tbaa !1
  store i32 0, i32* @enum_overflow, align 4, !tbaa !5
  %21 = load i32* @flag_short_enums, align 4, !tbaa !5
  %tobool = icmp eq i32 %21, 0
  br i1 %tobool, label %if.end19, label %if.then14

if.then14:                                        ; preds = %if.end13
  %bf.load16 = load i32* %lang_flag_0, align 4
  %bf.set18 = or i32 %bf.load16, 1048576
  store i32 %bf.set18, i32* %lang_flag_0, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.end13, %if.then14
  ret %union.tree_node* %enumtype.1
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @finish_enum(%union.tree_node* %enumtype, %union.tree_node* %values, %union.tree_node* %attributes) #0 {
entry:
  %enumtype.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %enumtype, %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %0 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %cmp = icmp eq %struct.binding_level* %0, %1
  %conv = zext i1 %cmp to i32
  %parm_flag.i = getelementptr inbounds %struct.binding_level* %1, i64 0, i32 6
  %2 = load i8* %parm_flag.i, align 1, !tbaa !37
  %tobool = icmp eq i8 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([26 x i8]* @.str221, i64 0, i64 0)) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %call1 = call %union.tree_node* @decl_attributes(%union.tree_node** %enumtype.addr, %union.tree_node* %attributes, i32 8) #5
  %3 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp2 = icmp eq %union.tree_node* %3, %values
  br i1 %cmp2, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %4 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !1
  br label %if.end19

if.else:                                          ; preds = %if.end
  %value = getelementptr inbounds %union.tree_node* %values, i64 0, i32 0, i32 2
  %5 = bitcast i32* %value to %union.tree_node**
  %6 = load %union.tree_node** %5, align 8, !tbaa !50
  %pair.0.in288 = getelementptr inbounds %union.tree_node* %values, i64 0, i32 0, i32 0, i32 0
  %pair.0289 = load %union.tree_node** %pair.0.in288, align 8
  %tobool5290 = icmp eq %union.tree_node* %pair.0289, null
  br i1 %tobool5290, label %if.end19, label %for.body

for.body:                                         ; preds = %if.else, %for.body
  %pair.0293 = phi %union.tree_node* [ %pair.0, %for.body ], [ %pair.0289, %if.else ]
  %minnode.0292 = phi %union.tree_node* [ %minnode.1, %for.body ], [ %6, %if.else ]
  %maxnode.0291 = phi %union.tree_node* [ %maxnode.0., %for.body ], [ %6, %if.else ]
  %value8 = getelementptr inbounds %union.tree_node* %pair.0293, i64 0, i32 0, i32 2
  %7 = bitcast i32* %value8 to %union.tree_node**
  %8 = load %union.tree_node** %7, align 8, !tbaa !50
  %call9 = call i32 @tree_int_cst_lt(%union.tree_node* %maxnode.0291, %union.tree_node* %8) #5
  %tobool10 = icmp eq i32 %call9, 0
  %maxnode.0. = select i1 %tobool10, %union.tree_node* %maxnode.0291, %union.tree_node* %8
  %call13 = call i32 @tree_int_cst_lt(%union.tree_node* %8, %union.tree_node* %minnode.0292) #5
  %tobool14 = icmp eq i32 %call13, 0
  %minnode.1 = select i1 %tobool14, %union.tree_node* %minnode.0292, %union.tree_node* %8
  %pair.0.in = getelementptr inbounds %union.tree_node* %pair.0293, i64 0, i32 0, i32 0, i32 0
  %pair.0 = load %union.tree_node** %pair.0.in, align 8
  %tobool5 = icmp eq %union.tree_node* %pair.0, null
  br i1 %tobool5, label %if.end19, label %for.body

if.end19:                                         ; preds = %for.body, %if.else, %if.then4
  %maxnode.2 = phi %union.tree_node* [ %4, %if.then4 ], [ %6, %if.else ], [ %maxnode.0., %for.body ]
  %minnode.2 = phi %union.tree_node* [ %4, %if.then4 ], [ %6, %if.else ], [ %minnode.1, %for.body ]
  %call20 = call i32 @tree_int_cst_sgn(%union.tree_node* %minnode.2) #5
  %call20.lobit = lshr i32 %call20, 31
  %call20.lobit.not = xor i32 %call20.lobit, 1
  %call23 = call i32 @min_precision(%union.tree_node* %minnode.2, i32 %call20.lobit.not) #5
  %call24 = call i32 @min_precision(%union.tree_node* %maxnode.2, i32 %call20.lobit.not) #5
  %cmp25 = icmp ugt i32 %call23, %call24
  br i1 %cmp25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end19
  %call27 = call i32 @min_precision(%union.tree_node* %minnode.2, i32 %call20.lobit.not) #5
  br label %cond.end

cond.false:                                       ; preds = %if.end19
  %call28 = call i32 @min_precision(%union.tree_node* %maxnode.2, i32 %call20.lobit.not) #5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call27, %cond.true ], [ %call28, %cond.false ]
  %9 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %type = bitcast %union.tree_node* %9 to %struct.tree_type*
  %packed_flag = getelementptr inbounds %struct.tree_type* %type, i64 0, i32 6
  %bf.load = load i32* %packed_flag, align 4
  %bf.clear = and i32 %bf.load, 1048576
  %tobool29 = icmp eq i32 %bf.clear, 0
  br i1 %tobool29, label %lor.lhs.false, label %if.then36

lor.lhs.false:                                    ; preds = %cond.end
  %10 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type30 = bitcast %union.tree_node* %10 to %struct.tree_type*
  %precision31 = getelementptr inbounds %struct.tree_type* %type30, i64 0, i32 6
  %bf.load32 = load i32* %precision31, align 4
  %bf.clear33 = and i32 %bf.load32, 511
  %cmp34 = icmp sgt i32 %cond, %bf.clear33
  br i1 %cmp34, label %if.then36, label %if.end51

if.then36:                                        ; preds = %cond.end, %lor.lhs.false
  %call37 = call %union.tree_node* @type_for_size(i32 %cond, i32 %call20.lobit.not) #5
  %cmp38 = icmp eq %union.tree_node* %call37, null
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %if.then36
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([51 x i8]* @.str222, i64 0, i64 0)) #5
  %11 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 9), align 8, !tbaa !1
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.then36
  %narrowest.0 = phi %union.tree_node* [ %11, %if.then40 ], [ %call37, %if.then36 ]
  %type42 = bitcast %union.tree_node* %narrowest.0 to %struct.tree_type*
  %precision43 = getelementptr inbounds %struct.tree_type* %type42, i64 0, i32 6
  %bf.load44 = load i32* %precision43, align 4
  %bf.clear45 = and i32 %bf.load44, 511
  %.pre = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type52.phi.trans.insert = bitcast %union.tree_node* %.pre to %struct.tree_type*
  %precision53.phi.trans.insert = getelementptr inbounds %struct.tree_type* %type52.phi.trans.insert, i64 0, i32 6
  %bf.load54.pre = load i32* %precision53.phi.trans.insert, align 4
  br label %if.end51

if.end51:                                         ; preds = %lor.lhs.false, %if.end41
  %bf.load54 = phi i32 [ %bf.load54.pre, %if.end41 ], [ %bf.load32, %lor.lhs.false ]
  %precision.0 = phi i32 [ %bf.clear45, %if.end41 ], [ %bf.clear33, %lor.lhs.false ]
  %bf.clear55 = and i32 %bf.load54, 511
  %cmp56 = icmp eq i32 %precision.0, %bf.clear55
  br i1 %cmp56, label %if.then58, label %if.else60

if.then58:                                        ; preds = %if.end51
  %call59 = call %union.tree_node* @type_for_size(i32 %precision.0, i32 0) #5
  %.pre298 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  br label %if.end61

if.else60:                                        ; preds = %if.end51
  %12 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %if.then58
  %13 = phi %union.tree_node* [ %.pre298, %if.then58 ], [ %12, %if.else60 ]
  %enum_value_type.0 = phi %union.tree_node* [ %call59, %if.then58 ], [ %12, %if.else60 ]
  %14 = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 12
  store %union.tree_node* %minnode.2, %union.tree_node** %14, align 8, !tbaa !91
  %15 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %16 = getelementptr inbounds %union.tree_node* %15, i64 0, i32 0, i32 13
  store %union.tree_node* %maxnode.2, %union.tree_node** %16, align 8, !tbaa !82
  %17 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %type64 = bitcast %union.tree_node* %17 to %struct.tree_type*
  %precision65 = getelementptr inbounds %struct.tree_type* %type64, i64 0, i32 6
  %bf.load66 = load i32* %precision65, align 4
  %bf.clear67 = and i32 %bf.load66, -512
  %bf.set = or i32 %bf.clear67, %precision.0
  store i32 %bf.set, i32* %precision65, align 4
  %18 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %unsigned_flag = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 0, i32 2
  %bf.load69 = load i32* %unsigned_flag, align 8
  %bf.shl = shl nuw nsw i32 %call20.lobit.not, 13
  %bf.clear71 = and i32 %bf.load69, -8193
  %bf.set72 = or i32 %bf.clear71, %bf.shl
  store i32 %bf.set72, i32* %unsigned_flag, align 8
  %19 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %size = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 2
  %20 = bitcast i32* %size to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %20, align 8, !tbaa !80
  %21 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  call void @layout_type(%union.tree_node* %21) #5
  %22 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %cmp74 = icmp eq %union.tree_node* %22, %values
  br i1 %cmp74, label %if.end145, label %for.cond77.preheader

for.cond77.preheader:                             ; preds = %if.end61
  %tobool78286 = icmp eq %union.tree_node* %values, null
  br i1 %tobool78286, label %for.end142, label %for.body79

for.body79:                                       ; preds = %for.cond77.preheader, %if.end131
  %pair.1287 = phi %union.tree_node* [ %51, %if.end131 ], [ %values, %for.cond77.preheader ]
  %purpose = getelementptr inbounds %union.tree_node* %pair.1287, i64 0, i32 0, i32 1
  %23 = load i8** %purpose, align 8
  %24 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %type82 = getelementptr inbounds i8* %23, i64 8
  %25 = bitcast i8* %type82 to %union.tree_node**
  store %union.tree_node* %24, %union.tree_node** %25, align 8, !tbaa !23
  %26 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %size84 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 2
  %27 = bitcast i32* %size84 to %union.tree_node**
  %28 = load %union.tree_node** %27, align 8, !tbaa !80
  %size85 = getelementptr inbounds i8* %23, i64 40
  %29 = bitcast i8* %size85 to %union.tree_node**
  store %union.tree_node* %28, %union.tree_node** %29, align 8, !tbaa !69
  %30 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %31 = getelementptr inbounds %union.tree_node* %30, i64 0, i32 0, i32 4
  %32 = load %union.tree_node** %31, align 8, !tbaa !88
  %size_unit88 = getelementptr inbounds i8* %23, i64 64
  %33 = bitcast i8* %size_unit88 to %union.tree_node**
  store %union.tree_node* %32, %union.tree_node** %33, align 8, !tbaa !70
  %34 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %align = getelementptr inbounds %union.tree_node* %34, i64 0, i32 0, i32 7
  %35 = bitcast %union.tree_node** %align to i32*
  %36 = load i32* %35, align 4, !tbaa !89
  %u1 = getelementptr inbounds i8* %23, i64 56
  %37 = bitcast i8* %u1 to i32*
  %bf.load91 = load i32* %37, align 4
  %bf.value92 = and i32 %36, 16777215
  %bf.clear93 = and i32 %bf.load91, -16777216
  %bf.set94 = or i32 %bf.clear93, %bf.value92
  store i32 %bf.set94, i32* %37, align 4
  %38 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %type95 = bitcast %union.tree_node* %38 to %struct.tree_type*
  %user_align = getelementptr inbounds %struct.tree_type* %type95, i64 0, i32 6
  %bf.load96 = load i32* %user_align, align 4
  %bf.lshr97 = lshr i32 %bf.load96, 31
  %user_align99 = getelementptr inbounds i8* %23, i64 48
  %39 = bitcast i8* %user_align99 to i64*
  %40 = zext i32 %bf.lshr97 to i64
  %bf.load100 = load i64* %39, align 8
  %bf.shl102 = shl nuw nsw i64 %40, 35
  %bf.clear103 = and i64 %bf.load100, -34359738369
  %bf.set104 = or i64 %bf.shl102, %bf.clear103
  store i64 %bf.set104, i64* %39, align 8
  %41 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %type105 = bitcast %union.tree_node* %41 to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type105, i64 0, i32 6
  %bf.load106 = load i32* %mode, align 4
  %bf.lshr107 = lshr i32 %bf.load106, 9
  %42 = zext i32 %bf.lshr107 to i64
  %bf.value112 = and i64 %42, 127
  %bf.clear113 = and i64 %bf.set104, -256
  %bf.set114 = or i64 %bf.value112, %bf.clear113
  store i64 %bf.set114, i64* %39, align 8
  %initial = getelementptr inbounds i8* %23, i64 104
  %43 = bitcast i8* %initial to %union.tree_node**
  %44 = load %union.tree_node** %43, align 8, !tbaa !40
  %call117 = call i32 @int_fits_type_p(%union.tree_node* %44, %union.tree_node* %enum_value_type.0) #5
  %tobool118 = icmp eq i32 %call117, 0
  br i1 %tobool118, label %if.else125, label %if.then119

if.then119:                                       ; preds = %for.body79
  %45 = load %union.tree_node** %43, align 8, !tbaa !40
  %call122 = call %union.tree_node* @convert(%union.tree_node* %enum_value_type.0, %union.tree_node* %45) #5
  br label %if.end131

if.else125:                                       ; preds = %for.body79
  %46 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %47 = load %union.tree_node** %43, align 8, !tbaa !40
  %call128 = call %union.tree_node* @convert(%union.tree_node* %46, %union.tree_node* %47) #5
  br label %if.end131

if.end131:                                        ; preds = %if.else125, %if.then119
  %storemerge = phi %union.tree_node* [ %call128, %if.else125 ], [ %call122, %if.then119 ]
  store %union.tree_node* %storemerge, %union.tree_node** %43, align 8, !tbaa !40
  %name = getelementptr inbounds i8* %23, i64 72
  %48 = bitcast i8* %name to %union.tree_node**
  %49 = load %union.tree_node** %48, align 8, !tbaa !48
  %.c = bitcast %union.tree_node* %49 to i8*
  store i8* %.c, i8** %purpose, align 8, !tbaa !90
  %value138 = getelementptr inbounds %union.tree_node* %pair.1287, i64 0, i32 0, i32 2
  %50 = bitcast i32* %value138 to %union.tree_node**
  store %union.tree_node* %storemerge, %union.tree_node** %50, align 8, !tbaa !50
  %chain141 = getelementptr inbounds %union.tree_node* %pair.1287, i64 0, i32 0, i32 0, i32 0
  %51 = load %union.tree_node** %chain141, align 8, !tbaa !29
  %tobool78 = icmp eq %union.tree_node* %51, null
  br i1 %tobool78, label %for.end142, label %for.body79

for.end142:                                       ; preds = %if.end131, %for.cond77.preheader
  %52 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %values144 = getelementptr inbounds %union.tree_node* %52, i64 0, i32 0, i32 1
  %values.c = bitcast %union.tree_node* %values to i8*
  store i8* %values.c, i8** %values144, align 8, !tbaa !24
  br label %if.end145

if.end145:                                        ; preds = %if.end61, %for.end142
  %53 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %54 = getelementptr inbounds %union.tree_node* %53, i64 0, i32 0, i32 15
  %tem.0283 = load %union.tree_node** %54, align 8
  %tobool148284 = icmp eq %union.tree_node* %tem.0283, null
  br i1 %tobool148284, label %for.end225, label %for.body149

for.body149:                                      ; preds = %if.end145, %for.inc223
  %55 = phi %union.tree_node* [ %80, %for.inc223 ], [ %53, %if.end145 ]
  %tem.0285 = phi %union.tree_node* [ %tem.0, %for.inc223 ], [ %tem.0283, %if.end145 ]
  %cmp150 = icmp eq %union.tree_node* %tem.0285, %55
  br i1 %cmp150, label %for.inc223, label %if.end153

if.end153:                                        ; preds = %for.body149
  %values155 = getelementptr inbounds %union.tree_node* %55, i64 0, i32 0, i32 1
  %56 = load i8** %values155, align 8
  %type156 = bitcast %union.tree_node* %tem.0285 to %struct.tree_type*
  %values157 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 1
  store i8* %56, i8** %values157, align 8, !tbaa !24
  %57 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %58 = getelementptr inbounds %union.tree_node* %57, i64 0, i32 0, i32 12
  %59 = load %union.tree_node** %58, align 8, !tbaa !91
  %60 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 12
  store %union.tree_node* %59, %union.tree_node** %60, align 8, !tbaa !91
  %61 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %62 = getelementptr inbounds %union.tree_node* %61, i64 0, i32 0, i32 13
  %63 = load %union.tree_node** %62, align 8, !tbaa !82
  %64 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 13
  store %union.tree_node* %63, %union.tree_node** %64, align 8, !tbaa !82
  %65 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %size167 = getelementptr inbounds %union.tree_node* %65, i64 0, i32 0, i32 2
  %66 = bitcast i32* %size167 to %union.tree_node**
  %67 = load %union.tree_node** %66, align 8, !tbaa !80
  %size169 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 2
  %68 = bitcast i32* %size169 to %union.tree_node**
  store %union.tree_node* %67, %union.tree_node** %68, align 8, !tbaa !80
  %69 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %70 = getelementptr inbounds %union.tree_node* %69, i64 0, i32 0, i32 4
  %71 = load %union.tree_node** %70, align 8, !tbaa !88
  %72 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 4
  store %union.tree_node* %71, %union.tree_node** %72, align 8, !tbaa !88
  %73 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %type174 = bitcast %union.tree_node* %73 to %struct.tree_type*
  %mode175 = getelementptr inbounds %struct.tree_type* %type174, i64 0, i32 6
  %bf.load176 = load i32* %mode175, align 4
  %bf.clear178 = and i32 %bf.load176, 65024
  %mode180 = getelementptr inbounds %struct.tree_type* %type156, i64 0, i32 6
  %bf.load181 = load i32* %mode180, align 4
  %bf.clear184 = and i32 %bf.load181, -65025
  %bf.set185 = or i32 %bf.clear184, %bf.clear178
  store i32 %bf.set185, i32* %mode180, align 4
  %74 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %type186 = bitcast %union.tree_node* %74 to %struct.tree_type*
  %precision187 = getelementptr inbounds %struct.tree_type* %type186, i64 0, i32 6
  %bf.load188 = load i32* %precision187, align 4
  %bf.clear189 = and i32 %bf.load188, 511
  %bf.clear194 = and i32 %bf.set185, -512
  %bf.set195 = or i32 %bf.clear194, %bf.clear189
  store i32 %bf.set195, i32* %mode180, align 4
  %75 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %align197 = getelementptr inbounds %union.tree_node* %75, i64 0, i32 0, i32 7
  %76 = bitcast %union.tree_node** %align197 to i32*
  %77 = load i32* %76, align 4, !tbaa !89
  %align199 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 7
  %78 = bitcast %union.tree_node** %align199 to i32*
  store i32 %77, i32* %78, align 4, !tbaa !89
  %type200 = bitcast %union.tree_node* %75 to %struct.tree_type*
  %user_align201 = getelementptr inbounds %struct.tree_type* %type200, i64 0, i32 6
  %bf.load202 = load i32* %user_align201, align 4
  %bf.lshr203 = and i32 %bf.load202, -2147483648
  %bf.clear209 = and i32 %bf.set195, 2147483647
  %bf.set210 = or i32 %bf.clear209, %bf.lshr203
  store i32 %bf.set210, i32* %mode180, align 4
  %79 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  %unsigned_flag212 = getelementptr inbounds %union.tree_node* %79, i64 0, i32 0, i32 0, i32 2
  %bf.load213 = load i32* %unsigned_flag212, align 8
  %bf.clear215 = and i32 %bf.load213, 8192
  %unsigned_flag217 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 0, i32 2
  %bf.load218 = load i32* %unsigned_flag217, align 8
  %bf.clear221 = and i32 %bf.load218, -8193
  %bf.set222 = or i32 %bf.clear221, %bf.clear215
  store i32 %bf.set222, i32* %unsigned_flag217, align 8
  %.pre299 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  br label %for.inc223

for.inc223:                                       ; preds = %for.body149, %if.end153
  %80 = phi %union.tree_node* [ %55, %for.body149 ], [ %.pre299, %if.end153 ]
  %81 = getelementptr inbounds %union.tree_node* %tem.0285, i64 0, i32 0, i32 14
  %tem.0 = load %union.tree_node** %81, align 8
  %tobool148 = icmp eq %union.tree_node* %tem.0, null
  br i1 %tobool148, label %for.end225, label %for.body149

for.end225:                                       ; preds = %for.inc223, %if.end145
  %.lcssa = phi %union.tree_node* [ %53, %if.end145 ], [ %80, %for.inc223 ]
  call void @rest_of_type_compilation(%union.tree_node* %.lcssa, i32 %conv) #5
  %82 = load %union.tree_node** %enumtype.addr, align 8, !tbaa !1
  ret %union.tree_node* %82
}

declare i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @type_for_size(i32, i32) #1

declare i32 @int_fits_type_p(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_enumerator(%union.tree_node* %name, %union.tree_node* %value) #0 {
entry:
  %tobool = icmp eq %union.tree_node* %value, null
  br i1 %tobool, label %if.then35, label %while.cond.preheader

while.cond.preheader:                             ; preds = %entry
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %while.cond.preheader, %land.rhs
  %value.addr.0 = phi %union.tree_node* [ %1, %land.rhs ], [ %value, %while.cond.preheader ]
  %code = getelementptr inbounds %union.tree_node* %value.addr.0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %bf.clear.off = add i32 %bf.clear, -114
  %switch = icmp ult i32 %bf.clear.off, 3
  br i1 %switch, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node* %value.addr.0, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %cmp12 = icmp eq %union.tree_node* %1, %0
  br i1 %cmp12, label %if.then25, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true
  %type14 = getelementptr inbounds %union.tree_node* %value.addr.0, i64 0, i32 0, i32 0, i32 1
  %2 = load %union.tree_node** %type14, align 8, !tbaa !23
  %type19 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 1
  %3 = load %union.tree_node** %type19, align 8, !tbaa !23
  %cmp20 = icmp eq %union.tree_node* %2, %3
  br i1 %cmp20, label %while.cond, label %if.then25

if.end:                                           ; preds = %while.cond
  %cmp24 = icmp eq %union.tree_node* %value.addr.0, null
  br i1 %cmp24, label %if.then35, label %if.then25

if.then25:                                        ; preds = %land.rhs, %land.lhs.true, %if.end
  %cmp30 = icmp eq i32 %bf.clear, 25
  br i1 %cmp30, label %if.end33, label %if.else

if.else:                                          ; preds = %if.then25
  %id = getelementptr inbounds %union.tree_node* %name, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds i8** %id, i64 1
  %5 = load i8** %4, align 8, !tbaa !21
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([47 x i8]* @.str223, i64 0, i64 0), i8* %5) #5
  br label %if.then35

if.end33:                                         ; preds = %if.then25
  %call = tail call %union.tree_node* @default_conversion(%union.tree_node* %value.addr.0) #5
  tail call void @constant_expression_warning(%union.tree_node* %call) #5
  %cmp34 = icmp eq %union.tree_node* %call, null
  br i1 %cmp34, label %if.then35, label %if.end39

if.then35:                                        ; preds = %entry, %if.end, %if.else, %if.end33
  %6 = load %union.tree_node** @enum_next_value, align 8, !tbaa !1
  %7 = load i32* @enum_overflow, align 4, !tbaa !5
  %tobool36 = icmp eq i32 %7, 0
  br i1 %tobool36, label %if.end39, label %if.then37

if.then37:                                        ; preds = %if.then35
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str224, i64 0, i64 0)) #5
  br label %if.end39

if.end39:                                         ; preds = %if.then35, %if.then37, %if.end33
  %value.addr.3 = phi %union.tree_node* [ %6, %if.then37 ], [ %6, %if.then35 ], [ %call, %if.end33 ]
  %8 = load i32* @pedantic, align 4, !tbaa !5
  %tobool40 = icmp eq i32 %8, 0
  br i1 %tobool40, label %if.end46, label %land.lhs.true41

land.lhs.true41:                                  ; preds = %if.end39
  %9 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call42 = tail call i32 @int_fits_type_p(%union.tree_node* %value.addr.3, %union.tree_node* %9) #5
  %tobool43 = icmp eq i32 %call42, 0
  br i1 %tobool43, label %if.then44, label %if.end46

if.then44:                                        ; preds = %land.lhs.true41
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([52 x i8]* @.str225, i64 0, i64 0)) #5
  %10 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call45 = tail call %union.tree_node* @convert(%union.tree_node* %10, %union.tree_node* %value.addr.3) #5
  br label %if.end46

if.end46:                                         ; preds = %land.lhs.true41, %if.end39, %if.then44
  %value.addr.4 = phi %union.tree_node* [ %value.addr.3, %land.lhs.true41 ], [ %call45, %if.then44 ], [ %value.addr.3, %if.end39 ]
  %11 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 12), align 8, !tbaa !1
  %call47 = tail call %union.tree_node* @build_binary_op(i32 59, %union.tree_node* %value.addr.4, %union.tree_node* %11, i32 0) #5
  store %union.tree_node* %call47, %union.tree_node** @enum_next_value, align 8, !tbaa !1
  %call48 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call47, %union.tree_node* %value.addr.4) #5
  store i32 %call48, i32* @enum_overflow, align 4, !tbaa !5
  %type50 = getelementptr inbounds %union.tree_node* %value.addr.4, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type50, align 8, !tbaa !23
  %type51 = bitcast %union.tree_node* %12 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type51, i64 0, i32 6
  %bf.load52 = load i32* %precision, align 4
  %bf.clear53 = and i32 %bf.load52, 511
  %13 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type54 = bitcast %union.tree_node* %13 to %struct.tree_type*
  %precision55 = getelementptr inbounds %struct.tree_type* %type54, i64 0, i32 6
  %bf.load56 = load i32* %precision55, align 4
  %bf.clear57 = and i32 %bf.load56, 511
  %cmp58 = icmp ugt i32 %bf.clear53, %bf.clear57
  %bf.load52.bf.load56 = select i1 %cmp58, i32 %bf.load52, i32 %bf.load56
  %bf.clear62 = and i32 %bf.load52.bf.load56, 511
  %14 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool67 = icmp eq i32 %14, 0
  %cmp77 = icmp ult i32 %bf.clear53, %bf.clear57
  %or.cond = and i1 %tobool67, %cmp77
  br i1 %or.cond, label %land.end83, label %land.rhs78

land.rhs78:                                       ; preds = %if.end46
  %unsigned_flag = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 2
  %bf.load80 = load i32* %unsigned_flag, align 8
  %bf.clear81 = and i32 %bf.load80, 8192
  %tobool82 = icmp ne i32 %bf.clear81, 0
  br label %land.end83

land.end83:                                       ; preds = %if.end46, %land.rhs78
  %15 = phi i1 [ %tobool82, %land.rhs78 ], [ false, %if.end46 ]
  %land.ext = zext i1 %15 to i32
  %call84 = tail call %union.tree_node* @type_for_size(i32 %bf.clear62, i32 %land.ext) #5
  %call85 = tail call %union.tree_node* @build_decl(i32 32, %union.tree_node* %name, %union.tree_node* %call84) #5
  %call86 = tail call %union.tree_node* @convert(%union.tree_node* %call84, %union.tree_node* %value.addr.4) #5
  %initial = getelementptr inbounds %union.tree_node* %call85, i64 0, i32 0, i32 12
  store %union.tree_node* %call86, %union.tree_node** %initial, align 8, !tbaa !40
  %call88 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call85)
  %call89 = tail call %union.tree_node* @tree_cons(%union.tree_node* %call85, %union.tree_node* %value.addr.4, %union.tree_node* null) #5
  ret %union.tree_node* %call89
}

declare %union.tree_node* @default_conversion(%union.tree_node*) #1

declare %union.tree_node* @build_binary_op(i32, %union.tree_node*, %union.tree_node*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @start_function(%union.tree_node* readonly %declspecs, %union.tree_node* %declarator, %union.tree_node* %attributes) #0 {
entry:
  %decl1 = alloca %union.tree_node*, align 8
  %0 = load i32* @immediate_size_expand, align 4, !tbaa !5
  store i32 0, i32* @current_function_returns_value, align 4, !tbaa !5
  store i32 0, i32* @current_function_returns_null, align 4, !tbaa !5
  store i32 0, i32* @current_function_returns_abnormally, align 4, !tbaa !5
  store i32 0, i32* @warn_about_return_type, align 4, !tbaa !5
  store i32 0, i32* @current_extern_inline, align 4, !tbaa !5
  store i1 false, i1* @c_function_varargs, align 1
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8, !tbaa !1
  store %union.tree_node* null, %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  store i32 0, i32* @immediate_size_expand, align 4, !tbaa !5
  %call = call fastcc %union.tree_node* @grokdeclarator(%union.tree_node* %declarator, %union.tree_node* %declspecs, i32 1, i32 1)
  store %union.tree_node* %call, %union.tree_node** %decl1, align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 %0, i32* @immediate_size_expand, align 4, !tbaa !5
  br label %return

if.end:                                           ; preds = %entry
  %call1 = call %union.tree_node* @decl_attributes(%union.tree_node** %decl1, %union.tree_node* %attributes, i32 0) #5
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %2 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp2 = icmp eq %struct.binding_level* %1, %2
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %3 = load %union.tree_node** %decl1, align 8, !tbaa !1
  call void @maybe_apply_pragma_weak(%union.tree_node* %3) #5
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %4 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %lang_specific = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 24
  %5 = load %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  %6 = getelementptr inbounds %struct.lang_decl* %5, i64 0, i32 0, i32 0
  %bf.load = load i8* %6, align 4
  %bf.clear = and i8 %bf.load, 1
  %tobool = icmp eq i8 %bf.clear, 0
  br i1 %tobool, label %if.end16, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end4
  %uninlinable = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 5
  %7 = bitcast i48* %uninlinable to i64*
  %bf.load6 = load i64* %7, align 8
  %bf.cast8 = and i64 %bf.load6, 68719476736
  %tobool9 = icmp eq i64 %bf.cast8, 0
  br i1 %tobool9, label %if.end16, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %land.lhs.true
  %attributes12 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 16
  %8 = load %union.tree_node** %attributes12, align 8, !tbaa !59
  %call13 = call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([9 x i8]* @.str177, i64 0, i64 0), %union.tree_node* %8) #5
  %tobool14 = icmp eq %union.tree_node* %call13, null
  br i1 %tobool14, label %if.end16, label %if.then15

if.then15:                                        ; preds = %land.lhs.true10
  %9 = load %union.tree_node** %decl1, align 8, !tbaa !1
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %9, i8* getelementptr inbounds ([46 x i8]* @.str178, i64 0, i64 0)) #5
  br label %if.end16

if.end16:                                         ; preds = %land.lhs.true10, %land.lhs.true, %if.end4, %if.then15
  %10 = load %union.tree_node** %decl1, align 8, !tbaa !1
  call void @announce_function(%union.tree_node* %10) #5
  %11 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %type = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 0, i32 1
  %12 = load %union.tree_node** %type, align 8, !tbaa !23
  %type18 = getelementptr inbounds %union.tree_node* %12, i64 0, i32 0, i32 0, i32 1
  %13 = load %union.tree_node** %type18, align 8, !tbaa !23
  %size = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 2
  %14 = bitcast i32* %size to %union.tree_node**
  %15 = load %union.tree_node** %14, align 8, !tbaa !80
  %cmp20 = icmp eq %union.tree_node* %15, null
  br i1 %cmp20, label %lor.lhs.false, label %if.end36

lor.lhs.false:                                    ; preds = %if.end16
  %code = getelementptr inbounds %union.tree_node* %13, i64 0, i32 0, i32 0, i32 2
  %bf.load26 = load i32* %code, align 8
  %bf.clear27 = and i32 %bf.load26, 255
  %cmp28 = icmp eq i32 %bf.clear27, 5
  br i1 %cmp28, label %if.end36, label %if.then29

if.then29:                                        ; preds = %lor.lhs.false
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([34 x i8]* @.str226, i64 0, i64 0)) #5
  %16 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %17 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %type31 = getelementptr inbounds %union.tree_node* %17, i64 0, i32 0, i32 0, i32 1
  %18 = load %union.tree_node** %type31, align 8, !tbaa !23
  %values = getelementptr inbounds %union.tree_node* %18, i64 0, i32 0, i32 1
  %19 = load i8** %values, align 8
  %20 = bitcast i8* %19 to %union.tree_node*
  %call33 = call %union.tree_node* @build_function_type(%union.tree_node* %16, %union.tree_node* %20) #5
  %21 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %type35 = getelementptr inbounds %union.tree_node* %21, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %call33, %union.tree_node** %type35, align 8, !tbaa !23
  br label %if.end36

if.end36:                                         ; preds = %if.end16, %if.then29, %lor.lhs.false
  %22 = load i32* @warn_about_return_type, align 4, !tbaa !5
  %tobool37 = icmp eq i32 %22, 0
  br i1 %tobool37, label %if.end39, label %if.then38

if.then38:                                        ; preds = %if.end36
  call void (i8*, ...)* @pedwarn_c99(i8* getelementptr inbounds ([30 x i8]* @.str227, i64 0, i64 0)) #5
  br label %if.end39

if.end39:                                         ; preds = %if.end36, %if.then38
  %23 = load %union.tree_node** @last_function_parms, align 8, !tbaa !1
  store %union.tree_node* %23, %union.tree_node** @current_function_parms, align 8, !tbaa !1
  %24 = load %union.tree_node** @last_function_parm_tags, align 8, !tbaa !1
  store %union.tree_node* %24, %union.tree_node** @current_function_parm_tags, align 8, !tbaa !1
  %25 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %26 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %initial = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 12
  store %union.tree_node* %25, %union.tree_node** %initial, align 8, !tbaa !40
  %27 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %name = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 8
  %28 = load %union.tree_node** %name, align 8, !tbaa !48
  %29 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %30 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp.i = icmp eq %struct.binding_level* %29, %30
  br i1 %cmp.i, label %lookup_name_current_level.exit, label %if.end.i

if.end.i:                                         ; preds = %if.end39
  %31 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 7
  %32 = load %union.tree_node** %31, align 8, !tbaa !15
  %cmp1.i = icmp eq %union.tree_node* %32, null
  br i1 %cmp1.i, label %if.then87, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  %names.i = getelementptr inbounds %struct.binding_level* %29, i64 0, i32 0
  %t.012.i = load %union.tree_node** %names.i, align 8
  %tobool13.i = icmp eq %union.tree_node* %t.012.i, null
  br i1 %tobool13.i, label %if.then87, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %chain.i = getelementptr inbounds %union.tree_node* %t.014.i, i64 0, i32 0, i32 0, i32 0
  %t.0.i = load %union.tree_node** %chain.i, align 8
  %tobool.i = icmp eq %union.tree_node* %t.0.i, null
  br i1 %tobool.i, label %if.then87, label %for.body.i

for.body.i:                                       ; preds = %if.end3.i, %for.cond.i
  %t.014.i = phi %union.tree_node* [ %t.0.i, %for.cond.i ], [ %t.012.i, %if.end3.i ]
  %name4.i = getelementptr inbounds %union.tree_node* %t.014.i, i64 0, i32 0, i32 8
  %33 = load %union.tree_node** %name4.i, align 8, !tbaa !48
  %cmp5.i = icmp eq %union.tree_node* %33, %28
  br i1 %cmp5.i, label %land.lhs.true44, label %for.cond.i

lookup_name_current_level.exit:                   ; preds = %if.end39
  %global_value.i = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 6
  %34 = bitcast %union.anon* %global_value.i to %union.tree_node**
  %35 = load %union.tree_node** %34, align 8, !tbaa !8
  %cond = icmp eq %union.tree_node* %35, null
  br i1 %cond, label %if.then87, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %for.body.i, %lookup_name_current_level.exit
  %retval.0.i437 = phi %union.tree_node* [ %35, %lookup_name_current_level.exit ], [ %t.014.i, %for.body.i ]
  %type46 = getelementptr inbounds %union.tree_node* %retval.0.i437, i64 0, i32 0, i32 0, i32 1
  %36 = load %union.tree_node** %type46, align 8, !tbaa !23
  %code48 = getelementptr inbounds %union.tree_node* %36, i64 0, i32 0, i32 0, i32 2
  %bf.load49 = load i32* %code48, align 8
  %bf.clear50 = and i32 %bf.load49, 255
  %cmp51 = icmp eq i32 %bf.clear50, 23
  br i1 %cmp51, label %land.lhs.true52, label %if.end90

land.lhs.true52:                                  ; preds = %land.lhs.true44
  %built_in_class = getelementptr inbounds %union.tree_node* %retval.0.i437, i64 0, i32 0, i32 5
  %37 = bitcast i48* %built_in_class to i64*
  %bf.load54 = load i64* %37, align 8
  %bf.cast57 = and i64 %bf.load54, 1610612736
  %cmp58 = icmp eq i64 %bf.cast57, 0
  br i1 %cmp58, label %land.lhs.true59, label %if.end90

land.lhs.true59:                                  ; preds = %land.lhs.true52
  %type61 = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 0, i32 1
  %38 = load %union.tree_node** %type61, align 8, !tbaa !23
  %type63 = getelementptr inbounds %union.tree_node* %38, i64 0, i32 0, i32 0, i32 1
  %39 = load %union.tree_node** %type63, align 8, !tbaa !23
  %40 = getelementptr inbounds %union.tree_node* %39, i64 0, i32 0, i32 15
  %41 = load %union.tree_node** %40, align 8, !tbaa !67
  %type68 = getelementptr inbounds %union.tree_node* %36, i64 0, i32 0, i32 0, i32 1
  %42 = load %union.tree_node** %type68, align 8, !tbaa !23
  %43 = getelementptr inbounds %union.tree_node* %42, i64 0, i32 0, i32 15
  %44 = load %union.tree_node** %43, align 8, !tbaa !67
  %cmp71 = icmp eq %union.tree_node* %41, %44
  br i1 %cmp71, label %land.lhs.true72, label %if.end90

land.lhs.true72:                                  ; preds = %land.lhs.true59
  %values76 = getelementptr inbounds %union.tree_node* %38, i64 0, i32 0, i32 1
  %45 = load i8** %values76, align 8
  %cmp77 = icmp eq i8* %45, null
  br i1 %cmp77, label %if.then78, label %if.end90

if.then78:                                        ; preds = %land.lhs.true72
  store %union.tree_node* %36, %union.tree_node** %type61, align 8, !tbaa !23
  %filename = getelementptr inbounds %union.tree_node* %retval.0.i437, i64 0, i32 0, i32 1
  %46 = load i8** %filename, align 8, !tbaa !54
  store i8* %46, i8** @current_function_prototype_file, align 8, !tbaa !1
  %linenum = getelementptr inbounds %union.tree_node* %retval.0.i437, i64 0, i32 0, i32 2
  %47 = load i32* %linenum, align 4, !tbaa !55
  store i32 %47, i32* @current_function_prototype_line, align 4, !tbaa !5
  br label %if.end90

if.then87:                                        ; preds = %for.cond.i, %if.end3.i, %if.end.i, %lookup_name_current_level.exit
  %48 = getelementptr inbounds %union.tree_node* %28, i64 0, i32 0, i32 9
  %49 = load %union.tree_node** %48, align 8, !tbaa !17
  br label %if.end90

if.end90:                                         ; preds = %land.lhs.true59, %land.lhs.true72, %if.then78, %land.lhs.true52, %land.lhs.true44, %if.then87
  %old_decl.0 = phi %union.tree_node* [ %49, %if.then87 ], [ %retval.0.i437, %land.lhs.true44 ], [ %retval.0.i437, %land.lhs.true52 ], [ %retval.0.i437, %if.then78 ], [ %retval.0.i437, %land.lhs.true72 ], [ %retval.0.i437, %land.lhs.true59 ]
  %50 = load i32* @warn_strict_prototypes, align 4, !tbaa !5
  %tobool91 = icmp eq i32 %50, 0
  br i1 %tobool91, label %if.else, label %land.lhs.true92

land.lhs.true92:                                  ; preds = %if.end90
  %51 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %type94 = getelementptr inbounds %union.tree_node* %51, i64 0, i32 0, i32 0, i32 1
  %52 = load %union.tree_node** %type94, align 8, !tbaa !23
  %values96 = getelementptr inbounds %union.tree_node* %52, i64 0, i32 0, i32 1
  %53 = load i8** %values96, align 8
  %cmp97 = icmp eq i8* %53, null
  br i1 %cmp97, label %land.lhs.true98, label %if.else

land.lhs.true98:                                  ; preds = %land.lhs.true92
  %cmp99 = icmp eq %union.tree_node* %old_decl.0, null
  br i1 %cmp99, label %if.then121, label %land.lhs.true100

land.lhs.true100:                                 ; preds = %land.lhs.true98
  %type102 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 1
  %54 = load %union.tree_node** %type102, align 8, !tbaa !23
  %values104 = getelementptr inbounds %union.tree_node* %54, i64 0, i32 0, i32 1
  %55 = load i8** %values104, align 8
  %cmp105 = icmp eq i8* %55, null
  br i1 %cmp105, label %lor.lhs.false106, label %if.else

lor.lhs.false106:                                 ; preds = %land.lhs.true100
  %built_in_class108 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 5
  %56 = bitcast i48* %built_in_class108 to i64*
  %bf.load109 = load i64* %56, align 8
  %bf.cast112 = and i64 %bf.load109, 1610612736
  %cmp113 = icmp ne i64 %bf.cast112, 0
  %bf.cast119 = and i64 %bf.load109, 1099511627776
  %tobool120 = icmp eq i64 %bf.cast119, 0
  %or.cond413 = and i1 %cmp113, %tobool120
  br i1 %or.cond413, label %if.else, label %if.then121

if.then121:                                       ; preds = %lor.lhs.false106, %land.lhs.true98
  call void (i8*, ...)* @warning(i8* getelementptr inbounds ([39 x i8]* @.str228, i64 0, i64 0)) #5
  br label %if.end212

if.else:                                          ; preds = %lor.lhs.false106, %land.lhs.true100, %if.end90, %land.lhs.true92
  %57 = load i32* @warn_missing_prototypes, align 4, !tbaa !5
  %tobool122 = icmp eq i32 %57, 0
  br i1 %tobool122, label %if.else158.thread, label %land.lhs.true123

if.else158.thread:                                ; preds = %if.else
  %cmp161439 = icmp ne %union.tree_node* %old_decl.0, null
  br label %if.else175

land.lhs.true123:                                 ; preds = %if.else
  %58 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %public_flag = getelementptr inbounds %union.tree_node* %58, i64 0, i32 0, i32 0, i32 2
  %bf.load125 = load i32* %public_flag, align 8
  %bf.clear127 = and i32 %bf.load125, 524288
  %tobool128 = icmp eq i32 %bf.clear127, 0
  br i1 %tobool128, label %if.else158, label %land.lhs.true129

land.lhs.true129:                                 ; preds = %land.lhs.true123
  %cmp130 = icmp eq %union.tree_node* %old_decl.0, null
  br i1 %cmp130, label %land.lhs.true153, label %land.lhs.true131

land.lhs.true131:                                 ; preds = %land.lhs.true129
  %type133 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 1
  %59 = load %union.tree_node** %type133, align 8, !tbaa !23
  %values135 = getelementptr inbounds %union.tree_node* %59, i64 0, i32 0, i32 1
  %60 = load i8** %values135, align 8
  %cmp136 = icmp eq i8* %60, null
  br i1 %cmp136, label %lor.lhs.false137, label %if.else158

lor.lhs.false137:                                 ; preds = %land.lhs.true131
  %built_in_class139 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 5
  %61 = bitcast i48* %built_in_class139 to i64*
  %bf.load140 = load i64* %61, align 8
  %bf.cast143 = and i64 %bf.load140, 1610612736
  %cmp144 = icmp ne i64 %bf.cast143, 0
  %bf.cast151 = and i64 %bf.load140, 1099511627776
  %tobool152 = icmp eq i64 %bf.cast151, 0
  %or.cond414 = and i1 %cmp144, %tobool152
  br i1 %or.cond414, label %if.else158, label %land.lhs.true153

land.lhs.true153:                                 ; preds = %lor.lhs.false137, %land.lhs.true129
  %name155 = getelementptr inbounds %union.tree_node* %58, i64 0, i32 0, i32 8
  %62 = load %union.tree_node** %name155, align 8, !tbaa !48
  %63 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !1
  %cmp156 = icmp eq %union.tree_node* %62, %63
  br i1 %cmp156, label %if.else158, label %if.then157

if.then157:                                       ; preds = %land.lhs.true153
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %58, i8* getelementptr inbounds ([31 x i8]* @.str229, i64 0, i64 0)) #5
  br label %if.end212

if.else158:                                       ; preds = %lor.lhs.false137, %land.lhs.true131, %land.lhs.true123, %land.lhs.true153
  %tobool159 = icmp ne i32 %57, 0
  %cmp161 = icmp ne %union.tree_node* %old_decl.0, null
  %or.cond = and i1 %tobool159, %cmp161
  br i1 %or.cond, label %land.lhs.true162, label %if.else175

land.lhs.true162:                                 ; preds = %if.else158
  %used_flag = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 2
  %bf.load164 = load i32* %used_flag, align 8
  %bf.clear166 = and i32 %bf.load164, 65536
  %tobool167 = icmp eq i32 %bf.clear166, 0
  br i1 %tobool167, label %if.else175, label %land.lhs.true168

land.lhs.true168:                                 ; preds = %land.lhs.true162
  %type170 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 1
  %64 = load %union.tree_node** %type170, align 8, !tbaa !23
  %values172 = getelementptr inbounds %union.tree_node* %64, i64 0, i32 0, i32 1
  %65 = load i8** %values172, align 8
  %cmp173 = icmp eq i8* %65, null
  br i1 %cmp173, label %if.then174, label %if.else175

if.then174:                                       ; preds = %land.lhs.true168
  %66 = load %union.tree_node** %decl1, align 8, !tbaa !1
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %66, i8* getelementptr inbounds ([54 x i8]* @.str230, i64 0, i64 0)) #5
  br label %if.end212

if.else175:                                       ; preds = %if.else158.thread, %land.lhs.true162, %land.lhs.true168, %if.else158
  %cmp161441 = phi i1 [ %cmp161439, %if.else158.thread ], [ %cmp161, %land.lhs.true162 ], [ %cmp161, %land.lhs.true168 ], [ %cmp161, %if.else158 ]
  %67 = load i32* @warn_missing_declarations, align 4, !tbaa !5
  %tobool176 = icmp eq i32 %67, 0
  br i1 %tobool176, label %if.end212, label %land.lhs.true177

land.lhs.true177:                                 ; preds = %if.else175
  %68 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %public_flag179 = getelementptr inbounds %union.tree_node* %68, i64 0, i32 0, i32 0, i32 2
  %bf.load180 = load i32* %public_flag179, align 8
  %bf.clear182 = and i32 %bf.load180, 524288
  %tobool183 = icmp ne i32 %bf.clear182, 0
  %cmp185 = icmp eq %union.tree_node* %old_decl.0, null
  %or.cond370 = and i1 %tobool183, %cmp185
  br i1 %or.cond370, label %land.lhs.true186, label %if.else191

land.lhs.true186:                                 ; preds = %land.lhs.true177
  %name188 = getelementptr inbounds %union.tree_node* %68, i64 0, i32 0, i32 8
  %69 = load %union.tree_node** %name188, align 8, !tbaa !48
  %70 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !1
  %cmp189 = icmp eq %union.tree_node* %69, %70
  br i1 %cmp189, label %if.else191, label %if.then190

if.then190:                                       ; preds = %land.lhs.true186
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %68, i8* getelementptr inbounds ([33 x i8]* @.str231, i64 0, i64 0)) #5
  br label %if.end212

if.else191:                                       ; preds = %land.lhs.true186, %land.lhs.true177
  %tobool192 = icmp ne i32 %67, 0
  %or.cond371 = and i1 %tobool192, %cmp161441
  br i1 %or.cond371, label %land.lhs.true195, label %if.end212

land.lhs.true195:                                 ; preds = %if.else191
  %used_flag197 = getelementptr inbounds %union.tree_node* %old_decl.0, i64 0, i32 0, i32 0, i32 2
  %bf.load198 = load i32* %used_flag197, align 8
  %bf.clear200 = and i32 %bf.load198, 65536
  %tobool201 = icmp eq i32 %bf.clear200, 0
  br i1 %tobool201, label %if.end212, label %land.lhs.true202

land.lhs.true202:                                 ; preds = %land.lhs.true195
  %71 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %name204 = getelementptr inbounds %union.tree_node* %71, i64 0, i32 0, i32 8
  %72 = load %union.tree_node** %name204, align 8, !tbaa !48
  %73 = getelementptr inbounds %union.tree_node* %72, i64 0, i32 0, i32 9
  %74 = load %union.tree_node** %73, align 8, !tbaa !17
  %cmp206 = icmp eq %union.tree_node* %old_decl.0, %74
  br i1 %cmp206, label %if.then207, label %if.end212

if.then207:                                       ; preds = %land.lhs.true202
  call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %71, i8* getelementptr inbounds ([56 x i8]* @.str232, i64 0, i64 0)) #5
  br label %if.end212

if.end212:                                        ; preds = %if.else175, %land.lhs.true195, %if.then157, %if.then190, %if.then207, %land.lhs.true202, %if.else191, %if.then174, %if.then121
  %75 = load i32* @current_extern_inline, align 4, !tbaa !5
  %76 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %external_flag = getelementptr inbounds %union.tree_node* %76, i64 0, i32 0, i32 5
  %77 = bitcast i48* %external_flag to i64*
  %78 = zext i32 %75 to i64
  %bf.load214 = load i64* %77, align 8
  %bf.value = shl nuw nsw i64 %78, 8
  %bf.shl = and i64 %bf.value, 256
  %bf.clear215 = and i64 %bf.load214, -257
  %bf.set = or i64 %bf.clear215, %bf.shl
  store i64 %bf.set, i64* %77, align 8
  %79 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %static_flag = getelementptr inbounds %union.tree_node* %79, i64 0, i32 0, i32 0, i32 2
  %bf.load217 = load i32* %static_flag, align 8
  %bf.set219 = or i32 %bf.load217, 262144
  store i32 %bf.set219, i32* %static_flag, align 8
  %80 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp220 = icmp eq %union.tree_node* %80, null
  br i1 %cmp220, label %if.end226, label %if.then221

if.then221:                                       ; preds = %if.end212
  %81 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %public_flag223 = getelementptr inbounds %union.tree_node* %81, i64 0, i32 0, i32 0, i32 2
  %bf.load224 = load i32* %public_flag223, align 8
  %bf.clear225 = and i32 %bf.load224, -524289
  store i32 %bf.clear225, i32* %public_flag223, align 8
  br label %if.end226

if.end226:                                        ; preds = %if.end212, %if.then221
  %82 = load i32* @warn_main, align 4, !tbaa !5
  %cmp227 = icmp sgt i32 %82, 0
  br i1 %cmp227, label %land.lhs.true228, label %if.end321

land.lhs.true228:                                 ; preds = %if.end226
  %83 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %name230 = getelementptr inbounds %union.tree_node* %83, i64 0, i32 0, i32 8
  %84 = load %union.tree_node** %name230, align 8, !tbaa !48
  %85 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !1
  %cmp231 = icmp eq %union.tree_node* %84, %85
  br i1 %cmp231, label %if.then232, label %if.end321

if.then232:                                       ; preds = %land.lhs.true228
  %type234 = getelementptr inbounds %union.tree_node* %83, i64 0, i32 0, i32 0, i32 1
  %86 = load %union.tree_node** %type234, align 8, !tbaa !23
  %type236 = getelementptr inbounds %union.tree_node* %86, i64 0, i32 0, i32 0, i32 1
  %87 = load %union.tree_node** %type236, align 8, !tbaa !23
  %88 = getelementptr inbounds %union.tree_node* %87, i64 0, i32 0, i32 15
  %89 = load %union.tree_node** %88, align 8, !tbaa !67
  %90 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %cmp239 = icmp eq %union.tree_node* %89, %90
  br i1 %cmp239, label %if.end241, label %if.then240

if.then240:                                       ; preds = %if.then232
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %83, i8* getelementptr inbounds ([33 x i8]* @.str233, i64 0, i64 0)) #5
  %.pre428 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %type243.phi.trans.insert = getelementptr inbounds %union.tree_node* %.pre428, i64 0, i32 0, i32 0, i32 1
  %.pre429 = load %union.tree_node** %type243.phi.trans.insert, align 8, !tbaa !23
  br label %if.end241

if.end241:                                        ; preds = %if.then232, %if.then240
  %91 = phi %union.tree_node* [ %86, %if.then232 ], [ %.pre429, %if.then240 ]
  %values245 = getelementptr inbounds %union.tree_node* %91, i64 0, i32 0, i32 1
  %92 = load i8** %values245, align 8
  %tobool246422 = icmp eq i8* %92, null
  br i1 %tobool246422, label %if.end312, label %cond.true.lr.ph

cond.true.lr.ph:                                  ; preds = %if.end241
  %93 = bitcast i8* %92 to %union.tree_node*
  br label %cond.true

cond.true:                                        ; preds = %cond.true.lr.ph, %for.inc
  %argct.0424 = phi i32 [ 0, %cond.true.lr.ph ], [ %inc, %for.inc ]
  %args.0423 = phi %union.tree_node* [ %93, %cond.true.lr.ph ], [ %113, %for.inc ]
  %value = getelementptr inbounds %union.tree_node* %args.0423, i64 0, i32 0, i32 2
  %94 = bitcast i32* %value to %union.tree_node**
  %95 = load %union.tree_node** %94, align 8, !tbaa !50
  %96 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp249 = icmp eq %union.tree_node* %95, %96
  br i1 %cmp249, label %for.end, label %if.end251

if.end251:                                        ; preds = %cond.true
  %inc = add nsw i32 %argct.0424, 1
  switch i32 %argct.0424, label %for.inc [
    i32 0, label %sw.bb
    i32 1, label %sw.bb257
    i32 2, label %sw.bb281
  ]

sw.bb:                                            ; preds = %if.end251
  %97 = getelementptr inbounds %union.tree_node* %95, i64 0, i32 0, i32 15
  %98 = load %union.tree_node** %97, align 8, !tbaa !67
  %99 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %cmp254 = icmp eq %union.tree_node* %98, %99
  br i1 %cmp254, label %for.inc, label %if.then255

if.then255:                                       ; preds = %sw.bb
  %100 = load %union.tree_node** %decl1, align 8, !tbaa !1
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %100, i8* getelementptr inbounds ([39 x i8]* @.str234, i64 0, i64 0)) #5
  br label %for.inc

sw.bb257:                                         ; preds = %if.end251
  %code259 = getelementptr inbounds %union.tree_node* %95, i64 0, i32 0, i32 0, i32 2
  %bf.load260 = load i32* %code259, align 8
  %bf.clear261 = and i32 %bf.load260, 255
  %cmp262 = icmp eq i32 %bf.clear261, 13
  br i1 %cmp262, label %lor.lhs.false263, label %if.then279

lor.lhs.false263:                                 ; preds = %sw.bb257
  %type265 = getelementptr inbounds %union.tree_node* %95, i64 0, i32 0, i32 0, i32 1
  %101 = load %union.tree_node** %type265, align 8, !tbaa !23
  %code267 = getelementptr inbounds %union.tree_node* %101, i64 0, i32 0, i32 0, i32 2
  %bf.load268 = load i32* %code267, align 8
  %bf.clear269 = and i32 %bf.load268, 255
  %cmp270 = icmp eq i32 %bf.clear269, 13
  br i1 %cmp270, label %lor.lhs.false271, label %if.then279

lor.lhs.false271:                                 ; preds = %lor.lhs.false263
  %type275 = getelementptr inbounds %union.tree_node* %101, i64 0, i32 0, i32 0, i32 1
  %102 = load %union.tree_node** %type275, align 8, !tbaa !23
  %103 = getelementptr inbounds %union.tree_node* %102, i64 0, i32 0, i32 15
  %104 = load %union.tree_node** %103, align 8, !tbaa !67
  %105 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %cmp278 = icmp eq %union.tree_node* %104, %105
  br i1 %cmp278, label %for.inc, label %if.then279

if.then279:                                       ; preds = %lor.lhs.false271, %lor.lhs.false263, %sw.bb257
  %106 = load %union.tree_node** %decl1, align 8, !tbaa !1
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %106, i8* getelementptr inbounds ([44 x i8]* @.str235, i64 0, i64 0)) #5
  br label %for.inc

sw.bb281:                                         ; preds = %if.end251
  %code283 = getelementptr inbounds %union.tree_node* %95, i64 0, i32 0, i32 0, i32 2
  %bf.load284 = load i32* %code283, align 8
  %bf.clear285 = and i32 %bf.load284, 255
  %cmp286 = icmp eq i32 %bf.clear285, 13
  br i1 %cmp286, label %lor.lhs.false287, label %if.then303

lor.lhs.false287:                                 ; preds = %sw.bb281
  %type289 = getelementptr inbounds %union.tree_node* %95, i64 0, i32 0, i32 0, i32 1
  %107 = load %union.tree_node** %type289, align 8, !tbaa !23
  %code291 = getelementptr inbounds %union.tree_node* %107, i64 0, i32 0, i32 0, i32 2
  %bf.load292 = load i32* %code291, align 8
  %bf.clear293 = and i32 %bf.load292, 255
  %cmp294 = icmp eq i32 %bf.clear293, 13
  br i1 %cmp294, label %lor.lhs.false295, label %if.then303

lor.lhs.false295:                                 ; preds = %lor.lhs.false287
  %type299 = getelementptr inbounds %union.tree_node* %107, i64 0, i32 0, i32 0, i32 1
  %108 = load %union.tree_node** %type299, align 8, !tbaa !23
  %109 = getelementptr inbounds %union.tree_node* %108, i64 0, i32 0, i32 15
  %110 = load %union.tree_node** %109, align 8, !tbaa !67
  %111 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 8, !tbaa !1
  %cmp302 = icmp eq %union.tree_node* %110, %111
  br i1 %cmp302, label %for.inc, label %if.then303

if.then303:                                       ; preds = %lor.lhs.false295, %lor.lhs.false287, %sw.bb281
  %112 = load %union.tree_node** %decl1, align 8, !tbaa !1
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %112, i8* getelementptr inbounds ([52 x i8]* @.str236, i64 0, i64 0)) #5
  br label %for.inc

for.inc:                                          ; preds = %sw.bb, %lor.lhs.false271, %lor.lhs.false295, %if.end251, %if.then255, %if.then279, %if.then303
  %chain = getelementptr inbounds %union.tree_node* %args.0423, i64 0, i32 0, i32 0, i32 0
  %113 = load %union.tree_node** %chain, align 8, !tbaa !29
  %tobool246 = icmp eq %union.tree_node* %113, null
  br i1 %tobool246, label %for.end, label %cond.true

for.end:                                          ; preds = %cond.true, %for.inc
  %argct.0.lcssa = phi i32 [ %inc, %for.inc ], [ %argct.0424, %cond.true ]
  %cmp306 = icmp slt i32 %argct.0.lcssa, 1
  %114 = and i32 %argct.0.lcssa, -2
  %115 = icmp eq i32 %114, 2
  %or.cond416 = or i1 %cmp306, %115
  br i1 %or.cond416, label %if.end312, label %if.then311

if.then311:                                       ; preds = %for.end
  %116 = load %union.tree_node** %decl1, align 8, !tbaa !1
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %116, i8* getelementptr inbounds ([38 x i8]* @.str237, i64 0, i64 0)) #5
  br label %if.end312

if.end312:                                        ; preds = %if.end241, %for.end, %if.then311
  %117 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %public_flag314 = getelementptr inbounds %union.tree_node* %117, i64 0, i32 0, i32 0, i32 2
  %bf.load315 = load i32* %public_flag314, align 8
  %bf.clear317 = and i32 %bf.load315, 524288
  %tobool318 = icmp eq i32 %bf.clear317, 0
  br i1 %tobool318, label %if.then319, label %if.end321

if.then319:                                       ; preds = %if.end312
  call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %117, i8* getelementptr inbounds ([39 x i8]* @.str238, i64 0, i64 0)) #5
  br label %if.end321

if.end321:                                        ; preds = %if.end312, %if.then319, %land.lhs.true228, %if.end226
  %118 = load %union.tree_node** %decl1, align 8, !tbaa !1
  %call322 = call %union.tree_node* @pushdecl(%union.tree_node* %118)
  store %union.tree_node* %call322, %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %119 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %120 = load %struct.binding_level** @global_binding_level, align 8, !tbaa !1
  %cmp.i417 = icmp eq %struct.binding_level* %119, %120
  br i1 %cmp.i417, label %if.then.i418, label %if.end.i420

if.then.i418:                                     ; preds = %if.end321
  store %union.tree_node* null, %union.tree_node** @named_labels, align 8, !tbaa !1
  br label %if.end.i420

if.end.i420:                                      ; preds = %if.then.i418, %if.end321
  %121 = load %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  %tobool.i419 = icmp eq %struct.binding_level* %121, null
  br i1 %tobool.i419, label %if.else.i, label %if.then1.i

if.then1.i:                                       ; preds = %if.end.i420
  %level_chain.i = getelementptr inbounds %struct.binding_level* %121, i64 0, i32 5
  %122 = load %struct.binding_level** %level_chain.i, align 8, !tbaa !38
  store %struct.binding_level* %122, %struct.binding_level** @free_binding_level, align 8, !tbaa !1
  br label %if.end2.i

if.else.i:                                        ; preds = %if.end.i420
  %call.i.i = call noalias i8* @xmalloc(i64 72) #5
  %123 = bitcast i8* %call.i.i to %struct.binding_level*
  %.pre430 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.else.i, %if.then1.i
  %124 = phi %struct.binding_level* [ %119, %if.then1.i ], [ %.pre430, %if.else.i ]
  %newlevel.0.i = phi %struct.binding_level* [ %121, %if.then1.i ], [ %123, %if.else.i ]
  %125 = bitcast %struct.binding_level* %newlevel.0.i to i8*
  call void @llvm.memset.p0i8.i64(i8* %125, i8 0, i64 72, i32 8, i1 false) #5
  %tobool4.i = icmp eq %struct.binding_level* %124, null
  br i1 %tobool4.i, label %pushlevel.exit, label %cond.true.i

cond.true.i:                                      ; preds = %if.end2.i
  %subblocks_tag_transparent.i = getelementptr inbounds %struct.binding_level* %124, i64 0, i32 8
  %126 = load i8* %subblocks_tag_transparent.i, align 1, !tbaa !39
  %phitmp.i = icmp ne i8 %126, 0
  br label %pushlevel.exit

pushlevel.exit:                                   ; preds = %if.end2.i, %cond.true.i
  %127 = phi %struct.binding_level* [ %124, %cond.true.i ], [ null, %if.end2.i ]
  %128 = phi i1 [ %phitmp.i, %cond.true.i ], [ false, %if.end2.i ]
  %conv6.i = zext i1 %128 to i8
  %tag_transparent7.i = getelementptr inbounds %struct.binding_level* %newlevel.0.i, i64 0, i32 7
  store i8 %conv6.i, i8* %tag_transparent7.i, align 1, !tbaa !36
  %level_chain8.i = getelementptr inbounds %struct.binding_level* %newlevel.0.i, i64 0, i32 5
  store %struct.binding_level* %127, %struct.binding_level** %level_chain8.i, align 8, !tbaa !38
  store %struct.binding_level* %newlevel.0.i, %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %.b.i = load i1* @keep_next_level_flag, align 1
  %conv9.i = zext i1 %.b.i to i8
  %keep.i = getelementptr inbounds %struct.binding_level* %newlevel.0.i, i64 0, i32 9
  store i8 %conv9.i, i8* %keep.i, align 1, !tbaa !33
  store i1 false, i1* @keep_next_level_flag, align 1
  %.b16.i = load i1* @keep_next_if_subblocks, align 1
  %conv10.i = zext i1 %.b16.i to i8
  %keep_if_subblocks.i = getelementptr inbounds %struct.binding_level* %newlevel.0.i, i64 0, i32 10
  store i8 %conv10.i, i8* %keep_if_subblocks.i, align 1, !tbaa !30
  store i1 false, i1* @keep_next_if_subblocks, align 1
  %parm_flag.i = getelementptr inbounds %struct.binding_level* %newlevel.0.i, i64 0, i32 6
  store i8 1, i8* %parm_flag.i, align 1, !tbaa !37
  %subblocks_tag_transparent = getelementptr inbounds %struct.binding_level* %newlevel.0.i, i64 0, i32 8
  store i8 1, i8* %subblocks_tag_transparent, align 1, !tbaa !39
  %129 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  call void @make_decl_rtl(%union.tree_node* %129, i8* null) #5
  %130 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %type324 = getelementptr inbounds %union.tree_node* %130, i64 0, i32 0, i32 0, i32 1
  %131 = load %union.tree_node** %type324, align 8, !tbaa !23
  %type326 = getelementptr inbounds %union.tree_node* %131, i64 0, i32 0, i32 0, i32 1
  %132 = load %union.tree_node** %type326, align 8, !tbaa !23
  %call327 = call zeroext i1 @c_promoting_integer_type_p(%union.tree_node* %132) #5
  br i1 %call327, label %if.then328, label %if.end348

if.then328:                                       ; preds = %pushlevel.exit
  %unsigned_flag = getelementptr inbounds %union.tree_node* %132, i64 0, i32 0, i32 0, i32 2
  %bf.load330 = load i32* %unsigned_flag, align 8
  %bf.clear332 = and i32 %bf.load330, 8192
  %tobool333 = icmp eq i32 %bf.clear332, 0
  br i1 %tobool333, label %if.then328.if.else346_crit_edge, label %land.lhs.true334

if.then328.if.else346_crit_edge:                  ; preds = %if.then328
  %.pre431 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  br label %if.end348

land.lhs.true334:                                 ; preds = %if.then328
  %133 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool335 = icmp eq i32 %133, 0
  br i1 %tobool335, label %lor.lhs.false336, label %if.then345

lor.lhs.false336:                                 ; preds = %land.lhs.true334
  %type337 = bitcast %union.tree_node* %132 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type337, i64 0, i32 6
  %bf.load338 = load i32* %precision, align 4
  %134 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type340 = bitcast %union.tree_node* %134 to %struct.tree_type*
  %precision341 = getelementptr inbounds %struct.tree_type* %type340, i64 0, i32 6
  %bf.load342 = load i32* %precision341, align 4
  %135 = xor i32 %bf.load342, %bf.load338
  %136 = and i32 %135, 511
  %cmp344 = icmp eq i32 %136, 0
  br i1 %cmp344, label %if.then345, label %if.end348

if.then345:                                       ; preds = %land.lhs.true334, %lor.lhs.false336
  %137 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8, !tbaa !1
  br label %if.end348

if.end348:                                        ; preds = %lor.lhs.false336, %if.then328.if.else346_crit_edge, %if.then345, %pushlevel.exit
  %restype.0 = phi %union.tree_node* [ %137, %if.then345 ], [ %132, %pushlevel.exit ], [ %.pre431, %if.then328.if.else346_crit_edge ], [ %134, %lor.lhs.false336 ]
  %call349 = call %union.tree_node* @build_decl(i32 36, %union.tree_node* null, %union.tree_node* %restype.0) #5
  %138 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %result = getelementptr inbounds %union.tree_node* %138, i64 0, i32 0, i32 11
  store %union.tree_node* %call349, %union.tree_node** %result, align 8, !tbaa !75
  %139 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %assembler_name = getelementptr inbounds %union.tree_node* %139, i64 0, i32 0, i32 14
  %140 = load %union.tree_node** %assembler_name, align 8, !tbaa !49
  %cmp352 = icmp eq %union.tree_node* %140, null
  br i1 %cmp352, label %cond.false354, label %cond.end355

cond.false354:                                    ; preds = %if.end348
  %141 = load void (%union.tree_node*)** @lang_set_decl_assembler_name, align 8, !tbaa !1
  call void %141(%union.tree_node* %139) #5
  %.pre432 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %assembler_name357.phi.trans.insert = getelementptr inbounds %union.tree_node* %.pre432, i64 0, i32 0, i32 14
  %.pre433 = load %union.tree_node** %assembler_name357.phi.trans.insert, align 8, !tbaa !49
  br label %cond.end355

cond.end355:                                      ; preds = %if.end348, %cond.false354
  %142 = phi %union.tree_node* [ %140, %if.end348 ], [ %.pre433, %cond.false354 ]
  %143 = phi %union.tree_node* [ %139, %if.end348 ], [ %.pre432, %cond.false354 ]
  %addressable_flag = getelementptr inbounds %union.tree_node* %142, i64 0, i32 0, i32 0, i32 2
  %bf.load359 = load i32* %addressable_flag, align 8
  %bf.clear361 = and i32 %bf.load359, 1024
  %tobool362 = icmp eq i32 %bf.clear361, 0
  br i1 %tobool362, label %if.end369, label %if.then363

if.then363:                                       ; preds = %cond.end355
  %addressable_flag365 = getelementptr inbounds %union.tree_node* %143, i64 0, i32 0, i32 0, i32 2
  %bf.load366 = load i32* %addressable_flag365, align 8
  %bf.set368 = or i32 %bf.load366, 1024
  store i32 %bf.set368, i32* %addressable_flag365, align 8
  br label %if.end369

if.end369:                                        ; preds = %cond.end355, %if.then363
  store i32 %0, i32* @immediate_size_expand, align 4, !tbaa !5
  call void @start_fname_decls() #5
  br label %return

return:                                           ; preds = %if.end369, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %if.end369 ]
  ret i32 %retval.0
}

declare void @announce_function(%union.tree_node*) #1

declare void @pedwarn_c99(i8*, ...) #1

declare zeroext i1 @c_promoting_integer_type_p(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @c_mark_varargs() #0 {
entry:
  store i1 true, i1* @c_function_varargs, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define void @store_parm_decls() #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %1 = load %union.tree_node** @current_function_parms, align 8, !tbaa !1
  %2 = load %union.tree_node** @current_function_parm_tags, align 8, !tbaa !1
  %3 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names.i = getelementptr inbounds %struct.binding_level* %3, i64 0, i32 0
  %4 = load %union.tree_node** %names.i, align 8, !tbaa !34
  %call1 = tail call %union.tree_node* @decl_function_context(%union.tree_node* %0) #5
  %5 = load i32* @warn_shadow, align 4, !tbaa !5
  store i32 0, i32* @warn_shadow, align 4, !tbaa !5
  %cmp = icmp eq %union.tree_node* %1, null
  br i1 %cmp, label %for.cond99.preheader, label %land.lhs.true

for.cond99.preheader:                             ; preds = %land.lhs.true, %entry
  %tobool100667 = icmp eq %union.tree_node* %4, null
  br i1 %tobool100667, label %for.cond109.preheader, label %for.body101

land.lhs.true:                                    ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp2 = icmp eq i32 %bf.clear, 2
  br i1 %cmp2, label %for.cond99.preheader, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %cmp3 = icmp eq %union.tree_node* %4, null
  br i1 %cmp3, label %if.end22, label %if.then4

if.then4:                                         ; preds = %if.then
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %0, i8* getelementptr inbounds ([49 x i8]* @.str239, i64 0, i64 0)) #5
  %6 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names = getelementptr inbounds %struct.binding_level* %6, i64 0, i32 0
  %decl.0682 = load %union.tree_node** %names, align 8
  %tobool683 = icmp eq %union.tree_node* %decl.0682, null
  br i1 %tobool683, label %for.end, label %for.body

for.body:                                         ; preds = %if.then4, %for.inc
  %decl.0684 = phi %union.tree_node* [ %decl.0, %for.inc ], [ %decl.0682, %if.then4 ]
  %name = getelementptr inbounds %union.tree_node* %decl.0684, i64 0, i32 0, i32 8
  %7 = load %union.tree_node** %name, align 8, !tbaa !48
  %tobool6 = icmp eq %union.tree_node* %7, null
  br i1 %tobool6, label %for.inc, label %if.then7

if.then7:                                         ; preds = %for.body
  %8 = getelementptr inbounds %union.tree_node* %7, i64 0, i32 0, i32 7
  store %union.tree_node* null, %union.tree_node** %8, align 8, !tbaa !15
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then7
  %chain = getelementptr inbounds %union.tree_node* %decl.0684, i64 0, i32 0, i32 0, i32 0
  %decl.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %decl.0, null
  br i1 %tobool, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.inc
  %.pre = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.then4
  %9 = phi %struct.binding_level* [ %.pre, %for.cond.for.end_crit_edge ], [ %6, %if.then4 ]
  %shadowed = getelementptr inbounds %struct.binding_level* %9, i64 0, i32 2
  %link.0679 = load %union.tree_node** %shadowed, align 8
  %tobool12680 = icmp eq %union.tree_node* %link.0679, null
  br i1 %tobool12680, label %for.end19, label %for.body13

for.body13:                                       ; preds = %for.end, %for.body13
  %link.0681 = phi %union.tree_node* [ %link.0, %for.body13 ], [ %link.0679, %for.end ]
  %value = getelementptr inbounds %union.tree_node* %link.0681, i64 0, i32 0, i32 2
  %10 = bitcast i32* %value to %union.tree_node**
  %11 = load %union.tree_node** %10, align 8, !tbaa !50
  %purpose = getelementptr inbounds %union.tree_node* %link.0681, i64 0, i32 0, i32 1
  %12 = load i8** %purpose, align 8
  %local_value15 = getelementptr inbounds i8* %12, i64 64
  %13 = bitcast i8* %local_value15 to %union.tree_node**
  store %union.tree_node* %11, %union.tree_node** %13, align 8, !tbaa !15
  %chain18 = getelementptr inbounds %union.tree_node* %link.0681, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain18, align 8
  %tobool12 = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool12, label %for.cond11.for.end19_crit_edge, label %for.body13

for.cond11.for.end19_crit_edge:                   ; preds = %for.body13
  %.pre695 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  br label %for.end19

for.end19:                                        ; preds = %for.cond11.for.end19_crit_edge, %for.end
  %14 = phi %struct.binding_level* [ %.pre695, %for.cond11.for.end19_crit_edge ], [ %9, %for.end ]
  %names20 = getelementptr inbounds %struct.binding_level* %14, i64 0, i32 0
  store %union.tree_node* null, %union.tree_node** %names20, align 8, !tbaa !34
  %15 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %shadowed21 = getelementptr inbounds %struct.binding_level* %15, i64 0, i32 2
  store %union.tree_node* null, %union.tree_node** %shadowed21, align 8, !tbaa !56
  br label %if.end22

if.end22:                                         ; preds = %if.then, %for.end19
  %call23 = tail call %union.tree_node* @nreverse(%union.tree_node* %1) #5
  %tobool25671675 = icmp eq %union.tree_node* %call23, null
  br i1 %tobool25671675, label %for.end65.thread, label %for.body26.lr.ph

for.end65.thread:                                 ; preds = %if.end22
  %16 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names.i632696 = getelementptr inbounds %struct.binding_level* %16, i64 0, i32 0
  %17 = load %union.tree_node** %names.i632696, align 8, !tbaa !34
  %arguments697 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 10
  store %union.tree_node* %17, %union.tree_node** %arguments697, align 8, !tbaa !78
  br label %for.end95

for.body26.lr.ph:                                 ; preds = %if.end22, %if.else59
  %parm.0.ph677 = phi %union.tree_node* [ %18, %if.else59 ], [ %call23, %if.end22 ]
  %others.0.ph676 = phi %union.tree_node* [ %call62, %if.else59 ], [ null, %if.end22 ]
  br label %for.body26

for.body26:                                       ; preds = %for.body26.lr.ph, %if.end57
  %parm.0672 = phi %union.tree_node* [ %parm.0.ph677, %for.body26.lr.ph ], [ %18, %if.end57 ]
  %chain28 = getelementptr inbounds %union.tree_node* %parm.0672, i64 0, i32 0, i32 0, i32 0
  %18 = load %union.tree_node** %chain28, align 8, !tbaa !29
  %code30 = getelementptr inbounds %union.tree_node* %parm.0672, i64 0, i32 0, i32 0, i32 2
  %bf.load31 = load i32* %code30, align 8
  %bf.clear32 = and i32 %bf.load31, 255
  %cmp33 = icmp eq i32 %bf.clear32, 35
  br i1 %cmp33, label %if.then34, label %if.else59

if.then34:                                        ; preds = %for.body26
  %name36 = getelementptr inbounds %union.tree_node* %parm.0672, i64 0, i32 0, i32 8
  %19 = load %union.tree_node** %name36, align 8, !tbaa !48
  %cmp37 = icmp eq %union.tree_node* %19, null
  br i1 %cmp37, label %if.then38, label %if.else

if.then38:                                        ; preds = %if.then34
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %parm.0672, i8* getelementptr inbounds ([23 x i8]* @.str240, i64 0, i64 0)) #5
  br label %if.end57

if.else:                                          ; preds = %if.then34
  %type = getelementptr inbounds %union.tree_node* %parm.0672, i64 0, i32 0, i32 0, i32 1
  %20 = load %union.tree_node** %type, align 8, !tbaa !23
  %code41 = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 0, i32 2
  %bf.load42 = load i32* %code41, align 8
  %bf.clear43 = and i32 %bf.load42, 255
  %cond = icmp eq i32 %bf.clear43, 5
  br i1 %cond, label %if.then53, label %if.end57

if.then53:                                        ; preds = %if.else
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %parm.0672, i8* getelementptr inbounds ([29 x i8]* @.str241, i64 0, i64 0)) #5
  %21 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %21, %union.tree_node** %type, align 8, !tbaa !23
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then53, %if.then38
  %call58 = tail call %union.tree_node* @pushdecl(%union.tree_node* %parm.0672)
  %tobool25 = icmp eq %union.tree_node* %18, null
  br i1 %tobool25, label %for.end65, label %for.body26

if.else59:                                        ; preds = %for.body26
  store %union.tree_node* null, %union.tree_node** %chain28, align 8, !tbaa !29
  %call62 = tail call %union.tree_node* @chainon(%union.tree_node* %others.0.ph676, %union.tree_node* %parm.0672) #5
  %tobool25671 = icmp eq %union.tree_node* %18, null
  br i1 %tobool25671, label %for.end65, label %for.body26.lr.ph

for.end65:                                        ; preds = %if.else59, %if.end57
  %others.0.ph.lcssa = phi %union.tree_node* [ %others.0.ph676, %if.end57 ], [ %call62, %if.else59 ]
  %22 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names.i632 = getelementptr inbounds %struct.binding_level* %22, i64 0, i32 0
  %23 = load %union.tree_node** %names.i632, align 8, !tbaa !34
  %arguments = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 10
  store %union.tree_node* %23, %union.tree_node** %arguments, align 8, !tbaa !78
  %tobool69669 = icmp eq %union.tree_node* %others.0.ph.lcssa, null
  br i1 %tobool69669, label %for.end95, label %for.body70

for.body70:                                       ; preds = %for.end65, %for.cond68.backedge
  %parm.1670 = phi %union.tree_node* [ %24, %for.cond68.backedge ], [ %others.0.ph.lcssa, %for.end65 ]
  %chain72 = getelementptr inbounds %union.tree_node* %parm.1670, i64 0, i32 0, i32 0, i32 0
  %24 = load %union.tree_node** %chain72, align 8, !tbaa !29
  %name74 = getelementptr inbounds %union.tree_node* %parm.1670, i64 0, i32 0, i32 8
  %25 = load %union.tree_node** %name74, align 8, !tbaa !48
  %cmp75 = icmp eq %union.tree_node* %25, null
  br i1 %cmp75, label %for.cond68.backedge, label %if.else77

if.else77:                                        ; preds = %for.body70
  %type79 = getelementptr inbounds %union.tree_node* %parm.1670, i64 0, i32 0, i32 0, i32 1
  %26 = load %union.tree_node** %type79, align 8, !tbaa !23
  %27 = getelementptr inbounds %union.tree_node* %26, i64 0, i32 0, i32 15
  %28 = load %union.tree_node** %27, align 8, !tbaa !67
  %29 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp81 = icmp eq %union.tree_node* %28, %29
  br i1 %cmp81, label %for.cond68.backedge, label %if.else83

if.else83:                                        ; preds = %if.else77
  %code85 = getelementptr inbounds %union.tree_node* %parm.1670, i64 0, i32 0, i32 0, i32 2
  %bf.load86 = load i32* %code85, align 8
  %bf.clear87 = and i32 %bf.load86, 255
  %cmp88 = icmp eq i32 %bf.clear87, 35
  br i1 %cmp88, label %for.cond68.backedge, label %if.then89

for.cond68.backedge:                              ; preds = %if.else83, %for.body70, %if.then89, %if.else77
  %tobool69 = icmp eq %union.tree_node* %24, null
  br i1 %tobool69, label %for.end95, label %for.body70

if.then89:                                        ; preds = %if.else83
  %call90 = tail call %union.tree_node* @pushdecl(%union.tree_node* %parm.1670)
  br label %for.cond68.backedge

for.end95:                                        ; preds = %for.cond68.backedge, %for.end65.thread, %for.end65
  %30 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tags.i = getelementptr inbounds %struct.binding_level* %30, i64 0, i32 1
  %31 = load %union.tree_node** %tags.i, align 8, !tbaa !35
  %call97 = tail call %union.tree_node* @chainon(%union.tree_node* %2, %union.tree_node* %31) #5
  %32 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tags1.i = getelementptr inbounds %struct.binding_level* %32, i64 0, i32 1
  store %union.tree_node* %call97, %union.tree_node** %tags1.i, align 8, !tbaa !35
  br label %if.end460

for.cond109.preheader:                            ; preds = %for.body101, %for.cond99.preheader
  br i1 %cmp, label %for.cond211.outer, label %for.body111.lr.ph

for.body111.lr.ph:                                ; preds = %for.cond109.preheader
  %linenum = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 2
  %filename = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 1
  br label %for.body111

for.body101:                                      ; preds = %for.cond99.preheader, %for.body101
  %parm.2668 = phi %union.tree_node* [ %34, %for.body101 ], [ %4, %for.cond99.preheader ]
  %weak_flag = getelementptr inbounds %union.tree_node* %parm.2668, i64 0, i32 0, i32 5
  %33 = bitcast i48* %weak_flag to i64*
  %bf.load103 = load i64* %33, align 8
  %bf.clear104 = and i64 %bf.load103, -8388609
  store i64 %bf.clear104, i64* %33, align 8
  %chain107 = getelementptr inbounds %union.tree_node* %parm.2668, i64 0, i32 0, i32 0, i32 0
  %34 = load %union.tree_node** %chain107, align 8, !tbaa !29
  %tobool100 = icmp eq %union.tree_node* %34, null
  br i1 %tobool100, label %for.cond109.preheader, label %for.body101

for.body111:                                      ; preds = %for.body111.lr.ph, %for.inc207
  %parm.3666 = phi %union.tree_node* [ %1, %for.body111.lr.ph ], [ %58, %for.inc207 ]
  %value113 = getelementptr inbounds %union.tree_node* %parm.3666, i64 0, i32 0, i32 2
  %35 = bitcast i32* %value113 to %union.tree_node**
  %36 = load %union.tree_node** %35, align 8, !tbaa !50
  %cmp114 = icmp eq %union.tree_node* %36, null
  br i1 %cmp114, label %if.then115, label %for.cond119.preheader

for.cond119.preheader:                            ; preds = %for.body111
  br i1 %tobool100667, label %if.then178, label %for.body121

if.then115:                                       ; preds = %for.body111
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %0, i8* getelementptr inbounds ([43 x i8]* @.str242, i64 0, i64 0)) #5
  %purpose117 = getelementptr inbounds %union.tree_node* %parm.3666, i64 0, i32 0, i32 1
  store i8* null, i8** %purpose117, align 8, !tbaa !90
  br label %for.inc207

for.body121:                                      ; preds = %for.cond119.preheader, %for.inc135
  %tail.0664 = phi %union.tree_node* [ %38, %for.inc135 ], [ %4, %for.cond119.preheader ]
  %name123 = getelementptr inbounds %union.tree_node* %tail.0664, i64 0, i32 0, i32 8
  %37 = load %union.tree_node** %name123, align 8, !tbaa !48
  %cmp126 = icmp eq %union.tree_node* %37, %36
  br i1 %cmp126, label %land.lhs.true127, label %for.inc135

land.lhs.true127:                                 ; preds = %for.body121
  %code129 = getelementptr inbounds %union.tree_node* %tail.0664, i64 0, i32 0, i32 0, i32 2
  %bf.load130 = load i32* %code129, align 8
  %bf.clear131 = and i32 %bf.load130, 255
  %cmp132 = icmp eq i32 %bf.clear131, 35
  br i1 %cmp132, label %for.end138, label %for.inc135

for.inc135:                                       ; preds = %for.body121, %land.lhs.true127
  %chain137 = getelementptr inbounds %union.tree_node* %tail.0664, i64 0, i32 0, i32 0, i32 0
  %38 = load %union.tree_node** %chain137, align 8, !tbaa !29
  %tobool120 = icmp eq %union.tree_node* %38, null
  br i1 %tobool120, label %if.then178, label %for.body121

for.end138:                                       ; preds = %land.lhs.true127
  %tobool139 = icmp eq %union.tree_node* %tail.0664, null
  br i1 %tobool139, label %if.then178, label %land.lhs.true140

land.lhs.true140:                                 ; preds = %for.end138
  %weak_flag142 = getelementptr inbounds %union.tree_node* %tail.0664, i64 0, i32 0, i32 5
  %39 = bitcast i48* %weak_flag142 to i64*
  %bf.load143 = load i64* %39, align 8
  %bf.cast = and i64 %bf.load143, 8388608
  %tobool145 = icmp eq i64 %bf.cast, 0
  br i1 %tobool145, label %land.lhs.true149, label %if.then146

if.then146:                                       ; preds = %land.lhs.true140
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %tail.0664, i8* getelementptr inbounds ([31 x i8]* @.str243, i64 0, i64 0)) #5
  br label %if.then178

land.lhs.true149:                                 ; preds = %land.lhs.true140
  %type151 = getelementptr inbounds %union.tree_node* %tail.0664, i64 0, i32 0, i32 0, i32 1
  %40 = load %union.tree_node** %type151, align 8, !tbaa !23
  %code153 = getelementptr inbounds %union.tree_node* %40, i64 0, i32 0, i32 0, i32 2
  %bf.load154 = load i32* %code153, align 8
  %bf.clear155 = and i32 %bf.load154, 255
  %cmp156 = icmp eq i32 %bf.clear155, 5
  br i1 %cmp156, label %if.then157, label %if.end161

if.then157:                                       ; preds = %land.lhs.true149
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %tail.0664, i8* getelementptr inbounds ([29 x i8]* @.str241, i64 0, i64 0)) #5
  %41 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  store %union.tree_node* %41, %union.tree_node** %type151, align 8, !tbaa !23
  %42 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %initial = getelementptr inbounds %union.tree_node* %tail.0664, i64 0, i32 0, i32 12
  store %union.tree_node* %42, %union.tree_node** %initial, align 8, !tbaa !40
  tail call void @layout_decl(%union.tree_node* %tail.0664, i32 0) #5
  br label %if.end161

if.end161:                                        ; preds = %if.then157, %land.lhs.true149
  %43 = load i32* @flag_traditional, align 4
  %tobool164 = icmp eq i32 %43, 0
  br i1 %tobool164, label %if.end200, label %land.lhs.true165

land.lhs.true165:                                 ; preds = %if.end161
  %type167 = getelementptr inbounds %union.tree_node* %tail.0664, i64 0, i32 0, i32 0, i32 1
  %44 = load %union.tree_node** %type167, align 8, !tbaa !23
  %45 = getelementptr inbounds %union.tree_node* %44, i64 0, i32 0, i32 15
  %46 = load %union.tree_node** %45, align 8, !tbaa !67
  %47 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 24), align 8, !tbaa !1
  %cmp170 = icmp eq %union.tree_node* %46, %47
  br i1 %cmp170, label %if.then171, label %if.end200

if.then171:                                       ; preds = %land.lhs.true165
  %48 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !tbaa !1
  store %union.tree_node* %48, %union.tree_node** %type167, align 8, !tbaa !23
  %49 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 25), align 8, !tbaa !1
  %initial175 = getelementptr inbounds %union.tree_node* %tail.0664, i64 0, i32 0, i32 12
  store %union.tree_node* %49, %union.tree_node** %initial175, align 8, !tbaa !40
  tail call void @layout_decl(%union.tree_node* %tail.0664, i32 0) #5
  br label %if.end200

if.then178:                                       ; preds = %for.inc135, %if.then146, %for.end138, %for.cond119.preheader
  %50 = load %union.tree_node** %35, align 8, !tbaa !50
  %51 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %call181 = tail call %union.tree_node* @build_decl(i32 35, %union.tree_node* %50, %union.tree_node* %51) #5
  %type183 = getelementptr inbounds %union.tree_node* %call181, i64 0, i32 0, i32 0, i32 1
  %52 = load %union.tree_node** %type183, align 8, !tbaa !23
  %initial185 = getelementptr inbounds %union.tree_node* %call181, i64 0, i32 0, i32 12
  store %union.tree_node* %52, %union.tree_node** %initial185, align 8, !tbaa !40
  %53 = load i32* %linenum, align 4, !tbaa !55
  %linenum188 = getelementptr inbounds %union.tree_node* %call181, i64 0, i32 0, i32 2
  store i32 %53, i32* %linenum188, align 4, !tbaa !55
  %54 = load i8** %filename, align 8, !tbaa !54
  %filename191 = getelementptr inbounds %union.tree_node* %call181, i64 0, i32 0, i32 1
  store i8* %54, i8** %filename191, align 8, !tbaa !54
  %55 = load i32* @flag_isoc99, align 4, !tbaa !5
  %tobool192 = icmp eq i32 %55, 0
  br i1 %tobool192, label %if.else194, label %if.then193

if.then193:                                       ; preds = %if.then178
  tail call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %call181, i8* getelementptr inbounds ([31 x i8]* @.str244, i64 0, i64 0)) #5
  br label %if.end198

if.else194:                                       ; preds = %if.then178
  %56 = load i32* @extra_warnings, align 4, !tbaa !5
  %tobool195 = icmp eq i32 %56, 0
  br i1 %tobool195, label %if.end198, label %if.then196

if.then196:                                       ; preds = %if.else194
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %call181, i8* getelementptr inbounds ([31 x i8]* @.str244, i64 0, i64 0)) #5
  br label %if.end198

if.end198:                                        ; preds = %if.else194, %if.then196, %if.then193
  %call199 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call181)
  br label %if.end200

if.end200:                                        ; preds = %if.end161, %land.lhs.true165, %if.then171, %if.end198
  %found.2 = phi %union.tree_node* [ %call181, %if.end198 ], [ %tail.0664, %if.then171 ], [ %tail.0664, %if.end161 ], [ %tail.0664, %land.lhs.true165 ]
  %purpose202 = getelementptr inbounds %union.tree_node* %parm.3666, i64 0, i32 0, i32 1
  %found.2.c = bitcast %union.tree_node* %found.2 to i8*
  store i8* %found.2.c, i8** %purpose202, align 8, !tbaa !90
  %weak_flag204 = getelementptr inbounds %union.tree_node* %found.2, i64 0, i32 0, i32 5
  %57 = bitcast i48* %weak_flag204 to i64*
  %bf.load205 = load i64* %57, align 8
  %bf.set = or i64 %bf.load205, 8388608
  store i64 %bf.set, i64* %57, align 8
  br label %for.inc207

for.inc207:                                       ; preds = %if.end200, %if.then115
  %chain209 = getelementptr inbounds %union.tree_node* %parm.3666, i64 0, i32 0, i32 0, i32 0
  %58 = load %union.tree_node** %chain209, align 8, !tbaa !29
  %tobool110 = icmp eq %union.tree_node* %58, null
  br i1 %tobool110, label %for.cond211.outer, label %for.body111

for.cond211:                                      ; preds = %for.cond211.outer641, %if.end234
  %parm.4 = phi %union.tree_node* [ %59, %if.end234 ], [ %parm.4.ph643, %for.cond211.outer641 ]
  %tobool212 = icmp eq %union.tree_node* %parm.4, null
  br i1 %tobool212, label %for.end247, label %for.body213

for.body213:                                      ; preds = %for.cond211
  %chain216 = getelementptr inbounds %union.tree_node* %parm.4, i64 0, i32 0, i32 0, i32 0
  %59 = load %union.tree_node** %chain216, align 8, !tbaa !29
  store %union.tree_node* null, %union.tree_node** %chain216, align 8, !tbaa !29
  %code220 = getelementptr inbounds %union.tree_node* %parm.4, i64 0, i32 0, i32 0, i32 2
  %bf.load221 = load i32* %code220, align 8
  %bf.clear222 = and i32 %bf.load221, 255
  %cmp223 = icmp eq i32 %bf.clear222, 35
  br i1 %cmp223, label %if.else226, label %if.then224

if.then224:                                       ; preds = %for.body213
  %call225 = tail call %union.tree_node* @chainon(%union.tree_node* %nonparms.0.ph, %union.tree_node* %parm.4) #5
  br label %for.cond211.outer

for.cond211.outer:                                ; preds = %for.cond109.preheader, %for.inc207, %if.then224
  %nonparms.0.ph = phi %union.tree_node* [ %call225, %if.then224 ], [ null, %for.inc207 ], [ null, %for.cond109.preheader ]
  %specparms.0.ph = phi %union.tree_node* [ %specparms.0.ph642, %if.then224 ], [ null, %for.cond109.preheader ], [ %1, %for.inc207 ]
  %parm.4.ph = phi %union.tree_node* [ %59, %if.then224 ], [ %4, %for.inc207 ], [ %4, %for.cond109.preheader ]
  br label %for.cond211.outer641

for.cond211.outer641:                             ; preds = %for.cond211.outer, %if.then242
  %specparms.0.ph642 = phi %union.tree_node* [ %call244, %if.then242 ], [ %specparms.0.ph, %for.cond211.outer ]
  %parm.4.ph643 = phi %union.tree_node* [ %59, %if.then242 ], [ %parm.4.ph, %for.cond211.outer ]
  br label %for.cond211

if.else226:                                       ; preds = %for.body213
  %type228 = getelementptr inbounds %union.tree_node* %parm.4, i64 0, i32 0, i32 0, i32 1
  %60 = load %union.tree_node** %type228, align 8, !tbaa !23
  %size = getelementptr inbounds %union.tree_node* %60, i64 0, i32 0, i32 2
  %61 = bitcast i32* %size to %union.tree_node**
  %62 = load %union.tree_node** %61, align 8, !tbaa !80
  %cmp230 = icmp eq %union.tree_node* %62, null
  br i1 %cmp230, label %if.then231, label %if.end234

if.then231:                                       ; preds = %if.else226
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %parm.4, i8* getelementptr inbounds ([35 x i8]* @.str245, i64 0, i64 0)) #5
  %63 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %63, %union.tree_node** %type228, align 8, !tbaa !23
  br label %if.end234

if.end234:                                        ; preds = %if.else226, %if.then231
  %weak_flag236 = getelementptr inbounds %union.tree_node* %parm.4, i64 0, i32 0, i32 5
  %64 = bitcast i48* %weak_flag236 to i64*
  %bf.load237 = load i64* %64, align 8
  %bf.cast240 = and i64 %bf.load237, 8388608
  %tobool241 = icmp eq i64 %bf.cast240, 0
  br i1 %tobool241, label %if.then242, label %for.cond211

if.then242:                                       ; preds = %if.end234
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %parm.4, i8* getelementptr inbounds ([53 x i8]* @.str246, i64 0, i64 0)) #5
  %call243 = tail call %union.tree_node* @tree_cons(%union.tree_node* %parm.4, %union.tree_node* null, %union.tree_node* null) #5
  %call244 = tail call %union.tree_node* @chainon(%union.tree_node* %specparms.0.ph642, %union.tree_node* %call243) #5
  br label %for.cond211.outer641

for.end247:                                       ; preds = %for.cond211
  %arguments249 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 10
  store %union.tree_node* null, %union.tree_node** %arguments249, align 8, !tbaa !78
  %tobool251660 = icmp eq %union.tree_node* %specparms.0.ph642, null
  br i1 %tobool251660, label %for.end277, label %for.body252

for.body252:                                      ; preds = %for.end247, %for.inc274
  %last.0662 = phi %union.tree_node* [ %last.1, %for.inc274 ], [ null, %for.end247 ]
  %parm.5661 = phi %union.tree_node* [ %69, %for.inc274 ], [ %specparms.0.ph642, %for.end247 ]
  %purpose254 = getelementptr inbounds %union.tree_node* %parm.5661, i64 0, i32 0, i32 1
  %65 = load i8** %purpose254, align 8
  %66 = bitcast i8* %65 to %union.tree_node*
  %tobool255 = icmp eq i8* %65, null
  br i1 %tobool255, label %for.inc274, label %if.then256

if.then256:                                       ; preds = %for.body252
  %cmp257 = icmp eq %union.tree_node* %last.0662, null
  br i1 %cmp257, label %if.then258, label %if.else263

if.then258:                                       ; preds = %if.then256
  store %union.tree_node* %66, %union.tree_node** %arguments249, align 8, !tbaa !78
  br label %if.end268

if.else263:                                       ; preds = %if.then256
  %chain267 = getelementptr inbounds %union.tree_node* %last.0662, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %66, %union.tree_node** %chain267, align 8, !tbaa !29
  br label %if.end268

if.end268:                                        ; preds = %if.else263, %if.then258
  %67 = load i8** %purpose254, align 8
  %68 = bitcast i8* %67 to %union.tree_node*
  %chain272 = bitcast i8* %67 to %union.tree_node**
  store %union.tree_node* null, %union.tree_node** %chain272, align 8, !tbaa !29
  br label %for.inc274

for.inc274:                                       ; preds = %for.body252, %if.end268
  %last.1 = phi %union.tree_node* [ %68, %if.end268 ], [ %last.0662, %for.body252 ]
  %chain276 = getelementptr inbounds %union.tree_node* %parm.5661, i64 0, i32 0, i32 0, i32 0
  %69 = load %union.tree_node** %chain276, align 8, !tbaa !29
  %tobool251 = icmp eq %union.tree_node* %69, null
  br i1 %tobool251, label %for.end277, label %for.body252

for.end277:                                       ; preds = %for.inc274, %for.end247
  %type279 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %70 = load %union.tree_node** %type279, align 8, !tbaa !23
  %values = getelementptr inbounds %union.tree_node* %70, i64 0, i32 0, i32 1
  %71 = load i8** %values, align 8
  %tobool281 = icmp eq i8* %71, null
  br i1 %tobool281, label %for.cond424.preheader, label %if.then282

for.cond424.preheader:                            ; preds = %for.end277
  %parm.7654 = load %union.tree_node** %arguments249, align 8
  %tobool425655 = icmp eq %union.tree_node* %parm.7654, null
  br i1 %tobool425655, label %for.end439.thread, label %for.body426

for.end439.thread:                                ; preds = %for.cond424.preheader
  %72 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call440704 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %72, %union.tree_node* null) #5
  br label %if.end446

if.then282:                                       ; preds = %for.end277
  %73 = bitcast i8* %71 to %union.tree_node*
  br label %for.cond290

for.cond290:                                      ; preds = %for.inc410, %if.then282
  %parm.6.in = phi %union.tree_node** [ %arguments249, %if.then282 ], [ %chain412, %for.inc410 ]
  %type283.0 = phi %union.tree_node* [ %73, %if.then282 ], [ %111, %for.inc410 ]
  %parm.6 = load %union.tree_node** %parm.6.in, align 8
  %tobool291 = icmp eq %union.tree_node* %parm.6, null
  br i1 %tobool291, label %lor.rhs, label %for.body298

lor.rhs:                                          ; preds = %for.cond290
  %tobool292 = icmp eq %union.tree_node* %type283.0, null
  br i1 %tobool292, label %for.end415, label %land.rhs

land.rhs:                                         ; preds = %lor.rhs
  %value294 = getelementptr inbounds %union.tree_node* %type283.0, i64 0, i32 0, i32 2
  %74 = bitcast i32* %value294 to %union.tree_node**
  %75 = load %union.tree_node** %74, align 8, !tbaa !50
  %76 = getelementptr inbounds %union.tree_node* %75, i64 0, i32 0, i32 15
  %77 = load %union.tree_node** %76, align 8, !tbaa !67
  %78 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp297 = icmp eq %union.tree_node* %77, %78
  br i1 %cmp297, label %for.end415, label %for.body298

for.body298:                                      ; preds = %land.rhs, %for.cond290
  %cmp300 = icmp eq %union.tree_node* %type283.0, null
  %or.cond486 = or i1 %tobool291, %cmp300
  br i1 %or.cond486, label %if.then307, label %lor.lhs.false301

lor.lhs.false301:                                 ; preds = %for.body298
  %value303 = getelementptr inbounds %union.tree_node* %type283.0, i64 0, i32 0, i32 2
  %79 = bitcast i32* %value303 to %union.tree_node**
  %80 = load %union.tree_node** %79, align 8, !tbaa !50
  %81 = getelementptr inbounds %union.tree_node* %80, i64 0, i32 0, i32 15
  %82 = load %union.tree_node** %81, align 8, !tbaa !67
  %83 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %cmp306 = icmp eq %union.tree_node* %82, %83
  br i1 %cmp306, label %if.then307, label %if.end308

if.then307:                                       ; preds = %lor.lhs.false301, %for.body298
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str247, i64 0, i64 0)) #5
  %84 = load i8** @current_function_prototype_file, align 8, !tbaa !1
  %85 = load i32* @current_function_prototype_line, align 4, !tbaa !5
  tail call void (i8*, i32, i8*, ...)* @error_with_file_and_line(i8* %84, i32 %85, i8* getelementptr inbounds ([22 x i8]* @.str248, i64 0, i64 0)) #5
  br label %for.end415

if.end308:                                        ; preds = %lor.lhs.false301
  %initial310 = getelementptr inbounds %union.tree_node* %parm.6, i64 0, i32 0, i32 12
  %86 = load %union.tree_node** %initial310, align 8, !tbaa !40
  %87 = getelementptr inbounds %union.tree_node* %86, i64 0, i32 0, i32 15
  %88 = load %union.tree_node** %87, align 8, !tbaa !67
  %call317 = tail call i32 @comptypes(%union.tree_node* %88, %union.tree_node* %82) #5
  %tobool318 = icmp eq i32 %call317, 0
  br i1 %tobool318, label %if.then319, label %for.inc410

if.then319:                                       ; preds = %if.end308
  %type321 = getelementptr inbounds %union.tree_node* %parm.6, i64 0, i32 0, i32 0, i32 1
  %89 = load %union.tree_node** %type321, align 8, !tbaa !23
  %90 = getelementptr inbounds %union.tree_node* %89, i64 0, i32 0, i32 15
  %91 = load %union.tree_node** %90, align 8, !tbaa !67
  %92 = load %union.tree_node** %79, align 8, !tbaa !50
  %93 = getelementptr inbounds %union.tree_node* %92, i64 0, i32 0, i32 15
  %94 = load %union.tree_node** %93, align 8, !tbaa !67
  %cmp328 = icmp eq %union.tree_node* %91, %94
  br i1 %cmp328, label %if.then329, label %if.else387

if.then329:                                       ; preds = %if.then319
  store %union.tree_node* %89, %union.tree_node** %initial310, align 8, !tbaa !40
  %95 = load i32* @target_flags, align 4, !tbaa !5
  %and = and i32 %95, 33554432
  %tobool334 = icmp eq i32 %and, 0
  br i1 %tobool334, label %land.lhs.true335, label %if.end381

land.lhs.true335:                                 ; preds = %if.then329
  %code339 = getelementptr inbounds %union.tree_node* %89, i64 0, i32 0, i32 0, i32 2
  %bf.load340 = load i32* %code339, align 8
  %bf.clear341 = and i32 %bf.load340, 255
  switch i32 %bf.clear341, label %if.end381 [
    i32 6, label %land.lhs.true367
    i32 10, label %land.lhs.true367
    i32 11, label %land.lhs.true367
    i32 12, label %land.lhs.true367
  ]

land.lhs.true367:                                 ; preds = %land.lhs.true335, %land.lhs.true335, %land.lhs.true335, %land.lhs.true335
  %type370 = bitcast %union.tree_node* %89 to %struct.tree_type*
  %precision = getelementptr inbounds %struct.tree_type* %type370, i64 0, i32 6
  %bf.load371 = load i32* %precision, align 4
  %bf.clear372 = and i32 %bf.load371, 511
  %96 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %type373 = bitcast %union.tree_node* %96 to %struct.tree_type*
  %precision374 = getelementptr inbounds %struct.tree_type* %type373, i64 0, i32 6
  %bf.load375 = load i32* %precision374, align 4
  %bf.clear376 = and i32 %bf.load375, 511
  %cmp377 = icmp ult i32 %bf.clear372, %bf.clear376
  br i1 %cmp377, label %if.then378, label %if.end381

if.then378:                                       ; preds = %land.lhs.true367
  store %union.tree_node* %96, %union.tree_node** %initial310, align 8, !tbaa !40
  br label %if.end381

if.end381:                                        ; preds = %land.lhs.true335, %if.then329, %if.then378, %land.lhs.true367
  %97 = load i32* @pedantic, align 4, !tbaa !5
  %tobool382 = icmp eq i32 %97, 0
  br i1 %tobool382, label %for.inc410, label %if.then383

if.then383:                                       ; preds = %if.end381
  %name385 = getelementptr inbounds %union.tree_node* %parm.6, i64 0, i32 0, i32 8
  %98 = load %union.tree_node** %name385, align 8, !tbaa !48
  %id = getelementptr inbounds %union.tree_node* %98, i64 0, i32 0, i32 1
  %99 = getelementptr inbounds i8** %id, i64 1
  %100 = load i8** %99, align 8, !tbaa !21
  tail call void (i8*, ...)* @pedwarn(i8* getelementptr inbounds ([47 x i8]* @.str249, i64 0, i64 0), i8* %100) #5
  %101 = load i8** @current_function_prototype_file, align 8, !tbaa !1
  %102 = load i32* @current_function_prototype_line, align 4, !tbaa !5
  tail call void (i8*, i32, i8*, ...)* @warning_with_file_and_line(i8* %101, i32 %102, i8* getelementptr inbounds ([22 x i8]* @.str248, i64 0, i64 0)) #5
  br label %for.inc410

if.else387:                                       ; preds = %if.then319
  %103 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool388 = icmp ne i32 %103, 0
  %104 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8
  %cmp394 = icmp eq %union.tree_node* %91, %104
  %or.cond629 = and i1 %tobool388, %cmp394
  %105 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 8
  %cmp400 = icmp eq %union.tree_node* %94, %105
  %or.cond630 = and i1 %or.cond629, %cmp400
  br i1 %or.cond630, label %for.inc410, label %if.then401

if.then401:                                       ; preds = %if.else387
  %name403 = getelementptr inbounds %union.tree_node* %parm.6, i64 0, i32 0, i32 8
  %106 = load %union.tree_node** %name403, align 8, !tbaa !48
  %id405 = getelementptr inbounds %union.tree_node* %106, i64 0, i32 0, i32 1
  %107 = getelementptr inbounds i8** %id405, i64 1
  %108 = load i8** %107, align 8, !tbaa !21
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str250, i64 0, i64 0), i8* %108) #5
  %109 = load i8** @current_function_prototype_file, align 8, !tbaa !1
  %110 = load i32* @current_function_prototype_line, align 4, !tbaa !5
  tail call void (i8*, i32, i8*, ...)* @error_with_file_and_line(i8* %109, i32 %110, i8* getelementptr inbounds ([22 x i8]* @.str248, i64 0, i64 0)) #5
  br label %for.inc410

for.inc410:                                       ; preds = %if.else387, %if.end381, %if.end308, %if.then401, %if.then383
  %chain412 = getelementptr inbounds %union.tree_node* %parm.6, i64 0, i32 0, i32 0, i32 0
  %chain414 = getelementptr inbounds %union.tree_node* %type283.0, i64 0, i32 0, i32 0, i32 0
  %111 = load %union.tree_node** %chain414, align 8, !tbaa !29
  br label %for.cond290

for.end415:                                       ; preds = %land.rhs, %lor.rhs, %if.then307
  %112 = load %union.tree_node** %type279, align 8, !tbaa !23
  %113 = getelementptr inbounds %union.tree_node* %112, i64 0, i32 0, i32 16
  store %union.tree_node* null, %union.tree_node** %113, align 8, !tbaa !68
  br label %if.end456

for.body426:                                      ; preds = %for.cond424.preheader, %if.end435
  %parm.7658 = phi %union.tree_node* [ %parm.7, %if.end435 ], [ %parm.7654, %for.cond424.preheader ]
  %last420.0657 = phi %union.tree_node* [ %call429, %if.end435 ], [ null, %for.cond424.preheader ]
  %actual.0656 = phi %union.tree_node* [ %actual.1, %if.end435 ], [ null, %for.cond424.preheader ]
  %initial428 = getelementptr inbounds %union.tree_node* %parm.7658, i64 0, i32 0, i32 12
  %114 = load %union.tree_node** %initial428, align 8, !tbaa !40
  %call429 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %114, %union.tree_node* null) #5
  %tobool430 = icmp eq %union.tree_node* %last420.0657, null
  br i1 %tobool430, label %if.end435, label %if.then431

if.then431:                                       ; preds = %for.body426
  %chain433 = getelementptr inbounds %union.tree_node* %last420.0657, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call429, %union.tree_node** %chain433, align 8, !tbaa !29
  br label %if.end435

if.end435:                                        ; preds = %for.body426, %if.then431
  %actual.1 = phi %union.tree_node* [ %actual.0656, %if.then431 ], [ %call429, %for.body426 ]
  %chain438 = getelementptr inbounds %union.tree_node* %parm.7658, i64 0, i32 0, i32 0, i32 0
  %parm.7 = load %union.tree_node** %chain438, align 8
  %tobool425 = icmp eq %union.tree_node* %parm.7, null
  br i1 %tobool425, label %for.end439, label %for.body426

for.end439:                                       ; preds = %if.end435
  %115 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call440 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %115, %union.tree_node* null) #5
  %tobool441 = icmp eq %union.tree_node* %call429, null
  br i1 %tobool441, label %if.end446, label %if.then442

if.then442:                                       ; preds = %for.end439
  %chain444 = getelementptr inbounds %union.tree_node* %call429, i64 0, i32 0, i32 0, i32 0
  store %union.tree_node* %call440, %union.tree_node** %chain444, align 8, !tbaa !29
  br label %if.end446

if.end446:                                        ; preds = %for.end439.thread, %for.end439, %if.then442
  %actual.2 = phi %union.tree_node* [ %actual.1, %if.then442 ], [ %call440, %for.end439 ], [ %call440704, %for.end439.thread ]
  %116 = load %union.tree_node** %type279, align 8, !tbaa !23
  %call449 = tail call %union.tree_node* @build_type_copy(%union.tree_node* %116) #5
  store %union.tree_node* %call449, %union.tree_node** %type279, align 8, !tbaa !23
  %117 = getelementptr inbounds %union.tree_node* %call449, i64 0, i32 0, i32 16
  store %union.tree_node* %actual.2, %union.tree_node** %117, align 8, !tbaa !68
  br label %if.end456

if.end456:                                        ; preds = %if.end446, %for.end415
  %118 = load %union.tree_node** %arguments249, align 8, !tbaa !78
  %call459 = tail call %union.tree_node* @chainon(%union.tree_node* %nonparms.0.ph, %union.tree_node* %118) #5
  %119 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %names.i631 = getelementptr inbounds %struct.binding_level* %119, i64 0, i32 0
  store %union.tree_node* %call459, %union.tree_node** %names.i631, align 8, !tbaa !34
  br label %if.end460

if.end460:                                        ; preds = %if.end456, %for.end95
  %prototype.0 = phi i32 [ 1, %for.end95 ], [ 0, %if.end456 ]
  store i1 true, i1* @keep_next_if_subblocks, align 1
  tail call void @gen_aux_info_record(%union.tree_node* %0, i32 1, i32 0, i32 %prototype.0) #5
  %120 = load i8** @input_filename, align 8, !tbaa !1
  %121 = load i32* @lineno, align 4, !tbaa !5
  tail call void @init_function_start(%union.tree_node* %0, i8* %120, i32 %121) #5
  %122 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %saved_tree = getelementptr inbounds %union.tree_node* %122, i64 0, i32 0, i32 20
  tail call void @begin_stmt_tree(%union.tree_node** %saved_tree) #5
  %tobool462 = icmp eq %union.tree_node* %call1, null
  br i1 %tobool462, label %if.end479, label %if.then463

if.then463:                                       ; preds = %if.end460
  %call464 = tail call %union.tree_node* @get_pending_sizes() #5
  %call465 = tail call %union.tree_node* @nreverse(%union.tree_node* %call464) #5
  %lang_specific = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 24
  %123 = load %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  %pending_sizes = getelementptr inbounds %struct.lang_decl* %123, i64 0, i32 1
  store %union.tree_node* %call465, %union.tree_node** %pending_sizes, align 8, !tbaa !94
  %tobool471652 = icmp eq %union.tree_node* %call465, null
  br i1 %tobool471652, label %if.end479, label %for.body472

for.body472:                                      ; preds = %if.then463, %for.body472
  %t.0653 = phi %union.tree_node* [ %t.0, %for.body472 ], [ %call465, %if.then463 ]
  %value474 = getelementptr inbounds %union.tree_node* %t.0653, i64 0, i32 0, i32 2
  %124 = bitcast i32* %value474 to %union.tree_node**
  %125 = load %union.tree_node** %124, align 8, !tbaa !50
  %operands = getelementptr inbounds %union.tree_node* %125, i64 0, i32 0, i32 2
  %arrayidx = getelementptr inbounds i32* %operands, i64 2
  %126 = bitcast i32* %arrayidx to %union.tree_node**
  store %union.tree_node* %call1, %union.tree_node** %126, align 8, !tbaa !1
  %chain477 = getelementptr inbounds %union.tree_node* %t.0653, i64 0, i32 0, i32 0, i32 0
  %t.0 = load %union.tree_node** %chain477, align 8
  %tobool471 = icmp eq %union.tree_node* %t.0, null
  br i1 %tobool471, label %if.end479, label %for.body472

if.end479:                                        ; preds = %for.body472, %if.then463, %if.end460
  %127 = load %struct.function** @cfun, align 8, !tbaa !1
  %x_whole_function_mode_p = getelementptr inbounds %struct.function* %127, i64 0, i32 56
  %128 = bitcast i24* %x_whole_function_mode_p to i32*
  %bf.load480 = load i32* %128, align 8
  %bf.set482 = or i32 %bf.load480, 262144
  store i32 %bf.set482, i32* %128, align 8
  store i32 0, i32* @immediate_size_expand, align 4, !tbaa !5
  %129 = load %struct.function** @cfun, align 8, !tbaa !1
  %x_dont_save_pending_sizes_p = getelementptr inbounds %struct.function* %129, i64 0, i32 56
  %130 = bitcast i24* %x_dont_save_pending_sizes_p to i32*
  %bf.load483 = load i32* %130, align 8
  %bf.set485 = or i32 %bf.load483, 524288
  store i32 %bf.set485, i32* %130, align 8
  store i32 %5, i32* @warn_shadow, align 4, !tbaa !5
  ret void
}

declare %union.tree_node* @decl_function_context(%union.tree_node*) #1

declare void @init_function_start(%union.tree_node*, i8*, i32) #1

declare void @begin_stmt_tree(%union.tree_node**) #1

; Function Attrs: nounwind uwtable
define void @finish_function(i32 %nested, i32 %can_defer_p) #0 {
entry:
  %0 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %call = tail call %union.tree_node* @poplevel(i32 1, i32 0, i32 1)
  %initial = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 12
  %1 = load %union.tree_node** %initial, align 8, !tbaa !40
  %supercontext = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 5
  %2 = bitcast i48* %supercontext to %union.tree_node**
  store %union.tree_node* %0, %union.tree_node** %2, align 8, !tbaa !47
  %result = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 11
  %3 = load %union.tree_node** %result, align 8, !tbaa !75
  %context = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 9
  store %union.tree_node* %0, %union.tree_node** %context, align 8, !tbaa !53
  %4 = load i32* @flag_traditional, align 4, !tbaa !5
  %tobool = icmp eq i32 %4, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.function** @cfun, align 8, !tbaa !1
  %calls_setjmp = getelementptr inbounds %struct.function* %5, i64 0, i32 56
  %6 = bitcast i24* %calls_setjmp to i32*
  %bf.load = load i32* %6, align 8
  %bf.clear = and i32 %bf.load, 16
  %tobool3 = icmp eq i32 %bf.clear, 0
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  tail call void @setjmp_protect(%union.tree_node* %1) #5
  tail call void @setjmp_protect_args() #5
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %name = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 8
  %7 = load %union.tree_node** %name, align 8, !tbaa !48
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !1
  %cmp = icmp eq %union.tree_node* %7, %8
  %9 = load i32* @flag_hosted, align 4
  %tobool8 = icmp ne i32 %9, 0
  %or.cond = and i1 %cmp, %tobool8
  br i1 %or.cond, label %if.then9, label %if.end23

if.then9:                                         ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type, align 8, !tbaa !23
  %type11 = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 0, i32 1
  %11 = load %union.tree_node** %type11, align 8, !tbaa !23
  %12 = getelementptr inbounds %union.tree_node* %11, i64 0, i32 0, i32 15
  %13 = load %union.tree_node** %12, align 8, !tbaa !67
  %14 = load %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !tbaa !1
  %cmp13 = icmp eq %union.tree_node* %13, %14
  br i1 %cmp13, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.then9
  %15 = load i32* @warn_main, align 4, !tbaa !5
  %tobool15 = icmp eq i32 %15, 0
  br i1 %tobool15, label %if.then16, label %if.end23

if.then16:                                        ; preds = %if.then14
  tail call void (%union.tree_node*, i8*, ...)* @pedwarn_with_decl(%union.tree_node* %0, i8* getelementptr inbounds ([33 x i8]* @.str233, i64 0, i64 0)) #5
  br label %if.end23

if.else:                                          ; preds = %if.then9
  %16 = load i32* @flag_isoc99, align 4, !tbaa !5
  %tobool18 = icmp eq i32 %16, 0
  br i1 %tobool18, label %if.end23, label %if.then19

if.then19:                                        ; preds = %if.else
  %17 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 11), align 8, !tbaa !1
  %call20 = tail call %union.tree_node* @c_expand_return(%union.tree_node* %17) #5
  br label %if.end23

if.end23:                                         ; preds = %if.then14, %if.else, %if.then16, %if.then19, %if.end
  tail call void @finish_fname_decls() #5
  %saved_tree = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 20
  tail call void @finish_stmt_tree(%union.tree_node** %saved_tree) #5
  %18 = load i32* @warn_return_type, align 4, !tbaa !5
  %tobool25 = icmp eq i32 %18, 0
  br i1 %tobool25, label %if.end59, label %land.lhs.true26

land.lhs.true26:                                  ; preds = %if.end23
  %type28 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 1
  %19 = load %union.tree_node** %type28, align 8, !tbaa !23
  %type30 = getelementptr inbounds %union.tree_node* %19, i64 0, i32 0, i32 0, i32 1
  %20 = load %union.tree_node** %type30, align 8, !tbaa !23
  %code = getelementptr inbounds %union.tree_node* %20, i64 0, i32 0, i32 0, i32 2
  %bf.load32 = load i32* %code, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp eq i32 %bf.clear33, 5
  %21 = load i32* @current_function_returns_value, align 4
  %tobool36 = icmp ne i32 %21, 0
  %or.cond63 = or i1 %cmp34, %tobool36
  %22 = load i32* @current_function_returns_null, align 4
  %tobool38 = icmp ne i32 %22, 0
  %or.cond64 = or i1 %or.cond63, %tobool38
  %23 = load i32* @current_function_returns_abnormally, align 4
  %tobool40 = icmp ne i32 %23, 0
  %or.cond65 = or i1 %or.cond64, %tobool40
  br i1 %or.cond65, label %if.end59, label %land.lhs.true41

land.lhs.true41:                                  ; preds = %land.lhs.true26
  %24 = load %union.tree_node** %name, align 8, !tbaa !48
  %25 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8, !tbaa !1
  %cmp44 = icmp eq %union.tree_node* %24, %25
  br i1 %cmp44, label %if.end59, label %land.lhs.true45

land.lhs.true45:                                  ; preds = %land.lhs.true41
  %lang_flag_1 = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 5
  %26 = bitcast i48* %lang_flag_1 to i64*
  %bf.load47 = load i64* %26, align 8
  %27 = and i64 %bf.load47, 274877908992
  %28 = icmp eq i64 %27, 2048
  br i1 %28, label %if.then58, label %if.end59

if.then58:                                        ; preds = %land.lhs.true45
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([51 x i8]* @.str251, i64 0, i64 0)) #5
  br label %if.end59

if.end59:                                         ; preds = %land.lhs.true45, %if.end23, %land.lhs.true26, %if.then58, %land.lhs.true41
  %29 = load %struct.function** @cfun, align 8, !tbaa !1
  tail call void @free_after_parsing(%struct.function* %29) #5
  %30 = load %struct.function** @cfun, align 8, !tbaa !1
  tail call void @free_after_compilation(%struct.function* %30) #5
  store %struct.function* null, %struct.function** @cfun, align 8, !tbaa !1
  %tobool60 = icmp eq i32 %nested, 0
  br i1 %tobool60, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.end59
  tail call fastcc void @c_expand_body(%union.tree_node* %0, i32 0, i32 %can_defer_p)
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !tbaa !1
  br label %if.end62

if.end62:                                         ; preds = %if.end59, %if.then61
  ret void
}

declare void @setjmp_protect(%union.tree_node*) #1

declare void @setjmp_protect_args() #1

declare %union.tree_node* @c_expand_return(%union.tree_node*) #1

declare void @finish_fname_decls() #1

declare void @finish_stmt_tree(%union.tree_node**) #1

declare void @free_after_parsing(%struct.function*) #1

declare void @free_after_compilation(%struct.function*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @c_expand_body(%union.tree_node* %fndecl, i32 %nested_p, i32 %can_defer_p) #0 {
entry:
  %0 = load i32* @flag_syntax_only, align 4, !tbaa !5
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %1 = load i32* @flag_inline_trees, align 4, !tbaa !5
  %tobool1 = icmp eq i32 %1, 0
  br i1 %tobool1, label %if.end11, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @timevar_push(i32 12) #5
  %call = tail call i32 @tree_inlinable_function_p(%union.tree_node* %fndecl) #5
  %lnot = icmp eq i32 %call, 0
  %lnot.ext = zext i1 %lnot to i32
  %tobool4 = xor i1 %lnot, true
  %tobool5 = icmp ne i32 %can_defer_p, 0
  %or.cond = and i1 %tobool5, %tobool4
  br i1 %or.cond, label %land.lhs.true6, label %if.end10

land.lhs.true6:                                   ; preds = %if.then2
  %call7 = tail call i32 @defer_fn(%union.tree_node* %fndecl) #5
  %tobool8 = icmp eq i32 %call7, 0
  br i1 %tobool8, label %if.end10, label %if.then9

if.then9:                                         ; preds = %land.lhs.true6
  %2 = load %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !1
  %deferred_inline_function = getelementptr inbounds %struct.gcc_debug_hooks* %2, i64 0, i32 17
  %3 = load void (%union.tree_node*)** %deferred_inline_function, align 8, !tbaa !97
  tail call void %3(%union.tree_node* %fndecl) #5
  tail call void @timevar_pop(i32 12) #5
  br label %return

if.end10:                                         ; preds = %land.lhs.true6, %if.then2
  tail call void @optimize_inline_calls(%union.tree_node* %fndecl) #5
  tail call void @timevar_pop(i32 12) #5
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.end10
  %uninlinable.0 = phi i32 [ %lnot.ext, %if.end10 ], [ 1, %if.end ]
  tail call void @timevar_push(i32 10) #5
  %tobool12 = icmp ne i32 %nested_p, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  %lang_specific = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 24
  %4 = load %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  %pending_sizes = getelementptr inbounds %struct.lang_decl* %4, i64 0, i32 1
  %5 = load %union.tree_node** %pending_sizes, align 8, !tbaa !94
  tail call void @expand_pending_sizes(%union.tree_node* %5) #5
  tail call void @push_function_context() #5
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11
  store %union.tree_node* %fndecl, %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %filename = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 1
  %6 = load i8** %filename, align 8, !tbaa !54
  store i8* %6, i8** @input_filename, align 8, !tbaa !1
  %linenum = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 2
  %7 = load i32* %linenum, align 4, !tbaa !55
  tail call void @init_function_start(%union.tree_node* %fndecl, i8* %6, i32 %7) #5
  %8 = load %struct.function** @cfun, align 8, !tbaa !1
  %x_whole_function_mode_p = getelementptr inbounds %struct.function* %8, i64 0, i32 56
  %9 = bitcast i24* %x_whole_function_mode_p to i32*
  %bf.load = load i32* %9, align 8
  %bf.set = or i32 %bf.load, 262144
  store i32 %bf.set, i32* %9, align 8
  store i32 0, i32* @immediate_size_expand, align 4, !tbaa !5
  %10 = load %struct.function** @cfun, align 8, !tbaa !1
  %x_dont_save_pending_sizes_p = getelementptr inbounds %struct.function* %10, i64 0, i32 56
  %11 = bitcast i24* %x_dont_save_pending_sizes_p to i32*
  %bf.load17 = load i32* %11, align 8
  %bf.set19 = or i32 %bf.load17, 524288
  store i32 %bf.set19, i32* %11, align 8
  %.b = load i1* @c_function_varargs, align 1
  br i1 %.b, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end14
  tail call void @mark_varargs() #5
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.end14
  tail call void @expand_function_start(%union.tree_node* %fndecl, i32 0) #5
  %name = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 8
  %12 = load %union.tree_node** %name, align 8, !tbaa !48
  %tobool24 = icmp ne %union.tree_node* %12, null
  %13 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 50), align 8
  %cmp = icmp eq %union.tree_node* %12, %13
  %or.cond212 = and i1 %tobool24, %cmp
  br i1 %or.cond212, label %land.lhs.true28, label %if.end32

land.lhs.true28:                                  ; preds = %if.end22
  %context = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 9
  %14 = load %union.tree_node** %context, align 8, !tbaa !53
  %cmp30 = icmp eq %union.tree_node* %14, null
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %land.lhs.true28
  tail call void @expand_main_function() #5
  br label %if.end32

if.end32:                                         ; preds = %if.end22, %if.then31, %land.lhs.true28
  %saved_tree = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 20
  %15 = load %union.tree_node** %saved_tree, align 8, !tbaa !76
  tail call void @expand_stmt(%union.tree_node* %15) #5
  %tobool34 = icmp eq i32 %uninlinable.0, 0
  br i1 %tobool34, label %if.end38, label %if.then35

if.then35:                                        ; preds = %if.end32
  store %union.tree_node* null, %union.tree_node** %saved_tree, align 8, !tbaa !76
  br label %if.end38

if.end38:                                         ; preds = %if.end32, %if.then35
  store i32 1, i32* @immediate_size_expand, align 4, !tbaa !5
  %16 = load void ()** @lang_expand_function_end, align 8, !tbaa !1
  %tobool39 = icmp eq void ()* %16, null
  br i1 %tobool39, label %if.end41, label %if.then40

if.then40:                                        ; preds = %if.end38
  tail call void %16() #5
  br label %if.end41

if.end41:                                         ; preds = %if.end38, %if.then40
  %17 = load i8** @input_filename, align 8, !tbaa !1
  %18 = load i32* @lineno, align 4, !tbaa !5
  tail call void @expand_function_end(i8* %17, i32 %18, i32 0) #5
  br i1 %tobool12, label %if.then43, label %if.end47.critedge

if.then43:                                        ; preds = %if.end41
  tail call void @ggc_push_context() #5
  tail call void @rest_of_compilation(%union.tree_node* %fndecl) #5
  tail call void @ggc_pop_context() #5
  br label %if.end47

if.end47.critedge:                                ; preds = %if.end41
  tail call void @rest_of_compilation(%union.tree_node* %fndecl) #5
  br label %if.end47

if.end47:                                         ; preds = %if.end47.critedge, %if.then43
  %19 = load i32* @extra_warnings, align 4, !tbaa !5
  %tobool48 = icmp ne i32 %19, 0
  %20 = load i32* @current_function_returns_value, align 4
  %tobool50 = icmp ne i32 %20, 0
  %or.cond164 = and i1 %tobool48, %tobool50
  %21 = load i32* @current_function_returns_null, align 4
  %tobool52 = icmp ne i32 %21, 0
  %or.cond165 = and i1 %or.cond164, %tobool52
  br i1 %or.cond165, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.end47
  tail call void (i8*, ...)* @warning(i8* getelementptr inbounds ([49 x i8]* @.str259, i64 0, i64 0)) #5
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.end47
  %22 = load i32* @warn_larger_than, align 4, !tbaa !5
  %tobool55 = icmp eq i32 %22, 0
  br i1 %tobool55, label %if.end97, label %land.lhs.true56

land.lhs.true56:                                  ; preds = %if.end54
  %external_flag = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 5
  %23 = bitcast i48* %external_flag to i64*
  %bf.load58 = load i64* %23, align 8
  %bf.cast = and i64 %bf.load58, 256
  %tobool60 = icmp eq i64 %bf.cast, 0
  br i1 %tobool60, label %land.lhs.true61, label %if.end97

land.lhs.true61:                                  ; preds = %land.lhs.true56
  %type = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 1
  %24 = load %union.tree_node** %type, align 8, !tbaa !23
  %tobool62 = icmp eq %union.tree_node* %24, null
  br i1 %tobool62, label %if.end97, label %if.then63

if.then63:                                        ; preds = %land.lhs.true61
  %type67 = getelementptr inbounds %union.tree_node* %24, i64 0, i32 0, i32 0, i32 1
  %25 = load %union.tree_node** %type67, align 8, !tbaa !23
  %tobool68 = icmp eq %union.tree_node* %25, null
  br i1 %tobool68, label %if.end97, label %land.lhs.true69

land.lhs.true69:                                  ; preds = %if.then63
  %26 = getelementptr inbounds %union.tree_node* %25, i64 0, i32 0, i32 4
  %27 = load %union.tree_node** %26, align 8, !tbaa !88
  %tobool71 = icmp eq %union.tree_node* %27, null
  br i1 %tobool71, label %if.end97, label %land.lhs.true72

land.lhs.true72:                                  ; preds = %land.lhs.true69
  %code = getelementptr inbounds %union.tree_node* %27, i64 0, i32 0, i32 0, i32 2
  %bf.load76 = load i32* %code, align 8
  %bf.clear77 = and i32 %bf.load76, 255
  %cmp78 = icmp eq i32 %bf.clear77, 25
  br i1 %cmp78, label %land.lhs.true79, label %if.end97

land.lhs.true79:                                  ; preds = %land.lhs.true72
  %28 = load i64* @larger_than_size, align 8, !tbaa !77
  %call82 = tail call i32 @compare_tree_int(%union.tree_node* %27, i64 %28) #5
  %cmp83 = icmp sgt i32 %call82, 0
  br i1 %cmp83, label %if.then84, label %if.end97

if.then84:                                        ; preds = %land.lhs.true79
  %29 = load %union.tree_node** %26, align 8, !tbaa !88
  %int_cst87 = getelementptr inbounds %union.tree_node* %29, i64 0, i32 0, i32 2
  %low = bitcast i32* %int_cst87 to i64*
  %30 = load i64* %low, align 8, !tbaa !98
  %conv90 = and i64 %30, 4294967295
  %call91 = tail call i32 @compare_tree_int(%union.tree_node* %29, i64 %conv90) #5
  %cmp92 = icmp eq i32 %call91, 0
  br i1 %cmp92, label %if.then94, label %if.else

if.then94:                                        ; preds = %if.then84
  %conv = trunc i64 %30 to i32
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %fndecl, i8* getelementptr inbounds ([41 x i8]* @.str260, i64 0, i64 0), i32 %conv) #5
  br label %if.end97

if.else:                                          ; preds = %if.then84
  %31 = load i64* @larger_than_size, align 8, !tbaa !77
  tail call void (%union.tree_node*, i8*, ...)* @warning_with_decl(%union.tree_node* %fndecl, i8* getelementptr inbounds ([53 x i8]* @.str261, i64 0, i64 0), i64 %31) #5
  br label %if.end97

if.end97:                                         ; preds = %land.lhs.true69, %if.then63, %land.lhs.true61, %land.lhs.true56, %if.end54, %land.lhs.true72, %land.lhs.true79, %if.else, %if.then94
  %f = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 19, i32 0
  %32 = load %struct.function** %f, align 8, !tbaa !1
  %cmp99 = icmp ne %struct.function* %32, null
  %or.cond166 = or i1 %cmp99, %tobool12
  %33 = load i32* @flag_inline_trees, align 4
  %tobool104 = icmp ne i32 %33, 0
  %or.cond167 = or i1 %or.cond166, %tobool104
  br i1 %or.cond167, label %if.end114, label %if.then105

if.then105:                                       ; preds = %if.end97
  %initial = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 12
  %34 = load %union.tree_node** %initial, align 8, !tbaa !40
  %cmp107 = icmp eq %union.tree_node* %34, null
  br i1 %cmp107, label %if.end112, label %if.then109

if.then109:                                       ; preds = %if.then105
  %35 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  store %union.tree_node* %35, %union.tree_node** %initial, align 8, !tbaa !40
  br label %if.end112

if.end112:                                        ; preds = %if.then105, %if.then109
  %arguments = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 10
  store %union.tree_node* null, %union.tree_node** %arguments, align 8, !tbaa !78
  br label %if.end114

if.end114:                                        ; preds = %if.end97, %if.end112
  %static_ctor_flag = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 5
  %36 = bitcast i48* %static_ctor_flag to i64*
  %bf.load116 = load i64* %36, align 8
  %bf.cast119 = and i64 %bf.load116, 1048576
  %tobool120 = icmp eq i64 %bf.cast119, 0
  br i1 %tobool120, label %if.end133, label %if.then121

if.then121:                                       ; preds = %if.end114
  %37 = load i8* getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 14), align 1, !tbaa !101, !range !102
  %tobool122 = icmp eq i8 %37, 0
  br i1 %tobool122, label %if.else130, label %if.then123

if.then123:                                       ; preds = %if.then121
  %38 = load void (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 0, i32 13), align 8, !tbaa !103
  %rtl = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 17
  %39 = load %struct.rtx_def** %rtl, align 8, !tbaa !71
  %tobool125 = icmp eq %struct.rtx_def* %39, null
  br i1 %tobool125, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then123
  tail call void @make_decl_rtl(%union.tree_node* %fndecl, i8* null) #5
  %40 = load %struct.rtx_def** %rtl, align 8, !tbaa !71
  br label %cond.end

cond.end:                                         ; preds = %if.then123, %cond.false
  %cond = phi %struct.rtx_def* [ %40, %cond.false ], [ %39, %if.then123 ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %cond, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx, align 8, !tbaa !1
  tail call void %38(%struct.rtx_def* %41, i32 65535) #5
  br label %if.end133

if.else130:                                       ; preds = %if.then121
  %42 = load %union.tree_node** @static_ctors, align 8, !tbaa !1
  %call131 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %fndecl, %union.tree_node* %42) #5
  store %union.tree_node* %call131, %union.tree_node** @static_ctors, align 8, !tbaa !1
  br label %if.end133

if.end133:                                        ; preds = %if.end114, %cond.end, %if.else130
  %bf.load135 = load i64* %36, align 8
  %bf.cast138 = and i64 %bf.load135, 2097152
  %tobool139 = icmp eq i64 %bf.cast138, 0
  br i1 %tobool139, label %if.end160, label %if.then140

if.then140:                                       ; preds = %if.end133
  %43 = load i8* getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 14), align 1, !tbaa !101, !range !102
  %tobool141 = icmp eq i8 %43, 0
  br i1 %tobool141, label %if.else157, label %if.then142

if.then142:                                       ; preds = %if.then140
  %44 = load void (%struct.rtx_def*, i32)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 0, i32 14), align 8, !tbaa !104
  %rtl144 = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 17
  %45 = load %struct.rtx_def** %rtl144, align 8, !tbaa !71
  %tobool145 = icmp eq %struct.rtx_def* %45, null
  br i1 %tobool145, label %cond.false149, label %cond.end152

cond.false149:                                    ; preds = %if.then142
  tail call void @make_decl_rtl(%union.tree_node* %fndecl, i8* null) #5
  %46 = load %struct.rtx_def** %rtl144, align 8, !tbaa !71
  br label %cond.end152

cond.end152:                                      ; preds = %if.then142, %cond.false149
  %cond153 = phi %struct.rtx_def* [ %46, %cond.false149 ], [ %45, %if.then142 ]
  %arrayidx155 = getelementptr inbounds %struct.rtx_def* %cond153, i64 0, i32 1, i64 0
  %rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx156, align 8, !tbaa !1
  tail call void %44(%struct.rtx_def* %47, i32 65535) #5
  br label %if.end160

if.else157:                                       ; preds = %if.then140
  %48 = load %union.tree_node** @static_dtors, align 8, !tbaa !1
  %call158 = tail call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %fndecl, %union.tree_node* %48) #5
  store %union.tree_node* %call158, %union.tree_node** @static_dtors, align 8, !tbaa !1
  br label %if.end160

if.end160:                                        ; preds = %if.end133, %cond.end152, %if.else157
  br i1 %tobool12, label %if.then162, label %if.end163

if.then162:                                       ; preds = %if.end160
  tail call void @pop_function_context() #5
  br label %if.end163

if.end163:                                        ; preds = %if.then162, %if.end160
  tail call void @timevar_pop(i32 10) #5
  br label %return

return:                                           ; preds = %entry, %if.end163, %if.then9
  ret void
}

; Function Attrs: nounwind uwtable
define void @c_expand_deferred_function(%union.tree_node* %fndecl) #0 {
entry:
  %inline_flag = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 5
  %0 = bitcast i48* %inline_flag to i64*
  %bf.load = load i64* %0, align 8
  %bf.cast = and i64 %bf.load, 2048
  %tobool = icmp eq i64 %bf.cast, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %result = getelementptr inbounds %union.tree_node* %fndecl, i64 0, i32 0, i32 11
  %1 = load %union.tree_node** %result, align 8, !tbaa !75
  %tobool2 = icmp eq %union.tree_node* %1, null
  br i1 %tobool2, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @c_expand_body(%union.tree_node* %fndecl, i32 0, i32 0)
  store %union.tree_node* null, %union.tree_node** @current_function_decl, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @check_for_loop_decls() #0 {
entry:
  %0 = load i32* @flag_isoc99, align 4, !tbaa !5
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([53 x i8]* @.str252, i64 0, i64 0)) #5
  br label %for.end56

if.end:                                           ; preds = %entry
  %1 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %tags.i = getelementptr inbounds %struct.binding_level* %1, i64 0, i32 1
  %t.075 = load %union.tree_node** %tags.i, align 8
  %tobool176 = icmp eq %union.tree_node* %t.075, null
  br i1 %tobool176, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %t.077 = phi %union.tree_node* [ %t.0, %for.inc ], [ %t.075, %if.end ]
  %purpose = getelementptr inbounds %union.tree_node* %t.077, i64 0, i32 0, i32 1
  %2 = load i8** %purpose, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %for.inc, label %if.then2

if.then2:                                         ; preds = %for.body
  %value = getelementptr inbounds %union.tree_node* %t.077, i64 0, i32 0, i32 2
  %3 = bitcast i32* %value to %union.tree_node**
  %4 = load %union.tree_node** %3, align 8, !tbaa !50
  %code4 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code4, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp5 = icmp eq i32 %bf.clear, 20
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then2
  %str = getelementptr inbounds i8* %2, i64 32
  %5 = bitcast i8* %str to i8**
  %6 = load i8** %5, align 8, !tbaa !21
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([55 x i8]* @.str253, i64 0, i64 0), i8* %6) #5
  br label %for.inc

if.else:                                          ; preds = %if.then2
  %cmp9 = icmp eq i32 %bf.clear, 21
  %str15 = getelementptr inbounds i8* %2, i64 32
  %7 = bitcast i8* %str15 to i8**
  %8 = load i8** %7, align 8, !tbaa !21
  br i1 %cmp9, label %if.then10, label %if.else16

if.then10:                                        ; preds = %if.else
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([54 x i8]* @.str254, i64 0, i64 0), i8* %8) #5
  br label %for.inc

if.else16:                                        ; preds = %if.else
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([53 x i8]* @.str255, i64 0, i64 0), i8* %8) #5
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then10, %if.else16, %if.then6
  %chain = getelementptr inbounds %union.tree_node* %t.077, i64 0, i32 0, i32 0, i32 0
  %t.0 = load %union.tree_node** %chain, align 8
  %tobool1 = icmp eq %union.tree_node* %t.0, null
  br i1 %tobool1, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.inc
  %.pre = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.end
  %9 = phi %struct.binding_level* [ %.pre, %for.cond.for.end_crit_edge ], [ %1, %if.end ]
  %names.i = getelementptr inbounds %struct.binding_level* %9, i64 0, i32 0
  %t.171 = load %union.tree_node** %names.i, align 8
  %tobool2872 = icmp eq %union.tree_node* %t.171, null
  br i1 %tobool2872, label %for.end56, label %for.body29

for.body29:                                       ; preds = %for.end, %for.inc53
  %t.173 = phi %union.tree_node* [ %t.1, %for.inc53 ], [ %t.171, %for.end ]
  %code31 = getelementptr inbounds %union.tree_node* %t.173, i64 0, i32 0, i32 0, i32 2
  %bf.load32 = load i32* %code31, align 8
  %bf.clear33 = and i32 %bf.load32, 255
  %cmp34 = icmp eq i32 %bf.clear33, 34
  br i1 %cmp34, label %if.else37, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body29
  %name = getelementptr inbounds %union.tree_node* %t.173, i64 0, i32 0, i32 8
  %10 = load %union.tree_node** %name, align 8, !tbaa !48
  %tobool35 = icmp eq %union.tree_node* %10, null
  br i1 %tobool35, label %if.else37, label %if.then36

if.then36:                                        ; preds = %land.lhs.true
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.173, i8* getelementptr inbounds ([67 x i8]* @.str256, i64 0, i64 0)) #5
  br label %for.inc53

if.else37:                                        ; preds = %land.lhs.true, %for.body29
  %bf.clear40 = and i32 %bf.load32, 262144
  %tobool41 = icmp eq i32 %bf.clear40, 0
  br i1 %tobool41, label %if.else43, label %if.then42

if.then42:                                        ; preds = %if.else37
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.173, i8* getelementptr inbounds ([70 x i8]* @.str257, i64 0, i64 0)) #5
  br label %for.inc53

if.else43:                                        ; preds = %if.else37
  %external_flag = getelementptr inbounds %union.tree_node* %t.173, i64 0, i32 0, i32 5
  %11 = bitcast i48* %external_flag to i64*
  %bf.load45 = load i64* %11, align 8
  %bf.cast = and i64 %bf.load45, 256
  %tobool48 = icmp eq i64 %bf.cast, 0
  br i1 %tobool48, label %for.inc53, label %if.then49

if.then49:                                        ; preds = %if.else43
  tail call void (%union.tree_node*, i8*, ...)* @error_with_decl(%union.tree_node* %t.173, i8* getelementptr inbounds ([72 x i8]* @.str258, i64 0, i64 0)) #5
  br label %for.inc53

for.inc53:                                        ; preds = %if.else43, %if.then36, %if.then49, %if.then42
  %chain55 = getelementptr inbounds %union.tree_node* %t.173, i64 0, i32 0, i32 0, i32 0
  %t.1 = load %union.tree_node** %chain55, align 8
  %tobool28 = icmp eq %union.tree_node* %t.1, null
  br i1 %tobool28, label %for.end56, label %for.body29

for.end56:                                        ; preds = %for.inc53, %for.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @push_c_function_context(%struct.function* nocapture %f) #0 {
entry:
  %call = tail call noalias i8* @xmalloc(i64 88) #5
  %0 = bitcast i8* %call to %struct.language_function*
  %language = getelementptr inbounds %struct.function* %f, i64 0, i32 54
  store %struct.language_function* %0, %struct.language_function** %language, align 8, !tbaa !105
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call, i8* bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i64 32, i32 8, i1 false), !tbaa.struct !108
  %1 = load %union.tree_node** @c_scope_stmt_stack, align 8, !tbaa !1
  %x_scope_stmt_stack = getelementptr inbounds i8* %call, i64 32
  %2 = bitcast i8* %x_scope_stmt_stack to %union.tree_node**
  store %union.tree_node* %1, %union.tree_node** %2, align 8, !tbaa !109
  %3 = load %union.tree_node** @named_labels, align 8, !tbaa !1
  %named_labels = getelementptr inbounds i8* %call, i64 40
  %4 = bitcast i8* %named_labels to %union.tree_node**
  store %union.tree_node* %3, %union.tree_node** %4, align 8, !tbaa !113
  %5 = load %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  %shadowed_labels = getelementptr inbounds i8* %call, i64 48
  %6 = bitcast i8* %shadowed_labels to %union.tree_node**
  store %union.tree_node* %5, %union.tree_node** %6, align 8, !tbaa !114
  %7 = load i32* @current_function_returns_value, align 4, !tbaa !5
  %returns_value = getelementptr inbounds i8* %call, i64 56
  %8 = bitcast i8* %returns_value to i32*
  store i32 %7, i32* %8, align 4, !tbaa !115
  %9 = load i32* @current_function_returns_null, align 4, !tbaa !5
  %returns_null = getelementptr inbounds i8* %call, i64 60
  %10 = bitcast i8* %returns_null to i32*
  store i32 %9, i32* %10, align 4, !tbaa !116
  %11 = load i32* @current_function_returns_abnormally, align 4, !tbaa !5
  %returns_abnormally = getelementptr inbounds i8* %call, i64 64
  %12 = bitcast i8* %returns_abnormally to i32*
  store i32 %11, i32* %12, align 4, !tbaa !117
  %13 = load i32* @warn_about_return_type, align 4, !tbaa !5
  %warn_about_return_type = getelementptr inbounds i8* %call, i64 68
  %14 = bitcast i8* %warn_about_return_type to i32*
  store i32 %13, i32* %14, align 4, !tbaa !118
  %15 = load i32* @current_extern_inline, align 4, !tbaa !5
  %extern_inline = getelementptr inbounds i8* %call, i64 72
  %16 = bitcast i8* %extern_inline to i32*
  store i32 %15, i32* %16, align 4, !tbaa !119
  %17 = load %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  %binding_level = getelementptr inbounds i8* %call, i64 80
  %18 = bitcast i8* %binding_level to %struct.binding_level**
  store %struct.binding_level* %17, %struct.binding_level** %18, align 8, !tbaa !120
  ret void
}

declare noalias i8* @xmalloc(i64) #1

; Function Attrs: nounwind uwtable
define void @pop_c_function_context(%struct.function* nocapture %f) #0 {
entry:
  %language = getelementptr inbounds %struct.function* %f, i64 0, i32 54
  %0 = load %struct.language_function** %language, align 8, !tbaa !105
  %1 = bitcast %struct.language_function* %0 to %struct.c_language_function*
  %link.033 = load %union.tree_node** @shadowed_labels, align 8
  %tobool34 = icmp eq %union.tree_node* %link.033, null
  br i1 %tobool34, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %link.035 = phi %union.tree_node* [ %link.0, %for.inc ], [ %link.033, %entry ]
  %value = getelementptr inbounds %union.tree_node* %link.035, i64 0, i32 0, i32 2
  %2 = bitcast i32* %value to %union.tree_node**
  %3 = load %union.tree_node** %2, align 8, !tbaa !50
  %name = getelementptr inbounds %union.tree_node* %3, i64 0, i32 0, i32 8
  %4 = load %union.tree_node** %name, align 8, !tbaa !48
  %cmp = icmp eq %union.tree_node* %4, null
  br i1 %cmp, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %5 = getelementptr inbounds %union.tree_node* %4, i64 0, i32 0, i32 8
  store %union.tree_node* %3, %union.tree_node** %5, align 8, !tbaa !16
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %chain = getelementptr inbounds %union.tree_node* %link.035, i64 0, i32 0, i32 0, i32 0
  %link.0 = load %union.tree_node** %chain, align 8
  %tobool = icmp eq %union.tree_node* %link.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %6 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %f8 = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 19, i32 0
  %7 = load %struct.function** %f8, align 8, !tbaa !1
  %cmp9 = icmp eq %struct.function* %7, null
  br i1 %cmp9, label %land.lhs.true, label %if.end15

land.lhs.true:                                    ; preds = %for.end
  %saved_tree = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 20
  %8 = load %union.tree_node** %saved_tree, align 8, !tbaa !76
  %cmp11 = icmp eq %union.tree_node* %8, null
  br i1 %cmp11, label %if.then12, label %if.end15

if.then12:                                        ; preds = %land.lhs.true
  %9 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !tbaa !1
  %initial = getelementptr inbounds %union.tree_node* %6, i64 0, i32 0, i32 12
  store %union.tree_node* %9, %union.tree_node** %initial, align 8, !tbaa !40
  %10 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %arguments = getelementptr inbounds %union.tree_node* %10, i64 0, i32 0, i32 10
  store %union.tree_node* null, %union.tree_node** %arguments, align 8, !tbaa !78
  br label %if.end15

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %for.end
  %11 = bitcast %struct.language_function* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.stmt_tree_s* @c_stmt_tree to i8*), i8* %11, i64 32, i32 8, i1 false), !tbaa.struct !108
  %x_scope_stmt_stack = getelementptr inbounds %struct.language_function* %0, i64 0, i32 1
  %12 = load %union.tree_node** %x_scope_stmt_stack, align 8, !tbaa !109
  store %union.tree_node* %12, %union.tree_node** @c_scope_stmt_stack, align 8, !tbaa !1
  %13 = getelementptr inbounds %struct.language_function* %0, i64 1, i32 0, i32 0
  %14 = load %union.tree_node** %13, align 8, !tbaa !113
  store %union.tree_node* %14, %union.tree_node** @named_labels, align 8, !tbaa !1
  %15 = getelementptr inbounds %struct.language_function* %0, i64 1, i32 0, i32 1
  %16 = load %union.tree_node** %15, align 8, !tbaa !114
  store %union.tree_node* %16, %union.tree_node** @shadowed_labels, align 8, !tbaa !1
  %returns_value = getelementptr inbounds %struct.language_function* %0, i64 1, i32 0, i32 2
  %17 = bitcast i8** %returns_value to i32*
  %18 = load i32* %17, align 4, !tbaa !115
  store i32 %18, i32* @current_function_returns_value, align 4, !tbaa !5
  %returns_null = getelementptr inbounds %struct.c_language_function* %1, i64 0, i32 4
  %19 = load i32* %returns_null, align 4, !tbaa !116
  store i32 %19, i32* @current_function_returns_null, align 4, !tbaa !5
  %20 = getelementptr inbounds %struct.language_function* %0, i64 1, i32 0, i32 3
  %21 = load i32* %20, align 4, !tbaa !117
  store i32 %21, i32* @current_function_returns_abnormally, align 4, !tbaa !5
  %warn_about_return_type = getelementptr inbounds %struct.c_language_function* %1, i64 0, i32 6
  %22 = load i32* %warn_about_return_type, align 4, !tbaa !118
  store i32 %22, i32* @warn_about_return_type, align 4, !tbaa !5
  %extern_inline = getelementptr inbounds %struct.language_function* %0, i64 1, i32 1
  %23 = bitcast %union.tree_node** %extern_inline to i32*
  %24 = load i32* %23, align 4, !tbaa !119
  store i32 %24, i32* @current_extern_inline, align 4, !tbaa !5
  %binding_level = getelementptr inbounds %struct.language_function* %0, i64 2
  %25 = bitcast %struct.language_function* %binding_level to %struct.binding_level**
  %26 = load %struct.binding_level** %25, align 8, !tbaa !120
  store %struct.binding_level* %26, %struct.binding_level** @current_binding_level, align 8, !tbaa !1
  tail call void @free(i8* %11)
  store %struct.language_function* null, %struct.language_function** %language, align 8, !tbaa !105
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #3

; Function Attrs: nounwind uwtable
define void @mark_c_function_context(%struct.function* nocapture readonly %f) #0 {
entry:
  %language = getelementptr inbounds %struct.function* %f, i64 0, i32 54
  %0 = load %struct.language_function** %language, align 8, !tbaa !105
  %cmp = icmp eq %struct.language_function* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  tail call void @mark_c_language_function(%struct.language_function* %0) #5
  %1 = getelementptr inbounds %struct.language_function* %0, i64 1, i32 0, i32 1
  %2 = load %union.tree_node** %1, align 8, !tbaa !114
  %cmp1 = icmp eq %union.tree_node* %2, null
  br i1 %cmp1, label %do.body12, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %3 = bitcast %union.tree_node* %2 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %3) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %do.body3, label %do.body12

do.body3:                                         ; preds = %land.lhs.true
  %4 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 1
  %5 = load i64* %elements_used, align 8, !tbaa !83
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %4, i64 0, i32 0
  %6 = load i64* %num_elements, align 8, !tbaa !86
  %cmp4 = icmp ult i64 %5, %6
  br i1 %cmp4, label %if.end8, label %if.then5

if.then5:                                         ; preds = %do.body3
  %mul = shl i64 %6, 1
  %call7 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %4, i64 %mul) #5
  store %struct.varray_head_tag* %call7, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used9.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call7, i64 0, i32 1
  %.pre44 = load i64* %elements_used9.phi.trans.insert, align 8, !tbaa !83
  br label %if.end8

if.end8:                                          ; preds = %do.body3, %if.then5
  %7 = phi i64 [ %5, %do.body3 ], [ %.pre44, %if.then5 ]
  %8 = phi %struct.varray_head_tag* [ %4, %do.body3 ], [ %call7, %if.then5 ]
  %elements_used9 = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 1
  %inc = add i64 %7, 1
  store i64 %inc, i64* %elements_used9, align 8, !tbaa !83
  %data = getelementptr inbounds %struct.varray_head_tag* %8, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %7
  store %union.tree_node* %2, %union.tree_node** %arrayidx, align 8, !tbaa !1
  br label %do.body12

do.body12:                                        ; preds = %land.lhs.true, %if.end, %if.end8
  %9 = getelementptr inbounds %struct.language_function* %0, i64 1, i32 0, i32 0
  %10 = load %union.tree_node** %9, align 8, !tbaa !113
  %cmp14 = icmp eq %union.tree_node* %10, null
  br i1 %cmp14, label %do.end35, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %do.body12
  %11 = bitcast %union.tree_node* %10 to i8*
  %call16 = tail call i32 @ggc_set_mark(i8* %11) #5
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %do.body19, label %do.end35

do.body19:                                        ; preds = %land.lhs.true15
  %12 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used20 = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 1
  %13 = load i64* %elements_used20, align 8, !tbaa !83
  %num_elements21 = getelementptr inbounds %struct.varray_head_tag* %12, i64 0, i32 0
  %14 = load i64* %num_elements21, align 8, !tbaa !86
  %cmp22 = icmp ult i64 %13, %14
  br i1 %cmp22, label %if.end27, label %if.then23

if.then23:                                        ; preds = %do.body19
  %mul25 = shl i64 %14, 1
  %call26 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %12, i64 %mul25) #5
  store %struct.varray_head_tag* %call26, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used28.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call26, i64 0, i32 1
  %.pre = load i64* %elements_used28.phi.trans.insert, align 8, !tbaa !83
  br label %if.end27

if.end27:                                         ; preds = %do.body19, %if.then23
  %15 = phi i64 [ %13, %do.body19 ], [ %.pre, %if.then23 ]
  %16 = phi %struct.varray_head_tag* [ %12, %do.body19 ], [ %call26, %if.then23 ]
  %elements_used28 = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 1
  %inc29 = add i64 %15, 1
  store i64 %inc29, i64* %elements_used28, align 8, !tbaa !83
  %data30 = getelementptr inbounds %struct.varray_head_tag* %16, i64 0, i32 4
  %tree31 = bitcast %union.varray_data_tag* %data30 to [1 x %union.tree_node*]*
  %arrayidx32 = getelementptr inbounds [1 x %union.tree_node*]* %tree31, i64 0, i64 %15
  store %union.tree_node* %10, %union.tree_node** %arrayidx32, align 8, !tbaa !1
  br label %do.end35

do.end35:                                         ; preds = %land.lhs.true15, %do.body12, %if.end27
  %binding_level = getelementptr inbounds %struct.language_function* %0, i64 2
  %17 = bitcast %struct.language_function* %binding_level to i8*
  tail call void @mark_binding_level(i8* %17)
  br label %return

return:                                           ; preds = %entry, %do.end35
  ret void
}

declare void @mark_c_language_function(%struct.language_function*) #1

declare i32 @ggc_set_mark(i8*) #1

declare %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag*, i64) #1

; Function Attrs: nounwind uwtable
define void @copy_lang_decl(%union.tree_node* nocapture %decl) #0 {
entry:
  %lang_specific = getelementptr inbounds %union.tree_node* %decl, i64 0, i32 0, i32 24
  %0 = load %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  %tobool = icmp eq %struct.lang_decl* %0, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call = tail call i8* @ggc_alloc(i64 16) #5
  %1 = bitcast i8* %call to %struct.lang_decl*
  %2 = load %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  %3 = getelementptr inbounds %struct.lang_decl* %2, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call, i8* %3, i64 16, i32 1, i1 false)
  store %struct.lang_decl* %1, %struct.lang_decl** %lang_specific, align 8, !tbaa !58
  br label %return

return:                                           ; preds = %entry, %if.end
  ret void
}

declare i8* @ggc_alloc(i64) #1

; Function Attrs: nounwind uwtable
define void @lang_mark_tree(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %code = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %global_value = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 6
  %0 = bitcast %union.anon* %global_value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !8
  %cmp1 = icmp eq %union.tree_node* %1, null
  br i1 %cmp1, label %do.body11, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %2 = bitcast %union.tree_node* %1 to i8*
  %call = tail call i32 @ggc_set_mark(i8* %2) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %do.body3, label %do.body11

do.body3:                                         ; preds = %land.lhs.true
  %3 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 1
  %4 = load i64* %elements_used, align 8, !tbaa !83
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %3, i64 0, i32 0
  %5 = load i64* %num_elements, align 8, !tbaa !86
  %cmp4 = icmp ult i64 %4, %5
  br i1 %cmp4, label %if.end, label %if.then5

if.then5:                                         ; preds = %do.body3
  %mul = shl i64 %5, 1
  %call7 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %3, i64 %mul) #5
  store %struct.varray_head_tag* %call7, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used8.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call7, i64 0, i32 1
  %.pre242 = load i64* %elements_used8.phi.trans.insert, align 8, !tbaa !83
  br label %if.end

if.end:                                           ; preds = %do.body3, %if.then5
  %6 = phi i64 [ %4, %do.body3 ], [ %.pre242, %if.then5 ]
  %7 = phi %struct.varray_head_tag* [ %3, %do.body3 ], [ %call7, %if.then5 ]
  %elements_used8 = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 1
  %inc = add i64 %6, 1
  store i64 %inc, i64* %elements_used8, align 8, !tbaa !83
  %data = getelementptr inbounds %struct.varray_head_tag* %7, i64 0, i32 4
  %tree = bitcast %union.varray_data_tag* %data to [1 x %union.tree_node*]*
  %arrayidx = getelementptr inbounds [1 x %union.tree_node*]* %tree, i64 0, i64 %6
  store %union.tree_node* %1, %union.tree_node** %arrayidx, align 8, !tbaa !1
  br label %do.body11

do.body11:                                        ; preds = %land.lhs.true, %if.then, %if.end
  %8 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 7
  %9 = load %union.tree_node** %8, align 8, !tbaa !15
  %cmp13 = icmp eq %union.tree_node* %9, null
  br i1 %cmp13, label %do.body35, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %do.body11
  %10 = bitcast %union.tree_node* %9 to i8*
  %call15 = tail call i32 @ggc_set_mark(i8* %10) #5
  %tobool16 = icmp eq i32 %call15, 0
  br i1 %tobool16, label %do.body18, label %do.body35

do.body18:                                        ; preds = %land.lhs.true14
  %11 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used19 = getelementptr inbounds %struct.varray_head_tag* %11, i64 0, i32 1
  %12 = load i64* %elements_used19, align 8, !tbaa !83
  %num_elements20 = getelementptr inbounds %struct.varray_head_tag* %11, i64 0, i32 0
  %13 = load i64* %num_elements20, align 8, !tbaa !86
  %cmp21 = icmp ult i64 %12, %13
  br i1 %cmp21, label %if.end26, label %if.then22

if.then22:                                        ; preds = %do.body18
  %mul24 = shl i64 %13, 1
  %call25 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %11, i64 %mul24) #5
  store %struct.varray_head_tag* %call25, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used27.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call25, i64 0, i32 1
  %.pre241 = load i64* %elements_used27.phi.trans.insert, align 8, !tbaa !83
  br label %if.end26

if.end26:                                         ; preds = %do.body18, %if.then22
  %14 = phi i64 [ %12, %do.body18 ], [ %.pre241, %if.then22 ]
  %15 = phi %struct.varray_head_tag* [ %11, %do.body18 ], [ %call25, %if.then22 ]
  %elements_used27 = getelementptr inbounds %struct.varray_head_tag* %15, i64 0, i32 1
  %inc28 = add i64 %14, 1
  store i64 %inc28, i64* %elements_used27, align 8, !tbaa !83
  %data29 = getelementptr inbounds %struct.varray_head_tag* %15, i64 0, i32 4
  %tree30 = bitcast %union.varray_data_tag* %data29 to [1 x %union.tree_node*]*
  %arrayidx31 = getelementptr inbounds [1 x %union.tree_node*]* %tree30, i64 0, i64 %14
  store %union.tree_node* %9, %union.tree_node** %arrayidx31, align 8, !tbaa !1
  br label %do.body35

do.body35:                                        ; preds = %land.lhs.true14, %do.body11, %if.end26
  %16 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 8
  %17 = load %union.tree_node** %16, align 8, !tbaa !16
  %cmp37 = icmp eq %union.tree_node* %17, null
  br i1 %cmp37, label %do.body59, label %land.lhs.true38

land.lhs.true38:                                  ; preds = %do.body35
  %18 = bitcast %union.tree_node* %17 to i8*
  %call39 = tail call i32 @ggc_set_mark(i8* %18) #5
  %tobool40 = icmp eq i32 %call39, 0
  br i1 %tobool40, label %do.body42, label %do.body59

do.body42:                                        ; preds = %land.lhs.true38
  %19 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used43 = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 1
  %20 = load i64* %elements_used43, align 8, !tbaa !83
  %num_elements44 = getelementptr inbounds %struct.varray_head_tag* %19, i64 0, i32 0
  %21 = load i64* %num_elements44, align 8, !tbaa !86
  %cmp45 = icmp ult i64 %20, %21
  br i1 %cmp45, label %if.end50, label %if.then46

if.then46:                                        ; preds = %do.body42
  %mul48 = shl i64 %21, 1
  %call49 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %19, i64 %mul48) #5
  store %struct.varray_head_tag* %call49, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used51.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call49, i64 0, i32 1
  %.pre240 = load i64* %elements_used51.phi.trans.insert, align 8, !tbaa !83
  br label %if.end50

if.end50:                                         ; preds = %do.body42, %if.then46
  %22 = phi i64 [ %20, %do.body42 ], [ %.pre240, %if.then46 ]
  %23 = phi %struct.varray_head_tag* [ %19, %do.body42 ], [ %call49, %if.then46 ]
  %elements_used51 = getelementptr inbounds %struct.varray_head_tag* %23, i64 0, i32 1
  %inc52 = add i64 %22, 1
  store i64 %inc52, i64* %elements_used51, align 8, !tbaa !83
  %data53 = getelementptr inbounds %struct.varray_head_tag* %23, i64 0, i32 4
  %tree54 = bitcast %union.varray_data_tag* %data53 to [1 x %union.tree_node*]*
  %arrayidx55 = getelementptr inbounds [1 x %union.tree_node*]* %tree54, i64 0, i64 %22
  store %union.tree_node* %17, %union.tree_node** %arrayidx55, align 8, !tbaa !1
  br label %do.body59

do.body59:                                        ; preds = %land.lhs.true38, %do.body35, %if.end50
  %24 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 9
  %25 = load %union.tree_node** %24, align 8, !tbaa !17
  %cmp61 = icmp eq %union.tree_node* %25, null
  br i1 %cmp61, label %do.body83, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %do.body59
  %26 = bitcast %union.tree_node* %25 to i8*
  %call63 = tail call i32 @ggc_set_mark(i8* %26) #5
  %tobool64 = icmp eq i32 %call63, 0
  br i1 %tobool64, label %do.body66, label %do.body83

do.body66:                                        ; preds = %land.lhs.true62
  %27 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used67 = getelementptr inbounds %struct.varray_head_tag* %27, i64 0, i32 1
  %28 = load i64* %elements_used67, align 8, !tbaa !83
  %num_elements68 = getelementptr inbounds %struct.varray_head_tag* %27, i64 0, i32 0
  %29 = load i64* %num_elements68, align 8, !tbaa !86
  %cmp69 = icmp ult i64 %28, %29
  br i1 %cmp69, label %if.end74, label %if.then70

if.then70:                                        ; preds = %do.body66
  %mul72 = shl i64 %29, 1
  %call73 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %27, i64 %mul72) #5
  store %struct.varray_head_tag* %call73, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used75.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call73, i64 0, i32 1
  %.pre239 = load i64* %elements_used75.phi.trans.insert, align 8, !tbaa !83
  br label %if.end74

if.end74:                                         ; preds = %do.body66, %if.then70
  %30 = phi i64 [ %28, %do.body66 ], [ %.pre239, %if.then70 ]
  %31 = phi %struct.varray_head_tag* [ %27, %do.body66 ], [ %call73, %if.then70 ]
  %elements_used75 = getelementptr inbounds %struct.varray_head_tag* %31, i64 0, i32 1
  %inc76 = add i64 %30, 1
  store i64 %inc76, i64* %elements_used75, align 8, !tbaa !83
  %data77 = getelementptr inbounds %struct.varray_head_tag* %31, i64 0, i32 4
  %tree78 = bitcast %union.varray_data_tag* %data77 to [1 x %union.tree_node*]*
  %arrayidx79 = getelementptr inbounds [1 x %union.tree_node*]* %tree78, i64 0, i64 %30
  store %union.tree_node* %25, %union.tree_node** %arrayidx79, align 8, !tbaa !1
  br label %do.body83

do.body83:                                        ; preds = %land.lhs.true62, %do.body59, %if.end74
  %32 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 10
  %33 = load %union.tree_node** %32, align 8, !tbaa !18
  %cmp85 = icmp eq %union.tree_node* %33, null
  br i1 %cmp85, label %do.body107, label %land.lhs.true86

land.lhs.true86:                                  ; preds = %do.body83
  %34 = bitcast %union.tree_node* %33 to i8*
  %call87 = tail call i32 @ggc_set_mark(i8* %34) #5
  %tobool88 = icmp eq i32 %call87, 0
  br i1 %tobool88, label %do.body90, label %do.body107

do.body90:                                        ; preds = %land.lhs.true86
  %35 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used91 = getelementptr inbounds %struct.varray_head_tag* %35, i64 0, i32 1
  %36 = load i64* %elements_used91, align 8, !tbaa !83
  %num_elements92 = getelementptr inbounds %struct.varray_head_tag* %35, i64 0, i32 0
  %37 = load i64* %num_elements92, align 8, !tbaa !86
  %cmp93 = icmp ult i64 %36, %37
  br i1 %cmp93, label %if.end98, label %if.then94

if.then94:                                        ; preds = %do.body90
  %mul96 = shl i64 %37, 1
  %call97 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %35, i64 %mul96) #5
  store %struct.varray_head_tag* %call97, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used99.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call97, i64 0, i32 1
  %.pre238 = load i64* %elements_used99.phi.trans.insert, align 8, !tbaa !83
  br label %if.end98

if.end98:                                         ; preds = %do.body90, %if.then94
  %38 = phi i64 [ %36, %do.body90 ], [ %.pre238, %if.then94 ]
  %39 = phi %struct.varray_head_tag* [ %35, %do.body90 ], [ %call97, %if.then94 ]
  %elements_used99 = getelementptr inbounds %struct.varray_head_tag* %39, i64 0, i32 1
  %inc100 = add i64 %38, 1
  store i64 %inc100, i64* %elements_used99, align 8, !tbaa !83
  %data101 = getelementptr inbounds %struct.varray_head_tag* %39, i64 0, i32 4
  %tree102 = bitcast %union.varray_data_tag* %data101 to [1 x %union.tree_node*]*
  %arrayidx103 = getelementptr inbounds [1 x %union.tree_node*]* %tree102, i64 0, i64 %38
  store %union.tree_node* %33, %union.tree_node** %arrayidx103, align 8, !tbaa !1
  br label %do.body107

do.body107:                                       ; preds = %land.lhs.true86, %do.body83, %if.end98
  %40 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 11
  %41 = load %union.tree_node** %40, align 8, !tbaa !19
  %cmp109 = icmp eq %union.tree_node* %41, null
  br i1 %cmp109, label %if.end206, label %land.lhs.true110

land.lhs.true110:                                 ; preds = %do.body107
  %42 = bitcast %union.tree_node* %41 to i8*
  %call111 = tail call i32 @ggc_set_mark(i8* %42) #5
  %tobool112 = icmp eq i32 %call111, 0
  br i1 %tobool112, label %do.body114, label %if.end206

do.body114:                                       ; preds = %land.lhs.true110
  %43 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used115 = getelementptr inbounds %struct.varray_head_tag* %43, i64 0, i32 1
  %44 = load i64* %elements_used115, align 8, !tbaa !83
  %num_elements116 = getelementptr inbounds %struct.varray_head_tag* %43, i64 0, i32 0
  %45 = load i64* %num_elements116, align 8, !tbaa !86
  %cmp117 = icmp ult i64 %44, %45
  br i1 %cmp117, label %if.end122, label %if.then118

if.then118:                                       ; preds = %do.body114
  %mul120 = shl i64 %45, 1
  %call121 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %43, i64 %mul120) #5
  store %struct.varray_head_tag* %call121, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used123.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call121, i64 0, i32 1
  %.pre = load i64* %elements_used123.phi.trans.insert, align 8, !tbaa !83
  br label %if.end122

if.end122:                                        ; preds = %do.body114, %if.then118
  %46 = phi i64 [ %44, %do.body114 ], [ %.pre, %if.then118 ]
  %47 = phi %struct.varray_head_tag* [ %43, %do.body114 ], [ %call121, %if.then118 ]
  %elements_used123 = getelementptr inbounds %struct.varray_head_tag* %47, i64 0, i32 1
  %inc124 = add i64 %46, 1
  store i64 %inc124, i64* %elements_used123, align 8, !tbaa !83
  %data125 = getelementptr inbounds %struct.varray_head_tag* %47, i64 0, i32 4
  %tree126 = bitcast %union.varray_data_tag* %data125 to [1 x %union.tree_node*]*
  %arrayidx127 = getelementptr inbounds [1 x %union.tree_node*]* %tree126, i64 0, i64 %46
  store %union.tree_node* %41, %union.tree_node** %arrayidx127, align 8, !tbaa !1
  br label %if.end206

if.else:                                          ; preds = %entry
  %idxprom236 = zext i32 %bf.clear to i64
  %arrayidx135 = getelementptr inbounds [256 x i8]* @tree_code_type, i64 0, i64 %idxprom236
  %48 = load i8* %arrayidx135, align 1, !tbaa !7
  switch i8 %48, label %if.end206 [
    i8 116, label %land.lhs.true138
    i8 100, label %land.lhs.true160
  ]

land.lhs.true138:                                 ; preds = %if.else
  %lang_specific = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 19
  %49 = bitcast %union.anon.1* %lang_specific to %struct.lang_type**
  %50 = load %struct.lang_type** %49, align 8, !tbaa !93
  %tobool139 = icmp eq %struct.lang_type* %50, null
  br i1 %tobool139, label %if.end206, label %if.then146

if.then146:                                       ; preds = %land.lhs.true138
  %51 = bitcast %struct.lang_type* %50 to i8*
  %call147 = tail call i32 @ggc_set_mark(i8* %51) #5
  br label %if.end206

land.lhs.true160:                                 ; preds = %if.else
  %lang_specific161 = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 24
  %52 = load %struct.lang_decl** %lang_specific161, align 8, !tbaa !58
  %tobool162 = icmp eq %struct.lang_decl* %52, null
  br i1 %tobool162, label %if.end206, label %if.then170

if.then170:                                       ; preds = %land.lhs.true160
  %53 = getelementptr inbounds %struct.lang_decl* %52, i64 0, i32 0, i32 0
  %call171 = tail call i32 @ggc_set_mark(i8* %53) #5
  %54 = load %struct.lang_decl** %lang_specific161, align 8, !tbaa !58
  %base = getelementptr inbounds %struct.lang_decl* %54, i64 0, i32 0
  tail call void @c_mark_lang_decl(%struct.c_lang_decl* %base) #5
  %55 = load %struct.lang_decl** %lang_specific161, align 8, !tbaa !58
  %pending_sizes = getelementptr inbounds %struct.lang_decl* %55, i64 0, i32 1
  %56 = load %union.tree_node** %pending_sizes, align 8, !tbaa !94
  %cmp180 = icmp eq %union.tree_node* %56, null
  br i1 %cmp180, label %if.end206, label %land.lhs.true182

land.lhs.true182:                                 ; preds = %if.then170
  %57 = bitcast %union.tree_node* %56 to i8*
  %call183 = tail call i32 @ggc_set_mark(i8* %57) #5
  %tobool184 = icmp eq i32 %call183, 0
  br i1 %tobool184, label %do.body186, label %if.end206

do.body186:                                       ; preds = %land.lhs.true182
  %58 = load %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used187 = getelementptr inbounds %struct.varray_head_tag* %58, i64 0, i32 1
  %59 = load i64* %elements_used187, align 8, !tbaa !83
  %num_elements188 = getelementptr inbounds %struct.varray_head_tag* %58, i64 0, i32 0
  %60 = load i64* %num_elements188, align 8, !tbaa !86
  %cmp189 = icmp ult i64 %59, %60
  br i1 %cmp189, label %if.end195, label %if.then191

if.then191:                                       ; preds = %do.body186
  %mul193 = shl i64 %60, 1
  %call194 = tail call %struct.varray_head_tag* @varray_grow(%struct.varray_head_tag* %58, i64 %mul193) #5
  store %struct.varray_head_tag* %call194, %struct.varray_head_tag** @ggc_pending_trees, align 8, !tbaa !1
  %elements_used196.phi.trans.insert = getelementptr inbounds %struct.varray_head_tag* %call194, i64 0, i32 1
  %.pre243 = load i64* %elements_used196.phi.trans.insert, align 8, !tbaa !83
  br label %if.end195

if.end195:                                        ; preds = %do.body186, %if.then191
  %61 = phi i64 [ %59, %do.body186 ], [ %.pre243, %if.then191 ]
  %62 = phi %struct.varray_head_tag* [ %58, %do.body186 ], [ %call194, %if.then191 ]
  %elements_used196 = getelementptr inbounds %struct.varray_head_tag* %62, i64 0, i32 1
  %inc197 = add i64 %61, 1
  store i64 %inc197, i64* %elements_used196, align 8, !tbaa !83
  %data198 = getelementptr inbounds %struct.varray_head_tag* %62, i64 0, i32 4
  %tree199 = bitcast %union.varray_data_tag* %data198 to [1 x %union.tree_node*]*
  %arrayidx200 = getelementptr inbounds [1 x %union.tree_node*]* %tree199, i64 0, i64 %61
  store %union.tree_node* %56, %union.tree_node** %arrayidx200, align 8, !tbaa !1
  br label %if.end206

if.end206:                                        ; preds = %if.else, %land.lhs.true138, %land.lhs.true110, %do.body107, %land.lhs.true182, %if.then170, %land.lhs.true160, %if.then146, %if.end195, %if.end122
  ret void
}

declare void @c_mark_lang_decl(%struct.c_lang_decl*) #1

; Function Attrs: nounwind readnone uwtable
define i32 @stmts_are_full_exprs_p() #6 {
entry:
  ret i32 0
}

; Function Attrs: nounwind readnone uwtable
define %struct.stmt_tree_s* @current_stmt_tree() #6 {
entry:
  ret %struct.stmt_tree_s* @c_stmt_tree
}

; Function Attrs: nounwind readnone uwtable
define %union.tree_node** @current_scope_stmt_stack() #6 {
entry:
  ret %union.tree_node** @c_scope_stmt_stack
}

; Function Attrs: nounwind readnone uwtable
define i32 @anon_aggr_type_p(%union.tree_node* nocapture readnone %node) #6 {
entry:
  ret i32 0
}

; Function Attrs: nounwind readnone uwtable
define void @extract_interface_info() #6 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @c_begin_compound_stmt() #0 {
entry:
  %call = tail call %union.tree_node* (i32, ...)* @build_stmt(i32 153, %union.tree_node* null) #5
  %call1 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call) #5
  ret %union.tree_node* %call1
}

declare %union.tree_node* @add_stmt(%union.tree_node*) #1

; Function Attrs: nounwind uwtable
define void @c_expand_decl_stmt(%union.tree_node* nocapture readonly %t) #0 {
entry:
  %operands = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 2
  %arrayidx = bitcast i32* %operands to %union.tree_node**
  %0 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  %code = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 0, i32 2
  %bf.load = load i32* %code, align 8
  %bf.clear = and i32 %bf.load, 255
  %cmp = icmp eq i32 %bf.clear, 30
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %context = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 9
  %1 = load %union.tree_node** %context, align 8, !tbaa !53
  %2 = load %union.tree_node** @current_function_decl, align 8, !tbaa !1
  %cmp2 = icmp eq %union.tree_node* %1, %2
  br i1 %cmp2, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %saved_tree = getelementptr inbounds %union.tree_node* %0, i64 0, i32 0, i32 20
  %3 = load %union.tree_node** %saved_tree, align 8, !tbaa !76
  %tobool = icmp eq %union.tree_node* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true3
  tail call fastcc void @c_expand_body(%union.tree_node* %0, i32 1, i32 0)
  br label %if.end

if.end:                                           ; preds = %land.lhs.true3, %if.then, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind readonly uwtable
define %union.tree_node* @identifier_global_value(%union.tree_node* nocapture readonly %t) #4 {
entry:
  %global_value = getelementptr inbounds %union.tree_node* %t, i64 0, i32 0, i32 6
  %0 = bitcast %union.anon* %global_value to %union.tree_node**
  %1 = load %union.tree_node** %0, align 8, !tbaa !8
  ret %union.tree_node* %1
}

; Function Attrs: nounwind uwtable
define void @record_builtin_type(i32 %rid_index, i8* %name, %union.tree_node* %type) #0 {
entry:
  %cmp = icmp eq i8* %name, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %idxprom = sext i32 %rid_index to i64
  %0 = load %union.tree_node*** @ridpointers, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %union.tree_node** %0, i64 %idxprom
  %1 = load %union.tree_node** %arrayidx, align 8, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %entry
  %call = tail call %union.tree_node* @get_identifier(i8* %name) #5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %id.0 = phi %union.tree_node* [ %1, %if.then ], [ %call, %if.else ]
  %call1 = tail call %union.tree_node* @build_decl(i32 33, %union.tree_node* %id.0, %union.tree_node* %type) #5
  %call2 = tail call %union.tree_node* @pushdecl(%union.tree_node* %call1)
  ret void
}

; Function Attrs: nounwind uwtable
define %union.tree_node* @build_void_list_node() #0 {
entry:
  %0 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 27), align 8, !tbaa !1
  %call = tail call %union.tree_node* @build_tree_list(%union.tree_node* null, %union.tree_node* %0) #5
  ret %union.tree_node* %call
}

declare %union.tree_node* @build_tree_list(%union.tree_node*, %union.tree_node*) #1

declare void @timevar_push(i32) #1

declare i32 @tree_inlinable_function_p(%union.tree_node*) #1

declare i32 @defer_fn(%union.tree_node*) #1

declare void @timevar_pop(i32) #1

declare void @optimize_inline_calls(%union.tree_node*) #1

declare void @expand_pending_sizes(%union.tree_node*) #1

declare void @push_function_context() #1

declare void @mark_varargs() #1

declare void @expand_function_start(%union.tree_node*, i32) #1

declare void @expand_main_function() #1

declare void @expand_stmt(%union.tree_node*) #1

declare void @expand_function_end(i8*, i32, i32) #1

declare void @ggc_push_context() #1

declare void @rest_of_compilation(%union.tree_node*) #1

declare void @ggc_pop_context() #1

declare void @pop_function_context() #1

declare void @warn_deprecated_use(%union.tree_node*) #1

declare %union.tree_node* @unsigned_type(%union.tree_node*) #1

declare %union.tree_node* @build_complex_type(%union.tree_node*) #1

declare %union.tree_node* @signed_type(%union.tree_node*) #1

declare %union.tree_node* @build_range_type(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @variable_size(%union.tree_node*) #1

declare %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @c_build_qualified_type(%union.tree_node*, i32) #1

declare %union.tree_node* @build_pointer_type(%union.tree_node*) #1

declare %union.tree_node* @simple_type_promotes_to(%union.tree_node*) #1

declare %union.tree_node* @build_decl_attribute_variant(%union.tree_node*, %union.tree_node*) #1

declare void @c_apply_type_quals_to_decl(i32, %union.tree_node*) #1

declare i32 @mark_addressable(%union.tree_node*) #1

declare i8* @fname_as_string(i32) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #2

declare %union.tree_node* @build_qualified_type(%union.tree_node*, i32) #1

declare %union.tree_node* @build_string(i32, i8*) #1

declare i32 @chain_member(%union.tree_node*, %union.tree_node*) #1

declare void @shadow_warning(i8*, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_type_attribute_variant(%union.tree_node*, %union.tree_node*) #1

declare i32 @self_promoting_args_p(%union.tree_node*) #1

declare %union.tree_node* @common_type(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @merge_attributes(%union.tree_node*, %union.tree_node*) #1

declare void @make_var_volatile(%union.tree_node*) #1

declare void @merge_weak(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #5

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"int", metadata !3, i64 0}
!7 = metadata !{metadata !3, metadata !3, i64 0}
!8 = metadata !{metadata !9, metadata !2, i64 56}
!9 = metadata !{metadata !"lang_identifier", metadata !10, i64 0, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !2, i64 96}
!10 = metadata !{metadata !"c_common_identifier", metadata !11, i64 0, metadata !12, i64 24}
!11 = metadata !{metadata !"tree_common", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 17, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 18, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19, metadata !6, i64 19}
!12 = metadata !{metadata !"cpp_hashnode", metadata !13, i64 0, metadata !14, i64 16, metadata !3, i64 18, metadata !3, i64 19, metadata !3, i64 20, metadata !3, i64 21, metadata !3, i64 24}
!13 = metadata !{metadata !"ht_identifier", metadata !6, i64 0, metadata !2, i64 8}
!14 = metadata !{metadata !"short", metadata !3, i64 0}
!15 = metadata !{metadata !9, metadata !2, i64 64}
!16 = metadata !{metadata !9, metadata !2, i64 72}
!17 = metadata !{metadata !9, metadata !2, i64 80}
!18 = metadata !{metadata !9, metadata !2, i64 88}
!19 = metadata !{metadata !9, metadata !2, i64 96}
!20 = metadata !{metadata !10, metadata !3, i64 43}
!21 = metadata !{metadata !22, metadata !2, i64 32}
!22 = metadata !{metadata !"tree_identifier", metadata !11, i64 0, metadata !13, i64 24}
!23 = metadata !{metadata !11, metadata !2, i64 8}
!24 = metadata !{metadata !25, metadata !2, i64 24}
!25 = metadata !{metadata !"tree_type", metadata !11, i64 0, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !6, i64 56, metadata !6, i64 60, metadata !3, i64 61, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 62, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 63, metadata !6, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !3, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !26, i64 152, metadata !2, i64 160}
!26 = metadata !{metadata !"long long", metadata !3, i64 0}
!27 = metadata !{metadata !28, metadata !6, i64 32}
!28 = metadata !{metadata !"tree_string", metadata !11, i64 0, metadata !2, i64 24, metadata !6, i64 32, metadata !2, i64 40}
!29 = metadata !{metadata !11, metadata !2, i64 0}
!30 = metadata !{metadata !31, metadata !3, i64 52}
!31 = metadata !{metadata !"binding_level", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !3, i64 48, metadata !3, i64 49, metadata !3, i64 50, metadata !3, i64 51, metadata !3, i64 52, metadata !6, i64 56, metadata !2, i64 64}
!32 = metadata !{metadata !31, metadata !2, i64 24}
!33 = metadata !{metadata !31, metadata !3, i64 51}
!34 = metadata !{metadata !31, metadata !2, i64 0}
!35 = metadata !{metadata !31, metadata !2, i64 8}
!36 = metadata !{metadata !31, metadata !3, i64 49}
!37 = metadata !{metadata !31, metadata !3, i64 48}
!38 = metadata !{metadata !31, metadata !2, i64 40}
!39 = metadata !{metadata !31, metadata !3, i64 50}
!40 = metadata !{metadata !41, metadata !2, i64 104}
!41 = metadata !{metadata !"tree_decl", metadata !11, i64 0, metadata !2, i64 24, metadata !6, i64 32, metadata !6, i64 36, metadata !2, i64 40, metadata !3, i64 48, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 49, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 50, metadata !6, i64 51, metadata !6, i64 51, metadata !6, i64 51, metadata !6, i64 51, metadata !6, i64 51, metadata !3, i64 51, metadata !6, i64 51, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 52, metadata !6, i64 53, metadata !6, i64 53, metadata !6, i64 53, metadata !6, i64 53, metadata !6, i64 53, metadata !3, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !2, i64 152, metadata !3, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !26, i64 192, metadata !2, i64 200}
!42 = metadata !{metadata !41, metadata !2, i64 112}
!43 = metadata !{metadata !31, metadata !2, i64 32}
!44 = metadata !{metadata !45, metadata !2, i64 32}
!45 = metadata !{metadata !"tree_block", metadata !11, i64 0, metadata !6, i64 24, metadata !6, i64 24, metadata !6, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72}
!46 = metadata !{metadata !45, metadata !2, i64 40}
!47 = metadata !{metadata !45, metadata !2, i64 48}
!48 = metadata !{metadata !41, metadata !2, i64 72}
!49 = metadata !{metadata !41, metadata !2, i64 120}
!50 = metadata !{metadata !51, metadata !2, i64 32}
!51 = metadata !{metadata !"tree_list", metadata !11, i64 0, metadata !2, i64 24, metadata !2, i64 32}
!52 = metadata !{metadata !25, metadata !2, i64 144}
!53 = metadata !{metadata !41, metadata !2, i64 80}
!54 = metadata !{metadata !41, metadata !2, i64 24}
!55 = metadata !{metadata !41, metadata !6, i64 32}
!56 = metadata !{metadata !31, metadata !2, i64 16}
!57 = metadata !{metadata !25, metadata !2, i64 96}
!58 = metadata !{metadata !41, metadata !2, i64 200}
!59 = metadata !{metadata !41, metadata !2, i64 136}
!60 = metadata !{metadata !61, metadata !2, i64 240}
!61 = metadata !{metadata !"gcc_target", metadata !62, i64 0, metadata !64, i64 168, metadata !2, i64 240, metadata !2, i64 248, metadata !2, i64 256, metadata !2, i64 264, metadata !2, i64 272, metadata !2, i64 280, metadata !2, i64 288, metadata !2, i64 296, metadata !2, i64 304, metadata !2, i64 312, metadata !2, i64 320, metadata !65, i64 328, metadata !65, i64 329, metadata !2, i64 336}
!62 = metadata !{metadata !"asm_out", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !63, i64 24, metadata !63, i64 56, metadata !2, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !2, i64 152, metadata !2, i64 160}
!63 = metadata !{metadata !"asm_int_op", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24}
!64 = metadata !{metadata !"sched", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64}
!65 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!66 = metadata !{metadata !25, metadata !2, i64 48}
!67 = metadata !{metadata !25, metadata !2, i64 128}
!68 = metadata !{metadata !25, metadata !2, i64 136}
!69 = metadata !{metadata !41, metadata !2, i64 40}
!70 = metadata !{metadata !41, metadata !2, i64 64}
!71 = metadata !{metadata !41, metadata !2, i64 144}
!72 = metadata !{metadata !41, metadata !2, i64 128}
!73 = metadata !{metadata !74, metadata !2, i64 144}
!74 = metadata !{metadata !"gcc_debug_hooks", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !2, i64 64, metadata !2, i64 72, metadata !2, i64 80, metadata !2, i64 88, metadata !2, i64 96, metadata !2, i64 104, metadata !2, i64 112, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !2, i64 152}
!75 = metadata !{metadata !41, metadata !2, i64 96}
!76 = metadata !{metadata !41, metadata !2, i64 168}
!77 = metadata !{metadata !26, metadata !26, i64 0}
!78 = metadata !{metadata !41, metadata !2, i64 88}
!79 = metadata !{metadata !41, metadata !6, i64 36}
!80 = metadata !{metadata !25, metadata !2, i64 32}
!81 = metadata !{metadata !31, metadata !6, i64 56}
!82 = metadata !{metadata !25, metadata !2, i64 112}
!83 = metadata !{metadata !84, metadata !85, i64 8}
!84 = metadata !{metadata !"varray_head_tag", metadata !85, i64 0, metadata !85, i64 8, metadata !85, i64 16, metadata !2, i64 24, metadata !3, i64 32}
!85 = metadata !{metadata !"long", metadata !3, i64 0}
!86 = metadata !{metadata !84, metadata !85, i64 0}
!87 = metadata !{metadata !31, metadata !2, i64 64}
!88 = metadata !{metadata !25, metadata !2, i64 40}
!89 = metadata !{metadata !25, metadata !6, i64 64}
!90 = metadata !{metadata !51, metadata !2, i64 24}
!91 = metadata !{metadata !25, metadata !2, i64 104}
!92 = metadata !{metadata !61, metadata !2, i64 296}
!93 = metadata !{metadata !25, metadata !2, i64 160}
!94 = metadata !{metadata !95, metadata !2, i64 8}
!95 = metadata !{metadata !"lang_decl", metadata !96, i64 0, metadata !2, i64 8}
!96 = metadata !{metadata !"c_lang_decl", metadata !6, i64 0}
!97 = metadata !{metadata !74, metadata !2, i64 136}
!98 = metadata !{metadata !99, metadata !26, i64 32}
!99 = metadata !{metadata !"tree_int_cst", metadata !11, i64 0, metadata !2, i64 24, metadata !100, i64 32}
!100 = metadata !{metadata !"", metadata !26, i64 0, metadata !26, i64 8}
!101 = metadata !{metadata !61, metadata !65, i64 329}
!102 = metadata !{i8 0, i8 2}
!103 = metadata !{metadata !61, metadata !2, i64 152}
!104 = metadata !{metadata !61, metadata !2, i64 160}
!105 = metadata !{metadata !106, metadata !2, i64 408}
!106 = metadata !{metadata !"function", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !6, i64 64, metadata !6, i64 68, metadata !6, i64 72, metadata !6, i64 76, metadata !2, i64 80, metadata !107, i64 88, metadata !2, i64 120, metadata !2, i64 128, metadata !2, i64 136, metadata !2, i64 144, metadata !6, i64 152, metadata !2, i64 160, metadata !2, i64 168, metadata !2, i64 176, metadata !2, i64 184, metadata !2, i64 192, metadata !2, i64 200, metadata !2, i64 208, metadata !2, i64 216, metadata !2, i64 224, metadata !2, i64 232, metadata !2, i64 240, metadata !2, i64 248, metadata !2, i64 256, metadata !26, i64 264, metadata !2, i64 272, metadata !2, i64 280, metadata !2, i64 288, metadata !2, i64 296, metadata !6, i64 304, metadata !2, i64 312, metadata !2, i64 320, metadata !6, i64 328, metadata !6, i64 332, metadata !6, i64 336, metadata !2, i64 344, metadata !6, i64 352, metadata !6, i64 356, metadata !2, i64 360, metadata !2, i64 368, metadata !2, i64 376, metadata !6, i64 384, metadata !6, i64 388, metadata !2, i64 392, metadata !6, i64 400, metadata !6, i64 404, metadata !2, i64 408, metadata !2, i64 416, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 424, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 425, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426, metadata !6, i64 426}
!107 = metadata !{metadata !"ix86_args", metadata !6, i64 0, metadata !6, i64 4, metadata !6, i64 8, metadata !6, i64 12, metadata !6, i64 16, metadata !6, i64 20, metadata !6, i64 24}
!108 = metadata !{i64 0, i64 8, metadata !1, i64 8, i64 8, metadata !1, i64 16, i64 8, metadata !1, i64 24, i64 4, metadata !5}
!109 = metadata !{metadata !110, metadata !2, i64 32}
!110 = metadata !{metadata !"c_language_function", metadata !111, i64 0, metadata !2, i64 40, metadata !2, i64 48, metadata !6, i64 56, metadata !6, i64 60, metadata !6, i64 64, metadata !6, i64 68, metadata !6, i64 72, metadata !2, i64 80}
!111 = metadata !{metadata !"language_function", metadata !112, i64 0, metadata !2, i64 32}
!112 = metadata !{metadata !"stmt_tree_s", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !6, i64 24}
!113 = metadata !{metadata !110, metadata !2, i64 40}
!114 = metadata !{metadata !110, metadata !2, i64 48}
!115 = metadata !{metadata !110, metadata !6, i64 56}
!116 = metadata !{metadata !110, metadata !6, i64 60}
!117 = metadata !{metadata !110, metadata !6, i64 64}
!118 = metadata !{metadata !110, metadata !6, i64 68}
!119 = metadata !{metadata !110, metadata !6, i64 72}
!120 = metadata !{metadata !110, metadata !2, i64 80}
