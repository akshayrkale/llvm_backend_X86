; ModuleID = 'cfgloop.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.varray_head_tag = type { i64, i64, i64, i8*, %union.varray_data_tag }
%union.varray_data_tag = type { [1 x %struct.const_equiv_data] }
%struct.const_equiv_data = type { %struct.rtx_def*, i32 }
%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.basic_block_def = type { %struct.rtx_def*, %struct.rtx_def*, %union.tree_node*, %union.tree_node*, %struct.edge_def*, %struct.edge_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i8*, i32, i32, i64, i32, i32 }
%union.tree_node = type opaque
%struct.edge_def = type { %struct.edge_def*, %struct.edge_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.rtx_def*, i8*, i32, i32, i64 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32 }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.loop = type { i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.basic_block_def*, %struct.edge_def**, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.simple_bitmap_def*, i32, %struct.edge_def**, i32, %struct.edge_def**, i32, %struct.simple_bitmap_def*, i32, i32, %struct.loop*, %struct.loop*, %struct.loop*, i32, i32, i8*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.simple_bitmap_def = type { i32, i32, i32, [1 x i64] }
%struct._IO_FILE = type opaque
%struct.loops = type { i32, i32, %struct.loop*, %struct.loop*, %struct.cfg, %struct.simple_bitmap_def* }
%struct.cfg = type { %struct.simple_bitmap_def**, i32*, i32* }

@.str = private unnamed_addr constant [31 x i8] c";;\0A;; Loop %d (%d to %d):%s%s\0A\00", align 1
@.str1 = private unnamed_addr constant [8 x i8] c" shared\00", align 1
@.str2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str3 = private unnamed_addr constant [9 x i8] c" invalid\00", align 1
@.str4 = private unnamed_addr constant [20 x i8] c";;\0A;; Loop %d:%s%s\0A\00", align 1
@.str5 = private unnamed_addr constant [59 x i8] c";;  header %d, latch %d, pre-header %d, first %d, last %d\0A\00", align 1
@.str6 = private unnamed_addr constant [35 x i8] c";;  depth %d, level %d, outer %ld\0A\00", align 1
@.str7 = private unnamed_addr constant [21 x i8] c";;  pre-header edges\00", align 1
@.str8 = private unnamed_addr constant [16 x i8] c";;  entry edges\00", align 1
@.str9 = private unnamed_addr constant [7 x i8] c";;  %d\00", align 1
@.str10 = private unnamed_addr constant [7 x i8] c" nodes\00", align 1
@.str11 = private unnamed_addr constant [15 x i8] c";;  exit edges\00", align 1
@.str12 = private unnamed_addr constant [14 x i8] c";;  exit doms\00", align 1
@.str13 = private unnamed_addr constant [30 x i8] c";; %d loops found, %d levels\0A\00", align 1
@.str14 = private unnamed_addr constant [45 x i8] c";; loop header %d shared by loops %d, %d %s\0A\00", align 1
@.str15 = private unnamed_addr constant [9 x i8] c"disjoint\00", align 1
@.str16 = private unnamed_addr constant [7 x i8] c"nested\00", align 1
@.str17 = private unnamed_addr constant [10 x i8] c"cfgloop.c\00", align 1
@__FUNCTION__.flow_loops_free = private unnamed_addr constant [16 x i8] c"flow_loops_free\00", align 1
@n_basic_blocks = external global i32
@__FUNCTION__.flow_loop_scan = private unnamed_addr constant [15 x i8] c"flow_loop_scan\00", align 1
@__FUNCTION__.flow_loops_find = private unnamed_addr constant [16 x i8] c"flow_loops_find\00", align 1
@basic_block_info = external global %struct.varray_head_tag*
@entry_exit_blocks = external global [2 x %struct.basic_block_def]
@__FUNCTION__.flow_loop_outside_edge_p = private unnamed_addr constant [25 x i8] c"flow_loop_outside_edge_p\00", align 1
@__FUNCTION__.flow_loop_entry_edges_find = private unnamed_addr constant [27 x i8] c"flow_loop_entry_edges_find\00", align 1
@.str18 = private unnamed_addr constant [15 x i8] c";; %d succs { \00", align 1
@.str19 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str20 = private unnamed_addr constant [6 x i8] c"} dom\00", align 1
@.str21 = private unnamed_addr constant [15 x i8] c";; DFS order: \00", align 1
@.str23 = private unnamed_addr constant [14 x i8] c";; RC order: \00", align 1

; Function Attrs: nounwind uwtable
define void @flow_loop_dump(%struct.loop* %loop, %struct._IO_FILE* %file, void (%struct.loop*, %struct._IO_FILE*, i32)* %loop_dump_aux, i32 %verbose) #0 {
entry:
  %tobool = icmp eq %struct.loop* %loop, null
  br i1 %tobool, label %if.end54, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %header = getelementptr inbounds %struct.loop* %loop, i64 0, i32 1
  %0 = load %struct.basic_block_def** %header, align 8, !tbaa !1
  %tobool1 = icmp eq %struct.basic_block_def* %0, null
  br i1 %tobool1, label %if.end54, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %first = getelementptr inbounds %struct.loop* %loop, i64 0, i32 6
  %1 = load %struct.basic_block_def** %first, align 8, !tbaa !7
  %head = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 0
  %2 = load %struct.rtx_def** %head, align 8, !tbaa !8
  %tobool2 = icmp eq %struct.rtx_def* %2, null
  br i1 %tobool2, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %last = getelementptr inbounds %struct.loop* %loop, i64 0, i32 7
  %3 = load %struct.basic_block_def** %last, align 8, !tbaa !11
  %end = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 1
  %4 = load %struct.rtx_def** %end, align 8, !tbaa !12
  %tobool3 = icmp eq %struct.rtx_def* %4, null
  br i1 %tobool3, label %if.else, label %if.then4

if.then4:                                         ; preds = %land.lhs.true
  %num = getelementptr inbounds %struct.loop* %loop, i64 0, i32 0
  %5 = load i32* %num, align 4, !tbaa !13
  %arrayidx = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %6 = load i32* %rtint, align 4, !tbaa !14
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtint11 = bitcast %union.rtunion_def* %arrayidx10 to i32*
  %7 = load i32* %rtint11, align 4, !tbaa !14
  %shared = getelementptr inbounds %struct.loop* %loop, i64 0, i32 20
  %8 = load i32* %shared, align 4, !tbaa !15
  %tobool12 = icmp ne i32 %8, 0
  %cond = select i1 %tobool12, i8* getelementptr inbounds ([8 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str2, i64 0, i64 0)
  %invalid = getelementptr inbounds %struct.loop* %loop, i64 0, i32 21
  %9 = load i32* %invalid, align 4, !tbaa !16
  %tobool13 = icmp ne i32 %9, 0
  %cond14 = select i1 %tobool13, i8* getelementptr inbounds ([9 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str2, i64 0, i64 0)
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([31 x i8]* @.str, i64 0, i64 0), i32 %5, i32 %6, i32 %7, i8* %cond, i8* %cond14) #4
  br label %if.end23

if.else:                                          ; preds = %land.lhs.true, %if.end
  %num15 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 0
  %10 = load i32* %num15, align 4, !tbaa !13
  %shared16 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 20
  %11 = load i32* %shared16, align 4, !tbaa !15
  %tobool17 = icmp ne i32 %11, 0
  %cond18 = select i1 %tobool17, i8* getelementptr inbounds ([8 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str2, i64 0, i64 0)
  %invalid19 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 21
  %12 = load i32* %invalid19, align 4, !tbaa !16
  %tobool20 = icmp ne i32 %12, 0
  %cond21 = select i1 %tobool20, i8* getelementptr inbounds ([9 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str2, i64 0, i64 0)
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([20 x i8]* @.str4, i64 0, i64 0), i32 %10, i8* %cond18, i8* %cond21) #4
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then4
  %13 = load %struct.basic_block_def** %header, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %13, i64 0, i32 11
  %14 = load i32* %index, align 4, !tbaa !17
  %latch = getelementptr inbounds %struct.loop* %loop, i64 0, i32 2
  %15 = load %struct.basic_block_def** %latch, align 8, !tbaa !18
  %index25 = getelementptr inbounds %struct.basic_block_def* %15, i64 0, i32 11
  %16 = load i32* %index25, align 4, !tbaa !17
  %pre_header = getelementptr inbounds %struct.loop* %loop, i64 0, i32 3
  %17 = load %struct.basic_block_def** %pre_header, align 8, !tbaa !19
  %tobool26 = icmp eq %struct.basic_block_def* %17, null
  br i1 %tobool26, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end23
  %index28 = getelementptr inbounds %struct.basic_block_def* %17, i64 0, i32 11
  %18 = load i32* %index28, align 4, !tbaa !17
  br label %cond.end

cond.end:                                         ; preds = %if.end23, %cond.true
  %cond29 = phi i32 [ %18, %cond.true ], [ -1, %if.end23 ]
  %19 = load %struct.basic_block_def** %first, align 8, !tbaa !7
  %index31 = getelementptr inbounds %struct.basic_block_def* %19, i64 0, i32 11
  %20 = load i32* %index31, align 4, !tbaa !17
  %last32 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 7
  %21 = load %struct.basic_block_def** %last32, align 8, !tbaa !11
  %index33 = getelementptr inbounds %struct.basic_block_def* %21, i64 0, i32 11
  %22 = load i32* %index33, align 4, !tbaa !17
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([59 x i8]* @.str5, i64 0, i64 0), i32 %14, i32 %16, i32 %cond29, i32 %20, i32 %22) #4
  %depth = getelementptr inbounds %struct.loop* %loop, i64 0, i32 15
  %23 = load i32* %depth, align 4, !tbaa !20
  %level = getelementptr inbounds %struct.loop* %loop, i64 0, i32 16
  %24 = load i32* %level, align 4, !tbaa !21
  %outer = getelementptr inbounds %struct.loop* %loop, i64 0, i32 17
  %25 = load %struct.loop** %outer, align 8, !tbaa !22
  %tobool35 = icmp eq %struct.loop* %25, null
  br i1 %tobool35, label %cond.end40, label %cond.true36

cond.true36:                                      ; preds = %cond.end
  %num38 = getelementptr inbounds %struct.loop* %25, i64 0, i32 0
  %26 = load i32* %num38, align 4, !tbaa !13
  %phitmp = sext i32 %26 to i64
  br label %cond.end40

cond.end40:                                       ; preds = %cond.end, %cond.true36
  %cond41 = phi i64 [ %phitmp, %cond.true36 ], [ -1, %cond.end ]
  %call42 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([35 x i8]* @.str6, i64 0, i64 0), i32 %23, i32 %24, i64 %cond41) #4
  %pre_header_edges = getelementptr inbounds %struct.loop* %loop, i64 0, i32 4
  %27 = load %struct.edge_def*** %pre_header_edges, align 8, !tbaa !23
  %tobool43 = icmp eq %struct.edge_def** %27, null
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %cond.end40
  %num_pre_header_edges = getelementptr inbounds %struct.loop* %loop, i64 0, i32 5
  %28 = load i32* %num_pre_header_edges, align 4, !tbaa !24
  tail call void @flow_edge_list_print(i8* getelementptr inbounds ([21 x i8]* @.str7, i64 0, i64 0), %struct.edge_def** %27, i32 %28, %struct._IO_FILE* %file) #4
  br label %if.end46

if.end46:                                         ; preds = %cond.end40, %if.then44
  %entry_edges = getelementptr inbounds %struct.loop* %loop, i64 0, i32 10
  %29 = load %struct.edge_def*** %entry_edges, align 8, !tbaa !25
  %num_entries = getelementptr inbounds %struct.loop* %loop, i64 0, i32 11
  %30 = load i32* %num_entries, align 4, !tbaa !26
  tail call void @flow_edge_list_print(i8* getelementptr inbounds ([16 x i8]* @.str8, i64 0, i64 0), %struct.edge_def** %29, i32 %30, %struct._IO_FILE* %file) #4
  %num_nodes = getelementptr inbounds %struct.loop* %loop, i64 0, i32 9
  %31 = load i32* %num_nodes, align 4, !tbaa !27
  %call47 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([7 x i8]* @.str9, i64 0, i64 0), i32 %31) #4
  %nodes = getelementptr inbounds %struct.loop* %loop, i64 0, i32 8
  %32 = load %struct.simple_bitmap_def** %nodes, align 8, !tbaa !28
  tail call void @flow_nodes_print(i8* getelementptr inbounds ([7 x i8]* @.str10, i64 0, i64 0), %struct.simple_bitmap_def* %32, %struct._IO_FILE* %file) #4
  %exit_edges = getelementptr inbounds %struct.loop* %loop, i64 0, i32 12
  %33 = load %struct.edge_def*** %exit_edges, align 8, !tbaa !29
  %num_exits = getelementptr inbounds %struct.loop* %loop, i64 0, i32 13
  %34 = load i32* %num_exits, align 4, !tbaa !30
  tail call void @flow_edge_list_print(i8* getelementptr inbounds ([15 x i8]* @.str11, i64 0, i64 0), %struct.edge_def** %33, i32 %34, %struct._IO_FILE* %file) #4
  %exits_doms = getelementptr inbounds %struct.loop* %loop, i64 0, i32 14
  %35 = load %struct.simple_bitmap_def** %exits_doms, align 8, !tbaa !31
  %tobool48 = icmp eq %struct.simple_bitmap_def* %35, null
  br i1 %tobool48, label %if.end51, label %if.then49

if.then49:                                        ; preds = %if.end46
  tail call void @flow_nodes_print(i8* getelementptr inbounds ([14 x i8]* @.str12, i64 0, i64 0), %struct.simple_bitmap_def* %35, %struct._IO_FILE* %file) #4
  br label %if.end51

if.end51:                                         ; preds = %if.end46, %if.then49
  %tobool52 = icmp eq void (%struct.loop*, %struct._IO_FILE*, i32)* %loop_dump_aux, null
  br i1 %tobool52, label %if.end54, label %if.then53

if.then53:                                        ; preds = %if.end51
  tail call void %loop_dump_aux(%struct.loop* %loop, %struct._IO_FILE* %file, i32 %verbose) #4
  br label %if.end54

if.end54:                                         ; preds = %if.end51, %lor.lhs.false, %entry, %if.then53
  ret void
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1

declare void @flow_edge_list_print(i8*, %struct.edge_def**, i32, %struct._IO_FILE*) #2

declare void @flow_nodes_print(i8*, %struct.simple_bitmap_def*, %struct._IO_FILE*) #2

; Function Attrs: nounwind uwtable
define void @flow_loops_dump(%struct.loops* nocapture readonly %loops, %struct._IO_FILE* %file, void (%struct.loop*, %struct._IO_FILE*, i32)* %loop_dump_aux, i32 %verbose) #0 {
entry:
  %num = getelementptr inbounds %struct.loops* %loops, i64 0, i32 0
  %0 = load i32* %num, align 4, !tbaa !32
  %tobool = icmp ne i32 %0, 0
  %tobool1 = icmp ne %struct._IO_FILE* %file, null
  %or.cond = and i1 %tobool, %tobool1
  br i1 %or.cond, label %if.end, label %if.end34

if.end:                                           ; preds = %entry
  %levels = getelementptr inbounds %struct.loops* %loops, i64 0, i32 1
  %1 = load i32* %levels, align 4, !tbaa !35
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([30 x i8]* @.str13, i64 0, i64 0), i32 %0, i32 %1) #4
  %cmp66 = icmp sgt i32 %0, 0
  br i1 %cmp66, label %for.body.lr.ph, label %for.end31

for.body.lr.ph:                                   ; preds = %if.end
  %array = getelementptr inbounds %struct.loops* %loops, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc29, %for.body.lr.ph
  %indvars.iv70 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next71, %for.inc29 ]
  %indvars.iv68 = phi i32 [ 0, %for.body.lr.ph ], [ %indvars.iv.next69, %for.inc29 ]
  %2 = load %struct.loop** %array, align 8, !tbaa !36
  %arrayidx = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv70
  tail call void @flow_loop_dump(%struct.loop* %arrayidx, %struct._IO_FILE* %file, void (%struct.loop*, %struct._IO_FILE*, i32)* %loop_dump_aux, i32 %verbose)
  %shared = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv70, i32 20
  %3 = load i32* %shared, align 4, !tbaa !15
  %tobool2 = icmp eq i32 %3, 0
  br i1 %tobool2, label %for.inc29, label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.body
  %4 = trunc i64 %indvars.iv70 to i32
  %cmp564 = icmp sgt i32 %4, 0
  br i1 %cmp564, label %for.body6.lr.ph, label %for.inc29

for.body6.lr.ph:                                  ; preds = %for.cond4.preheader
  %header = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv70, i32 1
  %num_nodes = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv70, i32 9
  br label %for.body6

for.body6:                                        ; preds = %for.inc, %for.body6.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %5 = load %struct.loop** %array, align 8, !tbaa !36
  %arrayidx9 = getelementptr inbounds %struct.loop* %5, i64 %indvars.iv
  %6 = load %struct.basic_block_def** %header, align 8, !tbaa !1
  %header10 = getelementptr inbounds %struct.loop* %5, i64 %indvars.iv, i32 1
  %7 = load %struct.basic_block_def** %header10, align 8, !tbaa !1
  %cmp11 = icmp eq %struct.basic_block_def* %6, %7
  br i1 %cmp11, label %if.then12, label %for.inc

if.then12:                                        ; preds = %for.body6
  %8 = load i32* %num_nodes, align 4, !tbaa !27
  %num_nodes13 = getelementptr inbounds %struct.loop* %5, i64 %indvars.iv, i32 9
  %9 = load i32* %num_nodes13, align 4, !tbaa !27
  %cmp14 = icmp slt i32 %8, %9
  %cond = select i1 %cmp14, %struct.loop* %arrayidx, %struct.loop* %arrayidx9
  %cond20 = select i1 %cmp14, %struct.loop* %arrayidx9, %struct.loop* %arrayidx
  %cond.idx = getelementptr %struct.loop* %cond, i64 0, i32 8
  %cond.idx.val = load %struct.simple_bitmap_def** %cond.idx, align 8, !tbaa !28
  %cond20.idx = getelementptr %struct.loop* %cond20, i64 0, i32 8
  %cond20.idx.val = load %struct.simple_bitmap_def** %cond20.idx, align 8, !tbaa !28
  %call.i = tail call i32 @sbitmap_a_subset_b_p(%struct.simple_bitmap_def* %cond20.idx.val, %struct.simple_bitmap_def* %cond.idx.val) #4
  %lnot = icmp eq i32 %call.i, 0
  %10 = load %struct.basic_block_def** %header, align 8, !tbaa !1
  %index = getelementptr inbounds %struct.basic_block_def* %10, i64 0, i32 11
  %11 = load i32* %index, align 4, !tbaa !17
  %cond25 = select i1 %lnot, i8* getelementptr inbounds ([9 x i8]* @.str15, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str16, i64 0, i64 0)
  %12 = trunc i64 %indvars.iv to i32
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([45 x i8]* @.str14, i64 0, i64 0), i32 %11, i32 %4, i32 %12, i8* %cond25) #4
  br label %for.inc

for.inc:                                          ; preds = %for.body6, %if.then12
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %indvars.iv68
  br i1 %exitcond, label %for.inc29, label %for.body6

for.inc29:                                        ; preds = %for.inc, %for.cond4.preheader, %for.body
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1
  %indvars.iv.next69 = add nuw nsw i32 %indvars.iv68, 1
  %lftr.wideiv72 = trunc i64 %indvars.iv.next71 to i32
  %exitcond73 = icmp eq i32 %lftr.wideiv72, %0
  br i1 %exitcond73, label %for.end31, label %for.body

for.end31:                                        ; preds = %for.inc29, %if.end
  %tobool32 = icmp eq i32 %verbose, 0
  br i1 %tobool32, label %if.end34, label %if.then33

if.then33:                                        ; preds = %for.end31
  %13 = load i32* %num, align 4, !tbaa !32
  %tobool.i = icmp eq i32 %13, 0
  br i1 %tobool.i, label %if.end34, label %lor.lhs.false2.i

lor.lhs.false2.i:                                 ; preds = %if.then33
  %dom.i = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 0
  %14 = load %struct.simple_bitmap_def*** %dom.i, align 8, !tbaa !37
  %tobool3.i = icmp eq %struct.simple_bitmap_def** %14, null
  br i1 %tobool3.i, label %if.end34, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %lor.lhs.false2.i
  %15 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %cmp84.i = icmp sgt i32 %15, 0
  br i1 %cmp84.i, label %for.body.i, label %for.end14.i

for.body.i:                                       ; preds = %for.cond.preheader.i, %for.end.i
  %indvars.iv88.i = phi i64 [ %indvars.iv.next89.i, %for.end.i ], [ 0, %for.cond.preheader.i ]
  %16 = trunc i64 %indvars.iv88.i to i32
  %call.i63 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8]* @.str18, i64 0, i64 0), i32 %16) #4
  %17 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !38
  %data.i = getelementptr inbounds %struct.varray_head_tag* %17, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  %arrayidx.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %indvars.iv88.i
  %18 = load %struct.basic_block_def** %arrayidx.i, align 8, !tbaa !38
  %succ4.i = getelementptr inbounds %struct.basic_block_def* %18, i64 0, i32 5
  %succ.081.i = load %struct.edge_def** %succ4.i, align 8
  %tobool682.i = icmp eq %struct.edge_def* %succ.081.i, null
  br i1 %tobool682.i, label %for.end.i, label %for.body7.i

for.body7.i:                                      ; preds = %for.body.i, %for.body7.i
  %succ.083.i = phi %struct.edge_def* [ %succ.0.i, %for.body7.i ], [ %succ.081.i, %for.body.i ]
  %dest.i = getelementptr inbounds %struct.edge_def* %succ.083.i, i64 0, i32 3
  %19 = load %struct.basic_block_def** %dest.i, align 8, !tbaa !39
  %index.i = getelementptr inbounds %struct.basic_block_def* %19, i64 0, i32 11
  %20 = load i32* %index.i, align 4, !tbaa !17
  %call8.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0), i32 %20) #4
  %succ_next.i = getelementptr inbounds %struct.edge_def* %succ.083.i, i64 0, i32 1
  %succ.0.i = load %struct.edge_def** %succ_next.i, align 8
  %tobool6.i = icmp eq %struct.edge_def* %succ.0.i, null
  br i1 %tobool6.i, label %for.end.i, label %for.body7.i

for.end.i:                                        ; preds = %for.body7.i, %for.body.i
  %21 = load %struct.simple_bitmap_def*** %dom.i, align 8, !tbaa !37
  %arrayidx12.i = getelementptr inbounds %struct.simple_bitmap_def** %21, i64 %indvars.iv88.i
  %22 = load %struct.simple_bitmap_def** %arrayidx12.i, align 8, !tbaa !38
  tail call void @flow_nodes_print(i8* getelementptr inbounds ([6 x i8]* @.str20, i64 0, i64 0), %struct.simple_bitmap_def* %22, %struct._IO_FILE* %file) #4
  %indvars.iv.next89.i = add nuw nsw i64 %indvars.iv88.i, 1
  %23 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %24 = trunc i64 %indvars.iv.next89.i to i32
  %cmp.i = icmp slt i32 %24, %23
  br i1 %cmp.i, label %for.body.i, label %for.end14.i

for.end14.i:                                      ; preds = %for.end.i, %for.cond.preheader.i
  %dfs_order.i = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 1
  %25 = load i32** %dfs_order.i, align 8, !tbaa !41
  %tobool16.i = icmp eq i32* %25, null
  br i1 %tobool16.i, label %if.end31.i, label %if.then17.i

if.then17.i:                                      ; preds = %for.end14.i
  %26 = tail call i64 @fwrite(i8* getelementptr inbounds ([15 x i8]* @.str21, i64 0, i64 0), i64 14, i64 1, %struct._IO_FILE* %file) #4
  %27 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %cmp2079.i = icmp sgt i32 %27, 0
  br i1 %cmp2079.i, label %for.body21.i, label %for.end29.i

for.body21.i:                                     ; preds = %if.then17.i, %for.body21.i
  %indvars.iv86.i = phi i64 [ %indvars.iv.next87.i, %for.body21.i ], [ 0, %if.then17.i ]
  %28 = load i32** %dfs_order.i, align 8, !tbaa !41
  %arrayidx25.i = getelementptr inbounds i32* %28, i64 %indvars.iv86.i
  %29 = load i32* %arrayidx25.i, align 4, !tbaa !14
  %call26.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0), i32 %29) #4
  %indvars.iv.next87.i = add nuw nsw i64 %indvars.iv86.i, 1
  %30 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %31 = trunc i64 %indvars.iv.next87.i to i32
  %cmp20.i = icmp slt i32 %31, %30
  br i1 %cmp20.i, label %for.body21.i, label %for.end29.i

for.end29.i:                                      ; preds = %for.body21.i, %if.then17.i
  %fputc.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file) #4
  br label %if.end31.i

if.end31.i:                                       ; preds = %for.end29.i, %for.end14.i
  %rc_order.i = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 2
  %32 = load i32** %rc_order.i, align 8, !tbaa !42
  %tobool33.i = icmp eq i32* %32, null
  br i1 %tobool33.i, label %if.end34, label %if.then34.i

if.then34.i:                                      ; preds = %if.end31.i
  %33 = tail call i64 @fwrite(i8* getelementptr inbounds ([14 x i8]* @.str23, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %file) #4
  %34 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %cmp3777.i = icmp sgt i32 %34, 0
  br i1 %cmp3777.i, label %for.body38.i, label %for.end46.i

for.body38.i:                                     ; preds = %if.then34.i, %for.body38.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body38.i ], [ 0, %if.then34.i ]
  %35 = load i32** %rc_order.i, align 8, !tbaa !42
  %arrayidx42.i = getelementptr inbounds i32* %35, i64 %indvars.iv.i
  %36 = load i32* %arrayidx42.i, align 4, !tbaa !14
  %call43.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0), i32 %36) #4
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %37 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %38 = trunc i64 %indvars.iv.next.i to i32
  %cmp37.i = icmp slt i32 %38, %37
  br i1 %cmp37.i, label %for.body38.i, label %for.end46.i

for.end46.i:                                      ; preds = %for.body38.i, %if.then34.i
  %fputc76.i = tail call i32 @fputc(i32 10, %struct._IO_FILE* %file) #4
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %for.end46.i, %if.end31.i, %lor.lhs.false2.i, %for.end31, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @flow_loops_free(%struct.loops* nocapture %loops) #0 {
entry:
  %array = getelementptr inbounds %struct.loops* %loops, i64 0, i32 2
  %0 = load %struct.loop** %array, align 8, !tbaa !36
  %tobool = icmp eq %struct.loop* %0, null
  br i1 %tobool, label %if.end42, label %if.then

if.then:                                          ; preds = %entry
  %num = getelementptr inbounds %struct.loops* %loops, i64 0, i32 0
  %1 = load i32* %num, align 4, !tbaa !32
  %tobool1 = icmp eq i32 %1, 0
  br i1 %tobool1, label %if.then2, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then
  %cmp65 = icmp sgt i32 %1, 0
  br i1 %cmp65, label %for.body, label %for.end

if.then2:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.flow_loops_free, i64 0, i64 0)) #5
  unreachable

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %2 = phi %struct.loop* [ %.pre67, %for.inc ], [ %0, %for.cond.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond.preheader ]
  %pre_header_edges = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 4
  %3 = load %struct.edge_def*** %pre_header_edges, align 8, !tbaa !23
  %tobool5 = icmp eq %struct.edge_def** %3, null
  br i1 %tobool5, label %if.end8, label %if.then6

if.then6:                                         ; preds = %for.body
  %4 = bitcast %struct.edge_def** %3 to i8*
  tail call void @free(i8* %4)
  br label %if.end8

if.end8:                                          ; preds = %for.body, %if.then6
  %nodes = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 8
  %5 = load %struct.simple_bitmap_def** %nodes, align 8, !tbaa !28
  %tobool9 = icmp eq %struct.simple_bitmap_def* %5, null
  br i1 %tobool9, label %if.end12, label %if.then10

if.then10:                                        ; preds = %if.end8
  %6 = bitcast %struct.simple_bitmap_def* %5 to i8*
  tail call void @free(i8* %6)
  br label %if.end12

if.end12:                                         ; preds = %if.end8, %if.then10
  %entry_edges = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 10
  %7 = load %struct.edge_def*** %entry_edges, align 8, !tbaa !25
  %tobool13 = icmp eq %struct.edge_def** %7, null
  br i1 %tobool13, label %if.end16, label %if.then14

if.then14:                                        ; preds = %if.end12
  %8 = bitcast %struct.edge_def** %7 to i8*
  tail call void @free(i8* %8)
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.then14
  %exit_edges = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 12
  %9 = load %struct.edge_def*** %exit_edges, align 8, !tbaa !29
  %tobool17 = icmp eq %struct.edge_def** %9, null
  br i1 %tobool17, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end16
  %10 = bitcast %struct.edge_def** %9 to i8*
  tail call void @free(i8* %10)
  br label %if.end20

if.end20:                                         ; preds = %if.end16, %if.then18
  %exits_doms = getelementptr inbounds %struct.loop* %2, i64 %indvars.iv, i32 14
  %11 = load %struct.simple_bitmap_def** %exits_doms, align 8, !tbaa !31
  %tobool21 = icmp eq %struct.simple_bitmap_def* %11, null
  br i1 %tobool21, label %for.inc, label %if.then22

if.then22:                                        ; preds = %if.end20
  %12 = bitcast %struct.simple_bitmap_def* %11 to i8*
  tail call void @free(i8* %12)
  br label %for.inc

for.inc:                                          ; preds = %if.end20, %if.then22
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %13 = load i32* %num, align 4, !tbaa !32
  %14 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %14, %13
  %.pre67 = load %struct.loop** %array, align 8, !tbaa !36
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %15 = phi %struct.loop* [ %0, %for.cond.preheader ], [ %.pre67, %for.inc ]
  %16 = bitcast %struct.loop* %15 to i8*
  tail call void @free(i8* %16)
  store %struct.loop* null, %struct.loop** %array, align 8, !tbaa !36
  %dom = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 0
  %17 = load %struct.simple_bitmap_def*** %dom, align 8, !tbaa !37
  %tobool27 = icmp eq %struct.simple_bitmap_def** %17, null
  br i1 %tobool27, label %if.end31, label %if.then28

if.then28:                                        ; preds = %for.end
  %18 = bitcast %struct.simple_bitmap_def** %17 to i8*
  tail call void @free(i8* %18)
  br label %if.end31

if.end31:                                         ; preds = %for.end, %if.then28
  %dfs_order = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 1
  %19 = load i32** %dfs_order, align 8, !tbaa !41
  %tobool33 = icmp eq i32* %19, null
  br i1 %tobool33, label %if.end37, label %if.then34

if.then34:                                        ; preds = %if.end31
  %20 = bitcast i32* %19 to i8*
  tail call void @free(i8* %20)
  br label %if.end37

if.end37:                                         ; preds = %if.end31, %if.then34
  %shared_headers = getelementptr inbounds %struct.loops* %loops, i64 0, i32 5
  %21 = load %struct.simple_bitmap_def** %shared_headers, align 8, !tbaa !43
  %tobool38 = icmp eq %struct.simple_bitmap_def* %21, null
  br i1 %tobool38, label %if.end42, label %if.then39

if.then39:                                        ; preds = %if.end37
  %22 = bitcast %struct.simple_bitmap_def* %21 to i8*
  tail call void @free(i8* %22)
  br label %if.end42

if.end42:                                         ; preds = %if.end37, %entry, %if.then39
  ret void
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind uwtable
define i32 @flow_loop_scan(%struct.loops* nocapture readonly %loops, %struct.loop* nocapture %loop, i32 %flags) #0 {
entry:
  %and = and i32 %flags, 16
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %exit_edges = getelementptr inbounds %struct.loop* %loop, i64 0, i32 12
  %0 = load %struct.edge_def*** %exit_edges, align 8, !tbaa !29
  %tobool1 = icmp eq %struct.edge_def** %0, null
  %or = or i32 %flags, 8
  %or.flags = select i1 %tobool1, i32 %or, i32 %flags
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %flags.addr.0 = phi i32 [ %flags, %entry ], [ %or.flags, %land.lhs.true ]
  %and2 = and i32 %flags.addr.0, 4
  %tobool3 = icmp eq i32 %and2, 0
  br i1 %tobool3, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  %header = getelementptr inbounds %struct.loop* %loop, i64 0, i32 1
  %1 = load %struct.basic_block_def** %header, align 8, !tbaa !1
  %nodes = getelementptr inbounds %struct.loop* %loop, i64 0, i32 8
  %2 = load %struct.simple_bitmap_def** %nodes, align 8, !tbaa !28
  %entry_edges = getelementptr inbounds %struct.loop* %loop, i64 0, i32 10
  store %struct.edge_def** null, %struct.edge_def*** %entry_edges, align 8, !tbaa !38
  %pred.i = getelementptr inbounds %struct.basic_block_def* %1, i64 0, i32 4
  %e.060.i = load %struct.edge_def** %pred.i, align 8
  %tobool61.i = icmp eq %struct.edge_def* %e.060.i, null
  br i1 %tobool61.i, label %if.then5.i, label %for.body.i

for.body.i:                                       ; preds = %if.then4, %for.inc.i
  %e.063.i = phi %struct.edge_def* [ %e.0.i, %for.inc.i ], [ %e.060.i, %if.then4 ]
  %num_entries.062.i = phi i32 [ %num_entries.1.i, %for.inc.i ], [ 0, %if.then4 ]
  %src1.i = getelementptr inbounds %struct.edge_def* %e.063.i, i64 0, i32 2
  %3 = load %struct.basic_block_def** %src1.i, align 8, !tbaa !44
  %cmp.i = icmp eq %struct.basic_block_def* %3, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %index.i = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 11
  %4 = load i32* %index.i, align 4, !tbaa !17
  %div.i = lshr i32 %4, 6
  %idxprom.i = zext i32 %div.i to i64
  %arrayidx.i = getelementptr inbounds %struct.simple_bitmap_def* %2, i64 0, i32 3, i64 %idxprom.i
  %5 = load i64* %arrayidx.i, align 8, !tbaa !45
  %rem.i = and i32 %4, 63
  %sh_prom.i = zext i32 %rem.i to i64
  %6 = shl i64 1, %sh_prom.i
  %and54.i = and i64 %6, %5
  %tobool3.i = icmp eq i64 %and54.i, 0
  br i1 %tobool3.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %lor.lhs.false.i, %for.body.i
  %inc.i = add nsw i32 %num_entries.062.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %lor.lhs.false.i
  %num_entries.1.i = phi i32 [ %inc.i, %if.then.i ], [ %num_entries.062.i, %lor.lhs.false.i ]
  %pred_next.i = getelementptr inbounds %struct.edge_def* %e.063.i, i64 0, i32 0
  %e.0.i = load %struct.edge_def** %pred_next.i, align 8
  %tobool.i = icmp eq %struct.edge_def* %e.0.i, null
  br i1 %tobool.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  %tobool4.i = icmp eq i32 %num_entries.1.i, 0
  br i1 %tobool4.i, label %if.then5.i, label %if.end6.i

if.then5.i:                                       ; preds = %for.end.i, %if.then4
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i32 267, i8* getelementptr inbounds ([27 x i8]* @__FUNCTION__.flow_loop_entry_edges_find, i64 0, i64 0)) #5
  unreachable

if.end6.i:                                        ; preds = %for.end.i
  %conv.i = sext i32 %num_entries.1.i to i64
  %mul.i = shl nsw i64 %conv.i, 3
  %call.i = tail call noalias i8* @xmalloc(i64 %mul.i) #4
  %7 = bitcast i8* %call.i to %struct.edge_def**
  store %struct.edge_def** %7, %struct.edge_def*** %entry_edges, align 8, !tbaa !38
  %e.155.i = load %struct.edge_def** %pred.i, align 8
  %tobool956.i = icmp eq %struct.edge_def* %e.155.i, null
  br i1 %tobool956.i, label %flow_loop_entry_edges_find.exit, label %for.body10.i

for.body10.i:                                     ; preds = %if.end6.i, %for.inc32.i
  %e.158.i = phi %struct.edge_def* [ %e.1.i, %for.inc32.i ], [ %e.155.i, %if.end6.i ]
  %num_entries.257.i = phi i32 [ %num_entries.3.i, %for.inc32.i ], [ 0, %if.end6.i ]
  %src12.i = getelementptr inbounds %struct.edge_def* %e.158.i, i64 0, i32 2
  %8 = load %struct.basic_block_def** %src12.i, align 8, !tbaa !44
  %cmp13.i = icmp eq %struct.basic_block_def* %8, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp13.i, label %if.then27.i, label %lor.lhs.false15.i

lor.lhs.false15.i:                                ; preds = %for.body10.i
  %index16.i = getelementptr inbounds %struct.basic_block_def* %8, i64 0, i32 11
  %9 = load i32* %index16.i, align 4, !tbaa !17
  %div17.i = lshr i32 %9, 6
  %idxprom18.i = zext i32 %div17.i to i64
  %arrayidx20.i = getelementptr inbounds %struct.simple_bitmap_def* %2, i64 0, i32 3, i64 %idxprom18.i
  %10 = load i64* %arrayidx20.i, align 8, !tbaa !45
  %rem22.i = and i32 %9, 63
  %sh_prom23.i = zext i32 %rem22.i to i64
  %11 = shl i64 1, %sh_prom23.i
  %and2553.i = and i64 %11, %10
  %tobool26.i = icmp eq i64 %and2553.i, 0
  br i1 %tobool26.i, label %if.then27.i, label %for.inc32.i

if.then27.i:                                      ; preds = %lor.lhs.false15.i, %for.body10.i
  %inc28.i = add nsw i32 %num_entries.257.i, 1
  %idxprom29.i = sext i32 %num_entries.257.i to i64
  %12 = load %struct.edge_def*** %entry_edges, align 8, !tbaa !38
  %arrayidx30.i = getelementptr inbounds %struct.edge_def** %12, i64 %idxprom29.i
  store %struct.edge_def* %e.158.i, %struct.edge_def** %arrayidx30.i, align 8, !tbaa !38
  br label %for.inc32.i

for.inc32.i:                                      ; preds = %if.then27.i, %lor.lhs.false15.i
  %num_entries.3.i = phi i32 [ %inc28.i, %if.then27.i ], [ %num_entries.257.i, %lor.lhs.false15.i ]
  %pred_next33.i = getelementptr inbounds %struct.edge_def* %e.158.i, i64 0, i32 0
  %e.1.i = load %struct.edge_def** %pred_next33.i, align 8
  %tobool9.i = icmp eq %struct.edge_def* %e.1.i, null
  br i1 %tobool9.i, label %flow_loop_entry_edges_find.exit, label %for.body10.i

flow_loop_entry_edges_find.exit:                  ; preds = %for.inc32.i, %if.end6.i
  %num_entries.2.lcssa.i = phi i32 [ 0, %if.end6.i ], [ %num_entries.3.i, %for.inc32.i ]
  %num_entries = getelementptr inbounds %struct.loop* %loop, i64 0, i32 11
  store i32 %num_entries.2.lcssa.i, i32* %num_entries, align 4, !tbaa !26
  br label %if.end5

if.end5:                                          ; preds = %if.end, %flow_loop_entry_edges_find.exit
  %and6 = and i32 %flags.addr.0, 8
  %tobool7 = icmp eq i32 %and6, 0
  br i1 %tobool7, label %if.end12, label %if.then8

if.then8:                                         ; preds = %if.end5
  %nodes9 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 8
  %13 = load %struct.simple_bitmap_def** %nodes9, align 8, !tbaa !28
  %exit_edges10 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 12
  store %struct.edge_def** null, %struct.edge_def*** %exit_edges10, align 8, !tbaa !38
  %size.i = getelementptr inbounds %struct.simple_bitmap_def* %13, i64 0, i32 1
  %14 = load i32* %size.i, align 4, !tbaa !46
  %cmp177.i = icmp eq i32 %14, 0
  br i1 %cmp177.i, label %flow_loop_exit_edges_find.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.then8
  %15 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !38
  %data.i = getelementptr inbounds %struct.varray_head_tag* %15, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  br label %for.body.i75

for.body.i75:                                     ; preds = %for.inc30.i, %for.body.lr.ph.i
  %indvars.iv185.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next186.i, %for.inc30.i ]
  %num_exits.0179.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %num_exits.5.i, %for.inc30.i ]
  %arrayidx.i74 = getelementptr inbounds %struct.simple_bitmap_def* %13, i64 0, i32 3, i64 %indvars.iv185.i
  %16 = load i64* %arrayidx.i74, align 8, !tbaa !45
  %cmp1.i = icmp eq i64 %16, 0
  br i1 %cmp1.i, label %for.inc30.i, label %for.body4.preheader.i

for.body4.preheader.i:                            ; preds = %for.body.i75
  %17 = trunc i64 %indvars.iv185.i to i32
  %mul.i76 = shl i32 %17, 6
  br label %for.body4.i

for.body4.i:                                      ; preds = %for.inc26.i, %for.body4.preheader.i
  %indvars.iv183.i = phi i64 [ 0, %for.body4.preheader.i ], [ %indvars.iv.next184.i, %for.inc26.i ]
  %word_.0.i = phi i64 [ %16, %for.body4.preheader.i ], [ %word_.1.i, %for.inc26.i ]
  %num_exits.1.i = phi i32 [ %num_exits.0179.i, %for.body4.preheader.i ], [ %num_exits.4.i, %for.inc26.i ]
  %shl.i = shl i64 1, %indvars.iv183.i
  %and.i = and i64 %shl.i, %word_.0.i
  %cmp5.i = icmp eq i64 %and.i, 0
  br i1 %cmp5.i, label %for.inc26.i, label %if.then6.i

if.then6.i:                                       ; preds = %for.body4.i
  %neg.i = xor i64 %shl.i, -1
  %and7.i = and i64 %word_.0.i, %neg.i
  %18 = trunc i64 %indvars.iv183.i to i32
  %add.i = add i32 %18, %mul.i76
  %idxprom8.i = sext i32 %add.i to i64
  %arrayidx9.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %idxprom8.i
  %19 = load %struct.basic_block_def** %arrayidx9.i, align 8, !tbaa !38
  %succ.i = getelementptr inbounds %struct.basic_block_def* %19, i64 0, i32 5
  %e.0172.i = load %struct.edge_def** %succ.i, align 8
  %tobool173.i = icmp eq %struct.edge_def* %e.0172.i, null
  br i1 %tobool173.i, label %for.end.i86, label %for.body11.i

for.body11.i:                                     ; preds = %if.then6.i, %for.inc.i85
  %e.0175.i = phi %struct.edge_def* [ %e.0.i83, %for.inc.i85 ], [ %e.0172.i, %if.then6.i ]
  %num_exits.2174.i = phi i32 [ %num_exits.3.i, %for.inc.i85 ], [ %num_exits.1.i, %if.then6.i ]
  %dest12.i = getelementptr inbounds %struct.edge_def* %e.0175.i, i64 0, i32 3
  %20 = load %struct.basic_block_def** %dest12.i, align 8, !tbaa !39
  %cmp13.i77 = icmp eq %struct.basic_block_def* %20, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp13.i77, label %if.then21.i, label %lor.lhs.false.i81

lor.lhs.false.i81:                                ; preds = %for.body11.i
  %index.i78 = getelementptr inbounds %struct.basic_block_def* %20, i64 0, i32 11
  %21 = load i32* %index.i78, align 4, !tbaa !17
  %div.i79 = lshr i32 %21, 6
  %idxprom14.i = zext i32 %div.i79 to i64
  %arrayidx16.i = getelementptr inbounds %struct.simple_bitmap_def* %13, i64 0, i32 3, i64 %idxprom14.i
  %22 = load i64* %arrayidx16.i, align 8, !tbaa !45
  %rem.i80 = and i32 %21, 63
  %sh_prom18.i = zext i32 %rem.i80 to i64
  %23 = shl i64 1, %sh_prom18.i
  %and19162.i = and i64 %23, %22
  %tobool20.i = icmp eq i64 %and19162.i, 0
  br i1 %tobool20.i, label %if.then21.i, label %for.inc.i85

if.then21.i:                                      ; preds = %lor.lhs.false.i81, %for.body11.i
  %inc.i82 = add nsw i32 %num_exits.2174.i, 1
  br label %for.inc.i85

for.inc.i85:                                      ; preds = %if.then21.i, %lor.lhs.false.i81
  %num_exits.3.i = phi i32 [ %inc.i82, %if.then21.i ], [ %num_exits.2174.i, %lor.lhs.false.i81 ]
  %succ_next.i = getelementptr inbounds %struct.edge_def* %e.0175.i, i64 0, i32 1
  %e.0.i83 = load %struct.edge_def** %succ_next.i, align 8
  %tobool.i84 = icmp eq %struct.edge_def* %e.0.i83, null
  br i1 %tobool.i84, label %for.end.i86, label %for.body11.i

for.end.i86:                                      ; preds = %for.inc.i85, %if.then6.i
  %num_exits.2.lcssa.i = phi i32 [ %num_exits.1.i, %if.then6.i ], [ %num_exits.3.i, %for.inc.i85 ]
  %cmp22.i = icmp eq i64 %and7.i, 0
  br i1 %cmp22.i, label %for.inc30.i, label %for.inc26.i

for.inc26.i:                                      ; preds = %for.end.i86, %for.body4.i
  %word_.1.i = phi i64 [ %and7.i, %for.end.i86 ], [ %word_.0.i, %for.body4.i ]
  %num_exits.4.i = phi i32 [ %num_exits.2.lcssa.i, %for.end.i86 ], [ %num_exits.1.i, %for.body4.i ]
  %indvars.iv.next184.i = add nuw nsw i64 %indvars.iv183.i, 1
  %24 = trunc i64 %indvars.iv.next184.i to i32
  %cmp3.old.i = icmp ult i32 %24, 64
  br i1 %cmp3.old.i, label %for.body4.i, label %for.inc30.i

for.inc30.i:                                      ; preds = %for.inc26.i, %for.end.i86, %for.body.i75
  %num_exits.5.i = phi i32 [ %num_exits.0179.i, %for.body.i75 ], [ %num_exits.4.i, %for.inc26.i ], [ %num_exits.2.lcssa.i, %for.end.i86 ]
  %indvars.iv.next186.i = add nuw nsw i64 %indvars.iv185.i, 1
  %lftr.wideiv128 = trunc i64 %indvars.iv.next186.i to i32
  %exitcond129 = icmp eq i32 %lftr.wideiv128, %14
  br i1 %exitcond129, label %do.end.i, label %for.body.i75

do.end.i:                                         ; preds = %for.inc30.i
  %tobool33.i = icmp eq i32 %num_exits.5.i, 0
  br i1 %tobool33.i, label %flow_loop_exit_edges_find.exit, label %if.end35.i

if.end35.i:                                       ; preds = %do.end.i
  %conv.i87 = sext i32 %num_exits.5.i to i64
  %mul36.i = shl nsw i64 %conv.i87, 3
  %call.i88 = tail call noalias i8* @xmalloc(i64 %mul36.i) #4
  %25 = bitcast i8* %call.i88 to %struct.edge_def**
  store %struct.edge_def** %25, %struct.edge_def*** %exit_edges10, align 8, !tbaa !38
  %26 = load i32* %size.i, align 4, !tbaa !46
  %cmp46168.i = icmp eq i32 %26, 0
  br i1 %cmp46168.i, label %flow_loop_exit_edges_find.exit, label %for.body48.i

for.body48.i:                                     ; preds = %if.end35.i, %for.inc111.i
  %indvars.iv181.i = phi i64 [ %indvars.iv.next182.i, %for.inc111.i ], [ 0, %if.end35.i ]
  %num_exits.6170.i = phi i32 [ %num_exits.11.i, %for.inc111.i ], [ 0, %if.end35.i ]
  %arrayidx51.i = getelementptr inbounds %struct.simple_bitmap_def* %13, i64 0, i32 3, i64 %indvars.iv181.i
  %27 = load i64* %arrayidx51.i, align 8, !tbaa !45
  %cmp52.i = icmp eq i64 %27, 0
  br i1 %cmp52.i, label %for.inc111.i, label %for.body58.preheader.i

for.body58.preheader.i:                           ; preds = %for.body48.i
  %28 = trunc i64 %indvars.iv181.i to i32
  %mul68.i = shl i32 %28, 6
  br label %for.body58.i

for.body58.i:                                     ; preds = %for.inc107.i, %for.body58.preheader.i
  %indvars.iv.i = phi i64 [ 0, %for.body58.preheader.i ], [ %indvars.iv.next.i, %for.inc107.i ]
  %num_exits.7.i = phi i32 [ %num_exits.6170.i, %for.body58.preheader.i ], [ %num_exits.10.i, %for.inc107.i ]
  %word_49.0.i = phi i64 [ %27, %for.body58.preheader.i ], [ %word_49.1.i, %for.inc107.i ]
  %shl61.i = shl i64 1, %indvars.iv.i
  %and62.i = and i64 %word_49.0.i, %shl61.i
  %cmp63.i = icmp eq i64 %and62.i, 0
  br i1 %cmp63.i, label %for.inc107.i, label %if.then65.i

if.then65.i:                                      ; preds = %for.body58.i
  %neg66.i = xor i64 %shl61.i, -1
  %and67.i = and i64 %word_49.0.i, %neg66.i
  %29 = trunc i64 %indvars.iv.i to i32
  %add69.i = add i32 %29, %mul68.i
  %idxprom70.i = sext i32 %add69.i to i64
  %30 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !38
  %data71.i = getelementptr inbounds %struct.varray_head_tag* %30, i64 0, i32 4
  %bb72.i = bitcast %union.varray_data_tag* %data71.i to [1 x %struct.basic_block_def*]*
  %arrayidx73.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb72.i, i64 0, i64 %idxprom70.i
  %31 = load %struct.basic_block_def** %arrayidx73.i, align 8, !tbaa !38
  %succ74.i = getelementptr inbounds %struct.basic_block_def* %31, i64 0, i32 5
  %e.1163.i = load %struct.edge_def** %succ74.i, align 8
  %tobool76164.i = icmp eq %struct.edge_def* %e.1163.i, null
  br i1 %tobool76164.i, label %for.end101.i, label %for.body77.i

for.body77.i:                                     ; preds = %if.then65.i, %for.inc99.i
  %e.1166.i = phi %struct.edge_def* [ %e.1.i89, %for.inc99.i ], [ %e.1163.i, %if.then65.i ]
  %num_exits.8165.i = phi i32 [ %num_exits.9.i, %for.inc99.i ], [ %num_exits.7.i, %if.then65.i ]
  %dest79.i = getelementptr inbounds %struct.edge_def* %e.1166.i, i64 0, i32 3
  %32 = load %struct.basic_block_def** %dest79.i, align 8, !tbaa !39
  %cmp80.i = icmp eq %struct.basic_block_def* %32, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp80.i, label %if.then94.i, label %lor.lhs.false82.i

lor.lhs.false82.i:                                ; preds = %for.body77.i
  %index83.i = getelementptr inbounds %struct.basic_block_def* %32, i64 0, i32 11
  %33 = load i32* %index83.i, align 4, !tbaa !17
  %div84.i = lshr i32 %33, 6
  %idxprom85.i = zext i32 %div84.i to i64
  %arrayidx87.i = getelementptr inbounds %struct.simple_bitmap_def* %13, i64 0, i32 3, i64 %idxprom85.i
  %34 = load i64* %arrayidx87.i, align 8, !tbaa !45
  %rem89.i = and i32 %33, 63
  %sh_prom90.i = zext i32 %rem89.i to i64
  %35 = shl i64 1, %sh_prom90.i
  %and92161.i = and i64 %35, %34
  %tobool93.i = icmp eq i64 %and92161.i, 0
  br i1 %tobool93.i, label %if.then94.i, label %for.inc99.i

if.then94.i:                                      ; preds = %lor.lhs.false82.i, %for.body77.i
  %inc95.i = add nsw i32 %num_exits.8165.i, 1
  %idxprom96.i = sext i32 %num_exits.8165.i to i64
  %36 = load %struct.edge_def*** %exit_edges10, align 8, !tbaa !38
  %arrayidx97.i = getelementptr inbounds %struct.edge_def** %36, i64 %idxprom96.i
  store %struct.edge_def* %e.1166.i, %struct.edge_def** %arrayidx97.i, align 8, !tbaa !38
  br label %for.inc99.i

for.inc99.i:                                      ; preds = %if.then94.i, %lor.lhs.false82.i
  %num_exits.9.i = phi i32 [ %inc95.i, %if.then94.i ], [ %num_exits.8165.i, %lor.lhs.false82.i ]
  %succ_next100.i = getelementptr inbounds %struct.edge_def* %e.1166.i, i64 0, i32 1
  %e.1.i89 = load %struct.edge_def** %succ_next100.i, align 8
  %tobool76.i = icmp eq %struct.edge_def* %e.1.i89, null
  br i1 %tobool76.i, label %for.end101.i, label %for.body77.i

for.end101.i:                                     ; preds = %for.inc99.i, %if.then65.i
  %num_exits.8.lcssa.i = phi i32 [ %num_exits.7.i, %if.then65.i ], [ %num_exits.9.i, %for.inc99.i ]
  %cmp102.i = icmp eq i64 %and67.i, 0
  br i1 %cmp102.i, label %for.inc111.i, label %for.inc107.i

for.inc107.i:                                     ; preds = %for.end101.i, %for.body58.i
  %num_exits.10.i = phi i32 [ %num_exits.8.lcssa.i, %for.end101.i ], [ %num_exits.7.i, %for.body58.i ]
  %word_49.1.i = phi i64 [ %and67.i, %for.end101.i ], [ %word_49.0.i, %for.body58.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %37 = trunc i64 %indvars.iv.next.i to i32
  %cmp56.old.i = icmp ult i32 %37, 64
  br i1 %cmp56.old.i, label %for.body58.i, label %for.inc111.i

for.inc111.i:                                     ; preds = %for.inc107.i, %for.end101.i, %for.body48.i
  %num_exits.11.i = phi i32 [ %num_exits.6170.i, %for.body48.i ], [ %num_exits.10.i, %for.inc107.i ], [ %num_exits.8.lcssa.i, %for.end101.i ]
  %indvars.iv.next182.i = add nuw nsw i64 %indvars.iv181.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next182.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %26
  br i1 %exitcond, label %flow_loop_exit_edges_find.exit, label %for.body48.i

flow_loop_exit_edges_find.exit:                   ; preds = %for.inc111.i, %if.then8, %do.end.i, %if.end35.i
  %retval.0.i = phi i32 [ 0, %do.end.i ], [ 0, %if.end35.i ], [ 0, %if.then8 ], [ %num_exits.11.i, %for.inc111.i ]
  %num_exits = getelementptr inbounds %struct.loop* %loop, i64 0, i32 13
  store i32 %retval.0.i, i32* %num_exits, align 4, !tbaa !30
  br label %if.end12

if.end12:                                         ; preds = %if.end5, %flow_loop_exit_edges_find.exit
  %and13 = and i32 %flags.addr.0, 16
  %tobool14 = icmp eq i32 %and13, 0
  br i1 %tobool14, label %if.end37, label %if.then15

if.then15:                                        ; preds = %if.end12
  %38 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %call16 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %38) #4
  %exits_doms = getelementptr inbounds %struct.loop* %loop, i64 0, i32 14
  store %struct.simple_bitmap_def* %call16, %struct.simple_bitmap_def** %exits_doms, align 8, !tbaa !31
  %nodes18 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 8
  %39 = load %struct.simple_bitmap_def** %nodes18, align 8, !tbaa !28
  tail call void @sbitmap_copy(%struct.simple_bitmap_def* %call16, %struct.simple_bitmap_def* %39) #4
  %num_exits19 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 13
  %40 = load i32* %num_exits19, align 4, !tbaa !30
  %cmp126 = icmp sgt i32 %40, 0
  br i1 %cmp126, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then15
  %exit_edges22 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 12
  %dom = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %41 = load %struct.simple_bitmap_def** %exits_doms, align 8, !tbaa !31
  %42 = load %struct.edge_def*** %exit_edges22, align 8, !tbaa !29
  %arrayidx = getelementptr inbounds %struct.edge_def** %42, i64 %indvars.iv
  %43 = load %struct.edge_def** %arrayidx, align 8, !tbaa !38
  %src = getelementptr inbounds %struct.edge_def* %43, i64 0, i32 2
  %44 = load %struct.basic_block_def** %src, align 8, !tbaa !44
  %index = getelementptr inbounds %struct.basic_block_def* %44, i64 0, i32 11
  %45 = load i32* %index, align 4, !tbaa !17
  %idxprom23 = sext i32 %45 to i64
  %46 = load %struct.simple_bitmap_def*** %dom, align 8, !tbaa !37
  %arrayidx24 = getelementptr inbounds %struct.simple_bitmap_def** %46, i64 %idxprom23
  %47 = load %struct.simple_bitmap_def** %arrayidx24, align 8, !tbaa !38
  %call25 = tail call i32 @sbitmap_a_and_b(%struct.simple_bitmap_def* %41, %struct.simple_bitmap_def* %41, %struct.simple_bitmap_def* %47) #4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %48 = load i32* %num_exits19, align 4, !tbaa !30
  %49 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %49, %48
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.then15
  %header26 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 1
  %50 = load %struct.basic_block_def** %header26, align 8, !tbaa !1
  %index27 = getelementptr inbounds %struct.basic_block_def* %50, i64 0, i32 11
  %51 = load i32* %index27, align 4, !tbaa !17
  %div = lshr i32 %51, 6
  %idxprom28 = zext i32 %div to i64
  %52 = load %struct.simple_bitmap_def** %exits_doms, align 8, !tbaa !31
  %arrayidx30 = getelementptr inbounds %struct.simple_bitmap_def* %52, i64 0, i32 3, i64 %idxprom28
  %53 = load i64* %arrayidx30, align 8, !tbaa !45
  %rem = and i32 %51, 63
  %sh_prom = zext i32 %rem to i64
  %54 = shl i64 1, %sh_prom
  %and3373 = and i64 %54, %53
  %tobool34 = icmp eq i64 %and3373, 0
  br i1 %tobool34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i32 611, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.flow_loop_scan, i64 0, i64 0)) #5
  unreachable

if.end37:                                         ; preds = %for.end, %if.end12
  %and38 = and i32 %flags.addr.0, 2
  %tobool39 = icmp eq i32 %and38, 0
  br i1 %tobool39, label %if.end45, label %if.then40

if.then40:                                        ; preds = %if.end37
  %header41 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 1
  %55 = load %struct.basic_block_def** %header41, align 8, !tbaa !1
  %dom43 = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 0
  %56 = load %struct.simple_bitmap_def*** %dom43, align 8, !tbaa !37
  %pred.i90 = getelementptr inbounds %struct.basic_block_def* %55, i64 0, i32 4
  %e.017.i = load %struct.edge_def** %pred.i90, align 8
  %tobool18.i = icmp eq %struct.edge_def* %e.017.i, null
  br i1 %tobool18.i, label %flow_loop_pre_header_find.exit, label %for.body.lr.ph.i92

for.body.lr.ph.i92:                               ; preds = %if.then40
  %index.i91 = getelementptr inbounds %struct.basic_block_def* %55, i64 0, i32 11
  br label %for.body.i94

for.body.i94:                                     ; preds = %for.inc.i104, %for.body.lr.ph.i92
  %e.020.i = phi %struct.edge_def* [ %e.017.i, %for.body.lr.ph.i92 ], [ %e.0.i102, %for.inc.i104 ]
  %pre_header.019.i = phi %struct.basic_block_def* [ null, %for.body.lr.ph.i92 ], [ %pre_header.1.i, %for.inc.i104 ]
  %src.i = getelementptr inbounds %struct.edge_def* %e.020.i, i64 0, i32 2
  %57 = load %struct.basic_block_def** %src.i, align 8, !tbaa !44
  %cmp.i93 = icmp eq %struct.basic_block_def* %57, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp.i93, label %for.inc.i104, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body.i94
  %58 = load i32* %index.i91, align 4, !tbaa !17
  %div.i95 = lshr i32 %58, 6
  %idxprom.i96 = zext i32 %div.i95 to i64
  %index1.i = getelementptr inbounds %struct.basic_block_def* %57, i64 0, i32 11
  %59 = load i32* %index1.i, align 4, !tbaa !17
  %idxprom2.i = sext i32 %59 to i64
  %arrayidx.i97 = getelementptr inbounds %struct.simple_bitmap_def** %56, i64 %idxprom2.i
  %60 = load %struct.simple_bitmap_def** %arrayidx.i97, align 8, !tbaa !38
  %arrayidx3.i = getelementptr inbounds %struct.simple_bitmap_def* %60, i64 0, i32 3, i64 %idxprom.i96
  %61 = load i64* %arrayidx3.i, align 8, !tbaa !45
  %rem.i98 = and i32 %58, 63
  %sh_prom.i99 = zext i32 %rem.i98 to i64
  %62 = shl i64 1, %sh_prom.i99
  %and16.i = and i64 %61, %62
  %tobool5.i = icmp eq i64 %and16.i, 0
  br i1 %tobool5.i, label %if.then.i100, label %for.inc.i104

if.then.i100:                                     ; preds = %land.lhs.true.i
  %cmp6.i = icmp eq %struct.basic_block_def* %pre_header.019.i, null
  br i1 %cmp6.i, label %for.inc.i104, label %flow_loop_pre_header_find.exit

for.inc.i104:                                     ; preds = %if.then.i100, %land.lhs.true.i, %for.body.i94
  %pre_header.1.i = phi %struct.basic_block_def* [ %pre_header.019.i, %land.lhs.true.i ], [ %pre_header.019.i, %for.body.i94 ], [ %57, %if.then.i100 ]
  %pred_next.i101 = getelementptr inbounds %struct.edge_def* %e.020.i, i64 0, i32 0
  %e.0.i102 = load %struct.edge_def** %pred_next.i101, align 8
  %tobool.i103 = icmp eq %struct.edge_def* %e.0.i102, null
  br i1 %tobool.i103, label %flow_loop_pre_header_find.exit, label %for.body.i94

flow_loop_pre_header_find.exit:                   ; preds = %if.then.i100, %for.inc.i104, %if.then40
  %pre_header.2.i = phi %struct.basic_block_def* [ null, %if.then40 ], [ null, %if.then.i100 ], [ %pre_header.1.i, %for.inc.i104 ]
  %pre_header = getelementptr inbounds %struct.loop* %loop, i64 0, i32 3
  store %struct.basic_block_def* %pre_header.2.i, %struct.basic_block_def** %pre_header, align 8, !tbaa !19
  %num_pre_header_edges.i = getelementptr inbounds %struct.loop* %loop, i64 0, i32 5
  store i32 0, i32* %num_pre_header_edges.i, align 4, !tbaa !24
  %num_entries.i = getelementptr inbounds %struct.loop* %loop, i64 0, i32 11
  %63 = load i32* %num_entries.i, align 4, !tbaa !26
  %cmp.i106 = icmp eq i32 %63, 1
  br i1 %cmp.i106, label %if.end.i, label %if.end45

if.end.i:                                         ; preds = %flow_loop_pre_header_find.exit
  %entry_edges.i = getelementptr inbounds %struct.loop* %loop, i64 0, i32 10
  %64 = load %struct.edge_def*** %entry_edges.i, align 8, !tbaa !25
  %65 = load %struct.edge_def** %64, align 8, !tbaa !38
  %src.i107 = getelementptr inbounds %struct.edge_def* %65, i64 0, i32 2
  %66 = load %struct.basic_block_def** %src.i107, align 8, !tbaa !44
  %cmp1.i108 = icmp eq %struct.basic_block_def* %66, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp1.i108, label %if.end45, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end.i
  %pred39.i = getelementptr inbounds %struct.basic_block_def* %66, i64 0, i32 4
  %67 = load %struct.edge_def** %pred39.i, align 8, !tbaa !48
  %src440.i = getelementptr inbounds %struct.edge_def* %67, i64 0, i32 2
  %68 = load %struct.basic_block_def** %src440.i, align 8, !tbaa !44
  %cmp541.i = icmp eq %struct.basic_block_def* %68, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp541.i, label %for.end.i116, label %land.rhs.i

for.cond.i:                                       ; preds = %land.rhs.i
  %pred.i109 = getelementptr inbounds %struct.basic_block_def* %71, i64 0, i32 4
  %69 = load %struct.edge_def** %pred.i109, align 8, !tbaa !48
  %src4.i = getelementptr inbounds %struct.edge_def* %69, i64 0, i32 2
  %70 = load %struct.basic_block_def** %src4.i, align 8, !tbaa !44
  %cmp5.i110 = icmp eq %struct.basic_block_def* %70, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp5.i110, label %for.end.i116, label %land.rhs.i

land.rhs.i:                                       ; preds = %for.cond.preheader.i, %for.cond.i
  %71 = phi %struct.basic_block_def* [ %70, %for.cond.i ], [ %68, %for.cond.preheader.i ]
  %72 = phi %struct.edge_def* [ %69, %for.cond.i ], [ %67, %for.cond.preheader.i ]
  %num.042.i = phi i32 [ %inc.i112, %for.cond.i ], [ 1, %for.cond.preheader.i ]
  %pred_next.i111 = getelementptr inbounds %struct.edge_def* %72, i64 0, i32 0
  %73 = load %struct.edge_def** %pred_next.i111, align 8, !tbaa !49
  %lnot.i = icmp eq %struct.edge_def* %73, null
  %inc.i112 = add nsw i32 %num.042.i, 1
  br i1 %lnot.i, label %for.cond.i, label %for.end.i116

for.end.i116:                                     ; preds = %land.rhs.i, %for.cond.i, %for.cond.preheader.i
  %num.0.lcssa.i = phi i32 [ 1, %for.cond.preheader.i ], [ %num.042.i, %land.rhs.i ], [ %inc.i112, %for.cond.i ]
  %conv.i113 = sext i32 %num.0.lcssa.i to i64
  %mul.i114 = shl nsw i64 %conv.i113, 3
  %call.i115 = tail call noalias i8* @xmalloc(i64 %mul.i114) #4
  %74 = bitcast i8* %call.i115 to %struct.edge_def**
  %pre_header_edges.i = getelementptr inbounds %struct.loop* %loop, i64 0, i32 4
  store %struct.edge_def** %74, %struct.edge_def*** %pre_header_edges.i, align 8, !tbaa !23
  store i32 %num.0.lcssa.i, i32* %num_pre_header_edges.i, align 4, !tbaa !24
  %tobool1336.i = icmp eq i32 %num.0.lcssa.i, 0
  br i1 %tobool1336.i, label %if.end45, label %for.body14.lr.ph.i

for.body14.lr.ph.i:                               ; preds = %for.end.i116
  %75 = load %struct.edge_def*** %entry_edges.i, align 8, !tbaa !25
  %e.038.i120 = load %struct.edge_def** %75, align 8
  %indvars.iv.next.i118121 = add nsw i64 %conv.i113, -1
  %arrayidx16.i119122 = getelementptr inbounds %struct.edge_def** %74, i64 %indvars.iv.next.i118121
  store %struct.edge_def* %e.038.i120, %struct.edge_def** %arrayidx16.i119122, align 8, !tbaa !38
  %76 = trunc i64 %indvars.iv.next.i118121 to i32
  %tobool13.i123 = icmp eq i32 %76, 0
  br i1 %tobool13.i123, label %if.end45, label %for.body14.for.body14_crit_edge.i

for.body14.for.body14_crit_edge.i:                ; preds = %for.body14.lr.ph.i, %for.body14.for.body14_crit_edge.i.for.body14.for.body14_crit_edge.i_crit_edge
  %.pre.i = phi %struct.edge_def** [ %.pre.i.pre, %for.body14.for.body14_crit_edge.i.for.body14.for.body14_crit_edge.i_crit_edge ], [ %74, %for.body14.lr.ph.i ]
  %indvars.iv.next.i118125 = phi i64 [ %indvars.iv.next.i118, %for.body14.for.body14_crit_edge.i.for.body14.for.body14_crit_edge.i_crit_edge ], [ %indvars.iv.next.i118121, %for.body14.lr.ph.i ]
  %e.038.i124 = phi %struct.edge_def* [ %e.038.i, %for.body14.for.body14_crit_edge.i.for.body14.for.body14_crit_edge.i_crit_edge ], [ %e.038.i120, %for.body14.lr.ph.i ]
  %src18.i = getelementptr inbounds %struct.edge_def* %e.038.i124, i64 0, i32 2
  %77 = load %struct.basic_block_def** %src18.i, align 8, !tbaa !44
  %pred19.i = getelementptr inbounds %struct.basic_block_def* %77, i64 0, i32 4
  %e.038.i = load %struct.edge_def** %pred19.i, align 8
  %indvars.iv.next.i118 = add nsw i64 %indvars.iv.next.i118125, -1
  %arrayidx16.i119 = getelementptr inbounds %struct.edge_def** %.pre.i, i64 %indvars.iv.next.i118
  store %struct.edge_def* %e.038.i, %struct.edge_def** %arrayidx16.i119, align 8, !tbaa !38
  %78 = trunc i64 %indvars.iv.next.i118 to i32
  %tobool13.i = icmp eq i32 %78, 0
  br i1 %tobool13.i, label %if.end45, label %for.body14.for.body14_crit_edge.i.for.body14.for.body14_crit_edge.i_crit_edge

for.body14.for.body14_crit_edge.i.for.body14.for.body14_crit_edge.i_crit_edge: ; preds = %for.body14.for.body14_crit_edge.i
  %.pre.i.pre = load %struct.edge_def*** %pre_header_edges.i, align 8, !tbaa !23
  br label %for.body14.for.body14_crit_edge.i

if.end45:                                         ; preds = %for.body14.for.body14_crit_edge.i, %for.body14.lr.ph.i, %for.end.i116, %if.end.i, %flow_loop_pre_header_find.exit, %if.end37
  ret i32 1
}

declare %struct.simple_bitmap_def* @sbitmap_alloc(i32) #2

declare void @sbitmap_copy(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #2

declare i32 @sbitmap_a_and_b(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #2

; Function Attrs: nounwind uwtable
define i32 @flow_loops_find(%struct.loops* nocapture %loops, i32 %flags) #0 {
entry:
  %and = and i32 %flags, 1
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i32 651, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.flow_loops_find, i64 0, i64 0)) #5
  unreachable

if.end:                                           ; preds = %entry
  %0 = bitcast %struct.loops* %loops to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 56, i32 8, i1 false)
  %1 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %return, label %if.end2

if.end2:                                          ; preds = %if.end
  %call = tail call %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32 %1, i32 %1) #4
  tail call void @calculate_dominance_info(i32* null, %struct.simple_bitmap_def** %call, i32 0) #4
  %2 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %cmp3305 = icmp sgt i32 %2, 0
  br i1 %cmp3305, label %for.body.lr.ph, label %if.end181.thread

for.body.lr.ph:                                   ; preds = %if.end2
  %.pre321 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !38
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc20
  %indvars.iv319 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next320, %for.inc20 ]
  %num_loops.0306 = phi i32 [ 0, %for.body.lr.ph ], [ %num_loops.1.lcssa, %for.inc20 ]
  %data = getelementptr inbounds %struct.varray_head_tag* %.pre321, i64 0, i32 4
  %bb = bitcast %union.varray_data_tag* %data to [1 x %struct.basic_block_def*]*
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb, i64 0, i64 %indvars.iv319
  %3 = load %struct.basic_block_def** %arrayidx, align 8, !tbaa !38
  %loop_depth = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 12
  store i32 0, i32* %loop_depth, align 4, !tbaa !50
  %pred = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 4
  %e.0300 = load %struct.edge_def** %pred, align 8
  %tobool5301 = icmp eq %struct.edge_def* %e.0300, null
  br i1 %tobool5301, label %for.inc20, label %for.body6.lr.ph

for.body6.lr.ph:                                  ; preds = %for.body
  %index = getelementptr inbounds %struct.basic_block_def* %3, i64 0, i32 11
  %4 = load i32* %index, align 4, !tbaa !17
  %5 = trunc i64 %indvars.iv319 to i32
  %cmp7 = icmp eq i32 %5, %4
  %div = lshr i64 %indvars.iv319, 6
  %idxprom11 = and i64 %div, 67108863
  %rem = and i64 %indvars.iv319, 63
  %6 = shl i64 1, %rem
  br i1 %cmp7, label %if.end9, label %if.then8.split

if.then8.split:                                   ; preds = %for.body6.lr.ph
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i32 688, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.flow_loops_find, i64 0, i64 0)) #5
  unreachable

if.end9:                                          ; preds = %for.body6.lr.ph, %for.inc
  %e.0303 = phi %struct.edge_def* [ %e.0, %for.inc ], [ %e.0300, %for.body6.lr.ph ]
  %num_loops.1302 = phi i32 [ %num_loops.2, %for.inc ], [ %num_loops.0306, %for.body6.lr.ph ]
  %src = getelementptr inbounds %struct.edge_def* %e.0303, i64 0, i32 2
  %7 = load %struct.basic_block_def** %src, align 8, !tbaa !44
  %cmp10 = icmp eq %struct.basic_block_def* %7, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp10, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end9
  %index12 = getelementptr inbounds %struct.basic_block_def* %7, i64 0, i32 11
  %8 = load i32* %index12, align 4, !tbaa !17
  %idxprom13 = sext i32 %8 to i64
  %arrayidx14 = getelementptr inbounds %struct.simple_bitmap_def** %call, i64 %idxprom13
  %9 = load %struct.simple_bitmap_def** %arrayidx14, align 8, !tbaa !38
  %arrayidx15 = getelementptr inbounds %struct.simple_bitmap_def* %9, i64 0, i32 3, i64 %idxprom11
  %10 = load i64* %arrayidx15, align 8, !tbaa !45
  %and16270 = and i64 %10, %6
  %not.tobool17 = icmp ne i64 %and16270, 0
  %inc = zext i1 %not.tobool17 to i32
  %num_loops.1.inc = add nsw i32 %inc, %num_loops.1302
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %if.end9
  %num_loops.2 = phi i32 [ %num_loops.1302, %if.end9 ], [ %num_loops.1.inc, %land.lhs.true ]
  %pred_next = getelementptr inbounds %struct.edge_def* %e.0303, i64 0, i32 0
  %e.0 = load %struct.edge_def** %pred_next, align 8
  %tobool5 = icmp eq %struct.edge_def* %e.0, null
  br i1 %tobool5, label %for.inc20, label %if.end9

for.inc20:                                        ; preds = %for.inc, %for.body
  %num_loops.1.lcssa = phi i32 [ %num_loops.0306, %for.body ], [ %num_loops.2, %for.inc ]
  %indvars.iv.next320 = add nuw nsw i64 %indvars.iv319, 1
  %11 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %12 = trunc i64 %indvars.iv.next320 to i32
  %cmp3 = icmp slt i32 %12, %11
  br i1 %cmp3, label %for.body, label %for.end22

for.end22:                                        ; preds = %for.inc20
  %tobool23 = icmp eq i32 %num_loops.1.lcssa, 0
  br i1 %tobool23, label %if.end181.thread, label %if.then24

if.then24:                                        ; preds = %for.end22
  %conv = sext i32 %11 to i64
  %mul = shl nsw i64 %conv, 2
  %call25 = tail call noalias i8* @xmalloc(i64 %mul) #4
  %13 = bitcast i8* %call25 to i32*
  %14 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %conv26 = sext i32 %14 to i64
  %mul27 = shl nsw i64 %conv26, 2
  %call28 = tail call noalias i8* @xmalloc(i64 %mul27) #4
  %15 = bitcast i8* %call28 to i32*
  %call29 = tail call i32 @flow_depth_first_order_compute(i32* %13, i32* %15) #4
  %dom30 = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 0
  store %struct.simple_bitmap_def** %call, %struct.simple_bitmap_def*** %dom30, align 8, !tbaa !37
  %dfs_order32 = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 1
  store i32* %13, i32** %dfs_order32, align 8, !tbaa !41
  %rc_order34 = getelementptr inbounds %struct.loops* %loops, i64 0, i32 4, i32 2
  store i32* %15, i32** %rc_order34, align 8, !tbaa !42
  %conv35 = sext i32 %num_loops.1.lcssa to i64
  %call36 = tail call noalias i8* @xcalloc(i64 %conv35, i64 248) #4
  %16 = bitcast i8* %call36 to %struct.loop*
  %array = getelementptr inbounds %struct.loops* %loops, i64 0, i32 2
  store %struct.loop* %16, %struct.loop** %array, align 8, !tbaa !36
  %17 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %call37 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %17) #4
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call37) #4
  %18 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %call38 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %18) #4
  %shared_headers = getelementptr inbounds %struct.loops* %loops, i64 0, i32 5
  store %struct.simple_bitmap_def* %call38, %struct.simple_bitmap_def** %shared_headers, align 8, !tbaa !43
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call38) #4
  %19 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %cmp41296 = icmp sgt i32 %19, 0
  br i1 %cmp41296, label %for.body43.lr.ph, label %if.end181

for.body43.lr.ph:                                 ; preds = %if.then24
  %20 = sext i32 %19 to i64
  br label %for.body43

for.cond40.loopexit:                              ; preds = %for.inc78, %for.body43
  %num_loops.4.lcssa = phi i32 [ %num_loops.3297, %for.body43 ], [ %num_loops.5, %for.inc78 ]
  %21 = trunc i64 %indvars.iv.next318 to i32
  %cmp41 = icmp sgt i32 %21, 0
  br i1 %cmp41, label %for.body43, label %for.cond82.preheader

for.cond82.preheader:                             ; preds = %for.cond40.loopexit
  %cmp83289 = icmp sgt i32 %num_loops.4.lcssa, 0
  br i1 %cmp83289, label %for.body85, label %if.end181

for.body43:                                       ; preds = %for.body43.lr.ph, %for.cond40.loopexit
  %indvars.iv317 = phi i64 [ %20, %for.body43.lr.ph ], [ %indvars.iv.next318, %for.cond40.loopexit ]
  %num_loops.3297 = phi i32 [ 0, %for.body43.lr.ph ], [ %num_loops.4.lcssa, %for.cond40.loopexit ]
  %indvars.iv.next318 = add nsw i64 %indvars.iv317, -1
  %arrayidx46 = getelementptr inbounds i32* %15, i64 %indvars.iv.next318
  %22 = load i32* %arrayidx46, align 4, !tbaa !14
  %idxprom47 = sext i32 %22 to i64
  %23 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !38
  %data48 = getelementptr inbounds %struct.varray_head_tag* %23, i64 0, i32 4
  %bb49 = bitcast %union.varray_data_tag* %data48 to [1 x %struct.basic_block_def*]*
  %arrayidx50 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb49, i64 0, i64 %idxprom47
  %24 = load %struct.basic_block_def** %arrayidx50, align 8, !tbaa !38
  %succ = getelementptr inbounds %struct.basic_block_def* %24, i64 0, i32 5
  %e.1291 = load %struct.edge_def** %succ, align 8
  %tobool52292 = icmp eq %struct.edge_def* %e.1291, null
  br i1 %tobool52292, label %for.cond40.loopexit, label %for.body53.lr.ph

for.body53.lr.ph:                                 ; preds = %for.body43
  %index61 = getelementptr inbounds %struct.basic_block_def* %24, i64 0, i32 11
  br label %for.body53

for.body53:                                       ; preds = %for.body53.lr.ph, %for.inc78
  %e.1294 = phi %struct.edge_def* [ %e.1291, %for.body53.lr.ph ], [ %e.1, %for.inc78 ]
  %num_loops.4293 = phi i32 [ %num_loops.3297, %for.body53.lr.ph ], [ %num_loops.5, %for.inc78 ]
  %dest = getelementptr inbounds %struct.edge_def* %e.1294, i64 0, i32 3
  %25 = load %struct.basic_block_def** %dest, align 8, !tbaa !39
  %cmp55 = icmp eq %struct.basic_block_def* %25, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 1)
  br i1 %cmp55, label %for.inc78, label %land.lhs.true57

land.lhs.true57:                                  ; preds = %for.body53
  %index58 = getelementptr inbounds %struct.basic_block_def* %25, i64 0, i32 11
  %26 = load i32* %index58, align 4, !tbaa !17
  %div59 = lshr i32 %26, 6
  %idxprom60 = zext i32 %div59 to i64
  %27 = load i32* %index61, align 4, !tbaa !17
  %idxprom62 = sext i32 %27 to i64
  %arrayidx63 = getelementptr inbounds %struct.simple_bitmap_def** %call, i64 %idxprom62
  %28 = load %struct.simple_bitmap_def** %arrayidx63, align 8, !tbaa !38
  %arrayidx65 = getelementptr inbounds %struct.simple_bitmap_def* %28, i64 0, i32 3, i64 %idxprom60
  %29 = load i64* %arrayidx65, align 8, !tbaa !45
  %rem67 = and i32 %26, 63
  %sh_prom68 = zext i32 %rem67 to i64
  %30 = shl i64 1, %sh_prom68
  %and70269 = and i64 %29, %30
  %tobool71 = icmp eq i64 %and70269, 0
  br i1 %tobool71, label %for.inc78, label %if.then72

if.then72:                                        ; preds = %land.lhs.true57
  %31 = load %struct.loop** %array, align 8, !tbaa !36
  %idx.ext = sext i32 %num_loops.4293 to i64
  %header74 = getelementptr inbounds %struct.loop* %31, i64 %idx.ext, i32 1
  store %struct.basic_block_def* %25, %struct.basic_block_def** %header74, align 8, !tbaa !1
  %latch75 = getelementptr inbounds %struct.loop* %31, i64 %idx.ext, i32 2
  store %struct.basic_block_def* %24, %struct.basic_block_def** %latch75, align 8, !tbaa !18
  %num = getelementptr inbounds %struct.loop* %31, i64 %idx.ext, i32 0
  store i32 %num_loops.4293, i32* %num, align 4, !tbaa !13
  %inc76 = add nsw i32 %num_loops.4293, 1
  br label %for.inc78

for.inc78:                                        ; preds = %land.lhs.true57, %for.body53, %if.then72
  %num_loops.5 = phi i32 [ %inc76, %if.then72 ], [ %num_loops.4293, %land.lhs.true57 ], [ %num_loops.4293, %for.body53 ]
  %succ_next = getelementptr inbounds %struct.edge_def* %e.1294, i64 0, i32 1
  %e.1 = load %struct.edge_def** %succ_next, align 8
  %tobool52 = icmp eq %struct.edge_def* %e.1, null
  br i1 %tobool52, label %for.cond40.loopexit, label %for.body53

for.cond149.preheader:                            ; preds = %flow_loop_nodes_find.exit
  br i1 %cmp83289, label %for.body152.lr.ph, label %if.end181

for.body152.lr.ph:                                ; preds = %for.cond149.preheader
  %32 = load %struct.loop** %array, align 8, !tbaa !36
  %33 = load %struct.simple_bitmap_def** %shared_headers, align 8, !tbaa !43
  br label %for.body152

for.body85:                                       ; preds = %for.cond82.preheader, %flow_loop_nodes_find.exit
  %indvars.iv313 = phi i64 [ %indvars.iv.next314, %flow_loop_nodes_find.exit ], [ 0, %for.cond82.preheader ]
  %34 = load %struct.loop** %array, align 8, !tbaa !36
  %arrayidx89 = getelementptr inbounds %struct.loop* %34, i64 %indvars.iv313
  %header90 = getelementptr inbounds %struct.loop* %34, i64 %indvars.iv313, i32 1
  %35 = load %struct.basic_block_def** %header90, align 8, !tbaa !1
  %index91 = getelementptr inbounds %struct.basic_block_def* %35, i64 0, i32 11
  %36 = load i32* %index91, align 4, !tbaa !17
  %div92 = lshr i32 %36, 6
  %idxprom93 = zext i32 %div92 to i64
  %arrayidx95 = getelementptr inbounds %struct.simple_bitmap_def* %call37, i64 0, i32 3, i64 %idxprom93
  %37 = load i64* %arrayidx95, align 8, !tbaa !45
  %rem98 = and i32 %36, 63
  %sh_prom99 = zext i32 %rem98 to i64
  %38 = shl i64 1, %sh_prom99
  %and101268 = and i64 %38, %37
  %tobool102 = icmp eq i64 %and101268, 0
  br i1 %tobool102, label %if.end115, label %if.then103

if.then103:                                       ; preds = %for.body85
  %39 = load %struct.simple_bitmap_def** %shared_headers, align 8, !tbaa !43
  %arrayidx114 = getelementptr inbounds %struct.simple_bitmap_def* %39, i64 0, i32 3, i64 %idxprom93
  %40 = load i64* %arrayidx114, align 8, !tbaa !45
  %or = or i64 %40, %38
  store i64 %or, i64* %arrayidx114, align 8, !tbaa !45
  %.pre = load i64* %arrayidx95, align 8, !tbaa !45
  br label %if.end115

if.end115:                                        ; preds = %for.body85, %if.then103
  %41 = phi i64 [ %37, %for.body85 ], [ %.pre, %if.then103 ]
  %or127 = or i64 %38, %41
  store i64 %or127, i64* %arrayidx95, align 8, !tbaa !45
  %42 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %call128 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %42) #4
  %nodes = getelementptr inbounds %struct.loop* %34, i64 %indvars.iv313, i32 8
  store %struct.simple_bitmap_def* %call128, %struct.simple_bitmap_def** %nodes, align 8, !tbaa !28
  %43 = load %struct.basic_block_def** %header90, align 8, !tbaa !1
  %latch130 = getelementptr inbounds %struct.loop* %34, i64 %indvars.iv313, i32 2
  %44 = load %struct.basic_block_def** %latch130, align 8, !tbaa !18
  %45 = load i32* @n_basic_blocks, align 4, !tbaa !14
  %conv.i = sext i32 %45 to i64
  %mul.i = shl nsw i64 %conv.i, 3
  %call.i = tail call noalias i8* @xmalloc(i64 %mul.i) #4
  %46 = bitcast i8* %call.i to %struct.basic_block_def**
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %call128) #4
  %index.i = getelementptr inbounds %struct.basic_block_def* %43, i64 0, i32 11
  %47 = load i32* %index.i, align 4, !tbaa !17
  %rem.i = and i32 %47, 63
  %sh_prom.i = zext i32 %rem.i to i64
  %shl.i = shl i64 1, %sh_prom.i
  %div.i = lshr i32 %47, 6
  %idxprom.i = zext i32 %div.i to i64
  %arrayidx.i = getelementptr inbounds %struct.simple_bitmap_def* %call128, i64 0, i32 3, i64 %idxprom.i
  %48 = load i64* %arrayidx.i, align 8, !tbaa !45
  %or.i = or i64 %shl.i, %48
  store i64 %or.i, i64* %arrayidx.i, align 8, !tbaa !45
  %loop_depth.i = getelementptr inbounds %struct.basic_block_def* %43, i64 0, i32 12
  %49 = load i32* %loop_depth.i, align 4, !tbaa !50
  %inc2.i = add nsw i32 %49, 1
  store i32 %inc2.i, i32* %loop_depth.i, align 4, !tbaa !50
  %index3.i = getelementptr inbounds %struct.basic_block_def* %44, i64 0, i32 11
  %50 = load i32* %index3.i, align 4, !tbaa !17
  %div4.i = lshr i32 %50, 6
  %idxprom5.i = zext i32 %div4.i to i64
  %arrayidx7.i = getelementptr inbounds %struct.simple_bitmap_def* %call128, i64 0, i32 3, i64 %idxprom5.i
  %51 = load i64* %arrayidx7.i, align 8, !tbaa !45
  %rem9.i = and i32 %50, 63
  %sh_prom10.i = zext i32 %rem9.i to i64
  %52 = shl i64 1, %sh_prom10.i
  %and90.i = and i64 %52, %51
  %tobool.i = icmp eq i64 %and90.i, 0
  br i1 %tobool.i, label %while.body.lr.ph.i, label %flow_loop_nodes_find.exit

while.body.lr.ph.i:                               ; preds = %if.end115
  %or20.i = or i64 %52, %51
  store i64 %or20.i, i64* %arrayidx7.i, align 8, !tbaa !45
  %loop_depth21.i = getelementptr inbounds %struct.basic_block_def* %44, i64 0, i32 12
  %53 = load i32* %loop_depth21.i, align 4, !tbaa !50
  %inc22.i = add nsw i32 %53, 1
  store i32 %inc22.i, i32* %loop_depth21.i, align 4, !tbaa !50
  store %struct.basic_block_def* %44, %struct.basic_block_def** %46, align 8, !tbaa !38
  br label %while.body.i

while.cond.loopexit.i:                            ; preds = %for.inc.i, %while.body.i
  %sp.1.lcssa.i = phi i32 [ %dec.i, %while.body.i ], [ %sp.2.i, %for.inc.i ]
  %num_nodes.1.lcssa.i = phi i32 [ %num_nodes.099.i, %while.body.i ], [ %num_nodes.2.i, %for.inc.i ]
  %tobool27.i = icmp eq i32 %sp.1.lcssa.i, 0
  br i1 %tobool27.i, label %flow_loop_nodes_find.exit, label %while.body.i

while.body.i:                                     ; preds = %while.cond.loopexit.i, %while.body.lr.ph.i
  %sp.0100.i = phi i32 [ 1, %while.body.lr.ph.i ], [ %sp.1.lcssa.i, %while.cond.loopexit.i ]
  %num_nodes.099.i = phi i32 [ 2, %while.body.lr.ph.i ], [ %num_nodes.1.lcssa.i, %while.cond.loopexit.i ]
  %dec.i = add nsw i32 %sp.0100.i, -1
  %idxprom28.i = sext i32 %dec.i to i64
  %arrayidx29.i = getelementptr inbounds %struct.basic_block_def** %46, i64 %idxprom28.i
  %54 = load %struct.basic_block_def** %arrayidx29.i, align 8, !tbaa !38
  %pred.i = getelementptr inbounds %struct.basic_block_def* %54, i64 0, i32 4
  %e.092.i = load %struct.edge_def** %pred.i, align 8
  %tobool3093.i = icmp eq %struct.edge_def* %e.092.i, null
  br i1 %tobool3093.i, label %while.cond.loopexit.i, label %for.body.i

for.body.i:                                       ; preds = %while.body.i, %for.inc.i
  %e.096.i = phi %struct.edge_def* [ %e.0.i, %for.inc.i ], [ %e.092.i, %while.body.i ]
  %sp.195.i = phi i32 [ %sp.2.i, %for.inc.i ], [ %dec.i, %while.body.i ]
  %num_nodes.194.i = phi i32 [ %num_nodes.2.i, %for.inc.i ], [ %num_nodes.099.i, %while.body.i ]
  %src.i = getelementptr inbounds %struct.edge_def* %e.096.i, i64 0, i32 2
  %55 = load %struct.basic_block_def** %src.i, align 8, !tbaa !44
  %cmp.i = icmp eq %struct.basic_block_def* %55, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp.i, label %for.inc.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %index32.i = getelementptr inbounds %struct.basic_block_def* %55, i64 0, i32 11
  %56 = load i32* %index32.i, align 4, !tbaa !17
  %div33.i = lshr i32 %56, 6
  %idxprom34.i = zext i32 %div33.i to i64
  %arrayidx36.i = getelementptr inbounds %struct.simple_bitmap_def* %call128, i64 0, i32 3, i64 %idxprom34.i
  %57 = load i64* %arrayidx36.i, align 8, !tbaa !45
  %rem38.i = and i32 %56, 63
  %sh_prom39.i = zext i32 %rem38.i to i64
  %58 = shl i64 1, %sh_prom39.i
  %and4191.i = and i64 %58, %57
  %tobool42.i = icmp eq i64 %and4191.i, 0
  br i1 %tobool42.i, label %if.then43.i, label %for.inc.i

if.then43.i:                                      ; preds = %land.lhs.true.i
  %or53.i = or i64 %58, %57
  store i64 %or53.i, i64* %arrayidx36.i, align 8, !tbaa !45
  %loop_depth54.i = getelementptr inbounds %struct.basic_block_def* %55, i64 0, i32 12
  %59 = load i32* %loop_depth54.i, align 4, !tbaa !50
  %inc55.i = add nsw i32 %59, 1
  store i32 %inc55.i, i32* %loop_depth54.i, align 4, !tbaa !50
  %inc56.i = add nsw i32 %num_nodes.194.i, 1
  %inc57.i = add nsw i32 %sp.195.i, 1
  %idxprom58.i = sext i32 %sp.195.i to i64
  %arrayidx59.i = getelementptr inbounds %struct.basic_block_def** %46, i64 %idxprom58.i
  store %struct.basic_block_def* %55, %struct.basic_block_def** %arrayidx59.i, align 8, !tbaa !38
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then43.i, %land.lhs.true.i, %for.body.i
  %num_nodes.2.i = phi i32 [ %num_nodes.194.i, %land.lhs.true.i ], [ %inc56.i, %if.then43.i ], [ %num_nodes.194.i, %for.body.i ]
  %sp.2.i = phi i32 [ %sp.195.i, %land.lhs.true.i ], [ %inc57.i, %if.then43.i ], [ %sp.195.i, %for.body.i ]
  %pred_next.i = getelementptr inbounds %struct.edge_def* %e.096.i, i64 0, i32 0
  %e.0.i = load %struct.edge_def** %pred_next.i, align 8
  %tobool30.i = icmp eq %struct.edge_def* %e.0.i, null
  br i1 %tobool30.i, label %while.cond.loopexit.i, label %for.body.i

flow_loop_nodes_find.exit:                        ; preds = %while.cond.loopexit.i, %if.end115
  %num_nodes.0.lcssa.i = phi i32 [ 1, %if.end115 ], [ %num_nodes.1.lcssa.i, %while.cond.loopexit.i ]
  tail call void @free(i8* %call.i) #4
  %num_nodes = getelementptr inbounds %struct.loop* %34, i64 %indvars.iv313, i32 9
  store i32 %num_nodes.0.lcssa.i, i32* %num_nodes, align 4, !tbaa !27
  %60 = load %struct.simple_bitmap_def** %nodes, align 8, !tbaa !28
  %call134 = tail call i32 @sbitmap_first_set_bit(%struct.simple_bitmap_def* %60) #4
  %idxprom135 = sext i32 %call134 to i64
  %61 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !38
  %data136 = getelementptr inbounds %struct.varray_head_tag* %61, i64 0, i32 4
  %bb137 = bitcast %union.varray_data_tag* %data136 to [1 x %struct.basic_block_def*]*
  %arrayidx138 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb137, i64 0, i64 %idxprom135
  %62 = load %struct.basic_block_def** %arrayidx138, align 8, !tbaa !38
  %first = getelementptr inbounds %struct.loop* %34, i64 %indvars.iv313, i32 6
  store %struct.basic_block_def* %62, %struct.basic_block_def** %first, align 8, !tbaa !7
  %63 = load %struct.simple_bitmap_def** %nodes, align 8, !tbaa !28
  %call140 = tail call i32 @sbitmap_last_set_bit(%struct.simple_bitmap_def* %63) #4
  %idxprom141 = sext i32 %call140 to i64
  %64 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !38
  %data142 = getelementptr inbounds %struct.varray_head_tag* %64, i64 0, i32 4
  %bb143 = bitcast %union.varray_data_tag* %data142 to [1 x %struct.basic_block_def*]*
  %arrayidx144 = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb143, i64 0, i64 %idxprom141
  %65 = load %struct.basic_block_def** %arrayidx144, align 8, !tbaa !38
  %last = getelementptr inbounds %struct.loop* %34, i64 %indvars.iv313, i32 7
  store %struct.basic_block_def* %65, %struct.basic_block_def** %last, align 8, !tbaa !11
  %call145 = tail call i32 @flow_loop_scan(%struct.loops* %loops, %struct.loop* %arrayidx89, i32 %flags)
  %indvars.iv.next314 = add nuw nsw i64 %indvars.iv313, 1
  %lftr.wideiv315 = trunc i64 %indvars.iv.next314 to i32
  %exitcond316 = icmp eq i32 %lftr.wideiv315, %num_loops.4.lcssa
  br i1 %exitcond316, label %for.cond149.preheader, label %for.body85

for.body152:                                      ; preds = %for.inc178, %for.body152.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body152.lr.ph ], [ %indvars.iv.next, %for.inc178 ]
  %header156 = getelementptr inbounds %struct.loop* %32, i64 %indvars.iv, i32 1
  %66 = load %struct.basic_block_def** %header156, align 8, !tbaa !1
  %index157 = getelementptr inbounds %struct.basic_block_def* %66, i64 0, i32 11
  %67 = load i32* %index157, align 4, !tbaa !17
  %div158 = lshr i32 %67, 6
  %idxprom159 = zext i32 %div158 to i64
  %arrayidx162 = getelementptr inbounds %struct.simple_bitmap_def* %33, i64 0, i32 3, i64 %idxprom159
  %68 = load i64* %arrayidx162, align 8, !tbaa !45
  %rem168 = and i32 %67, 63
  %sh_prom169 = zext i32 %rem168 to i64
  %69 = shl i64 1, %sh_prom169
  %and171267 = and i64 %69, %68
  %tobool172 = icmp eq i64 %and171267, 0
  br i1 %tobool172, label %for.inc178, label %if.then173

if.then173:                                       ; preds = %for.body152
  %shared = getelementptr inbounds %struct.loop* %32, i64 %indvars.iv, i32 20
  store i32 1, i32* %shared, align 4, !tbaa !15
  br label %for.inc178

for.inc178:                                       ; preds = %for.body152, %if.then173
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %num_loops.4.lcssa
  br i1 %exitcond, label %if.end181, label %for.body152

if.end181.thread:                                 ; preds = %if.end2, %for.end22
  %70 = bitcast %struct.simple_bitmap_def** %call to i8*
  tail call void @free(i8* %70)
  %num182278 = getelementptr inbounds %struct.loops* %loops, i64 0, i32 0
  store i32 0, i32* %num182278, align 4, !tbaa !32
  br label %flow_loops_tree_build.exit

if.end181:                                        ; preds = %for.inc178, %if.then24, %for.cond82.preheader, %for.cond149.preheader
  %num_loops.3.lcssa324326 = phi i32 [ %num_loops.4.lcssa, %for.cond149.preheader ], [ %num_loops.4.lcssa, %for.cond82.preheader ], [ 0, %if.then24 ], [ %num_loops.4.lcssa, %for.inc178 ]
  %71 = bitcast %struct.simple_bitmap_def* %call37 to i8*
  tail call void @free(i8* %71)
  %num182 = getelementptr inbounds %struct.loops* %loops, i64 0, i32 0
  store i32 %num_loops.3.lcssa324326, i32* %num182, align 4, !tbaa !32
  %tobool.i271 = icmp eq i32 %num_loops.3.lcssa324326, 0
  br i1 %tobool.i271, label %flow_loops_tree_build.exit, label %if.end.i

if.end.i:                                         ; preds = %if.end181
  %72 = load %struct.loop** %array, align 8, !tbaa !36
  %tree_root.i = getelementptr inbounds %struct.loops* %loops, i64 0, i32 3
  store %struct.loop* %72, %struct.loop** %tree_root.i, align 8, !tbaa !51
  %outer.i = getelementptr inbounds %struct.loop* %72, i64 0, i32 17
  %cmp22.i = icmp sgt i32 %num_loops.3.lcssa324326, 1
  %73 = bitcast %struct.loop** %outer.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %73, i8 0, i64 24, i32 8, i1 false) #4
  br i1 %cmp22.i, label %for.body.i272, label %flow_loops_tree_build.exit

for.body.i272:                                    ; preds = %if.end.i, %flow_loop_tree_node_add.exit.for.body_crit_edge.i
  %74 = phi %struct.loop* [ %.pre.i, %flow_loop_tree_node_add.exit.for.body_crit_edge.i ], [ %72, %if.end.i ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %flow_loop_tree_node_add.exit.for.body_crit_edge.i ], [ 1, %if.end.i ]
  %75 = add nsw i64 %indvars.iv.i, -1
  %arrayidx5.i = getelementptr inbounds %struct.loop* %74, i64 %75
  %arrayidx8.i = getelementptr inbounds %struct.loop* %74, i64 %indvars.iv.i
  %prevloop.idx.i.i = getelementptr %struct.loop* %74, i64 %75, i32 8
  %prevloop.idx.val.i.i = load %struct.simple_bitmap_def** %prevloop.idx.i.i, align 8, !tbaa !28
  %loop.idx28.i.i = getelementptr %struct.loop* %74, i64 %indvars.iv.i, i32 8
  %loop.idx28.val.i.i = load %struct.simple_bitmap_def** %loop.idx28.i.i, align 8, !tbaa !28
  %call.i.i.i = tail call i32 @sbitmap_a_subset_b_p(%struct.simple_bitmap_def* %loop.idx28.val.i.i, %struct.simple_bitmap_def* %prevloop.idx.val.i.i) #4
  %tobool.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.i.i, label %for.cond.preheader.i.i, label %if.then.i.i

for.cond.preheader.i.i:                           ; preds = %for.body.i272
  %outer132.i.i = getelementptr inbounds %struct.loop* %74, i64 %75, i32 17
  %76 = load %struct.loop** %outer132.i.i, align 8, !tbaa !22
  %tobool233.i.i = icmp eq %struct.loop* %76, null
  br i1 %tobool233.i.i, label %for.end.i.i, label %for.body.i.i

if.then.i.i:                                      ; preds = %for.body.i272
  %inner.i.i = getelementptr inbounds %struct.loop* %74, i64 %75, i32 18
  store %struct.loop* %arrayidx8.i, %struct.loop** %inner.i.i, align 8, !tbaa !52
  %outer.i.i = getelementptr inbounds %struct.loop* %74, i64 %indvars.iv.i, i32 17
  store %struct.loop* %arrayidx5.i, %struct.loop** %outer.i.i, align 8, !tbaa !22
  br label %flow_loop_tree_node_add.exit.i

for.body.i.i:                                     ; preds = %for.cond.preheader.i.i, %for.inc.i.i
  %77 = phi %struct.loop* [ %80, %for.inc.i.i ], [ %76, %for.cond.preheader.i.i ]
  %outer135.i.i = phi %struct.loop** [ %outer1.i.i, %for.inc.i.i ], [ %outer132.i.i, %for.cond.preheader.i.i ]
  %prevloop.addr.034.i.i = phi %struct.loop* [ %79, %for.inc.i.i ], [ %arrayidx5.i, %for.cond.preheader.i.i ]
  %.idx.i.i = getelementptr %struct.loop* %77, i64 0, i32 8
  %.idx.val.i.i = load %struct.simple_bitmap_def** %.idx.i.i, align 8, !tbaa !28
  %loop.idx.val.i.i = load %struct.simple_bitmap_def** %loop.idx28.i.i, align 8, !tbaa !28
  %call.i29.i.i = tail call i32 @sbitmap_a_subset_b_p(%struct.simple_bitmap_def* %loop.idx.val.i.i, %struct.simple_bitmap_def* %.idx.val.i.i) #4
  %tobool5.i.i = icmp eq i32 %call.i29.i.i, 0
  br i1 %tobool5.i.i, label %for.inc.i.i, label %if.then6.i.i

if.then6.i.i:                                     ; preds = %for.body.i.i
  %next.i.i = getelementptr inbounds %struct.loop* %prevloop.addr.034.i.i, i64 0, i32 19
  store %struct.loop* %arrayidx8.i, %struct.loop** %next.i.i, align 8, !tbaa !53
  %78 = load %struct.loop** %outer135.i.i, align 8, !tbaa !22
  %outer8.i.i = getelementptr inbounds %struct.loop* %74, i64 %indvars.iv.i, i32 17
  store %struct.loop* %78, %struct.loop** %outer8.i.i, align 8, !tbaa !22
  br label %flow_loop_tree_node_add.exit.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %79 = load %struct.loop** %outer135.i.i, align 8, !tbaa !22
  %outer1.i.i = getelementptr inbounds %struct.loop* %79, i64 0, i32 17
  %80 = load %struct.loop** %outer1.i.i, align 8, !tbaa !22
  %tobool2.i.i = icmp eq %struct.loop* %80, null
  br i1 %tobool2.i.i, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i, %for.cond.preheader.i.i
  %prevloop.addr.0.lcssa.i.i = phi %struct.loop* [ %arrayidx5.i, %for.cond.preheader.i.i ], [ %79, %for.inc.i.i ]
  %next11.i.i = getelementptr inbounds %struct.loop* %prevloop.addr.0.lcssa.i.i, i64 0, i32 19
  store %struct.loop* %arrayidx8.i, %struct.loop** %next11.i.i, align 8, !tbaa !53
  %outer12.i.i = getelementptr inbounds %struct.loop* %74, i64 %indvars.iv.i, i32 17
  store %struct.loop* null, %struct.loop** %outer12.i.i, align 8, !tbaa !22
  br label %flow_loop_tree_node_add.exit.i

flow_loop_tree_node_add.exit.i:                   ; preds = %for.end.i.i, %if.then6.i.i, %if.then.i.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv.i = trunc i64 %indvars.iv.next.i to i32
  %exitcond.i = icmp eq i32 %lftr.wideiv.i, %num_loops.3.lcssa324326
  br i1 %exitcond.i, label %flow_loops_tree_build.exit, label %flow_loop_tree_node_add.exit.for.body_crit_edge.i

flow_loop_tree_node_add.exit.for.body_crit_edge.i: ; preds = %flow_loop_tree_node_add.exit.i
  %.pre.i = load %struct.loop** %array, align 8, !tbaa !36
  br label %for.body.i272

flow_loops_tree_build.exit:                       ; preds = %flow_loop_tree_node_add.exit.i, %if.end181.thread, %if.end181, %if.end.i
  %num_loops.6280 = phi i32 [ 0, %if.end181.thread ], [ 0, %if.end181 ], [ %num_loops.3.lcssa324326, %if.end.i ], [ %num_loops.3.lcssa324326, %flow_loop_tree_node_add.exit.i ]
  %tree_root.i273 = getelementptr inbounds %struct.loops* %loops, i64 0, i32 3
  %loop.06.i = load %struct.loop** %tree_root.i273, align 8
  %tobool7.i = icmp eq %struct.loop* %loop.06.i, null
  br i1 %tobool7.i, label %flow_loops_level_compute.exit, label %for.body.i277

for.body.i277:                                    ; preds = %flow_loops_tree_build.exit, %for.body.i277
  %loop.09.i = phi %struct.loop* [ %loop.0.i, %for.body.i277 ], [ %loop.06.i, %flow_loops_tree_build.exit ]
  %levels.08.i = phi i32 [ %cond.i, %for.body.i277 ], [ 0, %flow_loops_tree_build.exit ]
  %call.i274 = tail call fastcc i32 @flow_loop_level_compute(%struct.loop* %loop.09.i, i32 1) #4
  %cmp.i275 = icmp sgt i32 %levels.08.i, %call.i274
  %cond.i = select i1 %cmp.i275, i32 %levels.08.i, i32 %call.i274
  %next.i = getelementptr inbounds %struct.loop* %loop.09.i, i64 0, i32 19
  %loop.0.i = load %struct.loop** %next.i, align 8
  %tobool.i276 = icmp eq %struct.loop* %loop.0.i, null
  br i1 %tobool.i276, label %flow_loops_level_compute.exit, label %for.body.i277

flow_loops_level_compute.exit:                    ; preds = %for.body.i277, %flow_loops_tree_build.exit
  %levels.0.lcssa.i = phi i32 [ 0, %flow_loops_tree_build.exit ], [ %cond.i, %for.body.i277 ]
  %levels = getelementptr inbounds %struct.loops* %loops, i64 0, i32 1
  store i32 %levels.0.lcssa.i, i32* %levels, align 4, !tbaa !35
  br label %return

return:                                           ; preds = %if.end, %flow_loops_level_compute.exit
  %retval.0 = phi i32 [ %num_loops.6280, %flow_loops_level_compute.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

declare %struct.simple_bitmap_def** @sbitmap_vector_alloc(i32, i32) #2

declare void @calculate_dominance_info(i32*, %struct.simple_bitmap_def**, i32) #2

declare noalias i8* @xmalloc(i64) #2

declare i32 @flow_depth_first_order_compute(i32*, i32*) #2

declare noalias i8* @xcalloc(i64, i64) #2

declare void @sbitmap_zero(%struct.simple_bitmap_def*) #2

declare i32 @sbitmap_first_set_bit(%struct.simple_bitmap_def*) #2

declare i32 @sbitmap_last_set_bit(%struct.simple_bitmap_def*) #2

; Function Attrs: nounwind uwtable
define i32 @flow_loops_update(%struct.loops* nocapture %loops, i32 %flags) #0 {
entry:
  %array = getelementptr inbounds %struct.loops* %loops, i64 0, i32 2
  %0 = load %struct.loop** %array, align 8, !tbaa !36
  %tobool = icmp eq %struct.loop* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @flow_loops_free(%struct.loops* %loops)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %call = tail call i32 @flow_loops_find(%struct.loops* %loops, i32 %flags)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @flow_loop_outside_edge_p(%struct.loop* nocapture readonly %loop, %struct.edge_def* nocapture readonly %e) #0 {
entry:
  %dest = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 3
  %0 = load %struct.basic_block_def** %dest, align 8, !tbaa !39
  %header = getelementptr inbounds %struct.loop* %loop, i64 0, i32 1
  %1 = load %struct.basic_block_def** %header, align 8, !tbaa !1
  %cmp = icmp eq %struct.basic_block_def* %0, %1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i32 832, i8* getelementptr inbounds ([25 x i8]* @__FUNCTION__.flow_loop_outside_edge_p, i64 0, i64 0)) #5
  unreachable

if.end:                                           ; preds = %entry
  %src = getelementptr inbounds %struct.edge_def* %e, i64 0, i32 2
  %2 = load %struct.basic_block_def** %src, align 8, !tbaa !44
  %cmp1 = icmp eq %struct.basic_block_def* %2, getelementptr inbounds ([2 x %struct.basic_block_def]* @entry_exit_blocks, i64 0, i64 0)
  br i1 %cmp1, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end
  %index = getelementptr inbounds %struct.basic_block_def* %2, i64 0, i32 11
  %3 = load i32* %index, align 4, !tbaa !17
  %div = lshr i32 %3, 6
  %idxprom = zext i32 %div to i64
  %nodes = getelementptr inbounds %struct.loop* %loop, i64 0, i32 8
  %4 = load %struct.simple_bitmap_def** %nodes, align 8, !tbaa !28
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def* %4, i64 0, i32 3, i64 %idxprom
  %5 = load i64* %arrayidx, align 8, !tbaa !45
  %rem = and i32 %3, 63
  %sh_prom = zext i32 %rem to i64
  %6 = shl i64 1, %sh_prom
  %and9 = and i64 %6, %5
  %lnot = icmp eq i64 %and9, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end
  %7 = phi i1 [ true, %if.end ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32
  ret i32 %lor.ext
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @flow_loop_level_compute(%struct.loop* %loop, i32 %depth) #0 {
entry:
  %tobool = icmp eq %struct.loop* %loop, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %inner1 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 18
  %inner.016 = load %struct.loop** %inner1, align 8
  %tobool217 = icmp eq %struct.loop* %inner.016, null
  br i1 %tobool217, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %add = add nsw i32 %depth, 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %inner.019 = phi %struct.loop* [ %inner.016, %for.body.lr.ph ], [ %inner.0, %for.body ]
  %level.018 = phi i32 [ 1, %for.body.lr.ph ], [ %cond, %for.body ]
  %call = tail call fastcc i32 @flow_loop_level_compute(%struct.loop* %inner.019, i32 %add)
  %add3 = add nsw i32 %call, 1
  %cmp = icmp sgt i32 %add3, %level.018
  %cond = select i1 %cmp, i32 %add3, i32 %level.018
  %next = getelementptr inbounds %struct.loop* %inner.019, i64 0, i32 19
  %inner.0 = load %struct.loop** %next, align 8
  %tobool2 = icmp eq %struct.loop* %inner.0, null
  br i1 %tobool2, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end
  %level.0.lcssa = phi i32 [ 1, %if.end ], [ %cond, %for.body ]
  %level4 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 16
  store i32 %level.0.lcssa, i32* %level4, align 4, !tbaa !21
  %depth5 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 15
  store i32 %depth, i32* %depth5, align 4, !tbaa !20
  br label %return

return:                                           ; preds = %entry, %for.end
  %retval.0 = phi i32 [ %level.0.lcssa, %for.end ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @sbitmap_a_subset_b_p(%struct.simple_bitmap_def*, %struct.simple_bitmap_def*) #2

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #4

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #4

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !6, i64 8}
!2 = metadata !{metadata !"loop", metadata !3, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !3, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !3, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !6, i64 96, metadata !3, i64 104, metadata !6, i64 112, metadata !3, i64 120, metadata !3, i64 124, metadata !6, i64 128, metadata !6, i64 136, metadata !6, i64 144, metadata !3, i64 152, metadata !3, i64 156, metadata !6, i64 160, metadata !6, i64 168, metadata !6, i64 176, metadata !6, i64 184, metadata !6, i64 192, metadata !6, i64 200, metadata !6, i64 208, metadata !6, i64 216, metadata !6, i64 224, metadata !6, i64 232, metadata !3, i64 240}
!3 = metadata !{metadata !"int", metadata !4, i64 0}
!4 = metadata !{metadata !"omnipotent char", metadata !5, i64 0}
!5 = metadata !{metadata !"Simple C/C++ TBAA"}
!6 = metadata !{metadata !"any pointer", metadata !4, i64 0}
!7 = metadata !{metadata !2, metadata !6, i64 48}
!8 = metadata !{metadata !9, metadata !6, i64 0}
!9 = metadata !{metadata !"basic_block_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !6, i64 48, metadata !6, i64 56, metadata !6, i64 64, metadata !6, i64 72, metadata !6, i64 80, metadata !3, i64 88, metadata !3, i64 92, metadata !10, i64 96, metadata !3, i64 104, metadata !3, i64 108}
!10 = metadata !{metadata !"long long", metadata !4, i64 0}
!11 = metadata !{metadata !2, metadata !6, i64 56}
!12 = metadata !{metadata !9, metadata !6, i64 8}
!13 = metadata !{metadata !2, metadata !3, i64 0}
!14 = metadata !{metadata !3, metadata !3, i64 0}
!15 = metadata !{metadata !2, metadata !3, i64 152}
!16 = metadata !{metadata !2, metadata !3, i64 156}
!17 = metadata !{metadata !9, metadata !3, i64 88}
!18 = metadata !{metadata !2, metadata !6, i64 16}
!19 = metadata !{metadata !2, metadata !6, i64 24}
!20 = metadata !{metadata !2, metadata !3, i64 120}
!21 = metadata !{metadata !2, metadata !3, i64 124}
!22 = metadata !{metadata !2, metadata !6, i64 128}
!23 = metadata !{metadata !2, metadata !6, i64 32}
!24 = metadata !{metadata !2, metadata !3, i64 40}
!25 = metadata !{metadata !2, metadata !6, i64 80}
!26 = metadata !{metadata !2, metadata !3, i64 88}
!27 = metadata !{metadata !2, metadata !3, i64 72}
!28 = metadata !{metadata !2, metadata !6, i64 64}
!29 = metadata !{metadata !2, metadata !6, i64 96}
!30 = metadata !{metadata !2, metadata !3, i64 104}
!31 = metadata !{metadata !2, metadata !6, i64 112}
!32 = metadata !{metadata !33, metadata !3, i64 0}
!33 = metadata !{metadata !"loops", metadata !3, i64 0, metadata !3, i64 4, metadata !6, i64 8, metadata !6, i64 16, metadata !34, i64 24, metadata !6, i64 48}
!34 = metadata !{metadata !"cfg", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16}
!35 = metadata !{metadata !33, metadata !3, i64 4}
!36 = metadata !{metadata !33, metadata !6, i64 8}
!37 = metadata !{metadata !33, metadata !6, i64 24}
!38 = metadata !{metadata !6, metadata !6, i64 0}
!39 = metadata !{metadata !40, metadata !6, i64 24}
!40 = metadata !{metadata !"edge_def", metadata !6, i64 0, metadata !6, i64 8, metadata !6, i64 16, metadata !6, i64 24, metadata !6, i64 32, metadata !6, i64 40, metadata !3, i64 48, metadata !3, i64 52, metadata !10, i64 56}
!41 = metadata !{metadata !33, metadata !6, i64 32}
!42 = metadata !{metadata !33, metadata !6, i64 40}
!43 = metadata !{metadata !33, metadata !6, i64 48}
!44 = metadata !{metadata !40, metadata !6, i64 16}
!45 = metadata !{metadata !10, metadata !10, i64 0}
!46 = metadata !{metadata !47, metadata !3, i64 4}
!47 = metadata !{metadata !"simple_bitmap_def", metadata !3, i64 0, metadata !3, i64 4, metadata !3, i64 8, metadata !4, i64 16}
!48 = metadata !{metadata !9, metadata !6, i64 32}
!49 = metadata !{metadata !40, metadata !6, i64 0}
!50 = metadata !{metadata !9, metadata !3, i64 92}
!51 = metadata !{metadata !33, metadata !6, i64 16}
!52 = metadata !{metadata !2, metadata !6, i64 136}
!53 = metadata !{metadata !2, metadata !6, i64 144}
