; ModuleID = 'expmed.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtx_def = type { i32, [1 x %union.rtunion_def] }
%union.rtunion_def = type { i64 }
%struct.optab = type { i32, [59 x %struct.anon.3] }
%struct.anon.3 = type { i32, %struct.rtx_def* }
%struct.insn_data = type { i8*, i8*, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%union.tree_node = type { %struct.tree_decl }
%struct.tree_decl = type { %struct.tree_common, i8*, i32, i32, %union.tree_node*, i48, %union.anon, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %union.anon.1, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_decl* }
%struct.tree_common = type { %union.tree_node*, %union.tree_node*, i32 }
%union.anon = type { i64 }
%union.anon.1 = type { %struct.function* }
%struct.function = type opaque
%struct.lang_decl = type opaque
%struct.mem_attrs = type { i64, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.anon.2, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i64, %struct.lang_type* }
%union.anon.2 = type { i8* }
%struct.lang_type = type opaque
%struct.realvaluetype = type { [3 x i64] }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.algorithm = type { i16, i16, [64 x i32], [64 x i8] }

@word_mode = external global i32
@const_int_rtx = external global [129 x %struct.rtx_def*]
@zero_cost = internal unnamed_addr global i32 0, align 4
@add_cost = internal unnamed_addr global i32 0, align 4
@shift_cost = internal unnamed_addr global [64 x i32] zeroinitializer, align 16
@shiftsub_cost = internal unnamed_addr global [64 x i32] zeroinitializer, align 16
@shiftadd_cost = internal unnamed_addr global [64 x i32] zeroinitializer, align 16
@negate_cost = internal unnamed_addr global i32 0, align 4
@sdiv_pow2_cheap = internal unnamed_addr global i32 0, align 4
@smod_pow2_cheap = internal unnamed_addr global i32 0, align 4
@class_narrowest_mode = external constant [9 x i32]
@div_cost = internal unnamed_addr global [59 x i32] zeroinitializer, align 16
@mul_cost = internal unnamed_addr global [59 x i32] zeroinitializer, align 16
@mode_wider_mode = external constant [59 x i8]
@mul_widen_cost = internal unnamed_addr global [59 x i32] zeroinitializer, align 16
@mode_bitsize = external constant [59 x i16]
@mul_highpart_cost = internal unnamed_addr global [59 x i32] zeroinitializer, align 16
@optab_table = external global [49 x %struct.optab*]
@insn_data = external constant [0 x %struct.insn_data]
@.str = private unnamed_addr constant [9 x i8] c"expmed.c\00", align 1
@__FUNCTION__.mode_for_extraction = private unnamed_addr constant [20 x i8] c"mode_for_extraction\00", align 1
@target_flags = external global i32
@flag_force_mem = external global i32
@generating_concat_p = external global i32
@mode_size = external constant [59 x i8]
@mode_class = external constant [59 x i32]
@__FUNCTION__.store_bit_field = private unnamed_addr constant [16 x i8] c"store_bit_field\00", align 1
@volatile_ok = external global i32
@byte_mode = external global i32
@__FUNCTION__.extract_bit_field = private unnamed_addr constant [18 x i8] c"extract_bit_field\00", align 1
@__FUNCTION__.expand_shift = private unnamed_addr constant [13 x i8] c"expand_shift\00", align 1
@flag_trapv = external global i32
@__FUNCTION__.expand_mult = private unnamed_addr constant [12 x i8] c"expand_mult\00", align 1
@__FUNCTION__.expand_mult_highpart = private unnamed_addr constant [21 x i8] c"expand_mult_highpart\00", align 1
@expand_divmod.last_div_const = internal unnamed_addr global i64 0, align 8
@__FUNCTION__.expand_divmod = private unnamed_addr constant [14 x i8] c"expand_divmod\00", align 1
@rtx_class = external constant [153 x i8]
@ix86_branch_cost = external global i32
@setcc_gen_code = external global [153 x i32]
@const_true_rtx = external global %struct.rtx_def*
@flag_expensive_optimizations = external global i32
@__FUNCTION__.do_cmp_and_jump = private unnamed_addr constant [16 x i8] c"do_cmp_and_jump\00", align 1
@__FUNCTION__.choose_multiplier = private unnamed_addr constant [18 x i8] c"choose_multiplier\00", align 1
@__FUNCTION__.store_fixed_bit_field = private unnamed_addr constant [22 x i8] c"store_fixed_bit_field\00", align 1

; Function Attrs: nounwind uwtable
define void @init_expmed() #0 {
entry:
  %dummy = alloca i32, align 4
  %0 = load i32* @word_mode, align 4, !tbaa !1
  %call = call %struct.rtx_def* @gen_rtx_REG(i32 %0, i32 10000) #3
  call void @start_sequence() #3
  %1 = load i32* @word_mode, align 4, !tbaa !1
  %call1 = call %struct.rtx_def* @gen_rtx_REG(i32 %1, i32 10000) #3
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call2 = call i32 @rtx_cost(%struct.rtx_def* %2, i32 0) #3
  store i32 %call2, i32* @zero_cost, align 4, !tbaa !6
  %3 = load i32* @word_mode, align 4, !tbaa !1
  %call3 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %3, %struct.rtx_def* %call1, %struct.rtx_def* %call1) #3
  %call4 = call i32 @rtx_cost(%struct.rtx_def* %call3, i32 47) #3
  store i32 %call4, i32* @add_cost, align 4, !tbaa !6
  %4 = load i32* @word_mode, align 4, !tbaa !1
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 87, i32 %4, %struct.rtx_def* %call1, %struct.rtx_def* %5) #3
  %call6 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call1, %struct.rtx_def* %call5) #3
  %call7 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call6) #3
  %6 = load i32* @word_mode, align 4, !tbaa !1
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call8 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %6, %struct.rtx_def* %call1, %struct.rtx_def* %7) #3
  %call9 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %6, %struct.rtx_def* %call8, %struct.rtx_def* %call1) #3
  %call10 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call1, %struct.rtx_def* %call9) #3
  %call11 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call10) #3
  %8 = load i32* @word_mode, align 4, !tbaa !1
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %8, %struct.rtx_def* %call1, %struct.rtx_def* %9) #3
  %call13 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %8, %struct.rtx_def* %call12, %struct.rtx_def* %call1) #3
  %call14 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 47, i32 0, %struct.rtx_def* %call1, %struct.rtx_def* %call13) #3
  %call15 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call14) #3
  call void @init_recog() #3
  store i32 0, i32* getelementptr inbounds ([64 x i32]* @shift_cost, i64 0, i64 0), align 16, !tbaa !6
  %10 = load i32* @add_cost, align 4, !tbaa !6
  store i32 %10, i32* getelementptr inbounds ([64 x i32]* @shiftsub_cost, i64 0, i64 0), align 16, !tbaa !6
  store i32 %10, i32* getelementptr inbounds ([64 x i32]* @shiftadd_cost, i64 0, i64 0), align 16, !tbaa !6
  %arrayidx21 = getelementptr inbounds %struct.rtx_def* %call7, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**
  %arrayidx45 = getelementptr inbounds %struct.rtx_def* %call11, i64 0, i32 1, i64 3
  %rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**
  %arrayidx77 = getelementptr inbounds %struct.rtx_def* %call15, i64 0, i32 1, i64 3
  %rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 1, %entry ], [ %indvars.iv.next, %for.inc ]
  %sext = shl i64 %indvars.iv, 32
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds [64 x i32]* @shiftsub_cost, i64 0, i64 %idxprom
  store i32 32000, i32* %arrayidx, align 4, !tbaa !6
  %arrayidx17 = getelementptr inbounds [64 x i32]* @shiftadd_cost, i64 0, i64 %idxprom
  store i32 32000, i32* %arrayidx17, align 4, !tbaa !6
  %arrayidx19 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom
  store i32 32000, i32* %arrayidx19, align 4, !tbaa !6
  %call20 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %idxprom) #3
  %11 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 1
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx24, align 8, !tbaa !4
  %13 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 1, i32 0
  %call20.c = ptrtoint %struct.rtx_def* %call20 to i64
  store i64 %call20.c, i64* %13, align 8, !tbaa !4
  %14 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %call31 = call i32 @recog(%struct.rtx_def* %14, %struct.rtx_def* %call7, i32* %dummy) #3
  %cmp32 = icmp sgt i32 %call31, -1
  br i1 %cmp32, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %15 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %arrayidx38 = getelementptr inbounds %struct.rtx_def* %15, i64 0, i32 1, i64 1
  %rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx39, align 8, !tbaa !4
  %call40 = call i32 @rtx_cost(%struct.rtx_def* %16, i32 47) #3
  store i32 %call40, i32* %arrayidx19, align 4, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %shl = shl i64 1, %indvars.iv
  %call43 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shl) #3
  %17 = load %struct.rtx_def** %rtx46, align 8, !tbaa !4
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 1, i64 1
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx49, align 8, !tbaa !4
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %18, i64 0, i32 1, i64 0
  %rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx52, align 8, !tbaa !4
  %20 = getelementptr inbounds %struct.rtx_def* %19, i64 0, i32 1, i64 1, i32 0
  %call43.c = ptrtoint %struct.rtx_def* %call43 to i64
  store i64 %call43.c, i64* %20, align 8, !tbaa !4
  %21 = load %struct.rtx_def** %rtx46, align 8, !tbaa !4
  %call59 = call i32 @recog(%struct.rtx_def* %21, %struct.rtx_def* %call11, i32* %dummy) #3
  %cmp60 = icmp sgt i32 %call59, -1
  br i1 %cmp60, label %if.then62, label %if.end72

if.then62:                                        ; preds = %if.end
  %22 = load %struct.rtx_def** %rtx46, align 8, !tbaa !4
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %22, i64 0, i32 1, i64 1
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx68, align 8, !tbaa !4
  %call69 = call i32 @rtx_cost(%struct.rtx_def* %23, i32 47) #3
  store i32 %call69, i32* %arrayidx17, align 4, !tbaa !6
  br label %if.end72

if.end72:                                         ; preds = %if.then62, %if.end
  %call75 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %shl) #3
  %24 = load %struct.rtx_def** %rtx78, align 8, !tbaa !4
  %arrayidx80 = getelementptr inbounds %struct.rtx_def* %24, i64 0, i32 1, i64 1
  %rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx81, align 8, !tbaa !4
  %arrayidx83 = getelementptr inbounds %struct.rtx_def* %25, i64 0, i32 1, i64 0
  %rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx84, align 8, !tbaa !4
  %27 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 1, i32 0
  %call75.c = ptrtoint %struct.rtx_def* %call75 to i64
  store i64 %call75.c, i64* %27, align 8, !tbaa !4
  %28 = load %struct.rtx_def** %rtx78, align 8, !tbaa !4
  %call91 = call i32 @recog(%struct.rtx_def* %28, %struct.rtx_def* %call15, i32* %dummy) #3
  %cmp92 = icmp sgt i32 %call91, -1
  br i1 %cmp92, label %if.then94, label %for.inc

if.then94:                                        ; preds = %if.end72
  %29 = load %struct.rtx_def** %rtx78, align 8, !tbaa !4
  %arrayidx99 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 1, i64 1
  %rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**
  %30 = load %struct.rtx_def** %rtx100, align 8, !tbaa !4
  %call101 = call i32 @rtx_cost(%struct.rtx_def* %30, i32 47) #3
  store i32 %call101, i32* %arrayidx, align 4, !tbaa !6
  br label %for.inc

for.inc:                                          ; preds = %if.end72, %if.then94
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 64
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %31 = load i32* @word_mode, align 4, !tbaa !1
  %call105 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 77, i32 %31, %struct.rtx_def* %call1) #3
  %call106 = call i32 @rtx_cost(%struct.rtx_def* %call105, i32 47) #3
  store i32 %call106, i32* @negate_cost, align 4, !tbaa !6
  %32 = load i32* @word_mode, align 4, !tbaa !1
  %call107 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32) #3
  %call108 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 %32, %struct.rtx_def* %call1, %struct.rtx_def* %call107) #3
  %call109 = call i32 @rtx_cost(%struct.rtx_def* %call108, i32 47) #3
  %33 = load i32* @add_cost, align 4, !tbaa !6
  %mul = shl nsw i32 %33, 1
  %cmp110 = icmp sle i32 %call109, %mul
  %conv111 = zext i1 %cmp110 to i32
  store i32 %conv111, i32* @sdiv_pow2_cheap, align 4, !tbaa !6
  %34 = load i32* @word_mode, align 4, !tbaa !1
  %call112 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 32) #3
  %call113 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 80, i32 %34, %struct.rtx_def* %call1, %struct.rtx_def* %call112) #3
  %call114 = call i32 @rtx_cost(%struct.rtx_def* %call113, i32 47) #3
  %35 = load i32* @add_cost, align 4, !tbaa !6
  %mul115 = shl nsw i32 %35, 1
  %cmp116 = icmp sle i32 %call114, %mul115
  %conv117 = zext i1 %cmp116 to i32
  store i32 %conv117, i32* @smod_pow2_cheap, align 4, !tbaa !6
  %36 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !1
  %cmp119218 = icmp eq i32 %36, 0
  br i1 %cmp119218, label %for.end160, label %for.body121

for.body121:                                      ; preds = %for.end, %for.inc156
  %mode.0219 = phi i32 [ %conv133, %for.inc156 ], [ %36, %for.end ]
  %call122 = call %struct.rtx_def* @gen_rtx_REG(i32 %mode.0219, i32 10000) #3
  %call123 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 81, i32 %mode.0219, %struct.rtx_def* %call122, %struct.rtx_def* %call122) #3
  %call124 = call i32 @rtx_cost(%struct.rtx_def* %call123, i32 47) #3
  %idxprom125 = sext i32 %mode.0219 to i64
  %arrayidx126 = getelementptr inbounds [59 x i32]* @div_cost, i64 0, i64 %idxprom125
  store i32 %call124, i32* %arrayidx126, align 4, !tbaa !6
  %call127 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %mode.0219, %struct.rtx_def* %call122, %struct.rtx_def* %call122) #3
  %call128 = call i32 @rtx_cost(%struct.rtx_def* %call127, i32 47) #3
  %arrayidx130 = getelementptr inbounds [59 x i32]* @mul_cost, i64 0, i64 %idxprom125
  store i32 %call128, i32* %arrayidx130, align 4, !tbaa !6
  %arrayidx132 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom125
  %37 = load i8* %arrayidx132, align 1, !tbaa !1
  %conv133 = zext i8 %37 to i32
  %cmp134 = icmp eq i8 %37, 0
  br i1 %cmp134, label %for.end160, label %for.inc156

for.inc156:                                       ; preds = %for.body121
  %call137 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 %conv133, %struct.rtx_def* %call122) #3
  %call138 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 %conv133, %struct.rtx_def* %call122) #3
  %call139 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %conv133, %struct.rtx_def* %call137, %struct.rtx_def* %call138) #3
  %call140 = call i32 @rtx_cost(%struct.rtx_def* %call139, i32 47) #3
  %idxprom141 = zext i8 %37 to i64
  %arrayidx142 = getelementptr inbounds [59 x i32]* @mul_widen_cost, i64 0, i64 %idxprom141
  store i32 %call140, i32* %arrayidx142, align 4, !tbaa !6
  %call143 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 %conv133, %struct.rtx_def* %call122) #3
  %call144 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 %conv133, %struct.rtx_def* %call122) #3
  %call145 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %conv133, %struct.rtx_def* %call143, %struct.rtx_def* %call144) #3
  %arrayidx147 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom125
  %38 = load i16* %arrayidx147, align 2, !tbaa !8
  %conv148 = zext i16 %38 to i64
  %call149 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv148) #3
  %call150 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 90, i32 %conv133, %struct.rtx_def* %call145, %struct.rtx_def* %call149) #3
  %call151 = call %struct.rtx_def* @gen_rtx_fmt_e(i32 122, i32 %mode.0219, %struct.rtx_def* %call150) #3
  %call152 = call i32 @rtx_cost(%struct.rtx_def* %call151, i32 47) #3
  %arrayidx154 = getelementptr inbounds [59 x i32]* @mul_highpart_cost, i64 0, i64 %idxprom125
  store i32 %call152, i32* %arrayidx154, align 4, !tbaa !6
  br label %for.body121

for.end160:                                       ; preds = %for.body121, %for.end
  call void @end_sequence() #3
  ret void
}

declare %struct.rtx_def* @gen_rtx_REG(i32, i32) #1

declare void @start_sequence() #1

declare i32 @rtx_cost(%struct.rtx_def*, i32) #1

declare %struct.rtx_def* @gen_rtx_fmt_ee(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @emit_insn(%struct.rtx_def*) #1

declare void @init_recog() #1

declare %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #1

declare i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) #1

declare %struct.rtx_def* @gen_rtx_fmt_e(i32, i32, %struct.rtx_def*) #1

declare void @end_sequence() #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @negate_rtx(i32 %mode, %struct.rtx_def* %x) #0 {
entry:
  %call = tail call %struct.rtx_def* @simplify_unary_operation(i32 77, i32 %mode, %struct.rtx_def* %x, i32 %mode) #3
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 8, !tbaa !4
  %call1 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %0, %struct.rtx_def* %x, %struct.rtx_def* null, i32 0) #3
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %result.0 = phi %struct.rtx_def* [ %call1, %if.then ], [ %call, %entry ]
  ret %struct.rtx_def* %result.0
}

declare %struct.rtx_def* @simplify_unary_operation(i32, i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @expand_unop(i32, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, i32) #1

; Function Attrs: nounwind uwtable
define i32 @mode_for_extraction(i32 %pattern, i32 %opno) #0 {
entry:
  switch i32 %pattern, label %sw.default [
    i32 0, label %sw.epilog
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ]

sw.bb1:                                           ; preds = %entry
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 259, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.mode_for_extraction, i64 0, i64 0)) #4
  unreachable

sw.epilog:                                        ; preds = %entry, %sw.bb2, %sw.bb1
  %data.0 = phi %struct.insn_data* [ getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1113), %sw.bb2 ], [ getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1112), %sw.bb1 ], [ getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1114), %entry ]
  %cmp = icmp eq i32 %opno, -1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %sw.epilog
  %idxprom = sext i32 %opno to i64
  %operand = getelementptr inbounds %struct.insn_data* %data.0, i64 0, i32 3
  %0 = load %struct.insn_operand_data** %operand, align 8, !tbaa !10
  %mode = getelementptr inbounds %struct.insn_operand_data* %0, i64 %idxprom, i32 2
  %bf.load = load i16* %mode, align 8
  %cmp3 = icmp eq i16 %bf.load, 0
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %1 = load i32* @word_mode, align 4, !tbaa !1
  br label %return

if.end5:                                          ; preds = %if.end
  %bf.cast = zext i16 %bf.load to i32
  br label %return

return:                                           ; preds = %sw.epilog, %if.end5, %if.then4
  %retval.0 = phi i32 [ %1, %if.then4 ], [ %bf.cast, %if.end5 ], [ 0, %sw.epilog ]
  ret i32 %retval.0
}

; Function Attrs: noreturn
declare void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @store_bit_field(%struct.rtx_def* %str_rtx, i64 %bitsize, i64 %bitnum, i32 %fieldmode, %struct.rtx_def* %value, i64 %total_size) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %str_rtx, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !6
  %and = lshr i32 %1, 20
  %2 = and i32 %and, 32
  %3 = add i32 %2, 32
  %phitmp = zext i32 %3 to i64
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %cond1 = phi i64 [ %phitmp, %cond.false ], [ 8, %entry ]
  %div = udiv i64 %bitnum, %cond1
  %rem = urem i64 %bitnum, %cond1
  %4 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1114, i32 3), align 8, !tbaa !10
  %mode.i = getelementptr inbounds %struct.insn_operand_data* %4, i64 3, i32 2
  %bf.load.i = load i16* %mode.i, align 8
  %cmp3.i = icmp eq i16 %bf.load.i, 0
  %5 = load i32* @word_mode, align 4, !tbaa !1
  %bf.cast.i = zext i16 %bf.load.i to i32
  %retval.0.i = select i1 %cmp3.i, i32 %5, i32 %bf.cast.i
  %cmp3 = icmp sgt i64 %total_size, -1
  br i1 %cmp3, label %if.then, label %while.cond.preheader

if.then:                                          ; preds = %cond.end
  %div5 = lshr i64 %rem, 7
  %mul = shl nuw nsw i64 %div5, 4
  %sub = sub i64 %total_size, %mul
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then, %cond.end
  %total_size.addr.0.ph = phi i64 [ %total_size, %cond.end ], [ %sub, %if.then ]
  %cmp8993 = icmp eq i32 %bf.clear, 63
  br i1 %cmp8993, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %6 = load i32* @target_flags, align 4, !tbaa !6
  %and10 = lshr i32 %6, 23
  %7 = and i32 %and10, 4
  %8 = add i32 %7, 4
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %offset.0995 = phi i64 [ %div, %while.body.lr.ph ], [ %add, %while.body ]
  %op0.0994 = phi %struct.rtx_def* [ %str_rtx, %while.body.lr.ph ], [ %10, %while.body ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op0.0994, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %9 = load i32* %rtuint, align 4, !tbaa !6
  %div13 = udiv i32 %9, %8
  %conv14 = zext i32 %div13 to i64
  %add = add i64 %conv14, %offset.0995
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %op0.0994, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %11 = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 0
  %bf.load6 = load i32* %11, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 63
  br i1 %cmp8, label %while.body, label %while.end

while.end:                                        ; preds = %while.body, %while.cond.preheader
  %.lcssa = phi i32* [ %0, %while.cond.preheader ], [ %11, %while.body ]
  %offset.0.lcssa = phi i64 [ %div, %while.cond.preheader ], [ %add, %while.body ]
  %op0.0.lcssa = phi %struct.rtx_def* [ %str_rtx, %while.cond.preheader ], [ %10, %while.body ]
  %call17 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %value, i32 0) #3
  %12 = load i32* @flag_force_mem, align 4, !tbaa !6
  %tobool18 = icmp eq i32 %12, 0
  br i1 %tobool18, label %if.end21, label %if.then19

if.then19:                                        ; preds = %while.end
  %13 = load i32* @generating_concat_p, align 4, !tbaa !6
  store i32 0, i32* @generating_concat_p, align 4, !tbaa !6
  %call20 = tail call %struct.rtx_def* @force_not_mem(%struct.rtx_def* %call17) #3
  store i32 %13, i32* @generating_concat_p, align 4, !tbaa !6
  br label %if.end21

if.end21:                                         ; preds = %while.end, %if.then19
  %value.addr.0 = phi %struct.rtx_def* [ %call20, %if.then19 ], [ %call17, %while.end ]
  %14 = load i32* @target_flags, align 4, !tbaa !6
  %and22 = and i32 %14, 33554432
  %15 = lshr exact i32 %and22, 20
  %16 = add i32 %15, 32
  %conv25960 = zext i32 %16 to i64
  %17 = add i64 %conv25960, 34359738367
  %rem26 = and i64 %17, %bitnum
  %div27 = lshr i64 %rem26, 3
  %18 = lshr exact i32 %and22, 23
  %19 = add i32 %18, 4
  %conv31 = sext i32 %19 to i64
  %mul32 = mul i64 %conv31, %offset.0.lcssa
  %add33 = add i64 %div27, %mul32
  %conv34 = trunc i64 %add33 to i32
  %cmp35 = icmp eq i64 %rem, 0
  br i1 %cmp35, label %land.lhs.true, label %if.end143

land.lhs.true:                                    ; preds = %if.end21
  %idxprom = sext i32 %fieldmode to i64
  %arrayidx37 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %20 = load i16* %arrayidx37, align 2, !tbaa !8
  %conv38 = zext i16 %20 to i64
  %cmp39 = icmp eq i64 %conv38, %bitsize
  br i1 %cmp39, label %land.lhs.true41, label %if.end143

land.lhs.true41:                                  ; preds = %land.lhs.true
  %bf.load42 = load i32* %.lcssa, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp eq i32 %bf.clear43, 66
  br i1 %cmp44, label %if.then96, label %cond.true46

cond.true46:                                      ; preds = %land.lhs.true41
  %arrayidx48 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %21 = load i8* %arrayidx48, align 1, !tbaa !1
  %conv49 = zext i8 %21 to i32
  %cmp53 = icmp ult i32 %conv49, %19
  br i1 %cmp53, label %lor.lhs.false, label %land.lhs.true65

lor.lhs.false:                                    ; preds = %cond.true46
  %bf.lshr = lshr i32 %bf.load42, 16
  %bf.clear56 = and i32 %bf.lshr, 255
  %idxprom57972 = zext i32 %bf.clear56 to i64
  %arrayidx58 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom57972
  %22 = load i8* %arrayidx58, align 1, !tbaa !1
  %cmp63 = icmp eq i8 %22, %21
  br i1 %cmp63, label %land.lhs.true65, label %if.end143

land.lhs.true65:                                  ; preds = %cond.true46, %lor.lhs.false
  %rem69 = srem i32 %conv34, %conv49
  %cmp70 = icmp eq i32 %rem69, 0
  br i1 %cmp70, label %if.then96, label %if.end143

if.then96:                                        ; preds = %land.lhs.true41, %land.lhs.true65
  %bf.lshr98 = lshr i32 %bf.load42, 16
  %bf.clear99 = and i32 %bf.lshr98, 255
  %cmp100 = icmp eq i32 %bf.clear99, %fieldmode
  br i1 %cmp100, label %if.end141, label %if.then102

if.then102:                                       ; preds = %if.then96
  %cmp105 = icmp eq i32 %bf.clear43, 63
  br i1 %cmp105, label %if.then107, label %if.then102.if.end131_crit_edge

if.then102.if.end131_crit_edge:                   ; preds = %if.then102
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %op0.0.lcssa, i64 0, i32 0
  %bf.load132.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end131

if.then107:                                       ; preds = %if.then102
  %arrayidx109 = getelementptr inbounds %struct.rtx_def* %op0.0.lcssa, i64 0, i32 1, i64 0
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx110, align 8, !tbaa !4
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load111 = load i32* %24, align 8
  %bf.lshr112 = lshr i32 %bf.load111, 16
  %bf.clear113 = and i32 %bf.lshr112, 255
  %cmp114 = icmp eq i32 %bf.clear113, %fieldmode
  br i1 %cmp114, label %if.end131, label %lor.lhs.false116

lor.lhs.false116:                                 ; preds = %if.then107
  %arrayidx118 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %25 = load i32* %arrayidx118, align 4, !tbaa !1
  switch i32 %25, label %if.else [
    i32 1, label %if.end131
    i32 3, label %if.end131
  ]

if.else:                                          ; preds = %lor.lhs.false116
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 367, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.store_bit_field, i64 0, i64 0)) #4
  unreachable

if.end131:                                        ; preds = %if.then107, %lor.lhs.false116, %lor.lhs.false116, %if.then102.if.end131_crit_edge
  %bf.load132 = phi i32 [ %bf.load132.pre, %if.then102.if.end131_crit_edge ], [ %bf.load111, %lor.lhs.false116 ], [ %bf.load111, %lor.lhs.false116 ], [ %bf.load111, %if.then107 ]
  %op0.1 = phi %struct.rtx_def* [ %op0.0.lcssa, %if.then102.if.end131_crit_edge ], [ %23, %lor.lhs.false116 ], [ %23, %lor.lhs.false116 ], [ %23, %if.then107 ]
  %bf.clear133 = and i32 %bf.load132, 65535
  %cmp134 = icmp eq i32 %bf.clear133, 61
  br i1 %cmp134, label %if.then136, label %if.else138

if.then136:                                       ; preds = %if.end131
  %call137 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %fieldmode, %struct.rtx_def* %op0.1, i32 %conv34) #3
  br label %if.end141

if.else138:                                       ; preds = %if.end131
  %call139 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.1, i32 %fieldmode, i64 %offset.0.lcssa, i32 1, i32 1) #3
  br label %if.end141

if.end141:                                        ; preds = %if.then96, %if.then136, %if.else138
  %op0.2 = phi %struct.rtx_def* [ %call137, %if.then136 ], [ %call139, %if.else138 ], [ %op0.0.lcssa, %if.then96 ]
  %call142 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %op0.2, %struct.rtx_def* %value.addr.0) #3
  br label %return

if.end143:                                        ; preds = %land.lhs.true65, %lor.lhs.false, %land.lhs.true, %if.end21
  %bf.load144 = load i32* %.lcssa, align 8
  %bf.lshr145 = lshr i32 %bf.load144, 16
  %bf.clear146 = and i32 %bf.lshr145, 255
  %call147 = tail call i32 @int_mode_for_mode(i32 %bf.clear146) #3
  %bf.load148 = load i32* %.lcssa, align 8
  %bf.lshr149 = lshr i32 %bf.load148, 16
  %bf.clear150 = and i32 %bf.lshr149, 255
  %cmp151 = icmp eq i32 %call147, %bf.clear150
  br i1 %cmp151, label %if.end168, label %if.then153

if.then153:                                       ; preds = %if.end143
  %bf.clear155 = and i32 %bf.load148, 65535
  %cmp156 = icmp eq i32 %bf.clear155, 66
  br i1 %cmp156, label %if.then158, label %if.else160

if.then158:                                       ; preds = %if.then153
  %call159 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.0.lcssa, i32 %call147, i64 0, i32 1, i32 1) #3
  br label %if.end168

if.else160:                                       ; preds = %if.then153
  %cmp161 = icmp eq i32 %call147, 51
  br i1 %cmp161, label %if.else165, label %if.then163

if.then163:                                       ; preds = %if.else160
  %call164 = tail call %struct.rtx_def* @gen_lowpart(i32 %call147, %struct.rtx_def* %op0.0.lcssa) #3
  br label %if.end168

if.else165:                                       ; preds = %if.else160
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 391, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.store_bit_field, i64 0, i64 0)) #4
  unreachable

if.end168:                                        ; preds = %if.end143, %if.then158, %if.then163
  %op0.3 = phi %struct.rtx_def* [ %call159, %if.then158 ], [ %call164, %if.then163 ], [ %op0.0.lcssa, %if.end143 ]
  %26 = getelementptr inbounds %struct.rtx_def* %op0.3, i64 0, i32 0
  %bf.load169 = load i32* %26, align 8
  %bf.clear170 = and i32 %bf.load169, 65535
  %cmp171 = icmp eq i32 %bf.clear170, 66
  br i1 %cmp171, label %if.then173, label %if.end175

if.then173:                                       ; preds = %if.end168
  %call174 = tail call %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def* %op0.3) #3
  tail call void @set_mem_alias_set(%struct.rtx_def* %call174, i64 0) #3
  tail call void @set_mem_expr(%struct.rtx_def* %call174, %union.tree_node* null) #3
  %.phi.trans.insert1001 = getelementptr inbounds %struct.rtx_def* %call174, i64 0, i32 0
  %bf.load176.pre = load i32* %.phi.trans.insert1001, align 8
  br label %if.end175

if.end175:                                        ; preds = %if.then173, %if.end168
  %bf.load417 = phi i32 [ %bf.load176.pre, %if.then173 ], [ %bf.load169, %if.end168 ]
  %op0.4 = phi %struct.rtx_def* [ %call174, %if.then173 ], [ %op0.3, %if.end168 ]
  %27 = getelementptr inbounds %struct.rtx_def* %op0.4, i64 0, i32 0
  %bf.clear177 = and i32 %bf.load417, 65535
  %cmp178 = icmp ne i32 %bf.clear177, 66
  %or.cond = and i1 %cmp178, %cmp35
  br i1 %or.cond, label %land.lhs.true189, label %if.end291

land.lhs.true189:                                 ; preds = %if.end175
  %idxprom190 = sext i32 %fieldmode to i64
  %arrayidx191 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom190
  %28 = load i16* %arrayidx191, align 2, !tbaa !8
  %conv192 = zext i16 %28 to i64
  %cmp193 = icmp eq i64 %conv192, %bitsize
  br i1 %cmp193, label %land.lhs.true195, label %if.end291

land.lhs.true195:                                 ; preds = %land.lhs.true189
  %29 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 31), align 8, !tbaa !4
  %insn_code = getelementptr inbounds %struct.optab* %29, i64 0, i32 1, i64 %idxprom190, i32 0
  %30 = load i32* %insn_code, align 4, !tbaa !12
  %cmp198 = icmp eq i32 %30, 1317
  br i1 %cmp198, label %if.end291, label %if.then200

if.then200:                                       ; preds = %land.lhs.true195
  %31 = getelementptr inbounds %struct.rtx_def* %value.addr.0, i64 0, i32 0
  %bf.load205 = load i32* %31, align 8
  %bf.clear206 = and i32 %bf.load205, 65535
  switch i32 %bf.clear206, label %if.then231 [
    i32 54, label %if.then214
    i32 61, label %if.then214
    i32 68, label %if.end234
    i32 67, label %if.end234
    i32 58, label %if.end234
  ]

if.then214:                                       ; preds = %if.then200, %if.then200
  %call215 = tail call %struct.rtx_def* @gen_lowpart(i32 %fieldmode, %struct.rtx_def* %value.addr.0) #3
  br label %if.end234

if.then231:                                       ; preds = %if.then200
  %call232 = tail call %struct.rtx_def* @convert_to_mode(i32 %fieldmode, %struct.rtx_def* %value.addr.0, i32 0) #3
  br label %if.end234

if.end234:                                        ; preds = %if.then200, %if.then200, %if.then200, %if.then231, %if.then214
  %value.addr.1 = phi %struct.rtx_def* [ %call215, %if.then214 ], [ %call232, %if.then231 ], [ %value.addr.0, %if.then200 ], [ %value.addr.0, %if.then200 ], [ %value.addr.0, %if.then200 ]
  %idxprom235 = sext i32 %30 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom235, i32 3
  %32 = load %struct.insn_operand_data** %operand, align 8, !tbaa !10
  %predicate = getelementptr inbounds %struct.insn_operand_data* %32, i64 1, i32 0
  %33 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %call238 = tail call i32 %33(%struct.rtx_def* %value.addr.1, i32 %fieldmode) #3
  %tobool239 = icmp eq i32 %call238, 0
  br i1 %tobool239, label %if.then240, label %if.end242

if.then240:                                       ; preds = %if.end234
  %call241 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %fieldmode, %struct.rtx_def* %value.addr.1) #3
  br label %if.end242

if.end242:                                        ; preds = %if.end234, %if.then240
  %value.addr.2 = phi %struct.rtx_def* [ %value.addr.1, %if.end234 ], [ %call241, %if.then240 ]
  %bf.load243 = load i32* %27, align 8
  %bf.clear244 = and i32 %bf.load243, 65535
  %cmp245 = icmp eq i32 %bf.clear244, 63
  br i1 %cmp245, label %if.then247, label %if.end272

if.then247:                                       ; preds = %if.end242
  %arrayidx249 = getelementptr inbounds %struct.rtx_def* %op0.4, i64 0, i32 1, i64 0
  %rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**
  %34 = load %struct.rtx_def** %rtx250, align 8, !tbaa !4
  %35 = getelementptr inbounds %struct.rtx_def* %34, i64 0, i32 0
  %bf.load251 = load i32* %35, align 8
  %bf.lshr252 = lshr i32 %bf.load251, 16
  %bf.clear253 = and i32 %bf.lshr252, 255
  %cmp254 = icmp eq i32 %bf.clear253, %fieldmode
  br i1 %cmp254, label %if.end272, label %lor.lhs.false256

lor.lhs.false256:                                 ; preds = %if.then247
  %arrayidx258 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom190
  %36 = load i32* %arrayidx258, align 4, !tbaa !1
  switch i32 %36, label %if.else270 [
    i32 1, label %if.end272
    i32 3, label %if.end272
  ]

if.else270:                                       ; preds = %lor.lhs.false256
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 444, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.store_bit_field, i64 0, i64 0)) #4
  unreachable

if.end272:                                        ; preds = %if.then247, %lor.lhs.false256, %lor.lhs.false256, %if.end242
  %op0.5 = phi %struct.rtx_def* [ %op0.4, %if.end242 ], [ %34, %lor.lhs.false256 ], [ %34, %lor.lhs.false256 ], [ %34, %if.then247 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom235, i32 2
  %37 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %38 = load i32* @target_flags, align 4, !tbaa !6
  %and275 = and i32 %38, 33554432
  %39 = lshr exact i32 %and275, 20
  %40 = add i32 %39, 32
  %conv278970 = zext i32 %40 to i64
  %41 = add i64 %conv278970, 34359738367
  %rem279 = and i64 %41, %bitnum
  %div280 = lshr i64 %rem279, 3
  %42 = lshr exact i32 %and275, 23
  %43 = add i32 %42, 4
  %conv284971 = zext i32 %43 to i64
  %mul285 = mul i64 %conv284971, %offset.0.lcssa
  %add286 = add i64 %div280, %mul285
  %conv287 = trunc i64 %add286 to i32
  %call288 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %fieldmode, %struct.rtx_def* %op0.5, i32 %conv287) #3
  %call289 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %37(%struct.rtx_def* %call288, %struct.rtx_def* %value.addr.2) #3
  %call290 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call289) #3
  br label %return

if.end291:                                        ; preds = %land.lhs.true195, %land.lhs.true189, %if.end175
  %44 = load i32* @target_flags, align 4, !tbaa !6
  %and292 = and i32 %44, 33554432
  %45 = lshr exact i32 %and292, 20
  %46 = add i32 %45, 32
  %conv295 = sext i32 %46 to i64
  %cmp296 = icmp ult i64 %conv295, %bitsize
  br i1 %cmp296, label %if.then298, label %if.end396

if.then298:                                       ; preds = %if.end291
  %sub302968 = or i32 %45, 31
  %conv303969 = zext i32 %sub302968 to i64
  %add304 = add i64 %conv303969, %bitsize
  %div309 = udiv i64 %add304, %conv295
  %conv310 = trunc i64 %div309 to i32
  %mul314 = mul i32 %conv310, %46
  %call315 = tail call i32 @smallest_mode_for_size(i32 %mul314, i32 1) #3
  %cmp316989 = icmp eq i32 %conv310, 0
  br i1 %cmp316989, label %return, label %cond.false347.lr.ph

cond.false347.lr.ph:                              ; preds = %if.then298
  %47 = getelementptr inbounds %struct.rtx_def* %value.addr.0, i64 0, i32 0
  %.lobit = lshr i32 %44, 20
  %48 = and i32 %.lobit, 32
  %49 = add i32 %48, 32
  %50 = zext i32 %49 to i64
  %51 = udiv i64 %add304, %50
  %52 = trunc i64 %51 to i32
  br label %cond.false347

cond.false347:                                    ; preds = %cond.false347, %cond.false347.lr.ph
  %i.0990 = phi i32 [ 0, %cond.false347.lr.ph ], [ %inc, %cond.false347 ]
  %53 = load i32* @target_flags, align 4, !tbaa !6
  %and348 = lshr i32 %53, 20
  %54 = and i32 %and348, 32
  %55 = add i32 %54, 32
  %mul351 = mul i32 %55, %i.0990
  %conv357 = sext i32 %55 to i64
  %conv362 = zext i32 %mul351 to i64
  %sub363 = sub i64 %bitsize, %conv362
  %cmp364 = icmp ult i64 %conv357, %sub363
  %cond379 = select i1 %cmp364, i64 %conv357, i64 %sub363
  %add381 = add i64 %conv362, %bitnum
  %56 = load i32* @word_mode, align 4, !tbaa !1
  %bf.load382 = load i32* %47, align 8
  %bf.lshr383 = lshr i32 %bf.load382, 16
  %bf.clear384 = and i32 %bf.lshr383, 255
  %cmp385 = icmp eq i32 %bf.clear384, 0
  %call315.bf.clear384 = select i1 %cmp385, i32 %call315, i32 %bf.clear384
  %call394 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %value.addr.0, i32 %i.0990, i32 %call315.bf.clear384) #3
  %call395 = tail call %struct.rtx_def* @store_bit_field(%struct.rtx_def* %op0.4, i64 %cond379, i64 %add381, i32 %56, %struct.rtx_def* %call394, i64 %total_size.addr.0.ph)
  %inc = add i32 %i.0990, 1
  %exitcond = icmp eq i32 %inc, %52
  br i1 %exitcond, label %return, label %cond.false347

if.end396:                                        ; preds = %if.end291
  %cmp399 = icmp eq i32 %bf.clear177, 66
  br i1 %cmp399, label %if.else463, label %if.then401

if.then401:                                       ; preds = %if.end396
  %cmp402 = icmp eq i64 %offset.0.lcssa, 0
  br i1 %cmp402, label %lor.lhs.false404, label %if.then416

lor.lhs.false404:                                 ; preds = %if.then401
  %bf.lshr406 = lshr i32 %bf.load417, 16
  %bf.clear407 = and i32 %bf.lshr406, 255
  %idxprom408964 = zext i32 %bf.clear407 to i64
  %arrayidx409 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom408964
  %57 = load i8* %arrayidx409, align 1, !tbaa !1
  %conv410 = zext i8 %57 to i32
  %58 = lshr exact i32 %and292, 23
  %59 = add i32 %58, 4
  %cmp414 = icmp ugt i32 %conv410, %59
  br i1 %cmp414, label %if.then416, label %if.end465

if.then416:                                       ; preds = %if.then401, %lor.lhs.false404
  switch i32 %bf.clear177, label %if.else448 [
    i32 61, label %if.end450
    i32 63, label %land.lhs.true426
  ]

land.lhs.true426:                                 ; preds = %if.then416
  %bf.lshr428 = lshr i32 %bf.load417, 16
  %bf.clear429 = and i32 %bf.lshr428, 255
  %idxprom430966 = zext i32 %bf.clear429 to i64
  %arrayidx431 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom430966
  %60 = load i8* %arrayidx431, align 1, !tbaa !1
  %arrayidx434 = getelementptr inbounds %struct.rtx_def* %op0.4, i64 0, i32 1, i64 0
  %rtx435 = bitcast %union.rtunion_def* %arrayidx434 to %struct.rtx_def**
  %61 = load %struct.rtx_def** %rtx435, align 8, !tbaa !4
  %62 = getelementptr inbounds %struct.rtx_def* %61, i64 0, i32 0
  %bf.load436 = load i32* %62, align 8
  %bf.lshr437 = lshr i32 %bf.load436, 16
  %bf.clear438 = and i32 %bf.lshr437, 255
  %idxprom439967 = zext i32 %bf.clear438 to i64
  %arrayidx440 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom439967
  %63 = load i8* %arrayidx440, align 1, !tbaa !1
  %cmp442 = icmp eq i8 %60, %63
  br i1 %cmp442, label %if.end450, label %if.else448

if.else448:                                       ; preds = %if.then416, %land.lhs.true426
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 522, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.store_bit_field, i64 0, i64 0)) #4
  unreachable

if.end450:                                        ; preds = %land.lhs.true426, %if.then416
  %op0.6 = phi %struct.rtx_def* [ %op0.4, %if.then416 ], [ %61, %land.lhs.true426 ]
  %and451 = lshr i32 %44, 20
  %64 = and i32 %and451, 32
  %65 = add i32 %64, 32
  %call454 = tail call i32 @mode_for_size(i32 %65, i32 1, i32 0) #3
  %66 = load i32* @target_flags, align 4, !tbaa !6
  %and455 = lshr i32 %66, 23
  %67 = and i32 %and455, 4
  %68 = add i32 %67, 4
  %conv458965 = zext i32 %68 to i64
  %mul459 = mul i64 %conv458965, %offset.0.lcssa
  %conv460 = trunc i64 %mul459 to i32
  %call461 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %call454, %struct.rtx_def* %op0.6, i32 %conv460) #3
  br label %if.end465

if.else463:                                       ; preds = %if.end396
  %call464 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0.4, i32 1) #3
  br label %if.end465

if.end465:                                        ; preds = %lor.lhs.false404, %if.end450, %if.else463
  %op0.8 = phi %struct.rtx_def* [ %call464, %if.else463 ], [ %call461, %if.end450 ], [ %op0.4, %lor.lhs.false404 ]
  %offset.1 = phi i64 [ %offset.0.lcssa, %if.else463 ], [ 0, %if.end450 ], [ 0, %lor.lhs.false404 ]
  %69 = getelementptr inbounds %struct.rtx_def* %value.addr.0, i64 0, i32 0
  %bf.load466 = load i32* %69, align 8
  %bf.lshr467 = lshr i32 %bf.load466, 16
  %bf.clear468 = and i32 %bf.lshr467, 255
  %idxprom469961 = zext i32 %bf.clear468 to i64
  %arrayidx470 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom469961
  %70 = load i32* %arrayidx470, align 4, !tbaa !1
  switch i32 %70, label %if.then481 [
    i32 1, label %if.end483
    i32 3, label %if.end483
  ]

if.then481:                                       ; preds = %if.end465
  %71 = load i32* @word_mode, align 4, !tbaa !1
  %call482 = tail call %struct.rtx_def* @gen_lowpart(i32 %71, %struct.rtx_def* %value.addr.0) #3
  %.phi.trans.insert1003 = getelementptr inbounds %struct.rtx_def* %call482, i64 0, i32 0
  %bf.load484.pre = load i32* %.phi.trans.insert1003, align 8
  br label %if.end483

if.end483:                                        ; preds = %if.end465, %if.end465, %if.then481
  %bf.load484 = phi i32 [ %bf.load484.pre, %if.then481 ], [ %bf.load466, %if.end465 ], [ %bf.load466, %if.end465 ]
  %value.addr.3 = phi %struct.rtx_def* [ %call482, %if.then481 ], [ %value.addr.0, %if.end465 ], [ %value.addr.0, %if.end465 ]
  %72 = getelementptr inbounds %struct.rtx_def* %value.addr.3, i64 0, i32 0
  %bf.clear486 = and i32 %bf.load484, 16711680
  %cmp487 = icmp eq i32 %bf.clear486, 3342336
  br i1 %cmp487, label %insv_loses, label %land.lhs.true489

land.lhs.true489:                                 ; preds = %if.end483
  %cmp490 = icmp eq i64 %bitsize, 1
  %bf.clear494 = and i32 %bf.load484, 65535
  %cmp495 = icmp eq i32 %bf.clear494, 54
  %or.cond973 = and i1 %cmp490, %cmp495
  br i1 %or.cond973, label %insv_loses, label %land.lhs.true497

land.lhs.true497:                                 ; preds = %land.lhs.true489
  %idxprom498 = sext i32 %retval.0.i to i64
  %arrayidx499 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom498
  %73 = load i16* %arrayidx499, align 2, !tbaa !8
  %conv500 = zext i16 %73 to i64
  %cmp501 = icmp ult i64 %conv500, %bitsize
  br i1 %cmp501, label %insv_loses, label %land.lhs.true503

land.lhs.true503:                                 ; preds = %land.lhs.true497
  %74 = getelementptr inbounds %struct.rtx_def* %op0.8, i64 0, i32 0
  %bf.load504 = load i32* %74, align 8
  %bf.clear505 = and i32 %bf.load504, 65535
  switch i32 %bf.clear505, label %if.then520 [
    i32 61, label %land.lhs.true513
    i32 63, label %land.lhs.true513
  ]

land.lhs.true513:                                 ; preds = %land.lhs.true503, %land.lhs.true503
  %add514 = add i64 %rem, %bitsize
  %cmp518 = icmp ugt i64 %add514, %conv500
  br i1 %cmp518, label %insv_loses, label %if.then520

if.then520:                                       ; preds = %land.lhs.true503, %land.lhs.true513
  %call522 = tail call %struct.rtx_def* @get_last_insn() #3
  %bf.load.i980 = load i16* %mode.i, align 8
  %cmp3.i981 = icmp eq i16 %bf.load.i980, 0
  %75 = load i32* @word_mode, align 4, !tbaa !1
  %bf.cast.i983 = zext i16 %bf.load.i980 to i32
  %retval.0.i985 = select i1 %cmp3.i981, i32 %75, i32 %bf.cast.i983
  %76 = load i32* @volatile_ok, align 4, !tbaa !6
  store i32 1, i32* @volatile_ok, align 4, !tbaa !6
  %bf.load524 = load i32* %74, align 8
  %bf.clear525 = and i32 %bf.load524, 65535
  %cmp526 = icmp eq i32 %bf.clear525, 66
  br i1 %cmp526, label %land.lhs.true528, label %if.end595

land.lhs.true528:                                 ; preds = %if.then520
  %predicate530 = getelementptr inbounds %struct.insn_operand_data* %4, i64 0, i32 0
  %77 = load i32 (%struct.rtx_def*, i32)** %predicate530, align 8, !tbaa !14
  %call531 = tail call i32 %77(%struct.rtx_def* %op0.8, i32 0) #3
  %tobool532 = icmp eq i32 %call531, 0
  br i1 %tobool532, label %if.then533, label %if.end595

if.then533:                                       ; preds = %land.lhs.true528
  %bf.load534 = load i32* %74, align 8
  %bf.lshr535 = lshr i32 %bf.load534, 16
  %bf.clear536 = and i32 %bf.lshr535, 255
  %cmp537 = icmp eq i32 %bf.clear536, 51
  br i1 %cmp537, label %if.then551, label %lor.lhs.false539

lor.lhs.false539:                                 ; preds = %if.then533
  %idxprom543963 = zext i32 %bf.clear536 to i64
  %arrayidx544 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom543963
  %78 = load i8* %arrayidx544, align 1, !tbaa !1
  %idxprom546 = sext i32 %retval.0.i985 to i64
  %arrayidx547 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom546
  %79 = load i8* %arrayidx547, align 1, !tbaa !1
  %cmp549 = icmp ugt i8 %78, %79
  br i1 %cmp549, label %if.then551, label %if.end575

if.then551:                                       ; preds = %lor.lhs.false539, %if.then533
  %conv552 = trunc i64 %bitsize to i32
  %conv553 = trunc i64 %bitnum to i32
  %arrayidx555 = getelementptr inbounds %struct.rtx_def* %op0.8, i64 0, i32 1, i64 1
  %rtmem556 = bitcast %union.rtunion_def* %arrayidx555 to %struct.mem_attrs**
  %80 = load %struct.mem_attrs** %rtmem556, align 8, !tbaa !4
  %cmp557 = icmp eq %struct.mem_attrs* %80, null
  br i1 %cmp557, label %cond.end565, label %cond.true559

cond.true559:                                     ; preds = %if.then551
  %align563 = getelementptr inbounds %struct.mem_attrs* %80, i64 0, i32 4
  %81 = load i32* %align563, align 4, !tbaa !17
  br label %cond.end565

cond.end565:                                      ; preds = %if.then551, %cond.true559
  %cond566 = phi i32 [ %81, %cond.true559 ], [ 8, %if.then551 ]
  %bf.lshr568 = lshr i32 %bf.load534, 27
  %bf.clear569 = and i32 %bf.lshr568, 1
  %call570 = tail call i32 @get_best_mode(i32 %conv552, i32 %conv553, i32 %cond566, i32 %retval.0.i985, i32 %bf.clear569) #3
  br label %if.end575

if.end575:                                        ; preds = %lor.lhs.false539, %cond.end565
  %bestmode.0 = phi i32 [ %call570, %cond.end565 ], [ %bf.clear536, %lor.lhs.false539 ]
  %cmp576 = icmp eq i32 %bestmode.0, 0
  br i1 %cmp576, label %insv_loses, label %if.end579

if.end579:                                        ; preds = %if.end575
  %idxprom580 = sext i32 %bestmode.0 to i64
  %arrayidx581 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom580
  %82 = load i16* %arrayidx581, align 2, !tbaa !8
  %conv583 = zext i16 %82 to i64
  %div584 = udiv i64 %bitnum, %conv583
  %arrayidx586 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom580
  %83 = load i8* %arrayidx586, align 1, !tbaa !1
  %conv587 = zext i8 %83 to i64
  %mul588 = mul i64 %conv587, %div584
  %rem590 = urem i64 %bitnum, %conv583
  %call591 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.8, i32 %bestmode.0, i64 %mul588, i32 1, i32 1) #3
  %call592 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call591) #3
  %call593 = tail call %struct.rtx_def* @store_bit_field(%struct.rtx_def* %call592, i64 %bitsize, i64 %rem590, i32 %fieldmode, %struct.rtx_def* %value.addr.3, i64 %total_size.addr.0.ph)
  %call594 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call591, %struct.rtx_def* %call592) #3
  ret %struct.rtx_def* %value.addr.3

if.end595:                                        ; preds = %land.lhs.true528, %if.then520
  store i32 %76, i32* @volatile_ok, align 4, !tbaa !6
  %bf.load596 = load i32* %74, align 8
  %bf.clear597 = and i32 %bf.load596, 65535
  %cmp598 = icmp eq i32 %bf.clear597, 66
  br i1 %cmp598, label %if.then600, label %if.end602

if.then600:                                       ; preds = %if.end595
  %84 = load i32* @byte_mode, align 4, !tbaa !1
  %call601 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.8, i32 %84, i64 %offset.1, i32 1, i32 1) #3
  %.phi.trans.insert1005 = getelementptr inbounds %struct.rtx_def* %call601, i64 0, i32 0
  %bf.load603.pre = load i32* %.phi.trans.insert1005, align 8
  br label %if.end602

if.end602:                                        ; preds = %if.then600, %if.end595
  %bf.load603 = phi i32 [ %bf.load603.pre, %if.then600 ], [ %bf.load596, %if.end595 ]
  %xop0.0 = phi %struct.rtx_def* [ %call601, %if.then600 ], [ %op0.8, %if.end595 ]
  %bf.clear604 = and i32 %bf.load603, 65535
  %cmp605 = icmp eq i32 %bf.clear604, 63
  br i1 %cmp605, label %if.then607, label %if.end615

if.then607:                                       ; preds = %if.end602
  %fld608 = getelementptr inbounds %struct.rtx_def* %xop0.0, i64 0, i32 1
  %rtx610 = bitcast [1 x %union.rtunion_def]* %fld608 to %struct.rtx_def**
  %85 = load %struct.rtx_def** %rtx610, align 8, !tbaa !4
  %arrayidx612 = getelementptr inbounds %struct.rtx_def* %xop0.0, i64 0, i32 1, i64 1
  %rtuint613 = bitcast %union.rtunion_def* %arrayidx612 to i32*
  %86 = load i32* %rtuint613, align 4, !tbaa !6
  %call614 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %retval.0.i985, %struct.rtx_def* %85, i32 %86) #3
  %.phi.trans.insert1007 = getelementptr inbounds %struct.rtx_def* %call614, i64 0, i32 0
  %bf.load616.pre = load i32* %.phi.trans.insert1007, align 8
  br label %if.end615

if.end615:                                        ; preds = %if.then607, %if.end602
  %bf.load616 = phi i32 [ %bf.load616.pre, %if.then607 ], [ %bf.load603, %if.end602 ]
  %xop0.1 = phi %struct.rtx_def* [ %call614, %if.then607 ], [ %xop0.0, %if.end602 ]
  %bf.clear617 = and i32 %bf.load616, 65535
  %cmp618 = icmp eq i32 %bf.clear617, 61
  br i1 %cmp618, label %land.lhs.true620, label %if.end628

land.lhs.true620:                                 ; preds = %if.end615
  %bf.lshr622 = lshr i32 %bf.load616, 16
  %bf.clear623 = and i32 %bf.lshr622, 255
  %cmp624 = icmp eq i32 %bf.clear623, %retval.0.i985
  br i1 %cmp624, label %if.end628, label %if.then626

if.then626:                                       ; preds = %land.lhs.true620
  %call627 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %retval.0.i985, %struct.rtx_def* %xop0.1, i32 0) #3
  br label %if.end628

if.end628:                                        ; preds = %land.lhs.true620, %if.then626, %if.end615
  %xop0.2 = phi %struct.rtx_def* [ %call627, %if.then626 ], [ %xop0.1, %land.lhs.true620 ], [ %xop0.1, %if.end615 ]
  %idxprom629 = sext i32 %retval.0.i985 to i64
  %bf.load632 = load i32* %72, align 8
  %bf.lshr633 = lshr i32 %bf.load632, 16
  %bf.clear634 = and i32 %bf.lshr633, 255
  %cmp635 = icmp eq i32 %bf.clear634, %retval.0.i985
  br i1 %cmp635, label %if.end731, label %if.then637

if.then637:                                       ; preds = %if.end628
  %idxprom641962 = zext i32 %bf.clear634 to i64
  %arrayidx642 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom641962
  %87 = load i16* %arrayidx642, align 2, !tbaa !8
  %conv643 = zext i16 %87 to i64
  %cmp644 = icmp ult i64 %conv643, %bitsize
  br i1 %cmp644, label %if.else677, label %if.then646

if.then646:                                       ; preds = %if.then637
  %arrayidx651 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom641962
  %88 = load i8* %arrayidx651, align 1, !tbaa !1
  %arrayidx654 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom629
  %89 = load i8* %arrayidx654, align 1, !tbaa !1
  %cmp656 = icmp ult i8 %88, %89
  br i1 %cmp656, label %if.then658, label %if.else674

if.then658:                                       ; preds = %if.then646
  %call662 = tail call %struct.rtx_def* @simplify_subreg(i32 %retval.0.i985, %struct.rtx_def* %value.addr.3, i32 %bf.clear634, i32 0) #3
  %tobool663 = icmp eq %struct.rtx_def* %call662, null
  br i1 %tobool663, label %if.then664, label %if.end731

if.then664:                                       ; preds = %if.then658
  %bf.load665 = load i32* %72, align 8
  %bf.lshr666 = lshr i32 %bf.load665, 16
  %bf.clear667 = and i32 %bf.lshr666, 255
  %call668 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear667, %struct.rtx_def* %value.addr.3) #3
  %bf.load669 = load i32* %72, align 8
  %bf.lshr670 = lshr i32 %bf.load669, 16
  %bf.clear671 = and i32 %bf.lshr670, 255
  %call672 = tail call %struct.rtx_def* @simplify_gen_subreg(i32 %retval.0.i985, %struct.rtx_def* %call668, i32 %bf.clear671, i32 0) #3
  br label %if.end731

if.else674:                                       ; preds = %if.then646
  %call675 = tail call %struct.rtx_def* @gen_lowpart(i32 %retval.0.i985, %struct.rtx_def* %value.addr.3) #3
  br label %if.end731

if.else677:                                       ; preds = %if.then637
  %bf.clear679 = and i32 %bf.load632, 65535
  %cmp680 = icmp eq i32 %bf.clear679, 54
  br i1 %cmp680, label %if.then682, label %if.else687

if.then682:                                       ; preds = %if.else677
  %rtwint = getelementptr inbounds %struct.rtx_def* %value.addr.3, i64 0, i32 1, i64 0, i32 0
  %90 = load i64* %rtwint, align 8, !tbaa !20
  %call685 = tail call i64 @trunc_int_for_mode(i64 %90, i32 %retval.0.i985) #3
  %call686 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call685) #3
  br label %if.end731

if.else687:                                       ; preds = %if.else677
  %bf.clear679.off = add i32 %bf.clear679, -67
  %switch = icmp ult i32 %bf.clear679.off, 2
  br i1 %switch, label %if.end731, label %lor.lhs.false697

lor.lhs.false697:                                 ; preds = %if.else687
  switch i32 %bf.clear679, label %if.then727 [
    i32 140, label %if.end731
    i32 134, label %if.end731
    i32 58, label %if.end731
    i32 56, label %if.end731
    i32 55, label %if.end731
    i32 54, label %if.end731
  ]

if.then727:                                       ; preds = %lor.lhs.false697
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 665, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.store_bit_field, i64 0, i64 0)) #4
  unreachable

if.end731:                                        ; preds = %lor.lhs.false697, %lor.lhs.false697, %lor.lhs.false697, %lor.lhs.false697, %lor.lhs.false697, %lor.lhs.false697, %if.else687, %if.then664, %if.then658, %if.end628, %if.else674, %if.then682
  %value1.0 = phi %struct.rtx_def* [ %call675, %if.else674 ], [ %call686, %if.then682 ], [ %value.addr.3, %lor.lhs.false697 ], [ %value.addr.3, %if.end628 ], [ %call662, %if.then658 ], [ %call672, %if.then664 ], [ %value.addr.3, %if.else687 ], [ %value.addr.3, %lor.lhs.false697 ], [ %value.addr.3, %lor.lhs.false697 ], [ %value.addr.3, %lor.lhs.false697 ], [ %value.addr.3, %lor.lhs.false697 ], [ %value.addr.3, %lor.lhs.false697 ]
  %predicate733 = getelementptr inbounds %struct.insn_operand_data* %4, i64 3, i32 0
  %91 = load i32 (%struct.rtx_def*, i32)** %predicate733, align 8, !tbaa !14
  %call734 = tail call i32 %91(%struct.rtx_def* %value1.0, i32 %retval.0.i985) #3
  %tobool735 = icmp eq i32 %call734, 0
  br i1 %tobool735, label %if.then736, label %if.end738

if.then736:                                       ; preds = %if.end731
  %call737 = tail call %struct.rtx_def* @force_reg(i32 %retval.0.i985, %struct.rtx_def* %value1.0) #3
  br label %if.end738

if.end738:                                        ; preds = %if.end731, %if.then736
  %value1.1 = phi %struct.rtx_def* [ %value1.0, %if.end731 ], [ %call737, %if.then736 ]
  %call739 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %bitsize) #3
  %sext = shl nuw i64 %rem, 32
  %conv740 = ashr exact i64 %sext, 32
  %call741 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv740) #3
  %call742 = tail call %struct.rtx_def* @gen_insv(%struct.rtx_def* %xop0.2, %struct.rtx_def* %call739, %struct.rtx_def* %call741, %struct.rtx_def* %value1.1) #3
  %tobool743 = icmp eq %struct.rtx_def* %call742, null
  br i1 %tobool743, label %if.else746, label %if.then744

if.then744:                                       ; preds = %if.end738
  %call745 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call742) #3
  br label %return

if.else746:                                       ; preds = %if.end738
  tail call void @delete_insns_since(%struct.rtx_def* %call522) #3
  tail call fastcc void @store_fixed_bit_field(%struct.rtx_def* %op0.8, i64 %offset.1, i64 %bitsize, i64 %rem, %struct.rtx_def* %value.addr.3)
  br label %return

insv_loses:                                       ; preds = %land.lhs.true489, %land.lhs.true497, %if.end483, %land.lhs.true513, %if.end575
  tail call fastcc void @store_fixed_bit_field(%struct.rtx_def* %op0.8, i64 %offset.1, i64 %bitsize, i64 %rem, %struct.rtx_def* %value.addr.3)
  br label %return

return:                                           ; preds = %cond.false347, %if.then298, %insv_loses, %if.else746, %if.then744, %if.end272, %if.end141
  %retval.0 = phi %struct.rtx_def* [ %value.addr.0, %if.end141 ], [ %value.addr.2, %if.end272 ], [ %value.addr.3, %if.then744 ], [ %value.addr.3, %if.else746 ], [ %value.addr.3, %insv_loses ], [ %value.addr.0, %if.then298 ], [ %value.addr.0, %cond.false347 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @protect_from_queue(%struct.rtx_def*, i32) #1

declare %struct.rtx_def* @force_not_mem(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #1

declare %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @int_mode_for_mode(i32) #1

declare %struct.rtx_def* @gen_lowpart(i32, %struct.rtx_def*) #1

declare %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def*) #1

declare void @set_mem_alias_set(%struct.rtx_def*, i64) #1

declare void @set_mem_expr(%struct.rtx_def*, %union.tree_node*) #1

declare %struct.rtx_def* @convert_to_mode(i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @copy_to_mode_reg(i32, %struct.rtx_def*) #1

declare i32 @smallest_mode_for_size(i32, i32) #1

declare %struct.rtx_def* @operand_subword_force(%struct.rtx_def*, i32, i32) #1

declare i32 @mode_for_size(i32, i32, i32) #1

declare %struct.rtx_def* @get_last_insn() #1

declare i32 @get_best_mode(i32, i32, i32, i32, i32) #1

declare %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) #1

declare %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) #1

declare i64 @trunc_int_for_mode(i64, i32) #1

declare %struct.rtx_def* @gen_insv(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare void @delete_insns_since(%struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @store_fixed_bit_field(%struct.rtx_def* %op0, i64 %offset, i64 %bitsize, i64 %bitpos, %struct.rtx_def* %value) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.else [
    i32 61, label %if.then
    i32 63, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry
  %cmp4 = icmp eq i64 %offset, 0
  br i1 %cmp4, label %if.end, label %if.then5

if.then5:                                         ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 723, i8* getelementptr inbounds ([22 x i8]* @__FUNCTION__.store_fixed_bit_field, i64 0, i64 0)) #4
  unreachable

if.end:                                           ; preds = %if.then
  %add = add i64 %bitpos, %bitsize
  %1 = load i32* @target_flags, align 4, !tbaa !6
  %and6 = lshr i32 %1, 20
  %2 = and i32 %and6, 32
  %3 = add i32 %2, 32
  %conv302 = zext i32 %3 to i64
  %cmp9 = icmp ugt i64 %add, %conv302
  br i1 %cmp9, label %if.then11, label %if.end76

if.then11:                                        ; preds = %if.end
  tail call fastcc void @store_split_bit_field(%struct.rtx_def* %op0, i64 %bitsize, i64 %bitpos, %struct.rtx_def* %value)
  br label %if.end202

if.else:                                          ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear14 = and i32 %bf.lshr, 255
  %idxprom295 = zext i32 %bf.clear14 to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom295
  %4 = load i16* %arrayidx, align 2, !tbaa !8
  %cmp16 = icmp eq i16 %4, 0
  %.pre = load i32* @word_mode, align 4, !tbaa !1
  br i1 %cmp16, label %if.then27, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %if.else
  %idxprom22 = sext i32 %.pre to i64
  %arrayidx23 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom22
  %5 = load i16* %arrayidx23, align 2, !tbaa !8
  %cmp25 = icmp ugt i16 %4, %5
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.else, %lor.lhs.false18
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %lor.lhs.false18
  %mode.0 = phi i32 [ %.pre, %if.then27 ], [ %bf.clear14, %lor.lhs.false18 ]
  %conv29 = trunc i64 %bitsize to i32
  %mul = shl i64 %offset, 3
  %add30 = add i64 %mul, %bitpos
  %conv31 = trunc i64 %add30 to i32
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx32 to %struct.mem_attrs**
  %6 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !4
  %cmp33 = icmp eq %struct.mem_attrs* %6, null
  br i1 %cmp33, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end28
  %align = getelementptr inbounds %struct.mem_attrs* %6, i64 0, i32 4
  %7 = load i32* %align, align 4, !tbaa !17
  br label %cond.end

cond.end:                                         ; preds = %if.end28, %cond.true
  %cond38 = phi i32 [ %7, %cond.true ], [ 8, %if.end28 ]
  %bf.lshr40 = lshr i32 %bf.load, 27
  %bf.clear41 = and i32 %bf.lshr40, 1
  %call = tail call i32 @get_best_mode(i32 %conv29, i32 %conv31, i32 %cond38, i32 %mode.0, i32 %bf.clear41) #3
  %cmp42 = icmp eq i32 %call, 0
  br i1 %cmp42, label %if.then44, label %if.end47

if.then44:                                        ; preds = %cond.end
  tail call fastcc void @store_split_bit_field(%struct.rtx_def* %op0, i64 %bitsize, i64 %add30, %struct.rtx_def* %value)
  br label %if.end202

if.end47:                                         ; preds = %cond.end
  %idxprom48 = sext i32 %call to i64
  %arrayidx49 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom48
  %8 = load i16* %arrayidx49, align 2, !tbaa !8
  %conv51 = zext i16 %8 to i64
  %cmp52 = icmp ugt i64 %conv51, %bitpos
  br i1 %cmp52, label %if.end47.if.end66_crit_edge, label %if.then54

if.end47.if.end66_crit_edge:                      ; preds = %if.end47
  %div296.pre = lshr i16 %8, 3
  %conv68.pre = zext i16 %div296.pre to i64
  br label %if.end66

if.then54:                                        ; preds = %if.end47
  %div = udiv i64 %bitpos, %conv51
  %div301 = lshr i16 %8, 3
  %conv57 = zext i16 %div301 to i64
  %mul58 = mul i64 %div, %conv57
  %add59 = add i64 %mul58, %offset
  %mul65 = shl i64 %mul58, 3
  %sub = sub i64 %bitpos, %mul65
  br label %if.end66

if.end66:                                         ; preds = %if.end47.if.end66_crit_edge, %if.then54
  %conv68.pre-phi = phi i64 [ %conv68.pre, %if.end47.if.end66_crit_edge ], [ %conv57, %if.then54 ]
  %offset.addr.0 = phi i64 [ %offset, %if.end47.if.end66_crit_edge ], [ %add59, %if.then54 ]
  %bitpos.addr.0 = phi i64 [ %bitpos, %if.end47.if.end66_crit_edge ], [ %sub, %if.then54 ]
  %rem = urem i64 %offset.addr.0, %conv68.pre-phi
  %mul69 = shl nuw nsw i64 %rem, 3
  %add70 = add i64 %mul69, %bitpos.addr.0
  %sub74 = sub i64 %offset.addr.0, %rem
  %call75 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0, i32 %call, i64 %sub74, i32 1, i32 1) #3
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %call75, i64 0, i32 0
  %bf.load77.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end76

if.end76:                                         ; preds = %if.end, %if.end66
  %bf.load77 = phi i32 [ %bf.load, %if.end ], [ %bf.load77.pre, %if.end66 ]
  %bitpos.addr.1 = phi i64 [ %bitpos, %if.end ], [ %add70, %if.end66 ]
  %op0.addr.0 = phi %struct.rtx_def* [ %op0, %if.end ], [ %call75, %if.end66 ]
  %9 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.lshr78 = lshr i32 %bf.load77, 16
  %bf.clear79 = and i32 %bf.lshr78, 255
  %10 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 0
  %bf.load80 = load i32* %10, align 8
  %bf.clear81 = and i32 %bf.load80, 65535
  %cmp82 = icmp eq i32 %bf.clear81, 54
  br i1 %cmp82, label %if.then84, label %if.else115

if.then84:                                        ; preds = %if.end76
  %rtwint = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 1, i64 0, i32 0
  %11 = load i64* %rtwint, align 8, !tbaa !20
  %cmp87 = icmp ult i64 %bitsize, 64
  br i1 %cmp87, label %if.then89, label %if.end92

if.then89:                                        ; preds = %if.then84
  %shl = shl i64 1, %bitsize
  %sub90 = add nsw i64 %shl, -1
  %and91 = and i64 %11, %sub90
  br label %if.end92

if.end92:                                         ; preds = %if.then89, %if.then84
  %v.0 = phi i64 [ %and91, %if.then89 ], [ %11, %if.then84 ]
  %cmp93 = icmp eq i64 %v.0, 0
  br i1 %cmp93, label %if.end111, label %if.else96

if.else96:                                        ; preds = %if.end92
  br i1 %cmp87, label %land.lhs.true, label %lor.lhs.false103

land.lhs.true:                                    ; preds = %if.else96
  %shl99 = shl i64 1, %bitsize
  %sub100 = add nsw i64 %shl99, -1
  %cmp101 = icmp eq i64 %v.0, %sub100
  br i1 %cmp101, label %if.then109, label %lor.lhs.false103

lor.lhs.false103:                                 ; preds = %land.lhs.true, %if.else96
  %cmp104 = icmp eq i64 %bitsize, 64
  %cmp107 = icmp eq i64 %v.0, -1
  %or.cond = and i1 %cmp104, %cmp107
  br i1 %or.cond, label %if.then109, label %if.end111

if.then109:                                       ; preds = %lor.lhs.false103, %land.lhs.true
  br label %if.end111

if.end111:                                        ; preds = %if.end92, %lor.lhs.false103, %if.then109
  %all_zero.0 = phi i32 [ 0, %if.then109 ], [ 0, %lor.lhs.false103 ], [ 1, %if.end92 ]
  %all_one.0 = phi i32 [ 1, %if.then109 ], [ 0, %lor.lhs.false103 ], [ 0, %if.end92 ]
  %conv112 = trunc i64 %bitpos.addr.1 to i32
  %conv113 = trunc i64 %bitsize to i32
  %cmp.i326 = icmp slt i32 %conv113, 64
  br i1 %cmp.i326, label %if.then.i331, label %if.end.i333

if.then.i331:                                     ; preds = %if.end111
  %sh_prom.i327 = and i64 %bitsize, 4294967295
  %shl.i328 = shl i64 -1, %sh_prom.i327
  %neg.i329 = xor i64 %shl.i328, -1
  %and.i330 = and i64 %11, %neg.i329
  br label %if.end.i333

if.end.i333:                                      ; preds = %if.then.i331, %if.end111
  %v.0.i = phi i64 [ %and.i330, %if.then.i331 ], [ %11, %if.end111 ]
  %cmp1.i332 = icmp slt i32 %conv112, 64
  br i1 %cmp1.i332, label %if.then2.i334, label %if.else.i

if.then2.i334:                                    ; preds = %if.end.i333
  %sh_prom3.i = and i64 %bitpos.addr.1, 4294967295
  %shl4.i = shl i64 %v.0.i, %sh_prom3.i
  %cmp5.i = icmp sgt i32 %conv112, 0
  br i1 %cmp5.i, label %cond.true.i, label %lshift_value.exit

cond.true.i:                                      ; preds = %if.then2.i334
  %sub.i335 = sub i64 64, %bitpos.addr.1
  %sh_prom6.i = and i64 %sub.i335, 4294967295
  %shr.i336 = lshr i64 %v.0.i, %sh_prom6.i
  br label %lshift_value.exit

if.else.i:                                        ; preds = %if.end.i333
  %sub7.i = add i64 %bitpos.addr.1, 4294967232
  %sh_prom8.i = and i64 %sub7.i, 4294967295
  %shl9.i = shl i64 %v.0.i, %sh_prom8.i
  br label %lshift_value.exit

lshift_value.exit:                                ; preds = %if.then2.i334, %cond.true.i, %if.else.i
  %low.0.i = phi i64 [ 0, %if.else.i ], [ %shl4.i, %if.then2.i334 ], [ %shl4.i, %cond.true.i ]
  %high.0.i = phi i64 [ %shl9.i, %if.else.i ], [ 0, %if.then2.i334 ], [ %shr.i336, %cond.true.i ]
  %call.i337 = tail call %struct.rtx_def* @immed_double_const(i64 %low.0.i, i64 %high.0.i, i32 %bf.clear79) #3
  br label %if.end175

if.else115:                                       ; preds = %if.end76
  %bf.lshr117 = lshr i32 %bf.load80, 16
  %bf.clear118 = and i32 %bf.lshr117, 255
  %idxprom119297 = zext i32 %bf.clear118 to i64
  %arrayidx120 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom119297
  %12 = load i16* %arrayidx120, align 2, !tbaa !8
  %conv121 = zext i16 %12 to i64
  %cmp122 = icmp eq i64 %conv121, %bitsize
  br i1 %cmp122, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.else115
  %add124 = add i64 %bitpos.addr.1, %bitsize
  %idxprom125300 = zext i32 %bf.clear79 to i64
  %arrayidx126 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom125300
  %13 = load i16* %arrayidx126, align 2, !tbaa !8
  %conv127 = zext i16 %13 to i64
  %cmp128 = icmp ne i64 %add124, %conv127
  br label %land.end

land.end:                                         ; preds = %if.else115, %land.rhs
  %14 = phi i1 [ false, %if.else115 ], [ %cmp128, %land.rhs ]
  %cmp133 = icmp eq i32 %bf.clear118, %bf.clear79
  br i1 %cmp133, label %if.end162, label %if.then135

if.then135:                                       ; preds = %land.end
  switch i32 %bf.clear81, label %if.else159 [
    i32 61, label %land.lhs.true145
    i32 63, label %land.lhs.true145
  ]

land.lhs.true145:                                 ; preds = %if.then135, %if.then135
  %idxprom146298 = zext i32 %bf.clear79 to i64
  %arrayidx147 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom146298
  %15 = load i8* %arrayidx147, align 1, !tbaa !1
  %arrayidx153 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom119297
  %16 = load i8* %arrayidx153, align 1, !tbaa !1
  %cmp155 = icmp ult i8 %15, %16
  br i1 %cmp155, label %if.then157, label %if.else159

if.then157:                                       ; preds = %land.lhs.true145
  %call158 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear79, %struct.rtx_def* %value) #3
  br label %if.end162

if.else159:                                       ; preds = %if.then135, %land.lhs.true145
  %call160 = tail call %struct.rtx_def* @convert_to_mode(i32 %bf.clear79, %struct.rtx_def* %value, i32 1) #3
  br label %if.end162

if.end162:                                        ; preds = %land.end, %if.then157, %if.else159
  %value.addr.0 = phi %struct.rtx_def* [ %call158, %if.then157 ], [ %call160, %if.else159 ], [ %value, %land.end ]
  br i1 %14, label %if.then164, label %if.end168

if.then164:                                       ; preds = %if.end162
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %conv165 = trunc i64 %bitsize to i32
  %cmp1.i306 = icmp slt i32 %conv165, 64
  br i1 %cmp1.i306, label %if.end5.i314.thread, label %if.end5.i314

if.end5.i314.thread:                              ; preds = %if.then164
  %sub3.i308 = sub i64 64, %bitsize
  %sh_prom4.i309 = and i64 %sub3.i308, 4294967295
  %shr.i310 = lshr i64 -1, %sh_prom4.i309
  br label %mask_rtx.exit325

if.end5.i314:                                     ; preds = %if.then164
  %cmp14.i316 = icmp sgt i32 %conv165, 64
  br i1 %cmp14.i316, label %if.then15.i322, label %mask_rtx.exit325

if.then15.i322:                                   ; preds = %if.end5.i314
  %sub17.i318 = sub i64 128, %bitsize
  %sh_prom18.i319 = and i64 %sub17.i318, 4294967295
  %shr19.i320 = lshr i64 -1, %sh_prom18.i319
  br label %mask_rtx.exit325

mask_rtx.exit325:                                 ; preds = %if.end5.i314.thread, %if.end5.i314, %if.then15.i322
  %masklow.1.i313339 = phi i64 [ -1, %if.then15.i322 ], [ -1, %if.end5.i314 ], [ %shr.i310, %if.end5.i314.thread ]
  %maskhigh.1.i323 = phi i64 [ %shr19.i320, %if.then15.i322 ], [ 0, %if.end5.i314 ], [ 0, %if.end5.i314.thread ]
  %call.i324 = tail call %struct.rtx_def* @immed_double_const(i64 %masklow.1.i313339, i64 %maskhigh.1.i323, i32 %bf.clear79) #3
  %call167 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear79, %struct.optab* %17, %struct.rtx_def* %value.addr.0, %struct.rtx_def* %call.i324, %struct.rtx_def* null, i32 1, i32 3) #3
  br label %if.end168

if.end168:                                        ; preds = %mask_rtx.exit325, %if.end162
  %value.addr.1 = phi %struct.rtx_def* [ %call167, %mask_rtx.exit325 ], [ %value.addr.0, %if.end162 ]
  %cmp169 = icmp eq i64 %bitpos.addr.1, 0
  br i1 %cmp169, label %if.end175, label %if.then171

if.then171:                                       ; preds = %if.end168
  %call172 = tail call %union.tree_node* @build_int_2_wide(i64 %bitpos.addr.1, i64 0) #3
  %call.i303 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call172, %struct.rtx_def* null, i32 0, i32 0) #3
  %18 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i = icmp eq %struct.rtx_def* %call.i303, %18
  br i1 %cmp7.i, label %if.end175, label %for.body.i

for.body.i:                                       ; preds = %if.then171, %land.lhs.true94.i
  %try.0189.i = phi i32 [ %inc.i, %land.lhs.true94.i ], [ 0, %if.then171 ]
  switch i32 %try.0189.i, label %if.else14.i [
    i32 0, label %if.else79.i
    i32 1, label %if.then13.i
  ]

if.then13.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else14.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else79.i:                                      ; preds = %if.else14.i, %if.then13.i, %for.body.i
  %methods.0.i = phi i32 [ 2, %if.then13.i ], [ 3, %if.else14.i ], [ 0, %for.body.i ]
  %19 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call87.i = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear79, %struct.optab* %19, %struct.rtx_def* %value.addr.1, %struct.rtx_def* %call.i303, %struct.rtx_def* null, i32 1, i32 %methods.0.i) #3
  %cmp90.i = icmp eq %struct.rtx_def* %call87.i, null
  br i1 %cmp90.i, label %land.lhs.true94.i, label %if.end175

land.lhs.true94.i:                                ; preds = %if.else79.i
  %inc.i = add nsw i32 %try.0189.i, 1
  %cmp9.i = icmp slt i32 %inc.i, 3
  br i1 %cmp9.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %land.lhs.true94.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

if.end175:                                        ; preds = %if.else79.i, %if.then171, %if.end168, %lshift_value.exit
  %value.addr.2 = phi %struct.rtx_def* [ %call.i337, %lshift_value.exit ], [ %value.addr.1, %if.end168 ], [ %value.addr.1, %if.then171 ], [ %call87.i, %if.else79.i ]
  %all_zero.1 = phi i32 [ %all_zero.0, %lshift_value.exit ], [ 0, %if.end168 ], [ 0, %if.then171 ], [ 0, %if.else79.i ]
  %all_one.1 = phi i32 [ %all_one.0, %lshift_value.exit ], [ 0, %if.end168 ], [ 0, %if.then171 ], [ 0, %if.else79.i ]
  %bf.load176 = load i32* %9, align 8
  %bf.clear177 = and i32 %bf.load176, 65535
  %cmp178 = icmp ne i32 %bf.clear177, 61
  %20 = load i32* @flag_force_mem, align 4
  %tobool181 = icmp ne i32 %20, 0
  %or.cond203 = and i1 %cmp178, %tobool181
  %cond185 = select i1 %or.cond203, %struct.rtx_def* null, %struct.rtx_def* %op0.addr.0
  %tobool186 = icmp eq i32 %all_one.1, 0
  br i1 %tobool186, label %if.then187, label %if.end193

if.then187:                                       ; preds = %if.end175
  %21 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %conv188 = trunc i64 %bitpos.addr.1 to i32
  %conv189 = trunc i64 %bitsize to i32
  %cmp.i = icmp slt i32 %conv188, 64
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then187
  %sh_prom.i = and i64 %bitpos.addr.1, 4294967295
  %shl.i = shl i64 -1, %sh_prom.i
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then187
  %masklow.0.i = phi i64 [ %shl.i, %if.then.i ], [ 0, %if.then187 ]
  %add.i = add nsw i32 %conv188, %conv189
  %cmp1.i = icmp slt i32 %add.i, 64
  br i1 %cmp1.i, label %if.then2.i, label %if.end5.i

if.then2.i:                                       ; preds = %if.end.i
  %sub.i = sub i64 64, %bitsize
  %sub3.i = sub i64 %sub.i, %bitpos.addr.1
  %sh_prom4.i = and i64 %sub3.i, 4294967295
  %shr.i = lshr i64 -1, %sh_prom4.i
  %and.i = and i64 %masklow.0.i, %shr.i
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then2.i, %if.end.i
  %masklow.1.i = phi i64 [ %and.i, %if.then2.i ], [ %masklow.0.i, %if.end.i ]
  %cmp6.i = icmp slt i32 %conv188, 65
  br i1 %cmp6.i, label %if.end12.i, label %if.else8.i

if.else8.i:                                       ; preds = %if.end5.i
  %sub9.i = add i64 %bitpos.addr.1, 4294967232
  %sh_prom10.i = and i64 %sub9.i, 4294967295
  %shl11.i = shl i64 -1, %sh_prom10.i
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else8.i, %if.end5.i
  %maskhigh.0.i = phi i64 [ %shl11.i, %if.else8.i ], [ -1, %if.end5.i ]
  %cmp14.i = icmp sgt i32 %add.i, 64
  br i1 %cmp14.i, label %if.then15.i, label %mask_rtx.exit

if.then15.i:                                      ; preds = %if.end12.i
  %sub16.i = sub i64 128, %bitsize
  %sub17.i = sub i64 %sub16.i, %bitpos.addr.1
  %sh_prom18.i = and i64 %sub17.i, 4294967295
  %shr19.i = lshr i64 -1, %sh_prom18.i
  %and20.i = and i64 %maskhigh.0.i, %shr19.i
  %phitmp = xor i64 %and20.i, -1
  br label %mask_rtx.exit

mask_rtx.exit:                                    ; preds = %if.end12.i, %if.then15.i
  %maskhigh.1.i = phi i64 [ %phitmp, %if.then15.i ], [ -1, %if.end12.i ]
  %neg24.i = xor i64 %masklow.1.i, -1
  %call.i = tail call %struct.rtx_def* @immed_double_const(i64 %neg24.i, i64 %maskhigh.1.i, i32 %bf.clear79) #3
  %call191 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear79, %struct.optab* %21, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call.i, %struct.rtx_def* %cond185, i32 1, i32 3) #3
  br label %if.end193

if.end193:                                        ; preds = %if.end175, %mask_rtx.exit
  %subtarget.0 = phi %struct.rtx_def* [ %call191, %mask_rtx.exit ], [ %cond185, %if.end175 ]
  %temp.0 = phi %struct.rtx_def* [ %call191, %mask_rtx.exit ], [ %op0.addr.0, %if.end175 ]
  %tobool194 = icmp eq i32 %all_zero.1, 0
  br i1 %tobool194, label %if.then195, label %if.end197

if.then195:                                       ; preds = %if.end193
  %22 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !4
  %call196 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear79, %struct.optab* %22, %struct.rtx_def* %temp.0, %struct.rtx_def* %value.addr.2, %struct.rtx_def* %subtarget.0, i32 1, i32 3) #3
  br label %if.end197

if.end197:                                        ; preds = %if.end193, %if.then195
  %temp.1 = phi %struct.rtx_def* [ %temp.0, %if.end193 ], [ %call196, %if.then195 ]
  %cmp198 = icmp eq %struct.rtx_def* %op0.addr.0, %temp.1
  br i1 %cmp198, label %if.end202, label %if.then200

if.then200:                                       ; preds = %if.end197
  %call201 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %temp.1) #3
  br label %if.end202

if.end202:                                        ; preds = %if.end197, %if.then11, %if.then44, %if.then200
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %str_rtx, i64 %bitsize, i64 %bitnum, i32 %unsignedp, %struct.rtx_def* %target, i32 %mode, i32 %tmode, i64 %total_size) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %str_rtx, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 66
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %1 = load i32* @target_flags, align 4, !tbaa !6
  %and = lshr i32 %1, 20
  %2 = and i32 %and, 32
  %3 = add i32 %2, 32
  %phitmp = zext i32 %3 to i64
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %cond1 = phi i64 [ %phitmp, %cond.false ], [ 8, %entry ]
  %div = udiv i64 %bitnum, %cond1
  %rem = urem i64 %bitnum, %cond1
  %4 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1112, i32 3), align 8, !tbaa !10
  %mode.i = getelementptr inbounds %struct.insn_operand_data* %4, i64 0, i32 2
  %bf.load.i = load i16* %mode.i, align 8
  %cmp3.i = icmp eq i16 %bf.load.i, 0
  %5 = load i32* @word_mode, align 4, !tbaa !1
  %bf.cast.i = zext i16 %bf.load.i to i32
  %retval.0.i = select i1 %cmp3.i, i32 %5, i32 %bf.cast.i
  %6 = load %struct.insn_operand_data** getelementptr inbounds ([0 x %struct.insn_data]* @insn_data, i64 0, i64 1113, i32 3), align 8, !tbaa !10
  %mode.i1163 = getelementptr inbounds %struct.insn_operand_data* %6, i64 0, i32 2
  %bf.load.i1164 = load i16* %mode.i1163, align 8
  %cmp3.i1165 = icmp eq i16 %bf.load.i1164, 0
  %bf.cast.i1167 = zext i16 %bf.load.i1164 to i32
  %retval.0.i1169 = select i1 %cmp3.i1165, i32 %5, i32 %bf.cast.i1167
  %cmp4 = icmp sgt i64 %total_size, -1
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %div6 = lshr i64 %rem, 7
  %mul = shl nuw nsw i64 %div6, 4
  %sub = sub i64 %total_size, %mul
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %total_size.addr.0 = phi i64 [ %sub, %if.then ], [ %total_size, %cond.end ]
  %cmp7 = icmp eq i32 %tmode, 0
  %mode.tmode = select i1 %cmp7, i32 %mode, i32 %tmode
  %7 = load i32* @target_flags, align 4, !tbaa !6
  %and27 = lshr i32 %7, 23
  %8 = and i32 %and27, 4
  %9 = add i32 %8, 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %while.body
  %bf.load70 = phi i32 [ %bf.load11.pre, %while.body ], [ %bf.load, %if.end ]
  %op0.0 = phi %struct.rtx_def* [ %12, %while.body ], [ %str_rtx, %if.end ]
  %offset.0 = phi i64 [ %add, %while.body ], [ %div, %if.end ]
  %10 = getelementptr inbounds %struct.rtx_def* %op0.0, i64 0, i32 0
  %bf.clear12 = and i32 %bf.load70, 65535
  switch i32 %bf.clear12, label %if.end69.loopexit [
    i32 63, label %while.body
    i32 61, label %land.lhs.true
  ]

while.body:                                       ; preds = %while.cond
  %fld = getelementptr inbounds %struct.rtx_def* %op0.0, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %op0.0, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx26 to i32*
  %11 = load i32* %rtuint, align 4, !tbaa !6
  %div30 = udiv i32 %11, %9
  %conv31 = zext i32 %div30 to i64
  %add = add i64 %conv31, %offset.0
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 0
  %bf.load11.pre = load i32* %.phi.trans.insert, align 8
  br label %while.cond

land.lhs.true:                                    ; preds = %while.cond
  %bf.lshr52 = lshr i32 %bf.load70, 16
  %bf.clear53 = and i32 %bf.lshr52, 255
  %cmp54 = icmp eq i32 %bf.clear53, %mode
  %cmp57 = icmp eq i64 %bitnum, 0
  %or.cond = and i1 %cmp54, %cmp57
  br i1 %or.cond, label %land.lhs.true59, label %if.end69

land.lhs.true59:                                  ; preds = %land.lhs.true
  %idxprom631158 = zext i32 %mode to i64
  %arrayidx64 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom631158
  %13 = load i16* %arrayidx64, align 2, !tbaa !8
  %conv65 = zext i16 %13 to i64
  %cmp66 = icmp eq i64 %conv65, %bitsize
  br i1 %cmp66, label %return, label %if.end69

if.end69.loopexit:                                ; preds = %while.cond
  %bf.lshr71.pre = lshr i32 %bf.load70, 16
  %bf.clear72.pre = and i32 %bf.lshr71.pre, 255
  br label %if.end69

if.end69:                                         ; preds = %if.end69.loopexit, %land.lhs.true59, %land.lhs.true
  %bf.clear72.pre-phi = phi i32 [ %bf.clear72.pre, %if.end69.loopexit ], [ %mode, %land.lhs.true59 ], [ %bf.clear53, %land.lhs.true ]
  %call73 = tail call i32 @int_mode_for_mode(i32 %bf.clear72.pre-phi) #3
  %bf.load74 = load i32* %10, align 8
  %bf.lshr75 = lshr i32 %bf.load74, 16
  %bf.clear76 = and i32 %bf.lshr75, 255
  %cmp77 = icmp eq i32 %call73, %bf.clear76
  br i1 %cmp77, label %if.end93, label %if.then79

if.then79:                                        ; preds = %if.end69
  %bf.clear81 = and i32 %bf.load74, 65535
  %cmp82 = icmp eq i32 %bf.clear81, 66
  br i1 %cmp82, label %if.then84, label %if.else

if.then84:                                        ; preds = %if.then79
  %call85 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.0, i32 %call73, i64 0, i32 1, i32 1) #3
  br label %if.end93

if.else:                                          ; preds = %if.then79
  %cmp86 = icmp eq i32 %call73, 51
  br i1 %cmp86, label %if.else90, label %if.then88

if.then88:                                        ; preds = %if.else
  %call89 = tail call %struct.rtx_def* @gen_lowpart(i32 %call73, %struct.rtx_def* %op0.0) #3
  br label %if.end93

if.else90:                                        ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1077, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.extract_bit_field, i64 0, i64 0)) #4
  unreachable

if.end93:                                         ; preds = %if.end69, %if.then84, %if.then88
  %op0.1 = phi %struct.rtx_def* [ %call85, %if.then84 ], [ %call89, %if.then88 ], [ %op0.0, %if.end69 ]
  %14 = getelementptr inbounds %struct.rtx_def* %op0.1, i64 0, i32 0
  %bf.load94 = load i32* %14, align 8
  %bf.clear95 = and i32 %bf.load94, 65535
  %cmp96 = icmp eq i32 %bf.clear95, 66
  br i1 %cmp96, label %if.then98, label %if.end100

if.then98:                                        ; preds = %if.end93
  %call99 = tail call %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def* %op0.1) #3
  tail call void @set_mem_alias_set(%struct.rtx_def* %call99, i64 0) #3
  tail call void @set_mem_expr(%struct.rtx_def* %call99, %union.tree_node* null) #3
  br label %if.end100

if.end100:                                        ; preds = %if.then98, %if.end93
  %op0.2 = phi %struct.rtx_def* [ %call99, %if.then98 ], [ %op0.1, %if.end93 ]
  %15 = load i32* @target_flags, align 4, !tbaa !6
  %and101 = and i32 %15, 33554432
  %16 = lshr exact i32 %and101, 20
  %17 = add i32 %16, 32
  %conv1041144 = zext i32 %17 to i64
  %18 = add i64 %conv1041144, 34359738367
  %rem105 = and i64 %18, %bitnum
  %div106 = lshr i64 %rem105, 3
  %19 = lshr exact i32 %and101, 23
  %20 = add i32 %19, 4
  %conv1101145 = zext i32 %20 to i64
  %mul111 = mul i64 %conv1101145, %offset.0
  %add112 = add i64 %div106, %mul111
  %conv113 = trunc i64 %add112 to i32
  %idxprom114 = sext i32 %mode.tmode to i64
  %arrayidx115 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom114
  %21 = load i32* %arrayidx115, align 4, !tbaa !1
  %.off = add i32 %21, -7
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %cond.end128, label %cond.false123

cond.false123:                                    ; preds = %if.end100
  %conv124 = trunc i64 %bitsize to i32
  %call127 = tail call i32 @mode_for_size(i32 %conv124, i32 %21, i32 0) #3
  br label %cond.end128

cond.end128:                                      ; preds = %if.end100, %cond.false123
  %cond129 = phi i32 [ %call127, %cond.false123 ], [ %mode, %if.end100 ]
  %22 = getelementptr inbounds %struct.rtx_def* %op0.2, i64 0, i32 0
  %bf.load130 = load i32* %22, align 8
  %bf.clear131 = and i32 %bf.load130, 65535
  %cmp132 = icmp eq i32 %bf.clear131, 66
  br i1 %cmp132, label %land.lhs.true152, label %land.lhs.true134

land.lhs.true134:                                 ; preds = %cond.end128
  %idxprom135 = sext i32 %cond129 to i64
  %arrayidx136 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom135
  %23 = load i8* %arrayidx136, align 1, !tbaa !1
  %cmp138 = icmp eq i8 %23, 0
  br i1 %cmp138, label %if.end244, label %land.lhs.true140

land.lhs.true140:                                 ; preds = %land.lhs.true134
  %conv137 = zext i8 %23 to i32
  %rem144 = srem i32 %conv113, %conv137
  %cmp145 = icmp eq i32 %rem144, 0
  br i1 %cmp145, label %land.lhs.true152, label %if.end244

land.lhs.true152:                                 ; preds = %cond.end128, %land.lhs.true140
  %24 = load i32* @target_flags, align 4, !tbaa !6
  %and153 = lshr i32 %24, 20
  %25 = and i32 %and153, 32
  %26 = add i32 %25, 32
  %conv1561157 = zext i32 %26 to i64
  %cmp157 = icmp ugt i64 %conv1561157, %bitsize
  br i1 %cmp157, label %lor.lhs.false173, label %land.lhs.true159

land.lhs.true159:                                 ; preds = %land.lhs.true152
  %idxprom160 = sext i32 %mode to i64
  %arrayidx161 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom160
  %27 = load i16* %arrayidx161, align 2, !tbaa !8
  %conv162 = zext i16 %27 to i64
  %cmp163 = icmp eq i64 %conv162, %bitsize
  br i1 %cmp163, label %land.lhs.true165, label %lor.lhs.false173

land.lhs.true165:                                 ; preds = %land.lhs.true159
  %28 = add i64 %conv1561157, 4294967295
  %rem170 = and i64 %28, %rem
  %cmp171 = icmp eq i64 %rem170, 0
  br i1 %cmp171, label %if.then192, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %land.lhs.true152, %land.lhs.true165, %land.lhs.true159
  %conv174 = trunc i64 %bitsize to i32
  %call177 = tail call i32 @mode_for_size(i32 %conv174, i32 %21, i32 0) #3
  %cmp178 = icmp ne i32 %call177, 51
  %cmp190 = icmp eq i64 %rem, 0
  %or.cond865 = and i1 %cmp178, %cmp190
  br i1 %or.cond865, label %lor.lhs.false173.if.then192_crit_edge, label %if.end244

lor.lhs.false173.if.then192_crit_edge:            ; preds = %lor.lhs.false173
  %bf.load193.pre = load i32* %22, align 8
  br label %if.then192

if.then192:                                       ; preds = %lor.lhs.false173.if.then192_crit_edge, %land.lhs.true165
  %bf.load193 = phi i32 [ %bf.load193.pre, %lor.lhs.false173.if.then192_crit_edge ], [ %bf.load130, %land.lhs.true165 ]
  %bf.lshr194 = lshr i32 %bf.load193, 16
  %bf.clear195 = and i32 %bf.lshr194, 255
  %cmp196 = icmp eq i32 %cond129, %bf.clear195
  br i1 %cmp196, label %if.end238, label %if.then198

if.then198:                                       ; preds = %if.then192
  %bf.clear200 = and i32 %bf.load193, 65535
  %cmp201 = icmp eq i32 %bf.clear200, 63
  br i1 %cmp201, label %if.then203, label %if.end228

if.then203:                                       ; preds = %if.then198
  %arrayidx205 = getelementptr inbounds %struct.rtx_def* %op0.2, i64 0, i32 1, i64 0
  %rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx206, align 8, !tbaa !4
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load207 = load i32* %30, align 8
  %bf.lshr208 = lshr i32 %bf.load207, 16
  %bf.clear209 = and i32 %bf.lshr208, 255
  %cmp210 = icmp eq i32 %bf.clear209, %cond129
  br i1 %cmp210, label %if.end228, label %lor.lhs.false212

lor.lhs.false212:                                 ; preds = %if.then203
  %idxprom213 = sext i32 %cond129 to i64
  %arrayidx214 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom213
  %31 = load i32* %arrayidx214, align 4, !tbaa !1
  switch i32 %31, label %if.else226 [
    i32 1, label %if.end228
    i32 3, label %if.end228
  ]

if.else226:                                       ; preds = %lor.lhs.false212
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1147, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.extract_bit_field, i64 0, i64 0)) #4
  unreachable

if.end228:                                        ; preds = %if.then203, %lor.lhs.false212, %lor.lhs.false212, %if.then198
  %bf.load229 = phi i32 [ %bf.load193, %if.then198 ], [ %bf.load207, %lor.lhs.false212 ], [ %bf.load207, %lor.lhs.false212 ], [ %bf.load207, %if.then203 ]
  %op0.3 = phi %struct.rtx_def* [ %op0.2, %if.then198 ], [ %29, %lor.lhs.false212 ], [ %29, %lor.lhs.false212 ], [ %29, %if.then203 ]
  %bf.clear230 = and i32 %bf.load229, 65535
  %cmp231 = icmp eq i32 %bf.clear230, 61
  br i1 %cmp231, label %if.then233, label %if.else235

if.then233:                                       ; preds = %if.end228
  %call234 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %cond129, %struct.rtx_def* %op0.3, i32 %conv113) #3
  br label %if.end238

if.else235:                                       ; preds = %if.end228
  %call236 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.3, i32 %cond129, i64 %offset.0, i32 1, i32 1) #3
  br label %if.end238

if.end238:                                        ; preds = %if.then192, %if.then233, %if.else235
  %op0.4 = phi %struct.rtx_def* [ %call234, %if.then233 ], [ %call236, %if.else235 ], [ %op0.2, %if.then192 ]
  %cmp239 = icmp eq i32 %cond129, %mode
  br i1 %cmp239, label %return, label %if.then241

if.then241:                                       ; preds = %if.end238
  %call242 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode.tmode, %struct.rtx_def* %op0.4, i32 %unsignedp) #3
  br label %return

if.end244:                                        ; preds = %land.lhs.true140, %land.lhs.true134, %lor.lhs.false173
  %32 = load i32* @target_flags, align 4, !tbaa !6
  %and245 = lshr i32 %32, 20
  %33 = and i32 %and245, 32
  %34 = add i32 %33, 32
  %conv2481161 = zext i32 %34 to i64
  %cmp249 = icmp ult i64 %conv2481161, %bitsize
  br i1 %cmp249, label %if.then251, label %if.end370

if.then251:                                       ; preds = %if.end244
  %sub2551154 = or i32 %33, 31
  %conv2561155 = zext i32 %sub2551154 to i64
  %add257 = add i64 %conv2561155, %bitsize
  %div262 = udiv i64 %add257, %conv2481161
  %conv263 = trunc i64 %div262 to i32
  %cmp264 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp264, label %if.then271, label %lor.lhs.false266

lor.lhs.false266:                                 ; preds = %if.then251
  %35 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load267 = load i32* %35, align 8
  %bf.clear268 = and i32 %bf.load267, 65535
  %cmp269 = icmp eq i32 %bf.clear268, 61
  br i1 %cmp269, label %if.end273, label %if.then271

if.then271:                                       ; preds = %lor.lhs.false266, %if.then251
  %call272 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end273

if.end273:                                        ; preds = %lor.lhs.false266, %if.then271
  %target.addr.0 = phi %struct.rtx_def* [ %call272, %if.then271 ], [ %target, %lor.lhs.false266 ]
  %call274 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 49, i32 0, %struct.rtx_def* %target.addr.0) #3
  %call275 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call274) #3
  %cmp2761221 = icmp eq i32 %conv263, 0
  br i1 %cmp2761221, label %for.end, label %for.body

for.body:                                         ; preds = %if.end273, %for.inc
  %i.01222 = phi i32 [ %inc, %for.inc ], [ 0, %if.end273 ]
  %36 = load i32* @target_flags, align 4, !tbaa !6
  %and278 = lshr i32 %36, 20
  %37 = and i32 %and278, 32
  %38 = add i32 %37, 32
  %mul281 = mul nsw i32 %38, %i.01222
  %call282 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.0, i32 %i.01222, i32 1, i32 0) #3
  %39 = load i32* @target_flags, align 4, !tbaa !6
  %and283 = lshr i32 %39, 20
  %40 = and i32 %and283, 32
  %41 = add i32 %40, 32
  %conv286 = sext i32 %41 to i64
  %mul290 = mul i32 %41, %i.01222
  %conv291 = zext i32 %mul290 to i64
  %sub292 = sub i64 %bitsize, %conv291
  %cmp293 = icmp ult i64 %conv286, %sub292
  %conv286.sub292 = select i1 %cmp293, i64 %conv286, i64 %sub292
  %conv309 = zext i32 %mul281 to i64
  %add310 = add i64 %conv309, %bitnum
  %42 = load i32* @word_mode, align 4, !tbaa !1
  %call311 = tail call %struct.rtx_def* @extract_bit_field(%struct.rtx_def* %op0.2, i64 %conv286.sub292, i64 %add310, i32 1, %struct.rtx_def* %call282, i32 %mode, i32 %42, i64 %total_size.addr.0)
  %cmp312 = icmp eq %struct.rtx_def* %call282, null
  br i1 %cmp312, label %if.then314, label %if.end315

if.then314:                                       ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1199, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.extract_bit_field, i64 0, i64 0)) #4
  unreachable

if.end315:                                        ; preds = %for.body
  %cmp316 = icmp eq %struct.rtx_def* %call311, %call282
  br i1 %cmp316, label %for.inc, label %if.then318

if.then318:                                       ; preds = %if.end315
  %call319 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call282, %struct.rtx_def* %call311) #3
  br label %for.inc

for.inc:                                          ; preds = %if.end315, %if.then318
  %inc = add i32 %i.01222, 1
  %cmp276 = icmp ult i32 %inc, %conv263
  br i1 %cmp276, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %if.end273
  %tobool321 = icmp eq i32 %unsignedp, 0
  br i1 %tobool321, label %if.end357, label %if.then322

if.then322:                                       ; preds = %for.end
  %43 = getelementptr inbounds %struct.rtx_def* %target.addr.0, i64 0, i32 0
  %bf.load323 = load i32* %43, align 8
  %bf.lshr324 = lshr i32 %bf.load323, 16
  %bf.clear325 = and i32 %bf.lshr324, 255
  %idxprom3261156 = zext i32 %bf.clear325 to i64
  %arrayidx327 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom3261156
  %44 = load i8* %arrayidx327, align 1, !tbaa !1
  %conv328 = zext i8 %44 to i32
  %45 = load i32* @target_flags, align 4, !tbaa !6
  %and329 = lshr i32 %45, 23
  %46 = and i32 %and329, 4
  %47 = add i32 %46, 4
  %mul332 = mul i32 %47, %conv263
  %cmp333 = icmp ugt i32 %conv328, %mul332
  br i1 %cmp333, label %if.then335, label %return

if.then335:                                       ; preds = %if.then322
  %div346 = sdiv i32 %conv328, %47
  %cmp3481219 = icmp ult i32 %conv263, %div346
  br i1 %cmp3481219, label %for.body350, label %return

for.body350:                                      ; preds = %if.then335, %for.body350
  %i336.01220 = phi i32 [ %inc354, %for.body350 ], [ %conv263, %if.then335 ]
  %call351 = tail call %struct.rtx_def* @operand_subword(%struct.rtx_def* %target.addr.0, i32 %i336.01220, i32 1, i32 0) #3
  %48 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call352 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call351, %struct.rtx_def* %48) #3
  %inc354 = add i32 %i336.01220, 1
  %exitcond = icmp eq i32 %inc354, %div346
  br i1 %exitcond, label %return, label %for.body350

if.end357:                                        ; preds = %for.end
  %idxprom358 = sext i32 %mode to i64
  %arrayidx359 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom358
  %49 = load i16* %arrayidx359, align 2, !tbaa !8
  %conv360 = zext i16 %49 to i64
  %sub361 = sub i64 %conv360, %bitsize
  %call362 = tail call %union.tree_node* @build_int_2_wide(i64 %sub361, i64 0) #3
  %call.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call362, %struct.rtx_def* null, i32 0, i32 0) #3
  %50 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i = icmp eq %struct.rtx_def* %call.i, %50
  br i1 %cmp7.i, label %expand_shift.exit, label %for.body.i

for.body.i:                                       ; preds = %if.end357, %if.else79.i
  %try.0189.i = phi i32 [ %inc.i, %if.else79.i ], [ 0, %if.end357 ]
  switch i32 %try.0189.i, label %if.else14.i [
    i32 0, label %if.else79.i
    i32 1, label %if.then13.i
  ]

if.then13.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else14.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else79.i:                                      ; preds = %if.else14.i, %if.then13.i, %for.body.i
  %methods.0.i = phi i32 [ 2, %if.then13.i ], [ 3, %if.else14.i ], [ 0, %for.body.i ]
  %51 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call109.i = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %51, %struct.rtx_def* %target.addr.0, %struct.rtx_def* %call.i, %struct.rtx_def* null, i32 0, i32 %methods.0.i) #3
  %inc.i = add nsw i32 %try.0189.i, 1
  %cmp8.i = icmp eq %struct.rtx_def* %call109.i, null
  %cmp9.i = icmp slt i32 %inc.i, 3
  %or.cond116.i = and i1 %cmp8.i, %cmp9.i
  br i1 %or.cond116.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %if.else79.i
  br i1 %cmp8.i, label %if.then113.i, label %expand_shift.exit

if.then113.i:                                     ; preds = %for.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit:                                ; preds = %if.end357, %for.end.i
  %retval.0.i1171 = phi %struct.rtx_def* [ %target.addr.0, %if.end357 ], [ %call109.i, %for.end.i ]
  %call368 = tail call %union.tree_node* @build_int_2_wide(i64 %sub361, i64 0) #3
  %call.i1172 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call368, %struct.rtx_def* null, i32 0, i32 0) #3
  %52 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i1173 = icmp eq %struct.rtx_def* %call.i1172, %52
  br i1 %cmp7.i1173, label %return, label %for.body.i1179

for.body.i1179:                                   ; preds = %expand_shift.exit, %if.else79.i1183
  %try.0189.i1178 = phi i32 [ %inc.i1186, %if.else79.i1183 ], [ 0, %expand_shift.exit ]
  switch i32 %try.0189.i1178, label %if.else14.i1181 [
    i32 0, label %if.else79.i1183
    i32 1, label %if.then13.i1180
  ]

if.then13.i1180:                                  ; preds = %for.body.i1179
  br label %if.else79.i1183

if.else14.i1181:                                  ; preds = %for.body.i1179
  br label %if.else79.i1183

if.else79.i1183:                                  ; preds = %if.else14.i1181, %if.then13.i1180, %for.body.i1179
  %methods.0.i1182 = phi i32 [ 2, %if.then13.i1180 ], [ 3, %if.else14.i1181 ], [ 0, %for.body.i1179 ]
  %53 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i1185 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %53, %struct.rtx_def* %retval.0.i1171, %struct.rtx_def* %call.i1172, %struct.rtx_def* null, i32 0, i32 %methods.0.i1182) #3
  %inc.i1186 = add nsw i32 %try.0189.i1178, 1
  %cmp8.i1187 = icmp eq %struct.rtx_def* %call109.i1185, null
  %cmp9.i1188 = icmp slt i32 %inc.i1186, 3
  %or.cond116.i1189 = and i1 %cmp8.i1187, %cmp9.i1188
  br i1 %or.cond116.i1189, label %for.body.i1179, label %for.end.i1190

for.end.i1190:                                    ; preds = %if.else79.i1183
  br i1 %cmp8.i1187, label %if.then113.i1191, label %return

if.then113.i1191:                                 ; preds = %for.end.i1190
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

if.end370:                                        ; preds = %if.end244
  %call371 = tail call i32 @int_mode_for_mode(i32 %mode.tmode) #3
  %cmp372 = icmp eq i32 %call371, 51
  br i1 %cmp372, label %if.end376, label %if.end380

if.end376:                                        ; preds = %if.end370
  %call375 = tail call i32 @int_mode_for_mode(i32 %mode) #3
  %cmp377 = icmp eq i32 %call375, 51
  br i1 %cmp377, label %if.then379, label %if.end380

if.then379:                                       ; preds = %if.end376
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 1244, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.extract_bit_field, i64 0, i64 0)) #4
  unreachable

if.end380:                                        ; preds = %if.end370, %if.end376
  %int_mode.01211 = phi i32 [ %call375, %if.end376 ], [ %call371, %if.end370 ]
  %bf.load381 = load i32* %22, align 8
  %bf.clear382 = and i32 %bf.load381, 65535
  %cmp383 = icmp eq i32 %bf.clear382, 66
  br i1 %cmp383, label %if.else420, label %if.then385

if.then385:                                       ; preds = %if.end380
  %cmp386 = icmp eq i64 %offset.0, 0
  br i1 %cmp386, label %lor.lhs.false388, label %if.then400

lor.lhs.false388:                                 ; preds = %if.then385
  %bf.lshr390 = lshr i32 %bf.load381, 16
  %bf.clear391 = and i32 %bf.lshr390, 255
  %idxprom3921152 = zext i32 %bf.clear391 to i64
  %arrayidx393 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom3921152
  %54 = load i8* %arrayidx393, align 1, !tbaa !1
  %conv394 = zext i8 %54 to i32
  %55 = load i32* @target_flags, align 4, !tbaa !6
  %and395 = lshr i32 %55, 23
  %56 = and i32 %and395, 4
  %57 = add i32 %56, 4
  %cmp398 = icmp ugt i32 %conv394, %57
  br i1 %cmp398, label %if.then400, label %if.end422

if.then400:                                       ; preds = %if.then385, %lor.lhs.false388
  %cmp403 = icmp eq i32 %bf.clear382, 61
  br i1 %cmp403, label %if.end407, label %if.then405

if.then405:                                       ; preds = %if.then400
  %call406 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %op0.2) #3
  br label %if.end407

if.end407:                                        ; preds = %if.then400, %if.then405
  %op0.5 = phi %struct.rtx_def* [ %call406, %if.then405 ], [ %op0.2, %if.then400 ]
  %58 = load i32* @target_flags, align 4, !tbaa !6
  %and408 = lshr i32 %58, 20
  %59 = and i32 %and408, 32
  %60 = add i32 %59, 32
  %call411 = tail call i32 @mode_for_size(i32 %60, i32 1, i32 0) #3
  %61 = load i32* @target_flags, align 4, !tbaa !6
  %and412 = lshr i32 %61, 23
  %62 = and i32 %and412, 4
  %63 = add i32 %62, 4
  %conv4151153 = zext i32 %63 to i64
  %mul416 = mul i64 %conv4151153, %offset.0
  %conv417 = trunc i64 %mul416 to i32
  %call418 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %call411, %struct.rtx_def* %op0.5, i32 %conv417) #3
  br label %if.end422

if.else420:                                       ; preds = %if.end380
  %call421 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %str_rtx, i32 1) #3
  br label %if.end422

if.end422:                                        ; preds = %lor.lhs.false388, %if.end407, %if.else420
  %op0.7 = phi %struct.rtx_def* [ %call421, %if.else420 ], [ %call418, %if.end407 ], [ %op0.2, %lor.lhs.false388 ]
  %offset.1 = phi i64 [ %offset.0, %if.else420 ], [ 0, %if.end407 ], [ 0, %lor.lhs.false388 ]
  %tobool423 = icmp eq i32 %unsignedp, 0
  br i1 %tobool423, label %if.else613, label %if.then424

if.then424:                                       ; preds = %if.end422
  %idxprom425 = sext i32 %retval.0.i1169 to i64
  %arrayidx426 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom425
  %64 = load i16* %arrayidx426, align 2, !tbaa !8
  %conv427 = zext i16 %64 to i64
  %cmp428 = icmp ult i64 %conv427, %bitsize
  br i1 %cmp428, label %extzv_loses, label %land.lhs.true430

land.lhs.true430:                                 ; preds = %if.then424
  %65 = getelementptr inbounds %struct.rtx_def* %op0.7, i64 0, i32 0
  %bf.load431 = load i32* %65, align 8
  %bf.clear432 = and i32 %bf.load431, 65535
  switch i32 %bf.clear432, label %if.then447 [
    i32 61, label %land.lhs.true440
    i32 63, label %land.lhs.true440
  ]

land.lhs.true440:                                 ; preds = %land.lhs.true430, %land.lhs.true430
  %add441 = add i64 %rem, %bitsize
  %cmp445 = icmp ugt i64 %add441, %conv427
  br i1 %cmp445, label %extzv_loses, label %if.then447

if.then447:                                       ; preds = %land.lhs.true430, %land.lhs.true440
  %call448 = tail call %struct.rtx_def* @get_last_insn() #3
  %bf.load.i1195 = load i16* %mode.i1163, align 8
  %cmp3.i1196 = icmp eq i16 %bf.load.i1195, 0
  %66 = load i32* @word_mode, align 4, !tbaa !1
  %bf.cast.i1198 = zext i16 %bf.load.i1195 to i32
  %retval.0.i1200 = select i1 %cmp3.i1196, i32 %66, i32 %bf.cast.i1198
  %bf.load450 = load i32* %65, align 8
  %bf.clear451 = and i32 %bf.load450, 65535
  %cmp452 = icmp eq i32 %bf.clear451, 66
  br i1 %cmp452, label %if.then454, label %if.end522

if.then454:                                       ; preds = %if.then447
  %67 = load i32* @volatile_ok, align 4, !tbaa !6
  store i32 1, i32* @volatile_ok, align 4, !tbaa !6
  %predicate = getelementptr inbounds %struct.insn_operand_data* %6, i64 1, i32 0
  %68 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %bf.load456 = load i32* %65, align 8
  %bf.lshr457 = lshr i32 %bf.load456, 16
  %bf.clear458 = and i32 %bf.lshr457, 255
  %call459 = tail call i32 %68(%struct.rtx_def* %op0.7, i32 %bf.clear458) #3
  %tobool460 = icmp eq i32 %call459, 0
  br i1 %tobool460, label %if.then461, label %if.else519

if.then461:                                       ; preds = %if.then454
  %bf.load462 = load i32* %65, align 8
  %bf.lshr463 = lshr i32 %bf.load462, 16
  %bf.clear464 = and i32 %bf.lshr463, 255
  %cmp465 = icmp eq i32 %bf.clear464, 51
  br i1 %cmp465, label %if.then479, label %lor.lhs.false467

lor.lhs.false467:                                 ; preds = %if.then461
  %idxprom4711151 = zext i32 %bf.clear464 to i64
  %arrayidx472 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom4711151
  %69 = load i8* %arrayidx472, align 1, !tbaa !1
  %idxprom474 = sext i32 %retval.0.i1200 to i64
  %arrayidx475 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom474
  %70 = load i8* %arrayidx475, align 1, !tbaa !1
  %cmp477 = icmp ugt i8 %69, %70
  br i1 %cmp477, label %if.then479, label %if.end501

if.then479:                                       ; preds = %lor.lhs.false467, %if.then461
  %conv480 = trunc i64 %bitsize to i32
  %conv481 = trunc i64 %bitnum to i32
  %arrayidx483 = getelementptr inbounds %struct.rtx_def* %op0.7, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx483 to %struct.mem_attrs**
  %71 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !4
  %cmp484 = icmp eq %struct.mem_attrs* %71, null
  br i1 %cmp484, label %cond.end491, label %cond.true486

cond.true486:                                     ; preds = %if.then479
  %align = getelementptr inbounds %struct.mem_attrs* %71, i64 0, i32 4
  %72 = load i32* %align, align 4, !tbaa !17
  br label %cond.end491

cond.end491:                                      ; preds = %if.then479, %cond.true486
  %cond492 = phi i32 [ %72, %cond.true486 ], [ 8, %if.then479 ]
  %bf.lshr494 = lshr i32 %bf.load462, 27
  %bf.clear495 = and i32 %bf.lshr494, 1
  %call496 = tail call i32 @get_best_mode(i32 %conv480, i32 %conv481, i32 %cond492, i32 %retval.0.i1200, i32 %bf.clear495) #3
  br label %if.end501

if.end501:                                        ; preds = %lor.lhs.false467, %cond.end491
  %bestmode.0 = phi i32 [ %call496, %cond.end491 ], [ %bf.clear464, %lor.lhs.false467 ]
  %cmp502 = icmp eq i32 %bestmode.0, 0
  br i1 %cmp502, label %extzv_loses, label %if.end505

if.end505:                                        ; preds = %if.end501
  %idxprom506 = sext i32 %bestmode.0 to i64
  %arrayidx507 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom506
  %73 = load i16* %arrayidx507, align 2, !tbaa !8
  %conv509 = zext i16 %73 to i64
  %div510 = udiv i64 %bitnum, %conv509
  %arrayidx512 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom506
  %74 = load i8* %arrayidx512, align 1, !tbaa !1
  %conv513 = zext i8 %74 to i64
  %mul514 = mul i64 %conv513, %div510
  %rem516 = urem i64 %bitnum, %conv509
  %call517 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.7, i32 %bestmode.0, i64 %mul514, i32 1, i32 1) #3
  %call518 = tail call %struct.rtx_def* @force_reg(i32 %bestmode.0, %struct.rtx_def* %call517) #3
  br label %if.end521

if.else519:                                       ; preds = %if.then454
  %75 = load i32* @byte_mode, align 4, !tbaa !1
  %call520 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.7, i32 %75, i64 %offset.1, i32 1, i32 1) #3
  br label %if.end521

if.end521:                                        ; preds = %if.else519, %if.end505
  %xbitpos.0 = phi i64 [ %rem, %if.else519 ], [ %rem516, %if.end505 ]
  %xop0.0 = phi %struct.rtx_def* [ %call520, %if.else519 ], [ %call518, %if.end505 ]
  store i32 %67, i32* @volatile_ok, align 4, !tbaa !6
  %.phi.trans.insert1233 = getelementptr inbounds %struct.rtx_def* %xop0.0, i64 0, i32 0
  %bf.load523.pre = load i32* %.phi.trans.insert1233, align 8
  br label %if.end522

if.end522:                                        ; preds = %if.end521, %if.then447
  %bf.load535 = phi i32 [ %bf.load523.pre, %if.end521 ], [ %bf.load450, %if.then447 ]
  %xbitpos.1 = phi i64 [ %xbitpos.0, %if.end521 ], [ %rem, %if.then447 ]
  %xop0.1 = phi %struct.rtx_def* [ %xop0.0, %if.end521 ], [ %op0.7, %if.then447 ]
  %bf.clear524 = and i32 %bf.load535, 65535
  switch i32 %bf.clear524, label %if.end547 [
    i32 63, label %land.lhs.true527
    i32 61, label %land.lhs.true539
  ]

land.lhs.true527:                                 ; preds = %if.end522
  %bf.lshr529 = lshr i32 %bf.load535, 16
  %bf.clear530 = and i32 %bf.lshr529, 255
  %cmp531 = icmp eq i32 %bf.clear530, %retval.0.i1200
  br i1 %cmp531, label %if.end547, label %extzv_loses

land.lhs.true539:                                 ; preds = %if.end522
  %bf.lshr541 = lshr i32 %bf.load535, 16
  %bf.clear542 = and i32 %bf.lshr541, 255
  %cmp543 = icmp eq i32 %bf.clear542, %retval.0.i1200
  br i1 %cmp543, label %if.end547, label %if.then545

if.then545:                                       ; preds = %land.lhs.true539
  %call546 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %retval.0.i1200, %struct.rtx_def* %xop0.1, i32 0) #3
  br label %if.end547

if.end547:                                        ; preds = %if.end522, %land.lhs.true527, %land.lhs.true539, %if.then545
  %xop0.2 = phi %struct.rtx_def* [ %call546, %if.then545 ], [ %xop0.1, %land.lhs.true539 ], [ %xop0.1, %land.lhs.true527 ], [ %xop0.1, %if.end522 ]
  %idxprom548 = sext i32 %retval.0.i1200 to i64
  %cmp551 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp551, label %if.then560, label %lor.lhs.false553

lor.lhs.false553:                                 ; preds = %if.end547
  %76 = load i32* @flag_force_mem, align 4, !tbaa !6
  %tobool554 = icmp eq i32 %76, 0
  br i1 %tobool554, label %if.end562, label %land.lhs.true555

land.lhs.true555:                                 ; preds = %lor.lhs.false553
  %77 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load556 = load i32* %77, align 8
  %bf.clear557 = and i32 %bf.load556, 65535
  %cmp558 = icmp eq i32 %bf.clear557, 66
  br i1 %cmp558, label %if.then560, label %if.end562

if.then560:                                       ; preds = %land.lhs.true555, %if.end547
  %call561 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.tmode) #3
  br label %if.end562

if.end562:                                        ; preds = %lor.lhs.false553, %if.then560, %land.lhs.true555
  %xtarget.0 = phi %struct.rtx_def* [ %call561, %if.then560 ], [ %target, %land.lhs.true555 ], [ %target, %lor.lhs.false553 ]
  %78 = getelementptr inbounds %struct.rtx_def* %xtarget.0, i64 0, i32 0
  %bf.load563 = load i32* %78, align 8
  %bf.lshr564 = lshr i32 %bf.load563, 16
  %bf.clear565 = and i32 %bf.lshr564, 255
  %cmp566 = icmp eq i32 %bf.clear565, %retval.0.i1200
  br i1 %cmp566, label %if.end592, label %if.then568

if.then568:                                       ; preds = %if.end562
  %bf.clear570 = and i32 %bf.load563, 65535
  %cmp571 = icmp eq i32 %bf.clear570, 61
  br i1 %cmp571, label %if.then573, label %if.else589

if.then573:                                       ; preds = %if.then568
  %arrayidx575 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom548
  %79 = load i8* %arrayidx575, align 1, !tbaa !1
  %idxprom5801150 = zext i32 %bf.clear565 to i64
  %arrayidx581 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom5801150
  %80 = load i8* %arrayidx581, align 1, !tbaa !1
  %cmp583 = icmp ugt i8 %79, %80
  %call585 = tail call %struct.rtx_def* @gen_lowpart(i32 %retval.0.i1200, %struct.rtx_def* %xtarget.0) #3
  %call585. = select i1 %cmp583, %struct.rtx_def* %call585, %struct.rtx_def* null
  br label %if.end592

if.else589:                                       ; preds = %if.then568
  %call590 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %retval.0.i1200) #3
  br label %if.end592

if.end592:                                        ; preds = %if.then573, %if.end562, %if.else589
  %xtarget.1 = phi %struct.rtx_def* [ %call590, %if.else589 ], [ %xtarget.0, %if.end562 ], [ %call585, %if.then573 ]
  %xspec_target_subreg.0 = phi %struct.rtx_def* [ null, %if.else589 ], [ null, %if.end562 ], [ %call585., %if.then573 ]
  %predicate594 = getelementptr inbounds %struct.insn_operand_data* %6, i64 0, i32 0
  %81 = load i32 (%struct.rtx_def*, i32)** %predicate594, align 8, !tbaa !14
  %call595 = tail call i32 %81(%struct.rtx_def* %xtarget.1, i32 %retval.0.i1200) #3
  %tobool596 = icmp eq i32 %call595, 0
  br i1 %tobool596, label %if.then597, label %if.end599

if.then597:                                       ; preds = %if.end592
  %call598 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %retval.0.i1200) #3
  br label %if.end599

if.end599:                                        ; preds = %if.end592, %if.then597
  %xtarget.2 = phi %struct.rtx_def* [ %xtarget.1, %if.end592 ], [ %call598, %if.then597 ]
  %call600 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %bitsize) #3
  %call601 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %xbitpos.1) #3
  %call602 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %xtarget.2, i32 1) #3
  %call603 = tail call %struct.rtx_def* @gen_extzv(%struct.rtx_def* %call602, %struct.rtx_def* %xop0.2, %struct.rtx_def* %call600, %struct.rtx_def* %call601) #3
  %tobool604 = icmp eq %struct.rtx_def* %call603, null
  br i1 %tobool604, label %if.else607, label %if.then605

if.then605:                                       ; preds = %if.end599
  %call606 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call603) #3
  br label %if.end825

if.else607:                                       ; preds = %if.end599
  tail call void @delete_insns_since(%struct.rtx_def* %call448) #3
  %call608 = tail call fastcc %struct.rtx_def* @extract_fixed_bit_field(i32 %int_mode.01211, %struct.rtx_def* %op0.7, i64 %offset.1, i64 %bitsize, i64 %rem, %struct.rtx_def* %target, i32 1)
  br label %if.end825

extzv_loses:                                      ; preds = %land.lhs.true527, %if.then424, %land.lhs.true440, %if.end501
  %call611 = tail call fastcc %struct.rtx_def* @extract_fixed_bit_field(i32 %int_mode.01211, %struct.rtx_def* %op0.7, i64 %offset.1, i64 %bitsize, i64 %rem, %struct.rtx_def* %target, i32 1)
  br label %if.end825

if.else613:                                       ; preds = %if.end422
  %idxprom614 = sext i32 %retval.0.i to i64
  %arrayidx615 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom614
  %82 = load i16* %arrayidx615, align 2, !tbaa !8
  %conv616 = zext i16 %82 to i64
  %cmp617 = icmp ult i64 %conv616, %bitsize
  br i1 %cmp617, label %extv_loses, label %land.lhs.true619

land.lhs.true619:                                 ; preds = %if.else613
  %83 = getelementptr inbounds %struct.rtx_def* %op0.7, i64 0, i32 0
  %bf.load620 = load i32* %83, align 8
  %bf.clear621 = and i32 %bf.load620, 65535
  switch i32 %bf.clear621, label %if.then636 [
    i32 61, label %land.lhs.true629
    i32 63, label %land.lhs.true629
  ]

land.lhs.true629:                                 ; preds = %land.lhs.true619, %land.lhs.true619
  %add630 = add i64 %rem, %bitsize
  %cmp634 = icmp ugt i64 %add630, %conv616
  br i1 %cmp634, label %extv_loses, label %if.then636

if.then636:                                       ; preds = %land.lhs.true619, %land.lhs.true629
  %call644 = tail call %struct.rtx_def* @get_last_insn() #3
  %bf.load.i1203 = load i16* %mode.i, align 8
  %cmp3.i1204 = icmp eq i16 %bf.load.i1203, 0
  %84 = load i32* @word_mode, align 4, !tbaa !1
  %bf.cast.i1206 = zext i16 %bf.load.i1203 to i32
  %retval.0.i1208 = select i1 %cmp3.i1204, i32 %84, i32 %bf.cast.i1206
  %bf.load652 = load i32* %83, align 8
  %bf.clear653 = and i32 %bf.load652, 65535
  %cmp654 = icmp eq i32 %bf.clear653, 66
  br i1 %cmp654, label %if.then656, label %if.end732

if.then656:                                       ; preds = %if.then636
  %predicate658 = getelementptr inbounds %struct.insn_operand_data* %4, i64 1, i32 0
  %85 = load i32 (%struct.rtx_def*, i32)** %predicate658, align 8, !tbaa !14
  %bf.lshr660 = lshr i32 %bf.load652, 16
  %bf.clear661 = and i32 %bf.lshr660, 255
  %call662 = tail call i32 %85(%struct.rtx_def* %op0.7, i32 %bf.clear661) #3
  %tobool663 = icmp eq i32 %call662, 0
  br i1 %tobool663, label %if.then664, label %if.else728

if.then664:                                       ; preds = %if.then656
  %bf.load666 = load i32* %83, align 8
  %bf.lshr667 = lshr i32 %bf.load666, 16
  %bf.clear668 = and i32 %bf.lshr667, 255
  %cmp669 = icmp eq i32 %bf.clear668, 51
  br i1 %cmp669, label %if.then683, label %lor.lhs.false671

lor.lhs.false671:                                 ; preds = %if.then664
  %idxprom6751147 = zext i32 %bf.clear668 to i64
  %arrayidx676 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom6751147
  %86 = load i8* %arrayidx676, align 1, !tbaa !1
  %idxprom678 = sext i32 %retval.0.i1208 to i64
  %arrayidx679 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom678
  %87 = load i8* %arrayidx679, align 1, !tbaa !1
  %cmp681 = icmp ugt i8 %86, %87
  br i1 %cmp681, label %if.then683, label %if.end707

if.then683:                                       ; preds = %lor.lhs.false671, %if.then664
  %conv684 = trunc i64 %bitsize to i32
  %conv685 = trunc i64 %bitnum to i32
  %arrayidx687 = getelementptr inbounds %struct.rtx_def* %op0.7, i64 0, i32 1, i64 1
  %rtmem688 = bitcast %union.rtunion_def* %arrayidx687 to %struct.mem_attrs**
  %88 = load %struct.mem_attrs** %rtmem688, align 8, !tbaa !4
  %cmp689 = icmp eq %struct.mem_attrs* %88, null
  br i1 %cmp689, label %cond.end697, label %cond.true691

cond.true691:                                     ; preds = %if.then683
  %align695 = getelementptr inbounds %struct.mem_attrs* %88, i64 0, i32 4
  %89 = load i32* %align695, align 4, !tbaa !17
  br label %cond.end697

cond.end697:                                      ; preds = %if.then683, %cond.true691
  %cond698 = phi i32 [ %89, %cond.true691 ], [ 8, %if.then683 ]
  %bf.lshr700 = lshr i32 %bf.load666, 27
  %bf.clear701 = and i32 %bf.lshr700, 1
  %call702 = tail call i32 @get_best_mode(i32 %conv684, i32 %conv685, i32 %cond698, i32 %retval.0.i1208, i32 %bf.clear701) #3
  br label %if.end707

if.end707:                                        ; preds = %lor.lhs.false671, %cond.end697
  %bestmode665.0 = phi i32 [ %call702, %cond.end697 ], [ %bf.clear668, %lor.lhs.false671 ]
  %cmp708 = icmp eq i32 %bestmode665.0, 0
  br i1 %cmp708, label %extv_loses, label %if.end711

if.end711:                                        ; preds = %if.end707
  %idxprom712 = sext i32 %bestmode665.0 to i64
  %arrayidx713 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom712
  %90 = load i16* %arrayidx713, align 2, !tbaa !8
  %conv715 = zext i16 %90 to i64
  %div716 = udiv i64 %bitnum, %conv715
  %arrayidx718 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom712
  %91 = load i8* %arrayidx718, align 1, !tbaa !1
  %conv719 = zext i8 %91 to i64
  %rem723 = urem i64 %bitnum, %conv715
  %mul720 = shl i64 %div716, 32
  %sext1148 = mul i64 %mul720, %conv719
  %conv725 = ashr exact i64 %sext1148, 32
  %call726 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.7, i32 %bestmode665.0, i64 %conv725, i32 1, i32 1) #3
  %call727 = tail call %struct.rtx_def* @force_reg(i32 %bestmode665.0, %struct.rtx_def* %call726) #3
  br label %if.end732

if.else728:                                       ; preds = %if.then656
  %92 = load i32* @byte_mode, align 4, !tbaa !1
  %sext1149 = shl i64 %offset.1, 32
  %conv729 = ashr exact i64 %sext1149, 32
  %call730 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0.7, i32 %92, i64 %conv729, i32 1, i32 1) #3
  br label %if.end732

if.end732:                                        ; preds = %if.end711, %if.else728, %if.then636
  %xbitpos637.0 = phi i64 [ %rem, %if.else728 ], [ %rem723, %if.end711 ], [ %rem, %if.then636 ]
  %xop0645.0 = phi %struct.rtx_def* [ %call730, %if.else728 ], [ %call727, %if.end711 ], [ %op0.7, %if.then636 ]
  %93 = getelementptr inbounds %struct.rtx_def* %xop0645.0, i64 0, i32 0
  %bf.load733 = load i32* %93, align 8
  %bf.clear734 = and i32 %bf.load733, 65535
  switch i32 %bf.clear734, label %if.end757 [
    i32 63, label %land.lhs.true737
    i32 61, label %land.lhs.true749
  ]

land.lhs.true737:                                 ; preds = %if.end732
  %bf.lshr739 = lshr i32 %bf.load733, 16
  %bf.clear740 = and i32 %bf.lshr739, 255
  %cmp741 = icmp eq i32 %bf.clear740, %retval.0.i1208
  br i1 %cmp741, label %if.end757, label %extv_loses

land.lhs.true749:                                 ; preds = %if.end732
  %bf.lshr751 = lshr i32 %bf.load733, 16
  %bf.clear752 = and i32 %bf.lshr751, 255
  %cmp753 = icmp eq i32 %bf.clear752, %retval.0.i1208
  br i1 %cmp753, label %if.end757, label %if.then755

if.then755:                                       ; preds = %land.lhs.true749
  %call756 = tail call %struct.rtx_def* @gen_rtx_SUBREG(i32 %retval.0.i1208, %struct.rtx_def* %xop0645.0, i32 0) #3
  br label %if.end757

if.end757:                                        ; preds = %if.end732, %land.lhs.true737, %land.lhs.true749, %if.then755
  %xop0645.1 = phi %struct.rtx_def* [ %call756, %if.then755 ], [ %xop0645.0, %land.lhs.true749 ], [ %xop0645.0, %land.lhs.true737 ], [ %xop0645.0, %if.end732 ]
  %idxprom758 = sext i32 %retval.0.i1208 to i64
  %cmp761 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp761, label %if.then770, label %lor.lhs.false763

lor.lhs.false763:                                 ; preds = %if.end757
  %94 = load i32* @flag_force_mem, align 4, !tbaa !6
  %tobool764 = icmp eq i32 %94, 0
  br i1 %tobool764, label %if.end772, label %land.lhs.true765

land.lhs.true765:                                 ; preds = %lor.lhs.false763
  %95 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load766 = load i32* %95, align 8
  %bf.clear767 = and i32 %bf.load766, 65535
  %cmp768 = icmp eq i32 %bf.clear767, 66
  br i1 %cmp768, label %if.then770, label %if.end772

if.then770:                                       ; preds = %land.lhs.true765, %if.end757
  %call771 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.tmode) #3
  br label %if.end772

if.end772:                                        ; preds = %lor.lhs.false763, %if.then770, %land.lhs.true765
  %xtarget646.0 = phi %struct.rtx_def* [ %call771, %if.then770 ], [ %target, %land.lhs.true765 ], [ %target, %lor.lhs.false763 ]
  %96 = getelementptr inbounds %struct.rtx_def* %xtarget646.0, i64 0, i32 0
  %bf.load773 = load i32* %96, align 8
  %bf.lshr774 = lshr i32 %bf.load773, 16
  %bf.clear775 = and i32 %bf.lshr774, 255
  %cmp776 = icmp eq i32 %bf.clear775, %retval.0.i1208
  br i1 %cmp776, label %if.end803, label %if.then778

if.then778:                                       ; preds = %if.end772
  %bf.clear780 = and i32 %bf.load773, 65535
  %cmp781 = icmp eq i32 %bf.clear780, 61
  br i1 %cmp781, label %if.then783, label %if.else800

if.then783:                                       ; preds = %if.then778
  %arrayidx786 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom758
  %97 = load i8* %arrayidx786, align 1, !tbaa !1
  %idxprom7911146 = zext i32 %bf.clear775 to i64
  %arrayidx792 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom7911146
  %98 = load i8* %arrayidx792, align 1, !tbaa !1
  %cmp794 = icmp ugt i8 %97, %98
  %call796 = tail call %struct.rtx_def* @gen_lowpart(i32 %retval.0.i1208, %struct.rtx_def* %xtarget646.0) #3
  %call796. = select i1 %cmp794, %struct.rtx_def* %call796, %struct.rtx_def* null
  br label %if.end803

if.else800:                                       ; preds = %if.then778
  %call801 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %retval.0.i1208) #3
  br label %if.end803

if.end803:                                        ; preds = %if.then783, %if.end772, %if.else800
  %xtarget646.1 = phi %struct.rtx_def* [ %call801, %if.else800 ], [ %xtarget646.0, %if.end772 ], [ %call796, %if.then783 ]
  %xspec_target_subreg648.0 = phi %struct.rtx_def* [ null, %if.else800 ], [ null, %if.end772 ], [ %call796., %if.then783 ]
  %predicate805 = getelementptr inbounds %struct.insn_operand_data* %4, i64 0, i32 0
  %99 = load i32 (%struct.rtx_def*, i32)** %predicate805, align 8, !tbaa !14
  %call806 = tail call i32 %99(%struct.rtx_def* %xtarget646.1, i32 %retval.0.i1208) #3
  %tobool807 = icmp eq i32 %call806, 0
  br i1 %tobool807, label %if.then808, label %if.end810

if.then808:                                       ; preds = %if.end803
  %call809 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %retval.0.i1208) #3
  br label %if.end810

if.end810:                                        ; preds = %if.end803, %if.then808
  %xtarget646.2 = phi %struct.rtx_def* [ %xtarget646.1, %if.end803 ], [ %call809, %if.then808 ]
  %call811 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %bitsize) #3
  %sext = shl i64 %xbitpos637.0, 32
  %conv812 = ashr exact i64 %sext, 32
  %call813 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv812) #3
  %call814 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %xtarget646.2, i32 1) #3
  %call815 = tail call %struct.rtx_def* @gen_extv(%struct.rtx_def* %call814, %struct.rtx_def* %xop0645.1, %struct.rtx_def* %call811, %struct.rtx_def* %call813) #3
  %tobool816 = icmp eq %struct.rtx_def* %call815, null
  br i1 %tobool816, label %if.else819, label %if.then817

if.then817:                                       ; preds = %if.end810
  %call818 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call815) #3
  br label %if.end825

if.else819:                                       ; preds = %if.end810
  tail call void @delete_insns_since(%struct.rtx_def* %call644) #3
  %call820 = tail call fastcc %struct.rtx_def* @extract_fixed_bit_field(i32 %int_mode.01211, %struct.rtx_def* %op0.7, i64 %offset.1, i64 %bitsize, i64 %rem, %struct.rtx_def* %target, i32 0)
  br label %if.end825

extv_loses:                                       ; preds = %land.lhs.true737, %if.else613, %land.lhs.true629, %if.end707
  %call823 = tail call fastcc %struct.rtx_def* @extract_fixed_bit_field(i32 %int_mode.01211, %struct.rtx_def* %op0.7, i64 %offset.1, i64 %bitsize, i64 %rem, %struct.rtx_def* %target, i32 0)
  br label %if.end825

if.end825:                                        ; preds = %extv_loses, %if.else819, %if.then817, %extzv_loses, %if.else607, %if.then605
  %spec_target_subreg.0 = phi %struct.rtx_def* [ null, %extzv_loses ], [ %xspec_target_subreg.0, %if.then605 ], [ null, %if.else607 ], [ null, %extv_loses ], [ %xspec_target_subreg648.0, %if.then817 ], [ null, %if.else819 ]
  %spec_target.0 = phi %struct.rtx_def* [ %target, %extzv_loses ], [ %xtarget.0, %if.then605 ], [ %target, %if.else607 ], [ %target, %extv_loses ], [ %xtarget646.0, %if.then817 ], [ %target, %if.else819 ]
  %target.addr.1 = phi %struct.rtx_def* [ %call611, %extzv_loses ], [ %xtarget.2, %if.then605 ], [ %call608, %if.else607 ], [ %call823, %extv_loses ], [ %xtarget646.2, %if.then817 ], [ %call820, %if.else819 ]
  %cmp826 = icmp eq %struct.rtx_def* %target.addr.1, %spec_target.0
  %cmp830 = icmp eq %struct.rtx_def* %target.addr.1, %spec_target_subreg.0
  %or.cond1237 = or i1 %cmp826, %cmp830
  br i1 %or.cond1237, label %return, label %if.end833

if.end833:                                        ; preds = %if.end825
  %100 = getelementptr inbounds %struct.rtx_def* %target.addr.1, i64 0, i32 0
  %bf.load834 = load i32* %100, align 8
  %bf.lshr835 = lshr i32 %bf.load834, 16
  %bf.clear836 = and i32 %bf.lshr835, 255
  %cmp837 = icmp eq i32 %bf.clear836, %mode.tmode
  %cmp843 = icmp eq i32 %bf.clear836, %mode
  %or.cond1162 = or i1 %cmp837, %cmp843
  br i1 %or.cond1162, label %return, label %if.then845

if.then845:                                       ; preds = %if.end833
  switch i32 %21, label %if.then855 [
    i32 1, label %if.else862
    i32 3, label %if.else862
  ]

if.then855:                                       ; preds = %if.then845
  %arrayidx857 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom114
  %101 = load i16* %arrayidx857, align 2, !tbaa !8
  %conv858 = zext i16 %101 to i32
  %call859 = tail call i32 @mode_for_size(i32 %conv858, i32 1, i32 0) #3
  %call860 = tail call %struct.rtx_def* @convert_to_mode(i32 %call859, %struct.rtx_def* %target.addr.1, i32 %unsignedp) #3
  %call861 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode.tmode, %struct.rtx_def* %call860) #3
  br label %return

if.else862:                                       ; preds = %if.then845, %if.then845
  %call863 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode.tmode, %struct.rtx_def* %target.addr.1, i32 %unsignedp) #3
  br label %return

return:                                           ; preds = %for.body350, %if.then335, %for.end.i1190, %expand_shift.exit, %if.end833, %if.end825, %if.then322, %if.end238, %land.lhs.true59, %if.else862, %if.then855, %if.then241
  %retval.0 = phi %struct.rtx_def* [ %call242, %if.then241 ], [ %call861, %if.then855 ], [ %call863, %if.else862 ], [ %op0.0, %land.lhs.true59 ], [ %op0.4, %if.end238 ], [ %target.addr.0, %if.then322 ], [ %spec_target.0, %if.end825 ], [ %target.addr.1, %if.end833 ], [ %retval.0.i1171, %expand_shift.exit ], [ %call109.i1185, %for.end.i1190 ], [ %target.addr.0, %if.then335 ], [ %target.addr.0, %for.body350 ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_reg_rtx(i32) #1

declare %struct.rtx_def* @operand_subword(%struct.rtx_def*, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_shift(i32 %code, i32 %mode, %struct.rtx_def* %shifted, %union.tree_node* %amount, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %cmp = icmp eq i32 %code, 82
  %cmp1 = icmp eq i32 %code, 84
  %.cmp1 = or i1 %cmp, %cmp1
  %call = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %amount, %struct.rtx_def* null, i32 0, i32 0) #3
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7 = icmp eq %struct.rtx_def* %call, %0
  br i1 %cmp7, label %return, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %1 = and i32 %code, -2
  %2 = icmp eq i32 %1, 84
  %3 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 0
  %rtwint = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 0, i32 0
  %idxprom59 = sext i32 %mode to i64
  %arrayidx60 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom59
  %tobool95 = icmp ne i32 %unsignedp, 0
  %tobool96.demorgan = or i1 %cmp, %cmp1
  %tobool96 = xor i1 %tobool96.demorgan, true
  %tobool80 = icmp eq i32 %unsignedp, 0
  br i1 %2, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %for.cond.preheader, %for.inc.us
  %try.0189.us = phi i32 [ %inc.us, %for.inc.us ], [ 0, %for.cond.preheader ]
  switch i32 %try.0189.us, label %if.then22 [
    i32 0, label %if.end39.us
    i32 1, label %for.inc.us
  ]

if.end39.us:                                      ; preds = %for.body.us
  %4 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 24), align 8, !tbaa !4
  %5 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 25), align 8, !tbaa !4
  %cond44.us = select i1 %.cmp1, %struct.optab* %4, %struct.optab* %5
  %call45.us = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond44.us, %struct.rtx_def* %shifted, %struct.rtx_def* %call, %struct.rtx_def* %target, i32 %unsignedp, i32 0) #3
  %cmp46.us = icmp eq %struct.rtx_def* %call45.us, null
  br i1 %cmp46.us, label %land.lhs.true.us, label %return

land.lhs.true.us:                                 ; preds = %if.end39.us
  %bf.load.us = load i32* %3, align 8
  %bf.clear.us = and i32 %bf.load.us, 65535
  %cmp48.us = icmp eq i32 %bf.clear.us, 54
  br i1 %cmp48.us, label %land.lhs.true50.us, label %for.inc.us

land.lhs.true50.us:                               ; preds = %land.lhs.true.us
  %6 = load i64* %rtwint, align 8, !tbaa !20
  %cmp52.us = icmp sgt i64 %6, 0
  br i1 %cmp52.us, label %land.lhs.true54.us, label %for.inc.us

land.lhs.true54.us:                               ; preds = %land.lhs.true50.us
  %conv58.us = trunc i64 %6 to i32
  %7 = load i16* %arrayidx60, align 2, !tbaa !8
  %conv61.us = zext i16 %7 to i32
  %cmp62.us = icmp ult i32 %conv58.us, %conv61.us
  br i1 %cmp62.us, label %if.then64.us, label %for.inc.us

if.then64.us:                                     ; preds = %land.lhs.true54.us
  %8 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 25), align 8, !tbaa !4
  %9 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 24), align 8, !tbaa !4
  %cond69.us = select i1 %.cmp1, %struct.optab* %8, %struct.optab* %9
  %conv72.us = zext i16 %7 to i64
  %sub.us = sub nsw i64 %conv72.us, %6
  %call76.us = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub.us) #3
  %call77.us = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond69.us, %struct.rtx_def* %shifted, %struct.rtx_def* %call76.us, %struct.rtx_def* %target, i32 %unsignedp, i32 0) #3
  br label %for.inc.us

for.inc.us:                                       ; preds = %for.body.us, %land.lhs.true.us, %land.lhs.true50.us, %land.lhs.true54.us, %if.then64.us
  %temp.2.us = phi %struct.rtx_def* [ %call77.us, %if.then64.us ], [ null, %land.lhs.true54.us ], [ null, %land.lhs.true50.us ], [ null, %land.lhs.true.us ], [ null, %for.body.us ]
  %inc.us = add nsw i32 %try.0189.us, 1
  %cmp8.us = icmp eq %struct.rtx_def* %temp.2.us, null
  %cmp9.us = icmp slt i32 %inc.us, 3
  %or.cond116.us = and i1 %cmp8.us, %cmp9.us
  br i1 %or.cond116.us, label %for.body.us, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %try.0189 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ]
  switch i32 %try.0189, label %if.else14 [
    i32 0, label %if.else79
    i32 1, label %if.then13
  ]

if.then13:                                        ; preds = %for.body
  br label %if.else79

if.else14:                                        ; preds = %for.body
  br label %if.else79

if.then22:                                        ; preds = %for.body.us
  %cmp23 = icmp eq %struct.rtx_def* %target, %shifted
  %cond = select i1 %cmp23, %struct.rtx_def* null, %struct.rtx_def* %target
  %type24 = getelementptr inbounds %union.tree_node* %amount, i64 0, i32 0, i32 0, i32 1
  %10 = load %union.tree_node** %type24, align 8, !tbaa !21
  %call25 = tail call %union.tree_node* @make_tree(%union.tree_node* %10, %struct.rtx_def* %call)
  %11 = load i16* %arrayidx60, align 2, !tbaa !8
  %conv = zext i16 %11 to i64
  %call26 = tail call %union.tree_node* @build_int_2_wide(i64 %conv, i64 0) #3
  %call27 = tail call %union.tree_node* @convert(%union.tree_node* %10, %union.tree_node* %call26) #3
  %call28 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %10, %union.tree_node* %call27, %union.tree_node* %amount) #3
  %call29 = tail call %union.tree_node* @fold(%union.tree_node* %call28) #3
  %call30 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %shifted) #3
  %cond32 = select i1 %.cmp1, i32 82, i32 83
  %call33 = tail call %struct.rtx_def* @expand_shift(i32 %cond32, i32 %mode, %struct.rtx_def* %call30, %union.tree_node* %call25, %struct.rtx_def* %cond, i32 1)
  %cond35 = select i1 %.cmp1, i32 83, i32 82
  %call36 = tail call %struct.rtx_def* @expand_shift(i32 %cond35, i32 %mode, %struct.rtx_def* %call30, %union.tree_node* %call29, %struct.rtx_def* null, i32 1)
  %12 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !4
  %call37 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %12, %struct.rtx_def* %call33, %struct.rtx_def* %call36, %struct.rtx_def* %target, i32 %unsignedp, i32 3) #3
  ret %struct.rtx_def* %call37

if.else79:                                        ; preds = %if.else14, %if.then13, %for.body
  %methods.0 = phi i32 [ 2, %if.then13 ], [ 3, %if.else14 ], [ 0, %for.body ]
  br i1 %tobool80, label %land.lhs.true94, label %if.end89

if.end89:                                         ; preds = %if.else79
  %13 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 8, !tbaa !4
  %cond86 = select i1 %.cmp1, %struct.optab* %13, %struct.optab* %14
  %call87 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond86, %struct.rtx_def* %shifted, %struct.rtx_def* %call, %struct.rtx_def* %target, i32 %unsignedp, i32 %methods.0) #3
  %cmp90 = icmp eq %struct.rtx_def* %call87, null
  br i1 %cmp90, label %land.lhs.true94, label %return

land.lhs.true94:                                  ; preds = %if.else79, %if.end89
  %tobool95.not = xor i1 %tobool95, true
  %cmp98 = icmp eq i32 %methods.0, 2
  %or.cond115 = and i1 %cmp98, %tobool96
  %or.cond = or i1 %or.cond115, %tobool95.not
  br i1 %or.cond, label %if.then100, label %for.inc

if.then100:                                       ; preds = %land.lhs.true94
  %. = select i1 %tobool95, i32 4, i32 %methods.0
  %15 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %16 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %cond108 = select i1 %.cmp1, %struct.optab* %15, %struct.optab* %16
  %call109 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond108, %struct.rtx_def* %shifted, %struct.rtx_def* %call, %struct.rtx_def* %target, i32 %unsignedp, i32 %.) #3
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true94, %if.then100
  %temp.2 = phi %struct.rtx_def* [ %call109, %if.then100 ], [ null, %land.lhs.true94 ]
  %inc = add nsw i32 %try.0189, 1
  %cmp8 = icmp eq %struct.rtx_def* %temp.2, null
  %cmp9 = icmp slt i32 %inc, 3
  %or.cond116 = and i1 %cmp8, %cmp9
  br i1 %or.cond116, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %for.inc.us
  %cmp8.lcssa = phi i1 [ %cmp8.us, %for.inc.us ], [ %cmp8, %for.inc ]
  %temp.0.lcssa = phi %struct.rtx_def* [ %temp.2.us, %for.inc.us ], [ %temp.2, %for.inc ]
  br i1 %cmp8.lcssa, label %if.then113, label %return

if.then113:                                       ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

return:                                           ; preds = %if.end89, %if.end39.us, %for.end, %entry
  %retval.0 = phi %struct.rtx_def* [ %shifted, %entry ], [ %temp.0.lcssa, %for.end ], [ %call45.us, %if.end39.us ], [ %call87, %if.end89 ]
  ret %struct.rtx_def* %retval.0
}

declare %union.tree_node* @build_int_2_wide(i64, i64) #1

declare %struct.rtx_def* @gen_extzv(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @extract_fixed_bit_field(i32 %tmode, %struct.rtx_def* %op0, i64 %offset, i64 %bitsize, i64 %bitpos, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.else [
    i32 63, label %if.then
    i32 61, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry
  %add = add i64 %bitpos, %bitsize
  %1 = load i32* @target_flags, align 4, !tbaa !6
  %and4 = lshr i32 %1, 20
  %2 = and i32 %and4, 32
  %3 = add i32 %2, 32
  %conv253 = zext i32 %3 to i64
  %cmp7 = icmp ugt i64 %add, %conv253
  br i1 %cmp7, label %if.then9, label %if.end56

if.then9:                                         ; preds = %if.then
  %call = tail call fastcc %struct.rtx_def* @extract_split_bit_field(%struct.rtx_def* %op0, i64 %bitsize, i64 %bitpos, i32 %unsignedp)
  br label %return

if.else:                                          ; preds = %entry
  %conv10 = trunc i64 %bitsize to i32
  %mul = shl i64 %offset, 3
  %add11 = add i64 %mul, %bitpos
  %conv12 = trunc i64 %add11 to i32
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**
  %4 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !4
  %cmp13 = icmp eq %struct.mem_attrs* %4, null
  br i1 %cmp13, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.else
  %align = getelementptr inbounds %struct.mem_attrs* %4, i64 0, i32 4
  %5 = load i32* %align, align 4, !tbaa !17
  br label %cond.end

cond.end:                                         ; preds = %if.else, %cond.true
  %cond18 = phi i32 [ %5, %cond.true ], [ 8, %if.else ]
  %6 = load i32* @word_mode, align 4, !tbaa !1
  %bf.lshr = lshr i32 %bf.load, 27
  %bf.clear20 = and i32 %bf.lshr, 1
  %call21 = tail call i32 @get_best_mode(i32 %conv10, i32 %conv12, i32 %cond18, i32 %6, i32 %bf.clear20) #3
  %cmp22 = icmp eq i32 %call21, 0
  br i1 %cmp22, label %if.then24, label %if.end28

if.then24:                                        ; preds = %cond.end
  %call27 = tail call fastcc %struct.rtx_def* @extract_split_bit_field(%struct.rtx_def* %op0, i64 %bitsize, i64 %add11, i32 %unsignedp)
  br label %return

if.end28:                                         ; preds = %cond.end
  %idxprom = sext i32 %call21 to i64
  %arrayidx29 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %7 = load i16* %arrayidx29, align 2, !tbaa !8
  %conv31 = zext i16 %7 to i64
  %cmp32 = icmp ugt i64 %conv31, %bitpos
  br i1 %cmp32, label %if.end28.if.end46_crit_edge, label %if.then34

if.end28.if.end46_crit_edge:                      ; preds = %if.end28
  %div250.pre = lshr i16 %7, 3
  %conv48.pre = zext i16 %div250.pre to i64
  br label %if.end46

if.then34:                                        ; preds = %if.end28
  %div = udiv i64 %bitpos, %conv31
  %div252 = lshr i16 %7, 3
  %conv37 = zext i16 %div252 to i64
  %mul38 = mul i64 %div, %conv37
  %add39 = add i64 %mul38, %offset
  %mul45 = shl i64 %mul38, 3
  %sub = sub i64 %bitpos, %mul45
  br label %if.end46

if.end46:                                         ; preds = %if.end28.if.end46_crit_edge, %if.then34
  %conv48.pre-phi = phi i64 [ %conv48.pre, %if.end28.if.end46_crit_edge ], [ %conv37, %if.then34 ]
  %bitpos.addr.0 = phi i64 [ %bitpos, %if.end28.if.end46_crit_edge ], [ %sub, %if.then34 ]
  %offset.addr.0 = phi i64 [ %offset, %if.end28.if.end46_crit_edge ], [ %add39, %if.then34 ]
  %rem = urem i64 %offset.addr.0, %conv48.pre-phi
  %mul49 = shl nuw nsw i64 %rem, 3
  %add50 = add i64 %mul49, %bitpos.addr.0
  %sub54 = sub i64 %offset.addr.0, %rem
  %call55 = tail call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %op0, i32 %call21, i64 %sub54, i32 1, i32 1) #3
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %call55, i64 0, i32 0
  %bf.load57.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.then, %if.end46
  %bf.load57 = phi i32 [ %bf.load, %if.then ], [ %bf.load57.pre, %if.end46 ]
  %bitpos.addr.1 = phi i64 [ %bitpos, %if.then ], [ %add50, %if.end46 ]
  %op0.addr.0 = phi %struct.rtx_def* [ %op0, %if.then ], [ %call55, %if.end46 ]
  %bf.lshr58 = lshr i32 %bf.load57, 16
  %bf.clear59 = and i32 %bf.lshr58, 255
  %tobool60 = icmp eq i32 %unsignedp, 0
  br i1 %tobool60, label %if.end108, label %if.then61

if.then61:                                        ; preds = %if.end56
  %tobool62 = icmp eq i64 %bitpos.addr.1, 0
  br i1 %tobool62, label %if.end85, label %if.then63

if.then63:                                        ; preds = %if.then61
  %call64 = tail call %union.tree_node* @build_int_2_wide(i64 %bitpos.addr.1, i64 0) #3
  %cmp65 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp65, label %cond.end78, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then63
  %8 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load67 = load i32* %8, align 8
  %bf.clear68 = and i32 %bf.load67, 65535
  %cmp69 = icmp eq i32 %bf.clear68, 61
  br i1 %cmp69, label %land.lhs.true71, label %cond.end78

land.lhs.true71:                                  ; preds = %land.lhs.true
  %bf.clear74 = and i32 %bf.load67, 1073741824
  %tobool75 = icmp ne i32 %bf.clear74, 0
  %. = select i1 %tobool75, %struct.rtx_def* null, %struct.rtx_def* %target
  br label %cond.end78

cond.end78:                                       ; preds = %if.then63, %land.lhs.true71, %land.lhs.true
  %cond79 = phi %struct.rtx_def* [ null, %land.lhs.true ], [ null, %if.then63 ], [ %., %land.lhs.true71 ]
  %cmp80 = icmp ne i32 %bf.clear59, %tmode
  %.cond79 = select i1 %cmp80, %struct.rtx_def* null, %struct.rtx_def* %cond79
  %call84 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %bf.clear59, %struct.rtx_def* %op0.addr.0, %union.tree_node* %call64, %struct.rtx_def* %.cond79, i32 1)
  br label %if.end85

if.end85:                                         ; preds = %if.then61, %cond.end78
  %op0.addr.1 = phi %struct.rtx_def* [ %call84, %cond.end78 ], [ %op0.addr.0, %if.then61 ]
  %cmp86 = icmp eq i32 %bf.clear59, %tmode
  br i1 %cmp86, label %if.end90, label %if.then88

if.then88:                                        ; preds = %if.end85
  %call89 = tail call %struct.rtx_def* @convert_to_mode(i32 %tmode, %struct.rtx_def* %op0.addr.1, i32 1) #3
  br label %if.end90

if.end90:                                         ; preds = %if.end85, %if.then88
  %op0.addr.2 = phi %struct.rtx_def* [ %call89, %if.then88 ], [ %op0.addr.1, %if.end85 ]
  %idxprom91251 = zext i32 %bf.clear59 to i64
  %arrayidx92 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom91251
  %9 = load i16* %arrayidx92, align 2, !tbaa !8
  %conv93 = zext i16 %9 to i64
  %add94 = add i64 %bitpos.addr.1, %bitsize
  %cmp95 = icmp eq i64 %conv93, %add94
  br i1 %cmp95, label %return, label %if.then97

if.then97:                                        ; preds = %if.end90
  %10 = getelementptr inbounds %struct.rtx_def* %op0.addr.2, i64 0, i32 0
  %bf.load98 = load i32* %10, align 8
  %bf.lshr99 = lshr i32 %bf.load98, 16
  %bf.clear100 = and i32 %bf.lshr99, 255
  %11 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %conv104 = trunc i64 %bitsize to i32
  %cmp1.i = icmp slt i32 %conv104, 64
  br i1 %cmp1.i, label %if.end5.i.thread, label %if.end5.i

if.end5.i.thread:                                 ; preds = %if.then97
  %sub3.i = sub i64 64, %bitsize
  %sh_prom4.i = and i64 %sub3.i, 4294967295
  %shr.i = lshr i64 -1, %sh_prom4.i
  br label %mask_rtx.exit

if.end5.i:                                        ; preds = %if.then97
  %cmp14.i = icmp sgt i32 %conv104, 64
  br i1 %cmp14.i, label %if.then15.i, label %mask_rtx.exit

if.then15.i:                                      ; preds = %if.end5.i
  %sub17.i = sub i64 128, %bitsize
  %sh_prom18.i = and i64 %sub17.i, 4294967295
  %shr19.i = lshr i64 -1, %sh_prom18.i
  br label %mask_rtx.exit

mask_rtx.exit:                                    ; preds = %if.end5.i.thread, %if.end5.i, %if.then15.i
  %masklow.1.i277 = phi i64 [ -1, %if.then15.i ], [ -1, %if.end5.i ], [ %shr.i, %if.end5.i.thread ]
  %maskhigh.1.i = phi i64 [ %shr19.i, %if.then15.i ], [ 0, %if.end5.i ], [ 0, %if.end5.i.thread ]
  %call.i275 = tail call %struct.rtx_def* @immed_double_const(i64 %masklow.1.i277, i64 %maskhigh.1.i, i32 %bf.clear100) #3
  %call106 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear100, %struct.optab* %11, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call.i275, %struct.rtx_def* %target, i32 1, i32 3) #3
  br label %return

if.end108:                                        ; preds = %if.end56
  %call109 = tail call %struct.rtx_def* @force_reg(i32 %bf.clear59, %struct.rtx_def* %op0.addr.0) #3
  %cmp110 = icmp eq i32 %bf.clear59, %tmode
  %target. = select i1 %cmp110, %struct.rtx_def* %target, %struct.rtx_def* null
  %12 = load i32* getelementptr inbounds ([9 x i32]* @class_narrowest_mode, i64 0, i64 1), align 4, !tbaa !1
  %cmp114282 = icmp eq i32 %12, 0
  %add131.pre.pre = add i64 %bitpos.addr.1, %bitsize
  br i1 %cmp114282, label %for.end.loopexit, label %for.body

for.body:                                         ; preds = %if.end108, %for.inc
  %mode.0283 = phi i32 [ %conv127, %for.inc ], [ %12, %if.end108 ]
  %idxprom116 = sext i32 %mode.0283 to i64
  %arrayidx117 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom116
  %13 = load i16* %arrayidx117, align 2, !tbaa !8
  %conv118 = zext i16 %13 to i64
  %cmp120 = icmp ult i64 %conv118, %add131.pre.pre
  br i1 %cmp120, label %for.inc, label %if.then122

if.then122:                                       ; preds = %for.body
  %call123 = tail call %struct.rtx_def* @convert_to_mode(i32 %mode.0283, %struct.rtx_def* %call109, i32 0) #3
  br label %for.end

for.inc:                                          ; preds = %for.body
  %arrayidx126 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom116
  %14 = load i8* %arrayidx126, align 1, !tbaa !1
  %conv127 = zext i8 %14 to i32
  %cmp114 = icmp eq i8 %14, 0
  br i1 %cmp114, label %for.end.loopexit, label %for.body

for.end.loopexit:                                 ; preds = %for.inc, %if.end108
  %mode.0.lcssa = phi i32 [ 0, %if.end108 ], [ %conv127, %for.inc ]
  %idxprom128.phi.trans.insert287 = zext i32 %mode.0.lcssa to i64
  %arrayidx129.phi.trans.insert = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom128.phi.trans.insert287
  %.pre = load i16* %arrayidx129.phi.trans.insert, align 2, !tbaa !8
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.then122
  %15 = phi i16 [ %.pre, %for.end.loopexit ], [ %13, %if.then122 ]
  %mode.0280 = phi i32 [ %mode.0.lcssa, %for.end.loopexit ], [ %mode.0283, %if.then122 ]
  %op0.addr.3 = phi %struct.rtx_def* [ %call109, %for.end.loopexit ], [ %call123, %if.then122 ]
  %conv130 = zext i16 %15 to i64
  %cmp132 = icmp eq i64 %conv130, %add131.pre.pre
  br i1 %cmp132, label %if.end160, label %if.then134

if.then134:                                       ; preds = %for.end
  %sub140 = sub i64 %conv130, %add131.pre.pre
  %call141 = tail call %union.tree_node* @build_int_2_wide(i64 %sub140, i64 0) #3
  %cmp143 = icmp eq %struct.rtx_def* %target., null
  br i1 %cmp143, label %cond.end157, label %land.lhs.true145

land.lhs.true145:                                 ; preds = %if.then134
  %16 = getelementptr inbounds %struct.rtx_def* %target., i64 0, i32 0
  %bf.load146 = load i32* %16, align 8
  %bf.clear147 = and i32 %bf.load146, 65535
  %cmp148 = icmp eq i32 %bf.clear147, 61
  br i1 %cmp148, label %land.lhs.true150, label %cond.end157

land.lhs.true150:                                 ; preds = %land.lhs.true145
  %bf.clear153 = and i32 %bf.load146, 1073741824
  %tobool154 = icmp ne i32 %bf.clear153, 0
  %.167 = select i1 %tobool154, %struct.rtx_def* null, %struct.rtx_def* %target.
  br label %cond.end157

cond.end157:                                      ; preds = %if.then134, %land.lhs.true150, %land.lhs.true145
  %cond158 = phi %struct.rtx_def* [ null, %land.lhs.true145 ], [ null, %if.then134 ], [ %.167, %land.lhs.true150 ]
  %call.i254 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call141, %struct.rtx_def* null, i32 0, i32 0) #3
  %17 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i255 = icmp eq %struct.rtx_def* %call.i254, %17
  br i1 %cmp7.i255, label %if.end160, label %for.body.i261

for.body.i261:                                    ; preds = %cond.end157, %land.lhs.true94.i
  %try.0189.i260 = phi i32 [ %inc.i267, %land.lhs.true94.i ], [ 0, %cond.end157 ]
  switch i32 %try.0189.i260, label %if.else14.i263 [
    i32 0, label %if.else79.i265
    i32 1, label %if.then13.i262
  ]

if.then13.i262:                                   ; preds = %for.body.i261
  br label %if.else79.i265

if.else14.i263:                                   ; preds = %for.body.i261
  br label %if.else79.i265

if.else79.i265:                                   ; preds = %if.else14.i263, %if.then13.i262, %for.body.i261
  %methods.0.i264 = phi i32 [ 2, %if.then13.i262 ], [ 3, %if.else14.i263 ], [ 0, %for.body.i261 ]
  %18 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call87.i = tail call %struct.rtx_def* @expand_binop(i32 %mode.0280, %struct.optab* %18, %struct.rtx_def* %op0.addr.3, %struct.rtx_def* %call.i254, %struct.rtx_def* %cond158, i32 1, i32 %methods.0.i264) #3
  %cmp90.i = icmp eq %struct.rtx_def* %call87.i, null
  br i1 %cmp90.i, label %land.lhs.true94.i, label %if.end160

land.lhs.true94.i:                                ; preds = %if.else79.i265
  %inc.i267 = add nsw i32 %try.0189.i260, 1
  %cmp9.i269 = icmp slt i32 %inc.i267, 3
  br i1 %cmp9.i269, label %for.body.i261, label %for.end.i271

for.end.i271:                                     ; preds = %land.lhs.true94.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

if.end160:                                        ; preds = %if.else79.i265, %cond.end157, %for.end
  %op0.addr.4 = phi %struct.rtx_def* [ %op0.addr.3, %for.end ], [ %op0.addr.3, %cond.end157 ], [ %call87.i, %if.else79.i265 ]
  %sub164 = sub i64 %conv130, %bitsize
  %call165 = tail call %union.tree_node* @build_int_2_wide(i64 %sub164, i64 0) #3
  %call.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call165, %struct.rtx_def* null, i32 0, i32 0) #3
  %19 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i = icmp eq %struct.rtx_def* %call.i, %19
  br i1 %cmp7.i, label %return, label %for.body.i

for.body.i:                                       ; preds = %if.end160, %if.else79.i
  %try.0189.i = phi i32 [ %inc.i, %if.else79.i ], [ 0, %if.end160 ]
  switch i32 %try.0189.i, label %if.else14.i [
    i32 0, label %if.else79.i
    i32 1, label %if.then13.i
  ]

if.then13.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else14.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else79.i:                                      ; preds = %if.else14.i, %if.then13.i, %for.body.i
  %methods.0.i = phi i32 [ 2, %if.then13.i ], [ 3, %if.else14.i ], [ 0, %for.body.i ]
  %20 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i = tail call %struct.rtx_def* @expand_binop(i32 %mode.0280, %struct.optab* %20, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %call.i, %struct.rtx_def* %target., i32 0, i32 %methods.0.i) #3
  %inc.i = add nsw i32 %try.0189.i, 1
  %cmp8.i = icmp eq %struct.rtx_def* %call109.i, null
  %cmp9.i = icmp slt i32 %inc.i, 3
  %or.cond116.i = and i1 %cmp8.i, %cmp9.i
  br i1 %or.cond116.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %if.else79.i
  br i1 %cmp8.i, label %if.then113.i, label %return

if.then113.i:                                     ; preds = %for.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

return:                                           ; preds = %for.end.i, %if.end160, %if.end90, %mask_rtx.exit, %if.then24, %if.then9
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then9 ], [ %call106, %mask_rtx.exit ], [ %call27, %if.then24 ], [ %op0.addr.2, %if.end90 ], [ %op0.addr.4, %if.end160 ], [ %call109.i, %for.end.i ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @gen_extv(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define void @expand_inc(%struct.rtx_def* %target, %struct.rtx_def* %inc) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear, %struct.optab* %1, %struct.rtx_def* %target, %struct.rtx_def* %inc, %struct.rtx_def* %target, i32 0, i32 3) #3
  %cmp = icmp eq %struct.rtx_def* %call, %target
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %call) #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare %struct.rtx_def* @expand_binop(i32, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

; Function Attrs: nounwind uwtable
define void @expand_dec(%struct.rtx_def* %target, %struct.rtx_def* %dec) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %1 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear, %struct.optab* %1, %struct.rtx_def* %target, %struct.rtx_def* %dec, %struct.rtx_def* %target, i32 0, i32 3) #3
  %cmp = icmp eq %struct.rtx_def* %call, %target
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %call) #3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

declare %struct.rtx_def* @expand_expr(%union.tree_node*, %struct.rtx_def*, i32, i32) #1

; Function Attrs: nounwind uwtable
define %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %x) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 54, label %sw.bb
    i32 55, label %sw.bb17
    i32 56, label %sw.bb37
    i32 75, label %sw.bb51
    i32 76, label %sw.bb61
    i32 77, label %sw.bb72
    i32 78, label %sw.bb79
    i32 87, label %sw.bb90
    i32 90, label %sw.bb101
    i32 89, label %sw.bb115
    i32 79, label %sw.bb129
    i32 81, label %sw.bb150
    i32 120, label %sw.bb163
    i32 121, label %sw.bb163
  ]

sw.bb:                                            ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !20
  %unsigned_flag = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load1 = load i32* %unsigned_flag, align 8
  %bf.clear2 = and i32 %bf.load1, 8192
  %tobool = icmp eq i32 %bf.clear2, 0
  br i1 %tobool, label %lor.rhs, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.bb
  %type3 = bitcast %union.tree_node* %type to %struct.tree_type*
  %mode = getelementptr inbounds %struct.tree_type* %type3, i64 0, i32 6
  %bf.load4 = load i32* %mode, align 4
  %bf.lshr5 = lshr i32 %bf.load4, 9
  %bf.clear6 = and i32 %bf.lshr5, 127
  %idxprom272 = zext i32 %bf.clear6 to i64
  %arrayidx7 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom272
  %2 = load i16* %arrayidx7, align 2, !tbaa !8
  %cmp = icmp ult i16 %2, 64
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %sw.bb, %land.lhs.true
  %phitmp = icmp slt i64 %1, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true
  %3 = phi i1 [ false, %land.lhs.true ], [ %phitmp, %lor.rhs ]
  %conv14 = sext i1 %3 to i64
  %call = call %union.tree_node* @build_int_2_wide(i64 %1, i64 %conv14) #3
  %type16 = getelementptr inbounds %union.tree_node* %call, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %type, %union.tree_node** %type16, align 8, !tbaa !21
  br label %return

sw.bb17:                                          ; preds = %entry
  %bf.clear20 = and i32 %bf.load, 16711680
  %cmp21 = icmp eq i32 %bf.clear20, 0
  %rtwint25 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, i32 0
  br i1 %cmp21, label %if.then, label %do.body

if.then:                                          ; preds = %sw.bb17
  %4 = load i64* %rtwint25, align 8, !tbaa !20
  %rtwint28 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 2, i32 0
  %5 = load i64* %rtwint28, align 8, !tbaa !20
  %call29 = call %union.tree_node* @build_int_2_wide(i64 %4, i64 %5) #3
  %type31 = getelementptr inbounds %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %type, %union.tree_node** %type31, align 8, !tbaa !21
  br label %return

do.body:                                          ; preds = %sw.bb17
  %tmpcast = bitcast i64* %rtwint25 to %struct.realvaluetype*
  %call36 = call %union.tree_node* @build_real(%union.tree_node* %type, %struct.realvaluetype* byval align 8 %tmpcast) #3
  br label %return

sw.bb37:                                          ; preds = %entry
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtvec_def**
  %6 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %num_elem = getelementptr inbounds %struct.rtvec_def* %6, i64 0, i32 0
  %7 = load i32* %num_elem, align 4, !tbaa !23
  %cmp41274 = icmp sgt i32 %7, 0
  br i1 %cmp41274, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %sw.bb37
  %8 = sext i32 %7 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %9 = phi %struct.rtvec_def* [ %6, %for.body.lr.ph ], [ %.pre, %for.body.for.body_crit_edge ]
  %indvars.iv = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next, %for.body.for.body_crit_edge ]
  %t38.0275 = phi %union.tree_node* [ null, %for.body.lr.ph ], [ %call49, %for.body.for.body_crit_edge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx47 = getelementptr inbounds %struct.rtvec_def* %9, i64 0, i32 1, i64 %indvars.iv.next
  %10 = load %struct.rtx_def** %arrayidx47, align 8, !tbaa !4
  %call48 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %10)
  %call49 = call %union.tree_node* @tree_cons(%union.tree_node* null, %union.tree_node* %call48, %union.tree_node* %t38.0275) #3
  %11 = trunc i64 %indvars.iv.next to i32
  %cmp41 = icmp sgt i32 %11, 0
  br i1 %cmp41, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  br label %for.body

for.end:                                          ; preds = %for.body, %sw.bb37
  %t38.0.lcssa = phi %union.tree_node* [ null, %sw.bb37 ], [ %call49, %for.body ]
  %call50 = call %union.tree_node* @build_vector(%union.tree_node* %type, %union.tree_node* %t38.0.lcssa) #3
  br label %return

sw.bb51:                                          ; preds = %entry
  %fld52 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx = bitcast [1 x %union.rtunion_def]* %fld52 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %call54 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %12)
  %arrayidx56 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**
  %13 = load %struct.rtx_def** %rtx57, align 8, !tbaa !4
  %call58 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %13)
  %call59 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %type, %union.tree_node* %call54, %union.tree_node* %call58) #3
  %call60 = call %union.tree_node* @fold(%union.tree_node* %call59) #3
  br label %return

sw.bb61:                                          ; preds = %entry
  %fld62 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx64 = bitcast [1 x %union.rtunion_def]* %fld62 to %struct.rtx_def**
  %14 = load %struct.rtx_def** %rtx64, align 8, !tbaa !4
  %call65 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %14)
  %arrayidx67 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx68, align 8, !tbaa !4
  %call69 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %15)
  %call70 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 60, %union.tree_node* %type, %union.tree_node* %call65, %union.tree_node* %call69) #3
  %call71 = call %union.tree_node* @fold(%union.tree_node* %call70) #3
  br label %return

sw.bb72:                                          ; preds = %entry
  %arrayidx74 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx75, align 8, !tbaa !4
  %call76 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %16)
  %call77 = call %union.tree_node* @build1(i32 77, %union.tree_node* %type, %union.tree_node* %call76) #3
  %call78 = call %union.tree_node* @fold(%union.tree_node* %call77) #3
  br label %return

sw.bb79:                                          ; preds = %entry
  %fld80 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx82 = bitcast [1 x %union.rtunion_def]* %fld80 to %struct.rtx_def**
  %17 = load %struct.rtx_def** %rtx82, align 8, !tbaa !4
  %call83 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %17)
  %arrayidx85 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx86, align 8, !tbaa !4
  %call87 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %18)
  %call88 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %type, %union.tree_node* %call83, %union.tree_node* %call87) #3
  %call89 = call %union.tree_node* @fold(%union.tree_node* %call88) #3
  br label %return

sw.bb90:                                          ; preds = %entry
  %fld91 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx93 = bitcast [1 x %union.rtunion_def]* %fld91 to %struct.rtx_def**
  %19 = load %struct.rtx_def** %rtx93, align 8, !tbaa !4
  %call94 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %19)
  %arrayidx96 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**
  %20 = load %struct.rtx_def** %rtx97, align 8, !tbaa !4
  %call98 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %20)
  %call99 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 82, %union.tree_node* %type, %union.tree_node* %call94, %union.tree_node* %call98) #3
  %call100 = call %union.tree_node* @fold(%union.tree_node* %call99) #3
  br label %return

sw.bb101:                                         ; preds = %entry
  %call102 = call %union.tree_node* @unsigned_type(%union.tree_node* %type) #3
  %call103 = call %union.tree_node* @unsigned_type(%union.tree_node* %type) #3
  %fld104 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx106 = bitcast [1 x %union.rtunion_def]* %fld104 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx106, align 8, !tbaa !4
  %call107 = call %union.tree_node* @make_tree(%union.tree_node* %call103, %struct.rtx_def* %21)
  %arrayidx109 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx110, align 8, !tbaa !4
  %call111 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %22)
  %call112 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 83, %union.tree_node* %call102, %union.tree_node* %call107, %union.tree_node* %call111) #3
  %call113 = call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call112) #3
  %call114 = call %union.tree_node* @fold(%union.tree_node* %call113) #3
  br label %return

sw.bb115:                                         ; preds = %entry
  %call116 = call %union.tree_node* @signed_type(%union.tree_node* %type) #3
  %call117 = call %union.tree_node* @signed_type(%union.tree_node* %type) #3
  %fld118 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx120 = bitcast [1 x %union.rtunion_def]* %fld118 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx120, align 8, !tbaa !4
  %call121 = call %union.tree_node* @make_tree(%union.tree_node* %call117, %struct.rtx_def* %23)
  %arrayidx123 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**
  %24 = load %struct.rtx_def** %rtx124, align 8, !tbaa !4
  %call125 = call %union.tree_node* @make_tree(%union.tree_node* %type, %struct.rtx_def* %24)
  %call126 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 83, %union.tree_node* %call116, %union.tree_node* %call121, %union.tree_node* %call125) #3
  %call127 = call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call126) #3
  %call128 = call %union.tree_node* @fold(%union.tree_node* %call127) #3
  br label %return

sw.bb129:                                         ; preds = %entry
  %code = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2
  %bf.load131 = load i32* %code, align 8
  %bf.clear132 = and i32 %bf.load131, 255
  %cmp133 = icmp eq i32 %bf.clear132, 7
  br i1 %cmp133, label %if.end138, label %if.then135

if.then135:                                       ; preds = %sw.bb129
  %call136 = call %union.tree_node* @signed_type(%union.tree_node* %type) #3
  br label %if.end138

if.end138:                                        ; preds = %sw.bb129, %if.then135
  %t.1 = phi %union.tree_node* [ %call136, %if.then135 ], [ %type, %sw.bb129 ]
  %fld139 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx141 = bitcast [1 x %union.rtunion_def]* %fld139 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx141, align 8, !tbaa !4
  %call142 = call %union.tree_node* @make_tree(%union.tree_node* %t.1, %struct.rtx_def* %25)
  %arrayidx144 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx145, align 8, !tbaa !4
  %call146 = call %union.tree_node* @make_tree(%union.tree_node* %t.1, %struct.rtx_def* %26)
  %call147 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 62, %union.tree_node* %t.1, %union.tree_node* %call142, %union.tree_node* %call146) #3
  %call148 = call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call147) #3
  %call149 = call %union.tree_node* @fold(%union.tree_node* %call148) #3
  br label %return

sw.bb150:                                         ; preds = %entry
  %call151 = call %union.tree_node* @unsigned_type(%union.tree_node* %type) #3
  %fld152 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1
  %rtx154 = bitcast [1 x %union.rtunion_def]* %fld152 to %struct.rtx_def**
  %27 = load %struct.rtx_def** %rtx154, align 8, !tbaa !4
  %call155 = call %union.tree_node* @make_tree(%union.tree_node* %call151, %struct.rtx_def* %27)
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1
  %rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  %28 = load %struct.rtx_def** %rtx158, align 8, !tbaa !4
  %call159 = call %union.tree_node* @make_tree(%union.tree_node* %call151, %struct.rtx_def* %28)
  %call160 = call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 62, %union.tree_node* %call151, %union.tree_node* %call155, %union.tree_node* %call159) #3
  %call161 = call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call160) #3
  %call162 = call %union.tree_node* @fold(%union.tree_node* %call161) #3
  br label %return

sw.bb163:                                         ; preds = %entry, %entry
  %arrayidx165 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**
  %29 = load %struct.rtx_def** %rtx166, align 8, !tbaa !4
  %30 = getelementptr inbounds %struct.rtx_def* %29, i64 0, i32 0
  %bf.load167 = load i32* %30, align 8
  %bf.lshr168 = lshr i32 %bf.load167, 16
  %bf.clear169 = and i32 %bf.lshr168, 255
  %cmp172 = icmp eq i32 %bf.clear, 121
  %conv173 = zext i1 %cmp172 to i32
  %call174 = call %union.tree_node* @type_for_mode(i32 %bf.clear169, i32 %conv173) #3
  %31 = load %struct.rtx_def** %rtx166, align 8, !tbaa !4
  %call178 = call %union.tree_node* @make_tree(%union.tree_node* %call174, %struct.rtx_def* %31)
  %call179 = call %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %call178) #3
  %call180 = call %union.tree_node* @fold(%union.tree_node* %call179) #3
  br label %return

sw.default:                                       ; preds = %entry
  %call181 = call %union.tree_node* @make_node(i32 120) #3
  %type183 = getelementptr inbounds %union.tree_node* %call181, i64 0, i32 0, i32 0, i32 1
  store %union.tree_node* %type, %union.tree_node** %type183, align 8, !tbaa !21
  %operands = getelementptr inbounds %union.tree_node* %call181, i64 0, i32 0, i32 2
  %arrayidx184 = getelementptr inbounds i32* %operands, i64 2
  %32 = bitcast i32* %arrayidx184 to %struct.rtx_def**
  store %struct.rtx_def* %x, %struct.rtx_def** %32, align 8, !tbaa !4
  %33 = bitcast i32* %operands to %struct.rtx_def**
  store %struct.rtx_def* null, %struct.rtx_def** %33, align 8, !tbaa !4
  br label %return

return:                                           ; preds = %if.then, %do.body, %sw.default, %sw.bb163, %sw.bb150, %if.end138, %sw.bb115, %sw.bb101, %sw.bb90, %sw.bb79, %sw.bb72, %sw.bb61, %sw.bb51, %for.end, %lor.end
  %retval.0 = phi %union.tree_node* [ %call181, %sw.default ], [ %call180, %sw.bb163 ], [ %call162, %sw.bb150 ], [ %call149, %if.end138 ], [ %call128, %sw.bb115 ], [ %call114, %sw.bb101 ], [ %call100, %sw.bb90 ], [ %call89, %sw.bb79 ], [ %call78, %sw.bb72 ], [ %call71, %sw.bb61 ], [ %call60, %sw.bb51 ], [ %call50, %for.end ], [ %call, %lor.end ], [ %call29, %if.then ], [ %call36, %do.body ]
  ret %union.tree_node* %retval.0
}

declare %union.tree_node* @fold(%union.tree_node*) #1

declare %union.tree_node* @build(i32, %union.tree_node*, ...) #1

declare %union.tree_node* @convert(%union.tree_node*, %union.tree_node*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_mult(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %alg = alloca %struct.algorithm, align 4
  %alg2 = alloca %struct.algorithm, align 4
  %0 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 55
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear2 = and i32 %bf.lshr, 255
  %idxprom450 = zext i32 %bf.clear2 to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom450
  %1 = load i32* %arrayidx, align 4, !tbaa !1
  %cmp3 = icmp eq i32 %1, 1
  br i1 %cmp3, label %land.lhs.true4, label %if.else

land.lhs.true4:                                   ; preds = %land.lhs.true
  %2 = load i32* @target_flags, align 4, !tbaa !6
  %and = lshr i32 %2, 20
  %3 = and i32 %and, 32
  %4 = add i32 %3, 32
  %cmp5 = icmp ult i32 %4, 33
  br i1 %cmp5, label %land.lhs.true6, label %if.else

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %rtwint = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 2, i32 0
  %5 = load i64* %rtwint, align 8, !tbaa !20
  %cmp8 = icmp eq i64 %5, 0
  br i1 %cmp8, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true6
  %rtwint11 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 1, i32 0
  %6 = load i64* %rtwint11, align 8, !tbaa !20
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %6) #3
  br label %if.end28

if.else:                                          ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %entry
  %idxprom12 = sext i32 %mode to i64
  %arrayidx13 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom12
  %7 = load i16* %arrayidx13, align 2, !tbaa !8
  %cmp14 = icmp ugt i16 %7, 32
  %cmp19 = icmp eq i32 %bf.clear, 54
  %or.cond611 = and i1 %cmp14, %cmp19
  br i1 %or.cond611, label %land.lhs.true21, label %if.end28

land.lhs.true21:                                  ; preds = %if.else
  %rtwint24 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %8 = load i64* %rtwint24, align 8, !tbaa !20
  %cmp25 = icmp slt i64 %8, 0
  br i1 %cmp25, label %if.end289, label %land.lhs.true30

if.end28:                                         ; preds = %if.else, %if.then
  %const_op1.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %op1, %if.else ]
  %tobool29 = icmp eq %struct.rtx_def* %const_op1.0, null
  br i1 %tobool29, label %if.end289, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %land.lhs.true21, %if.end28
  %const_op1.0610 = phi %struct.rtx_def* [ %const_op1.0, %if.end28 ], [ %op1, %land.lhs.true21 ]
  %9 = getelementptr inbounds %struct.rtx_def* %const_op1.0610, i64 0, i32 0
  %bf.load31 = load i32* %9, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 54
  br i1 %cmp33, label %land.lhs.true35, label %if.end289

land.lhs.true35:                                  ; preds = %land.lhs.true30
  %tobool36 = icmp eq i32 %unsignedp, 0
  %10 = load i32* @flag_trapv, align 4
  %tobool37 = icmp ne i32 %10, 0
  %or.cond = and i1 %tobool36, %tobool37
  br i1 %or.cond, label %if.end289, label %if.then38

if.then38:                                        ; preds = %land.lhs.true35
  %11 = bitcast %struct.algorithm* %alg to i8*
  call void @llvm.lifetime.start(i64 324, i8* %11) #3
  %12 = bitcast %struct.algorithm* %alg2 to i8*
  call void @llvm.lifetime.start(i64 324, i8* %12) #3
  %rtwint41 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %13 = load i64* %rtwint41, align 8, !tbaa !20
  %call42 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %op0) #3
  %call43 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %mode, %struct.rtx_def* %call42, %struct.rtx_def* %op1) #3
  %call44 = tail call i32 @rtx_cost(%struct.rtx_def* %call43, i32 47) #3
  %14 = load i32* @add_cost, align 4, !tbaa !6
  %mul = mul nsw i32 %14, 12
  %cmp45 = icmp slt i32 %mul, %call44
  %mul.call44 = select i1 %cmp45, i32 %mul, i32 %call44
  call fastcc void @synth_mult(%struct.algorithm* %alg, i64 %13, i32 %mul.call44)
  %idxprom49 = sext i32 %mode to i64
  %arrayidx50 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom49
  %15 = load i16* %arrayidx50, align 2, !tbaa !8
  %cmp52 = icmp ult i16 %15, 33
  br i1 %cmp52, label %if.then54, label %if.then38.if.end73_crit_edge

if.then38.if.end73_crit_edge:                     ; preds = %if.then38
  %cost75.pre = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 0
  %cost86.pre = getelementptr inbounds %struct.algorithm* %alg2, i64 0, i32 0
  br label %if.end73

if.then54:                                        ; preds = %if.then38
  %sub = sub nsw i64 0, %13
  %cost = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 0
  %16 = load i16* %cost, align 4, !tbaa !25
  %conv55 = sext i16 %16 to i32
  %cmp56 = icmp slt i32 %conv55, %mul.call44
  %conv55.mul.call44 = select i1 %cmp56, i32 %conv55, i32 %mul.call44
  %17 = load i32* @negate_cost, align 4, !tbaa !6
  %sub64 = sub nsw i32 %conv55.mul.call44, %17
  call fastcc void @synth_mult(%struct.algorithm* %alg2, i64 %sub, i32 %sub64)
  %cost65 = getelementptr inbounds %struct.algorithm* %alg2, i64 0, i32 0
  %18 = load i16* %cost65, align 4, !tbaa !25
  %conv66 = sext i16 %18 to i32
  %19 = load i32* @negate_cost, align 4, !tbaa !6
  %add = add nsw i32 %conv66, %19
  %cmp69 = icmp slt i32 %add, %conv55
  br i1 %cmp69, label %if.then71, label %if.end73

if.then71:                                        ; preds = %if.then54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 324, i32 4, i1 false), !tbaa.struct !27
  br label %if.end73

if.end73:                                         ; preds = %if.then38.if.end73_crit_edge, %if.then54, %if.then71
  %cost86.pre-phi = phi i16* [ %cost86.pre, %if.then38.if.end73_crit_edge ], [ %cost65, %if.then54 ], [ %cost65, %if.then71 ]
  %cost75.pre-phi = phi i16* [ %cost75.pre, %if.then38.if.end73_crit_edge ], [ %cost, %if.then54 ], [ %cost, %if.then71 ]
  %variant.0 = phi i32 [ 0, %if.then38.if.end73_crit_edge ], [ 0, %if.then54 ], [ 1, %if.then71 ]
  %sub74 = add nsw i64 %13, -1
  %20 = bitcast i16* %cost75.pre-phi to i32*
  %21 = load i32* %20, align 4
  %sext = shl i32 %21, 16
  %conv76 = ashr exact i32 %sext, 16
  %cmp77 = icmp slt i32 %conv76, %mul.call44
  %conv76.mul.call44 = select i1 %cmp77, i32 %conv76, i32 %mul.call44
  %22 = load i32* @add_cost, align 4, !tbaa !6
  %sub85 = sub nsw i32 %conv76.mul.call44, %22
  call fastcc void @synth_mult(%struct.algorithm* %alg2, i64 %sub74, i32 %sub85)
  %23 = load i16* %cost86.pre-phi, align 4, !tbaa !25
  %conv87 = sext i16 %23 to i32
  %24 = load i32* @add_cost, align 4, !tbaa !6
  %add88 = add nsw i32 %conv87, %24
  %cmp91 = icmp slt i32 %add88, %conv76
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end73
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 324, i32 4, i1 false), !tbaa.struct !27
  %25 = load i32* %20, align 4
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end73
  %.in612.in = phi i32 [ %25, %if.then93 ], [ %21, %if.end73 ]
  %variant.1 = phi i32 [ 2, %if.then93 ], [ %variant.0, %if.end73 ]
  %.in612 = lshr i32 %.in612.in, 16
  %26 = trunc i32 %.in612 to i16
  %sext608 = shl i32 %.in612.in, 16
  %conv96 = ashr exact i32 %sext608, 16
  %cmp97 = icmp slt i32 %conv96, %mul.call44
  br i1 %cmp97, label %if.then99, label %if.end289

if.then99:                                        ; preds = %if.end94
  %call100 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %call42, i32 0) #3
  %27 = getelementptr inbounds %struct.rtx_def* %call100, i64 0, i32 0
  %bf.load101 = load i32* %27, align 8
  %bf.clear102 = and i32 %bf.load101, 65535
  %cmp103 = icmp eq i32 %bf.clear102, 66
  br i1 %cmp103, label %if.then105, label %if.end107

if.then105:                                       ; preds = %if.then99
  %call106 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %call100) #3
  br label %if.end107

if.end107:                                        ; preds = %if.then105, %if.then99
  %op0.addr.0 = phi %struct.rtx_def* [ %call106, %if.then105 ], [ %call100, %if.then99 ]
  %arrayidx108 = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 2, i64 0
  %28 = load i32* %arrayidx108, align 4, !tbaa !1
  switch i32 %28, label %if.else120 [
    i32 0, label %if.then111
    i32 1, label %if.then118
  ]

if.then111:                                       ; preds = %if.end107
  %29 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call112 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode, %struct.rtx_def* %29) #3
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then118, %if.then111
  %accum.1.ph = phi %struct.rtx_def* [ %call112, %if.then111 ], [ %call119, %if.then118 ]
  %val_so_far.1.ph = phi i64 [ 0, %if.then111 ], [ 1, %if.then118 ]
  %cmp124601 = icmp sgt i16 %26, 1
  br i1 %cmp124601, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %cmp142 = icmp ne %struct.rtx_def* %target, null
  %cmp145 = icmp ne i32 %variant.1, 2
  br label %for.body

if.then118:                                       ; preds = %if.end107
  %call119 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode, %struct.rtx_def* %op0.addr.0) #3
  br label %for.cond.preheader

if.else120:                                       ; preds = %if.end107
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2446, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_mult, i64 0, i64 0)) #4
  unreachable

for.body:                                         ; preds = %for.body.lr.ph, %if.end264
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %if.end264 ]
  %val_so_far.1606 = phi i64 [ %val_so_far.1.ph, %for.body.lr.ph ], [ %val_so_far.2, %if.end264 ]
  %accum.1603 = phi %struct.rtx_def* [ %accum.1.ph, %for.body.lr.ph ], [ %accum.2, %if.end264 ]
  %arrayidx128 = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 3, i64 %indvars.iv
  %30 = load i8* %arrayidx128, align 1, !tbaa !1
  %conv129 = sext i8 %30 to i32
  %call130 = tail call i32 @preserve_subexpressions_p() #3
  %tobool131 = icmp ne i32 %call130, 0
  %cond135 = select i1 %tobool131, %struct.rtx_def* null, %struct.rtx_def* %accum.1603
  %sext613 = shl nuw i32 %.in612, 16
  %conv137 = ashr exact i32 %sext613, 16
  %sub138 = add nsw i32 %conv137, -1
  %31 = trunc i64 %indvars.iv to i32
  %cmp139 = icmp eq i32 %31, %sub138
  %or.cond307 = and i1 %cmp139, %cmp142
  %or.cond308 = and i1 %or.cond307, %cmp145
  %or.cond308.not = xor i1 %or.cond308, true
  %or.cond309 = or i1 %tobool131, %or.cond308.not
  %cond152 = select i1 %or.cond309, %struct.rtx_def* null, %struct.rtx_def* %target
  %arrayidx160 = getelementptr inbounds %struct.algorithm* %alg, i64 0, i32 2, i64 %indvars.iv
  %32 = load i32* %arrayidx160, align 4, !tbaa !1
  switch i32 %32, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb164
    i32 4, label %sw.bb178
    i32 7, label %sw.bb192
    i32 8, label %sw.bb206
    i32 5, label %sw.bb220
    i32 6, label %sw.bb234
  ]

sw.bb:                                            ; preds = %for.body
  %conv161 = sext i8 %30 to i64
  %call162 = tail call %union.tree_node* @build_int_2_wide(i64 %conv161, i64 0) #3
  %call.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call162, %struct.rtx_def* null, i32 0, i32 0) #3
  %33 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i = icmp eq %struct.rtx_def* %call.i, %33
  br i1 %cmp7.i, label %expand_shift.exit, label %for.body.i

for.body.i:                                       ; preds = %sw.bb, %if.else79.i
  %try.0189.i = phi i32 [ %inc.i, %if.else79.i ], [ 0, %sw.bb ]
  switch i32 %try.0189.i, label %if.else14.i [
    i32 0, label %if.else79.i
    i32 1, label %if.then13.i
  ]

if.then13.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else14.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else79.i:                                      ; preds = %if.else14.i, %if.then13.i, %for.body.i
  %methods.0.i = phi i32 [ 2, %if.then13.i ], [ 3, %if.else14.i ], [ 0, %for.body.i ]
  %34 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call109.i = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %34, %struct.rtx_def* %accum.1603, %struct.rtx_def* %call.i, %struct.rtx_def* null, i32 0, i32 %methods.0.i) #3
  %inc.i = add nsw i32 %try.0189.i, 1
  %cmp8.i = icmp eq %struct.rtx_def* %call109.i, null
  %cmp9.i = icmp slt i32 %inc.i, 3
  %or.cond116.i = and i1 %cmp8.i, %cmp9.i
  br i1 %or.cond116.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %if.else79.i
  br i1 %cmp8.i, label %if.then113.i, label %expand_shift.exit

if.then113.i:                                     ; preds = %for.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit:                                ; preds = %sw.bb, %for.end.i
  %retval.0.i = phi %struct.rtx_def* [ %accum.1603, %sw.bb ], [ %call109.i, %for.end.i ]
  %sh_prom = zext i32 %conv129 to i64
  %shl = shl i64 %val_so_far.1606, %sh_prom
  br label %sw.epilog

sw.bb164:                                         ; preds = %for.body
  %conv165 = sext i8 %30 to i64
  %call166 = tail call %union.tree_node* @build_int_2_wide(i64 %conv165, i64 0) #3
  %call.i451 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call166, %struct.rtx_def* null, i32 0, i32 0) #3
  %35 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i452 = icmp eq %struct.rtx_def* %call.i451, %35
  br i1 %cmp7.i452, label %expand_shift.exit472, label %for.body.i458

for.body.i458:                                    ; preds = %sw.bb164, %if.else79.i462
  %try.0189.i457 = phi i32 [ %inc.i465, %if.else79.i462 ], [ 0, %sw.bb164 ]
  switch i32 %try.0189.i457, label %if.else14.i460 [
    i32 0, label %if.else79.i462
    i32 1, label %if.then13.i459
  ]

if.then13.i459:                                   ; preds = %for.body.i458
  br label %if.else79.i462

if.else14.i460:                                   ; preds = %for.body.i458
  br label %if.else79.i462

if.else79.i462:                                   ; preds = %if.else14.i460, %if.then13.i459, %for.body.i458
  %methods.0.i461 = phi i32 [ 2, %if.then13.i459 ], [ 3, %if.else14.i460 ], [ 0, %for.body.i458 ]
  %36 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call109.i464 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %36, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call.i451, %struct.rtx_def* null, i32 0, i32 %methods.0.i461) #3
  %inc.i465 = add nsw i32 %try.0189.i457, 1
  %cmp8.i466 = icmp eq %struct.rtx_def* %call109.i464, null
  %cmp9.i467 = icmp slt i32 %inc.i465, 3
  %or.cond116.i468 = and i1 %cmp8.i466, %cmp9.i467
  br i1 %or.cond116.i468, label %for.body.i458, label %for.end.i469

for.end.i469:                                     ; preds = %if.else79.i462
  br i1 %cmp8.i466, label %if.then113.i470, label %expand_shift.exit472

if.then113.i470:                                  ; preds = %for.end.i469
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit472:                             ; preds = %sw.bb164, %for.end.i469
  %retval.0.i471 = phi %struct.rtx_def* [ %op0.addr.0, %sw.bb164 ], [ %call109.i464, %for.end.i469 ]
  %call168 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %accum.1603, %struct.rtx_def* %retval.0.i471) #3
  %tobool169 = icmp ne %struct.rtx_def* %cond152, null
  %cond173 = select i1 %tobool169, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call174 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call168, %struct.rtx_def* %cond173) #3
  %sh_prom175 = zext i32 %conv129 to i64
  %shl176 = shl i64 1, %sh_prom175
  %add177 = add nsw i64 %shl176, %val_so_far.1606
  br label %sw.epilog

sw.bb178:                                         ; preds = %for.body
  %conv179 = sext i8 %30 to i64
  %call180 = tail call %union.tree_node* @build_int_2_wide(i64 %conv179, i64 0) #3
  %call.i473 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call180, %struct.rtx_def* null, i32 0, i32 0) #3
  %37 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i474 = icmp eq %struct.rtx_def* %call.i473, %37
  br i1 %cmp7.i474, label %expand_shift.exit494, label %for.body.i480

for.body.i480:                                    ; preds = %sw.bb178, %if.else79.i484
  %try.0189.i479 = phi i32 [ %inc.i487, %if.else79.i484 ], [ 0, %sw.bb178 ]
  switch i32 %try.0189.i479, label %if.else14.i482 [
    i32 0, label %if.else79.i484
    i32 1, label %if.then13.i481
  ]

if.then13.i481:                                   ; preds = %for.body.i480
  br label %if.else79.i484

if.else14.i482:                                   ; preds = %for.body.i480
  br label %if.else79.i484

if.else79.i484:                                   ; preds = %if.else14.i482, %if.then13.i481, %for.body.i480
  %methods.0.i483 = phi i32 [ 2, %if.then13.i481 ], [ 3, %if.else14.i482 ], [ 0, %for.body.i480 ]
  %38 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call109.i486 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %38, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call.i473, %struct.rtx_def* null, i32 0, i32 %methods.0.i483) #3
  %inc.i487 = add nsw i32 %try.0189.i479, 1
  %cmp8.i488 = icmp eq %struct.rtx_def* %call109.i486, null
  %cmp9.i489 = icmp slt i32 %inc.i487, 3
  %or.cond116.i490 = and i1 %cmp8.i488, %cmp9.i489
  br i1 %or.cond116.i490, label %for.body.i480, label %for.end.i491

for.end.i491:                                     ; preds = %if.else79.i484
  br i1 %cmp8.i488, label %if.then113.i492, label %expand_shift.exit494

if.then113.i492:                                  ; preds = %for.end.i491
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit494:                             ; preds = %sw.bb178, %for.end.i491
  %retval.0.i493 = phi %struct.rtx_def* [ %op0.addr.0, %sw.bb178 ], [ %call109.i486, %for.end.i491 ]
  %call182 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode, %struct.rtx_def* %accum.1603, %struct.rtx_def* %retval.0.i493) #3
  %tobool183 = icmp ne %struct.rtx_def* %cond152, null
  %cond187 = select i1 %tobool183, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call188 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call182, %struct.rtx_def* %cond187) #3
  %sh_prom189 = zext i32 %conv129 to i64
  %shl190 = shl i64 1, %sh_prom189
  %sub191 = sub nsw i64 %val_so_far.1606, %shl190
  br label %sw.epilog

sw.bb192:                                         ; preds = %for.body
  %conv193 = sext i8 %30 to i64
  %call194 = tail call %union.tree_node* @build_int_2_wide(i64 %conv193, i64 0) #3
  %call.i495 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call194, %struct.rtx_def* null, i32 0, i32 0) #3
  %39 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i496 = icmp eq %struct.rtx_def* %call.i495, %39
  br i1 %cmp7.i496, label %expand_shift.exit516, label %for.body.i502

for.body.i502:                                    ; preds = %sw.bb192, %if.else79.i506
  %try.0189.i501 = phi i32 [ %inc.i509, %if.else79.i506 ], [ 0, %sw.bb192 ]
  switch i32 %try.0189.i501, label %if.else14.i504 [
    i32 0, label %if.else79.i506
    i32 1, label %if.then13.i503
  ]

if.then13.i503:                                   ; preds = %for.body.i502
  br label %if.else79.i506

if.else14.i504:                                   ; preds = %for.body.i502
  br label %if.else79.i506

if.else79.i506:                                   ; preds = %if.else14.i504, %if.then13.i503, %for.body.i502
  %methods.0.i505 = phi i32 [ 2, %if.then13.i503 ], [ 3, %if.else14.i504 ], [ 0, %for.body.i502 ]
  %40 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call109.i508 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %40, %struct.rtx_def* %accum.1603, %struct.rtx_def* %call.i495, %struct.rtx_def* %cond135, i32 0, i32 %methods.0.i505) #3
  %inc.i509 = add nsw i32 %try.0189.i501, 1
  %cmp8.i510 = icmp eq %struct.rtx_def* %call109.i508, null
  %cmp9.i511 = icmp slt i32 %inc.i509, 3
  %or.cond116.i512 = and i1 %cmp8.i510, %cmp9.i511
  br i1 %or.cond116.i512, label %for.body.i502, label %for.end.i513

for.end.i513:                                     ; preds = %if.else79.i506
  br i1 %cmp8.i510, label %if.then113.i514, label %expand_shift.exit516

if.then113.i514:                                  ; preds = %for.end.i513
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit516:                             ; preds = %sw.bb192, %for.end.i513
  %retval.0.i515 = phi %struct.rtx_def* [ %accum.1603, %sw.bb192 ], [ %call109.i508, %for.end.i513 ]
  %call196 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %retval.0.i515, %struct.rtx_def* %op0.addr.0) #3
  %tobool197 = icmp ne %struct.rtx_def* %cond152, null
  %cond201 = select i1 %tobool197, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call202 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call196, %struct.rtx_def* %cond201) #3
  %sh_prom203 = zext i32 %conv129 to i64
  %shl204 = shl i64 %val_so_far.1606, %sh_prom203
  %add205 = add nsw i64 %shl204, 1
  br label %sw.epilog

sw.bb206:                                         ; preds = %for.body
  %conv207 = sext i8 %30 to i64
  %call208 = tail call %union.tree_node* @build_int_2_wide(i64 %conv207, i64 0) #3
  %call.i517 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call208, %struct.rtx_def* null, i32 0, i32 0) #3
  %41 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i518 = icmp eq %struct.rtx_def* %call.i517, %41
  br i1 %cmp7.i518, label %expand_shift.exit538, label %for.body.i524

for.body.i524:                                    ; preds = %sw.bb206, %if.else79.i528
  %try.0189.i523 = phi i32 [ %inc.i531, %if.else79.i528 ], [ 0, %sw.bb206 ]
  switch i32 %try.0189.i523, label %if.else14.i526 [
    i32 0, label %if.else79.i528
    i32 1, label %if.then13.i525
  ]

if.then13.i525:                                   ; preds = %for.body.i524
  br label %if.else79.i528

if.else14.i526:                                   ; preds = %for.body.i524
  br label %if.else79.i528

if.else79.i528:                                   ; preds = %if.else14.i526, %if.then13.i525, %for.body.i524
  %methods.0.i527 = phi i32 [ 2, %if.then13.i525 ], [ 3, %if.else14.i526 ], [ 0, %for.body.i524 ]
  %42 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call109.i530 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %42, %struct.rtx_def* %accum.1603, %struct.rtx_def* %call.i517, %struct.rtx_def* %cond135, i32 0, i32 %methods.0.i527) #3
  %inc.i531 = add nsw i32 %try.0189.i523, 1
  %cmp8.i532 = icmp eq %struct.rtx_def* %call109.i530, null
  %cmp9.i533 = icmp slt i32 %inc.i531, 3
  %or.cond116.i534 = and i1 %cmp8.i532, %cmp9.i533
  br i1 %or.cond116.i534, label %for.body.i524, label %for.end.i535

for.end.i535:                                     ; preds = %if.else79.i528
  br i1 %cmp8.i532, label %if.then113.i536, label %expand_shift.exit538

if.then113.i536:                                  ; preds = %for.end.i535
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit538:                             ; preds = %sw.bb206, %for.end.i535
  %retval.0.i537 = phi %struct.rtx_def* [ %accum.1603, %sw.bb206 ], [ %call109.i530, %for.end.i535 ]
  %call210 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode, %struct.rtx_def* %retval.0.i537, %struct.rtx_def* %op0.addr.0) #3
  %tobool211 = icmp ne %struct.rtx_def* %cond152, null
  %cond215 = select i1 %tobool211, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call216 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call210, %struct.rtx_def* %cond215) #3
  %sh_prom217 = zext i32 %conv129 to i64
  %shl218 = shl i64 %val_so_far.1606, %sh_prom217
  %sub219 = add nsw i64 %shl218, -1
  br label %sw.epilog

sw.bb220:                                         ; preds = %for.body
  %conv221 = sext i8 %30 to i64
  %call222 = tail call %union.tree_node* @build_int_2_wide(i64 %conv221, i64 0) #3
  %call.i539 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call222, %struct.rtx_def* null, i32 0, i32 0) #3
  %43 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i540 = icmp eq %struct.rtx_def* %call.i539, %43
  br i1 %cmp7.i540, label %expand_shift.exit560, label %for.body.i546

for.body.i546:                                    ; preds = %sw.bb220, %if.else79.i550
  %try.0189.i545 = phi i32 [ %inc.i553, %if.else79.i550 ], [ 0, %sw.bb220 ]
  switch i32 %try.0189.i545, label %if.else14.i548 [
    i32 0, label %if.else79.i550
    i32 1, label %if.then13.i547
  ]

if.then13.i547:                                   ; preds = %for.body.i546
  br label %if.else79.i550

if.else14.i548:                                   ; preds = %for.body.i546
  br label %if.else79.i550

if.else79.i550:                                   ; preds = %if.else14.i548, %if.then13.i547, %for.body.i546
  %methods.0.i549 = phi i32 [ 2, %if.then13.i547 ], [ 3, %if.else14.i548 ], [ 0, %for.body.i546 ]
  %44 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call109.i552 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %44, %struct.rtx_def* %accum.1603, %struct.rtx_def* %call.i539, %struct.rtx_def* null, i32 0, i32 %methods.0.i549) #3
  %inc.i553 = add nsw i32 %try.0189.i545, 1
  %cmp8.i554 = icmp eq %struct.rtx_def* %call109.i552, null
  %cmp9.i555 = icmp slt i32 %inc.i553, 3
  %or.cond116.i556 = and i1 %cmp8.i554, %cmp9.i555
  br i1 %or.cond116.i556, label %for.body.i546, label %for.end.i557

for.end.i557:                                     ; preds = %if.else79.i550
  br i1 %cmp8.i554, label %if.then113.i558, label %expand_shift.exit560

if.then113.i558:                                  ; preds = %for.end.i557
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit560:                             ; preds = %sw.bb220, %for.end.i557
  %retval.0.i559 = phi %struct.rtx_def* [ %accum.1603, %sw.bb220 ], [ %call109.i552, %for.end.i557 ]
  %call224 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %accum.1603, %struct.rtx_def* %retval.0.i559) #3
  %tobool225 = icmp ne %struct.rtx_def* %cond152, null
  %cond229 = select i1 %tobool225, %struct.rtx_def* %cond152, %struct.rtx_def* %cond135
  %call230 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call224, %struct.rtx_def* %cond229) #3
  %sh_prom231 = zext i32 %conv129 to i64
  %shl232 = shl i64 %val_so_far.1606, %sh_prom231
  %add233 = add nsw i64 %shl232, %val_so_far.1606
  br label %sw.epilog

sw.bb234:                                         ; preds = %for.body
  %conv235 = sext i8 %30 to i64
  %call236 = tail call %union.tree_node* @build_int_2_wide(i64 %conv235, i64 0) #3
  %call.i561 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call236, %struct.rtx_def* null, i32 0, i32 0) #3
  %45 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i562 = icmp eq %struct.rtx_def* %call.i561, %45
  br i1 %cmp7.i562, label %expand_shift.exit582, label %for.body.i568

for.body.i568:                                    ; preds = %sw.bb234, %if.else79.i572
  %try.0189.i567 = phi i32 [ %inc.i575, %if.else79.i572 ], [ 0, %sw.bb234 ]
  switch i32 %try.0189.i567, label %if.else14.i570 [
    i32 0, label %if.else79.i572
    i32 1, label %if.then13.i569
  ]

if.then13.i569:                                   ; preds = %for.body.i568
  br label %if.else79.i572

if.else14.i570:                                   ; preds = %for.body.i568
  br label %if.else79.i572

if.else79.i572:                                   ; preds = %if.else14.i570, %if.then13.i569, %for.body.i568
  %methods.0.i571 = phi i32 [ 2, %if.then13.i569 ], [ 3, %if.else14.i570 ], [ 0, %for.body.i568 ]
  %46 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call109.i574 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %46, %struct.rtx_def* %accum.1603, %struct.rtx_def* %call.i561, %struct.rtx_def* null, i32 0, i32 %methods.0.i571) #3
  %inc.i575 = add nsw i32 %try.0189.i567, 1
  %cmp8.i576 = icmp eq %struct.rtx_def* %call109.i574, null
  %cmp9.i577 = icmp slt i32 %inc.i575, 3
  %or.cond116.i578 = and i1 %cmp8.i576, %cmp9.i577
  br i1 %or.cond116.i578, label %for.body.i568, label %for.end.i579

for.end.i579:                                     ; preds = %if.else79.i572
  br i1 %cmp8.i576, label %if.then113.i580, label %expand_shift.exit582

if.then113.i580:                                  ; preds = %for.end.i579
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit582:                             ; preds = %sw.bb234, %for.end.i579
  %retval.0.i581 = phi %struct.rtx_def* [ %accum.1603, %sw.bb234 ], [ %call109.i574, %for.end.i579 ]
  %call238 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode, %struct.rtx_def* %retval.0.i581, %struct.rtx_def* %accum.1603) #3
  %tobool239 = icmp eq %struct.rtx_def* %cond152, null
  br i1 %tobool239, label %cond.false241, label %cond.end247

cond.false241:                                    ; preds = %expand_shift.exit582
  %cond246 = select i1 %tobool131, %struct.rtx_def* null, %struct.rtx_def* %retval.0.i581
  br label %cond.end247

cond.end247:                                      ; preds = %expand_shift.exit582, %cond.false241
  %cond248 = phi %struct.rtx_def* [ %cond246, %cond.false241 ], [ %cond152, %expand_shift.exit582 ]
  %call249 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call238, %struct.rtx_def* %cond248) #3
  %sh_prom250 = zext i32 %conv129 to i64
  %shl251 = shl i64 %val_so_far.1606, %sh_prom250
  %sub252 = sub nsw i64 %shl251, %val_so_far.1606
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2524, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_mult, i64 0, i64 0)) #4
  unreachable

sw.epilog:                                        ; preds = %cond.end247, %expand_shift.exit560, %expand_shift.exit538, %expand_shift.exit516, %expand_shift.exit494, %expand_shift.exit472, %expand_shift.exit
  %accum.2 = phi %struct.rtx_def* [ %call249, %cond.end247 ], [ %call230, %expand_shift.exit560 ], [ %call216, %expand_shift.exit538 ], [ %call202, %expand_shift.exit516 ], [ %call188, %expand_shift.exit494 ], [ %call174, %expand_shift.exit472 ], [ %retval.0.i, %expand_shift.exit ]
  %val_so_far.2 = phi i64 [ %sub252, %cond.end247 ], [ %add233, %expand_shift.exit560 ], [ %sub219, %expand_shift.exit538 ], [ %add205, %expand_shift.exit516 ], [ %sub191, %expand_shift.exit494 ], [ %add177, %expand_shift.exit472 ], [ %shl, %expand_shift.exit ]
  %47 = getelementptr inbounds %struct.rtx_def* %accum.2, i64 0, i32 0
  %bf.load253 = load i32* %47, align 8
  %bf.clear254 = and i32 %bf.load253, 65535
  %cmp255 = icmp eq i32 %bf.clear254, 63
  br i1 %cmp255, label %if.then257, label %if.end264

if.then257:                                       ; preds = %sw.epilog
  %arrayidx259 = getelementptr inbounds %struct.rtx_def* %accum.2, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**
  %48 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %49 = getelementptr inbounds %struct.rtx_def* %48, i64 0, i32 0
  %bf.load260 = load i32* %49, align 8
  %bf.lshr261 = lshr i32 %bf.load260, 16
  %bf.clear262 = and i32 %bf.lshr261, 255
  %call263 = tail call %struct.rtx_def* @gen_lowpart(i32 %bf.clear262, %struct.rtx_def* %op0.addr.0) #3
  br label %if.end264

if.end264:                                        ; preds = %if.then257, %sw.epilog
  %tem.0 = phi %struct.rtx_def* [ %call263, %if.then257 ], [ %op0.addr.0, %sw.epilog ]
  %nmode.0 = phi i32 [ %bf.clear262, %if.then257 ], [ %mode, %sw.epilog ]
  %call265 = tail call %struct.rtx_def* @get_last_insn() #3
  %call266 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %val_so_far.2) #3
  %call267 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 78, i32 %nmode.0, %struct.rtx_def* %tem.0, %struct.rtx_def* %call266) #3
  %call268 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call265, i32 4, %struct.rtx_def* %call267) #3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %sext614 = shl nuw i32 %.in612, 16
  %conv123 = ashr exact i32 %sext614, 16
  %50 = trunc i64 %indvars.iv.next to i32
  %cmp124 = icmp slt i32 %50, %conv123
  br i1 %cmp124, label %for.body, label %for.end

for.end:                                          ; preds = %if.end264, %for.cond.preheader
  %val_so_far.1.lcssa = phi i64 [ %val_so_far.1.ph, %for.cond.preheader ], [ %val_so_far.2, %if.end264 ]
  %accum.1.lcssa = phi %struct.rtx_def* [ %accum.1.ph, %for.cond.preheader ], [ %accum.2, %if.end264 ]
  switch i32 %variant.1, label %if.end282 [
    i32 1, label %if.then271
    i32 2, label %if.then277
  ]

if.then271:                                       ; preds = %for.end
  %sub272 = sub nsw i64 0, %val_so_far.1.lcssa
  %51 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 8, !tbaa !4
  %call273 = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %51, %struct.rtx_def* %accum.1.lcssa, %struct.rtx_def* %target, i32 0) #3
  br label %if.end282

if.then277:                                       ; preds = %for.end
  %add278 = add nsw i64 %val_so_far.1.lcssa, 1
  %call279 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode, %struct.rtx_def* %accum.1.lcssa, %struct.rtx_def* %op0.addr.0) #3
  %call280 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call279, %struct.rtx_def* %target) #3
  br label %if.end282

if.end282:                                        ; preds = %for.end, %if.then277, %if.then271
  %accum.3 = phi %struct.rtx_def* [ %call273, %if.then271 ], [ %call280, %if.then277 ], [ %accum.1.lcssa, %for.end ]
  %val_so_far.3 = phi i64 [ %sub272, %if.then271 ], [ %add278, %if.then277 ], [ %val_so_far.1.lcssa, %for.end ]
  %cmp283 = icmp eq i64 %13, %val_so_far.3
  br i1 %cmp283, label %return, label %if.then285

if.then285:                                       ; preds = %if.end282
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2558, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_mult, i64 0, i64 0)) #4
  unreachable

if.end289:                                        ; preds = %if.end94, %land.lhs.true21, %if.end28, %land.lhs.true35, %land.lhs.true30
  %op0.addr.2 = phi %struct.rtx_def* [ %op0, %land.lhs.true35 ], [ %op0, %land.lhs.true30 ], [ %op0, %if.end28 ], [ %op0, %land.lhs.true21 ], [ %call42, %if.end94 ]
  %tobool290 = icmp eq i32 %unsignedp, 0
  %52 = load i32* @flag_trapv, align 4
  %tobool292 = icmp ne i32 %52, 0
  %or.cond310 = and i1 %tobool290, %tobool292
  br i1 %or.cond310, label %land.lhs.true293, label %cond.false299

land.lhs.true293:                                 ; preds = %if.end289
  %idxprom294 = sext i32 %mode to i64
  %arrayidx295 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom294
  %53 = load i32* %arrayidx295, align 4, !tbaa !1
  %cmp296 = icmp eq i32 %53, 1
  br i1 %cmp296, label %cond.end300, label %cond.false299

cond.false299:                                    ; preds = %if.end289, %land.lhs.true293
  br label %cond.end300

cond.end300:                                      ; preds = %land.lhs.true293, %cond.false299
  %cond301.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), %cond.false299 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 5), %land.lhs.true293 ]
  %cond301 = load %struct.optab** %cond301.in, align 8
  %call302 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond301, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp, i32 3) #3
  %cmp303 = icmp eq %struct.rtx_def* %call302, null
  br i1 %cmp303, label %if.then305, label %return

if.then305:                                       ; preds = %cond.end300
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2572, i8* getelementptr inbounds ([12 x i8]* @__FUNCTION__.expand_mult, i64 0, i64 0)) #4
  unreachable

return:                                           ; preds = %if.end282, %cond.end300
  %retval.1 = phi %struct.rtx_def* [ %call302, %cond.end300 ], [ %accum.3, %if.end282 ]
  ret %struct.rtx_def* %retval.1
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define internal fastcc void @synth_mult(%struct.algorithm* nocapture %alg_out, i64 %t, i32 %cost_limit) #0 {
entry:
  %conv = trunc i32 %cost_limit to i16
  %cost1 = getelementptr inbounds %struct.algorithm* %alg_out, i64 0, i32 0
  store i16 %conv, i16* %cost1, align 2, !tbaa !25
  %cmp = icmp slt i32 %cost_limit, 1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  switch i64 %t, label %if.end19 [
    i64 1, label %if.then5
    i64 0, label %if.then10
  ]

if.then5:                                         ; preds = %if.end
  %ops = getelementptr inbounds %struct.algorithm* %alg_out, i64 0, i32 1
  store i16 1, i16* %ops, align 2, !tbaa !28
  store i16 0, i16* %cost1, align 2, !tbaa !25
  %arrayidx = getelementptr inbounds %struct.algorithm* %alg_out, i64 0, i32 2, i64 0
  store i32 1, i32* %arrayidx, align 4, !tbaa !1
  br label %return

if.then10:                                        ; preds = %if.end
  %0 = load i32* @zero_cost, align 4, !tbaa !6
  %cmp11 = icmp slt i32 %0, %cost_limit
  br i1 %cmp11, label %if.else, label %return

if.else:                                          ; preds = %if.then10
  %ops14 = getelementptr inbounds %struct.algorithm* %alg_out, i64 0, i32 1
  store i16 1, i16* %ops14, align 2, !tbaa !28
  %conv15 = trunc i32 %0 to i16
  store i16 %conv15, i16* %cost1, align 2, !tbaa !25
  %arrayidx18 = getelementptr inbounds %struct.algorithm* %alg_out, i64 0, i32 2, i64 0
  store i32 0, i32* %arrayidx18, align 4, !tbaa !1
  br label %return

if.end19:                                         ; preds = %if.end
  %1 = alloca %struct.algorithm, align 2
  %2 = alloca %struct.algorithm, align 1
  %and = and i64 %t, 1
  %cmp20 = icmp eq i64 %and, 0
  br i1 %cmp20, label %if.then22, label %for.cond

if.then22:                                        ; preds = %if.end19
  %sub = sub i64 0, %t
  %and23 = and i64 %t, %sub
  %call = call i32 @floor_log2_wide(i64 %and23) #3
  %3 = load i32* @target_flags, align 4, !tbaa !6
  %and24 = lshr i32 %3, 20
  %4 = and i32 %and24, 32
  %5 = add i32 %4, 32
  %cmp25 = icmp slt i32 %call, %5
  br i1 %cmp25, label %if.then27, label %if.end98

if.then27:                                        ; preds = %if.then22
  %sh_prom = zext i32 %call to i64
  %shr = lshr i64 %t, %sh_prom
  %idxprom = sext i32 %call to i64
  %arrayidx28 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom
  %6 = load i32* %arrayidx28, align 4, !tbaa !6
  %sub29 = sub nsw i32 %cost_limit, %6
  call fastcc void @synth_mult(%struct.algorithm* %1, i64 %shr, i32 %sub29)
  %cost30 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 0
  %7 = load i16* %cost30, align 2, !tbaa !25
  %conv31 = sext i16 %7 to i32
  %add = add nsw i32 %conv31, %6
  %cmp32 = icmp slt i32 %add, %cost_limit
  br i1 %cmp32, label %if.end45, label %if.end98

if.end45:                                         ; preds = %if.then27
  %conv35 = trunc i32 %call to i8
  %ops36 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 1
  %8 = load i16* %ops36, align 2, !tbaa !28
  %idxprom37 = sext i16 %8 to i64
  %arrayidx38 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 3, i64 %idxprom37
  store i8 %conv35, i8* %arrayidx38, align 1, !tbaa !1
  %9 = load i16* %ops36, align 2, !tbaa !28
  %idxprom40 = sext i16 %9 to i64
  %arrayidx42 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 2, i64 %idxprom40
  store i32 2, i32* %arrayidx42, align 4, !tbaa !1
  br label %if.end98

for.cond:                                         ; preds = %if.end19, %for.cond
  %w.0 = phi i64 [ %shl, %for.cond ], [ 1, %if.end19 ]
  %and50 = and i64 %w.0, %t
  %cmp51 = icmp eq i64 %and50, 0
  %shl = shl i64 %w.0, 1
  br i1 %cmp51, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond
  %cmp53 = icmp eq i64 %w.0, 0
  br i1 %cmp53, label %if.then59, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %cmp55 = icmp ugt i64 %w.0, 2
  %cmp57 = icmp ne i64 %t, 3
  %or.cond = and i1 %cmp55, %cmp57
  br i1 %or.cond, label %if.then59, label %if.else78

if.then59:                                        ; preds = %lor.lhs.false, %for.end
  %10 = load i32* @add_cost, align 4, !tbaa !6
  %add60 = add i64 %t, 1
  %sub61 = sub nsw i32 %cost_limit, %10
  call fastcc void @synth_mult(%struct.algorithm* %1, i64 %add60, i32 %sub61)
  %cost62 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 0
  %11 = load i16* %cost62, align 2, !tbaa !25
  %conv63 = sext i16 %11 to i32
  %add64 = add nsw i32 %conv63, %10
  %cmp65 = icmp slt i32 %add64, %cost_limit
  br i1 %cmp65, label %if.then67, label %if.end98

if.then67:                                        ; preds = %if.then59
  %ops69 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 1
  %12 = load i16* %ops69, align 2, !tbaa !28
  %idxprom70 = sext i16 %12 to i64
  %arrayidx72 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 3, i64 %idxprom70
  store i8 0, i8* %arrayidx72, align 1, !tbaa !1
  %13 = load i16* %ops69, align 2, !tbaa !28
  %idxprom74 = sext i16 %13 to i64
  %arrayidx76 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 2, i64 %idxprom74
  store i32 4, i32* %arrayidx76, align 4, !tbaa !1
  br label %if.end98

if.else78:                                        ; preds = %lor.lhs.false
  %14 = load i32* @add_cost, align 4, !tbaa !6
  %sub79 = add i64 %t, -1
  %sub80 = sub nsw i32 %cost_limit, %14
  call fastcc void @synth_mult(%struct.algorithm* %1, i64 %sub79, i32 %sub80)
  %cost81 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 0
  %15 = load i16* %cost81, align 2, !tbaa !25
  %conv82 = sext i16 %15 to i32
  %add83 = add nsw i32 %conv82, %14
  %cmp84 = icmp slt i32 %add83, %cost_limit
  br i1 %cmp84, label %if.then86, label %if.end98

if.then86:                                        ; preds = %if.else78
  %ops88 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 1
  %16 = load i16* %ops88, align 2, !tbaa !28
  %idxprom89 = sext i16 %16 to i64
  %arrayidx91 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 3, i64 %idxprom89
  store i8 0, i8* %arrayidx91, align 1, !tbaa !1
  %17 = load i16* %ops88, align 2, !tbaa !28
  %idxprom93 = sext i16 %17 to i64
  %arrayidx95 = getelementptr inbounds %struct.algorithm* %1, i64 0, i32 2, i64 %idxprom93
  store i32 3, i32* %arrayidx95, align 4, !tbaa !1
  br label %if.end98

if.end98:                                         ; preds = %if.then27, %if.then22, %if.end45, %if.then67, %if.then59, %if.then86, %if.else78
  %cmp47497 = phi i1 [ true, %if.then67 ], [ true, %if.then59 ], [ true, %if.then86 ], [ true, %if.else78 ], [ false, %if.end45 ], [ false, %if.then22 ], [ false, %if.then27 ]
  %best_alg.1 = phi %struct.algorithm* [ %1, %if.then67 ], [ %2, %if.then59 ], [ %1, %if.then86 ], [ %2, %if.else78 ], [ %1, %if.end45 ], [ %2, %if.then22 ], [ %2, %if.then27 ]
  %alg_in.1 = phi %struct.algorithm* [ %2, %if.then67 ], [ %1, %if.then59 ], [ %2, %if.then86 ], [ %1, %if.else78 ], [ %2, %if.end45 ], [ %1, %if.then22 ], [ %1, %if.then27 ]
  %cost_limit.addr.1 = phi i32 [ %add64, %if.then67 ], [ %cost_limit, %if.then59 ], [ %add83, %if.then86 ], [ %cost_limit, %if.else78 ], [ %add, %if.end45 ], [ %cost_limit, %if.then22 ], [ %cost_limit, %if.then27 ]
  %sub99 = add i64 %t, -1
  %call100 = call i32 @floor_log2_wide(i64 %sub99) #3
  %cmp102507 = icmp sgt i32 %call100, 1
  br i1 %cmp102507, label %for.body104.lr.ph, label %for.end205

for.body104.lr.ph:                                ; preds = %if.end98
  %18 = load i32* @target_flags, align 4, !tbaa !6
  %and114 = lshr i32 %18, 20
  %19 = and i32 %and114, 32
  %20 = add i32 %19, 32
  %21 = zext i32 %call100 to i64
  br label %for.body104

for.body104:                                      ; preds = %for.body104.lr.ph, %for.inc204
  %indvars.iv = phi i64 [ %21, %for.body104.lr.ph ], [ %indvars.iv.next, %for.inc204 ]
  %m.0508 = phi i32 [ %call100, %for.body104.lr.ph ], [ %dec, %for.inc204 ]
  %shl106 = shl i64 1, %indvars.iv
  %add107 = add i64 %shl106, 1
  %rem = urem i64 %t, %add107
  %cmp108 = icmp eq i64 %rem, 0
  %cmp111 = icmp ult i64 %add107, %t
  %or.cond494 = and i1 %cmp108, %cmp111
  %22 = trunc i64 %indvars.iv to i32
  %cmp117 = icmp slt i32 %22, %20
  %or.cond516 = and i1 %or.cond494, %cmp117
  br i1 %or.cond516, label %if.then119, label %if.end151

if.then119:                                       ; preds = %for.body104
  %sext515 = shl i64 %indvars.iv, 32
  %idxprom120 = ashr exact i64 %sext515, 32
  %arrayidx121 = getelementptr inbounds [64 x i32]* @shiftadd_cost, i64 0, i64 %idxprom120
  %23 = load i32* %arrayidx121, align 4, !tbaa !6
  %24 = load i32* @add_cost, align 4, !tbaa !6
  %arrayidx123 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom120
  %25 = load i32* %arrayidx123, align 4, !tbaa !6
  %add124 = add nsw i32 %25, %24
  %cmp125 = icmp slt i32 %23, %add124
  %.add124 = select i1 %cmp125, i32 %23, i32 %add124
  %div = udiv i64 %t, %add107
  %sub133 = sub nsw i32 %cost_limit.addr.1, %.add124
  call fastcc void @synth_mult(%struct.algorithm* %alg_in.1, i64 %div, i32 %sub133)
  %cost134 = getelementptr inbounds %struct.algorithm* %alg_in.1, i64 0, i32 0
  %26 = load i16* %cost134, align 2, !tbaa !25
  %conv135 = sext i16 %26 to i32
  %add136 = add nsw i32 %conv135, %.add124
  %cmp137 = icmp slt i32 %add136, %cost_limit.addr.1
  br i1 %cmp137, label %if.then139, label %for.end205

if.then139:                                       ; preds = %if.then119
  %conv141 = trunc i64 %indvars.iv to i8
  %ops142 = getelementptr inbounds %struct.algorithm* %alg_in.1, i64 0, i32 1
  %27 = load i16* %ops142, align 2, !tbaa !28
  %idxprom143 = sext i16 %27 to i64
  %arrayidx145 = getelementptr inbounds %struct.algorithm* %alg_in.1, i64 0, i32 3, i64 %idxprom143
  store i8 %conv141, i8* %arrayidx145, align 1, !tbaa !1
  %28 = load i16* %ops142, align 2, !tbaa !28
  %idxprom147 = sext i16 %28 to i64
  %arrayidx149 = getelementptr inbounds %struct.algorithm* %alg_in.1, i64 0, i32 2, i64 %idxprom147
  store i32 5, i32* %arrayidx149, align 4, !tbaa !1
  br label %for.end205

if.end151:                                        ; preds = %for.body104
  %sub154 = add i64 %shl106, -1
  %rem155 = urem i64 %t, %sub154
  %cmp156 = icmp eq i64 %rem155, 0
  %cmp159 = icmp ult i64 %sub154, %t
  %or.cond495 = and i1 %cmp156, %cmp159
  %29 = trunc i64 %indvars.iv to i32
  %cmp165 = icmp slt i32 %29, %20
  %or.cond517 = and i1 %or.cond495, %cmp165
  br i1 %or.cond517, label %if.then167, label %for.inc204

if.then167:                                       ; preds = %if.end151
  %sext = shl i64 %indvars.iv, 32
  %idxprom168 = ashr exact i64 %sext, 32
  %arrayidx169 = getelementptr inbounds [64 x i32]* @shiftsub_cost, i64 0, i64 %idxprom168
  %30 = load i32* %arrayidx169, align 4, !tbaa !6
  %31 = load i32* @add_cost, align 4, !tbaa !6
  %arrayidx171 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom168
  %32 = load i32* %arrayidx171, align 4, !tbaa !6
  %add172 = add nsw i32 %32, %31
  %cmp173 = icmp slt i32 %30, %add172
  %.add172 = select i1 %cmp173, i32 %30, i32 %add172
  %div184 = udiv i64 %t, %sub154
  %sub185 = sub nsw i32 %cost_limit.addr.1, %.add172
  call fastcc void @synth_mult(%struct.algorithm* %alg_in.1, i64 %div184, i32 %sub185)
  %cost186 = getelementptr inbounds %struct.algorithm* %alg_in.1, i64 0, i32 0
  %33 = load i16* %cost186, align 2, !tbaa !25
  %conv187 = sext i16 %33 to i32
  %add188 = add nsw i32 %conv187, %.add172
  %cmp189 = icmp slt i32 %add188, %cost_limit.addr.1
  br i1 %cmp189, label %if.then191, label %for.end205

if.then191:                                       ; preds = %if.then167
  %conv193 = trunc i64 %indvars.iv to i8
  %ops194 = getelementptr inbounds %struct.algorithm* %alg_in.1, i64 0, i32 1
  %34 = load i16* %ops194, align 2, !tbaa !28
  %idxprom195 = sext i16 %34 to i64
  %arrayidx197 = getelementptr inbounds %struct.algorithm* %alg_in.1, i64 0, i32 3, i64 %idxprom195
  store i8 %conv193, i8* %arrayidx197, align 1, !tbaa !1
  %35 = load i16* %ops194, align 2, !tbaa !28
  %idxprom199 = sext i16 %35 to i64
  %arrayidx201 = getelementptr inbounds %struct.algorithm* %alg_in.1, i64 0, i32 2, i64 %idxprom199
  store i32 6, i32* %arrayidx201, align 4, !tbaa !1
  br label %for.end205

for.inc204:                                       ; preds = %if.end151
  %dec = add nsw i32 %m.0508, -1
  %cmp102 = icmp sgt i32 %dec, 1
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %cmp102, label %for.body104, label %for.end205

for.end205:                                       ; preds = %for.inc204, %if.end98, %if.then167, %if.then191, %if.then119, %if.then139
  %best_alg.2 = phi %struct.algorithm* [ %alg_in.1, %if.then139 ], [ %best_alg.1, %if.then119 ], [ %alg_in.1, %if.then191 ], [ %best_alg.1, %if.then167 ], [ %best_alg.1, %if.end98 ], [ %best_alg.1, %for.inc204 ]
  %alg_in.2 = phi %struct.algorithm* [ %best_alg.1, %if.then139 ], [ %alg_in.1, %if.then119 ], [ %best_alg.1, %if.then191 ], [ %alg_in.1, %if.then167 ], [ %alg_in.1, %if.end98 ], [ %alg_in.1, %for.inc204 ]
  %cost_limit.addr.2 = phi i32 [ %add136, %if.then139 ], [ %cost_limit.addr.1, %if.then119 ], [ %add188, %if.then191 ], [ %cost_limit.addr.1, %if.then167 ], [ %cost_limit.addr.1, %if.end98 ], [ %cost_limit.addr.1, %for.inc204 ]
  br i1 %cmp47497, label %if.then209, label %if.end284

if.then209:                                       ; preds = %for.end205
  %sub211 = sub i64 1, %t
  %and212 = and i64 %sub99, %sub211
  %call213 = call i32 @exact_log2_wide(i64 %and212) #3
  %cmp214 = icmp sgt i32 %call213, -1
  br i1 %cmp214, label %land.lhs.true216, label %if.end246

land.lhs.true216:                                 ; preds = %if.then209
  %36 = load i32* @target_flags, align 4, !tbaa !6
  %and217 = lshr i32 %36, 20
  %37 = and i32 %and217, 32
  %38 = add i32 %37, 32
  %cmp220 = icmp slt i32 %call213, %38
  br i1 %cmp220, label %if.then222, label %if.end246

if.then222:                                       ; preds = %land.lhs.true216
  %idxprom223 = sext i32 %call213 to i64
  %arrayidx224 = getelementptr inbounds [64 x i32]* @shiftadd_cost, i64 0, i64 %idxprom223
  %39 = load i32* %arrayidx224, align 4, !tbaa !6
  %sh_prom226 = zext i32 %call213 to i64
  %shr227 = lshr i64 %sub99, %sh_prom226
  %sub228 = sub nsw i32 %cost_limit.addr.2, %39
  call fastcc void @synth_mult(%struct.algorithm* %alg_in.2, i64 %shr227, i32 %sub228)
  %cost229 = getelementptr inbounds %struct.algorithm* %alg_in.2, i64 0, i32 0
  %40 = load i16* %cost229, align 2, !tbaa !25
  %conv230 = sext i16 %40 to i32
  %add231 = add nsw i32 %conv230, %39
  %cmp232 = icmp slt i32 %add231, %cost_limit.addr.2
  br i1 %cmp232, label %if.then234, label %if.end246

if.then234:                                       ; preds = %if.then222
  %conv236 = trunc i32 %call213 to i8
  %ops237 = getelementptr inbounds %struct.algorithm* %alg_in.2, i64 0, i32 1
  %41 = load i16* %ops237, align 2, !tbaa !28
  %idxprom238 = sext i16 %41 to i64
  %arrayidx240 = getelementptr inbounds %struct.algorithm* %alg_in.2, i64 0, i32 3, i64 %idxprom238
  store i8 %conv236, i8* %arrayidx240, align 1, !tbaa !1
  %42 = load i16* %ops237, align 2, !tbaa !28
  %idxprom242 = sext i16 %42 to i64
  %arrayidx244 = getelementptr inbounds %struct.algorithm* %alg_in.2, i64 0, i32 2, i64 %idxprom242
  store i32 7, i32* %arrayidx244, align 4, !tbaa !1
  br label %if.end246

if.end246:                                        ; preds = %if.then222, %if.then234, %land.lhs.true216, %if.then209
  %best_alg.3 = phi %struct.algorithm* [ %alg_in.2, %if.then234 ], [ %best_alg.2, %if.then222 ], [ %best_alg.2, %land.lhs.true216 ], [ %best_alg.2, %if.then209 ]
  %alg_in.3 = phi %struct.algorithm* [ %best_alg.2, %if.then234 ], [ %alg_in.2, %if.then222 ], [ %alg_in.2, %land.lhs.true216 ], [ %alg_in.2, %if.then209 ]
  %cost_limit.addr.3 = phi i32 [ %add231, %if.then234 ], [ %cost_limit.addr.2, %if.then222 ], [ %cost_limit.addr.2, %land.lhs.true216 ], [ %cost_limit.addr.2, %if.then209 ]
  %add247 = add i64 %t, 1
  %sub248 = xor i64 %t, -1
  %and249 = and i64 %add247, %sub248
  %call250 = call i32 @exact_log2_wide(i64 %and249) #3
  %cmp251 = icmp sgt i32 %call250, -1
  br i1 %cmp251, label %land.lhs.true253, label %if.end284

land.lhs.true253:                                 ; preds = %if.end246
  %43 = load i32* @target_flags, align 4, !tbaa !6
  %and254 = lshr i32 %43, 20
  %44 = and i32 %and254, 32
  %45 = add i32 %44, 32
  %cmp257 = icmp slt i32 %call250, %45
  br i1 %cmp257, label %if.then259, label %if.end284

if.then259:                                       ; preds = %land.lhs.true253
  %idxprom260 = sext i32 %call250 to i64
  %arrayidx261 = getelementptr inbounds [64 x i32]* @shiftsub_cost, i64 0, i64 %idxprom260
  %46 = load i32* %arrayidx261, align 4, !tbaa !6
  %sh_prom263 = zext i32 %call250 to i64
  %shr264 = lshr i64 %add247, %sh_prom263
  %sub265 = sub nsw i32 %cost_limit.addr.3, %46
  call fastcc void @synth_mult(%struct.algorithm* %alg_in.3, i64 %shr264, i32 %sub265)
  %cost266 = getelementptr inbounds %struct.algorithm* %alg_in.3, i64 0, i32 0
  %47 = load i16* %cost266, align 2, !tbaa !25
  %conv267 = sext i16 %47 to i32
  %add268 = add nsw i32 %conv267, %46
  %cmp269 = icmp slt i32 %add268, %cost_limit.addr.3
  br i1 %cmp269, label %if.then271, label %if.end284

if.then271:                                       ; preds = %if.then259
  %conv273 = trunc i32 %call250 to i8
  %ops274 = getelementptr inbounds %struct.algorithm* %alg_in.3, i64 0, i32 1
  %48 = load i16* %ops274, align 2, !tbaa !28
  %idxprom275 = sext i16 %48 to i64
  %arrayidx277 = getelementptr inbounds %struct.algorithm* %alg_in.3, i64 0, i32 3, i64 %idxprom275
  store i8 %conv273, i8* %arrayidx277, align 1, !tbaa !1
  %49 = load i16* %ops274, align 2, !tbaa !28
  %idxprom279 = sext i16 %49 to i64
  %arrayidx281 = getelementptr inbounds %struct.algorithm* %alg_in.3, i64 0, i32 2, i64 %idxprom279
  store i32 8, i32* %arrayidx281, align 4, !tbaa !1
  br label %if.end284

if.end284:                                        ; preds = %if.end246, %land.lhs.true253, %if.then271, %if.then259, %for.end205
  %best_alg.4 = phi %struct.algorithm* [ %alg_in.3, %if.then271 ], [ %best_alg.3, %if.then259 ], [ %best_alg.3, %land.lhs.true253 ], [ %best_alg.3, %if.end246 ], [ %best_alg.2, %for.end205 ]
  %cost_limit.addr.4 = phi i32 [ %add268, %if.then271 ], [ %cost_limit.addr.3, %if.then259 ], [ %cost_limit.addr.3, %land.lhs.true253 ], [ %cost_limit.addr.3, %if.end246 ], [ %cost_limit.addr.2, %for.end205 ]
  %50 = load i16* %cost1, align 2, !tbaa !25
  %conv286 = sext i16 %50 to i32
  %cmp287 = icmp eq i32 %cost_limit.addr.4, %conv286
  br i1 %cmp287, label %return, label %if.end290

if.end290:                                        ; preds = %if.end284
  %ops291 = getelementptr inbounds %struct.algorithm* %best_alg.4, i64 0, i32 1
  %51 = load i16* %ops291, align 2, !tbaa !28
  %cmp293 = icmp eq i16 %51, 64
  br i1 %cmp293, label %return, label %if.end296

if.end296:                                        ; preds = %if.end290
  %add299 = add i16 %51, 1
  %ops301 = getelementptr inbounds %struct.algorithm* %alg_out, i64 0, i32 1
  store i16 %add299, i16* %ops301, align 2, !tbaa !28
  %conv302 = trunc i32 %cost_limit.addr.4 to i16
  store i16 %conv302, i16* %cost1, align 2, !tbaa !25
  %op304 = getelementptr inbounds %struct.algorithm* %alg_out, i64 0, i32 2
  %52 = bitcast [64 x i32]* %op304 to i8*
  %op305 = getelementptr inbounds %struct.algorithm* %best_alg.4, i64 0, i32 2
  %53 = bitcast [64 x i32]* %op305 to i8*
  %conv307 = sext i16 %add299 to i64
  %mul = shl nsw i64 %conv307, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 %mul, i32 4, i1 false)
  %54 = getelementptr inbounds %struct.algorithm* %alg_out, i64 0, i32 3, i64 0
  %55 = getelementptr inbounds %struct.algorithm* %best_alg.4, i64 0, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 %conv307, i32 4, i1 false)
  br label %return

return:                                           ; preds = %if.then10, %if.end290, %if.end284, %entry, %if.end296, %if.else, %if.then5
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

declare i32 @preserve_subexpressions_p() #1

declare %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define i32 @ceil_log2(i64 %x) #0 {
entry:
  %sub = add i64 %x, -1
  %call = tail call i32 @floor_log2_wide(i64 %sub) #3
  %add = add nsw i32 %call, 1
  ret i32 %add
}

declare i32 @floor_log2_wide(i64) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_mult_highpart_adjust(i32 %mode, %struct.rtx_def* %adj_operand, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %tobool = icmp ne i32 %unsignedp, 0
  %cond = select i1 %tobool, i32 75, i32 76
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %0 = load i16* %arrayidx, align 2, !tbaa !8
  %conv = zext i16 %0 to i64
  %sub = add i64 %conv, -1
  %call = tail call %union.tree_node* @build_int_2_wide(i64 %sub, i64 0) #3
  %call.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call, %struct.rtx_def* null, i32 0, i32 0) #3
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i = icmp eq %struct.rtx_def* %call.i, %1
  br i1 %cmp7.i, label %expand_shift.exit, label %for.body.i

for.body.i:                                       ; preds = %entry, %if.else79.i
  %try.0189.i = phi i32 [ %inc.i, %if.else79.i ], [ 0, %entry ]
  switch i32 %try.0189.i, label %if.else14.i [
    i32 0, label %if.else79.i
    i32 1, label %if.then13.i
  ]

if.then13.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else14.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else79.i:                                      ; preds = %if.else14.i, %if.then13.i, %for.body.i
  %methods.0.i = phi i32 [ 2, %if.then13.i ], [ 3, %if.else14.i ], [ 0, %for.body.i ]
  %2 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %2, %struct.rtx_def* %op0, %struct.rtx_def* %call.i, %struct.rtx_def* null, i32 0, i32 %methods.0.i) #3
  %inc.i = add nsw i32 %try.0189.i, 1
  %cmp8.i = icmp eq %struct.rtx_def* %call109.i, null
  %cmp9.i = icmp slt i32 %inc.i, 3
  %or.cond116.i = and i1 %cmp8.i, %cmp9.i
  br i1 %or.cond116.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %if.else79.i
  br i1 %cmp8.i, label %if.then113.i, label %expand_shift.exit

if.then113.i:                                     ; preds = %for.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit:                                ; preds = %entry, %for.end.i
  %retval.0.i = phi %struct.rtx_def* [ %op0, %entry ], [ %call109.i, %for.end.i ]
  %3 = getelementptr inbounds %struct.rtx_def* %retval.0.i, i64 0, i32 0
  %bf.load.i = load i32* %3, align 8
  %bf.clear.i = and i32 %bf.load.i, 16711680
  %cmp.i = icmp eq i32 %bf.clear.i, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.then6.i

land.lhs.true.i:                                  ; preds = %expand_shift.exit
  %4 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  %bf.load1.i = load i32* %4, align 8
  %bf.clear3.i = and i32 %bf.load1.i, 16711680
  %cmp4.i = icmp eq i32 %bf.clear3.i, 0
  br i1 %cmp4.i, label %if.end.i, label %if.then6.i

if.end.i:                                         ; preds = %land.lhs.true.i
  %call.i32 = tail call %struct.rtx_def* @simplify_binary_operation(i32 83, i32 %mode, %struct.rtx_def* %retval.0.i, %struct.rtx_def* %op1) #3
  %cmp5.i = icmp eq %struct.rtx_def* %call.i32, null
  br i1 %cmp5.i, label %if.then6.i, label %expand_and.exit

if.then6.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %expand_shift.exit
  %5 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %call7.i = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %5, %struct.rtx_def* %retval.0.i, %struct.rtx_def* %op1, %struct.rtx_def* null, i32 0, i32 3) #3
  br label %expand_and.exit

expand_and.exit:                                  ; preds = %if.end.i, %if.then6.i
  %tem.1.i = phi %struct.rtx_def* [ %call7.i, %if.then6.i ], [ %call.i32, %if.end.i ]
  %call4 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %cond, i32 %mode, %struct.rtx_def* %adj_operand, %struct.rtx_def* %tem.1.i) #3
  %call5 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call4, %struct.rtx_def* %adj_operand) #3
  %call11 = tail call %union.tree_node* @build_int_2_wide(i64 %sub, i64 0) #3
  %call.i33 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call11, %struct.rtx_def* null, i32 0, i32 0) #3
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i34 = icmp eq %struct.rtx_def* %call.i33, %6
  br i1 %cmp7.i34, label %expand_shift.exit54, label %for.body.i40

for.body.i40:                                     ; preds = %expand_and.exit, %if.else79.i44
  %try.0189.i39 = phi i32 [ %inc.i47, %if.else79.i44 ], [ 0, %expand_and.exit ]
  switch i32 %try.0189.i39, label %if.else14.i42 [
    i32 0, label %if.else79.i44
    i32 1, label %if.then13.i41
  ]

if.then13.i41:                                    ; preds = %for.body.i40
  br label %if.else79.i44

if.else14.i42:                                    ; preds = %for.body.i40
  br label %if.else79.i44

if.else79.i44:                                    ; preds = %if.else14.i42, %if.then13.i41, %for.body.i40
  %methods.0.i43 = phi i32 [ 2, %if.then13.i41 ], [ 3, %if.else14.i42 ], [ 0, %for.body.i40 ]
  %7 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i46 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %7, %struct.rtx_def* %op1, %struct.rtx_def* %call.i33, %struct.rtx_def* null, i32 0, i32 %methods.0.i43) #3
  %inc.i47 = add nsw i32 %try.0189.i39, 1
  %cmp8.i48 = icmp eq %struct.rtx_def* %call109.i46, null
  %cmp9.i49 = icmp slt i32 %inc.i47, 3
  %or.cond116.i50 = and i1 %cmp8.i48, %cmp9.i49
  br i1 %or.cond116.i50, label %for.body.i40, label %for.end.i51

for.end.i51:                                      ; preds = %if.else79.i44
  br i1 %cmp8.i48, label %if.then113.i52, label %expand_shift.exit54

if.then113.i52:                                   ; preds = %for.end.i51
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit54:                              ; preds = %expand_and.exit, %for.end.i51
  %retval.0.i53 = phi %struct.rtx_def* [ %op1, %expand_and.exit ], [ %call109.i46, %for.end.i51 ]
  %8 = getelementptr inbounds %struct.rtx_def* %retval.0.i53, i64 0, i32 0
  %bf.load.i55 = load i32* %8, align 8
  %bf.clear.i56 = and i32 %bf.load.i55, 16711680
  %cmp.i57 = icmp eq i32 %bf.clear.i56, 0
  br i1 %cmp.i57, label %land.lhs.true.i61, label %if.then6.i66

land.lhs.true.i61:                                ; preds = %expand_shift.exit54
  %9 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load1.i58 = load i32* %9, align 8
  %bf.clear3.i59 = and i32 %bf.load1.i58, 16711680
  %cmp4.i60 = icmp eq i32 %bf.clear3.i59, 0
  br i1 %cmp4.i60, label %if.end.i64, label %if.then6.i66

if.end.i64:                                       ; preds = %land.lhs.true.i61
  %call.i62 = tail call %struct.rtx_def* @simplify_binary_operation(i32 83, i32 %mode, %struct.rtx_def* %retval.0.i53, %struct.rtx_def* %op0) #3
  %cmp5.i63 = icmp eq %struct.rtx_def* %call.i62, null
  br i1 %cmp5.i63, label %if.then6.i66, label %expand_and.exit68

if.then6.i66:                                     ; preds = %if.end.i64, %land.lhs.true.i61, %expand_shift.exit54
  %10 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %call7.i65 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %10, %struct.rtx_def* %retval.0.i53, %struct.rtx_def* %op0, %struct.rtx_def* null, i32 0, i32 3) #3
  br label %expand_and.exit68

expand_and.exit68:                                ; preds = %if.end.i64, %if.then6.i66
  %tem.1.i67 = phi %struct.rtx_def* [ %call7.i65, %if.then6.i66 ], [ %call.i62, %if.end.i64 ]
  %call14 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %cond, i32 %mode, %struct.rtx_def* %call5, %struct.rtx_def* %tem.1.i67) #3
  %call15 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call14, %struct.rtx_def* %target) #3
  ret %struct.rtx_def* %call15
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_and(i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 16711680
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %land.lhs.true, label %if.then6

land.lhs.true:                                    ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  %bf.load1 = load i32* %1, align 8
  %bf.clear3 = and i32 %bf.load1, 16711680
  %cmp4 = icmp eq i32 %bf.clear3, 0
  br i1 %cmp4, label %if.end, label %if.then6

if.end:                                           ; preds = %land.lhs.true
  %call = tail call %struct.rtx_def* @simplify_binary_operation(i32 83, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #3
  %cmp5 = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %entry, %land.lhs.true, %if.end
  %2 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %call7 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %2, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 0, i32 3) #3
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end
  %tem.1 = phi %struct.rtx_def* [ %call7, %if.then6 ], [ %call, %if.end ]
  %cmp9 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp9, label %if.end15, label %if.else

if.else:                                          ; preds = %if.end8
  %cmp11 = icmp eq %struct.rtx_def* %tem.1, %target
  br i1 %cmp11, label %if.end15, label %if.then12

if.then12:                                        ; preds = %if.else
  %call13 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %tem.1) #3
  br label %if.end15

if.end15:                                         ; preds = %if.end8, %if.else, %if.then12
  %target.addr.0 = phi %struct.rtx_def* [ %target, %if.then12 ], [ %target, %if.else ], [ %tem.1, %if.end8 ]
  ret %struct.rtx_def* %target.addr.0
}

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_mult_highpart(i32 %mode, %struct.rtx_def* %op0, i64 %cnst1, %struct.rtx_def* %target, i32 %unsignedp, i32 %max_cost) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom
  %0 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %0 to i32
  %arrayidx2 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %1 = load i16* %arrayidx2, align 2, !tbaa !8
  %conv3 = zext i16 %1 to i32
  %cmp = icmp ugt i16 %1, 64
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2790, i8* getelementptr inbounds ([21 x i8]* @__FUNCTION__.expand_mult_highpart, i64 0, i64 0)) #4
  unreachable

if.end:                                           ; preds = %entry
  %call = tail call i64 @trunc_int_for_mode(i64 %cnst1, i32 %mode) #3
  %call5 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call) #3
  %tobool = icmp ne i32 %unsignedp, 0
  %sub = ashr i64 %cnst1, 63
  %.sub = select i1 %tobool, i64 0, i64 %sub
  %call6 = tail call %struct.rtx_def* @immed_double_const(i64 %cnst1, i64 %.sub, i32 %conv) #3
  %2 = load i32* @target_flags, align 4, !tbaa !6
  %and = lshr i32 %2, 20
  %3 = and i32 %and, 32
  %4 = add i32 %3, 32
  %cmp9 = icmp ult i32 %conv3, %4
  br i1 %cmp9, label %land.lhs.true, label %if.end25

land.lhs.true:                                    ; preds = %if.end
  %idxprom11 = zext i8 %0 to i64
  %arrayidx12 = getelementptr inbounds [59 x i32]* @mul_cost, i64 0, i64 %idxprom11
  %5 = load i32* %arrayidx12, align 4, !tbaa !6
  %sub13 = add nsw i32 %conv3, -1
  %idxprom14 = sext i32 %sub13 to i64
  %arrayidx15 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom14
  %6 = load i32* %arrayidx15, align 4, !tbaa !6
  %add = add nsw i32 %6, %5
  %cmp16 = icmp slt i32 %add, %max_cost
  br i1 %cmp16, label %if.then18, label %if.end25

if.then18:                                        ; preds = %land.lhs.true
  %call19 = tail call %struct.rtx_def* @convert_to_mode(i32 %conv, %struct.rtx_def* %op0, i32 %unsignedp) #3
  %call20 = tail call %struct.rtx_def* @expand_mult(i32 %conv, %struct.rtx_def* %call19, %struct.rtx_def* %call6, %struct.rtx_def* null, i32 0)
  %conv21 = zext i16 %1 to i64
  %call22 = tail call %union.tree_node* @build_int_2_wide(i64 %conv21, i64 0) #3
  %call23 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %conv, %struct.rtx_def* %call20, %union.tree_node* %call22, %struct.rtx_def* null, i32 1)
  %call24 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %conv, %struct.rtx_def* %call23, i32 %unsignedp) #3
  br label %return

if.end25:                                         ; preds = %land.lhs.true, %if.end
  %cmp26 = icmp eq %struct.rtx_def* %target, null
  br i1 %cmp26, label %if.then28, label %if.end30

if.then28:                                        ; preds = %if.end25
  %call29 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode) #3
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %if.end25
  %target.addr.0 = phi %struct.rtx_def* [ %call29, %if.then28 ], [ %target, %if.end25 ]
  %arrayidx32 = getelementptr inbounds [59 x i32]* @mul_highpart_cost, i64 0, i64 %idxprom
  %7 = load i32* %arrayidx32, align 4, !tbaa !6
  %cmp33 = icmp slt i32 %7, %max_cost
  br i1 %cmp33, label %if.then35, label %if.end45

if.then35:                                        ; preds = %if.end30
  %8 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 7), align 8, !tbaa !4
  %9 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 6), align 8, !tbaa !4
  %cond40 = select i1 %tobool, %struct.optab* %8, %struct.optab* %9
  %call41 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond40, %struct.rtx_def* %op0, %struct.rtx_def* %call5, %struct.rtx_def* %target.addr.0, i32 %unsignedp, i32 0) #3
  %tobool42 = icmp eq %struct.rtx_def* %call41, null
  br i1 %tobool42, label %if.end45, label %return

if.end45:                                         ; preds = %if.then35, %if.end30
  %target.addr.1 = phi %struct.rtx_def* [ null, %if.then35 ], [ %target.addr.0, %if.end30 ]
  %sub46 = add nsw i32 %conv3, -1
  %10 = load i32* @target_flags, align 4, !tbaa !6
  %and47 = lshr i32 %10, 20
  %11 = and i32 %and47, 32
  %12 = add i32 %11, 32
  %cmp50 = icmp ugt i32 %conv3, %12
  br i1 %cmp50, label %if.end74, label %land.lhs.true52

land.lhs.true52:                                  ; preds = %if.end45
  %13 = load i32* %arrayidx32, align 4, !tbaa !6
  %idxprom56 = sext i32 %sub46 to i64
  %arrayidx57 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom56
  %14 = load i32* %arrayidx57, align 4, !tbaa !6
  %mul = shl i32 %14, 1
  %add58 = add nsw i32 %mul, %13
  %15 = load i32* @add_cost, align 4, !tbaa !6
  %mul59 = shl i32 %15, 2
  %add60 = add nsw i32 %add58, %mul59
  %cmp61 = icmp slt i32 %add60, %max_cost
  br i1 %cmp61, label %if.then63, label %if.end74

if.then63:                                        ; preds = %land.lhs.true52
  %16 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 6), align 8, !tbaa !4
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 7), align 8, !tbaa !4
  %cond68 = select i1 %tobool, %struct.optab* %16, %struct.optab* %17
  %call69 = tail call %struct.rtx_def* @expand_binop(i32 %mode, %struct.optab* %cond68, %struct.rtx_def* %op0, %struct.rtx_def* %call5, %struct.rtx_def* %target.addr.1, i32 %unsignedp, i32 0) #3
  %tobool70 = icmp eq %struct.rtx_def* %call69, null
  br i1 %tobool70, label %if.end74, label %if.then71

if.then71:                                        ; preds = %if.then63
  %call72 = tail call %struct.rtx_def* @expand_mult_highpart_adjust(i32 %mode, %struct.rtx_def* %call69, %struct.rtx_def* %op0, %struct.rtx_def* %call5, %struct.rtx_def* %call69, i32 %unsignedp)
  br label %return

if.end74:                                         ; preds = %if.then63, %if.end45, %land.lhs.true52
  %target.addr.2 = phi %struct.rtx_def* [ null, %if.then63 ], [ %target.addr.1, %land.lhs.true52 ], [ %target.addr.1, %if.end45 ]
  %18 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 9), align 8, !tbaa !4
  %19 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 8), align 8, !tbaa !4
  %cond79 = select i1 %tobool, %struct.optab* %18, %struct.optab* %19
  %idxprom80 = zext i8 %0 to i64
  %insn_code = getelementptr inbounds %struct.optab* %cond79, i64 0, i32 1, i64 %idxprom80, i32 0
  %20 = load i32* %insn_code, align 4, !tbaa !12
  %cmp82 = icmp eq i32 %20, 1317
  br i1 %cmp82, label %if.end91, label %land.lhs.true84

land.lhs.true84:                                  ; preds = %if.end74
  %arrayidx86 = getelementptr inbounds [59 x i32]* @mul_widen_cost, i64 0, i64 %idxprom80
  %21 = load i32* %arrayidx86, align 4, !tbaa !6
  %cmp87 = icmp slt i32 %21, %max_cost
  br i1 %cmp87, label %if.then89, label %if.end91

if.then89:                                        ; preds = %land.lhs.true84
  %call90 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %call5) #3
  br label %try

if.end91:                                         ; preds = %if.end74, %land.lhs.true84
  %22 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 4), align 8, !tbaa !4
  %insn_code95 = getelementptr inbounds %struct.optab* %22, i64 0, i32 1, i64 %idxprom80, i32 0
  %23 = load i32* %insn_code95, align 4, !tbaa !12
  %cmp96 = icmp eq i32 %23, 1317
  br i1 %cmp96, label %if.end115, label %land.lhs.true98

land.lhs.true98:                                  ; preds = %if.end91
  %24 = load i32* @target_flags, align 4, !tbaa !6
  %and100 = lshr i32 %24, 20
  %25 = and i32 %and100, 32
  %26 = add i32 %25, 32
  %cmp103 = icmp ugt i32 %conv3, %26
  br i1 %cmp103, label %if.end115, label %land.lhs.true105

land.lhs.true105:                                 ; preds = %land.lhs.true98
  %arrayidx107 = getelementptr inbounds [59 x i32]* @mul_cost, i64 0, i64 %idxprom80
  %27 = load i32* %arrayidx107, align 4, !tbaa !6
  %idxprom109 = sext i32 %sub46 to i64
  %arrayidx110 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom109
  %28 = load i32* %arrayidx110, align 4, !tbaa !6
  %add111 = add nsw i32 %28, %27
  %cmp112 = icmp slt i32 %add111, %max_cost
  br i1 %cmp112, label %try, label %if.end115

if.end115:                                        ; preds = %land.lhs.true98, %if.end91, %land.lhs.true105
  %cond120 = select i1 %tobool, %struct.optab* %19, %struct.optab* %18
  %insn_code124 = getelementptr inbounds %struct.optab* %cond120, i64 0, i32 1, i64 %idxprom80, i32 0
  %29 = load i32* %insn_code124, align 4, !tbaa !12
  %cmp125 = icmp eq i32 %29, 1317
  br i1 %cmp125, label %return, label %land.lhs.true127

land.lhs.true127:                                 ; preds = %if.end115
  %30 = load i32* @target_flags, align 4, !tbaa !6
  %and129 = lshr i32 %30, 20
  %31 = and i32 %and129, 32
  %32 = add i32 %31, 32
  %cmp132 = icmp ugt i32 %conv3, %32
  br i1 %cmp132, label %return, label %land.lhs.true134

land.lhs.true134:                                 ; preds = %land.lhs.true127
  %arrayidx136 = getelementptr inbounds [59 x i32]* @mul_widen_cost, i64 0, i64 %idxprom80
  %33 = load i32* %arrayidx136, align 4, !tbaa !6
  %idxprom138 = sext i32 %sub46 to i64
  %arrayidx139 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom138
  %34 = load i32* %arrayidx139, align 4, !tbaa !6
  %mul140 = shl i32 %34, 1
  %add141 = add nsw i32 %mul140, %33
  %35 = load i32* @add_cost, align 4, !tbaa !6
  %mul142 = shl i32 %35, 2
  %add143 = add nsw i32 %add141, %mul142
  %cmp144 = icmp slt i32 %add143, %max_cost
  br i1 %cmp144, label %if.then146, label %return

if.then146:                                       ; preds = %land.lhs.true134
  %call147 = tail call %struct.rtx_def* @force_reg(i32 %mode, %struct.rtx_def* %call5) #3
  %36 = zext i1 %tobool to i32
  %lnot.ext = xor i32 %36, 1
  %call149 = tail call %struct.rtx_def* @expand_binop(i32 %conv, %struct.optab* %cond120, %struct.rtx_def* %op0, %struct.rtx_def* %call147, %struct.rtx_def* null, i32 %lnot.ext, i32 2) #3
  %cmp150 = icmp eq %struct.rtx_def* %call149, null
  br i1 %cmp150, label %return, label %if.then152

if.then152:                                       ; preds = %if.then146
  %conv153 = zext i16 %1 to i64
  %call154 = tail call %union.tree_node* @build_int_2_wide(i64 %conv153, i64 0) #3
  %call155 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %conv, %struct.rtx_def* %call149, %union.tree_node* %call154, %struct.rtx_def* null, i32 1)
  %call156 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %conv, %struct.rtx_def* %call155, i32 %unsignedp) #3
  %call157 = tail call %struct.rtx_def* @expand_mult_highpart_adjust(i32 %mode, %struct.rtx_def* %call156, %struct.rtx_def* %op0, %struct.rtx_def* %call5, %struct.rtx_def* %target.addr.2, i32 %unsignedp)
  br label %return

try:                                              ; preds = %land.lhs.true105, %if.then89
  %moptab.0 = phi %struct.optab* [ %cond79, %if.then89 ], [ %22, %land.lhs.true105 ]
  %op1.0 = phi %struct.rtx_def* [ %call90, %if.then89 ], [ %call6, %land.lhs.true105 ]
  %call160 = tail call %struct.rtx_def* @expand_binop(i32 %conv, %struct.optab* %moptab.0, %struct.rtx_def* %op0, %struct.rtx_def* %op1.0, %struct.rtx_def* null, i32 %unsignedp, i32 2) #3
  %cmp161 = icmp eq %struct.rtx_def* %call160, null
  br i1 %cmp161, label %return, label %if.end164

if.end164:                                        ; preds = %try
  %37 = load i32* @word_mode, align 4, !tbaa !1
  %cmp165 = icmp eq i32 %37, %mode
  br i1 %cmp165, label %if.then167, label %if.else

if.then167:                                       ; preds = %if.end164
  %call168 = tail call %struct.rtx_def* @gen_highpart(i32 %mode, %struct.rtx_def* %call160) #3
  br label %return

if.else:                                          ; preds = %if.end164
  %conv169 = zext i16 %1 to i64
  %call170 = tail call %union.tree_node* @build_int_2_wide(i64 %conv169, i64 0) #3
  %call171 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %conv, %struct.rtx_def* %call160, %union.tree_node* %call170, %struct.rtx_def* null, i32 1)
  %call172 = tail call %struct.rtx_def* @convert_modes(i32 %mode, i32 %conv, %struct.rtx_def* %call171, i32 %unsignedp) #3
  br label %return

return:                                           ; preds = %try, %land.lhs.true134, %if.end115, %land.lhs.true127, %if.then146, %if.then35, %if.else, %if.then167, %if.then152, %if.then71, %if.then18
  %retval.0 = phi %struct.rtx_def* [ %call24, %if.then18 ], [ %call72, %if.then71 ], [ %call168, %if.then167 ], [ %call172, %if.else ], [ %call157, %if.then152 ], [ %call41, %if.then35 ], [ null, %if.then146 ], [ null, %land.lhs.true127 ], [ null, %if.end115 ], [ null, %land.lhs.true134 ], [ null, %try ]
  ret %struct.rtx_def* %retval.0
}

declare %struct.rtx_def* @immed_double_const(i64, i64, i32) #1

declare %struct.rtx_def* @convert_modes(i32, i32, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @gen_highpart(i32, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_divmod(i32 %rem_flag, i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %target, i32 %unsignedp) #0 {
entry:
  %ml = alloca i64, align 8
  %post_shift = alloca i32, align 4
  %dummy = alloca i32, align 4
  %ml473 = alloca i64, align 8
  %lgup = alloca i32, align 4
  %post_shift474 = alloca i32, align 4
  %ml818 = alloca i64, align 8
  %lgup820 = alloca i32, align 4
  %post_shift821 = alloca i32, align 4
  %0 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 54
  %conv = zext i1 %cmp to i32
  br i1 %cmp, label %land.rhs, label %land.end20

land.rhs:                                         ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %1 = load i64* %rtwint, align 8, !tbaa !20
  %sub = add nsw i64 %1, -1
  %and = and i64 %sub, %1
  %cmp4 = icmp eq i64 %and, 0
  br i1 %cmp4, label %land.end20, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %tobool6 = icmp eq i32 %unsignedp, 0
  br i1 %tobool6, label %land.rhs7, label %land.end20

land.rhs7:                                        ; preds = %lor.rhs
  %sub11 = sub nsw i64 0, %1
  %sub16 = xor i64 %1, -1
  %and17 = and i64 %sub11, %sub16
  %cmp18 = icmp eq i64 %and17, 0
  br label %land.end20

land.end20:                                       ; preds = %lor.rhs, %land.rhs, %land.rhs7, %entry
  %2 = phi i1 [ false, %entry ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %cmp18, %land.rhs7 ]
  %land.ext = zext i1 %2 to i32
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %cmp21 = icmp eq %struct.rtx_def* %3, %op1
  br i1 %cmp21, label %if.then, label %if.end

if.then:                                          ; preds = %land.end20
  %tobool23 = icmp ne i32 %rem_flag, 0
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cond = select i1 %tobool23, %struct.rtx_def* %4, %struct.rtx_def* %op0
  br label %return

if.end:                                           ; preds = %land.end20
  %tobool24 = icmp ne i32 %unsignedp, 0
  %tobool24.not = xor i1 %tobool24, true
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8
  %cmp25 = icmp eq %struct.rtx_def* %5, %op1
  %or.cond2177 = and i1 %cmp25, %tobool24.not
  br i1 %or.cond2177, label %if.then27, label %if.end40

if.then27:                                        ; preds = %if.end
  %tobool28 = icmp eq i32 %rem_flag, 0
  br i1 %tobool28, label %if.end30, label %if.then29

if.then29:                                        ; preds = %if.then27
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  br label %return

if.end30:                                         ; preds = %if.then27
  %7 = load i32* @flag_trapv, align 4, !tbaa !6
  %tobool31 = icmp eq i32 %7, 0
  br i1 %tobool31, label %cond.false37, label %land.lhs.true32

land.lhs.true32:                                  ; preds = %if.end30
  %idxprom = sext i32 %mode to i64
  %arrayidx33 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %8 = load i32* %arrayidx33, align 4, !tbaa !1
  %cmp34 = icmp eq i32 %8, 1
  br i1 %cmp34, label %cond.end38, label %cond.false37

cond.false37:                                     ; preds = %if.end30, %land.lhs.true32
  br label %cond.end38

cond.end38:                                       ; preds = %land.lhs.true32, %cond.false37
  %cond39.in = phi %struct.optab** [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), %cond.false37 ], [ getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 33), %land.lhs.true32 ]
  %cond39 = load %struct.optab** %cond39.in, align 8
  %call = tail call %struct.rtx_def* @expand_unop(i32 %mode, %struct.optab* %cond39, %struct.rtx_def* %op0, %struct.rtx_def* %target, i32 0) #3
  br label %return

if.end40:                                         ; preds = %if.end
  %tobool41 = icmp eq %struct.rtx_def* %target, null
  br i1 %tobool41, label %if.end81, label %land.lhs.true42

land.lhs.true42:                                  ; preds = %if.end40
  %9 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load43 = load i32* %9, align 8
  %10 = and i32 %bf.load43, 1073807359
  %11 = icmp eq i32 %10, 1073741885
  br i1 %11, label %if.then80, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true42
  %tobool51 = icmp ne i32 %rem_flag, 0
  %or.cond = or i1 %tobool51, %cmp
  br i1 %or.cond, label %land.lhs.true54, label %lor.lhs.false67

land.lhs.true54:                                  ; preds = %lor.lhs.false
  %call55 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %op0) #3
  %tobool56 = icmp eq i32 %call55, 0
  br i1 %tobool56, label %lor.lhs.false57, label %if.then80

lor.lhs.false57:                                  ; preds = %land.lhs.true54
  %12 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load58 = load i32* %12, align 8
  %bf.clear59 = and i32 %bf.load58, 65535
  %cmp60 = icmp eq i32 %bf.clear59, 66
  br i1 %cmp60, label %land.lhs.true62, label %lor.lhs.false67

land.lhs.true62:                                  ; preds = %lor.lhs.false57
  %bf.load63 = load i32* %9, align 8
  %bf.clear64 = and i32 %bf.load63, 65535
  %cmp65 = icmp eq i32 %bf.clear64, 66
  br i1 %cmp65, label %if.then80, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %lor.lhs.false, %land.lhs.true62, %lor.lhs.false57
  %call68 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %op1) #3
  %tobool69 = icmp eq i32 %call68, 0
  br i1 %tobool69, label %lor.lhs.false70, label %if.then80

lor.lhs.false70:                                  ; preds = %lor.lhs.false67
  %bf.load71 = load i32* %0, align 8
  %bf.clear72 = and i32 %bf.load71, 65535
  %cmp73 = icmp eq i32 %bf.clear72, 66
  br i1 %cmp73, label %land.lhs.true75, label %if.end81

land.lhs.true75:                                  ; preds = %lor.lhs.false70
  %bf.load76 = load i32* %9, align 8
  %bf.clear77 = and i32 %bf.load76, 65535
  %cmp78 = icmp eq i32 %bf.clear77, 66
  br i1 %cmp78, label %if.then80, label %if.end81

if.then80:                                        ; preds = %land.lhs.true42, %land.lhs.true54, %lor.lhs.false67, %land.lhs.true75, %land.lhs.true62
  br label %if.end81

if.end81:                                         ; preds = %if.end40, %if.then80, %land.lhs.true75, %lor.lhs.false70
  %target.addr.0 = phi %struct.rtx_def* [ null, %if.then80 ], [ %target, %land.lhs.true75 ], [ %target, %lor.lhs.false70 ], [ null, %if.end40 ]
  %.not = xor i1 %2, true
  %13 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  %cmp84 = icmp eq %struct.rtx_def* %13, %op1
  %or.cond2179 = or i1 %cmp84, %.not
  br i1 %or.cond2179, label %cond.false105, label %cond.end98.thread2789

cond.end98.thread2789:                            ; preds = %if.end81
  %14 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 22), align 8, !tbaa !4
  %15 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %cond912790 = select i1 %tobool24, %struct.optab* %14, %struct.optab* %15
  br label %cond.end111

cond.false105:                                    ; preds = %if.end81
  %16 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 13), align 8, !tbaa !4
  %17 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %cond97 = select i1 %tobool24, %struct.optab* %16, %struct.optab* %17
  %18 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 14), align 8, !tbaa !4
  %19 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 12), align 8, !tbaa !4
  %cond110 = select i1 %tobool24, %struct.optab* %18, %struct.optab* %19
  br label %cond.end111

cond.end111:                                      ; preds = %cond.end98.thread2789, %cond.false105
  %cond992787 = phi %struct.optab* [ %cond97, %cond.false105 ], [ %cond912790, %cond.end98.thread2789 ]
  %cond112 = phi %struct.optab* [ %cond110, %cond.false105 ], [ %cond912790, %cond.end98.thread2789 ]
  %cond21912772 = icmp eq i32 %mode, 0
  br i1 %cond21912772, label %if.end155, label %for.body

for.body:                                         ; preds = %cond.end111, %for.inc
  %compute_mode.02773 = phi i32 [ %conv130, %for.inc ], [ %mode, %cond.end111 ]
  %idxprom115 = sext i32 %compute_mode.02773 to i64
  %insn_code = getelementptr inbounds %struct.optab* %cond992787, i64 0, i32 1, i64 %idxprom115, i32 0
  %20 = load i32* %insn_code, align 4, !tbaa !12
  %cmp117 = icmp eq i32 %20, 1317
  br i1 %cmp117, label %lor.lhs.false119, label %if.end155

lor.lhs.false119:                                 ; preds = %for.body
  %insn_code123 = getelementptr inbounds %struct.optab* %cond112, i64 0, i32 1, i64 %idxprom115, i32 0
  %21 = load i32* %insn_code123, align 4, !tbaa !12
  %cmp124 = icmp eq i32 %21, 1317
  br i1 %cmp124, label %for.inc, label %if.end155

for.inc:                                          ; preds = %lor.lhs.false119
  %arrayidx129 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom115
  %22 = load i8* %arrayidx129, align 1, !tbaa !1
  %conv130 = zext i8 %22 to i32
  %cond2191 = icmp eq i8 %22, 0
  br i1 %cond2191, label %for.cond134.preheader, label %for.body

for.cond134.preheader:                            ; preds = %for.inc
  br i1 %cond21912772, label %if.end155, label %for.body137

for.body137:                                      ; preds = %for.cond134.preheader, %for.inc150
  %compute_mode.12769 = phi i32 [ %conv153, %for.inc150 ], [ %mode, %for.cond134.preheader ]
  %idxprom138 = sext i32 %compute_mode.12769 to i64
  %libfunc = getelementptr inbounds %struct.optab* %cond992787, i64 0, i32 1, i64 %idxprom138, i32 1
  %23 = load %struct.rtx_def** %libfunc, align 8, !tbaa !29
  %tobool141 = icmp eq %struct.rtx_def* %23, null
  br i1 %tobool141, label %lor.lhs.false142, label %if.end155

lor.lhs.false142:                                 ; preds = %for.body137
  %libfunc146 = getelementptr inbounds %struct.optab* %cond112, i64 0, i32 1, i64 %idxprom138, i32 1
  %24 = load %struct.rtx_def** %libfunc146, align 8, !tbaa !29
  %tobool147 = icmp eq %struct.rtx_def* %24, null
  br i1 %tobool147, label %for.inc150, label %if.end155

for.inc150:                                       ; preds = %lor.lhs.false142
  %arrayidx152 = getelementptr inbounds [59 x i8]* @mode_wider_mode, i64 0, i64 %idxprom138
  %25 = load i8* %arrayidx152, align 1, !tbaa !1
  %conv153 = zext i8 %25 to i32
  %cmp135 = icmp eq i8 %25, 0
  br i1 %cmp135, label %if.end155, label %for.body137

if.end155:                                        ; preds = %for.body, %lor.lhs.false119, %for.inc150, %for.body137, %lor.lhs.false142, %cond.end111, %for.cond134.preheader
  %compute_mode.2 = phi i32 [ 0, %for.cond134.preheader ], [ 0, %cond.end111 ], [ 0, %for.inc150 ], [ %compute_mode.12769, %for.body137 ], [ %compute_mode.12769, %lor.lhs.false142 ], [ %compute_mode.02773, %lor.lhs.false119 ], [ %compute_mode.02773, %for.body ]
  %cmp156 = icmp eq i32 %compute_mode.2, 0
  %mode.compute_mode.2 = select i1 %cmp156, i32 %mode, i32 %compute_mode.2
  %tobool160 = icmp eq %struct.rtx_def* %target.addr.0, null
  br i1 %tobool160, label %if.else, label %land.lhs.true161

land.lhs.true161:                                 ; preds = %if.end155
  %26 = getelementptr inbounds %struct.rtx_def* %target.addr.0, i64 0, i32 0
  %bf.load162 = load i32* %26, align 8
  %bf.lshr163 = lshr i32 %bf.load162, 16
  %bf.clear164 = and i32 %bf.lshr163, 255
  %cmp165 = icmp eq i32 %bf.clear164, %mode.compute_mode.2
  br i1 %cmp165, label %if.end169, label %if.else

if.else:                                          ; preds = %if.end155, %land.lhs.true161
  %call168 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %if.end169

if.end169:                                        ; preds = %land.lhs.true161, %if.else
  %tquotient.0 = phi %struct.rtx_def* [ %call168, %if.else ], [ %target.addr.0, %land.lhs.true161 ]
  %idxprom170 = sext i32 %mode.compute_mode.2 to i64
  %arrayidx171 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom170
  %27 = load i16* %arrayidx171, align 2, !tbaa !8
  %conv172 = zext i16 %27 to i32
  %arrayidx174 = getelementptr inbounds [59 x i32]* @div_cost, i64 0, i64 %idxprom170
  %28 = load i32* %arrayidx174, align 4, !tbaa !6
  %tobool175 = icmp ne i32 %rem_flag, 0
  br i1 %tobool175, label %land.lhs.true176, label %cond.end191

land.lhs.true176:                                 ; preds = %if.end169
  %29 = load i64* @expand_divmod.last_div_const, align 8, !tbaa !20
  %cmp177 = icmp ne i64 %29, 0
  %or.cond1456 = and i1 %cmp177, %cmp
  br i1 %or.cond1456, label %land.lhs.true181, label %cond.true187

land.lhs.true181:                                 ; preds = %land.lhs.true176
  %rtwint184 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %30 = load i64* %rtwint184, align 8, !tbaa !20
  %cmp185 = icmp eq i64 %30, %29
  br i1 %cmp185, label %cond.end191, label %cond.true187

cond.true187:                                     ; preds = %land.lhs.true181, %land.lhs.true176
  %arrayidx189 = getelementptr inbounds [59 x i32]* @mul_cost, i64 0, i64 %idxprom170
  %31 = load i32* %arrayidx189, align 4, !tbaa !6
  %32 = load i32* @add_cost, align 4, !tbaa !6
  %add = add nsw i32 %32, %31
  br label %cond.end191

cond.end191:                                      ; preds = %if.end169, %land.lhs.true181, %cond.true187
  %cond192 = phi i32 [ %add, %cond.true187 ], [ 0, %land.lhs.true181 ], [ 0, %if.end169 ]
  %sub193 = sub nsw i32 %28, %cond192
  %tobool194 = icmp eq i32 %rem_flag, 0
  %or.cond1457 = and i1 %tobool194, %cmp
  br i1 %or.cond1457, label %cond.true197, label %cond.end202

cond.true197:                                     ; preds = %cond.end191
  %rtwint200 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0, i32 0
  %33 = load i64* %rtwint200, align 8, !tbaa !20
  br label %cond.end202

cond.end202:                                      ; preds = %cond.end191, %cond.true197
  %cond203 = phi i64 [ %33, %cond.true197 ], [ 0, %cond.end191 ]
  store i64 %cond203, i64* @expand_divmod.last_div_const, align 8, !tbaa !20
  %cmp204 = icmp eq i32 %mode.compute_mode.2, %mode
  br i1 %cmp204, label %if.end245, label %if.then206

if.then206:                                       ; preds = %cond.end202
  %call207 = tail call %struct.rtx_def* @convert_modes(i32 %mode.compute_mode.2, i32 %mode, %struct.rtx_def* %op0, i32 %unsignedp) #3
  %call208 = tail call %struct.rtx_def* @convert_modes(i32 %mode.compute_mode.2, i32 %mode, %struct.rtx_def* %op1, i32 %unsignedp) #3
  %34 = getelementptr inbounds %struct.rtx_def* %call208, i64 0, i32 0
  %bf.load209 = load i32* %34, align 8
  %bf.clear210 = and i32 %bf.load209, 65535
  %cmp211 = icmp eq i32 %bf.clear210, 54
  %conv212 = zext i1 %cmp211 to i32
  br i1 %cmp211, label %land.rhs214, label %land.end243

land.rhs214:                                      ; preds = %if.then206
  %rtwint217 = getelementptr inbounds %struct.rtx_def* %call208, i64 0, i32 1, i64 0, i32 0
  %35 = load i64* %rtwint217, align 8, !tbaa !20
  %sub221 = add nsw i64 %35, -1
  %and222 = and i64 %sub221, %35
  %cmp223 = icmp eq i64 %and222, 0
  %brmerge = or i1 %cmp223, %tobool24
  br i1 %brmerge, label %land.end243, label %land.rhs227

land.rhs227:                                      ; preds = %land.rhs214
  %sub231 = sub nsw i64 0, %35
  %sub236 = xor i64 %35, -1
  %and237 = and i64 %sub231, %sub236
  %cmp238 = icmp eq i64 %and237, 0
  br label %land.end243

land.end243:                                      ; preds = %land.rhs214, %land.rhs227, %if.then206
  %36 = phi i1 [ false, %if.then206 ], [ %cmp223, %land.rhs214 ], [ %cmp238, %land.rhs227 ]
  %land.ext244 = zext i1 %36 to i32
  br label %if.end245

if.end245:                                        ; preds = %cond.end202, %land.end243
  %op1_is_pow2.0 = phi i32 [ %land.ext244, %land.end243 ], [ %land.ext, %cond.end202 ]
  %op1_is_constant.0 = phi i32 [ %conv212, %land.end243 ], [ %conv, %cond.end202 ]
  %op1.addr.0 = phi %struct.rtx_def* [ %call208, %land.end243 ], [ %op1, %cond.end202 ]
  %op0.addr.0 = phi %struct.rtx_def* [ %call207, %land.end243 ], [ %op0, %cond.end202 ]
  %37 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load246 = load i32* %37, align 8
  %38 = and i32 %bf.load246, 134283263
  %39 = icmp eq i32 %38, 134217794
  br i1 %39, label %if.then255, label %if.end257

if.then255:                                       ; preds = %if.end245
  %call256 = tail call %struct.rtx_def* @force_reg(i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.0) #3
  br label %if.end257

if.end257:                                        ; preds = %if.end245, %if.then255
  %op0.addr.1 = phi %struct.rtx_def* [ %call256, %if.then255 ], [ %op0.addr.0, %if.end245 ]
  %40 = getelementptr inbounds %struct.rtx_def* %op1.addr.0, i64 0, i32 0
  %bf.load258 = load i32* %40, align 8
  %41 = and i32 %bf.load258, 134283263
  %42 = icmp eq i32 %41, 134217794
  br i1 %42, label %if.then267, label %if.end269

if.then267:                                       ; preds = %if.end257
  %call268 = tail call %struct.rtx_def* @force_reg(i32 %mode.compute_mode.2, %struct.rtx_def* %op1.addr.0) #3
  br label %if.end269

if.end269:                                        ; preds = %if.end257, %if.then267
  %op1.addr.1 = phi %struct.rtx_def* [ %call268, %if.then267 ], [ %op1.addr.0, %if.end257 ]
  %tobool272 = icmp ne i32 %op1_is_constant.0, 0
  %43 = or i32 %op1_is_constant.0, %rem_flag
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %if.end275, label %if.then273

if.then273:                                       ; preds = %if.end269
  %call274 = tail call %struct.rtx_def* @force_reg(i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.1) #3
  br label %if.end275

if.end275:                                        ; preds = %if.end269, %if.then273
  %op0.addr.2 = phi %struct.rtx_def* [ %call274, %if.then273 ], [ %op0.addr.1, %if.end269 ]
  %call276 = tail call %struct.rtx_def* @get_last_insn() #3
  br i1 %tobool24, label %if.then278, label %if.end293

if.then278:                                       ; preds = %if.end275
  %cmp279 = icmp eq i32 %code, 64
  %.code = select i1 %cmp279, i32 62, i32 %code
  %cmp283 = icmp eq i32 %.code, 68
  %code.addr.1 = select i1 %cmp283, i32 66, i32 %.code
  %cmp287 = icmp eq i32 %code.addr.1, 71
  %tobool290 = icmp ne i32 %op1_is_pow2.0, 0
  %or.cond1459 = and i1 %cmp287, %tobool290
  %.code.addr.1 = select i1 %or.cond1459, i32 62, i32 %code.addr.1
  br label %if.end293

if.end293:                                        ; preds = %if.then278, %if.end275
  %code.addr.2 = phi i32 [ %code, %if.end275 ], [ %.code.addr.1, %if.then278 ]
  %45 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp294 = icmp eq %struct.rtx_def* %op1.addr.1, %45
  br i1 %cmp294, label %if.then1359, label %if.then296

if.then296:                                       ; preds = %if.end293
  switch i32 %code.addr.2, label %sw.default [
    i32 66, label %sw.bb
    i32 62, label %sw.bb
    i32 64, label %sw.bb811
    i32 68, label %sw.bb811
    i32 63, label %sw.bb1014
    i32 67, label %sw.bb1014
    i32 71, label %sw.bb1268
    i32 65, label %sw.bb1299
    i32 69, label %sw.bb1299
  ]

sw.bb:                                            ; preds = %if.then296, %if.then296
  br i1 %tobool272, label %if.then298, label %fail1

if.then298:                                       ; preds = %sw.bb
  %rtwint303 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 1, i64 0, i32 0
  %46 = load i64* %rtwint303, align 8, !tbaa !20
  br i1 %tobool24, label %if.then300, label %if.else472

if.then300:                                       ; preds = %if.then298
  %sub304 = add i64 %46, -1
  %and305 = and i64 %sub304, %46
  %cmp306 = icmp eq i64 %and305, 0
  br i1 %cmp306, label %if.then308, label %if.else323

if.then308:                                       ; preds = %if.then300
  %call309 = tail call i32 @floor_log2_wide(i64 %46) #3
  br i1 %tobool175, label %if.then311, label %if.end319

if.then311:                                       ; preds = %if.then308
  %47 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %sh_prom = zext i32 %call309 to i64
  %shl = shl i64 1, %sh_prom
  %sub312 = add nsw i64 %shl, -1
  %call313 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub312) #3
  %call314 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %47, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call313, %struct.rtx_def* null, i32 1, i32 3) #3
  %tobool315 = icmp eq %struct.rtx_def* %call314, null
  br i1 %tobool315, label %if.end319, label %if.then316

if.then316:                                       ; preds = %if.then311
  %call317 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call314) #3
  br label %return

if.end319:                                        ; preds = %if.then311, %if.then308
  %conv320 = sext i32 %call309 to i64
  %call321 = tail call %union.tree_node* @build_int_2_wide(i64 %conv320, i64 0) #3
  %call322 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %union.tree_node* %call321, %struct.rtx_def* %tquotient.0, i32 1)
  br label %if.end427

if.else323:                                       ; preds = %if.then300
  %cmp324 = icmp ult i16 %27, 65
  br i1 %cmp324, label %if.then326, label %if.then1359

if.then326:                                       ; preds = %if.else323
  %sub327 = add nsw i32 %conv172, -1
  %sh_prom328 = zext i32 %sub327 to i64
  %shl329 = shl i64 1, %sh_prom328
  %cmp330 = icmp ult i64 %46, %shl329
  br i1 %cmp330, label %if.else338, label %if.then332

if.then332:                                       ; preds = %if.then326
  %call333 = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %tquotient.0, i32 108, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, i32 %mode.compute_mode.2, i32 1, i32 1)
  %cmp334 = icmp eq %struct.rtx_def* %call333, null
  br i1 %cmp334, label %fail1, label %if.end427

if.else338:                                       ; preds = %if.then326
  %call339 = call fastcc i64 @choose_multiplier(i64 %46, i32 %conv172, i32 %conv172, i64* %ml, i32* %post_shift, i32* %dummy)
  %cmp340 = icmp ne i64 %call339, 0
  %and343 = and i64 %46, 1
  %cmp344 = icmp eq i64 %and343, 0
  %or.cond2184 = and i1 %cmp340, %cmp344
  br i1 %or.cond2184, label %if.then346, label %if.end357

if.then346:                                       ; preds = %if.else338
  %sub347 = sub i64 0, %46
  %and348 = and i64 %46, %sub347
  %call349 = tail call i32 @floor_log2_wide(i64 %and348) #3
  %sh_prom350 = zext i32 %call349 to i64
  %shr = lshr i64 %46, %sh_prom350
  %sub351 = sub nsw i32 %conv172, %call349
  %call352 = call fastcc i64 @choose_multiplier(i64 %shr, i32 %conv172, i32 %sub351, i64* %ml, i32* %post_shift, i32* %dummy)
  %tobool353 = icmp eq i64 %call352, 0
  br i1 %tobool353, label %if.else390, label %if.then354

if.then354:                                       ; preds = %if.then346
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3200, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.expand_divmod, i64 0, i64 0)) #4
  unreachable

if.end357:                                        ; preds = %if.else338
  %cmp358 = icmp eq i64 %call339, 0
  br i1 %cmp358, label %if.else390, label %if.then360

if.then360:                                       ; preds = %if.end357
  %48 = load i32* %post_shift, align 4, !tbaa !6
  %49 = load i32* @target_flags, align 4, !tbaa !6
  %and362 = lshr i32 %49, 20
  %50 = and i32 %and362, 32
  %51 = add i32 %50, 32
  %cmp365 = icmp sgt i32 %48, %51
  br i1 %cmp365, label %fail1, label %if.end368

if.end368:                                        ; preds = %if.then360
  %sub361 = add nsw i32 %48, -1
  %idxprom370 = sext i32 %sub361 to i64
  %arrayidx371 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom370
  %52 = load i32* %arrayidx371, align 4, !tbaa !6
  %53 = load i32* getelementptr inbounds ([64 x i32]* @shift_cost, i64 0, i64 1), align 4, !tbaa !6
  %54 = load i32* @add_cost, align 4, !tbaa !6
  %mul = shl i32 %54, 1
  %55 = load i64* %ml, align 8, !tbaa !20
  %add372.neg = sub i32 %sub193, %52
  %add373.neg = sub i32 %add372.neg, %53
  %sub374 = sub i32 %add373.neg, %mul
  %call375 = tail call %struct.rtx_def* @expand_mult_highpart(i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, i64 %55, %struct.rtx_def* null, i32 1, i32 %sub374)
  %cmp376 = icmp eq %struct.rtx_def* %call375, null
  br i1 %cmp376, label %fail1, label %if.end379

if.end379:                                        ; preds = %if.end368
  %call380 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call375) #3
  %call381 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call380, %struct.rtx_def* null) #3
  %call382 = tail call %union.tree_node* @build_int_2_wide(i64 1, i64 0) #3
  %call383 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %call381, %union.tree_node* %call382, %struct.rtx_def* null, i32 1)
  %call384 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode.compute_mode.2, %struct.rtx_def* %call375, %struct.rtx_def* %call383) #3
  %call385 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call384, %struct.rtx_def* null) #3
  %call388 = tail call %union.tree_node* @build_int_2_wide(i64 %idxprom370, i64 0) #3
  %call389 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %call385, %union.tree_node* %call388, %struct.rtx_def* %tquotient.0, i32 1)
  br label %if.end427

if.else390:                                       ; preds = %if.then346, %if.end357
  %pre_shift.02732 = phi i32 [ 0, %if.end357 ], [ %call349, %if.then346 ]
  %56 = load i32* @target_flags, align 4, !tbaa !6
  %and393 = lshr i32 %56, 20
  %57 = and i32 %and393, 32
  %58 = add i32 %57, 32
  %cmp396 = icmp slt i32 %pre_shift.02732, %58
  %59 = load i32* %post_shift, align 4
  %cmp402 = icmp slt i32 %59, %58
  %or.cond2185 = and i1 %cmp396, %cmp402
  br i1 %or.cond2185, label %if.end405, label %fail1

if.end405:                                        ; preds = %if.else390
  %conv406 = sext i32 %pre_shift.02732 to i64
  %call407 = tail call %union.tree_node* @build_int_2_wide(i64 %conv406, i64 0) #3
  %call408 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %union.tree_node* %call407, %struct.rtx_def* null, i32 1)
  %arrayidx410 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %conv406
  %60 = load i32* %arrayidx410, align 4, !tbaa !6
  %idxprom411 = sext i32 %59 to i64
  %arrayidx412 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom411
  %61 = load i32* %arrayidx412, align 4, !tbaa !6
  %62 = load i64* %ml, align 8, !tbaa !20
  %add413.neg = sub i32 %sub193, %60
  %sub414 = sub i32 %add413.neg, %61
  %call415 = tail call %struct.rtx_def* @expand_mult_highpart(i32 %mode.compute_mode.2, %struct.rtx_def* %call408, i64 %62, %struct.rtx_def* null, i32 1, i32 %sub414)
  %cmp416 = icmp eq %struct.rtx_def* %call415, null
  br i1 %cmp416, label %fail1, label %if.end419

if.end419:                                        ; preds = %if.end405
  %call421 = tail call %union.tree_node* @build_int_2_wide(i64 %idxprom411, i64 0) #3
  %call422 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %call415, %union.tree_node* %call421, %struct.rtx_def* %tquotient.0, i32 1)
  br label %if.end427

if.end427:                                        ; preds = %if.end379, %if.end419, %if.then332, %if.end319
  %quotient.0 = phi %struct.rtx_def* [ %call322, %if.end319 ], [ %call333, %if.then332 ], [ %call389, %if.end379 ], [ %call422, %if.end419 ]
  %call428 = tail call %struct.rtx_def* @get_last_insn() #3
  %cmp429 = icmp eq %struct.rtx_def* %call428, %call276
  br i1 %cmp429, label %if.end1356, label %land.lhs.true431

land.lhs.true431:                                 ; preds = %if.end427
  %63 = getelementptr inbounds %struct.rtx_def* %call428, i64 0, i32 0
  %bf.load432 = load i32* %63, align 8
  %bf.clear433 = and i32 %bf.load432, 65535
  %idxprom4342176 = zext i32 %bf.clear433 to i64
  %arrayidx435 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom4342176
  %64 = load i8* %arrayidx435, align 1, !tbaa !1
  %cmp437 = icmp eq i8 %64, 105
  br i1 %cmp437, label %cond.true439, label %if.end1356

cond.true439:                                     ; preds = %land.lhs.true431
  %arrayidx441 = getelementptr inbounds %struct.rtx_def* %call428, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx441 to %struct.rtx_def**
  %65 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %66 = getelementptr inbounds %struct.rtx_def* %65, i64 0, i32 0
  %bf.load442 = load i32* %66, align 8
  %bf.clear443 = and i32 %bf.load442, 65535
  %cmp444 = icmp eq i32 %bf.clear443, 47
  br i1 %cmp444, label %cond.end458, label %cond.false450

cond.false450:                                    ; preds = %cond.true439
  %call454 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call428, %struct.rtx_def* %65) #3
  br label %cond.end458

cond.end458:                                      ; preds = %cond.true439, %cond.false450
  %cond459 = phi %struct.rtx_def* [ %call454, %cond.false450 ], [ %65, %cond.true439 ]
  %cmp460 = icmp eq %struct.rtx_def* %cond459, null
  br i1 %cmp460, label %if.end1356, label %land.lhs.true462

land.lhs.true462:                                 ; preds = %cond.end458
  %arrayidx464 = getelementptr inbounds %struct.rtx_def* %cond459, i64 0, i32 1, i64 0
  %rtx465 = bitcast %union.rtunion_def* %arrayidx464 to %struct.rtx_def**
  %67 = load %struct.rtx_def** %rtx465, align 8, !tbaa !4
  %cmp466 = icmp eq %struct.rtx_def* %67, %quotient.0
  br i1 %cmp466, label %if.then468, label %if.end1356

if.then468:                                       ; preds = %land.lhs.true462
  %call469 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 81, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1) #3
  %call470 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call428, i32 4, %struct.rtx_def* %call469) #3
  br label %if.end1356

if.else472:                                       ; preds = %if.then298
  %cmp479 = icmp sgt i64 %46, -1
  %sub483 = sub nsw i64 0, %46
  %cond485 = select i1 %cmp479, i64 %46, i64 %sub483
  %cmp488 = icmp slt i64 %46, 0
  %or.cond1460 = and i1 %tobool175, %cmp488
  br i1 %or.cond1460, label %if.then490, label %if.end493

if.then490:                                       ; preds = %if.else472
  %call491 = tail call i64 @trunc_int_for_mode(i64 %cond485, i32 %mode.compute_mode.2) #3
  %call492 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call491) #3
  br label %if.end493

if.end493:                                        ; preds = %if.then490, %if.else472
  %d475.0 = phi i64 [ %cond485, %if.then490 ], [ %46, %if.else472 ]
  %op1.addr.2 = phi %struct.rtx_def* [ %call492, %if.then490 ], [ %op1.addr.1, %if.else472 ]
  switch i64 %d475.0, label %if.else502 [
    i64 1, label %if.end763
    i64 -1, label %if.then500
  ]

if.then500:                                       ; preds = %if.end493
  %68 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 8, !tbaa !4
  %call501 = tail call %struct.rtx_def* @expand_unop(i32 %mode.compute_mode.2, %struct.optab* %68, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %tquotient.0, i32 0) #3
  br label %if.end763

if.else502:                                       ; preds = %if.end493
  %sub503 = add nsw i32 %conv172, -1
  %sh_prom504 = zext i32 %sub503 to i64
  %shl505 = shl i64 1, %sh_prom504
  %cmp506 = icmp eq i64 %cond485, %shl505
  br i1 %cmp506, label %if.then508, label %if.else514

if.then508:                                       ; preds = %if.else502
  %call509 = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %tquotient.0, i32 103, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.2, i32 %mode.compute_mode.2, i32 1, i32 1)
  %cmp510 = icmp eq %struct.rtx_def* %call509, null
  br i1 %cmp510, label %fail1, label %if.end763

if.else514:                                       ; preds = %if.else502
  %sub515 = add nsw i64 %d475.0, -1
  %and516 = and i64 %sub515, %d475.0
  %cmp517 = icmp eq i64 %and516, 0
  br i1 %cmp517, label %land.lhs.true519, label %if.else545

land.lhs.true519:                                 ; preds = %if.else514
  br i1 %tobool175, label %cond.true521, label %cond.false523

cond.true521:                                     ; preds = %land.lhs.true519
  %69 = load i32* @smod_pow2_cheap, align 4, !tbaa !6
  %tobool522 = icmp eq i32 %69, 0
  br i1 %tobool522, label %if.else545, label %land.lhs.true525

cond.false523:                                    ; preds = %land.lhs.true519
  %70 = load i32* @sdiv_pow2_cheap, align 4, !tbaa !6
  %tobool524 = icmp eq i32 %70, 0
  br i1 %tobool524, label %if.else545, label %land.lhs.true525

land.lhs.true525:                                 ; preds = %cond.true521, %cond.false523
  %71 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 15), align 8, !tbaa !4
  %72 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %cond531 = select i1 %tobool175, %struct.optab* %71, %struct.optab* %72
  %insn_code534 = getelementptr inbounds %struct.optab* %cond531, i64 0, i32 1, i64 %idxprom170, i32 0
  %73 = load i32* %insn_code534, align 4, !tbaa !12
  %cmp535 = icmp eq i32 %73, 1317
  br i1 %cmp535, label %lor.lhs.false537, label %if.end763

lor.lhs.false537:                                 ; preds = %land.lhs.true525
  %74 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 12), align 8, !tbaa !4
  %insn_code541 = getelementptr inbounds %struct.optab* %74, i64 0, i32 1, i64 %idxprom170, i32 0
  %75 = load i32* %insn_code541, align 4, !tbaa !12
  %cmp542 = icmp eq i32 %75, 1317
  br i1 %cmp542, label %if.else545, label %if.end763

if.else545:                                       ; preds = %cond.true521, %lor.lhs.false537, %cond.false523, %if.else514
  %sub546 = add i64 %cond485, -1
  %and547 = and i64 %sub546, %cond485
  %cmp548 = icmp eq i64 %and547, 0
  br i1 %cmp548, label %if.then550, label %if.else644

if.then550:                                       ; preds = %if.else545
  %call551 = tail call i32 @floor_log2_wide(i64 %cond485) #3
  store i32 %call551, i32* %lgup, align 4, !tbaa !6
  %76 = load i32* @ix86_branch_cost, align 4, !tbaa !6
  %cmp552 = icmp slt i32 %76, 1
  br i1 %cmp552, label %if.then560, label %lor.lhs.false554

lor.lhs.false554:                                 ; preds = %if.then550
  %cmp555 = icmp ne i64 %cond485, 2
  %cmp558 = icmp slt i32 %76, 3
  %or.cond1461 = and i1 %cmp555, %cmp558
  br i1 %or.cond1461, label %if.then560, label %if.else571

if.then560:                                       ; preds = %lor.lhs.false554, %if.then550
  %call561 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call563 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2) #3
  %77 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %arrayidx.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom170
  %78 = load i32* %arrayidx.i, align 4, !tbaa !1
  %cmp.i = icmp eq i32 %78, 1
  br i1 %cmp.i, label %land.lhs.true.i, label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then560
  %call.i = tail call i32 @can_compare_p(i32 104, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %call1.i = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %77, %struct.rtx_def* %call563, %struct.rtx_def* %call561, %struct.rtx_def* %call1.i) #3
  %call19.i = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i) #3
  br label %do_cmp_and_jump.exit

if.else.i:                                        ; preds = %land.lhs.true.i, %if.then560
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call563, %struct.rtx_def* %77, i32 104, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call561) #3
  br label %do_cmp_and_jump.exit

do_cmp_and_jump.exit:                             ; preds = %if.then.i, %if.else.i
  %call565 = tail call i64 @trunc_int_for_mode(i64 %sub546, i32 %mode.compute_mode.2) #3
  %call566 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call565) #3
  %79 = getelementptr inbounds %struct.rtx_def* %call563, i64 0, i32 0
  %bf.load.i = load i32* %79, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  %80 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2192 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i, %struct.optab* %80, %struct.rtx_def* %call563, %struct.rtx_def* %call566, %struct.rtx_def* %call563, i32 0, i32 3) #3
  %cmp.i2193 = icmp eq %struct.rtx_def* %call.i2192, %call563
  br i1 %cmp.i2193, label %expand_inc.exit, label %if.then.i2195

if.then.i2195:                                    ; preds = %do_cmp_and_jump.exit
  %call1.i2194 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call563, %struct.rtx_def* %call.i2192) #3
  br label %expand_inc.exit

expand_inc.exit:                                  ; preds = %do_cmp_and_jump.exit, %if.then.i2195
  %call567 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call561) #3
  %conv568 = sext i32 %call551 to i64
  %call569 = tail call %union.tree_node* @build_int_2_wide(i64 %conv568, i64 0) #3
  %call.i2196 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call569, %struct.rtx_def* null, i32 0, i32 0) #3
  %81 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i = icmp eq %struct.rtx_def* %call.i2196, %81
  br i1 %cmp7.i, label %if.end588, label %for.body.i

for.body.i:                                       ; preds = %expand_inc.exit, %if.else79.i
  %try.0189.i = phi i32 [ %inc.i, %if.else79.i ], [ 0, %expand_inc.exit ]
  switch i32 %try.0189.i, label %if.else14.i [
    i32 0, label %if.else79.i
    i32 1, label %if.then13.i
  ]

if.then13.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else14.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else79.i:                                      ; preds = %if.else14.i, %if.then13.i, %for.body.i
  %methods.0.i = phi i32 [ 2, %if.then13.i ], [ 3, %if.else14.i ], [ 0, %for.body.i ]
  %82 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %82, %struct.rtx_def* %call563, %struct.rtx_def* %call.i2196, %struct.rtx_def* %tquotient.0, i32 0, i32 %methods.0.i) #3
  %inc.i = add nsw i32 %try.0189.i, 1
  %cmp8.i = icmp eq %struct.rtx_def* %call109.i, null
  %cmp9.i = icmp slt i32 %inc.i, 3
  %or.cond116.i = and i1 %cmp8.i, %cmp9.i
  br i1 %or.cond116.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %if.else79.i
  br i1 %cmp8.i, label %if.then113.i, label %if.end588

if.then113.i:                                     ; preds = %for.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

if.else571:                                       ; preds = %lor.lhs.false554
  %conv576 = sext i32 %sub503 to i64
  %call577 = tail call %union.tree_node* @build_int_2_wide(i64 %conv576, i64 0) #3
  %call.i2197 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call577, %struct.rtx_def* null, i32 0, i32 0) #3
  %83 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2198 = icmp eq %struct.rtx_def* %call.i2197, %83
  br i1 %cmp7.i2198, label %expand_shift.exit2218, label %for.body.i2204

for.body.i2204:                                   ; preds = %if.else571, %if.else79.i2208
  %try.0189.i2203 = phi i32 [ %inc.i2211, %if.else79.i2208 ], [ 0, %if.else571 ]
  switch i32 %try.0189.i2203, label %if.else14.i2206 [
    i32 0, label %if.else79.i2208
    i32 1, label %if.then13.i2205
  ]

if.then13.i2205:                                  ; preds = %for.body.i2204
  br label %if.else79.i2208

if.else14.i2206:                                  ; preds = %for.body.i2204
  br label %if.else79.i2208

if.else79.i2208:                                  ; preds = %if.else14.i2206, %if.then13.i2205, %for.body.i2204
  %methods.0.i2207 = phi i32 [ 2, %if.then13.i2205 ], [ 3, %if.else14.i2206 ], [ 0, %for.body.i2204 ]
  %84 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2210 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %84, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call.i2197, %struct.rtx_def* null, i32 0, i32 %methods.0.i2207) #3
  %inc.i2211 = add nsw i32 %try.0189.i2203, 1
  %cmp8.i2212 = icmp eq %struct.rtx_def* %call109.i2210, null
  %cmp9.i2213 = icmp slt i32 %inc.i2211, 3
  %or.cond116.i2214 = and i1 %cmp8.i2212, %cmp9.i2213
  br i1 %or.cond116.i2214, label %for.body.i2204, label %for.end.i2215

for.end.i2215:                                    ; preds = %if.else79.i2208
  br i1 %cmp8.i2212, label %if.then113.i2216, label %expand_shift.exit2218

if.then113.i2216:                                 ; preds = %for.end.i2215
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2218:                            ; preds = %if.else571, %for.end.i2215
  %retval.0.i2217 = phi %struct.rtx_def* [ %op0.addr.2, %if.else571 ], [ %call109.i2210, %for.end.i2215 ]
  %sub579 = sub nsw i32 %conv172, %call551
  %conv580 = sext i32 %sub579 to i64
  %call581 = tail call %union.tree_node* @build_int_2_wide(i64 %conv580, i64 0) #3
  %call582 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %retval.0.i2217, %union.tree_node* %call581, %struct.rtx_def* null, i32 1)
  %call583 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call582) #3
  %call584 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call583, %struct.rtx_def* null) #3
  %conv585 = sext i32 %call551 to i64
  %call586 = tail call %union.tree_node* @build_int_2_wide(i64 %conv585, i64 0) #3
  %call.i2219 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call586, %struct.rtx_def* null, i32 0, i32 0) #3
  %85 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2220 = icmp eq %struct.rtx_def* %call.i2219, %85
  br i1 %cmp7.i2220, label %if.end588, label %for.body.i2226

for.body.i2226:                                   ; preds = %expand_shift.exit2218, %if.else79.i2230
  %try.0189.i2225 = phi i32 [ %inc.i2233, %if.else79.i2230 ], [ 0, %expand_shift.exit2218 ]
  switch i32 %try.0189.i2225, label %if.else14.i2228 [
    i32 0, label %if.else79.i2230
    i32 1, label %if.then13.i2227
  ]

if.then13.i2227:                                  ; preds = %for.body.i2226
  br label %if.else79.i2230

if.else14.i2228:                                  ; preds = %for.body.i2226
  br label %if.else79.i2230

if.else79.i2230:                                  ; preds = %if.else14.i2228, %if.then13.i2227, %for.body.i2226
  %methods.0.i2229 = phi i32 [ 2, %if.then13.i2227 ], [ 3, %if.else14.i2228 ], [ 0, %for.body.i2226 ]
  %86 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2232 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %86, %struct.rtx_def* %call584, %struct.rtx_def* %call.i2219, %struct.rtx_def* %tquotient.0, i32 0, i32 %methods.0.i2229) #3
  %inc.i2233 = add nsw i32 %try.0189.i2225, 1
  %cmp8.i2234 = icmp eq %struct.rtx_def* %call109.i2232, null
  %cmp9.i2235 = icmp slt i32 %inc.i2233, 3
  %or.cond116.i2236 = and i1 %cmp8.i2234, %cmp9.i2235
  br i1 %or.cond116.i2236, label %for.body.i2226, label %for.end.i2237

for.end.i2237:                                    ; preds = %if.else79.i2230
  br i1 %cmp8.i2234, label %if.then113.i2238, label %if.end588

if.then113.i2238:                                 ; preds = %for.end.i2237
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

if.end588:                                        ; preds = %for.end.i2237, %expand_shift.exit2218, %for.end.i, %expand_inc.exit
  %quotient.1 = phi %struct.rtx_def* [ %call563, %expand_inc.exit ], [ %call109.i, %for.end.i ], [ %call584, %expand_shift.exit2218 ], [ %call109.i2232, %for.end.i2237 ]
  %cmp589 = icmp slt i64 %d475.0, 0
  br i1 %cmp589, label %if.then591, label %if.end763

if.then591:                                       ; preds = %if.end588
  %call592 = tail call %struct.rtx_def* @get_last_insn() #3
  %cmp593 = icmp eq %struct.rtx_def* %call592, %call276
  br i1 %cmp593, label %if.end641, label %land.lhs.true595

land.lhs.true595:                                 ; preds = %if.then591
  %87 = getelementptr inbounds %struct.rtx_def* %call592, i64 0, i32 0
  %bf.load596 = load i32* %87, align 8
  %bf.clear597 = and i32 %bf.load596, 65535
  %idxprom5982175 = zext i32 %bf.clear597 to i64
  %arrayidx599 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom5982175
  %88 = load i8* %arrayidx599, align 1, !tbaa !1
  %cmp601 = icmp eq i8 %88, 105
  br i1 %cmp601, label %cond.true603, label %if.end641

cond.true603:                                     ; preds = %land.lhs.true595
  %arrayidx605 = getelementptr inbounds %struct.rtx_def* %call592, i64 0, i32 1, i64 3
  %rtx606 = bitcast %union.rtunion_def* %arrayidx605 to %struct.rtx_def**
  %89 = load %struct.rtx_def** %rtx606, align 8, !tbaa !4
  %90 = getelementptr inbounds %struct.rtx_def* %89, i64 0, i32 0
  %bf.load607 = load i32* %90, align 8
  %bf.clear608 = and i32 %bf.load607, 65535
  %cmp609 = icmp eq i32 %bf.clear608, 47
  br i1 %cmp609, label %cond.end623, label %cond.false615

cond.false615:                                    ; preds = %cond.true603
  %call619 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call592, %struct.rtx_def* %89) #3
  br label %cond.end623

cond.end623:                                      ; preds = %cond.true603, %cond.false615
  %cond624 = phi %struct.rtx_def* [ %call619, %cond.false615 ], [ %89, %cond.true603 ]
  %cmp625 = icmp eq %struct.rtx_def* %cond624, null
  br i1 %cmp625, label %if.end641, label %land.lhs.true627

land.lhs.true627:                                 ; preds = %cond.end623
  %arrayidx629 = getelementptr inbounds %struct.rtx_def* %cond624, i64 0, i32 1, i64 0
  %rtx630 = bitcast %union.rtunion_def* %arrayidx629 to %struct.rtx_def**
  %91 = load %struct.rtx_def** %rtx630, align 8, !tbaa !4
  %cmp631 = icmp eq %struct.rtx_def* %91, %quotient.1
  %cmp634 = icmp sgt i64 %cond485, -1
  %or.cond1462 = and i1 %cmp631, %cmp634
  br i1 %or.cond1462, label %if.then636, label %if.end641

if.then636:                                       ; preds = %land.lhs.true627
  %call637 = tail call i64 @trunc_int_for_mode(i64 %cond485, i32 %mode.compute_mode.2) #3
  %call638 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call637) #3
  %call639 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call638) #3
  %call640 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call592, i32 4, %struct.rtx_def* %call639) #3
  br label %if.end641

if.end641:                                        ; preds = %land.lhs.true595, %cond.end623, %if.then591, %if.then636, %land.lhs.true627
  %92 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 8, !tbaa !4
  %call642 = tail call %struct.rtx_def* @expand_unop(i32 %mode.compute_mode.2, %struct.optab* %92, %struct.rtx_def* %quotient.1, %struct.rtx_def* %quotient.1, i32 0) #3
  br label %if.end763

if.else644:                                       ; preds = %if.else545
  %cmp645 = icmp ult i16 %27, 65
  br i1 %cmp645, label %if.then647, label %if.then1359

if.then647:                                       ; preds = %if.else644
  %call649 = call fastcc i64 @choose_multiplier(i64 %cond485, i32 %conv172, i32 %sub503, i64* %ml473, i32* %post_shift474, i32* %lgup)
  %93 = load i64* %ml473, align 8, !tbaa !20
  %cmp653 = icmp ult i64 %93, %shl505
  %94 = load i32* %post_shift474, align 4, !tbaa !6
  %95 = load i32* @target_flags, align 4, !tbaa !6
  %and659 = lshr i32 %95, 20
  %96 = and i32 %and659, 32
  %97 = add i32 %96, 32
  %cmp662 = icmp sge i32 %94, %97
  %cmp669 = icmp ugt i32 %conv172, %97
  %or.cond2186 = or i1 %cmp662, %cmp669
  br i1 %cmp653, label %if.then655, label %if.else702

if.then655:                                       ; preds = %if.then647
  br i1 %or.cond2186, label %fail1, label %if.end672

if.end672:                                        ; preds = %if.then655
  %idxprom673 = sext i32 %94 to i64
  %arrayidx674 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom673
  %98 = load i32* %arrayidx674, align 4, !tbaa !6
  %idxprom676 = sext i32 %sub503 to i64
  %arrayidx677 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom676
  %99 = load i32* %arrayidx677, align 4, !tbaa !6
  %100 = load i32* @add_cost, align 4, !tbaa !6
  %add678.neg = sub i32 %sub193, %98
  %add679.neg = sub i32 %add678.neg, %99
  %sub680 = sub i32 %add679.neg, %100
  %call681 = tail call %struct.rtx_def* @expand_mult_highpart(i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, i64 %93, %struct.rtx_def* null, i32 0, i32 %sub680)
  %cmp682 = icmp eq %struct.rtx_def* %call681, null
  br i1 %cmp682, label %fail1, label %if.end685

if.end685:                                        ; preds = %if.end672
  %call687 = tail call %union.tree_node* @build_int_2_wide(i64 %idxprom673, i64 0) #3
  %call.i2241 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call687, %struct.rtx_def* null, i32 0, i32 0) #3
  %101 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2242 = icmp eq %struct.rtx_def* %call.i2241, %101
  br i1 %cmp7.i2242, label %expand_shift.exit2262, label %for.body.i2248

for.body.i2248:                                   ; preds = %if.end685, %if.else79.i2252
  %try.0189.i2247 = phi i32 [ %inc.i2255, %if.else79.i2252 ], [ 0, %if.end685 ]
  switch i32 %try.0189.i2247, label %if.else14.i2250 [
    i32 0, label %if.else79.i2252
    i32 1, label %if.then13.i2249
  ]

if.then13.i2249:                                  ; preds = %for.body.i2248
  br label %if.else79.i2252

if.else14.i2250:                                  ; preds = %for.body.i2248
  br label %if.else79.i2252

if.else79.i2252:                                  ; preds = %if.else14.i2250, %if.then13.i2249, %for.body.i2248
  %methods.0.i2251 = phi i32 [ 2, %if.then13.i2249 ], [ 3, %if.else14.i2250 ], [ 0, %for.body.i2248 ]
  %102 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2254 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %102, %struct.rtx_def* %call681, %struct.rtx_def* %call.i2241, %struct.rtx_def* null, i32 0, i32 %methods.0.i2251) #3
  %inc.i2255 = add nsw i32 %try.0189.i2247, 1
  %cmp8.i2256 = icmp eq %struct.rtx_def* %call109.i2254, null
  %cmp9.i2257 = icmp slt i32 %inc.i2255, 3
  %or.cond116.i2258 = and i1 %cmp8.i2256, %cmp9.i2257
  br i1 %or.cond116.i2258, label %for.body.i2248, label %for.end.i2259

for.end.i2259:                                    ; preds = %if.else79.i2252
  br i1 %cmp8.i2256, label %if.then113.i2260, label %expand_shift.exit2262

if.then113.i2260:                                 ; preds = %for.end.i2259
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2262:                            ; preds = %if.end685, %for.end.i2259
  %retval.0.i2261 = phi %struct.rtx_def* [ %call681, %if.end685 ], [ %call109.i2254, %for.end.i2259 ]
  %call691 = tail call %union.tree_node* @build_int_2_wide(i64 %idxprom676, i64 0) #3
  %call.i2263 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call691, %struct.rtx_def* null, i32 0, i32 0) #3
  %103 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2264 = icmp eq %struct.rtx_def* %call.i2263, %103
  br i1 %cmp7.i2264, label %expand_shift.exit2284, label %for.body.i2270

for.body.i2270:                                   ; preds = %expand_shift.exit2262, %if.else79.i2274
  %try.0189.i2269 = phi i32 [ %inc.i2277, %if.else79.i2274 ], [ 0, %expand_shift.exit2262 ]
  switch i32 %try.0189.i2269, label %if.else14.i2272 [
    i32 0, label %if.else79.i2274
    i32 1, label %if.then13.i2271
  ]

if.then13.i2271:                                  ; preds = %for.body.i2270
  br label %if.else79.i2274

if.else14.i2272:                                  ; preds = %for.body.i2270
  br label %if.else79.i2274

if.else79.i2274:                                  ; preds = %if.else14.i2272, %if.then13.i2271, %for.body.i2270
  %methods.0.i2273 = phi i32 [ 2, %if.then13.i2271 ], [ 3, %if.else14.i2272 ], [ 0, %for.body.i2270 ]
  %104 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2276 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %104, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call.i2263, %struct.rtx_def* null, i32 0, i32 %methods.0.i2273) #3
  %inc.i2277 = add nsw i32 %try.0189.i2269, 1
  %cmp8.i2278 = icmp eq %struct.rtx_def* %call109.i2276, null
  %cmp9.i2279 = icmp slt i32 %inc.i2277, 3
  %or.cond116.i2280 = and i1 %cmp8.i2278, %cmp9.i2279
  br i1 %or.cond116.i2280, label %for.body.i2270, label %for.end.i2281

for.end.i2281:                                    ; preds = %if.else79.i2274
  br i1 %cmp8.i2278, label %if.then113.i2282, label %expand_shift.exit2284

if.then113.i2282:                                 ; preds = %for.end.i2281
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2284:                            ; preds = %expand_shift.exit2262, %for.end.i2281
  %retval.0.i2283 = phi %struct.rtx_def* [ %op0.addr.2, %expand_shift.exit2262 ], [ %call109.i2276, %for.end.i2281 ]
  %cmp693 = icmp slt i64 %d475.0, 0
  br i1 %cmp693, label %if.then695, label %if.else698

if.then695:                                       ; preds = %expand_shift.exit2284
  %call696 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode.compute_mode.2, %struct.rtx_def* %retval.0.i2283, %struct.rtx_def* %retval.0.i2261) #3
  %call697 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call696, %struct.rtx_def* %tquotient.0) #3
  br label %if.end763

if.else698:                                       ; preds = %expand_shift.exit2284
  %call699 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode.compute_mode.2, %struct.rtx_def* %retval.0.i2261, %struct.rtx_def* %retval.0.i2283) #3
  %call700 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call699, %struct.rtx_def* %tquotient.0) #3
  br label %if.end763

if.else702:                                       ; preds = %if.then647
  br i1 %or.cond2186, label %fail1, label %if.end720

if.end720:                                        ; preds = %if.else702
  %shl723 = shl i64 -1, %sh_prom504
  %or = or i64 %93, %shl723
  store i64 %or, i64* %ml473, align 8, !tbaa !20
  %idxprom724 = sext i32 %94 to i64
  %arrayidx725 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom724
  %105 = load i32* %arrayidx725, align 4, !tbaa !6
  %idxprom727 = sext i32 %sub503 to i64
  %arrayidx728 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom727
  %106 = load i32* %arrayidx728, align 4, !tbaa !6
  %107 = load i32* @add_cost, align 4, !tbaa !6
  %mul730 = shl i32 %107, 1
  %add729.neg = sub i32 %sub193, %105
  %add731.neg = sub i32 %add729.neg, %106
  %sub732 = sub i32 %add731.neg, %mul730
  %call733 = tail call %struct.rtx_def* @expand_mult_highpart(i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, i64 %or, %struct.rtx_def* null, i32 0, i32 %sub732)
  %cmp734 = icmp eq %struct.rtx_def* %call733, null
  br i1 %cmp734, label %fail1, label %if.end737

if.end737:                                        ; preds = %if.end720
  %call738 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode.compute_mode.2, %struct.rtx_def* %call733, %struct.rtx_def* %op0.addr.2) #3
  %call739 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call738, %struct.rtx_def* null) #3
  %call741 = tail call %union.tree_node* @build_int_2_wide(i64 %idxprom724, i64 0) #3
  %call.i2285 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call741, %struct.rtx_def* null, i32 0, i32 0) #3
  %108 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2286 = icmp eq %struct.rtx_def* %call.i2285, %108
  br i1 %cmp7.i2286, label %expand_shift.exit2306, label %for.body.i2292

for.body.i2292:                                   ; preds = %if.end737, %if.else79.i2296
  %try.0189.i2291 = phi i32 [ %inc.i2299, %if.else79.i2296 ], [ 0, %if.end737 ]
  switch i32 %try.0189.i2291, label %if.else14.i2294 [
    i32 0, label %if.else79.i2296
    i32 1, label %if.then13.i2293
  ]

if.then13.i2293:                                  ; preds = %for.body.i2292
  br label %if.else79.i2296

if.else14.i2294:                                  ; preds = %for.body.i2292
  br label %if.else79.i2296

if.else79.i2296:                                  ; preds = %if.else14.i2294, %if.then13.i2293, %for.body.i2292
  %methods.0.i2295 = phi i32 [ 2, %if.then13.i2293 ], [ 3, %if.else14.i2294 ], [ 0, %for.body.i2292 ]
  %109 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2298 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %109, %struct.rtx_def* %call739, %struct.rtx_def* %call.i2285, %struct.rtx_def* null, i32 0, i32 %methods.0.i2295) #3
  %inc.i2299 = add nsw i32 %try.0189.i2291, 1
  %cmp8.i2300 = icmp eq %struct.rtx_def* %call109.i2298, null
  %cmp9.i2301 = icmp slt i32 %inc.i2299, 3
  %or.cond116.i2302 = and i1 %cmp8.i2300, %cmp9.i2301
  br i1 %or.cond116.i2302, label %for.body.i2292, label %for.end.i2303

for.end.i2303:                                    ; preds = %if.else79.i2296
  br i1 %cmp8.i2300, label %if.then113.i2304, label %expand_shift.exit2306

if.then113.i2304:                                 ; preds = %for.end.i2303
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2306:                            ; preds = %if.end737, %for.end.i2303
  %retval.0.i2305 = phi %struct.rtx_def* [ %call739, %if.end737 ], [ %call109.i2298, %for.end.i2303 ]
  %call745 = tail call %union.tree_node* @build_int_2_wide(i64 %idxprom727, i64 0) #3
  %call.i2307 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call745, %struct.rtx_def* null, i32 0, i32 0) #3
  %110 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2308 = icmp eq %struct.rtx_def* %call.i2307, %110
  br i1 %cmp7.i2308, label %expand_shift.exit2328, label %for.body.i2314

for.body.i2314:                                   ; preds = %expand_shift.exit2306, %if.else79.i2318
  %try.0189.i2313 = phi i32 [ %inc.i2321, %if.else79.i2318 ], [ 0, %expand_shift.exit2306 ]
  switch i32 %try.0189.i2313, label %if.else14.i2316 [
    i32 0, label %if.else79.i2318
    i32 1, label %if.then13.i2315
  ]

if.then13.i2315:                                  ; preds = %for.body.i2314
  br label %if.else79.i2318

if.else14.i2316:                                  ; preds = %for.body.i2314
  br label %if.else79.i2318

if.else79.i2318:                                  ; preds = %if.else14.i2316, %if.then13.i2315, %for.body.i2314
  %methods.0.i2317 = phi i32 [ 2, %if.then13.i2315 ], [ 3, %if.else14.i2316 ], [ 0, %for.body.i2314 ]
  %111 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2320 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %111, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call.i2307, %struct.rtx_def* null, i32 0, i32 %methods.0.i2317) #3
  %inc.i2321 = add nsw i32 %try.0189.i2313, 1
  %cmp8.i2322 = icmp eq %struct.rtx_def* %call109.i2320, null
  %cmp9.i2323 = icmp slt i32 %inc.i2321, 3
  %or.cond116.i2324 = and i1 %cmp8.i2322, %cmp9.i2323
  br i1 %or.cond116.i2324, label %for.body.i2314, label %for.end.i2325

for.end.i2325:                                    ; preds = %if.else79.i2318
  br i1 %cmp8.i2322, label %if.then113.i2326, label %expand_shift.exit2328

if.then113.i2326:                                 ; preds = %for.end.i2325
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2328:                            ; preds = %expand_shift.exit2306, %for.end.i2325
  %retval.0.i2327 = phi %struct.rtx_def* [ %op0.addr.2, %expand_shift.exit2306 ], [ %call109.i2320, %for.end.i2325 ]
  %cmp747 = icmp slt i64 %d475.0, 0
  br i1 %cmp747, label %if.then749, label %if.else752

if.then749:                                       ; preds = %expand_shift.exit2328
  %call750 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode.compute_mode.2, %struct.rtx_def* %retval.0.i2327, %struct.rtx_def* %retval.0.i2305) #3
  %call751 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call750, %struct.rtx_def* %tquotient.0) #3
  br label %if.end763

if.else752:                                       ; preds = %expand_shift.exit2328
  %call753 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode.compute_mode.2, %struct.rtx_def* %retval.0.i2305, %struct.rtx_def* %retval.0.i2327) #3
  %call754 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call753, %struct.rtx_def* %tquotient.0) #3
  br label %if.end763

if.end763:                                        ; preds = %if.end493, %lor.lhs.false537, %land.lhs.true525, %if.then500, %if.then749, %if.else752, %if.then695, %if.else698, %if.end588, %if.end641, %if.then508
  %quotient.2 = phi %struct.rtx_def* [ %call501, %if.then500 ], [ %call509, %if.then508 ], [ null, %land.lhs.true525 ], [ null, %lor.lhs.false537 ], [ %call642, %if.end641 ], [ %quotient.1, %if.end588 ], [ %call697, %if.then695 ], [ %call700, %if.else698 ], [ %call751, %if.then749 ], [ %call754, %if.else752 ], [ %op0.addr.2, %if.end493 ]
  %call764 = tail call %struct.rtx_def* @get_last_insn() #3
  %cmp765 = icmp eq %struct.rtx_def* %call764, %call276
  br i1 %cmp765, label %if.end1356, label %land.lhs.true767

land.lhs.true767:                                 ; preds = %if.end763
  %112 = getelementptr inbounds %struct.rtx_def* %call764, i64 0, i32 0
  %bf.load768 = load i32* %112, align 8
  %bf.clear769 = and i32 %bf.load768, 65535
  %idxprom7702174 = zext i32 %bf.clear769 to i64
  %arrayidx771 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom7702174
  %113 = load i8* %arrayidx771, align 1, !tbaa !1
  %cmp773 = icmp eq i8 %113, 105
  br i1 %cmp773, label %cond.true775, label %if.end1356

cond.true775:                                     ; preds = %land.lhs.true767
  %arrayidx777 = getelementptr inbounds %struct.rtx_def* %call764, i64 0, i32 1, i64 3
  %rtx778 = bitcast %union.rtunion_def* %arrayidx777 to %struct.rtx_def**
  %114 = load %struct.rtx_def** %rtx778, align 8, !tbaa !4
  %115 = getelementptr inbounds %struct.rtx_def* %114, i64 0, i32 0
  %bf.load779 = load i32* %115, align 8
  %bf.clear780 = and i32 %bf.load779, 65535
  %cmp781 = icmp eq i32 %bf.clear780, 47
  br i1 %cmp781, label %cond.end795, label %cond.false787

cond.false787:                                    ; preds = %cond.true775
  %call791 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call764, %struct.rtx_def* %114) #3
  br label %cond.end795

cond.end795:                                      ; preds = %cond.true775, %cond.false787
  %cond796 = phi %struct.rtx_def* [ %call791, %cond.false787 ], [ %114, %cond.true775 ]
  %cmp797 = icmp eq %struct.rtx_def* %cond796, null
  br i1 %cmp797, label %if.end1356, label %land.lhs.true799

land.lhs.true799:                                 ; preds = %cond.end795
  %arrayidx801 = getelementptr inbounds %struct.rtx_def* %cond796, i64 0, i32 1, i64 0
  %rtx802 = bitcast %union.rtunion_def* %arrayidx801 to %struct.rtx_def**
  %116 = load %struct.rtx_def** %rtx802, align 8, !tbaa !4
  %cmp803 = icmp eq %struct.rtx_def* %116, %quotient.2
  br i1 %cmp803, label %if.then805, label %if.end1356

if.then805:                                       ; preds = %land.lhs.true799
  %call806 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 79, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.2) #3
  %call807 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call764, i32 4, %struct.rtx_def* %call806) #3
  br label %if.end1356

fail1:                                            ; preds = %if.else390, %sw.bb, %if.end720, %if.else702, %if.end672, %if.then655, %if.then508, %if.end405, %if.end368, %if.then360, %if.then332
  %op1.addr.3 = phi %struct.rtx_def* [ %op1.addr.1, %if.then332 ], [ %op1.addr.1, %if.then360 ], [ %op1.addr.1, %if.end368 ], [ %op1.addr.1, %if.else390 ], [ %op1.addr.1, %if.end405 ], [ %op1.addr.2, %if.then508 ], [ %op1.addr.2, %if.then655 ], [ %op1.addr.2, %if.end672 ], [ %op1.addr.2, %if.else702 ], [ %op1.addr.2, %if.end720 ], [ %op1.addr.1, %sw.bb ]
  tail call void @delete_insns_since(%struct.rtx_def* %call276) #3
  br label %if.then1359

sw.bb811:                                         ; preds = %if.then296, %if.then296
  %cmp814 = icmp ult i16 %27, 65
  %or.cond1463 = and i1 %tobool272, %cmp814
  br i1 %or.cond1463, label %if.then816, label %if.end924

if.then816:                                       ; preds = %sw.bb811
  %rtwint825 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 1, i64 0, i32 0
  %117 = load i64* %rtwint825, align 8, !tbaa !20
  %cmp826 = icmp sgt i64 %117, 0
  br i1 %cmp826, label %if.then828, label %if.else898

if.then828:                                       ; preds = %if.then816
  %sub829 = add nsw i64 %117, -1
  %and830 = and i64 %sub829, %117
  %cmp831 = icmp eq i64 %and830, 0
  br i1 %cmp831, label %if.then833, label %if.else850

if.then833:                                       ; preds = %if.then828
  %call834 = tail call i32 @floor_log2_wide(i64 %117) #3
  br i1 %tobool175, label %if.then836, label %if.end846

if.then836:                                       ; preds = %if.then833
  %118 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %sh_prom837 = zext i32 %call834 to i64
  %shl838 = shl i64 1, %sh_prom837
  %sub839 = add nsw i64 %shl838, -1
  %call840 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub839) #3
  %call841 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %118, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call840, %struct.rtx_def* null, i32 0, i32 3) #3
  %tobool842 = icmp eq %struct.rtx_def* %call841, null
  br i1 %tobool842, label %if.end846, label %if.then843

if.then843:                                       ; preds = %if.then836
  %call844 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %call841) #3
  br label %return

if.end846:                                        ; preds = %if.then836, %if.then833
  %conv847 = sext i32 %call834 to i64
  %call848 = tail call %union.tree_node* @build_int_2_wide(i64 %conv847, i64 0) #3
  %call.i2329 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call848, %struct.rtx_def* null, i32 0, i32 0) #3
  %119 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2330 = icmp eq %struct.rtx_def* %call.i2329, %119
  br i1 %cmp7.i2330, label %if.end920, label %for.body.i2336

for.body.i2336:                                   ; preds = %if.end846, %if.else79.i2340
  %try.0189.i2335 = phi i32 [ %inc.i2343, %if.else79.i2340 ], [ 0, %if.end846 ]
  switch i32 %try.0189.i2335, label %if.else14.i2338 [
    i32 0, label %if.else79.i2340
    i32 1, label %if.then13.i2337
  ]

if.then13.i2337:                                  ; preds = %for.body.i2336
  br label %if.else79.i2340

if.else14.i2338:                                  ; preds = %for.body.i2336
  br label %if.else79.i2340

if.else79.i2340:                                  ; preds = %if.else14.i2338, %if.then13.i2337, %for.body.i2336
  %methods.0.i2339 = phi i32 [ 2, %if.then13.i2337 ], [ 3, %if.else14.i2338 ], [ 0, %for.body.i2336 ]
  %120 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2342 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %120, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call.i2329, %struct.rtx_def* %tquotient.0, i32 0, i32 %methods.0.i2339) #3
  %inc.i2343 = add nsw i32 %try.0189.i2335, 1
  %cmp8.i2344 = icmp eq %struct.rtx_def* %call109.i2342, null
  %cmp9.i2345 = icmp slt i32 %inc.i2343, 3
  %or.cond116.i2346 = and i1 %cmp8.i2344, %cmp9.i2345
  br i1 %or.cond116.i2346, label %for.body.i2336, label %for.end.i2347

for.end.i2347:                                    ; preds = %if.else79.i2340
  br i1 %cmp8.i2344, label %if.then113.i2348, label %if.end1429

if.then113.i2348:                                 ; preds = %for.end.i2347
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

if.else850:                                       ; preds = %if.then828
  %sub855 = add nsw i32 %conv172, -1
  %call856 = call fastcc i64 @choose_multiplier(i64 %117, i32 %conv172, i32 %sub855, i64* %ml818, i32* %post_shift821, i32* %lgup820)
  %tobool857 = icmp eq i64 %call856, 0
  br i1 %tobool857, label %if.end859, label %if.then858

if.then858:                                       ; preds = %if.else850
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3488, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.expand_divmod, i64 0, i64 0)) #4
  unreachable

if.end859:                                        ; preds = %if.else850
  %121 = load i32* %post_shift821, align 4, !tbaa !6
  %122 = load i32* @target_flags, align 4, !tbaa !6
  %and860 = lshr i32 %122, 20
  %123 = and i32 %and860, 32
  %124 = add i32 %123, 32
  %cmp863 = icmp sge i32 %121, %124
  %cmp870 = icmp ugt i32 %conv172, %124
  %or.cond2188 = or i1 %cmp863, %cmp870
  br i1 %or.cond2188, label %if.end924, label %if.then872

if.then872:                                       ; preds = %if.end859
  %conv874 = sext i32 %sub855 to i64
  %call875 = tail call %union.tree_node* @build_int_2_wide(i64 %conv874, i64 0) #3
  %call.i2351 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call875, %struct.rtx_def* null, i32 0, i32 0) #3
  %125 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2352 = icmp eq %struct.rtx_def* %call.i2351, %125
  br i1 %cmp7.i2352, label %expand_shift.exit2372, label %for.body.i2358

for.body.i2358:                                   ; preds = %if.then872, %if.else79.i2362
  %try.0189.i2357 = phi i32 [ %inc.i2365, %if.else79.i2362 ], [ 0, %if.then872 ]
  switch i32 %try.0189.i2357, label %if.else14.i2360 [
    i32 0, label %if.else79.i2362
    i32 1, label %if.then13.i2359
  ]

if.then13.i2359:                                  ; preds = %for.body.i2358
  br label %if.else79.i2362

if.else14.i2360:                                  ; preds = %for.body.i2358
  br label %if.else79.i2362

if.else79.i2362:                                  ; preds = %if.else14.i2360, %if.then13.i2359, %for.body.i2358
  %methods.0.i2361 = phi i32 [ 2, %if.then13.i2359 ], [ 3, %if.else14.i2360 ], [ 0, %for.body.i2358 ]
  %126 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2364 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %126, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call.i2351, %struct.rtx_def* null, i32 0, i32 %methods.0.i2361) #3
  %inc.i2365 = add nsw i32 %try.0189.i2357, 1
  %cmp8.i2366 = icmp eq %struct.rtx_def* %call109.i2364, null
  %cmp9.i2367 = icmp slt i32 %inc.i2365, 3
  %or.cond116.i2368 = and i1 %cmp8.i2366, %cmp9.i2367
  br i1 %or.cond116.i2368, label %for.body.i2358, label %for.end.i2369

for.end.i2369:                                    ; preds = %if.else79.i2362
  br i1 %cmp8.i2366, label %if.then113.i2370, label %expand_shift.exit2372

if.then113.i2370:                                 ; preds = %for.end.i2369
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2372:                            ; preds = %if.then872, %for.end.i2369
  %retval.0.i2371 = phi %struct.rtx_def* [ %op0.addr.2, %if.then872 ], [ %call109.i2364, %for.end.i2369 ]
  %127 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !4
  %call877 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %127, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %retval.0.i2371, %struct.rtx_def* null, i32 0, i32 2) #3
  %idxprom878 = sext i32 %121 to i64
  %arrayidx879 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %idxprom878
  %128 = load i32* %arrayidx879, align 4, !tbaa !6
  %arrayidx882 = getelementptr inbounds [64 x i32]* @shift_cost, i64 0, i64 %conv874
  %129 = load i32* %arrayidx882, align 4, !tbaa !6
  %130 = load i32* @add_cost, align 4, !tbaa !6
  %mul884 = shl i32 %130, 1
  %131 = load i64* %ml818, align 8, !tbaa !20
  %add883.neg = sub i32 %sub193, %128
  %add885.neg = sub i32 %add883.neg, %129
  %sub886 = sub i32 %add885.neg, %mul884
  %call887 = tail call %struct.rtx_def* @expand_mult_highpart(i32 %mode.compute_mode.2, %struct.rtx_def* %call877, i64 %131, %struct.rtx_def* null, i32 1, i32 %sub886)
  %cmp888 = icmp eq %struct.rtx_def* %call887, null
  br i1 %cmp888, label %if.end924, label %if.then890

if.then890:                                       ; preds = %expand_shift.exit2372
  %call892 = tail call %union.tree_node* @build_int_2_wide(i64 %idxprom878, i64 0) #3
  %call893 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %call887, %union.tree_node* %call892, %struct.rtx_def* null, i32 1)
  %132 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !4
  %call894 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %132, %struct.rtx_def* %call893, %struct.rtx_def* %retval.0.i2371, %struct.rtx_def* %tquotient.0, i32 0, i32 2) #3
  br label %if.end920

if.else898:                                       ; preds = %if.then816
  %133 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !4
  %call903 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %133) #3
  %call904 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call903, %struct.rtx_def* null) #3
  %134 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !4
  %call905 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %134, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call904, %struct.rtx_def* null, i32 0, i32 2) #3
  %sub906 = add nsw i32 %conv172, -1
  %conv907 = sext i32 %sub906 to i64
  %call908 = tail call %union.tree_node* @build_int_2_wide(i64 %conv907, i64 0) #3
  %call.i2373 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call908, %struct.rtx_def* null, i32 0, i32 0) #3
  %135 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2374 = icmp eq %struct.rtx_def* %call.i2373, %135
  br i1 %cmp7.i2374, label %expand_shift.exit2394, label %for.body.i2380

for.body.i2380:                                   ; preds = %if.else898, %if.else79.i2384
  %try.0189.i2379 = phi i32 [ %inc.i2387, %if.else79.i2384 ], [ 0, %if.else898 ]
  switch i32 %try.0189.i2379, label %if.else14.i2382 [
    i32 0, label %if.else79.i2384
    i32 1, label %if.then13.i2381
  ]

if.then13.i2381:                                  ; preds = %for.body.i2380
  br label %if.else79.i2384

if.else14.i2382:                                  ; preds = %for.body.i2380
  br label %if.else79.i2384

if.else79.i2384:                                  ; preds = %if.else14.i2382, %if.then13.i2381, %for.body.i2380
  %methods.0.i2383 = phi i32 [ 2, %if.then13.i2381 ], [ 3, %if.else14.i2382 ], [ 0, %for.body.i2380 ]
  %136 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2386 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %136, %struct.rtx_def* %call905, %struct.rtx_def* %call.i2373, %struct.rtx_def* null, i32 0, i32 %methods.0.i2383) #3
  %inc.i2387 = add nsw i32 %try.0189.i2379, 1
  %cmp8.i2388 = icmp eq %struct.rtx_def* %call109.i2386, null
  %cmp9.i2389 = icmp slt i32 %inc.i2387, 3
  %or.cond116.i2390 = and i1 %cmp8.i2388, %cmp9.i2389
  br i1 %or.cond116.i2390, label %for.body.i2380, label %for.end.i2391

for.end.i2391:                                    ; preds = %if.else79.i2384
  br i1 %cmp8.i2388, label %if.then113.i2392, label %expand_shift.exit2394

if.then113.i2392:                                 ; preds = %for.end.i2391
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2394:                            ; preds = %if.else898, %for.end.i2391
  %retval.0.i2393 = phi %struct.rtx_def* [ %call905, %if.else898 ], [ %call109.i2386, %for.end.i2391 ]
  %call910 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 76, i32 %mode.compute_mode.2, %struct.rtx_def* %call904, %struct.rtx_def* %retval.0.i2393) #3
  %call911 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call910, %struct.rtx_def* null) #3
  %call912 = tail call %struct.rtx_def* @expand_divmod(i32 0, i32 62, i32 %mode.compute_mode.2, %struct.rtx_def* %call911, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* null, i32 0)
  %tobool913 = icmp eq %struct.rtx_def* %call912, null
  br i1 %tobool913, label %if.end924, label %if.then914

if.then914:                                       ; preds = %expand_shift.exit2394
  %137 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 36), align 8, !tbaa !4
  %call915 = tail call %struct.rtx_def* @expand_unop(i32 %mode.compute_mode.2, %struct.optab* %137, %struct.rtx_def* %retval.0.i2393, %struct.rtx_def* null, i32 0) #3
  %call916 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode.compute_mode.2, %struct.rtx_def* %call912, %struct.rtx_def* %call915) #3
  %call917 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call916, %struct.rtx_def* %tquotient.0) #3
  br label %if.end920

if.end920:                                        ; preds = %if.end846, %if.then890, %if.then914
  %quotient.4 = phi %struct.rtx_def* [ %call894, %if.then890 ], [ %call917, %if.then914 ], [ %op0.addr.2, %if.end846 ]
  %cmp921 = icmp eq %struct.rtx_def* %quotient.4, null
  br i1 %cmp921, label %if.end924, label %if.end1429

if.end924:                                        ; preds = %sw.bb811, %expand_shift.exit2394, %if.end859, %expand_shift.exit2372, %if.end920
  tail call void @delete_insns_since(%struct.rtx_def* %call276) #3
  br i1 %tobool160, label %if.then933, label %lor.lhs.false927

lor.lhs.false927:                                 ; preds = %if.end924
  %138 = getelementptr inbounds %struct.rtx_def* %target.addr.0, i64 0, i32 0
  %bf.load928 = load i32* %138, align 8
  %bf.lshr929 = lshr i32 %bf.load928, 16
  %bf.clear930 = and i32 %bf.lshr929, 255
  %cmp931 = icmp eq i32 %bf.clear930, %mode.compute_mode.2
  br i1 %cmp931, label %if.end935, label %if.then933

if.then933:                                       ; preds = %lor.lhs.false927, %if.end924
  %call934 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %.phi.trans.insert = getelementptr inbounds %struct.rtx_def* %call934, i64 0, i32 0
  %bf.load938.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end935

if.end935:                                        ; preds = %lor.lhs.false927, %if.then933
  %bf.load938 = phi i32 [ %bf.load938.pre, %if.then933 ], [ %bf.load928, %lor.lhs.false927 ]
  %target.addr.1 = phi %struct.rtx_def* [ %call934, %if.then933 ], [ %target.addr.0, %lor.lhs.false927 ]
  %bf.clear939 = and i32 %bf.load938, 65535
  %cmp940 = icmp eq i32 %bf.clear939, 61
  br i1 %tobool175, label %if.then937, label %if.else948

if.then937:                                       ; preds = %if.end935
  br i1 %cmp940, label %cond.end945, label %cond.false943

cond.false943:                                    ; preds = %if.then937
  %call944 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %cond.end945

cond.end945:                                      ; preds = %if.then937, %cond.false943
  %cond946 = phi %struct.rtx_def* [ %call944, %cond.false943 ], [ %target.addr.1, %if.then937 ]
  %call947 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %if.end959

if.else948:                                       ; preds = %if.end935
  br i1 %cmp940, label %cond.end956, label %cond.false954

cond.false954:                                    ; preds = %if.else948
  %call955 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %cond.end956

cond.end956:                                      ; preds = %if.else948, %cond.false954
  %cond957 = phi %struct.rtx_def* [ %call955, %cond.false954 ], [ %target.addr.1, %if.else948 ]
  %call958 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %if.end959

if.end959:                                        ; preds = %cond.end956, %cond.end945
  %remainder.4 = phi %struct.rtx_def* [ %cond946, %cond.end945 ], [ %call958, %cond.end956 ]
  %quotient.5 = phi %struct.rtx_def* [ %call947, %cond.end945 ], [ %cond957, %cond.end956 ]
  %139 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 12), align 8, !tbaa !4
  %call960 = tail call i32 @expand_twoval_binop(%struct.optab* %139, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %quotient.5, %struct.rtx_def* %remainder.4, i32 0) #3
  %tobool961 = icmp eq i32 %call960, 0
  br i1 %tobool961, label %if.end973, label %if.then962

if.then962:                                       ; preds = %if.end959
  %call964 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %140 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  tail call fastcc void @do_cmp_and_jump(%struct.rtx_def* %remainder.4, %struct.rtx_def* %140, i32 103, i32 %mode.compute_mode.2, %struct.rtx_def* %call964)
  %141 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !4
  %call965 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %141, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* null, i32 0, i32 2) #3
  %142 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %arrayidx.i2396 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom170
  %143 = load i32* %arrayidx.i2396, align 4, !tbaa !1
  %cmp.i2397 = icmp eq i32 %143, 1
  br i1 %cmp.i2397, label %land.lhs.true.i2400, label %if.else.i2404

land.lhs.true.i2400:                              ; preds = %if.then962
  %call.i2398 = tail call i32 @can_compare_p(i32 104, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2399 = icmp eq i32 %call.i2398, 0
  br i1 %tobool.i2399, label %if.then.i2402, label %if.else.i2404

if.then.i2402:                                    ; preds = %land.lhs.true.i2400
  %call1.i2401 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %142, %struct.rtx_def* %call965, %struct.rtx_def* %call964, %struct.rtx_def* %call1.i2401) #3
  %call19.i2403 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2401) #3
  br label %do_cmp_and_jump.exit2405

if.else.i2404:                                    ; preds = %land.lhs.true.i2400, %if.then962
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call965, %struct.rtx_def* %142, i32 104, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call964) #3
  br label %do_cmp_and_jump.exit2405

do_cmp_and_jump.exit2405:                         ; preds = %if.then.i2402, %if.else.i2404
  %144 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %145 = getelementptr inbounds %struct.rtx_def* %quotient.5, i64 0, i32 0
  %bf.load.i2406 = load i32* %145, align 8
  %bf.lshr.i2407 = lshr i32 %bf.load.i2406, 16
  %bf.clear.i2408 = and i32 %bf.lshr.i2407, 255
  %146 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call.i2409 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2408, %struct.optab* %146, %struct.rtx_def* %quotient.5, %struct.rtx_def* %144, %struct.rtx_def* %quotient.5, i32 0, i32 3) #3
  %cmp.i2410 = icmp eq %struct.rtx_def* %call.i2409, %quotient.5
  br i1 %cmp.i2410, label %expand_dec.exit, label %if.then.i2412

if.then.i2412:                                    ; preds = %do_cmp_and_jump.exit2405
  %call1.i2411 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %quotient.5, %struct.rtx_def* %call.i2409) #3
  br label %expand_dec.exit

expand_dec.exit:                                  ; preds = %do_cmp_and_jump.exit2405, %if.then.i2412
  %147 = getelementptr inbounds %struct.rtx_def* %remainder.4, i64 0, i32 0
  %bf.load.i2413 = load i32* %147, align 8
  %bf.lshr.i2414 = lshr i32 %bf.load.i2413, 16
  %bf.clear.i2415 = and i32 %bf.lshr.i2414, 255
  %148 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2416 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2415, %struct.optab* %148, %struct.rtx_def* %remainder.4, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %remainder.4, i32 0, i32 3) #3
  %cmp.i2417 = icmp eq %struct.rtx_def* %call.i2416, %remainder.4
  br i1 %cmp.i2417, label %expand_inc.exit2420, label %if.then.i2419

if.then.i2419:                                    ; preds = %expand_dec.exit
  %call1.i2418 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %remainder.4, %struct.rtx_def* %call.i2416) #3
  br label %expand_inc.exit2420

expand_inc.exit2420:                              ; preds = %expand_dec.exit, %if.then.i2419
  %call966 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call964) #3
  %cond971 = select i1 %tobool175, %struct.rtx_def* %remainder.4, %struct.rtx_def* %quotient.5
  %call972 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %cond971) #3
  br label %return

if.end973:                                        ; preds = %if.end959
  %call975 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %call976 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2) #3
  %call977 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call978 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call979 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call980 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call981 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %149 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %arrayidx.i2422 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom170
  %150 = load i32* %arrayidx.i2422, align 4, !tbaa !1
  %cmp.i2423 = icmp eq i32 %150, 1
  br i1 %cmp.i2423, label %land.lhs.true.i2426, label %if.else.i2430

land.lhs.true.i2426:                              ; preds = %if.end973
  %call.i2424 = tail call i32 @can_compare_p(i32 107, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2425 = icmp eq i32 %call.i2424, 0
  br i1 %tobool.i2425, label %if.then.i2428, label %if.else.i2430

if.then.i2428:                                    ; preds = %land.lhs.true.i2426
  %call1.i2427 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %149, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1.i2427, %struct.rtx_def* %call978) #3
  %call19.i2429 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2427) #3
  br label %do_cmp_and_jump.exit2431

if.else.i2430:                                    ; preds = %land.lhs.true.i2426, %if.end973
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %op1.addr.1, %struct.rtx_def* %149, i32 107, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call978) #3
  br label %do_cmp_and_jump.exit2431

do_cmp_and_jump.exit2431:                         ; preds = %if.then.i2428, %if.else.i2430
  %151 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  br i1 %cmp.i2423, label %land.lhs.true.i2437, label %if.else.i2441

land.lhs.true.i2437:                              ; preds = %do_cmp_and_jump.exit2431
  %call.i2435 = tail call i32 @can_compare_p(i32 107, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2436 = icmp eq i32 %call.i2435, 0
  br i1 %tobool.i2436, label %if.then.i2439, label %if.else.i2441

if.then.i2439:                                    ; preds = %land.lhs.true.i2437
  %call1.i2438 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %151, %struct.rtx_def* %call976, %struct.rtx_def* %call1.i2438, %struct.rtx_def* %call977) #3
  %call19.i2440 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2438) #3
  br label %do_cmp_and_jump.exit2442

if.else.i2441:                                    ; preds = %land.lhs.true.i2437, %do_cmp_and_jump.exit2431
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call976, %struct.rtx_def* %151, i32 107, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call977) #3
  br label %do_cmp_and_jump.exit2442

do_cmp_and_jump.exit2442:                         ; preds = %if.then.i2439, %if.else.i2441
  %152 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %call982 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %152, %struct.rtx_def* %call976, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call975, i32 0, i32 3) #3
  %cmp983 = icmp eq %struct.rtx_def* %call982, %call975
  br i1 %cmp983, label %if.end987, label %if.then985

if.then985:                                       ; preds = %do_cmp_and_jump.exit2442
  %call986 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call975, %struct.rtx_def* %call982) #3
  br label %if.end987

if.end987:                                        ; preds = %do_cmp_and_jump.exit2442, %if.then985
  %call988 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call981) #3
  %call989 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call988) #3
  %call990 = tail call %struct.rtx_def* @emit_barrier() #3
  %call991 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call977) #3
  %153 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %154 = getelementptr inbounds %struct.rtx_def* %call976, i64 0, i32 0
  %bf.load.i2443 = load i32* %154, align 8
  %bf.lshr.i2444 = lshr i32 %bf.load.i2443, 16
  %bf.clear.i2445 = and i32 %bf.lshr.i2444, 255
  %155 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2446 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2445, %struct.optab* %155, %struct.rtx_def* %call976, %struct.rtx_def* %153, %struct.rtx_def* %call976, i32 0, i32 3) #3
  %cmp.i2447 = icmp eq %struct.rtx_def* %call.i2446, %call976
  br i1 %cmp.i2447, label %expand_inc.exit2450, label %if.then.i2449

if.then.i2449:                                    ; preds = %if.end987
  %call1.i2448 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call976, %struct.rtx_def* %call.i2446) #3
  br label %expand_inc.exit2450

expand_inc.exit2450:                              ; preds = %if.end987, %if.then.i2449
  %call992 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call980) #3
  %call993 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call992) #3
  %call994 = tail call %struct.rtx_def* @emit_barrier() #3
  %call995 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call978) #3
  %156 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  br i1 %cmp.i2423, label %land.lhs.true.i2456, label %if.else.i2460

land.lhs.true.i2456:                              ; preds = %expand_inc.exit2450
  %call.i2454 = tail call i32 @can_compare_p(i32 105, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2455 = icmp eq i32 %call.i2454, 0
  br i1 %tobool.i2455, label %if.then.i2458, label %if.else.i2460

if.then.i2458:                                    ; preds = %land.lhs.true.i2456
  %call1.i2457 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call976, %struct.rtx_def* %156, %struct.rtx_def* %call1.i2457, %struct.rtx_def* %call979) #3
  %call19.i2459 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2457) #3
  br label %do_cmp_and_jump.exit2461

if.else.i2460:                                    ; preds = %land.lhs.true.i2456, %expand_inc.exit2450
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call976, %struct.rtx_def* %156, i32 105, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call979) #3
  br label %do_cmp_and_jump.exit2461

do_cmp_and_jump.exit2461:                         ; preds = %if.then.i2458, %if.else.i2460
  %157 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %call996 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %157, %struct.rtx_def* %call976, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call975, i32 0, i32 3) #3
  %cmp997 = icmp eq %struct.rtx_def* %call996, %call975
  br i1 %cmp997, label %if.end1001, label %if.then999

if.then999:                                       ; preds = %do_cmp_and_jump.exit2461
  %call1000 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call975, %struct.rtx_def* %call996) #3
  br label %if.end1001

if.end1001:                                       ; preds = %do_cmp_and_jump.exit2461, %if.then999
  %call1002 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call981) #3
  %call1003 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call1002) #3
  %call1004 = tail call %struct.rtx_def* @emit_barrier() #3
  %call1005 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call979) #3
  %158 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %bf.load.i2462 = load i32* %154, align 8
  %bf.lshr.i2463 = lshr i32 %bf.load.i2462, 16
  %bf.clear.i2464 = and i32 %bf.lshr.i2463, 255
  %159 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call.i2465 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2464, %struct.optab* %159, %struct.rtx_def* %call976, %struct.rtx_def* %158, %struct.rtx_def* %call976, i32 0, i32 3) #3
  %cmp.i2466 = icmp eq %struct.rtx_def* %call.i2465, %call976
  br i1 %cmp.i2466, label %expand_dec.exit2469, label %if.then.i2468

if.then.i2468:                                    ; preds = %if.end1001
  %call1.i2467 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call976, %struct.rtx_def* %call.i2465) #3
  br label %expand_dec.exit2469

expand_dec.exit2469:                              ; preds = %if.end1001, %if.then.i2468
  %call1006 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call980) #3
  %160 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %call1007 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %160, %struct.rtx_def* %call976, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call975, i32 0, i32 3) #3
  %cmp1008 = icmp eq %struct.rtx_def* %call1007, %call975
  br i1 %cmp1008, label %if.end1012, label %if.then1010

if.then1010:                                      ; preds = %expand_dec.exit2469
  %call1011 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call975, %struct.rtx_def* %call1007) #3
  br label %if.end1012

if.end1012:                                       ; preds = %expand_dec.exit2469, %if.then1010
  %161 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %162 = getelementptr inbounds %struct.rtx_def* %call975, i64 0, i32 0
  %bf.load.i2470 = load i32* %162, align 8
  %bf.lshr.i2471 = lshr i32 %bf.load.i2470, 16
  %bf.clear.i2472 = and i32 %bf.lshr.i2471, 255
  %163 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call.i2473 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2472, %struct.optab* %163, %struct.rtx_def* %call975, %struct.rtx_def* %161, %struct.rtx_def* %call975, i32 0, i32 3) #3
  %cmp.i2474 = icmp eq %struct.rtx_def* %call.i2473, %call975
  br i1 %cmp.i2474, label %expand_dec.exit2477, label %if.then.i2476

if.then.i2476:                                    ; preds = %if.end1012
  %call1.i2475 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call975, %struct.rtx_def* %call.i2473) #3
  br label %expand_dec.exit2477

expand_dec.exit2477:                              ; preds = %if.end1012, %if.then.i2476
  %call1013 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call981) #3
  br label %if.end1356

sw.bb1014:                                        ; preds = %if.then296, %if.then296
  br i1 %tobool24, label %if.then1016, label %if.else1124

if.then1016:                                      ; preds = %sw.bb1014
  br i1 %tobool272, label %land.lhs.true1018, label %if.end1055

land.lhs.true1018:                                ; preds = %if.then1016
  %rtwint1021 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 1, i64 0, i32 0
  %164 = load i64* %rtwint1021, align 8, !tbaa !20
  %sub1025 = add i64 %164, -1
  %and1026 = and i64 %sub1025, %164
  %cmp1027 = icmp eq i64 %and1026, 0
  br i1 %cmp1027, label %if.then1029, label %if.end1055

if.then1029:                                      ; preds = %land.lhs.true1018
  %call1037 = tail call i32 @floor_log2_wide(i64 %164) #3
  %conv1038 = sext i32 %call1037 to i64
  %call1039 = tail call %union.tree_node* @build_int_2_wide(i64 %conv1038, i64 0) #3
  %call1040 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %union.tree_node* %call1039, %struct.rtx_def* %tquotient.0, i32 1)
  %165 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %call1042 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub1025) #3
  %call1043 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %165, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call1042, %struct.rtx_def* null, i32 1, i32 3) #3
  %call1044 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %166 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call1045 = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %call1044, i32 102, %struct.rtx_def* %call1043, %struct.rtx_def* %166, i32 %mode.compute_mode.2, i32 1, i32 1)
  %cmp1046 = icmp eq %struct.rtx_def* %call1045, null
  br i1 %cmp1046, label %if.then1048, label %if.else1051

if.then1048:                                      ; preds = %if.then1029
  %call1049 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %167 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  tail call fastcc void @do_cmp_and_jump(%struct.rtx_def* %call1043, %struct.rtx_def* %167, i32 103, i32 %mode.compute_mode.2, %struct.rtx_def* %call1049)
  %168 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %169 = getelementptr inbounds %struct.rtx_def* %call1040, i64 0, i32 0
  %bf.load.i2478 = load i32* %169, align 8
  %bf.lshr.i2479 = lshr i32 %bf.load.i2478, 16
  %bf.clear.i2480 = and i32 %bf.lshr.i2479, 255
  %170 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2481 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2480, %struct.optab* %170, %struct.rtx_def* %call1040, %struct.rtx_def* %168, %struct.rtx_def* %call1040, i32 0, i32 3) #3
  %cmp.i2482 = icmp eq %struct.rtx_def* %call.i2481, %call1040
  br i1 %cmp.i2482, label %expand_inc.exit2485, label %if.then.i2484

if.then.i2484:                                    ; preds = %if.then1048
  %call1.i2483 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1040, %struct.rtx_def* %call.i2481) #3
  br label %expand_inc.exit2485

expand_inc.exit2485:                              ; preds = %if.then1048, %if.then.i2484
  %call1050 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1049) #3
  br label %if.end1356

if.else1051:                                      ; preds = %if.then1029
  %call1052 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode.compute_mode.2, %struct.rtx_def* %call1040, %struct.rtx_def* %call1045) #3
  %call1053 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call1052, %struct.rtx_def* %tquotient.0) #3
  br label %if.end1356

if.end1055:                                       ; preds = %land.lhs.true1018, %if.then1016
  br i1 %tobool160, label %if.then1064, label %lor.lhs.false1058

lor.lhs.false1058:                                ; preds = %if.end1055
  %171 = getelementptr inbounds %struct.rtx_def* %target.addr.0, i64 0, i32 0
  %bf.load1059 = load i32* %171, align 8
  %bf.lshr1060 = lshr i32 %bf.load1059, 16
  %bf.clear1061 = and i32 %bf.lshr1060, 255
  %cmp1062 = icmp eq i32 %bf.clear1061, %mode.compute_mode.2
  br i1 %cmp1062, label %if.end1066, label %if.then1064

if.then1064:                                      ; preds = %lor.lhs.false1058, %if.end1055
  %call1065 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %.phi.trans.insert2783 = getelementptr inbounds %struct.rtx_def* %call1065, i64 0, i32 0
  %bf.load1069.pre = load i32* %.phi.trans.insert2783, align 8
  br label %if.end1066

if.end1066:                                       ; preds = %lor.lhs.false1058, %if.then1064
  %bf.load1069 = phi i32 [ %bf.load1069.pre, %if.then1064 ], [ %bf.load1059, %lor.lhs.false1058 ]
  %target.addr.2 = phi %struct.rtx_def* [ %call1065, %if.then1064 ], [ %target.addr.0, %lor.lhs.false1058 ]
  %bf.clear1070 = and i32 %bf.load1069, 65535
  %cmp1071 = icmp eq i32 %bf.clear1070, 61
  br i1 %tobool175, label %if.then1068, label %if.else1079

if.then1068:                                      ; preds = %if.end1066
  br i1 %cmp1071, label %cond.end1076, label %cond.false1074

cond.false1074:                                   ; preds = %if.then1068
  %call1075 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %cond.end1076

cond.end1076:                                     ; preds = %if.then1068, %cond.false1074
  %cond1077 = phi %struct.rtx_def* [ %call1075, %cond.false1074 ], [ %target.addr.2, %if.then1068 ]
  %call1078 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %if.end1090

if.else1079:                                      ; preds = %if.end1066
  br i1 %cmp1071, label %cond.end1087, label %cond.false1085

cond.false1085:                                   ; preds = %if.else1079
  %call1086 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %cond.end1087

cond.end1087:                                     ; preds = %if.else1079, %cond.false1085
  %cond1088 = phi %struct.rtx_def* [ %call1086, %cond.false1085 ], [ %target.addr.2, %if.else1079 ]
  %call1089 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %if.end1090

if.end1090:                                       ; preds = %cond.end1087, %cond.end1076
  %remainder.5 = phi %struct.rtx_def* [ %cond1077, %cond.end1076 ], [ %call1089, %cond.end1087 ]
  %quotient.6 = phi %struct.rtx_def* [ %call1078, %cond.end1076 ], [ %cond1088, %cond.end1087 ]
  %172 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 14), align 8, !tbaa !4
  %call1091 = tail call i32 @expand_twoval_binop(%struct.optab* %172, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %quotient.6, %struct.rtx_def* %remainder.5, i32 1) #3
  %tobool1092 = icmp eq i32 %call1091, 0
  br i1 %tobool1092, label %if.end1103, label %if.then1093

if.then1093:                                      ; preds = %if.end1090
  %call1095 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %173 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  tail call fastcc void @do_cmp_and_jump(%struct.rtx_def* %remainder.5, %struct.rtx_def* %173, i32 103, i32 %mode.compute_mode.2, %struct.rtx_def* %call1095)
  %174 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %175 = getelementptr inbounds %struct.rtx_def* %quotient.6, i64 0, i32 0
  %bf.load.i2486 = load i32* %175, align 8
  %bf.lshr.i2487 = lshr i32 %bf.load.i2486, 16
  %bf.clear.i2488 = and i32 %bf.lshr.i2487, 255
  %176 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2489 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2488, %struct.optab* %176, %struct.rtx_def* %quotient.6, %struct.rtx_def* %174, %struct.rtx_def* %quotient.6, i32 0, i32 3) #3
  %cmp.i2490 = icmp eq %struct.rtx_def* %call.i2489, %quotient.6
  br i1 %cmp.i2490, label %expand_inc.exit2493, label %if.then.i2492

if.then.i2492:                                    ; preds = %if.then1093
  %call1.i2491 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %quotient.6, %struct.rtx_def* %call.i2489) #3
  br label %expand_inc.exit2493

expand_inc.exit2493:                              ; preds = %if.then1093, %if.then.i2492
  %177 = getelementptr inbounds %struct.rtx_def* %remainder.5, i64 0, i32 0
  %bf.load.i2494 = load i32* %177, align 8
  %bf.lshr.i2495 = lshr i32 %bf.load.i2494, 16
  %bf.clear.i2496 = and i32 %bf.lshr.i2495, 255
  %178 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call.i2497 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2496, %struct.optab* %178, %struct.rtx_def* %remainder.5, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %remainder.5, i32 0, i32 3) #3
  %cmp.i2498 = icmp eq %struct.rtx_def* %call.i2497, %remainder.5
  br i1 %cmp.i2498, label %expand_dec.exit2501, label %if.then.i2500

if.then.i2500:                                    ; preds = %expand_inc.exit2493
  %call1.i2499 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %remainder.5, %struct.rtx_def* %call.i2497) #3
  br label %expand_dec.exit2501

expand_dec.exit2501:                              ; preds = %expand_inc.exit2493, %if.then.i2500
  %call1096 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1095) #3
  %cond1101 = select i1 %tobool175, %struct.rtx_def* %remainder.5, %struct.rtx_def* %quotient.6
  %call1102 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %cond1101) #3
  br label %return

if.end1103:                                       ; preds = %if.end1090
  %call1108 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %call1109 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2) #3
  %call1110 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call1111 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %179 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  tail call fastcc void @do_cmp_and_jump(%struct.rtx_def* %call1109, %struct.rtx_def* %179, i32 102, i32 %mode.compute_mode.2, %struct.rtx_def* %call1110)
  %180 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call1112 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1108, %struct.rtx_def* %180) #3
  %call1113 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call1111) #3
  %call1114 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call1113) #3
  %call1115 = tail call %struct.rtx_def* @emit_barrier() #3
  %call1116 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1110) #3
  %181 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %182 = getelementptr inbounds %struct.rtx_def* %call1109, i64 0, i32 0
  %bf.load.i2502 = load i32* %182, align 8
  %bf.lshr.i2503 = lshr i32 %bf.load.i2502, 16
  %bf.clear.i2504 = and i32 %bf.lshr.i2503, 255
  %183 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call.i2505 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2504, %struct.optab* %183, %struct.rtx_def* %call1109, %struct.rtx_def* %181, %struct.rtx_def* %call1109, i32 0, i32 3) #3
  %cmp.i2506 = icmp eq %struct.rtx_def* %call.i2505, %call1109
  br i1 %cmp.i2506, label %expand_dec.exit2509, label %if.then.i2508

if.then.i2508:                                    ; preds = %if.end1103
  %call1.i2507 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1109, %struct.rtx_def* %call.i2505) #3
  br label %expand_dec.exit2509

expand_dec.exit2509:                              ; preds = %if.end1103, %if.then.i2508
  %184 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 13), align 8, !tbaa !4
  %call1117 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %184, %struct.rtx_def* %call1109, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1108, i32 1, i32 3) #3
  %cmp1118 = icmp eq %struct.rtx_def* %call1117, %call1108
  br i1 %cmp1118, label %if.end1122, label %if.then1120

if.then1120:                                      ; preds = %expand_dec.exit2509
  %call1121 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1108, %struct.rtx_def* %call1117) #3
  br label %if.end1122

if.end1122:                                       ; preds = %expand_dec.exit2509, %if.then1120
  %185 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %186 = getelementptr inbounds %struct.rtx_def* %call1108, i64 0, i32 0
  %bf.load.i2510 = load i32* %186, align 8
  %bf.lshr.i2511 = lshr i32 %bf.load.i2510, 16
  %bf.clear.i2512 = and i32 %bf.lshr.i2511, 255
  %187 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2513 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2512, %struct.optab* %187, %struct.rtx_def* %call1108, %struct.rtx_def* %185, %struct.rtx_def* %call1108, i32 0, i32 3) #3
  %cmp.i2514 = icmp eq %struct.rtx_def* %call.i2513, %call1108
  br i1 %cmp.i2514, label %expand_inc.exit2517, label %if.then.i2516

if.then.i2516:                                    ; preds = %if.end1122
  %call1.i2515 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1108, %struct.rtx_def* %call.i2513) #3
  br label %expand_inc.exit2517

expand_inc.exit2517:                              ; preds = %if.end1122, %if.then.i2516
  %call1123 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1111) #3
  br label %if.end1356

if.else1124:                                      ; preds = %sw.bb1014
  br i1 %tobool272, label %land.lhs.true1126, label %if.end1170

land.lhs.true1126:                                ; preds = %if.else1124
  %rtwint1129 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 1, i64 0, i32 0
  %188 = load i64* %rtwint1129, align 8, !tbaa !20
  %sub1133 = add nsw i64 %188, 9223372036854775807
  %189 = or i64 %sub1133, -9223372036854775808
  %190 = and i64 %189, %188
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %if.then1143, label %if.end1170

if.then1143:                                      ; preds = %land.lhs.true1126
  %call1151 = tail call i32 @floor_log2_wide(i64 %188) #3
  %conv1152 = sext i32 %call1151 to i64
  %call1153 = tail call %union.tree_node* @build_int_2_wide(i64 %conv1152, i64 0) #3
  %call.i2518 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call1153, %struct.rtx_def* null, i32 0, i32 0) #3
  %192 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2519 = icmp eq %struct.rtx_def* %call.i2518, %192
  br i1 %cmp7.i2519, label %expand_shift.exit2539, label %for.body.i2525

for.body.i2525:                                   ; preds = %if.then1143, %if.else79.i2529
  %try.0189.i2524 = phi i32 [ %inc.i2532, %if.else79.i2529 ], [ 0, %if.then1143 ]
  switch i32 %try.0189.i2524, label %if.else14.i2527 [
    i32 0, label %if.else79.i2529
    i32 1, label %if.then13.i2526
  ]

if.then13.i2526:                                  ; preds = %for.body.i2525
  br label %if.else79.i2529

if.else14.i2527:                                  ; preds = %for.body.i2525
  br label %if.else79.i2529

if.else79.i2529:                                  ; preds = %if.else14.i2527, %if.then13.i2526, %for.body.i2525
  %methods.0.i2528 = phi i32 [ 2, %if.then13.i2526 ], [ 3, %if.else14.i2527 ], [ 0, %for.body.i2525 ]
  %193 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2531 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %193, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call.i2518, %struct.rtx_def* %tquotient.0, i32 0, i32 %methods.0.i2528) #3
  %inc.i2532 = add nsw i32 %try.0189.i2524, 1
  %cmp8.i2533 = icmp eq %struct.rtx_def* %call109.i2531, null
  %cmp9.i2534 = icmp slt i32 %inc.i2532, 3
  %or.cond116.i2535 = and i1 %cmp8.i2533, %cmp9.i2534
  br i1 %or.cond116.i2535, label %for.body.i2525, label %for.end.i2536

for.end.i2536:                                    ; preds = %if.else79.i2529
  br i1 %cmp8.i2533, label %if.then113.i2537, label %expand_shift.exit2539

if.then113.i2537:                                 ; preds = %for.end.i2536
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2539:                            ; preds = %if.then1143, %for.end.i2536
  %retval.0.i2538 = phi %struct.rtx_def* [ %op0.addr.2, %if.then1143 ], [ %call109.i2531, %for.end.i2536 ]
  %194 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %sub1155 = add i64 %188, -1
  %call1156 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub1155) #3
  %call1157 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %194, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call1156, %struct.rtx_def* null, i32 1, i32 3) #3
  %call1158 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %195 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call1159 = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %call1158, i32 102, %struct.rtx_def* %call1157, %struct.rtx_def* %195, i32 %mode.compute_mode.2, i32 1, i32 1)
  %cmp1160 = icmp eq %struct.rtx_def* %call1159, null
  br i1 %cmp1160, label %if.then1162, label %if.else1166

if.then1162:                                      ; preds = %expand_shift.exit2539
  %call1164 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %196 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  tail call fastcc void @do_cmp_and_jump(%struct.rtx_def* %call1157, %struct.rtx_def* %196, i32 103, i32 %mode.compute_mode.2, %struct.rtx_def* %call1164)
  %197 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %198 = getelementptr inbounds %struct.rtx_def* %retval.0.i2538, i64 0, i32 0
  %bf.load.i2540 = load i32* %198, align 8
  %bf.lshr.i2541 = lshr i32 %bf.load.i2540, 16
  %bf.clear.i2542 = and i32 %bf.lshr.i2541, 255
  %199 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2543 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2542, %struct.optab* %199, %struct.rtx_def* %retval.0.i2538, %struct.rtx_def* %197, %struct.rtx_def* %retval.0.i2538, i32 0, i32 3) #3
  %cmp.i2544 = icmp eq %struct.rtx_def* %call.i2543, %retval.0.i2538
  br i1 %cmp.i2544, label %expand_inc.exit2547, label %if.then.i2546

if.then.i2546:                                    ; preds = %if.then1162
  %call1.i2545 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %retval.0.i2538, %struct.rtx_def* %call.i2543) #3
  br label %expand_inc.exit2547

expand_inc.exit2547:                              ; preds = %if.then1162, %if.then.i2546
  %call1165 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1164) #3
  br label %if.end1356

if.else1166:                                      ; preds = %expand_shift.exit2539
  %call1167 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %mode.compute_mode.2, %struct.rtx_def* %retval.0.i2538, %struct.rtx_def* %call1159) #3
  %call1168 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call1167, %struct.rtx_def* %tquotient.0) #3
  br label %if.end1356

if.end1170:                                       ; preds = %land.lhs.true1126, %if.else1124
  br i1 %tobool160, label %if.then1179, label %lor.lhs.false1173

lor.lhs.false1173:                                ; preds = %if.end1170
  %200 = getelementptr inbounds %struct.rtx_def* %target.addr.0, i64 0, i32 0
  %bf.load1174 = load i32* %200, align 8
  %bf.lshr1175 = lshr i32 %bf.load1174, 16
  %bf.clear1176 = and i32 %bf.lshr1175, 255
  %cmp1177 = icmp eq i32 %bf.clear1176, %mode.compute_mode.2
  br i1 %cmp1177, label %if.end1181, label %if.then1179

if.then1179:                                      ; preds = %lor.lhs.false1173, %if.end1170
  %call1180 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %.phi.trans.insert2785 = getelementptr inbounds %struct.rtx_def* %call1180, i64 0, i32 0
  %bf.load1184.pre = load i32* %.phi.trans.insert2785, align 8
  br label %if.end1181

if.end1181:                                       ; preds = %lor.lhs.false1173, %if.then1179
  %bf.load1184 = phi i32 [ %bf.load1184.pre, %if.then1179 ], [ %bf.load1174, %lor.lhs.false1173 ]
  %target.addr.3 = phi %struct.rtx_def* [ %call1180, %if.then1179 ], [ %target.addr.0, %lor.lhs.false1173 ]
  %bf.clear1185 = and i32 %bf.load1184, 65535
  %cmp1186 = icmp eq i32 %bf.clear1185, 61
  br i1 %tobool175, label %if.then1183, label %if.else1194

if.then1183:                                      ; preds = %if.end1181
  br i1 %cmp1186, label %cond.end1191, label %cond.false1189

cond.false1189:                                   ; preds = %if.then1183
  %call1190 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %cond.end1191

cond.end1191:                                     ; preds = %if.then1183, %cond.false1189
  %cond1192 = phi %struct.rtx_def* [ %call1190, %cond.false1189 ], [ %target.addr.3, %if.then1183 ]
  %call1193 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %if.end1205

if.else1194:                                      ; preds = %if.end1181
  br i1 %cmp1186, label %cond.end1202, label %cond.false1200

cond.false1200:                                   ; preds = %if.else1194
  %call1201 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %cond.end1202

cond.end1202:                                     ; preds = %if.else1194, %cond.false1200
  %cond1203 = phi %struct.rtx_def* [ %call1201, %cond.false1200 ], [ %target.addr.3, %if.else1194 ]
  %call1204 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br label %if.end1205

if.end1205:                                       ; preds = %cond.end1202, %cond.end1191
  %remainder.6 = phi %struct.rtx_def* [ %cond1192, %cond.end1191 ], [ %call1204, %cond.end1202 ]
  %quotient.7 = phi %struct.rtx_def* [ %call1193, %cond.end1191 ], [ %cond1203, %cond.end1202 ]
  %201 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 12), align 8, !tbaa !4
  %call1206 = tail call i32 @expand_twoval_binop(%struct.optab* %201, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %quotient.7, %struct.rtx_def* %remainder.6, i32 0) #3
  %tobool1207 = icmp eq i32 %call1206, 0
  br i1 %tobool1207, label %if.end1220, label %if.then1208

if.then1208:                                      ; preds = %if.end1205
  %call1211 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %202 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  tail call fastcc void @do_cmp_and_jump(%struct.rtx_def* %remainder.6, %struct.rtx_def* %202, i32 103, i32 %mode.compute_mode.2, %struct.rtx_def* %call1211)
  %203 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !4
  %call1212 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %203, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* null, i32 0, i32 2) #3
  %204 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %arrayidx.i2549 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom170
  %205 = load i32* %arrayidx.i2549, align 4, !tbaa !1
  %cmp.i2550 = icmp eq i32 %205, 1
  br i1 %cmp.i2550, label %land.lhs.true.i2553, label %if.else.i2557

land.lhs.true.i2553:                              ; preds = %if.then1208
  %call.i2551 = tail call i32 @can_compare_p(i32 107, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2552 = icmp eq i32 %call.i2551, 0
  br i1 %tobool.i2552, label %if.then.i2555, label %if.else.i2557

if.then.i2555:                                    ; preds = %land.lhs.true.i2553
  %call1.i2554 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %204, %struct.rtx_def* %call1212, %struct.rtx_def* %call1.i2554, %struct.rtx_def* %call1211) #3
  %call19.i2556 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2554) #3
  br label %do_cmp_and_jump.exit2558

if.else.i2557:                                    ; preds = %land.lhs.true.i2553, %if.then1208
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call1212, %struct.rtx_def* %204, i32 107, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call1211) #3
  br label %do_cmp_and_jump.exit2558

do_cmp_and_jump.exit2558:                         ; preds = %if.then.i2555, %if.else.i2557
  %206 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %207 = getelementptr inbounds %struct.rtx_def* %quotient.7, i64 0, i32 0
  %bf.load.i2559 = load i32* %207, align 8
  %bf.lshr.i2560 = lshr i32 %bf.load.i2559, 16
  %bf.clear.i2561 = and i32 %bf.lshr.i2560, 255
  %208 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2562 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2561, %struct.optab* %208, %struct.rtx_def* %quotient.7, %struct.rtx_def* %206, %struct.rtx_def* %quotient.7, i32 0, i32 3) #3
  %cmp.i2563 = icmp eq %struct.rtx_def* %call.i2562, %quotient.7
  br i1 %cmp.i2563, label %expand_inc.exit2566, label %if.then.i2565

if.then.i2565:                                    ; preds = %do_cmp_and_jump.exit2558
  %call1.i2564 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %quotient.7, %struct.rtx_def* %call.i2562) #3
  br label %expand_inc.exit2566

expand_inc.exit2566:                              ; preds = %do_cmp_and_jump.exit2558, %if.then.i2565
  %209 = getelementptr inbounds %struct.rtx_def* %remainder.6, i64 0, i32 0
  %bf.load.i2567 = load i32* %209, align 8
  %bf.lshr.i2568 = lshr i32 %bf.load.i2567, 16
  %bf.clear.i2569 = and i32 %bf.lshr.i2568, 255
  %210 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call.i2570 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2569, %struct.optab* %210, %struct.rtx_def* %remainder.6, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %remainder.6, i32 0, i32 3) #3
  %cmp.i2571 = icmp eq %struct.rtx_def* %call.i2570, %remainder.6
  br i1 %cmp.i2571, label %expand_dec.exit2574, label %if.then.i2573

if.then.i2573:                                    ; preds = %expand_inc.exit2566
  %call1.i2572 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %remainder.6, %struct.rtx_def* %call.i2570) #3
  br label %expand_dec.exit2574

expand_dec.exit2574:                              ; preds = %expand_inc.exit2566, %if.then.i2573
  %call1213 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1211) #3
  %cond1218 = select i1 %tobool175, %struct.rtx_def* %remainder.6, %struct.rtx_def* %quotient.7
  %call1219 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %cond1218) #3
  br label %return

if.end1220:                                       ; preds = %if.end1205
  %call1228 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %call1229 = tail call %struct.rtx_def* @copy_to_mode_reg(i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2) #3
  %call1230 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call1231 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call1232 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call1233 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call1234 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %211 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %arrayidx.i2576 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom170
  %212 = load i32* %arrayidx.i2576, align 4, !tbaa !1
  %cmp.i2577 = icmp eq i32 %212, 1
  br i1 %cmp.i2577, label %land.lhs.true.i2580, label %if.else.i2584

land.lhs.true.i2580:                              ; preds = %if.end1220
  %call.i2578 = tail call i32 @can_compare_p(i32 107, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2579 = icmp eq i32 %call.i2578, 0
  br i1 %tobool.i2579, label %if.then.i2582, label %if.else.i2584

if.then.i2582:                                    ; preds = %land.lhs.true.i2580
  %call1.i2581 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %211, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1.i2581, %struct.rtx_def* %call1231) #3
  %call19.i2583 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2581) #3
  br label %do_cmp_and_jump.exit2585

if.else.i2584:                                    ; preds = %land.lhs.true.i2580, %if.end1220
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %op1.addr.1, %struct.rtx_def* %211, i32 107, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call1231) #3
  br label %do_cmp_and_jump.exit2585

do_cmp_and_jump.exit2585:                         ; preds = %if.then.i2582, %if.else.i2584
  %213 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  br i1 %cmp.i2577, label %land.lhs.true.i2591, label %if.else.i2595

land.lhs.true.i2591:                              ; preds = %do_cmp_and_jump.exit2585
  %call.i2589 = tail call i32 @can_compare_p(i32 105, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2590 = icmp eq i32 %call.i2589, 0
  br i1 %tobool.i2590, label %if.then.i2593, label %if.else.i2595

if.then.i2593:                                    ; preds = %land.lhs.true.i2591
  %call1.i2592 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call1229, %struct.rtx_def* %213, %struct.rtx_def* %call1.i2592, %struct.rtx_def* %call1230) #3
  %call19.i2594 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2592) #3
  br label %do_cmp_and_jump.exit2596

if.else.i2595:                                    ; preds = %land.lhs.true.i2591, %do_cmp_and_jump.exit2585
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call1229, %struct.rtx_def* %213, i32 105, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call1230) #3
  br label %do_cmp_and_jump.exit2596

do_cmp_and_jump.exit2596:                         ; preds = %if.then.i2593, %if.else.i2595
  %214 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %call1235 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %214, %struct.rtx_def* %call1229, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1228, i32 0, i32 3) #3
  %cmp1236 = icmp eq %struct.rtx_def* %call1235, %call1228
  br i1 %cmp1236, label %if.end1240, label %if.then1238

if.then1238:                                      ; preds = %do_cmp_and_jump.exit2596
  %call1239 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1228, %struct.rtx_def* %call1235) #3
  br label %if.end1240

if.end1240:                                       ; preds = %do_cmp_and_jump.exit2596, %if.then1238
  %call1241 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call1234) #3
  %call1242 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call1241) #3
  %call1243 = tail call %struct.rtx_def* @emit_barrier() #3
  %call1244 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1230) #3
  %215 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %216 = getelementptr inbounds %struct.rtx_def* %call1229, i64 0, i32 0
  %bf.load.i2597 = load i32* %216, align 8
  %bf.lshr.i2598 = lshr i32 %bf.load.i2597, 16
  %bf.clear.i2599 = and i32 %bf.lshr.i2598, 255
  %217 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call.i2600 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2599, %struct.optab* %217, %struct.rtx_def* %call1229, %struct.rtx_def* %215, %struct.rtx_def* %call1229, i32 0, i32 3) #3
  %cmp.i2601 = icmp eq %struct.rtx_def* %call.i2600, %call1229
  br i1 %cmp.i2601, label %expand_dec.exit2604, label %if.then.i2603

if.then.i2603:                                    ; preds = %if.end1240
  %call1.i2602 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1229, %struct.rtx_def* %call.i2600) #3
  br label %expand_dec.exit2604

expand_dec.exit2604:                              ; preds = %if.end1240, %if.then.i2603
  %call1245 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call1233) #3
  %call1246 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call1245) #3
  %call1247 = tail call %struct.rtx_def* @emit_barrier() #3
  %call1248 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1231) #3
  %218 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  br i1 %cmp.i2577, label %land.lhs.true.i2610, label %if.else.i2614

land.lhs.true.i2610:                              ; preds = %expand_dec.exit2604
  %call.i2608 = tail call i32 @can_compare_p(i32 107, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2609 = icmp eq i32 %call.i2608, 0
  br i1 %tobool.i2609, label %if.then.i2612, label %if.else.i2614

if.then.i2612:                                    ; preds = %land.lhs.true.i2610
  %call1.i2611 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %218, %struct.rtx_def* %call1229, %struct.rtx_def* %call1.i2611, %struct.rtx_def* %call1232) #3
  %call19.i2613 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2611) #3
  br label %do_cmp_and_jump.exit2615

if.else.i2614:                                    ; preds = %land.lhs.true.i2610, %expand_dec.exit2604
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %call1229, %struct.rtx_def* %218, i32 107, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call1232) #3
  br label %do_cmp_and_jump.exit2615

do_cmp_and_jump.exit2615:                         ; preds = %if.then.i2612, %if.else.i2614
  %219 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %call1249 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %219, %struct.rtx_def* %call1229, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1228, i32 0, i32 3) #3
  %cmp1250 = icmp eq %struct.rtx_def* %call1249, %call1228
  br i1 %cmp1250, label %if.end1254, label %if.then1252

if.then1252:                                      ; preds = %do_cmp_and_jump.exit2615
  %call1253 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1228, %struct.rtx_def* %call1249) #3
  br label %if.end1254

if.end1254:                                       ; preds = %do_cmp_and_jump.exit2615, %if.then1252
  %call1255 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %call1234) #3
  %call1256 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call1255) #3
  %call1257 = tail call %struct.rtx_def* @emit_barrier() #3
  %call1258 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1232) #3
  %220 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %bf.load.i2616 = load i32* %216, align 8
  %bf.lshr.i2617 = lshr i32 %bf.load.i2616, 16
  %bf.clear.i2618 = and i32 %bf.lshr.i2617, 255
  %221 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2619 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2618, %struct.optab* %221, %struct.rtx_def* %call1229, %struct.rtx_def* %220, %struct.rtx_def* %call1229, i32 0, i32 3) #3
  %cmp.i2620 = icmp eq %struct.rtx_def* %call.i2619, %call1229
  br i1 %cmp.i2620, label %expand_inc.exit2623, label %if.then.i2622

if.then.i2622:                                    ; preds = %if.end1254
  %call1.i2621 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1229, %struct.rtx_def* %call.i2619) #3
  br label %expand_inc.exit2623

expand_inc.exit2623:                              ; preds = %if.end1254, %if.then.i2622
  %call1259 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1233) #3
  %222 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %call1260 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %222, %struct.rtx_def* %call1229, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1228, i32 0, i32 3) #3
  %cmp1261 = icmp eq %struct.rtx_def* %call1260, %call1228
  br i1 %cmp1261, label %if.end1265, label %if.then1263

if.then1263:                                      ; preds = %expand_inc.exit2623
  %call1264 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1228, %struct.rtx_def* %call1260) #3
  br label %if.end1265

if.end1265:                                       ; preds = %expand_inc.exit2623, %if.then1263
  %223 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %224 = getelementptr inbounds %struct.rtx_def* %call1228, i64 0, i32 0
  %bf.load.i2624 = load i32* %224, align 8
  %bf.lshr.i2625 = lshr i32 %bf.load.i2624, 16
  %bf.clear.i2626 = and i32 %bf.lshr.i2625, 255
  %225 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2627 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2626, %struct.optab* %225, %struct.rtx_def* %call1228, %struct.rtx_def* %223, %struct.rtx_def* %call1228, i32 0, i32 3) #3
  %cmp.i2628 = icmp eq %struct.rtx_def* %call.i2627, %call1228
  br i1 %cmp.i2628, label %expand_inc.exit2631, label %if.then.i2630

if.then.i2630:                                    ; preds = %if.end1265
  %call1.i2629 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call1228, %struct.rtx_def* %call.i2627) #3
  br label %expand_inc.exit2631

expand_inc.exit2631:                              ; preds = %if.end1265, %if.then.i2630
  %call1266 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1234) #3
  br label %if.end1356

sw.bb1268:                                        ; preds = %if.then296
  %cmp1271 = icmp ult i16 %27, 65
  %or.cond1464 = and i1 %tobool272, %cmp1271
  br i1 %or.cond1464, label %if.then1273, label %if.then1359

if.then1273:                                      ; preds = %sw.bb1268
  %rtwint1277 = getelementptr inbounds %struct.rtx_def* %op1.addr.1, i64 0, i32 1, i64 0, i32 0
  %226 = load i64* %rtwint1277, align 8, !tbaa !20
  %sub1281 = sub nsw i64 0, %226
  %and1282 = and i64 %226, %sub1281
  %call1283 = tail call i32 @floor_log2_wide(i64 %and1282) #3
  %sh_prom1284 = zext i32 %call1283 to i64
  %shr1285 = ashr i64 %226, %sh_prom1284
  %cmp.i2632 = icmp eq i16 %27, 64
  br i1 %cmp.i2632, label %while.body.lr.ph.i, label %cond.end.i

cond.end.i:                                       ; preds = %if.then1273
  %sh_prom.i = zext i16 %27 to i64
  %shl.i = shl i64 1, %sh_prom.i
  %sub.i = add i64 %shl.i, -1
  %cmp110.i = icmp ugt i16 %27, 3
  br i1 %cmp110.i, label %while.body.lr.ph.i, label %invert_mod2n.exit

while.body.lr.ph.i:                               ; preds = %cond.end.i, %if.then1273
  %cond14.i = phi i64 [ %sub.i, %cond.end.i ], [ -1, %if.then1273 ]
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %nbit.012.i = phi i32 [ 3, %while.body.lr.ph.i ], [ %mul4.i, %while.body.i ]
  %y.011.i = phi i64 [ %shr1285, %while.body.lr.ph.i ], [ %and.i, %while.body.i ]
  %mul.i = mul i64 %y.011.i, %shr1285
  %sub2.i = sub i64 2, %mul.i
  %mul3.i = mul i64 %sub2.i, %y.011.i
  %and.i = and i64 %mul3.i, %cond14.i
  %mul4.i = shl nsw i32 %nbit.012.i, 1
  %cmp1.i = icmp slt i32 %mul4.i, %conv172
  br i1 %cmp1.i, label %while.body.i, label %invert_mod2n.exit

invert_mod2n.exit:                                ; preds = %while.body.i, %cond.end.i
  %y.0.lcssa.i = phi i64 [ %shr1285, %cond.end.i ], [ %and.i, %while.body.i ]
  %conv1287 = sext i32 %call1283 to i64
  %call1288 = tail call %union.tree_node* @build_int_2_wide(i64 %conv1287, i64 0) #3
  %call1289 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %union.tree_node* %call1288, %struct.rtx_def* null, i32 %unsignedp)
  %call1290 = tail call i64 @trunc_int_for_mode(i64 %y.0.lcssa.i, i32 %mode.compute_mode.2) #3
  %call1291 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %call1290) #3
  %call1292 = tail call %struct.rtx_def* @expand_mult(i32 %mode.compute_mode.2, %struct.rtx_def* %call1289, %struct.rtx_def* %call1291, %struct.rtx_def* null, i32 0)
  %call1293 = tail call %struct.rtx_def* @get_last_insn() #3
  %cond1295 = select i1 %tobool24, i32 81, i32 79
  %call1296 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 %cond1295, i32 %mode.compute_mode.2, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1) #3
  %call1297 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %call1293, i32 4, %struct.rtx_def* %call1296) #3
  br label %if.end1356

sw.bb1299:                                        ; preds = %if.then296, %if.then296
  %call1304 = tail call %struct.rtx_def* @gen_label_rtx() #3
  %call1305 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %call1306 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  br i1 %tobool24, label %if.then1301, label %if.else1320

if.then1301:                                      ; preds = %sw.bb1299
  %227 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 14), align 8, !tbaa !4
  %call1307 = tail call i32 @expand_twoval_binop(%struct.optab* %227, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1305, %struct.rtx_def* %call1306, i32 1) #3
  %cmp1308 = icmp eq i32 %call1307, 0
  br i1 %cmp1308, label %if.then1310, label %if.end1315

if.then1310:                                      ; preds = %if.then1301
  %228 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 13), align 8, !tbaa !4
  %call1312 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %228, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1305, i32 1, i32 3) #3
  %call1313 = tail call %struct.rtx_def* @expand_mult(i32 %mode.compute_mode.2, %struct.rtx_def* %call1312, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* null, i32 1)
  %229 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call1314 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %229, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call1313, %struct.rtx_def* %call1306, i32 1, i32 3) #3
  br label %if.end1315

if.end1315:                                       ; preds = %if.then1310, %if.then1301
  %remainder.7 = phi %struct.rtx_def* [ %call1314, %if.then1310 ], [ %call1306, %if.then1301 ]
  %quotient.8 = phi %struct.rtx_def* [ %call1312, %if.then1310 ], [ %call1305, %if.then1301 ]
  %call1316 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %op1.addr.1, i64 -1) #3
  %call1317 = tail call %union.tree_node* @build_int_2_wide(i64 1, i64 0) #3
  %call1318 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.compute_mode.2, %struct.rtx_def* %call1316, %union.tree_node* %call1317, %struct.rtx_def* null, i32 1)
  %arrayidx.i2634 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom170
  %230 = load i32* %arrayidx.i2634, align 4, !tbaa !1
  %cmp.i2635 = icmp eq i32 %230, 1
  br i1 %cmp.i2635, label %land.lhs.true.i2638, label %if.else.i2642

land.lhs.true.i2638:                              ; preds = %if.end1315
  %call.i2636 = tail call i32 @can_compare_p(i32 110, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2637 = icmp eq i32 %call.i2636, 0
  br i1 %tobool.i2637, label %if.then.i2640, label %if.else.i2642

if.then.i2640:                                    ; preds = %land.lhs.true.i2638
  %call1.i2639 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 1, %struct.rtx_def* %remainder.7, %struct.rtx_def* %call1318, %struct.rtx_def* %call1304, %struct.rtx_def* %call1.i2639) #3
  %call19.i2641 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2639) #3
  br label %do_cmp_and_jump.exit2643

if.else.i2642:                                    ; preds = %land.lhs.true.i2638, %if.end1315
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %remainder.7, %struct.rtx_def* %call1318, i32 110, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call1304) #3
  br label %do_cmp_and_jump.exit2643

do_cmp_and_jump.exit2643:                         ; preds = %if.then.i2640, %if.else.i2642
  %231 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %232 = getelementptr inbounds %struct.rtx_def* %quotient.8, i64 0, i32 0
  %bf.load.i2644 = load i32* %232, align 8
  %bf.lshr.i2645 = lshr i32 %bf.load.i2644, 16
  %bf.clear.i2646 = and i32 %bf.lshr.i2645, 255
  %233 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2647 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2646, %struct.optab* %233, %struct.rtx_def* %quotient.8, %struct.rtx_def* %231, %struct.rtx_def* %quotient.8, i32 0, i32 3) #3
  %cmp.i2648 = icmp eq %struct.rtx_def* %call.i2647, %quotient.8
  br i1 %cmp.i2648, label %expand_inc.exit2651, label %if.then.i2650

if.then.i2650:                                    ; preds = %do_cmp_and_jump.exit2643
  %call1.i2649 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %quotient.8, %struct.rtx_def* %call.i2647) #3
  br label %expand_inc.exit2651

expand_inc.exit2651:                              ; preds = %do_cmp_and_jump.exit2643, %if.then.i2650
  %234 = getelementptr inbounds %struct.rtx_def* %remainder.7, i64 0, i32 0
  %bf.load.i2652 = load i32* %234, align 8
  %bf.lshr.i2653 = lshr i32 %bf.load.i2652, 16
  %bf.clear.i2654 = and i32 %bf.lshr.i2653, 255
  %235 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call.i2655 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2654, %struct.optab* %235, %struct.rtx_def* %remainder.7, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %remainder.7, i32 0, i32 3) #3
  %cmp.i2656 = icmp eq %struct.rtx_def* %call.i2655, %remainder.7
  br i1 %cmp.i2656, label %expand_dec.exit2659, label %if.then.i2658

if.then.i2658:                                    ; preds = %expand_inc.exit2651
  %call1.i2657 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %remainder.7, %struct.rtx_def* %call.i2655) #3
  br label %expand_dec.exit2659

expand_dec.exit2659:                              ; preds = %expand_inc.exit2651, %if.then.i2658
  %call1319 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1304) #3
  br label %if.end1349

if.else1320:                                      ; preds = %sw.bb1299
  %236 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 12), align 8, !tbaa !4
  %call1326 = tail call i32 @expand_twoval_binop(%struct.optab* %236, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1305, %struct.rtx_def* %call1306, i32 0) #3
  %cmp1327 = icmp eq i32 %call1326, 0
  br i1 %cmp1327, label %if.then1329, label %if.end1334

if.then1329:                                      ; preds = %if.else1320
  %237 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %call1331 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %237, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %call1305, i32 0, i32 3) #3
  %call1332 = tail call %struct.rtx_def* @expand_mult(i32 %mode.compute_mode.2, %struct.rtx_def* %call1331, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* null, i32 0)
  %238 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call1333 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %238, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call1332, %struct.rtx_def* %call1306, i32 0, i32 3) #3
  br label %if.end1334

if.end1334:                                       ; preds = %if.then1329, %if.else1320
  %remainder.8 = phi %struct.rtx_def* [ %call1333, %if.then1329 ], [ %call1306, %if.else1320 ]
  %quotient.9 = phi %struct.rtx_def* [ %call1331, %if.then1329 ], [ %call1305, %if.else1320 ]
  %call1335 = tail call %struct.rtx_def* @expand_abs(i32 %mode.compute_mode.2, %struct.rtx_def* %remainder.8, %struct.rtx_def* null, i32 1, i32 0) #3
  %call1336 = tail call %struct.rtx_def* @expand_abs(i32 %mode.compute_mode.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* null, i32 1, i32 0) #3
  %call1337 = tail call %union.tree_node* @build_int_2_wide(i64 1, i64 0) #3
  %call.i2660 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call1337, %struct.rtx_def* null, i32 0, i32 0) #3
  %239 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2661 = icmp eq %struct.rtx_def* %call.i2660, %239
  br i1 %cmp7.i2661, label %expand_shift.exit2680, label %for.body.i2667

for.body.i2667:                                   ; preds = %if.end1334, %land.lhs.true94.i
  %try.0189.i2666 = phi i32 [ %inc.i2673, %land.lhs.true94.i ], [ 0, %if.end1334 ]
  switch i32 %try.0189.i2666, label %if.else14.i2669 [
    i32 0, label %if.else79.i2671
    i32 1, label %if.then13.i2668
  ]

if.then13.i2668:                                  ; preds = %for.body.i2667
  br label %if.else79.i2671

if.else14.i2669:                                  ; preds = %for.body.i2667
  br label %if.else79.i2671

if.else79.i2671:                                  ; preds = %if.else14.i2669, %if.then13.i2668, %for.body.i2667
  %methods.0.i2670 = phi i32 [ 2, %if.then13.i2668 ], [ 3, %if.else14.i2669 ], [ 0, %for.body.i2667 ]
  %240 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call87.i = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %240, %struct.rtx_def* %call1335, %struct.rtx_def* %call.i2660, %struct.rtx_def* null, i32 1, i32 %methods.0.i2670) #3
  %cmp90.i = icmp eq %struct.rtx_def* %call87.i, null
  br i1 %cmp90.i, label %land.lhs.true94.i, label %expand_shift.exit2680

land.lhs.true94.i:                                ; preds = %if.else79.i2671
  %inc.i2673 = add nsw i32 %try.0189.i2666, 1
  %cmp9.i2675 = icmp slt i32 %inc.i2673, 3
  br i1 %cmp9.i2675, label %for.body.i2667, label %for.end.i2677

for.end.i2677:                                    ; preds = %land.lhs.true94.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2680:                            ; preds = %if.else79.i2671, %if.end1334
  %retval.0.i2679 = phi %struct.rtx_def* [ %call1335, %if.end1334 ], [ %call87.i, %if.else79.i2671 ]
  %arrayidx.i2682 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom170
  %241 = load i32* %arrayidx.i2682, align 4, !tbaa !1
  %cmp.i2683 = icmp eq i32 %241, 1
  br i1 %cmp.i2683, label %land.lhs.true.i2686, label %if.else.i2690

land.lhs.true.i2686:                              ; preds = %expand_shift.exit2680
  %call.i2684 = tail call i32 @can_compare_p(i32 111, i32 %mode.compute_mode.2, i32 0) #3
  %tobool.i2685 = icmp eq i32 %call.i2684, 0
  br i1 %tobool.i2685, label %if.then.i2688, label %if.else.i2690

if.then.i2688:                                    ; preds = %land.lhs.true.i2686
  %call1.i2687 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode.compute_mode.2, i32 1, %struct.rtx_def* %call1336, %struct.rtx_def* %retval.0.i2679, %struct.rtx_def* %call1.i2687, %struct.rtx_def* %call1304) #3
  %call19.i2689 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1.i2687) #3
  br label %do_cmp_and_jump.exit2691

if.else.i2690:                                    ; preds = %land.lhs.true.i2686, %expand_shift.exit2680
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %retval.0.i2679, %struct.rtx_def* %call1336, i32 111, %struct.rtx_def* null, i32 %mode.compute_mode.2, i32 0, %struct.rtx_def* %call1304) #3
  br label %do_cmp_and_jump.exit2691

do_cmp_and_jump.exit2691:                         ; preds = %if.then.i2688, %if.else.i2690
  %242 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !4
  %call1339 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %242, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* null, i32 0, i32 2) #3
  %sub1340 = add nsw i32 %conv172, -1
  %conv1341 = sext i32 %sub1340 to i64
  %call1342 = tail call %union.tree_node* @build_int_2_wide(i64 %conv1341, i64 0) #3
  %call.i2692 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call1342, %struct.rtx_def* null, i32 0, i32 0) #3
  %243 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i2693 = icmp eq %struct.rtx_def* %call.i2692, %243
  br i1 %cmp7.i2693, label %expand_shift.exit2714, label %for.body.i2699

for.body.i2699:                                   ; preds = %do_cmp_and_jump.exit2691, %if.else79.i2703
  %try.0189.i2698 = phi i32 [ %inc.i2707, %if.else79.i2703 ], [ 0, %do_cmp_and_jump.exit2691 ]
  switch i32 %try.0189.i2698, label %if.else14.i2701 [
    i32 0, label %if.else79.i2703
    i32 1, label %if.then13.i2700
  ]

if.then13.i2700:                                  ; preds = %for.body.i2699
  br label %if.else79.i2703

if.else14.i2701:                                  ; preds = %for.body.i2699
  br label %if.else79.i2703

if.else79.i2703:                                  ; preds = %if.else14.i2701, %if.then13.i2700, %for.body.i2699
  %methods.0.i2702 = phi i32 [ 2, %if.then13.i2700 ], [ 3, %if.else14.i2701 ], [ 0, %for.body.i2699 ]
  %244 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i2706 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %244, %struct.rtx_def* %call1339, %struct.rtx_def* %call.i2692, %struct.rtx_def* null, i32 0, i32 %methods.0.i2702) #3
  %inc.i2707 = add nsw i32 %try.0189.i2698, 1
  %cmp8.i2708 = icmp eq %struct.rtx_def* %call109.i2706, null
  %cmp9.i2709 = icmp slt i32 %inc.i2707, 3
  %or.cond116.i2710 = and i1 %cmp8.i2708, %cmp9.i2709
  br i1 %or.cond116.i2710, label %for.body.i2699, label %for.end.i2711

for.end.i2711:                                    ; preds = %if.else79.i2703
  br i1 %cmp8.i2708, label %if.then113.i2712, label %expand_shift.exit2714

if.then113.i2712:                                 ; preds = %for.end.i2711
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit2714:                            ; preds = %do_cmp_and_jump.exit2691, %for.end.i2711
  %retval.0.i2713 = phi %struct.rtx_def* [ %call1339, %do_cmp_and_jump.exit2691 ], [ %call109.i2706, %for.end.i2711 ]
  %245 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !4
  %246 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %call1344 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %245, %struct.rtx_def* %retval.0.i2713, %struct.rtx_def* %246, %struct.rtx_def* null, i32 0, i32 2) #3
  %247 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call1345 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %247, %struct.rtx_def* %call1344, %struct.rtx_def* %retval.0.i2713, %struct.rtx_def* null, i32 0, i32 2) #3
  %248 = getelementptr inbounds %struct.rtx_def* %quotient.9, i64 0, i32 0
  %bf.load.i2715 = load i32* %248, align 8
  %bf.lshr.i2716 = lshr i32 %bf.load.i2715, 16
  %bf.clear.i2717 = and i32 %bf.lshr.i2716, 255
  %249 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 0), align 8, !tbaa !4
  %call.i2718 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2717, %struct.optab* %249, %struct.rtx_def* %quotient.9, %struct.rtx_def* %call1345, %struct.rtx_def* %quotient.9, i32 0, i32 3) #3
  %cmp.i2719 = icmp eq %struct.rtx_def* %call.i2718, %quotient.9
  br i1 %cmp.i2719, label %expand_inc.exit2722, label %if.then.i2721

if.then.i2721:                                    ; preds = %expand_shift.exit2714
  %call1.i2720 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %quotient.9, %struct.rtx_def* %call.i2718) #3
  br label %expand_inc.exit2722

expand_inc.exit2722:                              ; preds = %expand_shift.exit2714, %if.then.i2721
  %250 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !4
  %call1346 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %250, %struct.rtx_def* %retval.0.i2713, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* null, i32 0, i32 2) #3
  %251 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call1347 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %251, %struct.rtx_def* %call1346, %struct.rtx_def* %retval.0.i2713, %struct.rtx_def* null, i32 0, i32 2) #3
  %252 = getelementptr inbounds %struct.rtx_def* %remainder.8, i64 0, i32 0
  %bf.load.i2723 = load i32* %252, align 8
  %bf.lshr.i2724 = lshr i32 %bf.load.i2723, 16
  %bf.clear.i2725 = and i32 %bf.lshr.i2724, 255
  %253 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call.i2726 = tail call %struct.rtx_def* @expand_binop(i32 %bf.clear.i2725, %struct.optab* %253, %struct.rtx_def* %remainder.8, %struct.rtx_def* %call1347, %struct.rtx_def* %remainder.8, i32 0, i32 3) #3
  %cmp.i2727 = icmp eq %struct.rtx_def* %call.i2726, %remainder.8
  br i1 %cmp.i2727, label %expand_dec.exit2730, label %if.then.i2729

if.then.i2729:                                    ; preds = %expand_inc.exit2722
  %call1.i2728 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %remainder.8, %struct.rtx_def* %call.i2726) #3
  br label %expand_dec.exit2730

expand_dec.exit2730:                              ; preds = %expand_inc.exit2722, %if.then.i2729
  %call1348 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1304) #3
  br label %if.end1349

if.end1349:                                       ; preds = %expand_dec.exit2730, %expand_dec.exit2659
  %remainder.9 = phi %struct.rtx_def* [ %remainder.7, %expand_dec.exit2659 ], [ %remainder.8, %expand_dec.exit2730 ]
  %quotient.10 = phi %struct.rtx_def* [ %quotient.8, %expand_dec.exit2659 ], [ %quotient.9, %expand_dec.exit2730 ]
  %cond1354 = select i1 %tobool175, %struct.rtx_def* %remainder.9, %struct.rtx_def* %quotient.10
  %call1355 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %cond1354) #3
  br label %return

sw.default:                                       ; preds = %if.then296
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 3938, i8* getelementptr inbounds ([14 x i8]* @__FUNCTION__.expand_divmod, i64 0, i64 0)) #4
  unreachable

if.end1356:                                       ; preds = %land.lhs.true767, %land.lhs.true431, %cond.end458, %if.end427, %cond.end795, %if.end763, %expand_dec.exit2477, %land.lhs.true799, %if.then805, %land.lhs.true462, %if.then468, %if.else1051, %expand_inc.exit2485, %if.else1166, %expand_inc.exit2547, %expand_inc.exit2631, %expand_inc.exit2517, %invert_mod2n.exit
  %remainder.10 = phi %struct.rtx_def* [ null, %invert_mod2n.exit ], [ null, %expand_inc.exit2485 ], [ null, %if.else1051 ], [ %remainder.5, %expand_inc.exit2517 ], [ null, %expand_inc.exit2547 ], [ null, %if.else1166 ], [ %remainder.6, %expand_inc.exit2631 ], [ %remainder.4, %expand_dec.exit2477 ], [ null, %if.then468 ], [ null, %land.lhs.true462 ], [ null, %cond.end458 ], [ null, %if.end427 ], [ null, %if.then805 ], [ null, %land.lhs.true799 ], [ null, %cond.end795 ], [ null, %if.end763 ], [ null, %land.lhs.true431 ], [ null, %land.lhs.true767 ]
  %quotient.11 = phi %struct.rtx_def* [ %call1292, %invert_mod2n.exit ], [ %call1040, %expand_inc.exit2485 ], [ %call1053, %if.else1051 ], [ %call1108, %expand_inc.exit2517 ], [ %retval.0.i2538, %expand_inc.exit2547 ], [ %call1168, %if.else1166 ], [ %call1228, %expand_inc.exit2631 ], [ %call975, %expand_dec.exit2477 ], [ %quotient.0, %if.then468 ], [ %quotient.0, %land.lhs.true462 ], [ %quotient.0, %cond.end458 ], [ %quotient.0, %if.end427 ], [ %quotient.2, %if.then805 ], [ %quotient.2, %land.lhs.true799 ], [ %quotient.2, %cond.end795 ], [ %quotient.2, %if.end763 ], [ %quotient.0, %land.lhs.true431 ], [ %quotient.2, %land.lhs.true767 ]
  %target.addr.4 = phi %struct.rtx_def* [ %target.addr.0, %invert_mod2n.exit ], [ %target.addr.0, %expand_inc.exit2485 ], [ %target.addr.0, %if.else1051 ], [ %target.addr.2, %expand_inc.exit2517 ], [ %target.addr.0, %expand_inc.exit2547 ], [ %target.addr.0, %if.else1166 ], [ %target.addr.3, %expand_inc.exit2631 ], [ %target.addr.1, %expand_dec.exit2477 ], [ %target.addr.0, %if.then468 ], [ %target.addr.0, %land.lhs.true462 ], [ %target.addr.0, %cond.end458 ], [ %target.addr.0, %if.end427 ], [ %target.addr.0, %if.then805 ], [ %target.addr.0, %land.lhs.true799 ], [ %target.addr.0, %cond.end795 ], [ %target.addr.0, %if.end763 ], [ %target.addr.0, %land.lhs.true431 ], [ %target.addr.0, %land.lhs.true767 ]
  %op1.addr.4 = phi %struct.rtx_def* [ %op1.addr.1, %invert_mod2n.exit ], [ %op1.addr.1, %expand_inc.exit2485 ], [ %op1.addr.1, %if.else1051 ], [ %op1.addr.1, %expand_inc.exit2517 ], [ %op1.addr.1, %expand_inc.exit2547 ], [ %op1.addr.1, %if.else1166 ], [ %op1.addr.1, %expand_inc.exit2631 ], [ %op1.addr.1, %expand_dec.exit2477 ], [ %op1.addr.1, %if.then468 ], [ %op1.addr.1, %land.lhs.true462 ], [ %op1.addr.1, %cond.end458 ], [ %op1.addr.1, %if.end427 ], [ %op1.addr.2, %if.then805 ], [ %op1.addr.2, %land.lhs.true799 ], [ %op1.addr.2, %cond.end795 ], [ %op1.addr.2, %if.end763 ], [ %op1.addr.1, %land.lhs.true431 ], [ %op1.addr.2, %land.lhs.true767 ]
  %cmp1357 = icmp eq %struct.rtx_def* %quotient.11, null
  br i1 %cmp1357, label %if.then1359, label %if.end1429

if.then1359:                                      ; preds = %if.end293, %if.else644, %if.else323, %fail1, %sw.bb1268, %if.end1356
  %op1.addr.42742 = phi %struct.rtx_def* [ %op1.addr.4, %if.end1356 ], [ %op1.addr.1, %sw.bb1268 ], [ %op1.addr.3, %fail1 ], [ %op1.addr.1, %if.else323 ], [ %op1.addr.2, %if.else644 ], [ %op1.addr.1, %if.end293 ]
  %target.addr.42741 = phi %struct.rtx_def* [ %target.addr.4, %if.end1356 ], [ %target.addr.0, %sw.bb1268 ], [ %target.addr.0, %fail1 ], [ %target.addr.0, %if.else323 ], [ %target.addr.0, %if.else644 ], [ %target.addr.0, %if.end293 ]
  %remainder.102740 = phi %struct.rtx_def* [ %remainder.10, %if.end1356 ], [ null, %sw.bb1268 ], [ null, %fail1 ], [ null, %if.else323 ], [ null, %if.else644 ], [ null, %if.end293 ]
  %tobool1360 = icmp eq %struct.rtx_def* %target.addr.42741, null
  br i1 %tobool1360, label %if.end1368, label %land.lhs.true1361

land.lhs.true1361:                                ; preds = %if.then1359
  %254 = getelementptr inbounds %struct.rtx_def* %target.addr.42741, i64 0, i32 0
  %bf.load1362 = load i32* %254, align 8
  %bf.lshr1363 = lshr i32 %bf.load1362, 16
  %bf.clear1364 = and i32 %bf.lshr1363, 255
  %cmp1365 = icmp eq i32 %bf.clear1364, %mode.compute_mode.2
  %target.addr.4. = select i1 %cmp1365, %struct.rtx_def* %target.addr.42741, %struct.rtx_def* null
  br label %if.end1368

if.end1368:                                       ; preds = %land.lhs.true1361, %if.then1359
  %target.addr.5 = phi %struct.rtx_def* [ null, %if.then1359 ], [ %target.addr.4., %land.lhs.true1361 ]
  br i1 %tobool175, label %if.then1370, label %if.end1368.if.end1397_crit_edge

if.end1368.if.end1397_crit_edge:                  ; preds = %if.end1368
  %insn_code1406.pre = getelementptr inbounds %struct.optab* %cond112, i64 0, i32 1, i64 %idxprom170, i32 0
  br label %if.end1397

if.then1370:                                      ; preds = %if.end1368
  %255 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 16), align 8, !tbaa !4
  %256 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 15), align 8, !tbaa !4
  %insn_code1374 = getelementptr inbounds %struct.optab* %cond112, i64 0, i32 1, i64 %idxprom170, i32 0
  %257 = load i32* %insn_code1374, align 4, !tbaa !12
  %cmp1375 = icmp ne i32 %257, 1317
  %cond1377 = select i1 %cmp1375, i32 0, i32 2
  %call1378 = tail call %struct.rtx_def* @sign_expand_binop(i32 %mode.compute_mode.2, %struct.optab* %255, %struct.optab* %256, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.42742, %struct.rtx_def* %target.addr.5, i32 %unsignedp, i32 %cond1377) #3
  %cmp1379 = icmp eq %struct.rtx_def* %call1378, null
  br i1 %cmp1379, label %if.then1381, label %if.then1394

if.then1381:                                      ; preds = %if.then1370
  %call1382 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %258 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 14), align 8, !tbaa !4
  %259 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 12), align 8, !tbaa !4
  %cond1387 = select i1 %tobool24, %struct.optab* %258, %struct.optab* %259
  %call1388 = tail call i32 @expand_twoval_binop(%struct.optab* %cond1387, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.42742, %struct.rtx_def* null, %struct.rtx_def* %call1382, i32 %unsignedp) #3
  %tobool1389 = icmp eq i32 %call1388, 0
  %tobool1393 = icmp eq %struct.rtx_def* %call1382, null
  %or.cond2751 = or i1 %tobool1389, %tobool1393
  br i1 %or.cond2751, label %if.end1397, label %if.then1394

if.then1394:                                      ; preds = %if.then1381, %if.then1370
  %remainder.112750 = phi %struct.rtx_def* [ %call1378, %if.then1370 ], [ %call1382, %if.then1381 ]
  %call1395 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %remainder.112750) #3
  br label %return

if.end1397:                                       ; preds = %if.end1368.if.end1397_crit_edge, %if.then1381
  %insn_code1406.pre-phi = phi i32* [ %insn_code1406.pre, %if.end1368.if.end1397_crit_edge ], [ %insn_code1374, %if.then1381 ]
  %remainder.12 = phi %struct.rtx_def* [ %remainder.102740, %if.end1368.if.end1397_crit_edge ], [ null, %if.then1381 ]
  %260 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 13), align 8, !tbaa !4
  %261 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %cond1402 = select i1 %tobool175, %struct.rtx_def* null, %struct.rtx_def* %target.addr.5
  %262 = load i32* %insn_code1406.pre-phi, align 4, !tbaa !12
  %cmp1407 = icmp ne i32 %262, 1317
  %cond1409 = select i1 %cmp1407, i32 0, i32 2
  %call1410 = tail call %struct.rtx_def* @sign_expand_binop(i32 %mode.compute_mode.2, %struct.optab* %260, %struct.optab* %261, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.42742, %struct.rtx_def* %cond1402, i32 %unsignedp, i32 %cond1409) #3
  %cmp1411 = icmp eq %struct.rtx_def* %call1410, null
  br i1 %cmp1411, label %if.then1413, label %if.end1429

if.then1413:                                      ; preds = %if.end1397
  %call1414 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %mode.compute_mode.2) #3
  %263 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 14), align 8, !tbaa !4
  %264 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 12), align 8, !tbaa !4
  %cond1419 = select i1 %tobool24, %struct.optab* %263, %struct.optab* %264
  %call1420 = tail call i32 @expand_twoval_binop(%struct.optab* %cond1419, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.42742, %struct.rtx_def* %call1414, %struct.rtx_def* null, i32 %unsignedp) #3
  %tobool1421.not = icmp ne i32 %call1420, 0
  %265 = or i32 %call1420, %rem_flag
  %266 = icmp eq i32 %265, 0
  %call1414.mux = select i1 %tobool1421.not, %struct.rtx_def* %call1414, %struct.rtx_def* null
  br i1 %266, label %if.then1424, label %if.end1429

if.then1424:                                      ; preds = %if.then1413
  %267 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 13), align 8, !tbaa !4
  %268 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 10), align 8, !tbaa !4
  %call1425 = tail call %struct.rtx_def* @sign_expand_binop(i32 %mode.compute_mode.2, %struct.optab* %267, %struct.optab* %268, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.42742, %struct.rtx_def* %target.addr.5, i32 %unsignedp, i32 3) #3
  br label %if.end1429

if.end1429:                                       ; preds = %if.then1413, %for.end.i2347, %if.end920, %if.end1397, %if.then1424, %if.end1356
  %op1.addr.42743 = phi %struct.rtx_def* [ %op1.addr.42742, %if.then1413 ], [ %op1.addr.42742, %if.then1424 ], [ %op1.addr.42742, %if.end1397 ], [ %op1.addr.4, %if.end1356 ], [ %op1.addr.1, %if.end920 ], [ %op1.addr.1, %for.end.i2347 ]
  %remainder.13 = phi %struct.rtx_def* [ %remainder.12, %if.then1413 ], [ %remainder.12, %if.then1424 ], [ %remainder.12, %if.end1397 ], [ %remainder.10, %if.end1356 ], [ null, %if.end920 ], [ null, %for.end.i2347 ]
  %quotient.12 = phi %struct.rtx_def* [ %call1414.mux, %if.then1413 ], [ %call1425, %if.then1424 ], [ %call1410, %if.end1397 ], [ %quotient.11, %if.end1356 ], [ %quotient.4, %if.end920 ], [ %call109.i2342, %for.end.i2347 ]
  %target.addr.6 = phi %struct.rtx_def* [ %target.addr.5, %if.then1413 ], [ %target.addr.5, %if.then1424 ], [ %target.addr.5, %if.end1397 ], [ %target.addr.4, %if.end1356 ], [ %target.addr.0, %if.end920 ], [ %target.addr.0, %for.end.i2347 ]
  br i1 %tobool175, label %if.then1431, label %if.end1449

if.then1431:                                      ; preds = %if.end1429
  %tobool1432 = icmp eq %struct.rtx_def* %target.addr.6, null
  br i1 %tobool1432, label %if.end1440, label %land.lhs.true1433

land.lhs.true1433:                                ; preds = %if.then1431
  %269 = getelementptr inbounds %struct.rtx_def* %target.addr.6, i64 0, i32 0
  %bf.load1434 = load i32* %269, align 8
  %bf.lshr1435 = lshr i32 %bf.load1434, 16
  %bf.clear1436 = and i32 %bf.lshr1435, 255
  %cmp1437 = icmp eq i32 %bf.clear1436, %mode.compute_mode.2
  %target.addr.6. = select i1 %cmp1437, %struct.rtx_def* %target.addr.6, %struct.rtx_def* null
  br label %if.end1440

if.end1440:                                       ; preds = %land.lhs.true1433, %if.then1431
  %target.addr.7 = phi %struct.rtx_def* [ null, %if.then1431 ], [ %target.addr.6., %land.lhs.true1433 ]
  %cmp1441 = icmp eq %struct.rtx_def* %quotient.12, null
  br i1 %cmp1441, label %if.then1443, label %if.else1445

if.then1443:                                      ; preds = %if.end1440
  %270 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 16), align 8, !tbaa !4
  %271 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 15), align 8, !tbaa !4
  %call1444 = tail call %struct.rtx_def* @sign_expand_binop(i32 %mode.compute_mode.2, %struct.optab* %270, %struct.optab* %271, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %op1.addr.42743, %struct.rtx_def* %target.addr.7, i32 %unsignedp, i32 3) #3
  br label %if.end1449

if.else1445:                                      ; preds = %if.end1440
  %call1446 = tail call %struct.rtx_def* @expand_mult(i32 %mode.compute_mode.2, %struct.rtx_def* %quotient.12, %struct.rtx_def* %op1.addr.42743, %struct.rtx_def* null, i32 %unsignedp)
  %272 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call1447 = tail call %struct.rtx_def* @expand_binop(i32 %mode.compute_mode.2, %struct.optab* %272, %struct.rtx_def* %op0.addr.2, %struct.rtx_def* %call1446, %struct.rtx_def* %target.addr.7, i32 %unsignedp, i32 3) #3
  br label %if.end1449

if.end1449:                                       ; preds = %if.then1443, %if.else1445, %if.end1429
  %remainder.14 = phi %struct.rtx_def* [ %call1444, %if.then1443 ], [ %call1447, %if.else1445 ], [ %remainder.13, %if.end1429 ]
  %cond1454 = select i1 %tobool175, %struct.rtx_def* %remainder.14, %struct.rtx_def* %quotient.12
  %call1455 = tail call %struct.rtx_def* @gen_lowpart(i32 %mode, %struct.rtx_def* %cond1454) #3
  br label %return

return:                                           ; preds = %if.end1449, %if.then1394, %if.end1349, %expand_dec.exit2574, %expand_dec.exit2501, %expand_inc.exit2420, %if.then843, %if.then316, %cond.end38, %if.then29, %if.then
  %retval.0 = phi %struct.rtx_def* [ %cond, %if.then ], [ %call1355, %if.end1349 ], [ %call1395, %if.then1394 ], [ %call1455, %if.end1449 ], [ %call1102, %expand_dec.exit2501 ], [ %call1219, %expand_dec.exit2574 ], [ %call844, %if.then843 ], [ %call972, %expand_inc.exit2420 ], [ %call317, %if.then316 ], [ %6, %if.then29 ], [ %call, %cond.end38 ]
  ret %struct.rtx_def* %retval.0
}

declare i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %target, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %mode, i32 %unsignedp, i32 %normalizep) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %tobool = icmp eq i32 %unsignedp, 0
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %code.tr = phi i32 [ %code, %entry ], [ %code.addr.2, %tailrecurse.backedge ]
  %op0.tr = phi %struct.rtx_def* [ %op0, %entry ], [ %op0.tr.be, %tailrecurse.backedge ]
  %op1.tr = phi %struct.rtx_def* [ %op1, %entry ], [ %op1.addr.1, %tailrecurse.backedge ]
  %mode.tr = phi i32 [ %mode, %entry ], [ %mode.tr.be, %tailrecurse.backedge ]
  %bf.load = load i32* %0, align 8
  %call = tail call %struct.rtx_def* @get_last_insn() #3
  %call1 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0.tr, i32 0) #3
  %call2 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op1.tr, i32 0) #3
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %tailrecurse
  %call3 = tail call i32 @unsigned_condition(i32 %code.tr) #3
  br label %if.end

if.end:                                           ; preds = %tailrecurse, %if.then
  %code.addr.0 = phi i32 [ %call3, %if.then ], [ %code.tr, %tailrecurse ]
  %call4 = tail call i32 @swap_commutative_operands_p(%struct.rtx_def* %call1, %struct.rtx_def* %call2) #3
  %tobool5 = icmp eq i32 %call4, 0
  br i1 %tobool5, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end
  %call7 = tail call i32 @swap_condition(i32 %code.addr.0) #3
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then6
  %op1.addr.0 = phi %struct.rtx_def* [ %call1, %if.then6 ], [ %call2, %if.end ]
  %op0.addr.0 = phi %struct.rtx_def* [ %call2, %if.then6 ], [ %call1, %if.end ]
  %code.addr.1 = phi i32 [ %call7, %if.then6 ], [ %code.addr.0, %if.end ]
  %cmp = icmp eq i32 %mode.tr, 0
  br i1 %cmp, label %if.then9, label %if.end13

if.then9:                                         ; preds = %if.end8
  %1 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load10 = load i32* %1, align 8
  %bf.lshr11 = lshr i32 %bf.load10, 16
  %bf.clear12 = and i32 %bf.lshr11, 255
  br label %if.end13

if.end13:                                         ; preds = %if.then9, %if.end8
  %mode.addr.0 = phi i32 [ %bf.clear12, %if.then9 ], [ %mode.tr, %if.end8 ]
  switch i32 %code.addr.1, label %sw.epilog [
    i32 107, label %sw.bb
    i32 106, label %sw.bb17
    i32 104, label %sw.bb21
    i32 105, label %sw.bb25
    i32 108, label %sw.bb29
    i32 111, label %sw.bb33
  ]

sw.bb:                                            ; preds = %if.end13
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %cmp14 = icmp eq %struct.rtx_def* %op1.addr.0, %2
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %.op1.addr.0 = select i1 %cmp14, %struct.rtx_def* %3, %struct.rtx_def* %op1.addr.0
  %.code.addr.1 = select i1 %cmp14, i32 106, i32 107
  br label %sw.epilog

sw.bb17:                                          ; preds = %if.end13
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !4
  %cmp18 = icmp eq %struct.rtx_def* %op1.addr.0, %4
  %5 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %.op1.addr.0724 = select i1 %cmp18, %struct.rtx_def* %5, %struct.rtx_def* %op1.addr.0
  %.code.addr.1725 = select i1 %cmp18, i32 107, i32 106
  br label %sw.epilog

sw.bb21:                                          ; preds = %if.end13
  %6 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %cmp22 = icmp eq %struct.rtx_def* %op1.addr.0, %6
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %.op1.addr.0726 = select i1 %cmp22, %struct.rtx_def* %7, %struct.rtx_def* %op1.addr.0
  %.code.addr.1727 = select i1 %cmp22, i32 105, i32 104
  br label %sw.epilog

sw.bb25:                                          ; preds = %if.end13
  %8 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !4
  %cmp26 = icmp eq %struct.rtx_def* %op1.addr.0, %8
  %9 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %.op1.addr.0728 = select i1 %cmp26, %struct.rtx_def* %9, %struct.rtx_def* %op1.addr.0
  %.code.addr.1729 = select i1 %cmp26, i32 104, i32 105
  br label %sw.epilog

sw.bb29:                                          ; preds = %if.end13
  %10 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %cmp30 = icmp eq %struct.rtx_def* %op1.addr.0, %10
  %11 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %.op1.addr.0730 = select i1 %cmp30, %struct.rtx_def* %11, %struct.rtx_def* %op1.addr.0
  %.code.addr.1731 = select i1 %cmp30, i32 102, i32 108
  br label %sw.epilog

sw.bb33:                                          ; preds = %if.end13
  %12 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %cmp34 = icmp eq %struct.rtx_def* %op1.addr.0, %12
  %13 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %.op1.addr.0732 = select i1 %cmp34, %struct.rtx_def* %13, %struct.rtx_def* %op1.addr.0
  %.code.addr.1733 = select i1 %cmp34, i32 103, i32 111
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb33, %sw.bb29, %sw.bb25, %sw.bb21, %sw.bb17, %sw.bb, %if.end13
  %op1.addr.1 = phi %struct.rtx_def* [ %op1.addr.0, %if.end13 ], [ %.op1.addr.0, %sw.bb ], [ %.op1.addr.0724, %sw.bb17 ], [ %.op1.addr.0726, %sw.bb21 ], [ %.op1.addr.0728, %sw.bb25 ], [ %.op1.addr.0730, %sw.bb29 ], [ %.op1.addr.0732, %sw.bb33 ]
  %code.addr.2 = phi i32 [ %code.addr.1, %if.end13 ], [ %.code.addr.1, %sw.bb ], [ %.code.addr.1725, %sw.bb17 ], [ %.code.addr.1727, %sw.bb21 ], [ %.code.addr.1729, %sw.bb25 ], [ %.code.addr.1731, %sw.bb29 ], [ %.code.addr.1733, %sw.bb33 ]
  %idxprom = sext i32 %mode.addr.0 to i64
  %arrayidx = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom
  %14 = load i16* %arrayidx, align 2, !tbaa !8
  %conv = zext i16 %14 to i32
  %15 = load i32* @target_flags, align 4, !tbaa !6
  %16 = lshr i32 %15, 19
  %17 = and i32 %16, 64
  %mul = add i32 %17, 64
  %cmp38 = icmp eq i32 %conv, %mul
  br i1 %cmp38, label %land.lhs.true, label %if.end81

land.lhs.true:                                    ; preds = %sw.epilog
  %arrayidx41 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %18 = load i32* %arrayidx41, align 4, !tbaa !1
  %cmp42 = icmp eq i32 %18, 1
  %19 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  %cmp45 = icmp eq %struct.rtx_def* %op1.addr.1, %19
  %or.cond = and i1 %cmp42, %cmp45
  br i1 %or.cond, label %land.lhs.true47, label %if.end81

land.lhs.true47:                                  ; preds = %land.lhs.true
  %20 = getelementptr inbounds %struct.rtx_def* %op0.addr.0, i64 0, i32 0
  %bf.load48 = load i32* %20, align 8
  %21 = and i32 %bf.load48, 134283263
  %22 = icmp eq i32 %21, 134217794
  br i1 %22, label %if.end81, label %if.then56

if.then56:                                        ; preds = %land.lhs.true47
  %23 = and i32 %code.addr.2, -2
  %24 = icmp eq i32 %23, 102
  br i1 %24, label %if.then62, label %if.else

if.then62:                                        ; preds = %if.then56
  %25 = load i32* @word_mode, align 4, !tbaa !1
  %call63 = tail call %struct.rtx_def* @gen_highpart(i32 %25, %struct.rtx_def* %op0.addr.0) #3
  %26 = load i32* @word_mode, align 4, !tbaa !1
  %call64 = tail call %struct.rtx_def* @gen_lowpart(i32 %26, %struct.rtx_def* %op0.addr.0) #3
  %27 = load i32* @word_mode, align 4, !tbaa !1
  %28 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !4
  %call65 = tail call %struct.rtx_def* @expand_binop(i32 %27, %struct.optab* %28, %struct.rtx_def* %call63, %struct.rtx_def* %call64, %struct.rtx_def* null, i32 %unsignedp, i32 0) #3
  %cmp66 = icmp eq %struct.rtx_def* %call65, null
  br i1 %cmp66, label %if.end81, label %tailrecurse.backedge

tailrecurse.backedge:                             ; preds = %if.then62, %if.then76
  %op0.tr.be = phi %struct.rtx_def* [ %call77, %if.then76 ], [ %call65, %if.then62 ]
  %mode.tr.be = load i32* @word_mode, align 4
  br label %tailrecurse

if.else:                                          ; preds = %if.then56
  switch i32 %code.addr.2, label %if.end81 [
    i32 107, label %if.then76
    i32 104, label %if.then76
  ]

if.then76:                                        ; preds = %if.else, %if.else
  %29 = load i32* @word_mode, align 4, !tbaa !1
  %call77 = tail call %struct.rtx_def* @gen_highpart(i32 %29, %struct.rtx_def* %op0.addr.0) #3
  br label %tailrecurse.backedge

if.end81:                                         ; preds = %land.lhs.true47, %if.else, %if.then62, %land.lhs.true, %sw.epilog
  %bf.lshr.le = lshr i32 %bf.load, 16
  %bf.clear.le = and i32 %bf.lshr.le, 255
  %idxprom82 = sext i32 %code.addr.2 to i64
  %arrayidx83 = getelementptr inbounds [153 x i32]* @setcc_gen_code, i64 0, i64 %idxprom82
  %30 = load i32* %arrayidx83, align 4, !tbaa !1
  %31 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp84 = icmp eq %struct.rtx_def* %op1.addr.1, %31
  br i1 %cmp84, label %land.lhs.true86, label %if.end151

land.lhs.true86:                                  ; preds = %if.end81
  %cmp90 = icmp eq i32 %code.addr.2, 104
  switch i32 %code.addr.2, label %if.end151 [
    i32 107, label %land.lhs.true92
    i32 104, label %land.lhs.true92
  ]

land.lhs.true92:                                  ; preds = %land.lhs.true86, %land.lhs.true86
  %.in = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %32 = load i32* %.in, align 4
  %cmp95 = icmp eq i32 %32, 1
  br i1 %cmp95, label %land.lhs.true97, label %if.end151

land.lhs.true97:                                  ; preds = %land.lhs.true92
  %idxprom116723 = zext i32 %bf.clear.le to i64
  %arrayidx117 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom116723
  %33 = load i8* %arrayidx117, align 1, !tbaa !1
  %arrayidx120 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %34 = load i8* %arrayidx120, align 1, !tbaa !1
  %cmp122 = icmp ugt i8 %33, %34
  br i1 %cmp122, label %if.then124, label %if.end127

if.then124:                                       ; preds = %land.lhs.true97
  %call125 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0.addr.0, i32 0) #3
  %call126 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear.le, i32 %mode.addr.0, %struct.rtx_def* %call125, i32 0) #3
  br label %if.end127

if.end127:                                        ; preds = %if.then124, %land.lhs.true97
  %mode.addr.1 = phi i32 [ %bf.clear.le, %if.then124 ], [ %mode.addr.0, %land.lhs.true97 ]
  %op0.addr.1 = phi %struct.rtx_def* [ %call126, %if.then124 ], [ %op0.addr.0, %land.lhs.true97 ]
  %cmp128 = icmp ne i32 %bf.clear.le, %mode.addr.1
  %.target = select i1 %cmp128, %struct.rtx_def* null, %struct.rtx_def* %target
  br i1 %cmp90, label %if.then134, label %if.end136

if.then134:                                       ; preds = %if.end127
  %35 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 36), align 8, !tbaa !4
  %call135 = tail call %struct.rtx_def* @expand_unop(i32 %mode.addr.1, %struct.optab* %35, %struct.rtx_def* %op0.addr.1, %struct.rtx_def* null, i32 0) #3
  br label %if.end136

if.end136:                                        ; preds = %if.then134, %if.end127
  %op0.addr.2 = phi %struct.rtx_def* [ %call135, %if.then134 ], [ %op0.addr.1, %if.end127 ]
  %idxprom137 = sext i32 %mode.addr.1 to i64
  %arrayidx138 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom137
  %36 = load i16* %arrayidx138, align 2, !tbaa !8
  %conv139 = zext i16 %36 to i64
  %sub140 = add i64 %conv139, -1
  %call142 = tail call %union.tree_node* @size_int_wide(i64 %sub140, i32 0) #3
  %cmp143 = icmp ne i32 %normalizep, -1
  %conv144 = zext i1 %cmp143 to i32
  %call145 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.addr.1, %struct.rtx_def* %op0.addr.2, %union.tree_node* %call142, %struct.rtx_def* %.target, i32 %conv144)
  br i1 %cmp128, label %if.then148, label %return

if.then148:                                       ; preds = %if.end136
  %call149 = tail call %struct.rtx_def* @convert_modes(i32 %bf.clear.le, i32 %mode.addr.1, %struct.rtx_def* %call145, i32 0) #3
  br label %return

if.end151:                                        ; preds = %land.lhs.true86, %land.lhs.true92, %if.end81
  %cmp152 = icmp eq i32 %30, 1317
  br i1 %cmp152, label %if.end284, label %if.then154

if.then154:                                       ; preds = %if.end151
  tail call void @emit_queue() #3
  tail call void @do_pending_stack_adjust() #3
  %call155 = tail call %struct.rtx_def* @get_last_insn() #3
  %call156 = tail call %struct.rtx_def* @compare_from_rtx(%struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.1, i32 %code.addr.2, i32 %unsignedp, i32 %mode.addr.0, %struct.rtx_def* null) #3
  %37 = getelementptr inbounds %struct.rtx_def* %call156, i64 0, i32 0
  %bf.load157 = load i32* %37, align 8
  %bf.clear158 = and i32 %bf.load157, 65535
  %cmp159 = icmp eq i32 %bf.clear158, 54
  br i1 %cmp159, label %if.then161, label %if.end177

if.then161:                                       ; preds = %if.then154
  %38 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp162 = icmp eq %struct.rtx_def* %call156, %38
  br i1 %cmp162, label %return, label %cond.false

cond.false:                                       ; preds = %if.then161
  %cmp164 = icmp eq i32 %normalizep, 1
  br i1 %cmp164, label %cond.true166, label %cond.false167

cond.true166:                                     ; preds = %cond.false
  %39 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  br label %return

cond.false167:                                    ; preds = %cond.false
  %cmp168 = icmp eq i32 %normalizep, -1
  %40 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !tbaa !4
  %41 = load %struct.rtx_def** @const_true_rtx, align 8, !tbaa !4
  %cond172 = select i1 %cmp168, %struct.rtx_def* %40, %struct.rtx_def* %41
  br label %return

if.end177:                                        ; preds = %if.then154
  %idxprom180 = sext i32 %30 to i64
  %operand = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom180, i32 3
  %42 = load %struct.insn_operand_data** %operand, align 8, !tbaa !10
  %mode183 = getelementptr inbounds %struct.insn_operand_data* %42, i64 0, i32 2
  %bf.load184 = load i16* %mode183, align 8
  %bf.cast = zext i16 %bf.load184 to i32
  %predicate = getelementptr inbounds %struct.insn_operand_data* %42, i64 0, i32 0
  %43 = load i32 (%struct.rtx_def*, i32)** %predicate, align 8, !tbaa !14
  %call189 = tail call i32 @preserve_subexpressions_p() #3
  %tobool190 = icmp eq i32 %call189, 0
  br i1 %tobool190, label %lor.lhs.false191, label %if.then194

lor.lhs.false191:                                 ; preds = %if.end177
  %call192 = tail call i32 %43(%struct.rtx_def* %target, i32 %bf.cast) #3
  %tobool193 = icmp eq i32 %call192, 0
  br i1 %tobool193, label %if.then194, label %if.end196

if.then194:                                       ; preds = %lor.lhs.false191, %if.end177
  %call195 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.cast) #3
  br label %if.end196

if.end196:                                        ; preds = %lor.lhs.false191, %if.then194
  %subtarget.1 = phi %struct.rtx_def* [ %call195, %if.then194 ], [ %target, %lor.lhs.false191 ]
  %genfun = getelementptr inbounds [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom180, i32 2
  %44 = load %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !tbaa !16
  %call199 = tail call %struct.rtx_def* (%struct.rtx_def*, ...)* %44(%struct.rtx_def* %subtarget.1) #3
  %tobool200 = icmp eq %struct.rtx_def* %call199, null
  br i1 %tobool200, label %if.end284, label %if.then201

if.then201:                                       ; preds = %if.end196
  %call202 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call199) #3
  %idxprom203721 = zext i32 %bf.clear.le to i64
  %arrayidx204 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom203721
  %45 = load i8* %arrayidx204, align 1, !tbaa !1
  %idxprom206 = zext i16 %bf.load184 to i64
  %arrayidx207 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom206
  %46 = load i8* %arrayidx207, align 1, !tbaa !1
  %cmp209 = icmp ugt i8 %45, %46
  br i1 %cmp209, label %if.then211, label %if.end227

if.then211:                                       ; preds = %if.then201
  %arrayidx213 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom206
  %47 = load i16* %arrayidx213, align 2, !tbaa !8
  %cmp215 = icmp ult i16 %47, 65
  br i1 %cmp215, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then211
  %conv214 = zext i16 %47 to i64
  %sub220 = add i64 %conv214, 4294967295
  %sh_prom221 = and i64 %sub220, 4294967295
  %cmp224 = icmp ne i64 %sh_prom221, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then211
  %48 = phi i1 [ false, %if.then211 ], [ %cmp224, %land.rhs ]
  %land.ext = zext i1 %48 to i32
  tail call void @convert_move(%struct.rtx_def* %target, %struct.rtx_def* %subtarget.1, i32 %land.ext) #3
  br label %if.end227

if.end227:                                        ; preds = %if.then201, %land.end
  %compare_mode.0 = phi i32 [ %bf.clear.le, %land.end ], [ %bf.cast, %if.then201 ]
  %op0.addr.4 = phi %struct.rtx_def* [ %target, %land.end ], [ %subtarget.1, %if.then201 ]
  %call228 = tail call i32 @preserve_subexpressions_p() #3
  %tobool229 = icmp eq i32 %call228, 0
  %subtarget.1. = select i1 %tobool229, %struct.rtx_def* %subtarget.1, %struct.rtx_def* null
  %cmp235 = icmp eq i32 %normalizep, 1
  %49 = icmp ult i32 %normalizep, 2
  br i1 %49, label %if.end278, label %if.else238

if.else238:                                       ; preds = %if.end227
  %cmp240 = icmp eq i32 %normalizep, -1
  br i1 %cmp240, label %if.then242, label %if.else244

if.then242:                                       ; preds = %if.else238
  %50 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 8, !tbaa !4
  %call243 = tail call %struct.rtx_def* @expand_unop(i32 %compare_mode.0, %struct.optab* %50, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %subtarget.1., i32 0) #3
  br label %if.end278

if.else244:                                       ; preds = %if.else238
  %idxprom245722 = zext i32 %compare_mode.0 to i64
  %arrayidx246 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom245722
  %51 = load i16* %arrayidx246, align 2, !tbaa !8
  %52 = icmp eq i16 %51, 1
  br i1 %52, label %if.then259, label %if.else269

if.then259:                                       ; preds = %if.else244
  %call265 = tail call %union.tree_node* @size_int_wide(i64 0, i32 0) #3
  %conv267 = zext i1 %cmp235 to i32
  %call268 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %compare_mode.0, %struct.rtx_def* %op0.addr.4, %union.tree_node* %call265, %struct.rtx_def* %subtarget.1., i32 %conv267)
  br label %if.end278

if.else269:                                       ; preds = %if.else244
  %53 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %54 = getelementptr inbounds %struct.rtx_def* %op0.addr.4, i64 0, i32 0
  %bf.load.i = load i32* %54, align 8
  %bf.clear.i = and i32 %bf.load.i, 16711680
  %cmp.i = icmp eq i32 %bf.clear.i, 0
  br i1 %cmp.i, label %land.lhs.true.i, label %if.then6.i

land.lhs.true.i:                                  ; preds = %if.else269
  %55 = getelementptr inbounds %struct.rtx_def* %53, i64 0, i32 0
  %bf.load1.i = load i32* %55, align 8
  %bf.clear3.i = and i32 %bf.load1.i, 16711680
  %cmp4.i = icmp eq i32 %bf.clear3.i, 0
  br i1 %cmp4.i, label %if.end.i, label %if.then6.i

if.end.i:                                         ; preds = %land.lhs.true.i
  %call.i740 = tail call %struct.rtx_def* @simplify_binary_operation(i32 83, i32 %compare_mode.0, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %53) #3
  %cmp5.i = icmp eq %struct.rtx_def* %call.i740, null
  br i1 %cmp5.i, label %if.then6.i, label %if.end8.i

if.then6.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.else269
  %56 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 18), align 8, !tbaa !4
  %call7.i = tail call %struct.rtx_def* @expand_binop(i32 %compare_mode.0, %struct.optab* %56, %struct.rtx_def* %op0.addr.4, %struct.rtx_def* %53, %struct.rtx_def* %subtarget.1., i32 0, i32 3) #3
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then6.i, %if.end.i
  %tem.1.i = phi %struct.rtx_def* [ %call7.i, %if.then6.i ], [ %call.i740, %if.end.i ]
  %cmp9.i741 = icmp eq %struct.rtx_def* %subtarget.1., null
  br i1 %cmp9.i741, label %if.end278, label %if.else.i

if.else.i:                                        ; preds = %if.end8.i
  %cmp11.i = icmp eq %struct.rtx_def* %tem.1.i, %subtarget.1.
  br i1 %cmp11.i, label %if.end278, label %if.then12.i

if.then12.i:                                      ; preds = %if.else.i
  %call13.i = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %subtarget.1., %struct.rtx_def* %tem.1.i) #3
  br label %if.end278

if.end278:                                        ; preds = %if.then12.i, %if.else.i, %if.end8.i, %if.then242, %if.then259, %if.end227
  %op0.addr.5 = phi %struct.rtx_def* [ %op0.addr.4, %if.end227 ], [ %call243, %if.then242 ], [ %call268, %if.then259 ], [ %subtarget.1., %if.then12.i ], [ %subtarget.1, %if.else.i ], [ %tem.1.i, %if.end8.i ]
  %cmp279 = icmp eq i32 %bf.clear.le, %compare_mode.0
  br i1 %cmp279, label %return, label %if.then281

if.then281:                                       ; preds = %if.end278
  tail call void @convert_move(%struct.rtx_def* %target, %struct.rtx_def* %op0.addr.5, i32 0) #3
  br label %return

if.end284:                                        ; preds = %if.end196, %if.end151
  %last.0 = phi %struct.rtx_def* [ %call155, %if.end196 ], [ %call, %if.end151 ]
  %code.addr.3 = phi i32 [ %bf.clear158, %if.end196 ], [ %code.addr.2, %if.end151 ]
  tail call void @delete_insns_since(%struct.rtx_def* %last.0) #3
  %57 = load i32* @flag_expensive_optimizations, align 4, !tbaa !6
  %tobool285 = icmp eq i32 %57, 0
  br i1 %tobool285, label %land.lhs.true286, label %cond.end291

land.lhs.true286:                                 ; preds = %if.end284
  %cmp287 = icmp eq i32 %bf.clear.le, %mode.addr.0
  %. = select i1 %cmp287, %struct.rtx_def* %target, %struct.rtx_def* null
  br label %cond.end291

cond.end291:                                      ; preds = %if.end284, %land.lhs.true286
  %cond292 = phi %struct.rtx_def* [ null, %if.end284 ], [ %., %land.lhs.true286 ]
  %58 = load i32* @ix86_branch_cost, align 4, !tbaa !6
  %cmp293 = icmp sgt i32 %58, 0
  br i1 %cmp293, label %land.lhs.true295, label %if.end325

land.lhs.true295:                                 ; preds = %cond.end291
  %arrayidx297 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %59 = load i32* %arrayidx297, align 4, !tbaa !1
  %60 = and i32 %code.addr.3, -2
  %notlhs = icmp ne i32 %59, 1
  %notrhs = icmp ne i32 %60, 102
  %or.cond736.not = or i1 %notrhs, %notlhs
  %61 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  %cmp307 = icmp eq %struct.rtx_def* %op1.addr.1, %61
  %or.cond737 = or i1 %or.cond736.not, %cmp307
  br i1 %or.cond737, label %lor.lhs.false328, label %if.then309

if.then309:                                       ; preds = %land.lhs.true295
  %62 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 20), align 8, !tbaa !4
  %call310 = tail call %struct.rtx_def* @expand_binop(i32 %mode.addr.0, %struct.optab* %62, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %cond292, i32 1, i32 2) #3
  %cmp311 = icmp eq %struct.rtx_def* %call310, null
  br i1 %cmp311, label %if.end315, label %if.end320

if.end315:                                        ; preds = %if.then309
  %63 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call314 = tail call %struct.rtx_def* @expand_binop(i32 %mode.addr.0, %struct.optab* %63, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %op1.addr.1, %struct.rtx_def* %cond292, i32 1, i32 2) #3
  %cmp316 = icmp eq %struct.rtx_def* %call314, null
  br i1 %cmp316, label %if.then323, label %if.end320

if.end320:                                        ; preds = %if.then309, %if.end315
  %tem.0743 = phi %struct.rtx_def* [ %call314, %if.end315 ], [ %call310, %if.then309 ]
  %64 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call319 = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %target, i32 %code.addr.3, %struct.rtx_def* %tem.0743, %struct.rtx_def* %64, i32 %mode.addr.0, i32 %unsignedp, i32 %normalizep)
  %cmp321 = icmp eq %struct.rtx_def* %call319, null
  br i1 %cmp321, label %if.then323, label %return

if.then323:                                       ; preds = %if.end315, %if.end320
  tail call void @delete_insns_since(%struct.rtx_def* %last.0) #3
  br label %return

if.end325:                                        ; preds = %cond.end291
  %cmp326 = icmp eq i32 %58, 0
  br i1 %cmp326, label %return, label %lor.lhs.false328

lor.lhs.false328:                                 ; preds = %land.lhs.true295, %if.end325
  %arrayidx330 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %65 = load i32* %arrayidx330, align 4, !tbaa !1
  %cmp331 = icmp eq i32 %65, 1
  %66 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8
  %cmp334 = icmp eq %struct.rtx_def* %op1.addr.1, %66
  %or.cond738 = and i1 %cmp331, %cmp334
  br i1 %or.cond738, label %lor.lhs.false336, label %return

lor.lhs.false336:                                 ; preds = %lor.lhs.false328
  %67 = and i32 %code.addr.3, -2
  %code.addr.3.cmp = icmp eq i32 %67, 102
  br i1 %code.addr.3.cmp, label %if.end352, label %land.lhs.true342

land.lhs.true342:                                 ; preds = %lor.lhs.false336
  %cmp343 = icmp slt i32 %58, 2
  %code.addr.3.off = add i32 %code.addr.3, -105
  %code.addr.3.cmp720 = icmp ugt i32 %code.addr.3.off, 1
  %or.cond739 = or i1 %cmp343, %code.addr.3.cmp720
  br i1 %or.cond739, label %return, label %if.end352

if.end352:                                        ; preds = %land.lhs.true342, %lor.lhs.false336
  %cmp353 = icmp eq i32 %normalizep, 0
  %.normalizep = select i1 %cmp353, i32 1, i32 %normalizep
  switch i32 %code.addr.3, label %if.end385 [
    i32 106, label %if.then359
    i32 105, label %if.then372
  ]

if.then359:                                       ; preds = %if.end352
  %call360 = tail call i32 @rtx_equal_p(%struct.rtx_def* %cond292, %struct.rtx_def* %op0.addr.0) #3
  %tobool361 = icmp eq i32 %call360, 0
  %cond292. = select i1 %tobool361, %struct.rtx_def* %cond292, %struct.rtx_def* null
  %68 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %69 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %call364 = tail call %struct.rtx_def* @expand_binop(i32 %mode.addr.0, %struct.optab* %68, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %69, %struct.rtx_def* %cond292., i32 0, i32 2) #3
  %tobool365 = icmp eq %struct.rtx_def* %call364, null
  br i1 %tobool365, label %if.end385, label %if.then366

if.then366:                                       ; preds = %if.then359
  %70 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !4
  %call367 = tail call %struct.rtx_def* @expand_binop(i32 %mode.addr.0, %struct.optab* %70, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call364, %struct.rtx_def* %cond292., i32 0, i32 2) #3
  br label %if.end385

if.then372:                                       ; preds = %if.end352
  %call373 = tail call i32 @rtx_equal_p(%struct.rtx_def* %cond292, %struct.rtx_def* %op0.addr.0) #3
  %tobool374 = icmp eq i32 %call373, 0
  %subtarget.4. = select i1 %tobool374, %struct.rtx_def* %cond292, %struct.rtx_def* null
  %conv379 = zext i16 %14 to i64
  %sub380 = add i64 %conv379, -1
  %call382 = tail call %union.tree_node* @size_int_wide(i64 %sub380, i32 0) #3
  %call.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call382, %struct.rtx_def* null, i32 0, i32 0) #3
  %71 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i = icmp eq %struct.rtx_def* %call.i, %71
  br i1 %cmp7.i, label %expand_shift.exit, label %for.body.i

for.body.i:                                       ; preds = %if.then372, %if.else79.i
  %try.0189.i = phi i32 [ %inc.i, %if.else79.i ], [ 0, %if.then372 ]
  switch i32 %try.0189.i, label %if.else14.i [
    i32 0, label %if.else79.i
    i32 1, label %if.then13.i
  ]

if.then13.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else14.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else79.i:                                      ; preds = %if.else14.i, %if.then13.i, %for.body.i
  %methods.0.i = phi i32 [ 2, %if.then13.i ], [ 3, %if.else14.i ], [ 0, %for.body.i ]
  %72 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i = tail call %struct.rtx_def* @expand_binop(i32 %mode.addr.0, %struct.optab* %72, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %call.i, %struct.rtx_def* %subtarget.4., i32 0, i32 %methods.0.i) #3
  %inc.i = add nsw i32 %try.0189.i, 1
  %cmp8.i = icmp eq %struct.rtx_def* %call109.i, null
  %cmp9.i = icmp slt i32 %inc.i, 3
  %or.cond116.i = and i1 %cmp8.i, %cmp9.i
  br i1 %or.cond116.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %if.else79.i
  br i1 %cmp8.i, label %if.then113.i, label %expand_shift.exit

if.then113.i:                                     ; preds = %for.end.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit:                                ; preds = %if.then372, %for.end.i
  %retval.0.i = phi %struct.rtx_def* [ %op0.addr.0, %if.then372 ], [ %call109.i, %for.end.i ]
  %73 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %call384 = tail call %struct.rtx_def* @expand_binop(i32 %mode.addr.0, %struct.optab* %73, %struct.rtx_def* %retval.0.i, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %subtarget.4., i32 0, i32 2) #3
  br label %if.end385

if.end385:                                        ; preds = %if.end352, %if.then366, %if.then359, %expand_shift.exit
  %subtarget.6 = phi %struct.rtx_def* [ %subtarget.4., %expand_shift.exit ], [ %cond292., %if.then359 ], [ %cond292., %if.then366 ], [ %cond292, %if.end352 ]
  %tem.3 = phi %struct.rtx_def* [ %call384, %expand_shift.exit ], [ null, %if.then359 ], [ %call367, %if.then366 ], [ null, %if.end352 ]
  %cmp386 = icmp eq i32 %code.addr.3, 103
  %cmp389 = icmp eq i32 %code.addr.3, 102
  br i1 %code.addr.3.cmp, label %if.then391, label %if.end456

if.then391:                                       ; preds = %if.end385
  %74 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 34), align 8, !tbaa !4
  %insn_code = getelementptr inbounds %struct.optab* %74, i64 0, i32 1, i64 %idxprom, i32 0
  %75 = load i32* %insn_code, align 4, !tbaa !12
  %cmp394 = icmp eq i32 %75, 1317
  br i1 %cmp394, label %if.else398, label %if.then396

if.then396:                                       ; preds = %if.then391
  %call397 = tail call %struct.rtx_def* @expand_unop(i32 %mode.addr.0, %struct.optab* %74, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %subtarget.6, i32 1) #3
  br label %if.end421

if.else398:                                       ; preds = %if.then391
  %76 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 37), align 8, !tbaa !4
  %insn_code402 = getelementptr inbounds %struct.optab* %76, i64 0, i32 1, i64 %idxprom, i32 0
  %77 = load i32* %insn_code402, align 4, !tbaa !12
  %cmp403 = icmp eq i32 %77, 1317
  br i1 %cmp403, label %if.else407, label %if.then405

if.then405:                                       ; preds = %if.else398
  %call406 = tail call %struct.rtx_def* @expand_unop(i32 %mode.addr.0, %struct.optab* %76, %struct.rtx_def* %op0.addr.0, %struct.rtx_def* %subtarget.6, i32 1) #3
  br label %if.end421

if.else407:                                       ; preds = %if.else398
  %arrayidx409 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom
  %78 = load i8* %arrayidx409, align 1, !tbaa !1
  %conv410 = zext i8 %78 to i32
  %79 = load i32* @target_flags, align 4, !tbaa !6
  %and411 = lshr i32 %79, 23
  %80 = and i32 %and411, 4
  %81 = add i32 %80, 4
  %cmp414 = icmp ult i32 %conv410, %81
  br i1 %cmp414, label %if.then416, label %if.end421

if.then416:                                       ; preds = %if.else407
  %call417 = tail call %struct.rtx_def* @protect_from_queue(%struct.rtx_def* %op0.addr.0, i32 0) #3
  %82 = load i32* @word_mode, align 4, !tbaa !1
  %call418 = tail call %struct.rtx_def* @convert_modes(i32 %82, i32 %mode.addr.0, %struct.rtx_def* %call417, i32 1) #3
  %83 = load i32* @word_mode, align 4, !tbaa !1
  br label %if.end421

if.end421:                                        ; preds = %if.then405, %if.then416, %if.else407, %if.then396
  %tem.4 = phi %struct.rtx_def* [ %call397, %if.then396 ], [ %call406, %if.then405 ], [ %call418, %if.then416 ], [ %tem.3, %if.else407 ]
  %mode.addr.2 = phi i32 [ %mode.addr.0, %if.then396 ], [ %mode.addr.0, %if.then405 ], [ %83, %if.then416 ], [ %mode.addr.0, %if.else407 ]
  %op0.addr.6 = phi %struct.rtx_def* [ %op0.addr.0, %if.then396 ], [ %op0.addr.0, %if.then405 ], [ %call417, %if.then416 ], [ %op0.addr.0, %if.else407 ]
  %cmp422 = icmp eq %struct.rtx_def* %tem.4, null
  br i1 %cmp422, label %land.lhs.true435, label %if.then424

if.then424:                                       ; preds = %if.end421
  br i1 %cmp386, label %if.then427, label %if.else429

if.then427:                                       ; preds = %if.then424
  %84 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 2), align 8, !tbaa !4
  %85 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %call428 = tail call %struct.rtx_def* @expand_binop(i32 %mode.addr.2, %struct.optab* %84, %struct.rtx_def* %tem.4, %struct.rtx_def* %85, %struct.rtx_def* %subtarget.6, i32 0, i32 2) #3
  br label %if.end432

if.else429:                                       ; preds = %if.then424
  %86 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 8, !tbaa !4
  %call430 = tail call %struct.rtx_def* @expand_unop(i32 %mode.addr.2, %struct.optab* %86, %struct.rtx_def* %tem.4, %struct.rtx_def* %subtarget.6, i32 0) #3
  br label %if.end432

if.end432:                                        ; preds = %if.then427, %if.else429
  %tem.5 = phi %struct.rtx_def* [ %call428, %if.then427 ], [ %call430, %if.else429 ]
  %cmp433 = icmp eq %struct.rtx_def* %tem.5, null
  br i1 %cmp433, label %land.lhs.true435, label %if.end456

land.lhs.true435:                                 ; preds = %if.end421, %if.end432
  %87 = load i32* @ix86_branch_cost, align 4
  %cmp439 = icmp sgt i32 %87, 1
  %or.cond494 = or i1 %cmp389, %cmp439
  br i1 %or.cond494, label %if.then441, label %if.else485

if.then441:                                       ; preds = %land.lhs.true435
  %call442 = tail call i32 @rtx_equal_p(%struct.rtx_def* %subtarget.6, %struct.rtx_def* %op0.addr.6) #3
  %tobool443 = icmp eq i32 %call442, 0
  %subtarget.6. = select i1 %tobool443, %struct.rtx_def* %subtarget.6, %struct.rtx_def* null
  %88 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 32), align 8, !tbaa !4
  %call446 = tail call %struct.rtx_def* @expand_unop(i32 %mode.addr.2, %struct.optab* %88, %struct.rtx_def* %op0.addr.6, %struct.rtx_def* %subtarget.6., i32 0) #3
  %89 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !4
  %call447 = tail call %struct.rtx_def* @expand_binop(i32 %mode.addr.2, %struct.optab* %89, %struct.rtx_def* %call446, %struct.rtx_def* %op0.addr.6, %struct.rtx_def* %subtarget.6., i32 0, i32 2) #3
  %tobool448 = icmp ne %struct.rtx_def* %call447, null
  %or.cond495 = and i1 %tobool448, %cmp386
  br i1 %or.cond495, label %if.then452, label %if.end456

if.then452:                                       ; preds = %if.then441
  %90 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 36), align 8, !tbaa !4
  %call453 = tail call %struct.rtx_def* @expand_unop(i32 %mode.addr.2, %struct.optab* %90, %struct.rtx_def* %call447, %struct.rtx_def* %subtarget.6., i32 0) #3
  br label %if.end456

if.end456:                                        ; preds = %if.end432, %if.then452, %if.then441, %if.end385
  %subtarget.8 = phi %struct.rtx_def* [ %subtarget.6., %if.then452 ], [ %subtarget.6., %if.then441 ], [ %subtarget.6, %if.end432 ], [ %subtarget.6, %if.end385 ]
  %tem.6 = phi %struct.rtx_def* [ %call453, %if.then452 ], [ %call447, %if.then441 ], [ %tem.5, %if.end432 ], [ %tem.3, %if.end385 ]
  %mode.addr.3 = phi i32 [ %mode.addr.2, %if.then452 ], [ %mode.addr.2, %if.then441 ], [ %mode.addr.2, %if.end432 ], [ %mode.addr.0, %if.end385 ]
  %tobool457 = icmp ne %struct.rtx_def* %tem.6, null
  %tobool459 = icmp ne i32 %.normalizep, 0
  %or.cond496 = and i1 %tobool457, %tobool459
  br i1 %or.cond496, label %if.then460, label %if.end470

if.then460:                                       ; preds = %if.end456
  %idxprom461 = sext i32 %mode.addr.3 to i64
  %arrayidx462 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom461
  %91 = load i16* %arrayidx462, align 2, !tbaa !8
  %conv463 = zext i16 %91 to i64
  %sub464 = add i64 %conv463, -1
  %call466 = tail call %union.tree_node* @size_int_wide(i64 %sub464, i32 0) #3
  %cmp467 = icmp eq i32 %.normalizep, 1
  %conv468 = zext i1 %cmp467 to i32
  %call469 = tail call %struct.rtx_def* @expand_shift(i32 83, i32 %mode.addr.3, %struct.rtx_def* %tem.6, %union.tree_node* %call466, %struct.rtx_def* %subtarget.8, i32 %conv468)
  br label %if.end470

if.end470:                                        ; preds = %if.then460, %if.end456
  %tem.7 = phi %struct.rtx_def* [ %call469, %if.then460 ], [ %tem.6, %if.end456 ]
  %tobool471 = icmp eq %struct.rtx_def* %tem.7, null
  br i1 %tobool471, label %if.else485, label %if.then472

if.then472:                                       ; preds = %if.end470
  %92 = getelementptr inbounds %struct.rtx_def* %tem.7, i64 0, i32 0
  %bf.load473 = load i32* %92, align 8
  %bf.lshr474 = lshr i32 %bf.load473, 16
  %bf.clear475 = and i32 %bf.lshr474, 255
  %cmp476 = icmp eq i32 %bf.clear475, %bf.clear.le
  br i1 %cmp476, label %if.else479, label %if.then478

if.then478:                                       ; preds = %if.then472
  tail call void @convert_move(%struct.rtx_def* %target, %struct.rtx_def* %tem.7, i32 0) #3
  br label %return

if.else479:                                       ; preds = %if.then472
  %tobool480 = icmp eq %struct.rtx_def* %subtarget.8, null
  br i1 %tobool480, label %if.then481, label %return

if.then481:                                       ; preds = %if.else479
  %call482 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target, %struct.rtx_def* %tem.7) #3
  br label %return

if.else485:                                       ; preds = %land.lhs.true435, %if.end470
  tail call void @delete_insns_since(%struct.rtx_def* %last.0) #3
  br label %return

return:                                           ; preds = %if.else485, %if.then481, %if.then478, %if.else479, %if.end325, %land.lhs.true342, %lor.lhs.false328, %if.end320, %if.then323, %if.end278, %cond.false167, %cond.true166, %if.then161, %if.end136, %if.then148, %if.then281
  %retval.0 = phi %struct.rtx_def* [ %target, %if.then281 ], [ %call149, %if.then148 ], [ %call145, %if.end136 ], [ %39, %cond.true166 ], [ %cond172, %cond.false167 ], [ %call156, %if.then161 ], [ %op0.addr.5, %if.end278 ], [ null, %if.then323 ], [ %call319, %if.end320 ], [ null, %lor.lhs.false328 ], [ null, %land.lhs.true342 ], [ null, %if.end325 ], [ %target, %if.then478 ], [ %tem.7, %if.else479 ], [ %target, %if.then481 ], [ null, %if.else485 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc i64 @choose_multiplier(i64 %d, i32 %n, i32 %precision, i64* nocapture %multiplier_ptr, i32* nocapture %post_shift_ptr, i32* nocapture %lgup_ptr) #0 {
entry:
  %mhigh_hi = alloca i64, align 8
  %mlow_hi = alloca i64, align 8
  %mhigh_lo = alloca i64, align 8
  %mlow_lo = alloca i64, align 8
  %dummy1 = alloca i64, align 8
  %dummy2 = alloca i64, align 8
  %sub.i = add i64 %d, -1
  %call.i = call i32 @floor_log2_wide(i64 %sub.i) #3
  %add.i = add nsw i32 %call.i, 1
  %cmp = icmp slt i32 %call.i, %n
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2622, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.choose_multiplier, i64 0, i64 0)) #4
  unreachable

if.end:                                           ; preds = %entry
  %add = add nsw i32 %add.i, %n
  %sub = sub nsw i32 %add, %precision
  %cmp2 = icmp eq i32 %add, 128
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2631, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.choose_multiplier, i64 0, i64 0)) #4
  unreachable

if.end4:                                          ; preds = %if.end
  %cmp5 = icmp sgt i32 %add, 63
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end4
  %sub7 = add nsw i32 %add, -64
  %sh_prom = zext i32 %sub7 to i64
  %shl = shl i64 1, %sh_prom
  br label %if.end10

if.else:                                          ; preds = %if.end4
  %sh_prom8 = zext i32 %add to i64
  %shl9 = shl i64 1, %sh_prom8
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then6
  %nh.0 = phi i64 [ %shl, %if.then6 ], [ 0, %if.else ]
  %nl.0 = phi i64 [ 0, %if.then6 ], [ %shl9, %if.else ]
  %call11 = call i32 @div_and_round_double(i32 62, i32 1, i64 %nl.0, i64 %nh.0, i64 %d, i64 0, i64* %mlow_lo, i64* %mlow_hi, i64* %dummy1, i64* %dummy2) #3
  %cmp12 = icmp sgt i32 %sub, 63
  br i1 %cmp12, label %if.then13, label %if.else17

if.then13:                                        ; preds = %if.end10
  %sub14 = add nsw i32 %sub, -64
  %sh_prom15 = zext i32 %sub14 to i64
  %shl16 = shl i64 1, %sh_prom15
  %or = or i64 %nh.0, %shl16
  br label %if.end21

if.else17:                                        ; preds = %if.end10
  %sh_prom18 = zext i32 %sub to i64
  %shl19 = shl i64 1, %sh_prom18
  %or20 = or i64 %nl.0, %shl19
  br label %if.end21

if.end21:                                         ; preds = %if.else17, %if.then13
  %nh.1 = phi i64 [ %or, %if.then13 ], [ %nh.0, %if.else17 ]
  %nl.1 = phi i64 [ %nl.0, %if.then13 ], [ %or20, %if.else17 ]
  %call22 = call i32 @div_and_round_double(i32 62, i32 1, i64 %nl.1, i64 %nh.1, i64 %d, i64 0, i64* %mhigh_lo, i64* %mhigh_hi, i64* %dummy1, i64* %dummy2) #3
  %0 = load i64* %mhigh_hi, align 8, !tbaa !20
  %tobool = icmp eq i64 %0, 0
  %sub23 = sub i64 %nh.1, %d
  %cmp24 = icmp ult i64 %sub23, %d
  %or.cond82 = or i1 %tobool, %cmp24
  br i1 %or.cond82, label %if.end26, label %if.then25

if.then25:                                        ; preds = %if.end21
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2657, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.choose_multiplier, i64 0, i64 0)) #4
  unreachable

if.end26:                                         ; preds = %if.end21
  %cmp27 = icmp sgt i64 %0, 1
  %1 = load i64* %mlow_hi, align 8
  %cmp28 = icmp sgt i64 %1, 1
  %or.cond = or i1 %cmp27, %cmp28
  br i1 %or.cond, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end26
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2659, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.choose_multiplier, i64 0, i64 0)) #4
  unreachable

if.end30:                                         ; preds = %if.end26
  %cmp31 = icmp slt i64 %1, %0
  br i1 %cmp31, label %for.cond.preheader, label %lor.lhs.false32

for.cond.preheader:                               ; preds = %land.lhs.true34, %if.end30
  %cmp3883 = icmp sgt i32 %call.i, -1
  br i1 %cmp3883, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.pre = load i64* %mlow_lo, align 8, !tbaa !20
  %.pre87 = load i64* %mhigh_lo, align 8, !tbaa !20
  %phitmp = shl i64 %1, 63
  br label %for.body

lor.lhs.false32:                                  ; preds = %if.end30
  %cmp33 = icmp eq i64 %1, %0
  br i1 %cmp33, label %land.lhs.true34, label %if.then36

land.lhs.true34:                                  ; preds = %lor.lhs.false32
  %2 = load i64* %mlow_lo, align 8, !tbaa !20
  %3 = load i64* %mhigh_lo, align 8, !tbaa !20
  %cmp35 = icmp ult i64 %2, %3
  br i1 %cmp35, label %for.cond.preheader, label %if.then36

if.then36:                                        ; preds = %land.lhs.true34, %lor.lhs.false32
  call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2662, i8* getelementptr inbounds ([18 x i8]* @__FUNCTION__.choose_multiplier, i64 0, i64 0)) #4
  unreachable

for.body:                                         ; preds = %for.body.lr.ph, %if.end46
  %4 = phi i64 [ %.pre87, %for.body.lr.ph ], [ %or43, %if.end46 ]
  %5 = phi i64 [ %0, %for.body.lr.ph ], [ 0, %if.end46 ]
  %6 = phi i64 [ %.pre, %for.body.lr.ph ], [ %or40, %if.end46 ]
  %7 = phi i64 [ %phitmp, %for.body.lr.ph ], [ 0, %if.end46 ]
  %post_shift.084 = phi i32 [ %add.i, %for.body.lr.ph ], [ %dec, %if.end46 ]
  %shr = lshr i64 %6, 1
  %or40 = or i64 %shr, %7
  %shl41 = shl i64 %5, 63
  %shr42 = lshr i64 %4, 1
  %or43 = or i64 %shr42, %shl41
  %cmp44 = icmp ult i64 %or40, %or43
  br i1 %cmp44, label %if.end46, label %for.end

if.end46:                                         ; preds = %for.body
  store i64 0, i64* %mlow_hi, align 8, !tbaa !20
  store i64 %or40, i64* %mlow_lo, align 8, !tbaa !20
  store i64 0, i64* %mhigh_hi, align 8, !tbaa !20
  store i64 %or43, i64* %mhigh_lo, align 8, !tbaa !20
  %dec = add nsw i32 %post_shift.084, -1
  %cmp38 = icmp sgt i32 %dec, 0
  br i1 %cmp38, label %for.body, label %for.end

for.end:                                          ; preds = %if.end46, %for.body, %for.cond.preheader
  %8 = phi i64 [ %0, %for.cond.preheader ], [ 0, %if.end46 ], [ %5, %for.body ]
  %post_shift.0.lcssa = phi i32 [ %add.i, %for.cond.preheader ], [ %dec, %if.end46 ], [ %post_shift.084, %for.body ]
  store i32 %post_shift.0.lcssa, i32* %post_shift_ptr, align 4, !tbaa !6
  store i32 %add.i, i32* %lgup_ptr, align 4, !tbaa !6
  %cmp47 = icmp slt i32 %n, 64
  br i1 %cmp47, label %if.then48, label %if.else54

if.then48:                                        ; preds = %for.end
  %sh_prom49 = zext i32 %n to i64
  %shl50 = shl i64 1, %sh_prom49
  %sub51 = add i64 %shl50, -1
  %9 = load i64* %mhigh_lo, align 8, !tbaa !20
  %and = and i64 %9, %sub51
  store i64 %and, i64* %multiplier_ptr, align 8, !tbaa !20
  %cmp52 = icmp uge i64 %9, %sub51
  %conv53 = zext i1 %cmp52 to i64
  br label %return

if.else54:                                        ; preds = %for.end
  %10 = load i64* %mhigh_lo, align 8, !tbaa !20
  store i64 %10, i64* %multiplier_ptr, align 8, !tbaa !20
  br label %return

return:                                           ; preds = %if.else54, %if.then48
  %retval.0 = phi i64 [ %conv53, %if.then48 ], [ %8, %if.else54 ]
  ret i64 %retval.0
}

declare %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #1

declare %struct.rtx_def* @gen_label_rtx() #1

; Function Attrs: nounwind uwtable
define internal fastcc void @do_cmp_and_jump(%struct.rtx_def* %arg1, %struct.rtx_def* %arg2, i32 %op, i32 %mode, %struct.rtx_def* %label) #0 {
entry:
  %idxprom = sext i32 %mode to i64
  %arrayidx = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !1
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %call = tail call i32 @can_compare_p(i32 %op, i32 %mode, i32 0) #3
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %call1 = tail call %struct.rtx_def* @gen_label_rtx() #3
  switch i32 %op, label %sw.default [
    i32 111, label %sw.bb
    i32 110, label %sw.bb2
    i32 107, label %sw.bb3
    i32 105, label %sw.bb4
    i32 104, label %sw.bb5
    i32 103, label %sw.bb6
    i32 102, label %sw.bb10
  ]

sw.bb:                                            ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 1, %struct.rtx_def* %arg2, %struct.rtx_def* %arg1, %struct.rtx_def* %call1, %struct.rtx_def* %label) #3
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 1, %struct.rtx_def* %arg1, %struct.rtx_def* %arg2, %struct.rtx_def* %label, %struct.rtx_def* %call1) #3
  br label %sw.epilog

sw.bb3:                                           ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 0, %struct.rtx_def* %arg2, %struct.rtx_def* %arg1, %struct.rtx_def* %call1, %struct.rtx_def* %label) #3
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 0, %struct.rtx_def* %arg1, %struct.rtx_def* %arg2, %struct.rtx_def* %call1, %struct.rtx_def* %label) #3
  br label %sw.epilog

sw.bb5:                                           ; preds = %if.then
  tail call void @do_jump_by_parts_greater_rtx(i32 %mode, i32 0, %struct.rtx_def* %arg2, %struct.rtx_def* %arg1, %struct.rtx_def* %label, %struct.rtx_def* %call1) #3
  br label %sw.epilog

sw.bb6:                                           ; preds = %if.then
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7 = icmp eq %struct.rtx_def* %1, %arg2
  br i1 %cmp7, label %lor.lhs.false, label %if.then9

lor.lhs.false:                                    ; preds = %sw.bb6
  %2 = getelementptr inbounds %struct.rtx_def* %arg1, i64 0, i32 0
  %bf.load = load i32* %2, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp8 = icmp eq i32 %bf.clear, %mode
  br i1 %cmp8, label %if.end, label %if.then9

if.then9:                                         ; preds = %lor.lhs.false, %sw.bb6
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4749, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.do_cmp_and_jump, i64 0, i64 0)) #4
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  tail call void @do_jump_by_parts_equality_rtx(%struct.rtx_def* %arg1, %struct.rtx_def* %call1, %struct.rtx_def* %label) #3
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.then
  %3 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp11 = icmp eq %struct.rtx_def* %3, %arg2
  br i1 %cmp11, label %lor.lhs.false12, label %if.then17

lor.lhs.false12:                                  ; preds = %sw.bb10
  %4 = getelementptr inbounds %struct.rtx_def* %arg1, i64 0, i32 0
  %bf.load13 = load i32* %4, align 8
  %bf.lshr14 = lshr i32 %bf.load13, 16
  %bf.clear15 = and i32 %bf.lshr14, 255
  %cmp16 = icmp eq i32 %bf.clear15, %mode
  br i1 %cmp16, label %if.end18, label %if.then17

if.then17:                                        ; preds = %lor.lhs.false12, %sw.bb10
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4755, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.do_cmp_and_jump, i64 0, i64 0)) #4
  unreachable

if.end18:                                         ; preds = %lor.lhs.false12
  tail call void @do_jump_by_parts_equality_rtx(%struct.rtx_def* %arg1, %struct.rtx_def* %label, %struct.rtx_def* %call1) #3
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 4760, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.do_cmp_and_jump, i64 0, i64 0)) #4
  unreachable

sw.epilog:                                        ; preds = %if.end18, %if.end, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb
  %call19 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call1) #3
  br label %if.end20

if.else:                                          ; preds = %land.lhs.true, %entry
  tail call void @emit_cmp_and_jump_insns(%struct.rtx_def* %arg1, %struct.rtx_def* %arg2, i32 %op, %struct.rtx_def* null, i32 %mode, i32 0, %struct.rtx_def* %label) #3
  br label %if.end20

if.end20:                                         ; preds = %if.else, %sw.epilog
  ret void
}

declare %struct.rtx_def* @emit_label(%struct.rtx_def*) #1

declare i32 @expand_twoval_binop(%struct.optab*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32) #1

declare %struct.rtx_def* @emit_jump_insn(%struct.rtx_def*) #1

declare %struct.rtx_def* @gen_jump(%struct.rtx_def*) #1

declare %struct.rtx_def* @emit_barrier() #1

declare %struct.rtx_def* @plus_constant_wide(%struct.rtx_def*, i64) #1

declare %struct.rtx_def* @expand_abs(i32, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

declare %struct.rtx_def* @sign_expand_binop(i32, %struct.optab*, %struct.optab*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32) #1

declare %union.tree_node* @build_real(%union.tree_node*, %struct.realvaluetype* byval align 8) #1

declare %union.tree_node* @tree_cons(%union.tree_node*, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build_vector(%union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @build1(i32, %union.tree_node*, %union.tree_node*) #1

declare %union.tree_node* @unsigned_type(%union.tree_node*) #1

declare %union.tree_node* @signed_type(%union.tree_node*) #1

declare %union.tree_node* @type_for_mode(i32, i32) #1

declare %union.tree_node* @make_node(i32) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @expand_mult_add(%struct.rtx_def* %x, %struct.rtx_def* %target, %struct.rtx_def* %mult, %struct.rtx_def* %add, i32 %mode, i32 %unsignedp) #0 {
entry:
  %call = tail call %union.tree_node* @type_for_mode(i32 %mode, i32 %unsignedp) #3
  %0 = getelementptr inbounds %struct.rtx_def* %add, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear = and i32 %bf.lshr, 255
  %cmp = icmp eq i32 %bf.clear, 0
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %call4 = tail call %union.tree_node* @type_for_mode(i32 %bf.clear, i32 %unsignedp) #3
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi %union.tree_node* [ %call4, %cond.false ], [ %call, %entry ]
  %call5 = tail call %union.tree_node* @make_tree(%union.tree_node* %call, %struct.rtx_def* %x)
  %call6 = tail call %union.tree_node* @make_tree(%union.tree_node* %call, %struct.rtx_def* %mult)
  %call7 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 61, %union.tree_node* %call, %union.tree_node* %call5, %union.tree_node* %call6) #3
  %call8 = tail call %union.tree_node* @fold(%union.tree_node* %call7) #3
  %call9 = tail call %union.tree_node* @make_tree(%union.tree_node* %cond, %struct.rtx_def* %add)
  %call10 = tail call %union.tree_node* (i32, %union.tree_node*, ...)* @build(i32 59, %union.tree_node* %call, %union.tree_node* %call8, %union.tree_node* %call9) #3
  %call11 = tail call %union.tree_node* @fold(%union.tree_node* %call10) #3
  %call12 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call11, %struct.rtx_def* %target, i32 0, i32 0) #3
  ret %struct.rtx_def* %call12
}

declare %struct.rtx_def* @simplify_binary_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @unsigned_condition(i32) #1

declare i32 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @swap_condition(i32) #1

declare %union.tree_node* @size_int_wide(i64, i32) #1

declare void @emit_queue() #1

declare void @do_pending_stack_adjust() #1

declare %struct.rtx_def* @compare_from_rtx(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*) #1

declare void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) #1

declare i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #1

; Function Attrs: nounwind uwtable
define %struct.rtx_def* @emit_store_flag_force(%struct.rtx_def* %target, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %mode, i32 %unsignedp, i32 %normalizep) #0 {
entry:
  %call = tail call %struct.rtx_def* @emit_store_flag(%struct.rtx_def* %target, i32 %code, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %mode, i32 %unsignedp, i32 %normalizep)
  %cmp = icmp eq %struct.rtx_def* %call, null
  br i1 %cmp, label %if.end, label %return

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def* %target, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp4 = icmp eq i32 %bf.clear, 61
  br i1 %cmp4, label %lor.lhs.false, label %if.then9

lor.lhs.false:                                    ; preds = %if.end
  %call5 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %op0) #3
  %tobool = icmp eq i32 %call5, 0
  br i1 %tobool, label %lor.lhs.false6, label %if.then9

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %call7 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %target, %struct.rtx_def* %op1) #3
  %tobool8 = icmp eq i32 %call7, 0
  br i1 %tobool8, label %if.end13, label %if.then9

if.then9:                                         ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end
  %bf.load10 = load i32* %0, align 8
  %bf.lshr = lshr i32 %bf.load10, 16
  %bf.clear11 = and i32 %bf.lshr, 255
  %call12 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear11) #3
  br label %if.end13

if.end13:                                         ; preds = %lor.lhs.false6, %if.then9
  %target.addr.0 = phi %struct.rtx_def* [ %call12, %if.then9 ], [ %target, %lor.lhs.false6 ]
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !tbaa !4
  %call14 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %1) #3
  %call15 = tail call %struct.rtx_def* @gen_label_rtx() #3
  tail call void @do_compare_rtx_and_jump(%struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %code, i32 %unsignedp, i32 %mode, %struct.rtx_def* null, %struct.rtx_def* null, %struct.rtx_def* %call15) #3
  %2 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %call16 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %target.addr.0, %struct.rtx_def* %2) #3
  %call17 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call15) #3
  br label %return

return:                                           ; preds = %entry, %if.end13
  %retval.0 = phi %struct.rtx_def* [ %target.addr.0, %if.end13 ], [ %call, %entry ]
  ret %struct.rtx_def* %retval.0
}

declare void @do_compare_rtx_and_jump(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare i32 @can_compare_p(i32, i32, i32) #1

declare void @do_jump_by_parts_greater_rtx(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare void @do_jump_by_parts_equality_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #1

declare void @emit_cmp_and_jump_insns(%struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, %struct.rtx_def*) #1

declare i32 @div_and_round_double(i32, i32, i64, i64, i64, i64, i64*, i64*, i64*, i64*) #1

declare i32 @exact_log2_wide(i64) #1

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @extract_split_bit_field(%struct.rtx_def* %op0, i64 %bitsize, i64 %bitpos, i32 %unsignedp) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.else [
    i32 61, label %if.then
    i32 63, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry
  %1 = load i32* @target_flags, align 4, !tbaa !6
  %and = lshr i32 %1, 20
  %2 = and i32 %and, 32
  %3 = add i32 %2, 32
  br label %while.cond.preheader

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**
  %4 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !4
  %cmp4 = icmp eq %struct.mem_attrs* %4, null
  br i1 %cmp4, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.else
  %align = getelementptr inbounds %struct.mem_attrs* %4, i64 0, i32 4
  %5 = load i32* %align, align 4, !tbaa !17
  br label %cond.end

cond.end:                                         ; preds = %if.else, %cond.true
  %cond8 = phi i32 [ %5, %cond.true ], [ 8, %if.else ]
  %6 = load i32* @target_flags, align 4, !tbaa !6
  %and9 = lshr i32 %6, 20
  %7 = and i32 %and9, 32
  %8 = add i32 %7, 32
  %cmp12.not = icmp uge i32 %cond8, %8
  %brmerge = or i1 %cmp12.not, %cmp4
  %.mux = select i1 %cmp12.not, i32 %8, i32 8
  br i1 %brmerge, label %while.cond.preheader, label %cond.true18

cond.true18:                                      ; preds = %cond.end
  %align22 = getelementptr inbounds %struct.mem_attrs* %4, i64 0, i32 4
  %9 = load i32* %align22, align 4, !tbaa !17
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %cond.end, %if.then, %cond.true18
  %10 = phi i32 [ %6, %cond.true18 ], [ %6, %cond.end ], [ %1, %if.then ]
  %unit.0.ph = phi i32 [ %9, %cond.true18 ], [ %.mux, %cond.end ], [ %3, %if.then ]
  %cmp32226 = icmp eq i64 %bitsize, 0
  br i1 %cmp32226, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %conv35 = zext i32 %unit.0.ph to i64
  %arrayidx72 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx72 to i32*
  %arrayidx81 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**
  br label %while.body

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %while.body.lr.ph
  %bf.load66 = phi i32 [ %bf.load, %while.body.lr.ph ], [ %bf.load66.pre, %while.cond.backedge.while.body_crit_edge ]
  %11 = phi i32 [ %10, %while.body.lr.ph ], [ %.pre, %while.cond.backedge.while.body_crit_edge ]
  %first.0229 = phi i32 [ 1, %while.body.lr.ph ], [ 0, %while.cond.backedge.while.body_crit_edge ]
  %result.0228 = phi %struct.rtx_def* [ null, %while.body.lr.ph ], [ %result.0.be, %while.cond.backedge.while.body_crit_edge ]
  %bitsdone.0227 = phi i64 [ 0, %while.body.lr.ph ], [ %conv107, %while.cond.backedge.while.body_crit_edge ]
  %add = add i64 %bitsdone.0227, %bitpos
  %div = udiv i64 %add, %conv35
  %rem = urem i64 %add, %conv35
  %sub = sub i64 %bitsize, %bitsdone.0227
  %and40 = lshr i32 %11, 20
  %12 = and i32 %and40, 32
  %13 = add i32 %12, 32
  %conv43181 = zext i32 %13 to i64
  %cmp44 = icmp ult i64 %sub, %conv43181
  %sub.conv43181 = select i1 %cmp44, i64 %sub, i64 %conv43181
  %sub57 = sub i64 %conv35, %rem
  %cmp58 = icmp ult i64 %sub.conv43181, %sub57
  %cond65 = select i1 %cmp58, i64 %sub.conv43181, i64 %sub57
  %bf.clear67 = and i32 %bf.load66, 65535
  switch i32 %bf.clear67, label %if.end100 [
    i32 63, label %if.then70
    i32 61, label %if.then92
  ]

if.then70:                                        ; preds = %while.body
  %14 = load i32* %rtuint, align 4, !tbaa !6
  %and73 = lshr i32 %11, 23
  %15 = and i32 %and73, 4
  %16 = add i32 %15, 4
  %div76 = udiv i32 %14, %16
  %conv77 = zext i32 %div76 to i64
  %add78 = add i64 %conv77, %div
  %conv79 = trunc i64 %add78 to i32
  %17 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %18 = getelementptr inbounds %struct.rtx_def* %17, i64 0, i32 0
  %bf.load85 = load i32* %18, align 8
  %bf.lshr = lshr i32 %bf.load85, 16
  %bf.clear86 = and i32 %bf.lshr, 255
  %call = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %17, i32 %conv79, i32 %bf.clear86) #3
  br label %if.end100

if.then92:                                        ; preds = %while.body
  %conv93 = trunc i64 %div to i32
  %bf.lshr95 = lshr i32 %bf.load66, 16
  %bf.clear96 = and i32 %bf.lshr95, 255
  %call97 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %conv93, i32 %bf.clear96) #3
  br label %if.end100

if.end100:                                        ; preds = %while.body, %if.then92, %if.then70
  %word.0 = phi %struct.rtx_def* [ %call, %if.then70 ], [ %call97, %if.then92 ], [ %op0, %while.body ]
  %offset.0 = phi i64 [ 0, %if.then70 ], [ 0, %if.then92 ], [ %div, %while.body ]
  %19 = load i32* @word_mode, align 4, !tbaa !1
  %mul = mul i64 %offset.0, %conv35
  %div102 = lshr i64 %mul, 3
  %call103 = tail call fastcc %struct.rtx_def* @extract_fixed_bit_field(i32 %19, %struct.rtx_def* %word.0, i64 %div102, i64 %cond65, i64 %rem, %struct.rtx_def* null, i32 1)
  %add105 = add i64 %cond65, %bitsdone.0227
  %conv107 = and i64 %add105, 4294967295
  %cmp108 = icmp eq i64 %conv107, %cond65
  br i1 %cmp108, label %if.end115, label %if.then110

if.then110:                                       ; preds = %if.end100
  %20 = load i32* @word_mode, align 4, !tbaa !1
  %sub112 = sub i64 %conv107, %cond65
  %call113 = tail call %union.tree_node* @build_int_2_wide(i64 %sub112, i64 0) #3
  %call.i = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call113, %struct.rtx_def* null, i32 0, i32 0) #3
  %21 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i = icmp eq %struct.rtx_def* %call.i, %21
  br i1 %cmp7.i, label %if.end115, label %for.body.i

for.body.i:                                       ; preds = %if.then110, %land.lhs.true94.i
  %try.0189.i = phi i32 [ %inc.i, %land.lhs.true94.i ], [ 0, %if.then110 ]
  switch i32 %try.0189.i, label %if.else14.i [
    i32 0, label %if.else79.i
    i32 1, label %if.then13.i
  ]

if.then13.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else14.i:                                      ; preds = %for.body.i
  br label %if.else79.i

if.else79.i:                                      ; preds = %if.else14.i, %if.then13.i, %for.body.i
  %methods.0.i = phi i32 [ 2, %if.then13.i ], [ 3, %if.else14.i ], [ 0, %for.body.i ]
  %22 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call87.i = tail call %struct.rtx_def* @expand_binop(i32 %20, %struct.optab* %22, %struct.rtx_def* %call103, %struct.rtx_def* %call.i, %struct.rtx_def* null, i32 1, i32 %methods.0.i) #3
  %cmp90.i = icmp eq %struct.rtx_def* %call87.i, null
  br i1 %cmp90.i, label %land.lhs.true94.i, label %if.end115

land.lhs.true94.i:                                ; preds = %if.else79.i
  %inc.i = add nsw i32 %try.0189.i, 1
  %cmp9.i = icmp slt i32 %inc.i, 3
  br i1 %cmp9.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %land.lhs.true94.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

if.end115:                                        ; preds = %if.else79.i, %if.then110, %if.end100
  %part.0 = phi %struct.rtx_def* [ %call103, %if.end100 ], [ %call103, %if.then110 ], [ %call87.i, %if.else79.i ]
  %tobool116 = icmp eq i32 %first.0229, 0
  br i1 %tobool116, label %if.else118, label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end115, %if.else118
  %result.0.be = phi %struct.rtx_def* [ %part.0, %if.end115 ], [ %call119, %if.else118 ]
  %cmp32 = icmp ult i64 %conv107, %bitsize
  br i1 %cmp32, label %while.cond.backedge.while.body_crit_edge, label %while.end

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  %.pre = load i32* @target_flags, align 4, !tbaa !6
  %bf.load66.pre = load i32* %0, align 8
  br label %while.body

if.else118:                                       ; preds = %if.end115
  %23 = load i32* @word_mode, align 4, !tbaa !1
  %24 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 19), align 8, !tbaa !4
  %call119 = tail call %struct.rtx_def* @expand_binop(i32 %23, %struct.optab* %24, %struct.rtx_def* %part.0, %struct.rtx_def* %result.0228, %struct.rtx_def* null, i32 1, i32 3) #3
  br label %while.cond.backedge

while.end:                                        ; preds = %while.cond.backedge, %while.cond.preheader
  %result.0.lcssa = phi %struct.rtx_def* [ null, %while.cond.preheader ], [ %result.0.be, %while.cond.backedge ]
  %tobool121 = icmp eq i32 %unsignedp, 0
  br i1 %tobool121, label %if.end123, label %return

if.end123:                                        ; preds = %while.end
  %25 = load i32* @word_mode, align 4, !tbaa !1
  %26 = load i32* @target_flags, align 4, !tbaa !6
  %and124 = lshr i32 %26, 20
  %27 = and i32 %and124, 32
  %28 = add i32 %27, 32
  %conv127179 = zext i32 %28 to i64
  %sub128 = sub i64 %conv127179, %bitsize
  %call129 = tail call %union.tree_node* @build_int_2_wide(i64 %sub128, i64 0) #3
  %call.i182 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call129, %struct.rtx_def* null, i32 0, i32 0) #3
  %29 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i183 = icmp eq %struct.rtx_def* %call.i182, %29
  br i1 %cmp7.i183, label %expand_shift.exit200, label %for.body.i189

for.body.i189:                                    ; preds = %if.end123, %if.else79.i193
  %try.0189.i188 = phi i32 [ %inc.i196, %if.else79.i193 ], [ 0, %if.end123 ]
  switch i32 %try.0189.i188, label %if.else14.i191 [
    i32 0, label %if.else79.i193
    i32 1, label %if.then13.i190
  ]

if.then13.i190:                                   ; preds = %for.body.i189
  br label %if.else79.i193

if.else14.i191:                                   ; preds = %for.body.i189
  br label %if.else79.i193

if.else79.i193:                                   ; preds = %if.else14.i191, %if.then13.i190, %for.body.i189
  %methods.0.i192 = phi i32 [ 2, %if.then13.i190 ], [ 3, %if.else14.i191 ], [ 0, %for.body.i189 ]
  %30 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 21), align 8, !tbaa !4
  %call109.i = tail call %struct.rtx_def* @expand_binop(i32 %25, %struct.optab* %30, %struct.rtx_def* %result.0.lcssa, %struct.rtx_def* %call.i182, %struct.rtx_def* null, i32 0, i32 %methods.0.i192) #3
  %inc.i196 = add nsw i32 %try.0189.i188, 1
  %cmp8.i = icmp eq %struct.rtx_def* %call109.i, null
  %cmp9.i197 = icmp slt i32 %inc.i196, 3
  %or.cond116.i = and i1 %cmp8.i, %cmp9.i197
  br i1 %or.cond116.i, label %for.body.i189, label %for.end.i198

for.end.i198:                                     ; preds = %if.else79.i193
  br i1 %cmp8.i, label %if.then113.i, label %expand_shift.exit200

if.then113.i:                                     ; preds = %for.end.i198
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

expand_shift.exit200:                             ; preds = %if.end123, %for.end.i198
  %retval.0.i199 = phi %struct.rtx_def* [ %result.0.lcssa, %if.end123 ], [ %call109.i, %for.end.i198 ]
  %31 = load i32* @word_mode, align 4, !tbaa !1
  %32 = load i32* @target_flags, align 4, !tbaa !6
  %and131 = lshr i32 %32, 20
  %33 = and i32 %and131, 32
  %34 = add i32 %33, 32
  %conv134180 = zext i32 %34 to i64
  %sub135 = sub i64 %conv134180, %bitsize
  %call136 = tail call %union.tree_node* @build_int_2_wide(i64 %sub135, i64 0) #3
  %call.i201 = tail call %struct.rtx_def* @expand_expr(%union.tree_node* %call136, %struct.rtx_def* null, i32 0, i32 0) #3
  %35 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !4
  %cmp7.i202 = icmp eq %struct.rtx_def* %call.i201, %35
  br i1 %cmp7.i202, label %return, label %for.body.i208

for.body.i208:                                    ; preds = %expand_shift.exit200, %if.else79.i212
  %try.0189.i207 = phi i32 [ %inc.i216, %if.else79.i212 ], [ 0, %expand_shift.exit200 ]
  switch i32 %try.0189.i207, label %if.else14.i210 [
    i32 0, label %if.else79.i212
    i32 1, label %if.then13.i209
  ]

if.then13.i209:                                   ; preds = %for.body.i208
  br label %if.else79.i212

if.else14.i210:                                   ; preds = %for.body.i208
  br label %if.else79.i212

if.else79.i212:                                   ; preds = %if.else14.i210, %if.then13.i209, %for.body.i208
  %methods.0.i211 = phi i32 [ 2, %if.then13.i209 ], [ 3, %if.else14.i210 ], [ 0, %for.body.i208 ]
  %36 = load %struct.optab** getelementptr inbounds ([49 x %struct.optab*]* @optab_table, i64 0, i64 23), align 8, !tbaa !4
  %call109.i215 = tail call %struct.rtx_def* @expand_binop(i32 %31, %struct.optab* %36, %struct.rtx_def* %retval.0.i199, %struct.rtx_def* %call.i201, %struct.rtx_def* null, i32 0, i32 %methods.0.i211) #3
  %inc.i216 = add nsw i32 %try.0189.i207, 1
  %cmp8.i217 = icmp eq %struct.rtx_def* %call109.i215, null
  %cmp9.i218 = icmp slt i32 %inc.i216, 3
  %or.cond116.i219 = and i1 %cmp8.i217, %cmp9.i218
  br i1 %or.cond116.i219, label %for.body.i208, label %for.end.i220

for.end.i220:                                     ; preds = %if.else79.i212
  br i1 %cmp8.i217, label %if.then113.i221, label %return

if.then113.i221:                                  ; preds = %for.end.i220
  tail call void @fancy_abort(i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 2043, i8* getelementptr inbounds ([13 x i8]* @__FUNCTION__.expand_shift, i64 0, i64 0)) #4
  unreachable

return:                                           ; preds = %for.end.i220, %expand_shift.exit200, %while.end
  %retval.0 = phi %struct.rtx_def* [ %result.0.lcssa, %while.end ], [ %retval.0.i199, %expand_shift.exit200 ], [ %call109.i215, %for.end.i220 ]
  ret %struct.rtx_def* %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc void @store_split_bit_field(%struct.rtx_def* %op0, i64 %bitsize, i64 %bitpos, %struct.rtx_def* %value) #0 {
entry:
  %0 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 0
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.else [
    i32 61, label %if.then
    i32 63, label %if.then
  ]

if.then:                                          ; preds = %entry, %entry
  %1 = load i32* @target_flags, align 4, !tbaa !6
  %and = lshr i32 %1, 20
  %2 = and i32 %and, 32
  %3 = add i32 %2, 32
  br label %if.end

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtmem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**
  %4 = load %struct.mem_attrs** %rtmem, align 8, !tbaa !4
  %cmp4 = icmp eq %struct.mem_attrs* %4, null
  br i1 %cmp4, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.else
  %align = getelementptr inbounds %struct.mem_attrs* %4, i64 0, i32 4
  %5 = load i32* %align, align 4, !tbaa !17
  br label %cond.end

cond.end:                                         ; preds = %if.else, %cond.true
  %cond8 = phi i32 [ %5, %cond.true ], [ 8, %if.else ]
  %6 = load i32* @target_flags, align 4, !tbaa !6
  %and9 = lshr i32 %6, 20
  %7 = and i32 %and9, 32
  %8 = add i32 %7, 32
  %cmp12.not = icmp uge i32 %cond8, %8
  %brmerge = or i1 %cmp12.not, %cmp4
  %.mux = select i1 %cmp12.not, i32 %8, i32 8
  br i1 %brmerge, label %if.end, label %cond.true18

cond.true18:                                      ; preds = %cond.end
  %align22 = getelementptr inbounds %struct.mem_attrs* %4, i64 0, i32 4
  %9 = load i32* %align22, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %cond.end, %cond.true18, %if.then
  %unit.0 = phi i32 [ %3, %if.then ], [ %9, %cond.true18 ], [ %.mux, %cond.end ]
  %10 = getelementptr inbounds %struct.rtx_def* %value, i64 0, i32 0
  %bf.load32 = load i32* %10, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  switch i32 %bf.clear33, label %while.cond.preheader [
    i32 70, label %if.then89
    i32 55, label %if.then66
    i32 56, label %if.then66
    i32 58, label %if.then66
    i32 67, label %if.then66
    i32 68, label %if.then66
    i32 134, label %if.then66
    i32 140, label %if.then66
  ]

if.then66:                                        ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %11 = load i32* @word_mode, align 4, !tbaa !1
  %call = tail call %struct.rtx_def* @gen_lowpart_common(i32 %11, %struct.rtx_def* %value) #3
  %tobool67 = icmp eq %struct.rtx_def* %call, null
  %cmp69 = icmp eq %struct.rtx_def* %call, %value
  %or.cond = or i1 %tobool67, %cmp69
  br i1 %or.cond, label %if.else71, label %while.cond.preheader

if.else71:                                        ; preds = %if.then66
  %12 = load i32* @word_mode, align 4, !tbaa !1
  %bf.load72 = load i32* %10, align 8
  %bf.lshr = lshr i32 %bf.load72, 16
  %bf.clear73 = and i32 %bf.lshr, 255
  %cmp74 = icmp eq i32 %bf.clear73, 0
  %.bf.clear73 = select i1 %cmp74, i32 %12, i32 %bf.clear73
  %call82 = tail call %struct.rtx_def* @force_reg(i32 %.bf.clear73, %struct.rtx_def* %value) #3
  %call83 = tail call %struct.rtx_def* @gen_lowpart_common(i32 %12, %struct.rtx_def* %call82) #3
  br label %while.cond.preheader

if.then89:                                        ; preds = %if.end
  %call90 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %value) #3
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end, %if.then89, %if.else71, %if.then66
  %value.addr.0.ph = phi %struct.rtx_def* [ %call, %if.then66 ], [ %call83, %if.else71 ], [ %call90, %if.then89 ], [ %value, %if.end ]
  %cmp93239 = icmp eq i64 %bitsize, 0
  br i1 %cmp93239, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %conv97 = zext i32 %unit.0 to i64
  %13 = getelementptr inbounds %struct.rtx_def* %value.addr.0.ph, i64 0, i32 0
  %rtwint = getelementptr inbounds %struct.rtx_def* %value.addr.0.ph, i64 0, i32 1, i64 0, i32 0
  %arrayidx148 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtuint = bitcast %union.rtunion_def* %arrayidx148 to i32*
  %arrayidx157 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end178
  %bitsdone.0240 = phi i64 [ 0, %while.body.lr.ph ], [ %phitmp, %if.end178 ]
  %add = add i64 %bitsdone.0240, %bitpos
  %div = udiv i64 %add, %conv97
  %rem = urem i64 %add, %conv97
  %sub = sub i64 %bitsize, %bitsdone.0240
  %14 = load i32* @target_flags, align 4, !tbaa !6
  %and102 = lshr i32 %14, 20
  %15 = and i32 %and102, 32
  %16 = add i32 %15, 32
  %conv105238 = zext i32 %16 to i64
  %cmp106 = icmp ult i64 %sub, %conv105238
  %sub.conv105238 = select i1 %cmp106, i64 %sub, i64 %conv105238
  %sub119 = sub i64 %conv97, %rem
  %cmp120 = icmp ult i64 %sub.conv105238, %sub119
  %cond127 = select i1 %cmp120, i64 %sub.conv105238, i64 %sub119
  %bf.load128 = load i32* %13, align 8
  %bf.clear129 = and i32 %bf.load128, 65535
  %cmp130 = icmp eq i32 %bf.clear129, 54
  br i1 %cmp130, label %if.then132, label %if.else138

if.then132:                                       ; preds = %while.body
  %17 = load i64* %rtwint, align 8, !tbaa !20
  %shr = lshr i64 %17, %bitsdone.0240
  %shl = shl i64 1, %cond127
  %sub135 = add nsw i64 %shl, -1
  %and136 = and i64 %shr, %sub135
  %call137 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and136) #3
  br label %if.end141

if.else138:                                       ; preds = %while.body
  %18 = load i32* @word_mode, align 4, !tbaa !1
  %call140 = tail call fastcc %struct.rtx_def* @extract_fixed_bit_field(i32 %18, %struct.rtx_def* %value.addr.0.ph, i64 0, i64 %cond127, i64 %bitsdone.0240, %struct.rtx_def* null, i32 1)
  br label %if.end141

if.end141:                                        ; preds = %if.else138, %if.then132
  %part.0 = phi %struct.rtx_def* [ %call137, %if.then132 ], [ %call140, %if.else138 ]
  %bf.load142 = load i32* %0, align 8
  %bf.clear143 = and i32 %bf.load142, 65535
  switch i32 %bf.clear143, label %if.end178 [
    i32 63, label %if.then146
    i32 61, label %if.then170
  ]

if.then146:                                       ; preds = %if.end141
  %19 = load i32* %rtuint, align 4, !tbaa !6
  %20 = load i32* @target_flags, align 4, !tbaa !6
  %and149 = lshr i32 %20, 23
  %21 = and i32 %and149, 4
  %22 = add i32 %21, 4
  %div152 = udiv i32 %19, %22
  %conv153 = zext i32 %div152 to i64
  %add154 = add i64 %conv153, %div
  %conv155 = trunc i64 %add154 to i32
  %23 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %24 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 0
  %bf.load161 = load i32* %24, align 8
  %bf.lshr162 = lshr i32 %bf.load161, 16
  %bf.clear163 = and i32 %bf.lshr162, 255
  %call164 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %23, i32 %conv155, i32 %bf.clear163) #3
  br label %if.end178

if.then170:                                       ; preds = %if.end141
  %conv171 = trunc i64 %div to i32
  %bf.lshr173 = lshr i32 %bf.load142, 16
  %bf.clear174 = and i32 %bf.lshr173, 255
  %call175 = tail call %struct.rtx_def* @operand_subword_force(%struct.rtx_def* %op0, i32 %conv171, i32 %bf.clear174) #3
  br label %if.end178

if.end178:                                        ; preds = %if.end141, %if.then170, %if.then146
  %word95.0 = phi %struct.rtx_def* [ %call164, %if.then146 ], [ %call175, %if.then170 ], [ %op0, %if.end141 ]
  %offset.0 = phi i64 [ 0, %if.then146 ], [ 0, %if.then170 ], [ %div, %if.end141 ]
  %mul = mul i64 %offset.0, %conv97
  %div180 = lshr i64 %mul, 3
  tail call fastcc void @store_fixed_bit_field(%struct.rtx_def* %word95.0, i64 %div180, i64 %cond127, i64 %rem, %struct.rtx_def* %part.0)
  %add182 = add i64 %cond127, %bitsdone.0240
  %phitmp = and i64 %add182, 4294967295
  %cmp93 = icmp ult i64 %phitmp, %bitsize
  br i1 %cmp93, label %while.body, label %while.end

while.end:                                        ; preds = %if.end178, %while.cond.preheader
  ret void
}

declare %struct.rtx_def* @gen_lowpart_common(i32, %struct.rtx_def*) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.5 (trunk)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"omnipotent char", metadata !3, i64 0}
!3 = metadata !{metadata !"Simple C/C++ TBAA"}
!4 = metadata !{metadata !5, metadata !5, i64 0}
!5 = metadata !{metadata !"any pointer", metadata !2, i64 0}
!6 = metadata !{metadata !7, metadata !7, i64 0}
!7 = metadata !{metadata !"int", metadata !2, i64 0}
!8 = metadata !{metadata !9, metadata !9, i64 0}
!9 = metadata !{metadata !"short", metadata !2, i64 0}
!10 = metadata !{metadata !11, metadata !5, i64 24}
!11 = metadata !{metadata !"insn_data", metadata !5, i64 0, metadata !5, i64 8, metadata !5, i64 16, metadata !5, i64 24, metadata !2, i64 32, metadata !2, i64 33, metadata !2, i64 34, metadata !2, i64 35}
!12 = metadata !{metadata !13, metadata !2, i64 0}
!13 = metadata !{metadata !"", metadata !2, i64 0, metadata !5, i64 8}
!14 = metadata !{metadata !15, metadata !5, i64 0}
!15 = metadata !{metadata !"insn_operand_data", metadata !5, i64 0, metadata !5, i64 8, metadata !2, i64 16, metadata !2, i64 18, metadata !2, i64 19}
!16 = metadata !{metadata !11, metadata !5, i64 16}
!17 = metadata !{metadata !18, metadata !7, i64 32}
!18 = metadata !{metadata !"", metadata !19, i64 0, metadata !5, i64 8, metadata !5, i64 16, metadata !5, i64 24, metadata !7, i64 32}
!19 = metadata !{metadata !"long long", metadata !2, i64 0}
!20 = metadata !{metadata !19, metadata !19, i64 0}
!21 = metadata !{metadata !22, metadata !5, i64 8}
!22 = metadata !{metadata !"tree_common", metadata !5, i64 0, metadata !5, i64 8, metadata !2, i64 16, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 17, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 18, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19, metadata !7, i64 19}
!23 = metadata !{metadata !24, metadata !7, i64 0}
!24 = metadata !{metadata !"rtvec_def", metadata !7, i64 0, metadata !2, i64 8}
!25 = metadata !{metadata !26, metadata !9, i64 0}
!26 = metadata !{metadata !"algorithm", metadata !9, i64 0, metadata !9, i64 2, metadata !2, i64 4, metadata !2, i64 260}
!27 = metadata !{i64 0, i64 2, metadata !8, i64 2, i64 2, metadata !8, i64 4, i64 256, metadata !1, i64 260, i64 64, metadata !1}
!28 = metadata !{metadata !26, metadata !9, i64 2}
!29 = metadata !{metadata !13, metadata !5, i64 8}
